Require Import coq.
Require Import theory_hol.
Require Import hol_types.
Require Import hol_terms.
Require Import hol_axioms.
Require Import hol_type_abbrevs.
Require Import SURJECTIVE_IFF_INJECTIVE_GEN_term_abbrevs.
Require Import CARD_DELETE_spec.
Require Import CARD_EQ_0_spec.
Require Import CARD_IMAGE_INJ_spec.
Require Import CARD_IMAGE_LE_spec.
Require Import CARD_SUBSET_spec.
Require Import CARD_SUBSET_EQ_spec.
Require Import DISJ_ACI_spec.
Require Import DISJ_ASSOC_spec.
Require Import EXCLUDED_MIDDLE_spec.
Require Import EXTENSION_spec.
Require Import FINITE_DELETE_spec.
Require Import FINITE_IMAGE_spec.
Require Import INT_POS_spec.
Require Import IN_DELETE_spec.
Require Import IN_IMAGE_spec.
Require Import LET_TRANS_spec.
Require Import MEMBER_NOT_EMPTY_spec.
Require Import NOT_LE_spec.
Require Import SUBSET_spec.
Require Import thm0_spec.
Require Import thm1008952_spec.
Require Import thm1009824_spec.
Require Import thm1013352_spec.
Require Import thm1013364_spec.
Require Import thm1032098_spec.
Require Import thm1032781_spec.
Require Import thm10578_spec.
Require Import thm10597_spec.
Require Import thm12653_spec.
Require Import thm1365106_spec.
Require Import thm1365406_spec.
Require Import thm1365721_spec.
Require Import thm1367111_spec.
Require Import thm1367247_spec.
Require Import thm1367248_spec.
Require Import thm1367254_spec.
Require Import thm1367303_spec.
Require Import thm1386578_spec.
Require Import thm1393126_spec.
Require Import thm1396750_spec.
Require Import thm14781_spec.
Require Import thm15222_spec.
Require Import thm16474_spec.
Require Import thm16506_spec.
Require Import thm16507_spec.
Require Import thm16933_spec.
Require Import thm17045_spec.
Require Import thm17160_spec.
Require Import thm17265_spec.
Require Import thm17362_spec.
Require Import thm17500_spec.
Require Import thm17784_spec.
Require Import thm17930_spec.
Require Import thm1823_spec.
Require Import thm18392_spec.
Require Import thm18394_spec.
Require Import thm1842_spec.
Require Import thm1843_spec.
Require Import thm1862_spec.
Require Import thm1863_spec.
Require Import thm18898_spec.
Require Import thm18899_spec.
Require Import thm18904_spec.
Require Import thm18905_spec.
Require Import thm18910_spec.
Require Import thm18911_spec.
Require Import thm18922_spec.
Require Import thm18923_spec.
Require Import thm18928_spec.
Require Import thm18929_spec.
Require Import thm18952_spec.
Require Import thm18953_spec.
Require Import thm19012_spec.
Require Import thm19013_spec.
Require Import thm19158_spec.
Require Import thm19367_spec.
Require Import thm19490_spec.
Require Import thm19699_spec.
Require Import thm1980010_spec.
Require Import thm1980011_spec.
Require Import thm1980026_spec.
Require Import thm1980255_spec.
Require Import thm1980259_spec.
Require Import thm1980260_spec.
Require Import thm1980265_spec.
Require Import thm1980266_spec.
Require Import thm1981473_spec.
Require Import thm1981474_spec.
Require Import thm1981475_spec.
Require Import thm1981613_spec.
Require Import thm1982627_spec.
Require Import thm1982628_spec.
Require Import thm1982713_spec.
Require Import thm1982715_spec.
Require Import thm1982719_spec.
Require Import thm1982721_spec.
Require Import thm1982723_spec.
Require Import thm1982733_spec.
Require Import thm1982753_spec.
Require Import thm1982757_spec.
Require Import thm1982759_spec.
Require Import thm1982763_spec.
Require Import thm1982781_spec.
Require Import thm1982792_spec.
Require Import thm1988287_spec.
Require Import thm1988293_spec.
Require Import thm1988330_spec.
Require Import thm1988332_spec.
Require Import thm1988336_spec.
Require Import thm1988342_spec.
Require Import thm20661_spec.
Require Import thm20662_spec.
Require Import thm20664_spec.
Require Import thm20665_spec.
Require Import thm20668_spec.
Require Import thm20682_spec.
Require Import thm20764_spec.
Require Import thm20780_spec.
Require Import thm20789_spec.
Require Import thm20895_spec.
Require Import thm20904_spec.
Require Import thm21007_spec.
Require Import thm21021_spec.
Require Import thm21028_spec.
Require Import thm21107_spec.
Require Import thm21114_spec.
Require Import thm21182_spec.
Require Import thm21385_spec.
Require Import thm21386_spec.
Require Import thm21394_spec.
Require Import thm21490_spec.
Require Import thm2318496_spec.
Require Import thm2318497_spec.
Require Import thm2318538_spec.
Require Import thm2318539_spec.
Require Import thm2318544_spec.
Require Import thm2318545_spec.
Require Import thm2318568_spec.
Require Import thm2318569_spec.
Require Import thm2318574_spec.
Require Import thm2318575_spec.
Require Import thm2318604_spec.
Require Import thm2841383_spec.
Require Import thm2841384_spec.
Require Import thm2841401_spec.
Require Import thm2841402_spec.
Require Import thm2841413_spec.
Require Import thm2841414_spec.
Require Import thm32_spec.
Require Import thm69_spec.
Require Import thm7_spec.
Require Import thm82_spec.
Require Import thm912739_spec.
Require Import thm940073_spec.
Lemma lem4907452 (t1 : Prop) : term0 t1.
Proof. exact (@lem693 t1). Qed.
Lemma lem4907453 (t1 : Prop) : (term0 t1) = (term1 t1).
Proof. exact (eq_refl (term0 t1)). Qed.
Lemma lem4907454 (t1 : Prop) : term1 t1.
Proof. exact (EQ_MP (@lem4907453 t1) (@lem4907452 t1)). Qed.
Lemma lem4907455 (t1 : Prop) (t2 : Prop) : term2 t1 t2.
Proof. exact (@lem4907454 t1 t2). Qed.
Lemma lem4907456 (t1 : Prop) (t2 : Prop) : (term2 t1 t2) = (term3 t1 t2).
Proof. exact (eq_refl (term2 t1 t2)). Qed.
Lemma lem4907457 (t1 : Prop) (t2 : Prop) : term3 t1 t2.
Proof. exact (EQ_MP (@lem4907456 t1 t2) (@lem4907455 t1 t2)). Qed.
Lemma lem4907458 (t1 : Prop) (t2 : Prop) (t3 : Prop) : term4 t1 t2 t3.
Proof. exact (@lem4907457 t1 t2 t3). Qed.
Lemma lem4907459 (t1 : Prop) (t2 : Prop) (t3 : Prop) : (term4 t1 t2 t3) = ((term5 t1 t2 t3) = (term6 t1 t2 t3)).
Proof. exact (eq_refl (term4 t1 t2 t3)). Qed.
Lemma lem4907460 (t1 : Prop) (t2 : Prop) (t3 : Prop) : (term5 t1 t2 t3) = (term6 t1 t2 t3).
Proof. exact (EQ_MP (@lem4907459 t1 t2 t3) (@lem4907458 t1 t2 t3)). Qed.
Lemma lem4907461 (t1 : Prop) (t2 : Prop) (t3 : Prop) : (term6 t1 t2 t3) = (term5 t1 t2 t3).
Proof. exact (SYM (@lem4907460 t1 t2 t3)). Qed.
Lemma lem4907500 (x : nat) : (term7 x) = (x = (NUMERAL 0)).
Proof. exact (@lem16933 (x = (NUMERAL 0))). Qed.
Lemma lem4907502 (x : nat) : (term8 x) = (term8 x).
Proof. exact (eq_refl (term8 x)). Qed.
Lemma lem4907503 (x : nat) : (term9 x) = (term10 x).
Proof. exact (MK_COMB (@lem4907502 x) (@lem4907500 x)). Qed.
Lemma lem4907508 (x : nat) : (term11 x) = (term11 x).
Proof. exact (eq_refl (term11 x)). Qed.
Lemma lem4907509 (x : nat) : (term12 x) = (term13 x).
Proof. exact (MK_COMB (@lem4907508 x) (@lem4907503 x)). Qed.
Lemma lem4907510 (x : nat) : ((term14 x) = (term15 x)) = (term12 x).
Proof. exact (@lem17500 (term14 x) (term15 x)). Qed.
Lemma lem4907512 (x : nat) : ((term14 x) = (term15 x)) = (term13 x).
Proof. exact (TRANS (@lem4907510 x) (@lem4907509 x)). Qed.
Lemma lem4907513 (x : nat) : (term16 x) = (term17 x).
Proof. exact (@lem1032781 x term18 (term19 x)). Qed.
Lemma lem4907514 (d : nat) (x : nat) : (term20 x d) = (term21 d x).
Proof. exact (eq_refl (term20 x d)). Qed.
Lemma lem4907515 (x : nat) (d : nat) : (term22 x d) = (term22 x d).
Proof. exact (eq_refl (term22 x d)). Qed.
Lemma lem4907516 (d : nat) (x : nat) : (term23 x d) = (term24 d x).
Proof. exact (MK_COMB (@lem4907515 x d) (@lem4907514 d x)). Qed.
Lemma lem4907517 (x : nat) : (term25 x) = (term26 x).
Proof. exact (fun_ext (fun d : nat => @lem4907516 d x)). Qed.
Lemma lem4907518 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4907519 (x : nat) : (term17 x) = (term27 x).
Proof. exact (MK_COMB (@lem4907518) (@lem4907517 x)). Qed.
Lemma lem4907520 (x : nat) : (term16 x) = (term13 x).
Proof. exact (eq_refl (term16 x)). Qed.
Lemma lem4907521 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4907522 (x : nat) : (term28 x) = (term29 x).
Proof. exact (MK_COMB (@lem4907521) (@lem4907520 x)). Qed.
Lemma lem4907523 (x : nat) : ((term16 x) = (term17 x)) = ((term13 x) = (term27 x)).
Proof. exact (MK_COMB (@lem4907522 x) (@lem4907519 x)). Qed.
Lemma lem4907524 (x : nat) : (term13 x) = (term27 x).
Proof. exact (EQ_MP (@lem4907523 x) (@lem4907513 x)). Qed.
Lemma lem4907525 (d : nat) (x : nat) : (term24 d x) = (term24 d x).
Proof. exact (eq_refl (term24 d x)). Qed.
Lemma lem4907526 (x : nat) : (term26 x) = (term26 x).
Proof. exact (fun_ext (fun d : nat => @lem4907525 d x)). Qed.
Lemma lem4907527 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4907528 (x : nat) : (term27 x) = (term27 x).
Proof. exact (MK_COMB (@lem4907527) (@lem4907526 x)). Qed.
Lemma lem4907529 (x : nat) : (term29 x) = (term29 x).
Proof. exact (eq_refl (term29 x)). Qed.
Lemma lem4907530 (x : nat) : ((term13 x) = (term27 x)) = ((term13 x) = (term27 x)).
Proof. exact (MK_COMB (@lem4907529 x) (@lem4907528 x)). Qed.
Lemma lem4907531 (x : nat) : (term13 x) = (term27 x).
Proof. exact (EQ_MP (@lem4907530 x) (@lem4907524 x)). Qed.
Lemma lem4907562 (x : nat) : ((term14 x) = (term15 x)) = (term27 x).
Proof. exact (TRANS (@lem4907512 x) (@lem4907531 x)). Qed.
Lemma lem4907595 (d : nat) (x : nat) : (term21 d x) = (term21 d x).
Proof. exact (eq_refl (term21 d x)). Qed.
Lemma lem4907612 (x : nat) (d : nat) : (term30 x d) = (term30 x d).
Proof. exact (eq_refl (term30 x d)). Qed.
Lemma lem4907619 (d : nat) : (term31 d) = (term32 d).
Proof. exact (@lem1032098 d term18). Qed.
Lemma lem4907622 (x : nat) : (@eq nat x) = (@eq nat x).
Proof. exact (eq_refl (@eq nat x)). Qed.
Lemma lem4907623 (x : nat) (d : nat) : (x = (term31 d)) = (x = (term32 d)).
Proof. exact (MK_COMB (@lem4907622 x) (@lem4907619 d)). Qed.
Lemma lem4907624 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem4907625 (x : nat) (d : nat) : (term33 x d) = (term34 x d).
Proof. exact (MK_COMB (@lem4907624) (@lem4907623 x d)). Qed.
Lemma lem4907626 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4907627 (x : nat) (d : nat) : (term35 x d) = (term36 x d).
Proof. exact (MK_COMB (@lem4907626) (@lem4907625 x d)). Qed.
Lemma lem4907628 (x : nat) (d : nat) : (term37 x d) = (term38 x d).
Proof. exact (MK_COMB (@lem4907627 x d) (@lem4907612 x d)). Qed.
Lemma lem4907629 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4907630 (x : nat) (d : nat) : (term22 x d) = (term39 x d).
Proof. exact (MK_COMB (@lem4907629) (@lem4907628 x d)). Qed.
Lemma lem4907631 (d : nat) (x : nat) : (term24 d x) = (term40 d x).
Proof. exact (MK_COMB (@lem4907630 x d) (@lem4907595 d x)). Qed.
Lemma lem4907632 (x : nat) : (term26 x) = (term41 x).
Proof. exact (fun_ext (fun d : nat => @lem4907631 d x)). Qed.
Lemma lem4907633 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4907634 (x : nat) : (term27 x) = (term42 x).
Proof. exact (MK_COMB (@lem4907633) (@lem4907632 x)). Qed.
Lemma lem4907637 (x : nat) : ((term14 x) = (term15 x)) = (term42 x).
Proof. exact (TRANS (@lem4907562 x) (@lem4907634 x)). Qed.
Lemma lem4907639 (m : nat) (n : nat) : (m = n) = ((int_of_num m) = (int_of_num n)).
Proof. exact (EQ_MP (@lem2841414 m n) (@lem2841413 m n)). Qed.
Lemma lem4907640 (x : nat) (d : nat) : (x = (term32 d)) = ((int_of_num x) = (term43 d)).
Proof. exact (@lem4907639 x (term32 d)). Qed.
Lemma lem4907644 (m : nat) (n : nat) : (term44 m n) = (term45 m n).
Proof. exact (EQ_MP (@lem2841384 m n) (@lem2841383 m n)). Qed.
Lemma lem4907645 (d : nat) : (term43 d) = (term46 d).
Proof. exact (@lem4907644 d term18). Qed.
Lemma lem4907646 (x : nat) : (term47 x) = (term47 x).
Proof. exact (eq_refl (term47 x)). Qed.
Lemma lem4907647 (x : nat) (d : nat) : ((int_of_num x) = (term43 d)) = ((int_of_num x) = (term46 d)).
Proof. exact (MK_COMB (@lem4907646 x) (@lem4907645 d)). Qed.
Lemma lem4907648 (x : nat) (d : nat) : (x = (term32 d)) = ((int_of_num x) = (term46 d)).
Proof. exact (TRANS (@lem4907640 x d) (@lem4907647 x d)). Qed.
Lemma lem4907649 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem4907650 (x : nat) (d : nat) : (term34 x d) = (term48 x d).
Proof. exact (MK_COMB (@lem4907649) (@lem4907648 x d)). Qed.
Lemma lem4907651 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4907652 (x : nat) (d : nat) : (term36 x d) = (term49 x d).
Proof. exact (MK_COMB (@lem4907651) (@lem4907650 x d)). Qed.
Lemma lem4907654 (m : nat) (n : nat) : (Peano.lt m n) = (term50 m n).
Proof. exact (EQ_MP (@lem2841402 m n) (@lem2841401 m n)). Qed.
Lemma lem4907655 (x : nat) : (term51 x) = (term52 x).
Proof. exact (@lem4907654 x term18). Qed.
Lemma lem4907656 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem4907657 (x : nat) : (term53 x) = (term54 x).
Proof. exact (MK_COMB (@lem4907656) (@lem4907655 x)). Qed.
Lemma lem4907658 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4907659 (x : nat) : (term55 x) = (term56 x).
Proof. exact (MK_COMB (@lem4907658) (@lem4907657 x)). Qed.
Lemma lem4907661 (m : nat) (n : nat) : (m = n) = ((int_of_num m) = (int_of_num n)).
Proof. exact (EQ_MP (@lem2841414 m n) (@lem2841413 m n)). Qed.
Lemma lem4907662 (d : nat) : (d = (NUMERAL 0)) = ((int_of_num d) = term57).
Proof. exact (@lem4907661 d (NUMERAL 0)). Qed.
Lemma lem4907665 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem4907666 (d : nat) : (term15 d) = (term58 d).
Proof. exact (MK_COMB (@lem4907665) (@lem4907662 d)). Qed.
Lemma lem4907667 (x : nat) (d : nat) : (term30 x d) = (term59 x d).
Proof. exact (MK_COMB (@lem4907659 x) (@lem4907666 d)). Qed.
Lemma lem4907668 (x : nat) (d : nat) : (term38 x d) = (term60 x d).
Proof. exact (MK_COMB (@lem4907652 x d) (@lem4907667 x d)). Qed.
Lemma lem4907669 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4907670 (x : nat) (d : nat) : (term39 x d) = (term61 x d).
Proof. exact (MK_COMB (@lem4907669) (@lem4907668 x d)). Qed.
Lemma lem4907672 (m : nat) (n : nat) : (Peano.lt m n) = (term50 m n).
Proof. exact (EQ_MP (@lem2841402 m n) (@lem2841401 m n)). Qed.
Lemma lem4907673 (d : nat) (x : nat) : (Peano.lt d x) = (term50 d x).
Proof. exact (@lem4907672 d x). Qed.
Lemma lem4907674 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4907675 (d : nat) (x : nat) : (term62 d x) = (term63 d x).
Proof. exact (MK_COMB (@lem4907674) (@lem4907673 d x)). Qed.
Lemma lem4907677 (m : nat) (n : nat) : (m = n) = ((int_of_num m) = (int_of_num n)).
Proof. exact (EQ_MP (@lem2841414 m n) (@lem2841413 m n)). Qed.
Lemma lem4907678 (x : nat) : (x = (NUMERAL 0)) = ((int_of_num x) = term57).
Proof. exact (@lem4907677 x (NUMERAL 0)). Qed.
Lemma lem4907681 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem4907682 (x : nat) : (term15 x) = (term58 x).
Proof. exact (MK_COMB (@lem4907681) (@lem4907678 x)). Qed.
Lemma lem4907683 (d : nat) (x : nat) : (term64 d x) = (term65 d x).
Proof. exact (MK_COMB (@lem4907675 d x) (@lem4907682 x)). Qed.
Lemma lem4907684 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4907685 (d : nat) (x : nat) : (term66 d x) = (term67 d x).
Proof. exact (MK_COMB (@lem4907684) (@lem4907683 d x)). Qed.
Lemma lem4907687 (m : nat) (n : nat) : (Peano.lt m n) = (term50 m n).
Proof. exact (EQ_MP (@lem2841402 m n) (@lem2841401 m n)). Qed.
Lemma lem4907688 (d : nat) (x : nat) : (Peano.lt d x) = (term50 d x).
Proof. exact (@lem4907687 d x). Qed.
Lemma lem4907689 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem4907690 (d : nat) (x : nat) : (term68 d x) = (term69 d x).
Proof. exact (MK_COMB (@lem4907689) (@lem4907688 d x)). Qed.
Lemma lem4907691 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4907692 (d : nat) (x : nat) : (term70 d x) = (term71 d x).
Proof. exact (MK_COMB (@lem4907691) (@lem4907690 d x)). Qed.
Lemma lem4907694 (m : nat) (n : nat) : (m = n) = ((int_of_num m) = (int_of_num n)).
Proof. exact (EQ_MP (@lem2841414 m n) (@lem2841413 m n)). Qed.
Lemma lem4907695 (x : nat) : (x = (NUMERAL 0)) = ((int_of_num x) = term57).
Proof. exact (@lem4907694 x (NUMERAL 0)). Qed.
Lemma lem4907698 (d : nat) (x : nat) : (term72 d x) = (term73 d x).
Proof. exact (MK_COMB (@lem4907692 d x) (@lem4907695 x)). Qed.
Lemma lem4907699 (d : nat) (x : nat) : (term21 d x) = (term74 d x).
Proof. exact (MK_COMB (@lem4907685 d x) (@lem4907698 d x)). Qed.
Lemma lem4907700 (d : nat) (x : nat) : (term40 d x) = (term75 d x).
Proof. exact (MK_COMB (@lem4907670 x d) (@lem4907699 d x)). Qed.
Lemma lem4907701 (x : nat) : (term41 x) = (term76 x).
Proof. exact (fun_ext (fun d : nat => @lem4907700 d x)). Qed.
Lemma lem4907702 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4907703 (x : nat) : (term42 x) = (term77 x).
Proof. exact (MK_COMB (@lem4907702) (@lem4907701 x)). Qed.
Lemma lem4907704 (x : nat) : ((term14 x) = (term15 x)) = (term77 x).
Proof. exact (TRANS (@lem4907637 x) (@lem4907703 x)). Qed.
Lemma lem4907705 (d : nat) : term78 d.
Proof. exact (@lem2307535 d). Qed.
Lemma lem4907706 (d : nat) : (term78 d) = (term79 d).
Proof. exact (eq_refl (term78 d)). Qed.
Lemma lem4907707 (d : nat) : term79 d.
Proof. exact (EQ_MP (@lem4907706 d) (@lem4907705 d)). Qed.
Lemma lem4907708 (x : nat) : term78 x.
Proof. exact (@lem2307535 x). Qed.
Lemma lem4907709 (x : nat) : (term78 x) = (term79 x).
Proof. exact (eq_refl (term78 x)). Qed.
Lemma lem4907710 (x : nat) : term79 x.
Proof. exact (EQ_MP (@lem4907709 x) (@lem4907708 x)). Qed.
Lemma lem4907711 (_61039 : int) (_61040 : int) : (term80 _61039 _61040) = (term81 _61039 _61040).
Proof. exact (@lem2318604 (term81 _61039 _61040)). Qed.
Lemma lem4907737 (_61040 : int) (_61039 : int) : (term82 _61040 _61039) = (_61040 = (term83 _61039)).
Proof. exact (@lem16933 (_61040 = (term83 _61039))). Qed.
Lemma lem4907740 (_61040 : int) : (term84 _61040) = (term85 _61040).
Proof. exact (@lem16933 (term85 _61040)). Qed.
Lemma lem4907743 (_61039 : int) : (term86 _61039) = (_61039 = term57).
Proof. exact (@lem16933 (_61039 = term57)). Qed.
Lemma lem4907744 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4907745 (_61040 : int) : (term87 _61040) = (term88 _61040).
Proof. exact (MK_COMB (@lem4907744) (@lem4907740 _61040)). Qed.
Lemma lem4907746 (_61040 : int) (_61039 : int) : (term89 _61040 _61039) = (term90 _61040 _61039).
Proof. exact (MK_COMB (@lem4907745 _61040) (@lem4907743 _61039)). Qed.
Lemma lem4907747 (_61040 : int) (_61039 : int) : (term91 _61040 _61039) = (term89 _61040 _61039).
Proof. exact (@lem17160 (term92 _61040) (term93 _61039)). Qed.
Lemma lem4907748 (_61040 : int) (_61039 : int) : (term91 _61040 _61039) = (term90 _61040 _61039).
Proof. exact (TRANS (@lem4907747 _61040 _61039) (@lem4907746 _61040 _61039)). Qed.
Lemma lem4907749 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4907750 (_61040 : int) (_61039 : int) : (term94 _61040 _61039) = (term95 _61040 _61039).
Proof. exact (MK_COMB (@lem4907749) (@lem4907737 _61040 _61039)). Qed.
Lemma lem4907751 (_61040 : int) (_61039 : int) : (term96 _61040 _61039) = (term97 _61040 _61039).
Proof. exact (MK_COMB (@lem4907750 _61040 _61039) (@lem4907748 _61040 _61039)). Qed.
Lemma lem4907752 (_61040 : int) (_61039 : int) : (term98 _61040 _61039) = (term96 _61040 _61039).
Proof. exact (@lem17045 (term99 _61040 _61039) (term100 _61040 _61039)). Qed.
Lemma lem4907753 (_61040 : int) (_61039 : int) : (term98 _61040 _61039) = (term97 _61040 _61039).
Proof. exact (TRANS (@lem4907752 _61040 _61039) (@lem4907751 _61040 _61039)). Qed.
Lemma lem4907757 (_61040 : int) : (term86 _61040) = (_61040 = term57).
Proof. exact (@lem16933 (_61040 = term57)). Qed.
Lemma lem4907759 (_61039 : int) (_61040 : int) : (term101 _61039 _61040) = (term101 _61039 _61040).
Proof. exact (eq_refl (term101 _61039 _61040)). Qed.
Lemma lem4907760 (_61039 : int) (_61040 : int) : (term102 _61039 _61040) = (term103 _61039 _61040).
Proof. exact (MK_COMB (@lem4907759 _61039 _61040) (@lem4907757 _61040)). Qed.
Lemma lem4907761 (_61039 : int) (_61040 : int) : (term104 _61039 _61040) = (term102 _61039 _61040).
Proof. exact (@lem17045 (int_lt _61039 _61040) (term93 _61040)). Qed.
Lemma lem4907762 (_61039 : int) (_61040 : int) : (term104 _61039 _61040) = (term103 _61039 _61040).
Proof. exact (TRANS (@lem4907761 _61039 _61040) (@lem4907760 _61039 _61040)). Qed.
Lemma lem4907765 (_61039 : int) (_61040 : int) : (term105 _61039 _61040) = (int_lt _61039 _61040).
Proof. exact (@lem16933 (int_lt _61039 _61040)). Qed.
Lemma lem4907766 (_61040 : int) : (term93 _61040) = (term93 _61040).
Proof. exact (eq_refl (term93 _61040)). Qed.
Lemma lem4907767 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4907768 (_61039 : int) (_61040 : int) : (term106 _61039 _61040) = (term107 _61039 _61040).
Proof. exact (MK_COMB (@lem4907767) (@lem4907765 _61039 _61040)). Qed.
Lemma lem4907769 (_61039 : int) (_61040 : int) : (term108 _61039 _61040) = (term109 _61039 _61040).
Proof. exact (MK_COMB (@lem4907768 _61039 _61040) (@lem4907766 _61040)). Qed.
Lemma lem4907770 (_61039 : int) (_61040 : int) : (term110 _61039 _61040) = (term108 _61039 _61040).
Proof. exact (@lem17045 (term111 _61039 _61040) (_61040 = term57)). Qed.
Lemma lem4907771 (_61039 : int) (_61040 : int) : (term110 _61039 _61040) = (term109 _61039 _61040).
Proof. exact (TRANS (@lem4907770 _61039 _61040) (@lem4907769 _61039 _61040)). Qed.
Lemma lem4907772 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4907773 (_61039 : int) (_61040 : int) : (term112 _61039 _61040) = (term113 _61039 _61040).
Proof. exact (MK_COMB (@lem4907772) (@lem4907762 _61039 _61040)). Qed.
Lemma lem4907774 (_61039 : int) (_61040 : int) : (term114 _61039 _61040) = (term115 _61039 _61040).
Proof. exact (MK_COMB (@lem4907773 _61039 _61040) (@lem4907771 _61039 _61040)). Qed.
Lemma lem4907775 (_61039 : int) (_61040 : int) : (term116 _61039 _61040) = (term114 _61039 _61040).
Proof. exact (@lem17160 (term117 _61039 _61040) (term118 _61039 _61040)). Qed.
Lemma lem4907776 (_61039 : int) (_61040 : int) : (term116 _61039 _61040) = (term115 _61039 _61040).
Proof. exact (TRANS (@lem4907775 _61039 _61040) (@lem4907774 _61039 _61040)). Qed.
Lemma lem4907777 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4907778 (_61040 : int) (_61039 : int) : (term119 _61040 _61039) = (term120 _61040 _61039).
Proof. exact (MK_COMB (@lem4907777) (@lem4907753 _61040 _61039)). Qed.
Lemma lem4907779 (_61039 : int) (_61040 : int) : (term121 _61039 _61040) = (term122 _61039 _61040).
Proof. exact (MK_COMB (@lem4907778 _61040 _61039) (@lem4907776 _61039 _61040)). Qed.
Lemma lem4907780 (_61039 : int) (_61040 : int) : (term123 _61039 _61040) = (term121 _61039 _61040).
Proof. exact (@lem17160 (term124 _61040 _61039) (term125 _61039 _61040)). Qed.
Lemma lem4907781 (_61039 : int) (_61040 : int) : (term123 _61039 _61040) = (term122 _61039 _61040).
Proof. exact (TRANS (@lem4907780 _61039 _61040) (@lem4907779 _61039 _61040)). Qed.
Lemma lem4907783 (_61040 : int) : (term126 _61040) = (term126 _61040).
Proof. exact (eq_refl (term126 _61040)). Qed.
Lemma lem4907784 (_61039 : int) (_61040 : int) : (term127 _61039 _61040) = (term128 _61039 _61040).
Proof. exact (MK_COMB (@lem4907783 _61040) (@lem4907781 _61039 _61040)). Qed.
Lemma lem4907785 (_61039 : int) (_61040 : int) : (term129 _61039 _61040) = (term127 _61039 _61040).
Proof. exact (@lem17362 (term130 _61040) (term131 _61039 _61040)). Qed.
Lemma lem4907786 (_61039 : int) (_61040 : int) : (term129 _61039 _61040) = (term128 _61039 _61040).
Proof. exact (TRANS (@lem4907785 _61039 _61040) (@lem4907784 _61039 _61040)). Qed.
Lemma lem4907788 (_61039 : int) : (term126 _61039) = (term126 _61039).
Proof. exact (eq_refl (term126 _61039)). Qed.
Lemma lem4907789 (_61039 : int) (_61040 : int) : (term132 _61039 _61040) = (term133 _61039 _61040).
Proof. exact (MK_COMB (@lem4907788 _61039) (@lem4907786 _61039 _61040)). Qed.
Lemma lem4907790 (_61039 : int) (_61040 : int) : (term134 _61039 _61040) = (term132 _61039 _61040).
Proof. exact (@lem17362 (term130 _61039) (term135 _61039 _61040)). Qed.
Lemma lem4907830 (_61039 : int) (_61040 : int) : (term134 _61039 _61040) = (term133 _61039 _61040).
Proof. exact (TRANS (@lem4907790 _61039 _61040) (@lem4907789 _61039 _61040)). Qed.
Lemma lem4907833 (x : int) (y : int) : (int_le x y) = (term136 x y).
Proof. exact (EQ_MP (@lem2318569 x y) (@lem2318568 x y)). Qed.
Lemma lem4907834 (_61039 : int) : (term130 _61039) = (term137 _61039).
Proof. exact (@lem4907833 term57 _61039). Qed.
Lemma lem4907836 (n : nat) : (term138 n) = (real_of_num n).
Proof. exact (EQ_MP (@lem2318545 n) (@lem2318544 n)). Qed.
Lemma lem4907837 : term139 = term140.
Proof. exact (@lem4907836 (NUMERAL 0)). Qed.
Lemma lem4907838 : real_le = real_le.
Proof. exact (eq_refl real_le). Qed.
Lemma lem4907839 : term141 = term142.
Proof. exact (MK_COMB (@lem4907838) (@lem4907837)). Qed.
Lemma lem4907840 (_61039 : int) : (real_of_int _61039) = (real_of_int _61039).
Proof. exact (eq_refl (real_of_int _61039)). Qed.
Lemma lem4907841 (_61039 : int) : (term137 _61039) = (term143 _61039).
Proof. exact (MK_COMB (@lem4907839) (@lem4907840 _61039)). Qed.
Lemma lem4907843 (_61039 : int) : (term130 _61039) = (term143 _61039).
Proof. exact (TRANS (@lem4907834 _61039) (@lem4907841 _61039)). Qed.
Lemma lem4907846 (x : int) (y : int) : (int_le x y) = (term136 x y).
Proof. exact (EQ_MP (@lem2318569 x y) (@lem2318568 x y)). Qed.
Lemma lem4907847 (_61040 : int) : (term130 _61040) = (term137 _61040).
Proof. exact (@lem4907846 term57 _61040). Qed.
Lemma lem4907849 (n : nat) : (term138 n) = (real_of_num n).
Proof. exact (EQ_MP (@lem2318545 n) (@lem2318544 n)). Qed.
Lemma lem4907850 : term139 = term140.
Proof. exact (@lem4907849 (NUMERAL 0)). Qed.
Lemma lem4907851 : real_le = real_le.
Proof. exact (eq_refl real_le). Qed.
Lemma lem4907852 : term141 = term142.
Proof. exact (MK_COMB (@lem4907851) (@lem4907850)). Qed.
Lemma lem4907853 (_61040 : int) : (real_of_int _61040) = (real_of_int _61040).
Proof. exact (eq_refl (real_of_int _61040)). Qed.
Lemma lem4907854 (_61040 : int) : (term137 _61040) = (term143 _61040).
Proof. exact (MK_COMB (@lem4907852) (@lem4907853 _61040)). Qed.
Lemma lem4907856 (_61040 : int) : (term130 _61040) = (term143 _61040).
Proof. exact (TRANS (@lem4907847 _61040) (@lem4907854 _61040)). Qed.
Lemma lem4907859 (x : int) (y : int) : (x = y) = ((real_of_int x) = (real_of_int y)).
Proof. exact (EQ_MP (@lem2318575 x y) (@lem2318574 x y)). Qed.
Lemma lem4907860 (_61040 : int) (_61039 : int) : (_61040 = (term83 _61039)) = ((real_of_int _61040) = (term144 _61039)).
Proof. exact (@lem4907859 _61040 (term83 _61039)). Qed.
Lemma lem4907864 (x : int) (y : int) : (term145 x y) = (term146 x y).
Proof. exact (EQ_MP (@lem2318539 x y) (@lem2318538 x y)). Qed.
Lemma lem4907865 (_61039 : int) : (term144 _61039) = (term147 _61039).
Proof. exact (@lem4907864 _61039 term148). Qed.
Lemma lem4907867 (n : nat) : (term138 n) = (real_of_num n).
Proof. exact (EQ_MP (@lem2318545 n) (@lem2318544 n)). Qed.
Lemma lem4907868 : term149 = term150.
Proof. exact (@lem4907867 term18). Qed.
Lemma lem4907869 (_61039 : int) : (term151 _61039) = (term151 _61039).
Proof. exact (eq_refl (term151 _61039)). Qed.
Lemma lem4907870 (_61039 : int) : (term147 _61039) = (term152 _61039).
Proof. exact (MK_COMB (@lem4907869 _61039) (@lem4907868)). Qed.
Lemma lem4907871 (_61039 : int) : (term144 _61039) = (term152 _61039).
Proof. exact (TRANS (@lem4907865 _61039) (@lem4907870 _61039)). Qed.
Lemma lem4907872 (_61040 : int) : (term153 _61040) = (term153 _61040).
Proof. exact (eq_refl (term153 _61040)). Qed.
Lemma lem4907873 (_61040 : int) (_61039 : int) : ((real_of_int _61040) = (term144 _61039)) = ((real_of_int _61040) = (term152 _61039)).
Proof. exact (MK_COMB (@lem4907872 _61040) (@lem4907871 _61039)). Qed.
Lemma lem4907875 (_61040 : int) (_61039 : int) : (_61040 = (term83 _61039)) = ((real_of_int _61040) = (term152 _61039)).
Proof. exact (TRANS (@lem4907860 _61040 _61039) (@lem4907873 _61040 _61039)). Qed.
Lemma lem4907877 (x : int) (y : int) : (int_lt x y) = (term154 x y).
Proof. exact (proj2 (@lem2318497 x y)). Qed.
Lemma lem4907878 (_61040 : int) : (term85 _61040) = (term155 _61040).
Proof. exact (@lem4907877 _61040 term148). Qed.
Lemma lem4907880 (x : int) (y : int) : (int_le x y) = (term136 x y).
Proof. exact (EQ_MP (@lem2318569 x y) (@lem2318568 x y)). Qed.
Lemma lem4907881 (_61040 : int) : (term155 _61040) = (term156 _61040).
Proof. exact (@lem4907880 (term83 _61040) term148). Qed.
Lemma lem4907883 (x : int) (y : int) : (term145 x y) = (term146 x y).
Proof. exact (EQ_MP (@lem2318539 x y) (@lem2318538 x y)). Qed.
Lemma lem4907884 (_61040 : int) : (term144 _61040) = (term147 _61040).
Proof. exact (@lem4907883 _61040 term148). Qed.
Lemma lem4907886 (n : nat) : (term138 n) = (real_of_num n).
Proof. exact (EQ_MP (@lem2318545 n) (@lem2318544 n)). Qed.
Lemma lem4907887 : term149 = term150.
Proof. exact (@lem4907886 term18). Qed.
Lemma lem4907888 (_61040 : int) : (term151 _61040) = (term151 _61040).
Proof. exact (eq_refl (term151 _61040)). Qed.
Lemma lem4907889 (_61040 : int) : (term147 _61040) = (term152 _61040).
Proof. exact (MK_COMB (@lem4907888 _61040) (@lem4907887)). Qed.
Lemma lem4907890 (_61040 : int) : (term144 _61040) = (term152 _61040).
Proof. exact (TRANS (@lem4907884 _61040) (@lem4907889 _61040)). Qed.
Lemma lem4907891 : real_le = real_le.
Proof. exact (eq_refl real_le). Qed.
Lemma lem4907892 (_61040 : int) : (term157 _61040) = (term158 _61040).
Proof. exact (MK_COMB (@lem4907891) (@lem4907890 _61040)). Qed.
Lemma lem4907894 (n : nat) : (term138 n) = (real_of_num n).
Proof. exact (EQ_MP (@lem2318545 n) (@lem2318544 n)). Qed.
Lemma lem4907895 : term149 = term150.
Proof. exact (@lem4907894 term18). Qed.
Lemma lem4907896 (_61040 : int) : (term156 _61040) = (term159 _61040).
Proof. exact (MK_COMB (@lem4907892 _61040) (@lem4907895)). Qed.
Lemma lem4907897 (_61040 : int) : (term155 _61040) = (term159 _61040).
Proof. exact (TRANS (@lem4907881 _61040) (@lem4907896 _61040)). Qed.
Lemma lem4907898 (_61040 : int) : (term85 _61040) = (term159 _61040).
Proof. exact (TRANS (@lem4907878 _61040) (@lem4907897 _61040)). Qed.
Lemma lem4907901 (x : int) (y : int) : (x = y) = ((real_of_int x) = (real_of_int y)).
Proof. exact (EQ_MP (@lem2318575 x y) (@lem2318574 x y)). Qed.
Lemma lem4907902 (_61039 : int) : (_61039 = term57) = ((real_of_int _61039) = term139).
Proof. exact (@lem4907901 _61039 term57). Qed.
Lemma lem4907906 (n : nat) : (term138 n) = (real_of_num n).
Proof. exact (EQ_MP (@lem2318545 n) (@lem2318544 n)). Qed.
Lemma lem4907907 : term139 = term140.
Proof. exact (@lem4907906 (NUMERAL 0)). Qed.
Lemma lem4907908 (_61039 : int) : (term153 _61039) = (term153 _61039).
Proof. exact (eq_refl (term153 _61039)). Qed.
Lemma lem4907909 (_61039 : int) : ((real_of_int _61039) = term139) = ((real_of_int _61039) = term140).
Proof. exact (MK_COMB (@lem4907908 _61039) (@lem4907907)). Qed.
Lemma lem4907911 (_61039 : int) : (_61039 = term57) = ((real_of_int _61039) = term140).
Proof. exact (TRANS (@lem4907902 _61039) (@lem4907909 _61039)). Qed.
Lemma lem4907912 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4907913 (_61040 : int) : (term88 _61040) = (term160 _61040).
Proof. exact (MK_COMB (@lem4907912) (@lem4907898 _61040)). Qed.
Lemma lem4907914 (_61040 : int) (_61039 : int) : (term90 _61040 _61039) = (term161 _61040 _61039).
Proof. exact (MK_COMB (@lem4907913 _61040) (@lem4907911 _61039)). Qed.
Lemma lem4907915 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4907916 (_61040 : int) (_61039 : int) : (term95 _61040 _61039) = (term162 _61040 _61039).
Proof. exact (MK_COMB (@lem4907915) (@lem4907875 _61040 _61039)). Qed.
Lemma lem4907917 (_61040 : int) (_61039 : int) : (term97 _61040 _61039) = (term163 _61040 _61039).
Proof. exact (MK_COMB (@lem4907916 _61040 _61039) (@lem4907914 _61040 _61039)). Qed.
Lemma lem4907919 (y : int) (x : int) : (term111 x y) = (int_le y x).
Proof. exact (proj1 (@lem2318496 x y)). Qed.
Lemma lem4907920 (_61040 : int) (_61039 : int) : (term111 _61039 _61040) = (int_le _61040 _61039).
Proof. exact (@lem4907919 _61040 _61039). Qed.
Lemma lem4907922 (x : int) (y : int) : (int_le x y) = (term136 x y).
Proof. exact (EQ_MP (@lem2318569 x y) (@lem2318568 x y)). Qed.
Lemma lem4907923 (_61040 : int) (_61039 : int) : (int_le _61040 _61039) = (term136 _61040 _61039).
Proof. exact (@lem4907922 _61040 _61039). Qed.
Lemma lem4907924 (_61040 : int) (_61039 : int) : (term111 _61039 _61040) = (term136 _61040 _61039).
Proof. exact (TRANS (@lem4907920 _61040 _61039) (@lem4907923 _61040 _61039)). Qed.
Lemma lem4907927 (x : int) (y : int) : (x = y) = ((real_of_int x) = (real_of_int y)).
Proof. exact (EQ_MP (@lem2318575 x y) (@lem2318574 x y)). Qed.
Lemma lem4907928 (_61040 : int) : (_61040 = term57) = ((real_of_int _61040) = term139).
Proof. exact (@lem4907927 _61040 term57). Qed.
Lemma lem4907932 (n : nat) : (term138 n) = (real_of_num n).
Proof. exact (EQ_MP (@lem2318545 n) (@lem2318544 n)). Qed.
Lemma lem4907933 : term139 = term140.
Proof. exact (@lem4907932 (NUMERAL 0)). Qed.
Lemma lem4907934 (_61040 : int) : (term153 _61040) = (term153 _61040).
Proof. exact (eq_refl (term153 _61040)). Qed.
Lemma lem4907935 (_61040 : int) : ((real_of_int _61040) = term139) = ((real_of_int _61040) = term140).
Proof. exact (MK_COMB (@lem4907934 _61040) (@lem4907933)). Qed.
Lemma lem4907937 (_61040 : int) : (_61040 = term57) = ((real_of_int _61040) = term140).
Proof. exact (TRANS (@lem4907928 _61040) (@lem4907935 _61040)). Qed.
Lemma lem4907938 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4907939 (_61040 : int) (_61039 : int) : (term101 _61039 _61040) = (term164 _61040 _61039).
Proof. exact (MK_COMB (@lem4907938) (@lem4907924 _61040 _61039)). Qed.
Lemma lem4907940 (_61039 : int) (_61040 : int) : (term103 _61039 _61040) = (term165 _61039 _61040).
Proof. exact (MK_COMB (@lem4907939 _61040 _61039) (@lem4907937 _61040)). Qed.
Lemma lem4907942 (x : int) (y : int) : (int_lt x y) = (term154 x y).
Proof. exact (proj2 (@lem2318497 x y)). Qed.
Lemma lem4907943 (_61039 : int) (_61040 : int) : (int_lt _61039 _61040) = (term154 _61039 _61040).
Proof. exact (@lem4907942 _61039 _61040). Qed.
Lemma lem4907945 (x : int) (y : int) : (int_le x y) = (term136 x y).
Proof. exact (EQ_MP (@lem2318569 x y) (@lem2318568 x y)). Qed.
Lemma lem4907946 (_61039 : int) (_61040 : int) : (term154 _61039 _61040) = (term166 _61039 _61040).
Proof. exact (@lem4907945 (term83 _61039) _61040). Qed.
Lemma lem4907948 (x : int) (y : int) : (term145 x y) = (term146 x y).
Proof. exact (EQ_MP (@lem2318539 x y) (@lem2318538 x y)). Qed.
Lemma lem4907949 (_61039 : int) : (term144 _61039) = (term147 _61039).
Proof. exact (@lem4907948 _61039 term148). Qed.
Lemma lem4907951 (n : nat) : (term138 n) = (real_of_num n).
Proof. exact (EQ_MP (@lem2318545 n) (@lem2318544 n)). Qed.
Lemma lem4907952 : term149 = term150.
Proof. exact (@lem4907951 term18). Qed.
Lemma lem4907953 (_61039 : int) : (term151 _61039) = (term151 _61039).
Proof. exact (eq_refl (term151 _61039)). Qed.
Lemma lem4907954 (_61039 : int) : (term147 _61039) = (term152 _61039).
Proof. exact (MK_COMB (@lem4907953 _61039) (@lem4907952)). Qed.
Lemma lem4907955 (_61039 : int) : (term144 _61039) = (term152 _61039).
Proof. exact (TRANS (@lem4907949 _61039) (@lem4907954 _61039)). Qed.
Lemma lem4907956 : real_le = real_le.
Proof. exact (eq_refl real_le). Qed.
Lemma lem4907957 (_61039 : int) : (term157 _61039) = (term158 _61039).
Proof. exact (MK_COMB (@lem4907956) (@lem4907955 _61039)). Qed.
Lemma lem4907958 (_61040 : int) : (real_of_int _61040) = (real_of_int _61040).
Proof. exact (eq_refl (real_of_int _61040)). Qed.
Lemma lem4907959 (_61039 : int) (_61040 : int) : (term166 _61039 _61040) = (term167 _61039 _61040).
Proof. exact (MK_COMB (@lem4907957 _61039) (@lem4907958 _61040)). Qed.
Lemma lem4907960 (_61039 : int) (_61040 : int) : (term154 _61039 _61040) = (term167 _61039 _61040).
Proof. exact (TRANS (@lem4907946 _61039 _61040) (@lem4907959 _61039 _61040)). Qed.
Lemma lem4907961 (_61039 : int) (_61040 : int) : (int_lt _61039 _61040) = (term167 _61039 _61040).
Proof. exact (TRANS (@lem4907943 _61039 _61040) (@lem4907960 _61039 _61040)). Qed.
Lemma lem4907963 (y : int) (x : int) : (term168 x y) = (term169 y x).
Proof. exact (proj1 (@lem2318497 x y)). Qed.
Lemma lem4907964 (_61040 : int) : (term93 _61040) = (term170 _61040).
Proof. exact (@lem4907963 term57 _61040). Qed.
Lemma lem4907966 (x : int) (y : int) : (int_le x y) = (term136 x y).
Proof. exact (EQ_MP (@lem2318569 x y) (@lem2318568 x y)). Qed.
Lemma lem4907967 (_61040 : int) : (term171 _61040) = (term172 _61040).
Proof. exact (@lem4907966 (term83 _61040) term57). Qed.
Lemma lem4907969 (x : int) (y : int) : (term145 x y) = (term146 x y).
Proof. exact (EQ_MP (@lem2318539 x y) (@lem2318538 x y)). Qed.
Lemma lem4907970 (_61040 : int) : (term144 _61040) = (term147 _61040).
Proof. exact (@lem4907969 _61040 term148). Qed.
Lemma lem4907972 (n : nat) : (term138 n) = (real_of_num n).
Proof. exact (EQ_MP (@lem2318545 n) (@lem2318544 n)). Qed.
Lemma lem4907973 : term149 = term150.
Proof. exact (@lem4907972 term18). Qed.
Lemma lem4907974 (_61040 : int) : (term151 _61040) = (term151 _61040).
Proof. exact (eq_refl (term151 _61040)). Qed.
Lemma lem4907975 (_61040 : int) : (term147 _61040) = (term152 _61040).
Proof. exact (MK_COMB (@lem4907974 _61040) (@lem4907973)). Qed.
Lemma lem4907976 (_61040 : int) : (term144 _61040) = (term152 _61040).
Proof. exact (TRANS (@lem4907970 _61040) (@lem4907975 _61040)). Qed.
Lemma lem4907977 : real_le = real_le.
Proof. exact (eq_refl real_le). Qed.
Lemma lem4907978 (_61040 : int) : (term157 _61040) = (term158 _61040).
Proof. exact (MK_COMB (@lem4907977) (@lem4907976 _61040)). Qed.
Lemma lem4907980 (n : nat) : (term138 n) = (real_of_num n).
Proof. exact (EQ_MP (@lem2318545 n) (@lem2318544 n)). Qed.
Lemma lem4907981 : term139 = term140.
Proof. exact (@lem4907980 (NUMERAL 0)). Qed.
Lemma lem4907982 (_61040 : int) : (term172 _61040) = (term173 _61040).
Proof. exact (MK_COMB (@lem4907978 _61040) (@lem4907981)). Qed.
Lemma lem4907983 (_61040 : int) : (term171 _61040) = (term173 _61040).
Proof. exact (TRANS (@lem4907967 _61040) (@lem4907982 _61040)). Qed.
Lemma lem4907984 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4907985 (_61040 : int) : (term174 _61040) = (term175 _61040).
Proof. exact (MK_COMB (@lem4907984) (@lem4907983 _61040)). Qed.
Lemma lem4907987 (x : int) (y : int) : (int_le x y) = (term136 x y).
Proof. exact (EQ_MP (@lem2318569 x y) (@lem2318568 x y)). Qed.
Lemma lem4907988 (_61040 : int) : (term176 _61040) = (term177 _61040).
Proof. exact (@lem4907987 term178 _61040). Qed.
Lemma lem4907990 (x : int) (y : int) : (term145 x y) = (term146 x y).
Proof. exact (EQ_MP (@lem2318539 x y) (@lem2318538 x y)). Qed.
Lemma lem4907991 : term179 = term180.
Proof. exact (@lem4907990 term57 term148). Qed.
Lemma lem4907993 (n : nat) : (term138 n) = (real_of_num n).
Proof. exact (EQ_MP (@lem2318545 n) (@lem2318544 n)). Qed.
Lemma lem4907994 : term139 = term140.
Proof. exact (@lem4907993 (NUMERAL 0)). Qed.
Lemma lem4907995 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem4907996 : term181 = term182.
Proof. exact (MK_COMB (@lem4907995) (@lem4907994)). Qed.
Lemma lem4907998 (n : nat) : (term138 n) = (real_of_num n).
Proof. exact (EQ_MP (@lem2318545 n) (@lem2318544 n)). Qed.
Lemma lem4907999 : term149 = term150.
Proof. exact (@lem4907998 term18). Qed.
Lemma lem4908000 : term180 = term183.
Proof. exact (MK_COMB (@lem4907996) (@lem4907999)). Qed.
Lemma lem4908001 : term179 = term183.
Proof. exact (TRANS (@lem4907991) (@lem4908000)). Qed.
Lemma lem4908002 : real_le = real_le.
Proof. exact (eq_refl real_le). Qed.
Lemma lem4908003 : term184 = term185.
Proof. exact (MK_COMB (@lem4908002) (@lem4908001)). Qed.
Lemma lem4908004 (_61040 : int) : (real_of_int _61040) = (real_of_int _61040).
Proof. exact (eq_refl (real_of_int _61040)). Qed.
Lemma lem4908005 (_61040 : int) : (term177 _61040) = (term186 _61040).
Proof. exact (MK_COMB (@lem4908003) (@lem4908004 _61040)). Qed.
Lemma lem4908006 (_61040 : int) : (term176 _61040) = (term186 _61040).
Proof. exact (TRANS (@lem4907988 _61040) (@lem4908005 _61040)). Qed.
Lemma lem4908007 (_61040 : int) : (term170 _61040) = (term187 _61040).
Proof. exact (MK_COMB (@lem4907985 _61040) (@lem4908006 _61040)). Qed.
Lemma lem4908008 (_61040 : int) : (term93 _61040) = (term187 _61040).
Proof. exact (TRANS (@lem4907964 _61040) (@lem4908007 _61040)). Qed.
Lemma lem4908009 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4908010 (_61039 : int) (_61040 : int) : (term107 _61039 _61040) = (term188 _61039 _61040).
Proof. exact (MK_COMB (@lem4908009) (@lem4907961 _61039 _61040)). Qed.
Lemma lem4908011 (_61039 : int) (_61040 : int) : (term109 _61039 _61040) = (term189 _61039 _61040).
Proof. exact (MK_COMB (@lem4908010 _61039 _61040) (@lem4908008 _61040)). Qed.
Lemma lem4908012 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4908013 (_61039 : int) (_61040 : int) : (term113 _61039 _61040) = (term190 _61039 _61040).
Proof. exact (MK_COMB (@lem4908012) (@lem4907940 _61039 _61040)). Qed.
Lemma lem4908014 (_61039 : int) (_61040 : int) : (term115 _61039 _61040) = (term191 _61039 _61040).
Proof. exact (MK_COMB (@lem4908013 _61039 _61040) (@lem4908011 _61039 _61040)). Qed.
Lemma lem4908015 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4908016 (_61040 : int) (_61039 : int) : (term120 _61040 _61039) = (term192 _61040 _61039).
Proof. exact (MK_COMB (@lem4908015) (@lem4907917 _61040 _61039)). Qed.
Lemma lem4908017 (_61039 : int) (_61040 : int) : (term122 _61039 _61040) = (term193 _61039 _61040).
Proof. exact (MK_COMB (@lem4908016 _61040 _61039) (@lem4908014 _61039 _61040)). Qed.
Lemma lem4908018 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4908019 (_61040 : int) : (term126 _61040) = (term194 _61040).
Proof. exact (MK_COMB (@lem4908018) (@lem4907856 _61040)). Qed.
Lemma lem4908020 (_61039 : int) (_61040 : int) : (term128 _61039 _61040) = (term195 _61039 _61040).
Proof. exact (MK_COMB (@lem4908019 _61040) (@lem4908017 _61039 _61040)). Qed.
Lemma lem4908021 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4908022 (_61039 : int) : (term126 _61039) = (term194 _61039).
Proof. exact (MK_COMB (@lem4908021) (@lem4907843 _61039)). Qed.
Lemma lem4908023 (_61039 : int) (_61040 : int) : (term133 _61039 _61040) = (term196 _61039 _61040).
Proof. exact (MK_COMB (@lem4908022 _61039) (@lem4908020 _61039 _61040)). Qed.
Lemma lem4908024 (_61039 : int) (_61040 : int) : (term134 _61039 _61040) = (term196 _61039 _61040).
Proof. exact (TRANS (@lem4907830 _61039 _61040) (@lem4908023 _61039 _61040)). Qed.
Lemma lem4908028 (t : Prop) : (term197 t) = t.
Proof. exact (EQ_MP (@lem16507 t) (@lem16506 t)). Qed.
Lemma lem4908124 (_61039 : int) (_61040 : int) : (term198 _61039 _61040) = (term196 _61039 _61040).
Proof. exact (@lem4908028 (term196 _61039 _61040)). Qed.
Lemma lem4908125 (_61039 : int) : (term143 _61039) = (term199 _61039).
Proof. exact (@lem1988287 (real_of_int _61039) term140). Qed.
Lemma lem4908131 (_61039 : int) : (term200 _61039) = (term201 _61039).
Proof. exact (@lem1982792 (real_of_int _61039) term140). Qed.
Lemma lem4908133 (x : nat) : (real_of_num x) = (term202 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem4908134 : term140 = term203.
Proof. exact (@lem4908133 (NUMERAL 0)). Qed.
Lemma lem4908136 (x : nat) : (term204 x) = (term205 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem4908137 : term206 = term207.
Proof. exact (@lem4908136 term18). Qed.
Lemma lem4908138 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem4908139 : term208 = term209.
Proof. exact (MK_COMB (@lem4908138) (@lem4908137)). Qed.
Lemma lem4908140 : term210 = term211.
Proof. exact (MK_COMB (@lem4908139) (@lem4908134)). Qed.
Lemma lem4908141 : term211 = term212.
Proof. exact (@lem1981613 term206 term140 term150 term150). Qed.
Lemma lem4908143 (m : nat) (n : nat) : (term213 m n) = (term214 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem4908144 : term215 = term216.
Proof. exact (@lem4908143 term18 term18). Qed.
Lemma lem4908145 : (term217 = (BIT1 0)) = (term218 = term18).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem4908146 : term218 = term18.
Proof. exact (EQ_MP (@lem4908145) (@lem940073)). Qed.
Lemma lem4908147 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem4908148 : term216 = term150.
Proof. exact (MK_COMB (@lem4908147) (@lem4908146)). Qed.
Lemma lem4908149 : term215 = term150.
Proof. exact (TRANS (@lem4908144) (@lem4908148)). Qed.
Lemma lem4908151 (x : nat) : (term219 x) = term140.
Proof. exact (proj2 (@lem1367254 x)). Qed.
Lemma lem4908152 : term210 = term140.
Proof. exact (@lem4908151 term18). Qed.
Lemma lem4908153 : real_div = real_div.
Proof. exact (eq_refl real_div). Qed.
Lemma lem4908154 : term220 = term221.
Proof. exact (MK_COMB (@lem4908153) (@lem4908152)). Qed.
Lemma lem4908155 : term212 = term203.
Proof. exact (MK_COMB (@lem4908154) (@lem4908149)). Qed.
Lemma lem4908156 : term211 = term203.
Proof. exact (TRANS (@lem4908141) (@lem4908155)). Qed.
Lemma lem4908157 : term210 = term203.
Proof. exact (TRANS (@lem4908140) (@lem4908156)). Qed.
Lemma lem4908159 (x : real) : (term222 x) = x.
Proof. exact (EQ_MP (@lem1982628 x) (@lem1982627 x)). Qed.
Lemma lem4908160 : term203 = term140.
Proof. exact (@lem4908159 term140). Qed.
Lemma lem4908161 : term210 = term140.
Proof. exact (TRANS (@lem4908157) (@lem4908160)). Qed.
Lemma lem4908162 (_61039 : int) : (term151 _61039) = (term151 _61039).
Proof. exact (eq_refl (term151 _61039)). Qed.
Lemma lem4908163 (_61039 : int) : (term201 _61039) = (term223 _61039).
Proof. exact (MK_COMB (@lem4908162 _61039) (@lem4908161)). Qed.
Lemma lem4908164 (_61039 : int) : (term223 _61039) = (real_of_int _61039).
Proof. exact (@lem1982723 (real_of_int _61039)). Qed.
Lemma lem4908165 (_61039 : int) : (term201 _61039) = (real_of_int _61039).
Proof. exact (TRANS (@lem4908163 _61039) (@lem4908164 _61039)). Qed.
Lemma lem4908167 (_61039 : int) : (term200 _61039) = (real_of_int _61039).
Proof. exact (TRANS (@lem4908131 _61039) (@lem4908165 _61039)). Qed.
Lemma lem4908168 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem4908169 (_61039 : int) : (term224 _61039) = (term225 _61039).
Proof. exact (MK_COMB (@lem4908168) (@lem4908167 _61039)). Qed.
Lemma lem4908170 : term140 = term140.
Proof. exact (eq_refl term140). Qed.
Lemma lem4908171 (_61039 : int) : (term199 _61039) = (term226 _61039).
Proof. exact (MK_COMB (@lem4908169 _61039) (@lem4908170)). Qed.
Lemma lem4908172 (_61039 : int) : (term143 _61039) = (term226 _61039).
Proof. exact (TRANS (@lem4908125 _61039) (@lem4908171 _61039)). Qed.
Lemma lem4908173 (_61040 : int) : (term143 _61040) = (term199 _61040).
Proof. exact (@lem1988287 (real_of_int _61040) term140). Qed.
Lemma lem4908179 (_61040 : int) : (term200 _61040) = (term201 _61040).
Proof. exact (@lem1982792 (real_of_int _61040) term140). Qed.
Lemma lem4908181 (x : nat) : (real_of_num x) = (term202 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem4908182 : term140 = term203.
Proof. exact (@lem4908181 (NUMERAL 0)). Qed.
Lemma lem4908184 (x : nat) : (term204 x) = (term205 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem4908185 : term206 = term207.
Proof. exact (@lem4908184 term18). Qed.
Lemma lem4908186 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem4908187 : term208 = term209.
Proof. exact (MK_COMB (@lem4908186) (@lem4908185)). Qed.
Lemma lem4908188 : term210 = term211.
Proof. exact (MK_COMB (@lem4908187) (@lem4908182)). Qed.
Lemma lem4908189 : term211 = term212.
Proof. exact (@lem1981613 term206 term140 term150 term150). Qed.
Lemma lem4908191 (m : nat) (n : nat) : (term213 m n) = (term214 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem4908192 : term215 = term216.
Proof. exact (@lem4908191 term18 term18). Qed.
Lemma lem4908193 : (term217 = (BIT1 0)) = (term218 = term18).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem4908194 : term218 = term18.
Proof. exact (EQ_MP (@lem4908193) (@lem940073)). Qed.
Lemma lem4908195 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem4908196 : term216 = term150.
Proof. exact (MK_COMB (@lem4908195) (@lem4908194)). Qed.
Lemma lem4908197 : term215 = term150.
Proof. exact (TRANS (@lem4908192) (@lem4908196)). Qed.
Lemma lem4908199 (x : nat) : (term219 x) = term140.
Proof. exact (proj2 (@lem1367254 x)). Qed.
Lemma lem4908200 : term210 = term140.
Proof. exact (@lem4908199 term18). Qed.
Lemma lem4908201 : real_div = real_div.
Proof. exact (eq_refl real_div). Qed.
Lemma lem4908202 : term220 = term221.
Proof. exact (MK_COMB (@lem4908201) (@lem4908200)). Qed.
Lemma lem4908203 : term212 = term203.
Proof. exact (MK_COMB (@lem4908202) (@lem4908197)). Qed.
Lemma lem4908204 : term211 = term203.
Proof. exact (TRANS (@lem4908189) (@lem4908203)). Qed.
Lemma lem4908205 : term210 = term203.
Proof. exact (TRANS (@lem4908188) (@lem4908204)). Qed.
Lemma lem4908207 (x : real) : (term222 x) = x.
Proof. exact (EQ_MP (@lem1982628 x) (@lem1982627 x)). Qed.
Lemma lem4908208 : term203 = term140.
Proof. exact (@lem4908207 term140). Qed.
Lemma lem4908209 : term210 = term140.
Proof. exact (TRANS (@lem4908205) (@lem4908208)). Qed.
Lemma lem4908210 (_61040 : int) : (term151 _61040) = (term151 _61040).
Proof. exact (eq_refl (term151 _61040)). Qed.
Lemma lem4908211 (_61040 : int) : (term201 _61040) = (term223 _61040).
Proof. exact (MK_COMB (@lem4908210 _61040) (@lem4908209)). Qed.
Lemma lem4908212 (_61040 : int) : (term223 _61040) = (real_of_int _61040).
Proof. exact (@lem1982723 (real_of_int _61040)). Qed.
Lemma lem4908213 (_61040 : int) : (term201 _61040) = (real_of_int _61040).
Proof. exact (TRANS (@lem4908211 _61040) (@lem4908212 _61040)). Qed.
Lemma lem4908215 (_61040 : int) : (term200 _61040) = (real_of_int _61040).
Proof. exact (TRANS (@lem4908179 _61040) (@lem4908213 _61040)). Qed.
Lemma lem4908216 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem4908217 (_61040 : int) : (term224 _61040) = (term225 _61040).
Proof. exact (MK_COMB (@lem4908216) (@lem4908215 _61040)). Qed.
Lemma lem4908218 : term140 = term140.
Proof. exact (eq_refl term140). Qed.
Lemma lem4908219 (_61040 : int) : (term199 _61040) = (term226 _61040).
Proof. exact (MK_COMB (@lem4908217 _61040) (@lem4908218)). Qed.
Lemma lem4908220 (_61040 : int) : (term143 _61040) = (term226 _61040).
Proof. exact (TRANS (@lem4908173 _61040) (@lem4908219 _61040)). Qed.
Lemma lem4908221 (_61040 : int) (_61039 : int) : ((real_of_int _61040) = (term152 _61039)) = ((term227 _61040 _61039) = term140).
Proof. exact (@lem1988293 (real_of_int _61040) (term152 _61039)). Qed.
Lemma lem4908233 (_61040 : int) (_61039 : int) : (term227 _61040 _61039) = (term228 _61040 _61039).
Proof. exact (@lem1982792 (real_of_int _61040) (term152 _61039)). Qed.
Lemma lem4908234 (_61039 : int) : (term229 _61039) = (term230 _61039).
Proof. exact (@lem1982781 (real_of_int _61039) term206 term150). Qed.
Lemma lem4908236 (x : nat) : (real_of_num x) = (term202 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem4908237 : term150 = term231.
Proof. exact (@lem4908236 term18). Qed.
Lemma lem4908239 (x : nat) : (term204 x) = (term205 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem4908240 : term206 = term207.
Proof. exact (@lem4908239 term18). Qed.
Lemma lem4908241 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem4908242 : term208 = term209.
Proof. exact (MK_COMB (@lem4908241) (@lem4908240)). Qed.
Lemma lem4908243 : term232 = term233.
Proof. exact (MK_COMB (@lem4908242) (@lem4908237)). Qed.
Lemma lem4908244 : term233 = term234.
Proof. exact (@lem1981613 term206 term150 term150 term150). Qed.
Lemma lem4908246 (m : nat) (n : nat) : (term213 m n) = (term214 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem4908247 : term215 = term216.
Proof. exact (@lem4908246 term18 term18). Qed.
Lemma lem4908248 : (term217 = (BIT1 0)) = (term218 = term18).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem4908249 : term218 = term18.
Proof. exact (EQ_MP (@lem4908248) (@lem940073)). Qed.
Lemma lem4908250 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem4908251 : term216 = term150.
Proof. exact (MK_COMB (@lem4908250) (@lem4908249)). Qed.
Lemma lem4908252 : term215 = term150.
Proof. exact (TRANS (@lem4908247) (@lem4908251)). Qed.
Lemma lem4908254 (m : nat) (n : nat) : (term235 m n) = (term236 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem4908255 : term232 = term237.
Proof. exact (@lem4908254 term18 term18). Qed.
Lemma lem4908256 : (term217 = (BIT1 0)) = (term218 = term18).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem4908257 : term218 = term18.
Proof. exact (EQ_MP (@lem4908256) (@lem940073)). Qed.
Lemma lem4908258 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem4908259 : term216 = term150.
Proof. exact (MK_COMB (@lem4908258) (@lem4908257)). Qed.
Lemma lem4908260 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem4908261 : term237 = term206.
Proof. exact (MK_COMB (@lem4908260) (@lem4908259)). Qed.
Lemma lem4908262 : term232 = term206.
Proof. exact (TRANS (@lem4908255) (@lem4908261)). Qed.
Lemma lem4908263 : real_div = real_div.
Proof. exact (eq_refl real_div). Qed.
Lemma lem4908264 : term238 = term239.
Proof. exact (MK_COMB (@lem4908263) (@lem4908262)). Qed.
Lemma lem4908265 : term234 = term207.
Proof. exact (MK_COMB (@lem4908264) (@lem4908252)). Qed.
Lemma lem4908266 : term233 = term207.
Proof. exact (TRANS (@lem4908244) (@lem4908265)). Qed.
Lemma lem4908267 : term232 = term207.
Proof. exact (TRANS (@lem4908243) (@lem4908266)). Qed.
Lemma lem4908269 (x : real) : (term222 x) = x.
Proof. exact (EQ_MP (@lem1982628 x) (@lem1982627 x)). Qed.
Lemma lem4908270 : term207 = term206.
Proof. exact (@lem4908269 term206). Qed.
Lemma lem4908271 : term232 = term206.
Proof. exact (TRANS (@lem4908267) (@lem4908270)). Qed.
Lemma lem4908274 (_61039 : int) : (term240 _61039) = (term240 _61039).
Proof. exact (eq_refl (term240 _61039)). Qed.
Lemma lem4908275 (_61039 : int) : (term230 _61039) = (term241 _61039).
Proof. exact (MK_COMB (@lem4908274 _61039) (@lem4908271)). Qed.
Lemma lem4908276 (_61039 : int) : (term229 _61039) = (term241 _61039).
Proof. exact (TRANS (@lem4908234 _61039) (@lem4908275 _61039)). Qed.
Lemma lem4908277 (_61040 : int) : (term151 _61040) = (term151 _61040).
Proof. exact (eq_refl (term151 _61040)). Qed.
Lemma lem4908278 (_61040 : int) (_61039 : int) : (term228 _61040 _61039) = (term242 _61040 _61039).
Proof. exact (MK_COMB (@lem4908277 _61040) (@lem4908276 _61039)). Qed.
Lemma lem4908283 (_61039 : int) (_61040 : int) : (term242 _61040 _61039) = (term243 _61039 _61040).
Proof. exact (@lem1982757 (term244 _61039) (real_of_int _61040) term206). Qed.
Lemma lem4908284 (_61039 : int) (_61040 : int) : (term228 _61040 _61039) = (term243 _61039 _61040).
Proof. exact (TRANS (@lem4908278 _61040 _61039) (@lem4908283 _61039 _61040)). Qed.
Lemma lem4908286 (_61039 : int) (_61040 : int) : (term227 _61040 _61039) = (term243 _61039 _61040).
Proof. exact (TRANS (@lem4908233 _61040 _61039) (@lem4908284 _61039 _61040)). Qed.
Lemma lem4908287 : (@eq real) = (@eq real).
Proof. exact (eq_refl (@eq real)). Qed.
Lemma lem4908288 (_61039 : int) (_61040 : int) : (term245 _61040 _61039) = (term246 _61039 _61040).
Proof. exact (MK_COMB (@lem4908287) (@lem4908286 _61039 _61040)). Qed.
Lemma lem4908289 : term140 = term140.
Proof. exact (eq_refl term140). Qed.
Lemma lem4908290 (_61039 : int) (_61040 : int) : ((term227 _61040 _61039) = term140) = ((term243 _61039 _61040) = term140).
Proof. exact (MK_COMB (@lem4908288 _61039 _61040) (@lem4908289)). Qed.
Lemma lem4908291 (_61039 : int) (_61040 : int) : ((real_of_int _61040) = (term152 _61039)) = ((term243 _61039 _61040) = term140).
Proof. exact (TRANS (@lem4908221 _61040 _61039) (@lem4908290 _61039 _61040)). Qed.
Lemma lem4908292 (_61040 : int) : (term159 _61040) = (term247 _61040).
Proof. exact (@lem1988287 term150 (term152 _61040)). Qed.
Lemma lem4908304 (_61040 : int) : (term248 _61040) = (term249 _61040).
Proof. exact (@lem1982792 term150 (term152 _61040)). Qed.
Lemma lem4908305 (_61040 : int) : (term229 _61040) = (term230 _61040).
Proof. exact (@lem1982781 (real_of_int _61040) term206 term150). Qed.
Lemma lem4908307 (x : nat) : (real_of_num x) = (term202 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem4908308 : term150 = term231.
Proof. exact (@lem4908307 term18). Qed.
Lemma lem4908310 (x : nat) : (term204 x) = (term205 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem4908311 : term206 = term207.
Proof. exact (@lem4908310 term18). Qed.
Lemma lem4908312 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem4908313 : term208 = term209.
Proof. exact (MK_COMB (@lem4908312) (@lem4908311)). Qed.
Lemma lem4908314 : term232 = term233.
Proof. exact (MK_COMB (@lem4908313) (@lem4908308)). Qed.
Lemma lem4908315 : term233 = term234.
Proof. exact (@lem1981613 term206 term150 term150 term150). Qed.
Lemma lem4908317 (m : nat) (n : nat) : (term213 m n) = (term214 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem4908318 : term215 = term216.
Proof. exact (@lem4908317 term18 term18). Qed.
Lemma lem4908319 : (term217 = (BIT1 0)) = (term218 = term18).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem4908320 : term218 = term18.
Proof. exact (EQ_MP (@lem4908319) (@lem940073)). Qed.
Lemma lem4908321 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem4908322 : term216 = term150.
Proof. exact (MK_COMB (@lem4908321) (@lem4908320)). Qed.
Lemma lem4908323 : term215 = term150.
Proof. exact (TRANS (@lem4908318) (@lem4908322)). Qed.
Lemma lem4908325 (m : nat) (n : nat) : (term235 m n) = (term236 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem4908326 : term232 = term237.
Proof. exact (@lem4908325 term18 term18). Qed.
Lemma lem4908327 : (term217 = (BIT1 0)) = (term218 = term18).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem4908328 : term218 = term18.
Proof. exact (EQ_MP (@lem4908327) (@lem940073)). Qed.
Lemma lem4908329 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem4908330 : term216 = term150.
Proof. exact (MK_COMB (@lem4908329) (@lem4908328)). Qed.
Lemma lem4908331 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem4908332 : term237 = term206.
Proof. exact (MK_COMB (@lem4908331) (@lem4908330)). Qed.
Lemma lem4908333 : term232 = term206.
Proof. exact (TRANS (@lem4908326) (@lem4908332)). Qed.
Lemma lem4908334 : real_div = real_div.
Proof. exact (eq_refl real_div). Qed.
Lemma lem4908335 : term238 = term239.
Proof. exact (MK_COMB (@lem4908334) (@lem4908333)). Qed.
Lemma lem4908336 : term234 = term207.
Proof. exact (MK_COMB (@lem4908335) (@lem4908323)). Qed.
Lemma lem4908337 : term233 = term207.
Proof. exact (TRANS (@lem4908315) (@lem4908336)). Qed.
Lemma lem4908338 : term232 = term207.
Proof. exact (TRANS (@lem4908314) (@lem4908337)). Qed.
Lemma lem4908340 (x : real) : (term222 x) = x.
Proof. exact (EQ_MP (@lem1982628 x) (@lem1982627 x)). Qed.
Lemma lem4908341 : term207 = term206.
Proof. exact (@lem4908340 term206). Qed.
Lemma lem4908342 : term232 = term206.
Proof. exact (TRANS (@lem4908338) (@lem4908341)). Qed.
Lemma lem4908345 (_61040 : int) : (term240 _61040) = (term240 _61040).
Proof. exact (eq_refl (term240 _61040)). Qed.
Lemma lem4908346 (_61040 : int) : (term230 _61040) = (term241 _61040).
Proof. exact (MK_COMB (@lem4908345 _61040) (@lem4908342)). Qed.
Lemma lem4908347 (_61040 : int) : (term229 _61040) = (term241 _61040).
Proof. exact (TRANS (@lem4908305 _61040) (@lem4908346 _61040)). Qed.
Lemma lem4908348 : term250 = term250.
Proof. exact (eq_refl term250). Qed.
Lemma lem4908349 (_61040 : int) : (term249 _61040) = (term251 _61040).
Proof. exact (MK_COMB (@lem4908348) (@lem4908347 _61040)). Qed.
Lemma lem4908350 (_61040 : int) : (term251 _61040) = (term252 _61040).
Proof. exact (@lem1982757 (term244 _61040) term150 term206). Qed.
Lemma lem4908352 (x : nat) : (term204 x) = (term205 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem4908353 : term206 = term207.
Proof. exact (@lem4908352 term18). Qed.
Lemma lem4908355 (x : nat) : (real_of_num x) = (term202 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem4908356 : term150 = term231.
Proof. exact (@lem4908355 term18). Qed.
Lemma lem4908357 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem4908358 : term250 = term253.
Proof. exact (MK_COMB (@lem4908357) (@lem4908356)). Qed.
Lemma lem4908359 : term254 = term255.
Proof. exact (MK_COMB (@lem4908358) (@lem4908353)). Qed.
Lemma lem4908360 : term256.
Proof. exact (@lem1981473 term150 term150 term206 term150 term140 term150). Qed.
Lemma lem4908362 (m : nat) (n : nat) : (term257 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem4908363 : term258 = term259.
Proof. exact (@lem4908362 (NUMERAL 0) term18). Qed.
Lemma lem4908364 : term260 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem4908365 (h1 : term260 = (BIT1 0)) : term259 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem4908366 : (term260 = (BIT1 0)) = (term259 = True).
Proof. exact (prop_ext (fun h1 : term260 = (BIT1 0) => @lem4908365 h1) (fun h1 : term259 = True => @lem4908364)). Qed.
Lemma lem4908367 : term259 = True.
Proof. exact (EQ_MP (@lem4908366) (@lem4908364)). Qed.
Lemma lem4908368 : term258 = True.
Proof. exact (TRANS (@lem4908363) (@lem4908367)). Qed.
Lemma lem4908369 : True = term258.
Proof. exact (SYM (@lem4908368)). Qed.
Lemma lem4908370 : term258.
Proof. exact (EQ_MP (@lem4908369) (@lem0)). Qed.
Lemma lem4908371 : term261.
Proof. exact (@lem4908360 (@lem4908370)). Qed.
Lemma lem4908373 (m : nat) (n : nat) : (term257 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem4908374 : term258 = term259.
Proof. exact (@lem4908373 (NUMERAL 0) term18). Qed.
Lemma lem4908375 : term260 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem4908376 (h1 : term260 = (BIT1 0)) : term259 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem4908377 : (term260 = (BIT1 0)) = (term259 = True).
Proof. exact (prop_ext (fun h1 : term260 = (BIT1 0) => @lem4908376 h1) (fun h1 : term259 = True => @lem4908375)). Qed.
Lemma lem4908378 : term259 = True.
Proof. exact (EQ_MP (@lem4908377) (@lem4908375)). Qed.
Lemma lem4908379 : term258 = True.
Proof. exact (TRANS (@lem4908374) (@lem4908378)). Qed.
Lemma lem4908380 : True = term258.
Proof. exact (SYM (@lem4908379)). Qed.
Lemma lem4908381 : term258.
Proof. exact (EQ_MP (@lem4908380) (@lem0)). Qed.
Lemma lem4908382 : term262.
Proof. exact (@lem4908371 (@lem4908381)). Qed.
Lemma lem4908384 (m : nat) (n : nat) : (term257 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem4908385 : term258 = term259.
Proof. exact (@lem4908384 (NUMERAL 0) term18). Qed.
Lemma lem4908386 : term260 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem4908387 (h1 : term260 = (BIT1 0)) : term259 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem4908388 : (term260 = (BIT1 0)) = (term259 = True).
Proof. exact (prop_ext (fun h1 : term260 = (BIT1 0) => @lem4908387 h1) (fun h1 : term259 = True => @lem4908386)). Qed.
Lemma lem4908389 : term259 = True.
Proof. exact (EQ_MP (@lem4908388) (@lem4908386)). Qed.
Lemma lem4908390 : term258 = True.
Proof. exact (TRANS (@lem4908385) (@lem4908389)). Qed.
Lemma lem4908391 : True = term258.
Proof. exact (SYM (@lem4908390)). Qed.
Lemma lem4908392 : term258.
Proof. exact (EQ_MP (@lem4908391) (@lem0)). Qed.
Lemma lem4908393 : term263.
Proof. exact (@lem4908382 (@lem4908392)). Qed.
Lemma lem4908395 (m : nat) (n : nat) : (term235 m n) = (term236 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem4908396 : term232 = term237.
Proof. exact (@lem4908395 term18 term18). Qed.
Lemma lem4908397 : (term217 = (BIT1 0)) = (term218 = term18).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem4908398 : term218 = term18.
Proof. exact (EQ_MP (@lem4908397) (@lem940073)). Qed.
Lemma lem4908399 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem4908400 : term216 = term150.
Proof. exact (MK_COMB (@lem4908399) (@lem4908398)). Qed.
Lemma lem4908401 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem4908402 : term237 = term206.
Proof. exact (MK_COMB (@lem4908401) (@lem4908400)). Qed.
Lemma lem4908403 : term232 = term206.
Proof. exact (TRANS (@lem4908396) (@lem4908402)). Qed.
Lemma lem4908405 (m : nat) (n : nat) : (term213 m n) = (term214 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem4908406 : term215 = term216.
Proof. exact (@lem4908405 term18 term18). Qed.
Lemma lem4908407 : (term217 = (BIT1 0)) = (term218 = term18).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem4908408 : term218 = term18.
Proof. exact (EQ_MP (@lem4908407) (@lem940073)). Qed.
Lemma lem4908409 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem4908410 : term216 = term150.
Proof. exact (MK_COMB (@lem4908409) (@lem4908408)). Qed.
Lemma lem4908411 : term215 = term150.
Proof. exact (TRANS (@lem4908406) (@lem4908410)). Qed.
Lemma lem4908412 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem4908413 : term264 = term250.
Proof. exact (MK_COMB (@lem4908412) (@lem4908411)). Qed.
Lemma lem4908414 : term265 = term254.
Proof. exact (MK_COMB (@lem4908413) (@lem4908403)). Qed.
Lemma lem4908416 (m : nat) : (term266 m) = term140.
Proof. exact (proj2 (@lem1367303 m)). Qed.
Lemma lem4908417 : term254 = term140.
Proof. exact (@lem4908416 term18). Qed.
Lemma lem4908418 : term265 = term140.
Proof. exact (TRANS (@lem4908414) (@lem4908417)). Qed.
Lemma lem4908419 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem4908420 : term267 = term268.
Proof. exact (MK_COMB (@lem4908419) (@lem4908418)). Qed.
Lemma lem4908421 : term150 = term150.
Proof. exact (eq_refl term150). Qed.
Lemma lem4908422 : term269 = term270.
Proof. exact (MK_COMB (@lem4908420) (@lem4908421)). Qed.
Lemma lem4908424 (x : nat) : (term271 x) = term140.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem4908425 : term270 = term140.
Proof. exact (@lem4908424 term18). Qed.
Lemma lem4908426 : term269 = term140.
Proof. exact (TRANS (@lem4908422) (@lem4908425)). Qed.
Lemma lem4908428 (m : nat) (n : nat) : (term213 m n) = (term214 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem4908429 : term215 = term216.
Proof. exact (@lem4908428 term18 term18). Qed.
Lemma lem4908430 : (term217 = (BIT1 0)) = (term218 = term18).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem4908431 : term218 = term18.
Proof. exact (EQ_MP (@lem4908430) (@lem940073)). Qed.
Lemma lem4908432 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem4908433 : term216 = term150.
Proof. exact (MK_COMB (@lem4908432) (@lem4908431)). Qed.
Lemma lem4908434 : term215 = term150.
Proof. exact (TRANS (@lem4908429) (@lem4908433)). Qed.
Lemma lem4908435 : term268 = term268.
Proof. exact (eq_refl term268). Qed.
Lemma lem4908436 : term272 = term270.
Proof. exact (MK_COMB (@lem4908435) (@lem4908434)). Qed.
Lemma lem4908438 (x : nat) : (term271 x) = term140.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem4908439 : term270 = term140.
Proof. exact (@lem4908438 term18). Qed.
Lemma lem4908440 : term272 = term140.
Proof. exact (TRANS (@lem4908436) (@lem4908439)). Qed.
Lemma lem4908441 : term140 = term272.
Proof. exact (SYM (@lem4908440)). Qed.
Lemma lem4908442 : term269 = term272.
Proof. exact (TRANS (@lem4908426) (@lem4908441)). Qed.
Lemma lem4908443 : term255 = term203.
Proof. exact (@lem4908393 (@lem4908442)). Qed.
Lemma lem4908444 : term254 = term203.
Proof. exact (TRANS (@lem4908359) (@lem4908443)). Qed.
Lemma lem4908446 (x : real) : (term222 x) = x.
Proof. exact (EQ_MP (@lem1981475 x) (@lem1981474 x)). Qed.
Lemma lem4908447 : term203 = term140.
Proof. exact (@lem4908446 term140). Qed.
Lemma lem4908448 : term254 = term140.
Proof. exact (TRANS (@lem4908444) (@lem4908447)). Qed.
Lemma lem4908449 (_61040 : int) : (term240 _61040) = (term240 _61040).
Proof. exact (eq_refl (term240 _61040)). Qed.
Lemma lem4908450 (_61040 : int) : (term252 _61040) = (term273 _61040).
Proof. exact (MK_COMB (@lem4908449 _61040) (@lem4908448)). Qed.
Lemma lem4908451 (_61040 : int) : (term251 _61040) = (term273 _61040).
Proof. exact (TRANS (@lem4908350 _61040) (@lem4908450 _61040)). Qed.
Lemma lem4908452 (_61040 : int) : (term273 _61040) = (term244 _61040).
Proof. exact (@lem1982723 (term244 _61040)). Qed.
Lemma lem4908453 (_61040 : int) : (term251 _61040) = (term244 _61040).
Proof. exact (TRANS (@lem4908451 _61040) (@lem4908452 _61040)). Qed.
Lemma lem4908454 (_61040 : int) : (term249 _61040) = (term244 _61040).
Proof. exact (TRANS (@lem4908349 _61040) (@lem4908453 _61040)). Qed.
Lemma lem4908456 (_61040 : int) : (term248 _61040) = (term244 _61040).
Proof. exact (TRANS (@lem4908304 _61040) (@lem4908454 _61040)). Qed.
Lemma lem4908457 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem4908458 (_61040 : int) : (term274 _61040) = (term275 _61040).
Proof. exact (MK_COMB (@lem4908457) (@lem4908456 _61040)). Qed.
Lemma lem4908459 : term140 = term140.
Proof. exact (eq_refl term140). Qed.
Lemma lem4908460 (_61040 : int) : (term247 _61040) = (term276 _61040).
Proof. exact (MK_COMB (@lem4908458 _61040) (@lem4908459)). Qed.
Lemma lem4908461 (_61040 : int) : (term159 _61040) = (term276 _61040).
Proof. exact (TRANS (@lem4908292 _61040) (@lem4908460 _61040)). Qed.
Lemma lem4908462 (_61039 : int) : ((real_of_int _61039) = term140) = ((term200 _61039) = term140).
Proof. exact (@lem1988293 (real_of_int _61039) term140). Qed.
Lemma lem4908468 (_61039 : int) : (term200 _61039) = (term201 _61039).
Proof. exact (@lem1982792 (real_of_int _61039) term140). Qed.
Lemma lem4908470 (x : nat) : (real_of_num x) = (term202 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem4908471 : term140 = term203.
Proof. exact (@lem4908470 (NUMERAL 0)). Qed.
Lemma lem4908473 (x : nat) : (term204 x) = (term205 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem4908474 : term206 = term207.
Proof. exact (@lem4908473 term18). Qed.
Lemma lem4908475 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem4908476 : term208 = term209.
Proof. exact (MK_COMB (@lem4908475) (@lem4908474)). Qed.
Lemma lem4908477 : term210 = term211.
Proof. exact (MK_COMB (@lem4908476) (@lem4908471)). Qed.
Lemma lem4908478 : term211 = term212.
Proof. exact (@lem1981613 term206 term140 term150 term150). Qed.
Lemma lem4908480 (m : nat) (n : nat) : (term213 m n) = (term214 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem4908481 : term215 = term216.
Proof. exact (@lem4908480 term18 term18). Qed.
Lemma lem4908482 : (term217 = (BIT1 0)) = (term218 = term18).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem4908483 : term218 = term18.
Proof. exact (EQ_MP (@lem4908482) (@lem940073)). Qed.
Lemma lem4908484 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem4908485 : term216 = term150.
Proof. exact (MK_COMB (@lem4908484) (@lem4908483)). Qed.
Lemma lem4908486 : term215 = term150.
Proof. exact (TRANS (@lem4908481) (@lem4908485)). Qed.
Lemma lem4908488 (x : nat) : (term219 x) = term140.
Proof. exact (proj2 (@lem1367254 x)). Qed.
Lemma lem4908489 : term210 = term140.
Proof. exact (@lem4908488 term18). Qed.
Lemma lem4908490 : real_div = real_div.
Proof. exact (eq_refl real_div). Qed.
Lemma lem4908491 : term220 = term221.
Proof. exact (MK_COMB (@lem4908490) (@lem4908489)). Qed.
Lemma lem4908492 : term212 = term203.
Proof. exact (MK_COMB (@lem4908491) (@lem4908486)). Qed.
Lemma lem4908493 : term211 = term203.
Proof. exact (TRANS (@lem4908478) (@lem4908492)). Qed.
Lemma lem4908494 : term210 = term203.
Proof. exact (TRANS (@lem4908477) (@lem4908493)). Qed.
Lemma lem4908496 (x : real) : (term222 x) = x.
Proof. exact (EQ_MP (@lem1982628 x) (@lem1982627 x)). Qed.
Lemma lem4908497 : term203 = term140.
Proof. exact (@lem4908496 term140). Qed.
Lemma lem4908498 : term210 = term140.
Proof. exact (TRANS (@lem4908494) (@lem4908497)). Qed.
Lemma lem4908499 (_61039 : int) : (term151 _61039) = (term151 _61039).
Proof. exact (eq_refl (term151 _61039)). Qed.
Lemma lem4908500 (_61039 : int) : (term201 _61039) = (term223 _61039).
Proof. exact (MK_COMB (@lem4908499 _61039) (@lem4908498)). Qed.
Lemma lem4908501 (_61039 : int) : (term223 _61039) = (real_of_int _61039).
Proof. exact (@lem1982723 (real_of_int _61039)). Qed.
Lemma lem4908502 (_61039 : int) : (term201 _61039) = (real_of_int _61039).
Proof. exact (TRANS (@lem4908500 _61039) (@lem4908501 _61039)). Qed.
Lemma lem4908504 (_61039 : int) : (term200 _61039) = (real_of_int _61039).
Proof. exact (TRANS (@lem4908468 _61039) (@lem4908502 _61039)). Qed.
Lemma lem4908505 : (@eq real) = (@eq real).
Proof. exact (eq_refl (@eq real)). Qed.
Lemma lem4908506 (_61039 : int) : (term277 _61039) = (term153 _61039).
Proof. exact (MK_COMB (@lem4908505) (@lem4908504 _61039)). Qed.
Lemma lem4908507 : term140 = term140.
Proof. exact (eq_refl term140). Qed.
Lemma lem4908508 (_61039 : int) : ((term200 _61039) = term140) = ((real_of_int _61039) = term140).
Proof. exact (MK_COMB (@lem4908506 _61039) (@lem4908507)). Qed.
Lemma lem4908509 (_61039 : int) : ((real_of_int _61039) = term140) = ((real_of_int _61039) = term140).
Proof. exact (TRANS (@lem4908462 _61039) (@lem4908508 _61039)). Qed.
Lemma lem4908510 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4908511 (_61040 : int) : (term160 _61040) = (term278 _61040).
Proof. exact (MK_COMB (@lem4908510) (@lem4908461 _61040)). Qed.
Lemma lem4908512 (_61040 : int) (_61039 : int) : (term161 _61040 _61039) = (term279 _61040 _61039).
Proof. exact (MK_COMB (@lem4908511 _61040) (@lem4908509 _61039)). Qed.
Lemma lem4908513 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4908514 (_61039 : int) (_61040 : int) : (term162 _61040 _61039) = (term280 _61039 _61040).
Proof. exact (MK_COMB (@lem4908513) (@lem4908291 _61039 _61040)). Qed.
Lemma lem4908515 (_61040 : int) (_61039 : int) : (term163 _61040 _61039) = (term281 _61040 _61039).
Proof. exact (MK_COMB (@lem4908514 _61039 _61040) (@lem4908512 _61040 _61039)). Qed.
Lemma lem4908516 (_61039 : int) (_61040 : int) : (term136 _61040 _61039) = (term282 _61039 _61040).
Proof. exact (@lem1988287 (real_of_int _61039) (real_of_int _61040)). Qed.
Lemma lem4908529 (_61039 : int) (_61040 : int) : (term283 _61039 _61040) = (term284 _61039 _61040).
Proof. exact (@lem1982792 (real_of_int _61039) (real_of_int _61040)). Qed.
Lemma lem4908530 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem4908531 (_61039 : int) (_61040 : int) : (term285 _61039 _61040) = (term286 _61039 _61040).
Proof. exact (MK_COMB (@lem4908530) (@lem4908529 _61039 _61040)). Qed.
Lemma lem4908532 : term140 = term140.
Proof. exact (eq_refl term140). Qed.
Lemma lem4908533 (_61039 : int) (_61040 : int) : (term282 _61039 _61040) = (term287 _61039 _61040).
Proof. exact (MK_COMB (@lem4908531 _61039 _61040) (@lem4908532)). Qed.
Lemma lem4908534 (_61039 : int) (_61040 : int) : (term136 _61040 _61039) = (term287 _61039 _61040).
Proof. exact (TRANS (@lem4908516 _61039 _61040) (@lem4908533 _61039 _61040)). Qed.
Lemma lem4908535 (_61040 : int) : ((real_of_int _61040) = term140) = ((term200 _61040) = term140).
Proof. exact (@lem1988293 (real_of_int _61040) term140). Qed.
Lemma lem4908541 (_61040 : int) : (term200 _61040) = (term201 _61040).
Proof. exact (@lem1982792 (real_of_int _61040) term140). Qed.
Lemma lem4908543 (x : nat) : (real_of_num x) = (term202 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem4908544 : term140 = term203.
Proof. exact (@lem4908543 (NUMERAL 0)). Qed.
Lemma lem4908546 (x : nat) : (term204 x) = (term205 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem4908547 : term206 = term207.
Proof. exact (@lem4908546 term18). Qed.
Lemma lem4908548 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem4908549 : term208 = term209.
Proof. exact (MK_COMB (@lem4908548) (@lem4908547)). Qed.
Lemma lem4908550 : term210 = term211.
Proof. exact (MK_COMB (@lem4908549) (@lem4908544)). Qed.
Lemma lem4908551 : term211 = term212.
Proof. exact (@lem1981613 term206 term140 term150 term150). Qed.
Lemma lem4908553 (m : nat) (n : nat) : (term213 m n) = (term214 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem4908554 : term215 = term216.
Proof. exact (@lem4908553 term18 term18). Qed.
Lemma lem4908555 : (term217 = (BIT1 0)) = (term218 = term18).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem4908556 : term218 = term18.
Proof. exact (EQ_MP (@lem4908555) (@lem940073)). Qed.
Lemma lem4908557 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem4908558 : term216 = term150.
Proof. exact (MK_COMB (@lem4908557) (@lem4908556)). Qed.
Lemma lem4908559 : term215 = term150.
Proof. exact (TRANS (@lem4908554) (@lem4908558)). Qed.
Lemma lem4908561 (x : nat) : (term219 x) = term140.
Proof. exact (proj2 (@lem1367254 x)). Qed.
Lemma lem4908562 : term210 = term140.
Proof. exact (@lem4908561 term18). Qed.
Lemma lem4908563 : real_div = real_div.
Proof. exact (eq_refl real_div). Qed.
Lemma lem4908564 : term220 = term221.
Proof. exact (MK_COMB (@lem4908563) (@lem4908562)). Qed.
Lemma lem4908565 : term212 = term203.
Proof. exact (MK_COMB (@lem4908564) (@lem4908559)). Qed.
Lemma lem4908566 : term211 = term203.
Proof. exact (TRANS (@lem4908551) (@lem4908565)). Qed.
Lemma lem4908567 : term210 = term203.
Proof. exact (TRANS (@lem4908550) (@lem4908566)). Qed.
Lemma lem4908569 (x : real) : (term222 x) = x.
Proof. exact (EQ_MP (@lem1982628 x) (@lem1982627 x)). Qed.
Lemma lem4908570 : term203 = term140.
Proof. exact (@lem4908569 term140). Qed.
Lemma lem4908571 : term210 = term140.
Proof. exact (TRANS (@lem4908567) (@lem4908570)). Qed.
Lemma lem4908572 (_61040 : int) : (term151 _61040) = (term151 _61040).
Proof. exact (eq_refl (term151 _61040)). Qed.
Lemma lem4908573 (_61040 : int) : (term201 _61040) = (term223 _61040).
Proof. exact (MK_COMB (@lem4908572 _61040) (@lem4908571)). Qed.
Lemma lem4908574 (_61040 : int) : (term223 _61040) = (real_of_int _61040).
Proof. exact (@lem1982723 (real_of_int _61040)). Qed.
Lemma lem4908575 (_61040 : int) : (term201 _61040) = (real_of_int _61040).
Proof. exact (TRANS (@lem4908573 _61040) (@lem4908574 _61040)). Qed.
Lemma lem4908577 (_61040 : int) : (term200 _61040) = (real_of_int _61040).
Proof. exact (TRANS (@lem4908541 _61040) (@lem4908575 _61040)). Qed.
Lemma lem4908578 : (@eq real) = (@eq real).
Proof. exact (eq_refl (@eq real)). Qed.
Lemma lem4908579 (_61040 : int) : (term277 _61040) = (term153 _61040).
Proof. exact (MK_COMB (@lem4908578) (@lem4908577 _61040)). Qed.
Lemma lem4908580 : term140 = term140.
Proof. exact (eq_refl term140). Qed.
Lemma lem4908581 (_61040 : int) : ((term200 _61040) = term140) = ((real_of_int _61040) = term140).
Proof. exact (MK_COMB (@lem4908579 _61040) (@lem4908580)). Qed.
Lemma lem4908582 (_61040 : int) : ((real_of_int _61040) = term140) = ((real_of_int _61040) = term140).
Proof. exact (TRANS (@lem4908535 _61040) (@lem4908581 _61040)). Qed.
Lemma lem4908583 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4908584 (_61039 : int) (_61040 : int) : (term164 _61040 _61039) = (term288 _61039 _61040).
Proof. exact (MK_COMB (@lem4908583) (@lem4908534 _61039 _61040)). Qed.
Lemma lem4908585 (_61039 : int) (_61040 : int) : (term165 _61039 _61040) = (term289 _61039 _61040).
Proof. exact (MK_COMB (@lem4908584 _61039 _61040) (@lem4908582 _61040)). Qed.
Lemma lem4908586 (_61040 : int) (_61039 : int) : (term167 _61039 _61040) = (term290 _61040 _61039).
Proof. exact (@lem1988287 (real_of_int _61040) (term152 _61039)). Qed.
Lemma lem4908598 (_61040 : int) (_61039 : int) : (term227 _61040 _61039) = (term228 _61040 _61039).
Proof. exact (@lem1982792 (real_of_int _61040) (term152 _61039)). Qed.
Lemma lem4908599 (_61039 : int) : (term229 _61039) = (term230 _61039).
Proof. exact (@lem1982781 (real_of_int _61039) term206 term150). Qed.
Lemma lem4908601 (x : nat) : (real_of_num x) = (term202 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem4908602 : term150 = term231.
Proof. exact (@lem4908601 term18). Qed.
Lemma lem4908604 (x : nat) : (term204 x) = (term205 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem4908605 : term206 = term207.
Proof. exact (@lem4908604 term18). Qed.
Lemma lem4908606 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem4908607 : term208 = term209.
Proof. exact (MK_COMB (@lem4908606) (@lem4908605)). Qed.
Lemma lem4908608 : term232 = term233.
Proof. exact (MK_COMB (@lem4908607) (@lem4908602)). Qed.
Lemma lem4908609 : term233 = term234.
Proof. exact (@lem1981613 term206 term150 term150 term150). Qed.
Lemma lem4908611 (m : nat) (n : nat) : (term213 m n) = (term214 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem4908612 : term215 = term216.
Proof. exact (@lem4908611 term18 term18). Qed.
Lemma lem4908613 : (term217 = (BIT1 0)) = (term218 = term18).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem4908614 : term218 = term18.
Proof. exact (EQ_MP (@lem4908613) (@lem940073)). Qed.
Lemma lem4908615 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem4908616 : term216 = term150.
Proof. exact (MK_COMB (@lem4908615) (@lem4908614)). Qed.
Lemma lem4908617 : term215 = term150.
Proof. exact (TRANS (@lem4908612) (@lem4908616)). Qed.
Lemma lem4908619 (m : nat) (n : nat) : (term235 m n) = (term236 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem4908620 : term232 = term237.
Proof. exact (@lem4908619 term18 term18). Qed.
Lemma lem4908621 : (term217 = (BIT1 0)) = (term218 = term18).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem4908622 : term218 = term18.
Proof. exact (EQ_MP (@lem4908621) (@lem940073)). Qed.
Lemma lem4908623 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem4908624 : term216 = term150.
Proof. exact (MK_COMB (@lem4908623) (@lem4908622)). Qed.
Lemma lem4908625 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem4908626 : term237 = term206.
Proof. exact (MK_COMB (@lem4908625) (@lem4908624)). Qed.
Lemma lem4908627 : term232 = term206.
Proof. exact (TRANS (@lem4908620) (@lem4908626)). Qed.
Lemma lem4908628 : real_div = real_div.
Proof. exact (eq_refl real_div). Qed.
Lemma lem4908629 : term238 = term239.
Proof. exact (MK_COMB (@lem4908628) (@lem4908627)). Qed.
Lemma lem4908630 : term234 = term207.
Proof. exact (MK_COMB (@lem4908629) (@lem4908617)). Qed.
Lemma lem4908631 : term233 = term207.
Proof. exact (TRANS (@lem4908609) (@lem4908630)). Qed.
Lemma lem4908632 : term232 = term207.
Proof. exact (TRANS (@lem4908608) (@lem4908631)). Qed.
Lemma lem4908634 (x : real) : (term222 x) = x.
Proof. exact (EQ_MP (@lem1982628 x) (@lem1982627 x)). Qed.
Lemma lem4908635 : term207 = term206.
Proof. exact (@lem4908634 term206). Qed.
Lemma lem4908636 : term232 = term206.
Proof. exact (TRANS (@lem4908632) (@lem4908635)). Qed.
Lemma lem4908639 (_61039 : int) : (term240 _61039) = (term240 _61039).
Proof. exact (eq_refl (term240 _61039)). Qed.
Lemma lem4908640 (_61039 : int) : (term230 _61039) = (term241 _61039).
Proof. exact (MK_COMB (@lem4908639 _61039) (@lem4908636)). Qed.
Lemma lem4908641 (_61039 : int) : (term229 _61039) = (term241 _61039).
Proof. exact (TRANS (@lem4908599 _61039) (@lem4908640 _61039)). Qed.
Lemma lem4908642 (_61040 : int) : (term151 _61040) = (term151 _61040).
Proof. exact (eq_refl (term151 _61040)). Qed.
Lemma lem4908643 (_61040 : int) (_61039 : int) : (term228 _61040 _61039) = (term242 _61040 _61039).
Proof. exact (MK_COMB (@lem4908642 _61040) (@lem4908641 _61039)). Qed.
Lemma lem4908648 (_61039 : int) (_61040 : int) : (term242 _61040 _61039) = (term243 _61039 _61040).
Proof. exact (@lem1982757 (term244 _61039) (real_of_int _61040) term206). Qed.
Lemma lem4908649 (_61039 : int) (_61040 : int) : (term228 _61040 _61039) = (term243 _61039 _61040).
Proof. exact (TRANS (@lem4908643 _61040 _61039) (@lem4908648 _61039 _61040)). Qed.
Lemma lem4908651 (_61039 : int) (_61040 : int) : (term227 _61040 _61039) = (term243 _61039 _61040).
Proof. exact (TRANS (@lem4908598 _61040 _61039) (@lem4908649 _61039 _61040)). Qed.
Lemma lem4908652 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem4908653 (_61039 : int) (_61040 : int) : (term291 _61040 _61039) = (term292 _61039 _61040).
Proof. exact (MK_COMB (@lem4908652) (@lem4908651 _61039 _61040)). Qed.
Lemma lem4908654 : term140 = term140.
Proof. exact (eq_refl term140). Qed.
Lemma lem4908655 (_61039 : int) (_61040 : int) : (term290 _61040 _61039) = (term293 _61039 _61040).
Proof. exact (MK_COMB (@lem4908653 _61039 _61040) (@lem4908654)). Qed.
Lemma lem4908656 (_61039 : int) (_61040 : int) : (term167 _61039 _61040) = (term293 _61039 _61040).
Proof. exact (TRANS (@lem4908586 _61040 _61039) (@lem4908655 _61039 _61040)). Qed.
Lemma lem4908657 (_61040 : int) : (term173 _61040) = (term294 _61040).
Proof. exact (@lem1988287 term140 (term152 _61040)). Qed.
Lemma lem4908669 (_61040 : int) : (term295 _61040) = (term296 _61040).
Proof. exact (@lem1982792 term140 (term152 _61040)). Qed.
Lemma lem4908670 (_61040 : int) : (term229 _61040) = (term230 _61040).
Proof. exact (@lem1982781 (real_of_int _61040) term206 term150). Qed.
Lemma lem4908672 (x : nat) : (real_of_num x) = (term202 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem4908673 : term150 = term231.
Proof. exact (@lem4908672 term18). Qed.
Lemma lem4908675 (x : nat) : (term204 x) = (term205 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem4908676 : term206 = term207.
Proof. exact (@lem4908675 term18). Qed.
Lemma lem4908677 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem4908678 : term208 = term209.
Proof. exact (MK_COMB (@lem4908677) (@lem4908676)). Qed.
Lemma lem4908679 : term232 = term233.
Proof. exact (MK_COMB (@lem4908678) (@lem4908673)). Qed.
Lemma lem4908680 : term233 = term234.
Proof. exact (@lem1981613 term206 term150 term150 term150). Qed.
Lemma lem4908682 (m : nat) (n : nat) : (term213 m n) = (term214 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem4908683 : term215 = term216.
Proof. exact (@lem4908682 term18 term18). Qed.
Lemma lem4908684 : (term217 = (BIT1 0)) = (term218 = term18).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem4908685 : term218 = term18.
Proof. exact (EQ_MP (@lem4908684) (@lem940073)). Qed.
Lemma lem4908686 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem4908687 : term216 = term150.
Proof. exact (MK_COMB (@lem4908686) (@lem4908685)). Qed.
Lemma lem4908688 : term215 = term150.
Proof. exact (TRANS (@lem4908683) (@lem4908687)). Qed.
Lemma lem4908690 (m : nat) (n : nat) : (term235 m n) = (term236 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem4908691 : term232 = term237.
Proof. exact (@lem4908690 term18 term18). Qed.
Lemma lem4908692 : (term217 = (BIT1 0)) = (term218 = term18).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem4908693 : term218 = term18.
Proof. exact (EQ_MP (@lem4908692) (@lem940073)). Qed.
Lemma lem4908694 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem4908695 : term216 = term150.
Proof. exact (MK_COMB (@lem4908694) (@lem4908693)). Qed.
Lemma lem4908696 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem4908697 : term237 = term206.
Proof. exact (MK_COMB (@lem4908696) (@lem4908695)). Qed.
Lemma lem4908698 : term232 = term206.
Proof. exact (TRANS (@lem4908691) (@lem4908697)). Qed.
Lemma lem4908699 : real_div = real_div.
Proof. exact (eq_refl real_div). Qed.
Lemma lem4908700 : term238 = term239.
Proof. exact (MK_COMB (@lem4908699) (@lem4908698)). Qed.
Lemma lem4908701 : term234 = term207.
Proof. exact (MK_COMB (@lem4908700) (@lem4908688)). Qed.
Lemma lem4908702 : term233 = term207.
Proof. exact (TRANS (@lem4908680) (@lem4908701)). Qed.
Lemma lem4908703 : term232 = term207.
Proof. exact (TRANS (@lem4908679) (@lem4908702)). Qed.
Lemma lem4908705 (x : real) : (term222 x) = x.
Proof. exact (EQ_MP (@lem1982628 x) (@lem1982627 x)). Qed.
Lemma lem4908706 : term207 = term206.
Proof. exact (@lem4908705 term206). Qed.
Lemma lem4908707 : term232 = term206.
Proof. exact (TRANS (@lem4908703) (@lem4908706)). Qed.
Lemma lem4908710 (_61040 : int) : (term240 _61040) = (term240 _61040).
Proof. exact (eq_refl (term240 _61040)). Qed.
Lemma lem4908711 (_61040 : int) : (term230 _61040) = (term241 _61040).
Proof. exact (MK_COMB (@lem4908710 _61040) (@lem4908707)). Qed.
Lemma lem4908712 (_61040 : int) : (term229 _61040) = (term241 _61040).
Proof. exact (TRANS (@lem4908670 _61040) (@lem4908711 _61040)). Qed.
Lemma lem4908713 : term182 = term182.
Proof. exact (eq_refl term182). Qed.
Lemma lem4908714 (_61040 : int) : (term296 _61040) = (term297 _61040).
Proof. exact (MK_COMB (@lem4908713) (@lem4908712 _61040)). Qed.
Lemma lem4908715 (_61040 : int) : (term297 _61040) = (term241 _61040).
Proof. exact (@lem1982721 (term241 _61040)). Qed.
Lemma lem4908716 (_61040 : int) : (term296 _61040) = (term241 _61040).
Proof. exact (TRANS (@lem4908714 _61040) (@lem4908715 _61040)). Qed.
Lemma lem4908718 (_61040 : int) : (term295 _61040) = (term241 _61040).
Proof. exact (TRANS (@lem4908669 _61040) (@lem4908716 _61040)). Qed.
Lemma lem4908719 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem4908720 (_61040 : int) : (term298 _61040) = (term299 _61040).
Proof. exact (MK_COMB (@lem4908719) (@lem4908718 _61040)). Qed.
Lemma lem4908721 : term140 = term140.
Proof. exact (eq_refl term140). Qed.
Lemma lem4908722 (_61040 : int) : (term294 _61040) = (term300 _61040).
Proof. exact (MK_COMB (@lem4908720 _61040) (@lem4908721)). Qed.
Lemma lem4908723 (_61040 : int) : (term173 _61040) = (term300 _61040).
Proof. exact (TRANS (@lem4908657 _61040) (@lem4908722 _61040)). Qed.
Lemma lem4908724 (_61040 : int) : (term186 _61040) = (term301 _61040).
Proof. exact (@lem1988287 (real_of_int _61040) term183). Qed.
Lemma lem4908731 : term183 = term150.
Proof. exact (@lem1982721 term150). Qed.
Lemma lem4908734 (_61040 : int) : (term302 _61040) = (term302 _61040).
Proof. exact (eq_refl (term302 _61040)). Qed.
Lemma lem4908735 (_61040 : int) : (term303 _61040) = (term304 _61040).
Proof. exact (MK_COMB (@lem4908734 _61040) (@lem4908731)). Qed.
Lemma lem4908736 (_61040 : int) : (term304 _61040) = (term305 _61040).
Proof. exact (@lem1982792 (real_of_int _61040) term150). Qed.
Lemma lem4908738 (x : nat) : (real_of_num x) = (term202 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem4908739 : term150 = term231.
Proof. exact (@lem4908738 term18). Qed.
Lemma lem4908741 (x : nat) : (term204 x) = (term205 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem4908742 : term206 = term207.
Proof. exact (@lem4908741 term18). Qed.
Lemma lem4908743 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem4908744 : term208 = term209.
Proof. exact (MK_COMB (@lem4908743) (@lem4908742)). Qed.
Lemma lem4908745 : term232 = term233.
Proof. exact (MK_COMB (@lem4908744) (@lem4908739)). Qed.
Lemma lem4908746 : term233 = term234.
Proof. exact (@lem1981613 term206 term150 term150 term150). Qed.
Lemma lem4908748 (m : nat) (n : nat) : (term213 m n) = (term214 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem4908749 : term215 = term216.
Proof. exact (@lem4908748 term18 term18). Qed.
Lemma lem4908750 : (term217 = (BIT1 0)) = (term218 = term18).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem4908751 : term218 = term18.
Proof. exact (EQ_MP (@lem4908750) (@lem940073)). Qed.
Lemma lem4908752 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem4908753 : term216 = term150.
Proof. exact (MK_COMB (@lem4908752) (@lem4908751)). Qed.
Lemma lem4908754 : term215 = term150.
Proof. exact (TRANS (@lem4908749) (@lem4908753)). Qed.
Lemma lem4908756 (m : nat) (n : nat) : (term235 m n) = (term236 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem4908757 : term232 = term237.
Proof. exact (@lem4908756 term18 term18). Qed.
Lemma lem4908758 : (term217 = (BIT1 0)) = (term218 = term18).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem4908759 : term218 = term18.
Proof. exact (EQ_MP (@lem4908758) (@lem940073)). Qed.
Lemma lem4908760 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem4908761 : term216 = term150.
Proof. exact (MK_COMB (@lem4908760) (@lem4908759)). Qed.
Lemma lem4908762 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem4908763 : term237 = term206.
Proof. exact (MK_COMB (@lem4908762) (@lem4908761)). Qed.
Lemma lem4908764 : term232 = term206.
Proof. exact (TRANS (@lem4908757) (@lem4908763)). Qed.
Lemma lem4908765 : real_div = real_div.
Proof. exact (eq_refl real_div). Qed.
Lemma lem4908766 : term238 = term239.
Proof. exact (MK_COMB (@lem4908765) (@lem4908764)). Qed.
Lemma lem4908767 : term234 = term207.
Proof. exact (MK_COMB (@lem4908766) (@lem4908754)). Qed.
Lemma lem4908768 : term233 = term207.
Proof. exact (TRANS (@lem4908746) (@lem4908767)). Qed.
Lemma lem4908769 : term232 = term207.
Proof. exact (TRANS (@lem4908745) (@lem4908768)). Qed.
Lemma lem4908771 (x : real) : (term222 x) = x.
Proof. exact (EQ_MP (@lem1982628 x) (@lem1982627 x)). Qed.
Lemma lem4908772 : term207 = term206.
Proof. exact (@lem4908771 term206). Qed.
Lemma lem4908773 : term232 = term206.
Proof. exact (TRANS (@lem4908769) (@lem4908772)). Qed.
Lemma lem4908774 (_61040 : int) : (term151 _61040) = (term151 _61040).
Proof. exact (eq_refl (term151 _61040)). Qed.
Lemma lem4908777 (_61040 : int) : (term305 _61040) = (term306 _61040).
Proof. exact (MK_COMB (@lem4908774 _61040) (@lem4908773)). Qed.
Lemma lem4908778 (_61040 : int) : (term304 _61040) = (term306 _61040).
Proof. exact (TRANS (@lem4908736 _61040) (@lem4908777 _61040)). Qed.
Lemma lem4908779 (_61040 : int) : (term303 _61040) = (term306 _61040).
Proof. exact (TRANS (@lem4908735 _61040) (@lem4908778 _61040)). Qed.
Lemma lem4908780 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem4908781 (_61040 : int) : (term307 _61040) = (term308 _61040).
Proof. exact (MK_COMB (@lem4908780) (@lem4908779 _61040)). Qed.
Lemma lem4908782 : term140 = term140.
Proof. exact (eq_refl term140). Qed.
Lemma lem4908783 (_61040 : int) : (term301 _61040) = (term309 _61040).
Proof. exact (MK_COMB (@lem4908781 _61040) (@lem4908782)). Qed.
Lemma lem4908784 (_61040 : int) : (term186 _61040) = (term309 _61040).
Proof. exact (TRANS (@lem4908724 _61040) (@lem4908783 _61040)). Qed.
Lemma lem4908785 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4908786 (_61040 : int) : (term175 _61040) = (term310 _61040).
Proof. exact (MK_COMB (@lem4908785) (@lem4908723 _61040)). Qed.
Lemma lem4908787 (_61040 : int) : (term187 _61040) = (term311 _61040).
Proof. exact (MK_COMB (@lem4908786 _61040) (@lem4908784 _61040)). Qed.
Lemma lem4908788 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4908789 (_61039 : int) (_61040 : int) : (term188 _61039 _61040) = (term312 _61039 _61040).
Proof. exact (MK_COMB (@lem4908788) (@lem4908656 _61039 _61040)). Qed.
Lemma lem4908790 (_61039 : int) (_61040 : int) : (term189 _61039 _61040) = (term313 _61039 _61040).
Proof. exact (MK_COMB (@lem4908789 _61039 _61040) (@lem4908787 _61040)). Qed.
Lemma lem4908791 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4908792 (_61039 : int) (_61040 : int) : (term190 _61039 _61040) = (term314 _61039 _61040).
Proof. exact (MK_COMB (@lem4908791) (@lem4908585 _61039 _61040)). Qed.
Lemma lem4908793 (_61039 : int) (_61040 : int) : (term191 _61039 _61040) = (term315 _61039 _61040).
Proof. exact (MK_COMB (@lem4908792 _61039 _61040) (@lem4908790 _61039 _61040)). Qed.
Lemma lem4908794 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4908795 (_61040 : int) (_61039 : int) : (term192 _61040 _61039) = (term316 _61040 _61039).
Proof. exact (MK_COMB (@lem4908794) (@lem4908515 _61040 _61039)). Qed.
Lemma lem4908796 (_61039 : int) (_61040 : int) : (term193 _61039 _61040) = (term317 _61039 _61040).
Proof. exact (MK_COMB (@lem4908795 _61040 _61039) (@lem4908793 _61039 _61040)). Qed.
Lemma lem4908797 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4908798 (_61040 : int) : (term194 _61040) = (term318 _61040).
Proof. exact (MK_COMB (@lem4908797) (@lem4908220 _61040)). Qed.
Lemma lem4908799 (_61039 : int) (_61040 : int) : (term195 _61039 _61040) = (term319 _61039 _61040).
Proof. exact (MK_COMB (@lem4908798 _61040) (@lem4908796 _61039 _61040)). Qed.
Lemma lem4908800 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4908801 (_61039 : int) : (term194 _61039) = (term318 _61039).
Proof. exact (MK_COMB (@lem4908800) (@lem4908172 _61039)). Qed.
Lemma lem4908802 (_61039 : int) (_61040 : int) : (term196 _61039 _61040) = (term320 _61039 _61040).
Proof. exact (MK_COMB (@lem4908801 _61039) (@lem4908799 _61039 _61040)). Qed.
Lemma lem4908809 (_61039 : int) (_61040 : int) : (term198 _61039 _61040) = (term320 _61039 _61040).
Proof. exact (TRANS (@lem4908124 _61039 _61040) (@lem4908802 _61039 _61040)). Qed.
Lemma lem4908827 (_61039 : int) (_61040 : int) : (term315 _61039 _61040) = (term321 _61039 _61040).
Proof. exact (@lem19158 (term293 _61039 _61040) (term289 _61039 _61040) (term311 _61040)). Qed.
Lemma lem4908828 (_61039 : int) (_61040 : int) : (term322 _61039 _61040) = (term323 _61039 _61040).
Proof. exact (@lem19158 (term300 _61040) (term289 _61039 _61040) (term309 _61040)). Qed.
Lemma lem4908835 (_61039 : int) (_61040 : int) : (term324 _61039 _61040) = (term325 _61039 _61040).
Proof. exact (@lem19367 (term287 _61039 _61040) ((real_of_int _61040) = term140) (term309 _61040)). Qed.
Lemma lem4908842 (_61039 : int) (_61040 : int) : (term326 _61039 _61040) = (term327 _61039 _61040).
Proof. exact (@lem19367 (term287 _61039 _61040) ((real_of_int _61040) = term140) (term300 _61040)). Qed.
Lemma lem4908843 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4908844 (_61039 : int) (_61040 : int) : (term328 _61039 _61040) = (term329 _61039 _61040).
Proof. exact (MK_COMB (@lem4908843) (@lem4908842 _61039 _61040)). Qed.
Lemma lem4908845 (_61039 : int) (_61040 : int) : (term323 _61039 _61040) = (term330 _61039 _61040).
Proof. exact (MK_COMB (@lem4908844 _61039 _61040) (@lem4908835 _61039 _61040)). Qed.
Lemma lem4908846 (_61039 : int) (_61040 : int) : (term322 _61039 _61040) = (term330 _61039 _61040).
Proof. exact (TRANS (@lem4908828 _61039 _61040) (@lem4908845 _61039 _61040)). Qed.
Lemma lem4908853 (_61039 : int) (_61040 : int) : (term331 _61039 _61040) = (term332 _61039 _61040).
Proof. exact (@lem19367 (term287 _61039 _61040) ((real_of_int _61040) = term140) (term293 _61039 _61040)). Qed.
Lemma lem4908854 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4908855 (_61039 : int) (_61040 : int) : (term333 _61039 _61040) = (term334 _61039 _61040).
Proof. exact (MK_COMB (@lem4908854) (@lem4908853 _61039 _61040)). Qed.
Lemma lem4908856 (_61039 : int) (_61040 : int) : (term321 _61039 _61040) = (term335 _61039 _61040).
Proof. exact (MK_COMB (@lem4908855 _61039 _61040) (@lem4908846 _61039 _61040)). Qed.
Lemma lem4908858 (_61039 : int) (_61040 : int) : (term315 _61039 _61040) = (term335 _61039 _61040).
Proof. exact (TRANS (@lem4908827 _61039 _61040) (@lem4908856 _61039 _61040)). Qed.
Lemma lem4908871 (_61040 : int) (_61039 : int) : (term316 _61040 _61039) = (term316 _61040 _61039).
Proof. exact (eq_refl (term316 _61040 _61039)). Qed.
Lemma lem4908872 (_61039 : int) (_61040 : int) : (term317 _61039 _61040) = (term336 _61039 _61040).
Proof. exact (MK_COMB (@lem4908871 _61040 _61039) (@lem4908858 _61039 _61040)). Qed.
Lemma lem4908873 (_61039 : int) (_61040 : int) : (term336 _61039 _61040) = (term337 _61039 _61040).
Proof. exact (@lem19158 (term332 _61039 _61040) (term281 _61040 _61039) (term330 _61039 _61040)). Qed.
Lemma lem4908874 (_61039 : int) (_61040 : int) : (term338 _61039 _61040) = (term339 _61039 _61040).
Proof. exact (@lem19158 (term327 _61039 _61040) (term281 _61040 _61039) (term325 _61039 _61040)). Qed.
Lemma lem4908875 (_61039 : int) (_61040 : int) : (term340 _61039 _61040) = (term341 _61039 _61040).
Proof. exact (@lem19158 (term342 _61039 _61040) (term281 _61040 _61039) (term343 _61040)). Qed.
Lemma lem4908882 (_61039 : int) (_61040 : int) : (term344 _61039 _61040) = (term345 _61039 _61040).
Proof. exact (@lem19367 ((term243 _61039 _61040) = term140) (term279 _61040 _61039) (term343 _61040)). Qed.
Lemma lem4908889 (_61039 : int) (_61040 : int) : (term346 _61039 _61040) = (term347 _61039 _61040).
Proof. exact (@lem19367 ((term243 _61039 _61040) = term140) (term279 _61040 _61039) (term342 _61039 _61040)). Qed.
Lemma lem4908890 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4908891 (_61039 : int) (_61040 : int) : (term348 _61039 _61040) = (term349 _61039 _61040).
Proof. exact (MK_COMB (@lem4908890) (@lem4908889 _61039 _61040)). Qed.
Lemma lem4908892 (_61039 : int) (_61040 : int) : (term341 _61039 _61040) = (term350 _61039 _61040).
Proof. exact (MK_COMB (@lem4908891 _61039 _61040) (@lem4908882 _61039 _61040)). Qed.
Lemma lem4908893 (_61039 : int) (_61040 : int) : (term340 _61039 _61040) = (term350 _61039 _61040).
Proof. exact (TRANS (@lem4908875 _61039 _61040) (@lem4908892 _61039 _61040)). Qed.
Lemma lem4908894 (_61039 : int) (_61040 : int) : (term351 _61039 _61040) = (term352 _61039 _61040).
Proof. exact (@lem19158 (term353 _61039 _61040) (term281 _61040 _61039) (term354 _61040)). Qed.
Lemma lem4908901 (_61039 : int) (_61040 : int) : (term355 _61039 _61040) = (term356 _61039 _61040).
Proof. exact (@lem19367 ((term243 _61039 _61040) = term140) (term279 _61040 _61039) (term354 _61040)). Qed.
Lemma lem4908908 (_61039 : int) (_61040 : int) : (term357 _61039 _61040) = (term358 _61039 _61040).
Proof. exact (@lem19367 ((term243 _61039 _61040) = term140) (term279 _61040 _61039) (term353 _61039 _61040)). Qed.
Lemma lem4908909 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4908910 (_61039 : int) (_61040 : int) : (term359 _61039 _61040) = (term360 _61039 _61040).
Proof. exact (MK_COMB (@lem4908909) (@lem4908908 _61039 _61040)). Qed.
Lemma lem4908911 (_61039 : int) (_61040 : int) : (term352 _61039 _61040) = (term361 _61039 _61040).
Proof. exact (MK_COMB (@lem4908910 _61039 _61040) (@lem4908901 _61039 _61040)). Qed.
Lemma lem4908912 (_61039 : int) (_61040 : int) : (term351 _61039 _61040) = (term361 _61039 _61040).
Proof. exact (TRANS (@lem4908894 _61039 _61040) (@lem4908911 _61039 _61040)). Qed.
Lemma lem4908913 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4908914 (_61039 : int) (_61040 : int) : (term362 _61039 _61040) = (term363 _61039 _61040).
Proof. exact (MK_COMB (@lem4908913) (@lem4908912 _61039 _61040)). Qed.
Lemma lem4908915 (_61039 : int) (_61040 : int) : (term339 _61039 _61040) = (term364 _61039 _61040).
Proof. exact (MK_COMB (@lem4908914 _61039 _61040) (@lem4908893 _61039 _61040)). Qed.
Lemma lem4908916 (_61039 : int) (_61040 : int) : (term338 _61039 _61040) = (term364 _61039 _61040).
Proof. exact (TRANS (@lem4908874 _61039 _61040) (@lem4908915 _61039 _61040)). Qed.
Lemma lem4908917 (_61039 : int) (_61040 : int) : (term365 _61039 _61040) = (term366 _61039 _61040).
Proof. exact (@lem19158 (term367 _61039 _61040) (term281 _61040 _61039) (term368 _61039 _61040)). Qed.
Lemma lem4908924 (_61039 : int) (_61040 : int) : (term369 _61039 _61040) = (term370 _61039 _61040).
Proof. exact (@lem19367 ((term243 _61039 _61040) = term140) (term279 _61040 _61039) (term368 _61039 _61040)). Qed.
Lemma lem4908931 (_61039 : int) (_61040 : int) : (term371 _61039 _61040) = (term372 _61039 _61040).
Proof. exact (@lem19367 ((term243 _61039 _61040) = term140) (term279 _61040 _61039) (term367 _61039 _61040)). Qed.
Lemma lem4908932 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4908933 (_61039 : int) (_61040 : int) : (term373 _61039 _61040) = (term374 _61039 _61040).
Proof. exact (MK_COMB (@lem4908932) (@lem4908931 _61039 _61040)). Qed.
Lemma lem4908934 (_61039 : int) (_61040 : int) : (term366 _61039 _61040) = (term375 _61039 _61040).
Proof. exact (MK_COMB (@lem4908933 _61039 _61040) (@lem4908924 _61039 _61040)). Qed.
Lemma lem4908935 (_61039 : int) (_61040 : int) : (term365 _61039 _61040) = (term375 _61039 _61040).
Proof. exact (TRANS (@lem4908917 _61039 _61040) (@lem4908934 _61039 _61040)). Qed.
Lemma lem4908936 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4908937 (_61039 : int) (_61040 : int) : (term376 _61039 _61040) = (term377 _61039 _61040).
Proof. exact (MK_COMB (@lem4908936) (@lem4908935 _61039 _61040)). Qed.
Lemma lem4908938 (_61039 : int) (_61040 : int) : (term337 _61039 _61040) = (term378 _61039 _61040).
Proof. exact (MK_COMB (@lem4908937 _61039 _61040) (@lem4908916 _61039 _61040)). Qed.
Lemma lem4908939 (_61039 : int) (_61040 : int) : (term336 _61039 _61040) = (term378 _61039 _61040).
Proof. exact (TRANS (@lem4908873 _61039 _61040) (@lem4908938 _61039 _61040)). Qed.
Lemma lem4908940 (_61039 : int) (_61040 : int) : (term317 _61039 _61040) = (term378 _61039 _61040).
Proof. exact (TRANS (@lem4908872 _61039 _61040) (@lem4908939 _61039 _61040)). Qed.
Lemma lem4908943 (_61040 : int) : (term318 _61040) = (term318 _61040).
Proof. exact (eq_refl (term318 _61040)). Qed.
Lemma lem4908944 (_61039 : int) (_61040 : int) : (term319 _61039 _61040) = (term379 _61039 _61040).
Proof. exact (MK_COMB (@lem4908943 _61040) (@lem4908940 _61039 _61040)). Qed.
Lemma lem4908945 (_61039 : int) (_61040 : int) : (term379 _61039 _61040) = (term380 _61039 _61040).
Proof. exact (@lem19158 (term375 _61039 _61040) (term226 _61040) (term364 _61039 _61040)). Qed.
Lemma lem4908946 (_61039 : int) (_61040 : int) : (term381 _61039 _61040) = (term382 _61039 _61040).
Proof. exact (@lem19158 (term361 _61039 _61040) (term226 _61040) (term350 _61039 _61040)). Qed.
Lemma lem4908947 (_61039 : int) (_61040 : int) : (term383 _61039 _61040) = (term384 _61039 _61040).
Proof. exact (@lem19158 (term347 _61039 _61040) (term226 _61040) (term345 _61039 _61040)). Qed.
Lemma lem4908954 (_61039 : int) (_61040 : int) : (term385 _61039 _61040) = (term386 _61039 _61040).
Proof. exact (@lem19158 (term387 _61039 _61040) (term226 _61040) (term388 _61039 _61040)). Qed.
Lemma lem4908961 (_61039 : int) (_61040 : int) : (term389 _61039 _61040) = (term390 _61039 _61040).
Proof. exact (@lem19158 (term391 _61039 _61040) (term226 _61040) (term392 _61039 _61040)). Qed.
Lemma lem4908962 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4908963 (_61039 : int) (_61040 : int) : (term393 _61039 _61040) = (term394 _61039 _61040).
Proof. exact (MK_COMB (@lem4908962) (@lem4908961 _61039 _61040)). Qed.
Lemma lem4908964 (_61039 : int) (_61040 : int) : (term384 _61039 _61040) = (term395 _61039 _61040).
Proof. exact (MK_COMB (@lem4908963 _61039 _61040) (@lem4908954 _61039 _61040)). Qed.
Lemma lem4908965 (_61039 : int) (_61040 : int) : (term383 _61039 _61040) = (term395 _61039 _61040).
Proof. exact (TRANS (@lem4908947 _61039 _61040) (@lem4908964 _61039 _61040)). Qed.
Lemma lem4908966 (_61039 : int) (_61040 : int) : (term396 _61039 _61040) = (term397 _61039 _61040).
Proof. exact (@lem19158 (term358 _61039 _61040) (term226 _61040) (term356 _61039 _61040)). Qed.
Lemma lem4908973 (_61039 : int) (_61040 : int) : (term398 _61039 _61040) = (term399 _61039 _61040).
Proof. exact (@lem19158 (term400 _61039 _61040) (term226 _61040) (term401 _61039 _61040)). Qed.
Lemma lem4908980 (_61039 : int) (_61040 : int) : (term402 _61039 _61040) = (term403 _61039 _61040).
Proof. exact (@lem19158 (term404 _61039 _61040) (term226 _61040) (term405 _61039 _61040)). Qed.
Lemma lem4908981 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4908982 (_61039 : int) (_61040 : int) : (term406 _61039 _61040) = (term407 _61039 _61040).
Proof. exact (MK_COMB (@lem4908981) (@lem4908980 _61039 _61040)). Qed.
Lemma lem4908983 (_61039 : int) (_61040 : int) : (term397 _61039 _61040) = (term408 _61039 _61040).
Proof. exact (MK_COMB (@lem4908982 _61039 _61040) (@lem4908973 _61039 _61040)). Qed.
Lemma lem4908984 (_61039 : int) (_61040 : int) : (term396 _61039 _61040) = (term408 _61039 _61040).
Proof. exact (TRANS (@lem4908966 _61039 _61040) (@lem4908983 _61039 _61040)). Qed.
Lemma lem4908985 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4908986 (_61039 : int) (_61040 : int) : (term409 _61039 _61040) = (term410 _61039 _61040).
Proof. exact (MK_COMB (@lem4908985) (@lem4908984 _61039 _61040)). Qed.
Lemma lem4908987 (_61039 : int) (_61040 : int) : (term382 _61039 _61040) = (term411 _61039 _61040).
Proof. exact (MK_COMB (@lem4908986 _61039 _61040) (@lem4908965 _61039 _61040)). Qed.
Lemma lem4908988 (_61039 : int) (_61040 : int) : (term381 _61039 _61040) = (term411 _61039 _61040).
Proof. exact (TRANS (@lem4908946 _61039 _61040) (@lem4908987 _61039 _61040)). Qed.
Lemma lem4908989 (_61039 : int) (_61040 : int) : (term412 _61039 _61040) = (term413 _61039 _61040).
Proof. exact (@lem19158 (term372 _61039 _61040) (term226 _61040) (term370 _61039 _61040)). Qed.
Lemma lem4908996 (_61039 : int) (_61040 : int) : (term414 _61039 _61040) = (term415 _61039 _61040).
Proof. exact (@lem19158 (term416 _61039 _61040) (term226 _61040) (term417 _61039 _61040)). Qed.
Lemma lem4909003 (_61039 : int) (_61040 : int) : (term418 _61039 _61040) = (term419 _61039 _61040).
Proof. exact (@lem19158 (term420 _61039 _61040) (term226 _61040) (term421 _61039 _61040)). Qed.
Lemma lem4909004 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4909005 (_61039 : int) (_61040 : int) : (term422 _61039 _61040) = (term423 _61039 _61040).
Proof. exact (MK_COMB (@lem4909004) (@lem4909003 _61039 _61040)). Qed.
Lemma lem4909006 (_61039 : int) (_61040 : int) : (term413 _61039 _61040) = (term424 _61039 _61040).
Proof. exact (MK_COMB (@lem4909005 _61039 _61040) (@lem4908996 _61039 _61040)). Qed.
Lemma lem4909007 (_61039 : int) (_61040 : int) : (term412 _61039 _61040) = (term424 _61039 _61040).
Proof. exact (TRANS (@lem4908989 _61039 _61040) (@lem4909006 _61039 _61040)). Qed.
Lemma lem4909008 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4909009 (_61039 : int) (_61040 : int) : (term425 _61039 _61040) = (term426 _61039 _61040).
Proof. exact (MK_COMB (@lem4909008) (@lem4909007 _61039 _61040)). Qed.
Lemma lem4909010 (_61039 : int) (_61040 : int) : (term380 _61039 _61040) = (term427 _61039 _61040).
Proof. exact (MK_COMB (@lem4909009 _61039 _61040) (@lem4908988 _61039 _61040)). Qed.
Lemma lem4909011 (_61039 : int) (_61040 : int) : (term379 _61039 _61040) = (term427 _61039 _61040).
Proof. exact (TRANS (@lem4908945 _61039 _61040) (@lem4909010 _61039 _61040)). Qed.
Lemma lem4909012 (_61039 : int) (_61040 : int) : (term319 _61039 _61040) = (term427 _61039 _61040).
Proof. exact (TRANS (@lem4908944 _61039 _61040) (@lem4909011 _61039 _61040)). Qed.
Lemma lem4909015 (_61039 : int) : (term318 _61039) = (term318 _61039).
Proof. exact (eq_refl (term318 _61039)). Qed.
Lemma lem4909016 (_61039 : int) (_61040 : int) : (term320 _61039 _61040) = (term428 _61039 _61040).
Proof. exact (MK_COMB (@lem4909015 _61039) (@lem4909012 _61039 _61040)). Qed.
Lemma lem4909017 (_61039 : int) (_61040 : int) : (term428 _61039 _61040) = (term429 _61039 _61040).
Proof. exact (@lem19158 (term424 _61039 _61040) (term226 _61039) (term411 _61039 _61040)). Qed.
Lemma lem4909018 (_61039 : int) (_61040 : int) : (term430 _61039 _61040) = (term431 _61039 _61040).
Proof. exact (@lem19158 (term408 _61039 _61040) (term226 _61039) (term395 _61039 _61040)). Qed.
Lemma lem4909019 (_61039 : int) (_61040 : int) : (term432 _61039 _61040) = (term433 _61039 _61040).
Proof. exact (@lem19158 (term390 _61039 _61040) (term226 _61039) (term386 _61039 _61040)). Qed.
Lemma lem4909026 (_61039 : int) (_61040 : int) : (term434 _61039 _61040) = (term435 _61039 _61040).
Proof. exact (@lem19158 (term436 _61039 _61040) (term226 _61039) (term437 _61039 _61040)). Qed.
Lemma lem4909033 (_61039 : int) (_61040 : int) : (term438 _61039 _61040) = (term439 _61039 _61040).
Proof. exact (@lem19158 (term440 _61039 _61040) (term226 _61039) (term441 _61039 _61040)). Qed.
Lemma lem4909034 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4909035 (_61039 : int) (_61040 : int) : (term442 _61039 _61040) = (term443 _61039 _61040).
Proof. exact (MK_COMB (@lem4909034) (@lem4909033 _61039 _61040)). Qed.
Lemma lem4909036 (_61039 : int) (_61040 : int) : (term433 _61039 _61040) = (term444 _61039 _61040).
Proof. exact (MK_COMB (@lem4909035 _61039 _61040) (@lem4909026 _61039 _61040)). Qed.
Lemma lem4909037 (_61039 : int) (_61040 : int) : (term432 _61039 _61040) = (term444 _61039 _61040).
Proof. exact (TRANS (@lem4909019 _61039 _61040) (@lem4909036 _61039 _61040)). Qed.
Lemma lem4909038 (_61039 : int) (_61040 : int) : (term445 _61039 _61040) = (term446 _61039 _61040).
Proof. exact (@lem19158 (term403 _61039 _61040) (term226 _61039) (term399 _61039 _61040)). Qed.
Lemma lem4909045 (_61039 : int) (_61040 : int) : (term447 _61039 _61040) = (term448 _61039 _61040).
Proof. exact (@lem19158 (term449 _61039 _61040) (term226 _61039) (term450 _61039 _61040)). Qed.
Lemma lem4909052 (_61039 : int) (_61040 : int) : (term451 _61039 _61040) = (term452 _61039 _61040).
Proof. exact (@lem19158 (term453 _61039 _61040) (term226 _61039) (term454 _61039 _61040)). Qed.
Lemma lem4909053 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4909054 (_61039 : int) (_61040 : int) : (term455 _61039 _61040) = (term456 _61039 _61040).
Proof. exact (MK_COMB (@lem4909053) (@lem4909052 _61039 _61040)). Qed.
Lemma lem4909055 (_61039 : int) (_61040 : int) : (term446 _61039 _61040) = (term457 _61039 _61040).
Proof. exact (MK_COMB (@lem4909054 _61039 _61040) (@lem4909045 _61039 _61040)). Qed.
Lemma lem4909056 (_61039 : int) (_61040 : int) : (term445 _61039 _61040) = (term457 _61039 _61040).
Proof. exact (TRANS (@lem4909038 _61039 _61040) (@lem4909055 _61039 _61040)). Qed.
Lemma lem4909057 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4909058 (_61039 : int) (_61040 : int) : (term458 _61039 _61040) = (term459 _61039 _61040).
Proof. exact (MK_COMB (@lem4909057) (@lem4909056 _61039 _61040)). Qed.
Lemma lem4909059 (_61039 : int) (_61040 : int) : (term431 _61039 _61040) = (term460 _61039 _61040).
Proof. exact (MK_COMB (@lem4909058 _61039 _61040) (@lem4909037 _61039 _61040)). Qed.
Lemma lem4909060 (_61039 : int) (_61040 : int) : (term430 _61039 _61040) = (term460 _61039 _61040).
Proof. exact (TRANS (@lem4909018 _61039 _61040) (@lem4909059 _61039 _61040)). Qed.
Lemma lem4909061 (_61039 : int) (_61040 : int) : (term461 _61039 _61040) = (term462 _61039 _61040).
Proof. exact (@lem19158 (term419 _61039 _61040) (term226 _61039) (term415 _61039 _61040)). Qed.
Lemma lem4909068 (_61039 : int) (_61040 : int) : (term463 _61039 _61040) = (term464 _61039 _61040).
Proof. exact (@lem19158 (term465 _61039 _61040) (term226 _61039) (term466 _61039 _61040)). Qed.
Lemma lem4909075 (_61039 : int) (_61040 : int) : (term467 _61039 _61040) = (term468 _61039 _61040).
Proof. exact (@lem19158 (term469 _61039 _61040) (term226 _61039) (term470 _61039 _61040)). Qed.
Lemma lem4909076 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4909077 (_61039 : int) (_61040 : int) : (term471 _61039 _61040) = (term472 _61039 _61040).
Proof. exact (MK_COMB (@lem4909076) (@lem4909075 _61039 _61040)). Qed.
Lemma lem4909078 (_61039 : int) (_61040 : int) : (term462 _61039 _61040) = (term473 _61039 _61040).
Proof. exact (MK_COMB (@lem4909077 _61039 _61040) (@lem4909068 _61039 _61040)). Qed.
Lemma lem4909079 (_61039 : int) (_61040 : int) : (term461 _61039 _61040) = (term473 _61039 _61040).
Proof. exact (TRANS (@lem4909061 _61039 _61040) (@lem4909078 _61039 _61040)). Qed.
Lemma lem4909080 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4909081 (_61039 : int) (_61040 : int) : (term474 _61039 _61040) = (term475 _61039 _61040).
Proof. exact (MK_COMB (@lem4909080) (@lem4909079 _61039 _61040)). Qed.
Lemma lem4909082 (_61039 : int) (_61040 : int) : (term429 _61039 _61040) = (term476 _61039 _61040).
Proof. exact (MK_COMB (@lem4909081 _61039 _61040) (@lem4909060 _61039 _61040)). Qed.
Lemma lem4909083 (_61039 : int) (_61040 : int) : (term428 _61039 _61040) = (term476 _61039 _61040).
Proof. exact (TRANS (@lem4909017 _61039 _61040) (@lem4909082 _61039 _61040)). Qed.
Lemma lem4909084 (_61039 : int) (_61040 : int) : (term320 _61039 _61040) = (term476 _61039 _61040).
Proof. exact (TRANS (@lem4909016 _61039 _61040) (@lem4909083 _61039 _61040)). Qed.
Lemma lem4909085 (_61039 : int) (_61040 : int) : (term198 _61039 _61040) = (term476 _61039 _61040).
Proof. exact (TRANS (@lem4908809 _61039 _61040) (@lem4909084 _61039 _61040)). Qed.
Lemma lem4909155 (_61039 : int) (_61040 : int) (h1 : term476 _61039 _61040) : term476 _61039 _61040.
Proof. exact (h1). Qed.
Lemma lem4909156 (_61039 : int) (_61040 : int) (h1 : term473 _61039 _61040) : term473 _61039 _61040.
Proof. exact (h1). Qed.
Lemma lem4909157 (_61039 : int) (_61040 : int) (h1 : term468 _61039 _61040) : term468 _61039 _61040.
Proof. exact (h1). Qed.
Lemma lem4909158 (_61039 : int) (_61040 : int) (h1 : term477 _61039 _61040) : term477 _61039 _61040.
Proof. exact (h1). Qed.
Lemma lem4909159 (_61039 : int) (_61040 : int) (h1 : term477 _61039 _61040) : term469 _61039 _61040.
Proof. exact (proj2 (@lem4909158 _61039 _61040 h1)). Qed.
Lemma lem4909161 (_61039 : int) (_61040 : int) (h1 : term477 _61039 _61040) : term420 _61039 _61040.
Proof. exact (proj2 (@lem4909159 _61039 _61040 h1)). Qed.
Lemma lem4909163 (_61039 : int) (_61040 : int) (h1 : term477 _61039 _61040) : term367 _61039 _61040.
Proof. exact (proj2 (@lem4909161 _61039 _61040 h1)). Qed.
Lemma lem4909164 (_61039 : int) (_61040 : int) (h1 : term477 _61039 _61040) : (term243 _61039 _61040) = term140.
Proof. exact (proj1 (@lem4909161 _61039 _61040 h1)). Qed.
Lemma lem4909166 (_61039 : int) (_61040 : int) (h1 : term477 _61039 _61040) : term287 _61039 _61040.
Proof. exact (proj1 (@lem4909163 _61039 _61040 h1)). Qed.
Lemma lem4909168 (y : real) (x : real) : (real_gt x y) = (real_lt y x).
Proof. exact (EQ_MP (@lem1980266 y x) (@lem1980265 y x)). Qed.
Lemma lem4909169 : term478 = term258.
Proof. exact (@lem4909168 term140 term150). Qed.
Lemma lem4909171 (x : nat) : (real_of_num x) = (term202 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem4909172 : term150 = term231.
Proof. exact (@lem4909171 term18). Qed.
Lemma lem4909174 (x : nat) : (real_of_num x) = (term202 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem4909175 : term140 = term203.
Proof. exact (@lem4909174 (NUMERAL 0)). Qed.
Lemma lem4909176 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem4909177 : term479 = term480.
Proof. exact (MK_COMB (@lem4909176) (@lem4909175)). Qed.
Lemma lem4909178 : term258 = term481.
Proof. exact (MK_COMB (@lem4909177) (@lem4909172)). Qed.
Lemma lem4909179 : term482.
Proof. exact (@lem1980255 term140 term150 term150 term150). Qed.
Lemma lem4909181 (m : nat) (n : nat) : (term257 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem4909182 : term258 = term259.
Proof. exact (@lem4909181 (NUMERAL 0) term18). Qed.
Lemma lem4909183 : term260 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem4909184 (h1 : term260 = (BIT1 0)) : term259 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem4909185 : (term260 = (BIT1 0)) = (term259 = True).
Proof. exact (prop_ext (fun h1 : term260 = (BIT1 0) => @lem4909184 h1) (fun h1 : term259 = True => @lem4909183)). Qed.
Lemma lem4909186 : term259 = True.
Proof. exact (EQ_MP (@lem4909185) (@lem4909183)). Qed.
Lemma lem4909187 : term258 = True.
Proof. exact (TRANS (@lem4909182) (@lem4909186)). Qed.
Lemma lem4909188 : True = term258.
Proof. exact (SYM (@lem4909187)). Qed.
Lemma lem4909189 : term258.
Proof. exact (EQ_MP (@lem4909188) (@lem0)). Qed.
Lemma lem4909190 : term483.
Proof. exact (@lem4909179 (@lem4909189)). Qed.
Lemma lem4909192 (m : nat) (n : nat) : (term257 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem4909193 : term258 = term259.
Proof. exact (@lem4909192 (NUMERAL 0) term18). Qed.
Lemma lem4909194 : term260 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem4909195 (h1 : term260 = (BIT1 0)) : term259 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem4909196 : (term260 = (BIT1 0)) = (term259 = True).
Proof. exact (prop_ext (fun h1 : term260 = (BIT1 0) => @lem4909195 h1) (fun h1 : term259 = True => @lem4909194)). Qed.
Lemma lem4909197 : term259 = True.
Proof. exact (EQ_MP (@lem4909196) (@lem4909194)). Qed.
Lemma lem4909198 : term258 = True.
Proof. exact (TRANS (@lem4909193) (@lem4909197)). Qed.
Lemma lem4909199 : True = term258.
Proof. exact (SYM (@lem4909198)). Qed.
Lemma lem4909200 : term258.
Proof. exact (EQ_MP (@lem4909199) (@lem0)). Qed.
Lemma lem4909201 : term481 = term484.
Proof. exact (@lem4909190 (@lem4909200)). Qed.
Lemma lem4909203 (m : nat) (n : nat) : (term213 m n) = (term214 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem4909204 : term215 = term216.
Proof. exact (@lem4909203 term18 term18). Qed.
Lemma lem4909205 : (term217 = (BIT1 0)) = (term218 = term18).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem4909206 : term218 = term18.
Proof. exact (EQ_MP (@lem4909205) (@lem940073)). Qed.
Lemma lem4909207 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem4909208 : term216 = term150.
Proof. exact (MK_COMB (@lem4909207) (@lem4909206)). Qed.
Lemma lem4909209 : term215 = term150.
Proof. exact (TRANS (@lem4909204) (@lem4909208)). Qed.
Lemma lem4909211 (x : nat) : (term271 x) = term140.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem4909212 : term270 = term140.
Proof. exact (@lem4909211 term18). Qed.
Lemma lem4909213 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem4909214 : term485 = term479.
Proof. exact (MK_COMB (@lem4909213) (@lem4909212)). Qed.
Lemma lem4909215 : term484 = term258.
Proof. exact (MK_COMB (@lem4909214) (@lem4909209)). Qed.
Lemma lem4909217 (m : nat) (n : nat) : (term257 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem4909218 : term258 = term259.
Proof. exact (@lem4909217 (NUMERAL 0) term18). Qed.
Lemma lem4909219 : term260 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem4909220 (h1 : term260 = (BIT1 0)) : term259 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem4909221 : (term260 = (BIT1 0)) = (term259 = True).
Proof. exact (prop_ext (fun h1 : term260 = (BIT1 0) => @lem4909220 h1) (fun h1 : term259 = True => @lem4909219)). Qed.
Lemma lem4909222 : term259 = True.
Proof. exact (EQ_MP (@lem4909221) (@lem4909219)). Qed.
Lemma lem4909223 : term258 = True.
Proof. exact (TRANS (@lem4909218) (@lem4909222)). Qed.
Lemma lem4909224 : term484 = True.
Proof. exact (TRANS (@lem4909215) (@lem4909223)). Qed.
Lemma lem4909225 : term481 = True.
Proof. exact (TRANS (@lem4909201) (@lem4909224)). Qed.
Lemma lem4909226 : term258 = True.
Proof. exact (TRANS (@lem4909178) (@lem4909225)). Qed.
Lemma lem4909227 : term478 = True.
Proof. exact (TRANS (@lem4909169) (@lem4909226)). Qed.
Lemma lem4909228 : True = term478.
Proof. exact (SYM (@lem4909227)). Qed.
Lemma lem4909229 : term478.
Proof. exact (EQ_MP (@lem4909228) (@lem0)). Qed.
Lemma lem4909230 (_61039 : int) (_61040 : int) (h1 : term477 _61039 _61040) : term486 _61039 _61040.
Proof. exact (conj (@lem4909229) (@lem4909166 _61039 _61040 h1)). Qed.
Lemma lem4909232 (x : real) (y : real) : term487 x y.
Proof. exact (proj1 (@lem1988332 x y)). Qed.
Lemma lem4909233 (_61039 : int) (_61040 : int) : term488 _61039 _61040.
Proof. exact (@lem4909232 term150 (term284 _61039 _61040)). Qed.
Lemma lem4909234 (_61039 : int) (_61040 : int) (h1 : term477 _61039 _61040) : term489 _61039 _61040.
Proof. exact (@lem4909233 _61039 _61040 (@lem4909230 _61039 _61040 h1)). Qed.
Lemma lem4909235 (_61039 : int) (_61040 : int) : (term490 _61039 _61040) = (term284 _61039 _61040).
Proof. exact (@lem1982733 (term284 _61039 _61040)). Qed.
Lemma lem4909236 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem4909237 (_61039 : int) (_61040 : int) : (term491 _61039 _61040) = (term286 _61039 _61040).
Proof. exact (MK_COMB (@lem4909236) (@lem4909235 _61039 _61040)). Qed.
Lemma lem4909238 : term140 = term140.
Proof. exact (eq_refl term140). Qed.
Lemma lem4909239 (_61039 : int) (_61040 : int) : (term489 _61039 _61040) = (term287 _61039 _61040).
Proof. exact (MK_COMB (@lem4909237 _61039 _61040) (@lem4909238)). Qed.
Lemma lem4909240 (_61039 : int) (_61040 : int) (h1 : term477 _61039 _61040) : term287 _61039 _61040.
Proof. exact (EQ_MP (@lem4909239 _61039 _61040) (@lem4909234 _61039 _61040 h1)). Qed.
Lemma lem4909242 (y : real) : term492 y.
Proof. exact (EQ_MP (@lem1396750 y) (@lem0)). Qed.
Lemma lem4909243 (_61039 : int) (_61040 : int) : term493 _61039 _61040.
Proof. exact (@lem4909242 (term243 _61039 _61040)). Qed.
Lemma lem4909244 (_61039 : int) (_61040 : int) (h1 : term477 _61039 _61040) : term494 _61039 _61040.
Proof. exact (@lem4909243 _61039 _61040 (@lem4909164 _61039 _61040 h1)). Qed.
Lemma lem4909245 (_61039 : int) (_61040 : int) (h1 : term477 _61039 _61040) : term495 _61039 _61040.
Proof. exact (@lem4909244 _61039 _61040 h1 term150). Qed.
Lemma lem4909246 (_61039 : int) (_61040 : int) : (term495 _61039 _61040) = ((term496 _61039 _61040) = term140).
Proof. exact (eq_refl (term495 _61039 _61040)). Qed.
Lemma lem4909247 (_61039 : int) (_61040 : int) (h1 : term477 _61039 _61040) : (term496 _61039 _61040) = term140.
Proof. exact (EQ_MP (@lem4909246 _61039 _61040) (@lem4909245 _61039 _61040 h1)). Qed.
Lemma lem4909248 (_61039 : int) (_61040 : int) : (term496 _61039 _61040) = (term243 _61039 _61040).
Proof. exact (@lem1982733 (term243 _61039 _61040)). Qed.
Lemma lem4909249 : (@eq real) = (@eq real).
Proof. exact (eq_refl (@eq real)). Qed.
Lemma lem4909250 (_61039 : int) (_61040 : int) : (term497 _61039 _61040) = (term246 _61039 _61040).
Proof. exact (MK_COMB (@lem4909249) (@lem4909248 _61039 _61040)). Qed.
Lemma lem4909251 : term140 = term140.
Proof. exact (eq_refl term140). Qed.
Lemma lem4909252 (_61039 : int) (_61040 : int) : ((term496 _61039 _61040) = term140) = ((term243 _61039 _61040) = term140).
Proof. exact (MK_COMB (@lem4909250 _61039 _61040) (@lem4909251)). Qed.
Lemma lem4909253 (_61039 : int) (_61040 : int) (h1 : term477 _61039 _61040) : (term243 _61039 _61040) = term140.
Proof. exact (EQ_MP (@lem4909252 _61039 _61040) (@lem4909247 _61039 _61040 h1)). Qed.
Lemma lem4909254 (_61039 : int) (_61040 : int) (h1 : term477 _61039 _61040) : term498 _61039 _61040.
Proof. exact (conj (@lem4909253 _61039 _61040 h1) (@lem4909240 _61039 _61040 h1)). Qed.
Lemma lem4909256 (x : real) (y : real) : term499 x y.
Proof. exact (proj1 (@lem1988336 x y)). Qed.
Lemma lem4909257 (_61039 : int) (_61040 : int) : term500 _61039 _61040.
Proof. exact (@lem4909256 (term243 _61039 _61040) (term284 _61039 _61040)). Qed.
Lemma lem4909258 (_61039 : int) (_61040 : int) (h1 : term477 _61039 _61040) : term501 _61039 _61040.
Proof. exact (@lem4909257 _61039 _61040 (@lem4909254 _61039 _61040 h1)). Qed.
Lemma lem4909259 (_61039 : int) (_61040 : int) : (term502 _61039 _61040) = (term503 _61039 _61040).
Proof. exact (@lem1982753 (term244 _61039) (real_of_int _61039) (term306 _61040) (term244 _61040)). Qed.
Lemma lem4909260 (_61039 : int) : (term504 _61039) = (term505 _61039).
Proof. exact (@lem1982713 term206 (real_of_int _61039)). Qed.
Lemma lem4909262 (x : nat) : (real_of_num x) = (term202 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem4909263 : term150 = term231.
Proof. exact (@lem4909262 term18). Qed.
Lemma lem4909265 (x : nat) : (term204 x) = (term205 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem4909266 : term206 = term207.
Proof. exact (@lem4909265 term18). Qed.
Lemma lem4909267 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem4909268 : term506 = term507.
Proof. exact (MK_COMB (@lem4909267) (@lem4909266)). Qed.
Lemma lem4909269 : term508 = term509.
Proof. exact (MK_COMB (@lem4909268) (@lem4909263)). Qed.
Lemma lem4909270 : term510.
Proof. exact (@lem1981473 term206 term150 term150 term150 term140 term150). Qed.
Lemma lem4909272 (m : nat) (n : nat) : (term257 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem4909273 : term258 = term259.
Proof. exact (@lem4909272 (NUMERAL 0) term18). Qed.
Lemma lem4909274 : term260 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem4909275 (h1 : term260 = (BIT1 0)) : term259 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem4909276 : (term260 = (BIT1 0)) = (term259 = True).
Proof. exact (prop_ext (fun h1 : term260 = (BIT1 0) => @lem4909275 h1) (fun h1 : term259 = True => @lem4909274)). Qed.
Lemma lem4909277 : term259 = True.
Proof. exact (EQ_MP (@lem4909276) (@lem4909274)). Qed.
Lemma lem4909278 : term258 = True.
Proof. exact (TRANS (@lem4909273) (@lem4909277)). Qed.
Lemma lem4909279 : True = term258.
Proof. exact (SYM (@lem4909278)). Qed.
Lemma lem4909280 : term258.
Proof. exact (EQ_MP (@lem4909279) (@lem0)). Qed.
Lemma lem4909281 : term511.
Proof. exact (@lem4909270 (@lem4909280)). Qed.
Lemma lem4909283 (m : nat) (n : nat) : (term257 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem4909284 : term258 = term259.
Proof. exact (@lem4909283 (NUMERAL 0) term18). Qed.
Lemma lem4909285 : term260 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem4909286 (h1 : term260 = (BIT1 0)) : term259 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem4909287 : (term260 = (BIT1 0)) = (term259 = True).
Proof. exact (prop_ext (fun h1 : term260 = (BIT1 0) => @lem4909286 h1) (fun h1 : term259 = True => @lem4909285)). Qed.
Lemma lem4909288 : term259 = True.
Proof. exact (EQ_MP (@lem4909287) (@lem4909285)). Qed.
Lemma lem4909289 : term258 = True.
Proof. exact (TRANS (@lem4909284) (@lem4909288)). Qed.
Lemma lem4909290 : True = term258.
Proof. exact (SYM (@lem4909289)). Qed.
Lemma lem4909291 : term258.
Proof. exact (EQ_MP (@lem4909290) (@lem0)). Qed.
Lemma lem4909292 : term512.
Proof. exact (@lem4909281 (@lem4909291)). Qed.
Lemma lem4909294 (m : nat) (n : nat) : (term257 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem4909295 : term258 = term259.
Proof. exact (@lem4909294 (NUMERAL 0) term18). Qed.
Lemma lem4909296 : term260 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem4909297 (h1 : term260 = (BIT1 0)) : term259 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem4909298 : (term260 = (BIT1 0)) = (term259 = True).
Proof. exact (prop_ext (fun h1 : term260 = (BIT1 0) => @lem4909297 h1) (fun h1 : term259 = True => @lem4909296)). Qed.
Lemma lem4909299 : term259 = True.
Proof. exact (EQ_MP (@lem4909298) (@lem4909296)). Qed.
Lemma lem4909300 : term258 = True.
Proof. exact (TRANS (@lem4909295) (@lem4909299)). Qed.
Lemma lem4909301 : True = term258.
Proof. exact (SYM (@lem4909300)). Qed.
Lemma lem4909302 : term258.
Proof. exact (EQ_MP (@lem4909301) (@lem0)). Qed.
Lemma lem4909303 : term513.
Proof. exact (@lem4909292 (@lem4909302)). Qed.
Lemma lem4909305 (m : nat) (n : nat) : (term213 m n) = (term214 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem4909306 : term215 = term216.
Proof. exact (@lem4909305 term18 term18). Qed.
Lemma lem4909307 : (term217 = (BIT1 0)) = (term218 = term18).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem4909308 : term218 = term18.
Proof. exact (EQ_MP (@lem4909307) (@lem940073)). Qed.
Lemma lem4909309 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem4909310 : term216 = term150.
Proof. exact (MK_COMB (@lem4909309) (@lem4909308)). Qed.
Lemma lem4909311 : term215 = term150.
Proof. exact (TRANS (@lem4909306) (@lem4909310)). Qed.
Lemma lem4909313 (m : nat) (n : nat) : (term235 m n) = (term236 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem4909314 : term232 = term237.
Proof. exact (@lem4909313 term18 term18). Qed.
Lemma lem4909315 : (term217 = (BIT1 0)) = (term218 = term18).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem4909316 : term218 = term18.
Proof. exact (EQ_MP (@lem4909315) (@lem940073)). Qed.
Lemma lem4909317 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem4909318 : term216 = term150.
Proof. exact (MK_COMB (@lem4909317) (@lem4909316)). Qed.
Lemma lem4909319 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem4909320 : term237 = term206.
Proof. exact (MK_COMB (@lem4909319) (@lem4909318)). Qed.
Lemma lem4909321 : term232 = term206.
Proof. exact (TRANS (@lem4909314) (@lem4909320)). Qed.
Lemma lem4909322 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem4909323 : term514 = term506.
Proof. exact (MK_COMB (@lem4909322) (@lem4909321)). Qed.
Lemma lem4909324 : term515 = term508.
Proof. exact (MK_COMB (@lem4909323) (@lem4909311)). Qed.
Lemma lem4909326 (m : nat) : (term516 m) = term140.
Proof. exact (proj1 (@lem1367303 m)). Qed.
Lemma lem4909327 : term508 = term140.
Proof. exact (@lem4909326 term18). Qed.
Lemma lem4909328 : term515 = term140.
Proof. exact (TRANS (@lem4909324) (@lem4909327)). Qed.
Lemma lem4909329 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem4909330 : term517 = term268.
Proof. exact (MK_COMB (@lem4909329) (@lem4909328)). Qed.
Lemma lem4909331 : term150 = term150.
Proof. exact (eq_refl term150). Qed.
Lemma lem4909332 : term518 = term270.
Proof. exact (MK_COMB (@lem4909330) (@lem4909331)). Qed.
Lemma lem4909334 (x : nat) : (term271 x) = term140.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem4909335 : term270 = term140.
Proof. exact (@lem4909334 term18). Qed.
Lemma lem4909336 : term518 = term140.
Proof. exact (TRANS (@lem4909332) (@lem4909335)). Qed.
Lemma lem4909338 (m : nat) (n : nat) : (term213 m n) = (term214 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem4909339 : term215 = term216.
Proof. exact (@lem4909338 term18 term18). Qed.
Lemma lem4909340 : (term217 = (BIT1 0)) = (term218 = term18).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem4909341 : term218 = term18.
Proof. exact (EQ_MP (@lem4909340) (@lem940073)). Qed.
Lemma lem4909342 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem4909343 : term216 = term150.
Proof. exact (MK_COMB (@lem4909342) (@lem4909341)). Qed.
Lemma lem4909344 : term215 = term150.
Proof. exact (TRANS (@lem4909339) (@lem4909343)). Qed.
Lemma lem4909345 : term268 = term268.
Proof. exact (eq_refl term268). Qed.
Lemma lem4909346 : term272 = term270.
Proof. exact (MK_COMB (@lem4909345) (@lem4909344)). Qed.
Lemma lem4909348 (x : nat) : (term271 x) = term140.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem4909349 : term270 = term140.
Proof. exact (@lem4909348 term18). Qed.
Lemma lem4909350 : term272 = term140.
Proof. exact (TRANS (@lem4909346) (@lem4909349)). Qed.
Lemma lem4909351 : term140 = term272.
Proof. exact (SYM (@lem4909350)). Qed.
Lemma lem4909352 : term518 = term272.
Proof. exact (TRANS (@lem4909336) (@lem4909351)). Qed.
Lemma lem4909353 : term509 = term203.
Proof. exact (@lem4909303 (@lem4909352)). Qed.
Lemma lem4909354 : term508 = term203.
Proof. exact (TRANS (@lem4909269) (@lem4909353)). Qed.
Lemma lem4909356 (x : real) : (term222 x) = x.
Proof. exact (EQ_MP (@lem1981475 x) (@lem1981474 x)). Qed.
Lemma lem4909357 : term203 = term140.
Proof. exact (@lem4909356 term140). Qed.
Lemma lem4909358 : term508 = term140.
Proof. exact (TRANS (@lem4909354) (@lem4909357)). Qed.
Lemma lem4909359 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem4909360 : term519 = term268.
Proof. exact (MK_COMB (@lem4909359) (@lem4909358)). Qed.
Lemma lem4909361 (_61039 : int) : (real_of_int _61039) = (real_of_int _61039).
Proof. exact (eq_refl (real_of_int _61039)). Qed.
Lemma lem4909362 (_61039 : int) : (term505 _61039) = (term520 _61039).
Proof. exact (MK_COMB (@lem4909360) (@lem4909361 _61039)). Qed.
Lemma lem4909363 (_61039 : int) : (term504 _61039) = (term520 _61039).
Proof. exact (TRANS (@lem4909260 _61039) (@lem4909362 _61039)). Qed.
Lemma lem4909364 (_61039 : int) : (term520 _61039) = term140.
Proof. exact (@lem1982719 (real_of_int _61039)). Qed.
Lemma lem4909365 (_61039 : int) : (term504 _61039) = term140.
Proof. exact (TRANS (@lem4909363 _61039) (@lem4909364 _61039)). Qed.
Lemma lem4909366 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem4909367 (_61039 : int) : (term521 _61039) = term182.
Proof. exact (MK_COMB (@lem4909366) (@lem4909365 _61039)). Qed.
Lemma lem4909368 (_61040 : int) : (term522 _61040) = (term523 _61040).
Proof. exact (@lem1982759 (real_of_int _61040) (term244 _61040) term206). Qed.
Lemma lem4909369 (_61040 : int) : (term524 _61040) = (term505 _61040).
Proof. exact (@lem1982715 term206 (real_of_int _61040)). Qed.
Lemma lem4909371 (x : nat) : (real_of_num x) = (term202 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem4909372 : term150 = term231.
Proof. exact (@lem4909371 term18). Qed.
Lemma lem4909374 (x : nat) : (term204 x) = (term205 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem4909375 : term206 = term207.
Proof. exact (@lem4909374 term18). Qed.
Lemma lem4909376 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem4909377 : term506 = term507.
Proof. exact (MK_COMB (@lem4909376) (@lem4909375)). Qed.
Lemma lem4909378 : term508 = term509.
Proof. exact (MK_COMB (@lem4909377) (@lem4909372)). Qed.
Lemma lem4909379 : term510.
Proof. exact (@lem1981473 term206 term150 term150 term150 term140 term150). Qed.
Lemma lem4909381 (m : nat) (n : nat) : (term257 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem4909382 : term258 = term259.
Proof. exact (@lem4909381 (NUMERAL 0) term18). Qed.
Lemma lem4909383 : term260 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem4909384 (h1 : term260 = (BIT1 0)) : term259 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem4909385 : (term260 = (BIT1 0)) = (term259 = True).
Proof. exact (prop_ext (fun h1 : term260 = (BIT1 0) => @lem4909384 h1) (fun h1 : term259 = True => @lem4909383)). Qed.
Lemma lem4909386 : term259 = True.
Proof. exact (EQ_MP (@lem4909385) (@lem4909383)). Qed.
Lemma lem4909387 : term258 = True.
Proof. exact (TRANS (@lem4909382) (@lem4909386)). Qed.
Lemma lem4909388 : True = term258.
Proof. exact (SYM (@lem4909387)). Qed.
Lemma lem4909389 : term258.
Proof. exact (EQ_MP (@lem4909388) (@lem0)). Qed.
Lemma lem4909390 : term511.
Proof. exact (@lem4909379 (@lem4909389)). Qed.
Lemma lem4909392 (m : nat) (n : nat) : (term257 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem4909393 : term258 = term259.
Proof. exact (@lem4909392 (NUMERAL 0) term18). Qed.
Lemma lem4909394 : term260 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem4909395 (h1 : term260 = (BIT1 0)) : term259 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem4909396 : (term260 = (BIT1 0)) = (term259 = True).
Proof. exact (prop_ext (fun h1 : term260 = (BIT1 0) => @lem4909395 h1) (fun h1 : term259 = True => @lem4909394)). Qed.
Lemma lem4909397 : term259 = True.
Proof. exact (EQ_MP (@lem4909396) (@lem4909394)). Qed.
Lemma lem4909398 : term258 = True.
Proof. exact (TRANS (@lem4909393) (@lem4909397)). Qed.
Lemma lem4909399 : True = term258.
Proof. exact (SYM (@lem4909398)). Qed.
Lemma lem4909400 : term258.
Proof. exact (EQ_MP (@lem4909399) (@lem0)). Qed.
Lemma lem4909401 : term512.
Proof. exact (@lem4909390 (@lem4909400)). Qed.
Lemma lem4909403 (m : nat) (n : nat) : (term257 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem4909404 : term258 = term259.
Proof. exact (@lem4909403 (NUMERAL 0) term18). Qed.
Lemma lem4909405 : term260 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem4909406 (h1 : term260 = (BIT1 0)) : term259 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem4909407 : (term260 = (BIT1 0)) = (term259 = True).
Proof. exact (prop_ext (fun h1 : term260 = (BIT1 0) => @lem4909406 h1) (fun h1 : term259 = True => @lem4909405)). Qed.
Lemma lem4909408 : term259 = True.
Proof. exact (EQ_MP (@lem4909407) (@lem4909405)). Qed.
Lemma lem4909409 : term258 = True.
Proof. exact (TRANS (@lem4909404) (@lem4909408)). Qed.
Lemma lem4909410 : True = term258.
Proof. exact (SYM (@lem4909409)). Qed.
Lemma lem4909411 : term258.
Proof. exact (EQ_MP (@lem4909410) (@lem0)). Qed.
Lemma lem4909412 : term513.
Proof. exact (@lem4909401 (@lem4909411)). Qed.
Lemma lem4909414 (m : nat) (n : nat) : (term213 m n) = (term214 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem4909415 : term215 = term216.
Proof. exact (@lem4909414 term18 term18). Qed.
Lemma lem4909416 : (term217 = (BIT1 0)) = (term218 = term18).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem4909417 : term218 = term18.
Proof. exact (EQ_MP (@lem4909416) (@lem940073)). Qed.
Lemma lem4909418 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem4909419 : term216 = term150.
Proof. exact (MK_COMB (@lem4909418) (@lem4909417)). Qed.
Lemma lem4909420 : term215 = term150.
Proof. exact (TRANS (@lem4909415) (@lem4909419)). Qed.
Lemma lem4909422 (m : nat) (n : nat) : (term235 m n) = (term236 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem4909423 : term232 = term237.
Proof. exact (@lem4909422 term18 term18). Qed.
Lemma lem4909424 : (term217 = (BIT1 0)) = (term218 = term18).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem4909425 : term218 = term18.
Proof. exact (EQ_MP (@lem4909424) (@lem940073)). Qed.
Lemma lem4909426 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem4909427 : term216 = term150.
Proof. exact (MK_COMB (@lem4909426) (@lem4909425)). Qed.
Lemma lem4909428 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem4909429 : term237 = term206.
Proof. exact (MK_COMB (@lem4909428) (@lem4909427)). Qed.
Lemma lem4909430 : term232 = term206.
Proof. exact (TRANS (@lem4909423) (@lem4909429)). Qed.
Lemma lem4909431 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem4909432 : term514 = term506.
Proof. exact (MK_COMB (@lem4909431) (@lem4909430)). Qed.
Lemma lem4909433 : term515 = term508.
Proof. exact (MK_COMB (@lem4909432) (@lem4909420)). Qed.
Lemma lem4909435 (m : nat) : (term516 m) = term140.
Proof. exact (proj1 (@lem1367303 m)). Qed.
Lemma lem4909436 : term508 = term140.
Proof. exact (@lem4909435 term18). Qed.
Lemma lem4909437 : term515 = term140.
Proof. exact (TRANS (@lem4909433) (@lem4909436)). Qed.
Lemma lem4909438 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem4909439 : term517 = term268.
Proof. exact (MK_COMB (@lem4909438) (@lem4909437)). Qed.
Lemma lem4909440 : term150 = term150.
Proof. exact (eq_refl term150). Qed.
Lemma lem4909441 : term518 = term270.
Proof. exact (MK_COMB (@lem4909439) (@lem4909440)). Qed.
Lemma lem4909443 (x : nat) : (term271 x) = term140.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem4909444 : term270 = term140.
Proof. exact (@lem4909443 term18). Qed.
Lemma lem4909445 : term518 = term140.
Proof. exact (TRANS (@lem4909441) (@lem4909444)). Qed.
Lemma lem4909447 (m : nat) (n : nat) : (term213 m n) = (term214 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem4909448 : term215 = term216.
Proof. exact (@lem4909447 term18 term18). Qed.
Lemma lem4909449 : (term217 = (BIT1 0)) = (term218 = term18).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem4909450 : term218 = term18.
Proof. exact (EQ_MP (@lem4909449) (@lem940073)). Qed.
Lemma lem4909451 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem4909452 : term216 = term150.
Proof. exact (MK_COMB (@lem4909451) (@lem4909450)). Qed.
Lemma lem4909453 : term215 = term150.
Proof. exact (TRANS (@lem4909448) (@lem4909452)). Qed.
Lemma lem4909454 : term268 = term268.
Proof. exact (eq_refl term268). Qed.
Lemma lem4909455 : term272 = term270.
Proof. exact (MK_COMB (@lem4909454) (@lem4909453)). Qed.
Lemma lem4909457 (x : nat) : (term271 x) = term140.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem4909458 : term270 = term140.
Proof. exact (@lem4909457 term18). Qed.
Lemma lem4909459 : term272 = term140.
Proof. exact (TRANS (@lem4909455) (@lem4909458)). Qed.
Lemma lem4909460 : term140 = term272.
Proof. exact (SYM (@lem4909459)). Qed.
Lemma lem4909461 : term518 = term272.
Proof. exact (TRANS (@lem4909445) (@lem4909460)). Qed.
Lemma lem4909462 : term509 = term203.
Proof. exact (@lem4909412 (@lem4909461)). Qed.
Lemma lem4909463 : term508 = term203.
Proof. exact (TRANS (@lem4909378) (@lem4909462)). Qed.
Lemma lem4909465 (x : real) : (term222 x) = x.
Proof. exact (EQ_MP (@lem1981475 x) (@lem1981474 x)). Qed.
Lemma lem4909466 : term203 = term140.
Proof. exact (@lem4909465 term140). Qed.
Lemma lem4909467 : term508 = term140.
Proof. exact (TRANS (@lem4909463) (@lem4909466)). Qed.
Lemma lem4909468 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem4909469 : term519 = term268.
Proof. exact (MK_COMB (@lem4909468) (@lem4909467)). Qed.
Lemma lem4909470 (_61040 : int) : (real_of_int _61040) = (real_of_int _61040).
Proof. exact (eq_refl (real_of_int _61040)). Qed.
Lemma lem4909471 (_61040 : int) : (term505 _61040) = (term520 _61040).
Proof. exact (MK_COMB (@lem4909469) (@lem4909470 _61040)). Qed.
Lemma lem4909472 (_61040 : int) : (term524 _61040) = (term520 _61040).
Proof. exact (TRANS (@lem4909369 _61040) (@lem4909471 _61040)). Qed.
Lemma lem4909473 (_61040 : int) : (term520 _61040) = term140.
Proof. exact (@lem1982719 (real_of_int _61040)). Qed.
Lemma lem4909474 (_61040 : int) : (term524 _61040) = term140.
Proof. exact (TRANS (@lem4909472 _61040) (@lem4909473 _61040)). Qed.
Lemma lem4909475 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem4909476 (_61040 : int) : (term525 _61040) = term182.
Proof. exact (MK_COMB (@lem4909475) (@lem4909474 _61040)). Qed.
Lemma lem4909477 : term206 = term206.
Proof. exact (eq_refl term206). Qed.
Lemma lem4909478 (_61040 : int) : (term523 _61040) = term526.
Proof. exact (MK_COMB (@lem4909476 _61040) (@lem4909477)). Qed.
Lemma lem4909479 (_61040 : int) : (term522 _61040) = term526.
Proof. exact (TRANS (@lem4909368 _61040) (@lem4909478 _61040)). Qed.
Lemma lem4909480 : term526 = term206.
Proof. exact (@lem1982721 term206). Qed.
Lemma lem4909481 (_61040 : int) : (term522 _61040) = term206.
Proof. exact (TRANS (@lem4909479 _61040) (@lem4909480)). Qed.
Lemma lem4909482 (_61039 : int) (_61040 : int) : (term503 _61039 _61040) = term526.
Proof. exact (MK_COMB (@lem4909367 _61039) (@lem4909481 _61040)). Qed.
Lemma lem4909483 (_61039 : int) (_61040 : int) : (term502 _61039 _61040) = term526.
Proof. exact (TRANS (@lem4909259 _61039 _61040) (@lem4909482 _61039 _61040)). Qed.
Lemma lem4909484 : term526 = term206.
Proof. exact (@lem1982721 term206). Qed.
Lemma lem4909485 (_61039 : int) (_61040 : int) : (term502 _61039 _61040) = term206.
Proof. exact (TRANS (@lem4909483 _61039 _61040) (@lem4909484)). Qed.
Lemma lem4909486 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem4909487 (_61039 : int) (_61040 : int) : (term527 _61039 _61040) = term528.
Proof. exact (MK_COMB (@lem4909486) (@lem4909485 _61039 _61040)). Qed.
Lemma lem4909488 : term140 = term140.
Proof. exact (eq_refl term140). Qed.
Lemma lem4909489 (_61039 : int) (_61040 : int) : (term501 _61039 _61040) = term529.
Proof. exact (MK_COMB (@lem4909487 _61039 _61040) (@lem4909488)). Qed.
Lemma lem4909490 (_61039 : int) (_61040 : int) (h1 : term477 _61039 _61040) : term529.
Proof. exact (EQ_MP (@lem4909489 _61039 _61040) (@lem4909258 _61039 _61040 h1)). Qed.
Lemma lem4909492 (y : real) (x : real) : (real_ge x y) = (real_le y x).
Proof. exact (EQ_MP (@lem1980260 y x) (@lem1980259 y x)). Qed.
Lemma lem4909493 : term529 = term530.
Proof. exact (@lem4909492 term140 term206). Qed.
Lemma lem4909495 (x : nat) : (term204 x) = (term205 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem4909496 : term206 = term207.
Proof. exact (@lem4909495 term18). Qed.
Lemma lem4909498 (x : nat) : (real_of_num x) = (term202 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem4909499 : term140 = term203.
Proof. exact (@lem4909498 (NUMERAL 0)). Qed.
Lemma lem4909500 : real_le = real_le.
Proof. exact (eq_refl real_le). Qed.
Lemma lem4909501 : term142 = term531.
Proof. exact (MK_COMB (@lem4909500) (@lem4909499)). Qed.
Lemma lem4909502 : term530 = term532.
Proof. exact (MK_COMB (@lem4909501) (@lem4909496)). Qed.
Lemma lem4909503 : term533.
Proof. exact (@lem1980026 term140 term150 term206 term150). Qed.
Lemma lem4909505 (m : nat) (n : nat) : (term257 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem4909506 : term258 = term259.
Proof. exact (@lem4909505 (NUMERAL 0) term18). Qed.
Lemma lem4909507 : term260 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem4909508 (h1 : term260 = (BIT1 0)) : term259 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem4909509 : (term260 = (BIT1 0)) = (term259 = True).
Proof. exact (prop_ext (fun h1 : term260 = (BIT1 0) => @lem4909508 h1) (fun h1 : term259 = True => @lem4909507)). Qed.
Lemma lem4909510 : term259 = True.
Proof. exact (EQ_MP (@lem4909509) (@lem4909507)). Qed.
Lemma lem4909511 : term258 = True.
Proof. exact (TRANS (@lem4909506) (@lem4909510)). Qed.
Lemma lem4909512 : True = term258.
Proof. exact (SYM (@lem4909511)). Qed.
Lemma lem4909513 : term258.
Proof. exact (EQ_MP (@lem4909512) (@lem0)). Qed.
Lemma lem4909514 : term534.
Proof. exact (@lem4909503 (@lem4909513)). Qed.
Lemma lem4909516 (m : nat) (n : nat) : (term257 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem4909517 : term258 = term259.
Proof. exact (@lem4909516 (NUMERAL 0) term18). Qed.
Lemma lem4909518 : term260 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem4909519 (h1 : term260 = (BIT1 0)) : term259 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem4909520 : (term260 = (BIT1 0)) = (term259 = True).
Proof. exact (prop_ext (fun h1 : term260 = (BIT1 0) => @lem4909519 h1) (fun h1 : term259 = True => @lem4909518)). Qed.
Lemma lem4909521 : term259 = True.
Proof. exact (EQ_MP (@lem4909520) (@lem4909518)). Qed.
Lemma lem4909522 : term258 = True.
Proof. exact (TRANS (@lem4909517) (@lem4909521)). Qed.
Lemma lem4909523 : True = term258.
Proof. exact (SYM (@lem4909522)). Qed.
Lemma lem4909524 : term258.
Proof. exact (EQ_MP (@lem4909523) (@lem0)). Qed.
Lemma lem4909525 : term532 = term535.
Proof. exact (@lem4909514 (@lem4909524)). Qed.
Lemma lem4909527 (m : nat) (n : nat) : (term235 m n) = (term236 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem4909528 : term232 = term237.
Proof. exact (@lem4909527 term18 term18). Qed.
Lemma lem4909529 : (term217 = (BIT1 0)) = (term218 = term18).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem4909530 : term218 = term18.
Proof. exact (EQ_MP (@lem4909529) (@lem940073)). Qed.
Lemma lem4909531 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem4909532 : term216 = term150.
Proof. exact (MK_COMB (@lem4909531) (@lem4909530)). Qed.
Lemma lem4909533 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem4909534 : term237 = term206.
Proof. exact (MK_COMB (@lem4909533) (@lem4909532)). Qed.
Lemma lem4909535 : term232 = term206.
Proof. exact (TRANS (@lem4909528) (@lem4909534)). Qed.
Lemma lem4909537 (x : nat) : (term271 x) = term140.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem4909538 : term270 = term140.
Proof. exact (@lem4909537 term18). Qed.
Lemma lem4909539 : real_le = real_le.
Proof. exact (eq_refl real_le). Qed.
Lemma lem4909540 : term536 = term142.
Proof. exact (MK_COMB (@lem4909539) (@lem4909538)). Qed.
Lemma lem4909541 : term535 = term530.
Proof. exact (MK_COMB (@lem4909540) (@lem4909535)). Qed.
Lemma lem4909543 (m : nat) (n : nat) : (term537 m n) = (term538 m n).
Proof. exact (proj2 (@lem1365406 m n)). Qed.
Lemma lem4909544 : term530 = term539.
Proof. exact (@lem4909543 (NUMERAL 0) term18). Qed.
Lemma lem4909545 : term260 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem4909546 (h1 : term260 = (BIT1 0)) : (term18 = (NUMERAL 0)) = False.
Proof. exact (@lem1013352 0 0 (BIT1 0) h1). Qed.
Lemma lem4909547 : (term260 = (BIT1 0)) = ((term18 = (NUMERAL 0)) = False).
Proof. exact (prop_ext (fun h1 : term260 = (BIT1 0) => @lem4909546 h1) (fun h1 : (term18 = (NUMERAL 0)) = False => @lem4909545)). Qed.
Lemma lem4909548 : (term18 = (NUMERAL 0)) = False.
Proof. exact (EQ_MP (@lem4909547) (@lem4909545)). Qed.
Lemma lem4909549 : ((NUMERAL 0) = (NUMERAL 0)) = True.
Proof. exact (@lem1013364 0). Qed.
Lemma lem4909550 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4909551 : term540 = (and True).
Proof. exact (MK_COMB (@lem4909550) (@lem4909549)). Qed.
Lemma lem4909552 : term539 = (True /\ False).
Proof. exact (MK_COMB (@lem4909551) (@lem4909548)). Qed.
Lemma lem4909554 : (True /\ False) = False.
Proof. exact (proj1 (@lem1365106)). Qed.
Lemma lem4909555 : term539 = False.
Proof. exact (TRANS (@lem4909552) (@lem4909554)). Qed.
Lemma lem4909556 : term530 = False.
Proof. exact (TRANS (@lem4909544) (@lem4909555)). Qed.
Lemma lem4909557 : term535 = False.
Proof. exact (TRANS (@lem4909541) (@lem4909556)). Qed.
Lemma lem4909558 : term532 = False.
Proof. exact (TRANS (@lem4909525) (@lem4909557)). Qed.
Lemma lem4909559 : term530 = False.
Proof. exact (TRANS (@lem4909502) (@lem4909558)). Qed.
Lemma lem4909560 : term529 = False.
Proof. exact (TRANS (@lem4909493) (@lem4909559)). Qed.
Lemma lem4909561 (_61039 : int) (_61040 : int) (h1 : term477 _61039 _61040) : False.
Proof. exact (EQ_MP (@lem4909560) (@lem4909490 _61039 _61040 h1)). Qed.
Lemma lem4909562 (_61039 : int) (_61040 : int) (h1 : term541 _61039 _61040) : term541 _61039 _61040.
Proof. exact (h1). Qed.
Lemma lem4909563 (_61039 : int) (_61040 : int) (h1 : term541 _61039 _61040) : term470 _61039 _61040.
Proof. exact (proj2 (@lem4909562 _61039 _61040 h1)). Qed.
Lemma lem4909565 (_61039 : int) (_61040 : int) (h1 : term541 _61039 _61040) : term421 _61039 _61040.
Proof. exact (proj2 (@lem4909563 _61039 _61040 h1)). Qed.
Lemma lem4909567 (_61039 : int) (_61040 : int) (h1 : term541 _61039 _61040) : term367 _61039 _61040.
Proof. exact (proj2 (@lem4909565 _61039 _61040 h1)). Qed.
Lemma lem4909568 (_61039 : int) (_61040 : int) (h1 : term541 _61039 _61040) : term279 _61040 _61039.
Proof. exact (proj1 (@lem4909565 _61039 _61040 h1)). Qed.
Lemma lem4909569 (_61039 : int) (_61040 : int) (h1 : term541 _61039 _61040) : (real_of_int _61039) = term140.
Proof. exact (proj2 (@lem4909568 _61039 _61040 h1)). Qed.
Lemma lem4909571 (_61039 : int) (_61040 : int) (h1 : term541 _61039 _61040) : term293 _61039 _61040.
Proof. exact (proj2 (@lem4909567 _61039 _61040 h1)). Qed.
Lemma lem4909572 (_61039 : int) (_61040 : int) (h1 : term541 _61039 _61040) : term287 _61039 _61040.
Proof. exact (proj1 (@lem4909567 _61039 _61040 h1)). Qed.
Lemma lem4909574 (y : real) (x : real) : (real_gt x y) = (real_lt y x).
Proof. exact (EQ_MP (@lem1980266 y x) (@lem1980265 y x)). Qed.
Lemma lem4909575 : term478 = term258.
Proof. exact (@lem4909574 term140 term150). Qed.
Lemma lem4909577 (x : nat) : (real_of_num x) = (term202 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem4909578 : term150 = term231.
Proof. exact (@lem4909577 term18). Qed.
Lemma lem4909580 (x : nat) : (real_of_num x) = (term202 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem4909581 : term140 = term203.
Proof. exact (@lem4909580 (NUMERAL 0)). Qed.
Lemma lem4909582 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem4909583 : term479 = term480.
Proof. exact (MK_COMB (@lem4909582) (@lem4909581)). Qed.
Lemma lem4909584 : term258 = term481.
Proof. exact (MK_COMB (@lem4909583) (@lem4909578)). Qed.
Lemma lem4909585 : term482.
Proof. exact (@lem1980255 term140 term150 term150 term150). Qed.
Lemma lem4909587 (m : nat) (n : nat) : (term257 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem4909588 : term258 = term259.
Proof. exact (@lem4909587 (NUMERAL 0) term18). Qed.
Lemma lem4909589 : term260 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem4909590 (h1 : term260 = (BIT1 0)) : term259 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem4909591 : (term260 = (BIT1 0)) = (term259 = True).
Proof. exact (prop_ext (fun h1 : term260 = (BIT1 0) => @lem4909590 h1) (fun h1 : term259 = True => @lem4909589)). Qed.
Lemma lem4909592 : term259 = True.
Proof. exact (EQ_MP (@lem4909591) (@lem4909589)). Qed.
Lemma lem4909593 : term258 = True.
Proof. exact (TRANS (@lem4909588) (@lem4909592)). Qed.
Lemma lem4909594 : True = term258.
Proof. exact (SYM (@lem4909593)). Qed.
Lemma lem4909595 : term258.
Proof. exact (EQ_MP (@lem4909594) (@lem0)). Qed.
Lemma lem4909596 : term483.
Proof. exact (@lem4909585 (@lem4909595)). Qed.
Lemma lem4909598 (m : nat) (n : nat) : (term257 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem4909599 : term258 = term259.
Proof. exact (@lem4909598 (NUMERAL 0) term18). Qed.
Lemma lem4909600 : term260 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem4909601 (h1 : term260 = (BIT1 0)) : term259 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem4909602 : (term260 = (BIT1 0)) = (term259 = True).
Proof. exact (prop_ext (fun h1 : term260 = (BIT1 0) => @lem4909601 h1) (fun h1 : term259 = True => @lem4909600)). Qed.
Lemma lem4909603 : term259 = True.
Proof. exact (EQ_MP (@lem4909602) (@lem4909600)). Qed.
Lemma lem4909604 : term258 = True.
Proof. exact (TRANS (@lem4909599) (@lem4909603)). Qed.
Lemma lem4909605 : True = term258.
Proof. exact (SYM (@lem4909604)). Qed.
Lemma lem4909606 : term258.
Proof. exact (EQ_MP (@lem4909605) (@lem0)). Qed.
Lemma lem4909607 : term481 = term484.
Proof. exact (@lem4909596 (@lem4909606)). Qed.
Lemma lem4909609 (m : nat) (n : nat) : (term213 m n) = (term214 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem4909610 : term215 = term216.
Proof. exact (@lem4909609 term18 term18). Qed.
Lemma lem4909611 : (term217 = (BIT1 0)) = (term218 = term18).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem4909612 : term218 = term18.
Proof. exact (EQ_MP (@lem4909611) (@lem940073)). Qed.
Lemma lem4909613 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem4909614 : term216 = term150.
Proof. exact (MK_COMB (@lem4909613) (@lem4909612)). Qed.
Lemma lem4909615 : term215 = term150.
Proof. exact (TRANS (@lem4909610) (@lem4909614)). Qed.
Lemma lem4909617 (x : nat) : (term271 x) = term140.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem4909618 : term270 = term140.
Proof. exact (@lem4909617 term18). Qed.
Lemma lem4909619 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem4909620 : term485 = term479.
Proof. exact (MK_COMB (@lem4909619) (@lem4909618)). Qed.
Lemma lem4909621 : term484 = term258.
Proof. exact (MK_COMB (@lem4909620) (@lem4909615)). Qed.
Lemma lem4909623 (m : nat) (n : nat) : (term257 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem4909624 : term258 = term259.
Proof. exact (@lem4909623 (NUMERAL 0) term18). Qed.
Lemma lem4909625 : term260 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem4909626 (h1 : term260 = (BIT1 0)) : term259 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem4909627 : (term260 = (BIT1 0)) = (term259 = True).
Proof. exact (prop_ext (fun h1 : term260 = (BIT1 0) => @lem4909626 h1) (fun h1 : term259 = True => @lem4909625)). Qed.
Lemma lem4909628 : term259 = True.
Proof. exact (EQ_MP (@lem4909627) (@lem4909625)). Qed.
Lemma lem4909629 : term258 = True.
Proof. exact (TRANS (@lem4909624) (@lem4909628)). Qed.
Lemma lem4909630 : term484 = True.
Proof. exact (TRANS (@lem4909621) (@lem4909629)). Qed.
Lemma lem4909631 : term481 = True.
Proof. exact (TRANS (@lem4909607) (@lem4909630)). Qed.
Lemma lem4909632 : term258 = True.
Proof. exact (TRANS (@lem4909584) (@lem4909631)). Qed.
Lemma lem4909633 : term478 = True.
Proof. exact (TRANS (@lem4909575) (@lem4909632)). Qed.
Lemma lem4909634 : True = term478.
Proof. exact (SYM (@lem4909633)). Qed.
Lemma lem4909635 : term478.
Proof. exact (EQ_MP (@lem4909634) (@lem0)). Qed.
Lemma lem4909636 (_61039 : int) (_61040 : int) (h1 : term541 _61039 _61040) : term542 _61039 _61040.
Proof. exact (conj (@lem4909635) (@lem4909571 _61039 _61040 h1)). Qed.
Lemma lem4909638 (x : real) (y : real) : term487 x y.
Proof. exact (proj1 (@lem1988332 x y)). Qed.
Lemma lem4909639 (_61039 : int) (_61040 : int) : term543 _61039 _61040.
Proof. exact (@lem4909638 term150 (term243 _61039 _61040)). Qed.
Lemma lem4909640 (_61039 : int) (_61040 : int) (h1 : term541 _61039 _61040) : term544 _61039 _61040.
Proof. exact (@lem4909639 _61039 _61040 (@lem4909636 _61039 _61040 h1)). Qed.
Lemma lem4909641 (_61039 : int) (_61040 : int) : (term496 _61039 _61040) = (term243 _61039 _61040).
Proof. exact (@lem1982733 (term243 _61039 _61040)). Qed.
Lemma lem4909642 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem4909643 (_61039 : int) (_61040 : int) : (term545 _61039 _61040) = (term292 _61039 _61040).
Proof. exact (MK_COMB (@lem4909642) (@lem4909641 _61039 _61040)). Qed.
Lemma lem4909644 : term140 = term140.
Proof. exact (eq_refl term140). Qed.
Lemma lem4909645 (_61039 : int) (_61040 : int) : (term544 _61039 _61040) = (term293 _61039 _61040).
Proof. exact (MK_COMB (@lem4909643 _61039 _61040) (@lem4909644)). Qed.
Lemma lem4909646 (_61039 : int) (_61040 : int) (h1 : term541 _61039 _61040) : term293 _61039 _61040.
Proof. exact (EQ_MP (@lem4909645 _61039 _61040) (@lem4909640 _61039 _61040 h1)). Qed.
Lemma lem4909648 (y : real) : term492 y.
Proof. exact (EQ_MP (@lem1396750 y) (@lem0)). Qed.
Lemma lem4909649 (_61039 : int) : term546 _61039.
Proof. exact (@lem4909648 (real_of_int _61039)). Qed.
Lemma lem4909650 (_61039 : int) (_61040 : int) (h1 : term541 _61039 _61040) : term547 _61039.
Proof. exact (@lem4909649 _61039 (@lem4909569 _61039 _61040 h1)). Qed.
Lemma lem4909651 (_61039 : int) (_61040 : int) (h1 : term541 _61039 _61040) : term548 _61039.
Proof. exact (@lem4909650 _61039 _61040 h1 term150). Qed.
Lemma lem4909652 (_61039 : int) : (term548 _61039) = ((term549 _61039) = term140).
Proof. exact (eq_refl (term548 _61039)). Qed.
Lemma lem4909653 (_61039 : int) (_61040 : int) (h1 : term541 _61039 _61040) : (term549 _61039) = term140.
Proof. exact (EQ_MP (@lem4909652 _61039) (@lem4909651 _61039 _61040 h1)). Qed.
Lemma lem4909654 (_61039 : int) : (term549 _61039) = (real_of_int _61039).
Proof. exact (@lem1982733 (real_of_int _61039)). Qed.
Lemma lem4909655 : (@eq real) = (@eq real).
Proof. exact (eq_refl (@eq real)). Qed.
Lemma lem4909656 (_61039 : int) : (term550 _61039) = (term153 _61039).
Proof. exact (MK_COMB (@lem4909655) (@lem4909654 _61039)). Qed.
Lemma lem4909657 : term140 = term140.
Proof. exact (eq_refl term140). Qed.
Lemma lem4909658 (_61039 : int) : ((term549 _61039) = term140) = ((real_of_int _61039) = term140).
Proof. exact (MK_COMB (@lem4909656 _61039) (@lem4909657)). Qed.
Lemma lem4909659 (_61039 : int) (_61040 : int) (h1 : term541 _61039 _61040) : (real_of_int _61039) = term140.
Proof. exact (EQ_MP (@lem4909658 _61039) (@lem4909653 _61039 _61040 h1)). Qed.
Lemma lem4909660 (_61039 : int) (_61040 : int) (h1 : term541 _61039 _61040) : term551 _61039 _61040.
Proof. exact (conj (@lem4909659 _61039 _61040 h1) (@lem4909646 _61039 _61040 h1)). Qed.
Lemma lem4909662 (x : real) (y : real) : term499 x y.
Proof. exact (proj1 (@lem1988336 x y)). Qed.
Lemma lem4909663 (_61039 : int) (_61040 : int) : term552 _61039 _61040.
Proof. exact (@lem4909662 (real_of_int _61039) (term243 _61039 _61040)). Qed.
Lemma lem4909664 (_61039 : int) (_61040 : int) (h1 : term541 _61039 _61040) : term553 _61039 _61040.
Proof. exact (@lem4909663 _61039 _61040 (@lem4909660 _61039 _61040 h1)). Qed.
Lemma lem4909665 (_61039 : int) (_61040 : int) : (term554 _61039 _61040) = (term555 _61039 _61040).
Proof. exact (@lem1982763 (real_of_int _61039) (term244 _61039) (term306 _61040)). Qed.
Lemma lem4909666 (_61039 : int) : (term524 _61039) = (term505 _61039).
Proof. exact (@lem1982715 term206 (real_of_int _61039)). Qed.
Lemma lem4909668 (x : nat) : (real_of_num x) = (term202 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem4909669 : term150 = term231.
Proof. exact (@lem4909668 term18). Qed.
Lemma lem4909671 (x : nat) : (term204 x) = (term205 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem4909672 : term206 = term207.
Proof. exact (@lem4909671 term18). Qed.
Lemma lem4909673 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem4909674 : term506 = term507.
Proof. exact (MK_COMB (@lem4909673) (@lem4909672)). Qed.
Lemma lem4909675 : term508 = term509.
Proof. exact (MK_COMB (@lem4909674) (@lem4909669)). Qed.
Lemma lem4909676 : term510.
Proof. exact (@lem1981473 term206 term150 term150 term150 term140 term150). Qed.
Lemma lem4909678 (m : nat) (n : nat) : (term257 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem4909679 : term258 = term259.
Proof. exact (@lem4909678 (NUMERAL 0) term18). Qed.
Lemma lem4909680 : term260 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem4909681 (h1 : term260 = (BIT1 0)) : term259 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem4909682 : (term260 = (BIT1 0)) = (term259 = True).
Proof. exact (prop_ext (fun h1 : term260 = (BIT1 0) => @lem4909681 h1) (fun h1 : term259 = True => @lem4909680)). Qed.
Lemma lem4909683 : term259 = True.
Proof. exact (EQ_MP (@lem4909682) (@lem4909680)). Qed.
Lemma lem4909684 : term258 = True.
Proof. exact (TRANS (@lem4909679) (@lem4909683)). Qed.
Lemma lem4909685 : True = term258.
Proof. exact (SYM (@lem4909684)). Qed.
Lemma lem4909686 : term258.
Proof. exact (EQ_MP (@lem4909685) (@lem0)). Qed.
Lemma lem4909687 : term511.
Proof. exact (@lem4909676 (@lem4909686)). Qed.
Lemma lem4909689 (m : nat) (n : nat) : (term257 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem4909690 : term258 = term259.
Proof. exact (@lem4909689 (NUMERAL 0) term18). Qed.
Lemma lem4909691 : term260 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem4909692 (h1 : term260 = (BIT1 0)) : term259 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem4909693 : (term260 = (BIT1 0)) = (term259 = True).
Proof. exact (prop_ext (fun h1 : term260 = (BIT1 0) => @lem4909692 h1) (fun h1 : term259 = True => @lem4909691)). Qed.
Lemma lem4909694 : term259 = True.
Proof. exact (EQ_MP (@lem4909693) (@lem4909691)). Qed.
Lemma lem4909695 : term258 = True.
Proof. exact (TRANS (@lem4909690) (@lem4909694)). Qed.
Lemma lem4909696 : True = term258.
Proof. exact (SYM (@lem4909695)). Qed.
Lemma lem4909697 : term258.
Proof. exact (EQ_MP (@lem4909696) (@lem0)). Qed.
Lemma lem4909698 : term512.
Proof. exact (@lem4909687 (@lem4909697)). Qed.
Lemma lem4909700 (m : nat) (n : nat) : (term257 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem4909701 : term258 = term259.
Proof. exact (@lem4909700 (NUMERAL 0) term18). Qed.
Lemma lem4909702 : term260 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem4909703 (h1 : term260 = (BIT1 0)) : term259 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem4909704 : (term260 = (BIT1 0)) = (term259 = True).
Proof. exact (prop_ext (fun h1 : term260 = (BIT1 0) => @lem4909703 h1) (fun h1 : term259 = True => @lem4909702)). Qed.
Lemma lem4909705 : term259 = True.
Proof. exact (EQ_MP (@lem4909704) (@lem4909702)). Qed.
Lemma lem4909706 : term258 = True.
Proof. exact (TRANS (@lem4909701) (@lem4909705)). Qed.
Lemma lem4909707 : True = term258.
Proof. exact (SYM (@lem4909706)). Qed.
Lemma lem4909708 : term258.
Proof. exact (EQ_MP (@lem4909707) (@lem0)). Qed.
Lemma lem4909709 : term513.
Proof. exact (@lem4909698 (@lem4909708)). Qed.
Lemma lem4909711 (m : nat) (n : nat) : (term213 m n) = (term214 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem4909712 : term215 = term216.
Proof. exact (@lem4909711 term18 term18). Qed.
Lemma lem4909713 : (term217 = (BIT1 0)) = (term218 = term18).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem4909714 : term218 = term18.
Proof. exact (EQ_MP (@lem4909713) (@lem940073)). Qed.
Lemma lem4909715 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem4909716 : term216 = term150.
Proof. exact (MK_COMB (@lem4909715) (@lem4909714)). Qed.
Lemma lem4909717 : term215 = term150.
Proof. exact (TRANS (@lem4909712) (@lem4909716)). Qed.
Lemma lem4909719 (m : nat) (n : nat) : (term235 m n) = (term236 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem4909720 : term232 = term237.
Proof. exact (@lem4909719 term18 term18). Qed.
Lemma lem4909721 : (term217 = (BIT1 0)) = (term218 = term18).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem4909722 : term218 = term18.
Proof. exact (EQ_MP (@lem4909721) (@lem940073)). Qed.
Lemma lem4909723 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem4909724 : term216 = term150.
Proof. exact (MK_COMB (@lem4909723) (@lem4909722)). Qed.
Lemma lem4909725 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem4909726 : term237 = term206.
Proof. exact (MK_COMB (@lem4909725) (@lem4909724)). Qed.
Lemma lem4909727 : term232 = term206.
Proof. exact (TRANS (@lem4909720) (@lem4909726)). Qed.
Lemma lem4909728 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem4909729 : term514 = term506.
Proof. exact (MK_COMB (@lem4909728) (@lem4909727)). Qed.
Lemma lem4909730 : term515 = term508.
Proof. exact (MK_COMB (@lem4909729) (@lem4909717)). Qed.
Lemma lem4909732 (m : nat) : (term516 m) = term140.
Proof. exact (proj1 (@lem1367303 m)). Qed.
Lemma lem4909733 : term508 = term140.
Proof. exact (@lem4909732 term18). Qed.
Lemma lem4909734 : term515 = term140.
Proof. exact (TRANS (@lem4909730) (@lem4909733)). Qed.
Lemma lem4909735 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem4909736 : term517 = term268.
Proof. exact (MK_COMB (@lem4909735) (@lem4909734)). Qed.
Lemma lem4909737 : term150 = term150.
Proof. exact (eq_refl term150). Qed.
Lemma lem4909738 : term518 = term270.
Proof. exact (MK_COMB (@lem4909736) (@lem4909737)). Qed.
Lemma lem4909740 (x : nat) : (term271 x) = term140.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem4909741 : term270 = term140.
Proof. exact (@lem4909740 term18). Qed.
Lemma lem4909742 : term518 = term140.
Proof. exact (TRANS (@lem4909738) (@lem4909741)). Qed.
Lemma lem4909744 (m : nat) (n : nat) : (term213 m n) = (term214 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem4909745 : term215 = term216.
Proof. exact (@lem4909744 term18 term18). Qed.
Lemma lem4909746 : (term217 = (BIT1 0)) = (term218 = term18).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem4909747 : term218 = term18.
Proof. exact (EQ_MP (@lem4909746) (@lem940073)). Qed.
Lemma lem4909748 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem4909749 : term216 = term150.
Proof. exact (MK_COMB (@lem4909748) (@lem4909747)). Qed.
Lemma lem4909750 : term215 = term150.
Proof. exact (TRANS (@lem4909745) (@lem4909749)). Qed.
Lemma lem4909751 : term268 = term268.
Proof. exact (eq_refl term268). Qed.
Lemma lem4909752 : term272 = term270.
Proof. exact (MK_COMB (@lem4909751) (@lem4909750)). Qed.
Lemma lem4909754 (x : nat) : (term271 x) = term140.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem4909755 : term270 = term140.
Proof. exact (@lem4909754 term18). Qed.
Lemma lem4909756 : term272 = term140.
Proof. exact (TRANS (@lem4909752) (@lem4909755)). Qed.
Lemma lem4909757 : term140 = term272.
Proof. exact (SYM (@lem4909756)). Qed.
Lemma lem4909758 : term518 = term272.
Proof. exact (TRANS (@lem4909742) (@lem4909757)). Qed.
Lemma lem4909759 : term509 = term203.
Proof. exact (@lem4909709 (@lem4909758)). Qed.
Lemma lem4909760 : term508 = term203.
Proof. exact (TRANS (@lem4909675) (@lem4909759)). Qed.
Lemma lem4909762 (x : real) : (term222 x) = x.
Proof. exact (EQ_MP (@lem1981475 x) (@lem1981474 x)). Qed.
Lemma lem4909763 : term203 = term140.
Proof. exact (@lem4909762 term140). Qed.
Lemma lem4909764 : term508 = term140.
Proof. exact (TRANS (@lem4909760) (@lem4909763)). Qed.
Lemma lem4909765 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem4909766 : term519 = term268.
Proof. exact (MK_COMB (@lem4909765) (@lem4909764)). Qed.
Lemma lem4909767 (_61039 : int) : (real_of_int _61039) = (real_of_int _61039).
Proof. exact (eq_refl (real_of_int _61039)). Qed.
Lemma lem4909768 (_61039 : int) : (term505 _61039) = (term520 _61039).
Proof. exact (MK_COMB (@lem4909766) (@lem4909767 _61039)). Qed.
Lemma lem4909769 (_61039 : int) : (term524 _61039) = (term520 _61039).
Proof. exact (TRANS (@lem4909666 _61039) (@lem4909768 _61039)). Qed.
Lemma lem4909770 (_61039 : int) : (term520 _61039) = term140.
Proof. exact (@lem1982719 (real_of_int _61039)). Qed.
Lemma lem4909771 (_61039 : int) : (term524 _61039) = term140.
Proof. exact (TRANS (@lem4909769 _61039) (@lem4909770 _61039)). Qed.
Lemma lem4909772 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem4909773 (_61039 : int) : (term525 _61039) = term182.
Proof. exact (MK_COMB (@lem4909772) (@lem4909771 _61039)). Qed.
Lemma lem4909774 (_61040 : int) : (term306 _61040) = (term306 _61040).
Proof. exact (eq_refl (term306 _61040)). Qed.
Lemma lem4909775 (_61039 : int) (_61040 : int) : (term555 _61039 _61040) = (term556 _61040).
Proof. exact (MK_COMB (@lem4909773 _61039) (@lem4909774 _61040)). Qed.
Lemma lem4909776 (_61039 : int) (_61040 : int) : (term554 _61039 _61040) = (term556 _61040).
Proof. exact (TRANS (@lem4909665 _61039 _61040) (@lem4909775 _61039 _61040)). Qed.
Lemma lem4909777 (_61040 : int) : (term556 _61040) = (term306 _61040).
Proof. exact (@lem1982721 (term306 _61040)). Qed.
Lemma lem4909778 (_61039 : int) (_61040 : int) : (term554 _61039 _61040) = (term306 _61040).
Proof. exact (TRANS (@lem4909776 _61039 _61040) (@lem4909777 _61040)). Qed.
Lemma lem4909779 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem4909780 (_61039 : int) (_61040 : int) : (term557 _61039 _61040) = (term308 _61040).
Proof. exact (MK_COMB (@lem4909779) (@lem4909778 _61039 _61040)). Qed.
Lemma lem4909781 : term140 = term140.
Proof. exact (eq_refl term140). Qed.
Lemma lem4909782 (_61039 : int) (_61040 : int) : (term553 _61039 _61040) = (term309 _61040).
Proof. exact (MK_COMB (@lem4909780 _61039 _61040) (@lem4909781)). Qed.
Lemma lem4909783 (_61039 : int) (_61040 : int) (h1 : term541 _61039 _61040) : term309 _61040.
Proof. exact (EQ_MP (@lem4909782 _61039 _61040) (@lem4909664 _61039 _61040 h1)). Qed.
Lemma lem4909785 (y : real) (x : real) : (real_gt x y) = (real_lt y x).
Proof. exact (EQ_MP (@lem1980266 y x) (@lem1980265 y x)). Qed.
Lemma lem4909786 : term478 = term258.
Proof. exact (@lem4909785 term140 term150). Qed.
Lemma lem4909788 (x : nat) : (real_of_num x) = (term202 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem4909789 : term150 = term231.
Proof. exact (@lem4909788 term18). Qed.
Lemma lem4909791 (x : nat) : (real_of_num x) = (term202 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem4909792 : term140 = term203.
Proof. exact (@lem4909791 (NUMERAL 0)). Qed.
Lemma lem4909793 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem4909794 : term479 = term480.
Proof. exact (MK_COMB (@lem4909793) (@lem4909792)). Qed.
Lemma lem4909795 : term258 = term481.
Proof. exact (MK_COMB (@lem4909794) (@lem4909789)). Qed.
Lemma lem4909796 : term482.
Proof. exact (@lem1980255 term140 term150 term150 term150). Qed.
Lemma lem4909798 (m : nat) (n : nat) : (term257 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem4909799 : term258 = term259.
Proof. exact (@lem4909798 (NUMERAL 0) term18). Qed.
Lemma lem4909800 : term260 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem4909801 (h1 : term260 = (BIT1 0)) : term259 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem4909802 : (term260 = (BIT1 0)) = (term259 = True).
Proof. exact (prop_ext (fun h1 : term260 = (BIT1 0) => @lem4909801 h1) (fun h1 : term259 = True => @lem4909800)). Qed.
Lemma lem4909803 : term259 = True.
Proof. exact (EQ_MP (@lem4909802) (@lem4909800)). Qed.
Lemma lem4909804 : term258 = True.
Proof. exact (TRANS (@lem4909799) (@lem4909803)). Qed.
Lemma lem4909805 : True = term258.
Proof. exact (SYM (@lem4909804)). Qed.
Lemma lem4909806 : term258.
Proof. exact (EQ_MP (@lem4909805) (@lem0)). Qed.
Lemma lem4909807 : term483.
Proof. exact (@lem4909796 (@lem4909806)). Qed.
Lemma lem4909809 (m : nat) (n : nat) : (term257 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem4909810 : term258 = term259.
Proof. exact (@lem4909809 (NUMERAL 0) term18). Qed.
Lemma lem4909811 : term260 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem4909812 (h1 : term260 = (BIT1 0)) : term259 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem4909813 : (term260 = (BIT1 0)) = (term259 = True).
Proof. exact (prop_ext (fun h1 : term260 = (BIT1 0) => @lem4909812 h1) (fun h1 : term259 = True => @lem4909811)). Qed.
Lemma lem4909814 : term259 = True.
Proof. exact (EQ_MP (@lem4909813) (@lem4909811)). Qed.
Lemma lem4909815 : term258 = True.
Proof. exact (TRANS (@lem4909810) (@lem4909814)). Qed.
Lemma lem4909816 : True = term258.
Proof. exact (SYM (@lem4909815)). Qed.
Lemma lem4909817 : term258.
Proof. exact (EQ_MP (@lem4909816) (@lem0)). Qed.
Lemma lem4909818 : term481 = term484.
Proof. exact (@lem4909807 (@lem4909817)). Qed.
Lemma lem4909820 (m : nat) (n : nat) : (term213 m n) = (term214 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem4909821 : term215 = term216.
Proof. exact (@lem4909820 term18 term18). Qed.
Lemma lem4909822 : (term217 = (BIT1 0)) = (term218 = term18).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem4909823 : term218 = term18.
Proof. exact (EQ_MP (@lem4909822) (@lem940073)). Qed.
Lemma lem4909824 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem4909825 : term216 = term150.
Proof. exact (MK_COMB (@lem4909824) (@lem4909823)). Qed.
Lemma lem4909826 : term215 = term150.
Proof. exact (TRANS (@lem4909821) (@lem4909825)). Qed.
Lemma lem4909828 (x : nat) : (term271 x) = term140.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem4909829 : term270 = term140.
Proof. exact (@lem4909828 term18). Qed.
Lemma lem4909830 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem4909831 : term485 = term479.
Proof. exact (MK_COMB (@lem4909830) (@lem4909829)). Qed.
Lemma lem4909832 : term484 = term258.
Proof. exact (MK_COMB (@lem4909831) (@lem4909826)). Qed.
Lemma lem4909834 (m : nat) (n : nat) : (term257 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem4909835 : term258 = term259.
Proof. exact (@lem4909834 (NUMERAL 0) term18). Qed.
Lemma lem4909836 : term260 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem4909837 (h1 : term260 = (BIT1 0)) : term259 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem4909838 : (term260 = (BIT1 0)) = (term259 = True).
Proof. exact (prop_ext (fun h1 : term260 = (BIT1 0) => @lem4909837 h1) (fun h1 : term259 = True => @lem4909836)). Qed.
Lemma lem4909839 : term259 = True.
Proof. exact (EQ_MP (@lem4909838) (@lem4909836)). Qed.
Lemma lem4909840 : term258 = True.
Proof. exact (TRANS (@lem4909835) (@lem4909839)). Qed.
Lemma lem4909841 : term484 = True.
Proof. exact (TRANS (@lem4909832) (@lem4909840)). Qed.
Lemma lem4909842 : term481 = True.
Proof. exact (TRANS (@lem4909818) (@lem4909841)). Qed.
Lemma lem4909843 : term258 = True.
Proof. exact (TRANS (@lem4909795) (@lem4909842)). Qed.
Lemma lem4909844 : term478 = True.
Proof. exact (TRANS (@lem4909786) (@lem4909843)). Qed.
Lemma lem4909845 : True = term478.
Proof. exact (SYM (@lem4909844)). Qed.
Lemma lem4909846 : term478.
Proof. exact (EQ_MP (@lem4909845) (@lem0)). Qed.
Lemma lem4909847 (_61039 : int) (_61040 : int) (h1 : term541 _61039 _61040) : term558 _61040.
Proof. exact (conj (@lem4909846) (@lem4909783 _61039 _61040 h1)). Qed.
Lemma lem4909849 (x : real) (y : real) : term487 x y.
Proof. exact (proj1 (@lem1988332 x y)). Qed.
Lemma lem4909850 (_61040 : int) : term559 _61040.
Proof. exact (@lem4909849 term150 (term306 _61040)). Qed.
Lemma lem4909851 (_61039 : int) (_61040 : int) (h1 : term541 _61039 _61040) : term560 _61040.
Proof. exact (@lem4909850 _61040 (@lem4909847 _61039 _61040 h1)). Qed.
Lemma lem4909852 (_61040 : int) : (term561 _61040) = (term306 _61040).
Proof. exact (@lem1982733 (term306 _61040)). Qed.
Lemma lem4909853 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem4909854 (_61040 : int) : (term562 _61040) = (term308 _61040).
Proof. exact (MK_COMB (@lem4909853) (@lem4909852 _61040)). Qed.
Lemma lem4909855 : term140 = term140.
Proof. exact (eq_refl term140). Qed.
Lemma lem4909856 (_61040 : int) : (term560 _61040) = (term309 _61040).
Proof. exact (MK_COMB (@lem4909854 _61040) (@lem4909855)). Qed.
Lemma lem4909857 (_61039 : int) (_61040 : int) (h1 : term541 _61039 _61040) : term309 _61040.
Proof. exact (EQ_MP (@lem4909856 _61040) (@lem4909851 _61039 _61040 h1)). Qed.
Lemma lem4909859 (y : real) (x : real) : (real_gt x y) = (real_lt y x).
Proof. exact (EQ_MP (@lem1980266 y x) (@lem1980265 y x)). Qed.
Lemma lem4909860 : term478 = term258.
Proof. exact (@lem4909859 term140 term150). Qed.
Lemma lem4909862 (x : nat) : (real_of_num x) = (term202 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem4909863 : term150 = term231.
Proof. exact (@lem4909862 term18). Qed.
Lemma lem4909865 (x : nat) : (real_of_num x) = (term202 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem4909866 : term140 = term203.
Proof. exact (@lem4909865 (NUMERAL 0)). Qed.
Lemma lem4909867 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem4909868 : term479 = term480.
Proof. exact (MK_COMB (@lem4909867) (@lem4909866)). Qed.
Lemma lem4909869 : term258 = term481.
Proof. exact (MK_COMB (@lem4909868) (@lem4909863)). Qed.
Lemma lem4909870 : term482.
Proof. exact (@lem1980255 term140 term150 term150 term150). Qed.
Lemma lem4909872 (m : nat) (n : nat) : (term257 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem4909873 : term258 = term259.
Proof. exact (@lem4909872 (NUMERAL 0) term18). Qed.
Lemma lem4909874 : term260 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem4909875 (h1 : term260 = (BIT1 0)) : term259 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem4909876 : (term260 = (BIT1 0)) = (term259 = True).
Proof. exact (prop_ext (fun h1 : term260 = (BIT1 0) => @lem4909875 h1) (fun h1 : term259 = True => @lem4909874)). Qed.
Lemma lem4909877 : term259 = True.
Proof. exact (EQ_MP (@lem4909876) (@lem4909874)). Qed.
Lemma lem4909878 : term258 = True.
Proof. exact (TRANS (@lem4909873) (@lem4909877)). Qed.
Lemma lem4909879 : True = term258.
Proof. exact (SYM (@lem4909878)). Qed.
Lemma lem4909880 : term258.
Proof. exact (EQ_MP (@lem4909879) (@lem0)). Qed.
Lemma lem4909881 : term483.
Proof. exact (@lem4909870 (@lem4909880)). Qed.
Lemma lem4909883 (m : nat) (n : nat) : (term257 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem4909884 : term258 = term259.
Proof. exact (@lem4909883 (NUMERAL 0) term18). Qed.
Lemma lem4909885 : term260 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem4909886 (h1 : term260 = (BIT1 0)) : term259 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem4909887 : (term260 = (BIT1 0)) = (term259 = True).
Proof. exact (prop_ext (fun h1 : term260 = (BIT1 0) => @lem4909886 h1) (fun h1 : term259 = True => @lem4909885)). Qed.
Lemma lem4909888 : term259 = True.
Proof. exact (EQ_MP (@lem4909887) (@lem4909885)). Qed.
Lemma lem4909889 : term258 = True.
Proof. exact (TRANS (@lem4909884) (@lem4909888)). Qed.
Lemma lem4909890 : True = term258.
Proof. exact (SYM (@lem4909889)). Qed.
Lemma lem4909891 : term258.
Proof. exact (EQ_MP (@lem4909890) (@lem0)). Qed.
Lemma lem4909892 : term481 = term484.
Proof. exact (@lem4909881 (@lem4909891)). Qed.
Lemma lem4909894 (m : nat) (n : nat) : (term213 m n) = (term214 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem4909895 : term215 = term216.
Proof. exact (@lem4909894 term18 term18). Qed.
Lemma lem4909896 : (term217 = (BIT1 0)) = (term218 = term18).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem4909897 : term218 = term18.
Proof. exact (EQ_MP (@lem4909896) (@lem940073)). Qed.
Lemma lem4909898 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem4909899 : term216 = term150.
Proof. exact (MK_COMB (@lem4909898) (@lem4909897)). Qed.
Lemma lem4909900 : term215 = term150.
Proof. exact (TRANS (@lem4909895) (@lem4909899)). Qed.
Lemma lem4909902 (x : nat) : (term271 x) = term140.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem4909903 : term270 = term140.
Proof. exact (@lem4909902 term18). Qed.
Lemma lem4909904 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem4909905 : term485 = term479.
Proof. exact (MK_COMB (@lem4909904) (@lem4909903)). Qed.
Lemma lem4909906 : term484 = term258.
Proof. exact (MK_COMB (@lem4909905) (@lem4909900)). Qed.
Lemma lem4909908 (m : nat) (n : nat) : (term257 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem4909909 : term258 = term259.
Proof. exact (@lem4909908 (NUMERAL 0) term18). Qed.
Lemma lem4909910 : term260 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem4909911 (h1 : term260 = (BIT1 0)) : term259 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem4909912 : (term260 = (BIT1 0)) = (term259 = True).
Proof. exact (prop_ext (fun h1 : term260 = (BIT1 0) => @lem4909911 h1) (fun h1 : term259 = True => @lem4909910)). Qed.
Lemma lem4909913 : term259 = True.
Proof. exact (EQ_MP (@lem4909912) (@lem4909910)). Qed.
Lemma lem4909914 : term258 = True.
Proof. exact (TRANS (@lem4909909) (@lem4909913)). Qed.
Lemma lem4909915 : term484 = True.
Proof. exact (TRANS (@lem4909906) (@lem4909914)). Qed.
Lemma lem4909916 : term481 = True.
Proof. exact (TRANS (@lem4909892) (@lem4909915)). Qed.
Lemma lem4909917 : term258 = True.
Proof. exact (TRANS (@lem4909869) (@lem4909916)). Qed.
Lemma lem4909918 : term478 = True.
Proof. exact (TRANS (@lem4909860) (@lem4909917)). Qed.
Lemma lem4909919 : True = term478.
Proof. exact (SYM (@lem4909918)). Qed.
Lemma lem4909920 : term478.
Proof. exact (EQ_MP (@lem4909919) (@lem0)). Qed.
Lemma lem4909921 (_61039 : int) (_61040 : int) (h1 : term541 _61039 _61040) : term486 _61039 _61040.
Proof. exact (conj (@lem4909920) (@lem4909572 _61039 _61040 h1)). Qed.
Lemma lem4909923 (x : real) (y : real) : term487 x y.
Proof. exact (proj1 (@lem1988332 x y)). Qed.
Lemma lem4909924 (_61039 : int) (_61040 : int) : term488 _61039 _61040.
Proof. exact (@lem4909923 term150 (term284 _61039 _61040)). Qed.
Lemma lem4909925 (_61039 : int) (_61040 : int) (h1 : term541 _61039 _61040) : term489 _61039 _61040.
Proof. exact (@lem4909924 _61039 _61040 (@lem4909921 _61039 _61040 h1)). Qed.
Lemma lem4909926 (_61039 : int) (_61040 : int) : (term490 _61039 _61040) = (term284 _61039 _61040).
Proof. exact (@lem1982733 (term284 _61039 _61040)). Qed.
Lemma lem4909927 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem4909928 (_61039 : int) (_61040 : int) : (term491 _61039 _61040) = (term286 _61039 _61040).
Proof. exact (MK_COMB (@lem4909927) (@lem4909926 _61039 _61040)). Qed.
Lemma lem4909929 : term140 = term140.
Proof. exact (eq_refl term140). Qed.
Lemma lem4909930 (_61039 : int) (_61040 : int) : (term489 _61039 _61040) = (term287 _61039 _61040).
Proof. exact (MK_COMB (@lem4909928 _61039 _61040) (@lem4909929)). Qed.
Lemma lem4909931 (_61039 : int) (_61040 : int) (h1 : term541 _61039 _61040) : term287 _61039 _61040.
Proof. exact (EQ_MP (@lem4909930 _61039 _61040) (@lem4909925 _61039 _61040 h1)). Qed.
Lemma lem4909933 (y : real) : term492 y.
Proof. exact (EQ_MP (@lem1396750 y) (@lem0)). Qed.
Lemma lem4909934 (_61039 : int) : term546 _61039.
Proof. exact (@lem4909933 (real_of_int _61039)). Qed.
Lemma lem4909935 (_61039 : int) (_61040 : int) (h1 : term541 _61039 _61040) : term547 _61039.
Proof. exact (@lem4909934 _61039 (@lem4909569 _61039 _61040 h1)). Qed.
Lemma lem4909936 (_61039 : int) (_61040 : int) (h1 : term541 _61039 _61040) : term563 _61039.
Proof. exact (@lem4909935 _61039 _61040 h1 term206). Qed.
Lemma lem4909937 (_61039 : int) : (term563 _61039) = ((term244 _61039) = term140).
Proof. exact (eq_refl (term563 _61039)). Qed.
Lemma lem4909944 (_61039 : int) (_61040 : int) (h1 : term541 _61039 _61040) : (term244 _61039) = term140.
Proof. exact (EQ_MP (@lem4909937 _61039) (@lem4909936 _61039 _61040 h1)). Qed.
Lemma lem4909945 (_61039 : int) (_61040 : int) (h1 : term541 _61039 _61040) : term564 _61039 _61040.
Proof. exact (conj (@lem4909944 _61039 _61040 h1) (@lem4909931 _61039 _61040 h1)). Qed.
Lemma lem4909947 (x : real) (y : real) : term499 x y.
Proof. exact (proj1 (@lem1988336 x y)). Qed.
Lemma lem4909948 (_61039 : int) (_61040 : int) : term565 _61039 _61040.
Proof. exact (@lem4909947 (term244 _61039) (term284 _61039 _61040)). Qed.
Lemma lem4909949 (_61039 : int) (_61040 : int) (h1 : term541 _61039 _61040) : term566 _61039 _61040.
Proof. exact (@lem4909948 _61039 _61040 (@lem4909945 _61039 _61040 h1)). Qed.
Lemma lem4909950 (_61039 : int) (_61040 : int) : (term567 _61039 _61040) = (term568 _61039 _61040).
Proof. exact (@lem1982763 (term244 _61039) (real_of_int _61039) (term244 _61040)). Qed.
Lemma lem4909951 (_61039 : int) : (term504 _61039) = (term505 _61039).
Proof. exact (@lem1982713 term206 (real_of_int _61039)). Qed.
Lemma lem4909953 (x : nat) : (real_of_num x) = (term202 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem4909954 : term150 = term231.
Proof. exact (@lem4909953 term18). Qed.
Lemma lem4909956 (x : nat) : (term204 x) = (term205 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem4909957 : term206 = term207.
Proof. exact (@lem4909956 term18). Qed.
Lemma lem4909958 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem4909959 : term506 = term507.
Proof. exact (MK_COMB (@lem4909958) (@lem4909957)). Qed.
Lemma lem4909960 : term508 = term509.
Proof. exact (MK_COMB (@lem4909959) (@lem4909954)). Qed.
Lemma lem4909961 : term510.
Proof. exact (@lem1981473 term206 term150 term150 term150 term140 term150). Qed.
Lemma lem4909963 (m : nat) (n : nat) : (term257 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem4909964 : term258 = term259.
Proof. exact (@lem4909963 (NUMERAL 0) term18). Qed.
Lemma lem4909965 : term260 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem4909966 (h1 : term260 = (BIT1 0)) : term259 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem4909967 : (term260 = (BIT1 0)) = (term259 = True).
Proof. exact (prop_ext (fun h1 : term260 = (BIT1 0) => @lem4909966 h1) (fun h1 : term259 = True => @lem4909965)). Qed.
Lemma lem4909968 : term259 = True.
Proof. exact (EQ_MP (@lem4909967) (@lem4909965)). Qed.
Lemma lem4909969 : term258 = True.
Proof. exact (TRANS (@lem4909964) (@lem4909968)). Qed.
Lemma lem4909970 : True = term258.
Proof. exact (SYM (@lem4909969)). Qed.
Lemma lem4909971 : term258.
Proof. exact (EQ_MP (@lem4909970) (@lem0)). Qed.
Lemma lem4909972 : term511.
Proof. exact (@lem4909961 (@lem4909971)). Qed.
Lemma lem4909974 (m : nat) (n : nat) : (term257 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem4909975 : term258 = term259.
Proof. exact (@lem4909974 (NUMERAL 0) term18). Qed.
Lemma lem4909976 : term260 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem4909977 (h1 : term260 = (BIT1 0)) : term259 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem4909978 : (term260 = (BIT1 0)) = (term259 = True).
Proof. exact (prop_ext (fun h1 : term260 = (BIT1 0) => @lem4909977 h1) (fun h1 : term259 = True => @lem4909976)). Qed.
Lemma lem4909979 : term259 = True.
Proof. exact (EQ_MP (@lem4909978) (@lem4909976)). Qed.
Lemma lem4909980 : term258 = True.
Proof. exact (TRANS (@lem4909975) (@lem4909979)). Qed.
Lemma lem4909981 : True = term258.
Proof. exact (SYM (@lem4909980)). Qed.
Lemma lem4909982 : term258.
Proof. exact (EQ_MP (@lem4909981) (@lem0)). Qed.
Lemma lem4909983 : term512.
Proof. exact (@lem4909972 (@lem4909982)). Qed.
Lemma lem4909985 (m : nat) (n : nat) : (term257 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem4909986 : term258 = term259.
Proof. exact (@lem4909985 (NUMERAL 0) term18). Qed.
Lemma lem4909987 : term260 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem4909988 (h1 : term260 = (BIT1 0)) : term259 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem4909989 : (term260 = (BIT1 0)) = (term259 = True).
Proof. exact (prop_ext (fun h1 : term260 = (BIT1 0) => @lem4909988 h1) (fun h1 : term259 = True => @lem4909987)). Qed.
Lemma lem4909990 : term259 = True.
Proof. exact (EQ_MP (@lem4909989) (@lem4909987)). Qed.
Lemma lem4909991 : term258 = True.
Proof. exact (TRANS (@lem4909986) (@lem4909990)). Qed.
Lemma lem4909992 : True = term258.
Proof. exact (SYM (@lem4909991)). Qed.
Lemma lem4909993 : term258.
Proof. exact (EQ_MP (@lem4909992) (@lem0)). Qed.
Lemma lem4909994 : term513.
Proof. exact (@lem4909983 (@lem4909993)). Qed.
Lemma lem4909996 (m : nat) (n : nat) : (term213 m n) = (term214 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem4909997 : term215 = term216.
Proof. exact (@lem4909996 term18 term18). Qed.
Lemma lem4909998 : (term217 = (BIT1 0)) = (term218 = term18).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem4909999 : term218 = term18.
Proof. exact (EQ_MP (@lem4909998) (@lem940073)). Qed.
Lemma lem4910000 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem4910001 : term216 = term150.
Proof. exact (MK_COMB (@lem4910000) (@lem4909999)). Qed.
Lemma lem4910002 : term215 = term150.
Proof. exact (TRANS (@lem4909997) (@lem4910001)). Qed.
Lemma lem4910004 (m : nat) (n : nat) : (term235 m n) = (term236 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem4910005 : term232 = term237.
Proof. exact (@lem4910004 term18 term18). Qed.
Lemma lem4910006 : (term217 = (BIT1 0)) = (term218 = term18).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem4910007 : term218 = term18.
Proof. exact (EQ_MP (@lem4910006) (@lem940073)). Qed.
Lemma lem4910008 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem4910009 : term216 = term150.
Proof. exact (MK_COMB (@lem4910008) (@lem4910007)). Qed.
Lemma lem4910010 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem4910011 : term237 = term206.
Proof. exact (MK_COMB (@lem4910010) (@lem4910009)). Qed.
Lemma lem4910012 : term232 = term206.
Proof. exact (TRANS (@lem4910005) (@lem4910011)). Qed.
Lemma lem4910013 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem4910014 : term514 = term506.
Proof. exact (MK_COMB (@lem4910013) (@lem4910012)). Qed.
Lemma lem4910015 : term515 = term508.
Proof. exact (MK_COMB (@lem4910014) (@lem4910002)). Qed.
Lemma lem4910017 (m : nat) : (term516 m) = term140.
Proof. exact (proj1 (@lem1367303 m)). Qed.
Lemma lem4910018 : term508 = term140.
Proof. exact (@lem4910017 term18). Qed.
Lemma lem4910019 : term515 = term140.
Proof. exact (TRANS (@lem4910015) (@lem4910018)). Qed.
Lemma lem4910020 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem4910021 : term517 = term268.
Proof. exact (MK_COMB (@lem4910020) (@lem4910019)). Qed.
Lemma lem4910022 : term150 = term150.
Proof. exact (eq_refl term150). Qed.
Lemma lem4910023 : term518 = term270.
Proof. exact (MK_COMB (@lem4910021) (@lem4910022)). Qed.
Lemma lem4910025 (x : nat) : (term271 x) = term140.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem4910026 : term270 = term140.
Proof. exact (@lem4910025 term18). Qed.
Lemma lem4910027 : term518 = term140.
Proof. exact (TRANS (@lem4910023) (@lem4910026)). Qed.
Lemma lem4910029 (m : nat) (n : nat) : (term213 m n) = (term214 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem4910030 : term215 = term216.
Proof. exact (@lem4910029 term18 term18). Qed.
Lemma lem4910031 : (term217 = (BIT1 0)) = (term218 = term18).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem4910032 : term218 = term18.
Proof. exact (EQ_MP (@lem4910031) (@lem940073)). Qed.
Lemma lem4910033 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem4910034 : term216 = term150.
Proof. exact (MK_COMB (@lem4910033) (@lem4910032)). Qed.
Lemma lem4910035 : term215 = term150.
Proof. exact (TRANS (@lem4910030) (@lem4910034)). Qed.
Lemma lem4910036 : term268 = term268.
Proof. exact (eq_refl term268). Qed.
Lemma lem4910037 : term272 = term270.
Proof. exact (MK_COMB (@lem4910036) (@lem4910035)). Qed.
Lemma lem4910039 (x : nat) : (term271 x) = term140.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem4910040 : term270 = term140.
Proof. exact (@lem4910039 term18). Qed.
Lemma lem4910041 : term272 = term140.
Proof. exact (TRANS (@lem4910037) (@lem4910040)). Qed.
Lemma lem4910042 : term140 = term272.
Proof. exact (SYM (@lem4910041)). Qed.
Lemma lem4910043 : term518 = term272.
Proof. exact (TRANS (@lem4910027) (@lem4910042)). Qed.
Lemma lem4910044 : term509 = term203.
Proof. exact (@lem4909994 (@lem4910043)). Qed.
Lemma lem4910045 : term508 = term203.
Proof. exact (TRANS (@lem4909960) (@lem4910044)). Qed.
Lemma lem4910047 (x : real) : (term222 x) = x.
Proof. exact (EQ_MP (@lem1981475 x) (@lem1981474 x)). Qed.
Lemma lem4910048 : term203 = term140.
Proof. exact (@lem4910047 term140). Qed.
Lemma lem4910049 : term508 = term140.
Proof. exact (TRANS (@lem4910045) (@lem4910048)). Qed.
Lemma lem4910050 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem4910051 : term519 = term268.
Proof. exact (MK_COMB (@lem4910050) (@lem4910049)). Qed.
Lemma lem4910052 (_61039 : int) : (real_of_int _61039) = (real_of_int _61039).
Proof. exact (eq_refl (real_of_int _61039)). Qed.
Lemma lem4910053 (_61039 : int) : (term505 _61039) = (term520 _61039).
Proof. exact (MK_COMB (@lem4910051) (@lem4910052 _61039)). Qed.
Lemma lem4910054 (_61039 : int) : (term504 _61039) = (term520 _61039).
Proof. exact (TRANS (@lem4909951 _61039) (@lem4910053 _61039)). Qed.
Lemma lem4910055 (_61039 : int) : (term520 _61039) = term140.
Proof. exact (@lem1982719 (real_of_int _61039)). Qed.
Lemma lem4910056 (_61039 : int) : (term504 _61039) = term140.
Proof. exact (TRANS (@lem4910054 _61039) (@lem4910055 _61039)). Qed.
Lemma lem4910057 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem4910058 (_61039 : int) : (term521 _61039) = term182.
Proof. exact (MK_COMB (@lem4910057) (@lem4910056 _61039)). Qed.
Lemma lem4910059 (_61040 : int) : (term244 _61040) = (term244 _61040).
Proof. exact (eq_refl (term244 _61040)). Qed.
Lemma lem4910060 (_61039 : int) (_61040 : int) : (term568 _61039 _61040) = (term569 _61040).
Proof. exact (MK_COMB (@lem4910058 _61039) (@lem4910059 _61040)). Qed.
Lemma lem4910061 (_61039 : int) (_61040 : int) : (term567 _61039 _61040) = (term569 _61040).
Proof. exact (TRANS (@lem4909950 _61039 _61040) (@lem4910060 _61039 _61040)). Qed.
Lemma lem4910062 (_61040 : int) : (term569 _61040) = (term244 _61040).
Proof. exact (@lem1982721 (term244 _61040)). Qed.
Lemma lem4910063 (_61039 : int) (_61040 : int) : (term567 _61039 _61040) = (term244 _61040).
Proof. exact (TRANS (@lem4910061 _61039 _61040) (@lem4910062 _61040)). Qed.
Lemma lem4910064 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem4910065 (_61039 : int) (_61040 : int) : (term570 _61039 _61040) = (term275 _61040).
Proof. exact (MK_COMB (@lem4910064) (@lem4910063 _61039 _61040)). Qed.
Lemma lem4910066 : term140 = term140.
Proof. exact (eq_refl term140). Qed.
Lemma lem4910067 (_61039 : int) (_61040 : int) : (term566 _61039 _61040) = (term276 _61040).
Proof. exact (MK_COMB (@lem4910065 _61039 _61040) (@lem4910066)). Qed.
Lemma lem4910068 (_61039 : int) (_61040 : int) (h1 : term541 _61039 _61040) : term276 _61040.
Proof. exact (EQ_MP (@lem4910067 _61039 _61040) (@lem4909949 _61039 _61040 h1)). Qed.
Lemma lem4910070 (y : real) (x : real) : (real_gt x y) = (real_lt y x).
Proof. exact (EQ_MP (@lem1980266 y x) (@lem1980265 y x)). Qed.
Lemma lem4910071 : term478 = term258.
Proof. exact (@lem4910070 term140 term150). Qed.
Lemma lem4910073 (x : nat) : (real_of_num x) = (term202 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem4910074 : term150 = term231.
Proof. exact (@lem4910073 term18). Qed.
Lemma lem4910076 (x : nat) : (real_of_num x) = (term202 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem4910077 : term140 = term203.
Proof. exact (@lem4910076 (NUMERAL 0)). Qed.
Lemma lem4910078 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem4910079 : term479 = term480.
Proof. exact (MK_COMB (@lem4910078) (@lem4910077)). Qed.
Lemma lem4910080 : term258 = term481.
Proof. exact (MK_COMB (@lem4910079) (@lem4910074)). Qed.
Lemma lem4910081 : term482.
Proof. exact (@lem1980255 term140 term150 term150 term150). Qed.
Lemma lem4910083 (m : nat) (n : nat) : (term257 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem4910084 : term258 = term259.
Proof. exact (@lem4910083 (NUMERAL 0) term18). Qed.
Lemma lem4910085 : term260 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem4910086 (h1 : term260 = (BIT1 0)) : term259 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem4910087 : (term260 = (BIT1 0)) = (term259 = True).
Proof. exact (prop_ext (fun h1 : term260 = (BIT1 0) => @lem4910086 h1) (fun h1 : term259 = True => @lem4910085)). Qed.
Lemma lem4910088 : term259 = True.
Proof. exact (EQ_MP (@lem4910087) (@lem4910085)). Qed.
Lemma lem4910089 : term258 = True.
Proof. exact (TRANS (@lem4910084) (@lem4910088)). Qed.
Lemma lem4910090 : True = term258.
Proof. exact (SYM (@lem4910089)). Qed.
Lemma lem4910091 : term258.
Proof. exact (EQ_MP (@lem4910090) (@lem0)). Qed.
Lemma lem4910092 : term483.
Proof. exact (@lem4910081 (@lem4910091)). Qed.
Lemma lem4910094 (m : nat) (n : nat) : (term257 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem4910095 : term258 = term259.
Proof. exact (@lem4910094 (NUMERAL 0) term18). Qed.
Lemma lem4910096 : term260 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem4910097 (h1 : term260 = (BIT1 0)) : term259 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem4910098 : (term260 = (BIT1 0)) = (term259 = True).
Proof. exact (prop_ext (fun h1 : term260 = (BIT1 0) => @lem4910097 h1) (fun h1 : term259 = True => @lem4910096)). Qed.
Lemma lem4910099 : term259 = True.
Proof. exact (EQ_MP (@lem4910098) (@lem4910096)). Qed.
Lemma lem4910100 : term258 = True.
Proof. exact (TRANS (@lem4910095) (@lem4910099)). Qed.
Lemma lem4910101 : True = term258.
Proof. exact (SYM (@lem4910100)). Qed.
Lemma lem4910102 : term258.
Proof. exact (EQ_MP (@lem4910101) (@lem0)). Qed.
Lemma lem4910103 : term481 = term484.
Proof. exact (@lem4910092 (@lem4910102)). Qed.
Lemma lem4910105 (m : nat) (n : nat) : (term213 m n) = (term214 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem4910106 : term215 = term216.
Proof. exact (@lem4910105 term18 term18). Qed.
Lemma lem4910107 : (term217 = (BIT1 0)) = (term218 = term18).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem4910108 : term218 = term18.
Proof. exact (EQ_MP (@lem4910107) (@lem940073)). Qed.
Lemma lem4910109 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem4910110 : term216 = term150.
Proof. exact (MK_COMB (@lem4910109) (@lem4910108)). Qed.
Lemma lem4910111 : term215 = term150.
Proof. exact (TRANS (@lem4910106) (@lem4910110)). Qed.
Lemma lem4910113 (x : nat) : (term271 x) = term140.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem4910114 : term270 = term140.
Proof. exact (@lem4910113 term18). Qed.
Lemma lem4910115 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem4910116 : term485 = term479.
Proof. exact (MK_COMB (@lem4910115) (@lem4910114)). Qed.
Lemma lem4910117 : term484 = term258.
Proof. exact (MK_COMB (@lem4910116) (@lem4910111)). Qed.
Lemma lem4910119 (m : nat) (n : nat) : (term257 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem4910120 : term258 = term259.
Proof. exact (@lem4910119 (NUMERAL 0) term18). Qed.
Lemma lem4910121 : term260 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem4910122 (h1 : term260 = (BIT1 0)) : term259 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem4910123 : (term260 = (BIT1 0)) = (term259 = True).
Proof. exact (prop_ext (fun h1 : term260 = (BIT1 0) => @lem4910122 h1) (fun h1 : term259 = True => @lem4910121)). Qed.
Lemma lem4910124 : term259 = True.
Proof. exact (EQ_MP (@lem4910123) (@lem4910121)). Qed.
Lemma lem4910125 : term258 = True.
Proof. exact (TRANS (@lem4910120) (@lem4910124)). Qed.
Lemma lem4910126 : term484 = True.
Proof. exact (TRANS (@lem4910117) (@lem4910125)). Qed.
Lemma lem4910127 : term481 = True.
Proof. exact (TRANS (@lem4910103) (@lem4910126)). Qed.
Lemma lem4910128 : term258 = True.
Proof. exact (TRANS (@lem4910080) (@lem4910127)). Qed.
Lemma lem4910129 : term478 = True.
Proof. exact (TRANS (@lem4910071) (@lem4910128)). Qed.
Lemma lem4910130 : True = term478.
Proof. exact (SYM (@lem4910129)). Qed.
Lemma lem4910131 : term478.
Proof. exact (EQ_MP (@lem4910130) (@lem0)). Qed.
Lemma lem4910132 (_61039 : int) (_61040 : int) (h1 : term541 _61039 _61040) : term571 _61040.
Proof. exact (conj (@lem4910131) (@lem4910068 _61039 _61040 h1)). Qed.
Lemma lem4910134 (x : real) (y : real) : term487 x y.
Proof. exact (proj1 (@lem1988332 x y)). Qed.
Lemma lem4910135 (_61040 : int) : term572 _61040.
Proof. exact (@lem4910134 term150 (term244 _61040)). Qed.
Lemma lem4910136 (_61039 : int) (_61040 : int) (h1 : term541 _61039 _61040) : term573 _61040.
Proof. exact (@lem4910135 _61040 (@lem4910132 _61039 _61040 h1)). Qed.
Lemma lem4910137 (_61040 : int) : (term574 _61040) = (term244 _61040).
Proof. exact (@lem1982733 (term244 _61040)). Qed.
Lemma lem4910138 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem4910139 (_61040 : int) : (term575 _61040) = (term275 _61040).
Proof. exact (MK_COMB (@lem4910138) (@lem4910137 _61040)). Qed.
Lemma lem4910140 : term140 = term140.
Proof. exact (eq_refl term140). Qed.
Lemma lem4910141 (_61040 : int) : (term573 _61040) = (term276 _61040).
Proof. exact (MK_COMB (@lem4910139 _61040) (@lem4910140)). Qed.
Lemma lem4910142 (_61039 : int) (_61040 : int) (h1 : term541 _61039 _61040) : term276 _61040.
Proof. exact (EQ_MP (@lem4910141 _61040) (@lem4910136 _61039 _61040 h1)). Qed.
Lemma lem4910143 (_61039 : int) (_61040 : int) (h1 : term541 _61039 _61040) : term576 _61040.
Proof. exact (conj (@lem4910142 _61039 _61040 h1) (@lem4909857 _61039 _61040 h1)). Qed.
Lemma lem4910145 (x : real) (y : real) : term577 x y.
Proof. exact (proj1 (@lem1988342 x y)). Qed.
Lemma lem4910146 (_61040 : int) : term578 _61040.
Proof. exact (@lem4910145 (term244 _61040) (term306 _61040)). Qed.
Lemma lem4910147 (_61039 : int) (_61040 : int) (h1 : term541 _61039 _61040) : term579 _61040.
Proof. exact (@lem4910146 _61040 (@lem4910143 _61039 _61040 h1)). Qed.
Lemma lem4910148 (_61040 : int) : (term580 _61040) = (term581 _61040).
Proof. exact (@lem1982763 (term244 _61040) (real_of_int _61040) term206). Qed.
Lemma lem4910149 (_61040 : int) : (term504 _61040) = (term505 _61040).
Proof. exact (@lem1982713 term206 (real_of_int _61040)). Qed.
Lemma lem4910151 (x : nat) : (real_of_num x) = (term202 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem4910152 : term150 = term231.
Proof. exact (@lem4910151 term18). Qed.
Lemma lem4910154 (x : nat) : (term204 x) = (term205 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem4910155 : term206 = term207.
Proof. exact (@lem4910154 term18). Qed.
Lemma lem4910156 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem4910157 : term506 = term507.
Proof. exact (MK_COMB (@lem4910156) (@lem4910155)). Qed.
Lemma lem4910158 : term508 = term509.
Proof. exact (MK_COMB (@lem4910157) (@lem4910152)). Qed.
Lemma lem4910159 : term510.
Proof. exact (@lem1981473 term206 term150 term150 term150 term140 term150). Qed.
Lemma lem4910161 (m : nat) (n : nat) : (term257 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem4910162 : term258 = term259.
Proof. exact (@lem4910161 (NUMERAL 0) term18). Qed.
Lemma lem4910163 : term260 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem4910164 (h1 : term260 = (BIT1 0)) : term259 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem4910165 : (term260 = (BIT1 0)) = (term259 = True).
Proof. exact (prop_ext (fun h1 : term260 = (BIT1 0) => @lem4910164 h1) (fun h1 : term259 = True => @lem4910163)). Qed.
Lemma lem4910166 : term259 = True.
Proof. exact (EQ_MP (@lem4910165) (@lem4910163)). Qed.
Lemma lem4910167 : term258 = True.
Proof. exact (TRANS (@lem4910162) (@lem4910166)). Qed.
Lemma lem4910168 : True = term258.
Proof. exact (SYM (@lem4910167)). Qed.
Lemma lem4910169 : term258.
Proof. exact (EQ_MP (@lem4910168) (@lem0)). Qed.
Lemma lem4910170 : term511.
Proof. exact (@lem4910159 (@lem4910169)). Qed.
Lemma lem4910172 (m : nat) (n : nat) : (term257 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem4910173 : term258 = term259.
Proof. exact (@lem4910172 (NUMERAL 0) term18). Qed.
Lemma lem4910174 : term260 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem4910175 (h1 : term260 = (BIT1 0)) : term259 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem4910176 : (term260 = (BIT1 0)) = (term259 = True).
Proof. exact (prop_ext (fun h1 : term260 = (BIT1 0) => @lem4910175 h1) (fun h1 : term259 = True => @lem4910174)). Qed.
Lemma lem4910177 : term259 = True.
Proof. exact (EQ_MP (@lem4910176) (@lem4910174)). Qed.
Lemma lem4910178 : term258 = True.
Proof. exact (TRANS (@lem4910173) (@lem4910177)). Qed.
Lemma lem4910179 : True = term258.
Proof. exact (SYM (@lem4910178)). Qed.
Lemma lem4910180 : term258.
Proof. exact (EQ_MP (@lem4910179) (@lem0)). Qed.
Lemma lem4910181 : term512.
Proof. exact (@lem4910170 (@lem4910180)). Qed.
Lemma lem4910183 (m : nat) (n : nat) : (term257 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem4910184 : term258 = term259.
Proof. exact (@lem4910183 (NUMERAL 0) term18). Qed.
Lemma lem4910185 : term260 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem4910186 (h1 : term260 = (BIT1 0)) : term259 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem4910187 : (term260 = (BIT1 0)) = (term259 = True).
Proof. exact (prop_ext (fun h1 : term260 = (BIT1 0) => @lem4910186 h1) (fun h1 : term259 = True => @lem4910185)). Qed.
Lemma lem4910188 : term259 = True.
Proof. exact (EQ_MP (@lem4910187) (@lem4910185)). Qed.
Lemma lem4910189 : term258 = True.
Proof. exact (TRANS (@lem4910184) (@lem4910188)). Qed.
Lemma lem4910190 : True = term258.
Proof. exact (SYM (@lem4910189)). Qed.
Lemma lem4910191 : term258.
Proof. exact (EQ_MP (@lem4910190) (@lem0)). Qed.
Lemma lem4910192 : term513.
Proof. exact (@lem4910181 (@lem4910191)). Qed.
Lemma lem4910194 (m : nat) (n : nat) : (term213 m n) = (term214 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem4910195 : term215 = term216.
Proof. exact (@lem4910194 term18 term18). Qed.
Lemma lem4910196 : (term217 = (BIT1 0)) = (term218 = term18).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem4910197 : term218 = term18.
Proof. exact (EQ_MP (@lem4910196) (@lem940073)). Qed.
Lemma lem4910198 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem4910199 : term216 = term150.
Proof. exact (MK_COMB (@lem4910198) (@lem4910197)). Qed.
Lemma lem4910200 : term215 = term150.
Proof. exact (TRANS (@lem4910195) (@lem4910199)). Qed.
Lemma lem4910202 (m : nat) (n : nat) : (term235 m n) = (term236 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem4910203 : term232 = term237.
Proof. exact (@lem4910202 term18 term18). Qed.
Lemma lem4910204 : (term217 = (BIT1 0)) = (term218 = term18).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem4910205 : term218 = term18.
Proof. exact (EQ_MP (@lem4910204) (@lem940073)). Qed.
Lemma lem4910206 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem4910207 : term216 = term150.
Proof. exact (MK_COMB (@lem4910206) (@lem4910205)). Qed.
Lemma lem4910208 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem4910209 : term237 = term206.
Proof. exact (MK_COMB (@lem4910208) (@lem4910207)). Qed.
Lemma lem4910210 : term232 = term206.
Proof. exact (TRANS (@lem4910203) (@lem4910209)). Qed.
Lemma lem4910211 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem4910212 : term514 = term506.
Proof. exact (MK_COMB (@lem4910211) (@lem4910210)). Qed.
Lemma lem4910213 : term515 = term508.
Proof. exact (MK_COMB (@lem4910212) (@lem4910200)). Qed.
Lemma lem4910215 (m : nat) : (term516 m) = term140.
Proof. exact (proj1 (@lem1367303 m)). Qed.
Lemma lem4910216 : term508 = term140.
Proof. exact (@lem4910215 term18). Qed.
Lemma lem4910217 : term515 = term140.
Proof. exact (TRANS (@lem4910213) (@lem4910216)). Qed.
Lemma lem4910218 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem4910219 : term517 = term268.
Proof. exact (MK_COMB (@lem4910218) (@lem4910217)). Qed.
Lemma lem4910220 : term150 = term150.
Proof. exact (eq_refl term150). Qed.
Lemma lem4910221 : term518 = term270.
Proof. exact (MK_COMB (@lem4910219) (@lem4910220)). Qed.
Lemma lem4910223 (x : nat) : (term271 x) = term140.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem4910224 : term270 = term140.
Proof. exact (@lem4910223 term18). Qed.
Lemma lem4910225 : term518 = term140.
Proof. exact (TRANS (@lem4910221) (@lem4910224)). Qed.
Lemma lem4910227 (m : nat) (n : nat) : (term213 m n) = (term214 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem4910228 : term215 = term216.
Proof. exact (@lem4910227 term18 term18). Qed.
Lemma lem4910229 : (term217 = (BIT1 0)) = (term218 = term18).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem4910230 : term218 = term18.
Proof. exact (EQ_MP (@lem4910229) (@lem940073)). Qed.
Lemma lem4910231 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem4910232 : term216 = term150.
Proof. exact (MK_COMB (@lem4910231) (@lem4910230)). Qed.
Lemma lem4910233 : term215 = term150.
Proof. exact (TRANS (@lem4910228) (@lem4910232)). Qed.
Lemma lem4910234 : term268 = term268.
Proof. exact (eq_refl term268). Qed.
Lemma lem4910235 : term272 = term270.
Proof. exact (MK_COMB (@lem4910234) (@lem4910233)). Qed.
Lemma lem4910237 (x : nat) : (term271 x) = term140.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem4910238 : term270 = term140.
Proof. exact (@lem4910237 term18). Qed.
Lemma lem4910239 : term272 = term140.
Proof. exact (TRANS (@lem4910235) (@lem4910238)). Qed.
Lemma lem4910240 : term140 = term272.
Proof. exact (SYM (@lem4910239)). Qed.
Lemma lem4910241 : term518 = term272.
Proof. exact (TRANS (@lem4910225) (@lem4910240)). Qed.
Lemma lem4910242 : term509 = term203.
Proof. exact (@lem4910192 (@lem4910241)). Qed.
Lemma lem4910243 : term508 = term203.
Proof. exact (TRANS (@lem4910158) (@lem4910242)). Qed.
Lemma lem4910245 (x : real) : (term222 x) = x.
Proof. exact (EQ_MP (@lem1981475 x) (@lem1981474 x)). Qed.
Lemma lem4910246 : term203 = term140.
Proof. exact (@lem4910245 term140). Qed.
Lemma lem4910247 : term508 = term140.
Proof. exact (TRANS (@lem4910243) (@lem4910246)). Qed.
Lemma lem4910248 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem4910249 : term519 = term268.
Proof. exact (MK_COMB (@lem4910248) (@lem4910247)). Qed.
Lemma lem4910250 (_61040 : int) : (real_of_int _61040) = (real_of_int _61040).
Proof. exact (eq_refl (real_of_int _61040)). Qed.
Lemma lem4910251 (_61040 : int) : (term505 _61040) = (term520 _61040).
Proof. exact (MK_COMB (@lem4910249) (@lem4910250 _61040)). Qed.
Lemma lem4910252 (_61040 : int) : (term504 _61040) = (term520 _61040).
Proof. exact (TRANS (@lem4910149 _61040) (@lem4910251 _61040)). Qed.
Lemma lem4910253 (_61040 : int) : (term520 _61040) = term140.
Proof. exact (@lem1982719 (real_of_int _61040)). Qed.
Lemma lem4910254 (_61040 : int) : (term504 _61040) = term140.
Proof. exact (TRANS (@lem4910252 _61040) (@lem4910253 _61040)). Qed.
Lemma lem4910255 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem4910256 (_61040 : int) : (term521 _61040) = term182.
Proof. exact (MK_COMB (@lem4910255) (@lem4910254 _61040)). Qed.
Lemma lem4910257 : term206 = term206.
Proof. exact (eq_refl term206). Qed.
Lemma lem4910258 (_61040 : int) : (term581 _61040) = term526.
Proof. exact (MK_COMB (@lem4910256 _61040) (@lem4910257)). Qed.
Lemma lem4910259 (_61040 : int) : (term580 _61040) = term526.
Proof. exact (TRANS (@lem4910148 _61040) (@lem4910258 _61040)). Qed.
Lemma lem4910260 : term526 = term206.
Proof. exact (@lem1982721 term206). Qed.
Lemma lem4910261 (_61040 : int) : (term580 _61040) = term206.
Proof. exact (TRANS (@lem4910259 _61040) (@lem4910260)). Qed.
Lemma lem4910262 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem4910263 (_61040 : int) : (term582 _61040) = term528.
Proof. exact (MK_COMB (@lem4910262) (@lem4910261 _61040)). Qed.
Lemma lem4910264 : term140 = term140.
Proof. exact (eq_refl term140). Qed.
Lemma lem4910265 (_61040 : int) : (term579 _61040) = term529.
Proof. exact (MK_COMB (@lem4910263 _61040) (@lem4910264)). Qed.
Lemma lem4910266 (_61039 : int) (_61040 : int) (h1 : term541 _61039 _61040) : term529.
Proof. exact (EQ_MP (@lem4910265 _61040) (@lem4910147 _61039 _61040 h1)). Qed.
Lemma lem4910268 (y : real) (x : real) : (real_ge x y) = (real_le y x).
Proof. exact (EQ_MP (@lem1980260 y x) (@lem1980259 y x)). Qed.
Lemma lem4910269 : term529 = term530.
Proof. exact (@lem4910268 term140 term206). Qed.
Lemma lem4910271 (x : nat) : (term204 x) = (term205 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem4910272 : term206 = term207.
Proof. exact (@lem4910271 term18). Qed.
Lemma lem4910274 (x : nat) : (real_of_num x) = (term202 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem4910275 : term140 = term203.
Proof. exact (@lem4910274 (NUMERAL 0)). Qed.
Lemma lem4910276 : real_le = real_le.
Proof. exact (eq_refl real_le). Qed.
Lemma lem4910277 : term142 = term531.
Proof. exact (MK_COMB (@lem4910276) (@lem4910275)). Qed.
Lemma lem4910278 : term530 = term532.
Proof. exact (MK_COMB (@lem4910277) (@lem4910272)). Qed.
Lemma lem4910279 : term533.
Proof. exact (@lem1980026 term140 term150 term206 term150). Qed.
Lemma lem4910281 (m : nat) (n : nat) : (term257 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem4910282 : term258 = term259.
Proof. exact (@lem4910281 (NUMERAL 0) term18). Qed.
Lemma lem4910283 : term260 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem4910284 (h1 : term260 = (BIT1 0)) : term259 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem4910285 : (term260 = (BIT1 0)) = (term259 = True).
Proof. exact (prop_ext (fun h1 : term260 = (BIT1 0) => @lem4910284 h1) (fun h1 : term259 = True => @lem4910283)). Qed.
Lemma lem4910286 : term259 = True.
Proof. exact (EQ_MP (@lem4910285) (@lem4910283)). Qed.
Lemma lem4910287 : term258 = True.
Proof. exact (TRANS (@lem4910282) (@lem4910286)). Qed.
Lemma lem4910288 : True = term258.
Proof. exact (SYM (@lem4910287)). Qed.
Lemma lem4910289 : term258.
Proof. exact (EQ_MP (@lem4910288) (@lem0)). Qed.
Lemma lem4910290 : term534.
Proof. exact (@lem4910279 (@lem4910289)). Qed.
Lemma lem4910292 (m : nat) (n : nat) : (term257 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem4910293 : term258 = term259.
Proof. exact (@lem4910292 (NUMERAL 0) term18). Qed.
Lemma lem4910294 : term260 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem4910295 (h1 : term260 = (BIT1 0)) : term259 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem4910296 : (term260 = (BIT1 0)) = (term259 = True).
Proof. exact (prop_ext (fun h1 : term260 = (BIT1 0) => @lem4910295 h1) (fun h1 : term259 = True => @lem4910294)). Qed.
Lemma lem4910297 : term259 = True.
Proof. exact (EQ_MP (@lem4910296) (@lem4910294)). Qed.
Lemma lem4910298 : term258 = True.
Proof. exact (TRANS (@lem4910293) (@lem4910297)). Qed.
Lemma lem4910299 : True = term258.
Proof. exact (SYM (@lem4910298)). Qed.
Lemma lem4910300 : term258.
Proof. exact (EQ_MP (@lem4910299) (@lem0)). Qed.
Lemma lem4910301 : term532 = term535.
Proof. exact (@lem4910290 (@lem4910300)). Qed.
Lemma lem4910303 (m : nat) (n : nat) : (term235 m n) = (term236 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem4910304 : term232 = term237.
Proof. exact (@lem4910303 term18 term18). Qed.
Lemma lem4910305 : (term217 = (BIT1 0)) = (term218 = term18).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem4910306 : term218 = term18.
Proof. exact (EQ_MP (@lem4910305) (@lem940073)). Qed.
Lemma lem4910307 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem4910308 : term216 = term150.
Proof. exact (MK_COMB (@lem4910307) (@lem4910306)). Qed.
Lemma lem4910309 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem4910310 : term237 = term206.
Proof. exact (MK_COMB (@lem4910309) (@lem4910308)). Qed.
Lemma lem4910311 : term232 = term206.
Proof. exact (TRANS (@lem4910304) (@lem4910310)). Qed.
Lemma lem4910313 (x : nat) : (term271 x) = term140.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem4910314 : term270 = term140.
Proof. exact (@lem4910313 term18). Qed.
Lemma lem4910315 : real_le = real_le.
Proof. exact (eq_refl real_le). Qed.
Lemma lem4910316 : term536 = term142.
Proof. exact (MK_COMB (@lem4910315) (@lem4910314)). Qed.
Lemma lem4910317 : term535 = term530.
Proof. exact (MK_COMB (@lem4910316) (@lem4910311)). Qed.
Lemma lem4910319 (m : nat) (n : nat) : (term537 m n) = (term538 m n).
Proof. exact (proj2 (@lem1365406 m n)). Qed.
Lemma lem4910320 : term530 = term539.
Proof. exact (@lem4910319 (NUMERAL 0) term18). Qed.
Lemma lem4910321 : term260 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem4910322 (h1 : term260 = (BIT1 0)) : (term18 = (NUMERAL 0)) = False.
Proof. exact (@lem1013352 0 0 (BIT1 0) h1). Qed.
Lemma lem4910323 : (term260 = (BIT1 0)) = ((term18 = (NUMERAL 0)) = False).
Proof. exact (prop_ext (fun h1 : term260 = (BIT1 0) => @lem4910322 h1) (fun h1 : (term18 = (NUMERAL 0)) = False => @lem4910321)). Qed.
Lemma lem4910324 : (term18 = (NUMERAL 0)) = False.
Proof. exact (EQ_MP (@lem4910323) (@lem4910321)). Qed.
Lemma lem4910325 : ((NUMERAL 0) = (NUMERAL 0)) = True.
Proof. exact (@lem1013364 0). Qed.
Lemma lem4910326 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4910327 : term540 = (and True).
Proof. exact (MK_COMB (@lem4910326) (@lem4910325)). Qed.
Lemma lem4910328 : term539 = (True /\ False).
Proof. exact (MK_COMB (@lem4910327) (@lem4910324)). Qed.
Lemma lem4910330 : (True /\ False) = False.
Proof. exact (proj1 (@lem1365106)). Qed.
Lemma lem4910331 : term539 = False.
Proof. exact (TRANS (@lem4910328) (@lem4910330)). Qed.
Lemma lem4910332 : term530 = False.
Proof. exact (TRANS (@lem4910320) (@lem4910331)). Qed.
Lemma lem4910333 : term535 = False.
Proof. exact (TRANS (@lem4910317) (@lem4910332)). Qed.
Lemma lem4910334 : term532 = False.
Proof. exact (TRANS (@lem4910301) (@lem4910333)). Qed.
Lemma lem4910335 : term530 = False.
Proof. exact (TRANS (@lem4910278) (@lem4910334)). Qed.
Lemma lem4910336 : term529 = False.
Proof. exact (TRANS (@lem4910269) (@lem4910335)). Qed.
Lemma lem4910337 (_61039 : int) (_61040 : int) (h1 : term541 _61039 _61040) : False.
Proof. exact (EQ_MP (@lem4910336) (@lem4910266 _61039 _61040 h1)). Qed.
Lemma lem4910338 (_61039 : int) (_61040 : int) (h1 : term468 _61039 _61040) : False.
Proof. exact (or_elim (@lem4909157 _61039 _61040 h1) (fun h0 : term477 _61039 _61040 => @lem4909561 _61039 _61040 h0) (fun h0 : term541 _61039 _61040 => @lem4910337 _61039 _61040 h0)). Qed.
Lemma lem4910339 (_61039 : int) (_61040 : int) (h1 : term464 _61039 _61040) : term464 _61039 _61040.
Proof. exact (h1). Qed.
Lemma lem4910340 (_61039 : int) (_61040 : int) (h1 : term583 _61039 _61040) : term583 _61039 _61040.
Proof. exact (h1). Qed.
Lemma lem4910341 (_61039 : int) (_61040 : int) (h1 : term583 _61039 _61040) : term465 _61039 _61040.
Proof. exact (proj2 (@lem4910340 _61039 _61040 h1)). Qed.
Lemma lem4910342 (_61039 : int) (_61040 : int) (h1 : term583 _61039 _61040) : term226 _61039.
Proof. exact (proj1 (@lem4910340 _61039 _61040 h1)). Qed.
Lemma lem4910343 (_61039 : int) (_61040 : int) (h1 : term583 _61039 _61040) : term416 _61039 _61040.
Proof. exact (proj2 (@lem4910341 _61039 _61040 h1)). Qed.
Lemma lem4910345 (_61039 : int) (_61040 : int) (h1 : term583 _61039 _61040) : term368 _61039 _61040.
Proof. exact (proj2 (@lem4910343 _61039 _61040 h1)). Qed.
Lemma lem4910346 (_61039 : int) (_61040 : int) (h1 : term583 _61039 _61040) : (term243 _61039 _61040) = term140.
Proof. exact (proj1 (@lem4910343 _61039 _61040 h1)). Qed.
Lemma lem4910348 (_61039 : int) (_61040 : int) (h1 : term583 _61039 _61040) : (real_of_int _61040) = term140.
Proof. exact (proj1 (@lem4910345 _61039 _61040 h1)). Qed.
Lemma lem4910350 (y : real) (x : real) : (real_gt x y) = (real_lt y x).
Proof. exact (EQ_MP (@lem1980266 y x) (@lem1980265 y x)). Qed.
Lemma lem4910351 : term478 = term258.
Proof. exact (@lem4910350 term140 term150). Qed.
Lemma lem4910353 (x : nat) : (real_of_num x) = (term202 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem4910354 : term150 = term231.
Proof. exact (@lem4910353 term18). Qed.
Lemma lem4910356 (x : nat) : (real_of_num x) = (term202 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem4910357 : term140 = term203.
Proof. exact (@lem4910356 (NUMERAL 0)). Qed.
Lemma lem4910358 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem4910359 : term479 = term480.
Proof. exact (MK_COMB (@lem4910358) (@lem4910357)). Qed.
Lemma lem4910360 : term258 = term481.
Proof. exact (MK_COMB (@lem4910359) (@lem4910354)). Qed.
Lemma lem4910361 : term482.
Proof. exact (@lem1980255 term140 term150 term150 term150). Qed.
Lemma lem4910363 (m : nat) (n : nat) : (term257 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem4910364 : term258 = term259.
Proof. exact (@lem4910363 (NUMERAL 0) term18). Qed.
Lemma lem4910365 : term260 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem4910366 (h1 : term260 = (BIT1 0)) : term259 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem4910367 : (term260 = (BIT1 0)) = (term259 = True).
Proof. exact (prop_ext (fun h1 : term260 = (BIT1 0) => @lem4910366 h1) (fun h1 : term259 = True => @lem4910365)). Qed.
Lemma lem4910368 : term259 = True.
Proof. exact (EQ_MP (@lem4910367) (@lem4910365)). Qed.
Lemma lem4910369 : term258 = True.
Proof. exact (TRANS (@lem4910364) (@lem4910368)). Qed.
Lemma lem4910370 : True = term258.
Proof. exact (SYM (@lem4910369)). Qed.
Lemma lem4910371 : term258.
Proof. exact (EQ_MP (@lem4910370) (@lem0)). Qed.
Lemma lem4910372 : term483.
Proof. exact (@lem4910361 (@lem4910371)). Qed.
Lemma lem4910374 (m : nat) (n : nat) : (term257 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem4910375 : term258 = term259.
Proof. exact (@lem4910374 (NUMERAL 0) term18). Qed.
Lemma lem4910376 : term260 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem4910377 (h1 : term260 = (BIT1 0)) : term259 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem4910378 : (term260 = (BIT1 0)) = (term259 = True).
Proof. exact (prop_ext (fun h1 : term260 = (BIT1 0) => @lem4910377 h1) (fun h1 : term259 = True => @lem4910376)). Qed.
Lemma lem4910379 : term259 = True.
Proof. exact (EQ_MP (@lem4910378) (@lem4910376)). Qed.
Lemma lem4910380 : term258 = True.
Proof. exact (TRANS (@lem4910375) (@lem4910379)). Qed.
Lemma lem4910381 : True = term258.
Proof. exact (SYM (@lem4910380)). Qed.
Lemma lem4910382 : term258.
Proof. exact (EQ_MP (@lem4910381) (@lem0)). Qed.
Lemma lem4910383 : term481 = term484.
Proof. exact (@lem4910372 (@lem4910382)). Qed.
Lemma lem4910385 (m : nat) (n : nat) : (term213 m n) = (term214 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem4910386 : term215 = term216.
Proof. exact (@lem4910385 term18 term18). Qed.
Lemma lem4910387 : (term217 = (BIT1 0)) = (term218 = term18).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem4910388 : term218 = term18.
Proof. exact (EQ_MP (@lem4910387) (@lem940073)). Qed.
Lemma lem4910389 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem4910390 : term216 = term150.
Proof. exact (MK_COMB (@lem4910389) (@lem4910388)). Qed.
Lemma lem4910391 : term215 = term150.
Proof. exact (TRANS (@lem4910386) (@lem4910390)). Qed.
Lemma lem4910393 (x : nat) : (term271 x) = term140.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem4910394 : term270 = term140.
Proof. exact (@lem4910393 term18). Qed.
Lemma lem4910395 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem4910396 : term485 = term479.
Proof. exact (MK_COMB (@lem4910395) (@lem4910394)). Qed.
Lemma lem4910397 : term484 = term258.
Proof. exact (MK_COMB (@lem4910396) (@lem4910391)). Qed.
Lemma lem4910399 (m : nat) (n : nat) : (term257 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem4910400 : term258 = term259.
Proof. exact (@lem4910399 (NUMERAL 0) term18). Qed.
Lemma lem4910401 : term260 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem4910402 (h1 : term260 = (BIT1 0)) : term259 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem4910403 : (term260 = (BIT1 0)) = (term259 = True).
Proof. exact (prop_ext (fun h1 : term260 = (BIT1 0) => @lem4910402 h1) (fun h1 : term259 = True => @lem4910401)). Qed.
Lemma lem4910404 : term259 = True.
Proof. exact (EQ_MP (@lem4910403) (@lem4910401)). Qed.
Lemma lem4910405 : term258 = True.
Proof. exact (TRANS (@lem4910400) (@lem4910404)). Qed.
Lemma lem4910406 : term484 = True.
Proof. exact (TRANS (@lem4910397) (@lem4910405)). Qed.
Lemma lem4910407 : term481 = True.
Proof. exact (TRANS (@lem4910383) (@lem4910406)). Qed.
Lemma lem4910408 : term258 = True.
Proof. exact (TRANS (@lem4910360) (@lem4910407)). Qed.
Lemma lem4910409 : term478 = True.
Proof. exact (TRANS (@lem4910351) (@lem4910408)). Qed.
Lemma lem4910410 : True = term478.
Proof. exact (SYM (@lem4910409)). Qed.
Lemma lem4910411 : term478.
Proof. exact (EQ_MP (@lem4910410) (@lem0)). Qed.
Lemma lem4910412 (_61039 : int) (_61040 : int) (h1 : term583 _61039 _61040) : term584 _61039.
Proof. exact (conj (@lem4910411) (@lem4910342 _61039 _61040 h1)). Qed.
Lemma lem4910414 (x : real) (y : real) : term487 x y.
Proof. exact (proj1 (@lem1988332 x y)). Qed.
Lemma lem4910415 (_61039 : int) : term585 _61039.
Proof. exact (@lem4910414 term150 (real_of_int _61039)). Qed.
Lemma lem4910416 (_61039 : int) (_61040 : int) (h1 : term583 _61039 _61040) : term586 _61039.
Proof. exact (@lem4910415 _61039 (@lem4910412 _61039 _61040 h1)). Qed.
Lemma lem4910417 (_61039 : int) : (term549 _61039) = (real_of_int _61039).
Proof. exact (@lem1982733 (real_of_int _61039)). Qed.
Lemma lem4910418 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem4910419 (_61039 : int) : (term587 _61039) = (term225 _61039).
Proof. exact (MK_COMB (@lem4910418) (@lem4910417 _61039)). Qed.
Lemma lem4910420 : term140 = term140.
Proof. exact (eq_refl term140). Qed.
Lemma lem4910421 (_61039 : int) : (term586 _61039) = (term226 _61039).
Proof. exact (MK_COMB (@lem4910419 _61039) (@lem4910420)). Qed.
Lemma lem4910422 (_61039 : int) (_61040 : int) (h1 : term583 _61039 _61040) : term226 _61039.
Proof. exact (EQ_MP (@lem4910421 _61039) (@lem4910416 _61039 _61040 h1)). Qed.
Lemma lem4910424 (y : real) (x : real) : (real_gt x y) = (real_lt y x).
Proof. exact (EQ_MP (@lem1980266 y x) (@lem1980265 y x)). Qed.
Lemma lem4910425 : term478 = term258.
Proof. exact (@lem4910424 term140 term150). Qed.
Lemma lem4910427 (x : nat) : (real_of_num x) = (term202 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem4910428 : term150 = term231.
Proof. exact (@lem4910427 term18). Qed.
Lemma lem4910430 (x : nat) : (real_of_num x) = (term202 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem4910431 : term140 = term203.
Proof. exact (@lem4910430 (NUMERAL 0)). Qed.
Lemma lem4910432 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem4910433 : term479 = term480.
Proof. exact (MK_COMB (@lem4910432) (@lem4910431)). Qed.
Lemma lem4910434 : term258 = term481.
Proof. exact (MK_COMB (@lem4910433) (@lem4910428)). Qed.
Lemma lem4910435 : term482.
Proof. exact (@lem1980255 term140 term150 term150 term150). Qed.
Lemma lem4910437 (m : nat) (n : nat) : (term257 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem4910438 : term258 = term259.
Proof. exact (@lem4910437 (NUMERAL 0) term18). Qed.
Lemma lem4910439 : term260 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem4910440 (h1 : term260 = (BIT1 0)) : term259 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem4910441 : (term260 = (BIT1 0)) = (term259 = True).
Proof. exact (prop_ext (fun h1 : term260 = (BIT1 0) => @lem4910440 h1) (fun h1 : term259 = True => @lem4910439)). Qed.
Lemma lem4910442 : term259 = True.
Proof. exact (EQ_MP (@lem4910441) (@lem4910439)). Qed.
Lemma lem4910443 : term258 = True.
Proof. exact (TRANS (@lem4910438) (@lem4910442)). Qed.
Lemma lem4910444 : True = term258.
Proof. exact (SYM (@lem4910443)). Qed.
Lemma lem4910445 : term258.
Proof. exact (EQ_MP (@lem4910444) (@lem0)). Qed.
Lemma lem4910446 : term483.
Proof. exact (@lem4910435 (@lem4910445)). Qed.
Lemma lem4910448 (m : nat) (n : nat) : (term257 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem4910449 : term258 = term259.
Proof. exact (@lem4910448 (NUMERAL 0) term18). Qed.
Lemma lem4910450 : term260 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem4910451 (h1 : term260 = (BIT1 0)) : term259 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem4910452 : (term260 = (BIT1 0)) = (term259 = True).
Proof. exact (prop_ext (fun h1 : term260 = (BIT1 0) => @lem4910451 h1) (fun h1 : term259 = True => @lem4910450)). Qed.
Lemma lem4910453 : term259 = True.
Proof. exact (EQ_MP (@lem4910452) (@lem4910450)). Qed.
Lemma lem4910454 : term258 = True.
Proof. exact (TRANS (@lem4910449) (@lem4910453)). Qed.
Lemma lem4910455 : True = term258.
Proof. exact (SYM (@lem4910454)). Qed.
Lemma lem4910456 : term258.
Proof. exact (EQ_MP (@lem4910455) (@lem0)). Qed.
Lemma lem4910457 : term481 = term484.
Proof. exact (@lem4910446 (@lem4910456)). Qed.
Lemma lem4910459 (m : nat) (n : nat) : (term213 m n) = (term214 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem4910460 : term215 = term216.
Proof. exact (@lem4910459 term18 term18). Qed.
Lemma lem4910461 : (term217 = (BIT1 0)) = (term218 = term18).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem4910462 : term218 = term18.
Proof. exact (EQ_MP (@lem4910461) (@lem940073)). Qed.
Lemma lem4910463 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem4910464 : term216 = term150.
Proof. exact (MK_COMB (@lem4910463) (@lem4910462)). Qed.
Lemma lem4910465 : term215 = term150.
Proof. exact (TRANS (@lem4910460) (@lem4910464)). Qed.
Lemma lem4910467 (x : nat) : (term271 x) = term140.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem4910468 : term270 = term140.
Proof. exact (@lem4910467 term18). Qed.
Lemma lem4910469 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem4910470 : term485 = term479.
Proof. exact (MK_COMB (@lem4910469) (@lem4910468)). Qed.
Lemma lem4910471 : term484 = term258.
Proof. exact (MK_COMB (@lem4910470) (@lem4910465)). Qed.
Lemma lem4910473 (m : nat) (n : nat) : (term257 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem4910474 : term258 = term259.
Proof. exact (@lem4910473 (NUMERAL 0) term18). Qed.
Lemma lem4910475 : term260 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem4910476 (h1 : term260 = (BIT1 0)) : term259 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem4910477 : (term260 = (BIT1 0)) = (term259 = True).
Proof. exact (prop_ext (fun h1 : term260 = (BIT1 0) => @lem4910476 h1) (fun h1 : term259 = True => @lem4910475)). Qed.
Lemma lem4910478 : term259 = True.
Proof. exact (EQ_MP (@lem4910477) (@lem4910475)). Qed.
Lemma lem4910479 : term258 = True.
Proof. exact (TRANS (@lem4910474) (@lem4910478)). Qed.
Lemma lem4910480 : term484 = True.
Proof. exact (TRANS (@lem4910471) (@lem4910479)). Qed.
Lemma lem4910481 : term481 = True.
Proof. exact (TRANS (@lem4910457) (@lem4910480)). Qed.
Lemma lem4910482 : term258 = True.
Proof. exact (TRANS (@lem4910434) (@lem4910481)). Qed.
Lemma lem4910483 : term478 = True.
Proof. exact (TRANS (@lem4910425) (@lem4910482)). Qed.
Lemma lem4910484 : True = term478.
Proof. exact (SYM (@lem4910483)). Qed.
Lemma lem4910485 : term478.
Proof. exact (EQ_MP (@lem4910484) (@lem0)). Qed.
Lemma lem4910486 (_61039 : int) (_61040 : int) (h1 : term583 _61039 _61040) : term588 _61039 _61040.
Proof. exact (conj (@lem4910485) (@lem4910346 _61039 _61040 h1)). Qed.
Lemma lem4910488 (x : real) (y : real) : term589 x y.
Proof. exact (proj1 (@lem1988330 x y)). Qed.
Lemma lem4910489 (_61039 : int) (_61040 : int) : term590 _61039 _61040.
Proof. exact (@lem4910488 term150 (term243 _61039 _61040)). Qed.
Lemma lem4910490 (_61039 : int) (_61040 : int) (h1 : term583 _61039 _61040) : (term496 _61039 _61040) = term140.
Proof. exact (@lem4910489 _61039 _61040 (@lem4910486 _61039 _61040 h1)). Qed.
Lemma lem4910491 (_61039 : int) (_61040 : int) : (term496 _61039 _61040) = (term243 _61039 _61040).
Proof. exact (@lem1982733 (term243 _61039 _61040)). Qed.
Lemma lem4910492 : (@eq real) = (@eq real).
Proof. exact (eq_refl (@eq real)). Qed.
Lemma lem4910493 (_61039 : int) (_61040 : int) : (term497 _61039 _61040) = (term246 _61039 _61040).
Proof. exact (MK_COMB (@lem4910492) (@lem4910491 _61039 _61040)). Qed.
Lemma lem4910494 : term140 = term140.
Proof. exact (eq_refl term140). Qed.
Lemma lem4910495 (_61039 : int) (_61040 : int) : ((term496 _61039 _61040) = term140) = ((term243 _61039 _61040) = term140).
Proof. exact (MK_COMB (@lem4910493 _61039 _61040) (@lem4910494)). Qed.
Lemma lem4910496 (_61039 : int) (_61040 : int) (h1 : term583 _61039 _61040) : (term243 _61039 _61040) = term140.
Proof. exact (EQ_MP (@lem4910495 _61039 _61040) (@lem4910490 _61039 _61040 h1)). Qed.
Lemma lem4910498 (y : real) : term492 y.
Proof. exact (EQ_MP (@lem1396750 y) (@lem0)). Qed.
Lemma lem4910499 (_61040 : int) : term546 _61040.
Proof. exact (@lem4910498 (real_of_int _61040)). Qed.
Lemma lem4910500 (_61039 : int) (_61040 : int) (h1 : term583 _61039 _61040) : term547 _61040.
Proof. exact (@lem4910499 _61040 (@lem4910348 _61039 _61040 h1)). Qed.
Lemma lem4910501 (_61039 : int) (_61040 : int) (h1 : term583 _61039 _61040) : term563 _61040.
Proof. exact (@lem4910500 _61039 _61040 h1 term206). Qed.
Lemma lem4910502 (_61040 : int) : (term563 _61040) = ((term244 _61040) = term140).
Proof. exact (eq_refl (term563 _61040)). Qed.
Lemma lem4910509 (_61039 : int) (_61040 : int) (h1 : term583 _61039 _61040) : (term244 _61040) = term140.
Proof. exact (EQ_MP (@lem4910502 _61040) (@lem4910501 _61039 _61040 h1)). Qed.
Lemma lem4910510 (_61039 : int) (_61040 : int) (h1 : term583 _61039 _61040) : term591 _61039 _61040.
Proof. exact (conj (@lem4910509 _61039 _61040 h1) (@lem4910496 _61039 _61040 h1)). Qed.
Lemma lem4910512 (x : real) (y : real) : term592 x y.
Proof. exact (proj1 (@lem1393126 x y)). Qed.
Lemma lem4910513 (_61039 : int) (_61040 : int) : term593 _61039 _61040.
Proof. exact (@lem4910512 (term244 _61040) (term243 _61039 _61040)). Qed.
Lemma lem4910514 (_61039 : int) (_61040 : int) (h1 : term583 _61039 _61040) : (term594 _61039 _61040) = term140.
Proof. exact (@lem4910513 _61039 _61040 (@lem4910510 _61039 _61040 h1)). Qed.
Lemma lem4910515 (_61039 : int) (_61040 : int) : (term594 _61039 _61040) = (term595 _61039 _61040).
Proof. exact (@lem1982757 (term244 _61039) (term244 _61040) (term306 _61040)). Qed.
Lemma lem4910516 (_61040 : int) : (term580 _61040) = (term581 _61040).
Proof. exact (@lem1982763 (term244 _61040) (real_of_int _61040) term206). Qed.
Lemma lem4910517 (_61040 : int) : (term504 _61040) = (term505 _61040).
Proof. exact (@lem1982713 term206 (real_of_int _61040)). Qed.
Lemma lem4910519 (x : nat) : (real_of_num x) = (term202 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem4910520 : term150 = term231.
Proof. exact (@lem4910519 term18). Qed.
Lemma lem4910522 (x : nat) : (term204 x) = (term205 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem4910523 : term206 = term207.
Proof. exact (@lem4910522 term18). Qed.
Lemma lem4910524 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem4910525 : term506 = term507.
Proof. exact (MK_COMB (@lem4910524) (@lem4910523)). Qed.
Lemma lem4910526 : term508 = term509.
Proof. exact (MK_COMB (@lem4910525) (@lem4910520)). Qed.
Lemma lem4910527 : term510.
Proof. exact (@lem1981473 term206 term150 term150 term150 term140 term150). Qed.
Lemma lem4910529 (m : nat) (n : nat) : (term257 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem4910530 : term258 = term259.
Proof. exact (@lem4910529 (NUMERAL 0) term18). Qed.
Lemma lem4910531 : term260 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem4910532 (h1 : term260 = (BIT1 0)) : term259 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem4910533 : (term260 = (BIT1 0)) = (term259 = True).
Proof. exact (prop_ext (fun h1 : term260 = (BIT1 0) => @lem4910532 h1) (fun h1 : term259 = True => @lem4910531)). Qed.
Lemma lem4910534 : term259 = True.
Proof. exact (EQ_MP (@lem4910533) (@lem4910531)). Qed.
Lemma lem4910535 : term258 = True.
Proof. exact (TRANS (@lem4910530) (@lem4910534)). Qed.
Lemma lem4910536 : True = term258.
Proof. exact (SYM (@lem4910535)). Qed.
Lemma lem4910537 : term258.
Proof. exact (EQ_MP (@lem4910536) (@lem0)). Qed.
Lemma lem4910538 : term511.
Proof. exact (@lem4910527 (@lem4910537)). Qed.
Lemma lem4910540 (m : nat) (n : nat) : (term257 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem4910541 : term258 = term259.
Proof. exact (@lem4910540 (NUMERAL 0) term18). Qed.
Lemma lem4910542 : term260 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem4910543 (h1 : term260 = (BIT1 0)) : term259 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem4910544 : (term260 = (BIT1 0)) = (term259 = True).
Proof. exact (prop_ext (fun h1 : term260 = (BIT1 0) => @lem4910543 h1) (fun h1 : term259 = True => @lem4910542)). Qed.
Lemma lem4910545 : term259 = True.
Proof. exact (EQ_MP (@lem4910544) (@lem4910542)). Qed.
Lemma lem4910546 : term258 = True.
Proof. exact (TRANS (@lem4910541) (@lem4910545)). Qed.
Lemma lem4910547 : True = term258.
Proof. exact (SYM (@lem4910546)). Qed.
Lemma lem4910548 : term258.
Proof. exact (EQ_MP (@lem4910547) (@lem0)). Qed.
Lemma lem4910549 : term512.
Proof. exact (@lem4910538 (@lem4910548)). Qed.
Lemma lem4910551 (m : nat) (n : nat) : (term257 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem4910552 : term258 = term259.
Proof. exact (@lem4910551 (NUMERAL 0) term18). Qed.
Lemma lem4910553 : term260 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem4910554 (h1 : term260 = (BIT1 0)) : term259 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem4910555 : (term260 = (BIT1 0)) = (term259 = True).
Proof. exact (prop_ext (fun h1 : term260 = (BIT1 0) => @lem4910554 h1) (fun h1 : term259 = True => @lem4910553)). Qed.
Lemma lem4910556 : term259 = True.
Proof. exact (EQ_MP (@lem4910555) (@lem4910553)). Qed.
Lemma lem4910557 : term258 = True.
Proof. exact (TRANS (@lem4910552) (@lem4910556)). Qed.
Lemma lem4910558 : True = term258.
Proof. exact (SYM (@lem4910557)). Qed.
Lemma lem4910559 : term258.
Proof. exact (EQ_MP (@lem4910558) (@lem0)). Qed.
Lemma lem4910560 : term513.
Proof. exact (@lem4910549 (@lem4910559)). Qed.
Lemma lem4910562 (m : nat) (n : nat) : (term213 m n) = (term214 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem4910563 : term215 = term216.
Proof. exact (@lem4910562 term18 term18). Qed.
Lemma lem4910564 : (term217 = (BIT1 0)) = (term218 = term18).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem4910565 : term218 = term18.
Proof. exact (EQ_MP (@lem4910564) (@lem940073)). Qed.
Lemma lem4910566 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem4910567 : term216 = term150.
Proof. exact (MK_COMB (@lem4910566) (@lem4910565)). Qed.
Lemma lem4910568 : term215 = term150.
Proof. exact (TRANS (@lem4910563) (@lem4910567)). Qed.
Lemma lem4910570 (m : nat) (n : nat) : (term235 m n) = (term236 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem4910571 : term232 = term237.
Proof. exact (@lem4910570 term18 term18). Qed.
Lemma lem4910572 : (term217 = (BIT1 0)) = (term218 = term18).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem4910573 : term218 = term18.
Proof. exact (EQ_MP (@lem4910572) (@lem940073)). Qed.
Lemma lem4910574 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem4910575 : term216 = term150.
Proof. exact (MK_COMB (@lem4910574) (@lem4910573)). Qed.
Lemma lem4910576 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem4910577 : term237 = term206.
Proof. exact (MK_COMB (@lem4910576) (@lem4910575)). Qed.
Lemma lem4910578 : term232 = term206.
Proof. exact (TRANS (@lem4910571) (@lem4910577)). Qed.
Lemma lem4910579 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem4910580 : term514 = term506.
Proof. exact (MK_COMB (@lem4910579) (@lem4910578)). Qed.
Lemma lem4910581 : term515 = term508.
Proof. exact (MK_COMB (@lem4910580) (@lem4910568)). Qed.
Lemma lem4910583 (m : nat) : (term516 m) = term140.
Proof. exact (proj1 (@lem1367303 m)). Qed.
Lemma lem4910584 : term508 = term140.
Proof. exact (@lem4910583 term18). Qed.
Lemma lem4910585 : term515 = term140.
Proof. exact (TRANS (@lem4910581) (@lem4910584)). Qed.
Lemma lem4910586 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem4910587 : term517 = term268.
Proof. exact (MK_COMB (@lem4910586) (@lem4910585)). Qed.
Lemma lem4910588 : term150 = term150.
Proof. exact (eq_refl term150). Qed.
Lemma lem4910589 : term518 = term270.
Proof. exact (MK_COMB (@lem4910587) (@lem4910588)). Qed.
Lemma lem4910591 (x : nat) : (term271 x) = term140.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem4910592 : term270 = term140.
Proof. exact (@lem4910591 term18). Qed.
Lemma lem4910593 : term518 = term140.
Proof. exact (TRANS (@lem4910589) (@lem4910592)). Qed.
Lemma lem4910595 (m : nat) (n : nat) : (term213 m n) = (term214 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem4910596 : term215 = term216.
Proof. exact (@lem4910595 term18 term18). Qed.
Lemma lem4910597 : (term217 = (BIT1 0)) = (term218 = term18).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem4910598 : term218 = term18.
Proof. exact (EQ_MP (@lem4910597) (@lem940073)). Qed.
Lemma lem4910599 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem4910600 : term216 = term150.
Proof. exact (MK_COMB (@lem4910599) (@lem4910598)). Qed.
Lemma lem4910601 : term215 = term150.
Proof. exact (TRANS (@lem4910596) (@lem4910600)). Qed.
Lemma lem4910602 : term268 = term268.
Proof. exact (eq_refl term268). Qed.
Lemma lem4910603 : term272 = term270.
Proof. exact (MK_COMB (@lem4910602) (@lem4910601)). Qed.
Lemma lem4910605 (x : nat) : (term271 x) = term140.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem4910606 : term270 = term140.
Proof. exact (@lem4910605 term18). Qed.
Lemma lem4910607 : term272 = term140.
Proof. exact (TRANS (@lem4910603) (@lem4910606)). Qed.
Lemma lem4910608 : term140 = term272.
Proof. exact (SYM (@lem4910607)). Qed.
Lemma lem4910609 : term518 = term272.
Proof. exact (TRANS (@lem4910593) (@lem4910608)). Qed.
Lemma lem4910610 : term509 = term203.
Proof. exact (@lem4910560 (@lem4910609)). Qed.
Lemma lem4910611 : term508 = term203.
Proof. exact (TRANS (@lem4910526) (@lem4910610)). Qed.
Lemma lem4910613 (x : real) : (term222 x) = x.
Proof. exact (EQ_MP (@lem1981475 x) (@lem1981474 x)). Qed.
Lemma lem4910614 : term203 = term140.
Proof. exact (@lem4910613 term140). Qed.
Lemma lem4910615 : term508 = term140.
Proof. exact (TRANS (@lem4910611) (@lem4910614)). Qed.
Lemma lem4910616 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem4910617 : term519 = term268.
Proof. exact (MK_COMB (@lem4910616) (@lem4910615)). Qed.
Lemma lem4910618 (_61040 : int) : (real_of_int _61040) = (real_of_int _61040).
Proof. exact (eq_refl (real_of_int _61040)). Qed.
Lemma lem4910619 (_61040 : int) : (term505 _61040) = (term520 _61040).
Proof. exact (MK_COMB (@lem4910617) (@lem4910618 _61040)). Qed.
Lemma lem4910620 (_61040 : int) : (term504 _61040) = (term520 _61040).
Proof. exact (TRANS (@lem4910517 _61040) (@lem4910619 _61040)). Qed.
Lemma lem4910621 (_61040 : int) : (term520 _61040) = term140.
Proof. exact (@lem1982719 (real_of_int _61040)). Qed.
Lemma lem4910622 (_61040 : int) : (term504 _61040) = term140.
Proof. exact (TRANS (@lem4910620 _61040) (@lem4910621 _61040)). Qed.
Lemma lem4910623 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem4910624 (_61040 : int) : (term521 _61040) = term182.
Proof. exact (MK_COMB (@lem4910623) (@lem4910622 _61040)). Qed.
Lemma lem4910625 : term206 = term206.
Proof. exact (eq_refl term206). Qed.
Lemma lem4910626 (_61040 : int) : (term581 _61040) = term526.
Proof. exact (MK_COMB (@lem4910624 _61040) (@lem4910625)). Qed.
Lemma lem4910627 (_61040 : int) : (term580 _61040) = term526.
Proof. exact (TRANS (@lem4910516 _61040) (@lem4910626 _61040)). Qed.
Lemma lem4910628 : term526 = term206.
Proof. exact (@lem1982721 term206). Qed.
Lemma lem4910629 (_61040 : int) : (term580 _61040) = term206.
Proof. exact (TRANS (@lem4910627 _61040) (@lem4910628)). Qed.
Lemma lem4910630 (_61039 : int) : (term240 _61039) = (term240 _61039).
Proof. exact (eq_refl (term240 _61039)). Qed.
Lemma lem4910631 (_61040 : int) (_61039 : int) : (term595 _61039 _61040) = (term241 _61039).
Proof. exact (MK_COMB (@lem4910630 _61039) (@lem4910629 _61040)). Qed.
Lemma lem4910632 (_61040 : int) (_61039 : int) : (term594 _61039 _61040) = (term241 _61039).
Proof. exact (TRANS (@lem4910515 _61039 _61040) (@lem4910631 _61040 _61039)). Qed.
Lemma lem4910633 : (@eq real) = (@eq real).
Proof. exact (eq_refl (@eq real)). Qed.
Lemma lem4910634 (_61040 : int) (_61039 : int) : (term596 _61039 _61040) = (term597 _61039).
Proof. exact (MK_COMB (@lem4910633) (@lem4910632 _61040 _61039)). Qed.
Lemma lem4910635 : term140 = term140.
Proof. exact (eq_refl term140). Qed.
Lemma lem4910636 (_61040 : int) (_61039 : int) : ((term594 _61039 _61040) = term140) = ((term241 _61039) = term140).
Proof. exact (MK_COMB (@lem4910634 _61040 _61039) (@lem4910635)). Qed.
Lemma lem4910637 (_61039 : int) (_61040 : int) (h1 : term583 _61039 _61040) : (term241 _61039) = term140.
Proof. exact (EQ_MP (@lem4910636 _61040 _61039) (@lem4910514 _61039 _61040 h1)). Qed.
Lemma lem4910639 (y : real) : term492 y.
Proof. exact (EQ_MP (@lem1396750 y) (@lem0)). Qed.
Lemma lem4910640 (_61039 : int) : term598 _61039.
Proof. exact (@lem4910639 (term241 _61039)). Qed.
Lemma lem4910641 (_61039 : int) (_61040 : int) (h1 : term583 _61039 _61040) : term599 _61039.
Proof. exact (@lem4910640 _61039 (@lem4910637 _61039 _61040 h1)). Qed.
Lemma lem4910642 (_61039 : int) (_61040 : int) (h1 : term583 _61039 _61040) : term600 _61039.
Proof. exact (@lem4910641 _61039 _61040 h1 term150). Qed.
Lemma lem4910643 (_61039 : int) : (term600 _61039) = ((term601 _61039) = term140).
Proof. exact (eq_refl (term600 _61039)). Qed.
Lemma lem4910644 (_61039 : int) (_61040 : int) (h1 : term583 _61039 _61040) : (term601 _61039) = term140.
Proof. exact (EQ_MP (@lem4910643 _61039) (@lem4910642 _61039 _61040 h1)). Qed.
Lemma lem4910645 (_61039 : int) : (term601 _61039) = (term241 _61039).
Proof. exact (@lem1982733 (term241 _61039)). Qed.
Lemma lem4910646 : (@eq real) = (@eq real).
Proof. exact (eq_refl (@eq real)). Qed.
Lemma lem4910647 (_61039 : int) : (term602 _61039) = (term597 _61039).
Proof. exact (MK_COMB (@lem4910646) (@lem4910645 _61039)). Qed.
Lemma lem4910648 : term140 = term140.
Proof. exact (eq_refl term140). Qed.
Lemma lem4910649 (_61039 : int) : ((term601 _61039) = term140) = ((term241 _61039) = term140).
Proof. exact (MK_COMB (@lem4910647 _61039) (@lem4910648)). Qed.
Lemma lem4910650 (_61039 : int) (_61040 : int) (h1 : term583 _61039 _61040) : (term241 _61039) = term140.
Proof. exact (EQ_MP (@lem4910649 _61039) (@lem4910644 _61039 _61040 h1)). Qed.
Lemma lem4910651 (_61039 : int) (_61040 : int) (h1 : term583 _61039 _61040) : term603 _61039.
Proof. exact (conj (@lem4910650 _61039 _61040 h1) (@lem4910422 _61039 _61040 h1)). Qed.
Lemma lem4910653 (x : real) (y : real) : term499 x y.
Proof. exact (proj1 (@lem1988336 x y)). Qed.
Lemma lem4910654 (_61039 : int) : term604 _61039.
Proof. exact (@lem4910653 (term241 _61039) (real_of_int _61039)). Qed.
Lemma lem4910655 (_61039 : int) (_61040 : int) (h1 : term583 _61039 _61040) : term605 _61039.
Proof. exact (@lem4910654 _61039 (@lem4910651 _61039 _61040 h1)). Qed.
Lemma lem4910656 (_61039 : int) : (term606 _61039) = (term581 _61039).
Proof. exact (@lem1982759 (term244 _61039) (real_of_int _61039) term206). Qed.
Lemma lem4910657 (_61039 : int) : (term504 _61039) = (term505 _61039).
Proof. exact (@lem1982713 term206 (real_of_int _61039)). Qed.
Lemma lem4910659 (x : nat) : (real_of_num x) = (term202 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem4910660 : term150 = term231.
Proof. exact (@lem4910659 term18). Qed.
Lemma lem4910662 (x : nat) : (term204 x) = (term205 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem4910663 : term206 = term207.
Proof. exact (@lem4910662 term18). Qed.
Lemma lem4910664 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem4910665 : term506 = term507.
Proof. exact (MK_COMB (@lem4910664) (@lem4910663)). Qed.
Lemma lem4910666 : term508 = term509.
Proof. exact (MK_COMB (@lem4910665) (@lem4910660)). Qed.
Lemma lem4910667 : term510.
Proof. exact (@lem1981473 term206 term150 term150 term150 term140 term150). Qed.
Lemma lem4910669 (m : nat) (n : nat) : (term257 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem4910670 : term258 = term259.
Proof. exact (@lem4910669 (NUMERAL 0) term18). Qed.
Lemma lem4910671 : term260 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem4910672 (h1 : term260 = (BIT1 0)) : term259 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem4910673 : (term260 = (BIT1 0)) = (term259 = True).
Proof. exact (prop_ext (fun h1 : term260 = (BIT1 0) => @lem4910672 h1) (fun h1 : term259 = True => @lem4910671)). Qed.
Lemma lem4910674 : term259 = True.
Proof. exact (EQ_MP (@lem4910673) (@lem4910671)). Qed.
Lemma lem4910675 : term258 = True.
Proof. exact (TRANS (@lem4910670) (@lem4910674)). Qed.
Lemma lem4910676 : True = term258.
Proof. exact (SYM (@lem4910675)). Qed.
Lemma lem4910677 : term258.
Proof. exact (EQ_MP (@lem4910676) (@lem0)). Qed.
Lemma lem4910678 : term511.
Proof. exact (@lem4910667 (@lem4910677)). Qed.
Lemma lem4910680 (m : nat) (n : nat) : (term257 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem4910681 : term258 = term259.
Proof. exact (@lem4910680 (NUMERAL 0) term18). Qed.
Lemma lem4910682 : term260 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem4910683 (h1 : term260 = (BIT1 0)) : term259 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem4910684 : (term260 = (BIT1 0)) = (term259 = True).
Proof. exact (prop_ext (fun h1 : term260 = (BIT1 0) => @lem4910683 h1) (fun h1 : term259 = True => @lem4910682)). Qed.
Lemma lem4910685 : term259 = True.
Proof. exact (EQ_MP (@lem4910684) (@lem4910682)). Qed.
Lemma lem4910686 : term258 = True.
Proof. exact (TRANS (@lem4910681) (@lem4910685)). Qed.
Lemma lem4910687 : True = term258.
Proof. exact (SYM (@lem4910686)). Qed.
Lemma lem4910688 : term258.
Proof. exact (EQ_MP (@lem4910687) (@lem0)). Qed.
Lemma lem4910689 : term512.
Proof. exact (@lem4910678 (@lem4910688)). Qed.
Lemma lem4910691 (m : nat) (n : nat) : (term257 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem4910692 : term258 = term259.
Proof. exact (@lem4910691 (NUMERAL 0) term18). Qed.
Lemma lem4910693 : term260 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem4910694 (h1 : term260 = (BIT1 0)) : term259 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem4910695 : (term260 = (BIT1 0)) = (term259 = True).
Proof. exact (prop_ext (fun h1 : term260 = (BIT1 0) => @lem4910694 h1) (fun h1 : term259 = True => @lem4910693)). Qed.
Lemma lem4910696 : term259 = True.
Proof. exact (EQ_MP (@lem4910695) (@lem4910693)). Qed.
Lemma lem4910697 : term258 = True.
Proof. exact (TRANS (@lem4910692) (@lem4910696)). Qed.
Lemma lem4910698 : True = term258.
Proof. exact (SYM (@lem4910697)). Qed.
Lemma lem4910699 : term258.
Proof. exact (EQ_MP (@lem4910698) (@lem0)). Qed.
Lemma lem4910700 : term513.
Proof. exact (@lem4910689 (@lem4910699)). Qed.
Lemma lem4910702 (m : nat) (n : nat) : (term213 m n) = (term214 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem4910703 : term215 = term216.
Proof. exact (@lem4910702 term18 term18). Qed.
Lemma lem4910704 : (term217 = (BIT1 0)) = (term218 = term18).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem4910705 : term218 = term18.
Proof. exact (EQ_MP (@lem4910704) (@lem940073)). Qed.
Lemma lem4910706 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem4910707 : term216 = term150.
Proof. exact (MK_COMB (@lem4910706) (@lem4910705)). Qed.
Lemma lem4910708 : term215 = term150.
Proof. exact (TRANS (@lem4910703) (@lem4910707)). Qed.
Lemma lem4910710 (m : nat) (n : nat) : (term235 m n) = (term236 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem4910711 : term232 = term237.
Proof. exact (@lem4910710 term18 term18). Qed.
Lemma lem4910712 : (term217 = (BIT1 0)) = (term218 = term18).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem4910713 : term218 = term18.
Proof. exact (EQ_MP (@lem4910712) (@lem940073)). Qed.
Lemma lem4910714 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem4910715 : term216 = term150.
Proof. exact (MK_COMB (@lem4910714) (@lem4910713)). Qed.
Lemma lem4910716 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem4910717 : term237 = term206.
Proof. exact (MK_COMB (@lem4910716) (@lem4910715)). Qed.
Lemma lem4910718 : term232 = term206.
Proof. exact (TRANS (@lem4910711) (@lem4910717)). Qed.
Lemma lem4910719 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem4910720 : term514 = term506.
Proof. exact (MK_COMB (@lem4910719) (@lem4910718)). Qed.
Lemma lem4910721 : term515 = term508.
Proof. exact (MK_COMB (@lem4910720) (@lem4910708)). Qed.
Lemma lem4910723 (m : nat) : (term516 m) = term140.
Proof. exact (proj1 (@lem1367303 m)). Qed.
Lemma lem4910724 : term508 = term140.
Proof. exact (@lem4910723 term18). Qed.
Lemma lem4910725 : term515 = term140.
Proof. exact (TRANS (@lem4910721) (@lem4910724)). Qed.
Lemma lem4910726 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem4910727 : term517 = term268.
Proof. exact (MK_COMB (@lem4910726) (@lem4910725)). Qed.
Lemma lem4910728 : term150 = term150.
Proof. exact (eq_refl term150). Qed.
Lemma lem4910729 : term518 = term270.
Proof. exact (MK_COMB (@lem4910727) (@lem4910728)). Qed.
Lemma lem4910731 (x : nat) : (term271 x) = term140.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem4910732 : term270 = term140.
Proof. exact (@lem4910731 term18). Qed.
Lemma lem4910733 : term518 = term140.
Proof. exact (TRANS (@lem4910729) (@lem4910732)). Qed.
Lemma lem4910735 (m : nat) (n : nat) : (term213 m n) = (term214 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem4910736 : term215 = term216.
Proof. exact (@lem4910735 term18 term18). Qed.
Lemma lem4910737 : (term217 = (BIT1 0)) = (term218 = term18).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem4910738 : term218 = term18.
Proof. exact (EQ_MP (@lem4910737) (@lem940073)). Qed.
Lemma lem4910739 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem4910740 : term216 = term150.
Proof. exact (MK_COMB (@lem4910739) (@lem4910738)). Qed.
Lemma lem4910741 : term215 = term150.
Proof. exact (TRANS (@lem4910736) (@lem4910740)). Qed.
Lemma lem4910742 : term268 = term268.
Proof. exact (eq_refl term268). Qed.
Lemma lem4910743 : term272 = term270.
Proof. exact (MK_COMB (@lem4910742) (@lem4910741)). Qed.
Lemma lem4910745 (x : nat) : (term271 x) = term140.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem4910746 : term270 = term140.
Proof. exact (@lem4910745 term18). Qed.
Lemma lem4910747 : term272 = term140.
Proof. exact (TRANS (@lem4910743) (@lem4910746)). Qed.
Lemma lem4910748 : term140 = term272.
Proof. exact (SYM (@lem4910747)). Qed.
Lemma lem4910749 : term518 = term272.
Proof. exact (TRANS (@lem4910733) (@lem4910748)). Qed.
Lemma lem4910750 : term509 = term203.
Proof. exact (@lem4910700 (@lem4910749)). Qed.
Lemma lem4910751 : term508 = term203.
Proof. exact (TRANS (@lem4910666) (@lem4910750)). Qed.
Lemma lem4910753 (x : real) : (term222 x) = x.
Proof. exact (EQ_MP (@lem1981475 x) (@lem1981474 x)). Qed.
Lemma lem4910754 : term203 = term140.
Proof. exact (@lem4910753 term140). Qed.
Lemma lem4910755 : term508 = term140.
Proof. exact (TRANS (@lem4910751) (@lem4910754)). Qed.
Lemma lem4910756 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem4910757 : term519 = term268.
Proof. exact (MK_COMB (@lem4910756) (@lem4910755)). Qed.
Lemma lem4910758 (_61039 : int) : (real_of_int _61039) = (real_of_int _61039).
Proof. exact (eq_refl (real_of_int _61039)). Qed.
Lemma lem4910759 (_61039 : int) : (term505 _61039) = (term520 _61039).
Proof. exact (MK_COMB (@lem4910757) (@lem4910758 _61039)). Qed.
Lemma lem4910760 (_61039 : int) : (term504 _61039) = (term520 _61039).
Proof. exact (TRANS (@lem4910657 _61039) (@lem4910759 _61039)). Qed.
Lemma lem4910761 (_61039 : int) : (term520 _61039) = term140.
Proof. exact (@lem1982719 (real_of_int _61039)). Qed.
Lemma lem4910762 (_61039 : int) : (term504 _61039) = term140.
Proof. exact (TRANS (@lem4910760 _61039) (@lem4910761 _61039)). Qed.
Lemma lem4910763 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem4910764 (_61039 : int) : (term521 _61039) = term182.
Proof. exact (MK_COMB (@lem4910763) (@lem4910762 _61039)). Qed.
Lemma lem4910765 : term206 = term206.
Proof. exact (eq_refl term206). Qed.
Lemma lem4910766 (_61039 : int) : (term581 _61039) = term526.
Proof. exact (MK_COMB (@lem4910764 _61039) (@lem4910765)). Qed.
Lemma lem4910767 (_61039 : int) : (term606 _61039) = term526.
Proof. exact (TRANS (@lem4910656 _61039) (@lem4910766 _61039)). Qed.
Lemma lem4910768 : term526 = term206.
Proof. exact (@lem1982721 term206). Qed.
Lemma lem4910769 (_61039 : int) : (term606 _61039) = term206.
Proof. exact (TRANS (@lem4910767 _61039) (@lem4910768)). Qed.
Lemma lem4910770 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem4910771 (_61039 : int) : (term607 _61039) = term528.
Proof. exact (MK_COMB (@lem4910770) (@lem4910769 _61039)). Qed.
Lemma lem4910772 : term140 = term140.
Proof. exact (eq_refl term140). Qed.
Lemma lem4910773 (_61039 : int) : (term605 _61039) = term529.
Proof. exact (MK_COMB (@lem4910771 _61039) (@lem4910772)). Qed.
Lemma lem4910774 (_61039 : int) (_61040 : int) (h1 : term583 _61039 _61040) : term529.
Proof. exact (EQ_MP (@lem4910773 _61039) (@lem4910655 _61039 _61040 h1)). Qed.
Lemma lem4910776 (y : real) (x : real) : (real_ge x y) = (real_le y x).
Proof. exact (EQ_MP (@lem1980260 y x) (@lem1980259 y x)). Qed.
Lemma lem4910777 : term529 = term530.
Proof. exact (@lem4910776 term140 term206). Qed.
Lemma lem4910779 (x : nat) : (term204 x) = (term205 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem4910780 : term206 = term207.
Proof. exact (@lem4910779 term18). Qed.
Lemma lem4910782 (x : nat) : (real_of_num x) = (term202 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem4910783 : term140 = term203.
Proof. exact (@lem4910782 (NUMERAL 0)). Qed.
Lemma lem4910784 : real_le = real_le.
Proof. exact (eq_refl real_le). Qed.
Lemma lem4910785 : term142 = term531.
Proof. exact (MK_COMB (@lem4910784) (@lem4910783)). Qed.
Lemma lem4910786 : term530 = term532.
Proof. exact (MK_COMB (@lem4910785) (@lem4910780)). Qed.
Lemma lem4910787 : term533.
Proof. exact (@lem1980026 term140 term150 term206 term150). Qed.
Lemma lem4910789 (m : nat) (n : nat) : (term257 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem4910790 : term258 = term259.
Proof. exact (@lem4910789 (NUMERAL 0) term18). Qed.
Lemma lem4910791 : term260 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem4910792 (h1 : term260 = (BIT1 0)) : term259 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem4910793 : (term260 = (BIT1 0)) = (term259 = True).
Proof. exact (prop_ext (fun h1 : term260 = (BIT1 0) => @lem4910792 h1) (fun h1 : term259 = True => @lem4910791)). Qed.
Lemma lem4910794 : term259 = True.
Proof. exact (EQ_MP (@lem4910793) (@lem4910791)). Qed.
Lemma lem4910795 : term258 = True.
Proof. exact (TRANS (@lem4910790) (@lem4910794)). Qed.
Lemma lem4910796 : True = term258.
Proof. exact (SYM (@lem4910795)). Qed.
Lemma lem4910797 : term258.
Proof. exact (EQ_MP (@lem4910796) (@lem0)). Qed.
Lemma lem4910798 : term534.
Proof. exact (@lem4910787 (@lem4910797)). Qed.
Lemma lem4910800 (m : nat) (n : nat) : (term257 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem4910801 : term258 = term259.
Proof. exact (@lem4910800 (NUMERAL 0) term18). Qed.
Lemma lem4910802 : term260 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem4910803 (h1 : term260 = (BIT1 0)) : term259 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem4910804 : (term260 = (BIT1 0)) = (term259 = True).
Proof. exact (prop_ext (fun h1 : term260 = (BIT1 0) => @lem4910803 h1) (fun h1 : term259 = True => @lem4910802)). Qed.
Lemma lem4910805 : term259 = True.
Proof. exact (EQ_MP (@lem4910804) (@lem4910802)). Qed.
Lemma lem4910806 : term258 = True.
Proof. exact (TRANS (@lem4910801) (@lem4910805)). Qed.
Lemma lem4910807 : True = term258.
Proof. exact (SYM (@lem4910806)). Qed.
Lemma lem4910808 : term258.
Proof. exact (EQ_MP (@lem4910807) (@lem0)). Qed.
Lemma lem4910809 : term532 = term535.
Proof. exact (@lem4910798 (@lem4910808)). Qed.
Lemma lem4910811 (m : nat) (n : nat) : (term235 m n) = (term236 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem4910812 : term232 = term237.
Proof. exact (@lem4910811 term18 term18). Qed.
Lemma lem4910813 : (term217 = (BIT1 0)) = (term218 = term18).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem4910814 : term218 = term18.
Proof. exact (EQ_MP (@lem4910813) (@lem940073)). Qed.
Lemma lem4910815 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem4910816 : term216 = term150.
Proof. exact (MK_COMB (@lem4910815) (@lem4910814)). Qed.
Lemma lem4910817 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem4910818 : term237 = term206.
Proof. exact (MK_COMB (@lem4910817) (@lem4910816)). Qed.
Lemma lem4910819 : term232 = term206.
Proof. exact (TRANS (@lem4910812) (@lem4910818)). Qed.
Lemma lem4910821 (x : nat) : (term271 x) = term140.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem4910822 : term270 = term140.
Proof. exact (@lem4910821 term18). Qed.
Lemma lem4910823 : real_le = real_le.
Proof. exact (eq_refl real_le). Qed.
Lemma lem4910824 : term536 = term142.
Proof. exact (MK_COMB (@lem4910823) (@lem4910822)). Qed.
Lemma lem4910825 : term535 = term530.
Proof. exact (MK_COMB (@lem4910824) (@lem4910819)). Qed.
Lemma lem4910827 (m : nat) (n : nat) : (term537 m n) = (term538 m n).
Proof. exact (proj2 (@lem1365406 m n)). Qed.
Lemma lem4910828 : term530 = term539.
Proof. exact (@lem4910827 (NUMERAL 0) term18). Qed.
Lemma lem4910829 : term260 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem4910830 (h1 : term260 = (BIT1 0)) : (term18 = (NUMERAL 0)) = False.
Proof. exact (@lem1013352 0 0 (BIT1 0) h1). Qed.
Lemma lem4910831 : (term260 = (BIT1 0)) = ((term18 = (NUMERAL 0)) = False).
Proof. exact (prop_ext (fun h1 : term260 = (BIT1 0) => @lem4910830 h1) (fun h1 : (term18 = (NUMERAL 0)) = False => @lem4910829)). Qed.
Lemma lem4910832 : (term18 = (NUMERAL 0)) = False.
Proof. exact (EQ_MP (@lem4910831) (@lem4910829)). Qed.
Lemma lem4910833 : ((NUMERAL 0) = (NUMERAL 0)) = True.
Proof. exact (@lem1013364 0). Qed.
Lemma lem4910834 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4910835 : term540 = (and True).
Proof. exact (MK_COMB (@lem4910834) (@lem4910833)). Qed.
Lemma lem4910836 : term539 = (True /\ False).
Proof. exact (MK_COMB (@lem4910835) (@lem4910832)). Qed.
Lemma lem4910838 : (True /\ False) = False.
Proof. exact (proj1 (@lem1365106)). Qed.
Lemma lem4910839 : term539 = False.
Proof. exact (TRANS (@lem4910836) (@lem4910838)). Qed.
Lemma lem4910840 : term530 = False.
Proof. exact (TRANS (@lem4910828) (@lem4910839)). Qed.
Lemma lem4910841 : term535 = False.
Proof. exact (TRANS (@lem4910825) (@lem4910840)). Qed.
Lemma lem4910842 : term532 = False.
Proof. exact (TRANS (@lem4910809) (@lem4910841)). Qed.
Lemma lem4910843 : term530 = False.
Proof. exact (TRANS (@lem4910786) (@lem4910842)). Qed.
Lemma lem4910844 : term529 = False.
Proof. exact (TRANS (@lem4910777) (@lem4910843)). Qed.
Lemma lem4910845 (_61039 : int) (_61040 : int) (h1 : term583 _61039 _61040) : False.
Proof. exact (EQ_MP (@lem4910844) (@lem4910774 _61039 _61040 h1)). Qed.
Lemma lem4910846 (_61039 : int) (_61040 : int) (h1 : term608 _61039 _61040) : term608 _61039 _61040.
Proof. exact (h1). Qed.
Lemma lem4910847 (_61039 : int) (_61040 : int) (h1 : term608 _61039 _61040) : term466 _61039 _61040.
Proof. exact (proj2 (@lem4910846 _61039 _61040 h1)). Qed.
Lemma lem4910849 (_61039 : int) (_61040 : int) (h1 : term608 _61039 _61040) : term417 _61039 _61040.
Proof. exact (proj2 (@lem4910847 _61039 _61040 h1)). Qed.
Lemma lem4910851 (_61039 : int) (_61040 : int) (h1 : term608 _61039 _61040) : term368 _61039 _61040.
Proof. exact (proj2 (@lem4910849 _61039 _61040 h1)). Qed.
Lemma lem4910852 (_61039 : int) (_61040 : int) (h1 : term608 _61039 _61040) : term279 _61040 _61039.
Proof. exact (proj1 (@lem4910849 _61039 _61040 h1)). Qed.
Lemma lem4910853 (_61039 : int) (_61040 : int) (h1 : term608 _61039 _61040) : (real_of_int _61039) = term140.
Proof. exact (proj2 (@lem4910852 _61039 _61040 h1)). Qed.
Lemma lem4910855 (_61039 : int) (_61040 : int) (h1 : term608 _61039 _61040) : term293 _61039 _61040.
Proof. exact (proj2 (@lem4910851 _61039 _61040 h1)). Qed.
Lemma lem4910856 (_61039 : int) (_61040 : int) (h1 : term608 _61039 _61040) : (real_of_int _61040) = term140.
Proof. exact (proj1 (@lem4910851 _61039 _61040 h1)). Qed.
Lemma lem4910858 (y : real) (x : real) : (real_gt x y) = (real_lt y x).
Proof. exact (EQ_MP (@lem1980266 y x) (@lem1980265 y x)). Qed.
Lemma lem4910859 : term478 = term258.
Proof. exact (@lem4910858 term140 term150). Qed.
Lemma lem4910861 (x : nat) : (real_of_num x) = (term202 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem4910862 : term150 = term231.
Proof. exact (@lem4910861 term18). Qed.
Lemma lem4910864 (x : nat) : (real_of_num x) = (term202 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem4910865 : term140 = term203.
Proof. exact (@lem4910864 (NUMERAL 0)). Qed.
Lemma lem4910866 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem4910867 : term479 = term480.
Proof. exact (MK_COMB (@lem4910866) (@lem4910865)). Qed.
Lemma lem4910868 : term258 = term481.
Proof. exact (MK_COMB (@lem4910867) (@lem4910862)). Qed.
Lemma lem4910869 : term482.
Proof. exact (@lem1980255 term140 term150 term150 term150). Qed.
Lemma lem4910871 (m : nat) (n : nat) : (term257 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem4910872 : term258 = term259.
Proof. exact (@lem4910871 (NUMERAL 0) term18). Qed.
Lemma lem4910873 : term260 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem4910874 (h1 : term260 = (BIT1 0)) : term259 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem4910875 : (term260 = (BIT1 0)) = (term259 = True).
Proof. exact (prop_ext (fun h1 : term260 = (BIT1 0) => @lem4910874 h1) (fun h1 : term259 = True => @lem4910873)). Qed.
Lemma lem4910876 : term259 = True.
Proof. exact (EQ_MP (@lem4910875) (@lem4910873)). Qed.
Lemma lem4910877 : term258 = True.
Proof. exact (TRANS (@lem4910872) (@lem4910876)). Qed.
Lemma lem4910878 : True = term258.
Proof. exact (SYM (@lem4910877)). Qed.
Lemma lem4910879 : term258.
Proof. exact (EQ_MP (@lem4910878) (@lem0)). Qed.
Lemma lem4910880 : term483.
Proof. exact (@lem4910869 (@lem4910879)). Qed.
Lemma lem4910882 (m : nat) (n : nat) : (term257 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem4910883 : term258 = term259.
Proof. exact (@lem4910882 (NUMERAL 0) term18). Qed.
Lemma lem4910884 : term260 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem4910885 (h1 : term260 = (BIT1 0)) : term259 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem4910886 : (term260 = (BIT1 0)) = (term259 = True).
Proof. exact (prop_ext (fun h1 : term260 = (BIT1 0) => @lem4910885 h1) (fun h1 : term259 = True => @lem4910884)). Qed.
Lemma lem4910887 : term259 = True.
Proof. exact (EQ_MP (@lem4910886) (@lem4910884)). Qed.
Lemma lem4910888 : term258 = True.
Proof. exact (TRANS (@lem4910883) (@lem4910887)). Qed.
Lemma lem4910889 : True = term258.
Proof. exact (SYM (@lem4910888)). Qed.
Lemma lem4910890 : term258.
Proof. exact (EQ_MP (@lem4910889) (@lem0)). Qed.
Lemma lem4910891 : term481 = term484.
Proof. exact (@lem4910880 (@lem4910890)). Qed.
Lemma lem4910893 (m : nat) (n : nat) : (term213 m n) = (term214 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem4910894 : term215 = term216.
Proof. exact (@lem4910893 term18 term18). Qed.
Lemma lem4910895 : (term217 = (BIT1 0)) = (term218 = term18).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem4910896 : term218 = term18.
Proof. exact (EQ_MP (@lem4910895) (@lem940073)). Qed.
Lemma lem4910897 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem4910898 : term216 = term150.
Proof. exact (MK_COMB (@lem4910897) (@lem4910896)). Qed.
Lemma lem4910899 : term215 = term150.
Proof. exact (TRANS (@lem4910894) (@lem4910898)). Qed.
Lemma lem4910901 (x : nat) : (term271 x) = term140.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem4910902 : term270 = term140.
Proof. exact (@lem4910901 term18). Qed.
Lemma lem4910903 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem4910904 : term485 = term479.
Proof. exact (MK_COMB (@lem4910903) (@lem4910902)). Qed.
Lemma lem4910905 : term484 = term258.
Proof. exact (MK_COMB (@lem4910904) (@lem4910899)). Qed.
Lemma lem4910907 (m : nat) (n : nat) : (term257 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem4910908 : term258 = term259.
Proof. exact (@lem4910907 (NUMERAL 0) term18). Qed.
Lemma lem4910909 : term260 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem4910910 (h1 : term260 = (BIT1 0)) : term259 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem4910911 : (term260 = (BIT1 0)) = (term259 = True).
Proof. exact (prop_ext (fun h1 : term260 = (BIT1 0) => @lem4910910 h1) (fun h1 : term259 = True => @lem4910909)). Qed.
Lemma lem4910912 : term259 = True.
Proof. exact (EQ_MP (@lem4910911) (@lem4910909)). Qed.
Lemma lem4910913 : term258 = True.
Proof. exact (TRANS (@lem4910908) (@lem4910912)). Qed.
Lemma lem4910914 : term484 = True.
Proof. exact (TRANS (@lem4910905) (@lem4910913)). Qed.
Lemma lem4910915 : term481 = True.
Proof. exact (TRANS (@lem4910891) (@lem4910914)). Qed.
Lemma lem4910916 : term258 = True.
Proof. exact (TRANS (@lem4910868) (@lem4910915)). Qed.
Lemma lem4910917 : term478 = True.
Proof. exact (TRANS (@lem4910859) (@lem4910916)). Qed.
Lemma lem4910918 : True = term478.
Proof. exact (SYM (@lem4910917)). Qed.
Lemma lem4910919 : term478.
Proof. exact (EQ_MP (@lem4910918) (@lem0)). Qed.
Lemma lem4910920 (_61039 : int) (_61040 : int) (h1 : term608 _61039 _61040) : term542 _61039 _61040.
Proof. exact (conj (@lem4910919) (@lem4910855 _61039 _61040 h1)). Qed.
Lemma lem4910922 (x : real) (y : real) : term487 x y.
Proof. exact (proj1 (@lem1988332 x y)). Qed.
Lemma lem4910923 (_61039 : int) (_61040 : int) : term543 _61039 _61040.
Proof. exact (@lem4910922 term150 (term243 _61039 _61040)). Qed.
Lemma lem4910924 (_61039 : int) (_61040 : int) (h1 : term608 _61039 _61040) : term544 _61039 _61040.
Proof. exact (@lem4910923 _61039 _61040 (@lem4910920 _61039 _61040 h1)). Qed.
Lemma lem4910925 (_61039 : int) (_61040 : int) : (term496 _61039 _61040) = (term243 _61039 _61040).
Proof. exact (@lem1982733 (term243 _61039 _61040)). Qed.
Lemma lem4910926 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem4910927 (_61039 : int) (_61040 : int) : (term545 _61039 _61040) = (term292 _61039 _61040).
Proof. exact (MK_COMB (@lem4910926) (@lem4910925 _61039 _61040)). Qed.
Lemma lem4910928 : term140 = term140.
Proof. exact (eq_refl term140). Qed.
Lemma lem4910929 (_61039 : int) (_61040 : int) : (term544 _61039 _61040) = (term293 _61039 _61040).
Proof. exact (MK_COMB (@lem4910927 _61039 _61040) (@lem4910928)). Qed.
Lemma lem4910930 (_61039 : int) (_61040 : int) (h1 : term608 _61039 _61040) : term293 _61039 _61040.
Proof. exact (EQ_MP (@lem4910929 _61039 _61040) (@lem4910924 _61039 _61040 h1)). Qed.
Lemma lem4910932 (y : real) : term492 y.
Proof. exact (EQ_MP (@lem1396750 y) (@lem0)). Qed.
Lemma lem4910933 (_61040 : int) : term546 _61040.
Proof. exact (@lem4910932 (real_of_int _61040)). Qed.
Lemma lem4910934 (_61039 : int) (_61040 : int) (h1 : term608 _61039 _61040) : term547 _61040.
Proof. exact (@lem4910933 _61040 (@lem4910856 _61039 _61040 h1)). Qed.
Lemma lem4910935 (_61039 : int) (_61040 : int) (h1 : term608 _61039 _61040) : term563 _61040.
Proof. exact (@lem4910934 _61039 _61040 h1 term206). Qed.
Lemma lem4910936 (_61040 : int) : (term563 _61040) = ((term244 _61040) = term140).
Proof. exact (eq_refl (term563 _61040)). Qed.
Lemma lem4910943 (_61039 : int) (_61040 : int) (h1 : term608 _61039 _61040) : (term244 _61040) = term140.
Proof. exact (EQ_MP (@lem4910936 _61040) (@lem4910935 _61039 _61040 h1)). Qed.
Lemma lem4910944 (_61039 : int) (_61040 : int) (h1 : term608 _61039 _61040) : term609 _61039 _61040.
Proof. exact (conj (@lem4910943 _61039 _61040 h1) (@lem4910930 _61039 _61040 h1)). Qed.
Lemma lem4910946 (x : real) (y : real) : term499 x y.
Proof. exact (proj1 (@lem1988336 x y)). Qed.
Lemma lem4910947 (_61039 : int) (_61040 : int) : term610 _61039 _61040.
Proof. exact (@lem4910946 (term244 _61040) (term243 _61039 _61040)). Qed.
Lemma lem4910948 (_61039 : int) (_61040 : int) (h1 : term608 _61039 _61040) : term611 _61039 _61040.
Proof. exact (@lem4910947 _61039 _61040 (@lem4910944 _61039 _61040 h1)). Qed.
Lemma lem4910949 (_61039 : int) (_61040 : int) : (term594 _61039 _61040) = (term595 _61039 _61040).
Proof. exact (@lem1982757 (term244 _61039) (term244 _61040) (term306 _61040)). Qed.
Lemma lem4910950 (_61040 : int) : (term580 _61040) = (term581 _61040).
Proof. exact (@lem1982763 (term244 _61040) (real_of_int _61040) term206). Qed.
Lemma lem4910951 (_61040 : int) : (term504 _61040) = (term505 _61040).
Proof. exact (@lem1982713 term206 (real_of_int _61040)). Qed.
Lemma lem4910953 (x : nat) : (real_of_num x) = (term202 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem4910954 : term150 = term231.
Proof. exact (@lem4910953 term18). Qed.
Lemma lem4910956 (x : nat) : (term204 x) = (term205 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem4910957 : term206 = term207.
Proof. exact (@lem4910956 term18). Qed.
Lemma lem4910958 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem4910959 : term506 = term507.
Proof. exact (MK_COMB (@lem4910958) (@lem4910957)). Qed.
Lemma lem4910960 : term508 = term509.
Proof. exact (MK_COMB (@lem4910959) (@lem4910954)). Qed.
Lemma lem4910961 : term510.
Proof. exact (@lem1981473 term206 term150 term150 term150 term140 term150). Qed.
Lemma lem4910963 (m : nat) (n : nat) : (term257 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem4910964 : term258 = term259.
Proof. exact (@lem4910963 (NUMERAL 0) term18). Qed.
Lemma lem4910965 : term260 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem4910966 (h1 : term260 = (BIT1 0)) : term259 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem4910967 : (term260 = (BIT1 0)) = (term259 = True).
Proof. exact (prop_ext (fun h1 : term260 = (BIT1 0) => @lem4910966 h1) (fun h1 : term259 = True => @lem4910965)). Qed.
Lemma lem4910968 : term259 = True.
Proof. exact (EQ_MP (@lem4910967) (@lem4910965)). Qed.
Lemma lem4910969 : term258 = True.
Proof. exact (TRANS (@lem4910964) (@lem4910968)). Qed.
Lemma lem4910970 : True = term258.
Proof. exact (SYM (@lem4910969)). Qed.
Lemma lem4910971 : term258.
Proof. exact (EQ_MP (@lem4910970) (@lem0)). Qed.
Lemma lem4910972 : term511.
Proof. exact (@lem4910961 (@lem4910971)). Qed.
Lemma lem4910974 (m : nat) (n : nat) : (term257 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem4910975 : term258 = term259.
Proof. exact (@lem4910974 (NUMERAL 0) term18). Qed.
Lemma lem4910976 : term260 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem4910977 (h1 : term260 = (BIT1 0)) : term259 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem4910978 : (term260 = (BIT1 0)) = (term259 = True).
Proof. exact (prop_ext (fun h1 : term260 = (BIT1 0) => @lem4910977 h1) (fun h1 : term259 = True => @lem4910976)). Qed.
Lemma lem4910979 : term259 = True.
Proof. exact (EQ_MP (@lem4910978) (@lem4910976)). Qed.
Lemma lem4910980 : term258 = True.
Proof. exact (TRANS (@lem4910975) (@lem4910979)). Qed.
Lemma lem4910981 : True = term258.
Proof. exact (SYM (@lem4910980)). Qed.
Lemma lem4910982 : term258.
Proof. exact (EQ_MP (@lem4910981) (@lem0)). Qed.
Lemma lem4910983 : term512.
Proof. exact (@lem4910972 (@lem4910982)). Qed.
Lemma lem4910985 (m : nat) (n : nat) : (term257 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem4910986 : term258 = term259.
Proof. exact (@lem4910985 (NUMERAL 0) term18). Qed.
Lemma lem4910987 : term260 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem4910988 (h1 : term260 = (BIT1 0)) : term259 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem4910989 : (term260 = (BIT1 0)) = (term259 = True).
Proof. exact (prop_ext (fun h1 : term260 = (BIT1 0) => @lem4910988 h1) (fun h1 : term259 = True => @lem4910987)). Qed.
Lemma lem4910990 : term259 = True.
Proof. exact (EQ_MP (@lem4910989) (@lem4910987)). Qed.
Lemma lem4910991 : term258 = True.
Proof. exact (TRANS (@lem4910986) (@lem4910990)). Qed.
Lemma lem4910992 : True = term258.
Proof. exact (SYM (@lem4910991)). Qed.
Lemma lem4910993 : term258.
Proof. exact (EQ_MP (@lem4910992) (@lem0)). Qed.
Lemma lem4910994 : term513.
Proof. exact (@lem4910983 (@lem4910993)). Qed.
Lemma lem4910996 (m : nat) (n : nat) : (term213 m n) = (term214 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem4910997 : term215 = term216.
Proof. exact (@lem4910996 term18 term18). Qed.
Lemma lem4910998 : (term217 = (BIT1 0)) = (term218 = term18).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem4910999 : term218 = term18.
Proof. exact (EQ_MP (@lem4910998) (@lem940073)). Qed.
Lemma lem4911000 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem4911001 : term216 = term150.
Proof. exact (MK_COMB (@lem4911000) (@lem4910999)). Qed.
Lemma lem4911002 : term215 = term150.
Proof. exact (TRANS (@lem4910997) (@lem4911001)). Qed.
Lemma lem4911004 (m : nat) (n : nat) : (term235 m n) = (term236 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem4911005 : term232 = term237.
Proof. exact (@lem4911004 term18 term18). Qed.
Lemma lem4911006 : (term217 = (BIT1 0)) = (term218 = term18).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem4911007 : term218 = term18.
Proof. exact (EQ_MP (@lem4911006) (@lem940073)). Qed.
Lemma lem4911008 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem4911009 : term216 = term150.
Proof. exact (MK_COMB (@lem4911008) (@lem4911007)). Qed.
Lemma lem4911010 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem4911011 : term237 = term206.
Proof. exact (MK_COMB (@lem4911010) (@lem4911009)). Qed.
Lemma lem4911012 : term232 = term206.
Proof. exact (TRANS (@lem4911005) (@lem4911011)). Qed.
Lemma lem4911013 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem4911014 : term514 = term506.
Proof. exact (MK_COMB (@lem4911013) (@lem4911012)). Qed.
Lemma lem4911015 : term515 = term508.
Proof. exact (MK_COMB (@lem4911014) (@lem4911002)). Qed.
Lemma lem4911017 (m : nat) : (term516 m) = term140.
Proof. exact (proj1 (@lem1367303 m)). Qed.
Lemma lem4911018 : term508 = term140.
Proof. exact (@lem4911017 term18). Qed.
Lemma lem4911019 : term515 = term140.
Proof. exact (TRANS (@lem4911015) (@lem4911018)). Qed.
Lemma lem4911020 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem4911021 : term517 = term268.
Proof. exact (MK_COMB (@lem4911020) (@lem4911019)). Qed.
Lemma lem4911022 : term150 = term150.
Proof. exact (eq_refl term150). Qed.
Lemma lem4911023 : term518 = term270.
Proof. exact (MK_COMB (@lem4911021) (@lem4911022)). Qed.
Lemma lem4911025 (x : nat) : (term271 x) = term140.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem4911026 : term270 = term140.
Proof. exact (@lem4911025 term18). Qed.
Lemma lem4911027 : term518 = term140.
Proof. exact (TRANS (@lem4911023) (@lem4911026)). Qed.
Lemma lem4911029 (m : nat) (n : nat) : (term213 m n) = (term214 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem4911030 : term215 = term216.
Proof. exact (@lem4911029 term18 term18). Qed.
Lemma lem4911031 : (term217 = (BIT1 0)) = (term218 = term18).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem4911032 : term218 = term18.
Proof. exact (EQ_MP (@lem4911031) (@lem940073)). Qed.
Lemma lem4911033 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem4911034 : term216 = term150.
Proof. exact (MK_COMB (@lem4911033) (@lem4911032)). Qed.
Lemma lem4911035 : term215 = term150.
Proof. exact (TRANS (@lem4911030) (@lem4911034)). Qed.
Lemma lem4911036 : term268 = term268.
Proof. exact (eq_refl term268). Qed.
Lemma lem4911037 : term272 = term270.
Proof. exact (MK_COMB (@lem4911036) (@lem4911035)). Qed.
Lemma lem4911039 (x : nat) : (term271 x) = term140.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem4911040 : term270 = term140.
Proof. exact (@lem4911039 term18). Qed.
Lemma lem4911041 : term272 = term140.
Proof. exact (TRANS (@lem4911037) (@lem4911040)). Qed.
Lemma lem4911042 : term140 = term272.
Proof. exact (SYM (@lem4911041)). Qed.
Lemma lem4911043 : term518 = term272.
Proof. exact (TRANS (@lem4911027) (@lem4911042)). Qed.
Lemma lem4911044 : term509 = term203.
Proof. exact (@lem4910994 (@lem4911043)). Qed.
Lemma lem4911045 : term508 = term203.
Proof. exact (TRANS (@lem4910960) (@lem4911044)). Qed.
Lemma lem4911047 (x : real) : (term222 x) = x.
Proof. exact (EQ_MP (@lem1981475 x) (@lem1981474 x)). Qed.
Lemma lem4911048 : term203 = term140.
Proof. exact (@lem4911047 term140). Qed.
Lemma lem4911049 : term508 = term140.
Proof. exact (TRANS (@lem4911045) (@lem4911048)). Qed.
Lemma lem4911050 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem4911051 : term519 = term268.
Proof. exact (MK_COMB (@lem4911050) (@lem4911049)). Qed.
Lemma lem4911052 (_61040 : int) : (real_of_int _61040) = (real_of_int _61040).
Proof. exact (eq_refl (real_of_int _61040)). Qed.
Lemma lem4911053 (_61040 : int) : (term505 _61040) = (term520 _61040).
Proof. exact (MK_COMB (@lem4911051) (@lem4911052 _61040)). Qed.
Lemma lem4911054 (_61040 : int) : (term504 _61040) = (term520 _61040).
Proof. exact (TRANS (@lem4910951 _61040) (@lem4911053 _61040)). Qed.
Lemma lem4911055 (_61040 : int) : (term520 _61040) = term140.
Proof. exact (@lem1982719 (real_of_int _61040)). Qed.
Lemma lem4911056 (_61040 : int) : (term504 _61040) = term140.
Proof. exact (TRANS (@lem4911054 _61040) (@lem4911055 _61040)). Qed.
Lemma lem4911057 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem4911058 (_61040 : int) : (term521 _61040) = term182.
Proof. exact (MK_COMB (@lem4911057) (@lem4911056 _61040)). Qed.
Lemma lem4911059 : term206 = term206.
Proof. exact (eq_refl term206). Qed.
Lemma lem4911060 (_61040 : int) : (term581 _61040) = term526.
Proof. exact (MK_COMB (@lem4911058 _61040) (@lem4911059)). Qed.
Lemma lem4911061 (_61040 : int) : (term580 _61040) = term526.
Proof. exact (TRANS (@lem4910950 _61040) (@lem4911060 _61040)). Qed.
Lemma lem4911062 : term526 = term206.
Proof. exact (@lem1982721 term206). Qed.
Lemma lem4911063 (_61040 : int) : (term580 _61040) = term206.
Proof. exact (TRANS (@lem4911061 _61040) (@lem4911062)). Qed.
Lemma lem4911064 (_61039 : int) : (term240 _61039) = (term240 _61039).
Proof. exact (eq_refl (term240 _61039)). Qed.
Lemma lem4911065 (_61040 : int) (_61039 : int) : (term595 _61039 _61040) = (term241 _61039).
Proof. exact (MK_COMB (@lem4911064 _61039) (@lem4911063 _61040)). Qed.
Lemma lem4911066 (_61040 : int) (_61039 : int) : (term594 _61039 _61040) = (term241 _61039).
Proof. exact (TRANS (@lem4910949 _61039 _61040) (@lem4911065 _61040 _61039)). Qed.
Lemma lem4911067 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem4911068 (_61040 : int) (_61039 : int) : (term612 _61039 _61040) = (term299 _61039).
Proof. exact (MK_COMB (@lem4911067) (@lem4911066 _61040 _61039)). Qed.
Lemma lem4911069 : term140 = term140.
Proof. exact (eq_refl term140). Qed.
Lemma lem4911070 (_61040 : int) (_61039 : int) : (term611 _61039 _61040) = (term300 _61039).
Proof. exact (MK_COMB (@lem4911068 _61040 _61039) (@lem4911069)). Qed.
Lemma lem4911071 (_61039 : int) (_61040 : int) (h1 : term608 _61039 _61040) : term300 _61039.
Proof. exact (EQ_MP (@lem4911070 _61040 _61039) (@lem4910948 _61039 _61040 h1)). Qed.
Lemma lem4911073 (y : real) (x : real) : (real_gt x y) = (real_lt y x).
Proof. exact (EQ_MP (@lem1980266 y x) (@lem1980265 y x)). Qed.
Lemma lem4911074 : term478 = term258.
Proof. exact (@lem4911073 term140 term150). Qed.
Lemma lem4911076 (x : nat) : (real_of_num x) = (term202 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem4911077 : term150 = term231.
Proof. exact (@lem4911076 term18). Qed.
Lemma lem4911079 (x : nat) : (real_of_num x) = (term202 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem4911080 : term140 = term203.
Proof. exact (@lem4911079 (NUMERAL 0)). Qed.
Lemma lem4911081 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem4911082 : term479 = term480.
Proof. exact (MK_COMB (@lem4911081) (@lem4911080)). Qed.
Lemma lem4911083 : term258 = term481.
Proof. exact (MK_COMB (@lem4911082) (@lem4911077)). Qed.
Lemma lem4911084 : term482.
Proof. exact (@lem1980255 term140 term150 term150 term150). Qed.
Lemma lem4911086 (m : nat) (n : nat) : (term257 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem4911087 : term258 = term259.
Proof. exact (@lem4911086 (NUMERAL 0) term18). Qed.
Lemma lem4911088 : term260 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem4911089 (h1 : term260 = (BIT1 0)) : term259 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem4911090 : (term260 = (BIT1 0)) = (term259 = True).
Proof. exact (prop_ext (fun h1 : term260 = (BIT1 0) => @lem4911089 h1) (fun h1 : term259 = True => @lem4911088)). Qed.
Lemma lem4911091 : term259 = True.
Proof. exact (EQ_MP (@lem4911090) (@lem4911088)). Qed.
Lemma lem4911092 : term258 = True.
Proof. exact (TRANS (@lem4911087) (@lem4911091)). Qed.
Lemma lem4911093 : True = term258.
Proof. exact (SYM (@lem4911092)). Qed.
Lemma lem4911094 : term258.
Proof. exact (EQ_MP (@lem4911093) (@lem0)). Qed.
Lemma lem4911095 : term483.
Proof. exact (@lem4911084 (@lem4911094)). Qed.
Lemma lem4911097 (m : nat) (n : nat) : (term257 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem4911098 : term258 = term259.
Proof. exact (@lem4911097 (NUMERAL 0) term18). Qed.
Lemma lem4911099 : term260 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem4911100 (h1 : term260 = (BIT1 0)) : term259 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem4911101 : (term260 = (BIT1 0)) = (term259 = True).
Proof. exact (prop_ext (fun h1 : term260 = (BIT1 0) => @lem4911100 h1) (fun h1 : term259 = True => @lem4911099)). Qed.
Lemma lem4911102 : term259 = True.
Proof. exact (EQ_MP (@lem4911101) (@lem4911099)). Qed.
Lemma lem4911103 : term258 = True.
Proof. exact (TRANS (@lem4911098) (@lem4911102)). Qed.
Lemma lem4911104 : True = term258.
Proof. exact (SYM (@lem4911103)). Qed.
Lemma lem4911105 : term258.
Proof. exact (EQ_MP (@lem4911104) (@lem0)). Qed.
Lemma lem4911106 : term481 = term484.
Proof. exact (@lem4911095 (@lem4911105)). Qed.
Lemma lem4911108 (m : nat) (n : nat) : (term213 m n) = (term214 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem4911109 : term215 = term216.
Proof. exact (@lem4911108 term18 term18). Qed.
Lemma lem4911110 : (term217 = (BIT1 0)) = (term218 = term18).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem4911111 : term218 = term18.
Proof. exact (EQ_MP (@lem4911110) (@lem940073)). Qed.
Lemma lem4911112 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem4911113 : term216 = term150.
Proof. exact (MK_COMB (@lem4911112) (@lem4911111)). Qed.
Lemma lem4911114 : term215 = term150.
Proof. exact (TRANS (@lem4911109) (@lem4911113)). Qed.
Lemma lem4911116 (x : nat) : (term271 x) = term140.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem4911117 : term270 = term140.
Proof. exact (@lem4911116 term18). Qed.
Lemma lem4911118 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem4911119 : term485 = term479.
Proof. exact (MK_COMB (@lem4911118) (@lem4911117)). Qed.
Lemma lem4911120 : term484 = term258.
Proof. exact (MK_COMB (@lem4911119) (@lem4911114)). Qed.
Lemma lem4911122 (m : nat) (n : nat) : (term257 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem4911123 : term258 = term259.
Proof. exact (@lem4911122 (NUMERAL 0) term18). Qed.
Lemma lem4911124 : term260 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem4911125 (h1 : term260 = (BIT1 0)) : term259 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem4911126 : (term260 = (BIT1 0)) = (term259 = True).
Proof. exact (prop_ext (fun h1 : term260 = (BIT1 0) => @lem4911125 h1) (fun h1 : term259 = True => @lem4911124)). Qed.
Lemma lem4911127 : term259 = True.
Proof. exact (EQ_MP (@lem4911126) (@lem4911124)). Qed.
Lemma lem4911128 : term258 = True.
Proof. exact (TRANS (@lem4911123) (@lem4911127)). Qed.
Lemma lem4911129 : term484 = True.
Proof. exact (TRANS (@lem4911120) (@lem4911128)). Qed.
Lemma lem4911130 : term481 = True.
Proof. exact (TRANS (@lem4911106) (@lem4911129)). Qed.
Lemma lem4911131 : term258 = True.
Proof. exact (TRANS (@lem4911083) (@lem4911130)). Qed.
Lemma lem4911132 : term478 = True.
Proof. exact (TRANS (@lem4911074) (@lem4911131)). Qed.
Lemma lem4911133 : True = term478.
Proof. exact (SYM (@lem4911132)). Qed.
Lemma lem4911134 : term478.
Proof. exact (EQ_MP (@lem4911133) (@lem0)). Qed.
Lemma lem4911135 (_61039 : int) (_61040 : int) (h1 : term608 _61039 _61040) : term613 _61039.
Proof. exact (conj (@lem4911134) (@lem4911071 _61039 _61040 h1)). Qed.
Lemma lem4911137 (x : real) (y : real) : term487 x y.
Proof. exact (proj1 (@lem1988332 x y)). Qed.
Lemma lem4911138 (_61039 : int) : term614 _61039.
Proof. exact (@lem4911137 term150 (term241 _61039)). Qed.
Lemma lem4911139 (_61039 : int) (_61040 : int) (h1 : term608 _61039 _61040) : term615 _61039.
Proof. exact (@lem4911138 _61039 (@lem4911135 _61039 _61040 h1)). Qed.
Lemma lem4911140 (_61039 : int) : (term601 _61039) = (term241 _61039).
Proof. exact (@lem1982733 (term241 _61039)). Qed.
Lemma lem4911141 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem4911142 (_61039 : int) : (term616 _61039) = (term299 _61039).
Proof. exact (MK_COMB (@lem4911141) (@lem4911140 _61039)). Qed.
Lemma lem4911143 : term140 = term140.
Proof. exact (eq_refl term140). Qed.
Lemma lem4911144 (_61039 : int) : (term615 _61039) = (term300 _61039).
Proof. exact (MK_COMB (@lem4911142 _61039) (@lem4911143)). Qed.
Lemma lem4911145 (_61039 : int) (_61040 : int) (h1 : term608 _61039 _61040) : term300 _61039.
Proof. exact (EQ_MP (@lem4911144 _61039) (@lem4911139 _61039 _61040 h1)). Qed.
Lemma lem4911147 (y : real) : term492 y.
Proof. exact (EQ_MP (@lem1396750 y) (@lem0)). Qed.
Lemma lem4911148 (_61039 : int) : term546 _61039.
Proof. exact (@lem4911147 (real_of_int _61039)). Qed.
Lemma lem4911149 (_61039 : int) (_61040 : int) (h1 : term608 _61039 _61040) : term547 _61039.
Proof. exact (@lem4911148 _61039 (@lem4910853 _61039 _61040 h1)). Qed.
Lemma lem4911150 (_61039 : int) (_61040 : int) (h1 : term608 _61039 _61040) : term548 _61039.
Proof. exact (@lem4911149 _61039 _61040 h1 term150). Qed.
Lemma lem4911151 (_61039 : int) : (term548 _61039) = ((term549 _61039) = term140).
Proof. exact (eq_refl (term548 _61039)). Qed.
Lemma lem4911152 (_61039 : int) (_61040 : int) (h1 : term608 _61039 _61040) : (term549 _61039) = term140.
Proof. exact (EQ_MP (@lem4911151 _61039) (@lem4911150 _61039 _61040 h1)). Qed.
Lemma lem4911153 (_61039 : int) : (term549 _61039) = (real_of_int _61039).
Proof. exact (@lem1982733 (real_of_int _61039)). Qed.
Lemma lem4911154 : (@eq real) = (@eq real).
Proof. exact (eq_refl (@eq real)). Qed.
Lemma lem4911155 (_61039 : int) : (term550 _61039) = (term153 _61039).
Proof. exact (MK_COMB (@lem4911154) (@lem4911153 _61039)). Qed.
Lemma lem4911156 : term140 = term140.
Proof. exact (eq_refl term140). Qed.
Lemma lem4911157 (_61039 : int) : ((term549 _61039) = term140) = ((real_of_int _61039) = term140).
Proof. exact (MK_COMB (@lem4911155 _61039) (@lem4911156)). Qed.
Lemma lem4911158 (_61039 : int) (_61040 : int) (h1 : term608 _61039 _61040) : (real_of_int _61039) = term140.
Proof. exact (EQ_MP (@lem4911157 _61039) (@lem4911152 _61039 _61040 h1)). Qed.
Lemma lem4911159 (_61039 : int) (_61040 : int) (h1 : term608 _61039 _61040) : term354 _61039.
Proof. exact (conj (@lem4911158 _61039 _61040 h1) (@lem4911145 _61039 _61040 h1)). Qed.
Lemma lem4911161 (x : real) (y : real) : term499 x y.
Proof. exact (proj1 (@lem1988336 x y)). Qed.
Lemma lem4911162 (_61039 : int) : term617 _61039.
Proof. exact (@lem4911161 (real_of_int _61039) (term241 _61039)). Qed.
Lemma lem4911163 (_61039 : int) (_61040 : int) (h1 : term608 _61039 _61040) : term618 _61039.
Proof. exact (@lem4911162 _61039 (@lem4911159 _61039 _61040 h1)). Qed.
Lemma lem4911164 (_61039 : int) : (term619 _61039) = (term523 _61039).
Proof. exact (@lem1982763 (real_of_int _61039) (term244 _61039) term206). Qed.
Lemma lem4911165 (_61039 : int) : (term524 _61039) = (term505 _61039).
Proof. exact (@lem1982715 term206 (real_of_int _61039)). Qed.
Lemma lem4911167 (x : nat) : (real_of_num x) = (term202 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem4911168 : term150 = term231.
Proof. exact (@lem4911167 term18). Qed.
Lemma lem4911170 (x : nat) : (term204 x) = (term205 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem4911171 : term206 = term207.
Proof. exact (@lem4911170 term18). Qed.
Lemma lem4911172 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem4911173 : term506 = term507.
Proof. exact (MK_COMB (@lem4911172) (@lem4911171)). Qed.
Lemma lem4911174 : term508 = term509.
Proof. exact (MK_COMB (@lem4911173) (@lem4911168)). Qed.
Lemma lem4911175 : term510.
Proof. exact (@lem1981473 term206 term150 term150 term150 term140 term150). Qed.
Lemma lem4911177 (m : nat) (n : nat) : (term257 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem4911178 : term258 = term259.
Proof. exact (@lem4911177 (NUMERAL 0) term18). Qed.
Lemma lem4911179 : term260 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem4911180 (h1 : term260 = (BIT1 0)) : term259 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem4911181 : (term260 = (BIT1 0)) = (term259 = True).
Proof. exact (prop_ext (fun h1 : term260 = (BIT1 0) => @lem4911180 h1) (fun h1 : term259 = True => @lem4911179)). Qed.
Lemma lem4911182 : term259 = True.
Proof. exact (EQ_MP (@lem4911181) (@lem4911179)). Qed.
Lemma lem4911183 : term258 = True.
Proof. exact (TRANS (@lem4911178) (@lem4911182)). Qed.
Lemma lem4911184 : True = term258.
Proof. exact (SYM (@lem4911183)). Qed.
Lemma lem4911185 : term258.
Proof. exact (EQ_MP (@lem4911184) (@lem0)). Qed.
Lemma lem4911186 : term511.
Proof. exact (@lem4911175 (@lem4911185)). Qed.
Lemma lem4911188 (m : nat) (n : nat) : (term257 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem4911189 : term258 = term259.
Proof. exact (@lem4911188 (NUMERAL 0) term18). Qed.
Lemma lem4911190 : term260 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem4911191 (h1 : term260 = (BIT1 0)) : term259 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem4911192 : (term260 = (BIT1 0)) = (term259 = True).
Proof. exact (prop_ext (fun h1 : term260 = (BIT1 0) => @lem4911191 h1) (fun h1 : term259 = True => @lem4911190)). Qed.
Lemma lem4911193 : term259 = True.
Proof. exact (EQ_MP (@lem4911192) (@lem4911190)). Qed.
Lemma lem4911194 : term258 = True.
Proof. exact (TRANS (@lem4911189) (@lem4911193)). Qed.
Lemma lem4911195 : True = term258.
Proof. exact (SYM (@lem4911194)). Qed.
Lemma lem4911196 : term258.
Proof. exact (EQ_MP (@lem4911195) (@lem0)). Qed.
Lemma lem4911197 : term512.
Proof. exact (@lem4911186 (@lem4911196)). Qed.
Lemma lem4911199 (m : nat) (n : nat) : (term257 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem4911200 : term258 = term259.
Proof. exact (@lem4911199 (NUMERAL 0) term18). Qed.
Lemma lem4911201 : term260 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem4911202 (h1 : term260 = (BIT1 0)) : term259 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem4911203 : (term260 = (BIT1 0)) = (term259 = True).
Proof. exact (prop_ext (fun h1 : term260 = (BIT1 0) => @lem4911202 h1) (fun h1 : term259 = True => @lem4911201)). Qed.
Lemma lem4911204 : term259 = True.
Proof. exact (EQ_MP (@lem4911203) (@lem4911201)). Qed.
Lemma lem4911205 : term258 = True.
Proof. exact (TRANS (@lem4911200) (@lem4911204)). Qed.
Lemma lem4911206 : True = term258.
Proof. exact (SYM (@lem4911205)). Qed.
Lemma lem4911207 : term258.
Proof. exact (EQ_MP (@lem4911206) (@lem0)). Qed.
Lemma lem4911208 : term513.
Proof. exact (@lem4911197 (@lem4911207)). Qed.
Lemma lem4911210 (m : nat) (n : nat) : (term213 m n) = (term214 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem4911211 : term215 = term216.
Proof. exact (@lem4911210 term18 term18). Qed.
Lemma lem4911212 : (term217 = (BIT1 0)) = (term218 = term18).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem4911213 : term218 = term18.
Proof. exact (EQ_MP (@lem4911212) (@lem940073)). Qed.
Lemma lem4911214 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem4911215 : term216 = term150.
Proof. exact (MK_COMB (@lem4911214) (@lem4911213)). Qed.
Lemma lem4911216 : term215 = term150.
Proof. exact (TRANS (@lem4911211) (@lem4911215)). Qed.
Lemma lem4911218 (m : nat) (n : nat) : (term235 m n) = (term236 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem4911219 : term232 = term237.
Proof. exact (@lem4911218 term18 term18). Qed.
Lemma lem4911220 : (term217 = (BIT1 0)) = (term218 = term18).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem4911221 : term218 = term18.
Proof. exact (EQ_MP (@lem4911220) (@lem940073)). Qed.
Lemma lem4911222 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem4911223 : term216 = term150.
Proof. exact (MK_COMB (@lem4911222) (@lem4911221)). Qed.
Lemma lem4911224 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem4911225 : term237 = term206.
Proof. exact (MK_COMB (@lem4911224) (@lem4911223)). Qed.
Lemma lem4911226 : term232 = term206.
Proof. exact (TRANS (@lem4911219) (@lem4911225)). Qed.
Lemma lem4911227 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem4911228 : term514 = term506.
Proof. exact (MK_COMB (@lem4911227) (@lem4911226)). Qed.
Lemma lem4911229 : term515 = term508.
Proof. exact (MK_COMB (@lem4911228) (@lem4911216)). Qed.
Lemma lem4911231 (m : nat) : (term516 m) = term140.
Proof. exact (proj1 (@lem1367303 m)). Qed.
Lemma lem4911232 : term508 = term140.
Proof. exact (@lem4911231 term18). Qed.
Lemma lem4911233 : term515 = term140.
Proof. exact (TRANS (@lem4911229) (@lem4911232)). Qed.
Lemma lem4911234 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem4911235 : term517 = term268.
Proof. exact (MK_COMB (@lem4911234) (@lem4911233)). Qed.
Lemma lem4911236 : term150 = term150.
Proof. exact (eq_refl term150). Qed.
Lemma lem4911237 : term518 = term270.
Proof. exact (MK_COMB (@lem4911235) (@lem4911236)). Qed.
Lemma lem4911239 (x : nat) : (term271 x) = term140.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem4911240 : term270 = term140.
Proof. exact (@lem4911239 term18). Qed.
Lemma lem4911241 : term518 = term140.
Proof. exact (TRANS (@lem4911237) (@lem4911240)). Qed.
Lemma lem4911243 (m : nat) (n : nat) : (term213 m n) = (term214 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem4911244 : term215 = term216.
Proof. exact (@lem4911243 term18 term18). Qed.
Lemma lem4911245 : (term217 = (BIT1 0)) = (term218 = term18).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem4911246 : term218 = term18.
Proof. exact (EQ_MP (@lem4911245) (@lem940073)). Qed.
Lemma lem4911247 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem4911248 : term216 = term150.
Proof. exact (MK_COMB (@lem4911247) (@lem4911246)). Qed.
Lemma lem4911249 : term215 = term150.
Proof. exact (TRANS (@lem4911244) (@lem4911248)). Qed.
Lemma lem4911250 : term268 = term268.
Proof. exact (eq_refl term268). Qed.
Lemma lem4911251 : term272 = term270.
Proof. exact (MK_COMB (@lem4911250) (@lem4911249)). Qed.
Lemma lem4911253 (x : nat) : (term271 x) = term140.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem4911254 : term270 = term140.
Proof. exact (@lem4911253 term18). Qed.
Lemma lem4911255 : term272 = term140.
Proof. exact (TRANS (@lem4911251) (@lem4911254)). Qed.
Lemma lem4911256 : term140 = term272.
Proof. exact (SYM (@lem4911255)). Qed.
Lemma lem4911257 : term518 = term272.
Proof. exact (TRANS (@lem4911241) (@lem4911256)). Qed.
Lemma lem4911258 : term509 = term203.
Proof. exact (@lem4911208 (@lem4911257)). Qed.
Lemma lem4911259 : term508 = term203.
Proof. exact (TRANS (@lem4911174) (@lem4911258)). Qed.
Lemma lem4911261 (x : real) : (term222 x) = x.
Proof. exact (EQ_MP (@lem1981475 x) (@lem1981474 x)). Qed.
Lemma lem4911262 : term203 = term140.
Proof. exact (@lem4911261 term140). Qed.
Lemma lem4911263 : term508 = term140.
Proof. exact (TRANS (@lem4911259) (@lem4911262)). Qed.
Lemma lem4911264 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem4911265 : term519 = term268.
Proof. exact (MK_COMB (@lem4911264) (@lem4911263)). Qed.
Lemma lem4911266 (_61039 : int) : (real_of_int _61039) = (real_of_int _61039).
Proof. exact (eq_refl (real_of_int _61039)). Qed.
Lemma lem4911267 (_61039 : int) : (term505 _61039) = (term520 _61039).
Proof. exact (MK_COMB (@lem4911265) (@lem4911266 _61039)). Qed.
Lemma lem4911268 (_61039 : int) : (term524 _61039) = (term520 _61039).
Proof. exact (TRANS (@lem4911165 _61039) (@lem4911267 _61039)). Qed.
Lemma lem4911269 (_61039 : int) : (term520 _61039) = term140.
Proof. exact (@lem1982719 (real_of_int _61039)). Qed.
Lemma lem4911270 (_61039 : int) : (term524 _61039) = term140.
Proof. exact (TRANS (@lem4911268 _61039) (@lem4911269 _61039)). Qed.
Lemma lem4911271 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem4911272 (_61039 : int) : (term525 _61039) = term182.
Proof. exact (MK_COMB (@lem4911271) (@lem4911270 _61039)). Qed.
Lemma lem4911273 : term206 = term206.
Proof. exact (eq_refl term206). Qed.
Lemma lem4911274 (_61039 : int) : (term523 _61039) = term526.
Proof. exact (MK_COMB (@lem4911272 _61039) (@lem4911273)). Qed.
Lemma lem4911275 (_61039 : int) : (term619 _61039) = term526.
Proof. exact (TRANS (@lem4911164 _61039) (@lem4911274 _61039)). Qed.
Lemma lem4911276 : term526 = term206.
Proof. exact (@lem1982721 term206). Qed.
Lemma lem4911277 (_61039 : int) : (term619 _61039) = term206.
Proof. exact (TRANS (@lem4911275 _61039) (@lem4911276)). Qed.
Lemma lem4911278 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem4911279 (_61039 : int) : (term620 _61039) = term528.
Proof. exact (MK_COMB (@lem4911278) (@lem4911277 _61039)). Qed.
Lemma lem4911280 : term140 = term140.
Proof. exact (eq_refl term140). Qed.
Lemma lem4911281 (_61039 : int) : (term618 _61039) = term529.
Proof. exact (MK_COMB (@lem4911279 _61039) (@lem4911280)). Qed.
Lemma lem4911282 (_61039 : int) (_61040 : int) (h1 : term608 _61039 _61040) : term529.
Proof. exact (EQ_MP (@lem4911281 _61039) (@lem4911163 _61039 _61040 h1)). Qed.
Lemma lem4911284 (y : real) (x : real) : (real_ge x y) = (real_le y x).
Proof. exact (EQ_MP (@lem1980260 y x) (@lem1980259 y x)). Qed.
Lemma lem4911285 : term529 = term530.
Proof. exact (@lem4911284 term140 term206). Qed.
Lemma lem4911287 (x : nat) : (term204 x) = (term205 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem4911288 : term206 = term207.
Proof. exact (@lem4911287 term18). Qed.
Lemma lem4911290 (x : nat) : (real_of_num x) = (term202 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem4911291 : term140 = term203.
Proof. exact (@lem4911290 (NUMERAL 0)). Qed.
Lemma lem4911292 : real_le = real_le.
Proof. exact (eq_refl real_le). Qed.
Lemma lem4911293 : term142 = term531.
Proof. exact (MK_COMB (@lem4911292) (@lem4911291)). Qed.
Lemma lem4911294 : term530 = term532.
Proof. exact (MK_COMB (@lem4911293) (@lem4911288)). Qed.
Lemma lem4911295 : term533.
Proof. exact (@lem1980026 term140 term150 term206 term150). Qed.
Lemma lem4911297 (m : nat) (n : nat) : (term257 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem4911298 : term258 = term259.
Proof. exact (@lem4911297 (NUMERAL 0) term18). Qed.
Lemma lem4911299 : term260 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem4911300 (h1 : term260 = (BIT1 0)) : term259 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem4911301 : (term260 = (BIT1 0)) = (term259 = True).
Proof. exact (prop_ext (fun h1 : term260 = (BIT1 0) => @lem4911300 h1) (fun h1 : term259 = True => @lem4911299)). Qed.
Lemma lem4911302 : term259 = True.
Proof. exact (EQ_MP (@lem4911301) (@lem4911299)). Qed.
Lemma lem4911303 : term258 = True.
Proof. exact (TRANS (@lem4911298) (@lem4911302)). Qed.
Lemma lem4911304 : True = term258.
Proof. exact (SYM (@lem4911303)). Qed.
Lemma lem4911305 : term258.
Proof. exact (EQ_MP (@lem4911304) (@lem0)). Qed.
Lemma lem4911306 : term534.
Proof. exact (@lem4911295 (@lem4911305)). Qed.
Lemma lem4911308 (m : nat) (n : nat) : (term257 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem4911309 : term258 = term259.
Proof. exact (@lem4911308 (NUMERAL 0) term18). Qed.
Lemma lem4911310 : term260 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem4911311 (h1 : term260 = (BIT1 0)) : term259 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem4911312 : (term260 = (BIT1 0)) = (term259 = True).
Proof. exact (prop_ext (fun h1 : term260 = (BIT1 0) => @lem4911311 h1) (fun h1 : term259 = True => @lem4911310)). Qed.
Lemma lem4911313 : term259 = True.
Proof. exact (EQ_MP (@lem4911312) (@lem4911310)). Qed.
Lemma lem4911314 : term258 = True.
Proof. exact (TRANS (@lem4911309) (@lem4911313)). Qed.
Lemma lem4911315 : True = term258.
Proof. exact (SYM (@lem4911314)). Qed.
Lemma lem4911316 : term258.
Proof. exact (EQ_MP (@lem4911315) (@lem0)). Qed.
Lemma lem4911317 : term532 = term535.
Proof. exact (@lem4911306 (@lem4911316)). Qed.
Lemma lem4911319 (m : nat) (n : nat) : (term235 m n) = (term236 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem4911320 : term232 = term237.
Proof. exact (@lem4911319 term18 term18). Qed.
Lemma lem4911321 : (term217 = (BIT1 0)) = (term218 = term18).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem4911322 : term218 = term18.
Proof. exact (EQ_MP (@lem4911321) (@lem940073)). Qed.
Lemma lem4911323 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem4911324 : term216 = term150.
Proof. exact (MK_COMB (@lem4911323) (@lem4911322)). Qed.
Lemma lem4911325 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem4911326 : term237 = term206.
Proof. exact (MK_COMB (@lem4911325) (@lem4911324)). Qed.
Lemma lem4911327 : term232 = term206.
Proof. exact (TRANS (@lem4911320) (@lem4911326)). Qed.
Lemma lem4911329 (x : nat) : (term271 x) = term140.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem4911330 : term270 = term140.
Proof. exact (@lem4911329 term18). Qed.
Lemma lem4911331 : real_le = real_le.
Proof. exact (eq_refl real_le). Qed.
Lemma lem4911332 : term536 = term142.
Proof. exact (MK_COMB (@lem4911331) (@lem4911330)). Qed.
Lemma lem4911333 : term535 = term530.
Proof. exact (MK_COMB (@lem4911332) (@lem4911327)). Qed.
Lemma lem4911335 (m : nat) (n : nat) : (term537 m n) = (term538 m n).
Proof. exact (proj2 (@lem1365406 m n)). Qed.
Lemma lem4911336 : term530 = term539.
Proof. exact (@lem4911335 (NUMERAL 0) term18). Qed.
Lemma lem4911337 : term260 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem4911338 (h1 : term260 = (BIT1 0)) : (term18 = (NUMERAL 0)) = False.
Proof. exact (@lem1013352 0 0 (BIT1 0) h1). Qed.
Lemma lem4911339 : (term260 = (BIT1 0)) = ((term18 = (NUMERAL 0)) = False).
Proof. exact (prop_ext (fun h1 : term260 = (BIT1 0) => @lem4911338 h1) (fun h1 : (term18 = (NUMERAL 0)) = False => @lem4911337)). Qed.
Lemma lem4911340 : (term18 = (NUMERAL 0)) = False.
Proof. exact (EQ_MP (@lem4911339) (@lem4911337)). Qed.
Lemma lem4911341 : ((NUMERAL 0) = (NUMERAL 0)) = True.
Proof. exact (@lem1013364 0). Qed.
Lemma lem4911342 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4911343 : term540 = (and True).
Proof. exact (MK_COMB (@lem4911342) (@lem4911341)). Qed.
Lemma lem4911344 : term539 = (True /\ False).
Proof. exact (MK_COMB (@lem4911343) (@lem4911340)). Qed.
Lemma lem4911346 : (True /\ False) = False.
Proof. exact (proj1 (@lem1365106)). Qed.
Lemma lem4911347 : term539 = False.
Proof. exact (TRANS (@lem4911344) (@lem4911346)). Qed.
Lemma lem4911348 : term530 = False.
Proof. exact (TRANS (@lem4911336) (@lem4911347)). Qed.
Lemma lem4911349 : term535 = False.
Proof. exact (TRANS (@lem4911333) (@lem4911348)). Qed.
Lemma lem4911350 : term532 = False.
Proof. exact (TRANS (@lem4911317) (@lem4911349)). Qed.
Lemma lem4911351 : term530 = False.
Proof. exact (TRANS (@lem4911294) (@lem4911350)). Qed.
Lemma lem4911352 : term529 = False.
Proof. exact (TRANS (@lem4911285) (@lem4911351)). Qed.
Lemma lem4911353 (_61039 : int) (_61040 : int) (h1 : term608 _61039 _61040) : False.
Proof. exact (EQ_MP (@lem4911352) (@lem4911282 _61039 _61040 h1)). Qed.
Lemma lem4911354 (_61039 : int) (_61040 : int) (h1 : term464 _61039 _61040) : False.
Proof. exact (or_elim (@lem4910339 _61039 _61040 h1) (fun h0 : term583 _61039 _61040 => @lem4910845 _61039 _61040 h0) (fun h0 : term608 _61039 _61040 => @lem4911353 _61039 _61040 h0)). Qed.
Lemma lem4911355 (_61039 : int) (_61040 : int) (h1 : term473 _61039 _61040) : False.
Proof. exact (or_elim (@lem4909156 _61039 _61040 h1) (fun h0 : term468 _61039 _61040 => @lem4910338 _61039 _61040 h0) (fun h0 : term464 _61039 _61040 => @lem4911354 _61039 _61040 h0)). Qed.
Lemma lem4911356 (_61039 : int) (_61040 : int) (h1 : term460 _61039 _61040) : term460 _61039 _61040.
Proof. exact (h1). Qed.
Lemma lem4911357 (_61039 : int) (_61040 : int) (h1 : term457 _61039 _61040) : term457 _61039 _61040.
Proof. exact (h1). Qed.
Lemma lem4911358 (_61039 : int) (_61040 : int) (h1 : term452 _61039 _61040) : term452 _61039 _61040.
Proof. exact (h1). Qed.
Lemma lem4911359 (_61039 : int) (_61040 : int) (h1 : term621 _61039 _61040) : term621 _61039 _61040.
Proof. exact (h1). Qed.
Lemma lem4911360 (_61039 : int) (_61040 : int) (h1 : term621 _61039 _61040) : term453 _61039 _61040.
Proof. exact (proj2 (@lem4911359 _61039 _61040 h1)). Qed.
Lemma lem4911362 (_61039 : int) (_61040 : int) (h1 : term621 _61039 _61040) : term404 _61039 _61040.
Proof. exact (proj2 (@lem4911360 _61039 _61040 h1)). Qed.
Lemma lem4911364 (_61039 : int) (_61040 : int) (h1 : term621 _61039 _61040) : term353 _61039 _61040.
Proof. exact (proj2 (@lem4911362 _61039 _61040 h1)). Qed.
Lemma lem4911365 (_61039 : int) (_61040 : int) (h1 : term621 _61039 _61040) : (term243 _61039 _61040) = term140.
Proof. exact (proj1 (@lem4911362 _61039 _61040 h1)). Qed.
Lemma lem4911367 (_61039 : int) (_61040 : int) (h1 : term621 _61039 _61040) : term287 _61039 _61040.
Proof. exact (proj1 (@lem4911364 _61039 _61040 h1)). Qed.
Lemma lem4911369 (y : real) (x : real) : (real_gt x y) = (real_lt y x).
Proof. exact (EQ_MP (@lem1980266 y x) (@lem1980265 y x)). Qed.
Lemma lem4911370 : term478 = term258.
Proof. exact (@lem4911369 term140 term150). Qed.
Lemma lem4911372 (x : nat) : (real_of_num x) = (term202 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem4911373 : term150 = term231.
Proof. exact (@lem4911372 term18). Qed.
Lemma lem4911375 (x : nat) : (real_of_num x) = (term202 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem4911376 : term140 = term203.
Proof. exact (@lem4911375 (NUMERAL 0)). Qed.
Lemma lem4911377 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem4911378 : term479 = term480.
Proof. exact (MK_COMB (@lem4911377) (@lem4911376)). Qed.
Lemma lem4911379 : term258 = term481.
Proof. exact (MK_COMB (@lem4911378) (@lem4911373)). Qed.
Lemma lem4911380 : term482.
Proof. exact (@lem1980255 term140 term150 term150 term150). Qed.
Lemma lem4911382 (m : nat) (n : nat) : (term257 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem4911383 : term258 = term259.
Proof. exact (@lem4911382 (NUMERAL 0) term18). Qed.
Lemma lem4911384 : term260 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem4911385 (h1 : term260 = (BIT1 0)) : term259 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem4911386 : (term260 = (BIT1 0)) = (term259 = True).
Proof. exact (prop_ext (fun h1 : term260 = (BIT1 0) => @lem4911385 h1) (fun h1 : term259 = True => @lem4911384)). Qed.
Lemma lem4911387 : term259 = True.
Proof. exact (EQ_MP (@lem4911386) (@lem4911384)). Qed.
Lemma lem4911388 : term258 = True.
Proof. exact (TRANS (@lem4911383) (@lem4911387)). Qed.
Lemma lem4911389 : True = term258.
Proof. exact (SYM (@lem4911388)). Qed.
Lemma lem4911390 : term258.
Proof. exact (EQ_MP (@lem4911389) (@lem0)). Qed.
Lemma lem4911391 : term483.
Proof. exact (@lem4911380 (@lem4911390)). Qed.
Lemma lem4911393 (m : nat) (n : nat) : (term257 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem4911394 : term258 = term259.
Proof. exact (@lem4911393 (NUMERAL 0) term18). Qed.
Lemma lem4911395 : term260 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem4911396 (h1 : term260 = (BIT1 0)) : term259 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem4911397 : (term260 = (BIT1 0)) = (term259 = True).
Proof. exact (prop_ext (fun h1 : term260 = (BIT1 0) => @lem4911396 h1) (fun h1 : term259 = True => @lem4911395)). Qed.
Lemma lem4911398 : term259 = True.
Proof. exact (EQ_MP (@lem4911397) (@lem4911395)). Qed.
Lemma lem4911399 : term258 = True.
Proof. exact (TRANS (@lem4911394) (@lem4911398)). Qed.
Lemma lem4911400 : True = term258.
Proof. exact (SYM (@lem4911399)). Qed.
Lemma lem4911401 : term258.
Proof. exact (EQ_MP (@lem4911400) (@lem0)). Qed.
Lemma lem4911402 : term481 = term484.
Proof. exact (@lem4911391 (@lem4911401)). Qed.
Lemma lem4911404 (m : nat) (n : nat) : (term213 m n) = (term214 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem4911405 : term215 = term216.
Proof. exact (@lem4911404 term18 term18). Qed.
Lemma lem4911406 : (term217 = (BIT1 0)) = (term218 = term18).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem4911407 : term218 = term18.
Proof. exact (EQ_MP (@lem4911406) (@lem940073)). Qed.
Lemma lem4911408 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem4911409 : term216 = term150.
Proof. exact (MK_COMB (@lem4911408) (@lem4911407)). Qed.
Lemma lem4911410 : term215 = term150.
Proof. exact (TRANS (@lem4911405) (@lem4911409)). Qed.
Lemma lem4911412 (x : nat) : (term271 x) = term140.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem4911413 : term270 = term140.
Proof. exact (@lem4911412 term18). Qed.
Lemma lem4911414 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem4911415 : term485 = term479.
Proof. exact (MK_COMB (@lem4911414) (@lem4911413)). Qed.
Lemma lem4911416 : term484 = term258.
Proof. exact (MK_COMB (@lem4911415) (@lem4911410)). Qed.
Lemma lem4911418 (m : nat) (n : nat) : (term257 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem4911419 : term258 = term259.
Proof. exact (@lem4911418 (NUMERAL 0) term18). Qed.
Lemma lem4911420 : term260 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem4911421 (h1 : term260 = (BIT1 0)) : term259 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem4911422 : (term260 = (BIT1 0)) = (term259 = True).
Proof. exact (prop_ext (fun h1 : term260 = (BIT1 0) => @lem4911421 h1) (fun h1 : term259 = True => @lem4911420)). Qed.
Lemma lem4911423 : term259 = True.
Proof. exact (EQ_MP (@lem4911422) (@lem4911420)). Qed.
Lemma lem4911424 : term258 = True.
Proof. exact (TRANS (@lem4911419) (@lem4911423)). Qed.
Lemma lem4911425 : term484 = True.
Proof. exact (TRANS (@lem4911416) (@lem4911424)). Qed.
Lemma lem4911426 : term481 = True.
Proof. exact (TRANS (@lem4911402) (@lem4911425)). Qed.
Lemma lem4911427 : term258 = True.
Proof. exact (TRANS (@lem4911379) (@lem4911426)). Qed.
Lemma lem4911428 : term478 = True.
Proof. exact (TRANS (@lem4911370) (@lem4911427)). Qed.
Lemma lem4911429 : True = term478.
Proof. exact (SYM (@lem4911428)). Qed.
Lemma lem4911430 : term478.
Proof. exact (EQ_MP (@lem4911429) (@lem0)). Qed.
Lemma lem4911431 (_61039 : int) (_61040 : int) (h1 : term621 _61039 _61040) : term486 _61039 _61040.
Proof. exact (conj (@lem4911430) (@lem4911367 _61039 _61040 h1)). Qed.
Lemma lem4911433 (x : real) (y : real) : term487 x y.
Proof. exact (proj1 (@lem1988332 x y)). Qed.
Lemma lem4911434 (_61039 : int) (_61040 : int) : term488 _61039 _61040.
Proof. exact (@lem4911433 term150 (term284 _61039 _61040)). Qed.
Lemma lem4911435 (_61039 : int) (_61040 : int) (h1 : term621 _61039 _61040) : term489 _61039 _61040.
Proof. exact (@lem4911434 _61039 _61040 (@lem4911431 _61039 _61040 h1)). Qed.
Lemma lem4911436 (_61039 : int) (_61040 : int) : (term490 _61039 _61040) = (term284 _61039 _61040).
Proof. exact (@lem1982733 (term284 _61039 _61040)). Qed.
Lemma lem4911437 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem4911438 (_61039 : int) (_61040 : int) : (term491 _61039 _61040) = (term286 _61039 _61040).
Proof. exact (MK_COMB (@lem4911437) (@lem4911436 _61039 _61040)). Qed.
Lemma lem4911439 : term140 = term140.
Proof. exact (eq_refl term140). Qed.
Lemma lem4911440 (_61039 : int) (_61040 : int) : (term489 _61039 _61040) = (term287 _61039 _61040).
Proof. exact (MK_COMB (@lem4911438 _61039 _61040) (@lem4911439)). Qed.
Lemma lem4911441 (_61039 : int) (_61040 : int) (h1 : term621 _61039 _61040) : term287 _61039 _61040.
Proof. exact (EQ_MP (@lem4911440 _61039 _61040) (@lem4911435 _61039 _61040 h1)). Qed.
Lemma lem4911443 (y : real) : term492 y.
Proof. exact (EQ_MP (@lem1396750 y) (@lem0)). Qed.
Lemma lem4911444 (_61039 : int) (_61040 : int) : term493 _61039 _61040.
Proof. exact (@lem4911443 (term243 _61039 _61040)). Qed.
Lemma lem4911445 (_61039 : int) (_61040 : int) (h1 : term621 _61039 _61040) : term494 _61039 _61040.
Proof. exact (@lem4911444 _61039 _61040 (@lem4911365 _61039 _61040 h1)). Qed.
Lemma lem4911446 (_61039 : int) (_61040 : int) (h1 : term621 _61039 _61040) : term495 _61039 _61040.
Proof. exact (@lem4911445 _61039 _61040 h1 term150). Qed.
Lemma lem4911447 (_61039 : int) (_61040 : int) : (term495 _61039 _61040) = ((term496 _61039 _61040) = term140).
Proof. exact (eq_refl (term495 _61039 _61040)). Qed.
Lemma lem4911448 (_61039 : int) (_61040 : int) (h1 : term621 _61039 _61040) : (term496 _61039 _61040) = term140.
Proof. exact (EQ_MP (@lem4911447 _61039 _61040) (@lem4911446 _61039 _61040 h1)). Qed.
Lemma lem4911449 (_61039 : int) (_61040 : int) : (term496 _61039 _61040) = (term243 _61039 _61040).
Proof. exact (@lem1982733 (term243 _61039 _61040)). Qed.
Lemma lem4911450 : (@eq real) = (@eq real).
Proof. exact (eq_refl (@eq real)). Qed.
Lemma lem4911451 (_61039 : int) (_61040 : int) : (term497 _61039 _61040) = (term246 _61039 _61040).
Proof. exact (MK_COMB (@lem4911450) (@lem4911449 _61039 _61040)). Qed.
Lemma lem4911452 : term140 = term140.
Proof. exact (eq_refl term140). Qed.
Lemma lem4911453 (_61039 : int) (_61040 : int) : ((term496 _61039 _61040) = term140) = ((term243 _61039 _61040) = term140).
Proof. exact (MK_COMB (@lem4911451 _61039 _61040) (@lem4911452)). Qed.
Lemma lem4911454 (_61039 : int) (_61040 : int) (h1 : term621 _61039 _61040) : (term243 _61039 _61040) = term140.
Proof. exact (EQ_MP (@lem4911453 _61039 _61040) (@lem4911448 _61039 _61040 h1)). Qed.
Lemma lem4911455 (_61039 : int) (_61040 : int) (h1 : term621 _61039 _61040) : term498 _61039 _61040.
Proof. exact (conj (@lem4911454 _61039 _61040 h1) (@lem4911441 _61039 _61040 h1)). Qed.
Lemma lem4911457 (x : real) (y : real) : term499 x y.
Proof. exact (proj1 (@lem1988336 x y)). Qed.
Lemma lem4911458 (_61039 : int) (_61040 : int) : term500 _61039 _61040.
Proof. exact (@lem4911457 (term243 _61039 _61040) (term284 _61039 _61040)). Qed.
Lemma lem4911459 (_61039 : int) (_61040 : int) (h1 : term621 _61039 _61040) : term501 _61039 _61040.
Proof. exact (@lem4911458 _61039 _61040 (@lem4911455 _61039 _61040 h1)). Qed.
Lemma lem4911460 (_61039 : int) (_61040 : int) : (term502 _61039 _61040) = (term503 _61039 _61040).
Proof. exact (@lem1982753 (term244 _61039) (real_of_int _61039) (term306 _61040) (term244 _61040)). Qed.
Lemma lem4911461 (_61039 : int) : (term504 _61039) = (term505 _61039).
Proof. exact (@lem1982713 term206 (real_of_int _61039)). Qed.
Lemma lem4911463 (x : nat) : (real_of_num x) = (term202 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem4911464 : term150 = term231.
Proof. exact (@lem4911463 term18). Qed.
Lemma lem4911466 (x : nat) : (term204 x) = (term205 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem4911467 : term206 = term207.
Proof. exact (@lem4911466 term18). Qed.
Lemma lem4911468 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem4911469 : term506 = term507.
Proof. exact (MK_COMB (@lem4911468) (@lem4911467)). Qed.
Lemma lem4911470 : term508 = term509.
Proof. exact (MK_COMB (@lem4911469) (@lem4911464)). Qed.
Lemma lem4911471 : term510.
Proof. exact (@lem1981473 term206 term150 term150 term150 term140 term150). Qed.
Lemma lem4911473 (m : nat) (n : nat) : (term257 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem4911474 : term258 = term259.
Proof. exact (@lem4911473 (NUMERAL 0) term18). Qed.
Lemma lem4911475 : term260 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem4911476 (h1 : term260 = (BIT1 0)) : term259 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem4911477 : (term260 = (BIT1 0)) = (term259 = True).
Proof. exact (prop_ext (fun h1 : term260 = (BIT1 0) => @lem4911476 h1) (fun h1 : term259 = True => @lem4911475)). Qed.
Lemma lem4911478 : term259 = True.
Proof. exact (EQ_MP (@lem4911477) (@lem4911475)). Qed.
Lemma lem4911479 : term258 = True.
Proof. exact (TRANS (@lem4911474) (@lem4911478)). Qed.
Lemma lem4911480 : True = term258.
Proof. exact (SYM (@lem4911479)). Qed.
Lemma lem4911481 : term258.
Proof. exact (EQ_MP (@lem4911480) (@lem0)). Qed.
Lemma lem4911482 : term511.
Proof. exact (@lem4911471 (@lem4911481)). Qed.
Lemma lem4911484 (m : nat) (n : nat) : (term257 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem4911485 : term258 = term259.
Proof. exact (@lem4911484 (NUMERAL 0) term18). Qed.
Lemma lem4911486 : term260 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem4911487 (h1 : term260 = (BIT1 0)) : term259 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem4911488 : (term260 = (BIT1 0)) = (term259 = True).
Proof. exact (prop_ext (fun h1 : term260 = (BIT1 0) => @lem4911487 h1) (fun h1 : term259 = True => @lem4911486)). Qed.
Lemma lem4911489 : term259 = True.
Proof. exact (EQ_MP (@lem4911488) (@lem4911486)). Qed.
Lemma lem4911490 : term258 = True.
Proof. exact (TRANS (@lem4911485) (@lem4911489)). Qed.
Lemma lem4911491 : True = term258.
Proof. exact (SYM (@lem4911490)). Qed.
Lemma lem4911492 : term258.
Proof. exact (EQ_MP (@lem4911491) (@lem0)). Qed.
Lemma lem4911493 : term512.
Proof. exact (@lem4911482 (@lem4911492)). Qed.
Lemma lem4911495 (m : nat) (n : nat) : (term257 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem4911496 : term258 = term259.
Proof. exact (@lem4911495 (NUMERAL 0) term18). Qed.
Lemma lem4911497 : term260 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem4911498 (h1 : term260 = (BIT1 0)) : term259 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem4911499 : (term260 = (BIT1 0)) = (term259 = True).
Proof. exact (prop_ext (fun h1 : term260 = (BIT1 0) => @lem4911498 h1) (fun h1 : term259 = True => @lem4911497)). Qed.
Lemma lem4911500 : term259 = True.
Proof. exact (EQ_MP (@lem4911499) (@lem4911497)). Qed.
Lemma lem4911501 : term258 = True.
Proof. exact (TRANS (@lem4911496) (@lem4911500)). Qed.
Lemma lem4911502 : True = term258.
Proof. exact (SYM (@lem4911501)). Qed.
Lemma lem4911503 : term258.
Proof. exact (EQ_MP (@lem4911502) (@lem0)). Qed.
Lemma lem4911504 : term513.
Proof. exact (@lem4911493 (@lem4911503)). Qed.
Lemma lem4911506 (m : nat) (n : nat) : (term213 m n) = (term214 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem4911507 : term215 = term216.
Proof. exact (@lem4911506 term18 term18). Qed.
Lemma lem4911508 : (term217 = (BIT1 0)) = (term218 = term18).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem4911509 : term218 = term18.
Proof. exact (EQ_MP (@lem4911508) (@lem940073)). Qed.
Lemma lem4911510 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem4911511 : term216 = term150.
Proof. exact (MK_COMB (@lem4911510) (@lem4911509)). Qed.
Lemma lem4911512 : term215 = term150.
Proof. exact (TRANS (@lem4911507) (@lem4911511)). Qed.
Lemma lem4911514 (m : nat) (n : nat) : (term235 m n) = (term236 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem4911515 : term232 = term237.
Proof. exact (@lem4911514 term18 term18). Qed.
Lemma lem4911516 : (term217 = (BIT1 0)) = (term218 = term18).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem4911517 : term218 = term18.
Proof. exact (EQ_MP (@lem4911516) (@lem940073)). Qed.
Lemma lem4911518 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem4911519 : term216 = term150.
Proof. exact (MK_COMB (@lem4911518) (@lem4911517)). Qed.
Lemma lem4911520 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem4911521 : term237 = term206.
Proof. exact (MK_COMB (@lem4911520) (@lem4911519)). Qed.
Lemma lem4911522 : term232 = term206.
Proof. exact (TRANS (@lem4911515) (@lem4911521)). Qed.
Lemma lem4911523 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem4911524 : term514 = term506.
Proof. exact (MK_COMB (@lem4911523) (@lem4911522)). Qed.
Lemma lem4911525 : term515 = term508.
Proof. exact (MK_COMB (@lem4911524) (@lem4911512)). Qed.
Lemma lem4911527 (m : nat) : (term516 m) = term140.
Proof. exact (proj1 (@lem1367303 m)). Qed.
Lemma lem4911528 : term508 = term140.
Proof. exact (@lem4911527 term18). Qed.
Lemma lem4911529 : term515 = term140.
Proof. exact (TRANS (@lem4911525) (@lem4911528)). Qed.
Lemma lem4911530 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem4911531 : term517 = term268.
Proof. exact (MK_COMB (@lem4911530) (@lem4911529)). Qed.
Lemma lem4911532 : term150 = term150.
Proof. exact (eq_refl term150). Qed.
Lemma lem4911533 : term518 = term270.
Proof. exact (MK_COMB (@lem4911531) (@lem4911532)). Qed.
Lemma lem4911535 (x : nat) : (term271 x) = term140.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem4911536 : term270 = term140.
Proof. exact (@lem4911535 term18). Qed.
Lemma lem4911537 : term518 = term140.
Proof. exact (TRANS (@lem4911533) (@lem4911536)). Qed.
Lemma lem4911539 (m : nat) (n : nat) : (term213 m n) = (term214 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem4911540 : term215 = term216.
Proof. exact (@lem4911539 term18 term18). Qed.
Lemma lem4911541 : (term217 = (BIT1 0)) = (term218 = term18).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem4911542 : term218 = term18.
Proof. exact (EQ_MP (@lem4911541) (@lem940073)). Qed.
Lemma lem4911543 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem4911544 : term216 = term150.
Proof. exact (MK_COMB (@lem4911543) (@lem4911542)). Qed.
Lemma lem4911545 : term215 = term150.
Proof. exact (TRANS (@lem4911540) (@lem4911544)). Qed.
Lemma lem4911546 : term268 = term268.
Proof. exact (eq_refl term268). Qed.
Lemma lem4911547 : term272 = term270.
Proof. exact (MK_COMB (@lem4911546) (@lem4911545)). Qed.
Lemma lem4911549 (x : nat) : (term271 x) = term140.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem4911550 : term270 = term140.
Proof. exact (@lem4911549 term18). Qed.
Lemma lem4911551 : term272 = term140.
Proof. exact (TRANS (@lem4911547) (@lem4911550)). Qed.
Lemma lem4911552 : term140 = term272.
Proof. exact (SYM (@lem4911551)). Qed.
Lemma lem4911553 : term518 = term272.
Proof. exact (TRANS (@lem4911537) (@lem4911552)). Qed.
Lemma lem4911554 : term509 = term203.
Proof. exact (@lem4911504 (@lem4911553)). Qed.
Lemma lem4911555 : term508 = term203.
Proof. exact (TRANS (@lem4911470) (@lem4911554)). Qed.
Lemma lem4911557 (x : real) : (term222 x) = x.
Proof. exact (EQ_MP (@lem1981475 x) (@lem1981474 x)). Qed.
Lemma lem4911558 : term203 = term140.
Proof. exact (@lem4911557 term140). Qed.
Lemma lem4911559 : term508 = term140.
Proof. exact (TRANS (@lem4911555) (@lem4911558)). Qed.
Lemma lem4911560 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem4911561 : term519 = term268.
Proof. exact (MK_COMB (@lem4911560) (@lem4911559)). Qed.
Lemma lem4911562 (_61039 : int) : (real_of_int _61039) = (real_of_int _61039).
Proof. exact (eq_refl (real_of_int _61039)). Qed.
Lemma lem4911563 (_61039 : int) : (term505 _61039) = (term520 _61039).
Proof. exact (MK_COMB (@lem4911561) (@lem4911562 _61039)). Qed.
Lemma lem4911564 (_61039 : int) : (term504 _61039) = (term520 _61039).
Proof. exact (TRANS (@lem4911461 _61039) (@lem4911563 _61039)). Qed.
Lemma lem4911565 (_61039 : int) : (term520 _61039) = term140.
Proof. exact (@lem1982719 (real_of_int _61039)). Qed.
Lemma lem4911566 (_61039 : int) : (term504 _61039) = term140.
Proof. exact (TRANS (@lem4911564 _61039) (@lem4911565 _61039)). Qed.
Lemma lem4911567 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem4911568 (_61039 : int) : (term521 _61039) = term182.
Proof. exact (MK_COMB (@lem4911567) (@lem4911566 _61039)). Qed.
Lemma lem4911569 (_61040 : int) : (term522 _61040) = (term523 _61040).
Proof. exact (@lem1982759 (real_of_int _61040) (term244 _61040) term206). Qed.
Lemma lem4911570 (_61040 : int) : (term524 _61040) = (term505 _61040).
Proof. exact (@lem1982715 term206 (real_of_int _61040)). Qed.
Lemma lem4911572 (x : nat) : (real_of_num x) = (term202 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem4911573 : term150 = term231.
Proof. exact (@lem4911572 term18). Qed.
Lemma lem4911575 (x : nat) : (term204 x) = (term205 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem4911576 : term206 = term207.
Proof. exact (@lem4911575 term18). Qed.
Lemma lem4911577 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem4911578 : term506 = term507.
Proof. exact (MK_COMB (@lem4911577) (@lem4911576)). Qed.
Lemma lem4911579 : term508 = term509.
Proof. exact (MK_COMB (@lem4911578) (@lem4911573)). Qed.
Lemma lem4911580 : term510.
Proof. exact (@lem1981473 term206 term150 term150 term150 term140 term150). Qed.
Lemma lem4911582 (m : nat) (n : nat) : (term257 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem4911583 : term258 = term259.
Proof. exact (@lem4911582 (NUMERAL 0) term18). Qed.
Lemma lem4911584 : term260 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem4911585 (h1 : term260 = (BIT1 0)) : term259 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem4911586 : (term260 = (BIT1 0)) = (term259 = True).
Proof. exact (prop_ext (fun h1 : term260 = (BIT1 0) => @lem4911585 h1) (fun h1 : term259 = True => @lem4911584)). Qed.
Lemma lem4911587 : term259 = True.
Proof. exact (EQ_MP (@lem4911586) (@lem4911584)). Qed.
Lemma lem4911588 : term258 = True.
Proof. exact (TRANS (@lem4911583) (@lem4911587)). Qed.
Lemma lem4911589 : True = term258.
Proof. exact (SYM (@lem4911588)). Qed.
Lemma lem4911590 : term258.
Proof. exact (EQ_MP (@lem4911589) (@lem0)). Qed.
Lemma lem4911591 : term511.
Proof. exact (@lem4911580 (@lem4911590)). Qed.
Lemma lem4911593 (m : nat) (n : nat) : (term257 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem4911594 : term258 = term259.
Proof. exact (@lem4911593 (NUMERAL 0) term18). Qed.
Lemma lem4911595 : term260 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem4911596 (h1 : term260 = (BIT1 0)) : term259 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem4911597 : (term260 = (BIT1 0)) = (term259 = True).
Proof. exact (prop_ext (fun h1 : term260 = (BIT1 0) => @lem4911596 h1) (fun h1 : term259 = True => @lem4911595)). Qed.
Lemma lem4911598 : term259 = True.
Proof. exact (EQ_MP (@lem4911597) (@lem4911595)). Qed.
Lemma lem4911599 : term258 = True.
Proof. exact (TRANS (@lem4911594) (@lem4911598)). Qed.
Lemma lem4911600 : True = term258.
Proof. exact (SYM (@lem4911599)). Qed.
Lemma lem4911601 : term258.
Proof. exact (EQ_MP (@lem4911600) (@lem0)). Qed.
Lemma lem4911602 : term512.
Proof. exact (@lem4911591 (@lem4911601)). Qed.
Lemma lem4911604 (m : nat) (n : nat) : (term257 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem4911605 : term258 = term259.
Proof. exact (@lem4911604 (NUMERAL 0) term18). Qed.
Lemma lem4911606 : term260 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem4911607 (h1 : term260 = (BIT1 0)) : term259 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem4911608 : (term260 = (BIT1 0)) = (term259 = True).
Proof. exact (prop_ext (fun h1 : term260 = (BIT1 0) => @lem4911607 h1) (fun h1 : term259 = True => @lem4911606)). Qed.
Lemma lem4911609 : term259 = True.
Proof. exact (EQ_MP (@lem4911608) (@lem4911606)). Qed.
Lemma lem4911610 : term258 = True.
Proof. exact (TRANS (@lem4911605) (@lem4911609)). Qed.
Lemma lem4911611 : True = term258.
Proof. exact (SYM (@lem4911610)). Qed.
Lemma lem4911612 : term258.
Proof. exact (EQ_MP (@lem4911611) (@lem0)). Qed.
Lemma lem4911613 : term513.
Proof. exact (@lem4911602 (@lem4911612)). Qed.
Lemma lem4911615 (m : nat) (n : nat) : (term213 m n) = (term214 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem4911616 : term215 = term216.
Proof. exact (@lem4911615 term18 term18). Qed.
Lemma lem4911617 : (term217 = (BIT1 0)) = (term218 = term18).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem4911618 : term218 = term18.
Proof. exact (EQ_MP (@lem4911617) (@lem940073)). Qed.
Lemma lem4911619 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem4911620 : term216 = term150.
Proof. exact (MK_COMB (@lem4911619) (@lem4911618)). Qed.
Lemma lem4911621 : term215 = term150.
Proof. exact (TRANS (@lem4911616) (@lem4911620)). Qed.
Lemma lem4911623 (m : nat) (n : nat) : (term235 m n) = (term236 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem4911624 : term232 = term237.
Proof. exact (@lem4911623 term18 term18). Qed.
Lemma lem4911625 : (term217 = (BIT1 0)) = (term218 = term18).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem4911626 : term218 = term18.
Proof. exact (EQ_MP (@lem4911625) (@lem940073)). Qed.
Lemma lem4911627 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem4911628 : term216 = term150.
Proof. exact (MK_COMB (@lem4911627) (@lem4911626)). Qed.
Lemma lem4911629 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem4911630 : term237 = term206.
Proof. exact (MK_COMB (@lem4911629) (@lem4911628)). Qed.
Lemma lem4911631 : term232 = term206.
Proof. exact (TRANS (@lem4911624) (@lem4911630)). Qed.
Lemma lem4911632 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem4911633 : term514 = term506.
Proof. exact (MK_COMB (@lem4911632) (@lem4911631)). Qed.
Lemma lem4911634 : term515 = term508.
Proof. exact (MK_COMB (@lem4911633) (@lem4911621)). Qed.
Lemma lem4911636 (m : nat) : (term516 m) = term140.
Proof. exact (proj1 (@lem1367303 m)). Qed.
Lemma lem4911637 : term508 = term140.
Proof. exact (@lem4911636 term18). Qed.
Lemma lem4911638 : term515 = term140.
Proof. exact (TRANS (@lem4911634) (@lem4911637)). Qed.
Lemma lem4911639 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem4911640 : term517 = term268.
Proof. exact (MK_COMB (@lem4911639) (@lem4911638)). Qed.
Lemma lem4911641 : term150 = term150.
Proof. exact (eq_refl term150). Qed.
Lemma lem4911642 : term518 = term270.
Proof. exact (MK_COMB (@lem4911640) (@lem4911641)). Qed.
Lemma lem4911644 (x : nat) : (term271 x) = term140.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem4911645 : term270 = term140.
Proof. exact (@lem4911644 term18). Qed.
Lemma lem4911646 : term518 = term140.
Proof. exact (TRANS (@lem4911642) (@lem4911645)). Qed.
Lemma lem4911648 (m : nat) (n : nat) : (term213 m n) = (term214 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem4911649 : term215 = term216.
Proof. exact (@lem4911648 term18 term18). Qed.
Lemma lem4911650 : (term217 = (BIT1 0)) = (term218 = term18).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem4911651 : term218 = term18.
Proof. exact (EQ_MP (@lem4911650) (@lem940073)). Qed.
Lemma lem4911652 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem4911653 : term216 = term150.
Proof. exact (MK_COMB (@lem4911652) (@lem4911651)). Qed.
Lemma lem4911654 : term215 = term150.
Proof. exact (TRANS (@lem4911649) (@lem4911653)). Qed.
Lemma lem4911655 : term268 = term268.
Proof. exact (eq_refl term268). Qed.
Lemma lem4911656 : term272 = term270.
Proof. exact (MK_COMB (@lem4911655) (@lem4911654)). Qed.
Lemma lem4911658 (x : nat) : (term271 x) = term140.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem4911659 : term270 = term140.
Proof. exact (@lem4911658 term18). Qed.
Lemma lem4911660 : term272 = term140.
Proof. exact (TRANS (@lem4911656) (@lem4911659)). Qed.
Lemma lem4911661 : term140 = term272.
Proof. exact (SYM (@lem4911660)). Qed.
Lemma lem4911662 : term518 = term272.
Proof. exact (TRANS (@lem4911646) (@lem4911661)). Qed.
Lemma lem4911663 : term509 = term203.
Proof. exact (@lem4911613 (@lem4911662)). Qed.
Lemma lem4911664 : term508 = term203.
Proof. exact (TRANS (@lem4911579) (@lem4911663)). Qed.
Lemma lem4911666 (x : real) : (term222 x) = x.
Proof. exact (EQ_MP (@lem1981475 x) (@lem1981474 x)). Qed.
Lemma lem4911667 : term203 = term140.
Proof. exact (@lem4911666 term140). Qed.
Lemma lem4911668 : term508 = term140.
Proof. exact (TRANS (@lem4911664) (@lem4911667)). Qed.
Lemma lem4911669 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem4911670 : term519 = term268.
Proof. exact (MK_COMB (@lem4911669) (@lem4911668)). Qed.
Lemma lem4911671 (_61040 : int) : (real_of_int _61040) = (real_of_int _61040).
Proof. exact (eq_refl (real_of_int _61040)). Qed.
Lemma lem4911672 (_61040 : int) : (term505 _61040) = (term520 _61040).
Proof. exact (MK_COMB (@lem4911670) (@lem4911671 _61040)). Qed.
Lemma lem4911673 (_61040 : int) : (term524 _61040) = (term520 _61040).
Proof. exact (TRANS (@lem4911570 _61040) (@lem4911672 _61040)). Qed.
Lemma lem4911674 (_61040 : int) : (term520 _61040) = term140.
Proof. exact (@lem1982719 (real_of_int _61040)). Qed.
Lemma lem4911675 (_61040 : int) : (term524 _61040) = term140.
Proof. exact (TRANS (@lem4911673 _61040) (@lem4911674 _61040)). Qed.
Lemma lem4911676 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem4911677 (_61040 : int) : (term525 _61040) = term182.
Proof. exact (MK_COMB (@lem4911676) (@lem4911675 _61040)). Qed.
Lemma lem4911678 : term206 = term206.
Proof. exact (eq_refl term206). Qed.
Lemma lem4911679 (_61040 : int) : (term523 _61040) = term526.
Proof. exact (MK_COMB (@lem4911677 _61040) (@lem4911678)). Qed.
Lemma lem4911680 (_61040 : int) : (term522 _61040) = term526.
Proof. exact (TRANS (@lem4911569 _61040) (@lem4911679 _61040)). Qed.
Lemma lem4911681 : term526 = term206.
Proof. exact (@lem1982721 term206). Qed.
Lemma lem4911682 (_61040 : int) : (term522 _61040) = term206.
Proof. exact (TRANS (@lem4911680 _61040) (@lem4911681)). Qed.
Lemma lem4911683 (_61039 : int) (_61040 : int) : (term503 _61039 _61040) = term526.
Proof. exact (MK_COMB (@lem4911568 _61039) (@lem4911682 _61040)). Qed.
Lemma lem4911684 (_61039 : int) (_61040 : int) : (term502 _61039 _61040) = term526.
Proof. exact (TRANS (@lem4911460 _61039 _61040) (@lem4911683 _61039 _61040)). Qed.
Lemma lem4911685 : term526 = term206.
Proof. exact (@lem1982721 term206). Qed.
Lemma lem4911686 (_61039 : int) (_61040 : int) : (term502 _61039 _61040) = term206.
Proof. exact (TRANS (@lem4911684 _61039 _61040) (@lem4911685)). Qed.
Lemma lem4911687 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem4911688 (_61039 : int) (_61040 : int) : (term527 _61039 _61040) = term528.
Proof. exact (MK_COMB (@lem4911687) (@lem4911686 _61039 _61040)). Qed.
Lemma lem4911689 : term140 = term140.
Proof. exact (eq_refl term140). Qed.
Lemma lem4911690 (_61039 : int) (_61040 : int) : (term501 _61039 _61040) = term529.
Proof. exact (MK_COMB (@lem4911688 _61039 _61040) (@lem4911689)). Qed.
Lemma lem4911691 (_61039 : int) (_61040 : int) (h1 : term621 _61039 _61040) : term529.
Proof. exact (EQ_MP (@lem4911690 _61039 _61040) (@lem4911459 _61039 _61040 h1)). Qed.
Lemma lem4911693 (y : real) (x : real) : (real_ge x y) = (real_le y x).
Proof. exact (EQ_MP (@lem1980260 y x) (@lem1980259 y x)). Qed.
Lemma lem4911694 : term529 = term530.
Proof. exact (@lem4911693 term140 term206). Qed.
Lemma lem4911696 (x : nat) : (term204 x) = (term205 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem4911697 : term206 = term207.
Proof. exact (@lem4911696 term18). Qed.
Lemma lem4911699 (x : nat) : (real_of_num x) = (term202 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem4911700 : term140 = term203.
Proof. exact (@lem4911699 (NUMERAL 0)). Qed.
Lemma lem4911701 : real_le = real_le.
Proof. exact (eq_refl real_le). Qed.
Lemma lem4911702 : term142 = term531.
Proof. exact (MK_COMB (@lem4911701) (@lem4911700)). Qed.
Lemma lem4911703 : term530 = term532.
Proof. exact (MK_COMB (@lem4911702) (@lem4911697)). Qed.
Lemma lem4911704 : term533.
Proof. exact (@lem1980026 term140 term150 term206 term150). Qed.
Lemma lem4911706 (m : nat) (n : nat) : (term257 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem4911707 : term258 = term259.
Proof. exact (@lem4911706 (NUMERAL 0) term18). Qed.
Lemma lem4911708 : term260 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem4911709 (h1 : term260 = (BIT1 0)) : term259 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem4911710 : (term260 = (BIT1 0)) = (term259 = True).
Proof. exact (prop_ext (fun h1 : term260 = (BIT1 0) => @lem4911709 h1) (fun h1 : term259 = True => @lem4911708)). Qed.
Lemma lem4911711 : term259 = True.
Proof. exact (EQ_MP (@lem4911710) (@lem4911708)). Qed.
Lemma lem4911712 : term258 = True.
Proof. exact (TRANS (@lem4911707) (@lem4911711)). Qed.
Lemma lem4911713 : True = term258.
Proof. exact (SYM (@lem4911712)). Qed.
Lemma lem4911714 : term258.
Proof. exact (EQ_MP (@lem4911713) (@lem0)). Qed.
Lemma lem4911715 : term534.
Proof. exact (@lem4911704 (@lem4911714)). Qed.
Lemma lem4911717 (m : nat) (n : nat) : (term257 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem4911718 : term258 = term259.
Proof. exact (@lem4911717 (NUMERAL 0) term18). Qed.
Lemma lem4911719 : term260 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem4911720 (h1 : term260 = (BIT1 0)) : term259 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem4911721 : (term260 = (BIT1 0)) = (term259 = True).
Proof. exact (prop_ext (fun h1 : term260 = (BIT1 0) => @lem4911720 h1) (fun h1 : term259 = True => @lem4911719)). Qed.
Lemma lem4911722 : term259 = True.
Proof. exact (EQ_MP (@lem4911721) (@lem4911719)). Qed.
Lemma lem4911723 : term258 = True.
Proof. exact (TRANS (@lem4911718) (@lem4911722)). Qed.
Lemma lem4911724 : True = term258.
Proof. exact (SYM (@lem4911723)). Qed.
Lemma lem4911725 : term258.
Proof. exact (EQ_MP (@lem4911724) (@lem0)). Qed.
Lemma lem4911726 : term532 = term535.
Proof. exact (@lem4911715 (@lem4911725)). Qed.
Lemma lem4911728 (m : nat) (n : nat) : (term235 m n) = (term236 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem4911729 : term232 = term237.
Proof. exact (@lem4911728 term18 term18). Qed.
Lemma lem4911730 : (term217 = (BIT1 0)) = (term218 = term18).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem4911731 : term218 = term18.
Proof. exact (EQ_MP (@lem4911730) (@lem940073)). Qed.
Lemma lem4911732 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem4911733 : term216 = term150.
Proof. exact (MK_COMB (@lem4911732) (@lem4911731)). Qed.
Lemma lem4911734 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem4911735 : term237 = term206.
Proof. exact (MK_COMB (@lem4911734) (@lem4911733)). Qed.
Lemma lem4911736 : term232 = term206.
Proof. exact (TRANS (@lem4911729) (@lem4911735)). Qed.
Lemma lem4911738 (x : nat) : (term271 x) = term140.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem4911739 : term270 = term140.
Proof. exact (@lem4911738 term18). Qed.
Lemma lem4911740 : real_le = real_le.
Proof. exact (eq_refl real_le). Qed.
Lemma lem4911741 : term536 = term142.
Proof. exact (MK_COMB (@lem4911740) (@lem4911739)). Qed.
Lemma lem4911742 : term535 = term530.
Proof. exact (MK_COMB (@lem4911741) (@lem4911736)). Qed.
Lemma lem4911744 (m : nat) (n : nat) : (term537 m n) = (term538 m n).
Proof. exact (proj2 (@lem1365406 m n)). Qed.
Lemma lem4911745 : term530 = term539.
Proof. exact (@lem4911744 (NUMERAL 0) term18). Qed.
Lemma lem4911746 : term260 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem4911747 (h1 : term260 = (BIT1 0)) : (term18 = (NUMERAL 0)) = False.
Proof. exact (@lem1013352 0 0 (BIT1 0) h1). Qed.
Lemma lem4911748 : (term260 = (BIT1 0)) = ((term18 = (NUMERAL 0)) = False).
Proof. exact (prop_ext (fun h1 : term260 = (BIT1 0) => @lem4911747 h1) (fun h1 : (term18 = (NUMERAL 0)) = False => @lem4911746)). Qed.
Lemma lem4911749 : (term18 = (NUMERAL 0)) = False.
Proof. exact (EQ_MP (@lem4911748) (@lem4911746)). Qed.
Lemma lem4911750 : ((NUMERAL 0) = (NUMERAL 0)) = True.
Proof. exact (@lem1013364 0). Qed.
Lemma lem4911751 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4911752 : term540 = (and True).
Proof. exact (MK_COMB (@lem4911751) (@lem4911750)). Qed.
Lemma lem4911753 : term539 = (True /\ False).
Proof. exact (MK_COMB (@lem4911752) (@lem4911749)). Qed.
Lemma lem4911755 : (True /\ False) = False.
Proof. exact (proj1 (@lem1365106)). Qed.
Lemma lem4911756 : term539 = False.
Proof. exact (TRANS (@lem4911753) (@lem4911755)). Qed.
Lemma lem4911757 : term530 = False.
Proof. exact (TRANS (@lem4911745) (@lem4911756)). Qed.
Lemma lem4911758 : term535 = False.
Proof. exact (TRANS (@lem4911742) (@lem4911757)). Qed.
Lemma lem4911759 : term532 = False.
Proof. exact (TRANS (@lem4911726) (@lem4911758)). Qed.
Lemma lem4911760 : term530 = False.
Proof. exact (TRANS (@lem4911703) (@lem4911759)). Qed.
Lemma lem4911761 : term529 = False.
Proof. exact (TRANS (@lem4911694) (@lem4911760)). Qed.
Lemma lem4911762 (_61039 : int) (_61040 : int) (h1 : term621 _61039 _61040) : False.
Proof. exact (EQ_MP (@lem4911761) (@lem4911691 _61039 _61040 h1)). Qed.
Lemma lem4911763 (_61039 : int) (_61040 : int) (h1 : term622 _61039 _61040) : term622 _61039 _61040.
Proof. exact (h1). Qed.
Lemma lem4911764 (_61039 : int) (_61040 : int) (h1 : term622 _61039 _61040) : term454 _61039 _61040.
Proof. exact (proj2 (@lem4911763 _61039 _61040 h1)). Qed.
Lemma lem4911766 (_61039 : int) (_61040 : int) (h1 : term622 _61039 _61040) : term405 _61039 _61040.
Proof. exact (proj2 (@lem4911764 _61039 _61040 h1)). Qed.
Lemma lem4911767 (_61039 : int) (_61040 : int) (h1 : term622 _61039 _61040) : term226 _61040.
Proof. exact (proj1 (@lem4911764 _61039 _61040 h1)). Qed.
Lemma lem4911768 (_61039 : int) (_61040 : int) (h1 : term622 _61039 _61040) : term353 _61039 _61040.
Proof. exact (proj2 (@lem4911766 _61039 _61040 h1)). Qed.
Lemma lem4911772 (_61039 : int) (_61040 : int) (h1 : term622 _61039 _61040) : term300 _61040.
Proof. exact (proj2 (@lem4911768 _61039 _61040 h1)). Qed.
Lemma lem4911775 (y : real) (x : real) : (real_gt x y) = (real_lt y x).
Proof. exact (EQ_MP (@lem1980266 y x) (@lem1980265 y x)). Qed.
Lemma lem4911776 : term478 = term258.
Proof. exact (@lem4911775 term140 term150). Qed.
Lemma lem4911778 (x : nat) : (real_of_num x) = (term202 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem4911779 : term150 = term231.
Proof. exact (@lem4911778 term18). Qed.
Lemma lem4911781 (x : nat) : (real_of_num x) = (term202 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem4911782 : term140 = term203.
Proof. exact (@lem4911781 (NUMERAL 0)). Qed.
Lemma lem4911783 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem4911784 : term479 = term480.
Proof. exact (MK_COMB (@lem4911783) (@lem4911782)). Qed.
Lemma lem4911785 : term258 = term481.
Proof. exact (MK_COMB (@lem4911784) (@lem4911779)). Qed.
Lemma lem4911786 : term482.
Proof. exact (@lem1980255 term140 term150 term150 term150). Qed.
Lemma lem4911788 (m : nat) (n : nat) : (term257 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem4911789 : term258 = term259.
Proof. exact (@lem4911788 (NUMERAL 0) term18). Qed.
Lemma lem4911790 : term260 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem4911791 (h1 : term260 = (BIT1 0)) : term259 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem4911792 : (term260 = (BIT1 0)) = (term259 = True).
Proof. exact (prop_ext (fun h1 : term260 = (BIT1 0) => @lem4911791 h1) (fun h1 : term259 = True => @lem4911790)). Qed.
Lemma lem4911793 : term259 = True.
Proof. exact (EQ_MP (@lem4911792) (@lem4911790)). Qed.
Lemma lem4911794 : term258 = True.
Proof. exact (TRANS (@lem4911789) (@lem4911793)). Qed.
Lemma lem4911795 : True = term258.
Proof. exact (SYM (@lem4911794)). Qed.
Lemma lem4911796 : term258.
Proof. exact (EQ_MP (@lem4911795) (@lem0)). Qed.
Lemma lem4911797 : term483.
Proof. exact (@lem4911786 (@lem4911796)). Qed.
Lemma lem4911799 (m : nat) (n : nat) : (term257 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem4911800 : term258 = term259.
Proof. exact (@lem4911799 (NUMERAL 0) term18). Qed.
Lemma lem4911801 : term260 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem4911802 (h1 : term260 = (BIT1 0)) : term259 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem4911803 : (term260 = (BIT1 0)) = (term259 = True).
Proof. exact (prop_ext (fun h1 : term260 = (BIT1 0) => @lem4911802 h1) (fun h1 : term259 = True => @lem4911801)). Qed.
Lemma lem4911804 : term259 = True.
Proof. exact (EQ_MP (@lem4911803) (@lem4911801)). Qed.
Lemma lem4911805 : term258 = True.
Proof. exact (TRANS (@lem4911800) (@lem4911804)). Qed.
Lemma lem4911806 : True = term258.
Proof. exact (SYM (@lem4911805)). Qed.
Lemma lem4911807 : term258.
Proof. exact (EQ_MP (@lem4911806) (@lem0)). Qed.
Lemma lem4911808 : term481 = term484.
Proof. exact (@lem4911797 (@lem4911807)). Qed.
Lemma lem4911810 (m : nat) (n : nat) : (term213 m n) = (term214 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem4911811 : term215 = term216.
Proof. exact (@lem4911810 term18 term18). Qed.
Lemma lem4911812 : (term217 = (BIT1 0)) = (term218 = term18).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem4911813 : term218 = term18.
Proof. exact (EQ_MP (@lem4911812) (@lem940073)). Qed.
Lemma lem4911814 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem4911815 : term216 = term150.
Proof. exact (MK_COMB (@lem4911814) (@lem4911813)). Qed.
Lemma lem4911816 : term215 = term150.
Proof. exact (TRANS (@lem4911811) (@lem4911815)). Qed.
Lemma lem4911818 (x : nat) : (term271 x) = term140.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem4911819 : term270 = term140.
Proof. exact (@lem4911818 term18). Qed.
Lemma lem4911820 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem4911821 : term485 = term479.
Proof. exact (MK_COMB (@lem4911820) (@lem4911819)). Qed.
Lemma lem4911822 : term484 = term258.
Proof. exact (MK_COMB (@lem4911821) (@lem4911816)). Qed.
Lemma lem4911824 (m : nat) (n : nat) : (term257 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem4911825 : term258 = term259.
Proof. exact (@lem4911824 (NUMERAL 0) term18). Qed.
Lemma lem4911826 : term260 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem4911827 (h1 : term260 = (BIT1 0)) : term259 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem4911828 : (term260 = (BIT1 0)) = (term259 = True).
Proof. exact (prop_ext (fun h1 : term260 = (BIT1 0) => @lem4911827 h1) (fun h1 : term259 = True => @lem4911826)). Qed.
Lemma lem4911829 : term259 = True.
Proof. exact (EQ_MP (@lem4911828) (@lem4911826)). Qed.
Lemma lem4911830 : term258 = True.
Proof. exact (TRANS (@lem4911825) (@lem4911829)). Qed.
Lemma lem4911831 : term484 = True.
Proof. exact (TRANS (@lem4911822) (@lem4911830)). Qed.
Lemma lem4911832 : term481 = True.
Proof. exact (TRANS (@lem4911808) (@lem4911831)). Qed.
Lemma lem4911833 : term258 = True.
Proof. exact (TRANS (@lem4911785) (@lem4911832)). Qed.
Lemma lem4911834 : term478 = True.
Proof. exact (TRANS (@lem4911776) (@lem4911833)). Qed.
Lemma lem4911835 : True = term478.
Proof. exact (SYM (@lem4911834)). Qed.
Lemma lem4911836 : term478.
Proof. exact (EQ_MP (@lem4911835) (@lem0)). Qed.
Lemma lem4911837 (_61039 : int) (_61040 : int) (h1 : term622 _61039 _61040) : term584 _61040.
Proof. exact (conj (@lem4911836) (@lem4911767 _61039 _61040 h1)). Qed.
Lemma lem4911839 (x : real) (y : real) : term487 x y.
Proof. exact (proj1 (@lem1988332 x y)). Qed.
Lemma lem4911840 (_61040 : int) : term585 _61040.
Proof. exact (@lem4911839 term150 (real_of_int _61040)). Qed.
Lemma lem4911841 (_61039 : int) (_61040 : int) (h1 : term622 _61039 _61040) : term586 _61040.
Proof. exact (@lem4911840 _61040 (@lem4911837 _61039 _61040 h1)). Qed.
Lemma lem4911842 (_61040 : int) : (term549 _61040) = (real_of_int _61040).
Proof. exact (@lem1982733 (real_of_int _61040)). Qed.
Lemma lem4911843 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem4911844 (_61040 : int) : (term587 _61040) = (term225 _61040).
Proof. exact (MK_COMB (@lem4911843) (@lem4911842 _61040)). Qed.
Lemma lem4911845 : term140 = term140.
Proof. exact (eq_refl term140). Qed.
Lemma lem4911846 (_61040 : int) : (term586 _61040) = (term226 _61040).
Proof. exact (MK_COMB (@lem4911844 _61040) (@lem4911845)). Qed.
Lemma lem4911847 (_61039 : int) (_61040 : int) (h1 : term622 _61039 _61040) : term226 _61040.
Proof. exact (EQ_MP (@lem4911846 _61040) (@lem4911841 _61039 _61040 h1)). Qed.
Lemma lem4911849 (y : real) (x : real) : (real_gt x y) = (real_lt y x).
Proof. exact (EQ_MP (@lem1980266 y x) (@lem1980265 y x)). Qed.
Lemma lem4911850 : term478 = term258.
Proof. exact (@lem4911849 term140 term150). Qed.
Lemma lem4911852 (x : nat) : (real_of_num x) = (term202 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem4911853 : term150 = term231.
Proof. exact (@lem4911852 term18). Qed.
Lemma lem4911855 (x : nat) : (real_of_num x) = (term202 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem4911856 : term140 = term203.
Proof. exact (@lem4911855 (NUMERAL 0)). Qed.
Lemma lem4911857 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem4911858 : term479 = term480.
Proof. exact (MK_COMB (@lem4911857) (@lem4911856)). Qed.
Lemma lem4911859 : term258 = term481.
Proof. exact (MK_COMB (@lem4911858) (@lem4911853)). Qed.
Lemma lem4911860 : term482.
Proof. exact (@lem1980255 term140 term150 term150 term150). Qed.
Lemma lem4911862 (m : nat) (n : nat) : (term257 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem4911863 : term258 = term259.
Proof. exact (@lem4911862 (NUMERAL 0) term18). Qed.
Lemma lem4911864 : term260 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem4911865 (h1 : term260 = (BIT1 0)) : term259 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem4911866 : (term260 = (BIT1 0)) = (term259 = True).
Proof. exact (prop_ext (fun h1 : term260 = (BIT1 0) => @lem4911865 h1) (fun h1 : term259 = True => @lem4911864)). Qed.
Lemma lem4911867 : term259 = True.
Proof. exact (EQ_MP (@lem4911866) (@lem4911864)). Qed.
Lemma lem4911868 : term258 = True.
Proof. exact (TRANS (@lem4911863) (@lem4911867)). Qed.
Lemma lem4911869 : True = term258.
Proof. exact (SYM (@lem4911868)). Qed.
Lemma lem4911870 : term258.
Proof. exact (EQ_MP (@lem4911869) (@lem0)). Qed.
Lemma lem4911871 : term483.
Proof. exact (@lem4911860 (@lem4911870)). Qed.
Lemma lem4911873 (m : nat) (n : nat) : (term257 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem4911874 : term258 = term259.
Proof. exact (@lem4911873 (NUMERAL 0) term18). Qed.
Lemma lem4911875 : term260 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem4911876 (h1 : term260 = (BIT1 0)) : term259 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem4911877 : (term260 = (BIT1 0)) = (term259 = True).
Proof. exact (prop_ext (fun h1 : term260 = (BIT1 0) => @lem4911876 h1) (fun h1 : term259 = True => @lem4911875)). Qed.
Lemma lem4911878 : term259 = True.
Proof. exact (EQ_MP (@lem4911877) (@lem4911875)). Qed.
Lemma lem4911879 : term258 = True.
Proof. exact (TRANS (@lem4911874) (@lem4911878)). Qed.
Lemma lem4911880 : True = term258.
Proof. exact (SYM (@lem4911879)). Qed.
Lemma lem4911881 : term258.
Proof. exact (EQ_MP (@lem4911880) (@lem0)). Qed.
Lemma lem4911882 : term481 = term484.
Proof. exact (@lem4911871 (@lem4911881)). Qed.
Lemma lem4911884 (m : nat) (n : nat) : (term213 m n) = (term214 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem4911885 : term215 = term216.
Proof. exact (@lem4911884 term18 term18). Qed.
Lemma lem4911886 : (term217 = (BIT1 0)) = (term218 = term18).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem4911887 : term218 = term18.
Proof. exact (EQ_MP (@lem4911886) (@lem940073)). Qed.
Lemma lem4911888 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem4911889 : term216 = term150.
Proof. exact (MK_COMB (@lem4911888) (@lem4911887)). Qed.
Lemma lem4911890 : term215 = term150.
Proof. exact (TRANS (@lem4911885) (@lem4911889)). Qed.
Lemma lem4911892 (x : nat) : (term271 x) = term140.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem4911893 : term270 = term140.
Proof. exact (@lem4911892 term18). Qed.
Lemma lem4911894 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem4911895 : term485 = term479.
Proof. exact (MK_COMB (@lem4911894) (@lem4911893)). Qed.
Lemma lem4911896 : term484 = term258.
Proof. exact (MK_COMB (@lem4911895) (@lem4911890)). Qed.
Lemma lem4911898 (m : nat) (n : nat) : (term257 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem4911899 : term258 = term259.
Proof. exact (@lem4911898 (NUMERAL 0) term18). Qed.
Lemma lem4911900 : term260 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem4911901 (h1 : term260 = (BIT1 0)) : term259 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem4911902 : (term260 = (BIT1 0)) = (term259 = True).
Proof. exact (prop_ext (fun h1 : term260 = (BIT1 0) => @lem4911901 h1) (fun h1 : term259 = True => @lem4911900)). Qed.
Lemma lem4911903 : term259 = True.
Proof. exact (EQ_MP (@lem4911902) (@lem4911900)). Qed.
Lemma lem4911904 : term258 = True.
Proof. exact (TRANS (@lem4911899) (@lem4911903)). Qed.
Lemma lem4911905 : term484 = True.
Proof. exact (TRANS (@lem4911896) (@lem4911904)). Qed.
Lemma lem4911906 : term481 = True.
Proof. exact (TRANS (@lem4911882) (@lem4911905)). Qed.
Lemma lem4911907 : term258 = True.
Proof. exact (TRANS (@lem4911859) (@lem4911906)). Qed.
Lemma lem4911908 : term478 = True.
Proof. exact (TRANS (@lem4911850) (@lem4911907)). Qed.
Lemma lem4911909 : True = term478.
Proof. exact (SYM (@lem4911908)). Qed.
Lemma lem4911910 : term478.
Proof. exact (EQ_MP (@lem4911909) (@lem0)). Qed.
Lemma lem4911911 (_61039 : int) (_61040 : int) (h1 : term622 _61039 _61040) : term613 _61040.
Proof. exact (conj (@lem4911910) (@lem4911772 _61039 _61040 h1)). Qed.
Lemma lem4911913 (x : real) (y : real) : term487 x y.
Proof. exact (proj1 (@lem1988332 x y)). Qed.
Lemma lem4911914 (_61040 : int) : term614 _61040.
Proof. exact (@lem4911913 term150 (term241 _61040)). Qed.
Lemma lem4911915 (_61039 : int) (_61040 : int) (h1 : term622 _61039 _61040) : term615 _61040.
Proof. exact (@lem4911914 _61040 (@lem4911911 _61039 _61040 h1)). Qed.
Lemma lem4911916 (_61040 : int) : (term601 _61040) = (term241 _61040).
Proof. exact (@lem1982733 (term241 _61040)). Qed.
Lemma lem4911917 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem4911918 (_61040 : int) : (term616 _61040) = (term299 _61040).
Proof. exact (MK_COMB (@lem4911917) (@lem4911916 _61040)). Qed.
Lemma lem4911919 : term140 = term140.
Proof. exact (eq_refl term140). Qed.
Lemma lem4911920 (_61040 : int) : (term615 _61040) = (term300 _61040).
Proof. exact (MK_COMB (@lem4911918 _61040) (@lem4911919)). Qed.
Lemma lem4911921 (_61039 : int) (_61040 : int) (h1 : term622 _61039 _61040) : term300 _61040.
Proof. exact (EQ_MP (@lem4911920 _61040) (@lem4911915 _61039 _61040 h1)). Qed.
Lemma lem4911922 (_61039 : int) (_61040 : int) (h1 : term622 _61039 _61040) : term623 _61040.
Proof. exact (conj (@lem4911921 _61039 _61040 h1) (@lem4911847 _61039 _61040 h1)). Qed.
Lemma lem4911924 (x : real) (y : real) : term577 x y.
Proof. exact (proj1 (@lem1988342 x y)). Qed.
Lemma lem4911925 (_61040 : int) : term624 _61040.
Proof. exact (@lem4911924 (term241 _61040) (real_of_int _61040)). Qed.
Lemma lem4911926 (_61039 : int) (_61040 : int) (h1 : term622 _61039 _61040) : term605 _61040.
Proof. exact (@lem4911925 _61040 (@lem4911922 _61039 _61040 h1)). Qed.
Lemma lem4911927 (_61040 : int) : (term606 _61040) = (term581 _61040).
Proof. exact (@lem1982759 (term244 _61040) (real_of_int _61040) term206). Qed.
Lemma lem4911928 (_61040 : int) : (term504 _61040) = (term505 _61040).
Proof. exact (@lem1982713 term206 (real_of_int _61040)). Qed.
Lemma lem4911930 (x : nat) : (real_of_num x) = (term202 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem4911931 : term150 = term231.
Proof. exact (@lem4911930 term18). Qed.
Lemma lem4911933 (x : nat) : (term204 x) = (term205 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem4911934 : term206 = term207.
Proof. exact (@lem4911933 term18). Qed.
Lemma lem4911935 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem4911936 : term506 = term507.
Proof. exact (MK_COMB (@lem4911935) (@lem4911934)). Qed.
Lemma lem4911937 : term508 = term509.
Proof. exact (MK_COMB (@lem4911936) (@lem4911931)). Qed.
Lemma lem4911938 : term510.
Proof. exact (@lem1981473 term206 term150 term150 term150 term140 term150). Qed.
Lemma lem4911940 (m : nat) (n : nat) : (term257 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem4911941 : term258 = term259.
Proof. exact (@lem4911940 (NUMERAL 0) term18). Qed.
Lemma lem4911942 : term260 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem4911943 (h1 : term260 = (BIT1 0)) : term259 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem4911944 : (term260 = (BIT1 0)) = (term259 = True).
Proof. exact (prop_ext (fun h1 : term260 = (BIT1 0) => @lem4911943 h1) (fun h1 : term259 = True => @lem4911942)). Qed.
Lemma lem4911945 : term259 = True.
Proof. exact (EQ_MP (@lem4911944) (@lem4911942)). Qed.
Lemma lem4911946 : term258 = True.
Proof. exact (TRANS (@lem4911941) (@lem4911945)). Qed.
Lemma lem4911947 : True = term258.
Proof. exact (SYM (@lem4911946)). Qed.
Lemma lem4911948 : term258.
Proof. exact (EQ_MP (@lem4911947) (@lem0)). Qed.
Lemma lem4911949 : term511.
Proof. exact (@lem4911938 (@lem4911948)). Qed.
Lemma lem4911951 (m : nat) (n : nat) : (term257 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem4911952 : term258 = term259.
Proof. exact (@lem4911951 (NUMERAL 0) term18). Qed.
Lemma lem4911953 : term260 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem4911954 (h1 : term260 = (BIT1 0)) : term259 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem4911955 : (term260 = (BIT1 0)) = (term259 = True).
Proof. exact (prop_ext (fun h1 : term260 = (BIT1 0) => @lem4911954 h1) (fun h1 : term259 = True => @lem4911953)). Qed.
Lemma lem4911956 : term259 = True.
Proof. exact (EQ_MP (@lem4911955) (@lem4911953)). Qed.
Lemma lem4911957 : term258 = True.
Proof. exact (TRANS (@lem4911952) (@lem4911956)). Qed.
Lemma lem4911958 : True = term258.
Proof. exact (SYM (@lem4911957)). Qed.
Lemma lem4911959 : term258.
Proof. exact (EQ_MP (@lem4911958) (@lem0)). Qed.
Lemma lem4911960 : term512.
Proof. exact (@lem4911949 (@lem4911959)). Qed.
Lemma lem4911962 (m : nat) (n : nat) : (term257 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem4911963 : term258 = term259.
Proof. exact (@lem4911962 (NUMERAL 0) term18). Qed.
Lemma lem4911964 : term260 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem4911965 (h1 : term260 = (BIT1 0)) : term259 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem4911966 : (term260 = (BIT1 0)) = (term259 = True).
Proof. exact (prop_ext (fun h1 : term260 = (BIT1 0) => @lem4911965 h1) (fun h1 : term259 = True => @lem4911964)). Qed.
Lemma lem4911967 : term259 = True.
Proof. exact (EQ_MP (@lem4911966) (@lem4911964)). Qed.
Lemma lem4911968 : term258 = True.
Proof. exact (TRANS (@lem4911963) (@lem4911967)). Qed.
Lemma lem4911969 : True = term258.
Proof. exact (SYM (@lem4911968)). Qed.
Lemma lem4911970 : term258.
Proof. exact (EQ_MP (@lem4911969) (@lem0)). Qed.
Lemma lem4911971 : term513.
Proof. exact (@lem4911960 (@lem4911970)). Qed.
Lemma lem4911973 (m : nat) (n : nat) : (term213 m n) = (term214 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem4911974 : term215 = term216.
Proof. exact (@lem4911973 term18 term18). Qed.
Lemma lem4911975 : (term217 = (BIT1 0)) = (term218 = term18).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem4911976 : term218 = term18.
Proof. exact (EQ_MP (@lem4911975) (@lem940073)). Qed.
Lemma lem4911977 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem4911978 : term216 = term150.
Proof. exact (MK_COMB (@lem4911977) (@lem4911976)). Qed.
Lemma lem4911979 : term215 = term150.
Proof. exact (TRANS (@lem4911974) (@lem4911978)). Qed.
Lemma lem4911981 (m : nat) (n : nat) : (term235 m n) = (term236 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem4911982 : term232 = term237.
Proof. exact (@lem4911981 term18 term18). Qed.
Lemma lem4911983 : (term217 = (BIT1 0)) = (term218 = term18).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem4911984 : term218 = term18.
Proof. exact (EQ_MP (@lem4911983) (@lem940073)). Qed.
Lemma lem4911985 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem4911986 : term216 = term150.
Proof. exact (MK_COMB (@lem4911985) (@lem4911984)). Qed.
Lemma lem4911987 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem4911988 : term237 = term206.
Proof. exact (MK_COMB (@lem4911987) (@lem4911986)). Qed.
Lemma lem4911989 : term232 = term206.
Proof. exact (TRANS (@lem4911982) (@lem4911988)). Qed.
Lemma lem4911990 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem4911991 : term514 = term506.
Proof. exact (MK_COMB (@lem4911990) (@lem4911989)). Qed.
Lemma lem4911992 : term515 = term508.
Proof. exact (MK_COMB (@lem4911991) (@lem4911979)). Qed.
Lemma lem4911994 (m : nat) : (term516 m) = term140.
Proof. exact (proj1 (@lem1367303 m)). Qed.
Lemma lem4911995 : term508 = term140.
Proof. exact (@lem4911994 term18). Qed.
Lemma lem4911996 : term515 = term140.
Proof. exact (TRANS (@lem4911992) (@lem4911995)). Qed.
Lemma lem4911997 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem4911998 : term517 = term268.
Proof. exact (MK_COMB (@lem4911997) (@lem4911996)). Qed.
Lemma lem4911999 : term150 = term150.
Proof. exact (eq_refl term150). Qed.
Lemma lem4912000 : term518 = term270.
Proof. exact (MK_COMB (@lem4911998) (@lem4911999)). Qed.
Lemma lem4912002 (x : nat) : (term271 x) = term140.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem4912003 : term270 = term140.
Proof. exact (@lem4912002 term18). Qed.
Lemma lem4912004 : term518 = term140.
Proof. exact (TRANS (@lem4912000) (@lem4912003)). Qed.
Lemma lem4912006 (m : nat) (n : nat) : (term213 m n) = (term214 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem4912007 : term215 = term216.
Proof. exact (@lem4912006 term18 term18). Qed.
Lemma lem4912008 : (term217 = (BIT1 0)) = (term218 = term18).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem4912009 : term218 = term18.
Proof. exact (EQ_MP (@lem4912008) (@lem940073)). Qed.
Lemma lem4912010 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem4912011 : term216 = term150.
Proof. exact (MK_COMB (@lem4912010) (@lem4912009)). Qed.
Lemma lem4912012 : term215 = term150.
Proof. exact (TRANS (@lem4912007) (@lem4912011)). Qed.
Lemma lem4912013 : term268 = term268.
Proof. exact (eq_refl term268). Qed.
Lemma lem4912014 : term272 = term270.
Proof. exact (MK_COMB (@lem4912013) (@lem4912012)). Qed.
Lemma lem4912016 (x : nat) : (term271 x) = term140.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem4912017 : term270 = term140.
Proof. exact (@lem4912016 term18). Qed.
Lemma lem4912018 : term272 = term140.
Proof. exact (TRANS (@lem4912014) (@lem4912017)). Qed.
Lemma lem4912019 : term140 = term272.
Proof. exact (SYM (@lem4912018)). Qed.
Lemma lem4912020 : term518 = term272.
Proof. exact (TRANS (@lem4912004) (@lem4912019)). Qed.
Lemma lem4912021 : term509 = term203.
Proof. exact (@lem4911971 (@lem4912020)). Qed.
Lemma lem4912022 : term508 = term203.
Proof. exact (TRANS (@lem4911937) (@lem4912021)). Qed.
Lemma lem4912024 (x : real) : (term222 x) = x.
Proof. exact (EQ_MP (@lem1981475 x) (@lem1981474 x)). Qed.
Lemma lem4912025 : term203 = term140.
Proof. exact (@lem4912024 term140). Qed.
Lemma lem4912026 : term508 = term140.
Proof. exact (TRANS (@lem4912022) (@lem4912025)). Qed.
Lemma lem4912027 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem4912028 : term519 = term268.
Proof. exact (MK_COMB (@lem4912027) (@lem4912026)). Qed.
Lemma lem4912029 (_61040 : int) : (real_of_int _61040) = (real_of_int _61040).
Proof. exact (eq_refl (real_of_int _61040)). Qed.
Lemma lem4912030 (_61040 : int) : (term505 _61040) = (term520 _61040).
Proof. exact (MK_COMB (@lem4912028) (@lem4912029 _61040)). Qed.
Lemma lem4912031 (_61040 : int) : (term504 _61040) = (term520 _61040).
Proof. exact (TRANS (@lem4911928 _61040) (@lem4912030 _61040)). Qed.
Lemma lem4912032 (_61040 : int) : (term520 _61040) = term140.
Proof. exact (@lem1982719 (real_of_int _61040)). Qed.
Lemma lem4912033 (_61040 : int) : (term504 _61040) = term140.
Proof. exact (TRANS (@lem4912031 _61040) (@lem4912032 _61040)). Qed.
Lemma lem4912034 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem4912035 (_61040 : int) : (term521 _61040) = term182.
Proof. exact (MK_COMB (@lem4912034) (@lem4912033 _61040)). Qed.
Lemma lem4912036 : term206 = term206.
Proof. exact (eq_refl term206). Qed.
Lemma lem4912037 (_61040 : int) : (term581 _61040) = term526.
Proof. exact (MK_COMB (@lem4912035 _61040) (@lem4912036)). Qed.
Lemma lem4912038 (_61040 : int) : (term606 _61040) = term526.
Proof. exact (TRANS (@lem4911927 _61040) (@lem4912037 _61040)). Qed.
Lemma lem4912039 : term526 = term206.
Proof. exact (@lem1982721 term206). Qed.
Lemma lem4912040 (_61040 : int) : (term606 _61040) = term206.
Proof. exact (TRANS (@lem4912038 _61040) (@lem4912039)). Qed.
Lemma lem4912041 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem4912042 (_61040 : int) : (term607 _61040) = term528.
Proof. exact (MK_COMB (@lem4912041) (@lem4912040 _61040)). Qed.
Lemma lem4912043 : term140 = term140.
Proof. exact (eq_refl term140). Qed.
Lemma lem4912044 (_61040 : int) : (term605 _61040) = term529.
Proof. exact (MK_COMB (@lem4912042 _61040) (@lem4912043)). Qed.
Lemma lem4912045 (_61039 : int) (_61040 : int) (h1 : term622 _61039 _61040) : term529.
Proof. exact (EQ_MP (@lem4912044 _61040) (@lem4911926 _61039 _61040 h1)). Qed.
Lemma lem4912047 (y : real) (x : real) : (real_ge x y) = (real_le y x).
Proof. exact (EQ_MP (@lem1980260 y x) (@lem1980259 y x)). Qed.
Lemma lem4912048 : term529 = term530.
Proof. exact (@lem4912047 term140 term206). Qed.
Lemma lem4912050 (x : nat) : (term204 x) = (term205 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem4912051 : term206 = term207.
Proof. exact (@lem4912050 term18). Qed.
Lemma lem4912053 (x : nat) : (real_of_num x) = (term202 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem4912054 : term140 = term203.
Proof. exact (@lem4912053 (NUMERAL 0)). Qed.
Lemma lem4912055 : real_le = real_le.
Proof. exact (eq_refl real_le). Qed.
Lemma lem4912056 : term142 = term531.
Proof. exact (MK_COMB (@lem4912055) (@lem4912054)). Qed.
Lemma lem4912057 : term530 = term532.
Proof. exact (MK_COMB (@lem4912056) (@lem4912051)). Qed.
Lemma lem4912058 : term533.
Proof. exact (@lem1980026 term140 term150 term206 term150). Qed.
Lemma lem4912060 (m : nat) (n : nat) : (term257 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem4912061 : term258 = term259.
Proof. exact (@lem4912060 (NUMERAL 0) term18). Qed.
Lemma lem4912062 : term260 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem4912063 (h1 : term260 = (BIT1 0)) : term259 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem4912064 : (term260 = (BIT1 0)) = (term259 = True).
Proof. exact (prop_ext (fun h1 : term260 = (BIT1 0) => @lem4912063 h1) (fun h1 : term259 = True => @lem4912062)). Qed.
Lemma lem4912065 : term259 = True.
Proof. exact (EQ_MP (@lem4912064) (@lem4912062)). Qed.
Lemma lem4912066 : term258 = True.
Proof. exact (TRANS (@lem4912061) (@lem4912065)). Qed.
Lemma lem4912067 : True = term258.
Proof. exact (SYM (@lem4912066)). Qed.
Lemma lem4912068 : term258.
Proof. exact (EQ_MP (@lem4912067) (@lem0)). Qed.
Lemma lem4912069 : term534.
Proof. exact (@lem4912058 (@lem4912068)). Qed.
Lemma lem4912071 (m : nat) (n : nat) : (term257 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem4912072 : term258 = term259.
Proof. exact (@lem4912071 (NUMERAL 0) term18). Qed.
Lemma lem4912073 : term260 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem4912074 (h1 : term260 = (BIT1 0)) : term259 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem4912075 : (term260 = (BIT1 0)) = (term259 = True).
Proof. exact (prop_ext (fun h1 : term260 = (BIT1 0) => @lem4912074 h1) (fun h1 : term259 = True => @lem4912073)). Qed.
Lemma lem4912076 : term259 = True.
Proof. exact (EQ_MP (@lem4912075) (@lem4912073)). Qed.
Lemma lem4912077 : term258 = True.
Proof. exact (TRANS (@lem4912072) (@lem4912076)). Qed.
Lemma lem4912078 : True = term258.
Proof. exact (SYM (@lem4912077)). Qed.
Lemma lem4912079 : term258.
Proof. exact (EQ_MP (@lem4912078) (@lem0)). Qed.
Lemma lem4912080 : term532 = term535.
Proof. exact (@lem4912069 (@lem4912079)). Qed.
Lemma lem4912082 (m : nat) (n : nat) : (term235 m n) = (term236 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem4912083 : term232 = term237.
Proof. exact (@lem4912082 term18 term18). Qed.
Lemma lem4912084 : (term217 = (BIT1 0)) = (term218 = term18).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem4912085 : term218 = term18.
Proof. exact (EQ_MP (@lem4912084) (@lem940073)). Qed.
Lemma lem4912086 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem4912087 : term216 = term150.
Proof. exact (MK_COMB (@lem4912086) (@lem4912085)). Qed.
Lemma lem4912088 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem4912089 : term237 = term206.
Proof. exact (MK_COMB (@lem4912088) (@lem4912087)). Qed.
Lemma lem4912090 : term232 = term206.
Proof. exact (TRANS (@lem4912083) (@lem4912089)). Qed.
Lemma lem4912092 (x : nat) : (term271 x) = term140.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem4912093 : term270 = term140.
Proof. exact (@lem4912092 term18). Qed.
Lemma lem4912094 : real_le = real_le.
Proof. exact (eq_refl real_le). Qed.
Lemma lem4912095 : term536 = term142.
Proof. exact (MK_COMB (@lem4912094) (@lem4912093)). Qed.
Lemma lem4912096 : term535 = term530.
Proof. exact (MK_COMB (@lem4912095) (@lem4912090)). Qed.
Lemma lem4912098 (m : nat) (n : nat) : (term537 m n) = (term538 m n).
Proof. exact (proj2 (@lem1365406 m n)). Qed.
Lemma lem4912099 : term530 = term539.
Proof. exact (@lem4912098 (NUMERAL 0) term18). Qed.
Lemma lem4912100 : term260 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem4912101 (h1 : term260 = (BIT1 0)) : (term18 = (NUMERAL 0)) = False.
Proof. exact (@lem1013352 0 0 (BIT1 0) h1). Qed.
Lemma lem4912102 : (term260 = (BIT1 0)) = ((term18 = (NUMERAL 0)) = False).
Proof. exact (prop_ext (fun h1 : term260 = (BIT1 0) => @lem4912101 h1) (fun h1 : (term18 = (NUMERAL 0)) = False => @lem4912100)). Qed.
Lemma lem4912103 : (term18 = (NUMERAL 0)) = False.
Proof. exact (EQ_MP (@lem4912102) (@lem4912100)). Qed.
Lemma lem4912104 : ((NUMERAL 0) = (NUMERAL 0)) = True.
Proof. exact (@lem1013364 0). Qed.
Lemma lem4912105 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4912106 : term540 = (and True).
Proof. exact (MK_COMB (@lem4912105) (@lem4912104)). Qed.
Lemma lem4912107 : term539 = (True /\ False).
Proof. exact (MK_COMB (@lem4912106) (@lem4912103)). Qed.
Lemma lem4912109 : (True /\ False) = False.
Proof. exact (proj1 (@lem1365106)). Qed.
Lemma lem4912110 : term539 = False.
Proof. exact (TRANS (@lem4912107) (@lem4912109)). Qed.
Lemma lem4912111 : term530 = False.
Proof. exact (TRANS (@lem4912099) (@lem4912110)). Qed.
Lemma lem4912112 : term535 = False.
Proof. exact (TRANS (@lem4912096) (@lem4912111)). Qed.
Lemma lem4912113 : term532 = False.
Proof. exact (TRANS (@lem4912080) (@lem4912112)). Qed.
Lemma lem4912114 : term530 = False.
Proof. exact (TRANS (@lem4912057) (@lem4912113)). Qed.
Lemma lem4912115 : term529 = False.
Proof. exact (TRANS (@lem4912048) (@lem4912114)). Qed.
Lemma lem4912116 (_61039 : int) (_61040 : int) (h1 : term622 _61039 _61040) : False.
Proof. exact (EQ_MP (@lem4912115) (@lem4912045 _61039 _61040 h1)). Qed.
Lemma lem4912117 (_61039 : int) (_61040 : int) (h1 : term452 _61039 _61040) : False.
Proof. exact (or_elim (@lem4911358 _61039 _61040 h1) (fun h0 : term621 _61039 _61040 => @lem4911762 _61039 _61040 h0) (fun h0 : term622 _61039 _61040 => @lem4912116 _61039 _61040 h0)). Qed.
Lemma lem4912118 (_61039 : int) (_61040 : int) (h1 : term448 _61039 _61040) : term448 _61039 _61040.
Proof. exact (h1). Qed.
Lemma lem4912119 (_61039 : int) (_61040 : int) (h1 : term625 _61039 _61040) : term625 _61039 _61040.
Proof. exact (h1). Qed.
Lemma lem4912120 (_61039 : int) (_61040 : int) (h1 : term625 _61039 _61040) : term449 _61039 _61040.
Proof. exact (proj2 (@lem4912119 _61039 _61040 h1)). Qed.
Lemma lem4912122 (_61039 : int) (_61040 : int) (h1 : term625 _61039 _61040) : term400 _61039 _61040.
Proof. exact (proj2 (@lem4912120 _61039 _61040 h1)). Qed.
Lemma lem4912124 (_61039 : int) (_61040 : int) (h1 : term625 _61039 _61040) : term354 _61040.
Proof. exact (proj2 (@lem4912122 _61039 _61040 h1)). Qed.
Lemma lem4912126 (_61039 : int) (_61040 : int) (h1 : term625 _61039 _61040) : term300 _61040.
Proof. exact (proj2 (@lem4912124 _61039 _61040 h1)). Qed.
Lemma lem4912127 (_61039 : int) (_61040 : int) (h1 : term625 _61039 _61040) : (real_of_int _61040) = term140.
Proof. exact (proj1 (@lem4912124 _61039 _61040 h1)). Qed.
Lemma lem4912129 (y : real) (x : real) : (real_gt x y) = (real_lt y x).
Proof. exact (EQ_MP (@lem1980266 y x) (@lem1980265 y x)). Qed.
Lemma lem4912130 : term478 = term258.
Proof. exact (@lem4912129 term140 term150). Qed.
Lemma lem4912132 (x : nat) : (real_of_num x) = (term202 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem4912133 : term150 = term231.
Proof. exact (@lem4912132 term18). Qed.
Lemma lem4912135 (x : nat) : (real_of_num x) = (term202 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem4912136 : term140 = term203.
Proof. exact (@lem4912135 (NUMERAL 0)). Qed.
Lemma lem4912137 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem4912138 : term479 = term480.
Proof. exact (MK_COMB (@lem4912137) (@lem4912136)). Qed.
Lemma lem4912139 : term258 = term481.
Proof. exact (MK_COMB (@lem4912138) (@lem4912133)). Qed.
Lemma lem4912140 : term482.
Proof. exact (@lem1980255 term140 term150 term150 term150). Qed.
Lemma lem4912142 (m : nat) (n : nat) : (term257 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem4912143 : term258 = term259.
Proof. exact (@lem4912142 (NUMERAL 0) term18). Qed.
Lemma lem4912144 : term260 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem4912145 (h1 : term260 = (BIT1 0)) : term259 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem4912146 : (term260 = (BIT1 0)) = (term259 = True).
Proof. exact (prop_ext (fun h1 : term260 = (BIT1 0) => @lem4912145 h1) (fun h1 : term259 = True => @lem4912144)). Qed.
Lemma lem4912147 : term259 = True.
Proof. exact (EQ_MP (@lem4912146) (@lem4912144)). Qed.
Lemma lem4912148 : term258 = True.
Proof. exact (TRANS (@lem4912143) (@lem4912147)). Qed.
Lemma lem4912149 : True = term258.
Proof. exact (SYM (@lem4912148)). Qed.
Lemma lem4912150 : term258.
Proof. exact (EQ_MP (@lem4912149) (@lem0)). Qed.
Lemma lem4912151 : term483.
Proof. exact (@lem4912140 (@lem4912150)). Qed.
Lemma lem4912153 (m : nat) (n : nat) : (term257 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem4912154 : term258 = term259.
Proof. exact (@lem4912153 (NUMERAL 0) term18). Qed.
Lemma lem4912155 : term260 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem4912156 (h1 : term260 = (BIT1 0)) : term259 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem4912157 : (term260 = (BIT1 0)) = (term259 = True).
Proof. exact (prop_ext (fun h1 : term260 = (BIT1 0) => @lem4912156 h1) (fun h1 : term259 = True => @lem4912155)). Qed.
Lemma lem4912158 : term259 = True.
Proof. exact (EQ_MP (@lem4912157) (@lem4912155)). Qed.
Lemma lem4912159 : term258 = True.
Proof. exact (TRANS (@lem4912154) (@lem4912158)). Qed.
Lemma lem4912160 : True = term258.
Proof. exact (SYM (@lem4912159)). Qed.
Lemma lem4912161 : term258.
Proof. exact (EQ_MP (@lem4912160) (@lem0)). Qed.
Lemma lem4912162 : term481 = term484.
Proof. exact (@lem4912151 (@lem4912161)). Qed.
Lemma lem4912164 (m : nat) (n : nat) : (term213 m n) = (term214 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem4912165 : term215 = term216.
Proof. exact (@lem4912164 term18 term18). Qed.
Lemma lem4912166 : (term217 = (BIT1 0)) = (term218 = term18).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem4912167 : term218 = term18.
Proof. exact (EQ_MP (@lem4912166) (@lem940073)). Qed.
Lemma lem4912168 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem4912169 : term216 = term150.
Proof. exact (MK_COMB (@lem4912168) (@lem4912167)). Qed.
Lemma lem4912170 : term215 = term150.
Proof. exact (TRANS (@lem4912165) (@lem4912169)). Qed.
Lemma lem4912172 (x : nat) : (term271 x) = term140.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem4912173 : term270 = term140.
Proof. exact (@lem4912172 term18). Qed.
Lemma lem4912174 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem4912175 : term485 = term479.
Proof. exact (MK_COMB (@lem4912174) (@lem4912173)). Qed.
Lemma lem4912176 : term484 = term258.
Proof. exact (MK_COMB (@lem4912175) (@lem4912170)). Qed.
Lemma lem4912178 (m : nat) (n : nat) : (term257 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem4912179 : term258 = term259.
Proof. exact (@lem4912178 (NUMERAL 0) term18). Qed.
Lemma lem4912180 : term260 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem4912181 (h1 : term260 = (BIT1 0)) : term259 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem4912182 : (term260 = (BIT1 0)) = (term259 = True).
Proof. exact (prop_ext (fun h1 : term260 = (BIT1 0) => @lem4912181 h1) (fun h1 : term259 = True => @lem4912180)). Qed.
Lemma lem4912183 : term259 = True.
Proof. exact (EQ_MP (@lem4912182) (@lem4912180)). Qed.
Lemma lem4912184 : term258 = True.
Proof. exact (TRANS (@lem4912179) (@lem4912183)). Qed.
Lemma lem4912185 : term484 = True.
Proof. exact (TRANS (@lem4912176) (@lem4912184)). Qed.
Lemma lem4912186 : term481 = True.
Proof. exact (TRANS (@lem4912162) (@lem4912185)). Qed.
Lemma lem4912187 : term258 = True.
Proof. exact (TRANS (@lem4912139) (@lem4912186)). Qed.
Lemma lem4912188 : term478 = True.
Proof. exact (TRANS (@lem4912130) (@lem4912187)). Qed.
Lemma lem4912189 : True = term478.
Proof. exact (SYM (@lem4912188)). Qed.
Lemma lem4912190 : term478.
Proof. exact (EQ_MP (@lem4912189) (@lem0)). Qed.
Lemma lem4912191 (_61039 : int) (_61040 : int) (h1 : term625 _61039 _61040) : term613 _61040.
Proof. exact (conj (@lem4912190) (@lem4912126 _61039 _61040 h1)). Qed.
Lemma lem4912193 (x : real) (y : real) : term487 x y.
Proof. exact (proj1 (@lem1988332 x y)). Qed.
Lemma lem4912194 (_61040 : int) : term614 _61040.
Proof. exact (@lem4912193 term150 (term241 _61040)). Qed.
Lemma lem4912195 (_61039 : int) (_61040 : int) (h1 : term625 _61039 _61040) : term615 _61040.
Proof. exact (@lem4912194 _61040 (@lem4912191 _61039 _61040 h1)). Qed.
Lemma lem4912196 (_61040 : int) : (term601 _61040) = (term241 _61040).
Proof. exact (@lem1982733 (term241 _61040)). Qed.
Lemma lem4912197 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem4912198 (_61040 : int) : (term616 _61040) = (term299 _61040).
Proof. exact (MK_COMB (@lem4912197) (@lem4912196 _61040)). Qed.
Lemma lem4912199 : term140 = term140.
Proof. exact (eq_refl term140). Qed.
Lemma lem4912200 (_61040 : int) : (term615 _61040) = (term300 _61040).
Proof. exact (MK_COMB (@lem4912198 _61040) (@lem4912199)). Qed.
Lemma lem4912201 (_61039 : int) (_61040 : int) (h1 : term625 _61039 _61040) : term300 _61040.
Proof. exact (EQ_MP (@lem4912200 _61040) (@lem4912195 _61039 _61040 h1)). Qed.
Lemma lem4912203 (y : real) : term492 y.
Proof. exact (EQ_MP (@lem1396750 y) (@lem0)). Qed.
Lemma lem4912204 (_61040 : int) : term546 _61040.
Proof. exact (@lem4912203 (real_of_int _61040)). Qed.
Lemma lem4912205 (_61039 : int) (_61040 : int) (h1 : term625 _61039 _61040) : term547 _61040.
Proof. exact (@lem4912204 _61040 (@lem4912127 _61039 _61040 h1)). Qed.
Lemma lem4912206 (_61039 : int) (_61040 : int) (h1 : term625 _61039 _61040) : term548 _61040.
Proof. exact (@lem4912205 _61039 _61040 h1 term150). Qed.
Lemma lem4912207 (_61040 : int) : (term548 _61040) = ((term549 _61040) = term140).
Proof. exact (eq_refl (term548 _61040)). Qed.
Lemma lem4912208 (_61039 : int) (_61040 : int) (h1 : term625 _61039 _61040) : (term549 _61040) = term140.
Proof. exact (EQ_MP (@lem4912207 _61040) (@lem4912206 _61039 _61040 h1)). Qed.
Lemma lem4912209 (_61040 : int) : (term549 _61040) = (real_of_int _61040).
Proof. exact (@lem1982733 (real_of_int _61040)). Qed.
Lemma lem4912210 : (@eq real) = (@eq real).
Proof. exact (eq_refl (@eq real)). Qed.
Lemma lem4912211 (_61040 : int) : (term550 _61040) = (term153 _61040).
Proof. exact (MK_COMB (@lem4912210) (@lem4912209 _61040)). Qed.
Lemma lem4912212 : term140 = term140.
Proof. exact (eq_refl term140). Qed.
Lemma lem4912213 (_61040 : int) : ((term549 _61040) = term140) = ((real_of_int _61040) = term140).
Proof. exact (MK_COMB (@lem4912211 _61040) (@lem4912212)). Qed.
Lemma lem4912214 (_61039 : int) (_61040 : int) (h1 : term625 _61039 _61040) : (real_of_int _61040) = term140.
Proof. exact (EQ_MP (@lem4912213 _61040) (@lem4912208 _61039 _61040 h1)). Qed.
Lemma lem4912215 (_61039 : int) (_61040 : int) (h1 : term625 _61039 _61040) : term354 _61040.
Proof. exact (conj (@lem4912214 _61039 _61040 h1) (@lem4912201 _61039 _61040 h1)). Qed.
Lemma lem4912217 (x : real) (y : real) : term499 x y.
Proof. exact (proj1 (@lem1988336 x y)). Qed.
Lemma lem4912218 (_61040 : int) : term617 _61040.
Proof. exact (@lem4912217 (real_of_int _61040) (term241 _61040)). Qed.
Lemma lem4912219 (_61039 : int) (_61040 : int) (h1 : term625 _61039 _61040) : term618 _61040.
Proof. exact (@lem4912218 _61040 (@lem4912215 _61039 _61040 h1)). Qed.
Lemma lem4912220 (_61040 : int) : (term619 _61040) = (term523 _61040).
Proof. exact (@lem1982763 (real_of_int _61040) (term244 _61040) term206). Qed.
Lemma lem4912221 (_61040 : int) : (term524 _61040) = (term505 _61040).
Proof. exact (@lem1982715 term206 (real_of_int _61040)). Qed.
Lemma lem4912223 (x : nat) : (real_of_num x) = (term202 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem4912224 : term150 = term231.
Proof. exact (@lem4912223 term18). Qed.
Lemma lem4912226 (x : nat) : (term204 x) = (term205 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem4912227 : term206 = term207.
Proof. exact (@lem4912226 term18). Qed.
Lemma lem4912228 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem4912229 : term506 = term507.
Proof. exact (MK_COMB (@lem4912228) (@lem4912227)). Qed.
Lemma lem4912230 : term508 = term509.
Proof. exact (MK_COMB (@lem4912229) (@lem4912224)). Qed.
Lemma lem4912231 : term510.
Proof. exact (@lem1981473 term206 term150 term150 term150 term140 term150). Qed.
Lemma lem4912233 (m : nat) (n : nat) : (term257 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem4912234 : term258 = term259.
Proof. exact (@lem4912233 (NUMERAL 0) term18). Qed.
Lemma lem4912235 : term260 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem4912236 (h1 : term260 = (BIT1 0)) : term259 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem4912237 : (term260 = (BIT1 0)) = (term259 = True).
Proof. exact (prop_ext (fun h1 : term260 = (BIT1 0) => @lem4912236 h1) (fun h1 : term259 = True => @lem4912235)). Qed.
Lemma lem4912238 : term259 = True.
Proof. exact (EQ_MP (@lem4912237) (@lem4912235)). Qed.
Lemma lem4912239 : term258 = True.
Proof. exact (TRANS (@lem4912234) (@lem4912238)). Qed.
Lemma lem4912240 : True = term258.
Proof. exact (SYM (@lem4912239)). Qed.
Lemma lem4912241 : term258.
Proof. exact (EQ_MP (@lem4912240) (@lem0)). Qed.
Lemma lem4912242 : term511.
Proof. exact (@lem4912231 (@lem4912241)). Qed.
Lemma lem4912244 (m : nat) (n : nat) : (term257 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem4912245 : term258 = term259.
Proof. exact (@lem4912244 (NUMERAL 0) term18). Qed.
Lemma lem4912246 : term260 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem4912247 (h1 : term260 = (BIT1 0)) : term259 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem4912248 : (term260 = (BIT1 0)) = (term259 = True).
Proof. exact (prop_ext (fun h1 : term260 = (BIT1 0) => @lem4912247 h1) (fun h1 : term259 = True => @lem4912246)). Qed.
Lemma lem4912249 : term259 = True.
Proof. exact (EQ_MP (@lem4912248) (@lem4912246)). Qed.
Lemma lem4912250 : term258 = True.
Proof. exact (TRANS (@lem4912245) (@lem4912249)). Qed.
Lemma lem4912251 : True = term258.
Proof. exact (SYM (@lem4912250)). Qed.
Lemma lem4912252 : term258.
Proof. exact (EQ_MP (@lem4912251) (@lem0)). Qed.
Lemma lem4912253 : term512.
Proof. exact (@lem4912242 (@lem4912252)). Qed.
Lemma lem4912255 (m : nat) (n : nat) : (term257 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem4912256 : term258 = term259.
Proof. exact (@lem4912255 (NUMERAL 0) term18). Qed.
Lemma lem4912257 : term260 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem4912258 (h1 : term260 = (BIT1 0)) : term259 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem4912259 : (term260 = (BIT1 0)) = (term259 = True).
Proof. exact (prop_ext (fun h1 : term260 = (BIT1 0) => @lem4912258 h1) (fun h1 : term259 = True => @lem4912257)). Qed.
Lemma lem4912260 : term259 = True.
Proof. exact (EQ_MP (@lem4912259) (@lem4912257)). Qed.
Lemma lem4912261 : term258 = True.
Proof. exact (TRANS (@lem4912256) (@lem4912260)). Qed.
Lemma lem4912262 : True = term258.
Proof. exact (SYM (@lem4912261)). Qed.
Lemma lem4912263 : term258.
Proof. exact (EQ_MP (@lem4912262) (@lem0)). Qed.
Lemma lem4912264 : term513.
Proof. exact (@lem4912253 (@lem4912263)). Qed.
Lemma lem4912266 (m : nat) (n : nat) : (term213 m n) = (term214 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem4912267 : term215 = term216.
Proof. exact (@lem4912266 term18 term18). Qed.
Lemma lem4912268 : (term217 = (BIT1 0)) = (term218 = term18).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem4912269 : term218 = term18.
Proof. exact (EQ_MP (@lem4912268) (@lem940073)). Qed.
Lemma lem4912270 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem4912271 : term216 = term150.
Proof. exact (MK_COMB (@lem4912270) (@lem4912269)). Qed.
Lemma lem4912272 : term215 = term150.
Proof. exact (TRANS (@lem4912267) (@lem4912271)). Qed.
Lemma lem4912274 (m : nat) (n : nat) : (term235 m n) = (term236 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem4912275 : term232 = term237.
Proof. exact (@lem4912274 term18 term18). Qed.
Lemma lem4912276 : (term217 = (BIT1 0)) = (term218 = term18).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem4912277 : term218 = term18.
Proof. exact (EQ_MP (@lem4912276) (@lem940073)). Qed.
Lemma lem4912278 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem4912279 : term216 = term150.
Proof. exact (MK_COMB (@lem4912278) (@lem4912277)). Qed.
Lemma lem4912280 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem4912281 : term237 = term206.
Proof. exact (MK_COMB (@lem4912280) (@lem4912279)). Qed.
Lemma lem4912282 : term232 = term206.
Proof. exact (TRANS (@lem4912275) (@lem4912281)). Qed.
Lemma lem4912283 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem4912284 : term514 = term506.
Proof. exact (MK_COMB (@lem4912283) (@lem4912282)). Qed.
Lemma lem4912285 : term515 = term508.
Proof. exact (MK_COMB (@lem4912284) (@lem4912272)). Qed.
Lemma lem4912287 (m : nat) : (term516 m) = term140.
Proof. exact (proj1 (@lem1367303 m)). Qed.
Lemma lem4912288 : term508 = term140.
Proof. exact (@lem4912287 term18). Qed.
Lemma lem4912289 : term515 = term140.
Proof. exact (TRANS (@lem4912285) (@lem4912288)). Qed.
Lemma lem4912290 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem4912291 : term517 = term268.
Proof. exact (MK_COMB (@lem4912290) (@lem4912289)). Qed.
Lemma lem4912292 : term150 = term150.
Proof. exact (eq_refl term150). Qed.
Lemma lem4912293 : term518 = term270.
Proof. exact (MK_COMB (@lem4912291) (@lem4912292)). Qed.
Lemma lem4912295 (x : nat) : (term271 x) = term140.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem4912296 : term270 = term140.
Proof. exact (@lem4912295 term18). Qed.
Lemma lem4912297 : term518 = term140.
Proof. exact (TRANS (@lem4912293) (@lem4912296)). Qed.
Lemma lem4912299 (m : nat) (n : nat) : (term213 m n) = (term214 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem4912300 : term215 = term216.
Proof. exact (@lem4912299 term18 term18). Qed.
Lemma lem4912301 : (term217 = (BIT1 0)) = (term218 = term18).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem4912302 : term218 = term18.
Proof. exact (EQ_MP (@lem4912301) (@lem940073)). Qed.
Lemma lem4912303 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem4912304 : term216 = term150.
Proof. exact (MK_COMB (@lem4912303) (@lem4912302)). Qed.
Lemma lem4912305 : term215 = term150.
Proof. exact (TRANS (@lem4912300) (@lem4912304)). Qed.
Lemma lem4912306 : term268 = term268.
Proof. exact (eq_refl term268). Qed.
Lemma lem4912307 : term272 = term270.
Proof. exact (MK_COMB (@lem4912306) (@lem4912305)). Qed.
Lemma lem4912309 (x : nat) : (term271 x) = term140.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem4912310 : term270 = term140.
Proof. exact (@lem4912309 term18). Qed.
Lemma lem4912311 : term272 = term140.
Proof. exact (TRANS (@lem4912307) (@lem4912310)). Qed.
Lemma lem4912312 : term140 = term272.
Proof. exact (SYM (@lem4912311)). Qed.
Lemma lem4912313 : term518 = term272.
Proof. exact (TRANS (@lem4912297) (@lem4912312)). Qed.
Lemma lem4912314 : term509 = term203.
Proof. exact (@lem4912264 (@lem4912313)). Qed.
Lemma lem4912315 : term508 = term203.
Proof. exact (TRANS (@lem4912230) (@lem4912314)). Qed.
Lemma lem4912317 (x : real) : (term222 x) = x.
Proof. exact (EQ_MP (@lem1981475 x) (@lem1981474 x)). Qed.
Lemma lem4912318 : term203 = term140.
Proof. exact (@lem4912317 term140). Qed.
Lemma lem4912319 : term508 = term140.
Proof. exact (TRANS (@lem4912315) (@lem4912318)). Qed.
Lemma lem4912320 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem4912321 : term519 = term268.
Proof. exact (MK_COMB (@lem4912320) (@lem4912319)). Qed.
Lemma lem4912322 (_61040 : int) : (real_of_int _61040) = (real_of_int _61040).
Proof. exact (eq_refl (real_of_int _61040)). Qed.
Lemma lem4912323 (_61040 : int) : (term505 _61040) = (term520 _61040).
Proof. exact (MK_COMB (@lem4912321) (@lem4912322 _61040)). Qed.
Lemma lem4912324 (_61040 : int) : (term524 _61040) = (term520 _61040).
Proof. exact (TRANS (@lem4912221 _61040) (@lem4912323 _61040)). Qed.
Lemma lem4912325 (_61040 : int) : (term520 _61040) = term140.
Proof. exact (@lem1982719 (real_of_int _61040)). Qed.
Lemma lem4912326 (_61040 : int) : (term524 _61040) = term140.
Proof. exact (TRANS (@lem4912324 _61040) (@lem4912325 _61040)). Qed.
Lemma lem4912327 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem4912328 (_61040 : int) : (term525 _61040) = term182.
Proof. exact (MK_COMB (@lem4912327) (@lem4912326 _61040)). Qed.
Lemma lem4912329 : term206 = term206.
Proof. exact (eq_refl term206). Qed.
Lemma lem4912330 (_61040 : int) : (term523 _61040) = term526.
Proof. exact (MK_COMB (@lem4912328 _61040) (@lem4912329)). Qed.
Lemma lem4912331 (_61040 : int) : (term619 _61040) = term526.
Proof. exact (TRANS (@lem4912220 _61040) (@lem4912330 _61040)). Qed.
Lemma lem4912332 : term526 = term206.
Proof. exact (@lem1982721 term206). Qed.
Lemma lem4912333 (_61040 : int) : (term619 _61040) = term206.
Proof. exact (TRANS (@lem4912331 _61040) (@lem4912332)). Qed.
Lemma lem4912334 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem4912335 (_61040 : int) : (term620 _61040) = term528.
Proof. exact (MK_COMB (@lem4912334) (@lem4912333 _61040)). Qed.
Lemma lem4912336 : term140 = term140.
Proof. exact (eq_refl term140). Qed.
Lemma lem4912337 (_61040 : int) : (term618 _61040) = term529.
Proof. exact (MK_COMB (@lem4912335 _61040) (@lem4912336)). Qed.
Lemma lem4912338 (_61039 : int) (_61040 : int) (h1 : term625 _61039 _61040) : term529.
Proof. exact (EQ_MP (@lem4912337 _61040) (@lem4912219 _61039 _61040 h1)). Qed.
Lemma lem4912340 (y : real) (x : real) : (real_ge x y) = (real_le y x).
Proof. exact (EQ_MP (@lem1980260 y x) (@lem1980259 y x)). Qed.
Lemma lem4912341 : term529 = term530.
Proof. exact (@lem4912340 term140 term206). Qed.
Lemma lem4912343 (x : nat) : (term204 x) = (term205 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem4912344 : term206 = term207.
Proof. exact (@lem4912343 term18). Qed.
Lemma lem4912346 (x : nat) : (real_of_num x) = (term202 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem4912347 : term140 = term203.
Proof. exact (@lem4912346 (NUMERAL 0)). Qed.
Lemma lem4912348 : real_le = real_le.
Proof. exact (eq_refl real_le). Qed.
Lemma lem4912349 : term142 = term531.
Proof. exact (MK_COMB (@lem4912348) (@lem4912347)). Qed.
Lemma lem4912350 : term530 = term532.
Proof. exact (MK_COMB (@lem4912349) (@lem4912344)). Qed.
Lemma lem4912351 : term533.
Proof. exact (@lem1980026 term140 term150 term206 term150). Qed.
Lemma lem4912353 (m : nat) (n : nat) : (term257 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem4912354 : term258 = term259.
Proof. exact (@lem4912353 (NUMERAL 0) term18). Qed.
Lemma lem4912355 : term260 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem4912356 (h1 : term260 = (BIT1 0)) : term259 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem4912357 : (term260 = (BIT1 0)) = (term259 = True).
Proof. exact (prop_ext (fun h1 : term260 = (BIT1 0) => @lem4912356 h1) (fun h1 : term259 = True => @lem4912355)). Qed.
Lemma lem4912358 : term259 = True.
Proof. exact (EQ_MP (@lem4912357) (@lem4912355)). Qed.
Lemma lem4912359 : term258 = True.
Proof. exact (TRANS (@lem4912354) (@lem4912358)). Qed.
Lemma lem4912360 : True = term258.
Proof. exact (SYM (@lem4912359)). Qed.
Lemma lem4912361 : term258.
Proof. exact (EQ_MP (@lem4912360) (@lem0)). Qed.
Lemma lem4912362 : term534.
Proof. exact (@lem4912351 (@lem4912361)). Qed.
Lemma lem4912364 (m : nat) (n : nat) : (term257 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem4912365 : term258 = term259.
Proof. exact (@lem4912364 (NUMERAL 0) term18). Qed.
Lemma lem4912366 : term260 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem4912367 (h1 : term260 = (BIT1 0)) : term259 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem4912368 : (term260 = (BIT1 0)) = (term259 = True).
Proof. exact (prop_ext (fun h1 : term260 = (BIT1 0) => @lem4912367 h1) (fun h1 : term259 = True => @lem4912366)). Qed.
Lemma lem4912369 : term259 = True.
Proof. exact (EQ_MP (@lem4912368) (@lem4912366)). Qed.
Lemma lem4912370 : term258 = True.
Proof. exact (TRANS (@lem4912365) (@lem4912369)). Qed.
Lemma lem4912371 : True = term258.
Proof. exact (SYM (@lem4912370)). Qed.
Lemma lem4912372 : term258.
Proof. exact (EQ_MP (@lem4912371) (@lem0)). Qed.
Lemma lem4912373 : term532 = term535.
Proof. exact (@lem4912362 (@lem4912372)). Qed.
Lemma lem4912375 (m : nat) (n : nat) : (term235 m n) = (term236 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem4912376 : term232 = term237.
Proof. exact (@lem4912375 term18 term18). Qed.
Lemma lem4912377 : (term217 = (BIT1 0)) = (term218 = term18).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem4912378 : term218 = term18.
Proof. exact (EQ_MP (@lem4912377) (@lem940073)). Qed.
Lemma lem4912379 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem4912380 : term216 = term150.
Proof. exact (MK_COMB (@lem4912379) (@lem4912378)). Qed.
Lemma lem4912381 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem4912382 : term237 = term206.
Proof. exact (MK_COMB (@lem4912381) (@lem4912380)). Qed.
Lemma lem4912383 : term232 = term206.
Proof. exact (TRANS (@lem4912376) (@lem4912382)). Qed.
Lemma lem4912385 (x : nat) : (term271 x) = term140.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem4912386 : term270 = term140.
Proof. exact (@lem4912385 term18). Qed.
Lemma lem4912387 : real_le = real_le.
Proof. exact (eq_refl real_le). Qed.
Lemma lem4912388 : term536 = term142.
Proof. exact (MK_COMB (@lem4912387) (@lem4912386)). Qed.
Lemma lem4912389 : term535 = term530.
Proof. exact (MK_COMB (@lem4912388) (@lem4912383)). Qed.
Lemma lem4912391 (m : nat) (n : nat) : (term537 m n) = (term538 m n).
Proof. exact (proj2 (@lem1365406 m n)). Qed.
Lemma lem4912392 : term530 = term539.
Proof. exact (@lem4912391 (NUMERAL 0) term18). Qed.
Lemma lem4912393 : term260 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem4912394 (h1 : term260 = (BIT1 0)) : (term18 = (NUMERAL 0)) = False.
Proof. exact (@lem1013352 0 0 (BIT1 0) h1). Qed.
Lemma lem4912395 : (term260 = (BIT1 0)) = ((term18 = (NUMERAL 0)) = False).
Proof. exact (prop_ext (fun h1 : term260 = (BIT1 0) => @lem4912394 h1) (fun h1 : (term18 = (NUMERAL 0)) = False => @lem4912393)). Qed.
Lemma lem4912396 : (term18 = (NUMERAL 0)) = False.
Proof. exact (EQ_MP (@lem4912395) (@lem4912393)). Qed.
Lemma lem4912397 : ((NUMERAL 0) = (NUMERAL 0)) = True.
Proof. exact (@lem1013364 0). Qed.
Lemma lem4912398 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4912399 : term540 = (and True).
Proof. exact (MK_COMB (@lem4912398) (@lem4912397)). Qed.
Lemma lem4912400 : term539 = (True /\ False).
Proof. exact (MK_COMB (@lem4912399) (@lem4912396)). Qed.
Lemma lem4912402 : (True /\ False) = False.
Proof. exact (proj1 (@lem1365106)). Qed.
Lemma lem4912403 : term539 = False.
Proof. exact (TRANS (@lem4912400) (@lem4912402)). Qed.
Lemma lem4912404 : term530 = False.
Proof. exact (TRANS (@lem4912392) (@lem4912403)). Qed.
Lemma lem4912405 : term535 = False.
Proof. exact (TRANS (@lem4912389) (@lem4912404)). Qed.
Lemma lem4912406 : term532 = False.
Proof. exact (TRANS (@lem4912373) (@lem4912405)). Qed.
Lemma lem4912407 : term530 = False.
Proof. exact (TRANS (@lem4912350) (@lem4912406)). Qed.
Lemma lem4912408 : term529 = False.
Proof. exact (TRANS (@lem4912341) (@lem4912407)). Qed.
Lemma lem4912409 (_61039 : int) (_61040 : int) (h1 : term625 _61039 _61040) : False.
Proof. exact (EQ_MP (@lem4912408) (@lem4912338 _61039 _61040 h1)). Qed.
Lemma lem4912410 (_61039 : int) (_61040 : int) (h1 : term626 _61039 _61040) : term626 _61039 _61040.
Proof. exact (h1). Qed.
Lemma lem4912411 (_61039 : int) (_61040 : int) (h1 : term626 _61039 _61040) : term450 _61039 _61040.
Proof. exact (proj2 (@lem4912410 _61039 _61040 h1)). Qed.
Lemma lem4912413 (_61039 : int) (_61040 : int) (h1 : term626 _61039 _61040) : term401 _61039 _61040.
Proof. exact (proj2 (@lem4912411 _61039 _61040 h1)). Qed.
Lemma lem4912415 (_61039 : int) (_61040 : int) (h1 : term626 _61039 _61040) : term354 _61040.
Proof. exact (proj2 (@lem4912413 _61039 _61040 h1)). Qed.
Lemma lem4912419 (_61039 : int) (_61040 : int) (h1 : term626 _61039 _61040) : term300 _61040.
Proof. exact (proj2 (@lem4912415 _61039 _61040 h1)). Qed.
Lemma lem4912420 (_61039 : int) (_61040 : int) (h1 : term626 _61039 _61040) : (real_of_int _61040) = term140.
Proof. exact (proj1 (@lem4912415 _61039 _61040 h1)). Qed.
Lemma lem4912422 (y : real) (x : real) : (real_gt x y) = (real_lt y x).
Proof. exact (EQ_MP (@lem1980266 y x) (@lem1980265 y x)). Qed.
Lemma lem4912423 : term478 = term258.
Proof. exact (@lem4912422 term140 term150). Qed.
Lemma lem4912425 (x : nat) : (real_of_num x) = (term202 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem4912426 : term150 = term231.
Proof. exact (@lem4912425 term18). Qed.
Lemma lem4912428 (x : nat) : (real_of_num x) = (term202 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem4912429 : term140 = term203.
Proof. exact (@lem4912428 (NUMERAL 0)). Qed.
Lemma lem4912430 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem4912431 : term479 = term480.
Proof. exact (MK_COMB (@lem4912430) (@lem4912429)). Qed.
Lemma lem4912432 : term258 = term481.
Proof. exact (MK_COMB (@lem4912431) (@lem4912426)). Qed.
Lemma lem4912433 : term482.
Proof. exact (@lem1980255 term140 term150 term150 term150). Qed.
Lemma lem4912435 (m : nat) (n : nat) : (term257 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem4912436 : term258 = term259.
Proof. exact (@lem4912435 (NUMERAL 0) term18). Qed.
Lemma lem4912437 : term260 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem4912438 (h1 : term260 = (BIT1 0)) : term259 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem4912439 : (term260 = (BIT1 0)) = (term259 = True).
Proof. exact (prop_ext (fun h1 : term260 = (BIT1 0) => @lem4912438 h1) (fun h1 : term259 = True => @lem4912437)). Qed.
Lemma lem4912440 : term259 = True.
Proof. exact (EQ_MP (@lem4912439) (@lem4912437)). Qed.
Lemma lem4912441 : term258 = True.
Proof. exact (TRANS (@lem4912436) (@lem4912440)). Qed.
Lemma lem4912442 : True = term258.
Proof. exact (SYM (@lem4912441)). Qed.
Lemma lem4912443 : term258.
Proof. exact (EQ_MP (@lem4912442) (@lem0)). Qed.
Lemma lem4912444 : term483.
Proof. exact (@lem4912433 (@lem4912443)). Qed.
Lemma lem4912446 (m : nat) (n : nat) : (term257 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem4912447 : term258 = term259.
Proof. exact (@lem4912446 (NUMERAL 0) term18). Qed.
Lemma lem4912448 : term260 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem4912449 (h1 : term260 = (BIT1 0)) : term259 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem4912450 : (term260 = (BIT1 0)) = (term259 = True).
Proof. exact (prop_ext (fun h1 : term260 = (BIT1 0) => @lem4912449 h1) (fun h1 : term259 = True => @lem4912448)). Qed.
Lemma lem4912451 : term259 = True.
Proof. exact (EQ_MP (@lem4912450) (@lem4912448)). Qed.
Lemma lem4912452 : term258 = True.
Proof. exact (TRANS (@lem4912447) (@lem4912451)). Qed.
Lemma lem4912453 : True = term258.
Proof. exact (SYM (@lem4912452)). Qed.
Lemma lem4912454 : term258.
Proof. exact (EQ_MP (@lem4912453) (@lem0)). Qed.
Lemma lem4912455 : term481 = term484.
Proof. exact (@lem4912444 (@lem4912454)). Qed.
Lemma lem4912457 (m : nat) (n : nat) : (term213 m n) = (term214 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem4912458 : term215 = term216.
Proof. exact (@lem4912457 term18 term18). Qed.
Lemma lem4912459 : (term217 = (BIT1 0)) = (term218 = term18).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem4912460 : term218 = term18.
Proof. exact (EQ_MP (@lem4912459) (@lem940073)). Qed.
Lemma lem4912461 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem4912462 : term216 = term150.
Proof. exact (MK_COMB (@lem4912461) (@lem4912460)). Qed.
Lemma lem4912463 : term215 = term150.
Proof. exact (TRANS (@lem4912458) (@lem4912462)). Qed.
Lemma lem4912465 (x : nat) : (term271 x) = term140.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem4912466 : term270 = term140.
Proof. exact (@lem4912465 term18). Qed.
Lemma lem4912467 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem4912468 : term485 = term479.
Proof. exact (MK_COMB (@lem4912467) (@lem4912466)). Qed.
Lemma lem4912469 : term484 = term258.
Proof. exact (MK_COMB (@lem4912468) (@lem4912463)). Qed.
Lemma lem4912471 (m : nat) (n : nat) : (term257 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem4912472 : term258 = term259.
Proof. exact (@lem4912471 (NUMERAL 0) term18). Qed.
Lemma lem4912473 : term260 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem4912474 (h1 : term260 = (BIT1 0)) : term259 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem4912475 : (term260 = (BIT1 0)) = (term259 = True).
Proof. exact (prop_ext (fun h1 : term260 = (BIT1 0) => @lem4912474 h1) (fun h1 : term259 = True => @lem4912473)). Qed.
Lemma lem4912476 : term259 = True.
Proof. exact (EQ_MP (@lem4912475) (@lem4912473)). Qed.
Lemma lem4912477 : term258 = True.
Proof. exact (TRANS (@lem4912472) (@lem4912476)). Qed.
Lemma lem4912478 : term484 = True.
Proof. exact (TRANS (@lem4912469) (@lem4912477)). Qed.
Lemma lem4912479 : term481 = True.
Proof. exact (TRANS (@lem4912455) (@lem4912478)). Qed.
Lemma lem4912480 : term258 = True.
Proof. exact (TRANS (@lem4912432) (@lem4912479)). Qed.
Lemma lem4912481 : term478 = True.
Proof. exact (TRANS (@lem4912423) (@lem4912480)). Qed.
Lemma lem4912482 : True = term478.
Proof. exact (SYM (@lem4912481)). Qed.
Lemma lem4912483 : term478.
Proof. exact (EQ_MP (@lem4912482) (@lem0)). Qed.
Lemma lem4912484 (_61039 : int) (_61040 : int) (h1 : term626 _61039 _61040) : term613 _61040.
Proof. exact (conj (@lem4912483) (@lem4912419 _61039 _61040 h1)). Qed.
Lemma lem4912486 (x : real) (y : real) : term487 x y.
Proof. exact (proj1 (@lem1988332 x y)). Qed.
Lemma lem4912487 (_61040 : int) : term614 _61040.
Proof. exact (@lem4912486 term150 (term241 _61040)). Qed.
Lemma lem4912488 (_61039 : int) (_61040 : int) (h1 : term626 _61039 _61040) : term615 _61040.
Proof. exact (@lem4912487 _61040 (@lem4912484 _61039 _61040 h1)). Qed.
Lemma lem4912489 (_61040 : int) : (term601 _61040) = (term241 _61040).
Proof. exact (@lem1982733 (term241 _61040)). Qed.
Lemma lem4912490 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem4912491 (_61040 : int) : (term616 _61040) = (term299 _61040).
Proof. exact (MK_COMB (@lem4912490) (@lem4912489 _61040)). Qed.
Lemma lem4912492 : term140 = term140.
Proof. exact (eq_refl term140). Qed.
Lemma lem4912493 (_61040 : int) : (term615 _61040) = (term300 _61040).
Proof. exact (MK_COMB (@lem4912491 _61040) (@lem4912492)). Qed.
Lemma lem4912494 (_61039 : int) (_61040 : int) (h1 : term626 _61039 _61040) : term300 _61040.
Proof. exact (EQ_MP (@lem4912493 _61040) (@lem4912488 _61039 _61040 h1)). Qed.
Lemma lem4912496 (y : real) : term492 y.
Proof. exact (EQ_MP (@lem1396750 y) (@lem0)). Qed.
Lemma lem4912497 (_61040 : int) : term546 _61040.
Proof. exact (@lem4912496 (real_of_int _61040)). Qed.
Lemma lem4912498 (_61039 : int) (_61040 : int) (h1 : term626 _61039 _61040) : term547 _61040.
Proof. exact (@lem4912497 _61040 (@lem4912420 _61039 _61040 h1)). Qed.
Lemma lem4912499 (_61039 : int) (_61040 : int) (h1 : term626 _61039 _61040) : term548 _61040.
Proof. exact (@lem4912498 _61039 _61040 h1 term150). Qed.
Lemma lem4912500 (_61040 : int) : (term548 _61040) = ((term549 _61040) = term140).
Proof. exact (eq_refl (term548 _61040)). Qed.
Lemma lem4912501 (_61039 : int) (_61040 : int) (h1 : term626 _61039 _61040) : (term549 _61040) = term140.
Proof. exact (EQ_MP (@lem4912500 _61040) (@lem4912499 _61039 _61040 h1)). Qed.
Lemma lem4912502 (_61040 : int) : (term549 _61040) = (real_of_int _61040).
Proof. exact (@lem1982733 (real_of_int _61040)). Qed.
Lemma lem4912503 : (@eq real) = (@eq real).
Proof. exact (eq_refl (@eq real)). Qed.
Lemma lem4912504 (_61040 : int) : (term550 _61040) = (term153 _61040).
Proof. exact (MK_COMB (@lem4912503) (@lem4912502 _61040)). Qed.
Lemma lem4912505 : term140 = term140.
Proof. exact (eq_refl term140). Qed.
Lemma lem4912506 (_61040 : int) : ((term549 _61040) = term140) = ((real_of_int _61040) = term140).
Proof. exact (MK_COMB (@lem4912504 _61040) (@lem4912505)). Qed.
Lemma lem4912507 (_61039 : int) (_61040 : int) (h1 : term626 _61039 _61040) : (real_of_int _61040) = term140.
Proof. exact (EQ_MP (@lem4912506 _61040) (@lem4912501 _61039 _61040 h1)). Qed.
Lemma lem4912508 (_61039 : int) (_61040 : int) (h1 : term626 _61039 _61040) : term354 _61040.
Proof. exact (conj (@lem4912507 _61039 _61040 h1) (@lem4912494 _61039 _61040 h1)). Qed.
Lemma lem4912510 (x : real) (y : real) : term499 x y.
Proof. exact (proj1 (@lem1988336 x y)). Qed.
Lemma lem4912511 (_61040 : int) : term617 _61040.
Proof. exact (@lem4912510 (real_of_int _61040) (term241 _61040)). Qed.
Lemma lem4912512 (_61039 : int) (_61040 : int) (h1 : term626 _61039 _61040) : term618 _61040.
Proof. exact (@lem4912511 _61040 (@lem4912508 _61039 _61040 h1)). Qed.
Lemma lem4912513 (_61040 : int) : (term619 _61040) = (term523 _61040).
Proof. exact (@lem1982763 (real_of_int _61040) (term244 _61040) term206). Qed.
Lemma lem4912514 (_61040 : int) : (term524 _61040) = (term505 _61040).
Proof. exact (@lem1982715 term206 (real_of_int _61040)). Qed.
Lemma lem4912516 (x : nat) : (real_of_num x) = (term202 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem4912517 : term150 = term231.
Proof. exact (@lem4912516 term18). Qed.
Lemma lem4912519 (x : nat) : (term204 x) = (term205 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem4912520 : term206 = term207.
Proof. exact (@lem4912519 term18). Qed.
Lemma lem4912521 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem4912522 : term506 = term507.
Proof. exact (MK_COMB (@lem4912521) (@lem4912520)). Qed.
Lemma lem4912523 : term508 = term509.
Proof. exact (MK_COMB (@lem4912522) (@lem4912517)). Qed.
Lemma lem4912524 : term510.
Proof. exact (@lem1981473 term206 term150 term150 term150 term140 term150). Qed.
Lemma lem4912526 (m : nat) (n : nat) : (term257 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem4912527 : term258 = term259.
Proof. exact (@lem4912526 (NUMERAL 0) term18). Qed.
Lemma lem4912528 : term260 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem4912529 (h1 : term260 = (BIT1 0)) : term259 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem4912530 : (term260 = (BIT1 0)) = (term259 = True).
Proof. exact (prop_ext (fun h1 : term260 = (BIT1 0) => @lem4912529 h1) (fun h1 : term259 = True => @lem4912528)). Qed.
Lemma lem4912531 : term259 = True.
Proof. exact (EQ_MP (@lem4912530) (@lem4912528)). Qed.
Lemma lem4912532 : term258 = True.
Proof. exact (TRANS (@lem4912527) (@lem4912531)). Qed.
Lemma lem4912533 : True = term258.
Proof. exact (SYM (@lem4912532)). Qed.
Lemma lem4912534 : term258.
Proof. exact (EQ_MP (@lem4912533) (@lem0)). Qed.
Lemma lem4912535 : term511.
Proof. exact (@lem4912524 (@lem4912534)). Qed.
Lemma lem4912537 (m : nat) (n : nat) : (term257 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem4912538 : term258 = term259.
Proof. exact (@lem4912537 (NUMERAL 0) term18). Qed.
Lemma lem4912539 : term260 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem4912540 (h1 : term260 = (BIT1 0)) : term259 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem4912541 : (term260 = (BIT1 0)) = (term259 = True).
Proof. exact (prop_ext (fun h1 : term260 = (BIT1 0) => @lem4912540 h1) (fun h1 : term259 = True => @lem4912539)). Qed.
Lemma lem4912542 : term259 = True.
Proof. exact (EQ_MP (@lem4912541) (@lem4912539)). Qed.
Lemma lem4912543 : term258 = True.
Proof. exact (TRANS (@lem4912538) (@lem4912542)). Qed.
Lemma lem4912544 : True = term258.
Proof. exact (SYM (@lem4912543)). Qed.
Lemma lem4912545 : term258.
Proof. exact (EQ_MP (@lem4912544) (@lem0)). Qed.
Lemma lem4912546 : term512.
Proof. exact (@lem4912535 (@lem4912545)). Qed.
Lemma lem4912548 (m : nat) (n : nat) : (term257 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem4912549 : term258 = term259.
Proof. exact (@lem4912548 (NUMERAL 0) term18). Qed.
Lemma lem4912550 : term260 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem4912551 (h1 : term260 = (BIT1 0)) : term259 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem4912552 : (term260 = (BIT1 0)) = (term259 = True).
Proof. exact (prop_ext (fun h1 : term260 = (BIT1 0) => @lem4912551 h1) (fun h1 : term259 = True => @lem4912550)). Qed.
Lemma lem4912553 : term259 = True.
Proof. exact (EQ_MP (@lem4912552) (@lem4912550)). Qed.
Lemma lem4912554 : term258 = True.
Proof. exact (TRANS (@lem4912549) (@lem4912553)). Qed.
Lemma lem4912555 : True = term258.
Proof. exact (SYM (@lem4912554)). Qed.
Lemma lem4912556 : term258.
Proof. exact (EQ_MP (@lem4912555) (@lem0)). Qed.
Lemma lem4912557 : term513.
Proof. exact (@lem4912546 (@lem4912556)). Qed.
Lemma lem4912559 (m : nat) (n : nat) : (term213 m n) = (term214 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem4912560 : term215 = term216.
Proof. exact (@lem4912559 term18 term18). Qed.
Lemma lem4912561 : (term217 = (BIT1 0)) = (term218 = term18).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem4912562 : term218 = term18.
Proof. exact (EQ_MP (@lem4912561) (@lem940073)). Qed.
Lemma lem4912563 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem4912564 : term216 = term150.
Proof. exact (MK_COMB (@lem4912563) (@lem4912562)). Qed.
Lemma lem4912565 : term215 = term150.
Proof. exact (TRANS (@lem4912560) (@lem4912564)). Qed.
Lemma lem4912567 (m : nat) (n : nat) : (term235 m n) = (term236 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem4912568 : term232 = term237.
Proof. exact (@lem4912567 term18 term18). Qed.
Lemma lem4912569 : (term217 = (BIT1 0)) = (term218 = term18).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem4912570 : term218 = term18.
Proof. exact (EQ_MP (@lem4912569) (@lem940073)). Qed.
Lemma lem4912571 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem4912572 : term216 = term150.
Proof. exact (MK_COMB (@lem4912571) (@lem4912570)). Qed.
Lemma lem4912573 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem4912574 : term237 = term206.
Proof. exact (MK_COMB (@lem4912573) (@lem4912572)). Qed.
Lemma lem4912575 : term232 = term206.
Proof. exact (TRANS (@lem4912568) (@lem4912574)). Qed.
Lemma lem4912576 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem4912577 : term514 = term506.
Proof. exact (MK_COMB (@lem4912576) (@lem4912575)). Qed.
Lemma lem4912578 : term515 = term508.
Proof. exact (MK_COMB (@lem4912577) (@lem4912565)). Qed.
Lemma lem4912580 (m : nat) : (term516 m) = term140.
Proof. exact (proj1 (@lem1367303 m)). Qed.
Lemma lem4912581 : term508 = term140.
Proof. exact (@lem4912580 term18). Qed.
Lemma lem4912582 : term515 = term140.
Proof. exact (TRANS (@lem4912578) (@lem4912581)). Qed.
Lemma lem4912583 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem4912584 : term517 = term268.
Proof. exact (MK_COMB (@lem4912583) (@lem4912582)). Qed.
Lemma lem4912585 : term150 = term150.
Proof. exact (eq_refl term150). Qed.
Lemma lem4912586 : term518 = term270.
Proof. exact (MK_COMB (@lem4912584) (@lem4912585)). Qed.
Lemma lem4912588 (x : nat) : (term271 x) = term140.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem4912589 : term270 = term140.
Proof. exact (@lem4912588 term18). Qed.
Lemma lem4912590 : term518 = term140.
Proof. exact (TRANS (@lem4912586) (@lem4912589)). Qed.
Lemma lem4912592 (m : nat) (n : nat) : (term213 m n) = (term214 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem4912593 : term215 = term216.
Proof. exact (@lem4912592 term18 term18). Qed.
Lemma lem4912594 : (term217 = (BIT1 0)) = (term218 = term18).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem4912595 : term218 = term18.
Proof. exact (EQ_MP (@lem4912594) (@lem940073)). Qed.
Lemma lem4912596 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem4912597 : term216 = term150.
Proof. exact (MK_COMB (@lem4912596) (@lem4912595)). Qed.
Lemma lem4912598 : term215 = term150.
Proof. exact (TRANS (@lem4912593) (@lem4912597)). Qed.
Lemma lem4912599 : term268 = term268.
Proof. exact (eq_refl term268). Qed.
Lemma lem4912600 : term272 = term270.
Proof. exact (MK_COMB (@lem4912599) (@lem4912598)). Qed.
Lemma lem4912602 (x : nat) : (term271 x) = term140.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem4912603 : term270 = term140.
Proof. exact (@lem4912602 term18). Qed.
Lemma lem4912604 : term272 = term140.
Proof. exact (TRANS (@lem4912600) (@lem4912603)). Qed.
Lemma lem4912605 : term140 = term272.
Proof. exact (SYM (@lem4912604)). Qed.
Lemma lem4912606 : term518 = term272.
Proof. exact (TRANS (@lem4912590) (@lem4912605)). Qed.
Lemma lem4912607 : term509 = term203.
Proof. exact (@lem4912557 (@lem4912606)). Qed.
Lemma lem4912608 : term508 = term203.
Proof. exact (TRANS (@lem4912523) (@lem4912607)). Qed.
Lemma lem4912610 (x : real) : (term222 x) = x.
Proof. exact (EQ_MP (@lem1981475 x) (@lem1981474 x)). Qed.
Lemma lem4912611 : term203 = term140.
Proof. exact (@lem4912610 term140). Qed.
Lemma lem4912612 : term508 = term140.
Proof. exact (TRANS (@lem4912608) (@lem4912611)). Qed.
Lemma lem4912613 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem4912614 : term519 = term268.
Proof. exact (MK_COMB (@lem4912613) (@lem4912612)). Qed.
Lemma lem4912615 (_61040 : int) : (real_of_int _61040) = (real_of_int _61040).
Proof. exact (eq_refl (real_of_int _61040)). Qed.
Lemma lem4912616 (_61040 : int) : (term505 _61040) = (term520 _61040).
Proof. exact (MK_COMB (@lem4912614) (@lem4912615 _61040)). Qed.
Lemma lem4912617 (_61040 : int) : (term524 _61040) = (term520 _61040).
Proof. exact (TRANS (@lem4912514 _61040) (@lem4912616 _61040)). Qed.
Lemma lem4912618 (_61040 : int) : (term520 _61040) = term140.
Proof. exact (@lem1982719 (real_of_int _61040)). Qed.
Lemma lem4912619 (_61040 : int) : (term524 _61040) = term140.
Proof. exact (TRANS (@lem4912617 _61040) (@lem4912618 _61040)). Qed.
Lemma lem4912620 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem4912621 (_61040 : int) : (term525 _61040) = term182.
Proof. exact (MK_COMB (@lem4912620) (@lem4912619 _61040)). Qed.
Lemma lem4912622 : term206 = term206.
Proof. exact (eq_refl term206). Qed.
Lemma lem4912623 (_61040 : int) : (term523 _61040) = term526.
Proof. exact (MK_COMB (@lem4912621 _61040) (@lem4912622)). Qed.
Lemma lem4912624 (_61040 : int) : (term619 _61040) = term526.
Proof. exact (TRANS (@lem4912513 _61040) (@lem4912623 _61040)). Qed.
Lemma lem4912625 : term526 = term206.
Proof. exact (@lem1982721 term206). Qed.
Lemma lem4912626 (_61040 : int) : (term619 _61040) = term206.
Proof. exact (TRANS (@lem4912624 _61040) (@lem4912625)). Qed.
Lemma lem4912627 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem4912628 (_61040 : int) : (term620 _61040) = term528.
Proof. exact (MK_COMB (@lem4912627) (@lem4912626 _61040)). Qed.
Lemma lem4912629 : term140 = term140.
Proof. exact (eq_refl term140). Qed.
Lemma lem4912630 (_61040 : int) : (term618 _61040) = term529.
Proof. exact (MK_COMB (@lem4912628 _61040) (@lem4912629)). Qed.
Lemma lem4912631 (_61039 : int) (_61040 : int) (h1 : term626 _61039 _61040) : term529.
Proof. exact (EQ_MP (@lem4912630 _61040) (@lem4912512 _61039 _61040 h1)). Qed.
Lemma lem4912633 (y : real) (x : real) : (real_ge x y) = (real_le y x).
Proof. exact (EQ_MP (@lem1980260 y x) (@lem1980259 y x)). Qed.
Lemma lem4912634 : term529 = term530.
Proof. exact (@lem4912633 term140 term206). Qed.
Lemma lem4912636 (x : nat) : (term204 x) = (term205 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem4912637 : term206 = term207.
Proof. exact (@lem4912636 term18). Qed.
Lemma lem4912639 (x : nat) : (real_of_num x) = (term202 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem4912640 : term140 = term203.
Proof. exact (@lem4912639 (NUMERAL 0)). Qed.
Lemma lem4912641 : real_le = real_le.
Proof. exact (eq_refl real_le). Qed.
Lemma lem4912642 : term142 = term531.
Proof. exact (MK_COMB (@lem4912641) (@lem4912640)). Qed.
Lemma lem4912643 : term530 = term532.
Proof. exact (MK_COMB (@lem4912642) (@lem4912637)). Qed.
Lemma lem4912644 : term533.
Proof. exact (@lem1980026 term140 term150 term206 term150). Qed.
Lemma lem4912646 (m : nat) (n : nat) : (term257 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem4912647 : term258 = term259.
Proof. exact (@lem4912646 (NUMERAL 0) term18). Qed.
Lemma lem4912648 : term260 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem4912649 (h1 : term260 = (BIT1 0)) : term259 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem4912650 : (term260 = (BIT1 0)) = (term259 = True).
Proof. exact (prop_ext (fun h1 : term260 = (BIT1 0) => @lem4912649 h1) (fun h1 : term259 = True => @lem4912648)). Qed.
Lemma lem4912651 : term259 = True.
Proof. exact (EQ_MP (@lem4912650) (@lem4912648)). Qed.
Lemma lem4912652 : term258 = True.
Proof. exact (TRANS (@lem4912647) (@lem4912651)). Qed.
Lemma lem4912653 : True = term258.
Proof. exact (SYM (@lem4912652)). Qed.
Lemma lem4912654 : term258.
Proof. exact (EQ_MP (@lem4912653) (@lem0)). Qed.
Lemma lem4912655 : term534.
Proof. exact (@lem4912644 (@lem4912654)). Qed.
Lemma lem4912657 (m : nat) (n : nat) : (term257 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem4912658 : term258 = term259.
Proof. exact (@lem4912657 (NUMERAL 0) term18). Qed.
Lemma lem4912659 : term260 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem4912660 (h1 : term260 = (BIT1 0)) : term259 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem4912661 : (term260 = (BIT1 0)) = (term259 = True).
Proof. exact (prop_ext (fun h1 : term260 = (BIT1 0) => @lem4912660 h1) (fun h1 : term259 = True => @lem4912659)). Qed.
Lemma lem4912662 : term259 = True.
Proof. exact (EQ_MP (@lem4912661) (@lem4912659)). Qed.
Lemma lem4912663 : term258 = True.
Proof. exact (TRANS (@lem4912658) (@lem4912662)). Qed.
Lemma lem4912664 : True = term258.
Proof. exact (SYM (@lem4912663)). Qed.
Lemma lem4912665 : term258.
Proof. exact (EQ_MP (@lem4912664) (@lem0)). Qed.
Lemma lem4912666 : term532 = term535.
Proof. exact (@lem4912655 (@lem4912665)). Qed.
Lemma lem4912668 (m : nat) (n : nat) : (term235 m n) = (term236 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem4912669 : term232 = term237.
Proof. exact (@lem4912668 term18 term18). Qed.
Lemma lem4912670 : (term217 = (BIT1 0)) = (term218 = term18).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem4912671 : term218 = term18.
Proof. exact (EQ_MP (@lem4912670) (@lem940073)). Qed.
Lemma lem4912672 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem4912673 : term216 = term150.
Proof. exact (MK_COMB (@lem4912672) (@lem4912671)). Qed.
Lemma lem4912674 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem4912675 : term237 = term206.
Proof. exact (MK_COMB (@lem4912674) (@lem4912673)). Qed.
Lemma lem4912676 : term232 = term206.
Proof. exact (TRANS (@lem4912669) (@lem4912675)). Qed.
Lemma lem4912678 (x : nat) : (term271 x) = term140.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem4912679 : term270 = term140.
Proof. exact (@lem4912678 term18). Qed.
Lemma lem4912680 : real_le = real_le.
Proof. exact (eq_refl real_le). Qed.
Lemma lem4912681 : term536 = term142.
Proof. exact (MK_COMB (@lem4912680) (@lem4912679)). Qed.
Lemma lem4912682 : term535 = term530.
Proof. exact (MK_COMB (@lem4912681) (@lem4912676)). Qed.
Lemma lem4912684 (m : nat) (n : nat) : (term537 m n) = (term538 m n).
Proof. exact (proj2 (@lem1365406 m n)). Qed.
Lemma lem4912685 : term530 = term539.
Proof. exact (@lem4912684 (NUMERAL 0) term18). Qed.
Lemma lem4912686 : term260 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem4912687 (h1 : term260 = (BIT1 0)) : (term18 = (NUMERAL 0)) = False.
Proof. exact (@lem1013352 0 0 (BIT1 0) h1). Qed.
Lemma lem4912688 : (term260 = (BIT1 0)) = ((term18 = (NUMERAL 0)) = False).
Proof. exact (prop_ext (fun h1 : term260 = (BIT1 0) => @lem4912687 h1) (fun h1 : (term18 = (NUMERAL 0)) = False => @lem4912686)). Qed.
Lemma lem4912689 : (term18 = (NUMERAL 0)) = False.
Proof. exact (EQ_MP (@lem4912688) (@lem4912686)). Qed.
Lemma lem4912690 : ((NUMERAL 0) = (NUMERAL 0)) = True.
Proof. exact (@lem1013364 0). Qed.
Lemma lem4912691 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4912692 : term540 = (and True).
Proof. exact (MK_COMB (@lem4912691) (@lem4912690)). Qed.
Lemma lem4912693 : term539 = (True /\ False).
Proof. exact (MK_COMB (@lem4912692) (@lem4912689)). Qed.
Lemma lem4912695 : (True /\ False) = False.
Proof. exact (proj1 (@lem1365106)). Qed.
Lemma lem4912696 : term539 = False.
Proof. exact (TRANS (@lem4912693) (@lem4912695)). Qed.
Lemma lem4912697 : term530 = False.
Proof. exact (TRANS (@lem4912685) (@lem4912696)). Qed.
Lemma lem4912698 : term535 = False.
Proof. exact (TRANS (@lem4912682) (@lem4912697)). Qed.
Lemma lem4912699 : term532 = False.
Proof. exact (TRANS (@lem4912666) (@lem4912698)). Qed.
Lemma lem4912700 : term530 = False.
Proof. exact (TRANS (@lem4912643) (@lem4912699)). Qed.
Lemma lem4912701 : term529 = False.
Proof. exact (TRANS (@lem4912634) (@lem4912700)). Qed.
Lemma lem4912702 (_61039 : int) (_61040 : int) (h1 : term626 _61039 _61040) : False.
Proof. exact (EQ_MP (@lem4912701) (@lem4912631 _61039 _61040 h1)). Qed.
Lemma lem4912703 (_61039 : int) (_61040 : int) (h1 : term448 _61039 _61040) : False.
Proof. exact (or_elim (@lem4912118 _61039 _61040 h1) (fun h0 : term625 _61039 _61040 => @lem4912409 _61039 _61040 h0) (fun h0 : term626 _61039 _61040 => @lem4912702 _61039 _61040 h0)). Qed.
Lemma lem4912704 (_61039 : int) (_61040 : int) (h1 : term457 _61039 _61040) : False.
Proof. exact (or_elim (@lem4911357 _61039 _61040 h1) (fun h0 : term452 _61039 _61040 => @lem4912117 _61039 _61040 h0) (fun h0 : term448 _61039 _61040 => @lem4912703 _61039 _61040 h0)). Qed.
Lemma lem4912705 (_61039 : int) (_61040 : int) (h1 : term444 _61039 _61040) : term444 _61039 _61040.
Proof. exact (h1). Qed.
Lemma lem4912706 (_61039 : int) (_61040 : int) (h1 : term439 _61039 _61040) : term439 _61039 _61040.
Proof. exact (h1). Qed.
Lemma lem4912707 (_61039 : int) (_61040 : int) (h1 : term627 _61039 _61040) : term627 _61039 _61040.
Proof. exact (h1). Qed.
Lemma lem4912708 (_61039 : int) (_61040 : int) (h1 : term627 _61039 _61040) : term440 _61039 _61040.
Proof. exact (proj2 (@lem4912707 _61039 _61040 h1)). Qed.
Lemma lem4912710 (_61039 : int) (_61040 : int) (h1 : term627 _61039 _61040) : term391 _61039 _61040.
Proof. exact (proj2 (@lem4912708 _61039 _61040 h1)). Qed.
Lemma lem4912712 (_61039 : int) (_61040 : int) (h1 : term627 _61039 _61040) : term342 _61039 _61040.
Proof. exact (proj2 (@lem4912710 _61039 _61040 h1)). Qed.
Lemma lem4912713 (_61039 : int) (_61040 : int) (h1 : term627 _61039 _61040) : (term243 _61039 _61040) = term140.
Proof. exact (proj1 (@lem4912710 _61039 _61040 h1)). Qed.
Lemma lem4912715 (_61039 : int) (_61040 : int) (h1 : term627 _61039 _61040) : term287 _61039 _61040.
Proof. exact (proj1 (@lem4912712 _61039 _61040 h1)). Qed.
Lemma lem4912717 (y : real) (x : real) : (real_gt x y) = (real_lt y x).
Proof. exact (EQ_MP (@lem1980266 y x) (@lem1980265 y x)). Qed.
Lemma lem4912718 : term478 = term258.
Proof. exact (@lem4912717 term140 term150). Qed.
Lemma lem4912720 (x : nat) : (real_of_num x) = (term202 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem4912721 : term150 = term231.
Proof. exact (@lem4912720 term18). Qed.
Lemma lem4912723 (x : nat) : (real_of_num x) = (term202 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem4912724 : term140 = term203.
Proof. exact (@lem4912723 (NUMERAL 0)). Qed.
Lemma lem4912725 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem4912726 : term479 = term480.
Proof. exact (MK_COMB (@lem4912725) (@lem4912724)). Qed.
Lemma lem4912727 : term258 = term481.
Proof. exact (MK_COMB (@lem4912726) (@lem4912721)). Qed.
Lemma lem4912728 : term482.
Proof. exact (@lem1980255 term140 term150 term150 term150). Qed.
Lemma lem4912730 (m : nat) (n : nat) : (term257 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem4912731 : term258 = term259.
Proof. exact (@lem4912730 (NUMERAL 0) term18). Qed.
Lemma lem4912732 : term260 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem4912733 (h1 : term260 = (BIT1 0)) : term259 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem4912734 : (term260 = (BIT1 0)) = (term259 = True).
Proof. exact (prop_ext (fun h1 : term260 = (BIT1 0) => @lem4912733 h1) (fun h1 : term259 = True => @lem4912732)). Qed.
Lemma lem4912735 : term259 = True.
Proof. exact (EQ_MP (@lem4912734) (@lem4912732)). Qed.
Lemma lem4912736 : term258 = True.
Proof. exact (TRANS (@lem4912731) (@lem4912735)). Qed.
Lemma lem4912737 : True = term258.
Proof. exact (SYM (@lem4912736)). Qed.
Lemma lem4912738 : term258.
Proof. exact (EQ_MP (@lem4912737) (@lem0)). Qed.
Lemma lem4912739 : term483.
Proof. exact (@lem4912728 (@lem4912738)). Qed.
Lemma lem4912741 (m : nat) (n : nat) : (term257 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem4912742 : term258 = term259.
Proof. exact (@lem4912741 (NUMERAL 0) term18). Qed.
Lemma lem4912743 : term260 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem4912744 (h1 : term260 = (BIT1 0)) : term259 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem4912745 : (term260 = (BIT1 0)) = (term259 = True).
Proof. exact (prop_ext (fun h1 : term260 = (BIT1 0) => @lem4912744 h1) (fun h1 : term259 = True => @lem4912743)). Qed.
Lemma lem4912746 : term259 = True.
Proof. exact (EQ_MP (@lem4912745) (@lem4912743)). Qed.
Lemma lem4912747 : term258 = True.
Proof. exact (TRANS (@lem4912742) (@lem4912746)). Qed.
Lemma lem4912748 : True = term258.
Proof. exact (SYM (@lem4912747)). Qed.
Lemma lem4912749 : term258.
Proof. exact (EQ_MP (@lem4912748) (@lem0)). Qed.
Lemma lem4912750 : term481 = term484.
Proof. exact (@lem4912739 (@lem4912749)). Qed.
Lemma lem4912752 (m : nat) (n : nat) : (term213 m n) = (term214 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem4912753 : term215 = term216.
Proof. exact (@lem4912752 term18 term18). Qed.
Lemma lem4912754 : (term217 = (BIT1 0)) = (term218 = term18).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem4912755 : term218 = term18.
Proof. exact (EQ_MP (@lem4912754) (@lem940073)). Qed.
Lemma lem4912756 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem4912757 : term216 = term150.
Proof. exact (MK_COMB (@lem4912756) (@lem4912755)). Qed.
Lemma lem4912758 : term215 = term150.
Proof. exact (TRANS (@lem4912753) (@lem4912757)). Qed.
Lemma lem4912760 (x : nat) : (term271 x) = term140.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem4912761 : term270 = term140.
Proof. exact (@lem4912760 term18). Qed.
Lemma lem4912762 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem4912763 : term485 = term479.
Proof. exact (MK_COMB (@lem4912762) (@lem4912761)). Qed.
Lemma lem4912764 : term484 = term258.
Proof. exact (MK_COMB (@lem4912763) (@lem4912758)). Qed.
Lemma lem4912766 (m : nat) (n : nat) : (term257 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem4912767 : term258 = term259.
Proof. exact (@lem4912766 (NUMERAL 0) term18). Qed.
Lemma lem4912768 : term260 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem4912769 (h1 : term260 = (BIT1 0)) : term259 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem4912770 : (term260 = (BIT1 0)) = (term259 = True).
Proof. exact (prop_ext (fun h1 : term260 = (BIT1 0) => @lem4912769 h1) (fun h1 : term259 = True => @lem4912768)). Qed.
Lemma lem4912771 : term259 = True.
Proof. exact (EQ_MP (@lem4912770) (@lem4912768)). Qed.
Lemma lem4912772 : term258 = True.
Proof. exact (TRANS (@lem4912767) (@lem4912771)). Qed.
Lemma lem4912773 : term484 = True.
Proof. exact (TRANS (@lem4912764) (@lem4912772)). Qed.
Lemma lem4912774 : term481 = True.
Proof. exact (TRANS (@lem4912750) (@lem4912773)). Qed.
Lemma lem4912775 : term258 = True.
Proof. exact (TRANS (@lem4912727) (@lem4912774)). Qed.
Lemma lem4912776 : term478 = True.
Proof. exact (TRANS (@lem4912718) (@lem4912775)). Qed.
Lemma lem4912777 : True = term478.
Proof. exact (SYM (@lem4912776)). Qed.
Lemma lem4912778 : term478.
Proof. exact (EQ_MP (@lem4912777) (@lem0)). Qed.
Lemma lem4912779 (_61039 : int) (_61040 : int) (h1 : term627 _61039 _61040) : term486 _61039 _61040.
Proof. exact (conj (@lem4912778) (@lem4912715 _61039 _61040 h1)). Qed.
Lemma lem4912781 (x : real) (y : real) : term487 x y.
Proof. exact (proj1 (@lem1988332 x y)). Qed.
Lemma lem4912782 (_61039 : int) (_61040 : int) : term488 _61039 _61040.
Proof. exact (@lem4912781 term150 (term284 _61039 _61040)). Qed.
Lemma lem4912783 (_61039 : int) (_61040 : int) (h1 : term627 _61039 _61040) : term489 _61039 _61040.
Proof. exact (@lem4912782 _61039 _61040 (@lem4912779 _61039 _61040 h1)). Qed.
Lemma lem4912784 (_61039 : int) (_61040 : int) : (term490 _61039 _61040) = (term284 _61039 _61040).
Proof. exact (@lem1982733 (term284 _61039 _61040)). Qed.
Lemma lem4912785 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem4912786 (_61039 : int) (_61040 : int) : (term491 _61039 _61040) = (term286 _61039 _61040).
Proof. exact (MK_COMB (@lem4912785) (@lem4912784 _61039 _61040)). Qed.
Lemma lem4912787 : term140 = term140.
Proof. exact (eq_refl term140). Qed.
Lemma lem4912788 (_61039 : int) (_61040 : int) : (term489 _61039 _61040) = (term287 _61039 _61040).
Proof. exact (MK_COMB (@lem4912786 _61039 _61040) (@lem4912787)). Qed.
Lemma lem4912789 (_61039 : int) (_61040 : int) (h1 : term627 _61039 _61040) : term287 _61039 _61040.
Proof. exact (EQ_MP (@lem4912788 _61039 _61040) (@lem4912783 _61039 _61040 h1)). Qed.
Lemma lem4912791 (y : real) : term492 y.
Proof. exact (EQ_MP (@lem1396750 y) (@lem0)). Qed.
Lemma lem4912792 (_61039 : int) (_61040 : int) : term493 _61039 _61040.
Proof. exact (@lem4912791 (term243 _61039 _61040)). Qed.
Lemma lem4912793 (_61039 : int) (_61040 : int) (h1 : term627 _61039 _61040) : term494 _61039 _61040.
Proof. exact (@lem4912792 _61039 _61040 (@lem4912713 _61039 _61040 h1)). Qed.
Lemma lem4912794 (_61039 : int) (_61040 : int) (h1 : term627 _61039 _61040) : term495 _61039 _61040.
Proof. exact (@lem4912793 _61039 _61040 h1 term150). Qed.
Lemma lem4912795 (_61039 : int) (_61040 : int) : (term495 _61039 _61040) = ((term496 _61039 _61040) = term140).
Proof. exact (eq_refl (term495 _61039 _61040)). Qed.
Lemma lem4912796 (_61039 : int) (_61040 : int) (h1 : term627 _61039 _61040) : (term496 _61039 _61040) = term140.
Proof. exact (EQ_MP (@lem4912795 _61039 _61040) (@lem4912794 _61039 _61040 h1)). Qed.
Lemma lem4912797 (_61039 : int) (_61040 : int) : (term496 _61039 _61040) = (term243 _61039 _61040).
Proof. exact (@lem1982733 (term243 _61039 _61040)). Qed.
Lemma lem4912798 : (@eq real) = (@eq real).
Proof. exact (eq_refl (@eq real)). Qed.
Lemma lem4912799 (_61039 : int) (_61040 : int) : (term497 _61039 _61040) = (term246 _61039 _61040).
Proof. exact (MK_COMB (@lem4912798) (@lem4912797 _61039 _61040)). Qed.
Lemma lem4912800 : term140 = term140.
Proof. exact (eq_refl term140). Qed.
Lemma lem4912801 (_61039 : int) (_61040 : int) : ((term496 _61039 _61040) = term140) = ((term243 _61039 _61040) = term140).
Proof. exact (MK_COMB (@lem4912799 _61039 _61040) (@lem4912800)). Qed.
Lemma lem4912802 (_61039 : int) (_61040 : int) (h1 : term627 _61039 _61040) : (term243 _61039 _61040) = term140.
Proof. exact (EQ_MP (@lem4912801 _61039 _61040) (@lem4912796 _61039 _61040 h1)). Qed.
Lemma lem4912803 (_61039 : int) (_61040 : int) (h1 : term627 _61039 _61040) : term498 _61039 _61040.
Proof. exact (conj (@lem4912802 _61039 _61040 h1) (@lem4912789 _61039 _61040 h1)). Qed.
Lemma lem4912805 (x : real) (y : real) : term499 x y.
Proof. exact (proj1 (@lem1988336 x y)). Qed.
Lemma lem4912806 (_61039 : int) (_61040 : int) : term500 _61039 _61040.
Proof. exact (@lem4912805 (term243 _61039 _61040) (term284 _61039 _61040)). Qed.
Lemma lem4912807 (_61039 : int) (_61040 : int) (h1 : term627 _61039 _61040) : term501 _61039 _61040.
Proof. exact (@lem4912806 _61039 _61040 (@lem4912803 _61039 _61040 h1)). Qed.
Lemma lem4912808 (_61039 : int) (_61040 : int) : (term502 _61039 _61040) = (term503 _61039 _61040).
Proof. exact (@lem1982753 (term244 _61039) (real_of_int _61039) (term306 _61040) (term244 _61040)). Qed.
Lemma lem4912809 (_61039 : int) : (term504 _61039) = (term505 _61039).
Proof. exact (@lem1982713 term206 (real_of_int _61039)). Qed.
Lemma lem4912811 (x : nat) : (real_of_num x) = (term202 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem4912812 : term150 = term231.
Proof. exact (@lem4912811 term18). Qed.
Lemma lem4912814 (x : nat) : (term204 x) = (term205 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem4912815 : term206 = term207.
Proof. exact (@lem4912814 term18). Qed.
Lemma lem4912816 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem4912817 : term506 = term507.
Proof. exact (MK_COMB (@lem4912816) (@lem4912815)). Qed.
Lemma lem4912818 : term508 = term509.
Proof. exact (MK_COMB (@lem4912817) (@lem4912812)). Qed.
Lemma lem4912819 : term510.
Proof. exact (@lem1981473 term206 term150 term150 term150 term140 term150). Qed.
Lemma lem4912821 (m : nat) (n : nat) : (term257 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem4912822 : term258 = term259.
Proof. exact (@lem4912821 (NUMERAL 0) term18). Qed.
Lemma lem4912823 : term260 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem4912824 (h1 : term260 = (BIT1 0)) : term259 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem4912825 : (term260 = (BIT1 0)) = (term259 = True).
Proof. exact (prop_ext (fun h1 : term260 = (BIT1 0) => @lem4912824 h1) (fun h1 : term259 = True => @lem4912823)). Qed.
Lemma lem4912826 : term259 = True.
Proof. exact (EQ_MP (@lem4912825) (@lem4912823)). Qed.
Lemma lem4912827 : term258 = True.
Proof. exact (TRANS (@lem4912822) (@lem4912826)). Qed.
Lemma lem4912828 : True = term258.
Proof. exact (SYM (@lem4912827)). Qed.
Lemma lem4912829 : term258.
Proof. exact (EQ_MP (@lem4912828) (@lem0)). Qed.
Lemma lem4912830 : term511.
Proof. exact (@lem4912819 (@lem4912829)). Qed.
Lemma lem4912832 (m : nat) (n : nat) : (term257 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem4912833 : term258 = term259.
Proof. exact (@lem4912832 (NUMERAL 0) term18). Qed.
Lemma lem4912834 : term260 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem4912835 (h1 : term260 = (BIT1 0)) : term259 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem4912836 : (term260 = (BIT1 0)) = (term259 = True).
Proof. exact (prop_ext (fun h1 : term260 = (BIT1 0) => @lem4912835 h1) (fun h1 : term259 = True => @lem4912834)). Qed.
Lemma lem4912837 : term259 = True.
Proof. exact (EQ_MP (@lem4912836) (@lem4912834)). Qed.
Lemma lem4912838 : term258 = True.
Proof. exact (TRANS (@lem4912833) (@lem4912837)). Qed.
Lemma lem4912839 : True = term258.
Proof. exact (SYM (@lem4912838)). Qed.
Lemma lem4912840 : term258.
Proof. exact (EQ_MP (@lem4912839) (@lem0)). Qed.
Lemma lem4912841 : term512.
Proof. exact (@lem4912830 (@lem4912840)). Qed.
Lemma lem4912843 (m : nat) (n : nat) : (term257 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem4912844 : term258 = term259.
Proof. exact (@lem4912843 (NUMERAL 0) term18). Qed.
Lemma lem4912845 : term260 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem4912846 (h1 : term260 = (BIT1 0)) : term259 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem4912847 : (term260 = (BIT1 0)) = (term259 = True).
Proof. exact (prop_ext (fun h1 : term260 = (BIT1 0) => @lem4912846 h1) (fun h1 : term259 = True => @lem4912845)). Qed.
Lemma lem4912848 : term259 = True.
Proof. exact (EQ_MP (@lem4912847) (@lem4912845)). Qed.
Lemma lem4912849 : term258 = True.
Proof. exact (TRANS (@lem4912844) (@lem4912848)). Qed.
Lemma lem4912850 : True = term258.
Proof. exact (SYM (@lem4912849)). Qed.
Lemma lem4912851 : term258.
Proof. exact (EQ_MP (@lem4912850) (@lem0)). Qed.
Lemma lem4912852 : term513.
Proof. exact (@lem4912841 (@lem4912851)). Qed.
Lemma lem4912854 (m : nat) (n : nat) : (term213 m n) = (term214 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem4912855 : term215 = term216.
Proof. exact (@lem4912854 term18 term18). Qed.
Lemma lem4912856 : (term217 = (BIT1 0)) = (term218 = term18).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem4912857 : term218 = term18.
Proof. exact (EQ_MP (@lem4912856) (@lem940073)). Qed.
Lemma lem4912858 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem4912859 : term216 = term150.
Proof. exact (MK_COMB (@lem4912858) (@lem4912857)). Qed.
Lemma lem4912860 : term215 = term150.
Proof. exact (TRANS (@lem4912855) (@lem4912859)). Qed.
Lemma lem4912862 (m : nat) (n : nat) : (term235 m n) = (term236 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem4912863 : term232 = term237.
Proof. exact (@lem4912862 term18 term18). Qed.
Lemma lem4912864 : (term217 = (BIT1 0)) = (term218 = term18).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem4912865 : term218 = term18.
Proof. exact (EQ_MP (@lem4912864) (@lem940073)). Qed.
Lemma lem4912866 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem4912867 : term216 = term150.
Proof. exact (MK_COMB (@lem4912866) (@lem4912865)). Qed.
Lemma lem4912868 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem4912869 : term237 = term206.
Proof. exact (MK_COMB (@lem4912868) (@lem4912867)). Qed.
Lemma lem4912870 : term232 = term206.
Proof. exact (TRANS (@lem4912863) (@lem4912869)). Qed.
Lemma lem4912871 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem4912872 : term514 = term506.
Proof. exact (MK_COMB (@lem4912871) (@lem4912870)). Qed.
Lemma lem4912873 : term515 = term508.
Proof. exact (MK_COMB (@lem4912872) (@lem4912860)). Qed.
Lemma lem4912875 (m : nat) : (term516 m) = term140.
Proof. exact (proj1 (@lem1367303 m)). Qed.
Lemma lem4912876 : term508 = term140.
Proof. exact (@lem4912875 term18). Qed.
Lemma lem4912877 : term515 = term140.
Proof. exact (TRANS (@lem4912873) (@lem4912876)). Qed.
Lemma lem4912878 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem4912879 : term517 = term268.
Proof. exact (MK_COMB (@lem4912878) (@lem4912877)). Qed.
Lemma lem4912880 : term150 = term150.
Proof. exact (eq_refl term150). Qed.
Lemma lem4912881 : term518 = term270.
Proof. exact (MK_COMB (@lem4912879) (@lem4912880)). Qed.
Lemma lem4912883 (x : nat) : (term271 x) = term140.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem4912884 : term270 = term140.
Proof. exact (@lem4912883 term18). Qed.
Lemma lem4912885 : term518 = term140.
Proof. exact (TRANS (@lem4912881) (@lem4912884)). Qed.
Lemma lem4912887 (m : nat) (n : nat) : (term213 m n) = (term214 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem4912888 : term215 = term216.
Proof. exact (@lem4912887 term18 term18). Qed.
Lemma lem4912889 : (term217 = (BIT1 0)) = (term218 = term18).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem4912890 : term218 = term18.
Proof. exact (EQ_MP (@lem4912889) (@lem940073)). Qed.
Lemma lem4912891 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem4912892 : term216 = term150.
Proof. exact (MK_COMB (@lem4912891) (@lem4912890)). Qed.
Lemma lem4912893 : term215 = term150.
Proof. exact (TRANS (@lem4912888) (@lem4912892)). Qed.
Lemma lem4912894 : term268 = term268.
Proof. exact (eq_refl term268). Qed.
Lemma lem4912895 : term272 = term270.
Proof. exact (MK_COMB (@lem4912894) (@lem4912893)). Qed.
Lemma lem4912897 (x : nat) : (term271 x) = term140.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem4912898 : term270 = term140.
Proof. exact (@lem4912897 term18). Qed.
Lemma lem4912899 : term272 = term140.
Proof. exact (TRANS (@lem4912895) (@lem4912898)). Qed.
Lemma lem4912900 : term140 = term272.
Proof. exact (SYM (@lem4912899)). Qed.
Lemma lem4912901 : term518 = term272.
Proof. exact (TRANS (@lem4912885) (@lem4912900)). Qed.
Lemma lem4912902 : term509 = term203.
Proof. exact (@lem4912852 (@lem4912901)). Qed.
Lemma lem4912903 : term508 = term203.
Proof. exact (TRANS (@lem4912818) (@lem4912902)). Qed.
Lemma lem4912905 (x : real) : (term222 x) = x.
Proof. exact (EQ_MP (@lem1981475 x) (@lem1981474 x)). Qed.
Lemma lem4912906 : term203 = term140.
Proof. exact (@lem4912905 term140). Qed.
Lemma lem4912907 : term508 = term140.
Proof. exact (TRANS (@lem4912903) (@lem4912906)). Qed.
Lemma lem4912908 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem4912909 : term519 = term268.
Proof. exact (MK_COMB (@lem4912908) (@lem4912907)). Qed.
Lemma lem4912910 (_61039 : int) : (real_of_int _61039) = (real_of_int _61039).
Proof. exact (eq_refl (real_of_int _61039)). Qed.
Lemma lem4912911 (_61039 : int) : (term505 _61039) = (term520 _61039).
Proof. exact (MK_COMB (@lem4912909) (@lem4912910 _61039)). Qed.
Lemma lem4912912 (_61039 : int) : (term504 _61039) = (term520 _61039).
Proof. exact (TRANS (@lem4912809 _61039) (@lem4912911 _61039)). Qed.
Lemma lem4912913 (_61039 : int) : (term520 _61039) = term140.
Proof. exact (@lem1982719 (real_of_int _61039)). Qed.
Lemma lem4912914 (_61039 : int) : (term504 _61039) = term140.
Proof. exact (TRANS (@lem4912912 _61039) (@lem4912913 _61039)). Qed.
Lemma lem4912915 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem4912916 (_61039 : int) : (term521 _61039) = term182.
Proof. exact (MK_COMB (@lem4912915) (@lem4912914 _61039)). Qed.
Lemma lem4912917 (_61040 : int) : (term522 _61040) = (term523 _61040).
Proof. exact (@lem1982759 (real_of_int _61040) (term244 _61040) term206). Qed.
Lemma lem4912918 (_61040 : int) : (term524 _61040) = (term505 _61040).
Proof. exact (@lem1982715 term206 (real_of_int _61040)). Qed.
Lemma lem4912920 (x : nat) : (real_of_num x) = (term202 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem4912921 : term150 = term231.
Proof. exact (@lem4912920 term18). Qed.
Lemma lem4912923 (x : nat) : (term204 x) = (term205 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem4912924 : term206 = term207.
Proof. exact (@lem4912923 term18). Qed.
Lemma lem4912925 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem4912926 : term506 = term507.
Proof. exact (MK_COMB (@lem4912925) (@lem4912924)). Qed.
Lemma lem4912927 : term508 = term509.
Proof. exact (MK_COMB (@lem4912926) (@lem4912921)). Qed.
Lemma lem4912928 : term510.
Proof. exact (@lem1981473 term206 term150 term150 term150 term140 term150). Qed.
Lemma lem4912930 (m : nat) (n : nat) : (term257 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem4912931 : term258 = term259.
Proof. exact (@lem4912930 (NUMERAL 0) term18). Qed.
Lemma lem4912932 : term260 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem4912933 (h1 : term260 = (BIT1 0)) : term259 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem4912934 : (term260 = (BIT1 0)) = (term259 = True).
Proof. exact (prop_ext (fun h1 : term260 = (BIT1 0) => @lem4912933 h1) (fun h1 : term259 = True => @lem4912932)). Qed.
Lemma lem4912935 : term259 = True.
Proof. exact (EQ_MP (@lem4912934) (@lem4912932)). Qed.
Lemma lem4912936 : term258 = True.
Proof. exact (TRANS (@lem4912931) (@lem4912935)). Qed.
Lemma lem4912937 : True = term258.
Proof. exact (SYM (@lem4912936)). Qed.
Lemma lem4912938 : term258.
Proof. exact (EQ_MP (@lem4912937) (@lem0)). Qed.
Lemma lem4912939 : term511.
Proof. exact (@lem4912928 (@lem4912938)). Qed.
Lemma lem4912941 (m : nat) (n : nat) : (term257 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem4912942 : term258 = term259.
Proof. exact (@lem4912941 (NUMERAL 0) term18). Qed.
Lemma lem4912943 : term260 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem4912944 (h1 : term260 = (BIT1 0)) : term259 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem4912945 : (term260 = (BIT1 0)) = (term259 = True).
Proof. exact (prop_ext (fun h1 : term260 = (BIT1 0) => @lem4912944 h1) (fun h1 : term259 = True => @lem4912943)). Qed.
Lemma lem4912946 : term259 = True.
Proof. exact (EQ_MP (@lem4912945) (@lem4912943)). Qed.
Lemma lem4912947 : term258 = True.
Proof. exact (TRANS (@lem4912942) (@lem4912946)). Qed.
Lemma lem4912948 : True = term258.
Proof. exact (SYM (@lem4912947)). Qed.
Lemma lem4912949 : term258.
Proof. exact (EQ_MP (@lem4912948) (@lem0)). Qed.
Lemma lem4912950 : term512.
Proof. exact (@lem4912939 (@lem4912949)). Qed.
Lemma lem4912952 (m : nat) (n : nat) : (term257 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem4912953 : term258 = term259.
Proof. exact (@lem4912952 (NUMERAL 0) term18). Qed.
Lemma lem4912954 : term260 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem4912955 (h1 : term260 = (BIT1 0)) : term259 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem4912956 : (term260 = (BIT1 0)) = (term259 = True).
Proof. exact (prop_ext (fun h1 : term260 = (BIT1 0) => @lem4912955 h1) (fun h1 : term259 = True => @lem4912954)). Qed.
Lemma lem4912957 : term259 = True.
Proof. exact (EQ_MP (@lem4912956) (@lem4912954)). Qed.
Lemma lem4912958 : term258 = True.
Proof. exact (TRANS (@lem4912953) (@lem4912957)). Qed.
Lemma lem4912959 : True = term258.
Proof. exact (SYM (@lem4912958)). Qed.
Lemma lem4912960 : term258.
Proof. exact (EQ_MP (@lem4912959) (@lem0)). Qed.
Lemma lem4912961 : term513.
Proof. exact (@lem4912950 (@lem4912960)). Qed.
Lemma lem4912963 (m : nat) (n : nat) : (term213 m n) = (term214 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem4912964 : term215 = term216.
Proof. exact (@lem4912963 term18 term18). Qed.
Lemma lem4912965 : (term217 = (BIT1 0)) = (term218 = term18).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem4912966 : term218 = term18.
Proof. exact (EQ_MP (@lem4912965) (@lem940073)). Qed.
Lemma lem4912967 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem4912968 : term216 = term150.
Proof. exact (MK_COMB (@lem4912967) (@lem4912966)). Qed.
Lemma lem4912969 : term215 = term150.
Proof. exact (TRANS (@lem4912964) (@lem4912968)). Qed.
Lemma lem4912971 (m : nat) (n : nat) : (term235 m n) = (term236 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem4912972 : term232 = term237.
Proof. exact (@lem4912971 term18 term18). Qed.
Lemma lem4912973 : (term217 = (BIT1 0)) = (term218 = term18).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem4912974 : term218 = term18.
Proof. exact (EQ_MP (@lem4912973) (@lem940073)). Qed.
Lemma lem4912975 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem4912976 : term216 = term150.
Proof. exact (MK_COMB (@lem4912975) (@lem4912974)). Qed.
Lemma lem4912977 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem4912978 : term237 = term206.
Proof. exact (MK_COMB (@lem4912977) (@lem4912976)). Qed.
Lemma lem4912979 : term232 = term206.
Proof. exact (TRANS (@lem4912972) (@lem4912978)). Qed.
Lemma lem4912980 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem4912981 : term514 = term506.
Proof. exact (MK_COMB (@lem4912980) (@lem4912979)). Qed.
Lemma lem4912982 : term515 = term508.
Proof. exact (MK_COMB (@lem4912981) (@lem4912969)). Qed.
Lemma lem4912984 (m : nat) : (term516 m) = term140.
Proof. exact (proj1 (@lem1367303 m)). Qed.
Lemma lem4912985 : term508 = term140.
Proof. exact (@lem4912984 term18). Qed.
Lemma lem4912986 : term515 = term140.
Proof. exact (TRANS (@lem4912982) (@lem4912985)). Qed.
Lemma lem4912987 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem4912988 : term517 = term268.
Proof. exact (MK_COMB (@lem4912987) (@lem4912986)). Qed.
Lemma lem4912989 : term150 = term150.
Proof. exact (eq_refl term150). Qed.
Lemma lem4912990 : term518 = term270.
Proof. exact (MK_COMB (@lem4912988) (@lem4912989)). Qed.
Lemma lem4912992 (x : nat) : (term271 x) = term140.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem4912993 : term270 = term140.
Proof. exact (@lem4912992 term18). Qed.
Lemma lem4912994 : term518 = term140.
Proof. exact (TRANS (@lem4912990) (@lem4912993)). Qed.
Lemma lem4912996 (m : nat) (n : nat) : (term213 m n) = (term214 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem4912997 : term215 = term216.
Proof. exact (@lem4912996 term18 term18). Qed.
Lemma lem4912998 : (term217 = (BIT1 0)) = (term218 = term18).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem4912999 : term218 = term18.
Proof. exact (EQ_MP (@lem4912998) (@lem940073)). Qed.
Lemma lem4913000 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem4913001 : term216 = term150.
Proof. exact (MK_COMB (@lem4913000) (@lem4912999)). Qed.
Lemma lem4913002 : term215 = term150.
Proof. exact (TRANS (@lem4912997) (@lem4913001)). Qed.
Lemma lem4913003 : term268 = term268.
Proof. exact (eq_refl term268). Qed.
Lemma lem4913004 : term272 = term270.
Proof. exact (MK_COMB (@lem4913003) (@lem4913002)). Qed.
Lemma lem4913006 (x : nat) : (term271 x) = term140.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem4913007 : term270 = term140.
Proof. exact (@lem4913006 term18). Qed.
Lemma lem4913008 : term272 = term140.
Proof. exact (TRANS (@lem4913004) (@lem4913007)). Qed.
Lemma lem4913009 : term140 = term272.
Proof. exact (SYM (@lem4913008)). Qed.
Lemma lem4913010 : term518 = term272.
Proof. exact (TRANS (@lem4912994) (@lem4913009)). Qed.
Lemma lem4913011 : term509 = term203.
Proof. exact (@lem4912961 (@lem4913010)). Qed.
Lemma lem4913012 : term508 = term203.
Proof. exact (TRANS (@lem4912927) (@lem4913011)). Qed.
Lemma lem4913014 (x : real) : (term222 x) = x.
Proof. exact (EQ_MP (@lem1981475 x) (@lem1981474 x)). Qed.
Lemma lem4913015 : term203 = term140.
Proof. exact (@lem4913014 term140). Qed.
Lemma lem4913016 : term508 = term140.
Proof. exact (TRANS (@lem4913012) (@lem4913015)). Qed.
Lemma lem4913017 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem4913018 : term519 = term268.
Proof. exact (MK_COMB (@lem4913017) (@lem4913016)). Qed.
Lemma lem4913019 (_61040 : int) : (real_of_int _61040) = (real_of_int _61040).
Proof. exact (eq_refl (real_of_int _61040)). Qed.
Lemma lem4913020 (_61040 : int) : (term505 _61040) = (term520 _61040).
Proof. exact (MK_COMB (@lem4913018) (@lem4913019 _61040)). Qed.
Lemma lem4913021 (_61040 : int) : (term524 _61040) = (term520 _61040).
Proof. exact (TRANS (@lem4912918 _61040) (@lem4913020 _61040)). Qed.
Lemma lem4913022 (_61040 : int) : (term520 _61040) = term140.
Proof. exact (@lem1982719 (real_of_int _61040)). Qed.
Lemma lem4913023 (_61040 : int) : (term524 _61040) = term140.
Proof. exact (TRANS (@lem4913021 _61040) (@lem4913022 _61040)). Qed.
Lemma lem4913024 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem4913025 (_61040 : int) : (term525 _61040) = term182.
Proof. exact (MK_COMB (@lem4913024) (@lem4913023 _61040)). Qed.
Lemma lem4913026 : term206 = term206.
Proof. exact (eq_refl term206). Qed.
Lemma lem4913027 (_61040 : int) : (term523 _61040) = term526.
Proof. exact (MK_COMB (@lem4913025 _61040) (@lem4913026)). Qed.
Lemma lem4913028 (_61040 : int) : (term522 _61040) = term526.
Proof. exact (TRANS (@lem4912917 _61040) (@lem4913027 _61040)). Qed.
Lemma lem4913029 : term526 = term206.
Proof. exact (@lem1982721 term206). Qed.
Lemma lem4913030 (_61040 : int) : (term522 _61040) = term206.
Proof. exact (TRANS (@lem4913028 _61040) (@lem4913029)). Qed.
Lemma lem4913031 (_61039 : int) (_61040 : int) : (term503 _61039 _61040) = term526.
Proof. exact (MK_COMB (@lem4912916 _61039) (@lem4913030 _61040)). Qed.
Lemma lem4913032 (_61039 : int) (_61040 : int) : (term502 _61039 _61040) = term526.
Proof. exact (TRANS (@lem4912808 _61039 _61040) (@lem4913031 _61039 _61040)). Qed.
Lemma lem4913033 : term526 = term206.
Proof. exact (@lem1982721 term206). Qed.
Lemma lem4913034 (_61039 : int) (_61040 : int) : (term502 _61039 _61040) = term206.
Proof. exact (TRANS (@lem4913032 _61039 _61040) (@lem4913033)). Qed.
Lemma lem4913035 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem4913036 (_61039 : int) (_61040 : int) : (term527 _61039 _61040) = term528.
Proof. exact (MK_COMB (@lem4913035) (@lem4913034 _61039 _61040)). Qed.
Lemma lem4913037 : term140 = term140.
Proof. exact (eq_refl term140). Qed.
Lemma lem4913038 (_61039 : int) (_61040 : int) : (term501 _61039 _61040) = term529.
Proof. exact (MK_COMB (@lem4913036 _61039 _61040) (@lem4913037)). Qed.
Lemma lem4913039 (_61039 : int) (_61040 : int) (h1 : term627 _61039 _61040) : term529.
Proof. exact (EQ_MP (@lem4913038 _61039 _61040) (@lem4912807 _61039 _61040 h1)). Qed.
Lemma lem4913041 (y : real) (x : real) : (real_ge x y) = (real_le y x).
Proof. exact (EQ_MP (@lem1980260 y x) (@lem1980259 y x)). Qed.
Lemma lem4913042 : term529 = term530.
Proof. exact (@lem4913041 term140 term206). Qed.
Lemma lem4913044 (x : nat) : (term204 x) = (term205 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem4913045 : term206 = term207.
Proof. exact (@lem4913044 term18). Qed.
Lemma lem4913047 (x : nat) : (real_of_num x) = (term202 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem4913048 : term140 = term203.
Proof. exact (@lem4913047 (NUMERAL 0)). Qed.
Lemma lem4913049 : real_le = real_le.
Proof. exact (eq_refl real_le). Qed.
Lemma lem4913050 : term142 = term531.
Proof. exact (MK_COMB (@lem4913049) (@lem4913048)). Qed.
Lemma lem4913051 : term530 = term532.
Proof. exact (MK_COMB (@lem4913050) (@lem4913045)). Qed.
Lemma lem4913052 : term533.
Proof. exact (@lem1980026 term140 term150 term206 term150). Qed.
Lemma lem4913054 (m : nat) (n : nat) : (term257 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem4913055 : term258 = term259.
Proof. exact (@lem4913054 (NUMERAL 0) term18). Qed.
Lemma lem4913056 : term260 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem4913057 (h1 : term260 = (BIT1 0)) : term259 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem4913058 : (term260 = (BIT1 0)) = (term259 = True).
Proof. exact (prop_ext (fun h1 : term260 = (BIT1 0) => @lem4913057 h1) (fun h1 : term259 = True => @lem4913056)). Qed.
Lemma lem4913059 : term259 = True.
Proof. exact (EQ_MP (@lem4913058) (@lem4913056)). Qed.
Lemma lem4913060 : term258 = True.
Proof. exact (TRANS (@lem4913055) (@lem4913059)). Qed.
Lemma lem4913061 : True = term258.
Proof. exact (SYM (@lem4913060)). Qed.
Lemma lem4913062 : term258.
Proof. exact (EQ_MP (@lem4913061) (@lem0)). Qed.
Lemma lem4913063 : term534.
Proof. exact (@lem4913052 (@lem4913062)). Qed.
Lemma lem4913065 (m : nat) (n : nat) : (term257 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem4913066 : term258 = term259.
Proof. exact (@lem4913065 (NUMERAL 0) term18). Qed.
Lemma lem4913067 : term260 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem4913068 (h1 : term260 = (BIT1 0)) : term259 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem4913069 : (term260 = (BIT1 0)) = (term259 = True).
Proof. exact (prop_ext (fun h1 : term260 = (BIT1 0) => @lem4913068 h1) (fun h1 : term259 = True => @lem4913067)). Qed.
Lemma lem4913070 : term259 = True.
Proof. exact (EQ_MP (@lem4913069) (@lem4913067)). Qed.
Lemma lem4913071 : term258 = True.
Proof. exact (TRANS (@lem4913066) (@lem4913070)). Qed.
Lemma lem4913072 : True = term258.
Proof. exact (SYM (@lem4913071)). Qed.
Lemma lem4913073 : term258.
Proof. exact (EQ_MP (@lem4913072) (@lem0)). Qed.
Lemma lem4913074 : term532 = term535.
Proof. exact (@lem4913063 (@lem4913073)). Qed.
Lemma lem4913076 (m : nat) (n : nat) : (term235 m n) = (term236 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem4913077 : term232 = term237.
Proof. exact (@lem4913076 term18 term18). Qed.
Lemma lem4913078 : (term217 = (BIT1 0)) = (term218 = term18).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem4913079 : term218 = term18.
Proof. exact (EQ_MP (@lem4913078) (@lem940073)). Qed.
Lemma lem4913080 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem4913081 : term216 = term150.
Proof. exact (MK_COMB (@lem4913080) (@lem4913079)). Qed.
Lemma lem4913082 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem4913083 : term237 = term206.
Proof. exact (MK_COMB (@lem4913082) (@lem4913081)). Qed.
Lemma lem4913084 : term232 = term206.
Proof. exact (TRANS (@lem4913077) (@lem4913083)). Qed.
Lemma lem4913086 (x : nat) : (term271 x) = term140.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem4913087 : term270 = term140.
Proof. exact (@lem4913086 term18). Qed.
Lemma lem4913088 : real_le = real_le.
Proof. exact (eq_refl real_le). Qed.
Lemma lem4913089 : term536 = term142.
Proof. exact (MK_COMB (@lem4913088) (@lem4913087)). Qed.
Lemma lem4913090 : term535 = term530.
Proof. exact (MK_COMB (@lem4913089) (@lem4913084)). Qed.
Lemma lem4913092 (m : nat) (n : nat) : (term537 m n) = (term538 m n).
Proof. exact (proj2 (@lem1365406 m n)). Qed.
Lemma lem4913093 : term530 = term539.
Proof. exact (@lem4913092 (NUMERAL 0) term18). Qed.
Lemma lem4913094 : term260 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem4913095 (h1 : term260 = (BIT1 0)) : (term18 = (NUMERAL 0)) = False.
Proof. exact (@lem1013352 0 0 (BIT1 0) h1). Qed.
Lemma lem4913096 : (term260 = (BIT1 0)) = ((term18 = (NUMERAL 0)) = False).
Proof. exact (prop_ext (fun h1 : term260 = (BIT1 0) => @lem4913095 h1) (fun h1 : (term18 = (NUMERAL 0)) = False => @lem4913094)). Qed.
Lemma lem4913097 : (term18 = (NUMERAL 0)) = False.
Proof. exact (EQ_MP (@lem4913096) (@lem4913094)). Qed.
Lemma lem4913098 : ((NUMERAL 0) = (NUMERAL 0)) = True.
Proof. exact (@lem1013364 0). Qed.
Lemma lem4913099 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4913100 : term540 = (and True).
Proof. exact (MK_COMB (@lem4913099) (@lem4913098)). Qed.
Lemma lem4913101 : term539 = (True /\ False).
Proof. exact (MK_COMB (@lem4913100) (@lem4913097)). Qed.
Lemma lem4913103 : (True /\ False) = False.
Proof. exact (proj1 (@lem1365106)). Qed.
Lemma lem4913104 : term539 = False.
Proof. exact (TRANS (@lem4913101) (@lem4913103)). Qed.
Lemma lem4913105 : term530 = False.
Proof. exact (TRANS (@lem4913093) (@lem4913104)). Qed.
Lemma lem4913106 : term535 = False.
Proof. exact (TRANS (@lem4913090) (@lem4913105)). Qed.
Lemma lem4913107 : term532 = False.
Proof. exact (TRANS (@lem4913074) (@lem4913106)). Qed.
Lemma lem4913108 : term530 = False.
Proof. exact (TRANS (@lem4913051) (@lem4913107)). Qed.
Lemma lem4913109 : term529 = False.
Proof. exact (TRANS (@lem4913042) (@lem4913108)). Qed.
Lemma lem4913110 (_61039 : int) (_61040 : int) (h1 : term627 _61039 _61040) : False.
Proof. exact (EQ_MP (@lem4913109) (@lem4913039 _61039 _61040 h1)). Qed.
Lemma lem4913111 (_61039 : int) (_61040 : int) (h1 : term628 _61039 _61040) : term628 _61039 _61040.
Proof. exact (h1). Qed.
Lemma lem4913112 (_61039 : int) (_61040 : int) (h1 : term628 _61039 _61040) : term441 _61039 _61040.
Proof. exact (proj2 (@lem4913111 _61039 _61040 h1)). Qed.
Lemma lem4913114 (_61039 : int) (_61040 : int) (h1 : term628 _61039 _61040) : term392 _61039 _61040.
Proof. exact (proj2 (@lem4913112 _61039 _61040 h1)). Qed.
Lemma lem4913116 (_61039 : int) (_61040 : int) (h1 : term628 _61039 _61040) : term342 _61039 _61040.
Proof. exact (proj2 (@lem4913114 _61039 _61040 h1)). Qed.
Lemma lem4913117 (_61039 : int) (_61040 : int) (h1 : term628 _61039 _61040) : term279 _61040 _61039.
Proof. exact (proj1 (@lem4913114 _61039 _61040 h1)). Qed.
Lemma lem4913118 (_61039 : int) (_61040 : int) (h1 : term628 _61039 _61040) : (real_of_int _61039) = term140.
Proof. exact (proj2 (@lem4913117 _61039 _61040 h1)). Qed.
Lemma lem4913120 (_61039 : int) (_61040 : int) (h1 : term628 _61039 _61040) : term309 _61040.
Proof. exact (proj2 (@lem4913116 _61039 _61040 h1)). Qed.
Lemma lem4913121 (_61039 : int) (_61040 : int) (h1 : term628 _61039 _61040) : term287 _61039 _61040.
Proof. exact (proj1 (@lem4913116 _61039 _61040 h1)). Qed.
Lemma lem4913123 (y : real) (x : real) : (real_gt x y) = (real_lt y x).
Proof. exact (EQ_MP (@lem1980266 y x) (@lem1980265 y x)). Qed.
Lemma lem4913124 : term478 = term258.
Proof. exact (@lem4913123 term140 term150). Qed.
Lemma lem4913126 (x : nat) : (real_of_num x) = (term202 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem4913127 : term150 = term231.
Proof. exact (@lem4913126 term18). Qed.
Lemma lem4913129 (x : nat) : (real_of_num x) = (term202 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem4913130 : term140 = term203.
Proof. exact (@lem4913129 (NUMERAL 0)). Qed.
Lemma lem4913131 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem4913132 : term479 = term480.
Proof. exact (MK_COMB (@lem4913131) (@lem4913130)). Qed.
Lemma lem4913133 : term258 = term481.
Proof. exact (MK_COMB (@lem4913132) (@lem4913127)). Qed.
Lemma lem4913134 : term482.
Proof. exact (@lem1980255 term140 term150 term150 term150). Qed.
Lemma lem4913136 (m : nat) (n : nat) : (term257 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem4913137 : term258 = term259.
Proof. exact (@lem4913136 (NUMERAL 0) term18). Qed.
Lemma lem4913138 : term260 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem4913139 (h1 : term260 = (BIT1 0)) : term259 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem4913140 : (term260 = (BIT1 0)) = (term259 = True).
Proof. exact (prop_ext (fun h1 : term260 = (BIT1 0) => @lem4913139 h1) (fun h1 : term259 = True => @lem4913138)). Qed.
Lemma lem4913141 : term259 = True.
Proof. exact (EQ_MP (@lem4913140) (@lem4913138)). Qed.
Lemma lem4913142 : term258 = True.
Proof. exact (TRANS (@lem4913137) (@lem4913141)). Qed.
Lemma lem4913143 : True = term258.
Proof. exact (SYM (@lem4913142)). Qed.
Lemma lem4913144 : term258.
Proof. exact (EQ_MP (@lem4913143) (@lem0)). Qed.
Lemma lem4913145 : term483.
Proof. exact (@lem4913134 (@lem4913144)). Qed.
Lemma lem4913147 (m : nat) (n : nat) : (term257 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem4913148 : term258 = term259.
Proof. exact (@lem4913147 (NUMERAL 0) term18). Qed.
Lemma lem4913149 : term260 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem4913150 (h1 : term260 = (BIT1 0)) : term259 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem4913151 : (term260 = (BIT1 0)) = (term259 = True).
Proof. exact (prop_ext (fun h1 : term260 = (BIT1 0) => @lem4913150 h1) (fun h1 : term259 = True => @lem4913149)). Qed.
Lemma lem4913152 : term259 = True.
Proof. exact (EQ_MP (@lem4913151) (@lem4913149)). Qed.
Lemma lem4913153 : term258 = True.
Proof. exact (TRANS (@lem4913148) (@lem4913152)). Qed.
Lemma lem4913154 : True = term258.
Proof. exact (SYM (@lem4913153)). Qed.
Lemma lem4913155 : term258.
Proof. exact (EQ_MP (@lem4913154) (@lem0)). Qed.
Lemma lem4913156 : term481 = term484.
Proof. exact (@lem4913145 (@lem4913155)). Qed.
Lemma lem4913158 (m : nat) (n : nat) : (term213 m n) = (term214 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem4913159 : term215 = term216.
Proof. exact (@lem4913158 term18 term18). Qed.
Lemma lem4913160 : (term217 = (BIT1 0)) = (term218 = term18).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem4913161 : term218 = term18.
Proof. exact (EQ_MP (@lem4913160) (@lem940073)). Qed.
Lemma lem4913162 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem4913163 : term216 = term150.
Proof. exact (MK_COMB (@lem4913162) (@lem4913161)). Qed.
Lemma lem4913164 : term215 = term150.
Proof. exact (TRANS (@lem4913159) (@lem4913163)). Qed.
Lemma lem4913166 (x : nat) : (term271 x) = term140.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem4913167 : term270 = term140.
Proof. exact (@lem4913166 term18). Qed.
Lemma lem4913168 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem4913169 : term485 = term479.
Proof. exact (MK_COMB (@lem4913168) (@lem4913167)). Qed.
Lemma lem4913170 : term484 = term258.
Proof. exact (MK_COMB (@lem4913169) (@lem4913164)). Qed.
Lemma lem4913172 (m : nat) (n : nat) : (term257 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem4913173 : term258 = term259.
Proof. exact (@lem4913172 (NUMERAL 0) term18). Qed.
Lemma lem4913174 : term260 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem4913175 (h1 : term260 = (BIT1 0)) : term259 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem4913176 : (term260 = (BIT1 0)) = (term259 = True).
Proof. exact (prop_ext (fun h1 : term260 = (BIT1 0) => @lem4913175 h1) (fun h1 : term259 = True => @lem4913174)). Qed.
Lemma lem4913177 : term259 = True.
Proof. exact (EQ_MP (@lem4913176) (@lem4913174)). Qed.
Lemma lem4913178 : term258 = True.
Proof. exact (TRANS (@lem4913173) (@lem4913177)). Qed.
Lemma lem4913179 : term484 = True.
Proof. exact (TRANS (@lem4913170) (@lem4913178)). Qed.
Lemma lem4913180 : term481 = True.
Proof. exact (TRANS (@lem4913156) (@lem4913179)). Qed.
Lemma lem4913181 : term258 = True.
Proof. exact (TRANS (@lem4913133) (@lem4913180)). Qed.
Lemma lem4913182 : term478 = True.
Proof. exact (TRANS (@lem4913124) (@lem4913181)). Qed.
Lemma lem4913183 : True = term478.
Proof. exact (SYM (@lem4913182)). Qed.
Lemma lem4913184 : term478.
Proof. exact (EQ_MP (@lem4913183) (@lem0)). Qed.
Lemma lem4913185 (_61039 : int) (_61040 : int) (h1 : term628 _61039 _61040) : term558 _61040.
Proof. exact (conj (@lem4913184) (@lem4913120 _61039 _61040 h1)). Qed.
Lemma lem4913187 (x : real) (y : real) : term487 x y.
Proof. exact (proj1 (@lem1988332 x y)). Qed.
Lemma lem4913188 (_61040 : int) : term559 _61040.
Proof. exact (@lem4913187 term150 (term306 _61040)). Qed.
Lemma lem4913189 (_61039 : int) (_61040 : int) (h1 : term628 _61039 _61040) : term560 _61040.
Proof. exact (@lem4913188 _61040 (@lem4913185 _61039 _61040 h1)). Qed.
Lemma lem4913190 (_61040 : int) : (term561 _61040) = (term306 _61040).
Proof. exact (@lem1982733 (term306 _61040)). Qed.
Lemma lem4913191 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem4913192 (_61040 : int) : (term562 _61040) = (term308 _61040).
Proof. exact (MK_COMB (@lem4913191) (@lem4913190 _61040)). Qed.
Lemma lem4913193 : term140 = term140.
Proof. exact (eq_refl term140). Qed.
Lemma lem4913194 (_61040 : int) : (term560 _61040) = (term309 _61040).
Proof. exact (MK_COMB (@lem4913192 _61040) (@lem4913193)). Qed.
Lemma lem4913195 (_61039 : int) (_61040 : int) (h1 : term628 _61039 _61040) : term309 _61040.
Proof. exact (EQ_MP (@lem4913194 _61040) (@lem4913189 _61039 _61040 h1)). Qed.
Lemma lem4913197 (y : real) (x : real) : (real_gt x y) = (real_lt y x).
Proof. exact (EQ_MP (@lem1980266 y x) (@lem1980265 y x)). Qed.
Lemma lem4913198 : term478 = term258.
Proof. exact (@lem4913197 term140 term150). Qed.
Lemma lem4913200 (x : nat) : (real_of_num x) = (term202 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem4913201 : term150 = term231.
Proof. exact (@lem4913200 term18). Qed.
Lemma lem4913203 (x : nat) : (real_of_num x) = (term202 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem4913204 : term140 = term203.
Proof. exact (@lem4913203 (NUMERAL 0)). Qed.
Lemma lem4913205 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem4913206 : term479 = term480.
Proof. exact (MK_COMB (@lem4913205) (@lem4913204)). Qed.
Lemma lem4913207 : term258 = term481.
Proof. exact (MK_COMB (@lem4913206) (@lem4913201)). Qed.
Lemma lem4913208 : term482.
Proof. exact (@lem1980255 term140 term150 term150 term150). Qed.
Lemma lem4913210 (m : nat) (n : nat) : (term257 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem4913211 : term258 = term259.
Proof. exact (@lem4913210 (NUMERAL 0) term18). Qed.
Lemma lem4913212 : term260 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem4913213 (h1 : term260 = (BIT1 0)) : term259 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem4913214 : (term260 = (BIT1 0)) = (term259 = True).
Proof. exact (prop_ext (fun h1 : term260 = (BIT1 0) => @lem4913213 h1) (fun h1 : term259 = True => @lem4913212)). Qed.
Lemma lem4913215 : term259 = True.
Proof. exact (EQ_MP (@lem4913214) (@lem4913212)). Qed.
Lemma lem4913216 : term258 = True.
Proof. exact (TRANS (@lem4913211) (@lem4913215)). Qed.
Lemma lem4913217 : True = term258.
Proof. exact (SYM (@lem4913216)). Qed.
Lemma lem4913218 : term258.
Proof. exact (EQ_MP (@lem4913217) (@lem0)). Qed.
Lemma lem4913219 : term483.
Proof. exact (@lem4913208 (@lem4913218)). Qed.
Lemma lem4913221 (m : nat) (n : nat) : (term257 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem4913222 : term258 = term259.
Proof. exact (@lem4913221 (NUMERAL 0) term18). Qed.
Lemma lem4913223 : term260 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem4913224 (h1 : term260 = (BIT1 0)) : term259 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem4913225 : (term260 = (BIT1 0)) = (term259 = True).
Proof. exact (prop_ext (fun h1 : term260 = (BIT1 0) => @lem4913224 h1) (fun h1 : term259 = True => @lem4913223)). Qed.
Lemma lem4913226 : term259 = True.
Proof. exact (EQ_MP (@lem4913225) (@lem4913223)). Qed.
Lemma lem4913227 : term258 = True.
Proof. exact (TRANS (@lem4913222) (@lem4913226)). Qed.
Lemma lem4913228 : True = term258.
Proof. exact (SYM (@lem4913227)). Qed.
Lemma lem4913229 : term258.
Proof. exact (EQ_MP (@lem4913228) (@lem0)). Qed.
Lemma lem4913230 : term481 = term484.
Proof. exact (@lem4913219 (@lem4913229)). Qed.
Lemma lem4913232 (m : nat) (n : nat) : (term213 m n) = (term214 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem4913233 : term215 = term216.
Proof. exact (@lem4913232 term18 term18). Qed.
Lemma lem4913234 : (term217 = (BIT1 0)) = (term218 = term18).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem4913235 : term218 = term18.
Proof. exact (EQ_MP (@lem4913234) (@lem940073)). Qed.
Lemma lem4913236 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem4913237 : term216 = term150.
Proof. exact (MK_COMB (@lem4913236) (@lem4913235)). Qed.
Lemma lem4913238 : term215 = term150.
Proof. exact (TRANS (@lem4913233) (@lem4913237)). Qed.
Lemma lem4913240 (x : nat) : (term271 x) = term140.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem4913241 : term270 = term140.
Proof. exact (@lem4913240 term18). Qed.
Lemma lem4913242 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem4913243 : term485 = term479.
Proof. exact (MK_COMB (@lem4913242) (@lem4913241)). Qed.
Lemma lem4913244 : term484 = term258.
Proof. exact (MK_COMB (@lem4913243) (@lem4913238)). Qed.
Lemma lem4913246 (m : nat) (n : nat) : (term257 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem4913247 : term258 = term259.
Proof. exact (@lem4913246 (NUMERAL 0) term18). Qed.
Lemma lem4913248 : term260 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem4913249 (h1 : term260 = (BIT1 0)) : term259 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem4913250 : (term260 = (BIT1 0)) = (term259 = True).
Proof. exact (prop_ext (fun h1 : term260 = (BIT1 0) => @lem4913249 h1) (fun h1 : term259 = True => @lem4913248)). Qed.
Lemma lem4913251 : term259 = True.
Proof. exact (EQ_MP (@lem4913250) (@lem4913248)). Qed.
Lemma lem4913252 : term258 = True.
Proof. exact (TRANS (@lem4913247) (@lem4913251)). Qed.
Lemma lem4913253 : term484 = True.
Proof. exact (TRANS (@lem4913244) (@lem4913252)). Qed.
Lemma lem4913254 : term481 = True.
Proof. exact (TRANS (@lem4913230) (@lem4913253)). Qed.
Lemma lem4913255 : term258 = True.
Proof. exact (TRANS (@lem4913207) (@lem4913254)). Qed.
Lemma lem4913256 : term478 = True.
Proof. exact (TRANS (@lem4913198) (@lem4913255)). Qed.
Lemma lem4913257 : True = term478.
Proof. exact (SYM (@lem4913256)). Qed.
Lemma lem4913258 : term478.
Proof. exact (EQ_MP (@lem4913257) (@lem0)). Qed.
Lemma lem4913259 (_61039 : int) (_61040 : int) (h1 : term628 _61039 _61040) : term486 _61039 _61040.
Proof. exact (conj (@lem4913258) (@lem4913121 _61039 _61040 h1)). Qed.
Lemma lem4913261 (x : real) (y : real) : term487 x y.
Proof. exact (proj1 (@lem1988332 x y)). Qed.
Lemma lem4913262 (_61039 : int) (_61040 : int) : term488 _61039 _61040.
Proof. exact (@lem4913261 term150 (term284 _61039 _61040)). Qed.
Lemma lem4913263 (_61039 : int) (_61040 : int) (h1 : term628 _61039 _61040) : term489 _61039 _61040.
Proof. exact (@lem4913262 _61039 _61040 (@lem4913259 _61039 _61040 h1)). Qed.
Lemma lem4913264 (_61039 : int) (_61040 : int) : (term490 _61039 _61040) = (term284 _61039 _61040).
Proof. exact (@lem1982733 (term284 _61039 _61040)). Qed.
Lemma lem4913265 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem4913266 (_61039 : int) (_61040 : int) : (term491 _61039 _61040) = (term286 _61039 _61040).
Proof. exact (MK_COMB (@lem4913265) (@lem4913264 _61039 _61040)). Qed.
Lemma lem4913267 : term140 = term140.
Proof. exact (eq_refl term140). Qed.
Lemma lem4913268 (_61039 : int) (_61040 : int) : (term489 _61039 _61040) = (term287 _61039 _61040).
Proof. exact (MK_COMB (@lem4913266 _61039 _61040) (@lem4913267)). Qed.
Lemma lem4913269 (_61039 : int) (_61040 : int) (h1 : term628 _61039 _61040) : term287 _61039 _61040.
Proof. exact (EQ_MP (@lem4913268 _61039 _61040) (@lem4913263 _61039 _61040 h1)). Qed.
Lemma lem4913271 (y : real) : term492 y.
Proof. exact (EQ_MP (@lem1396750 y) (@lem0)). Qed.
Lemma lem4913272 (_61039 : int) : term546 _61039.
Proof. exact (@lem4913271 (real_of_int _61039)). Qed.
Lemma lem4913273 (_61039 : int) (_61040 : int) (h1 : term628 _61039 _61040) : term547 _61039.
Proof. exact (@lem4913272 _61039 (@lem4913118 _61039 _61040 h1)). Qed.
Lemma lem4913274 (_61039 : int) (_61040 : int) (h1 : term628 _61039 _61040) : term563 _61039.
Proof. exact (@lem4913273 _61039 _61040 h1 term206). Qed.
Lemma lem4913275 (_61039 : int) : (term563 _61039) = ((term244 _61039) = term140).
Proof. exact (eq_refl (term563 _61039)). Qed.
Lemma lem4913282 (_61039 : int) (_61040 : int) (h1 : term628 _61039 _61040) : (term244 _61039) = term140.
Proof. exact (EQ_MP (@lem4913275 _61039) (@lem4913274 _61039 _61040 h1)). Qed.
Lemma lem4913283 (_61039 : int) (_61040 : int) (h1 : term628 _61039 _61040) : term564 _61039 _61040.
Proof. exact (conj (@lem4913282 _61039 _61040 h1) (@lem4913269 _61039 _61040 h1)). Qed.
Lemma lem4913285 (x : real) (y : real) : term499 x y.
Proof. exact (proj1 (@lem1988336 x y)). Qed.
Lemma lem4913286 (_61039 : int) (_61040 : int) : term565 _61039 _61040.
Proof. exact (@lem4913285 (term244 _61039) (term284 _61039 _61040)). Qed.
Lemma lem4913287 (_61039 : int) (_61040 : int) (h1 : term628 _61039 _61040) : term566 _61039 _61040.
Proof. exact (@lem4913286 _61039 _61040 (@lem4913283 _61039 _61040 h1)). Qed.
Lemma lem4913288 (_61039 : int) (_61040 : int) : (term567 _61039 _61040) = (term568 _61039 _61040).
Proof. exact (@lem1982763 (term244 _61039) (real_of_int _61039) (term244 _61040)). Qed.
Lemma lem4913289 (_61039 : int) : (term504 _61039) = (term505 _61039).
Proof. exact (@lem1982713 term206 (real_of_int _61039)). Qed.
Lemma lem4913291 (x : nat) : (real_of_num x) = (term202 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem4913292 : term150 = term231.
Proof. exact (@lem4913291 term18). Qed.
Lemma lem4913294 (x : nat) : (term204 x) = (term205 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem4913295 : term206 = term207.
Proof. exact (@lem4913294 term18). Qed.
Lemma lem4913296 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem4913297 : term506 = term507.
Proof. exact (MK_COMB (@lem4913296) (@lem4913295)). Qed.
Lemma lem4913298 : term508 = term509.
Proof. exact (MK_COMB (@lem4913297) (@lem4913292)). Qed.
Lemma lem4913299 : term510.
Proof. exact (@lem1981473 term206 term150 term150 term150 term140 term150). Qed.
Lemma lem4913301 (m : nat) (n : nat) : (term257 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem4913302 : term258 = term259.
Proof. exact (@lem4913301 (NUMERAL 0) term18). Qed.
Lemma lem4913303 : term260 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem4913304 (h1 : term260 = (BIT1 0)) : term259 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem4913305 : (term260 = (BIT1 0)) = (term259 = True).
Proof. exact (prop_ext (fun h1 : term260 = (BIT1 0) => @lem4913304 h1) (fun h1 : term259 = True => @lem4913303)). Qed.
Lemma lem4913306 : term259 = True.
Proof. exact (EQ_MP (@lem4913305) (@lem4913303)). Qed.
Lemma lem4913307 : term258 = True.
Proof. exact (TRANS (@lem4913302) (@lem4913306)). Qed.
Lemma lem4913308 : True = term258.
Proof. exact (SYM (@lem4913307)). Qed.
Lemma lem4913309 : term258.
Proof. exact (EQ_MP (@lem4913308) (@lem0)). Qed.
Lemma lem4913310 : term511.
Proof. exact (@lem4913299 (@lem4913309)). Qed.
Lemma lem4913312 (m : nat) (n : nat) : (term257 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem4913313 : term258 = term259.
Proof. exact (@lem4913312 (NUMERAL 0) term18). Qed.
Lemma lem4913314 : term260 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem4913315 (h1 : term260 = (BIT1 0)) : term259 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem4913316 : (term260 = (BIT1 0)) = (term259 = True).
Proof. exact (prop_ext (fun h1 : term260 = (BIT1 0) => @lem4913315 h1) (fun h1 : term259 = True => @lem4913314)). Qed.
Lemma lem4913317 : term259 = True.
Proof. exact (EQ_MP (@lem4913316) (@lem4913314)). Qed.
Lemma lem4913318 : term258 = True.
Proof. exact (TRANS (@lem4913313) (@lem4913317)). Qed.
Lemma lem4913319 : True = term258.
Proof. exact (SYM (@lem4913318)). Qed.
Lemma lem4913320 : term258.
Proof. exact (EQ_MP (@lem4913319) (@lem0)). Qed.
Lemma lem4913321 : term512.
Proof. exact (@lem4913310 (@lem4913320)). Qed.
Lemma lem4913323 (m : nat) (n : nat) : (term257 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem4913324 : term258 = term259.
Proof. exact (@lem4913323 (NUMERAL 0) term18). Qed.
Lemma lem4913325 : term260 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem4913326 (h1 : term260 = (BIT1 0)) : term259 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem4913327 : (term260 = (BIT1 0)) = (term259 = True).
Proof. exact (prop_ext (fun h1 : term260 = (BIT1 0) => @lem4913326 h1) (fun h1 : term259 = True => @lem4913325)). Qed.
Lemma lem4913328 : term259 = True.
Proof. exact (EQ_MP (@lem4913327) (@lem4913325)). Qed.
Lemma lem4913329 : term258 = True.
Proof. exact (TRANS (@lem4913324) (@lem4913328)). Qed.
Lemma lem4913330 : True = term258.
Proof. exact (SYM (@lem4913329)). Qed.
Lemma lem4913331 : term258.
Proof. exact (EQ_MP (@lem4913330) (@lem0)). Qed.
Lemma lem4913332 : term513.
Proof. exact (@lem4913321 (@lem4913331)). Qed.
Lemma lem4913334 (m : nat) (n : nat) : (term213 m n) = (term214 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem4913335 : term215 = term216.
Proof. exact (@lem4913334 term18 term18). Qed.
Lemma lem4913336 : (term217 = (BIT1 0)) = (term218 = term18).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem4913337 : term218 = term18.
Proof. exact (EQ_MP (@lem4913336) (@lem940073)). Qed.
Lemma lem4913338 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem4913339 : term216 = term150.
Proof. exact (MK_COMB (@lem4913338) (@lem4913337)). Qed.
Lemma lem4913340 : term215 = term150.
Proof. exact (TRANS (@lem4913335) (@lem4913339)). Qed.
Lemma lem4913342 (m : nat) (n : nat) : (term235 m n) = (term236 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem4913343 : term232 = term237.
Proof. exact (@lem4913342 term18 term18). Qed.
Lemma lem4913344 : (term217 = (BIT1 0)) = (term218 = term18).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem4913345 : term218 = term18.
Proof. exact (EQ_MP (@lem4913344) (@lem940073)). Qed.
Lemma lem4913346 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem4913347 : term216 = term150.
Proof. exact (MK_COMB (@lem4913346) (@lem4913345)). Qed.
Lemma lem4913348 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem4913349 : term237 = term206.
Proof. exact (MK_COMB (@lem4913348) (@lem4913347)). Qed.
Lemma lem4913350 : term232 = term206.
Proof. exact (TRANS (@lem4913343) (@lem4913349)). Qed.
Lemma lem4913351 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem4913352 : term514 = term506.
Proof. exact (MK_COMB (@lem4913351) (@lem4913350)). Qed.
Lemma lem4913353 : term515 = term508.
Proof. exact (MK_COMB (@lem4913352) (@lem4913340)). Qed.
Lemma lem4913355 (m : nat) : (term516 m) = term140.
Proof. exact (proj1 (@lem1367303 m)). Qed.
Lemma lem4913356 : term508 = term140.
Proof. exact (@lem4913355 term18). Qed.
Lemma lem4913357 : term515 = term140.
Proof. exact (TRANS (@lem4913353) (@lem4913356)). Qed.
Lemma lem4913358 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem4913359 : term517 = term268.
Proof. exact (MK_COMB (@lem4913358) (@lem4913357)). Qed.
Lemma lem4913360 : term150 = term150.
Proof. exact (eq_refl term150). Qed.
Lemma lem4913361 : term518 = term270.
Proof. exact (MK_COMB (@lem4913359) (@lem4913360)). Qed.
Lemma lem4913363 (x : nat) : (term271 x) = term140.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem4913364 : term270 = term140.
Proof. exact (@lem4913363 term18). Qed.
Lemma lem4913365 : term518 = term140.
Proof. exact (TRANS (@lem4913361) (@lem4913364)). Qed.
Lemma lem4913367 (m : nat) (n : nat) : (term213 m n) = (term214 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem4913368 : term215 = term216.
Proof. exact (@lem4913367 term18 term18). Qed.
Lemma lem4913369 : (term217 = (BIT1 0)) = (term218 = term18).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem4913370 : term218 = term18.
Proof. exact (EQ_MP (@lem4913369) (@lem940073)). Qed.
Lemma lem4913371 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem4913372 : term216 = term150.
Proof. exact (MK_COMB (@lem4913371) (@lem4913370)). Qed.
Lemma lem4913373 : term215 = term150.
Proof. exact (TRANS (@lem4913368) (@lem4913372)). Qed.
Lemma lem4913374 : term268 = term268.
Proof. exact (eq_refl term268). Qed.
Lemma lem4913375 : term272 = term270.
Proof. exact (MK_COMB (@lem4913374) (@lem4913373)). Qed.
Lemma lem4913377 (x : nat) : (term271 x) = term140.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem4913378 : term270 = term140.
Proof. exact (@lem4913377 term18). Qed.
Lemma lem4913379 : term272 = term140.
Proof. exact (TRANS (@lem4913375) (@lem4913378)). Qed.
Lemma lem4913380 : term140 = term272.
Proof. exact (SYM (@lem4913379)). Qed.
Lemma lem4913381 : term518 = term272.
Proof. exact (TRANS (@lem4913365) (@lem4913380)). Qed.
Lemma lem4913382 : term509 = term203.
Proof. exact (@lem4913332 (@lem4913381)). Qed.
Lemma lem4913383 : term508 = term203.
Proof. exact (TRANS (@lem4913298) (@lem4913382)). Qed.
Lemma lem4913385 (x : real) : (term222 x) = x.
Proof. exact (EQ_MP (@lem1981475 x) (@lem1981474 x)). Qed.
Lemma lem4913386 : term203 = term140.
Proof. exact (@lem4913385 term140). Qed.
Lemma lem4913387 : term508 = term140.
Proof. exact (TRANS (@lem4913383) (@lem4913386)). Qed.
Lemma lem4913388 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem4913389 : term519 = term268.
Proof. exact (MK_COMB (@lem4913388) (@lem4913387)). Qed.
Lemma lem4913390 (_61039 : int) : (real_of_int _61039) = (real_of_int _61039).
Proof. exact (eq_refl (real_of_int _61039)). Qed.
Lemma lem4913391 (_61039 : int) : (term505 _61039) = (term520 _61039).
Proof. exact (MK_COMB (@lem4913389) (@lem4913390 _61039)). Qed.
Lemma lem4913392 (_61039 : int) : (term504 _61039) = (term520 _61039).
Proof. exact (TRANS (@lem4913289 _61039) (@lem4913391 _61039)). Qed.
Lemma lem4913393 (_61039 : int) : (term520 _61039) = term140.
Proof. exact (@lem1982719 (real_of_int _61039)). Qed.
Lemma lem4913394 (_61039 : int) : (term504 _61039) = term140.
Proof. exact (TRANS (@lem4913392 _61039) (@lem4913393 _61039)). Qed.
Lemma lem4913395 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem4913396 (_61039 : int) : (term521 _61039) = term182.
Proof. exact (MK_COMB (@lem4913395) (@lem4913394 _61039)). Qed.
Lemma lem4913397 (_61040 : int) : (term244 _61040) = (term244 _61040).
Proof. exact (eq_refl (term244 _61040)). Qed.
Lemma lem4913398 (_61039 : int) (_61040 : int) : (term568 _61039 _61040) = (term569 _61040).
Proof. exact (MK_COMB (@lem4913396 _61039) (@lem4913397 _61040)). Qed.
Lemma lem4913399 (_61039 : int) (_61040 : int) : (term567 _61039 _61040) = (term569 _61040).
Proof. exact (TRANS (@lem4913288 _61039 _61040) (@lem4913398 _61039 _61040)). Qed.
Lemma lem4913400 (_61040 : int) : (term569 _61040) = (term244 _61040).
Proof. exact (@lem1982721 (term244 _61040)). Qed.
Lemma lem4913401 (_61039 : int) (_61040 : int) : (term567 _61039 _61040) = (term244 _61040).
Proof. exact (TRANS (@lem4913399 _61039 _61040) (@lem4913400 _61040)). Qed.
Lemma lem4913402 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem4913403 (_61039 : int) (_61040 : int) : (term570 _61039 _61040) = (term275 _61040).
Proof. exact (MK_COMB (@lem4913402) (@lem4913401 _61039 _61040)). Qed.
Lemma lem4913404 : term140 = term140.
Proof. exact (eq_refl term140). Qed.
Lemma lem4913405 (_61039 : int) (_61040 : int) : (term566 _61039 _61040) = (term276 _61040).
Proof. exact (MK_COMB (@lem4913403 _61039 _61040) (@lem4913404)). Qed.
Lemma lem4913406 (_61039 : int) (_61040 : int) (h1 : term628 _61039 _61040) : term276 _61040.
Proof. exact (EQ_MP (@lem4913405 _61039 _61040) (@lem4913287 _61039 _61040 h1)). Qed.
Lemma lem4913408 (y : real) (x : real) : (real_gt x y) = (real_lt y x).
Proof. exact (EQ_MP (@lem1980266 y x) (@lem1980265 y x)). Qed.
Lemma lem4913409 : term478 = term258.
Proof. exact (@lem4913408 term140 term150). Qed.
Lemma lem4913411 (x : nat) : (real_of_num x) = (term202 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem4913412 : term150 = term231.
Proof. exact (@lem4913411 term18). Qed.
Lemma lem4913414 (x : nat) : (real_of_num x) = (term202 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem4913415 : term140 = term203.
Proof. exact (@lem4913414 (NUMERAL 0)). Qed.
Lemma lem4913416 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem4913417 : term479 = term480.
Proof. exact (MK_COMB (@lem4913416) (@lem4913415)). Qed.
Lemma lem4913418 : term258 = term481.
Proof. exact (MK_COMB (@lem4913417) (@lem4913412)). Qed.
Lemma lem4913419 : term482.
Proof. exact (@lem1980255 term140 term150 term150 term150). Qed.
Lemma lem4913421 (m : nat) (n : nat) : (term257 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem4913422 : term258 = term259.
Proof. exact (@lem4913421 (NUMERAL 0) term18). Qed.
Lemma lem4913423 : term260 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem4913424 (h1 : term260 = (BIT1 0)) : term259 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem4913425 : (term260 = (BIT1 0)) = (term259 = True).
Proof. exact (prop_ext (fun h1 : term260 = (BIT1 0) => @lem4913424 h1) (fun h1 : term259 = True => @lem4913423)). Qed.
Lemma lem4913426 : term259 = True.
Proof. exact (EQ_MP (@lem4913425) (@lem4913423)). Qed.
Lemma lem4913427 : term258 = True.
Proof. exact (TRANS (@lem4913422) (@lem4913426)). Qed.
Lemma lem4913428 : True = term258.
Proof. exact (SYM (@lem4913427)). Qed.
Lemma lem4913429 : term258.
Proof. exact (EQ_MP (@lem4913428) (@lem0)). Qed.
Lemma lem4913430 : term483.
Proof. exact (@lem4913419 (@lem4913429)). Qed.
Lemma lem4913432 (m : nat) (n : nat) : (term257 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem4913433 : term258 = term259.
Proof. exact (@lem4913432 (NUMERAL 0) term18). Qed.
Lemma lem4913434 : term260 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem4913435 (h1 : term260 = (BIT1 0)) : term259 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem4913436 : (term260 = (BIT1 0)) = (term259 = True).
Proof. exact (prop_ext (fun h1 : term260 = (BIT1 0) => @lem4913435 h1) (fun h1 : term259 = True => @lem4913434)). Qed.
Lemma lem4913437 : term259 = True.
Proof. exact (EQ_MP (@lem4913436) (@lem4913434)). Qed.
Lemma lem4913438 : term258 = True.
Proof. exact (TRANS (@lem4913433) (@lem4913437)). Qed.
Lemma lem4913439 : True = term258.
Proof. exact (SYM (@lem4913438)). Qed.
Lemma lem4913440 : term258.
Proof. exact (EQ_MP (@lem4913439) (@lem0)). Qed.
Lemma lem4913441 : term481 = term484.
Proof. exact (@lem4913430 (@lem4913440)). Qed.
Lemma lem4913443 (m : nat) (n : nat) : (term213 m n) = (term214 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem4913444 : term215 = term216.
Proof. exact (@lem4913443 term18 term18). Qed.
Lemma lem4913445 : (term217 = (BIT1 0)) = (term218 = term18).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem4913446 : term218 = term18.
Proof. exact (EQ_MP (@lem4913445) (@lem940073)). Qed.
Lemma lem4913447 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem4913448 : term216 = term150.
Proof. exact (MK_COMB (@lem4913447) (@lem4913446)). Qed.
Lemma lem4913449 : term215 = term150.
Proof. exact (TRANS (@lem4913444) (@lem4913448)). Qed.
Lemma lem4913451 (x : nat) : (term271 x) = term140.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem4913452 : term270 = term140.
Proof. exact (@lem4913451 term18). Qed.
Lemma lem4913453 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem4913454 : term485 = term479.
Proof. exact (MK_COMB (@lem4913453) (@lem4913452)). Qed.
Lemma lem4913455 : term484 = term258.
Proof. exact (MK_COMB (@lem4913454) (@lem4913449)). Qed.
Lemma lem4913457 (m : nat) (n : nat) : (term257 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem4913458 : term258 = term259.
Proof. exact (@lem4913457 (NUMERAL 0) term18). Qed.
Lemma lem4913459 : term260 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem4913460 (h1 : term260 = (BIT1 0)) : term259 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem4913461 : (term260 = (BIT1 0)) = (term259 = True).
Proof. exact (prop_ext (fun h1 : term260 = (BIT1 0) => @lem4913460 h1) (fun h1 : term259 = True => @lem4913459)). Qed.
Lemma lem4913462 : term259 = True.
Proof. exact (EQ_MP (@lem4913461) (@lem4913459)). Qed.
Lemma lem4913463 : term258 = True.
Proof. exact (TRANS (@lem4913458) (@lem4913462)). Qed.
Lemma lem4913464 : term484 = True.
Proof. exact (TRANS (@lem4913455) (@lem4913463)). Qed.
Lemma lem4913465 : term481 = True.
Proof. exact (TRANS (@lem4913441) (@lem4913464)). Qed.
Lemma lem4913466 : term258 = True.
Proof. exact (TRANS (@lem4913418) (@lem4913465)). Qed.
Lemma lem4913467 : term478 = True.
Proof. exact (TRANS (@lem4913409) (@lem4913466)). Qed.
Lemma lem4913468 : True = term478.
Proof. exact (SYM (@lem4913467)). Qed.
Lemma lem4913469 : term478.
Proof. exact (EQ_MP (@lem4913468) (@lem0)). Qed.
Lemma lem4913470 (_61039 : int) (_61040 : int) (h1 : term628 _61039 _61040) : term571 _61040.
Proof. exact (conj (@lem4913469) (@lem4913406 _61039 _61040 h1)). Qed.
Lemma lem4913472 (x : real) (y : real) : term487 x y.
Proof. exact (proj1 (@lem1988332 x y)). Qed.
Lemma lem4913473 (_61040 : int) : term572 _61040.
Proof. exact (@lem4913472 term150 (term244 _61040)). Qed.
Lemma lem4913474 (_61039 : int) (_61040 : int) (h1 : term628 _61039 _61040) : term573 _61040.
Proof. exact (@lem4913473 _61040 (@lem4913470 _61039 _61040 h1)). Qed.
Lemma lem4913475 (_61040 : int) : (term574 _61040) = (term244 _61040).
Proof. exact (@lem1982733 (term244 _61040)). Qed.
Lemma lem4913476 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem4913477 (_61040 : int) : (term575 _61040) = (term275 _61040).
Proof. exact (MK_COMB (@lem4913476) (@lem4913475 _61040)). Qed.
Lemma lem4913478 : term140 = term140.
Proof. exact (eq_refl term140). Qed.
Lemma lem4913479 (_61040 : int) : (term573 _61040) = (term276 _61040).
Proof. exact (MK_COMB (@lem4913477 _61040) (@lem4913478)). Qed.
Lemma lem4913480 (_61039 : int) (_61040 : int) (h1 : term628 _61039 _61040) : term276 _61040.
Proof. exact (EQ_MP (@lem4913479 _61040) (@lem4913474 _61039 _61040 h1)). Qed.
Lemma lem4913481 (_61039 : int) (_61040 : int) (h1 : term628 _61039 _61040) : term576 _61040.
Proof. exact (conj (@lem4913480 _61039 _61040 h1) (@lem4913195 _61039 _61040 h1)). Qed.
Lemma lem4913483 (x : real) (y : real) : term577 x y.
Proof. exact (proj1 (@lem1988342 x y)). Qed.
Lemma lem4913484 (_61040 : int) : term578 _61040.
Proof. exact (@lem4913483 (term244 _61040) (term306 _61040)). Qed.
Lemma lem4913485 (_61039 : int) (_61040 : int) (h1 : term628 _61039 _61040) : term579 _61040.
Proof. exact (@lem4913484 _61040 (@lem4913481 _61039 _61040 h1)). Qed.
Lemma lem4913486 (_61040 : int) : (term580 _61040) = (term581 _61040).
Proof. exact (@lem1982763 (term244 _61040) (real_of_int _61040) term206). Qed.
Lemma lem4913487 (_61040 : int) : (term504 _61040) = (term505 _61040).
Proof. exact (@lem1982713 term206 (real_of_int _61040)). Qed.
Lemma lem4913489 (x : nat) : (real_of_num x) = (term202 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem4913490 : term150 = term231.
Proof. exact (@lem4913489 term18). Qed.
Lemma lem4913492 (x : nat) : (term204 x) = (term205 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem4913493 : term206 = term207.
Proof. exact (@lem4913492 term18). Qed.
Lemma lem4913494 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem4913495 : term506 = term507.
Proof. exact (MK_COMB (@lem4913494) (@lem4913493)). Qed.
Lemma lem4913496 : term508 = term509.
Proof. exact (MK_COMB (@lem4913495) (@lem4913490)). Qed.
Lemma lem4913497 : term510.
Proof. exact (@lem1981473 term206 term150 term150 term150 term140 term150). Qed.
Lemma lem4913499 (m : nat) (n : nat) : (term257 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem4913500 : term258 = term259.
Proof. exact (@lem4913499 (NUMERAL 0) term18). Qed.
Lemma lem4913501 : term260 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem4913502 (h1 : term260 = (BIT1 0)) : term259 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem4913503 : (term260 = (BIT1 0)) = (term259 = True).
Proof. exact (prop_ext (fun h1 : term260 = (BIT1 0) => @lem4913502 h1) (fun h1 : term259 = True => @lem4913501)). Qed.
Lemma lem4913504 : term259 = True.
Proof. exact (EQ_MP (@lem4913503) (@lem4913501)). Qed.
Lemma lem4913505 : term258 = True.
Proof. exact (TRANS (@lem4913500) (@lem4913504)). Qed.
Lemma lem4913506 : True = term258.
Proof. exact (SYM (@lem4913505)). Qed.
Lemma lem4913507 : term258.
Proof. exact (EQ_MP (@lem4913506) (@lem0)). Qed.
Lemma lem4913508 : term511.
Proof. exact (@lem4913497 (@lem4913507)). Qed.
Lemma lem4913510 (m : nat) (n : nat) : (term257 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem4913511 : term258 = term259.
Proof. exact (@lem4913510 (NUMERAL 0) term18). Qed.
Lemma lem4913512 : term260 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem4913513 (h1 : term260 = (BIT1 0)) : term259 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem4913514 : (term260 = (BIT1 0)) = (term259 = True).
Proof. exact (prop_ext (fun h1 : term260 = (BIT1 0) => @lem4913513 h1) (fun h1 : term259 = True => @lem4913512)). Qed.
Lemma lem4913515 : term259 = True.
Proof. exact (EQ_MP (@lem4913514) (@lem4913512)). Qed.
Lemma lem4913516 : term258 = True.
Proof. exact (TRANS (@lem4913511) (@lem4913515)). Qed.
Lemma lem4913517 : True = term258.
Proof. exact (SYM (@lem4913516)). Qed.
Lemma lem4913518 : term258.
Proof. exact (EQ_MP (@lem4913517) (@lem0)). Qed.
Lemma lem4913519 : term512.
Proof. exact (@lem4913508 (@lem4913518)). Qed.
Lemma lem4913521 (m : nat) (n : nat) : (term257 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem4913522 : term258 = term259.
Proof. exact (@lem4913521 (NUMERAL 0) term18). Qed.
Lemma lem4913523 : term260 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem4913524 (h1 : term260 = (BIT1 0)) : term259 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem4913525 : (term260 = (BIT1 0)) = (term259 = True).
Proof. exact (prop_ext (fun h1 : term260 = (BIT1 0) => @lem4913524 h1) (fun h1 : term259 = True => @lem4913523)). Qed.
Lemma lem4913526 : term259 = True.
Proof. exact (EQ_MP (@lem4913525) (@lem4913523)). Qed.
Lemma lem4913527 : term258 = True.
Proof. exact (TRANS (@lem4913522) (@lem4913526)). Qed.
Lemma lem4913528 : True = term258.
Proof. exact (SYM (@lem4913527)). Qed.
Lemma lem4913529 : term258.
Proof. exact (EQ_MP (@lem4913528) (@lem0)). Qed.
Lemma lem4913530 : term513.
Proof. exact (@lem4913519 (@lem4913529)). Qed.
Lemma lem4913532 (m : nat) (n : nat) : (term213 m n) = (term214 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem4913533 : term215 = term216.
Proof. exact (@lem4913532 term18 term18). Qed.
Lemma lem4913534 : (term217 = (BIT1 0)) = (term218 = term18).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem4913535 : term218 = term18.
Proof. exact (EQ_MP (@lem4913534) (@lem940073)). Qed.
Lemma lem4913536 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem4913537 : term216 = term150.
Proof. exact (MK_COMB (@lem4913536) (@lem4913535)). Qed.
Lemma lem4913538 : term215 = term150.
Proof. exact (TRANS (@lem4913533) (@lem4913537)). Qed.
Lemma lem4913540 (m : nat) (n : nat) : (term235 m n) = (term236 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem4913541 : term232 = term237.
Proof. exact (@lem4913540 term18 term18). Qed.
Lemma lem4913542 : (term217 = (BIT1 0)) = (term218 = term18).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem4913543 : term218 = term18.
Proof. exact (EQ_MP (@lem4913542) (@lem940073)). Qed.
Lemma lem4913544 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem4913545 : term216 = term150.
Proof. exact (MK_COMB (@lem4913544) (@lem4913543)). Qed.
Lemma lem4913546 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem4913547 : term237 = term206.
Proof. exact (MK_COMB (@lem4913546) (@lem4913545)). Qed.
Lemma lem4913548 : term232 = term206.
Proof. exact (TRANS (@lem4913541) (@lem4913547)). Qed.
Lemma lem4913549 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem4913550 : term514 = term506.
Proof. exact (MK_COMB (@lem4913549) (@lem4913548)). Qed.
Lemma lem4913551 : term515 = term508.
Proof. exact (MK_COMB (@lem4913550) (@lem4913538)). Qed.
Lemma lem4913553 (m : nat) : (term516 m) = term140.
Proof. exact (proj1 (@lem1367303 m)). Qed.
Lemma lem4913554 : term508 = term140.
Proof. exact (@lem4913553 term18). Qed.
Lemma lem4913555 : term515 = term140.
Proof. exact (TRANS (@lem4913551) (@lem4913554)). Qed.
Lemma lem4913556 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem4913557 : term517 = term268.
Proof. exact (MK_COMB (@lem4913556) (@lem4913555)). Qed.
Lemma lem4913558 : term150 = term150.
Proof. exact (eq_refl term150). Qed.
Lemma lem4913559 : term518 = term270.
Proof. exact (MK_COMB (@lem4913557) (@lem4913558)). Qed.
Lemma lem4913561 (x : nat) : (term271 x) = term140.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem4913562 : term270 = term140.
Proof. exact (@lem4913561 term18). Qed.
Lemma lem4913563 : term518 = term140.
Proof. exact (TRANS (@lem4913559) (@lem4913562)). Qed.
Lemma lem4913565 (m : nat) (n : nat) : (term213 m n) = (term214 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem4913566 : term215 = term216.
Proof. exact (@lem4913565 term18 term18). Qed.
Lemma lem4913567 : (term217 = (BIT1 0)) = (term218 = term18).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem4913568 : term218 = term18.
Proof. exact (EQ_MP (@lem4913567) (@lem940073)). Qed.
Lemma lem4913569 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem4913570 : term216 = term150.
Proof. exact (MK_COMB (@lem4913569) (@lem4913568)). Qed.
Lemma lem4913571 : term215 = term150.
Proof. exact (TRANS (@lem4913566) (@lem4913570)). Qed.
Lemma lem4913572 : term268 = term268.
Proof. exact (eq_refl term268). Qed.
Lemma lem4913573 : term272 = term270.
Proof. exact (MK_COMB (@lem4913572) (@lem4913571)). Qed.
Lemma lem4913575 (x : nat) : (term271 x) = term140.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem4913576 : term270 = term140.
Proof. exact (@lem4913575 term18). Qed.
Lemma lem4913577 : term272 = term140.
Proof. exact (TRANS (@lem4913573) (@lem4913576)). Qed.
Lemma lem4913578 : term140 = term272.
Proof. exact (SYM (@lem4913577)). Qed.
Lemma lem4913579 : term518 = term272.
Proof. exact (TRANS (@lem4913563) (@lem4913578)). Qed.
Lemma lem4913580 : term509 = term203.
Proof. exact (@lem4913530 (@lem4913579)). Qed.
Lemma lem4913581 : term508 = term203.
Proof. exact (TRANS (@lem4913496) (@lem4913580)). Qed.
Lemma lem4913583 (x : real) : (term222 x) = x.
Proof. exact (EQ_MP (@lem1981475 x) (@lem1981474 x)). Qed.
Lemma lem4913584 : term203 = term140.
Proof. exact (@lem4913583 term140). Qed.
Lemma lem4913585 : term508 = term140.
Proof. exact (TRANS (@lem4913581) (@lem4913584)). Qed.
Lemma lem4913586 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem4913587 : term519 = term268.
Proof. exact (MK_COMB (@lem4913586) (@lem4913585)). Qed.
Lemma lem4913588 (_61040 : int) : (real_of_int _61040) = (real_of_int _61040).
Proof. exact (eq_refl (real_of_int _61040)). Qed.
Lemma lem4913589 (_61040 : int) : (term505 _61040) = (term520 _61040).
Proof. exact (MK_COMB (@lem4913587) (@lem4913588 _61040)). Qed.
Lemma lem4913590 (_61040 : int) : (term504 _61040) = (term520 _61040).
Proof. exact (TRANS (@lem4913487 _61040) (@lem4913589 _61040)). Qed.
Lemma lem4913591 (_61040 : int) : (term520 _61040) = term140.
Proof. exact (@lem1982719 (real_of_int _61040)). Qed.
Lemma lem4913592 (_61040 : int) : (term504 _61040) = term140.
Proof. exact (TRANS (@lem4913590 _61040) (@lem4913591 _61040)). Qed.
Lemma lem4913593 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem4913594 (_61040 : int) : (term521 _61040) = term182.
Proof. exact (MK_COMB (@lem4913593) (@lem4913592 _61040)). Qed.
Lemma lem4913595 : term206 = term206.
Proof. exact (eq_refl term206). Qed.
Lemma lem4913596 (_61040 : int) : (term581 _61040) = term526.
Proof. exact (MK_COMB (@lem4913594 _61040) (@lem4913595)). Qed.
Lemma lem4913597 (_61040 : int) : (term580 _61040) = term526.
Proof. exact (TRANS (@lem4913486 _61040) (@lem4913596 _61040)). Qed.
Lemma lem4913598 : term526 = term206.
Proof. exact (@lem1982721 term206). Qed.
Lemma lem4913599 (_61040 : int) : (term580 _61040) = term206.
Proof. exact (TRANS (@lem4913597 _61040) (@lem4913598)). Qed.
Lemma lem4913600 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem4913601 (_61040 : int) : (term582 _61040) = term528.
Proof. exact (MK_COMB (@lem4913600) (@lem4913599 _61040)). Qed.
Lemma lem4913602 : term140 = term140.
Proof. exact (eq_refl term140). Qed.
Lemma lem4913603 (_61040 : int) : (term579 _61040) = term529.
Proof. exact (MK_COMB (@lem4913601 _61040) (@lem4913602)). Qed.
Lemma lem4913604 (_61039 : int) (_61040 : int) (h1 : term628 _61039 _61040) : term529.
Proof. exact (EQ_MP (@lem4913603 _61040) (@lem4913485 _61039 _61040 h1)). Qed.
Lemma lem4913606 (y : real) (x : real) : (real_ge x y) = (real_le y x).
Proof. exact (EQ_MP (@lem1980260 y x) (@lem1980259 y x)). Qed.
Lemma lem4913607 : term529 = term530.
Proof. exact (@lem4913606 term140 term206). Qed.
Lemma lem4913609 (x : nat) : (term204 x) = (term205 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem4913610 : term206 = term207.
Proof. exact (@lem4913609 term18). Qed.
Lemma lem4913612 (x : nat) : (real_of_num x) = (term202 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem4913613 : term140 = term203.
Proof. exact (@lem4913612 (NUMERAL 0)). Qed.
Lemma lem4913614 : real_le = real_le.
Proof. exact (eq_refl real_le). Qed.
Lemma lem4913615 : term142 = term531.
Proof. exact (MK_COMB (@lem4913614) (@lem4913613)). Qed.
Lemma lem4913616 : term530 = term532.
Proof. exact (MK_COMB (@lem4913615) (@lem4913610)). Qed.
Lemma lem4913617 : term533.
Proof. exact (@lem1980026 term140 term150 term206 term150). Qed.
Lemma lem4913619 (m : nat) (n : nat) : (term257 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem4913620 : term258 = term259.
Proof. exact (@lem4913619 (NUMERAL 0) term18). Qed.
Lemma lem4913621 : term260 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem4913622 (h1 : term260 = (BIT1 0)) : term259 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem4913623 : (term260 = (BIT1 0)) = (term259 = True).
Proof. exact (prop_ext (fun h1 : term260 = (BIT1 0) => @lem4913622 h1) (fun h1 : term259 = True => @lem4913621)). Qed.
Lemma lem4913624 : term259 = True.
Proof. exact (EQ_MP (@lem4913623) (@lem4913621)). Qed.
Lemma lem4913625 : term258 = True.
Proof. exact (TRANS (@lem4913620) (@lem4913624)). Qed.
Lemma lem4913626 : True = term258.
Proof. exact (SYM (@lem4913625)). Qed.
Lemma lem4913627 : term258.
Proof. exact (EQ_MP (@lem4913626) (@lem0)). Qed.
Lemma lem4913628 : term534.
Proof. exact (@lem4913617 (@lem4913627)). Qed.
Lemma lem4913630 (m : nat) (n : nat) : (term257 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem4913631 : term258 = term259.
Proof. exact (@lem4913630 (NUMERAL 0) term18). Qed.
Lemma lem4913632 : term260 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem4913633 (h1 : term260 = (BIT1 0)) : term259 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem4913634 : (term260 = (BIT1 0)) = (term259 = True).
Proof. exact (prop_ext (fun h1 : term260 = (BIT1 0) => @lem4913633 h1) (fun h1 : term259 = True => @lem4913632)). Qed.
Lemma lem4913635 : term259 = True.
Proof. exact (EQ_MP (@lem4913634) (@lem4913632)). Qed.
Lemma lem4913636 : term258 = True.
Proof. exact (TRANS (@lem4913631) (@lem4913635)). Qed.
Lemma lem4913637 : True = term258.
Proof. exact (SYM (@lem4913636)). Qed.
Lemma lem4913638 : term258.
Proof. exact (EQ_MP (@lem4913637) (@lem0)). Qed.
Lemma lem4913639 : term532 = term535.
Proof. exact (@lem4913628 (@lem4913638)). Qed.
Lemma lem4913641 (m : nat) (n : nat) : (term235 m n) = (term236 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem4913642 : term232 = term237.
Proof. exact (@lem4913641 term18 term18). Qed.
Lemma lem4913643 : (term217 = (BIT1 0)) = (term218 = term18).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem4913644 : term218 = term18.
Proof. exact (EQ_MP (@lem4913643) (@lem940073)). Qed.
Lemma lem4913645 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem4913646 : term216 = term150.
Proof. exact (MK_COMB (@lem4913645) (@lem4913644)). Qed.
Lemma lem4913647 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem4913648 : term237 = term206.
Proof. exact (MK_COMB (@lem4913647) (@lem4913646)). Qed.
Lemma lem4913649 : term232 = term206.
Proof. exact (TRANS (@lem4913642) (@lem4913648)). Qed.
Lemma lem4913651 (x : nat) : (term271 x) = term140.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem4913652 : term270 = term140.
Proof. exact (@lem4913651 term18). Qed.
Lemma lem4913653 : real_le = real_le.
Proof. exact (eq_refl real_le). Qed.
Lemma lem4913654 : term536 = term142.
Proof. exact (MK_COMB (@lem4913653) (@lem4913652)). Qed.
Lemma lem4913655 : term535 = term530.
Proof. exact (MK_COMB (@lem4913654) (@lem4913649)). Qed.
Lemma lem4913657 (m : nat) (n : nat) : (term537 m n) = (term538 m n).
Proof. exact (proj2 (@lem1365406 m n)). Qed.
Lemma lem4913658 : term530 = term539.
Proof. exact (@lem4913657 (NUMERAL 0) term18). Qed.
Lemma lem4913659 : term260 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem4913660 (h1 : term260 = (BIT1 0)) : (term18 = (NUMERAL 0)) = False.
Proof. exact (@lem1013352 0 0 (BIT1 0) h1). Qed.
Lemma lem4913661 : (term260 = (BIT1 0)) = ((term18 = (NUMERAL 0)) = False).
Proof. exact (prop_ext (fun h1 : term260 = (BIT1 0) => @lem4913660 h1) (fun h1 : (term18 = (NUMERAL 0)) = False => @lem4913659)). Qed.
Lemma lem4913662 : (term18 = (NUMERAL 0)) = False.
Proof. exact (EQ_MP (@lem4913661) (@lem4913659)). Qed.
Lemma lem4913663 : ((NUMERAL 0) = (NUMERAL 0)) = True.
Proof. exact (@lem1013364 0). Qed.
Lemma lem4913664 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4913665 : term540 = (and True).
Proof. exact (MK_COMB (@lem4913664) (@lem4913663)). Qed.
Lemma lem4913666 : term539 = (True /\ False).
Proof. exact (MK_COMB (@lem4913665) (@lem4913662)). Qed.
Lemma lem4913668 : (True /\ False) = False.
Proof. exact (proj1 (@lem1365106)). Qed.
Lemma lem4913669 : term539 = False.
Proof. exact (TRANS (@lem4913666) (@lem4913668)). Qed.
Lemma lem4913670 : term530 = False.
Proof. exact (TRANS (@lem4913658) (@lem4913669)). Qed.
Lemma lem4913671 : term535 = False.
Proof. exact (TRANS (@lem4913655) (@lem4913670)). Qed.
Lemma lem4913672 : term532 = False.
Proof. exact (TRANS (@lem4913639) (@lem4913671)). Qed.
Lemma lem4913673 : term530 = False.
Proof. exact (TRANS (@lem4913616) (@lem4913672)). Qed.
Lemma lem4913674 : term529 = False.
Proof. exact (TRANS (@lem4913607) (@lem4913673)). Qed.
Lemma lem4913675 (_61039 : int) (_61040 : int) (h1 : term628 _61039 _61040) : False.
Proof. exact (EQ_MP (@lem4913674) (@lem4913604 _61039 _61040 h1)). Qed.
Lemma lem4913676 (_61039 : int) (_61040 : int) (h1 : term439 _61039 _61040) : False.
Proof. exact (or_elim (@lem4912706 _61039 _61040 h1) (fun h0 : term627 _61039 _61040 => @lem4913110 _61039 _61040 h0) (fun h0 : term628 _61039 _61040 => @lem4913675 _61039 _61040 h0)). Qed.
Lemma lem4913677 (_61039 : int) (_61040 : int) (h1 : term435 _61039 _61040) : term435 _61039 _61040.
Proof. exact (h1). Qed.
Lemma lem4913678 (_61039 : int) (_61040 : int) (h1 : term629 _61039 _61040) : term629 _61039 _61040.
Proof. exact (h1). Qed.
Lemma lem4913679 (_61039 : int) (_61040 : int) (h1 : term629 _61039 _61040) : term436 _61039 _61040.
Proof. exact (proj2 (@lem4913678 _61039 _61040 h1)). Qed.
Lemma lem4913681 (_61039 : int) (_61040 : int) (h1 : term629 _61039 _61040) : term387 _61039 _61040.
Proof. exact (proj2 (@lem4913679 _61039 _61040 h1)). Qed.
Lemma lem4913683 (_61039 : int) (_61040 : int) (h1 : term629 _61039 _61040) : term343 _61040.
Proof. exact (proj2 (@lem4913681 _61039 _61040 h1)). Qed.
Lemma lem4913685 (_61039 : int) (_61040 : int) (h1 : term629 _61039 _61040) : term309 _61040.
Proof. exact (proj2 (@lem4913683 _61039 _61040 h1)). Qed.
Lemma lem4913686 (_61039 : int) (_61040 : int) (h1 : term629 _61039 _61040) : (real_of_int _61040) = term140.
Proof. exact (proj1 (@lem4913683 _61039 _61040 h1)). Qed.
Lemma lem4913688 (y : real) (x : real) : (real_gt x y) = (real_lt y x).
Proof. exact (EQ_MP (@lem1980266 y x) (@lem1980265 y x)). Qed.
Lemma lem4913689 : term478 = term258.
Proof. exact (@lem4913688 term140 term150). Qed.
Lemma lem4913691 (x : nat) : (real_of_num x) = (term202 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem4913692 : term150 = term231.
Proof. exact (@lem4913691 term18). Qed.
Lemma lem4913694 (x : nat) : (real_of_num x) = (term202 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem4913695 : term140 = term203.
Proof. exact (@lem4913694 (NUMERAL 0)). Qed.
Lemma lem4913696 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem4913697 : term479 = term480.
Proof. exact (MK_COMB (@lem4913696) (@lem4913695)). Qed.
Lemma lem4913698 : term258 = term481.
Proof. exact (MK_COMB (@lem4913697) (@lem4913692)). Qed.
Lemma lem4913699 : term482.
Proof. exact (@lem1980255 term140 term150 term150 term150). Qed.
Lemma lem4913701 (m : nat) (n : nat) : (term257 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem4913702 : term258 = term259.
Proof. exact (@lem4913701 (NUMERAL 0) term18). Qed.
Lemma lem4913703 : term260 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem4913704 (h1 : term260 = (BIT1 0)) : term259 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem4913705 : (term260 = (BIT1 0)) = (term259 = True).
Proof. exact (prop_ext (fun h1 : term260 = (BIT1 0) => @lem4913704 h1) (fun h1 : term259 = True => @lem4913703)). Qed.
Lemma lem4913706 : term259 = True.
Proof. exact (EQ_MP (@lem4913705) (@lem4913703)). Qed.
Lemma lem4913707 : term258 = True.
Proof. exact (TRANS (@lem4913702) (@lem4913706)). Qed.
Lemma lem4913708 : True = term258.
Proof. exact (SYM (@lem4913707)). Qed.
Lemma lem4913709 : term258.
Proof. exact (EQ_MP (@lem4913708) (@lem0)). Qed.
Lemma lem4913710 : term483.
Proof. exact (@lem4913699 (@lem4913709)). Qed.
Lemma lem4913712 (m : nat) (n : nat) : (term257 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem4913713 : term258 = term259.
Proof. exact (@lem4913712 (NUMERAL 0) term18). Qed.
Lemma lem4913714 : term260 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem4913715 (h1 : term260 = (BIT1 0)) : term259 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem4913716 : (term260 = (BIT1 0)) = (term259 = True).
Proof. exact (prop_ext (fun h1 : term260 = (BIT1 0) => @lem4913715 h1) (fun h1 : term259 = True => @lem4913714)). Qed.
Lemma lem4913717 : term259 = True.
Proof. exact (EQ_MP (@lem4913716) (@lem4913714)). Qed.
Lemma lem4913718 : term258 = True.
Proof. exact (TRANS (@lem4913713) (@lem4913717)). Qed.
Lemma lem4913719 : True = term258.
Proof. exact (SYM (@lem4913718)). Qed.
Lemma lem4913720 : term258.
Proof. exact (EQ_MP (@lem4913719) (@lem0)). Qed.
Lemma lem4913721 : term481 = term484.
Proof. exact (@lem4913710 (@lem4913720)). Qed.
Lemma lem4913723 (m : nat) (n : nat) : (term213 m n) = (term214 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem4913724 : term215 = term216.
Proof. exact (@lem4913723 term18 term18). Qed.
Lemma lem4913725 : (term217 = (BIT1 0)) = (term218 = term18).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem4913726 : term218 = term18.
Proof. exact (EQ_MP (@lem4913725) (@lem940073)). Qed.
Lemma lem4913727 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem4913728 : term216 = term150.
Proof. exact (MK_COMB (@lem4913727) (@lem4913726)). Qed.
Lemma lem4913729 : term215 = term150.
Proof. exact (TRANS (@lem4913724) (@lem4913728)). Qed.
Lemma lem4913731 (x : nat) : (term271 x) = term140.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem4913732 : term270 = term140.
Proof. exact (@lem4913731 term18). Qed.
Lemma lem4913733 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem4913734 : term485 = term479.
Proof. exact (MK_COMB (@lem4913733) (@lem4913732)). Qed.
Lemma lem4913735 : term484 = term258.
Proof. exact (MK_COMB (@lem4913734) (@lem4913729)). Qed.
Lemma lem4913737 (m : nat) (n : nat) : (term257 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem4913738 : term258 = term259.
Proof. exact (@lem4913737 (NUMERAL 0) term18). Qed.
Lemma lem4913739 : term260 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem4913740 (h1 : term260 = (BIT1 0)) : term259 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem4913741 : (term260 = (BIT1 0)) = (term259 = True).
Proof. exact (prop_ext (fun h1 : term260 = (BIT1 0) => @lem4913740 h1) (fun h1 : term259 = True => @lem4913739)). Qed.
Lemma lem4913742 : term259 = True.
Proof. exact (EQ_MP (@lem4913741) (@lem4913739)). Qed.
Lemma lem4913743 : term258 = True.
Proof. exact (TRANS (@lem4913738) (@lem4913742)). Qed.
Lemma lem4913744 : term484 = True.
Proof. exact (TRANS (@lem4913735) (@lem4913743)). Qed.
Lemma lem4913745 : term481 = True.
Proof. exact (TRANS (@lem4913721) (@lem4913744)). Qed.
Lemma lem4913746 : term258 = True.
Proof. exact (TRANS (@lem4913698) (@lem4913745)). Qed.
Lemma lem4913747 : term478 = True.
Proof. exact (TRANS (@lem4913689) (@lem4913746)). Qed.
Lemma lem4913748 : True = term478.
Proof. exact (SYM (@lem4913747)). Qed.
Lemma lem4913749 : term478.
Proof. exact (EQ_MP (@lem4913748) (@lem0)). Qed.
Lemma lem4913750 (_61039 : int) (_61040 : int) (h1 : term629 _61039 _61040) : term558 _61040.
Proof. exact (conj (@lem4913749) (@lem4913685 _61039 _61040 h1)). Qed.
Lemma lem4913752 (x : real) (y : real) : term487 x y.
Proof. exact (proj1 (@lem1988332 x y)). Qed.
Lemma lem4913753 (_61040 : int) : term559 _61040.
Proof. exact (@lem4913752 term150 (term306 _61040)). Qed.
Lemma lem4913754 (_61039 : int) (_61040 : int) (h1 : term629 _61039 _61040) : term560 _61040.
Proof. exact (@lem4913753 _61040 (@lem4913750 _61039 _61040 h1)). Qed.
Lemma lem4913755 (_61040 : int) : (term561 _61040) = (term306 _61040).
Proof. exact (@lem1982733 (term306 _61040)). Qed.
Lemma lem4913756 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem4913757 (_61040 : int) : (term562 _61040) = (term308 _61040).
Proof. exact (MK_COMB (@lem4913756) (@lem4913755 _61040)). Qed.
Lemma lem4913758 : term140 = term140.
Proof. exact (eq_refl term140). Qed.
Lemma lem4913759 (_61040 : int) : (term560 _61040) = (term309 _61040).
Proof. exact (MK_COMB (@lem4913757 _61040) (@lem4913758)). Qed.
Lemma lem4913760 (_61039 : int) (_61040 : int) (h1 : term629 _61039 _61040) : term309 _61040.
Proof. exact (EQ_MP (@lem4913759 _61040) (@lem4913754 _61039 _61040 h1)). Qed.
Lemma lem4913762 (y : real) : term492 y.
Proof. exact (EQ_MP (@lem1396750 y) (@lem0)). Qed.
Lemma lem4913763 (_61040 : int) : term546 _61040.
Proof. exact (@lem4913762 (real_of_int _61040)). Qed.
Lemma lem4913764 (_61039 : int) (_61040 : int) (h1 : term629 _61039 _61040) : term547 _61040.
Proof. exact (@lem4913763 _61040 (@lem4913686 _61039 _61040 h1)). Qed.
Lemma lem4913765 (_61039 : int) (_61040 : int) (h1 : term629 _61039 _61040) : term563 _61040.
Proof. exact (@lem4913764 _61039 _61040 h1 term206). Qed.
Lemma lem4913766 (_61040 : int) : (term563 _61040) = ((term244 _61040) = term140).
Proof. exact (eq_refl (term563 _61040)). Qed.
Lemma lem4913773 (_61039 : int) (_61040 : int) (h1 : term629 _61039 _61040) : (term244 _61040) = term140.
Proof. exact (EQ_MP (@lem4913766 _61040) (@lem4913765 _61039 _61040 h1)). Qed.
Lemma lem4913774 (_61039 : int) (_61040 : int) (h1 : term629 _61039 _61040) : term630 _61040.
Proof. exact (conj (@lem4913773 _61039 _61040 h1) (@lem4913760 _61039 _61040 h1)). Qed.
Lemma lem4913776 (x : real) (y : real) : term499 x y.
Proof. exact (proj1 (@lem1988336 x y)). Qed.
Lemma lem4913777 (_61040 : int) : term631 _61040.
Proof. exact (@lem4913776 (term244 _61040) (term306 _61040)). Qed.
Lemma lem4913778 (_61039 : int) (_61040 : int) (h1 : term629 _61039 _61040) : term579 _61040.
Proof. exact (@lem4913777 _61040 (@lem4913774 _61039 _61040 h1)). Qed.
Lemma lem4913779 (_61040 : int) : (term580 _61040) = (term581 _61040).
Proof. exact (@lem1982763 (term244 _61040) (real_of_int _61040) term206). Qed.
Lemma lem4913780 (_61040 : int) : (term504 _61040) = (term505 _61040).
Proof. exact (@lem1982713 term206 (real_of_int _61040)). Qed.
Lemma lem4913782 (x : nat) : (real_of_num x) = (term202 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem4913783 : term150 = term231.
Proof. exact (@lem4913782 term18). Qed.
Lemma lem4913785 (x : nat) : (term204 x) = (term205 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem4913786 : term206 = term207.
Proof. exact (@lem4913785 term18). Qed.
Lemma lem4913787 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem4913788 : term506 = term507.
Proof. exact (MK_COMB (@lem4913787) (@lem4913786)). Qed.
Lemma lem4913789 : term508 = term509.
Proof. exact (MK_COMB (@lem4913788) (@lem4913783)). Qed.
Lemma lem4913790 : term510.
Proof. exact (@lem1981473 term206 term150 term150 term150 term140 term150). Qed.
Lemma lem4913792 (m : nat) (n : nat) : (term257 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem4913793 : term258 = term259.
Proof. exact (@lem4913792 (NUMERAL 0) term18). Qed.
Lemma lem4913794 : term260 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem4913795 (h1 : term260 = (BIT1 0)) : term259 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem4913796 : (term260 = (BIT1 0)) = (term259 = True).
Proof. exact (prop_ext (fun h1 : term260 = (BIT1 0) => @lem4913795 h1) (fun h1 : term259 = True => @lem4913794)). Qed.
Lemma lem4913797 : term259 = True.
Proof. exact (EQ_MP (@lem4913796) (@lem4913794)). Qed.
Lemma lem4913798 : term258 = True.
Proof. exact (TRANS (@lem4913793) (@lem4913797)). Qed.
Lemma lem4913799 : True = term258.
Proof. exact (SYM (@lem4913798)). Qed.
Lemma lem4913800 : term258.
Proof. exact (EQ_MP (@lem4913799) (@lem0)). Qed.
Lemma lem4913801 : term511.
Proof. exact (@lem4913790 (@lem4913800)). Qed.
Lemma lem4913803 (m : nat) (n : nat) : (term257 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem4913804 : term258 = term259.
Proof. exact (@lem4913803 (NUMERAL 0) term18). Qed.
Lemma lem4913805 : term260 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem4913806 (h1 : term260 = (BIT1 0)) : term259 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem4913807 : (term260 = (BIT1 0)) = (term259 = True).
Proof. exact (prop_ext (fun h1 : term260 = (BIT1 0) => @lem4913806 h1) (fun h1 : term259 = True => @lem4913805)). Qed.
Lemma lem4913808 : term259 = True.
Proof. exact (EQ_MP (@lem4913807) (@lem4913805)). Qed.
Lemma lem4913809 : term258 = True.
Proof. exact (TRANS (@lem4913804) (@lem4913808)). Qed.
Lemma lem4913810 : True = term258.
Proof. exact (SYM (@lem4913809)). Qed.
Lemma lem4913811 : term258.
Proof. exact (EQ_MP (@lem4913810) (@lem0)). Qed.
Lemma lem4913812 : term512.
Proof. exact (@lem4913801 (@lem4913811)). Qed.
Lemma lem4913814 (m : nat) (n : nat) : (term257 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem4913815 : term258 = term259.
Proof. exact (@lem4913814 (NUMERAL 0) term18). Qed.
Lemma lem4913816 : term260 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem4913817 (h1 : term260 = (BIT1 0)) : term259 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem4913818 : (term260 = (BIT1 0)) = (term259 = True).
Proof. exact (prop_ext (fun h1 : term260 = (BIT1 0) => @lem4913817 h1) (fun h1 : term259 = True => @lem4913816)). Qed.
Lemma lem4913819 : term259 = True.
Proof. exact (EQ_MP (@lem4913818) (@lem4913816)). Qed.
Lemma lem4913820 : term258 = True.
Proof. exact (TRANS (@lem4913815) (@lem4913819)). Qed.
Lemma lem4913821 : True = term258.
Proof. exact (SYM (@lem4913820)). Qed.
Lemma lem4913822 : term258.
Proof. exact (EQ_MP (@lem4913821) (@lem0)). Qed.
Lemma lem4913823 : term513.
Proof. exact (@lem4913812 (@lem4913822)). Qed.
Lemma lem4913825 (m : nat) (n : nat) : (term213 m n) = (term214 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem4913826 : term215 = term216.
Proof. exact (@lem4913825 term18 term18). Qed.
Lemma lem4913827 : (term217 = (BIT1 0)) = (term218 = term18).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem4913828 : term218 = term18.
Proof. exact (EQ_MP (@lem4913827) (@lem940073)). Qed.
Lemma lem4913829 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem4913830 : term216 = term150.
Proof. exact (MK_COMB (@lem4913829) (@lem4913828)). Qed.
Lemma lem4913831 : term215 = term150.
Proof. exact (TRANS (@lem4913826) (@lem4913830)). Qed.
Lemma lem4913833 (m : nat) (n : nat) : (term235 m n) = (term236 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem4913834 : term232 = term237.
Proof. exact (@lem4913833 term18 term18). Qed.
Lemma lem4913835 : (term217 = (BIT1 0)) = (term218 = term18).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem4913836 : term218 = term18.
Proof. exact (EQ_MP (@lem4913835) (@lem940073)). Qed.
Lemma lem4913837 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem4913838 : term216 = term150.
Proof. exact (MK_COMB (@lem4913837) (@lem4913836)). Qed.
Lemma lem4913839 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem4913840 : term237 = term206.
Proof. exact (MK_COMB (@lem4913839) (@lem4913838)). Qed.
Lemma lem4913841 : term232 = term206.
Proof. exact (TRANS (@lem4913834) (@lem4913840)). Qed.
Lemma lem4913842 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem4913843 : term514 = term506.
Proof. exact (MK_COMB (@lem4913842) (@lem4913841)). Qed.
Lemma lem4913844 : term515 = term508.
Proof. exact (MK_COMB (@lem4913843) (@lem4913831)). Qed.
Lemma lem4913846 (m : nat) : (term516 m) = term140.
Proof. exact (proj1 (@lem1367303 m)). Qed.
Lemma lem4913847 : term508 = term140.
Proof. exact (@lem4913846 term18). Qed.
Lemma lem4913848 : term515 = term140.
Proof. exact (TRANS (@lem4913844) (@lem4913847)). Qed.
Lemma lem4913849 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem4913850 : term517 = term268.
Proof. exact (MK_COMB (@lem4913849) (@lem4913848)). Qed.
Lemma lem4913851 : term150 = term150.
Proof. exact (eq_refl term150). Qed.
Lemma lem4913852 : term518 = term270.
Proof. exact (MK_COMB (@lem4913850) (@lem4913851)). Qed.
Lemma lem4913854 (x : nat) : (term271 x) = term140.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem4913855 : term270 = term140.
Proof. exact (@lem4913854 term18). Qed.
Lemma lem4913856 : term518 = term140.
Proof. exact (TRANS (@lem4913852) (@lem4913855)). Qed.
Lemma lem4913858 (m : nat) (n : nat) : (term213 m n) = (term214 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem4913859 : term215 = term216.
Proof. exact (@lem4913858 term18 term18). Qed.
Lemma lem4913860 : (term217 = (BIT1 0)) = (term218 = term18).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem4913861 : term218 = term18.
Proof. exact (EQ_MP (@lem4913860) (@lem940073)). Qed.
Lemma lem4913862 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem4913863 : term216 = term150.
Proof. exact (MK_COMB (@lem4913862) (@lem4913861)). Qed.
Lemma lem4913864 : term215 = term150.
Proof. exact (TRANS (@lem4913859) (@lem4913863)). Qed.
Lemma lem4913865 : term268 = term268.
Proof. exact (eq_refl term268). Qed.
Lemma lem4913866 : term272 = term270.
Proof. exact (MK_COMB (@lem4913865) (@lem4913864)). Qed.
Lemma lem4913868 (x : nat) : (term271 x) = term140.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem4913869 : term270 = term140.
Proof. exact (@lem4913868 term18). Qed.
Lemma lem4913870 : term272 = term140.
Proof. exact (TRANS (@lem4913866) (@lem4913869)). Qed.
Lemma lem4913871 : term140 = term272.
Proof. exact (SYM (@lem4913870)). Qed.
Lemma lem4913872 : term518 = term272.
Proof. exact (TRANS (@lem4913856) (@lem4913871)). Qed.
Lemma lem4913873 : term509 = term203.
Proof. exact (@lem4913823 (@lem4913872)). Qed.
Lemma lem4913874 : term508 = term203.
Proof. exact (TRANS (@lem4913789) (@lem4913873)). Qed.
Lemma lem4913876 (x : real) : (term222 x) = x.
Proof. exact (EQ_MP (@lem1981475 x) (@lem1981474 x)). Qed.
Lemma lem4913877 : term203 = term140.
Proof. exact (@lem4913876 term140). Qed.
Lemma lem4913878 : term508 = term140.
Proof. exact (TRANS (@lem4913874) (@lem4913877)). Qed.
Lemma lem4913879 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem4913880 : term519 = term268.
Proof. exact (MK_COMB (@lem4913879) (@lem4913878)). Qed.
Lemma lem4913881 (_61040 : int) : (real_of_int _61040) = (real_of_int _61040).
Proof. exact (eq_refl (real_of_int _61040)). Qed.
Lemma lem4913882 (_61040 : int) : (term505 _61040) = (term520 _61040).
Proof. exact (MK_COMB (@lem4913880) (@lem4913881 _61040)). Qed.
Lemma lem4913883 (_61040 : int) : (term504 _61040) = (term520 _61040).
Proof. exact (TRANS (@lem4913780 _61040) (@lem4913882 _61040)). Qed.
Lemma lem4913884 (_61040 : int) : (term520 _61040) = term140.
Proof. exact (@lem1982719 (real_of_int _61040)). Qed.
Lemma lem4913885 (_61040 : int) : (term504 _61040) = term140.
Proof. exact (TRANS (@lem4913883 _61040) (@lem4913884 _61040)). Qed.
Lemma lem4913886 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem4913887 (_61040 : int) : (term521 _61040) = term182.
Proof. exact (MK_COMB (@lem4913886) (@lem4913885 _61040)). Qed.
Lemma lem4913888 : term206 = term206.
Proof. exact (eq_refl term206). Qed.
Lemma lem4913889 (_61040 : int) : (term581 _61040) = term526.
Proof. exact (MK_COMB (@lem4913887 _61040) (@lem4913888)). Qed.
Lemma lem4913890 (_61040 : int) : (term580 _61040) = term526.
Proof. exact (TRANS (@lem4913779 _61040) (@lem4913889 _61040)). Qed.
Lemma lem4913891 : term526 = term206.
Proof. exact (@lem1982721 term206). Qed.
Lemma lem4913892 (_61040 : int) : (term580 _61040) = term206.
Proof. exact (TRANS (@lem4913890 _61040) (@lem4913891)). Qed.
Lemma lem4913893 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem4913894 (_61040 : int) : (term582 _61040) = term528.
Proof. exact (MK_COMB (@lem4913893) (@lem4913892 _61040)). Qed.
Lemma lem4913895 : term140 = term140.
Proof. exact (eq_refl term140). Qed.
Lemma lem4913896 (_61040 : int) : (term579 _61040) = term529.
Proof. exact (MK_COMB (@lem4913894 _61040) (@lem4913895)). Qed.
Lemma lem4913897 (_61039 : int) (_61040 : int) (h1 : term629 _61039 _61040) : term529.
Proof. exact (EQ_MP (@lem4913896 _61040) (@lem4913778 _61039 _61040 h1)). Qed.
Lemma lem4913899 (y : real) (x : real) : (real_ge x y) = (real_le y x).
Proof. exact (EQ_MP (@lem1980260 y x) (@lem1980259 y x)). Qed.
Lemma lem4913900 : term529 = term530.
Proof. exact (@lem4913899 term140 term206). Qed.
Lemma lem4913902 (x : nat) : (term204 x) = (term205 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem4913903 : term206 = term207.
Proof. exact (@lem4913902 term18). Qed.
Lemma lem4913905 (x : nat) : (real_of_num x) = (term202 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem4913906 : term140 = term203.
Proof. exact (@lem4913905 (NUMERAL 0)). Qed.
Lemma lem4913907 : real_le = real_le.
Proof. exact (eq_refl real_le). Qed.
Lemma lem4913908 : term142 = term531.
Proof. exact (MK_COMB (@lem4913907) (@lem4913906)). Qed.
Lemma lem4913909 : term530 = term532.
Proof. exact (MK_COMB (@lem4913908) (@lem4913903)). Qed.
Lemma lem4913910 : term533.
Proof. exact (@lem1980026 term140 term150 term206 term150). Qed.
Lemma lem4913912 (m : nat) (n : nat) : (term257 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem4913913 : term258 = term259.
Proof. exact (@lem4913912 (NUMERAL 0) term18). Qed.
Lemma lem4913914 : term260 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem4913915 (h1 : term260 = (BIT1 0)) : term259 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem4913916 : (term260 = (BIT1 0)) = (term259 = True).
Proof. exact (prop_ext (fun h1 : term260 = (BIT1 0) => @lem4913915 h1) (fun h1 : term259 = True => @lem4913914)). Qed.
Lemma lem4913917 : term259 = True.
Proof. exact (EQ_MP (@lem4913916) (@lem4913914)). Qed.
Lemma lem4913918 : term258 = True.
Proof. exact (TRANS (@lem4913913) (@lem4913917)). Qed.
Lemma lem4913919 : True = term258.
Proof. exact (SYM (@lem4913918)). Qed.
Lemma lem4913920 : term258.
Proof. exact (EQ_MP (@lem4913919) (@lem0)). Qed.
Lemma lem4913921 : term534.
Proof. exact (@lem4913910 (@lem4913920)). Qed.
Lemma lem4913923 (m : nat) (n : nat) : (term257 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem4913924 : term258 = term259.
Proof. exact (@lem4913923 (NUMERAL 0) term18). Qed.
Lemma lem4913925 : term260 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem4913926 (h1 : term260 = (BIT1 0)) : term259 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem4913927 : (term260 = (BIT1 0)) = (term259 = True).
Proof. exact (prop_ext (fun h1 : term260 = (BIT1 0) => @lem4913926 h1) (fun h1 : term259 = True => @lem4913925)). Qed.
Lemma lem4913928 : term259 = True.
Proof. exact (EQ_MP (@lem4913927) (@lem4913925)). Qed.
Lemma lem4913929 : term258 = True.
Proof. exact (TRANS (@lem4913924) (@lem4913928)). Qed.
Lemma lem4913930 : True = term258.
Proof. exact (SYM (@lem4913929)). Qed.
Lemma lem4913931 : term258.
Proof. exact (EQ_MP (@lem4913930) (@lem0)). Qed.
Lemma lem4913932 : term532 = term535.
Proof. exact (@lem4913921 (@lem4913931)). Qed.
Lemma lem4913934 (m : nat) (n : nat) : (term235 m n) = (term236 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem4913935 : term232 = term237.
Proof. exact (@lem4913934 term18 term18). Qed.
Lemma lem4913936 : (term217 = (BIT1 0)) = (term218 = term18).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem4913937 : term218 = term18.
Proof. exact (EQ_MP (@lem4913936) (@lem940073)). Qed.
Lemma lem4913938 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem4913939 : term216 = term150.
Proof. exact (MK_COMB (@lem4913938) (@lem4913937)). Qed.
Lemma lem4913940 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem4913941 : term237 = term206.
Proof. exact (MK_COMB (@lem4913940) (@lem4913939)). Qed.
Lemma lem4913942 : term232 = term206.
Proof. exact (TRANS (@lem4913935) (@lem4913941)). Qed.
Lemma lem4913944 (x : nat) : (term271 x) = term140.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem4913945 : term270 = term140.
Proof. exact (@lem4913944 term18). Qed.
Lemma lem4913946 : real_le = real_le.
Proof. exact (eq_refl real_le). Qed.
Lemma lem4913947 : term536 = term142.
Proof. exact (MK_COMB (@lem4913946) (@lem4913945)). Qed.
Lemma lem4913948 : term535 = term530.
Proof. exact (MK_COMB (@lem4913947) (@lem4913942)). Qed.
Lemma lem4913950 (m : nat) (n : nat) : (term537 m n) = (term538 m n).
Proof. exact (proj2 (@lem1365406 m n)). Qed.
Lemma lem4913951 : term530 = term539.
Proof. exact (@lem4913950 (NUMERAL 0) term18). Qed.
Lemma lem4913952 : term260 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem4913953 (h1 : term260 = (BIT1 0)) : (term18 = (NUMERAL 0)) = False.
Proof. exact (@lem1013352 0 0 (BIT1 0) h1). Qed.
Lemma lem4913954 : (term260 = (BIT1 0)) = ((term18 = (NUMERAL 0)) = False).
Proof. exact (prop_ext (fun h1 : term260 = (BIT1 0) => @lem4913953 h1) (fun h1 : (term18 = (NUMERAL 0)) = False => @lem4913952)). Qed.
Lemma lem4913955 : (term18 = (NUMERAL 0)) = False.
Proof. exact (EQ_MP (@lem4913954) (@lem4913952)). Qed.
Lemma lem4913956 : ((NUMERAL 0) = (NUMERAL 0)) = True.
Proof. exact (@lem1013364 0). Qed.
Lemma lem4913957 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4913958 : term540 = (and True).
Proof. exact (MK_COMB (@lem4913957) (@lem4913956)). Qed.
Lemma lem4913959 : term539 = (True /\ False).
Proof. exact (MK_COMB (@lem4913958) (@lem4913955)). Qed.
Lemma lem4913961 : (True /\ False) = False.
Proof. exact (proj1 (@lem1365106)). Qed.
Lemma lem4913962 : term539 = False.
Proof. exact (TRANS (@lem4913959) (@lem4913961)). Qed.
Lemma lem4913963 : term530 = False.
Proof. exact (TRANS (@lem4913951) (@lem4913962)). Qed.
Lemma lem4913964 : term535 = False.
Proof. exact (TRANS (@lem4913948) (@lem4913963)). Qed.
Lemma lem4913965 : term532 = False.
Proof. exact (TRANS (@lem4913932) (@lem4913964)). Qed.
Lemma lem4913966 : term530 = False.
Proof. exact (TRANS (@lem4913909) (@lem4913965)). Qed.
Lemma lem4913967 : term529 = False.
Proof. exact (TRANS (@lem4913900) (@lem4913966)). Qed.
Lemma lem4913968 (_61039 : int) (_61040 : int) (h1 : term629 _61039 _61040) : False.
Proof. exact (EQ_MP (@lem4913967) (@lem4913897 _61039 _61040 h1)). Qed.
Lemma lem4913969 (_61039 : int) (_61040 : int) (h1 : term632 _61039 _61040) : term632 _61039 _61040.
Proof. exact (h1). Qed.
Lemma lem4913970 (_61039 : int) (_61040 : int) (h1 : term632 _61039 _61040) : term437 _61039 _61040.
Proof. exact (proj2 (@lem4913969 _61039 _61040 h1)). Qed.
Lemma lem4913972 (_61039 : int) (_61040 : int) (h1 : term632 _61039 _61040) : term388 _61039 _61040.
Proof. exact (proj2 (@lem4913970 _61039 _61040 h1)). Qed.
Lemma lem4913974 (_61039 : int) (_61040 : int) (h1 : term632 _61039 _61040) : term343 _61040.
Proof. exact (proj2 (@lem4913972 _61039 _61040 h1)). Qed.
Lemma lem4913978 (_61039 : int) (_61040 : int) (h1 : term632 _61039 _61040) : term309 _61040.
Proof. exact (proj2 (@lem4913974 _61039 _61040 h1)). Qed.
Lemma lem4913979 (_61039 : int) (_61040 : int) (h1 : term632 _61039 _61040) : (real_of_int _61040) = term140.
Proof. exact (proj1 (@lem4913974 _61039 _61040 h1)). Qed.
Lemma lem4913981 (y : real) (x : real) : (real_gt x y) = (real_lt y x).
Proof. exact (EQ_MP (@lem1980266 y x) (@lem1980265 y x)). Qed.
Lemma lem4913982 : term478 = term258.
Proof. exact (@lem4913981 term140 term150). Qed.
Lemma lem4913984 (x : nat) : (real_of_num x) = (term202 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem4913985 : term150 = term231.
Proof. exact (@lem4913984 term18). Qed.
Lemma lem4913987 (x : nat) : (real_of_num x) = (term202 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem4913988 : term140 = term203.
Proof. exact (@lem4913987 (NUMERAL 0)). Qed.
Lemma lem4913989 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem4913990 : term479 = term480.
Proof. exact (MK_COMB (@lem4913989) (@lem4913988)). Qed.
Lemma lem4913991 : term258 = term481.
Proof. exact (MK_COMB (@lem4913990) (@lem4913985)). Qed.
Lemma lem4913992 : term482.
Proof. exact (@lem1980255 term140 term150 term150 term150). Qed.
Lemma lem4913994 (m : nat) (n : nat) : (term257 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem4913995 : term258 = term259.
Proof. exact (@lem4913994 (NUMERAL 0) term18). Qed.
Lemma lem4913996 : term260 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem4913997 (h1 : term260 = (BIT1 0)) : term259 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem4913998 : (term260 = (BIT1 0)) = (term259 = True).
Proof. exact (prop_ext (fun h1 : term260 = (BIT1 0) => @lem4913997 h1) (fun h1 : term259 = True => @lem4913996)). Qed.
Lemma lem4913999 : term259 = True.
Proof. exact (EQ_MP (@lem4913998) (@lem4913996)). Qed.
Lemma lem4914000 : term258 = True.
Proof. exact (TRANS (@lem4913995) (@lem4913999)). Qed.
Lemma lem4914001 : True = term258.
Proof. exact (SYM (@lem4914000)). Qed.
Lemma lem4914002 : term258.
Proof. exact (EQ_MP (@lem4914001) (@lem0)). Qed.
Lemma lem4914003 : term483.
Proof. exact (@lem4913992 (@lem4914002)). Qed.
Lemma lem4914005 (m : nat) (n : nat) : (term257 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem4914006 : term258 = term259.
Proof. exact (@lem4914005 (NUMERAL 0) term18). Qed.
Lemma lem4914007 : term260 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem4914008 (h1 : term260 = (BIT1 0)) : term259 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem4914009 : (term260 = (BIT1 0)) = (term259 = True).
Proof. exact (prop_ext (fun h1 : term260 = (BIT1 0) => @lem4914008 h1) (fun h1 : term259 = True => @lem4914007)). Qed.
Lemma lem4914010 : term259 = True.
Proof. exact (EQ_MP (@lem4914009) (@lem4914007)). Qed.
Lemma lem4914011 : term258 = True.
Proof. exact (TRANS (@lem4914006) (@lem4914010)). Qed.
Lemma lem4914012 : True = term258.
Proof. exact (SYM (@lem4914011)). Qed.
Lemma lem4914013 : term258.
Proof. exact (EQ_MP (@lem4914012) (@lem0)). Qed.
Lemma lem4914014 : term481 = term484.
Proof. exact (@lem4914003 (@lem4914013)). Qed.
Lemma lem4914016 (m : nat) (n : nat) : (term213 m n) = (term214 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem4914017 : term215 = term216.
Proof. exact (@lem4914016 term18 term18). Qed.
Lemma lem4914018 : (term217 = (BIT1 0)) = (term218 = term18).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem4914019 : term218 = term18.
Proof. exact (EQ_MP (@lem4914018) (@lem940073)). Qed.
Lemma lem4914020 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem4914021 : term216 = term150.
Proof. exact (MK_COMB (@lem4914020) (@lem4914019)). Qed.
Lemma lem4914022 : term215 = term150.
Proof. exact (TRANS (@lem4914017) (@lem4914021)). Qed.
Lemma lem4914024 (x : nat) : (term271 x) = term140.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem4914025 : term270 = term140.
Proof. exact (@lem4914024 term18). Qed.
Lemma lem4914026 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem4914027 : term485 = term479.
Proof. exact (MK_COMB (@lem4914026) (@lem4914025)). Qed.
Lemma lem4914028 : term484 = term258.
Proof. exact (MK_COMB (@lem4914027) (@lem4914022)). Qed.
Lemma lem4914030 (m : nat) (n : nat) : (term257 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem4914031 : term258 = term259.
Proof. exact (@lem4914030 (NUMERAL 0) term18). Qed.
Lemma lem4914032 : term260 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem4914033 (h1 : term260 = (BIT1 0)) : term259 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem4914034 : (term260 = (BIT1 0)) = (term259 = True).
Proof. exact (prop_ext (fun h1 : term260 = (BIT1 0) => @lem4914033 h1) (fun h1 : term259 = True => @lem4914032)). Qed.
Lemma lem4914035 : term259 = True.
Proof. exact (EQ_MP (@lem4914034) (@lem4914032)). Qed.
Lemma lem4914036 : term258 = True.
Proof. exact (TRANS (@lem4914031) (@lem4914035)). Qed.
Lemma lem4914037 : term484 = True.
Proof. exact (TRANS (@lem4914028) (@lem4914036)). Qed.
Lemma lem4914038 : term481 = True.
Proof. exact (TRANS (@lem4914014) (@lem4914037)). Qed.
Lemma lem4914039 : term258 = True.
Proof. exact (TRANS (@lem4913991) (@lem4914038)). Qed.
Lemma lem4914040 : term478 = True.
Proof. exact (TRANS (@lem4913982) (@lem4914039)). Qed.
Lemma lem4914041 : True = term478.
Proof. exact (SYM (@lem4914040)). Qed.
Lemma lem4914042 : term478.
Proof. exact (EQ_MP (@lem4914041) (@lem0)). Qed.
Lemma lem4914043 (_61039 : int) (_61040 : int) (h1 : term632 _61039 _61040) : term558 _61040.
Proof. exact (conj (@lem4914042) (@lem4913978 _61039 _61040 h1)). Qed.
Lemma lem4914045 (x : real) (y : real) : term487 x y.
Proof. exact (proj1 (@lem1988332 x y)). Qed.
Lemma lem4914046 (_61040 : int) : term559 _61040.
Proof. exact (@lem4914045 term150 (term306 _61040)). Qed.
Lemma lem4914047 (_61039 : int) (_61040 : int) (h1 : term632 _61039 _61040) : term560 _61040.
Proof. exact (@lem4914046 _61040 (@lem4914043 _61039 _61040 h1)). Qed.
Lemma lem4914048 (_61040 : int) : (term561 _61040) = (term306 _61040).
Proof. exact (@lem1982733 (term306 _61040)). Qed.
Lemma lem4914049 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem4914050 (_61040 : int) : (term562 _61040) = (term308 _61040).
Proof. exact (MK_COMB (@lem4914049) (@lem4914048 _61040)). Qed.
Lemma lem4914051 : term140 = term140.
Proof. exact (eq_refl term140). Qed.
Lemma lem4914052 (_61040 : int) : (term560 _61040) = (term309 _61040).
Proof. exact (MK_COMB (@lem4914050 _61040) (@lem4914051)). Qed.
Lemma lem4914053 (_61039 : int) (_61040 : int) (h1 : term632 _61039 _61040) : term309 _61040.
Proof. exact (EQ_MP (@lem4914052 _61040) (@lem4914047 _61039 _61040 h1)). Qed.
Lemma lem4914055 (y : real) : term492 y.
Proof. exact (EQ_MP (@lem1396750 y) (@lem0)). Qed.
Lemma lem4914056 (_61040 : int) : term546 _61040.
Proof. exact (@lem4914055 (real_of_int _61040)). Qed.
Lemma lem4914057 (_61039 : int) (_61040 : int) (h1 : term632 _61039 _61040) : term547 _61040.
Proof. exact (@lem4914056 _61040 (@lem4913979 _61039 _61040 h1)). Qed.
Lemma lem4914058 (_61039 : int) (_61040 : int) (h1 : term632 _61039 _61040) : term563 _61040.
Proof. exact (@lem4914057 _61039 _61040 h1 term206). Qed.
Lemma lem4914059 (_61040 : int) : (term563 _61040) = ((term244 _61040) = term140).
Proof. exact (eq_refl (term563 _61040)). Qed.
Lemma lem4914066 (_61039 : int) (_61040 : int) (h1 : term632 _61039 _61040) : (term244 _61040) = term140.
Proof. exact (EQ_MP (@lem4914059 _61040) (@lem4914058 _61039 _61040 h1)). Qed.
Lemma lem4914067 (_61039 : int) (_61040 : int) (h1 : term632 _61039 _61040) : term630 _61040.
Proof. exact (conj (@lem4914066 _61039 _61040 h1) (@lem4914053 _61039 _61040 h1)). Qed.
Lemma lem4914069 (x : real) (y : real) : term499 x y.
Proof. exact (proj1 (@lem1988336 x y)). Qed.
Lemma lem4914070 (_61040 : int) : term631 _61040.
Proof. exact (@lem4914069 (term244 _61040) (term306 _61040)). Qed.
Lemma lem4914071 (_61039 : int) (_61040 : int) (h1 : term632 _61039 _61040) : term579 _61040.
Proof. exact (@lem4914070 _61040 (@lem4914067 _61039 _61040 h1)). Qed.
Lemma lem4914072 (_61040 : int) : (term580 _61040) = (term581 _61040).
Proof. exact (@lem1982763 (term244 _61040) (real_of_int _61040) term206). Qed.
Lemma lem4914073 (_61040 : int) : (term504 _61040) = (term505 _61040).
Proof. exact (@lem1982713 term206 (real_of_int _61040)). Qed.
Lemma lem4914075 (x : nat) : (real_of_num x) = (term202 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem4914076 : term150 = term231.
Proof. exact (@lem4914075 term18). Qed.
Lemma lem4914078 (x : nat) : (term204 x) = (term205 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem4914079 : term206 = term207.
Proof. exact (@lem4914078 term18). Qed.
Lemma lem4914080 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem4914081 : term506 = term507.
Proof. exact (MK_COMB (@lem4914080) (@lem4914079)). Qed.
Lemma lem4914082 : term508 = term509.
Proof. exact (MK_COMB (@lem4914081) (@lem4914076)). Qed.
Lemma lem4914083 : term510.
Proof. exact (@lem1981473 term206 term150 term150 term150 term140 term150). Qed.
Lemma lem4914085 (m : nat) (n : nat) : (term257 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem4914086 : term258 = term259.
Proof. exact (@lem4914085 (NUMERAL 0) term18). Qed.
Lemma lem4914087 : term260 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem4914088 (h1 : term260 = (BIT1 0)) : term259 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem4914089 : (term260 = (BIT1 0)) = (term259 = True).
Proof. exact (prop_ext (fun h1 : term260 = (BIT1 0) => @lem4914088 h1) (fun h1 : term259 = True => @lem4914087)). Qed.
Lemma lem4914090 : term259 = True.
Proof. exact (EQ_MP (@lem4914089) (@lem4914087)). Qed.
Lemma lem4914091 : term258 = True.
Proof. exact (TRANS (@lem4914086) (@lem4914090)). Qed.
Lemma lem4914092 : True = term258.
Proof. exact (SYM (@lem4914091)). Qed.
Lemma lem4914093 : term258.
Proof. exact (EQ_MP (@lem4914092) (@lem0)). Qed.
Lemma lem4914094 : term511.
Proof. exact (@lem4914083 (@lem4914093)). Qed.
Lemma lem4914096 (m : nat) (n : nat) : (term257 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem4914097 : term258 = term259.
Proof. exact (@lem4914096 (NUMERAL 0) term18). Qed.
Lemma lem4914098 : term260 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem4914099 (h1 : term260 = (BIT1 0)) : term259 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem4914100 : (term260 = (BIT1 0)) = (term259 = True).
Proof. exact (prop_ext (fun h1 : term260 = (BIT1 0) => @lem4914099 h1) (fun h1 : term259 = True => @lem4914098)). Qed.
Lemma lem4914101 : term259 = True.
Proof. exact (EQ_MP (@lem4914100) (@lem4914098)). Qed.
Lemma lem4914102 : term258 = True.
Proof. exact (TRANS (@lem4914097) (@lem4914101)). Qed.
Lemma lem4914103 : True = term258.
Proof. exact (SYM (@lem4914102)). Qed.
Lemma lem4914104 : term258.
Proof. exact (EQ_MP (@lem4914103) (@lem0)). Qed.
Lemma lem4914105 : term512.
Proof. exact (@lem4914094 (@lem4914104)). Qed.
Lemma lem4914107 (m : nat) (n : nat) : (term257 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem4914108 : term258 = term259.
Proof. exact (@lem4914107 (NUMERAL 0) term18). Qed.
Lemma lem4914109 : term260 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem4914110 (h1 : term260 = (BIT1 0)) : term259 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem4914111 : (term260 = (BIT1 0)) = (term259 = True).
Proof. exact (prop_ext (fun h1 : term260 = (BIT1 0) => @lem4914110 h1) (fun h1 : term259 = True => @lem4914109)). Qed.
Lemma lem4914112 : term259 = True.
Proof. exact (EQ_MP (@lem4914111) (@lem4914109)). Qed.
Lemma lem4914113 : term258 = True.
Proof. exact (TRANS (@lem4914108) (@lem4914112)). Qed.
Lemma lem4914114 : True = term258.
Proof. exact (SYM (@lem4914113)). Qed.
Lemma lem4914115 : term258.
Proof. exact (EQ_MP (@lem4914114) (@lem0)). Qed.
Lemma lem4914116 : term513.
Proof. exact (@lem4914105 (@lem4914115)). Qed.
Lemma lem4914118 (m : nat) (n : nat) : (term213 m n) = (term214 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem4914119 : term215 = term216.
Proof. exact (@lem4914118 term18 term18). Qed.
Lemma lem4914120 : (term217 = (BIT1 0)) = (term218 = term18).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem4914121 : term218 = term18.
Proof. exact (EQ_MP (@lem4914120) (@lem940073)). Qed.
Lemma lem4914122 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem4914123 : term216 = term150.
Proof. exact (MK_COMB (@lem4914122) (@lem4914121)). Qed.
Lemma lem4914124 : term215 = term150.
Proof. exact (TRANS (@lem4914119) (@lem4914123)). Qed.
Lemma lem4914126 (m : nat) (n : nat) : (term235 m n) = (term236 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem4914127 : term232 = term237.
Proof. exact (@lem4914126 term18 term18). Qed.
Lemma lem4914128 : (term217 = (BIT1 0)) = (term218 = term18).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem4914129 : term218 = term18.
Proof. exact (EQ_MP (@lem4914128) (@lem940073)). Qed.
Lemma lem4914130 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem4914131 : term216 = term150.
Proof. exact (MK_COMB (@lem4914130) (@lem4914129)). Qed.
Lemma lem4914132 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem4914133 : term237 = term206.
Proof. exact (MK_COMB (@lem4914132) (@lem4914131)). Qed.
Lemma lem4914134 : term232 = term206.
Proof. exact (TRANS (@lem4914127) (@lem4914133)). Qed.
Lemma lem4914135 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem4914136 : term514 = term506.
Proof. exact (MK_COMB (@lem4914135) (@lem4914134)). Qed.
Lemma lem4914137 : term515 = term508.
Proof. exact (MK_COMB (@lem4914136) (@lem4914124)). Qed.
Lemma lem4914139 (m : nat) : (term516 m) = term140.
Proof. exact (proj1 (@lem1367303 m)). Qed.
Lemma lem4914140 : term508 = term140.
Proof. exact (@lem4914139 term18). Qed.
Lemma lem4914141 : term515 = term140.
Proof. exact (TRANS (@lem4914137) (@lem4914140)). Qed.
Lemma lem4914142 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem4914143 : term517 = term268.
Proof. exact (MK_COMB (@lem4914142) (@lem4914141)). Qed.
Lemma lem4914144 : term150 = term150.
Proof. exact (eq_refl term150). Qed.
Lemma lem4914145 : term518 = term270.
Proof. exact (MK_COMB (@lem4914143) (@lem4914144)). Qed.
Lemma lem4914147 (x : nat) : (term271 x) = term140.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem4914148 : term270 = term140.
Proof. exact (@lem4914147 term18). Qed.
Lemma lem4914149 : term518 = term140.
Proof. exact (TRANS (@lem4914145) (@lem4914148)). Qed.
Lemma lem4914151 (m : nat) (n : nat) : (term213 m n) = (term214 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem4914152 : term215 = term216.
Proof. exact (@lem4914151 term18 term18). Qed.
Lemma lem4914153 : (term217 = (BIT1 0)) = (term218 = term18).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem4914154 : term218 = term18.
Proof. exact (EQ_MP (@lem4914153) (@lem940073)). Qed.
Lemma lem4914155 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem4914156 : term216 = term150.
Proof. exact (MK_COMB (@lem4914155) (@lem4914154)). Qed.
Lemma lem4914157 : term215 = term150.
Proof. exact (TRANS (@lem4914152) (@lem4914156)). Qed.
Lemma lem4914158 : term268 = term268.
Proof. exact (eq_refl term268). Qed.
Lemma lem4914159 : term272 = term270.
Proof. exact (MK_COMB (@lem4914158) (@lem4914157)). Qed.
Lemma lem4914161 (x : nat) : (term271 x) = term140.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem4914162 : term270 = term140.
Proof. exact (@lem4914161 term18). Qed.
Lemma lem4914163 : term272 = term140.
Proof. exact (TRANS (@lem4914159) (@lem4914162)). Qed.
Lemma lem4914164 : term140 = term272.
Proof. exact (SYM (@lem4914163)). Qed.
Lemma lem4914165 : term518 = term272.
Proof. exact (TRANS (@lem4914149) (@lem4914164)). Qed.
Lemma lem4914166 : term509 = term203.
Proof. exact (@lem4914116 (@lem4914165)). Qed.
Lemma lem4914167 : term508 = term203.
Proof. exact (TRANS (@lem4914082) (@lem4914166)). Qed.
Lemma lem4914169 (x : real) : (term222 x) = x.
Proof. exact (EQ_MP (@lem1981475 x) (@lem1981474 x)). Qed.
Lemma lem4914170 : term203 = term140.
Proof. exact (@lem4914169 term140). Qed.
Lemma lem4914171 : term508 = term140.
Proof. exact (TRANS (@lem4914167) (@lem4914170)). Qed.
Lemma lem4914172 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem4914173 : term519 = term268.
Proof. exact (MK_COMB (@lem4914172) (@lem4914171)). Qed.
Lemma lem4914174 (_61040 : int) : (real_of_int _61040) = (real_of_int _61040).
Proof. exact (eq_refl (real_of_int _61040)). Qed.
Lemma lem4914175 (_61040 : int) : (term505 _61040) = (term520 _61040).
Proof. exact (MK_COMB (@lem4914173) (@lem4914174 _61040)). Qed.
Lemma lem4914176 (_61040 : int) : (term504 _61040) = (term520 _61040).
Proof. exact (TRANS (@lem4914073 _61040) (@lem4914175 _61040)). Qed.
Lemma lem4914177 (_61040 : int) : (term520 _61040) = term140.
Proof. exact (@lem1982719 (real_of_int _61040)). Qed.
Lemma lem4914178 (_61040 : int) : (term504 _61040) = term140.
Proof. exact (TRANS (@lem4914176 _61040) (@lem4914177 _61040)). Qed.
Lemma lem4914179 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem4914180 (_61040 : int) : (term521 _61040) = term182.
Proof. exact (MK_COMB (@lem4914179) (@lem4914178 _61040)). Qed.
Lemma lem4914181 : term206 = term206.
Proof. exact (eq_refl term206). Qed.
Lemma lem4914182 (_61040 : int) : (term581 _61040) = term526.
Proof. exact (MK_COMB (@lem4914180 _61040) (@lem4914181)). Qed.
Lemma lem4914183 (_61040 : int) : (term580 _61040) = term526.
Proof. exact (TRANS (@lem4914072 _61040) (@lem4914182 _61040)). Qed.
Lemma lem4914184 : term526 = term206.
Proof. exact (@lem1982721 term206). Qed.
Lemma lem4914185 (_61040 : int) : (term580 _61040) = term206.
Proof. exact (TRANS (@lem4914183 _61040) (@lem4914184)). Qed.
Lemma lem4914186 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem4914187 (_61040 : int) : (term582 _61040) = term528.
Proof. exact (MK_COMB (@lem4914186) (@lem4914185 _61040)). Qed.
Lemma lem4914188 : term140 = term140.
Proof. exact (eq_refl term140). Qed.
Lemma lem4914189 (_61040 : int) : (term579 _61040) = term529.
Proof. exact (MK_COMB (@lem4914187 _61040) (@lem4914188)). Qed.
Lemma lem4914190 (_61039 : int) (_61040 : int) (h1 : term632 _61039 _61040) : term529.
Proof. exact (EQ_MP (@lem4914189 _61040) (@lem4914071 _61039 _61040 h1)). Qed.
Lemma lem4914192 (y : real) (x : real) : (real_ge x y) = (real_le y x).
Proof. exact (EQ_MP (@lem1980260 y x) (@lem1980259 y x)). Qed.
Lemma lem4914193 : term529 = term530.
Proof. exact (@lem4914192 term140 term206). Qed.
Lemma lem4914195 (x : nat) : (term204 x) = (term205 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem4914196 : term206 = term207.
Proof. exact (@lem4914195 term18). Qed.
Lemma lem4914198 (x : nat) : (real_of_num x) = (term202 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem4914199 : term140 = term203.
Proof. exact (@lem4914198 (NUMERAL 0)). Qed.
Lemma lem4914200 : real_le = real_le.
Proof. exact (eq_refl real_le). Qed.
Lemma lem4914201 : term142 = term531.
Proof. exact (MK_COMB (@lem4914200) (@lem4914199)). Qed.
Lemma lem4914202 : term530 = term532.
Proof. exact (MK_COMB (@lem4914201) (@lem4914196)). Qed.
Lemma lem4914203 : term533.
Proof. exact (@lem1980026 term140 term150 term206 term150). Qed.
Lemma lem4914205 (m : nat) (n : nat) : (term257 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem4914206 : term258 = term259.
Proof. exact (@lem4914205 (NUMERAL 0) term18). Qed.
Lemma lem4914207 : term260 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem4914208 (h1 : term260 = (BIT1 0)) : term259 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem4914209 : (term260 = (BIT1 0)) = (term259 = True).
Proof. exact (prop_ext (fun h1 : term260 = (BIT1 0) => @lem4914208 h1) (fun h1 : term259 = True => @lem4914207)). Qed.
Lemma lem4914210 : term259 = True.
Proof. exact (EQ_MP (@lem4914209) (@lem4914207)). Qed.
Lemma lem4914211 : term258 = True.
Proof. exact (TRANS (@lem4914206) (@lem4914210)). Qed.
Lemma lem4914212 : True = term258.
Proof. exact (SYM (@lem4914211)). Qed.
Lemma lem4914213 : term258.
Proof. exact (EQ_MP (@lem4914212) (@lem0)). Qed.
Lemma lem4914214 : term534.
Proof. exact (@lem4914203 (@lem4914213)). Qed.
Lemma lem4914216 (m : nat) (n : nat) : (term257 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem4914217 : term258 = term259.
Proof. exact (@lem4914216 (NUMERAL 0) term18). Qed.
Lemma lem4914218 : term260 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem4914219 (h1 : term260 = (BIT1 0)) : term259 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem4914220 : (term260 = (BIT1 0)) = (term259 = True).
Proof. exact (prop_ext (fun h1 : term260 = (BIT1 0) => @lem4914219 h1) (fun h1 : term259 = True => @lem4914218)). Qed.
Lemma lem4914221 : term259 = True.
Proof. exact (EQ_MP (@lem4914220) (@lem4914218)). Qed.
Lemma lem4914222 : term258 = True.
Proof. exact (TRANS (@lem4914217) (@lem4914221)). Qed.
Lemma lem4914223 : True = term258.
Proof. exact (SYM (@lem4914222)). Qed.
Lemma lem4914224 : term258.
Proof. exact (EQ_MP (@lem4914223) (@lem0)). Qed.
Lemma lem4914225 : term532 = term535.
Proof. exact (@lem4914214 (@lem4914224)). Qed.
Lemma lem4914227 (m : nat) (n : nat) : (term235 m n) = (term236 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem4914228 : term232 = term237.
Proof. exact (@lem4914227 term18 term18). Qed.
Lemma lem4914229 : (term217 = (BIT1 0)) = (term218 = term18).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem4914230 : term218 = term18.
Proof. exact (EQ_MP (@lem4914229) (@lem940073)). Qed.
Lemma lem4914231 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem4914232 : term216 = term150.
Proof. exact (MK_COMB (@lem4914231) (@lem4914230)). Qed.
Lemma lem4914233 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem4914234 : term237 = term206.
Proof. exact (MK_COMB (@lem4914233) (@lem4914232)). Qed.
Lemma lem4914235 : term232 = term206.
Proof. exact (TRANS (@lem4914228) (@lem4914234)). Qed.
Lemma lem4914237 (x : nat) : (term271 x) = term140.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem4914238 : term270 = term140.
Proof. exact (@lem4914237 term18). Qed.
Lemma lem4914239 : real_le = real_le.
Proof. exact (eq_refl real_le). Qed.
Lemma lem4914240 : term536 = term142.
Proof. exact (MK_COMB (@lem4914239) (@lem4914238)). Qed.
Lemma lem4914241 : term535 = term530.
Proof. exact (MK_COMB (@lem4914240) (@lem4914235)). Qed.
Lemma lem4914243 (m : nat) (n : nat) : (term537 m n) = (term538 m n).
Proof. exact (proj2 (@lem1365406 m n)). Qed.
Lemma lem4914244 : term530 = term539.
Proof. exact (@lem4914243 (NUMERAL 0) term18). Qed.
Lemma lem4914245 : term260 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem4914246 (h1 : term260 = (BIT1 0)) : (term18 = (NUMERAL 0)) = False.
Proof. exact (@lem1013352 0 0 (BIT1 0) h1). Qed.
Lemma lem4914247 : (term260 = (BIT1 0)) = ((term18 = (NUMERAL 0)) = False).
Proof. exact (prop_ext (fun h1 : term260 = (BIT1 0) => @lem4914246 h1) (fun h1 : (term18 = (NUMERAL 0)) = False => @lem4914245)). Qed.
Lemma lem4914248 : (term18 = (NUMERAL 0)) = False.
Proof. exact (EQ_MP (@lem4914247) (@lem4914245)). Qed.
Lemma lem4914249 : ((NUMERAL 0) = (NUMERAL 0)) = True.
Proof. exact (@lem1013364 0). Qed.
Lemma lem4914250 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4914251 : term540 = (and True).
Proof. exact (MK_COMB (@lem4914250) (@lem4914249)). Qed.
Lemma lem4914252 : term539 = (True /\ False).
Proof. exact (MK_COMB (@lem4914251) (@lem4914248)). Qed.
Lemma lem4914254 : (True /\ False) = False.
Proof. exact (proj1 (@lem1365106)). Qed.
Lemma lem4914255 : term539 = False.
Proof. exact (TRANS (@lem4914252) (@lem4914254)). Qed.
Lemma lem4914256 : term530 = False.
Proof. exact (TRANS (@lem4914244) (@lem4914255)). Qed.
Lemma lem4914257 : term535 = False.
Proof. exact (TRANS (@lem4914241) (@lem4914256)). Qed.
Lemma lem4914258 : term532 = False.
Proof. exact (TRANS (@lem4914225) (@lem4914257)). Qed.
Lemma lem4914259 : term530 = False.
Proof. exact (TRANS (@lem4914202) (@lem4914258)). Qed.
Lemma lem4914260 : term529 = False.
Proof. exact (TRANS (@lem4914193) (@lem4914259)). Qed.
Lemma lem4914261 (_61039 : int) (_61040 : int) (h1 : term632 _61039 _61040) : False.
Proof. exact (EQ_MP (@lem4914260) (@lem4914190 _61039 _61040 h1)). Qed.
Lemma lem4914262 (_61039 : int) (_61040 : int) (h1 : term435 _61039 _61040) : False.
Proof. exact (or_elim (@lem4913677 _61039 _61040 h1) (fun h0 : term629 _61039 _61040 => @lem4913968 _61039 _61040 h0) (fun h0 : term632 _61039 _61040 => @lem4914261 _61039 _61040 h0)). Qed.
Lemma lem4914263 (_61039 : int) (_61040 : int) (h1 : term444 _61039 _61040) : False.
Proof. exact (or_elim (@lem4912705 _61039 _61040 h1) (fun h0 : term439 _61039 _61040 => @lem4913676 _61039 _61040 h0) (fun h0 : term435 _61039 _61040 => @lem4914262 _61039 _61040 h0)). Qed.
Lemma lem4914264 (_61039 : int) (_61040 : int) (h1 : term460 _61039 _61040) : False.
Proof. exact (or_elim (@lem4911356 _61039 _61040 h1) (fun h0 : term457 _61039 _61040 => @lem4912704 _61039 _61040 h0) (fun h0 : term444 _61039 _61040 => @lem4914263 _61039 _61040 h0)). Qed.
Lemma lem4914265 (_61039 : int) (_61040 : int) (h1 : term476 _61039 _61040) : False.
Proof. exact (or_elim (@lem4909155 _61039 _61040 h1) (fun h0 : term473 _61039 _61040 => @lem4911355 _61039 _61040 h0) (fun h0 : term460 _61039 _61040 => @lem4914264 _61039 _61040 h0)). Qed.
Lemma lem4914267 (_61039 : int) (_61040 : int) (h1 : term476 _61039 _61040) : term476 _61039 _61040.
Proof. exact (h1). Qed.
Lemma lem4914268 (_61039 : int) (_61040 : int) (h1 : term476 _61039 _61040) : (term476 _61039 _61040) = False.
Proof. exact (prop_ext (fun h2 : term476 _61039 _61040 => @lem4914265 _61039 _61040 h1) (fun h2 : False => @lem4914267 _61039 _61040 h1)). Qed.
Lemma lem4914269 (_61039 : int) (_61040 : int) (h1 : term476 _61039 _61040) : False.
Proof. exact (EQ_MP (@lem4914268 _61039 _61040 h1) (@lem4914267 _61039 _61040 h1)). Qed.
Lemma lem4914270 (_61039 : int) (_61040 : int) (h1 : term198 _61039 _61040) : term198 _61039 _61040.
Proof. exact (h1). Qed.
Lemma lem4914271 (_61039 : int) (_61040 : int) (h1 : term198 _61039 _61040) : term476 _61039 _61040.
Proof. exact (EQ_MP (@lem4909085 _61039 _61040) (@lem4914270 _61039 _61040 h1)). Qed.
Lemma lem4914272 (_61039 : int) (_61040 : int) (h1 : term198 _61039 _61040) : (term476 _61039 _61040) = False.
Proof. exact (prop_ext (fun h2 : term476 _61039 _61040 => @lem4914269 _61039 _61040 h2) (fun h2 : False => @lem4914271 _61039 _61040 h1)). Qed.
Lemma lem4914273 (_61039 : int) (_61040 : int) (h1 : term198 _61039 _61040) : False.
Proof. exact (EQ_MP (@lem4914272 _61039 _61040 h1) (@lem4914271 _61039 _61040 h1)). Qed.
Lemma lem4914274 (_61039 : int) (_61040 : int) : term633 _61039 _61040.
Proof. exact (fun h0 : term198 _61039 _61040 => @lem4914273 _61039 _61040 h0). Qed.
Lemma lem4914275 (_61039 : int) (_61040 : int) : term634 _61039 _61040.
Proof. exact (@lem1386578 (term635 _61039 _61040)). Qed.
Lemma lem4914278 (_61039 : int) (_61040 : int) : term635 _61039 _61040.
Proof. exact (@lem4914275 _61039 _61040 (@lem4914274 _61039 _61040)). Qed.
Lemma lem4914279 (_61039 : int) (_61040 : int) : (term196 _61039 _61040) = (term134 _61039 _61040).
Proof. exact (SYM (@lem4908024 _61039 _61040)). Qed.
Lemma lem4914280 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem4914281 (_61039 : int) (_61040 : int) : (term635 _61039 _61040) = (term80 _61039 _61040).
Proof. exact (MK_COMB (@lem4914280) (@lem4914279 _61039 _61040)). Qed.
Lemma lem4914282 (_61039 : int) (_61040 : int) : term80 _61039 _61040.
Proof. exact (EQ_MP (@lem4914281 _61039 _61040) (@lem4914278 _61039 _61040)). Qed.
Lemma lem4914283 (_61039 : int) (_61040 : int) : term81 _61039 _61040.
Proof. exact (EQ_MP (@lem4907711 _61039 _61040) (@lem4914282 _61039 _61040)). Qed.
Lemma lem4914284 (d : nat) (x : nat) : term636 d x.
Proof. exact (@lem4914283 (int_of_num d) (int_of_num x)). Qed.
Lemma lem4914285 (d : nat) (x : nat) : term637 d x.
Proof. exact (@lem4914284 d x (@lem4907707 d)). Qed.
Lemma lem4914286 (d : nat) (x : nat) : term75 d x.
Proof. exact (@lem4914285 d x (@lem4907710 x)). Qed.
Lemma lem4914287 (x : nat) : term77 x.
Proof. exact (fun d : nat => @lem4914286 d x). Qed.
Lemma lem4914288 (x : nat) : (term77 x) = ((term14 x) = (term15 x)).
Proof. exact (SYM (@lem4907704 x)). Qed.
Lemma lem4914290 (h1 : term638) : term638.
Proof. exact (h1). Qed.
Lemma lem4914291 (m : nat) (h1 : term638) : term639 m.
Proof. exact (@lem4914290 h1 m). Qed.
Lemma lem4914292 (m : nat) : (term639 m) = (term640 m).
Proof. exact (eq_refl (term639 m)). Qed.
Lemma lem4914293 (m : nat) (h1 : term638) : term640 m.
Proof. exact (EQ_MP (@lem4914292 m) (@lem4914291 m h1)). Qed.
Lemma lem4914294 (m : nat) (n : nat) (h1 : term638) : term641 m n.
Proof. exact (@lem4914293 m h1 n). Qed.
Lemma lem4914295 (n : nat) (m : nat) : (term641 m n) = (term642 n m).
Proof. exact (eq_refl (term641 m n)). Qed.
Lemma lem4914296 (n : nat) (m : nat) (h1 : term638) : term642 n m.
Proof. exact (EQ_MP (@lem4914295 n m) (@lem4914294 m n h1)). Qed.
Lemma lem4914297 (n : nat) (m : nat) (p : nat) (h1 : term638) : term643 n m p.
Proof. exact (@lem4914296 n m h1 p). Qed.
Lemma lem4914298 (n : nat) (m : nat) (p : nat) : (term643 n m p) = (term644 n m p).
Proof. exact (eq_refl (term643 n m p)). Qed.
Lemma lem4914299 (n : nat) (m : nat) (p : nat) (h1 : term638) : term644 n m p.
Proof. exact (EQ_MP (@lem4914298 n m p) (@lem4914297 n m p h1)). Qed.
Lemma lem4914300 (m : nat) (n : nat) (p : nat) (h1 : term645 m n p) : term645 m n p.
Proof. exact (h1). Qed.
Lemma lem4914301 (m : nat) (n : nat) (p : nat) (h1 : term638) (h2 : term645 m n p) : Peano.lt m p.
Proof. exact (@lem4914299 n m p h1 (@lem4914300 m n p h2)). Qed.
Lemma lem4914302 (m : nat) (n : nat) (p : nat) (h1 : term645 m n p) : term646 m p.
Proof. exact (fun h0 : term638 => @lem4914301 m n p h0 h1). Qed.
Lemma lem4914303 (m : nat) (p : nat) (h1 : term647 m p) : term647 m p.
Proof. exact (h1). Qed.
Lemma lem4914304 (m : nat) (p : nat) (h1 : term647 m p) : term646 m p.
Proof. exact (ex_elim (@lem4914303 m p h1) (fun n : nat => fun h0 : term648 m p n => @lem4914302 m n p h0)). Qed.
Lemma lem4914305 (h1 : term638) : term638.
Proof. exact (h1). Qed.
Lemma lem4914306 (m : nat) (p : nat) (h1 : term638) (h2 : term647 m p) : Peano.lt m p.
Proof. exact (@lem4914304 m p h2 (@lem4914305 h1)). Qed.
Lemma lem4914307 (m : nat) (p : nat) (h1 : term638) : term649 m p.
Proof. exact (fun h0 : term647 m p => @lem4914306 m p h1 h0). Qed.
Lemma lem4914308 (m : nat) (h1 : term638) : term650 m.
Proof. exact (fun p : nat => @lem4914307 m p h1). Qed.
Lemma lem4914309 (h1 : term638) : term651.
Proof. exact (fun m : nat => @lem4914308 m h1). Qed.
Lemma lem4914310 : term652.
Proof. exact (fun h0 : term638 => @lem4914309 h0). Qed.
Lemma lem4914311 : term651.
Proof. exact (@lem4914310 (@lem95173)). Qed.
Lemma lem4914312 (m : nat) : term653 m.
Proof. exact (@lem4914311 m). Qed.
Lemma lem4914313 (m : nat) : (term653 m) = (term650 m).
Proof. exact (eq_refl (term653 m)). Qed.
Lemma lem4914314 (m : nat) : term650 m.
Proof. exact (EQ_MP (@lem4914313 m) (@lem4914312 m)). Qed.
Lemma lem4914315 (m : nat) (p : nat) : term654 m p.
Proof. exact (@lem4914314 m p). Qed.
Lemma lem4914316 (m : nat) (p : nat) : (term654 m p) = (term649 m p).
Proof. exact (eq_refl (term654 m p)). Qed.
Lemma lem4914318 (m : nat) : term655 m.
Proof. exact (@lem97961 m). Qed.
Lemma lem4914319 (m : nat) : (term655 m) = (term656 m).
Proof. exact (eq_refl (term655 m)). Qed.
Lemma lem4914320 (m : nat) : term656 m.
Proof. exact (EQ_MP (@lem4914319 m) (@lem4914318 m)). Qed.
Lemma lem4914321 (m : nat) (n : nat) : term657 m n.
Proof. exact (@lem4914320 m n). Qed.
Lemma lem4914322 (n : nat) (m : nat) : (term657 m n) = ((term658 m n) = (Peano.lt n m)).
Proof. exact (eq_refl (term657 m n)). Qed.
Lemma lem4914334 {A : Type'} (s : A -> Prop) : term659 A s.
Proof. exact (@lem3205803 A s). Qed.
Lemma lem4914335 {A : Type'} (s : A -> Prop) : (term659 A s) = (term660 A s).
Proof. exact (eq_refl (term659 A s)). Qed.
Lemma lem4914336 {A : Type'} (s : A -> Prop) : term660 A s.
Proof. exact (EQ_MP (@lem4914335 A s) (@lem4914334 A s)). Qed.
Lemma lem4914337 {A : Type'} (s : A -> Prop) (x : A) : term661 A s x.
Proof. exact (@lem4914336 A s x). Qed.
Lemma lem4914338 {A : Type'} (s : A -> Prop) (x : A) : (term661 A s x) = (term662 A s x).
Proof. exact (eq_refl (term661 A s x)). Qed.
Lemma lem4914339 {A : Type'} (s : A -> Prop) (x : A) : term662 A s x.
Proof. exact (EQ_MP (@lem4914338 A s x) (@lem4914337 A s x)). Qed.
Lemma lem4914340 {A : Type'} (s : A -> Prop) (x : A) (y : A) : term663 A s x y.
Proof. exact (@lem4914339 A s x y). Qed.
Lemma lem4914341 {A : Type'} (s : A -> Prop) (x : A) (y : A) : (term663 A s x y) = ((term664 A x s y) = (term665 A s x y)).
Proof. exact (eq_refl (term663 A s x y)). Qed.
Lemma lem4914343 {A B : Type'} (y : B) : term666 A B y.
Proof. exact (@lem3206070 A B y). Qed.
Lemma lem4914344 {A B : Type'} (y : B) : (term666 A B y) = (term667 A B y).
Proof. exact (eq_refl (term666 A B y)). Qed.
Lemma lem4914345 {A B : Type'} (y : B) : term667 A B y.
Proof. exact (EQ_MP (@lem4914344 A B y) (@lem4914343 A B y)). Qed.
Lemma lem4914346 {A B : Type'} (y : B) (s : A -> Prop) : term668 A B y s.
Proof. exact (@lem4914345 A B y s). Qed.
Lemma lem4914347 {A B : Type'} (y : B) (s : A -> Prop) : (term668 A B y s) = (term669 A B y s).
Proof. exact (eq_refl (term668 A B y s)). Qed.
Lemma lem4914348 {A B : Type'} (y : B) (s : A -> Prop) : term669 A B y s.
Proof. exact (EQ_MP (@lem4914347 A B y s) (@lem4914346 A B y s)). Qed.
Lemma lem4914349 {A B : Type'} (y : B) (s : A -> Prop) (f : A -> B) : term670 A B y s f.
Proof. exact (@lem4914348 A B y s f). Qed.
Lemma lem4914350 {A B : Type'} (y : B) (f : A -> B) (s : A -> Prop) : (term670 A B y s f) = ((term671 A B y f s) = (term672 A B y f s)).
Proof. exact (eq_refl (term670 A B y s f)). Qed.
Lemma lem4914352 {A : Type'} (s : A -> Prop) : term673 A s.
Proof. exact (@lem3194148 A s). Qed.
Lemma lem4914353 {A : Type'} (s : A -> Prop) : (term673 A s) = (term674 A s).
Proof. exact (eq_refl (term673 A s)). Qed.
Lemma lem4914354 {A : Type'} (s : A -> Prop) : term674 A s.
Proof. exact (EQ_MP (@lem4914353 A s) (@lem4914352 A s)). Qed.
Lemma lem4914355 {A : Type'} (s : A -> Prop) (t : A -> Prop) : term675 A s t.
Proof. exact (@lem4914354 A s t). Qed.
Lemma lem4914356 {A : Type'} (s : A -> Prop) (t : A -> Prop) : (term675 A s t) = ((@SUBSET A s t) = (term676 A s t)).
Proof. exact (eq_refl (term675 A s t)). Qed.
Lemma lem4914358 {A : Type'} (h1 : term677 A) : term677 A.
Proof. exact (h1). Qed.
Lemma lem4914359 {A : Type'} (a : A -> Prop) (h1 : term677 A) : term678 A a.
Proof. exact (@lem4914358 A h1 a). Qed.
Lemma lem4914360 {A : Type'} (a : A -> Prop) : (term678 A a) = (term679 A a).
Proof. exact (eq_refl (term678 A a)). Qed.
Lemma lem4914361 {A : Type'} (a : A -> Prop) (h1 : term677 A) : term679 A a.
Proof. exact (EQ_MP (@lem4914360 A a) (@lem4914359 A a h1)). Qed.
Lemma lem4914362 {A : Type'} (a : A -> Prop) (b : A -> Prop) (h1 : term677 A) : term680 A a b.
Proof. exact (@lem4914361 A a h1 b). Qed.
Lemma lem4914363 {A : Type'} (a : A -> Prop) (b : A -> Prop) : (term680 A a b) = (term681 A a b).
Proof. exact (eq_refl (term680 A a b)). Qed.
Lemma lem4914364 {A : Type'} (a : A -> Prop) (b : A -> Prop) (h1 : term677 A) : term681 A a b.
Proof. exact (EQ_MP (@lem4914363 A a b) (@lem4914362 A a b h1)). Qed.
Lemma lem4914365 {A : Type'} (a : A -> Prop) (b : A -> Prop) (h1 : term682 A a b) : term682 A a b.
Proof. exact (h1). Qed.
Lemma lem4914366 {A : Type'} (a : A -> Prop) (b : A -> Prop) (h1 : term677 A) (h2 : term682 A a b) : term683 A a b.
Proof. exact (@lem4914364 A a b h1 (@lem4914365 A a b h2)). Qed.
Lemma lem4914367 {A : Type'} (a : A -> Prop) (b : A -> Prop) (h1 : term682 A a b) : term684 A a b.
Proof. exact (fun h0 : term677 A => @lem4914366 A a b h0 h1). Qed.
Lemma lem4914368 {A : Type'} (h1 : term677 A) : term677 A.
Proof. exact (h1). Qed.
Lemma lem4914369 {A : Type'} (a : A -> Prop) (b : A -> Prop) (h1 : term677 A) (h2 : term682 A a b) : term683 A a b.
Proof. exact (@lem4914367 A a b h2 (@lem4914368 A h1)). Qed.
Lemma lem4914370 {A : Type'} (a : A -> Prop) (b : A -> Prop) (h1 : term677 A) : term681 A a b.
Proof. exact (fun h0 : term682 A a b => @lem4914369 A a b h1 h0). Qed.
Lemma lem4914371 {A : Type'} (a : A -> Prop) (h1 : term677 A) : term679 A a.
Proof. exact (fun b : A -> Prop => @lem4914370 A a b h1). Qed.
Lemma lem4914372 {A : Type'} (h1 : term677 A) : term677 A.
Proof. exact (fun a : A -> Prop => @lem4914371 A a h1). Qed.
Lemma lem4914373 {A : Type'} : term685 A.
Proof. exact (fun h0 : term677 A => @lem4914372 A h0). Qed.
Lemma lem4914374 {A : Type'} : term677 A.
Proof. exact (@lem4914373 A (@lem3902682 A)). Qed.
Lemma lem4914375 {A : Type'} (a : A -> Prop) : term678 A a.
Proof. exact (@lem4914374 A a). Qed.
Lemma lem4914376 {A : Type'} (a : A -> Prop) : (term678 A a) = (term679 A a).
Proof. exact (eq_refl (term678 A a)). Qed.
Lemma lem4914377 {A : Type'} (a : A -> Prop) : term679 A a.
Proof. exact (EQ_MP (@lem4914376 A a) (@lem4914375 A a)). Qed.
Lemma lem4914378 {A : Type'} (a : A -> Prop) (b : A -> Prop) : term680 A a b.
Proof. exact (@lem4914377 A a b). Qed.
Lemma lem4914379 {A : Type'} (a : A -> Prop) (b : A -> Prop) : (term680 A a b) = (term681 A a b).
Proof. exact (eq_refl (term680 A a b)). Qed.
Lemma lem4914381 {A : Type'} (x : A) (y : A) : term686 A x y.
Proof. exact (@lem9784 (x = y)). Qed.
Lemma lem4914382 {A : Type'} (x : A) (y : A) : (term686 A x y) = (term687 A x y).
Proof. exact (eq_refl (term686 A x y)). Qed.
Lemma lem4914383 {A : Type'} (x : A) (y : A) : term687 A x y.
Proof. exact (EQ_MP (@lem4914382 A x y) (@lem4914381 A x y)). Qed.
Lemma lem4914385 {A : Type'} (x : A) (y : A) (h1 : term688 A x y) : term688 A x y.
Proof. exact (h1). Qed.
Lemma lem4914386 {A B : Type'} (f : A -> B) (s : A -> Prop) (t : B -> Prop) (h1 : term689 A B f s t) : term689 A B f s t.
Proof. exact (h1). Qed.
Lemma lem4914387 {A B : Type'} (f : A -> B) (s : A -> Prop) (t : B -> Prop) (h1 : term690 A B f s t) : term690 A B f s t.
Proof. exact (h1). Qed.
Lemma lem4914388 {A : Type'} (s : A -> Prop) (h1 : @FINITE A s) : @FINITE A s.
Proof. exact (h1). Qed.
Lemma lem4914389 {A B : Type'} (f : A -> B) (s : A -> Prop) (t : B -> Prop) (h1 : term691 A B f s t) : term691 A B f s t.
Proof. exact (h1). Qed.
Lemma lem4914390 {B : Type'} (t : B -> Prop) (h1 : @FINITE B t) : @FINITE B t.
Proof. exact (h1). Qed.
Lemma lem4914391 {A B : Type'} (f : A -> B) (s : A -> Prop) (t : B -> Prop) (h1 : term692 A B f s t) : term692 A B f s t.
Proof. exact (h1). Qed.
Lemma lem4914392 {A B : Type'} (s : A -> Prop) (t : B -> Prop) (h1 : (@CARD A s) = (@CARD B t)) : (@CARD A s) = (@CARD B t).
Proof. exact (h1). Qed.
Lemma lem4914393 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (f : A -> B) (h1 : term693 A B t s f) : term693 A B t s f.
Proof. exact (h1). Qed.
Lemma lem4914394 {A B : Type'} (s : A -> Prop) (x : A) (f : A -> B) (y : A) (h1 : term694 A B s x f y) : term694 A B s x f y.
Proof. exact (h1). Qed.
Lemma lem4914395 {A B : Type'} (s : A -> Prop) (x : A) (f : A -> B) (y : A) (h1 : term695 A B s x f y) : term695 A B s x f y.
Proof. exact (h1). Qed.
Lemma lem4914396 {A : Type'} (x : A) (s : A -> Prop) (h1 : @IN A x s) : @IN A x s.
Proof. exact (h1). Qed.
Lemma lem4914397 {A B : Type'} (x : A) (f : A -> B) (y : A) (h1 : (f x) = (f y)) : (f x) = (f y).
Proof. exact (h1). Qed.
Lemma lem4914398 {A : Type'} (y : A) (s : A -> Prop) (h1 : @IN A y s) : @IN A y s.
Proof. exact (h1). Qed.
Lemma lem4914399 {A B : Type'} (s : A -> Prop) (f : A -> B) (h1 : term696 A B s f) : term696 A B s f.
Proof. exact (h1). Qed.
Lemma lem4914400 {B : Type'} (y : B) (t : B -> Prop) (h1 : @IN B y t) : @IN B y t.
Proof. exact (h1). Qed.
Lemma lem4914419 {A : Type'} (x : A) (y : A) (h1 : x = y) : x = y.
Proof. exact (h1). Qed.
Lemma lem4914420 {A : Type'} : (@eq A) = (@eq A).
Proof. exact (eq_refl (@eq A)). Qed.
Lemma lem4914421 {A : Type'} (x : A) (y : A) (h1 : x = y) : (@eq A x) = (@eq A y).
Proof. exact (MK_COMB (@lem4914420 A) (@lem4914419 A x y h1)). Qed.
Lemma lem4914422 {A : Type'} (y : A) : y = y.
Proof. exact (eq_refl y). Qed.
Lemma lem4914423 {A : Type'} (x : A) (y : A) (h1 : x = y) : (x = y) = (y = y).
Proof. exact (MK_COMB (@lem4914421 A x y h1) (@lem4914422 A y)). Qed.
Lemma lem4914425 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem1863 A x) (@lem1862 A x)). Qed.
Lemma lem4914426 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (@lem4914425 A x). Qed.
Lemma lem4914427 {A : Type'} (y : A) : (y = y) = True.
Proof. exact (@lem4914426 A y). Qed.
Lemma lem4914428 {A : Type'} (x : A) (y : A) (h1 : x = y) : (x = y) = True.
Proof. exact (TRANS (@lem4914423 A x y h1) (@lem4914427 A y)). Qed.
Lemma lem4914429 {A : Type'} (x : A) (y : A) (h1 : x = y) : True = (x = y).
Proof. exact (SYM (@lem4914428 A x y h1)). Qed.
Lemma lem4914430 {A : Type'} (x : A) (y : A) (h1 : x = y) : x = y.
Proof. exact (EQ_MP (@lem4914429 A x y h1) (@lem0)). Qed.
Lemma lem4914446 {A : Type'} (x : A) (y : A) : term697 A x y.
Proof. exact (@lem82 (x = y)). Qed.
Lemma lem4914460 {A : Type'} (x : A) (y : A) (h1 : term688 A x y) : (x = y) = False.
Proof. exact (@lem4914446 A x y (@lem4914385 A x y h1)). Qed.
Lemma lem4914461 {A : Type'} (x : A) (y : A) (h1 : term688 A x y) : False = (x = y).
Proof. exact (SYM (@lem4914460 A x y h1)). Qed.
Lemma lem4914462 {A B : Type'} (f : A -> B) (s : A -> Prop) (y : A) (h1 : term698 A B f s y) : term698 A B f s y.
Proof. exact (h1). Qed.
Lemma lem4914492 {A B : Type'} (s : A -> Prop) (t : B -> Prop) (h1 : (@CARD A s) = (@CARD B t)) : (@CARD A s) = (@CARD B t).
Proof. exact (h1). Qed.
Lemma lem4914493 : Peano.le = Peano.le.
Proof. exact (eq_refl Peano.le). Qed.
Lemma lem4914494 {A B : Type'} (s : A -> Prop) (t : B -> Prop) (h1 : (@CARD A s) = (@CARD B t)) : (term699 A s) = (term699 B t).
Proof. exact (MK_COMB (@lem4914493) (@lem4914492 A B s t h1)). Qed.
Lemma lem4914495 {A B : Type'} (f : A -> B) (s : A -> Prop) (y : A) : (term700 A B f s y) = (term700 A B f s y).
Proof. exact (eq_refl (term700 A B f s y)). Qed.
Lemma lem4914496 {A B : Type'} (f : A -> B) (y : A) (s : A -> Prop) (t : B -> Prop) (h1 : (@CARD A s) = (@CARD B t)) : (term698 A B f s y) = (term701 A B t f s y).
Proof. exact (MK_COMB (@lem4914494 A B s t h1) (@lem4914495 A B f s y)). Qed.
Lemma lem4914497 {A B : Type'} (f : A -> B) (y : A) (s : A -> Prop) (t : B -> Prop) (h1 : (@CARD A s) = (@CARD B t)) : (term701 A B t f s y) = (term698 A B f s y).
Proof. exact (SYM (@lem4914496 A B f y s t h1)). Qed.
Lemma lem4914499 {A : Type'} (a : A -> Prop) (b : A -> Prop) : term681 A a b.
Proof. exact (EQ_MP (@lem4914379 A a b) (@lem4914378 A a b)). Qed.
Lemma lem4914500 {B : Type'} (a : B -> Prop) (b : B -> Prop) : term681 B a b.
Proof. exact (@lem4914499 B a b). Qed.
Lemma lem4914501 {A B : Type'} (t : B -> Prop) (f : A -> B) (s : A -> Prop) (y : A) : term702 A B t f s y.
Proof. exact (@lem4914500 B t (term703 A B f s y)). Qed.
Lemma lem4914502 {A : Type'} (s : A -> Prop) : term704 A s.
Proof. exact (@lem3610594 A s). Qed.
Lemma lem4914503 {A : Type'} (s : A -> Prop) : (term704 A s) = (term705 A s).
Proof. exact (eq_refl (term704 A s)). Qed.
Lemma lem4914504 {A : Type'} (s : A -> Prop) : term705 A s.
Proof. exact (EQ_MP (@lem4914503 A s) (@lem4914502 A s)). Qed.
Lemma lem4914505 {A : Type'} (s : A -> Prop) (x : A) : term706 A s x.
Proof. exact (@lem4914504 A s x). Qed.
Lemma lem4914506 {A : Type'} (x : A) (s : A -> Prop) : (term706 A s x) = ((term707 A s x) = (@FINITE A s)).
Proof. exact (eq_refl (term706 A s x)). Qed.
Lemma lem4914508 {A B : Type'} (f : A -> B) : term708 A B f.
Proof. exact (@lem3615104 A B f). Qed.
Lemma lem4914509 {A B : Type'} (f : A -> B) : (term708 A B f) = (term709 A B f).
Proof. exact (eq_refl (term708 A B f)). Qed.
Lemma lem4914510 {A B : Type'} (f : A -> B) : term709 A B f.
Proof. exact (EQ_MP (@lem4914509 A B f) (@lem4914508 A B f)). Qed.
Lemma lem4914511 {A B : Type'} (f : A -> B) (s : A -> Prop) : term710 A B f s.
Proof. exact (@lem4914510 A B f s). Qed.
Lemma lem4914512 {A B : Type'} (f : A -> B) (s : A -> Prop) : (term710 A B f s) = (term711 A B f s).
Proof. exact (eq_refl (term710 A B f s)). Qed.
Lemma lem4914513 {A B : Type'} (f : A -> B) (s : A -> Prop) : term711 A B f s.
Proof. exact (EQ_MP (@lem4914512 A B f s) (@lem4914511 A B f s)). Qed.
Lemma lem4914514 {A : Type'} (s : A -> Prop) (h1 : @FINITE A s) : @FINITE A s.
Proof. exact (h1). Qed.
Lemma lem4914515 {A B : Type'} (f : A -> B) (s : A -> Prop) (h1 : @FINITE A s) : term712 A B f s.
Proof. exact (@lem4914513 A B f s (@lem4914514 A s h1)). Qed.
Lemma lem4914516 {A B : Type'} (f : A -> B) (s : A -> Prop) : (term712 A B f s) = ((term712 A B f s) = True).
Proof. exact (@lem7 (term712 A B f s)). Qed.
Lemma lem4914517 {A B : Type'} (f : A -> B) (s : A -> Prop) (h1 : @FINITE A s) : (term712 A B f s) = True.
Proof. exact (EQ_MP (@lem4914516 A B f s) (@lem4914515 A B f s h1)). Qed.
Lemma lem4914523 {A : Type'} (s : A -> Prop) : (@FINITE A s) = ((@FINITE A s) = True).
Proof. exact (@lem7 (@FINITE A s)). Qed.
Lemma lem4914561 {A B : Type'} (f : A -> B) (s : A -> Prop) : term713 A B f s.
Proof. exact (fun h0 : @FINITE A s => @lem4914517 A B f s h0). Qed.
Lemma lem4914562 {A B : Type'} (f : A -> B) (s : A -> Prop) : term713 A B f s.
Proof. exact (@lem4914561 A B f s). Qed.
Lemma lem4914563 {A B : Type'} (f : A -> B) (s : A -> Prop) (y : A) : term714 A B f s y.
Proof. exact (@lem4914562 A B f (@DELETE A s y)). Qed.
Lemma lem4914565 {A : Type'} (x : A) (s : A -> Prop) : (term707 A s x) = (@FINITE A s).
Proof. exact (EQ_MP (@lem4914506 A x s) (@lem4914505 A s x)). Qed.
Lemma lem4914566 {A : Type'} (x : A) (s : A -> Prop) : (term707 A s x) = (@FINITE A s).
Proof. exact (@lem4914565 A x s). Qed.
Lemma lem4914567 {A : Type'} (y : A) (s : A -> Prop) : (term707 A s y) = (@FINITE A s).
Proof. exact (@lem4914566 A y s). Qed.
Lemma lem4914569 {A : Type'} (s : A -> Prop) (h1 : @FINITE A s) : (@FINITE A s) = True.
Proof. exact (EQ_MP (@lem4914523 A s) (@lem4914388 A s h1)). Qed.
Lemma lem4914570 {A : Type'} (y : A) (s : A -> Prop) (h1 : @FINITE A s) : (term707 A s y) = True.
Proof. exact (TRANS (@lem4914567 A y s) (@lem4914569 A s h1)). Qed.
Lemma lem4914571 {A : Type'} (y : A) (s : A -> Prop) (h1 : @FINITE A s) : True = (term707 A s y).
Proof. exact (SYM (@lem4914570 A y s h1)). Qed.
Lemma lem4914572 {A : Type'} (y : A) (s : A -> Prop) (h1 : @FINITE A s) : term707 A s y.
Proof. exact (EQ_MP (@lem4914571 A y s h1) (@lem0)). Qed.
Lemma lem4914573 {A B : Type'} (f : A -> B) (y : A) (s : A -> Prop) (h1 : @FINITE A s) : (term715 A B f s y) = True.
Proof. exact (@lem4914563 A B f s y (@lem4914572 A y s h1)). Qed.
Lemma lem4914574 {A B : Type'} (t : B -> Prop) (f : A -> B) (s : A -> Prop) (y : A) : (term716 A B t f s y) = (term716 A B t f s y).
Proof. exact (eq_refl (term716 A B t f s y)). Qed.
Lemma lem4914575 {A B : Type'} (t : B -> Prop) (f : A -> B) (y : A) (s : A -> Prop) (h1 : @FINITE A s) : (term717 A B t f s y) = (term718 A B t f s y).
Proof. exact (MK_COMB (@lem4914574 A B t f s y) (@lem4914573 A B f y s h1)). Qed.
Lemma lem4914577 (t : Prop) : (t /\ True) = t.
Proof. exact (proj1 (@lem1843 t)). Qed.
Lemma lem4914578 {A B : Type'} (t : B -> Prop) (f : A -> B) (s : A -> Prop) (y : A) : (term718 A B t f s y) = (term719 A B t f s y).
Proof. exact (@lem4914577 (term719 A B t f s y)). Qed.
Lemma lem4914579 {A B : Type'} (t : B -> Prop) (f : A -> B) (y : A) (s : A -> Prop) (h1 : @FINITE A s) : (term717 A B t f s y) = (term719 A B t f s y).
Proof. exact (TRANS (@lem4914575 A B t f y s h1) (@lem4914578 A B t f s y)). Qed.
Lemma lem4914580 {A B : Type'} (t : B -> Prop) (f : A -> B) (y : A) (s : A -> Prop) (h1 : @FINITE A s) : (term719 A B t f s y) = (term717 A B t f s y).
Proof. exact (SYM (@lem4914579 A B t f y s h1)). Qed.
Lemma lem4914582 {A : Type'} (s : A -> Prop) (t : A -> Prop) : (@SUBSET A s t) = (term676 A s t).
Proof. exact (EQ_MP (@lem4914356 A s t) (@lem4914355 A s t)). Qed.
Lemma lem4914583 {B : Type'} (s : B -> Prop) (t : B -> Prop) : (@SUBSET B s t) = (term676 B s t).
Proof. exact (@lem4914582 B s t). Qed.
Lemma lem4914584 {A B : Type'} (t : B -> Prop) (f : A -> B) (s : A -> Prop) (y : A) : (term719 A B t f s y) = (term720 A B t f s y).
Proof. exact (@lem4914583 B t (term703 A B f s y)). Qed.
Lemma lem4914592 {A B : Type'} (y : B) (f : A -> B) (s : A -> Prop) : (term671 A B y f s) = (term672 A B y f s).
Proof. exact (EQ_MP (@lem4914350 A B y f s) (@lem4914349 A B y s f)). Qed.
Lemma lem4914593 {A B : Type'} (y : B) (f : A -> B) (s : A -> Prop) : (term671 A B y f s) = (term672 A B y f s).
Proof. exact (@lem4914592 A B y f s). Qed.
Lemma lem4914594 {A B : Type'} (x : B) (f : A -> B) (s : A -> Prop) (y : A) : (term721 A B x f s y) = (term722 A B x f s y).
Proof. exact (@lem4914593 A B x f (@DELETE A s y)). Qed.
Lemma lem4914604 {A : Type'} (s : A -> Prop) (x : A) (y : A) : (term664 A x s y) = (term665 A s x y).
Proof. exact (EQ_MP (@lem4914341 A s x y) (@lem4914340 A s x y)). Qed.
Lemma lem4914605 {A : Type'} (s : A -> Prop) (x : A) (y : A) : (term664 A x s y) = (term665 A s x y).
Proof. exact (@lem4914604 A s x y). Qed.
Lemma lem4914610 {A B : Type'} (x : B) (f : A -> B) (x' : A) : (term723 A B x f x') = (term723 A B x f x').
Proof. exact (eq_refl (term723 A B x f x')). Qed.
Lemma lem4914611 {A B : Type'} (x : B) (f : A -> B) (s : A -> Prop) (x' : A) (y : A) : (term724 A B x f x' s y) = (term725 A B x f s x' y).
Proof. exact (MK_COMB (@lem4914610 A B x f x') (@lem4914605 A s x' y)). Qed.
Lemma lem4914614 {A B : Type'} (x : B) (f : A -> B) (s : A -> Prop) (y : A) : (term726 A B x f s y) = (term727 A B x f s y).
Proof. exact (fun_ext (fun x' : A => @lem4914611 A B x f s x' y)). Qed.
Lemma lem4914615 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem4914616 {A B : Type'} (x : B) (f : A -> B) (s : A -> Prop) (y : A) : (term722 A B x f s y) = (term728 A B x f s y).
Proof. exact (MK_COMB (@lem4914615 A) (@lem4914614 A B x f s y)). Qed.
Lemma lem4914621 {A B : Type'} (x : B) (f : A -> B) (s : A -> Prop) (y : A) : (term721 A B x f s y) = (term728 A B x f s y).
Proof. exact (TRANS (@lem4914594 A B x f s y) (@lem4914616 A B x f s y)). Qed.
Lemma lem4914622 {B : Type'} (x : B) (t : B -> Prop) : (term729 B x t) = (term729 B x t).
Proof. exact (eq_refl (term729 B x t)). Qed.
Lemma lem4914623 {A B : Type'} (t : B -> Prop) (x : B) (f : A -> B) (s : A -> Prop) (y : A) : (term730 A B t x f s y) = (term731 A B t x f s y).
Proof. exact (MK_COMB (@lem4914622 B x t) (@lem4914621 A B x f s y)). Qed.
Lemma lem4914626 {A B : Type'} (t : B -> Prop) (f : A -> B) (s : A -> Prop) (y : A) : (term732 A B t f s y) = (term733 A B t f s y).
Proof. exact (fun_ext (fun x : B => @lem4914623 A B t x f s y)). Qed.
Lemma lem4914627 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4914628 {A B : Type'} (t : B -> Prop) (f : A -> B) (s : A -> Prop) (y : A) : (term720 A B t f s y) = (term734 A B t f s y).
Proof. exact (MK_COMB (@lem4914627 B) (@lem4914626 A B t f s y)). Qed.
Lemma lem4914633 {A B : Type'} (t : B -> Prop) (f : A -> B) (s : A -> Prop) (y : A) : (term719 A B t f s y) = (term734 A B t f s y).
Proof. exact (TRANS (@lem4914584 A B t f s y) (@lem4914628 A B t f s y)). Qed.
Lemma lem4914634 {A B : Type'} (t : B -> Prop) (f : A -> B) (s : A -> Prop) (y : A) : (term734 A B t f s y) = (term719 A B t f s y).
Proof. exact (SYM (@lem4914633 A B t f s y)). Qed.
Lemma lem4914636 (p : Prop) : p = (term735 p).
Proof. exact (EQ_MP (@lem10578 p) (@lem10597 p)). Qed.
Lemma lem4914637 {A B : Type'} (t : B -> Prop) (f : A -> B) (s : A -> Prop) (y : A) : (term734 A B t f s y) = (term736 A B t f s y).
Proof. exact (@lem4914636 (term734 A B t f s y)). Qed.
Lemma lem4914638 {A B : Type'} (t : B -> Prop) (f : A -> B) (s : A -> Prop) (y : A) : (term736 A B t f s y) = (term734 A B t f s y).
Proof. exact (SYM (@lem4914637 A B t f s y)). Qed.
Lemma lem4914639 {A B : Type'} (t : B -> Prop) (f : A -> B) (s : A -> Prop) (y : A) (h1 : term737 A B t f s y) : term737 A B t f s y.
Proof. exact (h1). Qed.
Lemma lem4914642 {A B : Type'} (x : A) (t : B -> Prop) (f : A -> B) (s : A -> Prop) (y : A) (h1 : term738 A B x t f s y) : term738 A B x t f s y.
Proof. exact (h1). Qed.
Lemma lem4914643 {A B : Type'} (x : A) (t : B -> Prop) (f : A -> B) (s : A -> Prop) (y : A) : term739 A B x t f s y.
Proof. exact (fun h0 : term738 A B x t f s y => @lem4914642 A B x t f s y h0). Qed.
Lemma lem4914644 {A B : Type'} (x : A) (t : B -> Prop) (f : A -> B) (s : A -> Prop) (y : A) (h1 : term739 A B x t f s y) : term739 A B x t f s y.
Proof. exact (h1). Qed.
Lemma lem4914645 {A B : Type'} (x : A) (t : B -> Prop) (f : A -> B) (s : A -> Prop) (y : A) (h1 : term738 A B x t f s y) : term738 A B x t f s y.
Proof. exact (h1). Qed.
Lemma lem4914646 {A B : Type'} (x : A) (t : B -> Prop) (f : A -> B) (s : A -> Prop) (y : A) (h1 : term738 A B x t f s y) (h2 : term739 A B x t f s y) : term738 A B x t f s y.
Proof. exact (@lem4914644 A B x t f s y h2 (@lem4914645 A B x t f s y h1)). Qed.
Lemma lem4914647 {A B : Type'} (x : A) (t : B -> Prop) (f : A -> B) (s : A -> Prop) (y : A) (h1 : term738 A B x t f s y) : term740 A B x t f s y.
Proof. exact (fun h0 : term739 A B x t f s y => @lem4914646 A B x t f s y h1 h0). Qed.
Lemma lem4914648 {A B : Type'} (x : A) (t : B -> Prop) (f : A -> B) (s : A -> Prop) (y : A) (h1 : term739 A B x t f s y) : term739 A B x t f s y.
Proof. exact (h1). Qed.
Lemma lem4914649 {A B : Type'} (x : A) (t : B -> Prop) (f : A -> B) (s : A -> Prop) (y : A) (h1 : term738 A B x t f s y) (h2 : term739 A B x t f s y) : term738 A B x t f s y.
Proof. exact (@lem4914647 A B x t f s y h1 (@lem4914648 A B x t f s y h2)). Qed.
Lemma lem4914650 {A B : Type'} (x : A) (t : B -> Prop) (f : A -> B) (s : A -> Prop) (y : A) (h1 : term739 A B x t f s y) : term739 A B x t f s y.
Proof. exact (fun h0 : term738 A B x t f s y => @lem4914649 A B x t f s y h0 h1). Qed.
Lemma lem4914651 {A B : Type'} (x : A) (t : B -> Prop) (f : A -> B) (s : A -> Prop) (y : A) : term741 A B x t f s y.
Proof. exact (fun h0 : term739 A B x t f s y => @lem4914650 A B x t f s y h0). Qed.
Lemma lem4914654 {A B : Type'} (x : A) (t : B -> Prop) (f : A -> B) (s : A -> Prop) (y : A) : term739 A B x t f s y.
Proof. exact (@lem4914651 A B x t f s y (@lem4914643 A B x t f s y)). Qed.
Lemma lem4914655 {A B : Type'} (x : A) (t : B -> Prop) (f : A -> B) (s : A -> Prop) (y : A) : term739 A B x t f s y.
Proof. exact (@lem4914654 A B x t f s y). Qed.
Lemma lem4914751 (t : Prop) : (t -> False) = (~ t).
Proof. exact (proj2 (@lem16474 t)). Qed.
Lemma lem4914752 {A B : Type'} (t : B -> Prop) (f : A -> B) (s : A -> Prop) (y : A) : (term736 A B t f s y) = (term742 A B t f s y).
Proof. exact (@lem4914751 (term737 A B t f s y)). Qed.
Lemma lem4914754 (t : Prop) : (term197 t) = t.
Proof. exact (EQ_MP (@lem16507 t) (@lem16506 t)). Qed.
Lemma lem4914755 {A B : Type'} (t : B -> Prop) (f : A -> B) (s : A -> Prop) (y : A) : (term742 A B t f s y) = (term734 A B t f s y).
Proof. exact (@lem4914754 (term734 A B t f s y)). Qed.
Lemma lem4914760 {A B : Type'} (t : B -> Prop) (f : A -> B) (s : A -> Prop) (y : A) : (term736 A B t f s y) = (term734 A B t f s y).
Proof. exact (TRANS (@lem4914752 A B t f s y) (@lem4914755 A B t f s y)). Qed.
Lemma lem4914815 {A : Type'} (x : A) (y : A) : (term743 A x y) = (term743 A x y).
Proof. exact (eq_refl (term743 A x y)). Qed.
Lemma lem4914816 {A B : Type'} (x : A) (t : B -> Prop) (f : A -> B) (s : A -> Prop) (y : A) : (term744 A B x t f s y) = (term745 A B x t f s y).
Proof. exact (MK_COMB (@lem4914815 A x y) (@lem4914760 A B t f s y)). Qed.
Lemma lem4914819 {A B : Type'} (x : A) (f : A -> B) (y : A) : (term746 A B x f y) = (term746 A B x f y).
Proof. exact (eq_refl (term746 A B x f y)). Qed.
Lemma lem4914820 {A B : Type'} (x : A) (t : B -> Prop) (f : A -> B) (s : A -> Prop) (y : A) : (term747 A B x t f s y) = (term748 A B x t f s y).
Proof. exact (MK_COMB (@lem4914819 A B x f y) (@lem4914816 A B x t f s y)). Qed.
Lemma lem4914823 {A : Type'} (y : A) (s : A -> Prop) : (term729 A y s) = (term729 A y s).
Proof. exact (eq_refl (term729 A y s)). Qed.
Lemma lem4914824 {A B : Type'} (x : A) (t : B -> Prop) (f : A -> B) (s : A -> Prop) (y : A) : (term749 A B x t f s y) = (term750 A B x t f s y).
Proof. exact (MK_COMB (@lem4914823 A y s) (@lem4914820 A B x t f s y)). Qed.
Lemma lem4914827 {A : Type'} (x : A) (s : A -> Prop) : (term729 A x s) = (term729 A x s).
Proof. exact (eq_refl (term729 A x s)). Qed.
Lemma lem4914828 {A B : Type'} (x : A) (t : B -> Prop) (f : A -> B) (s : A -> Prop) (y : A) : (term751 A B x t f s y) = (term752 A B x t f s y).
Proof. exact (MK_COMB (@lem4914827 A x s) (@lem4914824 A B x t f s y)). Qed.
Lemma lem4914831 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (f : A -> B) : (term753 A B t s f) = (term753 A B t s f).
Proof. exact (eq_refl (term753 A B t s f)). Qed.
Lemma lem4914832 {A B : Type'} (x : A) (t : B -> Prop) (f : A -> B) (s : A -> Prop) (y : A) : (term754 A B x t f s y) = (term755 A B x t f s y).
Proof. exact (MK_COMB (@lem4914831 A B t s f) (@lem4914828 A B x t f s y)). Qed.
Lemma lem4914835 {A B : Type'} (f : A -> B) (s : A -> Prop) (t : B -> Prop) : (term756 A B f s t) = (term756 A B f s t).
Proof. exact (eq_refl (term756 A B f s t)). Qed.
Lemma lem4914836 {A B : Type'} (x : A) (t : B -> Prop) (f : A -> B) (s : A -> Prop) (y : A) : (term757 A B x t f s y) = (term758 A B x t f s y).
Proof. exact (MK_COMB (@lem4914835 A B f s t) (@lem4914832 A B x t f s y)). Qed.
Lemma lem4914839 {A B : Type'} (s : A -> Prop) (t : B -> Prop) : (term759 A B s t) = (term759 A B s t).
Proof. exact (eq_refl (term759 A B s t)). Qed.
Lemma lem4914840 {A B : Type'} (x : A) (t : B -> Prop) (f : A -> B) (s : A -> Prop) (y : A) : (term760 A B x t f s y) = (term761 A B x t f s y).
Proof. exact (MK_COMB (@lem4914839 A B s t) (@lem4914836 A B x t f s y)). Qed.
Lemma lem4914843 {B : Type'} (t : B -> Prop) : (term762 B t) = (term762 B t).
Proof. exact (eq_refl (term762 B t)). Qed.
Lemma lem4914844 {A B : Type'} (x : A) (t : B -> Prop) (f : A -> B) (s : A -> Prop) (y : A) : (term763 A B x t f s y) = (term764 A B x t f s y).
Proof. exact (MK_COMB (@lem4914843 B t) (@lem4914840 A B x t f s y)). Qed.
Lemma lem4914847 {A : Type'} (s : A -> Prop) : (term762 A s) = (term762 A s).
Proof. exact (eq_refl (term762 A s)). Qed.
Lemma lem4914848 {A B : Type'} (x : A) (t : B -> Prop) (f : A -> B) (s : A -> Prop) (y : A) : (term738 A B x t f s y) = (term765 A B x t f s y).
Proof. exact (MK_COMB (@lem4914847 A s) (@lem4914844 A B x t f s y)). Qed.
Lemma lem4914851 {A B : Type'} (t : B -> Prop) (f : A -> B) (s : A -> Prop) (y : A) : (term766 A B t f s y) = (term767 A B t f s y).
Proof. exact (fun_ext (fun x : A => @lem4914848 A B x t f s y)). Qed.
Lemma lem4914852 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4914853 {A B : Type'} (t : B -> Prop) (f : A -> B) (s : A -> Prop) (y : A) : (term768 A B t f s y) = (term769 A B t f s y).
Proof. exact (MK_COMB (@lem4914852 A) (@lem4914851 A B t f s y)). Qed.
Lemma lem4914858 {A B : Type'} (f : A -> B) (s : A -> Prop) (y : A) : (term770 A B f s y) = (term771 A B f s y).
Proof. exact (fun_ext (fun t : B -> Prop => @lem4914853 A B t f s y)). Qed.
Lemma lem4914859 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4914860 {A B : Type'} (f : A -> B) (s : A -> Prop) (y : A) : (term772 A B f s y) = (term773 A B f s y).
Proof. exact (MK_COMB (@lem4914859 B) (@lem4914858 A B f s y)). Qed.
Lemma lem4914865 {A B : Type'} (s : A -> Prop) (y : A) : (term774 A B s y) = (term775 A B s y).
Proof. exact (fun_ext (fun f : A -> B => @lem4914860 A B f s y)). Qed.
Lemma lem4914866 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem4914867 {A B : Type'} (s : A -> Prop) (y : A) : (term776 A B s y) = (term777 A B s y).
Proof. exact (MK_COMB (@lem4914866 A B) (@lem4914865 A B s y)). Qed.
Lemma lem4914872 {A B : Type'} (y : A) : (term778 A B y) = (term779 A B y).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4914867 A B s y)). Qed.
Lemma lem4914873 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4914874 {A B : Type'} (y : A) : (term780 A B y) = (term781 A B y).
Proof. exact (MK_COMB (@lem4914873 A) (@lem4914872 A B y)). Qed.
Lemma lem4914879 {A B : Type'} : (term782 A B) = (term783 A B).
Proof. exact (fun_ext (fun y : A => @lem4914874 A B y)). Qed.
Lemma lem4914880 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4914889 {A B : Type'} : (term784 A B) = (term785 A B).
Proof. exact (MK_COMB (@lem4914880 A) (@lem4914879 A B)). Qed.
Lemma lem4914900 {A B : Type'} (x : B) (f : A -> B) (s : A -> Prop) (x' : A) (y : A) : (term725 A B x f s x' y) = (term725 A B x f s x' y).
Proof. exact (eq_refl (term725 A B x f s x' y)). Qed.
Lemma lem4914901 {A B : Type'} (x : B) (f : A -> B) (s : A -> Prop) (y : A) : (term727 A B x f s y) = (term727 A B x f s y).
Proof. exact (fun_ext (fun x' : A => @lem4914900 A B x f s x' y)). Qed.
Lemma lem4914902 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem4914903 {A B : Type'} (x : B) (f : A -> B) (s : A -> Prop) (y : A) : (term728 A B x f s y) = (term728 A B x f s y).
Proof. exact (MK_COMB (@lem4914902 A) (@lem4914901 A B x f s y)). Qed.
Lemma lem4914906 {B : Type'} (x : B) (t : B -> Prop) : (term729 B x t) = (term729 B x t).
Proof. exact (eq_refl (term729 B x t)). Qed.
Lemma lem4914907 {A B : Type'} (t : B -> Prop) (x : B) (f : A -> B) (s : A -> Prop) (y : A) : (term731 A B t x f s y) = (term731 A B t x f s y).
Proof. exact (MK_COMB (@lem4914906 B x t) (@lem4914903 A B x f s y)). Qed.
Lemma lem4914908 {A B : Type'} (t : B -> Prop) (f : A -> B) (s : A -> Prop) (y : A) : (term733 A B t f s y) = (term733 A B t f s y).
Proof. exact (fun_ext (fun x : B => @lem4914907 A B t x f s y)). Qed.
Lemma lem4914909 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4914910 {A B : Type'} (t : B -> Prop) (f : A -> B) (s : A -> Prop) (y : A) : (term734 A B t f s y) = (term734 A B t f s y).
Proof. exact (MK_COMB (@lem4914909 B) (@lem4914908 A B t f s y)). Qed.
Lemma lem4914915 {A : Type'} (x : A) (y : A) : (term743 A x y) = (term743 A x y).
Proof. exact (eq_refl (term743 A x y)). Qed.
Lemma lem4914916 {A B : Type'} (x : A) (t : B -> Prop) (f : A -> B) (s : A -> Prop) (y : A) : (term745 A B x t f s y) = (term745 A B x t f s y).
Proof. exact (MK_COMB (@lem4914915 A x y) (@lem4914910 A B t f s y)). Qed.
Lemma lem4914919 {A B : Type'} (x : A) (f : A -> B) (y : A) : (term746 A B x f y) = (term746 A B x f y).
Proof. exact (eq_refl (term746 A B x f y)). Qed.
Lemma lem4914920 {A B : Type'} (x : A) (t : B -> Prop) (f : A -> B) (s : A -> Prop) (y : A) : (term748 A B x t f s y) = (term748 A B x t f s y).
Proof. exact (MK_COMB (@lem4914919 A B x f y) (@lem4914916 A B x t f s y)). Qed.
Lemma lem4914923 {A : Type'} (y : A) (s : A -> Prop) : (term729 A y s) = (term729 A y s).
Proof. exact (eq_refl (term729 A y s)). Qed.
Lemma lem4914924 {A B : Type'} (x : A) (t : B -> Prop) (f : A -> B) (s : A -> Prop) (y : A) : (term750 A B x t f s y) = (term750 A B x t f s y).
Proof. exact (MK_COMB (@lem4914923 A y s) (@lem4914920 A B x t f s y)). Qed.
Lemma lem4914927 {A : Type'} (x : A) (s : A -> Prop) : (term729 A x s) = (term729 A x s).
Proof. exact (eq_refl (term729 A x s)). Qed.
Lemma lem4914928 {A B : Type'} (x : A) (t : B -> Prop) (f : A -> B) (s : A -> Prop) (y : A) : (term752 A B x t f s y) = (term752 A B x t f s y).
Proof. exact (MK_COMB (@lem4914927 A x s) (@lem4914924 A B x t f s y)). Qed.
Lemma lem4914933 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) (y : B) : (term786 A B s f x y) = (term786 A B s f x y).
Proof. exact (eq_refl (term786 A B s f x y)). Qed.
Lemma lem4914934 {A B : Type'} (s : A -> Prop) (f : A -> B) (y : B) : (term787 A B s f y) = (term787 A B s f y).
Proof. exact (fun_ext (fun x : A => @lem4914933 A B s f x y)). Qed.
Lemma lem4914935 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem4914936 {A B : Type'} (s : A -> Prop) (f : A -> B) (y : B) : (term788 A B s f y) = (term788 A B s f y).
Proof. exact (MK_COMB (@lem4914935 A) (@lem4914934 A B s f y)). Qed.
Lemma lem4914939 {B : Type'} (y : B) (t : B -> Prop) : (term729 B y t) = (term729 B y t).
Proof. exact (eq_refl (term729 B y t)). Qed.
Lemma lem4914940 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (f : A -> B) (y : B) : (term789 A B t s f y) = (term789 A B t s f y).
Proof. exact (MK_COMB (@lem4914939 B y t) (@lem4914936 A B s f y)). Qed.
Lemma lem4914941 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (f : A -> B) : (term790 A B t s f) = (term790 A B t s f).
Proof. exact (fun_ext (fun y : B => @lem4914940 A B t s f y)). Qed.
Lemma lem4914942 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4914943 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (f : A -> B) : (term693 A B t s f) = (term693 A B t s f).
Proof. exact (MK_COMB (@lem4914942 B) (@lem4914941 A B t s f)). Qed.
Lemma lem4914944 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4914945 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (f : A -> B) : (term753 A B t s f) = (term753 A B t s f).
Proof. exact (MK_COMB (@lem4914944) (@lem4914943 A B t s f)). Qed.
Lemma lem4914946 {A B : Type'} (x : A) (t : B -> Prop) (f : A -> B) (s : A -> Prop) (y : A) : (term755 A B x t f s y) = (term755 A B x t f s y).
Proof. exact (MK_COMB (@lem4914945 A B t s f) (@lem4914928 A B x t f s y)). Qed.
Lemma lem4914949 {A B : Type'} (f : A -> B) (s : A -> Prop) (t : B -> Prop) : (term756 A B f s t) = (term756 A B f s t).
Proof. exact (eq_refl (term756 A B f s t)). Qed.
Lemma lem4914950 {A B : Type'} (x : A) (t : B -> Prop) (f : A -> B) (s : A -> Prop) (y : A) : (term758 A B x t f s y) = (term758 A B x t f s y).
Proof. exact (MK_COMB (@lem4914949 A B f s t) (@lem4914946 A B x t f s y)). Qed.
Lemma lem4914953 {A B : Type'} (s : A -> Prop) (t : B -> Prop) : (term759 A B s t) = (term759 A B s t).
Proof. exact (eq_refl (term759 A B s t)). Qed.
Lemma lem4914954 {A B : Type'} (x : A) (t : B -> Prop) (f : A -> B) (s : A -> Prop) (y : A) : (term761 A B x t f s y) = (term761 A B x t f s y).
Proof. exact (MK_COMB (@lem4914953 A B s t) (@lem4914950 A B x t f s y)). Qed.
Lemma lem4914957 {B : Type'} (t : B -> Prop) : (term762 B t) = (term762 B t).
Proof. exact (eq_refl (term762 B t)). Qed.
Lemma lem4914958 {A B : Type'} (x : A) (t : B -> Prop) (f : A -> B) (s : A -> Prop) (y : A) : (term764 A B x t f s y) = (term764 A B x t f s y).
Proof. exact (MK_COMB (@lem4914957 B t) (@lem4914954 A B x t f s y)). Qed.
Lemma lem4914961 {A : Type'} (s : A -> Prop) : (term762 A s) = (term762 A s).
Proof. exact (eq_refl (term762 A s)). Qed.
Lemma lem4914962 {A B : Type'} (x : A) (t : B -> Prop) (f : A -> B) (s : A -> Prop) (y : A) : (term765 A B x t f s y) = (term765 A B x t f s y).
Proof. exact (MK_COMB (@lem4914961 A s) (@lem4914958 A B x t f s y)). Qed.
Lemma lem4914963 {A B : Type'} (t : B -> Prop) (f : A -> B) (s : A -> Prop) (y : A) : (term767 A B t f s y) = (term767 A B t f s y).
Proof. exact (fun_ext (fun x : A => @lem4914962 A B x t f s y)). Qed.
Lemma lem4914964 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4914965 {A B : Type'} (t : B -> Prop) (f : A -> B) (s : A -> Prop) (y : A) : (term769 A B t f s y) = (term769 A B t f s y).
Proof. exact (MK_COMB (@lem4914964 A) (@lem4914963 A B t f s y)). Qed.
Lemma lem4914966 {A B : Type'} (f : A -> B) (s : A -> Prop) (y : A) : (term771 A B f s y) = (term771 A B f s y).
Proof. exact (fun_ext (fun t : B -> Prop => @lem4914965 A B t f s y)). Qed.
Lemma lem4914967 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4914968 {A B : Type'} (f : A -> B) (s : A -> Prop) (y : A) : (term773 A B f s y) = (term773 A B f s y).
Proof. exact (MK_COMB (@lem4914967 B) (@lem4914966 A B f s y)). Qed.
Lemma lem4914969 {A B : Type'} (s : A -> Prop) (y : A) : (term775 A B s y) = (term775 A B s y).
Proof. exact (fun_ext (fun f : A -> B => @lem4914968 A B f s y)). Qed.
Lemma lem4914970 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem4914971 {A B : Type'} (s : A -> Prop) (y : A) : (term777 A B s y) = (term777 A B s y).
Proof. exact (MK_COMB (@lem4914970 A B) (@lem4914969 A B s y)). Qed.
Lemma lem4914972 {A B : Type'} (y : A) : (term779 A B y) = (term779 A B y).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4914971 A B s y)). Qed.
Lemma lem4914973 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4914974 {A B : Type'} (y : A) : (term781 A B y) = (term781 A B y).
Proof. exact (MK_COMB (@lem4914973 A) (@lem4914972 A B y)). Qed.
Lemma lem4914975 {A B : Type'} : (term783 A B) = (term783 A B).
Proof. exact (fun_ext (fun y : A => @lem4914974 A B y)). Qed.
Lemma lem4914976 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4914977 {A B : Type'} : (term785 A B) = (term785 A B).
Proof. exact (MK_COMB (@lem4914976 A) (@lem4914975 A B)). Qed.
Lemma lem4915062 {A B : Type'} : (term784 A B) = (term785 A B).
Proof. exact (TRANS (@lem4914889 A B) (@lem4914977 A B)). Qed.
Lemma lem4915063 {A B : Type'} : (term785 A B) = (term784 A B).
Proof. exact (SYM (@lem4915062 A B)). Qed.
Lemma lem4915068 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (f : A -> B) (h1 : term693 A B t s f) : term693 A B t s f.
Proof. exact (h1). Qed.
Lemma lem4915075 (p : Prop) : p = (term735 p).
Proof. exact (EQ_MP (@lem10578 p) (@lem10597 p)). Qed.
Lemma lem4915076 {A B : Type'} (x' : B) (f : A -> B) (s : A -> Prop) (y : A) : (term728 A B x' f s y) = (term791 A B x' f s y).
Proof. exact (@lem4915075 (term728 A B x' f s y)). Qed.
Lemma lem4915077 {A B : Type'} (x' : B) (f : A -> B) (s : A -> Prop) (y : A) : (term791 A B x' f s y) = (term728 A B x' f s y).
Proof. exact (SYM (@lem4915076 A B x' f s y)). Qed.
Lemma lem4915078 {A B : Type'} (x' : B) (f : A -> B) (s : A -> Prop) (y : A) (h1 : term792 A B x' f s y) : term792 A B x' f s y.
Proof. exact (h1). Qed.
Lemma lem4915108 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) (y : B) : (term786 A B s f x y) = (term786 A B s f x y).
Proof. exact (eq_refl (term786 A B s f x y)). Qed.
Lemma lem4915109 {A B : Type'} (s : A -> Prop) (f : A -> B) (y : B) : (term787 A B s f y) = (term787 A B s f y).
Proof. exact (fun_ext (fun x : A => @lem4915108 A B s f x y)). Qed.
Lemma lem4915110 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem4915111 {A B : Type'} (s : A -> Prop) (f : A -> B) (y : B) : (term788 A B s f y) = (term788 A B s f y).
Proof. exact (MK_COMB (@lem4915110 A) (@lem4915109 A B s f y)). Qed.
Lemma lem4915113 {B : Type'} (y : B) (t : B -> Prop) : (term793 B y t) = (term793 B y t).
Proof. exact (eq_refl (term793 B y t)). Qed.
Lemma lem4915114 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (f : A -> B) (y : B) : (term794 A B t s f y) = (term794 A B t s f y).
Proof. exact (MK_COMB (@lem4915113 B y t) (@lem4915111 A B s f y)). Qed.
Lemma lem4915115 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (f : A -> B) (y : B) : (term789 A B t s f y) = (term794 A B t s f y).
Proof. exact (@lem17265 (@IN B y t) (term788 A B s f y)). Qed.
Lemma lem4915116 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (f : A -> B) (y : B) : (term789 A B t s f y) = (term794 A B t s f y).
Proof. exact (TRANS (@lem4915115 A B t s f y) (@lem4915114 A B t s f y)). Qed.
Lemma lem4915117 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (f : A -> B) : (term790 A B t s f) = (term795 A B t s f).
Proof. exact (fun_ext (fun y : B => @lem4915116 A B t s f y)). Qed.
Lemma lem4915118 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4915119 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (f : A -> B) : (term693 A B t s f) = (term796 A B t s f).
Proof. exact (MK_COMB (@lem4915118 B) (@lem4915117 A B t s f)). Qed.
Lemma lem4915218 {A : Type'} (P : Prop) (Q : A -> Prop) : (term797 A P Q) = (term798 A P Q).
Proof. exact (EQ_MP (@lem18911 A P Q) (@lem18910 A P Q)). Qed.
Lemma lem4915219 {A : Type'} (P : Prop) (Q : A -> Prop) : (term797 A P Q) = (term798 A P Q).
Proof. exact (@lem4915218 A P Q). Qed.
Lemma lem4915220 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (f : A -> B) (y : B) : (term799 A B t s f y) = (term800 A B t s f y).
Proof. exact (@lem4915219 A (term801 B y t) (term787 A B s f y)). Qed.
Lemma lem4915221 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) (y : B) : (term802 A B s f y x) = (term786 A B s f x y).
Proof. exact (eq_refl (term802 A B s f y x)). Qed.
Lemma lem4915222 {A B : Type'} (s : A -> Prop) (f : A -> B) (y : B) : (term803 A B s f y) = (term787 A B s f y).
Proof. exact (fun_ext (fun x : A => @lem4915221 A B s f x y)). Qed.
Lemma lem4915223 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem4915224 {A B : Type'} (s : A -> Prop) (f : A -> B) (y : B) : (term804 A B s f y) = (term788 A B s f y).
Proof. exact (MK_COMB (@lem4915223 A) (@lem4915222 A B s f y)). Qed.
Lemma lem4915225 {B : Type'} (y : B) (t : B -> Prop) : (term793 B y t) = (term793 B y t).
Proof. exact (eq_refl (term793 B y t)). Qed.
Lemma lem4915226 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (f : A -> B) (y : B) : (term799 A B t s f y) = (term794 A B t s f y).
Proof. exact (MK_COMB (@lem4915225 B y t) (@lem4915224 A B s f y)). Qed.
Lemma lem4915227 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4915228 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (f : A -> B) (y : B) : (term805 A B t s f y) = (term806 A B t s f y).
Proof. exact (MK_COMB (@lem4915227) (@lem4915226 A B t s f y)). Qed.
Lemma lem4915229 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) (y : B) : (term802 A B s f y x) = (term786 A B s f x y).
Proof. exact (eq_refl (term802 A B s f y x)). Qed.
Lemma lem4915230 {B : Type'} (y : B) (t : B -> Prop) : (term793 B y t) = (term793 B y t).
Proof. exact (eq_refl (term793 B y t)). Qed.
Lemma lem4915231 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (f : A -> B) (x : A) (y : B) : (term807 A B t s f y x) = (term808 A B t s f x y).
Proof. exact (MK_COMB (@lem4915230 B y t) (@lem4915229 A B s f x y)). Qed.
Lemma lem4915232 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (f : A -> B) (y : B) : (term809 A B t s f y) = (term810 A B t s f y).
Proof. exact (fun_ext (fun x : A => @lem4915231 A B t s f x y)). Qed.
Lemma lem4915233 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem4915234 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (f : A -> B) (y : B) : (term800 A B t s f y) = (term811 A B t s f y).
Proof. exact (MK_COMB (@lem4915233 A) (@lem4915232 A B t s f y)). Qed.
Lemma lem4915235 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (f : A -> B) (y : B) : ((term799 A B t s f y) = (term800 A B t s f y)) = ((term794 A B t s f y) = (term811 A B t s f y)).
Proof. exact (MK_COMB (@lem4915228 A B t s f y) (@lem4915234 A B t s f y)). Qed.
Lemma lem4915236 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (f : A -> B) (y : B) : (term794 A B t s f y) = (term811 A B t s f y).
Proof. exact (EQ_MP (@lem4915235 A B t s f y) (@lem4915220 A B t s f y)). Qed.
Lemma lem4915237 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (f : A -> B) : (term795 A B t s f) = (term812 A B t s f).
Proof. exact (fun_ext (fun y : B => @lem4915236 A B t s f y)). Qed.
Lemma lem4915238 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4915239 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (f : A -> B) : (term796 A B t s f) = (term813 A B t s f).
Proof. exact (MK_COMB (@lem4915238 B) (@lem4915237 A B t s f)). Qed.
Lemma lem4915241 {A B : Type'} (P : type1413 A B) : (term814 A B P) = (term815 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem4915242 {A B : Type'} (P : type1470 A B) : (term816 A B P) = (term817 A B P).
Proof. exact (@lem4915241 B A P). Qed.
Lemma lem4915243 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (f : A -> B) : (term818 A B t s f) = (term819 A B t s f).
Proof. exact (@lem4915242 A B (term820 A B t s f)). Qed.
Lemma lem4915244 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (f : A -> B) (y : B) : (term821 A B t s f y) = (term810 A B t s f y).
Proof. exact (eq_refl (term821 A B t s f y)). Qed.
Lemma lem4915245 {A : Type'} (x : A) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem4915246 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (f : A -> B) (y : B) (x : A) : (term822 A B t s f y x) = (term823 A B t s f y x).
Proof. exact (MK_COMB (@lem4915244 A B t s f y) (@lem4915245 A x)). Qed.
Lemma lem4915247 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (f : A -> B) (x : A) (y : B) : (term823 A B t s f y x) = (term808 A B t s f x y).
Proof. exact (eq_refl (term823 A B t s f y x)). Qed.
Lemma lem4915248 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (f : A -> B) (x : A) (y : B) : (term822 A B t s f y x) = (term808 A B t s f x y).
Proof. exact (TRANS (@lem4915246 A B t s f y x) (@lem4915247 A B t s f x y)). Qed.
Lemma lem4915249 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (f : A -> B) (y : B) : (term824 A B t s f y) = (term810 A B t s f y).
Proof. exact (fun_ext (fun x : A => @lem4915248 A B t s f x y)). Qed.
Lemma lem4915250 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem4915251 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (f : A -> B) (y : B) : (term825 A B t s f y) = (term811 A B t s f y).
Proof. exact (MK_COMB (@lem4915250 A) (@lem4915249 A B t s f y)). Qed.
Lemma lem4915252 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (f : A -> B) : (term826 A B t s f) = (term812 A B t s f).
Proof. exact (fun_ext (fun y : B => @lem4915251 A B t s f y)). Qed.
Lemma lem4915253 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4915254 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (f : A -> B) : (term818 A B t s f) = (term813 A B t s f).
Proof. exact (MK_COMB (@lem4915253 B) (@lem4915252 A B t s f)). Qed.
Lemma lem4915255 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4915256 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (f : A -> B) : (term827 A B t s f) = (term828 A B t s f).
Proof. exact (MK_COMB (@lem4915255) (@lem4915254 A B t s f)). Qed.
Lemma lem4915257 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (f : A -> B) (y : B) : (term821 A B t s f y) = (term810 A B t s f y).
Proof. exact (eq_refl (term821 A B t s f y)). Qed.
Lemma lem4915258 {A B : Type'} (x : B -> A) (y : B) : (x y) = (x y).
Proof. exact (eq_refl (x y)). Qed.
Lemma lem4915259 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (f : A -> B) (x : B -> A) (y : B) : (term829 A B t s f x y) = (term830 A B t s f x y).
Proof. exact (MK_COMB (@lem4915257 A B t s f y) (@lem4915258 A B x y)). Qed.
Lemma lem4915260 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (f : A -> B) (x : B -> A) (y : B) : (term830 A B t s f x y) = (term831 A B t s f x y).
Proof. exact (eq_refl (term830 A B t s f x y)). Qed.
Lemma lem4915261 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (f : A -> B) (x : B -> A) (y : B) : (term829 A B t s f x y) = (term831 A B t s f x y).
Proof. exact (TRANS (@lem4915259 A B t s f x y) (@lem4915260 A B t s f x y)). Qed.
Lemma lem4915262 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (f : A -> B) (x : B -> A) : (term832 A B t s f x) = (term833 A B t s f x).
Proof. exact (fun_ext (fun y : B => @lem4915261 A B t s f x y)). Qed.
Lemma lem4915263 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4915264 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (f : A -> B) (x : B -> A) : (term834 A B t s f x) = (term835 A B t s f x).
Proof. exact (MK_COMB (@lem4915263 B) (@lem4915262 A B t s f x)). Qed.
Lemma lem4915265 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (f : A -> B) : (term836 A B t s f) = (term837 A B t s f).
Proof. exact (fun_ext (fun x : B -> A => @lem4915264 A B t s f x)). Qed.
Lemma lem4915266 {A B : Type'} : (@ex (B -> A)) = (@ex (B -> A)).
Proof. exact (eq_refl (@ex (B -> A))). Qed.
Lemma lem4915267 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (f : A -> B) : (term819 A B t s f) = (term838 A B t s f).
Proof. exact (MK_COMB (@lem4915266 A B) (@lem4915265 A B t s f)). Qed.
Lemma lem4915268 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (f : A -> B) : ((term818 A B t s f) = (term819 A B t s f)) = ((term813 A B t s f) = (term838 A B t s f)).
Proof. exact (MK_COMB (@lem4915256 A B t s f) (@lem4915267 A B t s f)). Qed.
Lemma lem4915269 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (f : A -> B) : (term813 A B t s f) = (term838 A B t s f).
Proof. exact (EQ_MP (@lem4915268 A B t s f) (@lem4915243 A B t s f)). Qed.
Lemma lem4915271 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (f : A -> B) : (term796 A B t s f) = (term838 A B t s f).
Proof. exact (TRANS (@lem4915239 A B t s f) (@lem4915269 A B t s f)). Qed.
Lemma lem4915272 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (f : A -> B) : (term693 A B t s f) = (term838 A B t s f).
Proof. exact (TRANS (@lem4915119 A B t s f) (@lem4915271 A B t s f)). Qed.
Lemma lem4915273 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (f : A -> B) (h1 : term693 A B t s f) : term838 A B t s f.
Proof. exact (EQ_MP (@lem4915272 A B t s f) (@lem4915068 A B t s f h1)). Qed.
Lemma lem4915279 {A : Type'} (x : A) (s : A -> Prop) (h1 : @IN A x s) : @IN A x s.
Proof. exact (h1). Qed.
Lemma lem4915291 {A B : Type'} (x : A) (f : A -> B) (y : A) (h1 : (f x) = (f y)) : (f x) = (f y).
Proof. exact (h1). Qed.
Lemma lem4915297 {A : Type'} (x : A) (y : A) (h1 : term688 A x y) : term688 A x y.
Proof. exact (h1). Qed.
Lemma lem4915303 {B : Type'} (x' : B) (t : B -> Prop) (h1 : @IN B x' t) : @IN B x' t.
Proof. exact (h1). Qed.
Lemma lem4915308 {A : Type'} (x : A) (y : A) : (term839 A x y) = (x = y).
Proof. exact (@lem16933 (x = y)). Qed.
Lemma lem4915310 {A : Type'} (x : A) (s : A -> Prop) : (term793 A x s) = (term793 A x s).
Proof. exact (eq_refl (term793 A x s)). Qed.
Lemma lem4915311 {A : Type'} (s : A -> Prop) (x : A) (y : A) : (term840 A s x y) = (term841 A s x y).
Proof. exact (MK_COMB (@lem4915310 A x s) (@lem4915308 A x y)). Qed.
Lemma lem4915312 {A : Type'} (s : A -> Prop) (x : A) (y : A) : (term842 A s x y) = (term840 A s x y).
Proof. exact (@lem17045 (@IN A x s) (term688 A x y)). Qed.
Lemma lem4915313 {A : Type'} (s : A -> Prop) (x : A) (y : A) : (term842 A s x y) = (term841 A s x y).
Proof. exact (TRANS (@lem4915312 A s x y) (@lem4915311 A s x y)). Qed.
Lemma lem4915315 {A B : Type'} (x' : B) (f : A -> B) (x : A) : (term843 A B x' f x) = (term843 A B x' f x).
Proof. exact (eq_refl (term843 A B x' f x)). Qed.
Lemma lem4915316 {A B : Type'} (x' : B) (f : A -> B) (s : A -> Prop) (x : A) (y : A) : (term844 A B x' f s x y) = (term845 A B x' f s x y).
Proof. exact (MK_COMB (@lem4915315 A B x' f x) (@lem4915313 A s x y)). Qed.
Lemma lem4915317 {A B : Type'} (x' : B) (f : A -> B) (s : A -> Prop) (x : A) (y : A) : (term846 A B x' f s x y) = (term844 A B x' f s x y).
Proof. exact (@lem17045 (x' = (f x)) (term665 A s x y)). Qed.
Lemma lem4915318 {A B : Type'} (x' : B) (f : A -> B) (s : A -> Prop) (x : A) (y : A) : (term846 A B x' f s x y) = (term845 A B x' f s x y).
Proof. exact (TRANS (@lem4915317 A B x' f s x y) (@lem4915316 A B x' f s x y)). Qed.
Lemma lem4915319 {A : Type'} (P : A -> Prop) : (term847 A P) = (term848 A P).
Proof. exact (@lem18394 A P). Qed.
Lemma lem4915320 {A B : Type'} (x' : B) (f : A -> B) (s : A -> Prop) (y : A) : (term792 A B x' f s y) = (term849 A B x' f s y).
Proof. exact (@lem4915319 A (term727 A B x' f s y)). Qed.
Lemma lem4915321 {A B : Type'} (x' : B) (f : A -> B) (s : A -> Prop) (x : A) (y : A) : (term850 A B x' f s y x) = (term725 A B x' f s x y).
Proof. exact (eq_refl (term850 A B x' f s y x)). Qed.
Lemma lem4915322 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem4915323 {A B : Type'} (x' : B) (f : A -> B) (s : A -> Prop) (x : A) (y : A) : (term851 A B x' f s y x) = (term846 A B x' f s x y).
Proof. exact (MK_COMB (@lem4915322) (@lem4915321 A B x' f s x y)). Qed.
Lemma lem4915324 {A B : Type'} (x' : B) (f : A -> B) (s : A -> Prop) (x : A) (y : A) : (term851 A B x' f s y x) = (term845 A B x' f s x y).
Proof. exact (TRANS (@lem4915323 A B x' f s x y) (@lem4915318 A B x' f s x y)). Qed.
Lemma lem4915325 {A B : Type'} (x' : B) (f : A -> B) (s : A -> Prop) (y : A) : (term852 A B x' f s y) = (term853 A B x' f s y).
Proof. exact (fun_ext (fun x : A => @lem4915324 A B x' f s x y)). Qed.
Lemma lem4915326 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4915327 {A B : Type'} (x' : B) (f : A -> B) (s : A -> Prop) (y : A) : (term849 A B x' f s y) = (term854 A B x' f s y).
Proof. exact (MK_COMB (@lem4915326 A) (@lem4915325 A B x' f s y)). Qed.
Lemma lem4915380 {A B : Type'} (x' : B) (f : A -> B) (s : A -> Prop) (y : A) : (term792 A B x' f s y) = (term854 A B x' f s y).
Proof. exact (TRANS (@lem4915320 A B x' f s y) (@lem4915327 A B x' f s y)). Qed.
Lemma lem4915381 {A B : Type'} (x' : B) (f : A -> B) (s : A -> Prop) (y : A) (h1 : term792 A B x' f s y) : term854 A B x' f s y.
Proof. exact (EQ_MP (@lem4915380 A B x' f s y) (@lem4915078 A B x' f s y h1)). Qed.
Lemma lem4915382 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (f : A -> B) (x'' : B -> A) (h1 : term835 A B t s f x'') : term835 A B t s f x''.
Proof. exact (h1). Qed.
Lemma lem4915416 {A : Type'} (x : A) (s : A -> Prop) (h1 : @IN A x s) : @IN A x s.
Proof. exact (h1). Qed.
Lemma lem4915423 {B : Type'} : (@eq B) = (@eq B).
Proof. exact (eq_refl (@eq B)). Qed.
Lemma lem4915428 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4915430 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (@lem4915428 A B f x). Qed.
Lemma lem4915435 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4915436 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (@lem4915435 A B f x). Qed.
Lemma lem4915438 {A B : Type'} (f : A -> B) (y : A) : (f y) = (@I (A -> B) f y).
Proof. exact (@lem4915436 A B f y). Qed.
Lemma lem4915439 {A B : Type'} (f : A -> B) (x : A) : (term855 A B f x) = (term856 A B f x).
Proof. exact (MK_COMB (@lem4915423 B) (@lem4915430 A B f x)). Qed.
Lemma lem4915440 {A B : Type'} (x : A) (f : A -> B) (y : A) : ((f x) = (f y)) = ((@I (A -> B) f x) = (@I (A -> B) f y)).
Proof. exact (MK_COMB (@lem4915439 A B f x) (@lem4915438 A B f y)). Qed.
Lemma lem4915449 {A : Type'} (x : A) (y : A) (h1 : term688 A x y) : term688 A x y.
Proof. exact (h1). Qed.
Lemma lem4915455 {B : Type'} (x' : B) (t : B -> Prop) (h1 : @IN B x' t) : @IN B x' t.
Proof. exact (h1). Qed.
Lemma lem4915470 {A : Type'} (s : A -> Prop) (x : A) (y : A) : (term841 A s x y) = (term841 A s x y).
Proof. exact (eq_refl (term841 A s x y)). Qed.
Lemma lem4915471 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem4915478 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4915480 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (@lem4915478 A B f x). Qed.
Lemma lem4915481 {B : Type'} (x' : B) : (@eq B x') = (@eq B x').
Proof. exact (eq_refl (@eq B x')). Qed.
Lemma lem4915482 {A B : Type'} (x' : B) (f : A -> B) (x : A) : (x' = (f x)) = (x' = (@I (A -> B) f x)).
Proof. exact (MK_COMB (@lem4915481 B x') (@lem4915480 A B f x)). Qed.
Lemma lem4915483 {A B : Type'} (x' : B) (f : A -> B) (x : A) : (term857 A B x' f x) = (term858 A B x' f x).
Proof. exact (MK_COMB (@lem4915471) (@lem4915482 A B x' f x)). Qed.
Lemma lem4915484 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4915485 {A B : Type'} (x' : B) (f : A -> B) (x : A) : (term843 A B x' f x) = (term859 A B x' f x).
Proof. exact (MK_COMB (@lem4915484) (@lem4915483 A B x' f x)). Qed.
Lemma lem4915486 {A B : Type'} (x' : B) (f : A -> B) (s : A -> Prop) (x : A) (y : A) : (term845 A B x' f s x y) = (term860 A B x' f s x y).
Proof. exact (MK_COMB (@lem4915485 A B x' f x) (@lem4915470 A s x y)). Qed.
Lemma lem4915487 {A B : Type'} (x' : B) (f : A -> B) (s : A -> Prop) (y : A) : (term853 A B x' f s y) = (term861 A B x' f s y).
Proof. exact (fun_ext (fun x : A => @lem4915486 A B x' f s x y)). Qed.
Lemma lem4915488 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4915489 {A B : Type'} (x' : B) (f : A -> B) (s : A -> Prop) (y : A) : (term854 A B x' f s y) = (term862 A B x' f s y).
Proof. exact (MK_COMB (@lem4915488 A) (@lem4915487 A B x' f s y)). Qed.
Lemma lem4915490 {A B : Type'} (x' : B) (f : A -> B) (s : A -> Prop) (y : A) (h1 : term792 A B x' f s y) : term862 A B x' f s y.
Proof. exact (EQ_MP (@lem4915489 A B x' f s y) (@lem4915381 A B x' f s y h1)). Qed.
Lemma lem4915491 {B : Type'} : (@eq B) = (@eq B).
Proof. exact (eq_refl (@eq B)). Qed.
Lemma lem4915498 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4915499 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (@lem4915498 A B f x). Qed.
Lemma lem4915501 {A B : Type'} (f : A -> B) (x'' : B -> A) (y : B) : (term863 A B f x'' y) = (term864 A B f x'' y).
Proof. exact (@lem4915499 A B f (x'' y)). Qed.
Lemma lem4915502 {B : Type'} (y : B) : y = y.
Proof. exact (eq_refl y). Qed.
Lemma lem4915503 {A B : Type'} (f : A -> B) (x'' : B -> A) (y : B) : (term865 A B f x'' y) = (term866 A B f x'' y).
Proof. exact (MK_COMB (@lem4915491 B) (@lem4915501 A B f x'' y)). Qed.
Lemma lem4915504 {A B : Type'} (f : A -> B) (x'' : B -> A) (y : B) : ((term863 A B f x'' y) = y) = ((term864 A B f x'' y) = y).
Proof. exact (MK_COMB (@lem4915503 A B f x'' y) (@lem4915502 B y)). Qed.
Lemma lem4915513 {A B : Type'} (x'' : B -> A) (y : B) (s : A -> Prop) : (term867 A B x'' y s) = (term867 A B x'' y s).
Proof. exact (eq_refl (term867 A B x'' y s)). Qed.
Lemma lem4915514 {A B : Type'} (s : A -> Prop) (f : A -> B) (x'' : B -> A) (y : B) : (term868 A B s f x'' y) = (term869 A B s f x'' y).
Proof. exact (MK_COMB (@lem4915513 A B x'' y s) (@lem4915504 A B f x'' y)). Qed.
Lemma lem4915523 {B : Type'} (y : B) (t : B -> Prop) : (term793 B y t) = (term793 B y t).
Proof. exact (eq_refl (term793 B y t)). Qed.
Lemma lem4915524 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (f : A -> B) (x'' : B -> A) (y : B) : (term831 A B t s f x'' y) = (term870 A B t s f x'' y).
Proof. exact (MK_COMB (@lem4915523 B y t) (@lem4915514 A B s f x'' y)). Qed.
Lemma lem4915525 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (f : A -> B) (x'' : B -> A) : (term833 A B t s f x'') = (term871 A B t s f x'').
Proof. exact (fun_ext (fun y : B => @lem4915524 A B t s f x'' y)). Qed.
Lemma lem4915526 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4915527 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (f : A -> B) (x'' : B -> A) : (term835 A B t s f x'') = (term872 A B t s f x'').
Proof. exact (MK_COMB (@lem4915526 B) (@lem4915525 A B t s f x'')). Qed.
Lemma lem4915528 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (f : A -> B) (x'' : B -> A) (h1 : term835 A B t s f x'') : term872 A B t s f x''.
Proof. exact (EQ_MP (@lem4915527 A B t s f x'') (@lem4915382 A B t s f x'' h1)). Qed.
Lemma lem4915548 {A : Type'} (x : A) (s : A -> Prop) (h1 : @IN A x s) : @IN A x s.
Proof. exact (h1). Qed.
Lemma lem4915560 {A : Type'} (x : A) (y : A) (h1 : term688 A x y) : term688 A x y.
Proof. exact (h1). Qed.
Lemma lem4915564 {B : Type'} (x' : B) (t : B -> Prop) (h1 : @IN B x' t) : @IN B x' t.
Proof. exact (h1). Qed.
Lemma lem4915578 {A B : Type'} (x' : B) (f : A -> B) (s : A -> Prop) (x : A) (y : A) : (term860 A B x' f s x y) = (term860 A B x' f s x y).
Proof. exact (eq_refl (term860 A B x' f s x y)). Qed.
Lemma lem4915579 {A B : Type'} (x' : B) (f : A -> B) (s : A -> Prop) (y : A) : (term861 A B x' f s y) = (term861 A B x' f s y).
Proof. exact (fun_ext (fun x : A => @lem4915578 A B x' f s x y)). Qed.
Lemma lem4915580 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4915582 {A B : Type'} (x' : B) (f : A -> B) (s : A -> Prop) (y : A) : (term862 A B x' f s y) = (term862 A B x' f s y).
Proof. exact (MK_COMB (@lem4915580 A) (@lem4915579 A B x' f s y)). Qed.
Lemma lem4915583 {A B : Type'} (x' : B) (f : A -> B) (s : A -> Prop) (y : A) (h1 : term792 A B x' f s y) : term862 A B x' f s y.
Proof. exact (EQ_MP (@lem4915582 A B x' f s y) (@lem4915490 A B x' f s y h1)). Qed.
Lemma lem4915601 {A B : Type'} (s : A -> Prop) (t : B -> Prop) (f : A -> B) (x'' : B -> A) (y : B) : (term870 A B t s f x'' y) = (term873 A B s t f x'' y).
Proof. exact (@lem19490 (term874 A B x'' y s) (term801 B y t) ((term864 A B f x'' y) = y)). Qed.
Lemma lem4915602 {A B : Type'} (s : A -> Prop) (t : B -> Prop) (f : A -> B) (x'' : B -> A) : (term871 A B t s f x'') = (term875 A B s t f x'').
Proof. exact (fun_ext (fun y : B => @lem4915601 A B s t f x'' y)). Qed.
Lemma lem4915603 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4915605 {A B : Type'} (s : A -> Prop) (t : B -> Prop) (f : A -> B) (x'' : B -> A) : (term872 A B t s f x'') = (term876 A B s t f x'').
Proof. exact (MK_COMB (@lem4915603 B) (@lem4915602 A B s t f x'')). Qed.
Lemma lem4915606 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (f : A -> B) (x'' : B -> A) (h1 : term835 A B t s f x'') : term876 A B s t f x''.
Proof. exact (EQ_MP (@lem4915605 A B s t f x'') (@lem4915528 A B t s f x'' h1)). Qed.
Lemma lem4915607 {A B : Type'} (_61043 : A) (x' : B) (f : A -> B) (s : A -> Prop) (y : A) (h1 : term792 A B x' f s y) : term877 A B x' f s y _61043.
Proof. exact (@lem4915583 A B x' f s y h1 _61043). Qed.
Lemma lem4915608 {A B : Type'} (x' : B) (f : A -> B) (s : A -> Prop) (_61043 : A) (y : A) : (term877 A B x' f s y _61043) = (term860 A B x' f s _61043 y).
Proof. exact (eq_refl (term877 A B x' f s y _61043)). Qed.
Lemma lem4915610 {A B : Type'} (_61044 : B) (t : B -> Prop) (s : A -> Prop) (f : A -> B) (x'' : B -> A) (h1 : term835 A B t s f x'') : term878 A B s t f x'' _61044.
Proof. exact (@lem4915606 A B t s f x'' h1 _61044). Qed.
Lemma lem4915611 {A B : Type'} (s : A -> Prop) (t : B -> Prop) (f : A -> B) (x'' : B -> A) (_61044 : B) : (term878 A B s t f x'' _61044) = (term873 A B s t f x'' _61044).
Proof. exact (eq_refl (term878 A B s t f x'' _61044)). Qed.
Lemma lem4915612 {A B : Type'} (_61044 : B) (t : B -> Prop) (s : A -> Prop) (f : A -> B) (x'' : B -> A) (h1 : term835 A B t s f x'') : term873 A B s t f x'' _61044.
Proof. exact (EQ_MP (@lem4915611 A B s t f x'' _61044) (@lem4915610 A B _61044 t s f x'' h1)). Qed.
Lemma lem4915624 {A : Type'} (x : A) (s : A -> Prop) (h1 : @IN A x s) : @IN A x s.
Proof. exact (h1). Qed.
Lemma lem4915630 {A : Type'} (x : A) (y : A) (h1 : term688 A x y) : term688 A x y.
Proof. exact (h1). Qed.
Lemma lem4915632 {B : Type'} (x' : B) (t : B -> Prop) (h1 : @IN B x' t) : @IN B x' t.
Proof. exact (h1). Qed.
Lemma lem4915642 {A B : Type'} (_61043 : A) (x' : B) (f : A -> B) (s : A -> Prop) (y : A) (h1 : term792 A B x' f s y) : term860 A B x' f s _61043 y.
Proof. exact (EQ_MP (@lem4915608 A B x' f s _61043 y) (@lem4915607 A B _61043 x' f s y h1)). Qed.
Lemma lem4915648 {A B : Type'} (_61044 : B) (t : B -> Prop) (s : A -> Prop) (f : A -> B) (x'' : B -> A) (h1 : term835 A B t s f x'') : term879 A B t x'' _61044 s.
Proof. exact (proj1 (@lem4915612 A B _61044 t s f x'' h1)). Qed.
Lemma lem4915654 {A B : Type'} (_61044 : B) (t : B -> Prop) (s : A -> Prop) (f : A -> B) (x'' : B -> A) (h1 : term835 A B t s f x'') : term880 A B t f x'' _61044.
Proof. exact (proj2 (@lem4915612 A B _61044 t s f x'' h1)). Qed.
Lemma lem4915744 {A B : Type'} : (@I (A -> B)) = (@I (A -> B)).
Proof. exact (eq_refl (@I (A -> B))). Qed.
Lemma lem4915745 {A B : Type'} (_61063 : A -> B) (_61065 : A -> B) (h1 : _61063 = _61065) : _61063 = _61065.
Proof. exact (h1). Qed.
Lemma lem4915746 {A : Type'} (_61064 : A) (_61066 : A) (h1 : _61064 = _61066) : _61064 = _61066.
Proof. exact (h1). Qed.
Lemma lem4915747 {A B : Type'} (_61063 : A -> B) (_61065 : A -> B) (h1 : _61063 = _61065) : (@I (A -> B) _61063) = (@I (A -> B) _61065).
Proof. exact (MK_COMB (@lem4915744 A B) (@lem4915745 A B _61063 _61065 h1)). Qed.
Lemma lem4915748 {A B : Type'} (_61064 : A) (_61066 : A) (_61063 : A -> B) (_61065 : A -> B) (h1 : _61064 = _61066) (h2 : _61063 = _61065) : (@I (A -> B) _61063 _61064) = (@I (A -> B) _61065 _61066).
Proof. exact (MK_COMB (@lem4915747 A B _61063 _61065 h2) (@lem4915746 A _61064 _61066 h1)). Qed.
Lemma lem4915749 {A B : Type'} (_61063 : A -> B) (_61065 : A -> B) (_61064 : A) (_61066 : A) (h1 : _61064 = _61066) : term881 A B _61063 _61064 _61065 _61066.
Proof. exact (fun h0 : _61063 = _61065 => @lem4915748 A B _61064 _61066 _61063 _61065 h1 h0). Qed.
Lemma lem4915751 (a : Prop) (b : Prop) : (a -> b) = (term882 a b).
Proof. exact (EQ_MP (@lem21394 a b) (@lem21490 a b)). Qed.
Lemma lem4915752 {A B : Type'} (_61063 : A -> B) (_61064 : A) (_61065 : A -> B) (_61066 : A) : (term881 A B _61063 _61064 _61065 _61066) = (term883 A B _61063 _61064 _61065 _61066).
Proof. exact (@lem4915751 (_61063 = _61065) ((@I (A -> B) _61063 _61064) = (@I (A -> B) _61065 _61066))). Qed.
Lemma lem4915753 {A B : Type'} (_61063 : A -> B) (_61065 : A -> B) (_61064 : A) (_61066 : A) (h1 : _61064 = _61066) : term883 A B _61063 _61064 _61065 _61066.
Proof. exact (EQ_MP (@lem4915752 A B _61063 _61064 _61065 _61066) (@lem4915749 A B _61063 _61065 _61064 _61066 h1)). Qed.
Lemma lem4915754 {A B : Type'} (_61063 : A -> B) (_61064 : A) (_61065 : A -> B) (_61066 : A) : term884 A B _61063 _61064 _61065 _61066.
Proof. exact (fun h0 : _61064 = _61066 => @lem4915753 A B _61063 _61065 _61064 _61066 h0). Qed.
Lemma lem4915756 (a : Prop) (b : Prop) : (a -> b) = (term882 a b).
Proof. exact (EQ_MP (@lem21394 a b) (@lem21490 a b)). Qed.
Lemma lem4915757 {A B : Type'} (_61063 : A -> B) (_61064 : A) (_61065 : A -> B) (_61066 : A) : (term884 A B _61063 _61064 _61065 _61066) = (term885 A B _61063 _61064 _61065 _61066).
Proof. exact (@lem4915756 (_61064 = _61066) (term883 A B _61063 _61064 _61065 _61066)). Qed.
Lemma lem4915758 {A B : Type'} (_61063 : A -> B) (_61064 : A) (_61065 : A -> B) (_61066 : A) : term885 A B _61063 _61064 _61065 _61066.
Proof. exact (EQ_MP (@lem4915757 A B _61063 _61064 _61065 _61066) (@lem4915754 A B _61063 _61064 _61065 _61066)). Qed.
Lemma lem4915799 {B : Type'} (x : B) (y : B) (z : B) : term886 B x y z.
Proof. exact (@lem21385 B x y z). Qed.
Lemma lem4915803 {B : Type'} (x' : B) (t : B -> Prop) (h1 : @IN B x' t) : @IN B x' t.
Proof. exact (h1). Qed.
Lemma lem4915804 {B : Type'} (x' : B) (t : B -> Prop) (h1 : @IN B x' t) : term887 B x' t.
Proof. exact (fun h0 : term801 B x' t => @lem4915803 B x' t h1). Qed.
Lemma lem4915806 (p : Prop) : (term888 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem4915807 {B : Type'} (x' : B) (t : B -> Prop) : (term887 B x' t) = (@IN B x' t).
Proof. exact (@lem4915806 (@IN B x' t)). Qed.
Lemma lem4915808 {B : Type'} (x' : B) (t : B -> Prop) (h1 : @IN B x' t) : @IN B x' t.
Proof. exact (EQ_MP (@lem4915807 B x' t) (@lem4915804 B x' t h1)). Qed.
Lemma lem4915814 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem4915815 {A B : Type'} (f : A -> B) (x'' : B -> A) (_61044 : B) (t : B -> Prop) : (term880 A B t f x'' _61044) = (term889 A B f x'' _61044 t).
Proof. exact (@lem4915814 ((term864 A B f x'' _61044) = _61044) (term801 B _61044 t)). Qed.
Lemma lem4915823 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4915824 {A B : Type'} (f : A -> B) (x'' : B -> A) (_61044 : B) (t : B -> Prop) : (term890 A B t f x'' _61044) = (term891 A B f x'' _61044 t).
Proof. exact (MK_COMB (@lem4915823) (@lem4915815 A B f x'' _61044 t)). Qed.
Lemma lem4915832 {A B : Type'} (f : A -> B) (x'' : B -> A) (_61044 : B) (t : B -> Prop) : (term889 A B f x'' _61044 t) = (term889 A B f x'' _61044 t).
Proof. exact (eq_refl (term889 A B f x'' _61044 t)). Qed.
Lemma lem4915833 {A B : Type'} (f : A -> B) (x'' : B -> A) (_61044 : B) (t : B -> Prop) : ((term880 A B t f x'' _61044) = (term889 A B f x'' _61044 t)) = ((term889 A B f x'' _61044 t) = (term889 A B f x'' _61044 t)).
Proof. exact (MK_COMB (@lem4915824 A B f x'' _61044 t) (@lem4915832 A B f x'' _61044 t)). Qed.
Lemma lem4915835 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem20665 A x) (@lem20664 A x)). Qed.
Lemma lem4915836 (x : Prop) : (x = x) = True.
Proof. exact (@lem4915835 Prop x). Qed.
Lemma lem4915837 {A B : Type'} (f : A -> B) (x'' : B -> A) (_61044 : B) (t : B -> Prop) : ((term889 A B f x'' _61044 t) = (term889 A B f x'' _61044 t)) = True.
Proof. exact (@lem4915836 (term889 A B f x'' _61044 t)). Qed.
Lemma lem4915838 {A B : Type'} (f : A -> B) (x'' : B -> A) (_61044 : B) (t : B -> Prop) : ((term880 A B t f x'' _61044) = (term889 A B f x'' _61044 t)) = True.
Proof. exact (TRANS (@lem4915833 A B f x'' _61044 t) (@lem4915837 A B f x'' _61044 t)). Qed.
Lemma lem4915839 {A B : Type'} (f : A -> B) (x'' : B -> A) (_61044 : B) (t : B -> Prop) : True = ((term880 A B t f x'' _61044) = (term889 A B f x'' _61044 t)).
Proof. exact (SYM (@lem4915838 A B f x'' _61044 t)). Qed.
Lemma lem4915840 {A B : Type'} (f : A -> B) (x'' : B -> A) (_61044 : B) (t : B -> Prop) : (term880 A B t f x'' _61044) = (term889 A B f x'' _61044 t).
Proof. exact (EQ_MP (@lem4915839 A B f x'' _61044 t) (@lem0)). Qed.
Lemma lem4915841 {A B : Type'} (_61044 : B) (t : B -> Prop) (s : A -> Prop) (f : A -> B) (x'' : B -> A) (h1 : term835 A B t s f x'') : term889 A B f x'' _61044 t.
Proof. exact (EQ_MP (@lem4915840 A B f x'' _61044 t) (@lem4915654 A B _61044 t s f x'' h1)). Qed.
Lemma lem4915843 (b : Prop) (a : Prop) : (a \/ b) = (term892 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem4915844 {A B : Type'} (t : B -> Prop) (f : A -> B) (x'' : B -> A) (_61044 : B) : (term889 A B f x'' _61044 t) = (term893 A B t f x'' _61044).
Proof. exact (@lem4915843 (term801 B _61044 t) ((term864 A B f x'' _61044) = _61044)). Qed.
Lemma lem4915846 (a : Prop) : (term197 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem4915847 {B : Type'} (_61044 : B) (t : B -> Prop) : (term894 B _61044 t) = (@IN B _61044 t).
Proof. exact (@lem4915846 (@IN B _61044 t)). Qed.
Lemma lem4915848 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4915849 {B : Type'} (_61044 : B) (t : B -> Prop) : (term895 B _61044 t) = (term729 B _61044 t).
Proof. exact (MK_COMB (@lem4915848) (@lem4915847 B _61044 t)). Qed.
Lemma lem4915850 {A B : Type'} (f : A -> B) (x'' : B -> A) (_61044 : B) : ((term864 A B f x'' _61044) = _61044) = ((term864 A B f x'' _61044) = _61044).
Proof. exact (eq_refl ((term864 A B f x'' _61044) = _61044)). Qed.
Lemma lem4915851 {A B : Type'} (t : B -> Prop) (f : A -> B) (x'' : B -> A) (_61044 : B) : (term893 A B t f x'' _61044) = (term896 A B t f x'' _61044).
Proof. exact (MK_COMB (@lem4915849 B _61044 t) (@lem4915850 A B f x'' _61044)). Qed.
Lemma lem4915852 {A B : Type'} (t : B -> Prop) (f : A -> B) (x'' : B -> A) (_61044 : B) : (term889 A B f x'' _61044 t) = (term896 A B t f x'' _61044).
Proof. exact (TRANS (@lem4915844 A B t f x'' _61044) (@lem4915851 A B t f x'' _61044)). Qed.
Lemma lem4915855 {A B : Type'} (_61044 : B) (t : B -> Prop) (s : A -> Prop) (f : A -> B) (x'' : B -> A) (h1 : term835 A B t s f x'') : term896 A B t f x'' _61044.
Proof. exact (EQ_MP (@lem4915852 A B t f x'' _61044) (@lem4915841 A B _61044 t s f x'' h1)). Qed.
Lemma lem4915856 {A B : Type'} (_61044 : B) (t : B -> Prop) (s : A -> Prop) (f : A -> B) (x'' : B -> A) (h1 : term835 A B t s f x'') : term896 A B t f x'' _61044.
Proof. exact (@lem4915855 A B _61044 t s f x'' h1). Qed.
Lemma lem4915857 {A B : Type'} (x' : B) (t : B -> Prop) (s : A -> Prop) (f : A -> B) (x'' : B -> A) (h1 : term835 A B t s f x'') : term896 A B t f x'' x'.
Proof. exact (@lem4915856 A B x' t s f x'' h1). Qed.
Lemma lem4915860 {A B : Type'} (s : A -> Prop) (f : A -> B) (x'' : B -> A) (x' : B) (t : B -> Prop) (h1 : term835 A B t s f x'') (h2 : @IN B x' t) : (term864 A B f x'' x') = x'.
Proof. exact (@lem4915857 A B x' t s f x'' h1 (@lem4915808 B x' t h2)). Qed.
Lemma lem4915861 {A B : Type'} (s : A -> Prop) (f : A -> B) (x'' : B -> A) (x' : B) (t : B -> Prop) (h1 : term835 A B t s f x'') (h2 : @IN B x' t) : term897 A B f x'' x'.
Proof. exact (fun h0 : term898 A B f x'' x' => @lem4915860 A B s f x'' x' t h1 h2). Qed.
Lemma lem4915863 (p : Prop) : (term888 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem4915864 {A B : Type'} (f : A -> B) (x'' : B -> A) (x' : B) : (term897 A B f x'' x') = ((term864 A B f x'' x') = x').
Proof. exact (@lem4915863 ((term864 A B f x'' x') = x')). Qed.
Lemma lem4915865 {A B : Type'} (s : A -> Prop) (f : A -> B) (x'' : B -> A) (x' : B) (t : B -> Prop) (h1 : term835 A B t s f x'') (h2 : @IN B x' t) : (term864 A B f x'' x') = x'.
Proof. exact (EQ_MP (@lem4915864 A B f x'' x') (@lem4915861 A B s f x'' x' t h1 h2)). Qed.
Lemma lem4915867 {B : Type'} (x : B) : x = x.
Proof. exact (@lem21386 B x). Qed.
Lemma lem4915868 {B : Type'} (x : B) : x = x.
Proof. exact (@lem4915867 B x). Qed.
Lemma lem4915869 {A B : Type'} (f : A -> B) (x'' : B -> A) (x' : B) : (term864 A B f x'' x') = (term864 A B f x'' x').
Proof. exact (@lem4915868 B (term864 A B f x'' x')). Qed.
Lemma lem4915870 {A B : Type'} (f : A -> B) (x'' : B -> A) (x' : B) : term899 A B f x'' x'.
Proof. exact (fun h0 : term900 A B f x'' x' => @lem4915869 A B f x'' x'). Qed.
Lemma lem4915872 (p : Prop) : (term888 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem4915873 {A B : Type'} (f : A -> B) (x'' : B -> A) (x' : B) : (term899 A B f x'' x') = ((term864 A B f x'' x') = (term864 A B f x'' x')).
Proof. exact (@lem4915872 ((term864 A B f x'' x') = (term864 A B f x'' x'))). Qed.
Lemma lem4915874 {A B : Type'} (f : A -> B) (x'' : B -> A) (x' : B) : (term864 A B f x'' x') = (term864 A B f x'' x').
Proof. exact (EQ_MP (@lem4915873 A B f x'' x') (@lem4915870 A B f x'' x')). Qed.
Lemma lem4915892 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem4915893 {B : Type'} (y : B) (x : B) (z : B) : (term901 B x y z) = (term902 B y x z).
Proof. exact (@lem4915892 (y = z) (term688 B x z)). Qed.
Lemma lem4915903 {B : Type'} (x : B) (y : B) : (term903 B x y) = (term903 B x y).
Proof. exact (eq_refl (term903 B x y)). Qed.
Lemma lem4915904 {B : Type'} (y : B) (x : B) (z : B) : (term886 B x y z) = (term904 B y x z).
Proof. exact (MK_COMB (@lem4915903 B x y) (@lem4915893 B y x z)). Qed.
Lemma lem4915908 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem4915909 {B : Type'} (y : B) (x : B) (z : B) : (term904 B y x z) = (term905 B y x z).
Proof. exact (@lem4915908 (y = z) (term688 B x y) (term688 B x z)). Qed.
Lemma lem4915931 {B : Type'} (y : B) (x : B) (z : B) : (term886 B x y z) = (term905 B y x z).
Proof. exact (TRANS (@lem4915904 B y x z) (@lem4915909 B y x z)). Qed.
Lemma lem4915932 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4915933 {B : Type'} (y : B) (x : B) (z : B) : (term906 B x y z) = (term907 B y x z).
Proof. exact (MK_COMB (@lem4915932) (@lem4915931 B y x z)). Qed.
Lemma lem4915955 {B : Type'} (y : B) (x : B) (z : B) : (term905 B y x z) = (term905 B y x z).
Proof. exact (eq_refl (term905 B y x z)). Qed.
Lemma lem4915956 {B : Type'} (y : B) (x : B) (z : B) : ((term886 B x y z) = (term905 B y x z)) = ((term905 B y x z) = (term905 B y x z)).
Proof. exact (MK_COMB (@lem4915933 B y x z) (@lem4915955 B y x z)). Qed.
Lemma lem4915958 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem20665 A x) (@lem20664 A x)). Qed.
Lemma lem4915959 (x : Prop) : (x = x) = True.
Proof. exact (@lem4915958 Prop x). Qed.
Lemma lem4915960 {B : Type'} (y : B) (x : B) (z : B) : ((term905 B y x z) = (term905 B y x z)) = True.
Proof. exact (@lem4915959 (term905 B y x z)). Qed.
Lemma lem4915961 {B : Type'} (y : B) (x : B) (z : B) : ((term886 B x y z) = (term905 B y x z)) = True.
Proof. exact (TRANS (@lem4915956 B y x z) (@lem4915960 B y x z)). Qed.
Lemma lem4915962 {B : Type'} (y : B) (x : B) (z : B) : True = ((term886 B x y z) = (term905 B y x z)).
Proof. exact (SYM (@lem4915961 B y x z)). Qed.
Lemma lem4915963 {B : Type'} (y : B) (x : B) (z : B) : (term886 B x y z) = (term905 B y x z).
Proof. exact (EQ_MP (@lem4915962 B y x z) (@lem0)). Qed.
Lemma lem4915964 {B : Type'} (y : B) (x : B) (z : B) : term905 B y x z.
Proof. exact (EQ_MP (@lem4915963 B y x z) (@lem4915799 B x y z)). Qed.
Lemma lem4915966 (b : Prop) (a : Prop) : (a \/ b) = (term892 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem4915967 {B : Type'} (x : B) (y : B) (z : B) : (term905 B y x z) = (term908 B x y z).
Proof. exact (@lem4915966 (term909 B y x z) (y = z)). Qed.
Lemma lem4915969 (a : Prop) (b : Prop) : (term910 a b) = (term911 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem4915970 {B : Type'} (y : B) (x : B) (z : B) : (term912 B y x z) = (term913 B y x z).
Proof. exact (@lem4915969 (term688 B x y) (term688 B x z)). Qed.
Lemma lem4915972 (a : Prop) : (term197 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem4915973 {B : Type'} (x : B) (y : B) : (term839 B x y) = (x = y).
Proof. exact (@lem4915972 (x = y)). Qed.
Lemma lem4915974 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4915975 {B : Type'} (x : B) (y : B) : (term914 B x y) = (term915 B x y).
Proof. exact (MK_COMB (@lem4915974) (@lem4915973 B x y)). Qed.
Lemma lem4915977 (a : Prop) : (term197 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem4915978 {B : Type'} (x : B) (z : B) : (term839 B x z) = (x = z).
Proof. exact (@lem4915977 (x = z)). Qed.
Lemma lem4915979 {B : Type'} (y : B) (x : B) (z : B) : (term913 B y x z) = (term916 B y x z).
Proof. exact (MK_COMB (@lem4915975 B x y) (@lem4915978 B x z)). Qed.
Lemma lem4915980 {B : Type'} (y : B) (x : B) (z : B) : (term912 B y x z) = (term916 B y x z).
Proof. exact (TRANS (@lem4915970 B y x z) (@lem4915979 B y x z)). Qed.
Lemma lem4915981 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4915982 {B : Type'} (y : B) (x : B) (z : B) : (term917 B y x z) = (term918 B y x z).
Proof. exact (MK_COMB (@lem4915981) (@lem4915980 B y x z)). Qed.
Lemma lem4915983 {B : Type'} (y : B) (z : B) : (y = z) = (y = z).
Proof. exact (eq_refl (y = z)). Qed.
Lemma lem4915984 {B : Type'} (x : B) (y : B) (z : B) : (term908 B x y z) = (term919 B x y z).
Proof. exact (MK_COMB (@lem4915982 B y x z) (@lem4915983 B y z)). Qed.
Lemma lem4915985 {B : Type'} (x : B) (y : B) (z : B) : (term905 B y x z) = (term919 B x y z).
Proof. exact (TRANS (@lem4915967 B x y z) (@lem4915984 B x y z)). Qed.
Lemma lem4915987 {A B : Type'} (s : A -> Prop) (f : A -> B) (x'' : B -> A) (x' : B) (t : B -> Prop) (h1 : term835 A B t s f x'') (h2 : @IN B x' t) : term920 A B f x'' x'.
Proof. exact (conj (@lem4915865 A B s f x'' x' t h1 h2) (@lem4915874 A B f x'' x')). Qed.
Lemma lem4915989 {B : Type'} (x : B) (y : B) (z : B) : term919 B x y z.
Proof. exact (EQ_MP (@lem4915985 B x y z) (@lem4915964 B y x z)). Qed.
Lemma lem4915990 {B : Type'} (x : B) (y : B) (z : B) : term919 B x y z.
Proof. exact (@lem4915989 B x y z). Qed.
Lemma lem4915991 {A B : Type'} (f : A -> B) (x'' : B -> A) (x' : B) : term921 A B f x'' x'.
Proof. exact (@lem4915990 B (term864 A B f x'' x') x' (term864 A B f x'' x')). Qed.
Lemma lem4915994 {A B : Type'} (s : A -> Prop) (f : A -> B) (x'' : B -> A) (x' : B) (t : B -> Prop) (h1 : term835 A B t s f x'') (h2 : @IN B x' t) : x' = (term864 A B f x'' x').
Proof. exact (@lem4915991 A B f x'' x' (@lem4915987 A B s f x'' x' t h1 h2)). Qed.
Lemma lem4915995 {A B : Type'} (s : A -> Prop) (f : A -> B) (x'' : B -> A) (x' : B) (t : B -> Prop) (h1 : term835 A B t s f x'') (h2 : @IN B x' t) : term922 A B f x'' x'.
Proof. exact (fun h0 : term923 A B f x'' x' => @lem4915994 A B s f x'' x' t h1 h2). Qed.
Lemma lem4915997 (p : Prop) : (term888 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem4915998 {A B : Type'} (f : A -> B) (x'' : B -> A) (x' : B) : (term922 A B f x'' x') = (x' = (term864 A B f x'' x')).
Proof. exact (@lem4915997 (x' = (term864 A B f x'' x'))). Qed.
Lemma lem4915999 {A B : Type'} (s : A -> Prop) (f : A -> B) (x'' : B -> A) (x' : B) (t : B -> Prop) (h1 : term835 A B t s f x'') (h2 : @IN B x' t) : x' = (term864 A B f x'' x').
Proof. exact (EQ_MP (@lem4915998 A B f x'' x') (@lem4915995 A B s f x'' x' t h1 h2)). Qed.
Lemma lem4916001 {B : Type'} (x' : B) (t : B -> Prop) (h1 : @IN B x' t) : @IN B x' t.
Proof. exact (h1). Qed.
Lemma lem4916002 {B : Type'} (x' : B) (t : B -> Prop) (h1 : @IN B x' t) : term887 B x' t.
Proof. exact (fun h0 : term801 B x' t => @lem4916001 B x' t h1). Qed.
Lemma lem4916004 (p : Prop) : (term888 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem4916005 {B : Type'} (x' : B) (t : B -> Prop) : (term887 B x' t) = (@IN B x' t).
Proof. exact (@lem4916004 (@IN B x' t)). Qed.
Lemma lem4916006 {B : Type'} (x' : B) (t : B -> Prop) (h1 : @IN B x' t) : @IN B x' t.
Proof. exact (EQ_MP (@lem4916005 B x' t) (@lem4916002 B x' t h1)). Qed.
Lemma lem4916012 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem4916013 {A B : Type'} (x'' : B -> A) (s : A -> Prop) (_61044 : B) (t : B -> Prop) : (term879 A B t x'' _61044 s) = (term924 A B x'' s _61044 t).
Proof. exact (@lem4916012 (term874 A B x'' _61044 s) (term801 B _61044 t)). Qed.
Lemma lem4916019 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4916020 {A B : Type'} (x'' : B -> A) (s : A -> Prop) (_61044 : B) (t : B -> Prop) : (term925 A B t x'' _61044 s) = (term926 A B x'' s _61044 t).
Proof. exact (MK_COMB (@lem4916019) (@lem4916013 A B x'' s _61044 t)). Qed.
Lemma lem4916026 {A B : Type'} (x'' : B -> A) (s : A -> Prop) (_61044 : B) (t : B -> Prop) : (term924 A B x'' s _61044 t) = (term924 A B x'' s _61044 t).
Proof. exact (eq_refl (term924 A B x'' s _61044 t)). Qed.
Lemma lem4916027 {A B : Type'} (x'' : B -> A) (s : A -> Prop) (_61044 : B) (t : B -> Prop) : ((term879 A B t x'' _61044 s) = (term924 A B x'' s _61044 t)) = ((term924 A B x'' s _61044 t) = (term924 A B x'' s _61044 t)).
Proof. exact (MK_COMB (@lem4916020 A B x'' s _61044 t) (@lem4916026 A B x'' s _61044 t)). Qed.
Lemma lem4916029 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem20665 A x) (@lem20664 A x)). Qed.
Lemma lem4916030 (x : Prop) : (x = x) = True.
Proof. exact (@lem4916029 Prop x). Qed.
Lemma lem4916031 {A B : Type'} (x'' : B -> A) (s : A -> Prop) (_61044 : B) (t : B -> Prop) : ((term924 A B x'' s _61044 t) = (term924 A B x'' s _61044 t)) = True.
Proof. exact (@lem4916030 (term924 A B x'' s _61044 t)). Qed.
Lemma lem4916032 {A B : Type'} (x'' : B -> A) (s : A -> Prop) (_61044 : B) (t : B -> Prop) : ((term879 A B t x'' _61044 s) = (term924 A B x'' s _61044 t)) = True.
Proof. exact (TRANS (@lem4916027 A B x'' s _61044 t) (@lem4916031 A B x'' s _61044 t)). Qed.
Lemma lem4916033 {A B : Type'} (x'' : B -> A) (s : A -> Prop) (_61044 : B) (t : B -> Prop) : True = ((term879 A B t x'' _61044 s) = (term924 A B x'' s _61044 t)).
Proof. exact (SYM (@lem4916032 A B x'' s _61044 t)). Qed.
Lemma lem4916034 {A B : Type'} (x'' : B -> A) (s : A -> Prop) (_61044 : B) (t : B -> Prop) : (term879 A B t x'' _61044 s) = (term924 A B x'' s _61044 t).
Proof. exact (EQ_MP (@lem4916033 A B x'' s _61044 t) (@lem0)). Qed.
Lemma lem4916035 {A B : Type'} (_61044 : B) (t : B -> Prop) (s : A -> Prop) (f : A -> B) (x'' : B -> A) (h1 : term835 A B t s f x'') : term924 A B x'' s _61044 t.
Proof. exact (EQ_MP (@lem4916034 A B x'' s _61044 t) (@lem4915648 A B _61044 t s f x'' h1)). Qed.
Lemma lem4916037 (b : Prop) (a : Prop) : (a \/ b) = (term892 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem4916038 {A B : Type'} (t : B -> Prop) (x'' : B -> A) (_61044 : B) (s : A -> Prop) : (term924 A B x'' s _61044 t) = (term927 A B t x'' _61044 s).
Proof. exact (@lem4916037 (term801 B _61044 t) (term874 A B x'' _61044 s)). Qed.
Lemma lem4916040 (a : Prop) : (term197 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem4916041 {B : Type'} (_61044 : B) (t : B -> Prop) : (term894 B _61044 t) = (@IN B _61044 t).
Proof. exact (@lem4916040 (@IN B _61044 t)). Qed.
Lemma lem4916042 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4916043 {B : Type'} (_61044 : B) (t : B -> Prop) : (term895 B _61044 t) = (term729 B _61044 t).
Proof. exact (MK_COMB (@lem4916042) (@lem4916041 B _61044 t)). Qed.
Lemma lem4916044 {A B : Type'} (x'' : B -> A) (_61044 : B) (s : A -> Prop) : (term874 A B x'' _61044 s) = (term874 A B x'' _61044 s).
Proof. exact (eq_refl (term874 A B x'' _61044 s)). Qed.
Lemma lem4916045 {A B : Type'} (t : B -> Prop) (x'' : B -> A) (_61044 : B) (s : A -> Prop) : (term927 A B t x'' _61044 s) = (term928 A B t x'' _61044 s).
Proof. exact (MK_COMB (@lem4916043 B _61044 t) (@lem4916044 A B x'' _61044 s)). Qed.
Lemma lem4916046 {A B : Type'} (t : B -> Prop) (x'' : B -> A) (_61044 : B) (s : A -> Prop) : (term924 A B x'' s _61044 t) = (term928 A B t x'' _61044 s).
Proof. exact (TRANS (@lem4916038 A B t x'' _61044 s) (@lem4916045 A B t x'' _61044 s)). Qed.
Lemma lem4916049 {A B : Type'} (_61044 : B) (t : B -> Prop) (s : A -> Prop) (f : A -> B) (x'' : B -> A) (h1 : term835 A B t s f x'') : term928 A B t x'' _61044 s.
Proof. exact (EQ_MP (@lem4916046 A B t x'' _61044 s) (@lem4916035 A B _61044 t s f x'' h1)). Qed.
Lemma lem4916050 {A B : Type'} (_61044 : B) (t : B -> Prop) (s : A -> Prop) (f : A -> B) (x'' : B -> A) (h1 : term835 A B t s f x'') : term928 A B t x'' _61044 s.
Proof. exact (@lem4916049 A B _61044 t s f x'' h1). Qed.
Lemma lem4916051 {A B : Type'} (x' : B) (t : B -> Prop) (s : A -> Prop) (f : A -> B) (x'' : B -> A) (h1 : term835 A B t s f x'') : term928 A B t x'' x' s.
Proof. exact (@lem4916050 A B x' t s f x'' h1). Qed.
Lemma lem4916054 {A B : Type'} (s : A -> Prop) (f : A -> B) (x'' : B -> A) (x' : B) (t : B -> Prop) (h1 : term835 A B t s f x'') (h2 : @IN B x' t) : term874 A B x'' x' s.
Proof. exact (@lem4916051 A B x' t s f x'' h1 (@lem4916006 B x' t h2)). Qed.
Lemma lem4916055 {A B : Type'} (s : A -> Prop) (f : A -> B) (x'' : B -> A) (x' : B) (t : B -> Prop) (h1 : term835 A B t s f x'') (h2 : @IN B x' t) : term929 A B x'' x' s.
Proof. exact (fun h0 : term930 A B x'' x' s => @lem4916054 A B s f x'' x' t h1 h2). Qed.
Lemma lem4916057 (p : Prop) : (term888 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem4916058 {A B : Type'} (x'' : B -> A) (x' : B) (s : A -> Prop) : (term929 A B x'' x' s) = (term874 A B x'' x' s).
Proof. exact (@lem4916057 (term874 A B x'' x' s)). Qed.
Lemma lem4916059 {A B : Type'} (s : A -> Prop) (f : A -> B) (x'' : B -> A) (x' : B) (t : B -> Prop) (h1 : term835 A B t s f x'') (h2 : @IN B x' t) : term874 A B x'' x' s.
Proof. exact (EQ_MP (@lem4916058 A B x'' x' s) (@lem4916055 A B s f x'' x' t h1 h2)). Qed.
Lemma lem4916077 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem4916078 {A : Type'} (y : A) (_61043 : A) (s : A -> Prop) : (term841 A s _61043 y) = (term931 A y _61043 s).
Proof. exact (@lem4916077 (_61043 = y) (term801 A _61043 s)). Qed.
Lemma lem4916086 {A B : Type'} (x' : B) (f : A -> B) (_61043 : A) : (term859 A B x' f _61043) = (term859 A B x' f _61043).
Proof. exact (eq_refl (term859 A B x' f _61043)). Qed.
Lemma lem4916087 {A B : Type'} (x' : B) (f : A -> B) (y : A) (_61043 : A) (s : A -> Prop) : (term860 A B x' f s _61043 y) = (term932 A B x' f y _61043 s).
Proof. exact (MK_COMB (@lem4916086 A B x' f _61043) (@lem4916078 A y _61043 s)). Qed.
Lemma lem4916091 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem4916092 {A B : Type'} (y : A) (x' : B) (f : A -> B) (_61043 : A) (s : A -> Prop) : (term932 A B x' f y _61043 s) = (term933 A B y x' f _61043 s).
Proof. exact (@lem4916091 (_61043 = y) (term858 A B x' f _61043) (term801 A _61043 s)). Qed.
Lemma lem4916112 {A B : Type'} (y : A) (x' : B) (f : A -> B) (_61043 : A) (s : A -> Prop) : (term860 A B x' f s _61043 y) = (term933 A B y x' f _61043 s).
Proof. exact (TRANS (@lem4916087 A B x' f y _61043 s) (@lem4916092 A B y x' f _61043 s)). Qed.
Lemma lem4916113 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4916114 {A B : Type'} (y : A) (x' : B) (f : A -> B) (_61043 : A) (s : A -> Prop) : (term934 A B x' f s _61043 y) = (term935 A B y x' f _61043 s).
Proof. exact (MK_COMB (@lem4916113) (@lem4916112 A B y x' f _61043 s)). Qed.
Lemma lem4916134 {A B : Type'} (y : A) (x' : B) (f : A -> B) (_61043 : A) (s : A -> Prop) : (term933 A B y x' f _61043 s) = (term933 A B y x' f _61043 s).
Proof. exact (eq_refl (term933 A B y x' f _61043 s)). Qed.
Lemma lem4916135 {A B : Type'} (y : A) (x' : B) (f : A -> B) (_61043 : A) (s : A -> Prop) : ((term860 A B x' f s _61043 y) = (term933 A B y x' f _61043 s)) = ((term933 A B y x' f _61043 s) = (term933 A B y x' f _61043 s)).
Proof. exact (MK_COMB (@lem4916114 A B y x' f _61043 s) (@lem4916134 A B y x' f _61043 s)). Qed.
Lemma lem4916137 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem20665 A x) (@lem20664 A x)). Qed.
Lemma lem4916138 (x : Prop) : (x = x) = True.
Proof. exact (@lem4916137 Prop x). Qed.
Lemma lem4916139 {A B : Type'} (y : A) (x' : B) (f : A -> B) (_61043 : A) (s : A -> Prop) : ((term933 A B y x' f _61043 s) = (term933 A B y x' f _61043 s)) = True.
Proof. exact (@lem4916138 (term933 A B y x' f _61043 s)). Qed.
Lemma lem4916140 {A B : Type'} (y : A) (x' : B) (f : A -> B) (_61043 : A) (s : A -> Prop) : ((term860 A B x' f s _61043 y) = (term933 A B y x' f _61043 s)) = True.
Proof. exact (TRANS (@lem4916135 A B y x' f _61043 s) (@lem4916139 A B y x' f _61043 s)). Qed.
Lemma lem4916141 {A B : Type'} (y : A) (x' : B) (f : A -> B) (_61043 : A) (s : A -> Prop) : True = ((term860 A B x' f s _61043 y) = (term933 A B y x' f _61043 s)).
Proof. exact (SYM (@lem4916140 A B y x' f _61043 s)). Qed.
Lemma lem4916142 {A B : Type'} (y : A) (x' : B) (f : A -> B) (_61043 : A) (s : A -> Prop) : (term860 A B x' f s _61043 y) = (term933 A B y x' f _61043 s).
Proof. exact (EQ_MP (@lem4916141 A B y x' f _61043 s) (@lem0)). Qed.
Lemma lem4916143 {A B : Type'} (_61043 : A) (x' : B) (f : A -> B) (s : A -> Prop) (y : A) (h1 : term792 A B x' f s y) : term933 A B y x' f _61043 s.
Proof. exact (EQ_MP (@lem4916142 A B y x' f _61043 s) (@lem4915642 A B _61043 x' f s y h1)). Qed.
Lemma lem4916145 (b : Prop) (a : Prop) : (a \/ b) = (term892 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem4916146 {A B : Type'} (x' : B) (f : A -> B) (s : A -> Prop) (_61043 : A) (y : A) : (term933 A B y x' f _61043 s) = (term936 A B x' f s _61043 y).
Proof. exact (@lem4916145 (term937 A B x' f _61043 s) (_61043 = y)). Qed.
Lemma lem4916148 (a : Prop) (b : Prop) : (term910 a b) = (term911 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem4916149 {A B : Type'} (x' : B) (f : A -> B) (_61043 : A) (s : A -> Prop) : (term938 A B x' f _61043 s) = (term939 A B x' f _61043 s).
Proof. exact (@lem4916148 (term858 A B x' f _61043) (term801 A _61043 s)). Qed.
Lemma lem4916151 (a : Prop) : (term197 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem4916152 {A B : Type'} (x' : B) (f : A -> B) (_61043 : A) : (term940 A B x' f _61043) = (x' = (@I (A -> B) f _61043)).
Proof. exact (@lem4916151 (x' = (@I (A -> B) f _61043))). Qed.
Lemma lem4916153 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4916154 {A B : Type'} (x' : B) (f : A -> B) (_61043 : A) : (term941 A B x' f _61043) = (term942 A B x' f _61043).
Proof. exact (MK_COMB (@lem4916153) (@lem4916152 A B x' f _61043)). Qed.
Lemma lem4916156 (a : Prop) : (term197 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem4916157 {A : Type'} (_61043 : A) (s : A -> Prop) : (term894 A _61043 s) = (@IN A _61043 s).
Proof. exact (@lem4916156 (@IN A _61043 s)). Qed.
Lemma lem4916158 {A B : Type'} (x' : B) (f : A -> B) (_61043 : A) (s : A -> Prop) : (term939 A B x' f _61043 s) = (term943 A B x' f _61043 s).
Proof. exact (MK_COMB (@lem4916154 A B x' f _61043) (@lem4916157 A _61043 s)). Qed.
Lemma lem4916159 {A B : Type'} (x' : B) (f : A -> B) (_61043 : A) (s : A -> Prop) : (term938 A B x' f _61043 s) = (term943 A B x' f _61043 s).
Proof. exact (TRANS (@lem4916149 A B x' f _61043 s) (@lem4916158 A B x' f _61043 s)). Qed.
Lemma lem4916160 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4916161 {A B : Type'} (x' : B) (f : A -> B) (_61043 : A) (s : A -> Prop) : (term944 A B x' f _61043 s) = (term945 A B x' f _61043 s).
Proof. exact (MK_COMB (@lem4916160) (@lem4916159 A B x' f _61043 s)). Qed.
Lemma lem4916162 {A : Type'} (_61043 : A) (y : A) : (_61043 = y) = (_61043 = y).
Proof. exact (eq_refl (_61043 = y)). Qed.
Lemma lem4916163 {A B : Type'} (x' : B) (f : A -> B) (s : A -> Prop) (_61043 : A) (y : A) : (term936 A B x' f s _61043 y) = (term946 A B x' f s _61043 y).
Proof. exact (MK_COMB (@lem4916161 A B x' f _61043 s) (@lem4916162 A _61043 y)). Qed.
Lemma lem4916164 {A B : Type'} (x' : B) (f : A -> B) (s : A -> Prop) (_61043 : A) (y : A) : (term933 A B y x' f _61043 s) = (term946 A B x' f s _61043 y).
Proof. exact (TRANS (@lem4916146 A B x' f s _61043 y) (@lem4916163 A B x' f s _61043 y)). Qed.
Lemma lem4916166 {A B : Type'} (s : A -> Prop) (f : A -> B) (x'' : B -> A) (x' : B) (t : B -> Prop) (h1 : term835 A B t s f x'') (h2 : @IN B x' t) : term947 A B f x'' x' s.
Proof. exact (conj (@lem4915999 A B s f x'' x' t h1 h2) (@lem4916059 A B s f x'' x' t h1 h2)). Qed.
Lemma lem4916168 {A B : Type'} (_61043 : A) (x' : B) (f : A -> B) (s : A -> Prop) (y : A) (h1 : term792 A B x' f s y) : term946 A B x' f s _61043 y.
Proof. exact (EQ_MP (@lem4916164 A B x' f s _61043 y) (@lem4916143 A B _61043 x' f s y h1)). Qed.
Lemma lem4916169 {A B : Type'} (_61043 : A) (x' : B) (f : A -> B) (s : A -> Prop) (y : A) (h1 : term792 A B x' f s y) : term946 A B x' f s _61043 y.
Proof. exact (@lem4916168 A B _61043 x' f s y h1). Qed.
Lemma lem4916170 {A B : Type'} (x'' : B -> A) (x' : B) (f : A -> B) (s : A -> Prop) (y : A) (h1 : term792 A B x' f s y) : term948 A B f s x'' x' y.
Proof. exact (@lem4916169 A B (x'' x') x' f s y h1). Qed.
Lemma lem4916173 {A B : Type'} (x'' : B -> A) (f : A -> B) (s : A -> Prop) (y : A) (x' : B) (t : B -> Prop) (h1 : term835 A B t s f x'') (h2 : term792 A B x' f s y) (h3 : @IN B x' t) : (x'' x') = y.
Proof. exact (@lem4916170 A B x'' x' f s y h2 (@lem4916166 A B s f x'' x' t h1 h3)). Qed.
Lemma lem4916174 {A B : Type'} (x'' : B -> A) (f : A -> B) (s : A -> Prop) (y : A) (x' : B) (t : B -> Prop) (h1 : term835 A B t s f x'') (h2 : term792 A B x' f s y) (h3 : @IN B x' t) : term949 A B x'' x' y.
Proof. exact (fun h0 : term950 A B x'' x' y => @lem4916173 A B x'' f s y x' t h1 h2 h3). Qed.
Lemma lem4916176 (p : Prop) : (term888 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem4916177 {A B : Type'} (x'' : B -> A) (x' : B) (y : A) : (term949 A B x'' x' y) = ((x'' x') = y).
Proof. exact (@lem4916176 ((x'' x') = y)). Qed.
Lemma lem4916178 {A B : Type'} (x'' : B -> A) (f : A -> B) (s : A -> Prop) (y : A) (x' : B) (t : B -> Prop) (h1 : term835 A B t s f x'') (h2 : term792 A B x' f s y) (h3 : @IN B x' t) : (x'' x') = y.
Proof. exact (EQ_MP (@lem4916177 A B x'' x' y) (@lem4916174 A B x'' f s y x' t h1 h2 h3)). Qed.
Lemma lem4916180 {A B : Type'} (x : A -> B) : x = x.
Proof. exact (@lem21386 (A -> B) x). Qed.
Lemma lem4916181 {A B : Type'} (x : A -> B) : x = x.
Proof. exact (@lem4916180 A B x). Qed.
Lemma lem4916182 {A B : Type'} (f : A -> B) : f = f.
Proof. exact (@lem4916181 A B f). Qed.
Lemma lem4916183 {A B : Type'} (f : A -> B) : term951 A B f.
Proof. exact (fun h0 : term952 A B f => @lem4916182 A B f). Qed.
Lemma lem4916185 (p : Prop) : (term888 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem4916186 {A B : Type'} (f : A -> B) : (term951 A B f) = (f = f).
Proof. exact (@lem4916185 (f = f)). Qed.
Lemma lem4916187 {A B : Type'} (f : A -> B) : f = f.
Proof. exact (EQ_MP (@lem4916186 A B f) (@lem4916183 A B f)). Qed.
Lemma lem4916205 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem4916206 {A B : Type'} (_61064 : A) (_61066 : A) (_61063 : A -> B) (_61065 : A -> B) : (term883 A B _61063 _61064 _61065 _61066) = (term953 A B _61064 _61066 _61063 _61065).
Proof. exact (@lem4916205 ((@I (A -> B) _61063 _61064) = (@I (A -> B) _61065 _61066)) (term954 A B _61063 _61065)). Qed.
Lemma lem4916216 {A : Type'} (_61064 : A) (_61066 : A) : (term903 A _61064 _61066) = (term903 A _61064 _61066).
Proof. exact (eq_refl (term903 A _61064 _61066)). Qed.
Lemma lem4916217 {A B : Type'} (_61064 : A) (_61066 : A) (_61063 : A -> B) (_61065 : A -> B) : (term885 A B _61063 _61064 _61065 _61066) = (term955 A B _61064 _61066 _61063 _61065).
Proof. exact (MK_COMB (@lem4916216 A _61064 _61066) (@lem4916206 A B _61064 _61066 _61063 _61065)). Qed.
Lemma lem4916221 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem4916222 {A B : Type'} (_61064 : A) (_61066 : A) (_61063 : A -> B) (_61065 : A -> B) : (term955 A B _61064 _61066 _61063 _61065) = (term956 A B _61064 _61066 _61063 _61065).
Proof. exact (@lem4916221 ((@I (A -> B) _61063 _61064) = (@I (A -> B) _61065 _61066)) (term688 A _61064 _61066) (term954 A B _61063 _61065)). Qed.
Lemma lem4916244 {A B : Type'} (_61064 : A) (_61066 : A) (_61063 : A -> B) (_61065 : A -> B) : (term885 A B _61063 _61064 _61065 _61066) = (term956 A B _61064 _61066 _61063 _61065).
Proof. exact (TRANS (@lem4916217 A B _61064 _61066 _61063 _61065) (@lem4916222 A B _61064 _61066 _61063 _61065)). Qed.
Lemma lem4916245 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4916246 {A B : Type'} (_61064 : A) (_61066 : A) (_61063 : A -> B) (_61065 : A -> B) : (term957 A B _61063 _61064 _61065 _61066) = (term958 A B _61064 _61066 _61063 _61065).
Proof. exact (MK_COMB (@lem4916245) (@lem4916244 A B _61064 _61066 _61063 _61065)). Qed.
Lemma lem4916268 {A B : Type'} (_61064 : A) (_61066 : A) (_61063 : A -> B) (_61065 : A -> B) : (term956 A B _61064 _61066 _61063 _61065) = (term956 A B _61064 _61066 _61063 _61065).
Proof. exact (eq_refl (term956 A B _61064 _61066 _61063 _61065)). Qed.
Lemma lem4916269 {A B : Type'} (_61064 : A) (_61066 : A) (_61063 : A -> B) (_61065 : A -> B) : ((term885 A B _61063 _61064 _61065 _61066) = (term956 A B _61064 _61066 _61063 _61065)) = ((term956 A B _61064 _61066 _61063 _61065) = (term956 A B _61064 _61066 _61063 _61065)).
Proof. exact (MK_COMB (@lem4916246 A B _61064 _61066 _61063 _61065) (@lem4916268 A B _61064 _61066 _61063 _61065)). Qed.
Lemma lem4916271 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem20665 A x) (@lem20664 A x)). Qed.
Lemma lem4916272 (x : Prop) : (x = x) = True.
Proof. exact (@lem4916271 Prop x). Qed.
Lemma lem4916273 {A B : Type'} (_61064 : A) (_61066 : A) (_61063 : A -> B) (_61065 : A -> B) : ((term956 A B _61064 _61066 _61063 _61065) = (term956 A B _61064 _61066 _61063 _61065)) = True.
Proof. exact (@lem4916272 (term956 A B _61064 _61066 _61063 _61065)). Qed.
Lemma lem4916274 {A B : Type'} (_61064 : A) (_61066 : A) (_61063 : A -> B) (_61065 : A -> B) : ((term885 A B _61063 _61064 _61065 _61066) = (term956 A B _61064 _61066 _61063 _61065)) = True.
Proof. exact (TRANS (@lem4916269 A B _61064 _61066 _61063 _61065) (@lem4916273 A B _61064 _61066 _61063 _61065)). Qed.
Lemma lem4916275 {A B : Type'} (_61064 : A) (_61066 : A) (_61063 : A -> B) (_61065 : A -> B) : True = ((term885 A B _61063 _61064 _61065 _61066) = (term956 A B _61064 _61066 _61063 _61065)).
Proof. exact (SYM (@lem4916274 A B _61064 _61066 _61063 _61065)). Qed.
Lemma lem4916276 {A B : Type'} (_61064 : A) (_61066 : A) (_61063 : A -> B) (_61065 : A -> B) : (term885 A B _61063 _61064 _61065 _61066) = (term956 A B _61064 _61066 _61063 _61065).
Proof. exact (EQ_MP (@lem4916275 A B _61064 _61066 _61063 _61065) (@lem0)). Qed.
Lemma lem4916277 {A B : Type'} (_61064 : A) (_61066 : A) (_61063 : A -> B) (_61065 : A -> B) : term956 A B _61064 _61066 _61063 _61065.
Proof. exact (EQ_MP (@lem4916276 A B _61064 _61066 _61063 _61065) (@lem4915758 A B _61063 _61064 _61065 _61066)). Qed.
Lemma lem4916279 (b : Prop) (a : Prop) : (a \/ b) = (term892 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem4916280 {A B : Type'} (_61063 : A -> B) (_61064 : A) (_61065 : A -> B) (_61066 : A) : (term956 A B _61064 _61066 _61063 _61065) = (term959 A B _61063 _61064 _61065 _61066).
Proof. exact (@lem4916279 (term960 A B _61064 _61066 _61063 _61065) ((@I (A -> B) _61063 _61064) = (@I (A -> B) _61065 _61066))). Qed.
Lemma lem4916282 (a : Prop) (b : Prop) : (term910 a b) = (term911 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem4916283 {A B : Type'} (_61064 : A) (_61066 : A) (_61063 : A -> B) (_61065 : A -> B) : (term961 A B _61064 _61066 _61063 _61065) = (term962 A B _61064 _61066 _61063 _61065).
Proof. exact (@lem4916282 (term688 A _61064 _61066) (term954 A B _61063 _61065)). Qed.
Lemma lem4916285 (a : Prop) : (term197 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem4916286 {A : Type'} (_61064 : A) (_61066 : A) : (term839 A _61064 _61066) = (_61064 = _61066).
Proof. exact (@lem4916285 (_61064 = _61066)). Qed.
Lemma lem4916287 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4916288 {A : Type'} (_61064 : A) (_61066 : A) : (term914 A _61064 _61066) = (term915 A _61064 _61066).
Proof. exact (MK_COMB (@lem4916287) (@lem4916286 A _61064 _61066)). Qed.
Lemma lem4916290 (a : Prop) : (term197 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem4916291 {A B : Type'} (_61063 : A -> B) (_61065 : A -> B) : (term963 A B _61063 _61065) = (_61063 = _61065).
Proof. exact (@lem4916290 (_61063 = _61065)). Qed.
Lemma lem4916292 {A B : Type'} (_61064 : A) (_61066 : A) (_61063 : A -> B) (_61065 : A -> B) : (term962 A B _61064 _61066 _61063 _61065) = (term964 A B _61064 _61066 _61063 _61065).
Proof. exact (MK_COMB (@lem4916288 A _61064 _61066) (@lem4916291 A B _61063 _61065)). Qed.
Lemma lem4916293 {A B : Type'} (_61064 : A) (_61066 : A) (_61063 : A -> B) (_61065 : A -> B) : (term961 A B _61064 _61066 _61063 _61065) = (term964 A B _61064 _61066 _61063 _61065).
Proof. exact (TRANS (@lem4916283 A B _61064 _61066 _61063 _61065) (@lem4916292 A B _61064 _61066 _61063 _61065)). Qed.
Lemma lem4916294 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4916295 {A B : Type'} (_61064 : A) (_61066 : A) (_61063 : A -> B) (_61065 : A -> B) : (term965 A B _61064 _61066 _61063 _61065) = (term966 A B _61064 _61066 _61063 _61065).
Proof. exact (MK_COMB (@lem4916294) (@lem4916293 A B _61064 _61066 _61063 _61065)). Qed.
Lemma lem4916296 {A B : Type'} (_61063 : A -> B) (_61064 : A) (_61065 : A -> B) (_61066 : A) : ((@I (A -> B) _61063 _61064) = (@I (A -> B) _61065 _61066)) = ((@I (A -> B) _61063 _61064) = (@I (A -> B) _61065 _61066)).
Proof. exact (eq_refl ((@I (A -> B) _61063 _61064) = (@I (A -> B) _61065 _61066))). Qed.
Lemma lem4916297 {A B : Type'} (_61063 : A -> B) (_61064 : A) (_61065 : A -> B) (_61066 : A) : (term959 A B _61063 _61064 _61065 _61066) = (term967 A B _61063 _61064 _61065 _61066).
Proof. exact (MK_COMB (@lem4916295 A B _61064 _61066 _61063 _61065) (@lem4916296 A B _61063 _61064 _61065 _61066)). Qed.
Lemma lem4916298 {A B : Type'} (_61063 : A -> B) (_61064 : A) (_61065 : A -> B) (_61066 : A) : (term956 A B _61064 _61066 _61063 _61065) = (term967 A B _61063 _61064 _61065 _61066).
Proof. exact (TRANS (@lem4916280 A B _61063 _61064 _61065 _61066) (@lem4916297 A B _61063 _61064 _61065 _61066)). Qed.
Lemma lem4916300 {A B : Type'} (x'' : B -> A) (f : A -> B) (s : A -> Prop) (y : A) (x' : B) (t : B -> Prop) (h1 : term835 A B t s f x'') (h2 : term792 A B x' f s y) (h3 : @IN B x' t) : term968 A B x'' x' y f.
Proof. exact (conj (@lem4916178 A B x'' f s y x' t h1 h2 h3) (@lem4916187 A B f)). Qed.
Lemma lem4916302 {A B : Type'} (_61063 : A -> B) (_61064 : A) (_61065 : A -> B) (_61066 : A) : term967 A B _61063 _61064 _61065 _61066.
Proof. exact (EQ_MP (@lem4916298 A B _61063 _61064 _61065 _61066) (@lem4916277 A B _61064 _61066 _61063 _61065)). Qed.
Lemma lem4916303 {A B : Type'} (_61063 : A -> B) (_61064 : A) (_61065 : A -> B) (_61066 : A) : term967 A B _61063 _61064 _61065 _61066.
Proof. exact (@lem4916302 A B _61063 _61064 _61065 _61066). Qed.
Lemma lem4916304 {A B : Type'} (x'' : B -> A) (x' : B) (f : A -> B) (y : A) : term969 A B x'' x' f y.
Proof. exact (@lem4916303 A B f (x'' x') f y). Qed.
Lemma lem4916307 {A B : Type'} (x'' : B -> A) (f : A -> B) (s : A -> Prop) (y : A) (x' : B) (t : B -> Prop) (h1 : term835 A B t s f x'') (h2 : term792 A B x' f s y) (h3 : @IN B x' t) : (term864 A B f x'' x') = (@I (A -> B) f y).
Proof. exact (@lem4916304 A B x'' x' f y (@lem4916300 A B x'' f s y x' t h1 h2 h3)). Qed.
Lemma lem4916308 {A B : Type'} (x'' : B -> A) (f : A -> B) (s : A -> Prop) (y : A) (x' : B) (t : B -> Prop) (h1 : term835 A B t s f x'') (h2 : term792 A B x' f s y) (h3 : @IN B x' t) : term970 A B x'' x' f y.
Proof. exact (fun h0 : term971 A B x'' x' f y => @lem4916307 A B x'' f s y x' t h1 h2 h3). Qed.
Lemma lem4916310 (p : Prop) : (term888 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem4916311 {A B : Type'} (x'' : B -> A) (x' : B) (f : A -> B) (y : A) : (term970 A B x'' x' f y) = ((term864 A B f x'' x') = (@I (A -> B) f y)).
Proof. exact (@lem4916310 ((term864 A B f x'' x') = (@I (A -> B) f y))). Qed.
Lemma lem4916312 {A B : Type'} (x'' : B -> A) (f : A -> B) (s : A -> Prop) (y : A) (x' : B) (t : B -> Prop) (h1 : term835 A B t s f x'') (h2 : term792 A B x' f s y) (h3 : @IN B x' t) : (term864 A B f x'' x') = (@I (A -> B) f y).
Proof. exact (EQ_MP (@lem4916311 A B x'' x' f y) (@lem4916308 A B x'' f s y x' t h1 h2 h3)). Qed.
Lemma lem4916314 {B : Type'} (x' : B) (t : B -> Prop) (h1 : @IN B x' t) : @IN B x' t.
Proof. exact (h1). Qed.
Lemma lem4916315 {B : Type'} (x' : B) (t : B -> Prop) (h1 : @IN B x' t) : term887 B x' t.
Proof. exact (fun h0 : term801 B x' t => @lem4916314 B x' t h1). Qed.
Lemma lem4916317 (p : Prop) : (term888 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem4916318 {B : Type'} (x' : B) (t : B -> Prop) : (term887 B x' t) = (@IN B x' t).
Proof. exact (@lem4916317 (@IN B x' t)). Qed.
Lemma lem4916319 {B : Type'} (x' : B) (t : B -> Prop) (h1 : @IN B x' t) : @IN B x' t.
Proof. exact (EQ_MP (@lem4916318 B x' t) (@lem4916315 B x' t h1)). Qed.
Lemma lem4916321 {A B : Type'} (_61044 : B) (t : B -> Prop) (s : A -> Prop) (f : A -> B) (x'' : B -> A) (h1 : term835 A B t s f x'') : term896 A B t f x'' _61044.
Proof. exact (EQ_MP (@lem4915852 A B t f x'' _61044) (@lem4915841 A B _61044 t s f x'' h1)). Qed.
Lemma lem4916322 {A B : Type'} (_61044 : B) (t : B -> Prop) (s : A -> Prop) (f : A -> B) (x'' : B -> A) (h1 : term835 A B t s f x'') : term896 A B t f x'' _61044.
Proof. exact (@lem4916321 A B _61044 t s f x'' h1). Qed.
Lemma lem4916323 {A B : Type'} (x' : B) (t : B -> Prop) (s : A -> Prop) (f : A -> B) (x'' : B -> A) (h1 : term835 A B t s f x'') : term896 A B t f x'' x'.
Proof. exact (@lem4916322 A B x' t s f x'' h1). Qed.
Lemma lem4916326 {A B : Type'} (s : A -> Prop) (f : A -> B) (x'' : B -> A) (x' : B) (t : B -> Prop) (h1 : term835 A B t s f x'') (h2 : @IN B x' t) : (term864 A B f x'' x') = x'.
Proof. exact (@lem4916323 A B x' t s f x'' h1 (@lem4916319 B x' t h2)). Qed.
Lemma lem4916327 {A B : Type'} (s : A -> Prop) (f : A -> B) (x'' : B -> A) (x' : B) (t : B -> Prop) (h1 : term835 A B t s f x'') (h2 : @IN B x' t) : term897 A B f x'' x'.
Proof. exact (fun h0 : term898 A B f x'' x' => @lem4916326 A B s f x'' x' t h1 h2). Qed.
Lemma lem4916329 (p : Prop) : (term888 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem4916330 {A B : Type'} (f : A -> B) (x'' : B -> A) (x' : B) : (term897 A B f x'' x') = ((term864 A B f x'' x') = x').
Proof. exact (@lem4916329 ((term864 A B f x'' x') = x')). Qed.
Lemma lem4916331 {A B : Type'} (s : A -> Prop) (f : A -> B) (x'' : B -> A) (x' : B) (t : B -> Prop) (h1 : term835 A B t s f x'') (h2 : @IN B x' t) : (term864 A B f x'' x') = x'.
Proof. exact (EQ_MP (@lem4916330 A B f x'' x') (@lem4916327 A B s f x'' x' t h1 h2)). Qed.
Lemma lem4916332 {A B : Type'} (x'' : B -> A) (f : A -> B) (s : A -> Prop) (y : A) (x' : B) (t : B -> Prop) (h1 : term835 A B t s f x'') (h2 : term792 A B x' f s y) (h3 : @IN B x' t) : term972 A B y f x'' x'.
Proof. exact (conj (@lem4916312 A B x'' f s y x' t h1 h2 h3) (@lem4916331 A B s f x'' x' t h1 h3)). Qed.
Lemma lem4916334 {B : Type'} (x : B) (y : B) (z : B) : term919 B x y z.
Proof. exact (EQ_MP (@lem4915985 B x y z) (@lem4915964 B y x z)). Qed.
Lemma lem4916335 {B : Type'} (x : B) (y : B) (z : B) : term919 B x y z.
Proof. exact (@lem4916334 B x y z). Qed.
Lemma lem4916336 {A B : Type'} (x'' : B -> A) (f : A -> B) (y : A) (x' : B) : term973 A B x'' f y x'.
Proof. exact (@lem4916335 B (term864 A B f x'' x') (@I (A -> B) f y) x'). Qed.
Lemma lem4916339 {A B : Type'} (x'' : B -> A) (f : A -> B) (s : A -> Prop) (y : A) (x' : B) (t : B -> Prop) (h1 : term835 A B t s f x'') (h2 : term792 A B x' f s y) (h3 : @IN B x' t) : (@I (A -> B) f y) = x'.
Proof. exact (@lem4916336 A B x'' f y x' (@lem4916332 A B x'' f s y x' t h1 h2 h3)). Qed.
Lemma lem4916340 {A B : Type'} (x'' : B -> A) (f : A -> B) (s : A -> Prop) (y : A) (x' : B) (t : B -> Prop) (h1 : term835 A B t s f x'') (h2 : term792 A B x' f s y) (h3 : @IN B x' t) : term974 A B f y x'.
Proof. exact (fun h0 : term975 A B f y x' => @lem4916339 A B x'' f s y x' t h1 h2 h3). Qed.
Lemma lem4916342 (p : Prop) : (term888 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem4916343 {A B : Type'} (f : A -> B) (y : A) (x' : B) : (term974 A B f y x') = ((@I (A -> B) f y) = x').
Proof. exact (@lem4916342 ((@I (A -> B) f y) = x')). Qed.
Lemma lem4916344 {A B : Type'} (x'' : B -> A) (f : A -> B) (s : A -> Prop) (y : A) (x' : B) (t : B -> Prop) (h1 : term835 A B t s f x'') (h2 : term792 A B x' f s y) (h3 : @IN B x' t) : (@I (A -> B) f y) = x'.
Proof. exact (EQ_MP (@lem4916343 A B f y x') (@lem4916340 A B x'' f s y x' t h1 h2 h3)). Qed.
Lemma lem4916346 {A B : Type'} (x : A) (f : A -> B) (y : A) (h1 : (f x) = (f y)) : (@I (A -> B) f x) = (@I (A -> B) f y).
Proof. exact (EQ_MP (@lem4915440 A B x f y) (@lem4915291 A B x f y h1)). Qed.
Lemma lem4916347 {A B : Type'} (x : A) (f : A -> B) (y : A) (h1 : (f x) = (f y)) : term976 A B x f y.
Proof. exact (fun h0 : term977 A B x f y => @lem4916346 A B x f y h1). Qed.
Lemma lem4916349 (p : Prop) : (term888 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem4916350 {A B : Type'} (x : A) (f : A -> B) (y : A) : (term976 A B x f y) = ((@I (A -> B) f x) = (@I (A -> B) f y)).
Proof. exact (@lem4916349 ((@I (A -> B) f x) = (@I (A -> B) f y))). Qed.
Lemma lem4916351 {A B : Type'} (x : A) (f : A -> B) (y : A) (h1 : (f x) = (f y)) : (@I (A -> B) f x) = (@I (A -> B) f y).
Proof. exact (EQ_MP (@lem4916350 A B x f y) (@lem4916347 A B x f y h1)). Qed.
Lemma lem4916353 {B : Type'} (x : B) : x = x.
Proof. exact (@lem21386 B x). Qed.
Lemma lem4916354 {B : Type'} (x : B) : x = x.
Proof. exact (@lem4916353 B x). Qed.
Lemma lem4916355 {A B : Type'} (f : A -> B) (x : A) : (@I (A -> B) f x) = (@I (A -> B) f x).
Proof. exact (@lem4916354 B (@I (A -> B) f x)). Qed.
Lemma lem4916356 {A B : Type'} (f : A -> B) (x : A) : term978 A B f x.
Proof. exact (fun h0 : term979 A B f x => @lem4916355 A B f x). Qed.
Lemma lem4916358 (p : Prop) : (term888 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem4916359 {A B : Type'} (f : A -> B) (x : A) : (term978 A B f x) = ((@I (A -> B) f x) = (@I (A -> B) f x)).
Proof. exact (@lem4916358 ((@I (A -> B) f x) = (@I (A -> B) f x))). Qed.
Lemma lem4916360 {A B : Type'} (f : A -> B) (x : A) : (@I (A -> B) f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem4916359 A B f x) (@lem4916356 A B f x)). Qed.
Lemma lem4916361 {A B : Type'} (x : A) (f : A -> B) (y : A) (h1 : (f x) = (f y)) : term980 A B y f x.
Proof. exact (conj (@lem4916351 A B x f y h1) (@lem4916360 A B f x)). Qed.
Lemma lem4916363 {B : Type'} (x : B) (y : B) (z : B) : term919 B x y z.
Proof. exact (EQ_MP (@lem4915985 B x y z) (@lem4915964 B y x z)). Qed.
Lemma lem4916364 {B : Type'} (x : B) (y : B) (z : B) : term919 B x y z.
Proof. exact (@lem4916363 B x y z). Qed.
Lemma lem4916365 {A B : Type'} (y : A) (f : A -> B) (x : A) : term981 A B y f x.
Proof. exact (@lem4916364 B (@I (A -> B) f x) (@I (A -> B) f y) (@I (A -> B) f x)). Qed.
Lemma lem4916368 {A B : Type'} (x : A) (f : A -> B) (y : A) (h1 : (f x) = (f y)) : (@I (A -> B) f y) = (@I (A -> B) f x).
Proof. exact (@lem4916365 A B y f x (@lem4916361 A B x f y h1)). Qed.
Lemma lem4916369 {A B : Type'} (x : A) (f : A -> B) (y : A) (h1 : (f x) = (f y)) : term976 A B y f x.
Proof. exact (fun h0 : term977 A B y f x => @lem4916368 A B x f y h1). Qed.
Lemma lem4916371 (p : Prop) : (term888 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem4916372 {A B : Type'} (y : A) (f : A -> B) (x : A) : (term976 A B y f x) = ((@I (A -> B) f y) = (@I (A -> B) f x)).
Proof. exact (@lem4916371 ((@I (A -> B) f y) = (@I (A -> B) f x))). Qed.
Lemma lem4916373 {A B : Type'} (x : A) (f : A -> B) (y : A) (h1 : (f x) = (f y)) : (@I (A -> B) f y) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem4916372 A B y f x) (@lem4916369 A B x f y h1)). Qed.
Lemma lem4916374 {A B : Type'} (x'' : B -> A) (s : A -> Prop) (x : A) (f : A -> B) (y : A) (x' : B) (t : B -> Prop) (h1 : term835 A B t s f x'') (h2 : term792 A B x' f s y) (h3 : (f x) = (f y)) (h4 : @IN B x' t) : term982 A B x' y f x.
Proof. exact (conj (@lem4916344 A B x'' f s y x' t h1 h2 h4) (@lem4916373 A B x f y h3)). Qed.
Lemma lem4916376 {B : Type'} (x : B) (y : B) (z : B) : term919 B x y z.
Proof. exact (EQ_MP (@lem4915985 B x y z) (@lem4915964 B y x z)). Qed.
Lemma lem4916377 {B : Type'} (x : B) (y : B) (z : B) : term919 B x y z.
Proof. exact (@lem4916376 B x y z). Qed.
Lemma lem4916378 {A B : Type'} (y : A) (x' : B) (f : A -> B) (x : A) : term983 A B y x' f x.
Proof. exact (@lem4916377 B (@I (A -> B) f y) x' (@I (A -> B) f x)). Qed.
Lemma lem4916381 {A B : Type'} (x'' : B -> A) (s : A -> Prop) (x : A) (f : A -> B) (y : A) (x' : B) (t : B -> Prop) (h1 : term835 A B t s f x'') (h2 : term792 A B x' f s y) (h3 : (f x) = (f y)) (h4 : @IN B x' t) : x' = (@I (A -> B) f x).
Proof. exact (@lem4916378 A B y x' f x (@lem4916374 A B x'' s x f y x' t h1 h2 h3 h4)). Qed.
Lemma lem4916382 {A B : Type'} (x'' : B -> A) (s : A -> Prop) (x : A) (f : A -> B) (y : A) (x' : B) (t : B -> Prop) (h1 : term835 A B t s f x'') (h2 : term792 A B x' f s y) (h3 : (f x) = (f y)) (h4 : @IN B x' t) : term984 A B x' f x.
Proof. exact (fun h0 : term858 A B x' f x => @lem4916381 A B x'' s x f y x' t h1 h2 h3 h4). Qed.
Lemma lem4916384 (p : Prop) : (term888 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem4916385 {A B : Type'} (x' : B) (f : A -> B) (x : A) : (term984 A B x' f x) = (x' = (@I (A -> B) f x)).
Proof. exact (@lem4916384 (x' = (@I (A -> B) f x))). Qed.
Lemma lem4916386 {A B : Type'} (x'' : B -> A) (s : A -> Prop) (x : A) (f : A -> B) (y : A) (x' : B) (t : B -> Prop) (h1 : term835 A B t s f x'') (h2 : term792 A B x' f s y) (h3 : (f x) = (f y)) (h4 : @IN B x' t) : x' = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem4916385 A B x' f x) (@lem4916382 A B x'' s x f y x' t h1 h2 h3 h4)). Qed.
Lemma lem4916388 {A : Type'} (x : A) (s : A -> Prop) (h1 : @IN A x s) : @IN A x s.
Proof. exact (h1). Qed.
Lemma lem4916389 {A : Type'} (x : A) (s : A -> Prop) (h1 : @IN A x s) : term887 A x s.
Proof. exact (fun h0 : term801 A x s => @lem4916388 A x s h1). Qed.
Lemma lem4916391 (p : Prop) : (term888 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem4916392 {A : Type'} (x : A) (s : A -> Prop) : (term887 A x s) = (@IN A x s).
Proof. exact (@lem4916391 (@IN A x s)). Qed.
Lemma lem4916393 {A : Type'} (x : A) (s : A -> Prop) (h1 : @IN A x s) : @IN A x s.
Proof. exact (EQ_MP (@lem4916392 A x s) (@lem4916389 A x s h1)). Qed.
Lemma lem4916394 {A B : Type'} (x'' : B -> A) (f : A -> B) (y : A) (x : A) (s : A -> Prop) (x' : B) (t : B -> Prop) (h1 : term835 A B t s f x'') (h2 : term792 A B x' f s y) (h3 : (f x) = (f y)) (h4 : @IN A x s) (h5 : @IN B x' t) : term943 A B x' f x s.
Proof. exact (conj (@lem4916386 A B x'' s x f y x' t h1 h2 h3 h5) (@lem4916393 A x s h4)). Qed.
Lemma lem4916396 {A B : Type'} (_61043 : A) (x' : B) (f : A -> B) (s : A -> Prop) (y : A) (h1 : term792 A B x' f s y) : term946 A B x' f s _61043 y.
Proof. exact (EQ_MP (@lem4916164 A B x' f s _61043 y) (@lem4916143 A B _61043 x' f s y h1)). Qed.
Lemma lem4916397 {A B : Type'} (_61043 : A) (x' : B) (f : A -> B) (s : A -> Prop) (y : A) (h1 : term792 A B x' f s y) : term946 A B x' f s _61043 y.
Proof. exact (@lem4916396 A B _61043 x' f s y h1). Qed.
Lemma lem4916398 {A B : Type'} (x : A) (x' : B) (f : A -> B) (s : A -> Prop) (y : A) (h1 : term792 A B x' f s y) : term946 A B x' f s x y.
Proof. exact (@lem4916397 A B x x' f s y h1). Qed.
Lemma lem4916401 {A B : Type'} (x'' : B -> A) (f : A -> B) (y : A) (x : A) (s : A -> Prop) (x' : B) (t : B -> Prop) (h1 : term835 A B t s f x'') (h2 : term792 A B x' f s y) (h3 : (f x) = (f y)) (h4 : @IN A x s) (h5 : @IN B x' t) : x = y.
Proof. exact (@lem4916398 A B x x' f s y h2 (@lem4916394 A B x'' f y x s x' t h1 h2 h3 h4 h5)). Qed.
Lemma lem4916402 {A B : Type'} (x'' : B -> A) (f : A -> B) (y : A) (x : A) (s : A -> Prop) (x' : B) (t : B -> Prop) (h1 : term835 A B t s f x'') (h2 : term792 A B x' f s y) (h3 : (f x) = (f y)) (h4 : @IN A x s) (h5 : @IN B x' t) : term985 A x y.
Proof. exact (fun h0 : term688 A x y => @lem4916401 A B x'' f y x s x' t h1 h2 h3 h4 h5). Qed.
Lemma lem4916404 (p : Prop) : (term888 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem4916405 {A : Type'} (x : A) (y : A) : (term985 A x y) = (x = y).
Proof. exact (@lem4916404 (x = y)). Qed.
Lemma lem4916406 {A B : Type'} (x'' : B -> A) (f : A -> B) (y : A) (x : A) (s : A -> Prop) (x' : B) (t : B -> Prop) (h1 : term835 A B t s f x'') (h2 : term792 A B x' f s y) (h3 : (f x) = (f y)) (h4 : @IN A x s) (h5 : @IN B x' t) : x = y.
Proof. exact (EQ_MP (@lem4916405 A x y) (@lem4916402 A B x'' f y x s x' t h1 h2 h3 h4 h5)). Qed.
Lemma lem4916409 (p : Prop) : (~ p) = (p -> False).
Proof. exact (EQ_MP (@lem21021 p) (@lem0)). Qed.
Lemma lem4916411 {A : Type'} (x : A) (y : A) : (term688 A x y) = (term986 A x y).
Proof. exact (@lem4916409 (x = y)). Qed.
Lemma lem4916414 {A : Type'} (x : A) (y : A) (h1 : term688 A x y) : term986 A x y.
Proof. exact (EQ_MP (@lem4916411 A x y) (@lem4915630 A x y h1)). Qed.
Lemma lem4916417 {A B : Type'} (x'' : B -> A) (f : A -> B) (y : A) (x : A) (s : A -> Prop) (x' : B) (t : B -> Prop) (h1 : term835 A B t s f x'') (h2 : term792 A B x' f s y) (h3 : term688 A x y) (h4 : (f x) = (f y)) (h5 : @IN A x s) (h6 : @IN B x' t) : False.
Proof. exact (@lem4916414 A x y h3 (@lem4916406 A B x'' f y x s x' t h1 h2 h4 h5 h6)). Qed.
Lemma lem4916418 {A B : Type'} (x'' : B -> A) (f : A -> B) (y : A) (x : A) (s : A -> Prop) (x' : B) (t : B -> Prop) (h1 : term835 A B t s f x'') (h2 : term792 A B x' f s y) (h3 : term688 A x y) (h4 : (f x) = (f y)) (h5 : @IN A x s) (h6 : @IN B x' t) : term987.
Proof. exact (fun h0 : ~ False => @lem4916417 A B x'' f y x s x' t h1 h2 h3 h4 h5 h6). Qed.
Lemma lem4916420 (p : Prop) : (term888 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem4916421 : term987 = False.
Proof. exact (@lem4916420 False). Qed.
Lemma lem4916422 {A B : Type'} (x'' : B -> A) (f : A -> B) (y : A) (x : A) (s : A -> Prop) (x' : B) (t : B -> Prop) (h1 : term835 A B t s f x'') (h2 : term792 A B x' f s y) (h3 : term688 A x y) (h4 : (f x) = (f y)) (h5 : @IN A x s) (h6 : @IN B x' t) : False.
Proof. exact (EQ_MP (@lem4916421) (@lem4916418 A B x'' f y x s x' t h1 h2 h3 h4 h5 h6)). Qed.
Lemma lem4916423 {A B : Type'} (x'' : B -> A) (f : A -> B) (y : A) (x : A) (s : A -> Prop) (x' : B) (t : B -> Prop) (h1 : term835 A B t s f x'') (h2 : term792 A B x' f s y) (h3 : term688 A x y) (h4 : (f x) = (f y)) (h5 : @IN A x s) (h6 : @IN B x' t) : (@IN B x' t) = False.
Proof. exact (prop_ext (fun h7 : @IN B x' t => @lem4916422 A B x'' f y x s x' t h1 h2 h3 h4 h5 h6) (fun h7 : False => @lem4915632 B x' t h6)). Qed.
Lemma lem4916424 {A B : Type'} (x'' : B -> A) (f : A -> B) (y : A) (x : A) (s : A -> Prop) (x' : B) (t : B -> Prop) (h1 : term835 A B t s f x'') (h2 : term792 A B x' f s y) (h3 : term688 A x y) (h4 : (f x) = (f y)) (h5 : @IN A x s) (h6 : @IN B x' t) : False.
Proof. exact (EQ_MP (@lem4916423 A B x'' f y x s x' t h1 h2 h3 h4 h5 h6) (@lem4915632 B x' t h6)). Qed.
Lemma lem4916425 {A B : Type'} (x'' : B -> A) (f : A -> B) (y : A) (x : A) (s : A -> Prop) (x' : B) (t : B -> Prop) (h1 : term835 A B t s f x'') (h2 : term792 A B x' f s y) (h3 : term688 A x y) (h4 : (f x) = (f y)) (h5 : @IN A x s) (h6 : @IN B x' t) : (term688 A x y) = False.
Proof. exact (prop_ext (fun h7 : term688 A x y => @lem4916424 A B x'' f y x s x' t h1 h2 h3 h4 h5 h6) (fun h7 : False => @lem4915630 A x y h3)). Qed.
Lemma lem4916426 {A B : Type'} (x'' : B -> A) (f : A -> B) (y : A) (x : A) (s : A -> Prop) (x' : B) (t : B -> Prop) (h1 : term835 A B t s f x'') (h2 : term792 A B x' f s y) (h3 : term688 A x y) (h4 : (f x) = (f y)) (h5 : @IN A x s) (h6 : @IN B x' t) : False.
Proof. exact (EQ_MP (@lem4916425 A B x'' f y x s x' t h1 h2 h3 h4 h5 h6) (@lem4915630 A x y h3)). Qed.
Lemma lem4916427 {A B : Type'} (x'' : B -> A) (f : A -> B) (y : A) (x : A) (s : A -> Prop) (x' : B) (t : B -> Prop) (h1 : term835 A B t s f x'') (h2 : term792 A B x' f s y) (h3 : term688 A x y) (h4 : (f x) = (f y)) (h5 : @IN A x s) (h6 : @IN B x' t) : (@IN A x s) = False.
Proof. exact (prop_ext (fun h7 : @IN A x s => @lem4916426 A B x'' f y x s x' t h1 h2 h3 h4 h5 h6) (fun h7 : False => @lem4915624 A x s h5)). Qed.
Lemma lem4916428 {A B : Type'} (x'' : B -> A) (f : A -> B) (y : A) (x : A) (s : A -> Prop) (x' : B) (t : B -> Prop) (h1 : term835 A B t s f x'') (h2 : term792 A B x' f s y) (h3 : term688 A x y) (h4 : (f x) = (f y)) (h5 : @IN A x s) (h6 : @IN B x' t) : False.
Proof. exact (EQ_MP (@lem4916427 A B x'' f y x s x' t h1 h2 h3 h4 h5 h6) (@lem4915624 A x s h5)). Qed.
Lemma lem4916429 {A B : Type'} (x'' : B -> A) (f : A -> B) (y : A) (x : A) (s : A -> Prop) (x' : B) (t : B -> Prop) (h1 : term835 A B t s f x'') (h2 : term792 A B x' f s y) (h3 : term688 A x y) (h4 : (f x) = (f y)) (h5 : @IN A x s) (h6 : @IN B x' t) : (@IN B x' t) = False.
Proof. exact (prop_ext (fun h7 : @IN B x' t => @lem4916428 A B x'' f y x s x' t h1 h2 h3 h4 h5 h6) (fun h7 : False => @lem4915564 B x' t h6)). Qed.
Lemma lem4916430 {A B : Type'} (x'' : B -> A) (f : A -> B) (y : A) (x : A) (s : A -> Prop) (x' : B) (t : B -> Prop) (h1 : term835 A B t s f x'') (h2 : term792 A B x' f s y) (h3 : term688 A x y) (h4 : (f x) = (f y)) (h5 : @IN A x s) (h6 : @IN B x' t) : False.
Proof. exact (EQ_MP (@lem4916429 A B x'' f y x s x' t h1 h2 h3 h4 h5 h6) (@lem4915564 B x' t h6)). Qed.
Lemma lem4916431 {A B : Type'} (x'' : B -> A) (f : A -> B) (y : A) (x : A) (s : A -> Prop) (x' : B) (t : B -> Prop) (h1 : term835 A B t s f x'') (h2 : term792 A B x' f s y) (h3 : term688 A x y) (h4 : (f x) = (f y)) (h5 : @IN A x s) (h6 : @IN B x' t) : (term688 A x y) = False.
Proof. exact (prop_ext (fun h7 : term688 A x y => @lem4916430 A B x'' f y x s x' t h1 h2 h3 h4 h5 h6) (fun h7 : False => @lem4915560 A x y h3)). Qed.
Lemma lem4916432 {A B : Type'} (x'' : B -> A) (f : A -> B) (y : A) (x : A) (s : A -> Prop) (x' : B) (t : B -> Prop) (h1 : term835 A B t s f x'') (h2 : term792 A B x' f s y) (h3 : term688 A x y) (h4 : (f x) = (f y)) (h5 : @IN A x s) (h6 : @IN B x' t) : False.
Proof. exact (EQ_MP (@lem4916431 A B x'' f y x s x' t h1 h2 h3 h4 h5 h6) (@lem4915560 A x y h3)). Qed.
Lemma lem4916433 {A B : Type'} (x'' : B -> A) (f : A -> B) (y : A) (x : A) (s : A -> Prop) (x' : B) (t : B -> Prop) (h1 : term835 A B t s f x'') (h2 : term792 A B x' f s y) (h3 : term688 A x y) (h4 : (f x) = (f y)) (h5 : @IN A x s) (h6 : @IN B x' t) : (@IN A x s) = False.
Proof. exact (prop_ext (fun h7 : @IN A x s => @lem4916432 A B x'' f y x s x' t h1 h2 h3 h4 h5 h6) (fun h7 : False => @lem4915548 A x s h5)). Qed.
Lemma lem4916434 {A B : Type'} (x'' : B -> A) (f : A -> B) (y : A) (x : A) (s : A -> Prop) (x' : B) (t : B -> Prop) (h1 : term835 A B t s f x'') (h2 : term792 A B x' f s y) (h3 : term688 A x y) (h4 : (f x) = (f y)) (h5 : @IN A x s) (h6 : @IN B x' t) : False.
Proof. exact (EQ_MP (@lem4916433 A B x'' f y x s x' t h1 h2 h3 h4 h5 h6) (@lem4915548 A x s h5)). Qed.
Lemma lem4916435 {A B : Type'} (x'' : B -> A) (f : A -> B) (y : A) (x : A) (s : A -> Prop) (x' : B) (t : B -> Prop) (h1 : term835 A B t s f x'') (h2 : term792 A B x' f s y) (h3 : term688 A x y) (h4 : (f x) = (f y)) (h5 : @IN A x s) (h6 : @IN B x' t) : (@IN B x' t) = False.
Proof. exact (prop_ext (fun h7 : @IN B x' t => @lem4916434 A B x'' f y x s x' t h1 h2 h3 h4 h5 h6) (fun h7 : False => @lem4915564 B x' t h6)). Qed.
Lemma lem4916436 {A B : Type'} (x'' : B -> A) (f : A -> B) (y : A) (x : A) (s : A -> Prop) (x' : B) (t : B -> Prop) (h1 : term835 A B t s f x'') (h2 : term792 A B x' f s y) (h3 : term688 A x y) (h4 : (f x) = (f y)) (h5 : @IN A x s) (h6 : @IN B x' t) : False.
Proof. exact (EQ_MP (@lem4916435 A B x'' f y x s x' t h1 h2 h3 h4 h5 h6) (@lem4915564 B x' t h6)). Qed.
Lemma lem4916437 {A B : Type'} (x'' : B -> A) (f : A -> B) (y : A) (x : A) (s : A -> Prop) (x' : B) (t : B -> Prop) (h1 : term835 A B t s f x'') (h2 : term792 A B x' f s y) (h3 : term688 A x y) (h4 : (f x) = (f y)) (h5 : @IN A x s) (h6 : @IN B x' t) : (term688 A x y) = False.
Proof. exact (prop_ext (fun h7 : term688 A x y => @lem4916436 A B x'' f y x s x' t h1 h2 h3 h4 h5 h6) (fun h7 : False => @lem4915560 A x y h3)). Qed.
Lemma lem4916438 {A B : Type'} (x'' : B -> A) (f : A -> B) (y : A) (x : A) (s : A -> Prop) (x' : B) (t : B -> Prop) (h1 : term835 A B t s f x'') (h2 : term792 A B x' f s y) (h3 : term688 A x y) (h4 : (f x) = (f y)) (h5 : @IN A x s) (h6 : @IN B x' t) : False.
Proof. exact (EQ_MP (@lem4916437 A B x'' f y x s x' t h1 h2 h3 h4 h5 h6) (@lem4915560 A x y h3)). Qed.
Lemma lem4916439 {A B : Type'} (x'' : B -> A) (f : A -> B) (y : A) (x : A) (s : A -> Prop) (x' : B) (t : B -> Prop) (h1 : term835 A B t s f x'') (h2 : term792 A B x' f s y) (h3 : term688 A x y) (h4 : (f x) = (f y)) (h5 : @IN A x s) (h6 : @IN B x' t) : (@IN A x s) = False.
Proof. exact (prop_ext (fun h7 : @IN A x s => @lem4916438 A B x'' f y x s x' t h1 h2 h3 h4 h5 h6) (fun h7 : False => @lem4915548 A x s h5)). Qed.
Lemma lem4916440 {A B : Type'} (x'' : B -> A) (f : A -> B) (y : A) (x : A) (s : A -> Prop) (x' : B) (t : B -> Prop) (h1 : term835 A B t s f x'') (h2 : term792 A B x' f s y) (h3 : term688 A x y) (h4 : (f x) = (f y)) (h5 : @IN A x s) (h6 : @IN B x' t) : False.
Proof. exact (EQ_MP (@lem4916439 A B x'' f y x s x' t h1 h2 h3 h4 h5 h6) (@lem4915548 A x s h5)). Qed.
Lemma lem4916441 {A B : Type'} (x'' : B -> A) (f : A -> B) (y : A) (x : A) (s : A -> Prop) (x' : B) (t : B -> Prop) (h1 : term835 A B t s f x'') (h2 : term792 A B x' f s y) (h3 : term688 A x y) (h4 : (f x) = (f y)) (h5 : @IN A x s) (h6 : @IN B x' t) : (@IN B x' t) = False.
Proof. exact (prop_ext (fun h7 : @IN B x' t => @lem4916440 A B x'' f y x s x' t h1 h2 h3 h4 h5 h6) (fun h7 : False => @lem4915455 B x' t h6)). Qed.
Lemma lem4916442 {A B : Type'} (x'' : B -> A) (f : A -> B) (y : A) (x : A) (s : A -> Prop) (x' : B) (t : B -> Prop) (h1 : term835 A B t s f x'') (h2 : term792 A B x' f s y) (h3 : term688 A x y) (h4 : (f x) = (f y)) (h5 : @IN A x s) (h6 : @IN B x' t) : False.
Proof. exact (EQ_MP (@lem4916441 A B x'' f y x s x' t h1 h2 h3 h4 h5 h6) (@lem4915455 B x' t h6)). Qed.
Lemma lem4916443 {A B : Type'} (x'' : B -> A) (f : A -> B) (y : A) (x : A) (s : A -> Prop) (x' : B) (t : B -> Prop) (h1 : term835 A B t s f x'') (h2 : term792 A B x' f s y) (h3 : term688 A x y) (h4 : (f x) = (f y)) (h5 : @IN A x s) (h6 : @IN B x' t) : (term688 A x y) = False.
Proof. exact (prop_ext (fun h7 : term688 A x y => @lem4916442 A B x'' f y x s x' t h1 h2 h3 h4 h5 h6) (fun h7 : False => @lem4915449 A x y h3)). Qed.
Lemma lem4916444 {A B : Type'} (x'' : B -> A) (f : A -> B) (y : A) (x : A) (s : A -> Prop) (x' : B) (t : B -> Prop) (h1 : term835 A B t s f x'') (h2 : term792 A B x' f s y) (h3 : term688 A x y) (h4 : (f x) = (f y)) (h5 : @IN A x s) (h6 : @IN B x' t) : False.
Proof. exact (EQ_MP (@lem4916443 A B x'' f y x s x' t h1 h2 h3 h4 h5 h6) (@lem4915449 A x y h3)). Qed.
Lemma lem4916445 {A B : Type'} (x'' : B -> A) (f : A -> B) (y : A) (x : A) (s : A -> Prop) (x' : B) (t : B -> Prop) (h1 : term835 A B t s f x'') (h2 : term792 A B x' f s y) (h3 : term688 A x y) (h4 : (f x) = (f y)) (h5 : @IN A x s) (h6 : @IN B x' t) : (@IN A x s) = False.
Proof. exact (prop_ext (fun h7 : @IN A x s => @lem4916444 A B x'' f y x s x' t h1 h2 h3 h4 h5 h6) (fun h7 : False => @lem4915416 A x s h5)). Qed.
Lemma lem4916446 {A B : Type'} (x'' : B -> A) (f : A -> B) (y : A) (x : A) (s : A -> Prop) (x' : B) (t : B -> Prop) (h1 : term835 A B t s f x'') (h2 : term792 A B x' f s y) (h3 : term688 A x y) (h4 : (f x) = (f y)) (h5 : @IN A x s) (h6 : @IN B x' t) : False.
Proof. exact (EQ_MP (@lem4916445 A B x'' f y x s x' t h1 h2 h3 h4 h5 h6) (@lem4915416 A x s h5)). Qed.
Lemma lem4916447 {A B : Type'} (f : A -> B) (y : A) (x : A) (s : A -> Prop) (x' : B) (t : B -> Prop) (h1 : term693 A B t s f) (h2 : term792 A B x' f s y) (h3 : term688 A x y) (h4 : (f x) = (f y)) (h5 : @IN A x s) (h6 : @IN B x' t) : False.
Proof. exact (ex_elim (@lem4915273 A B t s f h1) (fun x'' : B -> A => fun h0 : term837 A B t s f x'' => @lem4916446 A B x'' f y x s x' t h0 h2 h3 h4 h5 h6)). Qed.
Lemma lem4916448 {A B : Type'} (f : A -> B) (y : A) (x : A) (s : A -> Prop) (x' : B) (t : B -> Prop) (h1 : term693 A B t s f) (h2 : term792 A B x' f s y) (h3 : term688 A x y) (h4 : (f x) = (f y)) (h5 : @IN A x s) (h6 : @IN B x' t) : (@IN B x' t) = False.
Proof. exact (prop_ext (fun h7 : @IN B x' t => @lem4916447 A B f y x s x' t h1 h2 h3 h4 h5 h6) (fun h7 : False => @lem4915303 B x' t h6)). Qed.
Lemma lem4916449 {A B : Type'} (f : A -> B) (y : A) (x : A) (s : A -> Prop) (x' : B) (t : B -> Prop) (h1 : term693 A B t s f) (h2 : term792 A B x' f s y) (h3 : term688 A x y) (h4 : (f x) = (f y)) (h5 : @IN A x s) (h6 : @IN B x' t) : False.
Proof. exact (EQ_MP (@lem4916448 A B f y x s x' t h1 h2 h3 h4 h5 h6) (@lem4915303 B x' t h6)). Qed.
Lemma lem4916450 {A B : Type'} (f : A -> B) (y : A) (x : A) (s : A -> Prop) (x' : B) (t : B -> Prop) (h1 : term693 A B t s f) (h2 : term792 A B x' f s y) (h3 : term688 A x y) (h4 : (f x) = (f y)) (h5 : @IN A x s) (h6 : @IN B x' t) : (term688 A x y) = False.
Proof. exact (prop_ext (fun h7 : term688 A x y => @lem4916449 A B f y x s x' t h1 h2 h3 h4 h5 h6) (fun h7 : False => @lem4915297 A x y h3)). Qed.
Lemma lem4916451 {A B : Type'} (f : A -> B) (y : A) (x : A) (s : A -> Prop) (x' : B) (t : B -> Prop) (h1 : term693 A B t s f) (h2 : term792 A B x' f s y) (h3 : term688 A x y) (h4 : (f x) = (f y)) (h5 : @IN A x s) (h6 : @IN B x' t) : False.
Proof. exact (EQ_MP (@lem4916450 A B f y x s x' t h1 h2 h3 h4 h5 h6) (@lem4915297 A x y h3)). Qed.
Lemma lem4916452 {A B : Type'} (f : A -> B) (y : A) (x : A) (s : A -> Prop) (x' : B) (t : B -> Prop) (h1 : term693 A B t s f) (h2 : term792 A B x' f s y) (h3 : term688 A x y) (h4 : (f x) = (f y)) (h5 : @IN A x s) (h6 : @IN B x' t) : ((f x) = (f y)) = False.
Proof. exact (prop_ext (fun h7 : (f x) = (f y) => @lem4916451 A B f y x s x' t h1 h2 h3 h4 h5 h6) (fun h7 : False => @lem4915291 A B x f y h4)). Qed.
Lemma lem4916453 {A B : Type'} (f : A -> B) (y : A) (x : A) (s : A -> Prop) (x' : B) (t : B -> Prop) (h1 : term693 A B t s f) (h2 : term792 A B x' f s y) (h3 : term688 A x y) (h4 : (f x) = (f y)) (h5 : @IN A x s) (h6 : @IN B x' t) : False.
Proof. exact (EQ_MP (@lem4916452 A B f y x s x' t h1 h2 h3 h4 h5 h6) (@lem4915291 A B x f y h4)). Qed.
Lemma lem4916454 {A B : Type'} (f : A -> B) (y : A) (x : A) (s : A -> Prop) (x' : B) (t : B -> Prop) (h1 : term693 A B t s f) (h2 : term792 A B x' f s y) (h3 : term688 A x y) (h4 : (f x) = (f y)) (h5 : @IN A x s) (h6 : @IN B x' t) : (@IN A x s) = False.
Proof. exact (prop_ext (fun h7 : @IN A x s => @lem4916453 A B f y x s x' t h1 h2 h3 h4 h5 h6) (fun h7 : False => @lem4915279 A x s h5)). Qed.
Lemma lem4916455 {A B : Type'} (f : A -> B) (y : A) (x : A) (s : A -> Prop) (x' : B) (t : B -> Prop) (h1 : term693 A B t s f) (h2 : term792 A B x' f s y) (h3 : term688 A x y) (h4 : (f x) = (f y)) (h5 : @IN A x s) (h6 : @IN B x' t) : False.
Proof. exact (EQ_MP (@lem4916454 A B f y x s x' t h1 h2 h3 h4 h5 h6) (@lem4915279 A x s h5)). Qed.
Lemma lem4916456 {A B : Type'} (f : A -> B) (y : A) (x : A) (s : A -> Prop) (x' : B) (t : B -> Prop) (h1 : term693 A B t s f) (h2 : term792 A B x' f s y) (h3 : term688 A x y) (h4 : (f x) = (f y)) (h5 : @IN A x s) (h6 : @IN B x' t) : (term792 A B x' f s y) = False.
Proof. exact (prop_ext (fun h7 : term792 A B x' f s y => @lem4916455 A B f y x s x' t h1 h2 h3 h4 h5 h6) (fun h7 : False => @lem4915078 A B x' f s y h2)). Qed.
Lemma lem4916457 {A B : Type'} (f : A -> B) (y : A) (x : A) (s : A -> Prop) (x' : B) (t : B -> Prop) (h1 : term693 A B t s f) (h2 : term792 A B x' f s y) (h3 : term688 A x y) (h4 : (f x) = (f y)) (h5 : @IN A x s) (h6 : @IN B x' t) : False.
Proof. exact (EQ_MP (@lem4916456 A B f y x s x' t h1 h2 h3 h4 h5 h6) (@lem4915078 A B x' f s y h2)). Qed.
Lemma lem4916458 {A B : Type'} (f : A -> B) (y : A) (x : A) (s : A -> Prop) (x' : B) (t : B -> Prop) (h1 : term693 A B t s f) (h2 : term688 A x y) (h3 : (f x) = (f y)) (h4 : @IN A x s) (h5 : @IN B x' t) : term791 A B x' f s y.
Proof. exact (fun h0 : term792 A B x' f s y => @lem4916457 A B f y x s x' t h1 h0 h2 h3 h4 h5). Qed.
Lemma lem4916459 {A B : Type'} (f : A -> B) (y : A) (x : A) (s : A -> Prop) (x' : B) (t : B -> Prop) (h1 : term693 A B t s f) (h2 : term688 A x y) (h3 : (f x) = (f y)) (h4 : @IN A x s) (h5 : @IN B x' t) : term728 A B x' f s y.
Proof. exact (EQ_MP (@lem4915077 A B x' f s y) (@lem4916458 A B f y x s x' t h1 h2 h3 h4 h5)). Qed.
Lemma lem4916460 {A B : Type'} (x' : B) (t : B -> Prop) (f : A -> B) (y : A) (x : A) (s : A -> Prop) (h1 : term693 A B t s f) (h2 : term688 A x y) (h3 : (f x) = (f y)) (h4 : @IN A x s) : term731 A B t x' f s y.
Proof. exact (fun h0 : @IN B x' t => @lem4916459 A B f y x s x' t h1 h2 h3 h4 h0). Qed.
Lemma lem4916465 {A B : Type'} (t : B -> Prop) (f : A -> B) (y : A) (x : A) (s : A -> Prop) (h1 : term693 A B t s f) (h2 : term688 A x y) (h3 : (f x) = (f y)) (h4 : @IN A x s) : term734 A B t f s y.
Proof. exact (fun x' : B => @lem4916460 A B x' t f y x s h1 h2 h3 h4). Qed.
Lemma lem4916466 {A B : Type'} (t : B -> Prop) (f : A -> B) (y : A) (x : A) (s : A -> Prop) (h1 : term693 A B t s f) (h2 : (f x) = (f y)) (h3 : @IN A x s) : term745 A B x t f s y.
Proof. exact (fun h0 : term688 A x y => @lem4916465 A B t f y x s h1 h0 h2 h3). Qed.
Lemma lem4916467 {A B : Type'} (y : A) (t : B -> Prop) (f : A -> B) (x : A) (s : A -> Prop) (h1 : term693 A B t s f) (h2 : @IN A x s) : term748 A B x t f s y.
Proof. exact (fun h0 : (f x) = (f y) => @lem4916466 A B t f y x s h1 h0 h2). Qed.
Lemma lem4916468 {A B : Type'} (y : A) (t : B -> Prop) (f : A -> B) (x : A) (s : A -> Prop) (h1 : term693 A B t s f) (h2 : @IN A x s) : term750 A B x t f s y.
Proof. exact (fun h0 : @IN A y s => @lem4916467 A B y t f x s h1 h2). Qed.
Lemma lem4916469 {A B : Type'} (x : A) (y : A) (t : B -> Prop) (s : A -> Prop) (f : A -> B) (h1 : term693 A B t s f) : term752 A B x t f s y.
Proof. exact (fun h0 : @IN A x s => @lem4916468 A B y t f x s h1 h0). Qed.
Lemma lem4916470 {A B : Type'} (x : A) (t : B -> Prop) (f : A -> B) (s : A -> Prop) (y : A) : term755 A B x t f s y.
Proof. exact (fun h0 : term693 A B t s f => @lem4916469 A B x y t s f h0). Qed.
Lemma lem4916471 {A B : Type'} (x : A) (t : B -> Prop) (f : A -> B) (s : A -> Prop) (y : A) : term758 A B x t f s y.
Proof. exact (fun h0 : term692 A B f s t => @lem4916470 A B x t f s y). Qed.
Lemma lem4916472 {A B : Type'} (x : A) (t : B -> Prop) (f : A -> B) (s : A -> Prop) (y : A) : term761 A B x t f s y.
Proof. exact (fun h0 : (@CARD A s) = (@CARD B t) => @lem4916471 A B x t f s y). Qed.
Lemma lem4916473 {A B : Type'} (x : A) (t : B -> Prop) (f : A -> B) (s : A -> Prop) (y : A) : term764 A B x t f s y.
Proof. exact (fun h0 : @FINITE B t => @lem4916472 A B x t f s y). Qed.
Lemma lem4916474 {A B : Type'} (x : A) (t : B -> Prop) (f : A -> B) (s : A -> Prop) (y : A) : term765 A B x t f s y.
Proof. exact (fun h0 : @FINITE A s => @lem4916473 A B x t f s y). Qed.
Lemma lem4916479 {A B : Type'} (t : B -> Prop) (f : A -> B) (s : A -> Prop) (y : A) : term769 A B t f s y.
Proof. exact (fun x : A => @lem4916474 A B x t f s y). Qed.
Lemma lem4916484 {A B : Type'} (f : A -> B) (s : A -> Prop) (y : A) : term773 A B f s y.
Proof. exact (fun t : B -> Prop => @lem4916479 A B t f s y). Qed.
Lemma lem4916489 {A B : Type'} (s : A -> Prop) (y : A) : term777 A B s y.
Proof. exact (fun f : A -> B => @lem4916484 A B f s y). Qed.
Lemma lem4916494 {A B : Type'} (y : A) : term781 A B y.
Proof. exact (fun s : A -> Prop => @lem4916489 A B s y). Qed.
Lemma lem4916499 {A B : Type'} : term785 A B.
Proof. exact (fun y : A => @lem4916494 A B y). Qed.
Lemma lem4916500 {A B : Type'} : term784 A B.
Proof. exact (EQ_MP (@lem4915063 A B) (@lem4916499 A B)). Qed.
Lemma lem4916501 {A B : Type'} (y : A) : term988 A B y.
Proof. exact (@lem4916500 A B y). Qed.
Lemma lem4916502 {A B : Type'} (y : A) : (term988 A B y) = (term780 A B y).
Proof. exact (eq_refl (term988 A B y)). Qed.
Lemma lem4916503 {A B : Type'} (y : A) : term780 A B y.
Proof. exact (EQ_MP (@lem4916502 A B y) (@lem4916501 A B y)). Qed.
Lemma lem4916504 {A B : Type'} (y : A) (s : A -> Prop) : term989 A B y s.
Proof. exact (@lem4916503 A B y s). Qed.
Lemma lem4916505 {A B : Type'} (s : A -> Prop) (y : A) : (term989 A B y s) = (term776 A B s y).
Proof. exact (eq_refl (term989 A B y s)). Qed.
Lemma lem4916506 {A B : Type'} (s : A -> Prop) (y : A) : term776 A B s y.
Proof. exact (EQ_MP (@lem4916505 A B s y) (@lem4916504 A B y s)). Qed.
Lemma lem4916507 {A B : Type'} (s : A -> Prop) (y : A) (f : A -> B) : term990 A B s y f.
Proof. exact (@lem4916506 A B s y f). Qed.
Lemma lem4916508 {A B : Type'} (f : A -> B) (s : A -> Prop) (y : A) : (term990 A B s y f) = (term772 A B f s y).
Proof. exact (eq_refl (term990 A B s y f)). Qed.
Lemma lem4916509 {A B : Type'} (f : A -> B) (s : A -> Prop) (y : A) : term772 A B f s y.
Proof. exact (EQ_MP (@lem4916508 A B f s y) (@lem4916507 A B s y f)). Qed.
Lemma lem4916510 {A B : Type'} (f : A -> B) (s : A -> Prop) (y : A) (t : B -> Prop) : term991 A B f s y t.
Proof. exact (@lem4916509 A B f s y t). Qed.
Lemma lem4916511 {A B : Type'} (t : B -> Prop) (f : A -> B) (s : A -> Prop) (y : A) : (term991 A B f s y t) = (term768 A B t f s y).
Proof. exact (eq_refl (term991 A B f s y t)). Qed.
Lemma lem4916512 {A B : Type'} (t : B -> Prop) (f : A -> B) (s : A -> Prop) (y : A) : term768 A B t f s y.
Proof. exact (EQ_MP (@lem4916511 A B t f s y) (@lem4916510 A B f s y t)). Qed.
Lemma lem4916513 {A B : Type'} (t : B -> Prop) (f : A -> B) (s : A -> Prop) (y : A) (x : A) : term992 A B t f s y x.
Proof. exact (@lem4916512 A B t f s y x). Qed.
Lemma lem4916514 {A B : Type'} (x : A) (t : B -> Prop) (f : A -> B) (s : A -> Prop) (y : A) : (term992 A B t f s y x) = (term738 A B x t f s y).
Proof. exact (eq_refl (term992 A B t f s y x)). Qed.
Lemma lem4916515 {A B : Type'} (x : A) (t : B -> Prop) (f : A -> B) (s : A -> Prop) (y : A) : term738 A B x t f s y.
Proof. exact (EQ_MP (@lem4916514 A B x t f s y) (@lem4916513 A B t f s y x)). Qed.
Lemma lem4916517 {A B : Type'} (x : A) (t : B -> Prop) (f : A -> B) (s : A -> Prop) (y : A) : term738 A B x t f s y.
Proof. exact (@lem4914655 A B x t f s y (@lem4916515 A B x t f s y)). Qed.
Lemma lem4916518 {A B : Type'} (x : A) (t : B -> Prop) (f : A -> B) (y : A) (s : A -> Prop) (h1 : @FINITE A s) : term763 A B x t f s y.
Proof. exact (@lem4916517 A B x t f s y (@lem4914388 A s h1)). Qed.
Lemma lem4916519 {A B : Type'} (x : A) (f : A -> B) (y : A) (s : A -> Prop) (t : B -> Prop) (h1 : @FINITE A s) (h2 : @FINITE B t) : term760 A B x t f s y.
Proof. exact (@lem4916518 A B x t f y s h1 (@lem4914390 B t h2)). Qed.
Lemma lem4916520 {A B : Type'} (x : A) (f : A -> B) (y : A) (s : A -> Prop) (t : B -> Prop) (h1 : @FINITE A s) (h2 : @FINITE B t) (h3 : (@CARD A s) = (@CARD B t)) : term757 A B x t f s y.
Proof. exact (@lem4916519 A B x f y s t h1 h2 (@lem4914392 A B s t h3)). Qed.
Lemma lem4916521 {A B : Type'} (x : A) (y : A) (f : A -> B) (s : A -> Prop) (t : B -> Prop) (h1 : @FINITE A s) (h2 : @FINITE B t) (h3 : (@CARD A s) = (@CARD B t)) (h4 : term692 A B f s t) : term754 A B x t f s y.
Proof. exact (@lem4916520 A B x f y s t h1 h2 h3 (@lem4914391 A B f s t h4)). Qed.
Lemma lem4916522 {A B : Type'} (x : A) (y : A) (f : A -> B) (s : A -> Prop) (t : B -> Prop) (h1 : term693 A B t s f) (h2 : @FINITE A s) (h3 : @FINITE B t) (h4 : (@CARD A s) = (@CARD B t)) (h5 : term692 A B f s t) : term751 A B x t f s y.
Proof. exact (@lem4916521 A B x y f s t h2 h3 h4 h5 (@lem4914393 A B t s f h1)). Qed.
Lemma lem4916523 {A B : Type'} (y : A) (x : A) (f : A -> B) (s : A -> Prop) (t : B -> Prop) (h1 : term693 A B t s f) (h2 : @FINITE A s) (h3 : @FINITE B t) (h4 : (@CARD A s) = (@CARD B t)) (h5 : @IN A x s) (h6 : term692 A B f s t) : term749 A B x t f s y.
Proof. exact (@lem4916522 A B x y f s t h1 h2 h3 h4 h6 (@lem4914396 A x s h5)). Qed.
Lemma lem4916524 {A B : Type'} (x : A) (y : A) (f : A -> B) (s : A -> Prop) (t : B -> Prop) (h1 : term693 A B t s f) (h2 : @FINITE A s) (h3 : @FINITE B t) (h4 : (@CARD A s) = (@CARD B t)) (h5 : @IN A x s) (h6 : @IN A y s) (h7 : term692 A B f s t) : term747 A B x t f s y.
Proof. exact (@lem4916523 A B y x f s t h1 h2 h3 h4 h5 h7 (@lem4914398 A y s h6)). Qed.
Lemma lem4916525 {A B : Type'} (x : A) (y : A) (f : A -> B) (s : A -> Prop) (t : B -> Prop) (h1 : term693 A B t s f) (h2 : @FINITE A s) (h3 : @FINITE B t) (h4 : (f x) = (f y)) (h5 : (@CARD A s) = (@CARD B t)) (h6 : @IN A x s) (h7 : @IN A y s) (h8 : term692 A B f s t) : term744 A B x t f s y.
Proof. exact (@lem4916524 A B x y f s t h1 h2 h3 h5 h6 h7 h8 (@lem4914397 A B x f y h4)). Qed.
Lemma lem4916526 {A B : Type'} (x : A) (y : A) (f : A -> B) (s : A -> Prop) (t : B -> Prop) (h1 : term693 A B t s f) (h2 : @FINITE A s) (h3 : @FINITE B t) (h4 : term688 A x y) (h5 : (f x) = (f y)) (h6 : (@CARD A s) = (@CARD B t)) (h7 : @IN A x s) (h8 : @IN A y s) (h9 : term692 A B f s t) : term736 A B t f s y.
Proof. exact (@lem4916525 A B x y f s t h1 h2 h3 h5 h6 h7 h8 h9 (@lem4914385 A x y h4)). Qed.
Lemma lem4916527 {A B : Type'} (x : A) (y : A) (f : A -> B) (s : A -> Prop) (t : B -> Prop) (h1 : term693 A B t s f) (h2 : @FINITE A s) (h3 : @FINITE B t) (h4 : term737 A B t f s y) (h5 : term688 A x y) (h6 : (f x) = (f y)) (h7 : (@CARD A s) = (@CARD B t)) (h8 : @IN A x s) (h9 : @IN A y s) (h10 : term692 A B f s t) : False.
Proof. exact (@lem4916526 A B x y f s t h1 h2 h3 h5 h6 h7 h8 h9 h10 (@lem4914639 A B t f s y h4)). Qed.
Lemma lem4916528 {A B : Type'} (x : A) (y : A) (f : A -> B) (s : A -> Prop) (t : B -> Prop) (h1 : term693 A B t s f) (h2 : @FINITE A s) (h3 : @FINITE B t) (h4 : term737 A B t f s y) (h5 : term688 A x y) (h6 : (f x) = (f y)) (h7 : (@CARD A s) = (@CARD B t)) (h8 : @IN A x s) (h9 : @IN A y s) (h10 : term692 A B f s t) : (term737 A B t f s y) = False.
Proof. exact (prop_ext (fun h11 : term737 A B t f s y => @lem4916527 A B x y f s t h1 h2 h3 h4 h5 h6 h7 h8 h9 h10) (fun h11 : False => @lem4914639 A B t f s y h4)). Qed.
Lemma lem4916529 {A B : Type'} (x : A) (y : A) (f : A -> B) (s : A -> Prop) (t : B -> Prop) (h1 : term693 A B t s f) (h2 : @FINITE A s) (h3 : @FINITE B t) (h4 : term737 A B t f s y) (h5 : term688 A x y) (h6 : (f x) = (f y)) (h7 : (@CARD A s) = (@CARD B t)) (h8 : @IN A x s) (h9 : @IN A y s) (h10 : term692 A B f s t) : False.
Proof. exact (EQ_MP (@lem4916528 A B x y f s t h1 h2 h3 h4 h5 h6 h7 h8 h9 h10) (@lem4914639 A B t f s y h4)). Qed.
Lemma lem4916530 {A B : Type'} (x : A) (y : A) (f : A -> B) (s : A -> Prop) (t : B -> Prop) (h1 : term693 A B t s f) (h2 : @FINITE A s) (h3 : @FINITE B t) (h4 : term688 A x y) (h5 : (f x) = (f y)) (h6 : (@CARD A s) = (@CARD B t)) (h7 : @IN A x s) (h8 : @IN A y s) (h9 : term692 A B f s t) : term736 A B t f s y.
Proof. exact (fun h0 : term737 A B t f s y => @lem4916529 A B x y f s t h1 h2 h3 h0 h4 h5 h6 h7 h8 h9). Qed.
Lemma lem4916531 {A B : Type'} (x : A) (y : A) (f : A -> B) (s : A -> Prop) (t : B -> Prop) (h1 : term693 A B t s f) (h2 : @FINITE A s) (h3 : @FINITE B t) (h4 : term688 A x y) (h5 : (f x) = (f y)) (h6 : (@CARD A s) = (@CARD B t)) (h7 : @IN A x s) (h8 : @IN A y s) (h9 : term692 A B f s t) : term734 A B t f s y.
Proof. exact (EQ_MP (@lem4914638 A B t f s y) (@lem4916530 A B x y f s t h1 h2 h3 h4 h5 h6 h7 h8 h9)). Qed.
Lemma lem4916532 {A B : Type'} (x : A) (y : A) (f : A -> B) (s : A -> Prop) (t : B -> Prop) (h1 : term693 A B t s f) (h2 : @FINITE A s) (h3 : @FINITE B t) (h4 : term688 A x y) (h5 : (f x) = (f y)) (h6 : (@CARD A s) = (@CARD B t)) (h7 : @IN A x s) (h8 : @IN A y s) (h9 : term692 A B f s t) : term719 A B t f s y.
Proof. exact (EQ_MP (@lem4914634 A B t f s y) (@lem4916531 A B x y f s t h1 h2 h3 h4 h5 h6 h7 h8 h9)). Qed.
Lemma lem4916533 {A B : Type'} (x : A) (y : A) (f : A -> B) (s : A -> Prop) (t : B -> Prop) (h1 : term693 A B t s f) (h2 : @FINITE A s) (h3 : @FINITE B t) (h4 : term688 A x y) (h5 : (f x) = (f y)) (h6 : (@CARD A s) = (@CARD B t)) (h7 : @IN A x s) (h8 : @IN A y s) (h9 : term692 A B f s t) : term717 A B t f s y.
Proof. exact (EQ_MP (@lem4914580 A B t f y s h2) (@lem4916532 A B x y f s t h1 h2 h3 h4 h5 h6 h7 h8 h9)). Qed.
Lemma lem4916534 {A B : Type'} (x : A) (y : A) (f : A -> B) (s : A -> Prop) (t : B -> Prop) (h1 : term693 A B t s f) (h2 : @FINITE A s) (h3 : @FINITE B t) (h4 : term688 A x y) (h5 : (f x) = (f y)) (h6 : (@CARD A s) = (@CARD B t)) (h7 : @IN A x s) (h8 : @IN A y s) (h9 : term692 A B f s t) : term701 A B t f s y.
Proof. exact (@lem4914501 A B t f s y (@lem4916533 A B x y f s t h1 h2 h3 h4 h5 h6 h7 h8 h9)). Qed.
Lemma lem4916535 {A B : Type'} (x : A) (y : A) (f : A -> B) (s : A -> Prop) (t : B -> Prop) (h1 : term693 A B t s f) (h2 : @FINITE A s) (h3 : @FINITE B t) (h4 : term688 A x y) (h5 : (f x) = (f y)) (h6 : (@CARD A s) = (@CARD B t)) (h7 : @IN A x s) (h8 : @IN A y s) (h9 : term692 A B f s t) : term698 A B f s y.
Proof. exact (EQ_MP (@lem4914497 A B f y s t h6) (@lem4916534 A B x y f s t h1 h2 h3 h4 h5 h6 h7 h8 h9)). Qed.
Lemma lem4916537 (t : Prop) : (t -> False) = (~ t).
Proof. exact (proj2 (@lem1823 t)). Qed.
Lemma lem4916538 {A B : Type'} (f : A -> B) (s : A -> Prop) (y : A) : (term993 A B f s y) = (term994 A B f s y).
Proof. exact (@lem4916537 (term698 A B f s y)). Qed.
Lemma lem4916540 (n : nat) (m : nat) : (term658 m n) = (Peano.lt n m).
Proof. exact (EQ_MP (@lem4914322 n m) (@lem4914321 m n)). Qed.
Lemma lem4916541 {A B : Type'} (f : A -> B) (y : A) (s : A -> Prop) : (term994 A B f s y) = (term995 A B f y s).
Proof. exact (@lem4916540 (term700 A B f s y) (@CARD A s)). Qed.
Lemma lem4916542 {A B : Type'} (f : A -> B) (y : A) (s : A -> Prop) : (term993 A B f s y) = (term995 A B f y s).
Proof. exact (TRANS (@lem4916538 A B f s y) (@lem4916541 A B f y s)). Qed.
Lemma lem4916543 {A B : Type'} (f : A -> B) (s : A -> Prop) (y : A) : (term995 A B f y s) = (term993 A B f s y).
Proof. exact (SYM (@lem4916542 A B f y s)). Qed.
Lemma lem4916545 (m : nat) (p : nat) : term649 m p.
Proof. exact (EQ_MP (@lem4914316 m p) (@lem4914315 m p)). Qed.
Lemma lem4916546 {A B : Type'} (f : A -> B) (y : A) (s : A -> Prop) : term996 A B f y s.
Proof. exact (@lem4916545 (term700 A B f s y) (@CARD A s)). Qed.
Lemma lem4916547 {A : Type'} (s : A -> Prop) : term704 A s.
Proof. exact (@lem3610594 A s). Qed.
Lemma lem4916548 {A : Type'} (s : A -> Prop) : (term704 A s) = (term705 A s).
Proof. exact (eq_refl (term704 A s)). Qed.
Lemma lem4916549 {A : Type'} (s : A -> Prop) : term705 A s.
Proof. exact (EQ_MP (@lem4916548 A s) (@lem4916547 A s)). Qed.
Lemma lem4916550 {A : Type'} (s : A -> Prop) (x : A) : term706 A s x.
Proof. exact (@lem4916549 A s x). Qed.
Lemma lem4916551 {A : Type'} (x : A) (s : A -> Prop) : (term706 A s x) = ((term707 A s x) = (@FINITE A s)).
Proof. exact (eq_refl (term706 A s x)). Qed.
Lemma lem4916553 {A B : Type'} (f : A -> B) : term997 A B f.
Proof. exact (@lem4008003 A B f). Qed.
Lemma lem4916554 {A B : Type'} (f : A -> B) : (term997 A B f) = (term998 A B f).
Proof. exact (eq_refl (term997 A B f)). Qed.
Lemma lem4916555 {A B : Type'} (f : A -> B) : term998 A B f.
Proof. exact (EQ_MP (@lem4916554 A B f) (@lem4916553 A B f)). Qed.
Lemma lem4916556 {A B : Type'} (f : A -> B) (s : A -> Prop) : term999 A B f s.
Proof. exact (@lem4916555 A B f s). Qed.
Lemma lem4916557 {A B : Type'} (f : A -> B) (s : A -> Prop) : (term999 A B f s) = (term1000 A B f s).
Proof. exact (eq_refl (term999 A B f s)). Qed.
Lemma lem4916558 {A B : Type'} (f : A -> B) (s : A -> Prop) : term1000 A B f s.
Proof. exact (EQ_MP (@lem4916557 A B f s) (@lem4916556 A B f s)). Qed.
Lemma lem4916559 {A : Type'} (s : A -> Prop) (h1 : @FINITE A s) : @FINITE A s.
Proof. exact (h1). Qed.
Lemma lem4916560 {A B : Type'} (f : A -> B) (s : A -> Prop) (h1 : @FINITE A s) : term1001 A B f s.
Proof. exact (@lem4916558 A B f s (@lem4916559 A s h1)). Qed.
Lemma lem4916561 {A B : Type'} (f : A -> B) (s : A -> Prop) : (term1001 A B f s) = ((term1001 A B f s) = True).
Proof. exact (@lem7 (term1001 A B f s)). Qed.
Lemma lem4916562 {A B : Type'} (f : A -> B) (s : A -> Prop) (h1 : @FINITE A s) : (term1001 A B f s) = True.
Proof. exact (EQ_MP (@lem4916561 A B f s) (@lem4916560 A B f s h1)). Qed.
Lemma lem4916568 {A : Type'} (s : A -> Prop) : (@FINITE A s) = ((@FINITE A s) = True).
Proof. exact (@lem7 (@FINITE A s)). Qed.
Lemma lem4916606 {A B : Type'} (f : A -> B) (s : A -> Prop) : term1002 A B f s.
Proof. exact (fun h0 : @FINITE A s => @lem4916562 A B f s h0). Qed.
Lemma lem4916607 {A B : Type'} (f : A -> B) (s : A -> Prop) : term1002 A B f s.
Proof. exact (@lem4916606 A B f s). Qed.
Lemma lem4916608 {A B : Type'} (f : A -> B) (s : A -> Prop) (y : A) : term1003 A B f s y.
Proof. exact (@lem4916607 A B f (@DELETE A s y)). Qed.
Lemma lem4916610 {A : Type'} (x : A) (s : A -> Prop) : (term707 A s x) = (@FINITE A s).
Proof. exact (EQ_MP (@lem4916551 A x s) (@lem4916550 A s x)). Qed.
Lemma lem4916611 {A : Type'} (x : A) (s : A -> Prop) : (term707 A s x) = (@FINITE A s).
Proof. exact (@lem4916610 A x s). Qed.
Lemma lem4916612 {A : Type'} (y : A) (s : A -> Prop) : (term707 A s y) = (@FINITE A s).
Proof. exact (@lem4916611 A y s). Qed.
Lemma lem4916614 {A : Type'} (s : A -> Prop) (h1 : @FINITE A s) : (@FINITE A s) = True.
Proof. exact (EQ_MP (@lem4916568 A s) (@lem4914388 A s h1)). Qed.
Lemma lem4916615 {A : Type'} (y : A) (s : A -> Prop) (h1 : @FINITE A s) : (term707 A s y) = True.
Proof. exact (TRANS (@lem4916612 A y s) (@lem4916614 A s h1)). Qed.
Lemma lem4916616 {A : Type'} (y : A) (s : A -> Prop) (h1 : @FINITE A s) : True = (term707 A s y).
Proof. exact (SYM (@lem4916615 A y s h1)). Qed.
Lemma lem4916617 {A : Type'} (y : A) (s : A -> Prop) (h1 : @FINITE A s) : term707 A s y.
Proof. exact (EQ_MP (@lem4916616 A y s h1) (@lem0)). Qed.
Lemma lem4916618 {A B : Type'} (f : A -> B) (y : A) (s : A -> Prop) (h1 : @FINITE A s) : (term1004 A B f s y) = True.
Proof. exact (@lem4916608 A B f s y (@lem4916617 A y s h1)). Qed.
Lemma lem4916619 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4916620 {A B : Type'} (f : A -> B) (y : A) (s : A -> Prop) (h1 : @FINITE A s) : (term1005 A B f s y) = (and True).
Proof. exact (MK_COMB (@lem4916619) (@lem4916618 A B f y s h1)). Qed.
Lemma lem4916622 {A B : Type'} (s : A -> Prop) (t : B -> Prop) (h1 : (@CARD A s) = (@CARD B t)) : (@CARD A s) = (@CARD B t).
Proof. exact (h1). Qed.
Lemma lem4916623 {A : Type'} (s : A -> Prop) (y : A) : (term1006 A s y) = (term1006 A s y).
Proof. exact (eq_refl (term1006 A s y)). Qed.
Lemma lem4916624 {A B : Type'} (y : A) (s : A -> Prop) (t : B -> Prop) (h1 : (@CARD A s) = (@CARD B t)) : (term1007 A y s) = (term1008 A B s y t).
Proof. exact (MK_COMB (@lem4916623 A s y) (@lem4916622 A B s t h1)). Qed.
Lemma lem4916625 {A B : Type'} (f : A -> B) (y : A) (s : A -> Prop) (t : B -> Prop) (h1 : @FINITE A s) (h2 : (@CARD A s) = (@CARD B t)) : (term1009 A B f y s) = (term1010 A B s y t).
Proof. exact (MK_COMB (@lem4916620 A B f y s h1) (@lem4916624 A B y s t h2)). Qed.
Lemma lem4916627 (t : Prop) : (True /\ t) = t.
Proof. exact (proj1 (@lem1842 t)). Qed.
Lemma lem4916628 {A B : Type'} (s : A -> Prop) (y : A) (t : B -> Prop) : (term1010 A B s y t) = (term1008 A B s y t).
Proof. exact (@lem4916627 (term1008 A B s y t)). Qed.
Lemma lem4916629 {A B : Type'} (f : A -> B) (y : A) (s : A -> Prop) (t : B -> Prop) (h1 : @FINITE A s) (h2 : (@CARD A s) = (@CARD B t)) : (term1009 A B f y s) = (term1008 A B s y t).
Proof. exact (TRANS (@lem4916625 A B f y s t h1 h2) (@lem4916628 A B s y t)). Qed.
Lemma lem4916630 {A B : Type'} (f : A -> B) (y : A) (s : A -> Prop) (t : B -> Prop) (h1 : @FINITE A s) (h2 : (@CARD A s) = (@CARD B t)) : (term1008 A B s y t) = (term1009 A B f y s).
Proof. exact (SYM (@lem4916629 A B f y s t h1 h2)). Qed.
Lemma lem4916631 {A : Type'} (x : A) : term1011 A x.
Proof. exact (@lem3845383 A x). Qed.
Lemma lem4916632 {A : Type'} (x : A) : (term1011 A x) = (term1012 A x).
Proof. exact (eq_refl (term1011 A x)). Qed.
Lemma lem4916633 {A : Type'} (x : A) : term1012 A x.
Proof. exact (EQ_MP (@lem4916632 A x) (@lem4916631 A x)). Qed.
Lemma lem4916634 {A : Type'} (x : A) (s : A -> Prop) : term1013 A x s.
Proof. exact (@lem4916633 A x s). Qed.
Lemma lem4916635 {A : Type'} (x : A) (s : A -> Prop) : (term1013 A x s) = (term1014 A x s).
Proof. exact (eq_refl (term1013 A x s)). Qed.
Lemma lem4916636 {A : Type'} (x : A) (s : A -> Prop) : term1014 A x s.
Proof. exact (EQ_MP (@lem4916635 A x s) (@lem4916634 A x s)). Qed.
Lemma lem4916637 {A : Type'} (s : A -> Prop) (h1 : @FINITE A s) : @FINITE A s.
Proof. exact (h1). Qed.
Lemma lem4916638 {A : Type'} (x : A) (s : A -> Prop) (h1 : @FINITE A s) : (term1015 A s x) = (term1016 A x s).
Proof. exact (@lem4916636 A x s (@lem4916637 A s h1)). Qed.
Lemma lem4916644 {A : Type'} (s : A -> Prop) : (@FINITE A s) = ((@FINITE A s) = True).
Proof. exact (@lem7 (@FINITE A s)). Qed.
Lemma lem4916664 {A : Type'} (y : A) (s : A -> Prop) : (@IN A y s) = ((@IN A y s) = True).
Proof. exact (@lem7 (@IN A y s)). Qed.
Lemma lem4916680 {A : Type'} (x : A) (s : A -> Prop) : term1014 A x s.
Proof. exact (fun h0 : @FINITE A s => @lem4916638 A x s h0). Qed.
Lemma lem4916681 {A : Type'} (x : A) (s : A -> Prop) : term1014 A x s.
Proof. exact (@lem4916680 A x s). Qed.
Lemma lem4916682 {A : Type'} (y : A) (s : A -> Prop) : term1014 A y s.
Proof. exact (@lem4916681 A y s). Qed.
Lemma lem4916684 {A : Type'} (s : A -> Prop) (h1 : @FINITE A s) : (@FINITE A s) = True.
Proof. exact (EQ_MP (@lem4916644 A s) (@lem4914388 A s h1)). Qed.
Lemma lem4916685 {A : Type'} (s : A -> Prop) (h1 : @FINITE A s) : True = (@FINITE A s).
Proof. exact (SYM (@lem4916684 A s h1)). Qed.
Lemma lem4916686 {A : Type'} (s : A -> Prop) (h1 : @FINITE A s) : @FINITE A s.
Proof. exact (EQ_MP (@lem4916685 A s h1) (@lem0)). Qed.
Lemma lem4916687 {A : Type'} (y : A) (s : A -> Prop) (h1 : @FINITE A s) : (term1015 A s y) = (term1016 A y s).
Proof. exact (@lem4916682 A y s (@lem4916686 A s h1)). Qed.
Lemma lem4916689 {_2963 : Type'} (g : Prop) (t : _2963) (e : _2963) (g' : Prop) (t' : _2963) (e' : _2963) : term1017 _2963 g t e g' t' e'.
Proof. exact (EQ_MP (@lem14781 _2963 g t e g' t' e') (@lem15222 _2963 g t e g' t' e')). Qed.
Lemma lem4916690 {_2963 : Type'} (g : Prop) (t : _2963) (e : _2963) (g' : Prop) (t' : _2963) : term1018 _2963 g t e g' t'.
Proof. exact (fun e' : _2963 => @lem4916689 _2963 g t e g' t' e'). Qed.
Lemma lem4916691 {_2963 : Type'} (g : Prop) (t : _2963) (e : _2963) (g' : Prop) : term1019 _2963 g t e g'.
Proof. exact (fun t' : _2963 => @lem4916690 _2963 g t e g' t'). Qed.
Lemma lem4916692 {_2963 : Type'} (g : Prop) (t : _2963) (e : _2963) : term1020 _2963 g t e.
Proof. exact (fun g' : Prop => @lem4916691 _2963 g t e g'). Qed.
Lemma lem4916693 (g : Prop) (t : nat) (e : nat) : term1021 g t e.
Proof. exact (@lem4916692 nat g t e). Qed.
Lemma lem4916694 {A : Type'} (y : A) (s : A -> Prop) : term1022 A y s.
Proof. exact (@lem4916693 (@IN A y s) (term1023 A s) (@CARD A s)). Qed.
Lemma lem4916695 {A : Type'} (y : A) (s : A -> Prop) (g' : Prop) : term1024 A y s g'.
Proof. exact (@lem4916694 A y s g'). Qed.
Lemma lem4916696 {A : Type'} (y : A) (s : A -> Prop) (g' : Prop) : (term1024 A y s g') = (term1025 A y s g').
Proof. exact (eq_refl (term1024 A y s g')). Qed.
Lemma lem4916697 {A : Type'} (y : A) (s : A -> Prop) (g' : Prop) : term1025 A y s g'.
Proof. exact (EQ_MP (@lem4916696 A y s g') (@lem4916695 A y s g')). Qed.
Lemma lem4916698 {A : Type'} (y : A) (s : A -> Prop) (g' : Prop) (t' : nat) : term1026 A y s g' t'.
Proof. exact (@lem4916697 A y s g' t'). Qed.
Lemma lem4916699 {A : Type'} (y : A) (s : A -> Prop) (g' : Prop) (t' : nat) : (term1026 A y s g' t') = (term1027 A y s g' t').
Proof. exact (eq_refl (term1026 A y s g' t')). Qed.
Lemma lem4916700 {A : Type'} (y : A) (s : A -> Prop) (g' : Prop) (t' : nat) : term1027 A y s g' t'.
Proof. exact (EQ_MP (@lem4916699 A y s g' t') (@lem4916698 A y s g' t')). Qed.
Lemma lem4916701 {A : Type'} (y : A) (s : A -> Prop) (g' : Prop) (t' : nat) (e' : nat) : term1028 A y s g' t' e'.
Proof. exact (@lem4916700 A y s g' t' e'). Qed.
Lemma lem4916702 {A : Type'} (y : A) (s : A -> Prop) (g' : Prop) (t' : nat) (e' : nat) : (term1028 A y s g' t' e') = (term1029 A y s g' t' e').
Proof. exact (eq_refl (term1028 A y s g' t' e')). Qed.
Lemma lem4916703 {A : Type'} (y : A) (s : A -> Prop) (g' : Prop) (t' : nat) (e' : nat) : term1029 A y s g' t' e'.
Proof. exact (EQ_MP (@lem4916702 A y s g' t' e') (@lem4916701 A y s g' t' e')). Qed.
Lemma lem4916705 {A : Type'} (y : A) (s : A -> Prop) (h1 : @IN A y s) : (@IN A y s) = True.
Proof. exact (EQ_MP (@lem4916664 A y s) (@lem4914398 A y s h1)). Qed.
Lemma lem4916706 {A : Type'} (y : A) (s : A -> Prop) (t' : nat) (e' : nat) : term1030 A y s t' e'.
Proof. exact (@lem4916703 A y s True t' e'). Qed.
Lemma lem4916707 {A : Type'} (t' : nat) (e' : nat) (y : A) (s : A -> Prop) (h1 : @IN A y s) : term1031 A y s t' e'.
Proof. exact (@lem4916706 A y s t' e' (@lem4916705 A y s h1)). Qed.
Lemma lem4916714 {A B : Type'} (s : A -> Prop) (t : B -> Prop) (h1 : (@CARD A s) = (@CARD B t)) : (@CARD A s) = (@CARD B t).
Proof. exact (h1). Qed.
Lemma lem4916715 : Nat.sub = Nat.sub.
Proof. exact (eq_refl Nat.sub). Qed.
Lemma lem4916716 {A B : Type'} (s : A -> Prop) (t : B -> Prop) (h1 : (@CARD A s) = (@CARD B t)) : (term1032 A s) = (term1032 B t).
Proof. exact (MK_COMB (@lem4916715) (@lem4916714 A B s t h1)). Qed.
Lemma lem4916717 : term18 = term18.
Proof. exact (eq_refl term18). Qed.
Lemma lem4916718 {A B : Type'} (s : A -> Prop) (t : B -> Prop) (h1 : (@CARD A s) = (@CARD B t)) : (term1023 A s) = (term1023 B t).
Proof. exact (MK_COMB (@lem4916716 A B s t h1) (@lem4916717)). Qed.
Lemma lem4916719 {A B : Type'} (s : A -> Prop) (t : B -> Prop) (h1 : (@CARD A s) = (@CARD B t)) : term1033 A B s t.
Proof. exact (fun h0 : True => @lem4916718 A B s t h1). Qed.
Lemma lem4916720 {A B : Type'} (t : B -> Prop) (e' : nat) (y : A) (s : A -> Prop) (h1 : @IN A y s) : term1034 A B y s t e'.
Proof. exact (@lem4916707 A (term1023 B t) e' y s h1). Qed.
Lemma lem4916721 {A B : Type'} (e' : nat) (t : B -> Prop) (y : A) (s : A -> Prop) (h1 : (@CARD A s) = (@CARD B t)) (h2 : @IN A y s) : term1035 A B y s t e'.
Proof. exact (@lem4916720 A B t e' y s h2 (@lem4916719 A B s t h1)). Qed.
Lemma lem4916726 {A B : Type'} (s : A -> Prop) (t : B -> Prop) (h1 : (@CARD A s) = (@CARD B t)) : (@CARD A s) = (@CARD B t).
Proof. exact (h1). Qed.
Lemma lem4916727 {A B : Type'} (s : A -> Prop) (t : B -> Prop) (h1 : (@CARD A s) = (@CARD B t)) : term1036 A B s t.
Proof. exact (fun h0 : ~ True => @lem4916726 A B s t h1). Qed.
Lemma lem4916728 {A B : Type'} (t : B -> Prop) (y : A) (s : A -> Prop) (h1 : (@CARD A s) = (@CARD B t)) (h2 : @IN A y s) : term1037 A B y s t.
Proof. exact (@lem4916721 A B (@CARD B t) t y s h1 h2). Qed.
Lemma lem4916729 {A B : Type'} (t : B -> Prop) (y : A) (s : A -> Prop) (h1 : (@CARD A s) = (@CARD B t)) (h2 : @IN A y s) : (term1016 A y s) = (term1038 B t).
Proof. exact (@lem4916728 A B t y s h1 h2 (@lem4916727 A B s t h1)). Qed.
Lemma lem4916731 {A : Type'} (t2 : A) (t1 : A) : (@COND A True t1 t2) = t1.
Proof. exact (proj1 (@lem12653 A t1 t2)). Qed.
Lemma lem4916732 (t2 : nat) (t1 : nat) : (@COND nat True t1 t2) = t1.
Proof. exact (@lem4916731 nat t2 t1). Qed.
Lemma lem4916733 {B : Type'} (t : B -> Prop) : (term1038 B t) = (term1023 B t).
Proof. exact (@lem4916732 (@CARD B t) (term1023 B t)). Qed.
Lemma lem4916734 {A B : Type'} (t : B -> Prop) (y : A) (s : A -> Prop) (h1 : (@CARD A s) = (@CARD B t)) (h2 : @IN A y s) : (term1016 A y s) = (term1023 B t).
Proof. exact (TRANS (@lem4916729 A B t y s h1 h2) (@lem4916733 B t)). Qed.
Lemma lem4916735 {A B : Type'} (t : B -> Prop) (y : A) (s : A -> Prop) (h1 : @FINITE A s) (h2 : (@CARD A s) = (@CARD B t)) (h3 : @IN A y s) : (term1015 A s y) = (term1023 B t).
Proof. exact (TRANS (@lem4916687 A y s h1) (@lem4916734 A B t y s h2 h3)). Qed.
Lemma lem4916736 : Peano.lt = Peano.lt.
Proof. exact (eq_refl Peano.lt). Qed.
Lemma lem4916737 {A B : Type'} (t : B -> Prop) (y : A) (s : A -> Prop) (h1 : @FINITE A s) (h2 : (@CARD A s) = (@CARD B t)) (h3 : @IN A y s) : (term1006 A s y) = (term1039 B t).
Proof. exact (MK_COMB (@lem4916736) (@lem4916735 A B t y s h1 h2 h3)). Qed.
Lemma lem4916738 {B : Type'} (t : B -> Prop) : (@CARD B t) = (@CARD B t).
Proof. exact (eq_refl (@CARD B t)). Qed.
Lemma lem4916739 {A B : Type'} (t : B -> Prop) (y : A) (s : A -> Prop) (h1 : @FINITE A s) (h2 : (@CARD A s) = (@CARD B t)) (h3 : @IN A y s) : (term1008 A B s y t) = (term1040 B t).
Proof. exact (MK_COMB (@lem4916737 A B t y s h1 h2 h3) (@lem4916738 B t)). Qed.
Lemma lem4916741 (x : nat) : (term14 x) = (term15 x).
Proof. exact (EQ_MP (@lem4914288 x) (@lem4914287 x)). Qed.
Lemma lem4916742 {B : Type'} (t : B -> Prop) : (term1040 B t) = (term1041 B t).
Proof. exact (@lem4916741 (@CARD B t)). Qed.
Lemma lem4916745 {A B : Type'} (t : B -> Prop) (y : A) (s : A -> Prop) (h1 : @FINITE A s) (h2 : (@CARD A s) = (@CARD B t)) (h3 : @IN A y s) : (term1008 A B s y t) = (term1041 B t).
Proof. exact (TRANS (@lem4916739 A B t y s h1 h2 h3) (@lem4916742 B t)). Qed.
Lemma lem4916746 {A B : Type'} (t : B -> Prop) (y : A) (s : A -> Prop) (h1 : @FINITE A s) (h2 : (@CARD A s) = (@CARD B t)) (h3 : @IN A y s) : (term1041 B t) = (term1008 A B s y t).
Proof. exact (SYM (@lem4916745 A B t y s h1 h2 h3)). Qed.
Lemma lem4916747 {B : Type'} (t : B -> Prop) (h1 : (@CARD B t) = (NUMERAL 0)) : (@CARD B t) = (NUMERAL 0).
Proof. exact (h1). Qed.
Lemma lem4916748 {A : Type'} : term1042 A.
Proof. exact (@lem3854502 A). Qed.
Lemma lem4916749 {B : Type'} : term1042 B.
Proof. exact (@lem3854502 B). Qed.
Lemma lem4916752 {B : Type'} : term1043 B.
Proof. exact (@lem3216368 B). Qed.
Lemma lem4916753 {A : Type'} : term1043 A.
Proof. exact (@lem3216368 A). Qed.
Lemma lem4916756 {_99911 : Type'} : term1043 _99911.
Proof. exact (@lem3216368 _99911). Qed.
Lemma lem4916762 {_99911 A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) (y : A) (t : B -> Prop) (h1 : term1044 _99911 A B s f x y t) : term1044 _99911 A B s f x y t.
Proof. exact (h1). Qed.
Lemma lem4916763 {_99911 A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) (y : A) (t : B -> Prop) : term1045 _99911 A B s f x y t.
Proof. exact (fun h0 : term1044 _99911 A B s f x y t => @lem4916762 _99911 A B s f x y t h0). Qed.
Lemma lem4916764 {_99911 A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) (y : A) (t : B -> Prop) (h1 : term1045 _99911 A B s f x y t) : term1045 _99911 A B s f x y t.
Proof. exact (h1). Qed.
Lemma lem4916765 {_99911 A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) (y : A) (t : B -> Prop) (h1 : term1044 _99911 A B s f x y t) : term1044 _99911 A B s f x y t.
Proof. exact (h1). Qed.
Lemma lem4916766 {_99911 A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) (y : A) (t : B -> Prop) (h1 : term1044 _99911 A B s f x y t) (h2 : term1045 _99911 A B s f x y t) : term1044 _99911 A B s f x y t.
Proof. exact (@lem4916764 _99911 A B s f x y t h2 (@lem4916765 _99911 A B s f x y t h1)). Qed.
Lemma lem4916767 {_99911 A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) (y : A) (t : B -> Prop) (h1 : term1044 _99911 A B s f x y t) : term1046 _99911 A B s f x y t.
Proof. exact (fun h0 : term1045 _99911 A B s f x y t => @lem4916766 _99911 A B s f x y t h1 h0). Qed.
Lemma lem4916768 {_99911 A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) (y : A) (t : B -> Prop) (h1 : term1045 _99911 A B s f x y t) : term1045 _99911 A B s f x y t.
Proof. exact (h1). Qed.
Lemma lem4916769 {_99911 A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) (y : A) (t : B -> Prop) (h1 : term1044 _99911 A B s f x y t) (h2 : term1045 _99911 A B s f x y t) : term1044 _99911 A B s f x y t.
Proof. exact (@lem4916767 _99911 A B s f x y t h1 (@lem4916768 _99911 A B s f x y t h2)). Qed.
Lemma lem4916770 {_99911 A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) (y : A) (t : B -> Prop) (h1 : term1045 _99911 A B s f x y t) : term1045 _99911 A B s f x y t.
Proof. exact (fun h0 : term1044 _99911 A B s f x y t => @lem4916769 _99911 A B s f x y t h0 h1). Qed.
Lemma lem4916771 {_99911 A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) (y : A) (t : B -> Prop) : term1047 _99911 A B s f x y t.
Proof. exact (fun h0 : term1045 _99911 A B s f x y t => @lem4916770 _99911 A B s f x y t h0). Qed.
Lemma lem4916774 {_99911 A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) (y : A) (t : B -> Prop) : term1045 _99911 A B s f x y t.
Proof. exact (@lem4916771 _99911 A B s f x y t (@lem4916763 _99911 A B s f x y t)). Qed.
Lemma lem4916775 {_99911 A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) (y : A) (t : B -> Prop) : term1045 _99911 A B s f x y t.
Proof. exact (@lem4916774 _99911 A B s f x y t). Qed.
Lemma lem4916919 (t : Prop) : (t -> False) = (~ t).
Proof. exact (proj2 (@lem16474 t)). Qed.
Lemma lem4916920 {B : Type'} : (term1048 B) = (term1049 B).
Proof. exact (@lem4916919 (term1042 B)). Qed.
Lemma lem4916927 {A : Type'} : (term1050 A) = (term1050 A).
Proof. exact (eq_refl (term1050 A)). Qed.
Lemma lem4916928 {A B : Type'} : (term1051 A B) = (term1052 A B).
Proof. exact (MK_COMB (@lem4916927 A) (@lem4916920 B)). Qed.
Lemma lem4916931 {_99911 : Type'} : (term1050 _99911) = (term1050 _99911).
Proof. exact (eq_refl (term1050 _99911)). Qed.
Lemma lem4916932 {_99911 A B : Type'} : (term1053 _99911 A B) = (term1054 _99911 A B).
Proof. exact (MK_COMB (@lem4916931 _99911) (@lem4916928 A B)). Qed.
Lemma lem4916935 {B : Type'} : (term1055 B) = (term1055 B).
Proof. exact (eq_refl (term1055 B)). Qed.
Lemma lem4916936 {_99911 A B : Type'} : (term1056 _99911 A B) = (term1057 _99911 A B).
Proof. exact (MK_COMB (@lem4916935 B) (@lem4916932 _99911 A B)). Qed.
Lemma lem4916939 {A : Type'} : (term1055 A) = (term1055 A).
Proof. exact (eq_refl (term1055 A)). Qed.
Lemma lem4916940 {_99911 A B : Type'} : (term1058 _99911 A B) = (term1059 _99911 A B).
Proof. exact (MK_COMB (@lem4916939 A) (@lem4916936 _99911 A B)). Qed.
Lemma lem4916943 {_99911 : Type'} : (term1055 _99911) = (term1055 _99911).
Proof. exact (eq_refl (term1055 _99911)). Qed.
Lemma lem4916944 {_99911 A B : Type'} : (term1060 _99911 A B) = (term1061 _99911 A B).
Proof. exact (MK_COMB (@lem4916943 _99911) (@lem4916940 _99911 A B)). Qed.
Lemma lem4916947 {B : Type'} (t : B -> Prop) : (term1062 B t) = (term1062 B t).
Proof. exact (eq_refl (term1062 B t)). Qed.
Lemma lem4916948 {_99911 A B : Type'} (t : B -> Prop) : (term1063 _99911 A B t) = (term1064 _99911 A B t).
Proof. exact (MK_COMB (@lem4916947 B t) (@lem4916944 _99911 A B)). Qed.
Lemma lem4916951 {A : Type'} (x : A) (y : A) : (term743 A x y) = (term743 A x y).
Proof. exact (eq_refl (term743 A x y)). Qed.
Lemma lem4916952 {_99911 A B : Type'} (x : A) (y : A) (t : B -> Prop) : (term1065 _99911 A B x y t) = (term1066 _99911 A B x y t).
Proof. exact (MK_COMB (@lem4916951 A x y) (@lem4916948 _99911 A B t)). Qed.
Lemma lem4916955 {A B : Type'} (x : A) (f : A -> B) (y : A) : (term746 A B x f y) = (term746 A B x f y).
Proof. exact (eq_refl (term746 A B x f y)). Qed.
Lemma lem4916956 {_99911 A B : Type'} (f : A -> B) (x : A) (y : A) (t : B -> Prop) : (term1067 _99911 A B f x y t) = (term1068 _99911 A B f x y t).
Proof. exact (MK_COMB (@lem4916955 A B x f y) (@lem4916952 _99911 A B x y t)). Qed.
Lemma lem4916959 {A : Type'} (y : A) (s : A -> Prop) : (term729 A y s) = (term729 A y s).
Proof. exact (eq_refl (term729 A y s)). Qed.
Lemma lem4916960 {_99911 A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) (y : A) (t : B -> Prop) : (term1069 _99911 A B s f x y t) = (term1070 _99911 A B s f x y t).
Proof. exact (MK_COMB (@lem4916959 A y s) (@lem4916956 _99911 A B f x y t)). Qed.
Lemma lem4916963 {A : Type'} (x : A) (s : A -> Prop) : (term729 A x s) = (term729 A x s).
Proof. exact (eq_refl (term729 A x s)). Qed.
Lemma lem4916964 {_99911 A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) (y : A) (t : B -> Prop) : (term1071 _99911 A B s f x y t) = (term1072 _99911 A B s f x y t).
Proof. exact (MK_COMB (@lem4916963 A x s) (@lem4916960 _99911 A B s f x y t)). Qed.
Lemma lem4916967 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (f : A -> B) : (term753 A B t s f) = (term753 A B t s f).
Proof. exact (eq_refl (term753 A B t s f)). Qed.
Lemma lem4916968 {_99911 A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) (y : A) (t : B -> Prop) : (term1073 _99911 A B s f x y t) = (term1074 _99911 A B s f x y t).
Proof. exact (MK_COMB (@lem4916967 A B t s f) (@lem4916964 _99911 A B s f x y t)). Qed.
Lemma lem4916971 {A B : Type'} (f : A -> B) (s : A -> Prop) (t : B -> Prop) : (term756 A B f s t) = (term756 A B f s t).
Proof. exact (eq_refl (term756 A B f s t)). Qed.
Lemma lem4916972 {_99911 A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) (y : A) (t : B -> Prop) : (term1075 _99911 A B s f x y t) = (term1076 _99911 A B s f x y t).
Proof. exact (MK_COMB (@lem4916971 A B f s t) (@lem4916968 _99911 A B s f x y t)). Qed.
Lemma lem4916975 {A B : Type'} (s : A -> Prop) (t : B -> Prop) : (term759 A B s t) = (term759 A B s t).
Proof. exact (eq_refl (term759 A B s t)). Qed.
Lemma lem4916976 {_99911 A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) (y : A) (t : B -> Prop) : (term1077 _99911 A B s f x y t) = (term1078 _99911 A B s f x y t).
Proof. exact (MK_COMB (@lem4916975 A B s t) (@lem4916972 _99911 A B s f x y t)). Qed.
Lemma lem4916979 {B : Type'} (t : B -> Prop) : (term762 B t) = (term762 B t).
Proof. exact (eq_refl (term762 B t)). Qed.
Lemma lem4916980 {_99911 A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) (y : A) (t : B -> Prop) : (term1079 _99911 A B s f x y t) = (term1080 _99911 A B s f x y t).
Proof. exact (MK_COMB (@lem4916979 B t) (@lem4916976 _99911 A B s f x y t)). Qed.
Lemma lem4916983 {A : Type'} (s : A -> Prop) : (term762 A s) = (term762 A s).
Proof. exact (eq_refl (term762 A s)). Qed.
Lemma lem4916984 {_99911 A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) (y : A) (t : B -> Prop) : (term1044 _99911 A B s f x y t) = (term1081 _99911 A B s f x y t).
Proof. exact (MK_COMB (@lem4916983 A s) (@lem4916980 _99911 A B s f x y t)). Qed.
Lemma lem4916987 {_99911 A B : Type'} (f : A -> B) (x : A) (y : A) (t : B -> Prop) : (term1082 _99911 A B f x y t) = (term1083 _99911 A B f x y t).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4916984 _99911 A B s f x y t)). Qed.
Lemma lem4916988 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4916989 {_99911 A B : Type'} (f : A -> B) (x : A) (y : A) (t : B -> Prop) : (term1084 _99911 A B f x y t) = (term1085 _99911 A B f x y t).
Proof. exact (MK_COMB (@lem4916988 A) (@lem4916987 _99911 A B f x y t)). Qed.
Lemma lem4916994 {_99911 A B : Type'} (x : A) (y : A) (t : B -> Prop) : (term1086 _99911 A B x y t) = (term1087 _99911 A B x y t).
Proof. exact (fun_ext (fun f : A -> B => @lem4916989 _99911 A B f x y t)). Qed.
Lemma lem4916995 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem4916996 {_99911 A B : Type'} (x : A) (y : A) (t : B -> Prop) : (term1088 _99911 A B x y t) = (term1089 _99911 A B x y t).
Proof. exact (MK_COMB (@lem4916995 A B) (@lem4916994 _99911 A B x y t)). Qed.
Lemma lem4917001 {_99911 A B : Type'} (y : A) (t : B -> Prop) : (term1090 _99911 A B y t) = (term1091 _99911 A B y t).
Proof. exact (fun_ext (fun x : A => @lem4916996 _99911 A B x y t)). Qed.
Lemma lem4917002 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4917003 {_99911 A B : Type'} (y : A) (t : B -> Prop) : (term1092 _99911 A B y t) = (term1093 _99911 A B y t).
Proof. exact (MK_COMB (@lem4917002 A) (@lem4917001 _99911 A B y t)). Qed.
Lemma lem4917008 {_99911 A B : Type'} (t : B -> Prop) : (term1094 _99911 A B t) = (term1095 _99911 A B t).
Proof. exact (fun_ext (fun y : A => @lem4917003 _99911 A B y t)). Qed.
Lemma lem4917009 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4917010 {_99911 A B : Type'} (t : B -> Prop) : (term1096 _99911 A B t) = (term1097 _99911 A B t).
Proof. exact (MK_COMB (@lem4917009 A) (@lem4917008 _99911 A B t)). Qed.
Lemma lem4917015 {_99911 A B : Type'} : (term1098 _99911 A B) = (term1099 _99911 A B).
Proof. exact (fun_ext (fun t : B -> Prop => @lem4917010 _99911 A B t)). Qed.
Lemma lem4917016 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4917025 {_99911 A B : Type'} : (term1100 _99911 A B) = (term1101 _99911 A B).
Proof. exact (MK_COMB (@lem4917016 B) (@lem4917015 _99911 A B)). Qed.
Lemma lem4917034 {B : Type'} (s : B -> Prop) : (term1102 B s) = (term1102 B s).
Proof. exact (eq_refl (term1102 B s)). Qed.
Lemma lem4917035 {B : Type'} : (term1103 B) = (term1103 B).
Proof. exact (fun_ext (fun s : B -> Prop => @lem4917034 B s)). Qed.
Lemma lem4917036 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4917037 {B : Type'} : (term1042 B) = (term1042 B).
Proof. exact (MK_COMB (@lem4917036 B) (@lem4917035 B)). Qed.
Lemma lem4917038 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem4917039 {B : Type'} : (term1049 B) = (term1049 B).
Proof. exact (MK_COMB (@lem4917038) (@lem4917037 B)). Qed.
Lemma lem4917048 {A : Type'} (s : A -> Prop) : (term1102 A s) = (term1102 A s).
Proof. exact (eq_refl (term1102 A s)). Qed.
Lemma lem4917049 {A : Type'} : (term1103 A) = (term1103 A).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4917048 A s)). Qed.
Lemma lem4917050 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4917051 {A : Type'} : (term1042 A) = (term1042 A).
Proof. exact (MK_COMB (@lem4917050 A) (@lem4917049 A)). Qed.
Lemma lem4917052 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4917053 {A : Type'} : (term1050 A) = (term1050 A).
Proof. exact (MK_COMB (@lem4917052) (@lem4917051 A)). Qed.
Lemma lem4917054 {A B : Type'} : (term1052 A B) = (term1052 A B).
Proof. exact (MK_COMB (@lem4917053 A) (@lem4917039 B)). Qed.
Lemma lem4917063 {_99911 : Type'} (s : _99911 -> Prop) : (term1102 _99911 s) = (term1102 _99911 s).
Proof. exact (eq_refl (term1102 _99911 s)). Qed.
Lemma lem4917064 {_99911 : Type'} : (term1103 _99911) = (term1103 _99911).
Proof. exact (fun_ext (fun s : _99911 -> Prop => @lem4917063 _99911 s)). Qed.
Lemma lem4917065 {_99911 : Type'} : (@all (_99911 -> Prop)) = (@all (_99911 -> Prop)).
Proof. exact (eq_refl (@all (_99911 -> Prop))). Qed.
Lemma lem4917066 {_99911 : Type'} : (term1042 _99911) = (term1042 _99911).
Proof. exact (MK_COMB (@lem4917065 _99911) (@lem4917064 _99911)). Qed.
Lemma lem4917067 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4917068 {_99911 : Type'} : (term1050 _99911) = (term1050 _99911).
Proof. exact (MK_COMB (@lem4917067) (@lem4917066 _99911)). Qed.
Lemma lem4917069 {_99911 A B : Type'} : (term1054 _99911 A B) = (term1054 _99911 A B).
Proof. exact (MK_COMB (@lem4917068 _99911) (@lem4917054 A B)). Qed.
Lemma lem4917072 {B : Type'} (s : B -> Prop) : (term1104 B s) = (term1104 B s).
Proof. exact (eq_refl (term1104 B s)). Qed.
Lemma lem4917073 {B : Type'} (x : B) (s : B -> Prop) : (@IN B x s) = (@IN B x s).
Proof. exact (eq_refl (@IN B x s)). Qed.
Lemma lem4917074 {B : Type'} (s : B -> Prop) : (term1105 B s) = (term1105 B s).
Proof. exact (fun_ext (fun x : B => @lem4917073 B x s)). Qed.
Lemma lem4917075 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem4917076 {B : Type'} (s : B -> Prop) : (term1106 B s) = (term1106 B s).
Proof. exact (MK_COMB (@lem4917075 B) (@lem4917074 B s)). Qed.
Lemma lem4917077 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4917078 {B : Type'} (s : B -> Prop) : (term1107 B s) = (term1107 B s).
Proof. exact (MK_COMB (@lem4917077) (@lem4917076 B s)). Qed.
Lemma lem4917079 {B : Type'} (s : B -> Prop) : ((term1106 B s) = (term1104 B s)) = ((term1106 B s) = (term1104 B s)).
Proof. exact (MK_COMB (@lem4917078 B s) (@lem4917072 B s)). Qed.
Lemma lem4917080 {B : Type'} : (term1108 B) = (term1108 B).
Proof. exact (fun_ext (fun s : B -> Prop => @lem4917079 B s)). Qed.
Lemma lem4917081 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4917082 {B : Type'} : (term1043 B) = (term1043 B).
Proof. exact (MK_COMB (@lem4917081 B) (@lem4917080 B)). Qed.
Lemma lem4917083 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4917084 {B : Type'} : (term1055 B) = (term1055 B).
Proof. exact (MK_COMB (@lem4917083) (@lem4917082 B)). Qed.
Lemma lem4917085 {_99911 A B : Type'} : (term1057 _99911 A B) = (term1057 _99911 A B).
Proof. exact (MK_COMB (@lem4917084 B) (@lem4917069 _99911 A B)). Qed.
Lemma lem4917088 {A : Type'} (s : A -> Prop) : (term1104 A s) = (term1104 A s).
Proof. exact (eq_refl (term1104 A s)). Qed.
Lemma lem4917089 {A : Type'} (x : A) (s : A -> Prop) : (@IN A x s) = (@IN A x s).
Proof. exact (eq_refl (@IN A x s)). Qed.
Lemma lem4917090 {A : Type'} (s : A -> Prop) : (term1105 A s) = (term1105 A s).
Proof. exact (fun_ext (fun x : A => @lem4917089 A x s)). Qed.
Lemma lem4917091 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem4917092 {A : Type'} (s : A -> Prop) : (term1106 A s) = (term1106 A s).
Proof. exact (MK_COMB (@lem4917091 A) (@lem4917090 A s)). Qed.
Lemma lem4917093 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4917094 {A : Type'} (s : A -> Prop) : (term1107 A s) = (term1107 A s).
Proof. exact (MK_COMB (@lem4917093) (@lem4917092 A s)). Qed.
Lemma lem4917095 {A : Type'} (s : A -> Prop) : ((term1106 A s) = (term1104 A s)) = ((term1106 A s) = (term1104 A s)).
Proof. exact (MK_COMB (@lem4917094 A s) (@lem4917088 A s)). Qed.
Lemma lem4917096 {A : Type'} : (term1108 A) = (term1108 A).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4917095 A s)). Qed.
Lemma lem4917097 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4917098 {A : Type'} : (term1043 A) = (term1043 A).
Proof. exact (MK_COMB (@lem4917097 A) (@lem4917096 A)). Qed.
Lemma lem4917099 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4917100 {A : Type'} : (term1055 A) = (term1055 A).
Proof. exact (MK_COMB (@lem4917099) (@lem4917098 A)). Qed.
Lemma lem4917101 {_99911 A B : Type'} : (term1059 _99911 A B) = (term1059 _99911 A B).
Proof. exact (MK_COMB (@lem4917100 A) (@lem4917085 _99911 A B)). Qed.
Lemma lem4917104 {_99911 : Type'} (s : _99911 -> Prop) : (term1104 _99911 s) = (term1104 _99911 s).
Proof. exact (eq_refl (term1104 _99911 s)). Qed.
Lemma lem4917105 {_99911 : Type'} (x : _99911) (s : _99911 -> Prop) : (@IN _99911 x s) = (@IN _99911 x s).
Proof. exact (eq_refl (@IN _99911 x s)). Qed.
Lemma lem4917106 {_99911 : Type'} (s : _99911 -> Prop) : (term1105 _99911 s) = (term1105 _99911 s).
Proof. exact (fun_ext (fun x : _99911 => @lem4917105 _99911 x s)). Qed.
Lemma lem4917107 {_99911 : Type'} : (@ex _99911) = (@ex _99911).
Proof. exact (eq_refl (@ex _99911)). Qed.
Lemma lem4917108 {_99911 : Type'} (s : _99911 -> Prop) : (term1106 _99911 s) = (term1106 _99911 s).
Proof. exact (MK_COMB (@lem4917107 _99911) (@lem4917106 _99911 s)). Qed.
Lemma lem4917109 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4917110 {_99911 : Type'} (s : _99911 -> Prop) : (term1107 _99911 s) = (term1107 _99911 s).
Proof. exact (MK_COMB (@lem4917109) (@lem4917108 _99911 s)). Qed.
Lemma lem4917111 {_99911 : Type'} (s : _99911 -> Prop) : ((term1106 _99911 s) = (term1104 _99911 s)) = ((term1106 _99911 s) = (term1104 _99911 s)).
Proof. exact (MK_COMB (@lem4917110 _99911 s) (@lem4917104 _99911 s)). Qed.
Lemma lem4917112 {_99911 : Type'} : (term1108 _99911) = (term1108 _99911).
Proof. exact (fun_ext (fun s : _99911 -> Prop => @lem4917111 _99911 s)). Qed.
Lemma lem4917113 {_99911 : Type'} : (@all (_99911 -> Prop)) = (@all (_99911 -> Prop)).
Proof. exact (eq_refl (@all (_99911 -> Prop))). Qed.
Lemma lem4917114 {_99911 : Type'} : (term1043 _99911) = (term1043 _99911).
Proof. exact (MK_COMB (@lem4917113 _99911) (@lem4917112 _99911)). Qed.
Lemma lem4917115 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4917116 {_99911 : Type'} : (term1055 _99911) = (term1055 _99911).
Proof. exact (MK_COMB (@lem4917115) (@lem4917114 _99911)). Qed.
Lemma lem4917117 {_99911 A B : Type'} : (term1061 _99911 A B) = (term1061 _99911 A B).
Proof. exact (MK_COMB (@lem4917116 _99911) (@lem4917101 _99911 A B)). Qed.
Lemma lem4917120 {B : Type'} (t : B -> Prop) : (term1062 B t) = (term1062 B t).
Proof. exact (eq_refl (term1062 B t)). Qed.
Lemma lem4917121 {_99911 A B : Type'} (t : B -> Prop) : (term1064 _99911 A B t) = (term1064 _99911 A B t).
Proof. exact (MK_COMB (@lem4917120 B t) (@lem4917117 _99911 A B)). Qed.
Lemma lem4917126 {A : Type'} (x : A) (y : A) : (term743 A x y) = (term743 A x y).
Proof. exact (eq_refl (term743 A x y)). Qed.
Lemma lem4917127 {_99911 A B : Type'} (x : A) (y : A) (t : B -> Prop) : (term1066 _99911 A B x y t) = (term1066 _99911 A B x y t).
Proof. exact (MK_COMB (@lem4917126 A x y) (@lem4917121 _99911 A B t)). Qed.
Lemma lem4917130 {A B : Type'} (x : A) (f : A -> B) (y : A) : (term746 A B x f y) = (term746 A B x f y).
Proof. exact (eq_refl (term746 A B x f y)). Qed.
Lemma lem4917131 {_99911 A B : Type'} (f : A -> B) (x : A) (y : A) (t : B -> Prop) : (term1068 _99911 A B f x y t) = (term1068 _99911 A B f x y t).
Proof. exact (MK_COMB (@lem4917130 A B x f y) (@lem4917127 _99911 A B x y t)). Qed.
Lemma lem4917134 {A : Type'} (y : A) (s : A -> Prop) : (term729 A y s) = (term729 A y s).
Proof. exact (eq_refl (term729 A y s)). Qed.
Lemma lem4917135 {_99911 A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) (y : A) (t : B -> Prop) : (term1070 _99911 A B s f x y t) = (term1070 _99911 A B s f x y t).
Proof. exact (MK_COMB (@lem4917134 A y s) (@lem4917131 _99911 A B f x y t)). Qed.
Lemma lem4917138 {A : Type'} (x : A) (s : A -> Prop) : (term729 A x s) = (term729 A x s).
Proof. exact (eq_refl (term729 A x s)). Qed.
Lemma lem4917139 {_99911 A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) (y : A) (t : B -> Prop) : (term1072 _99911 A B s f x y t) = (term1072 _99911 A B s f x y t).
Proof. exact (MK_COMB (@lem4917138 A x s) (@lem4917135 _99911 A B s f x y t)). Qed.
Lemma lem4917144 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) (y : B) : (term786 A B s f x y) = (term786 A B s f x y).
Proof. exact (eq_refl (term786 A B s f x y)). Qed.
Lemma lem4917145 {A B : Type'} (s : A -> Prop) (f : A -> B) (y : B) : (term787 A B s f y) = (term787 A B s f y).
Proof. exact (fun_ext (fun x : A => @lem4917144 A B s f x y)). Qed.
Lemma lem4917146 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem4917147 {A B : Type'} (s : A -> Prop) (f : A -> B) (y : B) : (term788 A B s f y) = (term788 A B s f y).
Proof. exact (MK_COMB (@lem4917146 A) (@lem4917145 A B s f y)). Qed.
Lemma lem4917150 {B : Type'} (y : B) (t : B -> Prop) : (term729 B y t) = (term729 B y t).
Proof. exact (eq_refl (term729 B y t)). Qed.
Lemma lem4917151 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (f : A -> B) (y : B) : (term789 A B t s f y) = (term789 A B t s f y).
Proof. exact (MK_COMB (@lem4917150 B y t) (@lem4917147 A B s f y)). Qed.
Lemma lem4917152 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (f : A -> B) : (term790 A B t s f) = (term790 A B t s f).
Proof. exact (fun_ext (fun y : B => @lem4917151 A B t s f y)). Qed.
Lemma lem4917153 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4917154 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (f : A -> B) : (term693 A B t s f) = (term693 A B t s f).
Proof. exact (MK_COMB (@lem4917153 B) (@lem4917152 A B t s f)). Qed.
Lemma lem4917155 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4917156 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (f : A -> B) : (term753 A B t s f) = (term753 A B t s f).
Proof. exact (MK_COMB (@lem4917155) (@lem4917154 A B t s f)). Qed.
Lemma lem4917157 {_99911 A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) (y : A) (t : B -> Prop) : (term1074 _99911 A B s f x y t) = (term1074 _99911 A B s f x y t).
Proof. exact (MK_COMB (@lem4917156 A B t s f) (@lem4917139 _99911 A B s f x y t)). Qed.
Lemma lem4917160 {A B : Type'} (f : A -> B) (s : A -> Prop) (t : B -> Prop) : (term756 A B f s t) = (term756 A B f s t).
Proof. exact (eq_refl (term756 A B f s t)). Qed.
Lemma lem4917161 {_99911 A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) (y : A) (t : B -> Prop) : (term1076 _99911 A B s f x y t) = (term1076 _99911 A B s f x y t).
Proof. exact (MK_COMB (@lem4917160 A B f s t) (@lem4917157 _99911 A B s f x y t)). Qed.
Lemma lem4917164 {A B : Type'} (s : A -> Prop) (t : B -> Prop) : (term759 A B s t) = (term759 A B s t).
Proof. exact (eq_refl (term759 A B s t)). Qed.
Lemma lem4917165 {_99911 A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) (y : A) (t : B -> Prop) : (term1078 _99911 A B s f x y t) = (term1078 _99911 A B s f x y t).
Proof. exact (MK_COMB (@lem4917164 A B s t) (@lem4917161 _99911 A B s f x y t)). Qed.
Lemma lem4917168 {B : Type'} (t : B -> Prop) : (term762 B t) = (term762 B t).
Proof. exact (eq_refl (term762 B t)). Qed.
Lemma lem4917169 {_99911 A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) (y : A) (t : B -> Prop) : (term1080 _99911 A B s f x y t) = (term1080 _99911 A B s f x y t).
Proof. exact (MK_COMB (@lem4917168 B t) (@lem4917165 _99911 A B s f x y t)). Qed.
Lemma lem4917172 {A : Type'} (s : A -> Prop) : (term762 A s) = (term762 A s).
Proof. exact (eq_refl (term762 A s)). Qed.
Lemma lem4917173 {_99911 A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) (y : A) (t : B -> Prop) : (term1081 _99911 A B s f x y t) = (term1081 _99911 A B s f x y t).
Proof. exact (MK_COMB (@lem4917172 A s) (@lem4917169 _99911 A B s f x y t)). Qed.
Lemma lem4917174 {_99911 A B : Type'} (f : A -> B) (x : A) (y : A) (t : B -> Prop) : (term1083 _99911 A B f x y t) = (term1083 _99911 A B f x y t).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4917173 _99911 A B s f x y t)). Qed.
Lemma lem4917175 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4917176 {_99911 A B : Type'} (f : A -> B) (x : A) (y : A) (t : B -> Prop) : (term1085 _99911 A B f x y t) = (term1085 _99911 A B f x y t).
Proof. exact (MK_COMB (@lem4917175 A) (@lem4917174 _99911 A B f x y t)). Qed.
Lemma lem4917177 {_99911 A B : Type'} (x : A) (y : A) (t : B -> Prop) : (term1087 _99911 A B x y t) = (term1087 _99911 A B x y t).
Proof. exact (fun_ext (fun f : A -> B => @lem4917176 _99911 A B f x y t)). Qed.
Lemma lem4917178 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem4917179 {_99911 A B : Type'} (x : A) (y : A) (t : B -> Prop) : (term1089 _99911 A B x y t) = (term1089 _99911 A B x y t).
Proof. exact (MK_COMB (@lem4917178 A B) (@lem4917177 _99911 A B x y t)). Qed.
Lemma lem4917180 {_99911 A B : Type'} (y : A) (t : B -> Prop) : (term1091 _99911 A B y t) = (term1091 _99911 A B y t).
Proof. exact (fun_ext (fun x : A => @lem4917179 _99911 A B x y t)). Qed.
Lemma lem4917181 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4917182 {_99911 A B : Type'} (y : A) (t : B -> Prop) : (term1093 _99911 A B y t) = (term1093 _99911 A B y t).
Proof. exact (MK_COMB (@lem4917181 A) (@lem4917180 _99911 A B y t)). Qed.
Lemma lem4917183 {_99911 A B : Type'} (t : B -> Prop) : (term1095 _99911 A B t) = (term1095 _99911 A B t).
Proof. exact (fun_ext (fun y : A => @lem4917182 _99911 A B y t)). Qed.
Lemma lem4917184 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4917185 {_99911 A B : Type'} (t : B -> Prop) : (term1097 _99911 A B t) = (term1097 _99911 A B t).
Proof. exact (MK_COMB (@lem4917184 A) (@lem4917183 _99911 A B t)). Qed.
Lemma lem4917186 {_99911 A B : Type'} : (term1099 _99911 A B) = (term1099 _99911 A B).
Proof. exact (fun_ext (fun t : B -> Prop => @lem4917185 _99911 A B t)). Qed.
Lemma lem4917187 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4917188 {_99911 A B : Type'} : (term1101 _99911 A B) = (term1101 _99911 A B).
Proof. exact (MK_COMB (@lem4917187 B) (@lem4917186 _99911 A B)). Qed.
Lemma lem4917327 {_99911 A B : Type'} : (term1100 _99911 A B) = (term1101 _99911 A B).
Proof. exact (TRANS (@lem4917025 _99911 A B) (@lem4917188 _99911 A B)). Qed.
Lemma lem4917328 {_99911 A B : Type'} : (term1101 _99911 A B) = (term1100 _99911 A B).
Proof. exact (SYM (@lem4917327 _99911 A B)). Qed.
Lemma lem4917333 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (f : A -> B) (h1 : term693 A B t s f) : term693 A B t s f.
Proof. exact (h1). Qed.
Lemma lem4917339 {_99911 : Type'} (h1 : term1043 _99911) : term1043 _99911.
Proof. exact (h1). Qed.
Lemma lem4917340 {A : Type'} (h1 : term1043 A) : term1043 A.
Proof. exact (h1). Qed.
Lemma lem4917341 {B : Type'} (h1 : term1043 B) : term1043 B.
Proof. exact (h1). Qed.
Lemma lem4917343 {A : Type'} (h1 : term1042 A) : term1042 A.
Proof. exact (h1). Qed.
Lemma lem4917350 {A : Type'} (s : A -> Prop) (h1 : @FINITE A s) : @FINITE A s.
Proof. exact (h1). Qed.
Lemma lem4917362 {A B : Type'} (s : A -> Prop) (t : B -> Prop) (h1 : (@CARD A s) = (@CARD B t)) : (@CARD A s) = (@CARD B t).
Proof. exact (h1). Qed.
Lemma lem4917374 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) (y : B) : (term786 A B s f x y) = (term786 A B s f x y).
Proof. exact (eq_refl (term786 A B s f x y)). Qed.
Lemma lem4917375 {A B : Type'} (s : A -> Prop) (f : A -> B) (y : B) : (term787 A B s f y) = (term787 A B s f y).
Proof. exact (fun_ext (fun x : A => @lem4917374 A B s f x y)). Qed.
Lemma lem4917376 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem4917377 {A B : Type'} (s : A -> Prop) (f : A -> B) (y : B) : (term788 A B s f y) = (term788 A B s f y).
Proof. exact (MK_COMB (@lem4917376 A) (@lem4917375 A B s f y)). Qed.
Lemma lem4917379 {B : Type'} (y : B) (t : B -> Prop) : (term793 B y t) = (term793 B y t).
Proof. exact (eq_refl (term793 B y t)). Qed.
Lemma lem4917380 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (f : A -> B) (y : B) : (term794 A B t s f y) = (term794 A B t s f y).
Proof. exact (MK_COMB (@lem4917379 B y t) (@lem4917377 A B s f y)). Qed.
Lemma lem4917381 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (f : A -> B) (y : B) : (term789 A B t s f y) = (term794 A B t s f y).
Proof. exact (@lem17265 (@IN B y t) (term788 A B s f y)). Qed.
Lemma lem4917382 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (f : A -> B) (y : B) : (term789 A B t s f y) = (term794 A B t s f y).
Proof. exact (TRANS (@lem4917381 A B t s f y) (@lem4917380 A B t s f y)). Qed.
Lemma lem4917383 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (f : A -> B) : (term790 A B t s f) = (term795 A B t s f).
Proof. exact (fun_ext (fun y : B => @lem4917382 A B t s f y)). Qed.
Lemma lem4917384 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4917385 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (f : A -> B) : (term693 A B t s f) = (term796 A B t s f).
Proof. exact (MK_COMB (@lem4917384 B) (@lem4917383 A B t s f)). Qed.
Lemma lem4917484 {A : Type'} (P : Prop) (Q : A -> Prop) : (term797 A P Q) = (term798 A P Q).
Proof. exact (EQ_MP (@lem18911 A P Q) (@lem18910 A P Q)). Qed.
Lemma lem4917485 {A : Type'} (P : Prop) (Q : A -> Prop) : (term797 A P Q) = (term798 A P Q).
Proof. exact (@lem4917484 A P Q). Qed.
Lemma lem4917486 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (f : A -> B) (y : B) : (term799 A B t s f y) = (term800 A B t s f y).
Proof. exact (@lem4917485 A (term801 B y t) (term787 A B s f y)). Qed.
Lemma lem4917487 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) (y : B) : (term802 A B s f y x) = (term786 A B s f x y).
Proof. exact (eq_refl (term802 A B s f y x)). Qed.
Lemma lem4917488 {A B : Type'} (s : A -> Prop) (f : A -> B) (y : B) : (term803 A B s f y) = (term787 A B s f y).
Proof. exact (fun_ext (fun x : A => @lem4917487 A B s f x y)). Qed.
Lemma lem4917489 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem4917490 {A B : Type'} (s : A -> Prop) (f : A -> B) (y : B) : (term804 A B s f y) = (term788 A B s f y).
Proof. exact (MK_COMB (@lem4917489 A) (@lem4917488 A B s f y)). Qed.
Lemma lem4917491 {B : Type'} (y : B) (t : B -> Prop) : (term793 B y t) = (term793 B y t).
Proof. exact (eq_refl (term793 B y t)). Qed.
Lemma lem4917492 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (f : A -> B) (y : B) : (term799 A B t s f y) = (term794 A B t s f y).
Proof. exact (MK_COMB (@lem4917491 B y t) (@lem4917490 A B s f y)). Qed.
Lemma lem4917493 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4917494 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (f : A -> B) (y : B) : (term805 A B t s f y) = (term806 A B t s f y).
Proof. exact (MK_COMB (@lem4917493) (@lem4917492 A B t s f y)). Qed.
Lemma lem4917495 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) (y : B) : (term802 A B s f y x) = (term786 A B s f x y).
Proof. exact (eq_refl (term802 A B s f y x)). Qed.
Lemma lem4917496 {B : Type'} (y : B) (t : B -> Prop) : (term793 B y t) = (term793 B y t).
Proof. exact (eq_refl (term793 B y t)). Qed.
Lemma lem4917497 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (f : A -> B) (x : A) (y : B) : (term807 A B t s f y x) = (term808 A B t s f x y).
Proof. exact (MK_COMB (@lem4917496 B y t) (@lem4917495 A B s f x y)). Qed.
Lemma lem4917498 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (f : A -> B) (y : B) : (term809 A B t s f y) = (term810 A B t s f y).
Proof. exact (fun_ext (fun x : A => @lem4917497 A B t s f x y)). Qed.
Lemma lem4917499 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem4917500 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (f : A -> B) (y : B) : (term800 A B t s f y) = (term811 A B t s f y).
Proof. exact (MK_COMB (@lem4917499 A) (@lem4917498 A B t s f y)). Qed.
Lemma lem4917501 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (f : A -> B) (y : B) : ((term799 A B t s f y) = (term800 A B t s f y)) = ((term794 A B t s f y) = (term811 A B t s f y)).
Proof. exact (MK_COMB (@lem4917494 A B t s f y) (@lem4917500 A B t s f y)). Qed.
Lemma lem4917502 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (f : A -> B) (y : B) : (term794 A B t s f y) = (term811 A B t s f y).
Proof. exact (EQ_MP (@lem4917501 A B t s f y) (@lem4917486 A B t s f y)). Qed.
Lemma lem4917503 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (f : A -> B) : (term795 A B t s f) = (term812 A B t s f).
Proof. exact (fun_ext (fun y : B => @lem4917502 A B t s f y)). Qed.
Lemma lem4917504 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4917505 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (f : A -> B) : (term796 A B t s f) = (term813 A B t s f).
Proof. exact (MK_COMB (@lem4917504 B) (@lem4917503 A B t s f)). Qed.
Lemma lem4917507 {A B : Type'} (P : type1413 A B) : (term814 A B P) = (term815 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem4917508 {A B : Type'} (P : type1470 A B) : (term816 A B P) = (term817 A B P).
Proof. exact (@lem4917507 B A P). Qed.
Lemma lem4917509 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (f : A -> B) : (term818 A B t s f) = (term819 A B t s f).
Proof. exact (@lem4917508 A B (term820 A B t s f)). Qed.
Lemma lem4917510 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (f : A -> B) (y : B) : (term821 A B t s f y) = (term810 A B t s f y).
Proof. exact (eq_refl (term821 A B t s f y)). Qed.
Lemma lem4917511 {A : Type'} (x : A) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem4917512 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (f : A -> B) (y : B) (x : A) : (term822 A B t s f y x) = (term823 A B t s f y x).
Proof. exact (MK_COMB (@lem4917510 A B t s f y) (@lem4917511 A x)). Qed.
Lemma lem4917513 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (f : A -> B) (x : A) (y : B) : (term823 A B t s f y x) = (term808 A B t s f x y).
Proof. exact (eq_refl (term823 A B t s f y x)). Qed.
Lemma lem4917514 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (f : A -> B) (x : A) (y : B) : (term822 A B t s f y x) = (term808 A B t s f x y).
Proof. exact (TRANS (@lem4917512 A B t s f y x) (@lem4917513 A B t s f x y)). Qed.
Lemma lem4917515 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (f : A -> B) (y : B) : (term824 A B t s f y) = (term810 A B t s f y).
Proof. exact (fun_ext (fun x : A => @lem4917514 A B t s f x y)). Qed.
Lemma lem4917516 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem4917517 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (f : A -> B) (y : B) : (term825 A B t s f y) = (term811 A B t s f y).
Proof. exact (MK_COMB (@lem4917516 A) (@lem4917515 A B t s f y)). Qed.
Lemma lem4917518 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (f : A -> B) : (term826 A B t s f) = (term812 A B t s f).
Proof. exact (fun_ext (fun y : B => @lem4917517 A B t s f y)). Qed.
Lemma lem4917519 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4917520 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (f : A -> B) : (term818 A B t s f) = (term813 A B t s f).
Proof. exact (MK_COMB (@lem4917519 B) (@lem4917518 A B t s f)). Qed.
Lemma lem4917521 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4917522 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (f : A -> B) : (term827 A B t s f) = (term828 A B t s f).
Proof. exact (MK_COMB (@lem4917521) (@lem4917520 A B t s f)). Qed.
Lemma lem4917523 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (f : A -> B) (y : B) : (term821 A B t s f y) = (term810 A B t s f y).
Proof. exact (eq_refl (term821 A B t s f y)). Qed.
Lemma lem4917524 {A B : Type'} (x : B -> A) (y : B) : (x y) = (x y).
Proof. exact (eq_refl (x y)). Qed.
Lemma lem4917525 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (f : A -> B) (x : B -> A) (y : B) : (term829 A B t s f x y) = (term830 A B t s f x y).
Proof. exact (MK_COMB (@lem4917523 A B t s f y) (@lem4917524 A B x y)). Qed.
Lemma lem4917526 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (f : A -> B) (x : B -> A) (y : B) : (term830 A B t s f x y) = (term831 A B t s f x y).
Proof. exact (eq_refl (term830 A B t s f x y)). Qed.
Lemma lem4917527 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (f : A -> B) (x : B -> A) (y : B) : (term829 A B t s f x y) = (term831 A B t s f x y).
Proof. exact (TRANS (@lem4917525 A B t s f x y) (@lem4917526 A B t s f x y)). Qed.
Lemma lem4917528 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (f : A -> B) (x : B -> A) : (term832 A B t s f x) = (term833 A B t s f x).
Proof. exact (fun_ext (fun y : B => @lem4917527 A B t s f x y)). Qed.
Lemma lem4917529 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4917530 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (f : A -> B) (x : B -> A) : (term834 A B t s f x) = (term835 A B t s f x).
Proof. exact (MK_COMB (@lem4917529 B) (@lem4917528 A B t s f x)). Qed.
Lemma lem4917531 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (f : A -> B) : (term836 A B t s f) = (term837 A B t s f).
Proof. exact (fun_ext (fun x : B -> A => @lem4917530 A B t s f x)). Qed.
Lemma lem4917532 {A B : Type'} : (@ex (B -> A)) = (@ex (B -> A)).
Proof. exact (eq_refl (@ex (B -> A))). Qed.
Lemma lem4917533 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (f : A -> B) : (term819 A B t s f) = (term838 A B t s f).
Proof. exact (MK_COMB (@lem4917532 A B) (@lem4917531 A B t s f)). Qed.
Lemma lem4917534 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (f : A -> B) : ((term818 A B t s f) = (term819 A B t s f)) = ((term813 A B t s f) = (term838 A B t s f)).
Proof. exact (MK_COMB (@lem4917522 A B t s f) (@lem4917533 A B t s f)). Qed.
Lemma lem4917535 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (f : A -> B) : (term813 A B t s f) = (term838 A B t s f).
Proof. exact (EQ_MP (@lem4917534 A B t s f) (@lem4917509 A B t s f)). Qed.
Lemma lem4917537 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (f : A -> B) : (term796 A B t s f) = (term838 A B t s f).
Proof. exact (TRANS (@lem4917505 A B t s f) (@lem4917535 A B t s f)). Qed.
Lemma lem4917538 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (f : A -> B) : (term693 A B t s f) = (term838 A B t s f).
Proof. exact (TRANS (@lem4917385 A B t s f) (@lem4917537 A B t s f)). Qed.
Lemma lem4917539 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (f : A -> B) (h1 : term693 A B t s f) : term838 A B t s f.
Proof. exact (EQ_MP (@lem4917538 A B t s f) (@lem4917333 A B t s f h1)). Qed.
Lemma lem4917551 {A : Type'} (y : A) (s : A -> Prop) (h1 : @IN A y s) : @IN A y s.
Proof. exact (h1). Qed.
Lemma lem4917569 {B : Type'} (t : B -> Prop) (h1 : (@CARD B t) = (NUMERAL 0)) : (@CARD B t) = (NUMERAL 0).
Proof. exact (h1). Qed.
Lemma lem4917571 {_99911 : Type'} (x : _99911) (s : _99911 -> Prop) : (@IN _99911 x s) = (@IN _99911 x s).
Proof. exact (eq_refl (@IN _99911 x s)). Qed.
Lemma lem4917572 {_99911 : Type'} (P : _99911 -> Prop) : (term847 _99911 P) = (term848 _99911 P).
Proof. exact (@lem18394 _99911 P). Qed.
Lemma lem4917573 {_99911 : Type'} (s : _99911 -> Prop) : (term1109 _99911 s) = (term1110 _99911 s).
Proof. exact (@lem4917572 _99911 (term1105 _99911 s)). Qed.
Lemma lem4917574 {_99911 : Type'} (x : _99911) (s : _99911 -> Prop) : (term1111 _99911 s x) = (@IN _99911 x s).
Proof. exact (eq_refl (term1111 _99911 s x)). Qed.
Lemma lem4917575 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem4917577 {_99911 : Type'} (x : _99911) (s : _99911 -> Prop) : (term1112 _99911 s x) = (term801 _99911 x s).
Proof. exact (MK_COMB (@lem4917575) (@lem4917574 _99911 x s)). Qed.
Lemma lem4917578 {_99911 : Type'} (s : _99911 -> Prop) : (term1113 _99911 s) = (term1114 _99911 s).
Proof. exact (fun_ext (fun x : _99911 => @lem4917577 _99911 x s)). Qed.
Lemma lem4917579 {_99911 : Type'} : (@all _99911) = (@all _99911).
Proof. exact (eq_refl (@all _99911)). Qed.
Lemma lem4917580 {_99911 : Type'} (s : _99911 -> Prop) : (term1110 _99911 s) = (term1115 _99911 s).
Proof. exact (MK_COMB (@lem4917579 _99911) (@lem4917578 _99911 s)). Qed.
Lemma lem4917581 {_99911 : Type'} (s : _99911 -> Prop) : (term1109 _99911 s) = (term1115 _99911 s).
Proof. exact (TRANS (@lem4917573 _99911 s) (@lem4917580 _99911 s)). Qed.
Lemma lem4917582 {_99911 : Type'} (s : _99911 -> Prop) : (term1105 _99911 s) = (term1105 _99911 s).
Proof. exact (fun_ext (fun x : _99911 => @lem4917571 _99911 x s)). Qed.
Lemma lem4917583 {_99911 : Type'} : (@ex _99911) = (@ex _99911).
Proof. exact (eq_refl (@ex _99911)). Qed.
Lemma lem4917584 {_99911 : Type'} (s : _99911 -> Prop) : (term1106 _99911 s) = (term1106 _99911 s).
Proof. exact (MK_COMB (@lem4917583 _99911) (@lem4917582 _99911 s)). Qed.
Lemma lem4917585 {_99911 : Type'} (s : _99911 -> Prop) : (term1104 _99911 s) = (term1104 _99911 s).
Proof. exact (eq_refl (term1104 _99911 s)). Qed.
Lemma lem4917588 {_99911 : Type'} (s : _99911 -> Prop) : (term1116 _99911 s) = (s = (@EMPTY _99911)).
Proof. exact (@lem16933 (s = (@EMPTY _99911))). Qed.
Lemma lem4917589 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4917590 {_99911 : Type'} (s : _99911 -> Prop) : (term1117 _99911 s) = (term1118 _99911 s).
Proof. exact (MK_COMB (@lem4917589) (@lem4917581 _99911 s)). Qed.
Lemma lem4917591 {_99911 : Type'} (s : _99911 -> Prop) : (term1119 _99911 s) = (term1120 _99911 s).
Proof. exact (MK_COMB (@lem4917590 _99911 s) (@lem4917585 _99911 s)). Qed.
Lemma lem4917592 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4917593 {_99911 : Type'} (s : _99911 -> Prop) : (term1121 _99911 s) = (term1121 _99911 s).
Proof. exact (MK_COMB (@lem4917592) (@lem4917584 _99911 s)). Qed.
Lemma lem4917594 {_99911 : Type'} (s : _99911 -> Prop) : (term1122 _99911 s) = (term1123 _99911 s).
Proof. exact (MK_COMB (@lem4917593 _99911 s) (@lem4917588 _99911 s)). Qed.
Lemma lem4917595 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4917596 {_99911 : Type'} (s : _99911 -> Prop) : (term1124 _99911 s) = (term1125 _99911 s).
Proof. exact (MK_COMB (@lem4917595) (@lem4917594 _99911 s)). Qed.
Lemma lem4917597 {_99911 : Type'} (s : _99911 -> Prop) : (term1126 _99911 s) = (term1127 _99911 s).
Proof. exact (MK_COMB (@lem4917596 _99911 s) (@lem4917591 _99911 s)). Qed.
Lemma lem4917598 {_99911 : Type'} (s : _99911 -> Prop) : ((term1106 _99911 s) = (term1104 _99911 s)) = (term1126 _99911 s).
Proof. exact (@lem17784 (term1106 _99911 s) (term1104 _99911 s)). Qed.
Lemma lem4917599 {_99911 : Type'} (s : _99911 -> Prop) : ((term1106 _99911 s) = (term1104 _99911 s)) = (term1127 _99911 s).
Proof. exact (TRANS (@lem4917598 _99911 s) (@lem4917597 _99911 s)). Qed.
Lemma lem4917600 {_99911 : Type'} : (term1108 _99911) = (term1128 _99911).
Proof. exact (fun_ext (fun s : _99911 -> Prop => @lem4917599 _99911 s)). Qed.
Lemma lem4917601 {_99911 : Type'} : (@all (_99911 -> Prop)) = (@all (_99911 -> Prop)).
Proof. exact (eq_refl (@all (_99911 -> Prop))). Qed.
Lemma lem4917602 {_99911 : Type'} : (term1043 _99911) = (term1129 _99911).
Proof. exact (MK_COMB (@lem4917601 _99911) (@lem4917600 _99911)). Qed.
Lemma lem4917604 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term1130 A P Q) = (term1131 A P Q).
Proof. exact (EQ_MP (@lem18953 A P Q) (@lem18952 A P Q)). Qed.
Lemma lem4917605 {_99911 : Type'} (P : type686 _99911) (Q : type686 _99911) : (term1132 _99911 P Q) = (term1133 _99911 P Q).
Proof. exact (@lem4917604 (_99911 -> Prop) P Q). Qed.
Lemma lem4917606 {_99911 : Type'} : (term1134 _99911) = (term1135 _99911).
Proof. exact (@lem4917605 _99911 (term1136 _99911) (term1137 _99911)). Qed.
Lemma lem4917607 {_99911 : Type'} (s : _99911 -> Prop) : (term1138 _99911 s) = (term1123 _99911 s).
Proof. exact (eq_refl (term1138 _99911 s)). Qed.
Lemma lem4917608 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4917609 {_99911 : Type'} (s : _99911 -> Prop) : (term1139 _99911 s) = (term1125 _99911 s).
Proof. exact (MK_COMB (@lem4917608) (@lem4917607 _99911 s)). Qed.
Lemma lem4917610 {_99911 : Type'} (s : _99911 -> Prop) : (term1140 _99911 s) = (term1120 _99911 s).
Proof. exact (eq_refl (term1140 _99911 s)). Qed.
Lemma lem4917611 {_99911 : Type'} (s : _99911 -> Prop) : (term1141 _99911 s) = (term1127 _99911 s).
Proof. exact (MK_COMB (@lem4917609 _99911 s) (@lem4917610 _99911 s)). Qed.
Lemma lem4917612 {_99911 : Type'} : (term1142 _99911) = (term1128 _99911).
Proof. exact (fun_ext (fun s : _99911 -> Prop => @lem4917611 _99911 s)). Qed.
Lemma lem4917613 {_99911 : Type'} : (@all (_99911 -> Prop)) = (@all (_99911 -> Prop)).
Proof. exact (eq_refl (@all (_99911 -> Prop))). Qed.
Lemma lem4917614 {_99911 : Type'} : (term1134 _99911) = (term1129 _99911).
Proof. exact (MK_COMB (@lem4917613 _99911) (@lem4917612 _99911)). Qed.
Lemma lem4917615 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4917616 {_99911 : Type'} : (term1143 _99911) = (term1144 _99911).
Proof. exact (MK_COMB (@lem4917615) (@lem4917614 _99911)). Qed.
Lemma lem4917617 {_99911 : Type'} (s : _99911 -> Prop) : (term1138 _99911 s) = (term1123 _99911 s).
Proof. exact (eq_refl (term1138 _99911 s)). Qed.
Lemma lem4917618 {_99911 : Type'} : (term1145 _99911) = (term1136 _99911).
Proof. exact (fun_ext (fun s : _99911 -> Prop => @lem4917617 _99911 s)). Qed.
Lemma lem4917619 {_99911 : Type'} : (@all (_99911 -> Prop)) = (@all (_99911 -> Prop)).
Proof. exact (eq_refl (@all (_99911 -> Prop))). Qed.
Lemma lem4917620 {_99911 : Type'} : (term1146 _99911) = (term1147 _99911).
Proof. exact (MK_COMB (@lem4917619 _99911) (@lem4917618 _99911)). Qed.
Lemma lem4917621 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4917622 {_99911 : Type'} : (term1148 _99911) = (term1149 _99911).
Proof. exact (MK_COMB (@lem4917621) (@lem4917620 _99911)). Qed.
Lemma lem4917623 {_99911 : Type'} (s : _99911 -> Prop) : (term1140 _99911 s) = (term1120 _99911 s).
Proof. exact (eq_refl (term1140 _99911 s)). Qed.
Lemma lem4917624 {_99911 : Type'} : (term1150 _99911) = (term1137 _99911).
Proof. exact (fun_ext (fun s : _99911 -> Prop => @lem4917623 _99911 s)). Qed.
Lemma lem4917625 {_99911 : Type'} : (@all (_99911 -> Prop)) = (@all (_99911 -> Prop)).
Proof. exact (eq_refl (@all (_99911 -> Prop))). Qed.
Lemma lem4917626 {_99911 : Type'} : (term1151 _99911) = (term1152 _99911).
Proof. exact (MK_COMB (@lem4917625 _99911) (@lem4917624 _99911)). Qed.
Lemma lem4917627 {_99911 : Type'} : (term1135 _99911) = (term1153 _99911).
Proof. exact (MK_COMB (@lem4917622 _99911) (@lem4917626 _99911)). Qed.
Lemma lem4917628 {_99911 : Type'} : ((term1134 _99911) = (term1135 _99911)) = ((term1129 _99911) = (term1153 _99911)).
Proof. exact (MK_COMB (@lem4917616 _99911) (@lem4917627 _99911)). Qed.
Lemma lem4917629 {_99911 : Type'} : (term1129 _99911) = (term1153 _99911).
Proof. exact (EQ_MP (@lem4917628 _99911) (@lem4917606 _99911)). Qed.
Lemma lem4917735 {A : Type'} (P : A -> Prop) (Q : Prop) : (term1154 A P Q) = (term1155 A P Q).
Proof. exact (EQ_MP (@lem18905 A P Q) (@lem18904 A P Q)). Qed.
Lemma lem4917736 {_99911 : Type'} (P : _99911 -> Prop) (Q : Prop) : (term1154 _99911 P Q) = (term1155 _99911 P Q).
Proof. exact (@lem4917735 _99911 P Q). Qed.
Lemma lem4917737 {_99911 : Type'} (s : _99911 -> Prop) : (term1156 _99911 s) = (term1157 _99911 s).
Proof. exact (@lem4917736 _99911 (term1105 _99911 s) (s = (@EMPTY _99911))). Qed.
Lemma lem4917738 {_99911 : Type'} (x : _99911) (s : _99911 -> Prop) : (term1111 _99911 s x) = (@IN _99911 x s).
Proof. exact (eq_refl (term1111 _99911 s x)). Qed.
Lemma lem4917739 {_99911 : Type'} (s : _99911 -> Prop) : (term1158 _99911 s) = (term1105 _99911 s).
Proof. exact (fun_ext (fun x : _99911 => @lem4917738 _99911 x s)). Qed.
Lemma lem4917740 {_99911 : Type'} : (@ex _99911) = (@ex _99911).
Proof. exact (eq_refl (@ex _99911)). Qed.
Lemma lem4917741 {_99911 : Type'} (s : _99911 -> Prop) : (term1159 _99911 s) = (term1106 _99911 s).
Proof. exact (MK_COMB (@lem4917740 _99911) (@lem4917739 _99911 s)). Qed.
Lemma lem4917742 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4917743 {_99911 : Type'} (s : _99911 -> Prop) : (term1160 _99911 s) = (term1121 _99911 s).
Proof. exact (MK_COMB (@lem4917742) (@lem4917741 _99911 s)). Qed.
Lemma lem4917744 {_99911 : Type'} (s : _99911 -> Prop) : (s = (@EMPTY _99911)) = (s = (@EMPTY _99911)).
Proof. exact (eq_refl (s = (@EMPTY _99911))). Qed.
Lemma lem4917745 {_99911 : Type'} (s : _99911 -> Prop) : (term1156 _99911 s) = (term1123 _99911 s).
Proof. exact (MK_COMB (@lem4917743 _99911 s) (@lem4917744 _99911 s)). Qed.
Lemma lem4917746 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4917747 {_99911 : Type'} (s : _99911 -> Prop) : (term1161 _99911 s) = (term1162 _99911 s).
Proof. exact (MK_COMB (@lem4917746) (@lem4917745 _99911 s)). Qed.
Lemma lem4917748 {_99911 : Type'} (x : _99911) (s : _99911 -> Prop) : (term1111 _99911 s x) = (@IN _99911 x s).
Proof. exact (eq_refl (term1111 _99911 s x)). Qed.
Lemma lem4917749 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4917750 {_99911 : Type'} (x : _99911) (s : _99911 -> Prop) : (term1163 _99911 s x) = (term1164 _99911 x s).
Proof. exact (MK_COMB (@lem4917749) (@lem4917748 _99911 x s)). Qed.
Lemma lem4917751 {_99911 : Type'} (s : _99911 -> Prop) : (s = (@EMPTY _99911)) = (s = (@EMPTY _99911)).
Proof. exact (eq_refl (s = (@EMPTY _99911))). Qed.
Lemma lem4917752 {_99911 : Type'} (x : _99911) (s : _99911 -> Prop) : (term1165 _99911 x s) = (term1166 _99911 x s).
Proof. exact (MK_COMB (@lem4917750 _99911 x s) (@lem4917751 _99911 s)). Qed.
Lemma lem4917753 {_99911 : Type'} (s : _99911 -> Prop) : (term1167 _99911 s) = (term1168 _99911 s).
Proof. exact (fun_ext (fun x : _99911 => @lem4917752 _99911 x s)). Qed.
Lemma lem4917754 {_99911 : Type'} : (@ex _99911) = (@ex _99911).
Proof. exact (eq_refl (@ex _99911)). Qed.
Lemma lem4917755 {_99911 : Type'} (s : _99911 -> Prop) : (term1157 _99911 s) = (term1169 _99911 s).
Proof. exact (MK_COMB (@lem4917754 _99911) (@lem4917753 _99911 s)). Qed.
Lemma lem4917756 {_99911 : Type'} (s : _99911 -> Prop) : ((term1156 _99911 s) = (term1157 _99911 s)) = ((term1123 _99911 s) = (term1169 _99911 s)).
Proof. exact (MK_COMB (@lem4917747 _99911 s) (@lem4917755 _99911 s)). Qed.
Lemma lem4917757 {_99911 : Type'} (s : _99911 -> Prop) : (term1123 _99911 s) = (term1169 _99911 s).
Proof. exact (EQ_MP (@lem4917756 _99911 s) (@lem4917737 _99911 s)). Qed.
Lemma lem4917758 {_99911 : Type'} : (term1136 _99911) = (term1170 _99911).
Proof. exact (fun_ext (fun s : _99911 -> Prop => @lem4917757 _99911 s)). Qed.
Lemma lem4917759 {_99911 : Type'} : (@all (_99911 -> Prop)) = (@all (_99911 -> Prop)).
Proof. exact (eq_refl (@all (_99911 -> Prop))). Qed.
Lemma lem4917760 {_99911 : Type'} : (term1147 _99911) = (term1171 _99911).
Proof. exact (MK_COMB (@lem4917759 _99911) (@lem4917758 _99911)). Qed.
Lemma lem4917762 {A B : Type'} (P : type1413 A B) : (term814 A B P) = (term815 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem4917763 {_99911 : Type'} (P : type672 _99911) : (term1172 _99911 P) = (term1173 _99911 P).
Proof. exact (@lem4917762 (_99911 -> Prop) _99911 P). Qed.
Lemma lem4917764 {_99911 : Type'} : (term1174 _99911) = (term1175 _99911).
Proof. exact (@lem4917763 _99911 (term1176 _99911)). Qed.
Lemma lem4917765 {_99911 : Type'} (s : _99911 -> Prop) : (term1177 _99911 s) = (term1168 _99911 s).
Proof. exact (eq_refl (term1177 _99911 s)). Qed.
Lemma lem4917766 {_99911 : Type'} (x : _99911) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem4917767 {_99911 : Type'} (s : _99911 -> Prop) (x : _99911) : (term1178 _99911 s x) = (term1179 _99911 s x).
Proof. exact (MK_COMB (@lem4917765 _99911 s) (@lem4917766 _99911 x)). Qed.
Lemma lem4917768 {_99911 : Type'} (x : _99911) (s : _99911 -> Prop) : (term1179 _99911 s x) = (term1166 _99911 x s).
Proof. exact (eq_refl (term1179 _99911 s x)). Qed.
Lemma lem4917769 {_99911 : Type'} (x : _99911) (s : _99911 -> Prop) : (term1178 _99911 s x) = (term1166 _99911 x s).
Proof. exact (TRANS (@lem4917767 _99911 s x) (@lem4917768 _99911 x s)). Qed.
Lemma lem4917770 {_99911 : Type'} (s : _99911 -> Prop) : (term1180 _99911 s) = (term1168 _99911 s).
Proof. exact (fun_ext (fun x : _99911 => @lem4917769 _99911 x s)). Qed.
Lemma lem4917771 {_99911 : Type'} : (@ex _99911) = (@ex _99911).
Proof. exact (eq_refl (@ex _99911)). Qed.
Lemma lem4917772 {_99911 : Type'} (s : _99911 -> Prop) : (term1181 _99911 s) = (term1169 _99911 s).
Proof. exact (MK_COMB (@lem4917771 _99911) (@lem4917770 _99911 s)). Qed.
Lemma lem4917773 {_99911 : Type'} : (term1182 _99911) = (term1170 _99911).
Proof. exact (fun_ext (fun s : _99911 -> Prop => @lem4917772 _99911 s)). Qed.
Lemma lem4917774 {_99911 : Type'} : (@all (_99911 -> Prop)) = (@all (_99911 -> Prop)).
Proof. exact (eq_refl (@all (_99911 -> Prop))). Qed.
Lemma lem4917775 {_99911 : Type'} : (term1174 _99911) = (term1171 _99911).
Proof. exact (MK_COMB (@lem4917774 _99911) (@lem4917773 _99911)). Qed.
Lemma lem4917776 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4917777 {_99911 : Type'} : (term1183 _99911) = (term1184 _99911).
Proof. exact (MK_COMB (@lem4917776) (@lem4917775 _99911)). Qed.
Lemma lem4917778 {_99911 : Type'} (s : _99911 -> Prop) : (term1177 _99911 s) = (term1168 _99911 s).
Proof. exact (eq_refl (term1177 _99911 s)). Qed.
Lemma lem4917779 {_99911 : Type'} (x : type684 _99911) (s : _99911 -> Prop) : (x s) = (x s).
Proof. exact (eq_refl (x s)). Qed.
Lemma lem4917780 {_99911 : Type'} (x : type684 _99911) (s : _99911 -> Prop) : (term1185 _99911 x s) = (term1186 _99911 x s).
Proof. exact (MK_COMB (@lem4917778 _99911 s) (@lem4917779 _99911 x s)). Qed.
Lemma lem4917781 {_99911 : Type'} (x : type684 _99911) (s : _99911 -> Prop) : (term1186 _99911 x s) = (term1187 _99911 x s).
Proof. exact (eq_refl (term1186 _99911 x s)). Qed.
Lemma lem4917782 {_99911 : Type'} (x : type684 _99911) (s : _99911 -> Prop) : (term1185 _99911 x s) = (term1187 _99911 x s).
Proof. exact (TRANS (@lem4917780 _99911 x s) (@lem4917781 _99911 x s)). Qed.
Lemma lem4917783 {_99911 : Type'} (x : type684 _99911) : (term1188 _99911 x) = (term1189 _99911 x).
Proof. exact (fun_ext (fun s : _99911 -> Prop => @lem4917782 _99911 x s)). Qed.
Lemma lem4917784 {_99911 : Type'} : (@all (_99911 -> Prop)) = (@all (_99911 -> Prop)).
Proof. exact (eq_refl (@all (_99911 -> Prop))). Qed.
Lemma lem4917785 {_99911 : Type'} (x : type684 _99911) : (term1190 _99911 x) = (term1191 _99911 x).
Proof. exact (MK_COMB (@lem4917784 _99911) (@lem4917783 _99911 x)). Qed.
Lemma lem4917786 {_99911 : Type'} : (term1192 _99911) = (term1193 _99911).
Proof. exact (fun_ext (fun x : type684 _99911 => @lem4917785 _99911 x)). Qed.
Lemma lem4917787 {_99911 : Type'} : (@ex ((_99911 -> Prop) -> _99911)) = (@ex ((_99911 -> Prop) -> _99911)).
Proof. exact (eq_refl (@ex ((_99911 -> Prop) -> _99911))). Qed.
Lemma lem4917788 {_99911 : Type'} : (term1175 _99911) = (term1194 _99911).
Proof. exact (MK_COMB (@lem4917787 _99911) (@lem4917786 _99911)). Qed.
Lemma lem4917789 {_99911 : Type'} : ((term1174 _99911) = (term1175 _99911)) = ((term1171 _99911) = (term1194 _99911)).
Proof. exact (MK_COMB (@lem4917777 _99911) (@lem4917788 _99911)). Qed.
Lemma lem4917790 {_99911 : Type'} : (term1171 _99911) = (term1194 _99911).
Proof. exact (EQ_MP (@lem4917789 _99911) (@lem4917764 _99911)). Qed.
Lemma lem4917791 {_99911 : Type'} : (term1147 _99911) = (term1194 _99911).
Proof. exact (TRANS (@lem4917760 _99911) (@lem4917790 _99911)). Qed.
Lemma lem4917792 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4917793 {_99911 : Type'} : (term1149 _99911) = (term1195 _99911).
Proof. exact (MK_COMB (@lem4917792) (@lem4917791 _99911)). Qed.
Lemma lem4917794 {_99911 : Type'} : (term1152 _99911) = (term1152 _99911).
Proof. exact (eq_refl (term1152 _99911)). Qed.
Lemma lem4917795 {_99911 : Type'} : (term1153 _99911) = (term1196 _99911).
Proof. exact (MK_COMB (@lem4917793 _99911) (@lem4917794 _99911)). Qed.
Lemma lem4917797 {A : Type'} (P : A -> Prop) (Q : Prop) : (term1197 A P Q) = (term1198 A P Q).
Proof. exact (EQ_MP (@lem18923 A P Q) (@lem18922 A P Q)). Qed.
Lemma lem4917798 {_99911 : Type'} (P : type162 _99911) (Q : Prop) : (term1199 _99911 P Q) = (term1200 _99911 P Q).
Proof. exact (@lem4917797 (type684 _99911) P Q). Qed.
Lemma lem4917799 {_99911 : Type'} : (term1201 _99911) = (term1202 _99911).
Proof. exact (@lem4917798 _99911 (term1193 _99911) (term1152 _99911)). Qed.
Lemma lem4917800 {_99911 : Type'} (x : type684 _99911) : (term1203 _99911 x) = (term1191 _99911 x).
Proof. exact (eq_refl (term1203 _99911 x)). Qed.
Lemma lem4917801 {_99911 : Type'} : (term1204 _99911) = (term1193 _99911).
Proof. exact (fun_ext (fun x : type684 _99911 => @lem4917800 _99911 x)). Qed.
Lemma lem4917802 {_99911 : Type'} : (@ex ((_99911 -> Prop) -> _99911)) = (@ex ((_99911 -> Prop) -> _99911)).
Proof. exact (eq_refl (@ex ((_99911 -> Prop) -> _99911))). Qed.
Lemma lem4917803 {_99911 : Type'} : (term1205 _99911) = (term1194 _99911).
Proof. exact (MK_COMB (@lem4917802 _99911) (@lem4917801 _99911)). Qed.
Lemma lem4917804 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4917805 {_99911 : Type'} : (term1206 _99911) = (term1195 _99911).
Proof. exact (MK_COMB (@lem4917804) (@lem4917803 _99911)). Qed.
Lemma lem4917806 {_99911 : Type'} : (term1152 _99911) = (term1152 _99911).
Proof. exact (eq_refl (term1152 _99911)). Qed.
Lemma lem4917807 {_99911 : Type'} : (term1201 _99911) = (term1196 _99911).
Proof. exact (MK_COMB (@lem4917805 _99911) (@lem4917806 _99911)). Qed.
Lemma lem4917808 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4917809 {_99911 : Type'} : (term1207 _99911) = (term1208 _99911).
Proof. exact (MK_COMB (@lem4917808) (@lem4917807 _99911)). Qed.
Lemma lem4917810 {_99911 : Type'} (x : type684 _99911) : (term1203 _99911 x) = (term1191 _99911 x).
Proof. exact (eq_refl (term1203 _99911 x)). Qed.
Lemma lem4917811 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4917812 {_99911 : Type'} (x : type684 _99911) : (term1209 _99911 x) = (term1210 _99911 x).
Proof. exact (MK_COMB (@lem4917811) (@lem4917810 _99911 x)). Qed.
Lemma lem4917813 {_99911 : Type'} : (term1152 _99911) = (term1152 _99911).
Proof. exact (eq_refl (term1152 _99911)). Qed.
Lemma lem4917814 {_99911 : Type'} (x : type684 _99911) : (term1211 _99911 x) = (term1212 _99911 x).
Proof. exact (MK_COMB (@lem4917812 _99911 x) (@lem4917813 _99911)). Qed.
Lemma lem4917815 {_99911 : Type'} : (term1213 _99911) = (term1214 _99911).
Proof. exact (fun_ext (fun x : type684 _99911 => @lem4917814 _99911 x)). Qed.
Lemma lem4917816 {_99911 : Type'} : (@ex ((_99911 -> Prop) -> _99911)) = (@ex ((_99911 -> Prop) -> _99911)).
Proof. exact (eq_refl (@ex ((_99911 -> Prop) -> _99911))). Qed.
Lemma lem4917817 {_99911 : Type'} : (term1202 _99911) = (term1215 _99911).
Proof. exact (MK_COMB (@lem4917816 _99911) (@lem4917815 _99911)). Qed.
Lemma lem4917818 {_99911 : Type'} : ((term1201 _99911) = (term1202 _99911)) = ((term1196 _99911) = (term1215 _99911)).
Proof. exact (MK_COMB (@lem4917809 _99911) (@lem4917817 _99911)). Qed.
Lemma lem4917819 {_99911 : Type'} : (term1196 _99911) = (term1215 _99911).
Proof. exact (EQ_MP (@lem4917818 _99911) (@lem4917799 _99911)). Qed.
Lemma lem4917820 {_99911 : Type'} : (term1153 _99911) = (term1215 _99911).
Proof. exact (TRANS (@lem4917795 _99911) (@lem4917819 _99911)). Qed.
Lemma lem4917821 {_99911 : Type'} : (term1129 _99911) = (term1215 _99911).
Proof. exact (TRANS (@lem4917629 _99911) (@lem4917820 _99911)). Qed.
Lemma lem4917822 {_99911 : Type'} : (term1043 _99911) = (term1215 _99911).
Proof. exact (TRANS (@lem4917602 _99911) (@lem4917821 _99911)). Qed.
Lemma lem4917823 {_99911 : Type'} (h1 : term1043 _99911) : term1215 _99911.
Proof. exact (EQ_MP (@lem4917822 _99911) (@lem4917339 _99911 h1)). Qed.
Lemma lem4917825 {A : Type'} (x : A) (s : A -> Prop) : (@IN A x s) = (@IN A x s).
Proof. exact (eq_refl (@IN A x s)). Qed.
Lemma lem4917826 {A : Type'} (P : A -> Prop) : (term847 A P) = (term848 A P).
Proof. exact (@lem18394 A P). Qed.
Lemma lem4917827 {A : Type'} (s : A -> Prop) : (term1109 A s) = (term1110 A s).
Proof. exact (@lem4917826 A (term1105 A s)). Qed.
Lemma lem4917828 {A : Type'} (x : A) (s : A -> Prop) : (term1111 A s x) = (@IN A x s).
Proof. exact (eq_refl (term1111 A s x)). Qed.
Lemma lem4917829 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem4917831 {A : Type'} (x : A) (s : A -> Prop) : (term1112 A s x) = (term801 A x s).
Proof. exact (MK_COMB (@lem4917829) (@lem4917828 A x s)). Qed.
Lemma lem4917832 {A : Type'} (s : A -> Prop) : (term1113 A s) = (term1114 A s).
Proof. exact (fun_ext (fun x : A => @lem4917831 A x s)). Qed.
Lemma lem4917833 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4917834 {A : Type'} (s : A -> Prop) : (term1110 A s) = (term1115 A s).
Proof. exact (MK_COMB (@lem4917833 A) (@lem4917832 A s)). Qed.
Lemma lem4917835 {A : Type'} (s : A -> Prop) : (term1109 A s) = (term1115 A s).
Proof. exact (TRANS (@lem4917827 A s) (@lem4917834 A s)). Qed.
Lemma lem4917836 {A : Type'} (s : A -> Prop) : (term1105 A s) = (term1105 A s).
Proof. exact (fun_ext (fun x : A => @lem4917825 A x s)). Qed.
Lemma lem4917837 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem4917838 {A : Type'} (s : A -> Prop) : (term1106 A s) = (term1106 A s).
Proof. exact (MK_COMB (@lem4917837 A) (@lem4917836 A s)). Qed.
Lemma lem4917839 {A : Type'} (s : A -> Prop) : (term1104 A s) = (term1104 A s).
Proof. exact (eq_refl (term1104 A s)). Qed.
Lemma lem4917842 {A : Type'} (s : A -> Prop) : (term1116 A s) = (s = (@EMPTY A)).
Proof. exact (@lem16933 (s = (@EMPTY A))). Qed.
Lemma lem4917843 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4917844 {A : Type'} (s : A -> Prop) : (term1117 A s) = (term1118 A s).
Proof. exact (MK_COMB (@lem4917843) (@lem4917835 A s)). Qed.
Lemma lem4917845 {A : Type'} (s : A -> Prop) : (term1119 A s) = (term1120 A s).
Proof. exact (MK_COMB (@lem4917844 A s) (@lem4917839 A s)). Qed.
Lemma lem4917846 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4917847 {A : Type'} (s : A -> Prop) : (term1121 A s) = (term1121 A s).
Proof. exact (MK_COMB (@lem4917846) (@lem4917838 A s)). Qed.
Lemma lem4917848 {A : Type'} (s : A -> Prop) : (term1122 A s) = (term1123 A s).
Proof. exact (MK_COMB (@lem4917847 A s) (@lem4917842 A s)). Qed.
Lemma lem4917849 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4917850 {A : Type'} (s : A -> Prop) : (term1124 A s) = (term1125 A s).
Proof. exact (MK_COMB (@lem4917849) (@lem4917848 A s)). Qed.
Lemma lem4917851 {A : Type'} (s : A -> Prop) : (term1126 A s) = (term1127 A s).
Proof. exact (MK_COMB (@lem4917850 A s) (@lem4917845 A s)). Qed.
Lemma lem4917852 {A : Type'} (s : A -> Prop) : ((term1106 A s) = (term1104 A s)) = (term1126 A s).
Proof. exact (@lem17784 (term1106 A s) (term1104 A s)). Qed.
Lemma lem4917853 {A : Type'} (s : A -> Prop) : ((term1106 A s) = (term1104 A s)) = (term1127 A s).
Proof. exact (TRANS (@lem4917852 A s) (@lem4917851 A s)). Qed.
Lemma lem4917854 {A : Type'} : (term1108 A) = (term1128 A).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4917853 A s)). Qed.
Lemma lem4917855 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4917856 {A : Type'} : (term1043 A) = (term1129 A).
Proof. exact (MK_COMB (@lem4917855 A) (@lem4917854 A)). Qed.
Lemma lem4917858 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term1130 A P Q) = (term1131 A P Q).
Proof. exact (EQ_MP (@lem18953 A P Q) (@lem18952 A P Q)). Qed.
Lemma lem4917859 {A : Type'} (P : type686 A) (Q : type686 A) : (term1132 A P Q) = (term1133 A P Q).
Proof. exact (@lem4917858 (A -> Prop) P Q). Qed.
Lemma lem4917860 {A : Type'} : (term1134 A) = (term1135 A).
Proof. exact (@lem4917859 A (term1136 A) (term1137 A)). Qed.
Lemma lem4917861 {A : Type'} (s : A -> Prop) : (term1138 A s) = (term1123 A s).
Proof. exact (eq_refl (term1138 A s)). Qed.
Lemma lem4917862 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4917863 {A : Type'} (s : A -> Prop) : (term1139 A s) = (term1125 A s).
Proof. exact (MK_COMB (@lem4917862) (@lem4917861 A s)). Qed.
Lemma lem4917864 {A : Type'} (s : A -> Prop) : (term1140 A s) = (term1120 A s).
Proof. exact (eq_refl (term1140 A s)). Qed.
Lemma lem4917865 {A : Type'} (s : A -> Prop) : (term1141 A s) = (term1127 A s).
Proof. exact (MK_COMB (@lem4917863 A s) (@lem4917864 A s)). Qed.
Lemma lem4917866 {A : Type'} : (term1142 A) = (term1128 A).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4917865 A s)). Qed.
Lemma lem4917867 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4917868 {A : Type'} : (term1134 A) = (term1129 A).
Proof. exact (MK_COMB (@lem4917867 A) (@lem4917866 A)). Qed.
Lemma lem4917869 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4917870 {A : Type'} : (term1143 A) = (term1144 A).
Proof. exact (MK_COMB (@lem4917869) (@lem4917868 A)). Qed.
Lemma lem4917871 {A : Type'} (s : A -> Prop) : (term1138 A s) = (term1123 A s).
Proof. exact (eq_refl (term1138 A s)). Qed.
Lemma lem4917872 {A : Type'} : (term1145 A) = (term1136 A).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4917871 A s)). Qed.
Lemma lem4917873 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4917874 {A : Type'} : (term1146 A) = (term1147 A).
Proof. exact (MK_COMB (@lem4917873 A) (@lem4917872 A)). Qed.
Lemma lem4917875 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4917876 {A : Type'} : (term1148 A) = (term1149 A).
Proof. exact (MK_COMB (@lem4917875) (@lem4917874 A)). Qed.
Lemma lem4917877 {A : Type'} (s : A -> Prop) : (term1140 A s) = (term1120 A s).
Proof. exact (eq_refl (term1140 A s)). Qed.
Lemma lem4917878 {A : Type'} : (term1150 A) = (term1137 A).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4917877 A s)). Qed.
Lemma lem4917879 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4917880 {A : Type'} : (term1151 A) = (term1152 A).
Proof. exact (MK_COMB (@lem4917879 A) (@lem4917878 A)). Qed.
Lemma lem4917881 {A : Type'} : (term1135 A) = (term1153 A).
Proof. exact (MK_COMB (@lem4917876 A) (@lem4917880 A)). Qed.
Lemma lem4917882 {A : Type'} : ((term1134 A) = (term1135 A)) = ((term1129 A) = (term1153 A)).
Proof. exact (MK_COMB (@lem4917870 A) (@lem4917881 A)). Qed.
Lemma lem4917883 {A : Type'} : (term1129 A) = (term1153 A).
Proof. exact (EQ_MP (@lem4917882 A) (@lem4917860 A)). Qed.
Lemma lem4917989 {A : Type'} (P : A -> Prop) (Q : Prop) : (term1154 A P Q) = (term1155 A P Q).
Proof. exact (EQ_MP (@lem18905 A P Q) (@lem18904 A P Q)). Qed.
Lemma lem4917990 {A : Type'} (P : A -> Prop) (Q : Prop) : (term1154 A P Q) = (term1155 A P Q).
Proof. exact (@lem4917989 A P Q). Qed.
Lemma lem4917991 {A : Type'} (s : A -> Prop) : (term1156 A s) = (term1157 A s).
Proof. exact (@lem4917990 A (term1105 A s) (s = (@EMPTY A))). Qed.
Lemma lem4917992 {A : Type'} (x : A) (s : A -> Prop) : (term1111 A s x) = (@IN A x s).
Proof. exact (eq_refl (term1111 A s x)). Qed.
Lemma lem4917993 {A : Type'} (s : A -> Prop) : (term1158 A s) = (term1105 A s).
Proof. exact (fun_ext (fun x : A => @lem4917992 A x s)). Qed.
Lemma lem4917994 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem4917995 {A : Type'} (s : A -> Prop) : (term1159 A s) = (term1106 A s).
Proof. exact (MK_COMB (@lem4917994 A) (@lem4917993 A s)). Qed.
Lemma lem4917996 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4917997 {A : Type'} (s : A -> Prop) : (term1160 A s) = (term1121 A s).
Proof. exact (MK_COMB (@lem4917996) (@lem4917995 A s)). Qed.
Lemma lem4917998 {A : Type'} (s : A -> Prop) : (s = (@EMPTY A)) = (s = (@EMPTY A)).
Proof. exact (eq_refl (s = (@EMPTY A))). Qed.
Lemma lem4917999 {A : Type'} (s : A -> Prop) : (term1156 A s) = (term1123 A s).
Proof. exact (MK_COMB (@lem4917997 A s) (@lem4917998 A s)). Qed.
Lemma lem4918000 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4918001 {A : Type'} (s : A -> Prop) : (term1161 A s) = (term1162 A s).
Proof. exact (MK_COMB (@lem4918000) (@lem4917999 A s)). Qed.
Lemma lem4918002 {A : Type'} (x : A) (s : A -> Prop) : (term1111 A s x) = (@IN A x s).
Proof. exact (eq_refl (term1111 A s x)). Qed.
Lemma lem4918003 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4918004 {A : Type'} (x : A) (s : A -> Prop) : (term1163 A s x) = (term1164 A x s).
Proof. exact (MK_COMB (@lem4918003) (@lem4918002 A x s)). Qed.
Lemma lem4918005 {A : Type'} (s : A -> Prop) : (s = (@EMPTY A)) = (s = (@EMPTY A)).
Proof. exact (eq_refl (s = (@EMPTY A))). Qed.
Lemma lem4918006 {A : Type'} (x : A) (s : A -> Prop) : (term1165 A x s) = (term1166 A x s).
Proof. exact (MK_COMB (@lem4918004 A x s) (@lem4918005 A s)). Qed.
Lemma lem4918007 {A : Type'} (s : A -> Prop) : (term1167 A s) = (term1168 A s).
Proof. exact (fun_ext (fun x : A => @lem4918006 A x s)). Qed.
Lemma lem4918008 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem4918009 {A : Type'} (s : A -> Prop) : (term1157 A s) = (term1169 A s).
Proof. exact (MK_COMB (@lem4918008 A) (@lem4918007 A s)). Qed.
Lemma lem4918010 {A : Type'} (s : A -> Prop) : ((term1156 A s) = (term1157 A s)) = ((term1123 A s) = (term1169 A s)).
Proof. exact (MK_COMB (@lem4918001 A s) (@lem4918009 A s)). Qed.
Lemma lem4918011 {A : Type'} (s : A -> Prop) : (term1123 A s) = (term1169 A s).
Proof. exact (EQ_MP (@lem4918010 A s) (@lem4917991 A s)). Qed.
Lemma lem4918012 {A : Type'} : (term1136 A) = (term1170 A).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4918011 A s)). Qed.
Lemma lem4918013 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4918014 {A : Type'} : (term1147 A) = (term1171 A).
Proof. exact (MK_COMB (@lem4918013 A) (@lem4918012 A)). Qed.
Lemma lem4918016 {A B : Type'} (P : type1413 A B) : (term814 A B P) = (term815 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem4918017 {A : Type'} (P : type672 A) : (term1172 A P) = (term1173 A P).
Proof. exact (@lem4918016 (A -> Prop) A P). Qed.
Lemma lem4918018 {A : Type'} : (term1174 A) = (term1175 A).
Proof. exact (@lem4918017 A (term1176 A)). Qed.
Lemma lem4918019 {A : Type'} (s : A -> Prop) : (term1177 A s) = (term1168 A s).
Proof. exact (eq_refl (term1177 A s)). Qed.
Lemma lem4918020 {A : Type'} (x : A) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem4918021 {A : Type'} (s : A -> Prop) (x : A) : (term1178 A s x) = (term1179 A s x).
Proof. exact (MK_COMB (@lem4918019 A s) (@lem4918020 A x)). Qed.
Lemma lem4918022 {A : Type'} (x : A) (s : A -> Prop) : (term1179 A s x) = (term1166 A x s).
Proof. exact (eq_refl (term1179 A s x)). Qed.
Lemma lem4918023 {A : Type'} (x : A) (s : A -> Prop) : (term1178 A s x) = (term1166 A x s).
Proof. exact (TRANS (@lem4918021 A s x) (@lem4918022 A x s)). Qed.
Lemma lem4918024 {A : Type'} (s : A -> Prop) : (term1180 A s) = (term1168 A s).
Proof. exact (fun_ext (fun x : A => @lem4918023 A x s)). Qed.
Lemma lem4918025 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem4918026 {A : Type'} (s : A -> Prop) : (term1181 A s) = (term1169 A s).
Proof. exact (MK_COMB (@lem4918025 A) (@lem4918024 A s)). Qed.
Lemma lem4918027 {A : Type'} : (term1182 A) = (term1170 A).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4918026 A s)). Qed.
Lemma lem4918028 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4918029 {A : Type'} : (term1174 A) = (term1171 A).
Proof. exact (MK_COMB (@lem4918028 A) (@lem4918027 A)). Qed.
Lemma lem4918030 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4918031 {A : Type'} : (term1183 A) = (term1184 A).
Proof. exact (MK_COMB (@lem4918030) (@lem4918029 A)). Qed.
Lemma lem4918032 {A : Type'} (s : A -> Prop) : (term1177 A s) = (term1168 A s).
Proof. exact (eq_refl (term1177 A s)). Qed.
Lemma lem4918033 {A : Type'} (x : type684 A) (s : A -> Prop) : (x s) = (x s).
Proof. exact (eq_refl (x s)). Qed.
Lemma lem4918034 {A : Type'} (x : type684 A) (s : A -> Prop) : (term1185 A x s) = (term1186 A x s).
Proof. exact (MK_COMB (@lem4918032 A s) (@lem4918033 A x s)). Qed.
Lemma lem4918035 {A : Type'} (x : type684 A) (s : A -> Prop) : (term1186 A x s) = (term1187 A x s).
Proof. exact (eq_refl (term1186 A x s)). Qed.
Lemma lem4918036 {A : Type'} (x : type684 A) (s : A -> Prop) : (term1185 A x s) = (term1187 A x s).
Proof. exact (TRANS (@lem4918034 A x s) (@lem4918035 A x s)). Qed.
Lemma lem4918037 {A : Type'} (x : type684 A) : (term1188 A x) = (term1189 A x).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4918036 A x s)). Qed.
Lemma lem4918038 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4918039 {A : Type'} (x : type684 A) : (term1190 A x) = (term1191 A x).
Proof. exact (MK_COMB (@lem4918038 A) (@lem4918037 A x)). Qed.
Lemma lem4918040 {A : Type'} : (term1192 A) = (term1193 A).
Proof. exact (fun_ext (fun x : type684 A => @lem4918039 A x)). Qed.
Lemma lem4918041 {A : Type'} : (@ex ((A -> Prop) -> A)) = (@ex ((A -> Prop) -> A)).
Proof. exact (eq_refl (@ex ((A -> Prop) -> A))). Qed.
Lemma lem4918042 {A : Type'} : (term1175 A) = (term1194 A).
Proof. exact (MK_COMB (@lem4918041 A) (@lem4918040 A)). Qed.
Lemma lem4918043 {A : Type'} : ((term1174 A) = (term1175 A)) = ((term1171 A) = (term1194 A)).
Proof. exact (MK_COMB (@lem4918031 A) (@lem4918042 A)). Qed.
Lemma lem4918044 {A : Type'} : (term1171 A) = (term1194 A).
Proof. exact (EQ_MP (@lem4918043 A) (@lem4918018 A)). Qed.
Lemma lem4918045 {A : Type'} : (term1147 A) = (term1194 A).
Proof. exact (TRANS (@lem4918014 A) (@lem4918044 A)). Qed.
Lemma lem4918046 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4918047 {A : Type'} : (term1149 A) = (term1195 A).
Proof. exact (MK_COMB (@lem4918046) (@lem4918045 A)). Qed.
Lemma lem4918048 {A : Type'} : (term1152 A) = (term1152 A).
Proof. exact (eq_refl (term1152 A)). Qed.
Lemma lem4918049 {A : Type'} : (term1153 A) = (term1196 A).
Proof. exact (MK_COMB (@lem4918047 A) (@lem4918048 A)). Qed.
Lemma lem4918051 {A : Type'} (P : A -> Prop) (Q : Prop) : (term1197 A P Q) = (term1198 A P Q).
Proof. exact (EQ_MP (@lem18923 A P Q) (@lem18922 A P Q)). Qed.
Lemma lem4918052 {A : Type'} (P : type162 A) (Q : Prop) : (term1199 A P Q) = (term1200 A P Q).
Proof. exact (@lem4918051 (type684 A) P Q). Qed.
Lemma lem4918053 {A : Type'} : (term1201 A) = (term1202 A).
Proof. exact (@lem4918052 A (term1193 A) (term1152 A)). Qed.
Lemma lem4918054 {A : Type'} (x : type684 A) : (term1203 A x) = (term1191 A x).
Proof. exact (eq_refl (term1203 A x)). Qed.
Lemma lem4918055 {A : Type'} : (term1204 A) = (term1193 A).
Proof. exact (fun_ext (fun x : type684 A => @lem4918054 A x)). Qed.
Lemma lem4918056 {A : Type'} : (@ex ((A -> Prop) -> A)) = (@ex ((A -> Prop) -> A)).
Proof. exact (eq_refl (@ex ((A -> Prop) -> A))). Qed.
Lemma lem4918057 {A : Type'} : (term1205 A) = (term1194 A).
Proof. exact (MK_COMB (@lem4918056 A) (@lem4918055 A)). Qed.
Lemma lem4918058 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4918059 {A : Type'} : (term1206 A) = (term1195 A).
Proof. exact (MK_COMB (@lem4918058) (@lem4918057 A)). Qed.
Lemma lem4918060 {A : Type'} : (term1152 A) = (term1152 A).
Proof. exact (eq_refl (term1152 A)). Qed.
Lemma lem4918061 {A : Type'} : (term1201 A) = (term1196 A).
Proof. exact (MK_COMB (@lem4918059 A) (@lem4918060 A)). Qed.
Lemma lem4918062 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4918063 {A : Type'} : (term1207 A) = (term1208 A).
Proof. exact (MK_COMB (@lem4918062) (@lem4918061 A)). Qed.
Lemma lem4918064 {A : Type'} (x : type684 A) : (term1203 A x) = (term1191 A x).
Proof. exact (eq_refl (term1203 A x)). Qed.
Lemma lem4918065 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4918066 {A : Type'} (x : type684 A) : (term1209 A x) = (term1210 A x).
Proof. exact (MK_COMB (@lem4918065) (@lem4918064 A x)). Qed.
Lemma lem4918067 {A : Type'} : (term1152 A) = (term1152 A).
Proof. exact (eq_refl (term1152 A)). Qed.
Lemma lem4918068 {A : Type'} (x : type684 A) : (term1211 A x) = (term1212 A x).
Proof. exact (MK_COMB (@lem4918066 A x) (@lem4918067 A)). Qed.
Lemma lem4918069 {A : Type'} : (term1213 A) = (term1214 A).
Proof. exact (fun_ext (fun x : type684 A => @lem4918068 A x)). Qed.
Lemma lem4918070 {A : Type'} : (@ex ((A -> Prop) -> A)) = (@ex ((A -> Prop) -> A)).
Proof. exact (eq_refl (@ex ((A -> Prop) -> A))). Qed.
Lemma lem4918071 {A : Type'} : (term1202 A) = (term1215 A).
Proof. exact (MK_COMB (@lem4918070 A) (@lem4918069 A)). Qed.
Lemma lem4918072 {A : Type'} : ((term1201 A) = (term1202 A)) = ((term1196 A) = (term1215 A)).
Proof. exact (MK_COMB (@lem4918063 A) (@lem4918071 A)). Qed.
Lemma lem4918073 {A : Type'} : (term1196 A) = (term1215 A).
Proof. exact (EQ_MP (@lem4918072 A) (@lem4918053 A)). Qed.
Lemma lem4918074 {A : Type'} : (term1153 A) = (term1215 A).
Proof. exact (TRANS (@lem4918049 A) (@lem4918073 A)). Qed.
Lemma lem4918075 {A : Type'} : (term1129 A) = (term1215 A).
Proof. exact (TRANS (@lem4917883 A) (@lem4918074 A)). Qed.
Lemma lem4918076 {A : Type'} : (term1043 A) = (term1215 A).
Proof. exact (TRANS (@lem4917856 A) (@lem4918075 A)). Qed.
Lemma lem4918077 {A : Type'} (h1 : term1043 A) : term1215 A.
Proof. exact (EQ_MP (@lem4918076 A) (@lem4917340 A h1)). Qed.
Lemma lem4918079 {B : Type'} (x : B) (s : B -> Prop) : (@IN B x s) = (@IN B x s).
Proof. exact (eq_refl (@IN B x s)). Qed.
Lemma lem4918080 {B : Type'} (P : B -> Prop) : (term847 B P) = (term848 B P).
Proof. exact (@lem18394 B P). Qed.
Lemma lem4918081 {B : Type'} (s : B -> Prop) : (term1109 B s) = (term1110 B s).
Proof. exact (@lem4918080 B (term1105 B s)). Qed.
Lemma lem4918082 {B : Type'} (x : B) (s : B -> Prop) : (term1111 B s x) = (@IN B x s).
Proof. exact (eq_refl (term1111 B s x)). Qed.
Lemma lem4918083 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem4918085 {B : Type'} (x : B) (s : B -> Prop) : (term1112 B s x) = (term801 B x s).
Proof. exact (MK_COMB (@lem4918083) (@lem4918082 B x s)). Qed.
Lemma lem4918086 {B : Type'} (s : B -> Prop) : (term1113 B s) = (term1114 B s).
Proof. exact (fun_ext (fun x : B => @lem4918085 B x s)). Qed.
Lemma lem4918087 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4918088 {B : Type'} (s : B -> Prop) : (term1110 B s) = (term1115 B s).
Proof. exact (MK_COMB (@lem4918087 B) (@lem4918086 B s)). Qed.
Lemma lem4918089 {B : Type'} (s : B -> Prop) : (term1109 B s) = (term1115 B s).
Proof. exact (TRANS (@lem4918081 B s) (@lem4918088 B s)). Qed.
Lemma lem4918090 {B : Type'} (s : B -> Prop) : (term1105 B s) = (term1105 B s).
Proof. exact (fun_ext (fun x : B => @lem4918079 B x s)). Qed.
Lemma lem4918091 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem4918092 {B : Type'} (s : B -> Prop) : (term1106 B s) = (term1106 B s).
Proof. exact (MK_COMB (@lem4918091 B) (@lem4918090 B s)). Qed.
Lemma lem4918093 {B : Type'} (s : B -> Prop) : (term1104 B s) = (term1104 B s).
Proof. exact (eq_refl (term1104 B s)). Qed.
Lemma lem4918096 {B : Type'} (s : B -> Prop) : (term1116 B s) = (s = (@EMPTY B)).
Proof. exact (@lem16933 (s = (@EMPTY B))). Qed.
Lemma lem4918097 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4918098 {B : Type'} (s : B -> Prop) : (term1117 B s) = (term1118 B s).
Proof. exact (MK_COMB (@lem4918097) (@lem4918089 B s)). Qed.
Lemma lem4918099 {B : Type'} (s : B -> Prop) : (term1119 B s) = (term1120 B s).
Proof. exact (MK_COMB (@lem4918098 B s) (@lem4918093 B s)). Qed.
Lemma lem4918100 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4918101 {B : Type'} (s : B -> Prop) : (term1121 B s) = (term1121 B s).
Proof. exact (MK_COMB (@lem4918100) (@lem4918092 B s)). Qed.
Lemma lem4918102 {B : Type'} (s : B -> Prop) : (term1122 B s) = (term1123 B s).
Proof. exact (MK_COMB (@lem4918101 B s) (@lem4918096 B s)). Qed.
Lemma lem4918103 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4918104 {B : Type'} (s : B -> Prop) : (term1124 B s) = (term1125 B s).
Proof. exact (MK_COMB (@lem4918103) (@lem4918102 B s)). Qed.
Lemma lem4918105 {B : Type'} (s : B -> Prop) : (term1126 B s) = (term1127 B s).
Proof. exact (MK_COMB (@lem4918104 B s) (@lem4918099 B s)). Qed.
Lemma lem4918106 {B : Type'} (s : B -> Prop) : ((term1106 B s) = (term1104 B s)) = (term1126 B s).
Proof. exact (@lem17784 (term1106 B s) (term1104 B s)). Qed.
Lemma lem4918107 {B : Type'} (s : B -> Prop) : ((term1106 B s) = (term1104 B s)) = (term1127 B s).
Proof. exact (TRANS (@lem4918106 B s) (@lem4918105 B s)). Qed.
Lemma lem4918108 {B : Type'} : (term1108 B) = (term1128 B).
Proof. exact (fun_ext (fun s : B -> Prop => @lem4918107 B s)). Qed.
Lemma lem4918109 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4918110 {B : Type'} : (term1043 B) = (term1129 B).
Proof. exact (MK_COMB (@lem4918109 B) (@lem4918108 B)). Qed.
Lemma lem4918112 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term1130 A P Q) = (term1131 A P Q).
Proof. exact (EQ_MP (@lem18953 A P Q) (@lem18952 A P Q)). Qed.
Lemma lem4918113 {B : Type'} (P : type686 B) (Q : type686 B) : (term1132 B P Q) = (term1133 B P Q).
Proof. exact (@lem4918112 (B -> Prop) P Q). Qed.
Lemma lem4918114 {B : Type'} : (term1134 B) = (term1135 B).
Proof. exact (@lem4918113 B (term1136 B) (term1137 B)). Qed.
Lemma lem4918115 {B : Type'} (s : B -> Prop) : (term1138 B s) = (term1123 B s).
Proof. exact (eq_refl (term1138 B s)). Qed.
Lemma lem4918116 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4918117 {B : Type'} (s : B -> Prop) : (term1139 B s) = (term1125 B s).
Proof. exact (MK_COMB (@lem4918116) (@lem4918115 B s)). Qed.
Lemma lem4918118 {B : Type'} (s : B -> Prop) : (term1140 B s) = (term1120 B s).
Proof. exact (eq_refl (term1140 B s)). Qed.
Lemma lem4918119 {B : Type'} (s : B -> Prop) : (term1141 B s) = (term1127 B s).
Proof. exact (MK_COMB (@lem4918117 B s) (@lem4918118 B s)). Qed.
Lemma lem4918120 {B : Type'} : (term1142 B) = (term1128 B).
Proof. exact (fun_ext (fun s : B -> Prop => @lem4918119 B s)). Qed.
Lemma lem4918121 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4918122 {B : Type'} : (term1134 B) = (term1129 B).
Proof. exact (MK_COMB (@lem4918121 B) (@lem4918120 B)). Qed.
Lemma lem4918123 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4918124 {B : Type'} : (term1143 B) = (term1144 B).
Proof. exact (MK_COMB (@lem4918123) (@lem4918122 B)). Qed.
Lemma lem4918125 {B : Type'} (s : B -> Prop) : (term1138 B s) = (term1123 B s).
Proof. exact (eq_refl (term1138 B s)). Qed.
Lemma lem4918126 {B : Type'} : (term1145 B) = (term1136 B).
Proof. exact (fun_ext (fun s : B -> Prop => @lem4918125 B s)). Qed.
Lemma lem4918127 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4918128 {B : Type'} : (term1146 B) = (term1147 B).
Proof. exact (MK_COMB (@lem4918127 B) (@lem4918126 B)). Qed.
Lemma lem4918129 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4918130 {B : Type'} : (term1148 B) = (term1149 B).
Proof. exact (MK_COMB (@lem4918129) (@lem4918128 B)). Qed.
Lemma lem4918131 {B : Type'} (s : B -> Prop) : (term1140 B s) = (term1120 B s).
Proof. exact (eq_refl (term1140 B s)). Qed.
Lemma lem4918132 {B : Type'} : (term1150 B) = (term1137 B).
Proof. exact (fun_ext (fun s : B -> Prop => @lem4918131 B s)). Qed.
Lemma lem4918133 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4918134 {B : Type'} : (term1151 B) = (term1152 B).
Proof. exact (MK_COMB (@lem4918133 B) (@lem4918132 B)). Qed.
Lemma lem4918135 {B : Type'} : (term1135 B) = (term1153 B).
Proof. exact (MK_COMB (@lem4918130 B) (@lem4918134 B)). Qed.
Lemma lem4918136 {B : Type'} : ((term1134 B) = (term1135 B)) = ((term1129 B) = (term1153 B)).
Proof. exact (MK_COMB (@lem4918124 B) (@lem4918135 B)). Qed.
Lemma lem4918137 {B : Type'} : (term1129 B) = (term1153 B).
Proof. exact (EQ_MP (@lem4918136 B) (@lem4918114 B)). Qed.
Lemma lem4918243 {A : Type'} (P : A -> Prop) (Q : Prop) : (term1154 A P Q) = (term1155 A P Q).
Proof. exact (EQ_MP (@lem18905 A P Q) (@lem18904 A P Q)). Qed.
Lemma lem4918244 {B : Type'} (P : B -> Prop) (Q : Prop) : (term1154 B P Q) = (term1155 B P Q).
Proof. exact (@lem4918243 B P Q). Qed.
Lemma lem4918245 {B : Type'} (s : B -> Prop) : (term1156 B s) = (term1157 B s).
Proof. exact (@lem4918244 B (term1105 B s) (s = (@EMPTY B))). Qed.
Lemma lem4918246 {B : Type'} (x : B) (s : B -> Prop) : (term1111 B s x) = (@IN B x s).
Proof. exact (eq_refl (term1111 B s x)). Qed.
Lemma lem4918247 {B : Type'} (s : B -> Prop) : (term1158 B s) = (term1105 B s).
Proof. exact (fun_ext (fun x : B => @lem4918246 B x s)). Qed.
Lemma lem4918248 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem4918249 {B : Type'} (s : B -> Prop) : (term1159 B s) = (term1106 B s).
Proof. exact (MK_COMB (@lem4918248 B) (@lem4918247 B s)). Qed.
Lemma lem4918250 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4918251 {B : Type'} (s : B -> Prop) : (term1160 B s) = (term1121 B s).
Proof. exact (MK_COMB (@lem4918250) (@lem4918249 B s)). Qed.
Lemma lem4918252 {B : Type'} (s : B -> Prop) : (s = (@EMPTY B)) = (s = (@EMPTY B)).
Proof. exact (eq_refl (s = (@EMPTY B))). Qed.
Lemma lem4918253 {B : Type'} (s : B -> Prop) : (term1156 B s) = (term1123 B s).
Proof. exact (MK_COMB (@lem4918251 B s) (@lem4918252 B s)). Qed.
Lemma lem4918254 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4918255 {B : Type'} (s : B -> Prop) : (term1161 B s) = (term1162 B s).
Proof. exact (MK_COMB (@lem4918254) (@lem4918253 B s)). Qed.
Lemma lem4918256 {B : Type'} (x : B) (s : B -> Prop) : (term1111 B s x) = (@IN B x s).
Proof. exact (eq_refl (term1111 B s x)). Qed.
Lemma lem4918257 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4918258 {B : Type'} (x : B) (s : B -> Prop) : (term1163 B s x) = (term1164 B x s).
Proof. exact (MK_COMB (@lem4918257) (@lem4918256 B x s)). Qed.
Lemma lem4918259 {B : Type'} (s : B -> Prop) : (s = (@EMPTY B)) = (s = (@EMPTY B)).
Proof. exact (eq_refl (s = (@EMPTY B))). Qed.
Lemma lem4918260 {B : Type'} (x : B) (s : B -> Prop) : (term1165 B x s) = (term1166 B x s).
Proof. exact (MK_COMB (@lem4918258 B x s) (@lem4918259 B s)). Qed.
Lemma lem4918261 {B : Type'} (s : B -> Prop) : (term1167 B s) = (term1168 B s).
Proof. exact (fun_ext (fun x : B => @lem4918260 B x s)). Qed.
Lemma lem4918262 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem4918263 {B : Type'} (s : B -> Prop) : (term1157 B s) = (term1169 B s).
Proof. exact (MK_COMB (@lem4918262 B) (@lem4918261 B s)). Qed.
Lemma lem4918264 {B : Type'} (s : B -> Prop) : ((term1156 B s) = (term1157 B s)) = ((term1123 B s) = (term1169 B s)).
Proof. exact (MK_COMB (@lem4918255 B s) (@lem4918263 B s)). Qed.
Lemma lem4918265 {B : Type'} (s : B -> Prop) : (term1123 B s) = (term1169 B s).
Proof. exact (EQ_MP (@lem4918264 B s) (@lem4918245 B s)). Qed.
Lemma lem4918266 {B : Type'} : (term1136 B) = (term1170 B).
Proof. exact (fun_ext (fun s : B -> Prop => @lem4918265 B s)). Qed.
Lemma lem4918267 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4918268 {B : Type'} : (term1147 B) = (term1171 B).
Proof. exact (MK_COMB (@lem4918267 B) (@lem4918266 B)). Qed.
Lemma lem4918270 {A B : Type'} (P : type1413 A B) : (term814 A B P) = (term815 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem4918271 {B : Type'} (P : type672 B) : (term1172 B P) = (term1173 B P).
Proof. exact (@lem4918270 (B -> Prop) B P). Qed.
Lemma lem4918272 {B : Type'} : (term1174 B) = (term1175 B).
Proof. exact (@lem4918271 B (term1176 B)). Qed.
Lemma lem4918273 {B : Type'} (s : B -> Prop) : (term1177 B s) = (term1168 B s).
Proof. exact (eq_refl (term1177 B s)). Qed.
Lemma lem4918274 {B : Type'} (x : B) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem4918275 {B : Type'} (s : B -> Prop) (x : B) : (term1178 B s x) = (term1179 B s x).
Proof. exact (MK_COMB (@lem4918273 B s) (@lem4918274 B x)). Qed.
Lemma lem4918276 {B : Type'} (x : B) (s : B -> Prop) : (term1179 B s x) = (term1166 B x s).
Proof. exact (eq_refl (term1179 B s x)). Qed.
Lemma lem4918277 {B : Type'} (x : B) (s : B -> Prop) : (term1178 B s x) = (term1166 B x s).
Proof. exact (TRANS (@lem4918275 B s x) (@lem4918276 B x s)). Qed.
Lemma lem4918278 {B : Type'} (s : B -> Prop) : (term1180 B s) = (term1168 B s).
Proof. exact (fun_ext (fun x : B => @lem4918277 B x s)). Qed.
Lemma lem4918279 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem4918280 {B : Type'} (s : B -> Prop) : (term1181 B s) = (term1169 B s).
Proof. exact (MK_COMB (@lem4918279 B) (@lem4918278 B s)). Qed.
Lemma lem4918281 {B : Type'} : (term1182 B) = (term1170 B).
Proof. exact (fun_ext (fun s : B -> Prop => @lem4918280 B s)). Qed.
Lemma lem4918282 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4918283 {B : Type'} : (term1174 B) = (term1171 B).
Proof. exact (MK_COMB (@lem4918282 B) (@lem4918281 B)). Qed.
Lemma lem4918284 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4918285 {B : Type'} : (term1183 B) = (term1184 B).
Proof. exact (MK_COMB (@lem4918284) (@lem4918283 B)). Qed.
Lemma lem4918286 {B : Type'} (s : B -> Prop) : (term1177 B s) = (term1168 B s).
Proof. exact (eq_refl (term1177 B s)). Qed.
Lemma lem4918287 {B : Type'} (x : type684 B) (s : B -> Prop) : (x s) = (x s).
Proof. exact (eq_refl (x s)). Qed.
Lemma lem4918288 {B : Type'} (x : type684 B) (s : B -> Prop) : (term1185 B x s) = (term1186 B x s).
Proof. exact (MK_COMB (@lem4918286 B s) (@lem4918287 B x s)). Qed.
Lemma lem4918289 {B : Type'} (x : type684 B) (s : B -> Prop) : (term1186 B x s) = (term1187 B x s).
Proof. exact (eq_refl (term1186 B x s)). Qed.
Lemma lem4918290 {B : Type'} (x : type684 B) (s : B -> Prop) : (term1185 B x s) = (term1187 B x s).
Proof. exact (TRANS (@lem4918288 B x s) (@lem4918289 B x s)). Qed.
Lemma lem4918291 {B : Type'} (x : type684 B) : (term1188 B x) = (term1189 B x).
Proof. exact (fun_ext (fun s : B -> Prop => @lem4918290 B x s)). Qed.
Lemma lem4918292 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4918293 {B : Type'} (x : type684 B) : (term1190 B x) = (term1191 B x).
Proof. exact (MK_COMB (@lem4918292 B) (@lem4918291 B x)). Qed.
Lemma lem4918294 {B : Type'} : (term1192 B) = (term1193 B).
Proof. exact (fun_ext (fun x : type684 B => @lem4918293 B x)). Qed.
Lemma lem4918295 {B : Type'} : (@ex ((B -> Prop) -> B)) = (@ex ((B -> Prop) -> B)).
Proof. exact (eq_refl (@ex ((B -> Prop) -> B))). Qed.
Lemma lem4918296 {B : Type'} : (term1175 B) = (term1194 B).
Proof. exact (MK_COMB (@lem4918295 B) (@lem4918294 B)). Qed.
Lemma lem4918297 {B : Type'} : ((term1174 B) = (term1175 B)) = ((term1171 B) = (term1194 B)).
Proof. exact (MK_COMB (@lem4918285 B) (@lem4918296 B)). Qed.
Lemma lem4918298 {B : Type'} : (term1171 B) = (term1194 B).
Proof. exact (EQ_MP (@lem4918297 B) (@lem4918272 B)). Qed.
Lemma lem4918299 {B : Type'} : (term1147 B) = (term1194 B).
Proof. exact (TRANS (@lem4918268 B) (@lem4918298 B)). Qed.
Lemma lem4918300 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4918301 {B : Type'} : (term1149 B) = (term1195 B).
Proof. exact (MK_COMB (@lem4918300) (@lem4918299 B)). Qed.
Lemma lem4918302 {B : Type'} : (term1152 B) = (term1152 B).
Proof. exact (eq_refl (term1152 B)). Qed.
Lemma lem4918303 {B : Type'} : (term1153 B) = (term1196 B).
Proof. exact (MK_COMB (@lem4918301 B) (@lem4918302 B)). Qed.
Lemma lem4918305 {A : Type'} (P : A -> Prop) (Q : Prop) : (term1197 A P Q) = (term1198 A P Q).
Proof. exact (EQ_MP (@lem18923 A P Q) (@lem18922 A P Q)). Qed.
Lemma lem4918306 {B : Type'} (P : type162 B) (Q : Prop) : (term1199 B P Q) = (term1200 B P Q).
Proof. exact (@lem4918305 (type684 B) P Q). Qed.
Lemma lem4918307 {B : Type'} : (term1201 B) = (term1202 B).
Proof. exact (@lem4918306 B (term1193 B) (term1152 B)). Qed.
Lemma lem4918308 {B : Type'} (x : type684 B) : (term1203 B x) = (term1191 B x).
Proof. exact (eq_refl (term1203 B x)). Qed.
Lemma lem4918309 {B : Type'} : (term1204 B) = (term1193 B).
Proof. exact (fun_ext (fun x : type684 B => @lem4918308 B x)). Qed.
Lemma lem4918310 {B : Type'} : (@ex ((B -> Prop) -> B)) = (@ex ((B -> Prop) -> B)).
Proof. exact (eq_refl (@ex ((B -> Prop) -> B))). Qed.
Lemma lem4918311 {B : Type'} : (term1205 B) = (term1194 B).
Proof. exact (MK_COMB (@lem4918310 B) (@lem4918309 B)). Qed.
Lemma lem4918312 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4918313 {B : Type'} : (term1206 B) = (term1195 B).
Proof. exact (MK_COMB (@lem4918312) (@lem4918311 B)). Qed.
Lemma lem4918314 {B : Type'} : (term1152 B) = (term1152 B).
Proof. exact (eq_refl (term1152 B)). Qed.
Lemma lem4918315 {B : Type'} : (term1201 B) = (term1196 B).
Proof. exact (MK_COMB (@lem4918313 B) (@lem4918314 B)). Qed.
Lemma lem4918316 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4918317 {B : Type'} : (term1207 B) = (term1208 B).
Proof. exact (MK_COMB (@lem4918316) (@lem4918315 B)). Qed.
Lemma lem4918318 {B : Type'} (x : type684 B) : (term1203 B x) = (term1191 B x).
Proof. exact (eq_refl (term1203 B x)). Qed.
Lemma lem4918319 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4918320 {B : Type'} (x : type684 B) : (term1209 B x) = (term1210 B x).
Proof. exact (MK_COMB (@lem4918319) (@lem4918318 B x)). Qed.
Lemma lem4918321 {B : Type'} : (term1152 B) = (term1152 B).
Proof. exact (eq_refl (term1152 B)). Qed.
Lemma lem4918322 {B : Type'} (x : type684 B) : (term1211 B x) = (term1212 B x).
Proof. exact (MK_COMB (@lem4918320 B x) (@lem4918321 B)). Qed.
Lemma lem4918323 {B : Type'} : (term1213 B) = (term1214 B).
Proof. exact (fun_ext (fun x : type684 B => @lem4918322 B x)). Qed.
Lemma lem4918324 {B : Type'} : (@ex ((B -> Prop) -> B)) = (@ex ((B -> Prop) -> B)).
Proof. exact (eq_refl (@ex ((B -> Prop) -> B))). Qed.
Lemma lem4918325 {B : Type'} : (term1202 B) = (term1215 B).
Proof. exact (MK_COMB (@lem4918324 B) (@lem4918323 B)). Qed.
Lemma lem4918326 {B : Type'} : ((term1201 B) = (term1202 B)) = ((term1196 B) = (term1215 B)).
Proof. exact (MK_COMB (@lem4918317 B) (@lem4918325 B)). Qed.
Lemma lem4918327 {B : Type'} : (term1196 B) = (term1215 B).
Proof. exact (EQ_MP (@lem4918326 B) (@lem4918307 B)). Qed.
Lemma lem4918328 {B : Type'} : (term1153 B) = (term1215 B).
Proof. exact (TRANS (@lem4918303 B) (@lem4918327 B)). Qed.
Lemma lem4918329 {B : Type'} : (term1129 B) = (term1215 B).
Proof. exact (TRANS (@lem4918137 B) (@lem4918328 B)). Qed.
Lemma lem4918330 {B : Type'} : (term1043 B) = (term1215 B).
Proof. exact (TRANS (@lem4918110 B) (@lem4918329 B)). Qed.
Lemma lem4918331 {B : Type'} (h1 : term1043 B) : term1215 B.
Proof. exact (EQ_MP (@lem4918330 B) (@lem4917341 B h1)). Qed.
Lemma lem4918424 {A : Type'} (s : A -> Prop) : (((@CARD A s) = (NUMERAL 0)) = (s = (@EMPTY A))) = (term1216 A s).
Proof. exact (@lem17784 ((@CARD A s) = (NUMERAL 0)) (s = (@EMPTY A))). Qed.
Lemma lem4918426 {A : Type'} (s : A -> Prop) : (term1217 A s) = (term1217 A s).
Proof. exact (eq_refl (term1217 A s)). Qed.
Lemma lem4918427 {A : Type'} (s : A -> Prop) : (term1218 A s) = (term1219 A s).
Proof. exact (MK_COMB (@lem4918426 A s) (@lem4918424 A s)). Qed.
Lemma lem4918428 {A : Type'} (s : A -> Prop) : (term1102 A s) = (term1218 A s).
Proof. exact (@lem17265 (@FINITE A s) (((@CARD A s) = (NUMERAL 0)) = (s = (@EMPTY A)))). Qed.
Lemma lem4918429 {A : Type'} (s : A -> Prop) : (term1102 A s) = (term1219 A s).
Proof. exact (TRANS (@lem4918428 A s) (@lem4918427 A s)). Qed.
Lemma lem4918430 {A : Type'} : (term1103 A) = (term1220 A).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4918429 A s)). Qed.
Lemma lem4918431 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4918484 {A : Type'} : (term1042 A) = (term1221 A).
Proof. exact (MK_COMB (@lem4918431 A) (@lem4918430 A)). Qed.
Lemma lem4918485 {A : Type'} (h1 : term1042 A) : term1221 A.
Proof. exact (EQ_MP (@lem4918484 A) (@lem4917343 A h1)). Qed.
Lemma lem4918564 {A : Type'} (x'' : type684 A) (h1 : term1212 A x'') : term1212 A x''.
Proof. exact (h1). Qed.
Lemma lem4918570 {A : Type'} (s : A -> Prop) (h1 : @FINITE A s) : @FINITE A s.
Proof. exact (h1). Qed.
Lemma lem4918584 {A B : Type'} (s : A -> Prop) (t : B -> Prop) (h1 : (@CARD A s) = (@CARD B t)) : (@CARD A s) = (@CARD B t).
Proof. exact (h1). Qed.
Lemma lem4918606 {A : Type'} (y : A) (s : A -> Prop) (h1 : @IN A y s) : @IN A y s.
Proof. exact (h1). Qed.
Lemma lem4918643 {B : Type'} (t : B -> Prop) (h1 : (@CARD B t) = (NUMERAL 0)) : (@CARD B t) = (NUMERAL 0).
Proof. exact (h1). Qed.
Lemma lem4918745 {A : Type'} (s : A -> Prop) : (term1219 A s) = (term1219 A s).
Proof. exact (eq_refl (term1219 A s)). Qed.
Lemma lem4918746 {A : Type'} : (term1220 A) = (term1220 A).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4918745 A s)). Qed.
Lemma lem4918747 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4918748 {A : Type'} : (term1221 A) = (term1221 A).
Proof. exact (MK_COMB (@lem4918747 A) (@lem4918746 A)). Qed.
Lemma lem4918749 {A : Type'} (h1 : term1042 A) : term1221 A.
Proof. exact (EQ_MP (@lem4918748 A) (@lem4918485 A h1)). Qed.
Lemma lem4918854 {A : Type'} (s : A -> Prop) : (term1104 A s) = (term1104 A s).
Proof. exact (eq_refl (term1104 A s)). Qed.
Lemma lem4918861 {A : Type'} (x : A) (s : A -> Prop) : (term801 A x s) = (term801 A x s).
Proof. exact (eq_refl (term801 A x s)). Qed.
Lemma lem4918862 {A : Type'} (s : A -> Prop) : (term1114 A s) = (term1114 A s).
Proof. exact (fun_ext (fun x : A => @lem4918861 A x s)). Qed.
Lemma lem4918863 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4918864 {A : Type'} (s : A -> Prop) : (term1115 A s) = (term1115 A s).
Proof. exact (MK_COMB (@lem4918863 A) (@lem4918862 A s)). Qed.
Lemma lem4918865 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4918866 {A : Type'} (s : A -> Prop) : (term1118 A s) = (term1118 A s).
Proof. exact (MK_COMB (@lem4918865) (@lem4918864 A s)). Qed.
Lemma lem4918867 {A : Type'} (s : A -> Prop) : (term1120 A s) = (term1120 A s).
Proof. exact (MK_COMB (@lem4918866 A s) (@lem4918854 A s)). Qed.
Lemma lem4918868 {A : Type'} : (term1137 A) = (term1137 A).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4918867 A s)). Qed.
Lemma lem4918869 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4918870 {A : Type'} : (term1152 A) = (term1152 A).
Proof. exact (MK_COMB (@lem4918869 A) (@lem4918868 A)). Qed.
Lemma lem4918885 {A : Type'} (x'' : type684 A) (s : A -> Prop) : (term1187 A x'' s) = (term1187 A x'' s).
Proof. exact (eq_refl (term1187 A x'' s)). Qed.
Lemma lem4918886 {A : Type'} (x'' : type684 A) : (term1189 A x'') = (term1189 A x'').
Proof. exact (fun_ext (fun s : A -> Prop => @lem4918885 A x'' s)). Qed.
Lemma lem4918887 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4918888 {A : Type'} (x'' : type684 A) : (term1191 A x'') = (term1191 A x'').
Proof. exact (MK_COMB (@lem4918887 A) (@lem4918886 A x'')). Qed.
Lemma lem4918889 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4918890 {A : Type'} (x'' : type684 A) : (term1210 A x'') = (term1210 A x'').
Proof. exact (MK_COMB (@lem4918889) (@lem4918888 A x'')). Qed.
Lemma lem4918891 {A : Type'} (x'' : type684 A) : (term1212 A x'') = (term1212 A x'').
Proof. exact (MK_COMB (@lem4918890 A x'') (@lem4918870 A)). Qed.
Lemma lem4918892 {A : Type'} (x'' : type684 A) (h1 : term1212 A x'') : term1212 A x''.
Proof. exact (EQ_MP (@lem4918891 A x'') (@lem4918564 A x'' h1)). Qed.
Lemma lem4918978 {A : Type'} (x'' : type684 A) (h1 : term1212 A x'') : term1152 A.
Proof. exact (proj2 (@lem4918892 A x'' h1)). Qed.
Lemma lem4918985 {A : Type'} (s : A -> Prop) (h1 : @FINITE A s) : @FINITE A s.
Proof. exact (h1). Qed.
Lemma lem4918993 {A B : Type'} (s : A -> Prop) (t : B -> Prop) (h1 : (@CARD A s) = (@CARD B t)) : (@CARD A s) = (@CARD B t).
Proof. exact (h1). Qed.
Lemma lem4919005 {A : Type'} (y : A) (s : A -> Prop) (h1 : @IN A y s) : @IN A y s.
Proof. exact (h1). Qed.
Lemma lem4919017 {B : Type'} (t : B -> Prop) (h1 : (@CARD B t) = (NUMERAL 0)) : (@CARD B t) = (NUMERAL 0).
Proof. exact (h1). Qed.
Lemma lem4919082 {A : Type'} (s : A -> Prop) : (term1219 A s) = (term1222 A s).
Proof. exact (@lem19490 (term1223 A s) (term1224 A s) (term1225 A s)). Qed.
Lemma lem4919083 {A : Type'} : (term1220 A) = (term1226 A).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4919082 A s)). Qed.
Lemma lem4919084 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4919086 {A : Type'} : (term1221 A) = (term1227 A).
Proof. exact (MK_COMB (@lem4919084 A) (@lem4919083 A)). Qed.
Lemma lem4919087 {A : Type'} (h1 : term1042 A) : term1227 A.
Proof. exact (EQ_MP (@lem4919086 A) (@lem4918749 A h1)). Qed.
Lemma lem4919215 {A : Type'} (P : A -> Prop) (Q : Prop) : (term1228 A P Q) = (term1229 A P Q).
Proof. exact (EQ_MP (@lem19013 A P Q) (@lem19012 A P Q)). Qed.
Lemma lem4919216 {A : Type'} (P : A -> Prop) (Q : Prop) : (term1228 A P Q) = (term1229 A P Q).
Proof. exact (@lem4919215 A P Q). Qed.
Lemma lem4919217 {A : Type'} (s : A -> Prop) : (term1230 A s) = (term1231 A s).
Proof. exact (@lem4919216 A (term1114 A s) (term1104 A s)). Qed.
Lemma lem4919218 {A : Type'} (x : A) (s : A -> Prop) : (term1232 A s x) = (term801 A x s).
Proof. exact (eq_refl (term1232 A s x)). Qed.
Lemma lem4919219 {A : Type'} (s : A -> Prop) : (term1233 A s) = (term1114 A s).
Proof. exact (fun_ext (fun x : A => @lem4919218 A x s)). Qed.
Lemma lem4919220 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4919221 {A : Type'} (s : A -> Prop) : (term1234 A s) = (term1115 A s).
Proof. exact (MK_COMB (@lem4919220 A) (@lem4919219 A s)). Qed.
Lemma lem4919222 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4919223 {A : Type'} (s : A -> Prop) : (term1235 A s) = (term1118 A s).
Proof. exact (MK_COMB (@lem4919222) (@lem4919221 A s)). Qed.
Lemma lem4919224 {A : Type'} (s : A -> Prop) : (term1104 A s) = (term1104 A s).
Proof. exact (eq_refl (term1104 A s)). Qed.
Lemma lem4919225 {A : Type'} (s : A -> Prop) : (term1230 A s) = (term1120 A s).
Proof. exact (MK_COMB (@lem4919223 A s) (@lem4919224 A s)). Qed.
Lemma lem4919226 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4919227 {A : Type'} (s : A -> Prop) : (term1236 A s) = (term1237 A s).
Proof. exact (MK_COMB (@lem4919226) (@lem4919225 A s)). Qed.
Lemma lem4919228 {A : Type'} (x : A) (s : A -> Prop) : (term1232 A s x) = (term801 A x s).
Proof. exact (eq_refl (term1232 A s x)). Qed.
Lemma lem4919229 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4919230 {A : Type'} (x : A) (s : A -> Prop) : (term1238 A s x) = (term793 A x s).
Proof. exact (MK_COMB (@lem4919229) (@lem4919228 A x s)). Qed.
Lemma lem4919231 {A : Type'} (s : A -> Prop) : (term1104 A s) = (term1104 A s).
Proof. exact (eq_refl (term1104 A s)). Qed.
Lemma lem4919232 {A : Type'} (x : A) (s : A -> Prop) : (term1239 A x s) = (term1240 A x s).
Proof. exact (MK_COMB (@lem4919230 A x s) (@lem4919231 A s)). Qed.
Lemma lem4919233 {A : Type'} (s : A -> Prop) : (term1241 A s) = (term1242 A s).
Proof. exact (fun_ext (fun x : A => @lem4919232 A x s)). Qed.
Lemma lem4919234 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4919235 {A : Type'} (s : A -> Prop) : (term1231 A s) = (term1243 A s).
Proof. exact (MK_COMB (@lem4919234 A) (@lem4919233 A s)). Qed.
Lemma lem4919236 {A : Type'} (s : A -> Prop) : ((term1230 A s) = (term1231 A s)) = ((term1120 A s) = (term1243 A s)).
Proof. exact (MK_COMB (@lem4919227 A s) (@lem4919235 A s)). Qed.
Lemma lem4919237 {A : Type'} (s : A -> Prop) : (term1120 A s) = (term1243 A s).
Proof. exact (EQ_MP (@lem4919236 A s) (@lem4919217 A s)). Qed.
Lemma lem4919238 {A : Type'} : (term1137 A) = (term1244 A).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4919237 A s)). Qed.
Lemma lem4919239 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4919240 {A : Type'} : (term1152 A) = (term1245 A).
Proof. exact (MK_COMB (@lem4919239 A) (@lem4919238 A)). Qed.
Lemma lem4919247 {A : Type'} (x : A) (s : A -> Prop) : (term1240 A x s) = (term1240 A x s).
Proof. exact (eq_refl (term1240 A x s)). Qed.
Lemma lem4919248 {A : Type'} (s : A -> Prop) : (term1242 A s) = (term1242 A s).
Proof. exact (fun_ext (fun x : A => @lem4919247 A x s)). Qed.
Lemma lem4919249 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4919250 {A : Type'} (s : A -> Prop) : (term1243 A s) = (term1243 A s).
Proof. exact (MK_COMB (@lem4919249 A) (@lem4919248 A s)). Qed.
Lemma lem4919251 {A : Type'} : (term1244 A) = (term1244 A).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4919250 A s)). Qed.
Lemma lem4919252 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4919253 {A : Type'} : (term1245 A) = (term1245 A).
Proof. exact (MK_COMB (@lem4919252 A) (@lem4919251 A)). Qed.
Lemma lem4919254 {A : Type'} : (term1152 A) = (term1245 A).
Proof. exact (TRANS (@lem4919240 A) (@lem4919253 A)). Qed.
Lemma lem4919255 {A : Type'} (x'' : type684 A) (h1 : term1212 A x'') : term1245 A.
Proof. exact (EQ_MP (@lem4919254 A) (@lem4918978 A x'' h1)). Qed.
Lemma lem4919314 {A : Type'} (_61076 : A -> Prop) (h1 : term1042 A) : term1246 A _61076.
Proof. exact (@lem4919087 A h1 _61076). Qed.
Lemma lem4919315 {A : Type'} (_61076 : A -> Prop) : (term1246 A _61076) = (term1222 A _61076).
Proof. exact (eq_refl (term1246 A _61076)). Qed.
Lemma lem4919316 {A : Type'} (_61076 : A -> Prop) (h1 : term1042 A) : term1222 A _61076.
Proof. exact (EQ_MP (@lem4919315 A _61076) (@lem4919314 A _61076 h1)). Qed.
Lemma lem4919335 {A : Type'} (_61083 : A -> Prop) (x'' : type684 A) (h1 : term1212 A x'') : term1247 A _61083.
Proof. exact (@lem4919255 A x'' h1 _61083). Qed.
Lemma lem4919336 {A : Type'} (_61083 : A -> Prop) : (term1247 A _61083) = (term1243 A _61083).
Proof. exact (eq_refl (term1247 A _61083)). Qed.
Lemma lem4919337 {A : Type'} (_61083 : A -> Prop) (x'' : type684 A) (h1 : term1212 A x'') : term1243 A _61083.
Proof. exact (EQ_MP (@lem4919336 A _61083) (@lem4919335 A _61083 x'' h1)). Qed.
Lemma lem4919338 {A : Type'} (_61083 : A -> Prop) (_61084 : A) (x'' : type684 A) (h1 : term1212 A x'') : term1248 A _61083 _61084.
Proof. exact (@lem4919337 A _61083 x'' h1 _61084). Qed.
Lemma lem4919339 {A : Type'} (_61084 : A) (_61083 : A -> Prop) : (term1248 A _61083 _61084) = (term1240 A _61084 _61083).
Proof. exact (eq_refl (term1248 A _61083 _61084)). Qed.
Lemma lem4919359 {A : Type'} (s : A -> Prop) (h1 : @FINITE A s) : @FINITE A s.
Proof. exact (h1). Qed.
Lemma lem4919363 {A B : Type'} (s : A -> Prop) (t : B -> Prop) (h1 : (@CARD A s) = (@CARD B t)) : (@CARD A s) = (@CARD B t).
Proof. exact (h1). Qed.
Lemma lem4919369 {A : Type'} (y : A) (s : A -> Prop) (h1 : @IN A y s) : @IN A y s.
Proof. exact (h1). Qed.
Lemma lem4919375 {B : Type'} (t : B -> Prop) (h1 : (@CARD B t) = (NUMERAL 0)) : (@CARD B t) = (NUMERAL 0).
Proof. exact (h1). Qed.
Lemma lem4919399 {A : Type'} (_61084 : A) (_61083 : A -> Prop) (x'' : type684 A) (h1 : term1212 A x'') : term1240 A _61084 _61083.
Proof. exact (EQ_MP (@lem4919339 A _61084 _61083) (@lem4919338 A _61083 _61084 x'' h1)). Qed.
Lemma lem4919463 {A : Type'} (_61076 : A -> Prop) (h1 : term1042 A) : term1249 A _61076.
Proof. exact (proj2 (@lem4919316 A _61076 h1)). Qed.
Lemma lem4919691 (x : nat) (y : nat) (z : nat) : term1250 x y z.
Proof. exact (@lem21385 nat x y z). Qed.
Lemma lem4919707 {A : Type'} (y : A) (s : A -> Prop) (h1 : @IN A y s) : @IN A y s.
Proof. exact (h1). Qed.
Lemma lem4919708 {A : Type'} (y : A) (s : A -> Prop) (h1 : @IN A y s) : term887 A y s.
Proof. exact (fun h0 : term801 A y s => @lem4919707 A y s h1). Qed.
Lemma lem4919710 (p : Prop) : (term888 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem4919711 {A : Type'} (y : A) (s : A -> Prop) : (term887 A y s) = (@IN A y s).
Proof. exact (@lem4919710 (@IN A y s)). Qed.
Lemma lem4919712 {A : Type'} (y : A) (s : A -> Prop) (h1 : @IN A y s) : @IN A y s.
Proof. exact (EQ_MP (@lem4919711 A y s) (@lem4919708 A y s h1)). Qed.
Lemma lem4919714 {A : Type'} (s : A -> Prop) (h1 : @FINITE A s) : @FINITE A s.
Proof. exact (h1). Qed.
Lemma lem4919715 {A : Type'} (s : A -> Prop) (h1 : @FINITE A s) : term1251 A s.
Proof. exact (fun h0 : term1224 A s => @lem4919714 A s h1). Qed.
Lemma lem4919717 (p : Prop) : (term888 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem4919718 {A : Type'} (s : A -> Prop) : (term1251 A s) = (@FINITE A s).
Proof. exact (@lem4919717 (@FINITE A s)). Qed.
Lemma lem4919719 {A : Type'} (s : A -> Prop) (h1 : @FINITE A s) : @FINITE A s.
Proof. exact (EQ_MP (@lem4919718 A s) (@lem4919715 A s h1)). Qed.
Lemma lem4919721 {A B : Type'} (s : A -> Prop) (t : B -> Prop) (h1 : (@CARD A s) = (@CARD B t)) : (@CARD A s) = (@CARD B t).
Proof. exact (h1). Qed.
Lemma lem4919722 {A B : Type'} (s : A -> Prop) (t : B -> Prop) (h1 : (@CARD A s) = (@CARD B t)) : term1252 A B s t.
Proof. exact (fun h0 : term1253 A B s t => @lem4919721 A B s t h1). Qed.
Lemma lem4919724 (p : Prop) : (term888 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem4919725 {A B : Type'} (s : A -> Prop) (t : B -> Prop) : (term1252 A B s t) = ((@CARD A s) = (@CARD B t)).
Proof. exact (@lem4919724 ((@CARD A s) = (@CARD B t))). Qed.
Lemma lem4919726 {A B : Type'} (s : A -> Prop) (t : B -> Prop) (h1 : (@CARD A s) = (@CARD B t)) : (@CARD A s) = (@CARD B t).
Proof. exact (EQ_MP (@lem4919725 A B s t) (@lem4919722 A B s t h1)). Qed.
Lemma lem4919728 (x : nat) : x = x.
Proof. exact (@lem21386 nat x). Qed.
Lemma lem4919729 {A : Type'} (s : A -> Prop) : (@CARD A s) = (@CARD A s).
Proof. exact (@lem4919728 (@CARD A s)). Qed.
Lemma lem4919730 {A : Type'} (s : A -> Prop) : term1254 A s.
Proof. exact (fun h0 : term1255 A s => @lem4919729 A s). Qed.
Lemma lem4919732 (p : Prop) : (term888 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem4919733 {A : Type'} (s : A -> Prop) : (term1254 A s) = ((@CARD A s) = (@CARD A s)).
Proof. exact (@lem4919732 ((@CARD A s) = (@CARD A s))). Qed.
Lemma lem4919734 {A : Type'} (s : A -> Prop) : (@CARD A s) = (@CARD A s).
Proof. exact (EQ_MP (@lem4919733 A s) (@lem4919730 A s)). Qed.
Lemma lem4919752 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem4919753 (y : nat) (x : nat) (z : nat) : (term1256 x y z) = (term1257 y x z).
Proof. exact (@lem4919752 (y = z) (term1258 x z)). Qed.
Lemma lem4919763 (x : nat) (y : nat) : (term1259 x y) = (term1259 x y).
Proof. exact (eq_refl (term1259 x y)). Qed.
Lemma lem4919764 (y : nat) (x : nat) (z : nat) : (term1250 x y z) = (term1260 y x z).
Proof. exact (MK_COMB (@lem4919763 x y) (@lem4919753 y x z)). Qed.
Lemma lem4919768 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem4919769 (y : nat) (x : nat) (z : nat) : (term1260 y x z) = (term1261 y x z).
Proof. exact (@lem4919768 (y = z) (term1258 x y) (term1258 x z)). Qed.
Lemma lem4919791 (y : nat) (x : nat) (z : nat) : (term1250 x y z) = (term1261 y x z).
Proof. exact (TRANS (@lem4919764 y x z) (@lem4919769 y x z)). Qed.
Lemma lem4919792 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4919793 (y : nat) (x : nat) (z : nat) : (term1262 x y z) = (term1263 y x z).
Proof. exact (MK_COMB (@lem4919792) (@lem4919791 y x z)). Qed.
Lemma lem4919815 (y : nat) (x : nat) (z : nat) : (term1261 y x z) = (term1261 y x z).
Proof. exact (eq_refl (term1261 y x z)). Qed.
Lemma lem4919816 (y : nat) (x : nat) (z : nat) : ((term1250 x y z) = (term1261 y x z)) = ((term1261 y x z) = (term1261 y x z)).
Proof. exact (MK_COMB (@lem4919793 y x z) (@lem4919815 y x z)). Qed.
Lemma lem4919818 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem20665 A x) (@lem20664 A x)). Qed.
Lemma lem4919819 (x : Prop) : (x = x) = True.
Proof. exact (@lem4919818 Prop x). Qed.
Lemma lem4919820 (y : nat) (x : nat) (z : nat) : ((term1261 y x z) = (term1261 y x z)) = True.
Proof. exact (@lem4919819 (term1261 y x z)). Qed.
Lemma lem4919821 (y : nat) (x : nat) (z : nat) : ((term1250 x y z) = (term1261 y x z)) = True.
Proof. exact (TRANS (@lem4919816 y x z) (@lem4919820 y x z)). Qed.
Lemma lem4919822 (y : nat) (x : nat) (z : nat) : True = ((term1250 x y z) = (term1261 y x z)).
Proof. exact (SYM (@lem4919821 y x z)). Qed.
Lemma lem4919823 (y : nat) (x : nat) (z : nat) : (term1250 x y z) = (term1261 y x z).
Proof. exact (EQ_MP (@lem4919822 y x z) (@lem0)). Qed.
Lemma lem4919824 (y : nat) (x : nat) (z : nat) : term1261 y x z.
Proof. exact (EQ_MP (@lem4919823 y x z) (@lem4919691 x y z)). Qed.
Lemma lem4919826 (b : Prop) (a : Prop) : (a \/ b) = (term892 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem4919827 (x : nat) (y : nat) (z : nat) : (term1261 y x z) = (term1264 x y z).
Proof. exact (@lem4919826 (term1265 y x z) (y = z)). Qed.
Lemma lem4919829 (a : Prop) (b : Prop) : (term910 a b) = (term911 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem4919830 (y : nat) (x : nat) (z : nat) : (term1266 y x z) = (term1267 y x z).
Proof. exact (@lem4919829 (term1258 x y) (term1258 x z)). Qed.
Lemma lem4919832 (a : Prop) : (term197 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem4919833 (x : nat) (y : nat) : (term1268 x y) = (x = y).
Proof. exact (@lem4919832 (x = y)). Qed.
Lemma lem4919834 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4919835 (x : nat) (y : nat) : (term1269 x y) = (term1270 x y).
Proof. exact (MK_COMB (@lem4919834) (@lem4919833 x y)). Qed.
Lemma lem4919837 (a : Prop) : (term197 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem4919838 (x : nat) (z : nat) : (term1268 x z) = (x = z).
Proof. exact (@lem4919837 (x = z)). Qed.
Lemma lem4919839 (y : nat) (x : nat) (z : nat) : (term1267 y x z) = (term1271 y x z).
Proof. exact (MK_COMB (@lem4919835 x y) (@lem4919838 x z)). Qed.
Lemma lem4919840 (y : nat) (x : nat) (z : nat) : (term1266 y x z) = (term1271 y x z).
Proof. exact (TRANS (@lem4919830 y x z) (@lem4919839 y x z)). Qed.
Lemma lem4919841 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4919842 (y : nat) (x : nat) (z : nat) : (term1272 y x z) = (term1273 y x z).
Proof. exact (MK_COMB (@lem4919841) (@lem4919840 y x z)). Qed.
Lemma lem4919843 (y : nat) (z : nat) : (y = z) = (y = z).
Proof. exact (eq_refl (y = z)). Qed.
Lemma lem4919844 (x : nat) (y : nat) (z : nat) : (term1264 x y z) = (term1274 x y z).
Proof. exact (MK_COMB (@lem4919842 y x z) (@lem4919843 y z)). Qed.
Lemma lem4919845 (x : nat) (y : nat) (z : nat) : (term1261 y x z) = (term1274 x y z).
Proof. exact (TRANS (@lem4919827 x y z) (@lem4919844 x y z)). Qed.
Lemma lem4919847 {A B : Type'} (s : A -> Prop) (t : B -> Prop) (h1 : (@CARD A s) = (@CARD B t)) : term1275 A B t s.
Proof. exact (conj (@lem4919726 A B s t h1) (@lem4919734 A s)). Qed.
Lemma lem4919849 (x : nat) (y : nat) (z : nat) : term1274 x y z.
Proof. exact (EQ_MP (@lem4919845 x y z) (@lem4919824 y x z)). Qed.
Lemma lem4919850 {A B : Type'} (t : B -> Prop) (s : A -> Prop) : term1276 A B t s.
Proof. exact (@lem4919849 (@CARD A s) (@CARD B t) (@CARD A s)). Qed.
Lemma lem4919853 {A B : Type'} (s : A -> Prop) (t : B -> Prop) (h1 : (@CARD A s) = (@CARD B t)) : (@CARD B t) = (@CARD A s).
Proof. exact (@lem4919850 A B t s (@lem4919847 A B s t h1)). Qed.
Lemma lem4919854 {A B : Type'} (s : A -> Prop) (t : B -> Prop) (h1 : (@CARD A s) = (@CARD B t)) : term1277 A B t s.
Proof. exact (fun h0 : term1278 A B t s => @lem4919853 A B s t h1). Qed.
Lemma lem4919856 (p : Prop) : (term888 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem4919857 {A B : Type'} (t : B -> Prop) (s : A -> Prop) : (term1277 A B t s) = ((@CARD B t) = (@CARD A s)).
Proof. exact (@lem4919856 ((@CARD B t) = (@CARD A s))). Qed.
Lemma lem4919858 {A B : Type'} (s : A -> Prop) (t : B -> Prop) (h1 : (@CARD A s) = (@CARD B t)) : (@CARD B t) = (@CARD A s).
Proof. exact (EQ_MP (@lem4919857 A B t s) (@lem4919854 A B s t h1)). Qed.
Lemma lem4919860 {B : Type'} (t : B -> Prop) (h1 : (@CARD B t) = (NUMERAL 0)) : (@CARD B t) = (NUMERAL 0).
Proof. exact (h1). Qed.
Lemma lem4919861 {B : Type'} (t : B -> Prop) (h1 : (@CARD B t) = (NUMERAL 0)) : term1279 B t.
Proof. exact (fun h0 : term1041 B t => @lem4919860 B t h1). Qed.
Lemma lem4919863 (p : Prop) : (term888 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem4919864 {B : Type'} (t : B -> Prop) : (term1279 B t) = ((@CARD B t) = (NUMERAL 0)).
Proof. exact (@lem4919863 ((@CARD B t) = (NUMERAL 0))). Qed.
Lemma lem4919865 {B : Type'} (t : B -> Prop) (h1 : (@CARD B t) = (NUMERAL 0)) : (@CARD B t) = (NUMERAL 0).
Proof. exact (EQ_MP (@lem4919864 B t) (@lem4919861 B t h1)). Qed.
Lemma lem4919866 {A B : Type'} (s : A -> Prop) (t : B -> Prop) (h1 : (@CARD A s) = (@CARD B t)) (h2 : (@CARD B t) = (NUMERAL 0)) : term1280 A B s t.
Proof. exact (conj (@lem4919858 A B s t h1) (@lem4919865 B t h2)). Qed.
Lemma lem4919868 (x : nat) (y : nat) (z : nat) : term1274 x y z.
Proof. exact (EQ_MP (@lem4919845 x y z) (@lem4919824 y x z)). Qed.
Lemma lem4919869 {A B : Type'} (t : B -> Prop) (s : A -> Prop) : term1281 A B t s.
Proof. exact (@lem4919868 (@CARD B t) (@CARD A s) (NUMERAL 0)). Qed.
Lemma lem4919872 {A B : Type'} (s : A -> Prop) (t : B -> Prop) (h1 : (@CARD A s) = (@CARD B t)) (h2 : (@CARD B t) = (NUMERAL 0)) : (@CARD A s) = (NUMERAL 0).
Proof. exact (@lem4919869 A B t s (@lem4919866 A B s t h1 h2)). Qed.
Lemma lem4919873 {A B : Type'} (s : A -> Prop) (t : B -> Prop) (h1 : (@CARD A s) = (@CARD B t)) (h2 : (@CARD B t) = (NUMERAL 0)) : term1279 A s.
Proof. exact (fun h0 : term1041 A s => @lem4919872 A B s t h1 h2). Qed.
Lemma lem4919875 (p : Prop) : (term888 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem4919876 {A : Type'} (s : A -> Prop) : (term1279 A s) = ((@CARD A s) = (NUMERAL 0)).
Proof. exact (@lem4919875 ((@CARD A s) = (NUMERAL 0))). Qed.
Lemma lem4919877 {A B : Type'} (s : A -> Prop) (t : B -> Prop) (h1 : (@CARD A s) = (@CARD B t)) (h2 : (@CARD B t) = (NUMERAL 0)) : (@CARD A s) = (NUMERAL 0).
Proof. exact (EQ_MP (@lem4919876 A s) (@lem4919873 A B s t h1 h2)). Qed.
Lemma lem4919883 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem4919884 {A : Type'} (_61076 : A -> Prop) : (term1249 A _61076) = (term1282 A _61076).
Proof. exact (@lem4919883 (term1041 A _61076) (term1224 A _61076) (_61076 = (@EMPTY A))). Qed.
Lemma lem4919900 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem4919901 {A : Type'} (_61076 : A -> Prop) : (term1283 A _61076) = (term1284 A _61076).
Proof. exact (@lem4919900 (_61076 = (@EMPTY A)) (term1224 A _61076)). Qed.
Lemma lem4919909 {A : Type'} (_61076 : A -> Prop) : (term1285 A _61076) = (term1285 A _61076).
Proof. exact (eq_refl (term1285 A _61076)). Qed.
Lemma lem4919910 {A : Type'} (_61076 : A -> Prop) : (term1282 A _61076) = (term1286 A _61076).
Proof. exact (MK_COMB (@lem4919909 A _61076) (@lem4919901 A _61076)). Qed.
Lemma lem4919914 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem4919915 {A : Type'} (_61076 : A -> Prop) : (term1286 A _61076) = (term1287 A _61076).
Proof. exact (@lem4919914 (_61076 = (@EMPTY A)) (term1041 A _61076) (term1224 A _61076)). Qed.
Lemma lem4919935 {A : Type'} (_61076 : A -> Prop) : (term1282 A _61076) = (term1287 A _61076).
Proof. exact (TRANS (@lem4919910 A _61076) (@lem4919915 A _61076)). Qed.
Lemma lem4919936 {A : Type'} (_61076 : A -> Prop) : (term1249 A _61076) = (term1287 A _61076).
Proof. exact (TRANS (@lem4919884 A _61076) (@lem4919935 A _61076)). Qed.
Lemma lem4919937 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4919938 {A : Type'} (_61076 : A -> Prop) : (term1288 A _61076) = (term1289 A _61076).
Proof. exact (MK_COMB (@lem4919937) (@lem4919936 A _61076)). Qed.
Lemma lem4919954 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem4919955 {A : Type'} (_61076 : A -> Prop) : (term1290 A _61076) = (term1291 A _61076).
Proof. exact (@lem4919954 (term1041 A _61076) (term1224 A _61076)). Qed.
Lemma lem4919963 {A : Type'} (_61076 : A -> Prop) : (term1292 A _61076) = (term1292 A _61076).
Proof. exact (eq_refl (term1292 A _61076)). Qed.
Lemma lem4919964 {A : Type'} (_61076 : A -> Prop) : (term1293 A _61076) = (term1287 A _61076).
Proof. exact (MK_COMB (@lem4919963 A _61076) (@lem4919955 A _61076)). Qed.
Lemma lem4919975 {A : Type'} (_61076 : A -> Prop) : ((term1249 A _61076) = (term1293 A _61076)) = ((term1287 A _61076) = (term1287 A _61076)).
Proof. exact (MK_COMB (@lem4919938 A _61076) (@lem4919964 A _61076)). Qed.
Lemma lem4919977 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem20665 A x) (@lem20664 A x)). Qed.
Lemma lem4919978 (x : Prop) : (x = x) = True.
Proof. exact (@lem4919977 Prop x). Qed.
Lemma lem4919979 {A : Type'} (_61076 : A -> Prop) : ((term1287 A _61076) = (term1287 A _61076)) = True.
Proof. exact (@lem4919978 (term1287 A _61076)). Qed.
Lemma lem4919980 {A : Type'} (_61076 : A -> Prop) : ((term1249 A _61076) = (term1293 A _61076)) = True.
Proof. exact (TRANS (@lem4919975 A _61076) (@lem4919979 A _61076)). Qed.
Lemma lem4919981 {A : Type'} (_61076 : A -> Prop) : True = ((term1249 A _61076) = (term1293 A _61076)).
Proof. exact (SYM (@lem4919980 A _61076)). Qed.
Lemma lem4919982 {A : Type'} (_61076 : A -> Prop) : (term1249 A _61076) = (term1293 A _61076).
Proof. exact (EQ_MP (@lem4919981 A _61076) (@lem0)). Qed.
Lemma lem4919983 {A : Type'} (_61076 : A -> Prop) (h1 : term1042 A) : term1293 A _61076.
Proof. exact (EQ_MP (@lem4919982 A _61076) (@lem4919463 A _61076 h1)). Qed.
Lemma lem4919985 (b : Prop) (a : Prop) : (a \/ b) = (term892 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem4919986 {A : Type'} (_61076 : A -> Prop) : (term1293 A _61076) = (term1294 A _61076).
Proof. exact (@lem4919985 (term1290 A _61076) (_61076 = (@EMPTY A))). Qed.
Lemma lem4919988 (a : Prop) (b : Prop) : (term910 a b) = (term911 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem4919989 {A : Type'} (_61076 : A -> Prop) : (term1295 A _61076) = (term1296 A _61076).
Proof. exact (@lem4919988 (term1224 A _61076) (term1041 A _61076)). Qed.
Lemma lem4919991 (a : Prop) : (term197 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem4919992 {A : Type'} (_61076 : A -> Prop) : (term1297 A _61076) = (@FINITE A _61076).
Proof. exact (@lem4919991 (@FINITE A _61076)). Qed.
Lemma lem4919993 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4919994 {A : Type'} (_61076 : A -> Prop) : (term1298 A _61076) = (term1299 A _61076).
Proof. exact (MK_COMB (@lem4919993) (@lem4919992 A _61076)). Qed.
Lemma lem4919996 (a : Prop) : (term197 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem4919997 {A : Type'} (_61076 : A -> Prop) : (term1300 A _61076) = ((@CARD A _61076) = (NUMERAL 0)).
Proof. exact (@lem4919996 ((@CARD A _61076) = (NUMERAL 0))). Qed.
Lemma lem4919998 {A : Type'} (_61076 : A -> Prop) : (term1296 A _61076) = (term1301 A _61076).
Proof. exact (MK_COMB (@lem4919994 A _61076) (@lem4919997 A _61076)). Qed.
Lemma lem4919999 {A : Type'} (_61076 : A -> Prop) : (term1295 A _61076) = (term1301 A _61076).
Proof. exact (TRANS (@lem4919989 A _61076) (@lem4919998 A _61076)). Qed.
Lemma lem4920000 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4920001 {A : Type'} (_61076 : A -> Prop) : (term1302 A _61076) = (term1303 A _61076).
Proof. exact (MK_COMB (@lem4920000) (@lem4919999 A _61076)). Qed.
Lemma lem4920002 {A : Type'} (_61076 : A -> Prop) : (_61076 = (@EMPTY A)) = (_61076 = (@EMPTY A)).
Proof. exact (eq_refl (_61076 = (@EMPTY A))). Qed.
Lemma lem4920003 {A : Type'} (_61076 : A -> Prop) : (term1294 A _61076) = (term1304 A _61076).
Proof. exact (MK_COMB (@lem4920001 A _61076) (@lem4920002 A _61076)). Qed.
Lemma lem4920004 {A : Type'} (_61076 : A -> Prop) : (term1293 A _61076) = (term1304 A _61076).
Proof. exact (TRANS (@lem4919986 A _61076) (@lem4920003 A _61076)). Qed.
Lemma lem4920006 {A B : Type'} (s : A -> Prop) (t : B -> Prop) (h1 : @FINITE A s) (h2 : (@CARD A s) = (@CARD B t)) (h3 : (@CARD B t) = (NUMERAL 0)) : term1301 A s.
Proof. exact (conj (@lem4919719 A s h1) (@lem4919877 A B s t h2 h3)). Qed.
Lemma lem4920008 {A : Type'} (_61076 : A -> Prop) (h1 : term1042 A) : term1304 A _61076.
Proof. exact (EQ_MP (@lem4920004 A _61076) (@lem4919983 A _61076 h1)). Qed.
Lemma lem4920009 {A : Type'} (_61076 : A -> Prop) (h1 : term1042 A) : term1304 A _61076.
Proof. exact (@lem4920008 A _61076 h1). Qed.
Lemma lem4920010 {A : Type'} (s : A -> Prop) (h1 : term1042 A) : term1304 A s.
Proof. exact (@lem4920009 A s h1). Qed.
Lemma lem4920013 {A B : Type'} (s : A -> Prop) (t : B -> Prop) (h1 : term1042 A) (h2 : @FINITE A s) (h3 : (@CARD A s) = (@CARD B t)) (h4 : (@CARD B t) = (NUMERAL 0)) : s = (@EMPTY A).
Proof. exact (@lem4920010 A s h1 (@lem4920006 A B s t h2 h3 h4)). Qed.
Lemma lem4920014 {A B : Type'} (s : A -> Prop) (t : B -> Prop) (h1 : term1042 A) (h2 : @FINITE A s) (h3 : (@CARD A s) = (@CARD B t)) (h4 : (@CARD B t) = (NUMERAL 0)) : term1305 A s.
Proof. exact (fun h0 : term1104 A s => @lem4920013 A B s t h1 h2 h3 h4). Qed.
Lemma lem4920016 (p : Prop) : (term888 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem4920017 {A : Type'} (s : A -> Prop) : (term1305 A s) = (s = (@EMPTY A)).
Proof. exact (@lem4920016 (s = (@EMPTY A))). Qed.
Lemma lem4920018 {A B : Type'} (s : A -> Prop) (t : B -> Prop) (h1 : term1042 A) (h2 : @FINITE A s) (h3 : (@CARD A s) = (@CARD B t)) (h4 : (@CARD B t) = (NUMERAL 0)) : s = (@EMPTY A).
Proof. exact (EQ_MP (@lem4920017 A s) (@lem4920014 A B s t h1 h2 h3 h4)). Qed.
Lemma lem4920020 (a : Prop) (b : Prop) : (term1306 a b) = (term1307 a b).
Proof. exact (EQ_MP (@lem20904 a b) (@lem21007 a b)). Qed.
Lemma lem4920021 {A : Type'} (_61084 : A) (_61083 : A -> Prop) : (term1240 A _61084 _61083) = (term1308 A _61084 _61083).
Proof. exact (@lem4920020 (@IN A _61084 _61083) (_61083 = (@EMPTY A))). Qed.
Lemma lem4920023 (p : Prop) : (~ p) = (p -> False).
Proof. exact (EQ_MP (@lem21021 p) (@lem0)). Qed.
Lemma lem4920024 {A : Type'} (_61084 : A) (_61083 : A -> Prop) : (term1308 A _61084 _61083) = (term1309 A _61084 _61083).
Proof. exact (@lem4920023 (term1310 A _61084 _61083)). Qed.
Lemma lem4920025 {A : Type'} (_61084 : A) (_61083 : A -> Prop) : (term1240 A _61084 _61083) = (term1309 A _61084 _61083).
Proof. exact (TRANS (@lem4920021 A _61084 _61083) (@lem4920024 A _61084 _61083)). Qed.
Lemma lem4920027 {A B : Type'} (t : B -> Prop) (y : A) (s : A -> Prop) (h1 : term1042 A) (h2 : @FINITE A s) (h3 : (@CARD A s) = (@CARD B t)) (h4 : (@CARD B t) = (NUMERAL 0)) (h5 : @IN A y s) : term1310 A y s.
Proof. exact (conj (@lem4919712 A y s h5) (@lem4920018 A B s t h1 h2 h3 h4)). Qed.
Lemma lem4920029 {A : Type'} (_61084 : A) (_61083 : A -> Prop) (x'' : type684 A) (h1 : term1212 A x'') : term1309 A _61084 _61083.
Proof. exact (EQ_MP (@lem4920025 A _61084 _61083) (@lem4919399 A _61084 _61083 x'' h1)). Qed.
Lemma lem4920030 {A : Type'} (_61084 : A) (_61083 : A -> Prop) (x'' : type684 A) (h1 : term1212 A x'') : term1309 A _61084 _61083.
Proof. exact (@lem4920029 A _61084 _61083 x'' h1). Qed.
Lemma lem4920031 {A : Type'} (y : A) (s : A -> Prop) (x'' : type684 A) (h1 : term1212 A x'') : term1309 A y s.
Proof. exact (@lem4920030 A y s x'' h1). Qed.
Lemma lem4920034 {A B : Type'} (x'' : type684 A) (t : B -> Prop) (y : A) (s : A -> Prop) (h1 : term1042 A) (h2 : @FINITE A s) (h3 : term1212 A x'') (h4 : (@CARD A s) = (@CARD B t)) (h5 : (@CARD B t) = (NUMERAL 0)) (h6 : @IN A y s) : False.
Proof. exact (@lem4920031 A y s x'' h3 (@lem4920027 A B t y s h1 h2 h4 h5 h6)). Qed.
Lemma lem4920035 {A B : Type'} (x'' : type684 A) (t : B -> Prop) (y : A) (s : A -> Prop) (h1 : term1042 A) (h2 : @FINITE A s) (h3 : term1212 A x'') (h4 : (@CARD A s) = (@CARD B t)) (h5 : (@CARD B t) = (NUMERAL 0)) (h6 : @IN A y s) : term987.
Proof. exact (fun h0 : ~ False => @lem4920034 A B x'' t y s h1 h2 h3 h4 h5 h6). Qed.
Lemma lem4920037 (p : Prop) : (term888 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem4920038 : term987 = False.
Proof. exact (@lem4920037 False). Qed.
Lemma lem4920039 {A B : Type'} (x'' : type684 A) (t : B -> Prop) (y : A) (s : A -> Prop) (h1 : term1042 A) (h2 : @FINITE A s) (h3 : term1212 A x'') (h4 : (@CARD A s) = (@CARD B t)) (h5 : (@CARD B t) = (NUMERAL 0)) (h6 : @IN A y s) : False.
Proof. exact (EQ_MP (@lem4920038) (@lem4920035 A B x'' t y s h1 h2 h3 h4 h5 h6)). Qed.
Lemma lem4920040 {A B : Type'} (x'' : type684 A) (t : B -> Prop) (y : A) (s : A -> Prop) (h1 : term1042 A) (h2 : @FINITE A s) (h3 : term1212 A x'') (h4 : (@CARD A s) = (@CARD B t)) (h5 : (@CARD B t) = (NUMERAL 0)) (h6 : @IN A y s) : ((@CARD B t) = (NUMERAL 0)) = False.
Proof. exact (prop_ext (fun h7 : (@CARD B t) = (NUMERAL 0) => @lem4920039 A B x'' t y s h1 h2 h3 h4 h5 h6) (fun h7 : False => @lem4919375 B t h5)). Qed.
Lemma lem4920041 {A B : Type'} (x'' : type684 A) (t : B -> Prop) (y : A) (s : A -> Prop) (h1 : term1042 A) (h2 : @FINITE A s) (h3 : term1212 A x'') (h4 : (@CARD A s) = (@CARD B t)) (h5 : (@CARD B t) = (NUMERAL 0)) (h6 : @IN A y s) : False.
Proof. exact (EQ_MP (@lem4920040 A B x'' t y s h1 h2 h3 h4 h5 h6) (@lem4919375 B t h5)). Qed.
Lemma lem4920042 {A B : Type'} (x'' : type684 A) (t : B -> Prop) (y : A) (s : A -> Prop) (h1 : term1042 A) (h2 : @FINITE A s) (h3 : term1212 A x'') (h4 : (@CARD A s) = (@CARD B t)) (h5 : (@CARD B t) = (NUMERAL 0)) (h6 : @IN A y s) : (@IN A y s) = False.
Proof. exact (prop_ext (fun h7 : @IN A y s => @lem4920041 A B x'' t y s h1 h2 h3 h4 h5 h6) (fun h7 : False => @lem4919369 A y s h6)). Qed.
Lemma lem4920043 {A B : Type'} (x'' : type684 A) (t : B -> Prop) (y : A) (s : A -> Prop) (h1 : term1042 A) (h2 : @FINITE A s) (h3 : term1212 A x'') (h4 : (@CARD A s) = (@CARD B t)) (h5 : (@CARD B t) = (NUMERAL 0)) (h6 : @IN A y s) : False.
Proof. exact (EQ_MP (@lem4920042 A B x'' t y s h1 h2 h3 h4 h5 h6) (@lem4919369 A y s h6)). Qed.
Lemma lem4920044 {A B : Type'} (x'' : type684 A) (t : B -> Prop) (y : A) (s : A -> Prop) (h1 : term1042 A) (h2 : @FINITE A s) (h3 : term1212 A x'') (h4 : (@CARD A s) = (@CARD B t)) (h5 : (@CARD B t) = (NUMERAL 0)) (h6 : @IN A y s) : ((@CARD A s) = (@CARD B t)) = False.
Proof. exact (prop_ext (fun h7 : (@CARD A s) = (@CARD B t) => @lem4920043 A B x'' t y s h1 h2 h3 h4 h5 h6) (fun h7 : False => @lem4919363 A B s t h4)). Qed.
Lemma lem4920045 {A B : Type'} (x'' : type684 A) (t : B -> Prop) (y : A) (s : A -> Prop) (h1 : term1042 A) (h2 : @FINITE A s) (h3 : term1212 A x'') (h4 : (@CARD A s) = (@CARD B t)) (h5 : (@CARD B t) = (NUMERAL 0)) (h6 : @IN A y s) : False.
Proof. exact (EQ_MP (@lem4920044 A B x'' t y s h1 h2 h3 h4 h5 h6) (@lem4919363 A B s t h4)). Qed.
Lemma lem4920046 {A B : Type'} (x'' : type684 A) (t : B -> Prop) (y : A) (s : A -> Prop) (h1 : term1042 A) (h2 : @FINITE A s) (h3 : term1212 A x'') (h4 : (@CARD A s) = (@CARD B t)) (h5 : (@CARD B t) = (NUMERAL 0)) (h6 : @IN A y s) : (@FINITE A s) = False.
Proof. exact (prop_ext (fun h7 : @FINITE A s => @lem4920045 A B x'' t y s h1 h2 h3 h4 h5 h6) (fun h7 : False => @lem4919359 A s h2)). Qed.
Lemma lem4920047 {A B : Type'} (x'' : type684 A) (t : B -> Prop) (y : A) (s : A -> Prop) (h1 : term1042 A) (h2 : @FINITE A s) (h3 : term1212 A x'') (h4 : (@CARD A s) = (@CARD B t)) (h5 : (@CARD B t) = (NUMERAL 0)) (h6 : @IN A y s) : False.
Proof. exact (EQ_MP (@lem4920046 A B x'' t y s h1 h2 h3 h4 h5 h6) (@lem4919359 A s h2)). Qed.
Lemma lem4920048 {A B : Type'} (x'' : type684 A) (t : B -> Prop) (y : A) (s : A -> Prop) (h1 : term1042 A) (h2 : @FINITE A s) (h3 : term1212 A x'') (h4 : (@CARD A s) = (@CARD B t)) (h5 : (@CARD B t) = (NUMERAL 0)) (h6 : @IN A y s) : ((@CARD B t) = (NUMERAL 0)) = False.
Proof. exact (prop_ext (fun h7 : (@CARD B t) = (NUMERAL 0) => @lem4920047 A B x'' t y s h1 h2 h3 h4 h5 h6) (fun h7 : False => @lem4919017 B t h5)). Qed.
Lemma lem4920049 {A B : Type'} (x'' : type684 A) (t : B -> Prop) (y : A) (s : A -> Prop) (h1 : term1042 A) (h2 : @FINITE A s) (h3 : term1212 A x'') (h4 : (@CARD A s) = (@CARD B t)) (h5 : (@CARD B t) = (NUMERAL 0)) (h6 : @IN A y s) : False.
Proof. exact (EQ_MP (@lem4920048 A B x'' t y s h1 h2 h3 h4 h5 h6) (@lem4919017 B t h5)). Qed.
Lemma lem4920050 {A B : Type'} (x'' : type684 A) (t : B -> Prop) (y : A) (s : A -> Prop) (h1 : term1042 A) (h2 : @FINITE A s) (h3 : term1212 A x'') (h4 : (@CARD A s) = (@CARD B t)) (h5 : (@CARD B t) = (NUMERAL 0)) (h6 : @IN A y s) : (@IN A y s) = False.
Proof. exact (prop_ext (fun h7 : @IN A y s => @lem4920049 A B x'' t y s h1 h2 h3 h4 h5 h6) (fun h7 : False => @lem4919005 A y s h6)). Qed.
Lemma lem4920051 {A B : Type'} (x'' : type684 A) (t : B -> Prop) (y : A) (s : A -> Prop) (h1 : term1042 A) (h2 : @FINITE A s) (h3 : term1212 A x'') (h4 : (@CARD A s) = (@CARD B t)) (h5 : (@CARD B t) = (NUMERAL 0)) (h6 : @IN A y s) : False.
Proof. exact (EQ_MP (@lem4920050 A B x'' t y s h1 h2 h3 h4 h5 h6) (@lem4919005 A y s h6)). Qed.
Lemma lem4920052 {A B : Type'} (x'' : type684 A) (t : B -> Prop) (y : A) (s : A -> Prop) (h1 : term1042 A) (h2 : @FINITE A s) (h3 : term1212 A x'') (h4 : (@CARD A s) = (@CARD B t)) (h5 : (@CARD B t) = (NUMERAL 0)) (h6 : @IN A y s) : ((@CARD A s) = (@CARD B t)) = False.
Proof. exact (prop_ext (fun h7 : (@CARD A s) = (@CARD B t) => @lem4920051 A B x'' t y s h1 h2 h3 h4 h5 h6) (fun h7 : False => @lem4918993 A B s t h4)). Qed.
Lemma lem4920053 {A B : Type'} (x'' : type684 A) (t : B -> Prop) (y : A) (s : A -> Prop) (h1 : term1042 A) (h2 : @FINITE A s) (h3 : term1212 A x'') (h4 : (@CARD A s) = (@CARD B t)) (h5 : (@CARD B t) = (NUMERAL 0)) (h6 : @IN A y s) : False.
Proof. exact (EQ_MP (@lem4920052 A B x'' t y s h1 h2 h3 h4 h5 h6) (@lem4918993 A B s t h4)). Qed.
Lemma lem4920054 {A B : Type'} (x'' : type684 A) (t : B -> Prop) (y : A) (s : A -> Prop) (h1 : term1042 A) (h2 : @FINITE A s) (h3 : term1212 A x'') (h4 : (@CARD A s) = (@CARD B t)) (h5 : (@CARD B t) = (NUMERAL 0)) (h6 : @IN A y s) : (@FINITE A s) = False.
Proof. exact (prop_ext (fun h7 : @FINITE A s => @lem4920053 A B x'' t y s h1 h2 h3 h4 h5 h6) (fun h7 : False => @lem4918985 A s h2)). Qed.
Lemma lem4920055 {A B : Type'} (x'' : type684 A) (t : B -> Prop) (y : A) (s : A -> Prop) (h1 : term1042 A) (h2 : @FINITE A s) (h3 : term1212 A x'') (h4 : (@CARD A s) = (@CARD B t)) (h5 : (@CARD B t) = (NUMERAL 0)) (h6 : @IN A y s) : False.
Proof. exact (EQ_MP (@lem4920054 A B x'' t y s h1 h2 h3 h4 h5 h6) (@lem4918985 A s h2)). Qed.
Lemma lem4920056 {A B : Type'} (x'' : type684 A) (t : B -> Prop) (y : A) (s : A -> Prop) (h1 : term1042 A) (h2 : @FINITE A s) (h3 : term1212 A x'') (h4 : (@CARD A s) = (@CARD B t)) (h5 : (@CARD B t) = (NUMERAL 0)) (h6 : @IN A y s) : ((@CARD B t) = (NUMERAL 0)) = False.
Proof. exact (prop_ext (fun h7 : (@CARD B t) = (NUMERAL 0) => @lem4920055 A B x'' t y s h1 h2 h3 h4 h5 h6) (fun h7 : False => @lem4919017 B t h5)). Qed.
Lemma lem4920057 {A B : Type'} (x'' : type684 A) (t : B -> Prop) (y : A) (s : A -> Prop) (h1 : term1042 A) (h2 : @FINITE A s) (h3 : term1212 A x'') (h4 : (@CARD A s) = (@CARD B t)) (h5 : (@CARD B t) = (NUMERAL 0)) (h6 : @IN A y s) : False.
Proof. exact (EQ_MP (@lem4920056 A B x'' t y s h1 h2 h3 h4 h5 h6) (@lem4919017 B t h5)). Qed.
Lemma lem4920058 {A B : Type'} (x'' : type684 A) (t : B -> Prop) (y : A) (s : A -> Prop) (h1 : term1042 A) (h2 : @FINITE A s) (h3 : term1212 A x'') (h4 : (@CARD A s) = (@CARD B t)) (h5 : (@CARD B t) = (NUMERAL 0)) (h6 : @IN A y s) : (@IN A y s) = False.
Proof. exact (prop_ext (fun h7 : @IN A y s => @lem4920057 A B x'' t y s h1 h2 h3 h4 h5 h6) (fun h7 : False => @lem4919005 A y s h6)). Qed.
Lemma lem4920059 {A B : Type'} (x'' : type684 A) (t : B -> Prop) (y : A) (s : A -> Prop) (h1 : term1042 A) (h2 : @FINITE A s) (h3 : term1212 A x'') (h4 : (@CARD A s) = (@CARD B t)) (h5 : (@CARD B t) = (NUMERAL 0)) (h6 : @IN A y s) : False.
Proof. exact (EQ_MP (@lem4920058 A B x'' t y s h1 h2 h3 h4 h5 h6) (@lem4919005 A y s h6)). Qed.
Lemma lem4920060 {A B : Type'} (x'' : type684 A) (t : B -> Prop) (y : A) (s : A -> Prop) (h1 : term1042 A) (h2 : @FINITE A s) (h3 : term1212 A x'') (h4 : (@CARD A s) = (@CARD B t)) (h5 : (@CARD B t) = (NUMERAL 0)) (h6 : @IN A y s) : ((@CARD A s) = (@CARD B t)) = False.
Proof. exact (prop_ext (fun h7 : (@CARD A s) = (@CARD B t) => @lem4920059 A B x'' t y s h1 h2 h3 h4 h5 h6) (fun h7 : False => @lem4918993 A B s t h4)). Qed.
Lemma lem4920061 {A B : Type'} (x'' : type684 A) (t : B -> Prop) (y : A) (s : A -> Prop) (h1 : term1042 A) (h2 : @FINITE A s) (h3 : term1212 A x'') (h4 : (@CARD A s) = (@CARD B t)) (h5 : (@CARD B t) = (NUMERAL 0)) (h6 : @IN A y s) : False.
Proof. exact (EQ_MP (@lem4920060 A B x'' t y s h1 h2 h3 h4 h5 h6) (@lem4918993 A B s t h4)). Qed.
Lemma lem4920062 {A B : Type'} (x'' : type684 A) (t : B -> Prop) (y : A) (s : A -> Prop) (h1 : term1042 A) (h2 : @FINITE A s) (h3 : term1212 A x'') (h4 : (@CARD A s) = (@CARD B t)) (h5 : (@CARD B t) = (NUMERAL 0)) (h6 : @IN A y s) : (@FINITE A s) = False.
Proof. exact (prop_ext (fun h7 : @FINITE A s => @lem4920061 A B x'' t y s h1 h2 h3 h4 h5 h6) (fun h7 : False => @lem4918985 A s h2)). Qed.
Lemma lem4920063 {A B : Type'} (x'' : type684 A) (t : B -> Prop) (y : A) (s : A -> Prop) (h1 : term1042 A) (h2 : @FINITE A s) (h3 : term1212 A x'') (h4 : (@CARD A s) = (@CARD B t)) (h5 : (@CARD B t) = (NUMERAL 0)) (h6 : @IN A y s) : False.
Proof. exact (EQ_MP (@lem4920062 A B x'' t y s h1 h2 h3 h4 h5 h6) (@lem4918985 A s h2)). Qed.
Lemma lem4920064 {A B : Type'} (x'' : type684 A) (t : B -> Prop) (y : A) (s : A -> Prop) (h1 : term1042 A) (h2 : @FINITE A s) (h3 : term1212 A x'') (h4 : (@CARD A s) = (@CARD B t)) (h5 : (@CARD B t) = (NUMERAL 0)) (h6 : @IN A y s) : (term1212 A x'') = False.
Proof. exact (prop_ext (fun h7 : term1212 A x'' => @lem4920063 A B x'' t y s h1 h2 h3 h4 h5 h6) (fun h7 : False => @lem4918892 A x'' h3)). Qed.
Lemma lem4920065 {A B : Type'} (x'' : type684 A) (t : B -> Prop) (y : A) (s : A -> Prop) (h1 : term1042 A) (h2 : @FINITE A s) (h3 : term1212 A x'') (h4 : (@CARD A s) = (@CARD B t)) (h5 : (@CARD B t) = (NUMERAL 0)) (h6 : @IN A y s) : False.
Proof. exact (EQ_MP (@lem4920064 A B x'' t y s h1 h2 h3 h4 h5 h6) (@lem4918892 A x'' h3)). Qed.
Lemma lem4920066 {A B : Type'} (x'' : type684 A) (t : B -> Prop) (y : A) (s : A -> Prop) (h1 : term1042 A) (h2 : @FINITE A s) (h3 : term1212 A x'') (h4 : (@CARD A s) = (@CARD B t)) (h5 : (@CARD B t) = (NUMERAL 0)) (h6 : @IN A y s) : ((@CARD B t) = (NUMERAL 0)) = False.
Proof. exact (prop_ext (fun h7 : (@CARD B t) = (NUMERAL 0) => @lem4920065 A B x'' t y s h1 h2 h3 h4 h5 h6) (fun h7 : False => @lem4918643 B t h5)). Qed.
Lemma lem4920067 {A B : Type'} (x'' : type684 A) (t : B -> Prop) (y : A) (s : A -> Prop) (h1 : term1042 A) (h2 : @FINITE A s) (h3 : term1212 A x'') (h4 : (@CARD A s) = (@CARD B t)) (h5 : (@CARD B t) = (NUMERAL 0)) (h6 : @IN A y s) : False.
Proof. exact (EQ_MP (@lem4920066 A B x'' t y s h1 h2 h3 h4 h5 h6) (@lem4918643 B t h5)). Qed.
Lemma lem4920068 {A B : Type'} (x'' : type684 A) (t : B -> Prop) (y : A) (s : A -> Prop) (h1 : term1042 A) (h2 : @FINITE A s) (h3 : term1212 A x'') (h4 : (@CARD A s) = (@CARD B t)) (h5 : (@CARD B t) = (NUMERAL 0)) (h6 : @IN A y s) : (@IN A y s) = False.
Proof. exact (prop_ext (fun h7 : @IN A y s => @lem4920067 A B x'' t y s h1 h2 h3 h4 h5 h6) (fun h7 : False => @lem4918606 A y s h6)). Qed.
Lemma lem4920069 {A B : Type'} (x'' : type684 A) (t : B -> Prop) (y : A) (s : A -> Prop) (h1 : term1042 A) (h2 : @FINITE A s) (h3 : term1212 A x'') (h4 : (@CARD A s) = (@CARD B t)) (h5 : (@CARD B t) = (NUMERAL 0)) (h6 : @IN A y s) : False.
Proof. exact (EQ_MP (@lem4920068 A B x'' t y s h1 h2 h3 h4 h5 h6) (@lem4918606 A y s h6)). Qed.
Lemma lem4920070 {A B : Type'} (x'' : type684 A) (t : B -> Prop) (y : A) (s : A -> Prop) (h1 : term1042 A) (h2 : @FINITE A s) (h3 : term1212 A x'') (h4 : (@CARD A s) = (@CARD B t)) (h5 : (@CARD B t) = (NUMERAL 0)) (h6 : @IN A y s) : ((@CARD A s) = (@CARD B t)) = False.
Proof. exact (prop_ext (fun h7 : (@CARD A s) = (@CARD B t) => @lem4920069 A B x'' t y s h1 h2 h3 h4 h5 h6) (fun h7 : False => @lem4918584 A B s t h4)). Qed.
Lemma lem4920071 {A B : Type'} (x'' : type684 A) (t : B -> Prop) (y : A) (s : A -> Prop) (h1 : term1042 A) (h2 : @FINITE A s) (h3 : term1212 A x'') (h4 : (@CARD A s) = (@CARD B t)) (h5 : (@CARD B t) = (NUMERAL 0)) (h6 : @IN A y s) : False.
Proof. exact (EQ_MP (@lem4920070 A B x'' t y s h1 h2 h3 h4 h5 h6) (@lem4918584 A B s t h4)). Qed.
Lemma lem4920072 {A B : Type'} (x'' : type684 A) (t : B -> Prop) (y : A) (s : A -> Prop) (h1 : term1042 A) (h2 : @FINITE A s) (h3 : term1212 A x'') (h4 : (@CARD A s) = (@CARD B t)) (h5 : (@CARD B t) = (NUMERAL 0)) (h6 : @IN A y s) : (@FINITE A s) = False.
Proof. exact (prop_ext (fun h7 : @FINITE A s => @lem4920071 A B x'' t y s h1 h2 h3 h4 h5 h6) (fun h7 : False => @lem4918570 A s h2)). Qed.
Lemma lem4920073 {A B : Type'} (x'' : type684 A) (t : B -> Prop) (y : A) (s : A -> Prop) (h1 : term1042 A) (h2 : @FINITE A s) (h3 : term1212 A x'') (h4 : (@CARD A s) = (@CARD B t)) (h5 : (@CARD B t) = (NUMERAL 0)) (h6 : @IN A y s) : False.
Proof. exact (EQ_MP (@lem4920072 A B x'' t y s h1 h2 h3 h4 h5 h6) (@lem4918570 A s h2)). Qed.
Lemma lem4920074 {A B : Type'} (f : A -> B) (x'' : type684 A) (t : B -> Prop) (y : A) (s : A -> Prop) (h1 : term693 A B t s f) (h2 : term1042 A) (h3 : @FINITE A s) (h4 : term1212 A x'') (h5 : (@CARD A s) = (@CARD B t)) (h6 : (@CARD B t) = (NUMERAL 0)) (h7 : @IN A y s) : False.
Proof. exact (ex_elim (@lem4917539 A B t s f h1) (fun x'''' : B -> A => fun h0 : term837 A B t s f x'''' => @lem4920073 A B x'' t y s h2 h3 h4 h5 h6 h7)). Qed.
Lemma lem4920075 {_99911 A B : Type'} (f : A -> B) (x'' : type684 A) (t : B -> Prop) (y : A) (s : A -> Prop) (h1 : term693 A B t s f) (h2 : term1043 _99911) (h3 : term1042 A) (h4 : @FINITE A s) (h5 : term1212 A x'') (h6 : (@CARD A s) = (@CARD B t)) (h7 : (@CARD B t) = (NUMERAL 0)) (h8 : @IN A y s) : False.
Proof. exact (ex_elim (@lem4917823 _99911 h2) (fun x''' : type684 _99911 => fun h0 : term1214 _99911 x''' => @lem4920074 A B f x'' t y s h1 h3 h4 h5 h6 h7 h8)). Qed.
Lemma lem4920076 {_99911 A B : Type'} (f : A -> B) (t : B -> Prop) (y : A) (s : A -> Prop) (h1 : term693 A B t s f) (h2 : term1043 _99911) (h3 : term1043 A) (h4 : term1042 A) (h5 : @FINITE A s) (h6 : (@CARD A s) = (@CARD B t)) (h7 : (@CARD B t) = (NUMERAL 0)) (h8 : @IN A y s) : False.
Proof. exact (ex_elim (@lem4918077 A h3) (fun x'' : type684 A => fun h0 : term1214 A x'' => @lem4920075 _99911 A B f x'' t y s h1 h2 h4 h5 h0 h6 h7 h8)). Qed.
Lemma lem4920077 {_99911 A B : Type'} (f : A -> B) (t : B -> Prop) (y : A) (s : A -> Prop) (h1 : term693 A B t s f) (h2 : term1043 _99911) (h3 : term1043 A) (h4 : term1042 A) (h5 : term1043 B) (h6 : @FINITE A s) (h7 : (@CARD A s) = (@CARD B t)) (h8 : (@CARD B t) = (NUMERAL 0)) (h9 : @IN A y s) : False.
Proof. exact (ex_elim (@lem4918331 B h5) (fun x' : type684 B => fun h0 : term1214 B x' => @lem4920076 _99911 A B f t y s h1 h2 h3 h4 h6 h7 h8 h9)). Qed.
Lemma lem4920078 {_99911 A B : Type'} (f : A -> B) (t : B -> Prop) (y : A) (s : A -> Prop) (h1 : term693 A B t s f) (h2 : term1043 _99911) (h3 : term1043 A) (h4 : term1042 A) (h5 : term1043 B) (h6 : @FINITE A s) (h7 : (@CARD A s) = (@CARD B t)) (h8 : (@CARD B t) = (NUMERAL 0)) (h9 : @IN A y s) : ((@CARD B t) = (NUMERAL 0)) = False.
Proof. exact (prop_ext (fun h10 : (@CARD B t) = (NUMERAL 0) => @lem4920077 _99911 A B f t y s h1 h2 h3 h4 h5 h6 h7 h8 h9) (fun h10 : False => @lem4917569 B t h8)). Qed.
Lemma lem4920079 {_99911 A B : Type'} (f : A -> B) (t : B -> Prop) (y : A) (s : A -> Prop) (h1 : term693 A B t s f) (h2 : term1043 _99911) (h3 : term1043 A) (h4 : term1042 A) (h5 : term1043 B) (h6 : @FINITE A s) (h7 : (@CARD A s) = (@CARD B t)) (h8 : (@CARD B t) = (NUMERAL 0)) (h9 : @IN A y s) : False.
Proof. exact (EQ_MP (@lem4920078 _99911 A B f t y s h1 h2 h3 h4 h5 h6 h7 h8 h9) (@lem4917569 B t h8)). Qed.
Lemma lem4920080 {_99911 A B : Type'} (f : A -> B) (t : B -> Prop) (y : A) (s : A -> Prop) (h1 : term693 A B t s f) (h2 : term1043 _99911) (h3 : term1043 A) (h4 : term1042 A) (h5 : term1043 B) (h6 : @FINITE A s) (h7 : (@CARD A s) = (@CARD B t)) (h8 : (@CARD B t) = (NUMERAL 0)) (h9 : @IN A y s) : (@IN A y s) = False.
Proof. exact (prop_ext (fun h10 : @IN A y s => @lem4920079 _99911 A B f t y s h1 h2 h3 h4 h5 h6 h7 h8 h9) (fun h10 : False => @lem4917551 A y s h9)). Qed.
Lemma lem4920081 {_99911 A B : Type'} (f : A -> B) (t : B -> Prop) (y : A) (s : A -> Prop) (h1 : term693 A B t s f) (h2 : term1043 _99911) (h3 : term1043 A) (h4 : term1042 A) (h5 : term1043 B) (h6 : @FINITE A s) (h7 : (@CARD A s) = (@CARD B t)) (h8 : (@CARD B t) = (NUMERAL 0)) (h9 : @IN A y s) : False.
Proof. exact (EQ_MP (@lem4920080 _99911 A B f t y s h1 h2 h3 h4 h5 h6 h7 h8 h9) (@lem4917551 A y s h9)). Qed.
Lemma lem4920082 {_99911 A B : Type'} (f : A -> B) (t : B -> Prop) (y : A) (s : A -> Prop) (h1 : term693 A B t s f) (h2 : term1043 _99911) (h3 : term1043 A) (h4 : term1042 A) (h5 : term1043 B) (h6 : @FINITE A s) (h7 : (@CARD A s) = (@CARD B t)) (h8 : (@CARD B t) = (NUMERAL 0)) (h9 : @IN A y s) : ((@CARD A s) = (@CARD B t)) = False.
Proof. exact (prop_ext (fun h10 : (@CARD A s) = (@CARD B t) => @lem4920081 _99911 A B f t y s h1 h2 h3 h4 h5 h6 h7 h8 h9) (fun h10 : False => @lem4917362 A B s t h7)). Qed.
Lemma lem4920083 {_99911 A B : Type'} (f : A -> B) (t : B -> Prop) (y : A) (s : A -> Prop) (h1 : term693 A B t s f) (h2 : term1043 _99911) (h3 : term1043 A) (h4 : term1042 A) (h5 : term1043 B) (h6 : @FINITE A s) (h7 : (@CARD A s) = (@CARD B t)) (h8 : (@CARD B t) = (NUMERAL 0)) (h9 : @IN A y s) : False.
Proof. exact (EQ_MP (@lem4920082 _99911 A B f t y s h1 h2 h3 h4 h5 h6 h7 h8 h9) (@lem4917362 A B s t h7)). Qed.
Lemma lem4920084 {_99911 A B : Type'} (f : A -> B) (t : B -> Prop) (y : A) (s : A -> Prop) (h1 : term693 A B t s f) (h2 : term1043 _99911) (h3 : term1043 A) (h4 : term1042 A) (h5 : term1043 B) (h6 : @FINITE A s) (h7 : (@CARD A s) = (@CARD B t)) (h8 : (@CARD B t) = (NUMERAL 0)) (h9 : @IN A y s) : (@FINITE A s) = False.
Proof. exact (prop_ext (fun h10 : @FINITE A s => @lem4920083 _99911 A B f t y s h1 h2 h3 h4 h5 h6 h7 h8 h9) (fun h10 : False => @lem4917350 A s h6)). Qed.
Lemma lem4920085 {_99911 A B : Type'} (f : A -> B) (t : B -> Prop) (y : A) (s : A -> Prop) (h1 : term693 A B t s f) (h2 : term1043 _99911) (h3 : term1043 A) (h4 : term1042 A) (h5 : term1043 B) (h6 : @FINITE A s) (h7 : (@CARD A s) = (@CARD B t)) (h8 : (@CARD B t) = (NUMERAL 0)) (h9 : @IN A y s) : False.
Proof. exact (EQ_MP (@lem4920084 _99911 A B f t y s h1 h2 h3 h4 h5 h6 h7 h8 h9) (@lem4917350 A s h6)). Qed.
Lemma lem4920086 {_99911 A B : Type'} (f : A -> B) (t : B -> Prop) (y : A) (s : A -> Prop) (h1 : term693 A B t s f) (h2 : term1043 _99911) (h3 : term1043 A) (h4 : term1042 A) (h5 : term1043 B) (h6 : @FINITE A s) (h7 : (@CARD A s) = (@CARD B t)) (h8 : (@CARD B t) = (NUMERAL 0)) (h9 : @IN A y s) : term1048 B.
Proof. exact (fun h0 : term1042 B => @lem4920085 _99911 A B f t y s h1 h2 h3 h4 h5 h6 h7 h8 h9). Qed.
Lemma lem4920087 {B : Type'} : (term1048 B) = (term1049 B).
Proof. exact (@lem69 (term1042 B)). Qed.
Lemma lem4920088 {_99911 A B : Type'} (f : A -> B) (t : B -> Prop) (y : A) (s : A -> Prop) (h1 : term693 A B t s f) (h2 : term1043 _99911) (h3 : term1043 A) (h4 : term1042 A) (h5 : term1043 B) (h6 : @FINITE A s) (h7 : (@CARD A s) = (@CARD B t)) (h8 : (@CARD B t) = (NUMERAL 0)) (h9 : @IN A y s) : term1049 B.
Proof. exact (EQ_MP (@lem4920087 B) (@lem4920086 _99911 A B f t y s h1 h2 h3 h4 h5 h6 h7 h8 h9)). Qed.
Lemma lem4920089 {_99911 A B : Type'} (f : A -> B) (t : B -> Prop) (y : A) (s : A -> Prop) (h1 : term693 A B t s f) (h2 : term1043 _99911) (h3 : term1043 A) (h4 : term1043 B) (h5 : @FINITE A s) (h6 : (@CARD A s) = (@CARD B t)) (h7 : (@CARD B t) = (NUMERAL 0)) (h8 : @IN A y s) : term1052 A B.
Proof. exact (fun h0 : term1042 A => @lem4920088 _99911 A B f t y s h1 h2 h3 h0 h4 h5 h6 h7 h8). Qed.
Lemma lem4920090 {_99911 A B : Type'} (f : A -> B) (t : B -> Prop) (y : A) (s : A -> Prop) (h1 : term693 A B t s f) (h2 : term1043 _99911) (h3 : term1043 A) (h4 : term1043 B) (h5 : @FINITE A s) (h6 : (@CARD A s) = (@CARD B t)) (h7 : (@CARD B t) = (NUMERAL 0)) (h8 : @IN A y s) : term1054 _99911 A B.
Proof. exact (fun h0 : term1042 _99911 => @lem4920089 _99911 A B f t y s h1 h2 h3 h4 h5 h6 h7 h8). Qed.
Lemma lem4920091 {_99911 A B : Type'} (f : A -> B) (t : B -> Prop) (y : A) (s : A -> Prop) (h1 : term693 A B t s f) (h2 : term1043 _99911) (h3 : term1043 A) (h4 : @FINITE A s) (h5 : (@CARD A s) = (@CARD B t)) (h6 : (@CARD B t) = (NUMERAL 0)) (h7 : @IN A y s) : term1057 _99911 A B.
Proof. exact (fun h0 : term1043 B => @lem4920090 _99911 A B f t y s h1 h2 h3 h0 h4 h5 h6 h7). Qed.
Lemma lem4920092 {_99911 A B : Type'} (f : A -> B) (t : B -> Prop) (y : A) (s : A -> Prop) (h1 : term693 A B t s f) (h2 : term1043 _99911) (h3 : @FINITE A s) (h4 : (@CARD A s) = (@CARD B t)) (h5 : (@CARD B t) = (NUMERAL 0)) (h6 : @IN A y s) : term1059 _99911 A B.
Proof. exact (fun h0 : term1043 A => @lem4920091 _99911 A B f t y s h1 h2 h0 h3 h4 h5 h6). Qed.
Lemma lem4920093 {_99911 A B : Type'} (f : A -> B) (t : B -> Prop) (y : A) (s : A -> Prop) (h1 : term693 A B t s f) (h2 : @FINITE A s) (h3 : (@CARD A s) = (@CARD B t)) (h4 : (@CARD B t) = (NUMERAL 0)) (h5 : @IN A y s) : term1061 _99911 A B.
Proof. exact (fun h0 : term1043 _99911 => @lem4920092 _99911 A B f t y s h1 h0 h2 h3 h4 h5). Qed.
Lemma lem4920094 {_99911 A B : Type'} (f : A -> B) (t : B -> Prop) (y : A) (s : A -> Prop) (h1 : term693 A B t s f) (h2 : @FINITE A s) (h3 : (@CARD A s) = (@CARD B t)) (h4 : @IN A y s) : term1064 _99911 A B t.
Proof. exact (fun h0 : (@CARD B t) = (NUMERAL 0) => @lem4920093 _99911 A B f t y s h1 h2 h3 h0 h4). Qed.
Lemma lem4920095 {_99911 A B : Type'} (x : A) (f : A -> B) (t : B -> Prop) (y : A) (s : A -> Prop) (h1 : term693 A B t s f) (h2 : @FINITE A s) (h3 : (@CARD A s) = (@CARD B t)) (h4 : @IN A y s) : term1066 _99911 A B x y t.
Proof. exact (fun h0 : term688 A x y => @lem4920094 _99911 A B f t y s h1 h2 h3 h4). Qed.
Lemma lem4920096 {_99911 A B : Type'} (x : A) (f : A -> B) (t : B -> Prop) (y : A) (s : A -> Prop) (h1 : term693 A B t s f) (h2 : @FINITE A s) (h3 : (@CARD A s) = (@CARD B t)) (h4 : @IN A y s) : term1068 _99911 A B f x y t.
Proof. exact (fun h0 : (f x) = (f y) => @lem4920095 _99911 A B x f t y s h1 h2 h3 h4). Qed.
Lemma lem4920097 {_99911 A B : Type'} (x : A) (y : A) (f : A -> B) (s : A -> Prop) (t : B -> Prop) (h1 : term693 A B t s f) (h2 : @FINITE A s) (h3 : (@CARD A s) = (@CARD B t)) : term1070 _99911 A B s f x y t.
Proof. exact (fun h0 : @IN A y s => @lem4920096 _99911 A B x f t y s h1 h2 h3 h0). Qed.
Lemma lem4920098 {_99911 A B : Type'} (x : A) (y : A) (f : A -> B) (s : A -> Prop) (t : B -> Prop) (h1 : term693 A B t s f) (h2 : @FINITE A s) (h3 : (@CARD A s) = (@CARD B t)) : term1072 _99911 A B s f x y t.
Proof. exact (fun h0 : @IN A x s => @lem4920097 _99911 A B x y f s t h1 h2 h3). Qed.
Lemma lem4920099 {_99911 A B : Type'} (f : A -> B) (x : A) (y : A) (s : A -> Prop) (t : B -> Prop) (h1 : @FINITE A s) (h2 : (@CARD A s) = (@CARD B t)) : term1074 _99911 A B s f x y t.
Proof. exact (fun h0 : term693 A B t s f => @lem4920098 _99911 A B x y f s t h0 h1 h2). Qed.
Lemma lem4920100 {_99911 A B : Type'} (f : A -> B) (x : A) (y : A) (s : A -> Prop) (t : B -> Prop) (h1 : @FINITE A s) (h2 : (@CARD A s) = (@CARD B t)) : term1076 _99911 A B s f x y t.
Proof. exact (fun h0 : term692 A B f s t => @lem4920099 _99911 A B f x y s t h1 h2). Qed.
Lemma lem4920101 {_99911 A B : Type'} (f : A -> B) (x : A) (y : A) (t : B -> Prop) (s : A -> Prop) (h1 : @FINITE A s) : term1078 _99911 A B s f x y t.
Proof. exact (fun h0 : (@CARD A s) = (@CARD B t) => @lem4920100 _99911 A B f x y s t h1 h0). Qed.
Lemma lem4920102 {_99911 A B : Type'} (f : A -> B) (x : A) (y : A) (t : B -> Prop) (s : A -> Prop) (h1 : @FINITE A s) : term1080 _99911 A B s f x y t.
Proof. exact (fun h0 : @FINITE B t => @lem4920101 _99911 A B f x y t s h1). Qed.
Lemma lem4920103 {_99911 A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) (y : A) (t : B -> Prop) : term1081 _99911 A B s f x y t.
Proof. exact (fun h0 : @FINITE A s => @lem4920102 _99911 A B f x y t s h0). Qed.
Lemma lem4920108 {_99911 A B : Type'} (f : A -> B) (x : A) (y : A) (t : B -> Prop) : term1085 _99911 A B f x y t.
Proof. exact (fun s : A -> Prop => @lem4920103 _99911 A B s f x y t). Qed.
Lemma lem4920113 {_99911 A B : Type'} (x : A) (y : A) (t : B -> Prop) : term1089 _99911 A B x y t.
Proof. exact (fun f : A -> B => @lem4920108 _99911 A B f x y t). Qed.
Lemma lem4920118 {_99911 A B : Type'} (y : A) (t : B -> Prop) : term1093 _99911 A B y t.
Proof. exact (fun x : A => @lem4920113 _99911 A B x y t). Qed.
Lemma lem4920123 {_99911 A B : Type'} (t : B -> Prop) : term1097 _99911 A B t.
Proof. exact (fun y : A => @lem4920118 _99911 A B y t). Qed.
Lemma lem4920128 {_99911 A B : Type'} : term1101 _99911 A B.
Proof. exact (fun t : B -> Prop => @lem4920123 _99911 A B t). Qed.
Lemma lem4920129 {_99911 A B : Type'} : term1100 _99911 A B.
Proof. exact (EQ_MP (@lem4917328 _99911 A B) (@lem4920128 _99911 A B)). Qed.
Lemma lem4920130 {_99911 A B : Type'} (t : B -> Prop) : term1311 _99911 A B t.
Proof. exact (@lem4920129 _99911 A B t). Qed.
Lemma lem4920131 {_99911 A B : Type'} (t : B -> Prop) : (term1311 _99911 A B t) = (term1096 _99911 A B t).
Proof. exact (eq_refl (term1311 _99911 A B t)). Qed.
Lemma lem4920132 {_99911 A B : Type'} (t : B -> Prop) : term1096 _99911 A B t.
Proof. exact (EQ_MP (@lem4920131 _99911 A B t) (@lem4920130 _99911 A B t)). Qed.
Lemma lem4920133 {_99911 A B : Type'} (t : B -> Prop) (y : A) : term1312 _99911 A B t y.
Proof. exact (@lem4920132 _99911 A B t y). Qed.
Lemma lem4920134 {_99911 A B : Type'} (y : A) (t : B -> Prop) : (term1312 _99911 A B t y) = (term1092 _99911 A B y t).
Proof. exact (eq_refl (term1312 _99911 A B t y)). Qed.
Lemma lem4920135 {_99911 A B : Type'} (y : A) (t : B -> Prop) : term1092 _99911 A B y t.
Proof. exact (EQ_MP (@lem4920134 _99911 A B y t) (@lem4920133 _99911 A B t y)). Qed.
Lemma lem4920136 {_99911 A B : Type'} (y : A) (t : B -> Prop) (x : A) : term1313 _99911 A B y t x.
Proof. exact (@lem4920135 _99911 A B y t x). Qed.
Lemma lem4920137 {_99911 A B : Type'} (x : A) (y : A) (t : B -> Prop) : (term1313 _99911 A B y t x) = (term1088 _99911 A B x y t).
Proof. exact (eq_refl (term1313 _99911 A B y t x)). Qed.
Lemma lem4920138 {_99911 A B : Type'} (x : A) (y : A) (t : B -> Prop) : term1088 _99911 A B x y t.
Proof. exact (EQ_MP (@lem4920137 _99911 A B x y t) (@lem4920136 _99911 A B y t x)). Qed.
Lemma lem4920139 {_99911 A B : Type'} (x : A) (y : A) (t : B -> Prop) (f : A -> B) : term1314 _99911 A B x y t f.
Proof. exact (@lem4920138 _99911 A B x y t f). Qed.
Lemma lem4920140 {_99911 A B : Type'} (f : A -> B) (x : A) (y : A) (t : B -> Prop) : (term1314 _99911 A B x y t f) = (term1084 _99911 A B f x y t).
Proof. exact (eq_refl (term1314 _99911 A B x y t f)). Qed.
Lemma lem4920141 {_99911 A B : Type'} (f : A -> B) (x : A) (y : A) (t : B -> Prop) : term1084 _99911 A B f x y t.
Proof. exact (EQ_MP (@lem4920140 _99911 A B f x y t) (@lem4920139 _99911 A B x y t f)). Qed.
Lemma lem4920142 {_99911 A B : Type'} (f : A -> B) (x : A) (y : A) (t : B -> Prop) (s : A -> Prop) : term1315 _99911 A B f x y t s.
Proof. exact (@lem4920141 _99911 A B f x y t s). Qed.
Lemma lem4920143 {_99911 A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) (y : A) (t : B -> Prop) : (term1315 _99911 A B f x y t s) = (term1044 _99911 A B s f x y t).
Proof. exact (eq_refl (term1315 _99911 A B f x y t s)). Qed.
Lemma lem4920144 {_99911 A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) (y : A) (t : B -> Prop) : term1044 _99911 A B s f x y t.
Proof. exact (EQ_MP (@lem4920143 _99911 A B s f x y t) (@lem4920142 _99911 A B f x y t s)). Qed.
Lemma lem4920146 {_99911 A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) (y : A) (t : B -> Prop) : term1044 _99911 A B s f x y t.
Proof. exact (@lem4916775 _99911 A B s f x y t (@lem4920144 _99911 A B s f x y t)). Qed.
Lemma lem4920147 {_99911 A B : Type'} (f : A -> B) (x : A) (y : A) (t : B -> Prop) (s : A -> Prop) (h1 : @FINITE A s) : term1079 _99911 A B s f x y t.
Proof. exact (@lem4920146 _99911 A B s f x y t (@lem4914388 A s h1)). Qed.
Lemma lem4920148 {_99911 A B : Type'} (f : A -> B) (x : A) (y : A) (s : A -> Prop) (t : B -> Prop) (h1 : @FINITE A s) (h2 : @FINITE B t) : term1077 _99911 A B s f x y t.
Proof. exact (@lem4920147 _99911 A B f x y t s h1 (@lem4914390 B t h2)). Qed.
Lemma lem4920149 {_99911 A B : Type'} (f : A -> B) (x : A) (y : A) (s : A -> Prop) (t : B -> Prop) (h1 : @FINITE A s) (h2 : @FINITE B t) (h3 : (@CARD A s) = (@CARD B t)) : term1075 _99911 A B s f x y t.
Proof. exact (@lem4920148 _99911 A B f x y s t h1 h2 (@lem4914392 A B s t h3)). Qed.
Lemma lem4920150 {_99911 A B : Type'} (x : A) (y : A) (f : A -> B) (s : A -> Prop) (t : B -> Prop) (h1 : @FINITE A s) (h2 : @FINITE B t) (h3 : (@CARD A s) = (@CARD B t)) (h4 : term692 A B f s t) : term1073 _99911 A B s f x y t.
Proof. exact (@lem4920149 _99911 A B f x y s t h1 h2 h3 (@lem4914391 A B f s t h4)). Qed.
Lemma lem4920151 {_99911 A B : Type'} (x : A) (y : A) (f : A -> B) (s : A -> Prop) (t : B -> Prop) (h1 : term693 A B t s f) (h2 : @FINITE A s) (h3 : @FINITE B t) (h4 : (@CARD A s) = (@CARD B t)) (h5 : term692 A B f s t) : term1071 _99911 A B s f x y t.
Proof. exact (@lem4920150 _99911 A B x y f s t h2 h3 h4 h5 (@lem4914393 A B t s f h1)). Qed.
Lemma lem4920152 {_99911 A B : Type'} (y : A) (x : A) (f : A -> B) (s : A -> Prop) (t : B -> Prop) (h1 : term693 A B t s f) (h2 : @FINITE A s) (h3 : @FINITE B t) (h4 : (@CARD A s) = (@CARD B t)) (h5 : @IN A x s) (h6 : term692 A B f s t) : term1069 _99911 A B s f x y t.
Proof. exact (@lem4920151 _99911 A B x y f s t h1 h2 h3 h4 h6 (@lem4914396 A x s h5)). Qed.
Lemma lem4920153 {_99911 A B : Type'} (x : A) (y : A) (f : A -> B) (s : A -> Prop) (t : B -> Prop) (h1 : term693 A B t s f) (h2 : @FINITE A s) (h3 : @FINITE B t) (h4 : (@CARD A s) = (@CARD B t)) (h5 : @IN A x s) (h6 : @IN A y s) (h7 : term692 A B f s t) : term1067 _99911 A B f x y t.
Proof. exact (@lem4920152 _99911 A B y x f s t h1 h2 h3 h4 h5 h7 (@lem4914398 A y s h6)). Qed.
Lemma lem4920154 {_99911 A B : Type'} (x : A) (y : A) (f : A -> B) (s : A -> Prop) (t : B -> Prop) (h1 : term693 A B t s f) (h2 : @FINITE A s) (h3 : @FINITE B t) (h4 : (f x) = (f y)) (h5 : (@CARD A s) = (@CARD B t)) (h6 : @IN A x s) (h7 : @IN A y s) (h8 : term692 A B f s t) : term1065 _99911 A B x y t.
Proof. exact (@lem4920153 _99911 A B x y f s t h1 h2 h3 h5 h6 h7 h8 (@lem4914397 A B x f y h4)). Qed.
Lemma lem4920155 {_99911 A B : Type'} (x : A) (y : A) (f : A -> B) (s : A -> Prop) (t : B -> Prop) (h1 : term693 A B t s f) (h2 : @FINITE A s) (h3 : @FINITE B t) (h4 : term688 A x y) (h5 : (f x) = (f y)) (h6 : (@CARD A s) = (@CARD B t)) (h7 : @IN A x s) (h8 : @IN A y s) (h9 : term692 A B f s t) : term1063 _99911 A B t.
Proof. exact (@lem4920154 _99911 A B x y f s t h1 h2 h3 h5 h6 h7 h8 h9 (@lem4914385 A x y h4)). Qed.
Lemma lem4920156 {_99911 A B : Type'} (x : A) (y : A) (f : A -> B) (s : A -> Prop) (t : B -> Prop) (h1 : term693 A B t s f) (h2 : @FINITE A s) (h3 : @FINITE B t) (h4 : term688 A x y) (h5 : (f x) = (f y)) (h6 : (@CARD A s) = (@CARD B t)) (h7 : (@CARD B t) = (NUMERAL 0)) (h8 : @IN A x s) (h9 : @IN A y s) (h10 : term692 A B f s t) : term1060 _99911 A B.
Proof. exact (@lem4920155 _99911 A B x y f s t h1 h2 h3 h4 h5 h6 h8 h9 h10 (@lem4916747 B t h7)). Qed.
Lemma lem4920157 {_99911 A B : Type'} (x : A) (y : A) (f : A -> B) (s : A -> Prop) (t : B -> Prop) (h1 : term693 A B t s f) (h2 : @FINITE A s) (h3 : @FINITE B t) (h4 : term688 A x y) (h5 : (f x) = (f y)) (h6 : (@CARD A s) = (@CARD B t)) (h7 : (@CARD B t) = (NUMERAL 0)) (h8 : @IN A x s) (h9 : @IN A y s) (h10 : term692 A B f s t) : term1058 _99911 A B.
Proof. exact (@lem4920156 _99911 A B x y f s t h1 h2 h3 h4 h5 h6 h7 h8 h9 h10 (@lem4916756 _99911)). Qed.
Lemma lem4920158 {_99911 A B : Type'} (x : A) (y : A) (f : A -> B) (s : A -> Prop) (t : B -> Prop) (h1 : term693 A B t s f) (h2 : @FINITE A s) (h3 : @FINITE B t) (h4 : term688 A x y) (h5 : (f x) = (f y)) (h6 : (@CARD A s) = (@CARD B t)) (h7 : (@CARD B t) = (NUMERAL 0)) (h8 : @IN A x s) (h9 : @IN A y s) (h10 : term692 A B f s t) : term1056 _99911 A B.
Proof. exact (@lem4920157 _99911 A B x y f s t h1 h2 h3 h4 h5 h6 h7 h8 h9 h10 (@lem4916753 A)). Qed.
Lemma lem4920159 {_99911 A B : Type'} (x : A) (y : A) (f : A -> B) (s : A -> Prop) (t : B -> Prop) (h1 : term693 A B t s f) (h2 : @FINITE A s) (h3 : @FINITE B t) (h4 : term688 A x y) (h5 : (f x) = (f y)) (h6 : (@CARD A s) = (@CARD B t)) (h7 : (@CARD B t) = (NUMERAL 0)) (h8 : @IN A x s) (h9 : @IN A y s) (h10 : term692 A B f s t) : term1053 _99911 A B.
Proof. exact (@lem4920158 _99911 A B x y f s t h1 h2 h3 h4 h5 h6 h7 h8 h9 h10 (@lem4916752 B)). Qed.
Lemma lem4920160 {A B : Type'} (x : A) (y : A) (f : A -> B) (s : A -> Prop) (t : B -> Prop) (h1 : term693 A B t s f) (h2 : @FINITE A s) (h3 : @FINITE B t) (h4 : term688 A x y) (h5 : (f x) = (f y)) (h6 : (@CARD A s) = (@CARD B t)) (h7 : (@CARD B t) = (NUMERAL 0)) (h8 : @IN A x s) (h9 : @IN A y s) (h10 : term692 A B f s t) : term1051 A B.
Proof. exact (@lem4920159 Prop A B x y f s t h1 h2 h3 h4 h5 h6 h7 h8 h9 h10 (@lem3854502 Prop)). Qed.
Lemma lem4920161 {A B : Type'} (x : A) (y : A) (f : A -> B) (s : A -> Prop) (t : B -> Prop) (h1 : term693 A B t s f) (h2 : @FINITE A s) (h3 : @FINITE B t) (h4 : term688 A x y) (h5 : (f x) = (f y)) (h6 : (@CARD A s) = (@CARD B t)) (h7 : (@CARD B t) = (NUMERAL 0)) (h8 : @IN A x s) (h9 : @IN A y s) (h10 : term692 A B f s t) : term1048 B.
Proof. exact (@lem4920160 A B x y f s t h1 h2 h3 h4 h5 h6 h7 h8 h9 h10 (@lem4916748 A)). Qed.
Lemma lem4920162 {A B : Type'} (x : A) (y : A) (f : A -> B) (s : A -> Prop) (t : B -> Prop) (h1 : term693 A B t s f) (h2 : @FINITE A s) (h3 : @FINITE B t) (h4 : term688 A x y) (h5 : (f x) = (f y)) (h6 : (@CARD A s) = (@CARD B t)) (h7 : (@CARD B t) = (NUMERAL 0)) (h8 : @IN A x s) (h9 : @IN A y s) (h10 : term692 A B f s t) : False.
Proof. exact (@lem4920161 A B x y f s t h1 h2 h3 h4 h5 h6 h7 h8 h9 h10 (@lem4916749 B)). Qed.
Lemma lem4920163 {A B : Type'} (x : A) (y : A) (f : A -> B) (s : A -> Prop) (t : B -> Prop) (h1 : term693 A B t s f) (h2 : @FINITE A s) (h3 : @FINITE B t) (h4 : term688 A x y) (h5 : (f x) = (f y)) (h6 : (@CARD A s) = (@CARD B t)) (h7 : (@CARD B t) = (NUMERAL 0)) (h8 : @IN A x s) (h9 : @IN A y s) (h10 : term692 A B f s t) : ((@CARD B t) = (NUMERAL 0)) = False.
Proof. exact (prop_ext (fun h11 : (@CARD B t) = (NUMERAL 0) => @lem4920162 A B x y f s t h1 h2 h3 h4 h5 h6 h7 h8 h9 h10) (fun h11 : False => @lem4916747 B t h7)). Qed.
Lemma lem4920164 {A B : Type'} (x : A) (y : A) (f : A -> B) (s : A -> Prop) (t : B -> Prop) (h1 : term693 A B t s f) (h2 : @FINITE A s) (h3 : @FINITE B t) (h4 : term688 A x y) (h5 : (f x) = (f y)) (h6 : (@CARD A s) = (@CARD B t)) (h7 : (@CARD B t) = (NUMERAL 0)) (h8 : @IN A x s) (h9 : @IN A y s) (h10 : term692 A B f s t) : False.
Proof. exact (EQ_MP (@lem4920163 A B x y f s t h1 h2 h3 h4 h5 h6 h7 h8 h9 h10) (@lem4916747 B t h7)). Qed.
Lemma lem4920165 {A B : Type'} (x : A) (y : A) (f : A -> B) (s : A -> Prop) (t : B -> Prop) (h1 : term693 A B t s f) (h2 : @FINITE A s) (h3 : @FINITE B t) (h4 : term688 A x y) (h5 : (f x) = (f y)) (h6 : (@CARD A s) = (@CARD B t)) (h7 : @IN A x s) (h8 : @IN A y s) (h9 : term692 A B f s t) : term1316 B t.
Proof. exact (fun h0 : (@CARD B t) = (NUMERAL 0) => @lem4920164 A B x y f s t h1 h2 h3 h4 h5 h6 h0 h7 h8 h9). Qed.
Lemma lem4920166 {B : Type'} (t : B -> Prop) : (term1316 B t) = (term1041 B t).
Proof. exact (@lem69 ((@CARD B t) = (NUMERAL 0))). Qed.
Lemma lem4920167 {A B : Type'} (x : A) (y : A) (f : A -> B) (s : A -> Prop) (t : B -> Prop) (h1 : term693 A B t s f) (h2 : @FINITE A s) (h3 : @FINITE B t) (h4 : term688 A x y) (h5 : (f x) = (f y)) (h6 : (@CARD A s) = (@CARD B t)) (h7 : @IN A x s) (h8 : @IN A y s) (h9 : term692 A B f s t) : term1041 B t.
Proof. exact (EQ_MP (@lem4920166 B t) (@lem4920165 A B x y f s t h1 h2 h3 h4 h5 h6 h7 h8 h9)). Qed.
Lemma lem4920168 {A B : Type'} (x : A) (y : A) (f : A -> B) (s : A -> Prop) (t : B -> Prop) (h1 : term693 A B t s f) (h2 : @FINITE A s) (h3 : @FINITE B t) (h4 : term688 A x y) (h5 : (f x) = (f y)) (h6 : (@CARD A s) = (@CARD B t)) (h7 : @IN A x s) (h8 : @IN A y s) (h9 : term692 A B f s t) : term1008 A B s y t.
Proof. exact (EQ_MP (@lem4916746 A B t y s h2 h6 h8) (@lem4920167 A B x y f s t h1 h2 h3 h4 h5 h6 h7 h8 h9)). Qed.
Lemma lem4920169 {A B : Type'} (x : A) (y : A) (f : A -> B) (s : A -> Prop) (t : B -> Prop) (h1 : term693 A B t s f) (h2 : @FINITE A s) (h3 : @FINITE B t) (h4 : term688 A x y) (h5 : (f x) = (f y)) (h6 : (@CARD A s) = (@CARD B t)) (h7 : @IN A x s) (h8 : @IN A y s) (h9 : term692 A B f s t) : term1009 A B f y s.
Proof. exact (EQ_MP (@lem4916630 A B f y s t h2 h6) (@lem4920168 A B x y f s t h1 h2 h3 h4 h5 h6 h7 h8 h9)). Qed.
Lemma lem4920170 {A B : Type'} (x : A) (y : A) (f : A -> B) (s : A -> Prop) (t : B -> Prop) (h1 : term693 A B t s f) (h2 : @FINITE A s) (h3 : @FINITE B t) (h4 : term688 A x y) (h5 : (f x) = (f y)) (h6 : (@CARD A s) = (@CARD B t)) (h7 : @IN A x s) (h8 : @IN A y s) (h9 : term692 A B f s t) : term1317 A B f y s.
Proof. exact (ex_intro (term1318 A B f y s) (term1015 A s y) (@lem4920169 A B x y f s t h1 h2 h3 h4 h5 h6 h7 h8 h9)). Qed.
Lemma lem4920171 {A B : Type'} (x : A) (y : A) (f : A -> B) (s : A -> Prop) (t : B -> Prop) (h1 : term693 A B t s f) (h2 : @FINITE A s) (h3 : @FINITE B t) (h4 : term688 A x y) (h5 : (f x) = (f y)) (h6 : (@CARD A s) = (@CARD B t)) (h7 : @IN A x s) (h8 : @IN A y s) (h9 : term692 A B f s t) : term995 A B f y s.
Proof. exact (@lem4916546 A B f y s (@lem4920170 A B x y f s t h1 h2 h3 h4 h5 h6 h7 h8 h9)). Qed.
Lemma lem4920172 {A B : Type'} (x : A) (y : A) (f : A -> B) (s : A -> Prop) (t : B -> Prop) (h1 : term693 A B t s f) (h2 : @FINITE A s) (h3 : @FINITE B t) (h4 : term688 A x y) (h5 : (f x) = (f y)) (h6 : (@CARD A s) = (@CARD B t)) (h7 : @IN A x s) (h8 : @IN A y s) (h9 : term692 A B f s t) : term993 A B f s y.
Proof. exact (EQ_MP (@lem4916543 A B f s y) (@lem4920171 A B x y f s t h1 h2 h3 h4 h5 h6 h7 h8 h9)). Qed.
Lemma lem4920173 {A B : Type'} (x : A) (y : A) (f : A -> B) (s : A -> Prop) (t : B -> Prop) (h1 : term693 A B t s f) (h2 : @FINITE A s) (h3 : @FINITE B t) (h4 : term688 A x y) (h5 : term698 A B f s y) (h6 : (f x) = (f y)) (h7 : (@CARD A s) = (@CARD B t)) (h8 : @IN A x s) (h9 : @IN A y s) (h10 : term692 A B f s t) : False.
Proof. exact (@lem4920172 A B x y f s t h1 h2 h3 h4 h6 h7 h8 h9 h10 (@lem4914462 A B f s y h5)). Qed.
Lemma lem4920174 {A B : Type'} (x : A) (y : A) (f : A -> B) (s : A -> Prop) (t : B -> Prop) (h1 : term693 A B t s f) (h2 : @FINITE A s) (h3 : @FINITE B t) (h4 : term688 A x y) (h5 : (f x) = (f y)) (h6 : (@CARD A s) = (@CARD B t)) (h7 : @IN A x s) (h8 : @IN A y s) (h9 : term692 A B f s t) : (term698 A B f s y) = False.
Proof. exact (prop_ext (fun h10 : term698 A B f s y => @lem4920173 A B x y f s t h1 h2 h3 h4 h10 h5 h6 h7 h8 h9) (fun h10 : False => @lem4916535 A B x y f s t h1 h2 h3 h4 h5 h6 h7 h8 h9)). Qed.
Lemma lem4920175 {A B : Type'} (x : A) (y : A) (f : A -> B) (s : A -> Prop) (t : B -> Prop) (h1 : term693 A B t s f) (h2 : @FINITE A s) (h3 : @FINITE B t) (h4 : term688 A x y) (h5 : (f x) = (f y)) (h6 : (@CARD A s) = (@CARD B t)) (h7 : @IN A x s) (h8 : @IN A y s) (h9 : term692 A B f s t) : False.
Proof. exact (EQ_MP (@lem4920174 A B x y f s t h1 h2 h3 h4 h5 h6 h7 h8 h9) (@lem4916535 A B x y f s t h1 h2 h3 h4 h5 h6 h7 h8 h9)). Qed.
Lemma lem4920176 {A B : Type'} (x : A) (y : A) (f : A -> B) (s : A -> Prop) (t : B -> Prop) (h1 : term693 A B t s f) (h2 : @FINITE A s) (h3 : @FINITE B t) (h4 : term688 A x y) (h5 : (f x) = (f y)) (h6 : (@CARD A s) = (@CARD B t)) (h7 : @IN A x s) (h8 : @IN A y s) (h9 : term692 A B f s t) : x = y.
Proof. exact (EQ_MP (@lem4914461 A x y h4) (@lem4920175 A B x y f s t h1 h2 h3 h4 h5 h6 h7 h8 h9)). Qed.
Lemma lem4920177 {A B : Type'} (x : A) (y : A) (f : A -> B) (s : A -> Prop) (t : B -> Prop) (h1 : term693 A B t s f) (h2 : @FINITE A s) (h3 : @FINITE B t) (h4 : (f x) = (f y)) (h5 : (@CARD A s) = (@CARD B t)) (h6 : @IN A x s) (h7 : @IN A y s) (h8 : term692 A B f s t) : x = y.
Proof. exact (or_elim (@lem4914383 A x y) (fun h0 : x = y => @lem4914430 A x y h0) (fun h0 : term688 A x y => @lem4920176 A B x y f s t h1 h2 h3 h0 h4 h5 h6 h7 h8)). Qed.
Lemma lem4920178 {A B : Type'} (f : A -> B) (s : A -> Prop) (t : B -> Prop) (h1 : (@IMAGE A B f s) = t) : (@IMAGE A B f s) = t.
Proof. exact (h1). Qed.
Lemma lem4920180 (p : Prop) : p = (term735 p).
Proof. exact (EQ_MP (@lem10578 p) (@lem10597 p)). Qed.
Lemma lem4920181 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (f : A -> B) (y : B) : (term1319 A B t s f y) = (term1320 A B t s f y).
Proof. exact (@lem4920180 (term1319 A B t s f y)). Qed.
Lemma lem4920182 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (f : A -> B) (y : B) : (term1320 A B t s f y) = (term1319 A B t s f y).
Proof. exact (SYM (@lem4920181 A B t s f y)). Qed.
Lemma lem4920183 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (f : A -> B) (y : B) (h1 : term1321 A B t s f y) : term1321 A B t s f y.
Proof. exact (h1). Qed.
Lemma lem4920184 {B : Type'} : term1322 B.
Proof. exact (@lem3181245 B). Qed.
Lemma lem4920185 {A : Type'} : term1322 A.
Proof. exact (@lem3181245 A). Qed.
Lemma lem4920187 {A : Type'} : term1323 A.
Proof. exact (@lem3206070 A A). Qed.
Lemma lem4920188 {A B : Type'} : term1324 A B.
Proof. exact (@lem3206070 A B). Qed.
Lemma lem4920190 {A : Type'} : term1325 A.
Proof. exact (@lem3206070 A nat). Qed.
Lemma lem4920193 {A B : Type'} : term1326 A B.
Proof. exact (@lem3206070 A (B -> Prop)). Qed.
Lemma lem4920194 {A : Type'} : term1327 A.
Proof. exact (@lem3206070 A (A -> Prop)). Qed.
Lemma lem4920196 {B : Type'} : term1323 B.
Proof. exact (@lem3206070 B B). Qed.
Lemma lem4920199 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (f : A -> B) (y : B) (h1 : term1328 A B t s f y) : term1328 A B t s f y.
Proof. exact (h1). Qed.
Lemma lem4920200 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (f : A -> B) (y : B) : term1329 A B t s f y.
Proof. exact (fun h0 : term1328 A B t s f y => @lem4920199 A B t s f y h0). Qed.
Lemma lem4920201 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (f : A -> B) (y : B) (h1 : term1329 A B t s f y) : term1329 A B t s f y.
Proof. exact (h1). Qed.
Lemma lem4920202 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (f : A -> B) (y : B) (h1 : term1328 A B t s f y) : term1328 A B t s f y.
Proof. exact (h1). Qed.
Lemma lem4920203 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (f : A -> B) (y : B) (h1 : term1328 A B t s f y) (h2 : term1329 A B t s f y) : term1328 A B t s f y.
Proof. exact (@lem4920201 A B t s f y h2 (@lem4920202 A B t s f y h1)). Qed.
Lemma lem4920204 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (f : A -> B) (y : B) (h1 : term1328 A B t s f y) : term1330 A B t s f y.
Proof. exact (fun h0 : term1329 A B t s f y => @lem4920203 A B t s f y h1 h0). Qed.
Lemma lem4920205 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (f : A -> B) (y : B) (h1 : term1329 A B t s f y) : term1329 A B t s f y.
Proof. exact (h1). Qed.
Lemma lem4920206 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (f : A -> B) (y : B) (h1 : term1328 A B t s f y) (h2 : term1329 A B t s f y) : term1328 A B t s f y.
Proof. exact (@lem4920204 A B t s f y h1 (@lem4920205 A B t s f y h2)). Qed.
Lemma lem4920207 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (f : A -> B) (y : B) (h1 : term1329 A B t s f y) : term1329 A B t s f y.
Proof. exact (fun h0 : term1328 A B t s f y => @lem4920206 A B t s f y h0 h1). Qed.
Lemma lem4920208 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (f : A -> B) (y : B) : term1331 A B t s f y.
Proof. exact (fun h0 : term1329 A B t s f y => @lem4920207 A B t s f y h0). Qed.
Lemma lem4920211 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (f : A -> B) (y : B) : term1329 A B t s f y.
Proof. exact (@lem4920208 A B t s f y (@lem4920200 A B t s f y)). Qed.
Lemma lem4920212 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (f : A -> B) (y : B) : term1329 A B t s f y.
Proof. exact (@lem4920211 A B t s f y). Qed.
Lemma lem4920708 (t : Prop) : (t -> False) = (~ t).
Proof. exact (proj2 (@lem16474 t)). Qed.
Lemma lem4920709 {B : Type'} : (term1332 B) = (term1333 B).
Proof. exact (@lem4920708 (term1322 B)). Qed.
Lemma lem4920722 {A : Type'} : (term1334 A) = (term1334 A).
Proof. exact (eq_refl (term1334 A)). Qed.
Lemma lem4920723 {A B : Type'} : (term1335 A B) = (term1336 A B).
Proof. exact (MK_COMB (@lem4920722 A) (@lem4920709 B)). Qed.
Lemma lem4920726 {A : Type'} : (term1337 A) = (term1337 A).
Proof. exact (eq_refl (term1337 A)). Qed.
Lemma lem4920727 {A B : Type'} : (term1338 A B) = (term1339 A B).
Proof. exact (MK_COMB (@lem4920726 A) (@lem4920723 A B)). Qed.
Lemma lem4920730 {A B : Type'} : (term1340 A B) = (term1340 A B).
Proof. exact (eq_refl (term1340 A B)). Qed.
Lemma lem4920731 {A B : Type'} : (term1341 A B) = (term1342 A B).
Proof. exact (MK_COMB (@lem4920730 A B) (@lem4920727 A B)). Qed.
Lemma lem4920734 {A : Type'} : (term1343 A) = (term1343 A).
Proof. exact (eq_refl (term1343 A)). Qed.
Lemma lem4920735 {A B : Type'} : (term1344 A B) = (term1345 A B).
Proof. exact (MK_COMB (@lem4920734 A) (@lem4920731 A B)). Qed.
Lemma lem4920738 {B : Type'} : (term1346 B) = (term1346 B).
Proof. exact (eq_refl (term1346 B)). Qed.
Lemma lem4920739 {A B : Type'} : (term1347 A B) = (term1348 A B).
Proof. exact (MK_COMB (@lem4920738 B) (@lem4920735 A B)). Qed.
Lemma lem4920742 {A B : Type'} : (term1349 A B) = (term1349 A B).
Proof. exact (eq_refl (term1349 A B)). Qed.
Lemma lem4920743 {A B : Type'} : (term1350 A B) = (term1351 A B).
Proof. exact (MK_COMB (@lem4920742 A B) (@lem4920739 A B)). Qed.
Lemma lem4920746 {A : Type'} : (term1346 A) = (term1346 A).
Proof. exact (eq_refl (term1346 A)). Qed.
Lemma lem4920747 {A B : Type'} : (term1352 A B) = (term1353 A B).
Proof. exact (MK_COMB (@lem4920746 A) (@lem4920743 A B)). Qed.
Lemma lem4920750 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (f : A -> B) (y : B) : (term1354 A B t s f y) = (term1354 A B t s f y).
Proof. exact (eq_refl (term1354 A B t s f y)). Qed.
Lemma lem4920751 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (f : A -> B) (y : B) : (term1355 A B t s f y) = (term1356 A B t s f y).
Proof. exact (MK_COMB (@lem4920750 A B t s f y) (@lem4920747 A B)). Qed.
Lemma lem4920754 {B : Type'} (y : B) (t : B -> Prop) : (term729 B y t) = (term729 B y t).
Proof. exact (eq_refl (term729 B y t)). Qed.
Lemma lem4920755 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (f : A -> B) (y : B) : (term1357 A B t s f y) = (term1358 A B t s f y).
Proof. exact (MK_COMB (@lem4920754 B y t) (@lem4920751 A B t s f y)). Qed.
Lemma lem4920758 {A B : Type'} (s : A -> Prop) (f : A -> B) : (term1359 A B s f) = (term1359 A B s f).
Proof. exact (eq_refl (term1359 A B s f)). Qed.
Lemma lem4920759 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (f : A -> B) (y : B) : (term1360 A B t s f y) = (term1361 A B t s f y).
Proof. exact (MK_COMB (@lem4920758 A B s f) (@lem4920755 A B t s f y)). Qed.
Lemma lem4920762 {A B : Type'} (f : A -> B) (s : A -> Prop) (t : B -> Prop) : (term756 A B f s t) = (term756 A B f s t).
Proof. exact (eq_refl (term756 A B f s t)). Qed.
Lemma lem4920763 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (f : A -> B) (y : B) : (term1362 A B t s f y) = (term1363 A B t s f y).
Proof. exact (MK_COMB (@lem4920762 A B f s t) (@lem4920759 A B t s f y)). Qed.
Lemma lem4920766 {A B : Type'} (s : A -> Prop) (t : B -> Prop) : (term759 A B s t) = (term759 A B s t).
Proof. exact (eq_refl (term759 A B s t)). Qed.
Lemma lem4920767 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (f : A -> B) (y : B) : (term1364 A B t s f y) = (term1365 A B t s f y).
Proof. exact (MK_COMB (@lem4920766 A B s t) (@lem4920763 A B t s f y)). Qed.
Lemma lem4920770 {B : Type'} (t : B -> Prop) : (term762 B t) = (term762 B t).
Proof. exact (eq_refl (term762 B t)). Qed.
Lemma lem4920771 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (f : A -> B) (y : B) : (term1366 A B t s f y) = (term1367 A B t s f y).
Proof. exact (MK_COMB (@lem4920770 B t) (@lem4920767 A B t s f y)). Qed.
Lemma lem4920774 {A : Type'} (s : A -> Prop) : (term762 A s) = (term762 A s).
Proof. exact (eq_refl (term762 A s)). Qed.
Lemma lem4920775 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (f : A -> B) (y : B) : (term1328 A B t s f y) = (term1368 A B t s f y).
Proof. exact (MK_COMB (@lem4920774 A s) (@lem4920771 A B t s f y)). Qed.
Lemma lem4920778 {A B : Type'} (s : A -> Prop) (f : A -> B) (y : B) : (term1369 A B s f y) = (term1370 A B s f y).
Proof. exact (fun_ext (fun t : B -> Prop => @lem4920775 A B t s f y)). Qed.
Lemma lem4920779 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4920780 {A B : Type'} (s : A -> Prop) (f : A -> B) (y : B) : (term1371 A B s f y) = (term1372 A B s f y).
Proof. exact (MK_COMB (@lem4920779 B) (@lem4920778 A B s f y)). Qed.
Lemma lem4920785 {A B : Type'} (f : A -> B) (y : B) : (term1373 A B f y) = (term1374 A B f y).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4920780 A B s f y)). Qed.
Lemma lem4920786 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4920787 {A B : Type'} (f : A -> B) (y : B) : (term1375 A B f y) = (term1376 A B f y).
Proof. exact (MK_COMB (@lem4920786 A) (@lem4920785 A B f y)). Qed.
Lemma lem4920792 {A B : Type'} (y : B) : (term1377 A B y) = (term1378 A B y).
Proof. exact (fun_ext (fun f : A -> B => @lem4920787 A B f y)). Qed.
Lemma lem4920793 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem4920794 {A B : Type'} (y : B) : (term1379 A B y) = (term1380 A B y).
Proof. exact (MK_COMB (@lem4920793 A B) (@lem4920792 A B y)). Qed.
Lemma lem4920799 {A B : Type'} : (term1381 A B) = (term1382 A B).
Proof. exact (fun_ext (fun y : B => @lem4920794 A B y)). Qed.
Lemma lem4920800 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4920809 {A B : Type'} : (term1383 A B) = (term1384 A B).
Proof. exact (MK_COMB (@lem4920800 B) (@lem4920799 A B)). Qed.
Lemma lem4920814 {B : Type'} (s : B -> Prop) (x : B) (t : B -> Prop) : ((@IN B x s) = (@IN B x t)) = ((@IN B x s) = (@IN B x t)).
Proof. exact (eq_refl ((@IN B x s) = (@IN B x t))). Qed.
Lemma lem4920815 {B : Type'} (s : B -> Prop) (t : B -> Prop) : (term1385 B s t) = (term1385 B s t).
Proof. exact (fun_ext (fun x : B => @lem4920814 B s x t)). Qed.
Lemma lem4920816 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4920817 {B : Type'} (s : B -> Prop) (t : B -> Prop) : (term1386 B s t) = (term1386 B s t).
Proof. exact (MK_COMB (@lem4920816 B) (@lem4920815 B s t)). Qed.
Lemma lem4920820 {B : Type'} (s : B -> Prop) (t : B -> Prop) : (term1387 B s t) = (term1387 B s t).
Proof. exact (eq_refl (term1387 B s t)). Qed.
Lemma lem4920821 {B : Type'} (s : B -> Prop) (t : B -> Prop) : ((s = t) = (term1386 B s t)) = ((s = t) = (term1386 B s t)).
Proof. exact (MK_COMB (@lem4920820 B s t) (@lem4920817 B s t)). Qed.
Lemma lem4920822 {B : Type'} (s : B -> Prop) : (term1388 B s) = (term1388 B s).
Proof. exact (fun_ext (fun t : B -> Prop => @lem4920821 B s t)). Qed.
Lemma lem4920823 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4920824 {B : Type'} (s : B -> Prop) : (term1389 B s) = (term1389 B s).
Proof. exact (MK_COMB (@lem4920823 B) (@lem4920822 B s)). Qed.
Lemma lem4920825 {B : Type'} : (term1390 B) = (term1390 B).
Proof. exact (fun_ext (fun s : B -> Prop => @lem4920824 B s)). Qed.
Lemma lem4920826 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4920827 {B : Type'} : (term1322 B) = (term1322 B).
Proof. exact (MK_COMB (@lem4920826 B) (@lem4920825 B)). Qed.
Lemma lem4920828 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem4920829 {B : Type'} : (term1333 B) = (term1333 B).
Proof. exact (MK_COMB (@lem4920828) (@lem4920827 B)). Qed.
Lemma lem4920834 {A : Type'} (s : A -> Prop) (x : A) (t : A -> Prop) : ((@IN A x s) = (@IN A x t)) = ((@IN A x s) = (@IN A x t)).
Proof. exact (eq_refl ((@IN A x s) = (@IN A x t))). Qed.
Lemma lem4920835 {A : Type'} (s : A -> Prop) (t : A -> Prop) : (term1385 A s t) = (term1385 A s t).
Proof. exact (fun_ext (fun x : A => @lem4920834 A s x t)). Qed.
Lemma lem4920836 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4920837 {A : Type'} (s : A -> Prop) (t : A -> Prop) : (term1386 A s t) = (term1386 A s t).
Proof. exact (MK_COMB (@lem4920836 A) (@lem4920835 A s t)). Qed.
Lemma lem4920840 {A : Type'} (s : A -> Prop) (t : A -> Prop) : (term1387 A s t) = (term1387 A s t).
Proof. exact (eq_refl (term1387 A s t)). Qed.
Lemma lem4920841 {A : Type'} (s : A -> Prop) (t : A -> Prop) : ((s = t) = (term1386 A s t)) = ((s = t) = (term1386 A s t)).
Proof. exact (MK_COMB (@lem4920840 A s t) (@lem4920837 A s t)). Qed.
Lemma lem4920842 {A : Type'} (s : A -> Prop) : (term1388 A s) = (term1388 A s).
Proof. exact (fun_ext (fun t : A -> Prop => @lem4920841 A s t)). Qed.
Lemma lem4920843 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4920844 {A : Type'} (s : A -> Prop) : (term1389 A s) = (term1389 A s).
Proof. exact (MK_COMB (@lem4920843 A) (@lem4920842 A s)). Qed.
Lemma lem4920845 {A : Type'} : (term1390 A) = (term1390 A).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4920844 A s)). Qed.
Lemma lem4920846 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4920847 {A : Type'} : (term1322 A) = (term1322 A).
Proof. exact (MK_COMB (@lem4920846 A) (@lem4920845 A)). Qed.
Lemma lem4920848 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4920849 {A : Type'} : (term1334 A) = (term1334 A).
Proof. exact (MK_COMB (@lem4920848) (@lem4920847 A)). Qed.
Lemma lem4920850 {A B : Type'} : (term1336 A B) = (term1336 A B).
Proof. exact (MK_COMB (@lem4920849 A) (@lem4920829 B)). Qed.
Lemma lem4920855 {A : Type'} (y : nat) (f : A -> nat) (x : A) (s : A -> Prop) : (term1391 A y f x s) = (term1391 A y f x s).
Proof. exact (eq_refl (term1391 A y f x s)). Qed.
Lemma lem4920856 {A : Type'} (y : nat) (f : A -> nat) (s : A -> Prop) : (term1392 A y f s) = (term1392 A y f s).
Proof. exact (fun_ext (fun x : A => @lem4920855 A y f x s)). Qed.
Lemma lem4920857 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem4920858 {A : Type'} (y : nat) (f : A -> nat) (s : A -> Prop) : (term1393 A y f s) = (term1393 A y f s).
Proof. exact (MK_COMB (@lem4920857 A) (@lem4920856 A y f s)). Qed.
Lemma lem4920861 {A : Type'} (y : nat) (f : A -> nat) (s : A -> Prop) : (term1394 A y f s) = (term1394 A y f s).
Proof. exact (eq_refl (term1394 A y f s)). Qed.
Lemma lem4920862 {A : Type'} (y : nat) (f : A -> nat) (s : A -> Prop) : ((term1395 A y f s) = (term1393 A y f s)) = ((term1395 A y f s) = (term1393 A y f s)).
Proof. exact (MK_COMB (@lem4920861 A y f s) (@lem4920858 A y f s)). Qed.
Lemma lem4920863 {A : Type'} (y : nat) (s : A -> Prop) : (term1396 A y s) = (term1396 A y s).
Proof. exact (fun_ext (fun f : A -> nat => @lem4920862 A y f s)). Qed.
Lemma lem4920864 {A : Type'} : (@all (A -> nat)) = (@all (A -> nat)).
Proof. exact (eq_refl (@all (A -> nat))). Qed.
Lemma lem4920865 {A : Type'} (y : nat) (s : A -> Prop) : (term1397 A y s) = (term1397 A y s).
Proof. exact (MK_COMB (@lem4920864 A) (@lem4920863 A y s)). Qed.
Lemma lem4920866 {A : Type'} (y : nat) : (term1398 A y) = (term1398 A y).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4920865 A y s)). Qed.
Lemma lem4920867 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4920868 {A : Type'} (y : nat) : (term1399 A y) = (term1399 A y).
Proof. exact (MK_COMB (@lem4920867 A) (@lem4920866 A y)). Qed.
Lemma lem4920869 {A : Type'} : (term1400 A) = (term1400 A).
Proof. exact (fun_ext (fun y : nat => @lem4920868 A y)). Qed.
Lemma lem4920870 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4920871 {A : Type'} : (term1325 A) = (term1325 A).
Proof. exact (MK_COMB (@lem4920870) (@lem4920869 A)). Qed.
Lemma lem4920872 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4920873 {A : Type'} : (term1337 A) = (term1337 A).
Proof. exact (MK_COMB (@lem4920872) (@lem4920871 A)). Qed.
Lemma lem4920874 {A B : Type'} : (term1339 A B) = (term1339 A B).
Proof. exact (MK_COMB (@lem4920873 A) (@lem4920850 A B)). Qed.
Lemma lem4920879 {A B : Type'} (y : B -> Prop) (f : type1413 A B) (x : A) (s : A -> Prop) : (term1401 A B y f x s) = (term1401 A B y f x s).
Proof. exact (eq_refl (term1401 A B y f x s)). Qed.
Lemma lem4920880 {A B : Type'} (y : B -> Prop) (f : type1413 A B) (s : A -> Prop) : (term1402 A B y f s) = (term1402 A B y f s).
Proof. exact (fun_ext (fun x : A => @lem4920879 A B y f x s)). Qed.
Lemma lem4920881 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem4920882 {A B : Type'} (y : B -> Prop) (f : type1413 A B) (s : A -> Prop) : (term1403 A B y f s) = (term1403 A B y f s).
Proof. exact (MK_COMB (@lem4920881 A) (@lem4920880 A B y f s)). Qed.
Lemma lem4920885 {A B : Type'} (y : B -> Prop) (f : type1413 A B) (s : A -> Prop) : (term1404 A B y f s) = (term1404 A B y f s).
Proof. exact (eq_refl (term1404 A B y f s)). Qed.
Lemma lem4920886 {A B : Type'} (y : B -> Prop) (f : type1413 A B) (s : A -> Prop) : ((term1405 A B y f s) = (term1403 A B y f s)) = ((term1405 A B y f s) = (term1403 A B y f s)).
Proof. exact (MK_COMB (@lem4920885 A B y f s) (@lem4920882 A B y f s)). Qed.
Lemma lem4920887 {A B : Type'} (y : B -> Prop) (s : A -> Prop) : (term1406 A B y s) = (term1406 A B y s).
Proof. exact (fun_ext (fun f : type1413 A B => @lem4920886 A B y f s)). Qed.
Lemma lem4920888 {A B : Type'} : (@all (A -> B -> Prop)) = (@all (A -> B -> Prop)).
Proof. exact (eq_refl (@all (A -> B -> Prop))). Qed.
Lemma lem4920889 {A B : Type'} (y : B -> Prop) (s : A -> Prop) : (term1407 A B y s) = (term1407 A B y s).
Proof. exact (MK_COMB (@lem4920888 A B) (@lem4920887 A B y s)). Qed.
Lemma lem4920890 {A B : Type'} (y : B -> Prop) : (term1408 A B y) = (term1408 A B y).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4920889 A B y s)). Qed.
Lemma lem4920891 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4920892 {A B : Type'} (y : B -> Prop) : (term1409 A B y) = (term1409 A B y).
Proof. exact (MK_COMB (@lem4920891 A) (@lem4920890 A B y)). Qed.
Lemma lem4920893 {A B : Type'} : (term1410 A B) = (term1410 A B).
Proof. exact (fun_ext (fun y : B -> Prop => @lem4920892 A B y)). Qed.
Lemma lem4920894 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4920895 {A B : Type'} : (term1326 A B) = (term1326 A B).
Proof. exact (MK_COMB (@lem4920894 B) (@lem4920893 A B)). Qed.
Lemma lem4920896 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4920897 {A B : Type'} : (term1340 A B) = (term1340 A B).
Proof. exact (MK_COMB (@lem4920896) (@lem4920895 A B)). Qed.
Lemma lem4920898 {A B : Type'} : (term1342 A B) = (term1342 A B).
Proof. exact (MK_COMB (@lem4920897 A B) (@lem4920874 A B)). Qed.
Lemma lem4920903 {A : Type'} (y : A -> Prop) (f : type1402 A) (x : A) (s : A -> Prop) : (term1411 A y f x s) = (term1411 A y f x s).
Proof. exact (eq_refl (term1411 A y f x s)). Qed.
Lemma lem4920904 {A : Type'} (y : A -> Prop) (f : type1402 A) (s : A -> Prop) : (term1412 A y f s) = (term1412 A y f s).
Proof. exact (fun_ext (fun x : A => @lem4920903 A y f x s)). Qed.
Lemma lem4920905 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem4920906 {A : Type'} (y : A -> Prop) (f : type1402 A) (s : A -> Prop) : (term1413 A y f s) = (term1413 A y f s).
Proof. exact (MK_COMB (@lem4920905 A) (@lem4920904 A y f s)). Qed.
Lemma lem4920909 {A : Type'} (y : A -> Prop) (f : type1402 A) (s : A -> Prop) : (term1414 A y f s) = (term1414 A y f s).
Proof. exact (eq_refl (term1414 A y f s)). Qed.
Lemma lem4920910 {A : Type'} (y : A -> Prop) (f : type1402 A) (s : A -> Prop) : ((term1415 A y f s) = (term1413 A y f s)) = ((term1415 A y f s) = (term1413 A y f s)).
Proof. exact (MK_COMB (@lem4920909 A y f s) (@lem4920906 A y f s)). Qed.
Lemma lem4920911 {A : Type'} (y : A -> Prop) (s : A -> Prop) : (term1416 A y s) = (term1416 A y s).
Proof. exact (fun_ext (fun f : type1402 A => @lem4920910 A y f s)). Qed.
Lemma lem4920912 {A : Type'} : (@all (A -> A -> Prop)) = (@all (A -> A -> Prop)).
Proof. exact (eq_refl (@all (A -> A -> Prop))). Qed.
Lemma lem4920913 {A : Type'} (y : A -> Prop) (s : A -> Prop) : (term1417 A y s) = (term1417 A y s).
Proof. exact (MK_COMB (@lem4920912 A) (@lem4920911 A y s)). Qed.
Lemma lem4920914 {A : Type'} (y : A -> Prop) : (term1418 A y) = (term1418 A y).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4920913 A y s)). Qed.
Lemma lem4920915 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4920916 {A : Type'} (y : A -> Prop) : (term1419 A y) = (term1419 A y).
Proof. exact (MK_COMB (@lem4920915 A) (@lem4920914 A y)). Qed.
Lemma lem4920917 {A : Type'} : (term1420 A) = (term1420 A).
Proof. exact (fun_ext (fun y : A -> Prop => @lem4920916 A y)). Qed.
Lemma lem4920918 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4920919 {A : Type'} : (term1327 A) = (term1327 A).
Proof. exact (MK_COMB (@lem4920918 A) (@lem4920917 A)). Qed.
Lemma lem4920920 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4920921 {A : Type'} : (term1343 A) = (term1343 A).
Proof. exact (MK_COMB (@lem4920920) (@lem4920919 A)). Qed.
Lemma lem4920922 {A B : Type'} : (term1345 A B) = (term1345 A B).
Proof. exact (MK_COMB (@lem4920921 A) (@lem4920898 A B)). Qed.
Lemma lem4920927 {B : Type'} (y : B) (f : B -> B) (x : B) (s : B -> Prop) : (term1421 B y f x s) = (term1421 B y f x s).
Proof. exact (eq_refl (term1421 B y f x s)). Qed.
Lemma lem4920928 {B : Type'} (y : B) (f : B -> B) (s : B -> Prop) : (term1422 B y f s) = (term1422 B y f s).
Proof. exact (fun_ext (fun x : B => @lem4920927 B y f x s)). Qed.
Lemma lem4920929 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem4920930 {B : Type'} (y : B) (f : B -> B) (s : B -> Prop) : (term1423 B y f s) = (term1423 B y f s).
Proof. exact (MK_COMB (@lem4920929 B) (@lem4920928 B y f s)). Qed.
Lemma lem4920933 {B : Type'} (y : B) (f : B -> B) (s : B -> Prop) : (term1424 B y f s) = (term1424 B y f s).
Proof. exact (eq_refl (term1424 B y f s)). Qed.
Lemma lem4920934 {B : Type'} (y : B) (f : B -> B) (s : B -> Prop) : ((term1425 B y f s) = (term1423 B y f s)) = ((term1425 B y f s) = (term1423 B y f s)).
Proof. exact (MK_COMB (@lem4920933 B y f s) (@lem4920930 B y f s)). Qed.
Lemma lem4920935 {B : Type'} (y : B) (s : B -> Prop) : (term1426 B y s) = (term1426 B y s).
Proof. exact (fun_ext (fun f : B -> B => @lem4920934 B y f s)). Qed.
Lemma lem4920936 {B : Type'} : (@all (B -> B)) = (@all (B -> B)).
Proof. exact (eq_refl (@all (B -> B))). Qed.
Lemma lem4920937 {B : Type'} (y : B) (s : B -> Prop) : (term1427 B y s) = (term1427 B y s).
Proof. exact (MK_COMB (@lem4920936 B) (@lem4920935 B y s)). Qed.
Lemma lem4920938 {B : Type'} (y : B) : (term1428 B y) = (term1428 B y).
Proof. exact (fun_ext (fun s : B -> Prop => @lem4920937 B y s)). Qed.
Lemma lem4920939 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4920940 {B : Type'} (y : B) : (term1429 B y) = (term1429 B y).
Proof. exact (MK_COMB (@lem4920939 B) (@lem4920938 B y)). Qed.
Lemma lem4920941 {B : Type'} : (term1430 B) = (term1430 B).
Proof. exact (fun_ext (fun y : B => @lem4920940 B y)). Qed.
Lemma lem4920942 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4920943 {B : Type'} : (term1323 B) = (term1323 B).
Proof. exact (MK_COMB (@lem4920942 B) (@lem4920941 B)). Qed.
Lemma lem4920944 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4920945 {B : Type'} : (term1346 B) = (term1346 B).
Proof. exact (MK_COMB (@lem4920944) (@lem4920943 B)). Qed.
Lemma lem4920946 {A B : Type'} : (term1348 A B) = (term1348 A B).
Proof. exact (MK_COMB (@lem4920945 B) (@lem4920922 A B)). Qed.
Lemma lem4920951 {A B : Type'} (y : B) (f : A -> B) (x : A) (s : A -> Prop) : (term1431 A B y f x s) = (term1431 A B y f x s).
Proof. exact (eq_refl (term1431 A B y f x s)). Qed.
Lemma lem4920952 {A B : Type'} (y : B) (f : A -> B) (s : A -> Prop) : (term1432 A B y f s) = (term1432 A B y f s).
Proof. exact (fun_ext (fun x : A => @lem4920951 A B y f x s)). Qed.
Lemma lem4920953 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem4920954 {A B : Type'} (y : B) (f : A -> B) (s : A -> Prop) : (term672 A B y f s) = (term672 A B y f s).
Proof. exact (MK_COMB (@lem4920953 A) (@lem4920952 A B y f s)). Qed.
Lemma lem4920957 {A B : Type'} (y : B) (f : A -> B) (s : A -> Prop) : (term1433 A B y f s) = (term1433 A B y f s).
Proof. exact (eq_refl (term1433 A B y f s)). Qed.
Lemma lem4920958 {A B : Type'} (y : B) (f : A -> B) (s : A -> Prop) : ((term671 A B y f s) = (term672 A B y f s)) = ((term671 A B y f s) = (term672 A B y f s)).
Proof. exact (MK_COMB (@lem4920957 A B y f s) (@lem4920954 A B y f s)). Qed.
Lemma lem4920959 {A B : Type'} (y : B) (s : A -> Prop) : (term1434 A B y s) = (term1434 A B y s).
Proof. exact (fun_ext (fun f : A -> B => @lem4920958 A B y f s)). Qed.
Lemma lem4920960 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem4920961 {A B : Type'} (y : B) (s : A -> Prop) : (term669 A B y s) = (term669 A B y s).
Proof. exact (MK_COMB (@lem4920960 A B) (@lem4920959 A B y s)). Qed.
Lemma lem4920962 {A B : Type'} (y : B) : (term1435 A B y) = (term1435 A B y).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4920961 A B y s)). Qed.
Lemma lem4920963 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4920964 {A B : Type'} (y : B) : (term667 A B y) = (term667 A B y).
Proof. exact (MK_COMB (@lem4920963 A) (@lem4920962 A B y)). Qed.
Lemma lem4920965 {A B : Type'} : (term1436 A B) = (term1436 A B).
Proof. exact (fun_ext (fun y : B => @lem4920964 A B y)). Qed.
Lemma lem4920966 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4920967 {A B : Type'} : (term1324 A B) = (term1324 A B).
Proof. exact (MK_COMB (@lem4920966 B) (@lem4920965 A B)). Qed.
Lemma lem4920968 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4920969 {A B : Type'} : (term1349 A B) = (term1349 A B).
Proof. exact (MK_COMB (@lem4920968) (@lem4920967 A B)). Qed.
Lemma lem4920970 {A B : Type'} : (term1351 A B) = (term1351 A B).
Proof. exact (MK_COMB (@lem4920969 A B) (@lem4920946 A B)). Qed.
Lemma lem4920975 {A : Type'} (y : A) (f : A -> A) (x : A) (s : A -> Prop) : (term1421 A y f x s) = (term1421 A y f x s).
Proof. exact (eq_refl (term1421 A y f x s)). Qed.
Lemma lem4920976 {A : Type'} (y : A) (f : A -> A) (s : A -> Prop) : (term1422 A y f s) = (term1422 A y f s).
Proof. exact (fun_ext (fun x : A => @lem4920975 A y f x s)). Qed.
Lemma lem4920977 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem4920978 {A : Type'} (y : A) (f : A -> A) (s : A -> Prop) : (term1423 A y f s) = (term1423 A y f s).
Proof. exact (MK_COMB (@lem4920977 A) (@lem4920976 A y f s)). Qed.
Lemma lem4920981 {A : Type'} (y : A) (f : A -> A) (s : A -> Prop) : (term1424 A y f s) = (term1424 A y f s).
Proof. exact (eq_refl (term1424 A y f s)). Qed.
Lemma lem4920982 {A : Type'} (y : A) (f : A -> A) (s : A -> Prop) : ((term1425 A y f s) = (term1423 A y f s)) = ((term1425 A y f s) = (term1423 A y f s)).
Proof. exact (MK_COMB (@lem4920981 A y f s) (@lem4920978 A y f s)). Qed.
Lemma lem4920983 {A : Type'} (y : A) (s : A -> Prop) : (term1426 A y s) = (term1426 A y s).
Proof. exact (fun_ext (fun f : A -> A => @lem4920982 A y f s)). Qed.
Lemma lem4920984 {A : Type'} : (@all (A -> A)) = (@all (A -> A)).
Proof. exact (eq_refl (@all (A -> A))). Qed.
Lemma lem4920985 {A : Type'} (y : A) (s : A -> Prop) : (term1427 A y s) = (term1427 A y s).
Proof. exact (MK_COMB (@lem4920984 A) (@lem4920983 A y s)). Qed.
Lemma lem4920986 {A : Type'} (y : A) : (term1428 A y) = (term1428 A y).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4920985 A y s)). Qed.
Lemma lem4920987 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4920988 {A : Type'} (y : A) : (term1429 A y) = (term1429 A y).
Proof. exact (MK_COMB (@lem4920987 A) (@lem4920986 A y)). Qed.
Lemma lem4920989 {A : Type'} : (term1430 A) = (term1430 A).
Proof. exact (fun_ext (fun y : A => @lem4920988 A y)). Qed.
Lemma lem4920990 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4920991 {A : Type'} : (term1323 A) = (term1323 A).
Proof. exact (MK_COMB (@lem4920990 A) (@lem4920989 A)). Qed.
Lemma lem4920992 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4920993 {A : Type'} : (term1346 A) = (term1346 A).
Proof. exact (MK_COMB (@lem4920992) (@lem4920991 A)). Qed.
Lemma lem4920994 {A B : Type'} : (term1353 A B) = (term1353 A B).
Proof. exact (MK_COMB (@lem4920993 A) (@lem4920970 A B)). Qed.
Lemma lem4920999 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) (y : B) : (term786 A B s f x y) = (term786 A B s f x y).
Proof. exact (eq_refl (term786 A B s f x y)). Qed.
Lemma lem4921000 {A B : Type'} (s : A -> Prop) (f : A -> B) (y : B) : (term787 A B s f y) = (term787 A B s f y).
Proof. exact (fun_ext (fun x : A => @lem4920999 A B s f x y)). Qed.
Lemma lem4921001 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem4921002 {A B : Type'} (s : A -> Prop) (f : A -> B) (y : B) : (term788 A B s f y) = (term788 A B s f y).
Proof. exact (MK_COMB (@lem4921001 A) (@lem4921000 A B s f y)). Qed.
Lemma lem4921005 {A B : Type'} (f : A -> B) (s : A -> Prop) (t : B -> Prop) : (term1437 A B f s t) = (term1437 A B f s t).
Proof. exact (eq_refl (term1437 A B f s t)). Qed.
Lemma lem4921006 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (f : A -> B) (y : B) : (term1319 A B t s f y) = (term1319 A B t s f y).
Proof. exact (MK_COMB (@lem4921005 A B f s t) (@lem4921002 A B s f y)). Qed.
Lemma lem4921007 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem4921008 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (f : A -> B) (y : B) : (term1321 A B t s f y) = (term1321 A B t s f y).
Proof. exact (MK_COMB (@lem4921007) (@lem4921006 A B t s f y)). Qed.
Lemma lem4921009 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4921010 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (f : A -> B) (y : B) : (term1354 A B t s f y) = (term1354 A B t s f y).
Proof. exact (MK_COMB (@lem4921009) (@lem4921008 A B t s f y)). Qed.
Lemma lem4921011 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (f : A -> B) (y : B) : (term1356 A B t s f y) = (term1356 A B t s f y).
Proof. exact (MK_COMB (@lem4921010 A B t s f y) (@lem4920994 A B)). Qed.
Lemma lem4921014 {B : Type'} (y : B) (t : B -> Prop) : (term729 B y t) = (term729 B y t).
Proof. exact (eq_refl (term729 B y t)). Qed.
Lemma lem4921015 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (f : A -> B) (y : B) : (term1358 A B t s f y) = (term1358 A B t s f y).
Proof. exact (MK_COMB (@lem4921014 B y t) (@lem4921011 A B t s f y)). Qed.
Lemma lem4921028 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) (y : A) : (term1438 A B s f x y) = (term1438 A B s f x y).
Proof. exact (eq_refl (term1438 A B s f x y)). Qed.
Lemma lem4921029 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) : (term1439 A B s f x) = (term1439 A B s f x).
Proof. exact (fun_ext (fun y : A => @lem4921028 A B s f x y)). Qed.
Lemma lem4921030 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4921031 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) : (term1440 A B s f x) = (term1440 A B s f x).
Proof. exact (MK_COMB (@lem4921030 A) (@lem4921029 A B s f x)). Qed.
Lemma lem4921032 {A B : Type'} (s : A -> Prop) (f : A -> B) : (term1441 A B s f) = (term1441 A B s f).
Proof. exact (fun_ext (fun x : A => @lem4921031 A B s f x)). Qed.
Lemma lem4921033 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4921034 {A B : Type'} (s : A -> Prop) (f : A -> B) : (term696 A B s f) = (term696 A B s f).
Proof. exact (MK_COMB (@lem4921033 A) (@lem4921032 A B s f)). Qed.
Lemma lem4921035 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4921036 {A B : Type'} (s : A -> Prop) (f : A -> B) : (term1359 A B s f) = (term1359 A B s f).
Proof. exact (MK_COMB (@lem4921035) (@lem4921034 A B s f)). Qed.
Lemma lem4921037 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (f : A -> B) (y : B) : (term1361 A B t s f y) = (term1361 A B t s f y).
Proof. exact (MK_COMB (@lem4921036 A B s f) (@lem4921015 A B t s f y)). Qed.
Lemma lem4921040 {A B : Type'} (f : A -> B) (s : A -> Prop) (t : B -> Prop) : (term756 A B f s t) = (term756 A B f s t).
Proof. exact (eq_refl (term756 A B f s t)). Qed.
Lemma lem4921041 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (f : A -> B) (y : B) : (term1363 A B t s f y) = (term1363 A B t s f y).
Proof. exact (MK_COMB (@lem4921040 A B f s t) (@lem4921037 A B t s f y)). Qed.
Lemma lem4921044 {A B : Type'} (s : A -> Prop) (t : B -> Prop) : (term759 A B s t) = (term759 A B s t).
Proof. exact (eq_refl (term759 A B s t)). Qed.
Lemma lem4921045 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (f : A -> B) (y : B) : (term1365 A B t s f y) = (term1365 A B t s f y).
Proof. exact (MK_COMB (@lem4921044 A B s t) (@lem4921041 A B t s f y)). Qed.
Lemma lem4921048 {B : Type'} (t : B -> Prop) : (term762 B t) = (term762 B t).
Proof. exact (eq_refl (term762 B t)). Qed.
Lemma lem4921049 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (f : A -> B) (y : B) : (term1367 A B t s f y) = (term1367 A B t s f y).
Proof. exact (MK_COMB (@lem4921048 B t) (@lem4921045 A B t s f y)). Qed.
Lemma lem4921052 {A : Type'} (s : A -> Prop) : (term762 A s) = (term762 A s).
Proof. exact (eq_refl (term762 A s)). Qed.
Lemma lem4921053 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (f : A -> B) (y : B) : (term1368 A B t s f y) = (term1368 A B t s f y).
Proof. exact (MK_COMB (@lem4921052 A s) (@lem4921049 A B t s f y)). Qed.
Lemma lem4921054 {A B : Type'} (s : A -> Prop) (f : A -> B) (y : B) : (term1370 A B s f y) = (term1370 A B s f y).
Proof. exact (fun_ext (fun t : B -> Prop => @lem4921053 A B t s f y)). Qed.
Lemma lem4921055 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4921056 {A B : Type'} (s : A -> Prop) (f : A -> B) (y : B) : (term1372 A B s f y) = (term1372 A B s f y).
Proof. exact (MK_COMB (@lem4921055 B) (@lem4921054 A B s f y)). Qed.
Lemma lem4921057 {A B : Type'} (f : A -> B) (y : B) : (term1374 A B f y) = (term1374 A B f y).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4921056 A B s f y)). Qed.
Lemma lem4921058 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4921059 {A B : Type'} (f : A -> B) (y : B) : (term1376 A B f y) = (term1376 A B f y).
Proof. exact (MK_COMB (@lem4921058 A) (@lem4921057 A B f y)). Qed.
Lemma lem4921060 {A B : Type'} (y : B) : (term1378 A B y) = (term1378 A B y).
Proof. exact (fun_ext (fun f : A -> B => @lem4921059 A B f y)). Qed.
Lemma lem4921061 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem4921062 {A B : Type'} (y : B) : (term1380 A B y) = (term1380 A B y).
Proof. exact (MK_COMB (@lem4921061 A B) (@lem4921060 A B y)). Qed.
Lemma lem4921063 {A B : Type'} : (term1382 A B) = (term1382 A B).
Proof. exact (fun_ext (fun y : B => @lem4921062 A B y)). Qed.
Lemma lem4921064 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4921065 {A B : Type'} : (term1384 A B) = (term1384 A B).
Proof. exact (MK_COMB (@lem4921064 B) (@lem4921063 A B)). Qed.
Lemma lem4921340 {A B : Type'} : (term1383 A B) = (term1384 A B).
Proof. exact (TRANS (@lem4920809 A B) (@lem4921065 A B)). Qed.
Lemma lem4921341 {A B : Type'} : (term1384 A B) = (term1383 A B).
Proof. exact (SYM (@lem4921340 A B)). Qed.
Lemma lem4921348 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (f : A -> B) (y : B) (h1 : term1321 A B t s f y) : term1321 A B t s f y.
Proof. exact (h1). Qed.
Lemma lem4921349 {A : Type'} (h1 : term1323 A) : term1323 A.
Proof. exact (h1). Qed.
Lemma lem4921350 {A B : Type'} (h1 : term1324 A B) : term1324 A B.
Proof. exact (h1). Qed.
Lemma lem4921351 {B : Type'} (h1 : term1323 B) : term1323 B.
Proof. exact (h1). Qed.
Lemma lem4921352 {A : Type'} (h1 : term1327 A) : term1327 A.
Proof. exact (h1). Qed.
Lemma lem4921353 {A B : Type'} (h1 : term1326 A B) : term1326 A B.
Proof. exact (h1). Qed.
Lemma lem4921354 {A : Type'} (h1 : term1325 A) : term1325 A.
Proof. exact (h1). Qed.
Lemma lem4921355 {A : Type'} (h1 : term1322 A) : term1322 A.
Proof. exact (h1). Qed.
Lemma lem4921356 {B : Type'} (h1 : term1322 B) : term1322 B.
Proof. exact (h1). Qed.
Lemma lem4921468 {B : Type'} (y : B) (t : B -> Prop) (h1 : @IN B y t) : @IN B y t.
Proof. exact (h1). Qed.
Lemma lem4921476 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) (y : B) : (term1442 A B s f x y) = (term1443 A B s f x y).
Proof. exact (@lem17045 (@IN A x s) ((f x) = y)). Qed.
Lemma lem4921477 {A : Type'} (P : A -> Prop) : (term847 A P) = (term848 A P).
Proof. exact (@lem18394 A P). Qed.
Lemma lem4921478 {A B : Type'} (s : A -> Prop) (f : A -> B) (y : B) : (term1444 A B s f y) = (term1445 A B s f y).
Proof. exact (@lem4921477 A (term787 A B s f y)). Qed.
Lemma lem4921479 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) (y : B) : (term802 A B s f y x) = (term786 A B s f x y).
Proof. exact (eq_refl (term802 A B s f y x)). Qed.
Lemma lem4921480 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem4921481 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) (y : B) : (term1446 A B s f y x) = (term1442 A B s f x y).
Proof. exact (MK_COMB (@lem4921480) (@lem4921479 A B s f x y)). Qed.
Lemma lem4921482 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) (y : B) : (term1446 A B s f y x) = (term1443 A B s f x y).
Proof. exact (TRANS (@lem4921481 A B s f x y) (@lem4921476 A B s f x y)). Qed.
Lemma lem4921483 {A B : Type'} (s : A -> Prop) (f : A -> B) (y : B) : (term1447 A B s f y) = (term1448 A B s f y).
Proof. exact (fun_ext (fun x : A => @lem4921482 A B s f x y)). Qed.
Lemma lem4921484 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4921485 {A B : Type'} (s : A -> Prop) (f : A -> B) (y : B) : (term1445 A B s f y) = (term1449 A B s f y).
Proof. exact (MK_COMB (@lem4921484 A) (@lem4921483 A B s f y)). Qed.
Lemma lem4921486 {A B : Type'} (s : A -> Prop) (f : A -> B) (y : B) : (term1444 A B s f y) = (term1449 A B s f y).
Proof. exact (TRANS (@lem4921478 A B s f y) (@lem4921485 A B s f y)). Qed.
Lemma lem4921488 {A B : Type'} (f : A -> B) (s : A -> Prop) (t : B -> Prop) : (term1450 A B f s t) = (term1450 A B f s t).
Proof. exact (eq_refl (term1450 A B f s t)). Qed.
Lemma lem4921489 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (f : A -> B) (y : B) : (term1451 A B t s f y) = (term1452 A B t s f y).
Proof. exact (MK_COMB (@lem4921488 A B f s t) (@lem4921486 A B s f y)). Qed.
Lemma lem4921490 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (f : A -> B) (y : B) : (term1321 A B t s f y) = (term1451 A B t s f y).
Proof. exact (@lem17362 ((@IMAGE A B f s) = t) (term788 A B s f y)). Qed.
Lemma lem4921543 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (f : A -> B) (y : B) : (term1321 A B t s f y) = (term1452 A B t s f y).
Proof. exact (TRANS (@lem4921490 A B t s f y) (@lem4921489 A B t s f y)). Qed.
Lemma lem4921544 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (f : A -> B) (y : B) (h1 : term1321 A B t s f y) : term1452 A B t s f y.
Proof. exact (EQ_MP (@lem4921543 A B t s f y) (@lem4921348 A B t s f y h1)). Qed.
Lemma lem4921555 {A : Type'} (y : A) (f : A -> A) (x : A) (s : A -> Prop) : (term1453 A y f x s) = (term1454 A y f x s).
Proof. exact (@lem17045 (y = (f x)) (@IN A x s)). Qed.
Lemma lem4921558 {A : Type'} (y : A) (f : A -> A) (x : A) (s : A -> Prop) : (term1421 A y f x s) = (term1421 A y f x s).
Proof. exact (eq_refl (term1421 A y f x s)). Qed.
Lemma lem4921559 {A : Type'} (P : A -> Prop) : (term847 A P) = (term848 A P).
Proof. exact (@lem18394 A P). Qed.
Lemma lem4921560 {A : Type'} (y : A) (f : A -> A) (s : A -> Prop) : (term1455 A y f s) = (term1456 A y f s).
Proof. exact (@lem4921559 A (term1422 A y f s)). Qed.
Lemma lem4921561 {A : Type'} (y : A) (f : A -> A) (x : A) (s : A -> Prop) : (term1457 A y f s x) = (term1421 A y f x s).
Proof. exact (eq_refl (term1457 A y f s x)). Qed.
Lemma lem4921562 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem4921563 {A : Type'} (y : A) (f : A -> A) (x : A) (s : A -> Prop) : (term1458 A y f s x) = (term1453 A y f x s).
Proof. exact (MK_COMB (@lem4921562) (@lem4921561 A y f x s)). Qed.
Lemma lem4921564 {A : Type'} (y : A) (f : A -> A) (x : A) (s : A -> Prop) : (term1458 A y f s x) = (term1454 A y f x s).
Proof. exact (TRANS (@lem4921563 A y f x s) (@lem4921555 A y f x s)). Qed.
Lemma lem4921565 {A : Type'} (y : A) (f : A -> A) (s : A -> Prop) : (term1459 A y f s) = (term1460 A y f s).
Proof. exact (fun_ext (fun x : A => @lem4921564 A y f x s)). Qed.
Lemma lem4921566 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4921567 {A : Type'} (y : A) (f : A -> A) (s : A -> Prop) : (term1456 A y f s) = (term1461 A y f s).
Proof. exact (MK_COMB (@lem4921566 A) (@lem4921565 A y f s)). Qed.
Lemma lem4921568 {A : Type'} (y : A) (f : A -> A) (s : A -> Prop) : (term1455 A y f s) = (term1461 A y f s).
Proof. exact (TRANS (@lem4921560 A y f s) (@lem4921567 A y f s)). Qed.
Lemma lem4921569 {A : Type'} (y : A) (f : A -> A) (s : A -> Prop) : (term1422 A y f s) = (term1422 A y f s).
Proof. exact (fun_ext (fun x : A => @lem4921558 A y f x s)). Qed.
Lemma lem4921570 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem4921571 {A : Type'} (y : A) (f : A -> A) (s : A -> Prop) : (term1423 A y f s) = (term1423 A y f s).
Proof. exact (MK_COMB (@lem4921570 A) (@lem4921569 A y f s)). Qed.
Lemma lem4921573 {A : Type'} (y : A) (f : A -> A) (s : A -> Prop) : (term1462 A y f s) = (term1462 A y f s).
Proof. exact (eq_refl (term1462 A y f s)). Qed.
Lemma lem4921574 {A : Type'} (y : A) (f : A -> A) (s : A -> Prop) : (term1463 A y f s) = (term1463 A y f s).
Proof. exact (MK_COMB (@lem4921573 A y f s) (@lem4921571 A y f s)). Qed.
Lemma lem4921576 {A : Type'} (y : A) (f : A -> A) (s : A -> Prop) : (term1464 A y f s) = (term1464 A y f s).
Proof. exact (eq_refl (term1464 A y f s)). Qed.
Lemma lem4921577 {A : Type'} (y : A) (f : A -> A) (s : A -> Prop) : (term1465 A y f s) = (term1466 A y f s).
Proof. exact (MK_COMB (@lem4921576 A y f s) (@lem4921568 A y f s)). Qed.
Lemma lem4921578 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4921579 {A : Type'} (y : A) (f : A -> A) (s : A -> Prop) : (term1467 A y f s) = (term1468 A y f s).
Proof. exact (MK_COMB (@lem4921578) (@lem4921577 A y f s)). Qed.
Lemma lem4921580 {A : Type'} (y : A) (f : A -> A) (s : A -> Prop) : (term1469 A y f s) = (term1470 A y f s).
Proof. exact (MK_COMB (@lem4921579 A y f s) (@lem4921574 A y f s)). Qed.
Lemma lem4921581 {A : Type'} (y : A) (f : A -> A) (s : A -> Prop) : ((term1425 A y f s) = (term1423 A y f s)) = (term1469 A y f s).
Proof. exact (@lem17784 (term1425 A y f s) (term1423 A y f s)). Qed.
Lemma lem4921582 {A : Type'} (y : A) (f : A -> A) (s : A -> Prop) : ((term1425 A y f s) = (term1423 A y f s)) = (term1470 A y f s).
Proof. exact (TRANS (@lem4921581 A y f s) (@lem4921580 A y f s)). Qed.
Lemma lem4921583 {A : Type'} (y : A) (s : A -> Prop) : (term1426 A y s) = (term1471 A y s).
Proof. exact (fun_ext (fun f : A -> A => @lem4921582 A y f s)). Qed.
Lemma lem4921584 {A : Type'} : (@all (A -> A)) = (@all (A -> A)).
Proof. exact (eq_refl (@all (A -> A))). Qed.
Lemma lem4921585 {A : Type'} (y : A) (s : A -> Prop) : (term1427 A y s) = (term1472 A y s).
Proof. exact (MK_COMB (@lem4921584 A) (@lem4921583 A y s)). Qed.
Lemma lem4921586 {A : Type'} (y : A) : (term1428 A y) = (term1473 A y).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4921585 A y s)). Qed.
Lemma lem4921587 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4921588 {A : Type'} (y : A) : (term1429 A y) = (term1474 A y).
Proof. exact (MK_COMB (@lem4921587 A) (@lem4921586 A y)). Qed.
Lemma lem4921589 {A : Type'} : (term1430 A) = (term1475 A).
Proof. exact (fun_ext (fun y : A => @lem4921588 A y)). Qed.
Lemma lem4921590 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4921591 {A : Type'} : (term1323 A) = (term1476 A).
Proof. exact (MK_COMB (@lem4921590 A) (@lem4921589 A)). Qed.
Lemma lem4921601 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term1130 A P Q) = (term1131 A P Q).
Proof. exact (EQ_MP (@lem18953 A P Q) (@lem18952 A P Q)). Qed.
Lemma lem4921602 {A : Type'} (P : type488 A) (Q : type488 A) : (term1477 A P Q) = (term1478 A P Q).
Proof. exact (@lem4921601 (A -> A) P Q). Qed.
Lemma lem4921603 {A : Type'} (y : A) (s : A -> Prop) : (term1479 A y s) = (term1480 A y s).
Proof. exact (@lem4921602 A (term1481 A y s) (term1482 A y s)). Qed.
Lemma lem4921604 {A : Type'} (y : A) (f : A -> A) (s : A -> Prop) : (term1483 A y s f) = (term1466 A y f s).
Proof. exact (eq_refl (term1483 A y s f)). Qed.
Lemma lem4921605 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4921606 {A : Type'} (y : A) (f : A -> A) (s : A -> Prop) : (term1484 A y s f) = (term1468 A y f s).
Proof. exact (MK_COMB (@lem4921605) (@lem4921604 A y f s)). Qed.
Lemma lem4921607 {A : Type'} (y : A) (f : A -> A) (s : A -> Prop) : (term1485 A y s f) = (term1463 A y f s).
Proof. exact (eq_refl (term1485 A y s f)). Qed.
Lemma lem4921608 {A : Type'} (y : A) (f : A -> A) (s : A -> Prop) : (term1486 A y s f) = (term1470 A y f s).
Proof. exact (MK_COMB (@lem4921606 A y f s) (@lem4921607 A y f s)). Qed.
Lemma lem4921609 {A : Type'} (y : A) (s : A -> Prop) : (term1487 A y s) = (term1471 A y s).
Proof. exact (fun_ext (fun f : A -> A => @lem4921608 A y f s)). Qed.
Lemma lem4921610 {A : Type'} : (@all (A -> A)) = (@all (A -> A)).
Proof. exact (eq_refl (@all (A -> A))). Qed.
Lemma lem4921611 {A : Type'} (y : A) (s : A -> Prop) : (term1479 A y s) = (term1472 A y s).
Proof. exact (MK_COMB (@lem4921610 A) (@lem4921609 A y s)). Qed.
Lemma lem4921612 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4921613 {A : Type'} (y : A) (s : A -> Prop) : (term1488 A y s) = (term1489 A y s).
Proof. exact (MK_COMB (@lem4921612) (@lem4921611 A y s)). Qed.
Lemma lem4921614 {A : Type'} (y : A) (f : A -> A) (s : A -> Prop) : (term1483 A y s f) = (term1466 A y f s).
Proof. exact (eq_refl (term1483 A y s f)). Qed.
Lemma lem4921615 {A : Type'} (y : A) (s : A -> Prop) : (term1490 A y s) = (term1481 A y s).
Proof. exact (fun_ext (fun f : A -> A => @lem4921614 A y f s)). Qed.
Lemma lem4921616 {A : Type'} : (@all (A -> A)) = (@all (A -> A)).
Proof. exact (eq_refl (@all (A -> A))). Qed.
Lemma lem4921617 {A : Type'} (y : A) (s : A -> Prop) : (term1491 A y s) = (term1492 A y s).
Proof. exact (MK_COMB (@lem4921616 A) (@lem4921615 A y s)). Qed.
Lemma lem4921618 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4921619 {A : Type'} (y : A) (s : A -> Prop) : (term1493 A y s) = (term1494 A y s).
Proof. exact (MK_COMB (@lem4921618) (@lem4921617 A y s)). Qed.
Lemma lem4921620 {A : Type'} (y : A) (f : A -> A) (s : A -> Prop) : (term1485 A y s f) = (term1463 A y f s).
Proof. exact (eq_refl (term1485 A y s f)). Qed.
Lemma lem4921621 {A : Type'} (y : A) (s : A -> Prop) : (term1495 A y s) = (term1482 A y s).
Proof. exact (fun_ext (fun f : A -> A => @lem4921620 A y f s)). Qed.
Lemma lem4921622 {A : Type'} : (@all (A -> A)) = (@all (A -> A)).
Proof. exact (eq_refl (@all (A -> A))). Qed.
Lemma lem4921623 {A : Type'} (y : A) (s : A -> Prop) : (term1496 A y s) = (term1497 A y s).
Proof. exact (MK_COMB (@lem4921622 A) (@lem4921621 A y s)). Qed.
Lemma lem4921624 {A : Type'} (y : A) (s : A -> Prop) : (term1480 A y s) = (term1498 A y s).
Proof. exact (MK_COMB (@lem4921619 A y s) (@lem4921623 A y s)). Qed.
Lemma lem4921625 {A : Type'} (y : A) (s : A -> Prop) : ((term1479 A y s) = (term1480 A y s)) = ((term1472 A y s) = (term1498 A y s)).
Proof. exact (MK_COMB (@lem4921613 A y s) (@lem4921624 A y s)). Qed.
Lemma lem4921626 {A : Type'} (y : A) (s : A -> Prop) : (term1472 A y s) = (term1498 A y s).
Proof. exact (EQ_MP (@lem4921625 A y s) (@lem4921603 A y s)). Qed.
Lemma lem4921819 {A : Type'} (y : A) : (term1473 A y) = (term1499 A y).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4921626 A y s)). Qed.
Lemma lem4921820 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4921821 {A : Type'} (y : A) : (term1474 A y) = (term1500 A y).
Proof. exact (MK_COMB (@lem4921820 A) (@lem4921819 A y)). Qed.
Lemma lem4921823 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term1130 A P Q) = (term1131 A P Q).
Proof. exact (EQ_MP (@lem18953 A P Q) (@lem18952 A P Q)). Qed.
Lemma lem4921824 {A : Type'} (P : type686 A) (Q : type686 A) : (term1132 A P Q) = (term1133 A P Q).
Proof. exact (@lem4921823 (A -> Prop) P Q). Qed.
Lemma lem4921825 {A : Type'} (y : A) : (term1501 A y) = (term1502 A y).
Proof. exact (@lem4921824 A (term1503 A y) (term1504 A y)). Qed.
Lemma lem4921826 {A : Type'} (y : A) (s : A -> Prop) : (term1505 A y s) = (term1492 A y s).
Proof. exact (eq_refl (term1505 A y s)). Qed.
Lemma lem4921827 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4921828 {A : Type'} (y : A) (s : A -> Prop) : (term1506 A y s) = (term1494 A y s).
Proof. exact (MK_COMB (@lem4921827) (@lem4921826 A y s)). Qed.
Lemma lem4921829 {A : Type'} (y : A) (s : A -> Prop) : (term1507 A y s) = (term1497 A y s).
Proof. exact (eq_refl (term1507 A y s)). Qed.
Lemma lem4921830 {A : Type'} (y : A) (s : A -> Prop) : (term1508 A y s) = (term1498 A y s).
Proof. exact (MK_COMB (@lem4921828 A y s) (@lem4921829 A y s)). Qed.
Lemma lem4921831 {A : Type'} (y : A) : (term1509 A y) = (term1499 A y).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4921830 A y s)). Qed.
Lemma lem4921832 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4921833 {A : Type'} (y : A) : (term1501 A y) = (term1500 A y).
Proof. exact (MK_COMB (@lem4921832 A) (@lem4921831 A y)). Qed.
Lemma lem4921834 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4921835 {A : Type'} (y : A) : (term1510 A y) = (term1511 A y).
Proof. exact (MK_COMB (@lem4921834) (@lem4921833 A y)). Qed.
Lemma lem4921836 {A : Type'} (y : A) (s : A -> Prop) : (term1505 A y s) = (term1492 A y s).
Proof. exact (eq_refl (term1505 A y s)). Qed.
Lemma lem4921837 {A : Type'} (y : A) : (term1512 A y) = (term1503 A y).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4921836 A y s)). Qed.
Lemma lem4921838 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4921839 {A : Type'} (y : A) : (term1513 A y) = (term1514 A y).
Proof. exact (MK_COMB (@lem4921838 A) (@lem4921837 A y)). Qed.
Lemma lem4921840 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4921841 {A : Type'} (y : A) : (term1515 A y) = (term1516 A y).
Proof. exact (MK_COMB (@lem4921840) (@lem4921839 A y)). Qed.
Lemma lem4921842 {A : Type'} (y : A) (s : A -> Prop) : (term1507 A y s) = (term1497 A y s).
Proof. exact (eq_refl (term1507 A y s)). Qed.
Lemma lem4921843 {A : Type'} (y : A) : (term1517 A y) = (term1504 A y).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4921842 A y s)). Qed.
Lemma lem4921844 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4921845 {A : Type'} (y : A) : (term1518 A y) = (term1519 A y).
Proof. exact (MK_COMB (@lem4921844 A) (@lem4921843 A y)). Qed.
Lemma lem4921846 {A : Type'} (y : A) : (term1502 A y) = (term1520 A y).
Proof. exact (MK_COMB (@lem4921841 A y) (@lem4921845 A y)). Qed.
Lemma lem4921847 {A : Type'} (y : A) : ((term1501 A y) = (term1502 A y)) = ((term1500 A y) = (term1520 A y)).
Proof. exact (MK_COMB (@lem4921835 A y) (@lem4921846 A y)). Qed.
Lemma lem4921848 {A : Type'} (y : A) : (term1500 A y) = (term1520 A y).
Proof. exact (EQ_MP (@lem4921847 A y) (@lem4921825 A y)). Qed.
Lemma lem4922049 {A : Type'} (y : A) : (term1474 A y) = (term1520 A y).
Proof. exact (TRANS (@lem4921821 A y) (@lem4921848 A y)). Qed.
Lemma lem4922050 {A : Type'} : (term1475 A) = (term1521 A).
Proof. exact (fun_ext (fun y : A => @lem4922049 A y)). Qed.
Lemma lem4922051 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4922052 {A : Type'} : (term1476 A) = (term1522 A).
Proof. exact (MK_COMB (@lem4922051 A) (@lem4922050 A)). Qed.
Lemma lem4922054 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term1130 A P Q) = (term1131 A P Q).
Proof. exact (EQ_MP (@lem18953 A P Q) (@lem18952 A P Q)). Qed.
Lemma lem4922055 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term1130 A P Q) = (term1131 A P Q).
Proof. exact (@lem4922054 A P Q). Qed.
Lemma lem4922056 {A : Type'} : (term1523 A) = (term1524 A).
Proof. exact (@lem4922055 A (term1525 A) (term1526 A)). Qed.
Lemma lem4922057 {A : Type'} (y : A) : (term1527 A y) = (term1514 A y).
Proof. exact (eq_refl (term1527 A y)). Qed.
Lemma lem4922058 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4922059 {A : Type'} (y : A) : (term1528 A y) = (term1516 A y).
Proof. exact (MK_COMB (@lem4922058) (@lem4922057 A y)). Qed.
Lemma lem4922060 {A : Type'} (y : A) : (term1529 A y) = (term1519 A y).
Proof. exact (eq_refl (term1529 A y)). Qed.
Lemma lem4922061 {A : Type'} (y : A) : (term1530 A y) = (term1520 A y).
Proof. exact (MK_COMB (@lem4922059 A y) (@lem4922060 A y)). Qed.
Lemma lem4922062 {A : Type'} : (term1531 A) = (term1521 A).
Proof. exact (fun_ext (fun y : A => @lem4922061 A y)). Qed.
Lemma lem4922063 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4922064 {A : Type'} : (term1523 A) = (term1522 A).
Proof. exact (MK_COMB (@lem4922063 A) (@lem4922062 A)). Qed.
Lemma lem4922065 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4922066 {A : Type'} : (term1532 A) = (term1533 A).
Proof. exact (MK_COMB (@lem4922065) (@lem4922064 A)). Qed.
Lemma lem4922067 {A : Type'} (y : A) : (term1527 A y) = (term1514 A y).
Proof. exact (eq_refl (term1527 A y)). Qed.
Lemma lem4922068 {A : Type'} : (term1534 A) = (term1525 A).
Proof. exact (fun_ext (fun y : A => @lem4922067 A y)). Qed.
Lemma lem4922069 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4922070 {A : Type'} : (term1535 A) = (term1536 A).
Proof. exact (MK_COMB (@lem4922069 A) (@lem4922068 A)). Qed.
Lemma lem4922071 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4922072 {A : Type'} : (term1537 A) = (term1538 A).
Proof. exact (MK_COMB (@lem4922071) (@lem4922070 A)). Qed.
Lemma lem4922073 {A : Type'} (y : A) : (term1529 A y) = (term1519 A y).
Proof. exact (eq_refl (term1529 A y)). Qed.
Lemma lem4922074 {A : Type'} : (term1539 A) = (term1526 A).
Proof. exact (fun_ext (fun y : A => @lem4922073 A y)). Qed.
Lemma lem4922075 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4922076 {A : Type'} : (term1540 A) = (term1541 A).
Proof. exact (MK_COMB (@lem4922075 A) (@lem4922074 A)). Qed.
Lemma lem4922077 {A : Type'} : (term1524 A) = (term1542 A).
Proof. exact (MK_COMB (@lem4922072 A) (@lem4922076 A)). Qed.
Lemma lem4922078 {A : Type'} : ((term1523 A) = (term1524 A)) = ((term1522 A) = (term1542 A)).
Proof. exact (MK_COMB (@lem4922066 A) (@lem4922077 A)). Qed.
Lemma lem4922079 {A : Type'} : (term1522 A) = (term1542 A).
Proof. exact (EQ_MP (@lem4922078 A) (@lem4922056 A)). Qed.
Lemma lem4922288 {A : Type'} : (term1476 A) = (term1542 A).
Proof. exact (TRANS (@lem4922052 A) (@lem4922079 A)). Qed.
Lemma lem4922290 {A : Type'} (P : Prop) (Q : A -> Prop) : (term797 A P Q) = (term798 A P Q).
Proof. exact (EQ_MP (@lem18911 A P Q) (@lem18910 A P Q)). Qed.
Lemma lem4922291 {A : Type'} (P : Prop) (Q : A -> Prop) : (term797 A P Q) = (term798 A P Q).
Proof. exact (@lem4922290 A P Q). Qed.
Lemma lem4922292 {A : Type'} (y : A) (f : A -> A) (s : A -> Prop) : (term1543 A y f s) = (term1544 A y f s).
Proof. exact (@lem4922291 A (term1545 A y f s) (term1422 A y f s)). Qed.
Lemma lem4922293 {A : Type'} (y : A) (f : A -> A) (x : A) (s : A -> Prop) : (term1457 A y f s x) = (term1421 A y f x s).
Proof. exact (eq_refl (term1457 A y f s x)). Qed.
Lemma lem4922294 {A : Type'} (y : A) (f : A -> A) (s : A -> Prop) : (term1546 A y f s) = (term1422 A y f s).
Proof. exact (fun_ext (fun x : A => @lem4922293 A y f x s)). Qed.
Lemma lem4922295 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem4922296 {A : Type'} (y : A) (f : A -> A) (s : A -> Prop) : (term1547 A y f s) = (term1423 A y f s).
Proof. exact (MK_COMB (@lem4922295 A) (@lem4922294 A y f s)). Qed.
Lemma lem4922297 {A : Type'} (y : A) (f : A -> A) (s : A -> Prop) : (term1462 A y f s) = (term1462 A y f s).
Proof. exact (eq_refl (term1462 A y f s)). Qed.
Lemma lem4922298 {A : Type'} (y : A) (f : A -> A) (s : A -> Prop) : (term1543 A y f s) = (term1463 A y f s).
Proof. exact (MK_COMB (@lem4922297 A y f s) (@lem4922296 A y f s)). Qed.
Lemma lem4922299 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4922300 {A : Type'} (y : A) (f : A -> A) (s : A -> Prop) : (term1548 A y f s) = (term1549 A y f s).
Proof. exact (MK_COMB (@lem4922299) (@lem4922298 A y f s)). Qed.
Lemma lem4922301 {A : Type'} (y : A) (f : A -> A) (x : A) (s : A -> Prop) : (term1457 A y f s x) = (term1421 A y f x s).
Proof. exact (eq_refl (term1457 A y f s x)). Qed.
Lemma lem4922302 {A : Type'} (y : A) (f : A -> A) (s : A -> Prop) : (term1462 A y f s) = (term1462 A y f s).
Proof. exact (eq_refl (term1462 A y f s)). Qed.
Lemma lem4922303 {A : Type'} (y : A) (f : A -> A) (x : A) (s : A -> Prop) : (term1550 A y f s x) = (term1551 A y f x s).
Proof. exact (MK_COMB (@lem4922302 A y f s) (@lem4922301 A y f x s)). Qed.
Lemma lem4922304 {A : Type'} (y : A) (f : A -> A) (s : A -> Prop) : (term1552 A y f s) = (term1553 A y f s).
Proof. exact (fun_ext (fun x : A => @lem4922303 A y f x s)). Qed.
Lemma lem4922305 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem4922306 {A : Type'} (y : A) (f : A -> A) (s : A -> Prop) : (term1544 A y f s) = (term1554 A y f s).
Proof. exact (MK_COMB (@lem4922305 A) (@lem4922304 A y f s)). Qed.
Lemma lem4922307 {A : Type'} (y : A) (f : A -> A) (s : A -> Prop) : ((term1543 A y f s) = (term1544 A y f s)) = ((term1463 A y f s) = (term1554 A y f s)).
Proof. exact (MK_COMB (@lem4922300 A y f s) (@lem4922306 A y f s)). Qed.
Lemma lem4922308 {A : Type'} (y : A) (f : A -> A) (s : A -> Prop) : (term1463 A y f s) = (term1554 A y f s).
Proof. exact (EQ_MP (@lem4922307 A y f s) (@lem4922292 A y f s)). Qed.
Lemma lem4922309 {A : Type'} (y : A) (s : A -> Prop) : (term1482 A y s) = (term1555 A y s).
Proof. exact (fun_ext (fun f : A -> A => @lem4922308 A y f s)). Qed.
Lemma lem4922310 {A : Type'} : (@all (A -> A)) = (@all (A -> A)).
Proof. exact (eq_refl (@all (A -> A))). Qed.
Lemma lem4922311 {A : Type'} (y : A) (s : A -> Prop) : (term1497 A y s) = (term1556 A y s).
Proof. exact (MK_COMB (@lem4922310 A) (@lem4922309 A y s)). Qed.
Lemma lem4922313 {A B : Type'} (P : type1413 A B) : (term814 A B P) = (term815 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem4922314 {A : Type'} (P : type486 A) : (term1557 A P) = (term1558 A P).
Proof. exact (@lem4922313 (A -> A) A P). Qed.
Lemma lem4922315 {A : Type'} (y : A) (s : A -> Prop) : (term1559 A y s) = (term1560 A y s).
Proof. exact (@lem4922314 A (term1561 A y s)). Qed.
Lemma lem4922316 {A : Type'} (y : A) (f : A -> A) (s : A -> Prop) : (term1562 A y s f) = (term1553 A y f s).
Proof. exact (eq_refl (term1562 A y s f)). Qed.
Lemma lem4922317 {A : Type'} (x : A) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem4922318 {A : Type'} (y : A) (f : A -> A) (s : A -> Prop) (x : A) : (term1563 A y s f x) = (term1564 A y f s x).
Proof. exact (MK_COMB (@lem4922316 A y f s) (@lem4922317 A x)). Qed.
Lemma lem4922319 {A : Type'} (y : A) (f : A -> A) (x : A) (s : A -> Prop) : (term1564 A y f s x) = (term1551 A y f x s).
Proof. exact (eq_refl (term1564 A y f s x)). Qed.
Lemma lem4922320 {A : Type'} (y : A) (f : A -> A) (x : A) (s : A -> Prop) : (term1563 A y s f x) = (term1551 A y f x s).
Proof. exact (TRANS (@lem4922318 A y f s x) (@lem4922319 A y f x s)). Qed.
Lemma lem4922321 {A : Type'} (y : A) (f : A -> A) (s : A -> Prop) : (term1565 A y s f) = (term1553 A y f s).
Proof. exact (fun_ext (fun x : A => @lem4922320 A y f x s)). Qed.
Lemma lem4922322 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem4922323 {A : Type'} (y : A) (f : A -> A) (s : A -> Prop) : (term1566 A y s f) = (term1554 A y f s).
Proof. exact (MK_COMB (@lem4922322 A) (@lem4922321 A y f s)). Qed.
Lemma lem4922324 {A : Type'} (y : A) (s : A -> Prop) : (term1567 A y s) = (term1555 A y s).
Proof. exact (fun_ext (fun f : A -> A => @lem4922323 A y f s)). Qed.
Lemma lem4922325 {A : Type'} : (@all (A -> A)) = (@all (A -> A)).
Proof. exact (eq_refl (@all (A -> A))). Qed.
Lemma lem4922326 {A : Type'} (y : A) (s : A -> Prop) : (term1559 A y s) = (term1556 A y s).
Proof. exact (MK_COMB (@lem4922325 A) (@lem4922324 A y s)). Qed.
Lemma lem4922327 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4922328 {A : Type'} (y : A) (s : A -> Prop) : (term1568 A y s) = (term1569 A y s).
Proof. exact (MK_COMB (@lem4922327) (@lem4922326 A y s)). Qed.
Lemma lem4922329 {A : Type'} (y : A) (f : A -> A) (s : A -> Prop) : (term1562 A y s f) = (term1553 A y f s).
Proof. exact (eq_refl (term1562 A y s f)). Qed.
Lemma lem4922330 {A : Type'} (x : type487 A) (f : A -> A) : (x f) = (x f).
Proof. exact (eq_refl (x f)). Qed.
Lemma lem4922331 {A : Type'} (y : A) (s : A -> Prop) (x : type487 A) (f : A -> A) : (term1570 A y s x f) = (term1571 A y s x f).
Proof. exact (MK_COMB (@lem4922329 A y f s) (@lem4922330 A x f)). Qed.
Lemma lem4922332 {A : Type'} (y : A) (x : type487 A) (f : A -> A) (s : A -> Prop) : (term1571 A y s x f) = (term1572 A y x f s).
Proof. exact (eq_refl (term1571 A y s x f)). Qed.
Lemma lem4922333 {A : Type'} (y : A) (x : type487 A) (f : A -> A) (s : A -> Prop) : (term1570 A y s x f) = (term1572 A y x f s).
Proof. exact (TRANS (@lem4922331 A y s x f) (@lem4922332 A y x f s)). Qed.
Lemma lem4922334 {A : Type'} (y : A) (x : type487 A) (s : A -> Prop) : (term1573 A y s x) = (term1574 A y x s).
Proof. exact (fun_ext (fun f : A -> A => @lem4922333 A y x f s)). Qed.
Lemma lem4922335 {A : Type'} : (@all (A -> A)) = (@all (A -> A)).
Proof. exact (eq_refl (@all (A -> A))). Qed.
Lemma lem4922336 {A : Type'} (y : A) (x : type487 A) (s : A -> Prop) : (term1575 A y s x) = (term1576 A y x s).
Proof. exact (MK_COMB (@lem4922335 A) (@lem4922334 A y x s)). Qed.
Lemma lem4922337 {A : Type'} (y : A) (s : A -> Prop) : (term1577 A y s) = (term1578 A y s).
Proof. exact (fun_ext (fun x : type487 A => @lem4922336 A y x s)). Qed.
Lemma lem4922338 {A : Type'} : (@ex ((A -> A) -> A)) = (@ex ((A -> A) -> A)).
Proof. exact (eq_refl (@ex ((A -> A) -> A))). Qed.
Lemma lem4922339 {A : Type'} (y : A) (s : A -> Prop) : (term1560 A y s) = (term1579 A y s).
Proof. exact (MK_COMB (@lem4922338 A) (@lem4922337 A y s)). Qed.
Lemma lem4922340 {A : Type'} (y : A) (s : A -> Prop) : ((term1559 A y s) = (term1560 A y s)) = ((term1556 A y s) = (term1579 A y s)).
Proof. exact (MK_COMB (@lem4922328 A y s) (@lem4922339 A y s)). Qed.
Lemma lem4922341 {A : Type'} (y : A) (s : A -> Prop) : (term1556 A y s) = (term1579 A y s).
Proof. exact (EQ_MP (@lem4922340 A y s) (@lem4922315 A y s)). Qed.
Lemma lem4922342 {A : Type'} (y : A) (s : A -> Prop) : (term1497 A y s) = (term1579 A y s).
Proof. exact (TRANS (@lem4922311 A y s) (@lem4922341 A y s)). Qed.
Lemma lem4922343 {A : Type'} (y : A) : (term1504 A y) = (term1580 A y).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4922342 A y s)). Qed.
Lemma lem4922344 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4922345 {A : Type'} (y : A) : (term1519 A y) = (term1581 A y).
Proof. exact (MK_COMB (@lem4922344 A) (@lem4922343 A y)). Qed.
Lemma lem4922347 {A B : Type'} (P : type1413 A B) : (term814 A B P) = (term815 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem4922348 {A : Type'} (P : type587 A) : (term1582 A P) = (term1583 A P).
Proof. exact (@lem4922347 (A -> Prop) (type487 A) P). Qed.
Lemma lem4922349 {A : Type'} (y : A) : (term1584 A y) = (term1585 A y).
Proof. exact (@lem4922348 A (term1586 A y)). Qed.
Lemma lem4922350 {A : Type'} (y : A) (s : A -> Prop) : (term1587 A y s) = (term1578 A y s).
Proof. exact (eq_refl (term1587 A y s)). Qed.
Lemma lem4922351 {A : Type'} (x : type487 A) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem4922352 {A : Type'} (y : A) (s : A -> Prop) (x : type487 A) : (term1588 A y s x) = (term1589 A y s x).
Proof. exact (MK_COMB (@lem4922350 A y s) (@lem4922351 A x)). Qed.
Lemma lem4922353 {A : Type'} (y : A) (x : type487 A) (s : A -> Prop) : (term1589 A y s x) = (term1576 A y x s).
Proof. exact (eq_refl (term1589 A y s x)). Qed.
Lemma lem4922354 {A : Type'} (y : A) (x : type487 A) (s : A -> Prop) : (term1588 A y s x) = (term1576 A y x s).
Proof. exact (TRANS (@lem4922352 A y s x) (@lem4922353 A y x s)). Qed.
Lemma lem4922355 {A : Type'} (y : A) (s : A -> Prop) : (term1590 A y s) = (term1578 A y s).
Proof. exact (fun_ext (fun x : type487 A => @lem4922354 A y x s)). Qed.
Lemma lem4922356 {A : Type'} : (@ex ((A -> A) -> A)) = (@ex ((A -> A) -> A)).
Proof. exact (eq_refl (@ex ((A -> A) -> A))). Qed.
Lemma lem4922357 {A : Type'} (y : A) (s : A -> Prop) : (term1591 A y s) = (term1579 A y s).
Proof. exact (MK_COMB (@lem4922356 A) (@lem4922355 A y s)). Qed.
Lemma lem4922358 {A : Type'} (y : A) : (term1592 A y) = (term1580 A y).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4922357 A y s)). Qed.
Lemma lem4922359 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4922360 {A : Type'} (y : A) : (term1584 A y) = (term1581 A y).
Proof. exact (MK_COMB (@lem4922359 A) (@lem4922358 A y)). Qed.
Lemma lem4922361 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4922362 {A : Type'} (y : A) : (term1593 A y) = (term1594 A y).
Proof. exact (MK_COMB (@lem4922361) (@lem4922360 A y)). Qed.
Lemma lem4922363 {A : Type'} (y : A) (s : A -> Prop) : (term1587 A y s) = (term1578 A y s).
Proof. exact (eq_refl (term1587 A y s)). Qed.
Lemma lem4922364 {A : Type'} (x : type623 A) (s : A -> Prop) : (x s) = (x s).
Proof. exact (eq_refl (x s)). Qed.
Lemma lem4922365 {A : Type'} (y : A) (x : type623 A) (s : A -> Prop) : (term1595 A y x s) = (term1596 A y x s).
Proof. exact (MK_COMB (@lem4922363 A y s) (@lem4922364 A x s)). Qed.
Lemma lem4922366 {A : Type'} (y : A) (x : type623 A) (s : A -> Prop) : (term1596 A y x s) = (term1597 A y x s).
Proof. exact (eq_refl (term1596 A y x s)). Qed.
Lemma lem4922367 {A : Type'} (y : A) (x : type623 A) (s : A -> Prop) : (term1595 A y x s) = (term1597 A y x s).
Proof. exact (TRANS (@lem4922365 A y x s) (@lem4922366 A y x s)). Qed.
Lemma lem4922368 {A : Type'} (y : A) (x : type623 A) : (term1598 A y x) = (term1599 A y x).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4922367 A y x s)). Qed.
Lemma lem4922369 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4922370 {A : Type'} (y : A) (x : type623 A) : (term1600 A y x) = (term1601 A y x).
Proof. exact (MK_COMB (@lem4922369 A) (@lem4922368 A y x)). Qed.
Lemma lem4922371 {A : Type'} (y : A) : (term1602 A y) = (term1603 A y).
Proof. exact (fun_ext (fun x : type623 A => @lem4922370 A y x)). Qed.
Lemma lem4922372 {A : Type'} : (@ex ((A -> Prop) -> (A -> A) -> A)) = (@ex ((A -> Prop) -> (A -> A) -> A)).
Proof. exact (eq_refl (@ex ((A -> Prop) -> (A -> A) -> A))). Qed.
Lemma lem4922373 {A : Type'} (y : A) : (term1585 A y) = (term1604 A y).
Proof. exact (MK_COMB (@lem4922372 A) (@lem4922371 A y)). Qed.
Lemma lem4922374 {A : Type'} (y : A) : ((term1584 A y) = (term1585 A y)) = ((term1581 A y) = (term1604 A y)).
Proof. exact (MK_COMB (@lem4922362 A y) (@lem4922373 A y)). Qed.
Lemma lem4922375 {A : Type'} (y : A) : (term1581 A y) = (term1604 A y).
Proof. exact (EQ_MP (@lem4922374 A y) (@lem4922349 A y)). Qed.
Lemma lem4922376 {A : Type'} (y : A) : (term1519 A y) = (term1604 A y).
Proof. exact (TRANS (@lem4922345 A y) (@lem4922375 A y)). Qed.
Lemma lem4922377 {A : Type'} : (term1526 A) = (term1605 A).
Proof. exact (fun_ext (fun y : A => @lem4922376 A y)). Qed.
Lemma lem4922378 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4922379 {A : Type'} : (term1541 A) = (term1606 A).
Proof. exact (MK_COMB (@lem4922378 A) (@lem4922377 A)). Qed.
Lemma lem4922381 {A B : Type'} (P : type1413 A B) : (term814 A B P) = (term815 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem4922382 {A : Type'} (P : type1356 A) : (term1607 A P) = (term1608 A P).
Proof. exact (@lem4922381 A (type623 A) P). Qed.
Lemma lem4922383 {A : Type'} : (term1609 A) = (term1610 A).
Proof. exact (@lem4922382 A (term1611 A)). Qed.
Lemma lem4922384 {A : Type'} (y : A) : (term1612 A y) = (term1603 A y).
Proof. exact (eq_refl (term1612 A y)). Qed.
Lemma lem4922385 {A : Type'} (x : type623 A) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem4922386 {A : Type'} (y : A) (x : type623 A) : (term1613 A y x) = (term1614 A y x).
Proof. exact (MK_COMB (@lem4922384 A y) (@lem4922385 A x)). Qed.
Lemma lem4922387 {A : Type'} (y : A) (x : type623 A) : (term1614 A y x) = (term1601 A y x).
Proof. exact (eq_refl (term1614 A y x)). Qed.
Lemma lem4922388 {A : Type'} (y : A) (x : type623 A) : (term1613 A y x) = (term1601 A y x).
Proof. exact (TRANS (@lem4922386 A y x) (@lem4922387 A y x)). Qed.
Lemma lem4922389 {A : Type'} (y : A) : (term1615 A y) = (term1603 A y).
Proof. exact (fun_ext (fun x : type623 A => @lem4922388 A y x)). Qed.
Lemma lem4922390 {A : Type'} : (@ex ((A -> Prop) -> (A -> A) -> A)) = (@ex ((A -> Prop) -> (A -> A) -> A)).
Proof. exact (eq_refl (@ex ((A -> Prop) -> (A -> A) -> A))). Qed.
Lemma lem4922391 {A : Type'} (y : A) : (term1616 A y) = (term1604 A y).
Proof. exact (MK_COMB (@lem4922390 A) (@lem4922389 A y)). Qed.
Lemma lem4922392 {A : Type'} : (term1617 A) = (term1605 A).
Proof. exact (fun_ext (fun y : A => @lem4922391 A y)). Qed.
Lemma lem4922393 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4922394 {A : Type'} : (term1609 A) = (term1606 A).
Proof. exact (MK_COMB (@lem4922393 A) (@lem4922392 A)). Qed.
Lemma lem4922395 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4922396 {A : Type'} : (term1618 A) = (term1619 A).
Proof. exact (MK_COMB (@lem4922395) (@lem4922394 A)). Qed.
Lemma lem4922397 {A : Type'} (y : A) : (term1612 A y) = (term1603 A y).
Proof. exact (eq_refl (term1612 A y)). Qed.
Lemma lem4922398 {A : Type'} (x : type1361 A) (y : A) : (x y) = (x y).
Proof. exact (eq_refl (x y)). Qed.
Lemma lem4922399 {A : Type'} (x : type1361 A) (y : A) : (term1620 A x y) = (term1621 A x y).
Proof. exact (MK_COMB (@lem4922397 A y) (@lem4922398 A x y)). Qed.
Lemma lem4922400 {A : Type'} (x : type1361 A) (y : A) : (term1621 A x y) = (term1622 A x y).
Proof. exact (eq_refl (term1621 A x y)). Qed.
Lemma lem4922401 {A : Type'} (x : type1361 A) (y : A) : (term1620 A x y) = (term1622 A x y).
Proof. exact (TRANS (@lem4922399 A x y) (@lem4922400 A x y)). Qed.
Lemma lem4922402 {A : Type'} (x : type1361 A) : (term1623 A x) = (term1624 A x).
Proof. exact (fun_ext (fun y : A => @lem4922401 A x y)). Qed.
Lemma lem4922403 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4922404 {A : Type'} (x : type1361 A) : (term1625 A x) = (term1626 A x).
Proof. exact (MK_COMB (@lem4922403 A) (@lem4922402 A x)). Qed.
Lemma lem4922405 {A : Type'} : (term1627 A) = (term1628 A).
Proof. exact (fun_ext (fun x : type1361 A => @lem4922404 A x)). Qed.
Lemma lem4922406 {A : Type'} : (@ex (A -> (A -> Prop) -> (A -> A) -> A)) = (@ex (A -> (A -> Prop) -> (A -> A) -> A)).
Proof. exact (eq_refl (@ex (A -> (A -> Prop) -> (A -> A) -> A))). Qed.
Lemma lem4922407 {A : Type'} : (term1610 A) = (term1629 A).
Proof. exact (MK_COMB (@lem4922406 A) (@lem4922405 A)). Qed.
Lemma lem4922408 {A : Type'} : ((term1609 A) = (term1610 A)) = ((term1606 A) = (term1629 A)).
Proof. exact (MK_COMB (@lem4922396 A) (@lem4922407 A)). Qed.
Lemma lem4922409 {A : Type'} : (term1606 A) = (term1629 A).
Proof. exact (EQ_MP (@lem4922408 A) (@lem4922383 A)). Qed.
Lemma lem4922410 {A : Type'} : (term1541 A) = (term1629 A).
Proof. exact (TRANS (@lem4922379 A) (@lem4922409 A)). Qed.
Lemma lem4922411 {A : Type'} : (term1538 A) = (term1538 A).
Proof. exact (eq_refl (term1538 A)). Qed.
Lemma lem4922412 {A : Type'} : (term1542 A) = (term1630 A).
Proof. exact (MK_COMB (@lem4922411 A) (@lem4922410 A)). Qed.
Lemma lem4922414 {A : Type'} (P : Prop) (Q : A -> Prop) : (term1631 A P Q) = (term1632 A P Q).
Proof. exact (EQ_MP (@lem18929 A P Q) (@lem18928 A P Q)). Qed.
Lemma lem4922415 {A : Type'} (P : Prop) (Q : type391 A) : (term1633 A P Q) = (term1634 A P Q).
Proof. exact (@lem4922414 (type1361 A) P Q). Qed.
Lemma lem4922416 {A : Type'} : (term1635 A) = (term1636 A).
Proof. exact (@lem4922415 A (term1536 A) (term1628 A)). Qed.
Lemma lem4922417 {A : Type'} (x : type1361 A) : (term1637 A x) = (term1626 A x).
Proof. exact (eq_refl (term1637 A x)). Qed.
Lemma lem4922418 {A : Type'} : (term1638 A) = (term1628 A).
Proof. exact (fun_ext (fun x : type1361 A => @lem4922417 A x)). Qed.
Lemma lem4922419 {A : Type'} : (@ex (A -> (A -> Prop) -> (A -> A) -> A)) = (@ex (A -> (A -> Prop) -> (A -> A) -> A)).
Proof. exact (eq_refl (@ex (A -> (A -> Prop) -> (A -> A) -> A))). Qed.
Lemma lem4922420 {A : Type'} : (term1639 A) = (term1629 A).
Proof. exact (MK_COMB (@lem4922419 A) (@lem4922418 A)). Qed.
Lemma lem4922421 {A : Type'} : (term1538 A) = (term1538 A).
Proof. exact (eq_refl (term1538 A)). Qed.
Lemma lem4922422 {A : Type'} : (term1635 A) = (term1630 A).
Proof. exact (MK_COMB (@lem4922421 A) (@lem4922420 A)). Qed.
Lemma lem4922423 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4922424 {A : Type'} : (term1640 A) = (term1641 A).
Proof. exact (MK_COMB (@lem4922423) (@lem4922422 A)). Qed.
Lemma lem4922425 {A : Type'} (x : type1361 A) : (term1637 A x) = (term1626 A x).
Proof. exact (eq_refl (term1637 A x)). Qed.
Lemma lem4922426 {A : Type'} : (term1538 A) = (term1538 A).
Proof. exact (eq_refl (term1538 A)). Qed.
Lemma lem4922427 {A : Type'} (x : type1361 A) : (term1642 A x) = (term1643 A x).
Proof. exact (MK_COMB (@lem4922426 A) (@lem4922425 A x)). Qed.
Lemma lem4922428 {A : Type'} : (term1644 A) = (term1645 A).
Proof. exact (fun_ext (fun x : type1361 A => @lem4922427 A x)). Qed.
Lemma lem4922429 {A : Type'} : (@ex (A -> (A -> Prop) -> (A -> A) -> A)) = (@ex (A -> (A -> Prop) -> (A -> A) -> A)).
Proof. exact (eq_refl (@ex (A -> (A -> Prop) -> (A -> A) -> A))). Qed.
Lemma lem4922430 {A : Type'} : (term1636 A) = (term1646 A).
Proof. exact (MK_COMB (@lem4922429 A) (@lem4922428 A)). Qed.
Lemma lem4922431 {A : Type'} : ((term1635 A) = (term1636 A)) = ((term1630 A) = (term1646 A)).
Proof. exact (MK_COMB (@lem4922424 A) (@lem4922430 A)). Qed.
Lemma lem4922432 {A : Type'} : (term1630 A) = (term1646 A).
Proof. exact (EQ_MP (@lem4922431 A) (@lem4922416 A)). Qed.
Lemma lem4922433 {A : Type'} : (term1542 A) = (term1646 A).
Proof. exact (TRANS (@lem4922412 A) (@lem4922432 A)). Qed.
Lemma lem4922434 {A : Type'} : (term1476 A) = (term1646 A).
Proof. exact (TRANS (@lem4922288 A) (@lem4922433 A)). Qed.
Lemma lem4922435 {A : Type'} : (term1323 A) = (term1646 A).
Proof. exact (TRANS (@lem4921591 A) (@lem4922434 A)). Qed.
Lemma lem4922436 {A : Type'} (h1 : term1323 A) : term1646 A.
Proof. exact (EQ_MP (@lem4922435 A) (@lem4921349 A h1)). Qed.
Lemma lem4922447 {A B : Type'} (y : B) (f : A -> B) (x : A) (s : A -> Prop) : (term1647 A B y f x s) = (term1648 A B y f x s).
Proof. exact (@lem17045 (y = (f x)) (@IN A x s)). Qed.
Lemma lem4922450 {A B : Type'} (y : B) (f : A -> B) (x : A) (s : A -> Prop) : (term1431 A B y f x s) = (term1431 A B y f x s).
Proof. exact (eq_refl (term1431 A B y f x s)). Qed.
Lemma lem4922451 {A : Type'} (P : A -> Prop) : (term847 A P) = (term848 A P).
Proof. exact (@lem18394 A P). Qed.
Lemma lem4922452 {A B : Type'} (y : B) (f : A -> B) (s : A -> Prop) : (term1649 A B y f s) = (term1650 A B y f s).
Proof. exact (@lem4922451 A (term1432 A B y f s)). Qed.
Lemma lem4922453 {A B : Type'} (y : B) (f : A -> B) (x : A) (s : A -> Prop) : (term1651 A B y f s x) = (term1431 A B y f x s).
Proof. exact (eq_refl (term1651 A B y f s x)). Qed.
Lemma lem4922454 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem4922455 {A B : Type'} (y : B) (f : A -> B) (x : A) (s : A -> Prop) : (term1652 A B y f s x) = (term1647 A B y f x s).
Proof. exact (MK_COMB (@lem4922454) (@lem4922453 A B y f x s)). Qed.
Lemma lem4922456 {A B : Type'} (y : B) (f : A -> B) (x : A) (s : A -> Prop) : (term1652 A B y f s x) = (term1648 A B y f x s).
Proof. exact (TRANS (@lem4922455 A B y f x s) (@lem4922447 A B y f x s)). Qed.
Lemma lem4922457 {A B : Type'} (y : B) (f : A -> B) (s : A -> Prop) : (term1653 A B y f s) = (term1654 A B y f s).
Proof. exact (fun_ext (fun x : A => @lem4922456 A B y f x s)). Qed.
Lemma lem4922458 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4922459 {A B : Type'} (y : B) (f : A -> B) (s : A -> Prop) : (term1650 A B y f s) = (term1655 A B y f s).
Proof. exact (MK_COMB (@lem4922458 A) (@lem4922457 A B y f s)). Qed.
Lemma lem4922460 {A B : Type'} (y : B) (f : A -> B) (s : A -> Prop) : (term1649 A B y f s) = (term1655 A B y f s).
Proof. exact (TRANS (@lem4922452 A B y f s) (@lem4922459 A B y f s)). Qed.
Lemma lem4922461 {A B : Type'} (y : B) (f : A -> B) (s : A -> Prop) : (term1432 A B y f s) = (term1432 A B y f s).
Proof. exact (fun_ext (fun x : A => @lem4922450 A B y f x s)). Qed.
Lemma lem4922462 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem4922463 {A B : Type'} (y : B) (f : A -> B) (s : A -> Prop) : (term672 A B y f s) = (term672 A B y f s).
Proof. exact (MK_COMB (@lem4922462 A) (@lem4922461 A B y f s)). Qed.
Lemma lem4922465 {A B : Type'} (y : B) (f : A -> B) (s : A -> Prop) : (term1656 A B y f s) = (term1656 A B y f s).
Proof. exact (eq_refl (term1656 A B y f s)). Qed.
Lemma lem4922466 {A B : Type'} (y : B) (f : A -> B) (s : A -> Prop) : (term1657 A B y f s) = (term1657 A B y f s).
Proof. exact (MK_COMB (@lem4922465 A B y f s) (@lem4922463 A B y f s)). Qed.
Lemma lem4922468 {A B : Type'} (y : B) (f : A -> B) (s : A -> Prop) : (term1658 A B y f s) = (term1658 A B y f s).
Proof. exact (eq_refl (term1658 A B y f s)). Qed.
Lemma lem4922469 {A B : Type'} (y : B) (f : A -> B) (s : A -> Prop) : (term1659 A B y f s) = (term1660 A B y f s).
Proof. exact (MK_COMB (@lem4922468 A B y f s) (@lem4922460 A B y f s)). Qed.
Lemma lem4922470 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4922471 {A B : Type'} (y : B) (f : A -> B) (s : A -> Prop) : (term1661 A B y f s) = (term1662 A B y f s).
Proof. exact (MK_COMB (@lem4922470) (@lem4922469 A B y f s)). Qed.
Lemma lem4922472 {A B : Type'} (y : B) (f : A -> B) (s : A -> Prop) : (term1663 A B y f s) = (term1664 A B y f s).
Proof. exact (MK_COMB (@lem4922471 A B y f s) (@lem4922466 A B y f s)). Qed.
Lemma lem4922473 {A B : Type'} (y : B) (f : A -> B) (s : A -> Prop) : ((term671 A B y f s) = (term672 A B y f s)) = (term1663 A B y f s).
Proof. exact (@lem17784 (term671 A B y f s) (term672 A B y f s)). Qed.
Lemma lem4922474 {A B : Type'} (y : B) (f : A -> B) (s : A -> Prop) : ((term671 A B y f s) = (term672 A B y f s)) = (term1664 A B y f s).
Proof. exact (TRANS (@lem4922473 A B y f s) (@lem4922472 A B y f s)). Qed.
Lemma lem4922475 {A B : Type'} (y : B) (s : A -> Prop) : (term1434 A B y s) = (term1665 A B y s).
Proof. exact (fun_ext (fun f : A -> B => @lem4922474 A B y f s)). Qed.
Lemma lem4922476 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem4922477 {A B : Type'} (y : B) (s : A -> Prop) : (term669 A B y s) = (term1666 A B y s).
Proof. exact (MK_COMB (@lem4922476 A B) (@lem4922475 A B y s)). Qed.
Lemma lem4922478 {A B : Type'} (y : B) : (term1435 A B y) = (term1667 A B y).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4922477 A B y s)). Qed.
Lemma lem4922479 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4922480 {A B : Type'} (y : B) : (term667 A B y) = (term1668 A B y).
Proof. exact (MK_COMB (@lem4922479 A) (@lem4922478 A B y)). Qed.
Lemma lem4922481 {A B : Type'} : (term1436 A B) = (term1669 A B).
Proof. exact (fun_ext (fun y : B => @lem4922480 A B y)). Qed.
Lemma lem4922482 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4922483 {A B : Type'} : (term1324 A B) = (term1670 A B).
Proof. exact (MK_COMB (@lem4922482 B) (@lem4922481 A B)). Qed.
Lemma lem4922493 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term1130 A P Q) = (term1131 A P Q).
Proof. exact (EQ_MP (@lem18953 A P Q) (@lem18952 A P Q)). Qed.
Lemma lem4922494 {A B : Type'} (P : type572 A B) (Q : type572 A B) : (term1671 A B P Q) = (term1672 A B P Q).
Proof. exact (@lem4922493 (A -> B) P Q). Qed.
Lemma lem4922495 {A B : Type'} (y : B) (s : A -> Prop) : (term1673 A B y s) = (term1674 A B y s).
Proof. exact (@lem4922494 A B (term1675 A B y s) (term1676 A B y s)). Qed.
Lemma lem4922496 {A B : Type'} (y : B) (f : A -> B) (s : A -> Prop) : (term1677 A B y s f) = (term1660 A B y f s).
Proof. exact (eq_refl (term1677 A B y s f)). Qed.
Lemma lem4922497 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4922498 {A B : Type'} (y : B) (f : A -> B) (s : A -> Prop) : (term1678 A B y s f) = (term1662 A B y f s).
Proof. exact (MK_COMB (@lem4922497) (@lem4922496 A B y f s)). Qed.
Lemma lem4922499 {A B : Type'} (y : B) (f : A -> B) (s : A -> Prop) : (term1679 A B y s f) = (term1657 A B y f s).
Proof. exact (eq_refl (term1679 A B y s f)). Qed.
Lemma lem4922500 {A B : Type'} (y : B) (f : A -> B) (s : A -> Prop) : (term1680 A B y s f) = (term1664 A B y f s).
Proof. exact (MK_COMB (@lem4922498 A B y f s) (@lem4922499 A B y f s)). Qed.
Lemma lem4922501 {A B : Type'} (y : B) (s : A -> Prop) : (term1681 A B y s) = (term1665 A B y s).
Proof. exact (fun_ext (fun f : A -> B => @lem4922500 A B y f s)). Qed.
Lemma lem4922502 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem4922503 {A B : Type'} (y : B) (s : A -> Prop) : (term1673 A B y s) = (term1666 A B y s).
Proof. exact (MK_COMB (@lem4922502 A B) (@lem4922501 A B y s)). Qed.
Lemma lem4922504 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4922505 {A B : Type'} (y : B) (s : A -> Prop) : (term1682 A B y s) = (term1683 A B y s).
Proof. exact (MK_COMB (@lem4922504) (@lem4922503 A B y s)). Qed.
Lemma lem4922506 {A B : Type'} (y : B) (f : A -> B) (s : A -> Prop) : (term1677 A B y s f) = (term1660 A B y f s).
Proof. exact (eq_refl (term1677 A B y s f)). Qed.
Lemma lem4922507 {A B : Type'} (y : B) (s : A -> Prop) : (term1684 A B y s) = (term1675 A B y s).
Proof. exact (fun_ext (fun f : A -> B => @lem4922506 A B y f s)). Qed.
Lemma lem4922508 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem4922509 {A B : Type'} (y : B) (s : A -> Prop) : (term1685 A B y s) = (term1686 A B y s).
Proof. exact (MK_COMB (@lem4922508 A B) (@lem4922507 A B y s)). Qed.
Lemma lem4922510 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4922511 {A B : Type'} (y : B) (s : A -> Prop) : (term1687 A B y s) = (term1688 A B y s).
Proof. exact (MK_COMB (@lem4922510) (@lem4922509 A B y s)). Qed.
Lemma lem4922512 {A B : Type'} (y : B) (f : A -> B) (s : A -> Prop) : (term1679 A B y s f) = (term1657 A B y f s).
Proof. exact (eq_refl (term1679 A B y s f)). Qed.
Lemma lem4922513 {A B : Type'} (y : B) (s : A -> Prop) : (term1689 A B y s) = (term1676 A B y s).
Proof. exact (fun_ext (fun f : A -> B => @lem4922512 A B y f s)). Qed.
Lemma lem4922514 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem4922515 {A B : Type'} (y : B) (s : A -> Prop) : (term1690 A B y s) = (term1691 A B y s).
Proof. exact (MK_COMB (@lem4922514 A B) (@lem4922513 A B y s)). Qed.
Lemma lem4922516 {A B : Type'} (y : B) (s : A -> Prop) : (term1674 A B y s) = (term1692 A B y s).
Proof. exact (MK_COMB (@lem4922511 A B y s) (@lem4922515 A B y s)). Qed.
Lemma lem4922517 {A B : Type'} (y : B) (s : A -> Prop) : ((term1673 A B y s) = (term1674 A B y s)) = ((term1666 A B y s) = (term1692 A B y s)).
Proof. exact (MK_COMB (@lem4922505 A B y s) (@lem4922516 A B y s)). Qed.
Lemma lem4922518 {A B : Type'} (y : B) (s : A -> Prop) : (term1666 A B y s) = (term1692 A B y s).
Proof. exact (EQ_MP (@lem4922517 A B y s) (@lem4922495 A B y s)). Qed.
Lemma lem4922711 {A B : Type'} (y : B) : (term1667 A B y) = (term1693 A B y).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4922518 A B y s)). Qed.
Lemma lem4922712 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4922713 {A B : Type'} (y : B) : (term1668 A B y) = (term1694 A B y).
Proof. exact (MK_COMB (@lem4922712 A) (@lem4922711 A B y)). Qed.
Lemma lem4922715 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term1130 A P Q) = (term1131 A P Q).
Proof. exact (EQ_MP (@lem18953 A P Q) (@lem18952 A P Q)). Qed.
Lemma lem4922716 {A : Type'} (P : type686 A) (Q : type686 A) : (term1132 A P Q) = (term1133 A P Q).
Proof. exact (@lem4922715 (A -> Prop) P Q). Qed.
Lemma lem4922717 {A B : Type'} (y : B) : (term1695 A B y) = (term1696 A B y).
Proof. exact (@lem4922716 A (term1697 A B y) (term1698 A B y)). Qed.
Lemma lem4922718 {A B : Type'} (y : B) (s : A -> Prop) : (term1699 A B y s) = (term1686 A B y s).
Proof. exact (eq_refl (term1699 A B y s)). Qed.
Lemma lem4922719 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4922720 {A B : Type'} (y : B) (s : A -> Prop) : (term1700 A B y s) = (term1688 A B y s).
Proof. exact (MK_COMB (@lem4922719) (@lem4922718 A B y s)). Qed.
Lemma lem4922721 {A B : Type'} (y : B) (s : A -> Prop) : (term1701 A B y s) = (term1691 A B y s).
Proof. exact (eq_refl (term1701 A B y s)). Qed.
Lemma lem4922722 {A B : Type'} (y : B) (s : A -> Prop) : (term1702 A B y s) = (term1692 A B y s).
Proof. exact (MK_COMB (@lem4922720 A B y s) (@lem4922721 A B y s)). Qed.
Lemma lem4922723 {A B : Type'} (y : B) : (term1703 A B y) = (term1693 A B y).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4922722 A B y s)). Qed.
Lemma lem4922724 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4922725 {A B : Type'} (y : B) : (term1695 A B y) = (term1694 A B y).
Proof. exact (MK_COMB (@lem4922724 A) (@lem4922723 A B y)). Qed.
Lemma lem4922726 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4922727 {A B : Type'} (y : B) : (term1704 A B y) = (term1705 A B y).
Proof. exact (MK_COMB (@lem4922726) (@lem4922725 A B y)). Qed.
Lemma lem4922728 {A B : Type'} (y : B) (s : A -> Prop) : (term1699 A B y s) = (term1686 A B y s).
Proof. exact (eq_refl (term1699 A B y s)). Qed.
Lemma lem4922729 {A B : Type'} (y : B) : (term1706 A B y) = (term1697 A B y).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4922728 A B y s)). Qed.
Lemma lem4922730 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4922731 {A B : Type'} (y : B) : (term1707 A B y) = (term1708 A B y).
Proof. exact (MK_COMB (@lem4922730 A) (@lem4922729 A B y)). Qed.
Lemma lem4922732 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4922733 {A B : Type'} (y : B) : (term1709 A B y) = (term1710 A B y).
Proof. exact (MK_COMB (@lem4922732) (@lem4922731 A B y)). Qed.
Lemma lem4922734 {A B : Type'} (y : B) (s : A -> Prop) : (term1701 A B y s) = (term1691 A B y s).
Proof. exact (eq_refl (term1701 A B y s)). Qed.
Lemma lem4922735 {A B : Type'} (y : B) : (term1711 A B y) = (term1698 A B y).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4922734 A B y s)). Qed.
Lemma lem4922736 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4922737 {A B : Type'} (y : B) : (term1712 A B y) = (term1713 A B y).
Proof. exact (MK_COMB (@lem4922736 A) (@lem4922735 A B y)). Qed.
Lemma lem4922738 {A B : Type'} (y : B) : (term1696 A B y) = (term1714 A B y).
Proof. exact (MK_COMB (@lem4922733 A B y) (@lem4922737 A B y)). Qed.
Lemma lem4922739 {A B : Type'} (y : B) : ((term1695 A B y) = (term1696 A B y)) = ((term1694 A B y) = (term1714 A B y)).
Proof. exact (MK_COMB (@lem4922727 A B y) (@lem4922738 A B y)). Qed.
Lemma lem4922740 {A B : Type'} (y : B) : (term1694 A B y) = (term1714 A B y).
Proof. exact (EQ_MP (@lem4922739 A B y) (@lem4922717 A B y)). Qed.
Lemma lem4922941 {A B : Type'} (y : B) : (term1668 A B y) = (term1714 A B y).
Proof. exact (TRANS (@lem4922713 A B y) (@lem4922740 A B y)). Qed.
Lemma lem4922942 {A B : Type'} : (term1669 A B) = (term1715 A B).
Proof. exact (fun_ext (fun y : B => @lem4922941 A B y)). Qed.
Lemma lem4922943 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4922944 {A B : Type'} : (term1670 A B) = (term1716 A B).
Proof. exact (MK_COMB (@lem4922943 B) (@lem4922942 A B)). Qed.
Lemma lem4922946 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term1130 A P Q) = (term1131 A P Q).
Proof. exact (EQ_MP (@lem18953 A P Q) (@lem18952 A P Q)). Qed.
Lemma lem4922947 {B : Type'} (P : B -> Prop) (Q : B -> Prop) : (term1130 B P Q) = (term1131 B P Q).
Proof. exact (@lem4922946 B P Q). Qed.
Lemma lem4922948 {A B : Type'} : (term1717 A B) = (term1718 A B).
Proof. exact (@lem4922947 B (term1719 A B) (term1720 A B)). Qed.
Lemma lem4922949 {A B : Type'} (y : B) : (term1721 A B y) = (term1708 A B y).
Proof. exact (eq_refl (term1721 A B y)). Qed.
Lemma lem4922950 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4922951 {A B : Type'} (y : B) : (term1722 A B y) = (term1710 A B y).
Proof. exact (MK_COMB (@lem4922950) (@lem4922949 A B y)). Qed.
Lemma lem4922952 {A B : Type'} (y : B) : (term1723 A B y) = (term1713 A B y).
Proof. exact (eq_refl (term1723 A B y)). Qed.
Lemma lem4922953 {A B : Type'} (y : B) : (term1724 A B y) = (term1714 A B y).
Proof. exact (MK_COMB (@lem4922951 A B y) (@lem4922952 A B y)). Qed.
Lemma lem4922954 {A B : Type'} : (term1725 A B) = (term1715 A B).
Proof. exact (fun_ext (fun y : B => @lem4922953 A B y)). Qed.
Lemma lem4922955 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4922956 {A B : Type'} : (term1717 A B) = (term1716 A B).
Proof. exact (MK_COMB (@lem4922955 B) (@lem4922954 A B)). Qed.
Lemma lem4922957 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4922958 {A B : Type'} : (term1726 A B) = (term1727 A B).
Proof. exact (MK_COMB (@lem4922957) (@lem4922956 A B)). Qed.
Lemma lem4922959 {A B : Type'} (y : B) : (term1721 A B y) = (term1708 A B y).
Proof. exact (eq_refl (term1721 A B y)). Qed.
Lemma lem4922960 {A B : Type'} : (term1728 A B) = (term1719 A B).
Proof. exact (fun_ext (fun y : B => @lem4922959 A B y)). Qed.
Lemma lem4922961 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4922962 {A B : Type'} : (term1729 A B) = (term1730 A B).
Proof. exact (MK_COMB (@lem4922961 B) (@lem4922960 A B)). Qed.
Lemma lem4922963 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4922964 {A B : Type'} : (term1731 A B) = (term1732 A B).
Proof. exact (MK_COMB (@lem4922963) (@lem4922962 A B)). Qed.
Lemma lem4922965 {A B : Type'} (y : B) : (term1723 A B y) = (term1713 A B y).
Proof. exact (eq_refl (term1723 A B y)). Qed.
Lemma lem4922966 {A B : Type'} : (term1733 A B) = (term1720 A B).
Proof. exact (fun_ext (fun y : B => @lem4922965 A B y)). Qed.
Lemma lem4922967 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4922968 {A B : Type'} : (term1734 A B) = (term1735 A B).
Proof. exact (MK_COMB (@lem4922967 B) (@lem4922966 A B)). Qed.
Lemma lem4922969 {A B : Type'} : (term1718 A B) = (term1736 A B).
Proof. exact (MK_COMB (@lem4922964 A B) (@lem4922968 A B)). Qed.
Lemma lem4922970 {A B : Type'} : ((term1717 A B) = (term1718 A B)) = ((term1716 A B) = (term1736 A B)).
Proof. exact (MK_COMB (@lem4922958 A B) (@lem4922969 A B)). Qed.
Lemma lem4922971 {A B : Type'} : (term1716 A B) = (term1736 A B).
Proof. exact (EQ_MP (@lem4922970 A B) (@lem4922948 A B)). Qed.
Lemma lem4923180 {A B : Type'} : (term1670 A B) = (term1736 A B).
Proof. exact (TRANS (@lem4922944 A B) (@lem4922971 A B)). Qed.
Lemma lem4923182 {A : Type'} (P : Prop) (Q : A -> Prop) : (term797 A P Q) = (term798 A P Q).
Proof. exact (EQ_MP (@lem18911 A P Q) (@lem18910 A P Q)). Qed.
Lemma lem4923183 {A : Type'} (P : Prop) (Q : A -> Prop) : (term797 A P Q) = (term798 A P Q).
Proof. exact (@lem4923182 A P Q). Qed.
Lemma lem4923184 {A B : Type'} (y : B) (f : A -> B) (s : A -> Prop) : (term1737 A B y f s) = (term1738 A B y f s).
Proof. exact (@lem4923183 A (term1739 A B y f s) (term1432 A B y f s)). Qed.
Lemma lem4923185 {A B : Type'} (y : B) (f : A -> B) (x : A) (s : A -> Prop) : (term1651 A B y f s x) = (term1431 A B y f x s).
Proof. exact (eq_refl (term1651 A B y f s x)). Qed.
Lemma lem4923186 {A B : Type'} (y : B) (f : A -> B) (s : A -> Prop) : (term1740 A B y f s) = (term1432 A B y f s).
Proof. exact (fun_ext (fun x : A => @lem4923185 A B y f x s)). Qed.
Lemma lem4923187 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem4923188 {A B : Type'} (y : B) (f : A -> B) (s : A -> Prop) : (term1741 A B y f s) = (term672 A B y f s).
Proof. exact (MK_COMB (@lem4923187 A) (@lem4923186 A B y f s)). Qed.
Lemma lem4923189 {A B : Type'} (y : B) (f : A -> B) (s : A -> Prop) : (term1656 A B y f s) = (term1656 A B y f s).
Proof. exact (eq_refl (term1656 A B y f s)). Qed.
Lemma lem4923190 {A B : Type'} (y : B) (f : A -> B) (s : A -> Prop) : (term1737 A B y f s) = (term1657 A B y f s).
Proof. exact (MK_COMB (@lem4923189 A B y f s) (@lem4923188 A B y f s)). Qed.
Lemma lem4923191 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4923192 {A B : Type'} (y : B) (f : A -> B) (s : A -> Prop) : (term1742 A B y f s) = (term1743 A B y f s).
Proof. exact (MK_COMB (@lem4923191) (@lem4923190 A B y f s)). Qed.
Lemma lem4923193 {A B : Type'} (y : B) (f : A -> B) (x : A) (s : A -> Prop) : (term1651 A B y f s x) = (term1431 A B y f x s).
Proof. exact (eq_refl (term1651 A B y f s x)). Qed.
Lemma lem4923194 {A B : Type'} (y : B) (f : A -> B) (s : A -> Prop) : (term1656 A B y f s) = (term1656 A B y f s).
Proof. exact (eq_refl (term1656 A B y f s)). Qed.
Lemma lem4923195 {A B : Type'} (y : B) (f : A -> B) (x : A) (s : A -> Prop) : (term1744 A B y f s x) = (term1745 A B y f x s).
Proof. exact (MK_COMB (@lem4923194 A B y f s) (@lem4923193 A B y f x s)). Qed.
Lemma lem4923196 {A B : Type'} (y : B) (f : A -> B) (s : A -> Prop) : (term1746 A B y f s) = (term1747 A B y f s).
Proof. exact (fun_ext (fun x : A => @lem4923195 A B y f x s)). Qed.
Lemma lem4923197 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem4923198 {A B : Type'} (y : B) (f : A -> B) (s : A -> Prop) : (term1738 A B y f s) = (term1748 A B y f s).
Proof. exact (MK_COMB (@lem4923197 A) (@lem4923196 A B y f s)). Qed.
Lemma lem4923199 {A B : Type'} (y : B) (f : A -> B) (s : A -> Prop) : ((term1737 A B y f s) = (term1738 A B y f s)) = ((term1657 A B y f s) = (term1748 A B y f s)).
Proof. exact (MK_COMB (@lem4923192 A B y f s) (@lem4923198 A B y f s)). Qed.
Lemma lem4923200 {A B : Type'} (y : B) (f : A -> B) (s : A -> Prop) : (term1657 A B y f s) = (term1748 A B y f s).
Proof. exact (EQ_MP (@lem4923199 A B y f s) (@lem4923184 A B y f s)). Qed.
Lemma lem4923201 {A B : Type'} (y : B) (s : A -> Prop) : (term1676 A B y s) = (term1749 A B y s).
Proof. exact (fun_ext (fun f : A -> B => @lem4923200 A B y f s)). Qed.
Lemma lem4923202 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem4923203 {A B : Type'} (y : B) (s : A -> Prop) : (term1691 A B y s) = (term1750 A B y s).
Proof. exact (MK_COMB (@lem4923202 A B) (@lem4923201 A B y s)). Qed.
Lemma lem4923205 {A B : Type'} (P : type1413 A B) : (term814 A B P) = (term815 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem4923206 {A B : Type'} (P : type551 A B) : (term1751 A B P) = (term1752 A B P).
Proof. exact (@lem4923205 (A -> B) A P). Qed.
Lemma lem4923207 {A B : Type'} (y : B) (s : A -> Prop) : (term1753 A B y s) = (term1754 A B y s).
Proof. exact (@lem4923206 A B (term1755 A B y s)). Qed.
Lemma lem4923208 {A B : Type'} (y : B) (f : A -> B) (s : A -> Prop) : (term1756 A B y s f) = (term1747 A B y f s).
Proof. exact (eq_refl (term1756 A B y s f)). Qed.
Lemma lem4923209 {A : Type'} (x : A) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem4923210 {A B : Type'} (y : B) (f : A -> B) (s : A -> Prop) (x : A) : (term1757 A B y s f x) = (term1758 A B y f s x).
Proof. exact (MK_COMB (@lem4923208 A B y f s) (@lem4923209 A x)). Qed.
Lemma lem4923211 {A B : Type'} (y : B) (f : A -> B) (x : A) (s : A -> Prop) : (term1758 A B y f s x) = (term1745 A B y f x s).
Proof. exact (eq_refl (term1758 A B y f s x)). Qed.
Lemma lem4923212 {A B : Type'} (y : B) (f : A -> B) (x : A) (s : A -> Prop) : (term1757 A B y s f x) = (term1745 A B y f x s).
Proof. exact (TRANS (@lem4923210 A B y f s x) (@lem4923211 A B y f x s)). Qed.
Lemma lem4923213 {A B : Type'} (y : B) (f : A -> B) (s : A -> Prop) : (term1759 A B y s f) = (term1747 A B y f s).
Proof. exact (fun_ext (fun x : A => @lem4923212 A B y f x s)). Qed.
Lemma lem4923214 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem4923215 {A B : Type'} (y : B) (f : A -> B) (s : A -> Prop) : (term1760 A B y s f) = (term1748 A B y f s).
Proof. exact (MK_COMB (@lem4923214 A) (@lem4923213 A B y f s)). Qed.
Lemma lem4923216 {A B : Type'} (y : B) (s : A -> Prop) : (term1761 A B y s) = (term1749 A B y s).
Proof. exact (fun_ext (fun f : A -> B => @lem4923215 A B y f s)). Qed.
Lemma lem4923217 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem4923218 {A B : Type'} (y : B) (s : A -> Prop) : (term1753 A B y s) = (term1750 A B y s).
Proof. exact (MK_COMB (@lem4923217 A B) (@lem4923216 A B y s)). Qed.
Lemma lem4923219 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4923220 {A B : Type'} (y : B) (s : A -> Prop) : (term1762 A B y s) = (term1763 A B y s).
Proof. exact (MK_COMB (@lem4923219) (@lem4923218 A B y s)). Qed.
Lemma lem4923221 {A B : Type'} (y : B) (f : A -> B) (s : A -> Prop) : (term1756 A B y s f) = (term1747 A B y f s).
Proof. exact (eq_refl (term1756 A B y s f)). Qed.
Lemma lem4923222 {A B : Type'} (x : type569 A B) (f : A -> B) : (x f) = (x f).
Proof. exact (eq_refl (x f)). Qed.
Lemma lem4923223 {A B : Type'} (y : B) (s : A -> Prop) (x : type569 A B) (f : A -> B) : (term1764 A B y s x f) = (term1765 A B y s x f).
Proof. exact (MK_COMB (@lem4923221 A B y f s) (@lem4923222 A B x f)). Qed.
Lemma lem4923224 {A B : Type'} (y : B) (x : type569 A B) (f : A -> B) (s : A -> Prop) : (term1765 A B y s x f) = (term1766 A B y x f s).
Proof. exact (eq_refl (term1765 A B y s x f)). Qed.
Lemma lem4923225 {A B : Type'} (y : B) (x : type569 A B) (f : A -> B) (s : A -> Prop) : (term1764 A B y s x f) = (term1766 A B y x f s).
Proof. exact (TRANS (@lem4923223 A B y s x f) (@lem4923224 A B y x f s)). Qed.
Lemma lem4923226 {A B : Type'} (y : B) (x : type569 A B) (s : A -> Prop) : (term1767 A B y s x) = (term1768 A B y x s).
Proof. exact (fun_ext (fun f : A -> B => @lem4923225 A B y x f s)). Qed.
Lemma lem4923227 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem4923228 {A B : Type'} (y : B) (x : type569 A B) (s : A -> Prop) : (term1769 A B y s x) = (term1770 A B y x s).
Proof. exact (MK_COMB (@lem4923227 A B) (@lem4923226 A B y x s)). Qed.
Lemma lem4923229 {A B : Type'} (y : B) (s : A -> Prop) : (term1771 A B y s) = (term1772 A B y s).
Proof. exact (fun_ext (fun x : type569 A B => @lem4923228 A B y x s)). Qed.
Lemma lem4923230 {A B : Type'} : (@ex ((A -> B) -> A)) = (@ex ((A -> B) -> A)).
Proof. exact (eq_refl (@ex ((A -> B) -> A))). Qed.
Lemma lem4923231 {A B : Type'} (y : B) (s : A -> Prop) : (term1754 A B y s) = (term1773 A B y s).
Proof. exact (MK_COMB (@lem4923230 A B) (@lem4923229 A B y s)). Qed.
Lemma lem4923232 {A B : Type'} (y : B) (s : A -> Prop) : ((term1753 A B y s) = (term1754 A B y s)) = ((term1750 A B y s) = (term1773 A B y s)).
Proof. exact (MK_COMB (@lem4923220 A B y s) (@lem4923231 A B y s)). Qed.
Lemma lem4923233 {A B : Type'} (y : B) (s : A -> Prop) : (term1750 A B y s) = (term1773 A B y s).
Proof. exact (EQ_MP (@lem4923232 A B y s) (@lem4923207 A B y s)). Qed.
Lemma lem4923234 {A B : Type'} (y : B) (s : A -> Prop) : (term1691 A B y s) = (term1773 A B y s).
Proof. exact (TRANS (@lem4923203 A B y s) (@lem4923233 A B y s)). Qed.
Lemma lem4923235 {A B : Type'} (y : B) : (term1698 A B y) = (term1774 A B y).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4923234 A B y s)). Qed.
Lemma lem4923236 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4923237 {A B : Type'} (y : B) : (term1713 A B y) = (term1775 A B y).
Proof. exact (MK_COMB (@lem4923236 A) (@lem4923235 A B y)). Qed.
Lemma lem4923239 {A B : Type'} (P : type1413 A B) : (term814 A B P) = (term815 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem4923240 {A B : Type'} (P : type593 A B) : (term1776 A B P) = (term1777 A B P).
Proof. exact (@lem4923239 (A -> Prop) (type569 A B) P). Qed.
Lemma lem4923241 {A B : Type'} (y : B) : (term1778 A B y) = (term1779 A B y).
Proof. exact (@lem4923240 A B (term1780 A B y)). Qed.
Lemma lem4923242 {A B : Type'} (y : B) (s : A -> Prop) : (term1781 A B y s) = (term1772 A B y s).
Proof. exact (eq_refl (term1781 A B y s)). Qed.
Lemma lem4923243 {A B : Type'} (x : type569 A B) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem4923244 {A B : Type'} (y : B) (s : A -> Prop) (x : type569 A B) : (term1782 A B y s x) = (term1783 A B y s x).
Proof. exact (MK_COMB (@lem4923242 A B y s) (@lem4923243 A B x)). Qed.
Lemma lem4923245 {A B : Type'} (y : B) (x : type569 A B) (s : A -> Prop) : (term1783 A B y s x) = (term1770 A B y x s).
Proof. exact (eq_refl (term1783 A B y s x)). Qed.
Lemma lem4923246 {A B : Type'} (y : B) (x : type569 A B) (s : A -> Prop) : (term1782 A B y s x) = (term1770 A B y x s).
Proof. exact (TRANS (@lem4923244 A B y s x) (@lem4923245 A B y x s)). Qed.
Lemma lem4923247 {A B : Type'} (y : B) (s : A -> Prop) : (term1784 A B y s) = (term1772 A B y s).
Proof. exact (fun_ext (fun x : type569 A B => @lem4923246 A B y x s)). Qed.
Lemma lem4923248 {A B : Type'} : (@ex ((A -> B) -> A)) = (@ex ((A -> B) -> A)).
Proof. exact (eq_refl (@ex ((A -> B) -> A))). Qed.
Lemma lem4923249 {A B : Type'} (y : B) (s : A -> Prop) : (term1785 A B y s) = (term1773 A B y s).
Proof. exact (MK_COMB (@lem4923248 A B) (@lem4923247 A B y s)). Qed.
Lemma lem4923250 {A B : Type'} (y : B) : (term1786 A B y) = (term1774 A B y).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4923249 A B y s)). Qed.
Lemma lem4923251 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4923252 {A B : Type'} (y : B) : (term1778 A B y) = (term1775 A B y).
Proof. exact (MK_COMB (@lem4923251 A) (@lem4923250 A B y)). Qed.
Lemma lem4923253 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4923254 {A B : Type'} (y : B) : (term1787 A B y) = (term1788 A B y).
Proof. exact (MK_COMB (@lem4923253) (@lem4923252 A B y)). Qed.
Lemma lem4923255 {A B : Type'} (y : B) (s : A -> Prop) : (term1781 A B y s) = (term1772 A B y s).
Proof. exact (eq_refl (term1781 A B y s)). Qed.
Lemma lem4923256 {A B : Type'} (x : type631 A B) (s : A -> Prop) : (x s) = (x s).
Proof. exact (eq_refl (x s)). Qed.
Lemma lem4923257 {A B : Type'} (y : B) (x : type631 A B) (s : A -> Prop) : (term1789 A B y x s) = (term1790 A B y x s).
Proof. exact (MK_COMB (@lem4923255 A B y s) (@lem4923256 A B x s)). Qed.
Lemma lem4923258 {A B : Type'} (y : B) (x : type631 A B) (s : A -> Prop) : (term1790 A B y x s) = (term1791 A B y x s).
Proof. exact (eq_refl (term1790 A B y x s)). Qed.
Lemma lem4923259 {A B : Type'} (y : B) (x : type631 A B) (s : A -> Prop) : (term1789 A B y x s) = (term1791 A B y x s).
Proof. exact (TRANS (@lem4923257 A B y x s) (@lem4923258 A B y x s)). Qed.
Lemma lem4923260 {A B : Type'} (y : B) (x : type631 A B) : (term1792 A B y x) = (term1793 A B y x).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4923259 A B y x s)). Qed.
Lemma lem4923261 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4923262 {A B : Type'} (y : B) (x : type631 A B) : (term1794 A B y x) = (term1795 A B y x).
Proof. exact (MK_COMB (@lem4923261 A) (@lem4923260 A B y x)). Qed.
Lemma lem4923263 {A B : Type'} (y : B) : (term1796 A B y) = (term1797 A B y).
Proof. exact (fun_ext (fun x : type631 A B => @lem4923262 A B y x)). Qed.
Lemma lem4923264 {A B : Type'} : (@ex ((A -> Prop) -> (A -> B) -> A)) = (@ex ((A -> Prop) -> (A -> B) -> A)).
Proof. exact (eq_refl (@ex ((A -> Prop) -> (A -> B) -> A))). Qed.
Lemma lem4923265 {A B : Type'} (y : B) : (term1779 A B y) = (term1798 A B y).
Proof. exact (MK_COMB (@lem4923264 A B) (@lem4923263 A B y)). Qed.
Lemma lem4923266 {A B : Type'} (y : B) : ((term1778 A B y) = (term1779 A B y)) = ((term1775 A B y) = (term1798 A B y)).
Proof. exact (MK_COMB (@lem4923254 A B y) (@lem4923265 A B y)). Qed.
Lemma lem4923267 {A B : Type'} (y : B) : (term1775 A B y) = (term1798 A B y).
Proof. exact (EQ_MP (@lem4923266 A B y) (@lem4923241 A B y)). Qed.
Lemma lem4923268 {A B : Type'} (y : B) : (term1713 A B y) = (term1798 A B y).
Proof. exact (TRANS (@lem4923237 A B y) (@lem4923267 A B y)). Qed.
Lemma lem4923269 {A B : Type'} : (term1720 A B) = (term1799 A B).
Proof. exact (fun_ext (fun y : B => @lem4923268 A B y)). Qed.
Lemma lem4923270 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4923271 {A B : Type'} : (term1735 A B) = (term1800 A B).
Proof. exact (MK_COMB (@lem4923270 B) (@lem4923269 A B)). Qed.
Lemma lem4923273 {A B : Type'} (P : type1413 A B) : (term814 A B P) = (term815 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem4923274 {A B : Type'} (P : type1437 A B) : (term1801 A B P) = (term1802 A B P).
Proof. exact (@lem4923273 B (type631 A B) P). Qed.
Lemma lem4923275 {A B : Type'} : (term1803 A B) = (term1804 A B).
Proof. exact (@lem4923274 A B (term1805 A B)). Qed.
Lemma lem4923276 {A B : Type'} (y : B) : (term1806 A B y) = (term1797 A B y).
Proof. exact (eq_refl (term1806 A B y)). Qed.
Lemma lem4923277 {A B : Type'} (x : type631 A B) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem4923278 {A B : Type'} (y : B) (x : type631 A B) : (term1807 A B y x) = (term1808 A B y x).
Proof. exact (MK_COMB (@lem4923276 A B y) (@lem4923277 A B x)). Qed.
Lemma lem4923279 {A B : Type'} (y : B) (x : type631 A B) : (term1808 A B y x) = (term1795 A B y x).
Proof. exact (eq_refl (term1808 A B y x)). Qed.
Lemma lem4923280 {A B : Type'} (y : B) (x : type631 A B) : (term1807 A B y x) = (term1795 A B y x).
Proof. exact (TRANS (@lem4923278 A B y x) (@lem4923279 A B y x)). Qed.
Lemma lem4923281 {A B : Type'} (y : B) : (term1809 A B y) = (term1797 A B y).
Proof. exact (fun_ext (fun x : type631 A B => @lem4923280 A B y x)). Qed.
Lemma lem4923282 {A B : Type'} : (@ex ((A -> Prop) -> (A -> B) -> A)) = (@ex ((A -> Prop) -> (A -> B) -> A)).
Proof. exact (eq_refl (@ex ((A -> Prop) -> (A -> B) -> A))). Qed.
Lemma lem4923283 {A B : Type'} (y : B) : (term1810 A B y) = (term1798 A B y).
Proof. exact (MK_COMB (@lem4923282 A B) (@lem4923281 A B y)). Qed.
Lemma lem4923284 {A B : Type'} : (term1811 A B) = (term1799 A B).
Proof. exact (fun_ext (fun y : B => @lem4923283 A B y)). Qed.
Lemma lem4923285 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4923286 {A B : Type'} : (term1803 A B) = (term1800 A B).
Proof. exact (MK_COMB (@lem4923285 B) (@lem4923284 A B)). Qed.
Lemma lem4923287 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4923288 {A B : Type'} : (term1812 A B) = (term1813 A B).
Proof. exact (MK_COMB (@lem4923287) (@lem4923286 A B)). Qed.
Lemma lem4923289 {A B : Type'} (y : B) : (term1806 A B y) = (term1797 A B y).
Proof. exact (eq_refl (term1806 A B y)). Qed.
Lemma lem4923290 {A B : Type'} (x : type1448 A B) (y : B) : (x y) = (x y).
Proof. exact (eq_refl (x y)). Qed.
Lemma lem4923291 {A B : Type'} (x : type1448 A B) (y : B) : (term1814 A B x y) = (term1815 A B x y).
Proof. exact (MK_COMB (@lem4923289 A B y) (@lem4923290 A B x y)). Qed.
Lemma lem4923292 {A B : Type'} (x : type1448 A B) (y : B) : (term1815 A B x y) = (term1816 A B x y).
Proof. exact (eq_refl (term1815 A B x y)). Qed.
Lemma lem4923293 {A B : Type'} (x : type1448 A B) (y : B) : (term1814 A B x y) = (term1816 A B x y).
Proof. exact (TRANS (@lem4923291 A B x y) (@lem4923292 A B x y)). Qed.
Lemma lem4923294 {A B : Type'} (x : type1448 A B) : (term1817 A B x) = (term1818 A B x).
Proof. exact (fun_ext (fun y : B => @lem4923293 A B x y)). Qed.
Lemma lem4923295 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4923296 {A B : Type'} (x : type1448 A B) : (term1819 A B x) = (term1820 A B x).
Proof. exact (MK_COMB (@lem4923295 B) (@lem4923294 A B x)). Qed.
Lemma lem4923297 {A B : Type'} : (term1821 A B) = (term1822 A B).
Proof. exact (fun_ext (fun x : type1448 A B => @lem4923296 A B x)). Qed.
Lemma lem4923298 {A B : Type'} : (@ex (B -> (A -> Prop) -> (A -> B) -> A)) = (@ex (B -> (A -> Prop) -> (A -> B) -> A)).
Proof. exact (eq_refl (@ex (B -> (A -> Prop) -> (A -> B) -> A))). Qed.
Lemma lem4923299 {A B : Type'} : (term1804 A B) = (term1823 A B).
Proof. exact (MK_COMB (@lem4923298 A B) (@lem4923297 A B)). Qed.
Lemma lem4923300 {A B : Type'} : ((term1803 A B) = (term1804 A B)) = ((term1800 A B) = (term1823 A B)).
Proof. exact (MK_COMB (@lem4923288 A B) (@lem4923299 A B)). Qed.
Lemma lem4923301 {A B : Type'} : (term1800 A B) = (term1823 A B).
Proof. exact (EQ_MP (@lem4923300 A B) (@lem4923275 A B)). Qed.
Lemma lem4923302 {A B : Type'} : (term1735 A B) = (term1823 A B).
Proof. exact (TRANS (@lem4923271 A B) (@lem4923301 A B)). Qed.
Lemma lem4923303 {A B : Type'} : (term1732 A B) = (term1732 A B).
Proof. exact (eq_refl (term1732 A B)). Qed.
Lemma lem4923304 {A B : Type'} : (term1736 A B) = (term1824 A B).
Proof. exact (MK_COMB (@lem4923303 A B) (@lem4923302 A B)). Qed.
Lemma lem4923306 {A : Type'} (P : Prop) (Q : A -> Prop) : (term1631 A P Q) = (term1632 A P Q).
Proof. exact (EQ_MP (@lem18929 A P Q) (@lem18928 A P Q)). Qed.
Lemma lem4923307 {A B : Type'} (P : Prop) (Q : type719 A B) : (term1825 A B P Q) = (term1826 A B P Q).
Proof. exact (@lem4923306 (type1448 A B) P Q). Qed.
Lemma lem4923308 {A B : Type'} : (term1827 A B) = (term1828 A B).
Proof. exact (@lem4923307 A B (term1730 A B) (term1822 A B)). Qed.
Lemma lem4923309 {A B : Type'} (x : type1448 A B) : (term1829 A B x) = (term1820 A B x).
Proof. exact (eq_refl (term1829 A B x)). Qed.
Lemma lem4923310 {A B : Type'} : (term1830 A B) = (term1822 A B).
Proof. exact (fun_ext (fun x : type1448 A B => @lem4923309 A B x)). Qed.
Lemma lem4923311 {A B : Type'} : (@ex (B -> (A -> Prop) -> (A -> B) -> A)) = (@ex (B -> (A -> Prop) -> (A -> B) -> A)).
Proof. exact (eq_refl (@ex (B -> (A -> Prop) -> (A -> B) -> A))). Qed.
Lemma lem4923312 {A B : Type'} : (term1831 A B) = (term1823 A B).
Proof. exact (MK_COMB (@lem4923311 A B) (@lem4923310 A B)). Qed.
Lemma lem4923313 {A B : Type'} : (term1732 A B) = (term1732 A B).
Proof. exact (eq_refl (term1732 A B)). Qed.
Lemma lem4923314 {A B : Type'} : (term1827 A B) = (term1824 A B).
Proof. exact (MK_COMB (@lem4923313 A B) (@lem4923312 A B)). Qed.
Lemma lem4923315 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4923316 {A B : Type'} : (term1832 A B) = (term1833 A B).
Proof. exact (MK_COMB (@lem4923315) (@lem4923314 A B)). Qed.
Lemma lem4923317 {A B : Type'} (x : type1448 A B) : (term1829 A B x) = (term1820 A B x).
Proof. exact (eq_refl (term1829 A B x)). Qed.
Lemma lem4923318 {A B : Type'} : (term1732 A B) = (term1732 A B).
Proof. exact (eq_refl (term1732 A B)). Qed.
Lemma lem4923319 {A B : Type'} (x : type1448 A B) : (term1834 A B x) = (term1835 A B x).
Proof. exact (MK_COMB (@lem4923318 A B) (@lem4923317 A B x)). Qed.
Lemma lem4923320 {A B : Type'} : (term1836 A B) = (term1837 A B).
Proof. exact (fun_ext (fun x : type1448 A B => @lem4923319 A B x)). Qed.
Lemma lem4923321 {A B : Type'} : (@ex (B -> (A -> Prop) -> (A -> B) -> A)) = (@ex (B -> (A -> Prop) -> (A -> B) -> A)).
Proof. exact (eq_refl (@ex (B -> (A -> Prop) -> (A -> B) -> A))). Qed.
Lemma lem4923322 {A B : Type'} : (term1828 A B) = (term1838 A B).
Proof. exact (MK_COMB (@lem4923321 A B) (@lem4923320 A B)). Qed.
Lemma lem4923323 {A B : Type'} : ((term1827 A B) = (term1828 A B)) = ((term1824 A B) = (term1838 A B)).
Proof. exact (MK_COMB (@lem4923316 A B) (@lem4923322 A B)). Qed.
Lemma lem4923324 {A B : Type'} : (term1824 A B) = (term1838 A B).
Proof. exact (EQ_MP (@lem4923323 A B) (@lem4923308 A B)). Qed.
Lemma lem4923325 {A B : Type'} : (term1736 A B) = (term1838 A B).
Proof. exact (TRANS (@lem4923304 A B) (@lem4923324 A B)). Qed.
Lemma lem4923326 {A B : Type'} : (term1670 A B) = (term1838 A B).
Proof. exact (TRANS (@lem4923180 A B) (@lem4923325 A B)). Qed.
Lemma lem4923327 {A B : Type'} : (term1324 A B) = (term1838 A B).
Proof. exact (TRANS (@lem4922483 A B) (@lem4923326 A B)). Qed.
Lemma lem4923328 {A B : Type'} (h1 : term1324 A B) : term1838 A B.
Proof. exact (EQ_MP (@lem4923327 A B) (@lem4921350 A B h1)). Qed.
Lemma lem4923339 {B : Type'} (y : B) (f : B -> B) (x : B) (s : B -> Prop) : (term1453 B y f x s) = (term1454 B y f x s).
Proof. exact (@lem17045 (y = (f x)) (@IN B x s)). Qed.
Lemma lem4923342 {B : Type'} (y : B) (f : B -> B) (x : B) (s : B -> Prop) : (term1421 B y f x s) = (term1421 B y f x s).
Proof. exact (eq_refl (term1421 B y f x s)). Qed.
Lemma lem4923343 {B : Type'} (P : B -> Prop) : (term847 B P) = (term848 B P).
Proof. exact (@lem18394 B P). Qed.
Lemma lem4923344 {B : Type'} (y : B) (f : B -> B) (s : B -> Prop) : (term1455 B y f s) = (term1456 B y f s).
Proof. exact (@lem4923343 B (term1422 B y f s)). Qed.
Lemma lem4923345 {B : Type'} (y : B) (f : B -> B) (x : B) (s : B -> Prop) : (term1457 B y f s x) = (term1421 B y f x s).
Proof. exact (eq_refl (term1457 B y f s x)). Qed.
Lemma lem4923346 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem4923347 {B : Type'} (y : B) (f : B -> B) (x : B) (s : B -> Prop) : (term1458 B y f s x) = (term1453 B y f x s).
Proof. exact (MK_COMB (@lem4923346) (@lem4923345 B y f x s)). Qed.
Lemma lem4923348 {B : Type'} (y : B) (f : B -> B) (x : B) (s : B -> Prop) : (term1458 B y f s x) = (term1454 B y f x s).
Proof. exact (TRANS (@lem4923347 B y f x s) (@lem4923339 B y f x s)). Qed.
Lemma lem4923349 {B : Type'} (y : B) (f : B -> B) (s : B -> Prop) : (term1459 B y f s) = (term1460 B y f s).
Proof. exact (fun_ext (fun x : B => @lem4923348 B y f x s)). Qed.
Lemma lem4923350 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4923351 {B : Type'} (y : B) (f : B -> B) (s : B -> Prop) : (term1456 B y f s) = (term1461 B y f s).
Proof. exact (MK_COMB (@lem4923350 B) (@lem4923349 B y f s)). Qed.
Lemma lem4923352 {B : Type'} (y : B) (f : B -> B) (s : B -> Prop) : (term1455 B y f s) = (term1461 B y f s).
Proof. exact (TRANS (@lem4923344 B y f s) (@lem4923351 B y f s)). Qed.
Lemma lem4923353 {B : Type'} (y : B) (f : B -> B) (s : B -> Prop) : (term1422 B y f s) = (term1422 B y f s).
Proof. exact (fun_ext (fun x : B => @lem4923342 B y f x s)). Qed.
Lemma lem4923354 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem4923355 {B : Type'} (y : B) (f : B -> B) (s : B -> Prop) : (term1423 B y f s) = (term1423 B y f s).
Proof. exact (MK_COMB (@lem4923354 B) (@lem4923353 B y f s)). Qed.
Lemma lem4923357 {B : Type'} (y : B) (f : B -> B) (s : B -> Prop) : (term1462 B y f s) = (term1462 B y f s).
Proof. exact (eq_refl (term1462 B y f s)). Qed.
Lemma lem4923358 {B : Type'} (y : B) (f : B -> B) (s : B -> Prop) : (term1463 B y f s) = (term1463 B y f s).
Proof. exact (MK_COMB (@lem4923357 B y f s) (@lem4923355 B y f s)). Qed.
Lemma lem4923360 {B : Type'} (y : B) (f : B -> B) (s : B -> Prop) : (term1464 B y f s) = (term1464 B y f s).
Proof. exact (eq_refl (term1464 B y f s)). Qed.
Lemma lem4923361 {B : Type'} (y : B) (f : B -> B) (s : B -> Prop) : (term1465 B y f s) = (term1466 B y f s).
Proof. exact (MK_COMB (@lem4923360 B y f s) (@lem4923352 B y f s)). Qed.
Lemma lem4923362 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4923363 {B : Type'} (y : B) (f : B -> B) (s : B -> Prop) : (term1467 B y f s) = (term1468 B y f s).
Proof. exact (MK_COMB (@lem4923362) (@lem4923361 B y f s)). Qed.
Lemma lem4923364 {B : Type'} (y : B) (f : B -> B) (s : B -> Prop) : (term1469 B y f s) = (term1470 B y f s).
Proof. exact (MK_COMB (@lem4923363 B y f s) (@lem4923358 B y f s)). Qed.
Lemma lem4923365 {B : Type'} (y : B) (f : B -> B) (s : B -> Prop) : ((term1425 B y f s) = (term1423 B y f s)) = (term1469 B y f s).
Proof. exact (@lem17784 (term1425 B y f s) (term1423 B y f s)). Qed.
Lemma lem4923366 {B : Type'} (y : B) (f : B -> B) (s : B -> Prop) : ((term1425 B y f s) = (term1423 B y f s)) = (term1470 B y f s).
Proof. exact (TRANS (@lem4923365 B y f s) (@lem4923364 B y f s)). Qed.
Lemma lem4923367 {B : Type'} (y : B) (s : B -> Prop) : (term1426 B y s) = (term1471 B y s).
Proof. exact (fun_ext (fun f : B -> B => @lem4923366 B y f s)). Qed.
Lemma lem4923368 {B : Type'} : (@all (B -> B)) = (@all (B -> B)).
Proof. exact (eq_refl (@all (B -> B))). Qed.
Lemma lem4923369 {B : Type'} (y : B) (s : B -> Prop) : (term1427 B y s) = (term1472 B y s).
Proof. exact (MK_COMB (@lem4923368 B) (@lem4923367 B y s)). Qed.
Lemma lem4923370 {B : Type'} (y : B) : (term1428 B y) = (term1473 B y).
Proof. exact (fun_ext (fun s : B -> Prop => @lem4923369 B y s)). Qed.
Lemma lem4923371 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4923372 {B : Type'} (y : B) : (term1429 B y) = (term1474 B y).
Proof. exact (MK_COMB (@lem4923371 B) (@lem4923370 B y)). Qed.
Lemma lem4923373 {B : Type'} : (term1430 B) = (term1475 B).
Proof. exact (fun_ext (fun y : B => @lem4923372 B y)). Qed.
Lemma lem4923374 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4923375 {B : Type'} : (term1323 B) = (term1476 B).
Proof. exact (MK_COMB (@lem4923374 B) (@lem4923373 B)). Qed.
Lemma lem4923385 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term1130 A P Q) = (term1131 A P Q).
Proof. exact (EQ_MP (@lem18953 A P Q) (@lem18952 A P Q)). Qed.
Lemma lem4923386 {B : Type'} (P : type488 B) (Q : type488 B) : (term1477 B P Q) = (term1478 B P Q).
Proof. exact (@lem4923385 (B -> B) P Q). Qed.
Lemma lem4923387 {B : Type'} (y : B) (s : B -> Prop) : (term1479 B y s) = (term1480 B y s).
Proof. exact (@lem4923386 B (term1481 B y s) (term1482 B y s)). Qed.
Lemma lem4923388 {B : Type'} (y : B) (f : B -> B) (s : B -> Prop) : (term1483 B y s f) = (term1466 B y f s).
Proof. exact (eq_refl (term1483 B y s f)). Qed.
Lemma lem4923389 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4923390 {B : Type'} (y : B) (f : B -> B) (s : B -> Prop) : (term1484 B y s f) = (term1468 B y f s).
Proof. exact (MK_COMB (@lem4923389) (@lem4923388 B y f s)). Qed.
Lemma lem4923391 {B : Type'} (y : B) (f : B -> B) (s : B -> Prop) : (term1485 B y s f) = (term1463 B y f s).
Proof. exact (eq_refl (term1485 B y s f)). Qed.
Lemma lem4923392 {B : Type'} (y : B) (f : B -> B) (s : B -> Prop) : (term1486 B y s f) = (term1470 B y f s).
Proof. exact (MK_COMB (@lem4923390 B y f s) (@lem4923391 B y f s)). Qed.
Lemma lem4923393 {B : Type'} (y : B) (s : B -> Prop) : (term1487 B y s) = (term1471 B y s).
Proof. exact (fun_ext (fun f : B -> B => @lem4923392 B y f s)). Qed.
Lemma lem4923394 {B : Type'} : (@all (B -> B)) = (@all (B -> B)).
Proof. exact (eq_refl (@all (B -> B))). Qed.
Lemma lem4923395 {B : Type'} (y : B) (s : B -> Prop) : (term1479 B y s) = (term1472 B y s).
Proof. exact (MK_COMB (@lem4923394 B) (@lem4923393 B y s)). Qed.
Lemma lem4923396 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4923397 {B : Type'} (y : B) (s : B -> Prop) : (term1488 B y s) = (term1489 B y s).
Proof. exact (MK_COMB (@lem4923396) (@lem4923395 B y s)). Qed.
Lemma lem4923398 {B : Type'} (y : B) (f : B -> B) (s : B -> Prop) : (term1483 B y s f) = (term1466 B y f s).
Proof. exact (eq_refl (term1483 B y s f)). Qed.
Lemma lem4923399 {B : Type'} (y : B) (s : B -> Prop) : (term1490 B y s) = (term1481 B y s).
Proof. exact (fun_ext (fun f : B -> B => @lem4923398 B y f s)). Qed.
Lemma lem4923400 {B : Type'} : (@all (B -> B)) = (@all (B -> B)).
Proof. exact (eq_refl (@all (B -> B))). Qed.
Lemma lem4923401 {B : Type'} (y : B) (s : B -> Prop) : (term1491 B y s) = (term1492 B y s).
Proof. exact (MK_COMB (@lem4923400 B) (@lem4923399 B y s)). Qed.
Lemma lem4923402 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4923403 {B : Type'} (y : B) (s : B -> Prop) : (term1493 B y s) = (term1494 B y s).
Proof. exact (MK_COMB (@lem4923402) (@lem4923401 B y s)). Qed.
Lemma lem4923404 {B : Type'} (y : B) (f : B -> B) (s : B -> Prop) : (term1485 B y s f) = (term1463 B y f s).
Proof. exact (eq_refl (term1485 B y s f)). Qed.
Lemma lem4923405 {B : Type'} (y : B) (s : B -> Prop) : (term1495 B y s) = (term1482 B y s).
Proof. exact (fun_ext (fun f : B -> B => @lem4923404 B y f s)). Qed.
Lemma lem4923406 {B : Type'} : (@all (B -> B)) = (@all (B -> B)).
Proof. exact (eq_refl (@all (B -> B))). Qed.
Lemma lem4923407 {B : Type'} (y : B) (s : B -> Prop) : (term1496 B y s) = (term1497 B y s).
Proof. exact (MK_COMB (@lem4923406 B) (@lem4923405 B y s)). Qed.
Lemma lem4923408 {B : Type'} (y : B) (s : B -> Prop) : (term1480 B y s) = (term1498 B y s).
Proof. exact (MK_COMB (@lem4923403 B y s) (@lem4923407 B y s)). Qed.
Lemma lem4923409 {B : Type'} (y : B) (s : B -> Prop) : ((term1479 B y s) = (term1480 B y s)) = ((term1472 B y s) = (term1498 B y s)).
Proof. exact (MK_COMB (@lem4923397 B y s) (@lem4923408 B y s)). Qed.
Lemma lem4923410 {B : Type'} (y : B) (s : B -> Prop) : (term1472 B y s) = (term1498 B y s).
Proof. exact (EQ_MP (@lem4923409 B y s) (@lem4923387 B y s)). Qed.
Lemma lem4923603 {B : Type'} (y : B) : (term1473 B y) = (term1499 B y).
Proof. exact (fun_ext (fun s : B -> Prop => @lem4923410 B y s)). Qed.
Lemma lem4923604 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4923605 {B : Type'} (y : B) : (term1474 B y) = (term1500 B y).
Proof. exact (MK_COMB (@lem4923604 B) (@lem4923603 B y)). Qed.
Lemma lem4923607 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term1130 A P Q) = (term1131 A P Q).
Proof. exact (EQ_MP (@lem18953 A P Q) (@lem18952 A P Q)). Qed.
Lemma lem4923608 {B : Type'} (P : type686 B) (Q : type686 B) : (term1132 B P Q) = (term1133 B P Q).
Proof. exact (@lem4923607 (B -> Prop) P Q). Qed.
Lemma lem4923609 {B : Type'} (y : B) : (term1501 B y) = (term1502 B y).
Proof. exact (@lem4923608 B (term1503 B y) (term1504 B y)). Qed.
Lemma lem4923610 {B : Type'} (y : B) (s : B -> Prop) : (term1505 B y s) = (term1492 B y s).
Proof. exact (eq_refl (term1505 B y s)). Qed.
Lemma lem4923611 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4923612 {B : Type'} (y : B) (s : B -> Prop) : (term1506 B y s) = (term1494 B y s).
Proof. exact (MK_COMB (@lem4923611) (@lem4923610 B y s)). Qed.
Lemma lem4923613 {B : Type'} (y : B) (s : B -> Prop) : (term1507 B y s) = (term1497 B y s).
Proof. exact (eq_refl (term1507 B y s)). Qed.
Lemma lem4923614 {B : Type'} (y : B) (s : B -> Prop) : (term1508 B y s) = (term1498 B y s).
Proof. exact (MK_COMB (@lem4923612 B y s) (@lem4923613 B y s)). Qed.
Lemma lem4923615 {B : Type'} (y : B) : (term1509 B y) = (term1499 B y).
Proof. exact (fun_ext (fun s : B -> Prop => @lem4923614 B y s)). Qed.
Lemma lem4923616 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4923617 {B : Type'} (y : B) : (term1501 B y) = (term1500 B y).
Proof. exact (MK_COMB (@lem4923616 B) (@lem4923615 B y)). Qed.
Lemma lem4923618 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4923619 {B : Type'} (y : B) : (term1510 B y) = (term1511 B y).
Proof. exact (MK_COMB (@lem4923618) (@lem4923617 B y)). Qed.
Lemma lem4923620 {B : Type'} (y : B) (s : B -> Prop) : (term1505 B y s) = (term1492 B y s).
Proof. exact (eq_refl (term1505 B y s)). Qed.
Lemma lem4923621 {B : Type'} (y : B) : (term1512 B y) = (term1503 B y).
Proof. exact (fun_ext (fun s : B -> Prop => @lem4923620 B y s)). Qed.
Lemma lem4923622 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4923623 {B : Type'} (y : B) : (term1513 B y) = (term1514 B y).
Proof. exact (MK_COMB (@lem4923622 B) (@lem4923621 B y)). Qed.
Lemma lem4923624 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4923625 {B : Type'} (y : B) : (term1515 B y) = (term1516 B y).
Proof. exact (MK_COMB (@lem4923624) (@lem4923623 B y)). Qed.
Lemma lem4923626 {B : Type'} (y : B) (s : B -> Prop) : (term1507 B y s) = (term1497 B y s).
Proof. exact (eq_refl (term1507 B y s)). Qed.
Lemma lem4923627 {B : Type'} (y : B) : (term1517 B y) = (term1504 B y).
Proof. exact (fun_ext (fun s : B -> Prop => @lem4923626 B y s)). Qed.
Lemma lem4923628 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4923629 {B : Type'} (y : B) : (term1518 B y) = (term1519 B y).
Proof. exact (MK_COMB (@lem4923628 B) (@lem4923627 B y)). Qed.
Lemma lem4923630 {B : Type'} (y : B) : (term1502 B y) = (term1520 B y).
Proof. exact (MK_COMB (@lem4923625 B y) (@lem4923629 B y)). Qed.
Lemma lem4923631 {B : Type'} (y : B) : ((term1501 B y) = (term1502 B y)) = ((term1500 B y) = (term1520 B y)).
Proof. exact (MK_COMB (@lem4923619 B y) (@lem4923630 B y)). Qed.
Lemma lem4923632 {B : Type'} (y : B) : (term1500 B y) = (term1520 B y).
Proof. exact (EQ_MP (@lem4923631 B y) (@lem4923609 B y)). Qed.
Lemma lem4923833 {B : Type'} (y : B) : (term1474 B y) = (term1520 B y).
Proof. exact (TRANS (@lem4923605 B y) (@lem4923632 B y)). Qed.
Lemma lem4923834 {B : Type'} : (term1475 B) = (term1521 B).
Proof. exact (fun_ext (fun y : B => @lem4923833 B y)). Qed.
Lemma lem4923835 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4923836 {B : Type'} : (term1476 B) = (term1522 B).
Proof. exact (MK_COMB (@lem4923835 B) (@lem4923834 B)). Qed.
Lemma lem4923838 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term1130 A P Q) = (term1131 A P Q).
Proof. exact (EQ_MP (@lem18953 A P Q) (@lem18952 A P Q)). Qed.
Lemma lem4923839 {B : Type'} (P : B -> Prop) (Q : B -> Prop) : (term1130 B P Q) = (term1131 B P Q).
Proof. exact (@lem4923838 B P Q). Qed.
Lemma lem4923840 {B : Type'} : (term1523 B) = (term1524 B).
Proof. exact (@lem4923839 B (term1525 B) (term1526 B)). Qed.
Lemma lem4923841 {B : Type'} (y : B) : (term1527 B y) = (term1514 B y).
Proof. exact (eq_refl (term1527 B y)). Qed.
Lemma lem4923842 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4923843 {B : Type'} (y : B) : (term1528 B y) = (term1516 B y).
Proof. exact (MK_COMB (@lem4923842) (@lem4923841 B y)). Qed.
Lemma lem4923844 {B : Type'} (y : B) : (term1529 B y) = (term1519 B y).
Proof. exact (eq_refl (term1529 B y)). Qed.
Lemma lem4923845 {B : Type'} (y : B) : (term1530 B y) = (term1520 B y).
Proof. exact (MK_COMB (@lem4923843 B y) (@lem4923844 B y)). Qed.
Lemma lem4923846 {B : Type'} : (term1531 B) = (term1521 B).
Proof. exact (fun_ext (fun y : B => @lem4923845 B y)). Qed.
Lemma lem4923847 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4923848 {B : Type'} : (term1523 B) = (term1522 B).
Proof. exact (MK_COMB (@lem4923847 B) (@lem4923846 B)). Qed.
Lemma lem4923849 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4923850 {B : Type'} : (term1532 B) = (term1533 B).
Proof. exact (MK_COMB (@lem4923849) (@lem4923848 B)). Qed.
Lemma lem4923851 {B : Type'} (y : B) : (term1527 B y) = (term1514 B y).
Proof. exact (eq_refl (term1527 B y)). Qed.
Lemma lem4923852 {B : Type'} : (term1534 B) = (term1525 B).
Proof. exact (fun_ext (fun y : B => @lem4923851 B y)). Qed.
Lemma lem4923853 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4923854 {B : Type'} : (term1535 B) = (term1536 B).
Proof. exact (MK_COMB (@lem4923853 B) (@lem4923852 B)). Qed.
Lemma lem4923855 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4923856 {B : Type'} : (term1537 B) = (term1538 B).
Proof. exact (MK_COMB (@lem4923855) (@lem4923854 B)). Qed.
Lemma lem4923857 {B : Type'} (y : B) : (term1529 B y) = (term1519 B y).
Proof. exact (eq_refl (term1529 B y)). Qed.
Lemma lem4923858 {B : Type'} : (term1539 B) = (term1526 B).
Proof. exact (fun_ext (fun y : B => @lem4923857 B y)). Qed.
Lemma lem4923859 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4923860 {B : Type'} : (term1540 B) = (term1541 B).
Proof. exact (MK_COMB (@lem4923859 B) (@lem4923858 B)). Qed.
Lemma lem4923861 {B : Type'} : (term1524 B) = (term1542 B).
Proof. exact (MK_COMB (@lem4923856 B) (@lem4923860 B)). Qed.
Lemma lem4923862 {B : Type'} : ((term1523 B) = (term1524 B)) = ((term1522 B) = (term1542 B)).
Proof. exact (MK_COMB (@lem4923850 B) (@lem4923861 B)). Qed.
Lemma lem4923863 {B : Type'} : (term1522 B) = (term1542 B).
Proof. exact (EQ_MP (@lem4923862 B) (@lem4923840 B)). Qed.
Lemma lem4924072 {B : Type'} : (term1476 B) = (term1542 B).
Proof. exact (TRANS (@lem4923836 B) (@lem4923863 B)). Qed.
Lemma lem4924074 {A : Type'} (P : Prop) (Q : A -> Prop) : (term797 A P Q) = (term798 A P Q).
Proof. exact (EQ_MP (@lem18911 A P Q) (@lem18910 A P Q)). Qed.
Lemma lem4924075 {B : Type'} (P : Prop) (Q : B -> Prop) : (term797 B P Q) = (term798 B P Q).
Proof. exact (@lem4924074 B P Q). Qed.
Lemma lem4924076 {B : Type'} (y : B) (f : B -> B) (s : B -> Prop) : (term1543 B y f s) = (term1544 B y f s).
Proof. exact (@lem4924075 B (term1545 B y f s) (term1422 B y f s)). Qed.
Lemma lem4924077 {B : Type'} (y : B) (f : B -> B) (x : B) (s : B -> Prop) : (term1457 B y f s x) = (term1421 B y f x s).
Proof. exact (eq_refl (term1457 B y f s x)). Qed.
Lemma lem4924078 {B : Type'} (y : B) (f : B -> B) (s : B -> Prop) : (term1546 B y f s) = (term1422 B y f s).
Proof. exact (fun_ext (fun x : B => @lem4924077 B y f x s)). Qed.
Lemma lem4924079 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem4924080 {B : Type'} (y : B) (f : B -> B) (s : B -> Prop) : (term1547 B y f s) = (term1423 B y f s).
Proof. exact (MK_COMB (@lem4924079 B) (@lem4924078 B y f s)). Qed.
Lemma lem4924081 {B : Type'} (y : B) (f : B -> B) (s : B -> Prop) : (term1462 B y f s) = (term1462 B y f s).
Proof. exact (eq_refl (term1462 B y f s)). Qed.
Lemma lem4924082 {B : Type'} (y : B) (f : B -> B) (s : B -> Prop) : (term1543 B y f s) = (term1463 B y f s).
Proof. exact (MK_COMB (@lem4924081 B y f s) (@lem4924080 B y f s)). Qed.
Lemma lem4924083 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4924084 {B : Type'} (y : B) (f : B -> B) (s : B -> Prop) : (term1548 B y f s) = (term1549 B y f s).
Proof. exact (MK_COMB (@lem4924083) (@lem4924082 B y f s)). Qed.
Lemma lem4924085 {B : Type'} (y : B) (f : B -> B) (x : B) (s : B -> Prop) : (term1457 B y f s x) = (term1421 B y f x s).
Proof. exact (eq_refl (term1457 B y f s x)). Qed.
Lemma lem4924086 {B : Type'} (y : B) (f : B -> B) (s : B -> Prop) : (term1462 B y f s) = (term1462 B y f s).
Proof. exact (eq_refl (term1462 B y f s)). Qed.
Lemma lem4924087 {B : Type'} (y : B) (f : B -> B) (x : B) (s : B -> Prop) : (term1550 B y f s x) = (term1551 B y f x s).
Proof. exact (MK_COMB (@lem4924086 B y f s) (@lem4924085 B y f x s)). Qed.
Lemma lem4924088 {B : Type'} (y : B) (f : B -> B) (s : B -> Prop) : (term1552 B y f s) = (term1553 B y f s).
Proof. exact (fun_ext (fun x : B => @lem4924087 B y f x s)). Qed.
Lemma lem4924089 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem4924090 {B : Type'} (y : B) (f : B -> B) (s : B -> Prop) : (term1544 B y f s) = (term1554 B y f s).
Proof. exact (MK_COMB (@lem4924089 B) (@lem4924088 B y f s)). Qed.
Lemma lem4924091 {B : Type'} (y : B) (f : B -> B) (s : B -> Prop) : ((term1543 B y f s) = (term1544 B y f s)) = ((term1463 B y f s) = (term1554 B y f s)).
Proof. exact (MK_COMB (@lem4924084 B y f s) (@lem4924090 B y f s)). Qed.
Lemma lem4924092 {B : Type'} (y : B) (f : B -> B) (s : B -> Prop) : (term1463 B y f s) = (term1554 B y f s).
Proof. exact (EQ_MP (@lem4924091 B y f s) (@lem4924076 B y f s)). Qed.
Lemma lem4924093 {B : Type'} (y : B) (s : B -> Prop) : (term1482 B y s) = (term1555 B y s).
Proof. exact (fun_ext (fun f : B -> B => @lem4924092 B y f s)). Qed.
Lemma lem4924094 {B : Type'} : (@all (B -> B)) = (@all (B -> B)).
Proof. exact (eq_refl (@all (B -> B))). Qed.
Lemma lem4924095 {B : Type'} (y : B) (s : B -> Prop) : (term1497 B y s) = (term1556 B y s).
Proof. exact (MK_COMB (@lem4924094 B) (@lem4924093 B y s)). Qed.
Lemma lem4924097 {A B : Type'} (P : type1413 A B) : (term814 A B P) = (term815 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem4924098 {B : Type'} (P : type486 B) : (term1557 B P) = (term1558 B P).
Proof. exact (@lem4924097 (B -> B) B P). Qed.
Lemma lem4924099 {B : Type'} (y : B) (s : B -> Prop) : (term1559 B y s) = (term1560 B y s).
Proof. exact (@lem4924098 B (term1561 B y s)). Qed.
Lemma lem4924100 {B : Type'} (y : B) (f : B -> B) (s : B -> Prop) : (term1562 B y s f) = (term1553 B y f s).
Proof. exact (eq_refl (term1562 B y s f)). Qed.
Lemma lem4924101 {B : Type'} (x : B) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem4924102 {B : Type'} (y : B) (f : B -> B) (s : B -> Prop) (x : B) : (term1563 B y s f x) = (term1564 B y f s x).
Proof. exact (MK_COMB (@lem4924100 B y f s) (@lem4924101 B x)). Qed.
Lemma lem4924103 {B : Type'} (y : B) (f : B -> B) (x : B) (s : B -> Prop) : (term1564 B y f s x) = (term1551 B y f x s).
Proof. exact (eq_refl (term1564 B y f s x)). Qed.
Lemma lem4924104 {B : Type'} (y : B) (f : B -> B) (x : B) (s : B -> Prop) : (term1563 B y s f x) = (term1551 B y f x s).
Proof. exact (TRANS (@lem4924102 B y f s x) (@lem4924103 B y f x s)). Qed.
Lemma lem4924105 {B : Type'} (y : B) (f : B -> B) (s : B -> Prop) : (term1565 B y s f) = (term1553 B y f s).
Proof. exact (fun_ext (fun x : B => @lem4924104 B y f x s)). Qed.
Lemma lem4924106 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem4924107 {B : Type'} (y : B) (f : B -> B) (s : B -> Prop) : (term1566 B y s f) = (term1554 B y f s).
Proof. exact (MK_COMB (@lem4924106 B) (@lem4924105 B y f s)). Qed.
Lemma lem4924108 {B : Type'} (y : B) (s : B -> Prop) : (term1567 B y s) = (term1555 B y s).
Proof. exact (fun_ext (fun f : B -> B => @lem4924107 B y f s)). Qed.
Lemma lem4924109 {B : Type'} : (@all (B -> B)) = (@all (B -> B)).
Proof. exact (eq_refl (@all (B -> B))). Qed.
Lemma lem4924110 {B : Type'} (y : B) (s : B -> Prop) : (term1559 B y s) = (term1556 B y s).
Proof. exact (MK_COMB (@lem4924109 B) (@lem4924108 B y s)). Qed.
Lemma lem4924111 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4924112 {B : Type'} (y : B) (s : B -> Prop) : (term1568 B y s) = (term1569 B y s).
Proof. exact (MK_COMB (@lem4924111) (@lem4924110 B y s)). Qed.
Lemma lem4924113 {B : Type'} (y : B) (f : B -> B) (s : B -> Prop) : (term1562 B y s f) = (term1553 B y f s).
Proof. exact (eq_refl (term1562 B y s f)). Qed.
Lemma lem4924114 {B : Type'} (x : type487 B) (f : B -> B) : (x f) = (x f).
Proof. exact (eq_refl (x f)). Qed.
Lemma lem4924115 {B : Type'} (y : B) (s : B -> Prop) (x : type487 B) (f : B -> B) : (term1570 B y s x f) = (term1571 B y s x f).
Proof. exact (MK_COMB (@lem4924113 B y f s) (@lem4924114 B x f)). Qed.
Lemma lem4924116 {B : Type'} (y : B) (x : type487 B) (f : B -> B) (s : B -> Prop) : (term1571 B y s x f) = (term1572 B y x f s).
Proof. exact (eq_refl (term1571 B y s x f)). Qed.
Lemma lem4924117 {B : Type'} (y : B) (x : type487 B) (f : B -> B) (s : B -> Prop) : (term1570 B y s x f) = (term1572 B y x f s).
Proof. exact (TRANS (@lem4924115 B y s x f) (@lem4924116 B y x f s)). Qed.
Lemma lem4924118 {B : Type'} (y : B) (x : type487 B) (s : B -> Prop) : (term1573 B y s x) = (term1574 B y x s).
Proof. exact (fun_ext (fun f : B -> B => @lem4924117 B y x f s)). Qed.
Lemma lem4924119 {B : Type'} : (@all (B -> B)) = (@all (B -> B)).
Proof. exact (eq_refl (@all (B -> B))). Qed.
Lemma lem4924120 {B : Type'} (y : B) (x : type487 B) (s : B -> Prop) : (term1575 B y s x) = (term1576 B y x s).
Proof. exact (MK_COMB (@lem4924119 B) (@lem4924118 B y x s)). Qed.
Lemma lem4924121 {B : Type'} (y : B) (s : B -> Prop) : (term1577 B y s) = (term1578 B y s).
Proof. exact (fun_ext (fun x : type487 B => @lem4924120 B y x s)). Qed.
Lemma lem4924122 {B : Type'} : (@ex ((B -> B) -> B)) = (@ex ((B -> B) -> B)).
Proof. exact (eq_refl (@ex ((B -> B) -> B))). Qed.
Lemma lem4924123 {B : Type'} (y : B) (s : B -> Prop) : (term1560 B y s) = (term1579 B y s).
Proof. exact (MK_COMB (@lem4924122 B) (@lem4924121 B y s)). Qed.
Lemma lem4924124 {B : Type'} (y : B) (s : B -> Prop) : ((term1559 B y s) = (term1560 B y s)) = ((term1556 B y s) = (term1579 B y s)).
Proof. exact (MK_COMB (@lem4924112 B y s) (@lem4924123 B y s)). Qed.
Lemma lem4924125 {B : Type'} (y : B) (s : B -> Prop) : (term1556 B y s) = (term1579 B y s).
Proof. exact (EQ_MP (@lem4924124 B y s) (@lem4924099 B y s)). Qed.
Lemma lem4924126 {B : Type'} (y : B) (s : B -> Prop) : (term1497 B y s) = (term1579 B y s).
Proof. exact (TRANS (@lem4924095 B y s) (@lem4924125 B y s)). Qed.
Lemma lem4924127 {B : Type'} (y : B) : (term1504 B y) = (term1580 B y).
Proof. exact (fun_ext (fun s : B -> Prop => @lem4924126 B y s)). Qed.
Lemma lem4924128 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4924129 {B : Type'} (y : B) : (term1519 B y) = (term1581 B y).
Proof. exact (MK_COMB (@lem4924128 B) (@lem4924127 B y)). Qed.
Lemma lem4924131 {A B : Type'} (P : type1413 A B) : (term814 A B P) = (term815 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem4924132 {B : Type'} (P : type587 B) : (term1582 B P) = (term1583 B P).
Proof. exact (@lem4924131 (B -> Prop) (type487 B) P). Qed.
Lemma lem4924133 {B : Type'} (y : B) : (term1584 B y) = (term1585 B y).
Proof. exact (@lem4924132 B (term1586 B y)). Qed.
Lemma lem4924134 {B : Type'} (y : B) (s : B -> Prop) : (term1587 B y s) = (term1578 B y s).
Proof. exact (eq_refl (term1587 B y s)). Qed.
Lemma lem4924135 {B : Type'} (x : type487 B) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem4924136 {B : Type'} (y : B) (s : B -> Prop) (x : type487 B) : (term1588 B y s x) = (term1589 B y s x).
Proof. exact (MK_COMB (@lem4924134 B y s) (@lem4924135 B x)). Qed.
Lemma lem4924137 {B : Type'} (y : B) (x : type487 B) (s : B -> Prop) : (term1589 B y s x) = (term1576 B y x s).
Proof. exact (eq_refl (term1589 B y s x)). Qed.
Lemma lem4924138 {B : Type'} (y : B) (x : type487 B) (s : B -> Prop) : (term1588 B y s x) = (term1576 B y x s).
Proof. exact (TRANS (@lem4924136 B y s x) (@lem4924137 B y x s)). Qed.
Lemma lem4924139 {B : Type'} (y : B) (s : B -> Prop) : (term1590 B y s) = (term1578 B y s).
Proof. exact (fun_ext (fun x : type487 B => @lem4924138 B y x s)). Qed.
Lemma lem4924140 {B : Type'} : (@ex ((B -> B) -> B)) = (@ex ((B -> B) -> B)).
Proof. exact (eq_refl (@ex ((B -> B) -> B))). Qed.
Lemma lem4924141 {B : Type'} (y : B) (s : B -> Prop) : (term1591 B y s) = (term1579 B y s).
Proof. exact (MK_COMB (@lem4924140 B) (@lem4924139 B y s)). Qed.
Lemma lem4924142 {B : Type'} (y : B) : (term1592 B y) = (term1580 B y).
Proof. exact (fun_ext (fun s : B -> Prop => @lem4924141 B y s)). Qed.
Lemma lem4924143 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4924144 {B : Type'} (y : B) : (term1584 B y) = (term1581 B y).
Proof. exact (MK_COMB (@lem4924143 B) (@lem4924142 B y)). Qed.
Lemma lem4924145 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4924146 {B : Type'} (y : B) : (term1593 B y) = (term1594 B y).
Proof. exact (MK_COMB (@lem4924145) (@lem4924144 B y)). Qed.
Lemma lem4924147 {B : Type'} (y : B) (s : B -> Prop) : (term1587 B y s) = (term1578 B y s).
Proof. exact (eq_refl (term1587 B y s)). Qed.
Lemma lem4924148 {B : Type'} (x : type623 B) (s : B -> Prop) : (x s) = (x s).
Proof. exact (eq_refl (x s)). Qed.
Lemma lem4924149 {B : Type'} (y : B) (x : type623 B) (s : B -> Prop) : (term1595 B y x s) = (term1596 B y x s).
Proof. exact (MK_COMB (@lem4924147 B y s) (@lem4924148 B x s)). Qed.
Lemma lem4924150 {B : Type'} (y : B) (x : type623 B) (s : B -> Prop) : (term1596 B y x s) = (term1597 B y x s).
Proof. exact (eq_refl (term1596 B y x s)). Qed.
Lemma lem4924151 {B : Type'} (y : B) (x : type623 B) (s : B -> Prop) : (term1595 B y x s) = (term1597 B y x s).
Proof. exact (TRANS (@lem4924149 B y x s) (@lem4924150 B y x s)). Qed.
Lemma lem4924152 {B : Type'} (y : B) (x : type623 B) : (term1598 B y x) = (term1599 B y x).
Proof. exact (fun_ext (fun s : B -> Prop => @lem4924151 B y x s)). Qed.
Lemma lem4924153 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4924154 {B : Type'} (y : B) (x : type623 B) : (term1600 B y x) = (term1601 B y x).
Proof. exact (MK_COMB (@lem4924153 B) (@lem4924152 B y x)). Qed.
Lemma lem4924155 {B : Type'} (y : B) : (term1602 B y) = (term1603 B y).
Proof. exact (fun_ext (fun x : type623 B => @lem4924154 B y x)). Qed.
Lemma lem4924156 {B : Type'} : (@ex ((B -> Prop) -> (B -> B) -> B)) = (@ex ((B -> Prop) -> (B -> B) -> B)).
Proof. exact (eq_refl (@ex ((B -> Prop) -> (B -> B) -> B))). Qed.
Lemma lem4924157 {B : Type'} (y : B) : (term1585 B y) = (term1604 B y).
Proof. exact (MK_COMB (@lem4924156 B) (@lem4924155 B y)). Qed.
Lemma lem4924158 {B : Type'} (y : B) : ((term1584 B y) = (term1585 B y)) = ((term1581 B y) = (term1604 B y)).
Proof. exact (MK_COMB (@lem4924146 B y) (@lem4924157 B y)). Qed.
Lemma lem4924159 {B : Type'} (y : B) : (term1581 B y) = (term1604 B y).
Proof. exact (EQ_MP (@lem4924158 B y) (@lem4924133 B y)). Qed.
Lemma lem4924160 {B : Type'} (y : B) : (term1519 B y) = (term1604 B y).
Proof. exact (TRANS (@lem4924129 B y) (@lem4924159 B y)). Qed.
Lemma lem4924161 {B : Type'} : (term1526 B) = (term1605 B).
Proof. exact (fun_ext (fun y : B => @lem4924160 B y)). Qed.
Lemma lem4924162 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4924163 {B : Type'} : (term1541 B) = (term1606 B).
Proof. exact (MK_COMB (@lem4924162 B) (@lem4924161 B)). Qed.
Lemma lem4924165 {A B : Type'} (P : type1413 A B) : (term814 A B P) = (term815 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem4924166 {B : Type'} (P : type1356 B) : (term1607 B P) = (term1608 B P).
Proof. exact (@lem4924165 B (type623 B) P). Qed.
Lemma lem4924167 {B : Type'} : (term1609 B) = (term1610 B).
Proof. exact (@lem4924166 B (term1611 B)). Qed.
Lemma lem4924168 {B : Type'} (y : B) : (term1612 B y) = (term1603 B y).
Proof. exact (eq_refl (term1612 B y)). Qed.
Lemma lem4924169 {B : Type'} (x : type623 B) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem4924170 {B : Type'} (y : B) (x : type623 B) : (term1613 B y x) = (term1614 B y x).
Proof. exact (MK_COMB (@lem4924168 B y) (@lem4924169 B x)). Qed.
Lemma lem4924171 {B : Type'} (y : B) (x : type623 B) : (term1614 B y x) = (term1601 B y x).
Proof. exact (eq_refl (term1614 B y x)). Qed.
Lemma lem4924172 {B : Type'} (y : B) (x : type623 B) : (term1613 B y x) = (term1601 B y x).
Proof. exact (TRANS (@lem4924170 B y x) (@lem4924171 B y x)). Qed.
Lemma lem4924173 {B : Type'} (y : B) : (term1615 B y) = (term1603 B y).
Proof. exact (fun_ext (fun x : type623 B => @lem4924172 B y x)). Qed.
Lemma lem4924174 {B : Type'} : (@ex ((B -> Prop) -> (B -> B) -> B)) = (@ex ((B -> Prop) -> (B -> B) -> B)).
Proof. exact (eq_refl (@ex ((B -> Prop) -> (B -> B) -> B))). Qed.
Lemma lem4924175 {B : Type'} (y : B) : (term1616 B y) = (term1604 B y).
Proof. exact (MK_COMB (@lem4924174 B) (@lem4924173 B y)). Qed.
Lemma lem4924176 {B : Type'} : (term1617 B) = (term1605 B).
Proof. exact (fun_ext (fun y : B => @lem4924175 B y)). Qed.
Lemma lem4924177 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4924178 {B : Type'} : (term1609 B) = (term1606 B).
Proof. exact (MK_COMB (@lem4924177 B) (@lem4924176 B)). Qed.
Lemma lem4924179 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4924180 {B : Type'} : (term1618 B) = (term1619 B).
Proof. exact (MK_COMB (@lem4924179) (@lem4924178 B)). Qed.
Lemma lem4924181 {B : Type'} (y : B) : (term1612 B y) = (term1603 B y).
Proof. exact (eq_refl (term1612 B y)). Qed.
Lemma lem4924182 {B : Type'} (x : type1361 B) (y : B) : (x y) = (x y).
Proof. exact (eq_refl (x y)). Qed.
Lemma lem4924183 {B : Type'} (x : type1361 B) (y : B) : (term1620 B x y) = (term1621 B x y).
Proof. exact (MK_COMB (@lem4924181 B y) (@lem4924182 B x y)). Qed.
Lemma lem4924184 {B : Type'} (x : type1361 B) (y : B) : (term1621 B x y) = (term1622 B x y).
Proof. exact (eq_refl (term1621 B x y)). Qed.
Lemma lem4924185 {B : Type'} (x : type1361 B) (y : B) : (term1620 B x y) = (term1622 B x y).
Proof. exact (TRANS (@lem4924183 B x y) (@lem4924184 B x y)). Qed.
Lemma lem4924186 {B : Type'} (x : type1361 B) : (term1623 B x) = (term1624 B x).
Proof. exact (fun_ext (fun y : B => @lem4924185 B x y)). Qed.
Lemma lem4924187 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4924188 {B : Type'} (x : type1361 B) : (term1625 B x) = (term1626 B x).
Proof. exact (MK_COMB (@lem4924187 B) (@lem4924186 B x)). Qed.
Lemma lem4924189 {B : Type'} : (term1627 B) = (term1628 B).
Proof. exact (fun_ext (fun x : type1361 B => @lem4924188 B x)). Qed.
Lemma lem4924190 {B : Type'} : (@ex (B -> (B -> Prop) -> (B -> B) -> B)) = (@ex (B -> (B -> Prop) -> (B -> B) -> B)).
Proof. exact (eq_refl (@ex (B -> (B -> Prop) -> (B -> B) -> B))). Qed.
Lemma lem4924191 {B : Type'} : (term1610 B) = (term1629 B).
Proof. exact (MK_COMB (@lem4924190 B) (@lem4924189 B)). Qed.
Lemma lem4924192 {B : Type'} : ((term1609 B) = (term1610 B)) = ((term1606 B) = (term1629 B)).
Proof. exact (MK_COMB (@lem4924180 B) (@lem4924191 B)). Qed.
Lemma lem4924193 {B : Type'} : (term1606 B) = (term1629 B).
Proof. exact (EQ_MP (@lem4924192 B) (@lem4924167 B)). Qed.
Lemma lem4924194 {B : Type'} : (term1541 B) = (term1629 B).
Proof. exact (TRANS (@lem4924163 B) (@lem4924193 B)). Qed.
Lemma lem4924195 {B : Type'} : (term1538 B) = (term1538 B).
Proof. exact (eq_refl (term1538 B)). Qed.
Lemma lem4924196 {B : Type'} : (term1542 B) = (term1630 B).
Proof. exact (MK_COMB (@lem4924195 B) (@lem4924194 B)). Qed.
Lemma lem4924198 {A : Type'} (P : Prop) (Q : A -> Prop) : (term1631 A P Q) = (term1632 A P Q).
Proof. exact (EQ_MP (@lem18929 A P Q) (@lem18928 A P Q)). Qed.
Lemma lem4924199 {B : Type'} (P : Prop) (Q : type391 B) : (term1633 B P Q) = (term1634 B P Q).
Proof. exact (@lem4924198 (type1361 B) P Q). Qed.
Lemma lem4924200 {B : Type'} : (term1635 B) = (term1636 B).
Proof. exact (@lem4924199 B (term1536 B) (term1628 B)). Qed.
Lemma lem4924201 {B : Type'} (x : type1361 B) : (term1637 B x) = (term1626 B x).
Proof. exact (eq_refl (term1637 B x)). Qed.
Lemma lem4924202 {B : Type'} : (term1638 B) = (term1628 B).
Proof. exact (fun_ext (fun x : type1361 B => @lem4924201 B x)). Qed.
Lemma lem4924203 {B : Type'} : (@ex (B -> (B -> Prop) -> (B -> B) -> B)) = (@ex (B -> (B -> Prop) -> (B -> B) -> B)).
Proof. exact (eq_refl (@ex (B -> (B -> Prop) -> (B -> B) -> B))). Qed.
Lemma lem4924204 {B : Type'} : (term1639 B) = (term1629 B).
Proof. exact (MK_COMB (@lem4924203 B) (@lem4924202 B)). Qed.
Lemma lem4924205 {B : Type'} : (term1538 B) = (term1538 B).
Proof. exact (eq_refl (term1538 B)). Qed.
Lemma lem4924206 {B : Type'} : (term1635 B) = (term1630 B).
Proof. exact (MK_COMB (@lem4924205 B) (@lem4924204 B)). Qed.
Lemma lem4924207 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4924208 {B : Type'} : (term1640 B) = (term1641 B).
Proof. exact (MK_COMB (@lem4924207) (@lem4924206 B)). Qed.
Lemma lem4924209 {B : Type'} (x : type1361 B) : (term1637 B x) = (term1626 B x).
Proof. exact (eq_refl (term1637 B x)). Qed.
Lemma lem4924210 {B : Type'} : (term1538 B) = (term1538 B).
Proof. exact (eq_refl (term1538 B)). Qed.
Lemma lem4924211 {B : Type'} (x : type1361 B) : (term1642 B x) = (term1643 B x).
Proof. exact (MK_COMB (@lem4924210 B) (@lem4924209 B x)). Qed.
Lemma lem4924212 {B : Type'} : (term1644 B) = (term1645 B).
Proof. exact (fun_ext (fun x : type1361 B => @lem4924211 B x)). Qed.
Lemma lem4924213 {B : Type'} : (@ex (B -> (B -> Prop) -> (B -> B) -> B)) = (@ex (B -> (B -> Prop) -> (B -> B) -> B)).
Proof. exact (eq_refl (@ex (B -> (B -> Prop) -> (B -> B) -> B))). Qed.
Lemma lem4924214 {B : Type'} : (term1636 B) = (term1646 B).
Proof. exact (MK_COMB (@lem4924213 B) (@lem4924212 B)). Qed.
Lemma lem4924215 {B : Type'} : ((term1635 B) = (term1636 B)) = ((term1630 B) = (term1646 B)).
Proof. exact (MK_COMB (@lem4924208 B) (@lem4924214 B)). Qed.
Lemma lem4924216 {B : Type'} : (term1630 B) = (term1646 B).
Proof. exact (EQ_MP (@lem4924215 B) (@lem4924200 B)). Qed.
Lemma lem4924217 {B : Type'} : (term1542 B) = (term1646 B).
Proof. exact (TRANS (@lem4924196 B) (@lem4924216 B)). Qed.
Lemma lem4924218 {B : Type'} : (term1476 B) = (term1646 B).
Proof. exact (TRANS (@lem4924072 B) (@lem4924217 B)). Qed.
Lemma lem4924219 {B : Type'} : (term1323 B) = (term1646 B).
Proof. exact (TRANS (@lem4923375 B) (@lem4924218 B)). Qed.
Lemma lem4924220 {B : Type'} (h1 : term1323 B) : term1646 B.
Proof. exact (EQ_MP (@lem4924219 B) (@lem4921351 B h1)). Qed.
Lemma lem4924231 {A : Type'} (y : A -> Prop) (f : type1402 A) (x : A) (s : A -> Prop) : (term1839 A y f x s) = (term1840 A y f x s).
Proof. exact (@lem17045 (y = (f x)) (@IN A x s)). Qed.
Lemma lem4924234 {A : Type'} (y : A -> Prop) (f : type1402 A) (x : A) (s : A -> Prop) : (term1411 A y f x s) = (term1411 A y f x s).
Proof. exact (eq_refl (term1411 A y f x s)). Qed.
Lemma lem4924235 {A : Type'} (P : A -> Prop) : (term847 A P) = (term848 A P).
Proof. exact (@lem18394 A P). Qed.
Lemma lem4924236 {A : Type'} (y : A -> Prop) (f : type1402 A) (s : A -> Prop) : (term1841 A y f s) = (term1842 A y f s).
Proof. exact (@lem4924235 A (term1412 A y f s)). Qed.
Lemma lem4924237 {A : Type'} (y : A -> Prop) (f : type1402 A) (x : A) (s : A -> Prop) : (term1843 A y f s x) = (term1411 A y f x s).
Proof. exact (eq_refl (term1843 A y f s x)). Qed.
Lemma lem4924238 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem4924239 {A : Type'} (y : A -> Prop) (f : type1402 A) (x : A) (s : A -> Prop) : (term1844 A y f s x) = (term1839 A y f x s).
Proof. exact (MK_COMB (@lem4924238) (@lem4924237 A y f x s)). Qed.
Lemma lem4924240 {A : Type'} (y : A -> Prop) (f : type1402 A) (x : A) (s : A -> Prop) : (term1844 A y f s x) = (term1840 A y f x s).
Proof. exact (TRANS (@lem4924239 A y f x s) (@lem4924231 A y f x s)). Qed.
Lemma lem4924241 {A : Type'} (y : A -> Prop) (f : type1402 A) (s : A -> Prop) : (term1845 A y f s) = (term1846 A y f s).
Proof. exact (fun_ext (fun x : A => @lem4924240 A y f x s)). Qed.
Lemma lem4924242 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4924243 {A : Type'} (y : A -> Prop) (f : type1402 A) (s : A -> Prop) : (term1842 A y f s) = (term1847 A y f s).
Proof. exact (MK_COMB (@lem4924242 A) (@lem4924241 A y f s)). Qed.
Lemma lem4924244 {A : Type'} (y : A -> Prop) (f : type1402 A) (s : A -> Prop) : (term1841 A y f s) = (term1847 A y f s).
Proof. exact (TRANS (@lem4924236 A y f s) (@lem4924243 A y f s)). Qed.
Lemma lem4924245 {A : Type'} (y : A -> Prop) (f : type1402 A) (s : A -> Prop) : (term1412 A y f s) = (term1412 A y f s).
Proof. exact (fun_ext (fun x : A => @lem4924234 A y f x s)). Qed.
Lemma lem4924246 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem4924247 {A : Type'} (y : A -> Prop) (f : type1402 A) (s : A -> Prop) : (term1413 A y f s) = (term1413 A y f s).
Proof. exact (MK_COMB (@lem4924246 A) (@lem4924245 A y f s)). Qed.
Lemma lem4924249 {A : Type'} (y : A -> Prop) (f : type1402 A) (s : A -> Prop) : (term1848 A y f s) = (term1848 A y f s).
Proof. exact (eq_refl (term1848 A y f s)). Qed.
Lemma lem4924250 {A : Type'} (y : A -> Prop) (f : type1402 A) (s : A -> Prop) : (term1849 A y f s) = (term1849 A y f s).
Proof. exact (MK_COMB (@lem4924249 A y f s) (@lem4924247 A y f s)). Qed.
Lemma lem4924252 {A : Type'} (y : A -> Prop) (f : type1402 A) (s : A -> Prop) : (term1850 A y f s) = (term1850 A y f s).
Proof. exact (eq_refl (term1850 A y f s)). Qed.
Lemma lem4924253 {A : Type'} (y : A -> Prop) (f : type1402 A) (s : A -> Prop) : (term1851 A y f s) = (term1852 A y f s).
Proof. exact (MK_COMB (@lem4924252 A y f s) (@lem4924244 A y f s)). Qed.
Lemma lem4924254 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4924255 {A : Type'} (y : A -> Prop) (f : type1402 A) (s : A -> Prop) : (term1853 A y f s) = (term1854 A y f s).
Proof. exact (MK_COMB (@lem4924254) (@lem4924253 A y f s)). Qed.
Lemma lem4924256 {A : Type'} (y : A -> Prop) (f : type1402 A) (s : A -> Prop) : (term1855 A y f s) = (term1856 A y f s).
Proof. exact (MK_COMB (@lem4924255 A y f s) (@lem4924250 A y f s)). Qed.
Lemma lem4924257 {A : Type'} (y : A -> Prop) (f : type1402 A) (s : A -> Prop) : ((term1415 A y f s) = (term1413 A y f s)) = (term1855 A y f s).
Proof. exact (@lem17784 (term1415 A y f s) (term1413 A y f s)). Qed.
Lemma lem4924258 {A : Type'} (y : A -> Prop) (f : type1402 A) (s : A -> Prop) : ((term1415 A y f s) = (term1413 A y f s)) = (term1856 A y f s).
Proof. exact (TRANS (@lem4924257 A y f s) (@lem4924256 A y f s)). Qed.
Lemma lem4924259 {A : Type'} (y : A -> Prop) (s : A -> Prop) : (term1416 A y s) = (term1857 A y s).
Proof. exact (fun_ext (fun f : type1402 A => @lem4924258 A y f s)). Qed.
Lemma lem4924260 {A : Type'} : (@all (A -> A -> Prop)) = (@all (A -> A -> Prop)).
Proof. exact (eq_refl (@all (A -> A -> Prop))). Qed.
Lemma lem4924261 {A : Type'} (y : A -> Prop) (s : A -> Prop) : (term1417 A y s) = (term1858 A y s).
Proof. exact (MK_COMB (@lem4924260 A) (@lem4924259 A y s)). Qed.
Lemma lem4924262 {A : Type'} (y : A -> Prop) : (term1418 A y) = (term1859 A y).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4924261 A y s)). Qed.
Lemma lem4924263 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4924264 {A : Type'} (y : A -> Prop) : (term1419 A y) = (term1860 A y).
Proof. exact (MK_COMB (@lem4924263 A) (@lem4924262 A y)). Qed.
Lemma lem4924265 {A : Type'} : (term1420 A) = (term1861 A).
Proof. exact (fun_ext (fun y : A -> Prop => @lem4924264 A y)). Qed.
Lemma lem4924266 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4924267 {A : Type'} : (term1327 A) = (term1862 A).
Proof. exact (MK_COMB (@lem4924266 A) (@lem4924265 A)). Qed.
Lemma lem4924277 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term1130 A P Q) = (term1131 A P Q).
Proof. exact (EQ_MP (@lem18953 A P Q) (@lem18952 A P Q)). Qed.
Lemma lem4924278 {A : Type'} (P : type421 A) (Q : type421 A) : (term1863 A P Q) = (term1864 A P Q).
Proof. exact (@lem4924277 (type1402 A) P Q). Qed.
Lemma lem4924279 {A : Type'} (y : A -> Prop) (s : A -> Prop) : (term1865 A y s) = (term1866 A y s).
Proof. exact (@lem4924278 A (term1867 A y s) (term1868 A y s)). Qed.
Lemma lem4924280 {A : Type'} (y : A -> Prop) (f : type1402 A) (s : A -> Prop) : (term1869 A y s f) = (term1852 A y f s).
Proof. exact (eq_refl (term1869 A y s f)). Qed.
Lemma lem4924281 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4924282 {A : Type'} (y : A -> Prop) (f : type1402 A) (s : A -> Prop) : (term1870 A y s f) = (term1854 A y f s).
Proof. exact (MK_COMB (@lem4924281) (@lem4924280 A y f s)). Qed.
Lemma lem4924283 {A : Type'} (y : A -> Prop) (f : type1402 A) (s : A -> Prop) : (term1871 A y s f) = (term1849 A y f s).
Proof. exact (eq_refl (term1871 A y s f)). Qed.
Lemma lem4924284 {A : Type'} (y : A -> Prop) (f : type1402 A) (s : A -> Prop) : (term1872 A y s f) = (term1856 A y f s).
Proof. exact (MK_COMB (@lem4924282 A y f s) (@lem4924283 A y f s)). Qed.
Lemma lem4924285 {A : Type'} (y : A -> Prop) (s : A -> Prop) : (term1873 A y s) = (term1857 A y s).
Proof. exact (fun_ext (fun f : type1402 A => @lem4924284 A y f s)). Qed.
Lemma lem4924286 {A : Type'} : (@all (A -> A -> Prop)) = (@all (A -> A -> Prop)).
Proof. exact (eq_refl (@all (A -> A -> Prop))). Qed.
Lemma lem4924287 {A : Type'} (y : A -> Prop) (s : A -> Prop) : (term1865 A y s) = (term1858 A y s).
Proof. exact (MK_COMB (@lem4924286 A) (@lem4924285 A y s)). Qed.
Lemma lem4924288 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4924289 {A : Type'} (y : A -> Prop) (s : A -> Prop) : (term1874 A y s) = (term1875 A y s).
Proof. exact (MK_COMB (@lem4924288) (@lem4924287 A y s)). Qed.
Lemma lem4924290 {A : Type'} (y : A -> Prop) (f : type1402 A) (s : A -> Prop) : (term1869 A y s f) = (term1852 A y f s).
Proof. exact (eq_refl (term1869 A y s f)). Qed.
Lemma lem4924291 {A : Type'} (y : A -> Prop) (s : A -> Prop) : (term1876 A y s) = (term1867 A y s).
Proof. exact (fun_ext (fun f : type1402 A => @lem4924290 A y f s)). Qed.
Lemma lem4924292 {A : Type'} : (@all (A -> A -> Prop)) = (@all (A -> A -> Prop)).
Proof. exact (eq_refl (@all (A -> A -> Prop))). Qed.
Lemma lem4924293 {A : Type'} (y : A -> Prop) (s : A -> Prop) : (term1877 A y s) = (term1878 A y s).
Proof. exact (MK_COMB (@lem4924292 A) (@lem4924291 A y s)). Qed.
Lemma lem4924294 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4924295 {A : Type'} (y : A -> Prop) (s : A -> Prop) : (term1879 A y s) = (term1880 A y s).
Proof. exact (MK_COMB (@lem4924294) (@lem4924293 A y s)). Qed.
Lemma lem4924296 {A : Type'} (y : A -> Prop) (f : type1402 A) (s : A -> Prop) : (term1871 A y s f) = (term1849 A y f s).
Proof. exact (eq_refl (term1871 A y s f)). Qed.
Lemma lem4924297 {A : Type'} (y : A -> Prop) (s : A -> Prop) : (term1881 A y s) = (term1868 A y s).
Proof. exact (fun_ext (fun f : type1402 A => @lem4924296 A y f s)). Qed.
Lemma lem4924298 {A : Type'} : (@all (A -> A -> Prop)) = (@all (A -> A -> Prop)).
Proof. exact (eq_refl (@all (A -> A -> Prop))). Qed.
Lemma lem4924299 {A : Type'} (y : A -> Prop) (s : A -> Prop) : (term1882 A y s) = (term1883 A y s).
Proof. exact (MK_COMB (@lem4924298 A) (@lem4924297 A y s)). Qed.
Lemma lem4924300 {A : Type'} (y : A -> Prop) (s : A -> Prop) : (term1866 A y s) = (term1884 A y s).
Proof. exact (MK_COMB (@lem4924295 A y s) (@lem4924299 A y s)). Qed.
Lemma lem4924301 {A : Type'} (y : A -> Prop) (s : A -> Prop) : ((term1865 A y s) = (term1866 A y s)) = ((term1858 A y s) = (term1884 A y s)).
Proof. exact (MK_COMB (@lem4924289 A y s) (@lem4924300 A y s)). Qed.
Lemma lem4924302 {A : Type'} (y : A -> Prop) (s : A -> Prop) : (term1858 A y s) = (term1884 A y s).
Proof. exact (EQ_MP (@lem4924301 A y s) (@lem4924279 A y s)). Qed.
Lemma lem4924495 {A : Type'} (y : A -> Prop) : (term1859 A y) = (term1885 A y).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4924302 A y s)). Qed.
Lemma lem4924496 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4924497 {A : Type'} (y : A -> Prop) : (term1860 A y) = (term1886 A y).
Proof. exact (MK_COMB (@lem4924496 A) (@lem4924495 A y)). Qed.
Lemma lem4924499 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term1130 A P Q) = (term1131 A P Q).
Proof. exact (EQ_MP (@lem18953 A P Q) (@lem18952 A P Q)). Qed.
Lemma lem4924500 {A : Type'} (P : type686 A) (Q : type686 A) : (term1132 A P Q) = (term1133 A P Q).
Proof. exact (@lem4924499 (A -> Prop) P Q). Qed.
Lemma lem4924501 {A : Type'} (y : A -> Prop) : (term1887 A y) = (term1888 A y).
Proof. exact (@lem4924500 A (term1889 A y) (term1890 A y)). Qed.
Lemma lem4924502 {A : Type'} (y : A -> Prop) (s : A -> Prop) : (term1891 A y s) = (term1878 A y s).
Proof. exact (eq_refl (term1891 A y s)). Qed.
Lemma lem4924503 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4924504 {A : Type'} (y : A -> Prop) (s : A -> Prop) : (term1892 A y s) = (term1880 A y s).
Proof. exact (MK_COMB (@lem4924503) (@lem4924502 A y s)). Qed.
Lemma lem4924505 {A : Type'} (y : A -> Prop) (s : A -> Prop) : (term1893 A y s) = (term1883 A y s).
Proof. exact (eq_refl (term1893 A y s)). Qed.
Lemma lem4924506 {A : Type'} (y : A -> Prop) (s : A -> Prop) : (term1894 A y s) = (term1884 A y s).
Proof. exact (MK_COMB (@lem4924504 A y s) (@lem4924505 A y s)). Qed.
Lemma lem4924507 {A : Type'} (y : A -> Prop) : (term1895 A y) = (term1885 A y).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4924506 A y s)). Qed.
Lemma lem4924508 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4924509 {A : Type'} (y : A -> Prop) : (term1887 A y) = (term1886 A y).
Proof. exact (MK_COMB (@lem4924508 A) (@lem4924507 A y)). Qed.
Lemma lem4924510 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4924511 {A : Type'} (y : A -> Prop) : (term1896 A y) = (term1897 A y).
Proof. exact (MK_COMB (@lem4924510) (@lem4924509 A y)). Qed.
Lemma lem4924512 {A : Type'} (y : A -> Prop) (s : A -> Prop) : (term1891 A y s) = (term1878 A y s).
Proof. exact (eq_refl (term1891 A y s)). Qed.
Lemma lem4924513 {A : Type'} (y : A -> Prop) : (term1898 A y) = (term1889 A y).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4924512 A y s)). Qed.
Lemma lem4924514 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4924515 {A : Type'} (y : A -> Prop) : (term1899 A y) = (term1900 A y).
Proof. exact (MK_COMB (@lem4924514 A) (@lem4924513 A y)). Qed.
Lemma lem4924516 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4924517 {A : Type'} (y : A -> Prop) : (term1901 A y) = (term1902 A y).
Proof. exact (MK_COMB (@lem4924516) (@lem4924515 A y)). Qed.
Lemma lem4924518 {A : Type'} (y : A -> Prop) (s : A -> Prop) : (term1893 A y s) = (term1883 A y s).
Proof. exact (eq_refl (term1893 A y s)). Qed.
Lemma lem4924519 {A : Type'} (y : A -> Prop) : (term1903 A y) = (term1890 A y).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4924518 A y s)). Qed.
Lemma lem4924520 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4924521 {A : Type'} (y : A -> Prop) : (term1904 A y) = (term1905 A y).
Proof. exact (MK_COMB (@lem4924520 A) (@lem4924519 A y)). Qed.
Lemma lem4924522 {A : Type'} (y : A -> Prop) : (term1888 A y) = (term1906 A y).
Proof. exact (MK_COMB (@lem4924517 A y) (@lem4924521 A y)). Qed.
Lemma lem4924523 {A : Type'} (y : A -> Prop) : ((term1887 A y) = (term1888 A y)) = ((term1886 A y) = (term1906 A y)).
Proof. exact (MK_COMB (@lem4924511 A y) (@lem4924522 A y)). Qed.
Lemma lem4924524 {A : Type'} (y : A -> Prop) : (term1886 A y) = (term1906 A y).
Proof. exact (EQ_MP (@lem4924523 A y) (@lem4924501 A y)). Qed.
Lemma lem4924725 {A : Type'} (y : A -> Prop) : (term1860 A y) = (term1906 A y).
Proof. exact (TRANS (@lem4924497 A y) (@lem4924524 A y)). Qed.
Lemma lem4924726 {A : Type'} : (term1861 A) = (term1907 A).
Proof. exact (fun_ext (fun y : A -> Prop => @lem4924725 A y)). Qed.
Lemma lem4924727 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4924728 {A : Type'} : (term1862 A) = (term1908 A).
Proof. exact (MK_COMB (@lem4924727 A) (@lem4924726 A)). Qed.
Lemma lem4924730 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term1130 A P Q) = (term1131 A P Q).
Proof. exact (EQ_MP (@lem18953 A P Q) (@lem18952 A P Q)). Qed.
Lemma lem4924731 {A : Type'} (P : type686 A) (Q : type686 A) : (term1132 A P Q) = (term1133 A P Q).
Proof. exact (@lem4924730 (A -> Prop) P Q). Qed.
Lemma lem4924732 {A : Type'} : (term1909 A) = (term1910 A).
Proof. exact (@lem4924731 A (term1911 A) (term1912 A)). Qed.
Lemma lem4924733 {A : Type'} (y : A -> Prop) : (term1913 A y) = (term1900 A y).
Proof. exact (eq_refl (term1913 A y)). Qed.
Lemma lem4924734 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4924735 {A : Type'} (y : A -> Prop) : (term1914 A y) = (term1902 A y).
Proof. exact (MK_COMB (@lem4924734) (@lem4924733 A y)). Qed.
Lemma lem4924736 {A : Type'} (y : A -> Prop) : (term1915 A y) = (term1905 A y).
Proof. exact (eq_refl (term1915 A y)). Qed.
Lemma lem4924737 {A : Type'} (y : A -> Prop) : (term1916 A y) = (term1906 A y).
Proof. exact (MK_COMB (@lem4924735 A y) (@lem4924736 A y)). Qed.
Lemma lem4924738 {A : Type'} : (term1917 A) = (term1907 A).
Proof. exact (fun_ext (fun y : A -> Prop => @lem4924737 A y)). Qed.
Lemma lem4924739 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4924740 {A : Type'} : (term1909 A) = (term1908 A).
Proof. exact (MK_COMB (@lem4924739 A) (@lem4924738 A)). Qed.
Lemma lem4924741 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4924742 {A : Type'} : (term1918 A) = (term1919 A).
Proof. exact (MK_COMB (@lem4924741) (@lem4924740 A)). Qed.
Lemma lem4924743 {A : Type'} (y : A -> Prop) : (term1913 A y) = (term1900 A y).
Proof. exact (eq_refl (term1913 A y)). Qed.
Lemma lem4924744 {A : Type'} : (term1920 A) = (term1911 A).
Proof. exact (fun_ext (fun y : A -> Prop => @lem4924743 A y)). Qed.
Lemma lem4924745 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4924746 {A : Type'} : (term1921 A) = (term1922 A).
Proof. exact (MK_COMB (@lem4924745 A) (@lem4924744 A)). Qed.
Lemma lem4924747 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4924748 {A : Type'} : (term1923 A) = (term1924 A).
Proof. exact (MK_COMB (@lem4924747) (@lem4924746 A)). Qed.
Lemma lem4924749 {A : Type'} (y : A -> Prop) : (term1915 A y) = (term1905 A y).
Proof. exact (eq_refl (term1915 A y)). Qed.
Lemma lem4924750 {A : Type'} : (term1925 A) = (term1912 A).
Proof. exact (fun_ext (fun y : A -> Prop => @lem4924749 A y)). Qed.
Lemma lem4924751 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4924752 {A : Type'} : (term1926 A) = (term1927 A).
Proof. exact (MK_COMB (@lem4924751 A) (@lem4924750 A)). Qed.
Lemma lem4924753 {A : Type'} : (term1910 A) = (term1928 A).
Proof. exact (MK_COMB (@lem4924748 A) (@lem4924752 A)). Qed.
Lemma lem4924754 {A : Type'} : ((term1909 A) = (term1910 A)) = ((term1908 A) = (term1928 A)).
Proof. exact (MK_COMB (@lem4924742 A) (@lem4924753 A)). Qed.
Lemma lem4924755 {A : Type'} : (term1908 A) = (term1928 A).
Proof. exact (EQ_MP (@lem4924754 A) (@lem4924732 A)). Qed.
Lemma lem4924964 {A : Type'} : (term1862 A) = (term1928 A).
Proof. exact (TRANS (@lem4924728 A) (@lem4924755 A)). Qed.
Lemma lem4924966 {A : Type'} (P : Prop) (Q : A -> Prop) : (term797 A P Q) = (term798 A P Q).
Proof. exact (EQ_MP (@lem18911 A P Q) (@lem18910 A P Q)). Qed.
Lemma lem4924967 {A : Type'} (P : Prop) (Q : A -> Prop) : (term797 A P Q) = (term798 A P Q).
Proof. exact (@lem4924966 A P Q). Qed.
Lemma lem4924968 {A : Type'} (y : A -> Prop) (f : type1402 A) (s : A -> Prop) : (term1929 A y f s) = (term1930 A y f s).
Proof. exact (@lem4924967 A (term1931 A y f s) (term1412 A y f s)). Qed.
Lemma lem4924969 {A : Type'} (y : A -> Prop) (f : type1402 A) (x : A) (s : A -> Prop) : (term1843 A y f s x) = (term1411 A y f x s).
Proof. exact (eq_refl (term1843 A y f s x)). Qed.
Lemma lem4924970 {A : Type'} (y : A -> Prop) (f : type1402 A) (s : A -> Prop) : (term1932 A y f s) = (term1412 A y f s).
Proof. exact (fun_ext (fun x : A => @lem4924969 A y f x s)). Qed.
Lemma lem4924971 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem4924972 {A : Type'} (y : A -> Prop) (f : type1402 A) (s : A -> Prop) : (term1933 A y f s) = (term1413 A y f s).
Proof. exact (MK_COMB (@lem4924971 A) (@lem4924970 A y f s)). Qed.
Lemma lem4924973 {A : Type'} (y : A -> Prop) (f : type1402 A) (s : A -> Prop) : (term1848 A y f s) = (term1848 A y f s).
Proof. exact (eq_refl (term1848 A y f s)). Qed.
Lemma lem4924974 {A : Type'} (y : A -> Prop) (f : type1402 A) (s : A -> Prop) : (term1929 A y f s) = (term1849 A y f s).
Proof. exact (MK_COMB (@lem4924973 A y f s) (@lem4924972 A y f s)). Qed.
Lemma lem4924975 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4924976 {A : Type'} (y : A -> Prop) (f : type1402 A) (s : A -> Prop) : (term1934 A y f s) = (term1935 A y f s).
Proof. exact (MK_COMB (@lem4924975) (@lem4924974 A y f s)). Qed.
Lemma lem4924977 {A : Type'} (y : A -> Prop) (f : type1402 A) (x : A) (s : A -> Prop) : (term1843 A y f s x) = (term1411 A y f x s).
Proof. exact (eq_refl (term1843 A y f s x)). Qed.
Lemma lem4924978 {A : Type'} (y : A -> Prop) (f : type1402 A) (s : A -> Prop) : (term1848 A y f s) = (term1848 A y f s).
Proof. exact (eq_refl (term1848 A y f s)). Qed.
Lemma lem4924979 {A : Type'} (y : A -> Prop) (f : type1402 A) (x : A) (s : A -> Prop) : (term1936 A y f s x) = (term1937 A y f x s).
Proof. exact (MK_COMB (@lem4924978 A y f s) (@lem4924977 A y f x s)). Qed.
Lemma lem4924980 {A : Type'} (y : A -> Prop) (f : type1402 A) (s : A -> Prop) : (term1938 A y f s) = (term1939 A y f s).
Proof. exact (fun_ext (fun x : A => @lem4924979 A y f x s)). Qed.
Lemma lem4924981 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem4924982 {A : Type'} (y : A -> Prop) (f : type1402 A) (s : A -> Prop) : (term1930 A y f s) = (term1940 A y f s).
Proof. exact (MK_COMB (@lem4924981 A) (@lem4924980 A y f s)). Qed.
Lemma lem4924983 {A : Type'} (y : A -> Prop) (f : type1402 A) (s : A -> Prop) : ((term1929 A y f s) = (term1930 A y f s)) = ((term1849 A y f s) = (term1940 A y f s)).
Proof. exact (MK_COMB (@lem4924976 A y f s) (@lem4924982 A y f s)). Qed.
Lemma lem4924984 {A : Type'} (y : A -> Prop) (f : type1402 A) (s : A -> Prop) : (term1849 A y f s) = (term1940 A y f s).
Proof. exact (EQ_MP (@lem4924983 A y f s) (@lem4924968 A y f s)). Qed.
Lemma lem4924985 {A : Type'} (y : A -> Prop) (s : A -> Prop) : (term1868 A y s) = (term1941 A y s).
Proof. exact (fun_ext (fun f : type1402 A => @lem4924984 A y f s)). Qed.
Lemma lem4924986 {A : Type'} : (@all (A -> A -> Prop)) = (@all (A -> A -> Prop)).
Proof. exact (eq_refl (@all (A -> A -> Prop))). Qed.
Lemma lem4924987 {A : Type'} (y : A -> Prop) (s : A -> Prop) : (term1883 A y s) = (term1942 A y s).
Proof. exact (MK_COMB (@lem4924986 A) (@lem4924985 A y s)). Qed.
Lemma lem4924989 {A B : Type'} (P : type1413 A B) : (term814 A B P) = (term815 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem4924990 {A : Type'} (P : type419 A) : (term1943 A P) = (term1944 A P).
Proof. exact (@lem4924989 (type1402 A) A P). Qed.
Lemma lem4924991 {A : Type'} (y : A -> Prop) (s : A -> Prop) : (term1945 A y s) = (term1946 A y s).
Proof. exact (@lem4924990 A (term1947 A y s)). Qed.
Lemma lem4924992 {A : Type'} (y : A -> Prop) (f : type1402 A) (s : A -> Prop) : (term1948 A y s f) = (term1939 A y f s).
Proof. exact (eq_refl (term1948 A y s f)). Qed.
Lemma lem4924993 {A : Type'} (x : A) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem4924994 {A : Type'} (y : A -> Prop) (f : type1402 A) (s : A -> Prop) (x : A) : (term1949 A y s f x) = (term1950 A y f s x).
Proof. exact (MK_COMB (@lem4924992 A y f s) (@lem4924993 A x)). Qed.
Lemma lem4924995 {A : Type'} (y : A -> Prop) (f : type1402 A) (x : A) (s : A -> Prop) : (term1950 A y f s x) = (term1937 A y f x s).
Proof. exact (eq_refl (term1950 A y f s x)). Qed.
Lemma lem4924996 {A : Type'} (y : A -> Prop) (f : type1402 A) (x : A) (s : A -> Prop) : (term1949 A y s f x) = (term1937 A y f x s).
Proof. exact (TRANS (@lem4924994 A y f s x) (@lem4924995 A y f x s)). Qed.
Lemma lem4924997 {A : Type'} (y : A -> Prop) (f : type1402 A) (s : A -> Prop) : (term1951 A y s f) = (term1939 A y f s).
Proof. exact (fun_ext (fun x : A => @lem4924996 A y f x s)). Qed.
Lemma lem4924998 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem4924999 {A : Type'} (y : A -> Prop) (f : type1402 A) (s : A -> Prop) : (term1952 A y s f) = (term1940 A y f s).
Proof. exact (MK_COMB (@lem4924998 A) (@lem4924997 A y f s)). Qed.
Lemma lem4925000 {A : Type'} (y : A -> Prop) (s : A -> Prop) : (term1953 A y s) = (term1941 A y s).
Proof. exact (fun_ext (fun f : type1402 A => @lem4924999 A y f s)). Qed.
Lemma lem4925001 {A : Type'} : (@all (A -> A -> Prop)) = (@all (A -> A -> Prop)).
Proof. exact (eq_refl (@all (A -> A -> Prop))). Qed.
Lemma lem4925002 {A : Type'} (y : A -> Prop) (s : A -> Prop) : (term1945 A y s) = (term1942 A y s).
Proof. exact (MK_COMB (@lem4925001 A) (@lem4925000 A y s)). Qed.
Lemma lem4925003 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4925004 {A : Type'} (y : A -> Prop) (s : A -> Prop) : (term1954 A y s) = (term1955 A y s).
Proof. exact (MK_COMB (@lem4925003) (@lem4925002 A y s)). Qed.
Lemma lem4925005 {A : Type'} (y : A -> Prop) (f : type1402 A) (s : A -> Prop) : (term1948 A y s f) = (term1939 A y f s).
Proof. exact (eq_refl (term1948 A y s f)). Qed.
Lemma lem4925006 {A : Type'} (x : type420 A) (f : type1402 A) : (x f) = (x f).
Proof. exact (eq_refl (x f)). Qed.
Lemma lem4925007 {A : Type'} (y : A -> Prop) (s : A -> Prop) (x : type420 A) (f : type1402 A) : (term1956 A y s x f) = (term1957 A y s x f).
Proof. exact (MK_COMB (@lem4925005 A y f s) (@lem4925006 A x f)). Qed.
Lemma lem4925008 {A : Type'} (y : A -> Prop) (x : type420 A) (f : type1402 A) (s : A -> Prop) : (term1957 A y s x f) = (term1958 A y x f s).
Proof. exact (eq_refl (term1957 A y s x f)). Qed.
Lemma lem4925009 {A : Type'} (y : A -> Prop) (x : type420 A) (f : type1402 A) (s : A -> Prop) : (term1956 A y s x f) = (term1958 A y x f s).
Proof. exact (TRANS (@lem4925007 A y s x f) (@lem4925008 A y x f s)). Qed.
Lemma lem4925010 {A : Type'} (y : A -> Prop) (x : type420 A) (s : A -> Prop) : (term1959 A y s x) = (term1960 A y x s).
Proof. exact (fun_ext (fun f : type1402 A => @lem4925009 A y x f s)). Qed.
Lemma lem4925011 {A : Type'} : (@all (A -> A -> Prop)) = (@all (A -> A -> Prop)).
Proof. exact (eq_refl (@all (A -> A -> Prop))). Qed.
Lemma lem4925012 {A : Type'} (y : A -> Prop) (x : type420 A) (s : A -> Prop) : (term1961 A y s x) = (term1962 A y x s).
Proof. exact (MK_COMB (@lem4925011 A) (@lem4925010 A y x s)). Qed.
Lemma lem4925013 {A : Type'} (y : A -> Prop) (s : A -> Prop) : (term1963 A y s) = (term1964 A y s).
Proof. exact (fun_ext (fun x : type420 A => @lem4925012 A y x s)). Qed.
Lemma lem4925014 {A : Type'} : (@ex ((A -> A -> Prop) -> A)) = (@ex ((A -> A -> Prop) -> A)).
Proof. exact (eq_refl (@ex ((A -> A -> Prop) -> A))). Qed.
Lemma lem4925015 {A : Type'} (y : A -> Prop) (s : A -> Prop) : (term1946 A y s) = (term1965 A y s).
Proof. exact (MK_COMB (@lem4925014 A) (@lem4925013 A y s)). Qed.
Lemma lem4925016 {A : Type'} (y : A -> Prop) (s : A -> Prop) : ((term1945 A y s) = (term1946 A y s)) = ((term1942 A y s) = (term1965 A y s)).
Proof. exact (MK_COMB (@lem4925004 A y s) (@lem4925015 A y s)). Qed.
Lemma lem4925017 {A : Type'} (y : A -> Prop) (s : A -> Prop) : (term1942 A y s) = (term1965 A y s).
Proof. exact (EQ_MP (@lem4925016 A y s) (@lem4924991 A y s)). Qed.
Lemma lem4925018 {A : Type'} (y : A -> Prop) (s : A -> Prop) : (term1883 A y s) = (term1965 A y s).
Proof. exact (TRANS (@lem4924987 A y s) (@lem4925017 A y s)). Qed.
Lemma lem4925019 {A : Type'} (y : A -> Prop) : (term1890 A y) = (term1966 A y).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4925018 A y s)). Qed.
Lemma lem4925020 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4925021 {A : Type'} (y : A -> Prop) : (term1905 A y) = (term1967 A y).
Proof. exact (MK_COMB (@lem4925020 A) (@lem4925019 A y)). Qed.
Lemma lem4925023 {A B : Type'} (P : type1413 A B) : (term814 A B P) = (term815 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem4925024 {A : Type'} (P : type579 A) : (term1968 A P) = (term1969 A P).
Proof. exact (@lem4925023 (A -> Prop) (type420 A) P). Qed.
Lemma lem4925025 {A : Type'} (y : A -> Prop) : (term1970 A y) = (term1971 A y).
Proof. exact (@lem4925024 A (term1972 A y)). Qed.
Lemma lem4925026 {A : Type'} (y : A -> Prop) (s : A -> Prop) : (term1973 A y s) = (term1964 A y s).
Proof. exact (eq_refl (term1973 A y s)). Qed.
Lemma lem4925027 {A : Type'} (x : type420 A) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem4925028 {A : Type'} (y : A -> Prop) (s : A -> Prop) (x : type420 A) : (term1974 A y s x) = (term1975 A y s x).
Proof. exact (MK_COMB (@lem4925026 A y s) (@lem4925027 A x)). Qed.
Lemma lem4925029 {A : Type'} (y : A -> Prop) (x : type420 A) (s : A -> Prop) : (term1975 A y s x) = (term1962 A y x s).
Proof. exact (eq_refl (term1975 A y s x)). Qed.
Lemma lem4925030 {A : Type'} (y : A -> Prop) (x : type420 A) (s : A -> Prop) : (term1974 A y s x) = (term1962 A y x s).
Proof. exact (TRANS (@lem4925028 A y s x) (@lem4925029 A y x s)). Qed.
Lemma lem4925031 {A : Type'} (y : A -> Prop) (s : A -> Prop) : (term1976 A y s) = (term1964 A y s).
Proof. exact (fun_ext (fun x : type420 A => @lem4925030 A y x s)). Qed.
Lemma lem4925032 {A : Type'} : (@ex ((A -> A -> Prop) -> A)) = (@ex ((A -> A -> Prop) -> A)).
Proof. exact (eq_refl (@ex ((A -> A -> Prop) -> A))). Qed.
Lemma lem4925033 {A : Type'} (y : A -> Prop) (s : A -> Prop) : (term1977 A y s) = (term1965 A y s).
Proof. exact (MK_COMB (@lem4925032 A) (@lem4925031 A y s)). Qed.
Lemma lem4925034 {A : Type'} (y : A -> Prop) : (term1978 A y) = (term1966 A y).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4925033 A y s)). Qed.
Lemma lem4925035 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4925036 {A : Type'} (y : A -> Prop) : (term1970 A y) = (term1967 A y).
Proof. exact (MK_COMB (@lem4925035 A) (@lem4925034 A y)). Qed.
Lemma lem4925037 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4925038 {A : Type'} (y : A -> Prop) : (term1979 A y) = (term1980 A y).
Proof. exact (MK_COMB (@lem4925037) (@lem4925036 A y)). Qed.
Lemma lem4925039 {A : Type'} (y : A -> Prop) (s : A -> Prop) : (term1973 A y s) = (term1964 A y s).
Proof. exact (eq_refl (term1973 A y s)). Qed.
Lemma lem4925040 {A : Type'} (x : type610 A) (s : A -> Prop) : (x s) = (x s).
Proof. exact (eq_refl (x s)). Qed.
Lemma lem4925041 {A : Type'} (y : A -> Prop) (x : type610 A) (s : A -> Prop) : (term1981 A y x s) = (term1982 A y x s).
Proof. exact (MK_COMB (@lem4925039 A y s) (@lem4925040 A x s)). Qed.
Lemma lem4925042 {A : Type'} (y : A -> Prop) (x : type610 A) (s : A -> Prop) : (term1982 A y x s) = (term1983 A y x s).
Proof. exact (eq_refl (term1982 A y x s)). Qed.
Lemma lem4925043 {A : Type'} (y : A -> Prop) (x : type610 A) (s : A -> Prop) : (term1981 A y x s) = (term1983 A y x s).
Proof. exact (TRANS (@lem4925041 A y x s) (@lem4925042 A y x s)). Qed.
Lemma lem4925044 {A : Type'} (y : A -> Prop) (x : type610 A) : (term1984 A y x) = (term1985 A y x).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4925043 A y x s)). Qed.
Lemma lem4925045 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4925046 {A : Type'} (y : A -> Prop) (x : type610 A) : (term1986 A y x) = (term1987 A y x).
Proof. exact (MK_COMB (@lem4925045 A) (@lem4925044 A y x)). Qed.
Lemma lem4925047 {A : Type'} (y : A -> Prop) : (term1988 A y) = (term1989 A y).
Proof. exact (fun_ext (fun x : type610 A => @lem4925046 A y x)). Qed.
Lemma lem4925048 {A : Type'} : (@ex ((A -> Prop) -> (A -> A -> Prop) -> A)) = (@ex ((A -> Prop) -> (A -> A -> Prop) -> A)).
Proof. exact (eq_refl (@ex ((A -> Prop) -> (A -> A -> Prop) -> A))). Qed.
Lemma lem4925049 {A : Type'} (y : A -> Prop) : (term1971 A y) = (term1990 A y).
Proof. exact (MK_COMB (@lem4925048 A) (@lem4925047 A y)). Qed.
Lemma lem4925050 {A : Type'} (y : A -> Prop) : ((term1970 A y) = (term1971 A y)) = ((term1967 A y) = (term1990 A y)).
Proof. exact (MK_COMB (@lem4925038 A y) (@lem4925049 A y)). Qed.
Lemma lem4925051 {A : Type'} (y : A -> Prop) : (term1967 A y) = (term1990 A y).
Proof. exact (EQ_MP (@lem4925050 A y) (@lem4925025 A y)). Qed.
Lemma lem4925052 {A : Type'} (y : A -> Prop) : (term1905 A y) = (term1990 A y).
Proof. exact (TRANS (@lem4925021 A y) (@lem4925051 A y)). Qed.
Lemma lem4925053 {A : Type'} : (term1912 A) = (term1991 A).
Proof. exact (fun_ext (fun y : A -> Prop => @lem4925052 A y)). Qed.
Lemma lem4925054 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4925055 {A : Type'} : (term1927 A) = (term1992 A).
Proof. exact (MK_COMB (@lem4925054 A) (@lem4925053 A)). Qed.
Lemma lem4925057 {A B : Type'} (P : type1413 A B) : (term814 A B P) = (term815 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem4925058 {A : Type'} (P : type594 A) : (term1993 A P) = (term1994 A P).
Proof. exact (@lem4925057 (A -> Prop) (type610 A) P). Qed.
Lemma lem4925059 {A : Type'} : (term1995 A) = (term1996 A).
Proof. exact (@lem4925058 A (term1997 A)). Qed.
Lemma lem4925060 {A : Type'} (y : A -> Prop) : (term1998 A y) = (term1989 A y).
Proof. exact (eq_refl (term1998 A y)). Qed.
Lemma lem4925061 {A : Type'} (x : type610 A) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem4925062 {A : Type'} (y : A -> Prop) (x : type610 A) : (term1999 A y x) = (term2000 A y x).
Proof. exact (MK_COMB (@lem4925060 A y) (@lem4925061 A x)). Qed.
Lemma lem4925063 {A : Type'} (y : A -> Prop) (x : type610 A) : (term2000 A y x) = (term1987 A y x).
Proof. exact (eq_refl (term2000 A y x)). Qed.
Lemma lem4925064 {A : Type'} (y : A -> Prop) (x : type610 A) : (term1999 A y x) = (term1987 A y x).
Proof. exact (TRANS (@lem4925062 A y x) (@lem4925063 A y x)). Qed.
Lemma lem4925065 {A : Type'} (y : A -> Prop) : (term2001 A y) = (term1989 A y).
Proof. exact (fun_ext (fun x : type610 A => @lem4925064 A y x)). Qed.
Lemma lem4925066 {A : Type'} : (@ex ((A -> Prop) -> (A -> A -> Prop) -> A)) = (@ex ((A -> Prop) -> (A -> A -> Prop) -> A)).
Proof. exact (eq_refl (@ex ((A -> Prop) -> (A -> A -> Prop) -> A))). Qed.
Lemma lem4925067 {A : Type'} (y : A -> Prop) : (term2002 A y) = (term1990 A y).
Proof. exact (MK_COMB (@lem4925066 A) (@lem4925065 A y)). Qed.
Lemma lem4925068 {A : Type'} : (term2003 A) = (term1991 A).
Proof. exact (fun_ext (fun y : A -> Prop => @lem4925067 A y)). Qed.
Lemma lem4925069 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4925070 {A : Type'} : (term1995 A) = (term1992 A).
Proof. exact (MK_COMB (@lem4925069 A) (@lem4925068 A)). Qed.
Lemma lem4925071 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4925072 {A : Type'} : (term2004 A) = (term2005 A).
Proof. exact (MK_COMB (@lem4925071) (@lem4925070 A)). Qed.
Lemma lem4925073 {A : Type'} (y : A -> Prop) : (term1998 A y) = (term1989 A y).
Proof. exact (eq_refl (term1998 A y)). Qed.
Lemma lem4925074 {A : Type'} (x : type634 A) (y : A -> Prop) : (x y) = (x y).
Proof. exact (eq_refl (x y)). Qed.
Lemma lem4925075 {A : Type'} (x : type634 A) (y : A -> Prop) : (term2006 A x y) = (term2007 A x y).
Proof. exact (MK_COMB (@lem4925073 A y) (@lem4925074 A x y)). Qed.
Lemma lem4925076 {A : Type'} (x : type634 A) (y : A -> Prop) : (term2007 A x y) = (term2008 A x y).
Proof. exact (eq_refl (term2007 A x y)). Qed.
Lemma lem4925077 {A : Type'} (x : type634 A) (y : A -> Prop) : (term2006 A x y) = (term2008 A x y).
Proof. exact (TRANS (@lem4925075 A x y) (@lem4925076 A x y)). Qed.
Lemma lem4925078 {A : Type'} (x : type634 A) : (term2009 A x) = (term2010 A x).
Proof. exact (fun_ext (fun y : A -> Prop => @lem4925077 A x y)). Qed.
Lemma lem4925079 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4925080 {A : Type'} (x : type634 A) : (term2011 A x) = (term2012 A x).
Proof. exact (MK_COMB (@lem4925079 A) (@lem4925078 A x)). Qed.
Lemma lem4925081 {A : Type'} : (term2013 A) = (term2014 A).
Proof. exact (fun_ext (fun x : type634 A => @lem4925080 A x)). Qed.
Lemma lem4925082 {A : Type'} : (@ex ((A -> Prop) -> (A -> Prop) -> (A -> A -> Prop) -> A)) = (@ex ((A -> Prop) -> (A -> Prop) -> (A -> A -> Prop) -> A)).
Proof. exact (eq_refl (@ex ((A -> Prop) -> (A -> Prop) -> (A -> A -> Prop) -> A))). Qed.
Lemma lem4925083 {A : Type'} : (term1996 A) = (term2015 A).
Proof. exact (MK_COMB (@lem4925082 A) (@lem4925081 A)). Qed.
Lemma lem4925084 {A : Type'} : ((term1995 A) = (term1996 A)) = ((term1992 A) = (term2015 A)).
Proof. exact (MK_COMB (@lem4925072 A) (@lem4925083 A)). Qed.
Lemma lem4925085 {A : Type'} : (term1992 A) = (term2015 A).
Proof. exact (EQ_MP (@lem4925084 A) (@lem4925059 A)). Qed.
Lemma lem4925086 {A : Type'} : (term1927 A) = (term2015 A).
Proof. exact (TRANS (@lem4925055 A) (@lem4925085 A)). Qed.
Lemma lem4925087 {A : Type'} : (term1924 A) = (term1924 A).
Proof. exact (eq_refl (term1924 A)). Qed.
Lemma lem4925088 {A : Type'} : (term1928 A) = (term2016 A).
Proof. exact (MK_COMB (@lem4925087 A) (@lem4925086 A)). Qed.
Lemma lem4925090 {A : Type'} (P : Prop) (Q : A -> Prop) : (term1631 A P Q) = (term1632 A P Q).
Proof. exact (EQ_MP (@lem18929 A P Q) (@lem18928 A P Q)). Qed.
Lemma lem4925091 {A : Type'} (P : Prop) (Q : type136 A) : (term2017 A P Q) = (term2018 A P Q).
Proof. exact (@lem4925090 (type634 A) P Q). Qed.
Lemma lem4925092 {A : Type'} : (term2019 A) = (term2020 A).
Proof. exact (@lem4925091 A (term1922 A) (term2014 A)). Qed.
Lemma lem4925093 {A : Type'} (x : type634 A) : (term2021 A x) = (term2012 A x).
Proof. exact (eq_refl (term2021 A x)). Qed.
Lemma lem4925094 {A : Type'} : (term2022 A) = (term2014 A).
Proof. exact (fun_ext (fun x : type634 A => @lem4925093 A x)). Qed.
Lemma lem4925095 {A : Type'} : (@ex ((A -> Prop) -> (A -> Prop) -> (A -> A -> Prop) -> A)) = (@ex ((A -> Prop) -> (A -> Prop) -> (A -> A -> Prop) -> A)).
Proof. exact (eq_refl (@ex ((A -> Prop) -> (A -> Prop) -> (A -> A -> Prop) -> A))). Qed.
Lemma lem4925096 {A : Type'} : (term2023 A) = (term2015 A).
Proof. exact (MK_COMB (@lem4925095 A) (@lem4925094 A)). Qed.
Lemma lem4925097 {A : Type'} : (term1924 A) = (term1924 A).
Proof. exact (eq_refl (term1924 A)). Qed.
Lemma lem4925098 {A : Type'} : (term2019 A) = (term2016 A).
Proof. exact (MK_COMB (@lem4925097 A) (@lem4925096 A)). Qed.
Lemma lem4925099 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4925100 {A : Type'} : (term2024 A) = (term2025 A).
Proof. exact (MK_COMB (@lem4925099) (@lem4925098 A)). Qed.
Lemma lem4925101 {A : Type'} (x : type634 A) : (term2021 A x) = (term2012 A x).
Proof. exact (eq_refl (term2021 A x)). Qed.
Lemma lem4925102 {A : Type'} : (term1924 A) = (term1924 A).
Proof. exact (eq_refl (term1924 A)). Qed.
Lemma lem4925103 {A : Type'} (x : type634 A) : (term2026 A x) = (term2027 A x).
Proof. exact (MK_COMB (@lem4925102 A) (@lem4925101 A x)). Qed.
Lemma lem4925104 {A : Type'} : (term2028 A) = (term2029 A).
Proof. exact (fun_ext (fun x : type634 A => @lem4925103 A x)). Qed.
Lemma lem4925105 {A : Type'} : (@ex ((A -> Prop) -> (A -> Prop) -> (A -> A -> Prop) -> A)) = (@ex ((A -> Prop) -> (A -> Prop) -> (A -> A -> Prop) -> A)).
Proof. exact (eq_refl (@ex ((A -> Prop) -> (A -> Prop) -> (A -> A -> Prop) -> A))). Qed.
Lemma lem4925106 {A : Type'} : (term2020 A) = (term2030 A).
Proof. exact (MK_COMB (@lem4925105 A) (@lem4925104 A)). Qed.
Lemma lem4925107 {A : Type'} : ((term2019 A) = (term2020 A)) = ((term2016 A) = (term2030 A)).
Proof. exact (MK_COMB (@lem4925100 A) (@lem4925106 A)). Qed.
Lemma lem4925108 {A : Type'} : (term2016 A) = (term2030 A).
Proof. exact (EQ_MP (@lem4925107 A) (@lem4925092 A)). Qed.
Lemma lem4925109 {A : Type'} : (term1928 A) = (term2030 A).
Proof. exact (TRANS (@lem4925088 A) (@lem4925108 A)). Qed.
Lemma lem4925110 {A : Type'} : (term1862 A) = (term2030 A).
Proof. exact (TRANS (@lem4924964 A) (@lem4925109 A)). Qed.
Lemma lem4925111 {A : Type'} : (term1327 A) = (term2030 A).
Proof. exact (TRANS (@lem4924267 A) (@lem4925110 A)). Qed.
Lemma lem4925112 {A : Type'} (h1 : term1327 A) : term2030 A.
Proof. exact (EQ_MP (@lem4925111 A) (@lem4921352 A h1)). Qed.
Lemma lem4925123 {A B : Type'} (y : B -> Prop) (f : type1413 A B) (x : A) (s : A -> Prop) : (term2031 A B y f x s) = (term2032 A B y f x s).
Proof. exact (@lem17045 (y = (f x)) (@IN A x s)). Qed.
Lemma lem4925126 {A B : Type'} (y : B -> Prop) (f : type1413 A B) (x : A) (s : A -> Prop) : (term1401 A B y f x s) = (term1401 A B y f x s).
Proof. exact (eq_refl (term1401 A B y f x s)). Qed.
Lemma lem4925127 {A : Type'} (P : A -> Prop) : (term847 A P) = (term848 A P).
Proof. exact (@lem18394 A P). Qed.
Lemma lem4925128 {A B : Type'} (y : B -> Prop) (f : type1413 A B) (s : A -> Prop) : (term2033 A B y f s) = (term2034 A B y f s).
Proof. exact (@lem4925127 A (term1402 A B y f s)). Qed.
Lemma lem4925129 {A B : Type'} (y : B -> Prop) (f : type1413 A B) (x : A) (s : A -> Prop) : (term2035 A B y f s x) = (term1401 A B y f x s).
Proof. exact (eq_refl (term2035 A B y f s x)). Qed.
Lemma lem4925130 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem4925131 {A B : Type'} (y : B -> Prop) (f : type1413 A B) (x : A) (s : A -> Prop) : (term2036 A B y f s x) = (term2031 A B y f x s).
Proof. exact (MK_COMB (@lem4925130) (@lem4925129 A B y f x s)). Qed.
Lemma lem4925132 {A B : Type'} (y : B -> Prop) (f : type1413 A B) (x : A) (s : A -> Prop) : (term2036 A B y f s x) = (term2032 A B y f x s).
Proof. exact (TRANS (@lem4925131 A B y f x s) (@lem4925123 A B y f x s)). Qed.
Lemma lem4925133 {A B : Type'} (y : B -> Prop) (f : type1413 A B) (s : A -> Prop) : (term2037 A B y f s) = (term2038 A B y f s).
Proof. exact (fun_ext (fun x : A => @lem4925132 A B y f x s)). Qed.
Lemma lem4925134 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4925135 {A B : Type'} (y : B -> Prop) (f : type1413 A B) (s : A -> Prop) : (term2034 A B y f s) = (term2039 A B y f s).
Proof. exact (MK_COMB (@lem4925134 A) (@lem4925133 A B y f s)). Qed.
Lemma lem4925136 {A B : Type'} (y : B -> Prop) (f : type1413 A B) (s : A -> Prop) : (term2033 A B y f s) = (term2039 A B y f s).
Proof. exact (TRANS (@lem4925128 A B y f s) (@lem4925135 A B y f s)). Qed.
Lemma lem4925137 {A B : Type'} (y : B -> Prop) (f : type1413 A B) (s : A -> Prop) : (term1402 A B y f s) = (term1402 A B y f s).
Proof. exact (fun_ext (fun x : A => @lem4925126 A B y f x s)). Qed.
Lemma lem4925138 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem4925139 {A B : Type'} (y : B -> Prop) (f : type1413 A B) (s : A -> Prop) : (term1403 A B y f s) = (term1403 A B y f s).
Proof. exact (MK_COMB (@lem4925138 A) (@lem4925137 A B y f s)). Qed.
Lemma lem4925141 {A B : Type'} (y : B -> Prop) (f : type1413 A B) (s : A -> Prop) : (term2040 A B y f s) = (term2040 A B y f s).
Proof. exact (eq_refl (term2040 A B y f s)). Qed.
Lemma lem4925142 {A B : Type'} (y : B -> Prop) (f : type1413 A B) (s : A -> Prop) : (term2041 A B y f s) = (term2041 A B y f s).
Proof. exact (MK_COMB (@lem4925141 A B y f s) (@lem4925139 A B y f s)). Qed.
Lemma lem4925144 {A B : Type'} (y : B -> Prop) (f : type1413 A B) (s : A -> Prop) : (term2042 A B y f s) = (term2042 A B y f s).
Proof. exact (eq_refl (term2042 A B y f s)). Qed.
Lemma lem4925145 {A B : Type'} (y : B -> Prop) (f : type1413 A B) (s : A -> Prop) : (term2043 A B y f s) = (term2044 A B y f s).
Proof. exact (MK_COMB (@lem4925144 A B y f s) (@lem4925136 A B y f s)). Qed.
Lemma lem4925146 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4925147 {A B : Type'} (y : B -> Prop) (f : type1413 A B) (s : A -> Prop) : (term2045 A B y f s) = (term2046 A B y f s).
Proof. exact (MK_COMB (@lem4925146) (@lem4925145 A B y f s)). Qed.
Lemma lem4925148 {A B : Type'} (y : B -> Prop) (f : type1413 A B) (s : A -> Prop) : (term2047 A B y f s) = (term2048 A B y f s).
Proof. exact (MK_COMB (@lem4925147 A B y f s) (@lem4925142 A B y f s)). Qed.
Lemma lem4925149 {A B : Type'} (y : B -> Prop) (f : type1413 A B) (s : A -> Prop) : ((term1405 A B y f s) = (term1403 A B y f s)) = (term2047 A B y f s).
Proof. exact (@lem17784 (term1405 A B y f s) (term1403 A B y f s)). Qed.
Lemma lem4925150 {A B : Type'} (y : B -> Prop) (f : type1413 A B) (s : A -> Prop) : ((term1405 A B y f s) = (term1403 A B y f s)) = (term2048 A B y f s).
Proof. exact (TRANS (@lem4925149 A B y f s) (@lem4925148 A B y f s)). Qed.
Lemma lem4925151 {A B : Type'} (y : B -> Prop) (s : A -> Prop) : (term1406 A B y s) = (term2049 A B y s).
Proof. exact (fun_ext (fun f : type1413 A B => @lem4925150 A B y f s)). Qed.
Lemma lem4925152 {A B : Type'} : (@all (A -> B -> Prop)) = (@all (A -> B -> Prop)).
Proof. exact (eq_refl (@all (A -> B -> Prop))). Qed.
Lemma lem4925153 {A B : Type'} (y : B -> Prop) (s : A -> Prop) : (term1407 A B y s) = (term2050 A B y s).
Proof. exact (MK_COMB (@lem4925152 A B) (@lem4925151 A B y s)). Qed.
Lemma lem4925154 {A B : Type'} (y : B -> Prop) : (term1408 A B y) = (term2051 A B y).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4925153 A B y s)). Qed.
Lemma lem4925155 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4925156 {A B : Type'} (y : B -> Prop) : (term1409 A B y) = (term2052 A B y).
Proof. exact (MK_COMB (@lem4925155 A) (@lem4925154 A B y)). Qed.
Lemma lem4925157 {A B : Type'} : (term1410 A B) = (term2053 A B).
Proof. exact (fun_ext (fun y : B -> Prop => @lem4925156 A B y)). Qed.
Lemma lem4925158 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4925159 {A B : Type'} : (term1326 A B) = (term2054 A B).
Proof. exact (MK_COMB (@lem4925158 B) (@lem4925157 A B)). Qed.
Lemma lem4925169 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term1130 A P Q) = (term1131 A P Q).
Proof. exact (EQ_MP (@lem18953 A P Q) (@lem18952 A P Q)). Qed.
Lemma lem4925170 {A B : Type'} (P : type475 A B) (Q : type475 A B) : (term2055 A B P Q) = (term2056 A B P Q).
Proof. exact (@lem4925169 (type1413 A B) P Q). Qed.
Lemma lem4925171 {A B : Type'} (y : B -> Prop) (s : A -> Prop) : (term2057 A B y s) = (term2058 A B y s).
Proof. exact (@lem4925170 A B (term2059 A B y s) (term2060 A B y s)). Qed.
Lemma lem4925172 {A B : Type'} (y : B -> Prop) (f : type1413 A B) (s : A -> Prop) : (term2061 A B y s f) = (term2044 A B y f s).
Proof. exact (eq_refl (term2061 A B y s f)). Qed.
Lemma lem4925173 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4925174 {A B : Type'} (y : B -> Prop) (f : type1413 A B) (s : A -> Prop) : (term2062 A B y s f) = (term2046 A B y f s).
Proof. exact (MK_COMB (@lem4925173) (@lem4925172 A B y f s)). Qed.
Lemma lem4925175 {A B : Type'} (y : B -> Prop) (f : type1413 A B) (s : A -> Prop) : (term2063 A B y s f) = (term2041 A B y f s).
Proof. exact (eq_refl (term2063 A B y s f)). Qed.
Lemma lem4925176 {A B : Type'} (y : B -> Prop) (f : type1413 A B) (s : A -> Prop) : (term2064 A B y s f) = (term2048 A B y f s).
Proof. exact (MK_COMB (@lem4925174 A B y f s) (@lem4925175 A B y f s)). Qed.
Lemma lem4925177 {A B : Type'} (y : B -> Prop) (s : A -> Prop) : (term2065 A B y s) = (term2049 A B y s).
Proof. exact (fun_ext (fun f : type1413 A B => @lem4925176 A B y f s)). Qed.
Lemma lem4925178 {A B : Type'} : (@all (A -> B -> Prop)) = (@all (A -> B -> Prop)).
Proof. exact (eq_refl (@all (A -> B -> Prop))). Qed.
Lemma lem4925179 {A B : Type'} (y : B -> Prop) (s : A -> Prop) : (term2057 A B y s) = (term2050 A B y s).
Proof. exact (MK_COMB (@lem4925178 A B) (@lem4925177 A B y s)). Qed.
Lemma lem4925180 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4925181 {A B : Type'} (y : B -> Prop) (s : A -> Prop) : (term2066 A B y s) = (term2067 A B y s).
Proof. exact (MK_COMB (@lem4925180) (@lem4925179 A B y s)). Qed.
Lemma lem4925182 {A B : Type'} (y : B -> Prop) (f : type1413 A B) (s : A -> Prop) : (term2061 A B y s f) = (term2044 A B y f s).
Proof. exact (eq_refl (term2061 A B y s f)). Qed.
Lemma lem4925183 {A B : Type'} (y : B -> Prop) (s : A -> Prop) : (term2068 A B y s) = (term2059 A B y s).
Proof. exact (fun_ext (fun f : type1413 A B => @lem4925182 A B y f s)). Qed.
Lemma lem4925184 {A B : Type'} : (@all (A -> B -> Prop)) = (@all (A -> B -> Prop)).
Proof. exact (eq_refl (@all (A -> B -> Prop))). Qed.
Lemma lem4925185 {A B : Type'} (y : B -> Prop) (s : A -> Prop) : (term2069 A B y s) = (term2070 A B y s).
Proof. exact (MK_COMB (@lem4925184 A B) (@lem4925183 A B y s)). Qed.
Lemma lem4925186 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4925187 {A B : Type'} (y : B -> Prop) (s : A -> Prop) : (term2071 A B y s) = (term2072 A B y s).
Proof. exact (MK_COMB (@lem4925186) (@lem4925185 A B y s)). Qed.
Lemma lem4925188 {A B : Type'} (y : B -> Prop) (f : type1413 A B) (s : A -> Prop) : (term2063 A B y s f) = (term2041 A B y f s).
Proof. exact (eq_refl (term2063 A B y s f)). Qed.
Lemma lem4925189 {A B : Type'} (y : B -> Prop) (s : A -> Prop) : (term2073 A B y s) = (term2060 A B y s).
Proof. exact (fun_ext (fun f : type1413 A B => @lem4925188 A B y f s)). Qed.
Lemma lem4925190 {A B : Type'} : (@all (A -> B -> Prop)) = (@all (A -> B -> Prop)).
Proof. exact (eq_refl (@all (A -> B -> Prop))). Qed.
Lemma lem4925191 {A B : Type'} (y : B -> Prop) (s : A -> Prop) : (term2074 A B y s) = (term2075 A B y s).
Proof. exact (MK_COMB (@lem4925190 A B) (@lem4925189 A B y s)). Qed.
Lemma lem4925192 {A B : Type'} (y : B -> Prop) (s : A -> Prop) : (term2058 A B y s) = (term2076 A B y s).
Proof. exact (MK_COMB (@lem4925187 A B y s) (@lem4925191 A B y s)). Qed.
Lemma lem4925193 {A B : Type'} (y : B -> Prop) (s : A -> Prop) : ((term2057 A B y s) = (term2058 A B y s)) = ((term2050 A B y s) = (term2076 A B y s)).
Proof. exact (MK_COMB (@lem4925181 A B y s) (@lem4925192 A B y s)). Qed.
Lemma lem4925194 {A B : Type'} (y : B -> Prop) (s : A -> Prop) : (term2050 A B y s) = (term2076 A B y s).
Proof. exact (EQ_MP (@lem4925193 A B y s) (@lem4925171 A B y s)). Qed.
Lemma lem4925387 {A B : Type'} (y : B -> Prop) : (term2051 A B y) = (term2077 A B y).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4925194 A B y s)). Qed.
Lemma lem4925388 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4925389 {A B : Type'} (y : B -> Prop) : (term2052 A B y) = (term2078 A B y).
Proof. exact (MK_COMB (@lem4925388 A) (@lem4925387 A B y)). Qed.
Lemma lem4925391 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term1130 A P Q) = (term1131 A P Q).
Proof. exact (EQ_MP (@lem18953 A P Q) (@lem18952 A P Q)). Qed.
Lemma lem4925392 {A : Type'} (P : type686 A) (Q : type686 A) : (term1132 A P Q) = (term1133 A P Q).
Proof. exact (@lem4925391 (A -> Prop) P Q). Qed.
Lemma lem4925393 {A B : Type'} (y : B -> Prop) : (term2079 A B y) = (term2080 A B y).
Proof. exact (@lem4925392 A (term2081 A B y) (term2082 A B y)). Qed.
Lemma lem4925394 {A B : Type'} (y : B -> Prop) (s : A -> Prop) : (term2083 A B y s) = (term2070 A B y s).
Proof. exact (eq_refl (term2083 A B y s)). Qed.
Lemma lem4925395 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4925396 {A B : Type'} (y : B -> Prop) (s : A -> Prop) : (term2084 A B y s) = (term2072 A B y s).
Proof. exact (MK_COMB (@lem4925395) (@lem4925394 A B y s)). Qed.
Lemma lem4925397 {A B : Type'} (y : B -> Prop) (s : A -> Prop) : (term2085 A B y s) = (term2075 A B y s).
Proof. exact (eq_refl (term2085 A B y s)). Qed.
Lemma lem4925398 {A B : Type'} (y : B -> Prop) (s : A -> Prop) : (term2086 A B y s) = (term2076 A B y s).
Proof. exact (MK_COMB (@lem4925396 A B y s) (@lem4925397 A B y s)). Qed.
Lemma lem4925399 {A B : Type'} (y : B -> Prop) : (term2087 A B y) = (term2077 A B y).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4925398 A B y s)). Qed.
Lemma lem4925400 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4925401 {A B : Type'} (y : B -> Prop) : (term2079 A B y) = (term2078 A B y).
Proof. exact (MK_COMB (@lem4925400 A) (@lem4925399 A B y)). Qed.
Lemma lem4925402 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4925403 {A B : Type'} (y : B -> Prop) : (term2088 A B y) = (term2089 A B y).
Proof. exact (MK_COMB (@lem4925402) (@lem4925401 A B y)). Qed.
Lemma lem4925404 {A B : Type'} (y : B -> Prop) (s : A -> Prop) : (term2083 A B y s) = (term2070 A B y s).
Proof. exact (eq_refl (term2083 A B y s)). Qed.
Lemma lem4925405 {A B : Type'} (y : B -> Prop) : (term2090 A B y) = (term2081 A B y).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4925404 A B y s)). Qed.
Lemma lem4925406 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4925407 {A B : Type'} (y : B -> Prop) : (term2091 A B y) = (term2092 A B y).
Proof. exact (MK_COMB (@lem4925406 A) (@lem4925405 A B y)). Qed.
Lemma lem4925408 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4925409 {A B : Type'} (y : B -> Prop) : (term2093 A B y) = (term2094 A B y).
Proof. exact (MK_COMB (@lem4925408) (@lem4925407 A B y)). Qed.
Lemma lem4925410 {A B : Type'} (y : B -> Prop) (s : A -> Prop) : (term2085 A B y s) = (term2075 A B y s).
Proof. exact (eq_refl (term2085 A B y s)). Qed.
Lemma lem4925411 {A B : Type'} (y : B -> Prop) : (term2095 A B y) = (term2082 A B y).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4925410 A B y s)). Qed.
Lemma lem4925412 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4925413 {A B : Type'} (y : B -> Prop) : (term2096 A B y) = (term2097 A B y).
Proof. exact (MK_COMB (@lem4925412 A) (@lem4925411 A B y)). Qed.
Lemma lem4925414 {A B : Type'} (y : B -> Prop) : (term2080 A B y) = (term2098 A B y).
Proof. exact (MK_COMB (@lem4925409 A B y) (@lem4925413 A B y)). Qed.
Lemma lem4925415 {A B : Type'} (y : B -> Prop) : ((term2079 A B y) = (term2080 A B y)) = ((term2078 A B y) = (term2098 A B y)).
Proof. exact (MK_COMB (@lem4925403 A B y) (@lem4925414 A B y)). Qed.
Lemma lem4925416 {A B : Type'} (y : B -> Prop) : (term2078 A B y) = (term2098 A B y).
Proof. exact (EQ_MP (@lem4925415 A B y) (@lem4925393 A B y)). Qed.
Lemma lem4925617 {A B : Type'} (y : B -> Prop) : (term2052 A B y) = (term2098 A B y).
Proof. exact (TRANS (@lem4925389 A B y) (@lem4925416 A B y)). Qed.
Lemma lem4925618 {A B : Type'} : (term2053 A B) = (term2099 A B).
Proof. exact (fun_ext (fun y : B -> Prop => @lem4925617 A B y)). Qed.
Lemma lem4925619 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4925620 {A B : Type'} : (term2054 A B) = (term2100 A B).
Proof. exact (MK_COMB (@lem4925619 B) (@lem4925618 A B)). Qed.
Lemma lem4925622 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term1130 A P Q) = (term1131 A P Q).
Proof. exact (EQ_MP (@lem18953 A P Q) (@lem18952 A P Q)). Qed.
Lemma lem4925623 {B : Type'} (P : type686 B) (Q : type686 B) : (term1132 B P Q) = (term1133 B P Q).
Proof. exact (@lem4925622 (B -> Prop) P Q). Qed.
Lemma lem4925624 {A B : Type'} : (term2101 A B) = (term2102 A B).
Proof. exact (@lem4925623 B (term2103 A B) (term2104 A B)). Qed.
Lemma lem4925625 {A B : Type'} (y : B -> Prop) : (term2105 A B y) = (term2092 A B y).
Proof. exact (eq_refl (term2105 A B y)). Qed.
Lemma lem4925626 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4925627 {A B : Type'} (y : B -> Prop) : (term2106 A B y) = (term2094 A B y).
Proof. exact (MK_COMB (@lem4925626) (@lem4925625 A B y)). Qed.
Lemma lem4925628 {A B : Type'} (y : B -> Prop) : (term2107 A B y) = (term2097 A B y).
Proof. exact (eq_refl (term2107 A B y)). Qed.
Lemma lem4925629 {A B : Type'} (y : B -> Prop) : (term2108 A B y) = (term2098 A B y).
Proof. exact (MK_COMB (@lem4925627 A B y) (@lem4925628 A B y)). Qed.
Lemma lem4925630 {A B : Type'} : (term2109 A B) = (term2099 A B).
Proof. exact (fun_ext (fun y : B -> Prop => @lem4925629 A B y)). Qed.
Lemma lem4925631 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4925632 {A B : Type'} : (term2101 A B) = (term2100 A B).
Proof. exact (MK_COMB (@lem4925631 B) (@lem4925630 A B)). Qed.
Lemma lem4925633 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4925634 {A B : Type'} : (term2110 A B) = (term2111 A B).
Proof. exact (MK_COMB (@lem4925633) (@lem4925632 A B)). Qed.
Lemma lem4925635 {A B : Type'} (y : B -> Prop) : (term2105 A B y) = (term2092 A B y).
Proof. exact (eq_refl (term2105 A B y)). Qed.
Lemma lem4925636 {A B : Type'} : (term2112 A B) = (term2103 A B).
Proof. exact (fun_ext (fun y : B -> Prop => @lem4925635 A B y)). Qed.
Lemma lem4925637 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4925638 {A B : Type'} : (term2113 A B) = (term2114 A B).
Proof. exact (MK_COMB (@lem4925637 B) (@lem4925636 A B)). Qed.
Lemma lem4925639 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4925640 {A B : Type'} : (term2115 A B) = (term2116 A B).
Proof. exact (MK_COMB (@lem4925639) (@lem4925638 A B)). Qed.
Lemma lem4925641 {A B : Type'} (y : B -> Prop) : (term2107 A B y) = (term2097 A B y).
Proof. exact (eq_refl (term2107 A B y)). Qed.
Lemma lem4925642 {A B : Type'} : (term2117 A B) = (term2104 A B).
Proof. exact (fun_ext (fun y : B -> Prop => @lem4925641 A B y)). Qed.
Lemma lem4925643 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4925644 {A B : Type'} : (term2118 A B) = (term2119 A B).
Proof. exact (MK_COMB (@lem4925643 B) (@lem4925642 A B)). Qed.
Lemma lem4925645 {A B : Type'} : (term2102 A B) = (term2120 A B).
Proof. exact (MK_COMB (@lem4925640 A B) (@lem4925644 A B)). Qed.
Lemma lem4925646 {A B : Type'} : ((term2101 A B) = (term2102 A B)) = ((term2100 A B) = (term2120 A B)).
Proof. exact (MK_COMB (@lem4925634 A B) (@lem4925645 A B)). Qed.
Lemma lem4925647 {A B : Type'} : (term2100 A B) = (term2120 A B).
Proof. exact (EQ_MP (@lem4925646 A B) (@lem4925624 A B)). Qed.
Lemma lem4925856 {A B : Type'} : (term2054 A B) = (term2120 A B).
Proof. exact (TRANS (@lem4925620 A B) (@lem4925647 A B)). Qed.
Lemma lem4925858 {A : Type'} (P : Prop) (Q : A -> Prop) : (term797 A P Q) = (term798 A P Q).
Proof. exact (EQ_MP (@lem18911 A P Q) (@lem18910 A P Q)). Qed.
Lemma lem4925859 {A : Type'} (P : Prop) (Q : A -> Prop) : (term797 A P Q) = (term798 A P Q).
Proof. exact (@lem4925858 A P Q). Qed.
Lemma lem4925860 {A B : Type'} (y : B -> Prop) (f : type1413 A B) (s : A -> Prop) : (term2121 A B y f s) = (term2122 A B y f s).
Proof. exact (@lem4925859 A (term2123 A B y f s) (term1402 A B y f s)). Qed.
Lemma lem4925861 {A B : Type'} (y : B -> Prop) (f : type1413 A B) (x : A) (s : A -> Prop) : (term2035 A B y f s x) = (term1401 A B y f x s).
Proof. exact (eq_refl (term2035 A B y f s x)). Qed.
Lemma lem4925862 {A B : Type'} (y : B -> Prop) (f : type1413 A B) (s : A -> Prop) : (term2124 A B y f s) = (term1402 A B y f s).
Proof. exact (fun_ext (fun x : A => @lem4925861 A B y f x s)). Qed.
Lemma lem4925863 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem4925864 {A B : Type'} (y : B -> Prop) (f : type1413 A B) (s : A -> Prop) : (term2125 A B y f s) = (term1403 A B y f s).
Proof. exact (MK_COMB (@lem4925863 A) (@lem4925862 A B y f s)). Qed.
Lemma lem4925865 {A B : Type'} (y : B -> Prop) (f : type1413 A B) (s : A -> Prop) : (term2040 A B y f s) = (term2040 A B y f s).
Proof. exact (eq_refl (term2040 A B y f s)). Qed.
Lemma lem4925866 {A B : Type'} (y : B -> Prop) (f : type1413 A B) (s : A -> Prop) : (term2121 A B y f s) = (term2041 A B y f s).
Proof. exact (MK_COMB (@lem4925865 A B y f s) (@lem4925864 A B y f s)). Qed.
Lemma lem4925867 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4925868 {A B : Type'} (y : B -> Prop) (f : type1413 A B) (s : A -> Prop) : (term2126 A B y f s) = (term2127 A B y f s).
Proof. exact (MK_COMB (@lem4925867) (@lem4925866 A B y f s)). Qed.
Lemma lem4925869 {A B : Type'} (y : B -> Prop) (f : type1413 A B) (x : A) (s : A -> Prop) : (term2035 A B y f s x) = (term1401 A B y f x s).
Proof. exact (eq_refl (term2035 A B y f s x)). Qed.
Lemma lem4925870 {A B : Type'} (y : B -> Prop) (f : type1413 A B) (s : A -> Prop) : (term2040 A B y f s) = (term2040 A B y f s).
Proof. exact (eq_refl (term2040 A B y f s)). Qed.
Lemma lem4925871 {A B : Type'} (y : B -> Prop) (f : type1413 A B) (x : A) (s : A -> Prop) : (term2128 A B y f s x) = (term2129 A B y f x s).
Proof. exact (MK_COMB (@lem4925870 A B y f s) (@lem4925869 A B y f x s)). Qed.
Lemma lem4925872 {A B : Type'} (y : B -> Prop) (f : type1413 A B) (s : A -> Prop) : (term2130 A B y f s) = (term2131 A B y f s).
Proof. exact (fun_ext (fun x : A => @lem4925871 A B y f x s)). Qed.
Lemma lem4925873 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem4925874 {A B : Type'} (y : B -> Prop) (f : type1413 A B) (s : A -> Prop) : (term2122 A B y f s) = (term2132 A B y f s).
Proof. exact (MK_COMB (@lem4925873 A) (@lem4925872 A B y f s)). Qed.
Lemma lem4925875 {A B : Type'} (y : B -> Prop) (f : type1413 A B) (s : A -> Prop) : ((term2121 A B y f s) = (term2122 A B y f s)) = ((term2041 A B y f s) = (term2132 A B y f s)).
Proof. exact (MK_COMB (@lem4925868 A B y f s) (@lem4925874 A B y f s)). Qed.
Lemma lem4925876 {A B : Type'} (y : B -> Prop) (f : type1413 A B) (s : A -> Prop) : (term2041 A B y f s) = (term2132 A B y f s).
Proof. exact (EQ_MP (@lem4925875 A B y f s) (@lem4925860 A B y f s)). Qed.
Lemma lem4925877 {A B : Type'} (y : B -> Prop) (s : A -> Prop) : (term2060 A B y s) = (term2133 A B y s).
Proof. exact (fun_ext (fun f : type1413 A B => @lem4925876 A B y f s)). Qed.
Lemma lem4925878 {A B : Type'} : (@all (A -> B -> Prop)) = (@all (A -> B -> Prop)).
Proof. exact (eq_refl (@all (A -> B -> Prop))). Qed.
Lemma lem4925879 {A B : Type'} (y : B -> Prop) (s : A -> Prop) : (term2075 A B y s) = (term2134 A B y s).
Proof. exact (MK_COMB (@lem4925878 A B) (@lem4925877 A B y s)). Qed.
Lemma lem4925881 {A B : Type'} (P : type1413 A B) : (term814 A B P) = (term815 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem4925882 {A B : Type'} (P : type468 A B) : (term2135 A B P) = (term2136 A B P).
Proof. exact (@lem4925881 (type1413 A B) A P). Qed.
Lemma lem4925883 {A B : Type'} (y : B -> Prop) (s : A -> Prop) : (term2137 A B y s) = (term2138 A B y s).
Proof. exact (@lem4925882 A B (term2139 A B y s)). Qed.
Lemma lem4925884 {A B : Type'} (y : B -> Prop) (f : type1413 A B) (s : A -> Prop) : (term2140 A B y s f) = (term2131 A B y f s).
Proof. exact (eq_refl (term2140 A B y s f)). Qed.
Lemma lem4925885 {A : Type'} (x : A) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem4925886 {A B : Type'} (y : B -> Prop) (f : type1413 A B) (s : A -> Prop) (x : A) : (term2141 A B y s f x) = (term2142 A B y f s x).
Proof. exact (MK_COMB (@lem4925884 A B y f s) (@lem4925885 A x)). Qed.
Lemma lem4925887 {A B : Type'} (y : B -> Prop) (f : type1413 A B) (x : A) (s : A -> Prop) : (term2142 A B y f s x) = (term2129 A B y f x s).
Proof. exact (eq_refl (term2142 A B y f s x)). Qed.
Lemma lem4925888 {A B : Type'} (y : B -> Prop) (f : type1413 A B) (x : A) (s : A -> Prop) : (term2141 A B y s f x) = (term2129 A B y f x s).
Proof. exact (TRANS (@lem4925886 A B y f s x) (@lem4925887 A B y f x s)). Qed.
Lemma lem4925889 {A B : Type'} (y : B -> Prop) (f : type1413 A B) (s : A -> Prop) : (term2143 A B y s f) = (term2131 A B y f s).
Proof. exact (fun_ext (fun x : A => @lem4925888 A B y f x s)). Qed.
Lemma lem4925890 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem4925891 {A B : Type'} (y : B -> Prop) (f : type1413 A B) (s : A -> Prop) : (term2144 A B y s f) = (term2132 A B y f s).
Proof. exact (MK_COMB (@lem4925890 A) (@lem4925889 A B y f s)). Qed.
Lemma lem4925892 {A B : Type'} (y : B -> Prop) (s : A -> Prop) : (term2145 A B y s) = (term2133 A B y s).
Proof. exact (fun_ext (fun f : type1413 A B => @lem4925891 A B y f s)). Qed.
Lemma lem4925893 {A B : Type'} : (@all (A -> B -> Prop)) = (@all (A -> B -> Prop)).
Proof. exact (eq_refl (@all (A -> B -> Prop))). Qed.
Lemma lem4925894 {A B : Type'} (y : B -> Prop) (s : A -> Prop) : (term2137 A B y s) = (term2134 A B y s).
Proof. exact (MK_COMB (@lem4925893 A B) (@lem4925892 A B y s)). Qed.
Lemma lem4925895 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4925896 {A B : Type'} (y : B -> Prop) (s : A -> Prop) : (term2146 A B y s) = (term2147 A B y s).
Proof. exact (MK_COMB (@lem4925895) (@lem4925894 A B y s)). Qed.
Lemma lem4925897 {A B : Type'} (y : B -> Prop) (f : type1413 A B) (s : A -> Prop) : (term2140 A B y s f) = (term2131 A B y f s).
Proof. exact (eq_refl (term2140 A B y s f)). Qed.
Lemma lem4925898 {A B : Type'} (x : type473 A B) (f : type1413 A B) : (x f) = (x f).
Proof. exact (eq_refl (x f)). Qed.
Lemma lem4925899 {A B : Type'} (y : B -> Prop) (s : A -> Prop) (x : type473 A B) (f : type1413 A B) : (term2148 A B y s x f) = (term2149 A B y s x f).
Proof. exact (MK_COMB (@lem4925897 A B y f s) (@lem4925898 A B x f)). Qed.
Lemma lem4925900 {A B : Type'} (y : B -> Prop) (x : type473 A B) (f : type1413 A B) (s : A -> Prop) : (term2149 A B y s x f) = (term2150 A B y x f s).
Proof. exact (eq_refl (term2149 A B y s x f)). Qed.
Lemma lem4925901 {A B : Type'} (y : B -> Prop) (x : type473 A B) (f : type1413 A B) (s : A -> Prop) : (term2148 A B y s x f) = (term2150 A B y x f s).
Proof. exact (TRANS (@lem4925899 A B y s x f) (@lem4925900 A B y x f s)). Qed.
Lemma lem4925902 {A B : Type'} (y : B -> Prop) (x : type473 A B) (s : A -> Prop) : (term2151 A B y s x) = (term2152 A B y x s).
Proof. exact (fun_ext (fun f : type1413 A B => @lem4925901 A B y x f s)). Qed.
Lemma lem4925903 {A B : Type'} : (@all (A -> B -> Prop)) = (@all (A -> B -> Prop)).
Proof. exact (eq_refl (@all (A -> B -> Prop))). Qed.
Lemma lem4925904 {A B : Type'} (y : B -> Prop) (x : type473 A B) (s : A -> Prop) : (term2153 A B y s x) = (term2154 A B y x s).
Proof. exact (MK_COMB (@lem4925903 A B) (@lem4925902 A B y x s)). Qed.
Lemma lem4925905 {A B : Type'} (y : B -> Prop) (s : A -> Prop) : (term2155 A B y s) = (term2156 A B y s).
Proof. exact (fun_ext (fun x : type473 A B => @lem4925904 A B y x s)). Qed.
Lemma lem4925906 {A B : Type'} : (@ex ((A -> B -> Prop) -> A)) = (@ex ((A -> B -> Prop) -> A)).
Proof. exact (eq_refl (@ex ((A -> B -> Prop) -> A))). Qed.
Lemma lem4925907 {A B : Type'} (y : B -> Prop) (s : A -> Prop) : (term2138 A B y s) = (term2157 A B y s).
Proof. exact (MK_COMB (@lem4925906 A B) (@lem4925905 A B y s)). Qed.
Lemma lem4925908 {A B : Type'} (y : B -> Prop) (s : A -> Prop) : ((term2137 A B y s) = (term2138 A B y s)) = ((term2134 A B y s) = (term2157 A B y s)).
Proof. exact (MK_COMB (@lem4925896 A B y s) (@lem4925907 A B y s)). Qed.
Lemma lem4925909 {A B : Type'} (y : B -> Prop) (s : A -> Prop) : (term2134 A B y s) = (term2157 A B y s).
Proof. exact (EQ_MP (@lem4925908 A B y s) (@lem4925883 A B y s)). Qed.
Lemma lem4925910 {A B : Type'} (y : B -> Prop) (s : A -> Prop) : (term2075 A B y s) = (term2157 A B y s).
Proof. exact (TRANS (@lem4925879 A B y s) (@lem4925909 A B y s)). Qed.
Lemma lem4925911 {A B : Type'} (y : B -> Prop) : (term2082 A B y) = (term2158 A B y).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4925910 A B y s)). Qed.
Lemma lem4925912 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4925913 {A B : Type'} (y : B -> Prop) : (term2097 A B y) = (term2159 A B y).
Proof. exact (MK_COMB (@lem4925912 A) (@lem4925911 A B y)). Qed.
Lemma lem4925915 {A B : Type'} (P : type1413 A B) : (term814 A B P) = (term815 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem4925916 {A B : Type'} (P : type586 A B) : (term2160 A B P) = (term2161 A B P).
Proof. exact (@lem4925915 (A -> Prop) (type473 A B) P). Qed.
Lemma lem4925917 {A B : Type'} (y : B -> Prop) : (term2162 A B y) = (term2163 A B y).
Proof. exact (@lem4925916 A B (term2164 A B y)). Qed.
Lemma lem4925918 {A B : Type'} (y : B -> Prop) (s : A -> Prop) : (term2165 A B y s) = (term2156 A B y s).
Proof. exact (eq_refl (term2165 A B y s)). Qed.
Lemma lem4925919 {A B : Type'} (x : type473 A B) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem4925920 {A B : Type'} (y : B -> Prop) (s : A -> Prop) (x : type473 A B) : (term2166 A B y s x) = (term2167 A B y s x).
Proof. exact (MK_COMB (@lem4925918 A B y s) (@lem4925919 A B x)). Qed.
Lemma lem4925921 {A B : Type'} (y : B -> Prop) (x : type473 A B) (s : A -> Prop) : (term2167 A B y s x) = (term2154 A B y x s).
Proof. exact (eq_refl (term2167 A B y s x)). Qed.
Lemma lem4925922 {A B : Type'} (y : B -> Prop) (x : type473 A B) (s : A -> Prop) : (term2166 A B y s x) = (term2154 A B y x s).
Proof. exact (TRANS (@lem4925920 A B y s x) (@lem4925921 A B y x s)). Qed.
Lemma lem4925923 {A B : Type'} (y : B -> Prop) (s : A -> Prop) : (term2168 A B y s) = (term2156 A B y s).
Proof. exact (fun_ext (fun x : type473 A B => @lem4925922 A B y x s)). Qed.
Lemma lem4925924 {A B : Type'} : (@ex ((A -> B -> Prop) -> A)) = (@ex ((A -> B -> Prop) -> A)).
Proof. exact (eq_refl (@ex ((A -> B -> Prop) -> A))). Qed.
Lemma lem4925925 {A B : Type'} (y : B -> Prop) (s : A -> Prop) : (term2169 A B y s) = (term2157 A B y s).
Proof. exact (MK_COMB (@lem4925924 A B) (@lem4925923 A B y s)). Qed.
Lemma lem4925926 {A B : Type'} (y : B -> Prop) : (term2170 A B y) = (term2158 A B y).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4925925 A B y s)). Qed.
Lemma lem4925927 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4925928 {A B : Type'} (y : B -> Prop) : (term2162 A B y) = (term2159 A B y).
Proof. exact (MK_COMB (@lem4925927 A) (@lem4925926 A B y)). Qed.
Lemma lem4925929 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4925930 {A B : Type'} (y : B -> Prop) : (term2171 A B y) = (term2172 A B y).
Proof. exact (MK_COMB (@lem4925929) (@lem4925928 A B y)). Qed.
Lemma lem4925931 {A B : Type'} (y : B -> Prop) (s : A -> Prop) : (term2165 A B y s) = (term2156 A B y s).
Proof. exact (eq_refl (term2165 A B y s)). Qed.
Lemma lem4925932 {A B : Type'} (x : type622 A B) (s : A -> Prop) : (x s) = (x s).
Proof. exact (eq_refl (x s)). Qed.
Lemma lem4925933 {A B : Type'} (y : B -> Prop) (x : type622 A B) (s : A -> Prop) : (term2173 A B y x s) = (term2174 A B y x s).
Proof. exact (MK_COMB (@lem4925931 A B y s) (@lem4925932 A B x s)). Qed.
Lemma lem4925934 {A B : Type'} (y : B -> Prop) (x : type622 A B) (s : A -> Prop) : (term2174 A B y x s) = (term2175 A B y x s).
Proof. exact (eq_refl (term2174 A B y x s)). Qed.
Lemma lem4925935 {A B : Type'} (y : B -> Prop) (x : type622 A B) (s : A -> Prop) : (term2173 A B y x s) = (term2175 A B y x s).
Proof. exact (TRANS (@lem4925933 A B y x s) (@lem4925934 A B y x s)). Qed.
Lemma lem4925936 {A B : Type'} (y : B -> Prop) (x : type622 A B) : (term2176 A B y x) = (term2177 A B y x).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4925935 A B y x s)). Qed.
Lemma lem4925937 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4925938 {A B : Type'} (y : B -> Prop) (x : type622 A B) : (term2178 A B y x) = (term2179 A B y x).
Proof. exact (MK_COMB (@lem4925937 A) (@lem4925936 A B y x)). Qed.
Lemma lem4925939 {A B : Type'} (y : B -> Prop) : (term2180 A B y) = (term2181 A B y).
Proof. exact (fun_ext (fun x : type622 A B => @lem4925938 A B y x)). Qed.
Lemma lem4925940 {A B : Type'} : (@ex ((A -> Prop) -> (A -> B -> Prop) -> A)) = (@ex ((A -> Prop) -> (A -> B -> Prop) -> A)).
Proof. exact (eq_refl (@ex ((A -> Prop) -> (A -> B -> Prop) -> A))). Qed.
Lemma lem4925941 {A B : Type'} (y : B -> Prop) : (term2163 A B y) = (term2182 A B y).
Proof. exact (MK_COMB (@lem4925940 A B) (@lem4925939 A B y)). Qed.
Lemma lem4925942 {A B : Type'} (y : B -> Prop) : ((term2162 A B y) = (term2163 A B y)) = ((term2159 A B y) = (term2182 A B y)).
Proof. exact (MK_COMB (@lem4925930 A B y) (@lem4925941 A B y)). Qed.
Lemma lem4925943 {A B : Type'} (y : B -> Prop) : (term2159 A B y) = (term2182 A B y).
Proof. exact (EQ_MP (@lem4925942 A B y) (@lem4925917 A B y)). Qed.
Lemma lem4925944 {A B : Type'} (y : B -> Prop) : (term2097 A B y) = (term2182 A B y).
Proof. exact (TRANS (@lem4925913 A B y) (@lem4925943 A B y)). Qed.
Lemma lem4925945 {A B : Type'} : (term2104 A B) = (term2183 A B).
Proof. exact (fun_ext (fun y : B -> Prop => @lem4925944 A B y)). Qed.
Lemma lem4925946 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4925947 {A B : Type'} : (term2119 A B) = (term2184 A B).
Proof. exact (MK_COMB (@lem4925946 B) (@lem4925945 A B)). Qed.
Lemma lem4925949 {A B : Type'} (P : type1413 A B) : (term814 A B P) = (term815 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem4925950 {A B : Type'} (P : type818 A B) : (term2185 A B P) = (term2186 A B P).
Proof. exact (@lem4925949 (B -> Prop) (type622 A B) P). Qed.
Lemma lem4925951 {A B : Type'} : (term2187 A B) = (term2188 A B).
Proof. exact (@lem4925950 A B (term2189 A B)). Qed.
Lemma lem4925952 {A B : Type'} (y : B -> Prop) : (term2190 A B y) = (term2181 A B y).
Proof. exact (eq_refl (term2190 A B y)). Qed.
Lemma lem4925953 {A B : Type'} (x : type622 A B) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem4925954 {A B : Type'} (y : B -> Prop) (x : type622 A B) : (term2191 A B y x) = (term2192 A B y x).
Proof. exact (MK_COMB (@lem4925952 A B y) (@lem4925953 A B x)). Qed.
Lemma lem4925955 {A B : Type'} (y : B -> Prop) (x : type622 A B) : (term2192 A B y x) = (term2179 A B y x).
Proof. exact (eq_refl (term2192 A B y x)). Qed.
Lemma lem4925956 {A B : Type'} (y : B -> Prop) (x : type622 A B) : (term2191 A B y x) = (term2179 A B y x).
Proof. exact (TRANS (@lem4925954 A B y x) (@lem4925955 A B y x)). Qed.
Lemma lem4925957 {A B : Type'} (y : B -> Prop) : (term2193 A B y) = (term2181 A B y).
Proof. exact (fun_ext (fun x : type622 A B => @lem4925956 A B y x)). Qed.
Lemma lem4925958 {A B : Type'} : (@ex ((A -> Prop) -> (A -> B -> Prop) -> A)) = (@ex ((A -> Prop) -> (A -> B -> Prop) -> A)).
Proof. exact (eq_refl (@ex ((A -> Prop) -> (A -> B -> Prop) -> A))). Qed.
Lemma lem4925959 {A B : Type'} (y : B -> Prop) : (term2194 A B y) = (term2182 A B y).
Proof. exact (MK_COMB (@lem4925958 A B) (@lem4925957 A B y)). Qed.
Lemma lem4925960 {A B : Type'} : (term2195 A B) = (term2183 A B).
Proof. exact (fun_ext (fun y : B -> Prop => @lem4925959 A B y)). Qed.
Lemma lem4925961 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4925962 {A B : Type'} : (term2187 A B) = (term2184 A B).
Proof. exact (MK_COMB (@lem4925961 B) (@lem4925960 A B)). Qed.
Lemma lem4925963 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4925964 {A B : Type'} : (term2196 A B) = (term2197 A B).
Proof. exact (MK_COMB (@lem4925963) (@lem4925962 A B)). Qed.
Lemma lem4925965 {A B : Type'} (y : B -> Prop) : (term2190 A B y) = (term2181 A B y).
Proof. exact (eq_refl (term2190 A B y)). Qed.
Lemma lem4925966 {A B : Type'} (x : type833 A B) (y : B -> Prop) : (x y) = (x y).
Proof. exact (eq_refl (x y)). Qed.
Lemma lem4925967 {A B : Type'} (x : type833 A B) (y : B -> Prop) : (term2198 A B x y) = (term2199 A B x y).
Proof. exact (MK_COMB (@lem4925965 A B y) (@lem4925966 A B x y)). Qed.
Lemma lem4925968 {A B : Type'} (x : type833 A B) (y : B -> Prop) : (term2199 A B x y) = (term2200 A B x y).
Proof. exact (eq_refl (term2199 A B x y)). Qed.
Lemma lem4925969 {A B : Type'} (x : type833 A B) (y : B -> Prop) : (term2198 A B x y) = (term2200 A B x y).
Proof. exact (TRANS (@lem4925967 A B x y) (@lem4925968 A B x y)). Qed.
Lemma lem4925970 {A B : Type'} (x : type833 A B) : (term2201 A B x) = (term2202 A B x).
Proof. exact (fun_ext (fun y : B -> Prop => @lem4925969 A B x y)). Qed.
Lemma lem4925971 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4925972 {A B : Type'} (x : type833 A B) : (term2203 A B x) = (term2204 A B x).
Proof. exact (MK_COMB (@lem4925971 B) (@lem4925970 A B x)). Qed.
Lemma lem4925973 {A B : Type'} : (term2205 A B) = (term2206 A B).
Proof. exact (fun_ext (fun x : type833 A B => @lem4925972 A B x)). Qed.
Lemma lem4925974 {A B : Type'} : (@ex ((B -> Prop) -> (A -> Prop) -> (A -> B -> Prop) -> A)) = (@ex ((B -> Prop) -> (A -> Prop) -> (A -> B -> Prop) -> A)).
Proof. exact (eq_refl (@ex ((B -> Prop) -> (A -> Prop) -> (A -> B -> Prop) -> A))). Qed.
Lemma lem4925975 {A B : Type'} : (term2188 A B) = (term2207 A B).
Proof. exact (MK_COMB (@lem4925974 A B) (@lem4925973 A B)). Qed.
Lemma lem4925976 {A B : Type'} : ((term2187 A B) = (term2188 A B)) = ((term2184 A B) = (term2207 A B)).
Proof. exact (MK_COMB (@lem4925964 A B) (@lem4925975 A B)). Qed.
Lemma lem4925977 {A B : Type'} : (term2184 A B) = (term2207 A B).
Proof. exact (EQ_MP (@lem4925976 A B) (@lem4925951 A B)). Qed.
Lemma lem4925978 {A B : Type'} : (term2119 A B) = (term2207 A B).
Proof. exact (TRANS (@lem4925947 A B) (@lem4925977 A B)). Qed.
Lemma lem4925979 {A B : Type'} : (term2116 A B) = (term2116 A B).
Proof. exact (eq_refl (term2116 A B)). Qed.
Lemma lem4925980 {A B : Type'} : (term2120 A B) = (term2208 A B).
Proof. exact (MK_COMB (@lem4925979 A B) (@lem4925978 A B)). Qed.
Lemma lem4925982 {A : Type'} (P : Prop) (Q : A -> Prop) : (term1631 A P Q) = (term1632 A P Q).
Proof. exact (EQ_MP (@lem18929 A P Q) (@lem18928 A P Q)). Qed.
Lemma lem4925983 {A B : Type'} (P : Prop) (Q : type209 A B) : (term2209 A B P Q) = (term2210 A B P Q).
Proof. exact (@lem4925982 (type833 A B) P Q). Qed.
Lemma lem4925984 {A B : Type'} : (term2211 A B) = (term2212 A B).
Proof. exact (@lem4925983 A B (term2114 A B) (term2206 A B)). Qed.
Lemma lem4925985 {A B : Type'} (x : type833 A B) : (term2213 A B x) = (term2204 A B x).
Proof. exact (eq_refl (term2213 A B x)). Qed.
Lemma lem4925986 {A B : Type'} : (term2214 A B) = (term2206 A B).
Proof. exact (fun_ext (fun x : type833 A B => @lem4925985 A B x)). Qed.
Lemma lem4925987 {A B : Type'} : (@ex ((B -> Prop) -> (A -> Prop) -> (A -> B -> Prop) -> A)) = (@ex ((B -> Prop) -> (A -> Prop) -> (A -> B -> Prop) -> A)).
Proof. exact (eq_refl (@ex ((B -> Prop) -> (A -> Prop) -> (A -> B -> Prop) -> A))). Qed.
Lemma lem4925988 {A B : Type'} : (term2215 A B) = (term2207 A B).
Proof. exact (MK_COMB (@lem4925987 A B) (@lem4925986 A B)). Qed.
Lemma lem4925989 {A B : Type'} : (term2116 A B) = (term2116 A B).
Proof. exact (eq_refl (term2116 A B)). Qed.
Lemma lem4925990 {A B : Type'} : (term2211 A B) = (term2208 A B).
Proof. exact (MK_COMB (@lem4925989 A B) (@lem4925988 A B)). Qed.
Lemma lem4925991 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4925992 {A B : Type'} : (term2216 A B) = (term2217 A B).
Proof. exact (MK_COMB (@lem4925991) (@lem4925990 A B)). Qed.
Lemma lem4925993 {A B : Type'} (x : type833 A B) : (term2213 A B x) = (term2204 A B x).
Proof. exact (eq_refl (term2213 A B x)). Qed.
Lemma lem4925994 {A B : Type'} : (term2116 A B) = (term2116 A B).
Proof. exact (eq_refl (term2116 A B)). Qed.
Lemma lem4925995 {A B : Type'} (x : type833 A B) : (term2218 A B x) = (term2219 A B x).
Proof. exact (MK_COMB (@lem4925994 A B) (@lem4925993 A B x)). Qed.
Lemma lem4925996 {A B : Type'} : (term2220 A B) = (term2221 A B).
Proof. exact (fun_ext (fun x : type833 A B => @lem4925995 A B x)). Qed.
Lemma lem4925997 {A B : Type'} : (@ex ((B -> Prop) -> (A -> Prop) -> (A -> B -> Prop) -> A)) = (@ex ((B -> Prop) -> (A -> Prop) -> (A -> B -> Prop) -> A)).
Proof. exact (eq_refl (@ex ((B -> Prop) -> (A -> Prop) -> (A -> B -> Prop) -> A))). Qed.
Lemma lem4925998 {A B : Type'} : (term2212 A B) = (term2222 A B).
Proof. exact (MK_COMB (@lem4925997 A B) (@lem4925996 A B)). Qed.
Lemma lem4925999 {A B : Type'} : ((term2211 A B) = (term2212 A B)) = ((term2208 A B) = (term2222 A B)).
Proof. exact (MK_COMB (@lem4925992 A B) (@lem4925998 A B)). Qed.
Lemma lem4926000 {A B : Type'} : (term2208 A B) = (term2222 A B).
Proof. exact (EQ_MP (@lem4925999 A B) (@lem4925984 A B)). Qed.
Lemma lem4926001 {A B : Type'} : (term2120 A B) = (term2222 A B).
Proof. exact (TRANS (@lem4925980 A B) (@lem4926000 A B)). Qed.
Lemma lem4926002 {A B : Type'} : (term2054 A B) = (term2222 A B).
Proof. exact (TRANS (@lem4925856 A B) (@lem4926001 A B)). Qed.
Lemma lem4926003 {A B : Type'} : (term1326 A B) = (term2222 A B).
Proof. exact (TRANS (@lem4925159 A B) (@lem4926002 A B)). Qed.
Lemma lem4926004 {A B : Type'} (h1 : term1326 A B) : term2222 A B.
Proof. exact (EQ_MP (@lem4926003 A B) (@lem4921353 A B h1)). Qed.
Lemma lem4926015 {A : Type'} (y : nat) (f : A -> nat) (x : A) (s : A -> Prop) : (term2223 A y f x s) = (term2224 A y f x s).
Proof. exact (@lem17045 (y = (f x)) (@IN A x s)). Qed.
Lemma lem4926018 {A : Type'} (y : nat) (f : A -> nat) (x : A) (s : A -> Prop) : (term1391 A y f x s) = (term1391 A y f x s).
Proof. exact (eq_refl (term1391 A y f x s)). Qed.
Lemma lem4926019 {A : Type'} (P : A -> Prop) : (term847 A P) = (term848 A P).
Proof. exact (@lem18394 A P). Qed.
Lemma lem4926020 {A : Type'} (y : nat) (f : A -> nat) (s : A -> Prop) : (term2225 A y f s) = (term2226 A y f s).
Proof. exact (@lem4926019 A (term1392 A y f s)). Qed.
Lemma lem4926021 {A : Type'} (y : nat) (f : A -> nat) (x : A) (s : A -> Prop) : (term2227 A y f s x) = (term1391 A y f x s).
Proof. exact (eq_refl (term2227 A y f s x)). Qed.
Lemma lem4926022 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem4926023 {A : Type'} (y : nat) (f : A -> nat) (x : A) (s : A -> Prop) : (term2228 A y f s x) = (term2223 A y f x s).
Proof. exact (MK_COMB (@lem4926022) (@lem4926021 A y f x s)). Qed.
Lemma lem4926024 {A : Type'} (y : nat) (f : A -> nat) (x : A) (s : A -> Prop) : (term2228 A y f s x) = (term2224 A y f x s).
Proof. exact (TRANS (@lem4926023 A y f x s) (@lem4926015 A y f x s)). Qed.
Lemma lem4926025 {A : Type'} (y : nat) (f : A -> nat) (s : A -> Prop) : (term2229 A y f s) = (term2230 A y f s).
Proof. exact (fun_ext (fun x : A => @lem4926024 A y f x s)). Qed.
Lemma lem4926026 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4926027 {A : Type'} (y : nat) (f : A -> nat) (s : A -> Prop) : (term2226 A y f s) = (term2231 A y f s).
Proof. exact (MK_COMB (@lem4926026 A) (@lem4926025 A y f s)). Qed.
Lemma lem4926028 {A : Type'} (y : nat) (f : A -> nat) (s : A -> Prop) : (term2225 A y f s) = (term2231 A y f s).
Proof. exact (TRANS (@lem4926020 A y f s) (@lem4926027 A y f s)). Qed.
Lemma lem4926029 {A : Type'} (y : nat) (f : A -> nat) (s : A -> Prop) : (term1392 A y f s) = (term1392 A y f s).
Proof. exact (fun_ext (fun x : A => @lem4926018 A y f x s)). Qed.
Lemma lem4926030 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem4926031 {A : Type'} (y : nat) (f : A -> nat) (s : A -> Prop) : (term1393 A y f s) = (term1393 A y f s).
Proof. exact (MK_COMB (@lem4926030 A) (@lem4926029 A y f s)). Qed.
Lemma lem4926033 {A : Type'} (y : nat) (f : A -> nat) (s : A -> Prop) : (term2232 A y f s) = (term2232 A y f s).
Proof. exact (eq_refl (term2232 A y f s)). Qed.
Lemma lem4926034 {A : Type'} (y : nat) (f : A -> nat) (s : A -> Prop) : (term2233 A y f s) = (term2233 A y f s).
Proof. exact (MK_COMB (@lem4926033 A y f s) (@lem4926031 A y f s)). Qed.
Lemma lem4926036 {A : Type'} (y : nat) (f : A -> nat) (s : A -> Prop) : (term2234 A y f s) = (term2234 A y f s).
Proof. exact (eq_refl (term2234 A y f s)). Qed.
Lemma lem4926037 {A : Type'} (y : nat) (f : A -> nat) (s : A -> Prop) : (term2235 A y f s) = (term2236 A y f s).
Proof. exact (MK_COMB (@lem4926036 A y f s) (@lem4926028 A y f s)). Qed.
Lemma lem4926038 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4926039 {A : Type'} (y : nat) (f : A -> nat) (s : A -> Prop) : (term2237 A y f s) = (term2238 A y f s).
Proof. exact (MK_COMB (@lem4926038) (@lem4926037 A y f s)). Qed.
Lemma lem4926040 {A : Type'} (y : nat) (f : A -> nat) (s : A -> Prop) : (term2239 A y f s) = (term2240 A y f s).
Proof. exact (MK_COMB (@lem4926039 A y f s) (@lem4926034 A y f s)). Qed.
Lemma lem4926041 {A : Type'} (y : nat) (f : A -> nat) (s : A -> Prop) : ((term1395 A y f s) = (term1393 A y f s)) = (term2239 A y f s).
Proof. exact (@lem17784 (term1395 A y f s) (term1393 A y f s)). Qed.
Lemma lem4926042 {A : Type'} (y : nat) (f : A -> nat) (s : A -> Prop) : ((term1395 A y f s) = (term1393 A y f s)) = (term2240 A y f s).
Proof. exact (TRANS (@lem4926041 A y f s) (@lem4926040 A y f s)). Qed.
Lemma lem4926043 {A : Type'} (y : nat) (s : A -> Prop) : (term1396 A y s) = (term2241 A y s).
Proof. exact (fun_ext (fun f : A -> nat => @lem4926042 A y f s)). Qed.
Lemma lem4926044 {A : Type'} : (@all (A -> nat)) = (@all (A -> nat)).
Proof. exact (eq_refl (@all (A -> nat))). Qed.
Lemma lem4926045 {A : Type'} (y : nat) (s : A -> Prop) : (term1397 A y s) = (term2242 A y s).
Proof. exact (MK_COMB (@lem4926044 A) (@lem4926043 A y s)). Qed.
Lemma lem4926046 {A : Type'} (y : nat) : (term1398 A y) = (term2243 A y).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4926045 A y s)). Qed.
Lemma lem4926047 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4926048 {A : Type'} (y : nat) : (term1399 A y) = (term2244 A y).
Proof. exact (MK_COMB (@lem4926047 A) (@lem4926046 A y)). Qed.
Lemma lem4926049 {A : Type'} : (term1400 A) = (term2245 A).
Proof. exact (fun_ext (fun y : nat => @lem4926048 A y)). Qed.
Lemma lem4926050 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4926051 {A : Type'} : (term1325 A) = (term2246 A).
Proof. exact (MK_COMB (@lem4926050) (@lem4926049 A)). Qed.
Lemma lem4926061 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term1130 A P Q) = (term1131 A P Q).
Proof. exact (EQ_MP (@lem18953 A P Q) (@lem18952 A P Q)). Qed.
Lemma lem4926062 {A : Type'} (P : type704 A) (Q : type704 A) : (term2247 A P Q) = (term2248 A P Q).
Proof. exact (@lem4926061 (A -> nat) P Q). Qed.
Lemma lem4926063 {A : Type'} (y : nat) (s : A -> Prop) : (term2249 A y s) = (term2250 A y s).
Proof. exact (@lem4926062 A (term2251 A y s) (term2252 A y s)). Qed.
Lemma lem4926064 {A : Type'} (y : nat) (f : A -> nat) (s : A -> Prop) : (term2253 A y s f) = (term2236 A y f s).
Proof. exact (eq_refl (term2253 A y s f)). Qed.
Lemma lem4926065 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4926066 {A : Type'} (y : nat) (f : A -> nat) (s : A -> Prop) : (term2254 A y s f) = (term2238 A y f s).
Proof. exact (MK_COMB (@lem4926065) (@lem4926064 A y f s)). Qed.
Lemma lem4926067 {A : Type'} (y : nat) (f : A -> nat) (s : A -> Prop) : (term2255 A y s f) = (term2233 A y f s).
Proof. exact (eq_refl (term2255 A y s f)). Qed.
Lemma lem4926068 {A : Type'} (y : nat) (f : A -> nat) (s : A -> Prop) : (term2256 A y s f) = (term2240 A y f s).
Proof. exact (MK_COMB (@lem4926066 A y f s) (@lem4926067 A y f s)). Qed.
Lemma lem4926069 {A : Type'} (y : nat) (s : A -> Prop) : (term2257 A y s) = (term2241 A y s).
Proof. exact (fun_ext (fun f : A -> nat => @lem4926068 A y f s)). Qed.
Lemma lem4926070 {A : Type'} : (@all (A -> nat)) = (@all (A -> nat)).
Proof. exact (eq_refl (@all (A -> nat))). Qed.
Lemma lem4926071 {A : Type'} (y : nat) (s : A -> Prop) : (term2249 A y s) = (term2242 A y s).
Proof. exact (MK_COMB (@lem4926070 A) (@lem4926069 A y s)). Qed.
Lemma lem4926072 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4926073 {A : Type'} (y : nat) (s : A -> Prop) : (term2258 A y s) = (term2259 A y s).
Proof. exact (MK_COMB (@lem4926072) (@lem4926071 A y s)). Qed.
Lemma lem4926074 {A : Type'} (y : nat) (f : A -> nat) (s : A -> Prop) : (term2253 A y s f) = (term2236 A y f s).
Proof. exact (eq_refl (term2253 A y s f)). Qed.
Lemma lem4926075 {A : Type'} (y : nat) (s : A -> Prop) : (term2260 A y s) = (term2251 A y s).
Proof. exact (fun_ext (fun f : A -> nat => @lem4926074 A y f s)). Qed.
Lemma lem4926076 {A : Type'} : (@all (A -> nat)) = (@all (A -> nat)).
Proof. exact (eq_refl (@all (A -> nat))). Qed.
Lemma lem4926077 {A : Type'} (y : nat) (s : A -> Prop) : (term2261 A y s) = (term2262 A y s).
Proof. exact (MK_COMB (@lem4926076 A) (@lem4926075 A y s)). Qed.
Lemma lem4926078 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4926079 {A : Type'} (y : nat) (s : A -> Prop) : (term2263 A y s) = (term2264 A y s).
Proof. exact (MK_COMB (@lem4926078) (@lem4926077 A y s)). Qed.
Lemma lem4926080 {A : Type'} (y : nat) (f : A -> nat) (s : A -> Prop) : (term2255 A y s f) = (term2233 A y f s).
Proof. exact (eq_refl (term2255 A y s f)). Qed.
Lemma lem4926081 {A : Type'} (y : nat) (s : A -> Prop) : (term2265 A y s) = (term2252 A y s).
Proof. exact (fun_ext (fun f : A -> nat => @lem4926080 A y f s)). Qed.
Lemma lem4926082 {A : Type'} : (@all (A -> nat)) = (@all (A -> nat)).
Proof. exact (eq_refl (@all (A -> nat))). Qed.
Lemma lem4926083 {A : Type'} (y : nat) (s : A -> Prop) : (term2266 A y s) = (term2267 A y s).
Proof. exact (MK_COMB (@lem4926082 A) (@lem4926081 A y s)). Qed.
Lemma lem4926084 {A : Type'} (y : nat) (s : A -> Prop) : (term2250 A y s) = (term2268 A y s).
Proof. exact (MK_COMB (@lem4926079 A y s) (@lem4926083 A y s)). Qed.
Lemma lem4926085 {A : Type'} (y : nat) (s : A -> Prop) : ((term2249 A y s) = (term2250 A y s)) = ((term2242 A y s) = (term2268 A y s)).
Proof. exact (MK_COMB (@lem4926073 A y s) (@lem4926084 A y s)). Qed.
Lemma lem4926086 {A : Type'} (y : nat) (s : A -> Prop) : (term2242 A y s) = (term2268 A y s).
Proof. exact (EQ_MP (@lem4926085 A y s) (@lem4926063 A y s)). Qed.
Lemma lem4926279 {A : Type'} (y : nat) : (term2243 A y) = (term2269 A y).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4926086 A y s)). Qed.
Lemma lem4926280 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4926281 {A : Type'} (y : nat) : (term2244 A y) = (term2270 A y).
Proof. exact (MK_COMB (@lem4926280 A) (@lem4926279 A y)). Qed.
Lemma lem4926283 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term1130 A P Q) = (term1131 A P Q).
Proof. exact (EQ_MP (@lem18953 A P Q) (@lem18952 A P Q)). Qed.
Lemma lem4926284 {A : Type'} (P : type686 A) (Q : type686 A) : (term1132 A P Q) = (term1133 A P Q).
Proof. exact (@lem4926283 (A -> Prop) P Q). Qed.
Lemma lem4926285 {A : Type'} (y : nat) : (term2271 A y) = (term2272 A y).
Proof. exact (@lem4926284 A (term2273 A y) (term2274 A y)). Qed.
Lemma lem4926286 {A : Type'} (y : nat) (s : A -> Prop) : (term2275 A y s) = (term2262 A y s).
Proof. exact (eq_refl (term2275 A y s)). Qed.
Lemma lem4926287 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4926288 {A : Type'} (y : nat) (s : A -> Prop) : (term2276 A y s) = (term2264 A y s).
Proof. exact (MK_COMB (@lem4926287) (@lem4926286 A y s)). Qed.
Lemma lem4926289 {A : Type'} (y : nat) (s : A -> Prop) : (term2277 A y s) = (term2267 A y s).
Proof. exact (eq_refl (term2277 A y s)). Qed.
Lemma lem4926290 {A : Type'} (y : nat) (s : A -> Prop) : (term2278 A y s) = (term2268 A y s).
Proof. exact (MK_COMB (@lem4926288 A y s) (@lem4926289 A y s)). Qed.
Lemma lem4926291 {A : Type'} (y : nat) : (term2279 A y) = (term2269 A y).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4926290 A y s)). Qed.
Lemma lem4926292 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4926293 {A : Type'} (y : nat) : (term2271 A y) = (term2270 A y).
Proof. exact (MK_COMB (@lem4926292 A) (@lem4926291 A y)). Qed.
Lemma lem4926294 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4926295 {A : Type'} (y : nat) : (term2280 A y) = (term2281 A y).
Proof. exact (MK_COMB (@lem4926294) (@lem4926293 A y)). Qed.
Lemma lem4926296 {A : Type'} (y : nat) (s : A -> Prop) : (term2275 A y s) = (term2262 A y s).
Proof. exact (eq_refl (term2275 A y s)). Qed.
Lemma lem4926297 {A : Type'} (y : nat) : (term2282 A y) = (term2273 A y).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4926296 A y s)). Qed.
Lemma lem4926298 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4926299 {A : Type'} (y : nat) : (term2283 A y) = (term2284 A y).
Proof. exact (MK_COMB (@lem4926298 A) (@lem4926297 A y)). Qed.
Lemma lem4926300 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4926301 {A : Type'} (y : nat) : (term2285 A y) = (term2286 A y).
Proof. exact (MK_COMB (@lem4926300) (@lem4926299 A y)). Qed.
Lemma lem4926302 {A : Type'} (y : nat) (s : A -> Prop) : (term2277 A y s) = (term2267 A y s).
Proof. exact (eq_refl (term2277 A y s)). Qed.
Lemma lem4926303 {A : Type'} (y : nat) : (term2287 A y) = (term2274 A y).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4926302 A y s)). Qed.
Lemma lem4926304 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4926305 {A : Type'} (y : nat) : (term2288 A y) = (term2289 A y).
Proof. exact (MK_COMB (@lem4926304 A) (@lem4926303 A y)). Qed.
Lemma lem4926306 {A : Type'} (y : nat) : (term2272 A y) = (term2290 A y).
Proof. exact (MK_COMB (@lem4926301 A y) (@lem4926305 A y)). Qed.
Lemma lem4926307 {A : Type'} (y : nat) : ((term2271 A y) = (term2272 A y)) = ((term2270 A y) = (term2290 A y)).
Proof. exact (MK_COMB (@lem4926295 A y) (@lem4926306 A y)). Qed.
Lemma lem4926308 {A : Type'} (y : nat) : (term2270 A y) = (term2290 A y).
Proof. exact (EQ_MP (@lem4926307 A y) (@lem4926285 A y)). Qed.
Lemma lem4926509 {A : Type'} (y : nat) : (term2244 A y) = (term2290 A y).
Proof. exact (TRANS (@lem4926281 A y) (@lem4926308 A y)). Qed.
Lemma lem4926510 {A : Type'} : (term2245 A) = (term2291 A).
Proof. exact (fun_ext (fun y : nat => @lem4926509 A y)). Qed.
Lemma lem4926511 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4926512 {A : Type'} : (term2246 A) = (term2292 A).
Proof. exact (MK_COMB (@lem4926511) (@lem4926510 A)). Qed.
Lemma lem4926514 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term1130 A P Q) = (term1131 A P Q).
Proof. exact (EQ_MP (@lem18953 A P Q) (@lem18952 A P Q)). Qed.
Lemma lem4926515 (P : nat -> Prop) (Q : nat -> Prop) : (term2293 P Q) = (term2294 P Q).
Proof. exact (@lem4926514 nat P Q). Qed.
Lemma lem4926516 {A : Type'} : (term2295 A) = (term2296 A).
Proof. exact (@lem4926515 (term2297 A) (term2298 A)). Qed.
Lemma lem4926517 {A : Type'} (y : nat) : (term2299 A y) = (term2284 A y).
Proof. exact (eq_refl (term2299 A y)). Qed.
Lemma lem4926518 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4926519 {A : Type'} (y : nat) : (term2300 A y) = (term2286 A y).
Proof. exact (MK_COMB (@lem4926518) (@lem4926517 A y)). Qed.
Lemma lem4926520 {A : Type'} (y : nat) : (term2301 A y) = (term2289 A y).
Proof. exact (eq_refl (term2301 A y)). Qed.
Lemma lem4926521 {A : Type'} (y : nat) : (term2302 A y) = (term2290 A y).
Proof. exact (MK_COMB (@lem4926519 A y) (@lem4926520 A y)). Qed.
Lemma lem4926522 {A : Type'} : (term2303 A) = (term2291 A).
Proof. exact (fun_ext (fun y : nat => @lem4926521 A y)). Qed.
Lemma lem4926523 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4926524 {A : Type'} : (term2295 A) = (term2292 A).
Proof. exact (MK_COMB (@lem4926523) (@lem4926522 A)). Qed.
Lemma lem4926525 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4926526 {A : Type'} : (term2304 A) = (term2305 A).
Proof. exact (MK_COMB (@lem4926525) (@lem4926524 A)). Qed.
Lemma lem4926527 {A : Type'} (y : nat) : (term2299 A y) = (term2284 A y).
Proof. exact (eq_refl (term2299 A y)). Qed.
Lemma lem4926528 {A : Type'} : (term2306 A) = (term2297 A).
Proof. exact (fun_ext (fun y : nat => @lem4926527 A y)). Qed.
Lemma lem4926529 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4926530 {A : Type'} : (term2307 A) = (term2308 A).
Proof. exact (MK_COMB (@lem4926529) (@lem4926528 A)). Qed.
Lemma lem4926531 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4926532 {A : Type'} : (term2309 A) = (term2310 A).
Proof. exact (MK_COMB (@lem4926531) (@lem4926530 A)). Qed.
Lemma lem4926533 {A : Type'} (y : nat) : (term2301 A y) = (term2289 A y).
Proof. exact (eq_refl (term2301 A y)). Qed.
Lemma lem4926534 {A : Type'} : (term2311 A) = (term2298 A).
Proof. exact (fun_ext (fun y : nat => @lem4926533 A y)). Qed.
Lemma lem4926535 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4926536 {A : Type'} : (term2312 A) = (term2313 A).
Proof. exact (MK_COMB (@lem4926535) (@lem4926534 A)). Qed.
Lemma lem4926537 {A : Type'} : (term2296 A) = (term2314 A).
Proof. exact (MK_COMB (@lem4926532 A) (@lem4926536 A)). Qed.
Lemma lem4926538 {A : Type'} : ((term2295 A) = (term2296 A)) = ((term2292 A) = (term2314 A)).
Proof. exact (MK_COMB (@lem4926526 A) (@lem4926537 A)). Qed.
Lemma lem4926539 {A : Type'} : (term2292 A) = (term2314 A).
Proof. exact (EQ_MP (@lem4926538 A) (@lem4926516 A)). Qed.
Lemma lem4926748 {A : Type'} : (term2246 A) = (term2314 A).
Proof. exact (TRANS (@lem4926512 A) (@lem4926539 A)). Qed.
Lemma lem4926750 {A : Type'} (P : Prop) (Q : A -> Prop) : (term797 A P Q) = (term798 A P Q).
Proof. exact (EQ_MP (@lem18911 A P Q) (@lem18910 A P Q)). Qed.
Lemma lem4926751 {A : Type'} (P : Prop) (Q : A -> Prop) : (term797 A P Q) = (term798 A P Q).
Proof. exact (@lem4926750 A P Q). Qed.
Lemma lem4926752 {A : Type'} (y : nat) (f : A -> nat) (s : A -> Prop) : (term2315 A y f s) = (term2316 A y f s).
Proof. exact (@lem4926751 A (term2317 A y f s) (term1392 A y f s)). Qed.
Lemma lem4926753 {A : Type'} (y : nat) (f : A -> nat) (x : A) (s : A -> Prop) : (term2227 A y f s x) = (term1391 A y f x s).
Proof. exact (eq_refl (term2227 A y f s x)). Qed.
Lemma lem4926754 {A : Type'} (y : nat) (f : A -> nat) (s : A -> Prop) : (term2318 A y f s) = (term1392 A y f s).
Proof. exact (fun_ext (fun x : A => @lem4926753 A y f x s)). Qed.
Lemma lem4926755 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem4926756 {A : Type'} (y : nat) (f : A -> nat) (s : A -> Prop) : (term2319 A y f s) = (term1393 A y f s).
Proof. exact (MK_COMB (@lem4926755 A) (@lem4926754 A y f s)). Qed.
Lemma lem4926757 {A : Type'} (y : nat) (f : A -> nat) (s : A -> Prop) : (term2232 A y f s) = (term2232 A y f s).
Proof. exact (eq_refl (term2232 A y f s)). Qed.
Lemma lem4926758 {A : Type'} (y : nat) (f : A -> nat) (s : A -> Prop) : (term2315 A y f s) = (term2233 A y f s).
Proof. exact (MK_COMB (@lem4926757 A y f s) (@lem4926756 A y f s)). Qed.
Lemma lem4926759 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4926760 {A : Type'} (y : nat) (f : A -> nat) (s : A -> Prop) : (term2320 A y f s) = (term2321 A y f s).
Proof. exact (MK_COMB (@lem4926759) (@lem4926758 A y f s)). Qed.
Lemma lem4926761 {A : Type'} (y : nat) (f : A -> nat) (x : A) (s : A -> Prop) : (term2227 A y f s x) = (term1391 A y f x s).
Proof. exact (eq_refl (term2227 A y f s x)). Qed.
Lemma lem4926762 {A : Type'} (y : nat) (f : A -> nat) (s : A -> Prop) : (term2232 A y f s) = (term2232 A y f s).
Proof. exact (eq_refl (term2232 A y f s)). Qed.
Lemma lem4926763 {A : Type'} (y : nat) (f : A -> nat) (x : A) (s : A -> Prop) : (term2322 A y f s x) = (term2323 A y f x s).
Proof. exact (MK_COMB (@lem4926762 A y f s) (@lem4926761 A y f x s)). Qed.
Lemma lem4926764 {A : Type'} (y : nat) (f : A -> nat) (s : A -> Prop) : (term2324 A y f s) = (term2325 A y f s).
Proof. exact (fun_ext (fun x : A => @lem4926763 A y f x s)). Qed.
Lemma lem4926765 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem4926766 {A : Type'} (y : nat) (f : A -> nat) (s : A -> Prop) : (term2316 A y f s) = (term2326 A y f s).
Proof. exact (MK_COMB (@lem4926765 A) (@lem4926764 A y f s)). Qed.
Lemma lem4926767 {A : Type'} (y : nat) (f : A -> nat) (s : A -> Prop) : ((term2315 A y f s) = (term2316 A y f s)) = ((term2233 A y f s) = (term2326 A y f s)).
Proof. exact (MK_COMB (@lem4926760 A y f s) (@lem4926766 A y f s)). Qed.
Lemma lem4926768 {A : Type'} (y : nat) (f : A -> nat) (s : A -> Prop) : (term2233 A y f s) = (term2326 A y f s).
Proof. exact (EQ_MP (@lem4926767 A y f s) (@lem4926752 A y f s)). Qed.
Lemma lem4926769 {A : Type'} (y : nat) (s : A -> Prop) : (term2252 A y s) = (term2327 A y s).
Proof. exact (fun_ext (fun f : A -> nat => @lem4926768 A y f s)). Qed.
Lemma lem4926770 {A : Type'} : (@all (A -> nat)) = (@all (A -> nat)).
Proof. exact (eq_refl (@all (A -> nat))). Qed.
Lemma lem4926771 {A : Type'} (y : nat) (s : A -> Prop) : (term2267 A y s) = (term2328 A y s).
Proof. exact (MK_COMB (@lem4926770 A) (@lem4926769 A y s)). Qed.
Lemma lem4926773 {A B : Type'} (P : type1413 A B) : (term814 A B P) = (term815 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem4926774 {A : Type'} (P : type699 A) : (term2329 A P) = (term2330 A P).
Proof. exact (@lem4926773 (A -> nat) A P). Qed.
Lemma lem4926775 {A : Type'} (y : nat) (s : A -> Prop) : (term2331 A y s) = (term2332 A y s).
Proof. exact (@lem4926774 A (term2333 A y s)). Qed.
Lemma lem4926776 {A : Type'} (y : nat) (f : A -> nat) (s : A -> Prop) : (term2334 A y s f) = (term2325 A y f s).
Proof. exact (eq_refl (term2334 A y s f)). Qed.
Lemma lem4926777 {A : Type'} (x : A) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem4926778 {A : Type'} (y : nat) (f : A -> nat) (s : A -> Prop) (x : A) : (term2335 A y s f x) = (term2336 A y f s x).
Proof. exact (MK_COMB (@lem4926776 A y f s) (@lem4926777 A x)). Qed.
Lemma lem4926779 {A : Type'} (y : nat) (f : A -> nat) (x : A) (s : A -> Prop) : (term2336 A y f s x) = (term2323 A y f x s).
Proof. exact (eq_refl (term2336 A y f s x)). Qed.
Lemma lem4926780 {A : Type'} (y : nat) (f : A -> nat) (x : A) (s : A -> Prop) : (term2335 A y s f x) = (term2323 A y f x s).
Proof. exact (TRANS (@lem4926778 A y f s x) (@lem4926779 A y f x s)). Qed.
Lemma lem4926781 {A : Type'} (y : nat) (f : A -> nat) (s : A -> Prop) : (term2337 A y s f) = (term2325 A y f s).
Proof. exact (fun_ext (fun x : A => @lem4926780 A y f x s)). Qed.
Lemma lem4926782 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem4926783 {A : Type'} (y : nat) (f : A -> nat) (s : A -> Prop) : (term2338 A y s f) = (term2326 A y f s).
Proof. exact (MK_COMB (@lem4926782 A) (@lem4926781 A y f s)). Qed.
Lemma lem4926784 {A : Type'} (y : nat) (s : A -> Prop) : (term2339 A y s) = (term2327 A y s).
Proof. exact (fun_ext (fun f : A -> nat => @lem4926783 A y f s)). Qed.
Lemma lem4926785 {A : Type'} : (@all (A -> nat)) = (@all (A -> nat)).
Proof. exact (eq_refl (@all (A -> nat))). Qed.
Lemma lem4926786 {A : Type'} (y : nat) (s : A -> Prop) : (term2331 A y s) = (term2328 A y s).
Proof. exact (MK_COMB (@lem4926785 A) (@lem4926784 A y s)). Qed.
Lemma lem4926787 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4926788 {A : Type'} (y : nat) (s : A -> Prop) : (term2340 A y s) = (term2341 A y s).
Proof. exact (MK_COMB (@lem4926787) (@lem4926786 A y s)). Qed.
Lemma lem4926789 {A : Type'} (y : nat) (f : A -> nat) (s : A -> Prop) : (term2334 A y s f) = (term2325 A y f s).
Proof. exact (eq_refl (term2334 A y s f)). Qed.
Lemma lem4926790 {A : Type'} (x : type703 A) (f : A -> nat) : (x f) = (x f).
Proof. exact (eq_refl (x f)). Qed.
Lemma lem4926791 {A : Type'} (y : nat) (s : A -> Prop) (x : type703 A) (f : A -> nat) : (term2342 A y s x f) = (term2343 A y s x f).
Proof. exact (MK_COMB (@lem4926789 A y f s) (@lem4926790 A x f)). Qed.
Lemma lem4926792 {A : Type'} (y : nat) (x : type703 A) (f : A -> nat) (s : A -> Prop) : (term2343 A y s x f) = (term2344 A y x f s).
Proof. exact (eq_refl (term2343 A y s x f)). Qed.
Lemma lem4926793 {A : Type'} (y : nat) (x : type703 A) (f : A -> nat) (s : A -> Prop) : (term2342 A y s x f) = (term2344 A y x f s).
Proof. exact (TRANS (@lem4926791 A y s x f) (@lem4926792 A y x f s)). Qed.
Lemma lem4926794 {A : Type'} (y : nat) (x : type703 A) (s : A -> Prop) : (term2345 A y s x) = (term2346 A y x s).
Proof. exact (fun_ext (fun f : A -> nat => @lem4926793 A y x f s)). Qed.
Lemma lem4926795 {A : Type'} : (@all (A -> nat)) = (@all (A -> nat)).
Proof. exact (eq_refl (@all (A -> nat))). Qed.
Lemma lem4926796 {A : Type'} (y : nat) (x : type703 A) (s : A -> Prop) : (term2347 A y s x) = (term2348 A y x s).
Proof. exact (MK_COMB (@lem4926795 A) (@lem4926794 A y x s)). Qed.
Lemma lem4926797 {A : Type'} (y : nat) (s : A -> Prop) : (term2349 A y s) = (term2350 A y s).
Proof. exact (fun_ext (fun x : type703 A => @lem4926796 A y x s)). Qed.
Lemma lem4926798 {A : Type'} : (@ex ((A -> nat) -> A)) = (@ex ((A -> nat) -> A)).
Proof. exact (eq_refl (@ex ((A -> nat) -> A))). Qed.
Lemma lem4926799 {A : Type'} (y : nat) (s : A -> Prop) : (term2332 A y s) = (term2351 A y s).
Proof. exact (MK_COMB (@lem4926798 A) (@lem4926797 A y s)). Qed.
Lemma lem4926800 {A : Type'} (y : nat) (s : A -> Prop) : ((term2331 A y s) = (term2332 A y s)) = ((term2328 A y s) = (term2351 A y s)).
Proof. exact (MK_COMB (@lem4926788 A y s) (@lem4926799 A y s)). Qed.
Lemma lem4926801 {A : Type'} (y : nat) (s : A -> Prop) : (term2328 A y s) = (term2351 A y s).
Proof. exact (EQ_MP (@lem4926800 A y s) (@lem4926775 A y s)). Qed.
Lemma lem4926802 {A : Type'} (y : nat) (s : A -> Prop) : (term2267 A y s) = (term2351 A y s).
Proof. exact (TRANS (@lem4926771 A y s) (@lem4926801 A y s)). Qed.
Lemma lem4926803 {A : Type'} (y : nat) : (term2274 A y) = (term2352 A y).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4926802 A y s)). Qed.
Lemma lem4926804 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4926805 {A : Type'} (y : nat) : (term2289 A y) = (term2353 A y).
Proof. exact (MK_COMB (@lem4926804 A) (@lem4926803 A y)). Qed.
Lemma lem4926807 {A B : Type'} (P : type1413 A B) : (term814 A B P) = (term815 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem4926808 {A : Type'} (P : type602 A) : (term2354 A P) = (term2355 A P).
Proof. exact (@lem4926807 (A -> Prop) (type703 A) P). Qed.
Lemma lem4926809 {A : Type'} (y : nat) : (term2356 A y) = (term2357 A y).
Proof. exact (@lem4926808 A (term2358 A y)). Qed.
Lemma lem4926810 {A : Type'} (y : nat) (s : A -> Prop) : (term2359 A y s) = (term2350 A y s).
Proof. exact (eq_refl (term2359 A y s)). Qed.
Lemma lem4926811 {A : Type'} (x : type703 A) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem4926812 {A : Type'} (y : nat) (s : A -> Prop) (x : type703 A) : (term2360 A y s x) = (term2361 A y s x).
Proof. exact (MK_COMB (@lem4926810 A y s) (@lem4926811 A x)). Qed.
Lemma lem4926813 {A : Type'} (y : nat) (x : type703 A) (s : A -> Prop) : (term2361 A y s x) = (term2348 A y x s).
Proof. exact (eq_refl (term2361 A y s x)). Qed.
Lemma lem4926814 {A : Type'} (y : nat) (x : type703 A) (s : A -> Prop) : (term2360 A y s x) = (term2348 A y x s).
Proof. exact (TRANS (@lem4926812 A y s x) (@lem4926813 A y x s)). Qed.
Lemma lem4926815 {A : Type'} (y : nat) (s : A -> Prop) : (term2362 A y s) = (term2350 A y s).
Proof. exact (fun_ext (fun x : type703 A => @lem4926814 A y x s)). Qed.
Lemma lem4926816 {A : Type'} : (@ex ((A -> nat) -> A)) = (@ex ((A -> nat) -> A)).
Proof. exact (eq_refl (@ex ((A -> nat) -> A))). Qed.
Lemma lem4926817 {A : Type'} (y : nat) (s : A -> Prop) : (term2363 A y s) = (term2351 A y s).
Proof. exact (MK_COMB (@lem4926816 A) (@lem4926815 A y s)). Qed.
Lemma lem4926818 {A : Type'} (y : nat) : (term2364 A y) = (term2352 A y).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4926817 A y s)). Qed.
Lemma lem4926819 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4926820 {A : Type'} (y : nat) : (term2356 A y) = (term2353 A y).
Proof. exact (MK_COMB (@lem4926819 A) (@lem4926818 A y)). Qed.
Lemma lem4926821 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4926822 {A : Type'} (y : nat) : (term2365 A y) = (term2366 A y).
Proof. exact (MK_COMB (@lem4926821) (@lem4926820 A y)). Qed.
Lemma lem4926823 {A : Type'} (y : nat) (s : A -> Prop) : (term2359 A y s) = (term2350 A y s).
Proof. exact (eq_refl (term2359 A y s)). Qed.
Lemma lem4926824 {A : Type'} (x : type643 A) (s : A -> Prop) : (x s) = (x s).
Proof. exact (eq_refl (x s)). Qed.
Lemma lem4926825 {A : Type'} (y : nat) (x : type643 A) (s : A -> Prop) : (term2367 A y x s) = (term2368 A y x s).
Proof. exact (MK_COMB (@lem4926823 A y s) (@lem4926824 A x s)). Qed.
Lemma lem4926826 {A : Type'} (y : nat) (x : type643 A) (s : A -> Prop) : (term2368 A y x s) = (term2369 A y x s).
Proof. exact (eq_refl (term2368 A y x s)). Qed.
Lemma lem4926827 {A : Type'} (y : nat) (x : type643 A) (s : A -> Prop) : (term2367 A y x s) = (term2369 A y x s).
Proof. exact (TRANS (@lem4926825 A y x s) (@lem4926826 A y x s)). Qed.
Lemma lem4926828 {A : Type'} (y : nat) (x : type643 A) : (term2370 A y x) = (term2371 A y x).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4926827 A y x s)). Qed.
Lemma lem4926829 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4926830 {A : Type'} (y : nat) (x : type643 A) : (term2372 A y x) = (term2373 A y x).
Proof. exact (MK_COMB (@lem4926829 A) (@lem4926828 A y x)). Qed.
Lemma lem4926831 {A : Type'} (y : nat) : (term2374 A y) = (term2375 A y).
Proof. exact (fun_ext (fun x : type643 A => @lem4926830 A y x)). Qed.
Lemma lem4926832 {A : Type'} : (@ex ((A -> Prop) -> (A -> nat) -> A)) = (@ex ((A -> Prop) -> (A -> nat) -> A)).
Proof. exact (eq_refl (@ex ((A -> Prop) -> (A -> nat) -> A))). Qed.
Lemma lem4926833 {A : Type'} (y : nat) : (term2357 A y) = (term2376 A y).
Proof. exact (MK_COMB (@lem4926832 A) (@lem4926831 A y)). Qed.
Lemma lem4926834 {A : Type'} (y : nat) : ((term2356 A y) = (term2357 A y)) = ((term2353 A y) = (term2376 A y)).
Proof. exact (MK_COMB (@lem4926822 A y) (@lem4926833 A y)). Qed.
Lemma lem4926835 {A : Type'} (y : nat) : (term2353 A y) = (term2376 A y).
Proof. exact (EQ_MP (@lem4926834 A y) (@lem4926809 A y)). Qed.
Lemma lem4926836 {A : Type'} (y : nat) : (term2289 A y) = (term2376 A y).
Proof. exact (TRANS (@lem4926805 A y) (@lem4926835 A y)). Qed.
Lemma lem4926837 {A : Type'} : (term2298 A) = (term2377 A).
Proof. exact (fun_ext (fun y : nat => @lem4926836 A y)). Qed.
Lemma lem4926838 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4926839 {A : Type'} : (term2313 A) = (term2378 A).
Proof. exact (MK_COMB (@lem4926838) (@lem4926837 A)). Qed.
Lemma lem4926841 {A B : Type'} (P : type1413 A B) : (term814 A B P) = (term815 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem4926842 {A : Type'} (P : type1563 A) : (term2379 A P) = (term2380 A P).
Proof. exact (@lem4926841 nat (type643 A) P). Qed.
Lemma lem4926843 {A : Type'} : (term2381 A) = (term2382 A).
Proof. exact (@lem4926842 A (term2383 A)). Qed.
Lemma lem4926844 {A : Type'} (y : nat) : (term2384 A y) = (term2375 A y).
Proof. exact (eq_refl (term2384 A y)). Qed.
Lemma lem4926845 {A : Type'} (x : type643 A) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem4926846 {A : Type'} (y : nat) (x : type643 A) : (term2385 A y x) = (term2386 A y x).
Proof. exact (MK_COMB (@lem4926844 A y) (@lem4926845 A x)). Qed.
Lemma lem4926847 {A : Type'} (y : nat) (x : type643 A) : (term2386 A y x) = (term2373 A y x).
Proof. exact (eq_refl (term2386 A y x)). Qed.
Lemma lem4926848 {A : Type'} (y : nat) (x : type643 A) : (term2385 A y x) = (term2373 A y x).
Proof. exact (TRANS (@lem4926846 A y x) (@lem4926847 A y x)). Qed.
Lemma lem4926849 {A : Type'} (y : nat) : (term2387 A y) = (term2375 A y).
Proof. exact (fun_ext (fun x : type643 A => @lem4926848 A y x)). Qed.
Lemma lem4926850 {A : Type'} : (@ex ((A -> Prop) -> (A -> nat) -> A)) = (@ex ((A -> Prop) -> (A -> nat) -> A)).
Proof. exact (eq_refl (@ex ((A -> Prop) -> (A -> nat) -> A))). Qed.
Lemma lem4926851 {A : Type'} (y : nat) : (term2388 A y) = (term2376 A y).
Proof. exact (MK_COMB (@lem4926850 A) (@lem4926849 A y)). Qed.
Lemma lem4926852 {A : Type'} : (term2389 A) = (term2377 A).
Proof. exact (fun_ext (fun y : nat => @lem4926851 A y)). Qed.
Lemma lem4926853 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4926854 {A : Type'} : (term2381 A) = (term2378 A).
Proof. exact (MK_COMB (@lem4926853) (@lem4926852 A)). Qed.
Lemma lem4926855 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4926856 {A : Type'} : (term2390 A) = (term2391 A).
Proof. exact (MK_COMB (@lem4926855) (@lem4926854 A)). Qed.
Lemma lem4926857 {A : Type'} (y : nat) : (term2384 A y) = (term2375 A y).
Proof. exact (eq_refl (term2384 A y)). Qed.
Lemma lem4926858 {A : Type'} (x : type1572 A) (y : nat) : (x y) = (x y).
Proof. exact (eq_refl (x y)). Qed.
Lemma lem4926859 {A : Type'} (x : type1572 A) (y : nat) : (term2392 A x y) = (term2393 A x y).
Proof. exact (MK_COMB (@lem4926857 A y) (@lem4926858 A x y)). Qed.
Lemma lem4926860 {A : Type'} (x : type1572 A) (y : nat) : (term2393 A x y) = (term2394 A x y).
Proof. exact (eq_refl (term2393 A x y)). Qed.
Lemma lem4926861 {A : Type'} (x : type1572 A) (y : nat) : (term2392 A x y) = (term2394 A x y).
Proof. exact (TRANS (@lem4926859 A x y) (@lem4926860 A x y)). Qed.
Lemma lem4926862 {A : Type'} (x : type1572 A) : (term2395 A x) = (term2396 A x).
Proof. exact (fun_ext (fun y : nat => @lem4926861 A x y)). Qed.
Lemma lem4926863 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4926864 {A : Type'} (x : type1572 A) : (term2397 A x) = (term2398 A x).
Proof. exact (MK_COMB (@lem4926863) (@lem4926862 A x)). Qed.
Lemma lem4926865 {A : Type'} : (term2399 A) = (term2400 A).
Proof. exact (fun_ext (fun x : type1572 A => @lem4926864 A x)). Qed.
Lemma lem4926866 {A : Type'} : (@ex (nat -> (A -> Prop) -> (A -> nat) -> A)) = (@ex (nat -> (A -> Prop) -> (A -> nat) -> A)).
Proof. exact (eq_refl (@ex (nat -> (A -> Prop) -> (A -> nat) -> A))). Qed.
Lemma lem4926867 {A : Type'} : (term2382 A) = (term2401 A).
Proof. exact (MK_COMB (@lem4926866 A) (@lem4926865 A)). Qed.
Lemma lem4926868 {A : Type'} : ((term2381 A) = (term2382 A)) = ((term2378 A) = (term2401 A)).
Proof. exact (MK_COMB (@lem4926856 A) (@lem4926867 A)). Qed.
Lemma lem4926869 {A : Type'} : (term2378 A) = (term2401 A).
Proof. exact (EQ_MP (@lem4926868 A) (@lem4926843 A)). Qed.
Lemma lem4926870 {A : Type'} : (term2313 A) = (term2401 A).
Proof. exact (TRANS (@lem4926839 A) (@lem4926869 A)). Qed.
Lemma lem4926871 {A : Type'} : (term2310 A) = (term2310 A).
Proof. exact (eq_refl (term2310 A)). Qed.
Lemma lem4926872 {A : Type'} : (term2314 A) = (term2402 A).
Proof. exact (MK_COMB (@lem4926871 A) (@lem4926870 A)). Qed.
Lemma lem4926874 {A : Type'} (P : Prop) (Q : A -> Prop) : (term1631 A P Q) = (term1632 A P Q).
Proof. exact (EQ_MP (@lem18929 A P Q) (@lem18928 A P Q)). Qed.
Lemma lem4926875 {A : Type'} (P : Prop) (Q : type927 A) : (term2403 A P Q) = (term2404 A P Q).
Proof. exact (@lem4926874 (type1572 A) P Q). Qed.
Lemma lem4926876 {A : Type'} : (term2405 A) = (term2406 A).
Proof. exact (@lem4926875 A (term2308 A) (term2400 A)). Qed.
Lemma lem4926877 {A : Type'} (x : type1572 A) : (term2407 A x) = (term2398 A x).
Proof. exact (eq_refl (term2407 A x)). Qed.
Lemma lem4926878 {A : Type'} : (term2408 A) = (term2400 A).
Proof. exact (fun_ext (fun x : type1572 A => @lem4926877 A x)). Qed.
Lemma lem4926879 {A : Type'} : (@ex (nat -> (A -> Prop) -> (A -> nat) -> A)) = (@ex (nat -> (A -> Prop) -> (A -> nat) -> A)).
Proof. exact (eq_refl (@ex (nat -> (A -> Prop) -> (A -> nat) -> A))). Qed.
Lemma lem4926880 {A : Type'} : (term2409 A) = (term2401 A).
Proof. exact (MK_COMB (@lem4926879 A) (@lem4926878 A)). Qed.
Lemma lem4926881 {A : Type'} : (term2310 A) = (term2310 A).
Proof. exact (eq_refl (term2310 A)). Qed.
Lemma lem4926882 {A : Type'} : (term2405 A) = (term2402 A).
Proof. exact (MK_COMB (@lem4926881 A) (@lem4926880 A)). Qed.
Lemma lem4926883 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4926884 {A : Type'} : (term2410 A) = (term2411 A).
Proof. exact (MK_COMB (@lem4926883) (@lem4926882 A)). Qed.
Lemma lem4926885 {A : Type'} (x : type1572 A) : (term2407 A x) = (term2398 A x).
Proof. exact (eq_refl (term2407 A x)). Qed.
Lemma lem4926886 {A : Type'} : (term2310 A) = (term2310 A).
Proof. exact (eq_refl (term2310 A)). Qed.
Lemma lem4926887 {A : Type'} (x : type1572 A) : (term2412 A x) = (term2413 A x).
Proof. exact (MK_COMB (@lem4926886 A) (@lem4926885 A x)). Qed.
Lemma lem4926888 {A : Type'} : (term2414 A) = (term2415 A).
Proof. exact (fun_ext (fun x : type1572 A => @lem4926887 A x)). Qed.
Lemma lem4926889 {A : Type'} : (@ex (nat -> (A -> Prop) -> (A -> nat) -> A)) = (@ex (nat -> (A -> Prop) -> (A -> nat) -> A)).
Proof. exact (eq_refl (@ex (nat -> (A -> Prop) -> (A -> nat) -> A))). Qed.
Lemma lem4926890 {A : Type'} : (term2406 A) = (term2416 A).
Proof. exact (MK_COMB (@lem4926889 A) (@lem4926888 A)). Qed.
Lemma lem4926891 {A : Type'} : ((term2405 A) = (term2406 A)) = ((term2402 A) = (term2416 A)).
Proof. exact (MK_COMB (@lem4926884 A) (@lem4926890 A)). Qed.
Lemma lem4926892 {A : Type'} : (term2402 A) = (term2416 A).
Proof. exact (EQ_MP (@lem4926891 A) (@lem4926876 A)). Qed.
Lemma lem4926893 {A : Type'} : (term2314 A) = (term2416 A).
Proof. exact (TRANS (@lem4926872 A) (@lem4926892 A)). Qed.
Lemma lem4926894 {A : Type'} : (term2246 A) = (term2416 A).
Proof. exact (TRANS (@lem4926748 A) (@lem4926893 A)). Qed.
Lemma lem4926895 {A : Type'} : (term1325 A) = (term2416 A).
Proof. exact (TRANS (@lem4926051 A) (@lem4926894 A)). Qed.
Lemma lem4926896 {A : Type'} (h1 : term1325 A) : term2416 A.
Proof. exact (EQ_MP (@lem4926895 A) (@lem4921354 A h1)). Qed.
Lemma lem4926913 {A : Type'} (s : A -> Prop) (x : A) (t : A -> Prop) : (term2417 A s x t) = (term2418 A s x t).
Proof. exact (@lem17930 (@IN A x s) (@IN A x t)). Qed.
Lemma lem4926924 {A : Type'} (s : A -> Prop) (x : A) (t : A -> Prop) : ((@IN A x s) = (@IN A x t)) = (term2419 A s x t).
Proof. exact (@lem17784 (@IN A x s) (@IN A x t)). Qed.
Lemma lem4926925 {A : Type'} (P : A -> Prop) : (term2420 A P) = (term2421 A P).
Proof. exact (@lem18392 A P). Qed.
Lemma lem4926926 {A : Type'} (s : A -> Prop) (t : A -> Prop) : (term2422 A s t) = (term2423 A s t).
Proof. exact (@lem4926925 A (term1385 A s t)). Qed.
Lemma lem4926927 {A : Type'} (s : A -> Prop) (x : A) (t : A -> Prop) : (term2424 A s t x) = ((@IN A x s) = (@IN A x t)).
Proof. exact (eq_refl (term2424 A s t x)). Qed.
Lemma lem4926928 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem4926929 {A : Type'} (s : A -> Prop) (x : A) (t : A -> Prop) : (term2425 A s t x) = (term2417 A s x t).
Proof. exact (MK_COMB (@lem4926928) (@lem4926927 A s x t)). Qed.
Lemma lem4926930 {A : Type'} (s : A -> Prop) (x : A) (t : A -> Prop) : (term2425 A s t x) = (term2418 A s x t).
Proof. exact (TRANS (@lem4926929 A s x t) (@lem4926913 A s x t)). Qed.
Lemma lem4926931 {A : Type'} (s : A -> Prop) (t : A -> Prop) : (term2426 A s t) = (term2427 A s t).
Proof. exact (fun_ext (fun x : A => @lem4926930 A s x t)). Qed.
Lemma lem4926932 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem4926933 {A : Type'} (s : A -> Prop) (t : A -> Prop) : (term2423 A s t) = (term2428 A s t).
Proof. exact (MK_COMB (@lem4926932 A) (@lem4926931 A s t)). Qed.
Lemma lem4926934 {A : Type'} (s : A -> Prop) (t : A -> Prop) : (term2422 A s t) = (term2428 A s t).
Proof. exact (TRANS (@lem4926926 A s t) (@lem4926933 A s t)). Qed.
Lemma lem4926935 {A : Type'} (s : A -> Prop) (t : A -> Prop) : (term1385 A s t) = (term2429 A s t).
Proof. exact (fun_ext (fun x : A => @lem4926924 A s x t)). Qed.
Lemma lem4926936 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4926937 {A : Type'} (s : A -> Prop) (t : A -> Prop) : (term1386 A s t) = (term2430 A s t).
Proof. exact (MK_COMB (@lem4926936 A) (@lem4926935 A s t)). Qed.
Lemma lem4926939 {A : Type'} (s : A -> Prop) (t : A -> Prop) : (term2431 A s t) = (term2431 A s t).
Proof. exact (eq_refl (term2431 A s t)). Qed.
Lemma lem4926940 {A : Type'} (s : A -> Prop) (t : A -> Prop) : (term2432 A s t) = (term2433 A s t).
Proof. exact (MK_COMB (@lem4926939 A s t) (@lem4926937 A s t)). Qed.
Lemma lem4926942 {A : Type'} (s : A -> Prop) (t : A -> Prop) : (term2434 A s t) = (term2434 A s t).
Proof. exact (eq_refl (term2434 A s t)). Qed.
Lemma lem4926943 {A : Type'} (s : A -> Prop) (t : A -> Prop) : (term2435 A s t) = (term2436 A s t).
Proof. exact (MK_COMB (@lem4926942 A s t) (@lem4926934 A s t)). Qed.
Lemma lem4926944 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4926945 {A : Type'} (s : A -> Prop) (t : A -> Prop) : (term2437 A s t) = (term2438 A s t).
Proof. exact (MK_COMB (@lem4926944) (@lem4926943 A s t)). Qed.
Lemma lem4926946 {A : Type'} (s : A -> Prop) (t : A -> Prop) : (term2439 A s t) = (term2440 A s t).
Proof. exact (MK_COMB (@lem4926945 A s t) (@lem4926940 A s t)). Qed.
Lemma lem4926947 {A : Type'} (s : A -> Prop) (t : A -> Prop) : ((s = t) = (term1386 A s t)) = (term2439 A s t).
Proof. exact (@lem17784 (s = t) (term1386 A s t)). Qed.
Lemma lem4926948 {A : Type'} (s : A -> Prop) (t : A -> Prop) : ((s = t) = (term1386 A s t)) = (term2440 A s t).
Proof. exact (TRANS (@lem4926947 A s t) (@lem4926946 A s t)). Qed.
Lemma lem4926949 {A : Type'} (s : A -> Prop) : (term1388 A s) = (term2441 A s).
Proof. exact (fun_ext (fun t : A -> Prop => @lem4926948 A s t)). Qed.
Lemma lem4926950 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4926951 {A : Type'} (s : A -> Prop) : (term1389 A s) = (term2442 A s).
Proof. exact (MK_COMB (@lem4926950 A) (@lem4926949 A s)). Qed.
Lemma lem4926952 {A : Type'} : (term1390 A) = (term2443 A).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4926951 A s)). Qed.
Lemma lem4926953 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4926954 {A : Type'} : (term1322 A) = (term2444 A).
Proof. exact (MK_COMB (@lem4926953 A) (@lem4926952 A)). Qed.
Lemma lem4926960 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term1130 A P Q) = (term1131 A P Q).
Proof. exact (EQ_MP (@lem18953 A P Q) (@lem18952 A P Q)). Qed.
Lemma lem4926961 {A : Type'} (P : type686 A) (Q : type686 A) : (term1132 A P Q) = (term1133 A P Q).
Proof. exact (@lem4926960 (A -> Prop) P Q). Qed.
Lemma lem4926962 {A : Type'} (s : A -> Prop) : (term2445 A s) = (term2446 A s).
Proof. exact (@lem4926961 A (term2447 A s) (term2448 A s)). Qed.
Lemma lem4926963 {A : Type'} (s : A -> Prop) (t : A -> Prop) : (term2449 A s t) = (term2436 A s t).
Proof. exact (eq_refl (term2449 A s t)). Qed.
Lemma lem4926964 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4926965 {A : Type'} (s : A -> Prop) (t : A -> Prop) : (term2450 A s t) = (term2438 A s t).
Proof. exact (MK_COMB (@lem4926964) (@lem4926963 A s t)). Qed.
Lemma lem4926966 {A : Type'} (s : A -> Prop) (t : A -> Prop) : (term2451 A s t) = (term2433 A s t).
Proof. exact (eq_refl (term2451 A s t)). Qed.
Lemma lem4926967 {A : Type'} (s : A -> Prop) (t : A -> Prop) : (term2452 A s t) = (term2440 A s t).
Proof. exact (MK_COMB (@lem4926965 A s t) (@lem4926966 A s t)). Qed.
Lemma lem4926968 {A : Type'} (s : A -> Prop) : (term2453 A s) = (term2441 A s).
Proof. exact (fun_ext (fun t : A -> Prop => @lem4926967 A s t)). Qed.
Lemma lem4926969 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4926970 {A : Type'} (s : A -> Prop) : (term2445 A s) = (term2442 A s).
Proof. exact (MK_COMB (@lem4926969 A) (@lem4926968 A s)). Qed.
Lemma lem4926971 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4926972 {A : Type'} (s : A -> Prop) : (term2454 A s) = (term2455 A s).
Proof. exact (MK_COMB (@lem4926971) (@lem4926970 A s)). Qed.
Lemma lem4926973 {A : Type'} (s : A -> Prop) (t : A -> Prop) : (term2449 A s t) = (term2436 A s t).
Proof. exact (eq_refl (term2449 A s t)). Qed.
Lemma lem4926974 {A : Type'} (s : A -> Prop) : (term2456 A s) = (term2447 A s).
Proof. exact (fun_ext (fun t : A -> Prop => @lem4926973 A s t)). Qed.
Lemma lem4926975 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4926976 {A : Type'} (s : A -> Prop) : (term2457 A s) = (term2458 A s).
Proof. exact (MK_COMB (@lem4926975 A) (@lem4926974 A s)). Qed.
Lemma lem4926977 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4926978 {A : Type'} (s : A -> Prop) : (term2459 A s) = (term2460 A s).
Proof. exact (MK_COMB (@lem4926977) (@lem4926976 A s)). Qed.
Lemma lem4926979 {A : Type'} (s : A -> Prop) (t : A -> Prop) : (term2451 A s t) = (term2433 A s t).
Proof. exact (eq_refl (term2451 A s t)). Qed.
Lemma lem4926980 {A : Type'} (s : A -> Prop) : (term2461 A s) = (term2448 A s).
Proof. exact (fun_ext (fun t : A -> Prop => @lem4926979 A s t)). Qed.
Lemma lem4926981 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4926982 {A : Type'} (s : A -> Prop) : (term2462 A s) = (term2463 A s).
Proof. exact (MK_COMB (@lem4926981 A) (@lem4926980 A s)). Qed.
Lemma lem4926983 {A : Type'} (s : A -> Prop) : (term2446 A s) = (term2464 A s).
Proof. exact (MK_COMB (@lem4926978 A s) (@lem4926982 A s)). Qed.
Lemma lem4926984 {A : Type'} (s : A -> Prop) : ((term2445 A s) = (term2446 A s)) = ((term2442 A s) = (term2464 A s)).
Proof. exact (MK_COMB (@lem4926972 A s) (@lem4926983 A s)). Qed.
Lemma lem4926985 {A : Type'} (s : A -> Prop) : (term2442 A s) = (term2464 A s).
Proof. exact (EQ_MP (@lem4926984 A s) (@lem4926962 A s)). Qed.
Lemma lem4927131 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term1130 A P Q) = (term1131 A P Q).
Proof. exact (EQ_MP (@lem18953 A P Q) (@lem18952 A P Q)). Qed.
Lemma lem4927132 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term1130 A P Q) = (term1131 A P Q).
Proof. exact (@lem4927131 A P Q). Qed.
Lemma lem4927133 {A : Type'} (s : A -> Prop) (t : A -> Prop) : (term2465 A s t) = (term2466 A s t).
Proof. exact (@lem4927132 A (term2467 A s t) (term2468 A s t)). Qed.
Lemma lem4927134 {A : Type'} (s : A -> Prop) (x : A) (t : A -> Prop) : (term2469 A s t x) = (term2470 A s x t).
Proof. exact (eq_refl (term2469 A s t x)). Qed.
Lemma lem4927135 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4927136 {A : Type'} (s : A -> Prop) (x : A) (t : A -> Prop) : (term2471 A s t x) = (term2472 A s x t).
Proof. exact (MK_COMB (@lem4927135) (@lem4927134 A s x t)). Qed.
Lemma lem4927137 {A : Type'} (s : A -> Prop) (x : A) (t : A -> Prop) : (term2473 A s t x) = (term2474 A s x t).
Proof. exact (eq_refl (term2473 A s t x)). Qed.
Lemma lem4927138 {A : Type'} (s : A -> Prop) (x : A) (t : A -> Prop) : (term2475 A s t x) = (term2419 A s x t).
Proof. exact (MK_COMB (@lem4927136 A s x t) (@lem4927137 A s x t)). Qed.
Lemma lem4927139 {A : Type'} (s : A -> Prop) (t : A -> Prop) : (term2476 A s t) = (term2429 A s t).
Proof. exact (fun_ext (fun x : A => @lem4927138 A s x t)). Qed.
Lemma lem4927140 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4927141 {A : Type'} (s : A -> Prop) (t : A -> Prop) : (term2465 A s t) = (term2430 A s t).
Proof. exact (MK_COMB (@lem4927140 A) (@lem4927139 A s t)). Qed.
Lemma lem4927142 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4927143 {A : Type'} (s : A -> Prop) (t : A -> Prop) : (term2477 A s t) = (term2478 A s t).
Proof. exact (MK_COMB (@lem4927142) (@lem4927141 A s t)). Qed.
Lemma lem4927144 {A : Type'} (s : A -> Prop) (x : A) (t : A -> Prop) : (term2469 A s t x) = (term2470 A s x t).
Proof. exact (eq_refl (term2469 A s t x)). Qed.
Lemma lem4927145 {A : Type'} (s : A -> Prop) (t : A -> Prop) : (term2479 A s t) = (term2467 A s t).
Proof. exact (fun_ext (fun x : A => @lem4927144 A s x t)). Qed.
Lemma lem4927146 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4927147 {A : Type'} (s : A -> Prop) (t : A -> Prop) : (term2480 A s t) = (term2481 A s t).
Proof. exact (MK_COMB (@lem4927146 A) (@lem4927145 A s t)). Qed.
Lemma lem4927148 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4927149 {A : Type'} (s : A -> Prop) (t : A -> Prop) : (term2482 A s t) = (term2483 A s t).
Proof. exact (MK_COMB (@lem4927148) (@lem4927147 A s t)). Qed.
Lemma lem4927150 {A : Type'} (s : A -> Prop) (x : A) (t : A -> Prop) : (term2473 A s t x) = (term2474 A s x t).
Proof. exact (eq_refl (term2473 A s t x)). Qed.
Lemma lem4927151 {A : Type'} (s : A -> Prop) (t : A -> Prop) : (term2484 A s t) = (term2468 A s t).
Proof. exact (fun_ext (fun x : A => @lem4927150 A s x t)). Qed.
Lemma lem4927152 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4927153 {A : Type'} (s : A -> Prop) (t : A -> Prop) : (term2485 A s t) = (term2486 A s t).
Proof. exact (MK_COMB (@lem4927152 A) (@lem4927151 A s t)). Qed.
Lemma lem4927154 {A : Type'} (s : A -> Prop) (t : A -> Prop) : (term2466 A s t) = (term2487 A s t).
Proof. exact (MK_COMB (@lem4927149 A s t) (@lem4927153 A s t)). Qed.
Lemma lem4927155 {A : Type'} (s : A -> Prop) (t : A -> Prop) : ((term2465 A s t) = (term2466 A s t)) = ((term2430 A s t) = (term2487 A s t)).
Proof. exact (MK_COMB (@lem4927143 A s t) (@lem4927154 A s t)). Qed.
Lemma lem4927156 {A : Type'} (s : A -> Prop) (t : A -> Prop) : (term2430 A s t) = (term2487 A s t).
Proof. exact (EQ_MP (@lem4927155 A s t) (@lem4927133 A s t)). Qed.
Lemma lem4927253 {A : Type'} (s : A -> Prop) (t : A -> Prop) : (term2431 A s t) = (term2431 A s t).
Proof. exact (eq_refl (term2431 A s t)). Qed.
Lemma lem4927254 {A : Type'} (s : A -> Prop) (t : A -> Prop) : (term2433 A s t) = (term2488 A s t).
Proof. exact (MK_COMB (@lem4927253 A s t) (@lem4927156 A s t)). Qed.
Lemma lem4927255 {A : Type'} (s : A -> Prop) : (term2448 A s) = (term2489 A s).
Proof. exact (fun_ext (fun t : A -> Prop => @lem4927254 A s t)). Qed.
Lemma lem4927256 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4927257 {A : Type'} (s : A -> Prop) : (term2463 A s) = (term2490 A s).
Proof. exact (MK_COMB (@lem4927256 A) (@lem4927255 A s)). Qed.
Lemma lem4927306 {A : Type'} (s : A -> Prop) : (term2460 A s) = (term2460 A s).
Proof. exact (eq_refl (term2460 A s)). Qed.
Lemma lem4927307 {A : Type'} (s : A -> Prop) : (term2464 A s) = (term2491 A s).
Proof. exact (MK_COMB (@lem4927306 A s) (@lem4927257 A s)). Qed.
Lemma lem4927308 {A : Type'} (s : A -> Prop) : (term2442 A s) = (term2491 A s).
Proof. exact (TRANS (@lem4926985 A s) (@lem4927307 A s)). Qed.
Lemma lem4927309 {A : Type'} : (term2443 A) = (term2492 A).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4927308 A s)). Qed.
Lemma lem4927310 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4927311 {A : Type'} : (term2444 A) = (term2493 A).
Proof. exact (MK_COMB (@lem4927310 A) (@lem4927309 A)). Qed.
Lemma lem4927313 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term1130 A P Q) = (term1131 A P Q).
Proof. exact (EQ_MP (@lem18953 A P Q) (@lem18952 A P Q)). Qed.
Lemma lem4927314 {A : Type'} (P : type686 A) (Q : type686 A) : (term1132 A P Q) = (term1133 A P Q).
Proof. exact (@lem4927313 (A -> Prop) P Q). Qed.
Lemma lem4927315 {A : Type'} : (term2494 A) = (term2495 A).
Proof. exact (@lem4927314 A (term2496 A) (term2497 A)). Qed.
Lemma lem4927316 {A : Type'} (s : A -> Prop) : (term2498 A s) = (term2458 A s).
Proof. exact (eq_refl (term2498 A s)). Qed.
Lemma lem4927317 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4927318 {A : Type'} (s : A -> Prop) : (term2499 A s) = (term2460 A s).
Proof. exact (MK_COMB (@lem4927317) (@lem4927316 A s)). Qed.
Lemma lem4927319 {A : Type'} (s : A -> Prop) : (term2500 A s) = (term2490 A s).
Proof. exact (eq_refl (term2500 A s)). Qed.
Lemma lem4927320 {A : Type'} (s : A -> Prop) : (term2501 A s) = (term2491 A s).
Proof. exact (MK_COMB (@lem4927318 A s) (@lem4927319 A s)). Qed.
Lemma lem4927321 {A : Type'} : (term2502 A) = (term2492 A).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4927320 A s)). Qed.
Lemma lem4927322 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4927323 {A : Type'} : (term2494 A) = (term2493 A).
Proof. exact (MK_COMB (@lem4927322 A) (@lem4927321 A)). Qed.
Lemma lem4927324 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4927325 {A : Type'} : (term2503 A) = (term2504 A).
Proof. exact (MK_COMB (@lem4927324) (@lem4927323 A)). Qed.
Lemma lem4927326 {A : Type'} (s : A -> Prop) : (term2498 A s) = (term2458 A s).
Proof. exact (eq_refl (term2498 A s)). Qed.
Lemma lem4927327 {A : Type'} : (term2505 A) = (term2496 A).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4927326 A s)). Qed.
Lemma lem4927328 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4927329 {A : Type'} : (term2506 A) = (term2507 A).
Proof. exact (MK_COMB (@lem4927328 A) (@lem4927327 A)). Qed.
Lemma lem4927330 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4927331 {A : Type'} : (term2508 A) = (term2509 A).
Proof. exact (MK_COMB (@lem4927330) (@lem4927329 A)). Qed.
Lemma lem4927332 {A : Type'} (s : A -> Prop) : (term2500 A s) = (term2490 A s).
Proof. exact (eq_refl (term2500 A s)). Qed.
Lemma lem4927333 {A : Type'} : (term2510 A) = (term2497 A).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4927332 A s)). Qed.
Lemma lem4927334 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4927335 {A : Type'} : (term2511 A) = (term2512 A).
Proof. exact (MK_COMB (@lem4927334 A) (@lem4927333 A)). Qed.
Lemma lem4927336 {A : Type'} : (term2495 A) = (term2513 A).
Proof. exact (MK_COMB (@lem4927331 A) (@lem4927335 A)). Qed.
Lemma lem4927337 {A : Type'} : ((term2494 A) = (term2495 A)) = ((term2493 A) = (term2513 A)).
Proof. exact (MK_COMB (@lem4927325 A) (@lem4927336 A)). Qed.
Lemma lem4927338 {A : Type'} : (term2493 A) = (term2513 A).
Proof. exact (EQ_MP (@lem4927337 A) (@lem4927315 A)). Qed.
Lemma lem4927587 {A : Type'} : (term2444 A) = (term2513 A).
Proof. exact (TRANS (@lem4927311 A) (@lem4927338 A)). Qed.
Lemma lem4927589 {A : Type'} (P : Prop) (Q : A -> Prop) : (term797 A P Q) = (term798 A P Q).
Proof. exact (EQ_MP (@lem18911 A P Q) (@lem18910 A P Q)). Qed.
Lemma lem4927590 {A : Type'} (P : Prop) (Q : A -> Prop) : (term797 A P Q) = (term798 A P Q).
Proof. exact (@lem4927589 A P Q). Qed.
Lemma lem4927591 {A : Type'} (s : A -> Prop) (t : A -> Prop) : (term2514 A s t) = (term2515 A s t).
Proof. exact (@lem4927590 A (s = t) (term2427 A s t)). Qed.
Lemma lem4927592 {A : Type'} (s : A -> Prop) (x : A) (t : A -> Prop) : (term2516 A s t x) = (term2418 A s x t).
Proof. exact (eq_refl (term2516 A s t x)). Qed.
Lemma lem4927593 {A : Type'} (s : A -> Prop) (t : A -> Prop) : (term2517 A s t) = (term2427 A s t).
Proof. exact (fun_ext (fun x : A => @lem4927592 A s x t)). Qed.
Lemma lem4927594 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem4927595 {A : Type'} (s : A -> Prop) (t : A -> Prop) : (term2518 A s t) = (term2428 A s t).
Proof. exact (MK_COMB (@lem4927594 A) (@lem4927593 A s t)). Qed.
Lemma lem4927596 {A : Type'} (s : A -> Prop) (t : A -> Prop) : (term2434 A s t) = (term2434 A s t).
Proof. exact (eq_refl (term2434 A s t)). Qed.
Lemma lem4927597 {A : Type'} (s : A -> Prop) (t : A -> Prop) : (term2514 A s t) = (term2436 A s t).
Proof. exact (MK_COMB (@lem4927596 A s t) (@lem4927595 A s t)). Qed.
Lemma lem4927598 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4927599 {A : Type'} (s : A -> Prop) (t : A -> Prop) : (term2519 A s t) = (term2520 A s t).
Proof. exact (MK_COMB (@lem4927598) (@lem4927597 A s t)). Qed.
Lemma lem4927600 {A : Type'} (s : A -> Prop) (x : A) (t : A -> Prop) : (term2516 A s t x) = (term2418 A s x t).
Proof. exact (eq_refl (term2516 A s t x)). Qed.
Lemma lem4927601 {A : Type'} (s : A -> Prop) (t : A -> Prop) : (term2434 A s t) = (term2434 A s t).
Proof. exact (eq_refl (term2434 A s t)). Qed.
Lemma lem4927602 {A : Type'} (s : A -> Prop) (x : A) (t : A -> Prop) : (term2521 A s t x) = (term2522 A s x t).
Proof. exact (MK_COMB (@lem4927601 A s t) (@lem4927600 A s x t)). Qed.
Lemma lem4927603 {A : Type'} (s : A -> Prop) (t : A -> Prop) : (term2523 A s t) = (term2524 A s t).
Proof. exact (fun_ext (fun x : A => @lem4927602 A s x t)). Qed.
Lemma lem4927604 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem4927605 {A : Type'} (s : A -> Prop) (t : A -> Prop) : (term2515 A s t) = (term2525 A s t).
Proof. exact (MK_COMB (@lem4927604 A) (@lem4927603 A s t)). Qed.
Lemma lem4927606 {A : Type'} (s : A -> Prop) (t : A -> Prop) : ((term2514 A s t) = (term2515 A s t)) = ((term2436 A s t) = (term2525 A s t)).
Proof. exact (MK_COMB (@lem4927599 A s t) (@lem4927605 A s t)). Qed.
Lemma lem4927607 {A : Type'} (s : A -> Prop) (t : A -> Prop) : (term2436 A s t) = (term2525 A s t).
Proof. exact (EQ_MP (@lem4927606 A s t) (@lem4927591 A s t)). Qed.
Lemma lem4927608 {A : Type'} (s : A -> Prop) : (term2447 A s) = (term2526 A s).
Proof. exact (fun_ext (fun t : A -> Prop => @lem4927607 A s t)). Qed.
Lemma lem4927609 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4927610 {A : Type'} (s : A -> Prop) : (term2458 A s) = (term2527 A s).
Proof. exact (MK_COMB (@lem4927609 A) (@lem4927608 A s)). Qed.
Lemma lem4927612 {A B : Type'} (P : type1413 A B) : (term814 A B P) = (term815 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem4927613 {A : Type'} (P : type672 A) : (term1172 A P) = (term1173 A P).
Proof. exact (@lem4927612 (A -> Prop) A P). Qed.
Lemma lem4927614 {A : Type'} (s : A -> Prop) : (term2528 A s) = (term2529 A s).
Proof. exact (@lem4927613 A (term2530 A s)). Qed.
Lemma lem4927615 {A : Type'} (s : A -> Prop) (t : A -> Prop) : (term2531 A s t) = (term2524 A s t).
Proof. exact (eq_refl (term2531 A s t)). Qed.
Lemma lem4927616 {A : Type'} (x : A) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem4927617 {A : Type'} (s : A -> Prop) (t : A -> Prop) (x : A) : (term2532 A s t x) = (term2533 A s t x).
Proof. exact (MK_COMB (@lem4927615 A s t) (@lem4927616 A x)). Qed.
Lemma lem4927618 {A : Type'} (s : A -> Prop) (x : A) (t : A -> Prop) : (term2533 A s t x) = (term2522 A s x t).
Proof. exact (eq_refl (term2533 A s t x)). Qed.
Lemma lem4927619 {A : Type'} (s : A -> Prop) (x : A) (t : A -> Prop) : (term2532 A s t x) = (term2522 A s x t).
Proof. exact (TRANS (@lem4927617 A s t x) (@lem4927618 A s x t)). Qed.
Lemma lem4927620 {A : Type'} (s : A -> Prop) (t : A -> Prop) : (term2534 A s t) = (term2524 A s t).
Proof. exact (fun_ext (fun x : A => @lem4927619 A s x t)). Qed.
Lemma lem4927621 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem4927622 {A : Type'} (s : A -> Prop) (t : A -> Prop) : (term2535 A s t) = (term2525 A s t).
Proof. exact (MK_COMB (@lem4927621 A) (@lem4927620 A s t)). Qed.
Lemma lem4927623 {A : Type'} (s : A -> Prop) : (term2536 A s) = (term2526 A s).
Proof. exact (fun_ext (fun t : A -> Prop => @lem4927622 A s t)). Qed.
Lemma lem4927624 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4927625 {A : Type'} (s : A -> Prop) : (term2528 A s) = (term2527 A s).
Proof. exact (MK_COMB (@lem4927624 A) (@lem4927623 A s)). Qed.
Lemma lem4927626 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4927627 {A : Type'} (s : A -> Prop) : (term2537 A s) = (term2538 A s).
Proof. exact (MK_COMB (@lem4927626) (@lem4927625 A s)). Qed.
Lemma lem4927628 {A : Type'} (s : A -> Prop) (t : A -> Prop) : (term2531 A s t) = (term2524 A s t).
Proof. exact (eq_refl (term2531 A s t)). Qed.
Lemma lem4927629 {A : Type'} (x : type684 A) (t : A -> Prop) : (x t) = (x t).
Proof. exact (eq_refl (x t)). Qed.
Lemma lem4927630 {A : Type'} (s : A -> Prop) (x : type684 A) (t : A -> Prop) : (term2539 A s x t) = (term2540 A s x t).
Proof. exact (MK_COMB (@lem4927628 A s t) (@lem4927629 A x t)). Qed.
Lemma lem4927631 {A : Type'} (s : A -> Prop) (x : type684 A) (t : A -> Prop) : (term2540 A s x t) = (term2541 A s x t).
Proof. exact (eq_refl (term2540 A s x t)). Qed.
Lemma lem4927632 {A : Type'} (s : A -> Prop) (x : type684 A) (t : A -> Prop) : (term2539 A s x t) = (term2541 A s x t).
Proof. exact (TRANS (@lem4927630 A s x t) (@lem4927631 A s x t)). Qed.
Lemma lem4927633 {A : Type'} (s : A -> Prop) (x : type684 A) : (term2542 A s x) = (term2543 A s x).
Proof. exact (fun_ext (fun t : A -> Prop => @lem4927632 A s x t)). Qed.
Lemma lem4927634 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4927635 {A : Type'} (s : A -> Prop) (x : type684 A) : (term2544 A s x) = (term2545 A s x).
Proof. exact (MK_COMB (@lem4927634 A) (@lem4927633 A s x)). Qed.
Lemma lem4927636 {A : Type'} (s : A -> Prop) : (term2546 A s) = (term2547 A s).
Proof. exact (fun_ext (fun x : type684 A => @lem4927635 A s x)). Qed.
Lemma lem4927637 {A : Type'} : (@ex ((A -> Prop) -> A)) = (@ex ((A -> Prop) -> A)).
Proof. exact (eq_refl (@ex ((A -> Prop) -> A))). Qed.
Lemma lem4927638 {A : Type'} (s : A -> Prop) : (term2529 A s) = (term2548 A s).
Proof. exact (MK_COMB (@lem4927637 A) (@lem4927636 A s)). Qed.
Lemma lem4927639 {A : Type'} (s : A -> Prop) : ((term2528 A s) = (term2529 A s)) = ((term2527 A s) = (term2548 A s)).
Proof. exact (MK_COMB (@lem4927627 A s) (@lem4927638 A s)). Qed.
Lemma lem4927640 {A : Type'} (s : A -> Prop) : (term2527 A s) = (term2548 A s).
Proof. exact (EQ_MP (@lem4927639 A s) (@lem4927614 A s)). Qed.
Lemma lem4927641 {A : Type'} (s : A -> Prop) : (term2458 A s) = (term2548 A s).
Proof. exact (TRANS (@lem4927610 A s) (@lem4927640 A s)). Qed.
Lemma lem4927642 {A : Type'} : (term2496 A) = (term2549 A).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4927641 A s)). Qed.
Lemma lem4927643 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4927644 {A : Type'} : (term2507 A) = (term2550 A).
Proof. exact (MK_COMB (@lem4927643 A) (@lem4927642 A)). Qed.
Lemma lem4927646 {A B : Type'} (P : type1413 A B) : (term814 A B P) = (term815 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem4927647 {A : Type'} (P : type597 A) : (term2551 A P) = (term2552 A P).
Proof. exact (@lem4927646 (A -> Prop) (type684 A) P). Qed.
Lemma lem4927648 {A : Type'} : (term2553 A) = (term2554 A).
Proof. exact (@lem4927647 A (term2555 A)). Qed.
Lemma lem4927649 {A : Type'} (s : A -> Prop) : (term2556 A s) = (term2547 A s).
Proof. exact (eq_refl (term2556 A s)). Qed.
Lemma lem4927650 {A : Type'} (x : type684 A) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem4927651 {A : Type'} (s : A -> Prop) (x : type684 A) : (term2557 A s x) = (term2558 A s x).
Proof. exact (MK_COMB (@lem4927649 A s) (@lem4927650 A x)). Qed.
Lemma lem4927652 {A : Type'} (s : A -> Prop) (x : type684 A) : (term2558 A s x) = (term2545 A s x).
Proof. exact (eq_refl (term2558 A s x)). Qed.
Lemma lem4927653 {A : Type'} (s : A -> Prop) (x : type684 A) : (term2557 A s x) = (term2545 A s x).
Proof. exact (TRANS (@lem4927651 A s x) (@lem4927652 A s x)). Qed.
Lemma lem4927654 {A : Type'} (s : A -> Prop) : (term2559 A s) = (term2547 A s).
Proof. exact (fun_ext (fun x : type684 A => @lem4927653 A s x)). Qed.
Lemma lem4927655 {A : Type'} : (@ex ((A -> Prop) -> A)) = (@ex ((A -> Prop) -> A)).
Proof. exact (eq_refl (@ex ((A -> Prop) -> A))). Qed.
Lemma lem4927656 {A : Type'} (s : A -> Prop) : (term2560 A s) = (term2548 A s).
Proof. exact (MK_COMB (@lem4927655 A) (@lem4927654 A s)). Qed.
Lemma lem4927657 {A : Type'} : (term2561 A) = (term2549 A).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4927656 A s)). Qed.
Lemma lem4927658 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4927659 {A : Type'} : (term2553 A) = (term2550 A).
Proof. exact (MK_COMB (@lem4927658 A) (@lem4927657 A)). Qed.
Lemma lem4927660 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4927661 {A : Type'} : (term2562 A) = (term2563 A).
Proof. exact (MK_COMB (@lem4927660) (@lem4927659 A)). Qed.
Lemma lem4927662 {A : Type'} (s : A -> Prop) : (term2556 A s) = (term2547 A s).
Proof. exact (eq_refl (term2556 A s)). Qed.
Lemma lem4927663 {A : Type'} (x : type638 A) (s : A -> Prop) : (x s) = (x s).
Proof. exact (eq_refl (x s)). Qed.
Lemma lem4927664 {A : Type'} (x : type638 A) (s : A -> Prop) : (term2564 A x s) = (term2565 A x s).
Proof. exact (MK_COMB (@lem4927662 A s) (@lem4927663 A x s)). Qed.
Lemma lem4927665 {A : Type'} (x : type638 A) (s : A -> Prop) : (term2565 A x s) = (term2566 A x s).
Proof. exact (eq_refl (term2565 A x s)). Qed.
Lemma lem4927666 {A : Type'} (x : type638 A) (s : A -> Prop) : (term2564 A x s) = (term2566 A x s).
Proof. exact (TRANS (@lem4927664 A x s) (@lem4927665 A x s)). Qed.
Lemma lem4927667 {A : Type'} (x : type638 A) : (term2567 A x) = (term2568 A x).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4927666 A x s)). Qed.
Lemma lem4927668 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4927669 {A : Type'} (x : type638 A) : (term2569 A x) = (term2570 A x).
Proof. exact (MK_COMB (@lem4927668 A) (@lem4927667 A x)). Qed.
Lemma lem4927670 {A : Type'} : (term2571 A) = (term2572 A).
Proof. exact (fun_ext (fun x : type638 A => @lem4927669 A x)). Qed.
Lemma lem4927671 {A : Type'} : (@ex ((A -> Prop) -> (A -> Prop) -> A)) = (@ex ((A -> Prop) -> (A -> Prop) -> A)).
Proof. exact (eq_refl (@ex ((A -> Prop) -> (A -> Prop) -> A))). Qed.
Lemma lem4927672 {A : Type'} : (term2554 A) = (term2573 A).
Proof. exact (MK_COMB (@lem4927671 A) (@lem4927670 A)). Qed.
Lemma lem4927673 {A : Type'} : ((term2553 A) = (term2554 A)) = ((term2550 A) = (term2573 A)).
Proof. exact (MK_COMB (@lem4927661 A) (@lem4927672 A)). Qed.
Lemma lem4927674 {A : Type'} : (term2550 A) = (term2573 A).
Proof. exact (EQ_MP (@lem4927673 A) (@lem4927648 A)). Qed.
Lemma lem4927675 {A : Type'} : (term2507 A) = (term2573 A).
Proof. exact (TRANS (@lem4927644 A) (@lem4927674 A)). Qed.
Lemma lem4927676 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4927677 {A : Type'} : (term2509 A) = (term2574 A).
Proof. exact (MK_COMB (@lem4927676) (@lem4927675 A)). Qed.
Lemma lem4927678 {A : Type'} : (term2512 A) = (term2512 A).
Proof. exact (eq_refl (term2512 A)). Qed.
Lemma lem4927679 {A : Type'} : (term2513 A) = (term2575 A).
Proof. exact (MK_COMB (@lem4927677 A) (@lem4927678 A)). Qed.
Lemma lem4927681 {A : Type'} (P : A -> Prop) (Q : Prop) : (term1197 A P Q) = (term1198 A P Q).
Proof. exact (EQ_MP (@lem18923 A P Q) (@lem18922 A P Q)). Qed.
Lemma lem4927682 {A : Type'} (P : type139 A) (Q : Prop) : (term2576 A P Q) = (term2577 A P Q).
Proof. exact (@lem4927681 (type638 A) P Q). Qed.
Lemma lem4927683 {A : Type'} : (term2578 A) = (term2579 A).
Proof. exact (@lem4927682 A (term2572 A) (term2512 A)). Qed.
Lemma lem4927684 {A : Type'} (x : type638 A) : (term2580 A x) = (term2570 A x).
Proof. exact (eq_refl (term2580 A x)). Qed.
Lemma lem4927685 {A : Type'} : (term2581 A) = (term2572 A).
Proof. exact (fun_ext (fun x : type638 A => @lem4927684 A x)). Qed.
Lemma lem4927686 {A : Type'} : (@ex ((A -> Prop) -> (A -> Prop) -> A)) = (@ex ((A -> Prop) -> (A -> Prop) -> A)).
Proof. exact (eq_refl (@ex ((A -> Prop) -> (A -> Prop) -> A))). Qed.
Lemma lem4927687 {A : Type'} : (term2582 A) = (term2573 A).
Proof. exact (MK_COMB (@lem4927686 A) (@lem4927685 A)). Qed.
Lemma lem4927688 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4927689 {A : Type'} : (term2583 A) = (term2574 A).
Proof. exact (MK_COMB (@lem4927688) (@lem4927687 A)). Qed.
Lemma lem4927690 {A : Type'} : (term2512 A) = (term2512 A).
Proof. exact (eq_refl (term2512 A)). Qed.
Lemma lem4927691 {A : Type'} : (term2578 A) = (term2575 A).
Proof. exact (MK_COMB (@lem4927689 A) (@lem4927690 A)). Qed.
Lemma lem4927692 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4927693 {A : Type'} : (term2584 A) = (term2585 A).
Proof. exact (MK_COMB (@lem4927692) (@lem4927691 A)). Qed.
Lemma lem4927694 {A : Type'} (x : type638 A) : (term2580 A x) = (term2570 A x).
Proof. exact (eq_refl (term2580 A x)). Qed.
Lemma lem4927695 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4927696 {A : Type'} (x : type638 A) : (term2586 A x) = (term2587 A x).
Proof. exact (MK_COMB (@lem4927695) (@lem4927694 A x)). Qed.
Lemma lem4927697 {A : Type'} : (term2512 A) = (term2512 A).
Proof. exact (eq_refl (term2512 A)). Qed.
Lemma lem4927698 {A : Type'} (x : type638 A) : (term2588 A x) = (term2589 A x).
Proof. exact (MK_COMB (@lem4927696 A x) (@lem4927697 A)). Qed.
Lemma lem4927699 {A : Type'} : (term2590 A) = (term2591 A).
Proof. exact (fun_ext (fun x : type638 A => @lem4927698 A x)). Qed.
Lemma lem4927700 {A : Type'} : (@ex ((A -> Prop) -> (A -> Prop) -> A)) = (@ex ((A -> Prop) -> (A -> Prop) -> A)).
Proof. exact (eq_refl (@ex ((A -> Prop) -> (A -> Prop) -> A))). Qed.
Lemma lem4927701 {A : Type'} : (term2579 A) = (term2592 A).
Proof. exact (MK_COMB (@lem4927700 A) (@lem4927699 A)). Qed.
Lemma lem4927702 {A : Type'} : ((term2578 A) = (term2579 A)) = ((term2575 A) = (term2592 A)).
Proof. exact (MK_COMB (@lem4927693 A) (@lem4927701 A)). Qed.
Lemma lem4927703 {A : Type'} : (term2575 A) = (term2592 A).
Proof. exact (EQ_MP (@lem4927702 A) (@lem4927683 A)). Qed.
Lemma lem4927704 {A : Type'} : (term2513 A) = (term2592 A).
Proof. exact (TRANS (@lem4927679 A) (@lem4927703 A)). Qed.
Lemma lem4927705 {A : Type'} : (term2444 A) = (term2592 A).
Proof. exact (TRANS (@lem4927587 A) (@lem4927704 A)). Qed.
Lemma lem4927706 {A : Type'} : (term1322 A) = (term2592 A).
Proof. exact (TRANS (@lem4926954 A) (@lem4927705 A)). Qed.
Lemma lem4927707 {A : Type'} (h1 : term1322 A) : term2592 A.
Proof. exact (EQ_MP (@lem4927706 A) (@lem4921355 A h1)). Qed.
Lemma lem4927724 {B : Type'} (s : B -> Prop) (x : B) (t : B -> Prop) : (term2417 B s x t) = (term2418 B s x t).
Proof. exact (@lem17930 (@IN B x s) (@IN B x t)). Qed.
Lemma lem4927735 {B : Type'} (s : B -> Prop) (x : B) (t : B -> Prop) : ((@IN B x s) = (@IN B x t)) = (term2419 B s x t).
Proof. exact (@lem17784 (@IN B x s) (@IN B x t)). Qed.
Lemma lem4927736 {B : Type'} (P : B -> Prop) : (term2420 B P) = (term2421 B P).
Proof. exact (@lem18392 B P). Qed.
Lemma lem4927737 {B : Type'} (s : B -> Prop) (t : B -> Prop) : (term2422 B s t) = (term2423 B s t).
Proof. exact (@lem4927736 B (term1385 B s t)). Qed.
Lemma lem4927738 {B : Type'} (s : B -> Prop) (x : B) (t : B -> Prop) : (term2424 B s t x) = ((@IN B x s) = (@IN B x t)).
Proof. exact (eq_refl (term2424 B s t x)). Qed.
Lemma lem4927739 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem4927740 {B : Type'} (s : B -> Prop) (x : B) (t : B -> Prop) : (term2425 B s t x) = (term2417 B s x t).
Proof. exact (MK_COMB (@lem4927739) (@lem4927738 B s x t)). Qed.
Lemma lem4927741 {B : Type'} (s : B -> Prop) (x : B) (t : B -> Prop) : (term2425 B s t x) = (term2418 B s x t).
Proof. exact (TRANS (@lem4927740 B s x t) (@lem4927724 B s x t)). Qed.
Lemma lem4927742 {B : Type'} (s : B -> Prop) (t : B -> Prop) : (term2426 B s t) = (term2427 B s t).
Proof. exact (fun_ext (fun x : B => @lem4927741 B s x t)). Qed.
Lemma lem4927743 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem4927744 {B : Type'} (s : B -> Prop) (t : B -> Prop) : (term2423 B s t) = (term2428 B s t).
Proof. exact (MK_COMB (@lem4927743 B) (@lem4927742 B s t)). Qed.
Lemma lem4927745 {B : Type'} (s : B -> Prop) (t : B -> Prop) : (term2422 B s t) = (term2428 B s t).
Proof. exact (TRANS (@lem4927737 B s t) (@lem4927744 B s t)). Qed.
Lemma lem4927746 {B : Type'} (s : B -> Prop) (t : B -> Prop) : (term1385 B s t) = (term2429 B s t).
Proof. exact (fun_ext (fun x : B => @lem4927735 B s x t)). Qed.
Lemma lem4927747 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4927748 {B : Type'} (s : B -> Prop) (t : B -> Prop) : (term1386 B s t) = (term2430 B s t).
Proof. exact (MK_COMB (@lem4927747 B) (@lem4927746 B s t)). Qed.
Lemma lem4927750 {B : Type'} (s : B -> Prop) (t : B -> Prop) : (term2431 B s t) = (term2431 B s t).
Proof. exact (eq_refl (term2431 B s t)). Qed.
Lemma lem4927751 {B : Type'} (s : B -> Prop) (t : B -> Prop) : (term2432 B s t) = (term2433 B s t).
Proof. exact (MK_COMB (@lem4927750 B s t) (@lem4927748 B s t)). Qed.
Lemma lem4927753 {B : Type'} (s : B -> Prop) (t : B -> Prop) : (term2434 B s t) = (term2434 B s t).
Proof. exact (eq_refl (term2434 B s t)). Qed.
Lemma lem4927754 {B : Type'} (s : B -> Prop) (t : B -> Prop) : (term2435 B s t) = (term2436 B s t).
Proof. exact (MK_COMB (@lem4927753 B s t) (@lem4927745 B s t)). Qed.
Lemma lem4927755 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4927756 {B : Type'} (s : B -> Prop) (t : B -> Prop) : (term2437 B s t) = (term2438 B s t).
Proof. exact (MK_COMB (@lem4927755) (@lem4927754 B s t)). Qed.
Lemma lem4927757 {B : Type'} (s : B -> Prop) (t : B -> Prop) : (term2439 B s t) = (term2440 B s t).
Proof. exact (MK_COMB (@lem4927756 B s t) (@lem4927751 B s t)). Qed.
Lemma lem4927758 {B : Type'} (s : B -> Prop) (t : B -> Prop) : ((s = t) = (term1386 B s t)) = (term2439 B s t).
Proof. exact (@lem17784 (s = t) (term1386 B s t)). Qed.
Lemma lem4927759 {B : Type'} (s : B -> Prop) (t : B -> Prop) : ((s = t) = (term1386 B s t)) = (term2440 B s t).
Proof. exact (TRANS (@lem4927758 B s t) (@lem4927757 B s t)). Qed.
Lemma lem4927760 {B : Type'} (s : B -> Prop) : (term1388 B s) = (term2441 B s).
Proof. exact (fun_ext (fun t : B -> Prop => @lem4927759 B s t)). Qed.
Lemma lem4927761 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4927762 {B : Type'} (s : B -> Prop) : (term1389 B s) = (term2442 B s).
Proof. exact (MK_COMB (@lem4927761 B) (@lem4927760 B s)). Qed.
Lemma lem4927763 {B : Type'} : (term1390 B) = (term2443 B).
Proof. exact (fun_ext (fun s : B -> Prop => @lem4927762 B s)). Qed.
Lemma lem4927764 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4927765 {B : Type'} : (term1322 B) = (term2444 B).
Proof. exact (MK_COMB (@lem4927764 B) (@lem4927763 B)). Qed.
Lemma lem4927771 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term1130 A P Q) = (term1131 A P Q).
Proof. exact (EQ_MP (@lem18953 A P Q) (@lem18952 A P Q)). Qed.
Lemma lem4927772 {B : Type'} (P : type686 B) (Q : type686 B) : (term1132 B P Q) = (term1133 B P Q).
Proof. exact (@lem4927771 (B -> Prop) P Q). Qed.
Lemma lem4927773 {B : Type'} (s : B -> Prop) : (term2445 B s) = (term2446 B s).
Proof. exact (@lem4927772 B (term2447 B s) (term2448 B s)). Qed.
Lemma lem4927774 {B : Type'} (s : B -> Prop) (t : B -> Prop) : (term2449 B s t) = (term2436 B s t).
Proof. exact (eq_refl (term2449 B s t)). Qed.
Lemma lem4927775 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4927776 {B : Type'} (s : B -> Prop) (t : B -> Prop) : (term2450 B s t) = (term2438 B s t).
Proof. exact (MK_COMB (@lem4927775) (@lem4927774 B s t)). Qed.
Lemma lem4927777 {B : Type'} (s : B -> Prop) (t : B -> Prop) : (term2451 B s t) = (term2433 B s t).
Proof. exact (eq_refl (term2451 B s t)). Qed.
Lemma lem4927778 {B : Type'} (s : B -> Prop) (t : B -> Prop) : (term2452 B s t) = (term2440 B s t).
Proof. exact (MK_COMB (@lem4927776 B s t) (@lem4927777 B s t)). Qed.
Lemma lem4927779 {B : Type'} (s : B -> Prop) : (term2453 B s) = (term2441 B s).
Proof. exact (fun_ext (fun t : B -> Prop => @lem4927778 B s t)). Qed.
Lemma lem4927780 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4927781 {B : Type'} (s : B -> Prop) : (term2445 B s) = (term2442 B s).
Proof. exact (MK_COMB (@lem4927780 B) (@lem4927779 B s)). Qed.
Lemma lem4927782 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4927783 {B : Type'} (s : B -> Prop) : (term2454 B s) = (term2455 B s).
Proof. exact (MK_COMB (@lem4927782) (@lem4927781 B s)). Qed.
Lemma lem4927784 {B : Type'} (s : B -> Prop) (t : B -> Prop) : (term2449 B s t) = (term2436 B s t).
Proof. exact (eq_refl (term2449 B s t)). Qed.
Lemma lem4927785 {B : Type'} (s : B -> Prop) : (term2456 B s) = (term2447 B s).
Proof. exact (fun_ext (fun t : B -> Prop => @lem4927784 B s t)). Qed.
Lemma lem4927786 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4927787 {B : Type'} (s : B -> Prop) : (term2457 B s) = (term2458 B s).
Proof. exact (MK_COMB (@lem4927786 B) (@lem4927785 B s)). Qed.
Lemma lem4927788 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4927789 {B : Type'} (s : B -> Prop) : (term2459 B s) = (term2460 B s).
Proof. exact (MK_COMB (@lem4927788) (@lem4927787 B s)). Qed.
Lemma lem4927790 {B : Type'} (s : B -> Prop) (t : B -> Prop) : (term2451 B s t) = (term2433 B s t).
Proof. exact (eq_refl (term2451 B s t)). Qed.
Lemma lem4927791 {B : Type'} (s : B -> Prop) : (term2461 B s) = (term2448 B s).
Proof. exact (fun_ext (fun t : B -> Prop => @lem4927790 B s t)). Qed.
Lemma lem4927792 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4927793 {B : Type'} (s : B -> Prop) : (term2462 B s) = (term2463 B s).
Proof. exact (MK_COMB (@lem4927792 B) (@lem4927791 B s)). Qed.
Lemma lem4927794 {B : Type'} (s : B -> Prop) : (term2446 B s) = (term2464 B s).
Proof. exact (MK_COMB (@lem4927789 B s) (@lem4927793 B s)). Qed.
Lemma lem4927795 {B : Type'} (s : B -> Prop) : ((term2445 B s) = (term2446 B s)) = ((term2442 B s) = (term2464 B s)).
Proof. exact (MK_COMB (@lem4927783 B s) (@lem4927794 B s)). Qed.
Lemma lem4927796 {B : Type'} (s : B -> Prop) : (term2442 B s) = (term2464 B s).
Proof. exact (EQ_MP (@lem4927795 B s) (@lem4927773 B s)). Qed.
Lemma lem4927942 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term1130 A P Q) = (term1131 A P Q).
Proof. exact (EQ_MP (@lem18953 A P Q) (@lem18952 A P Q)). Qed.
Lemma lem4927943 {B : Type'} (P : B -> Prop) (Q : B -> Prop) : (term1130 B P Q) = (term1131 B P Q).
Proof. exact (@lem4927942 B P Q). Qed.
Lemma lem4927944 {B : Type'} (s : B -> Prop) (t : B -> Prop) : (term2465 B s t) = (term2466 B s t).
Proof. exact (@lem4927943 B (term2467 B s t) (term2468 B s t)). Qed.
Lemma lem4927945 {B : Type'} (s : B -> Prop) (x : B) (t : B -> Prop) : (term2469 B s t x) = (term2470 B s x t).
Proof. exact (eq_refl (term2469 B s t x)). Qed.
Lemma lem4927946 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4927947 {B : Type'} (s : B -> Prop) (x : B) (t : B -> Prop) : (term2471 B s t x) = (term2472 B s x t).
Proof. exact (MK_COMB (@lem4927946) (@lem4927945 B s x t)). Qed.
Lemma lem4927948 {B : Type'} (s : B -> Prop) (x : B) (t : B -> Prop) : (term2473 B s t x) = (term2474 B s x t).
Proof. exact (eq_refl (term2473 B s t x)). Qed.
Lemma lem4927949 {B : Type'} (s : B -> Prop) (x : B) (t : B -> Prop) : (term2475 B s t x) = (term2419 B s x t).
Proof. exact (MK_COMB (@lem4927947 B s x t) (@lem4927948 B s x t)). Qed.
Lemma lem4927950 {B : Type'} (s : B -> Prop) (t : B -> Prop) : (term2476 B s t) = (term2429 B s t).
Proof. exact (fun_ext (fun x : B => @lem4927949 B s x t)). Qed.
Lemma lem4927951 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4927952 {B : Type'} (s : B -> Prop) (t : B -> Prop) : (term2465 B s t) = (term2430 B s t).
Proof. exact (MK_COMB (@lem4927951 B) (@lem4927950 B s t)). Qed.
Lemma lem4927953 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4927954 {B : Type'} (s : B -> Prop) (t : B -> Prop) : (term2477 B s t) = (term2478 B s t).
Proof. exact (MK_COMB (@lem4927953) (@lem4927952 B s t)). Qed.
Lemma lem4927955 {B : Type'} (s : B -> Prop) (x : B) (t : B -> Prop) : (term2469 B s t x) = (term2470 B s x t).
Proof. exact (eq_refl (term2469 B s t x)). Qed.
Lemma lem4927956 {B : Type'} (s : B -> Prop) (t : B -> Prop) : (term2479 B s t) = (term2467 B s t).
Proof. exact (fun_ext (fun x : B => @lem4927955 B s x t)). Qed.
Lemma lem4927957 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4927958 {B : Type'} (s : B -> Prop) (t : B -> Prop) : (term2480 B s t) = (term2481 B s t).
Proof. exact (MK_COMB (@lem4927957 B) (@lem4927956 B s t)). Qed.
Lemma lem4927959 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4927960 {B : Type'} (s : B -> Prop) (t : B -> Prop) : (term2482 B s t) = (term2483 B s t).
Proof. exact (MK_COMB (@lem4927959) (@lem4927958 B s t)). Qed.
Lemma lem4927961 {B : Type'} (s : B -> Prop) (x : B) (t : B -> Prop) : (term2473 B s t x) = (term2474 B s x t).
Proof. exact (eq_refl (term2473 B s t x)). Qed.
Lemma lem4927962 {B : Type'} (s : B -> Prop) (t : B -> Prop) : (term2484 B s t) = (term2468 B s t).
Proof. exact (fun_ext (fun x : B => @lem4927961 B s x t)). Qed.
Lemma lem4927963 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4927964 {B : Type'} (s : B -> Prop) (t : B -> Prop) : (term2485 B s t) = (term2486 B s t).
Proof. exact (MK_COMB (@lem4927963 B) (@lem4927962 B s t)). Qed.
Lemma lem4927965 {B : Type'} (s : B -> Prop) (t : B -> Prop) : (term2466 B s t) = (term2487 B s t).
Proof. exact (MK_COMB (@lem4927960 B s t) (@lem4927964 B s t)). Qed.
Lemma lem4927966 {B : Type'} (s : B -> Prop) (t : B -> Prop) : ((term2465 B s t) = (term2466 B s t)) = ((term2430 B s t) = (term2487 B s t)).
Proof. exact (MK_COMB (@lem4927954 B s t) (@lem4927965 B s t)). Qed.
Lemma lem4927967 {B : Type'} (s : B -> Prop) (t : B -> Prop) : (term2430 B s t) = (term2487 B s t).
Proof. exact (EQ_MP (@lem4927966 B s t) (@lem4927944 B s t)). Qed.
Lemma lem4928064 {B : Type'} (s : B -> Prop) (t : B -> Prop) : (term2431 B s t) = (term2431 B s t).
Proof. exact (eq_refl (term2431 B s t)). Qed.
Lemma lem4928065 {B : Type'} (s : B -> Prop) (t : B -> Prop) : (term2433 B s t) = (term2488 B s t).
Proof. exact (MK_COMB (@lem4928064 B s t) (@lem4927967 B s t)). Qed.
Lemma lem4928066 {B : Type'} (s : B -> Prop) : (term2448 B s) = (term2489 B s).
Proof. exact (fun_ext (fun t : B -> Prop => @lem4928065 B s t)). Qed.
Lemma lem4928067 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4928068 {B : Type'} (s : B -> Prop) : (term2463 B s) = (term2490 B s).
Proof. exact (MK_COMB (@lem4928067 B) (@lem4928066 B s)). Qed.
Lemma lem4928117 {B : Type'} (s : B -> Prop) : (term2460 B s) = (term2460 B s).
Proof. exact (eq_refl (term2460 B s)). Qed.
Lemma lem4928118 {B : Type'} (s : B -> Prop) : (term2464 B s) = (term2491 B s).
Proof. exact (MK_COMB (@lem4928117 B s) (@lem4928068 B s)). Qed.
Lemma lem4928119 {B : Type'} (s : B -> Prop) : (term2442 B s) = (term2491 B s).
Proof. exact (TRANS (@lem4927796 B s) (@lem4928118 B s)). Qed.
Lemma lem4928120 {B : Type'} : (term2443 B) = (term2492 B).
Proof. exact (fun_ext (fun s : B -> Prop => @lem4928119 B s)). Qed.
Lemma lem4928121 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4928122 {B : Type'} : (term2444 B) = (term2493 B).
Proof. exact (MK_COMB (@lem4928121 B) (@lem4928120 B)). Qed.
Lemma lem4928124 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term1130 A P Q) = (term1131 A P Q).
Proof. exact (EQ_MP (@lem18953 A P Q) (@lem18952 A P Q)). Qed.
Lemma lem4928125 {B : Type'} (P : type686 B) (Q : type686 B) : (term1132 B P Q) = (term1133 B P Q).
Proof. exact (@lem4928124 (B -> Prop) P Q). Qed.
Lemma lem4928126 {B : Type'} : (term2494 B) = (term2495 B).
Proof. exact (@lem4928125 B (term2496 B) (term2497 B)). Qed.
Lemma lem4928127 {B : Type'} (s : B -> Prop) : (term2498 B s) = (term2458 B s).
Proof. exact (eq_refl (term2498 B s)). Qed.
Lemma lem4928128 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4928129 {B : Type'} (s : B -> Prop) : (term2499 B s) = (term2460 B s).
Proof. exact (MK_COMB (@lem4928128) (@lem4928127 B s)). Qed.
Lemma lem4928130 {B : Type'} (s : B -> Prop) : (term2500 B s) = (term2490 B s).
Proof. exact (eq_refl (term2500 B s)). Qed.
Lemma lem4928131 {B : Type'} (s : B -> Prop) : (term2501 B s) = (term2491 B s).
Proof. exact (MK_COMB (@lem4928129 B s) (@lem4928130 B s)). Qed.
Lemma lem4928132 {B : Type'} : (term2502 B) = (term2492 B).
Proof. exact (fun_ext (fun s : B -> Prop => @lem4928131 B s)). Qed.
Lemma lem4928133 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4928134 {B : Type'} : (term2494 B) = (term2493 B).
Proof. exact (MK_COMB (@lem4928133 B) (@lem4928132 B)). Qed.
Lemma lem4928135 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4928136 {B : Type'} : (term2503 B) = (term2504 B).
Proof. exact (MK_COMB (@lem4928135) (@lem4928134 B)). Qed.
Lemma lem4928137 {B : Type'} (s : B -> Prop) : (term2498 B s) = (term2458 B s).
Proof. exact (eq_refl (term2498 B s)). Qed.
Lemma lem4928138 {B : Type'} : (term2505 B) = (term2496 B).
Proof. exact (fun_ext (fun s : B -> Prop => @lem4928137 B s)). Qed.
Lemma lem4928139 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4928140 {B : Type'} : (term2506 B) = (term2507 B).
Proof. exact (MK_COMB (@lem4928139 B) (@lem4928138 B)). Qed.
Lemma lem4928141 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4928142 {B : Type'} : (term2508 B) = (term2509 B).
Proof. exact (MK_COMB (@lem4928141) (@lem4928140 B)). Qed.
Lemma lem4928143 {B : Type'} (s : B -> Prop) : (term2500 B s) = (term2490 B s).
Proof. exact (eq_refl (term2500 B s)). Qed.
Lemma lem4928144 {B : Type'} : (term2510 B) = (term2497 B).
Proof. exact (fun_ext (fun s : B -> Prop => @lem4928143 B s)). Qed.
Lemma lem4928145 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4928146 {B : Type'} : (term2511 B) = (term2512 B).
Proof. exact (MK_COMB (@lem4928145 B) (@lem4928144 B)). Qed.
Lemma lem4928147 {B : Type'} : (term2495 B) = (term2513 B).
Proof. exact (MK_COMB (@lem4928142 B) (@lem4928146 B)). Qed.
Lemma lem4928148 {B : Type'} : ((term2494 B) = (term2495 B)) = ((term2493 B) = (term2513 B)).
Proof. exact (MK_COMB (@lem4928136 B) (@lem4928147 B)). Qed.
Lemma lem4928149 {B : Type'} : (term2493 B) = (term2513 B).
Proof. exact (EQ_MP (@lem4928148 B) (@lem4928126 B)). Qed.
Lemma lem4928398 {B : Type'} : (term2444 B) = (term2513 B).
Proof. exact (TRANS (@lem4928122 B) (@lem4928149 B)). Qed.
Lemma lem4928400 {A : Type'} (P : Prop) (Q : A -> Prop) : (term797 A P Q) = (term798 A P Q).
Proof. exact (EQ_MP (@lem18911 A P Q) (@lem18910 A P Q)). Qed.
Lemma lem4928401 {B : Type'} (P : Prop) (Q : B -> Prop) : (term797 B P Q) = (term798 B P Q).
Proof. exact (@lem4928400 B P Q). Qed.
Lemma lem4928402 {B : Type'} (s : B -> Prop) (t : B -> Prop) : (term2514 B s t) = (term2515 B s t).
Proof. exact (@lem4928401 B (s = t) (term2427 B s t)). Qed.
Lemma lem4928403 {B : Type'} (s : B -> Prop) (x : B) (t : B -> Prop) : (term2516 B s t x) = (term2418 B s x t).
Proof. exact (eq_refl (term2516 B s t x)). Qed.
Lemma lem4928404 {B : Type'} (s : B -> Prop) (t : B -> Prop) : (term2517 B s t) = (term2427 B s t).
Proof. exact (fun_ext (fun x : B => @lem4928403 B s x t)). Qed.
Lemma lem4928405 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem4928406 {B : Type'} (s : B -> Prop) (t : B -> Prop) : (term2518 B s t) = (term2428 B s t).
Proof. exact (MK_COMB (@lem4928405 B) (@lem4928404 B s t)). Qed.
Lemma lem4928407 {B : Type'} (s : B -> Prop) (t : B -> Prop) : (term2434 B s t) = (term2434 B s t).
Proof. exact (eq_refl (term2434 B s t)). Qed.
Lemma lem4928408 {B : Type'} (s : B -> Prop) (t : B -> Prop) : (term2514 B s t) = (term2436 B s t).
Proof. exact (MK_COMB (@lem4928407 B s t) (@lem4928406 B s t)). Qed.
Lemma lem4928409 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4928410 {B : Type'} (s : B -> Prop) (t : B -> Prop) : (term2519 B s t) = (term2520 B s t).
Proof. exact (MK_COMB (@lem4928409) (@lem4928408 B s t)). Qed.
Lemma lem4928411 {B : Type'} (s : B -> Prop) (x : B) (t : B -> Prop) : (term2516 B s t x) = (term2418 B s x t).
Proof. exact (eq_refl (term2516 B s t x)). Qed.
Lemma lem4928412 {B : Type'} (s : B -> Prop) (t : B -> Prop) : (term2434 B s t) = (term2434 B s t).
Proof. exact (eq_refl (term2434 B s t)). Qed.
Lemma lem4928413 {B : Type'} (s : B -> Prop) (x : B) (t : B -> Prop) : (term2521 B s t x) = (term2522 B s x t).
Proof. exact (MK_COMB (@lem4928412 B s t) (@lem4928411 B s x t)). Qed.
Lemma lem4928414 {B : Type'} (s : B -> Prop) (t : B -> Prop) : (term2523 B s t) = (term2524 B s t).
Proof. exact (fun_ext (fun x : B => @lem4928413 B s x t)). Qed.
Lemma lem4928415 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem4928416 {B : Type'} (s : B -> Prop) (t : B -> Prop) : (term2515 B s t) = (term2525 B s t).
Proof. exact (MK_COMB (@lem4928415 B) (@lem4928414 B s t)). Qed.
Lemma lem4928417 {B : Type'} (s : B -> Prop) (t : B -> Prop) : ((term2514 B s t) = (term2515 B s t)) = ((term2436 B s t) = (term2525 B s t)).
Proof. exact (MK_COMB (@lem4928410 B s t) (@lem4928416 B s t)). Qed.
Lemma lem4928418 {B : Type'} (s : B -> Prop) (t : B -> Prop) : (term2436 B s t) = (term2525 B s t).
Proof. exact (EQ_MP (@lem4928417 B s t) (@lem4928402 B s t)). Qed.
Lemma lem4928419 {B : Type'} (s : B -> Prop) : (term2447 B s) = (term2526 B s).
Proof. exact (fun_ext (fun t : B -> Prop => @lem4928418 B s t)). Qed.
Lemma lem4928420 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4928421 {B : Type'} (s : B -> Prop) : (term2458 B s) = (term2527 B s).
Proof. exact (MK_COMB (@lem4928420 B) (@lem4928419 B s)). Qed.
Lemma lem4928423 {A B : Type'} (P : type1413 A B) : (term814 A B P) = (term815 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem4928424 {B : Type'} (P : type672 B) : (term1172 B P) = (term1173 B P).
Proof. exact (@lem4928423 (B -> Prop) B P). Qed.
Lemma lem4928425 {B : Type'} (s : B -> Prop) : (term2528 B s) = (term2529 B s).
Proof. exact (@lem4928424 B (term2530 B s)). Qed.
Lemma lem4928426 {B : Type'} (s : B -> Prop) (t : B -> Prop) : (term2531 B s t) = (term2524 B s t).
Proof. exact (eq_refl (term2531 B s t)). Qed.
Lemma lem4928427 {B : Type'} (x : B) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem4928428 {B : Type'} (s : B -> Prop) (t : B -> Prop) (x : B) : (term2532 B s t x) = (term2533 B s t x).
Proof. exact (MK_COMB (@lem4928426 B s t) (@lem4928427 B x)). Qed.
Lemma lem4928429 {B : Type'} (s : B -> Prop) (x : B) (t : B -> Prop) : (term2533 B s t x) = (term2522 B s x t).
Proof. exact (eq_refl (term2533 B s t x)). Qed.
Lemma lem4928430 {B : Type'} (s : B -> Prop) (x : B) (t : B -> Prop) : (term2532 B s t x) = (term2522 B s x t).
Proof. exact (TRANS (@lem4928428 B s t x) (@lem4928429 B s x t)). Qed.
Lemma lem4928431 {B : Type'} (s : B -> Prop) (t : B -> Prop) : (term2534 B s t) = (term2524 B s t).
Proof. exact (fun_ext (fun x : B => @lem4928430 B s x t)). Qed.
Lemma lem4928432 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem4928433 {B : Type'} (s : B -> Prop) (t : B -> Prop) : (term2535 B s t) = (term2525 B s t).
Proof. exact (MK_COMB (@lem4928432 B) (@lem4928431 B s t)). Qed.
Lemma lem4928434 {B : Type'} (s : B -> Prop) : (term2536 B s) = (term2526 B s).
Proof. exact (fun_ext (fun t : B -> Prop => @lem4928433 B s t)). Qed.
Lemma lem4928435 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4928436 {B : Type'} (s : B -> Prop) : (term2528 B s) = (term2527 B s).
Proof. exact (MK_COMB (@lem4928435 B) (@lem4928434 B s)). Qed.
Lemma lem4928437 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4928438 {B : Type'} (s : B -> Prop) : (term2537 B s) = (term2538 B s).
Proof. exact (MK_COMB (@lem4928437) (@lem4928436 B s)). Qed.
Lemma lem4928439 {B : Type'} (s : B -> Prop) (t : B -> Prop) : (term2531 B s t) = (term2524 B s t).
Proof. exact (eq_refl (term2531 B s t)). Qed.
Lemma lem4928440 {B : Type'} (x : type684 B) (t : B -> Prop) : (x t) = (x t).
Proof. exact (eq_refl (x t)). Qed.
Lemma lem4928441 {B : Type'} (s : B -> Prop) (x : type684 B) (t : B -> Prop) : (term2539 B s x t) = (term2540 B s x t).
Proof. exact (MK_COMB (@lem4928439 B s t) (@lem4928440 B x t)). Qed.
Lemma lem4928442 {B : Type'} (s : B -> Prop) (x : type684 B) (t : B -> Prop) : (term2540 B s x t) = (term2541 B s x t).
Proof. exact (eq_refl (term2540 B s x t)). Qed.
Lemma lem4928443 {B : Type'} (s : B -> Prop) (x : type684 B) (t : B -> Prop) : (term2539 B s x t) = (term2541 B s x t).
Proof. exact (TRANS (@lem4928441 B s x t) (@lem4928442 B s x t)). Qed.
Lemma lem4928444 {B : Type'} (s : B -> Prop) (x : type684 B) : (term2542 B s x) = (term2543 B s x).
Proof. exact (fun_ext (fun t : B -> Prop => @lem4928443 B s x t)). Qed.
Lemma lem4928445 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4928446 {B : Type'} (s : B -> Prop) (x : type684 B) : (term2544 B s x) = (term2545 B s x).
Proof. exact (MK_COMB (@lem4928445 B) (@lem4928444 B s x)). Qed.
Lemma lem4928447 {B : Type'} (s : B -> Prop) : (term2546 B s) = (term2547 B s).
Proof. exact (fun_ext (fun x : type684 B => @lem4928446 B s x)). Qed.
Lemma lem4928448 {B : Type'} : (@ex ((B -> Prop) -> B)) = (@ex ((B -> Prop) -> B)).
Proof. exact (eq_refl (@ex ((B -> Prop) -> B))). Qed.
Lemma lem4928449 {B : Type'} (s : B -> Prop) : (term2529 B s) = (term2548 B s).
Proof. exact (MK_COMB (@lem4928448 B) (@lem4928447 B s)). Qed.
Lemma lem4928450 {B : Type'} (s : B -> Prop) : ((term2528 B s) = (term2529 B s)) = ((term2527 B s) = (term2548 B s)).
Proof. exact (MK_COMB (@lem4928438 B s) (@lem4928449 B s)). Qed.
Lemma lem4928451 {B : Type'} (s : B -> Prop) : (term2527 B s) = (term2548 B s).
Proof. exact (EQ_MP (@lem4928450 B s) (@lem4928425 B s)). Qed.
Lemma lem4928452 {B : Type'} (s : B -> Prop) : (term2458 B s) = (term2548 B s).
Proof. exact (TRANS (@lem4928421 B s) (@lem4928451 B s)). Qed.
Lemma lem4928453 {B : Type'} : (term2496 B) = (term2549 B).
Proof. exact (fun_ext (fun s : B -> Prop => @lem4928452 B s)). Qed.
Lemma lem4928454 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4928455 {B : Type'} : (term2507 B) = (term2550 B).
Proof. exact (MK_COMB (@lem4928454 B) (@lem4928453 B)). Qed.
Lemma lem4928457 {A B : Type'} (P : type1413 A B) : (term814 A B P) = (term815 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem4928458 {B : Type'} (P : type597 B) : (term2551 B P) = (term2552 B P).
Proof. exact (@lem4928457 (B -> Prop) (type684 B) P). Qed.
Lemma lem4928459 {B : Type'} : (term2553 B) = (term2554 B).
Proof. exact (@lem4928458 B (term2555 B)). Qed.
Lemma lem4928460 {B : Type'} (s : B -> Prop) : (term2556 B s) = (term2547 B s).
Proof. exact (eq_refl (term2556 B s)). Qed.
Lemma lem4928461 {B : Type'} (x : type684 B) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem4928462 {B : Type'} (s : B -> Prop) (x : type684 B) : (term2557 B s x) = (term2558 B s x).
Proof. exact (MK_COMB (@lem4928460 B s) (@lem4928461 B x)). Qed.
Lemma lem4928463 {B : Type'} (s : B -> Prop) (x : type684 B) : (term2558 B s x) = (term2545 B s x).
Proof. exact (eq_refl (term2558 B s x)). Qed.
Lemma lem4928464 {B : Type'} (s : B -> Prop) (x : type684 B) : (term2557 B s x) = (term2545 B s x).
Proof. exact (TRANS (@lem4928462 B s x) (@lem4928463 B s x)). Qed.
Lemma lem4928465 {B : Type'} (s : B -> Prop) : (term2559 B s) = (term2547 B s).
Proof. exact (fun_ext (fun x : type684 B => @lem4928464 B s x)). Qed.
Lemma lem4928466 {B : Type'} : (@ex ((B -> Prop) -> B)) = (@ex ((B -> Prop) -> B)).
Proof. exact (eq_refl (@ex ((B -> Prop) -> B))). Qed.
Lemma lem4928467 {B : Type'} (s : B -> Prop) : (term2560 B s) = (term2548 B s).
Proof. exact (MK_COMB (@lem4928466 B) (@lem4928465 B s)). Qed.
Lemma lem4928468 {B : Type'} : (term2561 B) = (term2549 B).
Proof. exact (fun_ext (fun s : B -> Prop => @lem4928467 B s)). Qed.
Lemma lem4928469 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4928470 {B : Type'} : (term2553 B) = (term2550 B).
Proof. exact (MK_COMB (@lem4928469 B) (@lem4928468 B)). Qed.
Lemma lem4928471 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4928472 {B : Type'} : (term2562 B) = (term2563 B).
Proof. exact (MK_COMB (@lem4928471) (@lem4928470 B)). Qed.
Lemma lem4928473 {B : Type'} (s : B -> Prop) : (term2556 B s) = (term2547 B s).
Proof. exact (eq_refl (term2556 B s)). Qed.
Lemma lem4928474 {B : Type'} (x : type638 B) (s : B -> Prop) : (x s) = (x s).
Proof. exact (eq_refl (x s)). Qed.
Lemma lem4928475 {B : Type'} (x : type638 B) (s : B -> Prop) : (term2564 B x s) = (term2565 B x s).
Proof. exact (MK_COMB (@lem4928473 B s) (@lem4928474 B x s)). Qed.
Lemma lem4928476 {B : Type'} (x : type638 B) (s : B -> Prop) : (term2565 B x s) = (term2566 B x s).
Proof. exact (eq_refl (term2565 B x s)). Qed.
Lemma lem4928477 {B : Type'} (x : type638 B) (s : B -> Prop) : (term2564 B x s) = (term2566 B x s).
Proof. exact (TRANS (@lem4928475 B x s) (@lem4928476 B x s)). Qed.
Lemma lem4928478 {B : Type'} (x : type638 B) : (term2567 B x) = (term2568 B x).
Proof. exact (fun_ext (fun s : B -> Prop => @lem4928477 B x s)). Qed.
Lemma lem4928479 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4928480 {B : Type'} (x : type638 B) : (term2569 B x) = (term2570 B x).
Proof. exact (MK_COMB (@lem4928479 B) (@lem4928478 B x)). Qed.
Lemma lem4928481 {B : Type'} : (term2571 B) = (term2572 B).
Proof. exact (fun_ext (fun x : type638 B => @lem4928480 B x)). Qed.
Lemma lem4928482 {B : Type'} : (@ex ((B -> Prop) -> (B -> Prop) -> B)) = (@ex ((B -> Prop) -> (B -> Prop) -> B)).
Proof. exact (eq_refl (@ex ((B -> Prop) -> (B -> Prop) -> B))). Qed.
Lemma lem4928483 {B : Type'} : (term2554 B) = (term2573 B).
Proof. exact (MK_COMB (@lem4928482 B) (@lem4928481 B)). Qed.
Lemma lem4928484 {B : Type'} : ((term2553 B) = (term2554 B)) = ((term2550 B) = (term2573 B)).
Proof. exact (MK_COMB (@lem4928472 B) (@lem4928483 B)). Qed.
Lemma lem4928485 {B : Type'} : (term2550 B) = (term2573 B).
Proof. exact (EQ_MP (@lem4928484 B) (@lem4928459 B)). Qed.
Lemma lem4928486 {B : Type'} : (term2507 B) = (term2573 B).
Proof. exact (TRANS (@lem4928455 B) (@lem4928485 B)). Qed.
Lemma lem4928487 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4928488 {B : Type'} : (term2509 B) = (term2574 B).
Proof. exact (MK_COMB (@lem4928487) (@lem4928486 B)). Qed.
Lemma lem4928489 {B : Type'} : (term2512 B) = (term2512 B).
Proof. exact (eq_refl (term2512 B)). Qed.
Lemma lem4928490 {B : Type'} : (term2513 B) = (term2575 B).
Proof. exact (MK_COMB (@lem4928488 B) (@lem4928489 B)). Qed.
Lemma lem4928492 {A : Type'} (P : A -> Prop) (Q : Prop) : (term1197 A P Q) = (term1198 A P Q).
Proof. exact (EQ_MP (@lem18923 A P Q) (@lem18922 A P Q)). Qed.
Lemma lem4928493 {B : Type'} (P : type139 B) (Q : Prop) : (term2576 B P Q) = (term2577 B P Q).
Proof. exact (@lem4928492 (type638 B) P Q). Qed.
Lemma lem4928494 {B : Type'} : (term2578 B) = (term2579 B).
Proof. exact (@lem4928493 B (term2572 B) (term2512 B)). Qed.
Lemma lem4928495 {B : Type'} (x : type638 B) : (term2580 B x) = (term2570 B x).
Proof. exact (eq_refl (term2580 B x)). Qed.
Lemma lem4928496 {B : Type'} : (term2581 B) = (term2572 B).
Proof. exact (fun_ext (fun x : type638 B => @lem4928495 B x)). Qed.
Lemma lem4928497 {B : Type'} : (@ex ((B -> Prop) -> (B -> Prop) -> B)) = (@ex ((B -> Prop) -> (B -> Prop) -> B)).
Proof. exact (eq_refl (@ex ((B -> Prop) -> (B -> Prop) -> B))). Qed.
Lemma lem4928498 {B : Type'} : (term2582 B) = (term2573 B).
Proof. exact (MK_COMB (@lem4928497 B) (@lem4928496 B)). Qed.
Lemma lem4928499 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4928500 {B : Type'} : (term2583 B) = (term2574 B).
Proof. exact (MK_COMB (@lem4928499) (@lem4928498 B)). Qed.
Lemma lem4928501 {B : Type'} : (term2512 B) = (term2512 B).
Proof. exact (eq_refl (term2512 B)). Qed.
Lemma lem4928502 {B : Type'} : (term2578 B) = (term2575 B).
Proof. exact (MK_COMB (@lem4928500 B) (@lem4928501 B)). Qed.
Lemma lem4928503 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4928504 {B : Type'} : (term2584 B) = (term2585 B).
Proof. exact (MK_COMB (@lem4928503) (@lem4928502 B)). Qed.
Lemma lem4928505 {B : Type'} (x : type638 B) : (term2580 B x) = (term2570 B x).
Proof. exact (eq_refl (term2580 B x)). Qed.
Lemma lem4928506 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4928507 {B : Type'} (x : type638 B) : (term2586 B x) = (term2587 B x).
Proof. exact (MK_COMB (@lem4928506) (@lem4928505 B x)). Qed.
Lemma lem4928508 {B : Type'} : (term2512 B) = (term2512 B).
Proof. exact (eq_refl (term2512 B)). Qed.
Lemma lem4928509 {B : Type'} (x : type638 B) : (term2588 B x) = (term2589 B x).
Proof. exact (MK_COMB (@lem4928507 B x) (@lem4928508 B)). Qed.
Lemma lem4928510 {B : Type'} : (term2590 B) = (term2591 B).
Proof. exact (fun_ext (fun x : type638 B => @lem4928509 B x)). Qed.
Lemma lem4928511 {B : Type'} : (@ex ((B -> Prop) -> (B -> Prop) -> B)) = (@ex ((B -> Prop) -> (B -> Prop) -> B)).
Proof. exact (eq_refl (@ex ((B -> Prop) -> (B -> Prop) -> B))). Qed.
Lemma lem4928512 {B : Type'} : (term2579 B) = (term2592 B).
Proof. exact (MK_COMB (@lem4928511 B) (@lem4928510 B)). Qed.
Lemma lem4928513 {B : Type'} : ((term2578 B) = (term2579 B)) = ((term2575 B) = (term2592 B)).
Proof. exact (MK_COMB (@lem4928504 B) (@lem4928512 B)). Qed.
Lemma lem4928514 {B : Type'} : (term2575 B) = (term2592 B).
Proof. exact (EQ_MP (@lem4928513 B) (@lem4928494 B)). Qed.
Lemma lem4928515 {B : Type'} : (term2513 B) = (term2592 B).
Proof. exact (TRANS (@lem4928490 B) (@lem4928514 B)). Qed.
Lemma lem4928516 {B : Type'} : (term2444 B) = (term2592 B).
Proof. exact (TRANS (@lem4928398 B) (@lem4928515 B)). Qed.
Lemma lem4928517 {B : Type'} : (term1322 B) = (term2592 B).
Proof. exact (TRANS (@lem4927765 B) (@lem4928516 B)). Qed.
Lemma lem4928518 {B : Type'} (h1 : term1322 B) : term2592 B.
Proof. exact (EQ_MP (@lem4928517 B) (@lem4921356 B h1)). Qed.
Lemma lem4928525 {A B : Type'} (x'''''' : type1448 A B) (h1 : term1835 A B x'''''') : term1835 A B x''''''.
Proof. exact (h1). Qed.
Lemma lem4928684 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4928685 {B : Type'} (f : type1364 B) (x : B) : (f x) = (@I (B -> (B -> Prop) -> Prop) f x).
Proof. exact (@lem4928684 B (type686 B) f x). Qed.
Lemma lem4928686 {B : Type'} (y : B) : (@IN B y) = (@I (B -> (B -> Prop) -> Prop) (@IN B) y).
Proof. exact (@lem4928685 B (@IN B) y). Qed.
Lemma lem4928687 {B : Type'} (t : B -> Prop) : t = t.
Proof. exact (eq_refl t). Qed.
Lemma lem4928688 {B : Type'} (y : B) (t : B -> Prop) : (@IN B y t) = (@I (B -> (B -> Prop) -> Prop) (@IN B) y t).
Proof. exact (MK_COMB (@lem4928686 B y) (@lem4928687 B t)). Qed.
Lemma lem4928690 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4928691 {B : Type'} (f : type686 B) (x : B -> Prop) : (f x) = (@I ((B -> Prop) -> Prop) f x).
Proof. exact (@lem4928690 (B -> Prop) Prop f x). Qed.
Lemma lem4928692 {B : Type'} (y : B) (t : B -> Prop) : (@I (B -> (B -> Prop) -> Prop) (@IN B) y t) = (term2593 B y t).
Proof. exact (@lem4928691 B (@I (B -> (B -> Prop) -> Prop) (@IN B) y) t). Qed.
Lemma lem4928694 {B : Type'} (y : B) (t : B -> Prop) : (@IN B y t) = (term2593 B y t).
Proof. exact (TRANS (@lem4928688 B y t) (@lem4928692 B y t)). Qed.
Lemma lem4928696 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem4928697 {B : Type'} : (@eq B) = (@eq B).
Proof. exact (eq_refl (@eq B)). Qed.
Lemma lem4928702 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4928704 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (@lem4928702 A B f x). Qed.
Lemma lem4928705 {B : Type'} (y : B) : y = y.
Proof. exact (eq_refl y). Qed.
Lemma lem4928706 {A B : Type'} (f : A -> B) (x : A) : (term855 A B f x) = (term856 A B f x).
Proof. exact (MK_COMB (@lem4928697 B) (@lem4928704 A B f x)). Qed.
Lemma lem4928707 {A B : Type'} (f : A -> B) (x : A) (y : B) : ((f x) = y) = ((@I (A -> B) f x) = y).
Proof. exact (MK_COMB (@lem4928706 A B f x) (@lem4928705 B y)). Qed.
Lemma lem4928708 {A B : Type'} (f : A -> B) (x : A) (y : B) : (term2594 A B f x y) = (term975 A B f x y).
Proof. exact (MK_COMB (@lem4928696) (@lem4928707 A B f x y)). Qed.
Lemma lem4928709 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem4928716 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4928717 {A : Type'} (f : type1364 A) (x : A) : (f x) = (@I (A -> (A -> Prop) -> Prop) f x).
Proof. exact (@lem4928716 A (type686 A) f x). Qed.
Lemma lem4928718 {A : Type'} (x : A) : (@IN A x) = (@I (A -> (A -> Prop) -> Prop) (@IN A) x).
Proof. exact (@lem4928717 A (@IN A) x). Qed.
Lemma lem4928719 {A : Type'} (s : A -> Prop) : s = s.
Proof. exact (eq_refl s). Qed.
Lemma lem4928720 {A : Type'} (x : A) (s : A -> Prop) : (@IN A x s) = (@I (A -> (A -> Prop) -> Prop) (@IN A) x s).
Proof. exact (MK_COMB (@lem4928718 A x) (@lem4928719 A s)). Qed.
Lemma lem4928722 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4928723 {A : Type'} (f : type686 A) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> Prop) f x).
Proof. exact (@lem4928722 (A -> Prop) Prop f x). Qed.
Lemma lem4928724 {A : Type'} (x : A) (s : A -> Prop) : (@I (A -> (A -> Prop) -> Prop) (@IN A) x s) = (term2593 A x s).
Proof. exact (@lem4928723 A (@I (A -> (A -> Prop) -> Prop) (@IN A) x) s). Qed.
Lemma lem4928726 {A : Type'} (x : A) (s : A -> Prop) : (@IN A x s) = (term2593 A x s).
Proof. exact (TRANS (@lem4928720 A x s) (@lem4928724 A x s)). Qed.
Lemma lem4928727 {A : Type'} (x : A) (s : A -> Prop) : (term801 A x s) = (term2595 A x s).
Proof. exact (MK_COMB (@lem4928709) (@lem4928726 A x s)). Qed.
Lemma lem4928728 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4928729 {A : Type'} (x : A) (s : A -> Prop) : (term793 A x s) = (term2596 A x s).
Proof. exact (MK_COMB (@lem4928728) (@lem4928727 A x s)). Qed.
Lemma lem4928730 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) (y : B) : (term1443 A B s f x y) = (term2597 A B s f x y).
Proof. exact (MK_COMB (@lem4928729 A x s) (@lem4928708 A B f x y)). Qed.
Lemma lem4928731 {A B : Type'} (s : A -> Prop) (f : A -> B) (y : B) : (term1448 A B s f y) = (term2598 A B s f y).
Proof. exact (fun_ext (fun x : A => @lem4928730 A B s f x y)). Qed.
Lemma lem4928732 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4928733 {A B : Type'} (s : A -> Prop) (f : A -> B) (y : B) : (term1449 A B s f y) = (term2599 A B s f y).
Proof. exact (MK_COMB (@lem4928732 A) (@lem4928731 A B s f y)). Qed.
Lemma lem4928734 {B : Type'} : (@eq (B -> Prop)) = (@eq (B -> Prop)).
Proof. exact (eq_refl (@eq (B -> Prop))). Qed.
Lemma lem4928741 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4928742 {A B : Type'} (f : type528 A B) (x : A -> B) : (f x) = (@I ((A -> B) -> (A -> Prop) -> B -> Prop) f x).
Proof. exact (@lem4928741 (A -> B) (type678 A B) f x). Qed.
Lemma lem4928743 {A B : Type'} (f : A -> B) : (@IMAGE A B f) = (@I ((A -> B) -> (A -> Prop) -> B -> Prop) (@IMAGE A B) f).
Proof. exact (@lem4928742 A B (@IMAGE A B) f). Qed.
Lemma lem4928744 {A : Type'} (s : A -> Prop) : s = s.
Proof. exact (eq_refl s). Qed.
Lemma lem4928745 {A B : Type'} (f : A -> B) (s : A -> Prop) : (@IMAGE A B f s) = (@I ((A -> B) -> (A -> Prop) -> B -> Prop) (@IMAGE A B) f s).
Proof. exact (MK_COMB (@lem4928743 A B f) (@lem4928744 A s)). Qed.
Lemma lem4928747 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4928748 {A B : Type'} (f : type678 A B) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> B -> Prop) f x).
Proof. exact (@lem4928747 (A -> Prop) (B -> Prop) f x). Qed.
Lemma lem4928749 {A B : Type'} (f : A -> B) (s : A -> Prop) : (@I ((A -> B) -> (A -> Prop) -> B -> Prop) (@IMAGE A B) f s) = (term2600 A B f s).
Proof. exact (@lem4928748 A B (@I ((A -> B) -> (A -> Prop) -> B -> Prop) (@IMAGE A B) f) s). Qed.
Lemma lem4928751 {A B : Type'} (f : A -> B) (s : A -> Prop) : (@IMAGE A B f s) = (term2600 A B f s).
Proof. exact (TRANS (@lem4928745 A B f s) (@lem4928749 A B f s)). Qed.
Lemma lem4928752 {B : Type'} (t : B -> Prop) : t = t.
Proof. exact (eq_refl t). Qed.
Lemma lem4928753 {A B : Type'} (f : A -> B) (s : A -> Prop) : (term2601 A B f s) = (term2602 A B f s).
Proof. exact (MK_COMB (@lem4928734 B) (@lem4928751 A B f s)). Qed.
Lemma lem4928754 {A B : Type'} (f : A -> B) (s : A -> Prop) (t : B -> Prop) : ((@IMAGE A B f s) = t) = ((term2600 A B f s) = t).
Proof. exact (MK_COMB (@lem4928753 A B f s) (@lem4928752 B t)). Qed.
Lemma lem4928755 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4928756 {A B : Type'} (f : A -> B) (s : A -> Prop) (t : B -> Prop) : (term1450 A B f s t) = (term2603 A B f s t).
Proof. exact (MK_COMB (@lem4928755) (@lem4928754 A B f s t)). Qed.
Lemma lem4928757 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (f : A -> B) (y : B) : (term1452 A B t s f y) = (term2604 A B t s f y).
Proof. exact (MK_COMB (@lem4928756 A B f s t) (@lem4928733 A B s f y)). Qed.
Lemma lem4928758 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (f : A -> B) (y : B) (h1 : term1321 A B t s f y) : term2604 A B t s f y.
Proof. exact (EQ_MP (@lem4928757 A B t s f y) (@lem4921544 A B t s f y h1)). Qed.
Lemma lem4930155 {A : Type'} : (@IN A) = (@IN A).
Proof. exact (eq_refl (@IN A)). Qed.
Lemma lem4930164 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4930165 {A B : Type'} (f : type1448 A B) (x : B) : (f x) = (@I (B -> (A -> Prop) -> (A -> B) -> A) f x).
Proof. exact (@lem4930164 B (type631 A B) f x). Qed.
Lemma lem4930166 {A B : Type'} (x'''''' : type1448 A B) (y : B) : (x'''''' y) = (@I (B -> (A -> Prop) -> (A -> B) -> A) x'''''' y).
Proof. exact (@lem4930165 A B x'''''' y). Qed.
Lemma lem4930167 {A : Type'} (s : A -> Prop) : s = s.
Proof. exact (eq_refl s). Qed.
Lemma lem4930168 {A B : Type'} (x'''''' : type1448 A B) (y : B) (s : A -> Prop) : (x'''''' y s) = (@I (B -> (A -> Prop) -> (A -> B) -> A) x'''''' y s).
Proof. exact (MK_COMB (@lem4930166 A B x'''''' y) (@lem4930167 A s)). Qed.
Lemma lem4930170 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4930171 {A B : Type'} (f : type631 A B) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> (A -> B) -> A) f x).
Proof. exact (@lem4930170 (A -> Prop) (type569 A B) f x). Qed.
Lemma lem4930172 {A B : Type'} (x'''''' : type1448 A B) (y : B) (s : A -> Prop) : (@I (B -> (A -> Prop) -> (A -> B) -> A) x'''''' y s) = (term2605 A B x'''''' y s).
Proof. exact (@lem4930171 A B (@I (B -> (A -> Prop) -> (A -> B) -> A) x'''''' y) s). Qed.
Lemma lem4930173 {A B : Type'} (x'''''' : type1448 A B) (y : B) (s : A -> Prop) : (x'''''' y s) = (term2605 A B x'''''' y s).
Proof. exact (TRANS (@lem4930168 A B x'''''' y s) (@lem4930172 A B x'''''' y s)). Qed.
Lemma lem4930174 {A B : Type'} (f : A -> B) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem4930175 {A B : Type'} (x'''''' : type1448 A B) (y : B) (s : A -> Prop) (f : A -> B) : (x'''''' y s f) = (term2606 A B x'''''' y s f).
Proof. exact (MK_COMB (@lem4930173 A B x'''''' y s) (@lem4930174 A B f)). Qed.
Lemma lem4930177 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4930178 {A B : Type'} (f : type569 A B) (x : A -> B) : (f x) = (@I ((A -> B) -> A) f x).
Proof. exact (@lem4930177 (A -> B) A f x). Qed.
Lemma lem4930179 {A B : Type'} (x'''''' : type1448 A B) (y : B) (s : A -> Prop) (f : A -> B) : (term2606 A B x'''''' y s f) = (term2607 A B x'''''' y s f).
Proof. exact (@lem4930178 A B (term2605 A B x'''''' y s) f). Qed.
Lemma lem4930181 {A B : Type'} (x'''''' : type1448 A B) (y : B) (s : A -> Prop) (f : A -> B) : (x'''''' y s f) = (term2607 A B x'''''' y s f).
Proof. exact (TRANS (@lem4930175 A B x'''''' y s f) (@lem4930179 A B x'''''' y s f)). Qed.
Lemma lem4930182 {A : Type'} (s : A -> Prop) : s = s.
Proof. exact (eq_refl s). Qed.
Lemma lem4930183 {A B : Type'} (x'''''' : type1448 A B) (y : B) (s : A -> Prop) (f : A -> B) : (term2608 A B x'''''' y s f) = (term2609 A B x'''''' y s f).
Proof. exact (MK_COMB (@lem4930155 A) (@lem4930181 A B x'''''' y s f)). Qed.
Lemma lem4930184 {A B : Type'} (x'''''' : type1448 A B) (y : B) (f : A -> B) (s : A -> Prop) : (term2610 A B x'''''' y f s) = (term2611 A B x'''''' y f s).
Proof. exact (MK_COMB (@lem4930183 A B x'''''' y s f) (@lem4930182 A s)). Qed.
Lemma lem4930186 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4930187 {A : Type'} (f : type1364 A) (x : A) : (f x) = (@I (A -> (A -> Prop) -> Prop) f x).
Proof. exact (@lem4930186 A (type686 A) f x). Qed.
Lemma lem4930188 {A B : Type'} (x'''''' : type1448 A B) (y : B) (s : A -> Prop) (f : A -> B) : (term2609 A B x'''''' y s f) = (term2612 A B x'''''' y s f).
Proof. exact (@lem4930187 A (@IN A) (term2607 A B x'''''' y s f)). Qed.
Lemma lem4930189 {A : Type'} (s : A -> Prop) : s = s.
Proof. exact (eq_refl s). Qed.
Lemma lem4930190 {A B : Type'} (x'''''' : type1448 A B) (y : B) (f : A -> B) (s : A -> Prop) : (term2611 A B x'''''' y f s) = (term2613 A B x'''''' y f s).
Proof. exact (MK_COMB (@lem4930188 A B x'''''' y s f) (@lem4930189 A s)). Qed.
Lemma lem4930192 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4930193 {A : Type'} (f : type686 A) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> Prop) f x).
Proof. exact (@lem4930192 (A -> Prop) Prop f x). Qed.
Lemma lem4930194 {A B : Type'} (x'''''' : type1448 A B) (y : B) (f : A -> B) (s : A -> Prop) : (term2613 A B x'''''' y f s) = (term2614 A B x'''''' y f s).
Proof. exact (@lem4930193 A (term2612 A B x'''''' y s f) s). Qed.
Lemma lem4930195 {A B : Type'} (x'''''' : type1448 A B) (y : B) (f : A -> B) (s : A -> Prop) : (term2611 A B x'''''' y f s) = (term2614 A B x'''''' y f s).
Proof. exact (TRANS (@lem4930190 A B x'''''' y f s) (@lem4930194 A B x'''''' y f s)). Qed.
Lemma lem4930196 {A B : Type'} (x'''''' : type1448 A B) (y : B) (f : A -> B) (s : A -> Prop) : (term2610 A B x'''''' y f s) = (term2614 A B x'''''' y f s).
Proof. exact (TRANS (@lem4930184 A B x'''''' y f s) (@lem4930195 A B x'''''' y f s)). Qed.
Lemma lem4930199 {A B : Type'} (f : A -> B) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem4930208 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4930209 {A B : Type'} (f : type1448 A B) (x : B) : (f x) = (@I (B -> (A -> Prop) -> (A -> B) -> A) f x).
Proof. exact (@lem4930208 B (type631 A B) f x). Qed.
Lemma lem4930210 {A B : Type'} (x'''''' : type1448 A B) (y : B) : (x'''''' y) = (@I (B -> (A -> Prop) -> (A -> B) -> A) x'''''' y).
Proof. exact (@lem4930209 A B x'''''' y). Qed.
Lemma lem4930211 {A : Type'} (s : A -> Prop) : s = s.
Proof. exact (eq_refl s). Qed.
Lemma lem4930212 {A B : Type'} (x'''''' : type1448 A B) (y : B) (s : A -> Prop) : (x'''''' y s) = (@I (B -> (A -> Prop) -> (A -> B) -> A) x'''''' y s).
Proof. exact (MK_COMB (@lem4930210 A B x'''''' y) (@lem4930211 A s)). Qed.
Lemma lem4930214 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4930215 {A B : Type'} (f : type631 A B) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> (A -> B) -> A) f x).
Proof. exact (@lem4930214 (A -> Prop) (type569 A B) f x). Qed.
Lemma lem4930216 {A B : Type'} (x'''''' : type1448 A B) (y : B) (s : A -> Prop) : (@I (B -> (A -> Prop) -> (A -> B) -> A) x'''''' y s) = (term2605 A B x'''''' y s).
Proof. exact (@lem4930215 A B (@I (B -> (A -> Prop) -> (A -> B) -> A) x'''''' y) s). Qed.
Lemma lem4930217 {A B : Type'} (x'''''' : type1448 A B) (y : B) (s : A -> Prop) : (x'''''' y s) = (term2605 A B x'''''' y s).
Proof. exact (TRANS (@lem4930212 A B x'''''' y s) (@lem4930216 A B x'''''' y s)). Qed.
Lemma lem4930218 {A B : Type'} (f : A -> B) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem4930219 {A B : Type'} (x'''''' : type1448 A B) (y : B) (s : A -> Prop) (f : A -> B) : (x'''''' y s f) = (term2606 A B x'''''' y s f).
Proof. exact (MK_COMB (@lem4930217 A B x'''''' y s) (@lem4930218 A B f)). Qed.
Lemma lem4930221 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4930222 {A B : Type'} (f : type569 A B) (x : A -> B) : (f x) = (@I ((A -> B) -> A) f x).
Proof. exact (@lem4930221 (A -> B) A f x). Qed.
Lemma lem4930223 {A B : Type'} (x'''''' : type1448 A B) (y : B) (s : A -> Prop) (f : A -> B) : (term2606 A B x'''''' y s f) = (term2607 A B x'''''' y s f).
Proof. exact (@lem4930222 A B (term2605 A B x'''''' y s) f). Qed.
Lemma lem4930225 {A B : Type'} (x'''''' : type1448 A B) (y : B) (s : A -> Prop) (f : A -> B) : (x'''''' y s f) = (term2607 A B x'''''' y s f).
Proof. exact (TRANS (@lem4930219 A B x'''''' y s f) (@lem4930223 A B x'''''' y s f)). Qed.
Lemma lem4930226 {A B : Type'} (x'''''' : type1448 A B) (y : B) (s : A -> Prop) (f : A -> B) : (term2615 A B x'''''' y s f) = (term2616 A B x'''''' y s f).
Proof. exact (MK_COMB (@lem4930199 A B f) (@lem4930225 A B x'''''' y s f)). Qed.
Lemma lem4930228 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4930229 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (@lem4930228 A B f x). Qed.
Lemma lem4930230 {A B : Type'} (x'''''' : type1448 A B) (y : B) (s : A -> Prop) (f : A -> B) : (term2616 A B x'''''' y s f) = (term2617 A B x'''''' y s f).
Proof. exact (@lem4930229 A B f (term2607 A B x'''''' y s f)). Qed.
Lemma lem4930231 {A B : Type'} (x'''''' : type1448 A B) (y : B) (s : A -> Prop) (f : A -> B) : (term2615 A B x'''''' y s f) = (term2617 A B x'''''' y s f).
Proof. exact (TRANS (@lem4930226 A B x'''''' y s f) (@lem4930230 A B x'''''' y s f)). Qed.
Lemma lem4930232 {B : Type'} (y : B) : (@eq B y) = (@eq B y).
Proof. exact (eq_refl (@eq B y)). Qed.
Lemma lem4930233 {A B : Type'} (x'''''' : type1448 A B) (y : B) (s : A -> Prop) (f : A -> B) : (y = (term2615 A B x'''''' y s f)) = (y = (term2617 A B x'''''' y s f)).
Proof. exact (MK_COMB (@lem4930232 B y) (@lem4930231 A B x'''''' y s f)). Qed.
Lemma lem4930234 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4930235 {A B : Type'} (x'''''' : type1448 A B) (y : B) (s : A -> Prop) (f : A -> B) : (term2618 A B x'''''' y s f) = (term2619 A B x'''''' y s f).
Proof. exact (MK_COMB (@lem4930234) (@lem4930233 A B x'''''' y s f)). Qed.
Lemma lem4930236 {A B : Type'} (x'''''' : type1448 A B) (y : B) (f : A -> B) (s : A -> Prop) : (term2620 A B x'''''' y f s) = (term2621 A B x'''''' y f s).
Proof. exact (MK_COMB (@lem4930235 A B x'''''' y s f) (@lem4930196 A B x'''''' y f s)). Qed.
Lemma lem4930237 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem4930246 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4930247 {A B : Type'} (f : type528 A B) (x : A -> B) : (f x) = (@I ((A -> B) -> (A -> Prop) -> B -> Prop) f x).
Proof. exact (@lem4930246 (A -> B) (type678 A B) f x). Qed.
Lemma lem4930248 {A B : Type'} (f : A -> B) : (@IMAGE A B f) = (@I ((A -> B) -> (A -> Prop) -> B -> Prop) (@IMAGE A B) f).
Proof. exact (@lem4930247 A B (@IMAGE A B) f). Qed.
Lemma lem4930249 {A : Type'} (s : A -> Prop) : s = s.
Proof. exact (eq_refl s). Qed.
Lemma lem4930250 {A B : Type'} (f : A -> B) (s : A -> Prop) : (@IMAGE A B f s) = (@I ((A -> B) -> (A -> Prop) -> B -> Prop) (@IMAGE A B) f s).
Proof. exact (MK_COMB (@lem4930248 A B f) (@lem4930249 A s)). Qed.
Lemma lem4930252 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4930253 {A B : Type'} (f : type678 A B) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> B -> Prop) f x).
Proof. exact (@lem4930252 (A -> Prop) (B -> Prop) f x). Qed.
Lemma lem4930254 {A B : Type'} (f : A -> B) (s : A -> Prop) : (@I ((A -> B) -> (A -> Prop) -> B -> Prop) (@IMAGE A B) f s) = (term2600 A B f s).
Proof. exact (@lem4930253 A B (@I ((A -> B) -> (A -> Prop) -> B -> Prop) (@IMAGE A B) f) s). Qed.
Lemma lem4930256 {A B : Type'} (f : A -> B) (s : A -> Prop) : (@IMAGE A B f s) = (term2600 A B f s).
Proof. exact (TRANS (@lem4930250 A B f s) (@lem4930254 A B f s)). Qed.
Lemma lem4930257 {B : Type'} (y : B) : (@IN B y) = (@IN B y).
Proof. exact (eq_refl (@IN B y)). Qed.
Lemma lem4930258 {A B : Type'} (y : B) (f : A -> B) (s : A -> Prop) : (term671 A B y f s) = (term2622 A B y f s).
Proof. exact (MK_COMB (@lem4930257 B y) (@lem4930256 A B f s)). Qed.
Lemma lem4930260 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4930261 {B : Type'} (f : type1364 B) (x : B) : (f x) = (@I (B -> (B -> Prop) -> Prop) f x).
Proof. exact (@lem4930260 B (type686 B) f x). Qed.
Lemma lem4930262 {B : Type'} (y : B) : (@IN B y) = (@I (B -> (B -> Prop) -> Prop) (@IN B) y).
Proof. exact (@lem4930261 B (@IN B) y). Qed.
Lemma lem4930263 {A B : Type'} (f : A -> B) (s : A -> Prop) : (term2600 A B f s) = (term2600 A B f s).
Proof. exact (eq_refl (term2600 A B f s)). Qed.
Lemma lem4930264 {A B : Type'} (y : B) (f : A -> B) (s : A -> Prop) : (term2622 A B y f s) = (term2623 A B y f s).
Proof. exact (MK_COMB (@lem4930262 B y) (@lem4930263 A B f s)). Qed.
Lemma lem4930266 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4930267 {B : Type'} (f : type686 B) (x : B -> Prop) : (f x) = (@I ((B -> Prop) -> Prop) f x).
Proof. exact (@lem4930266 (B -> Prop) Prop f x). Qed.
Lemma lem4930268 {A B : Type'} (y : B) (f : A -> B) (s : A -> Prop) : (term2623 A B y f s) = (term2624 A B y f s).
Proof. exact (@lem4930267 B (@I (B -> (B -> Prop) -> Prop) (@IN B) y) (term2600 A B f s)). Qed.
Lemma lem4930269 {A B : Type'} (y : B) (f : A -> B) (s : A -> Prop) : (term2622 A B y f s) = (term2624 A B y f s).
Proof. exact (TRANS (@lem4930264 A B y f s) (@lem4930268 A B y f s)). Qed.
Lemma lem4930270 {A B : Type'} (y : B) (f : A -> B) (s : A -> Prop) : (term671 A B y f s) = (term2624 A B y f s).
Proof. exact (TRANS (@lem4930258 A B y f s) (@lem4930269 A B y f s)). Qed.
Lemma lem4930271 {A B : Type'} (y : B) (f : A -> B) (s : A -> Prop) : (term1739 A B y f s) = (term2625 A B y f s).
Proof. exact (MK_COMB (@lem4930237) (@lem4930270 A B y f s)). Qed.
Lemma lem4930272 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4930273 {A B : Type'} (y : B) (f : A -> B) (s : A -> Prop) : (term1656 A B y f s) = (term2626 A B y f s).
Proof. exact (MK_COMB (@lem4930272) (@lem4930271 A B y f s)). Qed.
Lemma lem4930274 {A B : Type'} (x'''''' : type1448 A B) (y : B) (f : A -> B) (s : A -> Prop) : (term2627 A B x'''''' y f s) = (term2628 A B x'''''' y f s).
Proof. exact (MK_COMB (@lem4930273 A B y f s) (@lem4930236 A B x'''''' y f s)). Qed.
Lemma lem4930275 {A B : Type'} (x'''''' : type1448 A B) (y : B) (s : A -> Prop) : (term2629 A B x'''''' y s) = (term2630 A B x'''''' y s).
Proof. exact (fun_ext (fun f : A -> B => @lem4930274 A B x'''''' y f s)). Qed.
Lemma lem4930276 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem4930277 {A B : Type'} (x'''''' : type1448 A B) (y : B) (s : A -> Prop) : (term2631 A B x'''''' y s) = (term2632 A B x'''''' y s).
Proof. exact (MK_COMB (@lem4930276 A B) (@lem4930275 A B x'''''' y s)). Qed.
Lemma lem4930278 {A B : Type'} (x'''''' : type1448 A B) (y : B) : (term2633 A B x'''''' y) = (term2634 A B x'''''' y).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4930277 A B x'''''' y s)). Qed.
Lemma lem4930279 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4930280 {A B : Type'} (x'''''' : type1448 A B) (y : B) : (term1816 A B x'''''' y) = (term2635 A B x'''''' y).
Proof. exact (MK_COMB (@lem4930279 A) (@lem4930278 A B x'''''' y)). Qed.
Lemma lem4930281 {A B : Type'} (x'''''' : type1448 A B) : (term1818 A B x'''''') = (term2636 A B x'''''').
Proof. exact (fun_ext (fun y : B => @lem4930280 A B x'''''' y)). Qed.
Lemma lem4930282 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4930283 {A B : Type'} (x'''''' : type1448 A B) : (term1820 A B x'''''') = (term2637 A B x'''''').
Proof. exact (MK_COMB (@lem4930282 B) (@lem4930281 A B x'''''')). Qed.
Lemma lem4930284 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem4930291 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4930292 {A : Type'} (f : type1364 A) (x : A) : (f x) = (@I (A -> (A -> Prop) -> Prop) f x).
Proof. exact (@lem4930291 A (type686 A) f x). Qed.
Lemma lem4930293 {A : Type'} (x : A) : (@IN A x) = (@I (A -> (A -> Prop) -> Prop) (@IN A) x).
Proof. exact (@lem4930292 A (@IN A) x). Qed.
Lemma lem4930294 {A : Type'} (s : A -> Prop) : s = s.
Proof. exact (eq_refl s). Qed.
Lemma lem4930295 {A : Type'} (x : A) (s : A -> Prop) : (@IN A x s) = (@I (A -> (A -> Prop) -> Prop) (@IN A) x s).
Proof. exact (MK_COMB (@lem4930293 A x) (@lem4930294 A s)). Qed.
Lemma lem4930297 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4930298 {A : Type'} (f : type686 A) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> Prop) f x).
Proof. exact (@lem4930297 (A -> Prop) Prop f x). Qed.
Lemma lem4930299 {A : Type'} (x : A) (s : A -> Prop) : (@I (A -> (A -> Prop) -> Prop) (@IN A) x s) = (term2593 A x s).
Proof. exact (@lem4930298 A (@I (A -> (A -> Prop) -> Prop) (@IN A) x) s). Qed.
Lemma lem4930301 {A : Type'} (x : A) (s : A -> Prop) : (@IN A x s) = (term2593 A x s).
Proof. exact (TRANS (@lem4930295 A x s) (@lem4930299 A x s)). Qed.
Lemma lem4930302 {A : Type'} (x : A) (s : A -> Prop) : (term801 A x s) = (term2595 A x s).
Proof. exact (MK_COMB (@lem4930284) (@lem4930301 A x s)). Qed.
Lemma lem4930303 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem4930310 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4930312 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (@lem4930310 A B f x). Qed.
Lemma lem4930313 {B : Type'} (y : B) : (@eq B y) = (@eq B y).
Proof. exact (eq_refl (@eq B y)). Qed.
Lemma lem4930314 {A B : Type'} (y : B) (f : A -> B) (x : A) : (y = (f x)) = (y = (@I (A -> B) f x)).
Proof. exact (MK_COMB (@lem4930313 B y) (@lem4930312 A B f x)). Qed.
Lemma lem4930315 {A B : Type'} (y : B) (f : A -> B) (x : A) : (term857 A B y f x) = (term858 A B y f x).
Proof. exact (MK_COMB (@lem4930303) (@lem4930314 A B y f x)). Qed.
Lemma lem4930316 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4930317 {A B : Type'} (y : B) (f : A -> B) (x : A) : (term843 A B y f x) = (term859 A B y f x).
Proof. exact (MK_COMB (@lem4930316) (@lem4930315 A B y f x)). Qed.
Lemma lem4930318 {A B : Type'} (y : B) (f : A -> B) (x : A) (s : A -> Prop) : (term1648 A B y f x s) = (term2638 A B y f x s).
Proof. exact (MK_COMB (@lem4930317 A B y f x) (@lem4930302 A x s)). Qed.
Lemma lem4930319 {A B : Type'} (y : B) (f : A -> B) (s : A -> Prop) : (term1654 A B y f s) = (term2639 A B y f s).
Proof. exact (fun_ext (fun x : A => @lem4930318 A B y f x s)). Qed.
Lemma lem4930320 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4930321 {A B : Type'} (y : B) (f : A -> B) (s : A -> Prop) : (term1655 A B y f s) = (term2640 A B y f s).
Proof. exact (MK_COMB (@lem4930320 A) (@lem4930319 A B y f s)). Qed.
Lemma lem4930330 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4930331 {A B : Type'} (f : type528 A B) (x : A -> B) : (f x) = (@I ((A -> B) -> (A -> Prop) -> B -> Prop) f x).
Proof. exact (@lem4930330 (A -> B) (type678 A B) f x). Qed.
Lemma lem4930332 {A B : Type'} (f : A -> B) : (@IMAGE A B f) = (@I ((A -> B) -> (A -> Prop) -> B -> Prop) (@IMAGE A B) f).
Proof. exact (@lem4930331 A B (@IMAGE A B) f). Qed.
Lemma lem4930333 {A : Type'} (s : A -> Prop) : s = s.
Proof. exact (eq_refl s). Qed.
Lemma lem4930334 {A B : Type'} (f : A -> B) (s : A -> Prop) : (@IMAGE A B f s) = (@I ((A -> B) -> (A -> Prop) -> B -> Prop) (@IMAGE A B) f s).
Proof. exact (MK_COMB (@lem4930332 A B f) (@lem4930333 A s)). Qed.
Lemma lem4930336 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4930337 {A B : Type'} (f : type678 A B) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> B -> Prop) f x).
Proof. exact (@lem4930336 (A -> Prop) (B -> Prop) f x). Qed.
Lemma lem4930338 {A B : Type'} (f : A -> B) (s : A -> Prop) : (@I ((A -> B) -> (A -> Prop) -> B -> Prop) (@IMAGE A B) f s) = (term2600 A B f s).
Proof. exact (@lem4930337 A B (@I ((A -> B) -> (A -> Prop) -> B -> Prop) (@IMAGE A B) f) s). Qed.
Lemma lem4930340 {A B : Type'} (f : A -> B) (s : A -> Prop) : (@IMAGE A B f s) = (term2600 A B f s).
Proof. exact (TRANS (@lem4930334 A B f s) (@lem4930338 A B f s)). Qed.
Lemma lem4930341 {B : Type'} (y : B) : (@IN B y) = (@IN B y).
Proof. exact (eq_refl (@IN B y)). Qed.
Lemma lem4930342 {A B : Type'} (y : B) (f : A -> B) (s : A -> Prop) : (term671 A B y f s) = (term2622 A B y f s).
Proof. exact (MK_COMB (@lem4930341 B y) (@lem4930340 A B f s)). Qed.
Lemma lem4930344 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4930345 {B : Type'} (f : type1364 B) (x : B) : (f x) = (@I (B -> (B -> Prop) -> Prop) f x).
Proof. exact (@lem4930344 B (type686 B) f x). Qed.
Lemma lem4930346 {B : Type'} (y : B) : (@IN B y) = (@I (B -> (B -> Prop) -> Prop) (@IN B) y).
Proof. exact (@lem4930345 B (@IN B) y). Qed.
Lemma lem4930347 {A B : Type'} (f : A -> B) (s : A -> Prop) : (term2600 A B f s) = (term2600 A B f s).
Proof. exact (eq_refl (term2600 A B f s)). Qed.
Lemma lem4930348 {A B : Type'} (y : B) (f : A -> B) (s : A -> Prop) : (term2622 A B y f s) = (term2623 A B y f s).
Proof. exact (MK_COMB (@lem4930346 B y) (@lem4930347 A B f s)). Qed.
Lemma lem4930350 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4930351 {B : Type'} (f : type686 B) (x : B -> Prop) : (f x) = (@I ((B -> Prop) -> Prop) f x).
Proof. exact (@lem4930350 (B -> Prop) Prop f x). Qed.
Lemma lem4930352 {A B : Type'} (y : B) (f : A -> B) (s : A -> Prop) : (term2623 A B y f s) = (term2624 A B y f s).
Proof. exact (@lem4930351 B (@I (B -> (B -> Prop) -> Prop) (@IN B) y) (term2600 A B f s)). Qed.
Lemma lem4930353 {A B : Type'} (y : B) (f : A -> B) (s : A -> Prop) : (term2622 A B y f s) = (term2624 A B y f s).
Proof. exact (TRANS (@lem4930348 A B y f s) (@lem4930352 A B y f s)). Qed.
Lemma lem4930354 {A B : Type'} (y : B) (f : A -> B) (s : A -> Prop) : (term671 A B y f s) = (term2624 A B y f s).
Proof. exact (TRANS (@lem4930342 A B y f s) (@lem4930353 A B y f s)). Qed.
Lemma lem4930355 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4930356 {A B : Type'} (y : B) (f : A -> B) (s : A -> Prop) : (term1658 A B y f s) = (term2641 A B y f s).
Proof. exact (MK_COMB (@lem4930355) (@lem4930354 A B y f s)). Qed.
Lemma lem4930357 {A B : Type'} (y : B) (f : A -> B) (s : A -> Prop) : (term1660 A B y f s) = (term2642 A B y f s).
Proof. exact (MK_COMB (@lem4930356 A B y f s) (@lem4930321 A B y f s)). Qed.
Lemma lem4930358 {A B : Type'} (y : B) (s : A -> Prop) : (term1675 A B y s) = (term2643 A B y s).
Proof. exact (fun_ext (fun f : A -> B => @lem4930357 A B y f s)). Qed.
Lemma lem4930359 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem4930360 {A B : Type'} (y : B) (s : A -> Prop) : (term1686 A B y s) = (term2644 A B y s).
Proof. exact (MK_COMB (@lem4930359 A B) (@lem4930358 A B y s)). Qed.
Lemma lem4930361 {A B : Type'} (y : B) : (term1697 A B y) = (term2645 A B y).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4930360 A B y s)). Qed.
Lemma lem4930362 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4930363 {A B : Type'} (y : B) : (term1708 A B y) = (term2646 A B y).
Proof. exact (MK_COMB (@lem4930362 A) (@lem4930361 A B y)). Qed.
Lemma lem4930364 {A B : Type'} : (term1719 A B) = (term2647 A B).
Proof. exact (fun_ext (fun y : B => @lem4930363 A B y)). Qed.
Lemma lem4930365 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4930366 {A B : Type'} : (term1730 A B) = (term2648 A B).
Proof. exact (MK_COMB (@lem4930365 B) (@lem4930364 A B)). Qed.
Lemma lem4930367 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4930368 {A B : Type'} : (term1732 A B) = (term2649 A B).
Proof. exact (MK_COMB (@lem4930367) (@lem4930366 A B)). Qed.
Lemma lem4930369 {A B : Type'} (x'''''' : type1448 A B) : (term1835 A B x'''''') = (term2650 A B x'''''').
Proof. exact (MK_COMB (@lem4930368 A B) (@lem4930283 A B x'''''')). Qed.
Lemma lem4930370 {A B : Type'} (x'''''' : type1448 A B) (h1 : term1835 A B x'''''') : term2650 A B x''''''.
Proof. exact (EQ_MP (@lem4930369 A B x'''''') (@lem4928525 A B x'''''' h1)). Qed.
Lemma lem4930589 {A B : Type'} (x'''''' : type1448 A B) (h1 : term1835 A B x'''''') : term2637 A B x''''''.
Proof. exact (proj2 (@lem4930370 A B x'''''' h1)). Qed.
Lemma lem4930603 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (f : A -> B) (y : B) (h1 : term1321 A B t s f y) : term2599 A B s f y.
Proof. exact (proj2 (@lem4928758 A B t s f y h1)). Qed.
Lemma lem4930811 {A B : Type'} (x'''''' : type1448 A B) (y : B) (f : A -> B) (s : A -> Prop) : (term2628 A B x'''''' y f s) = (term2651 A B x'''''' y f s).
Proof. exact (@lem19490 (y = (term2617 A B x'''''' y s f)) (term2625 A B y f s) (term2614 A B x'''''' y f s)). Qed.
Lemma lem4930812 {A B : Type'} (x'''''' : type1448 A B) (y : B) (s : A -> Prop) : (term2630 A B x'''''' y s) = (term2652 A B x'''''' y s).
Proof. exact (fun_ext (fun f : A -> B => @lem4930811 A B x'''''' y f s)). Qed.
Lemma lem4930813 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem4930814 {A B : Type'} (x'''''' : type1448 A B) (y : B) (s : A -> Prop) : (term2632 A B x'''''' y s) = (term2653 A B x'''''' y s).
Proof. exact (MK_COMB (@lem4930813 A B) (@lem4930812 A B x'''''' y s)). Qed.
Lemma lem4930815 {A B : Type'} (x'''''' : type1448 A B) (y : B) : (term2634 A B x'''''' y) = (term2654 A B x'''''' y).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4930814 A B x'''''' y s)). Qed.
Lemma lem4930816 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4930817 {A B : Type'} (x'''''' : type1448 A B) (y : B) : (term2635 A B x'''''' y) = (term2655 A B x'''''' y).
Proof. exact (MK_COMB (@lem4930816 A) (@lem4930815 A B x'''''' y)). Qed.
Lemma lem4930818 {A B : Type'} (x'''''' : type1448 A B) : (term2636 A B x'''''') = (term2656 A B x'''''').
Proof. exact (fun_ext (fun y : B => @lem4930817 A B x'''''' y)). Qed.
Lemma lem4930819 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4930821 {A B : Type'} (x'''''' : type1448 A B) : (term2637 A B x'''''') = (term2657 A B x'''''').
Proof. exact (MK_COMB (@lem4930819 B) (@lem4930818 A B x'''''')). Qed.
Lemma lem4930822 {A B : Type'} (x'''''' : type1448 A B) (h1 : term1835 A B x'''''') : term2657 A B x''''''.
Proof. exact (EQ_MP (@lem4930821 A B x'''''') (@lem4930589 A B x'''''' h1)). Qed.
Lemma lem4931442 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) (y : B) : (term2597 A B s f x y) = (term2597 A B s f x y).
Proof. exact (eq_refl (term2597 A B s f x y)). Qed.
Lemma lem4931443 {A B : Type'} (s : A -> Prop) (f : A -> B) (y : B) : (term2598 A B s f y) = (term2598 A B s f y).
Proof. exact (fun_ext (fun x : A => @lem4931442 A B s f x y)). Qed.
Lemma lem4931444 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4931446 {A B : Type'} (s : A -> Prop) (f : A -> B) (y : B) : (term2599 A B s f y) = (term2599 A B s f y).
Proof. exact (MK_COMB (@lem4931444 A) (@lem4931443 A B s f y)). Qed.
Lemma lem4931447 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (f : A -> B) (y : B) (h1 : term1321 A B t s f y) : term2599 A B s f y.
Proof. exact (EQ_MP (@lem4931446 A B s f y) (@lem4930603 A B t s f y h1)). Qed.
Lemma lem4931487 {A B : Type'} (_61147 : B) (x'''''' : type1448 A B) (h1 : term1835 A B x'''''') : term2658 A B x'''''' _61147.
Proof. exact (@lem4930822 A B x'''''' h1 _61147). Qed.
Lemma lem4931488 {A B : Type'} (x'''''' : type1448 A B) (_61147 : B) : (term2658 A B x'''''' _61147) = (term2655 A B x'''''' _61147).
Proof. exact (eq_refl (term2658 A B x'''''' _61147)). Qed.
Lemma lem4931489 {A B : Type'} (_61147 : B) (x'''''' : type1448 A B) (h1 : term1835 A B x'''''') : term2655 A B x'''''' _61147.
Proof. exact (EQ_MP (@lem4931488 A B x'''''' _61147) (@lem4931487 A B _61147 x'''''' h1)). Qed.
Lemma lem4931490 {A B : Type'} (_61147 : B) (_61148 : A -> Prop) (x'''''' : type1448 A B) (h1 : term1835 A B x'''''') : term2659 A B x'''''' _61147 _61148.
Proof. exact (@lem4931489 A B _61147 x'''''' h1 _61148). Qed.
Lemma lem4931491 {A B : Type'} (x'''''' : type1448 A B) (_61147 : B) (_61148 : A -> Prop) : (term2659 A B x'''''' _61147 _61148) = (term2653 A B x'''''' _61147 _61148).
Proof. exact (eq_refl (term2659 A B x'''''' _61147 _61148)). Qed.
Lemma lem4931492 {A B : Type'} (_61147 : B) (_61148 : A -> Prop) (x'''''' : type1448 A B) (h1 : term1835 A B x'''''') : term2653 A B x'''''' _61147 _61148.
Proof. exact (EQ_MP (@lem4931491 A B x'''''' _61147 _61148) (@lem4931490 A B _61147 _61148 x'''''' h1)). Qed.
Lemma lem4931493 {A B : Type'} (_61147 : B) (_61148 : A -> Prop) (_61149 : A -> B) (x'''''' : type1448 A B) (h1 : term1835 A B x'''''') : term2660 A B x'''''' _61147 _61148 _61149.
Proof. exact (@lem4931492 A B _61147 _61148 x'''''' h1 _61149). Qed.
Lemma lem4931494 {A B : Type'} (x'''''' : type1448 A B) (_61147 : B) (_61149 : A -> B) (_61148 : A -> Prop) : (term2660 A B x'''''' _61147 _61148 _61149) = (term2651 A B x'''''' _61147 _61149 _61148).
Proof. exact (eq_refl (term2660 A B x'''''' _61147 _61148 _61149)). Qed.
Lemma lem4931495 {A B : Type'} (_61147 : B) (_61149 : A -> B) (_61148 : A -> Prop) (x'''''' : type1448 A B) (h1 : term1835 A B x'''''') : term2651 A B x'''''' _61147 _61149 _61148.
Proof. exact (EQ_MP (@lem4931494 A B x'''''' _61147 _61149 _61148) (@lem4931493 A B _61147 _61148 _61149 x'''''' h1)). Qed.
Lemma lem4931610 {A B : Type'} (_61188 : A) (t : B -> Prop) (s : A -> Prop) (f : A -> B) (y : B) (h1 : term1321 A B t s f y) : term2661 A B s f y _61188.
Proof. exact (@lem4931447 A B t s f y h1 _61188). Qed.
Lemma lem4931611 {A B : Type'} (s : A -> Prop) (f : A -> B) (_61188 : A) (y : B) : (term2661 A B s f y _61188) = (term2597 A B s f _61188 y).
Proof. exact (eq_refl (term2661 A B s f y _61188)). Qed.
Lemma lem4931660 {B : Type'} (y : B) (t : B -> Prop) (h1 : @IN B y t) : term2593 B y t.
Proof. exact (EQ_MP (@lem4928694 B y t) (@lem4921468 B y t h1)). Qed.
Lemma lem4931722 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (f : A -> B) (y : B) (h1 : term1321 A B t s f y) : (term2600 A B f s) = t.
Proof. exact (proj1 (@lem4928758 A B t s f y h1)). Qed.
Lemma lem4931881 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (f : A -> B) (y : B) (h1 : term1321 A B t s f y) : t = (term2600 A B f s).
Proof. exact (SYM (@lem4931722 A B t s f y h1)). Qed.
Lemma lem4931963 {B : Type'} (y : B) : (term2662 B y) = (term2662 B y).
Proof. exact (eq_refl (term2662 B y)). Qed.
Lemma lem4931964 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (f : A -> B) (y : B) (h1 : term1321 A B t s f y) : (term2663 B y t) = (term2664 A B y f s).
Proof. exact (MK_COMB (@lem4931963 B y) (@lem4931881 A B t s f y h1)). Qed.
Lemma lem4931965 {A B : Type'} (y : B) (f : A -> B) (s : A -> Prop) : (term2664 A B y f s) = (term2624 A B y f s).
Proof. exact (eq_refl (term2664 A B y f s)). Qed.
Lemma lem4931966 {B : Type'} (y : B) (t : B -> Prop) : (term2665 B y t) = (term2665 B y t).
Proof. exact (eq_refl (term2665 B y t)). Qed.
Lemma lem4931967 {A B : Type'} (t : B -> Prop) (y : B) (f : A -> B) (s : A -> Prop) : ((term2663 B y t) = (term2664 A B y f s)) = ((term2663 B y t) = (term2624 A B y f s)).
Proof. exact (MK_COMB (@lem4931966 B y t) (@lem4931965 A B y f s)). Qed.
Lemma lem4931968 {B : Type'} (y : B) (t : B -> Prop) : (term2663 B y t) = (term2593 B y t).
Proof. exact (eq_refl (term2663 B y t)). Qed.
Lemma lem4931969 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4931970 {B : Type'} (y : B) (t : B -> Prop) : (term2665 B y t) = (term2666 B y t).
Proof. exact (MK_COMB (@lem4931969) (@lem4931968 B y t)). Qed.
Lemma lem4931971 {A B : Type'} (y : B) (f : A -> B) (s : A -> Prop) : (term2624 A B y f s) = (term2624 A B y f s).
Proof. exact (eq_refl (term2624 A B y f s)). Qed.
Lemma lem4931972 {A B : Type'} (t : B -> Prop) (y : B) (f : A -> B) (s : A -> Prop) : ((term2663 B y t) = (term2624 A B y f s)) = ((term2593 B y t) = (term2624 A B y f s)).
Proof. exact (MK_COMB (@lem4931970 B y t) (@lem4931971 A B y f s)). Qed.
Lemma lem4931973 {A B : Type'} (t : B -> Prop) (y : B) (f : A -> B) (s : A -> Prop) : ((term2663 B y t) = (term2664 A B y f s)) = ((term2593 B y t) = (term2624 A B y f s)).
Proof. exact (TRANS (@lem4931967 A B t y f s) (@lem4931972 A B t y f s)). Qed.
Lemma lem4931974 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (f : A -> B) (y : B) (h1 : term1321 A B t s f y) : (term2593 B y t) = (term2624 A B y f s).
Proof. exact (EQ_MP (@lem4931973 A B t y f s) (@lem4931964 A B t s f y h1)). Qed.
Lemma lem4932073 {A B : Type'} (_61188 : A) (t : B -> Prop) (s : A -> Prop) (f : A -> B) (y : B) (h1 : term1321 A B t s f y) : term2597 A B s f _61188 y.
Proof. exact (EQ_MP (@lem4931611 A B s f _61188 y) (@lem4931610 A B _61188 t s f y h1)). Qed.
Lemma lem4932311 {A B : Type'} (_61147 : B) (_61148 : A -> Prop) (_61149 : A -> B) (x'''''' : type1448 A B) (h1 : term1835 A B x'''''') : term2667 A B x'''''' _61147 _61148 _61149.
Proof. exact (proj1 (@lem4931495 A B _61147 _61149 _61148 x'''''' h1)). Qed.
Lemma lem4932325 {A B : Type'} (_61147 : B) (_61149 : A -> B) (_61148 : A -> Prop) (x'''''' : type1448 A B) (h1 : term1835 A B x'''''') : term2668 A B x'''''' _61147 _61149 _61148.
Proof. exact (proj2 (@lem4931495 A B _61147 _61149 _61148 x'''''' h1)). Qed.
Lemma lem4933190 {B : Type'} (x : B) (y : B) (z : B) : term886 B x y z.
Proof. exact (@lem21385 B x y z). Qed.
Lemma lem4933288 {A B : Type'} (s : A -> Prop) (f : A -> B) (y : B) (t : B -> Prop) (h1 : term1321 A B t s f y) (h2 : @IN B y t) : term2624 A B y f s.
Proof. exact (EQ_MP (@lem4931974 A B t s f y h1) (@lem4931660 B y t h2)). Qed.
Lemma lem4933289 {A B : Type'} (s : A -> Prop) (f : A -> B) (y : B) (t : B -> Prop) (h1 : term1321 A B t s f y) (h2 : @IN B y t) : term2669 A B y f s.
Proof. exact (fun h0 : term2625 A B y f s => @lem4933288 A B s f y t h1 h2). Qed.
Lemma lem4933291 (p : Prop) : (term888 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem4933292 {A B : Type'} (y : B) (f : A -> B) (s : A -> Prop) : (term2669 A B y f s) = (term2624 A B y f s).
Proof. exact (@lem4933291 (term2624 A B y f s)). Qed.
Lemma lem4933293 {A B : Type'} (s : A -> Prop) (f : A -> B) (y : B) (t : B -> Prop) (h1 : term1321 A B t s f y) (h2 : @IN B y t) : term2624 A B y f s.
Proof. exact (EQ_MP (@lem4933292 A B y f s) (@lem4933289 A B s f y t h1 h2)). Qed.
Lemma lem4933299 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem4933300 {A B : Type'} (x'''''' : type1448 A B) (_61147 : B) (_61149 : A -> B) (_61148 : A -> Prop) : (term2668 A B x'''''' _61147 _61149 _61148) = (term2670 A B x'''''' _61147 _61149 _61148).
Proof. exact (@lem4933299 (term2614 A B x'''''' _61147 _61149 _61148) (term2625 A B _61147 _61149 _61148)). Qed.
Lemma lem4933306 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4933307 {A B : Type'} (x'''''' : type1448 A B) (_61147 : B) (_61149 : A -> B) (_61148 : A -> Prop) : (term2671 A B x'''''' _61147 _61149 _61148) = (term2672 A B x'''''' _61147 _61149 _61148).
Proof. exact (MK_COMB (@lem4933306) (@lem4933300 A B x'''''' _61147 _61149 _61148)). Qed.
Lemma lem4933313 {A B : Type'} (x'''''' : type1448 A B) (_61147 : B) (_61149 : A -> B) (_61148 : A -> Prop) : (term2670 A B x'''''' _61147 _61149 _61148) = (term2670 A B x'''''' _61147 _61149 _61148).
Proof. exact (eq_refl (term2670 A B x'''''' _61147 _61149 _61148)). Qed.
Lemma lem4933314 {A B : Type'} (x'''''' : type1448 A B) (_61147 : B) (_61149 : A -> B) (_61148 : A -> Prop) : ((term2668 A B x'''''' _61147 _61149 _61148) = (term2670 A B x'''''' _61147 _61149 _61148)) = ((term2670 A B x'''''' _61147 _61149 _61148) = (term2670 A B x'''''' _61147 _61149 _61148)).
Proof. exact (MK_COMB (@lem4933307 A B x'''''' _61147 _61149 _61148) (@lem4933313 A B x'''''' _61147 _61149 _61148)). Qed.
Lemma lem4933316 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem20665 A x) (@lem20664 A x)). Qed.
Lemma lem4933317 (x : Prop) : (x = x) = True.
Proof. exact (@lem4933316 Prop x). Qed.
Lemma lem4933318 {A B : Type'} (x'''''' : type1448 A B) (_61147 : B) (_61149 : A -> B) (_61148 : A -> Prop) : ((term2670 A B x'''''' _61147 _61149 _61148) = (term2670 A B x'''''' _61147 _61149 _61148)) = True.
Proof. exact (@lem4933317 (term2670 A B x'''''' _61147 _61149 _61148)). Qed.
Lemma lem4933319 {A B : Type'} (x'''''' : type1448 A B) (_61147 : B) (_61149 : A -> B) (_61148 : A -> Prop) : ((term2668 A B x'''''' _61147 _61149 _61148) = (term2670 A B x'''''' _61147 _61149 _61148)) = True.
Proof. exact (TRANS (@lem4933314 A B x'''''' _61147 _61149 _61148) (@lem4933318 A B x'''''' _61147 _61149 _61148)). Qed.
Lemma lem4933320 {A B : Type'} (x'''''' : type1448 A B) (_61147 : B) (_61149 : A -> B) (_61148 : A -> Prop) : True = ((term2668 A B x'''''' _61147 _61149 _61148) = (term2670 A B x'''''' _61147 _61149 _61148)).
Proof. exact (SYM (@lem4933319 A B x'''''' _61147 _61149 _61148)). Qed.
Lemma lem4933321 {A B : Type'} (x'''''' : type1448 A B) (_61147 : B) (_61149 : A -> B) (_61148 : A -> Prop) : (term2668 A B x'''''' _61147 _61149 _61148) = (term2670 A B x'''''' _61147 _61149 _61148).
Proof. exact (EQ_MP (@lem4933320 A B x'''''' _61147 _61149 _61148) (@lem0)). Qed.
Lemma lem4933322 {A B : Type'} (_61147 : B) (_61149 : A -> B) (_61148 : A -> Prop) (x'''''' : type1448 A B) (h1 : term1835 A B x'''''') : term2670 A B x'''''' _61147 _61149 _61148.
Proof. exact (EQ_MP (@lem4933321 A B x'''''' _61147 _61149 _61148) (@lem4932325 A B _61147 _61149 _61148 x'''''' h1)). Qed.
Lemma lem4933324 (b : Prop) (a : Prop) : (a \/ b) = (term892 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem4933325 {A B : Type'} (x'''''' : type1448 A B) (_61147 : B) (_61149 : A -> B) (_61148 : A -> Prop) : (term2670 A B x'''''' _61147 _61149 _61148) = (term2673 A B x'''''' _61147 _61149 _61148).
Proof. exact (@lem4933324 (term2625 A B _61147 _61149 _61148) (term2614 A B x'''''' _61147 _61149 _61148)). Qed.
Lemma lem4933327 (a : Prop) : (term197 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem4933328 {A B : Type'} (_61147 : B) (_61149 : A -> B) (_61148 : A -> Prop) : (term2674 A B _61147 _61149 _61148) = (term2624 A B _61147 _61149 _61148).
Proof. exact (@lem4933327 (term2624 A B _61147 _61149 _61148)). Qed.
Lemma lem4933329 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4933330 {A B : Type'} (_61147 : B) (_61149 : A -> B) (_61148 : A -> Prop) : (term2675 A B _61147 _61149 _61148) = (term2676 A B _61147 _61149 _61148).
Proof. exact (MK_COMB (@lem4933329) (@lem4933328 A B _61147 _61149 _61148)). Qed.
Lemma lem4933331 {A B : Type'} (x'''''' : type1448 A B) (_61147 : B) (_61149 : A -> B) (_61148 : A -> Prop) : (term2614 A B x'''''' _61147 _61149 _61148) = (term2614 A B x'''''' _61147 _61149 _61148).
Proof. exact (eq_refl (term2614 A B x'''''' _61147 _61149 _61148)). Qed.
Lemma lem4933332 {A B : Type'} (x'''''' : type1448 A B) (_61147 : B) (_61149 : A -> B) (_61148 : A -> Prop) : (term2673 A B x'''''' _61147 _61149 _61148) = (term2677 A B x'''''' _61147 _61149 _61148).
Proof. exact (MK_COMB (@lem4933330 A B _61147 _61149 _61148) (@lem4933331 A B x'''''' _61147 _61149 _61148)). Qed.
Lemma lem4933333 {A B : Type'} (x'''''' : type1448 A B) (_61147 : B) (_61149 : A -> B) (_61148 : A -> Prop) : (term2670 A B x'''''' _61147 _61149 _61148) = (term2677 A B x'''''' _61147 _61149 _61148).
Proof. exact (TRANS (@lem4933325 A B x'''''' _61147 _61149 _61148) (@lem4933332 A B x'''''' _61147 _61149 _61148)). Qed.
Lemma lem4933336 {A B : Type'} (_61147 : B) (_61149 : A -> B) (_61148 : A -> Prop) (x'''''' : type1448 A B) (h1 : term1835 A B x'''''') : term2677 A B x'''''' _61147 _61149 _61148.
Proof. exact (EQ_MP (@lem4933333 A B x'''''' _61147 _61149 _61148) (@lem4933322 A B _61147 _61149 _61148 x'''''' h1)). Qed.
Lemma lem4933337 {A B : Type'} (_61147 : B) (_61149 : A -> B) (_61148 : A -> Prop) (x'''''' : type1448 A B) (h1 : term1835 A B x'''''') : term2677 A B x'''''' _61147 _61149 _61148.
Proof. exact (@lem4933336 A B _61147 _61149 _61148 x'''''' h1). Qed.
Lemma lem4933338 {A B : Type'} (y : B) (f : A -> B) (s : A -> Prop) (x'''''' : type1448 A B) (h1 : term1835 A B x'''''') : term2677 A B x'''''' y f s.
Proof. exact (@lem4933337 A B y f s x'''''' h1). Qed.
Lemma lem4933341 {A B : Type'} (s : A -> Prop) (f : A -> B) (x'''''' : type1448 A B) (y : B) (t : B -> Prop) (h1 : term1321 A B t s f y) (h2 : term1835 A B x'''''') (h3 : @IN B y t) : term2614 A B x'''''' y f s.
Proof. exact (@lem4933338 A B y f s x'''''' h2 (@lem4933293 A B s f y t h1 h3)). Qed.
Lemma lem4933342 {A B : Type'} (s : A -> Prop) (f : A -> B) (x'''''' : type1448 A B) (y : B) (t : B -> Prop) (h1 : term1321 A B t s f y) (h2 : term1835 A B x'''''') (h3 : @IN B y t) : term2678 A B x'''''' y f s.
Proof. exact (fun h0 : term2679 A B x'''''' y f s => @lem4933341 A B s f x'''''' y t h1 h2 h3). Qed.
Lemma lem4933344 (p : Prop) : (term888 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem4933345 {A B : Type'} (x'''''' : type1448 A B) (y : B) (f : A -> B) (s : A -> Prop) : (term2678 A B x'''''' y f s) = (term2614 A B x'''''' y f s).
Proof. exact (@lem4933344 (term2614 A B x'''''' y f s)). Qed.
Lemma lem4933346 {A B : Type'} (s : A -> Prop) (f : A -> B) (x'''''' : type1448 A B) (y : B) (t : B -> Prop) (h1 : term1321 A B t s f y) (h2 : term1835 A B x'''''') (h3 : @IN B y t) : term2614 A B x'''''' y f s.
Proof. exact (EQ_MP (@lem4933345 A B x'''''' y f s) (@lem4933342 A B s f x'''''' y t h1 h2 h3)). Qed.
Lemma lem4933348 {A B : Type'} (s : A -> Prop) (f : A -> B) (y : B) (t : B -> Prop) (h1 : term1321 A B t s f y) (h2 : @IN B y t) : term2624 A B y f s.
Proof. exact (EQ_MP (@lem4931974 A B t s f y h1) (@lem4931660 B y t h2)). Qed.
Lemma lem4933349 {A B : Type'} (s : A -> Prop) (f : A -> B) (y : B) (t : B -> Prop) (h1 : term1321 A B t s f y) (h2 : @IN B y t) : term2669 A B y f s.
Proof. exact (fun h0 : term2625 A B y f s => @lem4933348 A B s f y t h1 h2). Qed.
Lemma lem4933351 (p : Prop) : (term888 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem4933352 {A B : Type'} (y : B) (f : A -> B) (s : A -> Prop) : (term2669 A B y f s) = (term2624 A B y f s).
Proof. exact (@lem4933351 (term2624 A B y f s)). Qed.
Lemma lem4933353 {A B : Type'} (s : A -> Prop) (f : A -> B) (y : B) (t : B -> Prop) (h1 : term1321 A B t s f y) (h2 : @IN B y t) : term2624 A B y f s.
Proof. exact (EQ_MP (@lem4933352 A B y f s) (@lem4933349 A B s f y t h1 h2)). Qed.
Lemma lem4933359 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem4933360 {A B : Type'} (x'''''' : type1448 A B) (_61147 : B) (_61149 : A -> B) (_61148 : A -> Prop) : (term2667 A B x'''''' _61147 _61148 _61149) = (term2680 A B x'''''' _61147 _61149 _61148).
Proof. exact (@lem4933359 (_61147 = (term2617 A B x'''''' _61147 _61148 _61149)) (term2625 A B _61147 _61149 _61148)). Qed.
Lemma lem4933368 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4933369 {A B : Type'} (x'''''' : type1448 A B) (_61147 : B) (_61149 : A -> B) (_61148 : A -> Prop) : (term2681 A B x'''''' _61147 _61148 _61149) = (term2682 A B x'''''' _61147 _61149 _61148).
Proof. exact (MK_COMB (@lem4933368) (@lem4933360 A B x'''''' _61147 _61149 _61148)). Qed.
Lemma lem4933377 {A B : Type'} (x'''''' : type1448 A B) (_61147 : B) (_61149 : A -> B) (_61148 : A -> Prop) : (term2680 A B x'''''' _61147 _61149 _61148) = (term2680 A B x'''''' _61147 _61149 _61148).
Proof. exact (eq_refl (term2680 A B x'''''' _61147 _61149 _61148)). Qed.
Lemma lem4933378 {A B : Type'} (x'''''' : type1448 A B) (_61147 : B) (_61149 : A -> B) (_61148 : A -> Prop) : ((term2667 A B x'''''' _61147 _61148 _61149) = (term2680 A B x'''''' _61147 _61149 _61148)) = ((term2680 A B x'''''' _61147 _61149 _61148) = (term2680 A B x'''''' _61147 _61149 _61148)).
Proof. exact (MK_COMB (@lem4933369 A B x'''''' _61147 _61149 _61148) (@lem4933377 A B x'''''' _61147 _61149 _61148)). Qed.
Lemma lem4933380 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem20665 A x) (@lem20664 A x)). Qed.
Lemma lem4933381 (x : Prop) : (x = x) = True.
Proof. exact (@lem4933380 Prop x). Qed.
Lemma lem4933382 {A B : Type'} (x'''''' : type1448 A B) (_61147 : B) (_61149 : A -> B) (_61148 : A -> Prop) : ((term2680 A B x'''''' _61147 _61149 _61148) = (term2680 A B x'''''' _61147 _61149 _61148)) = True.
Proof. exact (@lem4933381 (term2680 A B x'''''' _61147 _61149 _61148)). Qed.
Lemma lem4933383 {A B : Type'} (x'''''' : type1448 A B) (_61147 : B) (_61149 : A -> B) (_61148 : A -> Prop) : ((term2667 A B x'''''' _61147 _61148 _61149) = (term2680 A B x'''''' _61147 _61149 _61148)) = True.
Proof. exact (TRANS (@lem4933378 A B x'''''' _61147 _61149 _61148) (@lem4933382 A B x'''''' _61147 _61149 _61148)). Qed.
Lemma lem4933384 {A B : Type'} (x'''''' : type1448 A B) (_61147 : B) (_61149 : A -> B) (_61148 : A -> Prop) : True = ((term2667 A B x'''''' _61147 _61148 _61149) = (term2680 A B x'''''' _61147 _61149 _61148)).
Proof. exact (SYM (@lem4933383 A B x'''''' _61147 _61149 _61148)). Qed.
Lemma lem4933385 {A B : Type'} (x'''''' : type1448 A B) (_61147 : B) (_61149 : A -> B) (_61148 : A -> Prop) : (term2667 A B x'''''' _61147 _61148 _61149) = (term2680 A B x'''''' _61147 _61149 _61148).
Proof. exact (EQ_MP (@lem4933384 A B x'''''' _61147 _61149 _61148) (@lem0)). Qed.
Lemma lem4933386 {A B : Type'} (_61147 : B) (_61149 : A -> B) (_61148 : A -> Prop) (x'''''' : type1448 A B) (h1 : term1835 A B x'''''') : term2680 A B x'''''' _61147 _61149 _61148.
Proof. exact (EQ_MP (@lem4933385 A B x'''''' _61147 _61149 _61148) (@lem4932311 A B _61147 _61148 _61149 x'''''' h1)). Qed.
Lemma lem4933388 (b : Prop) (a : Prop) : (a \/ b) = (term892 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem4933389 {A B : Type'} (x'''''' : type1448 A B) (_61147 : B) (_61148 : A -> Prop) (_61149 : A -> B) : (term2680 A B x'''''' _61147 _61149 _61148) = (term2683 A B x'''''' _61147 _61148 _61149).
Proof. exact (@lem4933388 (term2625 A B _61147 _61149 _61148) (_61147 = (term2617 A B x'''''' _61147 _61148 _61149))). Qed.
Lemma lem4933391 (a : Prop) : (term197 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem4933392 {A B : Type'} (_61147 : B) (_61149 : A -> B) (_61148 : A -> Prop) : (term2674 A B _61147 _61149 _61148) = (term2624 A B _61147 _61149 _61148).
Proof. exact (@lem4933391 (term2624 A B _61147 _61149 _61148)). Qed.
Lemma lem4933393 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4933394 {A B : Type'} (_61147 : B) (_61149 : A -> B) (_61148 : A -> Prop) : (term2675 A B _61147 _61149 _61148) = (term2676 A B _61147 _61149 _61148).
Proof. exact (MK_COMB (@lem4933393) (@lem4933392 A B _61147 _61149 _61148)). Qed.
Lemma lem4933395 {A B : Type'} (x'''''' : type1448 A B) (_61147 : B) (_61148 : A -> Prop) (_61149 : A -> B) : (_61147 = (term2617 A B x'''''' _61147 _61148 _61149)) = (_61147 = (term2617 A B x'''''' _61147 _61148 _61149)).
Proof. exact (eq_refl (_61147 = (term2617 A B x'''''' _61147 _61148 _61149))). Qed.
Lemma lem4933396 {A B : Type'} (x'''''' : type1448 A B) (_61147 : B) (_61148 : A -> Prop) (_61149 : A -> B) : (term2683 A B x'''''' _61147 _61148 _61149) = (term2684 A B x'''''' _61147 _61148 _61149).
Proof. exact (MK_COMB (@lem4933394 A B _61147 _61149 _61148) (@lem4933395 A B x'''''' _61147 _61148 _61149)). Qed.
Lemma lem4933397 {A B : Type'} (x'''''' : type1448 A B) (_61147 : B) (_61148 : A -> Prop) (_61149 : A -> B) : (term2680 A B x'''''' _61147 _61149 _61148) = (term2684 A B x'''''' _61147 _61148 _61149).
Proof. exact (TRANS (@lem4933389 A B x'''''' _61147 _61148 _61149) (@lem4933396 A B x'''''' _61147 _61148 _61149)). Qed.
Lemma lem4933400 {A B : Type'} (_61147 : B) (_61148 : A -> Prop) (_61149 : A -> B) (x'''''' : type1448 A B) (h1 : term1835 A B x'''''') : term2684 A B x'''''' _61147 _61148 _61149.
Proof. exact (EQ_MP (@lem4933397 A B x'''''' _61147 _61148 _61149) (@lem4933386 A B _61147 _61149 _61148 x'''''' h1)). Qed.
Lemma lem4933401 {A B : Type'} (_61147 : B) (_61148 : A -> Prop) (_61149 : A -> B) (x'''''' : type1448 A B) (h1 : term1835 A B x'''''') : term2684 A B x'''''' _61147 _61148 _61149.
Proof. exact (@lem4933400 A B _61147 _61148 _61149 x'''''' h1). Qed.
Lemma lem4933402 {A B : Type'} (y : B) (s : A -> Prop) (f : A -> B) (x'''''' : type1448 A B) (h1 : term1835 A B x'''''') : term2684 A B x'''''' y s f.
Proof. exact (@lem4933401 A B y s f x'''''' h1). Qed.
Lemma lem4933405 {A B : Type'} (s : A -> Prop) (f : A -> B) (x'''''' : type1448 A B) (y : B) (t : B -> Prop) (h1 : term1321 A B t s f y) (h2 : term1835 A B x'''''') (h3 : @IN B y t) : y = (term2617 A B x'''''' y s f).
Proof. exact (@lem4933402 A B y s f x'''''' h2 (@lem4933353 A B s f y t h1 h3)). Qed.
Lemma lem4933406 {A B : Type'} (s : A -> Prop) (f : A -> B) (x'''''' : type1448 A B) (y : B) (t : B -> Prop) (h1 : term1321 A B t s f y) (h2 : term1835 A B x'''''') (h3 : @IN B y t) : term2685 A B x'''''' y s f.
Proof. exact (fun h0 : term2686 A B x'''''' y s f => @lem4933405 A B s f x'''''' y t h1 h2 h3). Qed.
Lemma lem4933408 (p : Prop) : (term888 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem4933409 {A B : Type'} (x'''''' : type1448 A B) (y : B) (s : A -> Prop) (f : A -> B) : (term2685 A B x'''''' y s f) = (y = (term2617 A B x'''''' y s f)).
Proof. exact (@lem4933408 (y = (term2617 A B x'''''' y s f))). Qed.
Lemma lem4933410 {A B : Type'} (s : A -> Prop) (f : A -> B) (x'''''' : type1448 A B) (y : B) (t : B -> Prop) (h1 : term1321 A B t s f y) (h2 : term1835 A B x'''''') (h3 : @IN B y t) : y = (term2617 A B x'''''' y s f).
Proof. exact (EQ_MP (@lem4933409 A B x'''''' y s f) (@lem4933406 A B s f x'''''' y t h1 h2 h3)). Qed.
Lemma lem4933412 {B : Type'} (x : B) : x = x.
Proof. exact (@lem21386 B x). Qed.
Lemma lem4933413 {B : Type'} (x : B) : x = x.
Proof. exact (@lem4933412 B x). Qed.
Lemma lem4933414 {B : Type'} (y : B) : y = y.
Proof. exact (@lem4933413 B y). Qed.
Lemma lem4933415 {B : Type'} (y : B) : term2687 B y.
Proof. exact (fun h0 : term2688 B y => @lem4933414 B y). Qed.
Lemma lem4933417 (p : Prop) : (term888 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem4933418 {B : Type'} (y : B) : (term2687 B y) = (y = y).
Proof. exact (@lem4933417 (y = y)). Qed.
Lemma lem4933419 {B : Type'} (y : B) : y = y.
Proof. exact (EQ_MP (@lem4933418 B y) (@lem4933415 B y)). Qed.
Lemma lem4933437 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem4933438 {B : Type'} (y : B) (x : B) (z : B) : (term901 B x y z) = (term902 B y x z).
Proof. exact (@lem4933437 (y = z) (term688 B x z)). Qed.
Lemma lem4933448 {B : Type'} (x : B) (y : B) : (term903 B x y) = (term903 B x y).
Proof. exact (eq_refl (term903 B x y)). Qed.
Lemma lem4933449 {B : Type'} (y : B) (x : B) (z : B) : (term886 B x y z) = (term904 B y x z).
Proof. exact (MK_COMB (@lem4933448 B x y) (@lem4933438 B y x z)). Qed.
Lemma lem4933453 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem4933454 {B : Type'} (y : B) (x : B) (z : B) : (term904 B y x z) = (term905 B y x z).
Proof. exact (@lem4933453 (y = z) (term688 B x y) (term688 B x z)). Qed.
Lemma lem4933476 {B : Type'} (y : B) (x : B) (z : B) : (term886 B x y z) = (term905 B y x z).
Proof. exact (TRANS (@lem4933449 B y x z) (@lem4933454 B y x z)). Qed.
Lemma lem4933477 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4933478 {B : Type'} (y : B) (x : B) (z : B) : (term906 B x y z) = (term907 B y x z).
Proof. exact (MK_COMB (@lem4933477) (@lem4933476 B y x z)). Qed.
Lemma lem4933500 {B : Type'} (y : B) (x : B) (z : B) : (term905 B y x z) = (term905 B y x z).
Proof. exact (eq_refl (term905 B y x z)). Qed.
Lemma lem4933501 {B : Type'} (y : B) (x : B) (z : B) : ((term886 B x y z) = (term905 B y x z)) = ((term905 B y x z) = (term905 B y x z)).
Proof. exact (MK_COMB (@lem4933478 B y x z) (@lem4933500 B y x z)). Qed.
Lemma lem4933503 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem20665 A x) (@lem20664 A x)). Qed.
Lemma lem4933504 (x : Prop) : (x = x) = True.
Proof. exact (@lem4933503 Prop x). Qed.
Lemma lem4933505 {B : Type'} (y : B) (x : B) (z : B) : ((term905 B y x z) = (term905 B y x z)) = True.
Proof. exact (@lem4933504 (term905 B y x z)). Qed.
Lemma lem4933506 {B : Type'} (y : B) (x : B) (z : B) : ((term886 B x y z) = (term905 B y x z)) = True.
Proof. exact (TRANS (@lem4933501 B y x z) (@lem4933505 B y x z)). Qed.
Lemma lem4933507 {B : Type'} (y : B) (x : B) (z : B) : True = ((term886 B x y z) = (term905 B y x z)).
Proof. exact (SYM (@lem4933506 B y x z)). Qed.
Lemma lem4933508 {B : Type'} (y : B) (x : B) (z : B) : (term886 B x y z) = (term905 B y x z).
Proof. exact (EQ_MP (@lem4933507 B y x z) (@lem0)). Qed.
Lemma lem4933509 {B : Type'} (y : B) (x : B) (z : B) : term905 B y x z.
Proof. exact (EQ_MP (@lem4933508 B y x z) (@lem4933190 B x y z)). Qed.
Lemma lem4933511 (b : Prop) (a : Prop) : (a \/ b) = (term892 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem4933512 {B : Type'} (x : B) (y : B) (z : B) : (term905 B y x z) = (term908 B x y z).
Proof. exact (@lem4933511 (term909 B y x z) (y = z)). Qed.
Lemma lem4933514 (a : Prop) (b : Prop) : (term910 a b) = (term911 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem4933515 {B : Type'} (y : B) (x : B) (z : B) : (term912 B y x z) = (term913 B y x z).
Proof. exact (@lem4933514 (term688 B x y) (term688 B x z)). Qed.
Lemma lem4933517 (a : Prop) : (term197 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem4933518 {B : Type'} (x : B) (y : B) : (term839 B x y) = (x = y).
Proof. exact (@lem4933517 (x = y)). Qed.
Lemma lem4933519 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4933520 {B : Type'} (x : B) (y : B) : (term914 B x y) = (term915 B x y).
Proof. exact (MK_COMB (@lem4933519) (@lem4933518 B x y)). Qed.
Lemma lem4933522 (a : Prop) : (term197 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem4933523 {B : Type'} (x : B) (z : B) : (term839 B x z) = (x = z).
Proof. exact (@lem4933522 (x = z)). Qed.
Lemma lem4933524 {B : Type'} (y : B) (x : B) (z : B) : (term913 B y x z) = (term916 B y x z).
Proof. exact (MK_COMB (@lem4933520 B x y) (@lem4933523 B x z)). Qed.
Lemma lem4933525 {B : Type'} (y : B) (x : B) (z : B) : (term912 B y x z) = (term916 B y x z).
Proof. exact (TRANS (@lem4933515 B y x z) (@lem4933524 B y x z)). Qed.
Lemma lem4933526 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4933527 {B : Type'} (y : B) (x : B) (z : B) : (term917 B y x z) = (term918 B y x z).
Proof. exact (MK_COMB (@lem4933526) (@lem4933525 B y x z)). Qed.
Lemma lem4933528 {B : Type'} (y : B) (z : B) : (y = z) = (y = z).
Proof. exact (eq_refl (y = z)). Qed.
Lemma lem4933529 {B : Type'} (x : B) (y : B) (z : B) : (term908 B x y z) = (term919 B x y z).
Proof. exact (MK_COMB (@lem4933527 B y x z) (@lem4933528 B y z)). Qed.
Lemma lem4933530 {B : Type'} (x : B) (y : B) (z : B) : (term905 B y x z) = (term919 B x y z).
Proof. exact (TRANS (@lem4933512 B x y z) (@lem4933529 B x y z)). Qed.
Lemma lem4933532 {A B : Type'} (s : A -> Prop) (f : A -> B) (x'''''' : type1448 A B) (y : B) (t : B -> Prop) (h1 : term1321 A B t s f y) (h2 : term1835 A B x'''''') (h3 : @IN B y t) : term2689 A B x'''''' s f y.
Proof. exact (conj (@lem4933410 A B s f x'''''' y t h1 h2 h3) (@lem4933419 B y)). Qed.
Lemma lem4933534 {B : Type'} (x : B) (y : B) (z : B) : term919 B x y z.
Proof. exact (EQ_MP (@lem4933530 B x y z) (@lem4933509 B y x z)). Qed.
Lemma lem4933535 {B : Type'} (x : B) (y : B) (z : B) : term919 B x y z.
Proof. exact (@lem4933534 B x y z). Qed.
Lemma lem4933536 {A B : Type'} (x'''''' : type1448 A B) (s : A -> Prop) (f : A -> B) (y : B) : term2690 A B x'''''' s f y.
Proof. exact (@lem4933535 B y (term2617 A B x'''''' y s f) y). Qed.
Lemma lem4933539 {A B : Type'} (s : A -> Prop) (f : A -> B) (x'''''' : type1448 A B) (y : B) (t : B -> Prop) (h1 : term1321 A B t s f y) (h2 : term1835 A B x'''''') (h3 : @IN B y t) : (term2617 A B x'''''' y s f) = y.
Proof. exact (@lem4933536 A B x'''''' s f y (@lem4933532 A B s f x'''''' y t h1 h2 h3)). Qed.
Lemma lem4933540 {A B : Type'} (s : A -> Prop) (f : A -> B) (x'''''' : type1448 A B) (y : B) (t : B -> Prop) (h1 : term1321 A B t s f y) (h2 : term1835 A B x'''''') (h3 : @IN B y t) : term2691 A B x'''''' s f y.
Proof. exact (fun h0 : term2692 A B x'''''' s f y => @lem4933539 A B s f x'''''' y t h1 h2 h3). Qed.
Lemma lem4933542 (p : Prop) : (term888 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem4933543 {A B : Type'} (x'''''' : type1448 A B) (s : A -> Prop) (f : A -> B) (y : B) : (term2691 A B x'''''' s f y) = ((term2617 A B x'''''' y s f) = y).
Proof. exact (@lem4933542 ((term2617 A B x'''''' y s f) = y)). Qed.
Lemma lem4933544 {A B : Type'} (s : A -> Prop) (f : A -> B) (x'''''' : type1448 A B) (y : B) (t : B -> Prop) (h1 : term1321 A B t s f y) (h2 : term1835 A B x'''''') (h3 : @IN B y t) : (term2617 A B x'''''' y s f) = y.
Proof. exact (EQ_MP (@lem4933543 A B x'''''' s f y) (@lem4933540 A B s f x'''''' y t h1 h2 h3)). Qed.
Lemma lem4933546 (a : Prop) (b : Prop) : (term1306 a b) = (term1307 a b).
Proof. exact (EQ_MP (@lem20904 a b) (@lem21007 a b)). Qed.
Lemma lem4933547 {A B : Type'} (s : A -> Prop) (f : A -> B) (_61188 : A) (y : B) : (term2597 A B s f _61188 y) = (term2693 A B s f _61188 y).
Proof. exact (@lem4933546 (term2593 A _61188 s) ((@I (A -> B) f _61188) = y)). Qed.
Lemma lem4933549 (p : Prop) : (~ p) = (p -> False).
Proof. exact (EQ_MP (@lem21021 p) (@lem0)). Qed.
Lemma lem4933550 {A B : Type'} (s : A -> Prop) (f : A -> B) (_61188 : A) (y : B) : (term2693 A B s f _61188 y) = (term2694 A B s f _61188 y).
Proof. exact (@lem4933549 (term2695 A B s f _61188 y)). Qed.
Lemma lem4933551 {A B : Type'} (s : A -> Prop) (f : A -> B) (_61188 : A) (y : B) : (term2597 A B s f _61188 y) = (term2694 A B s f _61188 y).
Proof. exact (TRANS (@lem4933547 A B s f _61188 y) (@lem4933550 A B s f _61188 y)). Qed.
Lemma lem4933553 {A B : Type'} (s : A -> Prop) (f : A -> B) (x'''''' : type1448 A B) (y : B) (t : B -> Prop) (h1 : term1321 A B t s f y) (h2 : term1835 A B x'''''') (h3 : @IN B y t) : term2696 A B x'''''' s f y.
Proof. exact (conj (@lem4933346 A B s f x'''''' y t h1 h2 h3) (@lem4933544 A B s f x'''''' y t h1 h2 h3)). Qed.
Lemma lem4933555 {A B : Type'} (_61188 : A) (t : B -> Prop) (s : A -> Prop) (f : A -> B) (y : B) (h1 : term1321 A B t s f y) : term2694 A B s f _61188 y.
Proof. exact (EQ_MP (@lem4933551 A B s f _61188 y) (@lem4932073 A B _61188 t s f y h1)). Qed.
Lemma lem4933556 {A B : Type'} (_61188 : A) (t : B -> Prop) (s : A -> Prop) (f : A -> B) (y : B) (h1 : term1321 A B t s f y) : term2694 A B s f _61188 y.
Proof. exact (@lem4933555 A B _61188 t s f y h1). Qed.
Lemma lem4933557 {A B : Type'} (x'''''' : type1448 A B) (t : B -> Prop) (s : A -> Prop) (f : A -> B) (y : B) (h1 : term1321 A B t s f y) : term2697 A B x'''''' s f y.
Proof. exact (@lem4933556 A B (term2607 A B x'''''' y s f) t s f y h1). Qed.
Lemma lem4933560 {A B : Type'} (s : A -> Prop) (f : A -> B) (x'''''' : type1448 A B) (y : B) (t : B -> Prop) (h1 : term1321 A B t s f y) (h2 : term1835 A B x'''''') (h3 : @IN B y t) : False.
Proof. exact (@lem4933557 A B x'''''' t s f y h1 (@lem4933553 A B s f x'''''' y t h1 h2 h3)). Qed.
Lemma lem4933561 {A B : Type'} (s : A -> Prop) (f : A -> B) (x'''''' : type1448 A B) (y : B) (t : B -> Prop) (h1 : term1321 A B t s f y) (h2 : term1835 A B x'''''') (h3 : @IN B y t) : term987.
Proof. exact (fun h0 : ~ False => @lem4933560 A B s f x'''''' y t h1 h2 h3). Qed.
Lemma lem4933563 (p : Prop) : (term888 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem4933564 : term987 = False.
Proof. exact (@lem4933563 False). Qed.
Lemma lem4933566 {A B : Type'} (s : A -> Prop) (f : A -> B) (x'''''' : type1448 A B) (y : B) (t : B -> Prop) (h1 : term1321 A B t s f y) (h2 : term1835 A B x'''''') (h3 : @IN B y t) : False.
Proof. exact (EQ_MP (@lem4933564) (@lem4933561 A B s f x'''''' y t h1 h2 h3)). Qed.
Lemma lem4933567 {A B : Type'} (s : A -> Prop) (f : A -> B) (x'''''' : type1448 A B) (y : B) (t : B -> Prop) (h1 : term1323 A) (h2 : term1321 A B t s f y) (h3 : term1835 A B x'''''') (h4 : @IN B y t) : False.
Proof. exact (ex_elim (@lem4922436 A h1) (fun x''''''' : type1361 A => fun h0 : term1645 A x''''''' => @lem4933566 A B s f x'''''' y t h2 h3 h4)). Qed.
Lemma lem4933568 {A B : Type'} (s : A -> Prop) (f : A -> B) (y : B) (t : B -> Prop) (h1 : term1323 A) (h2 : term1324 A B) (h3 : term1321 A B t s f y) (h4 : @IN B y t) : False.
Proof. exact (ex_elim (@lem4923328 A B h2) (fun x'''''' : type1448 A B => fun h0 : term1837 A B x'''''' => @lem4933567 A B s f x'''''' y t h1 h3 h0 h4)). Qed.
Lemma lem4933569 {A B : Type'} (s : A -> Prop) (f : A -> B) (y : B) (t : B -> Prop) (h1 : term1323 A) (h2 : term1324 A B) (h3 : term1323 B) (h4 : term1321 A B t s f y) (h5 : @IN B y t) : False.
Proof. exact (ex_elim (@lem4924220 B h3) (fun x''''' : type1361 B => fun h0 : term1645 B x''''' => @lem4933568 A B s f y t h1 h2 h4 h5)). Qed.
Lemma lem4933570 {A B : Type'} (s : A -> Prop) (f : A -> B) (y : B) (t : B -> Prop) (h1 : term1323 A) (h2 : term1324 A B) (h3 : term1323 B) (h4 : term1327 A) (h5 : term1321 A B t s f y) (h6 : @IN B y t) : False.
Proof. exact (ex_elim (@lem4925112 A h4) (fun x'''' : type634 A => fun h0 : term2029 A x'''' => @lem4933569 A B s f y t h1 h2 h3 h5 h6)). Qed.
Lemma lem4933571 {A B : Type'} (s : A -> Prop) (f : A -> B) (y : B) (t : B -> Prop) (h1 : term1323 A) (h2 : term1324 A B) (h3 : term1323 B) (h4 : term1327 A) (h5 : term1326 A B) (h6 : term1321 A B t s f y) (h7 : @IN B y t) : False.
Proof. exact (ex_elim (@lem4926004 A B h5) (fun x''' : type833 A B => fun h0 : term2221 A B x''' => @lem4933570 A B s f y t h1 h2 h3 h4 h6 h7)). Qed.
Lemma lem4933572 {A B : Type'} (s : A -> Prop) (f : A -> B) (y : B) (t : B -> Prop) (h1 : term1323 A) (h2 : term1324 A B) (h3 : term1323 B) (h4 : term1327 A) (h5 : term1326 A B) (h6 : term1325 A) (h7 : term1321 A B t s f y) (h8 : @IN B y t) : False.
Proof. exact (ex_elim (@lem4926896 A h6) (fun x'' : type1572 A => fun h0 : term2415 A x'' => @lem4933571 A B s f y t h1 h2 h3 h4 h5 h7 h8)). Qed.
Lemma lem4933573 {A B : Type'} (s : A -> Prop) (f : A -> B) (y : B) (t : B -> Prop) (h1 : term1323 A) (h2 : term1324 A B) (h3 : term1323 B) (h4 : term1327 A) (h5 : term1322 A) (h6 : term1326 A B) (h7 : term1325 A) (h8 : term1321 A B t s f y) (h9 : @IN B y t) : False.
Proof. exact (ex_elim (@lem4927707 A h5) (fun x' : type638 A => fun h0 : term2591 A x' => @lem4933572 A B s f y t h1 h2 h3 h4 h6 h7 h8 h9)). Qed.
Lemma lem4933574 {A B : Type'} (s : A -> Prop) (f : A -> B) (y : B) (t : B -> Prop) (h1 : term1323 A) (h2 : term1324 A B) (h3 : term1323 B) (h4 : term1327 A) (h5 : term1322 A) (h6 : term1326 A B) (h7 : term1322 B) (h8 : term1325 A) (h9 : term1321 A B t s f y) (h10 : @IN B y t) : False.
Proof. exact (ex_elim (@lem4928518 B h7) (fun x : type638 B => fun h0 : term2591 B x => @lem4933573 A B s f y t h1 h2 h3 h4 h5 h6 h8 h9 h10)). Qed.
Lemma lem4933575 {A B : Type'} (s : A -> Prop) (f : A -> B) (y : B) (t : B -> Prop) (h1 : term1323 A) (h2 : term1324 A B) (h3 : term1323 B) (h4 : term1327 A) (h5 : term1322 A) (h6 : term1326 A B) (h7 : term1322 B) (h8 : term1325 A) (h9 : term1321 A B t s f y) (h10 : @IN B y t) : (@IN B y t) = False.
Proof. exact (prop_ext (fun h11 : @IN B y t => @lem4933574 A B s f y t h1 h2 h3 h4 h5 h6 h7 h8 h9 h10) (fun h11 : False => @lem4921468 B y t h10)). Qed.
Lemma lem4933576 {A B : Type'} (s : A -> Prop) (f : A -> B) (y : B) (t : B -> Prop) (h1 : term1323 A) (h2 : term1324 A B) (h3 : term1323 B) (h4 : term1327 A) (h5 : term1322 A) (h6 : term1326 A B) (h7 : term1322 B) (h8 : term1325 A) (h9 : term1321 A B t s f y) (h10 : @IN B y t) : False.
Proof. exact (EQ_MP (@lem4933575 A B s f y t h1 h2 h3 h4 h5 h6 h7 h8 h9 h10) (@lem4921468 B y t h10)). Qed.
Lemma lem4933577 {A B : Type'} (s : A -> Prop) (f : A -> B) (y : B) (t : B -> Prop) (h1 : term1323 A) (h2 : term1324 A B) (h3 : term1323 B) (h4 : term1327 A) (h5 : term1322 A) (h6 : term1326 A B) (h7 : term1325 A) (h8 : term1321 A B t s f y) (h9 : @IN B y t) : term1332 B.
Proof. exact (fun h0 : term1322 B => @lem4933576 A B s f y t h1 h2 h3 h4 h5 h6 h0 h7 h8 h9). Qed.
Lemma lem4933578 {B : Type'} : (term1332 B) = (term1333 B).
Proof. exact (@lem69 (term1322 B)). Qed.
Lemma lem4933579 {A B : Type'} (s : A -> Prop) (f : A -> B) (y : B) (t : B -> Prop) (h1 : term1323 A) (h2 : term1324 A B) (h3 : term1323 B) (h4 : term1327 A) (h5 : term1322 A) (h6 : term1326 A B) (h7 : term1325 A) (h8 : term1321 A B t s f y) (h9 : @IN B y t) : term1333 B.
Proof. exact (EQ_MP (@lem4933578 B) (@lem4933577 A B s f y t h1 h2 h3 h4 h5 h6 h7 h8 h9)). Qed.
Lemma lem4933580 {A B : Type'} (s : A -> Prop) (f : A -> B) (y : B) (t : B -> Prop) (h1 : term1323 A) (h2 : term1324 A B) (h3 : term1323 B) (h4 : term1327 A) (h5 : term1326 A B) (h6 : term1325 A) (h7 : term1321 A B t s f y) (h8 : @IN B y t) : term1336 A B.
Proof. exact (fun h0 : term1322 A => @lem4933579 A B s f y t h1 h2 h3 h4 h0 h5 h6 h7 h8). Qed.
Lemma lem4933581 {A B : Type'} (s : A -> Prop) (f : A -> B) (y : B) (t : B -> Prop) (h1 : term1323 A) (h2 : term1324 A B) (h3 : term1323 B) (h4 : term1327 A) (h5 : term1326 A B) (h6 : term1321 A B t s f y) (h7 : @IN B y t) : term1339 A B.
Proof. exact (fun h0 : term1325 A => @lem4933580 A B s f y t h1 h2 h3 h4 h5 h0 h6 h7). Qed.
Lemma lem4933582 {A B : Type'} (s : A -> Prop) (f : A -> B) (y : B) (t : B -> Prop) (h1 : term1323 A) (h2 : term1324 A B) (h3 : term1323 B) (h4 : term1327 A) (h5 : term1321 A B t s f y) (h6 : @IN B y t) : term1342 A B.
Proof. exact (fun h0 : term1326 A B => @lem4933581 A B s f y t h1 h2 h3 h4 h0 h5 h6). Qed.
Lemma lem4933583 {A B : Type'} (s : A -> Prop) (f : A -> B) (y : B) (t : B -> Prop) (h1 : term1323 A) (h2 : term1324 A B) (h3 : term1323 B) (h4 : term1321 A B t s f y) (h5 : @IN B y t) : term1345 A B.
Proof. exact (fun h0 : term1327 A => @lem4933582 A B s f y t h1 h2 h3 h0 h4 h5). Qed.
Lemma lem4933584 {A B : Type'} (s : A -> Prop) (f : A -> B) (y : B) (t : B -> Prop) (h1 : term1323 A) (h2 : term1324 A B) (h3 : term1321 A B t s f y) (h4 : @IN B y t) : term1348 A B.
Proof. exact (fun h0 : term1323 B => @lem4933583 A B s f y t h1 h2 h0 h3 h4). Qed.
Lemma lem4933585 {A B : Type'} (s : A -> Prop) (f : A -> B) (y : B) (t : B -> Prop) (h1 : term1323 A) (h2 : term1321 A B t s f y) (h3 : @IN B y t) : term1351 A B.
Proof. exact (fun h0 : term1324 A B => @lem4933584 A B s f y t h1 h0 h2 h3). Qed.
Lemma lem4933586 {A B : Type'} (s : A -> Prop) (f : A -> B) (y : B) (t : B -> Prop) (h1 : term1321 A B t s f y) (h2 : @IN B y t) : term1353 A B.
Proof. exact (fun h0 : term1323 A => @lem4933585 A B s f y t h0 h1 h2). Qed.
Lemma lem4933587 {A B : Type'} (s : A -> Prop) (f : A -> B) (y : B) (t : B -> Prop) (h1 : @IN B y t) : term1356 A B t s f y.
Proof. exact (fun h0 : term1321 A B t s f y => @lem4933586 A B s f y t h0 h1). Qed.
Lemma lem4933588 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (f : A -> B) (y : B) : term1358 A B t s f y.
Proof. exact (fun h0 : @IN B y t => @lem4933587 A B s f y t h0). Qed.
Lemma lem4933589 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (f : A -> B) (y : B) : term1361 A B t s f y.
Proof. exact (fun h0 : term696 A B s f => @lem4933588 A B t s f y). Qed.
Lemma lem4933590 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (f : A -> B) (y : B) : term1363 A B t s f y.
Proof. exact (fun h0 : term692 A B f s t => @lem4933589 A B t s f y). Qed.
Lemma lem4933591 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (f : A -> B) (y : B) : term1365 A B t s f y.
Proof. exact (fun h0 : (@CARD A s) = (@CARD B t) => @lem4933590 A B t s f y). Qed.
Lemma lem4933592 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (f : A -> B) (y : B) : term1367 A B t s f y.
Proof. exact (fun h0 : @FINITE B t => @lem4933591 A B t s f y). Qed.
Lemma lem4933593 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (f : A -> B) (y : B) : term1368 A B t s f y.
Proof. exact (fun h0 : @FINITE A s => @lem4933592 A B t s f y). Qed.
Lemma lem4933598 {A B : Type'} (s : A -> Prop) (f : A -> B) (y : B) : term1372 A B s f y.
Proof. exact (fun t : B -> Prop => @lem4933593 A B t s f y). Qed.
Lemma lem4933603 {A B : Type'} (f : A -> B) (y : B) : term1376 A B f y.
Proof. exact (fun s : A -> Prop => @lem4933598 A B s f y). Qed.
Lemma lem4933608 {A B : Type'} (y : B) : term1380 A B y.
Proof. exact (fun f : A -> B => @lem4933603 A B f y). Qed.
Lemma lem4933613 {A B : Type'} : term1384 A B.
Proof. exact (fun y : B => @lem4933608 A B y). Qed.
Lemma lem4933614 {A B : Type'} : term1383 A B.
Proof. exact (EQ_MP (@lem4921341 A B) (@lem4933613 A B)). Qed.
Lemma lem4933615 {A B : Type'} (y : B) : term2698 A B y.
Proof. exact (@lem4933614 A B y). Qed.
Lemma lem4933616 {A B : Type'} (y : B) : (term2698 A B y) = (term1379 A B y).
Proof. exact (eq_refl (term2698 A B y)). Qed.
Lemma lem4933617 {A B : Type'} (y : B) : term1379 A B y.
Proof. exact (EQ_MP (@lem4933616 A B y) (@lem4933615 A B y)). Qed.
Lemma lem4933618 {A B : Type'} (y : B) (f : A -> B) : term2699 A B y f.
Proof. exact (@lem4933617 A B y f). Qed.
Lemma lem4933619 {A B : Type'} (f : A -> B) (y : B) : (term2699 A B y f) = (term1375 A B f y).
Proof. exact (eq_refl (term2699 A B y f)). Qed.
Lemma lem4933620 {A B : Type'} (f : A -> B) (y : B) : term1375 A B f y.
Proof. exact (EQ_MP (@lem4933619 A B f y) (@lem4933618 A B y f)). Qed.
Lemma lem4933621 {A B : Type'} (f : A -> B) (y : B) (s : A -> Prop) : term2700 A B f y s.
Proof. exact (@lem4933620 A B f y s). Qed.
Lemma lem4933622 {A B : Type'} (s : A -> Prop) (f : A -> B) (y : B) : (term2700 A B f y s) = (term1371 A B s f y).
Proof. exact (eq_refl (term2700 A B f y s)). Qed.
Lemma lem4933623 {A B : Type'} (s : A -> Prop) (f : A -> B) (y : B) : term1371 A B s f y.
Proof. exact (EQ_MP (@lem4933622 A B s f y) (@lem4933621 A B f y s)). Qed.
Lemma lem4933624 {A B : Type'} (s : A -> Prop) (f : A -> B) (y : B) (t : B -> Prop) : term2701 A B s f y t.
Proof. exact (@lem4933623 A B s f y t). Qed.
Lemma lem4933625 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (f : A -> B) (y : B) : (term2701 A B s f y t) = (term1328 A B t s f y).
Proof. exact (eq_refl (term2701 A B s f y t)). Qed.
Lemma lem4933626 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (f : A -> B) (y : B) : term1328 A B t s f y.
Proof. exact (EQ_MP (@lem4933625 A B t s f y) (@lem4933624 A B s f y t)). Qed.
Lemma lem4933628 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (f : A -> B) (y : B) : term1328 A B t s f y.
Proof. exact (@lem4920212 A B t s f y (@lem4933626 A B t s f y)). Qed.
Lemma lem4933629 {A B : Type'} (t : B -> Prop) (f : A -> B) (y : B) (s : A -> Prop) (h1 : @FINITE A s) : term1366 A B t s f y.
Proof. exact (@lem4933628 A B t s f y (@lem4914388 A s h1)). Qed.
Lemma lem4933630 {A B : Type'} (f : A -> B) (y : B) (s : A -> Prop) (t : B -> Prop) (h1 : @FINITE A s) (h2 : @FINITE B t) : term1364 A B t s f y.
Proof. exact (@lem4933629 A B t f y s h1 (@lem4914390 B t h2)). Qed.
Lemma lem4933631 {A B : Type'} (f : A -> B) (y : B) (s : A -> Prop) (t : B -> Prop) (h1 : @FINITE A s) (h2 : @FINITE B t) (h3 : (@CARD A s) = (@CARD B t)) : term1362 A B t s f y.
Proof. exact (@lem4933630 A B f y s t h1 h2 (@lem4914392 A B s t h3)). Qed.
Lemma lem4933632 {A B : Type'} (y : B) (f : A -> B) (s : A -> Prop) (t : B -> Prop) (h1 : @FINITE A s) (h2 : @FINITE B t) (h3 : (@CARD A s) = (@CARD B t)) (h4 : term692 A B f s t) : term1360 A B t s f y.
Proof. exact (@lem4933631 A B f y s t h1 h2 h3 (@lem4914391 A B f s t h4)). Qed.
Lemma lem4933633 {A B : Type'} (y : B) (f : A -> B) (s : A -> Prop) (t : B -> Prop) (h1 : term696 A B s f) (h2 : @FINITE A s) (h3 : @FINITE B t) (h4 : (@CARD A s) = (@CARD B t)) (h5 : term692 A B f s t) : term1357 A B t s f y.
Proof. exact (@lem4933632 A B y f s t h2 h3 h4 h5 (@lem4914399 A B s f h1)). Qed.
Lemma lem4933634 {A B : Type'} (y : B) (f : A -> B) (s : A -> Prop) (t : B -> Prop) (h1 : term696 A B s f) (h2 : @FINITE A s) (h3 : @FINITE B t) (h4 : (@CARD A s) = (@CARD B t)) (h5 : @IN B y t) (h6 : term692 A B f s t) : term1355 A B t s f y.
Proof. exact (@lem4933633 A B y f s t h1 h2 h3 h4 h6 (@lem4914400 B y t h5)). Qed.
Lemma lem4933635 {A B : Type'} (y : B) (f : A -> B) (s : A -> Prop) (t : B -> Prop) (h1 : term696 A B s f) (h2 : @FINITE A s) (h3 : @FINITE B t) (h4 : term1321 A B t s f y) (h5 : (@CARD A s) = (@CARD B t)) (h6 : @IN B y t) (h7 : term692 A B f s t) : term1352 A B.
Proof. exact (@lem4933634 A B y f s t h1 h2 h3 h5 h6 h7 (@lem4920183 A B t s f y h4)). Qed.
Lemma lem4933636 {A B : Type'} (y : B) (f : A -> B) (s : A -> Prop) (t : B -> Prop) (h1 : term696 A B s f) (h2 : @FINITE A s) (h3 : @FINITE B t) (h4 : term1321 A B t s f y) (h5 : (@CARD A s) = (@CARD B t)) (h6 : @IN B y t) (h7 : term692 A B f s t) : term1350 A B.
Proof. exact (@lem4933635 A B y f s t h1 h2 h3 h4 h5 h6 h7 (@lem4920187 A)). Qed.
Lemma lem4933637 {A B : Type'} (y : B) (f : A -> B) (s : A -> Prop) (t : B -> Prop) (h1 : term696 A B s f) (h2 : @FINITE A s) (h3 : @FINITE B t) (h4 : term1321 A B t s f y) (h5 : (@CARD A s) = (@CARD B t)) (h6 : @IN B y t) (h7 : term692 A B f s t) : term1347 A B.
Proof. exact (@lem4933636 A B y f s t h1 h2 h3 h4 h5 h6 h7 (@lem4920188 A B)). Qed.
Lemma lem4933638 {A B : Type'} (y : B) (f : A -> B) (s : A -> Prop) (t : B -> Prop) (h1 : term696 A B s f) (h2 : @FINITE A s) (h3 : @FINITE B t) (h4 : term1321 A B t s f y) (h5 : (@CARD A s) = (@CARD B t)) (h6 : @IN B y t) (h7 : term692 A B f s t) : term1344 A B.
Proof. exact (@lem4933637 A B y f s t h1 h2 h3 h4 h5 h6 h7 (@lem4920196 B)). Qed.
Lemma lem4933639 {A B : Type'} (y : B) (f : A -> B) (s : A -> Prop) (t : B -> Prop) (h1 : term696 A B s f) (h2 : @FINITE A s) (h3 : @FINITE B t) (h4 : term1321 A B t s f y) (h5 : (@CARD A s) = (@CARD B t)) (h6 : @IN B y t) (h7 : term692 A B f s t) : term1341 A B.
Proof. exact (@lem4933638 A B y f s t h1 h2 h3 h4 h5 h6 h7 (@lem4920194 A)). Qed.
Lemma lem4933640 {A B : Type'} (y : B) (f : A -> B) (s : A -> Prop) (t : B -> Prop) (h1 : term696 A B s f) (h2 : @FINITE A s) (h3 : @FINITE B t) (h4 : term1321 A B t s f y) (h5 : (@CARD A s) = (@CARD B t)) (h6 : @IN B y t) (h7 : term692 A B f s t) : term1338 A B.
Proof. exact (@lem4933639 A B y f s t h1 h2 h3 h4 h5 h6 h7 (@lem4920193 A B)). Qed.
Lemma lem4933641 {A B : Type'} (y : B) (f : A -> B) (s : A -> Prop) (t : B -> Prop) (h1 : term696 A B s f) (h2 : @FINITE A s) (h3 : @FINITE B t) (h4 : term1321 A B t s f y) (h5 : (@CARD A s) = (@CARD B t)) (h6 : @IN B y t) (h7 : term692 A B f s t) : term1335 A B.
Proof. exact (@lem4933640 A B y f s t h1 h2 h3 h4 h5 h6 h7 (@lem4920190 A)). Qed.
Lemma lem4933642 {A B : Type'} (y : B) (f : A -> B) (s : A -> Prop) (t : B -> Prop) (h1 : term696 A B s f) (h2 : @FINITE A s) (h3 : @FINITE B t) (h4 : term1321 A B t s f y) (h5 : (@CARD A s) = (@CARD B t)) (h6 : @IN B y t) (h7 : term692 A B f s t) : term1332 B.
Proof. exact (@lem4933641 A B y f s t h1 h2 h3 h4 h5 h6 h7 (@lem4920185 A)). Qed.
Lemma lem4933643 {A B : Type'} (y : B) (f : A -> B) (s : A -> Prop) (t : B -> Prop) (h1 : term696 A B s f) (h2 : @FINITE A s) (h3 : @FINITE B t) (h4 : term1321 A B t s f y) (h5 : (@CARD A s) = (@CARD B t)) (h6 : @IN B y t) (h7 : term692 A B f s t) : False.
Proof. exact (@lem4933642 A B y f s t h1 h2 h3 h4 h5 h6 h7 (@lem4920184 B)). Qed.
Lemma lem4933644 {A B : Type'} (y : B) (f : A -> B) (s : A -> Prop) (t : B -> Prop) (h1 : term696 A B s f) (h2 : @FINITE A s) (h3 : @FINITE B t) (h4 : term1321 A B t s f y) (h5 : (@CARD A s) = (@CARD B t)) (h6 : @IN B y t) (h7 : term692 A B f s t) : (term1321 A B t s f y) = False.
Proof. exact (prop_ext (fun h8 : term1321 A B t s f y => @lem4933643 A B y f s t h1 h2 h3 h4 h5 h6 h7) (fun h8 : False => @lem4920183 A B t s f y h4)). Qed.
Lemma lem4933645 {A B : Type'} (y : B) (f : A -> B) (s : A -> Prop) (t : B -> Prop) (h1 : term696 A B s f) (h2 : @FINITE A s) (h3 : @FINITE B t) (h4 : term1321 A B t s f y) (h5 : (@CARD A s) = (@CARD B t)) (h6 : @IN B y t) (h7 : term692 A B f s t) : False.
Proof. exact (EQ_MP (@lem4933644 A B y f s t h1 h2 h3 h4 h5 h6 h7) (@lem4920183 A B t s f y h4)). Qed.
Lemma lem4933646 {A B : Type'} (y : B) (f : A -> B) (s : A -> Prop) (t : B -> Prop) (h1 : term696 A B s f) (h2 : @FINITE A s) (h3 : @FINITE B t) (h4 : (@CARD A s) = (@CARD B t)) (h5 : @IN B y t) (h6 : term692 A B f s t) : term1320 A B t s f y.
Proof. exact (fun h0 : term1321 A B t s f y => @lem4933645 A B y f s t h1 h2 h3 h0 h4 h5 h6). Qed.
Lemma lem4933647 {A B : Type'} (y : B) (f : A -> B) (s : A -> Prop) (t : B -> Prop) (h1 : term696 A B s f) (h2 : @FINITE A s) (h3 : @FINITE B t) (h4 : (@CARD A s) = (@CARD B t)) (h5 : @IN B y t) (h6 : term692 A B f s t) : term1319 A B t s f y.
Proof. exact (EQ_MP (@lem4920182 A B t s f y) (@lem4933646 A B y f s t h1 h2 h3 h4 h5 h6)). Qed.
Lemma lem4933649 (p : Prop) : p = (term735 p).
Proof. exact (EQ_MP (@lem10578 p) (@lem10597 p)). Qed.
Lemma lem4933650 {A B : Type'} (f : A -> B) (s : A -> Prop) (t : B -> Prop) : ((@IMAGE A B f s) = t) = (term2702 A B f s t).
Proof. exact (@lem4933649 ((@IMAGE A B f s) = t)). Qed.
Lemma lem4933651 {A B : Type'} (f : A -> B) (s : A -> Prop) (t : B -> Prop) : (term2702 A B f s t) = ((@IMAGE A B f s) = t).
Proof. exact (SYM (@lem4933650 A B f s t)). Qed.
Lemma lem4933652 {A B : Type'} (f : A -> B) (s : A -> Prop) (t : B -> Prop) (h1 : term2703 A B f s t) : term2703 A B f s t.
Proof. exact (h1). Qed.
Lemma lem4933653 {A : Type'} : term2704 A.
Proof. exact (@lem3900203 A). Qed.
Lemma lem4933654 {B : Type'} : term2704 B.
Proof. exact (@lem3900203 B). Qed.
Lemma lem4933659 {A B : Type'} : term2705 A B.
Proof. exact (@lem3996358 A B). Qed.
Lemma lem4933660 {B : Type'} : term2706 B.
Proof. exact (@lem3996358 B B). Qed.
Lemma lem4933661 {A : Type'} : term2707 A.
Proof. exact (@lem3996358 A nat). Qed.
Lemma lem4933663 {A : Type'} : term2706 A.
Proof. exact (@lem3996358 A A). Qed.
Lemma lem4933664 {A B : Type'} : term2708 A B.
Proof. exact (@lem3996358 A (B -> Prop)). Qed.
Lemma lem4933665 {A : Type'} : term2709 A.
Proof. exact (@lem3996358 A (A -> Prop)). Qed.
Lemma lem4933666 {B : Type'} : term2710 B.
Proof. exact (@lem3996358 nat B). Qed.
Lemma lem4933669 {B : Type'} : term2711 B.
Proof. exact (@lem3996358 (B -> Prop) B). Qed.
Lemma lem4933670 {A B : Type'} : term2712 A B.
Proof. exact (@lem3996358 (A -> Prop) B). Qed.
Lemma lem4933680 {A B : Type'} (y : B) (f : A -> B) (s : A -> Prop) (t : B -> Prop) (h1 : term2713 A B y f s t) : term2713 A B y f s t.
Proof. exact (h1). Qed.
Lemma lem4933681 {A B : Type'} (y : B) (f : A -> B) (s : A -> Prop) (t : B -> Prop) : term2714 A B y f s t.
Proof. exact (fun h0 : term2713 A B y f s t => @lem4933680 A B y f s t h0). Qed.
Lemma lem4933682 {A B : Type'} (y : B) (f : A -> B) (s : A -> Prop) (t : B -> Prop) (h1 : term2714 A B y f s t) : term2714 A B y f s t.
Proof. exact (h1). Qed.
Lemma lem4933683 {A B : Type'} (y : B) (f : A -> B) (s : A -> Prop) (t : B -> Prop) (h1 : term2713 A B y f s t) : term2713 A B y f s t.
Proof. exact (h1). Qed.
Lemma lem4933684 {A B : Type'} (y : B) (f : A -> B) (s : A -> Prop) (t : B -> Prop) (h1 : term2713 A B y f s t) (h2 : term2714 A B y f s t) : term2713 A B y f s t.
Proof. exact (@lem4933682 A B y f s t h2 (@lem4933683 A B y f s t h1)). Qed.
Lemma lem4933685 {A B : Type'} (y : B) (f : A -> B) (s : A -> Prop) (t : B -> Prop) (h1 : term2713 A B y f s t) : term2715 A B y f s t.
Proof. exact (fun h0 : term2714 A B y f s t => @lem4933684 A B y f s t h1 h0). Qed.
Lemma lem4933686 {A B : Type'} (y : B) (f : A -> B) (s : A -> Prop) (t : B -> Prop) (h1 : term2714 A B y f s t) : term2714 A B y f s t.
Proof. exact (h1). Qed.
Lemma lem4933687 {A B : Type'} (y : B) (f : A -> B) (s : A -> Prop) (t : B -> Prop) (h1 : term2713 A B y f s t) (h2 : term2714 A B y f s t) : term2713 A B y f s t.
Proof. exact (@lem4933685 A B y f s t h1 (@lem4933686 A B y f s t h2)). Qed.
Lemma lem4933688 {A B : Type'} (y : B) (f : A -> B) (s : A -> Prop) (t : B -> Prop) (h1 : term2714 A B y f s t) : term2714 A B y f s t.
Proof. exact (fun h0 : term2713 A B y f s t => @lem4933687 A B y f s t h0 h1). Qed.
Lemma lem4933689 {A B : Type'} (y : B) (f : A -> B) (s : A -> Prop) (t : B -> Prop) : term2716 A B y f s t.
Proof. exact (fun h0 : term2714 A B y f s t => @lem4933688 A B y f s t h0). Qed.
Lemma lem4933692 {A B : Type'} (y : B) (f : A -> B) (s : A -> Prop) (t : B -> Prop) : term2714 A B y f s t.
Proof. exact (@lem4933689 A B y f s t (@lem4933681 A B y f s t)). Qed.
Lemma lem4933693 {A B : Type'} (y : B) (f : A -> B) (s : A -> Prop) (t : B -> Prop) : term2714 A B y f s t.
Proof. exact (@lem4933692 A B y f s t). Qed.
Lemma lem4934007 (t : Prop) : (t -> False) = (~ t).
Proof. exact (proj2 (@lem16474 t)). Qed.
Lemma lem4934008 {B : Type'} : (term2717 B) = (term2718 B).
Proof. exact (@lem4934007 (term2704 B)). Qed.
Lemma lem4934023 {A : Type'} : (term2719 A) = (term2719 A).
Proof. exact (eq_refl (term2719 A)). Qed.
Lemma lem4934024 {A B : Type'} : (term2720 A B) = (term2721 A B).
Proof. exact (MK_COMB (@lem4934023 A) (@lem4934008 B)). Qed.
Lemma lem4934027 {B : Type'} : (term2722 B) = (term2722 B).
Proof. exact (eq_refl (term2722 B)). Qed.
Lemma lem4934028 {A B : Type'} : (term2723 A B) = (term2724 A B).
Proof. exact (MK_COMB (@lem4934027 B) (@lem4934024 A B)). Qed.
Lemma lem4934031 {B : Type'} : (term2725 B) = (term2725 B).
Proof. exact (eq_refl (term2725 B)). Qed.
Lemma lem4934032 {A B : Type'} : (term2726 A B) = (term2727 A B).
Proof. exact (MK_COMB (@lem4934031 B) (@lem4934028 A B)). Qed.
Lemma lem4934035 {A B : Type'} : (term2728 A B) = (term2728 A B).
Proof. exact (eq_refl (term2728 A B)). Qed.
Lemma lem4934036 {A B : Type'} : (term2729 A B) = (term2730 A B).
Proof. exact (MK_COMB (@lem4934035 A B) (@lem4934032 A B)). Qed.
Lemma lem4934039 {B : Type'} : (term2731 B) = (term2731 B).
Proof. exact (eq_refl (term2731 B)). Qed.
Lemma lem4934040 {A B : Type'} : (term2732 A B) = (term2733 A B).
Proof. exact (MK_COMB (@lem4934039 B) (@lem4934036 A B)). Qed.
Lemma lem4934043 {A : Type'} : (term2734 A) = (term2734 A).
Proof. exact (eq_refl (term2734 A)). Qed.
Lemma lem4934044 {A B : Type'} : (term2735 A B) = (term2736 A B).
Proof. exact (MK_COMB (@lem4934043 A) (@lem4934040 A B)). Qed.
Lemma lem4934047 {A B : Type'} : (term2737 A B) = (term2737 A B).
Proof. exact (eq_refl (term2737 A B)). Qed.
Lemma lem4934048 {A B : Type'} : (term2738 A B) = (term2739 A B).
Proof. exact (MK_COMB (@lem4934047 A B) (@lem4934044 A B)). Qed.
Lemma lem4934051 {A : Type'} : (term2740 A) = (term2740 A).
Proof. exact (eq_refl (term2740 A)). Qed.
Lemma lem4934052 {A B : Type'} : (term2741 A B) = (term2742 A B).
Proof. exact (MK_COMB (@lem4934051 A) (@lem4934048 A B)). Qed.
Lemma lem4934055 {A B : Type'} : (term2743 A B) = (term2743 A B).
Proof. exact (eq_refl (term2743 A B)). Qed.
Lemma lem4934056 {A B : Type'} : (term2744 A B) = (term2745 A B).
Proof. exact (MK_COMB (@lem4934055 A B) (@lem4934052 A B)). Qed.
Lemma lem4934059 {A : Type'} : (term2731 A) = (term2731 A).
Proof. exact (eq_refl (term2731 A)). Qed.
Lemma lem4934060 {A B : Type'} : (term2746 A B) = (term2747 A B).
Proof. exact (MK_COMB (@lem4934059 A) (@lem4934056 A B)). Qed.
Lemma lem4934063 {A B : Type'} (f : A -> B) (s : A -> Prop) (t : B -> Prop) : (term2748 A B f s t) = (term2748 A B f s t).
Proof. exact (eq_refl (term2748 A B f s t)). Qed.
Lemma lem4934064 {A B : Type'} (f : A -> B) (s : A -> Prop) (t : B -> Prop) : (term2749 A B f s t) = (term2750 A B f s t).
Proof. exact (MK_COMB (@lem4934063 A B f s t) (@lem4934060 A B)). Qed.
Lemma lem4934067 {B : Type'} (y : B) (t : B -> Prop) : (term729 B y t) = (term729 B y t).
Proof. exact (eq_refl (term729 B y t)). Qed.
Lemma lem4934068 {A B : Type'} (y : B) (f : A -> B) (s : A -> Prop) (t : B -> Prop) : (term2751 A B y f s t) = (term2752 A B y f s t).
Proof. exact (MK_COMB (@lem4934067 B y t) (@lem4934064 A B f s t)). Qed.
Lemma lem4934071 {A B : Type'} (s : A -> Prop) (f : A -> B) : (term1359 A B s f) = (term1359 A B s f).
Proof. exact (eq_refl (term1359 A B s f)). Qed.
Lemma lem4934072 {A B : Type'} (y : B) (f : A -> B) (s : A -> Prop) (t : B -> Prop) : (term2753 A B y f s t) = (term2754 A B y f s t).
Proof. exact (MK_COMB (@lem4934071 A B s f) (@lem4934068 A B y f s t)). Qed.
Lemma lem4934075 {A B : Type'} (f : A -> B) (s : A -> Prop) (t : B -> Prop) : (term756 A B f s t) = (term756 A B f s t).
Proof. exact (eq_refl (term756 A B f s t)). Qed.
Lemma lem4934076 {A B : Type'} (y : B) (f : A -> B) (s : A -> Prop) (t : B -> Prop) : (term2755 A B y f s t) = (term2756 A B y f s t).
Proof. exact (MK_COMB (@lem4934075 A B f s t) (@lem4934072 A B y f s t)). Qed.
Lemma lem4934079 {A B : Type'} (s : A -> Prop) (t : B -> Prop) : (term759 A B s t) = (term759 A B s t).
Proof. exact (eq_refl (term759 A B s t)). Qed.
Lemma lem4934080 {A B : Type'} (y : B) (f : A -> B) (s : A -> Prop) (t : B -> Prop) : (term2757 A B y f s t) = (term2758 A B y f s t).
Proof. exact (MK_COMB (@lem4934079 A B s t) (@lem4934076 A B y f s t)). Qed.
Lemma lem4934083 {B : Type'} (t : B -> Prop) : (term762 B t) = (term762 B t).
Proof. exact (eq_refl (term762 B t)). Qed.
Lemma lem4934084 {A B : Type'} (y : B) (f : A -> B) (s : A -> Prop) (t : B -> Prop) : (term2759 A B y f s t) = (term2760 A B y f s t).
Proof. exact (MK_COMB (@lem4934083 B t) (@lem4934080 A B y f s t)). Qed.
Lemma lem4934087 {A : Type'} (s : A -> Prop) : (term762 A s) = (term762 A s).
Proof. exact (eq_refl (term762 A s)). Qed.
Lemma lem4934088 {A B : Type'} (y : B) (f : A -> B) (s : A -> Prop) (t : B -> Prop) : (term2713 A B y f s t) = (term2761 A B y f s t).
Proof. exact (MK_COMB (@lem4934087 A s) (@lem4934084 A B y f s t)). Qed.
Lemma lem4934091 {A B : Type'} (f : A -> B) (s : A -> Prop) (t : B -> Prop) : (term2762 A B f s t) = (term2763 A B f s t).
Proof. exact (fun_ext (fun y : B => @lem4934088 A B y f s t)). Qed.
Lemma lem4934092 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4934093 {A B : Type'} (f : A -> B) (s : A -> Prop) (t : B -> Prop) : (term2764 A B f s t) = (term2765 A B f s t).
Proof. exact (MK_COMB (@lem4934092 B) (@lem4934091 A B f s t)). Qed.
Lemma lem4934098 {A B : Type'} (s : A -> Prop) (t : B -> Prop) : (term2766 A B s t) = (term2767 A B s t).
Proof. exact (fun_ext (fun f : A -> B => @lem4934093 A B f s t)). Qed.
Lemma lem4934099 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem4934100 {A B : Type'} (s : A -> Prop) (t : B -> Prop) : (term2768 A B s t) = (term2769 A B s t).
Proof. exact (MK_COMB (@lem4934099 A B) (@lem4934098 A B s t)). Qed.
Lemma lem4934105 {A B : Type'} (t : B -> Prop) : (term2770 A B t) = (term2771 A B t).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4934100 A B s t)). Qed.
Lemma lem4934106 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4934107 {A B : Type'} (t : B -> Prop) : (term2772 A B t) = (term2773 A B t).
Proof. exact (MK_COMB (@lem4934106 A) (@lem4934105 A B t)). Qed.
Lemma lem4934112 {A B : Type'} : (term2774 A B) = (term2775 A B).
Proof. exact (fun_ext (fun t : B -> Prop => @lem4934107 A B t)). Qed.
Lemma lem4934113 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4934122 {A B : Type'} : (term2776 A B) = (term2777 A B).
Proof. exact (MK_COMB (@lem4934113 B) (@lem4934112 A B)). Qed.
Lemma lem4934135 {B : Type'} (a : B -> Prop) (b : B -> Prop) : (term2778 B a b) = (term2778 B a b).
Proof. exact (eq_refl (term2778 B a b)). Qed.
Lemma lem4934136 {B : Type'} (a : B -> Prop) : (term2779 B a) = (term2779 B a).
Proof. exact (fun_ext (fun b : B -> Prop => @lem4934135 B a b)). Qed.
Lemma lem4934137 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4934138 {B : Type'} (a : B -> Prop) : (term2780 B a) = (term2780 B a).
Proof. exact (MK_COMB (@lem4934137 B) (@lem4934136 B a)). Qed.
Lemma lem4934139 {B : Type'} : (term2781 B) = (term2781 B).
Proof. exact (fun_ext (fun a : B -> Prop => @lem4934138 B a)). Qed.
Lemma lem4934140 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4934141 {B : Type'} : (term2704 B) = (term2704 B).
Proof. exact (MK_COMB (@lem4934140 B) (@lem4934139 B)). Qed.
Lemma lem4934142 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem4934143 {B : Type'} : (term2718 B) = (term2718 B).
Proof. exact (MK_COMB (@lem4934142) (@lem4934141 B)). Qed.
Lemma lem4934156 {A : Type'} (a : A -> Prop) (b : A -> Prop) : (term2778 A a b) = (term2778 A a b).
Proof. exact (eq_refl (term2778 A a b)). Qed.
Lemma lem4934157 {A : Type'} (a : A -> Prop) : (term2779 A a) = (term2779 A a).
Proof. exact (fun_ext (fun b : A -> Prop => @lem4934156 A a b)). Qed.
Lemma lem4934158 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4934159 {A : Type'} (a : A -> Prop) : (term2780 A a) = (term2780 A a).
Proof. exact (MK_COMB (@lem4934158 A) (@lem4934157 A a)). Qed.
Lemma lem4934160 {A : Type'} : (term2781 A) = (term2781 A).
Proof. exact (fun_ext (fun a : A -> Prop => @lem4934159 A a)). Qed.
Lemma lem4934161 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4934162 {A : Type'} : (term2704 A) = (term2704 A).
Proof. exact (MK_COMB (@lem4934161 A) (@lem4934160 A)). Qed.
Lemma lem4934163 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4934164 {A : Type'} : (term2719 A) = (term2719 A).
Proof. exact (MK_COMB (@lem4934163) (@lem4934162 A)). Qed.
Lemma lem4934165 {A B : Type'} : (term2721 A B) = (term2721 A B).
Proof. exact (MK_COMB (@lem4934164 A) (@lem4934143 B)). Qed.
Lemma lem4934166 {B : Type'} (f : nat -> B) (s : nat -> Prop) : ((term2782 B f s) = (@CARD nat s)) = ((term2782 B f s) = (@CARD nat s)).
Proof. exact (eq_refl ((term2782 B f s) = (@CARD nat s))). Qed.
Lemma lem4934167 (s : nat -> Prop) : (@FINITE nat s) = (@FINITE nat s).
Proof. exact (eq_refl (@FINITE nat s)). Qed.
Lemma lem4934180 {B : Type'} (s : nat -> Prop) (f : nat -> B) (x : nat) (y : nat) : (term2783 B s f x y) = (term2783 B s f x y).
Proof. exact (eq_refl (term2783 B s f x y)). Qed.
Lemma lem4934181 {B : Type'} (s : nat -> Prop) (f : nat -> B) (x : nat) : (term2784 B s f x) = (term2784 B s f x).
Proof. exact (fun_ext (fun y : nat => @lem4934180 B s f x y)). Qed.
Lemma lem4934182 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4934183 {B : Type'} (s : nat -> Prop) (f : nat -> B) (x : nat) : (term2785 B s f x) = (term2785 B s f x).
Proof. exact (MK_COMB (@lem4934182) (@lem4934181 B s f x)). Qed.
Lemma lem4934184 {B : Type'} (s : nat -> Prop) (f : nat -> B) : (term2786 B s f) = (term2786 B s f).
Proof. exact (fun_ext (fun x : nat => @lem4934183 B s f x)). Qed.
Lemma lem4934185 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4934186 {B : Type'} (s : nat -> Prop) (f : nat -> B) : (term2787 B s f) = (term2787 B s f).
Proof. exact (MK_COMB (@lem4934185) (@lem4934184 B s f)). Qed.
Lemma lem4934187 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4934188 {B : Type'} (s : nat -> Prop) (f : nat -> B) : (term2788 B s f) = (term2788 B s f).
Proof. exact (MK_COMB (@lem4934187) (@lem4934186 B s f)). Qed.
Lemma lem4934189 {B : Type'} (f : nat -> B) (s : nat -> Prop) : (term2789 B f s) = (term2789 B f s).
Proof. exact (MK_COMB (@lem4934188 B s f) (@lem4934167 s)). Qed.
Lemma lem4934190 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4934191 {B : Type'} (f : nat -> B) (s : nat -> Prop) : (term2790 B f s) = (term2790 B f s).
Proof. exact (MK_COMB (@lem4934190) (@lem4934189 B f s)). Qed.
Lemma lem4934192 {B : Type'} (f : nat -> B) (s : nat -> Prop) : (term2791 B f s) = (term2791 B f s).
Proof. exact (MK_COMB (@lem4934191 B f s) (@lem4934166 B f s)). Qed.
Lemma lem4934193 {B : Type'} (f : nat -> B) : (term2792 B f) = (term2792 B f).
Proof. exact (fun_ext (fun s : nat -> Prop => @lem4934192 B f s)). Qed.
Lemma lem4934194 : (@all (nat -> Prop)) = (@all (nat -> Prop)).
Proof. exact (eq_refl (@all (nat -> Prop))). Qed.
Lemma lem4934195 {B : Type'} (f : nat -> B) : (term2793 B f) = (term2793 B f).
Proof. exact (MK_COMB (@lem4934194) (@lem4934193 B f)). Qed.
Lemma lem4934196 {B : Type'} : (term2794 B) = (term2794 B).
Proof. exact (fun_ext (fun f : nat -> B => @lem4934195 B f)). Qed.
Lemma lem4934197 {B : Type'} : (@all (nat -> B)) = (@all (nat -> B)).
Proof. exact (eq_refl (@all (nat -> B))). Qed.
Lemma lem4934198 {B : Type'} : (term2710 B) = (term2710 B).
Proof. exact (MK_COMB (@lem4934197 B) (@lem4934196 B)). Qed.
Lemma lem4934199 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4934200 {B : Type'} : (term2722 B) = (term2722 B).
Proof. exact (MK_COMB (@lem4934199) (@lem4934198 B)). Qed.
Lemma lem4934201 {A B : Type'} : (term2724 A B) = (term2724 A B).
Proof. exact (MK_COMB (@lem4934200 B) (@lem4934165 A B)). Qed.
Lemma lem4934202 {B : Type'} (f : type684 B) (s : type686 B) : ((term2795 B f s) = (@CARD (B -> Prop) s)) = ((term2795 B f s) = (@CARD (B -> Prop) s)).
Proof. exact (eq_refl ((term2795 B f s) = (@CARD (B -> Prop) s))). Qed.
Lemma lem4934203 {B : Type'} (s : type686 B) : (@FINITE (B -> Prop) s) = (@FINITE (B -> Prop) s).
Proof. exact (eq_refl (@FINITE (B -> Prop) s)). Qed.
Lemma lem4934216 {B : Type'} (s : type686 B) (f : type684 B) (x : B -> Prop) (y : B -> Prop) : (term2796 B s f x y) = (term2796 B s f x y).
Proof. exact (eq_refl (term2796 B s f x y)). Qed.
Lemma lem4934217 {B : Type'} (s : type686 B) (f : type684 B) (x : B -> Prop) : (term2797 B s f x) = (term2797 B s f x).
Proof. exact (fun_ext (fun y : B -> Prop => @lem4934216 B s f x y)). Qed.
Lemma lem4934218 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4934219 {B : Type'} (s : type686 B) (f : type684 B) (x : B -> Prop) : (term2798 B s f x) = (term2798 B s f x).
Proof. exact (MK_COMB (@lem4934218 B) (@lem4934217 B s f x)). Qed.
Lemma lem4934220 {B : Type'} (s : type686 B) (f : type684 B) : (term2799 B s f) = (term2799 B s f).
Proof. exact (fun_ext (fun x : B -> Prop => @lem4934219 B s f x)). Qed.
Lemma lem4934221 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4934222 {B : Type'} (s : type686 B) (f : type684 B) : (term2800 B s f) = (term2800 B s f).
Proof. exact (MK_COMB (@lem4934221 B) (@lem4934220 B s f)). Qed.
Lemma lem4934223 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4934224 {B : Type'} (s : type686 B) (f : type684 B) : (term2801 B s f) = (term2801 B s f).
Proof. exact (MK_COMB (@lem4934223) (@lem4934222 B s f)). Qed.
Lemma lem4934225 {B : Type'} (f : type684 B) (s : type686 B) : (term2802 B f s) = (term2802 B f s).
Proof. exact (MK_COMB (@lem4934224 B s f) (@lem4934203 B s)). Qed.
Lemma lem4934226 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4934227 {B : Type'} (f : type684 B) (s : type686 B) : (term2803 B f s) = (term2803 B f s).
Proof. exact (MK_COMB (@lem4934226) (@lem4934225 B f s)). Qed.
Lemma lem4934228 {B : Type'} (f : type684 B) (s : type686 B) : (term2804 B f s) = (term2804 B f s).
Proof. exact (MK_COMB (@lem4934227 B f s) (@lem4934202 B f s)). Qed.
Lemma lem4934229 {B : Type'} (f : type684 B) : (term2805 B f) = (term2805 B f).
Proof. exact (fun_ext (fun s : type686 B => @lem4934228 B f s)). Qed.
Lemma lem4934230 {B : Type'} : (@all ((B -> Prop) -> Prop)) = (@all ((B -> Prop) -> Prop)).
Proof. exact (eq_refl (@all ((B -> Prop) -> Prop))). Qed.
Lemma lem4934231 {B : Type'} (f : type684 B) : (term2806 B f) = (term2806 B f).
Proof. exact (MK_COMB (@lem4934230 B) (@lem4934229 B f)). Qed.
Lemma lem4934232 {B : Type'} : (term2807 B) = (term2807 B).
Proof. exact (fun_ext (fun f : type684 B => @lem4934231 B f)). Qed.
Lemma lem4934233 {B : Type'} : (@all ((B -> Prop) -> B)) = (@all ((B -> Prop) -> B)).
Proof. exact (eq_refl (@all ((B -> Prop) -> B))). Qed.
Lemma lem4934234 {B : Type'} : (term2711 B) = (term2711 B).
Proof. exact (MK_COMB (@lem4934233 B) (@lem4934232 B)). Qed.
Lemma lem4934235 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4934236 {B : Type'} : (term2725 B) = (term2725 B).
Proof. exact (MK_COMB (@lem4934235) (@lem4934234 B)). Qed.
Lemma lem4934237 {A B : Type'} : (term2727 A B) = (term2727 A B).
Proof. exact (MK_COMB (@lem4934236 B) (@lem4934201 A B)). Qed.
Lemma lem4934238 {A B : Type'} (f : type685 A B) (s : type686 A) : ((term2808 A B f s) = (@CARD (A -> Prop) s)) = ((term2808 A B f s) = (@CARD (A -> Prop) s)).
Proof. exact (eq_refl ((term2808 A B f s) = (@CARD (A -> Prop) s))). Qed.
Lemma lem4934239 {A : Type'} (s : type686 A) : (@FINITE (A -> Prop) s) = (@FINITE (A -> Prop) s).
Proof. exact (eq_refl (@FINITE (A -> Prop) s)). Qed.
Lemma lem4934252 {A B : Type'} (s : type686 A) (f : type685 A B) (x : A -> Prop) (y : A -> Prop) : (term2809 A B s f x y) = (term2809 A B s f x y).
Proof. exact (eq_refl (term2809 A B s f x y)). Qed.
Lemma lem4934253 {A B : Type'} (s : type686 A) (f : type685 A B) (x : A -> Prop) : (term2810 A B s f x) = (term2810 A B s f x).
Proof. exact (fun_ext (fun y : A -> Prop => @lem4934252 A B s f x y)). Qed.
Lemma lem4934254 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4934255 {A B : Type'} (s : type686 A) (f : type685 A B) (x : A -> Prop) : (term2811 A B s f x) = (term2811 A B s f x).
Proof. exact (MK_COMB (@lem4934254 A) (@lem4934253 A B s f x)). Qed.
Lemma lem4934256 {A B : Type'} (s : type686 A) (f : type685 A B) : (term2812 A B s f) = (term2812 A B s f).
Proof. exact (fun_ext (fun x : A -> Prop => @lem4934255 A B s f x)). Qed.
Lemma lem4934257 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4934258 {A B : Type'} (s : type686 A) (f : type685 A B) : (term2813 A B s f) = (term2813 A B s f).
Proof. exact (MK_COMB (@lem4934257 A) (@lem4934256 A B s f)). Qed.
Lemma lem4934259 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4934260 {A B : Type'} (s : type686 A) (f : type685 A B) : (term2814 A B s f) = (term2814 A B s f).
Proof. exact (MK_COMB (@lem4934259) (@lem4934258 A B s f)). Qed.
Lemma lem4934261 {A B : Type'} (f : type685 A B) (s : type686 A) : (term2815 A B f s) = (term2815 A B f s).
Proof. exact (MK_COMB (@lem4934260 A B s f) (@lem4934239 A s)). Qed.
Lemma lem4934262 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4934263 {A B : Type'} (f : type685 A B) (s : type686 A) : (term2816 A B f s) = (term2816 A B f s).
Proof. exact (MK_COMB (@lem4934262) (@lem4934261 A B f s)). Qed.
Lemma lem4934264 {A B : Type'} (f : type685 A B) (s : type686 A) : (term2817 A B f s) = (term2817 A B f s).
Proof. exact (MK_COMB (@lem4934263 A B f s) (@lem4934238 A B f s)). Qed.
Lemma lem4934265 {A B : Type'} (f : type685 A B) : (term2818 A B f) = (term2818 A B f).
Proof. exact (fun_ext (fun s : type686 A => @lem4934264 A B f s)). Qed.
Lemma lem4934266 {A : Type'} : (@all ((A -> Prop) -> Prop)) = (@all ((A -> Prop) -> Prop)).
Proof. exact (eq_refl (@all ((A -> Prop) -> Prop))). Qed.
Lemma lem4934267 {A B : Type'} (f : type685 A B) : (term2819 A B f) = (term2819 A B f).
Proof. exact (MK_COMB (@lem4934266 A) (@lem4934265 A B f)). Qed.
Lemma lem4934268 {A B : Type'} : (term2820 A B) = (term2820 A B).
Proof. exact (fun_ext (fun f : type685 A B => @lem4934267 A B f)). Qed.
Lemma lem4934269 {A B : Type'} : (@all ((A -> Prop) -> B)) = (@all ((A -> Prop) -> B)).
Proof. exact (eq_refl (@all ((A -> Prop) -> B))). Qed.
Lemma lem4934270 {A B : Type'} : (term2712 A B) = (term2712 A B).
Proof. exact (MK_COMB (@lem4934269 A B) (@lem4934268 A B)). Qed.
Lemma lem4934271 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4934272 {A B : Type'} : (term2728 A B) = (term2728 A B).
Proof. exact (MK_COMB (@lem4934271) (@lem4934270 A B)). Qed.
Lemma lem4934273 {A B : Type'} : (term2730 A B) = (term2730 A B).
Proof. exact (MK_COMB (@lem4934272 A B) (@lem4934237 A B)). Qed.
Lemma lem4934274 {B : Type'} (f : B -> B) (s : B -> Prop) : ((term2821 B f s) = (@CARD B s)) = ((term2821 B f s) = (@CARD B s)).
Proof. exact (eq_refl ((term2821 B f s) = (@CARD B s))). Qed.
Lemma lem4934275 {B : Type'} (s : B -> Prop) : (@FINITE B s) = (@FINITE B s).
Proof. exact (eq_refl (@FINITE B s)). Qed.
Lemma lem4934288 {B : Type'} (s : B -> Prop) (f : B -> B) (x : B) (y : B) : (term2822 B s f x y) = (term2822 B s f x y).
Proof. exact (eq_refl (term2822 B s f x y)). Qed.
Lemma lem4934289 {B : Type'} (s : B -> Prop) (f : B -> B) (x : B) : (term2823 B s f x) = (term2823 B s f x).
Proof. exact (fun_ext (fun y : B => @lem4934288 B s f x y)). Qed.
Lemma lem4934290 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4934291 {B : Type'} (s : B -> Prop) (f : B -> B) (x : B) : (term2824 B s f x) = (term2824 B s f x).
Proof. exact (MK_COMB (@lem4934290 B) (@lem4934289 B s f x)). Qed.
Lemma lem4934292 {B : Type'} (s : B -> Prop) (f : B -> B) : (term2825 B s f) = (term2825 B s f).
Proof. exact (fun_ext (fun x : B => @lem4934291 B s f x)). Qed.
Lemma lem4934293 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4934294 {B : Type'} (s : B -> Prop) (f : B -> B) : (term2826 B s f) = (term2826 B s f).
Proof. exact (MK_COMB (@lem4934293 B) (@lem4934292 B s f)). Qed.
Lemma lem4934295 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4934296 {B : Type'} (s : B -> Prop) (f : B -> B) : (term2827 B s f) = (term2827 B s f).
Proof. exact (MK_COMB (@lem4934295) (@lem4934294 B s f)). Qed.
Lemma lem4934297 {B : Type'} (f : B -> B) (s : B -> Prop) : (term2828 B f s) = (term2828 B f s).
Proof. exact (MK_COMB (@lem4934296 B s f) (@lem4934275 B s)). Qed.
Lemma lem4934298 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4934299 {B : Type'} (f : B -> B) (s : B -> Prop) : (term2829 B f s) = (term2829 B f s).
Proof. exact (MK_COMB (@lem4934298) (@lem4934297 B f s)). Qed.
Lemma lem4934300 {B : Type'} (f : B -> B) (s : B -> Prop) : (term2830 B f s) = (term2830 B f s).
Proof. exact (MK_COMB (@lem4934299 B f s) (@lem4934274 B f s)). Qed.
Lemma lem4934301 {B : Type'} (f : B -> B) : (term2831 B f) = (term2831 B f).
Proof. exact (fun_ext (fun s : B -> Prop => @lem4934300 B f s)). Qed.
Lemma lem4934302 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4934303 {B : Type'} (f : B -> B) : (term2832 B f) = (term2832 B f).
Proof. exact (MK_COMB (@lem4934302 B) (@lem4934301 B f)). Qed.
Lemma lem4934304 {B : Type'} : (term2833 B) = (term2833 B).
Proof. exact (fun_ext (fun f : B -> B => @lem4934303 B f)). Qed.
Lemma lem4934305 {B : Type'} : (@all (B -> B)) = (@all (B -> B)).
Proof. exact (eq_refl (@all (B -> B))). Qed.
Lemma lem4934306 {B : Type'} : (term2706 B) = (term2706 B).
Proof. exact (MK_COMB (@lem4934305 B) (@lem4934304 B)). Qed.
Lemma lem4934307 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4934308 {B : Type'} : (term2731 B) = (term2731 B).
Proof. exact (MK_COMB (@lem4934307) (@lem4934306 B)). Qed.
Lemma lem4934309 {A B : Type'} : (term2733 A B) = (term2733 A B).
Proof. exact (MK_COMB (@lem4934308 B) (@lem4934273 A B)). Qed.
Lemma lem4934310 {A : Type'} (f : A -> nat) (s : A -> Prop) : ((term2834 A f s) = (@CARD A s)) = ((term2834 A f s) = (@CARD A s)).
Proof. exact (eq_refl ((term2834 A f s) = (@CARD A s))). Qed.
Lemma lem4934311 {A : Type'} (s : A -> Prop) : (@FINITE A s) = (@FINITE A s).
Proof. exact (eq_refl (@FINITE A s)). Qed.
Lemma lem4934324 {A : Type'} (s : A -> Prop) (f : A -> nat) (x : A) (y : A) : (term2835 A s f x y) = (term2835 A s f x y).
Proof. exact (eq_refl (term2835 A s f x y)). Qed.
Lemma lem4934325 {A : Type'} (s : A -> Prop) (f : A -> nat) (x : A) : (term2836 A s f x) = (term2836 A s f x).
Proof. exact (fun_ext (fun y : A => @lem4934324 A s f x y)). Qed.
Lemma lem4934326 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4934327 {A : Type'} (s : A -> Prop) (f : A -> nat) (x : A) : (term2837 A s f x) = (term2837 A s f x).
Proof. exact (MK_COMB (@lem4934326 A) (@lem4934325 A s f x)). Qed.
Lemma lem4934328 {A : Type'} (s : A -> Prop) (f : A -> nat) : (term2838 A s f) = (term2838 A s f).
Proof. exact (fun_ext (fun x : A => @lem4934327 A s f x)). Qed.
Lemma lem4934329 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4934330 {A : Type'} (s : A -> Prop) (f : A -> nat) : (term2839 A s f) = (term2839 A s f).
Proof. exact (MK_COMB (@lem4934329 A) (@lem4934328 A s f)). Qed.
Lemma lem4934331 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4934332 {A : Type'} (s : A -> Prop) (f : A -> nat) : (term2840 A s f) = (term2840 A s f).
Proof. exact (MK_COMB (@lem4934331) (@lem4934330 A s f)). Qed.
Lemma lem4934333 {A : Type'} (f : A -> nat) (s : A -> Prop) : (term2841 A f s) = (term2841 A f s).
Proof. exact (MK_COMB (@lem4934332 A s f) (@lem4934311 A s)). Qed.
Lemma lem4934334 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4934335 {A : Type'} (f : A -> nat) (s : A -> Prop) : (term2842 A f s) = (term2842 A f s).
Proof. exact (MK_COMB (@lem4934334) (@lem4934333 A f s)). Qed.
Lemma lem4934336 {A : Type'} (f : A -> nat) (s : A -> Prop) : (term2843 A f s) = (term2843 A f s).
Proof. exact (MK_COMB (@lem4934335 A f s) (@lem4934310 A f s)). Qed.
Lemma lem4934337 {A : Type'} (f : A -> nat) : (term2844 A f) = (term2844 A f).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4934336 A f s)). Qed.
Lemma lem4934338 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4934339 {A : Type'} (f : A -> nat) : (term2845 A f) = (term2845 A f).
Proof. exact (MK_COMB (@lem4934338 A) (@lem4934337 A f)). Qed.
Lemma lem4934340 {A : Type'} : (term2846 A) = (term2846 A).
Proof. exact (fun_ext (fun f : A -> nat => @lem4934339 A f)). Qed.
Lemma lem4934341 {A : Type'} : (@all (A -> nat)) = (@all (A -> nat)).
Proof. exact (eq_refl (@all (A -> nat))). Qed.
Lemma lem4934342 {A : Type'} : (term2707 A) = (term2707 A).
Proof. exact (MK_COMB (@lem4934341 A) (@lem4934340 A)). Qed.
Lemma lem4934343 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4934344 {A : Type'} : (term2734 A) = (term2734 A).
Proof. exact (MK_COMB (@lem4934343) (@lem4934342 A)). Qed.
Lemma lem4934345 {A B : Type'} : (term2736 A B) = (term2736 A B).
Proof. exact (MK_COMB (@lem4934344 A) (@lem4934309 A B)). Qed.
Lemma lem4934346 {A B : Type'} (f : type1413 A B) (s : A -> Prop) : ((term2847 A B f s) = (@CARD A s)) = ((term2847 A B f s) = (@CARD A s)).
Proof. exact (eq_refl ((term2847 A B f s) = (@CARD A s))). Qed.
Lemma lem4934347 {A : Type'} (s : A -> Prop) : (@FINITE A s) = (@FINITE A s).
Proof. exact (eq_refl (@FINITE A s)). Qed.
Lemma lem4934360 {A B : Type'} (s : A -> Prop) (f : type1413 A B) (x : A) (y : A) : (term2848 A B s f x y) = (term2848 A B s f x y).
Proof. exact (eq_refl (term2848 A B s f x y)). Qed.
Lemma lem4934361 {A B : Type'} (s : A -> Prop) (f : type1413 A B) (x : A) : (term2849 A B s f x) = (term2849 A B s f x).
Proof. exact (fun_ext (fun y : A => @lem4934360 A B s f x y)). Qed.
Lemma lem4934362 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4934363 {A B : Type'} (s : A -> Prop) (f : type1413 A B) (x : A) : (term2850 A B s f x) = (term2850 A B s f x).
Proof. exact (MK_COMB (@lem4934362 A) (@lem4934361 A B s f x)). Qed.
Lemma lem4934364 {A B : Type'} (s : A -> Prop) (f : type1413 A B) : (term2851 A B s f) = (term2851 A B s f).
Proof. exact (fun_ext (fun x : A => @lem4934363 A B s f x)). Qed.
Lemma lem4934365 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4934366 {A B : Type'} (s : A -> Prop) (f : type1413 A B) : (term2852 A B s f) = (term2852 A B s f).
Proof. exact (MK_COMB (@lem4934365 A) (@lem4934364 A B s f)). Qed.
Lemma lem4934367 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4934368 {A B : Type'} (s : A -> Prop) (f : type1413 A B) : (term2853 A B s f) = (term2853 A B s f).
Proof. exact (MK_COMB (@lem4934367) (@lem4934366 A B s f)). Qed.
Lemma lem4934369 {A B : Type'} (f : type1413 A B) (s : A -> Prop) : (term2854 A B f s) = (term2854 A B f s).
Proof. exact (MK_COMB (@lem4934368 A B s f) (@lem4934347 A s)). Qed.
Lemma lem4934370 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4934371 {A B : Type'} (f : type1413 A B) (s : A -> Prop) : (term2855 A B f s) = (term2855 A B f s).
Proof. exact (MK_COMB (@lem4934370) (@lem4934369 A B f s)). Qed.
Lemma lem4934372 {A B : Type'} (f : type1413 A B) (s : A -> Prop) : (term2856 A B f s) = (term2856 A B f s).
Proof. exact (MK_COMB (@lem4934371 A B f s) (@lem4934346 A B f s)). Qed.
Lemma lem4934373 {A B : Type'} (f : type1413 A B) : (term2857 A B f) = (term2857 A B f).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4934372 A B f s)). Qed.
Lemma lem4934374 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4934375 {A B : Type'} (f : type1413 A B) : (term2858 A B f) = (term2858 A B f).
Proof. exact (MK_COMB (@lem4934374 A) (@lem4934373 A B f)). Qed.
Lemma lem4934376 {A B : Type'} : (term2859 A B) = (term2859 A B).
Proof. exact (fun_ext (fun f : type1413 A B => @lem4934375 A B f)). Qed.
Lemma lem4934377 {A B : Type'} : (@all (A -> B -> Prop)) = (@all (A -> B -> Prop)).
Proof. exact (eq_refl (@all (A -> B -> Prop))). Qed.
Lemma lem4934378 {A B : Type'} : (term2708 A B) = (term2708 A B).
Proof. exact (MK_COMB (@lem4934377 A B) (@lem4934376 A B)). Qed.
Lemma lem4934379 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4934380 {A B : Type'} : (term2737 A B) = (term2737 A B).
Proof. exact (MK_COMB (@lem4934379) (@lem4934378 A B)). Qed.
Lemma lem4934381 {A B : Type'} : (term2739 A B) = (term2739 A B).
Proof. exact (MK_COMB (@lem4934380 A B) (@lem4934345 A B)). Qed.
Lemma lem4934382 {A : Type'} (f : type1402 A) (s : A -> Prop) : ((term2860 A f s) = (@CARD A s)) = ((term2860 A f s) = (@CARD A s)).
Proof. exact (eq_refl ((term2860 A f s) = (@CARD A s))). Qed.
Lemma lem4934383 {A : Type'} (s : A -> Prop) : (@FINITE A s) = (@FINITE A s).
Proof. exact (eq_refl (@FINITE A s)). Qed.
Lemma lem4934396 {A : Type'} (s : A -> Prop) (f : type1402 A) (x : A) (y : A) : (term2861 A s f x y) = (term2861 A s f x y).
Proof. exact (eq_refl (term2861 A s f x y)). Qed.
Lemma lem4934397 {A : Type'} (s : A -> Prop) (f : type1402 A) (x : A) : (term2862 A s f x) = (term2862 A s f x).
Proof. exact (fun_ext (fun y : A => @lem4934396 A s f x y)). Qed.
Lemma lem4934398 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4934399 {A : Type'} (s : A -> Prop) (f : type1402 A) (x : A) : (term2863 A s f x) = (term2863 A s f x).
Proof. exact (MK_COMB (@lem4934398 A) (@lem4934397 A s f x)). Qed.
Lemma lem4934400 {A : Type'} (s : A -> Prop) (f : type1402 A) : (term2864 A s f) = (term2864 A s f).
Proof. exact (fun_ext (fun x : A => @lem4934399 A s f x)). Qed.
Lemma lem4934401 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4934402 {A : Type'} (s : A -> Prop) (f : type1402 A) : (term2865 A s f) = (term2865 A s f).
Proof. exact (MK_COMB (@lem4934401 A) (@lem4934400 A s f)). Qed.
Lemma lem4934403 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4934404 {A : Type'} (s : A -> Prop) (f : type1402 A) : (term2866 A s f) = (term2866 A s f).
Proof. exact (MK_COMB (@lem4934403) (@lem4934402 A s f)). Qed.
Lemma lem4934405 {A : Type'} (f : type1402 A) (s : A -> Prop) : (term2867 A f s) = (term2867 A f s).
Proof. exact (MK_COMB (@lem4934404 A s f) (@lem4934383 A s)). Qed.
Lemma lem4934406 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4934407 {A : Type'} (f : type1402 A) (s : A -> Prop) : (term2868 A f s) = (term2868 A f s).
Proof. exact (MK_COMB (@lem4934406) (@lem4934405 A f s)). Qed.
Lemma lem4934408 {A : Type'} (f : type1402 A) (s : A -> Prop) : (term2869 A f s) = (term2869 A f s).
Proof. exact (MK_COMB (@lem4934407 A f s) (@lem4934382 A f s)). Qed.
Lemma lem4934409 {A : Type'} (f : type1402 A) : (term2870 A f) = (term2870 A f).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4934408 A f s)). Qed.
Lemma lem4934410 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4934411 {A : Type'} (f : type1402 A) : (term2871 A f) = (term2871 A f).
Proof. exact (MK_COMB (@lem4934410 A) (@lem4934409 A f)). Qed.
Lemma lem4934412 {A : Type'} : (term2872 A) = (term2872 A).
Proof. exact (fun_ext (fun f : type1402 A => @lem4934411 A f)). Qed.
Lemma lem4934413 {A : Type'} : (@all (A -> A -> Prop)) = (@all (A -> A -> Prop)).
Proof. exact (eq_refl (@all (A -> A -> Prop))). Qed.
Lemma lem4934414 {A : Type'} : (term2709 A) = (term2709 A).
Proof. exact (MK_COMB (@lem4934413 A) (@lem4934412 A)). Qed.
Lemma lem4934415 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4934416 {A : Type'} : (term2740 A) = (term2740 A).
Proof. exact (MK_COMB (@lem4934415) (@lem4934414 A)). Qed.
Lemma lem4934417 {A B : Type'} : (term2742 A B) = (term2742 A B).
Proof. exact (MK_COMB (@lem4934416 A) (@lem4934381 A B)). Qed.
Lemma lem4934418 {A B : Type'} (f : A -> B) (s : A -> Prop) : ((term2873 A B f s) = (@CARD A s)) = ((term2873 A B f s) = (@CARD A s)).
Proof. exact (eq_refl ((term2873 A B f s) = (@CARD A s))). Qed.
Lemma lem4934419 {A : Type'} (s : A -> Prop) : (@FINITE A s) = (@FINITE A s).
Proof. exact (eq_refl (@FINITE A s)). Qed.
Lemma lem4934432 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) (y : A) : (term1438 A B s f x y) = (term1438 A B s f x y).
Proof. exact (eq_refl (term1438 A B s f x y)). Qed.
Lemma lem4934433 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) : (term1439 A B s f x) = (term1439 A B s f x).
Proof. exact (fun_ext (fun y : A => @lem4934432 A B s f x y)). Qed.
Lemma lem4934434 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4934435 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) : (term1440 A B s f x) = (term1440 A B s f x).
Proof. exact (MK_COMB (@lem4934434 A) (@lem4934433 A B s f x)). Qed.
Lemma lem4934436 {A B : Type'} (s : A -> Prop) (f : A -> B) : (term1441 A B s f) = (term1441 A B s f).
Proof. exact (fun_ext (fun x : A => @lem4934435 A B s f x)). Qed.
Lemma lem4934437 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4934438 {A B : Type'} (s : A -> Prop) (f : A -> B) : (term696 A B s f) = (term696 A B s f).
Proof. exact (MK_COMB (@lem4934437 A) (@lem4934436 A B s f)). Qed.
Lemma lem4934439 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4934440 {A B : Type'} (s : A -> Prop) (f : A -> B) : (term2874 A B s f) = (term2874 A B s f).
Proof. exact (MK_COMB (@lem4934439) (@lem4934438 A B s f)). Qed.
Lemma lem4934441 {A B : Type'} (f : A -> B) (s : A -> Prop) : (term2875 A B f s) = (term2875 A B f s).
Proof. exact (MK_COMB (@lem4934440 A B s f) (@lem4934419 A s)). Qed.
Lemma lem4934442 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4934443 {A B : Type'} (f : A -> B) (s : A -> Prop) : (term2876 A B f s) = (term2876 A B f s).
Proof. exact (MK_COMB (@lem4934442) (@lem4934441 A B f s)). Qed.
Lemma lem4934444 {A B : Type'} (f : A -> B) (s : A -> Prop) : (term2877 A B f s) = (term2877 A B f s).
Proof. exact (MK_COMB (@lem4934443 A B f s) (@lem4934418 A B f s)). Qed.
Lemma lem4934445 {A B : Type'} (f : A -> B) : (term2878 A B f) = (term2878 A B f).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4934444 A B f s)). Qed.
Lemma lem4934446 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4934447 {A B : Type'} (f : A -> B) : (term2879 A B f) = (term2879 A B f).
Proof. exact (MK_COMB (@lem4934446 A) (@lem4934445 A B f)). Qed.
Lemma lem4934448 {A B : Type'} : (term2880 A B) = (term2880 A B).
Proof. exact (fun_ext (fun f : A -> B => @lem4934447 A B f)). Qed.
Lemma lem4934449 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem4934450 {A B : Type'} : (term2705 A B) = (term2705 A B).
Proof. exact (MK_COMB (@lem4934449 A B) (@lem4934448 A B)). Qed.
Lemma lem4934451 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4934452 {A B : Type'} : (term2743 A B) = (term2743 A B).
Proof. exact (MK_COMB (@lem4934451) (@lem4934450 A B)). Qed.
Lemma lem4934453 {A B : Type'} : (term2745 A B) = (term2745 A B).
Proof. exact (MK_COMB (@lem4934452 A B) (@lem4934417 A B)). Qed.
Lemma lem4934454 {A : Type'} (f : A -> A) (s : A -> Prop) : ((term2821 A f s) = (@CARD A s)) = ((term2821 A f s) = (@CARD A s)).
Proof. exact (eq_refl ((term2821 A f s) = (@CARD A s))). Qed.
Lemma lem4934455 {A : Type'} (s : A -> Prop) : (@FINITE A s) = (@FINITE A s).
Proof. exact (eq_refl (@FINITE A s)). Qed.
Lemma lem4934468 {A : Type'} (s : A -> Prop) (f : A -> A) (x : A) (y : A) : (term2822 A s f x y) = (term2822 A s f x y).
Proof. exact (eq_refl (term2822 A s f x y)). Qed.
Lemma lem4934469 {A : Type'} (s : A -> Prop) (f : A -> A) (x : A) : (term2823 A s f x) = (term2823 A s f x).
Proof. exact (fun_ext (fun y : A => @lem4934468 A s f x y)). Qed.
Lemma lem4934470 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4934471 {A : Type'} (s : A -> Prop) (f : A -> A) (x : A) : (term2824 A s f x) = (term2824 A s f x).
Proof. exact (MK_COMB (@lem4934470 A) (@lem4934469 A s f x)). Qed.
Lemma lem4934472 {A : Type'} (s : A -> Prop) (f : A -> A) : (term2825 A s f) = (term2825 A s f).
Proof. exact (fun_ext (fun x : A => @lem4934471 A s f x)). Qed.
Lemma lem4934473 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4934474 {A : Type'} (s : A -> Prop) (f : A -> A) : (term2826 A s f) = (term2826 A s f).
Proof. exact (MK_COMB (@lem4934473 A) (@lem4934472 A s f)). Qed.
Lemma lem4934475 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4934476 {A : Type'} (s : A -> Prop) (f : A -> A) : (term2827 A s f) = (term2827 A s f).
Proof. exact (MK_COMB (@lem4934475) (@lem4934474 A s f)). Qed.
Lemma lem4934477 {A : Type'} (f : A -> A) (s : A -> Prop) : (term2828 A f s) = (term2828 A f s).
Proof. exact (MK_COMB (@lem4934476 A s f) (@lem4934455 A s)). Qed.
Lemma lem4934478 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4934479 {A : Type'} (f : A -> A) (s : A -> Prop) : (term2829 A f s) = (term2829 A f s).
Proof. exact (MK_COMB (@lem4934478) (@lem4934477 A f s)). Qed.
Lemma lem4934480 {A : Type'} (f : A -> A) (s : A -> Prop) : (term2830 A f s) = (term2830 A f s).
Proof. exact (MK_COMB (@lem4934479 A f s) (@lem4934454 A f s)). Qed.
Lemma lem4934481 {A : Type'} (f : A -> A) : (term2831 A f) = (term2831 A f).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4934480 A f s)). Qed.
Lemma lem4934482 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4934483 {A : Type'} (f : A -> A) : (term2832 A f) = (term2832 A f).
Proof. exact (MK_COMB (@lem4934482 A) (@lem4934481 A f)). Qed.
Lemma lem4934484 {A : Type'} : (term2833 A) = (term2833 A).
Proof. exact (fun_ext (fun f : A -> A => @lem4934483 A f)). Qed.
Lemma lem4934485 {A : Type'} : (@all (A -> A)) = (@all (A -> A)).
Proof. exact (eq_refl (@all (A -> A))). Qed.
Lemma lem4934486 {A : Type'} : (term2706 A) = (term2706 A).
Proof. exact (MK_COMB (@lem4934485 A) (@lem4934484 A)). Qed.
Lemma lem4934487 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4934488 {A : Type'} : (term2731 A) = (term2731 A).
Proof. exact (MK_COMB (@lem4934487) (@lem4934486 A)). Qed.
Lemma lem4934489 {A B : Type'} : (term2747 A B) = (term2747 A B).
Proof. exact (MK_COMB (@lem4934488 A) (@lem4934453 A B)). Qed.
Lemma lem4934494 {A B : Type'} (f : A -> B) (s : A -> Prop) (t : B -> Prop) : (term2748 A B f s t) = (term2748 A B f s t).
Proof. exact (eq_refl (term2748 A B f s t)). Qed.
Lemma lem4934495 {A B : Type'} (f : A -> B) (s : A -> Prop) (t : B -> Prop) : (term2750 A B f s t) = (term2750 A B f s t).
Proof. exact (MK_COMB (@lem4934494 A B f s t) (@lem4934489 A B)). Qed.
Lemma lem4934498 {B : Type'} (y : B) (t : B -> Prop) : (term729 B y t) = (term729 B y t).
Proof. exact (eq_refl (term729 B y t)). Qed.
Lemma lem4934499 {A B : Type'} (y : B) (f : A -> B) (s : A -> Prop) (t : B -> Prop) : (term2752 A B y f s t) = (term2752 A B y f s t).
Proof. exact (MK_COMB (@lem4934498 B y t) (@lem4934495 A B f s t)). Qed.
Lemma lem4934512 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) (y : A) : (term1438 A B s f x y) = (term1438 A B s f x y).
Proof. exact (eq_refl (term1438 A B s f x y)). Qed.
Lemma lem4934513 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) : (term1439 A B s f x) = (term1439 A B s f x).
Proof. exact (fun_ext (fun y : A => @lem4934512 A B s f x y)). Qed.
Lemma lem4934514 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4934515 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) : (term1440 A B s f x) = (term1440 A B s f x).
Proof. exact (MK_COMB (@lem4934514 A) (@lem4934513 A B s f x)). Qed.
Lemma lem4934516 {A B : Type'} (s : A -> Prop) (f : A -> B) : (term1441 A B s f) = (term1441 A B s f).
Proof. exact (fun_ext (fun x : A => @lem4934515 A B s f x)). Qed.
Lemma lem4934517 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4934518 {A B : Type'} (s : A -> Prop) (f : A -> B) : (term696 A B s f) = (term696 A B s f).
Proof. exact (MK_COMB (@lem4934517 A) (@lem4934516 A B s f)). Qed.
Lemma lem4934519 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4934520 {A B : Type'} (s : A -> Prop) (f : A -> B) : (term1359 A B s f) = (term1359 A B s f).
Proof. exact (MK_COMB (@lem4934519) (@lem4934518 A B s f)). Qed.
Lemma lem4934521 {A B : Type'} (y : B) (f : A -> B) (s : A -> Prop) (t : B -> Prop) : (term2754 A B y f s t) = (term2754 A B y f s t).
Proof. exact (MK_COMB (@lem4934520 A B s f) (@lem4934499 A B y f s t)). Qed.
Lemma lem4934524 {A B : Type'} (f : A -> B) (s : A -> Prop) (t : B -> Prop) : (term756 A B f s t) = (term756 A B f s t).
Proof. exact (eq_refl (term756 A B f s t)). Qed.
Lemma lem4934525 {A B : Type'} (y : B) (f : A -> B) (s : A -> Prop) (t : B -> Prop) : (term2756 A B y f s t) = (term2756 A B y f s t).
Proof. exact (MK_COMB (@lem4934524 A B f s t) (@lem4934521 A B y f s t)). Qed.
Lemma lem4934528 {A B : Type'} (s : A -> Prop) (t : B -> Prop) : (term759 A B s t) = (term759 A B s t).
Proof. exact (eq_refl (term759 A B s t)). Qed.
Lemma lem4934529 {A B : Type'} (y : B) (f : A -> B) (s : A -> Prop) (t : B -> Prop) : (term2758 A B y f s t) = (term2758 A B y f s t).
Proof. exact (MK_COMB (@lem4934528 A B s t) (@lem4934525 A B y f s t)). Qed.
Lemma lem4934532 {B : Type'} (t : B -> Prop) : (term762 B t) = (term762 B t).
Proof. exact (eq_refl (term762 B t)). Qed.
Lemma lem4934533 {A B : Type'} (y : B) (f : A -> B) (s : A -> Prop) (t : B -> Prop) : (term2760 A B y f s t) = (term2760 A B y f s t).
Proof. exact (MK_COMB (@lem4934532 B t) (@lem4934529 A B y f s t)). Qed.
Lemma lem4934536 {A : Type'} (s : A -> Prop) : (term762 A s) = (term762 A s).
Proof. exact (eq_refl (term762 A s)). Qed.
Lemma lem4934537 {A B : Type'} (y : B) (f : A -> B) (s : A -> Prop) (t : B -> Prop) : (term2761 A B y f s t) = (term2761 A B y f s t).
Proof. exact (MK_COMB (@lem4934536 A s) (@lem4934533 A B y f s t)). Qed.
Lemma lem4934538 {A B : Type'} (f : A -> B) (s : A -> Prop) (t : B -> Prop) : (term2763 A B f s t) = (term2763 A B f s t).
Proof. exact (fun_ext (fun y : B => @lem4934537 A B y f s t)). Qed.
Lemma lem4934539 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4934540 {A B : Type'} (f : A -> B) (s : A -> Prop) (t : B -> Prop) : (term2765 A B f s t) = (term2765 A B f s t).
Proof. exact (MK_COMB (@lem4934539 B) (@lem4934538 A B f s t)). Qed.
Lemma lem4934541 {A B : Type'} (s : A -> Prop) (t : B -> Prop) : (term2767 A B s t) = (term2767 A B s t).
Proof. exact (fun_ext (fun f : A -> B => @lem4934540 A B f s t)). Qed.
Lemma lem4934542 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem4934543 {A B : Type'} (s : A -> Prop) (t : B -> Prop) : (term2769 A B s t) = (term2769 A B s t).
Proof. exact (MK_COMB (@lem4934542 A B) (@lem4934541 A B s t)). Qed.
Lemma lem4934544 {A B : Type'} (t : B -> Prop) : (term2771 A B t) = (term2771 A B t).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4934543 A B s t)). Qed.
Lemma lem4934545 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4934546 {A B : Type'} (t : B -> Prop) : (term2773 A B t) = (term2773 A B t).
Proof. exact (MK_COMB (@lem4934545 A) (@lem4934544 A B t)). Qed.
Lemma lem4934547 {A B : Type'} : (term2775 A B) = (term2775 A B).
Proof. exact (fun_ext (fun t : B -> Prop => @lem4934546 A B t)). Qed.
Lemma lem4934548 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4934549 {A B : Type'} : (term2777 A B) = (term2777 A B).
Proof. exact (MK_COMB (@lem4934548 B) (@lem4934547 A B)). Qed.
Lemma lem4934970 {A B : Type'} : (term2776 A B) = (term2777 A B).
Proof. exact (TRANS (@lem4934122 A B) (@lem4934549 A B)). Qed.
Lemma lem4934971 {A B : Type'} : (term2777 A B) = (term2776 A B).
Proof. exact (SYM (@lem4934970 A B)). Qed.
Lemma lem4934976 {A B : Type'} (s : A -> Prop) (f : A -> B) (h1 : term696 A B s f) : term696 A B s f.
Proof. exact (h1). Qed.
Lemma lem4934979 {A : Type'} (h1 : term2706 A) : term2706 A.
Proof. exact (h1). Qed.
Lemma lem4934980 {A B : Type'} (h1 : term2705 A B) : term2705 A B.
Proof. exact (h1). Qed.
Lemma lem4934981 {A : Type'} (h1 : term2709 A) : term2709 A.
Proof. exact (h1). Qed.
Lemma lem4934982 {A B : Type'} (h1 : term2708 A B) : term2708 A B.
Proof. exact (h1). Qed.
Lemma lem4934983 {A : Type'} (h1 : term2707 A) : term2707 A.
Proof. exact (h1). Qed.
Lemma lem4934984 {B : Type'} (h1 : term2706 B) : term2706 B.
Proof. exact (h1). Qed.
Lemma lem4934985 {A B : Type'} (h1 : term2712 A B) : term2712 A B.
Proof. exact (h1). Qed.
Lemma lem4934986 {B : Type'} (h1 : term2711 B) : term2711 B.
Proof. exact (h1). Qed.
Lemma lem4934987 {B : Type'} (h1 : term2710 B) : term2710 B.
Proof. exact (h1). Qed.
Lemma lem4934989 {B : Type'} (h1 : term2704 B) : term2704 B.
Proof. exact (h1). Qed.
Lemma lem4934995 {A : Type'} (s : A -> Prop) (h1 : @FINITE A s) : @FINITE A s.
Proof. exact (h1). Qed.
Lemma lem4935001 {B : Type'} (t : B -> Prop) (h1 : @FINITE B t) : @FINITE B t.
Proof. exact (h1). Qed.
Lemma lem4935007 {A B : Type'} (s : A -> Prop) (t : B -> Prop) (h1 : (@CARD A s) = (@CARD B t)) : (@CARD A s) = (@CARD B t).
Proof. exact (h1). Qed.
Lemma lem4935013 {A B : Type'} (f : A -> B) (s : A -> Prop) (t : B -> Prop) (h1 : term692 A B f s t) : term692 A B f s t.
Proof. exact (h1). Qed.
Lemma lem4935021 {A B : Type'} (s : A -> Prop) (x : A) (f : A -> B) (y : A) : (term2881 A B s x f y) = (term2882 A B s x f y).
Proof. exact (@lem17045 (@IN A y s) ((f x) = (f y))). Qed.
Lemma lem4935023 {A : Type'} (x : A) (s : A -> Prop) : (term793 A x s) = (term793 A x s).
Proof. exact (eq_refl (term793 A x s)). Qed.
Lemma lem4935024 {A B : Type'} (s : A -> Prop) (x : A) (f : A -> B) (y : A) : (term2883 A B s x f y) = (term2884 A B s x f y).
Proof. exact (MK_COMB (@lem4935023 A x s) (@lem4935021 A B s x f y)). Qed.
Lemma lem4935025 {A B : Type'} (s : A -> Prop) (x : A) (f : A -> B) (y : A) : (term2885 A B s x f y) = (term2883 A B s x f y).
Proof. exact (@lem17045 (@IN A x s) (term695 A B s x f y)). Qed.
Lemma lem4935026 {A B : Type'} (s : A -> Prop) (x : A) (f : A -> B) (y : A) : (term2885 A B s x f y) = (term2884 A B s x f y).
Proof. exact (TRANS (@lem4935025 A B s x f y) (@lem4935024 A B s x f y)). Qed.
Lemma lem4935027 {A : Type'} (x : A) (y : A) : (x = y) = (x = y).
Proof. exact (eq_refl (x = y)). Qed.
Lemma lem4935028 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4935029 {A B : Type'} (s : A -> Prop) (x : A) (f : A -> B) (y : A) : (term2886 A B s x f y) = (term2887 A B s x f y).
Proof. exact (MK_COMB (@lem4935028) (@lem4935026 A B s x f y)). Qed.
Lemma lem4935030 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) (y : A) : (term2888 A B s f x y) = (term2889 A B s f x y).
Proof. exact (MK_COMB (@lem4935029 A B s x f y) (@lem4935027 A x y)). Qed.
Lemma lem4935031 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) (y : A) : (term1438 A B s f x y) = (term2888 A B s f x y).
Proof. exact (@lem17265 (term694 A B s x f y) (x = y)). Qed.
Lemma lem4935032 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) (y : A) : (term1438 A B s f x y) = (term2889 A B s f x y).
Proof. exact (TRANS (@lem4935031 A B s f x y) (@lem4935030 A B s f x y)). Qed.
Lemma lem4935033 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) : (term1439 A B s f x) = (term2890 A B s f x).
Proof. exact (fun_ext (fun y : A => @lem4935032 A B s f x y)). Qed.
Lemma lem4935034 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4935035 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) : (term1440 A B s f x) = (term2891 A B s f x).
Proof. exact (MK_COMB (@lem4935034 A) (@lem4935033 A B s f x)). Qed.
Lemma lem4935036 {A B : Type'} (s : A -> Prop) (f : A -> B) : (term1441 A B s f) = (term2892 A B s f).
Proof. exact (fun_ext (fun x : A => @lem4935035 A B s f x)). Qed.
Lemma lem4935037 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4935094 {A B : Type'} (s : A -> Prop) (f : A -> B) : (term696 A B s f) = (term2893 A B s f).
Proof. exact (MK_COMB (@lem4935037 A) (@lem4935036 A B s f)). Qed.
Lemma lem4935095 {A B : Type'} (s : A -> Prop) (f : A -> B) (h1 : term696 A B s f) : term2893 A B s f.
Proof. exact (EQ_MP (@lem4935094 A B s f) (@lem4934976 A B s f h1)). Qed.
Lemma lem4935107 {A B : Type'} (f : A -> B) (s : A -> Prop) (t : B -> Prop) (h1 : term2703 A B f s t) : term2703 A B f s t.
Proof. exact (h1). Qed.
Lemma lem4935122 {A : Type'} (s : A -> Prop) (f : A -> A) (x : A) (y : A) : (term2894 A s f x y) = (term2895 A s f x y).
Proof. exact (@lem17362 (term2896 A s x f y) (x = y)). Qed.
Lemma lem4935123 {A : Type'} (P : A -> Prop) : (term2420 A P) = (term2421 A P).
Proof. exact (@lem18392 A P). Qed.
Lemma lem4935124 {A : Type'} (s : A -> Prop) (f : A -> A) (x : A) : (term2897 A s f x) = (term2898 A s f x).
Proof. exact (@lem4935123 A (term2823 A s f x)). Qed.
Lemma lem4935125 {A : Type'} (s : A -> Prop) (f : A -> A) (x : A) (y : A) : (term2899 A s f x y) = (term2822 A s f x y).
Proof. exact (eq_refl (term2899 A s f x y)). Qed.
Lemma lem4935126 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem4935127 {A : Type'} (s : A -> Prop) (f : A -> A) (x : A) (y : A) : (term2900 A s f x y) = (term2894 A s f x y).
Proof. exact (MK_COMB (@lem4935126) (@lem4935125 A s f x y)). Qed.
Lemma lem4935128 {A : Type'} (s : A -> Prop) (f : A -> A) (x : A) (y : A) : (term2900 A s f x y) = (term2895 A s f x y).
Proof. exact (TRANS (@lem4935127 A s f x y) (@lem4935122 A s f x y)). Qed.
Lemma lem4935129 {A : Type'} (s : A -> Prop) (f : A -> A) (x : A) : (term2901 A s f x) = (term2902 A s f x).
Proof. exact (fun_ext (fun y : A => @lem4935128 A s f x y)). Qed.
Lemma lem4935130 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem4935131 {A : Type'} (s : A -> Prop) (f : A -> A) (x : A) : (term2898 A s f x) = (term2903 A s f x).
Proof. exact (MK_COMB (@lem4935130 A) (@lem4935129 A s f x)). Qed.
Lemma lem4935132 {A : Type'} (s : A -> Prop) (f : A -> A) (x : A) : (term2897 A s f x) = (term2903 A s f x).
Proof. exact (TRANS (@lem4935124 A s f x) (@lem4935131 A s f x)). Qed.
Lemma lem4935133 {A : Type'} (P : A -> Prop) : (term2420 A P) = (term2421 A P).
Proof. exact (@lem18392 A P). Qed.
Lemma lem4935134 {A : Type'} (s : A -> Prop) (f : A -> A) : (term2904 A s f) = (term2905 A s f).
Proof. exact (@lem4935133 A (term2825 A s f)). Qed.
Lemma lem4935135 {A : Type'} (s : A -> Prop) (f : A -> A) (x : A) : (term2906 A s f x) = (term2824 A s f x).
Proof. exact (eq_refl (term2906 A s f x)). Qed.
Lemma lem4935136 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem4935137 {A : Type'} (s : A -> Prop) (f : A -> A) (x : A) : (term2907 A s f x) = (term2897 A s f x).
Proof. exact (MK_COMB (@lem4935136) (@lem4935135 A s f x)). Qed.
Lemma lem4935138 {A : Type'} (s : A -> Prop) (f : A -> A) (x : A) : (term2907 A s f x) = (term2903 A s f x).
Proof. exact (TRANS (@lem4935137 A s f x) (@lem4935132 A s f x)). Qed.
Lemma lem4935139 {A : Type'} (s : A -> Prop) (f : A -> A) : (term2908 A s f) = (term2909 A s f).
Proof. exact (fun_ext (fun x : A => @lem4935138 A s f x)). Qed.
Lemma lem4935140 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem4935141 {A : Type'} (s : A -> Prop) (f : A -> A) : (term2905 A s f) = (term2910 A s f).
Proof. exact (MK_COMB (@lem4935140 A) (@lem4935139 A s f)). Qed.
Lemma lem4935142 {A : Type'} (s : A -> Prop) (f : A -> A) : (term2904 A s f) = (term2910 A s f).
Proof. exact (TRANS (@lem4935134 A s f) (@lem4935141 A s f)). Qed.
Lemma lem4935143 {A : Type'} (s : A -> Prop) : (term1224 A s) = (term1224 A s).
Proof. exact (eq_refl (term1224 A s)). Qed.
Lemma lem4935144 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4935145 {A : Type'} (s : A -> Prop) (f : A -> A) : (term2911 A s f) = (term2912 A s f).
Proof. exact (MK_COMB (@lem4935144) (@lem4935142 A s f)). Qed.
Lemma lem4935146 {A : Type'} (f : A -> A) (s : A -> Prop) : (term2913 A f s) = (term2914 A f s).
Proof. exact (MK_COMB (@lem4935145 A s f) (@lem4935143 A s)). Qed.
Lemma lem4935147 {A : Type'} (f : A -> A) (s : A -> Prop) : (term2915 A f s) = (term2913 A f s).
Proof. exact (@lem17045 (term2826 A s f) (@FINITE A s)). Qed.
Lemma lem4935148 {A : Type'} (f : A -> A) (s : A -> Prop) : (term2915 A f s) = (term2914 A f s).
Proof. exact (TRANS (@lem4935147 A f s) (@lem4935146 A f s)). Qed.
Lemma lem4935149 {A : Type'} (f : A -> A) (s : A -> Prop) : ((term2821 A f s) = (@CARD A s)) = ((term2821 A f s) = (@CARD A s)).
Proof. exact (eq_refl ((term2821 A f s) = (@CARD A s))). Qed.
Lemma lem4935150 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4935151 {A : Type'} (f : A -> A) (s : A -> Prop) : (term2916 A f s) = (term2917 A f s).
Proof. exact (MK_COMB (@lem4935150) (@lem4935148 A f s)). Qed.
Lemma lem4935152 {A : Type'} (f : A -> A) (s : A -> Prop) : (term2918 A f s) = (term2919 A f s).
Proof. exact (MK_COMB (@lem4935151 A f s) (@lem4935149 A f s)). Qed.
Lemma lem4935153 {A : Type'} (f : A -> A) (s : A -> Prop) : (term2830 A f s) = (term2918 A f s).
Proof. exact (@lem17265 (term2828 A f s) ((term2821 A f s) = (@CARD A s))). Qed.
Lemma lem4935154 {A : Type'} (f : A -> A) (s : A -> Prop) : (term2830 A f s) = (term2919 A f s).
Proof. exact (TRANS (@lem4935153 A f s) (@lem4935152 A f s)). Qed.
Lemma lem4935155 {A : Type'} (f : A -> A) : (term2831 A f) = (term2920 A f).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4935154 A f s)). Qed.
Lemma lem4935156 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4935157 {A : Type'} (f : A -> A) : (term2832 A f) = (term2921 A f).
Proof. exact (MK_COMB (@lem4935156 A) (@lem4935155 A f)). Qed.
Lemma lem4935158 {A : Type'} : (term2833 A) = (term2922 A).
Proof. exact (fun_ext (fun f : A -> A => @lem4935157 A f)). Qed.
Lemma lem4935159 {A : Type'} : (@all (A -> A)) = (@all (A -> A)).
Proof. exact (eq_refl (@all (A -> A))). Qed.
Lemma lem4935160 {A : Type'} : (term2706 A) = (term2923 A).
Proof. exact (MK_COMB (@lem4935159 A) (@lem4935158 A)). Qed.
Lemma lem4935267 {A : Type'} (P : A -> Prop) (Q : Prop) : (term1154 A P Q) = (term1155 A P Q).
Proof. exact (EQ_MP (@lem18905 A P Q) (@lem18904 A P Q)). Qed.
Lemma lem4935268 {A : Type'} (P : A -> Prop) (Q : Prop) : (term1154 A P Q) = (term1155 A P Q).
Proof. exact (@lem4935267 A P Q). Qed.
Lemma lem4935269 {A : Type'} (f : A -> A) (s : A -> Prop) : (term2924 A f s) = (term2925 A f s).
Proof. exact (@lem4935268 A (term2909 A s f) (term1224 A s)). Qed.
Lemma lem4935270 {A : Type'} (s : A -> Prop) (f : A -> A) (x : A) : (term2926 A s f x) = (term2903 A s f x).
Proof. exact (eq_refl (term2926 A s f x)). Qed.
Lemma lem4935271 {A : Type'} (s : A -> Prop) (f : A -> A) : (term2927 A s f) = (term2909 A s f).
Proof. exact (fun_ext (fun x : A => @lem4935270 A s f x)). Qed.
Lemma lem4935272 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem4935273 {A : Type'} (s : A -> Prop) (f : A -> A) : (term2928 A s f) = (term2910 A s f).
Proof. exact (MK_COMB (@lem4935272 A) (@lem4935271 A s f)). Qed.
Lemma lem4935274 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4935275 {A : Type'} (s : A -> Prop) (f : A -> A) : (term2929 A s f) = (term2912 A s f).
Proof. exact (MK_COMB (@lem4935274) (@lem4935273 A s f)). Qed.
Lemma lem4935276 {A : Type'} (s : A -> Prop) : (term1224 A s) = (term1224 A s).
Proof. exact (eq_refl (term1224 A s)). Qed.
Lemma lem4935277 {A : Type'} (f : A -> A) (s : A -> Prop) : (term2924 A f s) = (term2914 A f s).
Proof. exact (MK_COMB (@lem4935275 A s f) (@lem4935276 A s)). Qed.
Lemma lem4935278 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4935279 {A : Type'} (f : A -> A) (s : A -> Prop) : (term2930 A f s) = (term2931 A f s).
Proof. exact (MK_COMB (@lem4935278) (@lem4935277 A f s)). Qed.
Lemma lem4935280 {A : Type'} (s : A -> Prop) (f : A -> A) (x : A) : (term2926 A s f x) = (term2903 A s f x).
Proof. exact (eq_refl (term2926 A s f x)). Qed.
Lemma lem4935281 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4935282 {A : Type'} (s : A -> Prop) (f : A -> A) (x : A) : (term2932 A s f x) = (term2933 A s f x).
Proof. exact (MK_COMB (@lem4935281) (@lem4935280 A s f x)). Qed.
Lemma lem4935283 {A : Type'} (s : A -> Prop) : (term1224 A s) = (term1224 A s).
Proof. exact (eq_refl (term1224 A s)). Qed.
Lemma lem4935284 {A : Type'} (f : A -> A) (x : A) (s : A -> Prop) : (term2934 A f x s) = (term2935 A f x s).
Proof. exact (MK_COMB (@lem4935282 A s f x) (@lem4935283 A s)). Qed.
Lemma lem4935285 {A : Type'} (f : A -> A) (s : A -> Prop) : (term2936 A f s) = (term2937 A f s).
Proof. exact (fun_ext (fun x : A => @lem4935284 A f x s)). Qed.
Lemma lem4935286 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem4935287 {A : Type'} (f : A -> A) (s : A -> Prop) : (term2925 A f s) = (term2938 A f s).
Proof. exact (MK_COMB (@lem4935286 A) (@lem4935285 A f s)). Qed.
Lemma lem4935288 {A : Type'} (f : A -> A) (s : A -> Prop) : ((term2924 A f s) = (term2925 A f s)) = ((term2914 A f s) = (term2938 A f s)).
Proof. exact (MK_COMB (@lem4935279 A f s) (@lem4935287 A f s)). Qed.
Lemma lem4935289 {A : Type'} (f : A -> A) (s : A -> Prop) : (term2914 A f s) = (term2938 A f s).
Proof. exact (EQ_MP (@lem4935288 A f s) (@lem4935269 A f s)). Qed.
Lemma lem4935291 {A : Type'} (P : A -> Prop) (Q : Prop) : (term1154 A P Q) = (term1155 A P Q).
Proof. exact (EQ_MP (@lem18905 A P Q) (@lem18904 A P Q)). Qed.
Lemma lem4935292 {A : Type'} (P : A -> Prop) (Q : Prop) : (term1154 A P Q) = (term1155 A P Q).
Proof. exact (@lem4935291 A P Q). Qed.
Lemma lem4935293 {A : Type'} (f : A -> A) (x : A) (s : A -> Prop) : (term2939 A f x s) = (term2940 A f x s).
Proof. exact (@lem4935292 A (term2902 A s f x) (term1224 A s)). Qed.
Lemma lem4935294 {A : Type'} (s : A -> Prop) (f : A -> A) (x : A) (y : A) : (term2941 A s f x y) = (term2895 A s f x y).
Proof. exact (eq_refl (term2941 A s f x y)). Qed.
Lemma lem4935295 {A : Type'} (s : A -> Prop) (f : A -> A) (x : A) : (term2942 A s f x) = (term2902 A s f x).
Proof. exact (fun_ext (fun y : A => @lem4935294 A s f x y)). Qed.
Lemma lem4935296 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem4935297 {A : Type'} (s : A -> Prop) (f : A -> A) (x : A) : (term2943 A s f x) = (term2903 A s f x).
Proof. exact (MK_COMB (@lem4935296 A) (@lem4935295 A s f x)). Qed.
Lemma lem4935298 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4935299 {A : Type'} (s : A -> Prop) (f : A -> A) (x : A) : (term2944 A s f x) = (term2933 A s f x).
Proof. exact (MK_COMB (@lem4935298) (@lem4935297 A s f x)). Qed.
Lemma lem4935300 {A : Type'} (s : A -> Prop) : (term1224 A s) = (term1224 A s).
Proof. exact (eq_refl (term1224 A s)). Qed.
Lemma lem4935301 {A : Type'} (f : A -> A) (x : A) (s : A -> Prop) : (term2939 A f x s) = (term2935 A f x s).
Proof. exact (MK_COMB (@lem4935299 A s f x) (@lem4935300 A s)). Qed.
Lemma lem4935302 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4935303 {A : Type'} (f : A -> A) (x : A) (s : A -> Prop) : (term2945 A f x s) = (term2946 A f x s).
Proof. exact (MK_COMB (@lem4935302) (@lem4935301 A f x s)). Qed.
Lemma lem4935304 {A : Type'} (s : A -> Prop) (f : A -> A) (x : A) (y : A) : (term2941 A s f x y) = (term2895 A s f x y).
Proof. exact (eq_refl (term2941 A s f x y)). Qed.
Lemma lem4935305 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4935306 {A : Type'} (s : A -> Prop) (f : A -> A) (x : A) (y : A) : (term2947 A s f x y) = (term2948 A s f x y).
Proof. exact (MK_COMB (@lem4935305) (@lem4935304 A s f x y)). Qed.
Lemma lem4935307 {A : Type'} (s : A -> Prop) : (term1224 A s) = (term1224 A s).
Proof. exact (eq_refl (term1224 A s)). Qed.
Lemma lem4935308 {A : Type'} (f : A -> A) (x : A) (y : A) (s : A -> Prop) : (term2949 A f x y s) = (term2950 A f x y s).
Proof. exact (MK_COMB (@lem4935306 A s f x y) (@lem4935307 A s)). Qed.
Lemma lem4935309 {A : Type'} (f : A -> A) (x : A) (s : A -> Prop) : (term2951 A f x s) = (term2952 A f x s).
Proof. exact (fun_ext (fun y : A => @lem4935308 A f x y s)). Qed.
Lemma lem4935310 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem4935311 {A : Type'} (f : A -> A) (x : A) (s : A -> Prop) : (term2940 A f x s) = (term2953 A f x s).
Proof. exact (MK_COMB (@lem4935310 A) (@lem4935309 A f x s)). Qed.
Lemma lem4935312 {A : Type'} (f : A -> A) (x : A) (s : A -> Prop) : ((term2939 A f x s) = (term2940 A f x s)) = ((term2935 A f x s) = (term2953 A f x s)).
Proof. exact (MK_COMB (@lem4935303 A f x s) (@lem4935311 A f x s)). Qed.
Lemma lem4935313 {A : Type'} (f : A -> A) (x : A) (s : A -> Prop) : (term2935 A f x s) = (term2953 A f x s).
Proof. exact (EQ_MP (@lem4935312 A f x s) (@lem4935293 A f x s)). Qed.
Lemma lem4935314 {A : Type'} (f : A -> A) (s : A -> Prop) : (term2937 A f s) = (term2954 A f s).
Proof. exact (fun_ext (fun x : A => @lem4935313 A f x s)). Qed.
Lemma lem4935315 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem4935316 {A : Type'} (f : A -> A) (s : A -> Prop) : (term2938 A f s) = (term2955 A f s).
Proof. exact (MK_COMB (@lem4935315 A) (@lem4935314 A f s)). Qed.
Lemma lem4935317 {A : Type'} (f : A -> A) (s : A -> Prop) : (term2914 A f s) = (term2955 A f s).
Proof. exact (TRANS (@lem4935289 A f s) (@lem4935316 A f s)). Qed.
Lemma lem4935318 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4935319 {A : Type'} (f : A -> A) (s : A -> Prop) : (term2917 A f s) = (term2956 A f s).
Proof. exact (MK_COMB (@lem4935318) (@lem4935317 A f s)). Qed.
Lemma lem4935320 {A : Type'} (f : A -> A) (s : A -> Prop) : ((term2821 A f s) = (@CARD A s)) = ((term2821 A f s) = (@CARD A s)).
Proof. exact (eq_refl ((term2821 A f s) = (@CARD A s))). Qed.
Lemma lem4935321 {A : Type'} (f : A -> A) (s : A -> Prop) : (term2919 A f s) = (term2957 A f s).
Proof. exact (MK_COMB (@lem4935319 A f s) (@lem4935320 A f s)). Qed.
Lemma lem4935323 {A : Type'} (P : A -> Prop) (Q : Prop) : (term1154 A P Q) = (term1155 A P Q).
Proof. exact (EQ_MP (@lem18905 A P Q) (@lem18904 A P Q)). Qed.
Lemma lem4935324 {A : Type'} (P : A -> Prop) (Q : Prop) : (term1154 A P Q) = (term1155 A P Q).
Proof. exact (@lem4935323 A P Q). Qed.
Lemma lem4935325 {A : Type'} (f : A -> A) (s : A -> Prop) : (term2958 A f s) = (term2959 A f s).
Proof. exact (@lem4935324 A (term2954 A f s) ((term2821 A f s) = (@CARD A s))). Qed.
Lemma lem4935326 {A : Type'} (f : A -> A) (x : A) (s : A -> Prop) : (term2960 A f s x) = (term2953 A f x s).
Proof. exact (eq_refl (term2960 A f s x)). Qed.
Lemma lem4935327 {A : Type'} (f : A -> A) (s : A -> Prop) : (term2961 A f s) = (term2954 A f s).
Proof. exact (fun_ext (fun x : A => @lem4935326 A f x s)). Qed.
Lemma lem4935328 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem4935329 {A : Type'} (f : A -> A) (s : A -> Prop) : (term2962 A f s) = (term2955 A f s).
Proof. exact (MK_COMB (@lem4935328 A) (@lem4935327 A f s)). Qed.
Lemma lem4935330 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4935331 {A : Type'} (f : A -> A) (s : A -> Prop) : (term2963 A f s) = (term2956 A f s).
Proof. exact (MK_COMB (@lem4935330) (@lem4935329 A f s)). Qed.
Lemma lem4935332 {A : Type'} (f : A -> A) (s : A -> Prop) : ((term2821 A f s) = (@CARD A s)) = ((term2821 A f s) = (@CARD A s)).
Proof. exact (eq_refl ((term2821 A f s) = (@CARD A s))). Qed.
Lemma lem4935333 {A : Type'} (f : A -> A) (s : A -> Prop) : (term2958 A f s) = (term2957 A f s).
Proof. exact (MK_COMB (@lem4935331 A f s) (@lem4935332 A f s)). Qed.
Lemma lem4935334 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4935335 {A : Type'} (f : A -> A) (s : A -> Prop) : (term2964 A f s) = (term2965 A f s).
Proof. exact (MK_COMB (@lem4935334) (@lem4935333 A f s)). Qed.
Lemma lem4935336 {A : Type'} (f : A -> A) (x : A) (s : A -> Prop) : (term2960 A f s x) = (term2953 A f x s).
Proof. exact (eq_refl (term2960 A f s x)). Qed.
Lemma lem4935337 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4935338 {A : Type'} (f : A -> A) (x : A) (s : A -> Prop) : (term2966 A f s x) = (term2967 A f x s).
Proof. exact (MK_COMB (@lem4935337) (@lem4935336 A f x s)). Qed.
Lemma lem4935339 {A : Type'} (f : A -> A) (s : A -> Prop) : ((term2821 A f s) = (@CARD A s)) = ((term2821 A f s) = (@CARD A s)).
Proof. exact (eq_refl ((term2821 A f s) = (@CARD A s))). Qed.
Lemma lem4935340 {A : Type'} (x : A) (f : A -> A) (s : A -> Prop) : (term2968 A x f s) = (term2969 A x f s).
Proof. exact (MK_COMB (@lem4935338 A f x s) (@lem4935339 A f s)). Qed.
Lemma lem4935341 {A : Type'} (f : A -> A) (s : A -> Prop) : (term2970 A f s) = (term2971 A f s).
Proof. exact (fun_ext (fun x : A => @lem4935340 A x f s)). Qed.
Lemma lem4935342 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem4935343 {A : Type'} (f : A -> A) (s : A -> Prop) : (term2959 A f s) = (term2972 A f s).
Proof. exact (MK_COMB (@lem4935342 A) (@lem4935341 A f s)). Qed.
Lemma lem4935344 {A : Type'} (f : A -> A) (s : A -> Prop) : ((term2958 A f s) = (term2959 A f s)) = ((term2957 A f s) = (term2972 A f s)).
Proof. exact (MK_COMB (@lem4935335 A f s) (@lem4935343 A f s)). Qed.
Lemma lem4935345 {A : Type'} (f : A -> A) (s : A -> Prop) : (term2957 A f s) = (term2972 A f s).
Proof. exact (EQ_MP (@lem4935344 A f s) (@lem4935325 A f s)). Qed.
Lemma lem4935347 {A : Type'} (P : A -> Prop) (Q : Prop) : (term1154 A P Q) = (term1155 A P Q).
Proof. exact (EQ_MP (@lem18905 A P Q) (@lem18904 A P Q)). Qed.
Lemma lem4935348 {A : Type'} (P : A -> Prop) (Q : Prop) : (term1154 A P Q) = (term1155 A P Q).
Proof. exact (@lem4935347 A P Q). Qed.
Lemma lem4935349 {A : Type'} (x : A) (f : A -> A) (s : A -> Prop) : (term2973 A x f s) = (term2974 A x f s).
Proof. exact (@lem4935348 A (term2952 A f x s) ((term2821 A f s) = (@CARD A s))). Qed.
Lemma lem4935350 {A : Type'} (f : A -> A) (x : A) (y : A) (s : A -> Prop) : (term2975 A f x s y) = (term2950 A f x y s).
Proof. exact (eq_refl (term2975 A f x s y)). Qed.
Lemma lem4935351 {A : Type'} (f : A -> A) (x : A) (s : A -> Prop) : (term2976 A f x s) = (term2952 A f x s).
Proof. exact (fun_ext (fun y : A => @lem4935350 A f x y s)). Qed.
Lemma lem4935352 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem4935353 {A : Type'} (f : A -> A) (x : A) (s : A -> Prop) : (term2977 A f x s) = (term2953 A f x s).
Proof. exact (MK_COMB (@lem4935352 A) (@lem4935351 A f x s)). Qed.
Lemma lem4935354 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4935355 {A : Type'} (f : A -> A) (x : A) (s : A -> Prop) : (term2978 A f x s) = (term2967 A f x s).
Proof. exact (MK_COMB (@lem4935354) (@lem4935353 A f x s)). Qed.
Lemma lem4935356 {A : Type'} (f : A -> A) (s : A -> Prop) : ((term2821 A f s) = (@CARD A s)) = ((term2821 A f s) = (@CARD A s)).
Proof. exact (eq_refl ((term2821 A f s) = (@CARD A s))). Qed.
Lemma lem4935357 {A : Type'} (x : A) (f : A -> A) (s : A -> Prop) : (term2973 A x f s) = (term2969 A x f s).
Proof. exact (MK_COMB (@lem4935355 A f x s) (@lem4935356 A f s)). Qed.
Lemma lem4935358 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4935359 {A : Type'} (x : A) (f : A -> A) (s : A -> Prop) : (term2979 A x f s) = (term2980 A x f s).
Proof. exact (MK_COMB (@lem4935358) (@lem4935357 A x f s)). Qed.
Lemma lem4935360 {A : Type'} (f : A -> A) (x : A) (y : A) (s : A -> Prop) : (term2975 A f x s y) = (term2950 A f x y s).
Proof. exact (eq_refl (term2975 A f x s y)). Qed.
Lemma lem4935361 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4935362 {A : Type'} (f : A -> A) (x : A) (y : A) (s : A -> Prop) : (term2981 A f x s y) = (term2982 A f x y s).
Proof. exact (MK_COMB (@lem4935361) (@lem4935360 A f x y s)). Qed.
Lemma lem4935363 {A : Type'} (f : A -> A) (s : A -> Prop) : ((term2821 A f s) = (@CARD A s)) = ((term2821 A f s) = (@CARD A s)).
Proof. exact (eq_refl ((term2821 A f s) = (@CARD A s))). Qed.
Lemma lem4935364 {A : Type'} (x : A) (y : A) (f : A -> A) (s : A -> Prop) : (term2983 A x y f s) = (term2984 A x y f s).
Proof. exact (MK_COMB (@lem4935362 A f x y s) (@lem4935363 A f s)). Qed.
Lemma lem4935365 {A : Type'} (x : A) (f : A -> A) (s : A -> Prop) : (term2985 A x f s) = (term2986 A x f s).
Proof. exact (fun_ext (fun y : A => @lem4935364 A x y f s)). Qed.
Lemma lem4935366 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem4935367 {A : Type'} (x : A) (f : A -> A) (s : A -> Prop) : (term2974 A x f s) = (term2987 A x f s).
Proof. exact (MK_COMB (@lem4935366 A) (@lem4935365 A x f s)). Qed.
Lemma lem4935368 {A : Type'} (x : A) (f : A -> A) (s : A -> Prop) : ((term2973 A x f s) = (term2974 A x f s)) = ((term2969 A x f s) = (term2987 A x f s)).
Proof. exact (MK_COMB (@lem4935359 A x f s) (@lem4935367 A x f s)). Qed.
Lemma lem4935369 {A : Type'} (x : A) (f : A -> A) (s : A -> Prop) : (term2969 A x f s) = (term2987 A x f s).
Proof. exact (EQ_MP (@lem4935368 A x f s) (@lem4935349 A x f s)). Qed.
Lemma lem4935370 {A : Type'} (f : A -> A) (s : A -> Prop) : (term2971 A f s) = (term2988 A f s).
Proof. exact (fun_ext (fun x : A => @lem4935369 A x f s)). Qed.
Lemma lem4935371 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem4935372 {A : Type'} (f : A -> A) (s : A -> Prop) : (term2972 A f s) = (term2989 A f s).
Proof. exact (MK_COMB (@lem4935371 A) (@lem4935370 A f s)). Qed.
Lemma lem4935373 {A : Type'} (f : A -> A) (s : A -> Prop) : (term2957 A f s) = (term2989 A f s).
Proof. exact (TRANS (@lem4935345 A f s) (@lem4935372 A f s)). Qed.
Lemma lem4935374 {A : Type'} (f : A -> A) (s : A -> Prop) : (term2919 A f s) = (term2989 A f s).
Proof. exact (TRANS (@lem4935321 A f s) (@lem4935373 A f s)). Qed.
Lemma lem4935375 {A : Type'} (f : A -> A) : (term2920 A f) = (term2990 A f).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4935374 A f s)). Qed.
Lemma lem4935376 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4935377 {A : Type'} (f : A -> A) : (term2921 A f) = (term2991 A f).
Proof. exact (MK_COMB (@lem4935376 A) (@lem4935375 A f)). Qed.
Lemma lem4935379 {A B : Type'} (P : type1413 A B) : (term814 A B P) = (term815 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem4935380 {A : Type'} (P : type672 A) : (term1172 A P) = (term1173 A P).
Proof. exact (@lem4935379 (A -> Prop) A P). Qed.
Lemma lem4935381 {A : Type'} (f : A -> A) : (term2992 A f) = (term2993 A f).
Proof. exact (@lem4935380 A (term2994 A f)). Qed.
Lemma lem4935382 {A : Type'} (f : A -> A) (s : A -> Prop) : (term2995 A f s) = (term2988 A f s).
Proof. exact (eq_refl (term2995 A f s)). Qed.
Lemma lem4935383 {A : Type'} (x : A) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem4935384 {A : Type'} (f : A -> A) (s : A -> Prop) (x : A) : (term2996 A f s x) = (term2997 A f s x).
Proof. exact (MK_COMB (@lem4935382 A f s) (@lem4935383 A x)). Qed.
Lemma lem4935385 {A : Type'} (x : A) (f : A -> A) (s : A -> Prop) : (term2997 A f s x) = (term2987 A x f s).
Proof. exact (eq_refl (term2997 A f s x)). Qed.
Lemma lem4935386 {A : Type'} (x : A) (f : A -> A) (s : A -> Prop) : (term2996 A f s x) = (term2987 A x f s).
Proof. exact (TRANS (@lem4935384 A f s x) (@lem4935385 A x f s)). Qed.
Lemma lem4935387 {A : Type'} (f : A -> A) (s : A -> Prop) : (term2998 A f s) = (term2988 A f s).
Proof. exact (fun_ext (fun x : A => @lem4935386 A x f s)). Qed.
Lemma lem4935388 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem4935389 {A : Type'} (f : A -> A) (s : A -> Prop) : (term2999 A f s) = (term2989 A f s).
Proof. exact (MK_COMB (@lem4935388 A) (@lem4935387 A f s)). Qed.
Lemma lem4935390 {A : Type'} (f : A -> A) : (term3000 A f) = (term2990 A f).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4935389 A f s)). Qed.
Lemma lem4935391 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4935392 {A : Type'} (f : A -> A) : (term2992 A f) = (term2991 A f).
Proof. exact (MK_COMB (@lem4935391 A) (@lem4935390 A f)). Qed.
Lemma lem4935393 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4935394 {A : Type'} (f : A -> A) : (term3001 A f) = (term3002 A f).
Proof. exact (MK_COMB (@lem4935393) (@lem4935392 A f)). Qed.
Lemma lem4935395 {A : Type'} (f : A -> A) (s : A -> Prop) : (term2995 A f s) = (term2988 A f s).
Proof. exact (eq_refl (term2995 A f s)). Qed.
Lemma lem4935396 {A : Type'} (x : type684 A) (s : A -> Prop) : (x s) = (x s).
Proof. exact (eq_refl (x s)). Qed.
Lemma lem4935397 {A : Type'} (f : A -> A) (x : type684 A) (s : A -> Prop) : (term3003 A f x s) = (term3004 A f x s).
Proof. exact (MK_COMB (@lem4935395 A f s) (@lem4935396 A x s)). Qed.
Lemma lem4935398 {A : Type'} (x : type684 A) (f : A -> A) (s : A -> Prop) : (term3004 A f x s) = (term3005 A x f s).
Proof. exact (eq_refl (term3004 A f x s)). Qed.
Lemma lem4935399 {A : Type'} (x : type684 A) (f : A -> A) (s : A -> Prop) : (term3003 A f x s) = (term3005 A x f s).
Proof. exact (TRANS (@lem4935397 A f x s) (@lem4935398 A x f s)). Qed.
Lemma lem4935400 {A : Type'} (x : type684 A) (f : A -> A) : (term3006 A f x) = (term3007 A x f).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4935399 A x f s)). Qed.
Lemma lem4935401 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4935402 {A : Type'} (x : type684 A) (f : A -> A) : (term3008 A f x) = (term3009 A x f).
Proof. exact (MK_COMB (@lem4935401 A) (@lem4935400 A x f)). Qed.
Lemma lem4935403 {A : Type'} (f : A -> A) : (term3010 A f) = (term3011 A f).
Proof. exact (fun_ext (fun x : type684 A => @lem4935402 A x f)). Qed.
Lemma lem4935404 {A : Type'} : (@ex ((A -> Prop) -> A)) = (@ex ((A -> Prop) -> A)).
Proof. exact (eq_refl (@ex ((A -> Prop) -> A))). Qed.
Lemma lem4935405 {A : Type'} (f : A -> A) : (term2993 A f) = (term3012 A f).
Proof. exact (MK_COMB (@lem4935404 A) (@lem4935403 A f)). Qed.
Lemma lem4935406 {A : Type'} (f : A -> A) : ((term2992 A f) = (term2993 A f)) = ((term2991 A f) = (term3012 A f)).
Proof. exact (MK_COMB (@lem4935394 A f) (@lem4935405 A f)). Qed.
Lemma lem4935407 {A : Type'} (f : A -> A) : (term2991 A f) = (term3012 A f).
Proof. exact (EQ_MP (@lem4935406 A f) (@lem4935381 A f)). Qed.
Lemma lem4935409 {A B : Type'} (P : type1413 A B) : (term814 A B P) = (term815 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem4935410 {A : Type'} (P : type672 A) : (term1172 A P) = (term1173 A P).
Proof. exact (@lem4935409 (A -> Prop) A P). Qed.
Lemma lem4935411 {A : Type'} (x : type684 A) (f : A -> A) : (term3013 A x f) = (term3014 A x f).
Proof. exact (@lem4935410 A (term3015 A x f)). Qed.
Lemma lem4935412 {A : Type'} (x : type684 A) (f : A -> A) (s : A -> Prop) : (term3016 A x f s) = (term3017 A x f s).
Proof. exact (eq_refl (term3016 A x f s)). Qed.
Lemma lem4935413 {A : Type'} (y : A) : y = y.
Proof. exact (eq_refl y). Qed.
Lemma lem4935414 {A : Type'} (x : type684 A) (f : A -> A) (s : A -> Prop) (y : A) : (term3018 A x f s y) = (term3019 A x f s y).
Proof. exact (MK_COMB (@lem4935412 A x f s) (@lem4935413 A y)). Qed.
Lemma lem4935415 {A : Type'} (x : type684 A) (y : A) (f : A -> A) (s : A -> Prop) : (term3019 A x f s y) = (term3020 A x y f s).
Proof. exact (eq_refl (term3019 A x f s y)). Qed.
Lemma lem4935416 {A : Type'} (x : type684 A) (y : A) (f : A -> A) (s : A -> Prop) : (term3018 A x f s y) = (term3020 A x y f s).
Proof. exact (TRANS (@lem4935414 A x f s y) (@lem4935415 A x y f s)). Qed.
Lemma lem4935417 {A : Type'} (x : type684 A) (f : A -> A) (s : A -> Prop) : (term3021 A x f s) = (term3017 A x f s).
Proof. exact (fun_ext (fun y : A => @lem4935416 A x y f s)). Qed.
Lemma lem4935418 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem4935419 {A : Type'} (x : type684 A) (f : A -> A) (s : A -> Prop) : (term3022 A x f s) = (term3005 A x f s).
Proof. exact (MK_COMB (@lem4935418 A) (@lem4935417 A x f s)). Qed.
Lemma lem4935420 {A : Type'} (x : type684 A) (f : A -> A) : (term3023 A x f) = (term3007 A x f).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4935419 A x f s)). Qed.
Lemma lem4935421 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4935422 {A : Type'} (x : type684 A) (f : A -> A) : (term3013 A x f) = (term3009 A x f).
Proof. exact (MK_COMB (@lem4935421 A) (@lem4935420 A x f)). Qed.
Lemma lem4935423 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4935424 {A : Type'} (x : type684 A) (f : A -> A) : (term3024 A x f) = (term3025 A x f).
Proof. exact (MK_COMB (@lem4935423) (@lem4935422 A x f)). Qed.
Lemma lem4935425 {A : Type'} (x : type684 A) (f : A -> A) (s : A -> Prop) : (term3016 A x f s) = (term3017 A x f s).
Proof. exact (eq_refl (term3016 A x f s)). Qed.
Lemma lem4935426 {A : Type'} (y : type684 A) (s : A -> Prop) : (y s) = (y s).
Proof. exact (eq_refl (y s)). Qed.
Lemma lem4935427 {A : Type'} (x : type684 A) (f : A -> A) (y : type684 A) (s : A -> Prop) : (term3026 A x f y s) = (term3027 A x f y s).
Proof. exact (MK_COMB (@lem4935425 A x f s) (@lem4935426 A y s)). Qed.
Lemma lem4935428 {A : Type'} (x : type684 A) (y : type684 A) (f : A -> A) (s : A -> Prop) : (term3027 A x f y s) = (term3028 A x y f s).
Proof. exact (eq_refl (term3027 A x f y s)). Qed.
Lemma lem4935429 {A : Type'} (x : type684 A) (y : type684 A) (f : A -> A) (s : A -> Prop) : (term3026 A x f y s) = (term3028 A x y f s).
Proof. exact (TRANS (@lem4935427 A x f y s) (@lem4935428 A x y f s)). Qed.
Lemma lem4935430 {A : Type'} (x : type684 A) (y : type684 A) (f : A -> A) : (term3029 A x f y) = (term3030 A x y f).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4935429 A x y f s)). Qed.
Lemma lem4935431 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4935432 {A : Type'} (x : type684 A) (y : type684 A) (f : A -> A) : (term3031 A x f y) = (term3032 A x y f).
Proof. exact (MK_COMB (@lem4935431 A) (@lem4935430 A x y f)). Qed.
Lemma lem4935433 {A : Type'} (x : type684 A) (f : A -> A) : (term3033 A x f) = (term3034 A x f).
Proof. exact (fun_ext (fun y : type684 A => @lem4935432 A x y f)). Qed.
Lemma lem4935434 {A : Type'} : (@ex ((A -> Prop) -> A)) = (@ex ((A -> Prop) -> A)).
Proof. exact (eq_refl (@ex ((A -> Prop) -> A))). Qed.
Lemma lem4935435 {A : Type'} (x : type684 A) (f : A -> A) : (term3014 A x f) = (term3035 A x f).
Proof. exact (MK_COMB (@lem4935434 A) (@lem4935433 A x f)). Qed.
Lemma lem4935436 {A : Type'} (x : type684 A) (f : A -> A) : ((term3013 A x f) = (term3014 A x f)) = ((term3009 A x f) = (term3035 A x f)).
Proof. exact (MK_COMB (@lem4935424 A x f) (@lem4935435 A x f)). Qed.
Lemma lem4935437 {A : Type'} (x : type684 A) (f : A -> A) : (term3009 A x f) = (term3035 A x f).
Proof. exact (EQ_MP (@lem4935436 A x f) (@lem4935411 A x f)). Qed.
Lemma lem4935438 {A : Type'} (f : A -> A) : (term3011 A f) = (term3036 A f).
Proof. exact (fun_ext (fun x : type684 A => @lem4935437 A x f)). Qed.
Lemma lem4935439 {A : Type'} : (@ex ((A -> Prop) -> A)) = (@ex ((A -> Prop) -> A)).
Proof. exact (eq_refl (@ex ((A -> Prop) -> A))). Qed.
Lemma lem4935440 {A : Type'} (f : A -> A) : (term3012 A f) = (term3037 A f).
Proof. exact (MK_COMB (@lem4935439 A) (@lem4935438 A f)). Qed.
Lemma lem4935441 {A : Type'} (f : A -> A) : (term2991 A f) = (term3037 A f).
Proof. exact (TRANS (@lem4935407 A f) (@lem4935440 A f)). Qed.
Lemma lem4935442 {A : Type'} (f : A -> A) : (term2921 A f) = (term3037 A f).
Proof. exact (TRANS (@lem4935377 A f) (@lem4935441 A f)). Qed.
Lemma lem4935443 {A : Type'} : (term2922 A) = (term3038 A).
Proof. exact (fun_ext (fun f : A -> A => @lem4935442 A f)). Qed.
Lemma lem4935444 {A : Type'} : (@all (A -> A)) = (@all (A -> A)).
Proof. exact (eq_refl (@all (A -> A))). Qed.
Lemma lem4935445 {A : Type'} : (term2923 A) = (term3039 A).
Proof. exact (MK_COMB (@lem4935444 A) (@lem4935443 A)). Qed.
Lemma lem4935447 {A B : Type'} (P : type1413 A B) : (term814 A B P) = (term815 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem4935448 {A : Type'} (P : type481 A) : (term3040 A P) = (term3041 A P).
Proof. exact (@lem4935447 (A -> A) (type684 A) P). Qed.
Lemma lem4935449 {A : Type'} : (term3042 A) = (term3043 A).
Proof. exact (@lem4935448 A (term3044 A)). Qed.
Lemma lem4935450 {A : Type'} (f : A -> A) : (term3045 A f) = (term3036 A f).
Proof. exact (eq_refl (term3045 A f)). Qed.
Lemma lem4935451 {A : Type'} (x : type684 A) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem4935452 {A : Type'} (f : A -> A) (x : type684 A) : (term3046 A f x) = (term3047 A f x).
Proof. exact (MK_COMB (@lem4935450 A f) (@lem4935451 A x)). Qed.
Lemma lem4935453 {A : Type'} (x : type684 A) (f : A -> A) : (term3047 A f x) = (term3035 A x f).
Proof. exact (eq_refl (term3047 A f x)). Qed.
Lemma lem4935454 {A : Type'} (x : type684 A) (f : A -> A) : (term3046 A f x) = (term3035 A x f).
Proof. exact (TRANS (@lem4935452 A f x) (@lem4935453 A x f)). Qed.
Lemma lem4935455 {A : Type'} (f : A -> A) : (term3048 A f) = (term3036 A f).
Proof. exact (fun_ext (fun x : type684 A => @lem4935454 A x f)). Qed.
Lemma lem4935456 {A : Type'} : (@ex ((A -> Prop) -> A)) = (@ex ((A -> Prop) -> A)).
Proof. exact (eq_refl (@ex ((A -> Prop) -> A))). Qed.
Lemma lem4935457 {A : Type'} (f : A -> A) : (term3049 A f) = (term3037 A f).
Proof. exact (MK_COMB (@lem4935456 A) (@lem4935455 A f)). Qed.
Lemma lem4935458 {A : Type'} : (term3050 A) = (term3038 A).
Proof. exact (fun_ext (fun f : A -> A => @lem4935457 A f)). Qed.
Lemma lem4935459 {A : Type'} : (@all (A -> A)) = (@all (A -> A)).
Proof. exact (eq_refl (@all (A -> A))). Qed.
Lemma lem4935460 {A : Type'} : (term3042 A) = (term3039 A).
Proof. exact (MK_COMB (@lem4935459 A) (@lem4935458 A)). Qed.
Lemma lem4935461 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4935462 {A : Type'} : (term3051 A) = (term3052 A).
Proof. exact (MK_COMB (@lem4935461) (@lem4935460 A)). Qed.
Lemma lem4935463 {A : Type'} (f : A -> A) : (term3045 A f) = (term3036 A f).
Proof. exact (eq_refl (term3045 A f)). Qed.
Lemma lem4935464 {A : Type'} (x : type485 A) (f : A -> A) : (x f) = (x f).
Proof. exact (eq_refl (x f)). Qed.
Lemma lem4935465 {A : Type'} (x : type485 A) (f : A -> A) : (term3053 A x f) = (term3054 A x f).
Proof. exact (MK_COMB (@lem4935463 A f) (@lem4935464 A x f)). Qed.
Lemma lem4935466 {A : Type'} (x : type485 A) (f : A -> A) : (term3054 A x f) = (term3055 A x f).
Proof. exact (eq_refl (term3054 A x f)). Qed.
Lemma lem4935467 {A : Type'} (x : type485 A) (f : A -> A) : (term3053 A x f) = (term3055 A x f).
Proof. exact (TRANS (@lem4935465 A x f) (@lem4935466 A x f)). Qed.
Lemma lem4935468 {A : Type'} (x : type485 A) : (term3056 A x) = (term3057 A x).
Proof. exact (fun_ext (fun f : A -> A => @lem4935467 A x f)). Qed.
Lemma lem4935469 {A : Type'} : (@all (A -> A)) = (@all (A -> A)).
Proof. exact (eq_refl (@all (A -> A))). Qed.
Lemma lem4935470 {A : Type'} (x : type485 A) : (term3058 A x) = (term3059 A x).
Proof. exact (MK_COMB (@lem4935469 A) (@lem4935468 A x)). Qed.
Lemma lem4935471 {A : Type'} : (term3060 A) = (term3061 A).
Proof. exact (fun_ext (fun x : type485 A => @lem4935470 A x)). Qed.
Lemma lem4935472 {A : Type'} : (@ex ((A -> A) -> (A -> Prop) -> A)) = (@ex ((A -> A) -> (A -> Prop) -> A)).
Proof. exact (eq_refl (@ex ((A -> A) -> (A -> Prop) -> A))). Qed.
Lemma lem4935473 {A : Type'} : (term3043 A) = (term3062 A).
Proof. exact (MK_COMB (@lem4935472 A) (@lem4935471 A)). Qed.
Lemma lem4935474 {A : Type'} : ((term3042 A) = (term3043 A)) = ((term3039 A) = (term3062 A)).
Proof. exact (MK_COMB (@lem4935462 A) (@lem4935473 A)). Qed.
Lemma lem4935475 {A : Type'} : (term3039 A) = (term3062 A).
Proof. exact (EQ_MP (@lem4935474 A) (@lem4935449 A)). Qed.
Lemma lem4935477 {A B : Type'} (P : type1413 A B) : (term814 A B P) = (term815 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem4935478 {A : Type'} (P : type481 A) : (term3040 A P) = (term3041 A P).
Proof. exact (@lem4935477 (A -> A) (type684 A) P). Qed.
Lemma lem4935479 {A : Type'} (x : type485 A) : (term3063 A x) = (term3064 A x).
Proof. exact (@lem4935478 A (term3065 A x)). Qed.
Lemma lem4935480 {A : Type'} (x : type485 A) (f : A -> A) : (term3066 A x f) = (term3067 A x f).
Proof. exact (eq_refl (term3066 A x f)). Qed.
Lemma lem4935481 {A : Type'} (y : type684 A) : y = y.
Proof. exact (eq_refl y). Qed.
Lemma lem4935482 {A : Type'} (x : type485 A) (f : A -> A) (y : type684 A) : (term3068 A x f y) = (term3069 A x f y).
Proof. exact (MK_COMB (@lem4935480 A x f) (@lem4935481 A y)). Qed.
Lemma lem4935483 {A : Type'} (x : type485 A) (y : type684 A) (f : A -> A) : (term3069 A x f y) = (term3070 A x y f).
Proof. exact (eq_refl (term3069 A x f y)). Qed.
Lemma lem4935484 {A : Type'} (x : type485 A) (y : type684 A) (f : A -> A) : (term3068 A x f y) = (term3070 A x y f).
Proof. exact (TRANS (@lem4935482 A x f y) (@lem4935483 A x y f)). Qed.
Lemma lem4935485 {A : Type'} (x : type485 A) (f : A -> A) : (term3071 A x f) = (term3067 A x f).
Proof. exact (fun_ext (fun y : type684 A => @lem4935484 A x y f)). Qed.
Lemma lem4935486 {A : Type'} : (@ex ((A -> Prop) -> A)) = (@ex ((A -> Prop) -> A)).
Proof. exact (eq_refl (@ex ((A -> Prop) -> A))). Qed.
Lemma lem4935487 {A : Type'} (x : type485 A) (f : A -> A) : (term3072 A x f) = (term3055 A x f).
Proof. exact (MK_COMB (@lem4935486 A) (@lem4935485 A x f)). Qed.
Lemma lem4935488 {A : Type'} (x : type485 A) : (term3073 A x) = (term3057 A x).
Proof. exact (fun_ext (fun f : A -> A => @lem4935487 A x f)). Qed.
Lemma lem4935489 {A : Type'} : (@all (A -> A)) = (@all (A -> A)).
Proof. exact (eq_refl (@all (A -> A))). Qed.
Lemma lem4935490 {A : Type'} (x : type485 A) : (term3063 A x) = (term3059 A x).
Proof. exact (MK_COMB (@lem4935489 A) (@lem4935488 A x)). Qed.
Lemma lem4935491 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4935492 {A : Type'} (x : type485 A) : (term3074 A x) = (term3075 A x).
Proof. exact (MK_COMB (@lem4935491) (@lem4935490 A x)). Qed.
Lemma lem4935493 {A : Type'} (x : type485 A) (f : A -> A) : (term3066 A x f) = (term3067 A x f).
Proof. exact (eq_refl (term3066 A x f)). Qed.
Lemma lem4935494 {A : Type'} (y : type485 A) (f : A -> A) : (y f) = (y f).
Proof. exact (eq_refl (y f)). Qed.
Lemma lem4935495 {A : Type'} (x : type485 A) (y : type485 A) (f : A -> A) : (term3076 A x y f) = (term3077 A x y f).
Proof. exact (MK_COMB (@lem4935493 A x f) (@lem4935494 A y f)). Qed.
Lemma lem4935496 {A : Type'} (x : type485 A) (y : type485 A) (f : A -> A) : (term3077 A x y f) = (term3078 A x y f).
Proof. exact (eq_refl (term3077 A x y f)). Qed.
Lemma lem4935497 {A : Type'} (x : type485 A) (y : type485 A) (f : A -> A) : (term3076 A x y f) = (term3078 A x y f).
Proof. exact (TRANS (@lem4935495 A x y f) (@lem4935496 A x y f)). Qed.
Lemma lem4935498 {A : Type'} (x : type485 A) (y : type485 A) : (term3079 A x y) = (term3080 A x y).
Proof. exact (fun_ext (fun f : A -> A => @lem4935497 A x y f)). Qed.
Lemma lem4935499 {A : Type'} : (@all (A -> A)) = (@all (A -> A)).
Proof. exact (eq_refl (@all (A -> A))). Qed.
Lemma lem4935500 {A : Type'} (x : type485 A) (y : type485 A) : (term3081 A x y) = (term3082 A x y).
Proof. exact (MK_COMB (@lem4935499 A) (@lem4935498 A x y)). Qed.
Lemma lem4935501 {A : Type'} (x : type485 A) : (term3083 A x) = (term3084 A x).
Proof. exact (fun_ext (fun y : type485 A => @lem4935500 A x y)). Qed.
Lemma lem4935502 {A : Type'} : (@ex ((A -> A) -> (A -> Prop) -> A)) = (@ex ((A -> A) -> (A -> Prop) -> A)).
Proof. exact (eq_refl (@ex ((A -> A) -> (A -> Prop) -> A))). Qed.
Lemma lem4935503 {A : Type'} (x : type485 A) : (term3064 A x) = (term3085 A x).
Proof. exact (MK_COMB (@lem4935502 A) (@lem4935501 A x)). Qed.
Lemma lem4935504 {A : Type'} (x : type485 A) : ((term3063 A x) = (term3064 A x)) = ((term3059 A x) = (term3085 A x)).
Proof. exact (MK_COMB (@lem4935492 A x) (@lem4935503 A x)). Qed.
Lemma lem4935505 {A : Type'} (x : type485 A) : (term3059 A x) = (term3085 A x).
Proof. exact (EQ_MP (@lem4935504 A x) (@lem4935479 A x)). Qed.
Lemma lem4935506 {A : Type'} : (term3061 A) = (term3086 A).
Proof. exact (fun_ext (fun x : type485 A => @lem4935505 A x)). Qed.
Lemma lem4935507 {A : Type'} : (@ex ((A -> A) -> (A -> Prop) -> A)) = (@ex ((A -> A) -> (A -> Prop) -> A)).
Proof. exact (eq_refl (@ex ((A -> A) -> (A -> Prop) -> A))). Qed.
Lemma lem4935508 {A : Type'} : (term3062 A) = (term3087 A).
Proof. exact (MK_COMB (@lem4935507 A) (@lem4935506 A)). Qed.
Lemma lem4935509 {A : Type'} : (term3039 A) = (term3087 A).
Proof. exact (TRANS (@lem4935475 A) (@lem4935508 A)). Qed.
Lemma lem4935511 {A : Type'} : (term2923 A) = (term3087 A).
Proof. exact (TRANS (@lem4935445 A) (@lem4935509 A)). Qed.
Lemma lem4935512 {A : Type'} : (term2706 A) = (term3087 A).
Proof. exact (TRANS (@lem4935160 A) (@lem4935511 A)). Qed.
Lemma lem4935513 {A : Type'} (h1 : term2706 A) : term3087 A.
Proof. exact (EQ_MP (@lem4935512 A) (@lem4934979 A h1)). Qed.
Lemma lem4935528 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) (y : A) : (term3088 A B s f x y) = (term3089 A B s f x y).
Proof. exact (@lem17362 (term694 A B s x f y) (x = y)). Qed.
Lemma lem4935529 {A : Type'} (P : A -> Prop) : (term2420 A P) = (term2421 A P).
Proof. exact (@lem18392 A P). Qed.
Lemma lem4935530 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) : (term3090 A B s f x) = (term3091 A B s f x).
Proof. exact (@lem4935529 A (term1439 A B s f x)). Qed.
Lemma lem4935531 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) (y : A) : (term3092 A B s f x y) = (term1438 A B s f x y).
Proof. exact (eq_refl (term3092 A B s f x y)). Qed.
Lemma lem4935532 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem4935533 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) (y : A) : (term3093 A B s f x y) = (term3088 A B s f x y).
Proof. exact (MK_COMB (@lem4935532) (@lem4935531 A B s f x y)). Qed.
Lemma lem4935534 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) (y : A) : (term3093 A B s f x y) = (term3089 A B s f x y).
Proof. exact (TRANS (@lem4935533 A B s f x y) (@lem4935528 A B s f x y)). Qed.
Lemma lem4935535 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) : (term3094 A B s f x) = (term3095 A B s f x).
Proof. exact (fun_ext (fun y : A => @lem4935534 A B s f x y)). Qed.
Lemma lem4935536 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem4935537 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) : (term3091 A B s f x) = (term3096 A B s f x).
Proof. exact (MK_COMB (@lem4935536 A) (@lem4935535 A B s f x)). Qed.
Lemma lem4935538 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) : (term3090 A B s f x) = (term3096 A B s f x).
Proof. exact (TRANS (@lem4935530 A B s f x) (@lem4935537 A B s f x)). Qed.
Lemma lem4935539 {A : Type'} (P : A -> Prop) : (term2420 A P) = (term2421 A P).
Proof. exact (@lem18392 A P). Qed.
Lemma lem4935540 {A B : Type'} (s : A -> Prop) (f : A -> B) : (term3097 A B s f) = (term3098 A B s f).
Proof. exact (@lem4935539 A (term1441 A B s f)). Qed.
Lemma lem4935541 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) : (term3099 A B s f x) = (term1440 A B s f x).
Proof. exact (eq_refl (term3099 A B s f x)). Qed.
Lemma lem4935542 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem4935543 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) : (term3100 A B s f x) = (term3090 A B s f x).
Proof. exact (MK_COMB (@lem4935542) (@lem4935541 A B s f x)). Qed.
Lemma lem4935544 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) : (term3100 A B s f x) = (term3096 A B s f x).
Proof. exact (TRANS (@lem4935543 A B s f x) (@lem4935538 A B s f x)). Qed.
Lemma lem4935545 {A B : Type'} (s : A -> Prop) (f : A -> B) : (term3101 A B s f) = (term3102 A B s f).
Proof. exact (fun_ext (fun x : A => @lem4935544 A B s f x)). Qed.
Lemma lem4935546 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem4935547 {A B : Type'} (s : A -> Prop) (f : A -> B) : (term3098 A B s f) = (term3103 A B s f).
Proof. exact (MK_COMB (@lem4935546 A) (@lem4935545 A B s f)). Qed.
Lemma lem4935548 {A B : Type'} (s : A -> Prop) (f : A -> B) : (term3097 A B s f) = (term3103 A B s f).
Proof. exact (TRANS (@lem4935540 A B s f) (@lem4935547 A B s f)). Qed.
Lemma lem4935549 {A : Type'} (s : A -> Prop) : (term1224 A s) = (term1224 A s).
Proof. exact (eq_refl (term1224 A s)). Qed.
Lemma lem4935550 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4935551 {A B : Type'} (s : A -> Prop) (f : A -> B) : (term3104 A B s f) = (term3105 A B s f).
Proof. exact (MK_COMB (@lem4935550) (@lem4935548 A B s f)). Qed.
Lemma lem4935552 {A B : Type'} (f : A -> B) (s : A -> Prop) : (term3106 A B f s) = (term3107 A B f s).
Proof. exact (MK_COMB (@lem4935551 A B s f) (@lem4935549 A s)). Qed.
Lemma lem4935553 {A B : Type'} (f : A -> B) (s : A -> Prop) : (term3108 A B f s) = (term3106 A B f s).
Proof. exact (@lem17045 (term696 A B s f) (@FINITE A s)). Qed.
Lemma lem4935554 {A B : Type'} (f : A -> B) (s : A -> Prop) : (term3108 A B f s) = (term3107 A B f s).
Proof. exact (TRANS (@lem4935553 A B f s) (@lem4935552 A B f s)). Qed.
Lemma lem4935555 {A B : Type'} (f : A -> B) (s : A -> Prop) : ((term2873 A B f s) = (@CARD A s)) = ((term2873 A B f s) = (@CARD A s)).
Proof. exact (eq_refl ((term2873 A B f s) = (@CARD A s))). Qed.
Lemma lem4935556 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4935557 {A B : Type'} (f : A -> B) (s : A -> Prop) : (term3109 A B f s) = (term3110 A B f s).
Proof. exact (MK_COMB (@lem4935556) (@lem4935554 A B f s)). Qed.
Lemma lem4935558 {A B : Type'} (f : A -> B) (s : A -> Prop) : (term3111 A B f s) = (term3112 A B f s).
Proof. exact (MK_COMB (@lem4935557 A B f s) (@lem4935555 A B f s)). Qed.
Lemma lem4935559 {A B : Type'} (f : A -> B) (s : A -> Prop) : (term2877 A B f s) = (term3111 A B f s).
Proof. exact (@lem17265 (term2875 A B f s) ((term2873 A B f s) = (@CARD A s))). Qed.
Lemma lem4935560 {A B : Type'} (f : A -> B) (s : A -> Prop) : (term2877 A B f s) = (term3112 A B f s).
Proof. exact (TRANS (@lem4935559 A B f s) (@lem4935558 A B f s)). Qed.
Lemma lem4935561 {A B : Type'} (f : A -> B) : (term2878 A B f) = (term3113 A B f).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4935560 A B f s)). Qed.
Lemma lem4935562 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4935563 {A B : Type'} (f : A -> B) : (term2879 A B f) = (term3114 A B f).
Proof. exact (MK_COMB (@lem4935562 A) (@lem4935561 A B f)). Qed.
Lemma lem4935564 {A B : Type'} : (term2880 A B) = (term3115 A B).
Proof. exact (fun_ext (fun f : A -> B => @lem4935563 A B f)). Qed.
Lemma lem4935565 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem4935566 {A B : Type'} : (term2705 A B) = (term3116 A B).
Proof. exact (MK_COMB (@lem4935565 A B) (@lem4935564 A B)). Qed.
Lemma lem4935673 {A : Type'} (P : A -> Prop) (Q : Prop) : (term1154 A P Q) = (term1155 A P Q).
Proof. exact (EQ_MP (@lem18905 A P Q) (@lem18904 A P Q)). Qed.
Lemma lem4935674 {A : Type'} (P : A -> Prop) (Q : Prop) : (term1154 A P Q) = (term1155 A P Q).
Proof. exact (@lem4935673 A P Q). Qed.
Lemma lem4935675 {A B : Type'} (f : A -> B) (s : A -> Prop) : (term3117 A B f s) = (term3118 A B f s).
Proof. exact (@lem4935674 A (term3102 A B s f) (term1224 A s)). Qed.
Lemma lem4935676 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) : (term3119 A B s f x) = (term3096 A B s f x).
Proof. exact (eq_refl (term3119 A B s f x)). Qed.
Lemma lem4935677 {A B : Type'} (s : A -> Prop) (f : A -> B) : (term3120 A B s f) = (term3102 A B s f).
Proof. exact (fun_ext (fun x : A => @lem4935676 A B s f x)). Qed.
Lemma lem4935678 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem4935679 {A B : Type'} (s : A -> Prop) (f : A -> B) : (term3121 A B s f) = (term3103 A B s f).
Proof. exact (MK_COMB (@lem4935678 A) (@lem4935677 A B s f)). Qed.
Lemma lem4935680 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4935681 {A B : Type'} (s : A -> Prop) (f : A -> B) : (term3122 A B s f) = (term3105 A B s f).
Proof. exact (MK_COMB (@lem4935680) (@lem4935679 A B s f)). Qed.
Lemma lem4935682 {A : Type'} (s : A -> Prop) : (term1224 A s) = (term1224 A s).
Proof. exact (eq_refl (term1224 A s)). Qed.
Lemma lem4935683 {A B : Type'} (f : A -> B) (s : A -> Prop) : (term3117 A B f s) = (term3107 A B f s).
Proof. exact (MK_COMB (@lem4935681 A B s f) (@lem4935682 A s)). Qed.
Lemma lem4935684 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4935685 {A B : Type'} (f : A -> B) (s : A -> Prop) : (term3123 A B f s) = (term3124 A B f s).
Proof. exact (MK_COMB (@lem4935684) (@lem4935683 A B f s)). Qed.
Lemma lem4935686 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) : (term3119 A B s f x) = (term3096 A B s f x).
Proof. exact (eq_refl (term3119 A B s f x)). Qed.
Lemma lem4935687 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4935688 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) : (term3125 A B s f x) = (term3126 A B s f x).
Proof. exact (MK_COMB (@lem4935687) (@lem4935686 A B s f x)). Qed.
Lemma lem4935689 {A : Type'} (s : A -> Prop) : (term1224 A s) = (term1224 A s).
Proof. exact (eq_refl (term1224 A s)). Qed.
Lemma lem4935690 {A B : Type'} (f : A -> B) (x : A) (s : A -> Prop) : (term3127 A B f x s) = (term3128 A B f x s).
Proof. exact (MK_COMB (@lem4935688 A B s f x) (@lem4935689 A s)). Qed.
Lemma lem4935691 {A B : Type'} (f : A -> B) (s : A -> Prop) : (term3129 A B f s) = (term3130 A B f s).
Proof. exact (fun_ext (fun x : A => @lem4935690 A B f x s)). Qed.
Lemma lem4935692 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem4935693 {A B : Type'} (f : A -> B) (s : A -> Prop) : (term3118 A B f s) = (term3131 A B f s).
Proof. exact (MK_COMB (@lem4935692 A) (@lem4935691 A B f s)). Qed.
Lemma lem4935694 {A B : Type'} (f : A -> B) (s : A -> Prop) : ((term3117 A B f s) = (term3118 A B f s)) = ((term3107 A B f s) = (term3131 A B f s)).
Proof. exact (MK_COMB (@lem4935685 A B f s) (@lem4935693 A B f s)). Qed.
Lemma lem4935695 {A B : Type'} (f : A -> B) (s : A -> Prop) : (term3107 A B f s) = (term3131 A B f s).
Proof. exact (EQ_MP (@lem4935694 A B f s) (@lem4935675 A B f s)). Qed.
Lemma lem4935697 {A : Type'} (P : A -> Prop) (Q : Prop) : (term1154 A P Q) = (term1155 A P Q).
Proof. exact (EQ_MP (@lem18905 A P Q) (@lem18904 A P Q)). Qed.
Lemma lem4935698 {A : Type'} (P : A -> Prop) (Q : Prop) : (term1154 A P Q) = (term1155 A P Q).
Proof. exact (@lem4935697 A P Q). Qed.
Lemma lem4935699 {A B : Type'} (f : A -> B) (x : A) (s : A -> Prop) : (term3132 A B f x s) = (term3133 A B f x s).
Proof. exact (@lem4935698 A (term3095 A B s f x) (term1224 A s)). Qed.
Lemma lem4935700 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) (y : A) : (term3134 A B s f x y) = (term3089 A B s f x y).
Proof. exact (eq_refl (term3134 A B s f x y)). Qed.
Lemma lem4935701 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) : (term3135 A B s f x) = (term3095 A B s f x).
Proof. exact (fun_ext (fun y : A => @lem4935700 A B s f x y)). Qed.
Lemma lem4935702 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem4935703 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) : (term3136 A B s f x) = (term3096 A B s f x).
Proof. exact (MK_COMB (@lem4935702 A) (@lem4935701 A B s f x)). Qed.
Lemma lem4935704 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4935705 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) : (term3137 A B s f x) = (term3126 A B s f x).
Proof. exact (MK_COMB (@lem4935704) (@lem4935703 A B s f x)). Qed.
Lemma lem4935706 {A : Type'} (s : A -> Prop) : (term1224 A s) = (term1224 A s).
Proof. exact (eq_refl (term1224 A s)). Qed.
Lemma lem4935707 {A B : Type'} (f : A -> B) (x : A) (s : A -> Prop) : (term3132 A B f x s) = (term3128 A B f x s).
Proof. exact (MK_COMB (@lem4935705 A B s f x) (@lem4935706 A s)). Qed.
Lemma lem4935708 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4935709 {A B : Type'} (f : A -> B) (x : A) (s : A -> Prop) : (term3138 A B f x s) = (term3139 A B f x s).
Proof. exact (MK_COMB (@lem4935708) (@lem4935707 A B f x s)). Qed.
Lemma lem4935710 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) (y : A) : (term3134 A B s f x y) = (term3089 A B s f x y).
Proof. exact (eq_refl (term3134 A B s f x y)). Qed.
Lemma lem4935711 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4935712 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) (y : A) : (term3140 A B s f x y) = (term3141 A B s f x y).
Proof. exact (MK_COMB (@lem4935711) (@lem4935710 A B s f x y)). Qed.
Lemma lem4935713 {A : Type'} (s : A -> Prop) : (term1224 A s) = (term1224 A s).
Proof. exact (eq_refl (term1224 A s)). Qed.
Lemma lem4935714 {A B : Type'} (f : A -> B) (x : A) (y : A) (s : A -> Prop) : (term3142 A B f x y s) = (term3143 A B f x y s).
Proof. exact (MK_COMB (@lem4935712 A B s f x y) (@lem4935713 A s)). Qed.
Lemma lem4935715 {A B : Type'} (f : A -> B) (x : A) (s : A -> Prop) : (term3144 A B f x s) = (term3145 A B f x s).
Proof. exact (fun_ext (fun y : A => @lem4935714 A B f x y s)). Qed.
Lemma lem4935716 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem4935717 {A B : Type'} (f : A -> B) (x : A) (s : A -> Prop) : (term3133 A B f x s) = (term3146 A B f x s).
Proof. exact (MK_COMB (@lem4935716 A) (@lem4935715 A B f x s)). Qed.
Lemma lem4935718 {A B : Type'} (f : A -> B) (x : A) (s : A -> Prop) : ((term3132 A B f x s) = (term3133 A B f x s)) = ((term3128 A B f x s) = (term3146 A B f x s)).
Proof. exact (MK_COMB (@lem4935709 A B f x s) (@lem4935717 A B f x s)). Qed.
Lemma lem4935719 {A B : Type'} (f : A -> B) (x : A) (s : A -> Prop) : (term3128 A B f x s) = (term3146 A B f x s).
Proof. exact (EQ_MP (@lem4935718 A B f x s) (@lem4935699 A B f x s)). Qed.
Lemma lem4935720 {A B : Type'} (f : A -> B) (s : A -> Prop) : (term3130 A B f s) = (term3147 A B f s).
Proof. exact (fun_ext (fun x : A => @lem4935719 A B f x s)). Qed.
Lemma lem4935721 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem4935722 {A B : Type'} (f : A -> B) (s : A -> Prop) : (term3131 A B f s) = (term3148 A B f s).
Proof. exact (MK_COMB (@lem4935721 A) (@lem4935720 A B f s)). Qed.
Lemma lem4935723 {A B : Type'} (f : A -> B) (s : A -> Prop) : (term3107 A B f s) = (term3148 A B f s).
Proof. exact (TRANS (@lem4935695 A B f s) (@lem4935722 A B f s)). Qed.
Lemma lem4935724 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4935725 {A B : Type'} (f : A -> B) (s : A -> Prop) : (term3110 A B f s) = (term3149 A B f s).
Proof. exact (MK_COMB (@lem4935724) (@lem4935723 A B f s)). Qed.
Lemma lem4935726 {A B : Type'} (f : A -> B) (s : A -> Prop) : ((term2873 A B f s) = (@CARD A s)) = ((term2873 A B f s) = (@CARD A s)).
Proof. exact (eq_refl ((term2873 A B f s) = (@CARD A s))). Qed.
Lemma lem4935727 {A B : Type'} (f : A -> B) (s : A -> Prop) : (term3112 A B f s) = (term3150 A B f s).
Proof. exact (MK_COMB (@lem4935725 A B f s) (@lem4935726 A B f s)). Qed.
Lemma lem4935729 {A : Type'} (P : A -> Prop) (Q : Prop) : (term1154 A P Q) = (term1155 A P Q).
Proof. exact (EQ_MP (@lem18905 A P Q) (@lem18904 A P Q)). Qed.
Lemma lem4935730 {A : Type'} (P : A -> Prop) (Q : Prop) : (term1154 A P Q) = (term1155 A P Q).
Proof. exact (@lem4935729 A P Q). Qed.
Lemma lem4935731 {A B : Type'} (f : A -> B) (s : A -> Prop) : (term3151 A B f s) = (term3152 A B f s).
Proof. exact (@lem4935730 A (term3147 A B f s) ((term2873 A B f s) = (@CARD A s))). Qed.
Lemma lem4935732 {A B : Type'} (f : A -> B) (x : A) (s : A -> Prop) : (term3153 A B f s x) = (term3146 A B f x s).
Proof. exact (eq_refl (term3153 A B f s x)). Qed.
Lemma lem4935733 {A B : Type'} (f : A -> B) (s : A -> Prop) : (term3154 A B f s) = (term3147 A B f s).
Proof. exact (fun_ext (fun x : A => @lem4935732 A B f x s)). Qed.
Lemma lem4935734 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem4935735 {A B : Type'} (f : A -> B) (s : A -> Prop) : (term3155 A B f s) = (term3148 A B f s).
Proof. exact (MK_COMB (@lem4935734 A) (@lem4935733 A B f s)). Qed.
Lemma lem4935736 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4935737 {A B : Type'} (f : A -> B) (s : A -> Prop) : (term3156 A B f s) = (term3149 A B f s).
Proof. exact (MK_COMB (@lem4935736) (@lem4935735 A B f s)). Qed.
Lemma lem4935738 {A B : Type'} (f : A -> B) (s : A -> Prop) : ((term2873 A B f s) = (@CARD A s)) = ((term2873 A B f s) = (@CARD A s)).
Proof. exact (eq_refl ((term2873 A B f s) = (@CARD A s))). Qed.
Lemma lem4935739 {A B : Type'} (f : A -> B) (s : A -> Prop) : (term3151 A B f s) = (term3150 A B f s).
Proof. exact (MK_COMB (@lem4935737 A B f s) (@lem4935738 A B f s)). Qed.
Lemma lem4935740 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4935741 {A B : Type'} (f : A -> B) (s : A -> Prop) : (term3157 A B f s) = (term3158 A B f s).
Proof. exact (MK_COMB (@lem4935740) (@lem4935739 A B f s)). Qed.
Lemma lem4935742 {A B : Type'} (f : A -> B) (x : A) (s : A -> Prop) : (term3153 A B f s x) = (term3146 A B f x s).
Proof. exact (eq_refl (term3153 A B f s x)). Qed.
Lemma lem4935743 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4935744 {A B : Type'} (f : A -> B) (x : A) (s : A -> Prop) : (term3159 A B f s x) = (term3160 A B f x s).
Proof. exact (MK_COMB (@lem4935743) (@lem4935742 A B f x s)). Qed.
Lemma lem4935745 {A B : Type'} (f : A -> B) (s : A -> Prop) : ((term2873 A B f s) = (@CARD A s)) = ((term2873 A B f s) = (@CARD A s)).
Proof. exact (eq_refl ((term2873 A B f s) = (@CARD A s))). Qed.
Lemma lem4935746 {A B : Type'} (x : A) (f : A -> B) (s : A -> Prop) : (term3161 A B x f s) = (term3162 A B x f s).
Proof. exact (MK_COMB (@lem4935744 A B f x s) (@lem4935745 A B f s)). Qed.
Lemma lem4935747 {A B : Type'} (f : A -> B) (s : A -> Prop) : (term3163 A B f s) = (term3164 A B f s).
Proof. exact (fun_ext (fun x : A => @lem4935746 A B x f s)). Qed.
Lemma lem4935748 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem4935749 {A B : Type'} (f : A -> B) (s : A -> Prop) : (term3152 A B f s) = (term3165 A B f s).
Proof. exact (MK_COMB (@lem4935748 A) (@lem4935747 A B f s)). Qed.
Lemma lem4935750 {A B : Type'} (f : A -> B) (s : A -> Prop) : ((term3151 A B f s) = (term3152 A B f s)) = ((term3150 A B f s) = (term3165 A B f s)).
Proof. exact (MK_COMB (@lem4935741 A B f s) (@lem4935749 A B f s)). Qed.
Lemma lem4935751 {A B : Type'} (f : A -> B) (s : A -> Prop) : (term3150 A B f s) = (term3165 A B f s).
Proof. exact (EQ_MP (@lem4935750 A B f s) (@lem4935731 A B f s)). Qed.
Lemma lem4935753 {A : Type'} (P : A -> Prop) (Q : Prop) : (term1154 A P Q) = (term1155 A P Q).
Proof. exact (EQ_MP (@lem18905 A P Q) (@lem18904 A P Q)). Qed.
Lemma lem4935754 {A : Type'} (P : A -> Prop) (Q : Prop) : (term1154 A P Q) = (term1155 A P Q).
Proof. exact (@lem4935753 A P Q). Qed.
Lemma lem4935755 {A B : Type'} (x : A) (f : A -> B) (s : A -> Prop) : (term3166 A B x f s) = (term3167 A B x f s).
Proof. exact (@lem4935754 A (term3145 A B f x s) ((term2873 A B f s) = (@CARD A s))). Qed.
Lemma lem4935756 {A B : Type'} (f : A -> B) (x : A) (y : A) (s : A -> Prop) : (term3168 A B f x s y) = (term3143 A B f x y s).
Proof. exact (eq_refl (term3168 A B f x s y)). Qed.
Lemma lem4935757 {A B : Type'} (f : A -> B) (x : A) (s : A -> Prop) : (term3169 A B f x s) = (term3145 A B f x s).
Proof. exact (fun_ext (fun y : A => @lem4935756 A B f x y s)). Qed.
Lemma lem4935758 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem4935759 {A B : Type'} (f : A -> B) (x : A) (s : A -> Prop) : (term3170 A B f x s) = (term3146 A B f x s).
Proof. exact (MK_COMB (@lem4935758 A) (@lem4935757 A B f x s)). Qed.
Lemma lem4935760 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4935761 {A B : Type'} (f : A -> B) (x : A) (s : A -> Prop) : (term3171 A B f x s) = (term3160 A B f x s).
Proof. exact (MK_COMB (@lem4935760) (@lem4935759 A B f x s)). Qed.
Lemma lem4935762 {A B : Type'} (f : A -> B) (s : A -> Prop) : ((term2873 A B f s) = (@CARD A s)) = ((term2873 A B f s) = (@CARD A s)).
Proof. exact (eq_refl ((term2873 A B f s) = (@CARD A s))). Qed.
Lemma lem4935763 {A B : Type'} (x : A) (f : A -> B) (s : A -> Prop) : (term3166 A B x f s) = (term3162 A B x f s).
Proof. exact (MK_COMB (@lem4935761 A B f x s) (@lem4935762 A B f s)). Qed.
Lemma lem4935764 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4935765 {A B : Type'} (x : A) (f : A -> B) (s : A -> Prop) : (term3172 A B x f s) = (term3173 A B x f s).
Proof. exact (MK_COMB (@lem4935764) (@lem4935763 A B x f s)). Qed.
Lemma lem4935766 {A B : Type'} (f : A -> B) (x : A) (y : A) (s : A -> Prop) : (term3168 A B f x s y) = (term3143 A B f x y s).
Proof. exact (eq_refl (term3168 A B f x s y)). Qed.
Lemma lem4935767 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4935768 {A B : Type'} (f : A -> B) (x : A) (y : A) (s : A -> Prop) : (term3174 A B f x s y) = (term3175 A B f x y s).
Proof. exact (MK_COMB (@lem4935767) (@lem4935766 A B f x y s)). Qed.
Lemma lem4935769 {A B : Type'} (f : A -> B) (s : A -> Prop) : ((term2873 A B f s) = (@CARD A s)) = ((term2873 A B f s) = (@CARD A s)).
Proof. exact (eq_refl ((term2873 A B f s) = (@CARD A s))). Qed.
Lemma lem4935770 {A B : Type'} (x : A) (y : A) (f : A -> B) (s : A -> Prop) : (term3176 A B x y f s) = (term3177 A B x y f s).
Proof. exact (MK_COMB (@lem4935768 A B f x y s) (@lem4935769 A B f s)). Qed.
Lemma lem4935771 {A B : Type'} (x : A) (f : A -> B) (s : A -> Prop) : (term3178 A B x f s) = (term3179 A B x f s).
Proof. exact (fun_ext (fun y : A => @lem4935770 A B x y f s)). Qed.
Lemma lem4935772 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem4935773 {A B : Type'} (x : A) (f : A -> B) (s : A -> Prop) : (term3167 A B x f s) = (term3180 A B x f s).
Proof. exact (MK_COMB (@lem4935772 A) (@lem4935771 A B x f s)). Qed.
Lemma lem4935774 {A B : Type'} (x : A) (f : A -> B) (s : A -> Prop) : ((term3166 A B x f s) = (term3167 A B x f s)) = ((term3162 A B x f s) = (term3180 A B x f s)).
Proof. exact (MK_COMB (@lem4935765 A B x f s) (@lem4935773 A B x f s)). Qed.
Lemma lem4935775 {A B : Type'} (x : A) (f : A -> B) (s : A -> Prop) : (term3162 A B x f s) = (term3180 A B x f s).
Proof. exact (EQ_MP (@lem4935774 A B x f s) (@lem4935755 A B x f s)). Qed.
Lemma lem4935776 {A B : Type'} (f : A -> B) (s : A -> Prop) : (term3164 A B f s) = (term3181 A B f s).
Proof. exact (fun_ext (fun x : A => @lem4935775 A B x f s)). Qed.
Lemma lem4935777 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem4935778 {A B : Type'} (f : A -> B) (s : A -> Prop) : (term3165 A B f s) = (term3182 A B f s).
Proof. exact (MK_COMB (@lem4935777 A) (@lem4935776 A B f s)). Qed.
Lemma lem4935779 {A B : Type'} (f : A -> B) (s : A -> Prop) : (term3150 A B f s) = (term3182 A B f s).
Proof. exact (TRANS (@lem4935751 A B f s) (@lem4935778 A B f s)). Qed.
Lemma lem4935780 {A B : Type'} (f : A -> B) (s : A -> Prop) : (term3112 A B f s) = (term3182 A B f s).
Proof. exact (TRANS (@lem4935727 A B f s) (@lem4935779 A B f s)). Qed.
Lemma lem4935781 {A B : Type'} (f : A -> B) : (term3113 A B f) = (term3183 A B f).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4935780 A B f s)). Qed.
Lemma lem4935782 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4935783 {A B : Type'} (f : A -> B) : (term3114 A B f) = (term3184 A B f).
Proof. exact (MK_COMB (@lem4935782 A) (@lem4935781 A B f)). Qed.
Lemma lem4935785 {A B : Type'} (P : type1413 A B) : (term814 A B P) = (term815 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem4935786 {A : Type'} (P : type672 A) : (term1172 A P) = (term1173 A P).
Proof. exact (@lem4935785 (A -> Prop) A P). Qed.
Lemma lem4935787 {A B : Type'} (f : A -> B) : (term3185 A B f) = (term3186 A B f).
Proof. exact (@lem4935786 A (term3187 A B f)). Qed.
Lemma lem4935788 {A B : Type'} (f : A -> B) (s : A -> Prop) : (term3188 A B f s) = (term3181 A B f s).
Proof. exact (eq_refl (term3188 A B f s)). Qed.
Lemma lem4935789 {A : Type'} (x : A) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem4935790 {A B : Type'} (f : A -> B) (s : A -> Prop) (x : A) : (term3189 A B f s x) = (term3190 A B f s x).
Proof. exact (MK_COMB (@lem4935788 A B f s) (@lem4935789 A x)). Qed.
Lemma lem4935791 {A B : Type'} (x : A) (f : A -> B) (s : A -> Prop) : (term3190 A B f s x) = (term3180 A B x f s).
Proof. exact (eq_refl (term3190 A B f s x)). Qed.
Lemma lem4935792 {A B : Type'} (x : A) (f : A -> B) (s : A -> Prop) : (term3189 A B f s x) = (term3180 A B x f s).
Proof. exact (TRANS (@lem4935790 A B f s x) (@lem4935791 A B x f s)). Qed.
Lemma lem4935793 {A B : Type'} (f : A -> B) (s : A -> Prop) : (term3191 A B f s) = (term3181 A B f s).
Proof. exact (fun_ext (fun x : A => @lem4935792 A B x f s)). Qed.
Lemma lem4935794 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem4935795 {A B : Type'} (f : A -> B) (s : A -> Prop) : (term3192 A B f s) = (term3182 A B f s).
Proof. exact (MK_COMB (@lem4935794 A) (@lem4935793 A B f s)). Qed.
Lemma lem4935796 {A B : Type'} (f : A -> B) : (term3193 A B f) = (term3183 A B f).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4935795 A B f s)). Qed.
Lemma lem4935797 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4935798 {A B : Type'} (f : A -> B) : (term3185 A B f) = (term3184 A B f).
Proof. exact (MK_COMB (@lem4935797 A) (@lem4935796 A B f)). Qed.
Lemma lem4935799 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4935800 {A B : Type'} (f : A -> B) : (term3194 A B f) = (term3195 A B f).
Proof. exact (MK_COMB (@lem4935799) (@lem4935798 A B f)). Qed.
Lemma lem4935801 {A B : Type'} (f : A -> B) (s : A -> Prop) : (term3188 A B f s) = (term3181 A B f s).
Proof. exact (eq_refl (term3188 A B f s)). Qed.
Lemma lem4935802 {A : Type'} (x : type684 A) (s : A -> Prop) : (x s) = (x s).
Proof. exact (eq_refl (x s)). Qed.
Lemma lem4935803 {A B : Type'} (f : A -> B) (x : type684 A) (s : A -> Prop) : (term3196 A B f x s) = (term3197 A B f x s).
Proof. exact (MK_COMB (@lem4935801 A B f s) (@lem4935802 A x s)). Qed.
Lemma lem4935804 {A B : Type'} (x : type684 A) (f : A -> B) (s : A -> Prop) : (term3197 A B f x s) = (term3198 A B x f s).
Proof. exact (eq_refl (term3197 A B f x s)). Qed.
Lemma lem4935805 {A B : Type'} (x : type684 A) (f : A -> B) (s : A -> Prop) : (term3196 A B f x s) = (term3198 A B x f s).
Proof. exact (TRANS (@lem4935803 A B f x s) (@lem4935804 A B x f s)). Qed.
Lemma lem4935806 {A B : Type'} (x : type684 A) (f : A -> B) : (term3199 A B f x) = (term3200 A B x f).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4935805 A B x f s)). Qed.
Lemma lem4935807 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4935808 {A B : Type'} (x : type684 A) (f : A -> B) : (term3201 A B f x) = (term3202 A B x f).
Proof. exact (MK_COMB (@lem4935807 A) (@lem4935806 A B x f)). Qed.
Lemma lem4935809 {A B : Type'} (f : A -> B) : (term3203 A B f) = (term3204 A B f).
Proof. exact (fun_ext (fun x : type684 A => @lem4935808 A B x f)). Qed.
Lemma lem4935810 {A : Type'} : (@ex ((A -> Prop) -> A)) = (@ex ((A -> Prop) -> A)).
Proof. exact (eq_refl (@ex ((A -> Prop) -> A))). Qed.
Lemma lem4935811 {A B : Type'} (f : A -> B) : (term3186 A B f) = (term3205 A B f).
Proof. exact (MK_COMB (@lem4935810 A) (@lem4935809 A B f)). Qed.
Lemma lem4935812 {A B : Type'} (f : A -> B) : ((term3185 A B f) = (term3186 A B f)) = ((term3184 A B f) = (term3205 A B f)).
Proof. exact (MK_COMB (@lem4935800 A B f) (@lem4935811 A B f)). Qed.
Lemma lem4935813 {A B : Type'} (f : A -> B) : (term3184 A B f) = (term3205 A B f).
Proof. exact (EQ_MP (@lem4935812 A B f) (@lem4935787 A B f)). Qed.
Lemma lem4935815 {A B : Type'} (P : type1413 A B) : (term814 A B P) = (term815 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem4935816 {A : Type'} (P : type672 A) : (term1172 A P) = (term1173 A P).
Proof. exact (@lem4935815 (A -> Prop) A P). Qed.
Lemma lem4935817 {A B : Type'} (x : type684 A) (f : A -> B) : (term3206 A B x f) = (term3207 A B x f).
Proof. exact (@lem4935816 A (term3208 A B x f)). Qed.
Lemma lem4935818 {A B : Type'} (x : type684 A) (f : A -> B) (s : A -> Prop) : (term3209 A B x f s) = (term3210 A B x f s).
Proof. exact (eq_refl (term3209 A B x f s)). Qed.
Lemma lem4935819 {A : Type'} (y : A) : y = y.
Proof. exact (eq_refl y). Qed.
Lemma lem4935820 {A B : Type'} (x : type684 A) (f : A -> B) (s : A -> Prop) (y : A) : (term3211 A B x f s y) = (term3212 A B x f s y).
Proof. exact (MK_COMB (@lem4935818 A B x f s) (@lem4935819 A y)). Qed.
Lemma lem4935821 {A B : Type'} (x : type684 A) (y : A) (f : A -> B) (s : A -> Prop) : (term3212 A B x f s y) = (term3213 A B x y f s).
Proof. exact (eq_refl (term3212 A B x f s y)). Qed.
Lemma lem4935822 {A B : Type'} (x : type684 A) (y : A) (f : A -> B) (s : A -> Prop) : (term3211 A B x f s y) = (term3213 A B x y f s).
Proof. exact (TRANS (@lem4935820 A B x f s y) (@lem4935821 A B x y f s)). Qed.
Lemma lem4935823 {A B : Type'} (x : type684 A) (f : A -> B) (s : A -> Prop) : (term3214 A B x f s) = (term3210 A B x f s).
Proof. exact (fun_ext (fun y : A => @lem4935822 A B x y f s)). Qed.
Lemma lem4935824 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem4935825 {A B : Type'} (x : type684 A) (f : A -> B) (s : A -> Prop) : (term3215 A B x f s) = (term3198 A B x f s).
Proof. exact (MK_COMB (@lem4935824 A) (@lem4935823 A B x f s)). Qed.
Lemma lem4935826 {A B : Type'} (x : type684 A) (f : A -> B) : (term3216 A B x f) = (term3200 A B x f).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4935825 A B x f s)). Qed.
Lemma lem4935827 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4935828 {A B : Type'} (x : type684 A) (f : A -> B) : (term3206 A B x f) = (term3202 A B x f).
Proof. exact (MK_COMB (@lem4935827 A) (@lem4935826 A B x f)). Qed.
Lemma lem4935829 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4935830 {A B : Type'} (x : type684 A) (f : A -> B) : (term3217 A B x f) = (term3218 A B x f).
Proof. exact (MK_COMB (@lem4935829) (@lem4935828 A B x f)). Qed.
Lemma lem4935831 {A B : Type'} (x : type684 A) (f : A -> B) (s : A -> Prop) : (term3209 A B x f s) = (term3210 A B x f s).
Proof. exact (eq_refl (term3209 A B x f s)). Qed.
Lemma lem4935832 {A : Type'} (y : type684 A) (s : A -> Prop) : (y s) = (y s).
Proof. exact (eq_refl (y s)). Qed.
Lemma lem4935833 {A B : Type'} (x : type684 A) (f : A -> B) (y : type684 A) (s : A -> Prop) : (term3219 A B x f y s) = (term3220 A B x f y s).
Proof. exact (MK_COMB (@lem4935831 A B x f s) (@lem4935832 A y s)). Qed.
Lemma lem4935834 {A B : Type'} (x : type684 A) (y : type684 A) (f : A -> B) (s : A -> Prop) : (term3220 A B x f y s) = (term3221 A B x y f s).
Proof. exact (eq_refl (term3220 A B x f y s)). Qed.
Lemma lem4935835 {A B : Type'} (x : type684 A) (y : type684 A) (f : A -> B) (s : A -> Prop) : (term3219 A B x f y s) = (term3221 A B x y f s).
Proof. exact (TRANS (@lem4935833 A B x f y s) (@lem4935834 A B x y f s)). Qed.
Lemma lem4935836 {A B : Type'} (x : type684 A) (y : type684 A) (f : A -> B) : (term3222 A B x f y) = (term3223 A B x y f).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4935835 A B x y f s)). Qed.
Lemma lem4935837 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4935838 {A B : Type'} (x : type684 A) (y : type684 A) (f : A -> B) : (term3224 A B x f y) = (term3225 A B x y f).
Proof. exact (MK_COMB (@lem4935837 A) (@lem4935836 A B x y f)). Qed.
Lemma lem4935839 {A B : Type'} (x : type684 A) (f : A -> B) : (term3226 A B x f) = (term3227 A B x f).
Proof. exact (fun_ext (fun y : type684 A => @lem4935838 A B x y f)). Qed.
Lemma lem4935840 {A : Type'} : (@ex ((A -> Prop) -> A)) = (@ex ((A -> Prop) -> A)).
Proof. exact (eq_refl (@ex ((A -> Prop) -> A))). Qed.
Lemma lem4935841 {A B : Type'} (x : type684 A) (f : A -> B) : (term3207 A B x f) = (term3228 A B x f).
Proof. exact (MK_COMB (@lem4935840 A) (@lem4935839 A B x f)). Qed.
Lemma lem4935842 {A B : Type'} (x : type684 A) (f : A -> B) : ((term3206 A B x f) = (term3207 A B x f)) = ((term3202 A B x f) = (term3228 A B x f)).
Proof. exact (MK_COMB (@lem4935830 A B x f) (@lem4935841 A B x f)). Qed.
Lemma lem4935843 {A B : Type'} (x : type684 A) (f : A -> B) : (term3202 A B x f) = (term3228 A B x f).
Proof. exact (EQ_MP (@lem4935842 A B x f) (@lem4935817 A B x f)). Qed.
Lemma lem4935844 {A B : Type'} (f : A -> B) : (term3204 A B f) = (term3229 A B f).
Proof. exact (fun_ext (fun x : type684 A => @lem4935843 A B x f)). Qed.
Lemma lem4935845 {A : Type'} : (@ex ((A -> Prop) -> A)) = (@ex ((A -> Prop) -> A)).
Proof. exact (eq_refl (@ex ((A -> Prop) -> A))). Qed.
Lemma lem4935846 {A B : Type'} (f : A -> B) : (term3205 A B f) = (term3230 A B f).
Proof. exact (MK_COMB (@lem4935845 A) (@lem4935844 A B f)). Qed.
Lemma lem4935847 {A B : Type'} (f : A -> B) : (term3184 A B f) = (term3230 A B f).
Proof. exact (TRANS (@lem4935813 A B f) (@lem4935846 A B f)). Qed.
Lemma lem4935848 {A B : Type'} (f : A -> B) : (term3114 A B f) = (term3230 A B f).
Proof. exact (TRANS (@lem4935783 A B f) (@lem4935847 A B f)). Qed.
Lemma lem4935849 {A B : Type'} : (term3115 A B) = (term3231 A B).
Proof. exact (fun_ext (fun f : A -> B => @lem4935848 A B f)). Qed.
Lemma lem4935850 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem4935851 {A B : Type'} : (term3116 A B) = (term3232 A B).
Proof. exact (MK_COMB (@lem4935850 A B) (@lem4935849 A B)). Qed.
Lemma lem4935853 {A B : Type'} (P : type1413 A B) : (term814 A B P) = (term815 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem4935854 {A B : Type'} (P : type503 A B) : (term3233 A B P) = (term3234 A B P).
Proof. exact (@lem4935853 (A -> B) (type684 A) P). Qed.
Lemma lem4935855 {A B : Type'} : (term3235 A B) = (term3236 A B).
Proof. exact (@lem4935854 A B (term3237 A B)). Qed.
Lemma lem4935856 {A B : Type'} (f : A -> B) : (term3238 A B f) = (term3229 A B f).
Proof. exact (eq_refl (term3238 A B f)). Qed.
Lemma lem4935857 {A : Type'} (x : type684 A) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem4935858 {A B : Type'} (f : A -> B) (x : type684 A) : (term3239 A B f x) = (term3240 A B f x).
Proof. exact (MK_COMB (@lem4935856 A B f) (@lem4935857 A x)). Qed.
Lemma lem4935859 {A B : Type'} (x : type684 A) (f : A -> B) : (term3240 A B f x) = (term3228 A B x f).
Proof. exact (eq_refl (term3240 A B f x)). Qed.
Lemma lem4935860 {A B : Type'} (x : type684 A) (f : A -> B) : (term3239 A B f x) = (term3228 A B x f).
Proof. exact (TRANS (@lem4935858 A B f x) (@lem4935859 A B x f)). Qed.
Lemma lem4935861 {A B : Type'} (f : A -> B) : (term3241 A B f) = (term3229 A B f).
Proof. exact (fun_ext (fun x : type684 A => @lem4935860 A B x f)). Qed.
Lemma lem4935862 {A : Type'} : (@ex ((A -> Prop) -> A)) = (@ex ((A -> Prop) -> A)).
Proof. exact (eq_refl (@ex ((A -> Prop) -> A))). Qed.
Lemma lem4935863 {A B : Type'} (f : A -> B) : (term3242 A B f) = (term3230 A B f).
Proof. exact (MK_COMB (@lem4935862 A) (@lem4935861 A B f)). Qed.
Lemma lem4935864 {A B : Type'} : (term3243 A B) = (term3231 A B).
Proof. exact (fun_ext (fun f : A -> B => @lem4935863 A B f)). Qed.
Lemma lem4935865 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem4935866 {A B : Type'} : (term3235 A B) = (term3232 A B).
Proof. exact (MK_COMB (@lem4935865 A B) (@lem4935864 A B)). Qed.
Lemma lem4935867 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4935868 {A B : Type'} : (term3244 A B) = (term3245 A B).
Proof. exact (MK_COMB (@lem4935867) (@lem4935866 A B)). Qed.
Lemma lem4935869 {A B : Type'} (f : A -> B) : (term3238 A B f) = (term3229 A B f).
Proof. exact (eq_refl (term3238 A B f)). Qed.
Lemma lem4935870 {A B : Type'} (x : type529 A B) (f : A -> B) : (x f) = (x f).
Proof. exact (eq_refl (x f)). Qed.
Lemma lem4935871 {A B : Type'} (x : type529 A B) (f : A -> B) : (term3246 A B x f) = (term3247 A B x f).
Proof. exact (MK_COMB (@lem4935869 A B f) (@lem4935870 A B x f)). Qed.
Lemma lem4935872 {A B : Type'} (x : type529 A B) (f : A -> B) : (term3247 A B x f) = (term3248 A B x f).
Proof. exact (eq_refl (term3247 A B x f)). Qed.
Lemma lem4935873 {A B : Type'} (x : type529 A B) (f : A -> B) : (term3246 A B x f) = (term3248 A B x f).
Proof. exact (TRANS (@lem4935871 A B x f) (@lem4935872 A B x f)). Qed.
Lemma lem4935874 {A B : Type'} (x : type529 A B) : (term3249 A B x) = (term3250 A B x).
Proof. exact (fun_ext (fun f : A -> B => @lem4935873 A B x f)). Qed.
Lemma lem4935875 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem4935876 {A B : Type'} (x : type529 A B) : (term3251 A B x) = (term3252 A B x).
Proof. exact (MK_COMB (@lem4935875 A B) (@lem4935874 A B x)). Qed.
Lemma lem4935877 {A B : Type'} : (term3253 A B) = (term3254 A B).
Proof. exact (fun_ext (fun x : type529 A B => @lem4935876 A B x)). Qed.
Lemma lem4935878 {A B : Type'} : (@ex ((A -> B) -> (A -> Prop) -> A)) = (@ex ((A -> B) -> (A -> Prop) -> A)).
Proof. exact (eq_refl (@ex ((A -> B) -> (A -> Prop) -> A))). Qed.
Lemma lem4935879 {A B : Type'} : (term3236 A B) = (term3255 A B).
Proof. exact (MK_COMB (@lem4935878 A B) (@lem4935877 A B)). Qed.
Lemma lem4935880 {A B : Type'} : ((term3235 A B) = (term3236 A B)) = ((term3232 A B) = (term3255 A B)).
Proof. exact (MK_COMB (@lem4935868 A B) (@lem4935879 A B)). Qed.
Lemma lem4935881 {A B : Type'} : (term3232 A B) = (term3255 A B).
Proof. exact (EQ_MP (@lem4935880 A B) (@lem4935855 A B)). Qed.
Lemma lem4935883 {A B : Type'} (P : type1413 A B) : (term814 A B P) = (term815 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem4935884 {A B : Type'} (P : type503 A B) : (term3233 A B P) = (term3234 A B P).
Proof. exact (@lem4935883 (A -> B) (type684 A) P). Qed.
Lemma lem4935885 {A B : Type'} (x : type529 A B) : (term3256 A B x) = (term3257 A B x).
Proof. exact (@lem4935884 A B (term3258 A B x)). Qed.
Lemma lem4935886 {A B : Type'} (x : type529 A B) (f : A -> B) : (term3259 A B x f) = (term3260 A B x f).
Proof. exact (eq_refl (term3259 A B x f)). Qed.
Lemma lem4935887 {A : Type'} (y : type684 A) : y = y.
Proof. exact (eq_refl y). Qed.
Lemma lem4935888 {A B : Type'} (x : type529 A B) (f : A -> B) (y : type684 A) : (term3261 A B x f y) = (term3262 A B x f y).
Proof. exact (MK_COMB (@lem4935886 A B x f) (@lem4935887 A y)). Qed.
Lemma lem4935889 {A B : Type'} (x : type529 A B) (y : type684 A) (f : A -> B) : (term3262 A B x f y) = (term3263 A B x y f).
Proof. exact (eq_refl (term3262 A B x f y)). Qed.
Lemma lem4935890 {A B : Type'} (x : type529 A B) (y : type684 A) (f : A -> B) : (term3261 A B x f y) = (term3263 A B x y f).
Proof. exact (TRANS (@lem4935888 A B x f y) (@lem4935889 A B x y f)). Qed.
Lemma lem4935891 {A B : Type'} (x : type529 A B) (f : A -> B) : (term3264 A B x f) = (term3260 A B x f).
Proof. exact (fun_ext (fun y : type684 A => @lem4935890 A B x y f)). Qed.
Lemma lem4935892 {A : Type'} : (@ex ((A -> Prop) -> A)) = (@ex ((A -> Prop) -> A)).
Proof. exact (eq_refl (@ex ((A -> Prop) -> A))). Qed.
Lemma lem4935893 {A B : Type'} (x : type529 A B) (f : A -> B) : (term3265 A B x f) = (term3248 A B x f).
Proof. exact (MK_COMB (@lem4935892 A) (@lem4935891 A B x f)). Qed.
Lemma lem4935894 {A B : Type'} (x : type529 A B) : (term3266 A B x) = (term3250 A B x).
Proof. exact (fun_ext (fun f : A -> B => @lem4935893 A B x f)). Qed.
Lemma lem4935895 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem4935896 {A B : Type'} (x : type529 A B) : (term3256 A B x) = (term3252 A B x).
Proof. exact (MK_COMB (@lem4935895 A B) (@lem4935894 A B x)). Qed.
Lemma lem4935897 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4935898 {A B : Type'} (x : type529 A B) : (term3267 A B x) = (term3268 A B x).
Proof. exact (MK_COMB (@lem4935897) (@lem4935896 A B x)). Qed.
Lemma lem4935899 {A B : Type'} (x : type529 A B) (f : A -> B) : (term3259 A B x f) = (term3260 A B x f).
Proof. exact (eq_refl (term3259 A B x f)). Qed.
Lemma lem4935900 {A B : Type'} (y : type529 A B) (f : A -> B) : (y f) = (y f).
Proof. exact (eq_refl (y f)). Qed.
Lemma lem4935901 {A B : Type'} (x : type529 A B) (y : type529 A B) (f : A -> B) : (term3269 A B x y f) = (term3270 A B x y f).
Proof. exact (MK_COMB (@lem4935899 A B x f) (@lem4935900 A B y f)). Qed.
Lemma lem4935902 {A B : Type'} (x : type529 A B) (y : type529 A B) (f : A -> B) : (term3270 A B x y f) = (term3271 A B x y f).
Proof. exact (eq_refl (term3270 A B x y f)). Qed.
Lemma lem4935903 {A B : Type'} (x : type529 A B) (y : type529 A B) (f : A -> B) : (term3269 A B x y f) = (term3271 A B x y f).
Proof. exact (TRANS (@lem4935901 A B x y f) (@lem4935902 A B x y f)). Qed.
Lemma lem4935904 {A B : Type'} (x : type529 A B) (y : type529 A B) : (term3272 A B x y) = (term3273 A B x y).
Proof. exact (fun_ext (fun f : A -> B => @lem4935903 A B x y f)). Qed.
Lemma lem4935905 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem4935906 {A B : Type'} (x : type529 A B) (y : type529 A B) : (term3274 A B x y) = (term3275 A B x y).
Proof. exact (MK_COMB (@lem4935905 A B) (@lem4935904 A B x y)). Qed.
Lemma lem4935907 {A B : Type'} (x : type529 A B) : (term3276 A B x) = (term3277 A B x).
Proof. exact (fun_ext (fun y : type529 A B => @lem4935906 A B x y)). Qed.
Lemma lem4935908 {A B : Type'} : (@ex ((A -> B) -> (A -> Prop) -> A)) = (@ex ((A -> B) -> (A -> Prop) -> A)).
Proof. exact (eq_refl (@ex ((A -> B) -> (A -> Prop) -> A))). Qed.
Lemma lem4935909 {A B : Type'} (x : type529 A B) : (term3257 A B x) = (term3278 A B x).
Proof. exact (MK_COMB (@lem4935908 A B) (@lem4935907 A B x)). Qed.
Lemma lem4935910 {A B : Type'} (x : type529 A B) : ((term3256 A B x) = (term3257 A B x)) = ((term3252 A B x) = (term3278 A B x)).
Proof. exact (MK_COMB (@lem4935898 A B x) (@lem4935909 A B x)). Qed.
Lemma lem4935911 {A B : Type'} (x : type529 A B) : (term3252 A B x) = (term3278 A B x).
Proof. exact (EQ_MP (@lem4935910 A B x) (@lem4935885 A B x)). Qed.
Lemma lem4935912 {A B : Type'} : (term3254 A B) = (term3279 A B).
Proof. exact (fun_ext (fun x : type529 A B => @lem4935911 A B x)). Qed.
Lemma lem4935913 {A B : Type'} : (@ex ((A -> B) -> (A -> Prop) -> A)) = (@ex ((A -> B) -> (A -> Prop) -> A)).
Proof. exact (eq_refl (@ex ((A -> B) -> (A -> Prop) -> A))). Qed.
Lemma lem4935914 {A B : Type'} : (term3255 A B) = (term3280 A B).
Proof. exact (MK_COMB (@lem4935913 A B) (@lem4935912 A B)). Qed.
Lemma lem4935915 {A B : Type'} : (term3232 A B) = (term3280 A B).
Proof. exact (TRANS (@lem4935881 A B) (@lem4935914 A B)). Qed.
Lemma lem4935917 {A B : Type'} : (term3116 A B) = (term3280 A B).
Proof. exact (TRANS (@lem4935851 A B) (@lem4935915 A B)). Qed.
Lemma lem4935918 {A B : Type'} : (term2705 A B) = (term3280 A B).
Proof. exact (TRANS (@lem4935566 A B) (@lem4935917 A B)). Qed.
Lemma lem4935919 {A B : Type'} (h1 : term2705 A B) : term3280 A B.
Proof. exact (EQ_MP (@lem4935918 A B) (@lem4934980 A B h1)). Qed.
Lemma lem4935934 {A : Type'} (s : A -> Prop) (f : type1402 A) (x : A) (y : A) : (term3281 A s f x y) = (term3282 A s f x y).
Proof. exact (@lem17362 (term3283 A s x f y) (x = y)). Qed.
Lemma lem4935935 {A : Type'} (P : A -> Prop) : (term2420 A P) = (term2421 A P).
Proof. exact (@lem18392 A P). Qed.
Lemma lem4935936 {A : Type'} (s : A -> Prop) (f : type1402 A) (x : A) : (term3284 A s f x) = (term3285 A s f x).
Proof. exact (@lem4935935 A (term2862 A s f x)). Qed.
Lemma lem4935937 {A : Type'} (s : A -> Prop) (f : type1402 A) (x : A) (y : A) : (term3286 A s f x y) = (term2861 A s f x y).
Proof. exact (eq_refl (term3286 A s f x y)). Qed.
Lemma lem4935938 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem4935939 {A : Type'} (s : A -> Prop) (f : type1402 A) (x : A) (y : A) : (term3287 A s f x y) = (term3281 A s f x y).
Proof. exact (MK_COMB (@lem4935938) (@lem4935937 A s f x y)). Qed.
Lemma lem4935940 {A : Type'} (s : A -> Prop) (f : type1402 A) (x : A) (y : A) : (term3287 A s f x y) = (term3282 A s f x y).
Proof. exact (TRANS (@lem4935939 A s f x y) (@lem4935934 A s f x y)). Qed.
Lemma lem4935941 {A : Type'} (s : A -> Prop) (f : type1402 A) (x : A) : (term3288 A s f x) = (term3289 A s f x).
Proof. exact (fun_ext (fun y : A => @lem4935940 A s f x y)). Qed.
Lemma lem4935942 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem4935943 {A : Type'} (s : A -> Prop) (f : type1402 A) (x : A) : (term3285 A s f x) = (term3290 A s f x).
Proof. exact (MK_COMB (@lem4935942 A) (@lem4935941 A s f x)). Qed.
Lemma lem4935944 {A : Type'} (s : A -> Prop) (f : type1402 A) (x : A) : (term3284 A s f x) = (term3290 A s f x).
Proof. exact (TRANS (@lem4935936 A s f x) (@lem4935943 A s f x)). Qed.
Lemma lem4935945 {A : Type'} (P : A -> Prop) : (term2420 A P) = (term2421 A P).
Proof. exact (@lem18392 A P). Qed.
Lemma lem4935946 {A : Type'} (s : A -> Prop) (f : type1402 A) : (term3291 A s f) = (term3292 A s f).
Proof. exact (@lem4935945 A (term2864 A s f)). Qed.
Lemma lem4935947 {A : Type'} (s : A -> Prop) (f : type1402 A) (x : A) : (term3293 A s f x) = (term2863 A s f x).
Proof. exact (eq_refl (term3293 A s f x)). Qed.
Lemma lem4935948 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem4935949 {A : Type'} (s : A -> Prop) (f : type1402 A) (x : A) : (term3294 A s f x) = (term3284 A s f x).
Proof. exact (MK_COMB (@lem4935948) (@lem4935947 A s f x)). Qed.
Lemma lem4935950 {A : Type'} (s : A -> Prop) (f : type1402 A) (x : A) : (term3294 A s f x) = (term3290 A s f x).
Proof. exact (TRANS (@lem4935949 A s f x) (@lem4935944 A s f x)). Qed.
Lemma lem4935951 {A : Type'} (s : A -> Prop) (f : type1402 A) : (term3295 A s f) = (term3296 A s f).
Proof. exact (fun_ext (fun x : A => @lem4935950 A s f x)). Qed.
Lemma lem4935952 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem4935953 {A : Type'} (s : A -> Prop) (f : type1402 A) : (term3292 A s f) = (term3297 A s f).
Proof. exact (MK_COMB (@lem4935952 A) (@lem4935951 A s f)). Qed.
Lemma lem4935954 {A : Type'} (s : A -> Prop) (f : type1402 A) : (term3291 A s f) = (term3297 A s f).
Proof. exact (TRANS (@lem4935946 A s f) (@lem4935953 A s f)). Qed.
Lemma lem4935955 {A : Type'} (s : A -> Prop) : (term1224 A s) = (term1224 A s).
Proof. exact (eq_refl (term1224 A s)). Qed.
Lemma lem4935956 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4935957 {A : Type'} (s : A -> Prop) (f : type1402 A) : (term3298 A s f) = (term3299 A s f).
Proof. exact (MK_COMB (@lem4935956) (@lem4935954 A s f)). Qed.
Lemma lem4935958 {A : Type'} (f : type1402 A) (s : A -> Prop) : (term3300 A f s) = (term3301 A f s).
Proof. exact (MK_COMB (@lem4935957 A s f) (@lem4935955 A s)). Qed.
Lemma lem4935959 {A : Type'} (f : type1402 A) (s : A -> Prop) : (term3302 A f s) = (term3300 A f s).
Proof. exact (@lem17045 (term2865 A s f) (@FINITE A s)). Qed.
Lemma lem4935960 {A : Type'} (f : type1402 A) (s : A -> Prop) : (term3302 A f s) = (term3301 A f s).
Proof. exact (TRANS (@lem4935959 A f s) (@lem4935958 A f s)). Qed.
Lemma lem4935961 {A : Type'} (f : type1402 A) (s : A -> Prop) : ((term2860 A f s) = (@CARD A s)) = ((term2860 A f s) = (@CARD A s)).
Proof. exact (eq_refl ((term2860 A f s) = (@CARD A s))). Qed.
Lemma lem4935962 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4935963 {A : Type'} (f : type1402 A) (s : A -> Prop) : (term3303 A f s) = (term3304 A f s).
Proof. exact (MK_COMB (@lem4935962) (@lem4935960 A f s)). Qed.
Lemma lem4935964 {A : Type'} (f : type1402 A) (s : A -> Prop) : (term3305 A f s) = (term3306 A f s).
Proof. exact (MK_COMB (@lem4935963 A f s) (@lem4935961 A f s)). Qed.
Lemma lem4935965 {A : Type'} (f : type1402 A) (s : A -> Prop) : (term2869 A f s) = (term3305 A f s).
Proof. exact (@lem17265 (term2867 A f s) ((term2860 A f s) = (@CARD A s))). Qed.
Lemma lem4935966 {A : Type'} (f : type1402 A) (s : A -> Prop) : (term2869 A f s) = (term3306 A f s).
Proof. exact (TRANS (@lem4935965 A f s) (@lem4935964 A f s)). Qed.
Lemma lem4935967 {A : Type'} (f : type1402 A) : (term2870 A f) = (term3307 A f).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4935966 A f s)). Qed.
Lemma lem4935968 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4935969 {A : Type'} (f : type1402 A) : (term2871 A f) = (term3308 A f).
Proof. exact (MK_COMB (@lem4935968 A) (@lem4935967 A f)). Qed.
Lemma lem4935970 {A : Type'} : (term2872 A) = (term3309 A).
Proof. exact (fun_ext (fun f : type1402 A => @lem4935969 A f)). Qed.
Lemma lem4935971 {A : Type'} : (@all (A -> A -> Prop)) = (@all (A -> A -> Prop)).
Proof. exact (eq_refl (@all (A -> A -> Prop))). Qed.
Lemma lem4935972 {A : Type'} : (term2709 A) = (term3310 A).
Proof. exact (MK_COMB (@lem4935971 A) (@lem4935970 A)). Qed.
Lemma lem4936079 {A : Type'} (P : A -> Prop) (Q : Prop) : (term1154 A P Q) = (term1155 A P Q).
Proof. exact (EQ_MP (@lem18905 A P Q) (@lem18904 A P Q)). Qed.
Lemma lem4936080 {A : Type'} (P : A -> Prop) (Q : Prop) : (term1154 A P Q) = (term1155 A P Q).
Proof. exact (@lem4936079 A P Q). Qed.
Lemma lem4936081 {A : Type'} (f : type1402 A) (s : A -> Prop) : (term3311 A f s) = (term3312 A f s).
Proof. exact (@lem4936080 A (term3296 A s f) (term1224 A s)). Qed.
Lemma lem4936082 {A : Type'} (s : A -> Prop) (f : type1402 A) (x : A) : (term3313 A s f x) = (term3290 A s f x).
Proof. exact (eq_refl (term3313 A s f x)). Qed.
Lemma lem4936083 {A : Type'} (s : A -> Prop) (f : type1402 A) : (term3314 A s f) = (term3296 A s f).
Proof. exact (fun_ext (fun x : A => @lem4936082 A s f x)). Qed.
Lemma lem4936084 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem4936085 {A : Type'} (s : A -> Prop) (f : type1402 A) : (term3315 A s f) = (term3297 A s f).
Proof. exact (MK_COMB (@lem4936084 A) (@lem4936083 A s f)). Qed.
Lemma lem4936086 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4936087 {A : Type'} (s : A -> Prop) (f : type1402 A) : (term3316 A s f) = (term3299 A s f).
Proof. exact (MK_COMB (@lem4936086) (@lem4936085 A s f)). Qed.
Lemma lem4936088 {A : Type'} (s : A -> Prop) : (term1224 A s) = (term1224 A s).
Proof. exact (eq_refl (term1224 A s)). Qed.
Lemma lem4936089 {A : Type'} (f : type1402 A) (s : A -> Prop) : (term3311 A f s) = (term3301 A f s).
Proof. exact (MK_COMB (@lem4936087 A s f) (@lem4936088 A s)). Qed.
Lemma lem4936090 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4936091 {A : Type'} (f : type1402 A) (s : A -> Prop) : (term3317 A f s) = (term3318 A f s).
Proof. exact (MK_COMB (@lem4936090) (@lem4936089 A f s)). Qed.
Lemma lem4936092 {A : Type'} (s : A -> Prop) (f : type1402 A) (x : A) : (term3313 A s f x) = (term3290 A s f x).
Proof. exact (eq_refl (term3313 A s f x)). Qed.
Lemma lem4936093 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4936094 {A : Type'} (s : A -> Prop) (f : type1402 A) (x : A) : (term3319 A s f x) = (term3320 A s f x).
Proof. exact (MK_COMB (@lem4936093) (@lem4936092 A s f x)). Qed.
Lemma lem4936095 {A : Type'} (s : A -> Prop) : (term1224 A s) = (term1224 A s).
Proof. exact (eq_refl (term1224 A s)). Qed.
Lemma lem4936096 {A : Type'} (f : type1402 A) (x : A) (s : A -> Prop) : (term3321 A f x s) = (term3322 A f x s).
Proof. exact (MK_COMB (@lem4936094 A s f x) (@lem4936095 A s)). Qed.
Lemma lem4936097 {A : Type'} (f : type1402 A) (s : A -> Prop) : (term3323 A f s) = (term3324 A f s).
Proof. exact (fun_ext (fun x : A => @lem4936096 A f x s)). Qed.
Lemma lem4936098 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem4936099 {A : Type'} (f : type1402 A) (s : A -> Prop) : (term3312 A f s) = (term3325 A f s).
Proof. exact (MK_COMB (@lem4936098 A) (@lem4936097 A f s)). Qed.
Lemma lem4936100 {A : Type'} (f : type1402 A) (s : A -> Prop) : ((term3311 A f s) = (term3312 A f s)) = ((term3301 A f s) = (term3325 A f s)).
Proof. exact (MK_COMB (@lem4936091 A f s) (@lem4936099 A f s)). Qed.
Lemma lem4936101 {A : Type'} (f : type1402 A) (s : A -> Prop) : (term3301 A f s) = (term3325 A f s).
Proof. exact (EQ_MP (@lem4936100 A f s) (@lem4936081 A f s)). Qed.
Lemma lem4936103 {A : Type'} (P : A -> Prop) (Q : Prop) : (term1154 A P Q) = (term1155 A P Q).
Proof. exact (EQ_MP (@lem18905 A P Q) (@lem18904 A P Q)). Qed.
Lemma lem4936104 {A : Type'} (P : A -> Prop) (Q : Prop) : (term1154 A P Q) = (term1155 A P Q).
Proof. exact (@lem4936103 A P Q). Qed.
Lemma lem4936105 {A : Type'} (f : type1402 A) (x : A) (s : A -> Prop) : (term3326 A f x s) = (term3327 A f x s).
Proof. exact (@lem4936104 A (term3289 A s f x) (term1224 A s)). Qed.
Lemma lem4936106 {A : Type'} (s : A -> Prop) (f : type1402 A) (x : A) (y : A) : (term3328 A s f x y) = (term3282 A s f x y).
Proof. exact (eq_refl (term3328 A s f x y)). Qed.
Lemma lem4936107 {A : Type'} (s : A -> Prop) (f : type1402 A) (x : A) : (term3329 A s f x) = (term3289 A s f x).
Proof. exact (fun_ext (fun y : A => @lem4936106 A s f x y)). Qed.
Lemma lem4936108 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem4936109 {A : Type'} (s : A -> Prop) (f : type1402 A) (x : A) : (term3330 A s f x) = (term3290 A s f x).
Proof. exact (MK_COMB (@lem4936108 A) (@lem4936107 A s f x)). Qed.
Lemma lem4936110 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4936111 {A : Type'} (s : A -> Prop) (f : type1402 A) (x : A) : (term3331 A s f x) = (term3320 A s f x).
Proof. exact (MK_COMB (@lem4936110) (@lem4936109 A s f x)). Qed.
Lemma lem4936112 {A : Type'} (s : A -> Prop) : (term1224 A s) = (term1224 A s).
Proof. exact (eq_refl (term1224 A s)). Qed.
Lemma lem4936113 {A : Type'} (f : type1402 A) (x : A) (s : A -> Prop) : (term3326 A f x s) = (term3322 A f x s).
Proof. exact (MK_COMB (@lem4936111 A s f x) (@lem4936112 A s)). Qed.
Lemma lem4936114 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4936115 {A : Type'} (f : type1402 A) (x : A) (s : A -> Prop) : (term3332 A f x s) = (term3333 A f x s).
Proof. exact (MK_COMB (@lem4936114) (@lem4936113 A f x s)). Qed.
Lemma lem4936116 {A : Type'} (s : A -> Prop) (f : type1402 A) (x : A) (y : A) : (term3328 A s f x y) = (term3282 A s f x y).
Proof. exact (eq_refl (term3328 A s f x y)). Qed.
Lemma lem4936117 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4936118 {A : Type'} (s : A -> Prop) (f : type1402 A) (x : A) (y : A) : (term3334 A s f x y) = (term3335 A s f x y).
Proof. exact (MK_COMB (@lem4936117) (@lem4936116 A s f x y)). Qed.
Lemma lem4936119 {A : Type'} (s : A -> Prop) : (term1224 A s) = (term1224 A s).
Proof. exact (eq_refl (term1224 A s)). Qed.
Lemma lem4936120 {A : Type'} (f : type1402 A) (x : A) (y : A) (s : A -> Prop) : (term3336 A f x y s) = (term3337 A f x y s).
Proof. exact (MK_COMB (@lem4936118 A s f x y) (@lem4936119 A s)). Qed.
Lemma lem4936121 {A : Type'} (f : type1402 A) (x : A) (s : A -> Prop) : (term3338 A f x s) = (term3339 A f x s).
Proof. exact (fun_ext (fun y : A => @lem4936120 A f x y s)). Qed.
Lemma lem4936122 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem4936123 {A : Type'} (f : type1402 A) (x : A) (s : A -> Prop) : (term3327 A f x s) = (term3340 A f x s).
Proof. exact (MK_COMB (@lem4936122 A) (@lem4936121 A f x s)). Qed.
Lemma lem4936124 {A : Type'} (f : type1402 A) (x : A) (s : A -> Prop) : ((term3326 A f x s) = (term3327 A f x s)) = ((term3322 A f x s) = (term3340 A f x s)).
Proof. exact (MK_COMB (@lem4936115 A f x s) (@lem4936123 A f x s)). Qed.
Lemma lem4936125 {A : Type'} (f : type1402 A) (x : A) (s : A -> Prop) : (term3322 A f x s) = (term3340 A f x s).
Proof. exact (EQ_MP (@lem4936124 A f x s) (@lem4936105 A f x s)). Qed.
Lemma lem4936126 {A : Type'} (f : type1402 A) (s : A -> Prop) : (term3324 A f s) = (term3341 A f s).
Proof. exact (fun_ext (fun x : A => @lem4936125 A f x s)). Qed.
Lemma lem4936127 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem4936128 {A : Type'} (f : type1402 A) (s : A -> Prop) : (term3325 A f s) = (term3342 A f s).
Proof. exact (MK_COMB (@lem4936127 A) (@lem4936126 A f s)). Qed.
Lemma lem4936129 {A : Type'} (f : type1402 A) (s : A -> Prop) : (term3301 A f s) = (term3342 A f s).
Proof. exact (TRANS (@lem4936101 A f s) (@lem4936128 A f s)). Qed.
Lemma lem4936130 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4936131 {A : Type'} (f : type1402 A) (s : A -> Prop) : (term3304 A f s) = (term3343 A f s).
Proof. exact (MK_COMB (@lem4936130) (@lem4936129 A f s)). Qed.
Lemma lem4936132 {A : Type'} (f : type1402 A) (s : A -> Prop) : ((term2860 A f s) = (@CARD A s)) = ((term2860 A f s) = (@CARD A s)).
Proof. exact (eq_refl ((term2860 A f s) = (@CARD A s))). Qed.
Lemma lem4936133 {A : Type'} (f : type1402 A) (s : A -> Prop) : (term3306 A f s) = (term3344 A f s).
Proof. exact (MK_COMB (@lem4936131 A f s) (@lem4936132 A f s)). Qed.
Lemma lem4936135 {A : Type'} (P : A -> Prop) (Q : Prop) : (term1154 A P Q) = (term1155 A P Q).
Proof. exact (EQ_MP (@lem18905 A P Q) (@lem18904 A P Q)). Qed.
Lemma lem4936136 {A : Type'} (P : A -> Prop) (Q : Prop) : (term1154 A P Q) = (term1155 A P Q).
Proof. exact (@lem4936135 A P Q). Qed.
Lemma lem4936137 {A : Type'} (f : type1402 A) (s : A -> Prop) : (term3345 A f s) = (term3346 A f s).
Proof. exact (@lem4936136 A (term3341 A f s) ((term2860 A f s) = (@CARD A s))). Qed.
Lemma lem4936138 {A : Type'} (f : type1402 A) (x : A) (s : A -> Prop) : (term3347 A f s x) = (term3340 A f x s).
Proof. exact (eq_refl (term3347 A f s x)). Qed.
Lemma lem4936139 {A : Type'} (f : type1402 A) (s : A -> Prop) : (term3348 A f s) = (term3341 A f s).
Proof. exact (fun_ext (fun x : A => @lem4936138 A f x s)). Qed.
Lemma lem4936140 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem4936141 {A : Type'} (f : type1402 A) (s : A -> Prop) : (term3349 A f s) = (term3342 A f s).
Proof. exact (MK_COMB (@lem4936140 A) (@lem4936139 A f s)). Qed.
Lemma lem4936142 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4936143 {A : Type'} (f : type1402 A) (s : A -> Prop) : (term3350 A f s) = (term3343 A f s).
Proof. exact (MK_COMB (@lem4936142) (@lem4936141 A f s)). Qed.
Lemma lem4936144 {A : Type'} (f : type1402 A) (s : A -> Prop) : ((term2860 A f s) = (@CARD A s)) = ((term2860 A f s) = (@CARD A s)).
Proof. exact (eq_refl ((term2860 A f s) = (@CARD A s))). Qed.
Lemma lem4936145 {A : Type'} (f : type1402 A) (s : A -> Prop) : (term3345 A f s) = (term3344 A f s).
Proof. exact (MK_COMB (@lem4936143 A f s) (@lem4936144 A f s)). Qed.
Lemma lem4936146 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4936147 {A : Type'} (f : type1402 A) (s : A -> Prop) : (term3351 A f s) = (term3352 A f s).
Proof. exact (MK_COMB (@lem4936146) (@lem4936145 A f s)). Qed.
Lemma lem4936148 {A : Type'} (f : type1402 A) (x : A) (s : A -> Prop) : (term3347 A f s x) = (term3340 A f x s).
Proof. exact (eq_refl (term3347 A f s x)). Qed.
Lemma lem4936149 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4936150 {A : Type'} (f : type1402 A) (x : A) (s : A -> Prop) : (term3353 A f s x) = (term3354 A f x s).
Proof. exact (MK_COMB (@lem4936149) (@lem4936148 A f x s)). Qed.
Lemma lem4936151 {A : Type'} (f : type1402 A) (s : A -> Prop) : ((term2860 A f s) = (@CARD A s)) = ((term2860 A f s) = (@CARD A s)).
Proof. exact (eq_refl ((term2860 A f s) = (@CARD A s))). Qed.
Lemma lem4936152 {A : Type'} (x : A) (f : type1402 A) (s : A -> Prop) : (term3355 A x f s) = (term3356 A x f s).
Proof. exact (MK_COMB (@lem4936150 A f x s) (@lem4936151 A f s)). Qed.
Lemma lem4936153 {A : Type'} (f : type1402 A) (s : A -> Prop) : (term3357 A f s) = (term3358 A f s).
Proof. exact (fun_ext (fun x : A => @lem4936152 A x f s)). Qed.
Lemma lem4936154 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem4936155 {A : Type'} (f : type1402 A) (s : A -> Prop) : (term3346 A f s) = (term3359 A f s).
Proof. exact (MK_COMB (@lem4936154 A) (@lem4936153 A f s)). Qed.
Lemma lem4936156 {A : Type'} (f : type1402 A) (s : A -> Prop) : ((term3345 A f s) = (term3346 A f s)) = ((term3344 A f s) = (term3359 A f s)).
Proof. exact (MK_COMB (@lem4936147 A f s) (@lem4936155 A f s)). Qed.
Lemma lem4936157 {A : Type'} (f : type1402 A) (s : A -> Prop) : (term3344 A f s) = (term3359 A f s).
Proof. exact (EQ_MP (@lem4936156 A f s) (@lem4936137 A f s)). Qed.
Lemma lem4936159 {A : Type'} (P : A -> Prop) (Q : Prop) : (term1154 A P Q) = (term1155 A P Q).
Proof. exact (EQ_MP (@lem18905 A P Q) (@lem18904 A P Q)). Qed.
Lemma lem4936160 {A : Type'} (P : A -> Prop) (Q : Prop) : (term1154 A P Q) = (term1155 A P Q).
Proof. exact (@lem4936159 A P Q). Qed.
Lemma lem4936161 {A : Type'} (x : A) (f : type1402 A) (s : A -> Prop) : (term3360 A x f s) = (term3361 A x f s).
Proof. exact (@lem4936160 A (term3339 A f x s) ((term2860 A f s) = (@CARD A s))). Qed.
Lemma lem4936162 {A : Type'} (f : type1402 A) (x : A) (y : A) (s : A -> Prop) : (term3362 A f x s y) = (term3337 A f x y s).
Proof. exact (eq_refl (term3362 A f x s y)). Qed.
Lemma lem4936163 {A : Type'} (f : type1402 A) (x : A) (s : A -> Prop) : (term3363 A f x s) = (term3339 A f x s).
Proof. exact (fun_ext (fun y : A => @lem4936162 A f x y s)). Qed.
Lemma lem4936164 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem4936165 {A : Type'} (f : type1402 A) (x : A) (s : A -> Prop) : (term3364 A f x s) = (term3340 A f x s).
Proof. exact (MK_COMB (@lem4936164 A) (@lem4936163 A f x s)). Qed.
Lemma lem4936166 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4936167 {A : Type'} (f : type1402 A) (x : A) (s : A -> Prop) : (term3365 A f x s) = (term3354 A f x s).
Proof. exact (MK_COMB (@lem4936166) (@lem4936165 A f x s)). Qed.
Lemma lem4936168 {A : Type'} (f : type1402 A) (s : A -> Prop) : ((term2860 A f s) = (@CARD A s)) = ((term2860 A f s) = (@CARD A s)).
Proof. exact (eq_refl ((term2860 A f s) = (@CARD A s))). Qed.
Lemma lem4936169 {A : Type'} (x : A) (f : type1402 A) (s : A -> Prop) : (term3360 A x f s) = (term3356 A x f s).
Proof. exact (MK_COMB (@lem4936167 A f x s) (@lem4936168 A f s)). Qed.
Lemma lem4936170 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4936171 {A : Type'} (x : A) (f : type1402 A) (s : A -> Prop) : (term3366 A x f s) = (term3367 A x f s).
Proof. exact (MK_COMB (@lem4936170) (@lem4936169 A x f s)). Qed.
Lemma lem4936172 {A : Type'} (f : type1402 A) (x : A) (y : A) (s : A -> Prop) : (term3362 A f x s y) = (term3337 A f x y s).
Proof. exact (eq_refl (term3362 A f x s y)). Qed.
Lemma lem4936173 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4936174 {A : Type'} (f : type1402 A) (x : A) (y : A) (s : A -> Prop) : (term3368 A f x s y) = (term3369 A f x y s).
Proof. exact (MK_COMB (@lem4936173) (@lem4936172 A f x y s)). Qed.
Lemma lem4936175 {A : Type'} (f : type1402 A) (s : A -> Prop) : ((term2860 A f s) = (@CARD A s)) = ((term2860 A f s) = (@CARD A s)).
Proof. exact (eq_refl ((term2860 A f s) = (@CARD A s))). Qed.
Lemma lem4936176 {A : Type'} (x : A) (y : A) (f : type1402 A) (s : A -> Prop) : (term3370 A x y f s) = (term3371 A x y f s).
Proof. exact (MK_COMB (@lem4936174 A f x y s) (@lem4936175 A f s)). Qed.
Lemma lem4936177 {A : Type'} (x : A) (f : type1402 A) (s : A -> Prop) : (term3372 A x f s) = (term3373 A x f s).
Proof. exact (fun_ext (fun y : A => @lem4936176 A x y f s)). Qed.
Lemma lem4936178 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem4936179 {A : Type'} (x : A) (f : type1402 A) (s : A -> Prop) : (term3361 A x f s) = (term3374 A x f s).
Proof. exact (MK_COMB (@lem4936178 A) (@lem4936177 A x f s)). Qed.
Lemma lem4936180 {A : Type'} (x : A) (f : type1402 A) (s : A -> Prop) : ((term3360 A x f s) = (term3361 A x f s)) = ((term3356 A x f s) = (term3374 A x f s)).
Proof. exact (MK_COMB (@lem4936171 A x f s) (@lem4936179 A x f s)). Qed.
Lemma lem4936181 {A : Type'} (x : A) (f : type1402 A) (s : A -> Prop) : (term3356 A x f s) = (term3374 A x f s).
Proof. exact (EQ_MP (@lem4936180 A x f s) (@lem4936161 A x f s)). Qed.
Lemma lem4936182 {A : Type'} (f : type1402 A) (s : A -> Prop) : (term3358 A f s) = (term3375 A f s).
Proof. exact (fun_ext (fun x : A => @lem4936181 A x f s)). Qed.
Lemma lem4936183 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem4936184 {A : Type'} (f : type1402 A) (s : A -> Prop) : (term3359 A f s) = (term3376 A f s).
Proof. exact (MK_COMB (@lem4936183 A) (@lem4936182 A f s)). Qed.
Lemma lem4936185 {A : Type'} (f : type1402 A) (s : A -> Prop) : (term3344 A f s) = (term3376 A f s).
Proof. exact (TRANS (@lem4936157 A f s) (@lem4936184 A f s)). Qed.
Lemma lem4936186 {A : Type'} (f : type1402 A) (s : A -> Prop) : (term3306 A f s) = (term3376 A f s).
Proof. exact (TRANS (@lem4936133 A f s) (@lem4936185 A f s)). Qed.
Lemma lem4936187 {A : Type'} (f : type1402 A) : (term3307 A f) = (term3377 A f).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4936186 A f s)). Qed.
Lemma lem4936188 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4936189 {A : Type'} (f : type1402 A) : (term3308 A f) = (term3378 A f).
Proof. exact (MK_COMB (@lem4936188 A) (@lem4936187 A f)). Qed.
Lemma lem4936191 {A B : Type'} (P : type1413 A B) : (term814 A B P) = (term815 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem4936192 {A : Type'} (P : type672 A) : (term1172 A P) = (term1173 A P).
Proof. exact (@lem4936191 (A -> Prop) A P). Qed.
Lemma lem4936193 {A : Type'} (f : type1402 A) : (term3379 A f) = (term3380 A f).
Proof. exact (@lem4936192 A (term3381 A f)). Qed.
Lemma lem4936194 {A : Type'} (f : type1402 A) (s : A -> Prop) : (term3382 A f s) = (term3375 A f s).
Proof. exact (eq_refl (term3382 A f s)). Qed.
Lemma lem4936195 {A : Type'} (x : A) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem4936196 {A : Type'} (f : type1402 A) (s : A -> Prop) (x : A) : (term3383 A f s x) = (term3384 A f s x).
Proof. exact (MK_COMB (@lem4936194 A f s) (@lem4936195 A x)). Qed.
Lemma lem4936197 {A : Type'} (x : A) (f : type1402 A) (s : A -> Prop) : (term3384 A f s x) = (term3374 A x f s).
Proof. exact (eq_refl (term3384 A f s x)). Qed.
Lemma lem4936198 {A : Type'} (x : A) (f : type1402 A) (s : A -> Prop) : (term3383 A f s x) = (term3374 A x f s).
Proof. exact (TRANS (@lem4936196 A f s x) (@lem4936197 A x f s)). Qed.
Lemma lem4936199 {A : Type'} (f : type1402 A) (s : A -> Prop) : (term3385 A f s) = (term3375 A f s).
Proof. exact (fun_ext (fun x : A => @lem4936198 A x f s)). Qed.
Lemma lem4936200 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem4936201 {A : Type'} (f : type1402 A) (s : A -> Prop) : (term3386 A f s) = (term3376 A f s).
Proof. exact (MK_COMB (@lem4936200 A) (@lem4936199 A f s)). Qed.
Lemma lem4936202 {A : Type'} (f : type1402 A) : (term3387 A f) = (term3377 A f).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4936201 A f s)). Qed.
Lemma lem4936203 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4936204 {A : Type'} (f : type1402 A) : (term3379 A f) = (term3378 A f).
Proof. exact (MK_COMB (@lem4936203 A) (@lem4936202 A f)). Qed.
Lemma lem4936205 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4936206 {A : Type'} (f : type1402 A) : (term3388 A f) = (term3389 A f).
Proof. exact (MK_COMB (@lem4936205) (@lem4936204 A f)). Qed.
Lemma lem4936207 {A : Type'} (f : type1402 A) (s : A -> Prop) : (term3382 A f s) = (term3375 A f s).
Proof. exact (eq_refl (term3382 A f s)). Qed.
Lemma lem4936208 {A : Type'} (x : type684 A) (s : A -> Prop) : (x s) = (x s).
Proof. exact (eq_refl (x s)). Qed.
Lemma lem4936209 {A : Type'} (f : type1402 A) (x : type684 A) (s : A -> Prop) : (term3390 A f x s) = (term3391 A f x s).
Proof. exact (MK_COMB (@lem4936207 A f s) (@lem4936208 A x s)). Qed.
Lemma lem4936210 {A : Type'} (x : type684 A) (f : type1402 A) (s : A -> Prop) : (term3391 A f x s) = (term3392 A x f s).
Proof. exact (eq_refl (term3391 A f x s)). Qed.
Lemma lem4936211 {A : Type'} (x : type684 A) (f : type1402 A) (s : A -> Prop) : (term3390 A f x s) = (term3392 A x f s).
Proof. exact (TRANS (@lem4936209 A f x s) (@lem4936210 A x f s)). Qed.
Lemma lem4936212 {A : Type'} (x : type684 A) (f : type1402 A) : (term3393 A f x) = (term3394 A x f).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4936211 A x f s)). Qed.
Lemma lem4936213 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4936214 {A : Type'} (x : type684 A) (f : type1402 A) : (term3395 A f x) = (term3396 A x f).
Proof. exact (MK_COMB (@lem4936213 A) (@lem4936212 A x f)). Qed.
Lemma lem4936215 {A : Type'} (f : type1402 A) : (term3397 A f) = (term3398 A f).
Proof. exact (fun_ext (fun x : type684 A => @lem4936214 A x f)). Qed.
Lemma lem4936216 {A : Type'} : (@ex ((A -> Prop) -> A)) = (@ex ((A -> Prop) -> A)).
Proof. exact (eq_refl (@ex ((A -> Prop) -> A))). Qed.
Lemma lem4936217 {A : Type'} (f : type1402 A) : (term3380 A f) = (term3399 A f).
Proof. exact (MK_COMB (@lem4936216 A) (@lem4936215 A f)). Qed.
Lemma lem4936218 {A : Type'} (f : type1402 A) : ((term3379 A f) = (term3380 A f)) = ((term3378 A f) = (term3399 A f)).
Proof. exact (MK_COMB (@lem4936206 A f) (@lem4936217 A f)). Qed.
Lemma lem4936219 {A : Type'} (f : type1402 A) : (term3378 A f) = (term3399 A f).
Proof. exact (EQ_MP (@lem4936218 A f) (@lem4936193 A f)). Qed.
Lemma lem4936221 {A B : Type'} (P : type1413 A B) : (term814 A B P) = (term815 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem4936222 {A : Type'} (P : type672 A) : (term1172 A P) = (term1173 A P).
Proof. exact (@lem4936221 (A -> Prop) A P). Qed.
Lemma lem4936223 {A : Type'} (x : type684 A) (f : type1402 A) : (term3400 A x f) = (term3401 A x f).
Proof. exact (@lem4936222 A (term3402 A x f)). Qed.
Lemma lem4936224 {A : Type'} (x : type684 A) (f : type1402 A) (s : A -> Prop) : (term3403 A x f s) = (term3404 A x f s).
Proof. exact (eq_refl (term3403 A x f s)). Qed.
Lemma lem4936225 {A : Type'} (y : A) : y = y.
Proof. exact (eq_refl y). Qed.
Lemma lem4936226 {A : Type'} (x : type684 A) (f : type1402 A) (s : A -> Prop) (y : A) : (term3405 A x f s y) = (term3406 A x f s y).
Proof. exact (MK_COMB (@lem4936224 A x f s) (@lem4936225 A y)). Qed.
Lemma lem4936227 {A : Type'} (x : type684 A) (y : A) (f : type1402 A) (s : A -> Prop) : (term3406 A x f s y) = (term3407 A x y f s).
Proof. exact (eq_refl (term3406 A x f s y)). Qed.
Lemma lem4936228 {A : Type'} (x : type684 A) (y : A) (f : type1402 A) (s : A -> Prop) : (term3405 A x f s y) = (term3407 A x y f s).
Proof. exact (TRANS (@lem4936226 A x f s y) (@lem4936227 A x y f s)). Qed.
Lemma lem4936229 {A : Type'} (x : type684 A) (f : type1402 A) (s : A -> Prop) : (term3408 A x f s) = (term3404 A x f s).
Proof. exact (fun_ext (fun y : A => @lem4936228 A x y f s)). Qed.
Lemma lem4936230 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem4936231 {A : Type'} (x : type684 A) (f : type1402 A) (s : A -> Prop) : (term3409 A x f s) = (term3392 A x f s).
Proof. exact (MK_COMB (@lem4936230 A) (@lem4936229 A x f s)). Qed.
Lemma lem4936232 {A : Type'} (x : type684 A) (f : type1402 A) : (term3410 A x f) = (term3394 A x f).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4936231 A x f s)). Qed.
Lemma lem4936233 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4936234 {A : Type'} (x : type684 A) (f : type1402 A) : (term3400 A x f) = (term3396 A x f).
Proof. exact (MK_COMB (@lem4936233 A) (@lem4936232 A x f)). Qed.
Lemma lem4936235 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4936236 {A : Type'} (x : type684 A) (f : type1402 A) : (term3411 A x f) = (term3412 A x f).
Proof. exact (MK_COMB (@lem4936235) (@lem4936234 A x f)). Qed.
Lemma lem4936237 {A : Type'} (x : type684 A) (f : type1402 A) (s : A -> Prop) : (term3403 A x f s) = (term3404 A x f s).
Proof. exact (eq_refl (term3403 A x f s)). Qed.
Lemma lem4936238 {A : Type'} (y : type684 A) (s : A -> Prop) : (y s) = (y s).
Proof. exact (eq_refl (y s)). Qed.
Lemma lem4936239 {A : Type'} (x : type684 A) (f : type1402 A) (y : type684 A) (s : A -> Prop) : (term3413 A x f y s) = (term3414 A x f y s).
Proof. exact (MK_COMB (@lem4936237 A x f s) (@lem4936238 A y s)). Qed.
Lemma lem4936240 {A : Type'} (x : type684 A) (y : type684 A) (f : type1402 A) (s : A -> Prop) : (term3414 A x f y s) = (term3415 A x y f s).
Proof. exact (eq_refl (term3414 A x f y s)). Qed.
Lemma lem4936241 {A : Type'} (x : type684 A) (y : type684 A) (f : type1402 A) (s : A -> Prop) : (term3413 A x f y s) = (term3415 A x y f s).
Proof. exact (TRANS (@lem4936239 A x f y s) (@lem4936240 A x y f s)). Qed.
Lemma lem4936242 {A : Type'} (x : type684 A) (y : type684 A) (f : type1402 A) : (term3416 A x f y) = (term3417 A x y f).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4936241 A x y f s)). Qed.
Lemma lem4936243 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4936244 {A : Type'} (x : type684 A) (y : type684 A) (f : type1402 A) : (term3418 A x f y) = (term3419 A x y f).
Proof. exact (MK_COMB (@lem4936243 A) (@lem4936242 A x y f)). Qed.
Lemma lem4936245 {A : Type'} (x : type684 A) (f : type1402 A) : (term3420 A x f) = (term3421 A x f).
Proof. exact (fun_ext (fun y : type684 A => @lem4936244 A x y f)). Qed.
Lemma lem4936246 {A : Type'} : (@ex ((A -> Prop) -> A)) = (@ex ((A -> Prop) -> A)).
Proof. exact (eq_refl (@ex ((A -> Prop) -> A))). Qed.
Lemma lem4936247 {A : Type'} (x : type684 A) (f : type1402 A) : (term3401 A x f) = (term3422 A x f).
Proof. exact (MK_COMB (@lem4936246 A) (@lem4936245 A x f)). Qed.
Lemma lem4936248 {A : Type'} (x : type684 A) (f : type1402 A) : ((term3400 A x f) = (term3401 A x f)) = ((term3396 A x f) = (term3422 A x f)).
Proof. exact (MK_COMB (@lem4936236 A x f) (@lem4936247 A x f)). Qed.
Lemma lem4936249 {A : Type'} (x : type684 A) (f : type1402 A) : (term3396 A x f) = (term3422 A x f).
Proof. exact (EQ_MP (@lem4936248 A x f) (@lem4936223 A x f)). Qed.
Lemma lem4936250 {A : Type'} (f : type1402 A) : (term3398 A f) = (term3423 A f).
Proof. exact (fun_ext (fun x : type684 A => @lem4936249 A x f)). Qed.
Lemma lem4936251 {A : Type'} : (@ex ((A -> Prop) -> A)) = (@ex ((A -> Prop) -> A)).
Proof. exact (eq_refl (@ex ((A -> Prop) -> A))). Qed.
Lemma lem4936252 {A : Type'} (f : type1402 A) : (term3399 A f) = (term3424 A f).
Proof. exact (MK_COMB (@lem4936251 A) (@lem4936250 A f)). Qed.
Lemma lem4936253 {A : Type'} (f : type1402 A) : (term3378 A f) = (term3424 A f).
Proof. exact (TRANS (@lem4936219 A f) (@lem4936252 A f)). Qed.
Lemma lem4936254 {A : Type'} (f : type1402 A) : (term3308 A f) = (term3424 A f).
Proof. exact (TRANS (@lem4936189 A f) (@lem4936253 A f)). Qed.
Lemma lem4936255 {A : Type'} : (term3309 A) = (term3425 A).
Proof. exact (fun_ext (fun f : type1402 A => @lem4936254 A f)). Qed.
Lemma lem4936256 {A : Type'} : (@all (A -> A -> Prop)) = (@all (A -> A -> Prop)).
Proof. exact (eq_refl (@all (A -> A -> Prop))). Qed.
Lemma lem4936257 {A : Type'} : (term3310 A) = (term3426 A).
Proof. exact (MK_COMB (@lem4936256 A) (@lem4936255 A)). Qed.
Lemma lem4936259 {A B : Type'} (P : type1413 A B) : (term814 A B P) = (term815 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem4936260 {A : Type'} (P : type411 A) : (term3427 A P) = (term3428 A P).
Proof. exact (@lem4936259 (type1402 A) (type684 A) P). Qed.
Lemma lem4936261 {A : Type'} : (term3429 A) = (term3430 A).
Proof. exact (@lem4936260 A (term3431 A)). Qed.
Lemma lem4936262 {A : Type'} (f : type1402 A) : (term3432 A f) = (term3423 A f).
Proof. exact (eq_refl (term3432 A f)). Qed.
Lemma lem4936263 {A : Type'} (x : type684 A) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem4936264 {A : Type'} (f : type1402 A) (x : type684 A) : (term3433 A f x) = (term3434 A f x).
Proof. exact (MK_COMB (@lem4936262 A f) (@lem4936263 A x)). Qed.
Lemma lem4936265 {A : Type'} (x : type684 A) (f : type1402 A) : (term3434 A f x) = (term3422 A x f).
Proof. exact (eq_refl (term3434 A f x)). Qed.
Lemma lem4936266 {A : Type'} (x : type684 A) (f : type1402 A) : (term3433 A f x) = (term3422 A x f).
Proof. exact (TRANS (@lem4936264 A f x) (@lem4936265 A x f)). Qed.
Lemma lem4936267 {A : Type'} (f : type1402 A) : (term3435 A f) = (term3423 A f).
Proof. exact (fun_ext (fun x : type684 A => @lem4936266 A x f)). Qed.
Lemma lem4936268 {A : Type'} : (@ex ((A -> Prop) -> A)) = (@ex ((A -> Prop) -> A)).
Proof. exact (eq_refl (@ex ((A -> Prop) -> A))). Qed.
Lemma lem4936269 {A : Type'} (f : type1402 A) : (term3436 A f) = (term3424 A f).
Proof. exact (MK_COMB (@lem4936268 A) (@lem4936267 A f)). Qed.
Lemma lem4936270 {A : Type'} : (term3437 A) = (term3425 A).
Proof. exact (fun_ext (fun f : type1402 A => @lem4936269 A f)). Qed.
Lemma lem4936271 {A : Type'} : (@all (A -> A -> Prop)) = (@all (A -> A -> Prop)).
Proof. exact (eq_refl (@all (A -> A -> Prop))). Qed.
Lemma lem4936272 {A : Type'} : (term3429 A) = (term3426 A).
Proof. exact (MK_COMB (@lem4936271 A) (@lem4936270 A)). Qed.
Lemma lem4936273 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4936274 {A : Type'} : (term3438 A) = (term3439 A).
Proof. exact (MK_COMB (@lem4936273) (@lem4936272 A)). Qed.
Lemma lem4936275 {A : Type'} (f : type1402 A) : (term3432 A f) = (term3423 A f).
Proof. exact (eq_refl (term3432 A f)). Qed.
Lemma lem4936276 {A : Type'} (x : type413 A) (f : type1402 A) : (x f) = (x f).
Proof. exact (eq_refl (x f)). Qed.
Lemma lem4936277 {A : Type'} (x : type413 A) (f : type1402 A) : (term3440 A x f) = (term3441 A x f).
Proof. exact (MK_COMB (@lem4936275 A f) (@lem4936276 A x f)). Qed.
Lemma lem4936278 {A : Type'} (x : type413 A) (f : type1402 A) : (term3441 A x f) = (term3442 A x f).
Proof. exact (eq_refl (term3441 A x f)). Qed.
Lemma lem4936279 {A : Type'} (x : type413 A) (f : type1402 A) : (term3440 A x f) = (term3442 A x f).
Proof. exact (TRANS (@lem4936277 A x f) (@lem4936278 A x f)). Qed.
Lemma lem4936280 {A : Type'} (x : type413 A) : (term3443 A x) = (term3444 A x).
Proof. exact (fun_ext (fun f : type1402 A => @lem4936279 A x f)). Qed.
Lemma lem4936281 {A : Type'} : (@all (A -> A -> Prop)) = (@all (A -> A -> Prop)).
Proof. exact (eq_refl (@all (A -> A -> Prop))). Qed.
Lemma lem4936282 {A : Type'} (x : type413 A) : (term3445 A x) = (term3446 A x).
Proof. exact (MK_COMB (@lem4936281 A) (@lem4936280 A x)). Qed.
Lemma lem4936283 {A : Type'} : (term3447 A) = (term3448 A).
Proof. exact (fun_ext (fun x : type413 A => @lem4936282 A x)). Qed.
Lemma lem4936284 {A : Type'} : (@ex ((A -> A -> Prop) -> (A -> Prop) -> A)) = (@ex ((A -> A -> Prop) -> (A -> Prop) -> A)).
Proof. exact (eq_refl (@ex ((A -> A -> Prop) -> (A -> Prop) -> A))). Qed.
Lemma lem4936285 {A : Type'} : (term3430 A) = (term3449 A).
Proof. exact (MK_COMB (@lem4936284 A) (@lem4936283 A)). Qed.
Lemma lem4936286 {A : Type'} : ((term3429 A) = (term3430 A)) = ((term3426 A) = (term3449 A)).
Proof. exact (MK_COMB (@lem4936274 A) (@lem4936285 A)). Qed.
Lemma lem4936287 {A : Type'} : (term3426 A) = (term3449 A).
Proof. exact (EQ_MP (@lem4936286 A) (@lem4936261 A)). Qed.
Lemma lem4936289 {A B : Type'} (P : type1413 A B) : (term814 A B P) = (term815 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem4936290 {A : Type'} (P : type411 A) : (term3427 A P) = (term3428 A P).
Proof. exact (@lem4936289 (type1402 A) (type684 A) P). Qed.
Lemma lem4936291 {A : Type'} (x : type413 A) : (term3450 A x) = (term3451 A x).
Proof. exact (@lem4936290 A (term3452 A x)). Qed.
Lemma lem4936292 {A : Type'} (x : type413 A) (f : type1402 A) : (term3453 A x f) = (term3454 A x f).
Proof. exact (eq_refl (term3453 A x f)). Qed.
Lemma lem4936293 {A : Type'} (y : type684 A) : y = y.
Proof. exact (eq_refl y). Qed.
Lemma lem4936294 {A : Type'} (x : type413 A) (f : type1402 A) (y : type684 A) : (term3455 A x f y) = (term3456 A x f y).
Proof. exact (MK_COMB (@lem4936292 A x f) (@lem4936293 A y)). Qed.
Lemma lem4936295 {A : Type'} (x : type413 A) (y : type684 A) (f : type1402 A) : (term3456 A x f y) = (term3457 A x y f).
Proof. exact (eq_refl (term3456 A x f y)). Qed.
Lemma lem4936296 {A : Type'} (x : type413 A) (y : type684 A) (f : type1402 A) : (term3455 A x f y) = (term3457 A x y f).
Proof. exact (TRANS (@lem4936294 A x f y) (@lem4936295 A x y f)). Qed.
Lemma lem4936297 {A : Type'} (x : type413 A) (f : type1402 A) : (term3458 A x f) = (term3454 A x f).
Proof. exact (fun_ext (fun y : type684 A => @lem4936296 A x y f)). Qed.
Lemma lem4936298 {A : Type'} : (@ex ((A -> Prop) -> A)) = (@ex ((A -> Prop) -> A)).
Proof. exact (eq_refl (@ex ((A -> Prop) -> A))). Qed.
Lemma lem4936299 {A : Type'} (x : type413 A) (f : type1402 A) : (term3459 A x f) = (term3442 A x f).
Proof. exact (MK_COMB (@lem4936298 A) (@lem4936297 A x f)). Qed.
Lemma lem4936300 {A : Type'} (x : type413 A) : (term3460 A x) = (term3444 A x).
Proof. exact (fun_ext (fun f : type1402 A => @lem4936299 A x f)). Qed.
Lemma lem4936301 {A : Type'} : (@all (A -> A -> Prop)) = (@all (A -> A -> Prop)).
Proof. exact (eq_refl (@all (A -> A -> Prop))). Qed.
Lemma lem4936302 {A : Type'} (x : type413 A) : (term3450 A x) = (term3446 A x).
Proof. exact (MK_COMB (@lem4936301 A) (@lem4936300 A x)). Qed.
Lemma lem4936303 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4936304 {A : Type'} (x : type413 A) : (term3461 A x) = (term3462 A x).
Proof. exact (MK_COMB (@lem4936303) (@lem4936302 A x)). Qed.
Lemma lem4936305 {A : Type'} (x : type413 A) (f : type1402 A) : (term3453 A x f) = (term3454 A x f).
Proof. exact (eq_refl (term3453 A x f)). Qed.
Lemma lem4936306 {A : Type'} (y : type413 A) (f : type1402 A) : (y f) = (y f).
Proof. exact (eq_refl (y f)). Qed.
Lemma lem4936307 {A : Type'} (x : type413 A) (y : type413 A) (f : type1402 A) : (term3463 A x y f) = (term3464 A x y f).
Proof. exact (MK_COMB (@lem4936305 A x f) (@lem4936306 A y f)). Qed.
Lemma lem4936308 {A : Type'} (x : type413 A) (y : type413 A) (f : type1402 A) : (term3464 A x y f) = (term3465 A x y f).
Proof. exact (eq_refl (term3464 A x y f)). Qed.
Lemma lem4936309 {A : Type'} (x : type413 A) (y : type413 A) (f : type1402 A) : (term3463 A x y f) = (term3465 A x y f).
Proof. exact (TRANS (@lem4936307 A x y f) (@lem4936308 A x y f)). Qed.
Lemma lem4936310 {A : Type'} (x : type413 A) (y : type413 A) : (term3466 A x y) = (term3467 A x y).
Proof. exact (fun_ext (fun f : type1402 A => @lem4936309 A x y f)). Qed.
Lemma lem4936311 {A : Type'} : (@all (A -> A -> Prop)) = (@all (A -> A -> Prop)).
Proof. exact (eq_refl (@all (A -> A -> Prop))). Qed.
Lemma lem4936312 {A : Type'} (x : type413 A) (y : type413 A) : (term3468 A x y) = (term3469 A x y).
Proof. exact (MK_COMB (@lem4936311 A) (@lem4936310 A x y)). Qed.
Lemma lem4936313 {A : Type'} (x : type413 A) : (term3470 A x) = (term3471 A x).
Proof. exact (fun_ext (fun y : type413 A => @lem4936312 A x y)). Qed.
Lemma lem4936314 {A : Type'} : (@ex ((A -> A -> Prop) -> (A -> Prop) -> A)) = (@ex ((A -> A -> Prop) -> (A -> Prop) -> A)).
Proof. exact (eq_refl (@ex ((A -> A -> Prop) -> (A -> Prop) -> A))). Qed.
Lemma lem4936315 {A : Type'} (x : type413 A) : (term3451 A x) = (term3472 A x).
Proof. exact (MK_COMB (@lem4936314 A) (@lem4936313 A x)). Qed.
Lemma lem4936316 {A : Type'} (x : type413 A) : ((term3450 A x) = (term3451 A x)) = ((term3446 A x) = (term3472 A x)).
Proof. exact (MK_COMB (@lem4936304 A x) (@lem4936315 A x)). Qed.
Lemma lem4936317 {A : Type'} (x : type413 A) : (term3446 A x) = (term3472 A x).
Proof. exact (EQ_MP (@lem4936316 A x) (@lem4936291 A x)). Qed.
Lemma lem4936318 {A : Type'} : (term3448 A) = (term3473 A).
Proof. exact (fun_ext (fun x : type413 A => @lem4936317 A x)). Qed.
Lemma lem4936319 {A : Type'} : (@ex ((A -> A -> Prop) -> (A -> Prop) -> A)) = (@ex ((A -> A -> Prop) -> (A -> Prop) -> A)).
Proof. exact (eq_refl (@ex ((A -> A -> Prop) -> (A -> Prop) -> A))). Qed.
Lemma lem4936320 {A : Type'} : (term3449 A) = (term3474 A).
Proof. exact (MK_COMB (@lem4936319 A) (@lem4936318 A)). Qed.
Lemma lem4936321 {A : Type'} : (term3426 A) = (term3474 A).
Proof. exact (TRANS (@lem4936287 A) (@lem4936320 A)). Qed.
Lemma lem4936323 {A : Type'} : (term3310 A) = (term3474 A).
Proof. exact (TRANS (@lem4936257 A) (@lem4936321 A)). Qed.
Lemma lem4936324 {A : Type'} : (term2709 A) = (term3474 A).
Proof. exact (TRANS (@lem4935972 A) (@lem4936323 A)). Qed.
Lemma lem4936325 {A : Type'} (h1 : term2709 A) : term3474 A.
Proof. exact (EQ_MP (@lem4936324 A) (@lem4934981 A h1)). Qed.
Lemma lem4936340 {A B : Type'} (s : A -> Prop) (f : type1413 A B) (x : A) (y : A) : (term3475 A B s f x y) = (term3476 A B s f x y).
Proof. exact (@lem17362 (term3477 A B s x f y) (x = y)). Qed.
Lemma lem4936341 {A : Type'} (P : A -> Prop) : (term2420 A P) = (term2421 A P).
Proof. exact (@lem18392 A P). Qed.
Lemma lem4936342 {A B : Type'} (s : A -> Prop) (f : type1413 A B) (x : A) : (term3478 A B s f x) = (term3479 A B s f x).
Proof. exact (@lem4936341 A (term2849 A B s f x)). Qed.
Lemma lem4936343 {A B : Type'} (s : A -> Prop) (f : type1413 A B) (x : A) (y : A) : (term3480 A B s f x y) = (term2848 A B s f x y).
Proof. exact (eq_refl (term3480 A B s f x y)). Qed.
Lemma lem4936344 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem4936345 {A B : Type'} (s : A -> Prop) (f : type1413 A B) (x : A) (y : A) : (term3481 A B s f x y) = (term3475 A B s f x y).
Proof. exact (MK_COMB (@lem4936344) (@lem4936343 A B s f x y)). Qed.
Lemma lem4936346 {A B : Type'} (s : A -> Prop) (f : type1413 A B) (x : A) (y : A) : (term3481 A B s f x y) = (term3476 A B s f x y).
Proof. exact (TRANS (@lem4936345 A B s f x y) (@lem4936340 A B s f x y)). Qed.
Lemma lem4936347 {A B : Type'} (s : A -> Prop) (f : type1413 A B) (x : A) : (term3482 A B s f x) = (term3483 A B s f x).
Proof. exact (fun_ext (fun y : A => @lem4936346 A B s f x y)). Qed.
Lemma lem4936348 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem4936349 {A B : Type'} (s : A -> Prop) (f : type1413 A B) (x : A) : (term3479 A B s f x) = (term3484 A B s f x).
Proof. exact (MK_COMB (@lem4936348 A) (@lem4936347 A B s f x)). Qed.
Lemma lem4936350 {A B : Type'} (s : A -> Prop) (f : type1413 A B) (x : A) : (term3478 A B s f x) = (term3484 A B s f x).
Proof. exact (TRANS (@lem4936342 A B s f x) (@lem4936349 A B s f x)). Qed.
Lemma lem4936351 {A : Type'} (P : A -> Prop) : (term2420 A P) = (term2421 A P).
Proof. exact (@lem18392 A P). Qed.
Lemma lem4936352 {A B : Type'} (s : A -> Prop) (f : type1413 A B) : (term3485 A B s f) = (term3486 A B s f).
Proof. exact (@lem4936351 A (term2851 A B s f)). Qed.
Lemma lem4936353 {A B : Type'} (s : A -> Prop) (f : type1413 A B) (x : A) : (term3487 A B s f x) = (term2850 A B s f x).
Proof. exact (eq_refl (term3487 A B s f x)). Qed.
Lemma lem4936354 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem4936355 {A B : Type'} (s : A -> Prop) (f : type1413 A B) (x : A) : (term3488 A B s f x) = (term3478 A B s f x).
Proof. exact (MK_COMB (@lem4936354) (@lem4936353 A B s f x)). Qed.
Lemma lem4936356 {A B : Type'} (s : A -> Prop) (f : type1413 A B) (x : A) : (term3488 A B s f x) = (term3484 A B s f x).
Proof. exact (TRANS (@lem4936355 A B s f x) (@lem4936350 A B s f x)). Qed.
Lemma lem4936357 {A B : Type'} (s : A -> Prop) (f : type1413 A B) : (term3489 A B s f) = (term3490 A B s f).
Proof. exact (fun_ext (fun x : A => @lem4936356 A B s f x)). Qed.
Lemma lem4936358 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem4936359 {A B : Type'} (s : A -> Prop) (f : type1413 A B) : (term3486 A B s f) = (term3491 A B s f).
Proof. exact (MK_COMB (@lem4936358 A) (@lem4936357 A B s f)). Qed.
Lemma lem4936360 {A B : Type'} (s : A -> Prop) (f : type1413 A B) : (term3485 A B s f) = (term3491 A B s f).
Proof. exact (TRANS (@lem4936352 A B s f) (@lem4936359 A B s f)). Qed.
Lemma lem4936361 {A : Type'} (s : A -> Prop) : (term1224 A s) = (term1224 A s).
Proof. exact (eq_refl (term1224 A s)). Qed.
Lemma lem4936362 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4936363 {A B : Type'} (s : A -> Prop) (f : type1413 A B) : (term3492 A B s f) = (term3493 A B s f).
Proof. exact (MK_COMB (@lem4936362) (@lem4936360 A B s f)). Qed.
Lemma lem4936364 {A B : Type'} (f : type1413 A B) (s : A -> Prop) : (term3494 A B f s) = (term3495 A B f s).
Proof. exact (MK_COMB (@lem4936363 A B s f) (@lem4936361 A s)). Qed.
Lemma lem4936365 {A B : Type'} (f : type1413 A B) (s : A -> Prop) : (term3496 A B f s) = (term3494 A B f s).
Proof. exact (@lem17045 (term2852 A B s f) (@FINITE A s)). Qed.
Lemma lem4936366 {A B : Type'} (f : type1413 A B) (s : A -> Prop) : (term3496 A B f s) = (term3495 A B f s).
Proof. exact (TRANS (@lem4936365 A B f s) (@lem4936364 A B f s)). Qed.
Lemma lem4936367 {A B : Type'} (f : type1413 A B) (s : A -> Prop) : ((term2847 A B f s) = (@CARD A s)) = ((term2847 A B f s) = (@CARD A s)).
Proof. exact (eq_refl ((term2847 A B f s) = (@CARD A s))). Qed.
Lemma lem4936368 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4936369 {A B : Type'} (f : type1413 A B) (s : A -> Prop) : (term3497 A B f s) = (term3498 A B f s).
Proof. exact (MK_COMB (@lem4936368) (@lem4936366 A B f s)). Qed.
Lemma lem4936370 {A B : Type'} (f : type1413 A B) (s : A -> Prop) : (term3499 A B f s) = (term3500 A B f s).
Proof. exact (MK_COMB (@lem4936369 A B f s) (@lem4936367 A B f s)). Qed.
Lemma lem4936371 {A B : Type'} (f : type1413 A B) (s : A -> Prop) : (term2856 A B f s) = (term3499 A B f s).
Proof. exact (@lem17265 (term2854 A B f s) ((term2847 A B f s) = (@CARD A s))). Qed.
Lemma lem4936372 {A B : Type'} (f : type1413 A B) (s : A -> Prop) : (term2856 A B f s) = (term3500 A B f s).
Proof. exact (TRANS (@lem4936371 A B f s) (@lem4936370 A B f s)). Qed.
Lemma lem4936373 {A B : Type'} (f : type1413 A B) : (term2857 A B f) = (term3501 A B f).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4936372 A B f s)). Qed.
Lemma lem4936374 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4936375 {A B : Type'} (f : type1413 A B) : (term2858 A B f) = (term3502 A B f).
Proof. exact (MK_COMB (@lem4936374 A) (@lem4936373 A B f)). Qed.
Lemma lem4936376 {A B : Type'} : (term2859 A B) = (term3503 A B).
Proof. exact (fun_ext (fun f : type1413 A B => @lem4936375 A B f)). Qed.
Lemma lem4936377 {A B : Type'} : (@all (A -> B -> Prop)) = (@all (A -> B -> Prop)).
Proof. exact (eq_refl (@all (A -> B -> Prop))). Qed.
Lemma lem4936378 {A B : Type'} : (term2708 A B) = (term3504 A B).
Proof. exact (MK_COMB (@lem4936377 A B) (@lem4936376 A B)). Qed.
Lemma lem4936485 {A : Type'} (P : A -> Prop) (Q : Prop) : (term1154 A P Q) = (term1155 A P Q).
Proof. exact (EQ_MP (@lem18905 A P Q) (@lem18904 A P Q)). Qed.
Lemma lem4936486 {A : Type'} (P : A -> Prop) (Q : Prop) : (term1154 A P Q) = (term1155 A P Q).
Proof. exact (@lem4936485 A P Q). Qed.
Lemma lem4936487 {A B : Type'} (f : type1413 A B) (s : A -> Prop) : (term3505 A B f s) = (term3506 A B f s).
Proof. exact (@lem4936486 A (term3490 A B s f) (term1224 A s)). Qed.
Lemma lem4936488 {A B : Type'} (s : A -> Prop) (f : type1413 A B) (x : A) : (term3507 A B s f x) = (term3484 A B s f x).
Proof. exact (eq_refl (term3507 A B s f x)). Qed.
Lemma lem4936489 {A B : Type'} (s : A -> Prop) (f : type1413 A B) : (term3508 A B s f) = (term3490 A B s f).
Proof. exact (fun_ext (fun x : A => @lem4936488 A B s f x)). Qed.
Lemma lem4936490 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem4936491 {A B : Type'} (s : A -> Prop) (f : type1413 A B) : (term3509 A B s f) = (term3491 A B s f).
Proof. exact (MK_COMB (@lem4936490 A) (@lem4936489 A B s f)). Qed.
Lemma lem4936492 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4936493 {A B : Type'} (s : A -> Prop) (f : type1413 A B) : (term3510 A B s f) = (term3493 A B s f).
Proof. exact (MK_COMB (@lem4936492) (@lem4936491 A B s f)). Qed.
Lemma lem4936494 {A : Type'} (s : A -> Prop) : (term1224 A s) = (term1224 A s).
Proof. exact (eq_refl (term1224 A s)). Qed.
Lemma lem4936495 {A B : Type'} (f : type1413 A B) (s : A -> Prop) : (term3505 A B f s) = (term3495 A B f s).
Proof. exact (MK_COMB (@lem4936493 A B s f) (@lem4936494 A s)). Qed.
Lemma lem4936496 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4936497 {A B : Type'} (f : type1413 A B) (s : A -> Prop) : (term3511 A B f s) = (term3512 A B f s).
Proof. exact (MK_COMB (@lem4936496) (@lem4936495 A B f s)). Qed.
Lemma lem4936498 {A B : Type'} (s : A -> Prop) (f : type1413 A B) (x : A) : (term3507 A B s f x) = (term3484 A B s f x).
Proof. exact (eq_refl (term3507 A B s f x)). Qed.
Lemma lem4936499 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4936500 {A B : Type'} (s : A -> Prop) (f : type1413 A B) (x : A) : (term3513 A B s f x) = (term3514 A B s f x).
Proof. exact (MK_COMB (@lem4936499) (@lem4936498 A B s f x)). Qed.
Lemma lem4936501 {A : Type'} (s : A -> Prop) : (term1224 A s) = (term1224 A s).
Proof. exact (eq_refl (term1224 A s)). Qed.
Lemma lem4936502 {A B : Type'} (f : type1413 A B) (x : A) (s : A -> Prop) : (term3515 A B f x s) = (term3516 A B f x s).
Proof. exact (MK_COMB (@lem4936500 A B s f x) (@lem4936501 A s)). Qed.
Lemma lem4936503 {A B : Type'} (f : type1413 A B) (s : A -> Prop) : (term3517 A B f s) = (term3518 A B f s).
Proof. exact (fun_ext (fun x : A => @lem4936502 A B f x s)). Qed.
Lemma lem4936504 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem4936505 {A B : Type'} (f : type1413 A B) (s : A -> Prop) : (term3506 A B f s) = (term3519 A B f s).
Proof. exact (MK_COMB (@lem4936504 A) (@lem4936503 A B f s)). Qed.
Lemma lem4936506 {A B : Type'} (f : type1413 A B) (s : A -> Prop) : ((term3505 A B f s) = (term3506 A B f s)) = ((term3495 A B f s) = (term3519 A B f s)).
Proof. exact (MK_COMB (@lem4936497 A B f s) (@lem4936505 A B f s)). Qed.
Lemma lem4936507 {A B : Type'} (f : type1413 A B) (s : A -> Prop) : (term3495 A B f s) = (term3519 A B f s).
Proof. exact (EQ_MP (@lem4936506 A B f s) (@lem4936487 A B f s)). Qed.
Lemma lem4936509 {A : Type'} (P : A -> Prop) (Q : Prop) : (term1154 A P Q) = (term1155 A P Q).
Proof. exact (EQ_MP (@lem18905 A P Q) (@lem18904 A P Q)). Qed.
Lemma lem4936510 {A : Type'} (P : A -> Prop) (Q : Prop) : (term1154 A P Q) = (term1155 A P Q).
Proof. exact (@lem4936509 A P Q). Qed.
Lemma lem4936511 {A B : Type'} (f : type1413 A B) (x : A) (s : A -> Prop) : (term3520 A B f x s) = (term3521 A B f x s).
Proof. exact (@lem4936510 A (term3483 A B s f x) (term1224 A s)). Qed.
Lemma lem4936512 {A B : Type'} (s : A -> Prop) (f : type1413 A B) (x : A) (y : A) : (term3522 A B s f x y) = (term3476 A B s f x y).
Proof. exact (eq_refl (term3522 A B s f x y)). Qed.
Lemma lem4936513 {A B : Type'} (s : A -> Prop) (f : type1413 A B) (x : A) : (term3523 A B s f x) = (term3483 A B s f x).
Proof. exact (fun_ext (fun y : A => @lem4936512 A B s f x y)). Qed.
Lemma lem4936514 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem4936515 {A B : Type'} (s : A -> Prop) (f : type1413 A B) (x : A) : (term3524 A B s f x) = (term3484 A B s f x).
Proof. exact (MK_COMB (@lem4936514 A) (@lem4936513 A B s f x)). Qed.
Lemma lem4936516 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4936517 {A B : Type'} (s : A -> Prop) (f : type1413 A B) (x : A) : (term3525 A B s f x) = (term3514 A B s f x).
Proof. exact (MK_COMB (@lem4936516) (@lem4936515 A B s f x)). Qed.
Lemma lem4936518 {A : Type'} (s : A -> Prop) : (term1224 A s) = (term1224 A s).
Proof. exact (eq_refl (term1224 A s)). Qed.
Lemma lem4936519 {A B : Type'} (f : type1413 A B) (x : A) (s : A -> Prop) : (term3520 A B f x s) = (term3516 A B f x s).
Proof. exact (MK_COMB (@lem4936517 A B s f x) (@lem4936518 A s)). Qed.
Lemma lem4936520 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4936521 {A B : Type'} (f : type1413 A B) (x : A) (s : A -> Prop) : (term3526 A B f x s) = (term3527 A B f x s).
Proof. exact (MK_COMB (@lem4936520) (@lem4936519 A B f x s)). Qed.
Lemma lem4936522 {A B : Type'} (s : A -> Prop) (f : type1413 A B) (x : A) (y : A) : (term3522 A B s f x y) = (term3476 A B s f x y).
Proof. exact (eq_refl (term3522 A B s f x y)). Qed.
Lemma lem4936523 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4936524 {A B : Type'} (s : A -> Prop) (f : type1413 A B) (x : A) (y : A) : (term3528 A B s f x y) = (term3529 A B s f x y).
Proof. exact (MK_COMB (@lem4936523) (@lem4936522 A B s f x y)). Qed.
Lemma lem4936525 {A : Type'} (s : A -> Prop) : (term1224 A s) = (term1224 A s).
Proof. exact (eq_refl (term1224 A s)). Qed.
Lemma lem4936526 {A B : Type'} (f : type1413 A B) (x : A) (y : A) (s : A -> Prop) : (term3530 A B f x y s) = (term3531 A B f x y s).
Proof. exact (MK_COMB (@lem4936524 A B s f x y) (@lem4936525 A s)). Qed.
Lemma lem4936527 {A B : Type'} (f : type1413 A B) (x : A) (s : A -> Prop) : (term3532 A B f x s) = (term3533 A B f x s).
Proof. exact (fun_ext (fun y : A => @lem4936526 A B f x y s)). Qed.
Lemma lem4936528 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem4936529 {A B : Type'} (f : type1413 A B) (x : A) (s : A -> Prop) : (term3521 A B f x s) = (term3534 A B f x s).
Proof. exact (MK_COMB (@lem4936528 A) (@lem4936527 A B f x s)). Qed.
Lemma lem4936530 {A B : Type'} (f : type1413 A B) (x : A) (s : A -> Prop) : ((term3520 A B f x s) = (term3521 A B f x s)) = ((term3516 A B f x s) = (term3534 A B f x s)).
Proof. exact (MK_COMB (@lem4936521 A B f x s) (@lem4936529 A B f x s)). Qed.
Lemma lem4936531 {A B : Type'} (f : type1413 A B) (x : A) (s : A -> Prop) : (term3516 A B f x s) = (term3534 A B f x s).
Proof. exact (EQ_MP (@lem4936530 A B f x s) (@lem4936511 A B f x s)). Qed.
Lemma lem4936532 {A B : Type'} (f : type1413 A B) (s : A -> Prop) : (term3518 A B f s) = (term3535 A B f s).
Proof. exact (fun_ext (fun x : A => @lem4936531 A B f x s)). Qed.
Lemma lem4936533 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem4936534 {A B : Type'} (f : type1413 A B) (s : A -> Prop) : (term3519 A B f s) = (term3536 A B f s).
Proof. exact (MK_COMB (@lem4936533 A) (@lem4936532 A B f s)). Qed.
Lemma lem4936535 {A B : Type'} (f : type1413 A B) (s : A -> Prop) : (term3495 A B f s) = (term3536 A B f s).
Proof. exact (TRANS (@lem4936507 A B f s) (@lem4936534 A B f s)). Qed.
Lemma lem4936536 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4936537 {A B : Type'} (f : type1413 A B) (s : A -> Prop) : (term3498 A B f s) = (term3537 A B f s).
Proof. exact (MK_COMB (@lem4936536) (@lem4936535 A B f s)). Qed.
Lemma lem4936538 {A B : Type'} (f : type1413 A B) (s : A -> Prop) : ((term2847 A B f s) = (@CARD A s)) = ((term2847 A B f s) = (@CARD A s)).
Proof. exact (eq_refl ((term2847 A B f s) = (@CARD A s))). Qed.
Lemma lem4936539 {A B : Type'} (f : type1413 A B) (s : A -> Prop) : (term3500 A B f s) = (term3538 A B f s).
Proof. exact (MK_COMB (@lem4936537 A B f s) (@lem4936538 A B f s)). Qed.
Lemma lem4936541 {A : Type'} (P : A -> Prop) (Q : Prop) : (term1154 A P Q) = (term1155 A P Q).
Proof. exact (EQ_MP (@lem18905 A P Q) (@lem18904 A P Q)). Qed.
Lemma lem4936542 {A : Type'} (P : A -> Prop) (Q : Prop) : (term1154 A P Q) = (term1155 A P Q).
Proof. exact (@lem4936541 A P Q). Qed.
Lemma lem4936543 {A B : Type'} (f : type1413 A B) (s : A -> Prop) : (term3539 A B f s) = (term3540 A B f s).
Proof. exact (@lem4936542 A (term3535 A B f s) ((term2847 A B f s) = (@CARD A s))). Qed.
Lemma lem4936544 {A B : Type'} (f : type1413 A B) (x : A) (s : A -> Prop) : (term3541 A B f s x) = (term3534 A B f x s).
Proof. exact (eq_refl (term3541 A B f s x)). Qed.
Lemma lem4936545 {A B : Type'} (f : type1413 A B) (s : A -> Prop) : (term3542 A B f s) = (term3535 A B f s).
Proof. exact (fun_ext (fun x : A => @lem4936544 A B f x s)). Qed.
Lemma lem4936546 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem4936547 {A B : Type'} (f : type1413 A B) (s : A -> Prop) : (term3543 A B f s) = (term3536 A B f s).
Proof. exact (MK_COMB (@lem4936546 A) (@lem4936545 A B f s)). Qed.
Lemma lem4936548 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4936549 {A B : Type'} (f : type1413 A B) (s : A -> Prop) : (term3544 A B f s) = (term3537 A B f s).
Proof. exact (MK_COMB (@lem4936548) (@lem4936547 A B f s)). Qed.
Lemma lem4936550 {A B : Type'} (f : type1413 A B) (s : A -> Prop) : ((term2847 A B f s) = (@CARD A s)) = ((term2847 A B f s) = (@CARD A s)).
Proof. exact (eq_refl ((term2847 A B f s) = (@CARD A s))). Qed.
Lemma lem4936551 {A B : Type'} (f : type1413 A B) (s : A -> Prop) : (term3539 A B f s) = (term3538 A B f s).
Proof. exact (MK_COMB (@lem4936549 A B f s) (@lem4936550 A B f s)). Qed.
Lemma lem4936552 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4936553 {A B : Type'} (f : type1413 A B) (s : A -> Prop) : (term3545 A B f s) = (term3546 A B f s).
Proof. exact (MK_COMB (@lem4936552) (@lem4936551 A B f s)). Qed.
Lemma lem4936554 {A B : Type'} (f : type1413 A B) (x : A) (s : A -> Prop) : (term3541 A B f s x) = (term3534 A B f x s).
Proof. exact (eq_refl (term3541 A B f s x)). Qed.
Lemma lem4936555 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4936556 {A B : Type'} (f : type1413 A B) (x : A) (s : A -> Prop) : (term3547 A B f s x) = (term3548 A B f x s).
Proof. exact (MK_COMB (@lem4936555) (@lem4936554 A B f x s)). Qed.
Lemma lem4936557 {A B : Type'} (f : type1413 A B) (s : A -> Prop) : ((term2847 A B f s) = (@CARD A s)) = ((term2847 A B f s) = (@CARD A s)).
Proof. exact (eq_refl ((term2847 A B f s) = (@CARD A s))). Qed.
Lemma lem4936558 {A B : Type'} (x : A) (f : type1413 A B) (s : A -> Prop) : (term3549 A B x f s) = (term3550 A B x f s).
Proof. exact (MK_COMB (@lem4936556 A B f x s) (@lem4936557 A B f s)). Qed.
Lemma lem4936559 {A B : Type'} (f : type1413 A B) (s : A -> Prop) : (term3551 A B f s) = (term3552 A B f s).
Proof. exact (fun_ext (fun x : A => @lem4936558 A B x f s)). Qed.
Lemma lem4936560 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem4936561 {A B : Type'} (f : type1413 A B) (s : A -> Prop) : (term3540 A B f s) = (term3553 A B f s).
Proof. exact (MK_COMB (@lem4936560 A) (@lem4936559 A B f s)). Qed.
Lemma lem4936562 {A B : Type'} (f : type1413 A B) (s : A -> Prop) : ((term3539 A B f s) = (term3540 A B f s)) = ((term3538 A B f s) = (term3553 A B f s)).
Proof. exact (MK_COMB (@lem4936553 A B f s) (@lem4936561 A B f s)). Qed.
Lemma lem4936563 {A B : Type'} (f : type1413 A B) (s : A -> Prop) : (term3538 A B f s) = (term3553 A B f s).
Proof. exact (EQ_MP (@lem4936562 A B f s) (@lem4936543 A B f s)). Qed.
Lemma lem4936565 {A : Type'} (P : A -> Prop) (Q : Prop) : (term1154 A P Q) = (term1155 A P Q).
Proof. exact (EQ_MP (@lem18905 A P Q) (@lem18904 A P Q)). Qed.
Lemma lem4936566 {A : Type'} (P : A -> Prop) (Q : Prop) : (term1154 A P Q) = (term1155 A P Q).
Proof. exact (@lem4936565 A P Q). Qed.
Lemma lem4936567 {A B : Type'} (x : A) (f : type1413 A B) (s : A -> Prop) : (term3554 A B x f s) = (term3555 A B x f s).
Proof. exact (@lem4936566 A (term3533 A B f x s) ((term2847 A B f s) = (@CARD A s))). Qed.
Lemma lem4936568 {A B : Type'} (f : type1413 A B) (x : A) (y : A) (s : A -> Prop) : (term3556 A B f x s y) = (term3531 A B f x y s).
Proof. exact (eq_refl (term3556 A B f x s y)). Qed.
Lemma lem4936569 {A B : Type'} (f : type1413 A B) (x : A) (s : A -> Prop) : (term3557 A B f x s) = (term3533 A B f x s).
Proof. exact (fun_ext (fun y : A => @lem4936568 A B f x y s)). Qed.
Lemma lem4936570 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem4936571 {A B : Type'} (f : type1413 A B) (x : A) (s : A -> Prop) : (term3558 A B f x s) = (term3534 A B f x s).
Proof. exact (MK_COMB (@lem4936570 A) (@lem4936569 A B f x s)). Qed.
Lemma lem4936572 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4936573 {A B : Type'} (f : type1413 A B) (x : A) (s : A -> Prop) : (term3559 A B f x s) = (term3548 A B f x s).
Proof. exact (MK_COMB (@lem4936572) (@lem4936571 A B f x s)). Qed.
Lemma lem4936574 {A B : Type'} (f : type1413 A B) (s : A -> Prop) : ((term2847 A B f s) = (@CARD A s)) = ((term2847 A B f s) = (@CARD A s)).
Proof. exact (eq_refl ((term2847 A B f s) = (@CARD A s))). Qed.
Lemma lem4936575 {A B : Type'} (x : A) (f : type1413 A B) (s : A -> Prop) : (term3554 A B x f s) = (term3550 A B x f s).
Proof. exact (MK_COMB (@lem4936573 A B f x s) (@lem4936574 A B f s)). Qed.
Lemma lem4936576 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4936577 {A B : Type'} (x : A) (f : type1413 A B) (s : A -> Prop) : (term3560 A B x f s) = (term3561 A B x f s).
Proof. exact (MK_COMB (@lem4936576) (@lem4936575 A B x f s)). Qed.
Lemma lem4936578 {A B : Type'} (f : type1413 A B) (x : A) (y : A) (s : A -> Prop) : (term3556 A B f x s y) = (term3531 A B f x y s).
Proof. exact (eq_refl (term3556 A B f x s y)). Qed.
Lemma lem4936579 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4936580 {A B : Type'} (f : type1413 A B) (x : A) (y : A) (s : A -> Prop) : (term3562 A B f x s y) = (term3563 A B f x y s).
Proof. exact (MK_COMB (@lem4936579) (@lem4936578 A B f x y s)). Qed.
Lemma lem4936581 {A B : Type'} (f : type1413 A B) (s : A -> Prop) : ((term2847 A B f s) = (@CARD A s)) = ((term2847 A B f s) = (@CARD A s)).
Proof. exact (eq_refl ((term2847 A B f s) = (@CARD A s))). Qed.
Lemma lem4936582 {A B : Type'} (x : A) (y : A) (f : type1413 A B) (s : A -> Prop) : (term3564 A B x y f s) = (term3565 A B x y f s).
Proof. exact (MK_COMB (@lem4936580 A B f x y s) (@lem4936581 A B f s)). Qed.
Lemma lem4936583 {A B : Type'} (x : A) (f : type1413 A B) (s : A -> Prop) : (term3566 A B x f s) = (term3567 A B x f s).
Proof. exact (fun_ext (fun y : A => @lem4936582 A B x y f s)). Qed.
Lemma lem4936584 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem4936585 {A B : Type'} (x : A) (f : type1413 A B) (s : A -> Prop) : (term3555 A B x f s) = (term3568 A B x f s).
Proof. exact (MK_COMB (@lem4936584 A) (@lem4936583 A B x f s)). Qed.
Lemma lem4936586 {A B : Type'} (x : A) (f : type1413 A B) (s : A -> Prop) : ((term3554 A B x f s) = (term3555 A B x f s)) = ((term3550 A B x f s) = (term3568 A B x f s)).
Proof. exact (MK_COMB (@lem4936577 A B x f s) (@lem4936585 A B x f s)). Qed.
Lemma lem4936587 {A B : Type'} (x : A) (f : type1413 A B) (s : A -> Prop) : (term3550 A B x f s) = (term3568 A B x f s).
Proof. exact (EQ_MP (@lem4936586 A B x f s) (@lem4936567 A B x f s)). Qed.
Lemma lem4936588 {A B : Type'} (f : type1413 A B) (s : A -> Prop) : (term3552 A B f s) = (term3569 A B f s).
Proof. exact (fun_ext (fun x : A => @lem4936587 A B x f s)). Qed.
Lemma lem4936589 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem4936590 {A B : Type'} (f : type1413 A B) (s : A -> Prop) : (term3553 A B f s) = (term3570 A B f s).
Proof. exact (MK_COMB (@lem4936589 A) (@lem4936588 A B f s)). Qed.
Lemma lem4936591 {A B : Type'} (f : type1413 A B) (s : A -> Prop) : (term3538 A B f s) = (term3570 A B f s).
Proof. exact (TRANS (@lem4936563 A B f s) (@lem4936590 A B f s)). Qed.
Lemma lem4936592 {A B : Type'} (f : type1413 A B) (s : A -> Prop) : (term3500 A B f s) = (term3570 A B f s).
Proof. exact (TRANS (@lem4936539 A B f s) (@lem4936591 A B f s)). Qed.
Lemma lem4936593 {A B : Type'} (f : type1413 A B) : (term3501 A B f) = (term3571 A B f).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4936592 A B f s)). Qed.
Lemma lem4936594 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4936595 {A B : Type'} (f : type1413 A B) : (term3502 A B f) = (term3572 A B f).
Proof. exact (MK_COMB (@lem4936594 A) (@lem4936593 A B f)). Qed.
Lemma lem4936597 {A B : Type'} (P : type1413 A B) : (term814 A B P) = (term815 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem4936598 {A : Type'} (P : type672 A) : (term1172 A P) = (term1173 A P).
Proof. exact (@lem4936597 (A -> Prop) A P). Qed.
Lemma lem4936599 {A B : Type'} (f : type1413 A B) : (term3573 A B f) = (term3574 A B f).
Proof. exact (@lem4936598 A (term3575 A B f)). Qed.
Lemma lem4936600 {A B : Type'} (f : type1413 A B) (s : A -> Prop) : (term3576 A B f s) = (term3569 A B f s).
Proof. exact (eq_refl (term3576 A B f s)). Qed.
Lemma lem4936601 {A : Type'} (x : A) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem4936602 {A B : Type'} (f : type1413 A B) (s : A -> Prop) (x : A) : (term3577 A B f s x) = (term3578 A B f s x).
Proof. exact (MK_COMB (@lem4936600 A B f s) (@lem4936601 A x)). Qed.
Lemma lem4936603 {A B : Type'} (x : A) (f : type1413 A B) (s : A -> Prop) : (term3578 A B f s x) = (term3568 A B x f s).
Proof. exact (eq_refl (term3578 A B f s x)). Qed.
Lemma lem4936604 {A B : Type'} (x : A) (f : type1413 A B) (s : A -> Prop) : (term3577 A B f s x) = (term3568 A B x f s).
Proof. exact (TRANS (@lem4936602 A B f s x) (@lem4936603 A B x f s)). Qed.
Lemma lem4936605 {A B : Type'} (f : type1413 A B) (s : A -> Prop) : (term3579 A B f s) = (term3569 A B f s).
Proof. exact (fun_ext (fun x : A => @lem4936604 A B x f s)). Qed.
Lemma lem4936606 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem4936607 {A B : Type'} (f : type1413 A B) (s : A -> Prop) : (term3580 A B f s) = (term3570 A B f s).
Proof. exact (MK_COMB (@lem4936606 A) (@lem4936605 A B f s)). Qed.
Lemma lem4936608 {A B : Type'} (f : type1413 A B) : (term3581 A B f) = (term3571 A B f).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4936607 A B f s)). Qed.
Lemma lem4936609 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4936610 {A B : Type'} (f : type1413 A B) : (term3573 A B f) = (term3572 A B f).
Proof. exact (MK_COMB (@lem4936609 A) (@lem4936608 A B f)). Qed.
Lemma lem4936611 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4936612 {A B : Type'} (f : type1413 A B) : (term3582 A B f) = (term3583 A B f).
Proof. exact (MK_COMB (@lem4936611) (@lem4936610 A B f)). Qed.
Lemma lem4936613 {A B : Type'} (f : type1413 A B) (s : A -> Prop) : (term3576 A B f s) = (term3569 A B f s).
Proof. exact (eq_refl (term3576 A B f s)). Qed.
Lemma lem4936614 {A : Type'} (x : type684 A) (s : A -> Prop) : (x s) = (x s).
Proof. exact (eq_refl (x s)). Qed.
Lemma lem4936615 {A B : Type'} (f : type1413 A B) (x : type684 A) (s : A -> Prop) : (term3584 A B f x s) = (term3585 A B f x s).
Proof. exact (MK_COMB (@lem4936613 A B f s) (@lem4936614 A x s)). Qed.
Lemma lem4936616 {A B : Type'} (x : type684 A) (f : type1413 A B) (s : A -> Prop) : (term3585 A B f x s) = (term3586 A B x f s).
Proof. exact (eq_refl (term3585 A B f x s)). Qed.
Lemma lem4936617 {A B : Type'} (x : type684 A) (f : type1413 A B) (s : A -> Prop) : (term3584 A B f x s) = (term3586 A B x f s).
Proof. exact (TRANS (@lem4936615 A B f x s) (@lem4936616 A B x f s)). Qed.
Lemma lem4936618 {A B : Type'} (x : type684 A) (f : type1413 A B) : (term3587 A B f x) = (term3588 A B x f).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4936617 A B x f s)). Qed.
Lemma lem4936619 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4936620 {A B : Type'} (x : type684 A) (f : type1413 A B) : (term3589 A B f x) = (term3590 A B x f).
Proof. exact (MK_COMB (@lem4936619 A) (@lem4936618 A B x f)). Qed.
Lemma lem4936621 {A B : Type'} (f : type1413 A B) : (term3591 A B f) = (term3592 A B f).
Proof. exact (fun_ext (fun x : type684 A => @lem4936620 A B x f)). Qed.
Lemma lem4936622 {A : Type'} : (@ex ((A -> Prop) -> A)) = (@ex ((A -> Prop) -> A)).
Proof. exact (eq_refl (@ex ((A -> Prop) -> A))). Qed.
Lemma lem4936623 {A B : Type'} (f : type1413 A B) : (term3574 A B f) = (term3593 A B f).
Proof. exact (MK_COMB (@lem4936622 A) (@lem4936621 A B f)). Qed.
Lemma lem4936624 {A B : Type'} (f : type1413 A B) : ((term3573 A B f) = (term3574 A B f)) = ((term3572 A B f) = (term3593 A B f)).
Proof. exact (MK_COMB (@lem4936612 A B f) (@lem4936623 A B f)). Qed.
Lemma lem4936625 {A B : Type'} (f : type1413 A B) : (term3572 A B f) = (term3593 A B f).
Proof. exact (EQ_MP (@lem4936624 A B f) (@lem4936599 A B f)). Qed.
Lemma lem4936627 {A B : Type'} (P : type1413 A B) : (term814 A B P) = (term815 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem4936628 {A : Type'} (P : type672 A) : (term1172 A P) = (term1173 A P).
Proof. exact (@lem4936627 (A -> Prop) A P). Qed.
Lemma lem4936629 {A B : Type'} (x : type684 A) (f : type1413 A B) : (term3594 A B x f) = (term3595 A B x f).
Proof. exact (@lem4936628 A (term3596 A B x f)). Qed.
Lemma lem4936630 {A B : Type'} (x : type684 A) (f : type1413 A B) (s : A -> Prop) : (term3597 A B x f s) = (term3598 A B x f s).
Proof. exact (eq_refl (term3597 A B x f s)). Qed.
Lemma lem4936631 {A : Type'} (y : A) : y = y.
Proof. exact (eq_refl y). Qed.
Lemma lem4936632 {A B : Type'} (x : type684 A) (f : type1413 A B) (s : A -> Prop) (y : A) : (term3599 A B x f s y) = (term3600 A B x f s y).
Proof. exact (MK_COMB (@lem4936630 A B x f s) (@lem4936631 A y)). Qed.
Lemma lem4936633 {A B : Type'} (x : type684 A) (y : A) (f : type1413 A B) (s : A -> Prop) : (term3600 A B x f s y) = (term3601 A B x y f s).
Proof. exact (eq_refl (term3600 A B x f s y)). Qed.
Lemma lem4936634 {A B : Type'} (x : type684 A) (y : A) (f : type1413 A B) (s : A -> Prop) : (term3599 A B x f s y) = (term3601 A B x y f s).
Proof. exact (TRANS (@lem4936632 A B x f s y) (@lem4936633 A B x y f s)). Qed.
Lemma lem4936635 {A B : Type'} (x : type684 A) (f : type1413 A B) (s : A -> Prop) : (term3602 A B x f s) = (term3598 A B x f s).
Proof. exact (fun_ext (fun y : A => @lem4936634 A B x y f s)). Qed.
Lemma lem4936636 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem4936637 {A B : Type'} (x : type684 A) (f : type1413 A B) (s : A -> Prop) : (term3603 A B x f s) = (term3586 A B x f s).
Proof. exact (MK_COMB (@lem4936636 A) (@lem4936635 A B x f s)). Qed.
Lemma lem4936638 {A B : Type'} (x : type684 A) (f : type1413 A B) : (term3604 A B x f) = (term3588 A B x f).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4936637 A B x f s)). Qed.
Lemma lem4936639 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4936640 {A B : Type'} (x : type684 A) (f : type1413 A B) : (term3594 A B x f) = (term3590 A B x f).
Proof. exact (MK_COMB (@lem4936639 A) (@lem4936638 A B x f)). Qed.
Lemma lem4936641 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4936642 {A B : Type'} (x : type684 A) (f : type1413 A B) : (term3605 A B x f) = (term3606 A B x f).
Proof. exact (MK_COMB (@lem4936641) (@lem4936640 A B x f)). Qed.
Lemma lem4936643 {A B : Type'} (x : type684 A) (f : type1413 A B) (s : A -> Prop) : (term3597 A B x f s) = (term3598 A B x f s).
Proof. exact (eq_refl (term3597 A B x f s)). Qed.
Lemma lem4936644 {A : Type'} (y : type684 A) (s : A -> Prop) : (y s) = (y s).
Proof. exact (eq_refl (y s)). Qed.
Lemma lem4936645 {A B : Type'} (x : type684 A) (f : type1413 A B) (y : type684 A) (s : A -> Prop) : (term3607 A B x f y s) = (term3608 A B x f y s).
Proof. exact (MK_COMB (@lem4936643 A B x f s) (@lem4936644 A y s)). Qed.
Lemma lem4936646 {A B : Type'} (x : type684 A) (y : type684 A) (f : type1413 A B) (s : A -> Prop) : (term3608 A B x f y s) = (term3609 A B x y f s).
Proof. exact (eq_refl (term3608 A B x f y s)). Qed.
Lemma lem4936647 {A B : Type'} (x : type684 A) (y : type684 A) (f : type1413 A B) (s : A -> Prop) : (term3607 A B x f y s) = (term3609 A B x y f s).
Proof. exact (TRANS (@lem4936645 A B x f y s) (@lem4936646 A B x y f s)). Qed.
Lemma lem4936648 {A B : Type'} (x : type684 A) (y : type684 A) (f : type1413 A B) : (term3610 A B x f y) = (term3611 A B x y f).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4936647 A B x y f s)). Qed.
Lemma lem4936649 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4936650 {A B : Type'} (x : type684 A) (y : type684 A) (f : type1413 A B) : (term3612 A B x f y) = (term3613 A B x y f).
Proof. exact (MK_COMB (@lem4936649 A) (@lem4936648 A B x y f)). Qed.
Lemma lem4936651 {A B : Type'} (x : type684 A) (f : type1413 A B) : (term3614 A B x f) = (term3615 A B x f).
Proof. exact (fun_ext (fun y : type684 A => @lem4936650 A B x y f)). Qed.
Lemma lem4936652 {A : Type'} : (@ex ((A -> Prop) -> A)) = (@ex ((A -> Prop) -> A)).
Proof. exact (eq_refl (@ex ((A -> Prop) -> A))). Qed.
Lemma lem4936653 {A B : Type'} (x : type684 A) (f : type1413 A B) : (term3595 A B x f) = (term3616 A B x f).
Proof. exact (MK_COMB (@lem4936652 A) (@lem4936651 A B x f)). Qed.
Lemma lem4936654 {A B : Type'} (x : type684 A) (f : type1413 A B) : ((term3594 A B x f) = (term3595 A B x f)) = ((term3590 A B x f) = (term3616 A B x f)).
Proof. exact (MK_COMB (@lem4936642 A B x f) (@lem4936653 A B x f)). Qed.
Lemma lem4936655 {A B : Type'} (x : type684 A) (f : type1413 A B) : (term3590 A B x f) = (term3616 A B x f).
Proof. exact (EQ_MP (@lem4936654 A B x f) (@lem4936629 A B x f)). Qed.
Lemma lem4936656 {A B : Type'} (f : type1413 A B) : (term3592 A B f) = (term3617 A B f).
Proof. exact (fun_ext (fun x : type684 A => @lem4936655 A B x f)). Qed.
Lemma lem4936657 {A : Type'} : (@ex ((A -> Prop) -> A)) = (@ex ((A -> Prop) -> A)).
Proof. exact (eq_refl (@ex ((A -> Prop) -> A))). Qed.
Lemma lem4936658 {A B : Type'} (f : type1413 A B) : (term3593 A B f) = (term3618 A B f).
Proof. exact (MK_COMB (@lem4936657 A) (@lem4936656 A B f)). Qed.
Lemma lem4936659 {A B : Type'} (f : type1413 A B) : (term3572 A B f) = (term3618 A B f).
Proof. exact (TRANS (@lem4936625 A B f) (@lem4936658 A B f)). Qed.
Lemma lem4936660 {A B : Type'} (f : type1413 A B) : (term3502 A B f) = (term3618 A B f).
Proof. exact (TRANS (@lem4936595 A B f) (@lem4936659 A B f)). Qed.
Lemma lem4936661 {A B : Type'} : (term3503 A B) = (term3619 A B).
Proof. exact (fun_ext (fun f : type1413 A B => @lem4936660 A B f)). Qed.
Lemma lem4936662 {A B : Type'} : (@all (A -> B -> Prop)) = (@all (A -> B -> Prop)).
Proof. exact (eq_refl (@all (A -> B -> Prop))). Qed.
Lemma lem4936663 {A B : Type'} : (term3504 A B) = (term3620 A B).
Proof. exact (MK_COMB (@lem4936662 A B) (@lem4936661 A B)). Qed.
Lemma lem4936665 {A B : Type'} (P : type1413 A B) : (term814 A B P) = (term815 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem4936666 {A B : Type'} (P : type447 A B) : (term3621 A B P) = (term3622 A B P).
Proof. exact (@lem4936665 (type1413 A B) (type684 A) P). Qed.
Lemma lem4936667 {A B : Type'} : (term3623 A B) = (term3624 A B).
Proof. exact (@lem4936666 A B (term3625 A B)). Qed.
Lemma lem4936668 {A B : Type'} (f : type1413 A B) : (term3626 A B f) = (term3617 A B f).
Proof. exact (eq_refl (term3626 A B f)). Qed.
Lemma lem4936669 {A : Type'} (x : type684 A) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem4936670 {A B : Type'} (f : type1413 A B) (x : type684 A) : (term3627 A B f x) = (term3628 A B f x).
Proof. exact (MK_COMB (@lem4936668 A B f) (@lem4936669 A x)). Qed.
Lemma lem4936671 {A B : Type'} (x : type684 A) (f : type1413 A B) : (term3628 A B f x) = (term3616 A B x f).
Proof. exact (eq_refl (term3628 A B f x)). Qed.
Lemma lem4936672 {A B : Type'} (x : type684 A) (f : type1413 A B) : (term3627 A B f x) = (term3616 A B x f).
Proof. exact (TRANS (@lem4936670 A B f x) (@lem4936671 A B x f)). Qed.
Lemma lem4936673 {A B : Type'} (f : type1413 A B) : (term3629 A B f) = (term3617 A B f).
Proof. exact (fun_ext (fun x : type684 A => @lem4936672 A B x f)). Qed.
Lemma lem4936674 {A : Type'} : (@ex ((A -> Prop) -> A)) = (@ex ((A -> Prop) -> A)).
Proof. exact (eq_refl (@ex ((A -> Prop) -> A))). Qed.
Lemma lem4936675 {A B : Type'} (f : type1413 A B) : (term3630 A B f) = (term3618 A B f).
Proof. exact (MK_COMB (@lem4936674 A) (@lem4936673 A B f)). Qed.
Lemma lem4936676 {A B : Type'} : (term3631 A B) = (term3619 A B).
Proof. exact (fun_ext (fun f : type1413 A B => @lem4936675 A B f)). Qed.
Lemma lem4936677 {A B : Type'} : (@all (A -> B -> Prop)) = (@all (A -> B -> Prop)).
Proof. exact (eq_refl (@all (A -> B -> Prop))). Qed.
Lemma lem4936678 {A B : Type'} : (term3623 A B) = (term3620 A B).
Proof. exact (MK_COMB (@lem4936677 A B) (@lem4936676 A B)). Qed.
Lemma lem4936679 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4936680 {A B : Type'} : (term3632 A B) = (term3633 A B).
Proof. exact (MK_COMB (@lem4936679) (@lem4936678 A B)). Qed.
Lemma lem4936681 {A B : Type'} (f : type1413 A B) : (term3626 A B f) = (term3617 A B f).
Proof. exact (eq_refl (term3626 A B f)). Qed.
Lemma lem4936682 {A B : Type'} (x : type457 A B) (f : type1413 A B) : (x f) = (x f).
Proof. exact (eq_refl (x f)). Qed.
Lemma lem4936683 {A B : Type'} (x : type457 A B) (f : type1413 A B) : (term3634 A B x f) = (term3635 A B x f).
Proof. exact (MK_COMB (@lem4936681 A B f) (@lem4936682 A B x f)). Qed.
Lemma lem4936684 {A B : Type'} (x : type457 A B) (f : type1413 A B) : (term3635 A B x f) = (term3636 A B x f).
Proof. exact (eq_refl (term3635 A B x f)). Qed.
Lemma lem4936685 {A B : Type'} (x : type457 A B) (f : type1413 A B) : (term3634 A B x f) = (term3636 A B x f).
Proof. exact (TRANS (@lem4936683 A B x f) (@lem4936684 A B x f)). Qed.
Lemma lem4936686 {A B : Type'} (x : type457 A B) : (term3637 A B x) = (term3638 A B x).
Proof. exact (fun_ext (fun f : type1413 A B => @lem4936685 A B x f)). Qed.
Lemma lem4936687 {A B : Type'} : (@all (A -> B -> Prop)) = (@all (A -> B -> Prop)).
Proof. exact (eq_refl (@all (A -> B -> Prop))). Qed.
Lemma lem4936688 {A B : Type'} (x : type457 A B) : (term3639 A B x) = (term3640 A B x).
Proof. exact (MK_COMB (@lem4936687 A B) (@lem4936686 A B x)). Qed.
Lemma lem4936689 {A B : Type'} : (term3641 A B) = (term3642 A B).
Proof. exact (fun_ext (fun x : type457 A B => @lem4936688 A B x)). Qed.
Lemma lem4936690 {A B : Type'} : (@ex ((A -> B -> Prop) -> (A -> Prop) -> A)) = (@ex ((A -> B -> Prop) -> (A -> Prop) -> A)).
Proof. exact (eq_refl (@ex ((A -> B -> Prop) -> (A -> Prop) -> A))). Qed.
Lemma lem4936691 {A B : Type'} : (term3624 A B) = (term3643 A B).
Proof. exact (MK_COMB (@lem4936690 A B) (@lem4936689 A B)). Qed.
Lemma lem4936692 {A B : Type'} : ((term3623 A B) = (term3624 A B)) = ((term3620 A B) = (term3643 A B)).
Proof. exact (MK_COMB (@lem4936680 A B) (@lem4936691 A B)). Qed.
Lemma lem4936693 {A B : Type'} : (term3620 A B) = (term3643 A B).
Proof. exact (EQ_MP (@lem4936692 A B) (@lem4936667 A B)). Qed.
Lemma lem4936695 {A B : Type'} (P : type1413 A B) : (term814 A B P) = (term815 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem4936696 {A B : Type'} (P : type447 A B) : (term3621 A B P) = (term3622 A B P).
Proof. exact (@lem4936695 (type1413 A B) (type684 A) P). Qed.
Lemma lem4936697 {A B : Type'} (x : type457 A B) : (term3644 A B x) = (term3645 A B x).
Proof. exact (@lem4936696 A B (term3646 A B x)). Qed.
Lemma lem4936698 {A B : Type'} (x : type457 A B) (f : type1413 A B) : (term3647 A B x f) = (term3648 A B x f).
Proof. exact (eq_refl (term3647 A B x f)). Qed.
Lemma lem4936699 {A : Type'} (y : type684 A) : y = y.
Proof. exact (eq_refl y). Qed.
Lemma lem4936700 {A B : Type'} (x : type457 A B) (f : type1413 A B) (y : type684 A) : (term3649 A B x f y) = (term3650 A B x f y).
Proof. exact (MK_COMB (@lem4936698 A B x f) (@lem4936699 A y)). Qed.
Lemma lem4936701 {A B : Type'} (x : type457 A B) (y : type684 A) (f : type1413 A B) : (term3650 A B x f y) = (term3651 A B x y f).
Proof. exact (eq_refl (term3650 A B x f y)). Qed.
Lemma lem4936702 {A B : Type'} (x : type457 A B) (y : type684 A) (f : type1413 A B) : (term3649 A B x f y) = (term3651 A B x y f).
Proof. exact (TRANS (@lem4936700 A B x f y) (@lem4936701 A B x y f)). Qed.
Lemma lem4936703 {A B : Type'} (x : type457 A B) (f : type1413 A B) : (term3652 A B x f) = (term3648 A B x f).
Proof. exact (fun_ext (fun y : type684 A => @lem4936702 A B x y f)). Qed.
Lemma lem4936704 {A : Type'} : (@ex ((A -> Prop) -> A)) = (@ex ((A -> Prop) -> A)).
Proof. exact (eq_refl (@ex ((A -> Prop) -> A))). Qed.
Lemma lem4936705 {A B : Type'} (x : type457 A B) (f : type1413 A B) : (term3653 A B x f) = (term3636 A B x f).
Proof. exact (MK_COMB (@lem4936704 A) (@lem4936703 A B x f)). Qed.
Lemma lem4936706 {A B : Type'} (x : type457 A B) : (term3654 A B x) = (term3638 A B x).
Proof. exact (fun_ext (fun f : type1413 A B => @lem4936705 A B x f)). Qed.
Lemma lem4936707 {A B : Type'} : (@all (A -> B -> Prop)) = (@all (A -> B -> Prop)).
Proof. exact (eq_refl (@all (A -> B -> Prop))). Qed.
Lemma lem4936708 {A B : Type'} (x : type457 A B) : (term3644 A B x) = (term3640 A B x).
Proof. exact (MK_COMB (@lem4936707 A B) (@lem4936706 A B x)). Qed.
Lemma lem4936709 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4936710 {A B : Type'} (x : type457 A B) : (term3655 A B x) = (term3656 A B x).
Proof. exact (MK_COMB (@lem4936709) (@lem4936708 A B x)). Qed.
Lemma lem4936711 {A B : Type'} (x : type457 A B) (f : type1413 A B) : (term3647 A B x f) = (term3648 A B x f).
Proof. exact (eq_refl (term3647 A B x f)). Qed.
Lemma lem4936712 {A B : Type'} (y : type457 A B) (f : type1413 A B) : (y f) = (y f).
Proof. exact (eq_refl (y f)). Qed.
Lemma lem4936713 {A B : Type'} (x : type457 A B) (y : type457 A B) (f : type1413 A B) : (term3657 A B x y f) = (term3658 A B x y f).
Proof. exact (MK_COMB (@lem4936711 A B x f) (@lem4936712 A B y f)). Qed.
Lemma lem4936714 {A B : Type'} (x : type457 A B) (y : type457 A B) (f : type1413 A B) : (term3658 A B x y f) = (term3659 A B x y f).
Proof. exact (eq_refl (term3658 A B x y f)). Qed.
Lemma lem4936715 {A B : Type'} (x : type457 A B) (y : type457 A B) (f : type1413 A B) : (term3657 A B x y f) = (term3659 A B x y f).
Proof. exact (TRANS (@lem4936713 A B x y f) (@lem4936714 A B x y f)). Qed.
Lemma lem4936716 {A B : Type'} (x : type457 A B) (y : type457 A B) : (term3660 A B x y) = (term3661 A B x y).
Proof. exact (fun_ext (fun f : type1413 A B => @lem4936715 A B x y f)). Qed.
Lemma lem4936717 {A B : Type'} : (@all (A -> B -> Prop)) = (@all (A -> B -> Prop)).
Proof. exact (eq_refl (@all (A -> B -> Prop))). Qed.
Lemma lem4936718 {A B : Type'} (x : type457 A B) (y : type457 A B) : (term3662 A B x y) = (term3663 A B x y).
Proof. exact (MK_COMB (@lem4936717 A B) (@lem4936716 A B x y)). Qed.
Lemma lem4936719 {A B : Type'} (x : type457 A B) : (term3664 A B x) = (term3665 A B x).
Proof. exact (fun_ext (fun y : type457 A B => @lem4936718 A B x y)). Qed.
Lemma lem4936720 {A B : Type'} : (@ex ((A -> B -> Prop) -> (A -> Prop) -> A)) = (@ex ((A -> B -> Prop) -> (A -> Prop) -> A)).
Proof. exact (eq_refl (@ex ((A -> B -> Prop) -> (A -> Prop) -> A))). Qed.
Lemma lem4936721 {A B : Type'} (x : type457 A B) : (term3645 A B x) = (term3666 A B x).
Proof. exact (MK_COMB (@lem4936720 A B) (@lem4936719 A B x)). Qed.
Lemma lem4936722 {A B : Type'} (x : type457 A B) : ((term3644 A B x) = (term3645 A B x)) = ((term3640 A B x) = (term3666 A B x)).
Proof. exact (MK_COMB (@lem4936710 A B x) (@lem4936721 A B x)). Qed.
Lemma lem4936723 {A B : Type'} (x : type457 A B) : (term3640 A B x) = (term3666 A B x).
Proof. exact (EQ_MP (@lem4936722 A B x) (@lem4936697 A B x)). Qed.
Lemma lem4936724 {A B : Type'} : (term3642 A B) = (term3667 A B).
Proof. exact (fun_ext (fun x : type457 A B => @lem4936723 A B x)). Qed.
Lemma lem4936725 {A B : Type'} : (@ex ((A -> B -> Prop) -> (A -> Prop) -> A)) = (@ex ((A -> B -> Prop) -> (A -> Prop) -> A)).
Proof. exact (eq_refl (@ex ((A -> B -> Prop) -> (A -> Prop) -> A))). Qed.
Lemma lem4936726 {A B : Type'} : (term3643 A B) = (term3668 A B).
Proof. exact (MK_COMB (@lem4936725 A B) (@lem4936724 A B)). Qed.
Lemma lem4936727 {A B : Type'} : (term3620 A B) = (term3668 A B).
Proof. exact (TRANS (@lem4936693 A B) (@lem4936726 A B)). Qed.
Lemma lem4936729 {A B : Type'} : (term3504 A B) = (term3668 A B).
Proof. exact (TRANS (@lem4936663 A B) (@lem4936727 A B)). Qed.
Lemma lem4936730 {A B : Type'} : (term2708 A B) = (term3668 A B).
Proof. exact (TRANS (@lem4936378 A B) (@lem4936729 A B)). Qed.
Lemma lem4936731 {A B : Type'} (h1 : term2708 A B) : term3668 A B.
Proof. exact (EQ_MP (@lem4936730 A B) (@lem4934982 A B h1)). Qed.
Lemma lem4936746 {A : Type'} (s : A -> Prop) (f : A -> nat) (x : A) (y : A) : (term3669 A s f x y) = (term3670 A s f x y).
Proof. exact (@lem17362 (term3671 A s x f y) (x = y)). Qed.
Lemma lem4936747 {A : Type'} (P : A -> Prop) : (term2420 A P) = (term2421 A P).
Proof. exact (@lem18392 A P). Qed.
Lemma lem4936748 {A : Type'} (s : A -> Prop) (f : A -> nat) (x : A) : (term3672 A s f x) = (term3673 A s f x).
Proof. exact (@lem4936747 A (term2836 A s f x)). Qed.
Lemma lem4936749 {A : Type'} (s : A -> Prop) (f : A -> nat) (x : A) (y : A) : (term3674 A s f x y) = (term2835 A s f x y).
Proof. exact (eq_refl (term3674 A s f x y)). Qed.
Lemma lem4936750 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem4936751 {A : Type'} (s : A -> Prop) (f : A -> nat) (x : A) (y : A) : (term3675 A s f x y) = (term3669 A s f x y).
Proof. exact (MK_COMB (@lem4936750) (@lem4936749 A s f x y)). Qed.
Lemma lem4936752 {A : Type'} (s : A -> Prop) (f : A -> nat) (x : A) (y : A) : (term3675 A s f x y) = (term3670 A s f x y).
Proof. exact (TRANS (@lem4936751 A s f x y) (@lem4936746 A s f x y)). Qed.
Lemma lem4936753 {A : Type'} (s : A -> Prop) (f : A -> nat) (x : A) : (term3676 A s f x) = (term3677 A s f x).
Proof. exact (fun_ext (fun y : A => @lem4936752 A s f x y)). Qed.
Lemma lem4936754 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem4936755 {A : Type'} (s : A -> Prop) (f : A -> nat) (x : A) : (term3673 A s f x) = (term3678 A s f x).
Proof. exact (MK_COMB (@lem4936754 A) (@lem4936753 A s f x)). Qed.
Lemma lem4936756 {A : Type'} (s : A -> Prop) (f : A -> nat) (x : A) : (term3672 A s f x) = (term3678 A s f x).
Proof. exact (TRANS (@lem4936748 A s f x) (@lem4936755 A s f x)). Qed.
Lemma lem4936757 {A : Type'} (P : A -> Prop) : (term2420 A P) = (term2421 A P).
Proof. exact (@lem18392 A P). Qed.
Lemma lem4936758 {A : Type'} (s : A -> Prop) (f : A -> nat) : (term3679 A s f) = (term3680 A s f).
Proof. exact (@lem4936757 A (term2838 A s f)). Qed.
Lemma lem4936759 {A : Type'} (s : A -> Prop) (f : A -> nat) (x : A) : (term3681 A s f x) = (term2837 A s f x).
Proof. exact (eq_refl (term3681 A s f x)). Qed.
Lemma lem4936760 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem4936761 {A : Type'} (s : A -> Prop) (f : A -> nat) (x : A) : (term3682 A s f x) = (term3672 A s f x).
Proof. exact (MK_COMB (@lem4936760) (@lem4936759 A s f x)). Qed.
Lemma lem4936762 {A : Type'} (s : A -> Prop) (f : A -> nat) (x : A) : (term3682 A s f x) = (term3678 A s f x).
Proof. exact (TRANS (@lem4936761 A s f x) (@lem4936756 A s f x)). Qed.
Lemma lem4936763 {A : Type'} (s : A -> Prop) (f : A -> nat) : (term3683 A s f) = (term3684 A s f).
Proof. exact (fun_ext (fun x : A => @lem4936762 A s f x)). Qed.
Lemma lem4936764 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem4936765 {A : Type'} (s : A -> Prop) (f : A -> nat) : (term3680 A s f) = (term3685 A s f).
Proof. exact (MK_COMB (@lem4936764 A) (@lem4936763 A s f)). Qed.
Lemma lem4936766 {A : Type'} (s : A -> Prop) (f : A -> nat) : (term3679 A s f) = (term3685 A s f).
Proof. exact (TRANS (@lem4936758 A s f) (@lem4936765 A s f)). Qed.
Lemma lem4936767 {A : Type'} (s : A -> Prop) : (term1224 A s) = (term1224 A s).
Proof. exact (eq_refl (term1224 A s)). Qed.
Lemma lem4936768 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4936769 {A : Type'} (s : A -> Prop) (f : A -> nat) : (term3686 A s f) = (term3687 A s f).
Proof. exact (MK_COMB (@lem4936768) (@lem4936766 A s f)). Qed.
Lemma lem4936770 {A : Type'} (f : A -> nat) (s : A -> Prop) : (term3688 A f s) = (term3689 A f s).
Proof. exact (MK_COMB (@lem4936769 A s f) (@lem4936767 A s)). Qed.
Lemma lem4936771 {A : Type'} (f : A -> nat) (s : A -> Prop) : (term3690 A f s) = (term3688 A f s).
Proof. exact (@lem17045 (term2839 A s f) (@FINITE A s)). Qed.
Lemma lem4936772 {A : Type'} (f : A -> nat) (s : A -> Prop) : (term3690 A f s) = (term3689 A f s).
Proof. exact (TRANS (@lem4936771 A f s) (@lem4936770 A f s)). Qed.
Lemma lem4936773 {A : Type'} (f : A -> nat) (s : A -> Prop) : ((term2834 A f s) = (@CARD A s)) = ((term2834 A f s) = (@CARD A s)).
Proof. exact (eq_refl ((term2834 A f s) = (@CARD A s))). Qed.
Lemma lem4936774 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4936775 {A : Type'} (f : A -> nat) (s : A -> Prop) : (term3691 A f s) = (term3692 A f s).
Proof. exact (MK_COMB (@lem4936774) (@lem4936772 A f s)). Qed.
Lemma lem4936776 {A : Type'} (f : A -> nat) (s : A -> Prop) : (term3693 A f s) = (term3694 A f s).
Proof. exact (MK_COMB (@lem4936775 A f s) (@lem4936773 A f s)). Qed.
Lemma lem4936777 {A : Type'} (f : A -> nat) (s : A -> Prop) : (term2843 A f s) = (term3693 A f s).
Proof. exact (@lem17265 (term2841 A f s) ((term2834 A f s) = (@CARD A s))). Qed.
Lemma lem4936778 {A : Type'} (f : A -> nat) (s : A -> Prop) : (term2843 A f s) = (term3694 A f s).
Proof. exact (TRANS (@lem4936777 A f s) (@lem4936776 A f s)). Qed.
Lemma lem4936779 {A : Type'} (f : A -> nat) : (term2844 A f) = (term3695 A f).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4936778 A f s)). Qed.
Lemma lem4936780 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4936781 {A : Type'} (f : A -> nat) : (term2845 A f) = (term3696 A f).
Proof. exact (MK_COMB (@lem4936780 A) (@lem4936779 A f)). Qed.
Lemma lem4936782 {A : Type'} : (term2846 A) = (term3697 A).
Proof. exact (fun_ext (fun f : A -> nat => @lem4936781 A f)). Qed.
Lemma lem4936783 {A : Type'} : (@all (A -> nat)) = (@all (A -> nat)).
Proof. exact (eq_refl (@all (A -> nat))). Qed.
Lemma lem4936784 {A : Type'} : (term2707 A) = (term3698 A).
Proof. exact (MK_COMB (@lem4936783 A) (@lem4936782 A)). Qed.
Lemma lem4936891 {A : Type'} (P : A -> Prop) (Q : Prop) : (term1154 A P Q) = (term1155 A P Q).
Proof. exact (EQ_MP (@lem18905 A P Q) (@lem18904 A P Q)). Qed.
Lemma lem4936892 {A : Type'} (P : A -> Prop) (Q : Prop) : (term1154 A P Q) = (term1155 A P Q).
Proof. exact (@lem4936891 A P Q). Qed.
Lemma lem4936893 {A : Type'} (f : A -> nat) (s : A -> Prop) : (term3699 A f s) = (term3700 A f s).
Proof. exact (@lem4936892 A (term3684 A s f) (term1224 A s)). Qed.
Lemma lem4936894 {A : Type'} (s : A -> Prop) (f : A -> nat) (x : A) : (term3701 A s f x) = (term3678 A s f x).
Proof. exact (eq_refl (term3701 A s f x)). Qed.
Lemma lem4936895 {A : Type'} (s : A -> Prop) (f : A -> nat) : (term3702 A s f) = (term3684 A s f).
Proof. exact (fun_ext (fun x : A => @lem4936894 A s f x)). Qed.
Lemma lem4936896 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem4936897 {A : Type'} (s : A -> Prop) (f : A -> nat) : (term3703 A s f) = (term3685 A s f).
Proof. exact (MK_COMB (@lem4936896 A) (@lem4936895 A s f)). Qed.
Lemma lem4936898 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4936899 {A : Type'} (s : A -> Prop) (f : A -> nat) : (term3704 A s f) = (term3687 A s f).
Proof. exact (MK_COMB (@lem4936898) (@lem4936897 A s f)). Qed.
Lemma lem4936900 {A : Type'} (s : A -> Prop) : (term1224 A s) = (term1224 A s).
Proof. exact (eq_refl (term1224 A s)). Qed.
Lemma lem4936901 {A : Type'} (f : A -> nat) (s : A -> Prop) : (term3699 A f s) = (term3689 A f s).
Proof. exact (MK_COMB (@lem4936899 A s f) (@lem4936900 A s)). Qed.
Lemma lem4936902 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4936903 {A : Type'} (f : A -> nat) (s : A -> Prop) : (term3705 A f s) = (term3706 A f s).
Proof. exact (MK_COMB (@lem4936902) (@lem4936901 A f s)). Qed.
Lemma lem4936904 {A : Type'} (s : A -> Prop) (f : A -> nat) (x : A) : (term3701 A s f x) = (term3678 A s f x).
Proof. exact (eq_refl (term3701 A s f x)). Qed.
Lemma lem4936905 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4936906 {A : Type'} (s : A -> Prop) (f : A -> nat) (x : A) : (term3707 A s f x) = (term3708 A s f x).
Proof. exact (MK_COMB (@lem4936905) (@lem4936904 A s f x)). Qed.
Lemma lem4936907 {A : Type'} (s : A -> Prop) : (term1224 A s) = (term1224 A s).
Proof. exact (eq_refl (term1224 A s)). Qed.
Lemma lem4936908 {A : Type'} (f : A -> nat) (x : A) (s : A -> Prop) : (term3709 A f x s) = (term3710 A f x s).
Proof. exact (MK_COMB (@lem4936906 A s f x) (@lem4936907 A s)). Qed.
Lemma lem4936909 {A : Type'} (f : A -> nat) (s : A -> Prop) : (term3711 A f s) = (term3712 A f s).
Proof. exact (fun_ext (fun x : A => @lem4936908 A f x s)). Qed.
Lemma lem4936910 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem4936911 {A : Type'} (f : A -> nat) (s : A -> Prop) : (term3700 A f s) = (term3713 A f s).
Proof. exact (MK_COMB (@lem4936910 A) (@lem4936909 A f s)). Qed.
Lemma lem4936912 {A : Type'} (f : A -> nat) (s : A -> Prop) : ((term3699 A f s) = (term3700 A f s)) = ((term3689 A f s) = (term3713 A f s)).
Proof. exact (MK_COMB (@lem4936903 A f s) (@lem4936911 A f s)). Qed.
Lemma lem4936913 {A : Type'} (f : A -> nat) (s : A -> Prop) : (term3689 A f s) = (term3713 A f s).
Proof. exact (EQ_MP (@lem4936912 A f s) (@lem4936893 A f s)). Qed.
Lemma lem4936915 {A : Type'} (P : A -> Prop) (Q : Prop) : (term1154 A P Q) = (term1155 A P Q).
Proof. exact (EQ_MP (@lem18905 A P Q) (@lem18904 A P Q)). Qed.
Lemma lem4936916 {A : Type'} (P : A -> Prop) (Q : Prop) : (term1154 A P Q) = (term1155 A P Q).
Proof. exact (@lem4936915 A P Q). Qed.
Lemma lem4936917 {A : Type'} (f : A -> nat) (x : A) (s : A -> Prop) : (term3714 A f x s) = (term3715 A f x s).
Proof. exact (@lem4936916 A (term3677 A s f x) (term1224 A s)). Qed.
Lemma lem4936918 {A : Type'} (s : A -> Prop) (f : A -> nat) (x : A) (y : A) : (term3716 A s f x y) = (term3670 A s f x y).
Proof. exact (eq_refl (term3716 A s f x y)). Qed.
Lemma lem4936919 {A : Type'} (s : A -> Prop) (f : A -> nat) (x : A) : (term3717 A s f x) = (term3677 A s f x).
Proof. exact (fun_ext (fun y : A => @lem4936918 A s f x y)). Qed.
Lemma lem4936920 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem4936921 {A : Type'} (s : A -> Prop) (f : A -> nat) (x : A) : (term3718 A s f x) = (term3678 A s f x).
Proof. exact (MK_COMB (@lem4936920 A) (@lem4936919 A s f x)). Qed.
Lemma lem4936922 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4936923 {A : Type'} (s : A -> Prop) (f : A -> nat) (x : A) : (term3719 A s f x) = (term3708 A s f x).
Proof. exact (MK_COMB (@lem4936922) (@lem4936921 A s f x)). Qed.
Lemma lem4936924 {A : Type'} (s : A -> Prop) : (term1224 A s) = (term1224 A s).
Proof. exact (eq_refl (term1224 A s)). Qed.
Lemma lem4936925 {A : Type'} (f : A -> nat) (x : A) (s : A -> Prop) : (term3714 A f x s) = (term3710 A f x s).
Proof. exact (MK_COMB (@lem4936923 A s f x) (@lem4936924 A s)). Qed.
Lemma lem4936926 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4936927 {A : Type'} (f : A -> nat) (x : A) (s : A -> Prop) : (term3720 A f x s) = (term3721 A f x s).
Proof. exact (MK_COMB (@lem4936926) (@lem4936925 A f x s)). Qed.
Lemma lem4936928 {A : Type'} (s : A -> Prop) (f : A -> nat) (x : A) (y : A) : (term3716 A s f x y) = (term3670 A s f x y).
Proof. exact (eq_refl (term3716 A s f x y)). Qed.
Lemma lem4936929 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4936930 {A : Type'} (s : A -> Prop) (f : A -> nat) (x : A) (y : A) : (term3722 A s f x y) = (term3723 A s f x y).
Proof. exact (MK_COMB (@lem4936929) (@lem4936928 A s f x y)). Qed.
Lemma lem4936931 {A : Type'} (s : A -> Prop) : (term1224 A s) = (term1224 A s).
Proof. exact (eq_refl (term1224 A s)). Qed.
Lemma lem4936932 {A : Type'} (f : A -> nat) (x : A) (y : A) (s : A -> Prop) : (term3724 A f x y s) = (term3725 A f x y s).
Proof. exact (MK_COMB (@lem4936930 A s f x y) (@lem4936931 A s)). Qed.
Lemma lem4936933 {A : Type'} (f : A -> nat) (x : A) (s : A -> Prop) : (term3726 A f x s) = (term3727 A f x s).
Proof. exact (fun_ext (fun y : A => @lem4936932 A f x y s)). Qed.
Lemma lem4936934 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem4936935 {A : Type'} (f : A -> nat) (x : A) (s : A -> Prop) : (term3715 A f x s) = (term3728 A f x s).
Proof. exact (MK_COMB (@lem4936934 A) (@lem4936933 A f x s)). Qed.
Lemma lem4936936 {A : Type'} (f : A -> nat) (x : A) (s : A -> Prop) : ((term3714 A f x s) = (term3715 A f x s)) = ((term3710 A f x s) = (term3728 A f x s)).
Proof. exact (MK_COMB (@lem4936927 A f x s) (@lem4936935 A f x s)). Qed.
Lemma lem4936937 {A : Type'} (f : A -> nat) (x : A) (s : A -> Prop) : (term3710 A f x s) = (term3728 A f x s).
Proof. exact (EQ_MP (@lem4936936 A f x s) (@lem4936917 A f x s)). Qed.
Lemma lem4936938 {A : Type'} (f : A -> nat) (s : A -> Prop) : (term3712 A f s) = (term3729 A f s).
Proof. exact (fun_ext (fun x : A => @lem4936937 A f x s)). Qed.
Lemma lem4936939 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem4936940 {A : Type'} (f : A -> nat) (s : A -> Prop) : (term3713 A f s) = (term3730 A f s).
Proof. exact (MK_COMB (@lem4936939 A) (@lem4936938 A f s)). Qed.
Lemma lem4936941 {A : Type'} (f : A -> nat) (s : A -> Prop) : (term3689 A f s) = (term3730 A f s).
Proof. exact (TRANS (@lem4936913 A f s) (@lem4936940 A f s)). Qed.
Lemma lem4936942 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4936943 {A : Type'} (f : A -> nat) (s : A -> Prop) : (term3692 A f s) = (term3731 A f s).
Proof. exact (MK_COMB (@lem4936942) (@lem4936941 A f s)). Qed.
Lemma lem4936944 {A : Type'} (f : A -> nat) (s : A -> Prop) : ((term2834 A f s) = (@CARD A s)) = ((term2834 A f s) = (@CARD A s)).
Proof. exact (eq_refl ((term2834 A f s) = (@CARD A s))). Qed.
Lemma lem4936945 {A : Type'} (f : A -> nat) (s : A -> Prop) : (term3694 A f s) = (term3732 A f s).
Proof. exact (MK_COMB (@lem4936943 A f s) (@lem4936944 A f s)). Qed.
Lemma lem4936947 {A : Type'} (P : A -> Prop) (Q : Prop) : (term1154 A P Q) = (term1155 A P Q).
Proof. exact (EQ_MP (@lem18905 A P Q) (@lem18904 A P Q)). Qed.
Lemma lem4936948 {A : Type'} (P : A -> Prop) (Q : Prop) : (term1154 A P Q) = (term1155 A P Q).
Proof. exact (@lem4936947 A P Q). Qed.
Lemma lem4936949 {A : Type'} (f : A -> nat) (s : A -> Prop) : (term3733 A f s) = (term3734 A f s).
Proof. exact (@lem4936948 A (term3729 A f s) ((term2834 A f s) = (@CARD A s))). Qed.
Lemma lem4936950 {A : Type'} (f : A -> nat) (x : A) (s : A -> Prop) : (term3735 A f s x) = (term3728 A f x s).
Proof. exact (eq_refl (term3735 A f s x)). Qed.
Lemma lem4936951 {A : Type'} (f : A -> nat) (s : A -> Prop) : (term3736 A f s) = (term3729 A f s).
Proof. exact (fun_ext (fun x : A => @lem4936950 A f x s)). Qed.
Lemma lem4936952 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem4936953 {A : Type'} (f : A -> nat) (s : A -> Prop) : (term3737 A f s) = (term3730 A f s).
Proof. exact (MK_COMB (@lem4936952 A) (@lem4936951 A f s)). Qed.
Lemma lem4936954 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4936955 {A : Type'} (f : A -> nat) (s : A -> Prop) : (term3738 A f s) = (term3731 A f s).
Proof. exact (MK_COMB (@lem4936954) (@lem4936953 A f s)). Qed.
Lemma lem4936956 {A : Type'} (f : A -> nat) (s : A -> Prop) : ((term2834 A f s) = (@CARD A s)) = ((term2834 A f s) = (@CARD A s)).
Proof. exact (eq_refl ((term2834 A f s) = (@CARD A s))). Qed.
Lemma lem4936957 {A : Type'} (f : A -> nat) (s : A -> Prop) : (term3733 A f s) = (term3732 A f s).
Proof. exact (MK_COMB (@lem4936955 A f s) (@lem4936956 A f s)). Qed.
Lemma lem4936958 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4936959 {A : Type'} (f : A -> nat) (s : A -> Prop) : (term3739 A f s) = (term3740 A f s).
Proof. exact (MK_COMB (@lem4936958) (@lem4936957 A f s)). Qed.
Lemma lem4936960 {A : Type'} (f : A -> nat) (x : A) (s : A -> Prop) : (term3735 A f s x) = (term3728 A f x s).
Proof. exact (eq_refl (term3735 A f s x)). Qed.
Lemma lem4936961 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4936962 {A : Type'} (f : A -> nat) (x : A) (s : A -> Prop) : (term3741 A f s x) = (term3742 A f x s).
Proof. exact (MK_COMB (@lem4936961) (@lem4936960 A f x s)). Qed.
Lemma lem4936963 {A : Type'} (f : A -> nat) (s : A -> Prop) : ((term2834 A f s) = (@CARD A s)) = ((term2834 A f s) = (@CARD A s)).
Proof. exact (eq_refl ((term2834 A f s) = (@CARD A s))). Qed.
Lemma lem4936964 {A : Type'} (x : A) (f : A -> nat) (s : A -> Prop) : (term3743 A x f s) = (term3744 A x f s).
Proof. exact (MK_COMB (@lem4936962 A f x s) (@lem4936963 A f s)). Qed.
Lemma lem4936965 {A : Type'} (f : A -> nat) (s : A -> Prop) : (term3745 A f s) = (term3746 A f s).
Proof. exact (fun_ext (fun x : A => @lem4936964 A x f s)). Qed.
Lemma lem4936966 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem4936967 {A : Type'} (f : A -> nat) (s : A -> Prop) : (term3734 A f s) = (term3747 A f s).
Proof. exact (MK_COMB (@lem4936966 A) (@lem4936965 A f s)). Qed.
Lemma lem4936968 {A : Type'} (f : A -> nat) (s : A -> Prop) : ((term3733 A f s) = (term3734 A f s)) = ((term3732 A f s) = (term3747 A f s)).
Proof. exact (MK_COMB (@lem4936959 A f s) (@lem4936967 A f s)). Qed.
Lemma lem4936969 {A : Type'} (f : A -> nat) (s : A -> Prop) : (term3732 A f s) = (term3747 A f s).
Proof. exact (EQ_MP (@lem4936968 A f s) (@lem4936949 A f s)). Qed.
Lemma lem4936971 {A : Type'} (P : A -> Prop) (Q : Prop) : (term1154 A P Q) = (term1155 A P Q).
Proof. exact (EQ_MP (@lem18905 A P Q) (@lem18904 A P Q)). Qed.
Lemma lem4936972 {A : Type'} (P : A -> Prop) (Q : Prop) : (term1154 A P Q) = (term1155 A P Q).
Proof. exact (@lem4936971 A P Q). Qed.
Lemma lem4936973 {A : Type'} (x : A) (f : A -> nat) (s : A -> Prop) : (term3748 A x f s) = (term3749 A x f s).
Proof. exact (@lem4936972 A (term3727 A f x s) ((term2834 A f s) = (@CARD A s))). Qed.
Lemma lem4936974 {A : Type'} (f : A -> nat) (x : A) (y : A) (s : A -> Prop) : (term3750 A f x s y) = (term3725 A f x y s).
Proof. exact (eq_refl (term3750 A f x s y)). Qed.
Lemma lem4936975 {A : Type'} (f : A -> nat) (x : A) (s : A -> Prop) : (term3751 A f x s) = (term3727 A f x s).
Proof. exact (fun_ext (fun y : A => @lem4936974 A f x y s)). Qed.
Lemma lem4936976 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem4936977 {A : Type'} (f : A -> nat) (x : A) (s : A -> Prop) : (term3752 A f x s) = (term3728 A f x s).
Proof. exact (MK_COMB (@lem4936976 A) (@lem4936975 A f x s)). Qed.
Lemma lem4936978 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4936979 {A : Type'} (f : A -> nat) (x : A) (s : A -> Prop) : (term3753 A f x s) = (term3742 A f x s).
Proof. exact (MK_COMB (@lem4936978) (@lem4936977 A f x s)). Qed.
Lemma lem4936980 {A : Type'} (f : A -> nat) (s : A -> Prop) : ((term2834 A f s) = (@CARD A s)) = ((term2834 A f s) = (@CARD A s)).
Proof. exact (eq_refl ((term2834 A f s) = (@CARD A s))). Qed.
Lemma lem4936981 {A : Type'} (x : A) (f : A -> nat) (s : A -> Prop) : (term3748 A x f s) = (term3744 A x f s).
Proof. exact (MK_COMB (@lem4936979 A f x s) (@lem4936980 A f s)). Qed.
Lemma lem4936982 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4936983 {A : Type'} (x : A) (f : A -> nat) (s : A -> Prop) : (term3754 A x f s) = (term3755 A x f s).
Proof. exact (MK_COMB (@lem4936982) (@lem4936981 A x f s)). Qed.
Lemma lem4936984 {A : Type'} (f : A -> nat) (x : A) (y : A) (s : A -> Prop) : (term3750 A f x s y) = (term3725 A f x y s).
Proof. exact (eq_refl (term3750 A f x s y)). Qed.
Lemma lem4936985 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4936986 {A : Type'} (f : A -> nat) (x : A) (y : A) (s : A -> Prop) : (term3756 A f x s y) = (term3757 A f x y s).
Proof. exact (MK_COMB (@lem4936985) (@lem4936984 A f x y s)). Qed.
Lemma lem4936987 {A : Type'} (f : A -> nat) (s : A -> Prop) : ((term2834 A f s) = (@CARD A s)) = ((term2834 A f s) = (@CARD A s)).
Proof. exact (eq_refl ((term2834 A f s) = (@CARD A s))). Qed.
Lemma lem4936988 {A : Type'} (x : A) (y : A) (f : A -> nat) (s : A -> Prop) : (term3758 A x y f s) = (term3759 A x y f s).
Proof. exact (MK_COMB (@lem4936986 A f x y s) (@lem4936987 A f s)). Qed.
Lemma lem4936989 {A : Type'} (x : A) (f : A -> nat) (s : A -> Prop) : (term3760 A x f s) = (term3761 A x f s).
Proof. exact (fun_ext (fun y : A => @lem4936988 A x y f s)). Qed.
Lemma lem4936990 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem4936991 {A : Type'} (x : A) (f : A -> nat) (s : A -> Prop) : (term3749 A x f s) = (term3762 A x f s).
Proof. exact (MK_COMB (@lem4936990 A) (@lem4936989 A x f s)). Qed.
Lemma lem4936992 {A : Type'} (x : A) (f : A -> nat) (s : A -> Prop) : ((term3748 A x f s) = (term3749 A x f s)) = ((term3744 A x f s) = (term3762 A x f s)).
Proof. exact (MK_COMB (@lem4936983 A x f s) (@lem4936991 A x f s)). Qed.
Lemma lem4936993 {A : Type'} (x : A) (f : A -> nat) (s : A -> Prop) : (term3744 A x f s) = (term3762 A x f s).
Proof. exact (EQ_MP (@lem4936992 A x f s) (@lem4936973 A x f s)). Qed.
Lemma lem4936994 {A : Type'} (f : A -> nat) (s : A -> Prop) : (term3746 A f s) = (term3763 A f s).
Proof. exact (fun_ext (fun x : A => @lem4936993 A x f s)). Qed.
Lemma lem4936995 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem4936996 {A : Type'} (f : A -> nat) (s : A -> Prop) : (term3747 A f s) = (term3764 A f s).
Proof. exact (MK_COMB (@lem4936995 A) (@lem4936994 A f s)). Qed.
Lemma lem4936997 {A : Type'} (f : A -> nat) (s : A -> Prop) : (term3732 A f s) = (term3764 A f s).
Proof. exact (TRANS (@lem4936969 A f s) (@lem4936996 A f s)). Qed.
Lemma lem4936998 {A : Type'} (f : A -> nat) (s : A -> Prop) : (term3694 A f s) = (term3764 A f s).
Proof. exact (TRANS (@lem4936945 A f s) (@lem4936997 A f s)). Qed.
Lemma lem4936999 {A : Type'} (f : A -> nat) : (term3695 A f) = (term3765 A f).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4936998 A f s)). Qed.
Lemma lem4937000 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4937001 {A : Type'} (f : A -> nat) : (term3696 A f) = (term3766 A f).
Proof. exact (MK_COMB (@lem4937000 A) (@lem4936999 A f)). Qed.
Lemma lem4937003 {A B : Type'} (P : type1413 A B) : (term814 A B P) = (term815 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem4937004 {A : Type'} (P : type672 A) : (term1172 A P) = (term1173 A P).
Proof. exact (@lem4937003 (A -> Prop) A P). Qed.
Lemma lem4937005 {A : Type'} (f : A -> nat) : (term3767 A f) = (term3768 A f).
Proof. exact (@lem4937004 A (term3769 A f)). Qed.
Lemma lem4937006 {A : Type'} (f : A -> nat) (s : A -> Prop) : (term3770 A f s) = (term3763 A f s).
Proof. exact (eq_refl (term3770 A f s)). Qed.
Lemma lem4937007 {A : Type'} (x : A) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem4937008 {A : Type'} (f : A -> nat) (s : A -> Prop) (x : A) : (term3771 A f s x) = (term3772 A f s x).
Proof. exact (MK_COMB (@lem4937006 A f s) (@lem4937007 A x)). Qed.
Lemma lem4937009 {A : Type'} (x : A) (f : A -> nat) (s : A -> Prop) : (term3772 A f s x) = (term3762 A x f s).
Proof. exact (eq_refl (term3772 A f s x)). Qed.
Lemma lem4937010 {A : Type'} (x : A) (f : A -> nat) (s : A -> Prop) : (term3771 A f s x) = (term3762 A x f s).
Proof. exact (TRANS (@lem4937008 A f s x) (@lem4937009 A x f s)). Qed.
Lemma lem4937011 {A : Type'} (f : A -> nat) (s : A -> Prop) : (term3773 A f s) = (term3763 A f s).
Proof. exact (fun_ext (fun x : A => @lem4937010 A x f s)). Qed.
Lemma lem4937012 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem4937013 {A : Type'} (f : A -> nat) (s : A -> Prop) : (term3774 A f s) = (term3764 A f s).
Proof. exact (MK_COMB (@lem4937012 A) (@lem4937011 A f s)). Qed.
Lemma lem4937014 {A : Type'} (f : A -> nat) : (term3775 A f) = (term3765 A f).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4937013 A f s)). Qed.
Lemma lem4937015 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4937016 {A : Type'} (f : A -> nat) : (term3767 A f) = (term3766 A f).
Proof. exact (MK_COMB (@lem4937015 A) (@lem4937014 A f)). Qed.
Lemma lem4937017 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4937018 {A : Type'} (f : A -> nat) : (term3776 A f) = (term3777 A f).
Proof. exact (MK_COMB (@lem4937017) (@lem4937016 A f)). Qed.
Lemma lem4937019 {A : Type'} (f : A -> nat) (s : A -> Prop) : (term3770 A f s) = (term3763 A f s).
Proof. exact (eq_refl (term3770 A f s)). Qed.
Lemma lem4937020 {A : Type'} (x : type684 A) (s : A -> Prop) : (x s) = (x s).
Proof. exact (eq_refl (x s)). Qed.
Lemma lem4937021 {A : Type'} (f : A -> nat) (x : type684 A) (s : A -> Prop) : (term3778 A f x s) = (term3779 A f x s).
Proof. exact (MK_COMB (@lem4937019 A f s) (@lem4937020 A x s)). Qed.
Lemma lem4937022 {A : Type'} (x : type684 A) (f : A -> nat) (s : A -> Prop) : (term3779 A f x s) = (term3780 A x f s).
Proof. exact (eq_refl (term3779 A f x s)). Qed.
Lemma lem4937023 {A : Type'} (x : type684 A) (f : A -> nat) (s : A -> Prop) : (term3778 A f x s) = (term3780 A x f s).
Proof. exact (TRANS (@lem4937021 A f x s) (@lem4937022 A x f s)). Qed.
Lemma lem4937024 {A : Type'} (x : type684 A) (f : A -> nat) : (term3781 A f x) = (term3782 A x f).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4937023 A x f s)). Qed.
Lemma lem4937025 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4937026 {A : Type'} (x : type684 A) (f : A -> nat) : (term3783 A f x) = (term3784 A x f).
Proof. exact (MK_COMB (@lem4937025 A) (@lem4937024 A x f)). Qed.
Lemma lem4937027 {A : Type'} (f : A -> nat) : (term3785 A f) = (term3786 A f).
Proof. exact (fun_ext (fun x : type684 A => @lem4937026 A x f)). Qed.
Lemma lem4937028 {A : Type'} : (@ex ((A -> Prop) -> A)) = (@ex ((A -> Prop) -> A)).
Proof. exact (eq_refl (@ex ((A -> Prop) -> A))). Qed.
Lemma lem4937029 {A : Type'} (f : A -> nat) : (term3768 A f) = (term3787 A f).
Proof. exact (MK_COMB (@lem4937028 A) (@lem4937027 A f)). Qed.
Lemma lem4937030 {A : Type'} (f : A -> nat) : ((term3767 A f) = (term3768 A f)) = ((term3766 A f) = (term3787 A f)).
Proof. exact (MK_COMB (@lem4937018 A f) (@lem4937029 A f)). Qed.
Lemma lem4937031 {A : Type'} (f : A -> nat) : (term3766 A f) = (term3787 A f).
Proof. exact (EQ_MP (@lem4937030 A f) (@lem4937005 A f)). Qed.
Lemma lem4937033 {A B : Type'} (P : type1413 A B) : (term814 A B P) = (term815 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem4937034 {A : Type'} (P : type672 A) : (term1172 A P) = (term1173 A P).
Proof. exact (@lem4937033 (A -> Prop) A P). Qed.
Lemma lem4937035 {A : Type'} (x : type684 A) (f : A -> nat) : (term3788 A x f) = (term3789 A x f).
Proof. exact (@lem4937034 A (term3790 A x f)). Qed.
Lemma lem4937036 {A : Type'} (x : type684 A) (f : A -> nat) (s : A -> Prop) : (term3791 A x f s) = (term3792 A x f s).
Proof. exact (eq_refl (term3791 A x f s)). Qed.
Lemma lem4937037 {A : Type'} (y : A) : y = y.
Proof. exact (eq_refl y). Qed.
Lemma lem4937038 {A : Type'} (x : type684 A) (f : A -> nat) (s : A -> Prop) (y : A) : (term3793 A x f s y) = (term3794 A x f s y).
Proof. exact (MK_COMB (@lem4937036 A x f s) (@lem4937037 A y)). Qed.
Lemma lem4937039 {A : Type'} (x : type684 A) (y : A) (f : A -> nat) (s : A -> Prop) : (term3794 A x f s y) = (term3795 A x y f s).
Proof. exact (eq_refl (term3794 A x f s y)). Qed.
Lemma lem4937040 {A : Type'} (x : type684 A) (y : A) (f : A -> nat) (s : A -> Prop) : (term3793 A x f s y) = (term3795 A x y f s).
Proof. exact (TRANS (@lem4937038 A x f s y) (@lem4937039 A x y f s)). Qed.
Lemma lem4937041 {A : Type'} (x : type684 A) (f : A -> nat) (s : A -> Prop) : (term3796 A x f s) = (term3792 A x f s).
Proof. exact (fun_ext (fun y : A => @lem4937040 A x y f s)). Qed.
Lemma lem4937042 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem4937043 {A : Type'} (x : type684 A) (f : A -> nat) (s : A -> Prop) : (term3797 A x f s) = (term3780 A x f s).
Proof. exact (MK_COMB (@lem4937042 A) (@lem4937041 A x f s)). Qed.
Lemma lem4937044 {A : Type'} (x : type684 A) (f : A -> nat) : (term3798 A x f) = (term3782 A x f).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4937043 A x f s)). Qed.
Lemma lem4937045 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4937046 {A : Type'} (x : type684 A) (f : A -> nat) : (term3788 A x f) = (term3784 A x f).
Proof. exact (MK_COMB (@lem4937045 A) (@lem4937044 A x f)). Qed.
Lemma lem4937047 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4937048 {A : Type'} (x : type684 A) (f : A -> nat) : (term3799 A x f) = (term3800 A x f).
Proof. exact (MK_COMB (@lem4937047) (@lem4937046 A x f)). Qed.
Lemma lem4937049 {A : Type'} (x : type684 A) (f : A -> nat) (s : A -> Prop) : (term3791 A x f s) = (term3792 A x f s).
Proof. exact (eq_refl (term3791 A x f s)). Qed.
Lemma lem4937050 {A : Type'} (y : type684 A) (s : A -> Prop) : (y s) = (y s).
Proof. exact (eq_refl (y s)). Qed.
Lemma lem4937051 {A : Type'} (x : type684 A) (f : A -> nat) (y : type684 A) (s : A -> Prop) : (term3801 A x f y s) = (term3802 A x f y s).
Proof. exact (MK_COMB (@lem4937049 A x f s) (@lem4937050 A y s)). Qed.
Lemma lem4937052 {A : Type'} (x : type684 A) (y : type684 A) (f : A -> nat) (s : A -> Prop) : (term3802 A x f y s) = (term3803 A x y f s).
Proof. exact (eq_refl (term3802 A x f y s)). Qed.
Lemma lem4937053 {A : Type'} (x : type684 A) (y : type684 A) (f : A -> nat) (s : A -> Prop) : (term3801 A x f y s) = (term3803 A x y f s).
Proof. exact (TRANS (@lem4937051 A x f y s) (@lem4937052 A x y f s)). Qed.
Lemma lem4937054 {A : Type'} (x : type684 A) (y : type684 A) (f : A -> nat) : (term3804 A x f y) = (term3805 A x y f).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4937053 A x y f s)). Qed.
Lemma lem4937055 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4937056 {A : Type'} (x : type684 A) (y : type684 A) (f : A -> nat) : (term3806 A x f y) = (term3807 A x y f).
Proof. exact (MK_COMB (@lem4937055 A) (@lem4937054 A x y f)). Qed.
Lemma lem4937057 {A : Type'} (x : type684 A) (f : A -> nat) : (term3808 A x f) = (term3809 A x f).
Proof. exact (fun_ext (fun y : type684 A => @lem4937056 A x y f)). Qed.
Lemma lem4937058 {A : Type'} : (@ex ((A -> Prop) -> A)) = (@ex ((A -> Prop) -> A)).
Proof. exact (eq_refl (@ex ((A -> Prop) -> A))). Qed.
Lemma lem4937059 {A : Type'} (x : type684 A) (f : A -> nat) : (term3789 A x f) = (term3810 A x f).
Proof. exact (MK_COMB (@lem4937058 A) (@lem4937057 A x f)). Qed.
Lemma lem4937060 {A : Type'} (x : type684 A) (f : A -> nat) : ((term3788 A x f) = (term3789 A x f)) = ((term3784 A x f) = (term3810 A x f)).
Proof. exact (MK_COMB (@lem4937048 A x f) (@lem4937059 A x f)). Qed.
Lemma lem4937061 {A : Type'} (x : type684 A) (f : A -> nat) : (term3784 A x f) = (term3810 A x f).
Proof. exact (EQ_MP (@lem4937060 A x f) (@lem4937035 A x f)). Qed.
Lemma lem4937062 {A : Type'} (f : A -> nat) : (term3786 A f) = (term3811 A f).
Proof. exact (fun_ext (fun x : type684 A => @lem4937061 A x f)). Qed.
Lemma lem4937063 {A : Type'} : (@ex ((A -> Prop) -> A)) = (@ex ((A -> Prop) -> A)).
Proof. exact (eq_refl (@ex ((A -> Prop) -> A))). Qed.
Lemma lem4937064 {A : Type'} (f : A -> nat) : (term3787 A f) = (term3812 A f).
Proof. exact (MK_COMB (@lem4937063 A) (@lem4937062 A f)). Qed.
Lemma lem4937065 {A : Type'} (f : A -> nat) : (term3766 A f) = (term3812 A f).
Proof. exact (TRANS (@lem4937031 A f) (@lem4937064 A f)). Qed.
Lemma lem4937066 {A : Type'} (f : A -> nat) : (term3696 A f) = (term3812 A f).
Proof. exact (TRANS (@lem4937001 A f) (@lem4937065 A f)). Qed.
Lemma lem4937067 {A : Type'} : (term3697 A) = (term3813 A).
Proof. exact (fun_ext (fun f : A -> nat => @lem4937066 A f)). Qed.
Lemma lem4937068 {A : Type'} : (@all (A -> nat)) = (@all (A -> nat)).
Proof. exact (eq_refl (@all (A -> nat))). Qed.
Lemma lem4937069 {A : Type'} : (term3698 A) = (term3814 A).
Proof. exact (MK_COMB (@lem4937068 A) (@lem4937067 A)). Qed.
Lemma lem4937071 {A B : Type'} (P : type1413 A B) : (term814 A B P) = (term815 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem4937072 {A : Type'} (P : type690 A) : (term3815 A P) = (term3816 A P).
Proof. exact (@lem4937071 (A -> nat) (type684 A) P). Qed.
Lemma lem4937073 {A : Type'} : (term3817 A) = (term3818 A).
Proof. exact (@lem4937072 A (term3819 A)). Qed.
Lemma lem4937074 {A : Type'} (f : A -> nat) : (term3820 A f) = (term3811 A f).
Proof. exact (eq_refl (term3820 A f)). Qed.
Lemma lem4937075 {A : Type'} (x : type684 A) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem4937076 {A : Type'} (f : A -> nat) (x : type684 A) : (term3821 A f x) = (term3822 A f x).
Proof. exact (MK_COMB (@lem4937074 A f) (@lem4937075 A x)). Qed.
Lemma lem4937077 {A : Type'} (x : type684 A) (f : A -> nat) : (term3822 A f x) = (term3810 A x f).
Proof. exact (eq_refl (term3822 A f x)). Qed.
Lemma lem4937078 {A : Type'} (x : type684 A) (f : A -> nat) : (term3821 A f x) = (term3810 A x f).
Proof. exact (TRANS (@lem4937076 A f x) (@lem4937077 A x f)). Qed.
Lemma lem4937079 {A : Type'} (f : A -> nat) : (term3823 A f) = (term3811 A f).
Proof. exact (fun_ext (fun x : type684 A => @lem4937078 A x f)). Qed.
Lemma lem4937080 {A : Type'} : (@ex ((A -> Prop) -> A)) = (@ex ((A -> Prop) -> A)).
Proof. exact (eq_refl (@ex ((A -> Prop) -> A))). Qed.
Lemma lem4937081 {A : Type'} (f : A -> nat) : (term3824 A f) = (term3812 A f).
Proof. exact (MK_COMB (@lem4937080 A) (@lem4937079 A f)). Qed.
Lemma lem4937082 {A : Type'} : (term3825 A) = (term3813 A).
Proof. exact (fun_ext (fun f : A -> nat => @lem4937081 A f)). Qed.
Lemma lem4937083 {A : Type'} : (@all (A -> nat)) = (@all (A -> nat)).
Proof. exact (eq_refl (@all (A -> nat))). Qed.
Lemma lem4937084 {A : Type'} : (term3817 A) = (term3814 A).
Proof. exact (MK_COMB (@lem4937083 A) (@lem4937082 A)). Qed.
Lemma lem4937085 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4937086 {A : Type'} : (term3826 A) = (term3827 A).
Proof. exact (MK_COMB (@lem4937085) (@lem4937084 A)). Qed.
Lemma lem4937087 {A : Type'} (f : A -> nat) : (term3820 A f) = (term3811 A f).
Proof. exact (eq_refl (term3820 A f)). Qed.
Lemma lem4937088 {A : Type'} (x : type694 A) (f : A -> nat) : (x f) = (x f).
Proof. exact (eq_refl (x f)). Qed.
Lemma lem4937089 {A : Type'} (x : type694 A) (f : A -> nat) : (term3828 A x f) = (term3829 A x f).
Proof. exact (MK_COMB (@lem4937087 A f) (@lem4937088 A x f)). Qed.
Lemma lem4937090 {A : Type'} (x : type694 A) (f : A -> nat) : (term3829 A x f) = (term3830 A x f).
Proof. exact (eq_refl (term3829 A x f)). Qed.
Lemma lem4937091 {A : Type'} (x : type694 A) (f : A -> nat) : (term3828 A x f) = (term3830 A x f).
Proof. exact (TRANS (@lem4937089 A x f) (@lem4937090 A x f)). Qed.
Lemma lem4937092 {A : Type'} (x : type694 A) : (term3831 A x) = (term3832 A x).
Proof. exact (fun_ext (fun f : A -> nat => @lem4937091 A x f)). Qed.
Lemma lem4937093 {A : Type'} : (@all (A -> nat)) = (@all (A -> nat)).
Proof. exact (eq_refl (@all (A -> nat))). Qed.
Lemma lem4937094 {A : Type'} (x : type694 A) : (term3833 A x) = (term3834 A x).
Proof. exact (MK_COMB (@lem4937093 A) (@lem4937092 A x)). Qed.
Lemma lem4937095 {A : Type'} : (term3835 A) = (term3836 A).
Proof. exact (fun_ext (fun x : type694 A => @lem4937094 A x)). Qed.
Lemma lem4937096 {A : Type'} : (@ex ((A -> nat) -> (A -> Prop) -> A)) = (@ex ((A -> nat) -> (A -> Prop) -> A)).
Proof. exact (eq_refl (@ex ((A -> nat) -> (A -> Prop) -> A))). Qed.
Lemma lem4937097 {A : Type'} : (term3818 A) = (term3837 A).
Proof. exact (MK_COMB (@lem4937096 A) (@lem4937095 A)). Qed.
Lemma lem4937098 {A : Type'} : ((term3817 A) = (term3818 A)) = ((term3814 A) = (term3837 A)).
Proof. exact (MK_COMB (@lem4937086 A) (@lem4937097 A)). Qed.
Lemma lem4937099 {A : Type'} : (term3814 A) = (term3837 A).
Proof. exact (EQ_MP (@lem4937098 A) (@lem4937073 A)). Qed.
Lemma lem4937101 {A B : Type'} (P : type1413 A B) : (term814 A B P) = (term815 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem4937102 {A : Type'} (P : type690 A) : (term3815 A P) = (term3816 A P).
Proof. exact (@lem4937101 (A -> nat) (type684 A) P). Qed.
Lemma lem4937103 {A : Type'} (x : type694 A) : (term3838 A x) = (term3839 A x).
Proof. exact (@lem4937102 A (term3840 A x)). Qed.
Lemma lem4937104 {A : Type'} (x : type694 A) (f : A -> nat) : (term3841 A x f) = (term3842 A x f).
Proof. exact (eq_refl (term3841 A x f)). Qed.
Lemma lem4937105 {A : Type'} (y : type684 A) : y = y.
Proof. exact (eq_refl y). Qed.
Lemma lem4937106 {A : Type'} (x : type694 A) (f : A -> nat) (y : type684 A) : (term3843 A x f y) = (term3844 A x f y).
Proof. exact (MK_COMB (@lem4937104 A x f) (@lem4937105 A y)). Qed.
Lemma lem4937107 {A : Type'} (x : type694 A) (y : type684 A) (f : A -> nat) : (term3844 A x f y) = (term3845 A x y f).
Proof. exact (eq_refl (term3844 A x f y)). Qed.
Lemma lem4937108 {A : Type'} (x : type694 A) (y : type684 A) (f : A -> nat) : (term3843 A x f y) = (term3845 A x y f).
Proof. exact (TRANS (@lem4937106 A x f y) (@lem4937107 A x y f)). Qed.
Lemma lem4937109 {A : Type'} (x : type694 A) (f : A -> nat) : (term3846 A x f) = (term3842 A x f).
Proof. exact (fun_ext (fun y : type684 A => @lem4937108 A x y f)). Qed.
Lemma lem4937110 {A : Type'} : (@ex ((A -> Prop) -> A)) = (@ex ((A -> Prop) -> A)).
Proof. exact (eq_refl (@ex ((A -> Prop) -> A))). Qed.
Lemma lem4937111 {A : Type'} (x : type694 A) (f : A -> nat) : (term3847 A x f) = (term3830 A x f).
Proof. exact (MK_COMB (@lem4937110 A) (@lem4937109 A x f)). Qed.
Lemma lem4937112 {A : Type'} (x : type694 A) : (term3848 A x) = (term3832 A x).
Proof. exact (fun_ext (fun f : A -> nat => @lem4937111 A x f)). Qed.
Lemma lem4937113 {A : Type'} : (@all (A -> nat)) = (@all (A -> nat)).
Proof. exact (eq_refl (@all (A -> nat))). Qed.
Lemma lem4937114 {A : Type'} (x : type694 A) : (term3838 A x) = (term3834 A x).
Proof. exact (MK_COMB (@lem4937113 A) (@lem4937112 A x)). Qed.
Lemma lem4937115 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4937116 {A : Type'} (x : type694 A) : (term3849 A x) = (term3850 A x).
Proof. exact (MK_COMB (@lem4937115) (@lem4937114 A x)). Qed.
Lemma lem4937117 {A : Type'} (x : type694 A) (f : A -> nat) : (term3841 A x f) = (term3842 A x f).
Proof. exact (eq_refl (term3841 A x f)). Qed.
Lemma lem4937118 {A : Type'} (y : type694 A) (f : A -> nat) : (y f) = (y f).
Proof. exact (eq_refl (y f)). Qed.
Lemma lem4937119 {A : Type'} (x : type694 A) (y : type694 A) (f : A -> nat) : (term3851 A x y f) = (term3852 A x y f).
Proof. exact (MK_COMB (@lem4937117 A x f) (@lem4937118 A y f)). Qed.
Lemma lem4937120 {A : Type'} (x : type694 A) (y : type694 A) (f : A -> nat) : (term3852 A x y f) = (term3853 A x y f).
Proof. exact (eq_refl (term3852 A x y f)). Qed.
Lemma lem4937121 {A : Type'} (x : type694 A) (y : type694 A) (f : A -> nat) : (term3851 A x y f) = (term3853 A x y f).
Proof. exact (TRANS (@lem4937119 A x y f) (@lem4937120 A x y f)). Qed.
Lemma lem4937122 {A : Type'} (x : type694 A) (y : type694 A) : (term3854 A x y) = (term3855 A x y).
Proof. exact (fun_ext (fun f : A -> nat => @lem4937121 A x y f)). Qed.
Lemma lem4937123 {A : Type'} : (@all (A -> nat)) = (@all (A -> nat)).
Proof. exact (eq_refl (@all (A -> nat))). Qed.
Lemma lem4937124 {A : Type'} (x : type694 A) (y : type694 A) : (term3856 A x y) = (term3857 A x y).
Proof. exact (MK_COMB (@lem4937123 A) (@lem4937122 A x y)). Qed.
Lemma lem4937125 {A : Type'} (x : type694 A) : (term3858 A x) = (term3859 A x).
Proof. exact (fun_ext (fun y : type694 A => @lem4937124 A x y)). Qed.
Lemma lem4937126 {A : Type'} : (@ex ((A -> nat) -> (A -> Prop) -> A)) = (@ex ((A -> nat) -> (A -> Prop) -> A)).
Proof. exact (eq_refl (@ex ((A -> nat) -> (A -> Prop) -> A))). Qed.
Lemma lem4937127 {A : Type'} (x : type694 A) : (term3839 A x) = (term3860 A x).
Proof. exact (MK_COMB (@lem4937126 A) (@lem4937125 A x)). Qed.
Lemma lem4937128 {A : Type'} (x : type694 A) : ((term3838 A x) = (term3839 A x)) = ((term3834 A x) = (term3860 A x)).
Proof. exact (MK_COMB (@lem4937116 A x) (@lem4937127 A x)). Qed.
Lemma lem4937129 {A : Type'} (x : type694 A) : (term3834 A x) = (term3860 A x).
Proof. exact (EQ_MP (@lem4937128 A x) (@lem4937103 A x)). Qed.
Lemma lem4937130 {A : Type'} : (term3836 A) = (term3861 A).
Proof. exact (fun_ext (fun x : type694 A => @lem4937129 A x)). Qed.
Lemma lem4937131 {A : Type'} : (@ex ((A -> nat) -> (A -> Prop) -> A)) = (@ex ((A -> nat) -> (A -> Prop) -> A)).
Proof. exact (eq_refl (@ex ((A -> nat) -> (A -> Prop) -> A))). Qed.
Lemma lem4937132 {A : Type'} : (term3837 A) = (term3862 A).
Proof. exact (MK_COMB (@lem4937131 A) (@lem4937130 A)). Qed.
Lemma lem4937133 {A : Type'} : (term3814 A) = (term3862 A).
Proof. exact (TRANS (@lem4937099 A) (@lem4937132 A)). Qed.
Lemma lem4937135 {A : Type'} : (term3698 A) = (term3862 A).
Proof. exact (TRANS (@lem4937069 A) (@lem4937133 A)). Qed.
Lemma lem4937136 {A : Type'} : (term2707 A) = (term3862 A).
Proof. exact (TRANS (@lem4936784 A) (@lem4937135 A)). Qed.
Lemma lem4937137 {A : Type'} (h1 : term2707 A) : term3862 A.
Proof. exact (EQ_MP (@lem4937136 A) (@lem4934983 A h1)). Qed.
Lemma lem4937152 {B : Type'} (s : B -> Prop) (f : B -> B) (x : B) (y : B) : (term2894 B s f x y) = (term2895 B s f x y).
Proof. exact (@lem17362 (term2896 B s x f y) (x = y)). Qed.
Lemma lem4937153 {B : Type'} (P : B -> Prop) : (term2420 B P) = (term2421 B P).
Proof. exact (@lem18392 B P). Qed.
Lemma lem4937154 {B : Type'} (s : B -> Prop) (f : B -> B) (x : B) : (term2897 B s f x) = (term2898 B s f x).
Proof. exact (@lem4937153 B (term2823 B s f x)). Qed.
Lemma lem4937155 {B : Type'} (s : B -> Prop) (f : B -> B) (x : B) (y : B) : (term2899 B s f x y) = (term2822 B s f x y).
Proof. exact (eq_refl (term2899 B s f x y)). Qed.
Lemma lem4937156 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem4937157 {B : Type'} (s : B -> Prop) (f : B -> B) (x : B) (y : B) : (term2900 B s f x y) = (term2894 B s f x y).
Proof. exact (MK_COMB (@lem4937156) (@lem4937155 B s f x y)). Qed.
Lemma lem4937158 {B : Type'} (s : B -> Prop) (f : B -> B) (x : B) (y : B) : (term2900 B s f x y) = (term2895 B s f x y).
Proof. exact (TRANS (@lem4937157 B s f x y) (@lem4937152 B s f x y)). Qed.
Lemma lem4937159 {B : Type'} (s : B -> Prop) (f : B -> B) (x : B) : (term2901 B s f x) = (term2902 B s f x).
Proof. exact (fun_ext (fun y : B => @lem4937158 B s f x y)). Qed.
Lemma lem4937160 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem4937161 {B : Type'} (s : B -> Prop) (f : B -> B) (x : B) : (term2898 B s f x) = (term2903 B s f x).
Proof. exact (MK_COMB (@lem4937160 B) (@lem4937159 B s f x)). Qed.
Lemma lem4937162 {B : Type'} (s : B -> Prop) (f : B -> B) (x : B) : (term2897 B s f x) = (term2903 B s f x).
Proof. exact (TRANS (@lem4937154 B s f x) (@lem4937161 B s f x)). Qed.
Lemma lem4937163 {B : Type'} (P : B -> Prop) : (term2420 B P) = (term2421 B P).
Proof. exact (@lem18392 B P). Qed.
Lemma lem4937164 {B : Type'} (s : B -> Prop) (f : B -> B) : (term2904 B s f) = (term2905 B s f).
Proof. exact (@lem4937163 B (term2825 B s f)). Qed.
Lemma lem4937165 {B : Type'} (s : B -> Prop) (f : B -> B) (x : B) : (term2906 B s f x) = (term2824 B s f x).
Proof. exact (eq_refl (term2906 B s f x)). Qed.
Lemma lem4937166 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem4937167 {B : Type'} (s : B -> Prop) (f : B -> B) (x : B) : (term2907 B s f x) = (term2897 B s f x).
Proof. exact (MK_COMB (@lem4937166) (@lem4937165 B s f x)). Qed.
Lemma lem4937168 {B : Type'} (s : B -> Prop) (f : B -> B) (x : B) : (term2907 B s f x) = (term2903 B s f x).
Proof. exact (TRANS (@lem4937167 B s f x) (@lem4937162 B s f x)). Qed.
Lemma lem4937169 {B : Type'} (s : B -> Prop) (f : B -> B) : (term2908 B s f) = (term2909 B s f).
Proof. exact (fun_ext (fun x : B => @lem4937168 B s f x)). Qed.
Lemma lem4937170 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem4937171 {B : Type'} (s : B -> Prop) (f : B -> B) : (term2905 B s f) = (term2910 B s f).
Proof. exact (MK_COMB (@lem4937170 B) (@lem4937169 B s f)). Qed.
Lemma lem4937172 {B : Type'} (s : B -> Prop) (f : B -> B) : (term2904 B s f) = (term2910 B s f).
Proof. exact (TRANS (@lem4937164 B s f) (@lem4937171 B s f)). Qed.
Lemma lem4937173 {B : Type'} (s : B -> Prop) : (term1224 B s) = (term1224 B s).
Proof. exact (eq_refl (term1224 B s)). Qed.
Lemma lem4937174 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4937175 {B : Type'} (s : B -> Prop) (f : B -> B) : (term2911 B s f) = (term2912 B s f).
Proof. exact (MK_COMB (@lem4937174) (@lem4937172 B s f)). Qed.
Lemma lem4937176 {B : Type'} (f : B -> B) (s : B -> Prop) : (term2913 B f s) = (term2914 B f s).
Proof. exact (MK_COMB (@lem4937175 B s f) (@lem4937173 B s)). Qed.
Lemma lem4937177 {B : Type'} (f : B -> B) (s : B -> Prop) : (term2915 B f s) = (term2913 B f s).
Proof. exact (@lem17045 (term2826 B s f) (@FINITE B s)). Qed.
Lemma lem4937178 {B : Type'} (f : B -> B) (s : B -> Prop) : (term2915 B f s) = (term2914 B f s).
Proof. exact (TRANS (@lem4937177 B f s) (@lem4937176 B f s)). Qed.
Lemma lem4937179 {B : Type'} (f : B -> B) (s : B -> Prop) : ((term2821 B f s) = (@CARD B s)) = ((term2821 B f s) = (@CARD B s)).
Proof. exact (eq_refl ((term2821 B f s) = (@CARD B s))). Qed.
Lemma lem4937180 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4937181 {B : Type'} (f : B -> B) (s : B -> Prop) : (term2916 B f s) = (term2917 B f s).
Proof. exact (MK_COMB (@lem4937180) (@lem4937178 B f s)). Qed.
Lemma lem4937182 {B : Type'} (f : B -> B) (s : B -> Prop) : (term2918 B f s) = (term2919 B f s).
Proof. exact (MK_COMB (@lem4937181 B f s) (@lem4937179 B f s)). Qed.
Lemma lem4937183 {B : Type'} (f : B -> B) (s : B -> Prop) : (term2830 B f s) = (term2918 B f s).
Proof. exact (@lem17265 (term2828 B f s) ((term2821 B f s) = (@CARD B s))). Qed.
Lemma lem4937184 {B : Type'} (f : B -> B) (s : B -> Prop) : (term2830 B f s) = (term2919 B f s).
Proof. exact (TRANS (@lem4937183 B f s) (@lem4937182 B f s)). Qed.
Lemma lem4937185 {B : Type'} (f : B -> B) : (term2831 B f) = (term2920 B f).
Proof. exact (fun_ext (fun s : B -> Prop => @lem4937184 B f s)). Qed.
Lemma lem4937186 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4937187 {B : Type'} (f : B -> B) : (term2832 B f) = (term2921 B f).
Proof. exact (MK_COMB (@lem4937186 B) (@lem4937185 B f)). Qed.
Lemma lem4937188 {B : Type'} : (term2833 B) = (term2922 B).
Proof. exact (fun_ext (fun f : B -> B => @lem4937187 B f)). Qed.
Lemma lem4937189 {B : Type'} : (@all (B -> B)) = (@all (B -> B)).
Proof. exact (eq_refl (@all (B -> B))). Qed.
Lemma lem4937190 {B : Type'} : (term2706 B) = (term2923 B).
Proof. exact (MK_COMB (@lem4937189 B) (@lem4937188 B)). Qed.
Lemma lem4937297 {A : Type'} (P : A -> Prop) (Q : Prop) : (term1154 A P Q) = (term1155 A P Q).
Proof. exact (EQ_MP (@lem18905 A P Q) (@lem18904 A P Q)). Qed.
Lemma lem4937298 {B : Type'} (P : B -> Prop) (Q : Prop) : (term1154 B P Q) = (term1155 B P Q).
Proof. exact (@lem4937297 B P Q). Qed.
Lemma lem4937299 {B : Type'} (f : B -> B) (s : B -> Prop) : (term2924 B f s) = (term2925 B f s).
Proof. exact (@lem4937298 B (term2909 B s f) (term1224 B s)). Qed.
Lemma lem4937300 {B : Type'} (s : B -> Prop) (f : B -> B) (x : B) : (term2926 B s f x) = (term2903 B s f x).
Proof. exact (eq_refl (term2926 B s f x)). Qed.
Lemma lem4937301 {B : Type'} (s : B -> Prop) (f : B -> B) : (term2927 B s f) = (term2909 B s f).
Proof. exact (fun_ext (fun x : B => @lem4937300 B s f x)). Qed.
Lemma lem4937302 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem4937303 {B : Type'} (s : B -> Prop) (f : B -> B) : (term2928 B s f) = (term2910 B s f).
Proof. exact (MK_COMB (@lem4937302 B) (@lem4937301 B s f)). Qed.
Lemma lem4937304 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4937305 {B : Type'} (s : B -> Prop) (f : B -> B) : (term2929 B s f) = (term2912 B s f).
Proof. exact (MK_COMB (@lem4937304) (@lem4937303 B s f)). Qed.
Lemma lem4937306 {B : Type'} (s : B -> Prop) : (term1224 B s) = (term1224 B s).
Proof. exact (eq_refl (term1224 B s)). Qed.
Lemma lem4937307 {B : Type'} (f : B -> B) (s : B -> Prop) : (term2924 B f s) = (term2914 B f s).
Proof. exact (MK_COMB (@lem4937305 B s f) (@lem4937306 B s)). Qed.
Lemma lem4937308 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4937309 {B : Type'} (f : B -> B) (s : B -> Prop) : (term2930 B f s) = (term2931 B f s).
Proof. exact (MK_COMB (@lem4937308) (@lem4937307 B f s)). Qed.
Lemma lem4937310 {B : Type'} (s : B -> Prop) (f : B -> B) (x : B) : (term2926 B s f x) = (term2903 B s f x).
Proof. exact (eq_refl (term2926 B s f x)). Qed.
Lemma lem4937311 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4937312 {B : Type'} (s : B -> Prop) (f : B -> B) (x : B) : (term2932 B s f x) = (term2933 B s f x).
Proof. exact (MK_COMB (@lem4937311) (@lem4937310 B s f x)). Qed.
Lemma lem4937313 {B : Type'} (s : B -> Prop) : (term1224 B s) = (term1224 B s).
Proof. exact (eq_refl (term1224 B s)). Qed.
Lemma lem4937314 {B : Type'} (f : B -> B) (x : B) (s : B -> Prop) : (term2934 B f x s) = (term2935 B f x s).
Proof. exact (MK_COMB (@lem4937312 B s f x) (@lem4937313 B s)). Qed.
Lemma lem4937315 {B : Type'} (f : B -> B) (s : B -> Prop) : (term2936 B f s) = (term2937 B f s).
Proof. exact (fun_ext (fun x : B => @lem4937314 B f x s)). Qed.
Lemma lem4937316 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem4937317 {B : Type'} (f : B -> B) (s : B -> Prop) : (term2925 B f s) = (term2938 B f s).
Proof. exact (MK_COMB (@lem4937316 B) (@lem4937315 B f s)). Qed.
Lemma lem4937318 {B : Type'} (f : B -> B) (s : B -> Prop) : ((term2924 B f s) = (term2925 B f s)) = ((term2914 B f s) = (term2938 B f s)).
Proof. exact (MK_COMB (@lem4937309 B f s) (@lem4937317 B f s)). Qed.
Lemma lem4937319 {B : Type'} (f : B -> B) (s : B -> Prop) : (term2914 B f s) = (term2938 B f s).
Proof. exact (EQ_MP (@lem4937318 B f s) (@lem4937299 B f s)). Qed.
Lemma lem4937321 {A : Type'} (P : A -> Prop) (Q : Prop) : (term1154 A P Q) = (term1155 A P Q).
Proof. exact (EQ_MP (@lem18905 A P Q) (@lem18904 A P Q)). Qed.
Lemma lem4937322 {B : Type'} (P : B -> Prop) (Q : Prop) : (term1154 B P Q) = (term1155 B P Q).
Proof. exact (@lem4937321 B P Q). Qed.
Lemma lem4937323 {B : Type'} (f : B -> B) (x : B) (s : B -> Prop) : (term2939 B f x s) = (term2940 B f x s).
Proof. exact (@lem4937322 B (term2902 B s f x) (term1224 B s)). Qed.
Lemma lem4937324 {B : Type'} (s : B -> Prop) (f : B -> B) (x : B) (y : B) : (term2941 B s f x y) = (term2895 B s f x y).
Proof. exact (eq_refl (term2941 B s f x y)). Qed.
Lemma lem4937325 {B : Type'} (s : B -> Prop) (f : B -> B) (x : B) : (term2942 B s f x) = (term2902 B s f x).
Proof. exact (fun_ext (fun y : B => @lem4937324 B s f x y)). Qed.
Lemma lem4937326 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem4937327 {B : Type'} (s : B -> Prop) (f : B -> B) (x : B) : (term2943 B s f x) = (term2903 B s f x).
Proof. exact (MK_COMB (@lem4937326 B) (@lem4937325 B s f x)). Qed.
Lemma lem4937328 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4937329 {B : Type'} (s : B -> Prop) (f : B -> B) (x : B) : (term2944 B s f x) = (term2933 B s f x).
Proof. exact (MK_COMB (@lem4937328) (@lem4937327 B s f x)). Qed.
Lemma lem4937330 {B : Type'} (s : B -> Prop) : (term1224 B s) = (term1224 B s).
Proof. exact (eq_refl (term1224 B s)). Qed.
Lemma lem4937331 {B : Type'} (f : B -> B) (x : B) (s : B -> Prop) : (term2939 B f x s) = (term2935 B f x s).
Proof. exact (MK_COMB (@lem4937329 B s f x) (@lem4937330 B s)). Qed.
Lemma lem4937332 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4937333 {B : Type'} (f : B -> B) (x : B) (s : B -> Prop) : (term2945 B f x s) = (term2946 B f x s).
Proof. exact (MK_COMB (@lem4937332) (@lem4937331 B f x s)). Qed.
Lemma lem4937334 {B : Type'} (s : B -> Prop) (f : B -> B) (x : B) (y : B) : (term2941 B s f x y) = (term2895 B s f x y).
Proof. exact (eq_refl (term2941 B s f x y)). Qed.
Lemma lem4937335 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4937336 {B : Type'} (s : B -> Prop) (f : B -> B) (x : B) (y : B) : (term2947 B s f x y) = (term2948 B s f x y).
Proof. exact (MK_COMB (@lem4937335) (@lem4937334 B s f x y)). Qed.
Lemma lem4937337 {B : Type'} (s : B -> Prop) : (term1224 B s) = (term1224 B s).
Proof. exact (eq_refl (term1224 B s)). Qed.
Lemma lem4937338 {B : Type'} (f : B -> B) (x : B) (y : B) (s : B -> Prop) : (term2949 B f x y s) = (term2950 B f x y s).
Proof. exact (MK_COMB (@lem4937336 B s f x y) (@lem4937337 B s)). Qed.
Lemma lem4937339 {B : Type'} (f : B -> B) (x : B) (s : B -> Prop) : (term2951 B f x s) = (term2952 B f x s).
Proof. exact (fun_ext (fun y : B => @lem4937338 B f x y s)). Qed.
Lemma lem4937340 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem4937341 {B : Type'} (f : B -> B) (x : B) (s : B -> Prop) : (term2940 B f x s) = (term2953 B f x s).
Proof. exact (MK_COMB (@lem4937340 B) (@lem4937339 B f x s)). Qed.
Lemma lem4937342 {B : Type'} (f : B -> B) (x : B) (s : B -> Prop) : ((term2939 B f x s) = (term2940 B f x s)) = ((term2935 B f x s) = (term2953 B f x s)).
Proof. exact (MK_COMB (@lem4937333 B f x s) (@lem4937341 B f x s)). Qed.
Lemma lem4937343 {B : Type'} (f : B -> B) (x : B) (s : B -> Prop) : (term2935 B f x s) = (term2953 B f x s).
Proof. exact (EQ_MP (@lem4937342 B f x s) (@lem4937323 B f x s)). Qed.
Lemma lem4937344 {B : Type'} (f : B -> B) (s : B -> Prop) : (term2937 B f s) = (term2954 B f s).
Proof. exact (fun_ext (fun x : B => @lem4937343 B f x s)). Qed.
Lemma lem4937345 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem4937346 {B : Type'} (f : B -> B) (s : B -> Prop) : (term2938 B f s) = (term2955 B f s).
Proof. exact (MK_COMB (@lem4937345 B) (@lem4937344 B f s)). Qed.
Lemma lem4937347 {B : Type'} (f : B -> B) (s : B -> Prop) : (term2914 B f s) = (term2955 B f s).
Proof. exact (TRANS (@lem4937319 B f s) (@lem4937346 B f s)). Qed.
Lemma lem4937348 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4937349 {B : Type'} (f : B -> B) (s : B -> Prop) : (term2917 B f s) = (term2956 B f s).
Proof. exact (MK_COMB (@lem4937348) (@lem4937347 B f s)). Qed.
Lemma lem4937350 {B : Type'} (f : B -> B) (s : B -> Prop) : ((term2821 B f s) = (@CARD B s)) = ((term2821 B f s) = (@CARD B s)).
Proof. exact (eq_refl ((term2821 B f s) = (@CARD B s))). Qed.
Lemma lem4937351 {B : Type'} (f : B -> B) (s : B -> Prop) : (term2919 B f s) = (term2957 B f s).
Proof. exact (MK_COMB (@lem4937349 B f s) (@lem4937350 B f s)). Qed.
Lemma lem4937353 {A : Type'} (P : A -> Prop) (Q : Prop) : (term1154 A P Q) = (term1155 A P Q).
Proof. exact (EQ_MP (@lem18905 A P Q) (@lem18904 A P Q)). Qed.
Lemma lem4937354 {B : Type'} (P : B -> Prop) (Q : Prop) : (term1154 B P Q) = (term1155 B P Q).
Proof. exact (@lem4937353 B P Q). Qed.
Lemma lem4937355 {B : Type'} (f : B -> B) (s : B -> Prop) : (term2958 B f s) = (term2959 B f s).
Proof. exact (@lem4937354 B (term2954 B f s) ((term2821 B f s) = (@CARD B s))). Qed.
Lemma lem4937356 {B : Type'} (f : B -> B) (x : B) (s : B -> Prop) : (term2960 B f s x) = (term2953 B f x s).
Proof. exact (eq_refl (term2960 B f s x)). Qed.
Lemma lem4937357 {B : Type'} (f : B -> B) (s : B -> Prop) : (term2961 B f s) = (term2954 B f s).
Proof. exact (fun_ext (fun x : B => @lem4937356 B f x s)). Qed.
Lemma lem4937358 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem4937359 {B : Type'} (f : B -> B) (s : B -> Prop) : (term2962 B f s) = (term2955 B f s).
Proof. exact (MK_COMB (@lem4937358 B) (@lem4937357 B f s)). Qed.
Lemma lem4937360 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4937361 {B : Type'} (f : B -> B) (s : B -> Prop) : (term2963 B f s) = (term2956 B f s).
Proof. exact (MK_COMB (@lem4937360) (@lem4937359 B f s)). Qed.
Lemma lem4937362 {B : Type'} (f : B -> B) (s : B -> Prop) : ((term2821 B f s) = (@CARD B s)) = ((term2821 B f s) = (@CARD B s)).
Proof. exact (eq_refl ((term2821 B f s) = (@CARD B s))). Qed.
Lemma lem4937363 {B : Type'} (f : B -> B) (s : B -> Prop) : (term2958 B f s) = (term2957 B f s).
Proof. exact (MK_COMB (@lem4937361 B f s) (@lem4937362 B f s)). Qed.
Lemma lem4937364 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4937365 {B : Type'} (f : B -> B) (s : B -> Prop) : (term2964 B f s) = (term2965 B f s).
Proof. exact (MK_COMB (@lem4937364) (@lem4937363 B f s)). Qed.
Lemma lem4937366 {B : Type'} (f : B -> B) (x : B) (s : B -> Prop) : (term2960 B f s x) = (term2953 B f x s).
Proof. exact (eq_refl (term2960 B f s x)). Qed.
Lemma lem4937367 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4937368 {B : Type'} (f : B -> B) (x : B) (s : B -> Prop) : (term2966 B f s x) = (term2967 B f x s).
Proof. exact (MK_COMB (@lem4937367) (@lem4937366 B f x s)). Qed.
Lemma lem4937369 {B : Type'} (f : B -> B) (s : B -> Prop) : ((term2821 B f s) = (@CARD B s)) = ((term2821 B f s) = (@CARD B s)).
Proof. exact (eq_refl ((term2821 B f s) = (@CARD B s))). Qed.
Lemma lem4937370 {B : Type'} (x : B) (f : B -> B) (s : B -> Prop) : (term2968 B x f s) = (term2969 B x f s).
Proof. exact (MK_COMB (@lem4937368 B f x s) (@lem4937369 B f s)). Qed.
Lemma lem4937371 {B : Type'} (f : B -> B) (s : B -> Prop) : (term2970 B f s) = (term2971 B f s).
Proof. exact (fun_ext (fun x : B => @lem4937370 B x f s)). Qed.
Lemma lem4937372 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem4937373 {B : Type'} (f : B -> B) (s : B -> Prop) : (term2959 B f s) = (term2972 B f s).
Proof. exact (MK_COMB (@lem4937372 B) (@lem4937371 B f s)). Qed.
Lemma lem4937374 {B : Type'} (f : B -> B) (s : B -> Prop) : ((term2958 B f s) = (term2959 B f s)) = ((term2957 B f s) = (term2972 B f s)).
Proof. exact (MK_COMB (@lem4937365 B f s) (@lem4937373 B f s)). Qed.
Lemma lem4937375 {B : Type'} (f : B -> B) (s : B -> Prop) : (term2957 B f s) = (term2972 B f s).
Proof. exact (EQ_MP (@lem4937374 B f s) (@lem4937355 B f s)). Qed.
Lemma lem4937377 {A : Type'} (P : A -> Prop) (Q : Prop) : (term1154 A P Q) = (term1155 A P Q).
Proof. exact (EQ_MP (@lem18905 A P Q) (@lem18904 A P Q)). Qed.
Lemma lem4937378 {B : Type'} (P : B -> Prop) (Q : Prop) : (term1154 B P Q) = (term1155 B P Q).
Proof. exact (@lem4937377 B P Q). Qed.
Lemma lem4937379 {B : Type'} (x : B) (f : B -> B) (s : B -> Prop) : (term2973 B x f s) = (term2974 B x f s).
Proof. exact (@lem4937378 B (term2952 B f x s) ((term2821 B f s) = (@CARD B s))). Qed.
Lemma lem4937380 {B : Type'} (f : B -> B) (x : B) (y : B) (s : B -> Prop) : (term2975 B f x s y) = (term2950 B f x y s).
Proof. exact (eq_refl (term2975 B f x s y)). Qed.
Lemma lem4937381 {B : Type'} (f : B -> B) (x : B) (s : B -> Prop) : (term2976 B f x s) = (term2952 B f x s).
Proof. exact (fun_ext (fun y : B => @lem4937380 B f x y s)). Qed.
Lemma lem4937382 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem4937383 {B : Type'} (f : B -> B) (x : B) (s : B -> Prop) : (term2977 B f x s) = (term2953 B f x s).
Proof. exact (MK_COMB (@lem4937382 B) (@lem4937381 B f x s)). Qed.
Lemma lem4937384 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4937385 {B : Type'} (f : B -> B) (x : B) (s : B -> Prop) : (term2978 B f x s) = (term2967 B f x s).
Proof. exact (MK_COMB (@lem4937384) (@lem4937383 B f x s)). Qed.
Lemma lem4937386 {B : Type'} (f : B -> B) (s : B -> Prop) : ((term2821 B f s) = (@CARD B s)) = ((term2821 B f s) = (@CARD B s)).
Proof. exact (eq_refl ((term2821 B f s) = (@CARD B s))). Qed.
Lemma lem4937387 {B : Type'} (x : B) (f : B -> B) (s : B -> Prop) : (term2973 B x f s) = (term2969 B x f s).
Proof. exact (MK_COMB (@lem4937385 B f x s) (@lem4937386 B f s)). Qed.
Lemma lem4937388 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4937389 {B : Type'} (x : B) (f : B -> B) (s : B -> Prop) : (term2979 B x f s) = (term2980 B x f s).
Proof. exact (MK_COMB (@lem4937388) (@lem4937387 B x f s)). Qed.
Lemma lem4937390 {B : Type'} (f : B -> B) (x : B) (y : B) (s : B -> Prop) : (term2975 B f x s y) = (term2950 B f x y s).
Proof. exact (eq_refl (term2975 B f x s y)). Qed.
Lemma lem4937391 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4937392 {B : Type'} (f : B -> B) (x : B) (y : B) (s : B -> Prop) : (term2981 B f x s y) = (term2982 B f x y s).
Proof. exact (MK_COMB (@lem4937391) (@lem4937390 B f x y s)). Qed.
Lemma lem4937393 {B : Type'} (f : B -> B) (s : B -> Prop) : ((term2821 B f s) = (@CARD B s)) = ((term2821 B f s) = (@CARD B s)).
Proof. exact (eq_refl ((term2821 B f s) = (@CARD B s))). Qed.
Lemma lem4937394 {B : Type'} (x : B) (y : B) (f : B -> B) (s : B -> Prop) : (term2983 B x y f s) = (term2984 B x y f s).
Proof. exact (MK_COMB (@lem4937392 B f x y s) (@lem4937393 B f s)). Qed.
Lemma lem4937395 {B : Type'} (x : B) (f : B -> B) (s : B -> Prop) : (term2985 B x f s) = (term2986 B x f s).
Proof. exact (fun_ext (fun y : B => @lem4937394 B x y f s)). Qed.
Lemma lem4937396 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem4937397 {B : Type'} (x : B) (f : B -> B) (s : B -> Prop) : (term2974 B x f s) = (term2987 B x f s).
Proof. exact (MK_COMB (@lem4937396 B) (@lem4937395 B x f s)). Qed.
Lemma lem4937398 {B : Type'} (x : B) (f : B -> B) (s : B -> Prop) : ((term2973 B x f s) = (term2974 B x f s)) = ((term2969 B x f s) = (term2987 B x f s)).
Proof. exact (MK_COMB (@lem4937389 B x f s) (@lem4937397 B x f s)). Qed.
Lemma lem4937399 {B : Type'} (x : B) (f : B -> B) (s : B -> Prop) : (term2969 B x f s) = (term2987 B x f s).
Proof. exact (EQ_MP (@lem4937398 B x f s) (@lem4937379 B x f s)). Qed.
Lemma lem4937400 {B : Type'} (f : B -> B) (s : B -> Prop) : (term2971 B f s) = (term2988 B f s).
Proof. exact (fun_ext (fun x : B => @lem4937399 B x f s)). Qed.
Lemma lem4937401 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem4937402 {B : Type'} (f : B -> B) (s : B -> Prop) : (term2972 B f s) = (term2989 B f s).
Proof. exact (MK_COMB (@lem4937401 B) (@lem4937400 B f s)). Qed.
Lemma lem4937403 {B : Type'} (f : B -> B) (s : B -> Prop) : (term2957 B f s) = (term2989 B f s).
Proof. exact (TRANS (@lem4937375 B f s) (@lem4937402 B f s)). Qed.
Lemma lem4937404 {B : Type'} (f : B -> B) (s : B -> Prop) : (term2919 B f s) = (term2989 B f s).
Proof. exact (TRANS (@lem4937351 B f s) (@lem4937403 B f s)). Qed.
Lemma lem4937405 {B : Type'} (f : B -> B) : (term2920 B f) = (term2990 B f).
Proof. exact (fun_ext (fun s : B -> Prop => @lem4937404 B f s)). Qed.
Lemma lem4937406 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4937407 {B : Type'} (f : B -> B) : (term2921 B f) = (term2991 B f).
Proof. exact (MK_COMB (@lem4937406 B) (@lem4937405 B f)). Qed.
Lemma lem4937409 {A B : Type'} (P : type1413 A B) : (term814 A B P) = (term815 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem4937410 {B : Type'} (P : type672 B) : (term1172 B P) = (term1173 B P).
Proof. exact (@lem4937409 (B -> Prop) B P). Qed.
Lemma lem4937411 {B : Type'} (f : B -> B) : (term2992 B f) = (term2993 B f).
Proof. exact (@lem4937410 B (term2994 B f)). Qed.
Lemma lem4937412 {B : Type'} (f : B -> B) (s : B -> Prop) : (term2995 B f s) = (term2988 B f s).
Proof. exact (eq_refl (term2995 B f s)). Qed.
Lemma lem4937413 {B : Type'} (x : B) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem4937414 {B : Type'} (f : B -> B) (s : B -> Prop) (x : B) : (term2996 B f s x) = (term2997 B f s x).
Proof. exact (MK_COMB (@lem4937412 B f s) (@lem4937413 B x)). Qed.
Lemma lem4937415 {B : Type'} (x : B) (f : B -> B) (s : B -> Prop) : (term2997 B f s x) = (term2987 B x f s).
Proof. exact (eq_refl (term2997 B f s x)). Qed.
Lemma lem4937416 {B : Type'} (x : B) (f : B -> B) (s : B -> Prop) : (term2996 B f s x) = (term2987 B x f s).
Proof. exact (TRANS (@lem4937414 B f s x) (@lem4937415 B x f s)). Qed.
Lemma lem4937417 {B : Type'} (f : B -> B) (s : B -> Prop) : (term2998 B f s) = (term2988 B f s).
Proof. exact (fun_ext (fun x : B => @lem4937416 B x f s)). Qed.
Lemma lem4937418 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem4937419 {B : Type'} (f : B -> B) (s : B -> Prop) : (term2999 B f s) = (term2989 B f s).
Proof. exact (MK_COMB (@lem4937418 B) (@lem4937417 B f s)). Qed.
Lemma lem4937420 {B : Type'} (f : B -> B) : (term3000 B f) = (term2990 B f).
Proof. exact (fun_ext (fun s : B -> Prop => @lem4937419 B f s)). Qed.
Lemma lem4937421 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4937422 {B : Type'} (f : B -> B) : (term2992 B f) = (term2991 B f).
Proof. exact (MK_COMB (@lem4937421 B) (@lem4937420 B f)). Qed.
Lemma lem4937423 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4937424 {B : Type'} (f : B -> B) : (term3001 B f) = (term3002 B f).
Proof. exact (MK_COMB (@lem4937423) (@lem4937422 B f)). Qed.
Lemma lem4937425 {B : Type'} (f : B -> B) (s : B -> Prop) : (term2995 B f s) = (term2988 B f s).
Proof. exact (eq_refl (term2995 B f s)). Qed.
Lemma lem4937426 {B : Type'} (x : type684 B) (s : B -> Prop) : (x s) = (x s).
Proof. exact (eq_refl (x s)). Qed.
Lemma lem4937427 {B : Type'} (f : B -> B) (x : type684 B) (s : B -> Prop) : (term3003 B f x s) = (term3004 B f x s).
Proof. exact (MK_COMB (@lem4937425 B f s) (@lem4937426 B x s)). Qed.
Lemma lem4937428 {B : Type'} (x : type684 B) (f : B -> B) (s : B -> Prop) : (term3004 B f x s) = (term3005 B x f s).
Proof. exact (eq_refl (term3004 B f x s)). Qed.
Lemma lem4937429 {B : Type'} (x : type684 B) (f : B -> B) (s : B -> Prop) : (term3003 B f x s) = (term3005 B x f s).
Proof. exact (TRANS (@lem4937427 B f x s) (@lem4937428 B x f s)). Qed.
Lemma lem4937430 {B : Type'} (x : type684 B) (f : B -> B) : (term3006 B f x) = (term3007 B x f).
Proof. exact (fun_ext (fun s : B -> Prop => @lem4937429 B x f s)). Qed.
Lemma lem4937431 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4937432 {B : Type'} (x : type684 B) (f : B -> B) : (term3008 B f x) = (term3009 B x f).
Proof. exact (MK_COMB (@lem4937431 B) (@lem4937430 B x f)). Qed.
Lemma lem4937433 {B : Type'} (f : B -> B) : (term3010 B f) = (term3011 B f).
Proof. exact (fun_ext (fun x : type684 B => @lem4937432 B x f)). Qed.
Lemma lem4937434 {B : Type'} : (@ex ((B -> Prop) -> B)) = (@ex ((B -> Prop) -> B)).
Proof. exact (eq_refl (@ex ((B -> Prop) -> B))). Qed.
Lemma lem4937435 {B : Type'} (f : B -> B) : (term2993 B f) = (term3012 B f).
Proof. exact (MK_COMB (@lem4937434 B) (@lem4937433 B f)). Qed.
Lemma lem4937436 {B : Type'} (f : B -> B) : ((term2992 B f) = (term2993 B f)) = ((term2991 B f) = (term3012 B f)).
Proof. exact (MK_COMB (@lem4937424 B f) (@lem4937435 B f)). Qed.
Lemma lem4937437 {B : Type'} (f : B -> B) : (term2991 B f) = (term3012 B f).
Proof. exact (EQ_MP (@lem4937436 B f) (@lem4937411 B f)). Qed.
Lemma lem4937439 {A B : Type'} (P : type1413 A B) : (term814 A B P) = (term815 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem4937440 {B : Type'} (P : type672 B) : (term1172 B P) = (term1173 B P).
Proof. exact (@lem4937439 (B -> Prop) B P). Qed.
Lemma lem4937441 {B : Type'} (x : type684 B) (f : B -> B) : (term3013 B x f) = (term3014 B x f).
Proof. exact (@lem4937440 B (term3015 B x f)). Qed.
Lemma lem4937442 {B : Type'} (x : type684 B) (f : B -> B) (s : B -> Prop) : (term3016 B x f s) = (term3017 B x f s).
Proof. exact (eq_refl (term3016 B x f s)). Qed.
Lemma lem4937443 {B : Type'} (y : B) : y = y.
Proof. exact (eq_refl y). Qed.
Lemma lem4937444 {B : Type'} (x : type684 B) (f : B -> B) (s : B -> Prop) (y : B) : (term3018 B x f s y) = (term3019 B x f s y).
Proof. exact (MK_COMB (@lem4937442 B x f s) (@lem4937443 B y)). Qed.
Lemma lem4937445 {B : Type'} (x : type684 B) (y : B) (f : B -> B) (s : B -> Prop) : (term3019 B x f s y) = (term3020 B x y f s).
Proof. exact (eq_refl (term3019 B x f s y)). Qed.
Lemma lem4937446 {B : Type'} (x : type684 B) (y : B) (f : B -> B) (s : B -> Prop) : (term3018 B x f s y) = (term3020 B x y f s).
Proof. exact (TRANS (@lem4937444 B x f s y) (@lem4937445 B x y f s)). Qed.
Lemma lem4937447 {B : Type'} (x : type684 B) (f : B -> B) (s : B -> Prop) : (term3021 B x f s) = (term3017 B x f s).
Proof. exact (fun_ext (fun y : B => @lem4937446 B x y f s)). Qed.
Lemma lem4937448 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem4937449 {B : Type'} (x : type684 B) (f : B -> B) (s : B -> Prop) : (term3022 B x f s) = (term3005 B x f s).
Proof. exact (MK_COMB (@lem4937448 B) (@lem4937447 B x f s)). Qed.
Lemma lem4937450 {B : Type'} (x : type684 B) (f : B -> B) : (term3023 B x f) = (term3007 B x f).
Proof. exact (fun_ext (fun s : B -> Prop => @lem4937449 B x f s)). Qed.
Lemma lem4937451 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4937452 {B : Type'} (x : type684 B) (f : B -> B) : (term3013 B x f) = (term3009 B x f).
Proof. exact (MK_COMB (@lem4937451 B) (@lem4937450 B x f)). Qed.
Lemma lem4937453 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4937454 {B : Type'} (x : type684 B) (f : B -> B) : (term3024 B x f) = (term3025 B x f).
Proof. exact (MK_COMB (@lem4937453) (@lem4937452 B x f)). Qed.
Lemma lem4937455 {B : Type'} (x : type684 B) (f : B -> B) (s : B -> Prop) : (term3016 B x f s) = (term3017 B x f s).
Proof. exact (eq_refl (term3016 B x f s)). Qed.
Lemma lem4937456 {B : Type'} (y : type684 B) (s : B -> Prop) : (y s) = (y s).
Proof. exact (eq_refl (y s)). Qed.
Lemma lem4937457 {B : Type'} (x : type684 B) (f : B -> B) (y : type684 B) (s : B -> Prop) : (term3026 B x f y s) = (term3027 B x f y s).
Proof. exact (MK_COMB (@lem4937455 B x f s) (@lem4937456 B y s)). Qed.
Lemma lem4937458 {B : Type'} (x : type684 B) (y : type684 B) (f : B -> B) (s : B -> Prop) : (term3027 B x f y s) = (term3028 B x y f s).
Proof. exact (eq_refl (term3027 B x f y s)). Qed.
Lemma lem4937459 {B : Type'} (x : type684 B) (y : type684 B) (f : B -> B) (s : B -> Prop) : (term3026 B x f y s) = (term3028 B x y f s).
Proof. exact (TRANS (@lem4937457 B x f y s) (@lem4937458 B x y f s)). Qed.
Lemma lem4937460 {B : Type'} (x : type684 B) (y : type684 B) (f : B -> B) : (term3029 B x f y) = (term3030 B x y f).
Proof. exact (fun_ext (fun s : B -> Prop => @lem4937459 B x y f s)). Qed.
Lemma lem4937461 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4937462 {B : Type'} (x : type684 B) (y : type684 B) (f : B -> B) : (term3031 B x f y) = (term3032 B x y f).
Proof. exact (MK_COMB (@lem4937461 B) (@lem4937460 B x y f)). Qed.
Lemma lem4937463 {B : Type'} (x : type684 B) (f : B -> B) : (term3033 B x f) = (term3034 B x f).
Proof. exact (fun_ext (fun y : type684 B => @lem4937462 B x y f)). Qed.
Lemma lem4937464 {B : Type'} : (@ex ((B -> Prop) -> B)) = (@ex ((B -> Prop) -> B)).
Proof. exact (eq_refl (@ex ((B -> Prop) -> B))). Qed.
Lemma lem4937465 {B : Type'} (x : type684 B) (f : B -> B) : (term3014 B x f) = (term3035 B x f).
Proof. exact (MK_COMB (@lem4937464 B) (@lem4937463 B x f)). Qed.
Lemma lem4937466 {B : Type'} (x : type684 B) (f : B -> B) : ((term3013 B x f) = (term3014 B x f)) = ((term3009 B x f) = (term3035 B x f)).
Proof. exact (MK_COMB (@lem4937454 B x f) (@lem4937465 B x f)). Qed.
Lemma lem4937467 {B : Type'} (x : type684 B) (f : B -> B) : (term3009 B x f) = (term3035 B x f).
Proof. exact (EQ_MP (@lem4937466 B x f) (@lem4937441 B x f)). Qed.
Lemma lem4937468 {B : Type'} (f : B -> B) : (term3011 B f) = (term3036 B f).
Proof. exact (fun_ext (fun x : type684 B => @lem4937467 B x f)). Qed.
Lemma lem4937469 {B : Type'} : (@ex ((B -> Prop) -> B)) = (@ex ((B -> Prop) -> B)).
Proof. exact (eq_refl (@ex ((B -> Prop) -> B))). Qed.
Lemma lem4937470 {B : Type'} (f : B -> B) : (term3012 B f) = (term3037 B f).
Proof. exact (MK_COMB (@lem4937469 B) (@lem4937468 B f)). Qed.
Lemma lem4937471 {B : Type'} (f : B -> B) : (term2991 B f) = (term3037 B f).
Proof. exact (TRANS (@lem4937437 B f) (@lem4937470 B f)). Qed.
Lemma lem4937472 {B : Type'} (f : B -> B) : (term2921 B f) = (term3037 B f).
Proof. exact (TRANS (@lem4937407 B f) (@lem4937471 B f)). Qed.
Lemma lem4937473 {B : Type'} : (term2922 B) = (term3038 B).
Proof. exact (fun_ext (fun f : B -> B => @lem4937472 B f)). Qed.
Lemma lem4937474 {B : Type'} : (@all (B -> B)) = (@all (B -> B)).
Proof. exact (eq_refl (@all (B -> B))). Qed.
Lemma lem4937475 {B : Type'} : (term2923 B) = (term3039 B).
Proof. exact (MK_COMB (@lem4937474 B) (@lem4937473 B)). Qed.
Lemma lem4937477 {A B : Type'} (P : type1413 A B) : (term814 A B P) = (term815 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem4937478 {B : Type'} (P : type481 B) : (term3040 B P) = (term3041 B P).
Proof. exact (@lem4937477 (B -> B) (type684 B) P). Qed.
Lemma lem4937479 {B : Type'} : (term3042 B) = (term3043 B).
Proof. exact (@lem4937478 B (term3044 B)). Qed.
Lemma lem4937480 {B : Type'} (f : B -> B) : (term3045 B f) = (term3036 B f).
Proof. exact (eq_refl (term3045 B f)). Qed.
Lemma lem4937481 {B : Type'} (x : type684 B) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem4937482 {B : Type'} (f : B -> B) (x : type684 B) : (term3046 B f x) = (term3047 B f x).
Proof. exact (MK_COMB (@lem4937480 B f) (@lem4937481 B x)). Qed.
Lemma lem4937483 {B : Type'} (x : type684 B) (f : B -> B) : (term3047 B f x) = (term3035 B x f).
Proof. exact (eq_refl (term3047 B f x)). Qed.
Lemma lem4937484 {B : Type'} (x : type684 B) (f : B -> B) : (term3046 B f x) = (term3035 B x f).
Proof. exact (TRANS (@lem4937482 B f x) (@lem4937483 B x f)). Qed.
Lemma lem4937485 {B : Type'} (f : B -> B) : (term3048 B f) = (term3036 B f).
Proof. exact (fun_ext (fun x : type684 B => @lem4937484 B x f)). Qed.
Lemma lem4937486 {B : Type'} : (@ex ((B -> Prop) -> B)) = (@ex ((B -> Prop) -> B)).
Proof. exact (eq_refl (@ex ((B -> Prop) -> B))). Qed.
Lemma lem4937487 {B : Type'} (f : B -> B) : (term3049 B f) = (term3037 B f).
Proof. exact (MK_COMB (@lem4937486 B) (@lem4937485 B f)). Qed.
Lemma lem4937488 {B : Type'} : (term3050 B) = (term3038 B).
Proof. exact (fun_ext (fun f : B -> B => @lem4937487 B f)). Qed.
Lemma lem4937489 {B : Type'} : (@all (B -> B)) = (@all (B -> B)).
Proof. exact (eq_refl (@all (B -> B))). Qed.
Lemma lem4937490 {B : Type'} : (term3042 B) = (term3039 B).
Proof. exact (MK_COMB (@lem4937489 B) (@lem4937488 B)). Qed.
Lemma lem4937491 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4937492 {B : Type'} : (term3051 B) = (term3052 B).
Proof. exact (MK_COMB (@lem4937491) (@lem4937490 B)). Qed.
Lemma lem4937493 {B : Type'} (f : B -> B) : (term3045 B f) = (term3036 B f).
Proof. exact (eq_refl (term3045 B f)). Qed.
Lemma lem4937494 {B : Type'} (x : type485 B) (f : B -> B) : (x f) = (x f).
Proof. exact (eq_refl (x f)). Qed.
Lemma lem4937495 {B : Type'} (x : type485 B) (f : B -> B) : (term3053 B x f) = (term3054 B x f).
Proof. exact (MK_COMB (@lem4937493 B f) (@lem4937494 B x f)). Qed.
Lemma lem4937496 {B : Type'} (x : type485 B) (f : B -> B) : (term3054 B x f) = (term3055 B x f).
Proof. exact (eq_refl (term3054 B x f)). Qed.
Lemma lem4937497 {B : Type'} (x : type485 B) (f : B -> B) : (term3053 B x f) = (term3055 B x f).
Proof. exact (TRANS (@lem4937495 B x f) (@lem4937496 B x f)). Qed.
Lemma lem4937498 {B : Type'} (x : type485 B) : (term3056 B x) = (term3057 B x).
Proof. exact (fun_ext (fun f : B -> B => @lem4937497 B x f)). Qed.
Lemma lem4937499 {B : Type'} : (@all (B -> B)) = (@all (B -> B)).
Proof. exact (eq_refl (@all (B -> B))). Qed.
Lemma lem4937500 {B : Type'} (x : type485 B) : (term3058 B x) = (term3059 B x).
Proof. exact (MK_COMB (@lem4937499 B) (@lem4937498 B x)). Qed.
Lemma lem4937501 {B : Type'} : (term3060 B) = (term3061 B).
Proof. exact (fun_ext (fun x : type485 B => @lem4937500 B x)). Qed.
Lemma lem4937502 {B : Type'} : (@ex ((B -> B) -> (B -> Prop) -> B)) = (@ex ((B -> B) -> (B -> Prop) -> B)).
Proof. exact (eq_refl (@ex ((B -> B) -> (B -> Prop) -> B))). Qed.
Lemma lem4937503 {B : Type'} : (term3043 B) = (term3062 B).
Proof. exact (MK_COMB (@lem4937502 B) (@lem4937501 B)). Qed.
Lemma lem4937504 {B : Type'} : ((term3042 B) = (term3043 B)) = ((term3039 B) = (term3062 B)).
Proof. exact (MK_COMB (@lem4937492 B) (@lem4937503 B)). Qed.
Lemma lem4937505 {B : Type'} : (term3039 B) = (term3062 B).
Proof. exact (EQ_MP (@lem4937504 B) (@lem4937479 B)). Qed.
Lemma lem4937507 {A B : Type'} (P : type1413 A B) : (term814 A B P) = (term815 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem4937508 {B : Type'} (P : type481 B) : (term3040 B P) = (term3041 B P).
Proof. exact (@lem4937507 (B -> B) (type684 B) P). Qed.
Lemma lem4937509 {B : Type'} (x : type485 B) : (term3063 B x) = (term3064 B x).
Proof. exact (@lem4937508 B (term3065 B x)). Qed.
Lemma lem4937510 {B : Type'} (x : type485 B) (f : B -> B) : (term3066 B x f) = (term3067 B x f).
Proof. exact (eq_refl (term3066 B x f)). Qed.
Lemma lem4937511 {B : Type'} (y : type684 B) : y = y.
Proof. exact (eq_refl y). Qed.
Lemma lem4937512 {B : Type'} (x : type485 B) (f : B -> B) (y : type684 B) : (term3068 B x f y) = (term3069 B x f y).
Proof. exact (MK_COMB (@lem4937510 B x f) (@lem4937511 B y)). Qed.
Lemma lem4937513 {B : Type'} (x : type485 B) (y : type684 B) (f : B -> B) : (term3069 B x f y) = (term3070 B x y f).
Proof. exact (eq_refl (term3069 B x f y)). Qed.
Lemma lem4937514 {B : Type'} (x : type485 B) (y : type684 B) (f : B -> B) : (term3068 B x f y) = (term3070 B x y f).
Proof. exact (TRANS (@lem4937512 B x f y) (@lem4937513 B x y f)). Qed.
Lemma lem4937515 {B : Type'} (x : type485 B) (f : B -> B) : (term3071 B x f) = (term3067 B x f).
Proof. exact (fun_ext (fun y : type684 B => @lem4937514 B x y f)). Qed.
Lemma lem4937516 {B : Type'} : (@ex ((B -> Prop) -> B)) = (@ex ((B -> Prop) -> B)).
Proof. exact (eq_refl (@ex ((B -> Prop) -> B))). Qed.
Lemma lem4937517 {B : Type'} (x : type485 B) (f : B -> B) : (term3072 B x f) = (term3055 B x f).
Proof. exact (MK_COMB (@lem4937516 B) (@lem4937515 B x f)). Qed.
Lemma lem4937518 {B : Type'} (x : type485 B) : (term3073 B x) = (term3057 B x).
Proof. exact (fun_ext (fun f : B -> B => @lem4937517 B x f)). Qed.
Lemma lem4937519 {B : Type'} : (@all (B -> B)) = (@all (B -> B)).
Proof. exact (eq_refl (@all (B -> B))). Qed.
Lemma lem4937520 {B : Type'} (x : type485 B) : (term3063 B x) = (term3059 B x).
Proof. exact (MK_COMB (@lem4937519 B) (@lem4937518 B x)). Qed.
Lemma lem4937521 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4937522 {B : Type'} (x : type485 B) : (term3074 B x) = (term3075 B x).
Proof. exact (MK_COMB (@lem4937521) (@lem4937520 B x)). Qed.
Lemma lem4937523 {B : Type'} (x : type485 B) (f : B -> B) : (term3066 B x f) = (term3067 B x f).
Proof. exact (eq_refl (term3066 B x f)). Qed.
Lemma lem4937524 {B : Type'} (y : type485 B) (f : B -> B) : (y f) = (y f).
Proof. exact (eq_refl (y f)). Qed.
Lemma lem4937525 {B : Type'} (x : type485 B) (y : type485 B) (f : B -> B) : (term3076 B x y f) = (term3077 B x y f).
Proof. exact (MK_COMB (@lem4937523 B x f) (@lem4937524 B y f)). Qed.
Lemma lem4937526 {B : Type'} (x : type485 B) (y : type485 B) (f : B -> B) : (term3077 B x y f) = (term3078 B x y f).
Proof. exact (eq_refl (term3077 B x y f)). Qed.
Lemma lem4937527 {B : Type'} (x : type485 B) (y : type485 B) (f : B -> B) : (term3076 B x y f) = (term3078 B x y f).
Proof. exact (TRANS (@lem4937525 B x y f) (@lem4937526 B x y f)). Qed.
Lemma lem4937528 {B : Type'} (x : type485 B) (y : type485 B) : (term3079 B x y) = (term3080 B x y).
Proof. exact (fun_ext (fun f : B -> B => @lem4937527 B x y f)). Qed.
Lemma lem4937529 {B : Type'} : (@all (B -> B)) = (@all (B -> B)).
Proof. exact (eq_refl (@all (B -> B))). Qed.
Lemma lem4937530 {B : Type'} (x : type485 B) (y : type485 B) : (term3081 B x y) = (term3082 B x y).
Proof. exact (MK_COMB (@lem4937529 B) (@lem4937528 B x y)). Qed.
Lemma lem4937531 {B : Type'} (x : type485 B) : (term3083 B x) = (term3084 B x).
Proof. exact (fun_ext (fun y : type485 B => @lem4937530 B x y)). Qed.
Lemma lem4937532 {B : Type'} : (@ex ((B -> B) -> (B -> Prop) -> B)) = (@ex ((B -> B) -> (B -> Prop) -> B)).
Proof. exact (eq_refl (@ex ((B -> B) -> (B -> Prop) -> B))). Qed.
Lemma lem4937533 {B : Type'} (x : type485 B) : (term3064 B x) = (term3085 B x).
Proof. exact (MK_COMB (@lem4937532 B) (@lem4937531 B x)). Qed.
Lemma lem4937534 {B : Type'} (x : type485 B) : ((term3063 B x) = (term3064 B x)) = ((term3059 B x) = (term3085 B x)).
Proof. exact (MK_COMB (@lem4937522 B x) (@lem4937533 B x)). Qed.
Lemma lem4937535 {B : Type'} (x : type485 B) : (term3059 B x) = (term3085 B x).
Proof. exact (EQ_MP (@lem4937534 B x) (@lem4937509 B x)). Qed.
Lemma lem4937536 {B : Type'} : (term3061 B) = (term3086 B).
Proof. exact (fun_ext (fun x : type485 B => @lem4937535 B x)). Qed.
Lemma lem4937537 {B : Type'} : (@ex ((B -> B) -> (B -> Prop) -> B)) = (@ex ((B -> B) -> (B -> Prop) -> B)).
Proof. exact (eq_refl (@ex ((B -> B) -> (B -> Prop) -> B))). Qed.
Lemma lem4937538 {B : Type'} : (term3062 B) = (term3087 B).
Proof. exact (MK_COMB (@lem4937537 B) (@lem4937536 B)). Qed.
Lemma lem4937539 {B : Type'} : (term3039 B) = (term3087 B).
Proof. exact (TRANS (@lem4937505 B) (@lem4937538 B)). Qed.
Lemma lem4937541 {B : Type'} : (term2923 B) = (term3087 B).
Proof. exact (TRANS (@lem4937475 B) (@lem4937539 B)). Qed.
Lemma lem4937542 {B : Type'} : (term2706 B) = (term3087 B).
Proof. exact (TRANS (@lem4937190 B) (@lem4937541 B)). Qed.
Lemma lem4937543 {B : Type'} (h1 : term2706 B) : term3087 B.
Proof. exact (EQ_MP (@lem4937542 B) (@lem4934984 B h1)). Qed.
Lemma lem4937558 {A B : Type'} (s : type686 A) (f : type685 A B) (x : A -> Prop) (y : A -> Prop) : (term3863 A B s f x y) = (term3864 A B s f x y).
Proof. exact (@lem17362 (term3865 A B s x f y) (x = y)). Qed.
Lemma lem4937559 {A : Type'} (P : type686 A) : (term3866 A P) = (term3867 A P).
Proof. exact (@lem18392 (A -> Prop) P). Qed.
Lemma lem4937560 {A B : Type'} (s : type686 A) (f : type685 A B) (x : A -> Prop) : (term3868 A B s f x) = (term3869 A B s f x).
Proof. exact (@lem4937559 A (term2810 A B s f x)). Qed.
Lemma lem4937561 {A B : Type'} (s : type686 A) (f : type685 A B) (x : A -> Prop) (y : A -> Prop) : (term3870 A B s f x y) = (term2809 A B s f x y).
Proof. exact (eq_refl (term3870 A B s f x y)). Qed.
Lemma lem4937562 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem4937563 {A B : Type'} (s : type686 A) (f : type685 A B) (x : A -> Prop) (y : A -> Prop) : (term3871 A B s f x y) = (term3863 A B s f x y).
Proof. exact (MK_COMB (@lem4937562) (@lem4937561 A B s f x y)). Qed.
Lemma lem4937564 {A B : Type'} (s : type686 A) (f : type685 A B) (x : A -> Prop) (y : A -> Prop) : (term3871 A B s f x y) = (term3864 A B s f x y).
Proof. exact (TRANS (@lem4937563 A B s f x y) (@lem4937558 A B s f x y)). Qed.
Lemma lem4937565 {A B : Type'} (s : type686 A) (f : type685 A B) (x : A -> Prop) : (term3872 A B s f x) = (term3873 A B s f x).
Proof. exact (fun_ext (fun y : A -> Prop => @lem4937564 A B s f x y)). Qed.
Lemma lem4937566 {A : Type'} : (@ex (A -> Prop)) = (@ex (A -> Prop)).
Proof. exact (eq_refl (@ex (A -> Prop))). Qed.
Lemma lem4937567 {A B : Type'} (s : type686 A) (f : type685 A B) (x : A -> Prop) : (term3869 A B s f x) = (term3874 A B s f x).
Proof. exact (MK_COMB (@lem4937566 A) (@lem4937565 A B s f x)). Qed.
Lemma lem4937568 {A B : Type'} (s : type686 A) (f : type685 A B) (x : A -> Prop) : (term3868 A B s f x) = (term3874 A B s f x).
Proof. exact (TRANS (@lem4937560 A B s f x) (@lem4937567 A B s f x)). Qed.
Lemma lem4937569 {A : Type'} (P : type686 A) : (term3866 A P) = (term3867 A P).
Proof. exact (@lem18392 (A -> Prop) P). Qed.
Lemma lem4937570 {A B : Type'} (s : type686 A) (f : type685 A B) : (term3875 A B s f) = (term3876 A B s f).
Proof. exact (@lem4937569 A (term2812 A B s f)). Qed.
Lemma lem4937571 {A B : Type'} (s : type686 A) (f : type685 A B) (x : A -> Prop) : (term3877 A B s f x) = (term2811 A B s f x).
Proof. exact (eq_refl (term3877 A B s f x)). Qed.
Lemma lem4937572 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem4937573 {A B : Type'} (s : type686 A) (f : type685 A B) (x : A -> Prop) : (term3878 A B s f x) = (term3868 A B s f x).
Proof. exact (MK_COMB (@lem4937572) (@lem4937571 A B s f x)). Qed.
Lemma lem4937574 {A B : Type'} (s : type686 A) (f : type685 A B) (x : A -> Prop) : (term3878 A B s f x) = (term3874 A B s f x).
Proof. exact (TRANS (@lem4937573 A B s f x) (@lem4937568 A B s f x)). Qed.
Lemma lem4937575 {A B : Type'} (s : type686 A) (f : type685 A B) : (term3879 A B s f) = (term3880 A B s f).
Proof. exact (fun_ext (fun x : A -> Prop => @lem4937574 A B s f x)). Qed.
Lemma lem4937576 {A : Type'} : (@ex (A -> Prop)) = (@ex (A -> Prop)).
Proof. exact (eq_refl (@ex (A -> Prop))). Qed.
Lemma lem4937577 {A B : Type'} (s : type686 A) (f : type685 A B) : (term3876 A B s f) = (term3881 A B s f).
Proof. exact (MK_COMB (@lem4937576 A) (@lem4937575 A B s f)). Qed.
Lemma lem4937578 {A B : Type'} (s : type686 A) (f : type685 A B) : (term3875 A B s f) = (term3881 A B s f).
Proof. exact (TRANS (@lem4937570 A B s f) (@lem4937577 A B s f)). Qed.
Lemma lem4937579 {A : Type'} (s : type686 A) : (term3882 A s) = (term3882 A s).
Proof. exact (eq_refl (term3882 A s)). Qed.
Lemma lem4937580 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4937581 {A B : Type'} (s : type686 A) (f : type685 A B) : (term3883 A B s f) = (term3884 A B s f).
Proof. exact (MK_COMB (@lem4937580) (@lem4937578 A B s f)). Qed.
Lemma lem4937582 {A B : Type'} (f : type685 A B) (s : type686 A) : (term3885 A B f s) = (term3886 A B f s).
Proof. exact (MK_COMB (@lem4937581 A B s f) (@lem4937579 A s)). Qed.
Lemma lem4937583 {A B : Type'} (f : type685 A B) (s : type686 A) : (term3887 A B f s) = (term3885 A B f s).
Proof. exact (@lem17045 (term2813 A B s f) (@FINITE (A -> Prop) s)). Qed.
Lemma lem4937584 {A B : Type'} (f : type685 A B) (s : type686 A) : (term3887 A B f s) = (term3886 A B f s).
Proof. exact (TRANS (@lem4937583 A B f s) (@lem4937582 A B f s)). Qed.
Lemma lem4937585 {A B : Type'} (f : type685 A B) (s : type686 A) : ((term2808 A B f s) = (@CARD (A -> Prop) s)) = ((term2808 A B f s) = (@CARD (A -> Prop) s)).
Proof. exact (eq_refl ((term2808 A B f s) = (@CARD (A -> Prop) s))). Qed.
Lemma lem4937586 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4937587 {A B : Type'} (f : type685 A B) (s : type686 A) : (term3888 A B f s) = (term3889 A B f s).
Proof. exact (MK_COMB (@lem4937586) (@lem4937584 A B f s)). Qed.
Lemma lem4937588 {A B : Type'} (f : type685 A B) (s : type686 A) : (term3890 A B f s) = (term3891 A B f s).
Proof. exact (MK_COMB (@lem4937587 A B f s) (@lem4937585 A B f s)). Qed.
Lemma lem4937589 {A B : Type'} (f : type685 A B) (s : type686 A) : (term2817 A B f s) = (term3890 A B f s).
Proof. exact (@lem17265 (term2815 A B f s) ((term2808 A B f s) = (@CARD (A -> Prop) s))). Qed.
Lemma lem4937590 {A B : Type'} (f : type685 A B) (s : type686 A) : (term2817 A B f s) = (term3891 A B f s).
Proof. exact (TRANS (@lem4937589 A B f s) (@lem4937588 A B f s)). Qed.
Lemma lem4937591 {A B : Type'} (f : type685 A B) : (term2818 A B f) = (term3892 A B f).
Proof. exact (fun_ext (fun s : type686 A => @lem4937590 A B f s)). Qed.
Lemma lem4937592 {A : Type'} : (@all ((A -> Prop) -> Prop)) = (@all ((A -> Prop) -> Prop)).
Proof. exact (eq_refl (@all ((A -> Prop) -> Prop))). Qed.
Lemma lem4937593 {A B : Type'} (f : type685 A B) : (term2819 A B f) = (term3893 A B f).
Proof. exact (MK_COMB (@lem4937592 A) (@lem4937591 A B f)). Qed.
Lemma lem4937594 {A B : Type'} : (term2820 A B) = (term3894 A B).
Proof. exact (fun_ext (fun f : type685 A B => @lem4937593 A B f)). Qed.
Lemma lem4937595 {A B : Type'} : (@all ((A -> Prop) -> B)) = (@all ((A -> Prop) -> B)).
Proof. exact (eq_refl (@all ((A -> Prop) -> B))). Qed.
Lemma lem4937596 {A B : Type'} : (term2712 A B) = (term3895 A B).
Proof. exact (MK_COMB (@lem4937595 A B) (@lem4937594 A B)). Qed.
Lemma lem4937703 {A : Type'} (P : A -> Prop) (Q : Prop) : (term1154 A P Q) = (term1155 A P Q).
Proof. exact (EQ_MP (@lem18905 A P Q) (@lem18904 A P Q)). Qed.
Lemma lem4937704 {A : Type'} (P : type686 A) (Q : Prop) : (term3896 A P Q) = (term3897 A P Q).
Proof. exact (@lem4937703 (A -> Prop) P Q). Qed.
Lemma lem4937705 {A B : Type'} (f : type685 A B) (s : type686 A) : (term3898 A B f s) = (term3899 A B f s).
Proof. exact (@lem4937704 A (term3880 A B s f) (term3882 A s)). Qed.
Lemma lem4937706 {A B : Type'} (s : type686 A) (f : type685 A B) (x : A -> Prop) : (term3900 A B s f x) = (term3874 A B s f x).
Proof. exact (eq_refl (term3900 A B s f x)). Qed.
Lemma lem4937707 {A B : Type'} (s : type686 A) (f : type685 A B) : (term3901 A B s f) = (term3880 A B s f).
Proof. exact (fun_ext (fun x : A -> Prop => @lem4937706 A B s f x)). Qed.
Lemma lem4937708 {A : Type'} : (@ex (A -> Prop)) = (@ex (A -> Prop)).
Proof. exact (eq_refl (@ex (A -> Prop))). Qed.
Lemma lem4937709 {A B : Type'} (s : type686 A) (f : type685 A B) : (term3902 A B s f) = (term3881 A B s f).
Proof. exact (MK_COMB (@lem4937708 A) (@lem4937707 A B s f)). Qed.
Lemma lem4937710 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4937711 {A B : Type'} (s : type686 A) (f : type685 A B) : (term3903 A B s f) = (term3884 A B s f).
Proof. exact (MK_COMB (@lem4937710) (@lem4937709 A B s f)). Qed.
Lemma lem4937712 {A : Type'} (s : type686 A) : (term3882 A s) = (term3882 A s).
Proof. exact (eq_refl (term3882 A s)). Qed.
Lemma lem4937713 {A B : Type'} (f : type685 A B) (s : type686 A) : (term3898 A B f s) = (term3886 A B f s).
Proof. exact (MK_COMB (@lem4937711 A B s f) (@lem4937712 A s)). Qed.
Lemma lem4937714 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4937715 {A B : Type'} (f : type685 A B) (s : type686 A) : (term3904 A B f s) = (term3905 A B f s).
Proof. exact (MK_COMB (@lem4937714) (@lem4937713 A B f s)). Qed.
Lemma lem4937716 {A B : Type'} (s : type686 A) (f : type685 A B) (x : A -> Prop) : (term3900 A B s f x) = (term3874 A B s f x).
Proof. exact (eq_refl (term3900 A B s f x)). Qed.
Lemma lem4937717 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4937718 {A B : Type'} (s : type686 A) (f : type685 A B) (x : A -> Prop) : (term3906 A B s f x) = (term3907 A B s f x).
Proof. exact (MK_COMB (@lem4937717) (@lem4937716 A B s f x)). Qed.
Lemma lem4937719 {A : Type'} (s : type686 A) : (term3882 A s) = (term3882 A s).
Proof. exact (eq_refl (term3882 A s)). Qed.
Lemma lem4937720 {A B : Type'} (f : type685 A B) (x : A -> Prop) (s : type686 A) : (term3908 A B f x s) = (term3909 A B f x s).
Proof. exact (MK_COMB (@lem4937718 A B s f x) (@lem4937719 A s)). Qed.
Lemma lem4937721 {A B : Type'} (f : type685 A B) (s : type686 A) : (term3910 A B f s) = (term3911 A B f s).
Proof. exact (fun_ext (fun x : A -> Prop => @lem4937720 A B f x s)). Qed.
Lemma lem4937722 {A : Type'} : (@ex (A -> Prop)) = (@ex (A -> Prop)).
Proof. exact (eq_refl (@ex (A -> Prop))). Qed.
Lemma lem4937723 {A B : Type'} (f : type685 A B) (s : type686 A) : (term3899 A B f s) = (term3912 A B f s).
Proof. exact (MK_COMB (@lem4937722 A) (@lem4937721 A B f s)). Qed.
Lemma lem4937724 {A B : Type'} (f : type685 A B) (s : type686 A) : ((term3898 A B f s) = (term3899 A B f s)) = ((term3886 A B f s) = (term3912 A B f s)).
Proof. exact (MK_COMB (@lem4937715 A B f s) (@lem4937723 A B f s)). Qed.
Lemma lem4937725 {A B : Type'} (f : type685 A B) (s : type686 A) : (term3886 A B f s) = (term3912 A B f s).
Proof. exact (EQ_MP (@lem4937724 A B f s) (@lem4937705 A B f s)). Qed.
Lemma lem4937727 {A : Type'} (P : A -> Prop) (Q : Prop) : (term1154 A P Q) = (term1155 A P Q).
Proof. exact (EQ_MP (@lem18905 A P Q) (@lem18904 A P Q)). Qed.
Lemma lem4937728 {A : Type'} (P : type686 A) (Q : Prop) : (term3896 A P Q) = (term3897 A P Q).
Proof. exact (@lem4937727 (A -> Prop) P Q). Qed.
Lemma lem4937729 {A B : Type'} (f : type685 A B) (x : A -> Prop) (s : type686 A) : (term3913 A B f x s) = (term3914 A B f x s).
Proof. exact (@lem4937728 A (term3873 A B s f x) (term3882 A s)). Qed.
Lemma lem4937730 {A B : Type'} (s : type686 A) (f : type685 A B) (x : A -> Prop) (y : A -> Prop) : (term3915 A B s f x y) = (term3864 A B s f x y).
Proof. exact (eq_refl (term3915 A B s f x y)). Qed.
Lemma lem4937731 {A B : Type'} (s : type686 A) (f : type685 A B) (x : A -> Prop) : (term3916 A B s f x) = (term3873 A B s f x).
Proof. exact (fun_ext (fun y : A -> Prop => @lem4937730 A B s f x y)). Qed.
Lemma lem4937732 {A : Type'} : (@ex (A -> Prop)) = (@ex (A -> Prop)).
Proof. exact (eq_refl (@ex (A -> Prop))). Qed.
Lemma lem4937733 {A B : Type'} (s : type686 A) (f : type685 A B) (x : A -> Prop) : (term3917 A B s f x) = (term3874 A B s f x).
Proof. exact (MK_COMB (@lem4937732 A) (@lem4937731 A B s f x)). Qed.
Lemma lem4937734 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4937735 {A B : Type'} (s : type686 A) (f : type685 A B) (x : A -> Prop) : (term3918 A B s f x) = (term3907 A B s f x).
Proof. exact (MK_COMB (@lem4937734) (@lem4937733 A B s f x)). Qed.
Lemma lem4937736 {A : Type'} (s : type686 A) : (term3882 A s) = (term3882 A s).
Proof. exact (eq_refl (term3882 A s)). Qed.
Lemma lem4937737 {A B : Type'} (f : type685 A B) (x : A -> Prop) (s : type686 A) : (term3913 A B f x s) = (term3909 A B f x s).
Proof. exact (MK_COMB (@lem4937735 A B s f x) (@lem4937736 A s)). Qed.
Lemma lem4937738 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4937739 {A B : Type'} (f : type685 A B) (x : A -> Prop) (s : type686 A) : (term3919 A B f x s) = (term3920 A B f x s).
Proof. exact (MK_COMB (@lem4937738) (@lem4937737 A B f x s)). Qed.
Lemma lem4937740 {A B : Type'} (s : type686 A) (f : type685 A B) (x : A -> Prop) (y : A -> Prop) : (term3915 A B s f x y) = (term3864 A B s f x y).
Proof. exact (eq_refl (term3915 A B s f x y)). Qed.
Lemma lem4937741 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4937742 {A B : Type'} (s : type686 A) (f : type685 A B) (x : A -> Prop) (y : A -> Prop) : (term3921 A B s f x y) = (term3922 A B s f x y).
Proof. exact (MK_COMB (@lem4937741) (@lem4937740 A B s f x y)). Qed.
Lemma lem4937743 {A : Type'} (s : type686 A) : (term3882 A s) = (term3882 A s).
Proof. exact (eq_refl (term3882 A s)). Qed.
Lemma lem4937744 {A B : Type'} (f : type685 A B) (x : A -> Prop) (y : A -> Prop) (s : type686 A) : (term3923 A B f x y s) = (term3924 A B f x y s).
Proof. exact (MK_COMB (@lem4937742 A B s f x y) (@lem4937743 A s)). Qed.
Lemma lem4937745 {A B : Type'} (f : type685 A B) (x : A -> Prop) (s : type686 A) : (term3925 A B f x s) = (term3926 A B f x s).
Proof. exact (fun_ext (fun y : A -> Prop => @lem4937744 A B f x y s)). Qed.
Lemma lem4937746 {A : Type'} : (@ex (A -> Prop)) = (@ex (A -> Prop)).
Proof. exact (eq_refl (@ex (A -> Prop))). Qed.
Lemma lem4937747 {A B : Type'} (f : type685 A B) (x : A -> Prop) (s : type686 A) : (term3914 A B f x s) = (term3927 A B f x s).
Proof. exact (MK_COMB (@lem4937746 A) (@lem4937745 A B f x s)). Qed.
Lemma lem4937748 {A B : Type'} (f : type685 A B) (x : A -> Prop) (s : type686 A) : ((term3913 A B f x s) = (term3914 A B f x s)) = ((term3909 A B f x s) = (term3927 A B f x s)).
Proof. exact (MK_COMB (@lem4937739 A B f x s) (@lem4937747 A B f x s)). Qed.
Lemma lem4937749 {A B : Type'} (f : type685 A B) (x : A -> Prop) (s : type686 A) : (term3909 A B f x s) = (term3927 A B f x s).
Proof. exact (EQ_MP (@lem4937748 A B f x s) (@lem4937729 A B f x s)). Qed.
Lemma lem4937750 {A B : Type'} (f : type685 A B) (s : type686 A) : (term3911 A B f s) = (term3928 A B f s).
Proof. exact (fun_ext (fun x : A -> Prop => @lem4937749 A B f x s)). Qed.
Lemma lem4937751 {A : Type'} : (@ex (A -> Prop)) = (@ex (A -> Prop)).
Proof. exact (eq_refl (@ex (A -> Prop))). Qed.
Lemma lem4937752 {A B : Type'} (f : type685 A B) (s : type686 A) : (term3912 A B f s) = (term3929 A B f s).
Proof. exact (MK_COMB (@lem4937751 A) (@lem4937750 A B f s)). Qed.
Lemma lem4937753 {A B : Type'} (f : type685 A B) (s : type686 A) : (term3886 A B f s) = (term3929 A B f s).
Proof. exact (TRANS (@lem4937725 A B f s) (@lem4937752 A B f s)). Qed.
Lemma lem4937754 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4937755 {A B : Type'} (f : type685 A B) (s : type686 A) : (term3889 A B f s) = (term3930 A B f s).
Proof. exact (MK_COMB (@lem4937754) (@lem4937753 A B f s)). Qed.
Lemma lem4937756 {A B : Type'} (f : type685 A B) (s : type686 A) : ((term2808 A B f s) = (@CARD (A -> Prop) s)) = ((term2808 A B f s) = (@CARD (A -> Prop) s)).
Proof. exact (eq_refl ((term2808 A B f s) = (@CARD (A -> Prop) s))). Qed.
Lemma lem4937757 {A B : Type'} (f : type685 A B) (s : type686 A) : (term3891 A B f s) = (term3931 A B f s).
Proof. exact (MK_COMB (@lem4937755 A B f s) (@lem4937756 A B f s)). Qed.
Lemma lem4937759 {A : Type'} (P : A -> Prop) (Q : Prop) : (term1154 A P Q) = (term1155 A P Q).
Proof. exact (EQ_MP (@lem18905 A P Q) (@lem18904 A P Q)). Qed.
Lemma lem4937760 {A : Type'} (P : type686 A) (Q : Prop) : (term3896 A P Q) = (term3897 A P Q).
Proof. exact (@lem4937759 (A -> Prop) P Q). Qed.
Lemma lem4937761 {A B : Type'} (f : type685 A B) (s : type686 A) : (term3932 A B f s) = (term3933 A B f s).
Proof. exact (@lem4937760 A (term3928 A B f s) ((term2808 A B f s) = (@CARD (A -> Prop) s))). Qed.
Lemma lem4937762 {A B : Type'} (f : type685 A B) (x : A -> Prop) (s : type686 A) : (term3934 A B f s x) = (term3927 A B f x s).
Proof. exact (eq_refl (term3934 A B f s x)). Qed.
Lemma lem4937763 {A B : Type'} (f : type685 A B) (s : type686 A) : (term3935 A B f s) = (term3928 A B f s).
Proof. exact (fun_ext (fun x : A -> Prop => @lem4937762 A B f x s)). Qed.
Lemma lem4937764 {A : Type'} : (@ex (A -> Prop)) = (@ex (A -> Prop)).
Proof. exact (eq_refl (@ex (A -> Prop))). Qed.
Lemma lem4937765 {A B : Type'} (f : type685 A B) (s : type686 A) : (term3936 A B f s) = (term3929 A B f s).
Proof. exact (MK_COMB (@lem4937764 A) (@lem4937763 A B f s)). Qed.
Lemma lem4937766 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4937767 {A B : Type'} (f : type685 A B) (s : type686 A) : (term3937 A B f s) = (term3930 A B f s).
Proof. exact (MK_COMB (@lem4937766) (@lem4937765 A B f s)). Qed.
Lemma lem4937768 {A B : Type'} (f : type685 A B) (s : type686 A) : ((term2808 A B f s) = (@CARD (A -> Prop) s)) = ((term2808 A B f s) = (@CARD (A -> Prop) s)).
Proof. exact (eq_refl ((term2808 A B f s) = (@CARD (A -> Prop) s))). Qed.
Lemma lem4937769 {A B : Type'} (f : type685 A B) (s : type686 A) : (term3932 A B f s) = (term3931 A B f s).
Proof. exact (MK_COMB (@lem4937767 A B f s) (@lem4937768 A B f s)). Qed.
Lemma lem4937770 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4937771 {A B : Type'} (f : type685 A B) (s : type686 A) : (term3938 A B f s) = (term3939 A B f s).
Proof. exact (MK_COMB (@lem4937770) (@lem4937769 A B f s)). Qed.
Lemma lem4937772 {A B : Type'} (f : type685 A B) (x : A -> Prop) (s : type686 A) : (term3934 A B f s x) = (term3927 A B f x s).
Proof. exact (eq_refl (term3934 A B f s x)). Qed.
Lemma lem4937773 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4937774 {A B : Type'} (f : type685 A B) (x : A -> Prop) (s : type686 A) : (term3940 A B f s x) = (term3941 A B f x s).
Proof. exact (MK_COMB (@lem4937773) (@lem4937772 A B f x s)). Qed.
Lemma lem4937775 {A B : Type'} (f : type685 A B) (s : type686 A) : ((term2808 A B f s) = (@CARD (A -> Prop) s)) = ((term2808 A B f s) = (@CARD (A -> Prop) s)).
Proof. exact (eq_refl ((term2808 A B f s) = (@CARD (A -> Prop) s))). Qed.
Lemma lem4937776 {A B : Type'} (x : A -> Prop) (f : type685 A B) (s : type686 A) : (term3942 A B x f s) = (term3943 A B x f s).
Proof. exact (MK_COMB (@lem4937774 A B f x s) (@lem4937775 A B f s)). Qed.
Lemma lem4937777 {A B : Type'} (f : type685 A B) (s : type686 A) : (term3944 A B f s) = (term3945 A B f s).
Proof. exact (fun_ext (fun x : A -> Prop => @lem4937776 A B x f s)). Qed.
Lemma lem4937778 {A : Type'} : (@ex (A -> Prop)) = (@ex (A -> Prop)).
Proof. exact (eq_refl (@ex (A -> Prop))). Qed.
Lemma lem4937779 {A B : Type'} (f : type685 A B) (s : type686 A) : (term3933 A B f s) = (term3946 A B f s).
Proof. exact (MK_COMB (@lem4937778 A) (@lem4937777 A B f s)). Qed.
Lemma lem4937780 {A B : Type'} (f : type685 A B) (s : type686 A) : ((term3932 A B f s) = (term3933 A B f s)) = ((term3931 A B f s) = (term3946 A B f s)).
Proof. exact (MK_COMB (@lem4937771 A B f s) (@lem4937779 A B f s)). Qed.
Lemma lem4937781 {A B : Type'} (f : type685 A B) (s : type686 A) : (term3931 A B f s) = (term3946 A B f s).
Proof. exact (EQ_MP (@lem4937780 A B f s) (@lem4937761 A B f s)). Qed.
Lemma lem4937783 {A : Type'} (P : A -> Prop) (Q : Prop) : (term1154 A P Q) = (term1155 A P Q).
Proof. exact (EQ_MP (@lem18905 A P Q) (@lem18904 A P Q)). Qed.
Lemma lem4937784 {A : Type'} (P : type686 A) (Q : Prop) : (term3896 A P Q) = (term3897 A P Q).
Proof. exact (@lem4937783 (A -> Prop) P Q). Qed.
Lemma lem4937785 {A B : Type'} (x : A -> Prop) (f : type685 A B) (s : type686 A) : (term3947 A B x f s) = (term3948 A B x f s).
Proof. exact (@lem4937784 A (term3926 A B f x s) ((term2808 A B f s) = (@CARD (A -> Prop) s))). Qed.
Lemma lem4937786 {A B : Type'} (f : type685 A B) (x : A -> Prop) (y : A -> Prop) (s : type686 A) : (term3949 A B f x s y) = (term3924 A B f x y s).
Proof. exact (eq_refl (term3949 A B f x s y)). Qed.
Lemma lem4937787 {A B : Type'} (f : type685 A B) (x : A -> Prop) (s : type686 A) : (term3950 A B f x s) = (term3926 A B f x s).
Proof. exact (fun_ext (fun y : A -> Prop => @lem4937786 A B f x y s)). Qed.
Lemma lem4937788 {A : Type'} : (@ex (A -> Prop)) = (@ex (A -> Prop)).
Proof. exact (eq_refl (@ex (A -> Prop))). Qed.
Lemma lem4937789 {A B : Type'} (f : type685 A B) (x : A -> Prop) (s : type686 A) : (term3951 A B f x s) = (term3927 A B f x s).
Proof. exact (MK_COMB (@lem4937788 A) (@lem4937787 A B f x s)). Qed.
Lemma lem4937790 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4937791 {A B : Type'} (f : type685 A B) (x : A -> Prop) (s : type686 A) : (term3952 A B f x s) = (term3941 A B f x s).
Proof. exact (MK_COMB (@lem4937790) (@lem4937789 A B f x s)). Qed.
Lemma lem4937792 {A B : Type'} (f : type685 A B) (s : type686 A) : ((term2808 A B f s) = (@CARD (A -> Prop) s)) = ((term2808 A B f s) = (@CARD (A -> Prop) s)).
Proof. exact (eq_refl ((term2808 A B f s) = (@CARD (A -> Prop) s))). Qed.
Lemma lem4937793 {A B : Type'} (x : A -> Prop) (f : type685 A B) (s : type686 A) : (term3947 A B x f s) = (term3943 A B x f s).
Proof. exact (MK_COMB (@lem4937791 A B f x s) (@lem4937792 A B f s)). Qed.
Lemma lem4937794 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4937795 {A B : Type'} (x : A -> Prop) (f : type685 A B) (s : type686 A) : (term3953 A B x f s) = (term3954 A B x f s).
Proof. exact (MK_COMB (@lem4937794) (@lem4937793 A B x f s)). Qed.
Lemma lem4937796 {A B : Type'} (f : type685 A B) (x : A -> Prop) (y : A -> Prop) (s : type686 A) : (term3949 A B f x s y) = (term3924 A B f x y s).
Proof. exact (eq_refl (term3949 A B f x s y)). Qed.
Lemma lem4937797 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4937798 {A B : Type'} (f : type685 A B) (x : A -> Prop) (y : A -> Prop) (s : type686 A) : (term3955 A B f x s y) = (term3956 A B f x y s).
Proof. exact (MK_COMB (@lem4937797) (@lem4937796 A B f x y s)). Qed.
Lemma lem4937799 {A B : Type'} (f : type685 A B) (s : type686 A) : ((term2808 A B f s) = (@CARD (A -> Prop) s)) = ((term2808 A B f s) = (@CARD (A -> Prop) s)).
Proof. exact (eq_refl ((term2808 A B f s) = (@CARD (A -> Prop) s))). Qed.
Lemma lem4937800 {A B : Type'} (x : A -> Prop) (y : A -> Prop) (f : type685 A B) (s : type686 A) : (term3957 A B x y f s) = (term3958 A B x y f s).
Proof. exact (MK_COMB (@lem4937798 A B f x y s) (@lem4937799 A B f s)). Qed.
Lemma lem4937801 {A B : Type'} (x : A -> Prop) (f : type685 A B) (s : type686 A) : (term3959 A B x f s) = (term3960 A B x f s).
Proof. exact (fun_ext (fun y : A -> Prop => @lem4937800 A B x y f s)). Qed.
Lemma lem4937802 {A : Type'} : (@ex (A -> Prop)) = (@ex (A -> Prop)).
Proof. exact (eq_refl (@ex (A -> Prop))). Qed.
Lemma lem4937803 {A B : Type'} (x : A -> Prop) (f : type685 A B) (s : type686 A) : (term3948 A B x f s) = (term3961 A B x f s).
Proof. exact (MK_COMB (@lem4937802 A) (@lem4937801 A B x f s)). Qed.
Lemma lem4937804 {A B : Type'} (x : A -> Prop) (f : type685 A B) (s : type686 A) : ((term3947 A B x f s) = (term3948 A B x f s)) = ((term3943 A B x f s) = (term3961 A B x f s)).
Proof. exact (MK_COMB (@lem4937795 A B x f s) (@lem4937803 A B x f s)). Qed.
Lemma lem4937805 {A B : Type'} (x : A -> Prop) (f : type685 A B) (s : type686 A) : (term3943 A B x f s) = (term3961 A B x f s).
Proof. exact (EQ_MP (@lem4937804 A B x f s) (@lem4937785 A B x f s)). Qed.
Lemma lem4937806 {A B : Type'} (f : type685 A B) (s : type686 A) : (term3945 A B f s) = (term3962 A B f s).
Proof. exact (fun_ext (fun x : A -> Prop => @lem4937805 A B x f s)). Qed.
Lemma lem4937807 {A : Type'} : (@ex (A -> Prop)) = (@ex (A -> Prop)).
Proof. exact (eq_refl (@ex (A -> Prop))). Qed.
Lemma lem4937808 {A B : Type'} (f : type685 A B) (s : type686 A) : (term3946 A B f s) = (term3963 A B f s).
Proof. exact (MK_COMB (@lem4937807 A) (@lem4937806 A B f s)). Qed.
Lemma lem4937809 {A B : Type'} (f : type685 A B) (s : type686 A) : (term3931 A B f s) = (term3963 A B f s).
Proof. exact (TRANS (@lem4937781 A B f s) (@lem4937808 A B f s)). Qed.
Lemma lem4937810 {A B : Type'} (f : type685 A B) (s : type686 A) : (term3891 A B f s) = (term3963 A B f s).
Proof. exact (TRANS (@lem4937757 A B f s) (@lem4937809 A B f s)). Qed.
Lemma lem4937811 {A B : Type'} (f : type685 A B) : (term3892 A B f) = (term3964 A B f).
Proof. exact (fun_ext (fun s : type686 A => @lem4937810 A B f s)). Qed.
Lemma lem4937812 {A : Type'} : (@all ((A -> Prop) -> Prop)) = (@all ((A -> Prop) -> Prop)).
Proof. exact (eq_refl (@all ((A -> Prop) -> Prop))). Qed.
Lemma lem4937813 {A B : Type'} (f : type685 A B) : (term3893 A B f) = (term3965 A B f).
Proof. exact (MK_COMB (@lem4937812 A) (@lem4937811 A B f)). Qed.
Lemma lem4937815 {A B : Type'} (P : type1413 A B) : (term814 A B P) = (term815 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem4937816 {A : Type'} (P : type174 A) : (term3966 A P) = (term3967 A P).
Proof. exact (@lem4937815 (type686 A) (A -> Prop) P). Qed.
Lemma lem4937817 {A B : Type'} (f : type685 A B) : (term3968 A B f) = (term3969 A B f).
Proof. exact (@lem4937816 A (term3970 A B f)). Qed.
Lemma lem4937818 {A B : Type'} (f : type685 A B) (s : type686 A) : (term3971 A B f s) = (term3962 A B f s).
Proof. exact (eq_refl (term3971 A B f s)). Qed.
Lemma lem4937819 {A : Type'} (x : A -> Prop) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem4937820 {A B : Type'} (f : type685 A B) (s : type686 A) (x : A -> Prop) : (term3972 A B f s x) = (term3973 A B f s x).
Proof. exact (MK_COMB (@lem4937818 A B f s) (@lem4937819 A x)). Qed.
Lemma lem4937821 {A B : Type'} (x : A -> Prop) (f : type685 A B) (s : type686 A) : (term3973 A B f s x) = (term3961 A B x f s).
Proof. exact (eq_refl (term3973 A B f s x)). Qed.
Lemma lem4937822 {A B : Type'} (x : A -> Prop) (f : type685 A B) (s : type686 A) : (term3972 A B f s x) = (term3961 A B x f s).
Proof. exact (TRANS (@lem4937820 A B f s x) (@lem4937821 A B x f s)). Qed.
Lemma lem4937823 {A B : Type'} (f : type685 A B) (s : type686 A) : (term3974 A B f s) = (term3962 A B f s).
Proof. exact (fun_ext (fun x : A -> Prop => @lem4937822 A B x f s)). Qed.
Lemma lem4937824 {A : Type'} : (@ex (A -> Prop)) = (@ex (A -> Prop)).
Proof. exact (eq_refl (@ex (A -> Prop))). Qed.
Lemma lem4937825 {A B : Type'} (f : type685 A B) (s : type686 A) : (term3975 A B f s) = (term3963 A B f s).
Proof. exact (MK_COMB (@lem4937824 A) (@lem4937823 A B f s)). Qed.
Lemma lem4937826 {A B : Type'} (f : type685 A B) : (term3976 A B f) = (term3964 A B f).
Proof. exact (fun_ext (fun s : type686 A => @lem4937825 A B f s)). Qed.
Lemma lem4937827 {A : Type'} : (@all ((A -> Prop) -> Prop)) = (@all ((A -> Prop) -> Prop)).
Proof. exact (eq_refl (@all ((A -> Prop) -> Prop))). Qed.
Lemma lem4937828 {A B : Type'} (f : type685 A B) : (term3968 A B f) = (term3965 A B f).
Proof. exact (MK_COMB (@lem4937827 A) (@lem4937826 A B f)). Qed.
Lemma lem4937829 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4937830 {A B : Type'} (f : type685 A B) : (term3977 A B f) = (term3978 A B f).
Proof. exact (MK_COMB (@lem4937829) (@lem4937828 A B f)). Qed.
Lemma lem4937831 {A B : Type'} (f : type685 A B) (s : type686 A) : (term3971 A B f s) = (term3962 A B f s).
Proof. exact (eq_refl (term3971 A B f s)). Qed.
Lemma lem4937832 {A : Type'} (x : type178 A) (s : type686 A) : (x s) = (x s).
Proof. exact (eq_refl (x s)). Qed.
Lemma lem4937833 {A B : Type'} (f : type685 A B) (x : type178 A) (s : type686 A) : (term3979 A B f x s) = (term3980 A B f x s).
Proof. exact (MK_COMB (@lem4937831 A B f s) (@lem4937832 A x s)). Qed.
Lemma lem4937834 {A B : Type'} (x : type178 A) (f : type685 A B) (s : type686 A) : (term3980 A B f x s) = (term3981 A B x f s).
Proof. exact (eq_refl (term3980 A B f x s)). Qed.
Lemma lem4937835 {A B : Type'} (x : type178 A) (f : type685 A B) (s : type686 A) : (term3979 A B f x s) = (term3981 A B x f s).
Proof. exact (TRANS (@lem4937833 A B f x s) (@lem4937834 A B x f s)). Qed.
Lemma lem4937836 {A B : Type'} (x : type178 A) (f : type685 A B) : (term3982 A B f x) = (term3983 A B x f).
Proof. exact (fun_ext (fun s : type686 A => @lem4937835 A B x f s)). Qed.
Lemma lem4937837 {A : Type'} : (@all ((A -> Prop) -> Prop)) = (@all ((A -> Prop) -> Prop)).
Proof. exact (eq_refl (@all ((A -> Prop) -> Prop))). Qed.
Lemma lem4937838 {A B : Type'} (x : type178 A) (f : type685 A B) : (term3984 A B f x) = (term3985 A B x f).
Proof. exact (MK_COMB (@lem4937837 A) (@lem4937836 A B x f)). Qed.
Lemma lem4937839 {A B : Type'} (f : type685 A B) : (term3986 A B f) = (term3987 A B f).
Proof. exact (fun_ext (fun x : type178 A => @lem4937838 A B x f)). Qed.
Lemma lem4937840 {A : Type'} : (@ex (((A -> Prop) -> Prop) -> A -> Prop)) = (@ex (((A -> Prop) -> Prop) -> A -> Prop)).
Proof. exact (eq_refl (@ex (((A -> Prop) -> Prop) -> A -> Prop))). Qed.
Lemma lem4937841 {A B : Type'} (f : type685 A B) : (term3969 A B f) = (term3988 A B f).
Proof. exact (MK_COMB (@lem4937840 A) (@lem4937839 A B f)). Qed.
Lemma lem4937842 {A B : Type'} (f : type685 A B) : ((term3968 A B f) = (term3969 A B f)) = ((term3965 A B f) = (term3988 A B f)).
Proof. exact (MK_COMB (@lem4937830 A B f) (@lem4937841 A B f)). Qed.
Lemma lem4937843 {A B : Type'} (f : type685 A B) : (term3965 A B f) = (term3988 A B f).
Proof. exact (EQ_MP (@lem4937842 A B f) (@lem4937817 A B f)). Qed.
Lemma lem4937845 {A B : Type'} (P : type1413 A B) : (term814 A B P) = (term815 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem4937846 {A : Type'} (P : type174 A) : (term3966 A P) = (term3967 A P).
Proof. exact (@lem4937845 (type686 A) (A -> Prop) P). Qed.
Lemma lem4937847 {A B : Type'} (x : type178 A) (f : type685 A B) : (term3989 A B x f) = (term3990 A B x f).
Proof. exact (@lem4937846 A (term3991 A B x f)). Qed.
Lemma lem4937848 {A B : Type'} (x : type178 A) (f : type685 A B) (s : type686 A) : (term3992 A B x f s) = (term3993 A B x f s).
Proof. exact (eq_refl (term3992 A B x f s)). Qed.
Lemma lem4937849 {A : Type'} (y : A -> Prop) : y = y.
Proof. exact (eq_refl y). Qed.
Lemma lem4937850 {A B : Type'} (x : type178 A) (f : type685 A B) (s : type686 A) (y : A -> Prop) : (term3994 A B x f s y) = (term3995 A B x f s y).
Proof. exact (MK_COMB (@lem4937848 A B x f s) (@lem4937849 A y)). Qed.
Lemma lem4937851 {A B : Type'} (x : type178 A) (y : A -> Prop) (f : type685 A B) (s : type686 A) : (term3995 A B x f s y) = (term3996 A B x y f s).
Proof. exact (eq_refl (term3995 A B x f s y)). Qed.
Lemma lem4937852 {A B : Type'} (x : type178 A) (y : A -> Prop) (f : type685 A B) (s : type686 A) : (term3994 A B x f s y) = (term3996 A B x y f s).
Proof. exact (TRANS (@lem4937850 A B x f s y) (@lem4937851 A B x y f s)). Qed.
Lemma lem4937853 {A B : Type'} (x : type178 A) (f : type685 A B) (s : type686 A) : (term3997 A B x f s) = (term3993 A B x f s).
Proof. exact (fun_ext (fun y : A -> Prop => @lem4937852 A B x y f s)). Qed.
Lemma lem4937854 {A : Type'} : (@ex (A -> Prop)) = (@ex (A -> Prop)).
Proof. exact (eq_refl (@ex (A -> Prop))). Qed.
Lemma lem4937855 {A B : Type'} (x : type178 A) (f : type685 A B) (s : type686 A) : (term3998 A B x f s) = (term3981 A B x f s).
Proof. exact (MK_COMB (@lem4937854 A) (@lem4937853 A B x f s)). Qed.
Lemma lem4937856 {A B : Type'} (x : type178 A) (f : type685 A B) : (term3999 A B x f) = (term3983 A B x f).
Proof. exact (fun_ext (fun s : type686 A => @lem4937855 A B x f s)). Qed.
Lemma lem4937857 {A : Type'} : (@all ((A -> Prop) -> Prop)) = (@all ((A -> Prop) -> Prop)).
Proof. exact (eq_refl (@all ((A -> Prop) -> Prop))). Qed.
Lemma lem4937858 {A B : Type'} (x : type178 A) (f : type685 A B) : (term3989 A B x f) = (term3985 A B x f).
Proof. exact (MK_COMB (@lem4937857 A) (@lem4937856 A B x f)). Qed.
Lemma lem4937859 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4937860 {A B : Type'} (x : type178 A) (f : type685 A B) : (term4000 A B x f) = (term4001 A B x f).
Proof. exact (MK_COMB (@lem4937859) (@lem4937858 A B x f)). Qed.
Lemma lem4937861 {A B : Type'} (x : type178 A) (f : type685 A B) (s : type686 A) : (term3992 A B x f s) = (term3993 A B x f s).
Proof. exact (eq_refl (term3992 A B x f s)). Qed.
Lemma lem4937862 {A : Type'} (y : type178 A) (s : type686 A) : (y s) = (y s).
Proof. exact (eq_refl (y s)). Qed.
Lemma lem4937863 {A B : Type'} (x : type178 A) (f : type685 A B) (y : type178 A) (s : type686 A) : (term4002 A B x f y s) = (term4003 A B x f y s).
Proof. exact (MK_COMB (@lem4937861 A B x f s) (@lem4937862 A y s)). Qed.
Lemma lem4937864 {A B : Type'} (x : type178 A) (y : type178 A) (f : type685 A B) (s : type686 A) : (term4003 A B x f y s) = (term4004 A B x y f s).
Proof. exact (eq_refl (term4003 A B x f y s)). Qed.
Lemma lem4937865 {A B : Type'} (x : type178 A) (y : type178 A) (f : type685 A B) (s : type686 A) : (term4002 A B x f y s) = (term4004 A B x y f s).
Proof. exact (TRANS (@lem4937863 A B x f y s) (@lem4937864 A B x y f s)). Qed.
Lemma lem4937866 {A B : Type'} (x : type178 A) (y : type178 A) (f : type685 A B) : (term4005 A B x f y) = (term4006 A B x y f).
Proof. exact (fun_ext (fun s : type686 A => @lem4937865 A B x y f s)). Qed.
Lemma lem4937867 {A : Type'} : (@all ((A -> Prop) -> Prop)) = (@all ((A -> Prop) -> Prop)).
Proof. exact (eq_refl (@all ((A -> Prop) -> Prop))). Qed.
Lemma lem4937868 {A B : Type'} (x : type178 A) (y : type178 A) (f : type685 A B) : (term4007 A B x f y) = (term4008 A B x y f).
Proof. exact (MK_COMB (@lem4937867 A) (@lem4937866 A B x y f)). Qed.
Lemma lem4937869 {A B : Type'} (x : type178 A) (f : type685 A B) : (term4009 A B x f) = (term4010 A B x f).
Proof. exact (fun_ext (fun y : type178 A => @lem4937868 A B x y f)). Qed.
Lemma lem4937870 {A : Type'} : (@ex (((A -> Prop) -> Prop) -> A -> Prop)) = (@ex (((A -> Prop) -> Prop) -> A -> Prop)).
Proof. exact (eq_refl (@ex (((A -> Prop) -> Prop) -> A -> Prop))). Qed.
Lemma lem4937871 {A B : Type'} (x : type178 A) (f : type685 A B) : (term3990 A B x f) = (term4011 A B x f).
Proof. exact (MK_COMB (@lem4937870 A) (@lem4937869 A B x f)). Qed.
Lemma lem4937872 {A B : Type'} (x : type178 A) (f : type685 A B) : ((term3989 A B x f) = (term3990 A B x f)) = ((term3985 A B x f) = (term4011 A B x f)).
Proof. exact (MK_COMB (@lem4937860 A B x f) (@lem4937871 A B x f)). Qed.
Lemma lem4937873 {A B : Type'} (x : type178 A) (f : type685 A B) : (term3985 A B x f) = (term4011 A B x f).
Proof. exact (EQ_MP (@lem4937872 A B x f) (@lem4937847 A B x f)). Qed.
Lemma lem4937874 {A B : Type'} (f : type685 A B) : (term3987 A B f) = (term4012 A B f).
Proof. exact (fun_ext (fun x : type178 A => @lem4937873 A B x f)). Qed.
Lemma lem4937875 {A : Type'} : (@ex (((A -> Prop) -> Prop) -> A -> Prop)) = (@ex (((A -> Prop) -> Prop) -> A -> Prop)).
Proof. exact (eq_refl (@ex (((A -> Prop) -> Prop) -> A -> Prop))). Qed.
Lemma lem4937876 {A B : Type'} (f : type685 A B) : (term3988 A B f) = (term4013 A B f).
Proof. exact (MK_COMB (@lem4937875 A) (@lem4937874 A B f)). Qed.
Lemma lem4937877 {A B : Type'} (f : type685 A B) : (term3965 A B f) = (term4013 A B f).
Proof. exact (TRANS (@lem4937843 A B f) (@lem4937876 A B f)). Qed.
Lemma lem4937878 {A B : Type'} (f : type685 A B) : (term3893 A B f) = (term4013 A B f).
Proof. exact (TRANS (@lem4937813 A B f) (@lem4937877 A B f)). Qed.
Lemma lem4937879 {A B : Type'} : (term3894 A B) = (term4014 A B).
Proof. exact (fun_ext (fun f : type685 A B => @lem4937878 A B f)). Qed.
Lemma lem4937880 {A B : Type'} : (@all ((A -> Prop) -> B)) = (@all ((A -> Prop) -> B)).
Proof. exact (eq_refl (@all ((A -> Prop) -> B))). Qed.
Lemma lem4937881 {A B : Type'} : (term3895 A B) = (term4015 A B).
Proof. exact (MK_COMB (@lem4937880 A B) (@lem4937879 A B)). Qed.
Lemma lem4937883 {A B : Type'} (P : type1413 A B) : (term814 A B P) = (term815 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem4937884 {A B : Type'} (P : type163 A B) : (term4016 A B P) = (term4017 A B P).
Proof. exact (@lem4937883 (type685 A B) (type178 A) P). Qed.
Lemma lem4937885 {A B : Type'} : (term4018 A B) = (term4019 A B).
Proof. exact (@lem4937884 A B (term4020 A B)). Qed.
Lemma lem4937886 {A B : Type'} (f : type685 A B) : (term4021 A B f) = (term4012 A B f).
Proof. exact (eq_refl (term4021 A B f)). Qed.
Lemma lem4937887 {A : Type'} (x : type178 A) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem4937888 {A B : Type'} (f : type685 A B) (x : type178 A) : (term4022 A B f x) = (term4023 A B f x).
Proof. exact (MK_COMB (@lem4937886 A B f) (@lem4937887 A x)). Qed.
Lemma lem4937889 {A B : Type'} (x : type178 A) (f : type685 A B) : (term4023 A B f x) = (term4011 A B x f).
Proof. exact (eq_refl (term4023 A B f x)). Qed.
Lemma lem4937890 {A B : Type'} (x : type178 A) (f : type685 A B) : (term4022 A B f x) = (term4011 A B x f).
Proof. exact (TRANS (@lem4937888 A B f x) (@lem4937889 A B x f)). Qed.
Lemma lem4937891 {A B : Type'} (f : type685 A B) : (term4024 A B f) = (term4012 A B f).
Proof. exact (fun_ext (fun x : type178 A => @lem4937890 A B x f)). Qed.
Lemma lem4937892 {A : Type'} : (@ex (((A -> Prop) -> Prop) -> A -> Prop)) = (@ex (((A -> Prop) -> Prop) -> A -> Prop)).
Proof. exact (eq_refl (@ex (((A -> Prop) -> Prop) -> A -> Prop))). Qed.
Lemma lem4937893 {A B : Type'} (f : type685 A B) : (term4025 A B f) = (term4013 A B f).
Proof. exact (MK_COMB (@lem4937892 A) (@lem4937891 A B f)). Qed.
Lemma lem4937894 {A B : Type'} : (term4026 A B) = (term4014 A B).
Proof. exact (fun_ext (fun f : type685 A B => @lem4937893 A B f)). Qed.
Lemma lem4937895 {A B : Type'} : (@all ((A -> Prop) -> B)) = (@all ((A -> Prop) -> B)).
Proof. exact (eq_refl (@all ((A -> Prop) -> B))). Qed.
Lemma lem4937896 {A B : Type'} : (term4018 A B) = (term4015 A B).
Proof. exact (MK_COMB (@lem4937895 A B) (@lem4937894 A B)). Qed.
Lemma lem4937897 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4937898 {A B : Type'} : (term4027 A B) = (term4028 A B).
Proof. exact (MK_COMB (@lem4937897) (@lem4937896 A B)). Qed.
Lemma lem4937899 {A B : Type'} (f : type685 A B) : (term4021 A B f) = (term4012 A B f).
Proof. exact (eq_refl (term4021 A B f)). Qed.
Lemma lem4937900 {A B : Type'} (x : type164 A B) (f : type685 A B) : (x f) = (x f).
Proof. exact (eq_refl (x f)). Qed.
Lemma lem4937901 {A B : Type'} (x : type164 A B) (f : type685 A B) : (term4029 A B x f) = (term4030 A B x f).
Proof. exact (MK_COMB (@lem4937899 A B f) (@lem4937900 A B x f)). Qed.
Lemma lem4937902 {A B : Type'} (x : type164 A B) (f : type685 A B) : (term4030 A B x f) = (term4031 A B x f).
Proof. exact (eq_refl (term4030 A B x f)). Qed.
Lemma lem4937903 {A B : Type'} (x : type164 A B) (f : type685 A B) : (term4029 A B x f) = (term4031 A B x f).
Proof. exact (TRANS (@lem4937901 A B x f) (@lem4937902 A B x f)). Qed.
Lemma lem4937904 {A B : Type'} (x : type164 A B) : (term4032 A B x) = (term4033 A B x).
Proof. exact (fun_ext (fun f : type685 A B => @lem4937903 A B x f)). Qed.
Lemma lem4937905 {A B : Type'} : (@all ((A -> Prop) -> B)) = (@all ((A -> Prop) -> B)).
Proof. exact (eq_refl (@all ((A -> Prop) -> B))). Qed.
Lemma lem4937906 {A B : Type'} (x : type164 A B) : (term4034 A B x) = (term4035 A B x).
Proof. exact (MK_COMB (@lem4937905 A B) (@lem4937904 A B x)). Qed.
Lemma lem4937907 {A B : Type'} : (term4036 A B) = (term4037 A B).
Proof. exact (fun_ext (fun x : type164 A B => @lem4937906 A B x)). Qed.
Lemma lem4937908 {A B : Type'} : (@ex (((A -> Prop) -> B) -> ((A -> Prop) -> Prop) -> A -> Prop)) = (@ex (((A -> Prop) -> B) -> ((A -> Prop) -> Prop) -> A -> Prop)).
Proof. exact (eq_refl (@ex (((A -> Prop) -> B) -> ((A -> Prop) -> Prop) -> A -> Prop))). Qed.
Lemma lem4937909 {A B : Type'} : (term4019 A B) = (term4038 A B).
Proof. exact (MK_COMB (@lem4937908 A B) (@lem4937907 A B)). Qed.
Lemma lem4937910 {A B : Type'} : ((term4018 A B) = (term4019 A B)) = ((term4015 A B) = (term4038 A B)).
Proof. exact (MK_COMB (@lem4937898 A B) (@lem4937909 A B)). Qed.
Lemma lem4937911 {A B : Type'} : (term4015 A B) = (term4038 A B).
Proof. exact (EQ_MP (@lem4937910 A B) (@lem4937885 A B)). Qed.
Lemma lem4937913 {A B : Type'} (P : type1413 A B) : (term814 A B P) = (term815 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem4937914 {A B : Type'} (P : type163 A B) : (term4016 A B P) = (term4017 A B P).
Proof. exact (@lem4937913 (type685 A B) (type178 A) P). Qed.
Lemma lem4937915 {A B : Type'} (x : type164 A B) : (term4039 A B x) = (term4040 A B x).
Proof. exact (@lem4937914 A B (term4041 A B x)). Qed.
Lemma lem4937916 {A B : Type'} (x : type164 A B) (f : type685 A B) : (term4042 A B x f) = (term4043 A B x f).
Proof. exact (eq_refl (term4042 A B x f)). Qed.
Lemma lem4937917 {A : Type'} (y : type178 A) : y = y.
Proof. exact (eq_refl y). Qed.
Lemma lem4937918 {A B : Type'} (x : type164 A B) (f : type685 A B) (y : type178 A) : (term4044 A B x f y) = (term4045 A B x f y).
Proof. exact (MK_COMB (@lem4937916 A B x f) (@lem4937917 A y)). Qed.
Lemma lem4937919 {A B : Type'} (x : type164 A B) (y : type178 A) (f : type685 A B) : (term4045 A B x f y) = (term4046 A B x y f).
Proof. exact (eq_refl (term4045 A B x f y)). Qed.
Lemma lem4937920 {A B : Type'} (x : type164 A B) (y : type178 A) (f : type685 A B) : (term4044 A B x f y) = (term4046 A B x y f).
Proof. exact (TRANS (@lem4937918 A B x f y) (@lem4937919 A B x y f)). Qed.
Lemma lem4937921 {A B : Type'} (x : type164 A B) (f : type685 A B) : (term4047 A B x f) = (term4043 A B x f).
Proof. exact (fun_ext (fun y : type178 A => @lem4937920 A B x y f)). Qed.
Lemma lem4937922 {A : Type'} : (@ex (((A -> Prop) -> Prop) -> A -> Prop)) = (@ex (((A -> Prop) -> Prop) -> A -> Prop)).
Proof. exact (eq_refl (@ex (((A -> Prop) -> Prop) -> A -> Prop))). Qed.
Lemma lem4937923 {A B : Type'} (x : type164 A B) (f : type685 A B) : (term4048 A B x f) = (term4031 A B x f).
Proof. exact (MK_COMB (@lem4937922 A) (@lem4937921 A B x f)). Qed.
Lemma lem4937924 {A B : Type'} (x : type164 A B) : (term4049 A B x) = (term4033 A B x).
Proof. exact (fun_ext (fun f : type685 A B => @lem4937923 A B x f)). Qed.
Lemma lem4937925 {A B : Type'} : (@all ((A -> Prop) -> B)) = (@all ((A -> Prop) -> B)).
Proof. exact (eq_refl (@all ((A -> Prop) -> B))). Qed.
Lemma lem4937926 {A B : Type'} (x : type164 A B) : (term4039 A B x) = (term4035 A B x).
Proof. exact (MK_COMB (@lem4937925 A B) (@lem4937924 A B x)). Qed.
Lemma lem4937927 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4937928 {A B : Type'} (x : type164 A B) : (term4050 A B x) = (term4051 A B x).
Proof. exact (MK_COMB (@lem4937927) (@lem4937926 A B x)). Qed.
Lemma lem4937929 {A B : Type'} (x : type164 A B) (f : type685 A B) : (term4042 A B x f) = (term4043 A B x f).
Proof. exact (eq_refl (term4042 A B x f)). Qed.
Lemma lem4937930 {A B : Type'} (y : type164 A B) (f : type685 A B) : (y f) = (y f).
Proof. exact (eq_refl (y f)). Qed.
Lemma lem4937931 {A B : Type'} (x : type164 A B) (y : type164 A B) (f : type685 A B) : (term4052 A B x y f) = (term4053 A B x y f).
Proof. exact (MK_COMB (@lem4937929 A B x f) (@lem4937930 A B y f)). Qed.
Lemma lem4937932 {A B : Type'} (x : type164 A B) (y : type164 A B) (f : type685 A B) : (term4053 A B x y f) = (term4054 A B x y f).
Proof. exact (eq_refl (term4053 A B x y f)). Qed.
Lemma lem4937933 {A B : Type'} (x : type164 A B) (y : type164 A B) (f : type685 A B) : (term4052 A B x y f) = (term4054 A B x y f).
Proof. exact (TRANS (@lem4937931 A B x y f) (@lem4937932 A B x y f)). Qed.
Lemma lem4937934 {A B : Type'} (x : type164 A B) (y : type164 A B) : (term4055 A B x y) = (term4056 A B x y).
Proof. exact (fun_ext (fun f : type685 A B => @lem4937933 A B x y f)). Qed.
Lemma lem4937935 {A B : Type'} : (@all ((A -> Prop) -> B)) = (@all ((A -> Prop) -> B)).
Proof. exact (eq_refl (@all ((A -> Prop) -> B))). Qed.
Lemma lem4937936 {A B : Type'} (x : type164 A B) (y : type164 A B) : (term4057 A B x y) = (term4058 A B x y).
Proof. exact (MK_COMB (@lem4937935 A B) (@lem4937934 A B x y)). Qed.
Lemma lem4937937 {A B : Type'} (x : type164 A B) : (term4059 A B x) = (term4060 A B x).
Proof. exact (fun_ext (fun y : type164 A B => @lem4937936 A B x y)). Qed.
Lemma lem4937938 {A B : Type'} : (@ex (((A -> Prop) -> B) -> ((A -> Prop) -> Prop) -> A -> Prop)) = (@ex (((A -> Prop) -> B) -> ((A -> Prop) -> Prop) -> A -> Prop)).
Proof. exact (eq_refl (@ex (((A -> Prop) -> B) -> ((A -> Prop) -> Prop) -> A -> Prop))). Qed.
Lemma lem4937939 {A B : Type'} (x : type164 A B) : (term4040 A B x) = (term4061 A B x).
Proof. exact (MK_COMB (@lem4937938 A B) (@lem4937937 A B x)). Qed.
Lemma lem4937940 {A B : Type'} (x : type164 A B) : ((term4039 A B x) = (term4040 A B x)) = ((term4035 A B x) = (term4061 A B x)).
Proof. exact (MK_COMB (@lem4937928 A B x) (@lem4937939 A B x)). Qed.
Lemma lem4937941 {A B : Type'} (x : type164 A B) : (term4035 A B x) = (term4061 A B x).
Proof. exact (EQ_MP (@lem4937940 A B x) (@lem4937915 A B x)). Qed.
Lemma lem4937942 {A B : Type'} : (term4037 A B) = (term4062 A B).
Proof. exact (fun_ext (fun x : type164 A B => @lem4937941 A B x)). Qed.
Lemma lem4937943 {A B : Type'} : (@ex (((A -> Prop) -> B) -> ((A -> Prop) -> Prop) -> A -> Prop)) = (@ex (((A -> Prop) -> B) -> ((A -> Prop) -> Prop) -> A -> Prop)).
Proof. exact (eq_refl (@ex (((A -> Prop) -> B) -> ((A -> Prop) -> Prop) -> A -> Prop))). Qed.
Lemma lem4937944 {A B : Type'} : (term4038 A B) = (term4063 A B).
Proof. exact (MK_COMB (@lem4937943 A B) (@lem4937942 A B)). Qed.
Lemma lem4937945 {A B : Type'} : (term4015 A B) = (term4063 A B).
Proof. exact (TRANS (@lem4937911 A B) (@lem4937944 A B)). Qed.
Lemma lem4937947 {A B : Type'} : (term3895 A B) = (term4063 A B).
Proof. exact (TRANS (@lem4937881 A B) (@lem4937945 A B)). Qed.
Lemma lem4937948 {A B : Type'} : (term2712 A B) = (term4063 A B).
Proof. exact (TRANS (@lem4937596 A B) (@lem4937947 A B)). Qed.
Lemma lem4937949 {A B : Type'} (h1 : term2712 A B) : term4063 A B.
Proof. exact (EQ_MP (@lem4937948 A B) (@lem4934985 A B h1)). Qed.
Lemma lem4937964 {B : Type'} (s : type686 B) (f : type684 B) (x : B -> Prop) (y : B -> Prop) : (term4064 B s f x y) = (term4065 B s f x y).
Proof. exact (@lem17362 (term4066 B s x f y) (x = y)). Qed.
Lemma lem4937965 {B : Type'} (P : type686 B) : (term3866 B P) = (term3867 B P).
Proof. exact (@lem18392 (B -> Prop) P). Qed.
Lemma lem4937966 {B : Type'} (s : type686 B) (f : type684 B) (x : B -> Prop) : (term4067 B s f x) = (term4068 B s f x).
Proof. exact (@lem4937965 B (term2797 B s f x)). Qed.
Lemma lem4937967 {B : Type'} (s : type686 B) (f : type684 B) (x : B -> Prop) (y : B -> Prop) : (term4069 B s f x y) = (term2796 B s f x y).
Proof. exact (eq_refl (term4069 B s f x y)). Qed.
Lemma lem4937968 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem4937969 {B : Type'} (s : type686 B) (f : type684 B) (x : B -> Prop) (y : B -> Prop) : (term4070 B s f x y) = (term4064 B s f x y).
Proof. exact (MK_COMB (@lem4937968) (@lem4937967 B s f x y)). Qed.
Lemma lem4937970 {B : Type'} (s : type686 B) (f : type684 B) (x : B -> Prop) (y : B -> Prop) : (term4070 B s f x y) = (term4065 B s f x y).
Proof. exact (TRANS (@lem4937969 B s f x y) (@lem4937964 B s f x y)). Qed.
Lemma lem4937971 {B : Type'} (s : type686 B) (f : type684 B) (x : B -> Prop) : (term4071 B s f x) = (term4072 B s f x).
Proof. exact (fun_ext (fun y : B -> Prop => @lem4937970 B s f x y)). Qed.
Lemma lem4937972 {B : Type'} : (@ex (B -> Prop)) = (@ex (B -> Prop)).
Proof. exact (eq_refl (@ex (B -> Prop))). Qed.
Lemma lem4937973 {B : Type'} (s : type686 B) (f : type684 B) (x : B -> Prop) : (term4068 B s f x) = (term4073 B s f x).
Proof. exact (MK_COMB (@lem4937972 B) (@lem4937971 B s f x)). Qed.
Lemma lem4937974 {B : Type'} (s : type686 B) (f : type684 B) (x : B -> Prop) : (term4067 B s f x) = (term4073 B s f x).
Proof. exact (TRANS (@lem4937966 B s f x) (@lem4937973 B s f x)). Qed.
Lemma lem4937975 {B : Type'} (P : type686 B) : (term3866 B P) = (term3867 B P).
Proof. exact (@lem18392 (B -> Prop) P). Qed.
Lemma lem4937976 {B : Type'} (s : type686 B) (f : type684 B) : (term4074 B s f) = (term4075 B s f).
Proof. exact (@lem4937975 B (term2799 B s f)). Qed.
Lemma lem4937977 {B : Type'} (s : type686 B) (f : type684 B) (x : B -> Prop) : (term4076 B s f x) = (term2798 B s f x).
Proof. exact (eq_refl (term4076 B s f x)). Qed.
Lemma lem4937978 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem4937979 {B : Type'} (s : type686 B) (f : type684 B) (x : B -> Prop) : (term4077 B s f x) = (term4067 B s f x).
Proof. exact (MK_COMB (@lem4937978) (@lem4937977 B s f x)). Qed.
Lemma lem4937980 {B : Type'} (s : type686 B) (f : type684 B) (x : B -> Prop) : (term4077 B s f x) = (term4073 B s f x).
Proof. exact (TRANS (@lem4937979 B s f x) (@lem4937974 B s f x)). Qed.
Lemma lem4937981 {B : Type'} (s : type686 B) (f : type684 B) : (term4078 B s f) = (term4079 B s f).
Proof. exact (fun_ext (fun x : B -> Prop => @lem4937980 B s f x)). Qed.
Lemma lem4937982 {B : Type'} : (@ex (B -> Prop)) = (@ex (B -> Prop)).
Proof. exact (eq_refl (@ex (B -> Prop))). Qed.
Lemma lem4937983 {B : Type'} (s : type686 B) (f : type684 B) : (term4075 B s f) = (term4080 B s f).
Proof. exact (MK_COMB (@lem4937982 B) (@lem4937981 B s f)). Qed.
Lemma lem4937984 {B : Type'} (s : type686 B) (f : type684 B) : (term4074 B s f) = (term4080 B s f).
Proof. exact (TRANS (@lem4937976 B s f) (@lem4937983 B s f)). Qed.
Lemma lem4937985 {B : Type'} (s : type686 B) : (term3882 B s) = (term3882 B s).
Proof. exact (eq_refl (term3882 B s)). Qed.
Lemma lem4937986 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4937987 {B : Type'} (s : type686 B) (f : type684 B) : (term4081 B s f) = (term4082 B s f).
Proof. exact (MK_COMB (@lem4937986) (@lem4937984 B s f)). Qed.
Lemma lem4937988 {B : Type'} (f : type684 B) (s : type686 B) : (term4083 B f s) = (term4084 B f s).
Proof. exact (MK_COMB (@lem4937987 B s f) (@lem4937985 B s)). Qed.
Lemma lem4937989 {B : Type'} (f : type684 B) (s : type686 B) : (term4085 B f s) = (term4083 B f s).
Proof. exact (@lem17045 (term2800 B s f) (@FINITE (B -> Prop) s)). Qed.
Lemma lem4937990 {B : Type'} (f : type684 B) (s : type686 B) : (term4085 B f s) = (term4084 B f s).
Proof. exact (TRANS (@lem4937989 B f s) (@lem4937988 B f s)). Qed.
Lemma lem4937991 {B : Type'} (f : type684 B) (s : type686 B) : ((term2795 B f s) = (@CARD (B -> Prop) s)) = ((term2795 B f s) = (@CARD (B -> Prop) s)).
Proof. exact (eq_refl ((term2795 B f s) = (@CARD (B -> Prop) s))). Qed.
Lemma lem4937992 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4937993 {B : Type'} (f : type684 B) (s : type686 B) : (term4086 B f s) = (term4087 B f s).
Proof. exact (MK_COMB (@lem4937992) (@lem4937990 B f s)). Qed.
Lemma lem4937994 {B : Type'} (f : type684 B) (s : type686 B) : (term4088 B f s) = (term4089 B f s).
Proof. exact (MK_COMB (@lem4937993 B f s) (@lem4937991 B f s)). Qed.
Lemma lem4937995 {B : Type'} (f : type684 B) (s : type686 B) : (term2804 B f s) = (term4088 B f s).
Proof. exact (@lem17265 (term2802 B f s) ((term2795 B f s) = (@CARD (B -> Prop) s))). Qed.
Lemma lem4937996 {B : Type'} (f : type684 B) (s : type686 B) : (term2804 B f s) = (term4089 B f s).
Proof. exact (TRANS (@lem4937995 B f s) (@lem4937994 B f s)). Qed.
Lemma lem4937997 {B : Type'} (f : type684 B) : (term2805 B f) = (term4090 B f).
Proof. exact (fun_ext (fun s : type686 B => @lem4937996 B f s)). Qed.
Lemma lem4937998 {B : Type'} : (@all ((B -> Prop) -> Prop)) = (@all ((B -> Prop) -> Prop)).
Proof. exact (eq_refl (@all ((B -> Prop) -> Prop))). Qed.
Lemma lem4937999 {B : Type'} (f : type684 B) : (term2806 B f) = (term4091 B f).
Proof. exact (MK_COMB (@lem4937998 B) (@lem4937997 B f)). Qed.
Lemma lem4938000 {B : Type'} : (term2807 B) = (term4092 B).
Proof. exact (fun_ext (fun f : type684 B => @lem4937999 B f)). Qed.
Lemma lem4938001 {B : Type'} : (@all ((B -> Prop) -> B)) = (@all ((B -> Prop) -> B)).
Proof. exact (eq_refl (@all ((B -> Prop) -> B))). Qed.
Lemma lem4938002 {B : Type'} : (term2711 B) = (term4093 B).
Proof. exact (MK_COMB (@lem4938001 B) (@lem4938000 B)). Qed.
Lemma lem4938109 {A : Type'} (P : A -> Prop) (Q : Prop) : (term1154 A P Q) = (term1155 A P Q).
Proof. exact (EQ_MP (@lem18905 A P Q) (@lem18904 A P Q)). Qed.
Lemma lem4938110 {B : Type'} (P : type686 B) (Q : Prop) : (term3896 B P Q) = (term3897 B P Q).
Proof. exact (@lem4938109 (B -> Prop) P Q). Qed.
Lemma lem4938111 {B : Type'} (f : type684 B) (s : type686 B) : (term4094 B f s) = (term4095 B f s).
Proof. exact (@lem4938110 B (term4079 B s f) (term3882 B s)). Qed.
Lemma lem4938112 {B : Type'} (s : type686 B) (f : type684 B) (x : B -> Prop) : (term4096 B s f x) = (term4073 B s f x).
Proof. exact (eq_refl (term4096 B s f x)). Qed.
Lemma lem4938113 {B : Type'} (s : type686 B) (f : type684 B) : (term4097 B s f) = (term4079 B s f).
Proof. exact (fun_ext (fun x : B -> Prop => @lem4938112 B s f x)). Qed.
Lemma lem4938114 {B : Type'} : (@ex (B -> Prop)) = (@ex (B -> Prop)).
Proof. exact (eq_refl (@ex (B -> Prop))). Qed.
Lemma lem4938115 {B : Type'} (s : type686 B) (f : type684 B) : (term4098 B s f) = (term4080 B s f).
Proof. exact (MK_COMB (@lem4938114 B) (@lem4938113 B s f)). Qed.
Lemma lem4938116 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4938117 {B : Type'} (s : type686 B) (f : type684 B) : (term4099 B s f) = (term4082 B s f).
Proof. exact (MK_COMB (@lem4938116) (@lem4938115 B s f)). Qed.
Lemma lem4938118 {B : Type'} (s : type686 B) : (term3882 B s) = (term3882 B s).
Proof. exact (eq_refl (term3882 B s)). Qed.
Lemma lem4938119 {B : Type'} (f : type684 B) (s : type686 B) : (term4094 B f s) = (term4084 B f s).
Proof. exact (MK_COMB (@lem4938117 B s f) (@lem4938118 B s)). Qed.
Lemma lem4938120 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4938121 {B : Type'} (f : type684 B) (s : type686 B) : (term4100 B f s) = (term4101 B f s).
Proof. exact (MK_COMB (@lem4938120) (@lem4938119 B f s)). Qed.
Lemma lem4938122 {B : Type'} (s : type686 B) (f : type684 B) (x : B -> Prop) : (term4096 B s f x) = (term4073 B s f x).
Proof. exact (eq_refl (term4096 B s f x)). Qed.
Lemma lem4938123 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4938124 {B : Type'} (s : type686 B) (f : type684 B) (x : B -> Prop) : (term4102 B s f x) = (term4103 B s f x).
Proof. exact (MK_COMB (@lem4938123) (@lem4938122 B s f x)). Qed.
Lemma lem4938125 {B : Type'} (s : type686 B) : (term3882 B s) = (term3882 B s).
Proof. exact (eq_refl (term3882 B s)). Qed.
Lemma lem4938126 {B : Type'} (f : type684 B) (x : B -> Prop) (s : type686 B) : (term4104 B f x s) = (term4105 B f x s).
Proof. exact (MK_COMB (@lem4938124 B s f x) (@lem4938125 B s)). Qed.
Lemma lem4938127 {B : Type'} (f : type684 B) (s : type686 B) : (term4106 B f s) = (term4107 B f s).
Proof. exact (fun_ext (fun x : B -> Prop => @lem4938126 B f x s)). Qed.
Lemma lem4938128 {B : Type'} : (@ex (B -> Prop)) = (@ex (B -> Prop)).
Proof. exact (eq_refl (@ex (B -> Prop))). Qed.
Lemma lem4938129 {B : Type'} (f : type684 B) (s : type686 B) : (term4095 B f s) = (term4108 B f s).
Proof. exact (MK_COMB (@lem4938128 B) (@lem4938127 B f s)). Qed.
Lemma lem4938130 {B : Type'} (f : type684 B) (s : type686 B) : ((term4094 B f s) = (term4095 B f s)) = ((term4084 B f s) = (term4108 B f s)).
Proof. exact (MK_COMB (@lem4938121 B f s) (@lem4938129 B f s)). Qed.
Lemma lem4938131 {B : Type'} (f : type684 B) (s : type686 B) : (term4084 B f s) = (term4108 B f s).
Proof. exact (EQ_MP (@lem4938130 B f s) (@lem4938111 B f s)). Qed.
Lemma lem4938133 {A : Type'} (P : A -> Prop) (Q : Prop) : (term1154 A P Q) = (term1155 A P Q).
Proof. exact (EQ_MP (@lem18905 A P Q) (@lem18904 A P Q)). Qed.
Lemma lem4938134 {B : Type'} (P : type686 B) (Q : Prop) : (term3896 B P Q) = (term3897 B P Q).
Proof. exact (@lem4938133 (B -> Prop) P Q). Qed.
Lemma lem4938135 {B : Type'} (f : type684 B) (x : B -> Prop) (s : type686 B) : (term4109 B f x s) = (term4110 B f x s).
Proof. exact (@lem4938134 B (term4072 B s f x) (term3882 B s)). Qed.
Lemma lem4938136 {B : Type'} (s : type686 B) (f : type684 B) (x : B -> Prop) (y : B -> Prop) : (term4111 B s f x y) = (term4065 B s f x y).
Proof. exact (eq_refl (term4111 B s f x y)). Qed.
Lemma lem4938137 {B : Type'} (s : type686 B) (f : type684 B) (x : B -> Prop) : (term4112 B s f x) = (term4072 B s f x).
Proof. exact (fun_ext (fun y : B -> Prop => @lem4938136 B s f x y)). Qed.
Lemma lem4938138 {B : Type'} : (@ex (B -> Prop)) = (@ex (B -> Prop)).
Proof. exact (eq_refl (@ex (B -> Prop))). Qed.
Lemma lem4938139 {B : Type'} (s : type686 B) (f : type684 B) (x : B -> Prop) : (term4113 B s f x) = (term4073 B s f x).
Proof. exact (MK_COMB (@lem4938138 B) (@lem4938137 B s f x)). Qed.
Lemma lem4938140 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4938141 {B : Type'} (s : type686 B) (f : type684 B) (x : B -> Prop) : (term4114 B s f x) = (term4103 B s f x).
Proof. exact (MK_COMB (@lem4938140) (@lem4938139 B s f x)). Qed.
Lemma lem4938142 {B : Type'} (s : type686 B) : (term3882 B s) = (term3882 B s).
Proof. exact (eq_refl (term3882 B s)). Qed.
Lemma lem4938143 {B : Type'} (f : type684 B) (x : B -> Prop) (s : type686 B) : (term4109 B f x s) = (term4105 B f x s).
Proof. exact (MK_COMB (@lem4938141 B s f x) (@lem4938142 B s)). Qed.
Lemma lem4938144 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4938145 {B : Type'} (f : type684 B) (x : B -> Prop) (s : type686 B) : (term4115 B f x s) = (term4116 B f x s).
Proof. exact (MK_COMB (@lem4938144) (@lem4938143 B f x s)). Qed.
Lemma lem4938146 {B : Type'} (s : type686 B) (f : type684 B) (x : B -> Prop) (y : B -> Prop) : (term4111 B s f x y) = (term4065 B s f x y).
Proof. exact (eq_refl (term4111 B s f x y)). Qed.
Lemma lem4938147 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4938148 {B : Type'} (s : type686 B) (f : type684 B) (x : B -> Prop) (y : B -> Prop) : (term4117 B s f x y) = (term4118 B s f x y).
Proof. exact (MK_COMB (@lem4938147) (@lem4938146 B s f x y)). Qed.
Lemma lem4938149 {B : Type'} (s : type686 B) : (term3882 B s) = (term3882 B s).
Proof. exact (eq_refl (term3882 B s)). Qed.
Lemma lem4938150 {B : Type'} (f : type684 B) (x : B -> Prop) (y : B -> Prop) (s : type686 B) : (term4119 B f x y s) = (term4120 B f x y s).
Proof. exact (MK_COMB (@lem4938148 B s f x y) (@lem4938149 B s)). Qed.
Lemma lem4938151 {B : Type'} (f : type684 B) (x : B -> Prop) (s : type686 B) : (term4121 B f x s) = (term4122 B f x s).
Proof. exact (fun_ext (fun y : B -> Prop => @lem4938150 B f x y s)). Qed.
Lemma lem4938152 {B : Type'} : (@ex (B -> Prop)) = (@ex (B -> Prop)).
Proof. exact (eq_refl (@ex (B -> Prop))). Qed.
Lemma lem4938153 {B : Type'} (f : type684 B) (x : B -> Prop) (s : type686 B) : (term4110 B f x s) = (term4123 B f x s).
Proof. exact (MK_COMB (@lem4938152 B) (@lem4938151 B f x s)). Qed.
Lemma lem4938154 {B : Type'} (f : type684 B) (x : B -> Prop) (s : type686 B) : ((term4109 B f x s) = (term4110 B f x s)) = ((term4105 B f x s) = (term4123 B f x s)).
Proof. exact (MK_COMB (@lem4938145 B f x s) (@lem4938153 B f x s)). Qed.
Lemma lem4938155 {B : Type'} (f : type684 B) (x : B -> Prop) (s : type686 B) : (term4105 B f x s) = (term4123 B f x s).
Proof. exact (EQ_MP (@lem4938154 B f x s) (@lem4938135 B f x s)). Qed.
Lemma lem4938156 {B : Type'} (f : type684 B) (s : type686 B) : (term4107 B f s) = (term4124 B f s).
Proof. exact (fun_ext (fun x : B -> Prop => @lem4938155 B f x s)). Qed.
Lemma lem4938157 {B : Type'} : (@ex (B -> Prop)) = (@ex (B -> Prop)).
Proof. exact (eq_refl (@ex (B -> Prop))). Qed.
Lemma lem4938158 {B : Type'} (f : type684 B) (s : type686 B) : (term4108 B f s) = (term4125 B f s).
Proof. exact (MK_COMB (@lem4938157 B) (@lem4938156 B f s)). Qed.
Lemma lem4938159 {B : Type'} (f : type684 B) (s : type686 B) : (term4084 B f s) = (term4125 B f s).
Proof. exact (TRANS (@lem4938131 B f s) (@lem4938158 B f s)). Qed.
Lemma lem4938160 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4938161 {B : Type'} (f : type684 B) (s : type686 B) : (term4087 B f s) = (term4126 B f s).
Proof. exact (MK_COMB (@lem4938160) (@lem4938159 B f s)). Qed.
Lemma lem4938162 {B : Type'} (f : type684 B) (s : type686 B) : ((term2795 B f s) = (@CARD (B -> Prop) s)) = ((term2795 B f s) = (@CARD (B -> Prop) s)).
Proof. exact (eq_refl ((term2795 B f s) = (@CARD (B -> Prop) s))). Qed.
Lemma lem4938163 {B : Type'} (f : type684 B) (s : type686 B) : (term4089 B f s) = (term4127 B f s).
Proof. exact (MK_COMB (@lem4938161 B f s) (@lem4938162 B f s)). Qed.
Lemma lem4938165 {A : Type'} (P : A -> Prop) (Q : Prop) : (term1154 A P Q) = (term1155 A P Q).
Proof. exact (EQ_MP (@lem18905 A P Q) (@lem18904 A P Q)). Qed.
Lemma lem4938166 {B : Type'} (P : type686 B) (Q : Prop) : (term3896 B P Q) = (term3897 B P Q).
Proof. exact (@lem4938165 (B -> Prop) P Q). Qed.
Lemma lem4938167 {B : Type'} (f : type684 B) (s : type686 B) : (term4128 B f s) = (term4129 B f s).
Proof. exact (@lem4938166 B (term4124 B f s) ((term2795 B f s) = (@CARD (B -> Prop) s))). Qed.
Lemma lem4938168 {B : Type'} (f : type684 B) (x : B -> Prop) (s : type686 B) : (term4130 B f s x) = (term4123 B f x s).
Proof. exact (eq_refl (term4130 B f s x)). Qed.
Lemma lem4938169 {B : Type'} (f : type684 B) (s : type686 B) : (term4131 B f s) = (term4124 B f s).
Proof. exact (fun_ext (fun x : B -> Prop => @lem4938168 B f x s)). Qed.
Lemma lem4938170 {B : Type'} : (@ex (B -> Prop)) = (@ex (B -> Prop)).
Proof. exact (eq_refl (@ex (B -> Prop))). Qed.
Lemma lem4938171 {B : Type'} (f : type684 B) (s : type686 B) : (term4132 B f s) = (term4125 B f s).
Proof. exact (MK_COMB (@lem4938170 B) (@lem4938169 B f s)). Qed.
Lemma lem4938172 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4938173 {B : Type'} (f : type684 B) (s : type686 B) : (term4133 B f s) = (term4126 B f s).
Proof. exact (MK_COMB (@lem4938172) (@lem4938171 B f s)). Qed.
Lemma lem4938174 {B : Type'} (f : type684 B) (s : type686 B) : ((term2795 B f s) = (@CARD (B -> Prop) s)) = ((term2795 B f s) = (@CARD (B -> Prop) s)).
Proof. exact (eq_refl ((term2795 B f s) = (@CARD (B -> Prop) s))). Qed.
Lemma lem4938175 {B : Type'} (f : type684 B) (s : type686 B) : (term4128 B f s) = (term4127 B f s).
Proof. exact (MK_COMB (@lem4938173 B f s) (@lem4938174 B f s)). Qed.
Lemma lem4938176 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4938177 {B : Type'} (f : type684 B) (s : type686 B) : (term4134 B f s) = (term4135 B f s).
Proof. exact (MK_COMB (@lem4938176) (@lem4938175 B f s)). Qed.
Lemma lem4938178 {B : Type'} (f : type684 B) (x : B -> Prop) (s : type686 B) : (term4130 B f s x) = (term4123 B f x s).
Proof. exact (eq_refl (term4130 B f s x)). Qed.
Lemma lem4938179 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4938180 {B : Type'} (f : type684 B) (x : B -> Prop) (s : type686 B) : (term4136 B f s x) = (term4137 B f x s).
Proof. exact (MK_COMB (@lem4938179) (@lem4938178 B f x s)). Qed.
Lemma lem4938181 {B : Type'} (f : type684 B) (s : type686 B) : ((term2795 B f s) = (@CARD (B -> Prop) s)) = ((term2795 B f s) = (@CARD (B -> Prop) s)).
Proof. exact (eq_refl ((term2795 B f s) = (@CARD (B -> Prop) s))). Qed.
Lemma lem4938182 {B : Type'} (x : B -> Prop) (f : type684 B) (s : type686 B) : (term4138 B x f s) = (term4139 B x f s).
Proof. exact (MK_COMB (@lem4938180 B f x s) (@lem4938181 B f s)). Qed.
Lemma lem4938183 {B : Type'} (f : type684 B) (s : type686 B) : (term4140 B f s) = (term4141 B f s).
Proof. exact (fun_ext (fun x : B -> Prop => @lem4938182 B x f s)). Qed.
Lemma lem4938184 {B : Type'} : (@ex (B -> Prop)) = (@ex (B -> Prop)).
Proof. exact (eq_refl (@ex (B -> Prop))). Qed.
Lemma lem4938185 {B : Type'} (f : type684 B) (s : type686 B) : (term4129 B f s) = (term4142 B f s).
Proof. exact (MK_COMB (@lem4938184 B) (@lem4938183 B f s)). Qed.
Lemma lem4938186 {B : Type'} (f : type684 B) (s : type686 B) : ((term4128 B f s) = (term4129 B f s)) = ((term4127 B f s) = (term4142 B f s)).
Proof. exact (MK_COMB (@lem4938177 B f s) (@lem4938185 B f s)). Qed.
Lemma lem4938187 {B : Type'} (f : type684 B) (s : type686 B) : (term4127 B f s) = (term4142 B f s).
Proof. exact (EQ_MP (@lem4938186 B f s) (@lem4938167 B f s)). Qed.
Lemma lem4938189 {A : Type'} (P : A -> Prop) (Q : Prop) : (term1154 A P Q) = (term1155 A P Q).
Proof. exact (EQ_MP (@lem18905 A P Q) (@lem18904 A P Q)). Qed.
Lemma lem4938190 {B : Type'} (P : type686 B) (Q : Prop) : (term3896 B P Q) = (term3897 B P Q).
Proof. exact (@lem4938189 (B -> Prop) P Q). Qed.
Lemma lem4938191 {B : Type'} (x : B -> Prop) (f : type684 B) (s : type686 B) : (term4143 B x f s) = (term4144 B x f s).
Proof. exact (@lem4938190 B (term4122 B f x s) ((term2795 B f s) = (@CARD (B -> Prop) s))). Qed.
Lemma lem4938192 {B : Type'} (f : type684 B) (x : B -> Prop) (y : B -> Prop) (s : type686 B) : (term4145 B f x s y) = (term4120 B f x y s).
Proof. exact (eq_refl (term4145 B f x s y)). Qed.
Lemma lem4938193 {B : Type'} (f : type684 B) (x : B -> Prop) (s : type686 B) : (term4146 B f x s) = (term4122 B f x s).
Proof. exact (fun_ext (fun y : B -> Prop => @lem4938192 B f x y s)). Qed.
Lemma lem4938194 {B : Type'} : (@ex (B -> Prop)) = (@ex (B -> Prop)).
Proof. exact (eq_refl (@ex (B -> Prop))). Qed.
Lemma lem4938195 {B : Type'} (f : type684 B) (x : B -> Prop) (s : type686 B) : (term4147 B f x s) = (term4123 B f x s).
Proof. exact (MK_COMB (@lem4938194 B) (@lem4938193 B f x s)). Qed.
Lemma lem4938196 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4938197 {B : Type'} (f : type684 B) (x : B -> Prop) (s : type686 B) : (term4148 B f x s) = (term4137 B f x s).
Proof. exact (MK_COMB (@lem4938196) (@lem4938195 B f x s)). Qed.
Lemma lem4938198 {B : Type'} (f : type684 B) (s : type686 B) : ((term2795 B f s) = (@CARD (B -> Prop) s)) = ((term2795 B f s) = (@CARD (B -> Prop) s)).
Proof. exact (eq_refl ((term2795 B f s) = (@CARD (B -> Prop) s))). Qed.
Lemma lem4938199 {B : Type'} (x : B -> Prop) (f : type684 B) (s : type686 B) : (term4143 B x f s) = (term4139 B x f s).
Proof. exact (MK_COMB (@lem4938197 B f x s) (@lem4938198 B f s)). Qed.
Lemma lem4938200 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4938201 {B : Type'} (x : B -> Prop) (f : type684 B) (s : type686 B) : (term4149 B x f s) = (term4150 B x f s).
Proof. exact (MK_COMB (@lem4938200) (@lem4938199 B x f s)). Qed.
Lemma lem4938202 {B : Type'} (f : type684 B) (x : B -> Prop) (y : B -> Prop) (s : type686 B) : (term4145 B f x s y) = (term4120 B f x y s).
Proof. exact (eq_refl (term4145 B f x s y)). Qed.
Lemma lem4938203 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4938204 {B : Type'} (f : type684 B) (x : B -> Prop) (y : B -> Prop) (s : type686 B) : (term4151 B f x s y) = (term4152 B f x y s).
Proof. exact (MK_COMB (@lem4938203) (@lem4938202 B f x y s)). Qed.
Lemma lem4938205 {B : Type'} (f : type684 B) (s : type686 B) : ((term2795 B f s) = (@CARD (B -> Prop) s)) = ((term2795 B f s) = (@CARD (B -> Prop) s)).
Proof. exact (eq_refl ((term2795 B f s) = (@CARD (B -> Prop) s))). Qed.
Lemma lem4938206 {B : Type'} (x : B -> Prop) (y : B -> Prop) (f : type684 B) (s : type686 B) : (term4153 B x y f s) = (term4154 B x y f s).
Proof. exact (MK_COMB (@lem4938204 B f x y s) (@lem4938205 B f s)). Qed.
Lemma lem4938207 {B : Type'} (x : B -> Prop) (f : type684 B) (s : type686 B) : (term4155 B x f s) = (term4156 B x f s).
Proof. exact (fun_ext (fun y : B -> Prop => @lem4938206 B x y f s)). Qed.
Lemma lem4938208 {B : Type'} : (@ex (B -> Prop)) = (@ex (B -> Prop)).
Proof. exact (eq_refl (@ex (B -> Prop))). Qed.
Lemma lem4938209 {B : Type'} (x : B -> Prop) (f : type684 B) (s : type686 B) : (term4144 B x f s) = (term4157 B x f s).
Proof. exact (MK_COMB (@lem4938208 B) (@lem4938207 B x f s)). Qed.
Lemma lem4938210 {B : Type'} (x : B -> Prop) (f : type684 B) (s : type686 B) : ((term4143 B x f s) = (term4144 B x f s)) = ((term4139 B x f s) = (term4157 B x f s)).
Proof. exact (MK_COMB (@lem4938201 B x f s) (@lem4938209 B x f s)). Qed.
Lemma lem4938211 {B : Type'} (x : B -> Prop) (f : type684 B) (s : type686 B) : (term4139 B x f s) = (term4157 B x f s).
Proof. exact (EQ_MP (@lem4938210 B x f s) (@lem4938191 B x f s)). Qed.
Lemma lem4938212 {B : Type'} (f : type684 B) (s : type686 B) : (term4141 B f s) = (term4158 B f s).
Proof. exact (fun_ext (fun x : B -> Prop => @lem4938211 B x f s)). Qed.
Lemma lem4938213 {B : Type'} : (@ex (B -> Prop)) = (@ex (B -> Prop)).
Proof. exact (eq_refl (@ex (B -> Prop))). Qed.
Lemma lem4938214 {B : Type'} (f : type684 B) (s : type686 B) : (term4142 B f s) = (term4159 B f s).
Proof. exact (MK_COMB (@lem4938213 B) (@lem4938212 B f s)). Qed.
Lemma lem4938215 {B : Type'} (f : type684 B) (s : type686 B) : (term4127 B f s) = (term4159 B f s).
Proof. exact (TRANS (@lem4938187 B f s) (@lem4938214 B f s)). Qed.
Lemma lem4938216 {B : Type'} (f : type684 B) (s : type686 B) : (term4089 B f s) = (term4159 B f s).
Proof. exact (TRANS (@lem4938163 B f s) (@lem4938215 B f s)). Qed.
Lemma lem4938217 {B : Type'} (f : type684 B) : (term4090 B f) = (term4160 B f).
Proof. exact (fun_ext (fun s : type686 B => @lem4938216 B f s)). Qed.
Lemma lem4938218 {B : Type'} : (@all ((B -> Prop) -> Prop)) = (@all ((B -> Prop) -> Prop)).
Proof. exact (eq_refl (@all ((B -> Prop) -> Prop))). Qed.
Lemma lem4938219 {B : Type'} (f : type684 B) : (term4091 B f) = (term4161 B f).
Proof. exact (MK_COMB (@lem4938218 B) (@lem4938217 B f)). Qed.
Lemma lem4938221 {A B : Type'} (P : type1413 A B) : (term814 A B P) = (term815 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem4938222 {B : Type'} (P : type174 B) : (term3966 B P) = (term3967 B P).
Proof. exact (@lem4938221 (type686 B) (B -> Prop) P). Qed.
Lemma lem4938223 {B : Type'} (f : type684 B) : (term4162 B f) = (term4163 B f).
Proof. exact (@lem4938222 B (term4164 B f)). Qed.
Lemma lem4938224 {B : Type'} (f : type684 B) (s : type686 B) : (term4165 B f s) = (term4158 B f s).
Proof. exact (eq_refl (term4165 B f s)). Qed.
Lemma lem4938225 {B : Type'} (x : B -> Prop) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem4938226 {B : Type'} (f : type684 B) (s : type686 B) (x : B -> Prop) : (term4166 B f s x) = (term4167 B f s x).
Proof. exact (MK_COMB (@lem4938224 B f s) (@lem4938225 B x)). Qed.
Lemma lem4938227 {B : Type'} (x : B -> Prop) (f : type684 B) (s : type686 B) : (term4167 B f s x) = (term4157 B x f s).
Proof. exact (eq_refl (term4167 B f s x)). Qed.
Lemma lem4938228 {B : Type'} (x : B -> Prop) (f : type684 B) (s : type686 B) : (term4166 B f s x) = (term4157 B x f s).
Proof. exact (TRANS (@lem4938226 B f s x) (@lem4938227 B x f s)). Qed.
Lemma lem4938229 {B : Type'} (f : type684 B) (s : type686 B) : (term4168 B f s) = (term4158 B f s).
Proof. exact (fun_ext (fun x : B -> Prop => @lem4938228 B x f s)). Qed.
Lemma lem4938230 {B : Type'} : (@ex (B -> Prop)) = (@ex (B -> Prop)).
Proof. exact (eq_refl (@ex (B -> Prop))). Qed.
Lemma lem4938231 {B : Type'} (f : type684 B) (s : type686 B) : (term4169 B f s) = (term4159 B f s).
Proof. exact (MK_COMB (@lem4938230 B) (@lem4938229 B f s)). Qed.
Lemma lem4938232 {B : Type'} (f : type684 B) : (term4170 B f) = (term4160 B f).
Proof. exact (fun_ext (fun s : type686 B => @lem4938231 B f s)). Qed.
Lemma lem4938233 {B : Type'} : (@all ((B -> Prop) -> Prop)) = (@all ((B -> Prop) -> Prop)).
Proof. exact (eq_refl (@all ((B -> Prop) -> Prop))). Qed.
Lemma lem4938234 {B : Type'} (f : type684 B) : (term4162 B f) = (term4161 B f).
Proof. exact (MK_COMB (@lem4938233 B) (@lem4938232 B f)). Qed.
Lemma lem4938235 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4938236 {B : Type'} (f : type684 B) : (term4171 B f) = (term4172 B f).
Proof. exact (MK_COMB (@lem4938235) (@lem4938234 B f)). Qed.
Lemma lem4938237 {B : Type'} (f : type684 B) (s : type686 B) : (term4165 B f s) = (term4158 B f s).
Proof. exact (eq_refl (term4165 B f s)). Qed.
Lemma lem4938238 {B : Type'} (x : type178 B) (s : type686 B) : (x s) = (x s).
Proof. exact (eq_refl (x s)). Qed.
Lemma lem4938239 {B : Type'} (f : type684 B) (x : type178 B) (s : type686 B) : (term4173 B f x s) = (term4174 B f x s).
Proof. exact (MK_COMB (@lem4938237 B f s) (@lem4938238 B x s)). Qed.
Lemma lem4938240 {B : Type'} (x : type178 B) (f : type684 B) (s : type686 B) : (term4174 B f x s) = (term4175 B x f s).
Proof. exact (eq_refl (term4174 B f x s)). Qed.
Lemma lem4938241 {B : Type'} (x : type178 B) (f : type684 B) (s : type686 B) : (term4173 B f x s) = (term4175 B x f s).
Proof. exact (TRANS (@lem4938239 B f x s) (@lem4938240 B x f s)). Qed.
Lemma lem4938242 {B : Type'} (x : type178 B) (f : type684 B) : (term4176 B f x) = (term4177 B x f).
Proof. exact (fun_ext (fun s : type686 B => @lem4938241 B x f s)). Qed.
Lemma lem4938243 {B : Type'} : (@all ((B -> Prop) -> Prop)) = (@all ((B -> Prop) -> Prop)).
Proof. exact (eq_refl (@all ((B -> Prop) -> Prop))). Qed.
Lemma lem4938244 {B : Type'} (x : type178 B) (f : type684 B) : (term4178 B f x) = (term4179 B x f).
Proof. exact (MK_COMB (@lem4938243 B) (@lem4938242 B x f)). Qed.
Lemma lem4938245 {B : Type'} (f : type684 B) : (term4180 B f) = (term4181 B f).
Proof. exact (fun_ext (fun x : type178 B => @lem4938244 B x f)). Qed.
Lemma lem4938246 {B : Type'} : (@ex (((B -> Prop) -> Prop) -> B -> Prop)) = (@ex (((B -> Prop) -> Prop) -> B -> Prop)).
Proof. exact (eq_refl (@ex (((B -> Prop) -> Prop) -> B -> Prop))). Qed.
Lemma lem4938247 {B : Type'} (f : type684 B) : (term4163 B f) = (term4182 B f).
Proof. exact (MK_COMB (@lem4938246 B) (@lem4938245 B f)). Qed.
Lemma lem4938248 {B : Type'} (f : type684 B) : ((term4162 B f) = (term4163 B f)) = ((term4161 B f) = (term4182 B f)).
Proof. exact (MK_COMB (@lem4938236 B f) (@lem4938247 B f)). Qed.
Lemma lem4938249 {B : Type'} (f : type684 B) : (term4161 B f) = (term4182 B f).
Proof. exact (EQ_MP (@lem4938248 B f) (@lem4938223 B f)). Qed.
Lemma lem4938251 {A B : Type'} (P : type1413 A B) : (term814 A B P) = (term815 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem4938252 {B : Type'} (P : type174 B) : (term3966 B P) = (term3967 B P).
Proof. exact (@lem4938251 (type686 B) (B -> Prop) P). Qed.
Lemma lem4938253 {B : Type'} (x : type178 B) (f : type684 B) : (term4183 B x f) = (term4184 B x f).
Proof. exact (@lem4938252 B (term4185 B x f)). Qed.
Lemma lem4938254 {B : Type'} (x : type178 B) (f : type684 B) (s : type686 B) : (term4186 B x f s) = (term4187 B x f s).
Proof. exact (eq_refl (term4186 B x f s)). Qed.
Lemma lem4938255 {B : Type'} (y : B -> Prop) : y = y.
Proof. exact (eq_refl y). Qed.
Lemma lem4938256 {B : Type'} (x : type178 B) (f : type684 B) (s : type686 B) (y : B -> Prop) : (term4188 B x f s y) = (term4189 B x f s y).
Proof. exact (MK_COMB (@lem4938254 B x f s) (@lem4938255 B y)). Qed.
Lemma lem4938257 {B : Type'} (x : type178 B) (y : B -> Prop) (f : type684 B) (s : type686 B) : (term4189 B x f s y) = (term4190 B x y f s).
Proof. exact (eq_refl (term4189 B x f s y)). Qed.
Lemma lem4938258 {B : Type'} (x : type178 B) (y : B -> Prop) (f : type684 B) (s : type686 B) : (term4188 B x f s y) = (term4190 B x y f s).
Proof. exact (TRANS (@lem4938256 B x f s y) (@lem4938257 B x y f s)). Qed.
Lemma lem4938259 {B : Type'} (x : type178 B) (f : type684 B) (s : type686 B) : (term4191 B x f s) = (term4187 B x f s).
Proof. exact (fun_ext (fun y : B -> Prop => @lem4938258 B x y f s)). Qed.
Lemma lem4938260 {B : Type'} : (@ex (B -> Prop)) = (@ex (B -> Prop)).
Proof. exact (eq_refl (@ex (B -> Prop))). Qed.
Lemma lem4938261 {B : Type'} (x : type178 B) (f : type684 B) (s : type686 B) : (term4192 B x f s) = (term4175 B x f s).
Proof. exact (MK_COMB (@lem4938260 B) (@lem4938259 B x f s)). Qed.
Lemma lem4938262 {B : Type'} (x : type178 B) (f : type684 B) : (term4193 B x f) = (term4177 B x f).
Proof. exact (fun_ext (fun s : type686 B => @lem4938261 B x f s)). Qed.
Lemma lem4938263 {B : Type'} : (@all ((B -> Prop) -> Prop)) = (@all ((B -> Prop) -> Prop)).
Proof. exact (eq_refl (@all ((B -> Prop) -> Prop))). Qed.
Lemma lem4938264 {B : Type'} (x : type178 B) (f : type684 B) : (term4183 B x f) = (term4179 B x f).
Proof. exact (MK_COMB (@lem4938263 B) (@lem4938262 B x f)). Qed.
Lemma lem4938265 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4938266 {B : Type'} (x : type178 B) (f : type684 B) : (term4194 B x f) = (term4195 B x f).
Proof. exact (MK_COMB (@lem4938265) (@lem4938264 B x f)). Qed.
Lemma lem4938267 {B : Type'} (x : type178 B) (f : type684 B) (s : type686 B) : (term4186 B x f s) = (term4187 B x f s).
Proof. exact (eq_refl (term4186 B x f s)). Qed.
Lemma lem4938268 {B : Type'} (y : type178 B) (s : type686 B) : (y s) = (y s).
Proof. exact (eq_refl (y s)). Qed.
Lemma lem4938269 {B : Type'} (x : type178 B) (f : type684 B) (y : type178 B) (s : type686 B) : (term4196 B x f y s) = (term4197 B x f y s).
Proof. exact (MK_COMB (@lem4938267 B x f s) (@lem4938268 B y s)). Qed.
Lemma lem4938270 {B : Type'} (x : type178 B) (y : type178 B) (f : type684 B) (s : type686 B) : (term4197 B x f y s) = (term4198 B x y f s).
Proof. exact (eq_refl (term4197 B x f y s)). Qed.
Lemma lem4938271 {B : Type'} (x : type178 B) (y : type178 B) (f : type684 B) (s : type686 B) : (term4196 B x f y s) = (term4198 B x y f s).
Proof. exact (TRANS (@lem4938269 B x f y s) (@lem4938270 B x y f s)). Qed.
Lemma lem4938272 {B : Type'} (x : type178 B) (y : type178 B) (f : type684 B) : (term4199 B x f y) = (term4200 B x y f).
Proof. exact (fun_ext (fun s : type686 B => @lem4938271 B x y f s)). Qed.
Lemma lem4938273 {B : Type'} : (@all ((B -> Prop) -> Prop)) = (@all ((B -> Prop) -> Prop)).
Proof. exact (eq_refl (@all ((B -> Prop) -> Prop))). Qed.
Lemma lem4938274 {B : Type'} (x : type178 B) (y : type178 B) (f : type684 B) : (term4201 B x f y) = (term4202 B x y f).
Proof. exact (MK_COMB (@lem4938273 B) (@lem4938272 B x y f)). Qed.
Lemma lem4938275 {B : Type'} (x : type178 B) (f : type684 B) : (term4203 B x f) = (term4204 B x f).
Proof. exact (fun_ext (fun y : type178 B => @lem4938274 B x y f)). Qed.
Lemma lem4938276 {B : Type'} : (@ex (((B -> Prop) -> Prop) -> B -> Prop)) = (@ex (((B -> Prop) -> Prop) -> B -> Prop)).
Proof. exact (eq_refl (@ex (((B -> Prop) -> Prop) -> B -> Prop))). Qed.
Lemma lem4938277 {B : Type'} (x : type178 B) (f : type684 B) : (term4184 B x f) = (term4205 B x f).
Proof. exact (MK_COMB (@lem4938276 B) (@lem4938275 B x f)). Qed.
Lemma lem4938278 {B : Type'} (x : type178 B) (f : type684 B) : ((term4183 B x f) = (term4184 B x f)) = ((term4179 B x f) = (term4205 B x f)).
Proof. exact (MK_COMB (@lem4938266 B x f) (@lem4938277 B x f)). Qed.
Lemma lem4938279 {B : Type'} (x : type178 B) (f : type684 B) : (term4179 B x f) = (term4205 B x f).
Proof. exact (EQ_MP (@lem4938278 B x f) (@lem4938253 B x f)). Qed.
Lemma lem4938280 {B : Type'} (f : type684 B) : (term4181 B f) = (term4206 B f).
Proof. exact (fun_ext (fun x : type178 B => @lem4938279 B x f)). Qed.
Lemma lem4938281 {B : Type'} : (@ex (((B -> Prop) -> Prop) -> B -> Prop)) = (@ex (((B -> Prop) -> Prop) -> B -> Prop)).
Proof. exact (eq_refl (@ex (((B -> Prop) -> Prop) -> B -> Prop))). Qed.
Lemma lem4938282 {B : Type'} (f : type684 B) : (term4182 B f) = (term4207 B f).
Proof. exact (MK_COMB (@lem4938281 B) (@lem4938280 B f)). Qed.
Lemma lem4938283 {B : Type'} (f : type684 B) : (term4161 B f) = (term4207 B f).
Proof. exact (TRANS (@lem4938249 B f) (@lem4938282 B f)). Qed.
Lemma lem4938284 {B : Type'} (f : type684 B) : (term4091 B f) = (term4207 B f).
Proof. exact (TRANS (@lem4938219 B f) (@lem4938283 B f)). Qed.
Lemma lem4938285 {B : Type'} : (term4092 B) = (term4208 B).
Proof. exact (fun_ext (fun f : type684 B => @lem4938284 B f)). Qed.
Lemma lem4938286 {B : Type'} : (@all ((B -> Prop) -> B)) = (@all ((B -> Prop) -> B)).
Proof. exact (eq_refl (@all ((B -> Prop) -> B))). Qed.
Lemma lem4938287 {B : Type'} : (term4093 B) = (term4209 B).
Proof. exact (MK_COMB (@lem4938286 B) (@lem4938285 B)). Qed.
Lemma lem4938289 {A B : Type'} (P : type1413 A B) : (term814 A B P) = (term815 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem4938290 {B : Type'} (P : type160 B) : (term4210 B P) = (term4211 B P).
Proof. exact (@lem4938289 (type684 B) (type178 B) P). Qed.
Lemma lem4938291 {B : Type'} : (term4212 B) = (term4213 B).
Proof. exact (@lem4938290 B (term4214 B)). Qed.
Lemma lem4938292 {B : Type'} (f : type684 B) : (term4215 B f) = (term4206 B f).
Proof. exact (eq_refl (term4215 B f)). Qed.
Lemma lem4938293 {B : Type'} (x : type178 B) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem4938294 {B : Type'} (f : type684 B) (x : type178 B) : (term4216 B f x) = (term4217 B f x).
Proof. exact (MK_COMB (@lem4938292 B f) (@lem4938293 B x)). Qed.
Lemma lem4938295 {B : Type'} (x : type178 B) (f : type684 B) : (term4217 B f x) = (term4205 B x f).
Proof. exact (eq_refl (term4217 B f x)). Qed.
Lemma lem4938296 {B : Type'} (x : type178 B) (f : type684 B) : (term4216 B f x) = (term4205 B x f).
Proof. exact (TRANS (@lem4938294 B f x) (@lem4938295 B x f)). Qed.
Lemma lem4938297 {B : Type'} (f : type684 B) : (term4218 B f) = (term4206 B f).
Proof. exact (fun_ext (fun x : type178 B => @lem4938296 B x f)). Qed.
Lemma lem4938298 {B : Type'} : (@ex (((B -> Prop) -> Prop) -> B -> Prop)) = (@ex (((B -> Prop) -> Prop) -> B -> Prop)).
Proof. exact (eq_refl (@ex (((B -> Prop) -> Prop) -> B -> Prop))). Qed.
Lemma lem4938299 {B : Type'} (f : type684 B) : (term4219 B f) = (term4207 B f).
Proof. exact (MK_COMB (@lem4938298 B) (@lem4938297 B f)). Qed.
Lemma lem4938300 {B : Type'} : (term4220 B) = (term4208 B).
Proof. exact (fun_ext (fun f : type684 B => @lem4938299 B f)). Qed.
Lemma lem4938301 {B : Type'} : (@all ((B -> Prop) -> B)) = (@all ((B -> Prop) -> B)).
Proof. exact (eq_refl (@all ((B -> Prop) -> B))). Qed.
Lemma lem4938302 {B : Type'} : (term4212 B) = (term4209 B).
Proof. exact (MK_COMB (@lem4938301 B) (@lem4938300 B)). Qed.
Lemma lem4938303 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4938304 {B : Type'} : (term4221 B) = (term4222 B).
Proof. exact (MK_COMB (@lem4938303) (@lem4938302 B)). Qed.
Lemma lem4938305 {B : Type'} (f : type684 B) : (term4215 B f) = (term4206 B f).
Proof. exact (eq_refl (term4215 B f)). Qed.
Lemma lem4938306 {B : Type'} (x : type161 B) (f : type684 B) : (x f) = (x f).
Proof. exact (eq_refl (x f)). Qed.
Lemma lem4938307 {B : Type'} (x : type161 B) (f : type684 B) : (term4223 B x f) = (term4224 B x f).
Proof. exact (MK_COMB (@lem4938305 B f) (@lem4938306 B x f)). Qed.
Lemma lem4938308 {B : Type'} (x : type161 B) (f : type684 B) : (term4224 B x f) = (term4225 B x f).
Proof. exact (eq_refl (term4224 B x f)). Qed.
Lemma lem4938309 {B : Type'} (x : type161 B) (f : type684 B) : (term4223 B x f) = (term4225 B x f).
Proof. exact (TRANS (@lem4938307 B x f) (@lem4938308 B x f)). Qed.
Lemma lem4938310 {B : Type'} (x : type161 B) : (term4226 B x) = (term4227 B x).
Proof. exact (fun_ext (fun f : type684 B => @lem4938309 B x f)). Qed.
Lemma lem4938311 {B : Type'} : (@all ((B -> Prop) -> B)) = (@all ((B -> Prop) -> B)).
Proof. exact (eq_refl (@all ((B -> Prop) -> B))). Qed.
Lemma lem4938312 {B : Type'} (x : type161 B) : (term4228 B x) = (term4229 B x).
Proof. exact (MK_COMB (@lem4938311 B) (@lem4938310 B x)). Qed.
Lemma lem4938313 {B : Type'} : (term4230 B) = (term4231 B).
Proof. exact (fun_ext (fun x : type161 B => @lem4938312 B x)). Qed.
Lemma lem4938314 {B : Type'} : (@ex (((B -> Prop) -> B) -> ((B -> Prop) -> Prop) -> B -> Prop)) = (@ex (((B -> Prop) -> B) -> ((B -> Prop) -> Prop) -> B -> Prop)).
Proof. exact (eq_refl (@ex (((B -> Prop) -> B) -> ((B -> Prop) -> Prop) -> B -> Prop))). Qed.
Lemma lem4938315 {B : Type'} : (term4213 B) = (term4232 B).
Proof. exact (MK_COMB (@lem4938314 B) (@lem4938313 B)). Qed.
Lemma lem4938316 {B : Type'} : ((term4212 B) = (term4213 B)) = ((term4209 B) = (term4232 B)).
Proof. exact (MK_COMB (@lem4938304 B) (@lem4938315 B)). Qed.
Lemma lem4938317 {B : Type'} : (term4209 B) = (term4232 B).
Proof. exact (EQ_MP (@lem4938316 B) (@lem4938291 B)). Qed.
Lemma lem4938319 {A B : Type'} (P : type1413 A B) : (term814 A B P) = (term815 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem4938320 {B : Type'} (P : type160 B) : (term4210 B P) = (term4211 B P).
Proof. exact (@lem4938319 (type684 B) (type178 B) P). Qed.
Lemma lem4938321 {B : Type'} (x : type161 B) : (term4233 B x) = (term4234 B x).
Proof. exact (@lem4938320 B (term4235 B x)). Qed.
Lemma lem4938322 {B : Type'} (x : type161 B) (f : type684 B) : (term4236 B x f) = (term4237 B x f).
Proof. exact (eq_refl (term4236 B x f)). Qed.
Lemma lem4938323 {B : Type'} (y : type178 B) : y = y.
Proof. exact (eq_refl y). Qed.
Lemma lem4938324 {B : Type'} (x : type161 B) (f : type684 B) (y : type178 B) : (term4238 B x f y) = (term4239 B x f y).
Proof. exact (MK_COMB (@lem4938322 B x f) (@lem4938323 B y)). Qed.
Lemma lem4938325 {B : Type'} (x : type161 B) (y : type178 B) (f : type684 B) : (term4239 B x f y) = (term4240 B x y f).
Proof. exact (eq_refl (term4239 B x f y)). Qed.
Lemma lem4938326 {B : Type'} (x : type161 B) (y : type178 B) (f : type684 B) : (term4238 B x f y) = (term4240 B x y f).
Proof. exact (TRANS (@lem4938324 B x f y) (@lem4938325 B x y f)). Qed.
Lemma lem4938327 {B : Type'} (x : type161 B) (f : type684 B) : (term4241 B x f) = (term4237 B x f).
Proof. exact (fun_ext (fun y : type178 B => @lem4938326 B x y f)). Qed.
Lemma lem4938328 {B : Type'} : (@ex (((B -> Prop) -> Prop) -> B -> Prop)) = (@ex (((B -> Prop) -> Prop) -> B -> Prop)).
Proof. exact (eq_refl (@ex (((B -> Prop) -> Prop) -> B -> Prop))). Qed.
Lemma lem4938329 {B : Type'} (x : type161 B) (f : type684 B) : (term4242 B x f) = (term4225 B x f).
Proof. exact (MK_COMB (@lem4938328 B) (@lem4938327 B x f)). Qed.
Lemma lem4938330 {B : Type'} (x : type161 B) : (term4243 B x) = (term4227 B x).
Proof. exact (fun_ext (fun f : type684 B => @lem4938329 B x f)). Qed.
Lemma lem4938331 {B : Type'} : (@all ((B -> Prop) -> B)) = (@all ((B -> Prop) -> B)).
Proof. exact (eq_refl (@all ((B -> Prop) -> B))). Qed.
Lemma lem4938332 {B : Type'} (x : type161 B) : (term4233 B x) = (term4229 B x).
Proof. exact (MK_COMB (@lem4938331 B) (@lem4938330 B x)). Qed.
Lemma lem4938333 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4938334 {B : Type'} (x : type161 B) : (term4244 B x) = (term4245 B x).
Proof. exact (MK_COMB (@lem4938333) (@lem4938332 B x)). Qed.
Lemma lem4938335 {B : Type'} (x : type161 B) (f : type684 B) : (term4236 B x f) = (term4237 B x f).
Proof. exact (eq_refl (term4236 B x f)). Qed.
Lemma lem4938336 {B : Type'} (y : type161 B) (f : type684 B) : (y f) = (y f).
Proof. exact (eq_refl (y f)). Qed.
Lemma lem4938337 {B : Type'} (x : type161 B) (y : type161 B) (f : type684 B) : (term4246 B x y f) = (term4247 B x y f).
Proof. exact (MK_COMB (@lem4938335 B x f) (@lem4938336 B y f)). Qed.
Lemma lem4938338 {B : Type'} (x : type161 B) (y : type161 B) (f : type684 B) : (term4247 B x y f) = (term4248 B x y f).
Proof. exact (eq_refl (term4247 B x y f)). Qed.
Lemma lem4938339 {B : Type'} (x : type161 B) (y : type161 B) (f : type684 B) : (term4246 B x y f) = (term4248 B x y f).
Proof. exact (TRANS (@lem4938337 B x y f) (@lem4938338 B x y f)). Qed.
Lemma lem4938340 {B : Type'} (x : type161 B) (y : type161 B) : (term4249 B x y) = (term4250 B x y).
Proof. exact (fun_ext (fun f : type684 B => @lem4938339 B x y f)). Qed.
Lemma lem4938341 {B : Type'} : (@all ((B -> Prop) -> B)) = (@all ((B -> Prop) -> B)).
Proof. exact (eq_refl (@all ((B -> Prop) -> B))). Qed.
Lemma lem4938342 {B : Type'} (x : type161 B) (y : type161 B) : (term4251 B x y) = (term4252 B x y).
Proof. exact (MK_COMB (@lem4938341 B) (@lem4938340 B x y)). Qed.
Lemma lem4938343 {B : Type'} (x : type161 B) : (term4253 B x) = (term4254 B x).
Proof. exact (fun_ext (fun y : type161 B => @lem4938342 B x y)). Qed.
Lemma lem4938344 {B : Type'} : (@ex (((B -> Prop) -> B) -> ((B -> Prop) -> Prop) -> B -> Prop)) = (@ex (((B -> Prop) -> B) -> ((B -> Prop) -> Prop) -> B -> Prop)).
Proof. exact (eq_refl (@ex (((B -> Prop) -> B) -> ((B -> Prop) -> Prop) -> B -> Prop))). Qed.
Lemma lem4938345 {B : Type'} (x : type161 B) : (term4234 B x) = (term4255 B x).
Proof. exact (MK_COMB (@lem4938344 B) (@lem4938343 B x)). Qed.
Lemma lem4938346 {B : Type'} (x : type161 B) : ((term4233 B x) = (term4234 B x)) = ((term4229 B x) = (term4255 B x)).
Proof. exact (MK_COMB (@lem4938334 B x) (@lem4938345 B x)). Qed.
Lemma lem4938347 {B : Type'} (x : type161 B) : (term4229 B x) = (term4255 B x).
Proof. exact (EQ_MP (@lem4938346 B x) (@lem4938321 B x)). Qed.
Lemma lem4938348 {B : Type'} : (term4231 B) = (term4256 B).
Proof. exact (fun_ext (fun x : type161 B => @lem4938347 B x)). Qed.
Lemma lem4938349 {B : Type'} : (@ex (((B -> Prop) -> B) -> ((B -> Prop) -> Prop) -> B -> Prop)) = (@ex (((B -> Prop) -> B) -> ((B -> Prop) -> Prop) -> B -> Prop)).
Proof. exact (eq_refl (@ex (((B -> Prop) -> B) -> ((B -> Prop) -> Prop) -> B -> Prop))). Qed.
Lemma lem4938350 {B : Type'} : (term4232 B) = (term4257 B).
Proof. exact (MK_COMB (@lem4938349 B) (@lem4938348 B)). Qed.
Lemma lem4938351 {B : Type'} : (term4209 B) = (term4257 B).
Proof. exact (TRANS (@lem4938317 B) (@lem4938350 B)). Qed.
Lemma lem4938353 {B : Type'} : (term4093 B) = (term4257 B).
Proof. exact (TRANS (@lem4938287 B) (@lem4938351 B)). Qed.
Lemma lem4938354 {B : Type'} : (term2711 B) = (term4257 B).
Proof. exact (TRANS (@lem4938002 B) (@lem4938353 B)). Qed.
Lemma lem4938355 {B : Type'} (h1 : term2711 B) : term4257 B.
Proof. exact (EQ_MP (@lem4938354 B) (@lem4934986 B h1)). Qed.
Lemma lem4938370 {B : Type'} (s : nat -> Prop) (f : nat -> B) (x : nat) (y : nat) : (term4258 B s f x y) = (term4259 B s f x y).
Proof. exact (@lem17362 (term4260 B s x f y) (x = y)). Qed.
Lemma lem4938371 (P : nat -> Prop) : (term4261 P) = (term4262 P).
Proof. exact (@lem18392 nat P). Qed.
Lemma lem4938372 {B : Type'} (s : nat -> Prop) (f : nat -> B) (x : nat) : (term4263 B s f x) = (term4264 B s f x).
Proof. exact (@lem4938371 (term2784 B s f x)). Qed.
Lemma lem4938373 {B : Type'} (s : nat -> Prop) (f : nat -> B) (x : nat) (y : nat) : (term4265 B s f x y) = (term2783 B s f x y).
Proof. exact (eq_refl (term4265 B s f x y)). Qed.
Lemma lem4938374 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem4938375 {B : Type'} (s : nat -> Prop) (f : nat -> B) (x : nat) (y : nat) : (term4266 B s f x y) = (term4258 B s f x y).
Proof. exact (MK_COMB (@lem4938374) (@lem4938373 B s f x y)). Qed.
Lemma lem4938376 {B : Type'} (s : nat -> Prop) (f : nat -> B) (x : nat) (y : nat) : (term4266 B s f x y) = (term4259 B s f x y).
Proof. exact (TRANS (@lem4938375 B s f x y) (@lem4938370 B s f x y)). Qed.
Lemma lem4938377 {B : Type'} (s : nat -> Prop) (f : nat -> B) (x : nat) : (term4267 B s f x) = (term4268 B s f x).
Proof. exact (fun_ext (fun y : nat => @lem4938376 B s f x y)). Qed.
Lemma lem4938378 : (@ex nat) = (@ex nat).
Proof. exact (eq_refl (@ex nat)). Qed.
Lemma lem4938379 {B : Type'} (s : nat -> Prop) (f : nat -> B) (x : nat) : (term4264 B s f x) = (term4269 B s f x).
Proof. exact (MK_COMB (@lem4938378) (@lem4938377 B s f x)). Qed.
Lemma lem4938380 {B : Type'} (s : nat -> Prop) (f : nat -> B) (x : nat) : (term4263 B s f x) = (term4269 B s f x).
Proof. exact (TRANS (@lem4938372 B s f x) (@lem4938379 B s f x)). Qed.
Lemma lem4938381 (P : nat -> Prop) : (term4261 P) = (term4262 P).
Proof. exact (@lem18392 nat P). Qed.
Lemma lem4938382 {B : Type'} (s : nat -> Prop) (f : nat -> B) : (term4270 B s f) = (term4271 B s f).
Proof. exact (@lem4938381 (term2786 B s f)). Qed.
Lemma lem4938383 {B : Type'} (s : nat -> Prop) (f : nat -> B) (x : nat) : (term4272 B s f x) = (term2785 B s f x).
Proof. exact (eq_refl (term4272 B s f x)). Qed.
Lemma lem4938384 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem4938385 {B : Type'} (s : nat -> Prop) (f : nat -> B) (x : nat) : (term4273 B s f x) = (term4263 B s f x).
Proof. exact (MK_COMB (@lem4938384) (@lem4938383 B s f x)). Qed.
Lemma lem4938386 {B : Type'} (s : nat -> Prop) (f : nat -> B) (x : nat) : (term4273 B s f x) = (term4269 B s f x).
Proof. exact (TRANS (@lem4938385 B s f x) (@lem4938380 B s f x)). Qed.
Lemma lem4938387 {B : Type'} (s : nat -> Prop) (f : nat -> B) : (term4274 B s f) = (term4275 B s f).
Proof. exact (fun_ext (fun x : nat => @lem4938386 B s f x)). Qed.
Lemma lem4938388 : (@ex nat) = (@ex nat).
Proof. exact (eq_refl (@ex nat)). Qed.
Lemma lem4938389 {B : Type'} (s : nat -> Prop) (f : nat -> B) : (term4271 B s f) = (term4276 B s f).
Proof. exact (MK_COMB (@lem4938388) (@lem4938387 B s f)). Qed.
Lemma lem4938390 {B : Type'} (s : nat -> Prop) (f : nat -> B) : (term4270 B s f) = (term4276 B s f).
Proof. exact (TRANS (@lem4938382 B s f) (@lem4938389 B s f)). Qed.
Lemma lem4938391 (s : nat -> Prop) : (term4277 s) = (term4277 s).
Proof. exact (eq_refl (term4277 s)). Qed.
Lemma lem4938392 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4938393 {B : Type'} (s : nat -> Prop) (f : nat -> B) : (term4278 B s f) = (term4279 B s f).
Proof. exact (MK_COMB (@lem4938392) (@lem4938390 B s f)). Qed.
Lemma lem4938394 {B : Type'} (f : nat -> B) (s : nat -> Prop) : (term4280 B f s) = (term4281 B f s).
Proof. exact (MK_COMB (@lem4938393 B s f) (@lem4938391 s)). Qed.
Lemma lem4938395 {B : Type'} (f : nat -> B) (s : nat -> Prop) : (term4282 B f s) = (term4280 B f s).
Proof. exact (@lem17045 (term2787 B s f) (@FINITE nat s)). Qed.
Lemma lem4938396 {B : Type'} (f : nat -> B) (s : nat -> Prop) : (term4282 B f s) = (term4281 B f s).
Proof. exact (TRANS (@lem4938395 B f s) (@lem4938394 B f s)). Qed.
Lemma lem4938397 {B : Type'} (f : nat -> B) (s : nat -> Prop) : ((term2782 B f s) = (@CARD nat s)) = ((term2782 B f s) = (@CARD nat s)).
Proof. exact (eq_refl ((term2782 B f s) = (@CARD nat s))). Qed.
Lemma lem4938398 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4938399 {B : Type'} (f : nat -> B) (s : nat -> Prop) : (term4283 B f s) = (term4284 B f s).
Proof. exact (MK_COMB (@lem4938398) (@lem4938396 B f s)). Qed.
Lemma lem4938400 {B : Type'} (f : nat -> B) (s : nat -> Prop) : (term4285 B f s) = (term4286 B f s).
Proof. exact (MK_COMB (@lem4938399 B f s) (@lem4938397 B f s)). Qed.
Lemma lem4938401 {B : Type'} (f : nat -> B) (s : nat -> Prop) : (term2791 B f s) = (term4285 B f s).
Proof. exact (@lem17265 (term2789 B f s) ((term2782 B f s) = (@CARD nat s))). Qed.
Lemma lem4938402 {B : Type'} (f : nat -> B) (s : nat -> Prop) : (term2791 B f s) = (term4286 B f s).
Proof. exact (TRANS (@lem4938401 B f s) (@lem4938400 B f s)). Qed.
Lemma lem4938403 {B : Type'} (f : nat -> B) : (term2792 B f) = (term4287 B f).
Proof. exact (fun_ext (fun s : nat -> Prop => @lem4938402 B f s)). Qed.
Lemma lem4938404 : (@all (nat -> Prop)) = (@all (nat -> Prop)).
Proof. exact (eq_refl (@all (nat -> Prop))). Qed.
Lemma lem4938405 {B : Type'} (f : nat -> B) : (term2793 B f) = (term4288 B f).
Proof. exact (MK_COMB (@lem4938404) (@lem4938403 B f)). Qed.
Lemma lem4938406 {B : Type'} : (term2794 B) = (term4289 B).
Proof. exact (fun_ext (fun f : nat -> B => @lem4938405 B f)). Qed.
Lemma lem4938407 {B : Type'} : (@all (nat -> B)) = (@all (nat -> B)).
Proof. exact (eq_refl (@all (nat -> B))). Qed.
Lemma lem4938408 {B : Type'} : (term2710 B) = (term4290 B).
Proof. exact (MK_COMB (@lem4938407 B) (@lem4938406 B)). Qed.
Lemma lem4938515 {A : Type'} (P : A -> Prop) (Q : Prop) : (term1154 A P Q) = (term1155 A P Q).
Proof. exact (EQ_MP (@lem18905 A P Q) (@lem18904 A P Q)). Qed.
Lemma lem4938516 (P : nat -> Prop) (Q : Prop) : (term4291 P Q) = (term4292 P Q).
Proof. exact (@lem4938515 nat P Q). Qed.
Lemma lem4938517 {B : Type'} (f : nat -> B) (s : nat -> Prop) : (term4293 B f s) = (term4294 B f s).
Proof. exact (@lem4938516 (term4275 B s f) (term4277 s)). Qed.
Lemma lem4938518 {B : Type'} (s : nat -> Prop) (f : nat -> B) (x : nat) : (term4295 B s f x) = (term4269 B s f x).
Proof. exact (eq_refl (term4295 B s f x)). Qed.
Lemma lem4938519 {B : Type'} (s : nat -> Prop) (f : nat -> B) : (term4296 B s f) = (term4275 B s f).
Proof. exact (fun_ext (fun x : nat => @lem4938518 B s f x)). Qed.
Lemma lem4938520 : (@ex nat) = (@ex nat).
Proof. exact (eq_refl (@ex nat)). Qed.
Lemma lem4938521 {B : Type'} (s : nat -> Prop) (f : nat -> B) : (term4297 B s f) = (term4276 B s f).
Proof. exact (MK_COMB (@lem4938520) (@lem4938519 B s f)). Qed.
Lemma lem4938522 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4938523 {B : Type'} (s : nat -> Prop) (f : nat -> B) : (term4298 B s f) = (term4279 B s f).
Proof. exact (MK_COMB (@lem4938522) (@lem4938521 B s f)). Qed.
Lemma lem4938524 (s : nat -> Prop) : (term4277 s) = (term4277 s).
Proof. exact (eq_refl (term4277 s)). Qed.
Lemma lem4938525 {B : Type'} (f : nat -> B) (s : nat -> Prop) : (term4293 B f s) = (term4281 B f s).
Proof. exact (MK_COMB (@lem4938523 B s f) (@lem4938524 s)). Qed.
Lemma lem4938526 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4938527 {B : Type'} (f : nat -> B) (s : nat -> Prop) : (term4299 B f s) = (term4300 B f s).
Proof. exact (MK_COMB (@lem4938526) (@lem4938525 B f s)). Qed.
Lemma lem4938528 {B : Type'} (s : nat -> Prop) (f : nat -> B) (x : nat) : (term4295 B s f x) = (term4269 B s f x).
Proof. exact (eq_refl (term4295 B s f x)). Qed.
Lemma lem4938529 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4938530 {B : Type'} (s : nat -> Prop) (f : nat -> B) (x : nat) : (term4301 B s f x) = (term4302 B s f x).
Proof. exact (MK_COMB (@lem4938529) (@lem4938528 B s f x)). Qed.
Lemma lem4938531 (s : nat -> Prop) : (term4277 s) = (term4277 s).
Proof. exact (eq_refl (term4277 s)). Qed.
Lemma lem4938532 {B : Type'} (f : nat -> B) (x : nat) (s : nat -> Prop) : (term4303 B f x s) = (term4304 B f x s).
Proof. exact (MK_COMB (@lem4938530 B s f x) (@lem4938531 s)). Qed.
Lemma lem4938533 {B : Type'} (f : nat -> B) (s : nat -> Prop) : (term4305 B f s) = (term4306 B f s).
Proof. exact (fun_ext (fun x : nat => @lem4938532 B f x s)). Qed.
Lemma lem4938534 : (@ex nat) = (@ex nat).
Proof. exact (eq_refl (@ex nat)). Qed.
Lemma lem4938535 {B : Type'} (f : nat -> B) (s : nat -> Prop) : (term4294 B f s) = (term4307 B f s).
Proof. exact (MK_COMB (@lem4938534) (@lem4938533 B f s)). Qed.
Lemma lem4938536 {B : Type'} (f : nat -> B) (s : nat -> Prop) : ((term4293 B f s) = (term4294 B f s)) = ((term4281 B f s) = (term4307 B f s)).
Proof. exact (MK_COMB (@lem4938527 B f s) (@lem4938535 B f s)). Qed.
Lemma lem4938537 {B : Type'} (f : nat -> B) (s : nat -> Prop) : (term4281 B f s) = (term4307 B f s).
Proof. exact (EQ_MP (@lem4938536 B f s) (@lem4938517 B f s)). Qed.
Lemma lem4938539 {A : Type'} (P : A -> Prop) (Q : Prop) : (term1154 A P Q) = (term1155 A P Q).
Proof. exact (EQ_MP (@lem18905 A P Q) (@lem18904 A P Q)). Qed.
Lemma lem4938540 (P : nat -> Prop) (Q : Prop) : (term4291 P Q) = (term4292 P Q).
Proof. exact (@lem4938539 nat P Q). Qed.
Lemma lem4938541 {B : Type'} (f : nat -> B) (x : nat) (s : nat -> Prop) : (term4308 B f x s) = (term4309 B f x s).
Proof. exact (@lem4938540 (term4268 B s f x) (term4277 s)). Qed.
Lemma lem4938542 {B : Type'} (s : nat -> Prop) (f : nat -> B) (x : nat) (y : nat) : (term4310 B s f x y) = (term4259 B s f x y).
Proof. exact (eq_refl (term4310 B s f x y)). Qed.
Lemma lem4938543 {B : Type'} (s : nat -> Prop) (f : nat -> B) (x : nat) : (term4311 B s f x) = (term4268 B s f x).
Proof. exact (fun_ext (fun y : nat => @lem4938542 B s f x y)). Qed.
Lemma lem4938544 : (@ex nat) = (@ex nat).
Proof. exact (eq_refl (@ex nat)). Qed.
Lemma lem4938545 {B : Type'} (s : nat -> Prop) (f : nat -> B) (x : nat) : (term4312 B s f x) = (term4269 B s f x).
Proof. exact (MK_COMB (@lem4938544) (@lem4938543 B s f x)). Qed.
Lemma lem4938546 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4938547 {B : Type'} (s : nat -> Prop) (f : nat -> B) (x : nat) : (term4313 B s f x) = (term4302 B s f x).
Proof. exact (MK_COMB (@lem4938546) (@lem4938545 B s f x)). Qed.
Lemma lem4938548 (s : nat -> Prop) : (term4277 s) = (term4277 s).
Proof. exact (eq_refl (term4277 s)). Qed.
Lemma lem4938549 {B : Type'} (f : nat -> B) (x : nat) (s : nat -> Prop) : (term4308 B f x s) = (term4304 B f x s).
Proof. exact (MK_COMB (@lem4938547 B s f x) (@lem4938548 s)). Qed.
Lemma lem4938550 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4938551 {B : Type'} (f : nat -> B) (x : nat) (s : nat -> Prop) : (term4314 B f x s) = (term4315 B f x s).
Proof. exact (MK_COMB (@lem4938550) (@lem4938549 B f x s)). Qed.
Lemma lem4938552 {B : Type'} (s : nat -> Prop) (f : nat -> B) (x : nat) (y : nat) : (term4310 B s f x y) = (term4259 B s f x y).
Proof. exact (eq_refl (term4310 B s f x y)). Qed.
Lemma lem4938553 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4938554 {B : Type'} (s : nat -> Prop) (f : nat -> B) (x : nat) (y : nat) : (term4316 B s f x y) = (term4317 B s f x y).
Proof. exact (MK_COMB (@lem4938553) (@lem4938552 B s f x y)). Qed.
Lemma lem4938555 (s : nat -> Prop) : (term4277 s) = (term4277 s).
Proof. exact (eq_refl (term4277 s)). Qed.
Lemma lem4938556 {B : Type'} (f : nat -> B) (x : nat) (y : nat) (s : nat -> Prop) : (term4318 B f x y s) = (term4319 B f x y s).
Proof. exact (MK_COMB (@lem4938554 B s f x y) (@lem4938555 s)). Qed.
Lemma lem4938557 {B : Type'} (f : nat -> B) (x : nat) (s : nat -> Prop) : (term4320 B f x s) = (term4321 B f x s).
Proof. exact (fun_ext (fun y : nat => @lem4938556 B f x y s)). Qed.
Lemma lem4938558 : (@ex nat) = (@ex nat).
Proof. exact (eq_refl (@ex nat)). Qed.
Lemma lem4938559 {B : Type'} (f : nat -> B) (x : nat) (s : nat -> Prop) : (term4309 B f x s) = (term4322 B f x s).
Proof. exact (MK_COMB (@lem4938558) (@lem4938557 B f x s)). Qed.
Lemma lem4938560 {B : Type'} (f : nat -> B) (x : nat) (s : nat -> Prop) : ((term4308 B f x s) = (term4309 B f x s)) = ((term4304 B f x s) = (term4322 B f x s)).
Proof. exact (MK_COMB (@lem4938551 B f x s) (@lem4938559 B f x s)). Qed.
Lemma lem4938561 {B : Type'} (f : nat -> B) (x : nat) (s : nat -> Prop) : (term4304 B f x s) = (term4322 B f x s).
Proof. exact (EQ_MP (@lem4938560 B f x s) (@lem4938541 B f x s)). Qed.
Lemma lem4938562 {B : Type'} (f : nat -> B) (s : nat -> Prop) : (term4306 B f s) = (term4323 B f s).
Proof. exact (fun_ext (fun x : nat => @lem4938561 B f x s)). Qed.
Lemma lem4938563 : (@ex nat) = (@ex nat).
Proof. exact (eq_refl (@ex nat)). Qed.
Lemma lem4938564 {B : Type'} (f : nat -> B) (s : nat -> Prop) : (term4307 B f s) = (term4324 B f s).
Proof. exact (MK_COMB (@lem4938563) (@lem4938562 B f s)). Qed.
Lemma lem4938565 {B : Type'} (f : nat -> B) (s : nat -> Prop) : (term4281 B f s) = (term4324 B f s).
Proof. exact (TRANS (@lem4938537 B f s) (@lem4938564 B f s)). Qed.
Lemma lem4938566 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4938567 {B : Type'} (f : nat -> B) (s : nat -> Prop) : (term4284 B f s) = (term4325 B f s).
Proof. exact (MK_COMB (@lem4938566) (@lem4938565 B f s)). Qed.
Lemma lem4938568 {B : Type'} (f : nat -> B) (s : nat -> Prop) : ((term2782 B f s) = (@CARD nat s)) = ((term2782 B f s) = (@CARD nat s)).
Proof. exact (eq_refl ((term2782 B f s) = (@CARD nat s))). Qed.
Lemma lem4938569 {B : Type'} (f : nat -> B) (s : nat -> Prop) : (term4286 B f s) = (term4326 B f s).
Proof. exact (MK_COMB (@lem4938567 B f s) (@lem4938568 B f s)). Qed.
Lemma lem4938571 {A : Type'} (P : A -> Prop) (Q : Prop) : (term1154 A P Q) = (term1155 A P Q).
Proof. exact (EQ_MP (@lem18905 A P Q) (@lem18904 A P Q)). Qed.
Lemma lem4938572 (P : nat -> Prop) (Q : Prop) : (term4291 P Q) = (term4292 P Q).
Proof. exact (@lem4938571 nat P Q). Qed.
Lemma lem4938573 {B : Type'} (f : nat -> B) (s : nat -> Prop) : (term4327 B f s) = (term4328 B f s).
Proof. exact (@lem4938572 (term4323 B f s) ((term2782 B f s) = (@CARD nat s))). Qed.
Lemma lem4938574 {B : Type'} (f : nat -> B) (x : nat) (s : nat -> Prop) : (term4329 B f s x) = (term4322 B f x s).
Proof. exact (eq_refl (term4329 B f s x)). Qed.
Lemma lem4938575 {B : Type'} (f : nat -> B) (s : nat -> Prop) : (term4330 B f s) = (term4323 B f s).
Proof. exact (fun_ext (fun x : nat => @lem4938574 B f x s)). Qed.
Lemma lem4938576 : (@ex nat) = (@ex nat).
Proof. exact (eq_refl (@ex nat)). Qed.
Lemma lem4938577 {B : Type'} (f : nat -> B) (s : nat -> Prop) : (term4331 B f s) = (term4324 B f s).
Proof. exact (MK_COMB (@lem4938576) (@lem4938575 B f s)). Qed.
Lemma lem4938578 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4938579 {B : Type'} (f : nat -> B) (s : nat -> Prop) : (term4332 B f s) = (term4325 B f s).
Proof. exact (MK_COMB (@lem4938578) (@lem4938577 B f s)). Qed.
Lemma lem4938580 {B : Type'} (f : nat -> B) (s : nat -> Prop) : ((term2782 B f s) = (@CARD nat s)) = ((term2782 B f s) = (@CARD nat s)).
Proof. exact (eq_refl ((term2782 B f s) = (@CARD nat s))). Qed.
Lemma lem4938581 {B : Type'} (f : nat -> B) (s : nat -> Prop) : (term4327 B f s) = (term4326 B f s).
Proof. exact (MK_COMB (@lem4938579 B f s) (@lem4938580 B f s)). Qed.
Lemma lem4938582 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4938583 {B : Type'} (f : nat -> B) (s : nat -> Prop) : (term4333 B f s) = (term4334 B f s).
Proof. exact (MK_COMB (@lem4938582) (@lem4938581 B f s)). Qed.
Lemma lem4938584 {B : Type'} (f : nat -> B) (x : nat) (s : nat -> Prop) : (term4329 B f s x) = (term4322 B f x s).
Proof. exact (eq_refl (term4329 B f s x)). Qed.
Lemma lem4938585 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4938586 {B : Type'} (f : nat -> B) (x : nat) (s : nat -> Prop) : (term4335 B f s x) = (term4336 B f x s).
Proof. exact (MK_COMB (@lem4938585) (@lem4938584 B f x s)). Qed.
Lemma lem4938587 {B : Type'} (f : nat -> B) (s : nat -> Prop) : ((term2782 B f s) = (@CARD nat s)) = ((term2782 B f s) = (@CARD nat s)).
Proof. exact (eq_refl ((term2782 B f s) = (@CARD nat s))). Qed.
Lemma lem4938588 {B : Type'} (x : nat) (f : nat -> B) (s : nat -> Prop) : (term4337 B x f s) = (term4338 B x f s).
Proof. exact (MK_COMB (@lem4938586 B f x s) (@lem4938587 B f s)). Qed.
Lemma lem4938589 {B : Type'} (f : nat -> B) (s : nat -> Prop) : (term4339 B f s) = (term4340 B f s).
Proof. exact (fun_ext (fun x : nat => @lem4938588 B x f s)). Qed.
Lemma lem4938590 : (@ex nat) = (@ex nat).
Proof. exact (eq_refl (@ex nat)). Qed.
Lemma lem4938591 {B : Type'} (f : nat -> B) (s : nat -> Prop) : (term4328 B f s) = (term4341 B f s).
Proof. exact (MK_COMB (@lem4938590) (@lem4938589 B f s)). Qed.
Lemma lem4938592 {B : Type'} (f : nat -> B) (s : nat -> Prop) : ((term4327 B f s) = (term4328 B f s)) = ((term4326 B f s) = (term4341 B f s)).
Proof. exact (MK_COMB (@lem4938583 B f s) (@lem4938591 B f s)). Qed.
Lemma lem4938593 {B : Type'} (f : nat -> B) (s : nat -> Prop) : (term4326 B f s) = (term4341 B f s).
Proof. exact (EQ_MP (@lem4938592 B f s) (@lem4938573 B f s)). Qed.
Lemma lem4938595 {A : Type'} (P : A -> Prop) (Q : Prop) : (term1154 A P Q) = (term1155 A P Q).
Proof. exact (EQ_MP (@lem18905 A P Q) (@lem18904 A P Q)). Qed.
Lemma lem4938596 (P : nat -> Prop) (Q : Prop) : (term4291 P Q) = (term4292 P Q).
Proof. exact (@lem4938595 nat P Q). Qed.
Lemma lem4938597 {B : Type'} (x : nat) (f : nat -> B) (s : nat -> Prop) : (term4342 B x f s) = (term4343 B x f s).
Proof. exact (@lem4938596 (term4321 B f x s) ((term2782 B f s) = (@CARD nat s))). Qed.
Lemma lem4938598 {B : Type'} (f : nat -> B) (x : nat) (y : nat) (s : nat -> Prop) : (term4344 B f x s y) = (term4319 B f x y s).
Proof. exact (eq_refl (term4344 B f x s y)). Qed.
Lemma lem4938599 {B : Type'} (f : nat -> B) (x : nat) (s : nat -> Prop) : (term4345 B f x s) = (term4321 B f x s).
Proof. exact (fun_ext (fun y : nat => @lem4938598 B f x y s)). Qed.
Lemma lem4938600 : (@ex nat) = (@ex nat).
Proof. exact (eq_refl (@ex nat)). Qed.
Lemma lem4938601 {B : Type'} (f : nat -> B) (x : nat) (s : nat -> Prop) : (term4346 B f x s) = (term4322 B f x s).
Proof. exact (MK_COMB (@lem4938600) (@lem4938599 B f x s)). Qed.
Lemma lem4938602 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4938603 {B : Type'} (f : nat -> B) (x : nat) (s : nat -> Prop) : (term4347 B f x s) = (term4336 B f x s).
Proof. exact (MK_COMB (@lem4938602) (@lem4938601 B f x s)). Qed.
Lemma lem4938604 {B : Type'} (f : nat -> B) (s : nat -> Prop) : ((term2782 B f s) = (@CARD nat s)) = ((term2782 B f s) = (@CARD nat s)).
Proof. exact (eq_refl ((term2782 B f s) = (@CARD nat s))). Qed.
Lemma lem4938605 {B : Type'} (x : nat) (f : nat -> B) (s : nat -> Prop) : (term4342 B x f s) = (term4338 B x f s).
Proof. exact (MK_COMB (@lem4938603 B f x s) (@lem4938604 B f s)). Qed.
Lemma lem4938606 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4938607 {B : Type'} (x : nat) (f : nat -> B) (s : nat -> Prop) : (term4348 B x f s) = (term4349 B x f s).
Proof. exact (MK_COMB (@lem4938606) (@lem4938605 B x f s)). Qed.
Lemma lem4938608 {B : Type'} (f : nat -> B) (x : nat) (y : nat) (s : nat -> Prop) : (term4344 B f x s y) = (term4319 B f x y s).
Proof. exact (eq_refl (term4344 B f x s y)). Qed.
Lemma lem4938609 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4938610 {B : Type'} (f : nat -> B) (x : nat) (y : nat) (s : nat -> Prop) : (term4350 B f x s y) = (term4351 B f x y s).
Proof. exact (MK_COMB (@lem4938609) (@lem4938608 B f x y s)). Qed.
Lemma lem4938611 {B : Type'} (f : nat -> B) (s : nat -> Prop) : ((term2782 B f s) = (@CARD nat s)) = ((term2782 B f s) = (@CARD nat s)).
Proof. exact (eq_refl ((term2782 B f s) = (@CARD nat s))). Qed.
Lemma lem4938612 {B : Type'} (x : nat) (y : nat) (f : nat -> B) (s : nat -> Prop) : (term4352 B x y f s) = (term4353 B x y f s).
Proof. exact (MK_COMB (@lem4938610 B f x y s) (@lem4938611 B f s)). Qed.
Lemma lem4938613 {B : Type'} (x : nat) (f : nat -> B) (s : nat -> Prop) : (term4354 B x f s) = (term4355 B x f s).
Proof. exact (fun_ext (fun y : nat => @lem4938612 B x y f s)). Qed.
Lemma lem4938614 : (@ex nat) = (@ex nat).
Proof. exact (eq_refl (@ex nat)). Qed.
Lemma lem4938615 {B : Type'} (x : nat) (f : nat -> B) (s : nat -> Prop) : (term4343 B x f s) = (term4356 B x f s).
Proof. exact (MK_COMB (@lem4938614) (@lem4938613 B x f s)). Qed.
Lemma lem4938616 {B : Type'} (x : nat) (f : nat -> B) (s : nat -> Prop) : ((term4342 B x f s) = (term4343 B x f s)) = ((term4338 B x f s) = (term4356 B x f s)).
Proof. exact (MK_COMB (@lem4938607 B x f s) (@lem4938615 B x f s)). Qed.
Lemma lem4938617 {B : Type'} (x : nat) (f : nat -> B) (s : nat -> Prop) : (term4338 B x f s) = (term4356 B x f s).
Proof. exact (EQ_MP (@lem4938616 B x f s) (@lem4938597 B x f s)). Qed.
Lemma lem4938618 {B : Type'} (f : nat -> B) (s : nat -> Prop) : (term4340 B f s) = (term4357 B f s).
Proof. exact (fun_ext (fun x : nat => @lem4938617 B x f s)). Qed.
Lemma lem4938619 : (@ex nat) = (@ex nat).
Proof. exact (eq_refl (@ex nat)). Qed.
Lemma lem4938620 {B : Type'} (f : nat -> B) (s : nat -> Prop) : (term4341 B f s) = (term4358 B f s).
Proof. exact (MK_COMB (@lem4938619) (@lem4938618 B f s)). Qed.
Lemma lem4938621 {B : Type'} (f : nat -> B) (s : nat -> Prop) : (term4326 B f s) = (term4358 B f s).
Proof. exact (TRANS (@lem4938593 B f s) (@lem4938620 B f s)). Qed.
Lemma lem4938622 {B : Type'} (f : nat -> B) (s : nat -> Prop) : (term4286 B f s) = (term4358 B f s).
Proof. exact (TRANS (@lem4938569 B f s) (@lem4938621 B f s)). Qed.
Lemma lem4938623 {B : Type'} (f : nat -> B) : (term4287 B f) = (term4359 B f).
Proof. exact (fun_ext (fun s : nat -> Prop => @lem4938622 B f s)). Qed.
Lemma lem4938624 : (@all (nat -> Prop)) = (@all (nat -> Prop)).
Proof. exact (eq_refl (@all (nat -> Prop))). Qed.
Lemma lem4938625 {B : Type'} (f : nat -> B) : (term4288 B f) = (term4360 B f).
Proof. exact (MK_COMB (@lem4938624) (@lem4938623 B f)). Qed.
Lemma lem4938627 {A B : Type'} (P : type1413 A B) : (term814 A B P) = (term815 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem4938628 (P : type991) : (term4361 P) = (term4362 P).
Proof. exact (@lem4938627 (nat -> Prop) nat P). Qed.
Lemma lem4938629 {B : Type'} (f : nat -> B) : (term4363 B f) = (term4364 B f).
Proof. exact (@lem4938628 (term4365 B f)). Qed.
Lemma lem4938630 {B : Type'} (f : nat -> B) (s : nat -> Prop) : (term4366 B f s) = (term4357 B f s).
Proof. exact (eq_refl (term4366 B f s)). Qed.
Lemma lem4938631 (x : nat) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem4938632 {B : Type'} (f : nat -> B) (s : nat -> Prop) (x : nat) : (term4367 B f s x) = (term4368 B f s x).
Proof. exact (MK_COMB (@lem4938630 B f s) (@lem4938631 x)). Qed.
Lemma lem4938633 {B : Type'} (x : nat) (f : nat -> B) (s : nat -> Prop) : (term4368 B f s x) = (term4356 B x f s).
Proof. exact (eq_refl (term4368 B f s x)). Qed.
Lemma lem4938634 {B : Type'} (x : nat) (f : nat -> B) (s : nat -> Prop) : (term4367 B f s x) = (term4356 B x f s).
Proof. exact (TRANS (@lem4938632 B f s x) (@lem4938633 B x f s)). Qed.
Lemma lem4938635 {B : Type'} (f : nat -> B) (s : nat -> Prop) : (term4369 B f s) = (term4357 B f s).
Proof. exact (fun_ext (fun x : nat => @lem4938634 B x f s)). Qed.
Lemma lem4938636 : (@ex nat) = (@ex nat).
Proof. exact (eq_refl (@ex nat)). Qed.
Lemma lem4938637 {B : Type'} (f : nat -> B) (s : nat -> Prop) : (term4370 B f s) = (term4358 B f s).
Proof. exact (MK_COMB (@lem4938636) (@lem4938635 B f s)). Qed.
Lemma lem4938638 {B : Type'} (f : nat -> B) : (term4371 B f) = (term4359 B f).
Proof. exact (fun_ext (fun s : nat -> Prop => @lem4938637 B f s)). Qed.
Lemma lem4938639 : (@all (nat -> Prop)) = (@all (nat -> Prop)).
Proof. exact (eq_refl (@all (nat -> Prop))). Qed.
Lemma lem4938640 {B : Type'} (f : nat -> B) : (term4363 B f) = (term4360 B f).
Proof. exact (MK_COMB (@lem4938639) (@lem4938638 B f)). Qed.
Lemma lem4938641 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4938642 {B : Type'} (f : nat -> B) : (term4372 B f) = (term4373 B f).
Proof. exact (MK_COMB (@lem4938641) (@lem4938640 B f)). Qed.
Lemma lem4938643 {B : Type'} (f : nat -> B) (s : nat -> Prop) : (term4366 B f s) = (term4357 B f s).
Proof. exact (eq_refl (term4366 B f s)). Qed.
Lemma lem4938644 (x : type994) (s : nat -> Prop) : (x s) = (x s).
Proof. exact (eq_refl (x s)). Qed.
Lemma lem4938645 {B : Type'} (f : nat -> B) (x : type994) (s : nat -> Prop) : (term4374 B f x s) = (term4375 B f x s).
Proof. exact (MK_COMB (@lem4938643 B f s) (@lem4938644 x s)). Qed.
Lemma lem4938646 {B : Type'} (x : type994) (f : nat -> B) (s : nat -> Prop) : (term4375 B f x s) = (term4376 B x f s).
Proof. exact (eq_refl (term4375 B f x s)). Qed.
Lemma lem4938647 {B : Type'} (x : type994) (f : nat -> B) (s : nat -> Prop) : (term4374 B f x s) = (term4376 B x f s).
Proof. exact (TRANS (@lem4938645 B f x s) (@lem4938646 B x f s)). Qed.
Lemma lem4938648 {B : Type'} (x : type994) (f : nat -> B) : (term4377 B f x) = (term4378 B x f).
Proof. exact (fun_ext (fun s : nat -> Prop => @lem4938647 B x f s)). Qed.
Lemma lem4938649 : (@all (nat -> Prop)) = (@all (nat -> Prop)).
Proof. exact (eq_refl (@all (nat -> Prop))). Qed.
Lemma lem4938650 {B : Type'} (x : type994) (f : nat -> B) : (term4379 B f x) = (term4380 B x f).
Proof. exact (MK_COMB (@lem4938649) (@lem4938648 B x f)). Qed.
Lemma lem4938651 {B : Type'} (f : nat -> B) : (term4381 B f) = (term4382 B f).
Proof. exact (fun_ext (fun x : type994 => @lem4938650 B x f)). Qed.
Lemma lem4938652 : (@ex ((nat -> Prop) -> nat)) = (@ex ((nat -> Prop) -> nat)).
Proof. exact (eq_refl (@ex ((nat -> Prop) -> nat))). Qed.
Lemma lem4938653 {B : Type'} (f : nat -> B) : (term4364 B f) = (term4383 B f).
Proof. exact (MK_COMB (@lem4938652) (@lem4938651 B f)). Qed.
Lemma lem4938654 {B : Type'} (f : nat -> B) : ((term4363 B f) = (term4364 B f)) = ((term4360 B f) = (term4383 B f)).
Proof. exact (MK_COMB (@lem4938642 B f) (@lem4938653 B f)). Qed.
Lemma lem4938655 {B : Type'} (f : nat -> B) : (term4360 B f) = (term4383 B f).
Proof. exact (EQ_MP (@lem4938654 B f) (@lem4938629 B f)). Qed.
Lemma lem4938657 {A B : Type'} (P : type1413 A B) : (term814 A B P) = (term815 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem4938658 (P : type991) : (term4361 P) = (term4362 P).
Proof. exact (@lem4938657 (nat -> Prop) nat P). Qed.
Lemma lem4938659 {B : Type'} (x : type994) (f : nat -> B) : (term4384 B x f) = (term4385 B x f).
Proof. exact (@lem4938658 (term4386 B x f)). Qed.
Lemma lem4938660 {B : Type'} (x : type994) (f : nat -> B) (s : nat -> Prop) : (term4387 B x f s) = (term4388 B x f s).
Proof. exact (eq_refl (term4387 B x f s)). Qed.
Lemma lem4938661 (y : nat) : y = y.
Proof. exact (eq_refl y). Qed.
Lemma lem4938662 {B : Type'} (x : type994) (f : nat -> B) (s : nat -> Prop) (y : nat) : (term4389 B x f s y) = (term4390 B x f s y).
Proof. exact (MK_COMB (@lem4938660 B x f s) (@lem4938661 y)). Qed.
Lemma lem4938663 {B : Type'} (x : type994) (y : nat) (f : nat -> B) (s : nat -> Prop) : (term4390 B x f s y) = (term4391 B x y f s).
Proof. exact (eq_refl (term4390 B x f s y)). Qed.
Lemma lem4938664 {B : Type'} (x : type994) (y : nat) (f : nat -> B) (s : nat -> Prop) : (term4389 B x f s y) = (term4391 B x y f s).
Proof. exact (TRANS (@lem4938662 B x f s y) (@lem4938663 B x y f s)). Qed.
Lemma lem4938665 {B : Type'} (x : type994) (f : nat -> B) (s : nat -> Prop) : (term4392 B x f s) = (term4388 B x f s).
Proof. exact (fun_ext (fun y : nat => @lem4938664 B x y f s)). Qed.
Lemma lem4938666 : (@ex nat) = (@ex nat).
Proof. exact (eq_refl (@ex nat)). Qed.
Lemma lem4938667 {B : Type'} (x : type994) (f : nat -> B) (s : nat -> Prop) : (term4393 B x f s) = (term4376 B x f s).
Proof. exact (MK_COMB (@lem4938666) (@lem4938665 B x f s)). Qed.
Lemma lem4938668 {B : Type'} (x : type994) (f : nat -> B) : (term4394 B x f) = (term4378 B x f).
Proof. exact (fun_ext (fun s : nat -> Prop => @lem4938667 B x f s)). Qed.
Lemma lem4938669 : (@all (nat -> Prop)) = (@all (nat -> Prop)).
Proof. exact (eq_refl (@all (nat -> Prop))). Qed.
Lemma lem4938670 {B : Type'} (x : type994) (f : nat -> B) : (term4384 B x f) = (term4380 B x f).
Proof. exact (MK_COMB (@lem4938669) (@lem4938668 B x f)). Qed.
Lemma lem4938671 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4938672 {B : Type'} (x : type994) (f : nat -> B) : (term4395 B x f) = (term4396 B x f).
Proof. exact (MK_COMB (@lem4938671) (@lem4938670 B x f)). Qed.
Lemma lem4938673 {B : Type'} (x : type994) (f : nat -> B) (s : nat -> Prop) : (term4387 B x f s) = (term4388 B x f s).
Proof. exact (eq_refl (term4387 B x f s)). Qed.
Lemma lem4938674 (y : type994) (s : nat -> Prop) : (y s) = (y s).
Proof. exact (eq_refl (y s)). Qed.
Lemma lem4938675 {B : Type'} (x : type994) (f : nat -> B) (y : type994) (s : nat -> Prop) : (term4397 B x f y s) = (term4398 B x f y s).
Proof. exact (MK_COMB (@lem4938673 B x f s) (@lem4938674 y s)). Qed.
Lemma lem4938676 {B : Type'} (x : type994) (y : type994) (f : nat -> B) (s : nat -> Prop) : (term4398 B x f y s) = (term4399 B x y f s).
Proof. exact (eq_refl (term4398 B x f y s)). Qed.
Lemma lem4938677 {B : Type'} (x : type994) (y : type994) (f : nat -> B) (s : nat -> Prop) : (term4397 B x f y s) = (term4399 B x y f s).
Proof. exact (TRANS (@lem4938675 B x f y s) (@lem4938676 B x y f s)). Qed.
Lemma lem4938678 {B : Type'} (x : type994) (y : type994) (f : nat -> B) : (term4400 B x f y) = (term4401 B x y f).
Proof. exact (fun_ext (fun s : nat -> Prop => @lem4938677 B x y f s)). Qed.
Lemma lem4938679 : (@all (nat -> Prop)) = (@all (nat -> Prop)).
Proof. exact (eq_refl (@all (nat -> Prop))). Qed.
Lemma lem4938680 {B : Type'} (x : type994) (y : type994) (f : nat -> B) : (term4402 B x f y) = (term4403 B x y f).
Proof. exact (MK_COMB (@lem4938679) (@lem4938678 B x y f)). Qed.
Lemma lem4938681 {B : Type'} (x : type994) (f : nat -> B) : (term4404 B x f) = (term4405 B x f).
Proof. exact (fun_ext (fun y : type994 => @lem4938680 B x y f)). Qed.
Lemma lem4938682 : (@ex ((nat -> Prop) -> nat)) = (@ex ((nat -> Prop) -> nat)).
Proof. exact (eq_refl (@ex ((nat -> Prop) -> nat))). Qed.
Lemma lem4938683 {B : Type'} (x : type994) (f : nat -> B) : (term4385 B x f) = (term4406 B x f).
Proof. exact (MK_COMB (@lem4938682) (@lem4938681 B x f)). Qed.
Lemma lem4938684 {B : Type'} (x : type994) (f : nat -> B) : ((term4384 B x f) = (term4385 B x f)) = ((term4380 B x f) = (term4406 B x f)).
Proof. exact (MK_COMB (@lem4938672 B x f) (@lem4938683 B x f)). Qed.
Lemma lem4938685 {B : Type'} (x : type994) (f : nat -> B) : (term4380 B x f) = (term4406 B x f).
Proof. exact (EQ_MP (@lem4938684 B x f) (@lem4938659 B x f)). Qed.
Lemma lem4938686 {B : Type'} (f : nat -> B) : (term4382 B f) = (term4407 B f).
Proof. exact (fun_ext (fun x : type994 => @lem4938685 B x f)). Qed.
Lemma lem4938687 : (@ex ((nat -> Prop) -> nat)) = (@ex ((nat -> Prop) -> nat)).
Proof. exact (eq_refl (@ex ((nat -> Prop) -> nat))). Qed.
Lemma lem4938688 {B : Type'} (f : nat -> B) : (term4383 B f) = (term4408 B f).
Proof. exact (MK_COMB (@lem4938687) (@lem4938686 B f)). Qed.
Lemma lem4938689 {B : Type'} (f : nat -> B) : (term4360 B f) = (term4408 B f).
Proof. exact (TRANS (@lem4938655 B f) (@lem4938688 B f)). Qed.
Lemma lem4938690 {B : Type'} (f : nat -> B) : (term4288 B f) = (term4408 B f).
Proof. exact (TRANS (@lem4938625 B f) (@lem4938689 B f)). Qed.
Lemma lem4938691 {B : Type'} : (term4289 B) = (term4409 B).
Proof. exact (fun_ext (fun f : nat -> B => @lem4938690 B f)). Qed.
Lemma lem4938692 {B : Type'} : (@all (nat -> B)) = (@all (nat -> B)).
Proof. exact (eq_refl (@all (nat -> B))). Qed.
Lemma lem4938693 {B : Type'} : (term4290 B) = (term4410 B).
Proof. exact (MK_COMB (@lem4938692 B) (@lem4938691 B)). Qed.
Lemma lem4938695 {A B : Type'} (P : type1413 A B) : (term814 A B P) = (term815 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem4938696 {B : Type'} (P : type965 B) : (term4411 B P) = (term4412 B P).
Proof. exact (@lem4938695 (nat -> B) type994 P). Qed.
Lemma lem4938697 {B : Type'} : (term4413 B) = (term4414 B).
Proof. exact (@lem4938696 B (term4415 B)). Qed.
Lemma lem4938698 {B : Type'} (f : nat -> B) : (term4416 B f) = (term4407 B f).
Proof. exact (eq_refl (term4416 B f)). Qed.
Lemma lem4938699 (x : type994) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem4938700 {B : Type'} (f : nat -> B) (x : type994) : (term4417 B f x) = (term4418 B f x).
Proof. exact (MK_COMB (@lem4938698 B f) (@lem4938699 x)). Qed.
Lemma lem4938701 {B : Type'} (x : type994) (f : nat -> B) : (term4418 B f x) = (term4406 B x f).
Proof. exact (eq_refl (term4418 B f x)). Qed.
Lemma lem4938702 {B : Type'} (x : type994) (f : nat -> B) : (term4417 B f x) = (term4406 B x f).
Proof. exact (TRANS (@lem4938700 B f x) (@lem4938701 B x f)). Qed.
Lemma lem4938703 {B : Type'} (f : nat -> B) : (term4419 B f) = (term4407 B f).
Proof. exact (fun_ext (fun x : type994 => @lem4938702 B x f)). Qed.
Lemma lem4938704 : (@ex ((nat -> Prop) -> nat)) = (@ex ((nat -> Prop) -> nat)).
Proof. exact (eq_refl (@ex ((nat -> Prop) -> nat))). Qed.
Lemma lem4938705 {B : Type'} (f : nat -> B) : (term4420 B f) = (term4408 B f).
Proof. exact (MK_COMB (@lem4938704) (@lem4938703 B f)). Qed.
Lemma lem4938706 {B : Type'} : (term4421 B) = (term4409 B).
Proof. exact (fun_ext (fun f : nat -> B => @lem4938705 B f)). Qed.
Lemma lem4938707 {B : Type'} : (@all (nat -> B)) = (@all (nat -> B)).
Proof. exact (eq_refl (@all (nat -> B))). Qed.
Lemma lem4938708 {B : Type'} : (term4413 B) = (term4410 B).
Proof. exact (MK_COMB (@lem4938707 B) (@lem4938706 B)). Qed.
Lemma lem4938709 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4938710 {B : Type'} : (term4422 B) = (term4423 B).
Proof. exact (MK_COMB (@lem4938709) (@lem4938708 B)). Qed.
Lemma lem4938711 {B : Type'} (f : nat -> B) : (term4416 B f) = (term4407 B f).
Proof. exact (eq_refl (term4416 B f)). Qed.
Lemma lem4938712 {B : Type'} (x : type969 B) (f : nat -> B) : (x f) = (x f).
Proof. exact (eq_refl (x f)). Qed.
Lemma lem4938713 {B : Type'} (x : type969 B) (f : nat -> B) : (term4424 B x f) = (term4425 B x f).
Proof. exact (MK_COMB (@lem4938711 B f) (@lem4938712 B x f)). Qed.
Lemma lem4938714 {B : Type'} (x : type969 B) (f : nat -> B) : (term4425 B x f) = (term4426 B x f).
Proof. exact (eq_refl (term4425 B x f)). Qed.
Lemma lem4938715 {B : Type'} (x : type969 B) (f : nat -> B) : (term4424 B x f) = (term4426 B x f).
Proof. exact (TRANS (@lem4938713 B x f) (@lem4938714 B x f)). Qed.
Lemma lem4938716 {B : Type'} (x : type969 B) : (term4427 B x) = (term4428 B x).
Proof. exact (fun_ext (fun f : nat -> B => @lem4938715 B x f)). Qed.
Lemma lem4938717 {B : Type'} : (@all (nat -> B)) = (@all (nat -> B)).
Proof. exact (eq_refl (@all (nat -> B))). Qed.
Lemma lem4938718 {B : Type'} (x : type969 B) : (term4429 B x) = (term4430 B x).
Proof. exact (MK_COMB (@lem4938717 B) (@lem4938716 B x)). Qed.
Lemma lem4938719 {B : Type'} : (term4431 B) = (term4432 B).
Proof. exact (fun_ext (fun x : type969 B => @lem4938718 B x)). Qed.
Lemma lem4938720 {B : Type'} : (@ex ((nat -> B) -> (nat -> Prop) -> nat)) = (@ex ((nat -> B) -> (nat -> Prop) -> nat)).
Proof. exact (eq_refl (@ex ((nat -> B) -> (nat -> Prop) -> nat))). Qed.
Lemma lem4938721 {B : Type'} : (term4414 B) = (term4433 B).
Proof. exact (MK_COMB (@lem4938720 B) (@lem4938719 B)). Qed.
Lemma lem4938722 {B : Type'} : ((term4413 B) = (term4414 B)) = ((term4410 B) = (term4433 B)).
Proof. exact (MK_COMB (@lem4938710 B) (@lem4938721 B)). Qed.
Lemma lem4938723 {B : Type'} : (term4410 B) = (term4433 B).
Proof. exact (EQ_MP (@lem4938722 B) (@lem4938697 B)). Qed.
Lemma lem4938725 {A B : Type'} (P : type1413 A B) : (term814 A B P) = (term815 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem4938726 {B : Type'} (P : type965 B) : (term4411 B P) = (term4412 B P).
Proof. exact (@lem4938725 (nat -> B) type994 P). Qed.
Lemma lem4938727 {B : Type'} (x : type969 B) : (term4434 B x) = (term4435 B x).
Proof. exact (@lem4938726 B (term4436 B x)). Qed.
Lemma lem4938728 {B : Type'} (x : type969 B) (f : nat -> B) : (term4437 B x f) = (term4438 B x f).
Proof. exact (eq_refl (term4437 B x f)). Qed.
Lemma lem4938729 (y : type994) : y = y.
Proof. exact (eq_refl y). Qed.
Lemma lem4938730 {B : Type'} (x : type969 B) (f : nat -> B) (y : type994) : (term4439 B x f y) = (term4440 B x f y).
Proof. exact (MK_COMB (@lem4938728 B x f) (@lem4938729 y)). Qed.
Lemma lem4938731 {B : Type'} (x : type969 B) (y : type994) (f : nat -> B) : (term4440 B x f y) = (term4441 B x y f).
Proof. exact (eq_refl (term4440 B x f y)). Qed.
Lemma lem4938732 {B : Type'} (x : type969 B) (y : type994) (f : nat -> B) : (term4439 B x f y) = (term4441 B x y f).
Proof. exact (TRANS (@lem4938730 B x f y) (@lem4938731 B x y f)). Qed.
Lemma lem4938733 {B : Type'} (x : type969 B) (f : nat -> B) : (term4442 B x f) = (term4438 B x f).
Proof. exact (fun_ext (fun y : type994 => @lem4938732 B x y f)). Qed.
Lemma lem4938734 : (@ex ((nat -> Prop) -> nat)) = (@ex ((nat -> Prop) -> nat)).
Proof. exact (eq_refl (@ex ((nat -> Prop) -> nat))). Qed.
Lemma lem4938735 {B : Type'} (x : type969 B) (f : nat -> B) : (term4443 B x f) = (term4426 B x f).
Proof. exact (MK_COMB (@lem4938734) (@lem4938733 B x f)). Qed.
Lemma lem4938736 {B : Type'} (x : type969 B) : (term4444 B x) = (term4428 B x).
Proof. exact (fun_ext (fun f : nat -> B => @lem4938735 B x f)). Qed.
Lemma lem4938737 {B : Type'} : (@all (nat -> B)) = (@all (nat -> B)).
Proof. exact (eq_refl (@all (nat -> B))). Qed.
Lemma lem4938738 {B : Type'} (x : type969 B) : (term4434 B x) = (term4430 B x).
Proof. exact (MK_COMB (@lem4938737 B) (@lem4938736 B x)). Qed.
Lemma lem4938739 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4938740 {B : Type'} (x : type969 B) : (term4445 B x) = (term4446 B x).
Proof. exact (MK_COMB (@lem4938739) (@lem4938738 B x)). Qed.
Lemma lem4938741 {B : Type'} (x : type969 B) (f : nat -> B) : (term4437 B x f) = (term4438 B x f).
Proof. exact (eq_refl (term4437 B x f)). Qed.
Lemma lem4938742 {B : Type'} (y : type969 B) (f : nat -> B) : (y f) = (y f).
Proof. exact (eq_refl (y f)). Qed.
Lemma lem4938743 {B : Type'} (x : type969 B) (y : type969 B) (f : nat -> B) : (term4447 B x y f) = (term4448 B x y f).
Proof. exact (MK_COMB (@lem4938741 B x f) (@lem4938742 B y f)). Qed.
Lemma lem4938744 {B : Type'} (x : type969 B) (y : type969 B) (f : nat -> B) : (term4448 B x y f) = (term4449 B x y f).
Proof. exact (eq_refl (term4448 B x y f)). Qed.
Lemma lem4938745 {B : Type'} (x : type969 B) (y : type969 B) (f : nat -> B) : (term4447 B x y f) = (term4449 B x y f).
Proof. exact (TRANS (@lem4938743 B x y f) (@lem4938744 B x y f)). Qed.
Lemma lem4938746 {B : Type'} (x : type969 B) (y : type969 B) : (term4450 B x y) = (term4451 B x y).
Proof. exact (fun_ext (fun f : nat -> B => @lem4938745 B x y f)). Qed.
Lemma lem4938747 {B : Type'} : (@all (nat -> B)) = (@all (nat -> B)).
Proof. exact (eq_refl (@all (nat -> B))). Qed.
Lemma lem4938748 {B : Type'} (x : type969 B) (y : type969 B) : (term4452 B x y) = (term4453 B x y).
Proof. exact (MK_COMB (@lem4938747 B) (@lem4938746 B x y)). Qed.
Lemma lem4938749 {B : Type'} (x : type969 B) : (term4454 B x) = (term4455 B x).
Proof. exact (fun_ext (fun y : type969 B => @lem4938748 B x y)). Qed.
Lemma lem4938750 {B : Type'} : (@ex ((nat -> B) -> (nat -> Prop) -> nat)) = (@ex ((nat -> B) -> (nat -> Prop) -> nat)).
Proof. exact (eq_refl (@ex ((nat -> B) -> (nat -> Prop) -> nat))). Qed.
Lemma lem4938751 {B : Type'} (x : type969 B) : (term4435 B x) = (term4456 B x).
Proof. exact (MK_COMB (@lem4938750 B) (@lem4938749 B x)). Qed.
Lemma lem4938752 {B : Type'} (x : type969 B) : ((term4434 B x) = (term4435 B x)) = ((term4430 B x) = (term4456 B x)).
Proof. exact (MK_COMB (@lem4938740 B x) (@lem4938751 B x)). Qed.
Lemma lem4938753 {B : Type'} (x : type969 B) : (term4430 B x) = (term4456 B x).
Proof. exact (EQ_MP (@lem4938752 B x) (@lem4938727 B x)). Qed.
Lemma lem4938754 {B : Type'} : (term4432 B) = (term4457 B).
Proof. exact (fun_ext (fun x : type969 B => @lem4938753 B x)). Qed.
Lemma lem4938755 {B : Type'} : (@ex ((nat -> B) -> (nat -> Prop) -> nat)) = (@ex ((nat -> B) -> (nat -> Prop) -> nat)).
Proof. exact (eq_refl (@ex ((nat -> B) -> (nat -> Prop) -> nat))). Qed.
Lemma lem4938756 {B : Type'} : (term4433 B) = (term4458 B).
Proof. exact (MK_COMB (@lem4938755 B) (@lem4938754 B)). Qed.
Lemma lem4938757 {B : Type'} : (term4410 B) = (term4458 B).
Proof. exact (TRANS (@lem4938723 B) (@lem4938756 B)). Qed.
Lemma lem4938759 {B : Type'} : (term4290 B) = (term4458 B).
Proof. exact (TRANS (@lem4938693 B) (@lem4938757 B)). Qed.
Lemma lem4938760 {B : Type'} : (term2710 B) = (term4458 B).
Proof. exact (TRANS (@lem4938408 B) (@lem4938759 B)). Qed.
Lemma lem4938761 {B : Type'} (h1 : term2710 B) : term4458 B.
Proof. exact (EQ_MP (@lem4938760 B) (@lem4934987 B h1)). Qed.
Lemma lem4938851 {B : Type'} (a : B -> Prop) (b : B -> Prop) : (term4459 B a b) = (term4460 B a b).
Proof. exact (@lem17045 (@SUBSET B a b) ((@CARD B a) = (@CARD B b))). Qed.
Lemma lem4938853 {B : Type'} (b : B -> Prop) : (term1217 B b) = (term1217 B b).
Proof. exact (eq_refl (term1217 B b)). Qed.
Lemma lem4938854 {B : Type'} (a : B -> Prop) (b : B -> Prop) : (term4461 B a b) = (term4462 B a b).
Proof. exact (MK_COMB (@lem4938853 B b) (@lem4938851 B a b)). Qed.
Lemma lem4938855 {B : Type'} (a : B -> Prop) (b : B -> Prop) : (term4463 B a b) = (term4461 B a b).
Proof. exact (@lem17045 (@FINITE B b) (term4464 B a b)). Qed.
Lemma lem4938856 {B : Type'} (a : B -> Prop) (b : B -> Prop) : (term4463 B a b) = (term4462 B a b).
Proof. exact (TRANS (@lem4938855 B a b) (@lem4938854 B a b)). Qed.
Lemma lem4938857 {B : Type'} (a : B -> Prop) (b : B -> Prop) : (a = b) = (a = b).
Proof. exact (eq_refl (a = b)). Qed.
Lemma lem4938858 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4938859 {B : Type'} (a : B -> Prop) (b : B -> Prop) : (term4465 B a b) = (term4466 B a b).
Proof. exact (MK_COMB (@lem4938858) (@lem4938856 B a b)). Qed.
Lemma lem4938860 {B : Type'} (a : B -> Prop) (b : B -> Prop) : (term4467 B a b) = (term4468 B a b).
Proof. exact (MK_COMB (@lem4938859 B a b) (@lem4938857 B a b)). Qed.
Lemma lem4938861 {B : Type'} (a : B -> Prop) (b : B -> Prop) : (term2778 B a b) = (term4467 B a b).
Proof. exact (@lem17265 (term4469 B a b) (a = b)). Qed.
Lemma lem4938862 {B : Type'} (a : B -> Prop) (b : B -> Prop) : (term2778 B a b) = (term4468 B a b).
Proof. exact (TRANS (@lem4938861 B a b) (@lem4938860 B a b)). Qed.
Lemma lem4938863 {B : Type'} (a : B -> Prop) : (term2779 B a) = (term4470 B a).
Proof. exact (fun_ext (fun b : B -> Prop => @lem4938862 B a b)). Qed.
Lemma lem4938864 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4938865 {B : Type'} (a : B -> Prop) : (term2780 B a) = (term4471 B a).
Proof. exact (MK_COMB (@lem4938864 B) (@lem4938863 B a)). Qed.
Lemma lem4938866 {B : Type'} : (term2781 B) = (term4472 B).
Proof. exact (fun_ext (fun a : B -> Prop => @lem4938865 B a)). Qed.
Lemma lem4938867 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4938924 {B : Type'} : (term2704 B) = (term4473 B).
Proof. exact (MK_COMB (@lem4938867 B) (@lem4938866 B)). Qed.
Lemma lem4938925 {B : Type'} (h1 : term2704 B) : term4473 B.
Proof. exact (EQ_MP (@lem4938924 B) (@lem4934989 B h1)). Qed.
Lemma lem4938926 {B : Type'} (x : type969 B) (h1 : term4456 B x) : term4456 B x.
Proof. exact (h1). Qed.
Lemma lem4938928 {B : Type'} (x' : type161 B) (h1 : term4255 B x') : term4255 B x'.
Proof. exact (h1). Qed.
Lemma lem4938930 {A B : Type'} (x'' : type164 A B) (h1 : term4061 A B x'') : term4061 A B x''.
Proof. exact (h1). Qed.
Lemma lem4938932 {B : Type'} (x''' : type485 B) (h1 : term3085 B x''') : term3085 B x'''.
Proof. exact (h1). Qed.
Lemma lem4938934 {A : Type'} (x'''' : type694 A) (h1 : term3860 A x'''') : term3860 A x''''.
Proof. exact (h1). Qed.
Lemma lem4938936 {A B : Type'} (x''''' : type457 A B) (h1 : term3666 A B x''''') : term3666 A B x'''''.
Proof. exact (h1). Qed.
Lemma lem4938938 {A : Type'} (x'''''' : type413 A) (h1 : term3472 A x'''''') : term3472 A x''''''.
Proof. exact (h1). Qed.
Lemma lem4938940 {A B : Type'} (x''''''' : type529 A B) (h1 : term3278 A B x''''''') : term3278 A B x'''''''.
Proof. exact (h1). Qed.
Lemma lem4938941 {A B : Type'} (x''''''' : type529 A B) (y'''''''' : type529 A B) (h1 : term3275 A B x''''''' y'''''''') : term3275 A B x''''''' y''''''''.
Proof. exact (h1). Qed.
Lemma lem4938942 {A : Type'} (x'''''''' : type485 A) (h1 : term3085 A x'''''''') : term3085 A x''''''''.
Proof. exact (h1). Qed.
Lemma lem4938948 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4938949 {A : Type'} (f : type686 A) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> Prop) f x).
Proof. exact (@lem4938948 (A -> Prop) Prop f x). Qed.
Lemma lem4938951 {A : Type'} (s : A -> Prop) : (@FINITE A s) = (@I ((A -> Prop) -> Prop) (@FINITE A) s).
Proof. exact (@lem4938949 A (@FINITE A) s). Qed.
Lemma lem4938957 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4938958 {B : Type'} (f : type686 B) (x : B -> Prop) : (f x) = (@I ((B -> Prop) -> Prop) f x).
Proof. exact (@lem4938957 (B -> Prop) Prop f x). Qed.
Lemma lem4938960 {B : Type'} (t : B -> Prop) : (@FINITE B t) = (@I ((B -> Prop) -> Prop) (@FINITE B) t).
Proof. exact (@lem4938958 B (@FINITE B) t). Qed.
Lemma lem4938962 : (@eq nat) = (@eq nat).
Proof. exact (eq_refl (@eq nat)). Qed.
Lemma lem4938967 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4938968 {A : Type'} (f : type687 A) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> nat) f x).
Proof. exact (@lem4938967 (A -> Prop) nat f x). Qed.
Lemma lem4938970 {A : Type'} (s : A -> Prop) : (@CARD A s) = (@I ((A -> Prop) -> nat) (@CARD A) s).
Proof. exact (@lem4938968 A (@CARD A) s). Qed.
Lemma lem4938975 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4938976 {B : Type'} (f : type687 B) (x : B -> Prop) : (f x) = (@I ((B -> Prop) -> nat) f x).
Proof. exact (@lem4938975 (B -> Prop) nat f x). Qed.
Lemma lem4938978 {B : Type'} (t : B -> Prop) : (@CARD B t) = (@I ((B -> Prop) -> nat) (@CARD B) t).
Proof. exact (@lem4938976 B (@CARD B) t). Qed.
Lemma lem4938979 {A : Type'} (s : A -> Prop) : (term4474 A s) = (term4475 A s).
Proof. exact (MK_COMB (@lem4938962) (@lem4938970 A s)). Qed.
Lemma lem4938980 {A B : Type'} (s : A -> Prop) (t : B -> Prop) : ((@CARD A s) = (@CARD B t)) = ((@I ((A -> Prop) -> nat) (@CARD A) s) = (@I ((B -> Prop) -> nat) (@CARD B) t)).
Proof. exact (MK_COMB (@lem4938979 A s) (@lem4938978 B t)). Qed.
Lemma lem4938982 {B : Type'} : (@SUBSET B) = (@SUBSET B).
Proof. exact (eq_refl (@SUBSET B)). Qed.
Lemma lem4938989 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4938990 {A B : Type'} (f : type528 A B) (x : A -> B) : (f x) = (@I ((A -> B) -> (A -> Prop) -> B -> Prop) f x).
Proof. exact (@lem4938989 (A -> B) (type678 A B) f x). Qed.
Lemma lem4938991 {A B : Type'} (f : A -> B) : (@IMAGE A B f) = (@I ((A -> B) -> (A -> Prop) -> B -> Prop) (@IMAGE A B) f).
Proof. exact (@lem4938990 A B (@IMAGE A B) f). Qed.
Lemma lem4938992 {A : Type'} (s : A -> Prop) : s = s.
Proof. exact (eq_refl s). Qed.
Lemma lem4938993 {A B : Type'} (f : A -> B) (s : A -> Prop) : (@IMAGE A B f s) = (@I ((A -> B) -> (A -> Prop) -> B -> Prop) (@IMAGE A B) f s).
Proof. exact (MK_COMB (@lem4938991 A B f) (@lem4938992 A s)). Qed.
Lemma lem4938995 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4938996 {A B : Type'} (f : type678 A B) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> B -> Prop) f x).
Proof. exact (@lem4938995 (A -> Prop) (B -> Prop) f x). Qed.
Lemma lem4938997 {A B : Type'} (f : A -> B) (s : A -> Prop) : (@I ((A -> B) -> (A -> Prop) -> B -> Prop) (@IMAGE A B) f s) = (term2600 A B f s).
Proof. exact (@lem4938996 A B (@I ((A -> B) -> (A -> Prop) -> B -> Prop) (@IMAGE A B) f) s). Qed.
Lemma lem4938999 {A B : Type'} (f : A -> B) (s : A -> Prop) : (@IMAGE A B f s) = (term2600 A B f s).
Proof. exact (TRANS (@lem4938993 A B f s) (@lem4938997 A B f s)). Qed.
Lemma lem4939000 {B : Type'} (t : B -> Prop) : t = t.
Proof. exact (eq_refl t). Qed.
Lemma lem4939001 {A B : Type'} (f : A -> B) (s : A -> Prop) : (term4476 A B f s) = (term4477 A B f s).
Proof. exact (MK_COMB (@lem4938982 B) (@lem4938999 A B f s)). Qed.
Lemma lem4939002 {A B : Type'} (f : A -> B) (s : A -> Prop) (t : B -> Prop) : (term692 A B f s t) = (term4478 A B f s t).
Proof. exact (MK_COMB (@lem4939001 A B f s) (@lem4939000 B t)). Qed.
Lemma lem4939004 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4939005 {B : Type'} (f : type639 B) (x : B -> Prop) : (f x) = (@I ((B -> Prop) -> (B -> Prop) -> Prop) f x).
Proof. exact (@lem4939004 (B -> Prop) (type686 B) f x). Qed.
Lemma lem4939006 {A B : Type'} (f : A -> B) (s : A -> Prop) : (term4477 A B f s) = (term4479 A B f s).
Proof. exact (@lem4939005 B (@SUBSET B) (term2600 A B f s)). Qed.
Lemma lem4939007 {B : Type'} (t : B -> Prop) : t = t.
Proof. exact (eq_refl t). Qed.
Lemma lem4939008 {A B : Type'} (f : A -> B) (s : A -> Prop) (t : B -> Prop) : (term4478 A B f s t) = (term4480 A B f s t).
Proof. exact (MK_COMB (@lem4939006 A B f s) (@lem4939007 B t)). Qed.
Lemma lem4939010 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4939011 {B : Type'} (f : type686 B) (x : B -> Prop) : (f x) = (@I ((B -> Prop) -> Prop) f x).
Proof. exact (@lem4939010 (B -> Prop) Prop f x). Qed.
Lemma lem4939012 {A B : Type'} (f : A -> B) (s : A -> Prop) (t : B -> Prop) : (term4480 A B f s t) = (term4481 A B f s t).
Proof. exact (@lem4939011 B (term4479 A B f s) t). Qed.
Lemma lem4939013 {A B : Type'} (f : A -> B) (s : A -> Prop) (t : B -> Prop) : (term4478 A B f s t) = (term4481 A B f s t).
Proof. exact (TRANS (@lem4939008 A B f s t) (@lem4939012 A B f s t)). Qed.
Lemma lem4939014 {A B : Type'} (f : A -> B) (s : A -> Prop) (t : B -> Prop) : (term692 A B f s t) = (term4481 A B f s t).
Proof. exact (TRANS (@lem4939002 A B f s t) (@lem4939013 A B f s t)). Qed.
Lemma lem4939020 {A : Type'} (x : A) (y : A) : (x = y) = (x = y).
Proof. exact (eq_refl (x = y)). Qed.
Lemma lem4939021 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem4939022 {B : Type'} : (@eq B) = (@eq B).
Proof. exact (eq_refl (@eq B)). Qed.
Lemma lem4939027 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4939029 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (@lem4939027 A B f x). Qed.
Lemma lem4939034 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4939035 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (@lem4939034 A B f x). Qed.
Lemma lem4939037 {A B : Type'} (f : A -> B) (y : A) : (f y) = (@I (A -> B) f y).
Proof. exact (@lem4939035 A B f y). Qed.
Lemma lem4939038 {A B : Type'} (f : A -> B) (x : A) : (term855 A B f x) = (term856 A B f x).
Proof. exact (MK_COMB (@lem4939022 B) (@lem4939029 A B f x)). Qed.
Lemma lem4939039 {A B : Type'} (x : A) (f : A -> B) (y : A) : ((f x) = (f y)) = ((@I (A -> B) f x) = (@I (A -> B) f y)).
Proof. exact (MK_COMB (@lem4939038 A B f x) (@lem4939037 A B f y)). Qed.
Lemma lem4939040 {A B : Type'} (x : A) (f : A -> B) (y : A) : (term4482 A B x f y) = (term977 A B x f y).
Proof. exact (MK_COMB (@lem4939021) (@lem4939039 A B x f y)). Qed.
Lemma lem4939041 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem4939048 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4939049 {A : Type'} (f : type1364 A) (x : A) : (f x) = (@I (A -> (A -> Prop) -> Prop) f x).
Proof. exact (@lem4939048 A (type686 A) f x). Qed.
Lemma lem4939050 {A : Type'} (y : A) : (@IN A y) = (@I (A -> (A -> Prop) -> Prop) (@IN A) y).
Proof. exact (@lem4939049 A (@IN A) y). Qed.
Lemma lem4939051 {A : Type'} (s : A -> Prop) : s = s.
Proof. exact (eq_refl s). Qed.
Lemma lem4939052 {A : Type'} (y : A) (s : A -> Prop) : (@IN A y s) = (@I (A -> (A -> Prop) -> Prop) (@IN A) y s).
Proof. exact (MK_COMB (@lem4939050 A y) (@lem4939051 A s)). Qed.
Lemma lem4939054 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4939055 {A : Type'} (f : type686 A) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> Prop) f x).
Proof. exact (@lem4939054 (A -> Prop) Prop f x). Qed.
Lemma lem4939056 {A : Type'} (y : A) (s : A -> Prop) : (@I (A -> (A -> Prop) -> Prop) (@IN A) y s) = (term2593 A y s).
Proof. exact (@lem4939055 A (@I (A -> (A -> Prop) -> Prop) (@IN A) y) s). Qed.
Lemma lem4939058 {A : Type'} (y : A) (s : A -> Prop) : (@IN A y s) = (term2593 A y s).
Proof. exact (TRANS (@lem4939052 A y s) (@lem4939056 A y s)). Qed.
Lemma lem4939059 {A : Type'} (y : A) (s : A -> Prop) : (term801 A y s) = (term2595 A y s).
Proof. exact (MK_COMB (@lem4939041) (@lem4939058 A y s)). Qed.
Lemma lem4939060 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4939061 {A : Type'} (y : A) (s : A -> Prop) : (term793 A y s) = (term2596 A y s).
Proof. exact (MK_COMB (@lem4939060) (@lem4939059 A y s)). Qed.
Lemma lem4939062 {A B : Type'} (s : A -> Prop) (x : A) (f : A -> B) (y : A) : (term2882 A B s x f y) = (term4483 A B s x f y).
Proof. exact (MK_COMB (@lem4939061 A y s) (@lem4939040 A B x f y)). Qed.
Lemma lem4939063 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem4939070 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4939071 {A : Type'} (f : type1364 A) (x : A) : (f x) = (@I (A -> (A -> Prop) -> Prop) f x).
Proof. exact (@lem4939070 A (type686 A) f x). Qed.
Lemma lem4939072 {A : Type'} (x : A) : (@IN A x) = (@I (A -> (A -> Prop) -> Prop) (@IN A) x).
Proof. exact (@lem4939071 A (@IN A) x). Qed.
Lemma lem4939073 {A : Type'} (s : A -> Prop) : s = s.
Proof. exact (eq_refl s). Qed.
Lemma lem4939074 {A : Type'} (x : A) (s : A -> Prop) : (@IN A x s) = (@I (A -> (A -> Prop) -> Prop) (@IN A) x s).
Proof. exact (MK_COMB (@lem4939072 A x) (@lem4939073 A s)). Qed.
Lemma lem4939076 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4939077 {A : Type'} (f : type686 A) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> Prop) f x).
Proof. exact (@lem4939076 (A -> Prop) Prop f x). Qed.
Lemma lem4939078 {A : Type'} (x : A) (s : A -> Prop) : (@I (A -> (A -> Prop) -> Prop) (@IN A) x s) = (term2593 A x s).
Proof. exact (@lem4939077 A (@I (A -> (A -> Prop) -> Prop) (@IN A) x) s). Qed.
Lemma lem4939080 {A : Type'} (x : A) (s : A -> Prop) : (@IN A x s) = (term2593 A x s).
Proof. exact (TRANS (@lem4939074 A x s) (@lem4939078 A x s)). Qed.
Lemma lem4939081 {A : Type'} (x : A) (s : A -> Prop) : (term801 A x s) = (term2595 A x s).
Proof. exact (MK_COMB (@lem4939063) (@lem4939080 A x s)). Qed.
Lemma lem4939082 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4939083 {A : Type'} (x : A) (s : A -> Prop) : (term793 A x s) = (term2596 A x s).
Proof. exact (MK_COMB (@lem4939082) (@lem4939081 A x s)). Qed.
Lemma lem4939084 {A B : Type'} (s : A -> Prop) (x : A) (f : A -> B) (y : A) : (term2884 A B s x f y) = (term4484 A B s x f y).
Proof. exact (MK_COMB (@lem4939083 A x s) (@lem4939062 A B s x f y)). Qed.
Lemma lem4939085 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4939086 {A B : Type'} (s : A -> Prop) (x : A) (f : A -> B) (y : A) : (term2887 A B s x f y) = (term4485 A B s x f y).
Proof. exact (MK_COMB (@lem4939085) (@lem4939084 A B s x f y)). Qed.
Lemma lem4939087 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) (y : A) : (term2889 A B s f x y) = (term4486 A B s f x y).
Proof. exact (MK_COMB (@lem4939086 A B s x f y) (@lem4939020 A x y)). Qed.
Lemma lem4939088 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) : (term2890 A B s f x) = (term4487 A B s f x).
Proof. exact (fun_ext (fun y : A => @lem4939087 A B s f x y)). Qed.
Lemma lem4939089 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4939090 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) : (term2891 A B s f x) = (term4488 A B s f x).
Proof. exact (MK_COMB (@lem4939089 A) (@lem4939088 A B s f x)). Qed.
Lemma lem4939091 {A B : Type'} (s : A -> Prop) (f : A -> B) : (term2892 A B s f) = (term4489 A B s f).
Proof. exact (fun_ext (fun x : A => @lem4939090 A B s f x)). Qed.
Lemma lem4939092 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4939093 {A B : Type'} (s : A -> Prop) (f : A -> B) : (term2893 A B s f) = (term4490 A B s f).
Proof. exact (MK_COMB (@lem4939092 A) (@lem4939091 A B s f)). Qed.
Lemma lem4939094 {A B : Type'} (s : A -> Prop) (f : A -> B) (h1 : term696 A B s f) : term4490 A B s f.
Proof. exact (EQ_MP (@lem4939093 A B s f) (@lem4935095 A B s f h1)). Qed.
Lemma lem4939113 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem4939114 {B : Type'} : (@eq (B -> Prop)) = (@eq (B -> Prop)).
Proof. exact (eq_refl (@eq (B -> Prop))). Qed.
Lemma lem4939121 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4939122 {A B : Type'} (f : type528 A B) (x : A -> B) : (f x) = (@I ((A -> B) -> (A -> Prop) -> B -> Prop) f x).
Proof. exact (@lem4939121 (A -> B) (type678 A B) f x). Qed.
Lemma lem4939123 {A B : Type'} (f : A -> B) : (@IMAGE A B f) = (@I ((A -> B) -> (A -> Prop) -> B -> Prop) (@IMAGE A B) f).
Proof. exact (@lem4939122 A B (@IMAGE A B) f). Qed.
Lemma lem4939124 {A : Type'} (s : A -> Prop) : s = s.
Proof. exact (eq_refl s). Qed.
Lemma lem4939125 {A B : Type'} (f : A -> B) (s : A -> Prop) : (@IMAGE A B f s) = (@I ((A -> B) -> (A -> Prop) -> B -> Prop) (@IMAGE A B) f s).
Proof. exact (MK_COMB (@lem4939123 A B f) (@lem4939124 A s)). Qed.
Lemma lem4939127 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4939128 {A B : Type'} (f : type678 A B) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> B -> Prop) f x).
Proof. exact (@lem4939127 (A -> Prop) (B -> Prop) f x). Qed.
Lemma lem4939129 {A B : Type'} (f : A -> B) (s : A -> Prop) : (@I ((A -> B) -> (A -> Prop) -> B -> Prop) (@IMAGE A B) f s) = (term2600 A B f s).
Proof. exact (@lem4939128 A B (@I ((A -> B) -> (A -> Prop) -> B -> Prop) (@IMAGE A B) f) s). Qed.
Lemma lem4939131 {A B : Type'} (f : A -> B) (s : A -> Prop) : (@IMAGE A B f s) = (term2600 A B f s).
Proof. exact (TRANS (@lem4939125 A B f s) (@lem4939129 A B f s)). Qed.
Lemma lem4939132 {B : Type'} (t : B -> Prop) : t = t.
Proof. exact (eq_refl t). Qed.
Lemma lem4939133 {A B : Type'} (f : A -> B) (s : A -> Prop) : (term2601 A B f s) = (term2602 A B f s).
Proof. exact (MK_COMB (@lem4939114 B) (@lem4939131 A B f s)). Qed.
Lemma lem4939134 {A B : Type'} (f : A -> B) (s : A -> Prop) (t : B -> Prop) : ((@IMAGE A B f s) = t) = ((term2600 A B f s) = t).
Proof. exact (MK_COMB (@lem4939133 A B f s) (@lem4939132 B t)). Qed.
Lemma lem4939135 {A B : Type'} (f : A -> B) (s : A -> Prop) (t : B -> Prop) : (term2703 A B f s t) = (term4491 A B f s t).
Proof. exact (MK_COMB (@lem4939113) (@lem4939134 A B f s t)). Qed.
Lemma lem4939212 {B : Type'} (a : B -> Prop) (b : B -> Prop) : (a = b) = (a = b).
Proof. exact (eq_refl (a = b)). Qed.
Lemma lem4939213 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem4939214 : (@eq nat) = (@eq nat).
Proof. exact (eq_refl (@eq nat)). Qed.
Lemma lem4939219 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4939220 {B : Type'} (f : type687 B) (x : B -> Prop) : (f x) = (@I ((B -> Prop) -> nat) f x).
Proof. exact (@lem4939219 (B -> Prop) nat f x). Qed.
Lemma lem4939222 {B : Type'} (a : B -> Prop) : (@CARD B a) = (@I ((B -> Prop) -> nat) (@CARD B) a).
Proof. exact (@lem4939220 B (@CARD B) a). Qed.
Lemma lem4939227 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4939228 {B : Type'} (f : type687 B) (x : B -> Prop) : (f x) = (@I ((B -> Prop) -> nat) f x).
Proof. exact (@lem4939227 (B -> Prop) nat f x). Qed.
Lemma lem4939230 {B : Type'} (b : B -> Prop) : (@CARD B b) = (@I ((B -> Prop) -> nat) (@CARD B) b).
Proof. exact (@lem4939228 B (@CARD B) b). Qed.
Lemma lem4939231 {B : Type'} (a : B -> Prop) : (term4474 B a) = (term4475 B a).
Proof. exact (MK_COMB (@lem4939214) (@lem4939222 B a)). Qed.
Lemma lem4939232 {B : Type'} (a : B -> Prop) (b : B -> Prop) : ((@CARD B a) = (@CARD B b)) = ((@I ((B -> Prop) -> nat) (@CARD B) a) = (@I ((B -> Prop) -> nat) (@CARD B) b)).
Proof. exact (MK_COMB (@lem4939231 B a) (@lem4939230 B b)). Qed.
Lemma lem4939233 {B : Type'} (a : B -> Prop) (b : B -> Prop) : (term4492 B a b) = (term4493 B a b).
Proof. exact (MK_COMB (@lem4939213) (@lem4939232 B a b)). Qed.
Lemma lem4939234 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem4939241 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4939242 {B : Type'} (f : type639 B) (x : B -> Prop) : (f x) = (@I ((B -> Prop) -> (B -> Prop) -> Prop) f x).
Proof. exact (@lem4939241 (B -> Prop) (type686 B) f x). Qed.
Lemma lem4939243 {B : Type'} (a : B -> Prop) : (@SUBSET B a) = (@I ((B -> Prop) -> (B -> Prop) -> Prop) (@SUBSET B) a).
Proof. exact (@lem4939242 B (@SUBSET B) a). Qed.
Lemma lem4939244 {B : Type'} (b : B -> Prop) : b = b.
Proof. exact (eq_refl b). Qed.
Lemma lem4939245 {B : Type'} (a : B -> Prop) (b : B -> Prop) : (@SUBSET B a b) = (@I ((B -> Prop) -> (B -> Prop) -> Prop) (@SUBSET B) a b).
Proof. exact (MK_COMB (@lem4939243 B a) (@lem4939244 B b)). Qed.
Lemma lem4939247 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4939248 {B : Type'} (f : type686 B) (x : B -> Prop) : (f x) = (@I ((B -> Prop) -> Prop) f x).
Proof. exact (@lem4939247 (B -> Prop) Prop f x). Qed.
Lemma lem4939249 {B : Type'} (a : B -> Prop) (b : B -> Prop) : (@I ((B -> Prop) -> (B -> Prop) -> Prop) (@SUBSET B) a b) = (term4494 B a b).
Proof. exact (@lem4939248 B (@I ((B -> Prop) -> (B -> Prop) -> Prop) (@SUBSET B) a) b). Qed.
Lemma lem4939251 {B : Type'} (a : B -> Prop) (b : B -> Prop) : (@SUBSET B a b) = (term4494 B a b).
Proof. exact (TRANS (@lem4939245 B a b) (@lem4939249 B a b)). Qed.
Lemma lem4939252 {B : Type'} (a : B -> Prop) (b : B -> Prop) : (term4495 B a b) = (term4496 B a b).
Proof. exact (MK_COMB (@lem4939234) (@lem4939251 B a b)). Qed.
Lemma lem4939253 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4939254 {B : Type'} (a : B -> Prop) (b : B -> Prop) : (term4497 B a b) = (term4498 B a b).
Proof. exact (MK_COMB (@lem4939253) (@lem4939252 B a b)). Qed.
Lemma lem4939255 {B : Type'} (a : B -> Prop) (b : B -> Prop) : (term4460 B a b) = (term4499 B a b).
Proof. exact (MK_COMB (@lem4939254 B a b) (@lem4939233 B a b)). Qed.
Lemma lem4939256 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem4939261 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4939262 {B : Type'} (f : type686 B) (x : B -> Prop) : (f x) = (@I ((B -> Prop) -> Prop) f x).
Proof. exact (@lem4939261 (B -> Prop) Prop f x). Qed.
Lemma lem4939264 {B : Type'} (b : B -> Prop) : (@FINITE B b) = (@I ((B -> Prop) -> Prop) (@FINITE B) b).
Proof. exact (@lem4939262 B (@FINITE B) b). Qed.
Lemma lem4939265 {B : Type'} (b : B -> Prop) : (term1224 B b) = (term4500 B b).
Proof. exact (MK_COMB (@lem4939256) (@lem4939264 B b)). Qed.
Lemma lem4939266 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4939267 {B : Type'} (b : B -> Prop) : (term1217 B b) = (term4501 B b).
Proof. exact (MK_COMB (@lem4939266) (@lem4939265 B b)). Qed.
Lemma lem4939268 {B : Type'} (a : B -> Prop) (b : B -> Prop) : (term4462 B a b) = (term4502 B a b).
Proof. exact (MK_COMB (@lem4939267 B b) (@lem4939255 B a b)). Qed.
Lemma lem4939269 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4939270 {B : Type'} (a : B -> Prop) (b : B -> Prop) : (term4466 B a b) = (term4503 B a b).
Proof. exact (MK_COMB (@lem4939269) (@lem4939268 B a b)). Qed.
Lemma lem4939271 {B : Type'} (a : B -> Prop) (b : B -> Prop) : (term4468 B a b) = (term4504 B a b).
Proof. exact (MK_COMB (@lem4939270 B a b) (@lem4939212 B a b)). Qed.
Lemma lem4939272 {B : Type'} (a : B -> Prop) : (term4470 B a) = (term4505 B a).
Proof. exact (fun_ext (fun b : B -> Prop => @lem4939271 B a b)). Qed.
Lemma lem4939273 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4939274 {B : Type'} (a : B -> Prop) : (term4471 B a) = (term4506 B a).
Proof. exact (MK_COMB (@lem4939273 B) (@lem4939272 B a)). Qed.
Lemma lem4939275 {B : Type'} : (term4472 B) = (term4507 B).
Proof. exact (fun_ext (fun a : B -> Prop => @lem4939274 B a)). Qed.
Lemma lem4939276 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4939277 {B : Type'} : (term4473 B) = (term4508 B).
Proof. exact (MK_COMB (@lem4939276 B) (@lem4939275 B)). Qed.
Lemma lem4939278 {B : Type'} (h1 : term2704 B) : term4508 B.
Proof. exact (EQ_MP (@lem4939277 B) (@lem4938925 B h1)). Qed.
Lemma lem4940840 : (@eq nat) = (@eq nat).
Proof. exact (eq_refl (@eq nat)). Qed.
Lemma lem4940841 {B : Type'} : (@CARD B) = (@CARD B).
Proof. exact (eq_refl (@CARD B)). Qed.
Lemma lem4940848 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4940849 {A B : Type'} (f : type528 A B) (x : A -> B) : (f x) = (@I ((A -> B) -> (A -> Prop) -> B -> Prop) f x).
Proof. exact (@lem4940848 (A -> B) (type678 A B) f x). Qed.
Lemma lem4940850 {A B : Type'} (f : A -> B) : (@IMAGE A B f) = (@I ((A -> B) -> (A -> Prop) -> B -> Prop) (@IMAGE A B) f).
Proof. exact (@lem4940849 A B (@IMAGE A B) f). Qed.
Lemma lem4940851 {A : Type'} (s : A -> Prop) : s = s.
Proof. exact (eq_refl s). Qed.
Lemma lem4940852 {A B : Type'} (f : A -> B) (s : A -> Prop) : (@IMAGE A B f s) = (@I ((A -> B) -> (A -> Prop) -> B -> Prop) (@IMAGE A B) f s).
Proof. exact (MK_COMB (@lem4940850 A B f) (@lem4940851 A s)). Qed.
Lemma lem4940854 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4940855 {A B : Type'} (f : type678 A B) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> B -> Prop) f x).
Proof. exact (@lem4940854 (A -> Prop) (B -> Prop) f x). Qed.
Lemma lem4940856 {A B : Type'} (f : A -> B) (s : A -> Prop) : (@I ((A -> B) -> (A -> Prop) -> B -> Prop) (@IMAGE A B) f s) = (term2600 A B f s).
Proof. exact (@lem4940855 A B (@I ((A -> B) -> (A -> Prop) -> B -> Prop) (@IMAGE A B) f) s). Qed.
Lemma lem4940858 {A B : Type'} (f : A -> B) (s : A -> Prop) : (@IMAGE A B f s) = (term2600 A B f s).
Proof. exact (TRANS (@lem4940852 A B f s) (@lem4940856 A B f s)). Qed.
Lemma lem4940859 {A B : Type'} (f : A -> B) (s : A -> Prop) : (term2873 A B f s) = (term4509 A B f s).
Proof. exact (MK_COMB (@lem4940841 B) (@lem4940858 A B f s)). Qed.
Lemma lem4940861 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4940862 {B : Type'} (f : type687 B) (x : B -> Prop) : (f x) = (@I ((B -> Prop) -> nat) f x).
Proof. exact (@lem4940861 (B -> Prop) nat f x). Qed.
Lemma lem4940863 {A B : Type'} (f : A -> B) (s : A -> Prop) : (term4509 A B f s) = (term4510 A B f s).
Proof. exact (@lem4940862 B (@CARD B) (term2600 A B f s)). Qed.
Lemma lem4940864 {A B : Type'} (f : A -> B) (s : A -> Prop) : (term2873 A B f s) = (term4510 A B f s).
Proof. exact (TRANS (@lem4940859 A B f s) (@lem4940863 A B f s)). Qed.
Lemma lem4940869 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4940870 {A : Type'} (f : type687 A) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> nat) f x).
Proof. exact (@lem4940869 (A -> Prop) nat f x). Qed.
Lemma lem4940872 {A : Type'} (s : A -> Prop) : (@CARD A s) = (@I ((A -> Prop) -> nat) (@CARD A) s).
Proof. exact (@lem4940870 A (@CARD A) s). Qed.
Lemma lem4940873 {A B : Type'} (f : A -> B) (s : A -> Prop) : (term4511 A B f s) = (term4512 A B f s).
Proof. exact (MK_COMB (@lem4940840) (@lem4940864 A B f s)). Qed.
Lemma lem4940874 {A B : Type'} (f : A -> B) (s : A -> Prop) : ((term2873 A B f s) = (@CARD A s)) = ((term4510 A B f s) = (@I ((A -> Prop) -> nat) (@CARD A) s)).
Proof. exact (MK_COMB (@lem4940873 A B f s) (@lem4940872 A s)). Qed.
Lemma lem4940875 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem4940880 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4940881 {A : Type'} (f : type686 A) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> Prop) f x).
Proof. exact (@lem4940880 (A -> Prop) Prop f x). Qed.
Lemma lem4940883 {A : Type'} (s : A -> Prop) : (@FINITE A s) = (@I ((A -> Prop) -> Prop) (@FINITE A) s).
Proof. exact (@lem4940881 A (@FINITE A) s). Qed.
Lemma lem4940884 {A : Type'} (s : A -> Prop) : (term1224 A s) = (term4500 A s).
Proof. exact (MK_COMB (@lem4940875) (@lem4940883 A s)). Qed.
Lemma lem4940885 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem4940886 {A : Type'} : (@eq A) = (@eq A).
Proof. exact (eq_refl (@eq A)). Qed.
Lemma lem4940893 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4940894 {A B : Type'} (f : type529 A B) (x : A -> B) : (f x) = (@I ((A -> B) -> (A -> Prop) -> A) f x).
Proof. exact (@lem4940893 (A -> B) (type684 A) f x). Qed.
Lemma lem4940895 {A B : Type'} (x''''''' : type529 A B) (f : A -> B) : (x''''''' f) = (@I ((A -> B) -> (A -> Prop) -> A) x''''''' f).
Proof. exact (@lem4940894 A B x''''''' f). Qed.
Lemma lem4940896 {A : Type'} (s : A -> Prop) : s = s.
Proof. exact (eq_refl s). Qed.
Lemma lem4940897 {A B : Type'} (x''''''' : type529 A B) (f : A -> B) (s : A -> Prop) : (x''''''' f s) = (@I ((A -> B) -> (A -> Prop) -> A) x''''''' f s).
Proof. exact (MK_COMB (@lem4940895 A B x''''''' f) (@lem4940896 A s)). Qed.
Lemma lem4940899 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4940900 {A : Type'} (f : type684 A) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> A) f x).
Proof. exact (@lem4940899 (A -> Prop) A f x). Qed.
Lemma lem4940901 {A B : Type'} (x''''''' : type529 A B) (f : A -> B) (s : A -> Prop) : (@I ((A -> B) -> (A -> Prop) -> A) x''''''' f s) = (term4513 A B x''''''' f s).
Proof. exact (@lem4940900 A (@I ((A -> B) -> (A -> Prop) -> A) x''''''' f) s). Qed.
Lemma lem4940903 {A B : Type'} (x''''''' : type529 A B) (f : A -> B) (s : A -> Prop) : (x''''''' f s) = (term4513 A B x''''''' f s).
Proof. exact (TRANS (@lem4940897 A B x''''''' f s) (@lem4940901 A B x''''''' f s)). Qed.
Lemma lem4940910 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4940911 {A B : Type'} (f : type529 A B) (x : A -> B) : (f x) = (@I ((A -> B) -> (A -> Prop) -> A) f x).
Proof. exact (@lem4940910 (A -> B) (type684 A) f x). Qed.
Lemma lem4940912 {A B : Type'} (y'''''''' : type529 A B) (f : A -> B) : (y'''''''' f) = (@I ((A -> B) -> (A -> Prop) -> A) y'''''''' f).
Proof. exact (@lem4940911 A B y'''''''' f). Qed.
Lemma lem4940913 {A : Type'} (s : A -> Prop) : s = s.
Proof. exact (eq_refl s). Qed.
Lemma lem4940914 {A B : Type'} (y'''''''' : type529 A B) (f : A -> B) (s : A -> Prop) : (y'''''''' f s) = (@I ((A -> B) -> (A -> Prop) -> A) y'''''''' f s).
Proof. exact (MK_COMB (@lem4940912 A B y'''''''' f) (@lem4940913 A s)). Qed.
Lemma lem4940916 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4940917 {A : Type'} (f : type684 A) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> A) f x).
Proof. exact (@lem4940916 (A -> Prop) A f x). Qed.
Lemma lem4940918 {A B : Type'} (y'''''''' : type529 A B) (f : A -> B) (s : A -> Prop) : (@I ((A -> B) -> (A -> Prop) -> A) y'''''''' f s) = (term4513 A B y'''''''' f s).
Proof. exact (@lem4940917 A (@I ((A -> B) -> (A -> Prop) -> A) y'''''''' f) s). Qed.
Lemma lem4940920 {A B : Type'} (y'''''''' : type529 A B) (f : A -> B) (s : A -> Prop) : (y'''''''' f s) = (term4513 A B y'''''''' f s).
Proof. exact (TRANS (@lem4940914 A B y'''''''' f s) (@lem4940918 A B y'''''''' f s)). Qed.
Lemma lem4940921 {A B : Type'} (x''''''' : type529 A B) (f : A -> B) (s : A -> Prop) : (term4514 A B x''''''' f s) = (term4515 A B x''''''' f s).
Proof. exact (MK_COMB (@lem4940886 A) (@lem4940903 A B x''''''' f s)). Qed.
Lemma lem4940922 {A B : Type'} (x''''''' : type529 A B) (y'''''''' : type529 A B) (f : A -> B) (s : A -> Prop) : ((x''''''' f s) = (y'''''''' f s)) = ((term4513 A B x''''''' f s) = (term4513 A B y'''''''' f s)).
Proof. exact (MK_COMB (@lem4940921 A B x''''''' f s) (@lem4940920 A B y'''''''' f s)). Qed.
Lemma lem4940923 {A B : Type'} (x''''''' : type529 A B) (y'''''''' : type529 A B) (f : A -> B) (s : A -> Prop) : (term4516 A B x''''''' y'''''''' f s) = (term4517 A B x''''''' y'''''''' f s).
Proof. exact (MK_COMB (@lem4940885) (@lem4940922 A B x''''''' y'''''''' f s)). Qed.
Lemma lem4940924 {B : Type'} : (@eq B) = (@eq B).
Proof. exact (eq_refl (@eq B)). Qed.
Lemma lem4940925 {A B : Type'} (f : A -> B) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem4940932 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4940933 {A B : Type'} (f : type529 A B) (x : A -> B) : (f x) = (@I ((A -> B) -> (A -> Prop) -> A) f x).
Proof. exact (@lem4940932 (A -> B) (type684 A) f x). Qed.
Lemma lem4940934 {A B : Type'} (x''''''' : type529 A B) (f : A -> B) : (x''''''' f) = (@I ((A -> B) -> (A -> Prop) -> A) x''''''' f).
Proof. exact (@lem4940933 A B x''''''' f). Qed.
Lemma lem4940935 {A : Type'} (s : A -> Prop) : s = s.
Proof. exact (eq_refl s). Qed.
Lemma lem4940936 {A B : Type'} (x''''''' : type529 A B) (f : A -> B) (s : A -> Prop) : (x''''''' f s) = (@I ((A -> B) -> (A -> Prop) -> A) x''''''' f s).
Proof. exact (MK_COMB (@lem4940934 A B x''''''' f) (@lem4940935 A s)). Qed.
Lemma lem4940938 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4940939 {A : Type'} (f : type684 A) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> A) f x).
Proof. exact (@lem4940938 (A -> Prop) A f x). Qed.
Lemma lem4940940 {A B : Type'} (x''''''' : type529 A B) (f : A -> B) (s : A -> Prop) : (@I ((A -> B) -> (A -> Prop) -> A) x''''''' f s) = (term4513 A B x''''''' f s).
Proof. exact (@lem4940939 A (@I ((A -> B) -> (A -> Prop) -> A) x''''''' f) s). Qed.
Lemma lem4940942 {A B : Type'} (x''''''' : type529 A B) (f : A -> B) (s : A -> Prop) : (x''''''' f s) = (term4513 A B x''''''' f s).
Proof. exact (TRANS (@lem4940936 A B x''''''' f s) (@lem4940940 A B x''''''' f s)). Qed.
Lemma lem4940943 {A B : Type'} (x''''''' : type529 A B) (f : A -> B) (s : A -> Prop) : (term4518 A B x''''''' f s) = (term4519 A B x''''''' f s).
Proof. exact (MK_COMB (@lem4940925 A B f) (@lem4940942 A B x''''''' f s)). Qed.
Lemma lem4940945 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4940946 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (@lem4940945 A B f x). Qed.
Lemma lem4940947 {A B : Type'} (x''''''' : type529 A B) (f : A -> B) (s : A -> Prop) : (term4519 A B x''''''' f s) = (term4520 A B x''''''' f s).
Proof. exact (@lem4940946 A B f (term4513 A B x''''''' f s)). Qed.
Lemma lem4940948 {A B : Type'} (x''''''' : type529 A B) (f : A -> B) (s : A -> Prop) : (term4518 A B x''''''' f s) = (term4520 A B x''''''' f s).
Proof. exact (TRANS (@lem4940943 A B x''''''' f s) (@lem4940947 A B x''''''' f s)). Qed.
Lemma lem4940949 {A B : Type'} (f : A -> B) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem4940956 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4940957 {A B : Type'} (f : type529 A B) (x : A -> B) : (f x) = (@I ((A -> B) -> (A -> Prop) -> A) f x).
Proof. exact (@lem4940956 (A -> B) (type684 A) f x). Qed.
Lemma lem4940958 {A B : Type'} (y'''''''' : type529 A B) (f : A -> B) : (y'''''''' f) = (@I ((A -> B) -> (A -> Prop) -> A) y'''''''' f).
Proof. exact (@lem4940957 A B y'''''''' f). Qed.
Lemma lem4940959 {A : Type'} (s : A -> Prop) : s = s.
Proof. exact (eq_refl s). Qed.
Lemma lem4940960 {A B : Type'} (y'''''''' : type529 A B) (f : A -> B) (s : A -> Prop) : (y'''''''' f s) = (@I ((A -> B) -> (A -> Prop) -> A) y'''''''' f s).
Proof. exact (MK_COMB (@lem4940958 A B y'''''''' f) (@lem4940959 A s)). Qed.
Lemma lem4940962 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4940963 {A : Type'} (f : type684 A) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> A) f x).
Proof. exact (@lem4940962 (A -> Prop) A f x). Qed.
Lemma lem4940964 {A B : Type'} (y'''''''' : type529 A B) (f : A -> B) (s : A -> Prop) : (@I ((A -> B) -> (A -> Prop) -> A) y'''''''' f s) = (term4513 A B y'''''''' f s).
Proof. exact (@lem4940963 A (@I ((A -> B) -> (A -> Prop) -> A) y'''''''' f) s). Qed.
Lemma lem4940966 {A B : Type'} (y'''''''' : type529 A B) (f : A -> B) (s : A -> Prop) : (y'''''''' f s) = (term4513 A B y'''''''' f s).
Proof. exact (TRANS (@lem4940960 A B y'''''''' f s) (@lem4940964 A B y'''''''' f s)). Qed.
Lemma lem4940967 {A B : Type'} (y'''''''' : type529 A B) (f : A -> B) (s : A -> Prop) : (term4518 A B y'''''''' f s) = (term4519 A B y'''''''' f s).
Proof. exact (MK_COMB (@lem4940949 A B f) (@lem4940966 A B y'''''''' f s)). Qed.
Lemma lem4940969 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4940970 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (@lem4940969 A B f x). Qed.
Lemma lem4940971 {A B : Type'} (y'''''''' : type529 A B) (f : A -> B) (s : A -> Prop) : (term4519 A B y'''''''' f s) = (term4520 A B y'''''''' f s).
Proof. exact (@lem4940970 A B f (term4513 A B y'''''''' f s)). Qed.
Lemma lem4940972 {A B : Type'} (y'''''''' : type529 A B) (f : A -> B) (s : A -> Prop) : (term4518 A B y'''''''' f s) = (term4520 A B y'''''''' f s).
Proof. exact (TRANS (@lem4940967 A B y'''''''' f s) (@lem4940971 A B y'''''''' f s)). Qed.
Lemma lem4940973 {A B : Type'} (x''''''' : type529 A B) (f : A -> B) (s : A -> Prop) : (term4521 A B x''''''' f s) = (term4522 A B x''''''' f s).
Proof. exact (MK_COMB (@lem4940924 B) (@lem4940948 A B x''''''' f s)). Qed.
Lemma lem4940974 {A B : Type'} (x''''''' : type529 A B) (y'''''''' : type529 A B) (f : A -> B) (s : A -> Prop) : ((term4518 A B x''''''' f s) = (term4518 A B y'''''''' f s)) = ((term4520 A B x''''''' f s) = (term4520 A B y'''''''' f s)).
Proof. exact (MK_COMB (@lem4940973 A B x''''''' f s) (@lem4940972 A B y'''''''' f s)). Qed.
Lemma lem4940975 {A : Type'} : (@IN A) = (@IN A).
Proof. exact (eq_refl (@IN A)). Qed.
Lemma lem4940982 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4940983 {A B : Type'} (f : type529 A B) (x : A -> B) : (f x) = (@I ((A -> B) -> (A -> Prop) -> A) f x).
Proof. exact (@lem4940982 (A -> B) (type684 A) f x). Qed.
Lemma lem4940984 {A B : Type'} (y'''''''' : type529 A B) (f : A -> B) : (y'''''''' f) = (@I ((A -> B) -> (A -> Prop) -> A) y'''''''' f).
Proof. exact (@lem4940983 A B y'''''''' f). Qed.
Lemma lem4940985 {A : Type'} (s : A -> Prop) : s = s.
Proof. exact (eq_refl s). Qed.
Lemma lem4940986 {A B : Type'} (y'''''''' : type529 A B) (f : A -> B) (s : A -> Prop) : (y'''''''' f s) = (@I ((A -> B) -> (A -> Prop) -> A) y'''''''' f s).
Proof. exact (MK_COMB (@lem4940984 A B y'''''''' f) (@lem4940985 A s)). Qed.
Lemma lem4940988 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4940989 {A : Type'} (f : type684 A) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> A) f x).
Proof. exact (@lem4940988 (A -> Prop) A f x). Qed.
Lemma lem4940990 {A B : Type'} (y'''''''' : type529 A B) (f : A -> B) (s : A -> Prop) : (@I ((A -> B) -> (A -> Prop) -> A) y'''''''' f s) = (term4513 A B y'''''''' f s).
Proof. exact (@lem4940989 A (@I ((A -> B) -> (A -> Prop) -> A) y'''''''' f) s). Qed.
Lemma lem4940992 {A B : Type'} (y'''''''' : type529 A B) (f : A -> B) (s : A -> Prop) : (y'''''''' f s) = (term4513 A B y'''''''' f s).
Proof. exact (TRANS (@lem4940986 A B y'''''''' f s) (@lem4940990 A B y'''''''' f s)). Qed.
Lemma lem4940993 {A : Type'} (s : A -> Prop) : s = s.
Proof. exact (eq_refl s). Qed.
Lemma lem4940994 {A B : Type'} (y'''''''' : type529 A B) (f : A -> B) (s : A -> Prop) : (term4523 A B y'''''''' f s) = (term4524 A B y'''''''' f s).
Proof. exact (MK_COMB (@lem4940975 A) (@lem4940992 A B y'''''''' f s)). Qed.
Lemma lem4940995 {A B : Type'} (y'''''''' : type529 A B) (f : A -> B) (s : A -> Prop) : (term4525 A B y'''''''' f s) = (term4526 A B y'''''''' f s).
Proof. exact (MK_COMB (@lem4940994 A B y'''''''' f s) (@lem4940993 A s)). Qed.
Lemma lem4940997 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4940998 {A : Type'} (f : type1364 A) (x : A) : (f x) = (@I (A -> (A -> Prop) -> Prop) f x).
Proof. exact (@lem4940997 A (type686 A) f x). Qed.
Lemma lem4940999 {A B : Type'} (y'''''''' : type529 A B) (f : A -> B) (s : A -> Prop) : (term4524 A B y'''''''' f s) = (term4527 A B y'''''''' f s).
Proof. exact (@lem4940998 A (@IN A) (term4513 A B y'''''''' f s)). Qed.
Lemma lem4941000 {A : Type'} (s : A -> Prop) : s = s.
Proof. exact (eq_refl s). Qed.
Lemma lem4941001 {A B : Type'} (y'''''''' : type529 A B) (f : A -> B) (s : A -> Prop) : (term4526 A B y'''''''' f s) = (term4528 A B y'''''''' f s).
Proof. exact (MK_COMB (@lem4940999 A B y'''''''' f s) (@lem4941000 A s)). Qed.
Lemma lem4941003 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4941004 {A : Type'} (f : type686 A) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> Prop) f x).
Proof. exact (@lem4941003 (A -> Prop) Prop f x). Qed.
Lemma lem4941005 {A B : Type'} (y'''''''' : type529 A B) (f : A -> B) (s : A -> Prop) : (term4528 A B y'''''''' f s) = (term4529 A B y'''''''' f s).
Proof. exact (@lem4941004 A (term4527 A B y'''''''' f s) s). Qed.
Lemma lem4941006 {A B : Type'} (y'''''''' : type529 A B) (f : A -> B) (s : A -> Prop) : (term4526 A B y'''''''' f s) = (term4529 A B y'''''''' f s).
Proof. exact (TRANS (@lem4941001 A B y'''''''' f s) (@lem4941005 A B y'''''''' f s)). Qed.
Lemma lem4941007 {A B : Type'} (y'''''''' : type529 A B) (f : A -> B) (s : A -> Prop) : (term4525 A B y'''''''' f s) = (term4529 A B y'''''''' f s).
Proof. exact (TRANS (@lem4940995 A B y'''''''' f s) (@lem4941006 A B y'''''''' f s)). Qed.
Lemma lem4941008 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4941009 {A B : Type'} (y'''''''' : type529 A B) (f : A -> B) (s : A -> Prop) : (term4530 A B y'''''''' f s) = (term4531 A B y'''''''' f s).
Proof. exact (MK_COMB (@lem4941008) (@lem4941007 A B y'''''''' f s)). Qed.
Lemma lem4941010 {A B : Type'} (x''''''' : type529 A B) (y'''''''' : type529 A B) (f : A -> B) (s : A -> Prop) : (term4532 A B x''''''' y'''''''' f s) = (term4533 A B x''''''' y'''''''' f s).
Proof. exact (MK_COMB (@lem4941009 A B y'''''''' f s) (@lem4940974 A B x''''''' y'''''''' f s)). Qed.
Lemma lem4941011 {A : Type'} : (@IN A) = (@IN A).
Proof. exact (eq_refl (@IN A)). Qed.
Lemma lem4941018 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4941019 {A B : Type'} (f : type529 A B) (x : A -> B) : (f x) = (@I ((A -> B) -> (A -> Prop) -> A) f x).
Proof. exact (@lem4941018 (A -> B) (type684 A) f x). Qed.
Lemma lem4941020 {A B : Type'} (x''''''' : type529 A B) (f : A -> B) : (x''''''' f) = (@I ((A -> B) -> (A -> Prop) -> A) x''''''' f).
Proof. exact (@lem4941019 A B x''''''' f). Qed.
Lemma lem4941021 {A : Type'} (s : A -> Prop) : s = s.
Proof. exact (eq_refl s). Qed.
Lemma lem4941022 {A B : Type'} (x''''''' : type529 A B) (f : A -> B) (s : A -> Prop) : (x''''''' f s) = (@I ((A -> B) -> (A -> Prop) -> A) x''''''' f s).
Proof. exact (MK_COMB (@lem4941020 A B x''''''' f) (@lem4941021 A s)). Qed.
Lemma lem4941024 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4941025 {A : Type'} (f : type684 A) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> A) f x).
Proof. exact (@lem4941024 (A -> Prop) A f x). Qed.
Lemma lem4941026 {A B : Type'} (x''''''' : type529 A B) (f : A -> B) (s : A -> Prop) : (@I ((A -> B) -> (A -> Prop) -> A) x''''''' f s) = (term4513 A B x''''''' f s).
Proof. exact (@lem4941025 A (@I ((A -> B) -> (A -> Prop) -> A) x''''''' f) s). Qed.
Lemma lem4941028 {A B : Type'} (x''''''' : type529 A B) (f : A -> B) (s : A -> Prop) : (x''''''' f s) = (term4513 A B x''''''' f s).
Proof. exact (TRANS (@lem4941022 A B x''''''' f s) (@lem4941026 A B x''''''' f s)). Qed.
Lemma lem4941029 {A : Type'} (s : A -> Prop) : s = s.
Proof. exact (eq_refl s). Qed.
Lemma lem4941030 {A B : Type'} (x''''''' : type529 A B) (f : A -> B) (s : A -> Prop) : (term4523 A B x''''''' f s) = (term4524 A B x''''''' f s).
Proof. exact (MK_COMB (@lem4941011 A) (@lem4941028 A B x''''''' f s)). Qed.
Lemma lem4941031 {A B : Type'} (x''''''' : type529 A B) (f : A -> B) (s : A -> Prop) : (term4525 A B x''''''' f s) = (term4526 A B x''''''' f s).
Proof. exact (MK_COMB (@lem4941030 A B x''''''' f s) (@lem4941029 A s)). Qed.
Lemma lem4941033 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4941034 {A : Type'} (f : type1364 A) (x : A) : (f x) = (@I (A -> (A -> Prop) -> Prop) f x).
Proof. exact (@lem4941033 A (type686 A) f x). Qed.
Lemma lem4941035 {A B : Type'} (x''''''' : type529 A B) (f : A -> B) (s : A -> Prop) : (term4524 A B x''''''' f s) = (term4527 A B x''''''' f s).
Proof. exact (@lem4941034 A (@IN A) (term4513 A B x''''''' f s)). Qed.
Lemma lem4941036 {A : Type'} (s : A -> Prop) : s = s.
Proof. exact (eq_refl s). Qed.
Lemma lem4941037 {A B : Type'} (x''''''' : type529 A B) (f : A -> B) (s : A -> Prop) : (term4526 A B x''''''' f s) = (term4528 A B x''''''' f s).
Proof. exact (MK_COMB (@lem4941035 A B x''''''' f s) (@lem4941036 A s)). Qed.
Lemma lem4941039 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4941040 {A : Type'} (f : type686 A) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> Prop) f x).
Proof. exact (@lem4941039 (A -> Prop) Prop f x). Qed.
Lemma lem4941041 {A B : Type'} (x''''''' : type529 A B) (f : A -> B) (s : A -> Prop) : (term4528 A B x''''''' f s) = (term4529 A B x''''''' f s).
Proof. exact (@lem4941040 A (term4527 A B x''''''' f s) s). Qed.
Lemma lem4941042 {A B : Type'} (x''''''' : type529 A B) (f : A -> B) (s : A -> Prop) : (term4526 A B x''''''' f s) = (term4529 A B x''''''' f s).
Proof. exact (TRANS (@lem4941037 A B x''''''' f s) (@lem4941041 A B x''''''' f s)). Qed.
Lemma lem4941043 {A B : Type'} (x''''''' : type529 A B) (f : A -> B) (s : A -> Prop) : (term4525 A B x''''''' f s) = (term4529 A B x''''''' f s).
Proof. exact (TRANS (@lem4941031 A B x''''''' f s) (@lem4941042 A B x''''''' f s)). Qed.
Lemma lem4941044 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4941045 {A B : Type'} (x''''''' : type529 A B) (f : A -> B) (s : A -> Prop) : (term4530 A B x''''''' f s) = (term4531 A B x''''''' f s).
Proof. exact (MK_COMB (@lem4941044) (@lem4941043 A B x''''''' f s)). Qed.
Lemma lem4941046 {A B : Type'} (x''''''' : type529 A B) (y'''''''' : type529 A B) (f : A -> B) (s : A -> Prop) : (term4534 A B x''''''' y'''''''' f s) = (term4535 A B x''''''' y'''''''' f s).
Proof. exact (MK_COMB (@lem4941045 A B x''''''' f s) (@lem4941010 A B x''''''' y'''''''' f s)). Qed.
Lemma lem4941047 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4941048 {A B : Type'} (x''''''' : type529 A B) (y'''''''' : type529 A B) (f : A -> B) (s : A -> Prop) : (term4536 A B x''''''' y'''''''' f s) = (term4537 A B x''''''' y'''''''' f s).
Proof. exact (MK_COMB (@lem4941047) (@lem4941046 A B x''''''' y'''''''' f s)). Qed.
Lemma lem4941049 {A B : Type'} (x''''''' : type529 A B) (y'''''''' : type529 A B) (f : A -> B) (s : A -> Prop) : (term4538 A B x''''''' y'''''''' f s) = (term4539 A B x''''''' y'''''''' f s).
Proof. exact (MK_COMB (@lem4941048 A B x''''''' y'''''''' f s) (@lem4940923 A B x''''''' y'''''''' f s)). Qed.
Lemma lem4941050 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4941051 {A B : Type'} (x''''''' : type529 A B) (y'''''''' : type529 A B) (f : A -> B) (s : A -> Prop) : (term4540 A B x''''''' y'''''''' f s) = (term4541 A B x''''''' y'''''''' f s).
Proof. exact (MK_COMB (@lem4941050) (@lem4941049 A B x''''''' y'''''''' f s)). Qed.
Lemma lem4941052 {A B : Type'} (x''''''' : type529 A B) (y'''''''' : type529 A B) (f : A -> B) (s : A -> Prop) : (term4542 A B x''''''' y'''''''' f s) = (term4543 A B x''''''' y'''''''' f s).
Proof. exact (MK_COMB (@lem4941051 A B x''''''' y'''''''' f s) (@lem4940884 A s)). Qed.
Lemma lem4941053 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4941054 {A B : Type'} (x''''''' : type529 A B) (y'''''''' : type529 A B) (f : A -> B) (s : A -> Prop) : (term4544 A B x''''''' y'''''''' f s) = (term4545 A B x''''''' y'''''''' f s).
Proof. exact (MK_COMB (@lem4941053) (@lem4941052 A B x''''''' y'''''''' f s)). Qed.
Lemma lem4941055 {A B : Type'} (x''''''' : type529 A B) (y'''''''' : type529 A B) (f : A -> B) (s : A -> Prop) : (term4546 A B x''''''' y'''''''' f s) = (term4547 A B x''''''' y'''''''' f s).
Proof. exact (MK_COMB (@lem4941054 A B x''''''' y'''''''' f s) (@lem4940874 A B f s)). Qed.
Lemma lem4941056 {A B : Type'} (x''''''' : type529 A B) (y'''''''' : type529 A B) (f : A -> B) : (term4548 A B x''''''' y'''''''' f) = (term4549 A B x''''''' y'''''''' f).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4941055 A B x''''''' y'''''''' f s)). Qed.
Lemma lem4941057 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4941058 {A B : Type'} (x''''''' : type529 A B) (y'''''''' : type529 A B) (f : A -> B) : (term3271 A B x''''''' y'''''''' f) = (term4550 A B x''''''' y'''''''' f).
Proof. exact (MK_COMB (@lem4941057 A) (@lem4941056 A B x''''''' y'''''''' f)). Qed.
Lemma lem4941059 {A B : Type'} (x''''''' : type529 A B) (y'''''''' : type529 A B) : (term3273 A B x''''''' y'''''''') = (term4551 A B x''''''' y'''''''').
Proof. exact (fun_ext (fun f : A -> B => @lem4941058 A B x''''''' y'''''''' f)). Qed.
Lemma lem4941060 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem4941061 {A B : Type'} (x''''''' : type529 A B) (y'''''''' : type529 A B) : (term3275 A B x''''''' y'''''''') = (term4552 A B x''''''' y'''''''').
Proof. exact (MK_COMB (@lem4941060 A B) (@lem4941059 A B x''''''' y'''''''')). Qed.
Lemma lem4941062 {A B : Type'} (x''''''' : type529 A B) (y'''''''' : type529 A B) (h1 : term3275 A B x''''''' y'''''''') : term4552 A B x''''''' y''''''''.
Proof. exact (EQ_MP (@lem4941061 A B x''''''' y'''''''') (@lem4938941 A B x''''''' y'''''''' h1)). Qed.
Lemma lem4941321 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) (y : A) : (term4486 A B s f x y) = (term4486 A B s f x y).
Proof. exact (eq_refl (term4486 A B s f x y)). Qed.
Lemma lem4941322 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) : (term4487 A B s f x) = (term4487 A B s f x).
Proof. exact (fun_ext (fun y : A => @lem4941321 A B s f x y)). Qed.
Lemma lem4941323 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4941324 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) : (term4488 A B s f x) = (term4488 A B s f x).
Proof. exact (MK_COMB (@lem4941323 A) (@lem4941322 A B s f x)). Qed.
Lemma lem4941325 {A B : Type'} (s : A -> Prop) (f : A -> B) : (term4489 A B s f) = (term4489 A B s f).
Proof. exact (fun_ext (fun x : A => @lem4941324 A B s f x)). Qed.
Lemma lem4941326 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4941328 {A B : Type'} (s : A -> Prop) (f : A -> B) : (term4490 A B s f) = (term4490 A B s f).
Proof. exact (MK_COMB (@lem4941326 A) (@lem4941325 A B s f)). Qed.
Lemma lem4941329 {A B : Type'} (s : A -> Prop) (f : A -> B) (h1 : term696 A B s f) : term4490 A B s f.
Proof. exact (EQ_MP (@lem4941328 A B s f) (@lem4939094 A B s f h1)). Qed.
Lemma lem4941385 {B : Type'} (a : B -> Prop) (b : B -> Prop) : (term4504 B a b) = (term4504 B a b).
Proof. exact (eq_refl (term4504 B a b)). Qed.
Lemma lem4941386 {B : Type'} (a : B -> Prop) : (term4505 B a) = (term4505 B a).
Proof. exact (fun_ext (fun b : B -> Prop => @lem4941385 B a b)). Qed.
Lemma lem4941387 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4941388 {B : Type'} (a : B -> Prop) : (term4506 B a) = (term4506 B a).
Proof. exact (MK_COMB (@lem4941387 B) (@lem4941386 B a)). Qed.
Lemma lem4941389 {B : Type'} : (term4507 B) = (term4507 B).
Proof. exact (fun_ext (fun a : B -> Prop => @lem4941388 B a)). Qed.
Lemma lem4941390 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4941392 {B : Type'} : (term4508 B) = (term4508 B).
Proof. exact (MK_COMB (@lem4941390 B) (@lem4941389 B)). Qed.
Lemma lem4941393 {B : Type'} (h1 : term2704 B) : term4508 B.
Proof. exact (EQ_MP (@lem4941392 B) (@lem4939278 B h1)). Qed.
Lemma lem4941885 {A B : Type'} (f : A -> B) (s : A -> Prop) : ((term4510 A B f s) = (@I ((A -> Prop) -> nat) (@CARD A) s)) = ((term4510 A B f s) = (@I ((A -> Prop) -> nat) (@CARD A) s)).
Proof. exact (eq_refl ((term4510 A B f s) = (@I ((A -> Prop) -> nat) (@CARD A) s))). Qed.
Lemma lem4941903 {A B : Type'} (x''''''' : type529 A B) (y'''''''' : type529 A B) (f : A -> B) (s : A -> Prop) : (term4543 A B x''''''' y'''''''' f s) = (term4553 A B x''''''' y'''''''' f s).
Proof. exact (@lem19699 (term4535 A B x''''''' y'''''''' f s) (term4517 A B x''''''' y'''''''' f s) (term4500 A s)). Qed.
Lemma lem4941904 {A B : Type'} (x''''''' : type529 A B) (y'''''''' : type529 A B) (f : A -> B) (s : A -> Prop) : (term4554 A B x''''''' y'''''''' f s) = (term4554 A B x''''''' y'''''''' f s).
Proof. exact (eq_refl (term4554 A B x''''''' y'''''''' f s)). Qed.
Lemma lem4941905 {A B : Type'} (x''''''' : type529 A B) (y'''''''' : type529 A B) (f : A -> B) (s : A -> Prop) : (term4555 A B x''''''' y'''''''' f s) = (term4556 A B x''''''' y'''''''' f s).
Proof. exact (@lem19699 (term4529 A B x''''''' f s) (term4533 A B x''''''' y'''''''' f s) (term4500 A s)). Qed.
Lemma lem4941912 {A B : Type'} (x''''''' : type529 A B) (y'''''''' : type529 A B) (f : A -> B) (s : A -> Prop) : (term4557 A B x''''''' y'''''''' f s) = (term4558 A B x''''''' y'''''''' f s).
Proof. exact (@lem19699 (term4529 A B y'''''''' f s) ((term4520 A B x''''''' f s) = (term4520 A B y'''''''' f s)) (term4500 A s)). Qed.
Lemma lem4941915 {A B : Type'} (x''''''' : type529 A B) (f : A -> B) (s : A -> Prop) : (term4559 A B x''''''' f s) = (term4559 A B x''''''' f s).
Proof. exact (eq_refl (term4559 A B x''''''' f s)). Qed.
Lemma lem4941916 {A B : Type'} (x''''''' : type529 A B) (y'''''''' : type529 A B) (f : A -> B) (s : A -> Prop) : (term4556 A B x''''''' y'''''''' f s) = (term4560 A B x''''''' y'''''''' f s).
Proof. exact (MK_COMB (@lem4941915 A B x''''''' f s) (@lem4941912 A B x''''''' y'''''''' f s)). Qed.
Lemma lem4941917 {A B : Type'} (x''''''' : type529 A B) (y'''''''' : type529 A B) (f : A -> B) (s : A -> Prop) : (term4555 A B x''''''' y'''''''' f s) = (term4560 A B x''''''' y'''''''' f s).
Proof. exact (TRANS (@lem4941905 A B x''''''' y'''''''' f s) (@lem4941916 A B x''''''' y'''''''' f s)). Qed.
Lemma lem4941918 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4941919 {A B : Type'} (x''''''' : type529 A B) (y'''''''' : type529 A B) (f : A -> B) (s : A -> Prop) : (term4561 A B x''''''' y'''''''' f s) = (term4562 A B x''''''' y'''''''' f s).
Proof. exact (MK_COMB (@lem4941918) (@lem4941917 A B x''''''' y'''''''' f s)). Qed.
Lemma lem4941920 {A B : Type'} (x''''''' : type529 A B) (y'''''''' : type529 A B) (f : A -> B) (s : A -> Prop) : (term4553 A B x''''''' y'''''''' f s) = (term4563 A B x''''''' y'''''''' f s).
Proof. exact (MK_COMB (@lem4941919 A B x''''''' y'''''''' f s) (@lem4941904 A B x''''''' y'''''''' f s)). Qed.
Lemma lem4941922 {A B : Type'} (x''''''' : type529 A B) (y'''''''' : type529 A B) (f : A -> B) (s : A -> Prop) : (term4543 A B x''''''' y'''''''' f s) = (term4563 A B x''''''' y'''''''' f s).
Proof. exact (TRANS (@lem4941903 A B x''''''' y'''''''' f s) (@lem4941920 A B x''''''' y'''''''' f s)). Qed.
Lemma lem4941923 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4941924 {A B : Type'} (x''''''' : type529 A B) (y'''''''' : type529 A B) (f : A -> B) (s : A -> Prop) : (term4545 A B x''''''' y'''''''' f s) = (term4564 A B x''''''' y'''''''' f s).
Proof. exact (MK_COMB (@lem4941923) (@lem4941922 A B x''''''' y'''''''' f s)). Qed.
Lemma lem4941925 {A B : Type'} (x''''''' : type529 A B) (y'''''''' : type529 A B) (f : A -> B) (s : A -> Prop) : (term4547 A B x''''''' y'''''''' f s) = (term4565 A B x''''''' y'''''''' f s).
Proof. exact (MK_COMB (@lem4941924 A B x''''''' y'''''''' f s) (@lem4941885 A B f s)). Qed.
Lemma lem4941926 {A B : Type'} (x''''''' : type529 A B) (y'''''''' : type529 A B) (f : A -> B) (s : A -> Prop) : (term4565 A B x''''''' y'''''''' f s) = (term4566 A B x''''''' y'''''''' f s).
Proof. exact (@lem19699 (term4560 A B x''''''' y'''''''' f s) (term4554 A B x''''''' y'''''''' f s) ((term4510 A B f s) = (@I ((A -> Prop) -> nat) (@CARD A) s))). Qed.
Lemma lem4941927 {A B : Type'} (x''''''' : type529 A B) (y'''''''' : type529 A B) (f : A -> B) (s : A -> Prop) : (term4567 A B x''''''' y'''''''' f s) = (term4567 A B x''''''' y'''''''' f s).
Proof. exact (eq_refl (term4567 A B x''''''' y'''''''' f s)). Qed.
Lemma lem4941928 {A B : Type'} (x''''''' : type529 A B) (y'''''''' : type529 A B) (f : A -> B) (s : A -> Prop) : (term4568 A B x''''''' y'''''''' f s) = (term4569 A B x''''''' y'''''''' f s).
Proof. exact (@lem19699 (term4570 A B x''''''' f s) (term4558 A B x''''''' y'''''''' f s) ((term4510 A B f s) = (@I ((A -> Prop) -> nat) (@CARD A) s))). Qed.
Lemma lem4941935 {A B : Type'} (x''''''' : type529 A B) (y'''''''' : type529 A B) (f : A -> B) (s : A -> Prop) : (term4571 A B x''''''' y'''''''' f s) = (term4572 A B x''''''' y'''''''' f s).
Proof. exact (@lem19699 (term4570 A B y'''''''' f s) (term4573 A B x''''''' y'''''''' f s) ((term4510 A B f s) = (@I ((A -> Prop) -> nat) (@CARD A) s))). Qed.
Lemma lem4941938 {A B : Type'} (x''''''' : type529 A B) (f : A -> B) (s : A -> Prop) : (term4574 A B x''''''' f s) = (term4574 A B x''''''' f s).
Proof. exact (eq_refl (term4574 A B x''''''' f s)). Qed.
Lemma lem4941939 {A B : Type'} (x''''''' : type529 A B) (y'''''''' : type529 A B) (f : A -> B) (s : A -> Prop) : (term4569 A B x''''''' y'''''''' f s) = (term4575 A B x''''''' y'''''''' f s).
Proof. exact (MK_COMB (@lem4941938 A B x''''''' f s) (@lem4941935 A B x''''''' y'''''''' f s)). Qed.
Lemma lem4941940 {A B : Type'} (x''''''' : type529 A B) (y'''''''' : type529 A B) (f : A -> B) (s : A -> Prop) : (term4568 A B x''''''' y'''''''' f s) = (term4575 A B x''''''' y'''''''' f s).
Proof. exact (TRANS (@lem4941928 A B x''''''' y'''''''' f s) (@lem4941939 A B x''''''' y'''''''' f s)). Qed.
Lemma lem4941941 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4941942 {A B : Type'} (x''''''' : type529 A B) (y'''''''' : type529 A B) (f : A -> B) (s : A -> Prop) : (term4576 A B x''''''' y'''''''' f s) = (term4577 A B x''''''' y'''''''' f s).
Proof. exact (MK_COMB (@lem4941941) (@lem4941940 A B x''''''' y'''''''' f s)). Qed.
Lemma lem4941943 {A B : Type'} (x''''''' : type529 A B) (y'''''''' : type529 A B) (f : A -> B) (s : A -> Prop) : (term4566 A B x''''''' y'''''''' f s) = (term4578 A B x''''''' y'''''''' f s).
Proof. exact (MK_COMB (@lem4941942 A B x''''''' y'''''''' f s) (@lem4941927 A B x''''''' y'''''''' f s)). Qed.
Lemma lem4941944 {A B : Type'} (x''''''' : type529 A B) (y'''''''' : type529 A B) (f : A -> B) (s : A -> Prop) : (term4565 A B x''''''' y'''''''' f s) = (term4578 A B x''''''' y'''''''' f s).
Proof. exact (TRANS (@lem4941926 A B x''''''' y'''''''' f s) (@lem4941943 A B x''''''' y'''''''' f s)). Qed.
Lemma lem4941945 {A B : Type'} (x''''''' : type529 A B) (y'''''''' : type529 A B) (f : A -> B) (s : A -> Prop) : (term4547 A B x''''''' y'''''''' f s) = (term4578 A B x''''''' y'''''''' f s).
Proof. exact (TRANS (@lem4941925 A B x''''''' y'''''''' f s) (@lem4941944 A B x''''''' y'''''''' f s)). Qed.
Lemma lem4941946 {A B : Type'} (x''''''' : type529 A B) (y'''''''' : type529 A B) (f : A -> B) : (term4549 A B x''''''' y'''''''' f) = (term4579 A B x''''''' y'''''''' f).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4941945 A B x''''''' y'''''''' f s)). Qed.
Lemma lem4941947 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4941948 {A B : Type'} (x''''''' : type529 A B) (y'''''''' : type529 A B) (f : A -> B) : (term4550 A B x''''''' y'''''''' f) = (term4580 A B x''''''' y'''''''' f).
Proof. exact (MK_COMB (@lem4941947 A) (@lem4941946 A B x''''''' y'''''''' f)). Qed.
Lemma lem4941949 {A B : Type'} (x''''''' : type529 A B) (y'''''''' : type529 A B) : (term4551 A B x''''''' y'''''''') = (term4581 A B x''''''' y'''''''').
Proof. exact (fun_ext (fun f : A -> B => @lem4941948 A B x''''''' y'''''''' f)). Qed.
Lemma lem4941950 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem4941952 {A B : Type'} (x''''''' : type529 A B) (y'''''''' : type529 A B) : (term4552 A B x''''''' y'''''''') = (term4582 A B x''''''' y'''''''').
Proof. exact (MK_COMB (@lem4941950 A B) (@lem4941949 A B x''''''' y'''''''')). Qed.
Lemma lem4941953 {A B : Type'} (x''''''' : type529 A B) (y'''''''' : type529 A B) (h1 : term3275 A B x''''''' y'''''''') : term4582 A B x''''''' y''''''''.
Proof. exact (EQ_MP (@lem4941952 A B x''''''' y'''''''') (@lem4941062 A B x''''''' y'''''''' h1)). Qed.
Lemma lem4942024 {A B : Type'} (_61469 : A) (s : A -> Prop) (f : A -> B) (h1 : term696 A B s f) : term4583 A B s f _61469.
Proof. exact (@lem4941329 A B s f h1 _61469). Qed.
Lemma lem4942025 {A B : Type'} (s : A -> Prop) (f : A -> B) (_61469 : A) : (term4583 A B s f _61469) = (term4488 A B s f _61469).
Proof. exact (eq_refl (term4583 A B s f _61469)). Qed.
Lemma lem4942026 {A B : Type'} (_61469 : A) (s : A -> Prop) (f : A -> B) (h1 : term696 A B s f) : term4488 A B s f _61469.
Proof. exact (EQ_MP (@lem4942025 A B s f _61469) (@lem4942024 A B _61469 s f h1)). Qed.
Lemma lem4942027 {A B : Type'} (_61469 : A) (_61470 : A) (s : A -> Prop) (f : A -> B) (h1 : term696 A B s f) : term4584 A B s f _61469 _61470.
Proof. exact (@lem4942026 A B _61469 s f h1 _61470). Qed.
Lemma lem4942028 {A B : Type'} (s : A -> Prop) (f : A -> B) (_61469 : A) (_61470 : A) : (term4584 A B s f _61469 _61470) = (term4486 A B s f _61469 _61470).
Proof. exact (eq_refl (term4584 A B s f _61469 _61470)). Qed.
Lemma lem4942029 {A B : Type'} (_61469 : A) (_61470 : A) (s : A -> Prop) (f : A -> B) (h1 : term696 A B s f) : term4486 A B s f _61469 _61470.
Proof. exact (EQ_MP (@lem4942028 A B s f _61469 _61470) (@lem4942027 A B _61469 _61470 s f h1)). Qed.
Lemma lem4942036 {B : Type'} (_61473 : B -> Prop) (h1 : term2704 B) : term4585 B _61473.
Proof. exact (@lem4941393 B h1 _61473). Qed.
Lemma lem4942037 {B : Type'} (_61473 : B -> Prop) : (term4585 B _61473) = (term4506 B _61473).
Proof. exact (eq_refl (term4585 B _61473)). Qed.
Lemma lem4942038 {B : Type'} (_61473 : B -> Prop) (h1 : term2704 B) : term4506 B _61473.
Proof. exact (EQ_MP (@lem4942037 B _61473) (@lem4942036 B _61473 h1)). Qed.
Lemma lem4942039 {B : Type'} (_61473 : B -> Prop) (_61474 : B -> Prop) (h1 : term2704 B) : term4586 B _61473 _61474.
Proof. exact (@lem4942038 B _61473 h1 _61474). Qed.
Lemma lem4942040 {B : Type'} (_61473 : B -> Prop) (_61474 : B -> Prop) : (term4586 B _61473 _61474) = (term4504 B _61473 _61474).
Proof. exact (eq_refl (term4586 B _61473 _61474)). Qed.
Lemma lem4942041 {B : Type'} (_61473 : B -> Prop) (_61474 : B -> Prop) (h1 : term2704 B) : term4504 B _61473 _61474.
Proof. exact (EQ_MP (@lem4942040 B _61473 _61474) (@lem4942039 B _61473 _61474 h1)). Qed.
Lemma lem4942084 {A B : Type'} (_61489 : A -> B) (x''''''' : type529 A B) (y'''''''' : type529 A B) (h1 : term3275 A B x''''''' y'''''''') : term4587 A B x''''''' y'''''''' _61489.
Proof. exact (@lem4941953 A B x''''''' y'''''''' h1 _61489). Qed.
Lemma lem4942085 {A B : Type'} (x''''''' : type529 A B) (y'''''''' : type529 A B) (_61489 : A -> B) : (term4587 A B x''''''' y'''''''' _61489) = (term4580 A B x''''''' y'''''''' _61489).
Proof. exact (eq_refl (term4587 A B x''''''' y'''''''' _61489)). Qed.
Lemma lem4942086 {A B : Type'} (_61489 : A -> B) (x''''''' : type529 A B) (y'''''''' : type529 A B) (h1 : term3275 A B x''''''' y'''''''') : term4580 A B x''''''' y'''''''' _61489.
Proof. exact (EQ_MP (@lem4942085 A B x''''''' y'''''''' _61489) (@lem4942084 A B _61489 x''''''' y'''''''' h1)). Qed.
Lemma lem4942087 {A B : Type'} (_61489 : A -> B) (_61490 : A -> Prop) (x''''''' : type529 A B) (y'''''''' : type529 A B) (h1 : term3275 A B x''''''' y'''''''') : term4588 A B x''''''' y'''''''' _61489 _61490.
Proof. exact (@lem4942086 A B _61489 x''''''' y'''''''' h1 _61490). Qed.
Lemma lem4942088 {A B : Type'} (x''''''' : type529 A B) (y'''''''' : type529 A B) (_61489 : A -> B) (_61490 : A -> Prop) : (term4588 A B x''''''' y'''''''' _61489 _61490) = (term4578 A B x''''''' y'''''''' _61489 _61490).
Proof. exact (eq_refl (term4588 A B x''''''' y'''''''' _61489 _61490)). Qed.
Lemma lem4942089 {A B : Type'} (_61489 : A -> B) (_61490 : A -> Prop) (x''''''' : type529 A B) (y'''''''' : type529 A B) (h1 : term3275 A B x''''''' y'''''''') : term4578 A B x''''''' y'''''''' _61489 _61490.
Proof. exact (EQ_MP (@lem4942088 A B x''''''' y'''''''' _61489 _61490) (@lem4942087 A B _61489 _61490 x''''''' y'''''''' h1)). Qed.
Lemma lem4942102 {A B : Type'} (_61489 : A -> B) (_61490 : A -> Prop) (x''''''' : type529 A B) (y'''''''' : type529 A B) (h1 : term3275 A B x''''''' y'''''''') : term4567 A B x''''''' y'''''''' _61489 _61490.
Proof. exact (proj2 (@lem4942089 A B _61489 _61490 x''''''' y'''''''' h1)). Qed.
Lemma lem4942103 {A B : Type'} (_61489 : A -> B) (_61490 : A -> Prop) (x''''''' : type529 A B) (y'''''''' : type529 A B) (h1 : term3275 A B x''''''' y'''''''') : term4575 A B x''''''' y'''''''' _61489 _61490.
Proof. exact (proj1 (@lem4942089 A B _61489 _61490 x''''''' y'''''''' h1)). Qed.
Lemma lem4942104 {A B : Type'} (_61489 : A -> B) (_61490 : A -> Prop) (x''''''' : type529 A B) (y'''''''' : type529 A B) (h1 : term3275 A B x''''''' y'''''''') : term4572 A B x''''''' y'''''''' _61489 _61490.
Proof. exact (proj2 (@lem4942103 A B _61489 _61490 x''''''' y'''''''' h1)). Qed.
Lemma lem4942105 {A B : Type'} (_61489 : A -> B) (_61490 : A -> Prop) (x''''''' : type529 A B) (y'''''''' : type529 A B) (h1 : term3275 A B x''''''' y'''''''') : term4589 A B x''''''' _61489 _61490.
Proof. exact (proj1 (@lem4942103 A B _61489 _61490 x''''''' y'''''''' h1)). Qed.
Lemma lem4942106 {A B : Type'} (_61489 : A -> B) (_61490 : A -> Prop) (x''''''' : type529 A B) (y'''''''' : type529 A B) (h1 : term3275 A B x''''''' y'''''''') : term4590 A B x''''''' y'''''''' _61489 _61490.
Proof. exact (proj2 (@lem4942104 A B _61489 _61490 x''''''' y'''''''' h1)). Qed.
Lemma lem4942107 {A B : Type'} (_61489 : A -> B) (_61490 : A -> Prop) (x''''''' : type529 A B) (y'''''''' : type529 A B) (h1 : term3275 A B x''''''' y'''''''') : term4589 A B y'''''''' _61489 _61490.
Proof. exact (proj1 (@lem4942104 A B _61489 _61490 x''''''' y'''''''' h1)). Qed.
Lemma lem4942161 {A B : Type'} (s : A -> Prop) (f : A -> B) (_61469 : A) (_61470 : A) : (term4486 A B s f _61469 _61470) = (term4591 A B s f _61469 _61470).
Proof. exact (@lem4907461 (term2595 A _61469 s) (term4483 A B s _61469 f _61470) (_61469 = _61470)). Qed.
Lemma lem4942168 {A B : Type'} (s : A -> Prop) (f : A -> B) (_61469 : A) (_61470 : A) : (term4592 A B s f _61469 _61470) = (term4593 A B s f _61469 _61470).
Proof. exact (@lem4907461 (term2595 A _61470 s) (term977 A B _61469 f _61470) (_61469 = _61470)). Qed.
Lemma lem4942169 {A : Type'} (_61469 : A) (s : A -> Prop) : (term2596 A _61469 s) = (term2596 A _61469 s).
Proof. exact (eq_refl (term2596 A _61469 s)). Qed.
Lemma lem4942172 {A B : Type'} (s : A -> Prop) (f : A -> B) (_61469 : A) (_61470 : A) : (term4591 A B s f _61469 _61470) = (term4594 A B s f _61469 _61470).
Proof. exact (MK_COMB (@lem4942169 A _61469 s) (@lem4942168 A B s f _61469 _61470)). Qed.
Lemma lem4942174 {A B : Type'} (s : A -> Prop) (f : A -> B) (_61469 : A) (_61470 : A) : (term4486 A B s f _61469 _61470) = (term4594 A B s f _61469 _61470).
Proof. exact (TRANS (@lem4942161 A B s f _61469 _61470) (@lem4942172 A B s f _61469 _61470)). Qed.
Lemma lem4942175 {A B : Type'} (_61469 : A) (_61470 : A) (s : A -> Prop) (f : A -> B) (h1 : term696 A B s f) : term4594 A B s f _61469 _61470.
Proof. exact (EQ_MP (@lem4942174 A B s f _61469 _61470) (@lem4942029 A B _61469 _61470 s f h1)). Qed.
Lemma lem4942179 {A B : Type'} (f : A -> B) (s : A -> Prop) (t : B -> Prop) (h1 : term2703 A B f s t) : term4491 A B f s t.
Proof. exact (EQ_MP (@lem4939135 A B f s t) (@lem4935107 A B f s t h1)). Qed.
Lemma lem4942201 {B : Type'} (_61473 : B -> Prop) (_61474 : B -> Prop) : (term4504 B _61473 _61474) = (term4595 B _61473 _61474).
Proof. exact (@lem4907461 (term4500 B _61474) (term4499 B _61473 _61474) (_61473 = _61474)). Qed.
Lemma lem4942208 {B : Type'} (_61473 : B -> Prop) (_61474 : B -> Prop) : (term4596 B _61473 _61474) = (term4597 B _61473 _61474).
Proof. exact (@lem4907461 (term4496 B _61473 _61474) (term4493 B _61473 _61474) (_61473 = _61474)). Qed.
Lemma lem4942209 {B : Type'} (_61474 : B -> Prop) : (term4501 B _61474) = (term4501 B _61474).
Proof. exact (eq_refl (term4501 B _61474)). Qed.
Lemma lem4942212 {B : Type'} (_61473 : B -> Prop) (_61474 : B -> Prop) : (term4595 B _61473 _61474) = (term4598 B _61473 _61474).
Proof. exact (MK_COMB (@lem4942209 B _61474) (@lem4942208 B _61473 _61474)). Qed.
Lemma lem4942214 {B : Type'} (_61473 : B -> Prop) (_61474 : B -> Prop) : (term4504 B _61473 _61474) = (term4598 B _61473 _61474).
Proof. exact (TRANS (@lem4942201 B _61473 _61474) (@lem4942212 B _61473 _61474)). Qed.
Lemma lem4942215 {B : Type'} (_61473 : B -> Prop) (_61474 : B -> Prop) (h1 : term2704 B) : term4598 B _61473 _61474.
Proof. exact (EQ_MP (@lem4942214 B _61473 _61474) (@lem4942041 B _61473 _61474 h1)). Qed.
Lemma lem4942274 {A B : Type'} (x''''''' : type529 A B) (y'''''''' : type529 A B) (_61489 : A -> B) (_61490 : A -> Prop) : (term4567 A B x''''''' y'''''''' _61489 _61490) = (term4599 A B x''''''' y'''''''' _61489 _61490).
Proof. exact (@lem4907461 (term4517 A B x''''''' y'''''''' _61489 _61490) (term4500 A _61490) ((term4510 A B _61489 _61490) = (@I ((A -> Prop) -> nat) (@CARD A) _61490))). Qed.
Lemma lem4942275 {A B : Type'} (_61489 : A -> B) (_61490 : A -> Prop) (x''''''' : type529 A B) (y'''''''' : type529 A B) (h1 : term3275 A B x''''''' y'''''''') : term4599 A B x''''''' y'''''''' _61489 _61490.
Proof. exact (EQ_MP (@lem4942274 A B x''''''' y'''''''' _61489 _61490) (@lem4942102 A B _61489 _61490 x''''''' y'''''''' h1)). Qed.
Lemma lem4942286 {A B : Type'} (x''''''' : type529 A B) (_61489 : A -> B) (_61490 : A -> Prop) : (term4589 A B x''''''' _61489 _61490) = (term4600 A B x''''''' _61489 _61490).
Proof. exact (@lem4907461 (term4529 A B x''''''' _61489 _61490) (term4500 A _61490) ((term4510 A B _61489 _61490) = (@I ((A -> Prop) -> nat) (@CARD A) _61490))). Qed.
Lemma lem4942287 {A B : Type'} (_61489 : A -> B) (_61490 : A -> Prop) (x''''''' : type529 A B) (y'''''''' : type529 A B) (h1 : term3275 A B x''''''' y'''''''') : term4600 A B x''''''' _61489 _61490.
Proof. exact (EQ_MP (@lem4942286 A B x''''''' _61489 _61490) (@lem4942105 A B _61489 _61490 x''''''' y'''''''' h1)). Qed.
Lemma lem4942298 {A B : Type'} (y'''''''' : type529 A B) (_61489 : A -> B) (_61490 : A -> Prop) : (term4589 A B y'''''''' _61489 _61490) = (term4600 A B y'''''''' _61489 _61490).
Proof. exact (@lem4907461 (term4529 A B y'''''''' _61489 _61490) (term4500 A _61490) ((term4510 A B _61489 _61490) = (@I ((A -> Prop) -> nat) (@CARD A) _61490))). Qed.
Lemma lem4942299 {A B : Type'} (_61489 : A -> B) (_61490 : A -> Prop) (x''''''' : type529 A B) (y'''''''' : type529 A B) (h1 : term3275 A B x''''''' y'''''''') : term4600 A B y'''''''' _61489 _61490.
Proof. exact (EQ_MP (@lem4942298 A B y'''''''' _61489 _61490) (@lem4942107 A B _61489 _61490 x''''''' y'''''''' h1)). Qed.
Lemma lem4942310 {A B : Type'} (x''''''' : type529 A B) (y'''''''' : type529 A B) (_61489 : A -> B) (_61490 : A -> Prop) : (term4590 A B x''''''' y'''''''' _61489 _61490) = (term4601 A B x''''''' y'''''''' _61489 _61490).
Proof. exact (@lem4907461 ((term4520 A B x''''''' _61489 _61490) = (term4520 A B y'''''''' _61489 _61490)) (term4500 A _61490) ((term4510 A B _61489 _61490) = (@I ((A -> Prop) -> nat) (@CARD A) _61490))). Qed.
Lemma lem4942311 {A B : Type'} (_61489 : A -> B) (_61490 : A -> Prop) (x''''''' : type529 A B) (y'''''''' : type529 A B) (h1 : term3275 A B x''''''' y'''''''') : term4601 A B x''''''' y'''''''' _61489 _61490.
Proof. exact (EQ_MP (@lem4942310 A B x''''''' y'''''''' _61489 _61490) (@lem4942106 A B _61489 _61490 x''''''' y'''''''' h1)). Qed.
Lemma lem4943464 (x : nat) (y : nat) (z : nat) : term1250 x y z.
Proof. exact (@lem21385 nat x y z). Qed.
Lemma lem4943582 {B : Type'} (t : B -> Prop) (h1 : @FINITE B t) : @I ((B -> Prop) -> Prop) (@FINITE B) t.
Proof. exact (EQ_MP (@lem4938960 B t) (@lem4935001 B t h1)). Qed.
Lemma lem4943583 {B : Type'} (t : B -> Prop) (h1 : @FINITE B t) : term4602 B t.
Proof. exact (fun h0 : term4500 B t => @lem4943582 B t h1). Qed.
Lemma lem4943585 (p : Prop) : (term888 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem4943586 {B : Type'} (t : B -> Prop) : (term4602 B t) = (@I ((B -> Prop) -> Prop) (@FINITE B) t).
Proof. exact (@lem4943585 (@I ((B -> Prop) -> Prop) (@FINITE B) t)). Qed.
Lemma lem4943587 {B : Type'} (t : B -> Prop) (h1 : @FINITE B t) : @I ((B -> Prop) -> Prop) (@FINITE B) t.
Proof. exact (EQ_MP (@lem4943586 B t) (@lem4943583 B t h1)). Qed.
Lemma lem4943589 {A B : Type'} (f : A -> B) (s : A -> Prop) (t : B -> Prop) (h1 : term692 A B f s t) : term4481 A B f s t.
Proof. exact (EQ_MP (@lem4939014 A B f s t) (@lem4935013 A B f s t h1)). Qed.
Lemma lem4943590 {A B : Type'} (f : A -> B) (s : A -> Prop) (t : B -> Prop) (h1 : term692 A B f s t) : term4603 A B f s t.
Proof. exact (fun h0 : term4604 A B f s t => @lem4943589 A B f s t h1). Qed.
Lemma lem4943592 (p : Prop) : (term888 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem4943593 {A B : Type'} (f : A -> B) (s : A -> Prop) (t : B -> Prop) : (term4603 A B f s t) = (term4481 A B f s t).
Proof. exact (@lem4943592 (term4481 A B f s t)). Qed.
Lemma lem4943594 {A B : Type'} (f : A -> B) (s : A -> Prop) (t : B -> Prop) (h1 : term692 A B f s t) : term4481 A B f s t.
Proof. exact (EQ_MP (@lem4943593 A B f s t) (@lem4943590 A B f s t h1)). Qed.
Lemma lem4943596 {A : Type'} (s : A -> Prop) (h1 : @FINITE A s) : @I ((A -> Prop) -> Prop) (@FINITE A) s.
Proof. exact (EQ_MP (@lem4938951 A s) (@lem4934995 A s h1)). Qed.
Lemma lem4943597 {A : Type'} (s : A -> Prop) (h1 : @FINITE A s) : term4602 A s.
Proof. exact (fun h0 : term4500 A s => @lem4943596 A s h1). Qed.
Lemma lem4943599 (p : Prop) : (term888 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem4943600 {A : Type'} (s : A -> Prop) : (term4602 A s) = (@I ((A -> Prop) -> Prop) (@FINITE A) s).
Proof. exact (@lem4943599 (@I ((A -> Prop) -> Prop) (@FINITE A) s)). Qed.
Lemma lem4943601 {A : Type'} (s : A -> Prop) (h1 : @FINITE A s) : @I ((A -> Prop) -> Prop) (@FINITE A) s.
Proof. exact (EQ_MP (@lem4943600 A s) (@lem4943597 A s h1)). Qed.
Lemma lem4943604 {A B : Type'} (f : A -> B) (s : A -> Prop) (h1 : term4605 A B f s) : term4605 A B f s.
Proof. exact (h1). Qed.
Lemma lem4943605 {A B : Type'} (f : A -> B) (s : A -> Prop) (h1 : term4605 A B f s) : term4606 A B f s.
Proof. exact (fun h0 : (term4510 A B f s) = (@I ((A -> Prop) -> nat) (@CARD A) s) => @lem4943604 A B f s h1). Qed.
Lemma lem4943607 (p : Prop) : (term4607 p) = (~ p).
Proof. exact (EQ_MP (@lem21028 p) (@lem21107 p)). Qed.
Lemma lem4943608 {A B : Type'} (f : A -> B) (s : A -> Prop) : (term4606 A B f s) = (term4605 A B f s).
Proof. exact (@lem4943607 ((term4510 A B f s) = (@I ((A -> Prop) -> nat) (@CARD A) s))). Qed.
Lemma lem4943609 {A B : Type'} (f : A -> B) (s : A -> Prop) (h1 : term4605 A B f s) : term4605 A B f s.
Proof. exact (EQ_MP (@lem4943608 A B f s) (@lem4943605 A B f s h1)). Qed.
Lemma lem4943611 (b : Prop) (a : Prop) : (a \/ b) = (term892 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem4943612 {A B : Type'} (x''''''' : type529 A B) (_61489 : A -> B) (_61490 : A -> Prop) : (term4600 A B x''''''' _61489 _61490) = (term4608 A B x''''''' _61489 _61490).
Proof. exact (@lem4943611 (term4609 A B _61489 _61490) (term4529 A B x''''''' _61489 _61490)). Qed.
Lemma lem4943614 (a : Prop) (b : Prop) : (term910 a b) = (term911 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem4943615 {A B : Type'} (_61489 : A -> B) (_61490 : A -> Prop) : (term4610 A B _61489 _61490) = (term4611 A B _61489 _61490).
Proof. exact (@lem4943614 (term4500 A _61490) ((term4510 A B _61489 _61490) = (@I ((A -> Prop) -> nat) (@CARD A) _61490))). Qed.
Lemma lem4943617 (a : Prop) : (term197 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem4943618 {A : Type'} (_61490 : A -> Prop) : (term4612 A _61490) = (@I ((A -> Prop) -> Prop) (@FINITE A) _61490).
Proof. exact (@lem4943617 (@I ((A -> Prop) -> Prop) (@FINITE A) _61490)). Qed.
Lemma lem4943619 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4943620 {A : Type'} (_61490 : A -> Prop) : (term4613 A _61490) = (term4614 A _61490).
Proof. exact (MK_COMB (@lem4943619) (@lem4943618 A _61490)). Qed.
Lemma lem4943621 {A B : Type'} (_61489 : A -> B) (_61490 : A -> Prop) : (term4605 A B _61489 _61490) = (term4605 A B _61489 _61490).
Proof. exact (eq_refl (term4605 A B _61489 _61490)). Qed.
Lemma lem4943622 {A B : Type'} (_61489 : A -> B) (_61490 : A -> Prop) : (term4611 A B _61489 _61490) = (term4615 A B _61489 _61490).
Proof. exact (MK_COMB (@lem4943620 A _61490) (@lem4943621 A B _61489 _61490)). Qed.
Lemma lem4943623 {A B : Type'} (_61489 : A -> B) (_61490 : A -> Prop) : (term4610 A B _61489 _61490) = (term4615 A B _61489 _61490).
Proof. exact (TRANS (@lem4943615 A B _61489 _61490) (@lem4943622 A B _61489 _61490)). Qed.
Lemma lem4943624 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4943625 {A B : Type'} (_61489 : A -> B) (_61490 : A -> Prop) : (term4616 A B _61489 _61490) = (term4617 A B _61489 _61490).
Proof. exact (MK_COMB (@lem4943624) (@lem4943623 A B _61489 _61490)). Qed.
Lemma lem4943626 {A B : Type'} (x''''''' : type529 A B) (_61489 : A -> B) (_61490 : A -> Prop) : (term4529 A B x''''''' _61489 _61490) = (term4529 A B x''''''' _61489 _61490).
Proof. exact (eq_refl (term4529 A B x''''''' _61489 _61490)). Qed.
Lemma lem4943627 {A B : Type'} (x''''''' : type529 A B) (_61489 : A -> B) (_61490 : A -> Prop) : (term4608 A B x''''''' _61489 _61490) = (term4618 A B x''''''' _61489 _61490).
Proof. exact (MK_COMB (@lem4943625 A B _61489 _61490) (@lem4943626 A B x''''''' _61489 _61490)). Qed.
Lemma lem4943628 {A B : Type'} (x''''''' : type529 A B) (_61489 : A -> B) (_61490 : A -> Prop) : (term4600 A B x''''''' _61489 _61490) = (term4618 A B x''''''' _61489 _61490).
Proof. exact (TRANS (@lem4943612 A B x''''''' _61489 _61490) (@lem4943627 A B x''''''' _61489 _61490)). Qed.
Lemma lem4943630 {A B : Type'} (f : A -> B) (s : A -> Prop) (h1 : @FINITE A s) (h2 : term4605 A B f s) : term4615 A B f s.
Proof. exact (conj (@lem4943601 A s h1) (@lem4943609 A B f s h2)). Qed.
Lemma lem4943632 {A B : Type'} (_61489 : A -> B) (_61490 : A -> Prop) (x''''''' : type529 A B) (y'''''''' : type529 A B) (h1 : term3275 A B x''''''' y'''''''') : term4618 A B x''''''' _61489 _61490.
Proof. exact (EQ_MP (@lem4943628 A B x''''''' _61489 _61490) (@lem4942287 A B _61489 _61490 x''''''' y'''''''' h1)). Qed.
Lemma lem4943633 {A B : Type'} (_61489 : A -> B) (_61490 : A -> Prop) (x''''''' : type529 A B) (y'''''''' : type529 A B) (h1 : term3275 A B x''''''' y'''''''') : term4618 A B x''''''' _61489 _61490.
Proof. exact (@lem4943632 A B _61489 _61490 x''''''' y'''''''' h1). Qed.
Lemma lem4943634 {A B : Type'} (f : A -> B) (s : A -> Prop) (x''''''' : type529 A B) (y'''''''' : type529 A B) (h1 : term3275 A B x''''''' y'''''''') : term4618 A B x''''''' f s.
Proof. exact (@lem4943633 A B f s x''''''' y'''''''' h1). Qed.
Lemma lem4943637 {A B : Type'} (x''''''' : type529 A B) (y'''''''' : type529 A B) (f : A -> B) (s : A -> Prop) (h1 : term3275 A B x''''''' y'''''''') (h2 : @FINITE A s) (h3 : term4605 A B f s) : term4529 A B x''''''' f s.
Proof. exact (@lem4943634 A B f s x''''''' y'''''''' h1 (@lem4943630 A B f s h2 h3)). Qed.
Lemma lem4943638 {A B : Type'} (x''''''' : type529 A B) (y'''''''' : type529 A B) (f : A -> B) (s : A -> Prop) (h1 : term3275 A B x''''''' y'''''''') (h2 : @FINITE A s) (h3 : term4605 A B f s) : term4619 A B x''''''' f s.
Proof. exact (fun h0 : term4620 A B x''''''' f s => @lem4943637 A B x''''''' y'''''''' f s h1 h2 h3). Qed.
Lemma lem4943640 (p : Prop) : (term888 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem4943641 {A B : Type'} (x''''''' : type529 A B) (f : A -> B) (s : A -> Prop) : (term4619 A B x''''''' f s) = (term4529 A B x''''''' f s).
Proof. exact (@lem4943640 (term4529 A B x''''''' f s)). Qed.
Lemma lem4943642 {A B : Type'} (x''''''' : type529 A B) (y'''''''' : type529 A B) (f : A -> B) (s : A -> Prop) (h1 : term3275 A B x''''''' y'''''''') (h2 : @FINITE A s) (h3 : term4605 A B f s) : term4529 A B x''''''' f s.
Proof. exact (EQ_MP (@lem4943641 A B x''''''' f s) (@lem4943638 A B x''''''' y'''''''' f s h1 h2 h3)). Qed.
Lemma lem4943644 {A : Type'} (s : A -> Prop) (h1 : @FINITE A s) : @I ((A -> Prop) -> Prop) (@FINITE A) s.
Proof. exact (EQ_MP (@lem4938951 A s) (@lem4934995 A s h1)). Qed.
Lemma lem4943645 {A : Type'} (s : A -> Prop) (h1 : @FINITE A s) : term4602 A s.
Proof. exact (fun h0 : term4500 A s => @lem4943644 A s h1). Qed.
Lemma lem4943647 (p : Prop) : (term888 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem4943648 {A : Type'} (s : A -> Prop) : (term4602 A s) = (@I ((A -> Prop) -> Prop) (@FINITE A) s).
Proof. exact (@lem4943647 (@I ((A -> Prop) -> Prop) (@FINITE A) s)). Qed.
Lemma lem4943649 {A : Type'} (s : A -> Prop) (h1 : @FINITE A s) : @I ((A -> Prop) -> Prop) (@FINITE A) s.
Proof. exact (EQ_MP (@lem4943648 A s) (@lem4943645 A s h1)). Qed.
Lemma lem4943652 {A B : Type'} (f : A -> B) (s : A -> Prop) (h1 : term4605 A B f s) : term4605 A B f s.
Proof. exact (h1). Qed.
Lemma lem4943653 {A B : Type'} (f : A -> B) (s : A -> Prop) (h1 : term4605 A B f s) : term4606 A B f s.
Proof. exact (fun h0 : (term4510 A B f s) = (@I ((A -> Prop) -> nat) (@CARD A) s) => @lem4943652 A B f s h1). Qed.
Lemma lem4943655 (p : Prop) : (term4607 p) = (~ p).
Proof. exact (EQ_MP (@lem21028 p) (@lem21107 p)). Qed.
Lemma lem4943656 {A B : Type'} (f : A -> B) (s : A -> Prop) : (term4606 A B f s) = (term4605 A B f s).
Proof. exact (@lem4943655 ((term4510 A B f s) = (@I ((A -> Prop) -> nat) (@CARD A) s))). Qed.
Lemma lem4943657 {A B : Type'} (f : A -> B) (s : A -> Prop) (h1 : term4605 A B f s) : term4605 A B f s.
Proof. exact (EQ_MP (@lem4943656 A B f s) (@lem4943653 A B f s h1)). Qed.
Lemma lem4943659 (b : Prop) (a : Prop) : (a \/ b) = (term892 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem4943660 {A B : Type'} (y'''''''' : type529 A B) (_61489 : A -> B) (_61490 : A -> Prop) : (term4600 A B y'''''''' _61489 _61490) = (term4608 A B y'''''''' _61489 _61490).
Proof. exact (@lem4943659 (term4609 A B _61489 _61490) (term4529 A B y'''''''' _61489 _61490)). Qed.
Lemma lem4943662 (a : Prop) (b : Prop) : (term910 a b) = (term911 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem4943663 {A B : Type'} (_61489 : A -> B) (_61490 : A -> Prop) : (term4610 A B _61489 _61490) = (term4611 A B _61489 _61490).
Proof. exact (@lem4943662 (term4500 A _61490) ((term4510 A B _61489 _61490) = (@I ((A -> Prop) -> nat) (@CARD A) _61490))). Qed.
Lemma lem4943665 (a : Prop) : (term197 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem4943666 {A : Type'} (_61490 : A -> Prop) : (term4612 A _61490) = (@I ((A -> Prop) -> Prop) (@FINITE A) _61490).
Proof. exact (@lem4943665 (@I ((A -> Prop) -> Prop) (@FINITE A) _61490)). Qed.
Lemma lem4943667 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4943668 {A : Type'} (_61490 : A -> Prop) : (term4613 A _61490) = (term4614 A _61490).
Proof. exact (MK_COMB (@lem4943667) (@lem4943666 A _61490)). Qed.
Lemma lem4943669 {A B : Type'} (_61489 : A -> B) (_61490 : A -> Prop) : (term4605 A B _61489 _61490) = (term4605 A B _61489 _61490).
Proof. exact (eq_refl (term4605 A B _61489 _61490)). Qed.
Lemma lem4943670 {A B : Type'} (_61489 : A -> B) (_61490 : A -> Prop) : (term4611 A B _61489 _61490) = (term4615 A B _61489 _61490).
Proof. exact (MK_COMB (@lem4943668 A _61490) (@lem4943669 A B _61489 _61490)). Qed.
Lemma lem4943671 {A B : Type'} (_61489 : A -> B) (_61490 : A -> Prop) : (term4610 A B _61489 _61490) = (term4615 A B _61489 _61490).
Proof. exact (TRANS (@lem4943663 A B _61489 _61490) (@lem4943670 A B _61489 _61490)). Qed.
Lemma lem4943672 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4943673 {A B : Type'} (_61489 : A -> B) (_61490 : A -> Prop) : (term4616 A B _61489 _61490) = (term4617 A B _61489 _61490).
Proof. exact (MK_COMB (@lem4943672) (@lem4943671 A B _61489 _61490)). Qed.
Lemma lem4943674 {A B : Type'} (y'''''''' : type529 A B) (_61489 : A -> B) (_61490 : A -> Prop) : (term4529 A B y'''''''' _61489 _61490) = (term4529 A B y'''''''' _61489 _61490).
Proof. exact (eq_refl (term4529 A B y'''''''' _61489 _61490)). Qed.
Lemma lem4943675 {A B : Type'} (y'''''''' : type529 A B) (_61489 : A -> B) (_61490 : A -> Prop) : (term4608 A B y'''''''' _61489 _61490) = (term4618 A B y'''''''' _61489 _61490).
Proof. exact (MK_COMB (@lem4943673 A B _61489 _61490) (@lem4943674 A B y'''''''' _61489 _61490)). Qed.
Lemma lem4943676 {A B : Type'} (y'''''''' : type529 A B) (_61489 : A -> B) (_61490 : A -> Prop) : (term4600 A B y'''''''' _61489 _61490) = (term4618 A B y'''''''' _61489 _61490).
Proof. exact (TRANS (@lem4943660 A B y'''''''' _61489 _61490) (@lem4943675 A B y'''''''' _61489 _61490)). Qed.
Lemma lem4943678 {A B : Type'} (f : A -> B) (s : A -> Prop) (h1 : @FINITE A s) (h2 : term4605 A B f s) : term4615 A B f s.
Proof. exact (conj (@lem4943649 A s h1) (@lem4943657 A B f s h2)). Qed.
Lemma lem4943680 {A B : Type'} (_61489 : A -> B) (_61490 : A -> Prop) (x''''''' : type529 A B) (y'''''''' : type529 A B) (h1 : term3275 A B x''''''' y'''''''') : term4618 A B y'''''''' _61489 _61490.
Proof. exact (EQ_MP (@lem4943676 A B y'''''''' _61489 _61490) (@lem4942299 A B _61489 _61490 x''''''' y'''''''' h1)). Qed.
Lemma lem4943681 {A B : Type'} (_61489 : A -> B) (_61490 : A -> Prop) (x''''''' : type529 A B) (y'''''''' : type529 A B) (h1 : term3275 A B x''''''' y'''''''') : term4618 A B y'''''''' _61489 _61490.
Proof. exact (@lem4943680 A B _61489 _61490 x''''''' y'''''''' h1). Qed.
Lemma lem4943682 {A B : Type'} (f : A -> B) (s : A -> Prop) (x''''''' : type529 A B) (y'''''''' : type529 A B) (h1 : term3275 A B x''''''' y'''''''') : term4618 A B y'''''''' f s.
Proof. exact (@lem4943681 A B f s x''''''' y'''''''' h1). Qed.
Lemma lem4943685 {A B : Type'} (x''''''' : type529 A B) (y'''''''' : type529 A B) (f : A -> B) (s : A -> Prop) (h1 : term3275 A B x''''''' y'''''''') (h2 : @FINITE A s) (h3 : term4605 A B f s) : term4529 A B y'''''''' f s.
Proof. exact (@lem4943682 A B f s x''''''' y'''''''' h1 (@lem4943678 A B f s h2 h3)). Qed.
Lemma lem4943686 {A B : Type'} (x''''''' : type529 A B) (y'''''''' : type529 A B) (f : A -> B) (s : A -> Prop) (h1 : term3275 A B x''''''' y'''''''') (h2 : @FINITE A s) (h3 : term4605 A B f s) : term4619 A B y'''''''' f s.
Proof. exact (fun h0 : term4620 A B y'''''''' f s => @lem4943685 A B x''''''' y'''''''' f s h1 h2 h3). Qed.
Lemma lem4943688 (p : Prop) : (term888 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem4943689 {A B : Type'} (y'''''''' : type529 A B) (f : A -> B) (s : A -> Prop) : (term4619 A B y'''''''' f s) = (term4529 A B y'''''''' f s).
Proof. exact (@lem4943688 (term4529 A B y'''''''' f s)). Qed.
Lemma lem4943690 {A B : Type'} (x''''''' : type529 A B) (y'''''''' : type529 A B) (f : A -> B) (s : A -> Prop) (h1 : term3275 A B x''''''' y'''''''') (h2 : @FINITE A s) (h3 : term4605 A B f s) : term4529 A B y'''''''' f s.
Proof. exact (EQ_MP (@lem4943689 A B y'''''''' f s) (@lem4943686 A B x''''''' y'''''''' f s h1 h2 h3)). Qed.
Lemma lem4943692 {A : Type'} (s : A -> Prop) (h1 : @FINITE A s) : @I ((A -> Prop) -> Prop) (@FINITE A) s.
Proof. exact (EQ_MP (@lem4938951 A s) (@lem4934995 A s h1)). Qed.
Lemma lem4943693 {A : Type'} (s : A -> Prop) (h1 : @FINITE A s) : term4602 A s.
Proof. exact (fun h0 : term4500 A s => @lem4943692 A s h1). Qed.
Lemma lem4943695 (p : Prop) : (term888 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem4943696 {A : Type'} (s : A -> Prop) : (term4602 A s) = (@I ((A -> Prop) -> Prop) (@FINITE A) s).
Proof. exact (@lem4943695 (@I ((A -> Prop) -> Prop) (@FINITE A) s)). Qed.
Lemma lem4943697 {A : Type'} (s : A -> Prop) (h1 : @FINITE A s) : @I ((A -> Prop) -> Prop) (@FINITE A) s.
Proof. exact (EQ_MP (@lem4943696 A s) (@lem4943693 A s h1)). Qed.
Lemma lem4943700 {A B : Type'} (f : A -> B) (s : A -> Prop) (h1 : term4605 A B f s) : term4605 A B f s.
Proof. exact (h1). Qed.
Lemma lem4943701 {A B : Type'} (f : A -> B) (s : A -> Prop) (h1 : term4605 A B f s) : term4606 A B f s.
Proof. exact (fun h0 : (term4510 A B f s) = (@I ((A -> Prop) -> nat) (@CARD A) s) => @lem4943700 A B f s h1). Qed.
Lemma lem4943703 (p : Prop) : (term4607 p) = (~ p).
Proof. exact (EQ_MP (@lem21028 p) (@lem21107 p)). Qed.
Lemma lem4943704 {A B : Type'} (f : A -> B) (s : A -> Prop) : (term4606 A B f s) = (term4605 A B f s).
Proof. exact (@lem4943703 ((term4510 A B f s) = (@I ((A -> Prop) -> nat) (@CARD A) s))). Qed.
Lemma lem4943705 {A B : Type'} (f : A -> B) (s : A -> Prop) (h1 : term4605 A B f s) : term4605 A B f s.
Proof. exact (EQ_MP (@lem4943704 A B f s) (@lem4943701 A B f s h1)). Qed.
Lemma lem4943707 (b : Prop) (a : Prop) : (a \/ b) = (term892 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem4943708 {A B : Type'} (x''''''' : type529 A B) (y'''''''' : type529 A B) (_61489 : A -> B) (_61490 : A -> Prop) : (term4599 A B x''''''' y'''''''' _61489 _61490) = (term4621 A B x''''''' y'''''''' _61489 _61490).
Proof. exact (@lem4943707 (term4609 A B _61489 _61490) (term4517 A B x''''''' y'''''''' _61489 _61490)). Qed.
Lemma lem4943710 (a : Prop) (b : Prop) : (term910 a b) = (term911 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem4943711 {A B : Type'} (_61489 : A -> B) (_61490 : A -> Prop) : (term4610 A B _61489 _61490) = (term4611 A B _61489 _61490).
Proof. exact (@lem4943710 (term4500 A _61490) ((term4510 A B _61489 _61490) = (@I ((A -> Prop) -> nat) (@CARD A) _61490))). Qed.
Lemma lem4943713 (a : Prop) : (term197 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem4943714 {A : Type'} (_61490 : A -> Prop) : (term4612 A _61490) = (@I ((A -> Prop) -> Prop) (@FINITE A) _61490).
Proof. exact (@lem4943713 (@I ((A -> Prop) -> Prop) (@FINITE A) _61490)). Qed.
Lemma lem4943715 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4943716 {A : Type'} (_61490 : A -> Prop) : (term4613 A _61490) = (term4614 A _61490).
Proof. exact (MK_COMB (@lem4943715) (@lem4943714 A _61490)). Qed.
Lemma lem4943717 {A B : Type'} (_61489 : A -> B) (_61490 : A -> Prop) : (term4605 A B _61489 _61490) = (term4605 A B _61489 _61490).
Proof. exact (eq_refl (term4605 A B _61489 _61490)). Qed.
Lemma lem4943718 {A B : Type'} (_61489 : A -> B) (_61490 : A -> Prop) : (term4611 A B _61489 _61490) = (term4615 A B _61489 _61490).
Proof. exact (MK_COMB (@lem4943716 A _61490) (@lem4943717 A B _61489 _61490)). Qed.
Lemma lem4943719 {A B : Type'} (_61489 : A -> B) (_61490 : A -> Prop) : (term4610 A B _61489 _61490) = (term4615 A B _61489 _61490).
Proof. exact (TRANS (@lem4943711 A B _61489 _61490) (@lem4943718 A B _61489 _61490)). Qed.
Lemma lem4943720 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4943721 {A B : Type'} (_61489 : A -> B) (_61490 : A -> Prop) : (term4616 A B _61489 _61490) = (term4617 A B _61489 _61490).
Proof. exact (MK_COMB (@lem4943720) (@lem4943719 A B _61489 _61490)). Qed.
Lemma lem4943722 {A B : Type'} (x''''''' : type529 A B) (y'''''''' : type529 A B) (_61489 : A -> B) (_61490 : A -> Prop) : (term4517 A B x''''''' y'''''''' _61489 _61490) = (term4517 A B x''''''' y'''''''' _61489 _61490).
Proof. exact (eq_refl (term4517 A B x''''''' y'''''''' _61489 _61490)). Qed.
Lemma lem4943723 {A B : Type'} (x''''''' : type529 A B) (y'''''''' : type529 A B) (_61489 : A -> B) (_61490 : A -> Prop) : (term4621 A B x''''''' y'''''''' _61489 _61490) = (term4622 A B x''''''' y'''''''' _61489 _61490).
Proof. exact (MK_COMB (@lem4943721 A B _61489 _61490) (@lem4943722 A B x''''''' y'''''''' _61489 _61490)). Qed.
Lemma lem4943724 {A B : Type'} (x''''''' : type529 A B) (y'''''''' : type529 A B) (_61489 : A -> B) (_61490 : A -> Prop) : (term4599 A B x''''''' y'''''''' _61489 _61490) = (term4622 A B x''''''' y'''''''' _61489 _61490).
Proof. exact (TRANS (@lem4943708 A B x''''''' y'''''''' _61489 _61490) (@lem4943723 A B x''''''' y'''''''' _61489 _61490)). Qed.
Lemma lem4943726 {A B : Type'} (f : A -> B) (s : A -> Prop) (h1 : @FINITE A s) (h2 : term4605 A B f s) : term4615 A B f s.
Proof. exact (conj (@lem4943697 A s h1) (@lem4943705 A B f s h2)). Qed.
Lemma lem4943728 {A B : Type'} (_61489 : A -> B) (_61490 : A -> Prop) (x''''''' : type529 A B) (y'''''''' : type529 A B) (h1 : term3275 A B x''''''' y'''''''') : term4622 A B x''''''' y'''''''' _61489 _61490.
Proof. exact (EQ_MP (@lem4943724 A B x''''''' y'''''''' _61489 _61490) (@lem4942275 A B _61489 _61490 x''''''' y'''''''' h1)). Qed.
Lemma lem4943729 {A B : Type'} (_61489 : A -> B) (_61490 : A -> Prop) (x''''''' : type529 A B) (y'''''''' : type529 A B) (h1 : term3275 A B x''''''' y'''''''') : term4622 A B x''''''' y'''''''' _61489 _61490.
Proof. exact (@lem4943728 A B _61489 _61490 x''''''' y'''''''' h1). Qed.
Lemma lem4943730 {A B : Type'} (f : A -> B) (s : A -> Prop) (x''''''' : type529 A B) (y'''''''' : type529 A B) (h1 : term3275 A B x''''''' y'''''''') : term4622 A B x''''''' y'''''''' f s.
Proof. exact (@lem4943729 A B f s x''''''' y'''''''' h1). Qed.
Lemma lem4943733 {A B : Type'} (x''''''' : type529 A B) (y'''''''' : type529 A B) (f : A -> B) (s : A -> Prop) (h1 : term3275 A B x''''''' y'''''''') (h2 : @FINITE A s) (h3 : term4605 A B f s) : term4517 A B x''''''' y'''''''' f s.
Proof. exact (@lem4943730 A B f s x''''''' y'''''''' h1 (@lem4943726 A B f s h2 h3)). Qed.
Lemma lem4943734 {A B : Type'} (x''''''' : type529 A B) (y'''''''' : type529 A B) (f : A -> B) (s : A -> Prop) (h1 : term3275 A B x''''''' y'''''''') (h2 : @FINITE A s) (h3 : term4605 A B f s) : term4623 A B x''''''' y'''''''' f s.
Proof. exact (fun h0 : (term4513 A B x''''''' f s) = (term4513 A B y'''''''' f s) => @lem4943733 A B x''''''' y'''''''' f s h1 h2 h3). Qed.
Lemma lem4943736 (p : Prop) : (term4607 p) = (~ p).
Proof. exact (EQ_MP (@lem21028 p) (@lem21107 p)). Qed.
Lemma lem4943737 {A B : Type'} (x''''''' : type529 A B) (y'''''''' : type529 A B) (f : A -> B) (s : A -> Prop) : (term4623 A B x''''''' y'''''''' f s) = (term4517 A B x''''''' y'''''''' f s).
Proof. exact (@lem4943736 ((term4513 A B x''''''' f s) = (term4513 A B y'''''''' f s))). Qed.
Lemma lem4943738 {A B : Type'} (x''''''' : type529 A B) (y'''''''' : type529 A B) (f : A -> B) (s : A -> Prop) (h1 : term3275 A B x''''''' y'''''''') (h2 : @FINITE A s) (h3 : term4605 A B f s) : term4517 A B x''''''' y'''''''' f s.
Proof. exact (EQ_MP (@lem4943737 A B x''''''' y'''''''' f s) (@lem4943734 A B x''''''' y'''''''' f s h1 h2 h3)). Qed.
Lemma lem4943754 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem4943755 {A B : Type'} (f : A -> B) (s : A -> Prop) (_61469 : A) (_61470 : A) : (term4593 A B s f _61469 _61470) = (term4624 A B f s _61469 _61470).
Proof. exact (@lem4943754 (term977 A B _61469 f _61470) (term2595 A _61470 s) (_61469 = _61470)). Qed.
Lemma lem4943771 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem4943772 {A : Type'} (_61469 : A) (_61470 : A) (s : A -> Prop) : (term4625 A s _61469 _61470) = (term4626 A _61469 _61470 s).
Proof. exact (@lem4943771 (_61469 = _61470) (term2595 A _61470 s)). Qed.
Lemma lem4943780 {A B : Type'} (_61469 : A) (f : A -> B) (_61470 : A) : (term4627 A B _61469 f _61470) = (term4627 A B _61469 f _61470).
Proof. exact (eq_refl (term4627 A B _61469 f _61470)). Qed.
Lemma lem4943781 {A B : Type'} (f : A -> B) (_61469 : A) (_61470 : A) (s : A -> Prop) : (term4624 A B f s _61469 _61470) = (term4628 A B f _61469 _61470 s).
Proof. exact (MK_COMB (@lem4943780 A B _61469 f _61470) (@lem4943772 A _61469 _61470 s)). Qed.
Lemma lem4943785 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem4943786 {A B : Type'} (_61469 : A) (f : A -> B) (_61470 : A) (s : A -> Prop) : (term4628 A B f _61469 _61470 s) = (term4629 A B _61469 f _61470 s).
Proof. exact (@lem4943785 (_61469 = _61470) (term977 A B _61469 f _61470) (term2595 A _61470 s)). Qed.
Lemma lem4943806 {A B : Type'} (_61469 : A) (f : A -> B) (_61470 : A) (s : A -> Prop) : (term4624 A B f s _61469 _61470) = (term4629 A B _61469 f _61470 s).
Proof. exact (TRANS (@lem4943781 A B f _61469 _61470 s) (@lem4943786 A B _61469 f _61470 s)). Qed.
Lemma lem4943807 {A B : Type'} (_61469 : A) (f : A -> B) (_61470 : A) (s : A -> Prop) : (term4593 A B s f _61469 _61470) = (term4629 A B _61469 f _61470 s).
Proof. exact (TRANS (@lem4943755 A B f s _61469 _61470) (@lem4943806 A B _61469 f _61470 s)). Qed.
Lemma lem4943808 {A : Type'} (_61469 : A) (s : A -> Prop) : (term2596 A _61469 s) = (term2596 A _61469 s).
Proof. exact (eq_refl (term2596 A _61469 s)). Qed.
Lemma lem4943809 {A B : Type'} (_61469 : A) (f : A -> B) (_61470 : A) (s : A -> Prop) : (term4594 A B s f _61469 _61470) = (term4630 A B _61469 f _61470 s).
Proof. exact (MK_COMB (@lem4943808 A _61469 s) (@lem4943807 A B _61469 f _61470 s)). Qed.
Lemma lem4943813 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem4943814 {A B : Type'} (_61469 : A) (f : A -> B) (_61470 : A) (s : A -> Prop) : (term4630 A B _61469 f _61470 s) = (term4631 A B _61469 f _61470 s).
Proof. exact (@lem4943813 (_61469 = _61470) (term2595 A _61469 s) (term4632 A B _61469 f _61470 s)). Qed.
Lemma lem4943830 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem4943831 {A B : Type'} (f : A -> B) (_61469 : A) (_61470 : A) (s : A -> Prop) : (term4633 A B _61469 f _61470 s) = (term4634 A B f _61469 _61470 s).
Proof. exact (@lem4943830 (term977 A B _61469 f _61470) (term2595 A _61469 s) (term2595 A _61470 s)). Qed.
Lemma lem4943849 {A : Type'} (_61469 : A) (_61470 : A) : (term4635 A _61469 _61470) = (term4635 A _61469 _61470).
Proof. exact (eq_refl (term4635 A _61469 _61470)). Qed.
Lemma lem4943850 {A B : Type'} (f : A -> B) (_61469 : A) (_61470 : A) (s : A -> Prop) : (term4631 A B _61469 f _61470 s) = (term4636 A B f _61469 _61470 s).
Proof. exact (MK_COMB (@lem4943849 A _61469 _61470) (@lem4943831 A B f _61469 _61470 s)). Qed.
Lemma lem4943861 {A B : Type'} (f : A -> B) (_61469 : A) (_61470 : A) (s : A -> Prop) : (term4630 A B _61469 f _61470 s) = (term4636 A B f _61469 _61470 s).
Proof. exact (TRANS (@lem4943814 A B _61469 f _61470 s) (@lem4943850 A B f _61469 _61470 s)). Qed.
Lemma lem4943862 {A B : Type'} (f : A -> B) (_61469 : A) (_61470 : A) (s : A -> Prop) : (term4594 A B s f _61469 _61470) = (term4636 A B f _61469 _61470 s).
Proof. exact (TRANS (@lem4943809 A B _61469 f _61470 s) (@lem4943861 A B f _61469 _61470 s)). Qed.
Lemma lem4943863 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4943864 {A B : Type'} (f : A -> B) (_61469 : A) (_61470 : A) (s : A -> Prop) : (term4637 A B s f _61469 _61470) = (term4638 A B f _61469 _61470 s).
Proof. exact (MK_COMB (@lem4943863) (@lem4943862 A B f _61469 _61470 s)). Qed.
Lemma lem4943890 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem4943891 {A : Type'} (_61469 : A) (_61470 : A) (s : A -> Prop) : (term4625 A s _61469 _61470) = (term4626 A _61469 _61470 s).
Proof. exact (@lem4943890 (_61469 = _61470) (term2595 A _61470 s)). Qed.
Lemma lem4943899 {A : Type'} (_61469 : A) (s : A -> Prop) : (term2596 A _61469 s) = (term2596 A _61469 s).
Proof. exact (eq_refl (term2596 A _61469 s)). Qed.
Lemma lem4943900 {A : Type'} (_61469 : A) (_61470 : A) (s : A -> Prop) : (term4639 A s _61469 _61470) = (term4640 A _61469 _61470 s).
Proof. exact (MK_COMB (@lem4943899 A _61469 s) (@lem4943891 A _61469 _61470 s)). Qed.
Lemma lem4943904 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem4943905 {A : Type'} (_61469 : A) (_61470 : A) (s : A -> Prop) : (term4640 A _61469 _61470 s) = (term4641 A _61469 _61470 s).
Proof. exact (@lem4943904 (_61469 = _61470) (term2595 A _61469 s) (term2595 A _61470 s)). Qed.
Lemma lem4943923 {A : Type'} (_61469 : A) (_61470 : A) (s : A -> Prop) : (term4639 A s _61469 _61470) = (term4641 A _61469 _61470 s).
Proof. exact (TRANS (@lem4943900 A _61469 _61470 s) (@lem4943905 A _61469 _61470 s)). Qed.
Lemma lem4943924 {A B : Type'} (_61469 : A) (f : A -> B) (_61470 : A) : (term4627 A B _61469 f _61470) = (term4627 A B _61469 f _61470).
Proof. exact (eq_refl (term4627 A B _61469 f _61470)). Qed.
Lemma lem4943925 {A B : Type'} (f : A -> B) (_61469 : A) (_61470 : A) (s : A -> Prop) : (term4642 A B f s _61469 _61470) = (term4643 A B f _61469 _61470 s).
Proof. exact (MK_COMB (@lem4943924 A B _61469 f _61470) (@lem4943923 A _61469 _61470 s)). Qed.
Lemma lem4943929 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem4943930 {A B : Type'} (f : A -> B) (_61469 : A) (_61470 : A) (s : A -> Prop) : (term4643 A B f _61469 _61470 s) = (term4636 A B f _61469 _61470 s).
Proof. exact (@lem4943929 (_61469 = _61470) (term977 A B _61469 f _61470) (term4644 A _61469 _61470 s)). Qed.
Lemma lem4943960 {A B : Type'} (f : A -> B) (_61469 : A) (_61470 : A) (s : A -> Prop) : (term4642 A B f s _61469 _61470) = (term4636 A B f _61469 _61470 s).
Proof. exact (TRANS (@lem4943925 A B f _61469 _61470 s) (@lem4943930 A B f _61469 _61470 s)). Qed.
Lemma lem4943961 {A B : Type'} (f : A -> B) (_61469 : A) (_61470 : A) (s : A -> Prop) : ((term4594 A B s f _61469 _61470) = (term4642 A B f s _61469 _61470)) = ((term4636 A B f _61469 _61470 s) = (term4636 A B f _61469 _61470 s)).
Proof. exact (MK_COMB (@lem4943864 A B f _61469 _61470 s) (@lem4943960 A B f _61469 _61470 s)). Qed.
Lemma lem4943963 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem20665 A x) (@lem20664 A x)). Qed.
Lemma lem4943964 (x : Prop) : (x = x) = True.
Proof. exact (@lem4943963 Prop x). Qed.
Lemma lem4943965 {A B : Type'} (f : A -> B) (_61469 : A) (_61470 : A) (s : A -> Prop) : ((term4636 A B f _61469 _61470 s) = (term4636 A B f _61469 _61470 s)) = True.
Proof. exact (@lem4943964 (term4636 A B f _61469 _61470 s)). Qed.
Lemma lem4943966 {A B : Type'} (f : A -> B) (s : A -> Prop) (_61469 : A) (_61470 : A) : ((term4594 A B s f _61469 _61470) = (term4642 A B f s _61469 _61470)) = True.
Proof. exact (TRANS (@lem4943961 A B f _61469 _61470 s) (@lem4943965 A B f _61469 _61470 s)). Qed.
Lemma lem4943967 {A B : Type'} (f : A -> B) (s : A -> Prop) (_61469 : A) (_61470 : A) : True = ((term4594 A B s f _61469 _61470) = (term4642 A B f s _61469 _61470)).
Proof. exact (SYM (@lem4943966 A B f s _61469 _61470)). Qed.
Lemma lem4943968 {A B : Type'} (f : A -> B) (s : A -> Prop) (_61469 : A) (_61470 : A) : (term4594 A B s f _61469 _61470) = (term4642 A B f s _61469 _61470).
Proof. exact (EQ_MP (@lem4943967 A B f s _61469 _61470) (@lem0)). Qed.
Lemma lem4943969 {A B : Type'} (_61469 : A) (_61470 : A) (s : A -> Prop) (f : A -> B) (h1 : term696 A B s f) : term4642 A B f s _61469 _61470.
Proof. exact (EQ_MP (@lem4943968 A B f s _61469 _61470) (@lem4942175 A B _61469 _61470 s f h1)). Qed.
Lemma lem4943971 (b : Prop) (a : Prop) : (a \/ b) = (term892 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem4943972 {A B : Type'} (s : A -> Prop) (_61469 : A) (f : A -> B) (_61470 : A) : (term4642 A B f s _61469 _61470) = (term4645 A B s _61469 f _61470).
Proof. exact (@lem4943971 (term4639 A s _61469 _61470) (term977 A B _61469 f _61470)). Qed.
Lemma lem4943974 (a : Prop) (b : Prop) : (term910 a b) = (term911 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem4943975 {A : Type'} (s : A -> Prop) (_61469 : A) (_61470 : A) : (term4646 A s _61469 _61470) = (term4647 A s _61469 _61470).
Proof. exact (@lem4943974 (term2595 A _61469 s) (term4625 A s _61469 _61470)). Qed.
Lemma lem4943977 (a : Prop) : (term197 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem4943978 {A : Type'} (_61469 : A) (s : A -> Prop) : (term4648 A _61469 s) = (term2593 A _61469 s).
Proof. exact (@lem4943977 (term2593 A _61469 s)). Qed.
Lemma lem4943979 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4943980 {A : Type'} (_61469 : A) (s : A -> Prop) : (term4649 A _61469 s) = (term4650 A _61469 s).
Proof. exact (MK_COMB (@lem4943979) (@lem4943978 A _61469 s)). Qed.
Lemma lem4943982 (a : Prop) (b : Prop) : (term910 a b) = (term911 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem4943983 {A : Type'} (s : A -> Prop) (_61469 : A) (_61470 : A) : (term4651 A s _61469 _61470) = (term4652 A s _61469 _61470).
Proof. exact (@lem4943982 (term2595 A _61470 s) (_61469 = _61470)). Qed.
Lemma lem4943985 (a : Prop) : (term197 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem4943986 {A : Type'} (_61470 : A) (s : A -> Prop) : (term4648 A _61470 s) = (term2593 A _61470 s).
Proof. exact (@lem4943985 (term2593 A _61470 s)). Qed.
Lemma lem4943987 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4943988 {A : Type'} (_61470 : A) (s : A -> Prop) : (term4649 A _61470 s) = (term4650 A _61470 s).
Proof. exact (MK_COMB (@lem4943987) (@lem4943986 A _61470 s)). Qed.
Lemma lem4943989 {A : Type'} (_61469 : A) (_61470 : A) : (term688 A _61469 _61470) = (term688 A _61469 _61470).
Proof. exact (eq_refl (term688 A _61469 _61470)). Qed.
Lemma lem4943990 {A : Type'} (s : A -> Prop) (_61469 : A) (_61470 : A) : (term4652 A s _61469 _61470) = (term4653 A s _61469 _61470).
Proof. exact (MK_COMB (@lem4943988 A _61470 s) (@lem4943989 A _61469 _61470)). Qed.
Lemma lem4943991 {A : Type'} (s : A -> Prop) (_61469 : A) (_61470 : A) : (term4651 A s _61469 _61470) = (term4653 A s _61469 _61470).
Proof. exact (TRANS (@lem4943983 A s _61469 _61470) (@lem4943990 A s _61469 _61470)). Qed.
Lemma lem4943992 {A : Type'} (s : A -> Prop) (_61469 : A) (_61470 : A) : (term4647 A s _61469 _61470) = (term4654 A s _61469 _61470).
Proof. exact (MK_COMB (@lem4943980 A _61469 s) (@lem4943991 A s _61469 _61470)). Qed.
Lemma lem4943993 {A : Type'} (s : A -> Prop) (_61469 : A) (_61470 : A) : (term4646 A s _61469 _61470) = (term4654 A s _61469 _61470).
Proof. exact (TRANS (@lem4943975 A s _61469 _61470) (@lem4943992 A s _61469 _61470)). Qed.
Lemma lem4943994 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4943995 {A : Type'} (s : A -> Prop) (_61469 : A) (_61470 : A) : (term4655 A s _61469 _61470) = (term4656 A s _61469 _61470).
Proof. exact (MK_COMB (@lem4943994) (@lem4943993 A s _61469 _61470)). Qed.
Lemma lem4943996 {A B : Type'} (_61469 : A) (f : A -> B) (_61470 : A) : (term977 A B _61469 f _61470) = (term977 A B _61469 f _61470).
Proof. exact (eq_refl (term977 A B _61469 f _61470)). Qed.
Lemma lem4943997 {A B : Type'} (s : A -> Prop) (_61469 : A) (f : A -> B) (_61470 : A) : (term4645 A B s _61469 f _61470) = (term4657 A B s _61469 f _61470).
Proof. exact (MK_COMB (@lem4943995 A s _61469 _61470) (@lem4943996 A B _61469 f _61470)). Qed.
Lemma lem4943998 {A B : Type'} (s : A -> Prop) (_61469 : A) (f : A -> B) (_61470 : A) : (term4642 A B f s _61469 _61470) = (term4657 A B s _61469 f _61470).
Proof. exact (TRANS (@lem4943972 A B s _61469 f _61470) (@lem4943997 A B s _61469 f _61470)). Qed.
Lemma lem4944000 {A B : Type'} (x''''''' : type529 A B) (y'''''''' : type529 A B) (f : A -> B) (s : A -> Prop) (h1 : term3275 A B x''''''' y'''''''') (h2 : @FINITE A s) (h3 : term4605 A B f s) : term4658 A B x''''''' y'''''''' f s.
Proof. exact (conj (@lem4943690 A B x''''''' y'''''''' f s h1 h2 h3) (@lem4943738 A B x''''''' y'''''''' f s h1 h2 h3)). Qed.
Lemma lem4944001 {A B : Type'} (x''''''' : type529 A B) (y'''''''' : type529 A B) (f : A -> B) (s : A -> Prop) (h1 : term3275 A B x''''''' y'''''''') (h2 : @FINITE A s) (h3 : term4605 A B f s) : term4659 A B x''''''' y'''''''' f s.
Proof. exact (conj (@lem4943642 A B x''''''' y'''''''' f s h1 h2 h3) (@lem4944000 A B x''''''' y'''''''' f s h1 h2 h3)). Qed.
Lemma lem4944003 {A B : Type'} (_61469 : A) (_61470 : A) (s : A -> Prop) (f : A -> B) (h1 : term696 A B s f) : term4657 A B s _61469 f _61470.
Proof. exact (EQ_MP (@lem4943998 A B s _61469 f _61470) (@lem4943969 A B _61469 _61470 s f h1)). Qed.
Lemma lem4944004 {A B : Type'} (_61469 : A) (_61470 : A) (s : A -> Prop) (f : A -> B) (h1 : term696 A B s f) : term4657 A B s _61469 f _61470.
Proof. exact (@lem4944003 A B _61469 _61470 s f h1). Qed.
Lemma lem4944005 {A B : Type'} (x''''''' : type529 A B) (y'''''''' : type529 A B) (s : A -> Prop) (f : A -> B) (h1 : term696 A B s f) : term4660 A B x''''''' y'''''''' f s.
Proof. exact (@lem4944004 A B (term4513 A B x''''''' f s) (term4513 A B y'''''''' f s) s f h1). Qed.
Lemma lem4944008 {A B : Type'} (x''''''' : type529 A B) (y'''''''' : type529 A B) (f : A -> B) (s : A -> Prop) (h1 : term696 A B s f) (h2 : term3275 A B x''''''' y'''''''') (h3 : @FINITE A s) (h4 : term4605 A B f s) : term4661 A B x''''''' y'''''''' f s.
Proof. exact (@lem4944005 A B x''''''' y'''''''' s f h1 (@lem4944001 A B x''''''' y'''''''' f s h2 h3 h4)). Qed.
Lemma lem4944009 {A B : Type'} (x''''''' : type529 A B) (y'''''''' : type529 A B) (f : A -> B) (s : A -> Prop) (h1 : term696 A B s f) (h2 : term3275 A B x''''''' y'''''''') (h3 : @FINITE A s) (h4 : term4605 A B f s) : term4662 A B x''''''' y'''''''' f s.
Proof. exact (fun h0 : (term4520 A B x''''''' f s) = (term4520 A B y'''''''' f s) => @lem4944008 A B x''''''' y'''''''' f s h1 h2 h3 h4). Qed.
Lemma lem4944011 (p : Prop) : (term4607 p) = (~ p).
Proof. exact (EQ_MP (@lem21028 p) (@lem21107 p)). Qed.
Lemma lem4944012 {A B : Type'} (x''''''' : type529 A B) (y'''''''' : type529 A B) (f : A -> B) (s : A -> Prop) : (term4662 A B x''''''' y'''''''' f s) = (term4661 A B x''''''' y'''''''' f s).
Proof. exact (@lem4944011 ((term4520 A B x''''''' f s) = (term4520 A B y'''''''' f s))). Qed.
Lemma lem4944013 {A B : Type'} (x''''''' : type529 A B) (y'''''''' : type529 A B) (f : A -> B) (s : A -> Prop) (h1 : term696 A B s f) (h2 : term3275 A B x''''''' y'''''''') (h3 : @FINITE A s) (h4 : term4605 A B f s) : term4661 A B x''''''' y'''''''' f s.
Proof. exact (EQ_MP (@lem4944012 A B x''''''' y'''''''' f s) (@lem4944009 A B x''''''' y'''''''' f s h1 h2 h3 h4)). Qed.
Lemma lem4944015 {A : Type'} (s : A -> Prop) (h1 : @FINITE A s) : @I ((A -> Prop) -> Prop) (@FINITE A) s.
Proof. exact (EQ_MP (@lem4938951 A s) (@lem4934995 A s h1)). Qed.
Lemma lem4944016 {A : Type'} (s : A -> Prop) (h1 : @FINITE A s) : term4602 A s.
Proof. exact (fun h0 : term4500 A s => @lem4944015 A s h1). Qed.
Lemma lem4944018 (p : Prop) : (term888 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem4944019 {A : Type'} (s : A -> Prop) : (term4602 A s) = (@I ((A -> Prop) -> Prop) (@FINITE A) s).
Proof. exact (@lem4944018 (@I ((A -> Prop) -> Prop) (@FINITE A) s)). Qed.
Lemma lem4944020 {A : Type'} (s : A -> Prop) (h1 : @FINITE A s) : @I ((A -> Prop) -> Prop) (@FINITE A) s.
Proof. exact (EQ_MP (@lem4944019 A s) (@lem4944016 A s h1)). Qed.
Lemma lem4944038 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem4944039 {A B : Type'} (_61489 : A -> B) (_61490 : A -> Prop) : (term4609 A B _61489 _61490) = (term4663 A B _61489 _61490).
Proof. exact (@lem4944038 ((term4510 A B _61489 _61490) = (@I ((A -> Prop) -> nat) (@CARD A) _61490)) (term4500 A _61490)). Qed.
Lemma lem4944047 {A B : Type'} (x''''''' : type529 A B) (y'''''''' : type529 A B) (_61489 : A -> B) (_61490 : A -> Prop) : (term4664 A B x''''''' y'''''''' _61489 _61490) = (term4664 A B x''''''' y'''''''' _61489 _61490).
Proof. exact (eq_refl (term4664 A B x''''''' y'''''''' _61489 _61490)). Qed.
Lemma lem4944048 {A B : Type'} (x''''''' : type529 A B) (y'''''''' : type529 A B) (_61489 : A -> B) (_61490 : A -> Prop) : (term4601 A B x''''''' y'''''''' _61489 _61490) = (term4665 A B x''''''' y'''''''' _61489 _61490).
Proof. exact (MK_COMB (@lem4944047 A B x''''''' y'''''''' _61489 _61490) (@lem4944039 A B _61489 _61490)). Qed.
Lemma lem4944059 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4944060 {A B : Type'} (x''''''' : type529 A B) (y'''''''' : type529 A B) (_61489 : A -> B) (_61490 : A -> Prop) : (term4666 A B x''''''' y'''''''' _61489 _61490) = (term4667 A B x''''''' y'''''''' _61489 _61490).
Proof. exact (MK_COMB (@lem4944059) (@lem4944048 A B x''''''' y'''''''' _61489 _61490)). Qed.
Lemma lem4944064 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem4944065 {A B : Type'} (x''''''' : type529 A B) (y'''''''' : type529 A B) (_61489 : A -> B) (_61490 : A -> Prop) : (term4668 A B x''''''' y'''''''' _61489 _61490) = (term4665 A B x''''''' y'''''''' _61489 _61490).
Proof. exact (@lem4944064 ((term4520 A B x''''''' _61489 _61490) = (term4520 A B y'''''''' _61489 _61490)) ((term4510 A B _61489 _61490) = (@I ((A -> Prop) -> nat) (@CARD A) _61490)) (term4500 A _61490)). Qed.
Lemma lem4944085 {A B : Type'} (x''''''' : type529 A B) (y'''''''' : type529 A B) (_61489 : A -> B) (_61490 : A -> Prop) : ((term4601 A B x''''''' y'''''''' _61489 _61490) = (term4668 A B x''''''' y'''''''' _61489 _61490)) = ((term4665 A B x''''''' y'''''''' _61489 _61490) = (term4665 A B x''''''' y'''''''' _61489 _61490)).
Proof. exact (MK_COMB (@lem4944060 A B x''''''' y'''''''' _61489 _61490) (@lem4944065 A B x''''''' y'''''''' _61489 _61490)). Qed.
Lemma lem4944087 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem20665 A x) (@lem20664 A x)). Qed.
Lemma lem4944088 (x : Prop) : (x = x) = True.
Proof. exact (@lem4944087 Prop x). Qed.
Lemma lem4944089 {A B : Type'} (x''''''' : type529 A B) (y'''''''' : type529 A B) (_61489 : A -> B) (_61490 : A -> Prop) : ((term4665 A B x''''''' y'''''''' _61489 _61490) = (term4665 A B x''''''' y'''''''' _61489 _61490)) = True.
Proof. exact (@lem4944088 (term4665 A B x''''''' y'''''''' _61489 _61490)). Qed.
Lemma lem4944090 {A B : Type'} (x''''''' : type529 A B) (y'''''''' : type529 A B) (_61489 : A -> B) (_61490 : A -> Prop) : ((term4601 A B x''''''' y'''''''' _61489 _61490) = (term4668 A B x''''''' y'''''''' _61489 _61490)) = True.
Proof. exact (TRANS (@lem4944085 A B x''''''' y'''''''' _61489 _61490) (@lem4944089 A B x''''''' y'''''''' _61489 _61490)). Qed.
Lemma lem4944091 {A B : Type'} (x''''''' : type529 A B) (y'''''''' : type529 A B) (_61489 : A -> B) (_61490 : A -> Prop) : True = ((term4601 A B x''''''' y'''''''' _61489 _61490) = (term4668 A B x''''''' y'''''''' _61489 _61490)).
Proof. exact (SYM (@lem4944090 A B x''''''' y'''''''' _61489 _61490)). Qed.
Lemma lem4944092 {A B : Type'} (x''''''' : type529 A B) (y'''''''' : type529 A B) (_61489 : A -> B) (_61490 : A -> Prop) : (term4601 A B x''''''' y'''''''' _61489 _61490) = (term4668 A B x''''''' y'''''''' _61489 _61490).
Proof. exact (EQ_MP (@lem4944091 A B x''''''' y'''''''' _61489 _61490) (@lem0)). Qed.
Lemma lem4944093 {A B : Type'} (_61489 : A -> B) (_61490 : A -> Prop) (x''''''' : type529 A B) (y'''''''' : type529 A B) (h1 : term3275 A B x''''''' y'''''''') : term4668 A B x''''''' y'''''''' _61489 _61490.
Proof. exact (EQ_MP (@lem4944092 A B x''''''' y'''''''' _61489 _61490) (@lem4942311 A B _61489 _61490 x''''''' y'''''''' h1)). Qed.
Lemma lem4944095 (b : Prop) (a : Prop) : (a \/ b) = (term892 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem4944096 {A B : Type'} (x''''''' : type529 A B) (y'''''''' : type529 A B) (_61489 : A -> B) (_61490 : A -> Prop) : (term4668 A B x''''''' y'''''''' _61489 _61490) = (term4669 A B x''''''' y'''''''' _61489 _61490).
Proof. exact (@lem4944095 (term4573 A B x''''''' y'''''''' _61489 _61490) ((term4510 A B _61489 _61490) = (@I ((A -> Prop) -> nat) (@CARD A) _61490))). Qed.
Lemma lem4944098 (a : Prop) (b : Prop) : (term910 a b) = (term911 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem4944099 {A B : Type'} (x''''''' : type529 A B) (y'''''''' : type529 A B) (_61489 : A -> B) (_61490 : A -> Prop) : (term4670 A B x''''''' y'''''''' _61489 _61490) = (term4671 A B x''''''' y'''''''' _61489 _61490).
Proof. exact (@lem4944098 ((term4520 A B x''''''' _61489 _61490) = (term4520 A B y'''''''' _61489 _61490)) (term4500 A _61490)). Qed.
Lemma lem4944101 (a : Prop) : (term197 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem4944102 {A : Type'} (_61490 : A -> Prop) : (term4612 A _61490) = (@I ((A -> Prop) -> Prop) (@FINITE A) _61490).
Proof. exact (@lem4944101 (@I ((A -> Prop) -> Prop) (@FINITE A) _61490)). Qed.
Lemma lem4944103 {A B : Type'} (x''''''' : type529 A B) (y'''''''' : type529 A B) (_61489 : A -> B) (_61490 : A -> Prop) : (term4672 A B x''''''' y'''''''' _61489 _61490) = (term4672 A B x''''''' y'''''''' _61489 _61490).
Proof. exact (eq_refl (term4672 A B x''''''' y'''''''' _61489 _61490)). Qed.
Lemma lem4944104 {A B : Type'} (x''''''' : type529 A B) (y'''''''' : type529 A B) (_61489 : A -> B) (_61490 : A -> Prop) : (term4671 A B x''''''' y'''''''' _61489 _61490) = (term4673 A B x''''''' y'''''''' _61489 _61490).
Proof. exact (MK_COMB (@lem4944103 A B x''''''' y'''''''' _61489 _61490) (@lem4944102 A _61490)). Qed.
Lemma lem4944105 {A B : Type'} (x''''''' : type529 A B) (y'''''''' : type529 A B) (_61489 : A -> B) (_61490 : A -> Prop) : (term4670 A B x''''''' y'''''''' _61489 _61490) = (term4673 A B x''''''' y'''''''' _61489 _61490).
Proof. exact (TRANS (@lem4944099 A B x''''''' y'''''''' _61489 _61490) (@lem4944104 A B x''''''' y'''''''' _61489 _61490)). Qed.
Lemma lem4944106 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4944107 {A B : Type'} (x''''''' : type529 A B) (y'''''''' : type529 A B) (_61489 : A -> B) (_61490 : A -> Prop) : (term4674 A B x''''''' y'''''''' _61489 _61490) = (term4675 A B x''''''' y'''''''' _61489 _61490).
Proof. exact (MK_COMB (@lem4944106) (@lem4944105 A B x''''''' y'''''''' _61489 _61490)). Qed.
Lemma lem4944108 {A B : Type'} (_61489 : A -> B) (_61490 : A -> Prop) : ((term4510 A B _61489 _61490) = (@I ((A -> Prop) -> nat) (@CARD A) _61490)) = ((term4510 A B _61489 _61490) = (@I ((A -> Prop) -> nat) (@CARD A) _61490)).
Proof. exact (eq_refl ((term4510 A B _61489 _61490) = (@I ((A -> Prop) -> nat) (@CARD A) _61490))). Qed.
Lemma lem4944109 {A B : Type'} (x''''''' : type529 A B) (y'''''''' : type529 A B) (_61489 : A -> B) (_61490 : A -> Prop) : (term4669 A B x''''''' y'''''''' _61489 _61490) = (term4676 A B x''''''' y'''''''' _61489 _61490).
Proof. exact (MK_COMB (@lem4944107 A B x''''''' y'''''''' _61489 _61490) (@lem4944108 A B _61489 _61490)). Qed.
Lemma lem4944110 {A B : Type'} (x''''''' : type529 A B) (y'''''''' : type529 A B) (_61489 : A -> B) (_61490 : A -> Prop) : (term4668 A B x''''''' y'''''''' _61489 _61490) = (term4676 A B x''''''' y'''''''' _61489 _61490).
Proof. exact (TRANS (@lem4944096 A B x''''''' y'''''''' _61489 _61490) (@lem4944109 A B x''''''' y'''''''' _61489 _61490)). Qed.
Lemma lem4944112 {A B : Type'} (x''''''' : type529 A B) (y'''''''' : type529 A B) (f : A -> B) (s : A -> Prop) (h1 : term696 A B s f) (h2 : term3275 A B x''''''' y'''''''') (h3 : @FINITE A s) (h4 : term4605 A B f s) : term4673 A B x''''''' y'''''''' f s.
Proof. exact (conj (@lem4944013 A B x''''''' y'''''''' f s h1 h2 h3 h4) (@lem4944020 A s h3)). Qed.
Lemma lem4944114 {A B : Type'} (_61489 : A -> B) (_61490 : A -> Prop) (x''''''' : type529 A B) (y'''''''' : type529 A B) (h1 : term3275 A B x''''''' y'''''''') : term4676 A B x''''''' y'''''''' _61489 _61490.
Proof. exact (EQ_MP (@lem4944110 A B x''''''' y'''''''' _61489 _61490) (@lem4944093 A B _61489 _61490 x''''''' y'''''''' h1)). Qed.
Lemma lem4944115 {A B : Type'} (_61489 : A -> B) (_61490 : A -> Prop) (x''''''' : type529 A B) (y'''''''' : type529 A B) (h1 : term3275 A B x''''''' y'''''''') : term4676 A B x''''''' y'''''''' _61489 _61490.
Proof. exact (@lem4944114 A B _61489 _61490 x''''''' y'''''''' h1). Qed.
Lemma lem4944116 {A B : Type'} (f : A -> B) (s : A -> Prop) (x''''''' : type529 A B) (y'''''''' : type529 A B) (h1 : term3275 A B x''''''' y'''''''') : term4676 A B x''''''' y'''''''' f s.
Proof. exact (@lem4944115 A B f s x''''''' y'''''''' h1). Qed.
Lemma lem4944119 {A B : Type'} (x''''''' : type529 A B) (y'''''''' : type529 A B) (f : A -> B) (s : A -> Prop) (h1 : term696 A B s f) (h2 : term3275 A B x''''''' y'''''''') (h3 : @FINITE A s) (h4 : term4605 A B f s) : (term4510 A B f s) = (@I ((A -> Prop) -> nat) (@CARD A) s).
Proof. exact (@lem4944116 A B f s x''''''' y'''''''' h2 (@lem4944112 A B x''''''' y'''''''' f s h1 h2 h3 h4)). Qed.
Lemma lem4944120 {A B : Type'} (f : A -> B) (x''''''' : type529 A B) (y'''''''' : type529 A B) (s : A -> Prop) (h1 : term696 A B s f) (h2 : term3275 A B x''''''' y'''''''') (h3 : @FINITE A s) : term4677 A B f s.
Proof. exact (fun h0 : term4605 A B f s => @lem4944119 A B x''''''' y'''''''' f s h1 h2 h3 h0). Qed.
Lemma lem4944122 (p : Prop) : (term888 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem4944123 {A B : Type'} (f : A -> B) (s : A -> Prop) : (term4677 A B f s) = ((term4510 A B f s) = (@I ((A -> Prop) -> nat) (@CARD A) s)).
Proof. exact (@lem4944122 ((term4510 A B f s) = (@I ((A -> Prop) -> nat) (@CARD A) s))). Qed.
Lemma lem4944124 {A B : Type'} (f : A -> B) (x''''''' : type529 A B) (y'''''''' : type529 A B) (s : A -> Prop) (h1 : term696 A B s f) (h2 : term3275 A B x''''''' y'''''''') (h3 : @FINITE A s) : (term4510 A B f s) = (@I ((A -> Prop) -> nat) (@CARD A) s).
Proof. exact (EQ_MP (@lem4944123 A B f s) (@lem4944120 A B f x''''''' y'''''''' s h1 h2 h3)). Qed.
Lemma lem4944126 (x : nat) : x = x.
Proof. exact (@lem21386 nat x). Qed.
Lemma lem4944127 {A B : Type'} (f : A -> B) (s : A -> Prop) : (term4510 A B f s) = (term4510 A B f s).
Proof. exact (@lem4944126 (term4510 A B f s)). Qed.
Lemma lem4944128 {A B : Type'} (f : A -> B) (s : A -> Prop) : term4678 A B f s.
Proof. exact (fun h0 : term4679 A B f s => @lem4944127 A B f s). Qed.
Lemma lem4944130 (p : Prop) : (term888 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem4944131 {A B : Type'} (f : A -> B) (s : A -> Prop) : (term4678 A B f s) = ((term4510 A B f s) = (term4510 A B f s)).
Proof. exact (@lem4944130 ((term4510 A B f s) = (term4510 A B f s))). Qed.
Lemma lem4944132 {A B : Type'} (f : A -> B) (s : A -> Prop) : (term4510 A B f s) = (term4510 A B f s).
Proof. exact (EQ_MP (@lem4944131 A B f s) (@lem4944128 A B f s)). Qed.
Lemma lem4944150 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem4944151 (y : nat) (x : nat) (z : nat) : (term1256 x y z) = (term1257 y x z).
Proof. exact (@lem4944150 (y = z) (term1258 x z)). Qed.
Lemma lem4944161 (x : nat) (y : nat) : (term1259 x y) = (term1259 x y).
Proof. exact (eq_refl (term1259 x y)). Qed.
Lemma lem4944162 (y : nat) (x : nat) (z : nat) : (term1250 x y z) = (term1260 y x z).
Proof. exact (MK_COMB (@lem4944161 x y) (@lem4944151 y x z)). Qed.
Lemma lem4944166 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem4944167 (y : nat) (x : nat) (z : nat) : (term1260 y x z) = (term1261 y x z).
Proof. exact (@lem4944166 (y = z) (term1258 x y) (term1258 x z)). Qed.
Lemma lem4944189 (y : nat) (x : nat) (z : nat) : (term1250 x y z) = (term1261 y x z).
Proof. exact (TRANS (@lem4944162 y x z) (@lem4944167 y x z)). Qed.
Lemma lem4944190 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4944191 (y : nat) (x : nat) (z : nat) : (term1262 x y z) = (term1263 y x z).
Proof. exact (MK_COMB (@lem4944190) (@lem4944189 y x z)). Qed.
Lemma lem4944213 (y : nat) (x : nat) (z : nat) : (term1261 y x z) = (term1261 y x z).
Proof. exact (eq_refl (term1261 y x z)). Qed.
Lemma lem4944214 (y : nat) (x : nat) (z : nat) : ((term1250 x y z) = (term1261 y x z)) = ((term1261 y x z) = (term1261 y x z)).
Proof. exact (MK_COMB (@lem4944191 y x z) (@lem4944213 y x z)). Qed.
Lemma lem4944216 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem20665 A x) (@lem20664 A x)). Qed.
Lemma lem4944217 (x : Prop) : (x = x) = True.
Proof. exact (@lem4944216 Prop x). Qed.
Lemma lem4944218 (y : nat) (x : nat) (z : nat) : ((term1261 y x z) = (term1261 y x z)) = True.
Proof. exact (@lem4944217 (term1261 y x z)). Qed.
Lemma lem4944219 (y : nat) (x : nat) (z : nat) : ((term1250 x y z) = (term1261 y x z)) = True.
Proof. exact (TRANS (@lem4944214 y x z) (@lem4944218 y x z)). Qed.
Lemma lem4944220 (y : nat) (x : nat) (z : nat) : True = ((term1250 x y z) = (term1261 y x z)).
Proof. exact (SYM (@lem4944219 y x z)). Qed.
Lemma lem4944221 (y : nat) (x : nat) (z : nat) : (term1250 x y z) = (term1261 y x z).
Proof. exact (EQ_MP (@lem4944220 y x z) (@lem0)). Qed.
Lemma lem4944222 (y : nat) (x : nat) (z : nat) : term1261 y x z.
Proof. exact (EQ_MP (@lem4944221 y x z) (@lem4943464 x y z)). Qed.
Lemma lem4944224 (b : Prop) (a : Prop) : (a \/ b) = (term892 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem4944225 (x : nat) (y : nat) (z : nat) : (term1261 y x z) = (term1264 x y z).
Proof. exact (@lem4944224 (term1265 y x z) (y = z)). Qed.
Lemma lem4944227 (a : Prop) (b : Prop) : (term910 a b) = (term911 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem4944228 (y : nat) (x : nat) (z : nat) : (term1266 y x z) = (term1267 y x z).
Proof. exact (@lem4944227 (term1258 x y) (term1258 x z)). Qed.
Lemma lem4944230 (a : Prop) : (term197 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem4944231 (x : nat) (y : nat) : (term1268 x y) = (x = y).
Proof. exact (@lem4944230 (x = y)). Qed.
Lemma lem4944232 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4944233 (x : nat) (y : nat) : (term1269 x y) = (term1270 x y).
Proof. exact (MK_COMB (@lem4944232) (@lem4944231 x y)). Qed.
Lemma lem4944235 (a : Prop) : (term197 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem4944236 (x : nat) (z : nat) : (term1268 x z) = (x = z).
Proof. exact (@lem4944235 (x = z)). Qed.
Lemma lem4944237 (y : nat) (x : nat) (z : nat) : (term1267 y x z) = (term1271 y x z).
Proof. exact (MK_COMB (@lem4944233 x y) (@lem4944236 x z)). Qed.
Lemma lem4944238 (y : nat) (x : nat) (z : nat) : (term1266 y x z) = (term1271 y x z).
Proof. exact (TRANS (@lem4944228 y x z) (@lem4944237 y x z)). Qed.
Lemma lem4944239 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4944240 (y : nat) (x : nat) (z : nat) : (term1272 y x z) = (term1273 y x z).
Proof. exact (MK_COMB (@lem4944239) (@lem4944238 y x z)). Qed.
Lemma lem4944241 (y : nat) (z : nat) : (y = z) = (y = z).
Proof. exact (eq_refl (y = z)). Qed.
Lemma lem4944242 (x : nat) (y : nat) (z : nat) : (term1264 x y z) = (term1274 x y z).
Proof. exact (MK_COMB (@lem4944240 y x z) (@lem4944241 y z)). Qed.
Lemma lem4944243 (x : nat) (y : nat) (z : nat) : (term1261 y x z) = (term1274 x y z).
Proof. exact (TRANS (@lem4944225 x y z) (@lem4944242 x y z)). Qed.
Lemma lem4944245 {A B : Type'} (f : A -> B) (x''''''' : type529 A B) (y'''''''' : type529 A B) (s : A -> Prop) (h1 : term696 A B s f) (h2 : term3275 A B x''''''' y'''''''') (h3 : @FINITE A s) : term4680 A B f s.
Proof. exact (conj (@lem4944124 A B f x''''''' y'''''''' s h1 h2 h3) (@lem4944132 A B f s)). Qed.
Lemma lem4944247 (x : nat) (y : nat) (z : nat) : term1274 x y z.
Proof. exact (EQ_MP (@lem4944243 x y z) (@lem4944222 y x z)). Qed.
Lemma lem4944248 {A B : Type'} (f : A -> B) (s : A -> Prop) : term4681 A B f s.
Proof. exact (@lem4944247 (term4510 A B f s) (@I ((A -> Prop) -> nat) (@CARD A) s) (term4510 A B f s)). Qed.
Lemma lem4944251 {A B : Type'} (f : A -> B) (x''''''' : type529 A B) (y'''''''' : type529 A B) (s : A -> Prop) (h1 : term696 A B s f) (h2 : term3275 A B x''''''' y'''''''') (h3 : @FINITE A s) : (@I ((A -> Prop) -> nat) (@CARD A) s) = (term4510 A B f s).
Proof. exact (@lem4944248 A B f s (@lem4944245 A B f x''''''' y'''''''' s h1 h2 h3)). Qed.
Lemma lem4944252 {A B : Type'} (f : A -> B) (x''''''' : type529 A B) (y'''''''' : type529 A B) (s : A -> Prop) (h1 : term696 A B s f) (h2 : term3275 A B x''''''' y'''''''') (h3 : @FINITE A s) : term4682 A B f s.
Proof. exact (fun h0 : term4683 A B f s => @lem4944251 A B f x''''''' y'''''''' s h1 h2 h3). Qed.
Lemma lem4944254 (p : Prop) : (term888 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem4944255 {A B : Type'} (f : A -> B) (s : A -> Prop) : (term4682 A B f s) = ((@I ((A -> Prop) -> nat) (@CARD A) s) = (term4510 A B f s)).
Proof. exact (@lem4944254 ((@I ((A -> Prop) -> nat) (@CARD A) s) = (term4510 A B f s))). Qed.
Lemma lem4944256 {A B : Type'} (f : A -> B) (x''''''' : type529 A B) (y'''''''' : type529 A B) (s : A -> Prop) (h1 : term696 A B s f) (h2 : term3275 A B x''''''' y'''''''') (h3 : @FINITE A s) : (@I ((A -> Prop) -> nat) (@CARD A) s) = (term4510 A B f s).
Proof. exact (EQ_MP (@lem4944255 A B f s) (@lem4944252 A B f x''''''' y'''''''' s h1 h2 h3)). Qed.
Lemma lem4944258 {A B : Type'} (s : A -> Prop) (t : B -> Prop) (h1 : (@CARD A s) = (@CARD B t)) : (@I ((A -> Prop) -> nat) (@CARD A) s) = (@I ((B -> Prop) -> nat) (@CARD B) t).
Proof. exact (EQ_MP (@lem4938980 A B s t) (@lem4935007 A B s t h1)). Qed.
Lemma lem4944259 {A B : Type'} (s : A -> Prop) (t : B -> Prop) (h1 : (@CARD A s) = (@CARD B t)) : term4684 A B s t.
Proof. exact (fun h0 : term4685 A B s t => @lem4944258 A B s t h1). Qed.
Lemma lem4944261 (p : Prop) : (term888 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem4944262 {A B : Type'} (s : A -> Prop) (t : B -> Prop) : (term4684 A B s t) = ((@I ((A -> Prop) -> nat) (@CARD A) s) = (@I ((B -> Prop) -> nat) (@CARD B) t)).
Proof. exact (@lem4944261 ((@I ((A -> Prop) -> nat) (@CARD A) s) = (@I ((B -> Prop) -> nat) (@CARD B) t))). Qed.
Lemma lem4944263 {A B : Type'} (s : A -> Prop) (t : B -> Prop) (h1 : (@CARD A s) = (@CARD B t)) : (@I ((A -> Prop) -> nat) (@CARD A) s) = (@I ((B -> Prop) -> nat) (@CARD B) t).
Proof. exact (EQ_MP (@lem4944262 A B s t) (@lem4944259 A B s t h1)). Qed.
Lemma lem4944264 {A B : Type'} (f : A -> B) (x''''''' : type529 A B) (y'''''''' : type529 A B) (s : A -> Prop) (t : B -> Prop) (h1 : term696 A B s f) (h2 : term3275 A B x''''''' y'''''''') (h3 : @FINITE A s) (h4 : (@CARD A s) = (@CARD B t)) : term4686 A B f s t.
Proof. exact (conj (@lem4944256 A B f x''''''' y'''''''' s h1 h2 h3) (@lem4944263 A B s t h4)). Qed.
Lemma lem4944266 (x : nat) (y : nat) (z : nat) : term1274 x y z.
Proof. exact (EQ_MP (@lem4944243 x y z) (@lem4944222 y x z)). Qed.
Lemma lem4944267 {A B : Type'} (f : A -> B) (s : A -> Prop) (t : B -> Prop) : term4687 A B f s t.
Proof. exact (@lem4944266 (@I ((A -> Prop) -> nat) (@CARD A) s) (term4510 A B f s) (@I ((B -> Prop) -> nat) (@CARD B) t)). Qed.
Lemma lem4944270 {A B : Type'} (f : A -> B) (x''''''' : type529 A B) (y'''''''' : type529 A B) (s : A -> Prop) (t : B -> Prop) (h1 : term696 A B s f) (h2 : term3275 A B x''''''' y'''''''') (h3 : @FINITE A s) (h4 : (@CARD A s) = (@CARD B t)) : (term4510 A B f s) = (@I ((B -> Prop) -> nat) (@CARD B) t).
Proof. exact (@lem4944267 A B f s t (@lem4944264 A B f x''''''' y'''''''' s t h1 h2 h3 h4)). Qed.
Lemma lem4944271 {A B : Type'} (f : A -> B) (x''''''' : type529 A B) (y'''''''' : type529 A B) (s : A -> Prop) (t : B -> Prop) (h1 : term696 A B s f) (h2 : term3275 A B x''''''' y'''''''') (h3 : @FINITE A s) (h4 : (@CARD A s) = (@CARD B t)) : term4688 A B f s t.
Proof. exact (fun h0 : term4689 A B f s t => @lem4944270 A B f x''''''' y'''''''' s t h1 h2 h3 h4). Qed.
Lemma lem4944273 (p : Prop) : (term888 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem4944274 {A B : Type'} (f : A -> B) (s : A -> Prop) (t : B -> Prop) : (term4688 A B f s t) = ((term4510 A B f s) = (@I ((B -> Prop) -> nat) (@CARD B) t)).
Proof. exact (@lem4944273 ((term4510 A B f s) = (@I ((B -> Prop) -> nat) (@CARD B) t))). Qed.
Lemma lem4944275 {A B : Type'} (f : A -> B) (x''''''' : type529 A B) (y'''''''' : type529 A B) (s : A -> Prop) (t : B -> Prop) (h1 : term696 A B s f) (h2 : term3275 A B x''''''' y'''''''') (h3 : @FINITE A s) (h4 : (@CARD A s) = (@CARD B t)) : (term4510 A B f s) = (@I ((B -> Prop) -> nat) (@CARD B) t).
Proof. exact (EQ_MP (@lem4944274 A B f s t) (@lem4944271 A B f x''''''' y'''''''' s t h1 h2 h3 h4)). Qed.
Lemma lem4944291 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem4944292 {B : Type'} (_61473 : B -> Prop) (_61474 : B -> Prop) : (term4597 B _61473 _61474) = (term4690 B _61473 _61474).
Proof. exact (@lem4944291 (term4493 B _61473 _61474) (term4496 B _61473 _61474) (_61473 = _61474)). Qed.
Lemma lem4944308 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem4944309 {B : Type'} (_61473 : B -> Prop) (_61474 : B -> Prop) : (term4691 B _61473 _61474) = (term4692 B _61473 _61474).
Proof. exact (@lem4944308 (_61473 = _61474) (term4496 B _61473 _61474)). Qed.
Lemma lem4944317 {B : Type'} (_61473 : B -> Prop) (_61474 : B -> Prop) : (term4693 B _61473 _61474) = (term4693 B _61473 _61474).
Proof. exact (eq_refl (term4693 B _61473 _61474)). Qed.
Lemma lem4944318 {B : Type'} (_61473 : B -> Prop) (_61474 : B -> Prop) : (term4690 B _61473 _61474) = (term4694 B _61473 _61474).
Proof. exact (MK_COMB (@lem4944317 B _61473 _61474) (@lem4944309 B _61473 _61474)). Qed.
Lemma lem4944322 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem4944323 {B : Type'} (_61473 : B -> Prop) (_61474 : B -> Prop) : (term4694 B _61473 _61474) = (term4695 B _61473 _61474).
Proof. exact (@lem4944322 (_61473 = _61474) (term4493 B _61473 _61474) (term4496 B _61473 _61474)). Qed.
Lemma lem4944343 {B : Type'} (_61473 : B -> Prop) (_61474 : B -> Prop) : (term4690 B _61473 _61474) = (term4695 B _61473 _61474).
Proof. exact (TRANS (@lem4944318 B _61473 _61474) (@lem4944323 B _61473 _61474)). Qed.
Lemma lem4944344 {B : Type'} (_61473 : B -> Prop) (_61474 : B -> Prop) : (term4597 B _61473 _61474) = (term4695 B _61473 _61474).
Proof. exact (TRANS (@lem4944292 B _61473 _61474) (@lem4944343 B _61473 _61474)). Qed.
Lemma lem4944345 {B : Type'} (_61474 : B -> Prop) : (term4501 B _61474) = (term4501 B _61474).
Proof. exact (eq_refl (term4501 B _61474)). Qed.
Lemma lem4944346 {B : Type'} (_61473 : B -> Prop) (_61474 : B -> Prop) : (term4598 B _61473 _61474) = (term4696 B _61473 _61474).
Proof. exact (MK_COMB (@lem4944345 B _61474) (@lem4944344 B _61473 _61474)). Qed.
Lemma lem4944350 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem4944351 {B : Type'} (_61473 : B -> Prop) (_61474 : B -> Prop) : (term4696 B _61473 _61474) = (term4697 B _61473 _61474).
Proof. exact (@lem4944350 (_61473 = _61474) (term4500 B _61474) (term4698 B _61473 _61474)). Qed.
Lemma lem4944367 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem4944368 {B : Type'} (_61473 : B -> Prop) (_61474 : B -> Prop) : (term4699 B _61473 _61474) = (term4700 B _61473 _61474).
Proof. exact (@lem4944367 (term4493 B _61473 _61474) (term4500 B _61474) (term4496 B _61473 _61474)). Qed.
Lemma lem4944386 {B : Type'} (_61473 : B -> Prop) (_61474 : B -> Prop) : (term2434 B _61473 _61474) = (term2434 B _61473 _61474).
Proof. exact (eq_refl (term2434 B _61473 _61474)). Qed.
Lemma lem4944387 {B : Type'} (_61473 : B -> Prop) (_61474 : B -> Prop) : (term4697 B _61473 _61474) = (term4701 B _61473 _61474).
Proof. exact (MK_COMB (@lem4944386 B _61473 _61474) (@lem4944368 B _61473 _61474)). Qed.
Lemma lem4944398 {B : Type'} (_61473 : B -> Prop) (_61474 : B -> Prop) : (term4696 B _61473 _61474) = (term4701 B _61473 _61474).
Proof. exact (TRANS (@lem4944351 B _61473 _61474) (@lem4944387 B _61473 _61474)). Qed.
Lemma lem4944399 {B : Type'} (_61473 : B -> Prop) (_61474 : B -> Prop) : (term4598 B _61473 _61474) = (term4701 B _61473 _61474).
Proof. exact (TRANS (@lem4944346 B _61473 _61474) (@lem4944398 B _61473 _61474)). Qed.
Lemma lem4944400 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4944401 {B : Type'} (_61473 : B -> Prop) (_61474 : B -> Prop) : (term4702 B _61473 _61474) = (term4703 B _61473 _61474).
Proof. exact (MK_COMB (@lem4944400) (@lem4944399 B _61473 _61474)). Qed.
Lemma lem4944427 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem4944428 {B : Type'} (_61473 : B -> Prop) (_61474 : B -> Prop) : (term4499 B _61473 _61474) = (term4698 B _61473 _61474).
Proof. exact (@lem4944427 (term4493 B _61473 _61474) (term4496 B _61473 _61474)). Qed.
Lemma lem4944436 {B : Type'} (_61474 : B -> Prop) : (term4501 B _61474) = (term4501 B _61474).
Proof. exact (eq_refl (term4501 B _61474)). Qed.
Lemma lem4944437 {B : Type'} (_61473 : B -> Prop) (_61474 : B -> Prop) : (term4502 B _61473 _61474) = (term4699 B _61473 _61474).
Proof. exact (MK_COMB (@lem4944436 B _61474) (@lem4944428 B _61473 _61474)). Qed.
Lemma lem4944441 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem4944442 {B : Type'} (_61473 : B -> Prop) (_61474 : B -> Prop) : (term4699 B _61473 _61474) = (term4700 B _61473 _61474).
Proof. exact (@lem4944441 (term4493 B _61473 _61474) (term4500 B _61474) (term4496 B _61473 _61474)). Qed.
Lemma lem4944460 {B : Type'} (_61473 : B -> Prop) (_61474 : B -> Prop) : (term4502 B _61473 _61474) = (term4700 B _61473 _61474).
Proof. exact (TRANS (@lem4944437 B _61473 _61474) (@lem4944442 B _61473 _61474)). Qed.
Lemma lem4944461 {B : Type'} (_61473 : B -> Prop) (_61474 : B -> Prop) : (term2434 B _61473 _61474) = (term2434 B _61473 _61474).
Proof. exact (eq_refl (term2434 B _61473 _61474)). Qed.
Lemma lem4944462 {B : Type'} (_61473 : B -> Prop) (_61474 : B -> Prop) : (term4704 B _61473 _61474) = (term4701 B _61473 _61474).
Proof. exact (MK_COMB (@lem4944461 B _61473 _61474) (@lem4944460 B _61473 _61474)). Qed.
Lemma lem4944473 {B : Type'} (_61473 : B -> Prop) (_61474 : B -> Prop) : ((term4598 B _61473 _61474) = (term4704 B _61473 _61474)) = ((term4701 B _61473 _61474) = (term4701 B _61473 _61474)).
Proof. exact (MK_COMB (@lem4944401 B _61473 _61474) (@lem4944462 B _61473 _61474)). Qed.
Lemma lem4944475 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem20665 A x) (@lem20664 A x)). Qed.
Lemma lem4944476 (x : Prop) : (x = x) = True.
Proof. exact (@lem4944475 Prop x). Qed.
Lemma lem4944477 {B : Type'} (_61473 : B -> Prop) (_61474 : B -> Prop) : ((term4701 B _61473 _61474) = (term4701 B _61473 _61474)) = True.
Proof. exact (@lem4944476 (term4701 B _61473 _61474)). Qed.
Lemma lem4944478 {B : Type'} (_61473 : B -> Prop) (_61474 : B -> Prop) : ((term4598 B _61473 _61474) = (term4704 B _61473 _61474)) = True.
Proof. exact (TRANS (@lem4944473 B _61473 _61474) (@lem4944477 B _61473 _61474)). Qed.
Lemma lem4944479 {B : Type'} (_61473 : B -> Prop) (_61474 : B -> Prop) : True = ((term4598 B _61473 _61474) = (term4704 B _61473 _61474)).
Proof. exact (SYM (@lem4944478 B _61473 _61474)). Qed.
Lemma lem4944480 {B : Type'} (_61473 : B -> Prop) (_61474 : B -> Prop) : (term4598 B _61473 _61474) = (term4704 B _61473 _61474).
Proof. exact (EQ_MP (@lem4944479 B _61473 _61474) (@lem0)). Qed.
Lemma lem4944481 {B : Type'} (_61473 : B -> Prop) (_61474 : B -> Prop) (h1 : term2704 B) : term4704 B _61473 _61474.
Proof. exact (EQ_MP (@lem4944480 B _61473 _61474) (@lem4942215 B _61473 _61474 h1)). Qed.
Lemma lem4944483 (b : Prop) (a : Prop) : (a \/ b) = (term892 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem4944484 {B : Type'} (_61473 : B -> Prop) (_61474 : B -> Prop) : (term4704 B _61473 _61474) = (term4705 B _61473 _61474).
Proof. exact (@lem4944483 (term4502 B _61473 _61474) (_61473 = _61474)). Qed.
Lemma lem4944486 (a : Prop) (b : Prop) : (term910 a b) = (term911 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem4944487 {B : Type'} (_61473 : B -> Prop) (_61474 : B -> Prop) : (term4706 B _61473 _61474) = (term4707 B _61473 _61474).
Proof. exact (@lem4944486 (term4500 B _61474) (term4499 B _61473 _61474)). Qed.
Lemma lem4944489 (a : Prop) : (term197 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem4944490 {B : Type'} (_61474 : B -> Prop) : (term4612 B _61474) = (@I ((B -> Prop) -> Prop) (@FINITE B) _61474).
Proof. exact (@lem4944489 (@I ((B -> Prop) -> Prop) (@FINITE B) _61474)). Qed.
Lemma lem4944491 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4944492 {B : Type'} (_61474 : B -> Prop) : (term4613 B _61474) = (term4614 B _61474).
Proof. exact (MK_COMB (@lem4944491) (@lem4944490 B _61474)). Qed.
Lemma lem4944494 (a : Prop) (b : Prop) : (term910 a b) = (term911 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem4944495 {B : Type'} (_61473 : B -> Prop) (_61474 : B -> Prop) : (term4708 B _61473 _61474) = (term4709 B _61473 _61474).
Proof. exact (@lem4944494 (term4496 B _61473 _61474) (term4493 B _61473 _61474)). Qed.
Lemma lem4944497 (a : Prop) : (term197 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem4944498 {B : Type'} (_61473 : B -> Prop) (_61474 : B -> Prop) : (term4710 B _61473 _61474) = (term4494 B _61473 _61474).
Proof. exact (@lem4944497 (term4494 B _61473 _61474)). Qed.
Lemma lem4944499 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4944500 {B : Type'} (_61473 : B -> Prop) (_61474 : B -> Prop) : (term4711 B _61473 _61474) = (term4712 B _61473 _61474).
Proof. exact (MK_COMB (@lem4944499) (@lem4944498 B _61473 _61474)). Qed.
Lemma lem4944502 (a : Prop) : (term197 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem4944503 {B : Type'} (_61473 : B -> Prop) (_61474 : B -> Prop) : (term4713 B _61473 _61474) = ((@I ((B -> Prop) -> nat) (@CARD B) _61473) = (@I ((B -> Prop) -> nat) (@CARD B) _61474)).
Proof. exact (@lem4944502 ((@I ((B -> Prop) -> nat) (@CARD B) _61473) = (@I ((B -> Prop) -> nat) (@CARD B) _61474))). Qed.
Lemma lem4944504 {B : Type'} (_61473 : B -> Prop) (_61474 : B -> Prop) : (term4709 B _61473 _61474) = (term4714 B _61473 _61474).
Proof. exact (MK_COMB (@lem4944500 B _61473 _61474) (@lem4944503 B _61473 _61474)). Qed.
Lemma lem4944505 {B : Type'} (_61473 : B -> Prop) (_61474 : B -> Prop) : (term4708 B _61473 _61474) = (term4714 B _61473 _61474).
Proof. exact (TRANS (@lem4944495 B _61473 _61474) (@lem4944504 B _61473 _61474)). Qed.
Lemma lem4944506 {B : Type'} (_61473 : B -> Prop) (_61474 : B -> Prop) : (term4707 B _61473 _61474) = (term4715 B _61473 _61474).
Proof. exact (MK_COMB (@lem4944492 B _61474) (@lem4944505 B _61473 _61474)). Qed.
Lemma lem4944507 {B : Type'} (_61473 : B -> Prop) (_61474 : B -> Prop) : (term4706 B _61473 _61474) = (term4715 B _61473 _61474).
Proof. exact (TRANS (@lem4944487 B _61473 _61474) (@lem4944506 B _61473 _61474)). Qed.
Lemma lem4944508 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4944509 {B : Type'} (_61473 : B -> Prop) (_61474 : B -> Prop) : (term4716 B _61473 _61474) = (term4717 B _61473 _61474).
Proof. exact (MK_COMB (@lem4944508) (@lem4944507 B _61473 _61474)). Qed.
Lemma lem4944510 {B : Type'} (_61473 : B -> Prop) (_61474 : B -> Prop) : (_61473 = _61474) = (_61473 = _61474).
Proof. exact (eq_refl (_61473 = _61474)). Qed.
Lemma lem4944511 {B : Type'} (_61473 : B -> Prop) (_61474 : B -> Prop) : (term4705 B _61473 _61474) = (term4718 B _61473 _61474).
Proof. exact (MK_COMB (@lem4944509 B _61473 _61474) (@lem4944510 B _61473 _61474)). Qed.
Lemma lem4944512 {B : Type'} (_61473 : B -> Prop) (_61474 : B -> Prop) : (term4704 B _61473 _61474) = (term4718 B _61473 _61474).
Proof. exact (TRANS (@lem4944484 B _61473 _61474) (@lem4944511 B _61473 _61474)). Qed.
Lemma lem4944514 {A B : Type'} (x''''''' : type529 A B) (y'''''''' : type529 A B) (f : A -> B) (s : A -> Prop) (t : B -> Prop) (h1 : term696 A B s f) (h2 : term3275 A B x''''''' y'''''''') (h3 : @FINITE A s) (h4 : (@CARD A s) = (@CARD B t)) (h5 : term692 A B f s t) : term4719 A B f s t.
Proof. exact (conj (@lem4943594 A B f s t h5) (@lem4944275 A B f x''''''' y'''''''' s t h1 h2 h3 h4)). Qed.
Lemma lem4944515 {A B : Type'} (x''''''' : type529 A B) (y'''''''' : type529 A B) (f : A -> B) (s : A -> Prop) (t : B -> Prop) (h1 : term696 A B s f) (h2 : term3275 A B x''''''' y'''''''') (h3 : @FINITE A s) (h4 : @FINITE B t) (h5 : (@CARD A s) = (@CARD B t)) (h6 : term692 A B f s t) : term4720 A B f s t.
Proof. exact (conj (@lem4943587 B t h4) (@lem4944514 A B x''''''' y'''''''' f s t h1 h2 h3 h5 h6)). Qed.
Lemma lem4944517 {B : Type'} (_61473 : B -> Prop) (_61474 : B -> Prop) (h1 : term2704 B) : term4718 B _61473 _61474.
Proof. exact (EQ_MP (@lem4944512 B _61473 _61474) (@lem4944481 B _61473 _61474 h1)). Qed.
Lemma lem4944518 {B : Type'} (_61473 : B -> Prop) (_61474 : B -> Prop) (h1 : term2704 B) : term4718 B _61473 _61474.
Proof. exact (@lem4944517 B _61473 _61474 h1). Qed.
Lemma lem4944519 {A B : Type'} (f : A -> B) (s : A -> Prop) (t : B -> Prop) (h1 : term2704 B) : term4721 A B f s t.
Proof. exact (@lem4944518 B (term2600 A B f s) t h1). Qed.
Lemma lem4944522 {A B : Type'} (x''''''' : type529 A B) (y'''''''' : type529 A B) (f : A -> B) (s : A -> Prop) (t : B -> Prop) (h1 : term696 A B s f) (h2 : term3275 A B x''''''' y'''''''') (h3 : term2704 B) (h4 : @FINITE A s) (h5 : @FINITE B t) (h6 : (@CARD A s) = (@CARD B t)) (h7 : term692 A B f s t) : (term2600 A B f s) = t.
Proof. exact (@lem4944519 A B f s t h3 (@lem4944515 A B x''''''' y'''''''' f s t h1 h2 h4 h5 h6 h7)). Qed.
Lemma lem4944523 {A B : Type'} (x''''''' : type529 A B) (y'''''''' : type529 A B) (f : A -> B) (s : A -> Prop) (t : B -> Prop) (h1 : term696 A B s f) (h2 : term3275 A B x''''''' y'''''''') (h3 : term2704 B) (h4 : @FINITE A s) (h5 : @FINITE B t) (h6 : (@CARD A s) = (@CARD B t)) (h7 : term692 A B f s t) : term4722 A B f s t.
Proof. exact (fun h0 : term4491 A B f s t => @lem4944522 A B x''''''' y'''''''' f s t h1 h2 h3 h4 h5 h6 h7). Qed.
Lemma lem4944525 (p : Prop) : (term888 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem4944526 {A B : Type'} (f : A -> B) (s : A -> Prop) (t : B -> Prop) : (term4722 A B f s t) = ((term2600 A B f s) = t).
Proof. exact (@lem4944525 ((term2600 A B f s) = t)). Qed.
Lemma lem4944527 {A B : Type'} (x''''''' : type529 A B) (y'''''''' : type529 A B) (f : A -> B) (s : A -> Prop) (t : B -> Prop) (h1 : term696 A B s f) (h2 : term3275 A B x''''''' y'''''''') (h3 : term2704 B) (h4 : @FINITE A s) (h5 : @FINITE B t) (h6 : (@CARD A s) = (@CARD B t)) (h7 : term692 A B f s t) : (term2600 A B f s) = t.
Proof. exact (EQ_MP (@lem4944526 A B f s t) (@lem4944523 A B x''''''' y'''''''' f s t h1 h2 h3 h4 h5 h6 h7)). Qed.
Lemma lem4944530 (p : Prop) : (~ p) = (p -> False).
Proof. exact (EQ_MP (@lem21021 p) (@lem0)). Qed.
Lemma lem4944532 {A B : Type'} (f : A -> B) (s : A -> Prop) (t : B -> Prop) : (term4491 A B f s t) = (term4723 A B f s t).
Proof. exact (@lem4944530 ((term2600 A B f s) = t)). Qed.
Lemma lem4944535 {A B : Type'} (f : A -> B) (s : A -> Prop) (t : B -> Prop) (h1 : term2703 A B f s t) : term4723 A B f s t.
Proof. exact (EQ_MP (@lem4944532 A B f s t) (@lem4942179 A B f s t h1)). Qed.
Lemma lem4944538 {A B : Type'} (x''''''' : type529 A B) (y'''''''' : type529 A B) (f : A -> B) (s : A -> Prop) (t : B -> Prop) (h1 : term696 A B s f) (h2 : term3275 A B x''''''' y'''''''') (h3 : term2704 B) (h4 : @FINITE A s) (h5 : @FINITE B t) (h6 : term2703 A B f s t) (h7 : (@CARD A s) = (@CARD B t)) (h8 : term692 A B f s t) : False.
Proof. exact (@lem4944535 A B f s t h6 (@lem4944527 A B x''''''' y'''''''' f s t h1 h2 h3 h4 h5 h7 h8)). Qed.
Lemma lem4944539 {A B : Type'} (x''''''' : type529 A B) (y'''''''' : type529 A B) (f : A -> B) (s : A -> Prop) (t : B -> Prop) (h1 : term696 A B s f) (h2 : term3275 A B x''''''' y'''''''') (h3 : term2704 B) (h4 : @FINITE A s) (h5 : @FINITE B t) (h6 : term2703 A B f s t) (h7 : (@CARD A s) = (@CARD B t)) (h8 : term692 A B f s t) : term987.
Proof. exact (fun h0 : ~ False => @lem4944538 A B x''''''' y'''''''' f s t h1 h2 h3 h4 h5 h6 h7 h8). Qed.
Lemma lem4944541 (p : Prop) : (term888 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem4944542 : term987 = False.
Proof. exact (@lem4944541 False). Qed.
Lemma lem4944543 {A B : Type'} (x''''''' : type529 A B) (y'''''''' : type529 A B) (f : A -> B) (s : A -> Prop) (t : B -> Prop) (h1 : term696 A B s f) (h2 : term3275 A B x''''''' y'''''''') (h3 : term2704 B) (h4 : @FINITE A s) (h5 : @FINITE B t) (h6 : term2703 A B f s t) (h7 : (@CARD A s) = (@CARD B t)) (h8 : term692 A B f s t) : False.
Proof. exact (EQ_MP (@lem4944542) (@lem4944539 A B x''''''' y'''''''' f s t h1 h2 h3 h4 h5 h6 h7 h8)). Qed.
Lemma lem4944544 {A B : Type'} (x''''''' : type529 A B) (y'''''''' : type529 A B) (x'''''''' : type485 A) (f : A -> B) (s : A -> Prop) (t : B -> Prop) (h1 : term696 A B s f) (h2 : term3275 A B x''''''' y'''''''') (h3 : term2704 B) (h4 : term3085 A x'''''''') (h5 : @FINITE A s) (h6 : @FINITE B t) (h7 : term2703 A B f s t) (h8 : (@CARD A s) = (@CARD B t)) (h9 : term692 A B f s t) : False.
Proof. exact (ex_elim (@lem4938942 A x'''''''' h4) (fun y''''''''' : type485 A => fun h0 : term3084 A x'''''''' y''''''''' => @lem4944543 A B x''''''' y'''''''' f s t h1 h2 h3 h5 h6 h7 h8 h9)). Qed.
Lemma lem4944545 {A B : Type'} (x''''''' : type529 A B) (y'''''''' : type529 A B) (f : A -> B) (s : A -> Prop) (t : B -> Prop) (h1 : term696 A B s f) (h2 : term2706 A) (h3 : term3275 A B x''''''' y'''''''') (h4 : term2704 B) (h5 : @FINITE A s) (h6 : @FINITE B t) (h7 : term2703 A B f s t) (h8 : (@CARD A s) = (@CARD B t)) (h9 : term692 A B f s t) : False.
Proof. exact (ex_elim (@lem4935513 A h2) (fun x'''''''' : type485 A => fun h0 : term3086 A x'''''''' => @lem4944544 A B x''''''' y'''''''' x'''''''' f s t h1 h3 h4 h0 h5 h6 h7 h8 h9)). Qed.
Lemma lem4944546 {A B : Type'} (x''''''' : type529 A B) (f : A -> B) (s : A -> Prop) (t : B -> Prop) (h1 : term696 A B s f) (h2 : term2706 A) (h3 : term2704 B) (h4 : term3278 A B x''''''') (h5 : @FINITE A s) (h6 : @FINITE B t) (h7 : term2703 A B f s t) (h8 : (@CARD A s) = (@CARD B t)) (h9 : term692 A B f s t) : False.
Proof. exact (ex_elim (@lem4938940 A B x''''''' h4) (fun y'''''''' : type529 A B => fun h0 : term3277 A B x''''''' y'''''''' => @lem4944545 A B x''''''' y'''''''' f s t h1 h2 h0 h3 h5 h6 h7 h8 h9)). Qed.
Lemma lem4944547 {A B : Type'} (f : A -> B) (s : A -> Prop) (t : B -> Prop) (h1 : term696 A B s f) (h2 : term2706 A) (h3 : term2705 A B) (h4 : term2704 B) (h5 : @FINITE A s) (h6 : @FINITE B t) (h7 : term2703 A B f s t) (h8 : (@CARD A s) = (@CARD B t)) (h9 : term692 A B f s t) : False.
Proof. exact (ex_elim (@lem4935919 A B h3) (fun x''''''' : type529 A B => fun h0 : term3279 A B x''''''' => @lem4944546 A B x''''''' f s t h1 h2 h4 h0 h5 h6 h7 h8 h9)). Qed.
Lemma lem4944548 {A B : Type'} (x'''''' : type413 A) (f : A -> B) (s : A -> Prop) (t : B -> Prop) (h1 : term696 A B s f) (h2 : term2706 A) (h3 : term2705 A B) (h4 : term2704 B) (h5 : term3472 A x'''''') (h6 : @FINITE A s) (h7 : @FINITE B t) (h8 : term2703 A B f s t) (h9 : (@CARD A s) = (@CARD B t)) (h10 : term692 A B f s t) : False.
Proof. exact (ex_elim (@lem4938938 A x'''''' h5) (fun y''''''' : type413 A => fun h0 : term3471 A x'''''' y''''''' => @lem4944547 A B f s t h1 h2 h3 h4 h6 h7 h8 h9 h10)). Qed.
Lemma lem4944549 {A B : Type'} (f : A -> B) (s : A -> Prop) (t : B -> Prop) (h1 : term696 A B s f) (h2 : term2706 A) (h3 : term2705 A B) (h4 : term2709 A) (h5 : term2704 B) (h6 : @FINITE A s) (h7 : @FINITE B t) (h8 : term2703 A B f s t) (h9 : (@CARD A s) = (@CARD B t)) (h10 : term692 A B f s t) : False.
Proof. exact (ex_elim (@lem4936325 A h4) (fun x'''''' : type413 A => fun h0 : term3473 A x'''''' => @lem4944548 A B x'''''' f s t h1 h2 h3 h5 h0 h6 h7 h8 h9 h10)). Qed.
Lemma lem4944550 {A B : Type'} (x''''' : type457 A B) (f : A -> B) (s : A -> Prop) (t : B -> Prop) (h1 : term696 A B s f) (h2 : term2706 A) (h3 : term2705 A B) (h4 : term2709 A) (h5 : term2704 B) (h6 : term3666 A B x''''') (h7 : @FINITE A s) (h8 : @FINITE B t) (h9 : term2703 A B f s t) (h10 : (@CARD A s) = (@CARD B t)) (h11 : term692 A B f s t) : False.
Proof. exact (ex_elim (@lem4938936 A B x''''' h6) (fun y'''''' : type457 A B => fun h0 : term3665 A B x''''' y'''''' => @lem4944549 A B f s t h1 h2 h3 h4 h5 h7 h8 h9 h10 h11)). Qed.
Lemma lem4944551 {A B : Type'} (f : A -> B) (s : A -> Prop) (t : B -> Prop) (h1 : term696 A B s f) (h2 : term2706 A) (h3 : term2705 A B) (h4 : term2709 A) (h5 : term2708 A B) (h6 : term2704 B) (h7 : @FINITE A s) (h8 : @FINITE B t) (h9 : term2703 A B f s t) (h10 : (@CARD A s) = (@CARD B t)) (h11 : term692 A B f s t) : False.
Proof. exact (ex_elim (@lem4936731 A B h5) (fun x''''' : type457 A B => fun h0 : term3667 A B x''''' => @lem4944550 A B x''''' f s t h1 h2 h3 h4 h6 h0 h7 h8 h9 h10 h11)). Qed.
Lemma lem4944552 {A B : Type'} (x'''' : type694 A) (f : A -> B) (s : A -> Prop) (t : B -> Prop) (h1 : term696 A B s f) (h2 : term2706 A) (h3 : term2705 A B) (h4 : term2709 A) (h5 : term2708 A B) (h6 : term2704 B) (h7 : term3860 A x'''') (h8 : @FINITE A s) (h9 : @FINITE B t) (h10 : term2703 A B f s t) (h11 : (@CARD A s) = (@CARD B t)) (h12 : term692 A B f s t) : False.
Proof. exact (ex_elim (@lem4938934 A x'''' h7) (fun y''''' : type694 A => fun h0 : term3859 A x'''' y''''' => @lem4944551 A B f s t h1 h2 h3 h4 h5 h6 h8 h9 h10 h11 h12)). Qed.
Lemma lem4944553 {A B : Type'} (f : A -> B) (s : A -> Prop) (t : B -> Prop) (h1 : term696 A B s f) (h2 : term2706 A) (h3 : term2705 A B) (h4 : term2709 A) (h5 : term2708 A B) (h6 : term2707 A) (h7 : term2704 B) (h8 : @FINITE A s) (h9 : @FINITE B t) (h10 : term2703 A B f s t) (h11 : (@CARD A s) = (@CARD B t)) (h12 : term692 A B f s t) : False.
Proof. exact (ex_elim (@lem4937137 A h6) (fun x'''' : type694 A => fun h0 : term3861 A x'''' => @lem4944552 A B x'''' f s t h1 h2 h3 h4 h5 h7 h0 h8 h9 h10 h11 h12)). Qed.
Lemma lem4944554 {A B : Type'} (x''' : type485 B) (f : A -> B) (s : A -> Prop) (t : B -> Prop) (h1 : term696 A B s f) (h2 : term2706 A) (h3 : term2705 A B) (h4 : term2709 A) (h5 : term2708 A B) (h6 : term2707 A) (h7 : term2704 B) (h8 : term3085 B x''') (h9 : @FINITE A s) (h10 : @FINITE B t) (h11 : term2703 A B f s t) (h12 : (@CARD A s) = (@CARD B t)) (h13 : term692 A B f s t) : False.
Proof. exact (ex_elim (@lem4938932 B x''' h8) (fun y'''' : type485 B => fun h0 : term3084 B x''' y'''' => @lem4944553 A B f s t h1 h2 h3 h4 h5 h6 h7 h9 h10 h11 h12 h13)). Qed.
Lemma lem4944555 {A B : Type'} (f : A -> B) (s : A -> Prop) (t : B -> Prop) (h1 : term696 A B s f) (h2 : term2706 A) (h3 : term2705 A B) (h4 : term2709 A) (h5 : term2708 A B) (h6 : term2707 A) (h7 : term2706 B) (h8 : term2704 B) (h9 : @FINITE A s) (h10 : @FINITE B t) (h11 : term2703 A B f s t) (h12 : (@CARD A s) = (@CARD B t)) (h13 : term692 A B f s t) : False.
Proof. exact (ex_elim (@lem4937543 B h7) (fun x''' : type485 B => fun h0 : term3086 B x''' => @lem4944554 A B x''' f s t h1 h2 h3 h4 h5 h6 h8 h0 h9 h10 h11 h12 h13)). Qed.
Lemma lem4944556 {A B : Type'} (x'' : type164 A B) (f : A -> B) (s : A -> Prop) (t : B -> Prop) (h1 : term696 A B s f) (h2 : term2706 A) (h3 : term2705 A B) (h4 : term2709 A) (h5 : term2708 A B) (h6 : term2707 A) (h7 : term2706 B) (h8 : term2704 B) (h9 : term4061 A B x'') (h10 : @FINITE A s) (h11 : @FINITE B t) (h12 : term2703 A B f s t) (h13 : (@CARD A s) = (@CARD B t)) (h14 : term692 A B f s t) : False.
Proof. exact (ex_elim (@lem4938930 A B x'' h9) (fun y''' : type164 A B => fun h0 : term4060 A B x'' y''' => @lem4944555 A B f s t h1 h2 h3 h4 h5 h6 h7 h8 h10 h11 h12 h13 h14)). Qed.
Lemma lem4944557 {A B : Type'} (f : A -> B) (s : A -> Prop) (t : B -> Prop) (h1 : term696 A B s f) (h2 : term2706 A) (h3 : term2705 A B) (h4 : term2709 A) (h5 : term2708 A B) (h6 : term2707 A) (h7 : term2706 B) (h8 : term2704 B) (h9 : term2712 A B) (h10 : @FINITE A s) (h11 : @FINITE B t) (h12 : term2703 A B f s t) (h13 : (@CARD A s) = (@CARD B t)) (h14 : term692 A B f s t) : False.
Proof. exact (ex_elim (@lem4937949 A B h9) (fun x'' : type164 A B => fun h0 : term4062 A B x'' => @lem4944556 A B x'' f s t h1 h2 h3 h4 h5 h6 h7 h8 h0 h10 h11 h12 h13 h14)). Qed.
Lemma lem4944558 {A B : Type'} (x' : type161 B) (f : A -> B) (s : A -> Prop) (t : B -> Prop) (h1 : term696 A B s f) (h2 : term2706 A) (h3 : term2705 A B) (h4 : term2709 A) (h5 : term2708 A B) (h6 : term2707 A) (h7 : term2706 B) (h8 : term2704 B) (h9 : term2712 A B) (h10 : term4255 B x') (h11 : @FINITE A s) (h12 : @FINITE B t) (h13 : term2703 A B f s t) (h14 : (@CARD A s) = (@CARD B t)) (h15 : term692 A B f s t) : False.
Proof. exact (ex_elim (@lem4938928 B x' h10) (fun y'' : type161 B => fun h0 : term4254 B x' y'' => @lem4944557 A B f s t h1 h2 h3 h4 h5 h6 h7 h8 h9 h11 h12 h13 h14 h15)). Qed.
Lemma lem4944559 {A B : Type'} (f : A -> B) (s : A -> Prop) (t : B -> Prop) (h1 : term696 A B s f) (h2 : term2706 A) (h3 : term2705 A B) (h4 : term2709 A) (h5 : term2708 A B) (h6 : term2707 A) (h7 : term2706 B) (h8 : term2704 B) (h9 : term2712 A B) (h10 : term2711 B) (h11 : @FINITE A s) (h12 : @FINITE B t) (h13 : term2703 A B f s t) (h14 : (@CARD A s) = (@CARD B t)) (h15 : term692 A B f s t) : False.
Proof. exact (ex_elim (@lem4938355 B h10) (fun x' : type161 B => fun h0 : term4256 B x' => @lem4944558 A B x' f s t h1 h2 h3 h4 h5 h6 h7 h8 h9 h0 h11 h12 h13 h14 h15)). Qed.
Lemma lem4944560 {A B : Type'} (x : type969 B) (f : A -> B) (s : A -> Prop) (t : B -> Prop) (h1 : term696 A B s f) (h2 : term2706 A) (h3 : term2705 A B) (h4 : term2709 A) (h5 : term2708 A B) (h6 : term2707 A) (h7 : term2706 B) (h8 : term2704 B) (h9 : term2712 A B) (h10 : term2711 B) (h11 : term4456 B x) (h12 : @FINITE A s) (h13 : @FINITE B t) (h14 : term2703 A B f s t) (h15 : (@CARD A s) = (@CARD B t)) (h16 : term692 A B f s t) : False.
Proof. exact (ex_elim (@lem4938926 B x h11) (fun y' : type969 B => fun h0 : term4455 B x y' => @lem4944559 A B f s t h1 h2 h3 h4 h5 h6 h7 h8 h9 h10 h12 h13 h14 h15 h16)). Qed.
Lemma lem4944561 {A B : Type'} (f : A -> B) (s : A -> Prop) (t : B -> Prop) (h1 : term696 A B s f) (h2 : term2706 A) (h3 : term2705 A B) (h4 : term2709 A) (h5 : term2708 A B) (h6 : term2707 A) (h7 : term2706 B) (h8 : term2704 B) (h9 : term2712 A B) (h10 : term2711 B) (h11 : term2710 B) (h12 : @FINITE A s) (h13 : @FINITE B t) (h14 : term2703 A B f s t) (h15 : (@CARD A s) = (@CARD B t)) (h16 : term692 A B f s t) : False.
Proof. exact (ex_elim (@lem4938761 B h11) (fun x : type969 B => fun h0 : term4457 B x => @lem4944560 A B x f s t h1 h2 h3 h4 h5 h6 h7 h8 h9 h10 h0 h12 h13 h14 h15 h16)). Qed.
Lemma lem4944562 {A B : Type'} (f : A -> B) (s : A -> Prop) (t : B -> Prop) (h1 : term696 A B s f) (h2 : term2706 A) (h3 : term2705 A B) (h4 : term2709 A) (h5 : term2708 A B) (h6 : term2707 A) (h7 : term2706 B) (h8 : term2704 B) (h9 : term2712 A B) (h10 : term2711 B) (h11 : term2710 B) (h12 : @FINITE A s) (h13 : @FINITE B t) (h14 : term2703 A B f s t) (h15 : (@CARD A s) = (@CARD B t)) (h16 : term692 A B f s t) : (term2703 A B f s t) = False.
Proof. exact (prop_ext (fun h17 : term2703 A B f s t => @lem4944561 A B f s t h1 h2 h3 h4 h5 h6 h7 h8 h9 h10 h11 h12 h13 h14 h15 h16) (fun h17 : False => @lem4935107 A B f s t h14)). Qed.
Lemma lem4944563 {A B : Type'} (f : A -> B) (s : A -> Prop) (t : B -> Prop) (h1 : term696 A B s f) (h2 : term2706 A) (h3 : term2705 A B) (h4 : term2709 A) (h5 : term2708 A B) (h6 : term2707 A) (h7 : term2706 B) (h8 : term2704 B) (h9 : term2712 A B) (h10 : term2711 B) (h11 : term2710 B) (h12 : @FINITE A s) (h13 : @FINITE B t) (h14 : term2703 A B f s t) (h15 : (@CARD A s) = (@CARD B t)) (h16 : term692 A B f s t) : False.
Proof. exact (EQ_MP (@lem4944562 A B f s t h1 h2 h3 h4 h5 h6 h7 h8 h9 h10 h11 h12 h13 h14 h15 h16) (@lem4935107 A B f s t h14)). Qed.
Lemma lem4944564 {A B : Type'} (f : A -> B) (s : A -> Prop) (t : B -> Prop) (h1 : term696 A B s f) (h2 : term2706 A) (h3 : term2705 A B) (h4 : term2709 A) (h5 : term2708 A B) (h6 : term2707 A) (h7 : term2706 B) (h8 : term2704 B) (h9 : term2712 A B) (h10 : term2711 B) (h11 : term2710 B) (h12 : @FINITE A s) (h13 : @FINITE B t) (h14 : term2703 A B f s t) (h15 : (@CARD A s) = (@CARD B t)) (h16 : term692 A B f s t) : (term692 A B f s t) = False.
Proof. exact (prop_ext (fun h17 : term692 A B f s t => @lem4944563 A B f s t h1 h2 h3 h4 h5 h6 h7 h8 h9 h10 h11 h12 h13 h14 h15 h16) (fun h17 : False => @lem4935013 A B f s t h16)). Qed.
Lemma lem4944565 {A B : Type'} (f : A -> B) (s : A -> Prop) (t : B -> Prop) (h1 : term696 A B s f) (h2 : term2706 A) (h3 : term2705 A B) (h4 : term2709 A) (h5 : term2708 A B) (h6 : term2707 A) (h7 : term2706 B) (h8 : term2704 B) (h9 : term2712 A B) (h10 : term2711 B) (h11 : term2710 B) (h12 : @FINITE A s) (h13 : @FINITE B t) (h14 : term2703 A B f s t) (h15 : (@CARD A s) = (@CARD B t)) (h16 : term692 A B f s t) : False.
Proof. exact (EQ_MP (@lem4944564 A B f s t h1 h2 h3 h4 h5 h6 h7 h8 h9 h10 h11 h12 h13 h14 h15 h16) (@lem4935013 A B f s t h16)). Qed.
Lemma lem4944566 {A B : Type'} (f : A -> B) (s : A -> Prop) (t : B -> Prop) (h1 : term696 A B s f) (h2 : term2706 A) (h3 : term2705 A B) (h4 : term2709 A) (h5 : term2708 A B) (h6 : term2707 A) (h7 : term2706 B) (h8 : term2704 B) (h9 : term2712 A B) (h10 : term2711 B) (h11 : term2710 B) (h12 : @FINITE A s) (h13 : @FINITE B t) (h14 : term2703 A B f s t) (h15 : (@CARD A s) = (@CARD B t)) (h16 : term692 A B f s t) : ((@CARD A s) = (@CARD B t)) = False.
Proof. exact (prop_ext (fun h17 : (@CARD A s) = (@CARD B t) => @lem4944565 A B f s t h1 h2 h3 h4 h5 h6 h7 h8 h9 h10 h11 h12 h13 h14 h15 h16) (fun h17 : False => @lem4935007 A B s t h15)). Qed.
Lemma lem4944567 {A B : Type'} (f : A -> B) (s : A -> Prop) (t : B -> Prop) (h1 : term696 A B s f) (h2 : term2706 A) (h3 : term2705 A B) (h4 : term2709 A) (h5 : term2708 A B) (h6 : term2707 A) (h7 : term2706 B) (h8 : term2704 B) (h9 : term2712 A B) (h10 : term2711 B) (h11 : term2710 B) (h12 : @FINITE A s) (h13 : @FINITE B t) (h14 : term2703 A B f s t) (h15 : (@CARD A s) = (@CARD B t)) (h16 : term692 A B f s t) : False.
Proof. exact (EQ_MP (@lem4944566 A B f s t h1 h2 h3 h4 h5 h6 h7 h8 h9 h10 h11 h12 h13 h14 h15 h16) (@lem4935007 A B s t h15)). Qed.
Lemma lem4944568 {A B : Type'} (f : A -> B) (s : A -> Prop) (t : B -> Prop) (h1 : term696 A B s f) (h2 : term2706 A) (h3 : term2705 A B) (h4 : term2709 A) (h5 : term2708 A B) (h6 : term2707 A) (h7 : term2706 B) (h8 : term2704 B) (h9 : term2712 A B) (h10 : term2711 B) (h11 : term2710 B) (h12 : @FINITE A s) (h13 : @FINITE B t) (h14 : term2703 A B f s t) (h15 : (@CARD A s) = (@CARD B t)) (h16 : term692 A B f s t) : (@FINITE B t) = False.
Proof. exact (prop_ext (fun h17 : @FINITE B t => @lem4944567 A B f s t h1 h2 h3 h4 h5 h6 h7 h8 h9 h10 h11 h12 h13 h14 h15 h16) (fun h17 : False => @lem4935001 B t h13)). Qed.
Lemma lem4944569 {A B : Type'} (f : A -> B) (s : A -> Prop) (t : B -> Prop) (h1 : term696 A B s f) (h2 : term2706 A) (h3 : term2705 A B) (h4 : term2709 A) (h5 : term2708 A B) (h6 : term2707 A) (h7 : term2706 B) (h8 : term2704 B) (h9 : term2712 A B) (h10 : term2711 B) (h11 : term2710 B) (h12 : @FINITE A s) (h13 : @FINITE B t) (h14 : term2703 A B f s t) (h15 : (@CARD A s) = (@CARD B t)) (h16 : term692 A B f s t) : False.
Proof. exact (EQ_MP (@lem4944568 A B f s t h1 h2 h3 h4 h5 h6 h7 h8 h9 h10 h11 h12 h13 h14 h15 h16) (@lem4935001 B t h13)). Qed.
Lemma lem4944570 {A B : Type'} (f : A -> B) (s : A -> Prop) (t : B -> Prop) (h1 : term696 A B s f) (h2 : term2706 A) (h3 : term2705 A B) (h4 : term2709 A) (h5 : term2708 A B) (h6 : term2707 A) (h7 : term2706 B) (h8 : term2704 B) (h9 : term2712 A B) (h10 : term2711 B) (h11 : term2710 B) (h12 : @FINITE A s) (h13 : @FINITE B t) (h14 : term2703 A B f s t) (h15 : (@CARD A s) = (@CARD B t)) (h16 : term692 A B f s t) : (@FINITE A s) = False.
Proof. exact (prop_ext (fun h17 : @FINITE A s => @lem4944569 A B f s t h1 h2 h3 h4 h5 h6 h7 h8 h9 h10 h11 h12 h13 h14 h15 h16) (fun h17 : False => @lem4934995 A s h12)). Qed.
Lemma lem4944571 {A B : Type'} (f : A -> B) (s : A -> Prop) (t : B -> Prop) (h1 : term696 A B s f) (h2 : term2706 A) (h3 : term2705 A B) (h4 : term2709 A) (h5 : term2708 A B) (h6 : term2707 A) (h7 : term2706 B) (h8 : term2704 B) (h9 : term2712 A B) (h10 : term2711 B) (h11 : term2710 B) (h12 : @FINITE A s) (h13 : @FINITE B t) (h14 : term2703 A B f s t) (h15 : (@CARD A s) = (@CARD B t)) (h16 : term692 A B f s t) : False.
Proof. exact (EQ_MP (@lem4944570 A B f s t h1 h2 h3 h4 h5 h6 h7 h8 h9 h10 h11 h12 h13 h14 h15 h16) (@lem4934995 A s h12)). Qed.
Lemma lem4944572 {A B : Type'} (f : A -> B) (s : A -> Prop) (t : B -> Prop) (h1 : term696 A B s f) (h2 : term2706 A) (h3 : term2705 A B) (h4 : term2709 A) (h5 : term2708 A B) (h6 : term2707 A) (h7 : term2706 B) (h8 : term2712 A B) (h9 : term2711 B) (h10 : term2710 B) (h11 : @FINITE A s) (h12 : @FINITE B t) (h13 : term2703 A B f s t) (h14 : (@CARD A s) = (@CARD B t)) (h15 : term692 A B f s t) : term2717 B.
Proof. exact (fun h0 : term2704 B => @lem4944571 A B f s t h1 h2 h3 h4 h5 h6 h7 h0 h8 h9 h10 h11 h12 h13 h14 h15). Qed.
Lemma lem4944573 {B : Type'} : (term2717 B) = (term2718 B).
Proof. exact (@lem69 (term2704 B)). Qed.
Lemma lem4944574 {A B : Type'} (f : A -> B) (s : A -> Prop) (t : B -> Prop) (h1 : term696 A B s f) (h2 : term2706 A) (h3 : term2705 A B) (h4 : term2709 A) (h5 : term2708 A B) (h6 : term2707 A) (h7 : term2706 B) (h8 : term2712 A B) (h9 : term2711 B) (h10 : term2710 B) (h11 : @FINITE A s) (h12 : @FINITE B t) (h13 : term2703 A B f s t) (h14 : (@CARD A s) = (@CARD B t)) (h15 : term692 A B f s t) : term2718 B.
Proof. exact (EQ_MP (@lem4944573 B) (@lem4944572 A B f s t h1 h2 h3 h4 h5 h6 h7 h8 h9 h10 h11 h12 h13 h14 h15)). Qed.
Lemma lem4944575 {A B : Type'} (f : A -> B) (s : A -> Prop) (t : B -> Prop) (h1 : term696 A B s f) (h2 : term2706 A) (h3 : term2705 A B) (h4 : term2709 A) (h5 : term2708 A B) (h6 : term2707 A) (h7 : term2706 B) (h8 : term2712 A B) (h9 : term2711 B) (h10 : term2710 B) (h11 : @FINITE A s) (h12 : @FINITE B t) (h13 : term2703 A B f s t) (h14 : (@CARD A s) = (@CARD B t)) (h15 : term692 A B f s t) : term2721 A B.
Proof. exact (fun h0 : term2704 A => @lem4944574 A B f s t h1 h2 h3 h4 h5 h6 h7 h8 h9 h10 h11 h12 h13 h14 h15). Qed.
Lemma lem4944576 {A B : Type'} (f : A -> B) (s : A -> Prop) (t : B -> Prop) (h1 : term696 A B s f) (h2 : term2706 A) (h3 : term2705 A B) (h4 : term2709 A) (h5 : term2708 A B) (h6 : term2707 A) (h7 : term2706 B) (h8 : term2712 A B) (h9 : term2711 B) (h10 : @FINITE A s) (h11 : @FINITE B t) (h12 : term2703 A B f s t) (h13 : (@CARD A s) = (@CARD B t)) (h14 : term692 A B f s t) : term2724 A B.
Proof. exact (fun h0 : term2710 B => @lem4944575 A B f s t h1 h2 h3 h4 h5 h6 h7 h8 h9 h0 h10 h11 h12 h13 h14). Qed.
Lemma lem4944577 {A B : Type'} (f : A -> B) (s : A -> Prop) (t : B -> Prop) (h1 : term696 A B s f) (h2 : term2706 A) (h3 : term2705 A B) (h4 : term2709 A) (h5 : term2708 A B) (h6 : term2707 A) (h7 : term2706 B) (h8 : term2712 A B) (h9 : @FINITE A s) (h10 : @FINITE B t) (h11 : term2703 A B f s t) (h12 : (@CARD A s) = (@CARD B t)) (h13 : term692 A B f s t) : term2727 A B.
Proof. exact (fun h0 : term2711 B => @lem4944576 A B f s t h1 h2 h3 h4 h5 h6 h7 h8 h0 h9 h10 h11 h12 h13). Qed.
Lemma lem4944578 {A B : Type'} (f : A -> B) (s : A -> Prop) (t : B -> Prop) (h1 : term696 A B s f) (h2 : term2706 A) (h3 : term2705 A B) (h4 : term2709 A) (h5 : term2708 A B) (h6 : term2707 A) (h7 : term2706 B) (h8 : @FINITE A s) (h9 : @FINITE B t) (h10 : term2703 A B f s t) (h11 : (@CARD A s) = (@CARD B t)) (h12 : term692 A B f s t) : term2730 A B.
Proof. exact (fun h0 : term2712 A B => @lem4944577 A B f s t h1 h2 h3 h4 h5 h6 h7 h0 h8 h9 h10 h11 h12). Qed.
Lemma lem4944579 {A B : Type'} (f : A -> B) (s : A -> Prop) (t : B -> Prop) (h1 : term696 A B s f) (h2 : term2706 A) (h3 : term2705 A B) (h4 : term2709 A) (h5 : term2708 A B) (h6 : term2707 A) (h7 : @FINITE A s) (h8 : @FINITE B t) (h9 : term2703 A B f s t) (h10 : (@CARD A s) = (@CARD B t)) (h11 : term692 A B f s t) : term2733 A B.
Proof. exact (fun h0 : term2706 B => @lem4944578 A B f s t h1 h2 h3 h4 h5 h6 h0 h7 h8 h9 h10 h11). Qed.
Lemma lem4944580 {A B : Type'} (f : A -> B) (s : A -> Prop) (t : B -> Prop) (h1 : term696 A B s f) (h2 : term2706 A) (h3 : term2705 A B) (h4 : term2709 A) (h5 : term2708 A B) (h6 : @FINITE A s) (h7 : @FINITE B t) (h8 : term2703 A B f s t) (h9 : (@CARD A s) = (@CARD B t)) (h10 : term692 A B f s t) : term2736 A B.
Proof. exact (fun h0 : term2707 A => @lem4944579 A B f s t h1 h2 h3 h4 h5 h0 h6 h7 h8 h9 h10). Qed.
Lemma lem4944581 {A B : Type'} (f : A -> B) (s : A -> Prop) (t : B -> Prop) (h1 : term696 A B s f) (h2 : term2706 A) (h3 : term2705 A B) (h4 : term2709 A) (h5 : @FINITE A s) (h6 : @FINITE B t) (h7 : term2703 A B f s t) (h8 : (@CARD A s) = (@CARD B t)) (h9 : term692 A B f s t) : term2739 A B.
Proof. exact (fun h0 : term2708 A B => @lem4944580 A B f s t h1 h2 h3 h4 h0 h5 h6 h7 h8 h9). Qed.
Lemma lem4944582 {A B : Type'} (f : A -> B) (s : A -> Prop) (t : B -> Prop) (h1 : term696 A B s f) (h2 : term2706 A) (h3 : term2705 A B) (h4 : @FINITE A s) (h5 : @FINITE B t) (h6 : term2703 A B f s t) (h7 : (@CARD A s) = (@CARD B t)) (h8 : term692 A B f s t) : term2742 A B.
Proof. exact (fun h0 : term2709 A => @lem4944581 A B f s t h1 h2 h3 h0 h4 h5 h6 h7 h8). Qed.
Lemma lem4944583 {A B : Type'} (f : A -> B) (s : A -> Prop) (t : B -> Prop) (h1 : term696 A B s f) (h2 : term2706 A) (h3 : @FINITE A s) (h4 : @FINITE B t) (h5 : term2703 A B f s t) (h6 : (@CARD A s) = (@CARD B t)) (h7 : term692 A B f s t) : term2745 A B.
Proof. exact (fun h0 : term2705 A B => @lem4944582 A B f s t h1 h2 h0 h3 h4 h5 h6 h7). Qed.
Lemma lem4944584 {A B : Type'} (f : A -> B) (s : A -> Prop) (t : B -> Prop) (h1 : term696 A B s f) (h2 : @FINITE A s) (h3 : @FINITE B t) (h4 : term2703 A B f s t) (h5 : (@CARD A s) = (@CARD B t)) (h6 : term692 A B f s t) : term2747 A B.
Proof. exact (fun h0 : term2706 A => @lem4944583 A B f s t h1 h0 h2 h3 h4 h5 h6). Qed.
Lemma lem4944585 {A B : Type'} (f : A -> B) (s : A -> Prop) (t : B -> Prop) (h1 : term696 A B s f) (h2 : @FINITE A s) (h3 : @FINITE B t) (h4 : (@CARD A s) = (@CARD B t)) (h5 : term692 A B f s t) : term2750 A B f s t.
Proof. exact (fun h0 : term2703 A B f s t => @lem4944584 A B f s t h1 h2 h3 h0 h4 h5). Qed.
Lemma lem4944586 {A B : Type'} (y : B) (f : A -> B) (s : A -> Prop) (t : B -> Prop) (h1 : term696 A B s f) (h2 : @FINITE A s) (h3 : @FINITE B t) (h4 : (@CARD A s) = (@CARD B t)) (h5 : term692 A B f s t) : term2752 A B y f s t.
Proof. exact (fun h0 : @IN B y t => @lem4944585 A B f s t h1 h2 h3 h4 h5). Qed.
Lemma lem4944587 {A B : Type'} (y : B) (f : A -> B) (s : A -> Prop) (t : B -> Prop) (h1 : @FINITE A s) (h2 : @FINITE B t) (h3 : (@CARD A s) = (@CARD B t)) (h4 : term692 A B f s t) : term2754 A B y f s t.
Proof. exact (fun h0 : term696 A B s f => @lem4944586 A B y f s t h0 h1 h2 h3 h4). Qed.
Lemma lem4944588 {A B : Type'} (y : B) (f : A -> B) (s : A -> Prop) (t : B -> Prop) (h1 : @FINITE A s) (h2 : @FINITE B t) (h3 : (@CARD A s) = (@CARD B t)) : term2756 A B y f s t.
Proof. exact (fun h0 : term692 A B f s t => @lem4944587 A B y f s t h1 h2 h3 h0). Qed.
Lemma lem4944589 {A B : Type'} (y : B) (f : A -> B) (s : A -> Prop) (t : B -> Prop) (h1 : @FINITE A s) (h2 : @FINITE B t) : term2758 A B y f s t.
Proof. exact (fun h0 : (@CARD A s) = (@CARD B t) => @lem4944588 A B y f s t h1 h2 h0). Qed.
Lemma lem4944590 {A B : Type'} (y : B) (f : A -> B) (t : B -> Prop) (s : A -> Prop) (h1 : @FINITE A s) : term2760 A B y f s t.
Proof. exact (fun h0 : @FINITE B t => @lem4944589 A B y f s t h1 h0). Qed.
Lemma lem4944591 {A B : Type'} (y : B) (f : A -> B) (s : A -> Prop) (t : B -> Prop) : term2761 A B y f s t.
Proof. exact (fun h0 : @FINITE A s => @lem4944590 A B y f t s h0). Qed.
Lemma lem4944596 {A B : Type'} (f : A -> B) (s : A -> Prop) (t : B -> Prop) : term2765 A B f s t.
Proof. exact (fun y : B => @lem4944591 A B y f s t). Qed.
Lemma lem4944601 {A B : Type'} (s : A -> Prop) (t : B -> Prop) : term2769 A B s t.
Proof. exact (fun f : A -> B => @lem4944596 A B f s t). Qed.
Lemma lem4944606 {A B : Type'} (t : B -> Prop) : term2773 A B t.
Proof. exact (fun s : A -> Prop => @lem4944601 A B s t). Qed.
Lemma lem4944611 {A B : Type'} : term2777 A B.
Proof. exact (fun t : B -> Prop => @lem4944606 A B t). Qed.
Lemma lem4944612 {A B : Type'} : term2776 A B.
Proof. exact (EQ_MP (@lem4934971 A B) (@lem4944611 A B)). Qed.
Lemma lem4944613 {A B : Type'} (t : B -> Prop) : term4724 A B t.
Proof. exact (@lem4944612 A B t). Qed.
Lemma lem4944614 {A B : Type'} (t : B -> Prop) : (term4724 A B t) = (term2772 A B t).
Proof. exact (eq_refl (term4724 A B t)). Qed.
Lemma lem4944615 {A B : Type'} (t : B -> Prop) : term2772 A B t.
Proof. exact (EQ_MP (@lem4944614 A B t) (@lem4944613 A B t)). Qed.
Lemma lem4944616 {A B : Type'} (t : B -> Prop) (s : A -> Prop) : term4725 A B t s.
Proof. exact (@lem4944615 A B t s). Qed.
Lemma lem4944617 {A B : Type'} (s : A -> Prop) (t : B -> Prop) : (term4725 A B t s) = (term2768 A B s t).
Proof. exact (eq_refl (term4725 A B t s)). Qed.
Lemma lem4944618 {A B : Type'} (s : A -> Prop) (t : B -> Prop) : term2768 A B s t.
Proof. exact (EQ_MP (@lem4944617 A B s t) (@lem4944616 A B t s)). Qed.
Lemma lem4944619 {A B : Type'} (s : A -> Prop) (t : B -> Prop) (f : A -> B) : term4726 A B s t f.
Proof. exact (@lem4944618 A B s t f). Qed.
Lemma lem4944620 {A B : Type'} (f : A -> B) (s : A -> Prop) (t : B -> Prop) : (term4726 A B s t f) = (term2764 A B f s t).
Proof. exact (eq_refl (term4726 A B s t f)). Qed.
Lemma lem4944621 {A B : Type'} (f : A -> B) (s : A -> Prop) (t : B -> Prop) : term2764 A B f s t.
Proof. exact (EQ_MP (@lem4944620 A B f s t) (@lem4944619 A B s t f)). Qed.
Lemma lem4944622 {A B : Type'} (f : A -> B) (s : A -> Prop) (t : B -> Prop) (y : B) : term4727 A B f s t y.
Proof. exact (@lem4944621 A B f s t y). Qed.
Lemma lem4944623 {A B : Type'} (y : B) (f : A -> B) (s : A -> Prop) (t : B -> Prop) : (term4727 A B f s t y) = (term2713 A B y f s t).
Proof. exact (eq_refl (term4727 A B f s t y)). Qed.
Lemma lem4944624 {A B : Type'} (y : B) (f : A -> B) (s : A -> Prop) (t : B -> Prop) : term2713 A B y f s t.
Proof. exact (EQ_MP (@lem4944623 A B y f s t) (@lem4944622 A B f s t y)). Qed.
Lemma lem4944626 {A B : Type'} (y : B) (f : A -> B) (s : A -> Prop) (t : B -> Prop) : term2713 A B y f s t.
Proof. exact (@lem4933693 A B y f s t (@lem4944624 A B y f s t)). Qed.
Lemma lem4944627 {A B : Type'} (y : B) (f : A -> B) (t : B -> Prop) (s : A -> Prop) (h1 : @FINITE A s) : term2759 A B y f s t.
Proof. exact (@lem4944626 A B y f s t (@lem4914388 A s h1)). Qed.
Lemma lem4944628 {A B : Type'} (y : B) (f : A -> B) (s : A -> Prop) (t : B -> Prop) (h1 : @FINITE A s) (h2 : @FINITE B t) : term2757 A B y f s t.
Proof. exact (@lem4944627 A B y f t s h1 (@lem4914390 B t h2)). Qed.
Lemma lem4944629 {A B : Type'} (y : B) (f : A -> B) (s : A -> Prop) (t : B -> Prop) (h1 : @FINITE A s) (h2 : @FINITE B t) (h3 : (@CARD A s) = (@CARD B t)) : term2755 A B y f s t.
Proof. exact (@lem4944628 A B y f s t h1 h2 (@lem4914392 A B s t h3)). Qed.
Lemma lem4944630 {A B : Type'} (y : B) (f : A -> B) (s : A -> Prop) (t : B -> Prop) (h1 : @FINITE A s) (h2 : @FINITE B t) (h3 : (@CARD A s) = (@CARD B t)) (h4 : term692 A B f s t) : term2753 A B y f s t.
Proof. exact (@lem4944629 A B y f s t h1 h2 h3 (@lem4914391 A B f s t h4)). Qed.
Lemma lem4944631 {A B : Type'} (y : B) (f : A -> B) (s : A -> Prop) (t : B -> Prop) (h1 : term696 A B s f) (h2 : @FINITE A s) (h3 : @FINITE B t) (h4 : (@CARD A s) = (@CARD B t)) (h5 : term692 A B f s t) : term2751 A B y f s t.
Proof. exact (@lem4944630 A B y f s t h2 h3 h4 h5 (@lem4914399 A B s f h1)). Qed.
Lemma lem4944632 {A B : Type'} (y : B) (f : A -> B) (s : A -> Prop) (t : B -> Prop) (h1 : term696 A B s f) (h2 : @FINITE A s) (h3 : @FINITE B t) (h4 : (@CARD A s) = (@CARD B t)) (h5 : @IN B y t) (h6 : term692 A B f s t) : term2749 A B f s t.
Proof. exact (@lem4944631 A B y f s t h1 h2 h3 h4 h6 (@lem4914400 B y t h5)). Qed.
Lemma lem4944633 {A B : Type'} (y : B) (f : A -> B) (s : A -> Prop) (t : B -> Prop) (h1 : term696 A B s f) (h2 : @FINITE A s) (h3 : @FINITE B t) (h4 : term2703 A B f s t) (h5 : (@CARD A s) = (@CARD B t)) (h6 : @IN B y t) (h7 : term692 A B f s t) : term2746 A B.
Proof. exact (@lem4944632 A B y f s t h1 h2 h3 h5 h6 h7 (@lem4933652 A B f s t h4)). Qed.
Lemma lem4944634 {A B : Type'} (y : B) (f : A -> B) (s : A -> Prop) (t : B -> Prop) (h1 : term696 A B s f) (h2 : @FINITE A s) (h3 : @FINITE B t) (h4 : term2703 A B f s t) (h5 : (@CARD A s) = (@CARD B t)) (h6 : @IN B y t) (h7 : term692 A B f s t) : term2744 A B.
Proof. exact (@lem4944633 A B y f s t h1 h2 h3 h4 h5 h6 h7 (@lem4933663 A)). Qed.
Lemma lem4944635 {A B : Type'} (y : B) (f : A -> B) (s : A -> Prop) (t : B -> Prop) (h1 : term696 A B s f) (h2 : @FINITE A s) (h3 : @FINITE B t) (h4 : term2703 A B f s t) (h5 : (@CARD A s) = (@CARD B t)) (h6 : @IN B y t) (h7 : term692 A B f s t) : term2741 A B.
Proof. exact (@lem4944634 A B y f s t h1 h2 h3 h4 h5 h6 h7 (@lem4933659 A B)). Qed.
Lemma lem4944636 {A B : Type'} (y : B) (f : A -> B) (s : A -> Prop) (t : B -> Prop) (h1 : term696 A B s f) (h2 : @FINITE A s) (h3 : @FINITE B t) (h4 : term2703 A B f s t) (h5 : (@CARD A s) = (@CARD B t)) (h6 : @IN B y t) (h7 : term692 A B f s t) : term2738 A B.
Proof. exact (@lem4944635 A B y f s t h1 h2 h3 h4 h5 h6 h7 (@lem4933665 A)). Qed.
Lemma lem4944637 {A B : Type'} (y : B) (f : A -> B) (s : A -> Prop) (t : B -> Prop) (h1 : term696 A B s f) (h2 : @FINITE A s) (h3 : @FINITE B t) (h4 : term2703 A B f s t) (h5 : (@CARD A s) = (@CARD B t)) (h6 : @IN B y t) (h7 : term692 A B f s t) : term2735 A B.
Proof. exact (@lem4944636 A B y f s t h1 h2 h3 h4 h5 h6 h7 (@lem4933664 A B)). Qed.
Lemma lem4944638 {A B : Type'} (y : B) (f : A -> B) (s : A -> Prop) (t : B -> Prop) (h1 : term696 A B s f) (h2 : @FINITE A s) (h3 : @FINITE B t) (h4 : term2703 A B f s t) (h5 : (@CARD A s) = (@CARD B t)) (h6 : @IN B y t) (h7 : term692 A B f s t) : term2732 A B.
Proof. exact (@lem4944637 A B y f s t h1 h2 h3 h4 h5 h6 h7 (@lem4933661 A)). Qed.
Lemma lem4944639 {A B : Type'} (y : B) (f : A -> B) (s : A -> Prop) (t : B -> Prop) (h1 : term696 A B s f) (h2 : @FINITE A s) (h3 : @FINITE B t) (h4 : term2703 A B f s t) (h5 : (@CARD A s) = (@CARD B t)) (h6 : @IN B y t) (h7 : term692 A B f s t) : term2729 A B.
Proof. exact (@lem4944638 A B y f s t h1 h2 h3 h4 h5 h6 h7 (@lem4933660 B)). Qed.
Lemma lem4944640 {A B : Type'} (y : B) (f : A -> B) (s : A -> Prop) (t : B -> Prop) (h1 : term696 A B s f) (h2 : @FINITE A s) (h3 : @FINITE B t) (h4 : term2703 A B f s t) (h5 : (@CARD A s) = (@CARD B t)) (h6 : @IN B y t) (h7 : term692 A B f s t) : term2726 A B.
Proof. exact (@lem4944639 A B y f s t h1 h2 h3 h4 h5 h6 h7 (@lem4933670 A B)). Qed.
Lemma lem4944641 {A B : Type'} (y : B) (f : A -> B) (s : A -> Prop) (t : B -> Prop) (h1 : term696 A B s f) (h2 : @FINITE A s) (h3 : @FINITE B t) (h4 : term2703 A B f s t) (h5 : (@CARD A s) = (@CARD B t)) (h6 : @IN B y t) (h7 : term692 A B f s t) : term2723 A B.
Proof. exact (@lem4944640 A B y f s t h1 h2 h3 h4 h5 h6 h7 (@lem4933669 B)). Qed.
Lemma lem4944642 {A B : Type'} (y : B) (f : A -> B) (s : A -> Prop) (t : B -> Prop) (h1 : term696 A B s f) (h2 : @FINITE A s) (h3 : @FINITE B t) (h4 : term2703 A B f s t) (h5 : (@CARD A s) = (@CARD B t)) (h6 : @IN B y t) (h7 : term692 A B f s t) : term2720 A B.
Proof. exact (@lem4944641 A B y f s t h1 h2 h3 h4 h5 h6 h7 (@lem4933666 B)). Qed.
Lemma lem4944643 {A B : Type'} (y : B) (f : A -> B) (s : A -> Prop) (t : B -> Prop) (h1 : term696 A B s f) (h2 : @FINITE A s) (h3 : @FINITE B t) (h4 : term2703 A B f s t) (h5 : (@CARD A s) = (@CARD B t)) (h6 : @IN B y t) (h7 : term692 A B f s t) : term2717 B.
Proof. exact (@lem4944642 A B y f s t h1 h2 h3 h4 h5 h6 h7 (@lem4933653 A)). Qed.
Lemma lem4944644 {A B : Type'} (y : B) (f : A -> B) (s : A -> Prop) (t : B -> Prop) (h1 : term696 A B s f) (h2 : @FINITE A s) (h3 : @FINITE B t) (h4 : term2703 A B f s t) (h5 : (@CARD A s) = (@CARD B t)) (h6 : @IN B y t) (h7 : term692 A B f s t) : False.
Proof. exact (@lem4944643 A B y f s t h1 h2 h3 h4 h5 h6 h7 (@lem4933654 B)). Qed.
Lemma lem4944645 {A B : Type'} (y : B) (f : A -> B) (s : A -> Prop) (t : B -> Prop) (h1 : term696 A B s f) (h2 : @FINITE A s) (h3 : @FINITE B t) (h4 : term2703 A B f s t) (h5 : (@CARD A s) = (@CARD B t)) (h6 : @IN B y t) (h7 : term692 A B f s t) : (term2703 A B f s t) = False.
Proof. exact (prop_ext (fun h8 : term2703 A B f s t => @lem4944644 A B y f s t h1 h2 h3 h4 h5 h6 h7) (fun h8 : False => @lem4933652 A B f s t h4)). Qed.
Lemma lem4944646 {A B : Type'} (y : B) (f : A -> B) (s : A -> Prop) (t : B -> Prop) (h1 : term696 A B s f) (h2 : @FINITE A s) (h3 : @FINITE B t) (h4 : term2703 A B f s t) (h5 : (@CARD A s) = (@CARD B t)) (h6 : @IN B y t) (h7 : term692 A B f s t) : False.
Proof. exact (EQ_MP (@lem4944645 A B y f s t h1 h2 h3 h4 h5 h6 h7) (@lem4933652 A B f s t h4)). Qed.
Lemma lem4944647 {A B : Type'} (y : B) (f : A -> B) (s : A -> Prop) (t : B -> Prop) (h1 : term696 A B s f) (h2 : @FINITE A s) (h3 : @FINITE B t) (h4 : (@CARD A s) = (@CARD B t)) (h5 : @IN B y t) (h6 : term692 A B f s t) : term2702 A B f s t.
Proof. exact (fun h0 : term2703 A B f s t => @lem4944646 A B y f s t h1 h2 h3 h0 h4 h5 h6). Qed.
Lemma lem4944648 {A B : Type'} (y : B) (f : A -> B) (s : A -> Prop) (t : B -> Prop) (h1 : term696 A B s f) (h2 : @FINITE A s) (h3 : @FINITE B t) (h4 : (@CARD A s) = (@CARD B t)) (h5 : @IN B y t) (h6 : term692 A B f s t) : (@IMAGE A B f s) = t.
Proof. exact (EQ_MP (@lem4933651 A B f s t) (@lem4944647 A B y f s t h1 h2 h3 h4 h5 h6)). Qed.
Lemma lem4944649 {A B : Type'} (y : B) (f : A -> B) (s : A -> Prop) (t : B -> Prop) (h1 : term696 A B s f) (h2 : @FINITE A s) (h3 : @FINITE B t) (h4 : (@IMAGE A B f s) = t) (h5 : (@CARD A s) = (@CARD B t)) (h6 : @IN B y t) (h7 : term692 A B f s t) : term788 A B s f y.
Proof. exact (@lem4933647 A B y f s t h1 h2 h3 h5 h6 h7 (@lem4920178 A B f s t h4)). Qed.
Lemma lem4944650 {A B : Type'} (y : B) (f : A -> B) (s : A -> Prop) (t : B -> Prop) (h1 : term696 A B s f) (h2 : @FINITE A s) (h3 : @FINITE B t) (h4 : (@CARD A s) = (@CARD B t)) (h5 : @IN B y t) (h6 : term692 A B f s t) : ((@IMAGE A B f s) = t) = (term788 A B s f y).
Proof. exact (prop_ext (fun h7 : (@IMAGE A B f s) = t => @lem4944649 A B y f s t h1 h2 h3 h7 h4 h5 h6) (fun h7 : term788 A B s f y => @lem4944648 A B y f s t h1 h2 h3 h4 h5 h6)). Qed.
Lemma lem4944651 {A B : Type'} (y : B) (f : A -> B) (s : A -> Prop) (t : B -> Prop) (h1 : term696 A B s f) (h2 : @FINITE A s) (h3 : @FINITE B t) (h4 : (@CARD A s) = (@CARD B t)) (h5 : @IN B y t) (h6 : term692 A B f s t) : term788 A B s f y.
Proof. exact (EQ_MP (@lem4944650 A B y f s t h1 h2 h3 h4 h5 h6) (@lem4944648 A B y f s t h1 h2 h3 h4 h5 h6)). Qed.
Lemma lem4944652 {A B : Type'} (y : B) (f : A -> B) (s : A -> Prop) (t : B -> Prop) (h1 : term696 A B s f) (h2 : @FINITE A s) (h3 : @FINITE B t) (h4 : (@CARD A s) = (@CARD B t)) (h5 : @IN B y t) (h6 : term692 A B f s t) : (@IN B y t) = (term788 A B s f y).
Proof. exact (prop_ext (fun h7 : @IN B y t => @lem4944651 A B y f s t h1 h2 h3 h4 h5 h6) (fun h7 : term788 A B s f y => @lem4914400 B y t h5)). Qed.
Lemma lem4944653 {A B : Type'} (y : B) (f : A -> B) (s : A -> Prop) (t : B -> Prop) (h1 : term696 A B s f) (h2 : @FINITE A s) (h3 : @FINITE B t) (h4 : (@CARD A s) = (@CARD B t)) (h5 : @IN B y t) (h6 : term692 A B f s t) : term788 A B s f y.
Proof. exact (EQ_MP (@lem4944652 A B y f s t h1 h2 h3 h4 h5 h6) (@lem4914400 B y t h5)). Qed.
Lemma lem4944654 {A B : Type'} (y : B) (f : A -> B) (s : A -> Prop) (t : B -> Prop) (h1 : term696 A B s f) (h2 : @FINITE A s) (h3 : @FINITE B t) (h4 : (@CARD A s) = (@CARD B t)) (h5 : term692 A B f s t) : term789 A B t s f y.
Proof. exact (fun h0 : @IN B y t => @lem4944653 A B y f s t h1 h2 h3 h4 h0 h5). Qed.
Lemma lem4944659 {A B : Type'} (f : A -> B) (s : A -> Prop) (t : B -> Prop) (h1 : term696 A B s f) (h2 : @FINITE A s) (h3 : @FINITE B t) (h4 : (@CARD A s) = (@CARD B t)) (h5 : term692 A B f s t) : term693 A B t s f.
Proof. exact (fun y : B => @lem4944654 A B y f s t h1 h2 h3 h4 h5). Qed.
Lemma lem4944660 {A B : Type'} (f : A -> B) (s : A -> Prop) (t : B -> Prop) (h1 : term696 A B s f) (h2 : @FINITE A s) (h3 : @FINITE B t) (h4 : (@CARD A s) = (@CARD B t)) (h5 : term692 A B f s t) : (term696 A B s f) = (term693 A B t s f).
Proof. exact (prop_ext (fun h6 : term696 A B s f => @lem4944659 A B f s t h1 h2 h3 h4 h5) (fun h6 : term693 A B t s f => @lem4914399 A B s f h1)). Qed.
Lemma lem4944661 {A B : Type'} (f : A -> B) (s : A -> Prop) (t : B -> Prop) (h1 : term696 A B s f) (h2 : @FINITE A s) (h3 : @FINITE B t) (h4 : (@CARD A s) = (@CARD B t)) (h5 : term692 A B f s t) : term693 A B t s f.
Proof. exact (EQ_MP (@lem4944660 A B f s t h1 h2 h3 h4 h5) (@lem4914399 A B s f h1)). Qed.
Lemma lem4944662 {A B : Type'} (f : A -> B) (s : A -> Prop) (t : B -> Prop) (h1 : @FINITE A s) (h2 : @FINITE B t) (h3 : (@CARD A s) = (@CARD B t)) (h4 : term692 A B f s t) : term4728 A B t s f.
Proof. exact (fun h0 : term696 A B s f => @lem4944661 A B f s t h0 h1 h2 h3 h4). Qed.
Lemma lem4944663 {A B : Type'} (s : A -> Prop) (x : A) (f : A -> B) (y : A) (h1 : term694 A B s x f y) : term695 A B s x f y.
Proof. exact (proj2 (@lem4914394 A B s x f y h1)). Qed.
Lemma lem4944664 {A B : Type'} (s : A -> Prop) (x : A) (f : A -> B) (y : A) (h1 : term694 A B s x f y) : @IN A x s.
Proof. exact (proj1 (@lem4914394 A B s x f y h1)). Qed.
Lemma lem4944665 {A B : Type'} (s : A -> Prop) (x : A) (f : A -> B) (y : A) (h1 : term695 A B s x f y) : (f x) = (f y).
Proof. exact (proj2 (@lem4914395 A B s x f y h1)). Qed.
Lemma lem4944666 {A B : Type'} (s : A -> Prop) (x : A) (f : A -> B) (y : A) (h1 : term695 A B s x f y) : @IN A y s.
Proof. exact (proj1 (@lem4914395 A B s x f y h1)). Qed.
Lemma lem4944667 {A B : Type'} (x : A) (y : A) (f : A -> B) (s : A -> Prop) (t : B -> Prop) (h1 : term693 A B t s f) (h2 : @FINITE A s) (h3 : @FINITE B t) (h4 : (f x) = (f y)) (h5 : (@CARD A s) = (@CARD B t)) (h6 : @IN A x s) (h7 : @IN A y s) (h8 : term692 A B f s t) : ((f x) = (f y)) = (x = y).
Proof. exact (prop_ext (fun h9 : (f x) = (f y) => @lem4920177 A B x y f s t h1 h2 h3 h4 h5 h6 h7 h8) (fun h9 : x = y => @lem4914397 A B x f y h4)). Qed.
Lemma lem4944668 {A B : Type'} (x : A) (y : A) (f : A -> B) (s : A -> Prop) (t : B -> Prop) (h1 : term693 A B t s f) (h2 : @FINITE A s) (h3 : @FINITE B t) (h4 : (f x) = (f y)) (h5 : (@CARD A s) = (@CARD B t)) (h6 : @IN A x s) (h7 : @IN A y s) (h8 : term692 A B f s t) : x = y.
Proof. exact (EQ_MP (@lem4944667 A B x y f s t h1 h2 h3 h4 h5 h6 h7 h8) (@lem4914397 A B x f y h4)). Qed.
Lemma lem4944669 {A B : Type'} (x : A) (y : A) (f : A -> B) (s : A -> Prop) (t : B -> Prop) (h1 : term693 A B t s f) (h2 : @FINITE A s) (h3 : @FINITE B t) (h4 : (f x) = (f y)) (h5 : (@CARD A s) = (@CARD B t)) (h6 : @IN A x s) (h7 : @IN A y s) (h8 : term692 A B f s t) : (@IN A y s) = (x = y).
Proof. exact (prop_ext (fun h9 : @IN A y s => @lem4944668 A B x y f s t h1 h2 h3 h4 h5 h6 h7 h8) (fun h9 : x = y => @lem4914398 A y s h7)). Qed.
Lemma lem4944670 {A B : Type'} (x : A) (y : A) (f : A -> B) (s : A -> Prop) (t : B -> Prop) (h1 : term693 A B t s f) (h2 : @FINITE A s) (h3 : @FINITE B t) (h4 : (f x) = (f y)) (h5 : (@CARD A s) = (@CARD B t)) (h6 : @IN A x s) (h7 : @IN A y s) (h8 : term692 A B f s t) : x = y.
Proof. exact (EQ_MP (@lem4944669 A B x y f s t h1 h2 h3 h4 h5 h6 h7 h8) (@lem4914398 A y s h7)). Qed.
Lemma lem4944671 {A B : Type'} (x : A) (y : A) (f : A -> B) (s : A -> Prop) (t : B -> Prop) (h1 : term693 A B t s f) (h2 : @FINITE A s) (h3 : @FINITE B t) (h4 : term695 A B s x f y) (h5 : (@CARD A s) = (@CARD B t)) (h6 : @IN A x s) (h7 : @IN A y s) (h8 : term692 A B f s t) : ((f x) = (f y)) = (x = y).
Proof. exact (prop_ext (fun h9 : (f x) = (f y) => @lem4944670 A B x y f s t h1 h2 h3 h9 h5 h6 h7 h8) (fun h9 : x = y => @lem4944665 A B s x f y h4)). Qed.
Lemma lem4944672 {A B : Type'} (x : A) (y : A) (f : A -> B) (s : A -> Prop) (t : B -> Prop) (h1 : term693 A B t s f) (h2 : @FINITE A s) (h3 : @FINITE B t) (h4 : term695 A B s x f y) (h5 : (@CARD A s) = (@CARD B t)) (h6 : @IN A x s) (h7 : @IN A y s) (h8 : term692 A B f s t) : x = y.
Proof. exact (EQ_MP (@lem4944671 A B x y f s t h1 h2 h3 h4 h5 h6 h7 h8) (@lem4944665 A B s x f y h4)). Qed.
Lemma lem4944673 {A B : Type'} (y : A) (x : A) (f : A -> B) (s : A -> Prop) (t : B -> Prop) (h1 : term693 A B t s f) (h2 : @FINITE A s) (h3 : @FINITE B t) (h4 : term695 A B s x f y) (h5 : (@CARD A s) = (@CARD B t)) (h6 : @IN A x s) (h7 : term692 A B f s t) : (@IN A y s) = (x = y).
Proof. exact (prop_ext (fun h8 : @IN A y s => @lem4944672 A B x y f s t h1 h2 h3 h4 h5 h6 h8 h7) (fun h8 : x = y => @lem4944666 A B s x f y h4)). Qed.
Lemma lem4944674 {A B : Type'} (y : A) (x : A) (f : A -> B) (s : A -> Prop) (t : B -> Prop) (h1 : term693 A B t s f) (h2 : @FINITE A s) (h3 : @FINITE B t) (h4 : term695 A B s x f y) (h5 : (@CARD A s) = (@CARD B t)) (h6 : @IN A x s) (h7 : term692 A B f s t) : x = y.
Proof. exact (EQ_MP (@lem4944673 A B y x f s t h1 h2 h3 h4 h5 h6 h7) (@lem4944666 A B s x f y h4)). Qed.
Lemma lem4944675 {A B : Type'} (y : A) (x : A) (f : A -> B) (s : A -> Prop) (t : B -> Prop) (h1 : term693 A B t s f) (h2 : @FINITE A s) (h3 : @FINITE B t) (h4 : term695 A B s x f y) (h5 : (@CARD A s) = (@CARD B t)) (h6 : @IN A x s) (h7 : term692 A B f s t) : (@IN A x s) = (x = y).
Proof. exact (prop_ext (fun h8 : @IN A x s => @lem4944674 A B y x f s t h1 h2 h3 h4 h5 h6 h7) (fun h8 : x = y => @lem4914396 A x s h6)). Qed.
Lemma lem4944676 {A B : Type'} (y : A) (x : A) (f : A -> B) (s : A -> Prop) (t : B -> Prop) (h1 : term693 A B t s f) (h2 : @FINITE A s) (h3 : @FINITE B t) (h4 : term695 A B s x f y) (h5 : (@CARD A s) = (@CARD B t)) (h6 : @IN A x s) (h7 : term692 A B f s t) : x = y.
Proof. exact (EQ_MP (@lem4944675 A B y x f s t h1 h2 h3 h4 h5 h6 h7) (@lem4914396 A x s h6)). Qed.
Lemma lem4944677 {A B : Type'} (y : A) (x : A) (f : A -> B) (s : A -> Prop) (t : B -> Prop) (h1 : term693 A B t s f) (h2 : @FINITE A s) (h3 : @FINITE B t) (h4 : term694 A B s x f y) (h5 : (@CARD A s) = (@CARD B t)) (h6 : @IN A x s) (h7 : term692 A B f s t) : (term695 A B s x f y) = (x = y).
Proof. exact (prop_ext (fun h8 : term695 A B s x f y => @lem4944676 A B y x f s t h1 h2 h3 h8 h5 h6 h7) (fun h8 : x = y => @lem4944663 A B s x f y h4)). Qed.
Lemma lem4944678 {A B : Type'} (y : A) (x : A) (f : A -> B) (s : A -> Prop) (t : B -> Prop) (h1 : term693 A B t s f) (h2 : @FINITE A s) (h3 : @FINITE B t) (h4 : term694 A B s x f y) (h5 : (@CARD A s) = (@CARD B t)) (h6 : @IN A x s) (h7 : term692 A B f s t) : x = y.
Proof. exact (EQ_MP (@lem4944677 A B y x f s t h1 h2 h3 h4 h5 h6 h7) (@lem4944663 A B s x f y h4)). Qed.
Lemma lem4944679 {A B : Type'} (x : A) (y : A) (f : A -> B) (s : A -> Prop) (t : B -> Prop) (h1 : term693 A B t s f) (h2 : @FINITE A s) (h3 : @FINITE B t) (h4 : term694 A B s x f y) (h5 : (@CARD A s) = (@CARD B t)) (h6 : term692 A B f s t) : (@IN A x s) = (x = y).
Proof. exact (prop_ext (fun h7 : @IN A x s => @lem4944678 A B y x f s t h1 h2 h3 h4 h5 h7 h6) (fun h7 : x = y => @lem4944664 A B s x f y h4)). Qed.
Lemma lem4944680 {A B : Type'} (x : A) (y : A) (f : A -> B) (s : A -> Prop) (t : B -> Prop) (h1 : term693 A B t s f) (h2 : @FINITE A s) (h3 : @FINITE B t) (h4 : term694 A B s x f y) (h5 : (@CARD A s) = (@CARD B t)) (h6 : term692 A B f s t) : x = y.
Proof. exact (EQ_MP (@lem4944679 A B x y f s t h1 h2 h3 h4 h5 h6) (@lem4944664 A B s x f y h4)). Qed.
Lemma lem4944681 {A B : Type'} (x : A) (y : A) (f : A -> B) (s : A -> Prop) (t : B -> Prop) (h1 : term693 A B t s f) (h2 : @FINITE A s) (h3 : @FINITE B t) (h4 : (@CARD A s) = (@CARD B t)) (h5 : term692 A B f s t) : term1438 A B s f x y.
Proof. exact (fun h0 : term694 A B s x f y => @lem4944680 A B x y f s t h1 h2 h3 h0 h4 h5). Qed.
Lemma lem4944686 {A B : Type'} (x : A) (f : A -> B) (s : A -> Prop) (t : B -> Prop) (h1 : term693 A B t s f) (h2 : @FINITE A s) (h3 : @FINITE B t) (h4 : (@CARD A s) = (@CARD B t)) (h5 : term692 A B f s t) : term1440 A B s f x.
Proof. exact (fun y : A => @lem4944681 A B x y f s t h1 h2 h3 h4 h5). Qed.
Lemma lem4944691 {A B : Type'} (f : A -> B) (s : A -> Prop) (t : B -> Prop) (h1 : term693 A B t s f) (h2 : @FINITE A s) (h3 : @FINITE B t) (h4 : (@CARD A s) = (@CARD B t)) (h5 : term692 A B f s t) : term696 A B s f.
Proof. exact (fun x : A => @lem4944686 A B x f s t h1 h2 h3 h4 h5). Qed.
Lemma lem4944692 {A B : Type'} (f : A -> B) (s : A -> Prop) (t : B -> Prop) (h1 : term693 A B t s f) (h2 : @FINITE A s) (h3 : @FINITE B t) (h4 : (@CARD A s) = (@CARD B t)) (h5 : term692 A B f s t) : (term693 A B t s f) = (term696 A B s f).
Proof. exact (prop_ext (fun h6 : term693 A B t s f => @lem4944691 A B f s t h1 h2 h3 h4 h5) (fun h6 : term696 A B s f => @lem4914393 A B t s f h1)). Qed.
Lemma lem4944693 {A B : Type'} (f : A -> B) (s : A -> Prop) (t : B -> Prop) (h1 : term693 A B t s f) (h2 : @FINITE A s) (h3 : @FINITE B t) (h4 : (@CARD A s) = (@CARD B t)) (h5 : term692 A B f s t) : term696 A B s f.
Proof. exact (EQ_MP (@lem4944692 A B f s t h1 h2 h3 h4 h5) (@lem4914393 A B t s f h1)). Qed.
Lemma lem4944694 {A B : Type'} (f : A -> B) (s : A -> Prop) (t : B -> Prop) (h1 : @FINITE A s) (h2 : @FINITE B t) (h3 : (@CARD A s) = (@CARD B t)) (h4 : term692 A B f s t) : term4729 A B t s f.
Proof. exact (fun h0 : term693 A B t s f => @lem4944693 A B f s t h0 h1 h2 h3 h4). Qed.
Lemma lem4944695 {A B : Type'} (f : A -> B) (s : A -> Prop) (t : B -> Prop) (h1 : @FINITE A s) (h2 : @FINITE B t) (h3 : (@CARD A s) = (@CARD B t)) (h4 : term692 A B f s t) : term4730 A B t s f.
Proof. exact (conj (@lem4944694 A B f s t h1 h2 h3 h4) (@lem4944662 A B f s t h1 h2 h3 h4)). Qed.
Lemma lem4944696 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (f : A -> B) : (term4730 A B t s f) = ((term693 A B t s f) = (term696 A B s f)).
Proof. exact (@lem32 (term693 A B t s f) (term696 A B s f)). Qed.
Lemma lem4944697 {A B : Type'} (f : A -> B) (s : A -> Prop) (t : B -> Prop) (h1 : @FINITE A s) (h2 : @FINITE B t) (h3 : (@CARD A s) = (@CARD B t)) (h4 : term692 A B f s t) : (term693 A B t s f) = (term696 A B s f).
Proof. exact (EQ_MP (@lem4944696 A B t s f) (@lem4944695 A B f s t h1 h2 h3 h4)). Qed.
Lemma lem4944698 {A B : Type'} (f : A -> B) (s : A -> Prop) (t : B -> Prop) (h1 : term689 A B f s t) : term690 A B f s t.
Proof. exact (proj2 (@lem4914386 A B f s t h1)). Qed.
Lemma lem4944699 {A B : Type'} (f : A -> B) (s : A -> Prop) (t : B -> Prop) (h1 : term689 A B f s t) : @FINITE A s.
Proof. exact (proj1 (@lem4914386 A B f s t h1)). Qed.
Lemma lem4944700 {A B : Type'} (f : A -> B) (s : A -> Prop) (t : B -> Prop) (h1 : term690 A B f s t) : term691 A B f s t.
Proof. exact (proj2 (@lem4914387 A B f s t h1)). Qed.
Lemma lem4944701 {A B : Type'} (f : A -> B) (s : A -> Prop) (t : B -> Prop) (h1 : term690 A B f s t) : @FINITE B t.
Proof. exact (proj1 (@lem4914387 A B f s t h1)). Qed.
Lemma lem4944702 {A B : Type'} (f : A -> B) (s : A -> Prop) (t : B -> Prop) (h1 : term691 A B f s t) : term692 A B f s t.
Proof. exact (proj2 (@lem4914389 A B f s t h1)). Qed.
Lemma lem4944703 {A B : Type'} (f : A -> B) (s : A -> Prop) (t : B -> Prop) (h1 : term691 A B f s t) : (@CARD A s) = (@CARD B t).
Proof. exact (proj1 (@lem4914389 A B f s t h1)). Qed.
Lemma lem4944704 {A B : Type'} (f : A -> B) (s : A -> Prop) (t : B -> Prop) (h1 : @FINITE A s) (h2 : @FINITE B t) (h3 : (@CARD A s) = (@CARD B t)) (h4 : term692 A B f s t) : (term692 A B f s t) = ((term693 A B t s f) = (term696 A B s f)).
Proof. exact (prop_ext (fun h5 : term692 A B f s t => @lem4944697 A B f s t h1 h2 h3 h4) (fun h5 : (term693 A B t s f) = (term696 A B s f) => @lem4914391 A B f s t h4)). Qed.
Lemma lem4944705 {A B : Type'} (f : A -> B) (s : A -> Prop) (t : B -> Prop) (h1 : @FINITE A s) (h2 : @FINITE B t) (h3 : (@CARD A s) = (@CARD B t)) (h4 : term692 A B f s t) : (term693 A B t s f) = (term696 A B s f).
Proof. exact (EQ_MP (@lem4944704 A B f s t h1 h2 h3 h4) (@lem4914391 A B f s t h4)). Qed.
Lemma lem4944706 {A B : Type'} (f : A -> B) (s : A -> Prop) (t : B -> Prop) (h1 : @FINITE A s) (h2 : @FINITE B t) (h3 : (@CARD A s) = (@CARD B t)) (h4 : term692 A B f s t) : ((@CARD A s) = (@CARD B t)) = ((term693 A B t s f) = (term696 A B s f)).
Proof. exact (prop_ext (fun h5 : (@CARD A s) = (@CARD B t) => @lem4944705 A B f s t h1 h2 h3 h4) (fun h5 : (term693 A B t s f) = (term696 A B s f) => @lem4914392 A B s t h3)). Qed.
Lemma lem4944707 {A B : Type'} (f : A -> B) (s : A -> Prop) (t : B -> Prop) (h1 : @FINITE A s) (h2 : @FINITE B t) (h3 : (@CARD A s) = (@CARD B t)) (h4 : term692 A B f s t) : (term693 A B t s f) = (term696 A B s f).
Proof. exact (EQ_MP (@lem4944706 A B f s t h1 h2 h3 h4) (@lem4914392 A B s t h3)). Qed.
Lemma lem4944708 {A B : Type'} (f : A -> B) (s : A -> Prop) (t : B -> Prop) (h1 : @FINITE A s) (h2 : @FINITE B t) (h3 : term691 A B f s t) (h4 : (@CARD A s) = (@CARD B t)) : (term692 A B f s t) = ((term693 A B t s f) = (term696 A B s f)).
Proof. exact (prop_ext (fun h5 : term692 A B f s t => @lem4944707 A B f s t h1 h2 h4 h5) (fun h5 : (term693 A B t s f) = (term696 A B s f) => @lem4944702 A B f s t h3)). Qed.
Lemma lem4944709 {A B : Type'} (f : A -> B) (s : A -> Prop) (t : B -> Prop) (h1 : @FINITE A s) (h2 : @FINITE B t) (h3 : term691 A B f s t) (h4 : (@CARD A s) = (@CARD B t)) : (term693 A B t s f) = (term696 A B s f).
Proof. exact (EQ_MP (@lem4944708 A B f s t h1 h2 h3 h4) (@lem4944702 A B f s t h3)). Qed.
Lemma lem4944710 {A B : Type'} (f : A -> B) (s : A -> Prop) (t : B -> Prop) (h1 : @FINITE A s) (h2 : @FINITE B t) (h3 : term691 A B f s t) : ((@CARD A s) = (@CARD B t)) = ((term693 A B t s f) = (term696 A B s f)).
Proof. exact (prop_ext (fun h4 : (@CARD A s) = (@CARD B t) => @lem4944709 A B f s t h1 h2 h3 h4) (fun h4 : (term693 A B t s f) = (term696 A B s f) => @lem4944703 A B f s t h3)). Qed.
Lemma lem4944711 {A B : Type'} (f : A -> B) (s : A -> Prop) (t : B -> Prop) (h1 : @FINITE A s) (h2 : @FINITE B t) (h3 : term691 A B f s t) : (term693 A B t s f) = (term696 A B s f).
Proof. exact (EQ_MP (@lem4944710 A B f s t h1 h2 h3) (@lem4944703 A B f s t h3)). Qed.
Lemma lem4944712 {A B : Type'} (f : A -> B) (s : A -> Prop) (t : B -> Prop) (h1 : @FINITE A s) (h2 : @FINITE B t) (h3 : term691 A B f s t) : (@FINITE B t) = ((term693 A B t s f) = (term696 A B s f)).
Proof. exact (prop_ext (fun h4 : @FINITE B t => @lem4944711 A B f s t h1 h2 h3) (fun h4 : (term693 A B t s f) = (term696 A B s f) => @lem4914390 B t h2)). Qed.
Lemma lem4944713 {A B : Type'} (f : A -> B) (s : A -> Prop) (t : B -> Prop) (h1 : @FINITE A s) (h2 : @FINITE B t) (h3 : term691 A B f s t) : (term693 A B t s f) = (term696 A B s f).
Proof. exact (EQ_MP (@lem4944712 A B f s t h1 h2 h3) (@lem4914390 B t h2)). Qed.
Lemma lem4944714 {A B : Type'} (f : A -> B) (s : A -> Prop) (t : B -> Prop) (h1 : @FINITE A s) (h2 : @FINITE B t) (h3 : term690 A B f s t) : (term691 A B f s t) = ((term693 A B t s f) = (term696 A B s f)).
Proof. exact (prop_ext (fun h4 : term691 A B f s t => @lem4944713 A B f s t h1 h2 h4) (fun h4 : (term693 A B t s f) = (term696 A B s f) => @lem4944700 A B f s t h3)). Qed.
Lemma lem4944715 {A B : Type'} (f : A -> B) (s : A -> Prop) (t : B -> Prop) (h1 : @FINITE A s) (h2 : @FINITE B t) (h3 : term690 A B f s t) : (term693 A B t s f) = (term696 A B s f).
Proof. exact (EQ_MP (@lem4944714 A B f s t h1 h2 h3) (@lem4944700 A B f s t h3)). Qed.
Lemma lem4944716 {A B : Type'} (f : A -> B) (s : A -> Prop) (t : B -> Prop) (h1 : @FINITE A s) (h2 : term690 A B f s t) : (@FINITE B t) = ((term693 A B t s f) = (term696 A B s f)).
Proof. exact (prop_ext (fun h3 : @FINITE B t => @lem4944715 A B f s t h1 h3 h2) (fun h3 : (term693 A B t s f) = (term696 A B s f) => @lem4944701 A B f s t h2)). Qed.
Lemma lem4944717 {A B : Type'} (f : A -> B) (s : A -> Prop) (t : B -> Prop) (h1 : @FINITE A s) (h2 : term690 A B f s t) : (term693 A B t s f) = (term696 A B s f).
Proof. exact (EQ_MP (@lem4944716 A B f s t h1 h2) (@lem4944701 A B f s t h2)). Qed.
Lemma lem4944718 {A B : Type'} (f : A -> B) (s : A -> Prop) (t : B -> Prop) (h1 : @FINITE A s) (h2 : term690 A B f s t) : (@FINITE A s) = ((term693 A B t s f) = (term696 A B s f)).
Proof. exact (prop_ext (fun h3 : @FINITE A s => @lem4944717 A B f s t h1 h2) (fun h3 : (term693 A B t s f) = (term696 A B s f) => @lem4914388 A s h1)). Qed.
Lemma lem4944719 {A B : Type'} (f : A -> B) (s : A -> Prop) (t : B -> Prop) (h1 : @FINITE A s) (h2 : term690 A B f s t) : (term693 A B t s f) = (term696 A B s f).
Proof. exact (EQ_MP (@lem4944718 A B f s t h1 h2) (@lem4914388 A s h1)). Qed.
Lemma lem4944720 {A B : Type'} (f : A -> B) (s : A -> Prop) (t : B -> Prop) (h1 : @FINITE A s) (h2 : term689 A B f s t) : (term690 A B f s t) = ((term693 A B t s f) = (term696 A B s f)).
Proof. exact (prop_ext (fun h3 : term690 A B f s t => @lem4944719 A B f s t h1 h3) (fun h3 : (term693 A B t s f) = (term696 A B s f) => @lem4944698 A B f s t h2)). Qed.
Lemma lem4944721 {A B : Type'} (f : A -> B) (s : A -> Prop) (t : B -> Prop) (h1 : @FINITE A s) (h2 : term689 A B f s t) : (term693 A B t s f) = (term696 A B s f).
Proof. exact (EQ_MP (@lem4944720 A B f s t h1 h2) (@lem4944698 A B f s t h2)). Qed.
Lemma lem4944722 {A B : Type'} (f : A -> B) (s : A -> Prop) (t : B -> Prop) (h1 : term689 A B f s t) : (@FINITE A s) = ((term693 A B t s f) = (term696 A B s f)).
Proof. exact (prop_ext (fun h2 : @FINITE A s => @lem4944721 A B f s t h2 h1) (fun h2 : (term693 A B t s f) = (term696 A B s f) => @lem4944699 A B f s t h1)). Qed.
Lemma lem4944723 {A B : Type'} (f : A -> B) (s : A -> Prop) (t : B -> Prop) (h1 : term689 A B f s t) : (term693 A B t s f) = (term696 A B s f).
Proof. exact (EQ_MP (@lem4944722 A B f s t h1) (@lem4944699 A B f s t h1)). Qed.
Lemma lem4944724 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (f : A -> B) : term4731 A B t s f.
Proof. exact (fun h0 : term689 A B f s t => @lem4944723 A B f s t h0). Qed.
Lemma lem4944729 {A B : Type'} (t : B -> Prop) (s : A -> Prop) : term4732 A B t s.
Proof. exact (fun f : A -> B => @lem4944724 A B t s f). Qed.
Lemma lem4944734 {A B : Type'} (s : A -> Prop) : term4733 A B s.
Proof. exact (fun t : B -> Prop => @lem4944729 A B t s). Qed.
Lemma lem4944739 {A B : Type'} : term4734 A B.
Proof. exact (fun s : A -> Prop => @lem4944734 A B s). Qed.
