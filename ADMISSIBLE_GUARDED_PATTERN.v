Require Import coq.
Require Import theory_hol.
Require Import hol_types.
Require Import hol_terms.
Require Import hol_axioms.
Require Import hol_type_abbrevs.
Require Import ADMISSIBLE_GUARDED_PATTERN_term_abbrevs.
Require Import BOOL_CASES_AX_spec.
Require Import DISJ_ACI_spec.
Require Import DISJ_ASSOC_spec.
Require Import GEQ_DEF_spec.
Require Import NOT_CLAUSES_WEAK_spec.
Require Import admissible_spec.
Require Import thm0_spec.
Require Import thm10578_spec.
Require Import thm10597_spec.
Require Import thm16474_spec.
Require Import thm16506_spec.
Require Import thm16507_spec.
Require Import thm17045_spec.
Require Import thm17265_spec.
Require Import thm17362_spec.
Require Import thm17646_spec.
Require Import thm17784_spec.
Require Import thm1809_spec.
Require Import thm1810_spec.
Require Import thm1820_spec.
Require Import thm1822_spec.
Require Import thm1823_spec.
Require Import thm18392_spec.
Require Import thm1842_spec.
Require Import thm1843_spec.
Require Import thm1844_spec.
Require Import thm1855_spec.
Require Import thm1857_spec.
Require Import thm18898_spec.
Require Import thm18899_spec.
Require Import thm18904_spec.
Require Import thm18905_spec.
Require Import thm18910_spec.
Require Import thm18911_spec.
Require Import thm19490_spec.
Require Import thm19699_spec.
Require Import thm20661_spec.
Require Import thm20662_spec.
Require Import thm20664_spec.
Require Import thm20665_spec.
Require Import thm20668_spec.
Require Import thm20682_spec.
Require Import thm20764_spec.
Require Import thm20780_spec.
Require Import thm20789_spec.
Require Import thm20895_spec.
Require Import thm21021_spec.
Require Import thm21028_spec.
Require Import thm21107_spec.
Require Import thm21114_spec.
Require Import thm21182_spec.
Require Import thm21386_spec.
Lemma lem8183600 (t1 : Prop) : term0 t1.
Proof. exact (@lem693 t1). Qed.
Lemma lem8183601 (t1 : Prop) : (term0 t1) = (term1 t1).
Proof. exact (eq_refl (term0 t1)). Qed.
Lemma lem8183602 (t1 : Prop) : term1 t1.
Proof. exact (EQ_MP (@lem8183601 t1) (@lem8183600 t1)). Qed.
Lemma lem8183603 (t1 : Prop) (t2 : Prop) : term2 t1 t2.
Proof. exact (@lem8183602 t1 t2). Qed.
Lemma lem8183604 (t1 : Prop) (t2 : Prop) : (term2 t1 t2) = (term3 t1 t2).
Proof. exact (eq_refl (term2 t1 t2)). Qed.
Lemma lem8183605 (t1 : Prop) (t2 : Prop) : term3 t1 t2.
Proof. exact (EQ_MP (@lem8183604 t1 t2) (@lem8183603 t1 t2)). Qed.
Lemma lem8183606 (t1 : Prop) (t2 : Prop) (t3 : Prop) : term4 t1 t2 t3.
Proof. exact (@lem8183605 t1 t2 t3). Qed.
Lemma lem8183607 (t1 : Prop) (t2 : Prop) (t3 : Prop) : (term4 t1 t2 t3) = ((term5 t1 t2 t3) = (term6 t1 t2 t3)).
Proof. exact (eq_refl (term4 t1 t2 t3)). Qed.
Lemma lem8183608 (t1 : Prop) (t2 : Prop) (t3 : Prop) : (term5 t1 t2 t3) = (term6 t1 t2 t3).
Proof. exact (EQ_MP (@lem8183607 t1 t2 t3) (@lem8183606 t1 t2 t3)). Qed.
Lemma lem8183609 (t1 : Prop) (t2 : Prop) (t3 : Prop) : (term6 t1 t2 t3) = (term5 t1 t2 t3).
Proof. exact (SYM (@lem8183608 t1 t2 t3)). Qed.
Lemma lem8183621 (p : Prop) : p = (term7 p).
Proof. exact (EQ_MP (@lem10578 p) (@lem10597 p)). Qed.
Lemma lem8183622 {_144466 : Type'} (x : _144466) (y : _144466) (x' : _144466) (y' : _144466) : (term8 _144466 x y x' y') = (term9 _144466 x y x' y').
Proof. exact (@lem8183621 (term8 _144466 x y x' y')). Qed.
Lemma lem8183623 {_144466 : Type'} (x : _144466) (y : _144466) (x' : _144466) (y' : _144466) : (term9 _144466 x y x' y') = (term8 _144466 x y x' y').
Proof. exact (SYM (@lem8183622 _144466 x y x' y')). Qed.
Lemma lem8183624 {_144466 : Type'} (x : _144466) (y : _144466) (x' : _144466) (y' : _144466) (h1 : term10 _144466 x y x' y') : term10 _144466 x y x' y'.
Proof. exact (h1). Qed.
Lemma lem8183627 {_144466 : Type'} (x : _144466) (y : _144466) (x' : _144466) (y' : _144466) (h1 : term9 _144466 x y x' y') : term9 _144466 x y x' y'.
Proof. exact (h1). Qed.
Lemma lem8183628 {_144466 : Type'} (x : _144466) (y : _144466) (x' : _144466) (y' : _144466) : term11 _144466 x y x' y'.
Proof. exact (fun h0 : term9 _144466 x y x' y' => @lem8183627 _144466 x y x' y' h0). Qed.
Lemma lem8183629 {_144466 : Type'} (x : _144466) (y : _144466) (x' : _144466) (y' : _144466) (h1 : term11 _144466 x y x' y') : term11 _144466 x y x' y'.
Proof. exact (h1). Qed.
Lemma lem8183630 {_144466 : Type'} (x : _144466) (y : _144466) (x' : _144466) (y' : _144466) (h1 : term9 _144466 x y x' y') : term9 _144466 x y x' y'.
Proof. exact (h1). Qed.
Lemma lem8183631 {_144466 : Type'} (x : _144466) (y : _144466) (x' : _144466) (y' : _144466) (h1 : term9 _144466 x y x' y') (h2 : term11 _144466 x y x' y') : term9 _144466 x y x' y'.
Proof. exact (@lem8183629 _144466 x y x' y' h2 (@lem8183630 _144466 x y x' y' h1)). Qed.
Lemma lem8183632 {_144466 : Type'} (x : _144466) (y : _144466) (x' : _144466) (y' : _144466) (h1 : term9 _144466 x y x' y') : term12 _144466 x y x' y'.
Proof. exact (fun h0 : term11 _144466 x y x' y' => @lem8183631 _144466 x y x' y' h1 h0). Qed.
Lemma lem8183633 {_144466 : Type'} (x : _144466) (y : _144466) (x' : _144466) (y' : _144466) (h1 : term11 _144466 x y x' y') : term11 _144466 x y x' y'.
Proof. exact (h1). Qed.
Lemma lem8183634 {_144466 : Type'} (x : _144466) (y : _144466) (x' : _144466) (y' : _144466) (h1 : term9 _144466 x y x' y') (h2 : term11 _144466 x y x' y') : term9 _144466 x y x' y'.
Proof. exact (@lem8183632 _144466 x y x' y' h1 (@lem8183633 _144466 x y x' y' h2)). Qed.
Lemma lem8183635 {_144466 : Type'} (x : _144466) (y : _144466) (x' : _144466) (y' : _144466) (h1 : term11 _144466 x y x' y') : term11 _144466 x y x' y'.
Proof. exact (fun h0 : term9 _144466 x y x' y' => @lem8183634 _144466 x y x' y' h0 h1). Qed.
Lemma lem8183636 {_144466 : Type'} (x : _144466) (y : _144466) (x' : _144466) (y' : _144466) : term13 _144466 x y x' y'.
Proof. exact (fun h0 : term11 _144466 x y x' y' => @lem8183635 _144466 x y x' y' h0). Qed.
Lemma lem8183639 {_144466 : Type'} (x : _144466) (y : _144466) (x' : _144466) (y' : _144466) : term11 _144466 x y x' y'.
Proof. exact (@lem8183636 _144466 x y x' y' (@lem8183628 _144466 x y x' y')). Qed.
Lemma lem8183640 {_144466 : Type'} (x : _144466) (y : _144466) (x' : _144466) (y' : _144466) : term11 _144466 x y x' y'.
Proof. exact (@lem8183639 _144466 x y x' y'). Qed.
Lemma lem8183658 (t : Prop) : (t -> False) = (~ t).
Proof. exact (proj2 (@lem16474 t)). Qed.
Lemma lem8183659 {_144466 : Type'} (x : _144466) (y : _144466) (x' : _144466) (y' : _144466) : (term9 _144466 x y x' y') = (term14 _144466 x y x' y').
Proof. exact (@lem8183658 (term10 _144466 x y x' y')). Qed.
Lemma lem8183661 (t : Prop) : (term15 t) = t.
Proof. exact (EQ_MP (@lem16507 t) (@lem16506 t)). Qed.
Lemma lem8183662 {_144466 : Type'} (x : _144466) (y : _144466) (x' : _144466) (y' : _144466) : (term14 _144466 x y x' y') = (term8 _144466 x y x' y').
Proof. exact (@lem8183661 (term8 _144466 x y x' y')). Qed.
Lemma lem8183665 {_144466 : Type'} (x : _144466) (y : _144466) (x' : _144466) (y' : _144466) : (term9 _144466 x y x' y') = (term8 _144466 x y x' y').
Proof. exact (TRANS (@lem8183659 _144466 x y x' y') (@lem8183662 _144466 x y x' y')). Qed.
Lemma lem8183668 {_144466 : Type'} (y : _144466) (x' : _144466) (y' : _144466) : (term16 _144466 y x' y') = (term17 _144466 y x' y').
Proof. exact (fun_ext (fun x : _144466 => @lem8183665 _144466 x y x' y')). Qed.
Lemma lem8183669 {_144466 : Type'} : (@all _144466) = (@all _144466).
Proof. exact (eq_refl (@all _144466)). Qed.
Lemma lem8183670 {_144466 : Type'} (y : _144466) (x' : _144466) (y' : _144466) : (term18 _144466 y x' y') = (term19 _144466 y x' y').
Proof. exact (MK_COMB (@lem8183669 _144466) (@lem8183668 _144466 y x' y')). Qed.
Lemma lem8183675 {_144466 : Type'} (x' : _144466) (y' : _144466) : (term20 _144466 x' y') = (term21 _144466 x' y').
Proof. exact (fun_ext (fun y : _144466 => @lem8183670 _144466 y x' y')). Qed.
Lemma lem8183676 {_144466 : Type'} : (@all _144466) = (@all _144466).
Proof. exact (eq_refl (@all _144466)). Qed.
Lemma lem8183677 {_144466 : Type'} (x' : _144466) (y' : _144466) : (term22 _144466 x' y') = (term23 _144466 x' y').
Proof. exact (MK_COMB (@lem8183676 _144466) (@lem8183675 _144466 x' y')). Qed.
Lemma lem8183682 {_144466 : Type'} (y' : _144466) : (term24 _144466 y') = (term25 _144466 y').
Proof. exact (fun_ext (fun x' : _144466 => @lem8183677 _144466 x' y')). Qed.
Lemma lem8183683 {_144466 : Type'} : (@all _144466) = (@all _144466).
Proof. exact (eq_refl (@all _144466)). Qed.
Lemma lem8183684 {_144466 : Type'} (y' : _144466) : (term26 _144466 y') = (term27 _144466 y').
Proof. exact (MK_COMB (@lem8183683 _144466) (@lem8183682 _144466 y')). Qed.
Lemma lem8183689 {_144466 : Type'} : (term28 _144466) = (term29 _144466).
Proof. exact (fun_ext (fun y' : _144466 => @lem8183684 _144466 y')). Qed.
Lemma lem8183690 {_144466 : Type'} : (@all _144466) = (@all _144466).
Proof. exact (eq_refl (@all _144466)). Qed.
Lemma lem8183699 {_144466 : Type'} : (term30 _144466) = (term31 _144466).
Proof. exact (MK_COMB (@lem8183690 _144466) (@lem8183689 _144466)). Qed.
Lemma lem8183712 {_144466 : Type'} (x : _144466) (y : _144466) (x' : _144466) (y' : _144466) : (term8 _144466 x y x' y') = (term8 _144466 x y x' y').
Proof. exact (eq_refl (term8 _144466 x y x' y')). Qed.
Lemma lem8183713 {_144466 : Type'} (y : _144466) (x' : _144466) (y' : _144466) : (term17 _144466 y x' y') = (term17 _144466 y x' y').
Proof. exact (fun_ext (fun x : _144466 => @lem8183712 _144466 x y x' y')). Qed.
Lemma lem8183714 {_144466 : Type'} : (@all _144466) = (@all _144466).
Proof. exact (eq_refl (@all _144466)). Qed.
Lemma lem8183715 {_144466 : Type'} (y : _144466) (x' : _144466) (y' : _144466) : (term19 _144466 y x' y') = (term19 _144466 y x' y').
Proof. exact (MK_COMB (@lem8183714 _144466) (@lem8183713 _144466 y x' y')). Qed.
Lemma lem8183716 {_144466 : Type'} (x' : _144466) (y' : _144466) : (term21 _144466 x' y') = (term21 _144466 x' y').
Proof. exact (fun_ext (fun y : _144466 => @lem8183715 _144466 y x' y')). Qed.
Lemma lem8183717 {_144466 : Type'} : (@all _144466) = (@all _144466).
Proof. exact (eq_refl (@all _144466)). Qed.
Lemma lem8183718 {_144466 : Type'} (x' : _144466) (y' : _144466) : (term23 _144466 x' y') = (term23 _144466 x' y').
Proof. exact (MK_COMB (@lem8183717 _144466) (@lem8183716 _144466 x' y')). Qed.
Lemma lem8183719 {_144466 : Type'} (y' : _144466) : (term25 _144466 y') = (term25 _144466 y').
Proof. exact (fun_ext (fun x' : _144466 => @lem8183718 _144466 x' y')). Qed.
Lemma lem8183720 {_144466 : Type'} : (@all _144466) = (@all _144466).
Proof. exact (eq_refl (@all _144466)). Qed.
Lemma lem8183721 {_144466 : Type'} (y' : _144466) : (term27 _144466 y') = (term27 _144466 y').
Proof. exact (MK_COMB (@lem8183720 _144466) (@lem8183719 _144466 y')). Qed.
Lemma lem8183722 {_144466 : Type'} : (term29 _144466) = (term29 _144466).
Proof. exact (fun_ext (fun y' : _144466 => @lem8183721 _144466 y')). Qed.
Lemma lem8183723 {_144466 : Type'} : (@all _144466) = (@all _144466).
Proof. exact (eq_refl (@all _144466)). Qed.
Lemma lem8183724 {_144466 : Type'} : (term31 _144466) = (term31 _144466).
Proof. exact (MK_COMB (@lem8183723 _144466) (@lem8183722 _144466)). Qed.
Lemma lem8183755 {_144466 : Type'} : (term30 _144466) = (term31 _144466).
Proof. exact (TRANS (@lem8183699 _144466) (@lem8183724 _144466)). Qed.
Lemma lem8183756 {_144466 : Type'} : (term31 _144466) = (term30 _144466).
Proof. exact (SYM (@lem8183755 _144466)). Qed.
Lemma lem8183759 (p : Prop) : p = (term7 p).
Proof. exact (EQ_MP (@lem10578 p) (@lem10597 p)). Qed.
Lemma lem8183760 {_144466 : Type'} (x : _144466) (y : _144466) (x' : _144466) (y' : _144466) : ((x = y) = (x' = y')) = (term32 _144466 x y x' y').
Proof. exact (@lem8183759 ((x = y) = (x' = y'))). Qed.
Lemma lem8183761 {_144466 : Type'} (x : _144466) (y : _144466) (x' : _144466) (y' : _144466) : (term32 _144466 x y x' y') = ((x = y) = (x' = y')).
Proof. exact (SYM (@lem8183760 _144466 x y x' y')). Qed.
Lemma lem8183762 {_144466 : Type'} (x : _144466) (y : _144466) (x' : _144466) (y' : _144466) (h1 : term33 _144466 x y x' y') : term33 _144466 x y x' y'.
Proof. exact (h1). Qed.
Lemma lem8183772 {_144466 : Type'} (x : _144466) (x' : _144466) (y : _144466) (y' : _144466) (h1 : term34 _144466 x x' y y') : term34 _144466 x x' y y'.
Proof. exact (h1). Qed.
Lemma lem8183791 {_144466 : Type'} (x : _144466) (y : _144466) (x' : _144466) (y' : _144466) : (term33 _144466 x y x' y') = (term35 _144466 x y x' y').
Proof. exact (@lem17646 (x = y) (x' = y')). Qed.
Lemma lem8183806 {_144466 : Type'} (x : _144466) (x' : _144466) (y : _144466) (y' : _144466) (h1 : term34 _144466 x x' y y') : term34 _144466 x x' y y'.
Proof. exact (h1). Qed.
Lemma lem8183840 {_144466 : Type'} (x : _144466) (y : _144466) (x' : _144466) (y' : _144466) (h1 : term33 _144466 x y x' y') : term35 _144466 x y x' y'.
Proof. exact (EQ_MP (@lem8183791 _144466 x y x' y') (@lem8183762 _144466 x y x' y' h1)). Qed.
Lemma lem8183843 {_144466 : Type'} (x : _144466) (y : _144466) (x' : _144466) (y' : _144466) (h1 : term36 _144466 x y x' y') : term36 _144466 x y x' y'.
Proof. exact (h1). Qed.
Lemma lem8183844 {_144466 : Type'} (x : _144466) (y : _144466) (x' : _144466) (y' : _144466) (h1 : term37 _144466 x y x' y') : term37 _144466 x y x' y'.
Proof. exact (h1). Qed.
Lemma lem8183882 {_144466 : Type'} (x : _144466) (x' : _144466) (y : _144466) (y' : _144466) (h1 : term34 _144466 x x' y y') : x = x'.
Proof. exact (proj1 (@lem8183806 _144466 x x' y y' h1)). Qed.
Lemma lem8183886 {_144466 : Type'} (x : _144466) (y : _144466) (x' : _144466) (y' : _144466) (h1 : term36 _144466 x y x' y') : x = y.
Proof. exact (proj1 (@lem8183843 _144466 x y x' y' h1)). Qed.
Lemma lem8183890 {_144466 : Type'} (x : _144466) (x' : _144466) (y : _144466) (y' : _144466) (h1 : term34 _144466 x x' y y') : x = x'.
Proof. exact (proj1 (@lem8183806 _144466 x x' y y' h1)). Qed.
Lemma lem8183896 {_144466 : Type'} (x : _144466) (y : _144466) (x' : _144466) (y' : _144466) (h1 : term37 _144466 x y x' y') : x' = y'.
Proof. exact (proj2 (@lem8183844 _144466 x y x' y' h1)). Qed.
Lemma lem8183911 {_144466 : Type'} (x' : _144466) : (term38 _144466 x') = (term38 _144466 x').
Proof. exact (eq_refl (term38 _144466 x')). Qed.
Lemma lem8183912 {_144466 : Type'} (x : _144466) (y : _144466) (x' : _144466) (y' : _144466) (h1 : term36 _144466 x y x' y') : (term39 _144466 x' x) = (term39 _144466 x' y).
Proof. exact (MK_COMB (@lem8183911 _144466 x') (@lem8183886 _144466 x y x' y' h1)). Qed.
Lemma lem8183913 {_144466 : Type'} (y : _144466) (x' : _144466) : (term39 _144466 x' y) = (y = x').
Proof. exact (eq_refl (term39 _144466 x' y)). Qed.
Lemma lem8183914 {_144466 : Type'} (x' : _144466) (x : _144466) : (term40 _144466 x' x) = (term40 _144466 x' x).
Proof. exact (eq_refl (term40 _144466 x' x)). Qed.
Lemma lem8183915 {_144466 : Type'} (x : _144466) (y : _144466) (x' : _144466) : ((term39 _144466 x' x) = (term39 _144466 x' y)) = ((term39 _144466 x' x) = (y = x')).
Proof. exact (MK_COMB (@lem8183914 _144466 x' x) (@lem8183913 _144466 y x')). Qed.
Lemma lem8183916 {_144466 : Type'} (x : _144466) (x' : _144466) : (term39 _144466 x' x) = (x = x').
Proof. exact (eq_refl (term39 _144466 x' x)). Qed.
Lemma lem8183917 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8183918 {_144466 : Type'} (x : _144466) (x' : _144466) : (term40 _144466 x' x) = (term41 _144466 x x').
Proof. exact (MK_COMB (@lem8183917) (@lem8183916 _144466 x x')). Qed.
Lemma lem8183919 {_144466 : Type'} (y : _144466) (x' : _144466) : (y = x') = (y = x').
Proof. exact (eq_refl (y = x')). Qed.
Lemma lem8183920 {_144466 : Type'} (x : _144466) (y : _144466) (x' : _144466) : ((term39 _144466 x' x) = (y = x')) = ((x = x') = (y = x')).
Proof. exact (MK_COMB (@lem8183918 _144466 x x') (@lem8183919 _144466 y x')). Qed.
Lemma lem8183921 {_144466 : Type'} (x : _144466) (y : _144466) (x' : _144466) : ((term39 _144466 x' x) = (term39 _144466 x' y)) = ((x = x') = (y = x')).
Proof. exact (TRANS (@lem8183915 _144466 x y x') (@lem8183920 _144466 x y x')). Qed.
Lemma lem8183922 {_144466 : Type'} (x : _144466) (y : _144466) (x' : _144466) (y' : _144466) (h1 : term36 _144466 x y x' y') : (x = x') = (y = x').
Proof. exact (EQ_MP (@lem8183921 _144466 x y x') (@lem8183912 _144466 x y x' y' h1)). Qed.
Lemma lem8183923 {_144466 : Type'} (x : _144466) (y : _144466) (x' : _144466) (y' : _144466) (h1 : term34 _144466 x x' y y') (h2 : term36 _144466 x y x' y') : y = x'.
Proof. exact (EQ_MP (@lem8183922 _144466 x y x' y' h2) (@lem8183882 _144466 x x' y y' h1)). Qed.
Lemma lem8183937 {_144466 : Type'} (x : _144466) (x' : _144466) (y : _144466) (y' : _144466) (h1 : term34 _144466 x x' y y') : y = y'.
Proof. exact (proj2 (@lem8183806 _144466 x x' y y' h1)). Qed.
Lemma lem8183966 {_144466 : Type'} (x' : _144466) : (term38 _144466 x') = (term38 _144466 x').
Proof. exact (eq_refl (term38 _144466 x')). Qed.
Lemma lem8183967 {_144466 : Type'} (x : _144466) (x' : _144466) (y : _144466) (y' : _144466) (h1 : term34 _144466 x x' y y') : (term39 _144466 x' y) = (term39 _144466 x' y').
Proof. exact (MK_COMB (@lem8183966 _144466 x') (@lem8183937 _144466 x x' y y' h1)). Qed.
Lemma lem8183968 {_144466 : Type'} (y' : _144466) (x' : _144466) : (term39 _144466 x' y') = (y' = x').
Proof. exact (eq_refl (term39 _144466 x' y')). Qed.
Lemma lem8183969 {_144466 : Type'} (x' : _144466) (y : _144466) : (term40 _144466 x' y) = (term40 _144466 x' y).
Proof. exact (eq_refl (term40 _144466 x' y)). Qed.
Lemma lem8183970 {_144466 : Type'} (y : _144466) (y' : _144466) (x' : _144466) : ((term39 _144466 x' y) = (term39 _144466 x' y')) = ((term39 _144466 x' y) = (y' = x')).
Proof. exact (MK_COMB (@lem8183969 _144466 x' y) (@lem8183968 _144466 y' x')). Qed.
Lemma lem8183971 {_144466 : Type'} (y : _144466) (x' : _144466) : (term39 _144466 x' y) = (y = x').
Proof. exact (eq_refl (term39 _144466 x' y)). Qed.
Lemma lem8183972 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8183973 {_144466 : Type'} (y : _144466) (x' : _144466) : (term40 _144466 x' y) = (term41 _144466 y x').
Proof. exact (MK_COMB (@lem8183972) (@lem8183971 _144466 y x')). Qed.
Lemma lem8183974 {_144466 : Type'} (y' : _144466) (x' : _144466) : (y' = x') = (y' = x').
Proof. exact (eq_refl (y' = x')). Qed.
Lemma lem8183975 {_144466 : Type'} (y : _144466) (y' : _144466) (x' : _144466) : ((term39 _144466 x' y) = (y' = x')) = ((y = x') = (y' = x')).
Proof. exact (MK_COMB (@lem8183973 _144466 y x') (@lem8183974 _144466 y' x')). Qed.
Lemma lem8183976 {_144466 : Type'} (y : _144466) (y' : _144466) (x' : _144466) : ((term39 _144466 x' y) = (term39 _144466 x' y')) = ((y = x') = (y' = x')).
Proof. exact (TRANS (@lem8183970 _144466 y y' x') (@lem8183975 _144466 y y' x')). Qed.
Lemma lem8183977 {_144466 : Type'} (x : _144466) (x' : _144466) (y : _144466) (y' : _144466) (h1 : term34 _144466 x x' y y') : (y = x') = (y' = x').
Proof. exact (EQ_MP (@lem8183976 _144466 y y' x') (@lem8183967 _144466 x x' y y' h1)). Qed.
Lemma lem8183978 {_144466 : Type'} (x : _144466) (y : _144466) (x' : _144466) (y' : _144466) (h1 : term34 _144466 x x' y y') (h2 : term36 _144466 x y x' y') : y' = x'.
Proof. exact (EQ_MP (@lem8183977 _144466 x x' y y' h1) (@lem8183923 _144466 x y x' y' h1 h2)). Qed.
Lemma lem8183992 {_144466 : Type'} (x : _144466) (y : _144466) (x' : _144466) (y' : _144466) (h1 : term36 _144466 x y x' y') : term42 _144466 x' y'.
Proof. exact (proj2 (@lem8183843 _144466 x y x' y' h1)). Qed.
Lemma lem8184007 {_144466 : Type'} (x' : _144466) : (term43 _144466 x') = (term43 _144466 x').
Proof. exact (eq_refl (term43 _144466 x')). Qed.
Lemma lem8184008 {_144466 : Type'} (x : _144466) (y : _144466) (x' : _144466) (y' : _144466) (h1 : term34 _144466 x x' y y') (h2 : term36 _144466 x y x' y') : (term44 _144466 x' y') = (term45 _144466 x').
Proof. exact (MK_COMB (@lem8184007 _144466 x') (@lem8183978 _144466 x y x' y' h1 h2)). Qed.
Lemma lem8184009 {_144466 : Type'} (x' : _144466) : (term45 _144466 x') = (term46 _144466 x').
Proof. exact (eq_refl (term45 _144466 x')). Qed.
Lemma lem8184010 {_144466 : Type'} (x' : _144466) (y' : _144466) : (term47 _144466 x' y') = (term47 _144466 x' y').
Proof. exact (eq_refl (term47 _144466 x' y')). Qed.
Lemma lem8184011 {_144466 : Type'} (y' : _144466) (x' : _144466) : ((term44 _144466 x' y') = (term45 _144466 x')) = ((term44 _144466 x' y') = (term46 _144466 x')).
Proof. exact (MK_COMB (@lem8184010 _144466 x' y') (@lem8184009 _144466 x')). Qed.
Lemma lem8184012 {_144466 : Type'} (x' : _144466) (y' : _144466) : (term44 _144466 x' y') = (term42 _144466 x' y').
Proof. exact (eq_refl (term44 _144466 x' y')). Qed.
Lemma lem8184013 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8184014 {_144466 : Type'} (x' : _144466) (y' : _144466) : (term47 _144466 x' y') = (term48 _144466 x' y').
Proof. exact (MK_COMB (@lem8184013) (@lem8184012 _144466 x' y')). Qed.
Lemma lem8184015 {_144466 : Type'} (x' : _144466) : (term46 _144466 x') = (term46 _144466 x').
Proof. exact (eq_refl (term46 _144466 x')). Qed.
Lemma lem8184016 {_144466 : Type'} (y' : _144466) (x' : _144466) : ((term44 _144466 x' y') = (term46 _144466 x')) = ((term42 _144466 x' y') = (term46 _144466 x')).
Proof. exact (MK_COMB (@lem8184014 _144466 x' y') (@lem8184015 _144466 x')). Qed.
Lemma lem8184017 {_144466 : Type'} (y' : _144466) (x' : _144466) : ((term44 _144466 x' y') = (term45 _144466 x')) = ((term42 _144466 x' y') = (term46 _144466 x')).
Proof. exact (TRANS (@lem8184011 _144466 y' x') (@lem8184016 _144466 y' x')). Qed.
Lemma lem8184018 {_144466 : Type'} (x : _144466) (y : _144466) (x' : _144466) (y' : _144466) (h1 : term34 _144466 x x' y y') (h2 : term36 _144466 x y x' y') : (term42 _144466 x' y') = (term46 _144466 x').
Proof. exact (EQ_MP (@lem8184017 _144466 y' x') (@lem8184008 _144466 x y x' y' h1 h2)). Qed.
Lemma lem8184019 {_144466 : Type'} (x : _144466) (y : _144466) (x' : _144466) (y' : _144466) (h1 : term34 _144466 x x' y y') (h2 : term36 _144466 x y x' y') : term46 _144466 x'.
Proof. exact (EQ_MP (@lem8184018 _144466 x y x' y' h1 h2) (@lem8183992 _144466 x y x' y' h2)). Qed.
Lemma lem8184034 {_144466 : Type'} (x : _144466) : (term49 _144466 x) = (term49 _144466 x).
Proof. exact (eq_refl (term49 _144466 x)). Qed.
Lemma lem8184035 {_144466 : Type'} (x : _144466) (y : _144466) (x' : _144466) (y' : _144466) (h1 : term37 _144466 x y x' y') : (term50 _144466 x x') = (term50 _144466 x y').
Proof. exact (MK_COMB (@lem8184034 _144466 x) (@lem8183896 _144466 x y x' y' h1)). Qed.
Lemma lem8184036 {_144466 : Type'} (x : _144466) (y' : _144466) : (term50 _144466 x y') = (x = y').
Proof. exact (eq_refl (term50 _144466 x y')). Qed.
Lemma lem8184037 {_144466 : Type'} (x : _144466) (x' : _144466) : (term51 _144466 x x') = (term51 _144466 x x').
Proof. exact (eq_refl (term51 _144466 x x')). Qed.
Lemma lem8184038 {_144466 : Type'} (x' : _144466) (x : _144466) (y' : _144466) : ((term50 _144466 x x') = (term50 _144466 x y')) = ((term50 _144466 x x') = (x = y')).
Proof. exact (MK_COMB (@lem8184037 _144466 x x') (@lem8184036 _144466 x y')). Qed.
Lemma lem8184039 {_144466 : Type'} (x : _144466) (x' : _144466) : (term50 _144466 x x') = (x = x').
Proof. exact (eq_refl (term50 _144466 x x')). Qed.
Lemma lem8184040 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8184041 {_144466 : Type'} (x : _144466) (x' : _144466) : (term51 _144466 x x') = (term41 _144466 x x').
Proof. exact (MK_COMB (@lem8184040) (@lem8184039 _144466 x x')). Qed.
Lemma lem8184042 {_144466 : Type'} (x : _144466) (y' : _144466) : (x = y') = (x = y').
Proof. exact (eq_refl (x = y')). Qed.
Lemma lem8184043 {_144466 : Type'} (x' : _144466) (x : _144466) (y' : _144466) : ((term50 _144466 x x') = (x = y')) = ((x = x') = (x = y')).
Proof. exact (MK_COMB (@lem8184041 _144466 x x') (@lem8184042 _144466 x y')). Qed.
Lemma lem8184044 {_144466 : Type'} (x' : _144466) (x : _144466) (y' : _144466) : ((term50 _144466 x x') = (term50 _144466 x y')) = ((x = x') = (x = y')).
Proof. exact (TRANS (@lem8184038 _144466 x' x y') (@lem8184043 _144466 x' x y')). Qed.
Lemma lem8184045 {_144466 : Type'} (x : _144466) (y : _144466) (x' : _144466) (y' : _144466) (h1 : term37 _144466 x y x' y') : (x = x') = (x = y').
Proof. exact (EQ_MP (@lem8184044 _144466 x' x y') (@lem8184035 _144466 x y x' y' h1)). Qed.
Lemma lem8184060 {_144466 : Type'} (x : _144466) (x' : _144466) (y : _144466) (y' : _144466) (h1 : term34 _144466 x x' y y') : y = y'.
Proof. exact (proj2 (@lem8183806 _144466 x x' y y' h1)). Qed.
Lemma lem8184074 {_144466 : Type'} (x : _144466) (y : _144466) (x' : _144466) (y' : _144466) (h1 : term37 _144466 x y x' y') : term42 _144466 x y.
Proof. exact (proj1 (@lem8183844 _144466 x y x' y' h1)). Qed.
Lemma lem8184102 {_144466 : Type'} (x : _144466) (x' : _144466) (y : _144466) (y' : _144466) (h1 : term37 _144466 x y x' y') (h2 : term34 _144466 x x' y y') : x = y'.
Proof. exact (EQ_MP (@lem8184045 _144466 x y x' y' h1) (@lem8183890 _144466 x x' y y' h2)). Qed.
Lemma lem8184103 {_144466 : Type'} (x : _144466) : (term43 _144466 x) = (term43 _144466 x).
Proof. exact (eq_refl (term43 _144466 x)). Qed.
Lemma lem8184104 {_144466 : Type'} (x : _144466) (x' : _144466) (y : _144466) (y' : _144466) (h1 : term34 _144466 x x' y y') : (term44 _144466 x y) = (term44 _144466 x y').
Proof. exact (MK_COMB (@lem8184103 _144466 x) (@lem8184060 _144466 x x' y y' h1)). Qed.
Lemma lem8184105 {_144466 : Type'} (x : _144466) (y' : _144466) : (term44 _144466 x y') = (term42 _144466 x y').
Proof. exact (eq_refl (term44 _144466 x y')). Qed.
Lemma lem8184106 {_144466 : Type'} (x : _144466) (y : _144466) : (term47 _144466 x y) = (term47 _144466 x y).
Proof. exact (eq_refl (term47 _144466 x y)). Qed.
Lemma lem8184107 {_144466 : Type'} (y : _144466) (x : _144466) (y' : _144466) : ((term44 _144466 x y) = (term44 _144466 x y')) = ((term44 _144466 x y) = (term42 _144466 x y')).
Proof. exact (MK_COMB (@lem8184106 _144466 x y) (@lem8184105 _144466 x y')). Qed.
Lemma lem8184108 {_144466 : Type'} (x : _144466) (y : _144466) : (term44 _144466 x y) = (term42 _144466 x y).
Proof. exact (eq_refl (term44 _144466 x y)). Qed.
Lemma lem8184109 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8184110 {_144466 : Type'} (x : _144466) (y : _144466) : (term47 _144466 x y) = (term48 _144466 x y).
Proof. exact (MK_COMB (@lem8184109) (@lem8184108 _144466 x y)). Qed.
Lemma lem8184111 {_144466 : Type'} (x : _144466) (y' : _144466) : (term42 _144466 x y') = (term42 _144466 x y').
Proof. exact (eq_refl (term42 _144466 x y')). Qed.
Lemma lem8184112 {_144466 : Type'} (y : _144466) (x : _144466) (y' : _144466) : ((term44 _144466 x y) = (term42 _144466 x y')) = ((term42 _144466 x y) = (term42 _144466 x y')).
Proof. exact (MK_COMB (@lem8184110 _144466 x y) (@lem8184111 _144466 x y')). Qed.
Lemma lem8184113 {_144466 : Type'} (y : _144466) (x : _144466) (y' : _144466) : ((term44 _144466 x y) = (term44 _144466 x y')) = ((term42 _144466 x y) = (term42 _144466 x y')).
Proof. exact (TRANS (@lem8184107 _144466 y x y') (@lem8184112 _144466 y x y')). Qed.
Lemma lem8184114 {_144466 : Type'} (x : _144466) (x' : _144466) (y : _144466) (y' : _144466) (h1 : term34 _144466 x x' y y') : (term42 _144466 x y) = (term42 _144466 x y').
Proof. exact (EQ_MP (@lem8184113 _144466 y x y') (@lem8184104 _144466 x x' y y' h1)). Qed.
Lemma lem8184115 {_144466 : Type'} (x : _144466) (x' : _144466) (y : _144466) (y' : _144466) (h1 : term37 _144466 x y x' y') (h2 : term34 _144466 x x' y y') : term42 _144466 x y'.
Proof. exact (EQ_MP (@lem8184114 _144466 x x' y y' h2) (@lem8184074 _144466 x y x' y' h1)). Qed.
Lemma lem8184130 {_144466 : Type'} (y' : _144466) : (term52 _144466 y') = (term52 _144466 y').
Proof. exact (eq_refl (term52 _144466 y')). Qed.
Lemma lem8184131 {_144466 : Type'} (x : _144466) (x' : _144466) (y : _144466) (y' : _144466) (h1 : term37 _144466 x y x' y') (h2 : term34 _144466 x x' y y') : (term53 _144466 y' x) = (term54 _144466 y').
Proof. exact (MK_COMB (@lem8184130 _144466 y') (@lem8184102 _144466 x x' y y' h1 h2)). Qed.
Lemma lem8184132 {_144466 : Type'} (y' : _144466) : (term54 _144466 y') = (term46 _144466 y').
Proof. exact (eq_refl (term54 _144466 y')). Qed.
Lemma lem8184133 {_144466 : Type'} (y' : _144466) (x : _144466) : (term55 _144466 y' x) = (term55 _144466 y' x).
Proof. exact (eq_refl (term55 _144466 y' x)). Qed.
Lemma lem8184134 {_144466 : Type'} (x : _144466) (y' : _144466) : ((term53 _144466 y' x) = (term54 _144466 y')) = ((term53 _144466 y' x) = (term46 _144466 y')).
Proof. exact (MK_COMB (@lem8184133 _144466 y' x) (@lem8184132 _144466 y')). Qed.
Lemma lem8184135 {_144466 : Type'} (x : _144466) (y' : _144466) : (term53 _144466 y' x) = (term42 _144466 x y').
Proof. exact (eq_refl (term53 _144466 y' x)). Qed.
Lemma lem8184136 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8184137 {_144466 : Type'} (x : _144466) (y' : _144466) : (term55 _144466 y' x) = (term48 _144466 x y').
Proof. exact (MK_COMB (@lem8184136) (@lem8184135 _144466 x y')). Qed.
Lemma lem8184138 {_144466 : Type'} (y' : _144466) : (term46 _144466 y') = (term46 _144466 y').
Proof. exact (eq_refl (term46 _144466 y')). Qed.
Lemma lem8184139 {_144466 : Type'} (x : _144466) (y' : _144466) : ((term53 _144466 y' x) = (term46 _144466 y')) = ((term42 _144466 x y') = (term46 _144466 y')).
Proof. exact (MK_COMB (@lem8184137 _144466 x y') (@lem8184138 _144466 y')). Qed.
Lemma lem8184140 {_144466 : Type'} (x : _144466) (y' : _144466) : ((term53 _144466 y' x) = (term54 _144466 y')) = ((term42 _144466 x y') = (term46 _144466 y')).
Proof. exact (TRANS (@lem8184134 _144466 x y') (@lem8184139 _144466 x y')). Qed.
Lemma lem8184141 {_144466 : Type'} (x : _144466) (x' : _144466) (y : _144466) (y' : _144466) (h1 : term37 _144466 x y x' y') (h2 : term34 _144466 x x' y y') : (term42 _144466 x y') = (term46 _144466 y').
Proof. exact (EQ_MP (@lem8184140 _144466 x y') (@lem8184131 _144466 x x' y y' h1 h2)). Qed.
Lemma lem8184142 {_144466 : Type'} (x : _144466) (x' : _144466) (y : _144466) (y' : _144466) (h1 : term37 _144466 x y x' y') (h2 : term34 _144466 x x' y y') : term46 _144466 y'.
Proof. exact (EQ_MP (@lem8184141 _144466 x x' y y' h1 h2) (@lem8184115 _144466 x x' y y' h1 h2)). Qed.
Lemma lem8184146 {_144466 : Type'} (x : _144466) : x = x.
Proof. exact (@lem21386 _144466 x). Qed.
Lemma lem8184147 {_144466 : Type'} (x : _144466) : x = x.
Proof. exact (@lem8184146 _144466 x). Qed.
Lemma lem8184148 {_144466 : Type'} (x' : _144466) : x' = x'.
Proof. exact (@lem8184147 _144466 x'). Qed.
Lemma lem8184149 {_144466 : Type'} (x' : _144466) : term56 _144466 x'.
Proof. exact (fun h0 : term46 _144466 x' => @lem8184148 _144466 x'). Qed.
Lemma lem8184151 (p : Prop) : (term57 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8184152 {_144466 : Type'} (x' : _144466) : (term56 _144466 x') = (x' = x').
Proof. exact (@lem8184151 (x' = x')). Qed.
Lemma lem8184153 {_144466 : Type'} (x' : _144466) : x' = x'.
Proof. exact (EQ_MP (@lem8184152 _144466 x') (@lem8184149 _144466 x')). Qed.
Lemma lem8184156 (p : Prop) : (~ p) = (p -> False).
Proof. exact (EQ_MP (@lem21021 p) (@lem0)). Qed.
Lemma lem8184158 {_144466 : Type'} (x' : _144466) : (term46 _144466 x') = (term58 _144466 x').
Proof. exact (@lem8184156 (x' = x')). Qed.
Lemma lem8184161 {_144466 : Type'} (x : _144466) (y : _144466) (x' : _144466) (y' : _144466) (h1 : term34 _144466 x x' y y') (h2 : term36 _144466 x y x' y') : term58 _144466 x'.
Proof. exact (EQ_MP (@lem8184158 _144466 x') (@lem8184019 _144466 x y x' y' h1 h2)). Qed.
Lemma lem8184164 {_144466 : Type'} (x : _144466) (y : _144466) (x' : _144466) (y' : _144466) (h1 : term34 _144466 x x' y y') (h2 : term36 _144466 x y x' y') : False.
Proof. exact (@lem8184161 _144466 x y x' y' h1 h2 (@lem8184153 _144466 x')). Qed.
Lemma lem8184165 {_144466 : Type'} (x : _144466) (y : _144466) (x' : _144466) (y' : _144466) (h1 : term34 _144466 x x' y y') (h2 : term36 _144466 x y x' y') : term59.
Proof. exact (fun h0 : ~ False => @lem8184164 _144466 x y x' y' h1 h2). Qed.
Lemma lem8184167 (p : Prop) : (term57 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8184168 : term59 = False.
Proof. exact (@lem8184167 False). Qed.
Lemma lem8184173 {_144466 : Type'} (x : _144466) : x = x.
Proof. exact (@lem21386 _144466 x). Qed.
Lemma lem8184174 {_144466 : Type'} (x : _144466) : x = x.
Proof. exact (@lem8184173 _144466 x). Qed.
Lemma lem8184175 {_144466 : Type'} (y' : _144466) : y' = y'.
Proof. exact (@lem8184174 _144466 y'). Qed.
Lemma lem8184176 {_144466 : Type'} (y' : _144466) : term56 _144466 y'.
Proof. exact (fun h0 : term46 _144466 y' => @lem8184175 _144466 y'). Qed.
Lemma lem8184178 (p : Prop) : (term57 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8184179 {_144466 : Type'} (y' : _144466) : (term56 _144466 y') = (y' = y').
Proof. exact (@lem8184178 (y' = y')). Qed.
Lemma lem8184180 {_144466 : Type'} (y' : _144466) : y' = y'.
Proof. exact (EQ_MP (@lem8184179 _144466 y') (@lem8184176 _144466 y')). Qed.
Lemma lem8184183 (p : Prop) : (~ p) = (p -> False).
Proof. exact (EQ_MP (@lem21021 p) (@lem0)). Qed.
Lemma lem8184185 {_144466 : Type'} (y' : _144466) : (term46 _144466 y') = (term58 _144466 y').
Proof. exact (@lem8184183 (y' = y')). Qed.
Lemma lem8184188 {_144466 : Type'} (x : _144466) (x' : _144466) (y : _144466) (y' : _144466) (h1 : term37 _144466 x y x' y') (h2 : term34 _144466 x x' y y') : term58 _144466 y'.
Proof. exact (EQ_MP (@lem8184185 _144466 y') (@lem8184142 _144466 x x' y y' h1 h2)). Qed.
Lemma lem8184191 {_144466 : Type'} (x : _144466) (x' : _144466) (y : _144466) (y' : _144466) (h1 : term37 _144466 x y x' y') (h2 : term34 _144466 x x' y y') : False.
Proof. exact (@lem8184188 _144466 x x' y y' h1 h2 (@lem8184180 _144466 y')). Qed.
Lemma lem8184192 {_144466 : Type'} (x : _144466) (x' : _144466) (y : _144466) (y' : _144466) (h1 : term37 _144466 x y x' y') (h2 : term34 _144466 x x' y y') : term59.
Proof. exact (fun h0 : ~ False => @lem8184191 _144466 x x' y y' h1 h2). Qed.
Lemma lem8184194 (p : Prop) : (term57 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8184195 : term59 = False.
Proof. exact (@lem8184194 False). Qed.
Lemma lem8184199 {_144466 : Type'} (x : _144466) (x' : _144466) (y : _144466) (y' : _144466) (h1 : term37 _144466 x y x' y') (h2 : term34 _144466 x x' y y') : False.
Proof. exact (EQ_MP (@lem8184195) (@lem8184192 _144466 x x' y y' h1 h2)). Qed.
Lemma lem8184202 {_144466 : Type'} (x : _144466) (y : _144466) (x' : _144466) (y' : _144466) (h1 : term34 _144466 x x' y y') (h2 : term36 _144466 x y x' y') : False.
Proof. exact (EQ_MP (@lem8184168) (@lem8184165 _144466 x y x' y' h1 h2)). Qed.
Lemma lem8184203 {_144466 : Type'} (x : _144466) (x' : _144466) (y : _144466) (y' : _144466) (h1 : term33 _144466 x y x' y') (h2 : term34 _144466 x x' y y') : False.
Proof. exact (or_elim (@lem8183840 _144466 x y x' y' h1) (fun h0 : term36 _144466 x y x' y' => @lem8184202 _144466 x y x' y' h2 h0) (fun h0 : term37 _144466 x y x' y' => @lem8184199 _144466 x x' y y' h0 h2)). Qed.
Lemma lem8184204 {_144466 : Type'} (x : _144466) (x' : _144466) (y : _144466) (y' : _144466) (h1 : term33 _144466 x y x' y') (h2 : term34 _144466 x x' y y') : (term34 _144466 x x' y y') = False.
Proof. exact (prop_ext (fun h3 : term34 _144466 x x' y y' => @lem8184203 _144466 x x' y y' h1 h2) (fun h3 : False => @lem8183806 _144466 x x' y y' h2)). Qed.
Lemma lem8184205 {_144466 : Type'} (x : _144466) (x' : _144466) (y : _144466) (y' : _144466) (h1 : term33 _144466 x y x' y') (h2 : term34 _144466 x x' y y') : False.
Proof. exact (EQ_MP (@lem8184204 _144466 x x' y y' h1 h2) (@lem8183806 _144466 x x' y y' h2)). Qed.
Lemma lem8184206 {_144466 : Type'} (x : _144466) (x' : _144466) (y : _144466) (y' : _144466) (h1 : term33 _144466 x y x' y') (h2 : term34 _144466 x x' y y') : (term34 _144466 x x' y y') = False.
Proof. exact (prop_ext (fun h3 : term34 _144466 x x' y y' => @lem8184205 _144466 x x' y y' h1 h2) (fun h3 : False => @lem8183772 _144466 x x' y y' h2)). Qed.
Lemma lem8184207 {_144466 : Type'} (x : _144466) (x' : _144466) (y : _144466) (y' : _144466) (h1 : term33 _144466 x y x' y') (h2 : term34 _144466 x x' y y') : False.
Proof. exact (EQ_MP (@lem8184206 _144466 x x' y y' h1 h2) (@lem8183772 _144466 x x' y y' h2)). Qed.
Lemma lem8184208 {_144466 : Type'} (x : _144466) (x' : _144466) (y : _144466) (y' : _144466) (h1 : term33 _144466 x y x' y') (h2 : term34 _144466 x x' y y') : (term33 _144466 x y x' y') = False.
Proof. exact (prop_ext (fun h3 : term33 _144466 x y x' y' => @lem8184207 _144466 x x' y y' h1 h2) (fun h3 : False => @lem8183762 _144466 x y x' y' h1)). Qed.
Lemma lem8184209 {_144466 : Type'} (x : _144466) (x' : _144466) (y : _144466) (y' : _144466) (h1 : term33 _144466 x y x' y') (h2 : term34 _144466 x x' y y') : False.
Proof. exact (EQ_MP (@lem8184208 _144466 x x' y y' h1 h2) (@lem8183762 _144466 x y x' y' h1)). Qed.
Lemma lem8184210 {_144466 : Type'} (x : _144466) (x' : _144466) (y : _144466) (y' : _144466) (h1 : term34 _144466 x x' y y') : term32 _144466 x y x' y'.
Proof. exact (fun h0 : term33 _144466 x y x' y' => @lem8184209 _144466 x x' y y' h0 h1). Qed.
Lemma lem8184211 {_144466 : Type'} (x : _144466) (x' : _144466) (y : _144466) (y' : _144466) (h1 : term34 _144466 x x' y y') : (x = y) = (x' = y').
Proof. exact (EQ_MP (@lem8183761 _144466 x y x' y') (@lem8184210 _144466 x x' y y' h1)). Qed.
Lemma lem8184212 {_144466 : Type'} (x : _144466) (y : _144466) (x' : _144466) (y' : _144466) : term8 _144466 x y x' y'.
Proof. exact (fun h0 : term34 _144466 x x' y y' => @lem8184211 _144466 x x' y y' h0). Qed.
Lemma lem8184217 {_144466 : Type'} (y : _144466) (x' : _144466) (y' : _144466) : term19 _144466 y x' y'.
Proof. exact (fun x : _144466 => @lem8184212 _144466 x y x' y'). Qed.
Lemma lem8184222 {_144466 : Type'} (x' : _144466) (y' : _144466) : term23 _144466 x' y'.
Proof. exact (fun y : _144466 => @lem8184217 _144466 y x' y'). Qed.
Lemma lem8184227 {_144466 : Type'} (y' : _144466) : term27 _144466 y'.
Proof. exact (fun x' : _144466 => @lem8184222 _144466 x' y'). Qed.
Lemma lem8184232 {_144466 : Type'} : term31 _144466.
Proof. exact (fun y' : _144466 => @lem8184227 _144466 y'). Qed.
Lemma lem8184233 {_144466 : Type'} : term30 _144466.
Proof. exact (EQ_MP (@lem8183756 _144466) (@lem8184232 _144466)). Qed.
Lemma lem8184234 {_144466 : Type'} (y' : _144466) : term60 _144466 y'.
Proof. exact (@lem8184233 _144466 y'). Qed.
Lemma lem8184235 {_144466 : Type'} (y' : _144466) : (term60 _144466 y') = (term26 _144466 y').
Proof. exact (eq_refl (term60 _144466 y')). Qed.
Lemma lem8184236 {_144466 : Type'} (y' : _144466) : term26 _144466 y'.
Proof. exact (EQ_MP (@lem8184235 _144466 y') (@lem8184234 _144466 y')). Qed.
Lemma lem8184237 {_144466 : Type'} (y' : _144466) (x' : _144466) : term61 _144466 y' x'.
Proof. exact (@lem8184236 _144466 y' x'). Qed.
Lemma lem8184238 {_144466 : Type'} (x' : _144466) (y' : _144466) : (term61 _144466 y' x') = (term22 _144466 x' y').
Proof. exact (eq_refl (term61 _144466 y' x')). Qed.
Lemma lem8184239 {_144466 : Type'} (x' : _144466) (y' : _144466) : term22 _144466 x' y'.
Proof. exact (EQ_MP (@lem8184238 _144466 x' y') (@lem8184237 _144466 y' x')). Qed.
Lemma lem8184240 {_144466 : Type'} (x' : _144466) (y' : _144466) (y : _144466) : term62 _144466 x' y' y.
Proof. exact (@lem8184239 _144466 x' y' y). Qed.
Lemma lem8184241 {_144466 : Type'} (y : _144466) (x' : _144466) (y' : _144466) : (term62 _144466 x' y' y) = (term18 _144466 y x' y').
Proof. exact (eq_refl (term62 _144466 x' y' y)). Qed.
Lemma lem8184242 {_144466 : Type'} (y : _144466) (x' : _144466) (y' : _144466) : term18 _144466 y x' y'.
Proof. exact (EQ_MP (@lem8184241 _144466 y x' y') (@lem8184240 _144466 x' y' y)). Qed.
Lemma lem8184243 {_144466 : Type'} (y : _144466) (x' : _144466) (y' : _144466) (x : _144466) : term63 _144466 y x' y' x.
Proof. exact (@lem8184242 _144466 y x' y' x). Qed.
Lemma lem8184244 {_144466 : Type'} (x : _144466) (y : _144466) (x' : _144466) (y' : _144466) : (term63 _144466 y x' y' x) = (term9 _144466 x y x' y').
Proof. exact (eq_refl (term63 _144466 y x' y' x)). Qed.
Lemma lem8184245 {_144466 : Type'} (x : _144466) (y : _144466) (x' : _144466) (y' : _144466) : term9 _144466 x y x' y'.
Proof. exact (EQ_MP (@lem8184244 _144466 x y x' y') (@lem8184243 _144466 y x' y' x)). Qed.
Lemma lem8184247 {_144466 : Type'} (x : _144466) (y : _144466) (x' : _144466) (y' : _144466) : term9 _144466 x y x' y'.
Proof. exact (@lem8183640 _144466 x y x' y' (@lem8184245 _144466 x y x' y')). Qed.
Lemma lem8184248 {_144466 : Type'} (x : _144466) (y : _144466) (x' : _144466) (y' : _144466) (h1 : term10 _144466 x y x' y') : False.
Proof. exact (@lem8184247 _144466 x y x' y' (@lem8183624 _144466 x y x' y' h1)). Qed.
Lemma lem8184249 {_144466 : Type'} (x : _144466) (y : _144466) (x' : _144466) (y' : _144466) (h1 : term10 _144466 x y x' y') : (term10 _144466 x y x' y') = False.
Proof. exact (prop_ext (fun h2 : term10 _144466 x y x' y' => @lem8184248 _144466 x y x' y' h1) (fun h2 : False => @lem8183624 _144466 x y x' y' h1)). Qed.
Lemma lem8184250 {_144466 : Type'} (x : _144466) (y : _144466) (x' : _144466) (y' : _144466) (h1 : term10 _144466 x y x' y') : False.
Proof. exact (EQ_MP (@lem8184249 _144466 x y x' y' h1) (@lem8183624 _144466 x y x' y' h1)). Qed.
Lemma lem8184251 {_144466 : Type'} (x : _144466) (y : _144466) (x' : _144466) (y' : _144466) : term9 _144466 x y x' y'.
Proof. exact (fun h0 : term10 _144466 x y x' y' => @lem8184250 _144466 x y x' y' h0). Qed.
Lemma lem8184252 {_144466 : Type'} (x : _144466) (y : _144466) (x' : _144466) (y' : _144466) : term8 _144466 x y x' y'.
Proof. exact (EQ_MP (@lem8183623 _144466 x y x' y') (@lem8184251 _144466 x y x' y')). Qed.
Lemma lem8184253 {_144466 : Type'} (x : _144466) (y : _144466) (x' : _144466) (y' : _144466) (h1 : term8 _144466 x y x' y') : term8 _144466 x y x' y'.
Proof. exact (h1). Qed.
Lemma lem8184254 {_144466 : Type'} (x : _144466) (x' : _144466) (y : _144466) (y' : _144466) (h1 : term34 _144466 x x' y y') : term34 _144466 x x' y y'.
Proof. exact (h1). Qed.
Lemma lem8184255 {_144466 : Type'} (x : _144466) (y : _144466) (x' : _144466) (y' : _144466) (h1 : term34 _144466 x x' y y') (h2 : term8 _144466 x y x' y') : (x = y) = (x' = y').
Proof. exact (@lem8184253 _144466 x y x' y' h2 (@lem8184254 _144466 x x' y y' h1)). Qed.
Lemma lem8184256 {_144466 : Type'} (x : _144466) (x' : _144466) (y : _144466) (y' : _144466) (h1 : term34 _144466 x x' y y') : term64 _144466 x y x' y'.
Proof. exact (fun h0 : term8 _144466 x y x' y' => @lem8184255 _144466 x y x' y' h1 h0). Qed.
Lemma lem8184257 {_144466 : Type'} (x : _144466) (y : _144466) (x' : _144466) (y' : _144466) (h1 : term8 _144466 x y x' y') : term8 _144466 x y x' y'.
Proof. exact (h1). Qed.
Lemma lem8184258 {_144466 : Type'} (x : _144466) (y : _144466) (x' : _144466) (y' : _144466) (h1 : term34 _144466 x x' y y') (h2 : term8 _144466 x y x' y') : (x = y) = (x' = y').
Proof. exact (@lem8184256 _144466 x x' y y' h1 (@lem8184257 _144466 x y x' y' h2)). Qed.
Lemma lem8184259 {_144466 : Type'} (x : _144466) (y : _144466) (x' : _144466) (y' : _144466) (h1 : term8 _144466 x y x' y') : term8 _144466 x y x' y'.
Proof. exact (fun h0 : term34 _144466 x x' y y' => @lem8184258 _144466 x y x' y' h0 h1). Qed.
Lemma lem8184260 {_144466 : Type'} (x : _144466) (y : _144466) (x' : _144466) (y' : _144466) : term65 _144466 x y x' y'.
Proof. exact (fun h0 : term8 _144466 x y x' y' => @lem8184259 _144466 x y x' y' h0). Qed.
Lemma lem8184282 (a : Prop) : term66 a.
Proof. exact (@lem9851 a). Qed.
Lemma lem8184283 (a : Prop) : (term66 a) = (term67 a).
Proof. exact (eq_refl (term66 a)). Qed.
Lemma lem8184284 (a : Prop) : term67 a.
Proof. exact (EQ_MP (@lem8184283 a) (@lem8184282 a)). Qed.
Lemma lem8184285 (a : Prop) (h1 : a = True) : a = True.
Proof. exact (h1). Qed.
Lemma lem8184286 (a : Prop) (h1 : a = False) : a = False.
Proof. exact (h1). Qed.
Lemma lem8184307 (b : Prop) (a' : Prop) (b' : Prop) : (term68 b a' b') = (term68 b a' b').
Proof. exact (eq_refl (term68 b a' b')). Qed.
Lemma lem8184308 (b : Prop) (a' : Prop) (b' : Prop) (a : Prop) (h1 : a = True) : (term69 b a' b' a) = (term70 b a' b').
Proof. exact (MK_COMB (@lem8184307 b a' b') (@lem8184285 a h1)). Qed.
Lemma lem8184309 (b : Prop) (a' : Prop) (b' : Prop) : (term70 b a' b') = (term71 b a' b').
Proof. exact (eq_refl (term70 b a' b')). Qed.
Lemma lem8184310 (b : Prop) (a' : Prop) (b' : Prop) (a : Prop) : (term72 b a' b' a) = (term72 b a' b' a).
Proof. exact (eq_refl (term72 b a' b' a)). Qed.
Lemma lem8184311 (a : Prop) (b : Prop) (a' : Prop) (b' : Prop) : ((term69 b a' b' a) = (term70 b a' b')) = ((term69 b a' b' a) = (term71 b a' b')).
Proof. exact (MK_COMB (@lem8184310 b a' b' a) (@lem8184309 b a' b')). Qed.
Lemma lem8184312 (a : Prop) (b : Prop) (a' : Prop) (b' : Prop) : (term69 b a' b' a) = (term73 a b a' b').
Proof. exact (eq_refl (term69 b a' b' a)). Qed.
Lemma lem8184313 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8184314 (a : Prop) (b : Prop) (a' : Prop) (b' : Prop) : (term72 b a' b' a) = (term74 a b a' b').
Proof. exact (MK_COMB (@lem8184313) (@lem8184312 a b a' b')). Qed.
Lemma lem8184315 (b : Prop) (a' : Prop) (b' : Prop) : (term71 b a' b') = (term71 b a' b').
Proof. exact (eq_refl (term71 b a' b')). Qed.
Lemma lem8184316 (a : Prop) (b : Prop) (a' : Prop) (b' : Prop) : ((term69 b a' b' a) = (term71 b a' b')) = ((term73 a b a' b') = (term71 b a' b')).
Proof. exact (MK_COMB (@lem8184314 a b a' b') (@lem8184315 b a' b')). Qed.
Lemma lem8184317 (a : Prop) (b : Prop) (a' : Prop) (b' : Prop) : ((term69 b a' b' a) = (term70 b a' b')) = ((term73 a b a' b') = (term71 b a' b')).
Proof. exact (TRANS (@lem8184311 a b a' b') (@lem8184316 a b a' b')). Qed.
Lemma lem8184318 (b : Prop) (a' : Prop) (b' : Prop) (a : Prop) (h1 : a = True) : (term73 a b a' b') = (term71 b a' b').
Proof. exact (EQ_MP (@lem8184317 a b a' b') (@lem8184308 b a' b' a h1)). Qed.
Lemma lem8184319 (b : Prop) (a' : Prop) (b' : Prop) (a : Prop) (h1 : a = True) : (term71 b a' b') = (term73 a b a' b').
Proof. exact (SYM (@lem8184318 b a' b' a h1)). Qed.
Lemma lem8184320 (b : Prop) (a' : Prop) (b' : Prop) : (term68 b a' b') = (term68 b a' b').
Proof. exact (eq_refl (term68 b a' b')). Qed.
Lemma lem8184321 (b : Prop) (a' : Prop) (b' : Prop) (a : Prop) (h1 : a = False) : (term69 b a' b' a) = (term75 b a' b').
Proof. exact (MK_COMB (@lem8184320 b a' b') (@lem8184286 a h1)). Qed.
Lemma lem8184322 (b : Prop) (a' : Prop) (b' : Prop) : (term75 b a' b') = (term76 b a' b').
Proof. exact (eq_refl (term75 b a' b')). Qed.
Lemma lem8184323 (b : Prop) (a' : Prop) (b' : Prop) (a : Prop) : (term72 b a' b' a) = (term72 b a' b' a).
Proof. exact (eq_refl (term72 b a' b' a)). Qed.
Lemma lem8184324 (a : Prop) (b : Prop) (a' : Prop) (b' : Prop) : ((term69 b a' b' a) = (term75 b a' b')) = ((term69 b a' b' a) = (term76 b a' b')).
Proof. exact (MK_COMB (@lem8184323 b a' b' a) (@lem8184322 b a' b')). Qed.
Lemma lem8184325 (a : Prop) (b : Prop) (a' : Prop) (b' : Prop) : (term69 b a' b' a) = (term73 a b a' b').
Proof. exact (eq_refl (term69 b a' b' a)). Qed.
Lemma lem8184326 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8184327 (a : Prop) (b : Prop) (a' : Prop) (b' : Prop) : (term72 b a' b' a) = (term74 a b a' b').
Proof. exact (MK_COMB (@lem8184326) (@lem8184325 a b a' b')). Qed.
Lemma lem8184328 (b : Prop) (a' : Prop) (b' : Prop) : (term76 b a' b') = (term76 b a' b').
Proof. exact (eq_refl (term76 b a' b')). Qed.
Lemma lem8184329 (a : Prop) (b : Prop) (a' : Prop) (b' : Prop) : ((term69 b a' b' a) = (term76 b a' b')) = ((term73 a b a' b') = (term76 b a' b')).
Proof. exact (MK_COMB (@lem8184327 a b a' b') (@lem8184328 b a' b')). Qed.
Lemma lem8184330 (a : Prop) (b : Prop) (a' : Prop) (b' : Prop) : ((term69 b a' b' a) = (term75 b a' b')) = ((term73 a b a' b') = (term76 b a' b')).
Proof. exact (TRANS (@lem8184324 a b a' b') (@lem8184329 a b a' b')). Qed.
Lemma lem8184331 (b : Prop) (a' : Prop) (b' : Prop) (a : Prop) (h1 : a = False) : (term73 a b a' b') = (term76 b a' b').
Proof. exact (EQ_MP (@lem8184330 a b a' b') (@lem8184321 b a' b' a h1)). Qed.
Lemma lem8184332 (b : Prop) (a' : Prop) (b' : Prop) (a : Prop) (h1 : a = False) : (term76 b a' b') = (term73 a b a' b').
Proof. exact (SYM (@lem8184331 b a' b' a h1)). Qed.
Lemma lem8184338 (t : Prop) : (True = t) = t.
Proof. exact (proj1 (@lem1855 t)). Qed.
Lemma lem8184339 (a' : Prop) : (True = a') = a'.
Proof. exact (@lem8184338 a'). Qed.
Lemma lem8184340 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8184341 (a' : Prop) : (term77 a') = (and a').
Proof. exact (MK_COMB (@lem8184340) (@lem8184339 a')). Qed.
Lemma lem8184345 (t : Prop) : (True /\ t) = t.
Proof. exact (proj1 (@lem1842 t)). Qed.
Lemma lem8184346 (a' : Prop) : (True /\ a') = a'.
Proof. exact (@lem8184345 a'). Qed.
Lemma lem8184347 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8184348 (a' : Prop) : (term78 a') = (imp a').
Proof. exact (MK_COMB (@lem8184347) (@lem8184346 a')). Qed.
Lemma lem8184351 (b : Prop) (b' : Prop) : (b = b') = (b = b').
Proof. exact (eq_refl (b = b')). Qed.
Lemma lem8184352 (a' : Prop) (b : Prop) (b' : Prop) : (term79 a' b b') = (term80 a' b b').
Proof. exact (MK_COMB (@lem8184348 a') (@lem8184351 b b')). Qed.
Lemma lem8184355 (a' : Prop) (b : Prop) (b' : Prop) : (term81 a' b b') = (term82 a' b b').
Proof. exact (MK_COMB (@lem8184341 a') (@lem8184352 a' b b')). Qed.
Lemma lem8184358 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8184359 (a' : Prop) (b : Prop) (b' : Prop) : (term83 a' b b') = (term84 a' b b').
Proof. exact (MK_COMB (@lem8184358) (@lem8184355 a' b b')). Qed.
Lemma lem8184363 (t : Prop) : (True /\ t) = t.
Proof. exact (proj1 (@lem1842 t)). Qed.
Lemma lem8184364 (b : Prop) : (True /\ b) = b.
Proof. exact (@lem8184363 b). Qed.
Lemma lem8184365 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8184366 (b : Prop) : (term85 b) = (@eq Prop b).
Proof. exact (MK_COMB (@lem8184365) (@lem8184364 b)). Qed.
Lemma lem8184369 (a' : Prop) (b' : Prop) : (a' /\ b') = (a' /\ b').
Proof. exact (eq_refl (a' /\ b')). Qed.
Lemma lem8184370 (b : Prop) (a' : Prop) (b' : Prop) : ((True /\ b) = (a' /\ b')) = (b = (a' /\ b')).
Proof. exact (MK_COMB (@lem8184366 b) (@lem8184369 a' b')). Qed.
Lemma lem8184373 (b : Prop) (a' : Prop) (b' : Prop) : (term71 b a' b') = (term86 b a' b').
Proof. exact (MK_COMB (@lem8184359 a' b b') (@lem8184370 b a' b')). Qed.
Lemma lem8184376 (b : Prop) (a' : Prop) (b' : Prop) : (term86 b a' b') = (term71 b a' b').
Proof. exact (SYM (@lem8184373 b a' b')). Qed.
Lemma lem8184377 (a' : Prop) : term66 a'.
Proof. exact (@lem9851 a'). Qed.
Lemma lem8184378 (a' : Prop) : (term66 a') = (term67 a').
Proof. exact (eq_refl (term66 a')). Qed.
Lemma lem8184379 (a' : Prop) : term67 a'.
Proof. exact (EQ_MP (@lem8184378 a') (@lem8184377 a')). Qed.
Lemma lem8184380 (a' : Prop) (h1 : a' = True) : a' = True.
Proof. exact (h1). Qed.
Lemma lem8184381 (a' : Prop) (h1 : a' = False) : a' = False.
Proof. exact (h1). Qed.
Lemma lem8184396 (b : Prop) (b' : Prop) : (term87 b b') = (term87 b b').
Proof. exact (eq_refl (term87 b b')). Qed.
Lemma lem8184397 (b : Prop) (b' : Prop) (a' : Prop) (h1 : a' = True) : (term88 b b' a') = (term89 b b').
Proof. exact (MK_COMB (@lem8184396 b b') (@lem8184380 a' h1)). Qed.
Lemma lem8184398 (b : Prop) (b' : Prop) : (term89 b b') = (term90 b b').
Proof. exact (eq_refl (term89 b b')). Qed.
Lemma lem8184399 (b : Prop) (b' : Prop) (a' : Prop) : (term91 b b' a') = (term91 b b' a').
Proof. exact (eq_refl (term91 b b' a')). Qed.
Lemma lem8184400 (a' : Prop) (b : Prop) (b' : Prop) : ((term88 b b' a') = (term89 b b')) = ((term88 b b' a') = (term90 b b')).
Proof. exact (MK_COMB (@lem8184399 b b' a') (@lem8184398 b b')). Qed.
Lemma lem8184401 (b : Prop) (a' : Prop) (b' : Prop) : (term88 b b' a') = (term86 b a' b').
Proof. exact (eq_refl (term88 b b' a')). Qed.
Lemma lem8184402 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8184403 (b : Prop) (a' : Prop) (b' : Prop) : (term91 b b' a') = (term92 b a' b').
Proof. exact (MK_COMB (@lem8184402) (@lem8184401 b a' b')). Qed.
Lemma lem8184404 (b : Prop) (b' : Prop) : (term90 b b') = (term90 b b').
Proof. exact (eq_refl (term90 b b')). Qed.
Lemma lem8184405 (a' : Prop) (b : Prop) (b' : Prop) : ((term88 b b' a') = (term90 b b')) = ((term86 b a' b') = (term90 b b')).
Proof. exact (MK_COMB (@lem8184403 b a' b') (@lem8184404 b b')). Qed.
Lemma lem8184406 (a' : Prop) (b : Prop) (b' : Prop) : ((term88 b b' a') = (term89 b b')) = ((term86 b a' b') = (term90 b b')).
Proof. exact (TRANS (@lem8184400 a' b b') (@lem8184405 a' b b')). Qed.
Lemma lem8184407 (b : Prop) (b' : Prop) (a' : Prop) (h1 : a' = True) : (term86 b a' b') = (term90 b b').
Proof. exact (EQ_MP (@lem8184406 a' b b') (@lem8184397 b b' a' h1)). Qed.
Lemma lem8184408 (b : Prop) (b' : Prop) (a' : Prop) (h1 : a' = True) : (term90 b b') = (term86 b a' b').
Proof. exact (SYM (@lem8184407 b b' a' h1)). Qed.
Lemma lem8184409 (b : Prop) (b' : Prop) : (term87 b b') = (term87 b b').
Proof. exact (eq_refl (term87 b b')). Qed.
Lemma lem8184410 (b : Prop) (b' : Prop) (a' : Prop) (h1 : a' = False) : (term88 b b' a') = (term93 b b').
Proof. exact (MK_COMB (@lem8184409 b b') (@lem8184381 a' h1)). Qed.
Lemma lem8184411 (b : Prop) (b' : Prop) : (term93 b b') = (term94 b b').
Proof. exact (eq_refl (term93 b b')). Qed.
Lemma lem8184412 (b : Prop) (b' : Prop) (a' : Prop) : (term91 b b' a') = (term91 b b' a').
Proof. exact (eq_refl (term91 b b' a')). Qed.
Lemma lem8184413 (a' : Prop) (b : Prop) (b' : Prop) : ((term88 b b' a') = (term93 b b')) = ((term88 b b' a') = (term94 b b')).
Proof. exact (MK_COMB (@lem8184412 b b' a') (@lem8184411 b b')). Qed.
Lemma lem8184414 (b : Prop) (a' : Prop) (b' : Prop) : (term88 b b' a') = (term86 b a' b').
Proof. exact (eq_refl (term88 b b' a')). Qed.
Lemma lem8184415 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8184416 (b : Prop) (a' : Prop) (b' : Prop) : (term91 b b' a') = (term92 b a' b').
Proof. exact (MK_COMB (@lem8184415) (@lem8184414 b a' b')). Qed.
Lemma lem8184417 (b : Prop) (b' : Prop) : (term94 b b') = (term94 b b').
Proof. exact (eq_refl (term94 b b')). Qed.
Lemma lem8184418 (a' : Prop) (b : Prop) (b' : Prop) : ((term88 b b' a') = (term94 b b')) = ((term86 b a' b') = (term94 b b')).
Proof. exact (MK_COMB (@lem8184416 b a' b') (@lem8184417 b b')). Qed.
Lemma lem8184419 (a' : Prop) (b : Prop) (b' : Prop) : ((term88 b b' a') = (term93 b b')) = ((term86 b a' b') = (term94 b b')).
Proof. exact (TRANS (@lem8184413 a' b b') (@lem8184418 a' b b')). Qed.
Lemma lem8184420 (b : Prop) (b' : Prop) (a' : Prop) (h1 : a' = False) : (term86 b a' b') = (term94 b b').
Proof. exact (EQ_MP (@lem8184419 a' b b') (@lem8184410 b b' a' h1)). Qed.
Lemma lem8184421 (b : Prop) (b' : Prop) (a' : Prop) (h1 : a' = False) : (term94 b b') = (term86 b a' b').
Proof. exact (SYM (@lem8184420 b b' a' h1)). Qed.
Lemma lem8184425 (t : Prop) : (True /\ t) = t.
Proof. exact (proj1 (@lem1842 t)). Qed.
Lemma lem8184426 (b : Prop) (b' : Prop) : (term95 b b') = (term96 b b').
Proof. exact (@lem8184425 (term96 b b')). Qed.
Lemma lem8184428 (t : Prop) : (True -> t) = t.
Proof. exact (proj1 (@lem1820 t)). Qed.
Lemma lem8184429 (b : Prop) (b' : Prop) : (term96 b b') = (b = b').
Proof. exact (@lem8184428 (b = b')). Qed.
Lemma lem8184432 (b : Prop) (b' : Prop) : (term95 b b') = (b = b').
Proof. exact (TRANS (@lem8184426 b b') (@lem8184429 b b')). Qed.
Lemma lem8184433 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8184434 (b : Prop) (b' : Prop) : (term97 b b') = (term98 b b').
Proof. exact (MK_COMB (@lem8184433) (@lem8184432 b b')). Qed.
Lemma lem8184438 (t : Prop) : (True /\ t) = t.
Proof. exact (proj1 (@lem1842 t)). Qed.
Lemma lem8184439 (b' : Prop) : (True /\ b') = b'.
Proof. exact (@lem8184438 b'). Qed.
Lemma lem8184440 (b : Prop) : (@eq Prop b) = (@eq Prop b).
Proof. exact (eq_refl (@eq Prop b)). Qed.
Lemma lem8184441 (b : Prop) (b' : Prop) : (b = (True /\ b')) = (b = b').
Proof. exact (MK_COMB (@lem8184440 b) (@lem8184439 b')). Qed.
Lemma lem8184444 (b : Prop) (b' : Prop) : (term90 b b') = (term99 b b').
Proof. exact (MK_COMB (@lem8184434 b b') (@lem8184441 b b')). Qed.
Lemma lem8184448 (t : Prop) : (t -> t) = True.
Proof. exact (proj1 (@lem1823 t)). Qed.
Lemma lem8184449 (b : Prop) (b' : Prop) : (term99 b b') = True.
Proof. exact (@lem8184448 (b = b')). Qed.
Lemma lem8184450 (b : Prop) (b' : Prop) : (term90 b b') = True.
Proof. exact (TRANS (@lem8184444 b b') (@lem8184449 b b')). Qed.
Lemma lem8184451 (b : Prop) (b' : Prop) : True = (term90 b b').
Proof. exact (SYM (@lem8184450 b b')). Qed.
Lemma lem8184452 (b : Prop) (b' : Prop) : term90 b b'.
Proof. exact (EQ_MP (@lem8184451 b b') (@lem0)). Qed.
Lemma lem8184456 (t : Prop) : (False /\ t) = False.
Proof. exact (proj1 (@lem1844 t)). Qed.
Lemma lem8184457 (b : Prop) (b' : Prop) : (term100 b b') = False.
Proof. exact (@lem8184456 (term101 b b')). Qed.
Lemma lem8184458 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8184459 (b : Prop) (b' : Prop) : (term102 b b') = (imp False).
Proof. exact (MK_COMB (@lem8184458) (@lem8184457 b b')). Qed.
Lemma lem8184463 (t : Prop) : (False /\ t) = False.
Proof. exact (proj1 (@lem1844 t)). Qed.
Lemma lem8184464 (b' : Prop) : (False /\ b') = False.
Proof. exact (@lem8184463 b'). Qed.
Lemma lem8184465 (b : Prop) : (@eq Prop b) = (@eq Prop b).
Proof. exact (eq_refl (@eq Prop b)). Qed.
Lemma lem8184466 (b' : Prop) (b : Prop) : (b = (False /\ b')) = (b = False).
Proof. exact (MK_COMB (@lem8184465 b) (@lem8184464 b')). Qed.
Lemma lem8184468 (t : Prop) : (t = False) = (~ t).
Proof. exact (proj2 (@lem1857 t)). Qed.
Lemma lem8184469 (b : Prop) : (b = False) = (~ b).
Proof. exact (@lem8184468 b). Qed.
Lemma lem8184470 (b' : Prop) (b : Prop) : (b = (False /\ b')) = (~ b).
Proof. exact (TRANS (@lem8184466 b' b) (@lem8184469 b)). Qed.
Lemma lem8184471 (b' : Prop) (b : Prop) : (term94 b b') = (term103 b).
Proof. exact (MK_COMB (@lem8184459 b b') (@lem8184470 b' b)). Qed.
Lemma lem8184473 (t : Prop) : (False -> t) = True.
Proof. exact (proj1 (@lem1822 t)). Qed.
Lemma lem8184474 (b : Prop) : (term103 b) = True.
Proof. exact (@lem8184473 (~ b)). Qed.
Lemma lem8184475 (b : Prop) (b' : Prop) : (term94 b b') = True.
Proof. exact (TRANS (@lem8184471 b' b) (@lem8184474 b)). Qed.
Lemma lem8184476 (b : Prop) (b' : Prop) : True = (term94 b b').
Proof. exact (SYM (@lem8184475 b b')). Qed.
Lemma lem8184477 (b : Prop) (b' : Prop) : term94 b b'.
Proof. exact (EQ_MP (@lem8184476 b b') (@lem0)). Qed.
Lemma lem8184478 (b : Prop) (b' : Prop) (a' : Prop) (h1 : a' = False) : term86 b a' b'.
Proof. exact (EQ_MP (@lem8184421 b b' a' h1) (@lem8184477 b b')). Qed.
Lemma lem8184479 (b : Prop) (b' : Prop) (a' : Prop) (h1 : a' = True) : term86 b a' b'.
Proof. exact (EQ_MP (@lem8184408 b b' a' h1) (@lem8184452 b b')). Qed.
Lemma lem8184481 (b : Prop) (a' : Prop) (b' : Prop) : term86 b a' b'.
Proof. exact (or_elim (@lem8184379 a') (fun h0 : a' = True => @lem8184479 b b' a' h0) (fun h0 : a' = False => @lem8184478 b b' a' h0)). Qed.
Lemma lem8184482 (b : Prop) (a' : Prop) (b' : Prop) : term71 b a' b'.
Proof. exact (EQ_MP (@lem8184376 b a' b') (@lem8184481 b a' b')). Qed.
Lemma lem8184488 (t : Prop) : (False = t) = (~ t).
Proof. exact (proj1 (@lem1857 t)). Qed.
Lemma lem8184489 (a' : Prop) : (False = a') = (~ a').
Proof. exact (@lem8184488 a'). Qed.
Lemma lem8184490 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8184491 (a' : Prop) : (term104 a') = (term105 a').
Proof. exact (MK_COMB (@lem8184490) (@lem8184489 a')). Qed.
Lemma lem8184495 (t : Prop) : (False /\ t) = False.
Proof. exact (proj1 (@lem1844 t)). Qed.
Lemma lem8184496 (a' : Prop) : (False /\ a') = False.
Proof. exact (@lem8184495 a'). Qed.
Lemma lem8184497 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8184498 (a' : Prop) : (term106 a') = (imp False).
Proof. exact (MK_COMB (@lem8184497) (@lem8184496 a')). Qed.
Lemma lem8184501 (b : Prop) (b' : Prop) : (b = b') = (b = b').
Proof. exact (eq_refl (b = b')). Qed.
Lemma lem8184502 (a' : Prop) (b : Prop) (b' : Prop) : (term107 a' b b') = (term101 b b').
Proof. exact (MK_COMB (@lem8184498 a') (@lem8184501 b b')). Qed.
Lemma lem8184504 (t : Prop) : (False -> t) = True.
Proof. exact (proj1 (@lem1822 t)). Qed.
Lemma lem8184505 (b : Prop) (b' : Prop) : (term101 b b') = True.
Proof. exact (@lem8184504 (b = b')). Qed.
Lemma lem8184506 (a' : Prop) (b : Prop) (b' : Prop) : (term107 a' b b') = True.
Proof. exact (TRANS (@lem8184502 a' b b') (@lem8184505 b b')). Qed.
Lemma lem8184507 (b : Prop) (b' : Prop) (a' : Prop) : (term108 a' b b') = (term109 a').
Proof. exact (MK_COMB (@lem8184491 a') (@lem8184506 a' b b')). Qed.
Lemma lem8184509 (t : Prop) : (t /\ True) = t.
Proof. exact (proj1 (@lem1843 t)). Qed.
Lemma lem8184510 (a' : Prop) : (term109 a') = (~ a').
Proof. exact (@lem8184509 (~ a')). Qed.
Lemma lem8184511 (b : Prop) (b' : Prop) (a' : Prop) : (term108 a' b b') = (~ a').
Proof. exact (TRANS (@lem8184507 b b' a') (@lem8184510 a')). Qed.
Lemma lem8184512 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8184513 (b : Prop) (b' : Prop) (a' : Prop) : (term110 a' b b') = (term111 a').
Proof. exact (MK_COMB (@lem8184512) (@lem8184511 b b' a')). Qed.
Lemma lem8184517 (t : Prop) : (False /\ t) = False.
Proof. exact (proj1 (@lem1844 t)). Qed.
Lemma lem8184518 (b : Prop) : (False /\ b) = False.
Proof. exact (@lem8184517 b). Qed.
Lemma lem8184519 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8184520 (b : Prop) : (term112 b) = (@eq Prop False).
Proof. exact (MK_COMB (@lem8184519) (@lem8184518 b)). Qed.
Lemma lem8184523 (a' : Prop) (b' : Prop) : (a' /\ b') = (a' /\ b').
Proof. exact (eq_refl (a' /\ b')). Qed.
Lemma lem8184524 (b : Prop) (a' : Prop) (b' : Prop) : ((False /\ b) = (a' /\ b')) = (False = (a' /\ b')).
Proof. exact (MK_COMB (@lem8184520 b) (@lem8184523 a' b')). Qed.
Lemma lem8184526 (t : Prop) : (False = t) = (~ t).
Proof. exact (proj1 (@lem1857 t)). Qed.
Lemma lem8184527 (a' : Prop) (b' : Prop) : (False = (a' /\ b')) = (term113 a' b').
Proof. exact (@lem8184526 (a' /\ b')). Qed.
Lemma lem8184530 (b : Prop) (a' : Prop) (b' : Prop) : ((False /\ b) = (a' /\ b')) = (term113 a' b').
Proof. exact (TRANS (@lem8184524 b a' b') (@lem8184527 a' b')). Qed.
Lemma lem8184531 (b : Prop) (a' : Prop) (b' : Prop) : (term76 b a' b') = (term114 a' b').
Proof. exact (MK_COMB (@lem8184513 b b' a') (@lem8184530 b a' b')). Qed.
Lemma lem8184534 (b : Prop) (a' : Prop) (b' : Prop) : (term114 a' b') = (term76 b a' b').
Proof. exact (SYM (@lem8184531 b a' b')). Qed.
Lemma lem8184535 (a' : Prop) : term66 a'.
Proof. exact (@lem9851 a'). Qed.
Lemma lem8184536 (a' : Prop) : (term66 a') = (term67 a').
Proof. exact (eq_refl (term66 a')). Qed.
Lemma lem8184537 (a' : Prop) : term67 a'.
Proof. exact (EQ_MP (@lem8184536 a') (@lem8184535 a')). Qed.
Lemma lem8184538 (a' : Prop) (h1 : a' = True) : a' = True.
Proof. exact (h1). Qed.
Lemma lem8184539 (a' : Prop) (h1 : a' = False) : a' = False.
Proof. exact (h1). Qed.
Lemma lem8184546 (b' : Prop) : (term115 b') = (term115 b').
Proof. exact (eq_refl (term115 b')). Qed.
Lemma lem8184547 (b' : Prop) (a' : Prop) (h1 : a' = True) : (term116 b' a') = (term117 b').
Proof. exact (MK_COMB (@lem8184546 b') (@lem8184538 a' h1)). Qed.
Lemma lem8184548 (b' : Prop) : (term117 b') = (term118 b').
Proof. exact (eq_refl (term117 b')). Qed.
Lemma lem8184549 (b' : Prop) (a' : Prop) : (term119 b' a') = (term119 b' a').
Proof. exact (eq_refl (term119 b' a')). Qed.
Lemma lem8184550 (a' : Prop) (b' : Prop) : ((term116 b' a') = (term117 b')) = ((term116 b' a') = (term118 b')).
Proof. exact (MK_COMB (@lem8184549 b' a') (@lem8184548 b')). Qed.
Lemma lem8184551 (a' : Prop) (b' : Prop) : (term116 b' a') = (term114 a' b').
Proof. exact (eq_refl (term116 b' a')). Qed.
Lemma lem8184552 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8184553 (a' : Prop) (b' : Prop) : (term119 b' a') = (term120 a' b').
Proof. exact (MK_COMB (@lem8184552) (@lem8184551 a' b')). Qed.
Lemma lem8184554 (b' : Prop) : (term118 b') = (term118 b').
Proof. exact (eq_refl (term118 b')). Qed.
Lemma lem8184555 (a' : Prop) (b' : Prop) : ((term116 b' a') = (term118 b')) = ((term114 a' b') = (term118 b')).
Proof. exact (MK_COMB (@lem8184553 a' b') (@lem8184554 b')). Qed.
Lemma lem8184556 (a' : Prop) (b' : Prop) : ((term116 b' a') = (term117 b')) = ((term114 a' b') = (term118 b')).
Proof. exact (TRANS (@lem8184550 a' b') (@lem8184555 a' b')). Qed.
Lemma lem8184557 (b' : Prop) (a' : Prop) (h1 : a' = True) : (term114 a' b') = (term118 b').
Proof. exact (EQ_MP (@lem8184556 a' b') (@lem8184547 b' a' h1)). Qed.
Lemma lem8184558 (b' : Prop) (a' : Prop) (h1 : a' = True) : (term118 b') = (term114 a' b').
Proof. exact (SYM (@lem8184557 b' a' h1)). Qed.
Lemma lem8184559 (b' : Prop) : (term115 b') = (term115 b').
Proof. exact (eq_refl (term115 b')). Qed.
Lemma lem8184560 (b' : Prop) (a' : Prop) (h1 : a' = False) : (term116 b' a') = (term121 b').
Proof. exact (MK_COMB (@lem8184559 b') (@lem8184539 a' h1)). Qed.
Lemma lem8184561 (b' : Prop) : (term121 b') = (term122 b').
Proof. exact (eq_refl (term121 b')). Qed.
Lemma lem8184562 (b' : Prop) (a' : Prop) : (term119 b' a') = (term119 b' a').
Proof. exact (eq_refl (term119 b' a')). Qed.
Lemma lem8184563 (a' : Prop) (b' : Prop) : ((term116 b' a') = (term121 b')) = ((term116 b' a') = (term122 b')).
Proof. exact (MK_COMB (@lem8184562 b' a') (@lem8184561 b')). Qed.
Lemma lem8184564 (a' : Prop) (b' : Prop) : (term116 b' a') = (term114 a' b').
Proof. exact (eq_refl (term116 b' a')). Qed.
Lemma lem8184565 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8184566 (a' : Prop) (b' : Prop) : (term119 b' a') = (term120 a' b').
Proof. exact (MK_COMB (@lem8184565) (@lem8184564 a' b')). Qed.
Lemma lem8184567 (b' : Prop) : (term122 b') = (term122 b').
Proof. exact (eq_refl (term122 b')). Qed.
Lemma lem8184568 (a' : Prop) (b' : Prop) : ((term116 b' a') = (term122 b')) = ((term114 a' b') = (term122 b')).
Proof. exact (MK_COMB (@lem8184566 a' b') (@lem8184567 b')). Qed.
Lemma lem8184569 (a' : Prop) (b' : Prop) : ((term116 b' a') = (term121 b')) = ((term114 a' b') = (term122 b')).
Proof. exact (TRANS (@lem8184563 a' b') (@lem8184568 a' b')). Qed.
Lemma lem8184570 (b' : Prop) (a' : Prop) (h1 : a' = False) : (term114 a' b') = (term122 b').
Proof. exact (EQ_MP (@lem8184569 a' b') (@lem8184560 b' a' h1)). Qed.
Lemma lem8184571 (b' : Prop) (a' : Prop) (h1 : a' = False) : (term122 b') = (term114 a' b').
Proof. exact (SYM (@lem8184570 b' a' h1)). Qed.
Lemma lem8184575 : (~ True) = False.
Proof. exact (proj1 (@lem1504)). Qed.
Lemma lem8184576 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8184577 : term123 = (imp False).
Proof. exact (MK_COMB (@lem8184576) (@lem8184575)). Qed.
Lemma lem8184579 (t : Prop) : (True /\ t) = t.
Proof. exact (proj1 (@lem1842 t)). Qed.
Lemma lem8184580 (b' : Prop) : (True /\ b') = b'.
Proof. exact (@lem8184579 b'). Qed.
Lemma lem8184581 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8184582 (b' : Prop) : (term124 b') = (~ b').
Proof. exact (MK_COMB (@lem8184581) (@lem8184580 b')). Qed.
Lemma lem8184583 (b' : Prop) : (term118 b') = (term103 b').
Proof. exact (MK_COMB (@lem8184577) (@lem8184582 b')). Qed.
Lemma lem8184585 (t : Prop) : (False -> t) = True.
Proof. exact (proj1 (@lem1822 t)). Qed.
Lemma lem8184586 (b' : Prop) : (term103 b') = True.
Proof. exact (@lem8184585 (~ b')). Qed.
Lemma lem8184587 (b' : Prop) : (term118 b') = True.
Proof. exact (TRANS (@lem8184583 b') (@lem8184586 b')). Qed.
Lemma lem8184588 (b' : Prop) : True = (term118 b').
Proof. exact (SYM (@lem8184587 b')). Qed.
Lemma lem8184589 (b' : Prop) : term118 b'.
Proof. exact (EQ_MP (@lem8184588 b') (@lem0)). Qed.
Lemma lem8184593 : (~ False) = True.
Proof. exact (proj2 (@lem1504)). Qed.
Lemma lem8184594 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8184595 : term125 = (imp True).
Proof. exact (MK_COMB (@lem8184594) (@lem8184593)). Qed.
Lemma lem8184597 (t : Prop) : (False /\ t) = False.
Proof. exact (proj1 (@lem1844 t)). Qed.
Lemma lem8184598 (b' : Prop) : (False /\ b') = False.
Proof. exact (@lem8184597 b'). Qed.
Lemma lem8184599 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8184600 (b' : Prop) : (term126 b') = (~ False).
Proof. exact (MK_COMB (@lem8184599) (@lem8184598 b')). Qed.
Lemma lem8184602 : (~ False) = True.
Proof. exact (proj2 (@lem1504)). Qed.
Lemma lem8184603 (b' : Prop) : (term126 b') = True.
Proof. exact (TRANS (@lem8184600 b') (@lem8184602)). Qed.
Lemma lem8184604 (b' : Prop) : (term122 b') = (True -> True).
Proof. exact (MK_COMB (@lem8184595) (@lem8184603 b')). Qed.
Lemma lem8184606 (t : Prop) : (True -> t) = t.
Proof. exact (proj1 (@lem1820 t)). Qed.
Lemma lem8184607 : (True -> True) = True.
Proof. exact (@lem8184606 True). Qed.
Lemma lem8184608 (b' : Prop) : (term122 b') = True.
Proof. exact (TRANS (@lem8184604 b') (@lem8184607)). Qed.
Lemma lem8184609 (b' : Prop) : True = (term122 b').
Proof. exact (SYM (@lem8184608 b')). Qed.
Lemma lem8184610 (b' : Prop) : term122 b'.
Proof. exact (EQ_MP (@lem8184609 b') (@lem0)). Qed.
Lemma lem8184611 (b' : Prop) (a' : Prop) (h1 : a' = False) : term114 a' b'.
Proof. exact (EQ_MP (@lem8184571 b' a' h1) (@lem8184610 b')). Qed.
Lemma lem8184612 (b' : Prop) (a' : Prop) (h1 : a' = True) : term114 a' b'.
Proof. exact (EQ_MP (@lem8184558 b' a' h1) (@lem8184589 b')). Qed.
Lemma lem8184614 (a' : Prop) (b' : Prop) : term114 a' b'.
Proof. exact (or_elim (@lem8184537 a') (fun h0 : a' = True => @lem8184612 b' a' h0) (fun h0 : a' = False => @lem8184611 b' a' h0)). Qed.
Lemma lem8184615 (b : Prop) (a' : Prop) (b' : Prop) : term76 b a' b'.
Proof. exact (EQ_MP (@lem8184534 b a' b') (@lem8184614 a' b')). Qed.
Lemma lem8184616 (b : Prop) (a' : Prop) (b' : Prop) (a : Prop) (h1 : a = False) : term73 a b a' b'.
Proof. exact (EQ_MP (@lem8184332 b a' b' a h1) (@lem8184615 b a' b')). Qed.
Lemma lem8184617 (b : Prop) (a' : Prop) (b' : Prop) (a : Prop) (h1 : a = True) : term73 a b a' b'.
Proof. exact (EQ_MP (@lem8184319 b a' b' a h1) (@lem8184482 b a' b')). Qed.
Lemma lem8184620 (a : Prop) (b : Prop) (a' : Prop) (b' : Prop) : term73 a b a' b'.
Proof. exact (or_elim (@lem8184284 a) (fun h0 : a = True => @lem8184617 b a' b' a h0) (fun h0 : a = False => @lem8184616 b a' b' a h0)). Qed.
Lemma lem8184621 (a : Prop) (b : Prop) (a' : Prop) (b' : Prop) (h1 : term73 a b a' b') : term73 a b a' b'.
Proof. exact (h1). Qed.
Lemma lem8184622 (a : Prop) (a' : Prop) (b : Prop) (b' : Prop) (h1 : term127 a a' b b') : term127 a a' b b'.
Proof. exact (h1). Qed.
Lemma lem8184623 (a : Prop) (b : Prop) (a' : Prop) (b' : Prop) (h1 : term127 a a' b b') (h2 : term73 a b a' b') : (a /\ b) = (a' /\ b').
Proof. exact (@lem8184621 a b a' b' h2 (@lem8184622 a a' b b' h1)). Qed.
Lemma lem8184624 (a : Prop) (a' : Prop) (b : Prop) (b' : Prop) (h1 : term127 a a' b b') : term128 a b a' b'.
Proof. exact (fun h0 : term73 a b a' b' => @lem8184623 a b a' b' h1 h0). Qed.
Lemma lem8184625 (a : Prop) (b : Prop) (a' : Prop) (b' : Prop) (h1 : term73 a b a' b') : term73 a b a' b'.
Proof. exact (h1). Qed.
Lemma lem8184626 (a : Prop) (b : Prop) (a' : Prop) (b' : Prop) (h1 : term127 a a' b b') (h2 : term73 a b a' b') : (a /\ b) = (a' /\ b').
Proof. exact (@lem8184624 a a' b b' h1 (@lem8184625 a b a' b' h2)). Qed.
Lemma lem8184627 (a : Prop) (b : Prop) (a' : Prop) (b' : Prop) (h1 : term73 a b a' b') : term73 a b a' b'.
Proof. exact (fun h0 : term127 a a' b b' => @lem8184626 a b a' b' h0 h1). Qed.
Lemma lem8184628 (a : Prop) (b : Prop) (a' : Prop) (b' : Prop) : term129 a b a' b'.
Proof. exact (fun h0 : term73 a b a' b' => @lem8184627 a b a' b' h0). Qed.
Lemma lem8184630 {A : Type'} (a : A) : term130 A a.
Proof. exact (@lem44156 A a). Qed.
Lemma lem8184631 {A : Type'} (a : A) : (term130 A a) = (term131 A a).
Proof. exact (eq_refl (term130 A a)). Qed.
Lemma lem8184632 {A : Type'} (a : A) : term131 A a.
Proof. exact (EQ_MP (@lem8184631 A a) (@lem8184630 A a)). Qed.
Lemma lem8184633 {A : Type'} (a : A) (b : A) : term132 A a b.
Proof. exact (@lem8184632 A a b). Qed.
Lemma lem8184634 {A : Type'} (a : A) (b : A) : (term132 A a b) = ((@GEQ A a b) = (a = b)).
Proof. exact (eq_refl (term132 A a b)). Qed.
Lemma lem8184639 {_143449 _143452 _143456 _143457 _143462 : Type'} (p : type800 _143452 _143456 _143462) : term133 _143449 _143452 _143456 _143457 _143462 p.
Proof. exact (@lem8093231 _143449 _143452 _143456 _143457 _143462 p). Qed.
Lemma lem8184640 {_143449 _143452 _143456 _143457 _143462 : Type'} (p : type800 _143452 _143456 _143462) : (term133 _143449 _143452 _143456 _143457 _143462 p) = (term134 _143449 _143452 _143456 _143457 _143462 p).
Proof. exact (eq_refl (term133 _143449 _143452 _143456 _143457 _143462 p)). Qed.
Lemma lem8184641 {_143449 _143452 _143456 _143457 _143462 : Type'} (p : type800 _143452 _143456 _143462) : term134 _143449 _143452 _143456 _143457 _143462 p.
Proof. exact (EQ_MP (@lem8184640 _143449 _143452 _143456 _143457 _143462 p) (@lem8184639 _143449 _143452 _143456 _143457 _143462 p)). Qed.
Lemma lem8184642 {_143449 _143452 _143456 _143457 _143462 : Type'} (p : type800 _143452 _143456 _143462) (lt2 : type1470 _143449 _143456) : term135 _143449 _143452 _143456 _143457 _143462 p lt2.
Proof. exact (@lem8184641 _143449 _143452 _143456 _143457 _143462 p lt2). Qed.
Lemma lem8184643 {_143449 _143452 _143456 _143457 _143462 : Type'} (p : type800 _143452 _143456 _143462) (lt2 : type1470 _143449 _143456) : (term135 _143449 _143452 _143456 _143457 _143462 p lt2) = (term136 _143449 _143452 _143456 _143457 _143462 p lt2).
Proof. exact (eq_refl (term135 _143449 _143452 _143456 _143457 _143462 p lt2)). Qed.
Lemma lem8184644 {_143449 _143452 _143456 _143457 _143462 : Type'} (p : type800 _143452 _143456 _143462) (lt2 : type1470 _143449 _143456) : term136 _143449 _143452 _143456 _143457 _143462 p lt2.
Proof. exact (EQ_MP (@lem8184643 _143449 _143452 _143456 _143457 _143462 p lt2) (@lem8184642 _143449 _143452 _143456 _143457 _143462 p lt2)). Qed.
Lemma lem8184645 {_143449 _143452 _143456 _143457 _143462 : Type'} (p : type800 _143452 _143456 _143462) (lt2 : type1470 _143449 _143456) (s : _143462 -> _143449) : term137 _143449 _143452 _143456 _143457 _143462 p lt2 s.
Proof. exact (@lem8184644 _143449 _143452 _143456 _143457 _143462 p lt2 s). Qed.
Lemma lem8184646 {_143449 _143452 _143456 _143457 _143462 : Type'} (p : type800 _143452 _143456 _143462) (lt2 : type1470 _143449 _143456) (s : _143462 -> _143449) : (term137 _143449 _143452 _143456 _143457 _143462 p lt2 s) = (term138 _143449 _143452 _143456 _143457 _143462 p lt2 s).
Proof. exact (eq_refl (term137 _143449 _143452 _143456 _143457 _143462 p lt2 s)). Qed.
Lemma lem8184647 {_143449 _143452 _143456 _143457 _143462 : Type'} (p : type800 _143452 _143456 _143462) (lt2 : type1470 _143449 _143456) (s : _143462 -> _143449) : term138 _143449 _143452 _143456 _143457 _143462 p lt2 s.
Proof. exact (EQ_MP (@lem8184646 _143449 _143452 _143456 _143457 _143462 p lt2 s) (@lem8184645 _143449 _143452 _143456 _143457 _143462 p lt2 s)). Qed.
Lemma lem8184648 {_143449 _143452 _143456 _143457 _143462 : Type'} (p : type800 _143452 _143456 _143462) (lt2 : type1470 _143449 _143456) (s : _143462 -> _143449) (t : type801 _143452 _143456 _143457 _143462) : term139 _143449 _143452 _143456 _143457 _143462 p lt2 s t.
Proof. exact (@lem8184647 _143449 _143452 _143456 _143457 _143462 p lt2 s t). Qed.
Lemma lem8184649 {_143449 _143452 _143456 _143457 _143462 : Type'} (p : type800 _143452 _143456 _143462) (lt2 : type1470 _143449 _143456) (s : _143462 -> _143449) (t : type801 _143452 _143456 _143457 _143462) : (term139 _143449 _143452 _143456 _143457 _143462 p lt2 s t) = ((@admissible _143449 _143452 _143456 _143457 _143462 lt2 p s t) = (term140 _143449 _143452 _143456 _143457 _143462 p lt2 s t)).
Proof. exact (eq_refl (term139 _143449 _143452 _143456 _143457 _143462 p lt2 s t)). Qed.
Lemma lem8184656 {_143449 _143452 _143456 _143457 _143462 : Type'} (p : type800 _143452 _143456 _143462) (lt2 : type1470 _143449 _143456) (s : _143462 -> _143449) (t : type801 _143452 _143456 _143457 _143462) : (@admissible _143449 _143452 _143456 _143457 _143462 lt2 p s t) = (term140 _143449 _143452 _143456 _143457 _143462 p lt2 s t).
Proof. exact (EQ_MP (@lem8184649 _143449 _143452 _143456 _143457 _143462 p lt2 s t) (@lem8184648 _143449 _143452 _143456 _143457 _143462 p lt2 s t)). Qed.
Lemma lem8184657 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (t : type564 _144530 _144607 _144645 P) : (@admissible _144529 _144607 _144530 _144645 P lt2 p s t) = (term141 _144529 _144530 _144607 _144645 P p lt2 s t).
Proof. exact (@lem8184656 _144529 _144607 _144530 _144645 P p lt2 s t). Qed.
Lemma lem8184658 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) : (@admissible _144529 _144607 _144530 _144645 P lt2 p s pat) = (term141 _144529 _144530 _144607 _144645 P p lt2 s pat).
Proof. exact (@lem8184657 _144529 _144530 _144607 _144645 P p lt2 s pat). Qed.
Lemma lem8184695 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8184696 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) : (term142 _144529 _144530 _144607 _144645 P lt2 p s pat) = (term143 _144529 _144530 _144607 _144645 P p lt2 s pat).
Proof. exact (MK_COMB (@lem8184695) (@lem8184658 _144529 _144530 _144607 _144645 P p lt2 s pat)). Qed.
Lemma lem8184700 {_143449 _143452 _143456 _143457 _143462 : Type'} (p : type800 _143452 _143456 _143462) (lt2 : type1470 _143449 _143456) (s : _143462 -> _143449) (t : type801 _143452 _143456 _143457 _143462) : (@admissible _143449 _143452 _143456 _143457 _143462 lt2 p s t) = (term140 _143449 _143452 _143456 _143457 _143462 p lt2 s t).
Proof. exact (EQ_MP (@lem8184649 _143449 _143452 _143456 _143457 _143462 p lt2 s t) (@lem8184648 _143449 _143452 _143456 _143457 _143462 p lt2 s t)). Qed.
Lemma lem8184701 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (t : type564 _144530 _144607 _144645 P) : (@admissible _144529 _144607 _144530 _144645 P lt2 p s t) = (term141 _144529 _144530 _144607 _144645 P p lt2 s t).
Proof. exact (@lem8184700 _144529 _144607 _144530 _144645 P p lt2 s t). Qed.
Lemma lem8184702 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (e : type564 _144530 _144607 _144645 P) : (@admissible _144529 _144607 _144530 _144645 P lt2 p s e) = (term141 _144529 _144530 _144607 _144645 P p lt2 s e).
Proof. exact (@lem8184701 _144529 _144530 _144607 _144645 P p lt2 s e). Qed.
Lemma lem8184739 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8184740 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (e : type564 _144530 _144607 _144645 P) : (term142 _144529 _144530 _144607 _144645 P lt2 p s e) = (term143 _144529 _144530 _144607 _144645 P p lt2 s e).
Proof. exact (MK_COMB (@lem8184739) (@lem8184702 _144529 _144530 _144607 _144645 P p lt2 s e)). Qed.
Lemma lem8184744 {_143449 _143452 _143456 _143457 _143462 : Type'} (p : type800 _143452 _143456 _143462) (lt2 : type1470 _143449 _143456) (s : _143462 -> _143449) (t : type801 _143452 _143456 _143457 _143462) : (@admissible _143449 _143452 _143456 _143457 _143462 lt2 p s t) = (term140 _143449 _143452 _143456 _143457 _143462 p lt2 s t).
Proof. exact (EQ_MP (@lem8184649 _143449 _143452 _143456 _143457 _143462 p lt2 s t) (@lem8184648 _143449 _143452 _143456 _143457 _143462 p lt2 s t)). Qed.
Lemma lem8184745 {_144529 _144530 _144607 _144654 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (t : type564 _144530 _144607 _144654 P) : (@admissible _144529 _144607 _144530 _144654 P lt2 p s t) = (term141 _144529 _144530 _144607 _144654 P p lt2 s t).
Proof. exact (@lem8184744 _144529 _144607 _144530 _144654 P p lt2 s t). Qed.
Lemma lem8184746 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (t : type564 _144530 _144607 _144654 P) : (term144 _144529 _144530 _144607 _144645 _144654 P lt2 p pat e q s t) = (term145 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t).
Proof. exact (@lem8184745 _144529 _144530 _144607 _144654 P (term146 _144530 _144607 _144645 P p pat e q) lt2 s t). Qed.
Lemma lem8184770 {A B : Type'} (f : A -> B) (y : A) : (term147 A B f y) = (f y).
Proof. exact (EQ_MP (@lem1810 A B f y) (@lem1809 A B f y)). Qed.
Lemma lem8184771 {_144530 _144607 P : Type'} (f : type560 _144530 _144607 P) (y : _144530 -> _144607) : (term148 _144530 _144607 P f y) = (f y).
Proof. exact (@lem8184770 (_144530 -> _144607) (P -> Prop) f y). Qed.
Lemma lem8184772 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (f : _144530 -> _144607) : (term149 _144530 _144607 _144645 P p pat e q f) = (term150 _144530 _144607 _144645 P p pat e q f).
Proof. exact (@lem8184771 _144530 _144607 P (term146 _144530 _144607 _144645 P p pat e q) f). Qed.
Lemma lem8184773 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (f : _144530 -> _144607) : (term150 _144530 _144607 _144645 P p pat e q f) = (term151 _144530 _144607 _144645 P p pat e q f).
Proof. exact (eq_refl (term150 _144530 _144607 _144645 P p pat e q f)). Qed.
Lemma lem8184774 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) : (term152 _144530 _144607 _144645 P p pat e q) = (term146 _144530 _144607 _144645 P p pat e q).
Proof. exact (fun_ext (fun f : _144530 -> _144607 => @lem8184773 _144530 _144607 _144645 P p pat e q f)). Qed.
Lemma lem8184775 {_144530 _144607 : Type'} (f : _144530 -> _144607) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem8184776 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (f : _144530 -> _144607) : (term149 _144530 _144607 _144645 P p pat e q f) = (term150 _144530 _144607 _144645 P p pat e q f).
Proof. exact (MK_COMB (@lem8184774 _144530 _144607 _144645 P p pat e q) (@lem8184775 _144530 _144607 f)). Qed.
Lemma lem8184777 {P : Type'} : (@eq (P -> Prop)) = (@eq (P -> Prop)).
Proof. exact (eq_refl (@eq (P -> Prop))). Qed.
Lemma lem8184778 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (f : _144530 -> _144607) : (term153 _144530 _144607 _144645 P p pat e q f) = (term154 _144530 _144607 _144645 P p pat e q f).
Proof. exact (MK_COMB (@lem8184777 P) (@lem8184776 _144530 _144607 _144645 P p pat e q f)). Qed.
Lemma lem8184779 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (f : _144530 -> _144607) : (term150 _144530 _144607 _144645 P p pat e q f) = (term151 _144530 _144607 _144645 P p pat e q f).
Proof. exact (eq_refl (term150 _144530 _144607 _144645 P p pat e q f)). Qed.
Lemma lem8184780 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (f : _144530 -> _144607) : ((term149 _144530 _144607 _144645 P p pat e q f) = (term150 _144530 _144607 _144645 P p pat e q f)) = ((term150 _144530 _144607 _144645 P p pat e q f) = (term151 _144530 _144607 _144645 P p pat e q f)).
Proof. exact (MK_COMB (@lem8184778 _144530 _144607 _144645 P p pat e q f) (@lem8184779 _144530 _144607 _144645 P p pat e q f)). Qed.
Lemma lem8184781 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (f : _144530 -> _144607) : (term150 _144530 _144607 _144645 P p pat e q f) = (term151 _144530 _144607 _144645 P p pat e q f).
Proof. exact (EQ_MP (@lem8184780 _144530 _144607 _144645 P p pat e q f) (@lem8184772 _144530 _144607 _144645 P p pat e q f)). Qed.
Lemma lem8184788 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8184789 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) : (term155 _144530 _144607 _144645 P p pat e q f a) = (term156 _144530 _144607 _144645 P p pat e q f a).
Proof. exact (MK_COMB (@lem8184781 _144530 _144607 _144645 P p pat e q f) (@lem8184788 P a)). Qed.
Lemma lem8184791 {A B : Type'} (f : A -> B) (y : A) : (term147 A B f y) = (f y).
Proof. exact (EQ_MP (@lem1810 A B f y) (@lem1809 A B f y)). Qed.
Lemma lem8184792 {P : Type'} (f : P -> Prop) (y : P) : (term157 P f y) = (f y).
Proof. exact (@lem8184791 P Prop f y). Qed.
Lemma lem8184793 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) : (term158 _144530 _144607 _144645 P p pat e q f a) = (term156 _144530 _144607 _144645 P p pat e q f a).
Proof. exact (@lem8184792 P (term151 _144530 _144607 _144645 P p pat e q f) a). Qed.
Lemma lem8184794 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (f : _144530 -> _144607) (x : P) : (term156 _144530 _144607 _144645 P p pat e q f x) = (term159 _144530 _144607 _144645 P p pat e q f x).
Proof. exact (eq_refl (term156 _144530 _144607 _144645 P p pat e q f x)). Qed.
Lemma lem8184795 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (f : _144530 -> _144607) : (term160 _144530 _144607 _144645 P p pat e q f) = (term151 _144530 _144607 _144645 P p pat e q f).
Proof. exact (fun_ext (fun x : P => @lem8184794 _144530 _144607 _144645 P p pat e q f x)). Qed.
Lemma lem8184796 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8184797 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) : (term158 _144530 _144607 _144645 P p pat e q f a) = (term156 _144530 _144607 _144645 P p pat e q f a).
Proof. exact (MK_COMB (@lem8184795 _144530 _144607 _144645 P p pat e q f) (@lem8184796 P a)). Qed.
Lemma lem8184798 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8184799 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) : (term161 _144530 _144607 _144645 P p pat e q f a) = (term162 _144530 _144607 _144645 P p pat e q f a).
Proof. exact (MK_COMB (@lem8184798) (@lem8184797 _144530 _144607 _144645 P p pat e q f a)). Qed.
Lemma lem8184800 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) : (term156 _144530 _144607 _144645 P p pat e q f a) = (term159 _144530 _144607 _144645 P p pat e q f a).
Proof. exact (eq_refl (term156 _144530 _144607 _144645 P p pat e q f a)). Qed.
Lemma lem8184801 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) : ((term158 _144530 _144607 _144645 P p pat e q f a) = (term156 _144530 _144607 _144645 P p pat e q f a)) = ((term156 _144530 _144607 _144645 P p pat e q f a) = (term159 _144530 _144607 _144645 P p pat e q f a)).
Proof. exact (MK_COMB (@lem8184799 _144530 _144607 _144645 P p pat e q f a) (@lem8184800 _144530 _144607 _144645 P p pat e q f a)). Qed.
Lemma lem8184802 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) : (term156 _144530 _144607 _144645 P p pat e q f a) = (term159 _144530 _144607 _144645 P p pat e q f a).
Proof. exact (EQ_MP (@lem8184801 _144530 _144607 _144645 P p pat e q f a) (@lem8184793 _144530 _144607 _144645 P p pat e q f a)). Qed.
Lemma lem8184809 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) : (term155 _144530 _144607 _144645 P p pat e q f a) = (term159 _144530 _144607 _144645 P p pat e q f a).
Proof. exact (TRANS (@lem8184789 _144530 _144607 _144645 P p pat e q f a) (@lem8184802 _144530 _144607 _144645 P p pat e q f a)). Qed.
Lemma lem8184810 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8184811 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) : (term163 _144530 _144607 _144645 P p pat e q f a) = (term164 _144530 _144607 _144645 P p pat e q f a).
Proof. exact (MK_COMB (@lem8184810) (@lem8184809 _144530 _144607 _144645 P p pat e q f a)). Qed.
Lemma lem8184815 {A B : Type'} (f : A -> B) (y : A) : (term147 A B f y) = (f y).
Proof. exact (EQ_MP (@lem1810 A B f y) (@lem1809 A B f y)). Qed.
Lemma lem8184816 {_144530 _144607 P : Type'} (f : type560 _144530 _144607 P) (y : _144530 -> _144607) : (term148 _144530 _144607 P f y) = (f y).
Proof. exact (@lem8184815 (_144530 -> _144607) (P -> Prop) f y). Qed.
Lemma lem8184817 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) : (term149 _144530 _144607 _144645 P p pat e q g) = (term150 _144530 _144607 _144645 P p pat e q g).
Proof. exact (@lem8184816 _144530 _144607 P (term146 _144530 _144607 _144645 P p pat e q) g). Qed.
Lemma lem8184818 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (f : _144530 -> _144607) : (term150 _144530 _144607 _144645 P p pat e q f) = (term151 _144530 _144607 _144645 P p pat e q f).
Proof. exact (eq_refl (term150 _144530 _144607 _144645 P p pat e q f)). Qed.
Lemma lem8184819 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) : (term152 _144530 _144607 _144645 P p pat e q) = (term146 _144530 _144607 _144645 P p pat e q).
Proof. exact (fun_ext (fun f : _144530 -> _144607 => @lem8184818 _144530 _144607 _144645 P p pat e q f)). Qed.
Lemma lem8184820 {_144530 _144607 : Type'} (g : _144530 -> _144607) : g = g.
Proof. exact (eq_refl g). Qed.
Lemma lem8184821 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) : (term149 _144530 _144607 _144645 P p pat e q g) = (term150 _144530 _144607 _144645 P p pat e q g).
Proof. exact (MK_COMB (@lem8184819 _144530 _144607 _144645 P p pat e q) (@lem8184820 _144530 _144607 g)). Qed.
Lemma lem8184822 {P : Type'} : (@eq (P -> Prop)) = (@eq (P -> Prop)).
Proof. exact (eq_refl (@eq (P -> Prop))). Qed.
Lemma lem8184823 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) : (term153 _144530 _144607 _144645 P p pat e q g) = (term154 _144530 _144607 _144645 P p pat e q g).
Proof. exact (MK_COMB (@lem8184822 P) (@lem8184821 _144530 _144607 _144645 P p pat e q g)). Qed.
Lemma lem8184824 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) : (term150 _144530 _144607 _144645 P p pat e q g) = (term151 _144530 _144607 _144645 P p pat e q g).
Proof. exact (eq_refl (term150 _144530 _144607 _144645 P p pat e q g)). Qed.
Lemma lem8184825 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) : ((term149 _144530 _144607 _144645 P p pat e q g) = (term150 _144530 _144607 _144645 P p pat e q g)) = ((term150 _144530 _144607 _144645 P p pat e q g) = (term151 _144530 _144607 _144645 P p pat e q g)).
Proof. exact (MK_COMB (@lem8184823 _144530 _144607 _144645 P p pat e q g) (@lem8184824 _144530 _144607 _144645 P p pat e q g)). Qed.
Lemma lem8184826 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) : (term150 _144530 _144607 _144645 P p pat e q g) = (term151 _144530 _144607 _144645 P p pat e q g).
Proof. exact (EQ_MP (@lem8184825 _144530 _144607 _144645 P p pat e q g) (@lem8184817 _144530 _144607 _144645 P p pat e q g)). Qed.
Lemma lem8184833 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8184834 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term155 _144530 _144607 _144645 P p pat e q g a) = (term156 _144530 _144607 _144645 P p pat e q g a).
Proof. exact (MK_COMB (@lem8184826 _144530 _144607 _144645 P p pat e q g) (@lem8184833 P a)). Qed.
Lemma lem8184836 {A B : Type'} (f : A -> B) (y : A) : (term147 A B f y) = (f y).
Proof. exact (EQ_MP (@lem1810 A B f y) (@lem1809 A B f y)). Qed.
Lemma lem8184837 {P : Type'} (f : P -> Prop) (y : P) : (term157 P f y) = (f y).
Proof. exact (@lem8184836 P Prop f y). Qed.
Lemma lem8184838 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term158 _144530 _144607 _144645 P p pat e q g a) = (term156 _144530 _144607 _144645 P p pat e q g a).
Proof. exact (@lem8184837 P (term151 _144530 _144607 _144645 P p pat e q g) a). Qed.
Lemma lem8184839 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (x : P) : (term156 _144530 _144607 _144645 P p pat e q g x) = (term159 _144530 _144607 _144645 P p pat e q g x).
Proof. exact (eq_refl (term156 _144530 _144607 _144645 P p pat e q g x)). Qed.
Lemma lem8184840 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) : (term160 _144530 _144607 _144645 P p pat e q g) = (term151 _144530 _144607 _144645 P p pat e q g).
Proof. exact (fun_ext (fun x : P => @lem8184839 _144530 _144607 _144645 P p pat e q g x)). Qed.
Lemma lem8184841 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8184842 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term158 _144530 _144607 _144645 P p pat e q g a) = (term156 _144530 _144607 _144645 P p pat e q g a).
Proof. exact (MK_COMB (@lem8184840 _144530 _144607 _144645 P p pat e q g) (@lem8184841 P a)). Qed.
Lemma lem8184843 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8184844 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term161 _144530 _144607 _144645 P p pat e q g a) = (term162 _144530 _144607 _144645 P p pat e q g a).
Proof. exact (MK_COMB (@lem8184843) (@lem8184842 _144530 _144607 _144645 P p pat e q g a)). Qed.
Lemma lem8184845 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term156 _144530 _144607 _144645 P p pat e q g a) = (term159 _144530 _144607 _144645 P p pat e q g a).
Proof. exact (eq_refl (term156 _144530 _144607 _144645 P p pat e q g a)). Qed.
Lemma lem8184846 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : ((term158 _144530 _144607 _144645 P p pat e q g a) = (term156 _144530 _144607 _144645 P p pat e q g a)) = ((term156 _144530 _144607 _144645 P p pat e q g a) = (term159 _144530 _144607 _144645 P p pat e q g a)).
Proof. exact (MK_COMB (@lem8184844 _144530 _144607 _144645 P p pat e q g a) (@lem8184845 _144530 _144607 _144645 P p pat e q g a)). Qed.
Lemma lem8184847 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term156 _144530 _144607 _144645 P p pat e q g a) = (term159 _144530 _144607 _144645 P p pat e q g a).
Proof. exact (EQ_MP (@lem8184846 _144530 _144607 _144645 P p pat e q g a) (@lem8184838 _144530 _144607 _144645 P p pat e q g a)). Qed.
Lemma lem8184854 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term155 _144530 _144607 _144645 P p pat e q g a) = (term159 _144530 _144607 _144645 P p pat e q g a).
Proof. exact (TRANS (@lem8184834 _144530 _144607 _144645 P p pat e q g a) (@lem8184847 _144530 _144607 _144645 P p pat e q g a)). Qed.
Lemma lem8184855 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8184856 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term163 _144530 _144607 _144645 P p pat e q g a) = (term164 _144530 _144607 _144645 P p pat e q g a).
Proof. exact (MK_COMB (@lem8184855) (@lem8184854 _144530 _144607 _144645 P p pat e q g a)). Qed.
Lemma lem8184867 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term165 _144529 _144530 _144607 P lt2 s a f g) = (term165 _144529 _144530 _144607 P lt2 s a f g).
Proof. exact (eq_refl (term165 _144529 _144530 _144607 P lt2 s a f g)). Qed.
Lemma lem8184868 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term166 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) = (term167 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g).
Proof. exact (MK_COMB (@lem8184856 _144530 _144607 _144645 P p pat e q g a) (@lem8184867 _144529 _144530 _144607 P lt2 s a f g)). Qed.
Lemma lem8184871 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term168 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) = (term169 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g).
Proof. exact (MK_COMB (@lem8184811 _144530 _144607 _144645 P p pat e q f a) (@lem8184868 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g)). Qed.
Lemma lem8184874 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8184875 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term170 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) = (term171 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g).
Proof. exact (MK_COMB (@lem8184874) (@lem8184871 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g)). Qed.
Lemma lem8184878 {_144530 _144607 _144654 P : Type'} (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : ((t f a) = (t g a)) = ((t f a) = (t g a)).
Proof. exact (eq_refl ((t f a) = (t g a))). Qed.
Lemma lem8184879 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (term172 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g a) = (term173 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g a).
Proof. exact (MK_COMB (@lem8184875 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) (@lem8184878 _144530 _144607 _144654 P f t g a)). Qed.
Lemma lem8184882 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) : (term174 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g) = (term175 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g).
Proof. exact (fun_ext (fun a : P => @lem8184879 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g a)). Qed.
Lemma lem8184883 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8184884 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) : (term176 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g) = (term177 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g).
Proof. exact (MK_COMB (@lem8184883 P) (@lem8184882 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g)). Qed.
Lemma lem8184891 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) : (term178 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t) = (term179 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t).
Proof. exact (fun_ext (fun g : _144530 -> _144607 => @lem8184884 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g)). Qed.
Lemma lem8184892 {_144530 _144607 : Type'} : (@all (_144530 -> _144607)) = (@all (_144530 -> _144607)).
Proof. exact (eq_refl (@all (_144530 -> _144607))). Qed.
Lemma lem8184893 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) : (term180 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t) = (term181 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t).
Proof. exact (MK_COMB (@lem8184892 _144530 _144607) (@lem8184891 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t)). Qed.
Lemma lem8184900 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (t : type564 _144530 _144607 _144654 P) : (term182 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) = (term183 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t).
Proof. exact (fun_ext (fun f : _144530 -> _144607 => @lem8184893 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t)). Qed.
Lemma lem8184901 {_144530 _144607 : Type'} : (@all (_144530 -> _144607)) = (@all (_144530 -> _144607)).
Proof. exact (eq_refl (@all (_144530 -> _144607))). Qed.
Lemma lem8184902 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (t : type564 _144530 _144607 _144654 P) : (term145 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) = (term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t).
Proof. exact (MK_COMB (@lem8184901 _144530 _144607) (@lem8184900 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t)). Qed.
Lemma lem8184909 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (t : type564 _144530 _144607 _144654 P) : (term144 _144529 _144530 _144607 _144645 _144654 P lt2 p pat e q s t) = (term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t).
Proof. exact (TRANS (@lem8184746 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) (@lem8184902 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t)). Qed.
Lemma lem8184910 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8184911 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (t : type564 _144530 _144607 _144654 P) : (term185 _144529 _144530 _144607 _144645 _144654 P lt2 p pat e q s t) = (term186 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t).
Proof. exact (MK_COMB (@lem8184910) (@lem8184909 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t)). Qed.
Lemma lem8184915 {_143449 _143452 _143456 _143457 _143462 : Type'} (p : type800 _143452 _143456 _143462) (lt2 : type1470 _143449 _143456) (s : _143462 -> _143449) (t : type801 _143452 _143456 _143457 _143462) : (@admissible _143449 _143452 _143456 _143457 _143462 lt2 p s t) = (term140 _143449 _143452 _143456 _143457 _143462 p lt2 s t).
Proof. exact (EQ_MP (@lem8184649 _143449 _143452 _143456 _143457 _143462 p lt2 s t) (@lem8184648 _143449 _143452 _143456 _143457 _143462 p lt2 s t)). Qed.
Lemma lem8184916 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (t : type560 _144530 _144607 P) : (@admissible _144529 _144607 _144530 Prop P lt2 p s t) = (term187 _144529 _144530 _144607 P p lt2 s t).
Proof. exact (@lem8184915 _144529 _144607 _144530 Prop P p lt2 s t). Qed.
Lemma lem8184917 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (q : type560 _144530 _144607 P) : (term188 _144529 _144530 _144607 _144645 P lt2 p pat e s q) = (term189 _144529 _144530 _144607 _144645 P p pat e lt2 s q).
Proof. exact (@lem8184916 _144529 _144530 _144607 P (term190 _144530 _144607 _144645 P p pat e) lt2 s q). Qed.
Lemma lem8184941 {A B : Type'} (f : A -> B) (y : A) : (term147 A B f y) = (f y).
Proof. exact (EQ_MP (@lem1810 A B f y) (@lem1809 A B f y)). Qed.
Lemma lem8184942 {_144530 _144607 P : Type'} (f : type560 _144530 _144607 P) (y : _144530 -> _144607) : (term148 _144530 _144607 P f y) = (f y).
Proof. exact (@lem8184941 (_144530 -> _144607) (P -> Prop) f y). Qed.
Lemma lem8184943 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) : (term191 _144530 _144607 _144645 P p pat e f) = (term192 _144530 _144607 _144645 P p pat e f).
Proof. exact (@lem8184942 _144530 _144607 P (term190 _144530 _144607 _144645 P p pat e) f). Qed.
Lemma lem8184944 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) : (term192 _144530 _144607 _144645 P p pat e f) = (term193 _144530 _144607 _144645 P p pat e f).
Proof. exact (eq_refl (term192 _144530 _144607 _144645 P p pat e f)). Qed.
Lemma lem8184945 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) : (term194 _144530 _144607 _144645 P p pat e) = (term190 _144530 _144607 _144645 P p pat e).
Proof. exact (fun_ext (fun f : _144530 -> _144607 => @lem8184944 _144530 _144607 _144645 P p pat e f)). Qed.
Lemma lem8184946 {_144530 _144607 : Type'} (f : _144530 -> _144607) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem8184947 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) : (term191 _144530 _144607 _144645 P p pat e f) = (term192 _144530 _144607 _144645 P p pat e f).
Proof. exact (MK_COMB (@lem8184945 _144530 _144607 _144645 P p pat e) (@lem8184946 _144530 _144607 f)). Qed.
Lemma lem8184948 {P : Type'} : (@eq (P -> Prop)) = (@eq (P -> Prop)).
Proof. exact (eq_refl (@eq (P -> Prop))). Qed.
Lemma lem8184949 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) : (term195 _144530 _144607 _144645 P p pat e f) = (term196 _144530 _144607 _144645 P p pat e f).
Proof. exact (MK_COMB (@lem8184948 P) (@lem8184947 _144530 _144607 _144645 P p pat e f)). Qed.
Lemma lem8184950 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) : (term192 _144530 _144607 _144645 P p pat e f) = (term193 _144530 _144607 _144645 P p pat e f).
Proof. exact (eq_refl (term192 _144530 _144607 _144645 P p pat e f)). Qed.
Lemma lem8184951 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) : ((term191 _144530 _144607 _144645 P p pat e f) = (term192 _144530 _144607 _144645 P p pat e f)) = ((term192 _144530 _144607 _144645 P p pat e f) = (term193 _144530 _144607 _144645 P p pat e f)).
Proof. exact (MK_COMB (@lem8184949 _144530 _144607 _144645 P p pat e f) (@lem8184950 _144530 _144607 _144645 P p pat e f)). Qed.
Lemma lem8184952 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) : (term192 _144530 _144607 _144645 P p pat e f) = (term193 _144530 _144607 _144645 P p pat e f).
Proof. exact (EQ_MP (@lem8184951 _144530 _144607 _144645 P p pat e f) (@lem8184943 _144530 _144607 _144645 P p pat e f)). Qed.
Lemma lem8184957 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8184958 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (a : P) : (term197 _144530 _144607 _144645 P p pat e f a) = (term198 _144530 _144607 _144645 P p pat e f a).
Proof. exact (MK_COMB (@lem8184952 _144530 _144607 _144645 P p pat e f) (@lem8184957 P a)). Qed.
Lemma lem8184960 {A B : Type'} (f : A -> B) (y : A) : (term147 A B f y) = (f y).
Proof. exact (EQ_MP (@lem1810 A B f y) (@lem1809 A B f y)). Qed.
Lemma lem8184961 {P : Type'} (f : P -> Prop) (y : P) : (term157 P f y) = (f y).
Proof. exact (@lem8184960 P Prop f y). Qed.
Lemma lem8184962 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (a : P) : (term199 _144530 _144607 _144645 P p pat e f a) = (term198 _144530 _144607 _144645 P p pat e f a).
Proof. exact (@lem8184961 P (term193 _144530 _144607 _144645 P p pat e f) a). Qed.
Lemma lem8184963 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (x : P) : (term198 _144530 _144607 _144645 P p pat e f x) = (term200 _144530 _144607 _144645 P p pat e f x).
Proof. exact (eq_refl (term198 _144530 _144607 _144645 P p pat e f x)). Qed.
Lemma lem8184964 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) : (term201 _144530 _144607 _144645 P p pat e f) = (term193 _144530 _144607 _144645 P p pat e f).
Proof. exact (fun_ext (fun x : P => @lem8184963 _144530 _144607 _144645 P p pat e f x)). Qed.
Lemma lem8184965 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8184966 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (a : P) : (term199 _144530 _144607 _144645 P p pat e f a) = (term198 _144530 _144607 _144645 P p pat e f a).
Proof. exact (MK_COMB (@lem8184964 _144530 _144607 _144645 P p pat e f) (@lem8184965 P a)). Qed.
Lemma lem8184967 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8184968 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (a : P) : (term202 _144530 _144607 _144645 P p pat e f a) = (term203 _144530 _144607 _144645 P p pat e f a).
Proof. exact (MK_COMB (@lem8184967) (@lem8184966 _144530 _144607 _144645 P p pat e f a)). Qed.
Lemma lem8184969 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (a : P) : (term198 _144530 _144607 _144645 P p pat e f a) = (term200 _144530 _144607 _144645 P p pat e f a).
Proof. exact (eq_refl (term198 _144530 _144607 _144645 P p pat e f a)). Qed.
Lemma lem8184970 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (a : P) : ((term199 _144530 _144607 _144645 P p pat e f a) = (term198 _144530 _144607 _144645 P p pat e f a)) = ((term198 _144530 _144607 _144645 P p pat e f a) = (term200 _144530 _144607 _144645 P p pat e f a)).
Proof. exact (MK_COMB (@lem8184968 _144530 _144607 _144645 P p pat e f a) (@lem8184969 _144530 _144607 _144645 P p pat e f a)). Qed.
Lemma lem8184971 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (a : P) : (term198 _144530 _144607 _144645 P p pat e f a) = (term200 _144530 _144607 _144645 P p pat e f a).
Proof. exact (EQ_MP (@lem8184970 _144530 _144607 _144645 P p pat e f a) (@lem8184962 _144530 _144607 _144645 P p pat e f a)). Qed.
Lemma lem8184976 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (a : P) : (term197 _144530 _144607 _144645 P p pat e f a) = (term200 _144530 _144607 _144645 P p pat e f a).
Proof. exact (TRANS (@lem8184958 _144530 _144607 _144645 P p pat e f a) (@lem8184971 _144530 _144607 _144645 P p pat e f a)). Qed.
Lemma lem8184977 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8184978 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (a : P) : (term204 _144530 _144607 _144645 P p pat e f a) = (term205 _144530 _144607 _144645 P p pat e f a).
Proof. exact (MK_COMB (@lem8184977) (@lem8184976 _144530 _144607 _144645 P p pat e f a)). Qed.
Lemma lem8184982 {A B : Type'} (f : A -> B) (y : A) : (term147 A B f y) = (f y).
Proof. exact (EQ_MP (@lem1810 A B f y) (@lem1809 A B f y)). Qed.
Lemma lem8184983 {_144530 _144607 P : Type'} (f : type560 _144530 _144607 P) (y : _144530 -> _144607) : (term148 _144530 _144607 P f y) = (f y).
Proof. exact (@lem8184982 (_144530 -> _144607) (P -> Prop) f y). Qed.
Lemma lem8184984 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) : (term191 _144530 _144607 _144645 P p pat e g) = (term192 _144530 _144607 _144645 P p pat e g).
Proof. exact (@lem8184983 _144530 _144607 P (term190 _144530 _144607 _144645 P p pat e) g). Qed.
Lemma lem8184985 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) : (term192 _144530 _144607 _144645 P p pat e f) = (term193 _144530 _144607 _144645 P p pat e f).
Proof. exact (eq_refl (term192 _144530 _144607 _144645 P p pat e f)). Qed.
Lemma lem8184986 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) : (term194 _144530 _144607 _144645 P p pat e) = (term190 _144530 _144607 _144645 P p pat e).
Proof. exact (fun_ext (fun f : _144530 -> _144607 => @lem8184985 _144530 _144607 _144645 P p pat e f)). Qed.
Lemma lem8184987 {_144530 _144607 : Type'} (g : _144530 -> _144607) : g = g.
Proof. exact (eq_refl g). Qed.
Lemma lem8184988 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) : (term191 _144530 _144607 _144645 P p pat e g) = (term192 _144530 _144607 _144645 P p pat e g).
Proof. exact (MK_COMB (@lem8184986 _144530 _144607 _144645 P p pat e) (@lem8184987 _144530 _144607 g)). Qed.
Lemma lem8184989 {P : Type'} : (@eq (P -> Prop)) = (@eq (P -> Prop)).
Proof. exact (eq_refl (@eq (P -> Prop))). Qed.
Lemma lem8184990 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) : (term195 _144530 _144607 _144645 P p pat e g) = (term196 _144530 _144607 _144645 P p pat e g).
Proof. exact (MK_COMB (@lem8184989 P) (@lem8184988 _144530 _144607 _144645 P p pat e g)). Qed.
Lemma lem8184991 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) : (term192 _144530 _144607 _144645 P p pat e g) = (term193 _144530 _144607 _144645 P p pat e g).
Proof. exact (eq_refl (term192 _144530 _144607 _144645 P p pat e g)). Qed.
Lemma lem8184992 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) : ((term191 _144530 _144607 _144645 P p pat e g) = (term192 _144530 _144607 _144645 P p pat e g)) = ((term192 _144530 _144607 _144645 P p pat e g) = (term193 _144530 _144607 _144645 P p pat e g)).
Proof. exact (MK_COMB (@lem8184990 _144530 _144607 _144645 P p pat e g) (@lem8184991 _144530 _144607 _144645 P p pat e g)). Qed.
Lemma lem8184993 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) : (term192 _144530 _144607 _144645 P p pat e g) = (term193 _144530 _144607 _144645 P p pat e g).
Proof. exact (EQ_MP (@lem8184992 _144530 _144607 _144645 P p pat e g) (@lem8184984 _144530 _144607 _144645 P p pat e g)). Qed.
Lemma lem8184998 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8184999 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term197 _144530 _144607 _144645 P p pat e g a) = (term198 _144530 _144607 _144645 P p pat e g a).
Proof. exact (MK_COMB (@lem8184993 _144530 _144607 _144645 P p pat e g) (@lem8184998 P a)). Qed.
Lemma lem8185001 {A B : Type'} (f : A -> B) (y : A) : (term147 A B f y) = (f y).
Proof. exact (EQ_MP (@lem1810 A B f y) (@lem1809 A B f y)). Qed.
Lemma lem8185002 {P : Type'} (f : P -> Prop) (y : P) : (term157 P f y) = (f y).
Proof. exact (@lem8185001 P Prop f y). Qed.
Lemma lem8185003 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term199 _144530 _144607 _144645 P p pat e g a) = (term198 _144530 _144607 _144645 P p pat e g a).
Proof. exact (@lem8185002 P (term193 _144530 _144607 _144645 P p pat e g) a). Qed.
Lemma lem8185004 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (x : P) : (term198 _144530 _144607 _144645 P p pat e g x) = (term200 _144530 _144607 _144645 P p pat e g x).
Proof. exact (eq_refl (term198 _144530 _144607 _144645 P p pat e g x)). Qed.
Lemma lem8185005 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) : (term201 _144530 _144607 _144645 P p pat e g) = (term193 _144530 _144607 _144645 P p pat e g).
Proof. exact (fun_ext (fun x : P => @lem8185004 _144530 _144607 _144645 P p pat e g x)). Qed.
Lemma lem8185006 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8185007 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term199 _144530 _144607 _144645 P p pat e g a) = (term198 _144530 _144607 _144645 P p pat e g a).
Proof. exact (MK_COMB (@lem8185005 _144530 _144607 _144645 P p pat e g) (@lem8185006 P a)). Qed.
Lemma lem8185008 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8185009 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term202 _144530 _144607 _144645 P p pat e g a) = (term203 _144530 _144607 _144645 P p pat e g a).
Proof. exact (MK_COMB (@lem8185008) (@lem8185007 _144530 _144607 _144645 P p pat e g a)). Qed.
Lemma lem8185010 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term198 _144530 _144607 _144645 P p pat e g a) = (term200 _144530 _144607 _144645 P p pat e g a).
Proof. exact (eq_refl (term198 _144530 _144607 _144645 P p pat e g a)). Qed.
Lemma lem8185011 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : ((term199 _144530 _144607 _144645 P p pat e g a) = (term198 _144530 _144607 _144645 P p pat e g a)) = ((term198 _144530 _144607 _144645 P p pat e g a) = (term200 _144530 _144607 _144645 P p pat e g a)).
Proof. exact (MK_COMB (@lem8185009 _144530 _144607 _144645 P p pat e g a) (@lem8185010 _144530 _144607 _144645 P p pat e g a)). Qed.
Lemma lem8185012 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term198 _144530 _144607 _144645 P p pat e g a) = (term200 _144530 _144607 _144645 P p pat e g a).
Proof. exact (EQ_MP (@lem8185011 _144530 _144607 _144645 P p pat e g a) (@lem8185003 _144530 _144607 _144645 P p pat e g a)). Qed.
Lemma lem8185017 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term197 _144530 _144607 _144645 P p pat e g a) = (term200 _144530 _144607 _144645 P p pat e g a).
Proof. exact (TRANS (@lem8184999 _144530 _144607 _144645 P p pat e g a) (@lem8185012 _144530 _144607 _144645 P p pat e g a)). Qed.
Lemma lem8185018 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8185019 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term204 _144530 _144607 _144645 P p pat e g a) = (term205 _144530 _144607 _144645 P p pat e g a).
Proof. exact (MK_COMB (@lem8185018) (@lem8185017 _144530 _144607 _144645 P p pat e g a)). Qed.
Lemma lem8185030 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term165 _144529 _144530 _144607 P lt2 s a f g) = (term165 _144529 _144530 _144607 P lt2 s a f g).
Proof. exact (eq_refl (term165 _144529 _144530 _144607 P lt2 s a f g)). Qed.
Lemma lem8185031 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term206 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g) = (term207 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g).
Proof. exact (MK_COMB (@lem8185019 _144530 _144607 _144645 P p pat e g a) (@lem8185030 _144529 _144530 _144607 P lt2 s a f g)). Qed.
Lemma lem8185034 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term208 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g) = (term209 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g).
Proof. exact (MK_COMB (@lem8184978 _144530 _144607 _144645 P p pat e f a) (@lem8185031 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g)). Qed.
Lemma lem8185037 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8185038 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term210 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g) = (term211 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g).
Proof. exact (MK_COMB (@lem8185037) (@lem8185034 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g)). Qed.
Lemma lem8185041 {_144530 _144607 P : Type'} (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : ((q f a) = (q g a)) = ((q f a) = (q g a)).
Proof. exact (eq_refl ((q f a) = (q g a))). Qed.
Lemma lem8185042 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term212 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g a) = (term213 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g a).
Proof. exact (MK_COMB (@lem8185038 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g) (@lem8185041 _144530 _144607 P f q g a)). Qed.
Lemma lem8185045 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) : (term214 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g) = (term215 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g).
Proof. exact (fun_ext (fun a : P => @lem8185042 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g a)). Qed.
Lemma lem8185046 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8185047 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) : (term216 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g) = (term217 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g).
Proof. exact (MK_COMB (@lem8185046 P) (@lem8185045 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g)). Qed.
Lemma lem8185054 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) : (term218 _144529 _144530 _144607 _144645 P p pat e lt2 s f q) = (term219 _144529 _144530 _144607 _144645 P p pat e lt2 s f q).
Proof. exact (fun_ext (fun g : _144530 -> _144607 => @lem8185047 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g)). Qed.
Lemma lem8185055 {_144530 _144607 : Type'} : (@all (_144530 -> _144607)) = (@all (_144530 -> _144607)).
Proof. exact (eq_refl (@all (_144530 -> _144607))). Qed.
Lemma lem8185056 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) : (term220 _144529 _144530 _144607 _144645 P p pat e lt2 s f q) = (term221 _144529 _144530 _144607 _144645 P p pat e lt2 s f q).
Proof. exact (MK_COMB (@lem8185055 _144530 _144607) (@lem8185054 _144529 _144530 _144607 _144645 P p pat e lt2 s f q)). Qed.
Lemma lem8185063 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (q : type560 _144530 _144607 P) : (term222 _144529 _144530 _144607 _144645 P p pat e lt2 s q) = (term223 _144529 _144530 _144607 _144645 P p pat e lt2 s q).
Proof. exact (fun_ext (fun f : _144530 -> _144607 => @lem8185056 _144529 _144530 _144607 _144645 P p pat e lt2 s f q)). Qed.
Lemma lem8185064 {_144530 _144607 : Type'} : (@all (_144530 -> _144607)) = (@all (_144530 -> _144607)).
Proof. exact (eq_refl (@all (_144530 -> _144607))). Qed.
Lemma lem8185065 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (q : type560 _144530 _144607 P) : (term189 _144529 _144530 _144607 _144645 P p pat e lt2 s q) = (term224 _144529 _144530 _144607 _144645 P p pat e lt2 s q).
Proof. exact (MK_COMB (@lem8185064 _144530 _144607) (@lem8185063 _144529 _144530 _144607 _144645 P p pat e lt2 s q)). Qed.
Lemma lem8185072 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (q : type560 _144530 _144607 P) : (term188 _144529 _144530 _144607 _144645 P lt2 p pat e s q) = (term224 _144529 _144530 _144607 _144645 P p pat e lt2 s q).
Proof. exact (TRANS (@lem8184917 _144529 _144530 _144607 _144645 P p pat e lt2 s q) (@lem8185065 _144529 _144530 _144607 _144645 P p pat e lt2 s q)). Qed.
Lemma lem8185073 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8185074 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (q : type560 _144530 _144607 P) : (term225 _144529 _144530 _144607 _144645 P lt2 p pat e s q) = (term226 _144529 _144530 _144607 _144645 P p pat e lt2 s q).
Proof. exact (MK_COMB (@lem8185073) (@lem8185072 _144529 _144530 _144607 _144645 P p pat e lt2 s q)). Qed.
Lemma lem8185076 {_143449 _143452 _143456 _143457 _143462 : Type'} (p : type800 _143452 _143456 _143462) (lt2 : type1470 _143449 _143456) (s : _143462 -> _143449) (t : type801 _143452 _143456 _143457 _143462) : (@admissible _143449 _143452 _143456 _143457 _143462 lt2 p s t) = (term140 _143449 _143452 _143456 _143457 _143462 p lt2 s t).
Proof. exact (EQ_MP (@lem8184649 _143449 _143452 _143456 _143457 _143462 p lt2 s t) (@lem8184648 _143449 _143452 _143456 _143457 _143462 p lt2 s t)). Qed.
Lemma lem8185077 {_144529 _144530 _144607 _144654 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (t : type564 _144530 _144607 _144654 P) : (@admissible _144529 _144607 _144530 _144654 P lt2 p s t) = (term141 _144529 _144530 _144607 _144654 P p lt2 s t).
Proof. exact (@lem8185076 _144529 _144607 _144530 _144654 P p lt2 s t). Qed.
Lemma lem8185078 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (y : type564 _144530 _144607 _144654 P) : (term144 _144529 _144530 _144607 _144645 _144654 P lt2 p pat e q s y) = (term145 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y).
Proof. exact (@lem8185077 _144529 _144530 _144607 _144654 P (term146 _144530 _144607 _144645 P p pat e q) lt2 s y). Qed.
Lemma lem8185102 {A B : Type'} (f : A -> B) (y : A) : (term147 A B f y) = (f y).
Proof. exact (EQ_MP (@lem1810 A B f y) (@lem1809 A B f y)). Qed.
Lemma lem8185103 {_144530 _144607 P : Type'} (f : type560 _144530 _144607 P) (y : _144530 -> _144607) : (term148 _144530 _144607 P f y) = (f y).
Proof. exact (@lem8185102 (_144530 -> _144607) (P -> Prop) f y). Qed.
Lemma lem8185104 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (f : _144530 -> _144607) : (term149 _144530 _144607 _144645 P p pat e q f) = (term150 _144530 _144607 _144645 P p pat e q f).
Proof. exact (@lem8185103 _144530 _144607 P (term146 _144530 _144607 _144645 P p pat e q) f). Qed.
Lemma lem8185105 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (f : _144530 -> _144607) : (term150 _144530 _144607 _144645 P p pat e q f) = (term151 _144530 _144607 _144645 P p pat e q f).
Proof. exact (eq_refl (term150 _144530 _144607 _144645 P p pat e q f)). Qed.
Lemma lem8185106 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) : (term152 _144530 _144607 _144645 P p pat e q) = (term146 _144530 _144607 _144645 P p pat e q).
Proof. exact (fun_ext (fun f : _144530 -> _144607 => @lem8185105 _144530 _144607 _144645 P p pat e q f)). Qed.
Lemma lem8185107 {_144530 _144607 : Type'} (f : _144530 -> _144607) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem8185108 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (f : _144530 -> _144607) : (term149 _144530 _144607 _144645 P p pat e q f) = (term150 _144530 _144607 _144645 P p pat e q f).
Proof. exact (MK_COMB (@lem8185106 _144530 _144607 _144645 P p pat e q) (@lem8185107 _144530 _144607 f)). Qed.
Lemma lem8185109 {P : Type'} : (@eq (P -> Prop)) = (@eq (P -> Prop)).
Proof. exact (eq_refl (@eq (P -> Prop))). Qed.
Lemma lem8185110 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (f : _144530 -> _144607) : (term153 _144530 _144607 _144645 P p pat e q f) = (term154 _144530 _144607 _144645 P p pat e q f).
Proof. exact (MK_COMB (@lem8185109 P) (@lem8185108 _144530 _144607 _144645 P p pat e q f)). Qed.
Lemma lem8185111 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (f : _144530 -> _144607) : (term150 _144530 _144607 _144645 P p pat e q f) = (term151 _144530 _144607 _144645 P p pat e q f).
Proof. exact (eq_refl (term150 _144530 _144607 _144645 P p pat e q f)). Qed.
Lemma lem8185112 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (f : _144530 -> _144607) : ((term149 _144530 _144607 _144645 P p pat e q f) = (term150 _144530 _144607 _144645 P p pat e q f)) = ((term150 _144530 _144607 _144645 P p pat e q f) = (term151 _144530 _144607 _144645 P p pat e q f)).
Proof. exact (MK_COMB (@lem8185110 _144530 _144607 _144645 P p pat e q f) (@lem8185111 _144530 _144607 _144645 P p pat e q f)). Qed.
Lemma lem8185113 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (f : _144530 -> _144607) : (term150 _144530 _144607 _144645 P p pat e q f) = (term151 _144530 _144607 _144645 P p pat e q f).
Proof. exact (EQ_MP (@lem8185112 _144530 _144607 _144645 P p pat e q f) (@lem8185104 _144530 _144607 _144645 P p pat e q f)). Qed.
Lemma lem8185120 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8185121 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) : (term155 _144530 _144607 _144645 P p pat e q f a) = (term156 _144530 _144607 _144645 P p pat e q f a).
Proof. exact (MK_COMB (@lem8185113 _144530 _144607 _144645 P p pat e q f) (@lem8185120 P a)). Qed.
Lemma lem8185123 {A B : Type'} (f : A -> B) (y : A) : (term147 A B f y) = (f y).
Proof. exact (EQ_MP (@lem1810 A B f y) (@lem1809 A B f y)). Qed.
Lemma lem8185124 {P : Type'} (f : P -> Prop) (y : P) : (term157 P f y) = (f y).
Proof. exact (@lem8185123 P Prop f y). Qed.
Lemma lem8185125 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) : (term158 _144530 _144607 _144645 P p pat e q f a) = (term156 _144530 _144607 _144645 P p pat e q f a).
Proof. exact (@lem8185124 P (term151 _144530 _144607 _144645 P p pat e q f) a). Qed.
Lemma lem8185126 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (f : _144530 -> _144607) (x : P) : (term156 _144530 _144607 _144645 P p pat e q f x) = (term159 _144530 _144607 _144645 P p pat e q f x).
Proof. exact (eq_refl (term156 _144530 _144607 _144645 P p pat e q f x)). Qed.
Lemma lem8185127 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (f : _144530 -> _144607) : (term160 _144530 _144607 _144645 P p pat e q f) = (term151 _144530 _144607 _144645 P p pat e q f).
Proof. exact (fun_ext (fun x : P => @lem8185126 _144530 _144607 _144645 P p pat e q f x)). Qed.
Lemma lem8185128 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8185129 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) : (term158 _144530 _144607 _144645 P p pat e q f a) = (term156 _144530 _144607 _144645 P p pat e q f a).
Proof. exact (MK_COMB (@lem8185127 _144530 _144607 _144645 P p pat e q f) (@lem8185128 P a)). Qed.
Lemma lem8185130 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8185131 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) : (term161 _144530 _144607 _144645 P p pat e q f a) = (term162 _144530 _144607 _144645 P p pat e q f a).
Proof. exact (MK_COMB (@lem8185130) (@lem8185129 _144530 _144607 _144645 P p pat e q f a)). Qed.
Lemma lem8185132 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) : (term156 _144530 _144607 _144645 P p pat e q f a) = (term159 _144530 _144607 _144645 P p pat e q f a).
Proof. exact (eq_refl (term156 _144530 _144607 _144645 P p pat e q f a)). Qed.
Lemma lem8185133 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) : ((term158 _144530 _144607 _144645 P p pat e q f a) = (term156 _144530 _144607 _144645 P p pat e q f a)) = ((term156 _144530 _144607 _144645 P p pat e q f a) = (term159 _144530 _144607 _144645 P p pat e q f a)).
Proof. exact (MK_COMB (@lem8185131 _144530 _144607 _144645 P p pat e q f a) (@lem8185132 _144530 _144607 _144645 P p pat e q f a)). Qed.
Lemma lem8185134 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) : (term156 _144530 _144607 _144645 P p pat e q f a) = (term159 _144530 _144607 _144645 P p pat e q f a).
Proof. exact (EQ_MP (@lem8185133 _144530 _144607 _144645 P p pat e q f a) (@lem8185125 _144530 _144607 _144645 P p pat e q f a)). Qed.
Lemma lem8185141 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) : (term155 _144530 _144607 _144645 P p pat e q f a) = (term159 _144530 _144607 _144645 P p pat e q f a).
Proof. exact (TRANS (@lem8185121 _144530 _144607 _144645 P p pat e q f a) (@lem8185134 _144530 _144607 _144645 P p pat e q f a)). Qed.
Lemma lem8185142 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8185143 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) : (term163 _144530 _144607 _144645 P p pat e q f a) = (term164 _144530 _144607 _144645 P p pat e q f a).
Proof. exact (MK_COMB (@lem8185142) (@lem8185141 _144530 _144607 _144645 P p pat e q f a)). Qed.
Lemma lem8185147 {A B : Type'} (f : A -> B) (y : A) : (term147 A B f y) = (f y).
Proof. exact (EQ_MP (@lem1810 A B f y) (@lem1809 A B f y)). Qed.
Lemma lem8185148 {_144530 _144607 P : Type'} (f : type560 _144530 _144607 P) (y : _144530 -> _144607) : (term148 _144530 _144607 P f y) = (f y).
Proof. exact (@lem8185147 (_144530 -> _144607) (P -> Prop) f y). Qed.
Lemma lem8185149 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) : (term149 _144530 _144607 _144645 P p pat e q g) = (term150 _144530 _144607 _144645 P p pat e q g).
Proof. exact (@lem8185148 _144530 _144607 P (term146 _144530 _144607 _144645 P p pat e q) g). Qed.
Lemma lem8185150 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (f : _144530 -> _144607) : (term150 _144530 _144607 _144645 P p pat e q f) = (term151 _144530 _144607 _144645 P p pat e q f).
Proof. exact (eq_refl (term150 _144530 _144607 _144645 P p pat e q f)). Qed.
Lemma lem8185151 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) : (term152 _144530 _144607 _144645 P p pat e q) = (term146 _144530 _144607 _144645 P p pat e q).
Proof. exact (fun_ext (fun f : _144530 -> _144607 => @lem8185150 _144530 _144607 _144645 P p pat e q f)). Qed.
Lemma lem8185152 {_144530 _144607 : Type'} (g : _144530 -> _144607) : g = g.
Proof. exact (eq_refl g). Qed.
Lemma lem8185153 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) : (term149 _144530 _144607 _144645 P p pat e q g) = (term150 _144530 _144607 _144645 P p pat e q g).
Proof. exact (MK_COMB (@lem8185151 _144530 _144607 _144645 P p pat e q) (@lem8185152 _144530 _144607 g)). Qed.
Lemma lem8185154 {P : Type'} : (@eq (P -> Prop)) = (@eq (P -> Prop)).
Proof. exact (eq_refl (@eq (P -> Prop))). Qed.
Lemma lem8185155 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) : (term153 _144530 _144607 _144645 P p pat e q g) = (term154 _144530 _144607 _144645 P p pat e q g).
Proof. exact (MK_COMB (@lem8185154 P) (@lem8185153 _144530 _144607 _144645 P p pat e q g)). Qed.
Lemma lem8185156 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) : (term150 _144530 _144607 _144645 P p pat e q g) = (term151 _144530 _144607 _144645 P p pat e q g).
Proof. exact (eq_refl (term150 _144530 _144607 _144645 P p pat e q g)). Qed.
Lemma lem8185157 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) : ((term149 _144530 _144607 _144645 P p pat e q g) = (term150 _144530 _144607 _144645 P p pat e q g)) = ((term150 _144530 _144607 _144645 P p pat e q g) = (term151 _144530 _144607 _144645 P p pat e q g)).
Proof. exact (MK_COMB (@lem8185155 _144530 _144607 _144645 P p pat e q g) (@lem8185156 _144530 _144607 _144645 P p pat e q g)). Qed.
Lemma lem8185158 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) : (term150 _144530 _144607 _144645 P p pat e q g) = (term151 _144530 _144607 _144645 P p pat e q g).
Proof. exact (EQ_MP (@lem8185157 _144530 _144607 _144645 P p pat e q g) (@lem8185149 _144530 _144607 _144645 P p pat e q g)). Qed.
Lemma lem8185165 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8185166 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term155 _144530 _144607 _144645 P p pat e q g a) = (term156 _144530 _144607 _144645 P p pat e q g a).
Proof. exact (MK_COMB (@lem8185158 _144530 _144607 _144645 P p pat e q g) (@lem8185165 P a)). Qed.
Lemma lem8185168 {A B : Type'} (f : A -> B) (y : A) : (term147 A B f y) = (f y).
Proof. exact (EQ_MP (@lem1810 A B f y) (@lem1809 A B f y)). Qed.
Lemma lem8185169 {P : Type'} (f : P -> Prop) (y : P) : (term157 P f y) = (f y).
Proof. exact (@lem8185168 P Prop f y). Qed.
Lemma lem8185170 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term158 _144530 _144607 _144645 P p pat e q g a) = (term156 _144530 _144607 _144645 P p pat e q g a).
Proof. exact (@lem8185169 P (term151 _144530 _144607 _144645 P p pat e q g) a). Qed.
Lemma lem8185171 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (x : P) : (term156 _144530 _144607 _144645 P p pat e q g x) = (term159 _144530 _144607 _144645 P p pat e q g x).
Proof. exact (eq_refl (term156 _144530 _144607 _144645 P p pat e q g x)). Qed.
Lemma lem8185172 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) : (term160 _144530 _144607 _144645 P p pat e q g) = (term151 _144530 _144607 _144645 P p pat e q g).
Proof. exact (fun_ext (fun x : P => @lem8185171 _144530 _144607 _144645 P p pat e q g x)). Qed.
Lemma lem8185173 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8185174 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term158 _144530 _144607 _144645 P p pat e q g a) = (term156 _144530 _144607 _144645 P p pat e q g a).
Proof. exact (MK_COMB (@lem8185172 _144530 _144607 _144645 P p pat e q g) (@lem8185173 P a)). Qed.
Lemma lem8185175 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8185176 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term161 _144530 _144607 _144645 P p pat e q g a) = (term162 _144530 _144607 _144645 P p pat e q g a).
Proof. exact (MK_COMB (@lem8185175) (@lem8185174 _144530 _144607 _144645 P p pat e q g a)). Qed.
Lemma lem8185177 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term156 _144530 _144607 _144645 P p pat e q g a) = (term159 _144530 _144607 _144645 P p pat e q g a).
Proof. exact (eq_refl (term156 _144530 _144607 _144645 P p pat e q g a)). Qed.
Lemma lem8185178 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : ((term158 _144530 _144607 _144645 P p pat e q g a) = (term156 _144530 _144607 _144645 P p pat e q g a)) = ((term156 _144530 _144607 _144645 P p pat e q g a) = (term159 _144530 _144607 _144645 P p pat e q g a)).
Proof. exact (MK_COMB (@lem8185176 _144530 _144607 _144645 P p pat e q g a) (@lem8185177 _144530 _144607 _144645 P p pat e q g a)). Qed.
Lemma lem8185179 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term156 _144530 _144607 _144645 P p pat e q g a) = (term159 _144530 _144607 _144645 P p pat e q g a).
Proof. exact (EQ_MP (@lem8185178 _144530 _144607 _144645 P p pat e q g a) (@lem8185170 _144530 _144607 _144645 P p pat e q g a)). Qed.
Lemma lem8185186 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term155 _144530 _144607 _144645 P p pat e q g a) = (term159 _144530 _144607 _144645 P p pat e q g a).
Proof. exact (TRANS (@lem8185166 _144530 _144607 _144645 P p pat e q g a) (@lem8185179 _144530 _144607 _144645 P p pat e q g a)). Qed.
Lemma lem8185187 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8185188 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term163 _144530 _144607 _144645 P p pat e q g a) = (term164 _144530 _144607 _144645 P p pat e q g a).
Proof. exact (MK_COMB (@lem8185187) (@lem8185186 _144530 _144607 _144645 P p pat e q g a)). Qed.
Lemma lem8185199 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term165 _144529 _144530 _144607 P lt2 s a f g) = (term165 _144529 _144530 _144607 P lt2 s a f g).
Proof. exact (eq_refl (term165 _144529 _144530 _144607 P lt2 s a f g)). Qed.
Lemma lem8185200 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term166 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) = (term167 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g).
Proof. exact (MK_COMB (@lem8185188 _144530 _144607 _144645 P p pat e q g a) (@lem8185199 _144529 _144530 _144607 P lt2 s a f g)). Qed.
Lemma lem8185203 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term168 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) = (term169 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g).
Proof. exact (MK_COMB (@lem8185143 _144530 _144607 _144645 P p pat e q f a) (@lem8185200 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g)). Qed.
Lemma lem8185206 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8185207 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term170 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) = (term171 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g).
Proof. exact (MK_COMB (@lem8185206) (@lem8185203 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g)). Qed.
Lemma lem8185210 {_144530 _144607 _144654 P : Type'} (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : ((y f a) = (y g a)) = ((y f a) = (y g a)).
Proof. exact (eq_refl ((y f a) = (y g a))). Qed.
Lemma lem8185211 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (term172 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g a) = (term173 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g a).
Proof. exact (MK_COMB (@lem8185207 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) (@lem8185210 _144530 _144607 _144654 P f y g a)). Qed.
Lemma lem8185214 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) : (term174 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g) = (term175 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g).
Proof. exact (fun_ext (fun a : P => @lem8185211 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g a)). Qed.
Lemma lem8185215 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8185216 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) : (term176 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g) = (term177 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g).
Proof. exact (MK_COMB (@lem8185215 P) (@lem8185214 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g)). Qed.
Lemma lem8185223 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) : (term178 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y) = (term179 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y).
Proof. exact (fun_ext (fun g : _144530 -> _144607 => @lem8185216 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g)). Qed.
Lemma lem8185224 {_144530 _144607 : Type'} : (@all (_144530 -> _144607)) = (@all (_144530 -> _144607)).
Proof. exact (eq_refl (@all (_144530 -> _144607))). Qed.
Lemma lem8185225 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) : (term180 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y) = (term181 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y).
Proof. exact (MK_COMB (@lem8185224 _144530 _144607) (@lem8185223 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y)). Qed.
Lemma lem8185232 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (y : type564 _144530 _144607 _144654 P) : (term182 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y) = (term183 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y).
Proof. exact (fun_ext (fun f : _144530 -> _144607 => @lem8185225 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y)). Qed.
Lemma lem8185233 {_144530 _144607 : Type'} : (@all (_144530 -> _144607)) = (@all (_144530 -> _144607)).
Proof. exact (eq_refl (@all (_144530 -> _144607))). Qed.
Lemma lem8185234 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (y : type564 _144530 _144607 _144654 P) : (term145 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y) = (term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y).
Proof. exact (MK_COMB (@lem8185233 _144530 _144607) (@lem8185232 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y)). Qed.
Lemma lem8185241 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (y : type564 _144530 _144607 _144654 P) : (term144 _144529 _144530 _144607 _144645 _144654 P lt2 p pat e q s y) = (term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y).
Proof. exact (TRANS (@lem8185078 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y) (@lem8185234 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y)). Qed.
Lemma lem8185242 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (y : type564 _144530 _144607 _144654 P) : (term227 _144529 _144530 _144607 _144645 _144654 P lt2 p pat e q s y) = (term228 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y).
Proof. exact (MK_COMB (@lem8185074 _144529 _144530 _144607 _144645 P p pat e lt2 s q) (@lem8185241 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y)). Qed.
Lemma lem8185245 {_144529 _144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (y : type564 _144530 _144607 _144654 P) : (term229 _144529 _144530 _144607 _144645 _144654 P t lt2 p pat e q s y) = (term230 _144529 _144530 _144607 _144645 _144654 P t p pat e q lt2 s y).
Proof. exact (MK_COMB (@lem8184911 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) (@lem8185242 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y)). Qed.
Lemma lem8185248 {_144529 _144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (y : type564 _144530 _144607 _144654 P) : (term231 _144529 _144530 _144607 _144645 _144654 P t lt2 p pat e q s y) = (term232 _144529 _144530 _144607 _144645 _144654 P t p pat e q lt2 s y).
Proof. exact (MK_COMB (@lem8184740 _144529 _144530 _144607 _144645 P p lt2 s e) (@lem8185245 _144529 _144530 _144607 _144645 _144654 P t p pat e q lt2 s y)). Qed.
Lemma lem8185251 {_144529 _144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (y : type564 _144530 _144607 _144654 P) : (term233 _144529 _144530 _144607 _144645 _144654 P t lt2 p pat e q s y) = (term234 _144529 _144530 _144607 _144645 _144654 P t p pat e q lt2 s y).
Proof. exact (MK_COMB (@lem8184696 _144529 _144530 _144607 _144645 P p lt2 s pat) (@lem8185248 _144529 _144530 _144607 _144645 _144654 P t p pat e q lt2 s y)). Qed.
Lemma lem8185254 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8185255 {_144529 _144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (y : type564 _144530 _144607 _144654 P) : (term235 _144529 _144530 _144607 _144645 _144654 P t lt2 p pat e q s y) = (term236 _144529 _144530 _144607 _144645 _144654 P t p pat e q lt2 s y).
Proof. exact (MK_COMB (@lem8185254) (@lem8185251 _144529 _144530 _144607 _144645 _144654 P t p pat e q lt2 s y)). Qed.
Lemma lem8185257 {_143449 _143452 _143456 _143457 _143462 : Type'} (p : type800 _143452 _143456 _143462) (lt2 : type1470 _143449 _143456) (s : _143462 -> _143449) (t : type801 _143452 _143456 _143457 _143462) : (@admissible _143449 _143452 _143456 _143457 _143462 lt2 p s t) = (term140 _143449 _143452 _143456 _143457 _143462 p lt2 s t).
Proof. exact (EQ_MP (@lem8184649 _143449 _143452 _143456 _143457 _143462 p lt2 s t) (@lem8184648 _143449 _143452 _143456 _143457 _143462 p lt2 s t)). Qed.
Lemma lem8185258 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (t : type560 _144530 _144607 P) : (@admissible _144529 _144607 _144530 Prop P lt2 p s t) = (term187 _144529 _144530 _144607 P p lt2 s t).
Proof. exact (@lem8185257 _144529 _144607 _144530 Prop P p lt2 s t). Qed.
Lemma lem8185259 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) : (term237 _144529 _144530 _144607 _144645 _144654 P lt2 p s pat e q t y) = (term238 _144529 _144530 _144607 _144645 _144654 P p lt2 s pat e q t y).
Proof. exact (@lem8185258 _144529 _144530 _144607 P p lt2 s (term239 _144530 _144607 _144645 _144654 P pat e q t y)). Qed.
Lemma lem8185297 {A B : Type'} (f : A -> B) (y : A) : (term147 A B f y) = (f y).
Proof. exact (EQ_MP (@lem1810 A B f y) (@lem1809 A B f y)). Qed.
Lemma lem8185298 {_144530 _144607 P : Type'} (f : type560 _144530 _144607 P) (y : _144530 -> _144607) : (term148 _144530 _144607 P f y) = (f y).
Proof. exact (@lem8185297 (_144530 -> _144607) (P -> Prop) f y). Qed.
Lemma lem8185299 {_144530 _144607 _144645 _144654 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (f : _144530 -> _144607) : (term240 _144530 _144607 _144645 _144654 P pat e q t y f) = (term241 _144530 _144607 _144645 _144654 P pat e q t y f).
Proof. exact (@lem8185298 _144530 _144607 P (term239 _144530 _144607 _144645 _144654 P pat e q t y) f). Qed.
Lemma lem8185300 {_144530 _144607 _144645 _144654 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (f : _144530 -> _144607) : (term241 _144530 _144607 _144645 _144654 P pat e q t y f) = (term242 _144530 _144607 _144645 _144654 P pat e q t y f).
Proof. exact (eq_refl (term241 _144530 _144607 _144645 _144654 P pat e q t y f)). Qed.
Lemma lem8185301 {_144530 _144607 _144645 _144654 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) : (term243 _144530 _144607 _144645 _144654 P pat e q t y) = (term239 _144530 _144607 _144645 _144654 P pat e q t y).
Proof. exact (fun_ext (fun f : _144530 -> _144607 => @lem8185300 _144530 _144607 _144645 _144654 P pat e q t y f)). Qed.
Lemma lem8185302 {_144530 _144607 : Type'} (f : _144530 -> _144607) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem8185303 {_144530 _144607 _144645 _144654 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (f : _144530 -> _144607) : (term240 _144530 _144607 _144645 _144654 P pat e q t y f) = (term241 _144530 _144607 _144645 _144654 P pat e q t y f).
Proof. exact (MK_COMB (@lem8185301 _144530 _144607 _144645 _144654 P pat e q t y) (@lem8185302 _144530 _144607 f)). Qed.
Lemma lem8185304 {P : Type'} : (@eq (P -> Prop)) = (@eq (P -> Prop)).
Proof. exact (eq_refl (@eq (P -> Prop))). Qed.
Lemma lem8185305 {_144530 _144607 _144645 _144654 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (f : _144530 -> _144607) : (term244 _144530 _144607 _144645 _144654 P pat e q t y f) = (term245 _144530 _144607 _144645 _144654 P pat e q t y f).
Proof. exact (MK_COMB (@lem8185304 P) (@lem8185303 _144530 _144607 _144645 _144654 P pat e q t y f)). Qed.
Lemma lem8185306 {_144530 _144607 _144645 _144654 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (f : _144530 -> _144607) : (term241 _144530 _144607 _144645 _144654 P pat e q t y f) = (term242 _144530 _144607 _144645 _144654 P pat e q t y f).
Proof. exact (eq_refl (term241 _144530 _144607 _144645 _144654 P pat e q t y f)). Qed.
Lemma lem8185307 {_144530 _144607 _144645 _144654 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (f : _144530 -> _144607) : ((term240 _144530 _144607 _144645 _144654 P pat e q t y f) = (term241 _144530 _144607 _144645 _144654 P pat e q t y f)) = ((term241 _144530 _144607 _144645 _144654 P pat e q t y f) = (term242 _144530 _144607 _144645 _144654 P pat e q t y f)).
Proof. exact (MK_COMB (@lem8185305 _144530 _144607 _144645 _144654 P pat e q t y f) (@lem8185306 _144530 _144607 _144645 _144654 P pat e q t y f)). Qed.
Lemma lem8185308 {_144530 _144607 _144645 _144654 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (f : _144530 -> _144607) : (term241 _144530 _144607 _144645 _144654 P pat e q t y f) = (term242 _144530 _144607 _144645 _144654 P pat e q t y f).
Proof. exact (EQ_MP (@lem8185307 _144530 _144607 _144645 _144654 P pat e q t y f) (@lem8185299 _144530 _144607 _144645 _144654 P pat e q t y f)). Qed.
Lemma lem8185310 : _GUARDED_PATTERN = term246.
Proof. exact (@_GUARDED_PATTERN_def). Qed.
Lemma lem8185315 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (x : P) : (term247 _144530 _144607 _144645 P pat e f x) = (term247 _144530 _144607 _144645 P pat e f x).
Proof. exact (eq_refl (term247 _144530 _144607 _144645 P pat e f x)). Qed.
Lemma lem8185316 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (x : P) : (term248 _144530 _144607 _144645 P pat e f x) = (term249 _144530 _144607 _144645 P pat e f x).
Proof. exact (MK_COMB (@lem8185310) (@lem8185315 _144530 _144607 _144645 P pat e f x)). Qed.
Lemma lem8185318 {A B : Type'} (f : A -> B) (y : A) : (term147 A B f y) = (f y).
Proof. exact (EQ_MP (@lem1810 A B f y) (@lem1809 A B f y)). Qed.
Lemma lem8185319 (f : type1542) (y : Prop) : (term250 f y) = (f y).
Proof. exact (@lem8185318 Prop type1543 f y). Qed.
Lemma lem8185320 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (x : P) : (term251 _144530 _144607 _144645 P pat e f x) = (term249 _144530 _144607 _144645 P pat e f x).
Proof. exact (@lem8185319 term246 (term247 _144530 _144607 _144645 P pat e f x)). Qed.
Lemma lem8185321 (p : Prop) : (term252 p) = (term253 p).
Proof. exact (eq_refl (term252 p)). Qed.
Lemma lem8185322 : term254 = term246.
Proof. exact (fun_ext (fun p : Prop => @lem8185321 p)). Qed.
Lemma lem8185323 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (x : P) : (term247 _144530 _144607 _144645 P pat e f x) = (term247 _144530 _144607 _144645 P pat e f x).
Proof. exact (eq_refl (term247 _144530 _144607 _144645 P pat e f x)). Qed.
Lemma lem8185324 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (x : P) : (term251 _144530 _144607 _144645 P pat e f x) = (term249 _144530 _144607 _144645 P pat e f x).
Proof. exact (MK_COMB (@lem8185322) (@lem8185323 _144530 _144607 _144645 P pat e f x)). Qed.
Lemma lem8185325 : (@eq (Prop -> Prop -> Prop)) = (@eq (Prop -> Prop -> Prop)).
Proof. exact (eq_refl (@eq (Prop -> Prop -> Prop))). Qed.
Lemma lem8185326 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (x : P) : (term255 _144530 _144607 _144645 P pat e f x) = (term256 _144530 _144607 _144645 P pat e f x).
Proof. exact (MK_COMB (@lem8185325) (@lem8185324 _144530 _144607 _144645 P pat e f x)). Qed.
Lemma lem8185327 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (x : P) : (term249 _144530 _144607 _144645 P pat e f x) = (term257 _144530 _144607 _144645 P pat e f x).
Proof. exact (eq_refl (term249 _144530 _144607 _144645 P pat e f x)). Qed.
Lemma lem8185328 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (x : P) : ((term251 _144530 _144607 _144645 P pat e f x) = (term249 _144530 _144607 _144645 P pat e f x)) = ((term249 _144530 _144607 _144645 P pat e f x) = (term257 _144530 _144607 _144645 P pat e f x)).
Proof. exact (MK_COMB (@lem8185326 _144530 _144607 _144645 P pat e f x) (@lem8185327 _144530 _144607 _144645 P pat e f x)). Qed.
Lemma lem8185329 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (x : P) : (term249 _144530 _144607 _144645 P pat e f x) = (term257 _144530 _144607 _144645 P pat e f x).
Proof. exact (EQ_MP (@lem8185328 _144530 _144607 _144645 P pat e f x) (@lem8185320 _144530 _144607 _144645 P pat e f x)). Qed.
Lemma lem8185334 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (x : P) : (term248 _144530 _144607 _144645 P pat e f x) = (term257 _144530 _144607 _144645 P pat e f x).
Proof. exact (TRANS (@lem8185316 _144530 _144607 _144645 P pat e f x) (@lem8185329 _144530 _144607 _144645 P pat e f x)). Qed.
Lemma lem8185335 {_144530 _144607 P : Type'} (q : type560 _144530 _144607 P) (f : _144530 -> _144607) (x : P) : (q f x) = (q f x).
Proof. exact (eq_refl (q f x)). Qed.
Lemma lem8185336 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (f : _144530 -> _144607) (x : P) : (term258 _144530 _144607 _144645 P pat e q f x) = (term259 _144530 _144607 _144645 P pat e q f x).
Proof. exact (MK_COMB (@lem8185334 _144530 _144607 _144645 P pat e f x) (@lem8185335 _144530 _144607 P q f x)). Qed.
Lemma lem8185338 {A B : Type'} (f : A -> B) (y : A) : (term147 A B f y) = (f y).
Proof. exact (EQ_MP (@lem1810 A B f y) (@lem1809 A B f y)). Qed.
Lemma lem8185339 (f : type1543) (y : Prop) : (term260 f y) = (f y).
Proof. exact (@lem8185338 Prop (Prop -> Prop) f y). Qed.
Lemma lem8185340 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (f : _144530 -> _144607) (x : P) : (term261 _144530 _144607 _144645 P pat e q f x) = (term259 _144530 _144607 _144645 P pat e q f x).
Proof. exact (@lem8185339 (term257 _144530 _144607 _144645 P pat e f x) (q f x)). Qed.
Lemma lem8185341 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (x : P) (g : Prop) : (term262 _144530 _144607 _144645 P pat e f x g) = (term263 _144530 _144607 _144645 P pat e f x g).
Proof. exact (eq_refl (term262 _144530 _144607 _144645 P pat e f x g)). Qed.
Lemma lem8185342 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (x : P) : (term264 _144530 _144607 _144645 P pat e f x) = (term257 _144530 _144607 _144645 P pat e f x).
Proof. exact (fun_ext (fun g : Prop => @lem8185341 _144530 _144607 _144645 P pat e f x g)). Qed.
Lemma lem8185343 {_144530 _144607 P : Type'} (q : type560 _144530 _144607 P) (f : _144530 -> _144607) (x : P) : (q f x) = (q f x).
Proof. exact (eq_refl (q f x)). Qed.
Lemma lem8185344 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (f : _144530 -> _144607) (x : P) : (term261 _144530 _144607 _144645 P pat e q f x) = (term259 _144530 _144607 _144645 P pat e q f x).
Proof. exact (MK_COMB (@lem8185342 _144530 _144607 _144645 P pat e f x) (@lem8185343 _144530 _144607 P q f x)). Qed.
Lemma lem8185345 : (@eq (Prop -> Prop)) = (@eq (Prop -> Prop)).
Proof. exact (eq_refl (@eq (Prop -> Prop))). Qed.
Lemma lem8185346 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (f : _144530 -> _144607) (x : P) : (term265 _144530 _144607 _144645 P pat e q f x) = (term266 _144530 _144607 _144645 P pat e q f x).
Proof. exact (MK_COMB (@lem8185345) (@lem8185344 _144530 _144607 _144645 P pat e q f x)). Qed.
Lemma lem8185347 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (f : _144530 -> _144607) (x : P) : (term259 _144530 _144607 _144645 P pat e q f x) = (term267 _144530 _144607 _144645 P pat e q f x).
Proof. exact (eq_refl (term259 _144530 _144607 _144645 P pat e q f x)). Qed.
Lemma lem8185348 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (f : _144530 -> _144607) (x : P) : ((term261 _144530 _144607 _144645 P pat e q f x) = (term259 _144530 _144607 _144645 P pat e q f x)) = ((term259 _144530 _144607 _144645 P pat e q f x) = (term267 _144530 _144607 _144645 P pat e q f x)).
Proof. exact (MK_COMB (@lem8185346 _144530 _144607 _144645 P pat e q f x) (@lem8185347 _144530 _144607 _144645 P pat e q f x)). Qed.
Lemma lem8185349 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (f : _144530 -> _144607) (x : P) : (term259 _144530 _144607 _144645 P pat e q f x) = (term267 _144530 _144607 _144645 P pat e q f x).
Proof. exact (EQ_MP (@lem8185348 _144530 _144607 _144645 P pat e q f x) (@lem8185340 _144530 _144607 _144645 P pat e q f x)). Qed.
Lemma lem8185354 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (f : _144530 -> _144607) (x : P) : (term258 _144530 _144607 _144645 P pat e q f x) = (term267 _144530 _144607 _144645 P pat e q f x).
Proof. exact (TRANS (@lem8185336 _144530 _144607 _144645 P pat e q f x) (@lem8185349 _144530 _144607 _144645 P pat e q f x)). Qed.
Lemma lem8185355 {_144530 _144607 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (f : _144530 -> _144607) (x : P) : (term247 _144530 _144607 _144654 P t y f x) = (term247 _144530 _144607 _144654 P t y f x).
Proof. exact (eq_refl (term247 _144530 _144607 _144654 P t y f x)). Qed.
Lemma lem8185356 {_144530 _144607 _144645 _144654 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (f : _144530 -> _144607) (x : P) : (term268 _144530 _144607 _144645 _144654 P pat e q t y f x) = (term269 _144530 _144607 _144645 _144654 P pat e q t y f x).
Proof. exact (MK_COMB (@lem8185354 _144530 _144607 _144645 P pat e q f x) (@lem8185355 _144530 _144607 _144654 P t y f x)). Qed.
Lemma lem8185358 {A B : Type'} (f : A -> B) (y : A) : (term147 A B f y) = (f y).
Proof. exact (EQ_MP (@lem1810 A B f y) (@lem1809 A B f y)). Qed.
Lemma lem8185359 (f : Prop -> Prop) (y : Prop) : (term270 f y) = (f y).
Proof. exact (@lem8185358 Prop Prop f y). Qed.
Lemma lem8185360 {_144530 _144607 _144645 _144654 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (f : _144530 -> _144607) (x : P) : (term271 _144530 _144607 _144645 _144654 P pat e q t y f x) = (term269 _144530 _144607 _144645 _144654 P pat e q t y f x).
Proof. exact (@lem8185359 (term267 _144530 _144607 _144645 P pat e q f x) (term247 _144530 _144607 _144654 P t y f x)). Qed.
Lemma lem8185361 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (f : _144530 -> _144607) (x : P) (r : Prop) : (term272 _144530 _144607 _144645 P pat e q f x r) = (term273 _144530 _144607 _144645 P pat e q f x r).
Proof. exact (eq_refl (term272 _144530 _144607 _144645 P pat e q f x r)). Qed.
Lemma lem8185362 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (f : _144530 -> _144607) (x : P) : (term274 _144530 _144607 _144645 P pat e q f x) = (term267 _144530 _144607 _144645 P pat e q f x).
Proof. exact (fun_ext (fun r : Prop => @lem8185361 _144530 _144607 _144645 P pat e q f x r)). Qed.
Lemma lem8185363 {_144530 _144607 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (f : _144530 -> _144607) (x : P) : (term247 _144530 _144607 _144654 P t y f x) = (term247 _144530 _144607 _144654 P t y f x).
Proof. exact (eq_refl (term247 _144530 _144607 _144654 P t y f x)). Qed.
Lemma lem8185364 {_144530 _144607 _144645 _144654 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (f : _144530 -> _144607) (x : P) : (term271 _144530 _144607 _144645 _144654 P pat e q t y f x) = (term269 _144530 _144607 _144645 _144654 P pat e q t y f x).
Proof. exact (MK_COMB (@lem8185362 _144530 _144607 _144645 P pat e q f x) (@lem8185363 _144530 _144607 _144654 P t y f x)). Qed.
Lemma lem8185365 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8185366 {_144530 _144607 _144645 _144654 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (f : _144530 -> _144607) (x : P) : (term275 _144530 _144607 _144645 _144654 P pat e q t y f x) = (term276 _144530 _144607 _144645 _144654 P pat e q t y f x).
Proof. exact (MK_COMB (@lem8185365) (@lem8185364 _144530 _144607 _144645 _144654 P pat e q t y f x)). Qed.
Lemma lem8185367 {_144530 _144607 _144645 _144654 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (f : _144530 -> _144607) (x : P) : (term269 _144530 _144607 _144645 _144654 P pat e q t y f x) = (term277 _144530 _144607 _144645 _144654 P pat e q t y f x).
Proof. exact (eq_refl (term269 _144530 _144607 _144645 _144654 P pat e q t y f x)). Qed.
Lemma lem8185368 {_144530 _144607 _144645 _144654 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (f : _144530 -> _144607) (x : P) : ((term271 _144530 _144607 _144645 _144654 P pat e q t y f x) = (term269 _144530 _144607 _144645 _144654 P pat e q t y f x)) = ((term269 _144530 _144607 _144645 _144654 P pat e q t y f x) = (term277 _144530 _144607 _144645 _144654 P pat e q t y f x)).
Proof. exact (MK_COMB (@lem8185366 _144530 _144607 _144645 _144654 P pat e q t y f x) (@lem8185367 _144530 _144607 _144645 _144654 P pat e q t y f x)). Qed.
Lemma lem8185369 {_144530 _144607 _144645 _144654 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (f : _144530 -> _144607) (x : P) : (term269 _144530 _144607 _144645 _144654 P pat e q t y f x) = (term277 _144530 _144607 _144645 _144654 P pat e q t y f x).
Proof. exact (EQ_MP (@lem8185368 _144530 _144607 _144645 _144654 P pat e q t y f x) (@lem8185360 _144530 _144607 _144645 _144654 P pat e q t y f x)). Qed.
Lemma lem8185374 {_144530 _144607 _144645 _144654 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (f : _144530 -> _144607) (x : P) : (term268 _144530 _144607 _144645 _144654 P pat e q t y f x) = (term277 _144530 _144607 _144645 _144654 P pat e q t y f x).
Proof. exact (TRANS (@lem8185356 _144530 _144607 _144645 _144654 P pat e q t y f x) (@lem8185369 _144530 _144607 _144645 _144654 P pat e q t y f x)). Qed.
Lemma lem8185375 {_144530 _144607 _144645 _144654 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (f : _144530 -> _144607) : (term242 _144530 _144607 _144645 _144654 P pat e q t y f) = (term278 _144530 _144607 _144645 _144654 P pat e q t y f).
Proof. exact (fun_ext (fun x : P => @lem8185374 _144530 _144607 _144645 _144654 P pat e q t y f x)). Qed.
Lemma lem8185376 {_144530 _144607 _144645 _144654 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (f : _144530 -> _144607) : (term241 _144530 _144607 _144645 _144654 P pat e q t y f) = (term278 _144530 _144607 _144645 _144654 P pat e q t y f).
Proof. exact (TRANS (@lem8185308 _144530 _144607 _144645 _144654 P pat e q t y f) (@lem8185375 _144530 _144607 _144645 _144654 P pat e q t y f)). Qed.
Lemma lem8185377 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8185378 {_144530 _144607 _144645 _144654 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (f : _144530 -> _144607) (a : P) : (term279 _144530 _144607 _144645 _144654 P pat e q t y f a) = (term280 _144530 _144607 _144645 _144654 P pat e q t y f a).
Proof. exact (MK_COMB (@lem8185376 _144530 _144607 _144645 _144654 P pat e q t y f) (@lem8185377 P a)). Qed.
Lemma lem8185380 {A B : Type'} (f : A -> B) (y : A) : (term147 A B f y) = (f y).
Proof. exact (EQ_MP (@lem1810 A B f y) (@lem1809 A B f y)). Qed.
Lemma lem8185381 {P : Type'} (f : P -> Prop) (y : P) : (term157 P f y) = (f y).
Proof. exact (@lem8185380 P Prop f y). Qed.
Lemma lem8185382 {_144530 _144607 _144645 _144654 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (f : _144530 -> _144607) (a : P) : (term281 _144530 _144607 _144645 _144654 P pat e q t y f a) = (term280 _144530 _144607 _144645 _144654 P pat e q t y f a).
Proof. exact (@lem8185381 P (term278 _144530 _144607 _144645 _144654 P pat e q t y f) a). Qed.
Lemma lem8185383 {_144530 _144607 _144645 _144654 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (f : _144530 -> _144607) (x : P) : (term280 _144530 _144607 _144645 _144654 P pat e q t y f x) = (term277 _144530 _144607 _144645 _144654 P pat e q t y f x).
Proof. exact (eq_refl (term280 _144530 _144607 _144645 _144654 P pat e q t y f x)). Qed.
Lemma lem8185384 {_144530 _144607 _144645 _144654 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (f : _144530 -> _144607) : (term282 _144530 _144607 _144645 _144654 P pat e q t y f) = (term278 _144530 _144607 _144645 _144654 P pat e q t y f).
Proof. exact (fun_ext (fun x : P => @lem8185383 _144530 _144607 _144645 _144654 P pat e q t y f x)). Qed.
Lemma lem8185385 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8185386 {_144530 _144607 _144645 _144654 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (f : _144530 -> _144607) (a : P) : (term281 _144530 _144607 _144645 _144654 P pat e q t y f a) = (term280 _144530 _144607 _144645 _144654 P pat e q t y f a).
Proof. exact (MK_COMB (@lem8185384 _144530 _144607 _144645 _144654 P pat e q t y f) (@lem8185385 P a)). Qed.
Lemma lem8185387 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8185388 {_144530 _144607 _144645 _144654 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (f : _144530 -> _144607) (a : P) : (term283 _144530 _144607 _144645 _144654 P pat e q t y f a) = (term284 _144530 _144607 _144645 _144654 P pat e q t y f a).
Proof. exact (MK_COMB (@lem8185387) (@lem8185386 _144530 _144607 _144645 _144654 P pat e q t y f a)). Qed.
Lemma lem8185389 {_144530 _144607 _144645 _144654 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (f : _144530 -> _144607) (a : P) : (term280 _144530 _144607 _144645 _144654 P pat e q t y f a) = (term277 _144530 _144607 _144645 _144654 P pat e q t y f a).
Proof. exact (eq_refl (term280 _144530 _144607 _144645 _144654 P pat e q t y f a)). Qed.
Lemma lem8185390 {_144530 _144607 _144645 _144654 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (f : _144530 -> _144607) (a : P) : ((term281 _144530 _144607 _144645 _144654 P pat e q t y f a) = (term280 _144530 _144607 _144645 _144654 P pat e q t y f a)) = ((term280 _144530 _144607 _144645 _144654 P pat e q t y f a) = (term277 _144530 _144607 _144645 _144654 P pat e q t y f a)).
Proof. exact (MK_COMB (@lem8185388 _144530 _144607 _144645 _144654 P pat e q t y f a) (@lem8185389 _144530 _144607 _144645 _144654 P pat e q t y f a)). Qed.
Lemma lem8185391 {_144530 _144607 _144645 _144654 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (f : _144530 -> _144607) (a : P) : (term280 _144530 _144607 _144645 _144654 P pat e q t y f a) = (term277 _144530 _144607 _144645 _144654 P pat e q t y f a).
Proof. exact (EQ_MP (@lem8185390 _144530 _144607 _144645 _144654 P pat e q t y f a) (@lem8185382 _144530 _144607 _144645 _144654 P pat e q t y f a)). Qed.
Lemma lem8185396 {_144530 _144607 _144645 _144654 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (f : _144530 -> _144607) (a : P) : (term279 _144530 _144607 _144645 _144654 P pat e q t y f a) = (term277 _144530 _144607 _144645 _144654 P pat e q t y f a).
Proof. exact (TRANS (@lem8185378 _144530 _144607 _144645 _144654 P pat e q t y f a) (@lem8185391 _144530 _144607 _144645 _144654 P pat e q t y f a)). Qed.
Lemma lem8185397 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8185398 {_144530 _144607 _144645 _144654 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (f : _144530 -> _144607) (a : P) : (term285 _144530 _144607 _144645 _144654 P pat e q t y f a) = (term286 _144530 _144607 _144645 _144654 P pat e q t y f a).
Proof. exact (MK_COMB (@lem8185397) (@lem8185396 _144530 _144607 _144645 _144654 P pat e q t y f a)). Qed.
Lemma lem8185400 {A B : Type'} (f : A -> B) (y : A) : (term147 A B f y) = (f y).
Proof. exact (EQ_MP (@lem1810 A B f y) (@lem1809 A B f y)). Qed.
Lemma lem8185401 {_144530 _144607 P : Type'} (f : type560 _144530 _144607 P) (y : _144530 -> _144607) : (term148 _144530 _144607 P f y) = (f y).
Proof. exact (@lem8185400 (_144530 -> _144607) (P -> Prop) f y). Qed.
Lemma lem8185402 {_144530 _144607 _144645 _144654 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) : (term240 _144530 _144607 _144645 _144654 P pat e q t y g) = (term241 _144530 _144607 _144645 _144654 P pat e q t y g).
Proof. exact (@lem8185401 _144530 _144607 P (term239 _144530 _144607 _144645 _144654 P pat e q t y) g). Qed.
Lemma lem8185403 {_144530 _144607 _144645 _144654 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (f : _144530 -> _144607) : (term241 _144530 _144607 _144645 _144654 P pat e q t y f) = (term242 _144530 _144607 _144645 _144654 P pat e q t y f).
Proof. exact (eq_refl (term241 _144530 _144607 _144645 _144654 P pat e q t y f)). Qed.
Lemma lem8185404 {_144530 _144607 _144645 _144654 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) : (term243 _144530 _144607 _144645 _144654 P pat e q t y) = (term239 _144530 _144607 _144645 _144654 P pat e q t y).
Proof. exact (fun_ext (fun f : _144530 -> _144607 => @lem8185403 _144530 _144607 _144645 _144654 P pat e q t y f)). Qed.
Lemma lem8185405 {_144530 _144607 : Type'} (g : _144530 -> _144607) : g = g.
Proof. exact (eq_refl g). Qed.
Lemma lem8185406 {_144530 _144607 _144645 _144654 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) : (term240 _144530 _144607 _144645 _144654 P pat e q t y g) = (term241 _144530 _144607 _144645 _144654 P pat e q t y g).
Proof. exact (MK_COMB (@lem8185404 _144530 _144607 _144645 _144654 P pat e q t y) (@lem8185405 _144530 _144607 g)). Qed.
Lemma lem8185407 {P : Type'} : (@eq (P -> Prop)) = (@eq (P -> Prop)).
Proof. exact (eq_refl (@eq (P -> Prop))). Qed.
Lemma lem8185408 {_144530 _144607 _144645 _144654 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) : (term244 _144530 _144607 _144645 _144654 P pat e q t y g) = (term245 _144530 _144607 _144645 _144654 P pat e q t y g).
Proof. exact (MK_COMB (@lem8185407 P) (@lem8185406 _144530 _144607 _144645 _144654 P pat e q t y g)). Qed.
Lemma lem8185409 {_144530 _144607 _144645 _144654 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) : (term241 _144530 _144607 _144645 _144654 P pat e q t y g) = (term242 _144530 _144607 _144645 _144654 P pat e q t y g).
Proof. exact (eq_refl (term241 _144530 _144607 _144645 _144654 P pat e q t y g)). Qed.
Lemma lem8185410 {_144530 _144607 _144645 _144654 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) : ((term240 _144530 _144607 _144645 _144654 P pat e q t y g) = (term241 _144530 _144607 _144645 _144654 P pat e q t y g)) = ((term241 _144530 _144607 _144645 _144654 P pat e q t y g) = (term242 _144530 _144607 _144645 _144654 P pat e q t y g)).
Proof. exact (MK_COMB (@lem8185408 _144530 _144607 _144645 _144654 P pat e q t y g) (@lem8185409 _144530 _144607 _144645 _144654 P pat e q t y g)). Qed.
Lemma lem8185411 {_144530 _144607 _144645 _144654 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) : (term241 _144530 _144607 _144645 _144654 P pat e q t y g) = (term242 _144530 _144607 _144645 _144654 P pat e q t y g).
Proof. exact (EQ_MP (@lem8185410 _144530 _144607 _144645 _144654 P pat e q t y g) (@lem8185402 _144530 _144607 _144645 _144654 P pat e q t y g)). Qed.
Lemma lem8185413 : _GUARDED_PATTERN = term246.
Proof. exact (@_GUARDED_PATTERN_def). Qed.
Lemma lem8185418 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (x : P) : (term247 _144530 _144607 _144645 P pat e g x) = (term247 _144530 _144607 _144645 P pat e g x).
Proof. exact (eq_refl (term247 _144530 _144607 _144645 P pat e g x)). Qed.
Lemma lem8185419 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (x : P) : (term248 _144530 _144607 _144645 P pat e g x) = (term249 _144530 _144607 _144645 P pat e g x).
Proof. exact (MK_COMB (@lem8185413) (@lem8185418 _144530 _144607 _144645 P pat e g x)). Qed.
Lemma lem8185421 {A B : Type'} (f : A -> B) (y : A) : (term147 A B f y) = (f y).
Proof. exact (EQ_MP (@lem1810 A B f y) (@lem1809 A B f y)). Qed.
Lemma lem8185422 (f : type1542) (y : Prop) : (term250 f y) = (f y).
Proof. exact (@lem8185421 Prop type1543 f y). Qed.
Lemma lem8185423 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (x : P) : (term251 _144530 _144607 _144645 P pat e g x) = (term249 _144530 _144607 _144645 P pat e g x).
Proof. exact (@lem8185422 term246 (term247 _144530 _144607 _144645 P pat e g x)). Qed.
Lemma lem8185424 (p : Prop) : (term252 p) = (term253 p).
Proof. exact (eq_refl (term252 p)). Qed.
Lemma lem8185425 : term254 = term246.
Proof. exact (fun_ext (fun p : Prop => @lem8185424 p)). Qed.
Lemma lem8185426 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (x : P) : (term247 _144530 _144607 _144645 P pat e g x) = (term247 _144530 _144607 _144645 P pat e g x).
Proof. exact (eq_refl (term247 _144530 _144607 _144645 P pat e g x)). Qed.
Lemma lem8185427 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (x : P) : (term251 _144530 _144607 _144645 P pat e g x) = (term249 _144530 _144607 _144645 P pat e g x).
Proof. exact (MK_COMB (@lem8185425) (@lem8185426 _144530 _144607 _144645 P pat e g x)). Qed.
Lemma lem8185428 : (@eq (Prop -> Prop -> Prop)) = (@eq (Prop -> Prop -> Prop)).
Proof. exact (eq_refl (@eq (Prop -> Prop -> Prop))). Qed.
Lemma lem8185429 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (x : P) : (term255 _144530 _144607 _144645 P pat e g x) = (term256 _144530 _144607 _144645 P pat e g x).
Proof. exact (MK_COMB (@lem8185428) (@lem8185427 _144530 _144607 _144645 P pat e g x)). Qed.
Lemma lem8185430 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (x : P) : (term249 _144530 _144607 _144645 P pat e g x) = (term257 _144530 _144607 _144645 P pat e g x).
Proof. exact (eq_refl (term249 _144530 _144607 _144645 P pat e g x)). Qed.
Lemma lem8185431 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (x : P) : ((term251 _144530 _144607 _144645 P pat e g x) = (term249 _144530 _144607 _144645 P pat e g x)) = ((term249 _144530 _144607 _144645 P pat e g x) = (term257 _144530 _144607 _144645 P pat e g x)).
Proof. exact (MK_COMB (@lem8185429 _144530 _144607 _144645 P pat e g x) (@lem8185430 _144530 _144607 _144645 P pat e g x)). Qed.
Lemma lem8185432 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (x : P) : (term249 _144530 _144607 _144645 P pat e g x) = (term257 _144530 _144607 _144645 P pat e g x).
Proof. exact (EQ_MP (@lem8185431 _144530 _144607 _144645 P pat e g x) (@lem8185423 _144530 _144607 _144645 P pat e g x)). Qed.
Lemma lem8185437 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (x : P) : (term248 _144530 _144607 _144645 P pat e g x) = (term257 _144530 _144607 _144645 P pat e g x).
Proof. exact (TRANS (@lem8185419 _144530 _144607 _144645 P pat e g x) (@lem8185432 _144530 _144607 _144645 P pat e g x)). Qed.
Lemma lem8185438 {_144530 _144607 P : Type'} (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (x : P) : (q g x) = (q g x).
Proof. exact (eq_refl (q g x)). Qed.
Lemma lem8185439 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (x : P) : (term258 _144530 _144607 _144645 P pat e q g x) = (term259 _144530 _144607 _144645 P pat e q g x).
Proof. exact (MK_COMB (@lem8185437 _144530 _144607 _144645 P pat e g x) (@lem8185438 _144530 _144607 P q g x)). Qed.
Lemma lem8185441 {A B : Type'} (f : A -> B) (y : A) : (term147 A B f y) = (f y).
Proof. exact (EQ_MP (@lem1810 A B f y) (@lem1809 A B f y)). Qed.
Lemma lem8185442 (f : type1543) (y : Prop) : (term260 f y) = (f y).
Proof. exact (@lem8185441 Prop (Prop -> Prop) f y). Qed.
Lemma lem8185443 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (x : P) : (term261 _144530 _144607 _144645 P pat e q g x) = (term259 _144530 _144607 _144645 P pat e q g x).
Proof. exact (@lem8185442 (term257 _144530 _144607 _144645 P pat e g x) (q g x)). Qed.
Lemma lem8185444 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (x : P) (g' : Prop) : (term262 _144530 _144607 _144645 P pat e g x g') = (term263 _144530 _144607 _144645 P pat e g x g').
Proof. exact (eq_refl (term262 _144530 _144607 _144645 P pat e g x g')). Qed.
Lemma lem8185445 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (x : P) : (term264 _144530 _144607 _144645 P pat e g x) = (term257 _144530 _144607 _144645 P pat e g x).
Proof. exact (fun_ext (fun g' : Prop => @lem8185444 _144530 _144607 _144645 P pat e g x g')). Qed.
Lemma lem8185446 {_144530 _144607 P : Type'} (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (x : P) : (q g x) = (q g x).
Proof. exact (eq_refl (q g x)). Qed.
Lemma lem8185447 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (x : P) : (term261 _144530 _144607 _144645 P pat e q g x) = (term259 _144530 _144607 _144645 P pat e q g x).
Proof. exact (MK_COMB (@lem8185445 _144530 _144607 _144645 P pat e g x) (@lem8185446 _144530 _144607 P q g x)). Qed.
Lemma lem8185448 : (@eq (Prop -> Prop)) = (@eq (Prop -> Prop)).
Proof. exact (eq_refl (@eq (Prop -> Prop))). Qed.
Lemma lem8185449 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (x : P) : (term265 _144530 _144607 _144645 P pat e q g x) = (term266 _144530 _144607 _144645 P pat e q g x).
Proof. exact (MK_COMB (@lem8185448) (@lem8185447 _144530 _144607 _144645 P pat e q g x)). Qed.
Lemma lem8185450 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (x : P) : (term259 _144530 _144607 _144645 P pat e q g x) = (term267 _144530 _144607 _144645 P pat e q g x).
Proof. exact (eq_refl (term259 _144530 _144607 _144645 P pat e q g x)). Qed.
Lemma lem8185451 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (x : P) : ((term261 _144530 _144607 _144645 P pat e q g x) = (term259 _144530 _144607 _144645 P pat e q g x)) = ((term259 _144530 _144607 _144645 P pat e q g x) = (term267 _144530 _144607 _144645 P pat e q g x)).
Proof. exact (MK_COMB (@lem8185449 _144530 _144607 _144645 P pat e q g x) (@lem8185450 _144530 _144607 _144645 P pat e q g x)). Qed.
Lemma lem8185452 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (x : P) : (term259 _144530 _144607 _144645 P pat e q g x) = (term267 _144530 _144607 _144645 P pat e q g x).
Proof. exact (EQ_MP (@lem8185451 _144530 _144607 _144645 P pat e q g x) (@lem8185443 _144530 _144607 _144645 P pat e q g x)). Qed.
Lemma lem8185457 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (x : P) : (term258 _144530 _144607 _144645 P pat e q g x) = (term267 _144530 _144607 _144645 P pat e q g x).
Proof. exact (TRANS (@lem8185439 _144530 _144607 _144645 P pat e q g x) (@lem8185452 _144530 _144607 _144645 P pat e q g x)). Qed.
Lemma lem8185458 {_144530 _144607 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (x : P) : (term247 _144530 _144607 _144654 P t y g x) = (term247 _144530 _144607 _144654 P t y g x).
Proof. exact (eq_refl (term247 _144530 _144607 _144654 P t y g x)). Qed.
Lemma lem8185459 {_144530 _144607 _144645 _144654 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (x : P) : (term268 _144530 _144607 _144645 _144654 P pat e q t y g x) = (term269 _144530 _144607 _144645 _144654 P pat e q t y g x).
Proof. exact (MK_COMB (@lem8185457 _144530 _144607 _144645 P pat e q g x) (@lem8185458 _144530 _144607 _144654 P t y g x)). Qed.
Lemma lem8185461 {A B : Type'} (f : A -> B) (y : A) : (term147 A B f y) = (f y).
Proof. exact (EQ_MP (@lem1810 A B f y) (@lem1809 A B f y)). Qed.
Lemma lem8185462 (f : Prop -> Prop) (y : Prop) : (term270 f y) = (f y).
Proof. exact (@lem8185461 Prop Prop f y). Qed.
Lemma lem8185463 {_144530 _144607 _144645 _144654 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (x : P) : (term271 _144530 _144607 _144645 _144654 P pat e q t y g x) = (term269 _144530 _144607 _144645 _144654 P pat e q t y g x).
Proof. exact (@lem8185462 (term267 _144530 _144607 _144645 P pat e q g x) (term247 _144530 _144607 _144654 P t y g x)). Qed.
Lemma lem8185464 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (x : P) (r : Prop) : (term272 _144530 _144607 _144645 P pat e q g x r) = (term273 _144530 _144607 _144645 P pat e q g x r).
Proof. exact (eq_refl (term272 _144530 _144607 _144645 P pat e q g x r)). Qed.
Lemma lem8185465 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (x : P) : (term274 _144530 _144607 _144645 P pat e q g x) = (term267 _144530 _144607 _144645 P pat e q g x).
Proof. exact (fun_ext (fun r : Prop => @lem8185464 _144530 _144607 _144645 P pat e q g x r)). Qed.
Lemma lem8185466 {_144530 _144607 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (x : P) : (term247 _144530 _144607 _144654 P t y g x) = (term247 _144530 _144607 _144654 P t y g x).
Proof. exact (eq_refl (term247 _144530 _144607 _144654 P t y g x)). Qed.
Lemma lem8185467 {_144530 _144607 _144645 _144654 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (x : P) : (term271 _144530 _144607 _144645 _144654 P pat e q t y g x) = (term269 _144530 _144607 _144645 _144654 P pat e q t y g x).
Proof. exact (MK_COMB (@lem8185465 _144530 _144607 _144645 P pat e q g x) (@lem8185466 _144530 _144607 _144654 P t y g x)). Qed.
Lemma lem8185468 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8185469 {_144530 _144607 _144645 _144654 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (x : P) : (term275 _144530 _144607 _144645 _144654 P pat e q t y g x) = (term276 _144530 _144607 _144645 _144654 P pat e q t y g x).
Proof. exact (MK_COMB (@lem8185468) (@lem8185467 _144530 _144607 _144645 _144654 P pat e q t y g x)). Qed.
Lemma lem8185470 {_144530 _144607 _144645 _144654 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (x : P) : (term269 _144530 _144607 _144645 _144654 P pat e q t y g x) = (term277 _144530 _144607 _144645 _144654 P pat e q t y g x).
Proof. exact (eq_refl (term269 _144530 _144607 _144645 _144654 P pat e q t y g x)). Qed.
Lemma lem8185471 {_144530 _144607 _144645 _144654 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (x : P) : ((term271 _144530 _144607 _144645 _144654 P pat e q t y g x) = (term269 _144530 _144607 _144645 _144654 P pat e q t y g x)) = ((term269 _144530 _144607 _144645 _144654 P pat e q t y g x) = (term277 _144530 _144607 _144645 _144654 P pat e q t y g x)).
Proof. exact (MK_COMB (@lem8185469 _144530 _144607 _144645 _144654 P pat e q t y g x) (@lem8185470 _144530 _144607 _144645 _144654 P pat e q t y g x)). Qed.
Lemma lem8185472 {_144530 _144607 _144645 _144654 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (x : P) : (term269 _144530 _144607 _144645 _144654 P pat e q t y g x) = (term277 _144530 _144607 _144645 _144654 P pat e q t y g x).
Proof. exact (EQ_MP (@lem8185471 _144530 _144607 _144645 _144654 P pat e q t y g x) (@lem8185463 _144530 _144607 _144645 _144654 P pat e q t y g x)). Qed.
Lemma lem8185477 {_144530 _144607 _144645 _144654 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (x : P) : (term268 _144530 _144607 _144645 _144654 P pat e q t y g x) = (term277 _144530 _144607 _144645 _144654 P pat e q t y g x).
Proof. exact (TRANS (@lem8185459 _144530 _144607 _144645 _144654 P pat e q t y g x) (@lem8185472 _144530 _144607 _144645 _144654 P pat e q t y g x)). Qed.
Lemma lem8185478 {_144530 _144607 _144645 _144654 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) : (term242 _144530 _144607 _144645 _144654 P pat e q t y g) = (term278 _144530 _144607 _144645 _144654 P pat e q t y g).
Proof. exact (fun_ext (fun x : P => @lem8185477 _144530 _144607 _144645 _144654 P pat e q t y g x)). Qed.
Lemma lem8185479 {_144530 _144607 _144645 _144654 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) : (term241 _144530 _144607 _144645 _144654 P pat e q t y g) = (term278 _144530 _144607 _144645 _144654 P pat e q t y g).
Proof. exact (TRANS (@lem8185411 _144530 _144607 _144645 _144654 P pat e q t y g) (@lem8185478 _144530 _144607 _144645 _144654 P pat e q t y g)). Qed.
Lemma lem8185480 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8185481 {_144530 _144607 _144645 _144654 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (term279 _144530 _144607 _144645 _144654 P pat e q t y g a) = (term280 _144530 _144607 _144645 _144654 P pat e q t y g a).
Proof. exact (MK_COMB (@lem8185479 _144530 _144607 _144645 _144654 P pat e q t y g) (@lem8185480 P a)). Qed.
Lemma lem8185483 {A B : Type'} (f : A -> B) (y : A) : (term147 A B f y) = (f y).
Proof. exact (EQ_MP (@lem1810 A B f y) (@lem1809 A B f y)). Qed.
Lemma lem8185484 {P : Type'} (f : P -> Prop) (y : P) : (term157 P f y) = (f y).
Proof. exact (@lem8185483 P Prop f y). Qed.
Lemma lem8185485 {_144530 _144607 _144645 _144654 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (term281 _144530 _144607 _144645 _144654 P pat e q t y g a) = (term280 _144530 _144607 _144645 _144654 P pat e q t y g a).
Proof. exact (@lem8185484 P (term278 _144530 _144607 _144645 _144654 P pat e q t y g) a). Qed.
Lemma lem8185486 {_144530 _144607 _144645 _144654 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (x : P) : (term280 _144530 _144607 _144645 _144654 P pat e q t y g x) = (term277 _144530 _144607 _144645 _144654 P pat e q t y g x).
Proof. exact (eq_refl (term280 _144530 _144607 _144645 _144654 P pat e q t y g x)). Qed.
Lemma lem8185487 {_144530 _144607 _144645 _144654 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) : (term282 _144530 _144607 _144645 _144654 P pat e q t y g) = (term278 _144530 _144607 _144645 _144654 P pat e q t y g).
Proof. exact (fun_ext (fun x : P => @lem8185486 _144530 _144607 _144645 _144654 P pat e q t y g x)). Qed.
Lemma lem8185488 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8185489 {_144530 _144607 _144645 _144654 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (term281 _144530 _144607 _144645 _144654 P pat e q t y g a) = (term280 _144530 _144607 _144645 _144654 P pat e q t y g a).
Proof. exact (MK_COMB (@lem8185487 _144530 _144607 _144645 _144654 P pat e q t y g) (@lem8185488 P a)). Qed.
Lemma lem8185490 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8185491 {_144530 _144607 _144645 _144654 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (term283 _144530 _144607 _144645 _144654 P pat e q t y g a) = (term284 _144530 _144607 _144645 _144654 P pat e q t y g a).
Proof. exact (MK_COMB (@lem8185490) (@lem8185489 _144530 _144607 _144645 _144654 P pat e q t y g a)). Qed.
Lemma lem8185492 {_144530 _144607 _144645 _144654 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (term280 _144530 _144607 _144645 _144654 P pat e q t y g a) = (term277 _144530 _144607 _144645 _144654 P pat e q t y g a).
Proof. exact (eq_refl (term280 _144530 _144607 _144645 _144654 P pat e q t y g a)). Qed.
Lemma lem8185493 {_144530 _144607 _144645 _144654 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : ((term281 _144530 _144607 _144645 _144654 P pat e q t y g a) = (term280 _144530 _144607 _144645 _144654 P pat e q t y g a)) = ((term280 _144530 _144607 _144645 _144654 P pat e q t y g a) = (term277 _144530 _144607 _144645 _144654 P pat e q t y g a)).
Proof. exact (MK_COMB (@lem8185491 _144530 _144607 _144645 _144654 P pat e q t y g a) (@lem8185492 _144530 _144607 _144645 _144654 P pat e q t y g a)). Qed.
Lemma lem8185494 {_144530 _144607 _144645 _144654 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (term280 _144530 _144607 _144645 _144654 P pat e q t y g a) = (term277 _144530 _144607 _144645 _144654 P pat e q t y g a).
Proof. exact (EQ_MP (@lem8185493 _144530 _144607 _144645 _144654 P pat e q t y g a) (@lem8185485 _144530 _144607 _144645 _144654 P pat e q t y g a)). Qed.
Lemma lem8185499 {_144530 _144607 _144645 _144654 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (term279 _144530 _144607 _144645 _144654 P pat e q t y g a) = (term277 _144530 _144607 _144645 _144654 P pat e q t y g a).
Proof. exact (TRANS (@lem8185481 _144530 _144607 _144645 _144654 P pat e q t y g a) (@lem8185494 _144530 _144607 _144645 _144654 P pat e q t y g a)). Qed.
Lemma lem8185500 {_144530 _144607 _144645 _144654 P : Type'} (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : ((term279 _144530 _144607 _144645 _144654 P pat e q t y f a) = (term279 _144530 _144607 _144645 _144654 P pat e q t y g a)) = ((term277 _144530 _144607 _144645 _144654 P pat e q t y f a) = (term277 _144530 _144607 _144645 _144654 P pat e q t y g a)).
Proof. exact (MK_COMB (@lem8185398 _144530 _144607 _144645 _144654 P pat e q t y f a) (@lem8185499 _144530 _144607 _144645 _144654 P pat e q t y g a)). Qed.
Lemma lem8185503 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term287 _144529 _144530 _144607 P p lt2 s a f g) = (term287 _144529 _144530 _144607 P p lt2 s a f g).
Proof. exact (eq_refl (term287 _144529 _144530 _144607 P p lt2 s a f g)). Qed.
Lemma lem8185504 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (term288 _144529 _144530 _144607 _144645 _144654 P p lt2 s f pat e q t y g a) = (term289 _144529 _144530 _144607 _144645 _144654 P p lt2 s f pat e q t y g a).
Proof. exact (MK_COMB (@lem8185503 _144529 _144530 _144607 P p lt2 s a f g) (@lem8185500 _144530 _144607 _144645 _144654 P f pat e q t y g a)). Qed.
Lemma lem8185507 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) : (term290 _144529 _144530 _144607 _144645 _144654 P p lt2 s f pat e q t y g) = (term291 _144529 _144530 _144607 _144645 _144654 P p lt2 s f pat e q t y g).
Proof. exact (fun_ext (fun a : P => @lem8185504 _144529 _144530 _144607 _144645 _144654 P p lt2 s f pat e q t y g a)). Qed.
Lemma lem8185508 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8185509 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) : (term292 _144529 _144530 _144607 _144645 _144654 P p lt2 s f pat e q t y g) = (term293 _144529 _144530 _144607 _144645 _144654 P p lt2 s f pat e q t y g).
Proof. exact (MK_COMB (@lem8185508 P) (@lem8185507 _144529 _144530 _144607 _144645 _144654 P p lt2 s f pat e q t y g)). Qed.
Lemma lem8185516 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) : (term294 _144529 _144530 _144607 _144645 _144654 P p lt2 s f pat e q t y) = (term295 _144529 _144530 _144607 _144645 _144654 P p lt2 s f pat e q t y).
Proof. exact (fun_ext (fun g : _144530 -> _144607 => @lem8185509 _144529 _144530 _144607 _144645 _144654 P p lt2 s f pat e q t y g)). Qed.
Lemma lem8185517 {_144530 _144607 : Type'} : (@all (_144530 -> _144607)) = (@all (_144530 -> _144607)).
Proof. exact (eq_refl (@all (_144530 -> _144607))). Qed.
Lemma lem8185518 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) : (term296 _144529 _144530 _144607 _144645 _144654 P p lt2 s f pat e q t y) = (term297 _144529 _144530 _144607 _144645 _144654 P p lt2 s f pat e q t y).
Proof. exact (MK_COMB (@lem8185517 _144530 _144607) (@lem8185516 _144529 _144530 _144607 _144645 _144654 P p lt2 s f pat e q t y)). Qed.
Lemma lem8185525 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) : (term298 _144529 _144530 _144607 _144645 _144654 P p lt2 s pat e q t y) = (term299 _144529 _144530 _144607 _144645 _144654 P p lt2 s pat e q t y).
Proof. exact (fun_ext (fun f : _144530 -> _144607 => @lem8185518 _144529 _144530 _144607 _144645 _144654 P p lt2 s f pat e q t y)). Qed.
Lemma lem8185526 {_144530 _144607 : Type'} : (@all (_144530 -> _144607)) = (@all (_144530 -> _144607)).
Proof. exact (eq_refl (@all (_144530 -> _144607))). Qed.
Lemma lem8185527 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) : (term238 _144529 _144530 _144607 _144645 _144654 P p lt2 s pat e q t y) = (term300 _144529 _144530 _144607 _144645 _144654 P p lt2 s pat e q t y).
Proof. exact (MK_COMB (@lem8185526 _144530 _144607) (@lem8185525 _144529 _144530 _144607 _144645 _144654 P p lt2 s pat e q t y)). Qed.
Lemma lem8185534 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) : (term237 _144529 _144530 _144607 _144645 _144654 P lt2 p s pat e q t y) = (term300 _144529 _144530 _144607 _144645 _144654 P p lt2 s pat e q t y).
Proof. exact (TRANS (@lem8185259 _144529 _144530 _144607 _144645 _144654 P p lt2 s pat e q t y) (@lem8185527 _144529 _144530 _144607 _144645 _144654 P p lt2 s pat e q t y)). Qed.
Lemma lem8185535 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) : (term301 _144529 _144530 _144607 _144645 _144654 P lt2 p s pat e q t y) = (term302 _144529 _144530 _144607 _144645 _144654 P p lt2 s pat e q t y).
Proof. exact (MK_COMB (@lem8185255 _144529 _144530 _144607 _144645 _144654 P t p pat e q lt2 s y) (@lem8185534 _144529 _144530 _144607 _144645 _144654 P p lt2 s pat e q t y)). Qed.
Lemma lem8185538 {_144529 _144530 _144607 _144645 _144654 P : Type'} (lt2 : type1470 _144529 _144530) (p : type560 _144530 _144607 P) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) : (term302 _144529 _144530 _144607 _144645 _144654 P p lt2 s pat e q t y) = (term301 _144529 _144530 _144607 _144645 _144654 P lt2 p s pat e q t y).
Proof. exact (SYM (@lem8185535 _144529 _144530 _144607 _144645 _144654 P p lt2 s pat e q t y)). Qed.
Lemma lem8185752 {A : Type'} (a : A) (b : A) : (@GEQ A a b) = (a = b).
Proof. exact (EQ_MP (@lem8184634 A a b) (@lem8184633 A a b)). Qed.
Lemma lem8185753 {_144645 : Type'} (a : _144645) (b : _144645) : (@GEQ _144645 a b) = (a = b).
Proof. exact (@lem8185752 _144645 a b). Qed.
Lemma lem8185754 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (a : P) : (term247 _144530 _144607 _144645 P pat e f a) = ((pat f a) = (e f a)).
Proof. exact (@lem8185753 _144645 (pat f a) (e f a)). Qed.
Lemma lem8185757 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8185758 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (a : P) : (term303 _144530 _144607 _144645 P pat e f a) = (term304 _144530 _144607 _144645 P pat e f a).
Proof. exact (MK_COMB (@lem8185757) (@lem8185754 _144530 _144607 _144645 P pat e f a)). Qed.
Lemma lem8185762 {A : Type'} (a : A) (b : A) : (@GEQ A a b) = (a = b).
Proof. exact (EQ_MP (@lem8184634 A a b) (@lem8184633 A a b)). Qed.
Lemma lem8185763 {_144654 : Type'} (a : _144654) (b : _144654) : (@GEQ _144654 a b) = (a = b).
Proof. exact (@lem8185762 _144654 a b). Qed.
Lemma lem8185764 {_144530 _144607 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (f : _144530 -> _144607) (a : P) : (term247 _144530 _144607 _144654 P t y f a) = ((t f a) = (y f a)).
Proof. exact (@lem8185763 _144654 (t f a) (y f a)). Qed.
Lemma lem8185767 {_144530 _144607 P : Type'} (q : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) : (term305 _144530 _144607 P q f a) = (term305 _144530 _144607 P q f a).
Proof. exact (eq_refl (term305 _144530 _144607 P q f a)). Qed.
Lemma lem8185768 {_144530 _144607 _144654 P : Type'} (q : type560 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (f : _144530 -> _144607) (a : P) : (term306 _144530 _144607 _144654 P q t y f a) = (term200 _144530 _144607 _144654 P q t y f a).
Proof. exact (MK_COMB (@lem8185767 _144530 _144607 P q f a) (@lem8185764 _144530 _144607 _144654 P t y f a)). Qed.
Lemma lem8185771 {_144530 _144607 _144645 _144654 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (f : _144530 -> _144607) (a : P) : (term277 _144530 _144607 _144645 _144654 P pat e q t y f a) = (term307 _144530 _144607 _144645 _144654 P pat e q t y f a).
Proof. exact (MK_COMB (@lem8185758 _144530 _144607 _144645 P pat e f a) (@lem8185768 _144530 _144607 _144654 P q t y f a)). Qed.
Lemma lem8185774 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8185775 {_144530 _144607 _144645 _144654 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (f : _144530 -> _144607) (a : P) : (term286 _144530 _144607 _144645 _144654 P pat e q t y f a) = (term308 _144530 _144607 _144645 _144654 P pat e q t y f a).
Proof. exact (MK_COMB (@lem8185774) (@lem8185771 _144530 _144607 _144645 _144654 P pat e q t y f a)). Qed.
Lemma lem8185779 {A : Type'} (a : A) (b : A) : (@GEQ A a b) = (a = b).
Proof. exact (EQ_MP (@lem8184634 A a b) (@lem8184633 A a b)). Qed.
Lemma lem8185780 {_144645 : Type'} (a : _144645) (b : _144645) : (@GEQ _144645 a b) = (a = b).
Proof. exact (@lem8185779 _144645 a b). Qed.
Lemma lem8185781 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term247 _144530 _144607 _144645 P pat e g a) = ((pat g a) = (e g a)).
Proof. exact (@lem8185780 _144645 (pat g a) (e g a)). Qed.
Lemma lem8185784 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8185785 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term303 _144530 _144607 _144645 P pat e g a) = (term304 _144530 _144607 _144645 P pat e g a).
Proof. exact (MK_COMB (@lem8185784) (@lem8185781 _144530 _144607 _144645 P pat e g a)). Qed.
Lemma lem8185789 {A : Type'} (a : A) (b : A) : (@GEQ A a b) = (a = b).
Proof. exact (EQ_MP (@lem8184634 A a b) (@lem8184633 A a b)). Qed.
Lemma lem8185790 {_144654 : Type'} (a : _144654) (b : _144654) : (@GEQ _144654 a b) = (a = b).
Proof. exact (@lem8185789 _144654 a b). Qed.
Lemma lem8185791 {_144530 _144607 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (term247 _144530 _144607 _144654 P t y g a) = ((t g a) = (y g a)).
Proof. exact (@lem8185790 _144654 (t g a) (y g a)). Qed.
Lemma lem8185794 {_144530 _144607 P : Type'} (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term305 _144530 _144607 P q g a) = (term305 _144530 _144607 P q g a).
Proof. exact (eq_refl (term305 _144530 _144607 P q g a)). Qed.
Lemma lem8185795 {_144530 _144607 _144654 P : Type'} (q : type560 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (term306 _144530 _144607 _144654 P q t y g a) = (term200 _144530 _144607 _144654 P q t y g a).
Proof. exact (MK_COMB (@lem8185794 _144530 _144607 P q g a) (@lem8185791 _144530 _144607 _144654 P t y g a)). Qed.
Lemma lem8185798 {_144530 _144607 _144645 _144654 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (term277 _144530 _144607 _144645 _144654 P pat e q t y g a) = (term307 _144530 _144607 _144645 _144654 P pat e q t y g a).
Proof. exact (MK_COMB (@lem8185785 _144530 _144607 _144645 P pat e g a) (@lem8185795 _144530 _144607 _144654 P q t y g a)). Qed.
Lemma lem8185801 {_144530 _144607 _144645 _144654 P : Type'} (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : ((term277 _144530 _144607 _144645 _144654 P pat e q t y f a) = (term277 _144530 _144607 _144645 _144654 P pat e q t y g a)) = ((term307 _144530 _144607 _144645 _144654 P pat e q t y f a) = (term307 _144530 _144607 _144645 _144654 P pat e q t y g a)).
Proof. exact (MK_COMB (@lem8185775 _144530 _144607 _144645 _144654 P pat e q t y f a) (@lem8185798 _144530 _144607 _144645 _144654 P pat e q t y g a)). Qed.
Lemma lem8185804 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term287 _144529 _144530 _144607 P p lt2 s a f g) = (term287 _144529 _144530 _144607 P p lt2 s a f g).
Proof. exact (eq_refl (term287 _144529 _144530 _144607 P p lt2 s a f g)). Qed.
Lemma lem8185805 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (term289 _144529 _144530 _144607 _144645 _144654 P p lt2 s f pat e q t y g a) = (term309 _144529 _144530 _144607 _144645 _144654 P p lt2 s f pat e q t y g a).
Proof. exact (MK_COMB (@lem8185804 _144529 _144530 _144607 P p lt2 s a f g) (@lem8185801 _144530 _144607 _144645 _144654 P f pat e q t y g a)). Qed.
Lemma lem8185808 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) : (term291 _144529 _144530 _144607 _144645 _144654 P p lt2 s f pat e q t y g) = (term310 _144529 _144530 _144607 _144645 _144654 P p lt2 s f pat e q t y g).
Proof. exact (fun_ext (fun a : P => @lem8185805 _144529 _144530 _144607 _144645 _144654 P p lt2 s f pat e q t y g a)). Qed.
Lemma lem8185809 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8185810 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) : (term293 _144529 _144530 _144607 _144645 _144654 P p lt2 s f pat e q t y g) = (term311 _144529 _144530 _144607 _144645 _144654 P p lt2 s f pat e q t y g).
Proof. exact (MK_COMB (@lem8185809 P) (@lem8185808 _144529 _144530 _144607 _144645 _144654 P p lt2 s f pat e q t y g)). Qed.
Lemma lem8185815 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) : (term295 _144529 _144530 _144607 _144645 _144654 P p lt2 s f pat e q t y) = (term312 _144529 _144530 _144607 _144645 _144654 P p lt2 s f pat e q t y).
Proof. exact (fun_ext (fun g : _144530 -> _144607 => @lem8185810 _144529 _144530 _144607 _144645 _144654 P p lt2 s f pat e q t y g)). Qed.
Lemma lem8185816 {_144530 _144607 : Type'} : (@all (_144530 -> _144607)) = (@all (_144530 -> _144607)).
Proof. exact (eq_refl (@all (_144530 -> _144607))). Qed.
Lemma lem8185817 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) : (term297 _144529 _144530 _144607 _144645 _144654 P p lt2 s f pat e q t y) = (term313 _144529 _144530 _144607 _144645 _144654 P p lt2 s f pat e q t y).
Proof. exact (MK_COMB (@lem8185816 _144530 _144607) (@lem8185815 _144529 _144530 _144607 _144645 _144654 P p lt2 s f pat e q t y)). Qed.
Lemma lem8185822 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) : (term299 _144529 _144530 _144607 _144645 _144654 P p lt2 s pat e q t y) = (term314 _144529 _144530 _144607 _144645 _144654 P p lt2 s pat e q t y).
Proof. exact (fun_ext (fun f : _144530 -> _144607 => @lem8185817 _144529 _144530 _144607 _144645 _144654 P p lt2 s f pat e q t y)). Qed.
Lemma lem8185823 {_144530 _144607 : Type'} : (@all (_144530 -> _144607)) = (@all (_144530 -> _144607)).
Proof. exact (eq_refl (@all (_144530 -> _144607))). Qed.
Lemma lem8185824 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) : (term300 _144529 _144530 _144607 _144645 _144654 P p lt2 s pat e q t y) = (term315 _144529 _144530 _144607 _144645 _144654 P p lt2 s pat e q t y).
Proof. exact (MK_COMB (@lem8185823 _144530 _144607) (@lem8185822 _144529 _144530 _144607 _144645 _144654 P p lt2 s pat e q t y)). Qed.
Lemma lem8185829 {_144529 _144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (y : type564 _144530 _144607 _144654 P) : (term236 _144529 _144530 _144607 _144645 _144654 P t p pat e q lt2 s y) = (term236 _144529 _144530 _144607 _144645 _144654 P t p pat e q lt2 s y).
Proof. exact (eq_refl (term236 _144529 _144530 _144607 _144645 _144654 P t p pat e q lt2 s y)). Qed.
Lemma lem8185830 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) : (term302 _144529 _144530 _144607 _144645 _144654 P p lt2 s pat e q t y) = (term316 _144529 _144530 _144607 _144645 _144654 P p lt2 s pat e q t y).
Proof. exact (MK_COMB (@lem8185829 _144529 _144530 _144607 _144645 _144654 P t p pat e q lt2 s y) (@lem8185824 _144529 _144530 _144607 _144645 _144654 P p lt2 s pat e q t y)). Qed.
Lemma lem8185833 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) : (term316 _144529 _144530 _144607 _144645 _144654 P p lt2 s pat e q t y) = (term302 _144529 _144530 _144607 _144645 _144654 P p lt2 s pat e q t y).
Proof. exact (SYM (@lem8185830 _144529 _144530 _144607 _144645 _144654 P p lt2 s pat e q t y)). Qed.
Lemma lem8185834 {_144529 _144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (y : type564 _144530 _144607 _144654 P) (h1 : term234 _144529 _144530 _144607 _144645 _144654 P t p pat e q lt2 s y) : term234 _144529 _144530 _144607 _144645 _144654 P t p pat e q lt2 s y.
Proof. exact (h1). Qed.
Lemma lem8185835 {_144529 _144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (y : type564 _144530 _144607 _144654 P) (h1 : term232 _144529 _144530 _144607 _144645 _144654 P t p pat e q lt2 s y) : term232 _144529 _144530 _144607 _144645 _144654 P t p pat e q lt2 s y.
Proof. exact (h1). Qed.
Lemma lem8185836 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (h1 : term141 _144529 _144530 _144607 _144645 P p lt2 s pat) : term141 _144529 _144530 _144607 _144645 P p lt2 s pat.
Proof. exact (h1). Qed.
Lemma lem8185837 {_144529 _144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (y : type564 _144530 _144607 _144654 P) (h1 : term230 _144529 _144530 _144607 _144645 _144654 P t p pat e q lt2 s y) : term230 _144529 _144530 _144607 _144645 _144654 P t p pat e q lt2 s y.
Proof. exact (h1). Qed.
Lemma lem8185838 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (e : type564 _144530 _144607 _144645 P) (h1 : term141 _144529 _144530 _144607 _144645 P p lt2 s e) : term141 _144529 _144530 _144607 _144645 P p lt2 s e.
Proof. exact (h1). Qed.
Lemma lem8185839 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (y : type564 _144530 _144607 _144654 P) (h1 : term228 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y) : term228 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y.
Proof. exact (h1). Qed.
Lemma lem8185840 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (t : type564 _144530 _144607 _144654 P) (h1 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t.
Proof. exact (h1). Qed.
Lemma lem8185841 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (y : type564 _144530 _144607 _144654 P) (h1 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y) : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y.
Proof. exact (h1). Qed.
Lemma lem8185842 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (q : type560 _144530 _144607 P) (h1 : term224 _144529 _144530 _144607 _144645 P p pat e lt2 s q) : term224 _144529 _144530 _144607 _144645 P p pat e lt2 s q.
Proof. exact (h1). Qed.
Lemma lem8185843 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (h1 : term317 _144529 _144530 _144607 P p lt2 s a f g) : term317 _144529 _144530 _144607 P p lt2 s a f g.
Proof. exact (h1). Qed.
Lemma lem8185844 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (h1 : term318 _144529 _144530 _144607 P p lt2 s a f g) : term318 _144529 _144530 _144607 P p lt2 s a f g.
Proof. exact (h1). Qed.
Lemma lem8185845 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) (h1 : p f a) : p f a.
Proof. exact (h1). Qed.
Lemma lem8185846 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) : term165 _144529 _144530 _144607 P lt2 s a f g.
Proof. exact (h1). Qed.
Lemma lem8185847 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : p g a) : p g a.
Proof. exact (h1). Qed.
Lemma lem8185849 (a : Prop) (b : Prop) (a' : Prop) (b' : Prop) : term73 a b a' b'.
Proof. exact (@lem8184628 a b a' b' (@lem8184620 a b a' b')). Qed.
Lemma lem8185850 {_144530 _144607 _144645 _144654 P : Type'} (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : term319 _144530 _144607 _144645 _144654 P f pat e q t y g a.
Proof. exact (@lem8185849 ((pat f a) = (e f a)) (term200 _144530 _144607 _144654 P q t y f a) ((pat g a) = (e g a)) (term200 _144530 _144607 _144654 P q t y g a)). Qed.
Lemma lem8185851 {_144530 _144607 _144645 P : Type'} (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) (h1 : term320 _144530 _144607 _144645 P f pat e g a) : term320 _144530 _144607 _144645 P f pat e g a.
Proof. exact (h1). Qed.
Lemma lem8185852 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) (h1 : (pat g a) = (e g a)) : (pat g a) = (e g a).
Proof. exact (h1). Qed.
Lemma lem8185853 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (a : P) (h1 : (pat f a) = (e f a)) : (pat f a) = (e f a).
Proof. exact (h1). Qed.
Lemma lem8185857 (a : Prop) (b : Prop) (a' : Prop) (b' : Prop) : term73 a b a' b'.
Proof. exact (@lem8184628 a b a' b' (@lem8184620 a b a' b')). Qed.
Lemma lem8185858 {_144530 _144607 _144654 P : Type'} (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : term321 _144530 _144607 _144654 P f q t y g a.
Proof. exact (@lem8185857 (q f a) ((t f a) = (y f a)) (q g a) ((t g a) = (y g a))). Qed.
Lemma lem8185859 {_144530 _144607 P : Type'} (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term322 _144530 _144607 P f q g a) : term322 _144530 _144607 P f q g a.
Proof. exact (h1). Qed.
Lemma lem8185860 {_144530 _144607 P : Type'} (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : q g a) : q g a.
Proof. exact (h1). Qed.
Lemma lem8185861 {_144530 _144607 P : Type'} (q : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) (h1 : q f a) : q f a.
Proof. exact (h1). Qed.
Lemma lem8185867 {_144466 : Type'} (x : _144466) (y : _144466) (x' : _144466) (y' : _144466) : term8 _144466 x y x' y'.
Proof. exact (@lem8184260 _144466 x y x' y' (@lem8184252 _144466 x y x' y')). Qed.
Lemma lem8185868 {_144645 : Type'} (x : _144645) (y : _144645) (x' : _144645) (y' : _144645) : term8 _144645 x y x' y'.
Proof. exact (@lem8185867 _144645 x y x' y'). Qed.
Lemma lem8185869 {_144530 _144607 _144645 P : Type'} (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : term323 _144530 _144607 _144645 P f pat e g a.
Proof. exact (@lem8185868 _144645 (pat f a) (e f a) (pat g a) (e g a)). Qed.
Lemma lem8185873 {_144466 : Type'} (x : _144466) (y : _144466) (x' : _144466) (y' : _144466) : term8 _144466 x y x' y'.
Proof. exact (@lem8184260 _144466 x y x' y' (@lem8184252 _144466 x y x' y')). Qed.
Lemma lem8185874 {_144654 : Type'} (x : _144654) (y : _144654) (x' : _144654) (y' : _144654) : term8 _144654 x y x' y'.
Proof. exact (@lem8185873 _144654 x y x' y'). Qed.
Lemma lem8185875 {_144530 _144607 _144654 P : Type'} (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : term323 _144530 _144607 _144654 P f t y g a.
Proof. exact (@lem8185874 _144654 (t f a) (y f a) (t g a) (y g a)). Qed.
Lemma lem8185877 (p : Prop) : p = (term7 p).
Proof. exact (EQ_MP (@lem10578 p) (@lem10597 p)). Qed.
Lemma lem8185878 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term324 _144530 _144607 _144645 P pat f e g a) = (term325 _144530 _144607 _144645 P pat f e g a).
Proof. exact (@lem8185877 (term324 _144530 _144607 _144645 P pat f e g a)). Qed.
Lemma lem8185879 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term325 _144530 _144607 _144645 P pat f e g a) = (term324 _144530 _144607 _144645 P pat f e g a).
Proof. exact (SYM (@lem8185878 _144530 _144607 _144645 P pat f e g a)). Qed.
Lemma lem8185880 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) (h1 : term326 _144530 _144607 _144645 P pat f e g a) : term326 _144530 _144607 _144645 P pat f e g a.
Proof. exact (h1). Qed.
Lemma lem8185883 {_144529 _144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (q : type560 _144530 _144607 P) (y : type564 _144530 _144607 _144654 P) (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) (h1 : term327 _144529 _144530 _144607 _144645 _144654 P t q y p lt2 s pat f e g a) : term327 _144529 _144530 _144607 _144645 _144654 P t q y p lt2 s pat f e g a.
Proof. exact (h1). Qed.
Lemma lem8185884 {_144529 _144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (q : type560 _144530 _144607 P) (y : type564 _144530 _144607 _144654 P) (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : term328 _144529 _144530 _144607 _144645 _144654 P t q y p lt2 s pat f e g a.
Proof. exact (fun h0 : term327 _144529 _144530 _144607 _144645 _144654 P t q y p lt2 s pat f e g a => @lem8185883 _144529 _144530 _144607 _144645 _144654 P t q y p lt2 s pat f e g a h0). Qed.
Lemma lem8185885 {_144529 _144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (q : type560 _144530 _144607 P) (y : type564 _144530 _144607 _144654 P) (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) (h1 : term328 _144529 _144530 _144607 _144645 _144654 P t q y p lt2 s pat f e g a) : term328 _144529 _144530 _144607 _144645 _144654 P t q y p lt2 s pat f e g a.
Proof. exact (h1). Qed.
Lemma lem8185886 {_144529 _144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (q : type560 _144530 _144607 P) (y : type564 _144530 _144607 _144654 P) (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) (h1 : term327 _144529 _144530 _144607 _144645 _144654 P t q y p lt2 s pat f e g a) : term327 _144529 _144530 _144607 _144645 _144654 P t q y p lt2 s pat f e g a.
Proof. exact (h1). Qed.
Lemma lem8185887 {_144529 _144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (q : type560 _144530 _144607 P) (y : type564 _144530 _144607 _144654 P) (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) (h1 : term327 _144529 _144530 _144607 _144645 _144654 P t q y p lt2 s pat f e g a) (h2 : term328 _144529 _144530 _144607 _144645 _144654 P t q y p lt2 s pat f e g a) : term327 _144529 _144530 _144607 _144645 _144654 P t q y p lt2 s pat f e g a.
Proof. exact (@lem8185885 _144529 _144530 _144607 _144645 _144654 P t q y p lt2 s pat f e g a h2 (@lem8185886 _144529 _144530 _144607 _144645 _144654 P t q y p lt2 s pat f e g a h1)). Qed.
Lemma lem8185888 {_144529 _144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (q : type560 _144530 _144607 P) (y : type564 _144530 _144607 _144654 P) (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) (h1 : term327 _144529 _144530 _144607 _144645 _144654 P t q y p lt2 s pat f e g a) : term329 _144529 _144530 _144607 _144645 _144654 P t q y p lt2 s pat f e g a.
Proof. exact (fun h0 : term328 _144529 _144530 _144607 _144645 _144654 P t q y p lt2 s pat f e g a => @lem8185887 _144529 _144530 _144607 _144645 _144654 P t q y p lt2 s pat f e g a h1 h0). Qed.
Lemma lem8185889 {_144529 _144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (q : type560 _144530 _144607 P) (y : type564 _144530 _144607 _144654 P) (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) (h1 : term328 _144529 _144530 _144607 _144645 _144654 P t q y p lt2 s pat f e g a) : term328 _144529 _144530 _144607 _144645 _144654 P t q y p lt2 s pat f e g a.
Proof. exact (h1). Qed.
Lemma lem8185890 {_144529 _144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (q : type560 _144530 _144607 P) (y : type564 _144530 _144607 _144654 P) (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) (h1 : term327 _144529 _144530 _144607 _144645 _144654 P t q y p lt2 s pat f e g a) (h2 : term328 _144529 _144530 _144607 _144645 _144654 P t q y p lt2 s pat f e g a) : term327 _144529 _144530 _144607 _144645 _144654 P t q y p lt2 s pat f e g a.
Proof. exact (@lem8185888 _144529 _144530 _144607 _144645 _144654 P t q y p lt2 s pat f e g a h1 (@lem8185889 _144529 _144530 _144607 _144645 _144654 P t q y p lt2 s pat f e g a h2)). Qed.
Lemma lem8185891 {_144529 _144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (q : type560 _144530 _144607 P) (y : type564 _144530 _144607 _144654 P) (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) (h1 : term328 _144529 _144530 _144607 _144645 _144654 P t q y p lt2 s pat f e g a) : term328 _144529 _144530 _144607 _144645 _144654 P t q y p lt2 s pat f e g a.
Proof. exact (fun h0 : term327 _144529 _144530 _144607 _144645 _144654 P t q y p lt2 s pat f e g a => @lem8185890 _144529 _144530 _144607 _144645 _144654 P t q y p lt2 s pat f e g a h0 h1). Qed.
Lemma lem8185892 {_144529 _144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (q : type560 _144530 _144607 P) (y : type564 _144530 _144607 _144654 P) (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : term330 _144529 _144530 _144607 _144645 _144654 P t q y p lt2 s pat f e g a.
Proof. exact (fun h0 : term328 _144529 _144530 _144607 _144645 _144654 P t q y p lt2 s pat f e g a => @lem8185891 _144529 _144530 _144607 _144645 _144654 P t q y p lt2 s pat f e g a h0). Qed.
Lemma lem8185895 {_144529 _144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (q : type560 _144530 _144607 P) (y : type564 _144530 _144607 _144654 P) (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : term328 _144529 _144530 _144607 _144645 _144654 P t q y p lt2 s pat f e g a.
Proof. exact (@lem8185892 _144529 _144530 _144607 _144645 _144654 P t q y p lt2 s pat f e g a (@lem8185884 _144529 _144530 _144607 _144645 _144654 P t q y p lt2 s pat f e g a)). Qed.
Lemma lem8185896 {_144529 _144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (q : type560 _144530 _144607 P) (y : type564 _144530 _144607 _144654 P) (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : term328 _144529 _144530 _144607 _144645 _144654 P t q y p lt2 s pat f e g a.
Proof. exact (@lem8185895 _144529 _144530 _144607 _144645 _144654 P t q y p lt2 s pat f e g a). Qed.
Lemma lem8186104 (t : Prop) : (t -> False) = (~ t).
Proof. exact (proj2 (@lem16474 t)). Qed.
Lemma lem8186105 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term325 _144530 _144607 _144645 P pat f e g a) = (term331 _144530 _144607 _144645 P pat f e g a).
Proof. exact (@lem8186104 (term326 _144530 _144607 _144645 P pat f e g a)). Qed.
Lemma lem8186107 (t : Prop) : (term15 t) = t.
Proof. exact (EQ_MP (@lem16507 t) (@lem16506 t)). Qed.
Lemma lem8186108 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term331 _144530 _144607 _144645 P pat f e g a) = (term324 _144530 _144607 _144645 P pat f e g a).
Proof. exact (@lem8186107 (term324 _144530 _144607 _144645 P pat f e g a)). Qed.
Lemma lem8186111 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term325 _144530 _144607 _144645 P pat f e g a) = (term324 _144530 _144607 _144645 P pat f e g a).
Proof. exact (TRANS (@lem8186105 _144530 _144607 _144645 P pat f e g a) (@lem8186108 _144530 _144607 _144645 P pat f e g a)). Qed.
Lemma lem8186112 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term332 _144529 _144530 _144607 P lt2 s a f g) = (term332 _144529 _144530 _144607 P lt2 s a f g).
Proof. exact (eq_refl (term332 _144529 _144530 _144607 P lt2 s a f g)). Qed.
Lemma lem8186113 {_144529 _144530 _144607 _144645 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term333 _144529 _144530 _144607 _144645 P lt2 s pat f e g a) = (term334 _144529 _144530 _144607 _144645 P lt2 s pat f e g a).
Proof. exact (MK_COMB (@lem8186112 _144529 _144530 _144607 P lt2 s a f g) (@lem8186111 _144530 _144607 _144645 P pat f e g a)). Qed.
Lemma lem8186116 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term335 _144530 _144607 P p g a) = (term335 _144530 _144607 P p g a).
Proof. exact (eq_refl (term335 _144530 _144607 P p g a)). Qed.
Lemma lem8186117 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term336 _144529 _144530 _144607 _144645 P p lt2 s pat f e g a) = (term337 _144529 _144530 _144607 _144645 P p lt2 s pat f e g a).
Proof. exact (MK_COMB (@lem8186116 _144530 _144607 P p g a) (@lem8186113 _144529 _144530 _144607 _144645 P lt2 s pat f e g a)). Qed.
Lemma lem8186120 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) : (term335 _144530 _144607 P p f a) = (term335 _144530 _144607 P p f a).
Proof. exact (eq_refl (term335 _144530 _144607 P p f a)). Qed.
Lemma lem8186121 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term338 _144529 _144530 _144607 _144645 P p lt2 s pat f e g a) = (term339 _144529 _144530 _144607 _144645 P p lt2 s pat f e g a).
Proof. exact (MK_COMB (@lem8186120 _144530 _144607 P p f a) (@lem8186117 _144529 _144530 _144607 _144645 P p lt2 s pat f e g a)). Qed.
Lemma lem8186124 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (y : type564 _144530 _144607 _144654 P) : (term340 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y) = (term340 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y).
Proof. exact (eq_refl (term340 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y)). Qed.
Lemma lem8186125 {_144529 _144530 _144607 _144645 _144654 P : Type'} (q : type560 _144530 _144607 P) (y : type564 _144530 _144607 _144654 P) (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term341 _144529 _144530 _144607 _144645 _144654 P q y p lt2 s pat f e g a) = (term342 _144529 _144530 _144607 _144645 _144654 P q y p lt2 s pat f e g a).
Proof. exact (MK_COMB (@lem8186124 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y) (@lem8186121 _144529 _144530 _144607 _144645 P p lt2 s pat f e g a)). Qed.
Lemma lem8186128 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (q : type560 _144530 _144607 P) : (term343 _144529 _144530 _144607 _144645 P p pat e lt2 s q) = (term343 _144529 _144530 _144607 _144645 P p pat e lt2 s q).
Proof. exact (eq_refl (term343 _144529 _144530 _144607 _144645 P p pat e lt2 s q)). Qed.
Lemma lem8186129 {_144529 _144530 _144607 _144645 _144654 P : Type'} (q : type560 _144530 _144607 P) (y : type564 _144530 _144607 _144654 P) (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term344 _144529 _144530 _144607 _144645 _144654 P q y p lt2 s pat f e g a) = (term345 _144529 _144530 _144607 _144645 _144654 P q y p lt2 s pat f e g a).
Proof. exact (MK_COMB (@lem8186128 _144529 _144530 _144607 _144645 P p pat e lt2 s q) (@lem8186125 _144529 _144530 _144607 _144645 _144654 P q y p lt2 s pat f e g a)). Qed.
Lemma lem8186132 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (t : type564 _144530 _144607 _144654 P) : (term340 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) = (term340 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t).
Proof. exact (eq_refl (term340 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t)). Qed.
Lemma lem8186133 {_144529 _144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (q : type560 _144530 _144607 P) (y : type564 _144530 _144607 _144654 P) (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term346 _144529 _144530 _144607 _144645 _144654 P t q y p lt2 s pat f e g a) = (term347 _144529 _144530 _144607 _144645 _144654 P t q y p lt2 s pat f e g a).
Proof. exact (MK_COMB (@lem8186132 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) (@lem8186129 _144529 _144530 _144607 _144645 _144654 P q y p lt2 s pat f e g a)). Qed.
Lemma lem8186136 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (e : type564 _144530 _144607 _144645 P) : (term348 _144529 _144530 _144607 _144645 P p lt2 s e) = (term348 _144529 _144530 _144607 _144645 P p lt2 s e).
Proof. exact (eq_refl (term348 _144529 _144530 _144607 _144645 P p lt2 s e)). Qed.
Lemma lem8186137 {_144529 _144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (q : type560 _144530 _144607 P) (y : type564 _144530 _144607 _144654 P) (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term349 _144529 _144530 _144607 _144645 _144654 P t q y p lt2 s pat f e g a) = (term350 _144529 _144530 _144607 _144645 _144654 P t q y p lt2 s pat f e g a).
Proof. exact (MK_COMB (@lem8186136 _144529 _144530 _144607 _144645 P p lt2 s e) (@lem8186133 _144529 _144530 _144607 _144645 _144654 P t q y p lt2 s pat f e g a)). Qed.
Lemma lem8186140 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) : (term348 _144529 _144530 _144607 _144645 P p lt2 s pat) = (term348 _144529 _144530 _144607 _144645 P p lt2 s pat).
Proof. exact (eq_refl (term348 _144529 _144530 _144607 _144645 P p lt2 s pat)). Qed.
Lemma lem8186141 {_144529 _144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (q : type560 _144530 _144607 P) (y : type564 _144530 _144607 _144654 P) (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term327 _144529 _144530 _144607 _144645 _144654 P t q y p lt2 s pat f e g a) = (term351 _144529 _144530 _144607 _144645 _144654 P t q y p lt2 s pat f e g a).
Proof. exact (MK_COMB (@lem8186140 _144529 _144530 _144607 _144645 P p lt2 s pat) (@lem8186137 _144529 _144530 _144607 _144645 _144654 P t q y p lt2 s pat f e g a)). Qed.
Lemma lem8186144 {_144529 _144530 _144607 _144645 _144654 P : Type'} (q : type560 _144530 _144607 P) (y : type564 _144530 _144607 _144654 P) (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term352 _144529 _144530 _144607 _144645 _144654 P q y p lt2 s pat f e g a) = (term353 _144529 _144530 _144607 _144645 _144654 P q y p lt2 s pat f e g a).
Proof. exact (fun_ext (fun t : type564 _144530 _144607 _144654 P => @lem8186141 _144529 _144530 _144607 _144645 _144654 P t q y p lt2 s pat f e g a)). Qed.
Lemma lem8186145 {_144530 _144607 _144654 P : Type'} : (@all ((_144530 -> _144607) -> P -> _144654)) = (@all ((_144530 -> _144607) -> P -> _144654)).
Proof. exact (eq_refl (@all ((_144530 -> _144607) -> P -> _144654))). Qed.
Lemma lem8186146 {_144529 _144530 _144607 _144645 _144654 P : Type'} (q : type560 _144530 _144607 P) (y : type564 _144530 _144607 _144654 P) (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term354 _144529 _144530 _144607 _144645 _144654 P q y p lt2 s pat f e g a) = (term355 _144529 _144530 _144607 _144645 _144654 P q y p lt2 s pat f e g a).
Proof. exact (MK_COMB (@lem8186145 _144530 _144607 _144654 P) (@lem8186144 _144529 _144530 _144607 _144645 _144654 P q y p lt2 s pat f e g a)). Qed.
Lemma lem8186151 {_144529 _144530 _144607 _144645 _144654 P : Type'} (y : type564 _144530 _144607 _144654 P) (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term356 _144529 _144530 _144607 _144645 _144654 P y p lt2 s pat f e g a) = (term357 _144529 _144530 _144607 _144645 _144654 P y p lt2 s pat f e g a).
Proof. exact (fun_ext (fun q : type560 _144530 _144607 P => @lem8186146 _144529 _144530 _144607 _144645 _144654 P q y p lt2 s pat f e g a)). Qed.
Lemma lem8186152 {_144530 _144607 P : Type'} : (@all ((_144530 -> _144607) -> P -> Prop)) = (@all ((_144530 -> _144607) -> P -> Prop)).
Proof. exact (eq_refl (@all ((_144530 -> _144607) -> P -> Prop))). Qed.
Lemma lem8186153 {_144529 _144530 _144607 _144645 _144654 P : Type'} (y : type564 _144530 _144607 _144654 P) (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term358 _144529 _144530 _144607 _144645 _144654 P y p lt2 s pat f e g a) = (term359 _144529 _144530 _144607 _144645 _144654 P y p lt2 s pat f e g a).
Proof. exact (MK_COMB (@lem8186152 _144530 _144607 P) (@lem8186151 _144529 _144530 _144607 _144645 _144654 P y p lt2 s pat f e g a)). Qed.
Lemma lem8186158 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term360 _144529 _144530 _144607 _144645 _144654 P p lt2 s pat f e g a) = (term361 _144529 _144530 _144607 _144645 _144654 P p lt2 s pat f e g a).
Proof. exact (fun_ext (fun y : type564 _144530 _144607 _144654 P => @lem8186153 _144529 _144530 _144607 _144645 _144654 P y p lt2 s pat f e g a)). Qed.
Lemma lem8186159 {_144530 _144607 _144654 P : Type'} : (@all ((_144530 -> _144607) -> P -> _144654)) = (@all ((_144530 -> _144607) -> P -> _144654)).
Proof. exact (eq_refl (@all ((_144530 -> _144607) -> P -> _144654))). Qed.
Lemma lem8186160 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term362 _144529 _144530 _144607 _144645 _144654 P p lt2 s pat f e g a) = (term363 _144529 _144530 _144607 _144645 _144654 P p lt2 s pat f e g a).
Proof. exact (MK_COMB (@lem8186159 _144530 _144607 _144654 P) (@lem8186158 _144529 _144530 _144607 _144645 _144654 P p lt2 s pat f e g a)). Qed.
Lemma lem8186165 {_144529 _144530 _144607 _144645 _144654 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term364 _144529 _144530 _144607 _144645 _144654 P lt2 s pat f e g a) = (term365 _144529 _144530 _144607 _144645 _144654 P lt2 s pat f e g a).
Proof. exact (fun_ext (fun p : type560 _144530 _144607 P => @lem8186160 _144529 _144530 _144607 _144645 _144654 P p lt2 s pat f e g a)). Qed.
Lemma lem8186166 {_144530 _144607 P : Type'} : (@all ((_144530 -> _144607) -> P -> Prop)) = (@all ((_144530 -> _144607) -> P -> Prop)).
Proof. exact (eq_refl (@all ((_144530 -> _144607) -> P -> Prop))). Qed.
Lemma lem8186167 {_144529 _144530 _144607 _144645 _144654 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term366 _144529 _144530 _144607 _144645 _144654 P lt2 s pat f e g a) = (term367 _144529 _144530 _144607 _144645 _144654 P lt2 s pat f e g a).
Proof. exact (MK_COMB (@lem8186166 _144530 _144607 P) (@lem8186165 _144529 _144530 _144607 _144645 _144654 P lt2 s pat f e g a)). Qed.
Lemma lem8186172 {_144529 _144530 _144607 _144645 _144654 P : Type'} (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term368 _144529 _144530 _144607 _144645 _144654 P s pat f e g a) = (term369 _144529 _144530 _144607 _144645 _144654 P s pat f e g a).
Proof. exact (fun_ext (fun lt2 : type1470 _144529 _144530 => @lem8186167 _144529 _144530 _144607 _144645 _144654 P lt2 s pat f e g a)). Qed.
Lemma lem8186173 {_144529 _144530 : Type'} : (@all (_144530 -> _144529 -> Prop)) = (@all (_144530 -> _144529 -> Prop)).
Proof. exact (eq_refl (@all (_144530 -> _144529 -> Prop))). Qed.
Lemma lem8186174 {_144529 _144530 _144607 _144645 _144654 P : Type'} (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term370 _144529 _144530 _144607 _144645 _144654 P s pat f e g a) = (term371 _144529 _144530 _144607 _144645 _144654 P s pat f e g a).
Proof. exact (MK_COMB (@lem8186173 _144529 _144530) (@lem8186172 _144529 _144530 _144607 _144645 _144654 P s pat f e g a)). Qed.
Lemma lem8186179 {_144529 _144530 _144607 _144645 _144654 P : Type'} (pat : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term372 _144529 _144530 _144607 _144645 _144654 P pat f e g a) = (term373 _144529 _144530 _144607 _144645 _144654 P pat f e g a).
Proof. exact (fun_ext (fun s : P -> _144529 => @lem8186174 _144529 _144530 _144607 _144645 _144654 P s pat f e g a)). Qed.
Lemma lem8186180 {_144529 P : Type'} : (@all (P -> _144529)) = (@all (P -> _144529)).
Proof. exact (eq_refl (@all (P -> _144529))). Qed.
Lemma lem8186181 {_144529 _144530 _144607 _144645 _144654 P : Type'} (pat : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term374 _144529 _144530 _144607 _144645 _144654 P pat f e g a) = (term375 _144529 _144530 _144607 _144645 _144654 P pat f e g a).
Proof. exact (MK_COMB (@lem8186180 _144529 P) (@lem8186179 _144529 _144530 _144607 _144645 _144654 P pat f e g a)). Qed.
Lemma lem8186186 {_144529 _144530 _144607 _144645 _144654 P : Type'} (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term376 _144529 _144530 _144607 _144645 _144654 P f e g a) = (term377 _144529 _144530 _144607 _144645 _144654 P f e g a).
Proof. exact (fun_ext (fun pat : type564 _144530 _144607 _144645 P => @lem8186181 _144529 _144530 _144607 _144645 _144654 P pat f e g a)). Qed.
Lemma lem8186187 {_144530 _144607 _144645 P : Type'} : (@all ((_144530 -> _144607) -> P -> _144645)) = (@all ((_144530 -> _144607) -> P -> _144645)).
Proof. exact (eq_refl (@all ((_144530 -> _144607) -> P -> _144645))). Qed.
Lemma lem8186188 {_144529 _144530 _144607 _144645 _144654 P : Type'} (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term378 _144529 _144530 _144607 _144645 _144654 P f e g a) = (term379 _144529 _144530 _144607 _144645 _144654 P f e g a).
Proof. exact (MK_COMB (@lem8186187 _144530 _144607 _144645 P) (@lem8186186 _144529 _144530 _144607 _144645 _144654 P f e g a)). Qed.
Lemma lem8186193 {_144529 _144530 _144607 _144645 _144654 P : Type'} (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term380 _144529 _144530 _144607 _144645 _144654 P e g a) = (term381 _144529 _144530 _144607 _144645 _144654 P e g a).
Proof. exact (fun_ext (fun f : _144530 -> _144607 => @lem8186188 _144529 _144530 _144607 _144645 _144654 P f e g a)). Qed.
Lemma lem8186194 {_144530 _144607 : Type'} : (@all (_144530 -> _144607)) = (@all (_144530 -> _144607)).
Proof. exact (eq_refl (@all (_144530 -> _144607))). Qed.
Lemma lem8186195 {_144529 _144530 _144607 _144645 _144654 P : Type'} (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term382 _144529 _144530 _144607 _144645 _144654 P e g a) = (term383 _144529 _144530 _144607 _144645 _144654 P e g a).
Proof. exact (MK_COMB (@lem8186194 _144530 _144607) (@lem8186193 _144529 _144530 _144607 _144645 _144654 P e g a)). Qed.
Lemma lem8186200 {_144529 _144530 _144607 _144645 _144654 P : Type'} (g : _144530 -> _144607) (a : P) : (term384 _144529 _144530 _144607 _144645 _144654 P g a) = (term385 _144529 _144530 _144607 _144645 _144654 P g a).
Proof. exact (fun_ext (fun e : type564 _144530 _144607 _144645 P => @lem8186195 _144529 _144530 _144607 _144645 _144654 P e g a)). Qed.
Lemma lem8186201 {_144530 _144607 _144645 P : Type'} : (@all ((_144530 -> _144607) -> P -> _144645)) = (@all ((_144530 -> _144607) -> P -> _144645)).
Proof. exact (eq_refl (@all ((_144530 -> _144607) -> P -> _144645))). Qed.
Lemma lem8186202 {_144529 _144530 _144607 _144645 _144654 P : Type'} (g : _144530 -> _144607) (a : P) : (term386 _144529 _144530 _144607 _144645 _144654 P g a) = (term387 _144529 _144530 _144607 _144645 _144654 P g a).
Proof. exact (MK_COMB (@lem8186201 _144530 _144607 _144645 P) (@lem8186200 _144529 _144530 _144607 _144645 _144654 P g a)). Qed.
Lemma lem8186207 {_144529 _144530 _144607 _144645 _144654 P : Type'} (a : P) : (term388 _144529 _144530 _144607 _144645 _144654 P a) = (term389 _144529 _144530 _144607 _144645 _144654 P a).
Proof. exact (fun_ext (fun g : _144530 -> _144607 => @lem8186202 _144529 _144530 _144607 _144645 _144654 P g a)). Qed.
Lemma lem8186208 {_144530 _144607 : Type'} : (@all (_144530 -> _144607)) = (@all (_144530 -> _144607)).
Proof. exact (eq_refl (@all (_144530 -> _144607))). Qed.
Lemma lem8186209 {_144529 _144530 _144607 _144645 _144654 P : Type'} (a : P) : (term390 _144529 _144530 _144607 _144645 _144654 P a) = (term391 _144529 _144530 _144607 _144645 _144654 P a).
Proof. exact (MK_COMB (@lem8186208 _144530 _144607) (@lem8186207 _144529 _144530 _144607 _144645 _144654 P a)). Qed.
Lemma lem8186214 {_144529 _144530 _144607 _144645 _144654 P : Type'} : (term392 _144529 _144530 _144607 _144645 _144654 P) = (term393 _144529 _144530 _144607 _144645 _144654 P).
Proof. exact (fun_ext (fun a : P => @lem8186209 _144529 _144530 _144607 _144645 _144654 P a)). Qed.
Lemma lem8186215 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8186224 {_144529 _144530 _144607 _144645 _144654 P : Type'} : (term394 _144529 _144530 _144607 _144645 _144654 P) = (term395 _144529 _144530 _144607 _144645 _144654 P).
Proof. exact (MK_COMB (@lem8186215 P) (@lem8186214 _144529 _144530 _144607 _144645 _144654 P)). Qed.
Lemma lem8186229 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term324 _144530 _144607 _144645 P pat f e g a) = (term324 _144530 _144607 _144645 P pat f e g a).
Proof. exact (eq_refl (term324 _144530 _144607 _144645 P pat f e g a)). Qed.
Lemma lem8186234 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (z : _144530) : (term396 _144529 _144530 _144607 P lt2 s a f g z) = (term396 _144529 _144530 _144607 P lt2 s a f g z).
Proof. exact (eq_refl (term396 _144529 _144530 _144607 P lt2 s a f g z)). Qed.
Lemma lem8186235 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term397 _144529 _144530 _144607 P lt2 s a f g) = (term397 _144529 _144530 _144607 P lt2 s a f g).
Proof. exact (fun_ext (fun z : _144530 => @lem8186234 _144529 _144530 _144607 P lt2 s a f g z)). Qed.
Lemma lem8186236 {_144530 : Type'} : (@all _144530) = (@all _144530).
Proof. exact (eq_refl (@all _144530)). Qed.
Lemma lem8186237 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term165 _144529 _144530 _144607 P lt2 s a f g) = (term165 _144529 _144530 _144607 P lt2 s a f g).
Proof. exact (MK_COMB (@lem8186236 _144530) (@lem8186235 _144529 _144530 _144607 P lt2 s a f g)). Qed.
Lemma lem8186238 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8186239 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term332 _144529 _144530 _144607 P lt2 s a f g) = (term332 _144529 _144530 _144607 P lt2 s a f g).
Proof. exact (MK_COMB (@lem8186238) (@lem8186237 _144529 _144530 _144607 P lt2 s a f g)). Qed.
Lemma lem8186240 {_144529 _144530 _144607 _144645 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term334 _144529 _144530 _144607 _144645 P lt2 s pat f e g a) = (term334 _144529 _144530 _144607 _144645 P lt2 s pat f e g a).
Proof. exact (MK_COMB (@lem8186239 _144529 _144530 _144607 P lt2 s a f g) (@lem8186229 _144530 _144607 _144645 P pat f e g a)). Qed.
Lemma lem8186243 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term335 _144530 _144607 P p g a) = (term335 _144530 _144607 P p g a).
Proof. exact (eq_refl (term335 _144530 _144607 P p g a)). Qed.
Lemma lem8186244 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term337 _144529 _144530 _144607 _144645 P p lt2 s pat f e g a) = (term337 _144529 _144530 _144607 _144645 P p lt2 s pat f e g a).
Proof. exact (MK_COMB (@lem8186243 _144530 _144607 P p g a) (@lem8186240 _144529 _144530 _144607 _144645 P lt2 s pat f e g a)). Qed.
Lemma lem8186247 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) : (term335 _144530 _144607 P p f a) = (term335 _144530 _144607 P p f a).
Proof. exact (eq_refl (term335 _144530 _144607 P p f a)). Qed.
Lemma lem8186248 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term339 _144529 _144530 _144607 _144645 P p lt2 s pat f e g a) = (term339 _144529 _144530 _144607 _144645 P p lt2 s pat f e g a).
Proof. exact (MK_COMB (@lem8186247 _144530 _144607 P p f a) (@lem8186244 _144529 _144530 _144607 _144645 P p lt2 s pat f e g a)). Qed.
Lemma lem8186249 {_144530 _144607 _144654 P : Type'} (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : ((y f a) = (y g a)) = ((y f a) = (y g a)).
Proof. exact (eq_refl ((y f a) = (y g a))). Qed.
Lemma lem8186254 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (z : _144530) : (term396 _144529 _144530 _144607 P lt2 s a f g z) = (term396 _144529 _144530 _144607 P lt2 s a f g z).
Proof. exact (eq_refl (term396 _144529 _144530 _144607 P lt2 s a f g z)). Qed.
Lemma lem8186255 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term397 _144529 _144530 _144607 P lt2 s a f g) = (term397 _144529 _144530 _144607 P lt2 s a f g).
Proof. exact (fun_ext (fun z : _144530 => @lem8186254 _144529 _144530 _144607 P lt2 s a f g z)). Qed.
Lemma lem8186256 {_144530 : Type'} : (@all _144530) = (@all _144530).
Proof. exact (eq_refl (@all _144530)). Qed.
Lemma lem8186257 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term165 _144529 _144530 _144607 P lt2 s a f g) = (term165 _144529 _144530 _144607 P lt2 s a f g).
Proof. exact (MK_COMB (@lem8186256 _144530) (@lem8186255 _144529 _144530 _144607 P lt2 s a f g)). Qed.
Lemma lem8186268 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term164 _144530 _144607 _144645 P p pat e q g a) = (term164 _144530 _144607 _144645 P p pat e q g a).
Proof. exact (eq_refl (term164 _144530 _144607 _144645 P p pat e q g a)). Qed.
Lemma lem8186269 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term167 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) = (term167 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g).
Proof. exact (MK_COMB (@lem8186268 _144530 _144607 _144645 P p pat e q g a) (@lem8186257 _144529 _144530 _144607 P lt2 s a f g)). Qed.
Lemma lem8186280 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) : (term164 _144530 _144607 _144645 P p pat e q f a) = (term164 _144530 _144607 _144645 P p pat e q f a).
Proof. exact (eq_refl (term164 _144530 _144607 _144645 P p pat e q f a)). Qed.
Lemma lem8186281 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term169 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) = (term169 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g).
Proof. exact (MK_COMB (@lem8186280 _144530 _144607 _144645 P p pat e q f a) (@lem8186269 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g)). Qed.
Lemma lem8186282 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8186283 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term171 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) = (term171 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g).
Proof. exact (MK_COMB (@lem8186282) (@lem8186281 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g)). Qed.
Lemma lem8186284 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (term173 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g a) = (term173 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g a).
Proof. exact (MK_COMB (@lem8186283 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) (@lem8186249 _144530 _144607 _144654 P f y g a)). Qed.
Lemma lem8186285 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) : (term175 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g) = (term175 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g).
Proof. exact (fun_ext (fun a : P => @lem8186284 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g a)). Qed.
Lemma lem8186286 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8186287 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) : (term177 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g) = (term177 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g).
Proof. exact (MK_COMB (@lem8186286 P) (@lem8186285 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g)). Qed.
Lemma lem8186288 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) : (term179 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y) = (term179 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y).
Proof. exact (fun_ext (fun g : _144530 -> _144607 => @lem8186287 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g)). Qed.
Lemma lem8186289 {_144530 _144607 : Type'} : (@all (_144530 -> _144607)) = (@all (_144530 -> _144607)).
Proof. exact (eq_refl (@all (_144530 -> _144607))). Qed.
Lemma lem8186290 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) : (term181 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y) = (term181 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y).
Proof. exact (MK_COMB (@lem8186289 _144530 _144607) (@lem8186288 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y)). Qed.
Lemma lem8186291 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (y : type564 _144530 _144607 _144654 P) : (term183 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y) = (term183 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y).
Proof. exact (fun_ext (fun f : _144530 -> _144607 => @lem8186290 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y)). Qed.
Lemma lem8186292 {_144530 _144607 : Type'} : (@all (_144530 -> _144607)) = (@all (_144530 -> _144607)).
Proof. exact (eq_refl (@all (_144530 -> _144607))). Qed.
Lemma lem8186293 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (y : type564 _144530 _144607 _144654 P) : (term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y) = (term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y).
Proof. exact (MK_COMB (@lem8186292 _144530 _144607) (@lem8186291 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y)). Qed.
Lemma lem8186294 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8186295 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (y : type564 _144530 _144607 _144654 P) : (term340 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y) = (term340 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y).
Proof. exact (MK_COMB (@lem8186294) (@lem8186293 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y)). Qed.
Lemma lem8186296 {_144529 _144530 _144607 _144645 _144654 P : Type'} (q : type560 _144530 _144607 P) (y : type564 _144530 _144607 _144654 P) (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term342 _144529 _144530 _144607 _144645 _144654 P q y p lt2 s pat f e g a) = (term342 _144529 _144530 _144607 _144645 _144654 P q y p lt2 s pat f e g a).
Proof. exact (MK_COMB (@lem8186295 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y) (@lem8186248 _144529 _144530 _144607 _144645 P p lt2 s pat f e g a)). Qed.
Lemma lem8186301 {_144530 _144607 P : Type'} (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : ((q f a) = (q g a)) = ((q f a) = (q g a)).
Proof. exact (eq_refl ((q f a) = (q g a))). Qed.
Lemma lem8186306 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (z : _144530) : (term396 _144529 _144530 _144607 P lt2 s a f g z) = (term396 _144529 _144530 _144607 P lt2 s a f g z).
Proof. exact (eq_refl (term396 _144529 _144530 _144607 P lt2 s a f g z)). Qed.
Lemma lem8186307 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term397 _144529 _144530 _144607 P lt2 s a f g) = (term397 _144529 _144530 _144607 P lt2 s a f g).
Proof. exact (fun_ext (fun z : _144530 => @lem8186306 _144529 _144530 _144607 P lt2 s a f g z)). Qed.
Lemma lem8186308 {_144530 : Type'} : (@all _144530) = (@all _144530).
Proof. exact (eq_refl (@all _144530)). Qed.
Lemma lem8186309 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term165 _144529 _144530 _144607 P lt2 s a f g) = (term165 _144529 _144530 _144607 P lt2 s a f g).
Proof. exact (MK_COMB (@lem8186308 _144530) (@lem8186307 _144529 _144530 _144607 P lt2 s a f g)). Qed.
Lemma lem8186316 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term205 _144530 _144607 _144645 P p pat e g a) = (term205 _144530 _144607 _144645 P p pat e g a).
Proof. exact (eq_refl (term205 _144530 _144607 _144645 P p pat e g a)). Qed.
Lemma lem8186317 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term207 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g) = (term207 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g).
Proof. exact (MK_COMB (@lem8186316 _144530 _144607 _144645 P p pat e g a) (@lem8186309 _144529 _144530 _144607 P lt2 s a f g)). Qed.
Lemma lem8186324 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (a : P) : (term205 _144530 _144607 _144645 P p pat e f a) = (term205 _144530 _144607 _144645 P p pat e f a).
Proof. exact (eq_refl (term205 _144530 _144607 _144645 P p pat e f a)). Qed.
Lemma lem8186325 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term209 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g) = (term209 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g).
Proof. exact (MK_COMB (@lem8186324 _144530 _144607 _144645 P p pat e f a) (@lem8186317 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g)). Qed.
Lemma lem8186326 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8186327 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term211 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g) = (term211 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g).
Proof. exact (MK_COMB (@lem8186326) (@lem8186325 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g)). Qed.
Lemma lem8186328 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term213 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g a) = (term213 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g a).
Proof. exact (MK_COMB (@lem8186327 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g) (@lem8186301 _144530 _144607 P f q g a)). Qed.
Lemma lem8186329 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) : (term215 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g) = (term215 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g).
Proof. exact (fun_ext (fun a : P => @lem8186328 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g a)). Qed.
Lemma lem8186330 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8186331 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) : (term217 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g) = (term217 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g).
Proof. exact (MK_COMB (@lem8186330 P) (@lem8186329 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g)). Qed.
Lemma lem8186332 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) : (term219 _144529 _144530 _144607 _144645 P p pat e lt2 s f q) = (term219 _144529 _144530 _144607 _144645 P p pat e lt2 s f q).
Proof. exact (fun_ext (fun g : _144530 -> _144607 => @lem8186331 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g)). Qed.
Lemma lem8186333 {_144530 _144607 : Type'} : (@all (_144530 -> _144607)) = (@all (_144530 -> _144607)).
Proof. exact (eq_refl (@all (_144530 -> _144607))). Qed.
Lemma lem8186334 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) : (term221 _144529 _144530 _144607 _144645 P p pat e lt2 s f q) = (term221 _144529 _144530 _144607 _144645 P p pat e lt2 s f q).
Proof. exact (MK_COMB (@lem8186333 _144530 _144607) (@lem8186332 _144529 _144530 _144607 _144645 P p pat e lt2 s f q)). Qed.
Lemma lem8186335 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (q : type560 _144530 _144607 P) : (term223 _144529 _144530 _144607 _144645 P p pat e lt2 s q) = (term223 _144529 _144530 _144607 _144645 P p pat e lt2 s q).
Proof. exact (fun_ext (fun f : _144530 -> _144607 => @lem8186334 _144529 _144530 _144607 _144645 P p pat e lt2 s f q)). Qed.
Lemma lem8186336 {_144530 _144607 : Type'} : (@all (_144530 -> _144607)) = (@all (_144530 -> _144607)).
Proof. exact (eq_refl (@all (_144530 -> _144607))). Qed.
Lemma lem8186337 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (q : type560 _144530 _144607 P) : (term224 _144529 _144530 _144607 _144645 P p pat e lt2 s q) = (term224 _144529 _144530 _144607 _144645 P p pat e lt2 s q).
Proof. exact (MK_COMB (@lem8186336 _144530 _144607) (@lem8186335 _144529 _144530 _144607 _144645 P p pat e lt2 s q)). Qed.
Lemma lem8186338 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8186339 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (q : type560 _144530 _144607 P) : (term343 _144529 _144530 _144607 _144645 P p pat e lt2 s q) = (term343 _144529 _144530 _144607 _144645 P p pat e lt2 s q).
Proof. exact (MK_COMB (@lem8186338) (@lem8186337 _144529 _144530 _144607 _144645 P p pat e lt2 s q)). Qed.
Lemma lem8186340 {_144529 _144530 _144607 _144645 _144654 P : Type'} (q : type560 _144530 _144607 P) (y : type564 _144530 _144607 _144654 P) (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term345 _144529 _144530 _144607 _144645 _144654 P q y p lt2 s pat f e g a) = (term345 _144529 _144530 _144607 _144645 _144654 P q y p lt2 s pat f e g a).
Proof. exact (MK_COMB (@lem8186339 _144529 _144530 _144607 _144645 P p pat e lt2 s q) (@lem8186296 _144529 _144530 _144607 _144645 _144654 P q y p lt2 s pat f e g a)). Qed.
Lemma lem8186341 {_144530 _144607 _144654 P : Type'} (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : ((t f a) = (t g a)) = ((t f a) = (t g a)).
Proof. exact (eq_refl ((t f a) = (t g a))). Qed.
Lemma lem8186346 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (z : _144530) : (term396 _144529 _144530 _144607 P lt2 s a f g z) = (term396 _144529 _144530 _144607 P lt2 s a f g z).
Proof. exact (eq_refl (term396 _144529 _144530 _144607 P lt2 s a f g z)). Qed.
Lemma lem8186347 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term397 _144529 _144530 _144607 P lt2 s a f g) = (term397 _144529 _144530 _144607 P lt2 s a f g).
Proof. exact (fun_ext (fun z : _144530 => @lem8186346 _144529 _144530 _144607 P lt2 s a f g z)). Qed.
Lemma lem8186348 {_144530 : Type'} : (@all _144530) = (@all _144530).
Proof. exact (eq_refl (@all _144530)). Qed.
Lemma lem8186349 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term165 _144529 _144530 _144607 P lt2 s a f g) = (term165 _144529 _144530 _144607 P lt2 s a f g).
Proof. exact (MK_COMB (@lem8186348 _144530) (@lem8186347 _144529 _144530 _144607 P lt2 s a f g)). Qed.
Lemma lem8186360 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term164 _144530 _144607 _144645 P p pat e q g a) = (term164 _144530 _144607 _144645 P p pat e q g a).
Proof. exact (eq_refl (term164 _144530 _144607 _144645 P p pat e q g a)). Qed.
Lemma lem8186361 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term167 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) = (term167 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g).
Proof. exact (MK_COMB (@lem8186360 _144530 _144607 _144645 P p pat e q g a) (@lem8186349 _144529 _144530 _144607 P lt2 s a f g)). Qed.
Lemma lem8186372 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) : (term164 _144530 _144607 _144645 P p pat e q f a) = (term164 _144530 _144607 _144645 P p pat e q f a).
Proof. exact (eq_refl (term164 _144530 _144607 _144645 P p pat e q f a)). Qed.
Lemma lem8186373 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term169 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) = (term169 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g).
Proof. exact (MK_COMB (@lem8186372 _144530 _144607 _144645 P p pat e q f a) (@lem8186361 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g)). Qed.
Lemma lem8186374 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8186375 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term171 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) = (term171 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g).
Proof. exact (MK_COMB (@lem8186374) (@lem8186373 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g)). Qed.
Lemma lem8186376 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (term173 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g a) = (term173 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g a).
Proof. exact (MK_COMB (@lem8186375 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) (@lem8186341 _144530 _144607 _144654 P f t g a)). Qed.
Lemma lem8186377 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) : (term175 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g) = (term175 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g).
Proof. exact (fun_ext (fun a : P => @lem8186376 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g a)). Qed.
Lemma lem8186378 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8186379 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) : (term177 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g) = (term177 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g).
Proof. exact (MK_COMB (@lem8186378 P) (@lem8186377 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g)). Qed.
Lemma lem8186380 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) : (term179 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t) = (term179 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t).
Proof. exact (fun_ext (fun g : _144530 -> _144607 => @lem8186379 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g)). Qed.
Lemma lem8186381 {_144530 _144607 : Type'} : (@all (_144530 -> _144607)) = (@all (_144530 -> _144607)).
Proof. exact (eq_refl (@all (_144530 -> _144607))). Qed.
Lemma lem8186382 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) : (term181 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t) = (term181 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t).
Proof. exact (MK_COMB (@lem8186381 _144530 _144607) (@lem8186380 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t)). Qed.
Lemma lem8186383 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (t : type564 _144530 _144607 _144654 P) : (term183 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) = (term183 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t).
Proof. exact (fun_ext (fun f : _144530 -> _144607 => @lem8186382 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t)). Qed.
Lemma lem8186384 {_144530 _144607 : Type'} : (@all (_144530 -> _144607)) = (@all (_144530 -> _144607)).
Proof. exact (eq_refl (@all (_144530 -> _144607))). Qed.
Lemma lem8186385 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (t : type564 _144530 _144607 _144654 P) : (term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) = (term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t).
Proof. exact (MK_COMB (@lem8186384 _144530 _144607) (@lem8186383 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t)). Qed.
Lemma lem8186386 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8186387 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (t : type564 _144530 _144607 _144654 P) : (term340 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) = (term340 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t).
Proof. exact (MK_COMB (@lem8186386) (@lem8186385 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t)). Qed.
Lemma lem8186388 {_144529 _144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (q : type560 _144530 _144607 P) (y : type564 _144530 _144607 _144654 P) (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term347 _144529 _144530 _144607 _144645 _144654 P t q y p lt2 s pat f e g a) = (term347 _144529 _144530 _144607 _144645 _144654 P t q y p lt2 s pat f e g a).
Proof. exact (MK_COMB (@lem8186387 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) (@lem8186340 _144529 _144530 _144607 _144645 _144654 P q y p lt2 s pat f e g a)). Qed.
Lemma lem8186389 {_144530 _144607 _144645 P : Type'} (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : ((e f a) = (e g a)) = ((e f a) = (e g a)).
Proof. exact (eq_refl ((e f a) = (e g a))). Qed.
Lemma lem8186394 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (z : _144530) : (term396 _144529 _144530 _144607 P lt2 s a f g z) = (term396 _144529 _144530 _144607 P lt2 s a f g z).
Proof. exact (eq_refl (term396 _144529 _144530 _144607 P lt2 s a f g z)). Qed.
Lemma lem8186395 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term397 _144529 _144530 _144607 P lt2 s a f g) = (term397 _144529 _144530 _144607 P lt2 s a f g).
Proof. exact (fun_ext (fun z : _144530 => @lem8186394 _144529 _144530 _144607 P lt2 s a f g z)). Qed.
Lemma lem8186396 {_144530 : Type'} : (@all _144530) = (@all _144530).
Proof. exact (eq_refl (@all _144530)). Qed.
Lemma lem8186397 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term165 _144529 _144530 _144607 P lt2 s a f g) = (term165 _144529 _144530 _144607 P lt2 s a f g).
Proof. exact (MK_COMB (@lem8186396 _144530) (@lem8186395 _144529 _144530 _144607 P lt2 s a f g)). Qed.
Lemma lem8186400 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term305 _144530 _144607 P p g a) = (term305 _144530 _144607 P p g a).
Proof. exact (eq_refl (term305 _144530 _144607 P p g a)). Qed.
Lemma lem8186401 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term318 _144529 _144530 _144607 P p lt2 s a f g) = (term318 _144529 _144530 _144607 P p lt2 s a f g).
Proof. exact (MK_COMB (@lem8186400 _144530 _144607 P p g a) (@lem8186397 _144529 _144530 _144607 P lt2 s a f g)). Qed.
Lemma lem8186404 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) : (term305 _144530 _144607 P p f a) = (term305 _144530 _144607 P p f a).
Proof. exact (eq_refl (term305 _144530 _144607 P p f a)). Qed.
Lemma lem8186405 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term317 _144529 _144530 _144607 P p lt2 s a f g) = (term317 _144529 _144530 _144607 P p lt2 s a f g).
Proof. exact (MK_COMB (@lem8186404 _144530 _144607 P p f a) (@lem8186401 _144529 _144530 _144607 P p lt2 s a f g)). Qed.
Lemma lem8186406 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8186407 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term287 _144529 _144530 _144607 P p lt2 s a f g) = (term287 _144529 _144530 _144607 P p lt2 s a f g).
Proof. exact (MK_COMB (@lem8186406) (@lem8186405 _144529 _144530 _144607 P p lt2 s a f g)). Qed.
Lemma lem8186408 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term398 _144529 _144530 _144607 _144645 P p lt2 s f e g a) = (term398 _144529 _144530 _144607 _144645 P p lt2 s f e g a).
Proof. exact (MK_COMB (@lem8186407 _144529 _144530 _144607 P p lt2 s a f g) (@lem8186389 _144530 _144607 _144645 P f e g a)). Qed.
Lemma lem8186409 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) : (term399 _144529 _144530 _144607 _144645 P p lt2 s f e g) = (term399 _144529 _144530 _144607 _144645 P p lt2 s f e g).
Proof. exact (fun_ext (fun a : P => @lem8186408 _144529 _144530 _144607 _144645 P p lt2 s f e g a)). Qed.
Lemma lem8186410 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8186411 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) : (term400 _144529 _144530 _144607 _144645 P p lt2 s f e g) = (term400 _144529 _144530 _144607 _144645 P p lt2 s f e g).
Proof. exact (MK_COMB (@lem8186410 P) (@lem8186409 _144529 _144530 _144607 _144645 P p lt2 s f e g)). Qed.
Lemma lem8186412 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) : (term401 _144529 _144530 _144607 _144645 P p lt2 s f e) = (term401 _144529 _144530 _144607 _144645 P p lt2 s f e).
Proof. exact (fun_ext (fun g : _144530 -> _144607 => @lem8186411 _144529 _144530 _144607 _144645 P p lt2 s f e g)). Qed.
Lemma lem8186413 {_144530 _144607 : Type'} : (@all (_144530 -> _144607)) = (@all (_144530 -> _144607)).
Proof. exact (eq_refl (@all (_144530 -> _144607))). Qed.
Lemma lem8186414 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) : (term402 _144529 _144530 _144607 _144645 P p lt2 s f e) = (term402 _144529 _144530 _144607 _144645 P p lt2 s f e).
Proof. exact (MK_COMB (@lem8186413 _144530 _144607) (@lem8186412 _144529 _144530 _144607 _144645 P p lt2 s f e)). Qed.
Lemma lem8186415 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (e : type564 _144530 _144607 _144645 P) : (term403 _144529 _144530 _144607 _144645 P p lt2 s e) = (term403 _144529 _144530 _144607 _144645 P p lt2 s e).
Proof. exact (fun_ext (fun f : _144530 -> _144607 => @lem8186414 _144529 _144530 _144607 _144645 P p lt2 s f e)). Qed.
Lemma lem8186416 {_144530 _144607 : Type'} : (@all (_144530 -> _144607)) = (@all (_144530 -> _144607)).
Proof. exact (eq_refl (@all (_144530 -> _144607))). Qed.
Lemma lem8186417 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (e : type564 _144530 _144607 _144645 P) : (term141 _144529 _144530 _144607 _144645 P p lt2 s e) = (term141 _144529 _144530 _144607 _144645 P p lt2 s e).
Proof. exact (MK_COMB (@lem8186416 _144530 _144607) (@lem8186415 _144529 _144530 _144607 _144645 P p lt2 s e)). Qed.
Lemma lem8186418 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8186419 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (e : type564 _144530 _144607 _144645 P) : (term348 _144529 _144530 _144607 _144645 P p lt2 s e) = (term348 _144529 _144530 _144607 _144645 P p lt2 s e).
Proof. exact (MK_COMB (@lem8186418) (@lem8186417 _144529 _144530 _144607 _144645 P p lt2 s e)). Qed.
Lemma lem8186420 {_144529 _144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (q : type560 _144530 _144607 P) (y : type564 _144530 _144607 _144654 P) (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term350 _144529 _144530 _144607 _144645 _144654 P t q y p lt2 s pat f e g a) = (term350 _144529 _144530 _144607 _144645 _144654 P t q y p lt2 s pat f e g a).
Proof. exact (MK_COMB (@lem8186419 _144529 _144530 _144607 _144645 P p lt2 s e) (@lem8186388 _144529 _144530 _144607 _144645 _144654 P t q y p lt2 s pat f e g a)). Qed.
Lemma lem8186421 {_144530 _144607 _144645 P : Type'} (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : ((pat f a) = (pat g a)) = ((pat f a) = (pat g a)).
Proof. exact (eq_refl ((pat f a) = (pat g a))). Qed.
Lemma lem8186426 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (z : _144530) : (term396 _144529 _144530 _144607 P lt2 s a f g z) = (term396 _144529 _144530 _144607 P lt2 s a f g z).
Proof. exact (eq_refl (term396 _144529 _144530 _144607 P lt2 s a f g z)). Qed.
Lemma lem8186427 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term397 _144529 _144530 _144607 P lt2 s a f g) = (term397 _144529 _144530 _144607 P lt2 s a f g).
Proof. exact (fun_ext (fun z : _144530 => @lem8186426 _144529 _144530 _144607 P lt2 s a f g z)). Qed.
Lemma lem8186428 {_144530 : Type'} : (@all _144530) = (@all _144530).
Proof. exact (eq_refl (@all _144530)). Qed.
Lemma lem8186429 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term165 _144529 _144530 _144607 P lt2 s a f g) = (term165 _144529 _144530 _144607 P lt2 s a f g).
Proof. exact (MK_COMB (@lem8186428 _144530) (@lem8186427 _144529 _144530 _144607 P lt2 s a f g)). Qed.
Lemma lem8186432 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term305 _144530 _144607 P p g a) = (term305 _144530 _144607 P p g a).
Proof. exact (eq_refl (term305 _144530 _144607 P p g a)). Qed.
Lemma lem8186433 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term318 _144529 _144530 _144607 P p lt2 s a f g) = (term318 _144529 _144530 _144607 P p lt2 s a f g).
Proof. exact (MK_COMB (@lem8186432 _144530 _144607 P p g a) (@lem8186429 _144529 _144530 _144607 P lt2 s a f g)). Qed.
Lemma lem8186436 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) : (term305 _144530 _144607 P p f a) = (term305 _144530 _144607 P p f a).
Proof. exact (eq_refl (term305 _144530 _144607 P p f a)). Qed.
Lemma lem8186437 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term317 _144529 _144530 _144607 P p lt2 s a f g) = (term317 _144529 _144530 _144607 P p lt2 s a f g).
Proof. exact (MK_COMB (@lem8186436 _144530 _144607 P p f a) (@lem8186433 _144529 _144530 _144607 P p lt2 s a f g)). Qed.
Lemma lem8186438 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8186439 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term287 _144529 _144530 _144607 P p lt2 s a f g) = (term287 _144529 _144530 _144607 P p lt2 s a f g).
Proof. exact (MK_COMB (@lem8186438) (@lem8186437 _144529 _144530 _144607 P p lt2 s a f g)). Qed.
Lemma lem8186440 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term398 _144529 _144530 _144607 _144645 P p lt2 s f pat g a) = (term398 _144529 _144530 _144607 _144645 P p lt2 s f pat g a).
Proof. exact (MK_COMB (@lem8186439 _144529 _144530 _144607 P p lt2 s a f g) (@lem8186421 _144530 _144607 _144645 P f pat g a)). Qed.
Lemma lem8186441 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) : (term399 _144529 _144530 _144607 _144645 P p lt2 s f pat g) = (term399 _144529 _144530 _144607 _144645 P p lt2 s f pat g).
Proof. exact (fun_ext (fun a : P => @lem8186440 _144529 _144530 _144607 _144645 P p lt2 s f pat g a)). Qed.
Lemma lem8186442 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8186443 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) : (term400 _144529 _144530 _144607 _144645 P p lt2 s f pat g) = (term400 _144529 _144530 _144607 _144645 P p lt2 s f pat g).
Proof. exact (MK_COMB (@lem8186442 P) (@lem8186441 _144529 _144530 _144607 _144645 P p lt2 s f pat g)). Qed.
Lemma lem8186444 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) : (term401 _144529 _144530 _144607 _144645 P p lt2 s f pat) = (term401 _144529 _144530 _144607 _144645 P p lt2 s f pat).
Proof. exact (fun_ext (fun g : _144530 -> _144607 => @lem8186443 _144529 _144530 _144607 _144645 P p lt2 s f pat g)). Qed.
Lemma lem8186445 {_144530 _144607 : Type'} : (@all (_144530 -> _144607)) = (@all (_144530 -> _144607)).
Proof. exact (eq_refl (@all (_144530 -> _144607))). Qed.
Lemma lem8186446 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) : (term402 _144529 _144530 _144607 _144645 P p lt2 s f pat) = (term402 _144529 _144530 _144607 _144645 P p lt2 s f pat).
Proof. exact (MK_COMB (@lem8186445 _144530 _144607) (@lem8186444 _144529 _144530 _144607 _144645 P p lt2 s f pat)). Qed.
Lemma lem8186447 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) : (term403 _144529 _144530 _144607 _144645 P p lt2 s pat) = (term403 _144529 _144530 _144607 _144645 P p lt2 s pat).
Proof. exact (fun_ext (fun f : _144530 -> _144607 => @lem8186446 _144529 _144530 _144607 _144645 P p lt2 s f pat)). Qed.
Lemma lem8186448 {_144530 _144607 : Type'} : (@all (_144530 -> _144607)) = (@all (_144530 -> _144607)).
Proof. exact (eq_refl (@all (_144530 -> _144607))). Qed.
Lemma lem8186449 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) : (term141 _144529 _144530 _144607 _144645 P p lt2 s pat) = (term141 _144529 _144530 _144607 _144645 P p lt2 s pat).
Proof. exact (MK_COMB (@lem8186448 _144530 _144607) (@lem8186447 _144529 _144530 _144607 _144645 P p lt2 s pat)). Qed.
Lemma lem8186450 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8186451 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) : (term348 _144529 _144530 _144607 _144645 P p lt2 s pat) = (term348 _144529 _144530 _144607 _144645 P p lt2 s pat).
Proof. exact (MK_COMB (@lem8186450) (@lem8186449 _144529 _144530 _144607 _144645 P p lt2 s pat)). Qed.
Lemma lem8186452 {_144529 _144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (q : type560 _144530 _144607 P) (y : type564 _144530 _144607 _144654 P) (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term351 _144529 _144530 _144607 _144645 _144654 P t q y p lt2 s pat f e g a) = (term351 _144529 _144530 _144607 _144645 _144654 P t q y p lt2 s pat f e g a).
Proof. exact (MK_COMB (@lem8186451 _144529 _144530 _144607 _144645 P p lt2 s pat) (@lem8186420 _144529 _144530 _144607 _144645 _144654 P t q y p lt2 s pat f e g a)). Qed.
Lemma lem8186453 {_144529 _144530 _144607 _144645 _144654 P : Type'} (q : type560 _144530 _144607 P) (y : type564 _144530 _144607 _144654 P) (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term353 _144529 _144530 _144607 _144645 _144654 P q y p lt2 s pat f e g a) = (term353 _144529 _144530 _144607 _144645 _144654 P q y p lt2 s pat f e g a).
Proof. exact (fun_ext (fun t : type564 _144530 _144607 _144654 P => @lem8186452 _144529 _144530 _144607 _144645 _144654 P t q y p lt2 s pat f e g a)). Qed.
Lemma lem8186454 {_144530 _144607 _144654 P : Type'} : (@all ((_144530 -> _144607) -> P -> _144654)) = (@all ((_144530 -> _144607) -> P -> _144654)).
Proof. exact (eq_refl (@all ((_144530 -> _144607) -> P -> _144654))). Qed.
Lemma lem8186455 {_144529 _144530 _144607 _144645 _144654 P : Type'} (q : type560 _144530 _144607 P) (y : type564 _144530 _144607 _144654 P) (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term355 _144529 _144530 _144607 _144645 _144654 P q y p lt2 s pat f e g a) = (term355 _144529 _144530 _144607 _144645 _144654 P q y p lt2 s pat f e g a).
Proof. exact (MK_COMB (@lem8186454 _144530 _144607 _144654 P) (@lem8186453 _144529 _144530 _144607 _144645 _144654 P q y p lt2 s pat f e g a)). Qed.
Lemma lem8186456 {_144529 _144530 _144607 _144645 _144654 P : Type'} (y : type564 _144530 _144607 _144654 P) (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term357 _144529 _144530 _144607 _144645 _144654 P y p lt2 s pat f e g a) = (term357 _144529 _144530 _144607 _144645 _144654 P y p lt2 s pat f e g a).
Proof. exact (fun_ext (fun q : type560 _144530 _144607 P => @lem8186455 _144529 _144530 _144607 _144645 _144654 P q y p lt2 s pat f e g a)). Qed.
Lemma lem8186457 {_144530 _144607 P : Type'} : (@all ((_144530 -> _144607) -> P -> Prop)) = (@all ((_144530 -> _144607) -> P -> Prop)).
Proof. exact (eq_refl (@all ((_144530 -> _144607) -> P -> Prop))). Qed.
Lemma lem8186458 {_144529 _144530 _144607 _144645 _144654 P : Type'} (y : type564 _144530 _144607 _144654 P) (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term359 _144529 _144530 _144607 _144645 _144654 P y p lt2 s pat f e g a) = (term359 _144529 _144530 _144607 _144645 _144654 P y p lt2 s pat f e g a).
Proof. exact (MK_COMB (@lem8186457 _144530 _144607 P) (@lem8186456 _144529 _144530 _144607 _144645 _144654 P y p lt2 s pat f e g a)). Qed.
Lemma lem8186459 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term361 _144529 _144530 _144607 _144645 _144654 P p lt2 s pat f e g a) = (term361 _144529 _144530 _144607 _144645 _144654 P p lt2 s pat f e g a).
Proof. exact (fun_ext (fun y : type564 _144530 _144607 _144654 P => @lem8186458 _144529 _144530 _144607 _144645 _144654 P y p lt2 s pat f e g a)). Qed.
Lemma lem8186460 {_144530 _144607 _144654 P : Type'} : (@all ((_144530 -> _144607) -> P -> _144654)) = (@all ((_144530 -> _144607) -> P -> _144654)).
Proof. exact (eq_refl (@all ((_144530 -> _144607) -> P -> _144654))). Qed.
Lemma lem8186461 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term363 _144529 _144530 _144607 _144645 _144654 P p lt2 s pat f e g a) = (term363 _144529 _144530 _144607 _144645 _144654 P p lt2 s pat f e g a).
Proof. exact (MK_COMB (@lem8186460 _144530 _144607 _144654 P) (@lem8186459 _144529 _144530 _144607 _144645 _144654 P p lt2 s pat f e g a)). Qed.
Lemma lem8186462 {_144529 _144530 _144607 _144645 _144654 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term365 _144529 _144530 _144607 _144645 _144654 P lt2 s pat f e g a) = (term365 _144529 _144530 _144607 _144645 _144654 P lt2 s pat f e g a).
Proof. exact (fun_ext (fun p : type560 _144530 _144607 P => @lem8186461 _144529 _144530 _144607 _144645 _144654 P p lt2 s pat f e g a)). Qed.
Lemma lem8186463 {_144530 _144607 P : Type'} : (@all ((_144530 -> _144607) -> P -> Prop)) = (@all ((_144530 -> _144607) -> P -> Prop)).
Proof. exact (eq_refl (@all ((_144530 -> _144607) -> P -> Prop))). Qed.
Lemma lem8186464 {_144529 _144530 _144607 _144645 _144654 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term367 _144529 _144530 _144607 _144645 _144654 P lt2 s pat f e g a) = (term367 _144529 _144530 _144607 _144645 _144654 P lt2 s pat f e g a).
Proof. exact (MK_COMB (@lem8186463 _144530 _144607 P) (@lem8186462 _144529 _144530 _144607 _144645 _144654 P lt2 s pat f e g a)). Qed.
Lemma lem8186465 {_144529 _144530 _144607 _144645 _144654 P : Type'} (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term369 _144529 _144530 _144607 _144645 _144654 P s pat f e g a) = (term369 _144529 _144530 _144607 _144645 _144654 P s pat f e g a).
Proof. exact (fun_ext (fun lt2 : type1470 _144529 _144530 => @lem8186464 _144529 _144530 _144607 _144645 _144654 P lt2 s pat f e g a)). Qed.
Lemma lem8186466 {_144529 _144530 : Type'} : (@all (_144530 -> _144529 -> Prop)) = (@all (_144530 -> _144529 -> Prop)).
Proof. exact (eq_refl (@all (_144530 -> _144529 -> Prop))). Qed.
Lemma lem8186467 {_144529 _144530 _144607 _144645 _144654 P : Type'} (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term371 _144529 _144530 _144607 _144645 _144654 P s pat f e g a) = (term371 _144529 _144530 _144607 _144645 _144654 P s pat f e g a).
Proof. exact (MK_COMB (@lem8186466 _144529 _144530) (@lem8186465 _144529 _144530 _144607 _144645 _144654 P s pat f e g a)). Qed.
Lemma lem8186468 {_144529 _144530 _144607 _144645 _144654 P : Type'} (pat : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term373 _144529 _144530 _144607 _144645 _144654 P pat f e g a) = (term373 _144529 _144530 _144607 _144645 _144654 P pat f e g a).
Proof. exact (fun_ext (fun s : P -> _144529 => @lem8186467 _144529 _144530 _144607 _144645 _144654 P s pat f e g a)). Qed.
Lemma lem8186469 {_144529 P : Type'} : (@all (P -> _144529)) = (@all (P -> _144529)).
Proof. exact (eq_refl (@all (P -> _144529))). Qed.
Lemma lem8186470 {_144529 _144530 _144607 _144645 _144654 P : Type'} (pat : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term375 _144529 _144530 _144607 _144645 _144654 P pat f e g a) = (term375 _144529 _144530 _144607 _144645 _144654 P pat f e g a).
Proof. exact (MK_COMB (@lem8186469 _144529 P) (@lem8186468 _144529 _144530 _144607 _144645 _144654 P pat f e g a)). Qed.
Lemma lem8186471 {_144529 _144530 _144607 _144645 _144654 P : Type'} (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term377 _144529 _144530 _144607 _144645 _144654 P f e g a) = (term377 _144529 _144530 _144607 _144645 _144654 P f e g a).
Proof. exact (fun_ext (fun pat : type564 _144530 _144607 _144645 P => @lem8186470 _144529 _144530 _144607 _144645 _144654 P pat f e g a)). Qed.
Lemma lem8186472 {_144530 _144607 _144645 P : Type'} : (@all ((_144530 -> _144607) -> P -> _144645)) = (@all ((_144530 -> _144607) -> P -> _144645)).
Proof. exact (eq_refl (@all ((_144530 -> _144607) -> P -> _144645))). Qed.
Lemma lem8186473 {_144529 _144530 _144607 _144645 _144654 P : Type'} (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term379 _144529 _144530 _144607 _144645 _144654 P f e g a) = (term379 _144529 _144530 _144607 _144645 _144654 P f e g a).
Proof. exact (MK_COMB (@lem8186472 _144530 _144607 _144645 P) (@lem8186471 _144529 _144530 _144607 _144645 _144654 P f e g a)). Qed.
Lemma lem8186474 {_144529 _144530 _144607 _144645 _144654 P : Type'} (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term381 _144529 _144530 _144607 _144645 _144654 P e g a) = (term381 _144529 _144530 _144607 _144645 _144654 P e g a).
Proof. exact (fun_ext (fun f : _144530 -> _144607 => @lem8186473 _144529 _144530 _144607 _144645 _144654 P f e g a)). Qed.
Lemma lem8186475 {_144530 _144607 : Type'} : (@all (_144530 -> _144607)) = (@all (_144530 -> _144607)).
Proof. exact (eq_refl (@all (_144530 -> _144607))). Qed.
Lemma lem8186476 {_144529 _144530 _144607 _144645 _144654 P : Type'} (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term383 _144529 _144530 _144607 _144645 _144654 P e g a) = (term383 _144529 _144530 _144607 _144645 _144654 P e g a).
Proof. exact (MK_COMB (@lem8186475 _144530 _144607) (@lem8186474 _144529 _144530 _144607 _144645 _144654 P e g a)). Qed.
Lemma lem8186477 {_144529 _144530 _144607 _144645 _144654 P : Type'} (g : _144530 -> _144607) (a : P) : (term385 _144529 _144530 _144607 _144645 _144654 P g a) = (term385 _144529 _144530 _144607 _144645 _144654 P g a).
Proof. exact (fun_ext (fun e : type564 _144530 _144607 _144645 P => @lem8186476 _144529 _144530 _144607 _144645 _144654 P e g a)). Qed.
Lemma lem8186478 {_144530 _144607 _144645 P : Type'} : (@all ((_144530 -> _144607) -> P -> _144645)) = (@all ((_144530 -> _144607) -> P -> _144645)).
Proof. exact (eq_refl (@all ((_144530 -> _144607) -> P -> _144645))). Qed.
Lemma lem8186479 {_144529 _144530 _144607 _144645 _144654 P : Type'} (g : _144530 -> _144607) (a : P) : (term387 _144529 _144530 _144607 _144645 _144654 P g a) = (term387 _144529 _144530 _144607 _144645 _144654 P g a).
Proof. exact (MK_COMB (@lem8186478 _144530 _144607 _144645 P) (@lem8186477 _144529 _144530 _144607 _144645 _144654 P g a)). Qed.
Lemma lem8186480 {_144529 _144530 _144607 _144645 _144654 P : Type'} (a : P) : (term389 _144529 _144530 _144607 _144645 _144654 P a) = (term389 _144529 _144530 _144607 _144645 _144654 P a).
Proof. exact (fun_ext (fun g : _144530 -> _144607 => @lem8186479 _144529 _144530 _144607 _144645 _144654 P g a)). Qed.
Lemma lem8186481 {_144530 _144607 : Type'} : (@all (_144530 -> _144607)) = (@all (_144530 -> _144607)).
Proof. exact (eq_refl (@all (_144530 -> _144607))). Qed.
Lemma lem8186482 {_144529 _144530 _144607 _144645 _144654 P : Type'} (a : P) : (term391 _144529 _144530 _144607 _144645 _144654 P a) = (term391 _144529 _144530 _144607 _144645 _144654 P a).
Proof. exact (MK_COMB (@lem8186481 _144530 _144607) (@lem8186480 _144529 _144530 _144607 _144645 _144654 P a)). Qed.
Lemma lem8186483 {_144529 _144530 _144607 _144645 _144654 P : Type'} : (term393 _144529 _144530 _144607 _144645 _144654 P) = (term393 _144529 _144530 _144607 _144645 _144654 P).
Proof. exact (fun_ext (fun a : P => @lem8186482 _144529 _144530 _144607 _144645 _144654 P a)). Qed.
Lemma lem8186484 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8186485 {_144529 _144530 _144607 _144645 _144654 P : Type'} : (term395 _144529 _144530 _144607 _144645 _144654 P) = (term395 _144529 _144530 _144607 _144645 _144654 P).
Proof. exact (MK_COMB (@lem8186484 P) (@lem8186483 _144529 _144530 _144607 _144645 _144654 P)). Qed.
Lemma lem8186760 {_144529 _144530 _144607 _144645 _144654 P : Type'} : (term394 _144529 _144530 _144607 _144645 _144654 P) = (term395 _144529 _144530 _144607 _144645 _144654 P).
Proof. exact (TRANS (@lem8186224 _144529 _144530 _144607 _144645 _144654 P) (@lem8186485 _144529 _144530 _144607 _144645 _144654 P)). Qed.
Lemma lem8186761 {_144529 _144530 _144607 _144645 _144654 P : Type'} : (term395 _144529 _144530 _144607 _144645 _144654 P) = (term394 _144529 _144530 _144607 _144645 _144654 P).
Proof. exact (SYM (@lem8186760 _144529 _144530 _144607 _144645 _144654 P)). Qed.
Lemma lem8186762 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (h1 : term141 _144529 _144530 _144607 _144645 P p lt2 s pat) : term141 _144529 _144530 _144607 _144645 P p lt2 s pat.
Proof. exact (h1). Qed.
Lemma lem8186763 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (e : type564 _144530 _144607 _144645 P) (h1 : term141 _144529 _144530 _144607 _144645 P p lt2 s e) : term141 _144529 _144530 _144607 _144645 P p lt2 s e.
Proof. exact (h1). Qed.
Lemma lem8186764 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (t : type564 _144530 _144607 _144654 P) (h1 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t.
Proof. exact (h1). Qed.
Lemma lem8186765 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (q : type560 _144530 _144607 P) (h1 : term224 _144529 _144530 _144607 _144645 P p pat e lt2 s q) : term224 _144529 _144530 _144607 _144645 P p pat e lt2 s q.
Proof. exact (h1). Qed.
Lemma lem8186766 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (y : type564 _144530 _144607 _144654 P) (h1 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y) : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y.
Proof. exact (h1). Qed.
Lemma lem8186769 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) : term165 _144529 _144530 _144607 P lt2 s a f g.
Proof. exact (h1). Qed.
Lemma lem8186771 (p : Prop) : p = (term7 p).
Proof. exact (EQ_MP (@lem10578 p) (@lem10597 p)). Qed.
Lemma lem8186772 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term324 _144530 _144607 _144645 P pat f e g a) = (term325 _144530 _144607 _144645 P pat f e g a).
Proof. exact (@lem8186771 (term324 _144530 _144607 _144645 P pat f e g a)). Qed.
Lemma lem8186773 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term325 _144530 _144607 _144645 P pat f e g a) = (term324 _144530 _144607 _144645 P pat f e g a).
Proof. exact (SYM (@lem8186772 _144530 _144607 _144645 P pat f e g a)). Qed.
Lemma lem8186774 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) (h1 : term326 _144530 _144607 _144645 P pat f e g a) : term326 _144530 _144607 _144645 P pat f e g a.
Proof. exact (h1). Qed.
Lemma lem8186783 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (z : _144530) : (term404 _144529 _144530 _144607 P lt2 s a f g z) = (term405 _144529 _144530 _144607 P lt2 s a f g z).
Proof. exact (@lem17362 (term406 _144529 _144530 P lt2 z s a) ((f z) = (g z))). Qed.
Lemma lem8186784 {_144530 : Type'} (P : _144530 -> Prop) : (term407 _144530 P) = (term408 _144530 P).
Proof. exact (@lem18392 _144530 P). Qed.
Lemma lem8186785 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term409 _144529 _144530 _144607 P lt2 s a f g) = (term410 _144529 _144530 _144607 P lt2 s a f g).
Proof. exact (@lem8186784 _144530 (term397 _144529 _144530 _144607 P lt2 s a f g)). Qed.
Lemma lem8186786 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (z : _144530) : (term411 _144529 _144530 _144607 P lt2 s a f g z) = (term396 _144529 _144530 _144607 P lt2 s a f g z).
Proof. exact (eq_refl (term411 _144529 _144530 _144607 P lt2 s a f g z)). Qed.
Lemma lem8186787 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8186788 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (z : _144530) : (term412 _144529 _144530 _144607 P lt2 s a f g z) = (term404 _144529 _144530 _144607 P lt2 s a f g z).
Proof. exact (MK_COMB (@lem8186787) (@lem8186786 _144529 _144530 _144607 P lt2 s a f g z)). Qed.
Lemma lem8186789 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (z : _144530) : (term412 _144529 _144530 _144607 P lt2 s a f g z) = (term405 _144529 _144530 _144607 P lt2 s a f g z).
Proof. exact (TRANS (@lem8186788 _144529 _144530 _144607 P lt2 s a f g z) (@lem8186783 _144529 _144530 _144607 P lt2 s a f g z)). Qed.
Lemma lem8186790 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term413 _144529 _144530 _144607 P lt2 s a f g) = (term414 _144529 _144530 _144607 P lt2 s a f g).
Proof. exact (fun_ext (fun z : _144530 => @lem8186789 _144529 _144530 _144607 P lt2 s a f g z)). Qed.
Lemma lem8186791 {_144530 : Type'} : (@ex _144530) = (@ex _144530).
Proof. exact (eq_refl (@ex _144530)). Qed.
Lemma lem8186792 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term410 _144529 _144530 _144607 P lt2 s a f g) = (term415 _144529 _144530 _144607 P lt2 s a f g).
Proof. exact (MK_COMB (@lem8186791 _144530) (@lem8186790 _144529 _144530 _144607 P lt2 s a f g)). Qed.
Lemma lem8186793 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term409 _144529 _144530 _144607 P lt2 s a f g) = (term415 _144529 _144530 _144607 P lt2 s a f g).
Proof. exact (TRANS (@lem8186785 _144529 _144530 _144607 P lt2 s a f g) (@lem8186792 _144529 _144530 _144607 P lt2 s a f g)). Qed.
Lemma lem8186795 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term416 _144530 _144607 P p g a) = (term416 _144530 _144607 P p g a).
Proof. exact (eq_refl (term416 _144530 _144607 P p g a)). Qed.
Lemma lem8186796 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term417 _144529 _144530 _144607 P p lt2 s a f g) = (term418 _144529 _144530 _144607 P p lt2 s a f g).
Proof. exact (MK_COMB (@lem8186795 _144530 _144607 P p g a) (@lem8186793 _144529 _144530 _144607 P lt2 s a f g)). Qed.
Lemma lem8186797 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term419 _144529 _144530 _144607 P p lt2 s a f g) = (term417 _144529 _144530 _144607 P p lt2 s a f g).
Proof. exact (@lem17045 (p g a) (term165 _144529 _144530 _144607 P lt2 s a f g)). Qed.
Lemma lem8186798 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term419 _144529 _144530 _144607 P p lt2 s a f g) = (term418 _144529 _144530 _144607 P p lt2 s a f g).
Proof. exact (TRANS (@lem8186797 _144529 _144530 _144607 P p lt2 s a f g) (@lem8186796 _144529 _144530 _144607 P p lt2 s a f g)). Qed.
Lemma lem8186800 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) : (term416 _144530 _144607 P p f a) = (term416 _144530 _144607 P p f a).
Proof. exact (eq_refl (term416 _144530 _144607 P p f a)). Qed.
Lemma lem8186801 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term420 _144529 _144530 _144607 P p lt2 s a f g) = (term421 _144529 _144530 _144607 P p lt2 s a f g).
Proof. exact (MK_COMB (@lem8186800 _144530 _144607 P p f a) (@lem8186798 _144529 _144530 _144607 P p lt2 s a f g)). Qed.
Lemma lem8186802 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term422 _144529 _144530 _144607 P p lt2 s a f g) = (term420 _144529 _144530 _144607 P p lt2 s a f g).
Proof. exact (@lem17045 (p f a) (term318 _144529 _144530 _144607 P p lt2 s a f g)). Qed.
Lemma lem8186803 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term422 _144529 _144530 _144607 P p lt2 s a f g) = (term421 _144529 _144530 _144607 P p lt2 s a f g).
Proof. exact (TRANS (@lem8186802 _144529 _144530 _144607 P p lt2 s a f g) (@lem8186801 _144529 _144530 _144607 P p lt2 s a f g)). Qed.
Lemma lem8186804 {_144530 _144607 _144645 P : Type'} (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : ((pat f a) = (pat g a)) = ((pat f a) = (pat g a)).
Proof. exact (eq_refl ((pat f a) = (pat g a))). Qed.
Lemma lem8186805 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8186806 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term423 _144529 _144530 _144607 P p lt2 s a f g) = (term424 _144529 _144530 _144607 P p lt2 s a f g).
Proof. exact (MK_COMB (@lem8186805) (@lem8186803 _144529 _144530 _144607 P p lt2 s a f g)). Qed.
Lemma lem8186807 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term425 _144529 _144530 _144607 _144645 P p lt2 s f pat g a) = (term426 _144529 _144530 _144607 _144645 P p lt2 s f pat g a).
Proof. exact (MK_COMB (@lem8186806 _144529 _144530 _144607 P p lt2 s a f g) (@lem8186804 _144530 _144607 _144645 P f pat g a)). Qed.
Lemma lem8186808 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term398 _144529 _144530 _144607 _144645 P p lt2 s f pat g a) = (term425 _144529 _144530 _144607 _144645 P p lt2 s f pat g a).
Proof. exact (@lem17265 (term317 _144529 _144530 _144607 P p lt2 s a f g) ((pat f a) = (pat g a))). Qed.
Lemma lem8186809 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term398 _144529 _144530 _144607 _144645 P p lt2 s f pat g a) = (term426 _144529 _144530 _144607 _144645 P p lt2 s f pat g a).
Proof. exact (TRANS (@lem8186808 _144529 _144530 _144607 _144645 P p lt2 s f pat g a) (@lem8186807 _144529 _144530 _144607 _144645 P p lt2 s f pat g a)). Qed.
Lemma lem8186810 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) : (term399 _144529 _144530 _144607 _144645 P p lt2 s f pat g) = (term427 _144529 _144530 _144607 _144645 P p lt2 s f pat g).
Proof. exact (fun_ext (fun a : P => @lem8186809 _144529 _144530 _144607 _144645 P p lt2 s f pat g a)). Qed.
Lemma lem8186811 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8186812 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) : (term400 _144529 _144530 _144607 _144645 P p lt2 s f pat g) = (term428 _144529 _144530 _144607 _144645 P p lt2 s f pat g).
Proof. exact (MK_COMB (@lem8186811 P) (@lem8186810 _144529 _144530 _144607 _144645 P p lt2 s f pat g)). Qed.
Lemma lem8186813 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) : (term401 _144529 _144530 _144607 _144645 P p lt2 s f pat) = (term429 _144529 _144530 _144607 _144645 P p lt2 s f pat).
Proof. exact (fun_ext (fun g : _144530 -> _144607 => @lem8186812 _144529 _144530 _144607 _144645 P p lt2 s f pat g)). Qed.
Lemma lem8186814 {_144530 _144607 : Type'} : (@all (_144530 -> _144607)) = (@all (_144530 -> _144607)).
Proof. exact (eq_refl (@all (_144530 -> _144607))). Qed.
Lemma lem8186815 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) : (term402 _144529 _144530 _144607 _144645 P p lt2 s f pat) = (term430 _144529 _144530 _144607 _144645 P p lt2 s f pat).
Proof. exact (MK_COMB (@lem8186814 _144530 _144607) (@lem8186813 _144529 _144530 _144607 _144645 P p lt2 s f pat)). Qed.
Lemma lem8186816 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) : (term403 _144529 _144530 _144607 _144645 P p lt2 s pat) = (term431 _144529 _144530 _144607 _144645 P p lt2 s pat).
Proof. exact (fun_ext (fun f : _144530 -> _144607 => @lem8186815 _144529 _144530 _144607 _144645 P p lt2 s f pat)). Qed.
Lemma lem8186817 {_144530 _144607 : Type'} : (@all (_144530 -> _144607)) = (@all (_144530 -> _144607)).
Proof. exact (eq_refl (@all (_144530 -> _144607))). Qed.
Lemma lem8186818 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) : (term141 _144529 _144530 _144607 _144645 P p lt2 s pat) = (term432 _144529 _144530 _144607 _144645 P p lt2 s pat).
Proof. exact (MK_COMB (@lem8186817 _144530 _144607) (@lem8186816 _144529 _144530 _144607 _144645 P p lt2 s pat)). Qed.
Lemma lem8186925 {A : Type'} (P : Prop) (Q : A -> Prop) : (term433 A P Q) = (term434 A P Q).
Proof. exact (EQ_MP (@lem18911 A P Q) (@lem18910 A P Q)). Qed.
Lemma lem8186926 {_144530 : Type'} (P : Prop) (Q : _144530 -> Prop) : (term433 _144530 P Q) = (term434 _144530 P Q).
Proof. exact (@lem8186925 _144530 P Q). Qed.
Lemma lem8186927 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term435 _144529 _144530 _144607 P p lt2 s a f g) = (term436 _144529 _144530 _144607 P p lt2 s a f g).
Proof. exact (@lem8186926 _144530 (term437 _144530 _144607 P p g a) (term414 _144529 _144530 _144607 P lt2 s a f g)). Qed.
Lemma lem8186928 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (z : _144530) : (term438 _144529 _144530 _144607 P lt2 s a f g z) = (term405 _144529 _144530 _144607 P lt2 s a f g z).
Proof. exact (eq_refl (term438 _144529 _144530 _144607 P lt2 s a f g z)). Qed.
Lemma lem8186929 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term439 _144529 _144530 _144607 P lt2 s a f g) = (term414 _144529 _144530 _144607 P lt2 s a f g).
Proof. exact (fun_ext (fun z : _144530 => @lem8186928 _144529 _144530 _144607 P lt2 s a f g z)). Qed.
Lemma lem8186930 {_144530 : Type'} : (@ex _144530) = (@ex _144530).
Proof. exact (eq_refl (@ex _144530)). Qed.
Lemma lem8186931 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term440 _144529 _144530 _144607 P lt2 s a f g) = (term415 _144529 _144530 _144607 P lt2 s a f g).
Proof. exact (MK_COMB (@lem8186930 _144530) (@lem8186929 _144529 _144530 _144607 P lt2 s a f g)). Qed.
Lemma lem8186932 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term416 _144530 _144607 P p g a) = (term416 _144530 _144607 P p g a).
Proof. exact (eq_refl (term416 _144530 _144607 P p g a)). Qed.
Lemma lem8186933 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term435 _144529 _144530 _144607 P p lt2 s a f g) = (term418 _144529 _144530 _144607 P p lt2 s a f g).
Proof. exact (MK_COMB (@lem8186932 _144530 _144607 P p g a) (@lem8186931 _144529 _144530 _144607 P lt2 s a f g)). Qed.
Lemma lem8186934 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8186935 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term441 _144529 _144530 _144607 P p lt2 s a f g) = (term442 _144529 _144530 _144607 P p lt2 s a f g).
Proof. exact (MK_COMB (@lem8186934) (@lem8186933 _144529 _144530 _144607 P p lt2 s a f g)). Qed.
Lemma lem8186936 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (z : _144530) : (term438 _144529 _144530 _144607 P lt2 s a f g z) = (term405 _144529 _144530 _144607 P lt2 s a f g z).
Proof. exact (eq_refl (term438 _144529 _144530 _144607 P lt2 s a f g z)). Qed.
Lemma lem8186937 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term416 _144530 _144607 P p g a) = (term416 _144530 _144607 P p g a).
Proof. exact (eq_refl (term416 _144530 _144607 P p g a)). Qed.
Lemma lem8186938 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (z : _144530) : (term443 _144529 _144530 _144607 P p lt2 s a f g z) = (term444 _144529 _144530 _144607 P p lt2 s a f g z).
Proof. exact (MK_COMB (@lem8186937 _144530 _144607 P p g a) (@lem8186936 _144529 _144530 _144607 P lt2 s a f g z)). Qed.
Lemma lem8186939 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term445 _144529 _144530 _144607 P p lt2 s a f g) = (term446 _144529 _144530 _144607 P p lt2 s a f g).
Proof. exact (fun_ext (fun z : _144530 => @lem8186938 _144529 _144530 _144607 P p lt2 s a f g z)). Qed.
Lemma lem8186940 {_144530 : Type'} : (@ex _144530) = (@ex _144530).
Proof. exact (eq_refl (@ex _144530)). Qed.
Lemma lem8186941 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term436 _144529 _144530 _144607 P p lt2 s a f g) = (term447 _144529 _144530 _144607 P p lt2 s a f g).
Proof. exact (MK_COMB (@lem8186940 _144530) (@lem8186939 _144529 _144530 _144607 P p lt2 s a f g)). Qed.
Lemma lem8186942 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : ((term435 _144529 _144530 _144607 P p lt2 s a f g) = (term436 _144529 _144530 _144607 P p lt2 s a f g)) = ((term418 _144529 _144530 _144607 P p lt2 s a f g) = (term447 _144529 _144530 _144607 P p lt2 s a f g)).
Proof. exact (MK_COMB (@lem8186935 _144529 _144530 _144607 P p lt2 s a f g) (@lem8186941 _144529 _144530 _144607 P p lt2 s a f g)). Qed.
Lemma lem8186943 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term418 _144529 _144530 _144607 P p lt2 s a f g) = (term447 _144529 _144530 _144607 P p lt2 s a f g).
Proof. exact (EQ_MP (@lem8186942 _144529 _144530 _144607 P p lt2 s a f g) (@lem8186927 _144529 _144530 _144607 P p lt2 s a f g)). Qed.
Lemma lem8186944 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) : (term416 _144530 _144607 P p f a) = (term416 _144530 _144607 P p f a).
Proof. exact (eq_refl (term416 _144530 _144607 P p f a)). Qed.
Lemma lem8186945 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term421 _144529 _144530 _144607 P p lt2 s a f g) = (term448 _144529 _144530 _144607 P p lt2 s a f g).
Proof. exact (MK_COMB (@lem8186944 _144530 _144607 P p f a) (@lem8186943 _144529 _144530 _144607 P p lt2 s a f g)). Qed.
Lemma lem8186947 {A : Type'} (P : Prop) (Q : A -> Prop) : (term433 A P Q) = (term434 A P Q).
Proof. exact (EQ_MP (@lem18911 A P Q) (@lem18910 A P Q)). Qed.
Lemma lem8186948 {_144530 : Type'} (P : Prop) (Q : _144530 -> Prop) : (term433 _144530 P Q) = (term434 _144530 P Q).
Proof. exact (@lem8186947 _144530 P Q). Qed.
Lemma lem8186949 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term449 _144529 _144530 _144607 P p lt2 s a f g) = (term450 _144529 _144530 _144607 P p lt2 s a f g).
Proof. exact (@lem8186948 _144530 (term437 _144530 _144607 P p f a) (term446 _144529 _144530 _144607 P p lt2 s a f g)). Qed.
Lemma lem8186950 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (z : _144530) : (term451 _144529 _144530 _144607 P p lt2 s a f g z) = (term444 _144529 _144530 _144607 P p lt2 s a f g z).
Proof. exact (eq_refl (term451 _144529 _144530 _144607 P p lt2 s a f g z)). Qed.
Lemma lem8186951 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term452 _144529 _144530 _144607 P p lt2 s a f g) = (term446 _144529 _144530 _144607 P p lt2 s a f g).
Proof. exact (fun_ext (fun z : _144530 => @lem8186950 _144529 _144530 _144607 P p lt2 s a f g z)). Qed.
Lemma lem8186952 {_144530 : Type'} : (@ex _144530) = (@ex _144530).
Proof. exact (eq_refl (@ex _144530)). Qed.
Lemma lem8186953 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term453 _144529 _144530 _144607 P p lt2 s a f g) = (term447 _144529 _144530 _144607 P p lt2 s a f g).
Proof. exact (MK_COMB (@lem8186952 _144530) (@lem8186951 _144529 _144530 _144607 P p lt2 s a f g)). Qed.
Lemma lem8186954 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) : (term416 _144530 _144607 P p f a) = (term416 _144530 _144607 P p f a).
Proof. exact (eq_refl (term416 _144530 _144607 P p f a)). Qed.
Lemma lem8186955 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term449 _144529 _144530 _144607 P p lt2 s a f g) = (term448 _144529 _144530 _144607 P p lt2 s a f g).
Proof. exact (MK_COMB (@lem8186954 _144530 _144607 P p f a) (@lem8186953 _144529 _144530 _144607 P p lt2 s a f g)). Qed.
Lemma lem8186956 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8186957 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term454 _144529 _144530 _144607 P p lt2 s a f g) = (term455 _144529 _144530 _144607 P p lt2 s a f g).
Proof. exact (MK_COMB (@lem8186956) (@lem8186955 _144529 _144530 _144607 P p lt2 s a f g)). Qed.
Lemma lem8186958 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (z : _144530) : (term451 _144529 _144530 _144607 P p lt2 s a f g z) = (term444 _144529 _144530 _144607 P p lt2 s a f g z).
Proof. exact (eq_refl (term451 _144529 _144530 _144607 P p lt2 s a f g z)). Qed.
Lemma lem8186959 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) : (term416 _144530 _144607 P p f a) = (term416 _144530 _144607 P p f a).
Proof. exact (eq_refl (term416 _144530 _144607 P p f a)). Qed.
Lemma lem8186960 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (z : _144530) : (term456 _144529 _144530 _144607 P p lt2 s a f g z) = (term457 _144529 _144530 _144607 P p lt2 s a f g z).
Proof. exact (MK_COMB (@lem8186959 _144530 _144607 P p f a) (@lem8186958 _144529 _144530 _144607 P p lt2 s a f g z)). Qed.
Lemma lem8186961 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term458 _144529 _144530 _144607 P p lt2 s a f g) = (term459 _144529 _144530 _144607 P p lt2 s a f g).
Proof. exact (fun_ext (fun z : _144530 => @lem8186960 _144529 _144530 _144607 P p lt2 s a f g z)). Qed.
Lemma lem8186962 {_144530 : Type'} : (@ex _144530) = (@ex _144530).
Proof. exact (eq_refl (@ex _144530)). Qed.
Lemma lem8186963 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term450 _144529 _144530 _144607 P p lt2 s a f g) = (term460 _144529 _144530 _144607 P p lt2 s a f g).
Proof. exact (MK_COMB (@lem8186962 _144530) (@lem8186961 _144529 _144530 _144607 P p lt2 s a f g)). Qed.
Lemma lem8186964 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : ((term449 _144529 _144530 _144607 P p lt2 s a f g) = (term450 _144529 _144530 _144607 P p lt2 s a f g)) = ((term448 _144529 _144530 _144607 P p lt2 s a f g) = (term460 _144529 _144530 _144607 P p lt2 s a f g)).
Proof. exact (MK_COMB (@lem8186957 _144529 _144530 _144607 P p lt2 s a f g) (@lem8186963 _144529 _144530 _144607 P p lt2 s a f g)). Qed.
Lemma lem8186965 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term448 _144529 _144530 _144607 P p lt2 s a f g) = (term460 _144529 _144530 _144607 P p lt2 s a f g).
Proof. exact (EQ_MP (@lem8186964 _144529 _144530 _144607 P p lt2 s a f g) (@lem8186949 _144529 _144530 _144607 P p lt2 s a f g)). Qed.
Lemma lem8186966 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term421 _144529 _144530 _144607 P p lt2 s a f g) = (term460 _144529 _144530 _144607 P p lt2 s a f g).
Proof. exact (TRANS (@lem8186945 _144529 _144530 _144607 P p lt2 s a f g) (@lem8186965 _144529 _144530 _144607 P p lt2 s a f g)). Qed.
Lemma lem8186967 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8186968 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term424 _144529 _144530 _144607 P p lt2 s a f g) = (term461 _144529 _144530 _144607 P p lt2 s a f g).
Proof. exact (MK_COMB (@lem8186967) (@lem8186966 _144529 _144530 _144607 P p lt2 s a f g)). Qed.
Lemma lem8186969 {_144530 _144607 _144645 P : Type'} (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : ((pat f a) = (pat g a)) = ((pat f a) = (pat g a)).
Proof. exact (eq_refl ((pat f a) = (pat g a))). Qed.
Lemma lem8186970 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term426 _144529 _144530 _144607 _144645 P p lt2 s f pat g a) = (term462 _144529 _144530 _144607 _144645 P p lt2 s f pat g a).
Proof. exact (MK_COMB (@lem8186968 _144529 _144530 _144607 P p lt2 s a f g) (@lem8186969 _144530 _144607 _144645 P f pat g a)). Qed.
Lemma lem8186972 {A : Type'} (P : A -> Prop) (Q : Prop) : (term463 A P Q) = (term464 A P Q).
Proof. exact (EQ_MP (@lem18905 A P Q) (@lem18904 A P Q)). Qed.
Lemma lem8186973 {_144530 : Type'} (P : _144530 -> Prop) (Q : Prop) : (term463 _144530 P Q) = (term464 _144530 P Q).
Proof. exact (@lem8186972 _144530 P Q). Qed.
Lemma lem8186974 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term465 _144529 _144530 _144607 _144645 P p lt2 s f pat g a) = (term466 _144529 _144530 _144607 _144645 P p lt2 s f pat g a).
Proof. exact (@lem8186973 _144530 (term459 _144529 _144530 _144607 P p lt2 s a f g) ((pat f a) = (pat g a))). Qed.
Lemma lem8186975 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (z : _144530) : (term467 _144529 _144530 _144607 P p lt2 s a f g z) = (term457 _144529 _144530 _144607 P p lt2 s a f g z).
Proof. exact (eq_refl (term467 _144529 _144530 _144607 P p lt2 s a f g z)). Qed.
Lemma lem8186976 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term468 _144529 _144530 _144607 P p lt2 s a f g) = (term459 _144529 _144530 _144607 P p lt2 s a f g).
Proof. exact (fun_ext (fun z : _144530 => @lem8186975 _144529 _144530 _144607 P p lt2 s a f g z)). Qed.
Lemma lem8186977 {_144530 : Type'} : (@ex _144530) = (@ex _144530).
Proof. exact (eq_refl (@ex _144530)). Qed.
Lemma lem8186978 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term469 _144529 _144530 _144607 P p lt2 s a f g) = (term460 _144529 _144530 _144607 P p lt2 s a f g).
Proof. exact (MK_COMB (@lem8186977 _144530) (@lem8186976 _144529 _144530 _144607 P p lt2 s a f g)). Qed.
Lemma lem8186979 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8186980 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term470 _144529 _144530 _144607 P p lt2 s a f g) = (term461 _144529 _144530 _144607 P p lt2 s a f g).
Proof. exact (MK_COMB (@lem8186979) (@lem8186978 _144529 _144530 _144607 P p lt2 s a f g)). Qed.
Lemma lem8186981 {_144530 _144607 _144645 P : Type'} (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : ((pat f a) = (pat g a)) = ((pat f a) = (pat g a)).
Proof. exact (eq_refl ((pat f a) = (pat g a))). Qed.
Lemma lem8186982 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term465 _144529 _144530 _144607 _144645 P p lt2 s f pat g a) = (term462 _144529 _144530 _144607 _144645 P p lt2 s f pat g a).
Proof. exact (MK_COMB (@lem8186980 _144529 _144530 _144607 P p lt2 s a f g) (@lem8186981 _144530 _144607 _144645 P f pat g a)). Qed.
Lemma lem8186983 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8186984 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term471 _144529 _144530 _144607 _144645 P p lt2 s f pat g a) = (term472 _144529 _144530 _144607 _144645 P p lt2 s f pat g a).
Proof. exact (MK_COMB (@lem8186983) (@lem8186982 _144529 _144530 _144607 _144645 P p lt2 s f pat g a)). Qed.
Lemma lem8186985 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (z : _144530) : (term467 _144529 _144530 _144607 P p lt2 s a f g z) = (term457 _144529 _144530 _144607 P p lt2 s a f g z).
Proof. exact (eq_refl (term467 _144529 _144530 _144607 P p lt2 s a f g z)). Qed.
Lemma lem8186986 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8186987 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (z : _144530) : (term473 _144529 _144530 _144607 P p lt2 s a f g z) = (term474 _144529 _144530 _144607 P p lt2 s a f g z).
Proof. exact (MK_COMB (@lem8186986) (@lem8186985 _144529 _144530 _144607 P p lt2 s a f g z)). Qed.
Lemma lem8186988 {_144530 _144607 _144645 P : Type'} (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : ((pat f a) = (pat g a)) = ((pat f a) = (pat g a)).
Proof. exact (eq_refl ((pat f a) = (pat g a))). Qed.
Lemma lem8186989 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : _144530) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term475 _144529 _144530 _144607 _144645 P p lt2 s z f pat g a) = (term476 _144529 _144530 _144607 _144645 P p lt2 s z f pat g a).
Proof. exact (MK_COMB (@lem8186987 _144529 _144530 _144607 P p lt2 s a f g z) (@lem8186988 _144530 _144607 _144645 P f pat g a)). Qed.
Lemma lem8186990 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term477 _144529 _144530 _144607 _144645 P p lt2 s f pat g a) = (term478 _144529 _144530 _144607 _144645 P p lt2 s f pat g a).
Proof. exact (fun_ext (fun z : _144530 => @lem8186989 _144529 _144530 _144607 _144645 P p lt2 s z f pat g a)). Qed.
Lemma lem8186991 {_144530 : Type'} : (@ex _144530) = (@ex _144530).
Proof. exact (eq_refl (@ex _144530)). Qed.
Lemma lem8186992 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term466 _144529 _144530 _144607 _144645 P p lt2 s f pat g a) = (term479 _144529 _144530 _144607 _144645 P p lt2 s f pat g a).
Proof. exact (MK_COMB (@lem8186991 _144530) (@lem8186990 _144529 _144530 _144607 _144645 P p lt2 s f pat g a)). Qed.
Lemma lem8186993 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : ((term465 _144529 _144530 _144607 _144645 P p lt2 s f pat g a) = (term466 _144529 _144530 _144607 _144645 P p lt2 s f pat g a)) = ((term462 _144529 _144530 _144607 _144645 P p lt2 s f pat g a) = (term479 _144529 _144530 _144607 _144645 P p lt2 s f pat g a)).
Proof. exact (MK_COMB (@lem8186984 _144529 _144530 _144607 _144645 P p lt2 s f pat g a) (@lem8186992 _144529 _144530 _144607 _144645 P p lt2 s f pat g a)). Qed.
Lemma lem8186994 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term462 _144529 _144530 _144607 _144645 P p lt2 s f pat g a) = (term479 _144529 _144530 _144607 _144645 P p lt2 s f pat g a).
Proof. exact (EQ_MP (@lem8186993 _144529 _144530 _144607 _144645 P p lt2 s f pat g a) (@lem8186974 _144529 _144530 _144607 _144645 P p lt2 s f pat g a)). Qed.
Lemma lem8186995 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term426 _144529 _144530 _144607 _144645 P p lt2 s f pat g a) = (term479 _144529 _144530 _144607 _144645 P p lt2 s f pat g a).
Proof. exact (TRANS (@lem8186970 _144529 _144530 _144607 _144645 P p lt2 s f pat g a) (@lem8186994 _144529 _144530 _144607 _144645 P p lt2 s f pat g a)). Qed.
Lemma lem8186996 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) : (term427 _144529 _144530 _144607 _144645 P p lt2 s f pat g) = (term480 _144529 _144530 _144607 _144645 P p lt2 s f pat g).
Proof. exact (fun_ext (fun a : P => @lem8186995 _144529 _144530 _144607 _144645 P p lt2 s f pat g a)). Qed.
Lemma lem8186997 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8186998 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) : (term428 _144529 _144530 _144607 _144645 P p lt2 s f pat g) = (term481 _144529 _144530 _144607 _144645 P p lt2 s f pat g).
Proof. exact (MK_COMB (@lem8186997 P) (@lem8186996 _144529 _144530 _144607 _144645 P p lt2 s f pat g)). Qed.
Lemma lem8187000 {A B : Type'} (P : type1413 A B) : (term482 A B P) = (term483 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem8187001 {_144530 P : Type'} (P' : type1470 _144530 P) : (term484 _144530 P P') = (term485 _144530 P P').
Proof. exact (@lem8187000 P _144530 P'). Qed.
Lemma lem8187002 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) : (term486 _144529 _144530 _144607 _144645 P p lt2 s f pat g) = (term487 _144529 _144530 _144607 _144645 P p lt2 s f pat g).
Proof. exact (@lem8187001 _144530 P (term488 _144529 _144530 _144607 _144645 P p lt2 s f pat g)). Qed.
Lemma lem8187003 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term489 _144529 _144530 _144607 _144645 P p lt2 s f pat g a) = (term478 _144529 _144530 _144607 _144645 P p lt2 s f pat g a).
Proof. exact (eq_refl (term489 _144529 _144530 _144607 _144645 P p lt2 s f pat g a)). Qed.
Lemma lem8187004 {_144530 : Type'} (z : _144530) : z = z.
Proof. exact (eq_refl z). Qed.
Lemma lem8187005 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) (z : _144530) : (term490 _144529 _144530 _144607 _144645 P p lt2 s f pat g a z) = (term491 _144529 _144530 _144607 _144645 P p lt2 s f pat g a z).
Proof. exact (MK_COMB (@lem8187003 _144529 _144530 _144607 _144645 P p lt2 s f pat g a) (@lem8187004 _144530 z)). Qed.
Lemma lem8187006 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : _144530) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term491 _144529 _144530 _144607 _144645 P p lt2 s f pat g a z) = (term476 _144529 _144530 _144607 _144645 P p lt2 s z f pat g a).
Proof. exact (eq_refl (term491 _144529 _144530 _144607 _144645 P p lt2 s f pat g a z)). Qed.
Lemma lem8187007 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : _144530) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term490 _144529 _144530 _144607 _144645 P p lt2 s f pat g a z) = (term476 _144529 _144530 _144607 _144645 P p lt2 s z f pat g a).
Proof. exact (TRANS (@lem8187005 _144529 _144530 _144607 _144645 P p lt2 s f pat g a z) (@lem8187006 _144529 _144530 _144607 _144645 P p lt2 s z f pat g a)). Qed.
Lemma lem8187008 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term492 _144529 _144530 _144607 _144645 P p lt2 s f pat g a) = (term478 _144529 _144530 _144607 _144645 P p lt2 s f pat g a).
Proof. exact (fun_ext (fun z : _144530 => @lem8187007 _144529 _144530 _144607 _144645 P p lt2 s z f pat g a)). Qed.
Lemma lem8187009 {_144530 : Type'} : (@ex _144530) = (@ex _144530).
Proof. exact (eq_refl (@ex _144530)). Qed.
Lemma lem8187010 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term493 _144529 _144530 _144607 _144645 P p lt2 s f pat g a) = (term479 _144529 _144530 _144607 _144645 P p lt2 s f pat g a).
Proof. exact (MK_COMB (@lem8187009 _144530) (@lem8187008 _144529 _144530 _144607 _144645 P p lt2 s f pat g a)). Qed.
Lemma lem8187011 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) : (term494 _144529 _144530 _144607 _144645 P p lt2 s f pat g) = (term480 _144529 _144530 _144607 _144645 P p lt2 s f pat g).
Proof. exact (fun_ext (fun a : P => @lem8187010 _144529 _144530 _144607 _144645 P p lt2 s f pat g a)). Qed.
Lemma lem8187012 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8187013 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) : (term486 _144529 _144530 _144607 _144645 P p lt2 s f pat g) = (term481 _144529 _144530 _144607 _144645 P p lt2 s f pat g).
Proof. exact (MK_COMB (@lem8187012 P) (@lem8187011 _144529 _144530 _144607 _144645 P p lt2 s f pat g)). Qed.
Lemma lem8187014 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8187015 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) : (term495 _144529 _144530 _144607 _144645 P p lt2 s f pat g) = (term496 _144529 _144530 _144607 _144645 P p lt2 s f pat g).
Proof. exact (MK_COMB (@lem8187014) (@lem8187013 _144529 _144530 _144607 _144645 P p lt2 s f pat g)). Qed.
Lemma lem8187016 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term489 _144529 _144530 _144607 _144645 P p lt2 s f pat g a) = (term478 _144529 _144530 _144607 _144645 P p lt2 s f pat g a).
Proof. exact (eq_refl (term489 _144529 _144530 _144607 _144645 P p lt2 s f pat g a)). Qed.
Lemma lem8187017 {_144530 P : Type'} (z : P -> _144530) (a : P) : (z a) = (z a).
Proof. exact (eq_refl (z a)). Qed.
Lemma lem8187018 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (z : P -> _144530) (a : P) : (term497 _144529 _144530 _144607 _144645 P p lt2 s f pat g z a) = (term498 _144529 _144530 _144607 _144645 P p lt2 s f pat g z a).
Proof. exact (MK_COMB (@lem8187016 _144529 _144530 _144607 _144645 P p lt2 s f pat g a) (@lem8187017 _144530 P z a)). Qed.
Lemma lem8187019 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : P -> _144530) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term498 _144529 _144530 _144607 _144645 P p lt2 s f pat g z a) = (term499 _144529 _144530 _144607 _144645 P p lt2 s z f pat g a).
Proof. exact (eq_refl (term498 _144529 _144530 _144607 _144645 P p lt2 s f pat g z a)). Qed.
Lemma lem8187020 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : P -> _144530) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term497 _144529 _144530 _144607 _144645 P p lt2 s f pat g z a) = (term499 _144529 _144530 _144607 _144645 P p lt2 s z f pat g a).
Proof. exact (TRANS (@lem8187018 _144529 _144530 _144607 _144645 P p lt2 s f pat g z a) (@lem8187019 _144529 _144530 _144607 _144645 P p lt2 s z f pat g a)). Qed.
Lemma lem8187021 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : P -> _144530) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) : (term500 _144529 _144530 _144607 _144645 P p lt2 s f pat g z) = (term501 _144529 _144530 _144607 _144645 P p lt2 s z f pat g).
Proof. exact (fun_ext (fun a : P => @lem8187020 _144529 _144530 _144607 _144645 P p lt2 s z f pat g a)). Qed.
Lemma lem8187022 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8187023 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : P -> _144530) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) : (term502 _144529 _144530 _144607 _144645 P p lt2 s f pat g z) = (term503 _144529 _144530 _144607 _144645 P p lt2 s z f pat g).
Proof. exact (MK_COMB (@lem8187022 P) (@lem8187021 _144529 _144530 _144607 _144645 P p lt2 s z f pat g)). Qed.
Lemma lem8187024 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) : (term504 _144529 _144530 _144607 _144645 P p lt2 s f pat g) = (term505 _144529 _144530 _144607 _144645 P p lt2 s f pat g).
Proof. exact (fun_ext (fun z : P -> _144530 => @lem8187023 _144529 _144530 _144607 _144645 P p lt2 s z f pat g)). Qed.
Lemma lem8187025 {_144530 P : Type'} : (@ex (P -> _144530)) = (@ex (P -> _144530)).
Proof. exact (eq_refl (@ex (P -> _144530))). Qed.
Lemma lem8187026 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) : (term487 _144529 _144530 _144607 _144645 P p lt2 s f pat g) = (term506 _144529 _144530 _144607 _144645 P p lt2 s f pat g).
Proof. exact (MK_COMB (@lem8187025 _144530 P) (@lem8187024 _144529 _144530 _144607 _144645 P p lt2 s f pat g)). Qed.
Lemma lem8187027 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) : ((term486 _144529 _144530 _144607 _144645 P p lt2 s f pat g) = (term487 _144529 _144530 _144607 _144645 P p lt2 s f pat g)) = ((term481 _144529 _144530 _144607 _144645 P p lt2 s f pat g) = (term506 _144529 _144530 _144607 _144645 P p lt2 s f pat g)).
Proof. exact (MK_COMB (@lem8187015 _144529 _144530 _144607 _144645 P p lt2 s f pat g) (@lem8187026 _144529 _144530 _144607 _144645 P p lt2 s f pat g)). Qed.
Lemma lem8187028 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) : (term481 _144529 _144530 _144607 _144645 P p lt2 s f pat g) = (term506 _144529 _144530 _144607 _144645 P p lt2 s f pat g).
Proof. exact (EQ_MP (@lem8187027 _144529 _144530 _144607 _144645 P p lt2 s f pat g) (@lem8187002 _144529 _144530 _144607 _144645 P p lt2 s f pat g)). Qed.
Lemma lem8187029 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) : (term428 _144529 _144530 _144607 _144645 P p lt2 s f pat g) = (term506 _144529 _144530 _144607 _144645 P p lt2 s f pat g).
Proof. exact (TRANS (@lem8186998 _144529 _144530 _144607 _144645 P p lt2 s f pat g) (@lem8187028 _144529 _144530 _144607 _144645 P p lt2 s f pat g)). Qed.
Lemma lem8187030 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) : (term429 _144529 _144530 _144607 _144645 P p lt2 s f pat) = (term507 _144529 _144530 _144607 _144645 P p lt2 s f pat).
Proof. exact (fun_ext (fun g : _144530 -> _144607 => @lem8187029 _144529 _144530 _144607 _144645 P p lt2 s f pat g)). Qed.
Lemma lem8187031 {_144530 _144607 : Type'} : (@all (_144530 -> _144607)) = (@all (_144530 -> _144607)).
Proof. exact (eq_refl (@all (_144530 -> _144607))). Qed.
Lemma lem8187032 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) : (term430 _144529 _144530 _144607 _144645 P p lt2 s f pat) = (term508 _144529 _144530 _144607 _144645 P p lt2 s f pat).
Proof. exact (MK_COMB (@lem8187031 _144530 _144607) (@lem8187030 _144529 _144530 _144607 _144645 P p lt2 s f pat)). Qed.
Lemma lem8187034 {A B : Type'} (P : type1413 A B) : (term482 A B P) = (term483 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem8187035 {_144530 _144607 P : Type'} (P' : type537 _144530 _144607 P) : (term509 _144530 _144607 P P') = (term510 _144530 _144607 P P').
Proof. exact (@lem8187034 (_144530 -> _144607) (P -> _144530) P'). Qed.
Lemma lem8187036 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) : (term511 _144529 _144530 _144607 _144645 P p lt2 s f pat) = (term512 _144529 _144530 _144607 _144645 P p lt2 s f pat).
Proof. exact (@lem8187035 _144530 _144607 P (term513 _144529 _144530 _144607 _144645 P p lt2 s f pat)). Qed.
Lemma lem8187037 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) : (term514 _144529 _144530 _144607 _144645 P p lt2 s f pat g) = (term505 _144529 _144530 _144607 _144645 P p lt2 s f pat g).
Proof. exact (eq_refl (term514 _144529 _144530 _144607 _144645 P p lt2 s f pat g)). Qed.
Lemma lem8187038 {_144530 P : Type'} (z : P -> _144530) : z = z.
Proof. exact (eq_refl z). Qed.
Lemma lem8187039 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (z : P -> _144530) : (term515 _144529 _144530 _144607 _144645 P p lt2 s f pat g z) = (term516 _144529 _144530 _144607 _144645 P p lt2 s f pat g z).
Proof. exact (MK_COMB (@lem8187037 _144529 _144530 _144607 _144645 P p lt2 s f pat g) (@lem8187038 _144530 P z)). Qed.
Lemma lem8187040 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : P -> _144530) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) : (term516 _144529 _144530 _144607 _144645 P p lt2 s f pat g z) = (term503 _144529 _144530 _144607 _144645 P p lt2 s z f pat g).
Proof. exact (eq_refl (term516 _144529 _144530 _144607 _144645 P p lt2 s f pat g z)). Qed.
Lemma lem8187041 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : P -> _144530) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) : (term515 _144529 _144530 _144607 _144645 P p lt2 s f pat g z) = (term503 _144529 _144530 _144607 _144645 P p lt2 s z f pat g).
Proof. exact (TRANS (@lem8187039 _144529 _144530 _144607 _144645 P p lt2 s f pat g z) (@lem8187040 _144529 _144530 _144607 _144645 P p lt2 s z f pat g)). Qed.
Lemma lem8187042 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) : (term517 _144529 _144530 _144607 _144645 P p lt2 s f pat g) = (term505 _144529 _144530 _144607 _144645 P p lt2 s f pat g).
Proof. exact (fun_ext (fun z : P -> _144530 => @lem8187041 _144529 _144530 _144607 _144645 P p lt2 s z f pat g)). Qed.
Lemma lem8187043 {_144530 P : Type'} : (@ex (P -> _144530)) = (@ex (P -> _144530)).
Proof. exact (eq_refl (@ex (P -> _144530))). Qed.
Lemma lem8187044 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) : (term518 _144529 _144530 _144607 _144645 P p lt2 s f pat g) = (term506 _144529 _144530 _144607 _144645 P p lt2 s f pat g).
Proof. exact (MK_COMB (@lem8187043 _144530 P) (@lem8187042 _144529 _144530 _144607 _144645 P p lt2 s f pat g)). Qed.
Lemma lem8187045 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) : (term519 _144529 _144530 _144607 _144645 P p lt2 s f pat) = (term507 _144529 _144530 _144607 _144645 P p lt2 s f pat).
Proof. exact (fun_ext (fun g : _144530 -> _144607 => @lem8187044 _144529 _144530 _144607 _144645 P p lt2 s f pat g)). Qed.
Lemma lem8187046 {_144530 _144607 : Type'} : (@all (_144530 -> _144607)) = (@all (_144530 -> _144607)).
Proof. exact (eq_refl (@all (_144530 -> _144607))). Qed.
Lemma lem8187047 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) : (term511 _144529 _144530 _144607 _144645 P p lt2 s f pat) = (term508 _144529 _144530 _144607 _144645 P p lt2 s f pat).
Proof. exact (MK_COMB (@lem8187046 _144530 _144607) (@lem8187045 _144529 _144530 _144607 _144645 P p lt2 s f pat)). Qed.
Lemma lem8187048 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8187049 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) : (term520 _144529 _144530 _144607 _144645 P p lt2 s f pat) = (term521 _144529 _144530 _144607 _144645 P p lt2 s f pat).
Proof. exact (MK_COMB (@lem8187048) (@lem8187047 _144529 _144530 _144607 _144645 P p lt2 s f pat)). Qed.
Lemma lem8187050 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) : (term514 _144529 _144530 _144607 _144645 P p lt2 s f pat g) = (term505 _144529 _144530 _144607 _144645 P p lt2 s f pat g).
Proof. exact (eq_refl (term514 _144529 _144530 _144607 _144645 P p lt2 s f pat g)). Qed.
Lemma lem8187051 {_144530 _144607 P : Type'} (z : type557 _144530 _144607 P) (g : _144530 -> _144607) : (z g) = (z g).
Proof. exact (eq_refl (z g)). Qed.
Lemma lem8187052 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (z : type557 _144530 _144607 P) (g : _144530 -> _144607) : (term522 _144529 _144530 _144607 _144645 P p lt2 s f pat z g) = (term523 _144529 _144530 _144607 _144645 P p lt2 s f pat z g).
Proof. exact (MK_COMB (@lem8187050 _144529 _144530 _144607 _144645 P p lt2 s f pat g) (@lem8187051 _144530 _144607 P z g)). Qed.
Lemma lem8187053 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : type557 _144530 _144607 P) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) : (term523 _144529 _144530 _144607 _144645 P p lt2 s f pat z g) = (term524 _144529 _144530 _144607 _144645 P p lt2 s z f pat g).
Proof. exact (eq_refl (term523 _144529 _144530 _144607 _144645 P p lt2 s f pat z g)). Qed.
Lemma lem8187054 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : type557 _144530 _144607 P) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) : (term522 _144529 _144530 _144607 _144645 P p lt2 s f pat z g) = (term524 _144529 _144530 _144607 _144645 P p lt2 s z f pat g).
Proof. exact (TRANS (@lem8187052 _144529 _144530 _144607 _144645 P p lt2 s f pat z g) (@lem8187053 _144529 _144530 _144607 _144645 P p lt2 s z f pat g)). Qed.
Lemma lem8187055 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : type557 _144530 _144607 P) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) : (term525 _144529 _144530 _144607 _144645 P p lt2 s f pat z) = (term526 _144529 _144530 _144607 _144645 P p lt2 s z f pat).
Proof. exact (fun_ext (fun g : _144530 -> _144607 => @lem8187054 _144529 _144530 _144607 _144645 P p lt2 s z f pat g)). Qed.
Lemma lem8187056 {_144530 _144607 : Type'} : (@all (_144530 -> _144607)) = (@all (_144530 -> _144607)).
Proof. exact (eq_refl (@all (_144530 -> _144607))). Qed.
Lemma lem8187057 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : type557 _144530 _144607 P) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) : (term527 _144529 _144530 _144607 _144645 P p lt2 s f pat z) = (term528 _144529 _144530 _144607 _144645 P p lt2 s z f pat).
Proof. exact (MK_COMB (@lem8187056 _144530 _144607) (@lem8187055 _144529 _144530 _144607 _144645 P p lt2 s z f pat)). Qed.
Lemma lem8187058 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) : (term529 _144529 _144530 _144607 _144645 P p lt2 s f pat) = (term530 _144529 _144530 _144607 _144645 P p lt2 s f pat).
Proof. exact (fun_ext (fun z : type557 _144530 _144607 P => @lem8187057 _144529 _144530 _144607 _144645 P p lt2 s z f pat)). Qed.
Lemma lem8187059 {_144530 _144607 P : Type'} : (@ex ((_144530 -> _144607) -> P -> _144530)) = (@ex ((_144530 -> _144607) -> P -> _144530)).
Proof. exact (eq_refl (@ex ((_144530 -> _144607) -> P -> _144530))). Qed.
Lemma lem8187060 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) : (term512 _144529 _144530 _144607 _144645 P p lt2 s f pat) = (term531 _144529 _144530 _144607 _144645 P p lt2 s f pat).
Proof. exact (MK_COMB (@lem8187059 _144530 _144607 P) (@lem8187058 _144529 _144530 _144607 _144645 P p lt2 s f pat)). Qed.
Lemma lem8187061 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) : ((term511 _144529 _144530 _144607 _144645 P p lt2 s f pat) = (term512 _144529 _144530 _144607 _144645 P p lt2 s f pat)) = ((term508 _144529 _144530 _144607 _144645 P p lt2 s f pat) = (term531 _144529 _144530 _144607 _144645 P p lt2 s f pat)).
Proof. exact (MK_COMB (@lem8187049 _144529 _144530 _144607 _144645 P p lt2 s f pat) (@lem8187060 _144529 _144530 _144607 _144645 P p lt2 s f pat)). Qed.
Lemma lem8187062 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) : (term508 _144529 _144530 _144607 _144645 P p lt2 s f pat) = (term531 _144529 _144530 _144607 _144645 P p lt2 s f pat).
Proof. exact (EQ_MP (@lem8187061 _144529 _144530 _144607 _144645 P p lt2 s f pat) (@lem8187036 _144529 _144530 _144607 _144645 P p lt2 s f pat)). Qed.
Lemma lem8187063 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) : (term430 _144529 _144530 _144607 _144645 P p lt2 s f pat) = (term531 _144529 _144530 _144607 _144645 P p lt2 s f pat).
Proof. exact (TRANS (@lem8187032 _144529 _144530 _144607 _144645 P p lt2 s f pat) (@lem8187062 _144529 _144530 _144607 _144645 P p lt2 s f pat)). Qed.
Lemma lem8187064 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) : (term431 _144529 _144530 _144607 _144645 P p lt2 s pat) = (term532 _144529 _144530 _144607 _144645 P p lt2 s pat).
Proof. exact (fun_ext (fun f : _144530 -> _144607 => @lem8187063 _144529 _144530 _144607 _144645 P p lt2 s f pat)). Qed.
Lemma lem8187065 {_144530 _144607 : Type'} : (@all (_144530 -> _144607)) = (@all (_144530 -> _144607)).
Proof. exact (eq_refl (@all (_144530 -> _144607))). Qed.
Lemma lem8187066 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) : (term432 _144529 _144530 _144607 _144645 P p lt2 s pat) = (term533 _144529 _144530 _144607 _144645 P p lt2 s pat).
Proof. exact (MK_COMB (@lem8187065 _144530 _144607) (@lem8187064 _144529 _144530 _144607 _144645 P p lt2 s pat)). Qed.
Lemma lem8187068 {A B : Type'} (P : type1413 A B) : (term482 A B P) = (term483 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem8187069 {_144530 _144607 P : Type'} (P' : type495 _144530 _144607 P) : (term534 _144530 _144607 P P') = (term535 _144530 _144607 P P').
Proof. exact (@lem8187068 (_144530 -> _144607) (type557 _144530 _144607 P) P'). Qed.
Lemma lem8187070 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) : (term536 _144529 _144530 _144607 _144645 P p lt2 s pat) = (term537 _144529 _144530 _144607 _144645 P p lt2 s pat).
Proof. exact (@lem8187069 _144530 _144607 P (term538 _144529 _144530 _144607 _144645 P p lt2 s pat)). Qed.
Lemma lem8187071 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) : (term539 _144529 _144530 _144607 _144645 P p lt2 s pat f) = (term530 _144529 _144530 _144607 _144645 P p lt2 s f pat).
Proof. exact (eq_refl (term539 _144529 _144530 _144607 _144645 P p lt2 s pat f)). Qed.
Lemma lem8187072 {_144530 _144607 P : Type'} (z : type557 _144530 _144607 P) : z = z.
Proof. exact (eq_refl z). Qed.
Lemma lem8187073 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (z : type557 _144530 _144607 P) : (term540 _144529 _144530 _144607 _144645 P p lt2 s pat f z) = (term541 _144529 _144530 _144607 _144645 P p lt2 s f pat z).
Proof. exact (MK_COMB (@lem8187071 _144529 _144530 _144607 _144645 P p lt2 s f pat) (@lem8187072 _144530 _144607 P z)). Qed.
Lemma lem8187074 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : type557 _144530 _144607 P) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) : (term541 _144529 _144530 _144607 _144645 P p lt2 s f pat z) = (term528 _144529 _144530 _144607 _144645 P p lt2 s z f pat).
Proof. exact (eq_refl (term541 _144529 _144530 _144607 _144645 P p lt2 s f pat z)). Qed.
Lemma lem8187075 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : type557 _144530 _144607 P) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) : (term540 _144529 _144530 _144607 _144645 P p lt2 s pat f z) = (term528 _144529 _144530 _144607 _144645 P p lt2 s z f pat).
Proof. exact (TRANS (@lem8187073 _144529 _144530 _144607 _144645 P p lt2 s f pat z) (@lem8187074 _144529 _144530 _144607 _144645 P p lt2 s z f pat)). Qed.
Lemma lem8187076 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) : (term542 _144529 _144530 _144607 _144645 P p lt2 s pat f) = (term530 _144529 _144530 _144607 _144645 P p lt2 s f pat).
Proof. exact (fun_ext (fun z : type557 _144530 _144607 P => @lem8187075 _144529 _144530 _144607 _144645 P p lt2 s z f pat)). Qed.
Lemma lem8187077 {_144530 _144607 P : Type'} : (@ex ((_144530 -> _144607) -> P -> _144530)) = (@ex ((_144530 -> _144607) -> P -> _144530)).
Proof. exact (eq_refl (@ex ((_144530 -> _144607) -> P -> _144530))). Qed.
Lemma lem8187078 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) : (term543 _144529 _144530 _144607 _144645 P p lt2 s pat f) = (term531 _144529 _144530 _144607 _144645 P p lt2 s f pat).
Proof. exact (MK_COMB (@lem8187077 _144530 _144607 P) (@lem8187076 _144529 _144530 _144607 _144645 P p lt2 s f pat)). Qed.
Lemma lem8187079 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) : (term544 _144529 _144530 _144607 _144645 P p lt2 s pat) = (term532 _144529 _144530 _144607 _144645 P p lt2 s pat).
Proof. exact (fun_ext (fun f : _144530 -> _144607 => @lem8187078 _144529 _144530 _144607 _144645 P p lt2 s f pat)). Qed.
Lemma lem8187080 {_144530 _144607 : Type'} : (@all (_144530 -> _144607)) = (@all (_144530 -> _144607)).
Proof. exact (eq_refl (@all (_144530 -> _144607))). Qed.
Lemma lem8187081 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) : (term536 _144529 _144530 _144607 _144645 P p lt2 s pat) = (term533 _144529 _144530 _144607 _144645 P p lt2 s pat).
Proof. exact (MK_COMB (@lem8187080 _144530 _144607) (@lem8187079 _144529 _144530 _144607 _144645 P p lt2 s pat)). Qed.
Lemma lem8187082 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8187083 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) : (term545 _144529 _144530 _144607 _144645 P p lt2 s pat) = (term546 _144529 _144530 _144607 _144645 P p lt2 s pat).
Proof. exact (MK_COMB (@lem8187082) (@lem8187081 _144529 _144530 _144607 _144645 P p lt2 s pat)). Qed.
Lemma lem8187084 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) : (term539 _144529 _144530 _144607 _144645 P p lt2 s pat f) = (term530 _144529 _144530 _144607 _144645 P p lt2 s f pat).
Proof. exact (eq_refl (term539 _144529 _144530 _144607 _144645 P p lt2 s pat f)). Qed.
Lemma lem8187085 {_144530 _144607 P : Type'} (z : type518 _144530 _144607 P) (f : _144530 -> _144607) : (z f) = (z f).
Proof. exact (eq_refl (z f)). Qed.
Lemma lem8187086 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (z : type518 _144530 _144607 P) (f : _144530 -> _144607) : (term547 _144529 _144530 _144607 _144645 P p lt2 s pat z f) = (term548 _144529 _144530 _144607 _144645 P p lt2 s pat z f).
Proof. exact (MK_COMB (@lem8187084 _144529 _144530 _144607 _144645 P p lt2 s f pat) (@lem8187085 _144530 _144607 P z f)). Qed.
Lemma lem8187087 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : type518 _144530 _144607 P) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) : (term548 _144529 _144530 _144607 _144645 P p lt2 s pat z f) = (term549 _144529 _144530 _144607 _144645 P p lt2 s z f pat).
Proof. exact (eq_refl (term548 _144529 _144530 _144607 _144645 P p lt2 s pat z f)). Qed.
Lemma lem8187088 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : type518 _144530 _144607 P) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) : (term547 _144529 _144530 _144607 _144645 P p lt2 s pat z f) = (term549 _144529 _144530 _144607 _144645 P p lt2 s z f pat).
Proof. exact (TRANS (@lem8187086 _144529 _144530 _144607 _144645 P p lt2 s pat z f) (@lem8187087 _144529 _144530 _144607 _144645 P p lt2 s z f pat)). Qed.
Lemma lem8187089 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : type518 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) : (term550 _144529 _144530 _144607 _144645 P p lt2 s pat z) = (term551 _144529 _144530 _144607 _144645 P p lt2 s z pat).
Proof. exact (fun_ext (fun f : _144530 -> _144607 => @lem8187088 _144529 _144530 _144607 _144645 P p lt2 s z f pat)). Qed.
Lemma lem8187090 {_144530 _144607 : Type'} : (@all (_144530 -> _144607)) = (@all (_144530 -> _144607)).
Proof. exact (eq_refl (@all (_144530 -> _144607))). Qed.
Lemma lem8187091 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : type518 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) : (term552 _144529 _144530 _144607 _144645 P p lt2 s pat z) = (term553 _144529 _144530 _144607 _144645 P p lt2 s z pat).
Proof. exact (MK_COMB (@lem8187090 _144530 _144607) (@lem8187089 _144529 _144530 _144607 _144645 P p lt2 s z pat)). Qed.
Lemma lem8187092 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) : (term554 _144529 _144530 _144607 _144645 P p lt2 s pat) = (term555 _144529 _144530 _144607 _144645 P p lt2 s pat).
Proof. exact (fun_ext (fun z : type518 _144530 _144607 P => @lem8187091 _144529 _144530 _144607 _144645 P p lt2 s z pat)). Qed.
Lemma lem8187093 {_144530 _144607 P : Type'} : (@ex ((_144530 -> _144607) -> (_144530 -> _144607) -> P -> _144530)) = (@ex ((_144530 -> _144607) -> (_144530 -> _144607) -> P -> _144530)).
Proof. exact (eq_refl (@ex ((_144530 -> _144607) -> (_144530 -> _144607) -> P -> _144530))). Qed.
Lemma lem8187094 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) : (term537 _144529 _144530 _144607 _144645 P p lt2 s pat) = (term556 _144529 _144530 _144607 _144645 P p lt2 s pat).
Proof. exact (MK_COMB (@lem8187093 _144530 _144607 P) (@lem8187092 _144529 _144530 _144607 _144645 P p lt2 s pat)). Qed.
Lemma lem8187095 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) : ((term536 _144529 _144530 _144607 _144645 P p lt2 s pat) = (term537 _144529 _144530 _144607 _144645 P p lt2 s pat)) = ((term533 _144529 _144530 _144607 _144645 P p lt2 s pat) = (term556 _144529 _144530 _144607 _144645 P p lt2 s pat)).
Proof. exact (MK_COMB (@lem8187083 _144529 _144530 _144607 _144645 P p lt2 s pat) (@lem8187094 _144529 _144530 _144607 _144645 P p lt2 s pat)). Qed.
Lemma lem8187096 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) : (term533 _144529 _144530 _144607 _144645 P p lt2 s pat) = (term556 _144529 _144530 _144607 _144645 P p lt2 s pat).
Proof. exact (EQ_MP (@lem8187095 _144529 _144530 _144607 _144645 P p lt2 s pat) (@lem8187070 _144529 _144530 _144607 _144645 P p lt2 s pat)). Qed.
Lemma lem8187098 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) : (term432 _144529 _144530 _144607 _144645 P p lt2 s pat) = (term556 _144529 _144530 _144607 _144645 P p lt2 s pat).
Proof. exact (TRANS (@lem8187066 _144529 _144530 _144607 _144645 P p lt2 s pat) (@lem8187096 _144529 _144530 _144607 _144645 P p lt2 s pat)). Qed.
Lemma lem8187099 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) : (term141 _144529 _144530 _144607 _144645 P p lt2 s pat) = (term556 _144529 _144530 _144607 _144645 P p lt2 s pat).
Proof. exact (TRANS (@lem8186818 _144529 _144530 _144607 _144645 P p lt2 s pat) (@lem8187098 _144529 _144530 _144607 _144645 P p lt2 s pat)). Qed.
Lemma lem8187100 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (h1 : term141 _144529 _144530 _144607 _144645 P p lt2 s pat) : term556 _144529 _144530 _144607 _144645 P p lt2 s pat.
Proof. exact (EQ_MP (@lem8187099 _144529 _144530 _144607 _144645 P p lt2 s pat) (@lem8186762 _144529 _144530 _144607 _144645 P p lt2 s pat h1)). Qed.
Lemma lem8187109 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (z : _144530) : (term404 _144529 _144530 _144607 P lt2 s a f g z) = (term405 _144529 _144530 _144607 P lt2 s a f g z).
Proof. exact (@lem17362 (term406 _144529 _144530 P lt2 z s a) ((f z) = (g z))). Qed.
Lemma lem8187110 {_144530 : Type'} (P : _144530 -> Prop) : (term407 _144530 P) = (term408 _144530 P).
Proof. exact (@lem18392 _144530 P). Qed.
Lemma lem8187111 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term409 _144529 _144530 _144607 P lt2 s a f g) = (term410 _144529 _144530 _144607 P lt2 s a f g).
Proof. exact (@lem8187110 _144530 (term397 _144529 _144530 _144607 P lt2 s a f g)). Qed.
Lemma lem8187112 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (z : _144530) : (term411 _144529 _144530 _144607 P lt2 s a f g z) = (term396 _144529 _144530 _144607 P lt2 s a f g z).
Proof. exact (eq_refl (term411 _144529 _144530 _144607 P lt2 s a f g z)). Qed.
Lemma lem8187113 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8187114 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (z : _144530) : (term412 _144529 _144530 _144607 P lt2 s a f g z) = (term404 _144529 _144530 _144607 P lt2 s a f g z).
Proof. exact (MK_COMB (@lem8187113) (@lem8187112 _144529 _144530 _144607 P lt2 s a f g z)). Qed.
Lemma lem8187115 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (z : _144530) : (term412 _144529 _144530 _144607 P lt2 s a f g z) = (term405 _144529 _144530 _144607 P lt2 s a f g z).
Proof. exact (TRANS (@lem8187114 _144529 _144530 _144607 P lt2 s a f g z) (@lem8187109 _144529 _144530 _144607 P lt2 s a f g z)). Qed.
Lemma lem8187116 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term413 _144529 _144530 _144607 P lt2 s a f g) = (term414 _144529 _144530 _144607 P lt2 s a f g).
Proof. exact (fun_ext (fun z : _144530 => @lem8187115 _144529 _144530 _144607 P lt2 s a f g z)). Qed.
Lemma lem8187117 {_144530 : Type'} : (@ex _144530) = (@ex _144530).
Proof. exact (eq_refl (@ex _144530)). Qed.
Lemma lem8187118 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term410 _144529 _144530 _144607 P lt2 s a f g) = (term415 _144529 _144530 _144607 P lt2 s a f g).
Proof. exact (MK_COMB (@lem8187117 _144530) (@lem8187116 _144529 _144530 _144607 P lt2 s a f g)). Qed.
Lemma lem8187119 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term409 _144529 _144530 _144607 P lt2 s a f g) = (term415 _144529 _144530 _144607 P lt2 s a f g).
Proof. exact (TRANS (@lem8187111 _144529 _144530 _144607 P lt2 s a f g) (@lem8187118 _144529 _144530 _144607 P lt2 s a f g)). Qed.
Lemma lem8187121 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term416 _144530 _144607 P p g a) = (term416 _144530 _144607 P p g a).
Proof. exact (eq_refl (term416 _144530 _144607 P p g a)). Qed.
Lemma lem8187122 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term417 _144529 _144530 _144607 P p lt2 s a f g) = (term418 _144529 _144530 _144607 P p lt2 s a f g).
Proof. exact (MK_COMB (@lem8187121 _144530 _144607 P p g a) (@lem8187119 _144529 _144530 _144607 P lt2 s a f g)). Qed.
Lemma lem8187123 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term419 _144529 _144530 _144607 P p lt2 s a f g) = (term417 _144529 _144530 _144607 P p lt2 s a f g).
Proof. exact (@lem17045 (p g a) (term165 _144529 _144530 _144607 P lt2 s a f g)). Qed.
Lemma lem8187124 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term419 _144529 _144530 _144607 P p lt2 s a f g) = (term418 _144529 _144530 _144607 P p lt2 s a f g).
Proof. exact (TRANS (@lem8187123 _144529 _144530 _144607 P p lt2 s a f g) (@lem8187122 _144529 _144530 _144607 P p lt2 s a f g)). Qed.
Lemma lem8187126 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) : (term416 _144530 _144607 P p f a) = (term416 _144530 _144607 P p f a).
Proof. exact (eq_refl (term416 _144530 _144607 P p f a)). Qed.
Lemma lem8187127 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term420 _144529 _144530 _144607 P p lt2 s a f g) = (term421 _144529 _144530 _144607 P p lt2 s a f g).
Proof. exact (MK_COMB (@lem8187126 _144530 _144607 P p f a) (@lem8187124 _144529 _144530 _144607 P p lt2 s a f g)). Qed.
Lemma lem8187128 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term422 _144529 _144530 _144607 P p lt2 s a f g) = (term420 _144529 _144530 _144607 P p lt2 s a f g).
Proof. exact (@lem17045 (p f a) (term318 _144529 _144530 _144607 P p lt2 s a f g)). Qed.
Lemma lem8187129 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term422 _144529 _144530 _144607 P p lt2 s a f g) = (term421 _144529 _144530 _144607 P p lt2 s a f g).
Proof. exact (TRANS (@lem8187128 _144529 _144530 _144607 P p lt2 s a f g) (@lem8187127 _144529 _144530 _144607 P p lt2 s a f g)). Qed.
Lemma lem8187130 {_144530 _144607 _144645 P : Type'} (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : ((e f a) = (e g a)) = ((e f a) = (e g a)).
Proof. exact (eq_refl ((e f a) = (e g a))). Qed.
Lemma lem8187131 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8187132 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term423 _144529 _144530 _144607 P p lt2 s a f g) = (term424 _144529 _144530 _144607 P p lt2 s a f g).
Proof. exact (MK_COMB (@lem8187131) (@lem8187129 _144529 _144530 _144607 P p lt2 s a f g)). Qed.
Lemma lem8187133 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term425 _144529 _144530 _144607 _144645 P p lt2 s f e g a) = (term426 _144529 _144530 _144607 _144645 P p lt2 s f e g a).
Proof. exact (MK_COMB (@lem8187132 _144529 _144530 _144607 P p lt2 s a f g) (@lem8187130 _144530 _144607 _144645 P f e g a)). Qed.
Lemma lem8187134 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term398 _144529 _144530 _144607 _144645 P p lt2 s f e g a) = (term425 _144529 _144530 _144607 _144645 P p lt2 s f e g a).
Proof. exact (@lem17265 (term317 _144529 _144530 _144607 P p lt2 s a f g) ((e f a) = (e g a))). Qed.
Lemma lem8187135 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term398 _144529 _144530 _144607 _144645 P p lt2 s f e g a) = (term426 _144529 _144530 _144607 _144645 P p lt2 s f e g a).
Proof. exact (TRANS (@lem8187134 _144529 _144530 _144607 _144645 P p lt2 s f e g a) (@lem8187133 _144529 _144530 _144607 _144645 P p lt2 s f e g a)). Qed.
Lemma lem8187136 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) : (term399 _144529 _144530 _144607 _144645 P p lt2 s f e g) = (term427 _144529 _144530 _144607 _144645 P p lt2 s f e g).
Proof. exact (fun_ext (fun a : P => @lem8187135 _144529 _144530 _144607 _144645 P p lt2 s f e g a)). Qed.
Lemma lem8187137 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8187138 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) : (term400 _144529 _144530 _144607 _144645 P p lt2 s f e g) = (term428 _144529 _144530 _144607 _144645 P p lt2 s f e g).
Proof. exact (MK_COMB (@lem8187137 P) (@lem8187136 _144529 _144530 _144607 _144645 P p lt2 s f e g)). Qed.
Lemma lem8187139 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) : (term401 _144529 _144530 _144607 _144645 P p lt2 s f e) = (term429 _144529 _144530 _144607 _144645 P p lt2 s f e).
Proof. exact (fun_ext (fun g : _144530 -> _144607 => @lem8187138 _144529 _144530 _144607 _144645 P p lt2 s f e g)). Qed.
Lemma lem8187140 {_144530 _144607 : Type'} : (@all (_144530 -> _144607)) = (@all (_144530 -> _144607)).
Proof. exact (eq_refl (@all (_144530 -> _144607))). Qed.
Lemma lem8187141 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) : (term402 _144529 _144530 _144607 _144645 P p lt2 s f e) = (term430 _144529 _144530 _144607 _144645 P p lt2 s f e).
Proof. exact (MK_COMB (@lem8187140 _144530 _144607) (@lem8187139 _144529 _144530 _144607 _144645 P p lt2 s f e)). Qed.
Lemma lem8187142 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (e : type564 _144530 _144607 _144645 P) : (term403 _144529 _144530 _144607 _144645 P p lt2 s e) = (term431 _144529 _144530 _144607 _144645 P p lt2 s e).
Proof. exact (fun_ext (fun f : _144530 -> _144607 => @lem8187141 _144529 _144530 _144607 _144645 P p lt2 s f e)). Qed.
Lemma lem8187143 {_144530 _144607 : Type'} : (@all (_144530 -> _144607)) = (@all (_144530 -> _144607)).
Proof. exact (eq_refl (@all (_144530 -> _144607))). Qed.
Lemma lem8187144 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (e : type564 _144530 _144607 _144645 P) : (term141 _144529 _144530 _144607 _144645 P p lt2 s e) = (term432 _144529 _144530 _144607 _144645 P p lt2 s e).
Proof. exact (MK_COMB (@lem8187143 _144530 _144607) (@lem8187142 _144529 _144530 _144607 _144645 P p lt2 s e)). Qed.
Lemma lem8187251 {A : Type'} (P : Prop) (Q : A -> Prop) : (term433 A P Q) = (term434 A P Q).
Proof. exact (EQ_MP (@lem18911 A P Q) (@lem18910 A P Q)). Qed.
Lemma lem8187252 {_144530 : Type'} (P : Prop) (Q : _144530 -> Prop) : (term433 _144530 P Q) = (term434 _144530 P Q).
Proof. exact (@lem8187251 _144530 P Q). Qed.
Lemma lem8187253 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term435 _144529 _144530 _144607 P p lt2 s a f g) = (term436 _144529 _144530 _144607 P p lt2 s a f g).
Proof. exact (@lem8187252 _144530 (term437 _144530 _144607 P p g a) (term414 _144529 _144530 _144607 P lt2 s a f g)). Qed.
Lemma lem8187254 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (z : _144530) : (term438 _144529 _144530 _144607 P lt2 s a f g z) = (term405 _144529 _144530 _144607 P lt2 s a f g z).
Proof. exact (eq_refl (term438 _144529 _144530 _144607 P lt2 s a f g z)). Qed.
Lemma lem8187255 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term439 _144529 _144530 _144607 P lt2 s a f g) = (term414 _144529 _144530 _144607 P lt2 s a f g).
Proof. exact (fun_ext (fun z : _144530 => @lem8187254 _144529 _144530 _144607 P lt2 s a f g z)). Qed.
Lemma lem8187256 {_144530 : Type'} : (@ex _144530) = (@ex _144530).
Proof. exact (eq_refl (@ex _144530)). Qed.
Lemma lem8187257 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term440 _144529 _144530 _144607 P lt2 s a f g) = (term415 _144529 _144530 _144607 P lt2 s a f g).
Proof. exact (MK_COMB (@lem8187256 _144530) (@lem8187255 _144529 _144530 _144607 P lt2 s a f g)). Qed.
Lemma lem8187258 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term416 _144530 _144607 P p g a) = (term416 _144530 _144607 P p g a).
Proof. exact (eq_refl (term416 _144530 _144607 P p g a)). Qed.
Lemma lem8187259 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term435 _144529 _144530 _144607 P p lt2 s a f g) = (term418 _144529 _144530 _144607 P p lt2 s a f g).
Proof. exact (MK_COMB (@lem8187258 _144530 _144607 P p g a) (@lem8187257 _144529 _144530 _144607 P lt2 s a f g)). Qed.
Lemma lem8187260 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8187261 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term441 _144529 _144530 _144607 P p lt2 s a f g) = (term442 _144529 _144530 _144607 P p lt2 s a f g).
Proof. exact (MK_COMB (@lem8187260) (@lem8187259 _144529 _144530 _144607 P p lt2 s a f g)). Qed.
Lemma lem8187262 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (z : _144530) : (term438 _144529 _144530 _144607 P lt2 s a f g z) = (term405 _144529 _144530 _144607 P lt2 s a f g z).
Proof. exact (eq_refl (term438 _144529 _144530 _144607 P lt2 s a f g z)). Qed.
Lemma lem8187263 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term416 _144530 _144607 P p g a) = (term416 _144530 _144607 P p g a).
Proof. exact (eq_refl (term416 _144530 _144607 P p g a)). Qed.
Lemma lem8187264 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (z : _144530) : (term443 _144529 _144530 _144607 P p lt2 s a f g z) = (term444 _144529 _144530 _144607 P p lt2 s a f g z).
Proof. exact (MK_COMB (@lem8187263 _144530 _144607 P p g a) (@lem8187262 _144529 _144530 _144607 P lt2 s a f g z)). Qed.
Lemma lem8187265 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term445 _144529 _144530 _144607 P p lt2 s a f g) = (term446 _144529 _144530 _144607 P p lt2 s a f g).
Proof. exact (fun_ext (fun z : _144530 => @lem8187264 _144529 _144530 _144607 P p lt2 s a f g z)). Qed.
Lemma lem8187266 {_144530 : Type'} : (@ex _144530) = (@ex _144530).
Proof. exact (eq_refl (@ex _144530)). Qed.
Lemma lem8187267 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term436 _144529 _144530 _144607 P p lt2 s a f g) = (term447 _144529 _144530 _144607 P p lt2 s a f g).
Proof. exact (MK_COMB (@lem8187266 _144530) (@lem8187265 _144529 _144530 _144607 P p lt2 s a f g)). Qed.
Lemma lem8187268 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : ((term435 _144529 _144530 _144607 P p lt2 s a f g) = (term436 _144529 _144530 _144607 P p lt2 s a f g)) = ((term418 _144529 _144530 _144607 P p lt2 s a f g) = (term447 _144529 _144530 _144607 P p lt2 s a f g)).
Proof. exact (MK_COMB (@lem8187261 _144529 _144530 _144607 P p lt2 s a f g) (@lem8187267 _144529 _144530 _144607 P p lt2 s a f g)). Qed.
Lemma lem8187269 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term418 _144529 _144530 _144607 P p lt2 s a f g) = (term447 _144529 _144530 _144607 P p lt2 s a f g).
Proof. exact (EQ_MP (@lem8187268 _144529 _144530 _144607 P p lt2 s a f g) (@lem8187253 _144529 _144530 _144607 P p lt2 s a f g)). Qed.
Lemma lem8187270 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) : (term416 _144530 _144607 P p f a) = (term416 _144530 _144607 P p f a).
Proof. exact (eq_refl (term416 _144530 _144607 P p f a)). Qed.
Lemma lem8187271 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term421 _144529 _144530 _144607 P p lt2 s a f g) = (term448 _144529 _144530 _144607 P p lt2 s a f g).
Proof. exact (MK_COMB (@lem8187270 _144530 _144607 P p f a) (@lem8187269 _144529 _144530 _144607 P p lt2 s a f g)). Qed.
Lemma lem8187273 {A : Type'} (P : Prop) (Q : A -> Prop) : (term433 A P Q) = (term434 A P Q).
Proof. exact (EQ_MP (@lem18911 A P Q) (@lem18910 A P Q)). Qed.
Lemma lem8187274 {_144530 : Type'} (P : Prop) (Q : _144530 -> Prop) : (term433 _144530 P Q) = (term434 _144530 P Q).
Proof. exact (@lem8187273 _144530 P Q). Qed.
Lemma lem8187275 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term449 _144529 _144530 _144607 P p lt2 s a f g) = (term450 _144529 _144530 _144607 P p lt2 s a f g).
Proof. exact (@lem8187274 _144530 (term437 _144530 _144607 P p f a) (term446 _144529 _144530 _144607 P p lt2 s a f g)). Qed.
Lemma lem8187276 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (z : _144530) : (term451 _144529 _144530 _144607 P p lt2 s a f g z) = (term444 _144529 _144530 _144607 P p lt2 s a f g z).
Proof. exact (eq_refl (term451 _144529 _144530 _144607 P p lt2 s a f g z)). Qed.
Lemma lem8187277 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term452 _144529 _144530 _144607 P p lt2 s a f g) = (term446 _144529 _144530 _144607 P p lt2 s a f g).
Proof. exact (fun_ext (fun z : _144530 => @lem8187276 _144529 _144530 _144607 P p lt2 s a f g z)). Qed.
Lemma lem8187278 {_144530 : Type'} : (@ex _144530) = (@ex _144530).
Proof. exact (eq_refl (@ex _144530)). Qed.
Lemma lem8187279 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term453 _144529 _144530 _144607 P p lt2 s a f g) = (term447 _144529 _144530 _144607 P p lt2 s a f g).
Proof. exact (MK_COMB (@lem8187278 _144530) (@lem8187277 _144529 _144530 _144607 P p lt2 s a f g)). Qed.
Lemma lem8187280 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) : (term416 _144530 _144607 P p f a) = (term416 _144530 _144607 P p f a).
Proof. exact (eq_refl (term416 _144530 _144607 P p f a)). Qed.
Lemma lem8187281 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term449 _144529 _144530 _144607 P p lt2 s a f g) = (term448 _144529 _144530 _144607 P p lt2 s a f g).
Proof. exact (MK_COMB (@lem8187280 _144530 _144607 P p f a) (@lem8187279 _144529 _144530 _144607 P p lt2 s a f g)). Qed.
Lemma lem8187282 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8187283 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term454 _144529 _144530 _144607 P p lt2 s a f g) = (term455 _144529 _144530 _144607 P p lt2 s a f g).
Proof. exact (MK_COMB (@lem8187282) (@lem8187281 _144529 _144530 _144607 P p lt2 s a f g)). Qed.
Lemma lem8187284 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (z : _144530) : (term451 _144529 _144530 _144607 P p lt2 s a f g z) = (term444 _144529 _144530 _144607 P p lt2 s a f g z).
Proof. exact (eq_refl (term451 _144529 _144530 _144607 P p lt2 s a f g z)). Qed.
Lemma lem8187285 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) : (term416 _144530 _144607 P p f a) = (term416 _144530 _144607 P p f a).
Proof. exact (eq_refl (term416 _144530 _144607 P p f a)). Qed.
Lemma lem8187286 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (z : _144530) : (term456 _144529 _144530 _144607 P p lt2 s a f g z) = (term457 _144529 _144530 _144607 P p lt2 s a f g z).
Proof. exact (MK_COMB (@lem8187285 _144530 _144607 P p f a) (@lem8187284 _144529 _144530 _144607 P p lt2 s a f g z)). Qed.
Lemma lem8187287 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term458 _144529 _144530 _144607 P p lt2 s a f g) = (term459 _144529 _144530 _144607 P p lt2 s a f g).
Proof. exact (fun_ext (fun z : _144530 => @lem8187286 _144529 _144530 _144607 P p lt2 s a f g z)). Qed.
Lemma lem8187288 {_144530 : Type'} : (@ex _144530) = (@ex _144530).
Proof. exact (eq_refl (@ex _144530)). Qed.
Lemma lem8187289 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term450 _144529 _144530 _144607 P p lt2 s a f g) = (term460 _144529 _144530 _144607 P p lt2 s a f g).
Proof. exact (MK_COMB (@lem8187288 _144530) (@lem8187287 _144529 _144530 _144607 P p lt2 s a f g)). Qed.
Lemma lem8187290 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : ((term449 _144529 _144530 _144607 P p lt2 s a f g) = (term450 _144529 _144530 _144607 P p lt2 s a f g)) = ((term448 _144529 _144530 _144607 P p lt2 s a f g) = (term460 _144529 _144530 _144607 P p lt2 s a f g)).
Proof. exact (MK_COMB (@lem8187283 _144529 _144530 _144607 P p lt2 s a f g) (@lem8187289 _144529 _144530 _144607 P p lt2 s a f g)). Qed.
Lemma lem8187291 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term448 _144529 _144530 _144607 P p lt2 s a f g) = (term460 _144529 _144530 _144607 P p lt2 s a f g).
Proof. exact (EQ_MP (@lem8187290 _144529 _144530 _144607 P p lt2 s a f g) (@lem8187275 _144529 _144530 _144607 P p lt2 s a f g)). Qed.
Lemma lem8187292 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term421 _144529 _144530 _144607 P p lt2 s a f g) = (term460 _144529 _144530 _144607 P p lt2 s a f g).
Proof. exact (TRANS (@lem8187271 _144529 _144530 _144607 P p lt2 s a f g) (@lem8187291 _144529 _144530 _144607 P p lt2 s a f g)). Qed.
Lemma lem8187293 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8187294 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term424 _144529 _144530 _144607 P p lt2 s a f g) = (term461 _144529 _144530 _144607 P p lt2 s a f g).
Proof. exact (MK_COMB (@lem8187293) (@lem8187292 _144529 _144530 _144607 P p lt2 s a f g)). Qed.
Lemma lem8187295 {_144530 _144607 _144645 P : Type'} (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : ((e f a) = (e g a)) = ((e f a) = (e g a)).
Proof. exact (eq_refl ((e f a) = (e g a))). Qed.
Lemma lem8187296 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term426 _144529 _144530 _144607 _144645 P p lt2 s f e g a) = (term462 _144529 _144530 _144607 _144645 P p lt2 s f e g a).
Proof. exact (MK_COMB (@lem8187294 _144529 _144530 _144607 P p lt2 s a f g) (@lem8187295 _144530 _144607 _144645 P f e g a)). Qed.
Lemma lem8187298 {A : Type'} (P : A -> Prop) (Q : Prop) : (term463 A P Q) = (term464 A P Q).
Proof. exact (EQ_MP (@lem18905 A P Q) (@lem18904 A P Q)). Qed.
Lemma lem8187299 {_144530 : Type'} (P : _144530 -> Prop) (Q : Prop) : (term463 _144530 P Q) = (term464 _144530 P Q).
Proof. exact (@lem8187298 _144530 P Q). Qed.
Lemma lem8187300 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term465 _144529 _144530 _144607 _144645 P p lt2 s f e g a) = (term466 _144529 _144530 _144607 _144645 P p lt2 s f e g a).
Proof. exact (@lem8187299 _144530 (term459 _144529 _144530 _144607 P p lt2 s a f g) ((e f a) = (e g a))). Qed.
Lemma lem8187301 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (z : _144530) : (term467 _144529 _144530 _144607 P p lt2 s a f g z) = (term457 _144529 _144530 _144607 P p lt2 s a f g z).
Proof. exact (eq_refl (term467 _144529 _144530 _144607 P p lt2 s a f g z)). Qed.
Lemma lem8187302 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term468 _144529 _144530 _144607 P p lt2 s a f g) = (term459 _144529 _144530 _144607 P p lt2 s a f g).
Proof. exact (fun_ext (fun z : _144530 => @lem8187301 _144529 _144530 _144607 P p lt2 s a f g z)). Qed.
Lemma lem8187303 {_144530 : Type'} : (@ex _144530) = (@ex _144530).
Proof. exact (eq_refl (@ex _144530)). Qed.
Lemma lem8187304 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term469 _144529 _144530 _144607 P p lt2 s a f g) = (term460 _144529 _144530 _144607 P p lt2 s a f g).
Proof. exact (MK_COMB (@lem8187303 _144530) (@lem8187302 _144529 _144530 _144607 P p lt2 s a f g)). Qed.
Lemma lem8187305 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8187306 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term470 _144529 _144530 _144607 P p lt2 s a f g) = (term461 _144529 _144530 _144607 P p lt2 s a f g).
Proof. exact (MK_COMB (@lem8187305) (@lem8187304 _144529 _144530 _144607 P p lt2 s a f g)). Qed.
Lemma lem8187307 {_144530 _144607 _144645 P : Type'} (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : ((e f a) = (e g a)) = ((e f a) = (e g a)).
Proof. exact (eq_refl ((e f a) = (e g a))). Qed.
Lemma lem8187308 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term465 _144529 _144530 _144607 _144645 P p lt2 s f e g a) = (term462 _144529 _144530 _144607 _144645 P p lt2 s f e g a).
Proof. exact (MK_COMB (@lem8187306 _144529 _144530 _144607 P p lt2 s a f g) (@lem8187307 _144530 _144607 _144645 P f e g a)). Qed.
Lemma lem8187309 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8187310 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term471 _144529 _144530 _144607 _144645 P p lt2 s f e g a) = (term472 _144529 _144530 _144607 _144645 P p lt2 s f e g a).
Proof. exact (MK_COMB (@lem8187309) (@lem8187308 _144529 _144530 _144607 _144645 P p lt2 s f e g a)). Qed.
Lemma lem8187311 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (z : _144530) : (term467 _144529 _144530 _144607 P p lt2 s a f g z) = (term457 _144529 _144530 _144607 P p lt2 s a f g z).
Proof. exact (eq_refl (term467 _144529 _144530 _144607 P p lt2 s a f g z)). Qed.
Lemma lem8187312 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8187313 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (z : _144530) : (term473 _144529 _144530 _144607 P p lt2 s a f g z) = (term474 _144529 _144530 _144607 P p lt2 s a f g z).
Proof. exact (MK_COMB (@lem8187312) (@lem8187311 _144529 _144530 _144607 P p lt2 s a f g z)). Qed.
Lemma lem8187314 {_144530 _144607 _144645 P : Type'} (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : ((e f a) = (e g a)) = ((e f a) = (e g a)).
Proof. exact (eq_refl ((e f a) = (e g a))). Qed.
Lemma lem8187315 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : _144530) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term475 _144529 _144530 _144607 _144645 P p lt2 s z f e g a) = (term476 _144529 _144530 _144607 _144645 P p lt2 s z f e g a).
Proof. exact (MK_COMB (@lem8187313 _144529 _144530 _144607 P p lt2 s a f g z) (@lem8187314 _144530 _144607 _144645 P f e g a)). Qed.
Lemma lem8187316 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term477 _144529 _144530 _144607 _144645 P p lt2 s f e g a) = (term478 _144529 _144530 _144607 _144645 P p lt2 s f e g a).
Proof. exact (fun_ext (fun z : _144530 => @lem8187315 _144529 _144530 _144607 _144645 P p lt2 s z f e g a)). Qed.
Lemma lem8187317 {_144530 : Type'} : (@ex _144530) = (@ex _144530).
Proof. exact (eq_refl (@ex _144530)). Qed.
Lemma lem8187318 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term466 _144529 _144530 _144607 _144645 P p lt2 s f e g a) = (term479 _144529 _144530 _144607 _144645 P p lt2 s f e g a).
Proof. exact (MK_COMB (@lem8187317 _144530) (@lem8187316 _144529 _144530 _144607 _144645 P p lt2 s f e g a)). Qed.
Lemma lem8187319 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : ((term465 _144529 _144530 _144607 _144645 P p lt2 s f e g a) = (term466 _144529 _144530 _144607 _144645 P p lt2 s f e g a)) = ((term462 _144529 _144530 _144607 _144645 P p lt2 s f e g a) = (term479 _144529 _144530 _144607 _144645 P p lt2 s f e g a)).
Proof. exact (MK_COMB (@lem8187310 _144529 _144530 _144607 _144645 P p lt2 s f e g a) (@lem8187318 _144529 _144530 _144607 _144645 P p lt2 s f e g a)). Qed.
Lemma lem8187320 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term462 _144529 _144530 _144607 _144645 P p lt2 s f e g a) = (term479 _144529 _144530 _144607 _144645 P p lt2 s f e g a).
Proof. exact (EQ_MP (@lem8187319 _144529 _144530 _144607 _144645 P p lt2 s f e g a) (@lem8187300 _144529 _144530 _144607 _144645 P p lt2 s f e g a)). Qed.
Lemma lem8187321 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term426 _144529 _144530 _144607 _144645 P p lt2 s f e g a) = (term479 _144529 _144530 _144607 _144645 P p lt2 s f e g a).
Proof. exact (TRANS (@lem8187296 _144529 _144530 _144607 _144645 P p lt2 s f e g a) (@lem8187320 _144529 _144530 _144607 _144645 P p lt2 s f e g a)). Qed.
Lemma lem8187322 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) : (term427 _144529 _144530 _144607 _144645 P p lt2 s f e g) = (term480 _144529 _144530 _144607 _144645 P p lt2 s f e g).
Proof. exact (fun_ext (fun a : P => @lem8187321 _144529 _144530 _144607 _144645 P p lt2 s f e g a)). Qed.
Lemma lem8187323 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8187324 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) : (term428 _144529 _144530 _144607 _144645 P p lt2 s f e g) = (term481 _144529 _144530 _144607 _144645 P p lt2 s f e g).
Proof. exact (MK_COMB (@lem8187323 P) (@lem8187322 _144529 _144530 _144607 _144645 P p lt2 s f e g)). Qed.
Lemma lem8187326 {A B : Type'} (P : type1413 A B) : (term482 A B P) = (term483 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem8187327 {_144530 P : Type'} (P' : type1470 _144530 P) : (term484 _144530 P P') = (term485 _144530 P P').
Proof. exact (@lem8187326 P _144530 P'). Qed.
Lemma lem8187328 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) : (term486 _144529 _144530 _144607 _144645 P p lt2 s f e g) = (term487 _144529 _144530 _144607 _144645 P p lt2 s f e g).
Proof. exact (@lem8187327 _144530 P (term488 _144529 _144530 _144607 _144645 P p lt2 s f e g)). Qed.
Lemma lem8187329 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term489 _144529 _144530 _144607 _144645 P p lt2 s f e g a) = (term478 _144529 _144530 _144607 _144645 P p lt2 s f e g a).
Proof. exact (eq_refl (term489 _144529 _144530 _144607 _144645 P p lt2 s f e g a)). Qed.
Lemma lem8187330 {_144530 : Type'} (z : _144530) : z = z.
Proof. exact (eq_refl z). Qed.
Lemma lem8187331 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) (z : _144530) : (term490 _144529 _144530 _144607 _144645 P p lt2 s f e g a z) = (term491 _144529 _144530 _144607 _144645 P p lt2 s f e g a z).
Proof. exact (MK_COMB (@lem8187329 _144529 _144530 _144607 _144645 P p lt2 s f e g a) (@lem8187330 _144530 z)). Qed.
Lemma lem8187332 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : _144530) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term491 _144529 _144530 _144607 _144645 P p lt2 s f e g a z) = (term476 _144529 _144530 _144607 _144645 P p lt2 s z f e g a).
Proof. exact (eq_refl (term491 _144529 _144530 _144607 _144645 P p lt2 s f e g a z)). Qed.
Lemma lem8187333 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : _144530) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term490 _144529 _144530 _144607 _144645 P p lt2 s f e g a z) = (term476 _144529 _144530 _144607 _144645 P p lt2 s z f e g a).
Proof. exact (TRANS (@lem8187331 _144529 _144530 _144607 _144645 P p lt2 s f e g a z) (@lem8187332 _144529 _144530 _144607 _144645 P p lt2 s z f e g a)). Qed.
Lemma lem8187334 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term492 _144529 _144530 _144607 _144645 P p lt2 s f e g a) = (term478 _144529 _144530 _144607 _144645 P p lt2 s f e g a).
Proof. exact (fun_ext (fun z : _144530 => @lem8187333 _144529 _144530 _144607 _144645 P p lt2 s z f e g a)). Qed.
Lemma lem8187335 {_144530 : Type'} : (@ex _144530) = (@ex _144530).
Proof. exact (eq_refl (@ex _144530)). Qed.
Lemma lem8187336 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term493 _144529 _144530 _144607 _144645 P p lt2 s f e g a) = (term479 _144529 _144530 _144607 _144645 P p lt2 s f e g a).
Proof. exact (MK_COMB (@lem8187335 _144530) (@lem8187334 _144529 _144530 _144607 _144645 P p lt2 s f e g a)). Qed.
Lemma lem8187337 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) : (term494 _144529 _144530 _144607 _144645 P p lt2 s f e g) = (term480 _144529 _144530 _144607 _144645 P p lt2 s f e g).
Proof. exact (fun_ext (fun a : P => @lem8187336 _144529 _144530 _144607 _144645 P p lt2 s f e g a)). Qed.
Lemma lem8187338 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8187339 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) : (term486 _144529 _144530 _144607 _144645 P p lt2 s f e g) = (term481 _144529 _144530 _144607 _144645 P p lt2 s f e g).
Proof. exact (MK_COMB (@lem8187338 P) (@lem8187337 _144529 _144530 _144607 _144645 P p lt2 s f e g)). Qed.
Lemma lem8187340 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8187341 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) : (term495 _144529 _144530 _144607 _144645 P p lt2 s f e g) = (term496 _144529 _144530 _144607 _144645 P p lt2 s f e g).
Proof. exact (MK_COMB (@lem8187340) (@lem8187339 _144529 _144530 _144607 _144645 P p lt2 s f e g)). Qed.
Lemma lem8187342 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term489 _144529 _144530 _144607 _144645 P p lt2 s f e g a) = (term478 _144529 _144530 _144607 _144645 P p lt2 s f e g a).
Proof. exact (eq_refl (term489 _144529 _144530 _144607 _144645 P p lt2 s f e g a)). Qed.
Lemma lem8187343 {_144530 P : Type'} (z : P -> _144530) (a : P) : (z a) = (z a).
Proof. exact (eq_refl (z a)). Qed.
Lemma lem8187344 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (z : P -> _144530) (a : P) : (term497 _144529 _144530 _144607 _144645 P p lt2 s f e g z a) = (term498 _144529 _144530 _144607 _144645 P p lt2 s f e g z a).
Proof. exact (MK_COMB (@lem8187342 _144529 _144530 _144607 _144645 P p lt2 s f e g a) (@lem8187343 _144530 P z a)). Qed.
Lemma lem8187345 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : P -> _144530) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term498 _144529 _144530 _144607 _144645 P p lt2 s f e g z a) = (term499 _144529 _144530 _144607 _144645 P p lt2 s z f e g a).
Proof. exact (eq_refl (term498 _144529 _144530 _144607 _144645 P p lt2 s f e g z a)). Qed.
Lemma lem8187346 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : P -> _144530) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term497 _144529 _144530 _144607 _144645 P p lt2 s f e g z a) = (term499 _144529 _144530 _144607 _144645 P p lt2 s z f e g a).
Proof. exact (TRANS (@lem8187344 _144529 _144530 _144607 _144645 P p lt2 s f e g z a) (@lem8187345 _144529 _144530 _144607 _144645 P p lt2 s z f e g a)). Qed.
Lemma lem8187347 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : P -> _144530) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) : (term500 _144529 _144530 _144607 _144645 P p lt2 s f e g z) = (term501 _144529 _144530 _144607 _144645 P p lt2 s z f e g).
Proof. exact (fun_ext (fun a : P => @lem8187346 _144529 _144530 _144607 _144645 P p lt2 s z f e g a)). Qed.
Lemma lem8187348 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8187349 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : P -> _144530) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) : (term502 _144529 _144530 _144607 _144645 P p lt2 s f e g z) = (term503 _144529 _144530 _144607 _144645 P p lt2 s z f e g).
Proof. exact (MK_COMB (@lem8187348 P) (@lem8187347 _144529 _144530 _144607 _144645 P p lt2 s z f e g)). Qed.
Lemma lem8187350 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) : (term504 _144529 _144530 _144607 _144645 P p lt2 s f e g) = (term505 _144529 _144530 _144607 _144645 P p lt2 s f e g).
Proof. exact (fun_ext (fun z : P -> _144530 => @lem8187349 _144529 _144530 _144607 _144645 P p lt2 s z f e g)). Qed.
Lemma lem8187351 {_144530 P : Type'} : (@ex (P -> _144530)) = (@ex (P -> _144530)).
Proof. exact (eq_refl (@ex (P -> _144530))). Qed.
Lemma lem8187352 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) : (term487 _144529 _144530 _144607 _144645 P p lt2 s f e g) = (term506 _144529 _144530 _144607 _144645 P p lt2 s f e g).
Proof. exact (MK_COMB (@lem8187351 _144530 P) (@lem8187350 _144529 _144530 _144607 _144645 P p lt2 s f e g)). Qed.
Lemma lem8187353 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) : ((term486 _144529 _144530 _144607 _144645 P p lt2 s f e g) = (term487 _144529 _144530 _144607 _144645 P p lt2 s f e g)) = ((term481 _144529 _144530 _144607 _144645 P p lt2 s f e g) = (term506 _144529 _144530 _144607 _144645 P p lt2 s f e g)).
Proof. exact (MK_COMB (@lem8187341 _144529 _144530 _144607 _144645 P p lt2 s f e g) (@lem8187352 _144529 _144530 _144607 _144645 P p lt2 s f e g)). Qed.
Lemma lem8187354 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) : (term481 _144529 _144530 _144607 _144645 P p lt2 s f e g) = (term506 _144529 _144530 _144607 _144645 P p lt2 s f e g).
Proof. exact (EQ_MP (@lem8187353 _144529 _144530 _144607 _144645 P p lt2 s f e g) (@lem8187328 _144529 _144530 _144607 _144645 P p lt2 s f e g)). Qed.
Lemma lem8187355 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) : (term428 _144529 _144530 _144607 _144645 P p lt2 s f e g) = (term506 _144529 _144530 _144607 _144645 P p lt2 s f e g).
Proof. exact (TRANS (@lem8187324 _144529 _144530 _144607 _144645 P p lt2 s f e g) (@lem8187354 _144529 _144530 _144607 _144645 P p lt2 s f e g)). Qed.
Lemma lem8187356 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) : (term429 _144529 _144530 _144607 _144645 P p lt2 s f e) = (term507 _144529 _144530 _144607 _144645 P p lt2 s f e).
Proof. exact (fun_ext (fun g : _144530 -> _144607 => @lem8187355 _144529 _144530 _144607 _144645 P p lt2 s f e g)). Qed.
Lemma lem8187357 {_144530 _144607 : Type'} : (@all (_144530 -> _144607)) = (@all (_144530 -> _144607)).
Proof. exact (eq_refl (@all (_144530 -> _144607))). Qed.
Lemma lem8187358 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) : (term430 _144529 _144530 _144607 _144645 P p lt2 s f e) = (term508 _144529 _144530 _144607 _144645 P p lt2 s f e).
Proof. exact (MK_COMB (@lem8187357 _144530 _144607) (@lem8187356 _144529 _144530 _144607 _144645 P p lt2 s f e)). Qed.
Lemma lem8187360 {A B : Type'} (P : type1413 A B) : (term482 A B P) = (term483 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem8187361 {_144530 _144607 P : Type'} (P' : type537 _144530 _144607 P) : (term509 _144530 _144607 P P') = (term510 _144530 _144607 P P').
Proof. exact (@lem8187360 (_144530 -> _144607) (P -> _144530) P'). Qed.
Lemma lem8187362 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) : (term511 _144529 _144530 _144607 _144645 P p lt2 s f e) = (term512 _144529 _144530 _144607 _144645 P p lt2 s f e).
Proof. exact (@lem8187361 _144530 _144607 P (term513 _144529 _144530 _144607 _144645 P p lt2 s f e)). Qed.
Lemma lem8187363 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) : (term514 _144529 _144530 _144607 _144645 P p lt2 s f e g) = (term505 _144529 _144530 _144607 _144645 P p lt2 s f e g).
Proof. exact (eq_refl (term514 _144529 _144530 _144607 _144645 P p lt2 s f e g)). Qed.
Lemma lem8187364 {_144530 P : Type'} (z : P -> _144530) : z = z.
Proof. exact (eq_refl z). Qed.
Lemma lem8187365 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (z : P -> _144530) : (term515 _144529 _144530 _144607 _144645 P p lt2 s f e g z) = (term516 _144529 _144530 _144607 _144645 P p lt2 s f e g z).
Proof. exact (MK_COMB (@lem8187363 _144529 _144530 _144607 _144645 P p lt2 s f e g) (@lem8187364 _144530 P z)). Qed.
Lemma lem8187366 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : P -> _144530) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) : (term516 _144529 _144530 _144607 _144645 P p lt2 s f e g z) = (term503 _144529 _144530 _144607 _144645 P p lt2 s z f e g).
Proof. exact (eq_refl (term516 _144529 _144530 _144607 _144645 P p lt2 s f e g z)). Qed.
Lemma lem8187367 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : P -> _144530) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) : (term515 _144529 _144530 _144607 _144645 P p lt2 s f e g z) = (term503 _144529 _144530 _144607 _144645 P p lt2 s z f e g).
Proof. exact (TRANS (@lem8187365 _144529 _144530 _144607 _144645 P p lt2 s f e g z) (@lem8187366 _144529 _144530 _144607 _144645 P p lt2 s z f e g)). Qed.
Lemma lem8187368 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) : (term517 _144529 _144530 _144607 _144645 P p lt2 s f e g) = (term505 _144529 _144530 _144607 _144645 P p lt2 s f e g).
Proof. exact (fun_ext (fun z : P -> _144530 => @lem8187367 _144529 _144530 _144607 _144645 P p lt2 s z f e g)). Qed.
Lemma lem8187369 {_144530 P : Type'} : (@ex (P -> _144530)) = (@ex (P -> _144530)).
Proof. exact (eq_refl (@ex (P -> _144530))). Qed.
Lemma lem8187370 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) : (term518 _144529 _144530 _144607 _144645 P p lt2 s f e g) = (term506 _144529 _144530 _144607 _144645 P p lt2 s f e g).
Proof. exact (MK_COMB (@lem8187369 _144530 P) (@lem8187368 _144529 _144530 _144607 _144645 P p lt2 s f e g)). Qed.
Lemma lem8187371 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) : (term519 _144529 _144530 _144607 _144645 P p lt2 s f e) = (term507 _144529 _144530 _144607 _144645 P p lt2 s f e).
Proof. exact (fun_ext (fun g : _144530 -> _144607 => @lem8187370 _144529 _144530 _144607 _144645 P p lt2 s f e g)). Qed.
Lemma lem8187372 {_144530 _144607 : Type'} : (@all (_144530 -> _144607)) = (@all (_144530 -> _144607)).
Proof. exact (eq_refl (@all (_144530 -> _144607))). Qed.
Lemma lem8187373 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) : (term511 _144529 _144530 _144607 _144645 P p lt2 s f e) = (term508 _144529 _144530 _144607 _144645 P p lt2 s f e).
Proof. exact (MK_COMB (@lem8187372 _144530 _144607) (@lem8187371 _144529 _144530 _144607 _144645 P p lt2 s f e)). Qed.
Lemma lem8187374 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8187375 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) : (term520 _144529 _144530 _144607 _144645 P p lt2 s f e) = (term521 _144529 _144530 _144607 _144645 P p lt2 s f e).
Proof. exact (MK_COMB (@lem8187374) (@lem8187373 _144529 _144530 _144607 _144645 P p lt2 s f e)). Qed.
Lemma lem8187376 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) : (term514 _144529 _144530 _144607 _144645 P p lt2 s f e g) = (term505 _144529 _144530 _144607 _144645 P p lt2 s f e g).
Proof. exact (eq_refl (term514 _144529 _144530 _144607 _144645 P p lt2 s f e g)). Qed.
Lemma lem8187377 {_144530 _144607 P : Type'} (z : type557 _144530 _144607 P) (g : _144530 -> _144607) : (z g) = (z g).
Proof. exact (eq_refl (z g)). Qed.
Lemma lem8187378 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (z : type557 _144530 _144607 P) (g : _144530 -> _144607) : (term522 _144529 _144530 _144607 _144645 P p lt2 s f e z g) = (term523 _144529 _144530 _144607 _144645 P p lt2 s f e z g).
Proof. exact (MK_COMB (@lem8187376 _144529 _144530 _144607 _144645 P p lt2 s f e g) (@lem8187377 _144530 _144607 P z g)). Qed.
Lemma lem8187379 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : type557 _144530 _144607 P) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) : (term523 _144529 _144530 _144607 _144645 P p lt2 s f e z g) = (term524 _144529 _144530 _144607 _144645 P p lt2 s z f e g).
Proof. exact (eq_refl (term523 _144529 _144530 _144607 _144645 P p lt2 s f e z g)). Qed.
Lemma lem8187380 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : type557 _144530 _144607 P) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) : (term522 _144529 _144530 _144607 _144645 P p lt2 s f e z g) = (term524 _144529 _144530 _144607 _144645 P p lt2 s z f e g).
Proof. exact (TRANS (@lem8187378 _144529 _144530 _144607 _144645 P p lt2 s f e z g) (@lem8187379 _144529 _144530 _144607 _144645 P p lt2 s z f e g)). Qed.
Lemma lem8187381 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : type557 _144530 _144607 P) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) : (term525 _144529 _144530 _144607 _144645 P p lt2 s f e z) = (term526 _144529 _144530 _144607 _144645 P p lt2 s z f e).
Proof. exact (fun_ext (fun g : _144530 -> _144607 => @lem8187380 _144529 _144530 _144607 _144645 P p lt2 s z f e g)). Qed.
Lemma lem8187382 {_144530 _144607 : Type'} : (@all (_144530 -> _144607)) = (@all (_144530 -> _144607)).
Proof. exact (eq_refl (@all (_144530 -> _144607))). Qed.
Lemma lem8187383 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : type557 _144530 _144607 P) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) : (term527 _144529 _144530 _144607 _144645 P p lt2 s f e z) = (term528 _144529 _144530 _144607 _144645 P p lt2 s z f e).
Proof. exact (MK_COMB (@lem8187382 _144530 _144607) (@lem8187381 _144529 _144530 _144607 _144645 P p lt2 s z f e)). Qed.
Lemma lem8187384 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) : (term529 _144529 _144530 _144607 _144645 P p lt2 s f e) = (term530 _144529 _144530 _144607 _144645 P p lt2 s f e).
Proof. exact (fun_ext (fun z : type557 _144530 _144607 P => @lem8187383 _144529 _144530 _144607 _144645 P p lt2 s z f e)). Qed.
Lemma lem8187385 {_144530 _144607 P : Type'} : (@ex ((_144530 -> _144607) -> P -> _144530)) = (@ex ((_144530 -> _144607) -> P -> _144530)).
Proof. exact (eq_refl (@ex ((_144530 -> _144607) -> P -> _144530))). Qed.
Lemma lem8187386 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) : (term512 _144529 _144530 _144607 _144645 P p lt2 s f e) = (term531 _144529 _144530 _144607 _144645 P p lt2 s f e).
Proof. exact (MK_COMB (@lem8187385 _144530 _144607 P) (@lem8187384 _144529 _144530 _144607 _144645 P p lt2 s f e)). Qed.
Lemma lem8187387 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) : ((term511 _144529 _144530 _144607 _144645 P p lt2 s f e) = (term512 _144529 _144530 _144607 _144645 P p lt2 s f e)) = ((term508 _144529 _144530 _144607 _144645 P p lt2 s f e) = (term531 _144529 _144530 _144607 _144645 P p lt2 s f e)).
Proof. exact (MK_COMB (@lem8187375 _144529 _144530 _144607 _144645 P p lt2 s f e) (@lem8187386 _144529 _144530 _144607 _144645 P p lt2 s f e)). Qed.
Lemma lem8187388 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) : (term508 _144529 _144530 _144607 _144645 P p lt2 s f e) = (term531 _144529 _144530 _144607 _144645 P p lt2 s f e).
Proof. exact (EQ_MP (@lem8187387 _144529 _144530 _144607 _144645 P p lt2 s f e) (@lem8187362 _144529 _144530 _144607 _144645 P p lt2 s f e)). Qed.
Lemma lem8187389 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) : (term430 _144529 _144530 _144607 _144645 P p lt2 s f e) = (term531 _144529 _144530 _144607 _144645 P p lt2 s f e).
Proof. exact (TRANS (@lem8187358 _144529 _144530 _144607 _144645 P p lt2 s f e) (@lem8187388 _144529 _144530 _144607 _144645 P p lt2 s f e)). Qed.
Lemma lem8187390 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (e : type564 _144530 _144607 _144645 P) : (term431 _144529 _144530 _144607 _144645 P p lt2 s e) = (term532 _144529 _144530 _144607 _144645 P p lt2 s e).
Proof. exact (fun_ext (fun f : _144530 -> _144607 => @lem8187389 _144529 _144530 _144607 _144645 P p lt2 s f e)). Qed.
Lemma lem8187391 {_144530 _144607 : Type'} : (@all (_144530 -> _144607)) = (@all (_144530 -> _144607)).
Proof. exact (eq_refl (@all (_144530 -> _144607))). Qed.
Lemma lem8187392 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (e : type564 _144530 _144607 _144645 P) : (term432 _144529 _144530 _144607 _144645 P p lt2 s e) = (term533 _144529 _144530 _144607 _144645 P p lt2 s e).
Proof. exact (MK_COMB (@lem8187391 _144530 _144607) (@lem8187390 _144529 _144530 _144607 _144645 P p lt2 s e)). Qed.
Lemma lem8187394 {A B : Type'} (P : type1413 A B) : (term482 A B P) = (term483 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem8187395 {_144530 _144607 P : Type'} (P' : type495 _144530 _144607 P) : (term534 _144530 _144607 P P') = (term535 _144530 _144607 P P').
Proof. exact (@lem8187394 (_144530 -> _144607) (type557 _144530 _144607 P) P'). Qed.
Lemma lem8187396 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (e : type564 _144530 _144607 _144645 P) : (term536 _144529 _144530 _144607 _144645 P p lt2 s e) = (term537 _144529 _144530 _144607 _144645 P p lt2 s e).
Proof. exact (@lem8187395 _144530 _144607 P (term538 _144529 _144530 _144607 _144645 P p lt2 s e)). Qed.
Lemma lem8187397 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) : (term539 _144529 _144530 _144607 _144645 P p lt2 s e f) = (term530 _144529 _144530 _144607 _144645 P p lt2 s f e).
Proof. exact (eq_refl (term539 _144529 _144530 _144607 _144645 P p lt2 s e f)). Qed.
Lemma lem8187398 {_144530 _144607 P : Type'} (z : type557 _144530 _144607 P) : z = z.
Proof. exact (eq_refl z). Qed.
Lemma lem8187399 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (z : type557 _144530 _144607 P) : (term540 _144529 _144530 _144607 _144645 P p lt2 s e f z) = (term541 _144529 _144530 _144607 _144645 P p lt2 s f e z).
Proof. exact (MK_COMB (@lem8187397 _144529 _144530 _144607 _144645 P p lt2 s f e) (@lem8187398 _144530 _144607 P z)). Qed.
Lemma lem8187400 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : type557 _144530 _144607 P) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) : (term541 _144529 _144530 _144607 _144645 P p lt2 s f e z) = (term528 _144529 _144530 _144607 _144645 P p lt2 s z f e).
Proof. exact (eq_refl (term541 _144529 _144530 _144607 _144645 P p lt2 s f e z)). Qed.
Lemma lem8187401 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : type557 _144530 _144607 P) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) : (term540 _144529 _144530 _144607 _144645 P p lt2 s e f z) = (term528 _144529 _144530 _144607 _144645 P p lt2 s z f e).
Proof. exact (TRANS (@lem8187399 _144529 _144530 _144607 _144645 P p lt2 s f e z) (@lem8187400 _144529 _144530 _144607 _144645 P p lt2 s z f e)). Qed.
Lemma lem8187402 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) : (term542 _144529 _144530 _144607 _144645 P p lt2 s e f) = (term530 _144529 _144530 _144607 _144645 P p lt2 s f e).
Proof. exact (fun_ext (fun z : type557 _144530 _144607 P => @lem8187401 _144529 _144530 _144607 _144645 P p lt2 s z f e)). Qed.
Lemma lem8187403 {_144530 _144607 P : Type'} : (@ex ((_144530 -> _144607) -> P -> _144530)) = (@ex ((_144530 -> _144607) -> P -> _144530)).
Proof. exact (eq_refl (@ex ((_144530 -> _144607) -> P -> _144530))). Qed.
Lemma lem8187404 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) : (term543 _144529 _144530 _144607 _144645 P p lt2 s e f) = (term531 _144529 _144530 _144607 _144645 P p lt2 s f e).
Proof. exact (MK_COMB (@lem8187403 _144530 _144607 P) (@lem8187402 _144529 _144530 _144607 _144645 P p lt2 s f e)). Qed.
Lemma lem8187405 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (e : type564 _144530 _144607 _144645 P) : (term544 _144529 _144530 _144607 _144645 P p lt2 s e) = (term532 _144529 _144530 _144607 _144645 P p lt2 s e).
Proof. exact (fun_ext (fun f : _144530 -> _144607 => @lem8187404 _144529 _144530 _144607 _144645 P p lt2 s f e)). Qed.
Lemma lem8187406 {_144530 _144607 : Type'} : (@all (_144530 -> _144607)) = (@all (_144530 -> _144607)).
Proof. exact (eq_refl (@all (_144530 -> _144607))). Qed.
Lemma lem8187407 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (e : type564 _144530 _144607 _144645 P) : (term536 _144529 _144530 _144607 _144645 P p lt2 s e) = (term533 _144529 _144530 _144607 _144645 P p lt2 s e).
Proof. exact (MK_COMB (@lem8187406 _144530 _144607) (@lem8187405 _144529 _144530 _144607 _144645 P p lt2 s e)). Qed.
Lemma lem8187408 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8187409 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (e : type564 _144530 _144607 _144645 P) : (term545 _144529 _144530 _144607 _144645 P p lt2 s e) = (term546 _144529 _144530 _144607 _144645 P p lt2 s e).
Proof. exact (MK_COMB (@lem8187408) (@lem8187407 _144529 _144530 _144607 _144645 P p lt2 s e)). Qed.
Lemma lem8187410 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) : (term539 _144529 _144530 _144607 _144645 P p lt2 s e f) = (term530 _144529 _144530 _144607 _144645 P p lt2 s f e).
Proof. exact (eq_refl (term539 _144529 _144530 _144607 _144645 P p lt2 s e f)). Qed.
Lemma lem8187411 {_144530 _144607 P : Type'} (z : type518 _144530 _144607 P) (f : _144530 -> _144607) : (z f) = (z f).
Proof. exact (eq_refl (z f)). Qed.
Lemma lem8187412 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (e : type564 _144530 _144607 _144645 P) (z : type518 _144530 _144607 P) (f : _144530 -> _144607) : (term547 _144529 _144530 _144607 _144645 P p lt2 s e z f) = (term548 _144529 _144530 _144607 _144645 P p lt2 s e z f).
Proof. exact (MK_COMB (@lem8187410 _144529 _144530 _144607 _144645 P p lt2 s f e) (@lem8187411 _144530 _144607 P z f)). Qed.
Lemma lem8187413 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : type518 _144530 _144607 P) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) : (term548 _144529 _144530 _144607 _144645 P p lt2 s e z f) = (term549 _144529 _144530 _144607 _144645 P p lt2 s z f e).
Proof. exact (eq_refl (term548 _144529 _144530 _144607 _144645 P p lt2 s e z f)). Qed.
Lemma lem8187414 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : type518 _144530 _144607 P) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) : (term547 _144529 _144530 _144607 _144645 P p lt2 s e z f) = (term549 _144529 _144530 _144607 _144645 P p lt2 s z f e).
Proof. exact (TRANS (@lem8187412 _144529 _144530 _144607 _144645 P p lt2 s e z f) (@lem8187413 _144529 _144530 _144607 _144645 P p lt2 s z f e)). Qed.
Lemma lem8187415 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : type518 _144530 _144607 P) (e : type564 _144530 _144607 _144645 P) : (term550 _144529 _144530 _144607 _144645 P p lt2 s e z) = (term551 _144529 _144530 _144607 _144645 P p lt2 s z e).
Proof. exact (fun_ext (fun f : _144530 -> _144607 => @lem8187414 _144529 _144530 _144607 _144645 P p lt2 s z f e)). Qed.
Lemma lem8187416 {_144530 _144607 : Type'} : (@all (_144530 -> _144607)) = (@all (_144530 -> _144607)).
Proof. exact (eq_refl (@all (_144530 -> _144607))). Qed.
Lemma lem8187417 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : type518 _144530 _144607 P) (e : type564 _144530 _144607 _144645 P) : (term552 _144529 _144530 _144607 _144645 P p lt2 s e z) = (term553 _144529 _144530 _144607 _144645 P p lt2 s z e).
Proof. exact (MK_COMB (@lem8187416 _144530 _144607) (@lem8187415 _144529 _144530 _144607 _144645 P p lt2 s z e)). Qed.
Lemma lem8187418 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (e : type564 _144530 _144607 _144645 P) : (term554 _144529 _144530 _144607 _144645 P p lt2 s e) = (term555 _144529 _144530 _144607 _144645 P p lt2 s e).
Proof. exact (fun_ext (fun z : type518 _144530 _144607 P => @lem8187417 _144529 _144530 _144607 _144645 P p lt2 s z e)). Qed.
Lemma lem8187419 {_144530 _144607 P : Type'} : (@ex ((_144530 -> _144607) -> (_144530 -> _144607) -> P -> _144530)) = (@ex ((_144530 -> _144607) -> (_144530 -> _144607) -> P -> _144530)).
Proof. exact (eq_refl (@ex ((_144530 -> _144607) -> (_144530 -> _144607) -> P -> _144530))). Qed.
Lemma lem8187420 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (e : type564 _144530 _144607 _144645 P) : (term537 _144529 _144530 _144607 _144645 P p lt2 s e) = (term556 _144529 _144530 _144607 _144645 P p lt2 s e).
Proof. exact (MK_COMB (@lem8187419 _144530 _144607 P) (@lem8187418 _144529 _144530 _144607 _144645 P p lt2 s e)). Qed.
Lemma lem8187421 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (e : type564 _144530 _144607 _144645 P) : ((term536 _144529 _144530 _144607 _144645 P p lt2 s e) = (term537 _144529 _144530 _144607 _144645 P p lt2 s e)) = ((term533 _144529 _144530 _144607 _144645 P p lt2 s e) = (term556 _144529 _144530 _144607 _144645 P p lt2 s e)).
Proof. exact (MK_COMB (@lem8187409 _144529 _144530 _144607 _144645 P p lt2 s e) (@lem8187420 _144529 _144530 _144607 _144645 P p lt2 s e)). Qed.
Lemma lem8187422 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (e : type564 _144530 _144607 _144645 P) : (term533 _144529 _144530 _144607 _144645 P p lt2 s e) = (term556 _144529 _144530 _144607 _144645 P p lt2 s e).
Proof. exact (EQ_MP (@lem8187421 _144529 _144530 _144607 _144645 P p lt2 s e) (@lem8187396 _144529 _144530 _144607 _144645 P p lt2 s e)). Qed.
Lemma lem8187424 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (e : type564 _144530 _144607 _144645 P) : (term432 _144529 _144530 _144607 _144645 P p lt2 s e) = (term556 _144529 _144530 _144607 _144645 P p lt2 s e).
Proof. exact (TRANS (@lem8187392 _144529 _144530 _144607 _144645 P p lt2 s e) (@lem8187422 _144529 _144530 _144607 _144645 P p lt2 s e)). Qed.
Lemma lem8187425 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (e : type564 _144530 _144607 _144645 P) : (term141 _144529 _144530 _144607 _144645 P p lt2 s e) = (term556 _144529 _144530 _144607 _144645 P p lt2 s e).
Proof. exact (TRANS (@lem8187144 _144529 _144530 _144607 _144645 P p lt2 s e) (@lem8187424 _144529 _144530 _144607 _144645 P p lt2 s e)). Qed.
Lemma lem8187426 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (e : type564 _144530 _144607 _144645 P) (h1 : term141 _144529 _144530 _144607 _144645 P p lt2 s e) : term556 _144529 _144530 _144607 _144645 P p lt2 s e.
Proof. exact (EQ_MP (@lem8187425 _144529 _144530 _144607 _144645 P p lt2 s e) (@lem8186763 _144529 _144530 _144607 _144645 P p lt2 s e h1)). Qed.
Lemma lem8187434 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) : (term557 _144530 _144607 _144645 P pat e q f a) = (term558 _144530 _144607 _144645 P pat e q f a).
Proof. exact (@lem17045 ((pat f a) = (e f a)) (q f a)). Qed.
Lemma lem8187436 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) : (term416 _144530 _144607 P p f a) = (term416 _144530 _144607 P p f a).
Proof. exact (eq_refl (term416 _144530 _144607 P p f a)). Qed.
Lemma lem8187437 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) : (term559 _144530 _144607 _144645 P p pat e q f a) = (term560 _144530 _144607 _144645 P p pat e q f a).
Proof. exact (MK_COMB (@lem8187436 _144530 _144607 P p f a) (@lem8187434 _144530 _144607 _144645 P pat e q f a)). Qed.
Lemma lem8187438 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) : (term561 _144530 _144607 _144645 P p pat e q f a) = (term559 _144530 _144607 _144645 P p pat e q f a).
Proof. exact (@lem17045 (p f a) (term562 _144530 _144607 _144645 P pat e q f a)). Qed.
Lemma lem8187439 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) : (term561 _144530 _144607 _144645 P p pat e q f a) = (term560 _144530 _144607 _144645 P p pat e q f a).
Proof. exact (TRANS (@lem8187438 _144530 _144607 _144645 P p pat e q f a) (@lem8187437 _144530 _144607 _144645 P p pat e q f a)). Qed.
Lemma lem8187447 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term557 _144530 _144607 _144645 P pat e q g a) = (term558 _144530 _144607 _144645 P pat e q g a).
Proof. exact (@lem17045 ((pat g a) = (e g a)) (q g a)). Qed.
Lemma lem8187449 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term416 _144530 _144607 P p g a) = (term416 _144530 _144607 P p g a).
Proof. exact (eq_refl (term416 _144530 _144607 P p g a)). Qed.
Lemma lem8187450 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term559 _144530 _144607 _144645 P p pat e q g a) = (term560 _144530 _144607 _144645 P p pat e q g a).
Proof. exact (MK_COMB (@lem8187449 _144530 _144607 P p g a) (@lem8187447 _144530 _144607 _144645 P pat e q g a)). Qed.
Lemma lem8187451 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term561 _144530 _144607 _144645 P p pat e q g a) = (term559 _144530 _144607 _144645 P p pat e q g a).
Proof. exact (@lem17045 (p g a) (term562 _144530 _144607 _144645 P pat e q g a)). Qed.
Lemma lem8187452 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term561 _144530 _144607 _144645 P p pat e q g a) = (term560 _144530 _144607 _144645 P p pat e q g a).
Proof. exact (TRANS (@lem8187451 _144530 _144607 _144645 P p pat e q g a) (@lem8187450 _144530 _144607 _144645 P p pat e q g a)). Qed.
Lemma lem8187459 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (z : _144530) : (term404 _144529 _144530 _144607 P lt2 s a f g z) = (term405 _144529 _144530 _144607 P lt2 s a f g z).
Proof. exact (@lem17362 (term406 _144529 _144530 P lt2 z s a) ((f z) = (g z))). Qed.
Lemma lem8187460 {_144530 : Type'} (P : _144530 -> Prop) : (term407 _144530 P) = (term408 _144530 P).
Proof. exact (@lem18392 _144530 P). Qed.
Lemma lem8187461 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term409 _144529 _144530 _144607 P lt2 s a f g) = (term410 _144529 _144530 _144607 P lt2 s a f g).
Proof. exact (@lem8187460 _144530 (term397 _144529 _144530 _144607 P lt2 s a f g)). Qed.
Lemma lem8187462 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (z : _144530) : (term411 _144529 _144530 _144607 P lt2 s a f g z) = (term396 _144529 _144530 _144607 P lt2 s a f g z).
Proof. exact (eq_refl (term411 _144529 _144530 _144607 P lt2 s a f g z)). Qed.
Lemma lem8187463 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8187464 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (z : _144530) : (term412 _144529 _144530 _144607 P lt2 s a f g z) = (term404 _144529 _144530 _144607 P lt2 s a f g z).
Proof. exact (MK_COMB (@lem8187463) (@lem8187462 _144529 _144530 _144607 P lt2 s a f g z)). Qed.
Lemma lem8187465 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (z : _144530) : (term412 _144529 _144530 _144607 P lt2 s a f g z) = (term405 _144529 _144530 _144607 P lt2 s a f g z).
Proof. exact (TRANS (@lem8187464 _144529 _144530 _144607 P lt2 s a f g z) (@lem8187459 _144529 _144530 _144607 P lt2 s a f g z)). Qed.
Lemma lem8187466 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term413 _144529 _144530 _144607 P lt2 s a f g) = (term414 _144529 _144530 _144607 P lt2 s a f g).
Proof. exact (fun_ext (fun z : _144530 => @lem8187465 _144529 _144530 _144607 P lt2 s a f g z)). Qed.
Lemma lem8187467 {_144530 : Type'} : (@ex _144530) = (@ex _144530).
Proof. exact (eq_refl (@ex _144530)). Qed.
Lemma lem8187468 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term410 _144529 _144530 _144607 P lt2 s a f g) = (term415 _144529 _144530 _144607 P lt2 s a f g).
Proof. exact (MK_COMB (@lem8187467 _144530) (@lem8187466 _144529 _144530 _144607 P lt2 s a f g)). Qed.
Lemma lem8187469 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term409 _144529 _144530 _144607 P lt2 s a f g) = (term415 _144529 _144530 _144607 P lt2 s a f g).
Proof. exact (TRANS (@lem8187461 _144529 _144530 _144607 P lt2 s a f g) (@lem8187468 _144529 _144530 _144607 P lt2 s a f g)). Qed.
Lemma lem8187470 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8187471 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term563 _144530 _144607 _144645 P p pat e q g a) = (term564 _144530 _144607 _144645 P p pat e q g a).
Proof. exact (MK_COMB (@lem8187470) (@lem8187452 _144530 _144607 _144645 P p pat e q g a)). Qed.
Lemma lem8187472 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term565 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) = (term566 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g).
Proof. exact (MK_COMB (@lem8187471 _144530 _144607 _144645 P p pat e q g a) (@lem8187469 _144529 _144530 _144607 P lt2 s a f g)). Qed.
Lemma lem8187473 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term567 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) = (term565 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g).
Proof. exact (@lem17045 (term159 _144530 _144607 _144645 P p pat e q g a) (term165 _144529 _144530 _144607 P lt2 s a f g)). Qed.
Lemma lem8187474 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term567 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) = (term566 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g).
Proof. exact (TRANS (@lem8187473 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) (@lem8187472 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g)). Qed.
Lemma lem8187475 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8187476 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) : (term563 _144530 _144607 _144645 P p pat e q f a) = (term564 _144530 _144607 _144645 P p pat e q f a).
Proof. exact (MK_COMB (@lem8187475) (@lem8187439 _144530 _144607 _144645 P p pat e q f a)). Qed.
Lemma lem8187477 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term568 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) = (term569 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g).
Proof. exact (MK_COMB (@lem8187476 _144530 _144607 _144645 P p pat e q f a) (@lem8187474 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g)). Qed.
Lemma lem8187478 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term570 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) = (term568 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g).
Proof. exact (@lem17045 (term159 _144530 _144607 _144645 P p pat e q f a) (term167 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g)). Qed.
Lemma lem8187479 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term570 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) = (term569 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g).
Proof. exact (TRANS (@lem8187478 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) (@lem8187477 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g)). Qed.
Lemma lem8187480 {_144530 _144607 _144654 P : Type'} (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : ((t f a) = (t g a)) = ((t f a) = (t g a)).
Proof. exact (eq_refl ((t f a) = (t g a))). Qed.
Lemma lem8187481 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8187482 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term571 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) = (term572 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g).
Proof. exact (MK_COMB (@lem8187481) (@lem8187479 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g)). Qed.
Lemma lem8187483 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (term573 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g a) = (term574 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g a).
Proof. exact (MK_COMB (@lem8187482 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) (@lem8187480 _144530 _144607 _144654 P f t g a)). Qed.
Lemma lem8187484 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (term173 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g a) = (term573 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g a).
Proof. exact (@lem17265 (term169 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) ((t f a) = (t g a))). Qed.
Lemma lem8187485 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (term173 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g a) = (term574 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g a).
Proof. exact (TRANS (@lem8187484 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g a) (@lem8187483 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g a)). Qed.
Lemma lem8187486 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) : (term175 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g) = (term575 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g).
Proof. exact (fun_ext (fun a : P => @lem8187485 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g a)). Qed.
Lemma lem8187487 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8187488 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) : (term177 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g) = (term576 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g).
Proof. exact (MK_COMB (@lem8187487 P) (@lem8187486 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g)). Qed.
Lemma lem8187489 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) : (term179 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t) = (term577 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t).
Proof. exact (fun_ext (fun g : _144530 -> _144607 => @lem8187488 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g)). Qed.
Lemma lem8187490 {_144530 _144607 : Type'} : (@all (_144530 -> _144607)) = (@all (_144530 -> _144607)).
Proof. exact (eq_refl (@all (_144530 -> _144607))). Qed.
Lemma lem8187491 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) : (term181 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t) = (term578 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t).
Proof. exact (MK_COMB (@lem8187490 _144530 _144607) (@lem8187489 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t)). Qed.
Lemma lem8187492 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (t : type564 _144530 _144607 _144654 P) : (term183 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) = (term579 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t).
Proof. exact (fun_ext (fun f : _144530 -> _144607 => @lem8187491 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t)). Qed.
Lemma lem8187493 {_144530 _144607 : Type'} : (@all (_144530 -> _144607)) = (@all (_144530 -> _144607)).
Proof. exact (eq_refl (@all (_144530 -> _144607))). Qed.
Lemma lem8187494 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (t : type564 _144530 _144607 _144654 P) : (term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) = (term580 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t).
Proof. exact (MK_COMB (@lem8187493 _144530 _144607) (@lem8187492 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t)). Qed.
Lemma lem8187601 {A : Type'} (P : Prop) (Q : A -> Prop) : (term433 A P Q) = (term434 A P Q).
Proof. exact (EQ_MP (@lem18911 A P Q) (@lem18910 A P Q)). Qed.
Lemma lem8187602 {_144530 : Type'} (P : Prop) (Q : _144530 -> Prop) : (term433 _144530 P Q) = (term434 _144530 P Q).
Proof. exact (@lem8187601 _144530 P Q). Qed.
Lemma lem8187603 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term581 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) = (term582 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g).
Proof. exact (@lem8187602 _144530 (term560 _144530 _144607 _144645 P p pat e q g a) (term414 _144529 _144530 _144607 P lt2 s a f g)). Qed.
Lemma lem8187604 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (z : _144530) : (term438 _144529 _144530 _144607 P lt2 s a f g z) = (term405 _144529 _144530 _144607 P lt2 s a f g z).
Proof. exact (eq_refl (term438 _144529 _144530 _144607 P lt2 s a f g z)). Qed.
Lemma lem8187605 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term439 _144529 _144530 _144607 P lt2 s a f g) = (term414 _144529 _144530 _144607 P lt2 s a f g).
Proof. exact (fun_ext (fun z : _144530 => @lem8187604 _144529 _144530 _144607 P lt2 s a f g z)). Qed.
Lemma lem8187606 {_144530 : Type'} : (@ex _144530) = (@ex _144530).
Proof. exact (eq_refl (@ex _144530)). Qed.
Lemma lem8187607 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term440 _144529 _144530 _144607 P lt2 s a f g) = (term415 _144529 _144530 _144607 P lt2 s a f g).
Proof. exact (MK_COMB (@lem8187606 _144530) (@lem8187605 _144529 _144530 _144607 P lt2 s a f g)). Qed.
Lemma lem8187608 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term564 _144530 _144607 _144645 P p pat e q g a) = (term564 _144530 _144607 _144645 P p pat e q g a).
Proof. exact (eq_refl (term564 _144530 _144607 _144645 P p pat e q g a)). Qed.
Lemma lem8187609 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term581 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) = (term566 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g).
Proof. exact (MK_COMB (@lem8187608 _144530 _144607 _144645 P p pat e q g a) (@lem8187607 _144529 _144530 _144607 P lt2 s a f g)). Qed.
Lemma lem8187610 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8187611 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term583 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) = (term584 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g).
Proof. exact (MK_COMB (@lem8187610) (@lem8187609 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g)). Qed.
Lemma lem8187612 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (z : _144530) : (term438 _144529 _144530 _144607 P lt2 s a f g z) = (term405 _144529 _144530 _144607 P lt2 s a f g z).
Proof. exact (eq_refl (term438 _144529 _144530 _144607 P lt2 s a f g z)). Qed.
Lemma lem8187613 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term564 _144530 _144607 _144645 P p pat e q g a) = (term564 _144530 _144607 _144645 P p pat e q g a).
Proof. exact (eq_refl (term564 _144530 _144607 _144645 P p pat e q g a)). Qed.
Lemma lem8187614 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (z : _144530) : (term585 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g z) = (term586 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g z).
Proof. exact (MK_COMB (@lem8187613 _144530 _144607 _144645 P p pat e q g a) (@lem8187612 _144529 _144530 _144607 P lt2 s a f g z)). Qed.
Lemma lem8187615 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term587 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) = (term588 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g).
Proof. exact (fun_ext (fun z : _144530 => @lem8187614 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g z)). Qed.
Lemma lem8187616 {_144530 : Type'} : (@ex _144530) = (@ex _144530).
Proof. exact (eq_refl (@ex _144530)). Qed.
Lemma lem8187617 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term582 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) = (term589 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g).
Proof. exact (MK_COMB (@lem8187616 _144530) (@lem8187615 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g)). Qed.
Lemma lem8187618 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : ((term581 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) = (term582 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g)) = ((term566 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) = (term589 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g)).
Proof. exact (MK_COMB (@lem8187611 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) (@lem8187617 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g)). Qed.
Lemma lem8187619 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term566 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) = (term589 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g).
Proof. exact (EQ_MP (@lem8187618 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) (@lem8187603 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g)). Qed.
Lemma lem8187620 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) : (term564 _144530 _144607 _144645 P p pat e q f a) = (term564 _144530 _144607 _144645 P p pat e q f a).
Proof. exact (eq_refl (term564 _144530 _144607 _144645 P p pat e q f a)). Qed.
Lemma lem8187621 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term569 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) = (term590 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g).
Proof. exact (MK_COMB (@lem8187620 _144530 _144607 _144645 P p pat e q f a) (@lem8187619 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g)). Qed.
Lemma lem8187623 {A : Type'} (P : Prop) (Q : A -> Prop) : (term433 A P Q) = (term434 A P Q).
Proof. exact (EQ_MP (@lem18911 A P Q) (@lem18910 A P Q)). Qed.
Lemma lem8187624 {_144530 : Type'} (P : Prop) (Q : _144530 -> Prop) : (term433 _144530 P Q) = (term434 _144530 P Q).
Proof. exact (@lem8187623 _144530 P Q). Qed.
Lemma lem8187625 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term591 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) = (term592 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g).
Proof. exact (@lem8187624 _144530 (term560 _144530 _144607 _144645 P p pat e q f a) (term588 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g)). Qed.
Lemma lem8187626 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (z : _144530) : (term593 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g z) = (term586 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g z).
Proof. exact (eq_refl (term593 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g z)). Qed.
Lemma lem8187627 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term594 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) = (term588 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g).
Proof. exact (fun_ext (fun z : _144530 => @lem8187626 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g z)). Qed.
Lemma lem8187628 {_144530 : Type'} : (@ex _144530) = (@ex _144530).
Proof. exact (eq_refl (@ex _144530)). Qed.
Lemma lem8187629 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term595 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) = (term589 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g).
Proof. exact (MK_COMB (@lem8187628 _144530) (@lem8187627 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g)). Qed.
Lemma lem8187630 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) : (term564 _144530 _144607 _144645 P p pat e q f a) = (term564 _144530 _144607 _144645 P p pat e q f a).
Proof. exact (eq_refl (term564 _144530 _144607 _144645 P p pat e q f a)). Qed.
Lemma lem8187631 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term591 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) = (term590 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g).
Proof. exact (MK_COMB (@lem8187630 _144530 _144607 _144645 P p pat e q f a) (@lem8187629 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g)). Qed.
Lemma lem8187632 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8187633 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term596 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) = (term597 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g).
Proof. exact (MK_COMB (@lem8187632) (@lem8187631 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g)). Qed.
Lemma lem8187634 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (z : _144530) : (term593 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g z) = (term586 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g z).
Proof. exact (eq_refl (term593 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g z)). Qed.
Lemma lem8187635 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) : (term564 _144530 _144607 _144645 P p pat e q f a) = (term564 _144530 _144607 _144645 P p pat e q f a).
Proof. exact (eq_refl (term564 _144530 _144607 _144645 P p pat e q f a)). Qed.
Lemma lem8187636 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (z : _144530) : (term598 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g z) = (term599 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g z).
Proof. exact (MK_COMB (@lem8187635 _144530 _144607 _144645 P p pat e q f a) (@lem8187634 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g z)). Qed.
Lemma lem8187637 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term600 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) = (term601 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g).
Proof. exact (fun_ext (fun z : _144530 => @lem8187636 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g z)). Qed.
Lemma lem8187638 {_144530 : Type'} : (@ex _144530) = (@ex _144530).
Proof. exact (eq_refl (@ex _144530)). Qed.
Lemma lem8187639 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term592 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) = (term602 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g).
Proof. exact (MK_COMB (@lem8187638 _144530) (@lem8187637 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g)). Qed.
Lemma lem8187640 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : ((term591 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) = (term592 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g)) = ((term590 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) = (term602 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g)).
Proof. exact (MK_COMB (@lem8187633 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) (@lem8187639 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g)). Qed.
Lemma lem8187641 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term590 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) = (term602 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g).
Proof. exact (EQ_MP (@lem8187640 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) (@lem8187625 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g)). Qed.
Lemma lem8187642 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term569 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) = (term602 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g).
Proof. exact (TRANS (@lem8187621 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) (@lem8187641 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g)). Qed.
Lemma lem8187643 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8187644 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term572 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) = (term603 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g).
Proof. exact (MK_COMB (@lem8187643) (@lem8187642 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g)). Qed.
Lemma lem8187645 {_144530 _144607 _144654 P : Type'} (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : ((t f a) = (t g a)) = ((t f a) = (t g a)).
Proof. exact (eq_refl ((t f a) = (t g a))). Qed.
Lemma lem8187646 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (term574 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g a) = (term604 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g a).
Proof. exact (MK_COMB (@lem8187644 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) (@lem8187645 _144530 _144607 _144654 P f t g a)). Qed.
Lemma lem8187648 {A : Type'} (P : A -> Prop) (Q : Prop) : (term463 A P Q) = (term464 A P Q).
Proof. exact (EQ_MP (@lem18905 A P Q) (@lem18904 A P Q)). Qed.
Lemma lem8187649 {_144530 : Type'} (P : _144530 -> Prop) (Q : Prop) : (term463 _144530 P Q) = (term464 _144530 P Q).
Proof. exact (@lem8187648 _144530 P Q). Qed.
Lemma lem8187650 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (term605 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g a) = (term606 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g a).
Proof. exact (@lem8187649 _144530 (term601 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) ((t f a) = (t g a))). Qed.
Lemma lem8187651 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (z : _144530) : (term607 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g z) = (term599 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g z).
Proof. exact (eq_refl (term607 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g z)). Qed.
Lemma lem8187652 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term608 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) = (term601 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g).
Proof. exact (fun_ext (fun z : _144530 => @lem8187651 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g z)). Qed.
Lemma lem8187653 {_144530 : Type'} : (@ex _144530) = (@ex _144530).
Proof. exact (eq_refl (@ex _144530)). Qed.
Lemma lem8187654 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term609 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) = (term602 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g).
Proof. exact (MK_COMB (@lem8187653 _144530) (@lem8187652 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g)). Qed.
Lemma lem8187655 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8187656 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term610 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) = (term603 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g).
Proof. exact (MK_COMB (@lem8187655) (@lem8187654 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g)). Qed.
Lemma lem8187657 {_144530 _144607 _144654 P : Type'} (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : ((t f a) = (t g a)) = ((t f a) = (t g a)).
Proof. exact (eq_refl ((t f a) = (t g a))). Qed.
Lemma lem8187658 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (term605 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g a) = (term604 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g a).
Proof. exact (MK_COMB (@lem8187656 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) (@lem8187657 _144530 _144607 _144654 P f t g a)). Qed.
Lemma lem8187659 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8187660 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (term611 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g a) = (term612 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g a).
Proof. exact (MK_COMB (@lem8187659) (@lem8187658 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g a)). Qed.
Lemma lem8187661 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (z : _144530) : (term607 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g z) = (term599 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g z).
Proof. exact (eq_refl (term607 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g z)). Qed.
Lemma lem8187662 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8187663 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (z : _144530) : (term613 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g z) = (term614 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g z).
Proof. exact (MK_COMB (@lem8187662) (@lem8187661 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g z)). Qed.
Lemma lem8187664 {_144530 _144607 _144654 P : Type'} (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : ((t f a) = (t g a)) = ((t f a) = (t g a)).
Proof. exact (eq_refl ((t f a) = (t g a))). Qed.
Lemma lem8187665 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : _144530) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (term615 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z f t g a) = (term616 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z f t g a).
Proof. exact (MK_COMB (@lem8187663 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g z) (@lem8187664 _144530 _144607 _144654 P f t g a)). Qed.
Lemma lem8187666 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (term617 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g a) = (term618 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g a).
Proof. exact (fun_ext (fun z : _144530 => @lem8187665 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z f t g a)). Qed.
Lemma lem8187667 {_144530 : Type'} : (@ex _144530) = (@ex _144530).
Proof. exact (eq_refl (@ex _144530)). Qed.
Lemma lem8187668 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (term606 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g a) = (term619 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g a).
Proof. exact (MK_COMB (@lem8187667 _144530) (@lem8187666 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g a)). Qed.
Lemma lem8187669 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : ((term605 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g a) = (term606 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g a)) = ((term604 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g a) = (term619 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g a)).
Proof. exact (MK_COMB (@lem8187660 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g a) (@lem8187668 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g a)). Qed.
Lemma lem8187670 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (term604 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g a) = (term619 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g a).
Proof. exact (EQ_MP (@lem8187669 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g a) (@lem8187650 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g a)). Qed.
Lemma lem8187671 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (term574 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g a) = (term619 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g a).
Proof. exact (TRANS (@lem8187646 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g a) (@lem8187670 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g a)). Qed.
Lemma lem8187672 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) : (term575 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g) = (term620 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g).
Proof. exact (fun_ext (fun a : P => @lem8187671 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g a)). Qed.
Lemma lem8187673 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8187674 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) : (term576 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g) = (term621 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g).
Proof. exact (MK_COMB (@lem8187673 P) (@lem8187672 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g)). Qed.
Lemma lem8187676 {A B : Type'} (P : type1413 A B) : (term482 A B P) = (term483 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem8187677 {_144530 P : Type'} (P' : type1470 _144530 P) : (term484 _144530 P P') = (term485 _144530 P P').
Proof. exact (@lem8187676 P _144530 P'). Qed.
Lemma lem8187678 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) : (term622 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g) = (term623 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g).
Proof. exact (@lem8187677 _144530 P (term624 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g)). Qed.
Lemma lem8187679 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (term625 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g a) = (term618 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g a).
Proof. exact (eq_refl (term625 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g a)). Qed.
Lemma lem8187680 {_144530 : Type'} (z : _144530) : z = z.
Proof. exact (eq_refl z). Qed.
Lemma lem8187681 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) (z : _144530) : (term626 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g a z) = (term627 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g a z).
Proof. exact (MK_COMB (@lem8187679 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g a) (@lem8187680 _144530 z)). Qed.
Lemma lem8187682 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : _144530) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (term627 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g a z) = (term616 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z f t g a).
Proof. exact (eq_refl (term627 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g a z)). Qed.
Lemma lem8187683 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : _144530) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (term626 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g a z) = (term616 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z f t g a).
Proof. exact (TRANS (@lem8187681 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g a z) (@lem8187682 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z f t g a)). Qed.
Lemma lem8187684 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (term628 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g a) = (term618 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g a).
Proof. exact (fun_ext (fun z : _144530 => @lem8187683 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z f t g a)). Qed.
Lemma lem8187685 {_144530 : Type'} : (@ex _144530) = (@ex _144530).
Proof. exact (eq_refl (@ex _144530)). Qed.
Lemma lem8187686 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (term629 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g a) = (term619 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g a).
Proof. exact (MK_COMB (@lem8187685 _144530) (@lem8187684 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g a)). Qed.
Lemma lem8187687 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) : (term630 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g) = (term620 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g).
Proof. exact (fun_ext (fun a : P => @lem8187686 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g a)). Qed.
Lemma lem8187688 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8187689 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) : (term622 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g) = (term621 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g).
Proof. exact (MK_COMB (@lem8187688 P) (@lem8187687 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g)). Qed.
Lemma lem8187690 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8187691 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) : (term631 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g) = (term632 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g).
Proof. exact (MK_COMB (@lem8187690) (@lem8187689 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g)). Qed.
Lemma lem8187692 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (term625 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g a) = (term618 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g a).
Proof. exact (eq_refl (term625 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g a)). Qed.
Lemma lem8187693 {_144530 P : Type'} (z : P -> _144530) (a : P) : (z a) = (z a).
Proof. exact (eq_refl (z a)). Qed.
Lemma lem8187694 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (z : P -> _144530) (a : P) : (term633 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g z a) = (term634 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g z a).
Proof. exact (MK_COMB (@lem8187692 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g a) (@lem8187693 _144530 P z a)). Qed.
Lemma lem8187695 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : P -> _144530) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (term634 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g z a) = (term635 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z f t g a).
Proof. exact (eq_refl (term634 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g z a)). Qed.
Lemma lem8187696 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : P -> _144530) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (term633 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g z a) = (term635 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z f t g a).
Proof. exact (TRANS (@lem8187694 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g z a) (@lem8187695 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z f t g a)). Qed.
Lemma lem8187697 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : P -> _144530) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) : (term636 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g z) = (term637 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z f t g).
Proof. exact (fun_ext (fun a : P => @lem8187696 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z f t g a)). Qed.
Lemma lem8187698 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8187699 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : P -> _144530) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) : (term638 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g z) = (term639 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z f t g).
Proof. exact (MK_COMB (@lem8187698 P) (@lem8187697 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z f t g)). Qed.
Lemma lem8187700 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) : (term640 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g) = (term641 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g).
Proof. exact (fun_ext (fun z : P -> _144530 => @lem8187699 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z f t g)). Qed.
Lemma lem8187701 {_144530 P : Type'} : (@ex (P -> _144530)) = (@ex (P -> _144530)).
Proof. exact (eq_refl (@ex (P -> _144530))). Qed.
Lemma lem8187702 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) : (term623 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g) = (term642 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g).
Proof. exact (MK_COMB (@lem8187701 _144530 P) (@lem8187700 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g)). Qed.
Lemma lem8187703 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) : ((term622 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g) = (term623 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g)) = ((term621 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g) = (term642 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g)).
Proof. exact (MK_COMB (@lem8187691 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g) (@lem8187702 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g)). Qed.
Lemma lem8187704 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) : (term621 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g) = (term642 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g).
Proof. exact (EQ_MP (@lem8187703 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g) (@lem8187678 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g)). Qed.
Lemma lem8187705 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) : (term576 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g) = (term642 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g).
Proof. exact (TRANS (@lem8187674 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g) (@lem8187704 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g)). Qed.
Lemma lem8187706 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) : (term577 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t) = (term643 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t).
Proof. exact (fun_ext (fun g : _144530 -> _144607 => @lem8187705 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g)). Qed.
Lemma lem8187707 {_144530 _144607 : Type'} : (@all (_144530 -> _144607)) = (@all (_144530 -> _144607)).
Proof. exact (eq_refl (@all (_144530 -> _144607))). Qed.
Lemma lem8187708 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) : (term578 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t) = (term644 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t).
Proof. exact (MK_COMB (@lem8187707 _144530 _144607) (@lem8187706 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t)). Qed.
Lemma lem8187710 {A B : Type'} (P : type1413 A B) : (term482 A B P) = (term483 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem8187711 {_144530 _144607 P : Type'} (P' : type537 _144530 _144607 P) : (term509 _144530 _144607 P P') = (term510 _144530 _144607 P P').
Proof. exact (@lem8187710 (_144530 -> _144607) (P -> _144530) P'). Qed.
Lemma lem8187712 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) : (term645 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t) = (term646 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t).
Proof. exact (@lem8187711 _144530 _144607 P (term647 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t)). Qed.
Lemma lem8187713 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) : (term648 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g) = (term641 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g).
Proof. exact (eq_refl (term648 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g)). Qed.
Lemma lem8187714 {_144530 P : Type'} (z : P -> _144530) : z = z.
Proof. exact (eq_refl z). Qed.
Lemma lem8187715 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (z : P -> _144530) : (term649 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g z) = (term650 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g z).
Proof. exact (MK_COMB (@lem8187713 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g) (@lem8187714 _144530 P z)). Qed.
Lemma lem8187716 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : P -> _144530) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) : (term650 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g z) = (term639 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z f t g).
Proof. exact (eq_refl (term650 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g z)). Qed.
Lemma lem8187717 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : P -> _144530) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) : (term649 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g z) = (term639 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z f t g).
Proof. exact (TRANS (@lem8187715 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g z) (@lem8187716 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z f t g)). Qed.
Lemma lem8187718 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) : (term651 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g) = (term641 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g).
Proof. exact (fun_ext (fun z : P -> _144530 => @lem8187717 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z f t g)). Qed.
Lemma lem8187719 {_144530 P : Type'} : (@ex (P -> _144530)) = (@ex (P -> _144530)).
Proof. exact (eq_refl (@ex (P -> _144530))). Qed.
Lemma lem8187720 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) : (term652 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g) = (term642 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g).
Proof. exact (MK_COMB (@lem8187719 _144530 P) (@lem8187718 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g)). Qed.
Lemma lem8187721 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) : (term653 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t) = (term643 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t).
Proof. exact (fun_ext (fun g : _144530 -> _144607 => @lem8187720 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g)). Qed.
Lemma lem8187722 {_144530 _144607 : Type'} : (@all (_144530 -> _144607)) = (@all (_144530 -> _144607)).
Proof. exact (eq_refl (@all (_144530 -> _144607))). Qed.
Lemma lem8187723 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) : (term645 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t) = (term644 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t).
Proof. exact (MK_COMB (@lem8187722 _144530 _144607) (@lem8187721 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t)). Qed.
Lemma lem8187724 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8187725 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) : (term654 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t) = (term655 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t).
Proof. exact (MK_COMB (@lem8187724) (@lem8187723 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t)). Qed.
Lemma lem8187726 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) : (term648 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g) = (term641 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g).
Proof. exact (eq_refl (term648 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g)). Qed.
Lemma lem8187727 {_144530 _144607 P : Type'} (z : type557 _144530 _144607 P) (g : _144530 -> _144607) : (z g) = (z g).
Proof. exact (eq_refl (z g)). Qed.
Lemma lem8187728 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (z : type557 _144530 _144607 P) (g : _144530 -> _144607) : (term656 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t z g) = (term657 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t z g).
Proof. exact (MK_COMB (@lem8187726 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g) (@lem8187727 _144530 _144607 P z g)). Qed.
Lemma lem8187729 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : type557 _144530 _144607 P) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) : (term657 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t z g) = (term658 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z f t g).
Proof. exact (eq_refl (term657 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t z g)). Qed.
Lemma lem8187730 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : type557 _144530 _144607 P) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) : (term656 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t z g) = (term658 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z f t g).
Proof. exact (TRANS (@lem8187728 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t z g) (@lem8187729 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z f t g)). Qed.
Lemma lem8187731 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : type557 _144530 _144607 P) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) : (term659 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t z) = (term660 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z f t).
Proof. exact (fun_ext (fun g : _144530 -> _144607 => @lem8187730 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z f t g)). Qed.
Lemma lem8187732 {_144530 _144607 : Type'} : (@all (_144530 -> _144607)) = (@all (_144530 -> _144607)).
Proof. exact (eq_refl (@all (_144530 -> _144607))). Qed.
Lemma lem8187733 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : type557 _144530 _144607 P) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) : (term661 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t z) = (term662 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z f t).
Proof. exact (MK_COMB (@lem8187732 _144530 _144607) (@lem8187731 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z f t)). Qed.
Lemma lem8187734 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) : (term663 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t) = (term664 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t).
Proof. exact (fun_ext (fun z : type557 _144530 _144607 P => @lem8187733 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z f t)). Qed.
Lemma lem8187735 {_144530 _144607 P : Type'} : (@ex ((_144530 -> _144607) -> P -> _144530)) = (@ex ((_144530 -> _144607) -> P -> _144530)).
Proof. exact (eq_refl (@ex ((_144530 -> _144607) -> P -> _144530))). Qed.
Lemma lem8187736 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) : (term646 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t) = (term665 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t).
Proof. exact (MK_COMB (@lem8187735 _144530 _144607 P) (@lem8187734 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t)). Qed.
Lemma lem8187737 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) : ((term645 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t) = (term646 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t)) = ((term644 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t) = (term665 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t)).
Proof. exact (MK_COMB (@lem8187725 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t) (@lem8187736 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t)). Qed.
Lemma lem8187738 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) : (term644 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t) = (term665 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t).
Proof. exact (EQ_MP (@lem8187737 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t) (@lem8187712 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t)). Qed.
Lemma lem8187739 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) : (term578 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t) = (term665 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t).
Proof. exact (TRANS (@lem8187708 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t) (@lem8187738 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t)). Qed.
Lemma lem8187740 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (t : type564 _144530 _144607 _144654 P) : (term579 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) = (term666 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t).
Proof. exact (fun_ext (fun f : _144530 -> _144607 => @lem8187739 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t)). Qed.
Lemma lem8187741 {_144530 _144607 : Type'} : (@all (_144530 -> _144607)) = (@all (_144530 -> _144607)).
Proof. exact (eq_refl (@all (_144530 -> _144607))). Qed.
Lemma lem8187742 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (t : type564 _144530 _144607 _144654 P) : (term580 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) = (term667 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t).
Proof. exact (MK_COMB (@lem8187741 _144530 _144607) (@lem8187740 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t)). Qed.
Lemma lem8187744 {A B : Type'} (P : type1413 A B) : (term482 A B P) = (term483 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem8187745 {_144530 _144607 P : Type'} (P' : type495 _144530 _144607 P) : (term534 _144530 _144607 P P') = (term535 _144530 _144607 P P').
Proof. exact (@lem8187744 (_144530 -> _144607) (type557 _144530 _144607 P) P'). Qed.
Lemma lem8187746 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (t : type564 _144530 _144607 _144654 P) : (term668 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) = (term669 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t).
Proof. exact (@lem8187745 _144530 _144607 P (term670 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t)). Qed.
Lemma lem8187747 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) : (term671 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t f) = (term664 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t).
Proof. exact (eq_refl (term671 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t f)). Qed.
Lemma lem8187748 {_144530 _144607 P : Type'} (z : type557 _144530 _144607 P) : z = z.
Proof. exact (eq_refl z). Qed.
Lemma lem8187749 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (z : type557 _144530 _144607 P) : (term672 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t f z) = (term673 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t z).
Proof. exact (MK_COMB (@lem8187747 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t) (@lem8187748 _144530 _144607 P z)). Qed.
Lemma lem8187750 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : type557 _144530 _144607 P) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) : (term673 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t z) = (term662 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z f t).
Proof. exact (eq_refl (term673 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t z)). Qed.
Lemma lem8187751 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : type557 _144530 _144607 P) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) : (term672 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t f z) = (term662 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z f t).
Proof. exact (TRANS (@lem8187749 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t z) (@lem8187750 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z f t)). Qed.
Lemma lem8187752 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) : (term674 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t f) = (term664 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t).
Proof. exact (fun_ext (fun z : type557 _144530 _144607 P => @lem8187751 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z f t)). Qed.
Lemma lem8187753 {_144530 _144607 P : Type'} : (@ex ((_144530 -> _144607) -> P -> _144530)) = (@ex ((_144530 -> _144607) -> P -> _144530)).
Proof. exact (eq_refl (@ex ((_144530 -> _144607) -> P -> _144530))). Qed.
Lemma lem8187754 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) : (term675 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t f) = (term665 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t).
Proof. exact (MK_COMB (@lem8187753 _144530 _144607 P) (@lem8187752 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t)). Qed.
Lemma lem8187755 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (t : type564 _144530 _144607 _144654 P) : (term676 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) = (term666 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t).
Proof. exact (fun_ext (fun f : _144530 -> _144607 => @lem8187754 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t)). Qed.
Lemma lem8187756 {_144530 _144607 : Type'} : (@all (_144530 -> _144607)) = (@all (_144530 -> _144607)).
Proof. exact (eq_refl (@all (_144530 -> _144607))). Qed.
Lemma lem8187757 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (t : type564 _144530 _144607 _144654 P) : (term668 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) = (term667 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t).
Proof. exact (MK_COMB (@lem8187756 _144530 _144607) (@lem8187755 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t)). Qed.
Lemma lem8187758 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8187759 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (t : type564 _144530 _144607 _144654 P) : (term677 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) = (term678 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t).
Proof. exact (MK_COMB (@lem8187758) (@lem8187757 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t)). Qed.
Lemma lem8187760 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) : (term671 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t f) = (term664 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t).
Proof. exact (eq_refl (term671 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t f)). Qed.
Lemma lem8187761 {_144530 _144607 P : Type'} (z : type518 _144530 _144607 P) (f : _144530 -> _144607) : (z f) = (z f).
Proof. exact (eq_refl (z f)). Qed.
Lemma lem8187762 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (t : type564 _144530 _144607 _144654 P) (z : type518 _144530 _144607 P) (f : _144530 -> _144607) : (term679 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t z f) = (term680 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t z f).
Proof. exact (MK_COMB (@lem8187760 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t) (@lem8187761 _144530 _144607 P z f)). Qed.
Lemma lem8187763 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : type518 _144530 _144607 P) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) : (term680 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t z f) = (term681 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z f t).
Proof. exact (eq_refl (term680 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t z f)). Qed.
Lemma lem8187764 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : type518 _144530 _144607 P) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) : (term679 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t z f) = (term681 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z f t).
Proof. exact (TRANS (@lem8187762 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t z f) (@lem8187763 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z f t)). Qed.
Lemma lem8187765 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : type518 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) : (term682 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t z) = (term683 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z t).
Proof. exact (fun_ext (fun f : _144530 -> _144607 => @lem8187764 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z f t)). Qed.
Lemma lem8187766 {_144530 _144607 : Type'} : (@all (_144530 -> _144607)) = (@all (_144530 -> _144607)).
Proof. exact (eq_refl (@all (_144530 -> _144607))). Qed.
Lemma lem8187767 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : type518 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) : (term684 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t z) = (term685 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z t).
Proof. exact (MK_COMB (@lem8187766 _144530 _144607) (@lem8187765 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z t)). Qed.
Lemma lem8187768 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (t : type564 _144530 _144607 _144654 P) : (term686 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) = (term687 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t).
Proof. exact (fun_ext (fun z : type518 _144530 _144607 P => @lem8187767 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z t)). Qed.
Lemma lem8187769 {_144530 _144607 P : Type'} : (@ex ((_144530 -> _144607) -> (_144530 -> _144607) -> P -> _144530)) = (@ex ((_144530 -> _144607) -> (_144530 -> _144607) -> P -> _144530)).
Proof. exact (eq_refl (@ex ((_144530 -> _144607) -> (_144530 -> _144607) -> P -> _144530))). Qed.
Lemma lem8187770 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (t : type564 _144530 _144607 _144654 P) : (term669 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) = (term688 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t).
Proof. exact (MK_COMB (@lem8187769 _144530 _144607 P) (@lem8187768 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t)). Qed.
Lemma lem8187771 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (t : type564 _144530 _144607 _144654 P) : ((term668 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) = (term669 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t)) = ((term667 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) = (term688 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t)).
Proof. exact (MK_COMB (@lem8187759 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) (@lem8187770 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t)). Qed.
Lemma lem8187772 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (t : type564 _144530 _144607 _144654 P) : (term667 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) = (term688 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t).
Proof. exact (EQ_MP (@lem8187771 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) (@lem8187746 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t)). Qed.
Lemma lem8187774 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (t : type564 _144530 _144607 _144654 P) : (term580 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) = (term688 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t).
Proof. exact (TRANS (@lem8187742 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) (@lem8187772 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t)). Qed.
Lemma lem8187775 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (t : type564 _144530 _144607 _144654 P) : (term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) = (term688 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t).
Proof. exact (TRANS (@lem8187494 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) (@lem8187774 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t)). Qed.
Lemma lem8187776 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (t : type564 _144530 _144607 _144654 P) (h1 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) : term688 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t.
Proof. exact (EQ_MP (@lem8187775 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) (@lem8186764 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t h1)). Qed.
Lemma lem8187783 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (a : P) : (term689 _144530 _144607 _144645 P p pat e f a) = (term690 _144530 _144607 _144645 P p pat e f a).
Proof. exact (@lem17045 (p f a) ((pat f a) = (e f a))). Qed.
Lemma lem8187790 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term689 _144530 _144607 _144645 P p pat e g a) = (term690 _144530 _144607 _144645 P p pat e g a).
Proof. exact (@lem17045 (p g a) ((pat g a) = (e g a))). Qed.
Lemma lem8187797 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (z : _144530) : (term404 _144529 _144530 _144607 P lt2 s a f g z) = (term405 _144529 _144530 _144607 P lt2 s a f g z).
Proof. exact (@lem17362 (term406 _144529 _144530 P lt2 z s a) ((f z) = (g z))). Qed.
Lemma lem8187798 {_144530 : Type'} (P : _144530 -> Prop) : (term407 _144530 P) = (term408 _144530 P).
Proof. exact (@lem18392 _144530 P). Qed.
Lemma lem8187799 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term409 _144529 _144530 _144607 P lt2 s a f g) = (term410 _144529 _144530 _144607 P lt2 s a f g).
Proof. exact (@lem8187798 _144530 (term397 _144529 _144530 _144607 P lt2 s a f g)). Qed.
Lemma lem8187800 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (z : _144530) : (term411 _144529 _144530 _144607 P lt2 s a f g z) = (term396 _144529 _144530 _144607 P lt2 s a f g z).
Proof. exact (eq_refl (term411 _144529 _144530 _144607 P lt2 s a f g z)). Qed.
Lemma lem8187801 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8187802 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (z : _144530) : (term412 _144529 _144530 _144607 P lt2 s a f g z) = (term404 _144529 _144530 _144607 P lt2 s a f g z).
Proof. exact (MK_COMB (@lem8187801) (@lem8187800 _144529 _144530 _144607 P lt2 s a f g z)). Qed.
Lemma lem8187803 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (z : _144530) : (term412 _144529 _144530 _144607 P lt2 s a f g z) = (term405 _144529 _144530 _144607 P lt2 s a f g z).
Proof. exact (TRANS (@lem8187802 _144529 _144530 _144607 P lt2 s a f g z) (@lem8187797 _144529 _144530 _144607 P lt2 s a f g z)). Qed.
Lemma lem8187804 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term413 _144529 _144530 _144607 P lt2 s a f g) = (term414 _144529 _144530 _144607 P lt2 s a f g).
Proof. exact (fun_ext (fun z : _144530 => @lem8187803 _144529 _144530 _144607 P lt2 s a f g z)). Qed.
Lemma lem8187805 {_144530 : Type'} : (@ex _144530) = (@ex _144530).
Proof. exact (eq_refl (@ex _144530)). Qed.
Lemma lem8187806 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term410 _144529 _144530 _144607 P lt2 s a f g) = (term415 _144529 _144530 _144607 P lt2 s a f g).
Proof. exact (MK_COMB (@lem8187805 _144530) (@lem8187804 _144529 _144530 _144607 P lt2 s a f g)). Qed.
Lemma lem8187807 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term409 _144529 _144530 _144607 P lt2 s a f g) = (term415 _144529 _144530 _144607 P lt2 s a f g).
Proof. exact (TRANS (@lem8187799 _144529 _144530 _144607 P lt2 s a f g) (@lem8187806 _144529 _144530 _144607 P lt2 s a f g)). Qed.
Lemma lem8187808 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8187809 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term691 _144530 _144607 _144645 P p pat e g a) = (term692 _144530 _144607 _144645 P p pat e g a).
Proof. exact (MK_COMB (@lem8187808) (@lem8187790 _144530 _144607 _144645 P p pat e g a)). Qed.
Lemma lem8187810 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term693 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g) = (term694 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g).
Proof. exact (MK_COMB (@lem8187809 _144530 _144607 _144645 P p pat e g a) (@lem8187807 _144529 _144530 _144607 P lt2 s a f g)). Qed.
Lemma lem8187811 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term695 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g) = (term693 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g).
Proof. exact (@lem17045 (term200 _144530 _144607 _144645 P p pat e g a) (term165 _144529 _144530 _144607 P lt2 s a f g)). Qed.
Lemma lem8187812 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term695 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g) = (term694 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g).
Proof. exact (TRANS (@lem8187811 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g) (@lem8187810 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g)). Qed.
Lemma lem8187813 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8187814 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (a : P) : (term691 _144530 _144607 _144645 P p pat e f a) = (term692 _144530 _144607 _144645 P p pat e f a).
Proof. exact (MK_COMB (@lem8187813) (@lem8187783 _144530 _144607 _144645 P p pat e f a)). Qed.
Lemma lem8187815 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term696 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g) = (term697 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g).
Proof. exact (MK_COMB (@lem8187814 _144530 _144607 _144645 P p pat e f a) (@lem8187812 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g)). Qed.
Lemma lem8187816 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term698 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g) = (term696 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g).
Proof. exact (@lem17045 (term200 _144530 _144607 _144645 P p pat e f a) (term207 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g)). Qed.
Lemma lem8187817 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term698 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g) = (term697 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g).
Proof. exact (TRANS (@lem8187816 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g) (@lem8187815 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g)). Qed.
Lemma lem8187832 {_144530 _144607 P : Type'} (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : ((q f a) = (q g a)) = (term699 _144530 _144607 P f q g a).
Proof. exact (@lem17784 (q f a) (q g a)). Qed.
Lemma lem8187833 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8187834 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term700 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g) = (term701 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g).
Proof. exact (MK_COMB (@lem8187833) (@lem8187817 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g)). Qed.
Lemma lem8187835 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term702 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g a) = (term703 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g a).
Proof. exact (MK_COMB (@lem8187834 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g) (@lem8187832 _144530 _144607 P f q g a)). Qed.
Lemma lem8187836 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term213 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g a) = (term702 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g a).
Proof. exact (@lem17265 (term209 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g) ((q f a) = (q g a))). Qed.
Lemma lem8187837 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term213 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g a) = (term703 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g a).
Proof. exact (TRANS (@lem8187836 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g a) (@lem8187835 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g a)). Qed.
Lemma lem8187838 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) : (term215 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g) = (term704 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g).
Proof. exact (fun_ext (fun a : P => @lem8187837 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g a)). Qed.
Lemma lem8187839 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8187840 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) : (term217 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g) = (term705 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g).
Proof. exact (MK_COMB (@lem8187839 P) (@lem8187838 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g)). Qed.
Lemma lem8187841 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) : (term219 _144529 _144530 _144607 _144645 P p pat e lt2 s f q) = (term706 _144529 _144530 _144607 _144645 P p pat e lt2 s f q).
Proof. exact (fun_ext (fun g : _144530 -> _144607 => @lem8187840 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g)). Qed.
Lemma lem8187842 {_144530 _144607 : Type'} : (@all (_144530 -> _144607)) = (@all (_144530 -> _144607)).
Proof. exact (eq_refl (@all (_144530 -> _144607))). Qed.
Lemma lem8187843 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) : (term221 _144529 _144530 _144607 _144645 P p pat e lt2 s f q) = (term707 _144529 _144530 _144607 _144645 P p pat e lt2 s f q).
Proof. exact (MK_COMB (@lem8187842 _144530 _144607) (@lem8187841 _144529 _144530 _144607 _144645 P p pat e lt2 s f q)). Qed.
Lemma lem8187844 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (q : type560 _144530 _144607 P) : (term223 _144529 _144530 _144607 _144645 P p pat e lt2 s q) = (term708 _144529 _144530 _144607 _144645 P p pat e lt2 s q).
Proof. exact (fun_ext (fun f : _144530 -> _144607 => @lem8187843 _144529 _144530 _144607 _144645 P p pat e lt2 s f q)). Qed.
Lemma lem8187845 {_144530 _144607 : Type'} : (@all (_144530 -> _144607)) = (@all (_144530 -> _144607)).
Proof. exact (eq_refl (@all (_144530 -> _144607))). Qed.
Lemma lem8187846 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (q : type560 _144530 _144607 P) : (term224 _144529 _144530 _144607 _144645 P p pat e lt2 s q) = (term709 _144529 _144530 _144607 _144645 P p pat e lt2 s q).
Proof. exact (MK_COMB (@lem8187845 _144530 _144607) (@lem8187844 _144529 _144530 _144607 _144645 P p pat e lt2 s q)). Qed.
Lemma lem8187953 {A : Type'} (P : Prop) (Q : A -> Prop) : (term433 A P Q) = (term434 A P Q).
Proof. exact (EQ_MP (@lem18911 A P Q) (@lem18910 A P Q)). Qed.
Lemma lem8187954 {_144530 : Type'} (P : Prop) (Q : _144530 -> Prop) : (term433 _144530 P Q) = (term434 _144530 P Q).
Proof. exact (@lem8187953 _144530 P Q). Qed.
Lemma lem8187955 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term710 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g) = (term711 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g).
Proof. exact (@lem8187954 _144530 (term690 _144530 _144607 _144645 P p pat e g a) (term414 _144529 _144530 _144607 P lt2 s a f g)). Qed.
Lemma lem8187956 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (z : _144530) : (term438 _144529 _144530 _144607 P lt2 s a f g z) = (term405 _144529 _144530 _144607 P lt2 s a f g z).
Proof. exact (eq_refl (term438 _144529 _144530 _144607 P lt2 s a f g z)). Qed.
Lemma lem8187957 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term439 _144529 _144530 _144607 P lt2 s a f g) = (term414 _144529 _144530 _144607 P lt2 s a f g).
Proof. exact (fun_ext (fun z : _144530 => @lem8187956 _144529 _144530 _144607 P lt2 s a f g z)). Qed.
Lemma lem8187958 {_144530 : Type'} : (@ex _144530) = (@ex _144530).
Proof. exact (eq_refl (@ex _144530)). Qed.
Lemma lem8187959 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term440 _144529 _144530 _144607 P lt2 s a f g) = (term415 _144529 _144530 _144607 P lt2 s a f g).
Proof. exact (MK_COMB (@lem8187958 _144530) (@lem8187957 _144529 _144530 _144607 P lt2 s a f g)). Qed.
Lemma lem8187960 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term692 _144530 _144607 _144645 P p pat e g a) = (term692 _144530 _144607 _144645 P p pat e g a).
Proof. exact (eq_refl (term692 _144530 _144607 _144645 P p pat e g a)). Qed.
Lemma lem8187961 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term710 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g) = (term694 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g).
Proof. exact (MK_COMB (@lem8187960 _144530 _144607 _144645 P p pat e g a) (@lem8187959 _144529 _144530 _144607 P lt2 s a f g)). Qed.
Lemma lem8187962 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8187963 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term712 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g) = (term713 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g).
Proof. exact (MK_COMB (@lem8187962) (@lem8187961 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g)). Qed.
Lemma lem8187964 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (z : _144530) : (term438 _144529 _144530 _144607 P lt2 s a f g z) = (term405 _144529 _144530 _144607 P lt2 s a f g z).
Proof. exact (eq_refl (term438 _144529 _144530 _144607 P lt2 s a f g z)). Qed.
Lemma lem8187965 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term692 _144530 _144607 _144645 P p pat e g a) = (term692 _144530 _144607 _144645 P p pat e g a).
Proof. exact (eq_refl (term692 _144530 _144607 _144645 P p pat e g a)). Qed.
Lemma lem8187966 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (z : _144530) : (term714 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g z) = (term715 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g z).
Proof. exact (MK_COMB (@lem8187965 _144530 _144607 _144645 P p pat e g a) (@lem8187964 _144529 _144530 _144607 P lt2 s a f g z)). Qed.
Lemma lem8187967 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term716 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g) = (term717 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g).
Proof. exact (fun_ext (fun z : _144530 => @lem8187966 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g z)). Qed.
Lemma lem8187968 {_144530 : Type'} : (@ex _144530) = (@ex _144530).
Proof. exact (eq_refl (@ex _144530)). Qed.
Lemma lem8187969 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term711 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g) = (term718 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g).
Proof. exact (MK_COMB (@lem8187968 _144530) (@lem8187967 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g)). Qed.
Lemma lem8187970 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : ((term710 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g) = (term711 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g)) = ((term694 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g) = (term718 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g)).
Proof. exact (MK_COMB (@lem8187963 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g) (@lem8187969 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g)). Qed.
Lemma lem8187971 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term694 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g) = (term718 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g).
Proof. exact (EQ_MP (@lem8187970 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g) (@lem8187955 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g)). Qed.
Lemma lem8187972 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (a : P) : (term692 _144530 _144607 _144645 P p pat e f a) = (term692 _144530 _144607 _144645 P p pat e f a).
Proof. exact (eq_refl (term692 _144530 _144607 _144645 P p pat e f a)). Qed.
Lemma lem8187973 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term697 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g) = (term719 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g).
Proof. exact (MK_COMB (@lem8187972 _144530 _144607 _144645 P p pat e f a) (@lem8187971 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g)). Qed.
Lemma lem8187975 {A : Type'} (P : Prop) (Q : A -> Prop) : (term433 A P Q) = (term434 A P Q).
Proof. exact (EQ_MP (@lem18911 A P Q) (@lem18910 A P Q)). Qed.
Lemma lem8187976 {_144530 : Type'} (P : Prop) (Q : _144530 -> Prop) : (term433 _144530 P Q) = (term434 _144530 P Q).
Proof. exact (@lem8187975 _144530 P Q). Qed.
Lemma lem8187977 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term720 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g) = (term721 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g).
Proof. exact (@lem8187976 _144530 (term690 _144530 _144607 _144645 P p pat e f a) (term717 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g)). Qed.
Lemma lem8187978 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (z : _144530) : (term722 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g z) = (term715 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g z).
Proof. exact (eq_refl (term722 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g z)). Qed.
Lemma lem8187979 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term723 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g) = (term717 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g).
Proof. exact (fun_ext (fun z : _144530 => @lem8187978 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g z)). Qed.
Lemma lem8187980 {_144530 : Type'} : (@ex _144530) = (@ex _144530).
Proof. exact (eq_refl (@ex _144530)). Qed.
Lemma lem8187981 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term724 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g) = (term718 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g).
Proof. exact (MK_COMB (@lem8187980 _144530) (@lem8187979 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g)). Qed.
Lemma lem8187982 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (a : P) : (term692 _144530 _144607 _144645 P p pat e f a) = (term692 _144530 _144607 _144645 P p pat e f a).
Proof. exact (eq_refl (term692 _144530 _144607 _144645 P p pat e f a)). Qed.
Lemma lem8187983 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term720 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g) = (term719 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g).
Proof. exact (MK_COMB (@lem8187982 _144530 _144607 _144645 P p pat e f a) (@lem8187981 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g)). Qed.
Lemma lem8187984 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8187985 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term725 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g) = (term726 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g).
Proof. exact (MK_COMB (@lem8187984) (@lem8187983 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g)). Qed.
Lemma lem8187986 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (z : _144530) : (term722 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g z) = (term715 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g z).
Proof. exact (eq_refl (term722 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g z)). Qed.
Lemma lem8187987 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (a : P) : (term692 _144530 _144607 _144645 P p pat e f a) = (term692 _144530 _144607 _144645 P p pat e f a).
Proof. exact (eq_refl (term692 _144530 _144607 _144645 P p pat e f a)). Qed.
Lemma lem8187988 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (z : _144530) : (term727 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g z) = (term728 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g z).
Proof. exact (MK_COMB (@lem8187987 _144530 _144607 _144645 P p pat e f a) (@lem8187986 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g z)). Qed.
Lemma lem8187989 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term729 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g) = (term730 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g).
Proof. exact (fun_ext (fun z : _144530 => @lem8187988 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g z)). Qed.
Lemma lem8187990 {_144530 : Type'} : (@ex _144530) = (@ex _144530).
Proof. exact (eq_refl (@ex _144530)). Qed.
Lemma lem8187991 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term721 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g) = (term731 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g).
Proof. exact (MK_COMB (@lem8187990 _144530) (@lem8187989 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g)). Qed.
Lemma lem8187992 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : ((term720 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g) = (term721 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g)) = ((term719 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g) = (term731 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g)).
Proof. exact (MK_COMB (@lem8187985 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g) (@lem8187991 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g)). Qed.
Lemma lem8187993 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term719 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g) = (term731 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g).
Proof. exact (EQ_MP (@lem8187992 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g) (@lem8187977 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g)). Qed.
Lemma lem8187994 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term697 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g) = (term731 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g).
Proof. exact (TRANS (@lem8187973 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g) (@lem8187993 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g)). Qed.
Lemma lem8187995 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8187996 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term701 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g) = (term732 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g).
Proof. exact (MK_COMB (@lem8187995) (@lem8187994 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g)). Qed.
Lemma lem8187997 {_144530 _144607 P : Type'} (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term699 _144530 _144607 P f q g a) = (term699 _144530 _144607 P f q g a).
Proof. exact (eq_refl (term699 _144530 _144607 P f q g a)). Qed.
Lemma lem8187998 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term703 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g a) = (term733 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g a).
Proof. exact (MK_COMB (@lem8187996 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g) (@lem8187997 _144530 _144607 P f q g a)). Qed.
Lemma lem8188000 {A : Type'} (P : A -> Prop) (Q : Prop) : (term463 A P Q) = (term464 A P Q).
Proof. exact (EQ_MP (@lem18905 A P Q) (@lem18904 A P Q)). Qed.
Lemma lem8188001 {_144530 : Type'} (P : _144530 -> Prop) (Q : Prop) : (term463 _144530 P Q) = (term464 _144530 P Q).
Proof. exact (@lem8188000 _144530 P Q). Qed.
Lemma lem8188002 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term734 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g a) = (term735 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g a).
Proof. exact (@lem8188001 _144530 (term730 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g) (term699 _144530 _144607 P f q g a)). Qed.
Lemma lem8188003 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (z : _144530) : (term736 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g z) = (term728 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g z).
Proof. exact (eq_refl (term736 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g z)). Qed.
Lemma lem8188004 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term737 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g) = (term730 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g).
Proof. exact (fun_ext (fun z : _144530 => @lem8188003 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g z)). Qed.
Lemma lem8188005 {_144530 : Type'} : (@ex _144530) = (@ex _144530).
Proof. exact (eq_refl (@ex _144530)). Qed.
Lemma lem8188006 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term738 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g) = (term731 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g).
Proof. exact (MK_COMB (@lem8188005 _144530) (@lem8188004 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g)). Qed.
Lemma lem8188007 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8188008 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term739 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g) = (term732 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g).
Proof. exact (MK_COMB (@lem8188007) (@lem8188006 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g)). Qed.
Lemma lem8188009 {_144530 _144607 P : Type'} (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term699 _144530 _144607 P f q g a) = (term699 _144530 _144607 P f q g a).
Proof. exact (eq_refl (term699 _144530 _144607 P f q g a)). Qed.
Lemma lem8188010 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term734 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g a) = (term733 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g a).
Proof. exact (MK_COMB (@lem8188008 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g) (@lem8188009 _144530 _144607 P f q g a)). Qed.
Lemma lem8188011 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8188012 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term740 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g a) = (term741 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g a).
Proof. exact (MK_COMB (@lem8188011) (@lem8188010 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g a)). Qed.
Lemma lem8188013 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (z : _144530) : (term736 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g z) = (term728 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g z).
Proof. exact (eq_refl (term736 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g z)). Qed.
Lemma lem8188014 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8188015 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (z : _144530) : (term742 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g z) = (term743 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g z).
Proof. exact (MK_COMB (@lem8188014) (@lem8188013 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g z)). Qed.
Lemma lem8188016 {_144530 _144607 P : Type'} (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term699 _144530 _144607 P f q g a) = (term699 _144530 _144607 P f q g a).
Proof. exact (eq_refl (term699 _144530 _144607 P f q g a)). Qed.
Lemma lem8188017 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : _144530) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term744 _144529 _144530 _144607 _144645 P p pat e lt2 s z f q g a) = (term745 _144529 _144530 _144607 _144645 P p pat e lt2 s z f q g a).
Proof. exact (MK_COMB (@lem8188015 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g z) (@lem8188016 _144530 _144607 P f q g a)). Qed.
Lemma lem8188018 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term746 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g a) = (term747 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g a).
Proof. exact (fun_ext (fun z : _144530 => @lem8188017 _144529 _144530 _144607 _144645 P p pat e lt2 s z f q g a)). Qed.
Lemma lem8188019 {_144530 : Type'} : (@ex _144530) = (@ex _144530).
Proof. exact (eq_refl (@ex _144530)). Qed.
Lemma lem8188020 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term735 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g a) = (term748 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g a).
Proof. exact (MK_COMB (@lem8188019 _144530) (@lem8188018 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g a)). Qed.
Lemma lem8188021 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : ((term734 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g a) = (term735 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g a)) = ((term733 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g a) = (term748 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g a)).
Proof. exact (MK_COMB (@lem8188012 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g a) (@lem8188020 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g a)). Qed.
Lemma lem8188022 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term733 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g a) = (term748 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g a).
Proof. exact (EQ_MP (@lem8188021 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g a) (@lem8188002 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g a)). Qed.
Lemma lem8188023 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term703 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g a) = (term748 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g a).
Proof. exact (TRANS (@lem8187998 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g a) (@lem8188022 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g a)). Qed.
Lemma lem8188024 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) : (term704 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g) = (term749 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g).
Proof. exact (fun_ext (fun a : P => @lem8188023 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g a)). Qed.
Lemma lem8188025 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8188026 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) : (term705 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g) = (term750 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g).
Proof. exact (MK_COMB (@lem8188025 P) (@lem8188024 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g)). Qed.
Lemma lem8188028 {A B : Type'} (P : type1413 A B) : (term482 A B P) = (term483 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem8188029 {_144530 P : Type'} (P' : type1470 _144530 P) : (term484 _144530 P P') = (term485 _144530 P P').
Proof. exact (@lem8188028 P _144530 P'). Qed.
Lemma lem8188030 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) : (term751 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g) = (term752 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g).
Proof. exact (@lem8188029 _144530 P (term753 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g)). Qed.
Lemma lem8188031 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term754 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g a) = (term747 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g a).
Proof. exact (eq_refl (term754 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g a)). Qed.
Lemma lem8188032 {_144530 : Type'} (z : _144530) : z = z.
Proof. exact (eq_refl z). Qed.
Lemma lem8188033 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (z : _144530) : (term755 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g a z) = (term756 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g a z).
Proof. exact (MK_COMB (@lem8188031 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g a) (@lem8188032 _144530 z)). Qed.
Lemma lem8188034 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : _144530) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term756 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g a z) = (term745 _144529 _144530 _144607 _144645 P p pat e lt2 s z f q g a).
Proof. exact (eq_refl (term756 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g a z)). Qed.
Lemma lem8188035 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : _144530) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term755 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g a z) = (term745 _144529 _144530 _144607 _144645 P p pat e lt2 s z f q g a).
Proof. exact (TRANS (@lem8188033 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g a z) (@lem8188034 _144529 _144530 _144607 _144645 P p pat e lt2 s z f q g a)). Qed.
Lemma lem8188036 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term757 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g a) = (term747 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g a).
Proof. exact (fun_ext (fun z : _144530 => @lem8188035 _144529 _144530 _144607 _144645 P p pat e lt2 s z f q g a)). Qed.
Lemma lem8188037 {_144530 : Type'} : (@ex _144530) = (@ex _144530).
Proof. exact (eq_refl (@ex _144530)). Qed.
Lemma lem8188038 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term758 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g a) = (term748 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g a).
Proof. exact (MK_COMB (@lem8188037 _144530) (@lem8188036 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g a)). Qed.
Lemma lem8188039 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) : (term759 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g) = (term749 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g).
Proof. exact (fun_ext (fun a : P => @lem8188038 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g a)). Qed.
Lemma lem8188040 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8188041 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) : (term751 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g) = (term750 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g).
Proof. exact (MK_COMB (@lem8188040 P) (@lem8188039 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g)). Qed.
Lemma lem8188042 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8188043 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) : (term760 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g) = (term761 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g).
Proof. exact (MK_COMB (@lem8188042) (@lem8188041 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g)). Qed.
Lemma lem8188044 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term754 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g a) = (term747 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g a).
Proof. exact (eq_refl (term754 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g a)). Qed.
Lemma lem8188045 {_144530 P : Type'} (z : P -> _144530) (a : P) : (z a) = (z a).
Proof. exact (eq_refl (z a)). Qed.
Lemma lem8188046 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (z : P -> _144530) (a : P) : (term762 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g z a) = (term763 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g z a).
Proof. exact (MK_COMB (@lem8188044 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g a) (@lem8188045 _144530 P z a)). Qed.
Lemma lem8188047 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : P -> _144530) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term763 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g z a) = (term764 _144529 _144530 _144607 _144645 P p pat e lt2 s z f q g a).
Proof. exact (eq_refl (term763 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g z a)). Qed.
Lemma lem8188048 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : P -> _144530) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term762 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g z a) = (term764 _144529 _144530 _144607 _144645 P p pat e lt2 s z f q g a).
Proof. exact (TRANS (@lem8188046 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g z a) (@lem8188047 _144529 _144530 _144607 _144645 P p pat e lt2 s z f q g a)). Qed.
Lemma lem8188049 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : P -> _144530) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) : (term765 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g z) = (term766 _144529 _144530 _144607 _144645 P p pat e lt2 s z f q g).
Proof. exact (fun_ext (fun a : P => @lem8188048 _144529 _144530 _144607 _144645 P p pat e lt2 s z f q g a)). Qed.
Lemma lem8188050 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8188051 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : P -> _144530) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) : (term767 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g z) = (term768 _144529 _144530 _144607 _144645 P p pat e lt2 s z f q g).
Proof. exact (MK_COMB (@lem8188050 P) (@lem8188049 _144529 _144530 _144607 _144645 P p pat e lt2 s z f q g)). Qed.
Lemma lem8188052 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) : (term769 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g) = (term770 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g).
Proof. exact (fun_ext (fun z : P -> _144530 => @lem8188051 _144529 _144530 _144607 _144645 P p pat e lt2 s z f q g)). Qed.
Lemma lem8188053 {_144530 P : Type'} : (@ex (P -> _144530)) = (@ex (P -> _144530)).
Proof. exact (eq_refl (@ex (P -> _144530))). Qed.
Lemma lem8188054 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) : (term752 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g) = (term771 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g).
Proof. exact (MK_COMB (@lem8188053 _144530 P) (@lem8188052 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g)). Qed.
Lemma lem8188055 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) : ((term751 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g) = (term752 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g)) = ((term750 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g) = (term771 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g)).
Proof. exact (MK_COMB (@lem8188043 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g) (@lem8188054 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g)). Qed.
Lemma lem8188056 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) : (term750 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g) = (term771 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g).
Proof. exact (EQ_MP (@lem8188055 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g) (@lem8188030 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g)). Qed.
Lemma lem8188057 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) : (term705 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g) = (term771 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g).
Proof. exact (TRANS (@lem8188026 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g) (@lem8188056 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g)). Qed.
Lemma lem8188058 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) : (term706 _144529 _144530 _144607 _144645 P p pat e lt2 s f q) = (term772 _144529 _144530 _144607 _144645 P p pat e lt2 s f q).
Proof. exact (fun_ext (fun g : _144530 -> _144607 => @lem8188057 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g)). Qed.
Lemma lem8188059 {_144530 _144607 : Type'} : (@all (_144530 -> _144607)) = (@all (_144530 -> _144607)).
Proof. exact (eq_refl (@all (_144530 -> _144607))). Qed.
Lemma lem8188060 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) : (term707 _144529 _144530 _144607 _144645 P p pat e lt2 s f q) = (term773 _144529 _144530 _144607 _144645 P p pat e lt2 s f q).
Proof. exact (MK_COMB (@lem8188059 _144530 _144607) (@lem8188058 _144529 _144530 _144607 _144645 P p pat e lt2 s f q)). Qed.
Lemma lem8188062 {A B : Type'} (P : type1413 A B) : (term482 A B P) = (term483 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem8188063 {_144530 _144607 P : Type'} (P' : type537 _144530 _144607 P) : (term509 _144530 _144607 P P') = (term510 _144530 _144607 P P').
Proof. exact (@lem8188062 (_144530 -> _144607) (P -> _144530) P'). Qed.
Lemma lem8188064 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) : (term774 _144529 _144530 _144607 _144645 P p pat e lt2 s f q) = (term775 _144529 _144530 _144607 _144645 P p pat e lt2 s f q).
Proof. exact (@lem8188063 _144530 _144607 P (term776 _144529 _144530 _144607 _144645 P p pat e lt2 s f q)). Qed.
Lemma lem8188065 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) : (term777 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g) = (term770 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g).
Proof. exact (eq_refl (term777 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g)). Qed.
Lemma lem8188066 {_144530 P : Type'} (z : P -> _144530) : z = z.
Proof. exact (eq_refl z). Qed.
Lemma lem8188067 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (z : P -> _144530) : (term778 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g z) = (term779 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g z).
Proof. exact (MK_COMB (@lem8188065 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g) (@lem8188066 _144530 P z)). Qed.
Lemma lem8188068 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : P -> _144530) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) : (term779 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g z) = (term768 _144529 _144530 _144607 _144645 P p pat e lt2 s z f q g).
Proof. exact (eq_refl (term779 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g z)). Qed.
Lemma lem8188069 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : P -> _144530) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) : (term778 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g z) = (term768 _144529 _144530 _144607 _144645 P p pat e lt2 s z f q g).
Proof. exact (TRANS (@lem8188067 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g z) (@lem8188068 _144529 _144530 _144607 _144645 P p pat e lt2 s z f q g)). Qed.
Lemma lem8188070 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) : (term780 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g) = (term770 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g).
Proof. exact (fun_ext (fun z : P -> _144530 => @lem8188069 _144529 _144530 _144607 _144645 P p pat e lt2 s z f q g)). Qed.
Lemma lem8188071 {_144530 P : Type'} : (@ex (P -> _144530)) = (@ex (P -> _144530)).
Proof. exact (eq_refl (@ex (P -> _144530))). Qed.
Lemma lem8188072 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) : (term781 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g) = (term771 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g).
Proof. exact (MK_COMB (@lem8188071 _144530 P) (@lem8188070 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g)). Qed.
Lemma lem8188073 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) : (term782 _144529 _144530 _144607 _144645 P p pat e lt2 s f q) = (term772 _144529 _144530 _144607 _144645 P p pat e lt2 s f q).
Proof. exact (fun_ext (fun g : _144530 -> _144607 => @lem8188072 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g)). Qed.
Lemma lem8188074 {_144530 _144607 : Type'} : (@all (_144530 -> _144607)) = (@all (_144530 -> _144607)).
Proof. exact (eq_refl (@all (_144530 -> _144607))). Qed.
Lemma lem8188075 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) : (term774 _144529 _144530 _144607 _144645 P p pat e lt2 s f q) = (term773 _144529 _144530 _144607 _144645 P p pat e lt2 s f q).
Proof. exact (MK_COMB (@lem8188074 _144530 _144607) (@lem8188073 _144529 _144530 _144607 _144645 P p pat e lt2 s f q)). Qed.
Lemma lem8188076 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8188077 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) : (term783 _144529 _144530 _144607 _144645 P p pat e lt2 s f q) = (term784 _144529 _144530 _144607 _144645 P p pat e lt2 s f q).
Proof. exact (MK_COMB (@lem8188076) (@lem8188075 _144529 _144530 _144607 _144645 P p pat e lt2 s f q)). Qed.
Lemma lem8188078 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) : (term777 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g) = (term770 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g).
Proof. exact (eq_refl (term777 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g)). Qed.
Lemma lem8188079 {_144530 _144607 P : Type'} (z : type557 _144530 _144607 P) (g : _144530 -> _144607) : (z g) = (z g).
Proof. exact (eq_refl (z g)). Qed.
Lemma lem8188080 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (z : type557 _144530 _144607 P) (g : _144530 -> _144607) : (term785 _144529 _144530 _144607 _144645 P p pat e lt2 s f q z g) = (term786 _144529 _144530 _144607 _144645 P p pat e lt2 s f q z g).
Proof. exact (MK_COMB (@lem8188078 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g) (@lem8188079 _144530 _144607 P z g)). Qed.
Lemma lem8188081 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : type557 _144530 _144607 P) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) : (term786 _144529 _144530 _144607 _144645 P p pat e lt2 s f q z g) = (term787 _144529 _144530 _144607 _144645 P p pat e lt2 s z f q g).
Proof. exact (eq_refl (term786 _144529 _144530 _144607 _144645 P p pat e lt2 s f q z g)). Qed.
Lemma lem8188082 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : type557 _144530 _144607 P) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) : (term785 _144529 _144530 _144607 _144645 P p pat e lt2 s f q z g) = (term787 _144529 _144530 _144607 _144645 P p pat e lt2 s z f q g).
Proof. exact (TRANS (@lem8188080 _144529 _144530 _144607 _144645 P p pat e lt2 s f q z g) (@lem8188081 _144529 _144530 _144607 _144645 P p pat e lt2 s z f q g)). Qed.
Lemma lem8188083 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : type557 _144530 _144607 P) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) : (term788 _144529 _144530 _144607 _144645 P p pat e lt2 s f q z) = (term789 _144529 _144530 _144607 _144645 P p pat e lt2 s z f q).
Proof. exact (fun_ext (fun g : _144530 -> _144607 => @lem8188082 _144529 _144530 _144607 _144645 P p pat e lt2 s z f q g)). Qed.
Lemma lem8188084 {_144530 _144607 : Type'} : (@all (_144530 -> _144607)) = (@all (_144530 -> _144607)).
Proof. exact (eq_refl (@all (_144530 -> _144607))). Qed.
Lemma lem8188085 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : type557 _144530 _144607 P) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) : (term790 _144529 _144530 _144607 _144645 P p pat e lt2 s f q z) = (term791 _144529 _144530 _144607 _144645 P p pat e lt2 s z f q).
Proof. exact (MK_COMB (@lem8188084 _144530 _144607) (@lem8188083 _144529 _144530 _144607 _144645 P p pat e lt2 s z f q)). Qed.
Lemma lem8188086 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) : (term792 _144529 _144530 _144607 _144645 P p pat e lt2 s f q) = (term793 _144529 _144530 _144607 _144645 P p pat e lt2 s f q).
Proof. exact (fun_ext (fun z : type557 _144530 _144607 P => @lem8188085 _144529 _144530 _144607 _144645 P p pat e lt2 s z f q)). Qed.
Lemma lem8188087 {_144530 _144607 P : Type'} : (@ex ((_144530 -> _144607) -> P -> _144530)) = (@ex ((_144530 -> _144607) -> P -> _144530)).
Proof. exact (eq_refl (@ex ((_144530 -> _144607) -> P -> _144530))). Qed.
Lemma lem8188088 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) : (term775 _144529 _144530 _144607 _144645 P p pat e lt2 s f q) = (term794 _144529 _144530 _144607 _144645 P p pat e lt2 s f q).
Proof. exact (MK_COMB (@lem8188087 _144530 _144607 P) (@lem8188086 _144529 _144530 _144607 _144645 P p pat e lt2 s f q)). Qed.
Lemma lem8188089 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) : ((term774 _144529 _144530 _144607 _144645 P p pat e lt2 s f q) = (term775 _144529 _144530 _144607 _144645 P p pat e lt2 s f q)) = ((term773 _144529 _144530 _144607 _144645 P p pat e lt2 s f q) = (term794 _144529 _144530 _144607 _144645 P p pat e lt2 s f q)).
Proof. exact (MK_COMB (@lem8188077 _144529 _144530 _144607 _144645 P p pat e lt2 s f q) (@lem8188088 _144529 _144530 _144607 _144645 P p pat e lt2 s f q)). Qed.
Lemma lem8188090 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) : (term773 _144529 _144530 _144607 _144645 P p pat e lt2 s f q) = (term794 _144529 _144530 _144607 _144645 P p pat e lt2 s f q).
Proof. exact (EQ_MP (@lem8188089 _144529 _144530 _144607 _144645 P p pat e lt2 s f q) (@lem8188064 _144529 _144530 _144607 _144645 P p pat e lt2 s f q)). Qed.
Lemma lem8188091 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) : (term707 _144529 _144530 _144607 _144645 P p pat e lt2 s f q) = (term794 _144529 _144530 _144607 _144645 P p pat e lt2 s f q).
Proof. exact (TRANS (@lem8188060 _144529 _144530 _144607 _144645 P p pat e lt2 s f q) (@lem8188090 _144529 _144530 _144607 _144645 P p pat e lt2 s f q)). Qed.
Lemma lem8188092 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (q : type560 _144530 _144607 P) : (term708 _144529 _144530 _144607 _144645 P p pat e lt2 s q) = (term795 _144529 _144530 _144607 _144645 P p pat e lt2 s q).
Proof. exact (fun_ext (fun f : _144530 -> _144607 => @lem8188091 _144529 _144530 _144607 _144645 P p pat e lt2 s f q)). Qed.
Lemma lem8188093 {_144530 _144607 : Type'} : (@all (_144530 -> _144607)) = (@all (_144530 -> _144607)).
Proof. exact (eq_refl (@all (_144530 -> _144607))). Qed.
Lemma lem8188094 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (q : type560 _144530 _144607 P) : (term709 _144529 _144530 _144607 _144645 P p pat e lt2 s q) = (term796 _144529 _144530 _144607 _144645 P p pat e lt2 s q).
Proof. exact (MK_COMB (@lem8188093 _144530 _144607) (@lem8188092 _144529 _144530 _144607 _144645 P p pat e lt2 s q)). Qed.
Lemma lem8188096 {A B : Type'} (P : type1413 A B) : (term482 A B P) = (term483 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem8188097 {_144530 _144607 P : Type'} (P' : type495 _144530 _144607 P) : (term534 _144530 _144607 P P') = (term535 _144530 _144607 P P').
Proof. exact (@lem8188096 (_144530 -> _144607) (type557 _144530 _144607 P) P'). Qed.
Lemma lem8188098 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (q : type560 _144530 _144607 P) : (term797 _144529 _144530 _144607 _144645 P p pat e lt2 s q) = (term798 _144529 _144530 _144607 _144645 P p pat e lt2 s q).
Proof. exact (@lem8188097 _144530 _144607 P (term799 _144529 _144530 _144607 _144645 P p pat e lt2 s q)). Qed.
Lemma lem8188099 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) : (term800 _144529 _144530 _144607 _144645 P p pat e lt2 s q f) = (term793 _144529 _144530 _144607 _144645 P p pat e lt2 s f q).
Proof. exact (eq_refl (term800 _144529 _144530 _144607 _144645 P p pat e lt2 s q f)). Qed.
Lemma lem8188100 {_144530 _144607 P : Type'} (z : type557 _144530 _144607 P) : z = z.
Proof. exact (eq_refl z). Qed.
Lemma lem8188101 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (z : type557 _144530 _144607 P) : (term801 _144529 _144530 _144607 _144645 P p pat e lt2 s q f z) = (term802 _144529 _144530 _144607 _144645 P p pat e lt2 s f q z).
Proof. exact (MK_COMB (@lem8188099 _144529 _144530 _144607 _144645 P p pat e lt2 s f q) (@lem8188100 _144530 _144607 P z)). Qed.
Lemma lem8188102 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : type557 _144530 _144607 P) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) : (term802 _144529 _144530 _144607 _144645 P p pat e lt2 s f q z) = (term791 _144529 _144530 _144607 _144645 P p pat e lt2 s z f q).
Proof. exact (eq_refl (term802 _144529 _144530 _144607 _144645 P p pat e lt2 s f q z)). Qed.
Lemma lem8188103 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : type557 _144530 _144607 P) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) : (term801 _144529 _144530 _144607 _144645 P p pat e lt2 s q f z) = (term791 _144529 _144530 _144607 _144645 P p pat e lt2 s z f q).
Proof. exact (TRANS (@lem8188101 _144529 _144530 _144607 _144645 P p pat e lt2 s f q z) (@lem8188102 _144529 _144530 _144607 _144645 P p pat e lt2 s z f q)). Qed.
Lemma lem8188104 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) : (term803 _144529 _144530 _144607 _144645 P p pat e lt2 s q f) = (term793 _144529 _144530 _144607 _144645 P p pat e lt2 s f q).
Proof. exact (fun_ext (fun z : type557 _144530 _144607 P => @lem8188103 _144529 _144530 _144607 _144645 P p pat e lt2 s z f q)). Qed.
Lemma lem8188105 {_144530 _144607 P : Type'} : (@ex ((_144530 -> _144607) -> P -> _144530)) = (@ex ((_144530 -> _144607) -> P -> _144530)).
Proof. exact (eq_refl (@ex ((_144530 -> _144607) -> P -> _144530))). Qed.
Lemma lem8188106 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) : (term804 _144529 _144530 _144607 _144645 P p pat e lt2 s q f) = (term794 _144529 _144530 _144607 _144645 P p pat e lt2 s f q).
Proof. exact (MK_COMB (@lem8188105 _144530 _144607 P) (@lem8188104 _144529 _144530 _144607 _144645 P p pat e lt2 s f q)). Qed.
Lemma lem8188107 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (q : type560 _144530 _144607 P) : (term805 _144529 _144530 _144607 _144645 P p pat e lt2 s q) = (term795 _144529 _144530 _144607 _144645 P p pat e lt2 s q).
Proof. exact (fun_ext (fun f : _144530 -> _144607 => @lem8188106 _144529 _144530 _144607 _144645 P p pat e lt2 s f q)). Qed.
Lemma lem8188108 {_144530 _144607 : Type'} : (@all (_144530 -> _144607)) = (@all (_144530 -> _144607)).
Proof. exact (eq_refl (@all (_144530 -> _144607))). Qed.
Lemma lem8188109 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (q : type560 _144530 _144607 P) : (term797 _144529 _144530 _144607 _144645 P p pat e lt2 s q) = (term796 _144529 _144530 _144607 _144645 P p pat e lt2 s q).
Proof. exact (MK_COMB (@lem8188108 _144530 _144607) (@lem8188107 _144529 _144530 _144607 _144645 P p pat e lt2 s q)). Qed.
Lemma lem8188110 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8188111 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (q : type560 _144530 _144607 P) : (term806 _144529 _144530 _144607 _144645 P p pat e lt2 s q) = (term807 _144529 _144530 _144607 _144645 P p pat e lt2 s q).
Proof. exact (MK_COMB (@lem8188110) (@lem8188109 _144529 _144530 _144607 _144645 P p pat e lt2 s q)). Qed.
Lemma lem8188112 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) : (term800 _144529 _144530 _144607 _144645 P p pat e lt2 s q f) = (term793 _144529 _144530 _144607 _144645 P p pat e lt2 s f q).
Proof. exact (eq_refl (term800 _144529 _144530 _144607 _144645 P p pat e lt2 s q f)). Qed.
Lemma lem8188113 {_144530 _144607 P : Type'} (z : type518 _144530 _144607 P) (f : _144530 -> _144607) : (z f) = (z f).
Proof. exact (eq_refl (z f)). Qed.
Lemma lem8188114 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (q : type560 _144530 _144607 P) (z : type518 _144530 _144607 P) (f : _144530 -> _144607) : (term808 _144529 _144530 _144607 _144645 P p pat e lt2 s q z f) = (term809 _144529 _144530 _144607 _144645 P p pat e lt2 s q z f).
Proof. exact (MK_COMB (@lem8188112 _144529 _144530 _144607 _144645 P p pat e lt2 s f q) (@lem8188113 _144530 _144607 P z f)). Qed.
Lemma lem8188115 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : type518 _144530 _144607 P) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) : (term809 _144529 _144530 _144607 _144645 P p pat e lt2 s q z f) = (term810 _144529 _144530 _144607 _144645 P p pat e lt2 s z f q).
Proof. exact (eq_refl (term809 _144529 _144530 _144607 _144645 P p pat e lt2 s q z f)). Qed.
Lemma lem8188116 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : type518 _144530 _144607 P) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) : (term808 _144529 _144530 _144607 _144645 P p pat e lt2 s q z f) = (term810 _144529 _144530 _144607 _144645 P p pat e lt2 s z f q).
Proof. exact (TRANS (@lem8188114 _144529 _144530 _144607 _144645 P p pat e lt2 s q z f) (@lem8188115 _144529 _144530 _144607 _144645 P p pat e lt2 s z f q)). Qed.
Lemma lem8188117 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : type518 _144530 _144607 P) (q : type560 _144530 _144607 P) : (term811 _144529 _144530 _144607 _144645 P p pat e lt2 s q z) = (term812 _144529 _144530 _144607 _144645 P p pat e lt2 s z q).
Proof. exact (fun_ext (fun f : _144530 -> _144607 => @lem8188116 _144529 _144530 _144607 _144645 P p pat e lt2 s z f q)). Qed.
Lemma lem8188118 {_144530 _144607 : Type'} : (@all (_144530 -> _144607)) = (@all (_144530 -> _144607)).
Proof. exact (eq_refl (@all (_144530 -> _144607))). Qed.
Lemma lem8188119 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : type518 _144530 _144607 P) (q : type560 _144530 _144607 P) : (term813 _144529 _144530 _144607 _144645 P p pat e lt2 s q z) = (term814 _144529 _144530 _144607 _144645 P p pat e lt2 s z q).
Proof. exact (MK_COMB (@lem8188118 _144530 _144607) (@lem8188117 _144529 _144530 _144607 _144645 P p pat e lt2 s z q)). Qed.
Lemma lem8188120 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (q : type560 _144530 _144607 P) : (term815 _144529 _144530 _144607 _144645 P p pat e lt2 s q) = (term816 _144529 _144530 _144607 _144645 P p pat e lt2 s q).
Proof. exact (fun_ext (fun z : type518 _144530 _144607 P => @lem8188119 _144529 _144530 _144607 _144645 P p pat e lt2 s z q)). Qed.
Lemma lem8188121 {_144530 _144607 P : Type'} : (@ex ((_144530 -> _144607) -> (_144530 -> _144607) -> P -> _144530)) = (@ex ((_144530 -> _144607) -> (_144530 -> _144607) -> P -> _144530)).
Proof. exact (eq_refl (@ex ((_144530 -> _144607) -> (_144530 -> _144607) -> P -> _144530))). Qed.
Lemma lem8188122 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (q : type560 _144530 _144607 P) : (term798 _144529 _144530 _144607 _144645 P p pat e lt2 s q) = (term817 _144529 _144530 _144607 _144645 P p pat e lt2 s q).
Proof. exact (MK_COMB (@lem8188121 _144530 _144607 P) (@lem8188120 _144529 _144530 _144607 _144645 P p pat e lt2 s q)). Qed.
Lemma lem8188123 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (q : type560 _144530 _144607 P) : ((term797 _144529 _144530 _144607 _144645 P p pat e lt2 s q) = (term798 _144529 _144530 _144607 _144645 P p pat e lt2 s q)) = ((term796 _144529 _144530 _144607 _144645 P p pat e lt2 s q) = (term817 _144529 _144530 _144607 _144645 P p pat e lt2 s q)).
Proof. exact (MK_COMB (@lem8188111 _144529 _144530 _144607 _144645 P p pat e lt2 s q) (@lem8188122 _144529 _144530 _144607 _144645 P p pat e lt2 s q)). Qed.
Lemma lem8188124 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (q : type560 _144530 _144607 P) : (term796 _144529 _144530 _144607 _144645 P p pat e lt2 s q) = (term817 _144529 _144530 _144607 _144645 P p pat e lt2 s q).
Proof. exact (EQ_MP (@lem8188123 _144529 _144530 _144607 _144645 P p pat e lt2 s q) (@lem8188098 _144529 _144530 _144607 _144645 P p pat e lt2 s q)). Qed.
Lemma lem8188126 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (q : type560 _144530 _144607 P) : (term709 _144529 _144530 _144607 _144645 P p pat e lt2 s q) = (term817 _144529 _144530 _144607 _144645 P p pat e lt2 s q).
Proof. exact (TRANS (@lem8188094 _144529 _144530 _144607 _144645 P p pat e lt2 s q) (@lem8188124 _144529 _144530 _144607 _144645 P p pat e lt2 s q)). Qed.
Lemma lem8188127 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (q : type560 _144530 _144607 P) : (term224 _144529 _144530 _144607 _144645 P p pat e lt2 s q) = (term817 _144529 _144530 _144607 _144645 P p pat e lt2 s q).
Proof. exact (TRANS (@lem8187846 _144529 _144530 _144607 _144645 P p pat e lt2 s q) (@lem8188126 _144529 _144530 _144607 _144645 P p pat e lt2 s q)). Qed.
Lemma lem8188128 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (q : type560 _144530 _144607 P) (h1 : term224 _144529 _144530 _144607 _144645 P p pat e lt2 s q) : term817 _144529 _144530 _144607 _144645 P p pat e lt2 s q.
Proof. exact (EQ_MP (@lem8188127 _144529 _144530 _144607 _144645 P p pat e lt2 s q) (@lem8186765 _144529 _144530 _144607 _144645 P p pat e lt2 s q h1)). Qed.
Lemma lem8188136 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) : (term557 _144530 _144607 _144645 P pat e q f a) = (term558 _144530 _144607 _144645 P pat e q f a).
Proof. exact (@lem17045 ((pat f a) = (e f a)) (q f a)). Qed.
Lemma lem8188138 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) : (term416 _144530 _144607 P p f a) = (term416 _144530 _144607 P p f a).
Proof. exact (eq_refl (term416 _144530 _144607 P p f a)). Qed.
Lemma lem8188139 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) : (term559 _144530 _144607 _144645 P p pat e q f a) = (term560 _144530 _144607 _144645 P p pat e q f a).
Proof. exact (MK_COMB (@lem8188138 _144530 _144607 P p f a) (@lem8188136 _144530 _144607 _144645 P pat e q f a)). Qed.
Lemma lem8188140 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) : (term561 _144530 _144607 _144645 P p pat e q f a) = (term559 _144530 _144607 _144645 P p pat e q f a).
Proof. exact (@lem17045 (p f a) (term562 _144530 _144607 _144645 P pat e q f a)). Qed.
Lemma lem8188141 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) : (term561 _144530 _144607 _144645 P p pat e q f a) = (term560 _144530 _144607 _144645 P p pat e q f a).
Proof. exact (TRANS (@lem8188140 _144530 _144607 _144645 P p pat e q f a) (@lem8188139 _144530 _144607 _144645 P p pat e q f a)). Qed.
Lemma lem8188149 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term557 _144530 _144607 _144645 P pat e q g a) = (term558 _144530 _144607 _144645 P pat e q g a).
Proof. exact (@lem17045 ((pat g a) = (e g a)) (q g a)). Qed.
Lemma lem8188151 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term416 _144530 _144607 P p g a) = (term416 _144530 _144607 P p g a).
Proof. exact (eq_refl (term416 _144530 _144607 P p g a)). Qed.
Lemma lem8188152 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term559 _144530 _144607 _144645 P p pat e q g a) = (term560 _144530 _144607 _144645 P p pat e q g a).
Proof. exact (MK_COMB (@lem8188151 _144530 _144607 P p g a) (@lem8188149 _144530 _144607 _144645 P pat e q g a)). Qed.
Lemma lem8188153 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term561 _144530 _144607 _144645 P p pat e q g a) = (term559 _144530 _144607 _144645 P p pat e q g a).
Proof. exact (@lem17045 (p g a) (term562 _144530 _144607 _144645 P pat e q g a)). Qed.
Lemma lem8188154 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term561 _144530 _144607 _144645 P p pat e q g a) = (term560 _144530 _144607 _144645 P p pat e q g a).
Proof. exact (TRANS (@lem8188153 _144530 _144607 _144645 P p pat e q g a) (@lem8188152 _144530 _144607 _144645 P p pat e q g a)). Qed.
Lemma lem8188161 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (z : _144530) : (term404 _144529 _144530 _144607 P lt2 s a f g z) = (term405 _144529 _144530 _144607 P lt2 s a f g z).
Proof. exact (@lem17362 (term406 _144529 _144530 P lt2 z s a) ((f z) = (g z))). Qed.
Lemma lem8188162 {_144530 : Type'} (P : _144530 -> Prop) : (term407 _144530 P) = (term408 _144530 P).
Proof. exact (@lem18392 _144530 P). Qed.
Lemma lem8188163 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term409 _144529 _144530 _144607 P lt2 s a f g) = (term410 _144529 _144530 _144607 P lt2 s a f g).
Proof. exact (@lem8188162 _144530 (term397 _144529 _144530 _144607 P lt2 s a f g)). Qed.
Lemma lem8188164 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (z : _144530) : (term411 _144529 _144530 _144607 P lt2 s a f g z) = (term396 _144529 _144530 _144607 P lt2 s a f g z).
Proof. exact (eq_refl (term411 _144529 _144530 _144607 P lt2 s a f g z)). Qed.
Lemma lem8188165 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8188166 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (z : _144530) : (term412 _144529 _144530 _144607 P lt2 s a f g z) = (term404 _144529 _144530 _144607 P lt2 s a f g z).
Proof. exact (MK_COMB (@lem8188165) (@lem8188164 _144529 _144530 _144607 P lt2 s a f g z)). Qed.
Lemma lem8188167 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (z : _144530) : (term412 _144529 _144530 _144607 P lt2 s a f g z) = (term405 _144529 _144530 _144607 P lt2 s a f g z).
Proof. exact (TRANS (@lem8188166 _144529 _144530 _144607 P lt2 s a f g z) (@lem8188161 _144529 _144530 _144607 P lt2 s a f g z)). Qed.
Lemma lem8188168 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term413 _144529 _144530 _144607 P lt2 s a f g) = (term414 _144529 _144530 _144607 P lt2 s a f g).
Proof. exact (fun_ext (fun z : _144530 => @lem8188167 _144529 _144530 _144607 P lt2 s a f g z)). Qed.
Lemma lem8188169 {_144530 : Type'} : (@ex _144530) = (@ex _144530).
Proof. exact (eq_refl (@ex _144530)). Qed.
Lemma lem8188170 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term410 _144529 _144530 _144607 P lt2 s a f g) = (term415 _144529 _144530 _144607 P lt2 s a f g).
Proof. exact (MK_COMB (@lem8188169 _144530) (@lem8188168 _144529 _144530 _144607 P lt2 s a f g)). Qed.
Lemma lem8188171 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term409 _144529 _144530 _144607 P lt2 s a f g) = (term415 _144529 _144530 _144607 P lt2 s a f g).
Proof. exact (TRANS (@lem8188163 _144529 _144530 _144607 P lt2 s a f g) (@lem8188170 _144529 _144530 _144607 P lt2 s a f g)). Qed.
Lemma lem8188172 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8188173 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term563 _144530 _144607 _144645 P p pat e q g a) = (term564 _144530 _144607 _144645 P p pat e q g a).
Proof. exact (MK_COMB (@lem8188172) (@lem8188154 _144530 _144607 _144645 P p pat e q g a)). Qed.
Lemma lem8188174 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term565 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) = (term566 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g).
Proof. exact (MK_COMB (@lem8188173 _144530 _144607 _144645 P p pat e q g a) (@lem8188171 _144529 _144530 _144607 P lt2 s a f g)). Qed.
Lemma lem8188175 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term567 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) = (term565 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g).
Proof. exact (@lem17045 (term159 _144530 _144607 _144645 P p pat e q g a) (term165 _144529 _144530 _144607 P lt2 s a f g)). Qed.
Lemma lem8188176 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term567 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) = (term566 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g).
Proof. exact (TRANS (@lem8188175 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) (@lem8188174 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g)). Qed.
Lemma lem8188177 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8188178 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) : (term563 _144530 _144607 _144645 P p pat e q f a) = (term564 _144530 _144607 _144645 P p pat e q f a).
Proof. exact (MK_COMB (@lem8188177) (@lem8188141 _144530 _144607 _144645 P p pat e q f a)). Qed.
Lemma lem8188179 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term568 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) = (term569 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g).
Proof. exact (MK_COMB (@lem8188178 _144530 _144607 _144645 P p pat e q f a) (@lem8188176 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g)). Qed.
Lemma lem8188180 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term570 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) = (term568 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g).
Proof. exact (@lem17045 (term159 _144530 _144607 _144645 P p pat e q f a) (term167 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g)). Qed.
Lemma lem8188181 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term570 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) = (term569 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g).
Proof. exact (TRANS (@lem8188180 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) (@lem8188179 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g)). Qed.
Lemma lem8188182 {_144530 _144607 _144654 P : Type'} (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : ((y f a) = (y g a)) = ((y f a) = (y g a)).
Proof. exact (eq_refl ((y f a) = (y g a))). Qed.
Lemma lem8188183 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8188184 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term571 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) = (term572 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g).
Proof. exact (MK_COMB (@lem8188183) (@lem8188181 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g)). Qed.
Lemma lem8188185 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (term573 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g a) = (term574 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g a).
Proof. exact (MK_COMB (@lem8188184 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) (@lem8188182 _144530 _144607 _144654 P f y g a)). Qed.
Lemma lem8188186 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (term173 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g a) = (term573 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g a).
Proof. exact (@lem17265 (term169 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) ((y f a) = (y g a))). Qed.
Lemma lem8188187 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (term173 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g a) = (term574 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g a).
Proof. exact (TRANS (@lem8188186 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g a) (@lem8188185 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g a)). Qed.
Lemma lem8188188 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) : (term175 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g) = (term575 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g).
Proof. exact (fun_ext (fun a : P => @lem8188187 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g a)). Qed.
Lemma lem8188189 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8188190 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) : (term177 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g) = (term576 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g).
Proof. exact (MK_COMB (@lem8188189 P) (@lem8188188 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g)). Qed.
Lemma lem8188191 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) : (term179 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y) = (term577 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y).
Proof. exact (fun_ext (fun g : _144530 -> _144607 => @lem8188190 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g)). Qed.
Lemma lem8188192 {_144530 _144607 : Type'} : (@all (_144530 -> _144607)) = (@all (_144530 -> _144607)).
Proof. exact (eq_refl (@all (_144530 -> _144607))). Qed.
Lemma lem8188193 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) : (term181 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y) = (term578 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y).
Proof. exact (MK_COMB (@lem8188192 _144530 _144607) (@lem8188191 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y)). Qed.
Lemma lem8188194 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (y : type564 _144530 _144607 _144654 P) : (term183 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y) = (term579 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y).
Proof. exact (fun_ext (fun f : _144530 -> _144607 => @lem8188193 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y)). Qed.
Lemma lem8188195 {_144530 _144607 : Type'} : (@all (_144530 -> _144607)) = (@all (_144530 -> _144607)).
Proof. exact (eq_refl (@all (_144530 -> _144607))). Qed.
Lemma lem8188196 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (y : type564 _144530 _144607 _144654 P) : (term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y) = (term580 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y).
Proof. exact (MK_COMB (@lem8188195 _144530 _144607) (@lem8188194 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y)). Qed.
Lemma lem8188303 {A : Type'} (P : Prop) (Q : A -> Prop) : (term433 A P Q) = (term434 A P Q).
Proof. exact (EQ_MP (@lem18911 A P Q) (@lem18910 A P Q)). Qed.
Lemma lem8188304 {_144530 : Type'} (P : Prop) (Q : _144530 -> Prop) : (term433 _144530 P Q) = (term434 _144530 P Q).
Proof. exact (@lem8188303 _144530 P Q). Qed.
Lemma lem8188305 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term581 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) = (term582 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g).
Proof. exact (@lem8188304 _144530 (term560 _144530 _144607 _144645 P p pat e q g a) (term414 _144529 _144530 _144607 P lt2 s a f g)). Qed.
Lemma lem8188306 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (z : _144530) : (term438 _144529 _144530 _144607 P lt2 s a f g z) = (term405 _144529 _144530 _144607 P lt2 s a f g z).
Proof. exact (eq_refl (term438 _144529 _144530 _144607 P lt2 s a f g z)). Qed.
Lemma lem8188307 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term439 _144529 _144530 _144607 P lt2 s a f g) = (term414 _144529 _144530 _144607 P lt2 s a f g).
Proof. exact (fun_ext (fun z : _144530 => @lem8188306 _144529 _144530 _144607 P lt2 s a f g z)). Qed.
Lemma lem8188308 {_144530 : Type'} : (@ex _144530) = (@ex _144530).
Proof. exact (eq_refl (@ex _144530)). Qed.
Lemma lem8188309 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term440 _144529 _144530 _144607 P lt2 s a f g) = (term415 _144529 _144530 _144607 P lt2 s a f g).
Proof. exact (MK_COMB (@lem8188308 _144530) (@lem8188307 _144529 _144530 _144607 P lt2 s a f g)). Qed.
Lemma lem8188310 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term564 _144530 _144607 _144645 P p pat e q g a) = (term564 _144530 _144607 _144645 P p pat e q g a).
Proof. exact (eq_refl (term564 _144530 _144607 _144645 P p pat e q g a)). Qed.
Lemma lem8188311 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term581 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) = (term566 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g).
Proof. exact (MK_COMB (@lem8188310 _144530 _144607 _144645 P p pat e q g a) (@lem8188309 _144529 _144530 _144607 P lt2 s a f g)). Qed.
Lemma lem8188312 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8188313 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term583 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) = (term584 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g).
Proof. exact (MK_COMB (@lem8188312) (@lem8188311 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g)). Qed.
Lemma lem8188314 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (z : _144530) : (term438 _144529 _144530 _144607 P lt2 s a f g z) = (term405 _144529 _144530 _144607 P lt2 s a f g z).
Proof. exact (eq_refl (term438 _144529 _144530 _144607 P lt2 s a f g z)). Qed.
Lemma lem8188315 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term564 _144530 _144607 _144645 P p pat e q g a) = (term564 _144530 _144607 _144645 P p pat e q g a).
Proof. exact (eq_refl (term564 _144530 _144607 _144645 P p pat e q g a)). Qed.
Lemma lem8188316 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (z : _144530) : (term585 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g z) = (term586 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g z).
Proof. exact (MK_COMB (@lem8188315 _144530 _144607 _144645 P p pat e q g a) (@lem8188314 _144529 _144530 _144607 P lt2 s a f g z)). Qed.
Lemma lem8188317 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term587 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) = (term588 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g).
Proof. exact (fun_ext (fun z : _144530 => @lem8188316 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g z)). Qed.
Lemma lem8188318 {_144530 : Type'} : (@ex _144530) = (@ex _144530).
Proof. exact (eq_refl (@ex _144530)). Qed.
Lemma lem8188319 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term582 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) = (term589 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g).
Proof. exact (MK_COMB (@lem8188318 _144530) (@lem8188317 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g)). Qed.
Lemma lem8188320 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : ((term581 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) = (term582 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g)) = ((term566 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) = (term589 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g)).
Proof. exact (MK_COMB (@lem8188313 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) (@lem8188319 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g)). Qed.
Lemma lem8188321 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term566 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) = (term589 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g).
Proof. exact (EQ_MP (@lem8188320 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) (@lem8188305 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g)). Qed.
Lemma lem8188322 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) : (term564 _144530 _144607 _144645 P p pat e q f a) = (term564 _144530 _144607 _144645 P p pat e q f a).
Proof. exact (eq_refl (term564 _144530 _144607 _144645 P p pat e q f a)). Qed.
Lemma lem8188323 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term569 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) = (term590 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g).
Proof. exact (MK_COMB (@lem8188322 _144530 _144607 _144645 P p pat e q f a) (@lem8188321 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g)). Qed.
Lemma lem8188325 {A : Type'} (P : Prop) (Q : A -> Prop) : (term433 A P Q) = (term434 A P Q).
Proof. exact (EQ_MP (@lem18911 A P Q) (@lem18910 A P Q)). Qed.
Lemma lem8188326 {_144530 : Type'} (P : Prop) (Q : _144530 -> Prop) : (term433 _144530 P Q) = (term434 _144530 P Q).
Proof. exact (@lem8188325 _144530 P Q). Qed.
Lemma lem8188327 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term591 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) = (term592 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g).
Proof. exact (@lem8188326 _144530 (term560 _144530 _144607 _144645 P p pat e q f a) (term588 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g)). Qed.
Lemma lem8188328 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (z : _144530) : (term593 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g z) = (term586 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g z).
Proof. exact (eq_refl (term593 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g z)). Qed.
Lemma lem8188329 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term594 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) = (term588 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g).
Proof. exact (fun_ext (fun z : _144530 => @lem8188328 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g z)). Qed.
Lemma lem8188330 {_144530 : Type'} : (@ex _144530) = (@ex _144530).
Proof. exact (eq_refl (@ex _144530)). Qed.
Lemma lem8188331 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term595 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) = (term589 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g).
Proof. exact (MK_COMB (@lem8188330 _144530) (@lem8188329 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g)). Qed.
Lemma lem8188332 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) : (term564 _144530 _144607 _144645 P p pat e q f a) = (term564 _144530 _144607 _144645 P p pat e q f a).
Proof. exact (eq_refl (term564 _144530 _144607 _144645 P p pat e q f a)). Qed.
Lemma lem8188333 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term591 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) = (term590 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g).
Proof. exact (MK_COMB (@lem8188332 _144530 _144607 _144645 P p pat e q f a) (@lem8188331 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g)). Qed.
Lemma lem8188334 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8188335 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term596 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) = (term597 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g).
Proof. exact (MK_COMB (@lem8188334) (@lem8188333 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g)). Qed.
Lemma lem8188336 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (z : _144530) : (term593 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g z) = (term586 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g z).
Proof. exact (eq_refl (term593 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g z)). Qed.
Lemma lem8188337 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) : (term564 _144530 _144607 _144645 P p pat e q f a) = (term564 _144530 _144607 _144645 P p pat e q f a).
Proof. exact (eq_refl (term564 _144530 _144607 _144645 P p pat e q f a)). Qed.
Lemma lem8188338 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (z : _144530) : (term598 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g z) = (term599 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g z).
Proof. exact (MK_COMB (@lem8188337 _144530 _144607 _144645 P p pat e q f a) (@lem8188336 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g z)). Qed.
Lemma lem8188339 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term600 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) = (term601 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g).
Proof. exact (fun_ext (fun z : _144530 => @lem8188338 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g z)). Qed.
Lemma lem8188340 {_144530 : Type'} : (@ex _144530) = (@ex _144530).
Proof. exact (eq_refl (@ex _144530)). Qed.
Lemma lem8188341 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term592 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) = (term602 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g).
Proof. exact (MK_COMB (@lem8188340 _144530) (@lem8188339 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g)). Qed.
Lemma lem8188342 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : ((term591 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) = (term592 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g)) = ((term590 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) = (term602 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g)).
Proof. exact (MK_COMB (@lem8188335 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) (@lem8188341 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g)). Qed.
Lemma lem8188343 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term590 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) = (term602 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g).
Proof. exact (EQ_MP (@lem8188342 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) (@lem8188327 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g)). Qed.
Lemma lem8188344 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term569 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) = (term602 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g).
Proof. exact (TRANS (@lem8188323 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) (@lem8188343 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g)). Qed.
Lemma lem8188345 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8188346 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term572 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) = (term603 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g).
Proof. exact (MK_COMB (@lem8188345) (@lem8188344 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g)). Qed.
Lemma lem8188347 {_144530 _144607 _144654 P : Type'} (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : ((y f a) = (y g a)) = ((y f a) = (y g a)).
Proof. exact (eq_refl ((y f a) = (y g a))). Qed.
Lemma lem8188348 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (term574 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g a) = (term604 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g a).
Proof. exact (MK_COMB (@lem8188346 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) (@lem8188347 _144530 _144607 _144654 P f y g a)). Qed.
Lemma lem8188350 {A : Type'} (P : A -> Prop) (Q : Prop) : (term463 A P Q) = (term464 A P Q).
Proof. exact (EQ_MP (@lem18905 A P Q) (@lem18904 A P Q)). Qed.
Lemma lem8188351 {_144530 : Type'} (P : _144530 -> Prop) (Q : Prop) : (term463 _144530 P Q) = (term464 _144530 P Q).
Proof. exact (@lem8188350 _144530 P Q). Qed.
Lemma lem8188352 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (term605 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g a) = (term606 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g a).
Proof. exact (@lem8188351 _144530 (term601 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) ((y f a) = (y g a))). Qed.
Lemma lem8188353 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (z : _144530) : (term607 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g z) = (term599 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g z).
Proof. exact (eq_refl (term607 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g z)). Qed.
Lemma lem8188354 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term608 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) = (term601 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g).
Proof. exact (fun_ext (fun z : _144530 => @lem8188353 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g z)). Qed.
Lemma lem8188355 {_144530 : Type'} : (@ex _144530) = (@ex _144530).
Proof. exact (eq_refl (@ex _144530)). Qed.
Lemma lem8188356 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term609 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) = (term602 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g).
Proof. exact (MK_COMB (@lem8188355 _144530) (@lem8188354 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g)). Qed.
Lemma lem8188357 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8188358 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term610 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) = (term603 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g).
Proof. exact (MK_COMB (@lem8188357) (@lem8188356 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g)). Qed.
Lemma lem8188359 {_144530 _144607 _144654 P : Type'} (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : ((y f a) = (y g a)) = ((y f a) = (y g a)).
Proof. exact (eq_refl ((y f a) = (y g a))). Qed.
Lemma lem8188360 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (term605 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g a) = (term604 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g a).
Proof. exact (MK_COMB (@lem8188358 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) (@lem8188359 _144530 _144607 _144654 P f y g a)). Qed.
Lemma lem8188361 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8188362 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (term611 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g a) = (term612 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g a).
Proof. exact (MK_COMB (@lem8188361) (@lem8188360 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g a)). Qed.
Lemma lem8188363 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (z : _144530) : (term607 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g z) = (term599 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g z).
Proof. exact (eq_refl (term607 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g z)). Qed.
Lemma lem8188364 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8188365 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (z : _144530) : (term613 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g z) = (term614 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g z).
Proof. exact (MK_COMB (@lem8188364) (@lem8188363 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g z)). Qed.
Lemma lem8188366 {_144530 _144607 _144654 P : Type'} (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : ((y f a) = (y g a)) = ((y f a) = (y g a)).
Proof. exact (eq_refl ((y f a) = (y g a))). Qed.
Lemma lem8188367 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : _144530) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (term615 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z f y g a) = (term616 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z f y g a).
Proof. exact (MK_COMB (@lem8188365 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g z) (@lem8188366 _144530 _144607 _144654 P f y g a)). Qed.
Lemma lem8188368 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (term617 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g a) = (term618 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g a).
Proof. exact (fun_ext (fun z : _144530 => @lem8188367 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z f y g a)). Qed.
Lemma lem8188369 {_144530 : Type'} : (@ex _144530) = (@ex _144530).
Proof. exact (eq_refl (@ex _144530)). Qed.
Lemma lem8188370 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (term606 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g a) = (term619 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g a).
Proof. exact (MK_COMB (@lem8188369 _144530) (@lem8188368 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g a)). Qed.
Lemma lem8188371 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : ((term605 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g a) = (term606 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g a)) = ((term604 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g a) = (term619 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g a)).
Proof. exact (MK_COMB (@lem8188362 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g a) (@lem8188370 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g a)). Qed.
Lemma lem8188372 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (term604 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g a) = (term619 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g a).
Proof. exact (EQ_MP (@lem8188371 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g a) (@lem8188352 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g a)). Qed.
Lemma lem8188373 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (term574 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g a) = (term619 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g a).
Proof. exact (TRANS (@lem8188348 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g a) (@lem8188372 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g a)). Qed.
Lemma lem8188374 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) : (term575 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g) = (term620 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g).
Proof. exact (fun_ext (fun a : P => @lem8188373 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g a)). Qed.
Lemma lem8188375 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8188376 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) : (term576 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g) = (term621 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g).
Proof. exact (MK_COMB (@lem8188375 P) (@lem8188374 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g)). Qed.
Lemma lem8188378 {A B : Type'} (P : type1413 A B) : (term482 A B P) = (term483 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem8188379 {_144530 P : Type'} (P' : type1470 _144530 P) : (term484 _144530 P P') = (term485 _144530 P P').
Proof. exact (@lem8188378 P _144530 P'). Qed.
Lemma lem8188380 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) : (term622 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g) = (term623 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g).
Proof. exact (@lem8188379 _144530 P (term624 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g)). Qed.
Lemma lem8188381 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (term625 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g a) = (term618 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g a).
Proof. exact (eq_refl (term625 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g a)). Qed.
Lemma lem8188382 {_144530 : Type'} (z : _144530) : z = z.
Proof. exact (eq_refl z). Qed.
Lemma lem8188383 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) (z : _144530) : (term626 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g a z) = (term627 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g a z).
Proof. exact (MK_COMB (@lem8188381 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g a) (@lem8188382 _144530 z)). Qed.
Lemma lem8188384 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : _144530) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (term627 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g a z) = (term616 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z f y g a).
Proof. exact (eq_refl (term627 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g a z)). Qed.
Lemma lem8188385 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : _144530) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (term626 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g a z) = (term616 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z f y g a).
Proof. exact (TRANS (@lem8188383 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g a z) (@lem8188384 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z f y g a)). Qed.
Lemma lem8188386 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (term628 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g a) = (term618 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g a).
Proof. exact (fun_ext (fun z : _144530 => @lem8188385 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z f y g a)). Qed.
Lemma lem8188387 {_144530 : Type'} : (@ex _144530) = (@ex _144530).
Proof. exact (eq_refl (@ex _144530)). Qed.
Lemma lem8188388 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (term629 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g a) = (term619 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g a).
Proof. exact (MK_COMB (@lem8188387 _144530) (@lem8188386 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g a)). Qed.
Lemma lem8188389 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) : (term630 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g) = (term620 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g).
Proof. exact (fun_ext (fun a : P => @lem8188388 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g a)). Qed.
Lemma lem8188390 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8188391 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) : (term622 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g) = (term621 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g).
Proof. exact (MK_COMB (@lem8188390 P) (@lem8188389 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g)). Qed.
Lemma lem8188392 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8188393 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) : (term631 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g) = (term632 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g).
Proof. exact (MK_COMB (@lem8188392) (@lem8188391 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g)). Qed.
Lemma lem8188394 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (term625 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g a) = (term618 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g a).
Proof. exact (eq_refl (term625 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g a)). Qed.
Lemma lem8188395 {_144530 P : Type'} (z : P -> _144530) (a : P) : (z a) = (z a).
Proof. exact (eq_refl (z a)). Qed.
Lemma lem8188396 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (z : P -> _144530) (a : P) : (term633 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g z a) = (term634 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g z a).
Proof. exact (MK_COMB (@lem8188394 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g a) (@lem8188395 _144530 P z a)). Qed.
Lemma lem8188397 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : P -> _144530) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (term634 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g z a) = (term635 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z f y g a).
Proof. exact (eq_refl (term634 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g z a)). Qed.
Lemma lem8188398 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : P -> _144530) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (term633 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g z a) = (term635 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z f y g a).
Proof. exact (TRANS (@lem8188396 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g z a) (@lem8188397 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z f y g a)). Qed.
Lemma lem8188399 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : P -> _144530) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) : (term636 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g z) = (term637 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z f y g).
Proof. exact (fun_ext (fun a : P => @lem8188398 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z f y g a)). Qed.
Lemma lem8188400 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8188401 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : P -> _144530) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) : (term638 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g z) = (term639 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z f y g).
Proof. exact (MK_COMB (@lem8188400 P) (@lem8188399 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z f y g)). Qed.
Lemma lem8188402 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) : (term640 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g) = (term641 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g).
Proof. exact (fun_ext (fun z : P -> _144530 => @lem8188401 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z f y g)). Qed.
Lemma lem8188403 {_144530 P : Type'} : (@ex (P -> _144530)) = (@ex (P -> _144530)).
Proof. exact (eq_refl (@ex (P -> _144530))). Qed.
Lemma lem8188404 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) : (term623 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g) = (term642 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g).
Proof. exact (MK_COMB (@lem8188403 _144530 P) (@lem8188402 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g)). Qed.
Lemma lem8188405 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) : ((term622 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g) = (term623 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g)) = ((term621 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g) = (term642 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g)).
Proof. exact (MK_COMB (@lem8188393 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g) (@lem8188404 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g)). Qed.
Lemma lem8188406 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) : (term621 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g) = (term642 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g).
Proof. exact (EQ_MP (@lem8188405 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g) (@lem8188380 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g)). Qed.
Lemma lem8188407 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) : (term576 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g) = (term642 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g).
Proof. exact (TRANS (@lem8188376 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g) (@lem8188406 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g)). Qed.
Lemma lem8188408 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) : (term577 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y) = (term643 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y).
Proof. exact (fun_ext (fun g : _144530 -> _144607 => @lem8188407 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g)). Qed.
Lemma lem8188409 {_144530 _144607 : Type'} : (@all (_144530 -> _144607)) = (@all (_144530 -> _144607)).
Proof. exact (eq_refl (@all (_144530 -> _144607))). Qed.
Lemma lem8188410 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) : (term578 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y) = (term644 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y).
Proof. exact (MK_COMB (@lem8188409 _144530 _144607) (@lem8188408 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y)). Qed.
Lemma lem8188412 {A B : Type'} (P : type1413 A B) : (term482 A B P) = (term483 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem8188413 {_144530 _144607 P : Type'} (P' : type537 _144530 _144607 P) : (term509 _144530 _144607 P P') = (term510 _144530 _144607 P P').
Proof. exact (@lem8188412 (_144530 -> _144607) (P -> _144530) P'). Qed.
Lemma lem8188414 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) : (term645 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y) = (term646 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y).
Proof. exact (@lem8188413 _144530 _144607 P (term647 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y)). Qed.
Lemma lem8188415 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) : (term648 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g) = (term641 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g).
Proof. exact (eq_refl (term648 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g)). Qed.
Lemma lem8188416 {_144530 P : Type'} (z : P -> _144530) : z = z.
Proof. exact (eq_refl z). Qed.
Lemma lem8188417 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (z : P -> _144530) : (term649 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g z) = (term650 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g z).
Proof. exact (MK_COMB (@lem8188415 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g) (@lem8188416 _144530 P z)). Qed.
Lemma lem8188418 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : P -> _144530) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) : (term650 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g z) = (term639 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z f y g).
Proof. exact (eq_refl (term650 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g z)). Qed.
Lemma lem8188419 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : P -> _144530) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) : (term649 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g z) = (term639 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z f y g).
Proof. exact (TRANS (@lem8188417 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g z) (@lem8188418 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z f y g)). Qed.
Lemma lem8188420 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) : (term651 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g) = (term641 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g).
Proof. exact (fun_ext (fun z : P -> _144530 => @lem8188419 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z f y g)). Qed.
Lemma lem8188421 {_144530 P : Type'} : (@ex (P -> _144530)) = (@ex (P -> _144530)).
Proof. exact (eq_refl (@ex (P -> _144530))). Qed.
Lemma lem8188422 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) : (term652 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g) = (term642 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g).
Proof. exact (MK_COMB (@lem8188421 _144530 P) (@lem8188420 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g)). Qed.
Lemma lem8188423 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) : (term653 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y) = (term643 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y).
Proof. exact (fun_ext (fun g : _144530 -> _144607 => @lem8188422 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g)). Qed.
Lemma lem8188424 {_144530 _144607 : Type'} : (@all (_144530 -> _144607)) = (@all (_144530 -> _144607)).
Proof. exact (eq_refl (@all (_144530 -> _144607))). Qed.
Lemma lem8188425 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) : (term645 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y) = (term644 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y).
Proof. exact (MK_COMB (@lem8188424 _144530 _144607) (@lem8188423 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y)). Qed.
Lemma lem8188426 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8188427 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) : (term654 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y) = (term655 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y).
Proof. exact (MK_COMB (@lem8188426) (@lem8188425 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y)). Qed.
Lemma lem8188428 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) : (term648 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g) = (term641 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g).
Proof. exact (eq_refl (term648 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g)). Qed.
Lemma lem8188429 {_144530 _144607 P : Type'} (z : type557 _144530 _144607 P) (g : _144530 -> _144607) : (z g) = (z g).
Proof. exact (eq_refl (z g)). Qed.
Lemma lem8188430 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (z : type557 _144530 _144607 P) (g : _144530 -> _144607) : (term656 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y z g) = (term657 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y z g).
Proof. exact (MK_COMB (@lem8188428 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g) (@lem8188429 _144530 _144607 P z g)). Qed.
Lemma lem8188431 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : type557 _144530 _144607 P) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) : (term657 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y z g) = (term658 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z f y g).
Proof. exact (eq_refl (term657 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y z g)). Qed.
Lemma lem8188432 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : type557 _144530 _144607 P) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) : (term656 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y z g) = (term658 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z f y g).
Proof. exact (TRANS (@lem8188430 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y z g) (@lem8188431 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z f y g)). Qed.
Lemma lem8188433 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : type557 _144530 _144607 P) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) : (term659 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y z) = (term660 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z f y).
Proof. exact (fun_ext (fun g : _144530 -> _144607 => @lem8188432 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z f y g)). Qed.
Lemma lem8188434 {_144530 _144607 : Type'} : (@all (_144530 -> _144607)) = (@all (_144530 -> _144607)).
Proof. exact (eq_refl (@all (_144530 -> _144607))). Qed.
Lemma lem8188435 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : type557 _144530 _144607 P) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) : (term661 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y z) = (term662 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z f y).
Proof. exact (MK_COMB (@lem8188434 _144530 _144607) (@lem8188433 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z f y)). Qed.
Lemma lem8188436 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) : (term663 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y) = (term664 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y).
Proof. exact (fun_ext (fun z : type557 _144530 _144607 P => @lem8188435 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z f y)). Qed.
Lemma lem8188437 {_144530 _144607 P : Type'} : (@ex ((_144530 -> _144607) -> P -> _144530)) = (@ex ((_144530 -> _144607) -> P -> _144530)).
Proof. exact (eq_refl (@ex ((_144530 -> _144607) -> P -> _144530))). Qed.
Lemma lem8188438 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) : (term646 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y) = (term665 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y).
Proof. exact (MK_COMB (@lem8188437 _144530 _144607 P) (@lem8188436 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y)). Qed.
Lemma lem8188439 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) : ((term645 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y) = (term646 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y)) = ((term644 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y) = (term665 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y)).
Proof. exact (MK_COMB (@lem8188427 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y) (@lem8188438 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y)). Qed.
Lemma lem8188440 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) : (term644 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y) = (term665 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y).
Proof. exact (EQ_MP (@lem8188439 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y) (@lem8188414 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y)). Qed.
Lemma lem8188441 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) : (term578 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y) = (term665 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y).
Proof. exact (TRANS (@lem8188410 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y) (@lem8188440 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y)). Qed.
Lemma lem8188442 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (y : type564 _144530 _144607 _144654 P) : (term579 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y) = (term666 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y).
Proof. exact (fun_ext (fun f : _144530 -> _144607 => @lem8188441 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y)). Qed.
Lemma lem8188443 {_144530 _144607 : Type'} : (@all (_144530 -> _144607)) = (@all (_144530 -> _144607)).
Proof. exact (eq_refl (@all (_144530 -> _144607))). Qed.
Lemma lem8188444 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (y : type564 _144530 _144607 _144654 P) : (term580 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y) = (term667 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y).
Proof. exact (MK_COMB (@lem8188443 _144530 _144607) (@lem8188442 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y)). Qed.
Lemma lem8188446 {A B : Type'} (P : type1413 A B) : (term482 A B P) = (term483 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem8188447 {_144530 _144607 P : Type'} (P' : type495 _144530 _144607 P) : (term534 _144530 _144607 P P') = (term535 _144530 _144607 P P').
Proof. exact (@lem8188446 (_144530 -> _144607) (type557 _144530 _144607 P) P'). Qed.
Lemma lem8188448 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (y : type564 _144530 _144607 _144654 P) : (term668 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y) = (term669 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y).
Proof. exact (@lem8188447 _144530 _144607 P (term670 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y)). Qed.
Lemma lem8188449 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) : (term671 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y f) = (term664 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y).
Proof. exact (eq_refl (term671 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y f)). Qed.
Lemma lem8188450 {_144530 _144607 P : Type'} (z : type557 _144530 _144607 P) : z = z.
Proof. exact (eq_refl z). Qed.
Lemma lem8188451 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (z : type557 _144530 _144607 P) : (term672 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y f z) = (term673 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y z).
Proof. exact (MK_COMB (@lem8188449 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y) (@lem8188450 _144530 _144607 P z)). Qed.
Lemma lem8188452 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : type557 _144530 _144607 P) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) : (term673 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y z) = (term662 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z f y).
Proof. exact (eq_refl (term673 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y z)). Qed.
Lemma lem8188453 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : type557 _144530 _144607 P) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) : (term672 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y f z) = (term662 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z f y).
Proof. exact (TRANS (@lem8188451 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y z) (@lem8188452 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z f y)). Qed.
Lemma lem8188454 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) : (term674 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y f) = (term664 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y).
Proof. exact (fun_ext (fun z : type557 _144530 _144607 P => @lem8188453 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z f y)). Qed.
Lemma lem8188455 {_144530 _144607 P : Type'} : (@ex ((_144530 -> _144607) -> P -> _144530)) = (@ex ((_144530 -> _144607) -> P -> _144530)).
Proof. exact (eq_refl (@ex ((_144530 -> _144607) -> P -> _144530))). Qed.
Lemma lem8188456 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) : (term675 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y f) = (term665 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y).
Proof. exact (MK_COMB (@lem8188455 _144530 _144607 P) (@lem8188454 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y)). Qed.
Lemma lem8188457 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (y : type564 _144530 _144607 _144654 P) : (term676 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y) = (term666 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y).
Proof. exact (fun_ext (fun f : _144530 -> _144607 => @lem8188456 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y)). Qed.
Lemma lem8188458 {_144530 _144607 : Type'} : (@all (_144530 -> _144607)) = (@all (_144530 -> _144607)).
Proof. exact (eq_refl (@all (_144530 -> _144607))). Qed.
Lemma lem8188459 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (y : type564 _144530 _144607 _144654 P) : (term668 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y) = (term667 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y).
Proof. exact (MK_COMB (@lem8188458 _144530 _144607) (@lem8188457 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y)). Qed.
Lemma lem8188460 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8188461 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (y : type564 _144530 _144607 _144654 P) : (term677 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y) = (term678 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y).
Proof. exact (MK_COMB (@lem8188460) (@lem8188459 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y)). Qed.
Lemma lem8188462 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) : (term671 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y f) = (term664 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y).
Proof. exact (eq_refl (term671 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y f)). Qed.
Lemma lem8188463 {_144530 _144607 P : Type'} (z : type518 _144530 _144607 P) (f : _144530 -> _144607) : (z f) = (z f).
Proof. exact (eq_refl (z f)). Qed.
Lemma lem8188464 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (y : type564 _144530 _144607 _144654 P) (z : type518 _144530 _144607 P) (f : _144530 -> _144607) : (term679 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y z f) = (term680 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y z f).
Proof. exact (MK_COMB (@lem8188462 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y) (@lem8188463 _144530 _144607 P z f)). Qed.
Lemma lem8188465 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : type518 _144530 _144607 P) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) : (term680 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y z f) = (term681 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z f y).
Proof. exact (eq_refl (term680 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y z f)). Qed.
Lemma lem8188466 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : type518 _144530 _144607 P) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) : (term679 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y z f) = (term681 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z f y).
Proof. exact (TRANS (@lem8188464 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y z f) (@lem8188465 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z f y)). Qed.
Lemma lem8188467 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : type518 _144530 _144607 P) (y : type564 _144530 _144607 _144654 P) : (term682 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y z) = (term683 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z y).
Proof. exact (fun_ext (fun f : _144530 -> _144607 => @lem8188466 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z f y)). Qed.
Lemma lem8188468 {_144530 _144607 : Type'} : (@all (_144530 -> _144607)) = (@all (_144530 -> _144607)).
Proof. exact (eq_refl (@all (_144530 -> _144607))). Qed.
Lemma lem8188469 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : type518 _144530 _144607 P) (y : type564 _144530 _144607 _144654 P) : (term684 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y z) = (term685 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z y).
Proof. exact (MK_COMB (@lem8188468 _144530 _144607) (@lem8188467 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z y)). Qed.
Lemma lem8188470 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (y : type564 _144530 _144607 _144654 P) : (term686 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y) = (term687 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y).
Proof. exact (fun_ext (fun z : type518 _144530 _144607 P => @lem8188469 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z y)). Qed.
Lemma lem8188471 {_144530 _144607 P : Type'} : (@ex ((_144530 -> _144607) -> (_144530 -> _144607) -> P -> _144530)) = (@ex ((_144530 -> _144607) -> (_144530 -> _144607) -> P -> _144530)).
Proof. exact (eq_refl (@ex ((_144530 -> _144607) -> (_144530 -> _144607) -> P -> _144530))). Qed.
Lemma lem8188472 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (y : type564 _144530 _144607 _144654 P) : (term669 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y) = (term688 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y).
Proof. exact (MK_COMB (@lem8188471 _144530 _144607 P) (@lem8188470 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y)). Qed.
Lemma lem8188473 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (y : type564 _144530 _144607 _144654 P) : ((term668 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y) = (term669 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y)) = ((term667 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y) = (term688 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y)).
Proof. exact (MK_COMB (@lem8188461 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y) (@lem8188472 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y)). Qed.
Lemma lem8188474 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (y : type564 _144530 _144607 _144654 P) : (term667 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y) = (term688 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y).
Proof. exact (EQ_MP (@lem8188473 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y) (@lem8188448 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y)). Qed.
Lemma lem8188476 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (y : type564 _144530 _144607 _144654 P) : (term580 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y) = (term688 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y).
Proof. exact (TRANS (@lem8188444 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y) (@lem8188474 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y)). Qed.
Lemma lem8188477 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (y : type564 _144530 _144607 _144654 P) : (term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y) = (term688 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y).
Proof. exact (TRANS (@lem8188196 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y) (@lem8188476 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y)). Qed.
Lemma lem8188478 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (y : type564 _144530 _144607 _144654 P) (h1 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y) : term688 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y.
Proof. exact (EQ_MP (@lem8188477 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y) (@lem8186766 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y h1)). Qed.
Lemma lem8188484 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) (h1 : p f a) : p f a.
Proof. exact (h1). Qed.
Lemma lem8188490 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : p g a) : p g a.
Proof. exact (h1). Qed.
Lemma lem8188497 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (z : _144530) : (term396 _144529 _144530 _144607 P lt2 s a f g z) = (term818 _144529 _144530 _144607 P lt2 s a f g z).
Proof. exact (@lem17265 (term406 _144529 _144530 P lt2 z s a) ((f z) = (g z))). Qed.
Lemma lem8188498 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term397 _144529 _144530 _144607 P lt2 s a f g) = (term819 _144529 _144530 _144607 P lt2 s a f g).
Proof. exact (fun_ext (fun z : _144530 => @lem8188497 _144529 _144530 _144607 P lt2 s a f g z)). Qed.
Lemma lem8188499 {_144530 : Type'} : (@all _144530) = (@all _144530).
Proof. exact (eq_refl (@all _144530)). Qed.
Lemma lem8188552 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term165 _144529 _144530 _144607 P lt2 s a f g) = (term820 _144529 _144530 _144607 P lt2 s a f g).
Proof. exact (MK_COMB (@lem8188499 _144530) (@lem8188498 _144529 _144530 _144607 P lt2 s a f g)). Qed.
Lemma lem8188553 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) : term820 _144529 _144530 _144607 P lt2 s a f g.
Proof. exact (EQ_MP (@lem8188552 _144529 _144530 _144607 P lt2 s a f g) (@lem8186769 _144529 _144530 _144607 P lt2 s a f g h1)). Qed.
Lemma lem8188564 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term326 _144530 _144607 _144645 P pat f e g a) = (term821 _144530 _144607 _144645 P pat f e g a).
Proof. exact (@lem17045 ((pat f a) = (pat g a)) ((e f a) = (e g a))). Qed.
Lemma lem8188565 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) (h1 : term326 _144530 _144607 _144645 P pat f e g a) : term821 _144530 _144607 _144645 P pat f e g a.
Proof. exact (EQ_MP (@lem8188564 _144530 _144607 _144645 P pat f e g a) (@lem8186774 _144530 _144607 _144645 P pat f e g a h1)). Qed.
Lemma lem8188569 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z''' : type518 _144530 _144607 P) (e : type564 _144530 _144607 _144645 P) (h1 : term553 _144529 _144530 _144607 _144645 P p lt2 s z''' e) : term553 _144529 _144530 _144607 _144645 P p lt2 s z''' e.
Proof. exact (h1). Qed.
Lemma lem8188570 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z'''' : type518 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (h1 : term553 _144529 _144530 _144607 _144645 P p lt2 s z'''' pat) : term553 _144529 _144530 _144607 _144645 P p lt2 s z'''' pat.
Proof. exact (h1). Qed.
Lemma lem8188577 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8188578 {_144530 _144607 P : Type'} (f : type560 _144530 _144607 P) (x : _144530 -> _144607) : (f x) = (@I ((_144530 -> _144607) -> P -> Prop) f x).
Proof. exact (@lem8188577 (_144530 -> _144607) (P -> Prop) f x). Qed.
Lemma lem8188579 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (f : _144530 -> _144607) : (p f) = (@I ((_144530 -> _144607) -> P -> Prop) p f).
Proof. exact (@lem8188578 _144530 _144607 P p f). Qed.
Lemma lem8188580 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8188581 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) : (p f a) = (@I ((_144530 -> _144607) -> P -> Prop) p f a).
Proof. exact (MK_COMB (@lem8188579 _144530 _144607 P p f) (@lem8188580 P a)). Qed.
Lemma lem8188583 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8188584 {P : Type'} (f : P -> Prop) (x : P) : (f x) = (@I (P -> Prop) f x).
Proof. exact (@lem8188583 P Prop f x). Qed.
Lemma lem8188585 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) : (@I ((_144530 -> _144607) -> P -> Prop) p f a) = (term822 _144530 _144607 P p f a).
Proof. exact (@lem8188584 P (@I ((_144530 -> _144607) -> P -> Prop) p f) a). Qed.
Lemma lem8188587 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) : (p f a) = (term822 _144530 _144607 P p f a).
Proof. exact (TRANS (@lem8188581 _144530 _144607 P p f a) (@lem8188585 _144530 _144607 P p f a)). Qed.
Lemma lem8188595 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8188596 {_144530 _144607 P : Type'} (f : type560 _144530 _144607 P) (x : _144530 -> _144607) : (f x) = (@I ((_144530 -> _144607) -> P -> Prop) f x).
Proof. exact (@lem8188595 (_144530 -> _144607) (P -> Prop) f x). Qed.
Lemma lem8188597 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (g : _144530 -> _144607) : (p g) = (@I ((_144530 -> _144607) -> P -> Prop) p g).
Proof. exact (@lem8188596 _144530 _144607 P p g). Qed.
Lemma lem8188598 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8188599 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (p g a) = (@I ((_144530 -> _144607) -> P -> Prop) p g a).
Proof. exact (MK_COMB (@lem8188597 _144530 _144607 P p g) (@lem8188598 P a)). Qed.
Lemma lem8188601 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8188602 {P : Type'} (f : P -> Prop) (x : P) : (f x) = (@I (P -> Prop) f x).
Proof. exact (@lem8188601 P Prop f x). Qed.
Lemma lem8188603 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (@I ((_144530 -> _144607) -> P -> Prop) p g a) = (term822 _144530 _144607 P p g a).
Proof. exact (@lem8188602 P (@I ((_144530 -> _144607) -> P -> Prop) p g) a). Qed.
Lemma lem8188605 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (p g a) = (term822 _144530 _144607 P p g a).
Proof. exact (TRANS (@lem8188599 _144530 _144607 P p g a) (@lem8188603 _144530 _144607 P p g a)). Qed.
Lemma lem8188607 {_144607 : Type'} : (@eq _144607) = (@eq _144607).
Proof. exact (eq_refl (@eq _144607)). Qed.
Lemma lem8188612 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8188613 {_144530 _144607 : Type'} (f : _144530 -> _144607) (x : _144530) : (f x) = (@I (_144530 -> _144607) f x).
Proof. exact (@lem8188612 _144530 _144607 f x). Qed.
Lemma lem8188615 {_144530 _144607 : Type'} (f : _144530 -> _144607) (z : _144530) : (f z) = (@I (_144530 -> _144607) f z).
Proof. exact (@lem8188613 _144530 _144607 f z). Qed.
Lemma lem8188620 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8188621 {_144530 _144607 : Type'} (f : _144530 -> _144607) (x : _144530) : (f x) = (@I (_144530 -> _144607) f x).
Proof. exact (@lem8188620 _144530 _144607 f x). Qed.
Lemma lem8188623 {_144530 _144607 : Type'} (g : _144530 -> _144607) (z : _144530) : (g z) = (@I (_144530 -> _144607) g z).
Proof. exact (@lem8188621 _144530 _144607 g z). Qed.
Lemma lem8188624 {_144530 _144607 : Type'} (f : _144530 -> _144607) (z : _144530) : (term823 _144530 _144607 f z) = (term824 _144530 _144607 f z).
Proof. exact (MK_COMB (@lem8188607 _144607) (@lem8188615 _144530 _144607 f z)). Qed.
Lemma lem8188625 {_144530 _144607 : Type'} (f : _144530 -> _144607) (g : _144530 -> _144607) (z : _144530) : ((f z) = (g z)) = ((@I (_144530 -> _144607) f z) = (@I (_144530 -> _144607) g z)).
Proof. exact (MK_COMB (@lem8188624 _144530 _144607 f z) (@lem8188623 _144530 _144607 g z)). Qed.
Lemma lem8188626 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8188633 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8188634 {_144529 P : Type'} (f : P -> _144529) (x : P) : (f x) = (@I (P -> _144529) f x).
Proof. exact (@lem8188633 P _144529 f x). Qed.
Lemma lem8188636 {_144529 P : Type'} (s : P -> _144529) (a : P) : (s a) = (@I (P -> _144529) s a).
Proof. exact (@lem8188634 _144529 P s a). Qed.
Lemma lem8188637 {_144529 _144530 : Type'} (lt2 : type1470 _144529 _144530) (z : _144530) : (lt2 z) = (lt2 z).
Proof. exact (eq_refl (lt2 z)). Qed.
Lemma lem8188638 {_144529 _144530 P : Type'} (lt2 : type1470 _144529 _144530) (z : _144530) (s : P -> _144529) (a : P) : (term406 _144529 _144530 P lt2 z s a) = (term825 _144529 _144530 P lt2 z s a).
Proof. exact (MK_COMB (@lem8188637 _144529 _144530 lt2 z) (@lem8188636 _144529 P s a)). Qed.
Lemma lem8188640 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8188641 {_144529 _144530 : Type'} (f : type1470 _144529 _144530) (x : _144530) : (f x) = (@I (_144530 -> _144529 -> Prop) f x).
Proof. exact (@lem8188640 _144530 (_144529 -> Prop) f x). Qed.
Lemma lem8188642 {_144529 _144530 : Type'} (lt2 : type1470 _144529 _144530) (z : _144530) : (lt2 z) = (@I (_144530 -> _144529 -> Prop) lt2 z).
Proof. exact (@lem8188641 _144529 _144530 lt2 z). Qed.
Lemma lem8188643 {_144529 P : Type'} (s : P -> _144529) (a : P) : (@I (P -> _144529) s a) = (@I (P -> _144529) s a).
Proof. exact (eq_refl (@I (P -> _144529) s a)). Qed.
Lemma lem8188644 {_144529 _144530 P : Type'} (lt2 : type1470 _144529 _144530) (z : _144530) (s : P -> _144529) (a : P) : (term825 _144529 _144530 P lt2 z s a) = (term826 _144529 _144530 P lt2 z s a).
Proof. exact (MK_COMB (@lem8188642 _144529 _144530 lt2 z) (@lem8188643 _144529 P s a)). Qed.
Lemma lem8188646 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8188647 {_144529 : Type'} (f : _144529 -> Prop) (x : _144529) : (f x) = (@I (_144529 -> Prop) f x).
Proof. exact (@lem8188646 _144529 Prop f x). Qed.
Lemma lem8188648 {_144529 _144530 P : Type'} (lt2 : type1470 _144529 _144530) (z : _144530) (s : P -> _144529) (a : P) : (term826 _144529 _144530 P lt2 z s a) = (term827 _144529 _144530 P lt2 z s a).
Proof. exact (@lem8188647 _144529 (@I (_144530 -> _144529 -> Prop) lt2 z) (@I (P -> _144529) s a)). Qed.
Lemma lem8188649 {_144529 _144530 P : Type'} (lt2 : type1470 _144529 _144530) (z : _144530) (s : P -> _144529) (a : P) : (term825 _144529 _144530 P lt2 z s a) = (term827 _144529 _144530 P lt2 z s a).
Proof. exact (TRANS (@lem8188644 _144529 _144530 P lt2 z s a) (@lem8188648 _144529 _144530 P lt2 z s a)). Qed.
Lemma lem8188650 {_144529 _144530 P : Type'} (lt2 : type1470 _144529 _144530) (z : _144530) (s : P -> _144529) (a : P) : (term406 _144529 _144530 P lt2 z s a) = (term827 _144529 _144530 P lt2 z s a).
Proof. exact (TRANS (@lem8188638 _144529 _144530 P lt2 z s a) (@lem8188649 _144529 _144530 P lt2 z s a)). Qed.
Lemma lem8188651 {_144529 _144530 P : Type'} (lt2 : type1470 _144529 _144530) (z : _144530) (s : P -> _144529) (a : P) : (term828 _144529 _144530 P lt2 z s a) = (term829 _144529 _144530 P lt2 z s a).
Proof. exact (MK_COMB (@lem8188626) (@lem8188650 _144529 _144530 P lt2 z s a)). Qed.
Lemma lem8188652 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8188653 {_144529 _144530 P : Type'} (lt2 : type1470 _144529 _144530) (z : _144530) (s : P -> _144529) (a : P) : (term830 _144529 _144530 P lt2 z s a) = (term831 _144529 _144530 P lt2 z s a).
Proof. exact (MK_COMB (@lem8188652) (@lem8188651 _144529 _144530 P lt2 z s a)). Qed.
Lemma lem8188654 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (z : _144530) : (term818 _144529 _144530 _144607 P lt2 s a f g z) = (term832 _144529 _144530 _144607 P lt2 s a f g z).
Proof. exact (MK_COMB (@lem8188653 _144529 _144530 P lt2 z s a) (@lem8188625 _144530 _144607 f g z)). Qed.
Lemma lem8188655 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term819 _144529 _144530 _144607 P lt2 s a f g) = (term833 _144529 _144530 _144607 P lt2 s a f g).
Proof. exact (fun_ext (fun z : _144530 => @lem8188654 _144529 _144530 _144607 P lt2 s a f g z)). Qed.
Lemma lem8188656 {_144530 : Type'} : (@all _144530) = (@all _144530).
Proof. exact (eq_refl (@all _144530)). Qed.
Lemma lem8188657 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term820 _144529 _144530 _144607 P lt2 s a f g) = (term834 _144529 _144530 _144607 P lt2 s a f g).
Proof. exact (MK_COMB (@lem8188656 _144530) (@lem8188655 _144529 _144530 _144607 P lt2 s a f g)). Qed.
Lemma lem8188658 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) : term834 _144529 _144530 _144607 P lt2 s a f g.
Proof. exact (EQ_MP (@lem8188657 _144529 _144530 _144607 P lt2 s a f g) (@lem8188553 _144529 _144530 _144607 P lt2 s a f g h1)). Qed.
Lemma lem8188659 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8188660 {_144645 : Type'} : (@eq _144645) = (@eq _144645).
Proof. exact (eq_refl (@eq _144645)). Qed.
Lemma lem8188667 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8188668 {_144530 _144607 _144645 P : Type'} (f : type564 _144530 _144607 _144645 P) (x : _144530 -> _144607) : (f x) = (@I ((_144530 -> _144607) -> P -> _144645) f x).
Proof. exact (@lem8188667 (_144530 -> _144607) (P -> _144645) f x). Qed.
Lemma lem8188669 {_144530 _144607 _144645 P : Type'} (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) : (e f) = (@I ((_144530 -> _144607) -> P -> _144645) e f).
Proof. exact (@lem8188668 _144530 _144607 _144645 P e f). Qed.
Lemma lem8188670 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8188671 {_144530 _144607 _144645 P : Type'} (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (a : P) : (e f a) = (@I ((_144530 -> _144607) -> P -> _144645) e f a).
Proof. exact (MK_COMB (@lem8188669 _144530 _144607 _144645 P e f) (@lem8188670 P a)). Qed.
Lemma lem8188673 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8188674 {_144645 P : Type'} (f : P -> _144645) (x : P) : (f x) = (@I (P -> _144645) f x).
Proof. exact (@lem8188673 P _144645 f x). Qed.
Lemma lem8188675 {_144530 _144607 _144645 P : Type'} (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (a : P) : (@I ((_144530 -> _144607) -> P -> _144645) e f a) = (term835 _144530 _144607 _144645 P e f a).
Proof. exact (@lem8188674 _144645 P (@I ((_144530 -> _144607) -> P -> _144645) e f) a). Qed.
Lemma lem8188677 {_144530 _144607 _144645 P : Type'} (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (a : P) : (e f a) = (term835 _144530 _144607 _144645 P e f a).
Proof. exact (TRANS (@lem8188671 _144530 _144607 _144645 P e f a) (@lem8188675 _144530 _144607 _144645 P e f a)). Qed.
Lemma lem8188684 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8188685 {_144530 _144607 _144645 P : Type'} (f : type564 _144530 _144607 _144645 P) (x : _144530 -> _144607) : (f x) = (@I ((_144530 -> _144607) -> P -> _144645) f x).
Proof. exact (@lem8188684 (_144530 -> _144607) (P -> _144645) f x). Qed.
Lemma lem8188686 {_144530 _144607 _144645 P : Type'} (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) : (e g) = (@I ((_144530 -> _144607) -> P -> _144645) e g).
Proof. exact (@lem8188685 _144530 _144607 _144645 P e g). Qed.
Lemma lem8188687 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8188688 {_144530 _144607 _144645 P : Type'} (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (e g a) = (@I ((_144530 -> _144607) -> P -> _144645) e g a).
Proof. exact (MK_COMB (@lem8188686 _144530 _144607 _144645 P e g) (@lem8188687 P a)). Qed.
Lemma lem8188690 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8188691 {_144645 P : Type'} (f : P -> _144645) (x : P) : (f x) = (@I (P -> _144645) f x).
Proof. exact (@lem8188690 P _144645 f x). Qed.
Lemma lem8188692 {_144530 _144607 _144645 P : Type'} (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (@I ((_144530 -> _144607) -> P -> _144645) e g a) = (term835 _144530 _144607 _144645 P e g a).
Proof. exact (@lem8188691 _144645 P (@I ((_144530 -> _144607) -> P -> _144645) e g) a). Qed.
Lemma lem8188694 {_144530 _144607 _144645 P : Type'} (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (e g a) = (term835 _144530 _144607 _144645 P e g a).
Proof. exact (TRANS (@lem8188688 _144530 _144607 _144645 P e g a) (@lem8188692 _144530 _144607 _144645 P e g a)). Qed.
Lemma lem8188695 {_144530 _144607 _144645 P : Type'} (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (a : P) : (term836 _144530 _144607 _144645 P e f a) = (term837 _144530 _144607 _144645 P e f a).
Proof. exact (MK_COMB (@lem8188660 _144645) (@lem8188677 _144530 _144607 _144645 P e f a)). Qed.
Lemma lem8188696 {_144530 _144607 _144645 P : Type'} (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : ((e f a) = (e g a)) = ((term835 _144530 _144607 _144645 P e f a) = (term835 _144530 _144607 _144645 P e g a)).
Proof. exact (MK_COMB (@lem8188695 _144530 _144607 _144645 P e f a) (@lem8188694 _144530 _144607 _144645 P e g a)). Qed.
Lemma lem8188697 {_144530 _144607 _144645 P : Type'} (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term838 _144530 _144607 _144645 P f e g a) = (term839 _144530 _144607 _144645 P f e g a).
Proof. exact (MK_COMB (@lem8188659) (@lem8188696 _144530 _144607 _144645 P f e g a)). Qed.
Lemma lem8188698 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8188699 {_144645 : Type'} : (@eq _144645) = (@eq _144645).
Proof. exact (eq_refl (@eq _144645)). Qed.
Lemma lem8188706 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8188707 {_144530 _144607 _144645 P : Type'} (f : type564 _144530 _144607 _144645 P) (x : _144530 -> _144607) : (f x) = (@I ((_144530 -> _144607) -> P -> _144645) f x).
Proof. exact (@lem8188706 (_144530 -> _144607) (P -> _144645) f x). Qed.
Lemma lem8188708 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) : (pat f) = (@I ((_144530 -> _144607) -> P -> _144645) pat f).
Proof. exact (@lem8188707 _144530 _144607 _144645 P pat f). Qed.
Lemma lem8188709 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8188710 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (a : P) : (pat f a) = (@I ((_144530 -> _144607) -> P -> _144645) pat f a).
Proof. exact (MK_COMB (@lem8188708 _144530 _144607 _144645 P pat f) (@lem8188709 P a)). Qed.
Lemma lem8188712 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8188713 {_144645 P : Type'} (f : P -> _144645) (x : P) : (f x) = (@I (P -> _144645) f x).
Proof. exact (@lem8188712 P _144645 f x). Qed.
Lemma lem8188714 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (a : P) : (@I ((_144530 -> _144607) -> P -> _144645) pat f a) = (term835 _144530 _144607 _144645 P pat f a).
Proof. exact (@lem8188713 _144645 P (@I ((_144530 -> _144607) -> P -> _144645) pat f) a). Qed.
Lemma lem8188716 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (a : P) : (pat f a) = (term835 _144530 _144607 _144645 P pat f a).
Proof. exact (TRANS (@lem8188710 _144530 _144607 _144645 P pat f a) (@lem8188714 _144530 _144607 _144645 P pat f a)). Qed.
Lemma lem8188723 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8188724 {_144530 _144607 _144645 P : Type'} (f : type564 _144530 _144607 _144645 P) (x : _144530 -> _144607) : (f x) = (@I ((_144530 -> _144607) -> P -> _144645) f x).
Proof. exact (@lem8188723 (_144530 -> _144607) (P -> _144645) f x). Qed.
Lemma lem8188725 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) : (pat g) = (@I ((_144530 -> _144607) -> P -> _144645) pat g).
Proof. exact (@lem8188724 _144530 _144607 _144645 P pat g). Qed.
Lemma lem8188726 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8188727 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (pat g a) = (@I ((_144530 -> _144607) -> P -> _144645) pat g a).
Proof. exact (MK_COMB (@lem8188725 _144530 _144607 _144645 P pat g) (@lem8188726 P a)). Qed.
Lemma lem8188729 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8188730 {_144645 P : Type'} (f : P -> _144645) (x : P) : (f x) = (@I (P -> _144645) f x).
Proof. exact (@lem8188729 P _144645 f x). Qed.
Lemma lem8188731 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (@I ((_144530 -> _144607) -> P -> _144645) pat g a) = (term835 _144530 _144607 _144645 P pat g a).
Proof. exact (@lem8188730 _144645 P (@I ((_144530 -> _144607) -> P -> _144645) pat g) a). Qed.
Lemma lem8188733 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (pat g a) = (term835 _144530 _144607 _144645 P pat g a).
Proof. exact (TRANS (@lem8188727 _144530 _144607 _144645 P pat g a) (@lem8188731 _144530 _144607 _144645 P pat g a)). Qed.
Lemma lem8188734 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (a : P) : (term836 _144530 _144607 _144645 P pat f a) = (term837 _144530 _144607 _144645 P pat f a).
Proof. exact (MK_COMB (@lem8188699 _144645) (@lem8188716 _144530 _144607 _144645 P pat f a)). Qed.
Lemma lem8188735 {_144530 _144607 _144645 P : Type'} (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : ((pat f a) = (pat g a)) = ((term835 _144530 _144607 _144645 P pat f a) = (term835 _144530 _144607 _144645 P pat g a)).
Proof. exact (MK_COMB (@lem8188734 _144530 _144607 _144645 P pat f a) (@lem8188733 _144530 _144607 _144645 P pat g a)). Qed.
Lemma lem8188736 {_144530 _144607 _144645 P : Type'} (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term838 _144530 _144607 _144645 P f pat g a) = (term839 _144530 _144607 _144645 P f pat g a).
Proof. exact (MK_COMB (@lem8188698) (@lem8188735 _144530 _144607 _144645 P f pat g a)). Qed.
Lemma lem8188737 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8188738 {_144530 _144607 _144645 P : Type'} (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term840 _144530 _144607 _144645 P f pat g a) = (term841 _144530 _144607 _144645 P f pat g a).
Proof. exact (MK_COMB (@lem8188737) (@lem8188736 _144530 _144607 _144645 P f pat g a)). Qed.
Lemma lem8188739 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term821 _144530 _144607 _144645 P pat f e g a) = (term842 _144530 _144607 _144645 P pat f e g a).
Proof. exact (MK_COMB (@lem8188738 _144530 _144607 _144645 P f pat g a) (@lem8188697 _144530 _144607 _144645 P f e g a)). Qed.
Lemma lem8188740 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) (h1 : term326 _144530 _144607 _144645 P pat f e g a) : term842 _144530 _144607 _144645 P pat f e g a.
Proof. exact (EQ_MP (@lem8188739 _144530 _144607 _144645 P pat f e g a) (@lem8188565 _144530 _144607 _144645 P pat f e g a h1)). Qed.
Lemma lem8189776 {_144645 : Type'} : (@eq _144645) = (@eq _144645).
Proof. exact (eq_refl (@eq _144645)). Qed.
Lemma lem8189783 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8189784 {_144530 _144607 _144645 P : Type'} (f : type564 _144530 _144607 _144645 P) (x : _144530 -> _144607) : (f x) = (@I ((_144530 -> _144607) -> P -> _144645) f x).
Proof. exact (@lem8189783 (_144530 -> _144607) (P -> _144645) f x). Qed.
Lemma lem8189785 {_144530 _144607 _144645 P : Type'} (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) : (e f) = (@I ((_144530 -> _144607) -> P -> _144645) e f).
Proof. exact (@lem8189784 _144530 _144607 _144645 P e f). Qed.
Lemma lem8189786 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8189787 {_144530 _144607 _144645 P : Type'} (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (a : P) : (e f a) = (@I ((_144530 -> _144607) -> P -> _144645) e f a).
Proof. exact (MK_COMB (@lem8189785 _144530 _144607 _144645 P e f) (@lem8189786 P a)). Qed.
Lemma lem8189789 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8189790 {_144645 P : Type'} (f : P -> _144645) (x : P) : (f x) = (@I (P -> _144645) f x).
Proof. exact (@lem8189789 P _144645 f x). Qed.
Lemma lem8189791 {_144530 _144607 _144645 P : Type'} (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (a : P) : (@I ((_144530 -> _144607) -> P -> _144645) e f a) = (term835 _144530 _144607 _144645 P e f a).
Proof. exact (@lem8189790 _144645 P (@I ((_144530 -> _144607) -> P -> _144645) e f) a). Qed.
Lemma lem8189793 {_144530 _144607 _144645 P : Type'} (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (a : P) : (e f a) = (term835 _144530 _144607 _144645 P e f a).
Proof. exact (TRANS (@lem8189787 _144530 _144607 _144645 P e f a) (@lem8189791 _144530 _144607 _144645 P e f a)). Qed.
Lemma lem8189800 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8189801 {_144530 _144607 _144645 P : Type'} (f : type564 _144530 _144607 _144645 P) (x : _144530 -> _144607) : (f x) = (@I ((_144530 -> _144607) -> P -> _144645) f x).
Proof. exact (@lem8189800 (_144530 -> _144607) (P -> _144645) f x). Qed.
Lemma lem8189802 {_144530 _144607 _144645 P : Type'} (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) : (e g) = (@I ((_144530 -> _144607) -> P -> _144645) e g).
Proof. exact (@lem8189801 _144530 _144607 _144645 P e g). Qed.
Lemma lem8189803 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8189804 {_144530 _144607 _144645 P : Type'} (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (e g a) = (@I ((_144530 -> _144607) -> P -> _144645) e g a).
Proof. exact (MK_COMB (@lem8189802 _144530 _144607 _144645 P e g) (@lem8189803 P a)). Qed.
Lemma lem8189806 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8189807 {_144645 P : Type'} (f : P -> _144645) (x : P) : (f x) = (@I (P -> _144645) f x).
Proof. exact (@lem8189806 P _144645 f x). Qed.
Lemma lem8189808 {_144530 _144607 _144645 P : Type'} (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (@I ((_144530 -> _144607) -> P -> _144645) e g a) = (term835 _144530 _144607 _144645 P e g a).
Proof. exact (@lem8189807 _144645 P (@I ((_144530 -> _144607) -> P -> _144645) e g) a). Qed.
Lemma lem8189810 {_144530 _144607 _144645 P : Type'} (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (e g a) = (term835 _144530 _144607 _144645 P e g a).
Proof. exact (TRANS (@lem8189804 _144530 _144607 _144645 P e g a) (@lem8189808 _144530 _144607 _144645 P e g a)). Qed.
Lemma lem8189811 {_144530 _144607 _144645 P : Type'} (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (a : P) : (term836 _144530 _144607 _144645 P e f a) = (term837 _144530 _144607 _144645 P e f a).
Proof. exact (MK_COMB (@lem8189776 _144645) (@lem8189793 _144530 _144607 _144645 P e f a)). Qed.
Lemma lem8189812 {_144530 _144607 _144645 P : Type'} (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : ((e f a) = (e g a)) = ((term835 _144530 _144607 _144645 P e f a) = (term835 _144530 _144607 _144645 P e g a)).
Proof. exact (MK_COMB (@lem8189811 _144530 _144607 _144645 P e f a) (@lem8189810 _144530 _144607 _144645 P e g a)). Qed.
Lemma lem8189813 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8189814 {_144607 : Type'} : (@eq _144607) = (@eq _144607).
Proof. exact (eq_refl (@eq _144607)). Qed.
Lemma lem8189815 {_144530 _144607 : Type'} (f : _144530 -> _144607) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem8189824 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8189825 {_144530 _144607 P : Type'} (f : type518 _144530 _144607 P) (x : _144530 -> _144607) : (f x) = (@I ((_144530 -> _144607) -> (_144530 -> _144607) -> P -> _144530) f x).
Proof. exact (@lem8189824 (_144530 -> _144607) (type557 _144530 _144607 P) f x). Qed.
Lemma lem8189826 {_144530 _144607 P : Type'} (z''' : type518 _144530 _144607 P) (f : _144530 -> _144607) : (z''' f) = (@I ((_144530 -> _144607) -> (_144530 -> _144607) -> P -> _144530) z''' f).
Proof. exact (@lem8189825 _144530 _144607 P z''' f). Qed.
Lemma lem8189827 {_144530 _144607 : Type'} (g : _144530 -> _144607) : g = g.
Proof. exact (eq_refl g). Qed.
Lemma lem8189828 {_144530 _144607 P : Type'} (z''' : type518 _144530 _144607 P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (z''' f g) = (@I ((_144530 -> _144607) -> (_144530 -> _144607) -> P -> _144530) z''' f g).
Proof. exact (MK_COMB (@lem8189826 _144530 _144607 P z''' f) (@lem8189827 _144530 _144607 g)). Qed.
Lemma lem8189830 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8189831 {_144530 _144607 P : Type'} (f : type557 _144530 _144607 P) (x : _144530 -> _144607) : (f x) = (@I ((_144530 -> _144607) -> P -> _144530) f x).
Proof. exact (@lem8189830 (_144530 -> _144607) (P -> _144530) f x). Qed.
Lemma lem8189832 {_144530 _144607 P : Type'} (z''' : type518 _144530 _144607 P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (@I ((_144530 -> _144607) -> (_144530 -> _144607) -> P -> _144530) z''' f g) = (term843 _144530 _144607 P z''' f g).
Proof. exact (@lem8189831 _144530 _144607 P (@I ((_144530 -> _144607) -> (_144530 -> _144607) -> P -> _144530) z''' f) g). Qed.
Lemma lem8189833 {_144530 _144607 P : Type'} (z''' : type518 _144530 _144607 P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (z''' f g) = (term843 _144530 _144607 P z''' f g).
Proof. exact (TRANS (@lem8189828 _144530 _144607 P z''' f g) (@lem8189832 _144530 _144607 P z''' f g)). Qed.
Lemma lem8189834 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8189835 {_144530 _144607 P : Type'} (z''' : type518 _144530 _144607 P) (f : _144530 -> _144607) (g : _144530 -> _144607) (a : P) : (z''' f g a) = (term844 _144530 _144607 P z''' f g a).
Proof. exact (MK_COMB (@lem8189833 _144530 _144607 P z''' f g) (@lem8189834 P a)). Qed.
Lemma lem8189837 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8189838 {_144530 P : Type'} (f : P -> _144530) (x : P) : (f x) = (@I (P -> _144530) f x).
Proof. exact (@lem8189837 P _144530 f x). Qed.
Lemma lem8189839 {_144530 _144607 P : Type'} (z''' : type518 _144530 _144607 P) (f : _144530 -> _144607) (g : _144530 -> _144607) (a : P) : (term844 _144530 _144607 P z''' f g a) = (term845 _144530 _144607 P z''' f g a).
Proof. exact (@lem8189838 _144530 P (term843 _144530 _144607 P z''' f g) a). Qed.
Lemma lem8189841 {_144530 _144607 P : Type'} (z''' : type518 _144530 _144607 P) (f : _144530 -> _144607) (g : _144530 -> _144607) (a : P) : (z''' f g a) = (term845 _144530 _144607 P z''' f g a).
Proof. exact (TRANS (@lem8189835 _144530 _144607 P z''' f g a) (@lem8189839 _144530 _144607 P z''' f g a)). Qed.
Lemma lem8189842 {_144530 _144607 P : Type'} (z''' : type518 _144530 _144607 P) (f : _144530 -> _144607) (g : _144530 -> _144607) (a : P) : (term846 _144530 _144607 P z''' f g a) = (term847 _144530 _144607 P z''' f g a).
Proof. exact (MK_COMB (@lem8189815 _144530 _144607 f) (@lem8189841 _144530 _144607 P z''' f g a)). Qed.
Lemma lem8189844 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8189845 {_144530 _144607 : Type'} (f : _144530 -> _144607) (x : _144530) : (f x) = (@I (_144530 -> _144607) f x).
Proof. exact (@lem8189844 _144530 _144607 f x). Qed.
Lemma lem8189846 {_144530 _144607 P : Type'} (z''' : type518 _144530 _144607 P) (f : _144530 -> _144607) (g : _144530 -> _144607) (a : P) : (term847 _144530 _144607 P z''' f g a) = (term848 _144530 _144607 P z''' f g a).
Proof. exact (@lem8189845 _144530 _144607 f (term845 _144530 _144607 P z''' f g a)). Qed.
Lemma lem8189847 {_144530 _144607 P : Type'} (z''' : type518 _144530 _144607 P) (f : _144530 -> _144607) (g : _144530 -> _144607) (a : P) : (term846 _144530 _144607 P z''' f g a) = (term848 _144530 _144607 P z''' f g a).
Proof. exact (TRANS (@lem8189842 _144530 _144607 P z''' f g a) (@lem8189846 _144530 _144607 P z''' f g a)). Qed.
Lemma lem8189848 {_144530 _144607 : Type'} (g : _144530 -> _144607) : g = g.
Proof. exact (eq_refl g). Qed.
Lemma lem8189857 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8189858 {_144530 _144607 P : Type'} (f : type518 _144530 _144607 P) (x : _144530 -> _144607) : (f x) = (@I ((_144530 -> _144607) -> (_144530 -> _144607) -> P -> _144530) f x).
Proof. exact (@lem8189857 (_144530 -> _144607) (type557 _144530 _144607 P) f x). Qed.
Lemma lem8189859 {_144530 _144607 P : Type'} (z''' : type518 _144530 _144607 P) (f : _144530 -> _144607) : (z''' f) = (@I ((_144530 -> _144607) -> (_144530 -> _144607) -> P -> _144530) z''' f).
Proof. exact (@lem8189858 _144530 _144607 P z''' f). Qed.
Lemma lem8189860 {_144530 _144607 : Type'} (g : _144530 -> _144607) : g = g.
Proof. exact (eq_refl g). Qed.
Lemma lem8189861 {_144530 _144607 P : Type'} (z''' : type518 _144530 _144607 P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (z''' f g) = (@I ((_144530 -> _144607) -> (_144530 -> _144607) -> P -> _144530) z''' f g).
Proof. exact (MK_COMB (@lem8189859 _144530 _144607 P z''' f) (@lem8189860 _144530 _144607 g)). Qed.
Lemma lem8189863 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8189864 {_144530 _144607 P : Type'} (f : type557 _144530 _144607 P) (x : _144530 -> _144607) : (f x) = (@I ((_144530 -> _144607) -> P -> _144530) f x).
Proof. exact (@lem8189863 (_144530 -> _144607) (P -> _144530) f x). Qed.
Lemma lem8189865 {_144530 _144607 P : Type'} (z''' : type518 _144530 _144607 P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (@I ((_144530 -> _144607) -> (_144530 -> _144607) -> P -> _144530) z''' f g) = (term843 _144530 _144607 P z''' f g).
Proof. exact (@lem8189864 _144530 _144607 P (@I ((_144530 -> _144607) -> (_144530 -> _144607) -> P -> _144530) z''' f) g). Qed.
Lemma lem8189866 {_144530 _144607 P : Type'} (z''' : type518 _144530 _144607 P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (z''' f g) = (term843 _144530 _144607 P z''' f g).
Proof. exact (TRANS (@lem8189861 _144530 _144607 P z''' f g) (@lem8189865 _144530 _144607 P z''' f g)). Qed.
Lemma lem8189867 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8189868 {_144530 _144607 P : Type'} (z''' : type518 _144530 _144607 P) (f : _144530 -> _144607) (g : _144530 -> _144607) (a : P) : (z''' f g a) = (term844 _144530 _144607 P z''' f g a).
Proof. exact (MK_COMB (@lem8189866 _144530 _144607 P z''' f g) (@lem8189867 P a)). Qed.
Lemma lem8189870 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8189871 {_144530 P : Type'} (f : P -> _144530) (x : P) : (f x) = (@I (P -> _144530) f x).
Proof. exact (@lem8189870 P _144530 f x). Qed.
Lemma lem8189872 {_144530 _144607 P : Type'} (z''' : type518 _144530 _144607 P) (f : _144530 -> _144607) (g : _144530 -> _144607) (a : P) : (term844 _144530 _144607 P z''' f g a) = (term845 _144530 _144607 P z''' f g a).
Proof. exact (@lem8189871 _144530 P (term843 _144530 _144607 P z''' f g) a). Qed.
Lemma lem8189874 {_144530 _144607 P : Type'} (z''' : type518 _144530 _144607 P) (f : _144530 -> _144607) (g : _144530 -> _144607) (a : P) : (z''' f g a) = (term845 _144530 _144607 P z''' f g a).
Proof. exact (TRANS (@lem8189868 _144530 _144607 P z''' f g a) (@lem8189872 _144530 _144607 P z''' f g a)). Qed.
Lemma lem8189875 {_144530 _144607 P : Type'} (z''' : type518 _144530 _144607 P) (f : _144530 -> _144607) (g : _144530 -> _144607) (a : P) : (term849 _144530 _144607 P z''' f g a) = (term850 _144530 _144607 P z''' f g a).
Proof. exact (MK_COMB (@lem8189848 _144530 _144607 g) (@lem8189874 _144530 _144607 P z''' f g a)). Qed.
Lemma lem8189877 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8189878 {_144530 _144607 : Type'} (f : _144530 -> _144607) (x : _144530) : (f x) = (@I (_144530 -> _144607) f x).
Proof. exact (@lem8189877 _144530 _144607 f x). Qed.
Lemma lem8189879 {_144530 _144607 P : Type'} (z''' : type518 _144530 _144607 P) (f : _144530 -> _144607) (g : _144530 -> _144607) (a : P) : (term850 _144530 _144607 P z''' f g a) = (term851 _144530 _144607 P z''' f g a).
Proof. exact (@lem8189878 _144530 _144607 g (term845 _144530 _144607 P z''' f g a)). Qed.
Lemma lem8189880 {_144530 _144607 P : Type'} (z''' : type518 _144530 _144607 P) (f : _144530 -> _144607) (g : _144530 -> _144607) (a : P) : (term849 _144530 _144607 P z''' f g a) = (term851 _144530 _144607 P z''' f g a).
Proof. exact (TRANS (@lem8189875 _144530 _144607 P z''' f g a) (@lem8189879 _144530 _144607 P z''' f g a)). Qed.
Lemma lem8189881 {_144530 _144607 P : Type'} (z''' : type518 _144530 _144607 P) (f : _144530 -> _144607) (g : _144530 -> _144607) (a : P) : (term852 _144530 _144607 P z''' f g a) = (term853 _144530 _144607 P z''' f g a).
Proof. exact (MK_COMB (@lem8189814 _144607) (@lem8189847 _144530 _144607 P z''' f g a)). Qed.
Lemma lem8189882 {_144530 _144607 P : Type'} (z''' : type518 _144530 _144607 P) (f : _144530 -> _144607) (g : _144530 -> _144607) (a : P) : ((term846 _144530 _144607 P z''' f g a) = (term849 _144530 _144607 P z''' f g a)) = ((term848 _144530 _144607 P z''' f g a) = (term851 _144530 _144607 P z''' f g a)).
Proof. exact (MK_COMB (@lem8189881 _144530 _144607 P z''' f g a) (@lem8189880 _144530 _144607 P z''' f g a)). Qed.
Lemma lem8189883 {_144530 _144607 P : Type'} (z''' : type518 _144530 _144607 P) (f : _144530 -> _144607) (g : _144530 -> _144607) (a : P) : (term854 _144530 _144607 P z''' f g a) = (term855 _144530 _144607 P z''' f g a).
Proof. exact (MK_COMB (@lem8189813) (@lem8189882 _144530 _144607 P z''' f g a)). Qed.
Lemma lem8189884 {_144529 _144530 : Type'} (lt2 : type1470 _144529 _144530) : lt2 = lt2.
Proof. exact (eq_refl lt2). Qed.
Lemma lem8189893 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8189894 {_144530 _144607 P : Type'} (f : type518 _144530 _144607 P) (x : _144530 -> _144607) : (f x) = (@I ((_144530 -> _144607) -> (_144530 -> _144607) -> P -> _144530) f x).
Proof. exact (@lem8189893 (_144530 -> _144607) (type557 _144530 _144607 P) f x). Qed.
Lemma lem8189895 {_144530 _144607 P : Type'} (z''' : type518 _144530 _144607 P) (f : _144530 -> _144607) : (z''' f) = (@I ((_144530 -> _144607) -> (_144530 -> _144607) -> P -> _144530) z''' f).
Proof. exact (@lem8189894 _144530 _144607 P z''' f). Qed.
Lemma lem8189896 {_144530 _144607 : Type'} (g : _144530 -> _144607) : g = g.
Proof. exact (eq_refl g). Qed.
Lemma lem8189897 {_144530 _144607 P : Type'} (z''' : type518 _144530 _144607 P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (z''' f g) = (@I ((_144530 -> _144607) -> (_144530 -> _144607) -> P -> _144530) z''' f g).
Proof. exact (MK_COMB (@lem8189895 _144530 _144607 P z''' f) (@lem8189896 _144530 _144607 g)). Qed.
Lemma lem8189899 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8189900 {_144530 _144607 P : Type'} (f : type557 _144530 _144607 P) (x : _144530 -> _144607) : (f x) = (@I ((_144530 -> _144607) -> P -> _144530) f x).
Proof. exact (@lem8189899 (_144530 -> _144607) (P -> _144530) f x). Qed.
Lemma lem8189901 {_144530 _144607 P : Type'} (z''' : type518 _144530 _144607 P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (@I ((_144530 -> _144607) -> (_144530 -> _144607) -> P -> _144530) z''' f g) = (term843 _144530 _144607 P z''' f g).
Proof. exact (@lem8189900 _144530 _144607 P (@I ((_144530 -> _144607) -> (_144530 -> _144607) -> P -> _144530) z''' f) g). Qed.
Lemma lem8189902 {_144530 _144607 P : Type'} (z''' : type518 _144530 _144607 P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (z''' f g) = (term843 _144530 _144607 P z''' f g).
Proof. exact (TRANS (@lem8189897 _144530 _144607 P z''' f g) (@lem8189901 _144530 _144607 P z''' f g)). Qed.
Lemma lem8189903 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8189904 {_144530 _144607 P : Type'} (z''' : type518 _144530 _144607 P) (f : _144530 -> _144607) (g : _144530 -> _144607) (a : P) : (z''' f g a) = (term844 _144530 _144607 P z''' f g a).
Proof. exact (MK_COMB (@lem8189902 _144530 _144607 P z''' f g) (@lem8189903 P a)). Qed.
Lemma lem8189906 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8189907 {_144530 P : Type'} (f : P -> _144530) (x : P) : (f x) = (@I (P -> _144530) f x).
Proof. exact (@lem8189906 P _144530 f x). Qed.
Lemma lem8189908 {_144530 _144607 P : Type'} (z''' : type518 _144530 _144607 P) (f : _144530 -> _144607) (g : _144530 -> _144607) (a : P) : (term844 _144530 _144607 P z''' f g a) = (term845 _144530 _144607 P z''' f g a).
Proof. exact (@lem8189907 _144530 P (term843 _144530 _144607 P z''' f g) a). Qed.
Lemma lem8189910 {_144530 _144607 P : Type'} (z''' : type518 _144530 _144607 P) (f : _144530 -> _144607) (g : _144530 -> _144607) (a : P) : (z''' f g a) = (term845 _144530 _144607 P z''' f g a).
Proof. exact (TRANS (@lem8189904 _144530 _144607 P z''' f g a) (@lem8189908 _144530 _144607 P z''' f g a)). Qed.
Lemma lem8189915 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8189916 {_144529 P : Type'} (f : P -> _144529) (x : P) : (f x) = (@I (P -> _144529) f x).
Proof. exact (@lem8189915 P _144529 f x). Qed.
Lemma lem8189918 {_144529 P : Type'} (s : P -> _144529) (a : P) : (s a) = (@I (P -> _144529) s a).
Proof. exact (@lem8189916 _144529 P s a). Qed.
Lemma lem8189919 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (z''' : type518 _144530 _144607 P) (f : _144530 -> _144607) (g : _144530 -> _144607) (a : P) : (term856 _144529 _144530 _144607 P lt2 z''' f g a) = (term857 _144529 _144530 _144607 P lt2 z''' f g a).
Proof. exact (MK_COMB (@lem8189884 _144529 _144530 lt2) (@lem8189910 _144530 _144607 P z''' f g a)). Qed.
Lemma lem8189920 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (z''' : type518 _144530 _144607 P) (f : _144530 -> _144607) (g : _144530 -> _144607) (s : P -> _144529) (a : P) : (term858 _144529 _144530 _144607 P lt2 z''' f g s a) = (term859 _144529 _144530 _144607 P lt2 z''' f g s a).
Proof. exact (MK_COMB (@lem8189919 _144529 _144530 _144607 P lt2 z''' f g a) (@lem8189918 _144529 P s a)). Qed.
Lemma lem8189922 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8189923 {_144529 _144530 : Type'} (f : type1470 _144529 _144530) (x : _144530) : (f x) = (@I (_144530 -> _144529 -> Prop) f x).
Proof. exact (@lem8189922 _144530 (_144529 -> Prop) f x). Qed.
Lemma lem8189924 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (z''' : type518 _144530 _144607 P) (f : _144530 -> _144607) (g : _144530 -> _144607) (a : P) : (term857 _144529 _144530 _144607 P lt2 z''' f g a) = (term860 _144529 _144530 _144607 P lt2 z''' f g a).
Proof. exact (@lem8189923 _144529 _144530 lt2 (term845 _144530 _144607 P z''' f g a)). Qed.
Lemma lem8189925 {_144529 P : Type'} (s : P -> _144529) (a : P) : (@I (P -> _144529) s a) = (@I (P -> _144529) s a).
Proof. exact (eq_refl (@I (P -> _144529) s a)). Qed.
Lemma lem8189926 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (z''' : type518 _144530 _144607 P) (f : _144530 -> _144607) (g : _144530 -> _144607) (s : P -> _144529) (a : P) : (term859 _144529 _144530 _144607 P lt2 z''' f g s a) = (term861 _144529 _144530 _144607 P lt2 z''' f g s a).
Proof. exact (MK_COMB (@lem8189924 _144529 _144530 _144607 P lt2 z''' f g a) (@lem8189925 _144529 P s a)). Qed.
Lemma lem8189928 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8189929 {_144529 : Type'} (f : _144529 -> Prop) (x : _144529) : (f x) = (@I (_144529 -> Prop) f x).
Proof. exact (@lem8189928 _144529 Prop f x). Qed.
Lemma lem8189930 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (z''' : type518 _144530 _144607 P) (f : _144530 -> _144607) (g : _144530 -> _144607) (s : P -> _144529) (a : P) : (term861 _144529 _144530 _144607 P lt2 z''' f g s a) = (term862 _144529 _144530 _144607 P lt2 z''' f g s a).
Proof. exact (@lem8189929 _144529 (term860 _144529 _144530 _144607 P lt2 z''' f g a) (@I (P -> _144529) s a)). Qed.
Lemma lem8189931 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (z''' : type518 _144530 _144607 P) (f : _144530 -> _144607) (g : _144530 -> _144607) (s : P -> _144529) (a : P) : (term859 _144529 _144530 _144607 P lt2 z''' f g s a) = (term862 _144529 _144530 _144607 P lt2 z''' f g s a).
Proof. exact (TRANS (@lem8189926 _144529 _144530 _144607 P lt2 z''' f g s a) (@lem8189930 _144529 _144530 _144607 P lt2 z''' f g s a)). Qed.
Lemma lem8189932 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (z''' : type518 _144530 _144607 P) (f : _144530 -> _144607) (g : _144530 -> _144607) (s : P -> _144529) (a : P) : (term858 _144529 _144530 _144607 P lt2 z''' f g s a) = (term862 _144529 _144530 _144607 P lt2 z''' f g s a).
Proof. exact (TRANS (@lem8189920 _144529 _144530 _144607 P lt2 z''' f g s a) (@lem8189931 _144529 _144530 _144607 P lt2 z''' f g s a)). Qed.
Lemma lem8189933 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8189934 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (z''' : type518 _144530 _144607 P) (f : _144530 -> _144607) (g : _144530 -> _144607) (s : P -> _144529) (a : P) : (term863 _144529 _144530 _144607 P lt2 z''' f g s a) = (term864 _144529 _144530 _144607 P lt2 z''' f g s a).
Proof. exact (MK_COMB (@lem8189933) (@lem8189932 _144529 _144530 _144607 P lt2 z''' f g s a)). Qed.
Lemma lem8189935 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z''' : type518 _144530 _144607 P) (f : _144530 -> _144607) (g : _144530 -> _144607) (a : P) : (term865 _144529 _144530 _144607 P lt2 s z''' f g a) = (term866 _144529 _144530 _144607 P lt2 s z''' f g a).
Proof. exact (MK_COMB (@lem8189934 _144529 _144530 _144607 P lt2 z''' f g s a) (@lem8189883 _144530 _144607 P z''' f g a)). Qed.
Lemma lem8189936 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8189943 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8189944 {_144530 _144607 P : Type'} (f : type560 _144530 _144607 P) (x : _144530 -> _144607) : (f x) = (@I ((_144530 -> _144607) -> P -> Prop) f x).
Proof. exact (@lem8189943 (_144530 -> _144607) (P -> Prop) f x). Qed.
Lemma lem8189945 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (g : _144530 -> _144607) : (p g) = (@I ((_144530 -> _144607) -> P -> Prop) p g).
Proof. exact (@lem8189944 _144530 _144607 P p g). Qed.
Lemma lem8189946 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8189947 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (p g a) = (@I ((_144530 -> _144607) -> P -> Prop) p g a).
Proof. exact (MK_COMB (@lem8189945 _144530 _144607 P p g) (@lem8189946 P a)). Qed.
Lemma lem8189949 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8189950 {P : Type'} (f : P -> Prop) (x : P) : (f x) = (@I (P -> Prop) f x).
Proof. exact (@lem8189949 P Prop f x). Qed.
Lemma lem8189951 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (@I ((_144530 -> _144607) -> P -> Prop) p g a) = (term822 _144530 _144607 P p g a).
Proof. exact (@lem8189950 P (@I ((_144530 -> _144607) -> P -> Prop) p g) a). Qed.
Lemma lem8189953 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (p g a) = (term822 _144530 _144607 P p g a).
Proof. exact (TRANS (@lem8189947 _144530 _144607 P p g a) (@lem8189951 _144530 _144607 P p g a)). Qed.
Lemma lem8189954 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term437 _144530 _144607 P p g a) = (term867 _144530 _144607 P p g a).
Proof. exact (MK_COMB (@lem8189936) (@lem8189953 _144530 _144607 P p g a)). Qed.
Lemma lem8189955 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8189956 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term416 _144530 _144607 P p g a) = (term868 _144530 _144607 P p g a).
Proof. exact (MK_COMB (@lem8189955) (@lem8189954 _144530 _144607 P p g a)). Qed.
Lemma lem8189957 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z''' : type518 _144530 _144607 P) (f : _144530 -> _144607) (g : _144530 -> _144607) (a : P) : (term869 _144529 _144530 _144607 P p lt2 s z''' f g a) = (term870 _144529 _144530 _144607 P p lt2 s z''' f g a).
Proof. exact (MK_COMB (@lem8189956 _144530 _144607 P p g a) (@lem8189935 _144529 _144530 _144607 P lt2 s z''' f g a)). Qed.
Lemma lem8189958 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8189965 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8189966 {_144530 _144607 P : Type'} (f : type560 _144530 _144607 P) (x : _144530 -> _144607) : (f x) = (@I ((_144530 -> _144607) -> P -> Prop) f x).
Proof. exact (@lem8189965 (_144530 -> _144607) (P -> Prop) f x). Qed.
Lemma lem8189967 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (f : _144530 -> _144607) : (p f) = (@I ((_144530 -> _144607) -> P -> Prop) p f).
Proof. exact (@lem8189966 _144530 _144607 P p f). Qed.
Lemma lem8189968 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8189969 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) : (p f a) = (@I ((_144530 -> _144607) -> P -> Prop) p f a).
Proof. exact (MK_COMB (@lem8189967 _144530 _144607 P p f) (@lem8189968 P a)). Qed.
Lemma lem8189971 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8189972 {P : Type'} (f : P -> Prop) (x : P) : (f x) = (@I (P -> Prop) f x).
Proof. exact (@lem8189971 P Prop f x). Qed.
Lemma lem8189973 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) : (@I ((_144530 -> _144607) -> P -> Prop) p f a) = (term822 _144530 _144607 P p f a).
Proof. exact (@lem8189972 P (@I ((_144530 -> _144607) -> P -> Prop) p f) a). Qed.
Lemma lem8189975 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) : (p f a) = (term822 _144530 _144607 P p f a).
Proof. exact (TRANS (@lem8189969 _144530 _144607 P p f a) (@lem8189973 _144530 _144607 P p f a)). Qed.
Lemma lem8189976 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) : (term437 _144530 _144607 P p f a) = (term867 _144530 _144607 P p f a).
Proof. exact (MK_COMB (@lem8189958) (@lem8189975 _144530 _144607 P p f a)). Qed.
Lemma lem8189977 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8189978 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) : (term416 _144530 _144607 P p f a) = (term868 _144530 _144607 P p f a).
Proof. exact (MK_COMB (@lem8189977) (@lem8189976 _144530 _144607 P p f a)). Qed.
Lemma lem8189979 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z''' : type518 _144530 _144607 P) (f : _144530 -> _144607) (g : _144530 -> _144607) (a : P) : (term871 _144529 _144530 _144607 P p lt2 s z''' f g a) = (term872 _144529 _144530 _144607 P p lt2 s z''' f g a).
Proof. exact (MK_COMB (@lem8189978 _144530 _144607 P p f a) (@lem8189957 _144529 _144530 _144607 P p lt2 s z''' f g a)). Qed.
Lemma lem8189980 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8189981 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z''' : type518 _144530 _144607 P) (f : _144530 -> _144607) (g : _144530 -> _144607) (a : P) : (term873 _144529 _144530 _144607 P p lt2 s z''' f g a) = (term874 _144529 _144530 _144607 P p lt2 s z''' f g a).
Proof. exact (MK_COMB (@lem8189980) (@lem8189979 _144529 _144530 _144607 P p lt2 s z''' f g a)). Qed.
Lemma lem8189982 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z''' : type518 _144530 _144607 P) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term875 _144529 _144530 _144607 _144645 P p lt2 s z''' f e g a) = (term876 _144529 _144530 _144607 _144645 P p lt2 s z''' f e g a).
Proof. exact (MK_COMB (@lem8189981 _144529 _144530 _144607 P p lt2 s z''' f g a) (@lem8189812 _144530 _144607 _144645 P f e g a)). Qed.
Lemma lem8189983 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z''' : type518 _144530 _144607 P) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) : (term877 _144529 _144530 _144607 _144645 P p lt2 s z''' f e g) = (term878 _144529 _144530 _144607 _144645 P p lt2 s z''' f e g).
Proof. exact (fun_ext (fun a : P => @lem8189982 _144529 _144530 _144607 _144645 P p lt2 s z''' f e g a)). Qed.
Lemma lem8189984 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8189985 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z''' : type518 _144530 _144607 P) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) : (term879 _144529 _144530 _144607 _144645 P p lt2 s z''' f e g) = (term880 _144529 _144530 _144607 _144645 P p lt2 s z''' f e g).
Proof. exact (MK_COMB (@lem8189984 P) (@lem8189983 _144529 _144530 _144607 _144645 P p lt2 s z''' f e g)). Qed.
Lemma lem8189986 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z''' : type518 _144530 _144607 P) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) : (term881 _144529 _144530 _144607 _144645 P p lt2 s z''' f e) = (term882 _144529 _144530 _144607 _144645 P p lt2 s z''' f e).
Proof. exact (fun_ext (fun g : _144530 -> _144607 => @lem8189985 _144529 _144530 _144607 _144645 P p lt2 s z''' f e g)). Qed.
Lemma lem8189987 {_144530 _144607 : Type'} : (@all (_144530 -> _144607)) = (@all (_144530 -> _144607)).
Proof. exact (eq_refl (@all (_144530 -> _144607))). Qed.
Lemma lem8189988 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z''' : type518 _144530 _144607 P) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) : (term549 _144529 _144530 _144607 _144645 P p lt2 s z''' f e) = (term883 _144529 _144530 _144607 _144645 P p lt2 s z''' f e).
Proof. exact (MK_COMB (@lem8189987 _144530 _144607) (@lem8189986 _144529 _144530 _144607 _144645 P p lt2 s z''' f e)). Qed.
Lemma lem8189989 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z''' : type518 _144530 _144607 P) (e : type564 _144530 _144607 _144645 P) : (term551 _144529 _144530 _144607 _144645 P p lt2 s z''' e) = (term884 _144529 _144530 _144607 _144645 P p lt2 s z''' e).
Proof. exact (fun_ext (fun f : _144530 -> _144607 => @lem8189988 _144529 _144530 _144607 _144645 P p lt2 s z''' f e)). Qed.
Lemma lem8189990 {_144530 _144607 : Type'} : (@all (_144530 -> _144607)) = (@all (_144530 -> _144607)).
Proof. exact (eq_refl (@all (_144530 -> _144607))). Qed.
Lemma lem8189991 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z''' : type518 _144530 _144607 P) (e : type564 _144530 _144607 _144645 P) : (term553 _144529 _144530 _144607 _144645 P p lt2 s z''' e) = (term885 _144529 _144530 _144607 _144645 P p lt2 s z''' e).
Proof. exact (MK_COMB (@lem8189990 _144530 _144607) (@lem8189989 _144529 _144530 _144607 _144645 P p lt2 s z''' e)). Qed.
Lemma lem8189992 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z''' : type518 _144530 _144607 P) (e : type564 _144530 _144607 _144645 P) (h1 : term553 _144529 _144530 _144607 _144645 P p lt2 s z''' e) : term885 _144529 _144530 _144607 _144645 P p lt2 s z''' e.
Proof. exact (EQ_MP (@lem8189991 _144529 _144530 _144607 _144645 P p lt2 s z''' e) (@lem8188569 _144529 _144530 _144607 _144645 P p lt2 s z''' e h1)). Qed.
Lemma lem8189993 {_144645 : Type'} : (@eq _144645) = (@eq _144645).
Proof. exact (eq_refl (@eq _144645)). Qed.
Lemma lem8190000 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8190001 {_144530 _144607 _144645 P : Type'} (f : type564 _144530 _144607 _144645 P) (x : _144530 -> _144607) : (f x) = (@I ((_144530 -> _144607) -> P -> _144645) f x).
Proof. exact (@lem8190000 (_144530 -> _144607) (P -> _144645) f x). Qed.
Lemma lem8190002 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) : (pat f) = (@I ((_144530 -> _144607) -> P -> _144645) pat f).
Proof. exact (@lem8190001 _144530 _144607 _144645 P pat f). Qed.
Lemma lem8190003 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8190004 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (a : P) : (pat f a) = (@I ((_144530 -> _144607) -> P -> _144645) pat f a).
Proof. exact (MK_COMB (@lem8190002 _144530 _144607 _144645 P pat f) (@lem8190003 P a)). Qed.
Lemma lem8190006 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8190007 {_144645 P : Type'} (f : P -> _144645) (x : P) : (f x) = (@I (P -> _144645) f x).
Proof. exact (@lem8190006 P _144645 f x). Qed.
Lemma lem8190008 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (a : P) : (@I ((_144530 -> _144607) -> P -> _144645) pat f a) = (term835 _144530 _144607 _144645 P pat f a).
Proof. exact (@lem8190007 _144645 P (@I ((_144530 -> _144607) -> P -> _144645) pat f) a). Qed.
Lemma lem8190010 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (a : P) : (pat f a) = (term835 _144530 _144607 _144645 P pat f a).
Proof. exact (TRANS (@lem8190004 _144530 _144607 _144645 P pat f a) (@lem8190008 _144530 _144607 _144645 P pat f a)). Qed.
Lemma lem8190017 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8190018 {_144530 _144607 _144645 P : Type'} (f : type564 _144530 _144607 _144645 P) (x : _144530 -> _144607) : (f x) = (@I ((_144530 -> _144607) -> P -> _144645) f x).
Proof. exact (@lem8190017 (_144530 -> _144607) (P -> _144645) f x). Qed.
Lemma lem8190019 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) : (pat g) = (@I ((_144530 -> _144607) -> P -> _144645) pat g).
Proof. exact (@lem8190018 _144530 _144607 _144645 P pat g). Qed.
Lemma lem8190020 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8190021 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (pat g a) = (@I ((_144530 -> _144607) -> P -> _144645) pat g a).
Proof. exact (MK_COMB (@lem8190019 _144530 _144607 _144645 P pat g) (@lem8190020 P a)). Qed.
Lemma lem8190023 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8190024 {_144645 P : Type'} (f : P -> _144645) (x : P) : (f x) = (@I (P -> _144645) f x).
Proof. exact (@lem8190023 P _144645 f x). Qed.
Lemma lem8190025 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (@I ((_144530 -> _144607) -> P -> _144645) pat g a) = (term835 _144530 _144607 _144645 P pat g a).
Proof. exact (@lem8190024 _144645 P (@I ((_144530 -> _144607) -> P -> _144645) pat g) a). Qed.
Lemma lem8190027 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (pat g a) = (term835 _144530 _144607 _144645 P pat g a).
Proof. exact (TRANS (@lem8190021 _144530 _144607 _144645 P pat g a) (@lem8190025 _144530 _144607 _144645 P pat g a)). Qed.
Lemma lem8190028 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (a : P) : (term836 _144530 _144607 _144645 P pat f a) = (term837 _144530 _144607 _144645 P pat f a).
Proof. exact (MK_COMB (@lem8189993 _144645) (@lem8190010 _144530 _144607 _144645 P pat f a)). Qed.
Lemma lem8190029 {_144530 _144607 _144645 P : Type'} (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : ((pat f a) = (pat g a)) = ((term835 _144530 _144607 _144645 P pat f a) = (term835 _144530 _144607 _144645 P pat g a)).
Proof. exact (MK_COMB (@lem8190028 _144530 _144607 _144645 P pat f a) (@lem8190027 _144530 _144607 _144645 P pat g a)). Qed.
Lemma lem8190030 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8190031 {_144607 : Type'} : (@eq _144607) = (@eq _144607).
Proof. exact (eq_refl (@eq _144607)). Qed.
Lemma lem8190032 {_144530 _144607 : Type'} (f : _144530 -> _144607) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem8190041 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8190042 {_144530 _144607 P : Type'} (f : type518 _144530 _144607 P) (x : _144530 -> _144607) : (f x) = (@I ((_144530 -> _144607) -> (_144530 -> _144607) -> P -> _144530) f x).
Proof. exact (@lem8190041 (_144530 -> _144607) (type557 _144530 _144607 P) f x). Qed.
Lemma lem8190043 {_144530 _144607 P : Type'} (z'''' : type518 _144530 _144607 P) (f : _144530 -> _144607) : (z'''' f) = (@I ((_144530 -> _144607) -> (_144530 -> _144607) -> P -> _144530) z'''' f).
Proof. exact (@lem8190042 _144530 _144607 P z'''' f). Qed.
Lemma lem8190044 {_144530 _144607 : Type'} (g : _144530 -> _144607) : g = g.
Proof. exact (eq_refl g). Qed.
Lemma lem8190045 {_144530 _144607 P : Type'} (z'''' : type518 _144530 _144607 P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (z'''' f g) = (@I ((_144530 -> _144607) -> (_144530 -> _144607) -> P -> _144530) z'''' f g).
Proof. exact (MK_COMB (@lem8190043 _144530 _144607 P z'''' f) (@lem8190044 _144530 _144607 g)). Qed.
Lemma lem8190047 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8190048 {_144530 _144607 P : Type'} (f : type557 _144530 _144607 P) (x : _144530 -> _144607) : (f x) = (@I ((_144530 -> _144607) -> P -> _144530) f x).
Proof. exact (@lem8190047 (_144530 -> _144607) (P -> _144530) f x). Qed.
Lemma lem8190049 {_144530 _144607 P : Type'} (z'''' : type518 _144530 _144607 P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (@I ((_144530 -> _144607) -> (_144530 -> _144607) -> P -> _144530) z'''' f g) = (term843 _144530 _144607 P z'''' f g).
Proof. exact (@lem8190048 _144530 _144607 P (@I ((_144530 -> _144607) -> (_144530 -> _144607) -> P -> _144530) z'''' f) g). Qed.
Lemma lem8190050 {_144530 _144607 P : Type'} (z'''' : type518 _144530 _144607 P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (z'''' f g) = (term843 _144530 _144607 P z'''' f g).
Proof. exact (TRANS (@lem8190045 _144530 _144607 P z'''' f g) (@lem8190049 _144530 _144607 P z'''' f g)). Qed.
Lemma lem8190051 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8190052 {_144530 _144607 P : Type'} (z'''' : type518 _144530 _144607 P) (f : _144530 -> _144607) (g : _144530 -> _144607) (a : P) : (z'''' f g a) = (term844 _144530 _144607 P z'''' f g a).
Proof. exact (MK_COMB (@lem8190050 _144530 _144607 P z'''' f g) (@lem8190051 P a)). Qed.
Lemma lem8190054 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8190055 {_144530 P : Type'} (f : P -> _144530) (x : P) : (f x) = (@I (P -> _144530) f x).
Proof. exact (@lem8190054 P _144530 f x). Qed.
Lemma lem8190056 {_144530 _144607 P : Type'} (z'''' : type518 _144530 _144607 P) (f : _144530 -> _144607) (g : _144530 -> _144607) (a : P) : (term844 _144530 _144607 P z'''' f g a) = (term845 _144530 _144607 P z'''' f g a).
Proof. exact (@lem8190055 _144530 P (term843 _144530 _144607 P z'''' f g) a). Qed.
Lemma lem8190058 {_144530 _144607 P : Type'} (z'''' : type518 _144530 _144607 P) (f : _144530 -> _144607) (g : _144530 -> _144607) (a : P) : (z'''' f g a) = (term845 _144530 _144607 P z'''' f g a).
Proof. exact (TRANS (@lem8190052 _144530 _144607 P z'''' f g a) (@lem8190056 _144530 _144607 P z'''' f g a)). Qed.
Lemma lem8190059 {_144530 _144607 P : Type'} (z'''' : type518 _144530 _144607 P) (f : _144530 -> _144607) (g : _144530 -> _144607) (a : P) : (term846 _144530 _144607 P z'''' f g a) = (term847 _144530 _144607 P z'''' f g a).
Proof. exact (MK_COMB (@lem8190032 _144530 _144607 f) (@lem8190058 _144530 _144607 P z'''' f g a)). Qed.
Lemma lem8190061 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8190062 {_144530 _144607 : Type'} (f : _144530 -> _144607) (x : _144530) : (f x) = (@I (_144530 -> _144607) f x).
Proof. exact (@lem8190061 _144530 _144607 f x). Qed.
Lemma lem8190063 {_144530 _144607 P : Type'} (z'''' : type518 _144530 _144607 P) (f : _144530 -> _144607) (g : _144530 -> _144607) (a : P) : (term847 _144530 _144607 P z'''' f g a) = (term848 _144530 _144607 P z'''' f g a).
Proof. exact (@lem8190062 _144530 _144607 f (term845 _144530 _144607 P z'''' f g a)). Qed.
Lemma lem8190064 {_144530 _144607 P : Type'} (z'''' : type518 _144530 _144607 P) (f : _144530 -> _144607) (g : _144530 -> _144607) (a : P) : (term846 _144530 _144607 P z'''' f g a) = (term848 _144530 _144607 P z'''' f g a).
Proof. exact (TRANS (@lem8190059 _144530 _144607 P z'''' f g a) (@lem8190063 _144530 _144607 P z'''' f g a)). Qed.
Lemma lem8190065 {_144530 _144607 : Type'} (g : _144530 -> _144607) : g = g.
Proof. exact (eq_refl g). Qed.
Lemma lem8190074 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8190075 {_144530 _144607 P : Type'} (f : type518 _144530 _144607 P) (x : _144530 -> _144607) : (f x) = (@I ((_144530 -> _144607) -> (_144530 -> _144607) -> P -> _144530) f x).
Proof. exact (@lem8190074 (_144530 -> _144607) (type557 _144530 _144607 P) f x). Qed.
Lemma lem8190076 {_144530 _144607 P : Type'} (z'''' : type518 _144530 _144607 P) (f : _144530 -> _144607) : (z'''' f) = (@I ((_144530 -> _144607) -> (_144530 -> _144607) -> P -> _144530) z'''' f).
Proof. exact (@lem8190075 _144530 _144607 P z'''' f). Qed.
Lemma lem8190077 {_144530 _144607 : Type'} (g : _144530 -> _144607) : g = g.
Proof. exact (eq_refl g). Qed.
Lemma lem8190078 {_144530 _144607 P : Type'} (z'''' : type518 _144530 _144607 P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (z'''' f g) = (@I ((_144530 -> _144607) -> (_144530 -> _144607) -> P -> _144530) z'''' f g).
Proof. exact (MK_COMB (@lem8190076 _144530 _144607 P z'''' f) (@lem8190077 _144530 _144607 g)). Qed.
Lemma lem8190080 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8190081 {_144530 _144607 P : Type'} (f : type557 _144530 _144607 P) (x : _144530 -> _144607) : (f x) = (@I ((_144530 -> _144607) -> P -> _144530) f x).
Proof. exact (@lem8190080 (_144530 -> _144607) (P -> _144530) f x). Qed.
Lemma lem8190082 {_144530 _144607 P : Type'} (z'''' : type518 _144530 _144607 P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (@I ((_144530 -> _144607) -> (_144530 -> _144607) -> P -> _144530) z'''' f g) = (term843 _144530 _144607 P z'''' f g).
Proof. exact (@lem8190081 _144530 _144607 P (@I ((_144530 -> _144607) -> (_144530 -> _144607) -> P -> _144530) z'''' f) g). Qed.
Lemma lem8190083 {_144530 _144607 P : Type'} (z'''' : type518 _144530 _144607 P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (z'''' f g) = (term843 _144530 _144607 P z'''' f g).
Proof. exact (TRANS (@lem8190078 _144530 _144607 P z'''' f g) (@lem8190082 _144530 _144607 P z'''' f g)). Qed.
Lemma lem8190084 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8190085 {_144530 _144607 P : Type'} (z'''' : type518 _144530 _144607 P) (f : _144530 -> _144607) (g : _144530 -> _144607) (a : P) : (z'''' f g a) = (term844 _144530 _144607 P z'''' f g a).
Proof. exact (MK_COMB (@lem8190083 _144530 _144607 P z'''' f g) (@lem8190084 P a)). Qed.
Lemma lem8190087 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8190088 {_144530 P : Type'} (f : P -> _144530) (x : P) : (f x) = (@I (P -> _144530) f x).
Proof. exact (@lem8190087 P _144530 f x). Qed.
Lemma lem8190089 {_144530 _144607 P : Type'} (z'''' : type518 _144530 _144607 P) (f : _144530 -> _144607) (g : _144530 -> _144607) (a : P) : (term844 _144530 _144607 P z'''' f g a) = (term845 _144530 _144607 P z'''' f g a).
Proof. exact (@lem8190088 _144530 P (term843 _144530 _144607 P z'''' f g) a). Qed.
Lemma lem8190091 {_144530 _144607 P : Type'} (z'''' : type518 _144530 _144607 P) (f : _144530 -> _144607) (g : _144530 -> _144607) (a : P) : (z'''' f g a) = (term845 _144530 _144607 P z'''' f g a).
Proof. exact (TRANS (@lem8190085 _144530 _144607 P z'''' f g a) (@lem8190089 _144530 _144607 P z'''' f g a)). Qed.
Lemma lem8190092 {_144530 _144607 P : Type'} (z'''' : type518 _144530 _144607 P) (f : _144530 -> _144607) (g : _144530 -> _144607) (a : P) : (term849 _144530 _144607 P z'''' f g a) = (term850 _144530 _144607 P z'''' f g a).
Proof. exact (MK_COMB (@lem8190065 _144530 _144607 g) (@lem8190091 _144530 _144607 P z'''' f g a)). Qed.
Lemma lem8190094 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8190095 {_144530 _144607 : Type'} (f : _144530 -> _144607) (x : _144530) : (f x) = (@I (_144530 -> _144607) f x).
Proof. exact (@lem8190094 _144530 _144607 f x). Qed.
Lemma lem8190096 {_144530 _144607 P : Type'} (z'''' : type518 _144530 _144607 P) (f : _144530 -> _144607) (g : _144530 -> _144607) (a : P) : (term850 _144530 _144607 P z'''' f g a) = (term851 _144530 _144607 P z'''' f g a).
Proof. exact (@lem8190095 _144530 _144607 g (term845 _144530 _144607 P z'''' f g a)). Qed.
Lemma lem8190097 {_144530 _144607 P : Type'} (z'''' : type518 _144530 _144607 P) (f : _144530 -> _144607) (g : _144530 -> _144607) (a : P) : (term849 _144530 _144607 P z'''' f g a) = (term851 _144530 _144607 P z'''' f g a).
Proof. exact (TRANS (@lem8190092 _144530 _144607 P z'''' f g a) (@lem8190096 _144530 _144607 P z'''' f g a)). Qed.
Lemma lem8190098 {_144530 _144607 P : Type'} (z'''' : type518 _144530 _144607 P) (f : _144530 -> _144607) (g : _144530 -> _144607) (a : P) : (term852 _144530 _144607 P z'''' f g a) = (term853 _144530 _144607 P z'''' f g a).
Proof. exact (MK_COMB (@lem8190031 _144607) (@lem8190064 _144530 _144607 P z'''' f g a)). Qed.
Lemma lem8190099 {_144530 _144607 P : Type'} (z'''' : type518 _144530 _144607 P) (f : _144530 -> _144607) (g : _144530 -> _144607) (a : P) : ((term846 _144530 _144607 P z'''' f g a) = (term849 _144530 _144607 P z'''' f g a)) = ((term848 _144530 _144607 P z'''' f g a) = (term851 _144530 _144607 P z'''' f g a)).
Proof. exact (MK_COMB (@lem8190098 _144530 _144607 P z'''' f g a) (@lem8190097 _144530 _144607 P z'''' f g a)). Qed.
Lemma lem8190100 {_144530 _144607 P : Type'} (z'''' : type518 _144530 _144607 P) (f : _144530 -> _144607) (g : _144530 -> _144607) (a : P) : (term854 _144530 _144607 P z'''' f g a) = (term855 _144530 _144607 P z'''' f g a).
Proof. exact (MK_COMB (@lem8190030) (@lem8190099 _144530 _144607 P z'''' f g a)). Qed.
Lemma lem8190101 {_144529 _144530 : Type'} (lt2 : type1470 _144529 _144530) : lt2 = lt2.
Proof. exact (eq_refl lt2). Qed.
Lemma lem8190110 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8190111 {_144530 _144607 P : Type'} (f : type518 _144530 _144607 P) (x : _144530 -> _144607) : (f x) = (@I ((_144530 -> _144607) -> (_144530 -> _144607) -> P -> _144530) f x).
Proof. exact (@lem8190110 (_144530 -> _144607) (type557 _144530 _144607 P) f x). Qed.
Lemma lem8190112 {_144530 _144607 P : Type'} (z'''' : type518 _144530 _144607 P) (f : _144530 -> _144607) : (z'''' f) = (@I ((_144530 -> _144607) -> (_144530 -> _144607) -> P -> _144530) z'''' f).
Proof. exact (@lem8190111 _144530 _144607 P z'''' f). Qed.
Lemma lem8190113 {_144530 _144607 : Type'} (g : _144530 -> _144607) : g = g.
Proof. exact (eq_refl g). Qed.
Lemma lem8190114 {_144530 _144607 P : Type'} (z'''' : type518 _144530 _144607 P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (z'''' f g) = (@I ((_144530 -> _144607) -> (_144530 -> _144607) -> P -> _144530) z'''' f g).
Proof. exact (MK_COMB (@lem8190112 _144530 _144607 P z'''' f) (@lem8190113 _144530 _144607 g)). Qed.
Lemma lem8190116 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8190117 {_144530 _144607 P : Type'} (f : type557 _144530 _144607 P) (x : _144530 -> _144607) : (f x) = (@I ((_144530 -> _144607) -> P -> _144530) f x).
Proof. exact (@lem8190116 (_144530 -> _144607) (P -> _144530) f x). Qed.
Lemma lem8190118 {_144530 _144607 P : Type'} (z'''' : type518 _144530 _144607 P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (@I ((_144530 -> _144607) -> (_144530 -> _144607) -> P -> _144530) z'''' f g) = (term843 _144530 _144607 P z'''' f g).
Proof. exact (@lem8190117 _144530 _144607 P (@I ((_144530 -> _144607) -> (_144530 -> _144607) -> P -> _144530) z'''' f) g). Qed.
Lemma lem8190119 {_144530 _144607 P : Type'} (z'''' : type518 _144530 _144607 P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (z'''' f g) = (term843 _144530 _144607 P z'''' f g).
Proof. exact (TRANS (@lem8190114 _144530 _144607 P z'''' f g) (@lem8190118 _144530 _144607 P z'''' f g)). Qed.
Lemma lem8190120 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8190121 {_144530 _144607 P : Type'} (z'''' : type518 _144530 _144607 P) (f : _144530 -> _144607) (g : _144530 -> _144607) (a : P) : (z'''' f g a) = (term844 _144530 _144607 P z'''' f g a).
Proof. exact (MK_COMB (@lem8190119 _144530 _144607 P z'''' f g) (@lem8190120 P a)). Qed.
Lemma lem8190123 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8190124 {_144530 P : Type'} (f : P -> _144530) (x : P) : (f x) = (@I (P -> _144530) f x).
Proof. exact (@lem8190123 P _144530 f x). Qed.
Lemma lem8190125 {_144530 _144607 P : Type'} (z'''' : type518 _144530 _144607 P) (f : _144530 -> _144607) (g : _144530 -> _144607) (a : P) : (term844 _144530 _144607 P z'''' f g a) = (term845 _144530 _144607 P z'''' f g a).
Proof. exact (@lem8190124 _144530 P (term843 _144530 _144607 P z'''' f g) a). Qed.
Lemma lem8190127 {_144530 _144607 P : Type'} (z'''' : type518 _144530 _144607 P) (f : _144530 -> _144607) (g : _144530 -> _144607) (a : P) : (z'''' f g a) = (term845 _144530 _144607 P z'''' f g a).
Proof. exact (TRANS (@lem8190121 _144530 _144607 P z'''' f g a) (@lem8190125 _144530 _144607 P z'''' f g a)). Qed.
Lemma lem8190132 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8190133 {_144529 P : Type'} (f : P -> _144529) (x : P) : (f x) = (@I (P -> _144529) f x).
Proof. exact (@lem8190132 P _144529 f x). Qed.
Lemma lem8190135 {_144529 P : Type'} (s : P -> _144529) (a : P) : (s a) = (@I (P -> _144529) s a).
Proof. exact (@lem8190133 _144529 P s a). Qed.
Lemma lem8190136 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (z'''' : type518 _144530 _144607 P) (f : _144530 -> _144607) (g : _144530 -> _144607) (a : P) : (term856 _144529 _144530 _144607 P lt2 z'''' f g a) = (term857 _144529 _144530 _144607 P lt2 z'''' f g a).
Proof. exact (MK_COMB (@lem8190101 _144529 _144530 lt2) (@lem8190127 _144530 _144607 P z'''' f g a)). Qed.
Lemma lem8190137 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (z'''' : type518 _144530 _144607 P) (f : _144530 -> _144607) (g : _144530 -> _144607) (s : P -> _144529) (a : P) : (term858 _144529 _144530 _144607 P lt2 z'''' f g s a) = (term859 _144529 _144530 _144607 P lt2 z'''' f g s a).
Proof. exact (MK_COMB (@lem8190136 _144529 _144530 _144607 P lt2 z'''' f g a) (@lem8190135 _144529 P s a)). Qed.
Lemma lem8190139 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8190140 {_144529 _144530 : Type'} (f : type1470 _144529 _144530) (x : _144530) : (f x) = (@I (_144530 -> _144529 -> Prop) f x).
Proof. exact (@lem8190139 _144530 (_144529 -> Prop) f x). Qed.
Lemma lem8190141 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (z'''' : type518 _144530 _144607 P) (f : _144530 -> _144607) (g : _144530 -> _144607) (a : P) : (term857 _144529 _144530 _144607 P lt2 z'''' f g a) = (term860 _144529 _144530 _144607 P lt2 z'''' f g a).
Proof. exact (@lem8190140 _144529 _144530 lt2 (term845 _144530 _144607 P z'''' f g a)). Qed.
Lemma lem8190142 {_144529 P : Type'} (s : P -> _144529) (a : P) : (@I (P -> _144529) s a) = (@I (P -> _144529) s a).
Proof. exact (eq_refl (@I (P -> _144529) s a)). Qed.
Lemma lem8190143 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (z'''' : type518 _144530 _144607 P) (f : _144530 -> _144607) (g : _144530 -> _144607) (s : P -> _144529) (a : P) : (term859 _144529 _144530 _144607 P lt2 z'''' f g s a) = (term861 _144529 _144530 _144607 P lt2 z'''' f g s a).
Proof. exact (MK_COMB (@lem8190141 _144529 _144530 _144607 P lt2 z'''' f g a) (@lem8190142 _144529 P s a)). Qed.
Lemma lem8190145 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8190146 {_144529 : Type'} (f : _144529 -> Prop) (x : _144529) : (f x) = (@I (_144529 -> Prop) f x).
Proof. exact (@lem8190145 _144529 Prop f x). Qed.
Lemma lem8190147 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (z'''' : type518 _144530 _144607 P) (f : _144530 -> _144607) (g : _144530 -> _144607) (s : P -> _144529) (a : P) : (term861 _144529 _144530 _144607 P lt2 z'''' f g s a) = (term862 _144529 _144530 _144607 P lt2 z'''' f g s a).
Proof. exact (@lem8190146 _144529 (term860 _144529 _144530 _144607 P lt2 z'''' f g a) (@I (P -> _144529) s a)). Qed.
Lemma lem8190148 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (z'''' : type518 _144530 _144607 P) (f : _144530 -> _144607) (g : _144530 -> _144607) (s : P -> _144529) (a : P) : (term859 _144529 _144530 _144607 P lt2 z'''' f g s a) = (term862 _144529 _144530 _144607 P lt2 z'''' f g s a).
Proof. exact (TRANS (@lem8190143 _144529 _144530 _144607 P lt2 z'''' f g s a) (@lem8190147 _144529 _144530 _144607 P lt2 z'''' f g s a)). Qed.
Lemma lem8190149 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (z'''' : type518 _144530 _144607 P) (f : _144530 -> _144607) (g : _144530 -> _144607) (s : P -> _144529) (a : P) : (term858 _144529 _144530 _144607 P lt2 z'''' f g s a) = (term862 _144529 _144530 _144607 P lt2 z'''' f g s a).
Proof. exact (TRANS (@lem8190137 _144529 _144530 _144607 P lt2 z'''' f g s a) (@lem8190148 _144529 _144530 _144607 P lt2 z'''' f g s a)). Qed.
Lemma lem8190150 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8190151 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (z'''' : type518 _144530 _144607 P) (f : _144530 -> _144607) (g : _144530 -> _144607) (s : P -> _144529) (a : P) : (term863 _144529 _144530 _144607 P lt2 z'''' f g s a) = (term864 _144529 _144530 _144607 P lt2 z'''' f g s a).
Proof. exact (MK_COMB (@lem8190150) (@lem8190149 _144529 _144530 _144607 P lt2 z'''' f g s a)). Qed.
Lemma lem8190152 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z'''' : type518 _144530 _144607 P) (f : _144530 -> _144607) (g : _144530 -> _144607) (a : P) : (term865 _144529 _144530 _144607 P lt2 s z'''' f g a) = (term866 _144529 _144530 _144607 P lt2 s z'''' f g a).
Proof. exact (MK_COMB (@lem8190151 _144529 _144530 _144607 P lt2 z'''' f g s a) (@lem8190100 _144530 _144607 P z'''' f g a)). Qed.
Lemma lem8190153 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8190160 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8190161 {_144530 _144607 P : Type'} (f : type560 _144530 _144607 P) (x : _144530 -> _144607) : (f x) = (@I ((_144530 -> _144607) -> P -> Prop) f x).
Proof. exact (@lem8190160 (_144530 -> _144607) (P -> Prop) f x). Qed.
Lemma lem8190162 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (g : _144530 -> _144607) : (p g) = (@I ((_144530 -> _144607) -> P -> Prop) p g).
Proof. exact (@lem8190161 _144530 _144607 P p g). Qed.
Lemma lem8190163 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8190164 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (p g a) = (@I ((_144530 -> _144607) -> P -> Prop) p g a).
Proof. exact (MK_COMB (@lem8190162 _144530 _144607 P p g) (@lem8190163 P a)). Qed.
Lemma lem8190166 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8190167 {P : Type'} (f : P -> Prop) (x : P) : (f x) = (@I (P -> Prop) f x).
Proof. exact (@lem8190166 P Prop f x). Qed.
Lemma lem8190168 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (@I ((_144530 -> _144607) -> P -> Prop) p g a) = (term822 _144530 _144607 P p g a).
Proof. exact (@lem8190167 P (@I ((_144530 -> _144607) -> P -> Prop) p g) a). Qed.
Lemma lem8190170 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (p g a) = (term822 _144530 _144607 P p g a).
Proof. exact (TRANS (@lem8190164 _144530 _144607 P p g a) (@lem8190168 _144530 _144607 P p g a)). Qed.
Lemma lem8190171 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term437 _144530 _144607 P p g a) = (term867 _144530 _144607 P p g a).
Proof. exact (MK_COMB (@lem8190153) (@lem8190170 _144530 _144607 P p g a)). Qed.
Lemma lem8190172 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8190173 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term416 _144530 _144607 P p g a) = (term868 _144530 _144607 P p g a).
Proof. exact (MK_COMB (@lem8190172) (@lem8190171 _144530 _144607 P p g a)). Qed.
Lemma lem8190174 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z'''' : type518 _144530 _144607 P) (f : _144530 -> _144607) (g : _144530 -> _144607) (a : P) : (term869 _144529 _144530 _144607 P p lt2 s z'''' f g a) = (term870 _144529 _144530 _144607 P p lt2 s z'''' f g a).
Proof. exact (MK_COMB (@lem8190173 _144530 _144607 P p g a) (@lem8190152 _144529 _144530 _144607 P lt2 s z'''' f g a)). Qed.
Lemma lem8190175 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8190182 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8190183 {_144530 _144607 P : Type'} (f : type560 _144530 _144607 P) (x : _144530 -> _144607) : (f x) = (@I ((_144530 -> _144607) -> P -> Prop) f x).
Proof. exact (@lem8190182 (_144530 -> _144607) (P -> Prop) f x). Qed.
Lemma lem8190184 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (f : _144530 -> _144607) : (p f) = (@I ((_144530 -> _144607) -> P -> Prop) p f).
Proof. exact (@lem8190183 _144530 _144607 P p f). Qed.
Lemma lem8190185 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8190186 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) : (p f a) = (@I ((_144530 -> _144607) -> P -> Prop) p f a).
Proof. exact (MK_COMB (@lem8190184 _144530 _144607 P p f) (@lem8190185 P a)). Qed.
Lemma lem8190188 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8190189 {P : Type'} (f : P -> Prop) (x : P) : (f x) = (@I (P -> Prop) f x).
Proof. exact (@lem8190188 P Prop f x). Qed.
Lemma lem8190190 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) : (@I ((_144530 -> _144607) -> P -> Prop) p f a) = (term822 _144530 _144607 P p f a).
Proof. exact (@lem8190189 P (@I ((_144530 -> _144607) -> P -> Prop) p f) a). Qed.
Lemma lem8190192 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) : (p f a) = (term822 _144530 _144607 P p f a).
Proof. exact (TRANS (@lem8190186 _144530 _144607 P p f a) (@lem8190190 _144530 _144607 P p f a)). Qed.
Lemma lem8190193 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) : (term437 _144530 _144607 P p f a) = (term867 _144530 _144607 P p f a).
Proof. exact (MK_COMB (@lem8190175) (@lem8190192 _144530 _144607 P p f a)). Qed.
Lemma lem8190194 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8190195 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) : (term416 _144530 _144607 P p f a) = (term868 _144530 _144607 P p f a).
Proof. exact (MK_COMB (@lem8190194) (@lem8190193 _144530 _144607 P p f a)). Qed.
Lemma lem8190196 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z'''' : type518 _144530 _144607 P) (f : _144530 -> _144607) (g : _144530 -> _144607) (a : P) : (term871 _144529 _144530 _144607 P p lt2 s z'''' f g a) = (term872 _144529 _144530 _144607 P p lt2 s z'''' f g a).
Proof. exact (MK_COMB (@lem8190195 _144530 _144607 P p f a) (@lem8190174 _144529 _144530 _144607 P p lt2 s z'''' f g a)). Qed.
Lemma lem8190197 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8190198 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z'''' : type518 _144530 _144607 P) (f : _144530 -> _144607) (g : _144530 -> _144607) (a : P) : (term873 _144529 _144530 _144607 P p lt2 s z'''' f g a) = (term874 _144529 _144530 _144607 P p lt2 s z'''' f g a).
Proof. exact (MK_COMB (@lem8190197) (@lem8190196 _144529 _144530 _144607 P p lt2 s z'''' f g a)). Qed.
Lemma lem8190199 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z'''' : type518 _144530 _144607 P) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term875 _144529 _144530 _144607 _144645 P p lt2 s z'''' f pat g a) = (term876 _144529 _144530 _144607 _144645 P p lt2 s z'''' f pat g a).
Proof. exact (MK_COMB (@lem8190198 _144529 _144530 _144607 P p lt2 s z'''' f g a) (@lem8190029 _144530 _144607 _144645 P f pat g a)). Qed.
Lemma lem8190200 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z'''' : type518 _144530 _144607 P) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) : (term877 _144529 _144530 _144607 _144645 P p lt2 s z'''' f pat g) = (term878 _144529 _144530 _144607 _144645 P p lt2 s z'''' f pat g).
Proof. exact (fun_ext (fun a : P => @lem8190199 _144529 _144530 _144607 _144645 P p lt2 s z'''' f pat g a)). Qed.
Lemma lem8190201 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8190202 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z'''' : type518 _144530 _144607 P) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) : (term879 _144529 _144530 _144607 _144645 P p lt2 s z'''' f pat g) = (term880 _144529 _144530 _144607 _144645 P p lt2 s z'''' f pat g).
Proof. exact (MK_COMB (@lem8190201 P) (@lem8190200 _144529 _144530 _144607 _144645 P p lt2 s z'''' f pat g)). Qed.
Lemma lem8190203 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z'''' : type518 _144530 _144607 P) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) : (term881 _144529 _144530 _144607 _144645 P p lt2 s z'''' f pat) = (term882 _144529 _144530 _144607 _144645 P p lt2 s z'''' f pat).
Proof. exact (fun_ext (fun g : _144530 -> _144607 => @lem8190202 _144529 _144530 _144607 _144645 P p lt2 s z'''' f pat g)). Qed.
Lemma lem8190204 {_144530 _144607 : Type'} : (@all (_144530 -> _144607)) = (@all (_144530 -> _144607)).
Proof. exact (eq_refl (@all (_144530 -> _144607))). Qed.
Lemma lem8190205 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z'''' : type518 _144530 _144607 P) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) : (term549 _144529 _144530 _144607 _144645 P p lt2 s z'''' f pat) = (term883 _144529 _144530 _144607 _144645 P p lt2 s z'''' f pat).
Proof. exact (MK_COMB (@lem8190204 _144530 _144607) (@lem8190203 _144529 _144530 _144607 _144645 P p lt2 s z'''' f pat)). Qed.
Lemma lem8190206 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z'''' : type518 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) : (term551 _144529 _144530 _144607 _144645 P p lt2 s z'''' pat) = (term884 _144529 _144530 _144607 _144645 P p lt2 s z'''' pat).
Proof. exact (fun_ext (fun f : _144530 -> _144607 => @lem8190205 _144529 _144530 _144607 _144645 P p lt2 s z'''' f pat)). Qed.
Lemma lem8190207 {_144530 _144607 : Type'} : (@all (_144530 -> _144607)) = (@all (_144530 -> _144607)).
Proof. exact (eq_refl (@all (_144530 -> _144607))). Qed.
Lemma lem8190208 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z'''' : type518 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) : (term553 _144529 _144530 _144607 _144645 P p lt2 s z'''' pat) = (term885 _144529 _144530 _144607 _144645 P p lt2 s z'''' pat).
Proof. exact (MK_COMB (@lem8190207 _144530 _144607) (@lem8190206 _144529 _144530 _144607 _144645 P p lt2 s z'''' pat)). Qed.
Lemma lem8190209 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z'''' : type518 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (h1 : term553 _144529 _144530 _144607 _144645 P p lt2 s z'''' pat) : term885 _144529 _144530 _144607 _144645 P p lt2 s z'''' pat.
Proof. exact (EQ_MP (@lem8190208 _144529 _144530 _144607 _144645 P p lt2 s z'''' pat) (@lem8188570 _144529 _144530 _144607 _144645 P p lt2 s z'''' pat h1)). Qed.
Lemma lem8190227 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (z : _144530) : (term832 _144529 _144530 _144607 P lt2 s a f g z) = (term832 _144529 _144530 _144607 P lt2 s a f g z).
Proof. exact (eq_refl (term832 _144529 _144530 _144607 P lt2 s a f g z)). Qed.
Lemma lem8190228 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term833 _144529 _144530 _144607 P lt2 s a f g) = (term833 _144529 _144530 _144607 P lt2 s a f g).
Proof. exact (fun_ext (fun z : _144530 => @lem8190227 _144529 _144530 _144607 P lt2 s a f g z)). Qed.
Lemma lem8190229 {_144530 : Type'} : (@all _144530) = (@all _144530).
Proof. exact (eq_refl (@all _144530)). Qed.
Lemma lem8190231 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term834 _144529 _144530 _144607 P lt2 s a f g) = (term834 _144529 _144530 _144607 P lt2 s a f g).
Proof. exact (MK_COMB (@lem8190229 _144530) (@lem8190228 _144529 _144530 _144607 P lt2 s a f g)). Qed.
Lemma lem8190232 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) : term834 _144529 _144530 _144607 P lt2 s a f g.
Proof. exact (EQ_MP (@lem8190231 _144529 _144530 _144607 P lt2 s a f g) (@lem8188658 _144529 _144530 _144607 P lt2 s a f g h1)). Qed.
Lemma lem8190534 {_144530 _144607 _144645 P : Type'} (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : ((term835 _144530 _144607 _144645 P pat f a) = (term835 _144530 _144607 _144645 P pat g a)) = ((term835 _144530 _144607 _144645 P pat f a) = (term835 _144530 _144607 _144645 P pat g a)).
Proof. exact (eq_refl ((term835 _144530 _144607 _144645 P pat f a) = (term835 _144530 _144607 _144645 P pat g a))). Qed.
Lemma lem8190551 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (p : type560 _144530 _144607 P) (z'''' : type518 _144530 _144607 P) (f : _144530 -> _144607) (g : _144530 -> _144607) (a : P) : (term870 _144529 _144530 _144607 P p lt2 s z'''' f g a) = (term886 _144529 _144530 _144607 P lt2 s p z'''' f g a).
Proof. exact (@lem19490 (term862 _144529 _144530 _144607 P lt2 z'''' f g s a) (term867 _144530 _144607 P p g a) (term855 _144530 _144607 P z'''' f g a)). Qed.
Lemma lem8190554 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) : (term868 _144530 _144607 P p f a) = (term868 _144530 _144607 P p f a).
Proof. exact (eq_refl (term868 _144530 _144607 P p f a)). Qed.
Lemma lem8190555 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (p : type560 _144530 _144607 P) (z'''' : type518 _144530 _144607 P) (f : _144530 -> _144607) (g : _144530 -> _144607) (a : P) : (term872 _144529 _144530 _144607 P p lt2 s z'''' f g a) = (term887 _144529 _144530 _144607 P lt2 s p z'''' f g a).
Proof. exact (MK_COMB (@lem8190554 _144530 _144607 P p f a) (@lem8190551 _144529 _144530 _144607 P lt2 s p z'''' f g a)). Qed.
Lemma lem8190562 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (p : type560 _144530 _144607 P) (z'''' : type518 _144530 _144607 P) (f : _144530 -> _144607) (g : _144530 -> _144607) (a : P) : (term887 _144529 _144530 _144607 P lt2 s p z'''' f g a) = (term888 _144529 _144530 _144607 P lt2 s p z'''' f g a).
Proof. exact (@lem19490 (term889 _144529 _144530 _144607 P p lt2 z'''' f g s a) (term867 _144530 _144607 P p f a) (term890 _144530 _144607 P p z'''' f g a)). Qed.
Lemma lem8190563 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (p : type560 _144530 _144607 P) (z'''' : type518 _144530 _144607 P) (f : _144530 -> _144607) (g : _144530 -> _144607) (a : P) : (term872 _144529 _144530 _144607 P p lt2 s z'''' f g a) = (term888 _144529 _144530 _144607 P lt2 s p z'''' f g a).
Proof. exact (TRANS (@lem8190555 _144529 _144530 _144607 P lt2 s p z'''' f g a) (@lem8190562 _144529 _144530 _144607 P lt2 s p z'''' f g a)). Qed.
Lemma lem8190564 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8190565 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (p : type560 _144530 _144607 P) (z'''' : type518 _144530 _144607 P) (f : _144530 -> _144607) (g : _144530 -> _144607) (a : P) : (term874 _144529 _144530 _144607 P p lt2 s z'''' f g a) = (term891 _144529 _144530 _144607 P lt2 s p z'''' f g a).
Proof. exact (MK_COMB (@lem8190564) (@lem8190563 _144529 _144530 _144607 P lt2 s p z'''' f g a)). Qed.
Lemma lem8190566 {_144529 _144530 _144607 _144645 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (p : type560 _144530 _144607 P) (z'''' : type518 _144530 _144607 P) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term876 _144529 _144530 _144607 _144645 P p lt2 s z'''' f pat g a) = (term892 _144529 _144530 _144607 _144645 P lt2 s p z'''' f pat g a).
Proof. exact (MK_COMB (@lem8190565 _144529 _144530 _144607 P lt2 s p z'''' f g a) (@lem8190534 _144530 _144607 _144645 P f pat g a)). Qed.
Lemma lem8190573 {_144529 _144530 _144607 _144645 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (p : type560 _144530 _144607 P) (z'''' : type518 _144530 _144607 P) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term892 _144529 _144530 _144607 _144645 P lt2 s p z'''' f pat g a) = (term893 _144529 _144530 _144607 _144645 P lt2 s p z'''' f pat g a).
Proof. exact (@lem19699 (term894 _144529 _144530 _144607 P p lt2 z'''' f g s a) (term895 _144530 _144607 P p z'''' f g a) ((term835 _144530 _144607 _144645 P pat f a) = (term835 _144530 _144607 _144645 P pat g a))). Qed.
Lemma lem8190574 {_144529 _144530 _144607 _144645 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (p : type560 _144530 _144607 P) (z'''' : type518 _144530 _144607 P) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term876 _144529 _144530 _144607 _144645 P p lt2 s z'''' f pat g a) = (term893 _144529 _144530 _144607 _144645 P lt2 s p z'''' f pat g a).
Proof. exact (TRANS (@lem8190566 _144529 _144530 _144607 _144645 P lt2 s p z'''' f pat g a) (@lem8190573 _144529 _144530 _144607 _144645 P lt2 s p z'''' f pat g a)). Qed.
Lemma lem8190575 {_144529 _144530 _144607 _144645 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (p : type560 _144530 _144607 P) (z'''' : type518 _144530 _144607 P) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) : (term878 _144529 _144530 _144607 _144645 P p lt2 s z'''' f pat g) = (term896 _144529 _144530 _144607 _144645 P lt2 s p z'''' f pat g).
Proof. exact (fun_ext (fun a : P => @lem8190574 _144529 _144530 _144607 _144645 P lt2 s p z'''' f pat g a)). Qed.
Lemma lem8190576 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8190577 {_144529 _144530 _144607 _144645 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (p : type560 _144530 _144607 P) (z'''' : type518 _144530 _144607 P) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) : (term880 _144529 _144530 _144607 _144645 P p lt2 s z'''' f pat g) = (term897 _144529 _144530 _144607 _144645 P lt2 s p z'''' f pat g).
Proof. exact (MK_COMB (@lem8190576 P) (@lem8190575 _144529 _144530 _144607 _144645 P lt2 s p z'''' f pat g)). Qed.
Lemma lem8190578 {_144529 _144530 _144607 _144645 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (p : type560 _144530 _144607 P) (z'''' : type518 _144530 _144607 P) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) : (term882 _144529 _144530 _144607 _144645 P p lt2 s z'''' f pat) = (term898 _144529 _144530 _144607 _144645 P lt2 s p z'''' f pat).
Proof. exact (fun_ext (fun g : _144530 -> _144607 => @lem8190577 _144529 _144530 _144607 _144645 P lt2 s p z'''' f pat g)). Qed.
Lemma lem8190579 {_144530 _144607 : Type'} : (@all (_144530 -> _144607)) = (@all (_144530 -> _144607)).
Proof. exact (eq_refl (@all (_144530 -> _144607))). Qed.
Lemma lem8190580 {_144529 _144530 _144607 _144645 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (p : type560 _144530 _144607 P) (z'''' : type518 _144530 _144607 P) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) : (term883 _144529 _144530 _144607 _144645 P p lt2 s z'''' f pat) = (term899 _144529 _144530 _144607 _144645 P lt2 s p z'''' f pat).
Proof. exact (MK_COMB (@lem8190579 _144530 _144607) (@lem8190578 _144529 _144530 _144607 _144645 P lt2 s p z'''' f pat)). Qed.
Lemma lem8190581 {_144529 _144530 _144607 _144645 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (p : type560 _144530 _144607 P) (z'''' : type518 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) : (term884 _144529 _144530 _144607 _144645 P p lt2 s z'''' pat) = (term900 _144529 _144530 _144607 _144645 P lt2 s p z'''' pat).
Proof. exact (fun_ext (fun f : _144530 -> _144607 => @lem8190580 _144529 _144530 _144607 _144645 P lt2 s p z'''' f pat)). Qed.
Lemma lem8190582 {_144530 _144607 : Type'} : (@all (_144530 -> _144607)) = (@all (_144530 -> _144607)).
Proof. exact (eq_refl (@all (_144530 -> _144607))). Qed.
Lemma lem8190584 {_144529 _144530 _144607 _144645 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (p : type560 _144530 _144607 P) (z'''' : type518 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) : (term885 _144529 _144530 _144607 _144645 P p lt2 s z'''' pat) = (term901 _144529 _144530 _144607 _144645 P lt2 s p z'''' pat).
Proof. exact (MK_COMB (@lem8190582 _144530 _144607) (@lem8190581 _144529 _144530 _144607 _144645 P lt2 s p z'''' pat)). Qed.
Lemma lem8190585 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z'''' : type518 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (h1 : term553 _144529 _144530 _144607 _144645 P p lt2 s z'''' pat) : term901 _144529 _144530 _144607 _144645 P lt2 s p z'''' pat.
Proof. exact (EQ_MP (@lem8190584 _144529 _144530 _144607 _144645 P lt2 s p z'''' pat) (@lem8190209 _144529 _144530 _144607 _144645 P p lt2 s z'''' pat h1)). Qed.
Lemma lem8190589 {_144530 _144607 _144645 P : Type'} (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) (h1 : term839 _144530 _144607 _144645 P f pat g a) : term839 _144530 _144607 _144645 P f pat g a.
Proof. exact (h1). Qed.
Lemma lem8190605 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (z : _144530) : (term832 _144529 _144530 _144607 P lt2 s a f g z) = (term832 _144529 _144530 _144607 P lt2 s a f g z).
Proof. exact (eq_refl (term832 _144529 _144530 _144607 P lt2 s a f g z)). Qed.
Lemma lem8190606 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term833 _144529 _144530 _144607 P lt2 s a f g) = (term833 _144529 _144530 _144607 P lt2 s a f g).
Proof. exact (fun_ext (fun z : _144530 => @lem8190605 _144529 _144530 _144607 P lt2 s a f g z)). Qed.
Lemma lem8190607 {_144530 : Type'} : (@all _144530) = (@all _144530).
Proof. exact (eq_refl (@all _144530)). Qed.
Lemma lem8190609 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term834 _144529 _144530 _144607 P lt2 s a f g) = (term834 _144529 _144530 _144607 P lt2 s a f g).
Proof. exact (MK_COMB (@lem8190607 _144530) (@lem8190606 _144529 _144530 _144607 P lt2 s a f g)). Qed.
Lemma lem8190610 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) : term834 _144529 _144530 _144607 P lt2 s a f g.
Proof. exact (EQ_MP (@lem8190609 _144529 _144530 _144607 P lt2 s a f g) (@lem8188658 _144529 _144530 _144607 P lt2 s a f g h1)). Qed.
Lemma lem8190859 {_144530 _144607 _144645 P : Type'} (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : ((term835 _144530 _144607 _144645 P e f a) = (term835 _144530 _144607 _144645 P e g a)) = ((term835 _144530 _144607 _144645 P e f a) = (term835 _144530 _144607 _144645 P e g a)).
Proof. exact (eq_refl ((term835 _144530 _144607 _144645 P e f a) = (term835 _144530 _144607 _144645 P e g a))). Qed.
Lemma lem8190876 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (p : type560 _144530 _144607 P) (z''' : type518 _144530 _144607 P) (f : _144530 -> _144607) (g : _144530 -> _144607) (a : P) : (term870 _144529 _144530 _144607 P p lt2 s z''' f g a) = (term886 _144529 _144530 _144607 P lt2 s p z''' f g a).
Proof. exact (@lem19490 (term862 _144529 _144530 _144607 P lt2 z''' f g s a) (term867 _144530 _144607 P p g a) (term855 _144530 _144607 P z''' f g a)). Qed.
Lemma lem8190879 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) : (term868 _144530 _144607 P p f a) = (term868 _144530 _144607 P p f a).
Proof. exact (eq_refl (term868 _144530 _144607 P p f a)). Qed.
Lemma lem8190880 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (p : type560 _144530 _144607 P) (z''' : type518 _144530 _144607 P) (f : _144530 -> _144607) (g : _144530 -> _144607) (a : P) : (term872 _144529 _144530 _144607 P p lt2 s z''' f g a) = (term887 _144529 _144530 _144607 P lt2 s p z''' f g a).
Proof. exact (MK_COMB (@lem8190879 _144530 _144607 P p f a) (@lem8190876 _144529 _144530 _144607 P lt2 s p z''' f g a)). Qed.
Lemma lem8190887 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (p : type560 _144530 _144607 P) (z''' : type518 _144530 _144607 P) (f : _144530 -> _144607) (g : _144530 -> _144607) (a : P) : (term887 _144529 _144530 _144607 P lt2 s p z''' f g a) = (term888 _144529 _144530 _144607 P lt2 s p z''' f g a).
Proof. exact (@lem19490 (term889 _144529 _144530 _144607 P p lt2 z''' f g s a) (term867 _144530 _144607 P p f a) (term890 _144530 _144607 P p z''' f g a)). Qed.
Lemma lem8190888 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (p : type560 _144530 _144607 P) (z''' : type518 _144530 _144607 P) (f : _144530 -> _144607) (g : _144530 -> _144607) (a : P) : (term872 _144529 _144530 _144607 P p lt2 s z''' f g a) = (term888 _144529 _144530 _144607 P lt2 s p z''' f g a).
Proof. exact (TRANS (@lem8190880 _144529 _144530 _144607 P lt2 s p z''' f g a) (@lem8190887 _144529 _144530 _144607 P lt2 s p z''' f g a)). Qed.
Lemma lem8190889 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8190890 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (p : type560 _144530 _144607 P) (z''' : type518 _144530 _144607 P) (f : _144530 -> _144607) (g : _144530 -> _144607) (a : P) : (term874 _144529 _144530 _144607 P p lt2 s z''' f g a) = (term891 _144529 _144530 _144607 P lt2 s p z''' f g a).
Proof. exact (MK_COMB (@lem8190889) (@lem8190888 _144529 _144530 _144607 P lt2 s p z''' f g a)). Qed.
Lemma lem8190891 {_144529 _144530 _144607 _144645 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (p : type560 _144530 _144607 P) (z''' : type518 _144530 _144607 P) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term876 _144529 _144530 _144607 _144645 P p lt2 s z''' f e g a) = (term892 _144529 _144530 _144607 _144645 P lt2 s p z''' f e g a).
Proof. exact (MK_COMB (@lem8190890 _144529 _144530 _144607 P lt2 s p z''' f g a) (@lem8190859 _144530 _144607 _144645 P f e g a)). Qed.
Lemma lem8190898 {_144529 _144530 _144607 _144645 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (p : type560 _144530 _144607 P) (z''' : type518 _144530 _144607 P) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term892 _144529 _144530 _144607 _144645 P lt2 s p z''' f e g a) = (term893 _144529 _144530 _144607 _144645 P lt2 s p z''' f e g a).
Proof. exact (@lem19699 (term894 _144529 _144530 _144607 P p lt2 z''' f g s a) (term895 _144530 _144607 P p z''' f g a) ((term835 _144530 _144607 _144645 P e f a) = (term835 _144530 _144607 _144645 P e g a))). Qed.
Lemma lem8190899 {_144529 _144530 _144607 _144645 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (p : type560 _144530 _144607 P) (z''' : type518 _144530 _144607 P) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term876 _144529 _144530 _144607 _144645 P p lt2 s z''' f e g a) = (term893 _144529 _144530 _144607 _144645 P lt2 s p z''' f e g a).
Proof. exact (TRANS (@lem8190891 _144529 _144530 _144607 _144645 P lt2 s p z''' f e g a) (@lem8190898 _144529 _144530 _144607 _144645 P lt2 s p z''' f e g a)). Qed.
Lemma lem8190900 {_144529 _144530 _144607 _144645 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (p : type560 _144530 _144607 P) (z''' : type518 _144530 _144607 P) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) : (term878 _144529 _144530 _144607 _144645 P p lt2 s z''' f e g) = (term896 _144529 _144530 _144607 _144645 P lt2 s p z''' f e g).
Proof. exact (fun_ext (fun a : P => @lem8190899 _144529 _144530 _144607 _144645 P lt2 s p z''' f e g a)). Qed.
Lemma lem8190901 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8190902 {_144529 _144530 _144607 _144645 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (p : type560 _144530 _144607 P) (z''' : type518 _144530 _144607 P) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) : (term880 _144529 _144530 _144607 _144645 P p lt2 s z''' f e g) = (term897 _144529 _144530 _144607 _144645 P lt2 s p z''' f e g).
Proof. exact (MK_COMB (@lem8190901 P) (@lem8190900 _144529 _144530 _144607 _144645 P lt2 s p z''' f e g)). Qed.
Lemma lem8190903 {_144529 _144530 _144607 _144645 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (p : type560 _144530 _144607 P) (z''' : type518 _144530 _144607 P) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) : (term882 _144529 _144530 _144607 _144645 P p lt2 s z''' f e) = (term898 _144529 _144530 _144607 _144645 P lt2 s p z''' f e).
Proof. exact (fun_ext (fun g : _144530 -> _144607 => @lem8190902 _144529 _144530 _144607 _144645 P lt2 s p z''' f e g)). Qed.
Lemma lem8190904 {_144530 _144607 : Type'} : (@all (_144530 -> _144607)) = (@all (_144530 -> _144607)).
Proof. exact (eq_refl (@all (_144530 -> _144607))). Qed.
Lemma lem8190905 {_144529 _144530 _144607 _144645 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (p : type560 _144530 _144607 P) (z''' : type518 _144530 _144607 P) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) : (term883 _144529 _144530 _144607 _144645 P p lt2 s z''' f e) = (term899 _144529 _144530 _144607 _144645 P lt2 s p z''' f e).
Proof. exact (MK_COMB (@lem8190904 _144530 _144607) (@lem8190903 _144529 _144530 _144607 _144645 P lt2 s p z''' f e)). Qed.
Lemma lem8190906 {_144529 _144530 _144607 _144645 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (p : type560 _144530 _144607 P) (z''' : type518 _144530 _144607 P) (e : type564 _144530 _144607 _144645 P) : (term884 _144529 _144530 _144607 _144645 P p lt2 s z''' e) = (term900 _144529 _144530 _144607 _144645 P lt2 s p z''' e).
Proof. exact (fun_ext (fun f : _144530 -> _144607 => @lem8190905 _144529 _144530 _144607 _144645 P lt2 s p z''' f e)). Qed.
Lemma lem8190907 {_144530 _144607 : Type'} : (@all (_144530 -> _144607)) = (@all (_144530 -> _144607)).
Proof. exact (eq_refl (@all (_144530 -> _144607))). Qed.
Lemma lem8190909 {_144529 _144530 _144607 _144645 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (p : type560 _144530 _144607 P) (z''' : type518 _144530 _144607 P) (e : type564 _144530 _144607 _144645 P) : (term885 _144529 _144530 _144607 _144645 P p lt2 s z''' e) = (term901 _144529 _144530 _144607 _144645 P lt2 s p z''' e).
Proof. exact (MK_COMB (@lem8190907 _144530 _144607) (@lem8190906 _144529 _144530 _144607 _144645 P lt2 s p z''' e)). Qed.
Lemma lem8190910 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z''' : type518 _144530 _144607 P) (e : type564 _144530 _144607 _144645 P) (h1 : term553 _144529 _144530 _144607 _144645 P p lt2 s z''' e) : term901 _144529 _144530 _144607 _144645 P lt2 s p z''' e.
Proof. exact (EQ_MP (@lem8190909 _144529 _144530 _144607 _144645 P lt2 s p z''' e) (@lem8189992 _144529 _144530 _144607 _144645 P p lt2 s z''' e h1)). Qed.
Lemma lem8190967 {_144530 _144607 _144645 P : Type'} (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) (h1 : term839 _144530 _144607 _144645 P f e g a) : term839 _144530 _144607 _144645 P f e g a.
Proof. exact (h1). Qed.
Lemma lem8190968 {_144529 _144530 _144607 P : Type'} (_108729 : _144530) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) : term902 _144529 _144530 _144607 P lt2 s a f g _108729.
Proof. exact (@lem8190232 _144529 _144530 _144607 P lt2 s a f g h1 _108729). Qed.
Lemma lem8190969 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (_108729 : _144530) : (term902 _144529 _144530 _144607 P lt2 s a f g _108729) = (term832 _144529 _144530 _144607 P lt2 s a f g _108729).
Proof. exact (eq_refl (term902 _144529 _144530 _144607 P lt2 s a f g _108729)). Qed.
Lemma lem8191007 {_144529 _144530 _144607 _144645 P : Type'} (_108742 : _144530 -> _144607) (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z'''' : type518 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (h1 : term553 _144529 _144530 _144607 _144645 P p lt2 s z'''' pat) : term903 _144529 _144530 _144607 _144645 P lt2 s p z'''' pat _108742.
Proof. exact (@lem8190585 _144529 _144530 _144607 _144645 P p lt2 s z'''' pat h1 _108742). Qed.
Lemma lem8191008 {_144529 _144530 _144607 _144645 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (p : type560 _144530 _144607 P) (z'''' : type518 _144530 _144607 P) (_108742 : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) : (term903 _144529 _144530 _144607 _144645 P lt2 s p z'''' pat _108742) = (term899 _144529 _144530 _144607 _144645 P lt2 s p z'''' _108742 pat).
Proof. exact (eq_refl (term903 _144529 _144530 _144607 _144645 P lt2 s p z'''' pat _108742)). Qed.
Lemma lem8191009 {_144529 _144530 _144607 _144645 P : Type'} (_108742 : _144530 -> _144607) (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z'''' : type518 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (h1 : term553 _144529 _144530 _144607 _144645 P p lt2 s z'''' pat) : term899 _144529 _144530 _144607 _144645 P lt2 s p z'''' _108742 pat.
Proof. exact (EQ_MP (@lem8191008 _144529 _144530 _144607 _144645 P lt2 s p z'''' _108742 pat) (@lem8191007 _144529 _144530 _144607 _144645 P _108742 p lt2 s z'''' pat h1)). Qed.
Lemma lem8191010 {_144529 _144530 _144607 _144645 P : Type'} (_108742 : _144530 -> _144607) (_108743 : _144530 -> _144607) (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z'''' : type518 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (h1 : term553 _144529 _144530 _144607 _144645 P p lt2 s z'''' pat) : term904 _144529 _144530 _144607 _144645 P lt2 s p z'''' _108742 pat _108743.
Proof. exact (@lem8191009 _144529 _144530 _144607 _144645 P _108742 p lt2 s z'''' pat h1 _108743). Qed.
Lemma lem8191011 {_144529 _144530 _144607 _144645 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (p : type560 _144530 _144607 P) (z'''' : type518 _144530 _144607 P) (_108742 : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (_108743 : _144530 -> _144607) : (term904 _144529 _144530 _144607 _144645 P lt2 s p z'''' _108742 pat _108743) = (term897 _144529 _144530 _144607 _144645 P lt2 s p z'''' _108742 pat _108743).
Proof. exact (eq_refl (term904 _144529 _144530 _144607 _144645 P lt2 s p z'''' _108742 pat _108743)). Qed.
Lemma lem8191012 {_144529 _144530 _144607 _144645 P : Type'} (_108742 : _144530 -> _144607) (_108743 : _144530 -> _144607) (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z'''' : type518 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (h1 : term553 _144529 _144530 _144607 _144645 P p lt2 s z'''' pat) : term897 _144529 _144530 _144607 _144645 P lt2 s p z'''' _108742 pat _108743.
Proof. exact (EQ_MP (@lem8191011 _144529 _144530 _144607 _144645 P lt2 s p z'''' _108742 pat _108743) (@lem8191010 _144529 _144530 _144607 _144645 P _108742 _108743 p lt2 s z'''' pat h1)). Qed.
Lemma lem8191013 {_144529 _144530 _144607 _144645 P : Type'} (_108742 : _144530 -> _144607) (_108743 : _144530 -> _144607) (_108744 : P) (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z'''' : type518 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (h1 : term553 _144529 _144530 _144607 _144645 P p lt2 s z'''' pat) : term905 _144529 _144530 _144607 _144645 P lt2 s p z'''' _108742 pat _108743 _108744.
Proof. exact (@lem8191012 _144529 _144530 _144607 _144645 P _108742 _108743 p lt2 s z'''' pat h1 _108744). Qed.
Lemma lem8191014 {_144529 _144530 _144607 _144645 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (p : type560 _144530 _144607 P) (z'''' : type518 _144530 _144607 P) (_108742 : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (_108743 : _144530 -> _144607) (_108744 : P) : (term905 _144529 _144530 _144607 _144645 P lt2 s p z'''' _108742 pat _108743 _108744) = (term893 _144529 _144530 _144607 _144645 P lt2 s p z'''' _108742 pat _108743 _108744).
Proof. exact (eq_refl (term905 _144529 _144530 _144607 _144645 P lt2 s p z'''' _108742 pat _108743 _108744)). Qed.
Lemma lem8191015 {_144529 _144530 _144607 _144645 P : Type'} (_108742 : _144530 -> _144607) (_108743 : _144530 -> _144607) (_108744 : P) (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z'''' : type518 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (h1 : term553 _144529 _144530 _144607 _144645 P p lt2 s z'''' pat) : term893 _144529 _144530 _144607 _144645 P lt2 s p z'''' _108742 pat _108743 _108744.
Proof. exact (EQ_MP (@lem8191014 _144529 _144530 _144607 _144645 P lt2 s p z'''' _108742 pat _108743 _108744) (@lem8191013 _144529 _144530 _144607 _144645 P _108742 _108743 _108744 p lt2 s z'''' pat h1)). Qed.
Lemma lem8191016 {_144529 _144530 _144607 P : Type'} (_108745 : _144530) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) : term902 _144529 _144530 _144607 P lt2 s a f g _108745.
Proof. exact (@lem8190610 _144529 _144530 _144607 P lt2 s a f g h1 _108745). Qed.
Lemma lem8191017 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (_108745 : _144530) : (term902 _144529 _144530 _144607 P lt2 s a f g _108745) = (term832 _144529 _144530 _144607 P lt2 s a f g _108745).
Proof. exact (eq_refl (term902 _144529 _144530 _144607 P lt2 s a f g _108745)). Qed.
Lemma lem8191046 {_144529 _144530 _144607 _144645 P : Type'} (_108755 : _144530 -> _144607) (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z''' : type518 _144530 _144607 P) (e : type564 _144530 _144607 _144645 P) (h1 : term553 _144529 _144530 _144607 _144645 P p lt2 s z''' e) : term903 _144529 _144530 _144607 _144645 P lt2 s p z''' e _108755.
Proof. exact (@lem8190910 _144529 _144530 _144607 _144645 P p lt2 s z''' e h1 _108755). Qed.
Lemma lem8191047 {_144529 _144530 _144607 _144645 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (p : type560 _144530 _144607 P) (z''' : type518 _144530 _144607 P) (_108755 : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) : (term903 _144529 _144530 _144607 _144645 P lt2 s p z''' e _108755) = (term899 _144529 _144530 _144607 _144645 P lt2 s p z''' _108755 e).
Proof. exact (eq_refl (term903 _144529 _144530 _144607 _144645 P lt2 s p z''' e _108755)). Qed.
Lemma lem8191048 {_144529 _144530 _144607 _144645 P : Type'} (_108755 : _144530 -> _144607) (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z''' : type518 _144530 _144607 P) (e : type564 _144530 _144607 _144645 P) (h1 : term553 _144529 _144530 _144607 _144645 P p lt2 s z''' e) : term899 _144529 _144530 _144607 _144645 P lt2 s p z''' _108755 e.
Proof. exact (EQ_MP (@lem8191047 _144529 _144530 _144607 _144645 P lt2 s p z''' _108755 e) (@lem8191046 _144529 _144530 _144607 _144645 P _108755 p lt2 s z''' e h1)). Qed.
Lemma lem8191049 {_144529 _144530 _144607 _144645 P : Type'} (_108755 : _144530 -> _144607) (_108756 : _144530 -> _144607) (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z''' : type518 _144530 _144607 P) (e : type564 _144530 _144607 _144645 P) (h1 : term553 _144529 _144530 _144607 _144645 P p lt2 s z''' e) : term904 _144529 _144530 _144607 _144645 P lt2 s p z''' _108755 e _108756.
Proof. exact (@lem8191048 _144529 _144530 _144607 _144645 P _108755 p lt2 s z''' e h1 _108756). Qed.
Lemma lem8191050 {_144529 _144530 _144607 _144645 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (p : type560 _144530 _144607 P) (z''' : type518 _144530 _144607 P) (_108755 : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (_108756 : _144530 -> _144607) : (term904 _144529 _144530 _144607 _144645 P lt2 s p z''' _108755 e _108756) = (term897 _144529 _144530 _144607 _144645 P lt2 s p z''' _108755 e _108756).
Proof. exact (eq_refl (term904 _144529 _144530 _144607 _144645 P lt2 s p z''' _108755 e _108756)). Qed.
Lemma lem8191051 {_144529 _144530 _144607 _144645 P : Type'} (_108755 : _144530 -> _144607) (_108756 : _144530 -> _144607) (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z''' : type518 _144530 _144607 P) (e : type564 _144530 _144607 _144645 P) (h1 : term553 _144529 _144530 _144607 _144645 P p lt2 s z''' e) : term897 _144529 _144530 _144607 _144645 P lt2 s p z''' _108755 e _108756.
Proof. exact (EQ_MP (@lem8191050 _144529 _144530 _144607 _144645 P lt2 s p z''' _108755 e _108756) (@lem8191049 _144529 _144530 _144607 _144645 P _108755 _108756 p lt2 s z''' e h1)). Qed.
Lemma lem8191052 {_144529 _144530 _144607 _144645 P : Type'} (_108755 : _144530 -> _144607) (_108756 : _144530 -> _144607) (_108757 : P) (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z''' : type518 _144530 _144607 P) (e : type564 _144530 _144607 _144645 P) (h1 : term553 _144529 _144530 _144607 _144645 P p lt2 s z''' e) : term905 _144529 _144530 _144607 _144645 P lt2 s p z''' _108755 e _108756 _108757.
Proof. exact (@lem8191051 _144529 _144530 _144607 _144645 P _108755 _108756 p lt2 s z''' e h1 _108757). Qed.
Lemma lem8191053 {_144529 _144530 _144607 _144645 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (p : type560 _144530 _144607 P) (z''' : type518 _144530 _144607 P) (_108755 : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (_108756 : _144530 -> _144607) (_108757 : P) : (term905 _144529 _144530 _144607 _144645 P lt2 s p z''' _108755 e _108756 _108757) = (term893 _144529 _144530 _144607 _144645 P lt2 s p z''' _108755 e _108756 _108757).
Proof. exact (eq_refl (term905 _144529 _144530 _144607 _144645 P lt2 s p z''' _108755 e _108756 _108757)). Qed.
Lemma lem8191054 {_144529 _144530 _144607 _144645 P : Type'} (_108755 : _144530 -> _144607) (_108756 : _144530 -> _144607) (_108757 : P) (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z''' : type518 _144530 _144607 P) (e : type564 _144530 _144607 _144645 P) (h1 : term553 _144529 _144530 _144607 _144645 P p lt2 s z''' e) : term893 _144529 _144530 _144607 _144645 P lt2 s p z''' _108755 e _108756 _108757.
Proof. exact (EQ_MP (@lem8191053 _144529 _144530 _144607 _144645 P lt2 s p z''' _108755 e _108756 _108757) (@lem8191052 _144529 _144530 _144607 _144645 P _108755 _108756 _108757 p lt2 s z''' e h1)). Qed.
Lemma lem8191064 {_144529 _144530 _144607 _144645 P : Type'} (_108742 : _144530 -> _144607) (_108743 : _144530 -> _144607) (_108744 : P) (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z'''' : type518 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (h1 : term553 _144529 _144530 _144607 _144645 P p lt2 s z'''' pat) : term906 _144530 _144607 _144645 P p z'''' _108742 pat _108743 _108744.
Proof. exact (proj2 (@lem8191015 _144529 _144530 _144607 _144645 P _108742 _108743 _108744 p lt2 s z'''' pat h1)). Qed.
Lemma lem8191065 {_144529 _144530 _144607 _144645 P : Type'} (_108742 : _144530 -> _144607) (_108743 : _144530 -> _144607) (_108744 : P) (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z'''' : type518 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (h1 : term553 _144529 _144530 _144607 _144645 P p lt2 s z'''' pat) : term907 _144529 _144530 _144607 _144645 P p lt2 z'''' s _108742 pat _108743 _108744.
Proof. exact (proj1 (@lem8191015 _144529 _144530 _144607 _144645 P _108742 _108743 _108744 p lt2 s z'''' pat h1)). Qed.
Lemma lem8191080 {_144529 _144530 _144607 _144645 P : Type'} (_108755 : _144530 -> _144607) (_108756 : _144530 -> _144607) (_108757 : P) (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z''' : type518 _144530 _144607 P) (e : type564 _144530 _144607 _144645 P) (h1 : term553 _144529 _144530 _144607 _144645 P p lt2 s z''' e) : term906 _144530 _144607 _144645 P p z''' _108755 e _108756 _108757.
Proof. exact (proj2 (@lem8191054 _144529 _144530 _144607 _144645 P _108755 _108756 _108757 p lt2 s z''' e h1)). Qed.
Lemma lem8191081 {_144529 _144530 _144607 _144645 P : Type'} (_108755 : _144530 -> _144607) (_108756 : _144530 -> _144607) (_108757 : P) (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z''' : type518 _144530 _144607 P) (e : type564 _144530 _144607 _144645 P) (h1 : term553 _144529 _144530 _144607 _144645 P p lt2 s z''' e) : term907 _144529 _144530 _144607 _144645 P p lt2 z''' s _108755 e _108756 _108757.
Proof. exact (proj1 (@lem8191054 _144529 _144530 _144607 _144645 P _108755 _108756 _108757 p lt2 s z''' e h1)). Qed.
Lemma lem8191101 {_144529 _144530 _144607 P : Type'} (_108729 : _144530) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) : term832 _144529 _144530 _144607 P lt2 s a f g _108729.
Proof. exact (EQ_MP (@lem8190969 _144529 _144530 _144607 P lt2 s a f g _108729) (@lem8190968 _144529 _144530 _144607 P _108729 lt2 s a f g h1)). Qed.
Lemma lem8191103 {_144530 _144607 _144645 P : Type'} (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) (h1 : term839 _144530 _144607 _144645 P f pat g a) : term839 _144530 _144607 _144645 P f pat g a.
Proof. exact (h1). Qed.
Lemma lem8191107 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (z'''' : type518 _144530 _144607 P) (s : P -> _144529) (_108742 : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (_108743 : _144530 -> _144607) (_108744 : P) : (term907 _144529 _144530 _144607 _144645 P p lt2 z'''' s _108742 pat _108743 _108744) = (term908 _144529 _144530 _144607 _144645 P p lt2 z'''' s _108742 pat _108743 _108744).
Proof. exact (@lem8183609 (term867 _144530 _144607 P p _108742 _108744) (term889 _144529 _144530 _144607 P p lt2 z'''' _108742 _108743 s _108744) ((term835 _144530 _144607 _144645 P pat _108742 _108744) = (term835 _144530 _144607 _144645 P pat _108743 _108744))). Qed.
Lemma lem8191114 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (z'''' : type518 _144530 _144607 P) (s : P -> _144529) (_108742 : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (_108743 : _144530 -> _144607) (_108744 : P) : (term909 _144529 _144530 _144607 _144645 P p lt2 z'''' s _108742 pat _108743 _108744) = (term910 _144529 _144530 _144607 _144645 P p lt2 z'''' s _108742 pat _108743 _108744).
Proof. exact (@lem8183609 (term867 _144530 _144607 P p _108743 _108744) (term862 _144529 _144530 _144607 P lt2 z'''' _108742 _108743 s _108744) ((term835 _144530 _144607 _144645 P pat _108742 _108744) = (term835 _144530 _144607 _144645 P pat _108743 _108744))). Qed.
Lemma lem8191115 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (_108742 : _144530 -> _144607) (_108744 : P) : (term868 _144530 _144607 P p _108742 _108744) = (term868 _144530 _144607 P p _108742 _108744).
Proof. exact (eq_refl (term868 _144530 _144607 P p _108742 _108744)). Qed.
Lemma lem8191118 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (z'''' : type518 _144530 _144607 P) (s : P -> _144529) (_108742 : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (_108743 : _144530 -> _144607) (_108744 : P) : (term908 _144529 _144530 _144607 _144645 P p lt2 z'''' s _108742 pat _108743 _108744) = (term911 _144529 _144530 _144607 _144645 P p lt2 z'''' s _108742 pat _108743 _108744).
Proof. exact (MK_COMB (@lem8191115 _144530 _144607 P p _108742 _108744) (@lem8191114 _144529 _144530 _144607 _144645 P p lt2 z'''' s _108742 pat _108743 _108744)). Qed.
Lemma lem8191120 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (z'''' : type518 _144530 _144607 P) (s : P -> _144529) (_108742 : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (_108743 : _144530 -> _144607) (_108744 : P) : (term907 _144529 _144530 _144607 _144645 P p lt2 z'''' s _108742 pat _108743 _108744) = (term911 _144529 _144530 _144607 _144645 P p lt2 z'''' s _108742 pat _108743 _108744).
Proof. exact (TRANS (@lem8191107 _144529 _144530 _144607 _144645 P p lt2 z'''' s _108742 pat _108743 _108744) (@lem8191118 _144529 _144530 _144607 _144645 P p lt2 z'''' s _108742 pat _108743 _108744)). Qed.
Lemma lem8191121 {_144529 _144530 _144607 _144645 P : Type'} (_108742 : _144530 -> _144607) (_108743 : _144530 -> _144607) (_108744 : P) (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z'''' : type518 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (h1 : term553 _144529 _144530 _144607 _144645 P p lt2 s z'''' pat) : term911 _144529 _144530 _144607 _144645 P p lt2 z'''' s _108742 pat _108743 _108744.
Proof. exact (EQ_MP (@lem8191120 _144529 _144530 _144607 _144645 P p lt2 z'''' s _108742 pat _108743 _108744) (@lem8191065 _144529 _144530 _144607 _144645 P _108742 _108743 _108744 p lt2 s z'''' pat h1)). Qed.
Lemma lem8191125 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (z'''' : type518 _144530 _144607 P) (_108742 : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (_108743 : _144530 -> _144607) (_108744 : P) : (term906 _144530 _144607 _144645 P p z'''' _108742 pat _108743 _108744) = (term912 _144530 _144607 _144645 P p z'''' _108742 pat _108743 _108744).
Proof. exact (@lem8183609 (term867 _144530 _144607 P p _108742 _108744) (term890 _144530 _144607 P p z'''' _108742 _108743 _108744) ((term835 _144530 _144607 _144645 P pat _108742 _108744) = (term835 _144530 _144607 _144645 P pat _108743 _108744))). Qed.
Lemma lem8191132 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (z'''' : type518 _144530 _144607 P) (_108742 : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (_108743 : _144530 -> _144607) (_108744 : P) : (term913 _144530 _144607 _144645 P p z'''' _108742 pat _108743 _108744) = (term914 _144530 _144607 _144645 P p z'''' _108742 pat _108743 _108744).
Proof. exact (@lem8183609 (term867 _144530 _144607 P p _108743 _108744) (term855 _144530 _144607 P z'''' _108742 _108743 _108744) ((term835 _144530 _144607 _144645 P pat _108742 _108744) = (term835 _144530 _144607 _144645 P pat _108743 _108744))). Qed.
Lemma lem8191133 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (_108742 : _144530 -> _144607) (_108744 : P) : (term868 _144530 _144607 P p _108742 _108744) = (term868 _144530 _144607 P p _108742 _108744).
Proof. exact (eq_refl (term868 _144530 _144607 P p _108742 _108744)). Qed.
Lemma lem8191136 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (z'''' : type518 _144530 _144607 P) (_108742 : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (_108743 : _144530 -> _144607) (_108744 : P) : (term912 _144530 _144607 _144645 P p z'''' _108742 pat _108743 _108744) = (term915 _144530 _144607 _144645 P p z'''' _108742 pat _108743 _108744).
Proof. exact (MK_COMB (@lem8191133 _144530 _144607 P p _108742 _108744) (@lem8191132 _144530 _144607 _144645 P p z'''' _108742 pat _108743 _108744)). Qed.
Lemma lem8191138 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (z'''' : type518 _144530 _144607 P) (_108742 : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (_108743 : _144530 -> _144607) (_108744 : P) : (term906 _144530 _144607 _144645 P p z'''' _108742 pat _108743 _108744) = (term915 _144530 _144607 _144645 P p z'''' _108742 pat _108743 _108744).
Proof. exact (TRANS (@lem8191125 _144530 _144607 _144645 P p z'''' _108742 pat _108743 _108744) (@lem8191136 _144530 _144607 _144645 P p z'''' _108742 pat _108743 _108744)). Qed.
Lemma lem8191139 {_144529 _144530 _144607 _144645 P : Type'} (_108742 : _144530 -> _144607) (_108743 : _144530 -> _144607) (_108744 : P) (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z'''' : type518 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (h1 : term553 _144529 _144530 _144607 _144645 P p lt2 s z'''' pat) : term915 _144530 _144607 _144645 P p z'''' _108742 pat _108743 _108744.
Proof. exact (EQ_MP (@lem8191138 _144530 _144607 _144645 P p z'''' _108742 pat _108743 _108744) (@lem8191064 _144529 _144530 _144607 _144645 P _108742 _108743 _108744 p lt2 s z'''' pat h1)). Qed.
Lemma lem8191489 {_144529 _144530 _144607 P : Type'} (_108745 : _144530) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) : term832 _144529 _144530 _144607 P lt2 s a f g _108745.
Proof. exact (EQ_MP (@lem8191017 _144529 _144530 _144607 P lt2 s a f g _108745) (@lem8191016 _144529 _144530 _144607 P _108745 lt2 s a f g h1)). Qed.
Lemma lem8191491 {_144530 _144607 _144645 P : Type'} (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) (h1 : term839 _144530 _144607 _144645 P f e g a) : term839 _144530 _144607 _144645 P f e g a.
Proof. exact (h1). Qed.
Lemma lem8191531 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (z''' : type518 _144530 _144607 P) (s : P -> _144529) (_108755 : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (_108756 : _144530 -> _144607) (_108757 : P) : (term907 _144529 _144530 _144607 _144645 P p lt2 z''' s _108755 e _108756 _108757) = (term908 _144529 _144530 _144607 _144645 P p lt2 z''' s _108755 e _108756 _108757).
Proof. exact (@lem8183609 (term867 _144530 _144607 P p _108755 _108757) (term889 _144529 _144530 _144607 P p lt2 z''' _108755 _108756 s _108757) ((term835 _144530 _144607 _144645 P e _108755 _108757) = (term835 _144530 _144607 _144645 P e _108756 _108757))). Qed.
Lemma lem8191538 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (z''' : type518 _144530 _144607 P) (s : P -> _144529) (_108755 : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (_108756 : _144530 -> _144607) (_108757 : P) : (term909 _144529 _144530 _144607 _144645 P p lt2 z''' s _108755 e _108756 _108757) = (term910 _144529 _144530 _144607 _144645 P p lt2 z''' s _108755 e _108756 _108757).
Proof. exact (@lem8183609 (term867 _144530 _144607 P p _108756 _108757) (term862 _144529 _144530 _144607 P lt2 z''' _108755 _108756 s _108757) ((term835 _144530 _144607 _144645 P e _108755 _108757) = (term835 _144530 _144607 _144645 P e _108756 _108757))). Qed.
Lemma lem8191539 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (_108755 : _144530 -> _144607) (_108757 : P) : (term868 _144530 _144607 P p _108755 _108757) = (term868 _144530 _144607 P p _108755 _108757).
Proof. exact (eq_refl (term868 _144530 _144607 P p _108755 _108757)). Qed.
Lemma lem8191542 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (z''' : type518 _144530 _144607 P) (s : P -> _144529) (_108755 : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (_108756 : _144530 -> _144607) (_108757 : P) : (term908 _144529 _144530 _144607 _144645 P p lt2 z''' s _108755 e _108756 _108757) = (term911 _144529 _144530 _144607 _144645 P p lt2 z''' s _108755 e _108756 _108757).
Proof. exact (MK_COMB (@lem8191539 _144530 _144607 P p _108755 _108757) (@lem8191538 _144529 _144530 _144607 _144645 P p lt2 z''' s _108755 e _108756 _108757)). Qed.
Lemma lem8191544 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (z''' : type518 _144530 _144607 P) (s : P -> _144529) (_108755 : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (_108756 : _144530 -> _144607) (_108757 : P) : (term907 _144529 _144530 _144607 _144645 P p lt2 z''' s _108755 e _108756 _108757) = (term911 _144529 _144530 _144607 _144645 P p lt2 z''' s _108755 e _108756 _108757).
Proof. exact (TRANS (@lem8191531 _144529 _144530 _144607 _144645 P p lt2 z''' s _108755 e _108756 _108757) (@lem8191542 _144529 _144530 _144607 _144645 P p lt2 z''' s _108755 e _108756 _108757)). Qed.
Lemma lem8191545 {_144529 _144530 _144607 _144645 P : Type'} (_108755 : _144530 -> _144607) (_108756 : _144530 -> _144607) (_108757 : P) (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z''' : type518 _144530 _144607 P) (e : type564 _144530 _144607 _144645 P) (h1 : term553 _144529 _144530 _144607 _144645 P p lt2 s z''' e) : term911 _144529 _144530 _144607 _144645 P p lt2 z''' s _108755 e _108756 _108757.
Proof. exact (EQ_MP (@lem8191544 _144529 _144530 _144607 _144645 P p lt2 z''' s _108755 e _108756 _108757) (@lem8191081 _144529 _144530 _144607 _144645 P _108755 _108756 _108757 p lt2 s z''' e h1)). Qed.
Lemma lem8191549 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (z''' : type518 _144530 _144607 P) (_108755 : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (_108756 : _144530 -> _144607) (_108757 : P) : (term906 _144530 _144607 _144645 P p z''' _108755 e _108756 _108757) = (term912 _144530 _144607 _144645 P p z''' _108755 e _108756 _108757).
Proof. exact (@lem8183609 (term867 _144530 _144607 P p _108755 _108757) (term890 _144530 _144607 P p z''' _108755 _108756 _108757) ((term835 _144530 _144607 _144645 P e _108755 _108757) = (term835 _144530 _144607 _144645 P e _108756 _108757))). Qed.
Lemma lem8191556 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (z''' : type518 _144530 _144607 P) (_108755 : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (_108756 : _144530 -> _144607) (_108757 : P) : (term913 _144530 _144607 _144645 P p z''' _108755 e _108756 _108757) = (term914 _144530 _144607 _144645 P p z''' _108755 e _108756 _108757).
Proof. exact (@lem8183609 (term867 _144530 _144607 P p _108756 _108757) (term855 _144530 _144607 P z''' _108755 _108756 _108757) ((term835 _144530 _144607 _144645 P e _108755 _108757) = (term835 _144530 _144607 _144645 P e _108756 _108757))). Qed.
Lemma lem8191557 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (_108755 : _144530 -> _144607) (_108757 : P) : (term868 _144530 _144607 P p _108755 _108757) = (term868 _144530 _144607 P p _108755 _108757).
Proof. exact (eq_refl (term868 _144530 _144607 P p _108755 _108757)). Qed.
Lemma lem8191560 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (z''' : type518 _144530 _144607 P) (_108755 : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (_108756 : _144530 -> _144607) (_108757 : P) : (term912 _144530 _144607 _144645 P p z''' _108755 e _108756 _108757) = (term915 _144530 _144607 _144645 P p z''' _108755 e _108756 _108757).
Proof. exact (MK_COMB (@lem8191557 _144530 _144607 P p _108755 _108757) (@lem8191556 _144530 _144607 _144645 P p z''' _108755 e _108756 _108757)). Qed.
Lemma lem8191562 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (z''' : type518 _144530 _144607 P) (_108755 : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (_108756 : _144530 -> _144607) (_108757 : P) : (term906 _144530 _144607 _144645 P p z''' _108755 e _108756 _108757) = (term915 _144530 _144607 _144645 P p z''' _108755 e _108756 _108757).
Proof. exact (TRANS (@lem8191549 _144530 _144607 _144645 P p z''' _108755 e _108756 _108757) (@lem8191560 _144530 _144607 _144645 P p z''' _108755 e _108756 _108757)). Qed.
Lemma lem8191563 {_144529 _144530 _144607 _144645 P : Type'} (_108755 : _144530 -> _144607) (_108756 : _144530 -> _144607) (_108757 : P) (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z''' : type518 _144530 _144607 P) (e : type564 _144530 _144607 _144645 P) (h1 : term553 _144529 _144530 _144607 _144645 P p lt2 s z''' e) : term915 _144530 _144607 _144645 P p z''' _108755 e _108756 _108757.
Proof. exact (EQ_MP (@lem8191562 _144530 _144607 _144645 P p z''' _108755 e _108756 _108757) (@lem8191080 _144529 _144530 _144607 _144645 P _108755 _108756 _108757 p lt2 s z''' e h1)). Qed.
Lemma lem8192110 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) (h1 : p f a) : term822 _144530 _144607 P p f a.
Proof. exact (EQ_MP (@lem8188587 _144530 _144607 P p f a) (@lem8188484 _144530 _144607 P p f a h1)). Qed.
Lemma lem8192111 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) (h1 : p f a) : term916 _144530 _144607 P p f a.
Proof. exact (fun h0 : term867 _144530 _144607 P p f a => @lem8192110 _144530 _144607 P p f a h1). Qed.
Lemma lem8192113 (p : Prop) : (term57 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8192114 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) : (term916 _144530 _144607 P p f a) = (term822 _144530 _144607 P p f a).
Proof. exact (@lem8192113 (term822 _144530 _144607 P p f a)). Qed.
Lemma lem8192115 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) (h1 : p f a) : term822 _144530 _144607 P p f a.
Proof. exact (EQ_MP (@lem8192114 _144530 _144607 P p f a) (@lem8192111 _144530 _144607 P p f a h1)). Qed.
Lemma lem8192117 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : p g a) : term822 _144530 _144607 P p g a.
Proof. exact (EQ_MP (@lem8188605 _144530 _144607 P p g a) (@lem8188490 _144530 _144607 P p g a h1)). Qed.
Lemma lem8192118 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : p g a) : term916 _144530 _144607 P p g a.
Proof. exact (fun h0 : term867 _144530 _144607 P p g a => @lem8192117 _144530 _144607 P p g a h1). Qed.
Lemma lem8192120 (p : Prop) : (term57 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8192121 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term916 _144530 _144607 P p g a) = (term822 _144530 _144607 P p g a).
Proof. exact (@lem8192120 (term822 _144530 _144607 P p g a)). Qed.
Lemma lem8192122 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : p g a) : term822 _144530 _144607 P p g a.
Proof. exact (EQ_MP (@lem8192121 _144530 _144607 P p g a) (@lem8192118 _144530 _144607 P p g a h1)). Qed.
Lemma lem8192124 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) (h1 : p f a) : term822 _144530 _144607 P p f a.
Proof. exact (EQ_MP (@lem8188587 _144530 _144607 P p f a) (@lem8188484 _144530 _144607 P p f a h1)). Qed.
Lemma lem8192125 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) (h1 : p f a) : term916 _144530 _144607 P p f a.
Proof. exact (fun h0 : term867 _144530 _144607 P p f a => @lem8192124 _144530 _144607 P p f a h1). Qed.
Lemma lem8192127 (p : Prop) : (term57 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8192128 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) : (term916 _144530 _144607 P p f a) = (term822 _144530 _144607 P p f a).
Proof. exact (@lem8192127 (term822 _144530 _144607 P p f a)). Qed.
Lemma lem8192129 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) (h1 : p f a) : term822 _144530 _144607 P p f a.
Proof. exact (EQ_MP (@lem8192128 _144530 _144607 P p f a) (@lem8192125 _144530 _144607 P p f a h1)). Qed.
Lemma lem8192131 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : p g a) : term822 _144530 _144607 P p g a.
Proof. exact (EQ_MP (@lem8188605 _144530 _144607 P p g a) (@lem8188490 _144530 _144607 P p g a h1)). Qed.
Lemma lem8192132 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : p g a) : term916 _144530 _144607 P p g a.
Proof. exact (fun h0 : term867 _144530 _144607 P p g a => @lem8192131 _144530 _144607 P p g a h1). Qed.
Lemma lem8192134 (p : Prop) : (term57 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8192135 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term916 _144530 _144607 P p g a) = (term822 _144530 _144607 P p g a).
Proof. exact (@lem8192134 (term822 _144530 _144607 P p g a)). Qed.
Lemma lem8192136 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : p g a) : term822 _144530 _144607 P p g a.
Proof. exact (EQ_MP (@lem8192135 _144530 _144607 P p g a) (@lem8192132 _144530 _144607 P p g a h1)). Qed.
Lemma lem8192139 {_144530 _144607 _144645 P : Type'} (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) (h1 : term839 _144530 _144607 _144645 P f pat g a) : term839 _144530 _144607 _144645 P f pat g a.
Proof. exact (h1). Qed.
Lemma lem8192140 {_144530 _144607 _144645 P : Type'} (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) (h1 : term839 _144530 _144607 _144645 P f pat g a) : term917 _144530 _144607 _144645 P f pat g a.
Proof. exact (fun h0 : (term835 _144530 _144607 _144645 P pat f a) = (term835 _144530 _144607 _144645 P pat g a) => @lem8192139 _144530 _144607 _144645 P f pat g a h1). Qed.
Lemma lem8192142 (p : Prop) : (term918 p) = (~ p).
Proof. exact (EQ_MP (@lem21028 p) (@lem21107 p)). Qed.
Lemma lem8192143 {_144530 _144607 _144645 P : Type'} (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term917 _144530 _144607 _144645 P f pat g a) = (term839 _144530 _144607 _144645 P f pat g a).
Proof. exact (@lem8192142 ((term835 _144530 _144607 _144645 P pat f a) = (term835 _144530 _144607 _144645 P pat g a))). Qed.
Lemma lem8192144 {_144530 _144607 _144645 P : Type'} (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) (h1 : term839 _144530 _144607 _144645 P f pat g a) : term839 _144530 _144607 _144645 P f pat g a.
Proof. exact (EQ_MP (@lem8192143 _144530 _144607 _144645 P f pat g a) (@lem8192140 _144530 _144607 _144645 P f pat g a h1)). Qed.
Lemma lem8192160 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8192161 {_144529 _144530 _144607 _144645 P : Type'} (lt2 : type1470 _144529 _144530) (z'''' : type518 _144530 _144607 P) (s : P -> _144529) (p : type560 _144530 _144607 P) (_108742 : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (_108743 : _144530 -> _144607) (_108744 : P) : (term910 _144529 _144530 _144607 _144645 P p lt2 z'''' s _108742 pat _108743 _108744) = (term919 _144529 _144530 _144607 _144645 P lt2 z'''' s p _108742 pat _108743 _108744).
Proof. exact (@lem8192160 (term862 _144529 _144530 _144607 P lt2 z'''' _108742 _108743 s _108744) (term867 _144530 _144607 P p _108743 _108744) ((term835 _144530 _144607 _144645 P pat _108742 _108744) = (term835 _144530 _144607 _144645 P pat _108743 _108744))). Qed.
Lemma lem8192175 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem8192176 {_144530 _144607 _144645 P : Type'} (_108742 : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_108743 : _144530 -> _144607) (_108744 : P) : (term920 _144530 _144607 _144645 P p _108742 pat _108743 _108744) = (term921 _144530 _144607 _144645 P _108742 pat p _108743 _108744).
Proof. exact (@lem8192175 ((term835 _144530 _144607 _144645 P pat _108742 _108744) = (term835 _144530 _144607 _144645 P pat _108743 _108744)) (term867 _144530 _144607 P p _108743 _108744)). Qed.
Lemma lem8192184 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (z'''' : type518 _144530 _144607 P) (_108742 : _144530 -> _144607) (_108743 : _144530 -> _144607) (s : P -> _144529) (_108744 : P) : (term922 _144529 _144530 _144607 P lt2 z'''' _108742 _108743 s _108744) = (term922 _144529 _144530 _144607 P lt2 z'''' _108742 _108743 s _108744).
Proof. exact (eq_refl (term922 _144529 _144530 _144607 P lt2 z'''' _108742 _108743 s _108744)). Qed.
Lemma lem8192185 {_144529 _144530 _144607 _144645 P : Type'} (lt2 : type1470 _144529 _144530) (z'''' : type518 _144530 _144607 P) (s : P -> _144529) (_108742 : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_108743 : _144530 -> _144607) (_108744 : P) : (term919 _144529 _144530 _144607 _144645 P lt2 z'''' s p _108742 pat _108743 _108744) = (term923 _144529 _144530 _144607 _144645 P lt2 z'''' s _108742 pat p _108743 _108744).
Proof. exact (MK_COMB (@lem8192184 _144529 _144530 _144607 P lt2 z'''' _108742 _108743 s _108744) (@lem8192176 _144530 _144607 _144645 P _108742 pat p _108743 _108744)). Qed.
Lemma lem8192189 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8192190 {_144529 _144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (z'''' : type518 _144530 _144607 P) (_108742 : _144530 -> _144607) (s : P -> _144529) (p : type560 _144530 _144607 P) (_108743 : _144530 -> _144607) (_108744 : P) : (term923 _144529 _144530 _144607 _144645 P lt2 z'''' s _108742 pat p _108743 _108744) = (term924 _144529 _144530 _144607 _144645 P pat lt2 z'''' _108742 s p _108743 _108744).
Proof. exact (@lem8192189 ((term835 _144530 _144607 _144645 P pat _108742 _108744) = (term835 _144530 _144607 _144645 P pat _108743 _108744)) (term862 _144529 _144530 _144607 P lt2 z'''' _108742 _108743 s _108744) (term867 _144530 _144607 P p _108743 _108744)). Qed.
Lemma lem8192208 {_144529 _144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (z'''' : type518 _144530 _144607 P) (_108742 : _144530 -> _144607) (s : P -> _144529) (p : type560 _144530 _144607 P) (_108743 : _144530 -> _144607) (_108744 : P) : (term919 _144529 _144530 _144607 _144645 P lt2 z'''' s p _108742 pat _108743 _108744) = (term924 _144529 _144530 _144607 _144645 P pat lt2 z'''' _108742 s p _108743 _108744).
Proof. exact (TRANS (@lem8192185 _144529 _144530 _144607 _144645 P lt2 z'''' s _108742 pat p _108743 _108744) (@lem8192190 _144529 _144530 _144607 _144645 P pat lt2 z'''' _108742 s p _108743 _108744)). Qed.
Lemma lem8192209 {_144529 _144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (z'''' : type518 _144530 _144607 P) (_108742 : _144530 -> _144607) (s : P -> _144529) (p : type560 _144530 _144607 P) (_108743 : _144530 -> _144607) (_108744 : P) : (term910 _144529 _144530 _144607 _144645 P p lt2 z'''' s _108742 pat _108743 _108744) = (term924 _144529 _144530 _144607 _144645 P pat lt2 z'''' _108742 s p _108743 _108744).
Proof. exact (TRANS (@lem8192161 _144529 _144530 _144607 _144645 P lt2 z'''' s p _108742 pat _108743 _108744) (@lem8192208 _144529 _144530 _144607 _144645 P pat lt2 z'''' _108742 s p _108743 _108744)). Qed.
Lemma lem8192210 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (_108742 : _144530 -> _144607) (_108744 : P) : (term868 _144530 _144607 P p _108742 _108744) = (term868 _144530 _144607 P p _108742 _108744).
Proof. exact (eq_refl (term868 _144530 _144607 P p _108742 _108744)). Qed.
Lemma lem8192211 {_144529 _144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (z'''' : type518 _144530 _144607 P) (_108742 : _144530 -> _144607) (s : P -> _144529) (p : type560 _144530 _144607 P) (_108743 : _144530 -> _144607) (_108744 : P) : (term911 _144529 _144530 _144607 _144645 P p lt2 z'''' s _108742 pat _108743 _108744) = (term925 _144529 _144530 _144607 _144645 P pat lt2 z'''' _108742 s p _108743 _108744).
Proof. exact (MK_COMB (@lem8192210 _144530 _144607 P p _108742 _108744) (@lem8192209 _144529 _144530 _144607 _144645 P pat lt2 z'''' _108742 s p _108743 _108744)). Qed.
Lemma lem8192215 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8192216 {_144529 _144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (z'''' : type518 _144530 _144607 P) (_108742 : _144530 -> _144607) (s : P -> _144529) (p : type560 _144530 _144607 P) (_108743 : _144530 -> _144607) (_108744 : P) : (term925 _144529 _144530 _144607 _144645 P pat lt2 z'''' _108742 s p _108743 _108744) = (term926 _144529 _144530 _144607 _144645 P pat lt2 z'''' _108742 s p _108743 _108744).
Proof. exact (@lem8192215 ((term835 _144530 _144607 _144645 P pat _108742 _108744) = (term835 _144530 _144607 _144645 P pat _108743 _108744)) (term867 _144530 _144607 P p _108742 _108744) (term927 _144529 _144530 _144607 P lt2 z'''' _108742 s p _108743 _108744)). Qed.
Lemma lem8192232 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8192233 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (z'''' : type518 _144530 _144607 P) (s : P -> _144529) (_108742 : _144530 -> _144607) (p : type560 _144530 _144607 P) (_108743 : _144530 -> _144607) (_108744 : P) : (term928 _144529 _144530 _144607 P lt2 z'''' _108742 s p _108743 _108744) = (term929 _144529 _144530 _144607 P lt2 z'''' s _108742 p _108743 _108744).
Proof. exact (@lem8192232 (term862 _144529 _144530 _144607 P lt2 z'''' _108742 _108743 s _108744) (term867 _144530 _144607 P p _108742 _108744) (term867 _144530 _144607 P p _108743 _108744)). Qed.
Lemma lem8192249 {_144530 _144607 _144645 P : Type'} (_108742 : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (_108743 : _144530 -> _144607) (_108744 : P) : (term930 _144530 _144607 _144645 P _108742 pat _108743 _108744) = (term930 _144530 _144607 _144645 P _108742 pat _108743 _108744).
Proof. exact (eq_refl (term930 _144530 _144607 _144645 P _108742 pat _108743 _108744)). Qed.
Lemma lem8192250 {_144529 _144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (z'''' : type518 _144530 _144607 P) (s : P -> _144529) (_108742 : _144530 -> _144607) (p : type560 _144530 _144607 P) (_108743 : _144530 -> _144607) (_108744 : P) : (term926 _144529 _144530 _144607 _144645 P pat lt2 z'''' _108742 s p _108743 _108744) = (term931 _144529 _144530 _144607 _144645 P pat lt2 z'''' s _108742 p _108743 _108744).
Proof. exact (MK_COMB (@lem8192249 _144530 _144607 _144645 P _108742 pat _108743 _108744) (@lem8192233 _144529 _144530 _144607 P lt2 z'''' s _108742 p _108743 _108744)). Qed.
Lemma lem8192261 {_144529 _144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (z'''' : type518 _144530 _144607 P) (s : P -> _144529) (_108742 : _144530 -> _144607) (p : type560 _144530 _144607 P) (_108743 : _144530 -> _144607) (_108744 : P) : (term925 _144529 _144530 _144607 _144645 P pat lt2 z'''' _108742 s p _108743 _108744) = (term931 _144529 _144530 _144607 _144645 P pat lt2 z'''' s _108742 p _108743 _108744).
Proof. exact (TRANS (@lem8192216 _144529 _144530 _144607 _144645 P pat lt2 z'''' _108742 s p _108743 _108744) (@lem8192250 _144529 _144530 _144607 _144645 P pat lt2 z'''' s _108742 p _108743 _108744)). Qed.
Lemma lem8192262 {_144529 _144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (z'''' : type518 _144530 _144607 P) (s : P -> _144529) (_108742 : _144530 -> _144607) (p : type560 _144530 _144607 P) (_108743 : _144530 -> _144607) (_108744 : P) : (term911 _144529 _144530 _144607 _144645 P p lt2 z'''' s _108742 pat _108743 _108744) = (term931 _144529 _144530 _144607 _144645 P pat lt2 z'''' s _108742 p _108743 _108744).
Proof. exact (TRANS (@lem8192211 _144529 _144530 _144607 _144645 P pat lt2 z'''' _108742 s p _108743 _108744) (@lem8192261 _144529 _144530 _144607 _144645 P pat lt2 z'''' s _108742 p _108743 _108744)). Qed.
Lemma lem8192263 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8192264 {_144529 _144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (z'''' : type518 _144530 _144607 P) (s : P -> _144529) (_108742 : _144530 -> _144607) (p : type560 _144530 _144607 P) (_108743 : _144530 -> _144607) (_108744 : P) : (term932 _144529 _144530 _144607 _144645 P p lt2 z'''' s _108742 pat _108743 _108744) = (term933 _144529 _144530 _144607 _144645 P pat lt2 z'''' s _108742 p _108743 _108744).
Proof. exact (MK_COMB (@lem8192263) (@lem8192262 _144529 _144530 _144607 _144645 P pat lt2 z'''' s _108742 p _108743 _108744)). Qed.
Lemma lem8192288 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem8192289 {_144530 _144607 _144645 P : Type'} (_108742 : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_108743 : _144530 -> _144607) (_108744 : P) : (term920 _144530 _144607 _144645 P p _108742 pat _108743 _108744) = (term921 _144530 _144607 _144645 P _108742 pat p _108743 _108744).
Proof. exact (@lem8192288 ((term835 _144530 _144607 _144645 P pat _108742 _108744) = (term835 _144530 _144607 _144645 P pat _108743 _108744)) (term867 _144530 _144607 P p _108743 _108744)). Qed.
Lemma lem8192297 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (_108742 : _144530 -> _144607) (_108744 : P) : (term868 _144530 _144607 P p _108742 _108744) = (term868 _144530 _144607 P p _108742 _108744).
Proof. exact (eq_refl (term868 _144530 _144607 P p _108742 _108744)). Qed.
Lemma lem8192298 {_144530 _144607 _144645 P : Type'} (_108742 : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_108743 : _144530 -> _144607) (_108744 : P) : (term934 _144530 _144607 _144645 P p _108742 pat _108743 _108744) = (term935 _144530 _144607 _144645 P _108742 pat p _108743 _108744).
Proof. exact (MK_COMB (@lem8192297 _144530 _144607 P p _108742 _108744) (@lem8192289 _144530 _144607 _144645 P _108742 pat p _108743 _108744)). Qed.
Lemma lem8192302 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8192303 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (_108742 : _144530 -> _144607) (p : type560 _144530 _144607 P) (_108743 : _144530 -> _144607) (_108744 : P) : (term935 _144530 _144607 _144645 P _108742 pat p _108743 _108744) = (term936 _144530 _144607 _144645 P pat _108742 p _108743 _108744).
Proof. exact (@lem8192302 ((term835 _144530 _144607 _144645 P pat _108742 _108744) = (term835 _144530 _144607 _144645 P pat _108743 _108744)) (term867 _144530 _144607 P p _108742 _108744) (term867 _144530 _144607 P p _108743 _108744)). Qed.
Lemma lem8192321 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (_108742 : _144530 -> _144607) (p : type560 _144530 _144607 P) (_108743 : _144530 -> _144607) (_108744 : P) : (term934 _144530 _144607 _144645 P p _108742 pat _108743 _108744) = (term936 _144530 _144607 _144645 P pat _108742 p _108743 _108744).
Proof. exact (TRANS (@lem8192298 _144530 _144607 _144645 P _108742 pat p _108743 _108744) (@lem8192303 _144530 _144607 _144645 P pat _108742 p _108743 _108744)). Qed.
Lemma lem8192322 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (z'''' : type518 _144530 _144607 P) (_108742 : _144530 -> _144607) (_108743 : _144530 -> _144607) (s : P -> _144529) (_108744 : P) : (term922 _144529 _144530 _144607 P lt2 z'''' _108742 _108743 s _108744) = (term922 _144529 _144530 _144607 P lt2 z'''' _108742 _108743 s _108744).
Proof. exact (eq_refl (term922 _144529 _144530 _144607 P lt2 z'''' _108742 _108743 s _108744)). Qed.
Lemma lem8192323 {_144529 _144530 _144607 _144645 P : Type'} (lt2 : type1470 _144529 _144530) (z'''' : type518 _144530 _144607 P) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (_108742 : _144530 -> _144607) (p : type560 _144530 _144607 P) (_108743 : _144530 -> _144607) (_108744 : P) : (term937 _144529 _144530 _144607 _144645 P lt2 z'''' s p _108742 pat _108743 _108744) = (term938 _144529 _144530 _144607 _144645 P lt2 z'''' s pat _108742 p _108743 _108744).
Proof. exact (MK_COMB (@lem8192322 _144529 _144530 _144607 P lt2 z'''' _108742 _108743 s _108744) (@lem8192321 _144530 _144607 _144645 P pat _108742 p _108743 _108744)). Qed.
Lemma lem8192327 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8192328 {_144529 _144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (z'''' : type518 _144530 _144607 P) (s : P -> _144529) (_108742 : _144530 -> _144607) (p : type560 _144530 _144607 P) (_108743 : _144530 -> _144607) (_108744 : P) : (term938 _144529 _144530 _144607 _144645 P lt2 z'''' s pat _108742 p _108743 _108744) = (term931 _144529 _144530 _144607 _144645 P pat lt2 z'''' s _108742 p _108743 _108744).
Proof. exact (@lem8192327 ((term835 _144530 _144607 _144645 P pat _108742 _108744) = (term835 _144530 _144607 _144645 P pat _108743 _108744)) (term862 _144529 _144530 _144607 P lt2 z'''' _108742 _108743 s _108744) (term939 _144530 _144607 P _108742 p _108743 _108744)). Qed.
Lemma lem8192356 {_144529 _144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (z'''' : type518 _144530 _144607 P) (s : P -> _144529) (_108742 : _144530 -> _144607) (p : type560 _144530 _144607 P) (_108743 : _144530 -> _144607) (_108744 : P) : (term937 _144529 _144530 _144607 _144645 P lt2 z'''' s p _108742 pat _108743 _108744) = (term931 _144529 _144530 _144607 _144645 P pat lt2 z'''' s _108742 p _108743 _108744).
Proof. exact (TRANS (@lem8192323 _144529 _144530 _144607 _144645 P lt2 z'''' s pat _108742 p _108743 _108744) (@lem8192328 _144529 _144530 _144607 _144645 P pat lt2 z'''' s _108742 p _108743 _108744)). Qed.
Lemma lem8192357 {_144529 _144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (z'''' : type518 _144530 _144607 P) (s : P -> _144529) (_108742 : _144530 -> _144607) (p : type560 _144530 _144607 P) (_108743 : _144530 -> _144607) (_108744 : P) : ((term911 _144529 _144530 _144607 _144645 P p lt2 z'''' s _108742 pat _108743 _108744) = (term937 _144529 _144530 _144607 _144645 P lt2 z'''' s p _108742 pat _108743 _108744)) = ((term931 _144529 _144530 _144607 _144645 P pat lt2 z'''' s _108742 p _108743 _108744) = (term931 _144529 _144530 _144607 _144645 P pat lt2 z'''' s _108742 p _108743 _108744)).
Proof. exact (MK_COMB (@lem8192264 _144529 _144530 _144607 _144645 P pat lt2 z'''' s _108742 p _108743 _108744) (@lem8192356 _144529 _144530 _144607 _144645 P pat lt2 z'''' s _108742 p _108743 _108744)). Qed.
Lemma lem8192359 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem20665 A x) (@lem20664 A x)). Qed.
Lemma lem8192360 (x : Prop) : (x = x) = True.
Proof. exact (@lem8192359 Prop x). Qed.
Lemma lem8192361 {_144529 _144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (z'''' : type518 _144530 _144607 P) (s : P -> _144529) (_108742 : _144530 -> _144607) (p : type560 _144530 _144607 P) (_108743 : _144530 -> _144607) (_108744 : P) : ((term931 _144529 _144530 _144607 _144645 P pat lt2 z'''' s _108742 p _108743 _108744) = (term931 _144529 _144530 _144607 _144645 P pat lt2 z'''' s _108742 p _108743 _108744)) = True.
Proof. exact (@lem8192360 (term931 _144529 _144530 _144607 _144645 P pat lt2 z'''' s _108742 p _108743 _108744)). Qed.
Lemma lem8192362 {_144529 _144530 _144607 _144645 P : Type'} (lt2 : type1470 _144529 _144530) (z'''' : type518 _144530 _144607 P) (s : P -> _144529) (p : type560 _144530 _144607 P) (_108742 : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (_108743 : _144530 -> _144607) (_108744 : P) : ((term911 _144529 _144530 _144607 _144645 P p lt2 z'''' s _108742 pat _108743 _108744) = (term937 _144529 _144530 _144607 _144645 P lt2 z'''' s p _108742 pat _108743 _108744)) = True.
Proof. exact (TRANS (@lem8192357 _144529 _144530 _144607 _144645 P pat lt2 z'''' s _108742 p _108743 _108744) (@lem8192361 _144529 _144530 _144607 _144645 P pat lt2 z'''' s _108742 p _108743 _108744)). Qed.
Lemma lem8192363 {_144529 _144530 _144607 _144645 P : Type'} (lt2 : type1470 _144529 _144530) (z'''' : type518 _144530 _144607 P) (s : P -> _144529) (p : type560 _144530 _144607 P) (_108742 : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (_108743 : _144530 -> _144607) (_108744 : P) : True = ((term911 _144529 _144530 _144607 _144645 P p lt2 z'''' s _108742 pat _108743 _108744) = (term937 _144529 _144530 _144607 _144645 P lt2 z'''' s p _108742 pat _108743 _108744)).
Proof. exact (SYM (@lem8192362 _144529 _144530 _144607 _144645 P lt2 z'''' s p _108742 pat _108743 _108744)). Qed.
Lemma lem8192364 {_144529 _144530 _144607 _144645 P : Type'} (lt2 : type1470 _144529 _144530) (z'''' : type518 _144530 _144607 P) (s : P -> _144529) (p : type560 _144530 _144607 P) (_108742 : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (_108743 : _144530 -> _144607) (_108744 : P) : (term911 _144529 _144530 _144607 _144645 P p lt2 z'''' s _108742 pat _108743 _108744) = (term937 _144529 _144530 _144607 _144645 P lt2 z'''' s p _108742 pat _108743 _108744).
Proof. exact (EQ_MP (@lem8192363 _144529 _144530 _144607 _144645 P lt2 z'''' s p _108742 pat _108743 _108744) (@lem0)). Qed.
Lemma lem8192365 {_144529 _144530 _144607 _144645 P : Type'} (_108742 : _144530 -> _144607) (_108743 : _144530 -> _144607) (_108744 : P) (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z'''' : type518 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (h1 : term553 _144529 _144530 _144607 _144645 P p lt2 s z'''' pat) : term937 _144529 _144530 _144607 _144645 P lt2 z'''' s p _108742 pat _108743 _108744.
Proof. exact (EQ_MP (@lem8192364 _144529 _144530 _144607 _144645 P lt2 z'''' s p _108742 pat _108743 _108744) (@lem8191121 _144529 _144530 _144607 _144645 P _108742 _108743 _108744 p lt2 s z'''' pat h1)). Qed.
Lemma lem8192367 (b : Prop) (a : Prop) : (a \/ b) = (term940 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem8192368 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (z'''' : type518 _144530 _144607 P) (_108742 : _144530 -> _144607) (_108743 : _144530 -> _144607) (s : P -> _144529) (_108744 : P) : (term937 _144529 _144530 _144607 _144645 P lt2 z'''' s p _108742 pat _108743 _108744) = (term941 _144529 _144530 _144607 _144645 P p pat lt2 z'''' _108742 _108743 s _108744).
Proof. exact (@lem8192367 (term934 _144530 _144607 _144645 P p _108742 pat _108743 _108744) (term862 _144529 _144530 _144607 P lt2 z'''' _108742 _108743 s _108744)). Qed.
Lemma lem8192370 (a : Prop) (b : Prop) : (term942 a b) = (term943 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem8192371 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (_108742 : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (_108743 : _144530 -> _144607) (_108744 : P) : (term944 _144530 _144607 _144645 P p _108742 pat _108743 _108744) = (term945 _144530 _144607 _144645 P p _108742 pat _108743 _108744).
Proof. exact (@lem8192370 (term867 _144530 _144607 P p _108742 _108744) (term920 _144530 _144607 _144645 P p _108742 pat _108743 _108744)). Qed.
Lemma lem8192373 (a : Prop) : (term15 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8192374 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (_108742 : _144530 -> _144607) (_108744 : P) : (term946 _144530 _144607 P p _108742 _108744) = (term822 _144530 _144607 P p _108742 _108744).
Proof. exact (@lem8192373 (term822 _144530 _144607 P p _108742 _108744)). Qed.
Lemma lem8192375 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8192376 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (_108742 : _144530 -> _144607) (_108744 : P) : (term947 _144530 _144607 P p _108742 _108744) = (term948 _144530 _144607 P p _108742 _108744).
Proof. exact (MK_COMB (@lem8192375) (@lem8192374 _144530 _144607 P p _108742 _108744)). Qed.
Lemma lem8192378 (a : Prop) (b : Prop) : (term942 a b) = (term943 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem8192379 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (_108742 : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (_108743 : _144530 -> _144607) (_108744 : P) : (term949 _144530 _144607 _144645 P p _108742 pat _108743 _108744) = (term950 _144530 _144607 _144645 P p _108742 pat _108743 _108744).
Proof. exact (@lem8192378 (term867 _144530 _144607 P p _108743 _108744) ((term835 _144530 _144607 _144645 P pat _108742 _108744) = (term835 _144530 _144607 _144645 P pat _108743 _108744))). Qed.
Lemma lem8192381 (a : Prop) : (term15 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8192382 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (_108743 : _144530 -> _144607) (_108744 : P) : (term946 _144530 _144607 P p _108743 _108744) = (term822 _144530 _144607 P p _108743 _108744).
Proof. exact (@lem8192381 (term822 _144530 _144607 P p _108743 _108744)). Qed.
Lemma lem8192383 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8192384 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (_108743 : _144530 -> _144607) (_108744 : P) : (term947 _144530 _144607 P p _108743 _108744) = (term948 _144530 _144607 P p _108743 _108744).
Proof. exact (MK_COMB (@lem8192383) (@lem8192382 _144530 _144607 P p _108743 _108744)). Qed.
Lemma lem8192385 {_144530 _144607 _144645 P : Type'} (_108742 : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (_108743 : _144530 -> _144607) (_108744 : P) : (term839 _144530 _144607 _144645 P _108742 pat _108743 _108744) = (term839 _144530 _144607 _144645 P _108742 pat _108743 _108744).
Proof. exact (eq_refl (term839 _144530 _144607 _144645 P _108742 pat _108743 _108744)). Qed.
Lemma lem8192386 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (_108742 : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (_108743 : _144530 -> _144607) (_108744 : P) : (term950 _144530 _144607 _144645 P p _108742 pat _108743 _108744) = (term951 _144530 _144607 _144645 P p _108742 pat _108743 _108744).
Proof. exact (MK_COMB (@lem8192384 _144530 _144607 P p _108743 _108744) (@lem8192385 _144530 _144607 _144645 P _108742 pat _108743 _108744)). Qed.
Lemma lem8192387 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (_108742 : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (_108743 : _144530 -> _144607) (_108744 : P) : (term949 _144530 _144607 _144645 P p _108742 pat _108743 _108744) = (term951 _144530 _144607 _144645 P p _108742 pat _108743 _108744).
Proof. exact (TRANS (@lem8192379 _144530 _144607 _144645 P p _108742 pat _108743 _108744) (@lem8192386 _144530 _144607 _144645 P p _108742 pat _108743 _108744)). Qed.
Lemma lem8192388 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (_108742 : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (_108743 : _144530 -> _144607) (_108744 : P) : (term945 _144530 _144607 _144645 P p _108742 pat _108743 _108744) = (term952 _144530 _144607 _144645 P p _108742 pat _108743 _108744).
Proof. exact (MK_COMB (@lem8192376 _144530 _144607 P p _108742 _108744) (@lem8192387 _144530 _144607 _144645 P p _108742 pat _108743 _108744)). Qed.
Lemma lem8192389 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (_108742 : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (_108743 : _144530 -> _144607) (_108744 : P) : (term944 _144530 _144607 _144645 P p _108742 pat _108743 _108744) = (term952 _144530 _144607 _144645 P p _108742 pat _108743 _108744).
Proof. exact (TRANS (@lem8192371 _144530 _144607 _144645 P p _108742 pat _108743 _108744) (@lem8192388 _144530 _144607 _144645 P p _108742 pat _108743 _108744)). Qed.
Lemma lem8192390 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8192391 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (_108742 : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (_108743 : _144530 -> _144607) (_108744 : P) : (term953 _144530 _144607 _144645 P p _108742 pat _108743 _108744) = (term954 _144530 _144607 _144645 P p _108742 pat _108743 _108744).
Proof. exact (MK_COMB (@lem8192390) (@lem8192389 _144530 _144607 _144645 P p _108742 pat _108743 _108744)). Qed.
Lemma lem8192392 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (z'''' : type518 _144530 _144607 P) (_108742 : _144530 -> _144607) (_108743 : _144530 -> _144607) (s : P -> _144529) (_108744 : P) : (term862 _144529 _144530 _144607 P lt2 z'''' _108742 _108743 s _108744) = (term862 _144529 _144530 _144607 P lt2 z'''' _108742 _108743 s _108744).
Proof. exact (eq_refl (term862 _144529 _144530 _144607 P lt2 z'''' _108742 _108743 s _108744)). Qed.
Lemma lem8192393 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (z'''' : type518 _144530 _144607 P) (_108742 : _144530 -> _144607) (_108743 : _144530 -> _144607) (s : P -> _144529) (_108744 : P) : (term941 _144529 _144530 _144607 _144645 P p pat lt2 z'''' _108742 _108743 s _108744) = (term955 _144529 _144530 _144607 _144645 P p pat lt2 z'''' _108742 _108743 s _108744).
Proof. exact (MK_COMB (@lem8192391 _144530 _144607 _144645 P p _108742 pat _108743 _108744) (@lem8192392 _144529 _144530 _144607 P lt2 z'''' _108742 _108743 s _108744)). Qed.
Lemma lem8192394 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (z'''' : type518 _144530 _144607 P) (_108742 : _144530 -> _144607) (_108743 : _144530 -> _144607) (s : P -> _144529) (_108744 : P) : (term937 _144529 _144530 _144607 _144645 P lt2 z'''' s p _108742 pat _108743 _108744) = (term955 _144529 _144530 _144607 _144645 P p pat lt2 z'''' _108742 _108743 s _108744).
Proof. exact (TRANS (@lem8192368 _144529 _144530 _144607 _144645 P p pat lt2 z'''' _108742 _108743 s _108744) (@lem8192393 _144529 _144530 _144607 _144645 P p pat lt2 z'''' _108742 _108743 s _108744)). Qed.
Lemma lem8192396 {_144530 _144607 _144645 P : Type'} (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term839 _144530 _144607 _144645 P f pat g a) (h2 : p g a) : term951 _144530 _144607 _144645 P p f pat g a.
Proof. exact (conj (@lem8192136 _144530 _144607 P p g a h2) (@lem8192144 _144530 _144607 _144645 P f pat g a h1)). Qed.
Lemma lem8192397 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term839 _144530 _144607 _144645 P f pat g a) (h2 : p f a) (h3 : p g a) : term952 _144530 _144607 _144645 P p f pat g a.
Proof. exact (conj (@lem8192129 _144530 _144607 P p f a h2) (@lem8192396 _144530 _144607 _144645 P f pat p g a h1 h3)). Qed.
Lemma lem8192399 {_144529 _144530 _144607 _144645 P : Type'} (_108742 : _144530 -> _144607) (_108743 : _144530 -> _144607) (_108744 : P) (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z'''' : type518 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (h1 : term553 _144529 _144530 _144607 _144645 P p lt2 s z'''' pat) : term955 _144529 _144530 _144607 _144645 P p pat lt2 z'''' _108742 _108743 s _108744.
Proof. exact (EQ_MP (@lem8192394 _144529 _144530 _144607 _144645 P p pat lt2 z'''' _108742 _108743 s _108744) (@lem8192365 _144529 _144530 _144607 _144645 P _108742 _108743 _108744 p lt2 s z'''' pat h1)). Qed.
Lemma lem8192400 {_144529 _144530 _144607 _144645 P : Type'} (_108742 : _144530 -> _144607) (_108743 : _144530 -> _144607) (_108744 : P) (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z'''' : type518 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (h1 : term553 _144529 _144530 _144607 _144645 P p lt2 s z'''' pat) : term955 _144529 _144530 _144607 _144645 P p pat lt2 z'''' _108742 _108743 s _108744.
Proof. exact (@lem8192399 _144529 _144530 _144607 _144645 P _108742 _108743 _108744 p lt2 s z'''' pat h1). Qed.
Lemma lem8192401 {_144529 _144530 _144607 _144645 P : Type'} (f : _144530 -> _144607) (g : _144530 -> _144607) (a : P) (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z'''' : type518 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (h1 : term553 _144529 _144530 _144607 _144645 P p lt2 s z'''' pat) : term955 _144529 _144530 _144607 _144645 P p pat lt2 z'''' f g s a.
Proof. exact (@lem8192400 _144529 _144530 _144607 _144645 P f g a p lt2 s z'''' pat h1). Qed.
Lemma lem8192404 {_144529 _144530 _144607 _144645 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z'''' : type518 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term553 _144529 _144530 _144607 _144645 P p lt2 s z'''' pat) (h2 : term839 _144530 _144607 _144645 P f pat g a) (h3 : p f a) (h4 : p g a) : term862 _144529 _144530 _144607 P lt2 z'''' f g s a.
Proof. exact (@lem8192401 _144529 _144530 _144607 _144645 P f g a p lt2 s z'''' pat h1 (@lem8192397 _144530 _144607 _144645 P pat f p g a h2 h3 h4)). Qed.
Lemma lem8192405 {_144529 _144530 _144607 _144645 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z'''' : type518 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term553 _144529 _144530 _144607 _144645 P p lt2 s z'''' pat) (h2 : term839 _144530 _144607 _144645 P f pat g a) (h3 : p f a) (h4 : p g a) : term956 _144529 _144530 _144607 P lt2 z'''' f g s a.
Proof. exact (fun h0 : term957 _144529 _144530 _144607 P lt2 z'''' f g s a => @lem8192404 _144529 _144530 _144607 _144645 P lt2 s z'''' pat f p g a h1 h2 h3 h4). Qed.
Lemma lem8192407 (p : Prop) : (term57 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8192408 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (z'''' : type518 _144530 _144607 P) (f : _144530 -> _144607) (g : _144530 -> _144607) (s : P -> _144529) (a : P) : (term956 _144529 _144530 _144607 P lt2 z'''' f g s a) = (term862 _144529 _144530 _144607 P lt2 z'''' f g s a).
Proof. exact (@lem8192407 (term862 _144529 _144530 _144607 P lt2 z'''' f g s a)). Qed.
Lemma lem8192409 {_144529 _144530 _144607 _144645 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z'''' : type518 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term553 _144529 _144530 _144607 _144645 P p lt2 s z'''' pat) (h2 : term839 _144530 _144607 _144645 P f pat g a) (h3 : p f a) (h4 : p g a) : term862 _144529 _144530 _144607 P lt2 z'''' f g s a.
Proof. exact (EQ_MP (@lem8192408 _144529 _144530 _144607 P lt2 z'''' f g s a) (@lem8192405 _144529 _144530 _144607 _144645 P lt2 s z'''' pat f p g a h1 h2 h3 h4)). Qed.
Lemma lem8192415 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem8192416 {_144529 _144530 _144607 P : Type'} (f : _144530 -> _144607) (g : _144530 -> _144607) (lt2 : type1470 _144529 _144530) (_108729 : _144530) (s : P -> _144529) (a : P) : (term832 _144529 _144530 _144607 P lt2 s a f g _108729) = (term958 _144529 _144530 _144607 P f g lt2 _108729 s a).
Proof. exact (@lem8192415 ((@I (_144530 -> _144607) f _108729) = (@I (_144530 -> _144607) g _108729)) (term829 _144529 _144530 P lt2 _108729 s a)). Qed.
Lemma lem8192424 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8192425 {_144529 _144530 _144607 P : Type'} (f : _144530 -> _144607) (g : _144530 -> _144607) (lt2 : type1470 _144529 _144530) (_108729 : _144530) (s : P -> _144529) (a : P) : (term959 _144529 _144530 _144607 P lt2 s a f g _108729) = (term960 _144529 _144530 _144607 P f g lt2 _108729 s a).
Proof. exact (MK_COMB (@lem8192424) (@lem8192416 _144529 _144530 _144607 P f g lt2 _108729 s a)). Qed.
Lemma lem8192433 {_144529 _144530 _144607 P : Type'} (f : _144530 -> _144607) (g : _144530 -> _144607) (lt2 : type1470 _144529 _144530) (_108729 : _144530) (s : P -> _144529) (a : P) : (term958 _144529 _144530 _144607 P f g lt2 _108729 s a) = (term958 _144529 _144530 _144607 P f g lt2 _108729 s a).
Proof. exact (eq_refl (term958 _144529 _144530 _144607 P f g lt2 _108729 s a)). Qed.
Lemma lem8192434 {_144529 _144530 _144607 P : Type'} (f : _144530 -> _144607) (g : _144530 -> _144607) (lt2 : type1470 _144529 _144530) (_108729 : _144530) (s : P -> _144529) (a : P) : ((term832 _144529 _144530 _144607 P lt2 s a f g _108729) = (term958 _144529 _144530 _144607 P f g lt2 _108729 s a)) = ((term958 _144529 _144530 _144607 P f g lt2 _108729 s a) = (term958 _144529 _144530 _144607 P f g lt2 _108729 s a)).
Proof. exact (MK_COMB (@lem8192425 _144529 _144530 _144607 P f g lt2 _108729 s a) (@lem8192433 _144529 _144530 _144607 P f g lt2 _108729 s a)). Qed.
Lemma lem8192436 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem20665 A x) (@lem20664 A x)). Qed.
Lemma lem8192437 (x : Prop) : (x = x) = True.
Proof. exact (@lem8192436 Prop x). Qed.
Lemma lem8192438 {_144529 _144530 _144607 P : Type'} (f : _144530 -> _144607) (g : _144530 -> _144607) (lt2 : type1470 _144529 _144530) (_108729 : _144530) (s : P -> _144529) (a : P) : ((term958 _144529 _144530 _144607 P f g lt2 _108729 s a) = (term958 _144529 _144530 _144607 P f g lt2 _108729 s a)) = True.
Proof. exact (@lem8192437 (term958 _144529 _144530 _144607 P f g lt2 _108729 s a)). Qed.
Lemma lem8192439 {_144529 _144530 _144607 P : Type'} (f : _144530 -> _144607) (g : _144530 -> _144607) (lt2 : type1470 _144529 _144530) (_108729 : _144530) (s : P -> _144529) (a : P) : ((term832 _144529 _144530 _144607 P lt2 s a f g _108729) = (term958 _144529 _144530 _144607 P f g lt2 _108729 s a)) = True.
Proof. exact (TRANS (@lem8192434 _144529 _144530 _144607 P f g lt2 _108729 s a) (@lem8192438 _144529 _144530 _144607 P f g lt2 _108729 s a)). Qed.
Lemma lem8192440 {_144529 _144530 _144607 P : Type'} (f : _144530 -> _144607) (g : _144530 -> _144607) (lt2 : type1470 _144529 _144530) (_108729 : _144530) (s : P -> _144529) (a : P) : True = ((term832 _144529 _144530 _144607 P lt2 s a f g _108729) = (term958 _144529 _144530 _144607 P f g lt2 _108729 s a)).
Proof. exact (SYM (@lem8192439 _144529 _144530 _144607 P f g lt2 _108729 s a)). Qed.
Lemma lem8192441 {_144529 _144530 _144607 P : Type'} (f : _144530 -> _144607) (g : _144530 -> _144607) (lt2 : type1470 _144529 _144530) (_108729 : _144530) (s : P -> _144529) (a : P) : (term832 _144529 _144530 _144607 P lt2 s a f g _108729) = (term958 _144529 _144530 _144607 P f g lt2 _108729 s a).
Proof. exact (EQ_MP (@lem8192440 _144529 _144530 _144607 P f g lt2 _108729 s a) (@lem0)). Qed.
Lemma lem8192442 {_144529 _144530 _144607 P : Type'} (_108729 : _144530) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) : term958 _144529 _144530 _144607 P f g lt2 _108729 s a.
Proof. exact (EQ_MP (@lem8192441 _144529 _144530 _144607 P f g lt2 _108729 s a) (@lem8191101 _144529 _144530 _144607 P _108729 lt2 s a f g h1)). Qed.
Lemma lem8192444 (b : Prop) (a : Prop) : (a \/ b) = (term940 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem8192445 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (_108729 : _144530) : (term958 _144529 _144530 _144607 P f g lt2 _108729 s a) = (term961 _144529 _144530 _144607 P lt2 s a f g _108729).
Proof. exact (@lem8192444 (term829 _144529 _144530 P lt2 _108729 s a) ((@I (_144530 -> _144607) f _108729) = (@I (_144530 -> _144607) g _108729))). Qed.
Lemma lem8192447 (a : Prop) : (term15 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8192448 {_144529 _144530 P : Type'} (lt2 : type1470 _144529 _144530) (_108729 : _144530) (s : P -> _144529) (a : P) : (term962 _144529 _144530 P lt2 _108729 s a) = (term827 _144529 _144530 P lt2 _108729 s a).
Proof. exact (@lem8192447 (term827 _144529 _144530 P lt2 _108729 s a)). Qed.
Lemma lem8192449 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8192450 {_144529 _144530 P : Type'} (lt2 : type1470 _144529 _144530) (_108729 : _144530) (s : P -> _144529) (a : P) : (term963 _144529 _144530 P lt2 _108729 s a) = (term964 _144529 _144530 P lt2 _108729 s a).
Proof. exact (MK_COMB (@lem8192449) (@lem8192448 _144529 _144530 P lt2 _108729 s a)). Qed.
Lemma lem8192451 {_144530 _144607 : Type'} (f : _144530 -> _144607) (g : _144530 -> _144607) (_108729 : _144530) : ((@I (_144530 -> _144607) f _108729) = (@I (_144530 -> _144607) g _108729)) = ((@I (_144530 -> _144607) f _108729) = (@I (_144530 -> _144607) g _108729)).
Proof. exact (eq_refl ((@I (_144530 -> _144607) f _108729) = (@I (_144530 -> _144607) g _108729))). Qed.
Lemma lem8192452 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (_108729 : _144530) : (term961 _144529 _144530 _144607 P lt2 s a f g _108729) = (term965 _144529 _144530 _144607 P lt2 s a f g _108729).
Proof. exact (MK_COMB (@lem8192450 _144529 _144530 P lt2 _108729 s a) (@lem8192451 _144530 _144607 f g _108729)). Qed.
Lemma lem8192453 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (_108729 : _144530) : (term958 _144529 _144530 _144607 P f g lt2 _108729 s a) = (term965 _144529 _144530 _144607 P lt2 s a f g _108729).
Proof. exact (TRANS (@lem8192445 _144529 _144530 _144607 P lt2 s a f g _108729) (@lem8192452 _144529 _144530 _144607 P lt2 s a f g _108729)). Qed.
Lemma lem8192456 {_144529 _144530 _144607 P : Type'} (_108729 : _144530) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) : term965 _144529 _144530 _144607 P lt2 s a f g _108729.
Proof. exact (EQ_MP (@lem8192453 _144529 _144530 _144607 P lt2 s a f g _108729) (@lem8192442 _144529 _144530 _144607 P _108729 lt2 s a f g h1)). Qed.
Lemma lem8192457 {_144529 _144530 _144607 P : Type'} (_108729 : _144530) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) : term965 _144529 _144530 _144607 P lt2 s a f g _108729.
Proof. exact (@lem8192456 _144529 _144530 _144607 P _108729 lt2 s a f g h1). Qed.
Lemma lem8192458 {_144529 _144530 _144607 P : Type'} (z'''' : type518 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) : term966 _144529 _144530 _144607 P lt2 s z'''' f g a.
Proof. exact (@lem8192457 _144529 _144530 _144607 P (term845 _144530 _144607 P z'''' f g a) lt2 s a f g h1). Qed.
Lemma lem8192461 {_144529 _144530 _144607 _144645 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z'''' : type518 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) (h2 : term553 _144529 _144530 _144607 _144645 P p lt2 s z'''' pat) (h3 : term839 _144530 _144607 _144645 P f pat g a) (h4 : p f a) (h5 : p g a) : (term848 _144530 _144607 P z'''' f g a) = (term851 _144530 _144607 P z'''' f g a).
Proof. exact (@lem8192458 _144529 _144530 _144607 P z'''' lt2 s a f g h1 (@lem8192409 _144529 _144530 _144607 _144645 P lt2 s z'''' pat f p g a h2 h3 h4 h5)). Qed.
Lemma lem8192462 {_144529 _144530 _144607 _144645 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z'''' : type518 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) (h2 : term553 _144529 _144530 _144607 _144645 P p lt2 s z'''' pat) (h3 : term839 _144530 _144607 _144645 P f pat g a) (h4 : p f a) (h5 : p g a) : term967 _144530 _144607 P z'''' f g a.
Proof. exact (fun h0 : term855 _144530 _144607 P z'''' f g a => @lem8192461 _144529 _144530 _144607 _144645 P lt2 s z'''' pat f p g a h1 h2 h3 h4 h5). Qed.
Lemma lem8192464 (p : Prop) : (term57 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8192465 {_144530 _144607 P : Type'} (z'''' : type518 _144530 _144607 P) (f : _144530 -> _144607) (g : _144530 -> _144607) (a : P) : (term967 _144530 _144607 P z'''' f g a) = ((term848 _144530 _144607 P z'''' f g a) = (term851 _144530 _144607 P z'''' f g a)).
Proof. exact (@lem8192464 ((term848 _144530 _144607 P z'''' f g a) = (term851 _144530 _144607 P z'''' f g a))). Qed.
Lemma lem8192466 {_144529 _144530 _144607 _144645 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z'''' : type518 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) (h2 : term553 _144529 _144530 _144607 _144645 P p lt2 s z'''' pat) (h3 : term839 _144530 _144607 _144645 P f pat g a) (h4 : p f a) (h5 : p g a) : (term848 _144530 _144607 P z'''' f g a) = (term851 _144530 _144607 P z'''' f g a).
Proof. exact (EQ_MP (@lem8192465 _144530 _144607 P z'''' f g a) (@lem8192462 _144529 _144530 _144607 _144645 P lt2 s z'''' pat f p g a h1 h2 h3 h4 h5)). Qed.
Lemma lem8192482 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8192483 {_144530 _144607 _144645 P : Type'} (z'''' : type518 _144530 _144607 P) (p : type560 _144530 _144607 P) (_108742 : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (_108743 : _144530 -> _144607) (_108744 : P) : (term914 _144530 _144607 _144645 P p z'''' _108742 pat _108743 _108744) = (term968 _144530 _144607 _144645 P z'''' p _108742 pat _108743 _108744).
Proof. exact (@lem8192482 (term855 _144530 _144607 P z'''' _108742 _108743 _108744) (term867 _144530 _144607 P p _108743 _108744) ((term835 _144530 _144607 _144645 P pat _108742 _108744) = (term835 _144530 _144607 _144645 P pat _108743 _108744))). Qed.
Lemma lem8192499 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem8192500 {_144530 _144607 _144645 P : Type'} (_108742 : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_108743 : _144530 -> _144607) (_108744 : P) : (term920 _144530 _144607 _144645 P p _108742 pat _108743 _108744) = (term921 _144530 _144607 _144645 P _108742 pat p _108743 _108744).
Proof. exact (@lem8192499 ((term835 _144530 _144607 _144645 P pat _108742 _108744) = (term835 _144530 _144607 _144645 P pat _108743 _108744)) (term867 _144530 _144607 P p _108743 _108744)). Qed.
Lemma lem8192508 {_144530 _144607 P : Type'} (z'''' : type518 _144530 _144607 P) (_108742 : _144530 -> _144607) (_108743 : _144530 -> _144607) (_108744 : P) : (term969 _144530 _144607 P z'''' _108742 _108743 _108744) = (term969 _144530 _144607 P z'''' _108742 _108743 _108744).
Proof. exact (eq_refl (term969 _144530 _144607 P z'''' _108742 _108743 _108744)). Qed.
Lemma lem8192509 {_144530 _144607 _144645 P : Type'} (z'''' : type518 _144530 _144607 P) (_108742 : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_108743 : _144530 -> _144607) (_108744 : P) : (term968 _144530 _144607 _144645 P z'''' p _108742 pat _108743 _108744) = (term970 _144530 _144607 _144645 P z'''' _108742 pat p _108743 _108744).
Proof. exact (MK_COMB (@lem8192508 _144530 _144607 P z'''' _108742 _108743 _108744) (@lem8192500 _144530 _144607 _144645 P _108742 pat p _108743 _108744)). Qed.
Lemma lem8192513 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8192514 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (z'''' : type518 _144530 _144607 P) (_108742 : _144530 -> _144607) (p : type560 _144530 _144607 P) (_108743 : _144530 -> _144607) (_108744 : P) : (term970 _144530 _144607 _144645 P z'''' _108742 pat p _108743 _108744) = (term971 _144530 _144607 _144645 P pat z'''' _108742 p _108743 _108744).
Proof. exact (@lem8192513 ((term835 _144530 _144607 _144645 P pat _108742 _108744) = (term835 _144530 _144607 _144645 P pat _108743 _108744)) (term855 _144530 _144607 P z'''' _108742 _108743 _108744) (term867 _144530 _144607 P p _108743 _108744)). Qed.
Lemma lem8192534 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (z'''' : type518 _144530 _144607 P) (_108742 : _144530 -> _144607) (p : type560 _144530 _144607 P) (_108743 : _144530 -> _144607) (_108744 : P) : (term968 _144530 _144607 _144645 P z'''' p _108742 pat _108743 _108744) = (term971 _144530 _144607 _144645 P pat z'''' _108742 p _108743 _108744).
Proof. exact (TRANS (@lem8192509 _144530 _144607 _144645 P z'''' _108742 pat p _108743 _108744) (@lem8192514 _144530 _144607 _144645 P pat z'''' _108742 p _108743 _108744)). Qed.
Lemma lem8192535 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (z'''' : type518 _144530 _144607 P) (_108742 : _144530 -> _144607) (p : type560 _144530 _144607 P) (_108743 : _144530 -> _144607) (_108744 : P) : (term914 _144530 _144607 _144645 P p z'''' _108742 pat _108743 _108744) = (term971 _144530 _144607 _144645 P pat z'''' _108742 p _108743 _108744).
Proof. exact (TRANS (@lem8192483 _144530 _144607 _144645 P z'''' p _108742 pat _108743 _108744) (@lem8192534 _144530 _144607 _144645 P pat z'''' _108742 p _108743 _108744)). Qed.
Lemma lem8192536 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (_108742 : _144530 -> _144607) (_108744 : P) : (term868 _144530 _144607 P p _108742 _108744) = (term868 _144530 _144607 P p _108742 _108744).
Proof. exact (eq_refl (term868 _144530 _144607 P p _108742 _108744)). Qed.
Lemma lem8192537 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (z'''' : type518 _144530 _144607 P) (_108742 : _144530 -> _144607) (p : type560 _144530 _144607 P) (_108743 : _144530 -> _144607) (_108744 : P) : (term915 _144530 _144607 _144645 P p z'''' _108742 pat _108743 _108744) = (term972 _144530 _144607 _144645 P pat z'''' _108742 p _108743 _108744).
Proof. exact (MK_COMB (@lem8192536 _144530 _144607 P p _108742 _108744) (@lem8192535 _144530 _144607 _144645 P pat z'''' _108742 p _108743 _108744)). Qed.
Lemma lem8192541 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8192542 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (z'''' : type518 _144530 _144607 P) (_108742 : _144530 -> _144607) (p : type560 _144530 _144607 P) (_108743 : _144530 -> _144607) (_108744 : P) : (term972 _144530 _144607 _144645 P pat z'''' _108742 p _108743 _108744) = (term973 _144530 _144607 _144645 P pat z'''' _108742 p _108743 _108744).
Proof. exact (@lem8192541 ((term835 _144530 _144607 _144645 P pat _108742 _108744) = (term835 _144530 _144607 _144645 P pat _108743 _108744)) (term867 _144530 _144607 P p _108742 _108744) (term974 _144530 _144607 P z'''' _108742 p _108743 _108744)). Qed.
Lemma lem8192558 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8192559 {_144530 _144607 P : Type'} (z'''' : type518 _144530 _144607 P) (_108742 : _144530 -> _144607) (p : type560 _144530 _144607 P) (_108743 : _144530 -> _144607) (_108744 : P) : (term975 _144530 _144607 P z'''' _108742 p _108743 _108744) = (term976 _144530 _144607 P z'''' _108742 p _108743 _108744).
Proof. exact (@lem8192558 (term855 _144530 _144607 P z'''' _108742 _108743 _108744) (term867 _144530 _144607 P p _108742 _108744) (term867 _144530 _144607 P p _108743 _108744)). Qed.
Lemma lem8192577 {_144530 _144607 _144645 P : Type'} (_108742 : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (_108743 : _144530 -> _144607) (_108744 : P) : (term930 _144530 _144607 _144645 P _108742 pat _108743 _108744) = (term930 _144530 _144607 _144645 P _108742 pat _108743 _108744).
Proof. exact (eq_refl (term930 _144530 _144607 _144645 P _108742 pat _108743 _108744)). Qed.
Lemma lem8192578 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (z'''' : type518 _144530 _144607 P) (_108742 : _144530 -> _144607) (p : type560 _144530 _144607 P) (_108743 : _144530 -> _144607) (_108744 : P) : (term973 _144530 _144607 _144645 P pat z'''' _108742 p _108743 _108744) = (term977 _144530 _144607 _144645 P pat z'''' _108742 p _108743 _108744).
Proof. exact (MK_COMB (@lem8192577 _144530 _144607 _144645 P _108742 pat _108743 _108744) (@lem8192559 _144530 _144607 P z'''' _108742 p _108743 _108744)). Qed.
Lemma lem8192589 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (z'''' : type518 _144530 _144607 P) (_108742 : _144530 -> _144607) (p : type560 _144530 _144607 P) (_108743 : _144530 -> _144607) (_108744 : P) : (term972 _144530 _144607 _144645 P pat z'''' _108742 p _108743 _108744) = (term977 _144530 _144607 _144645 P pat z'''' _108742 p _108743 _108744).
Proof. exact (TRANS (@lem8192542 _144530 _144607 _144645 P pat z'''' _108742 p _108743 _108744) (@lem8192578 _144530 _144607 _144645 P pat z'''' _108742 p _108743 _108744)). Qed.
Lemma lem8192590 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (z'''' : type518 _144530 _144607 P) (_108742 : _144530 -> _144607) (p : type560 _144530 _144607 P) (_108743 : _144530 -> _144607) (_108744 : P) : (term915 _144530 _144607 _144645 P p z'''' _108742 pat _108743 _108744) = (term977 _144530 _144607 _144645 P pat z'''' _108742 p _108743 _108744).
Proof. exact (TRANS (@lem8192537 _144530 _144607 _144645 P pat z'''' _108742 p _108743 _108744) (@lem8192589 _144530 _144607 _144645 P pat z'''' _108742 p _108743 _108744)). Qed.
Lemma lem8192591 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8192592 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (z'''' : type518 _144530 _144607 P) (_108742 : _144530 -> _144607) (p : type560 _144530 _144607 P) (_108743 : _144530 -> _144607) (_108744 : P) : (term978 _144530 _144607 _144645 P p z'''' _108742 pat _108743 _108744) = (term979 _144530 _144607 _144645 P pat z'''' _108742 p _108743 _108744).
Proof. exact (MK_COMB (@lem8192591) (@lem8192590 _144530 _144607 _144645 P pat z'''' _108742 p _108743 _108744)). Qed.
Lemma lem8192618 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem8192619 {_144530 _144607 P : Type'} (z'''' : type518 _144530 _144607 P) (_108742 : _144530 -> _144607) (p : type560 _144530 _144607 P) (_108743 : _144530 -> _144607) (_108744 : P) : (term890 _144530 _144607 P p z'''' _108742 _108743 _108744) = (term974 _144530 _144607 P z'''' _108742 p _108743 _108744).
Proof. exact (@lem8192618 (term855 _144530 _144607 P z'''' _108742 _108743 _108744) (term867 _144530 _144607 P p _108743 _108744)). Qed.
Lemma lem8192627 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (_108742 : _144530 -> _144607) (_108744 : P) : (term868 _144530 _144607 P p _108742 _108744) = (term868 _144530 _144607 P p _108742 _108744).
Proof. exact (eq_refl (term868 _144530 _144607 P p _108742 _108744)). Qed.
Lemma lem8192628 {_144530 _144607 P : Type'} (z'''' : type518 _144530 _144607 P) (_108742 : _144530 -> _144607) (p : type560 _144530 _144607 P) (_108743 : _144530 -> _144607) (_108744 : P) : (term895 _144530 _144607 P p z'''' _108742 _108743 _108744) = (term975 _144530 _144607 P z'''' _108742 p _108743 _108744).
Proof. exact (MK_COMB (@lem8192627 _144530 _144607 P p _108742 _108744) (@lem8192619 _144530 _144607 P z'''' _108742 p _108743 _108744)). Qed.
Lemma lem8192632 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8192633 {_144530 _144607 P : Type'} (z'''' : type518 _144530 _144607 P) (_108742 : _144530 -> _144607) (p : type560 _144530 _144607 P) (_108743 : _144530 -> _144607) (_108744 : P) : (term975 _144530 _144607 P z'''' _108742 p _108743 _108744) = (term976 _144530 _144607 P z'''' _108742 p _108743 _108744).
Proof. exact (@lem8192632 (term855 _144530 _144607 P z'''' _108742 _108743 _108744) (term867 _144530 _144607 P p _108742 _108744) (term867 _144530 _144607 P p _108743 _108744)). Qed.
Lemma lem8192651 {_144530 _144607 P : Type'} (z'''' : type518 _144530 _144607 P) (_108742 : _144530 -> _144607) (p : type560 _144530 _144607 P) (_108743 : _144530 -> _144607) (_108744 : P) : (term895 _144530 _144607 P p z'''' _108742 _108743 _108744) = (term976 _144530 _144607 P z'''' _108742 p _108743 _108744).
Proof. exact (TRANS (@lem8192628 _144530 _144607 P z'''' _108742 p _108743 _108744) (@lem8192633 _144530 _144607 P z'''' _108742 p _108743 _108744)). Qed.
Lemma lem8192652 {_144530 _144607 _144645 P : Type'} (_108742 : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (_108743 : _144530 -> _144607) (_108744 : P) : (term930 _144530 _144607 _144645 P _108742 pat _108743 _108744) = (term930 _144530 _144607 _144645 P _108742 pat _108743 _108744).
Proof. exact (eq_refl (term930 _144530 _144607 _144645 P _108742 pat _108743 _108744)). Qed.
Lemma lem8192653 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (z'''' : type518 _144530 _144607 P) (_108742 : _144530 -> _144607) (p : type560 _144530 _144607 P) (_108743 : _144530 -> _144607) (_108744 : P) : (term980 _144530 _144607 _144645 P pat p z'''' _108742 _108743 _108744) = (term977 _144530 _144607 _144645 P pat z'''' _108742 p _108743 _108744).
Proof. exact (MK_COMB (@lem8192652 _144530 _144607 _144645 P _108742 pat _108743 _108744) (@lem8192651 _144530 _144607 P z'''' _108742 p _108743 _108744)). Qed.
Lemma lem8192664 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (z'''' : type518 _144530 _144607 P) (_108742 : _144530 -> _144607) (p : type560 _144530 _144607 P) (_108743 : _144530 -> _144607) (_108744 : P) : ((term915 _144530 _144607 _144645 P p z'''' _108742 pat _108743 _108744) = (term980 _144530 _144607 _144645 P pat p z'''' _108742 _108743 _108744)) = ((term977 _144530 _144607 _144645 P pat z'''' _108742 p _108743 _108744) = (term977 _144530 _144607 _144645 P pat z'''' _108742 p _108743 _108744)).
Proof. exact (MK_COMB (@lem8192592 _144530 _144607 _144645 P pat z'''' _108742 p _108743 _108744) (@lem8192653 _144530 _144607 _144645 P pat z'''' _108742 p _108743 _108744)). Qed.
Lemma lem8192666 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem20665 A x) (@lem20664 A x)). Qed.
Lemma lem8192667 (x : Prop) : (x = x) = True.
Proof. exact (@lem8192666 Prop x). Qed.
Lemma lem8192668 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (z'''' : type518 _144530 _144607 P) (_108742 : _144530 -> _144607) (p : type560 _144530 _144607 P) (_108743 : _144530 -> _144607) (_108744 : P) : ((term977 _144530 _144607 _144645 P pat z'''' _108742 p _108743 _108744) = (term977 _144530 _144607 _144645 P pat z'''' _108742 p _108743 _108744)) = True.
Proof. exact (@lem8192667 (term977 _144530 _144607 _144645 P pat z'''' _108742 p _108743 _108744)). Qed.
Lemma lem8192669 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (z'''' : type518 _144530 _144607 P) (_108742 : _144530 -> _144607) (_108743 : _144530 -> _144607) (_108744 : P) : ((term915 _144530 _144607 _144645 P p z'''' _108742 pat _108743 _108744) = (term980 _144530 _144607 _144645 P pat p z'''' _108742 _108743 _108744)) = True.
Proof. exact (TRANS (@lem8192664 _144530 _144607 _144645 P pat z'''' _108742 p _108743 _108744) (@lem8192668 _144530 _144607 _144645 P pat z'''' _108742 p _108743 _108744)). Qed.
Lemma lem8192670 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (z'''' : type518 _144530 _144607 P) (_108742 : _144530 -> _144607) (_108743 : _144530 -> _144607) (_108744 : P) : True = ((term915 _144530 _144607 _144645 P p z'''' _108742 pat _108743 _108744) = (term980 _144530 _144607 _144645 P pat p z'''' _108742 _108743 _108744)).
Proof. exact (SYM (@lem8192669 _144530 _144607 _144645 P pat p z'''' _108742 _108743 _108744)). Qed.
Lemma lem8192671 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (z'''' : type518 _144530 _144607 P) (_108742 : _144530 -> _144607) (_108743 : _144530 -> _144607) (_108744 : P) : (term915 _144530 _144607 _144645 P p z'''' _108742 pat _108743 _108744) = (term980 _144530 _144607 _144645 P pat p z'''' _108742 _108743 _108744).
Proof. exact (EQ_MP (@lem8192670 _144530 _144607 _144645 P pat p z'''' _108742 _108743 _108744) (@lem0)). Qed.
Lemma lem8192672 {_144529 _144530 _144607 _144645 P : Type'} (_108742 : _144530 -> _144607) (_108743 : _144530 -> _144607) (_108744 : P) (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z'''' : type518 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (h1 : term553 _144529 _144530 _144607 _144645 P p lt2 s z'''' pat) : term980 _144530 _144607 _144645 P pat p z'''' _108742 _108743 _108744.
Proof. exact (EQ_MP (@lem8192671 _144530 _144607 _144645 P pat p z'''' _108742 _108743 _108744) (@lem8191139 _144529 _144530 _144607 _144645 P _108742 _108743 _108744 p lt2 s z'''' pat h1)). Qed.
Lemma lem8192674 (b : Prop) (a : Prop) : (a \/ b) = (term940 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem8192675 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (z'''' : type518 _144530 _144607 P) (_108742 : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (_108743 : _144530 -> _144607) (_108744 : P) : (term980 _144530 _144607 _144645 P pat p z'''' _108742 _108743 _108744) = (term981 _144530 _144607 _144645 P p z'''' _108742 pat _108743 _108744).
Proof. exact (@lem8192674 (term895 _144530 _144607 P p z'''' _108742 _108743 _108744) ((term835 _144530 _144607 _144645 P pat _108742 _108744) = (term835 _144530 _144607 _144645 P pat _108743 _108744))). Qed.
Lemma lem8192677 (a : Prop) (b : Prop) : (term942 a b) = (term943 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem8192678 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (z'''' : type518 _144530 _144607 P) (_108742 : _144530 -> _144607) (_108743 : _144530 -> _144607) (_108744 : P) : (term982 _144530 _144607 P p z'''' _108742 _108743 _108744) = (term983 _144530 _144607 P p z'''' _108742 _108743 _108744).
Proof. exact (@lem8192677 (term867 _144530 _144607 P p _108742 _108744) (term890 _144530 _144607 P p z'''' _108742 _108743 _108744)). Qed.
Lemma lem8192680 (a : Prop) : (term15 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8192681 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (_108742 : _144530 -> _144607) (_108744 : P) : (term946 _144530 _144607 P p _108742 _108744) = (term822 _144530 _144607 P p _108742 _108744).
Proof. exact (@lem8192680 (term822 _144530 _144607 P p _108742 _108744)). Qed.
Lemma lem8192682 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8192683 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (_108742 : _144530 -> _144607) (_108744 : P) : (term947 _144530 _144607 P p _108742 _108744) = (term948 _144530 _144607 P p _108742 _108744).
Proof. exact (MK_COMB (@lem8192682) (@lem8192681 _144530 _144607 P p _108742 _108744)). Qed.
Lemma lem8192685 (a : Prop) (b : Prop) : (term942 a b) = (term943 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem8192686 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (z'''' : type518 _144530 _144607 P) (_108742 : _144530 -> _144607) (_108743 : _144530 -> _144607) (_108744 : P) : (term984 _144530 _144607 P p z'''' _108742 _108743 _108744) = (term985 _144530 _144607 P p z'''' _108742 _108743 _108744).
Proof. exact (@lem8192685 (term867 _144530 _144607 P p _108743 _108744) (term855 _144530 _144607 P z'''' _108742 _108743 _108744)). Qed.
Lemma lem8192688 (a : Prop) : (term15 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8192689 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (_108743 : _144530 -> _144607) (_108744 : P) : (term946 _144530 _144607 P p _108743 _108744) = (term822 _144530 _144607 P p _108743 _108744).
Proof. exact (@lem8192688 (term822 _144530 _144607 P p _108743 _108744)). Qed.
Lemma lem8192690 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8192691 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (_108743 : _144530 -> _144607) (_108744 : P) : (term947 _144530 _144607 P p _108743 _108744) = (term948 _144530 _144607 P p _108743 _108744).
Proof. exact (MK_COMB (@lem8192690) (@lem8192689 _144530 _144607 P p _108743 _108744)). Qed.
Lemma lem8192693 (a : Prop) : (term15 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8192694 {_144530 _144607 P : Type'} (z'''' : type518 _144530 _144607 P) (_108742 : _144530 -> _144607) (_108743 : _144530 -> _144607) (_108744 : P) : (term986 _144530 _144607 P z'''' _108742 _108743 _108744) = ((term848 _144530 _144607 P z'''' _108742 _108743 _108744) = (term851 _144530 _144607 P z'''' _108742 _108743 _108744)).
Proof. exact (@lem8192693 ((term848 _144530 _144607 P z'''' _108742 _108743 _108744) = (term851 _144530 _144607 P z'''' _108742 _108743 _108744))). Qed.
Lemma lem8192695 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (z'''' : type518 _144530 _144607 P) (_108742 : _144530 -> _144607) (_108743 : _144530 -> _144607) (_108744 : P) : (term985 _144530 _144607 P p z'''' _108742 _108743 _108744) = (term987 _144530 _144607 P p z'''' _108742 _108743 _108744).
Proof. exact (MK_COMB (@lem8192691 _144530 _144607 P p _108743 _108744) (@lem8192694 _144530 _144607 P z'''' _108742 _108743 _108744)). Qed.
Lemma lem8192696 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (z'''' : type518 _144530 _144607 P) (_108742 : _144530 -> _144607) (_108743 : _144530 -> _144607) (_108744 : P) : (term984 _144530 _144607 P p z'''' _108742 _108743 _108744) = (term987 _144530 _144607 P p z'''' _108742 _108743 _108744).
Proof. exact (TRANS (@lem8192686 _144530 _144607 P p z'''' _108742 _108743 _108744) (@lem8192695 _144530 _144607 P p z'''' _108742 _108743 _108744)). Qed.
Lemma lem8192697 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (z'''' : type518 _144530 _144607 P) (_108742 : _144530 -> _144607) (_108743 : _144530 -> _144607) (_108744 : P) : (term983 _144530 _144607 P p z'''' _108742 _108743 _108744) = (term988 _144530 _144607 P p z'''' _108742 _108743 _108744).
Proof. exact (MK_COMB (@lem8192683 _144530 _144607 P p _108742 _108744) (@lem8192696 _144530 _144607 P p z'''' _108742 _108743 _108744)). Qed.
Lemma lem8192698 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (z'''' : type518 _144530 _144607 P) (_108742 : _144530 -> _144607) (_108743 : _144530 -> _144607) (_108744 : P) : (term982 _144530 _144607 P p z'''' _108742 _108743 _108744) = (term988 _144530 _144607 P p z'''' _108742 _108743 _108744).
Proof. exact (TRANS (@lem8192678 _144530 _144607 P p z'''' _108742 _108743 _108744) (@lem8192697 _144530 _144607 P p z'''' _108742 _108743 _108744)). Qed.
Lemma lem8192699 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8192700 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (z'''' : type518 _144530 _144607 P) (_108742 : _144530 -> _144607) (_108743 : _144530 -> _144607) (_108744 : P) : (term989 _144530 _144607 P p z'''' _108742 _108743 _108744) = (term990 _144530 _144607 P p z'''' _108742 _108743 _108744).
Proof. exact (MK_COMB (@lem8192699) (@lem8192698 _144530 _144607 P p z'''' _108742 _108743 _108744)). Qed.
Lemma lem8192701 {_144530 _144607 _144645 P : Type'} (_108742 : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (_108743 : _144530 -> _144607) (_108744 : P) : ((term835 _144530 _144607 _144645 P pat _108742 _108744) = (term835 _144530 _144607 _144645 P pat _108743 _108744)) = ((term835 _144530 _144607 _144645 P pat _108742 _108744) = (term835 _144530 _144607 _144645 P pat _108743 _108744)).
Proof. exact (eq_refl ((term835 _144530 _144607 _144645 P pat _108742 _108744) = (term835 _144530 _144607 _144645 P pat _108743 _108744))). Qed.
Lemma lem8192702 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (z'''' : type518 _144530 _144607 P) (_108742 : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (_108743 : _144530 -> _144607) (_108744 : P) : (term981 _144530 _144607 _144645 P p z'''' _108742 pat _108743 _108744) = (term991 _144530 _144607 _144645 P p z'''' _108742 pat _108743 _108744).
Proof. exact (MK_COMB (@lem8192700 _144530 _144607 P p z'''' _108742 _108743 _108744) (@lem8192701 _144530 _144607 _144645 P _108742 pat _108743 _108744)). Qed.
Lemma lem8192703 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (z'''' : type518 _144530 _144607 P) (_108742 : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (_108743 : _144530 -> _144607) (_108744 : P) : (term980 _144530 _144607 _144645 P pat p z'''' _108742 _108743 _108744) = (term991 _144530 _144607 _144645 P p z'''' _108742 pat _108743 _108744).
Proof. exact (TRANS (@lem8192675 _144530 _144607 _144645 P p z'''' _108742 pat _108743 _108744) (@lem8192702 _144530 _144607 _144645 P p z'''' _108742 pat _108743 _108744)). Qed.
Lemma lem8192705 {_144529 _144530 _144607 _144645 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z'''' : type518 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) (h2 : term553 _144529 _144530 _144607 _144645 P p lt2 s z'''' pat) (h3 : term839 _144530 _144607 _144645 P f pat g a) (h4 : p f a) (h5 : p g a) : term987 _144530 _144607 P p z'''' f g a.
Proof. exact (conj (@lem8192122 _144530 _144607 P p g a h5) (@lem8192466 _144529 _144530 _144607 _144645 P lt2 s z'''' pat f p g a h1 h2 h3 h4 h5)). Qed.
Lemma lem8192706 {_144529 _144530 _144607 _144645 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z'''' : type518 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) (h2 : term553 _144529 _144530 _144607 _144645 P p lt2 s z'''' pat) (h3 : term839 _144530 _144607 _144645 P f pat g a) (h4 : p f a) (h5 : p g a) : term988 _144530 _144607 P p z'''' f g a.
Proof. exact (conj (@lem8192115 _144530 _144607 P p f a h4) (@lem8192705 _144529 _144530 _144607 _144645 P lt2 s z'''' pat f p g a h1 h2 h3 h4 h5)). Qed.
Lemma lem8192708 {_144529 _144530 _144607 _144645 P : Type'} (_108742 : _144530 -> _144607) (_108743 : _144530 -> _144607) (_108744 : P) (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z'''' : type518 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (h1 : term553 _144529 _144530 _144607 _144645 P p lt2 s z'''' pat) : term991 _144530 _144607 _144645 P p z'''' _108742 pat _108743 _108744.
Proof. exact (EQ_MP (@lem8192703 _144530 _144607 _144645 P p z'''' _108742 pat _108743 _108744) (@lem8192672 _144529 _144530 _144607 _144645 P _108742 _108743 _108744 p lt2 s z'''' pat h1)). Qed.
Lemma lem8192709 {_144529 _144530 _144607 _144645 P : Type'} (_108742 : _144530 -> _144607) (_108743 : _144530 -> _144607) (_108744 : P) (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z'''' : type518 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (h1 : term553 _144529 _144530 _144607 _144645 P p lt2 s z'''' pat) : term991 _144530 _144607 _144645 P p z'''' _108742 pat _108743 _108744.
Proof. exact (@lem8192708 _144529 _144530 _144607 _144645 P _108742 _108743 _108744 p lt2 s z'''' pat h1). Qed.
Lemma lem8192710 {_144529 _144530 _144607 _144645 P : Type'} (f : _144530 -> _144607) (g : _144530 -> _144607) (a : P) (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z'''' : type518 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (h1 : term553 _144529 _144530 _144607 _144645 P p lt2 s z'''' pat) : term991 _144530 _144607 _144645 P p z'''' f pat g a.
Proof. exact (@lem8192709 _144529 _144530 _144607 _144645 P f g a p lt2 s z'''' pat h1). Qed.
Lemma lem8192713 {_144529 _144530 _144607 _144645 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z'''' : type518 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) (h2 : term553 _144529 _144530 _144607 _144645 P p lt2 s z'''' pat) (h3 : term839 _144530 _144607 _144645 P f pat g a) (h4 : p f a) (h5 : p g a) : (term835 _144530 _144607 _144645 P pat f a) = (term835 _144530 _144607 _144645 P pat g a).
Proof. exact (@lem8192710 _144529 _144530 _144607 _144645 P f g a p lt2 s z'''' pat h2 (@lem8192706 _144529 _144530 _144607 _144645 P lt2 s z'''' pat f p g a h1 h2 h3 h4 h5)). Qed.
Lemma lem8192714 {_144529 _144530 _144607 _144645 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z'''' : type518 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) (h2 : term553 _144529 _144530 _144607 _144645 P p lt2 s z'''' pat) (h3 : p f a) (h4 : p g a) : term992 _144530 _144607 _144645 P f pat g a.
Proof. exact (fun h0 : term839 _144530 _144607 _144645 P f pat g a => @lem8192713 _144529 _144530 _144607 _144645 P lt2 s z'''' pat f p g a h1 h2 h0 h3 h4). Qed.
Lemma lem8192716 (p : Prop) : (term57 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8192717 {_144530 _144607 _144645 P : Type'} (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term992 _144530 _144607 _144645 P f pat g a) = ((term835 _144530 _144607 _144645 P pat f a) = (term835 _144530 _144607 _144645 P pat g a)).
Proof. exact (@lem8192716 ((term835 _144530 _144607 _144645 P pat f a) = (term835 _144530 _144607 _144645 P pat g a))). Qed.
Lemma lem8192718 {_144529 _144530 _144607 _144645 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z'''' : type518 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) (h2 : term553 _144529 _144530 _144607 _144645 P p lt2 s z'''' pat) (h3 : p f a) (h4 : p g a) : (term835 _144530 _144607 _144645 P pat f a) = (term835 _144530 _144607 _144645 P pat g a).
Proof. exact (EQ_MP (@lem8192717 _144530 _144607 _144645 P f pat g a) (@lem8192714 _144529 _144530 _144607 _144645 P lt2 s z'''' pat f p g a h1 h2 h3 h4)). Qed.
Lemma lem8192721 (p : Prop) : (~ p) = (p -> False).
Proof. exact (EQ_MP (@lem21021 p) (@lem0)). Qed.
Lemma lem8192723 {_144530 _144607 _144645 P : Type'} (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term839 _144530 _144607 _144645 P f pat g a) = (term993 _144530 _144607 _144645 P f pat g a).
Proof. exact (@lem8192721 ((term835 _144530 _144607 _144645 P pat f a) = (term835 _144530 _144607 _144645 P pat g a))). Qed.
Lemma lem8192726 {_144530 _144607 _144645 P : Type'} (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) (h1 : term839 _144530 _144607 _144645 P f pat g a) : term993 _144530 _144607 _144645 P f pat g a.
Proof. exact (EQ_MP (@lem8192723 _144530 _144607 _144645 P f pat g a) (@lem8191103 _144530 _144607 _144645 P f pat g a h1)). Qed.
Lemma lem8192729 {_144529 _144530 _144607 _144645 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z'''' : type518 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) (h2 : term553 _144529 _144530 _144607 _144645 P p lt2 s z'''' pat) (h3 : term839 _144530 _144607 _144645 P f pat g a) (h4 : p f a) (h5 : p g a) : False.
Proof. exact (@lem8192726 _144530 _144607 _144645 P f pat g a h3 (@lem8192718 _144529 _144530 _144607 _144645 P lt2 s z'''' pat f p g a h1 h2 h4 h5)). Qed.
Lemma lem8192730 {_144529 _144530 _144607 _144645 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z'''' : type518 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) (h2 : term553 _144529 _144530 _144607 _144645 P p lt2 s z'''' pat) (h3 : term839 _144530 _144607 _144645 P f pat g a) (h4 : p f a) (h5 : p g a) : term59.
Proof. exact (fun h0 : ~ False => @lem8192729 _144529 _144530 _144607 _144645 P lt2 s z'''' pat f p g a h1 h2 h3 h4 h5). Qed.
Lemma lem8192732 (p : Prop) : (term57 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8192733 : term59 = False.
Proof. exact (@lem8192732 False). Qed.
Lemma lem8192734 {_144529 _144530 _144607 _144645 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z'''' : type518 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) (h2 : term553 _144529 _144530 _144607 _144645 P p lt2 s z'''' pat) (h3 : term839 _144530 _144607 _144645 P f pat g a) (h4 : p f a) (h5 : p g a) : False.
Proof. exact (EQ_MP (@lem8192733) (@lem8192730 _144529 _144530 _144607 _144645 P lt2 s z'''' pat f p g a h1 h2 h3 h4 h5)). Qed.
Lemma lem8192977 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) (h1 : p f a) : term822 _144530 _144607 P p f a.
Proof. exact (EQ_MP (@lem8188587 _144530 _144607 P p f a) (@lem8188484 _144530 _144607 P p f a h1)). Qed.
Lemma lem8192978 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) (h1 : p f a) : term916 _144530 _144607 P p f a.
Proof. exact (fun h0 : term867 _144530 _144607 P p f a => @lem8192977 _144530 _144607 P p f a h1). Qed.
Lemma lem8192980 (p : Prop) : (term57 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8192981 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) : (term916 _144530 _144607 P p f a) = (term822 _144530 _144607 P p f a).
Proof. exact (@lem8192980 (term822 _144530 _144607 P p f a)). Qed.
Lemma lem8192982 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) (h1 : p f a) : term822 _144530 _144607 P p f a.
Proof. exact (EQ_MP (@lem8192981 _144530 _144607 P p f a) (@lem8192978 _144530 _144607 P p f a h1)). Qed.
Lemma lem8192984 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : p g a) : term822 _144530 _144607 P p g a.
Proof. exact (EQ_MP (@lem8188605 _144530 _144607 P p g a) (@lem8188490 _144530 _144607 P p g a h1)). Qed.
Lemma lem8192985 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : p g a) : term916 _144530 _144607 P p g a.
Proof. exact (fun h0 : term867 _144530 _144607 P p g a => @lem8192984 _144530 _144607 P p g a h1). Qed.
Lemma lem8192987 (p : Prop) : (term57 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8192988 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term916 _144530 _144607 P p g a) = (term822 _144530 _144607 P p g a).
Proof. exact (@lem8192987 (term822 _144530 _144607 P p g a)). Qed.
Lemma lem8192989 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : p g a) : term822 _144530 _144607 P p g a.
Proof. exact (EQ_MP (@lem8192988 _144530 _144607 P p g a) (@lem8192985 _144530 _144607 P p g a h1)). Qed.
Lemma lem8192991 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) (h1 : p f a) : term822 _144530 _144607 P p f a.
Proof. exact (EQ_MP (@lem8188587 _144530 _144607 P p f a) (@lem8188484 _144530 _144607 P p f a h1)). Qed.
Lemma lem8192992 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) (h1 : p f a) : term916 _144530 _144607 P p f a.
Proof. exact (fun h0 : term867 _144530 _144607 P p f a => @lem8192991 _144530 _144607 P p f a h1). Qed.
Lemma lem8192994 (p : Prop) : (term57 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8192995 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) : (term916 _144530 _144607 P p f a) = (term822 _144530 _144607 P p f a).
Proof. exact (@lem8192994 (term822 _144530 _144607 P p f a)). Qed.
Lemma lem8192996 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) (h1 : p f a) : term822 _144530 _144607 P p f a.
Proof. exact (EQ_MP (@lem8192995 _144530 _144607 P p f a) (@lem8192992 _144530 _144607 P p f a h1)). Qed.
Lemma lem8192998 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : p g a) : term822 _144530 _144607 P p g a.
Proof. exact (EQ_MP (@lem8188605 _144530 _144607 P p g a) (@lem8188490 _144530 _144607 P p g a h1)). Qed.
Lemma lem8192999 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : p g a) : term916 _144530 _144607 P p g a.
Proof. exact (fun h0 : term867 _144530 _144607 P p g a => @lem8192998 _144530 _144607 P p g a h1). Qed.
Lemma lem8193001 (p : Prop) : (term57 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8193002 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term916 _144530 _144607 P p g a) = (term822 _144530 _144607 P p g a).
Proof. exact (@lem8193001 (term822 _144530 _144607 P p g a)). Qed.
Lemma lem8193003 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : p g a) : term822 _144530 _144607 P p g a.
Proof. exact (EQ_MP (@lem8193002 _144530 _144607 P p g a) (@lem8192999 _144530 _144607 P p g a h1)). Qed.
Lemma lem8193006 {_144530 _144607 _144645 P : Type'} (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) (h1 : term839 _144530 _144607 _144645 P f e g a) : term839 _144530 _144607 _144645 P f e g a.
Proof. exact (h1). Qed.
Lemma lem8193007 {_144530 _144607 _144645 P : Type'} (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) (h1 : term839 _144530 _144607 _144645 P f e g a) : term917 _144530 _144607 _144645 P f e g a.
Proof. exact (fun h0 : (term835 _144530 _144607 _144645 P e f a) = (term835 _144530 _144607 _144645 P e g a) => @lem8193006 _144530 _144607 _144645 P f e g a h1). Qed.
Lemma lem8193009 (p : Prop) : (term918 p) = (~ p).
Proof. exact (EQ_MP (@lem21028 p) (@lem21107 p)). Qed.
Lemma lem8193010 {_144530 _144607 _144645 P : Type'} (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term917 _144530 _144607 _144645 P f e g a) = (term839 _144530 _144607 _144645 P f e g a).
Proof. exact (@lem8193009 ((term835 _144530 _144607 _144645 P e f a) = (term835 _144530 _144607 _144645 P e g a))). Qed.
Lemma lem8193011 {_144530 _144607 _144645 P : Type'} (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) (h1 : term839 _144530 _144607 _144645 P f e g a) : term839 _144530 _144607 _144645 P f e g a.
Proof. exact (EQ_MP (@lem8193010 _144530 _144607 _144645 P f e g a) (@lem8193007 _144530 _144607 _144645 P f e g a h1)). Qed.
Lemma lem8193027 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8193028 {_144529 _144530 _144607 _144645 P : Type'} (lt2 : type1470 _144529 _144530) (z''' : type518 _144530 _144607 P) (s : P -> _144529) (p : type560 _144530 _144607 P) (_108755 : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (_108756 : _144530 -> _144607) (_108757 : P) : (term910 _144529 _144530 _144607 _144645 P p lt2 z''' s _108755 e _108756 _108757) = (term919 _144529 _144530 _144607 _144645 P lt2 z''' s p _108755 e _108756 _108757).
Proof. exact (@lem8193027 (term862 _144529 _144530 _144607 P lt2 z''' _108755 _108756 s _108757) (term867 _144530 _144607 P p _108756 _108757) ((term835 _144530 _144607 _144645 P e _108755 _108757) = (term835 _144530 _144607 _144645 P e _108756 _108757))). Qed.
Lemma lem8193042 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem8193043 {_144530 _144607 _144645 P : Type'} (_108755 : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_108756 : _144530 -> _144607) (_108757 : P) : (term920 _144530 _144607 _144645 P p _108755 e _108756 _108757) = (term921 _144530 _144607 _144645 P _108755 e p _108756 _108757).
Proof. exact (@lem8193042 ((term835 _144530 _144607 _144645 P e _108755 _108757) = (term835 _144530 _144607 _144645 P e _108756 _108757)) (term867 _144530 _144607 P p _108756 _108757)). Qed.
Lemma lem8193051 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (z''' : type518 _144530 _144607 P) (_108755 : _144530 -> _144607) (_108756 : _144530 -> _144607) (s : P -> _144529) (_108757 : P) : (term922 _144529 _144530 _144607 P lt2 z''' _108755 _108756 s _108757) = (term922 _144529 _144530 _144607 P lt2 z''' _108755 _108756 s _108757).
Proof. exact (eq_refl (term922 _144529 _144530 _144607 P lt2 z''' _108755 _108756 s _108757)). Qed.
Lemma lem8193052 {_144529 _144530 _144607 _144645 P : Type'} (lt2 : type1470 _144529 _144530) (z''' : type518 _144530 _144607 P) (s : P -> _144529) (_108755 : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_108756 : _144530 -> _144607) (_108757 : P) : (term919 _144529 _144530 _144607 _144645 P lt2 z''' s p _108755 e _108756 _108757) = (term923 _144529 _144530 _144607 _144645 P lt2 z''' s _108755 e p _108756 _108757).
Proof. exact (MK_COMB (@lem8193051 _144529 _144530 _144607 P lt2 z''' _108755 _108756 s _108757) (@lem8193043 _144530 _144607 _144645 P _108755 e p _108756 _108757)). Qed.
Lemma lem8193056 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8193057 {_144529 _144530 _144607 _144645 P : Type'} (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (z''' : type518 _144530 _144607 P) (_108755 : _144530 -> _144607) (s : P -> _144529) (p : type560 _144530 _144607 P) (_108756 : _144530 -> _144607) (_108757 : P) : (term923 _144529 _144530 _144607 _144645 P lt2 z''' s _108755 e p _108756 _108757) = (term924 _144529 _144530 _144607 _144645 P e lt2 z''' _108755 s p _108756 _108757).
Proof. exact (@lem8193056 ((term835 _144530 _144607 _144645 P e _108755 _108757) = (term835 _144530 _144607 _144645 P e _108756 _108757)) (term862 _144529 _144530 _144607 P lt2 z''' _108755 _108756 s _108757) (term867 _144530 _144607 P p _108756 _108757)). Qed.
Lemma lem8193075 {_144529 _144530 _144607 _144645 P : Type'} (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (z''' : type518 _144530 _144607 P) (_108755 : _144530 -> _144607) (s : P -> _144529) (p : type560 _144530 _144607 P) (_108756 : _144530 -> _144607) (_108757 : P) : (term919 _144529 _144530 _144607 _144645 P lt2 z''' s p _108755 e _108756 _108757) = (term924 _144529 _144530 _144607 _144645 P e lt2 z''' _108755 s p _108756 _108757).
Proof. exact (TRANS (@lem8193052 _144529 _144530 _144607 _144645 P lt2 z''' s _108755 e p _108756 _108757) (@lem8193057 _144529 _144530 _144607 _144645 P e lt2 z''' _108755 s p _108756 _108757)). Qed.
Lemma lem8193076 {_144529 _144530 _144607 _144645 P : Type'} (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (z''' : type518 _144530 _144607 P) (_108755 : _144530 -> _144607) (s : P -> _144529) (p : type560 _144530 _144607 P) (_108756 : _144530 -> _144607) (_108757 : P) : (term910 _144529 _144530 _144607 _144645 P p lt2 z''' s _108755 e _108756 _108757) = (term924 _144529 _144530 _144607 _144645 P e lt2 z''' _108755 s p _108756 _108757).
Proof. exact (TRANS (@lem8193028 _144529 _144530 _144607 _144645 P lt2 z''' s p _108755 e _108756 _108757) (@lem8193075 _144529 _144530 _144607 _144645 P e lt2 z''' _108755 s p _108756 _108757)). Qed.
Lemma lem8193077 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (_108755 : _144530 -> _144607) (_108757 : P) : (term868 _144530 _144607 P p _108755 _108757) = (term868 _144530 _144607 P p _108755 _108757).
Proof. exact (eq_refl (term868 _144530 _144607 P p _108755 _108757)). Qed.
Lemma lem8193078 {_144529 _144530 _144607 _144645 P : Type'} (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (z''' : type518 _144530 _144607 P) (_108755 : _144530 -> _144607) (s : P -> _144529) (p : type560 _144530 _144607 P) (_108756 : _144530 -> _144607) (_108757 : P) : (term911 _144529 _144530 _144607 _144645 P p lt2 z''' s _108755 e _108756 _108757) = (term925 _144529 _144530 _144607 _144645 P e lt2 z''' _108755 s p _108756 _108757).
Proof. exact (MK_COMB (@lem8193077 _144530 _144607 P p _108755 _108757) (@lem8193076 _144529 _144530 _144607 _144645 P e lt2 z''' _108755 s p _108756 _108757)). Qed.
Lemma lem8193082 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8193083 {_144529 _144530 _144607 _144645 P : Type'} (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (z''' : type518 _144530 _144607 P) (_108755 : _144530 -> _144607) (s : P -> _144529) (p : type560 _144530 _144607 P) (_108756 : _144530 -> _144607) (_108757 : P) : (term925 _144529 _144530 _144607 _144645 P e lt2 z''' _108755 s p _108756 _108757) = (term926 _144529 _144530 _144607 _144645 P e lt2 z''' _108755 s p _108756 _108757).
Proof. exact (@lem8193082 ((term835 _144530 _144607 _144645 P e _108755 _108757) = (term835 _144530 _144607 _144645 P e _108756 _108757)) (term867 _144530 _144607 P p _108755 _108757) (term927 _144529 _144530 _144607 P lt2 z''' _108755 s p _108756 _108757)). Qed.
Lemma lem8193099 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8193100 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (z''' : type518 _144530 _144607 P) (s : P -> _144529) (_108755 : _144530 -> _144607) (p : type560 _144530 _144607 P) (_108756 : _144530 -> _144607) (_108757 : P) : (term928 _144529 _144530 _144607 P lt2 z''' _108755 s p _108756 _108757) = (term929 _144529 _144530 _144607 P lt2 z''' s _108755 p _108756 _108757).
Proof. exact (@lem8193099 (term862 _144529 _144530 _144607 P lt2 z''' _108755 _108756 s _108757) (term867 _144530 _144607 P p _108755 _108757) (term867 _144530 _144607 P p _108756 _108757)). Qed.
Lemma lem8193116 {_144530 _144607 _144645 P : Type'} (_108755 : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (_108756 : _144530 -> _144607) (_108757 : P) : (term930 _144530 _144607 _144645 P _108755 e _108756 _108757) = (term930 _144530 _144607 _144645 P _108755 e _108756 _108757).
Proof. exact (eq_refl (term930 _144530 _144607 _144645 P _108755 e _108756 _108757)). Qed.
Lemma lem8193117 {_144529 _144530 _144607 _144645 P : Type'} (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (z''' : type518 _144530 _144607 P) (s : P -> _144529) (_108755 : _144530 -> _144607) (p : type560 _144530 _144607 P) (_108756 : _144530 -> _144607) (_108757 : P) : (term926 _144529 _144530 _144607 _144645 P e lt2 z''' _108755 s p _108756 _108757) = (term931 _144529 _144530 _144607 _144645 P e lt2 z''' s _108755 p _108756 _108757).
Proof. exact (MK_COMB (@lem8193116 _144530 _144607 _144645 P _108755 e _108756 _108757) (@lem8193100 _144529 _144530 _144607 P lt2 z''' s _108755 p _108756 _108757)). Qed.
Lemma lem8193128 {_144529 _144530 _144607 _144645 P : Type'} (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (z''' : type518 _144530 _144607 P) (s : P -> _144529) (_108755 : _144530 -> _144607) (p : type560 _144530 _144607 P) (_108756 : _144530 -> _144607) (_108757 : P) : (term925 _144529 _144530 _144607 _144645 P e lt2 z''' _108755 s p _108756 _108757) = (term931 _144529 _144530 _144607 _144645 P e lt2 z''' s _108755 p _108756 _108757).
Proof. exact (TRANS (@lem8193083 _144529 _144530 _144607 _144645 P e lt2 z''' _108755 s p _108756 _108757) (@lem8193117 _144529 _144530 _144607 _144645 P e lt2 z''' s _108755 p _108756 _108757)). Qed.
Lemma lem8193129 {_144529 _144530 _144607 _144645 P : Type'} (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (z''' : type518 _144530 _144607 P) (s : P -> _144529) (_108755 : _144530 -> _144607) (p : type560 _144530 _144607 P) (_108756 : _144530 -> _144607) (_108757 : P) : (term911 _144529 _144530 _144607 _144645 P p lt2 z''' s _108755 e _108756 _108757) = (term931 _144529 _144530 _144607 _144645 P e lt2 z''' s _108755 p _108756 _108757).
Proof. exact (TRANS (@lem8193078 _144529 _144530 _144607 _144645 P e lt2 z''' _108755 s p _108756 _108757) (@lem8193128 _144529 _144530 _144607 _144645 P e lt2 z''' s _108755 p _108756 _108757)). Qed.
Lemma lem8193130 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8193131 {_144529 _144530 _144607 _144645 P : Type'} (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (z''' : type518 _144530 _144607 P) (s : P -> _144529) (_108755 : _144530 -> _144607) (p : type560 _144530 _144607 P) (_108756 : _144530 -> _144607) (_108757 : P) : (term932 _144529 _144530 _144607 _144645 P p lt2 z''' s _108755 e _108756 _108757) = (term933 _144529 _144530 _144607 _144645 P e lt2 z''' s _108755 p _108756 _108757).
Proof. exact (MK_COMB (@lem8193130) (@lem8193129 _144529 _144530 _144607 _144645 P e lt2 z''' s _108755 p _108756 _108757)). Qed.
Lemma lem8193155 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem8193156 {_144530 _144607 _144645 P : Type'} (_108755 : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_108756 : _144530 -> _144607) (_108757 : P) : (term920 _144530 _144607 _144645 P p _108755 e _108756 _108757) = (term921 _144530 _144607 _144645 P _108755 e p _108756 _108757).
Proof. exact (@lem8193155 ((term835 _144530 _144607 _144645 P e _108755 _108757) = (term835 _144530 _144607 _144645 P e _108756 _108757)) (term867 _144530 _144607 P p _108756 _108757)). Qed.
Lemma lem8193164 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (_108755 : _144530 -> _144607) (_108757 : P) : (term868 _144530 _144607 P p _108755 _108757) = (term868 _144530 _144607 P p _108755 _108757).
Proof. exact (eq_refl (term868 _144530 _144607 P p _108755 _108757)). Qed.
Lemma lem8193165 {_144530 _144607 _144645 P : Type'} (_108755 : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_108756 : _144530 -> _144607) (_108757 : P) : (term934 _144530 _144607 _144645 P p _108755 e _108756 _108757) = (term935 _144530 _144607 _144645 P _108755 e p _108756 _108757).
Proof. exact (MK_COMB (@lem8193164 _144530 _144607 P p _108755 _108757) (@lem8193156 _144530 _144607 _144645 P _108755 e p _108756 _108757)). Qed.
Lemma lem8193169 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8193170 {_144530 _144607 _144645 P : Type'} (e : type564 _144530 _144607 _144645 P) (_108755 : _144530 -> _144607) (p : type560 _144530 _144607 P) (_108756 : _144530 -> _144607) (_108757 : P) : (term935 _144530 _144607 _144645 P _108755 e p _108756 _108757) = (term936 _144530 _144607 _144645 P e _108755 p _108756 _108757).
Proof. exact (@lem8193169 ((term835 _144530 _144607 _144645 P e _108755 _108757) = (term835 _144530 _144607 _144645 P e _108756 _108757)) (term867 _144530 _144607 P p _108755 _108757) (term867 _144530 _144607 P p _108756 _108757)). Qed.
Lemma lem8193188 {_144530 _144607 _144645 P : Type'} (e : type564 _144530 _144607 _144645 P) (_108755 : _144530 -> _144607) (p : type560 _144530 _144607 P) (_108756 : _144530 -> _144607) (_108757 : P) : (term934 _144530 _144607 _144645 P p _108755 e _108756 _108757) = (term936 _144530 _144607 _144645 P e _108755 p _108756 _108757).
Proof. exact (TRANS (@lem8193165 _144530 _144607 _144645 P _108755 e p _108756 _108757) (@lem8193170 _144530 _144607 _144645 P e _108755 p _108756 _108757)). Qed.
Lemma lem8193189 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (z''' : type518 _144530 _144607 P) (_108755 : _144530 -> _144607) (_108756 : _144530 -> _144607) (s : P -> _144529) (_108757 : P) : (term922 _144529 _144530 _144607 P lt2 z''' _108755 _108756 s _108757) = (term922 _144529 _144530 _144607 P lt2 z''' _108755 _108756 s _108757).
Proof. exact (eq_refl (term922 _144529 _144530 _144607 P lt2 z''' _108755 _108756 s _108757)). Qed.
Lemma lem8193190 {_144529 _144530 _144607 _144645 P : Type'} (lt2 : type1470 _144529 _144530) (z''' : type518 _144530 _144607 P) (s : P -> _144529) (e : type564 _144530 _144607 _144645 P) (_108755 : _144530 -> _144607) (p : type560 _144530 _144607 P) (_108756 : _144530 -> _144607) (_108757 : P) : (term937 _144529 _144530 _144607 _144645 P lt2 z''' s p _108755 e _108756 _108757) = (term938 _144529 _144530 _144607 _144645 P lt2 z''' s e _108755 p _108756 _108757).
Proof. exact (MK_COMB (@lem8193189 _144529 _144530 _144607 P lt2 z''' _108755 _108756 s _108757) (@lem8193188 _144530 _144607 _144645 P e _108755 p _108756 _108757)). Qed.
Lemma lem8193194 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8193195 {_144529 _144530 _144607 _144645 P : Type'} (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (z''' : type518 _144530 _144607 P) (s : P -> _144529) (_108755 : _144530 -> _144607) (p : type560 _144530 _144607 P) (_108756 : _144530 -> _144607) (_108757 : P) : (term938 _144529 _144530 _144607 _144645 P lt2 z''' s e _108755 p _108756 _108757) = (term931 _144529 _144530 _144607 _144645 P e lt2 z''' s _108755 p _108756 _108757).
Proof. exact (@lem8193194 ((term835 _144530 _144607 _144645 P e _108755 _108757) = (term835 _144530 _144607 _144645 P e _108756 _108757)) (term862 _144529 _144530 _144607 P lt2 z''' _108755 _108756 s _108757) (term939 _144530 _144607 P _108755 p _108756 _108757)). Qed.
Lemma lem8193223 {_144529 _144530 _144607 _144645 P : Type'} (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (z''' : type518 _144530 _144607 P) (s : P -> _144529) (_108755 : _144530 -> _144607) (p : type560 _144530 _144607 P) (_108756 : _144530 -> _144607) (_108757 : P) : (term937 _144529 _144530 _144607 _144645 P lt2 z''' s p _108755 e _108756 _108757) = (term931 _144529 _144530 _144607 _144645 P e lt2 z''' s _108755 p _108756 _108757).
Proof. exact (TRANS (@lem8193190 _144529 _144530 _144607 _144645 P lt2 z''' s e _108755 p _108756 _108757) (@lem8193195 _144529 _144530 _144607 _144645 P e lt2 z''' s _108755 p _108756 _108757)). Qed.
Lemma lem8193224 {_144529 _144530 _144607 _144645 P : Type'} (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (z''' : type518 _144530 _144607 P) (s : P -> _144529) (_108755 : _144530 -> _144607) (p : type560 _144530 _144607 P) (_108756 : _144530 -> _144607) (_108757 : P) : ((term911 _144529 _144530 _144607 _144645 P p lt2 z''' s _108755 e _108756 _108757) = (term937 _144529 _144530 _144607 _144645 P lt2 z''' s p _108755 e _108756 _108757)) = ((term931 _144529 _144530 _144607 _144645 P e lt2 z''' s _108755 p _108756 _108757) = (term931 _144529 _144530 _144607 _144645 P e lt2 z''' s _108755 p _108756 _108757)).
Proof. exact (MK_COMB (@lem8193131 _144529 _144530 _144607 _144645 P e lt2 z''' s _108755 p _108756 _108757) (@lem8193223 _144529 _144530 _144607 _144645 P e lt2 z''' s _108755 p _108756 _108757)). Qed.
Lemma lem8193226 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem20665 A x) (@lem20664 A x)). Qed.
Lemma lem8193227 (x : Prop) : (x = x) = True.
Proof. exact (@lem8193226 Prop x). Qed.
Lemma lem8193228 {_144529 _144530 _144607 _144645 P : Type'} (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (z''' : type518 _144530 _144607 P) (s : P -> _144529) (_108755 : _144530 -> _144607) (p : type560 _144530 _144607 P) (_108756 : _144530 -> _144607) (_108757 : P) : ((term931 _144529 _144530 _144607 _144645 P e lt2 z''' s _108755 p _108756 _108757) = (term931 _144529 _144530 _144607 _144645 P e lt2 z''' s _108755 p _108756 _108757)) = True.
Proof. exact (@lem8193227 (term931 _144529 _144530 _144607 _144645 P e lt2 z''' s _108755 p _108756 _108757)). Qed.
Lemma lem8193229 {_144529 _144530 _144607 _144645 P : Type'} (lt2 : type1470 _144529 _144530) (z''' : type518 _144530 _144607 P) (s : P -> _144529) (p : type560 _144530 _144607 P) (_108755 : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (_108756 : _144530 -> _144607) (_108757 : P) : ((term911 _144529 _144530 _144607 _144645 P p lt2 z''' s _108755 e _108756 _108757) = (term937 _144529 _144530 _144607 _144645 P lt2 z''' s p _108755 e _108756 _108757)) = True.
Proof. exact (TRANS (@lem8193224 _144529 _144530 _144607 _144645 P e lt2 z''' s _108755 p _108756 _108757) (@lem8193228 _144529 _144530 _144607 _144645 P e lt2 z''' s _108755 p _108756 _108757)). Qed.
Lemma lem8193230 {_144529 _144530 _144607 _144645 P : Type'} (lt2 : type1470 _144529 _144530) (z''' : type518 _144530 _144607 P) (s : P -> _144529) (p : type560 _144530 _144607 P) (_108755 : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (_108756 : _144530 -> _144607) (_108757 : P) : True = ((term911 _144529 _144530 _144607 _144645 P p lt2 z''' s _108755 e _108756 _108757) = (term937 _144529 _144530 _144607 _144645 P lt2 z''' s p _108755 e _108756 _108757)).
Proof. exact (SYM (@lem8193229 _144529 _144530 _144607 _144645 P lt2 z''' s p _108755 e _108756 _108757)). Qed.
Lemma lem8193231 {_144529 _144530 _144607 _144645 P : Type'} (lt2 : type1470 _144529 _144530) (z''' : type518 _144530 _144607 P) (s : P -> _144529) (p : type560 _144530 _144607 P) (_108755 : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (_108756 : _144530 -> _144607) (_108757 : P) : (term911 _144529 _144530 _144607 _144645 P p lt2 z''' s _108755 e _108756 _108757) = (term937 _144529 _144530 _144607 _144645 P lt2 z''' s p _108755 e _108756 _108757).
Proof. exact (EQ_MP (@lem8193230 _144529 _144530 _144607 _144645 P lt2 z''' s p _108755 e _108756 _108757) (@lem0)). Qed.
Lemma lem8193232 {_144529 _144530 _144607 _144645 P : Type'} (_108755 : _144530 -> _144607) (_108756 : _144530 -> _144607) (_108757 : P) (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z''' : type518 _144530 _144607 P) (e : type564 _144530 _144607 _144645 P) (h1 : term553 _144529 _144530 _144607 _144645 P p lt2 s z''' e) : term937 _144529 _144530 _144607 _144645 P lt2 z''' s p _108755 e _108756 _108757.
Proof. exact (EQ_MP (@lem8193231 _144529 _144530 _144607 _144645 P lt2 z''' s p _108755 e _108756 _108757) (@lem8191545 _144529 _144530 _144607 _144645 P _108755 _108756 _108757 p lt2 s z''' e h1)). Qed.
Lemma lem8193234 (b : Prop) (a : Prop) : (a \/ b) = (term940 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem8193235 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (z''' : type518 _144530 _144607 P) (_108755 : _144530 -> _144607) (_108756 : _144530 -> _144607) (s : P -> _144529) (_108757 : P) : (term937 _144529 _144530 _144607 _144645 P lt2 z''' s p _108755 e _108756 _108757) = (term941 _144529 _144530 _144607 _144645 P p e lt2 z''' _108755 _108756 s _108757).
Proof. exact (@lem8193234 (term934 _144530 _144607 _144645 P p _108755 e _108756 _108757) (term862 _144529 _144530 _144607 P lt2 z''' _108755 _108756 s _108757)). Qed.
Lemma lem8193237 (a : Prop) (b : Prop) : (term942 a b) = (term943 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem8193238 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (_108755 : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (_108756 : _144530 -> _144607) (_108757 : P) : (term944 _144530 _144607 _144645 P p _108755 e _108756 _108757) = (term945 _144530 _144607 _144645 P p _108755 e _108756 _108757).
Proof. exact (@lem8193237 (term867 _144530 _144607 P p _108755 _108757) (term920 _144530 _144607 _144645 P p _108755 e _108756 _108757)). Qed.
Lemma lem8193240 (a : Prop) : (term15 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8193241 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (_108755 : _144530 -> _144607) (_108757 : P) : (term946 _144530 _144607 P p _108755 _108757) = (term822 _144530 _144607 P p _108755 _108757).
Proof. exact (@lem8193240 (term822 _144530 _144607 P p _108755 _108757)). Qed.
Lemma lem8193242 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8193243 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (_108755 : _144530 -> _144607) (_108757 : P) : (term947 _144530 _144607 P p _108755 _108757) = (term948 _144530 _144607 P p _108755 _108757).
Proof. exact (MK_COMB (@lem8193242) (@lem8193241 _144530 _144607 P p _108755 _108757)). Qed.
Lemma lem8193245 (a : Prop) (b : Prop) : (term942 a b) = (term943 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem8193246 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (_108755 : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (_108756 : _144530 -> _144607) (_108757 : P) : (term949 _144530 _144607 _144645 P p _108755 e _108756 _108757) = (term950 _144530 _144607 _144645 P p _108755 e _108756 _108757).
Proof. exact (@lem8193245 (term867 _144530 _144607 P p _108756 _108757) ((term835 _144530 _144607 _144645 P e _108755 _108757) = (term835 _144530 _144607 _144645 P e _108756 _108757))). Qed.
Lemma lem8193248 (a : Prop) : (term15 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8193249 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (_108756 : _144530 -> _144607) (_108757 : P) : (term946 _144530 _144607 P p _108756 _108757) = (term822 _144530 _144607 P p _108756 _108757).
Proof. exact (@lem8193248 (term822 _144530 _144607 P p _108756 _108757)). Qed.
Lemma lem8193250 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8193251 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (_108756 : _144530 -> _144607) (_108757 : P) : (term947 _144530 _144607 P p _108756 _108757) = (term948 _144530 _144607 P p _108756 _108757).
Proof. exact (MK_COMB (@lem8193250) (@lem8193249 _144530 _144607 P p _108756 _108757)). Qed.
Lemma lem8193252 {_144530 _144607 _144645 P : Type'} (_108755 : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (_108756 : _144530 -> _144607) (_108757 : P) : (term839 _144530 _144607 _144645 P _108755 e _108756 _108757) = (term839 _144530 _144607 _144645 P _108755 e _108756 _108757).
Proof. exact (eq_refl (term839 _144530 _144607 _144645 P _108755 e _108756 _108757)). Qed.
Lemma lem8193253 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (_108755 : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (_108756 : _144530 -> _144607) (_108757 : P) : (term950 _144530 _144607 _144645 P p _108755 e _108756 _108757) = (term951 _144530 _144607 _144645 P p _108755 e _108756 _108757).
Proof. exact (MK_COMB (@lem8193251 _144530 _144607 P p _108756 _108757) (@lem8193252 _144530 _144607 _144645 P _108755 e _108756 _108757)). Qed.
Lemma lem8193254 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (_108755 : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (_108756 : _144530 -> _144607) (_108757 : P) : (term949 _144530 _144607 _144645 P p _108755 e _108756 _108757) = (term951 _144530 _144607 _144645 P p _108755 e _108756 _108757).
Proof. exact (TRANS (@lem8193246 _144530 _144607 _144645 P p _108755 e _108756 _108757) (@lem8193253 _144530 _144607 _144645 P p _108755 e _108756 _108757)). Qed.
Lemma lem8193255 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (_108755 : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (_108756 : _144530 -> _144607) (_108757 : P) : (term945 _144530 _144607 _144645 P p _108755 e _108756 _108757) = (term952 _144530 _144607 _144645 P p _108755 e _108756 _108757).
Proof. exact (MK_COMB (@lem8193243 _144530 _144607 P p _108755 _108757) (@lem8193254 _144530 _144607 _144645 P p _108755 e _108756 _108757)). Qed.
Lemma lem8193256 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (_108755 : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (_108756 : _144530 -> _144607) (_108757 : P) : (term944 _144530 _144607 _144645 P p _108755 e _108756 _108757) = (term952 _144530 _144607 _144645 P p _108755 e _108756 _108757).
Proof. exact (TRANS (@lem8193238 _144530 _144607 _144645 P p _108755 e _108756 _108757) (@lem8193255 _144530 _144607 _144645 P p _108755 e _108756 _108757)). Qed.
Lemma lem8193257 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8193258 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (_108755 : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (_108756 : _144530 -> _144607) (_108757 : P) : (term953 _144530 _144607 _144645 P p _108755 e _108756 _108757) = (term954 _144530 _144607 _144645 P p _108755 e _108756 _108757).
Proof. exact (MK_COMB (@lem8193257) (@lem8193256 _144530 _144607 _144645 P p _108755 e _108756 _108757)). Qed.
Lemma lem8193259 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (z''' : type518 _144530 _144607 P) (_108755 : _144530 -> _144607) (_108756 : _144530 -> _144607) (s : P -> _144529) (_108757 : P) : (term862 _144529 _144530 _144607 P lt2 z''' _108755 _108756 s _108757) = (term862 _144529 _144530 _144607 P lt2 z''' _108755 _108756 s _108757).
Proof. exact (eq_refl (term862 _144529 _144530 _144607 P lt2 z''' _108755 _108756 s _108757)). Qed.
Lemma lem8193260 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (z''' : type518 _144530 _144607 P) (_108755 : _144530 -> _144607) (_108756 : _144530 -> _144607) (s : P -> _144529) (_108757 : P) : (term941 _144529 _144530 _144607 _144645 P p e lt2 z''' _108755 _108756 s _108757) = (term955 _144529 _144530 _144607 _144645 P p e lt2 z''' _108755 _108756 s _108757).
Proof. exact (MK_COMB (@lem8193258 _144530 _144607 _144645 P p _108755 e _108756 _108757) (@lem8193259 _144529 _144530 _144607 P lt2 z''' _108755 _108756 s _108757)). Qed.
Lemma lem8193261 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (z''' : type518 _144530 _144607 P) (_108755 : _144530 -> _144607) (_108756 : _144530 -> _144607) (s : P -> _144529) (_108757 : P) : (term937 _144529 _144530 _144607 _144645 P lt2 z''' s p _108755 e _108756 _108757) = (term955 _144529 _144530 _144607 _144645 P p e lt2 z''' _108755 _108756 s _108757).
Proof. exact (TRANS (@lem8193235 _144529 _144530 _144607 _144645 P p e lt2 z''' _108755 _108756 s _108757) (@lem8193260 _144529 _144530 _144607 _144645 P p e lt2 z''' _108755 _108756 s _108757)). Qed.
Lemma lem8193263 {_144530 _144607 _144645 P : Type'} (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term839 _144530 _144607 _144645 P f e g a) (h2 : p g a) : term951 _144530 _144607 _144645 P p f e g a.
Proof. exact (conj (@lem8193003 _144530 _144607 P p g a h2) (@lem8193011 _144530 _144607 _144645 P f e g a h1)). Qed.
Lemma lem8193264 {_144530 _144607 _144645 P : Type'} (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term839 _144530 _144607 _144645 P f e g a) (h2 : p f a) (h3 : p g a) : term952 _144530 _144607 _144645 P p f e g a.
Proof. exact (conj (@lem8192996 _144530 _144607 P p f a h2) (@lem8193263 _144530 _144607 _144645 P f e p g a h1 h3)). Qed.
Lemma lem8193266 {_144529 _144530 _144607 _144645 P : Type'} (_108755 : _144530 -> _144607) (_108756 : _144530 -> _144607) (_108757 : P) (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z''' : type518 _144530 _144607 P) (e : type564 _144530 _144607 _144645 P) (h1 : term553 _144529 _144530 _144607 _144645 P p lt2 s z''' e) : term955 _144529 _144530 _144607 _144645 P p e lt2 z''' _108755 _108756 s _108757.
Proof. exact (EQ_MP (@lem8193261 _144529 _144530 _144607 _144645 P p e lt2 z''' _108755 _108756 s _108757) (@lem8193232 _144529 _144530 _144607 _144645 P _108755 _108756 _108757 p lt2 s z''' e h1)). Qed.
Lemma lem8193267 {_144529 _144530 _144607 _144645 P : Type'} (_108755 : _144530 -> _144607) (_108756 : _144530 -> _144607) (_108757 : P) (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z''' : type518 _144530 _144607 P) (e : type564 _144530 _144607 _144645 P) (h1 : term553 _144529 _144530 _144607 _144645 P p lt2 s z''' e) : term955 _144529 _144530 _144607 _144645 P p e lt2 z''' _108755 _108756 s _108757.
Proof. exact (@lem8193266 _144529 _144530 _144607 _144645 P _108755 _108756 _108757 p lt2 s z''' e h1). Qed.
Lemma lem8193268 {_144529 _144530 _144607 _144645 P : Type'} (f : _144530 -> _144607) (g : _144530 -> _144607) (a : P) (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z''' : type518 _144530 _144607 P) (e : type564 _144530 _144607 _144645 P) (h1 : term553 _144529 _144530 _144607 _144645 P p lt2 s z''' e) : term955 _144529 _144530 _144607 _144645 P p e lt2 z''' f g s a.
Proof. exact (@lem8193267 _144529 _144530 _144607 _144645 P f g a p lt2 s z''' e h1). Qed.
Lemma lem8193271 {_144529 _144530 _144607 _144645 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z''' : type518 _144530 _144607 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term553 _144529 _144530 _144607 _144645 P p lt2 s z''' e) (h2 : term839 _144530 _144607 _144645 P f e g a) (h3 : p f a) (h4 : p g a) : term862 _144529 _144530 _144607 P lt2 z''' f g s a.
Proof. exact (@lem8193268 _144529 _144530 _144607 _144645 P f g a p lt2 s z''' e h1 (@lem8193264 _144530 _144607 _144645 P e f p g a h2 h3 h4)). Qed.
Lemma lem8193272 {_144529 _144530 _144607 _144645 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z''' : type518 _144530 _144607 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term553 _144529 _144530 _144607 _144645 P p lt2 s z''' e) (h2 : term839 _144530 _144607 _144645 P f e g a) (h3 : p f a) (h4 : p g a) : term956 _144529 _144530 _144607 P lt2 z''' f g s a.
Proof. exact (fun h0 : term957 _144529 _144530 _144607 P lt2 z''' f g s a => @lem8193271 _144529 _144530 _144607 _144645 P lt2 s z''' e f p g a h1 h2 h3 h4). Qed.
Lemma lem8193274 (p : Prop) : (term57 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8193275 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (z''' : type518 _144530 _144607 P) (f : _144530 -> _144607) (g : _144530 -> _144607) (s : P -> _144529) (a : P) : (term956 _144529 _144530 _144607 P lt2 z''' f g s a) = (term862 _144529 _144530 _144607 P lt2 z''' f g s a).
Proof. exact (@lem8193274 (term862 _144529 _144530 _144607 P lt2 z''' f g s a)). Qed.
Lemma lem8193276 {_144529 _144530 _144607 _144645 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z''' : type518 _144530 _144607 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term553 _144529 _144530 _144607 _144645 P p lt2 s z''' e) (h2 : term839 _144530 _144607 _144645 P f e g a) (h3 : p f a) (h4 : p g a) : term862 _144529 _144530 _144607 P lt2 z''' f g s a.
Proof. exact (EQ_MP (@lem8193275 _144529 _144530 _144607 P lt2 z''' f g s a) (@lem8193272 _144529 _144530 _144607 _144645 P lt2 s z''' e f p g a h1 h2 h3 h4)). Qed.
Lemma lem8193282 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem8193283 {_144529 _144530 _144607 P : Type'} (f : _144530 -> _144607) (g : _144530 -> _144607) (lt2 : type1470 _144529 _144530) (_108745 : _144530) (s : P -> _144529) (a : P) : (term832 _144529 _144530 _144607 P lt2 s a f g _108745) = (term958 _144529 _144530 _144607 P f g lt2 _108745 s a).
Proof. exact (@lem8193282 ((@I (_144530 -> _144607) f _108745) = (@I (_144530 -> _144607) g _108745)) (term829 _144529 _144530 P lt2 _108745 s a)). Qed.
Lemma lem8193291 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8193292 {_144529 _144530 _144607 P : Type'} (f : _144530 -> _144607) (g : _144530 -> _144607) (lt2 : type1470 _144529 _144530) (_108745 : _144530) (s : P -> _144529) (a : P) : (term959 _144529 _144530 _144607 P lt2 s a f g _108745) = (term960 _144529 _144530 _144607 P f g lt2 _108745 s a).
Proof. exact (MK_COMB (@lem8193291) (@lem8193283 _144529 _144530 _144607 P f g lt2 _108745 s a)). Qed.
Lemma lem8193300 {_144529 _144530 _144607 P : Type'} (f : _144530 -> _144607) (g : _144530 -> _144607) (lt2 : type1470 _144529 _144530) (_108745 : _144530) (s : P -> _144529) (a : P) : (term958 _144529 _144530 _144607 P f g lt2 _108745 s a) = (term958 _144529 _144530 _144607 P f g lt2 _108745 s a).
Proof. exact (eq_refl (term958 _144529 _144530 _144607 P f g lt2 _108745 s a)). Qed.
Lemma lem8193301 {_144529 _144530 _144607 P : Type'} (f : _144530 -> _144607) (g : _144530 -> _144607) (lt2 : type1470 _144529 _144530) (_108745 : _144530) (s : P -> _144529) (a : P) : ((term832 _144529 _144530 _144607 P lt2 s a f g _108745) = (term958 _144529 _144530 _144607 P f g lt2 _108745 s a)) = ((term958 _144529 _144530 _144607 P f g lt2 _108745 s a) = (term958 _144529 _144530 _144607 P f g lt2 _108745 s a)).
Proof. exact (MK_COMB (@lem8193292 _144529 _144530 _144607 P f g lt2 _108745 s a) (@lem8193300 _144529 _144530 _144607 P f g lt2 _108745 s a)). Qed.
Lemma lem8193303 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem20665 A x) (@lem20664 A x)). Qed.
Lemma lem8193304 (x : Prop) : (x = x) = True.
Proof. exact (@lem8193303 Prop x). Qed.
Lemma lem8193305 {_144529 _144530 _144607 P : Type'} (f : _144530 -> _144607) (g : _144530 -> _144607) (lt2 : type1470 _144529 _144530) (_108745 : _144530) (s : P -> _144529) (a : P) : ((term958 _144529 _144530 _144607 P f g lt2 _108745 s a) = (term958 _144529 _144530 _144607 P f g lt2 _108745 s a)) = True.
Proof. exact (@lem8193304 (term958 _144529 _144530 _144607 P f g lt2 _108745 s a)). Qed.
Lemma lem8193306 {_144529 _144530 _144607 P : Type'} (f : _144530 -> _144607) (g : _144530 -> _144607) (lt2 : type1470 _144529 _144530) (_108745 : _144530) (s : P -> _144529) (a : P) : ((term832 _144529 _144530 _144607 P lt2 s a f g _108745) = (term958 _144529 _144530 _144607 P f g lt2 _108745 s a)) = True.
Proof. exact (TRANS (@lem8193301 _144529 _144530 _144607 P f g lt2 _108745 s a) (@lem8193305 _144529 _144530 _144607 P f g lt2 _108745 s a)). Qed.
Lemma lem8193307 {_144529 _144530 _144607 P : Type'} (f : _144530 -> _144607) (g : _144530 -> _144607) (lt2 : type1470 _144529 _144530) (_108745 : _144530) (s : P -> _144529) (a : P) : True = ((term832 _144529 _144530 _144607 P lt2 s a f g _108745) = (term958 _144529 _144530 _144607 P f g lt2 _108745 s a)).
Proof. exact (SYM (@lem8193306 _144529 _144530 _144607 P f g lt2 _108745 s a)). Qed.
Lemma lem8193308 {_144529 _144530 _144607 P : Type'} (f : _144530 -> _144607) (g : _144530 -> _144607) (lt2 : type1470 _144529 _144530) (_108745 : _144530) (s : P -> _144529) (a : P) : (term832 _144529 _144530 _144607 P lt2 s a f g _108745) = (term958 _144529 _144530 _144607 P f g lt2 _108745 s a).
Proof. exact (EQ_MP (@lem8193307 _144529 _144530 _144607 P f g lt2 _108745 s a) (@lem0)). Qed.
Lemma lem8193309 {_144529 _144530 _144607 P : Type'} (_108745 : _144530) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) : term958 _144529 _144530 _144607 P f g lt2 _108745 s a.
Proof. exact (EQ_MP (@lem8193308 _144529 _144530 _144607 P f g lt2 _108745 s a) (@lem8191489 _144529 _144530 _144607 P _108745 lt2 s a f g h1)). Qed.
Lemma lem8193311 (b : Prop) (a : Prop) : (a \/ b) = (term940 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem8193312 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (_108745 : _144530) : (term958 _144529 _144530 _144607 P f g lt2 _108745 s a) = (term961 _144529 _144530 _144607 P lt2 s a f g _108745).
Proof. exact (@lem8193311 (term829 _144529 _144530 P lt2 _108745 s a) ((@I (_144530 -> _144607) f _108745) = (@I (_144530 -> _144607) g _108745))). Qed.
Lemma lem8193314 (a : Prop) : (term15 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8193315 {_144529 _144530 P : Type'} (lt2 : type1470 _144529 _144530) (_108745 : _144530) (s : P -> _144529) (a : P) : (term962 _144529 _144530 P lt2 _108745 s a) = (term827 _144529 _144530 P lt2 _108745 s a).
Proof. exact (@lem8193314 (term827 _144529 _144530 P lt2 _108745 s a)). Qed.
Lemma lem8193316 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8193317 {_144529 _144530 P : Type'} (lt2 : type1470 _144529 _144530) (_108745 : _144530) (s : P -> _144529) (a : P) : (term963 _144529 _144530 P lt2 _108745 s a) = (term964 _144529 _144530 P lt2 _108745 s a).
Proof. exact (MK_COMB (@lem8193316) (@lem8193315 _144529 _144530 P lt2 _108745 s a)). Qed.
Lemma lem8193318 {_144530 _144607 : Type'} (f : _144530 -> _144607) (g : _144530 -> _144607) (_108745 : _144530) : ((@I (_144530 -> _144607) f _108745) = (@I (_144530 -> _144607) g _108745)) = ((@I (_144530 -> _144607) f _108745) = (@I (_144530 -> _144607) g _108745)).
Proof. exact (eq_refl ((@I (_144530 -> _144607) f _108745) = (@I (_144530 -> _144607) g _108745))). Qed.
Lemma lem8193319 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (_108745 : _144530) : (term961 _144529 _144530 _144607 P lt2 s a f g _108745) = (term965 _144529 _144530 _144607 P lt2 s a f g _108745).
Proof. exact (MK_COMB (@lem8193317 _144529 _144530 P lt2 _108745 s a) (@lem8193318 _144530 _144607 f g _108745)). Qed.
Lemma lem8193320 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (_108745 : _144530) : (term958 _144529 _144530 _144607 P f g lt2 _108745 s a) = (term965 _144529 _144530 _144607 P lt2 s a f g _108745).
Proof. exact (TRANS (@lem8193312 _144529 _144530 _144607 P lt2 s a f g _108745) (@lem8193319 _144529 _144530 _144607 P lt2 s a f g _108745)). Qed.
Lemma lem8193323 {_144529 _144530 _144607 P : Type'} (_108745 : _144530) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) : term965 _144529 _144530 _144607 P lt2 s a f g _108745.
Proof. exact (EQ_MP (@lem8193320 _144529 _144530 _144607 P lt2 s a f g _108745) (@lem8193309 _144529 _144530 _144607 P _108745 lt2 s a f g h1)). Qed.
Lemma lem8193324 {_144529 _144530 _144607 P : Type'} (_108745 : _144530) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) : term965 _144529 _144530 _144607 P lt2 s a f g _108745.
Proof. exact (@lem8193323 _144529 _144530 _144607 P _108745 lt2 s a f g h1). Qed.
Lemma lem8193325 {_144529 _144530 _144607 P : Type'} (z''' : type518 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) : term966 _144529 _144530 _144607 P lt2 s z''' f g a.
Proof. exact (@lem8193324 _144529 _144530 _144607 P (term845 _144530 _144607 P z''' f g a) lt2 s a f g h1). Qed.
Lemma lem8193328 {_144529 _144530 _144607 _144645 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z''' : type518 _144530 _144607 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) (h2 : term553 _144529 _144530 _144607 _144645 P p lt2 s z''' e) (h3 : term839 _144530 _144607 _144645 P f e g a) (h4 : p f a) (h5 : p g a) : (term848 _144530 _144607 P z''' f g a) = (term851 _144530 _144607 P z''' f g a).
Proof. exact (@lem8193325 _144529 _144530 _144607 P z''' lt2 s a f g h1 (@lem8193276 _144529 _144530 _144607 _144645 P lt2 s z''' e f p g a h2 h3 h4 h5)). Qed.
Lemma lem8193329 {_144529 _144530 _144607 _144645 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z''' : type518 _144530 _144607 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) (h2 : term553 _144529 _144530 _144607 _144645 P p lt2 s z''' e) (h3 : term839 _144530 _144607 _144645 P f e g a) (h4 : p f a) (h5 : p g a) : term967 _144530 _144607 P z''' f g a.
Proof. exact (fun h0 : term855 _144530 _144607 P z''' f g a => @lem8193328 _144529 _144530 _144607 _144645 P lt2 s z''' e f p g a h1 h2 h3 h4 h5). Qed.
Lemma lem8193331 (p : Prop) : (term57 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8193332 {_144530 _144607 P : Type'} (z''' : type518 _144530 _144607 P) (f : _144530 -> _144607) (g : _144530 -> _144607) (a : P) : (term967 _144530 _144607 P z''' f g a) = ((term848 _144530 _144607 P z''' f g a) = (term851 _144530 _144607 P z''' f g a)).
Proof. exact (@lem8193331 ((term848 _144530 _144607 P z''' f g a) = (term851 _144530 _144607 P z''' f g a))). Qed.
Lemma lem8193333 {_144529 _144530 _144607 _144645 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z''' : type518 _144530 _144607 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) (h2 : term553 _144529 _144530 _144607 _144645 P p lt2 s z''' e) (h3 : term839 _144530 _144607 _144645 P f e g a) (h4 : p f a) (h5 : p g a) : (term848 _144530 _144607 P z''' f g a) = (term851 _144530 _144607 P z''' f g a).
Proof. exact (EQ_MP (@lem8193332 _144530 _144607 P z''' f g a) (@lem8193329 _144529 _144530 _144607 _144645 P lt2 s z''' e f p g a h1 h2 h3 h4 h5)). Qed.
Lemma lem8193349 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8193350 {_144530 _144607 _144645 P : Type'} (z''' : type518 _144530 _144607 P) (p : type560 _144530 _144607 P) (_108755 : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (_108756 : _144530 -> _144607) (_108757 : P) : (term914 _144530 _144607 _144645 P p z''' _108755 e _108756 _108757) = (term968 _144530 _144607 _144645 P z''' p _108755 e _108756 _108757).
Proof. exact (@lem8193349 (term855 _144530 _144607 P z''' _108755 _108756 _108757) (term867 _144530 _144607 P p _108756 _108757) ((term835 _144530 _144607 _144645 P e _108755 _108757) = (term835 _144530 _144607 _144645 P e _108756 _108757))). Qed.
Lemma lem8193366 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem8193367 {_144530 _144607 _144645 P : Type'} (_108755 : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_108756 : _144530 -> _144607) (_108757 : P) : (term920 _144530 _144607 _144645 P p _108755 e _108756 _108757) = (term921 _144530 _144607 _144645 P _108755 e p _108756 _108757).
Proof. exact (@lem8193366 ((term835 _144530 _144607 _144645 P e _108755 _108757) = (term835 _144530 _144607 _144645 P e _108756 _108757)) (term867 _144530 _144607 P p _108756 _108757)). Qed.
Lemma lem8193375 {_144530 _144607 P : Type'} (z''' : type518 _144530 _144607 P) (_108755 : _144530 -> _144607) (_108756 : _144530 -> _144607) (_108757 : P) : (term969 _144530 _144607 P z''' _108755 _108756 _108757) = (term969 _144530 _144607 P z''' _108755 _108756 _108757).
Proof. exact (eq_refl (term969 _144530 _144607 P z''' _108755 _108756 _108757)). Qed.
Lemma lem8193376 {_144530 _144607 _144645 P : Type'} (z''' : type518 _144530 _144607 P) (_108755 : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_108756 : _144530 -> _144607) (_108757 : P) : (term968 _144530 _144607 _144645 P z''' p _108755 e _108756 _108757) = (term970 _144530 _144607 _144645 P z''' _108755 e p _108756 _108757).
Proof. exact (MK_COMB (@lem8193375 _144530 _144607 P z''' _108755 _108756 _108757) (@lem8193367 _144530 _144607 _144645 P _108755 e p _108756 _108757)). Qed.
Lemma lem8193380 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8193381 {_144530 _144607 _144645 P : Type'} (e : type564 _144530 _144607 _144645 P) (z''' : type518 _144530 _144607 P) (_108755 : _144530 -> _144607) (p : type560 _144530 _144607 P) (_108756 : _144530 -> _144607) (_108757 : P) : (term970 _144530 _144607 _144645 P z''' _108755 e p _108756 _108757) = (term971 _144530 _144607 _144645 P e z''' _108755 p _108756 _108757).
Proof. exact (@lem8193380 ((term835 _144530 _144607 _144645 P e _108755 _108757) = (term835 _144530 _144607 _144645 P e _108756 _108757)) (term855 _144530 _144607 P z''' _108755 _108756 _108757) (term867 _144530 _144607 P p _108756 _108757)). Qed.
Lemma lem8193401 {_144530 _144607 _144645 P : Type'} (e : type564 _144530 _144607 _144645 P) (z''' : type518 _144530 _144607 P) (_108755 : _144530 -> _144607) (p : type560 _144530 _144607 P) (_108756 : _144530 -> _144607) (_108757 : P) : (term968 _144530 _144607 _144645 P z''' p _108755 e _108756 _108757) = (term971 _144530 _144607 _144645 P e z''' _108755 p _108756 _108757).
Proof. exact (TRANS (@lem8193376 _144530 _144607 _144645 P z''' _108755 e p _108756 _108757) (@lem8193381 _144530 _144607 _144645 P e z''' _108755 p _108756 _108757)). Qed.
Lemma lem8193402 {_144530 _144607 _144645 P : Type'} (e : type564 _144530 _144607 _144645 P) (z''' : type518 _144530 _144607 P) (_108755 : _144530 -> _144607) (p : type560 _144530 _144607 P) (_108756 : _144530 -> _144607) (_108757 : P) : (term914 _144530 _144607 _144645 P p z''' _108755 e _108756 _108757) = (term971 _144530 _144607 _144645 P e z''' _108755 p _108756 _108757).
Proof. exact (TRANS (@lem8193350 _144530 _144607 _144645 P z''' p _108755 e _108756 _108757) (@lem8193401 _144530 _144607 _144645 P e z''' _108755 p _108756 _108757)). Qed.
Lemma lem8193403 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (_108755 : _144530 -> _144607) (_108757 : P) : (term868 _144530 _144607 P p _108755 _108757) = (term868 _144530 _144607 P p _108755 _108757).
Proof. exact (eq_refl (term868 _144530 _144607 P p _108755 _108757)). Qed.
Lemma lem8193404 {_144530 _144607 _144645 P : Type'} (e : type564 _144530 _144607 _144645 P) (z''' : type518 _144530 _144607 P) (_108755 : _144530 -> _144607) (p : type560 _144530 _144607 P) (_108756 : _144530 -> _144607) (_108757 : P) : (term915 _144530 _144607 _144645 P p z''' _108755 e _108756 _108757) = (term972 _144530 _144607 _144645 P e z''' _108755 p _108756 _108757).
Proof. exact (MK_COMB (@lem8193403 _144530 _144607 P p _108755 _108757) (@lem8193402 _144530 _144607 _144645 P e z''' _108755 p _108756 _108757)). Qed.
Lemma lem8193408 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8193409 {_144530 _144607 _144645 P : Type'} (e : type564 _144530 _144607 _144645 P) (z''' : type518 _144530 _144607 P) (_108755 : _144530 -> _144607) (p : type560 _144530 _144607 P) (_108756 : _144530 -> _144607) (_108757 : P) : (term972 _144530 _144607 _144645 P e z''' _108755 p _108756 _108757) = (term973 _144530 _144607 _144645 P e z''' _108755 p _108756 _108757).
Proof. exact (@lem8193408 ((term835 _144530 _144607 _144645 P e _108755 _108757) = (term835 _144530 _144607 _144645 P e _108756 _108757)) (term867 _144530 _144607 P p _108755 _108757) (term974 _144530 _144607 P z''' _108755 p _108756 _108757)). Qed.
Lemma lem8193425 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8193426 {_144530 _144607 P : Type'} (z''' : type518 _144530 _144607 P) (_108755 : _144530 -> _144607) (p : type560 _144530 _144607 P) (_108756 : _144530 -> _144607) (_108757 : P) : (term975 _144530 _144607 P z''' _108755 p _108756 _108757) = (term976 _144530 _144607 P z''' _108755 p _108756 _108757).
Proof. exact (@lem8193425 (term855 _144530 _144607 P z''' _108755 _108756 _108757) (term867 _144530 _144607 P p _108755 _108757) (term867 _144530 _144607 P p _108756 _108757)). Qed.
Lemma lem8193444 {_144530 _144607 _144645 P : Type'} (_108755 : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (_108756 : _144530 -> _144607) (_108757 : P) : (term930 _144530 _144607 _144645 P _108755 e _108756 _108757) = (term930 _144530 _144607 _144645 P _108755 e _108756 _108757).
Proof. exact (eq_refl (term930 _144530 _144607 _144645 P _108755 e _108756 _108757)). Qed.
Lemma lem8193445 {_144530 _144607 _144645 P : Type'} (e : type564 _144530 _144607 _144645 P) (z''' : type518 _144530 _144607 P) (_108755 : _144530 -> _144607) (p : type560 _144530 _144607 P) (_108756 : _144530 -> _144607) (_108757 : P) : (term973 _144530 _144607 _144645 P e z''' _108755 p _108756 _108757) = (term977 _144530 _144607 _144645 P e z''' _108755 p _108756 _108757).
Proof. exact (MK_COMB (@lem8193444 _144530 _144607 _144645 P _108755 e _108756 _108757) (@lem8193426 _144530 _144607 P z''' _108755 p _108756 _108757)). Qed.
Lemma lem8193456 {_144530 _144607 _144645 P : Type'} (e : type564 _144530 _144607 _144645 P) (z''' : type518 _144530 _144607 P) (_108755 : _144530 -> _144607) (p : type560 _144530 _144607 P) (_108756 : _144530 -> _144607) (_108757 : P) : (term972 _144530 _144607 _144645 P e z''' _108755 p _108756 _108757) = (term977 _144530 _144607 _144645 P e z''' _108755 p _108756 _108757).
Proof. exact (TRANS (@lem8193409 _144530 _144607 _144645 P e z''' _108755 p _108756 _108757) (@lem8193445 _144530 _144607 _144645 P e z''' _108755 p _108756 _108757)). Qed.
Lemma lem8193457 {_144530 _144607 _144645 P : Type'} (e : type564 _144530 _144607 _144645 P) (z''' : type518 _144530 _144607 P) (_108755 : _144530 -> _144607) (p : type560 _144530 _144607 P) (_108756 : _144530 -> _144607) (_108757 : P) : (term915 _144530 _144607 _144645 P p z''' _108755 e _108756 _108757) = (term977 _144530 _144607 _144645 P e z''' _108755 p _108756 _108757).
Proof. exact (TRANS (@lem8193404 _144530 _144607 _144645 P e z''' _108755 p _108756 _108757) (@lem8193456 _144530 _144607 _144645 P e z''' _108755 p _108756 _108757)). Qed.
Lemma lem8193458 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8193459 {_144530 _144607 _144645 P : Type'} (e : type564 _144530 _144607 _144645 P) (z''' : type518 _144530 _144607 P) (_108755 : _144530 -> _144607) (p : type560 _144530 _144607 P) (_108756 : _144530 -> _144607) (_108757 : P) : (term978 _144530 _144607 _144645 P p z''' _108755 e _108756 _108757) = (term979 _144530 _144607 _144645 P e z''' _108755 p _108756 _108757).
Proof. exact (MK_COMB (@lem8193458) (@lem8193457 _144530 _144607 _144645 P e z''' _108755 p _108756 _108757)). Qed.
Lemma lem8193485 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem8193486 {_144530 _144607 P : Type'} (z''' : type518 _144530 _144607 P) (_108755 : _144530 -> _144607) (p : type560 _144530 _144607 P) (_108756 : _144530 -> _144607) (_108757 : P) : (term890 _144530 _144607 P p z''' _108755 _108756 _108757) = (term974 _144530 _144607 P z''' _108755 p _108756 _108757).
Proof. exact (@lem8193485 (term855 _144530 _144607 P z''' _108755 _108756 _108757) (term867 _144530 _144607 P p _108756 _108757)). Qed.
Lemma lem8193494 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (_108755 : _144530 -> _144607) (_108757 : P) : (term868 _144530 _144607 P p _108755 _108757) = (term868 _144530 _144607 P p _108755 _108757).
Proof. exact (eq_refl (term868 _144530 _144607 P p _108755 _108757)). Qed.
Lemma lem8193495 {_144530 _144607 P : Type'} (z''' : type518 _144530 _144607 P) (_108755 : _144530 -> _144607) (p : type560 _144530 _144607 P) (_108756 : _144530 -> _144607) (_108757 : P) : (term895 _144530 _144607 P p z''' _108755 _108756 _108757) = (term975 _144530 _144607 P z''' _108755 p _108756 _108757).
Proof. exact (MK_COMB (@lem8193494 _144530 _144607 P p _108755 _108757) (@lem8193486 _144530 _144607 P z''' _108755 p _108756 _108757)). Qed.
Lemma lem8193499 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8193500 {_144530 _144607 P : Type'} (z''' : type518 _144530 _144607 P) (_108755 : _144530 -> _144607) (p : type560 _144530 _144607 P) (_108756 : _144530 -> _144607) (_108757 : P) : (term975 _144530 _144607 P z''' _108755 p _108756 _108757) = (term976 _144530 _144607 P z''' _108755 p _108756 _108757).
Proof. exact (@lem8193499 (term855 _144530 _144607 P z''' _108755 _108756 _108757) (term867 _144530 _144607 P p _108755 _108757) (term867 _144530 _144607 P p _108756 _108757)). Qed.
Lemma lem8193518 {_144530 _144607 P : Type'} (z''' : type518 _144530 _144607 P) (_108755 : _144530 -> _144607) (p : type560 _144530 _144607 P) (_108756 : _144530 -> _144607) (_108757 : P) : (term895 _144530 _144607 P p z''' _108755 _108756 _108757) = (term976 _144530 _144607 P z''' _108755 p _108756 _108757).
Proof. exact (TRANS (@lem8193495 _144530 _144607 P z''' _108755 p _108756 _108757) (@lem8193500 _144530 _144607 P z''' _108755 p _108756 _108757)). Qed.
Lemma lem8193519 {_144530 _144607 _144645 P : Type'} (_108755 : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (_108756 : _144530 -> _144607) (_108757 : P) : (term930 _144530 _144607 _144645 P _108755 e _108756 _108757) = (term930 _144530 _144607 _144645 P _108755 e _108756 _108757).
Proof. exact (eq_refl (term930 _144530 _144607 _144645 P _108755 e _108756 _108757)). Qed.
Lemma lem8193520 {_144530 _144607 _144645 P : Type'} (e : type564 _144530 _144607 _144645 P) (z''' : type518 _144530 _144607 P) (_108755 : _144530 -> _144607) (p : type560 _144530 _144607 P) (_108756 : _144530 -> _144607) (_108757 : P) : (term980 _144530 _144607 _144645 P e p z''' _108755 _108756 _108757) = (term977 _144530 _144607 _144645 P e z''' _108755 p _108756 _108757).
Proof. exact (MK_COMB (@lem8193519 _144530 _144607 _144645 P _108755 e _108756 _108757) (@lem8193518 _144530 _144607 P z''' _108755 p _108756 _108757)). Qed.
Lemma lem8193531 {_144530 _144607 _144645 P : Type'} (e : type564 _144530 _144607 _144645 P) (z''' : type518 _144530 _144607 P) (_108755 : _144530 -> _144607) (p : type560 _144530 _144607 P) (_108756 : _144530 -> _144607) (_108757 : P) : ((term915 _144530 _144607 _144645 P p z''' _108755 e _108756 _108757) = (term980 _144530 _144607 _144645 P e p z''' _108755 _108756 _108757)) = ((term977 _144530 _144607 _144645 P e z''' _108755 p _108756 _108757) = (term977 _144530 _144607 _144645 P e z''' _108755 p _108756 _108757)).
Proof. exact (MK_COMB (@lem8193459 _144530 _144607 _144645 P e z''' _108755 p _108756 _108757) (@lem8193520 _144530 _144607 _144645 P e z''' _108755 p _108756 _108757)). Qed.
Lemma lem8193533 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem20665 A x) (@lem20664 A x)). Qed.
Lemma lem8193534 (x : Prop) : (x = x) = True.
Proof. exact (@lem8193533 Prop x). Qed.
Lemma lem8193535 {_144530 _144607 _144645 P : Type'} (e : type564 _144530 _144607 _144645 P) (z''' : type518 _144530 _144607 P) (_108755 : _144530 -> _144607) (p : type560 _144530 _144607 P) (_108756 : _144530 -> _144607) (_108757 : P) : ((term977 _144530 _144607 _144645 P e z''' _108755 p _108756 _108757) = (term977 _144530 _144607 _144645 P e z''' _108755 p _108756 _108757)) = True.
Proof. exact (@lem8193534 (term977 _144530 _144607 _144645 P e z''' _108755 p _108756 _108757)). Qed.
Lemma lem8193536 {_144530 _144607 _144645 P : Type'} (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (z''' : type518 _144530 _144607 P) (_108755 : _144530 -> _144607) (_108756 : _144530 -> _144607) (_108757 : P) : ((term915 _144530 _144607 _144645 P p z''' _108755 e _108756 _108757) = (term980 _144530 _144607 _144645 P e p z''' _108755 _108756 _108757)) = True.
Proof. exact (TRANS (@lem8193531 _144530 _144607 _144645 P e z''' _108755 p _108756 _108757) (@lem8193535 _144530 _144607 _144645 P e z''' _108755 p _108756 _108757)). Qed.
Lemma lem8193537 {_144530 _144607 _144645 P : Type'} (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (z''' : type518 _144530 _144607 P) (_108755 : _144530 -> _144607) (_108756 : _144530 -> _144607) (_108757 : P) : True = ((term915 _144530 _144607 _144645 P p z''' _108755 e _108756 _108757) = (term980 _144530 _144607 _144645 P e p z''' _108755 _108756 _108757)).
Proof. exact (SYM (@lem8193536 _144530 _144607 _144645 P e p z''' _108755 _108756 _108757)). Qed.
Lemma lem8193538 {_144530 _144607 _144645 P : Type'} (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (z''' : type518 _144530 _144607 P) (_108755 : _144530 -> _144607) (_108756 : _144530 -> _144607) (_108757 : P) : (term915 _144530 _144607 _144645 P p z''' _108755 e _108756 _108757) = (term980 _144530 _144607 _144645 P e p z''' _108755 _108756 _108757).
Proof. exact (EQ_MP (@lem8193537 _144530 _144607 _144645 P e p z''' _108755 _108756 _108757) (@lem0)). Qed.
Lemma lem8193539 {_144529 _144530 _144607 _144645 P : Type'} (_108755 : _144530 -> _144607) (_108756 : _144530 -> _144607) (_108757 : P) (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z''' : type518 _144530 _144607 P) (e : type564 _144530 _144607 _144645 P) (h1 : term553 _144529 _144530 _144607 _144645 P p lt2 s z''' e) : term980 _144530 _144607 _144645 P e p z''' _108755 _108756 _108757.
Proof. exact (EQ_MP (@lem8193538 _144530 _144607 _144645 P e p z''' _108755 _108756 _108757) (@lem8191563 _144529 _144530 _144607 _144645 P _108755 _108756 _108757 p lt2 s z''' e h1)). Qed.
Lemma lem8193541 (b : Prop) (a : Prop) : (a \/ b) = (term940 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem8193542 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (z''' : type518 _144530 _144607 P) (_108755 : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (_108756 : _144530 -> _144607) (_108757 : P) : (term980 _144530 _144607 _144645 P e p z''' _108755 _108756 _108757) = (term981 _144530 _144607 _144645 P p z''' _108755 e _108756 _108757).
Proof. exact (@lem8193541 (term895 _144530 _144607 P p z''' _108755 _108756 _108757) ((term835 _144530 _144607 _144645 P e _108755 _108757) = (term835 _144530 _144607 _144645 P e _108756 _108757))). Qed.
Lemma lem8193544 (a : Prop) (b : Prop) : (term942 a b) = (term943 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem8193545 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (z''' : type518 _144530 _144607 P) (_108755 : _144530 -> _144607) (_108756 : _144530 -> _144607) (_108757 : P) : (term982 _144530 _144607 P p z''' _108755 _108756 _108757) = (term983 _144530 _144607 P p z''' _108755 _108756 _108757).
Proof. exact (@lem8193544 (term867 _144530 _144607 P p _108755 _108757) (term890 _144530 _144607 P p z''' _108755 _108756 _108757)). Qed.
Lemma lem8193547 (a : Prop) : (term15 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8193548 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (_108755 : _144530 -> _144607) (_108757 : P) : (term946 _144530 _144607 P p _108755 _108757) = (term822 _144530 _144607 P p _108755 _108757).
Proof. exact (@lem8193547 (term822 _144530 _144607 P p _108755 _108757)). Qed.
Lemma lem8193549 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8193550 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (_108755 : _144530 -> _144607) (_108757 : P) : (term947 _144530 _144607 P p _108755 _108757) = (term948 _144530 _144607 P p _108755 _108757).
Proof. exact (MK_COMB (@lem8193549) (@lem8193548 _144530 _144607 P p _108755 _108757)). Qed.
Lemma lem8193552 (a : Prop) (b : Prop) : (term942 a b) = (term943 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem8193553 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (z''' : type518 _144530 _144607 P) (_108755 : _144530 -> _144607) (_108756 : _144530 -> _144607) (_108757 : P) : (term984 _144530 _144607 P p z''' _108755 _108756 _108757) = (term985 _144530 _144607 P p z''' _108755 _108756 _108757).
Proof. exact (@lem8193552 (term867 _144530 _144607 P p _108756 _108757) (term855 _144530 _144607 P z''' _108755 _108756 _108757)). Qed.
Lemma lem8193555 (a : Prop) : (term15 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8193556 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (_108756 : _144530 -> _144607) (_108757 : P) : (term946 _144530 _144607 P p _108756 _108757) = (term822 _144530 _144607 P p _108756 _108757).
Proof. exact (@lem8193555 (term822 _144530 _144607 P p _108756 _108757)). Qed.
Lemma lem8193557 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8193558 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (_108756 : _144530 -> _144607) (_108757 : P) : (term947 _144530 _144607 P p _108756 _108757) = (term948 _144530 _144607 P p _108756 _108757).
Proof. exact (MK_COMB (@lem8193557) (@lem8193556 _144530 _144607 P p _108756 _108757)). Qed.
Lemma lem8193560 (a : Prop) : (term15 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8193561 {_144530 _144607 P : Type'} (z''' : type518 _144530 _144607 P) (_108755 : _144530 -> _144607) (_108756 : _144530 -> _144607) (_108757 : P) : (term986 _144530 _144607 P z''' _108755 _108756 _108757) = ((term848 _144530 _144607 P z''' _108755 _108756 _108757) = (term851 _144530 _144607 P z''' _108755 _108756 _108757)).
Proof. exact (@lem8193560 ((term848 _144530 _144607 P z''' _108755 _108756 _108757) = (term851 _144530 _144607 P z''' _108755 _108756 _108757))). Qed.
Lemma lem8193562 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (z''' : type518 _144530 _144607 P) (_108755 : _144530 -> _144607) (_108756 : _144530 -> _144607) (_108757 : P) : (term985 _144530 _144607 P p z''' _108755 _108756 _108757) = (term987 _144530 _144607 P p z''' _108755 _108756 _108757).
Proof. exact (MK_COMB (@lem8193558 _144530 _144607 P p _108756 _108757) (@lem8193561 _144530 _144607 P z''' _108755 _108756 _108757)). Qed.
Lemma lem8193563 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (z''' : type518 _144530 _144607 P) (_108755 : _144530 -> _144607) (_108756 : _144530 -> _144607) (_108757 : P) : (term984 _144530 _144607 P p z''' _108755 _108756 _108757) = (term987 _144530 _144607 P p z''' _108755 _108756 _108757).
Proof. exact (TRANS (@lem8193553 _144530 _144607 P p z''' _108755 _108756 _108757) (@lem8193562 _144530 _144607 P p z''' _108755 _108756 _108757)). Qed.
Lemma lem8193564 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (z''' : type518 _144530 _144607 P) (_108755 : _144530 -> _144607) (_108756 : _144530 -> _144607) (_108757 : P) : (term983 _144530 _144607 P p z''' _108755 _108756 _108757) = (term988 _144530 _144607 P p z''' _108755 _108756 _108757).
Proof. exact (MK_COMB (@lem8193550 _144530 _144607 P p _108755 _108757) (@lem8193563 _144530 _144607 P p z''' _108755 _108756 _108757)). Qed.
Lemma lem8193565 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (z''' : type518 _144530 _144607 P) (_108755 : _144530 -> _144607) (_108756 : _144530 -> _144607) (_108757 : P) : (term982 _144530 _144607 P p z''' _108755 _108756 _108757) = (term988 _144530 _144607 P p z''' _108755 _108756 _108757).
Proof. exact (TRANS (@lem8193545 _144530 _144607 P p z''' _108755 _108756 _108757) (@lem8193564 _144530 _144607 P p z''' _108755 _108756 _108757)). Qed.
Lemma lem8193566 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8193567 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (z''' : type518 _144530 _144607 P) (_108755 : _144530 -> _144607) (_108756 : _144530 -> _144607) (_108757 : P) : (term989 _144530 _144607 P p z''' _108755 _108756 _108757) = (term990 _144530 _144607 P p z''' _108755 _108756 _108757).
Proof. exact (MK_COMB (@lem8193566) (@lem8193565 _144530 _144607 P p z''' _108755 _108756 _108757)). Qed.
Lemma lem8193568 {_144530 _144607 _144645 P : Type'} (_108755 : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (_108756 : _144530 -> _144607) (_108757 : P) : ((term835 _144530 _144607 _144645 P e _108755 _108757) = (term835 _144530 _144607 _144645 P e _108756 _108757)) = ((term835 _144530 _144607 _144645 P e _108755 _108757) = (term835 _144530 _144607 _144645 P e _108756 _108757)).
Proof. exact (eq_refl ((term835 _144530 _144607 _144645 P e _108755 _108757) = (term835 _144530 _144607 _144645 P e _108756 _108757))). Qed.
Lemma lem8193569 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (z''' : type518 _144530 _144607 P) (_108755 : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (_108756 : _144530 -> _144607) (_108757 : P) : (term981 _144530 _144607 _144645 P p z''' _108755 e _108756 _108757) = (term991 _144530 _144607 _144645 P p z''' _108755 e _108756 _108757).
Proof. exact (MK_COMB (@lem8193567 _144530 _144607 P p z''' _108755 _108756 _108757) (@lem8193568 _144530 _144607 _144645 P _108755 e _108756 _108757)). Qed.
Lemma lem8193570 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (z''' : type518 _144530 _144607 P) (_108755 : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (_108756 : _144530 -> _144607) (_108757 : P) : (term980 _144530 _144607 _144645 P e p z''' _108755 _108756 _108757) = (term991 _144530 _144607 _144645 P p z''' _108755 e _108756 _108757).
Proof. exact (TRANS (@lem8193542 _144530 _144607 _144645 P p z''' _108755 e _108756 _108757) (@lem8193569 _144530 _144607 _144645 P p z''' _108755 e _108756 _108757)). Qed.
Lemma lem8193572 {_144529 _144530 _144607 _144645 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z''' : type518 _144530 _144607 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) (h2 : term553 _144529 _144530 _144607 _144645 P p lt2 s z''' e) (h3 : term839 _144530 _144607 _144645 P f e g a) (h4 : p f a) (h5 : p g a) : term987 _144530 _144607 P p z''' f g a.
Proof. exact (conj (@lem8192989 _144530 _144607 P p g a h5) (@lem8193333 _144529 _144530 _144607 _144645 P lt2 s z''' e f p g a h1 h2 h3 h4 h5)). Qed.
Lemma lem8193573 {_144529 _144530 _144607 _144645 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z''' : type518 _144530 _144607 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) (h2 : term553 _144529 _144530 _144607 _144645 P p lt2 s z''' e) (h3 : term839 _144530 _144607 _144645 P f e g a) (h4 : p f a) (h5 : p g a) : term988 _144530 _144607 P p z''' f g a.
Proof. exact (conj (@lem8192982 _144530 _144607 P p f a h4) (@lem8193572 _144529 _144530 _144607 _144645 P lt2 s z''' e f p g a h1 h2 h3 h4 h5)). Qed.
Lemma lem8193575 {_144529 _144530 _144607 _144645 P : Type'} (_108755 : _144530 -> _144607) (_108756 : _144530 -> _144607) (_108757 : P) (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z''' : type518 _144530 _144607 P) (e : type564 _144530 _144607 _144645 P) (h1 : term553 _144529 _144530 _144607 _144645 P p lt2 s z''' e) : term991 _144530 _144607 _144645 P p z''' _108755 e _108756 _108757.
Proof. exact (EQ_MP (@lem8193570 _144530 _144607 _144645 P p z''' _108755 e _108756 _108757) (@lem8193539 _144529 _144530 _144607 _144645 P _108755 _108756 _108757 p lt2 s z''' e h1)). Qed.
Lemma lem8193576 {_144529 _144530 _144607 _144645 P : Type'} (_108755 : _144530 -> _144607) (_108756 : _144530 -> _144607) (_108757 : P) (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z''' : type518 _144530 _144607 P) (e : type564 _144530 _144607 _144645 P) (h1 : term553 _144529 _144530 _144607 _144645 P p lt2 s z''' e) : term991 _144530 _144607 _144645 P p z''' _108755 e _108756 _108757.
Proof. exact (@lem8193575 _144529 _144530 _144607 _144645 P _108755 _108756 _108757 p lt2 s z''' e h1). Qed.
Lemma lem8193577 {_144529 _144530 _144607 _144645 P : Type'} (f : _144530 -> _144607) (g : _144530 -> _144607) (a : P) (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z''' : type518 _144530 _144607 P) (e : type564 _144530 _144607 _144645 P) (h1 : term553 _144529 _144530 _144607 _144645 P p lt2 s z''' e) : term991 _144530 _144607 _144645 P p z''' f e g a.
Proof. exact (@lem8193576 _144529 _144530 _144607 _144645 P f g a p lt2 s z''' e h1). Qed.
Lemma lem8193580 {_144529 _144530 _144607 _144645 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z''' : type518 _144530 _144607 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) (h2 : term553 _144529 _144530 _144607 _144645 P p lt2 s z''' e) (h3 : term839 _144530 _144607 _144645 P f e g a) (h4 : p f a) (h5 : p g a) : (term835 _144530 _144607 _144645 P e f a) = (term835 _144530 _144607 _144645 P e g a).
Proof. exact (@lem8193577 _144529 _144530 _144607 _144645 P f g a p lt2 s z''' e h2 (@lem8193573 _144529 _144530 _144607 _144645 P lt2 s z''' e f p g a h1 h2 h3 h4 h5)). Qed.
Lemma lem8193581 {_144529 _144530 _144607 _144645 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z''' : type518 _144530 _144607 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) (h2 : term553 _144529 _144530 _144607 _144645 P p lt2 s z''' e) (h3 : p f a) (h4 : p g a) : term992 _144530 _144607 _144645 P f e g a.
Proof. exact (fun h0 : term839 _144530 _144607 _144645 P f e g a => @lem8193580 _144529 _144530 _144607 _144645 P lt2 s z''' e f p g a h1 h2 h0 h3 h4). Qed.
Lemma lem8193583 (p : Prop) : (term57 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8193584 {_144530 _144607 _144645 P : Type'} (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term992 _144530 _144607 _144645 P f e g a) = ((term835 _144530 _144607 _144645 P e f a) = (term835 _144530 _144607 _144645 P e g a)).
Proof. exact (@lem8193583 ((term835 _144530 _144607 _144645 P e f a) = (term835 _144530 _144607 _144645 P e g a))). Qed.
Lemma lem8193585 {_144529 _144530 _144607 _144645 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z''' : type518 _144530 _144607 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) (h2 : term553 _144529 _144530 _144607 _144645 P p lt2 s z''' e) (h3 : p f a) (h4 : p g a) : (term835 _144530 _144607 _144645 P e f a) = (term835 _144530 _144607 _144645 P e g a).
Proof. exact (EQ_MP (@lem8193584 _144530 _144607 _144645 P f e g a) (@lem8193581 _144529 _144530 _144607 _144645 P lt2 s z''' e f p g a h1 h2 h3 h4)). Qed.
Lemma lem8193588 (p : Prop) : (~ p) = (p -> False).
Proof. exact (EQ_MP (@lem21021 p) (@lem0)). Qed.
Lemma lem8193590 {_144530 _144607 _144645 P : Type'} (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term839 _144530 _144607 _144645 P f e g a) = (term993 _144530 _144607 _144645 P f e g a).
Proof. exact (@lem8193588 ((term835 _144530 _144607 _144645 P e f a) = (term835 _144530 _144607 _144645 P e g a))). Qed.
Lemma lem8193593 {_144530 _144607 _144645 P : Type'} (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) (h1 : term839 _144530 _144607 _144645 P f e g a) : term993 _144530 _144607 _144645 P f e g a.
Proof. exact (EQ_MP (@lem8193590 _144530 _144607 _144645 P f e g a) (@lem8191491 _144530 _144607 _144645 P f e g a h1)). Qed.
Lemma lem8193596 {_144529 _144530 _144607 _144645 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z''' : type518 _144530 _144607 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) (h2 : term553 _144529 _144530 _144607 _144645 P p lt2 s z''' e) (h3 : term839 _144530 _144607 _144645 P f e g a) (h4 : p f a) (h5 : p g a) : False.
Proof. exact (@lem8193593 _144530 _144607 _144645 P f e g a h3 (@lem8193585 _144529 _144530 _144607 _144645 P lt2 s z''' e f p g a h1 h2 h4 h5)). Qed.
Lemma lem8193597 {_144529 _144530 _144607 _144645 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z''' : type518 _144530 _144607 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) (h2 : term553 _144529 _144530 _144607 _144645 P p lt2 s z''' e) (h3 : term839 _144530 _144607 _144645 P f e g a) (h4 : p f a) (h5 : p g a) : term59.
Proof. exact (fun h0 : ~ False => @lem8193596 _144529 _144530 _144607 _144645 P lt2 s z''' e f p g a h1 h2 h3 h4 h5). Qed.
Lemma lem8193599 (p : Prop) : (term57 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8193600 : term59 = False.
Proof. exact (@lem8193599 False). Qed.
Lemma lem8193601 {_144529 _144530 _144607 _144645 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z''' : type518 _144530 _144607 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) (h2 : term553 _144529 _144530 _144607 _144645 P p lt2 s z''' e) (h3 : term839 _144530 _144607 _144645 P f e g a) (h4 : p f a) (h5 : p g a) : False.
Proof. exact (EQ_MP (@lem8193600) (@lem8193597 _144529 _144530 _144607 _144645 P lt2 s z''' e f p g a h1 h2 h3 h4 h5)). Qed.
Lemma lem8193602 {_144529 _144530 _144607 _144645 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z''' : type518 _144530 _144607 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) (h2 : term553 _144529 _144530 _144607 _144645 P p lt2 s z''' e) (h3 : term839 _144530 _144607 _144645 P f e g a) (h4 : p f a) (h5 : p g a) : (term839 _144530 _144607 _144645 P f e g a) = False.
Proof. exact (prop_ext (fun h6 : term839 _144530 _144607 _144645 P f e g a => @lem8193601 _144529 _144530 _144607 _144645 P lt2 s z''' e f p g a h1 h2 h3 h4 h5) (fun h6 : False => @lem8191491 _144530 _144607 _144645 P f e g a h3)). Qed.
Lemma lem8193603 {_144529 _144530 _144607 _144645 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z''' : type518 _144530 _144607 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) (h2 : term553 _144529 _144530 _144607 _144645 P p lt2 s z''' e) (h3 : term839 _144530 _144607 _144645 P f e g a) (h4 : p f a) (h5 : p g a) : False.
Proof. exact (EQ_MP (@lem8193602 _144529 _144530 _144607 _144645 P lt2 s z''' e f p g a h1 h2 h3 h4 h5) (@lem8191491 _144530 _144607 _144645 P f e g a h3)). Qed.
Lemma lem8193604 {_144529 _144530 _144607 _144645 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z'''' : type518 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) (h2 : term553 _144529 _144530 _144607 _144645 P p lt2 s z'''' pat) (h3 : term839 _144530 _144607 _144645 P f pat g a) (h4 : p f a) (h5 : p g a) : (term839 _144530 _144607 _144645 P f pat g a) = False.
Proof. exact (prop_ext (fun h6 : term839 _144530 _144607 _144645 P f pat g a => @lem8192734 _144529 _144530 _144607 _144645 P lt2 s z'''' pat f p g a h1 h2 h3 h4 h5) (fun h6 : False => @lem8191103 _144530 _144607 _144645 P f pat g a h3)). Qed.
Lemma lem8193605 {_144529 _144530 _144607 _144645 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z'''' : type518 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) (h2 : term553 _144529 _144530 _144607 _144645 P p lt2 s z'''' pat) (h3 : term839 _144530 _144607 _144645 P f pat g a) (h4 : p f a) (h5 : p g a) : False.
Proof. exact (EQ_MP (@lem8193604 _144529 _144530 _144607 _144645 P lt2 s z'''' pat f p g a h1 h2 h3 h4 h5) (@lem8191103 _144530 _144607 _144645 P f pat g a h3)). Qed.
Lemma lem8193606 {_144529 _144530 _144607 _144645 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z''' : type518 _144530 _144607 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) (h2 : term553 _144529 _144530 _144607 _144645 P p lt2 s z''' e) (h3 : term839 _144530 _144607 _144645 P f e g a) (h4 : p f a) (h5 : p g a) : (term839 _144530 _144607 _144645 P f e g a) = False.
Proof. exact (prop_ext (fun h6 : term839 _144530 _144607 _144645 P f e g a => @lem8193603 _144529 _144530 _144607 _144645 P lt2 s z''' e f p g a h1 h2 h3 h4 h5) (fun h6 : False => @lem8190967 _144530 _144607 _144645 P f e g a h3)). Qed.
Lemma lem8193607 {_144529 _144530 _144607 _144645 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z''' : type518 _144530 _144607 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) (h2 : term553 _144529 _144530 _144607 _144645 P p lt2 s z''' e) (h3 : term839 _144530 _144607 _144645 P f e g a) (h4 : p f a) (h5 : p g a) : False.
Proof. exact (EQ_MP (@lem8193606 _144529 _144530 _144607 _144645 P lt2 s z''' e f p g a h1 h2 h3 h4 h5) (@lem8190967 _144530 _144607 _144645 P f e g a h3)). Qed.
Lemma lem8193608 {_144529 _144530 _144607 _144645 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z'''' : type518 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) (h2 : term553 _144529 _144530 _144607 _144645 P p lt2 s z'''' pat) (h3 : term839 _144530 _144607 _144645 P f pat g a) (h4 : p f a) (h5 : p g a) : (term839 _144530 _144607 _144645 P f pat g a) = False.
Proof. exact (prop_ext (fun h6 : term839 _144530 _144607 _144645 P f pat g a => @lem8193605 _144529 _144530 _144607 _144645 P lt2 s z'''' pat f p g a h1 h2 h3 h4 h5) (fun h6 : False => @lem8190589 _144530 _144607 _144645 P f pat g a h3)). Qed.
Lemma lem8193609 {_144529 _144530 _144607 _144645 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z'''' : type518 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) (h2 : term553 _144529 _144530 _144607 _144645 P p lt2 s z'''' pat) (h3 : term839 _144530 _144607 _144645 P f pat g a) (h4 : p f a) (h5 : p g a) : False.
Proof. exact (EQ_MP (@lem8193608 _144529 _144530 _144607 _144645 P lt2 s z'''' pat f p g a h1 h2 h3 h4 h5) (@lem8190589 _144530 _144607 _144645 P f pat g a h3)). Qed.
Lemma lem8193610 {_144529 _144530 _144607 _144645 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z''' : type518 _144530 _144607 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) (h2 : term553 _144529 _144530 _144607 _144645 P p lt2 s z''' e) (h3 : term839 _144530 _144607 _144645 P f e g a) (h4 : p f a) (h5 : p g a) : (term839 _144530 _144607 _144645 P f e g a) = False.
Proof. exact (prop_ext (fun h6 : term839 _144530 _144607 _144645 P f e g a => @lem8193607 _144529 _144530 _144607 _144645 P lt2 s z''' e f p g a h1 h2 h3 h4 h5) (fun h6 : False => @lem8190967 _144530 _144607 _144645 P f e g a h3)). Qed.
Lemma lem8193611 {_144529 _144530 _144607 _144645 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z''' : type518 _144530 _144607 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) (h2 : term553 _144529 _144530 _144607 _144645 P p lt2 s z''' e) (h3 : term839 _144530 _144607 _144645 P f e g a) (h4 : p f a) (h5 : p g a) : False.
Proof. exact (EQ_MP (@lem8193610 _144529 _144530 _144607 _144645 P lt2 s z''' e f p g a h1 h2 h3 h4 h5) (@lem8190967 _144530 _144607 _144645 P f e g a h3)). Qed.
Lemma lem8193612 {_144529 _144530 _144607 _144645 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z'''' : type518 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) (h2 : term553 _144529 _144530 _144607 _144645 P p lt2 s z'''' pat) (h3 : term839 _144530 _144607 _144645 P f pat g a) (h4 : p f a) (h5 : p g a) : (term839 _144530 _144607 _144645 P f pat g a) = False.
Proof. exact (prop_ext (fun h6 : term839 _144530 _144607 _144645 P f pat g a => @lem8193609 _144529 _144530 _144607 _144645 P lt2 s z'''' pat f p g a h1 h2 h3 h4 h5) (fun h6 : False => @lem8190589 _144530 _144607 _144645 P f pat g a h3)). Qed.
Lemma lem8193613 {_144529 _144530 _144607 _144645 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z'''' : type518 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) (h2 : term553 _144529 _144530 _144607 _144645 P p lt2 s z'''' pat) (h3 : term839 _144530 _144607 _144645 P f pat g a) (h4 : p f a) (h5 : p g a) : False.
Proof. exact (EQ_MP (@lem8193612 _144529 _144530 _144607 _144645 P lt2 s z'''' pat f p g a h1 h2 h3 h4 h5) (@lem8190589 _144530 _144607 _144645 P f pat g a h3)). Qed.
Lemma lem8193614 {_144529 _144530 _144607 _144645 P : Type'} (z''' : type518 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z'''' : type518 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) (h2 : term553 _144529 _144530 _144607 _144645 P p lt2 s z''' e) (h3 : term553 _144529 _144530 _144607 _144645 P p lt2 s z'''' pat) (h4 : term326 _144530 _144607 _144645 P pat f e g a) (h5 : p f a) (h6 : p g a) : False.
Proof. exact (or_elim (@lem8188740 _144530 _144607 _144645 P pat f e g a h4) (fun h0 : term839 _144530 _144607 _144645 P f pat g a => @lem8193613 _144529 _144530 _144607 _144645 P lt2 s z'''' pat f p g a h1 h3 h0 h5 h6) (fun h0 : term839 _144530 _144607 _144645 P f e g a => @lem8193611 _144529 _144530 _144607 _144645 P lt2 s z''' e f p g a h1 h2 h0 h5 h6)). Qed.
Lemma lem8193615 {_144529 _144530 _144607 _144645 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z''' : type518 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) (h2 : term141 _144529 _144530 _144607 _144645 P p lt2 s pat) (h3 : term553 _144529 _144530 _144607 _144645 P p lt2 s z''' e) (h4 : term326 _144530 _144607 _144645 P pat f e g a) (h5 : p f a) (h6 : p g a) : False.
Proof. exact (ex_elim (@lem8187100 _144529 _144530 _144607 _144645 P p lt2 s pat h2) (fun z'''' : type518 _144530 _144607 P => fun h0 : term555 _144529 _144530 _144607 _144645 P p lt2 s pat z'''' => @lem8193614 _144529 _144530 _144607 _144645 P z''' lt2 s z'''' pat e f p g a h1 h3 h0 h4 h5 h6)). Qed.
Lemma lem8193616 {_144529 _144530 _144607 _144645 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) (h2 : term141 _144529 _144530 _144607 _144645 P p lt2 s e) (h3 : term141 _144529 _144530 _144607 _144645 P p lt2 s pat) (h4 : term326 _144530 _144607 _144645 P pat f e g a) (h5 : p f a) (h6 : p g a) : False.
Proof. exact (ex_elim (@lem8187426 _144529 _144530 _144607 _144645 P p lt2 s e h2) (fun z''' : type518 _144530 _144607 P => fun h0 : term555 _144529 _144530 _144607 _144645 P p lt2 s e z''' => @lem8193615 _144529 _144530 _144607 _144645 P lt2 s z''' pat e f p g a h1 h3 h0 h4 h5 h6)). Qed.
Lemma lem8193617 {_144529 _144530 _144607 _144645 _144654 P : Type'} (q : type560 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) (h2 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) (h3 : term141 _144529 _144530 _144607 _144645 P p lt2 s e) (h4 : term141 _144529 _144530 _144607 _144645 P p lt2 s pat) (h5 : term326 _144530 _144607 _144645 P pat f e g a) (h6 : p f a) (h7 : p g a) : False.
Proof. exact (ex_elim (@lem8187776 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t h2) (fun z'' : type518 _144530 _144607 P => fun h0 : term687 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t z'' => @lem8193616 _144529 _144530 _144607 _144645 P lt2 s pat e f p g a h1 h3 h4 h5 h6 h7)). Qed.
Lemma lem8193618 {_144529 _144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) (h2 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) (h3 : term224 _144529 _144530 _144607 _144645 P p pat e lt2 s q) (h4 : term141 _144529 _144530 _144607 _144645 P p lt2 s e) (h5 : term141 _144529 _144530 _144607 _144645 P p lt2 s pat) (h6 : term326 _144530 _144607 _144645 P pat f e g a) (h7 : p f a) (h8 : p g a) : False.
Proof. exact (ex_elim (@lem8188128 _144529 _144530 _144607 _144645 P p pat e lt2 s q h3) (fun z' : type518 _144530 _144607 P => fun h0 : term816 _144529 _144530 _144607 _144645 P p pat e lt2 s q z' => @lem8193617 _144529 _144530 _144607 _144645 _144654 P q t lt2 s pat e f p g a h1 h2 h4 h5 h6 h7 h8)). Qed.
Lemma lem8193619 {_144529 _144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) (h2 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) (h3 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y) (h4 : term224 _144529 _144530 _144607 _144645 P p pat e lt2 s q) (h5 : term141 _144529 _144530 _144607 _144645 P p lt2 s e) (h6 : term141 _144529 _144530 _144607 _144645 P p lt2 s pat) (h7 : term326 _144530 _144607 _144645 P pat f e g a) (h8 : p f a) (h9 : p g a) : False.
Proof. exact (ex_elim (@lem8188478 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y h3) (fun z : type518 _144530 _144607 P => fun h0 : term687 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y z => @lem8193618 _144529 _144530 _144607 _144645 _144654 P t q lt2 s pat e f p g a h1 h2 h4 h5 h6 h7 h8 h9)). Qed.
Lemma lem8193620 {_144529 _144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) (h2 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) (h3 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y) (h4 : term224 _144529 _144530 _144607 _144645 P p pat e lt2 s q) (h5 : term141 _144529 _144530 _144607 _144645 P p lt2 s e) (h6 : term141 _144529 _144530 _144607 _144645 P p lt2 s pat) (h7 : term326 _144530 _144607 _144645 P pat f e g a) (h8 : p f a) (h9 : p g a) : (p g a) = False.
Proof. exact (prop_ext (fun h10 : p g a => @lem8193619 _144529 _144530 _144607 _144645 _144654 P t y q lt2 s pat e f p g a h1 h2 h3 h4 h5 h6 h7 h8 h9) (fun h10 : False => @lem8188490 _144530 _144607 P p g a h9)). Qed.
Lemma lem8193621 {_144529 _144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) (h2 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) (h3 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y) (h4 : term224 _144529 _144530 _144607 _144645 P p pat e lt2 s q) (h5 : term141 _144529 _144530 _144607 _144645 P p lt2 s e) (h6 : term141 _144529 _144530 _144607 _144645 P p lt2 s pat) (h7 : term326 _144530 _144607 _144645 P pat f e g a) (h8 : p f a) (h9 : p g a) : False.
Proof. exact (EQ_MP (@lem8193620 _144529 _144530 _144607 _144645 _144654 P t y q lt2 s pat e f p g a h1 h2 h3 h4 h5 h6 h7 h8 h9) (@lem8188490 _144530 _144607 P p g a h9)). Qed.
Lemma lem8193622 {_144529 _144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) (h2 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) (h3 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y) (h4 : term224 _144529 _144530 _144607 _144645 P p pat e lt2 s q) (h5 : term141 _144529 _144530 _144607 _144645 P p lt2 s e) (h6 : term141 _144529 _144530 _144607 _144645 P p lt2 s pat) (h7 : term326 _144530 _144607 _144645 P pat f e g a) (h8 : p f a) (h9 : p g a) : (p f a) = False.
Proof. exact (prop_ext (fun h10 : p f a => @lem8193621 _144529 _144530 _144607 _144645 _144654 P t y q lt2 s pat e f p g a h1 h2 h3 h4 h5 h6 h7 h8 h9) (fun h10 : False => @lem8188484 _144530 _144607 P p f a h8)). Qed.
Lemma lem8193623 {_144529 _144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) (h2 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) (h3 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y) (h4 : term224 _144529 _144530 _144607 _144645 P p pat e lt2 s q) (h5 : term141 _144529 _144530 _144607 _144645 P p lt2 s e) (h6 : term141 _144529 _144530 _144607 _144645 P p lt2 s pat) (h7 : term326 _144530 _144607 _144645 P pat f e g a) (h8 : p f a) (h9 : p g a) : False.
Proof. exact (EQ_MP (@lem8193622 _144529 _144530 _144607 _144645 _144654 P t y q lt2 s pat e f p g a h1 h2 h3 h4 h5 h6 h7 h8 h9) (@lem8188484 _144530 _144607 P p f a h8)). Qed.
Lemma lem8193624 {_144529 _144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) (h2 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) (h3 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y) (h4 : term224 _144529 _144530 _144607 _144645 P p pat e lt2 s q) (h5 : term141 _144529 _144530 _144607 _144645 P p lt2 s e) (h6 : term141 _144529 _144530 _144607 _144645 P p lt2 s pat) (h7 : term326 _144530 _144607 _144645 P pat f e g a) (h8 : p f a) (h9 : p g a) : (term326 _144530 _144607 _144645 P pat f e g a) = False.
Proof. exact (prop_ext (fun h10 : term326 _144530 _144607 _144645 P pat f e g a => @lem8193623 _144529 _144530 _144607 _144645 _144654 P t y q lt2 s pat e f p g a h1 h2 h3 h4 h5 h6 h7 h8 h9) (fun h10 : False => @lem8186774 _144530 _144607 _144645 P pat f e g a h7)). Qed.
Lemma lem8193625 {_144529 _144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) (h2 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) (h3 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y) (h4 : term224 _144529 _144530 _144607 _144645 P p pat e lt2 s q) (h5 : term141 _144529 _144530 _144607 _144645 P p lt2 s e) (h6 : term141 _144529 _144530 _144607 _144645 P p lt2 s pat) (h7 : term326 _144530 _144607 _144645 P pat f e g a) (h8 : p f a) (h9 : p g a) : False.
Proof. exact (EQ_MP (@lem8193624 _144529 _144530 _144607 _144645 _144654 P t y q lt2 s pat e f p g a h1 h2 h3 h4 h5 h6 h7 h8 h9) (@lem8186774 _144530 _144607 _144645 P pat f e g a h7)). Qed.
Lemma lem8193626 {_144529 _144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (q : type560 _144530 _144607 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) (h2 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) (h3 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y) (h4 : term224 _144529 _144530 _144607 _144645 P p pat e lt2 s q) (h5 : term141 _144529 _144530 _144607 _144645 P p lt2 s e) (h6 : term141 _144529 _144530 _144607 _144645 P p lt2 s pat) (h7 : p f a) (h8 : p g a) : term325 _144530 _144607 _144645 P pat f e g a.
Proof. exact (fun h0 : term326 _144530 _144607 _144645 P pat f e g a => @lem8193625 _144529 _144530 _144607 _144645 _144654 P t y q lt2 s pat e f p g a h1 h2 h3 h4 h5 h6 h0 h7 h8). Qed.
Lemma lem8193627 {_144529 _144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (q : type560 _144530 _144607 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) (h2 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) (h3 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y) (h4 : term224 _144529 _144530 _144607 _144645 P p pat e lt2 s q) (h5 : term141 _144529 _144530 _144607 _144645 P p lt2 s e) (h6 : term141 _144529 _144530 _144607 _144645 P p lt2 s pat) (h7 : p f a) (h8 : p g a) : term324 _144530 _144607 _144645 P pat f e g a.
Proof. exact (EQ_MP (@lem8186773 _144530 _144607 _144645 P pat f e g a) (@lem8193626 _144529 _144530 _144607 _144645 _144654 P t y q e lt2 s pat f p g a h1 h2 h3 h4 h5 h6 h7 h8)). Qed.
Lemma lem8193628 {_144529 _144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (q : type560 _144530 _144607 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) (h2 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y) (h3 : term224 _144529 _144530 _144607 _144645 P p pat e lt2 s q) (h4 : term141 _144529 _144530 _144607 _144645 P p lt2 s e) (h5 : term141 _144529 _144530 _144607 _144645 P p lt2 s pat) (h6 : p f a) (h7 : p g a) : term334 _144529 _144530 _144607 _144645 P lt2 s pat f e g a.
Proof. exact (fun h0 : term165 _144529 _144530 _144607 P lt2 s a f g => @lem8193627 _144529 _144530 _144607 _144645 _144654 P t y q e lt2 s pat f p g a h0 h1 h2 h3 h4 h5 h6 h7). Qed.
Lemma lem8193629 {_144529 _144530 _144607 _144645 _144654 P : Type'} (g : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (q : type560 _144530 _144607 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) (h1 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) (h2 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y) (h3 : term224 _144529 _144530 _144607 _144645 P p pat e lt2 s q) (h4 : term141 _144529 _144530 _144607 _144645 P p lt2 s e) (h5 : term141 _144529 _144530 _144607 _144645 P p lt2 s pat) (h6 : p f a) : term337 _144529 _144530 _144607 _144645 P p lt2 s pat f e g a.
Proof. exact (fun h0 : p g a => @lem8193628 _144529 _144530 _144607 _144645 _144654 P t y q e lt2 s pat f p g a h1 h2 h3 h4 h5 h6 h0). Qed.
Lemma lem8193630 {_144529 _144530 _144607 _144645 _144654 P : Type'} (f : _144530 -> _144607) (g : _144530 -> _144607) (a : P) (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (q : type560 _144530 _144607 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (h1 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) (h2 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y) (h3 : term224 _144529 _144530 _144607 _144645 P p pat e lt2 s q) (h4 : term141 _144529 _144530 _144607 _144645 P p lt2 s e) (h5 : term141 _144529 _144530 _144607 _144645 P p lt2 s pat) : term339 _144529 _144530 _144607 _144645 P p lt2 s pat f e g a.
Proof. exact (fun h0 : p f a => @lem8193629 _144529 _144530 _144607 _144645 _144654 P g t y q e lt2 s pat p f a h1 h2 h3 h4 h5 h0). Qed.
Lemma lem8193631 {_144529 _144530 _144607 _144645 _144654 P : Type'} (y : type564 _144530 _144607 _144654 P) (f : _144530 -> _144607) (g : _144530 -> _144607) (a : P) (t : type564 _144530 _144607 _144654 P) (q : type560 _144530 _144607 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (h1 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) (h2 : term224 _144529 _144530 _144607 _144645 P p pat e lt2 s q) (h3 : term141 _144529 _144530 _144607 _144645 P p lt2 s e) (h4 : term141 _144529 _144530 _144607 _144645 P p lt2 s pat) : term342 _144529 _144530 _144607 _144645 _144654 P q y p lt2 s pat f e g a.
Proof. exact (fun h0 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y => @lem8193630 _144529 _144530 _144607 _144645 _144654 P f g a t y q e p lt2 s pat h1 h0 h2 h3 h4). Qed.
Lemma lem8193632 {_144529 _144530 _144607 _144645 _144654 P : Type'} (y : type564 _144530 _144607 _144654 P) (f : _144530 -> _144607) (g : _144530 -> _144607) (a : P) (q : type560 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (h1 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) (h2 : term141 _144529 _144530 _144607 _144645 P p lt2 s e) (h3 : term141 _144529 _144530 _144607 _144645 P p lt2 s pat) : term345 _144529 _144530 _144607 _144645 _144654 P q y p lt2 s pat f e g a.
Proof. exact (fun h0 : term224 _144529 _144530 _144607 _144645 P p pat e lt2 s q => @lem8193631 _144529 _144530 _144607 _144645 _144654 P y f g a t q e p lt2 s pat h1 h0 h2 h3). Qed.
Lemma lem8193633 {_144529 _144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (q : type560 _144530 _144607 P) (y : type564 _144530 _144607 _144654 P) (f : _144530 -> _144607) (g : _144530 -> _144607) (a : P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (h1 : term141 _144529 _144530 _144607 _144645 P p lt2 s e) (h2 : term141 _144529 _144530 _144607 _144645 P p lt2 s pat) : term347 _144529 _144530 _144607 _144645 _144654 P t q y p lt2 s pat f e g a.
Proof. exact (fun h0 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t => @lem8193632 _144529 _144530 _144607 _144645 _144654 P y f g a q t e p lt2 s pat h0 h1 h2). Qed.
Lemma lem8193634 {_144529 _144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (q : type560 _144530 _144607 P) (y : type564 _144530 _144607 _144654 P) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (h1 : term141 _144529 _144530 _144607 _144645 P p lt2 s pat) : term350 _144529 _144530 _144607 _144645 _144654 P t q y p lt2 s pat f e g a.
Proof. exact (fun h0 : term141 _144529 _144530 _144607 _144645 P p lt2 s e => @lem8193633 _144529 _144530 _144607 _144645 _144654 P t q y f g a e p lt2 s pat h0 h1). Qed.
Lemma lem8193635 {_144529 _144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (q : type560 _144530 _144607 P) (y : type564 _144530 _144607 _144654 P) (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : term351 _144529 _144530 _144607 _144645 _144654 P t q y p lt2 s pat f e g a.
Proof. exact (fun h0 : term141 _144529 _144530 _144607 _144645 P p lt2 s pat => @lem8193634 _144529 _144530 _144607 _144645 _144654 P t q y f e g a p lt2 s pat h0). Qed.
Lemma lem8193640 {_144529 _144530 _144607 _144645 _144654 P : Type'} (q : type560 _144530 _144607 P) (y : type564 _144530 _144607 _144654 P) (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : term355 _144529 _144530 _144607 _144645 _144654 P q y p lt2 s pat f e g a.
Proof. exact (fun t : type564 _144530 _144607 _144654 P => @lem8193635 _144529 _144530 _144607 _144645 _144654 P t q y p lt2 s pat f e g a). Qed.
Lemma lem8193645 {_144529 _144530 _144607 _144645 _144654 P : Type'} (y : type564 _144530 _144607 _144654 P) (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : term359 _144529 _144530 _144607 _144645 _144654 P y p lt2 s pat f e g a.
Proof. exact (fun q : type560 _144530 _144607 P => @lem8193640 _144529 _144530 _144607 _144645 _144654 P q y p lt2 s pat f e g a). Qed.
Lemma lem8193650 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : term363 _144529 _144530 _144607 _144645 _144654 P p lt2 s pat f e g a.
Proof. exact (fun y : type564 _144530 _144607 _144654 P => @lem8193645 _144529 _144530 _144607 _144645 _144654 P y p lt2 s pat f e g a). Qed.
Lemma lem8193655 {_144529 _144530 _144607 _144645 _144654 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : term367 _144529 _144530 _144607 _144645 _144654 P lt2 s pat f e g a.
Proof. exact (fun p : type560 _144530 _144607 P => @lem8193650 _144529 _144530 _144607 _144645 _144654 P p lt2 s pat f e g a). Qed.
Lemma lem8193660 {_144529 _144530 _144607 _144645 _144654 P : Type'} (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : term371 _144529 _144530 _144607 _144645 _144654 P s pat f e g a.
Proof. exact (fun lt2 : type1470 _144529 _144530 => @lem8193655 _144529 _144530 _144607 _144645 _144654 P lt2 s pat f e g a). Qed.
Lemma lem8193665 {_144529 _144530 _144607 _144645 _144654 P : Type'} (pat : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : term375 _144529 _144530 _144607 _144645 _144654 P pat f e g a.
Proof. exact (fun s : P -> _144529 => @lem8193660 _144529 _144530 _144607 _144645 _144654 P s pat f e g a). Qed.
Lemma lem8193670 {_144529 _144530 _144607 _144645 _144654 P : Type'} (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : term379 _144529 _144530 _144607 _144645 _144654 P f e g a.
Proof. exact (fun pat : type564 _144530 _144607 _144645 P => @lem8193665 _144529 _144530 _144607 _144645 _144654 P pat f e g a). Qed.
Lemma lem8193675 {_144529 _144530 _144607 _144645 _144654 P : Type'} (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : term383 _144529 _144530 _144607 _144645 _144654 P e g a.
Proof. exact (fun f : _144530 -> _144607 => @lem8193670 _144529 _144530 _144607 _144645 _144654 P f e g a). Qed.
Lemma lem8193680 {_144529 _144530 _144607 _144645 _144654 P : Type'} (g : _144530 -> _144607) (a : P) : term387 _144529 _144530 _144607 _144645 _144654 P g a.
Proof. exact (fun e : type564 _144530 _144607 _144645 P => @lem8193675 _144529 _144530 _144607 _144645 _144654 P e g a). Qed.
Lemma lem8193685 {_144529 _144530 _144607 _144645 _144654 P : Type'} (a : P) : term391 _144529 _144530 _144607 _144645 _144654 P a.
Proof. exact (fun g : _144530 -> _144607 => @lem8193680 _144529 _144530 _144607 _144645 _144654 P g a). Qed.
Lemma lem8193690 {_144529 _144530 _144607 _144645 _144654 P : Type'} : term395 _144529 _144530 _144607 _144645 _144654 P.
Proof. exact (fun a : P => @lem8193685 _144529 _144530 _144607 _144645 _144654 P a). Qed.
Lemma lem8193691 {_144529 _144530 _144607 _144645 _144654 P : Type'} : term394 _144529 _144530 _144607 _144645 _144654 P.
Proof. exact (EQ_MP (@lem8186761 _144529 _144530 _144607 _144645 _144654 P) (@lem8193690 _144529 _144530 _144607 _144645 _144654 P)). Qed.
Lemma lem8193692 {_144529 _144530 _144607 _144645 _144654 P : Type'} (a : P) : term994 _144529 _144530 _144607 _144645 _144654 P a.
Proof. exact (@lem8193691 _144529 _144530 _144607 _144645 _144654 P a). Qed.
Lemma lem8193693 {_144529 _144530 _144607 _144645 _144654 P : Type'} (a : P) : (term994 _144529 _144530 _144607 _144645 _144654 P a) = (term390 _144529 _144530 _144607 _144645 _144654 P a).
Proof. exact (eq_refl (term994 _144529 _144530 _144607 _144645 _144654 P a)). Qed.
Lemma lem8193694 {_144529 _144530 _144607 _144645 _144654 P : Type'} (a : P) : term390 _144529 _144530 _144607 _144645 _144654 P a.
Proof. exact (EQ_MP (@lem8193693 _144529 _144530 _144607 _144645 _144654 P a) (@lem8193692 _144529 _144530 _144607 _144645 _144654 P a)). Qed.
Lemma lem8193695 {_144529 _144530 _144607 _144645 _144654 P : Type'} (a : P) (g : _144530 -> _144607) : term995 _144529 _144530 _144607 _144645 _144654 P a g.
Proof. exact (@lem8193694 _144529 _144530 _144607 _144645 _144654 P a g). Qed.
Lemma lem8193696 {_144529 _144530 _144607 _144645 _144654 P : Type'} (g : _144530 -> _144607) (a : P) : (term995 _144529 _144530 _144607 _144645 _144654 P a g) = (term386 _144529 _144530 _144607 _144645 _144654 P g a).
Proof. exact (eq_refl (term995 _144529 _144530 _144607 _144645 _144654 P a g)). Qed.
Lemma lem8193697 {_144529 _144530 _144607 _144645 _144654 P : Type'} (g : _144530 -> _144607) (a : P) : term386 _144529 _144530 _144607 _144645 _144654 P g a.
Proof. exact (EQ_MP (@lem8193696 _144529 _144530 _144607 _144645 _144654 P g a) (@lem8193695 _144529 _144530 _144607 _144645 _144654 P a g)). Qed.
Lemma lem8193698 {_144529 _144530 _144607 _144645 _144654 P : Type'} (g : _144530 -> _144607) (a : P) (e : type564 _144530 _144607 _144645 P) : term996 _144529 _144530 _144607 _144645 _144654 P g a e.
Proof. exact (@lem8193697 _144529 _144530 _144607 _144645 _144654 P g a e). Qed.
Lemma lem8193699 {_144529 _144530 _144607 _144645 _144654 P : Type'} (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term996 _144529 _144530 _144607 _144645 _144654 P g a e) = (term382 _144529 _144530 _144607 _144645 _144654 P e g a).
Proof. exact (eq_refl (term996 _144529 _144530 _144607 _144645 _144654 P g a e)). Qed.
Lemma lem8193700 {_144529 _144530 _144607 _144645 _144654 P : Type'} (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : term382 _144529 _144530 _144607 _144645 _144654 P e g a.
Proof. exact (EQ_MP (@lem8193699 _144529 _144530 _144607 _144645 _144654 P e g a) (@lem8193698 _144529 _144530 _144607 _144645 _144654 P g a e)). Qed.
Lemma lem8193701 {_144529 _144530 _144607 _144645 _144654 P : Type'} (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) (f : _144530 -> _144607) : term997 _144529 _144530 _144607 _144645 _144654 P e g a f.
Proof. exact (@lem8193700 _144529 _144530 _144607 _144645 _144654 P e g a f). Qed.
Lemma lem8193702 {_144529 _144530 _144607 _144645 _144654 P : Type'} (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term997 _144529 _144530 _144607 _144645 _144654 P e g a f) = (term378 _144529 _144530 _144607 _144645 _144654 P f e g a).
Proof. exact (eq_refl (term997 _144529 _144530 _144607 _144645 _144654 P e g a f)). Qed.
Lemma lem8193703 {_144529 _144530 _144607 _144645 _144654 P : Type'} (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : term378 _144529 _144530 _144607 _144645 _144654 P f e g a.
Proof. exact (EQ_MP (@lem8193702 _144529 _144530 _144607 _144645 _144654 P f e g a) (@lem8193701 _144529 _144530 _144607 _144645 _144654 P e g a f)). Qed.
Lemma lem8193704 {_144529 _144530 _144607 _144645 _144654 P : Type'} (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) (pat : type564 _144530 _144607 _144645 P) : term998 _144529 _144530 _144607 _144645 _144654 P f e g a pat.
Proof. exact (@lem8193703 _144529 _144530 _144607 _144645 _144654 P f e g a pat). Qed.
Lemma lem8193705 {_144529 _144530 _144607 _144645 _144654 P : Type'} (pat : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term998 _144529 _144530 _144607 _144645 _144654 P f e g a pat) = (term374 _144529 _144530 _144607 _144645 _144654 P pat f e g a).
Proof. exact (eq_refl (term998 _144529 _144530 _144607 _144645 _144654 P f e g a pat)). Qed.
Lemma lem8193706 {_144529 _144530 _144607 _144645 _144654 P : Type'} (pat : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : term374 _144529 _144530 _144607 _144645 _144654 P pat f e g a.
Proof. exact (EQ_MP (@lem8193705 _144529 _144530 _144607 _144645 _144654 P pat f e g a) (@lem8193704 _144529 _144530 _144607 _144645 _144654 P f e g a pat)). Qed.
Lemma lem8193707 {_144529 _144530 _144607 _144645 _144654 P : Type'} (pat : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) (s : P -> _144529) : term999 _144529 _144530 _144607 _144645 _144654 P pat f e g a s.
Proof. exact (@lem8193706 _144529 _144530 _144607 _144645 _144654 P pat f e g a s). Qed.
Lemma lem8193708 {_144529 _144530 _144607 _144645 _144654 P : Type'} (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term999 _144529 _144530 _144607 _144645 _144654 P pat f e g a s) = (term370 _144529 _144530 _144607 _144645 _144654 P s pat f e g a).
Proof. exact (eq_refl (term999 _144529 _144530 _144607 _144645 _144654 P pat f e g a s)). Qed.
Lemma lem8193709 {_144529 _144530 _144607 _144645 _144654 P : Type'} (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : term370 _144529 _144530 _144607 _144645 _144654 P s pat f e g a.
Proof. exact (EQ_MP (@lem8193708 _144529 _144530 _144607 _144645 _144654 P s pat f e g a) (@lem8193707 _144529 _144530 _144607 _144645 _144654 P pat f e g a s)). Qed.
Lemma lem8193710 {_144529 _144530 _144607 _144645 _144654 P : Type'} (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) (lt2 : type1470 _144529 _144530) : term1000 _144529 _144530 _144607 _144645 _144654 P s pat f e g a lt2.
Proof. exact (@lem8193709 _144529 _144530 _144607 _144645 _144654 P s pat f e g a lt2). Qed.
Lemma lem8193711 {_144529 _144530 _144607 _144645 _144654 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term1000 _144529 _144530 _144607 _144645 _144654 P s pat f e g a lt2) = (term366 _144529 _144530 _144607 _144645 _144654 P lt2 s pat f e g a).
Proof. exact (eq_refl (term1000 _144529 _144530 _144607 _144645 _144654 P s pat f e g a lt2)). Qed.
Lemma lem8193712 {_144529 _144530 _144607 _144645 _144654 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : term366 _144529 _144530 _144607 _144645 _144654 P lt2 s pat f e g a.
Proof. exact (EQ_MP (@lem8193711 _144529 _144530 _144607 _144645 _144654 P lt2 s pat f e g a) (@lem8193710 _144529 _144530 _144607 _144645 _144654 P s pat f e g a lt2)). Qed.
Lemma lem8193713 {_144529 _144530 _144607 _144645 _144654 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) (p : type560 _144530 _144607 P) : term1001 _144529 _144530 _144607 _144645 _144654 P lt2 s pat f e g a p.
Proof. exact (@lem8193712 _144529 _144530 _144607 _144645 _144654 P lt2 s pat f e g a p). Qed.
Lemma lem8193714 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term1001 _144529 _144530 _144607 _144645 _144654 P lt2 s pat f e g a p) = (term362 _144529 _144530 _144607 _144645 _144654 P p lt2 s pat f e g a).
Proof. exact (eq_refl (term1001 _144529 _144530 _144607 _144645 _144654 P lt2 s pat f e g a p)). Qed.
Lemma lem8193715 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : term362 _144529 _144530 _144607 _144645 _144654 P p lt2 s pat f e g a.
Proof. exact (EQ_MP (@lem8193714 _144529 _144530 _144607 _144645 _144654 P p lt2 s pat f e g a) (@lem8193713 _144529 _144530 _144607 _144645 _144654 P lt2 s pat f e g a p)). Qed.
Lemma lem8193716 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) (y : type564 _144530 _144607 _144654 P) : term1002 _144529 _144530 _144607 _144645 _144654 P p lt2 s pat f e g a y.
Proof. exact (@lem8193715 _144529 _144530 _144607 _144645 _144654 P p lt2 s pat f e g a y). Qed.
Lemma lem8193717 {_144529 _144530 _144607 _144645 _144654 P : Type'} (y : type564 _144530 _144607 _144654 P) (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term1002 _144529 _144530 _144607 _144645 _144654 P p lt2 s pat f e g a y) = (term358 _144529 _144530 _144607 _144645 _144654 P y p lt2 s pat f e g a).
Proof. exact (eq_refl (term1002 _144529 _144530 _144607 _144645 _144654 P p lt2 s pat f e g a y)). Qed.
Lemma lem8193718 {_144529 _144530 _144607 _144645 _144654 P : Type'} (y : type564 _144530 _144607 _144654 P) (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : term358 _144529 _144530 _144607 _144645 _144654 P y p lt2 s pat f e g a.
Proof. exact (EQ_MP (@lem8193717 _144529 _144530 _144607 _144645 _144654 P y p lt2 s pat f e g a) (@lem8193716 _144529 _144530 _144607 _144645 _144654 P p lt2 s pat f e g a y)). Qed.
Lemma lem8193719 {_144529 _144530 _144607 _144645 _144654 P : Type'} (y : type564 _144530 _144607 _144654 P) (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) (q : type560 _144530 _144607 P) : term1003 _144529 _144530 _144607 _144645 _144654 P y p lt2 s pat f e g a q.
Proof. exact (@lem8193718 _144529 _144530 _144607 _144645 _144654 P y p lt2 s pat f e g a q). Qed.
Lemma lem8193720 {_144529 _144530 _144607 _144645 _144654 P : Type'} (q : type560 _144530 _144607 P) (y : type564 _144530 _144607 _144654 P) (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term1003 _144529 _144530 _144607 _144645 _144654 P y p lt2 s pat f e g a q) = (term354 _144529 _144530 _144607 _144645 _144654 P q y p lt2 s pat f e g a).
Proof. exact (eq_refl (term1003 _144529 _144530 _144607 _144645 _144654 P y p lt2 s pat f e g a q)). Qed.
Lemma lem8193721 {_144529 _144530 _144607 _144645 _144654 P : Type'} (q : type560 _144530 _144607 P) (y : type564 _144530 _144607 _144654 P) (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : term354 _144529 _144530 _144607 _144645 _144654 P q y p lt2 s pat f e g a.
Proof. exact (EQ_MP (@lem8193720 _144529 _144530 _144607 _144645 _144654 P q y p lt2 s pat f e g a) (@lem8193719 _144529 _144530 _144607 _144645 _144654 P y p lt2 s pat f e g a q)). Qed.
Lemma lem8193722 {_144529 _144530 _144607 _144645 _144654 P : Type'} (q : type560 _144530 _144607 P) (y : type564 _144530 _144607 _144654 P) (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) (t : type564 _144530 _144607 _144654 P) : term1004 _144529 _144530 _144607 _144645 _144654 P q y p lt2 s pat f e g a t.
Proof. exact (@lem8193721 _144529 _144530 _144607 _144645 _144654 P q y p lt2 s pat f e g a t). Qed.
Lemma lem8193723 {_144529 _144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (q : type560 _144530 _144607 P) (y : type564 _144530 _144607 _144654 P) (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term1004 _144529 _144530 _144607 _144645 _144654 P q y p lt2 s pat f e g a t) = (term327 _144529 _144530 _144607 _144645 _144654 P t q y p lt2 s pat f e g a).
Proof. exact (eq_refl (term1004 _144529 _144530 _144607 _144645 _144654 P q y p lt2 s pat f e g a t)). Qed.
Lemma lem8193724 {_144529 _144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (q : type560 _144530 _144607 P) (y : type564 _144530 _144607 _144654 P) (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : term327 _144529 _144530 _144607 _144645 _144654 P t q y p lt2 s pat f e g a.
Proof. exact (EQ_MP (@lem8193723 _144529 _144530 _144607 _144645 _144654 P t q y p lt2 s pat f e g a) (@lem8193722 _144529 _144530 _144607 _144645 _144654 P q y p lt2 s pat f e g a t)). Qed.
Lemma lem8193726 {_144529 _144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (q : type560 _144530 _144607 P) (y : type564 _144530 _144607 _144654 P) (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : term327 _144529 _144530 _144607 _144645 _144654 P t q y p lt2 s pat f e g a.
Proof. exact (@lem8185896 _144529 _144530 _144607 _144645 _144654 P t q y p lt2 s pat f e g a (@lem8193724 _144529 _144530 _144607 _144645 _144654 P t q y p lt2 s pat f e g a)). Qed.
Lemma lem8193727 {_144529 _144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (q : type560 _144530 _144607 P) (y : type564 _144530 _144607 _144654 P) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (h1 : term141 _144529 _144530 _144607 _144645 P p lt2 s pat) : term349 _144529 _144530 _144607 _144645 _144654 P t q y p lt2 s pat f e g a.
Proof. exact (@lem8193726 _144529 _144530 _144607 _144645 _144654 P t q y p lt2 s pat f e g a (@lem8185836 _144529 _144530 _144607 _144645 P p lt2 s pat h1)). Qed.
Lemma lem8193728 {_144529 _144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (q : type560 _144530 _144607 P) (y : type564 _144530 _144607 _144654 P) (f : _144530 -> _144607) (g : _144530 -> _144607) (a : P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (h1 : term141 _144529 _144530 _144607 _144645 P p lt2 s e) (h2 : term141 _144529 _144530 _144607 _144645 P p lt2 s pat) : term346 _144529 _144530 _144607 _144645 _144654 P t q y p lt2 s pat f e g a.
Proof. exact (@lem8193727 _144529 _144530 _144607 _144645 _144654 P t q y f e g a p lt2 s pat h2 (@lem8185838 _144529 _144530 _144607 _144645 P p lt2 s e h1)). Qed.
Lemma lem8193729 {_144529 _144530 _144607 _144645 _144654 P : Type'} (y : type564 _144530 _144607 _144654 P) (f : _144530 -> _144607) (g : _144530 -> _144607) (a : P) (q : type560 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (h1 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) (h2 : term141 _144529 _144530 _144607 _144645 P p lt2 s e) (h3 : term141 _144529 _144530 _144607 _144645 P p lt2 s pat) : term344 _144529 _144530 _144607 _144645 _144654 P q y p lt2 s pat f e g a.
Proof. exact (@lem8193728 _144529 _144530 _144607 _144645 _144654 P t q y f g a e p lt2 s pat h2 h3 (@lem8185840 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t h1)). Qed.
Lemma lem8193730 {_144529 _144530 _144607 _144645 _144654 P : Type'} (y : type564 _144530 _144607 _144654 P) (f : _144530 -> _144607) (g : _144530 -> _144607) (a : P) (t : type564 _144530 _144607 _144654 P) (q : type560 _144530 _144607 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (h1 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) (h2 : term224 _144529 _144530 _144607 _144645 P p pat e lt2 s q) (h3 : term141 _144529 _144530 _144607 _144645 P p lt2 s e) (h4 : term141 _144529 _144530 _144607 _144645 P p lt2 s pat) : term341 _144529 _144530 _144607 _144645 _144654 P q y p lt2 s pat f e g a.
Proof. exact (@lem8193729 _144529 _144530 _144607 _144645 _144654 P y f g a q t e p lt2 s pat h1 h3 h4 (@lem8185842 _144529 _144530 _144607 _144645 P p pat e lt2 s q h2)). Qed.
Lemma lem8193731 {_144529 _144530 _144607 _144645 _144654 P : Type'} (f : _144530 -> _144607) (g : _144530 -> _144607) (a : P) (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (q : type560 _144530 _144607 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (h1 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) (h2 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y) (h3 : term224 _144529 _144530 _144607 _144645 P p pat e lt2 s q) (h4 : term141 _144529 _144530 _144607 _144645 P p lt2 s e) (h5 : term141 _144529 _144530 _144607 _144645 P p lt2 s pat) : term338 _144529 _144530 _144607 _144645 P p lt2 s pat f e g a.
Proof. exact (@lem8193730 _144529 _144530 _144607 _144645 _144654 P y f g a t q e p lt2 s pat h1 h3 h4 h5 (@lem8185841 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y h2)). Qed.
Lemma lem8193732 {_144529 _144530 _144607 _144645 _144654 P : Type'} (g : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (q : type560 _144530 _144607 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) (h1 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) (h2 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y) (h3 : term224 _144529 _144530 _144607 _144645 P p pat e lt2 s q) (h4 : term141 _144529 _144530 _144607 _144645 P p lt2 s e) (h5 : term141 _144529 _144530 _144607 _144645 P p lt2 s pat) (h6 : p f a) : term336 _144529 _144530 _144607 _144645 P p lt2 s pat f e g a.
Proof. exact (@lem8193731 _144529 _144530 _144607 _144645 _144654 P f g a t y q e p lt2 s pat h1 h2 h3 h4 h5 (@lem8185845 _144530 _144607 P p f a h6)). Qed.
Lemma lem8193733 {_144529 _144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (q : type560 _144530 _144607 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) (h2 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y) (h3 : term224 _144529 _144530 _144607 _144645 P p pat e lt2 s q) (h4 : term141 _144529 _144530 _144607 _144645 P p lt2 s e) (h5 : term141 _144529 _144530 _144607 _144645 P p lt2 s pat) (h6 : p f a) (h7 : p g a) : term333 _144529 _144530 _144607 _144645 P lt2 s pat f e g a.
Proof. exact (@lem8193732 _144529 _144530 _144607 _144645 _144654 P g t y q e lt2 s pat p f a h1 h2 h3 h4 h5 h6 (@lem8185847 _144530 _144607 P p g a h7)). Qed.
Lemma lem8193734 {_144529 _144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (q : type560 _144530 _144607 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) (h2 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) (h3 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y) (h4 : term224 _144529 _144530 _144607 _144645 P p pat e lt2 s q) (h5 : term141 _144529 _144530 _144607 _144645 P p lt2 s e) (h6 : term141 _144529 _144530 _144607 _144645 P p lt2 s pat) (h7 : p f a) (h8 : p g a) : term325 _144530 _144607 _144645 P pat f e g a.
Proof. exact (@lem8193733 _144529 _144530 _144607 _144645 _144654 P t y q e lt2 s pat f p g a h2 h3 h4 h5 h6 h7 h8 (@lem8185846 _144529 _144530 _144607 P lt2 s a f g h1)). Qed.
Lemma lem8193735 {_144529 _144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) (h2 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) (h3 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y) (h4 : term224 _144529 _144530 _144607 _144645 P p pat e lt2 s q) (h5 : term141 _144529 _144530 _144607 _144645 P p lt2 s e) (h6 : term141 _144529 _144530 _144607 _144645 P p lt2 s pat) (h7 : term326 _144530 _144607 _144645 P pat f e g a) (h8 : p f a) (h9 : p g a) : False.
Proof. exact (@lem8193734 _144529 _144530 _144607 _144645 _144654 P t y q e lt2 s pat f p g a h1 h2 h3 h4 h5 h6 h8 h9 (@lem8185880 _144530 _144607 _144645 P pat f e g a h7)). Qed.
Lemma lem8193736 {_144529 _144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) (h2 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) (h3 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y) (h4 : term224 _144529 _144530 _144607 _144645 P p pat e lt2 s q) (h5 : term141 _144529 _144530 _144607 _144645 P p lt2 s e) (h6 : term141 _144529 _144530 _144607 _144645 P p lt2 s pat) (h7 : term326 _144530 _144607 _144645 P pat f e g a) (h8 : p f a) (h9 : p g a) : (term326 _144530 _144607 _144645 P pat f e g a) = False.
Proof. exact (prop_ext (fun h10 : term326 _144530 _144607 _144645 P pat f e g a => @lem8193735 _144529 _144530 _144607 _144645 _144654 P t y q lt2 s pat e f p g a h1 h2 h3 h4 h5 h6 h7 h8 h9) (fun h10 : False => @lem8185880 _144530 _144607 _144645 P pat f e g a h7)). Qed.
Lemma lem8193737 {_144529 _144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) (h2 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) (h3 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y) (h4 : term224 _144529 _144530 _144607 _144645 P p pat e lt2 s q) (h5 : term141 _144529 _144530 _144607 _144645 P p lt2 s e) (h6 : term141 _144529 _144530 _144607 _144645 P p lt2 s pat) (h7 : term326 _144530 _144607 _144645 P pat f e g a) (h8 : p f a) (h9 : p g a) : False.
Proof. exact (EQ_MP (@lem8193736 _144529 _144530 _144607 _144645 _144654 P t y q lt2 s pat e f p g a h1 h2 h3 h4 h5 h6 h7 h8 h9) (@lem8185880 _144530 _144607 _144645 P pat f e g a h7)). Qed.
Lemma lem8193738 {_144529 _144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (q : type560 _144530 _144607 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) (h2 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) (h3 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y) (h4 : term224 _144529 _144530 _144607 _144645 P p pat e lt2 s q) (h5 : term141 _144529 _144530 _144607 _144645 P p lt2 s e) (h6 : term141 _144529 _144530 _144607 _144645 P p lt2 s pat) (h7 : p f a) (h8 : p g a) : term325 _144530 _144607 _144645 P pat f e g a.
Proof. exact (fun h0 : term326 _144530 _144607 _144645 P pat f e g a => @lem8193737 _144529 _144530 _144607 _144645 _144654 P t y q lt2 s pat e f p g a h1 h2 h3 h4 h5 h6 h0 h7 h8). Qed.
Lemma lem8193739 {_144529 _144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (q : type560 _144530 _144607 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) (h2 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) (h3 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y) (h4 : term224 _144529 _144530 _144607 _144645 P p pat e lt2 s q) (h5 : term141 _144529 _144530 _144607 _144645 P p lt2 s e) (h6 : term141 _144529 _144530 _144607 _144645 P p lt2 s pat) (h7 : p f a) (h8 : p g a) : term324 _144530 _144607 _144645 P pat f e g a.
Proof. exact (EQ_MP (@lem8185879 _144530 _144607 _144645 P pat f e g a) (@lem8193738 _144529 _144530 _144607 _144645 _144654 P t y q e lt2 s pat f p g a h1 h2 h3 h4 h5 h6 h7 h8)). Qed.
Lemma lem8193741 (p : Prop) : p = (term7 p).
Proof. exact (EQ_MP (@lem10578 p) (@lem10597 p)). Qed.
Lemma lem8193742 {_144530 _144607 P : Type'} (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : ((q f a) = (q g a)) = (term1005 _144530 _144607 P f q g a).
Proof. exact (@lem8193741 ((q f a) = (q g a))). Qed.
Lemma lem8193743 {_144530 _144607 P : Type'} (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term1005 _144530 _144607 P f q g a) = ((q f a) = (q g a)).
Proof. exact (SYM (@lem8193742 _144530 _144607 P f q g a)). Qed.
Lemma lem8193744 {_144530 _144607 P : Type'} (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term1006 _144530 _144607 P f q g a) : term1006 _144530 _144607 P f q g a.
Proof. exact (h1). Qed.
Lemma lem8193747 {_144529 _144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term1007 _144529 _144530 _144607 _144645 _144654 P t y p lt2 s pat e f q g a) : term1007 _144529 _144530 _144607 _144645 _144654 P t y p lt2 s pat e f q g a.
Proof. exact (h1). Qed.
Lemma lem8193748 {_144529 _144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : term1008 _144529 _144530 _144607 _144645 _144654 P t y p lt2 s pat e f q g a.
Proof. exact (fun h0 : term1007 _144529 _144530 _144607 _144645 _144654 P t y p lt2 s pat e f q g a => @lem8193747 _144529 _144530 _144607 _144645 _144654 P t y p lt2 s pat e f q g a h0). Qed.
Lemma lem8193749 {_144529 _144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term1008 _144529 _144530 _144607 _144645 _144654 P t y p lt2 s pat e f q g a) : term1008 _144529 _144530 _144607 _144645 _144654 P t y p lt2 s pat e f q g a.
Proof. exact (h1). Qed.
Lemma lem8193750 {_144529 _144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term1007 _144529 _144530 _144607 _144645 _144654 P t y p lt2 s pat e f q g a) : term1007 _144529 _144530 _144607 _144645 _144654 P t y p lt2 s pat e f q g a.
Proof. exact (h1). Qed.
Lemma lem8193751 {_144529 _144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term1007 _144529 _144530 _144607 _144645 _144654 P t y p lt2 s pat e f q g a) (h2 : term1008 _144529 _144530 _144607 _144645 _144654 P t y p lt2 s pat e f q g a) : term1007 _144529 _144530 _144607 _144645 _144654 P t y p lt2 s pat e f q g a.
Proof. exact (@lem8193749 _144529 _144530 _144607 _144645 _144654 P t y p lt2 s pat e f q g a h2 (@lem8193750 _144529 _144530 _144607 _144645 _144654 P t y p lt2 s pat e f q g a h1)). Qed.
Lemma lem8193752 {_144529 _144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term1007 _144529 _144530 _144607 _144645 _144654 P t y p lt2 s pat e f q g a) : term1009 _144529 _144530 _144607 _144645 _144654 P t y p lt2 s pat e f q g a.
Proof. exact (fun h0 : term1008 _144529 _144530 _144607 _144645 _144654 P t y p lt2 s pat e f q g a => @lem8193751 _144529 _144530 _144607 _144645 _144654 P t y p lt2 s pat e f q g a h1 h0). Qed.
Lemma lem8193753 {_144529 _144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term1008 _144529 _144530 _144607 _144645 _144654 P t y p lt2 s pat e f q g a) : term1008 _144529 _144530 _144607 _144645 _144654 P t y p lt2 s pat e f q g a.
Proof. exact (h1). Qed.
Lemma lem8193754 {_144529 _144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term1007 _144529 _144530 _144607 _144645 _144654 P t y p lt2 s pat e f q g a) (h2 : term1008 _144529 _144530 _144607 _144645 _144654 P t y p lt2 s pat e f q g a) : term1007 _144529 _144530 _144607 _144645 _144654 P t y p lt2 s pat e f q g a.
Proof. exact (@lem8193752 _144529 _144530 _144607 _144645 _144654 P t y p lt2 s pat e f q g a h1 (@lem8193753 _144529 _144530 _144607 _144645 _144654 P t y p lt2 s pat e f q g a h2)). Qed.
Lemma lem8193755 {_144529 _144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term1008 _144529 _144530 _144607 _144645 _144654 P t y p lt2 s pat e f q g a) : term1008 _144529 _144530 _144607 _144645 _144654 P t y p lt2 s pat e f q g a.
Proof. exact (fun h0 : term1007 _144529 _144530 _144607 _144645 _144654 P t y p lt2 s pat e f q g a => @lem8193754 _144529 _144530 _144607 _144645 _144654 P t y p lt2 s pat e f q g a h0 h1). Qed.
Lemma lem8193756 {_144529 _144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : term1010 _144529 _144530 _144607 _144645 _144654 P t y p lt2 s pat e f q g a.
Proof. exact (fun h0 : term1008 _144529 _144530 _144607 _144645 _144654 P t y p lt2 s pat e f q g a => @lem8193755 _144529 _144530 _144607 _144645 _144654 P t y p lt2 s pat e f q g a h0). Qed.
Lemma lem8193759 {_144529 _144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : term1008 _144529 _144530 _144607 _144645 _144654 P t y p lt2 s pat e f q g a.
Proof. exact (@lem8193756 _144529 _144530 _144607 _144645 _144654 P t y p lt2 s pat e f q g a (@lem8193748 _144529 _144530 _144607 _144645 _144654 P t y p lt2 s pat e f q g a)). Qed.
Lemma lem8193760 {_144529 _144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : term1008 _144529 _144530 _144607 _144645 _144654 P t y p lt2 s pat e f q g a.
Proof. exact (@lem8193759 _144529 _144530 _144607 _144645 _144654 P t y p lt2 s pat e f q g a). Qed.
Lemma lem8193972 (t : Prop) : (t -> False) = (~ t).
Proof. exact (proj2 (@lem16474 t)). Qed.
Lemma lem8193973 {_144530 _144607 P : Type'} (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term1005 _144530 _144607 P f q g a) = (term1011 _144530 _144607 P f q g a).
Proof. exact (@lem8193972 (term1006 _144530 _144607 P f q g a)). Qed.
Lemma lem8193975 (t : Prop) : (term15 t) = t.
Proof. exact (EQ_MP (@lem16507 t) (@lem16506 t)). Qed.
Lemma lem8193976 {_144530 _144607 P : Type'} (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term1011 _144530 _144607 P f q g a) = ((q f a) = (q g a)).
Proof. exact (@lem8193975 ((q f a) = (q g a))). Qed.
Lemma lem8193977 {_144530 _144607 P : Type'} (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term1005 _144530 _144607 P f q g a) = ((q f a) = (q g a)).
Proof. exact (TRANS (@lem8193973 _144530 _144607 P f q g a) (@lem8193976 _144530 _144607 P f q g a)). Qed.
Lemma lem8193978 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term1012 _144530 _144607 _144645 P pat e g a) = (term1012 _144530 _144607 _144645 P pat e g a).
Proof. exact (eq_refl (term1012 _144530 _144607 _144645 P pat e g a)). Qed.
Lemma lem8193979 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term1013 _144530 _144607 _144645 P pat e f q g a) = (term1014 _144530 _144607 _144645 P pat e f q g a).
Proof. exact (MK_COMB (@lem8193978 _144530 _144607 _144645 P pat e g a) (@lem8193977 _144530 _144607 P f q g a)). Qed.
Lemma lem8193982 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (a : P) : (term1012 _144530 _144607 _144645 P pat e f a) = (term1012 _144530 _144607 _144645 P pat e f a).
Proof. exact (eq_refl (term1012 _144530 _144607 _144645 P pat e f a)). Qed.
Lemma lem8193983 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term1015 _144530 _144607 _144645 P pat e f q g a) = (term1016 _144530 _144607 _144645 P pat e f q g a).
Proof. exact (MK_COMB (@lem8193982 _144530 _144607 _144645 P pat e f a) (@lem8193979 _144530 _144607 _144645 P pat e f q g a)). Qed.
Lemma lem8193986 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term332 _144529 _144530 _144607 P lt2 s a f g) = (term332 _144529 _144530 _144607 P lt2 s a f g).
Proof. exact (eq_refl (term332 _144529 _144530 _144607 P lt2 s a f g)). Qed.
Lemma lem8193987 {_144529 _144530 _144607 _144645 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term1017 _144529 _144530 _144607 _144645 P lt2 s pat e f q g a) = (term1018 _144529 _144530 _144607 _144645 P lt2 s pat e f q g a).
Proof. exact (MK_COMB (@lem8193986 _144529 _144530 _144607 P lt2 s a f g) (@lem8193983 _144530 _144607 _144645 P pat e f q g a)). Qed.
Lemma lem8193990 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term335 _144530 _144607 P p g a) = (term335 _144530 _144607 P p g a).
Proof. exact (eq_refl (term335 _144530 _144607 P p g a)). Qed.
Lemma lem8193991 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term1019 _144529 _144530 _144607 _144645 P p lt2 s pat e f q g a) = (term1020 _144529 _144530 _144607 _144645 P p lt2 s pat e f q g a).
Proof. exact (MK_COMB (@lem8193990 _144530 _144607 P p g a) (@lem8193987 _144529 _144530 _144607 _144645 P lt2 s pat e f q g a)). Qed.
Lemma lem8193994 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) : (term335 _144530 _144607 P p f a) = (term335 _144530 _144607 P p f a).
Proof. exact (eq_refl (term335 _144530 _144607 P p f a)). Qed.
Lemma lem8193995 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term1021 _144529 _144530 _144607 _144645 P p lt2 s pat e f q g a) = (term1022 _144529 _144530 _144607 _144645 P p lt2 s pat e f q g a).
Proof. exact (MK_COMB (@lem8193994 _144530 _144607 P p f a) (@lem8193991 _144529 _144530 _144607 _144645 P p lt2 s pat e f q g a)). Qed.
Lemma lem8193998 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (y : type564 _144530 _144607 _144654 P) : (term340 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y) = (term340 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y).
Proof. exact (eq_refl (term340 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y)). Qed.
Lemma lem8193999 {_144529 _144530 _144607 _144645 _144654 P : Type'} (y : type564 _144530 _144607 _144654 P) (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term1023 _144529 _144530 _144607 _144645 _144654 P y p lt2 s pat e f q g a) = (term1024 _144529 _144530 _144607 _144645 _144654 P y p lt2 s pat e f q g a).
Proof. exact (MK_COMB (@lem8193998 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y) (@lem8193995 _144529 _144530 _144607 _144645 P p lt2 s pat e f q g a)). Qed.
Lemma lem8194002 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (q : type560 _144530 _144607 P) : (term343 _144529 _144530 _144607 _144645 P p pat e lt2 s q) = (term343 _144529 _144530 _144607 _144645 P p pat e lt2 s q).
Proof. exact (eq_refl (term343 _144529 _144530 _144607 _144645 P p pat e lt2 s q)). Qed.
Lemma lem8194003 {_144529 _144530 _144607 _144645 _144654 P : Type'} (y : type564 _144530 _144607 _144654 P) (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term1025 _144529 _144530 _144607 _144645 _144654 P y p lt2 s pat e f q g a) = (term1026 _144529 _144530 _144607 _144645 _144654 P y p lt2 s pat e f q g a).
Proof. exact (MK_COMB (@lem8194002 _144529 _144530 _144607 _144645 P p pat e lt2 s q) (@lem8193999 _144529 _144530 _144607 _144645 _144654 P y p lt2 s pat e f q g a)). Qed.
Lemma lem8194006 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (t : type564 _144530 _144607 _144654 P) : (term340 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) = (term340 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t).
Proof. exact (eq_refl (term340 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t)). Qed.
Lemma lem8194007 {_144529 _144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term1027 _144529 _144530 _144607 _144645 _144654 P t y p lt2 s pat e f q g a) = (term1028 _144529 _144530 _144607 _144645 _144654 P t y p lt2 s pat e f q g a).
Proof. exact (MK_COMB (@lem8194006 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) (@lem8194003 _144529 _144530 _144607 _144645 _144654 P y p lt2 s pat e f q g a)). Qed.
Lemma lem8194010 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (e : type564 _144530 _144607 _144645 P) : (term348 _144529 _144530 _144607 _144645 P p lt2 s e) = (term348 _144529 _144530 _144607 _144645 P p lt2 s e).
Proof. exact (eq_refl (term348 _144529 _144530 _144607 _144645 P p lt2 s e)). Qed.
Lemma lem8194011 {_144529 _144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term1029 _144529 _144530 _144607 _144645 _144654 P t y p lt2 s pat e f q g a) = (term1030 _144529 _144530 _144607 _144645 _144654 P t y p lt2 s pat e f q g a).
Proof. exact (MK_COMB (@lem8194010 _144529 _144530 _144607 _144645 P p lt2 s e) (@lem8194007 _144529 _144530 _144607 _144645 _144654 P t y p lt2 s pat e f q g a)). Qed.
Lemma lem8194014 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) : (term348 _144529 _144530 _144607 _144645 P p lt2 s pat) = (term348 _144529 _144530 _144607 _144645 P p lt2 s pat).
Proof. exact (eq_refl (term348 _144529 _144530 _144607 _144645 P p lt2 s pat)). Qed.
Lemma lem8194015 {_144529 _144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term1007 _144529 _144530 _144607 _144645 _144654 P t y p lt2 s pat e f q g a) = (term1031 _144529 _144530 _144607 _144645 _144654 P t y p lt2 s pat e f q g a).
Proof. exact (MK_COMB (@lem8194014 _144529 _144530 _144607 _144645 P p lt2 s pat) (@lem8194011 _144529 _144530 _144607 _144645 _144654 P t y p lt2 s pat e f q g a)). Qed.
Lemma lem8194018 {_144529 _144530 _144607 _144645 _144654 P : Type'} (y : type564 _144530 _144607 _144654 P) (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term1032 _144529 _144530 _144607 _144645 _144654 P y p lt2 s pat e f q g a) = (term1033 _144529 _144530 _144607 _144645 _144654 P y p lt2 s pat e f q g a).
Proof. exact (fun_ext (fun t : type564 _144530 _144607 _144654 P => @lem8194015 _144529 _144530 _144607 _144645 _144654 P t y p lt2 s pat e f q g a)). Qed.
Lemma lem8194019 {_144530 _144607 _144654 P : Type'} : (@all ((_144530 -> _144607) -> P -> _144654)) = (@all ((_144530 -> _144607) -> P -> _144654)).
Proof. exact (eq_refl (@all ((_144530 -> _144607) -> P -> _144654))). Qed.
Lemma lem8194020 {_144529 _144530 _144607 _144645 _144654 P : Type'} (y : type564 _144530 _144607 _144654 P) (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term1034 _144529 _144530 _144607 _144645 _144654 P y p lt2 s pat e f q g a) = (term1035 _144529 _144530 _144607 _144645 _144654 P y p lt2 s pat e f q g a).
Proof. exact (MK_COMB (@lem8194019 _144530 _144607 _144654 P) (@lem8194018 _144529 _144530 _144607 _144645 _144654 P y p lt2 s pat e f q g a)). Qed.
Lemma lem8194025 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term1036 _144529 _144530 _144607 _144645 _144654 P p lt2 s pat e f q g a) = (term1037 _144529 _144530 _144607 _144645 _144654 P p lt2 s pat e f q g a).
Proof. exact (fun_ext (fun y : type564 _144530 _144607 _144654 P => @lem8194020 _144529 _144530 _144607 _144645 _144654 P y p lt2 s pat e f q g a)). Qed.
Lemma lem8194026 {_144530 _144607 _144654 P : Type'} : (@all ((_144530 -> _144607) -> P -> _144654)) = (@all ((_144530 -> _144607) -> P -> _144654)).
Proof. exact (eq_refl (@all ((_144530 -> _144607) -> P -> _144654))). Qed.
Lemma lem8194027 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term1038 _144529 _144530 _144607 _144645 _144654 P p lt2 s pat e f q g a) = (term1039 _144529 _144530 _144607 _144645 _144654 P p lt2 s pat e f q g a).
Proof. exact (MK_COMB (@lem8194026 _144530 _144607 _144654 P) (@lem8194025 _144529 _144530 _144607 _144645 _144654 P p lt2 s pat e f q g a)). Qed.
Lemma lem8194032 {_144529 _144530 _144607 _144645 _144654 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term1040 _144529 _144530 _144607 _144645 _144654 P lt2 s pat e f q g a) = (term1041 _144529 _144530 _144607 _144645 _144654 P lt2 s pat e f q g a).
Proof. exact (fun_ext (fun p : type560 _144530 _144607 P => @lem8194027 _144529 _144530 _144607 _144645 _144654 P p lt2 s pat e f q g a)). Qed.
Lemma lem8194033 {_144530 _144607 P : Type'} : (@all ((_144530 -> _144607) -> P -> Prop)) = (@all ((_144530 -> _144607) -> P -> Prop)).
Proof. exact (eq_refl (@all ((_144530 -> _144607) -> P -> Prop))). Qed.
Lemma lem8194034 {_144529 _144530 _144607 _144645 _144654 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term1042 _144529 _144530 _144607 _144645 _144654 P lt2 s pat e f q g a) = (term1043 _144529 _144530 _144607 _144645 _144654 P lt2 s pat e f q g a).
Proof. exact (MK_COMB (@lem8194033 _144530 _144607 P) (@lem8194032 _144529 _144530 _144607 _144645 _144654 P lt2 s pat e f q g a)). Qed.
Lemma lem8194039 {_144529 _144530 _144607 _144645 _144654 P : Type'} (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term1044 _144529 _144530 _144607 _144645 _144654 P s pat e f q g a) = (term1045 _144529 _144530 _144607 _144645 _144654 P s pat e f q g a).
Proof. exact (fun_ext (fun lt2 : type1470 _144529 _144530 => @lem8194034 _144529 _144530 _144607 _144645 _144654 P lt2 s pat e f q g a)). Qed.
Lemma lem8194040 {_144529 _144530 : Type'} : (@all (_144530 -> _144529 -> Prop)) = (@all (_144530 -> _144529 -> Prop)).
Proof. exact (eq_refl (@all (_144530 -> _144529 -> Prop))). Qed.
Lemma lem8194041 {_144529 _144530 _144607 _144645 _144654 P : Type'} (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term1046 _144529 _144530 _144607 _144645 _144654 P s pat e f q g a) = (term1047 _144529 _144530 _144607 _144645 _144654 P s pat e f q g a).
Proof. exact (MK_COMB (@lem8194040 _144529 _144530) (@lem8194039 _144529 _144530 _144607 _144645 _144654 P s pat e f q g a)). Qed.
Lemma lem8194046 {_144529 _144530 _144607 _144645 _144654 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term1048 _144529 _144530 _144607 _144645 _144654 P pat e f q g a) = (term1049 _144529 _144530 _144607 _144645 _144654 P pat e f q g a).
Proof. exact (fun_ext (fun s : P -> _144529 => @lem8194041 _144529 _144530 _144607 _144645 _144654 P s pat e f q g a)). Qed.
Lemma lem8194047 {_144529 P : Type'} : (@all (P -> _144529)) = (@all (P -> _144529)).
Proof. exact (eq_refl (@all (P -> _144529))). Qed.
Lemma lem8194048 {_144529 _144530 _144607 _144645 _144654 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term1050 _144529 _144530 _144607 _144645 _144654 P pat e f q g a) = (term1051 _144529 _144530 _144607 _144645 _144654 P pat e f q g a).
Proof. exact (MK_COMB (@lem8194047 _144529 P) (@lem8194046 _144529 _144530 _144607 _144645 _144654 P pat e f q g a)). Qed.
Lemma lem8194053 {_144529 _144530 _144607 _144645 _144654 P : Type'} (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term1052 _144529 _144530 _144607 _144645 _144654 P e f q g a) = (term1053 _144529 _144530 _144607 _144645 _144654 P e f q g a).
Proof. exact (fun_ext (fun pat : type564 _144530 _144607 _144645 P => @lem8194048 _144529 _144530 _144607 _144645 _144654 P pat e f q g a)). Qed.
Lemma lem8194054 {_144530 _144607 _144645 P : Type'} : (@all ((_144530 -> _144607) -> P -> _144645)) = (@all ((_144530 -> _144607) -> P -> _144645)).
Proof. exact (eq_refl (@all ((_144530 -> _144607) -> P -> _144645))). Qed.
Lemma lem8194055 {_144529 _144530 _144607 _144645 _144654 P : Type'} (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term1054 _144529 _144530 _144607 _144645 _144654 P e f q g a) = (term1055 _144529 _144530 _144607 _144645 _144654 P e f q g a).
Proof. exact (MK_COMB (@lem8194054 _144530 _144607 _144645 P) (@lem8194053 _144529 _144530 _144607 _144645 _144654 P e f q g a)). Qed.
Lemma lem8194060 {_144529 _144530 _144607 _144645 _144654 P : Type'} (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term1056 _144529 _144530 _144607 _144645 _144654 P f q g a) = (term1057 _144529 _144530 _144607 _144645 _144654 P f q g a).
Proof. exact (fun_ext (fun e : type564 _144530 _144607 _144645 P => @lem8194055 _144529 _144530 _144607 _144645 _144654 P e f q g a)). Qed.
Lemma lem8194061 {_144530 _144607 _144645 P : Type'} : (@all ((_144530 -> _144607) -> P -> _144645)) = (@all ((_144530 -> _144607) -> P -> _144645)).
Proof. exact (eq_refl (@all ((_144530 -> _144607) -> P -> _144645))). Qed.
Lemma lem8194062 {_144529 _144530 _144607 _144645 _144654 P : Type'} (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term1058 _144529 _144530 _144607 _144645 _144654 P f q g a) = (term1059 _144529 _144530 _144607 _144645 _144654 P f q g a).
Proof. exact (MK_COMB (@lem8194061 _144530 _144607 _144645 P) (@lem8194060 _144529 _144530 _144607 _144645 _144654 P f q g a)). Qed.
Lemma lem8194067 {_144529 _144530 _144607 _144645 _144654 P : Type'} (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term1060 _144529 _144530 _144607 _144645 _144654 P q g a) = (term1061 _144529 _144530 _144607 _144645 _144654 P q g a).
Proof. exact (fun_ext (fun f : _144530 -> _144607 => @lem8194062 _144529 _144530 _144607 _144645 _144654 P f q g a)). Qed.
Lemma lem8194068 {_144530 _144607 : Type'} : (@all (_144530 -> _144607)) = (@all (_144530 -> _144607)).
Proof. exact (eq_refl (@all (_144530 -> _144607))). Qed.
Lemma lem8194069 {_144529 _144530 _144607 _144645 _144654 P : Type'} (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term1062 _144529 _144530 _144607 _144645 _144654 P q g a) = (term1063 _144529 _144530 _144607 _144645 _144654 P q g a).
Proof. exact (MK_COMB (@lem8194068 _144530 _144607) (@lem8194067 _144529 _144530 _144607 _144645 _144654 P q g a)). Qed.
Lemma lem8194074 {_144529 _144530 _144607 _144645 _144654 P : Type'} (g : _144530 -> _144607) (a : P) : (term1064 _144529 _144530 _144607 _144645 _144654 P g a) = (term1065 _144529 _144530 _144607 _144645 _144654 P g a).
Proof. exact (fun_ext (fun q : type560 _144530 _144607 P => @lem8194069 _144529 _144530 _144607 _144645 _144654 P q g a)). Qed.
Lemma lem8194075 {_144530 _144607 P : Type'} : (@all ((_144530 -> _144607) -> P -> Prop)) = (@all ((_144530 -> _144607) -> P -> Prop)).
Proof. exact (eq_refl (@all ((_144530 -> _144607) -> P -> Prop))). Qed.
Lemma lem8194076 {_144529 _144530 _144607 _144645 _144654 P : Type'} (g : _144530 -> _144607) (a : P) : (term1066 _144529 _144530 _144607 _144645 _144654 P g a) = (term1067 _144529 _144530 _144607 _144645 _144654 P g a).
Proof. exact (MK_COMB (@lem8194075 _144530 _144607 P) (@lem8194074 _144529 _144530 _144607 _144645 _144654 P g a)). Qed.
Lemma lem8194081 {_144529 _144530 _144607 _144645 _144654 P : Type'} (a : P) : (term1068 _144529 _144530 _144607 _144645 _144654 P a) = (term1069 _144529 _144530 _144607 _144645 _144654 P a).
Proof. exact (fun_ext (fun g : _144530 -> _144607 => @lem8194076 _144529 _144530 _144607 _144645 _144654 P g a)). Qed.
Lemma lem8194082 {_144530 _144607 : Type'} : (@all (_144530 -> _144607)) = (@all (_144530 -> _144607)).
Proof. exact (eq_refl (@all (_144530 -> _144607))). Qed.
Lemma lem8194083 {_144529 _144530 _144607 _144645 _144654 P : Type'} (a : P) : (term1070 _144529 _144530 _144607 _144645 _144654 P a) = (term1071 _144529 _144530 _144607 _144645 _144654 P a).
Proof. exact (MK_COMB (@lem8194082 _144530 _144607) (@lem8194081 _144529 _144530 _144607 _144645 _144654 P a)). Qed.
Lemma lem8194088 {_144529 _144530 _144607 _144645 _144654 P : Type'} : (term1072 _144529 _144530 _144607 _144645 _144654 P) = (term1073 _144529 _144530 _144607 _144645 _144654 P).
Proof. exact (fun_ext (fun a : P => @lem8194083 _144529 _144530 _144607 _144645 _144654 P a)). Qed.
Lemma lem8194089 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8194098 {_144529 _144530 _144607 _144645 _144654 P : Type'} : (term1074 _144529 _144530 _144607 _144645 _144654 P) = (term1075 _144529 _144530 _144607 _144645 _144654 P).
Proof. exact (MK_COMB (@lem8194089 P) (@lem8194088 _144529 _144530 _144607 _144645 _144654 P)). Qed.
Lemma lem8194111 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term1016 _144530 _144607 _144645 P pat e f q g a) = (term1016 _144530 _144607 _144645 P pat e f q g a).
Proof. exact (eq_refl (term1016 _144530 _144607 _144645 P pat e f q g a)). Qed.
Lemma lem8194116 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (z : _144530) : (term396 _144529 _144530 _144607 P lt2 s a f g z) = (term396 _144529 _144530 _144607 P lt2 s a f g z).
Proof. exact (eq_refl (term396 _144529 _144530 _144607 P lt2 s a f g z)). Qed.
Lemma lem8194117 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term397 _144529 _144530 _144607 P lt2 s a f g) = (term397 _144529 _144530 _144607 P lt2 s a f g).
Proof. exact (fun_ext (fun z : _144530 => @lem8194116 _144529 _144530 _144607 P lt2 s a f g z)). Qed.
Lemma lem8194118 {_144530 : Type'} : (@all _144530) = (@all _144530).
Proof. exact (eq_refl (@all _144530)). Qed.
Lemma lem8194119 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term165 _144529 _144530 _144607 P lt2 s a f g) = (term165 _144529 _144530 _144607 P lt2 s a f g).
Proof. exact (MK_COMB (@lem8194118 _144530) (@lem8194117 _144529 _144530 _144607 P lt2 s a f g)). Qed.
Lemma lem8194120 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8194121 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term332 _144529 _144530 _144607 P lt2 s a f g) = (term332 _144529 _144530 _144607 P lt2 s a f g).
Proof. exact (MK_COMB (@lem8194120) (@lem8194119 _144529 _144530 _144607 P lt2 s a f g)). Qed.
Lemma lem8194122 {_144529 _144530 _144607 _144645 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term1018 _144529 _144530 _144607 _144645 P lt2 s pat e f q g a) = (term1018 _144529 _144530 _144607 _144645 P lt2 s pat e f q g a).
Proof. exact (MK_COMB (@lem8194121 _144529 _144530 _144607 P lt2 s a f g) (@lem8194111 _144530 _144607 _144645 P pat e f q g a)). Qed.
Lemma lem8194125 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term335 _144530 _144607 P p g a) = (term335 _144530 _144607 P p g a).
Proof. exact (eq_refl (term335 _144530 _144607 P p g a)). Qed.
Lemma lem8194126 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term1020 _144529 _144530 _144607 _144645 P p lt2 s pat e f q g a) = (term1020 _144529 _144530 _144607 _144645 P p lt2 s pat e f q g a).
Proof. exact (MK_COMB (@lem8194125 _144530 _144607 P p g a) (@lem8194122 _144529 _144530 _144607 _144645 P lt2 s pat e f q g a)). Qed.
Lemma lem8194129 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) : (term335 _144530 _144607 P p f a) = (term335 _144530 _144607 P p f a).
Proof. exact (eq_refl (term335 _144530 _144607 P p f a)). Qed.
Lemma lem8194130 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term1022 _144529 _144530 _144607 _144645 P p lt2 s pat e f q g a) = (term1022 _144529 _144530 _144607 _144645 P p lt2 s pat e f q g a).
Proof. exact (MK_COMB (@lem8194129 _144530 _144607 P p f a) (@lem8194126 _144529 _144530 _144607 _144645 P p lt2 s pat e f q g a)). Qed.
Lemma lem8194131 {_144530 _144607 _144654 P : Type'} (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : ((y f a) = (y g a)) = ((y f a) = (y g a)).
Proof. exact (eq_refl ((y f a) = (y g a))). Qed.
Lemma lem8194136 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (z : _144530) : (term396 _144529 _144530 _144607 P lt2 s a f g z) = (term396 _144529 _144530 _144607 P lt2 s a f g z).
Proof. exact (eq_refl (term396 _144529 _144530 _144607 P lt2 s a f g z)). Qed.
Lemma lem8194137 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term397 _144529 _144530 _144607 P lt2 s a f g) = (term397 _144529 _144530 _144607 P lt2 s a f g).
Proof. exact (fun_ext (fun z : _144530 => @lem8194136 _144529 _144530 _144607 P lt2 s a f g z)). Qed.
Lemma lem8194138 {_144530 : Type'} : (@all _144530) = (@all _144530).
Proof. exact (eq_refl (@all _144530)). Qed.
Lemma lem8194139 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term165 _144529 _144530 _144607 P lt2 s a f g) = (term165 _144529 _144530 _144607 P lt2 s a f g).
Proof. exact (MK_COMB (@lem8194138 _144530) (@lem8194137 _144529 _144530 _144607 P lt2 s a f g)). Qed.
Lemma lem8194150 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term164 _144530 _144607 _144645 P p pat e q g a) = (term164 _144530 _144607 _144645 P p pat e q g a).
Proof. exact (eq_refl (term164 _144530 _144607 _144645 P p pat e q g a)). Qed.
Lemma lem8194151 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term167 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) = (term167 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g).
Proof. exact (MK_COMB (@lem8194150 _144530 _144607 _144645 P p pat e q g a) (@lem8194139 _144529 _144530 _144607 P lt2 s a f g)). Qed.
Lemma lem8194162 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) : (term164 _144530 _144607 _144645 P p pat e q f a) = (term164 _144530 _144607 _144645 P p pat e q f a).
Proof. exact (eq_refl (term164 _144530 _144607 _144645 P p pat e q f a)). Qed.
Lemma lem8194163 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term169 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) = (term169 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g).
Proof. exact (MK_COMB (@lem8194162 _144530 _144607 _144645 P p pat e q f a) (@lem8194151 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g)). Qed.
Lemma lem8194164 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8194165 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term171 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) = (term171 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g).
Proof. exact (MK_COMB (@lem8194164) (@lem8194163 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g)). Qed.
Lemma lem8194166 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (term173 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g a) = (term173 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g a).
Proof. exact (MK_COMB (@lem8194165 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) (@lem8194131 _144530 _144607 _144654 P f y g a)). Qed.
Lemma lem8194167 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) : (term175 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g) = (term175 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g).
Proof. exact (fun_ext (fun a : P => @lem8194166 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g a)). Qed.
Lemma lem8194168 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8194169 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) : (term177 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g) = (term177 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g).
Proof. exact (MK_COMB (@lem8194168 P) (@lem8194167 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g)). Qed.
Lemma lem8194170 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) : (term179 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y) = (term179 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y).
Proof. exact (fun_ext (fun g : _144530 -> _144607 => @lem8194169 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g)). Qed.
Lemma lem8194171 {_144530 _144607 : Type'} : (@all (_144530 -> _144607)) = (@all (_144530 -> _144607)).
Proof. exact (eq_refl (@all (_144530 -> _144607))). Qed.
Lemma lem8194172 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) : (term181 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y) = (term181 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y).
Proof. exact (MK_COMB (@lem8194171 _144530 _144607) (@lem8194170 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y)). Qed.
Lemma lem8194173 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (y : type564 _144530 _144607 _144654 P) : (term183 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y) = (term183 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y).
Proof. exact (fun_ext (fun f : _144530 -> _144607 => @lem8194172 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y)). Qed.
Lemma lem8194174 {_144530 _144607 : Type'} : (@all (_144530 -> _144607)) = (@all (_144530 -> _144607)).
Proof. exact (eq_refl (@all (_144530 -> _144607))). Qed.
Lemma lem8194175 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (y : type564 _144530 _144607 _144654 P) : (term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y) = (term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y).
Proof. exact (MK_COMB (@lem8194174 _144530 _144607) (@lem8194173 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y)). Qed.
Lemma lem8194176 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8194177 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (y : type564 _144530 _144607 _144654 P) : (term340 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y) = (term340 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y).
Proof. exact (MK_COMB (@lem8194176) (@lem8194175 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y)). Qed.
Lemma lem8194178 {_144529 _144530 _144607 _144645 _144654 P : Type'} (y : type564 _144530 _144607 _144654 P) (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term1024 _144529 _144530 _144607 _144645 _144654 P y p lt2 s pat e f q g a) = (term1024 _144529 _144530 _144607 _144645 _144654 P y p lt2 s pat e f q g a).
Proof. exact (MK_COMB (@lem8194177 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y) (@lem8194130 _144529 _144530 _144607 _144645 P p lt2 s pat e f q g a)). Qed.
Lemma lem8194183 {_144530 _144607 P : Type'} (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : ((q f a) = (q g a)) = ((q f a) = (q g a)).
Proof. exact (eq_refl ((q f a) = (q g a))). Qed.
Lemma lem8194188 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (z : _144530) : (term396 _144529 _144530 _144607 P lt2 s a f g z) = (term396 _144529 _144530 _144607 P lt2 s a f g z).
Proof. exact (eq_refl (term396 _144529 _144530 _144607 P lt2 s a f g z)). Qed.
Lemma lem8194189 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term397 _144529 _144530 _144607 P lt2 s a f g) = (term397 _144529 _144530 _144607 P lt2 s a f g).
Proof. exact (fun_ext (fun z : _144530 => @lem8194188 _144529 _144530 _144607 P lt2 s a f g z)). Qed.
Lemma lem8194190 {_144530 : Type'} : (@all _144530) = (@all _144530).
Proof. exact (eq_refl (@all _144530)). Qed.
Lemma lem8194191 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term165 _144529 _144530 _144607 P lt2 s a f g) = (term165 _144529 _144530 _144607 P lt2 s a f g).
Proof. exact (MK_COMB (@lem8194190 _144530) (@lem8194189 _144529 _144530 _144607 P lt2 s a f g)). Qed.
Lemma lem8194198 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term205 _144530 _144607 _144645 P p pat e g a) = (term205 _144530 _144607 _144645 P p pat e g a).
Proof. exact (eq_refl (term205 _144530 _144607 _144645 P p pat e g a)). Qed.
Lemma lem8194199 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term207 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g) = (term207 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g).
Proof. exact (MK_COMB (@lem8194198 _144530 _144607 _144645 P p pat e g a) (@lem8194191 _144529 _144530 _144607 P lt2 s a f g)). Qed.
Lemma lem8194206 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (a : P) : (term205 _144530 _144607 _144645 P p pat e f a) = (term205 _144530 _144607 _144645 P p pat e f a).
Proof. exact (eq_refl (term205 _144530 _144607 _144645 P p pat e f a)). Qed.
Lemma lem8194207 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term209 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g) = (term209 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g).
Proof. exact (MK_COMB (@lem8194206 _144530 _144607 _144645 P p pat e f a) (@lem8194199 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g)). Qed.
Lemma lem8194208 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8194209 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term211 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g) = (term211 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g).
Proof. exact (MK_COMB (@lem8194208) (@lem8194207 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g)). Qed.
Lemma lem8194210 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term213 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g a) = (term213 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g a).
Proof. exact (MK_COMB (@lem8194209 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g) (@lem8194183 _144530 _144607 P f q g a)). Qed.
Lemma lem8194211 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) : (term215 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g) = (term215 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g).
Proof. exact (fun_ext (fun a : P => @lem8194210 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g a)). Qed.
Lemma lem8194212 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8194213 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) : (term217 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g) = (term217 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g).
Proof. exact (MK_COMB (@lem8194212 P) (@lem8194211 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g)). Qed.
Lemma lem8194214 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) : (term219 _144529 _144530 _144607 _144645 P p pat e lt2 s f q) = (term219 _144529 _144530 _144607 _144645 P p pat e lt2 s f q).
Proof. exact (fun_ext (fun g : _144530 -> _144607 => @lem8194213 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g)). Qed.
Lemma lem8194215 {_144530 _144607 : Type'} : (@all (_144530 -> _144607)) = (@all (_144530 -> _144607)).
Proof. exact (eq_refl (@all (_144530 -> _144607))). Qed.
Lemma lem8194216 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) : (term221 _144529 _144530 _144607 _144645 P p pat e lt2 s f q) = (term221 _144529 _144530 _144607 _144645 P p pat e lt2 s f q).
Proof. exact (MK_COMB (@lem8194215 _144530 _144607) (@lem8194214 _144529 _144530 _144607 _144645 P p pat e lt2 s f q)). Qed.
Lemma lem8194217 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (q : type560 _144530 _144607 P) : (term223 _144529 _144530 _144607 _144645 P p pat e lt2 s q) = (term223 _144529 _144530 _144607 _144645 P p pat e lt2 s q).
Proof. exact (fun_ext (fun f : _144530 -> _144607 => @lem8194216 _144529 _144530 _144607 _144645 P p pat e lt2 s f q)). Qed.
Lemma lem8194218 {_144530 _144607 : Type'} : (@all (_144530 -> _144607)) = (@all (_144530 -> _144607)).
Proof. exact (eq_refl (@all (_144530 -> _144607))). Qed.
Lemma lem8194219 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (q : type560 _144530 _144607 P) : (term224 _144529 _144530 _144607 _144645 P p pat e lt2 s q) = (term224 _144529 _144530 _144607 _144645 P p pat e lt2 s q).
Proof. exact (MK_COMB (@lem8194218 _144530 _144607) (@lem8194217 _144529 _144530 _144607 _144645 P p pat e lt2 s q)). Qed.
Lemma lem8194220 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8194221 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (q : type560 _144530 _144607 P) : (term343 _144529 _144530 _144607 _144645 P p pat e lt2 s q) = (term343 _144529 _144530 _144607 _144645 P p pat e lt2 s q).
Proof. exact (MK_COMB (@lem8194220) (@lem8194219 _144529 _144530 _144607 _144645 P p pat e lt2 s q)). Qed.
Lemma lem8194222 {_144529 _144530 _144607 _144645 _144654 P : Type'} (y : type564 _144530 _144607 _144654 P) (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term1026 _144529 _144530 _144607 _144645 _144654 P y p lt2 s pat e f q g a) = (term1026 _144529 _144530 _144607 _144645 _144654 P y p lt2 s pat e f q g a).
Proof. exact (MK_COMB (@lem8194221 _144529 _144530 _144607 _144645 P p pat e lt2 s q) (@lem8194178 _144529 _144530 _144607 _144645 _144654 P y p lt2 s pat e f q g a)). Qed.
Lemma lem8194223 {_144530 _144607 _144654 P : Type'} (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : ((t f a) = (t g a)) = ((t f a) = (t g a)).
Proof. exact (eq_refl ((t f a) = (t g a))). Qed.
Lemma lem8194228 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (z : _144530) : (term396 _144529 _144530 _144607 P lt2 s a f g z) = (term396 _144529 _144530 _144607 P lt2 s a f g z).
Proof. exact (eq_refl (term396 _144529 _144530 _144607 P lt2 s a f g z)). Qed.
Lemma lem8194229 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term397 _144529 _144530 _144607 P lt2 s a f g) = (term397 _144529 _144530 _144607 P lt2 s a f g).
Proof. exact (fun_ext (fun z : _144530 => @lem8194228 _144529 _144530 _144607 P lt2 s a f g z)). Qed.
Lemma lem8194230 {_144530 : Type'} : (@all _144530) = (@all _144530).
Proof. exact (eq_refl (@all _144530)). Qed.
Lemma lem8194231 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term165 _144529 _144530 _144607 P lt2 s a f g) = (term165 _144529 _144530 _144607 P lt2 s a f g).
Proof. exact (MK_COMB (@lem8194230 _144530) (@lem8194229 _144529 _144530 _144607 P lt2 s a f g)). Qed.
Lemma lem8194242 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term164 _144530 _144607 _144645 P p pat e q g a) = (term164 _144530 _144607 _144645 P p pat e q g a).
Proof. exact (eq_refl (term164 _144530 _144607 _144645 P p pat e q g a)). Qed.
Lemma lem8194243 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term167 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) = (term167 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g).
Proof. exact (MK_COMB (@lem8194242 _144530 _144607 _144645 P p pat e q g a) (@lem8194231 _144529 _144530 _144607 P lt2 s a f g)). Qed.
Lemma lem8194254 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) : (term164 _144530 _144607 _144645 P p pat e q f a) = (term164 _144530 _144607 _144645 P p pat e q f a).
Proof. exact (eq_refl (term164 _144530 _144607 _144645 P p pat e q f a)). Qed.
Lemma lem8194255 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term169 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) = (term169 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g).
Proof. exact (MK_COMB (@lem8194254 _144530 _144607 _144645 P p pat e q f a) (@lem8194243 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g)). Qed.
Lemma lem8194256 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8194257 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term171 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) = (term171 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g).
Proof. exact (MK_COMB (@lem8194256) (@lem8194255 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g)). Qed.
Lemma lem8194258 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (term173 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g a) = (term173 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g a).
Proof. exact (MK_COMB (@lem8194257 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) (@lem8194223 _144530 _144607 _144654 P f t g a)). Qed.
Lemma lem8194259 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) : (term175 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g) = (term175 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g).
Proof. exact (fun_ext (fun a : P => @lem8194258 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g a)). Qed.
Lemma lem8194260 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8194261 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) : (term177 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g) = (term177 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g).
Proof. exact (MK_COMB (@lem8194260 P) (@lem8194259 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g)). Qed.
Lemma lem8194262 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) : (term179 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t) = (term179 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t).
Proof. exact (fun_ext (fun g : _144530 -> _144607 => @lem8194261 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g)). Qed.
Lemma lem8194263 {_144530 _144607 : Type'} : (@all (_144530 -> _144607)) = (@all (_144530 -> _144607)).
Proof. exact (eq_refl (@all (_144530 -> _144607))). Qed.
Lemma lem8194264 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) : (term181 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t) = (term181 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t).
Proof. exact (MK_COMB (@lem8194263 _144530 _144607) (@lem8194262 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t)). Qed.
Lemma lem8194265 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (t : type564 _144530 _144607 _144654 P) : (term183 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) = (term183 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t).
Proof. exact (fun_ext (fun f : _144530 -> _144607 => @lem8194264 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t)). Qed.
Lemma lem8194266 {_144530 _144607 : Type'} : (@all (_144530 -> _144607)) = (@all (_144530 -> _144607)).
Proof. exact (eq_refl (@all (_144530 -> _144607))). Qed.
Lemma lem8194267 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (t : type564 _144530 _144607 _144654 P) : (term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) = (term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t).
Proof. exact (MK_COMB (@lem8194266 _144530 _144607) (@lem8194265 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t)). Qed.
Lemma lem8194268 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8194269 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (t : type564 _144530 _144607 _144654 P) : (term340 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) = (term340 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t).
Proof. exact (MK_COMB (@lem8194268) (@lem8194267 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t)). Qed.
Lemma lem8194270 {_144529 _144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term1028 _144529 _144530 _144607 _144645 _144654 P t y p lt2 s pat e f q g a) = (term1028 _144529 _144530 _144607 _144645 _144654 P t y p lt2 s pat e f q g a).
Proof. exact (MK_COMB (@lem8194269 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) (@lem8194222 _144529 _144530 _144607 _144645 _144654 P y p lt2 s pat e f q g a)). Qed.
Lemma lem8194271 {_144530 _144607 _144645 P : Type'} (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : ((e f a) = (e g a)) = ((e f a) = (e g a)).
Proof. exact (eq_refl ((e f a) = (e g a))). Qed.
Lemma lem8194276 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (z : _144530) : (term396 _144529 _144530 _144607 P lt2 s a f g z) = (term396 _144529 _144530 _144607 P lt2 s a f g z).
Proof. exact (eq_refl (term396 _144529 _144530 _144607 P lt2 s a f g z)). Qed.
Lemma lem8194277 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term397 _144529 _144530 _144607 P lt2 s a f g) = (term397 _144529 _144530 _144607 P lt2 s a f g).
Proof. exact (fun_ext (fun z : _144530 => @lem8194276 _144529 _144530 _144607 P lt2 s a f g z)). Qed.
Lemma lem8194278 {_144530 : Type'} : (@all _144530) = (@all _144530).
Proof. exact (eq_refl (@all _144530)). Qed.
Lemma lem8194279 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term165 _144529 _144530 _144607 P lt2 s a f g) = (term165 _144529 _144530 _144607 P lt2 s a f g).
Proof. exact (MK_COMB (@lem8194278 _144530) (@lem8194277 _144529 _144530 _144607 P lt2 s a f g)). Qed.
Lemma lem8194282 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term305 _144530 _144607 P p g a) = (term305 _144530 _144607 P p g a).
Proof. exact (eq_refl (term305 _144530 _144607 P p g a)). Qed.
Lemma lem8194283 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term318 _144529 _144530 _144607 P p lt2 s a f g) = (term318 _144529 _144530 _144607 P p lt2 s a f g).
Proof. exact (MK_COMB (@lem8194282 _144530 _144607 P p g a) (@lem8194279 _144529 _144530 _144607 P lt2 s a f g)). Qed.
Lemma lem8194286 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) : (term305 _144530 _144607 P p f a) = (term305 _144530 _144607 P p f a).
Proof. exact (eq_refl (term305 _144530 _144607 P p f a)). Qed.
Lemma lem8194287 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term317 _144529 _144530 _144607 P p lt2 s a f g) = (term317 _144529 _144530 _144607 P p lt2 s a f g).
Proof. exact (MK_COMB (@lem8194286 _144530 _144607 P p f a) (@lem8194283 _144529 _144530 _144607 P p lt2 s a f g)). Qed.
Lemma lem8194288 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8194289 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term287 _144529 _144530 _144607 P p lt2 s a f g) = (term287 _144529 _144530 _144607 P p lt2 s a f g).
Proof. exact (MK_COMB (@lem8194288) (@lem8194287 _144529 _144530 _144607 P p lt2 s a f g)). Qed.
Lemma lem8194290 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term398 _144529 _144530 _144607 _144645 P p lt2 s f e g a) = (term398 _144529 _144530 _144607 _144645 P p lt2 s f e g a).
Proof. exact (MK_COMB (@lem8194289 _144529 _144530 _144607 P p lt2 s a f g) (@lem8194271 _144530 _144607 _144645 P f e g a)). Qed.
Lemma lem8194291 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) : (term399 _144529 _144530 _144607 _144645 P p lt2 s f e g) = (term399 _144529 _144530 _144607 _144645 P p lt2 s f e g).
Proof. exact (fun_ext (fun a : P => @lem8194290 _144529 _144530 _144607 _144645 P p lt2 s f e g a)). Qed.
Lemma lem8194292 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8194293 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) : (term400 _144529 _144530 _144607 _144645 P p lt2 s f e g) = (term400 _144529 _144530 _144607 _144645 P p lt2 s f e g).
Proof. exact (MK_COMB (@lem8194292 P) (@lem8194291 _144529 _144530 _144607 _144645 P p lt2 s f e g)). Qed.
Lemma lem8194294 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) : (term401 _144529 _144530 _144607 _144645 P p lt2 s f e) = (term401 _144529 _144530 _144607 _144645 P p lt2 s f e).
Proof. exact (fun_ext (fun g : _144530 -> _144607 => @lem8194293 _144529 _144530 _144607 _144645 P p lt2 s f e g)). Qed.
Lemma lem8194295 {_144530 _144607 : Type'} : (@all (_144530 -> _144607)) = (@all (_144530 -> _144607)).
Proof. exact (eq_refl (@all (_144530 -> _144607))). Qed.
Lemma lem8194296 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) : (term402 _144529 _144530 _144607 _144645 P p lt2 s f e) = (term402 _144529 _144530 _144607 _144645 P p lt2 s f e).
Proof. exact (MK_COMB (@lem8194295 _144530 _144607) (@lem8194294 _144529 _144530 _144607 _144645 P p lt2 s f e)). Qed.
Lemma lem8194297 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (e : type564 _144530 _144607 _144645 P) : (term403 _144529 _144530 _144607 _144645 P p lt2 s e) = (term403 _144529 _144530 _144607 _144645 P p lt2 s e).
Proof. exact (fun_ext (fun f : _144530 -> _144607 => @lem8194296 _144529 _144530 _144607 _144645 P p lt2 s f e)). Qed.
Lemma lem8194298 {_144530 _144607 : Type'} : (@all (_144530 -> _144607)) = (@all (_144530 -> _144607)).
Proof. exact (eq_refl (@all (_144530 -> _144607))). Qed.
Lemma lem8194299 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (e : type564 _144530 _144607 _144645 P) : (term141 _144529 _144530 _144607 _144645 P p lt2 s e) = (term141 _144529 _144530 _144607 _144645 P p lt2 s e).
Proof. exact (MK_COMB (@lem8194298 _144530 _144607) (@lem8194297 _144529 _144530 _144607 _144645 P p lt2 s e)). Qed.
Lemma lem8194300 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8194301 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (e : type564 _144530 _144607 _144645 P) : (term348 _144529 _144530 _144607 _144645 P p lt2 s e) = (term348 _144529 _144530 _144607 _144645 P p lt2 s e).
Proof. exact (MK_COMB (@lem8194300) (@lem8194299 _144529 _144530 _144607 _144645 P p lt2 s e)). Qed.
Lemma lem8194302 {_144529 _144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term1030 _144529 _144530 _144607 _144645 _144654 P t y p lt2 s pat e f q g a) = (term1030 _144529 _144530 _144607 _144645 _144654 P t y p lt2 s pat e f q g a).
Proof. exact (MK_COMB (@lem8194301 _144529 _144530 _144607 _144645 P p lt2 s e) (@lem8194270 _144529 _144530 _144607 _144645 _144654 P t y p lt2 s pat e f q g a)). Qed.
Lemma lem8194303 {_144530 _144607 _144645 P : Type'} (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : ((pat f a) = (pat g a)) = ((pat f a) = (pat g a)).
Proof. exact (eq_refl ((pat f a) = (pat g a))). Qed.
Lemma lem8194308 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (z : _144530) : (term396 _144529 _144530 _144607 P lt2 s a f g z) = (term396 _144529 _144530 _144607 P lt2 s a f g z).
Proof. exact (eq_refl (term396 _144529 _144530 _144607 P lt2 s a f g z)). Qed.
Lemma lem8194309 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term397 _144529 _144530 _144607 P lt2 s a f g) = (term397 _144529 _144530 _144607 P lt2 s a f g).
Proof. exact (fun_ext (fun z : _144530 => @lem8194308 _144529 _144530 _144607 P lt2 s a f g z)). Qed.
Lemma lem8194310 {_144530 : Type'} : (@all _144530) = (@all _144530).
Proof. exact (eq_refl (@all _144530)). Qed.
Lemma lem8194311 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term165 _144529 _144530 _144607 P lt2 s a f g) = (term165 _144529 _144530 _144607 P lt2 s a f g).
Proof. exact (MK_COMB (@lem8194310 _144530) (@lem8194309 _144529 _144530 _144607 P lt2 s a f g)). Qed.
Lemma lem8194314 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term305 _144530 _144607 P p g a) = (term305 _144530 _144607 P p g a).
Proof. exact (eq_refl (term305 _144530 _144607 P p g a)). Qed.
Lemma lem8194315 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term318 _144529 _144530 _144607 P p lt2 s a f g) = (term318 _144529 _144530 _144607 P p lt2 s a f g).
Proof. exact (MK_COMB (@lem8194314 _144530 _144607 P p g a) (@lem8194311 _144529 _144530 _144607 P lt2 s a f g)). Qed.
Lemma lem8194318 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) : (term305 _144530 _144607 P p f a) = (term305 _144530 _144607 P p f a).
Proof. exact (eq_refl (term305 _144530 _144607 P p f a)). Qed.
Lemma lem8194319 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term317 _144529 _144530 _144607 P p lt2 s a f g) = (term317 _144529 _144530 _144607 P p lt2 s a f g).
Proof. exact (MK_COMB (@lem8194318 _144530 _144607 P p f a) (@lem8194315 _144529 _144530 _144607 P p lt2 s a f g)). Qed.
Lemma lem8194320 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8194321 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term287 _144529 _144530 _144607 P p lt2 s a f g) = (term287 _144529 _144530 _144607 P p lt2 s a f g).
Proof. exact (MK_COMB (@lem8194320) (@lem8194319 _144529 _144530 _144607 P p lt2 s a f g)). Qed.
Lemma lem8194322 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term398 _144529 _144530 _144607 _144645 P p lt2 s f pat g a) = (term398 _144529 _144530 _144607 _144645 P p lt2 s f pat g a).
Proof. exact (MK_COMB (@lem8194321 _144529 _144530 _144607 P p lt2 s a f g) (@lem8194303 _144530 _144607 _144645 P f pat g a)). Qed.
Lemma lem8194323 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) : (term399 _144529 _144530 _144607 _144645 P p lt2 s f pat g) = (term399 _144529 _144530 _144607 _144645 P p lt2 s f pat g).
Proof. exact (fun_ext (fun a : P => @lem8194322 _144529 _144530 _144607 _144645 P p lt2 s f pat g a)). Qed.
Lemma lem8194324 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8194325 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) : (term400 _144529 _144530 _144607 _144645 P p lt2 s f pat g) = (term400 _144529 _144530 _144607 _144645 P p lt2 s f pat g).
Proof. exact (MK_COMB (@lem8194324 P) (@lem8194323 _144529 _144530 _144607 _144645 P p lt2 s f pat g)). Qed.
Lemma lem8194326 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) : (term401 _144529 _144530 _144607 _144645 P p lt2 s f pat) = (term401 _144529 _144530 _144607 _144645 P p lt2 s f pat).
Proof. exact (fun_ext (fun g : _144530 -> _144607 => @lem8194325 _144529 _144530 _144607 _144645 P p lt2 s f pat g)). Qed.
Lemma lem8194327 {_144530 _144607 : Type'} : (@all (_144530 -> _144607)) = (@all (_144530 -> _144607)).
Proof. exact (eq_refl (@all (_144530 -> _144607))). Qed.
Lemma lem8194328 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) : (term402 _144529 _144530 _144607 _144645 P p lt2 s f pat) = (term402 _144529 _144530 _144607 _144645 P p lt2 s f pat).
Proof. exact (MK_COMB (@lem8194327 _144530 _144607) (@lem8194326 _144529 _144530 _144607 _144645 P p lt2 s f pat)). Qed.
Lemma lem8194329 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) : (term403 _144529 _144530 _144607 _144645 P p lt2 s pat) = (term403 _144529 _144530 _144607 _144645 P p lt2 s pat).
Proof. exact (fun_ext (fun f : _144530 -> _144607 => @lem8194328 _144529 _144530 _144607 _144645 P p lt2 s f pat)). Qed.
Lemma lem8194330 {_144530 _144607 : Type'} : (@all (_144530 -> _144607)) = (@all (_144530 -> _144607)).
Proof. exact (eq_refl (@all (_144530 -> _144607))). Qed.
Lemma lem8194331 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) : (term141 _144529 _144530 _144607 _144645 P p lt2 s pat) = (term141 _144529 _144530 _144607 _144645 P p lt2 s pat).
Proof. exact (MK_COMB (@lem8194330 _144530 _144607) (@lem8194329 _144529 _144530 _144607 _144645 P p lt2 s pat)). Qed.
Lemma lem8194332 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8194333 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) : (term348 _144529 _144530 _144607 _144645 P p lt2 s pat) = (term348 _144529 _144530 _144607 _144645 P p lt2 s pat).
Proof. exact (MK_COMB (@lem8194332) (@lem8194331 _144529 _144530 _144607 _144645 P p lt2 s pat)). Qed.
Lemma lem8194334 {_144529 _144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term1031 _144529 _144530 _144607 _144645 _144654 P t y p lt2 s pat e f q g a) = (term1031 _144529 _144530 _144607 _144645 _144654 P t y p lt2 s pat e f q g a).
Proof. exact (MK_COMB (@lem8194333 _144529 _144530 _144607 _144645 P p lt2 s pat) (@lem8194302 _144529 _144530 _144607 _144645 _144654 P t y p lt2 s pat e f q g a)). Qed.
Lemma lem8194335 {_144529 _144530 _144607 _144645 _144654 P : Type'} (y : type564 _144530 _144607 _144654 P) (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term1033 _144529 _144530 _144607 _144645 _144654 P y p lt2 s pat e f q g a) = (term1033 _144529 _144530 _144607 _144645 _144654 P y p lt2 s pat e f q g a).
Proof. exact (fun_ext (fun t : type564 _144530 _144607 _144654 P => @lem8194334 _144529 _144530 _144607 _144645 _144654 P t y p lt2 s pat e f q g a)). Qed.
Lemma lem8194336 {_144530 _144607 _144654 P : Type'} : (@all ((_144530 -> _144607) -> P -> _144654)) = (@all ((_144530 -> _144607) -> P -> _144654)).
Proof. exact (eq_refl (@all ((_144530 -> _144607) -> P -> _144654))). Qed.
Lemma lem8194337 {_144529 _144530 _144607 _144645 _144654 P : Type'} (y : type564 _144530 _144607 _144654 P) (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term1035 _144529 _144530 _144607 _144645 _144654 P y p lt2 s pat e f q g a) = (term1035 _144529 _144530 _144607 _144645 _144654 P y p lt2 s pat e f q g a).
Proof. exact (MK_COMB (@lem8194336 _144530 _144607 _144654 P) (@lem8194335 _144529 _144530 _144607 _144645 _144654 P y p lt2 s pat e f q g a)). Qed.
Lemma lem8194338 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term1037 _144529 _144530 _144607 _144645 _144654 P p lt2 s pat e f q g a) = (term1037 _144529 _144530 _144607 _144645 _144654 P p lt2 s pat e f q g a).
Proof. exact (fun_ext (fun y : type564 _144530 _144607 _144654 P => @lem8194337 _144529 _144530 _144607 _144645 _144654 P y p lt2 s pat e f q g a)). Qed.
Lemma lem8194339 {_144530 _144607 _144654 P : Type'} : (@all ((_144530 -> _144607) -> P -> _144654)) = (@all ((_144530 -> _144607) -> P -> _144654)).
Proof. exact (eq_refl (@all ((_144530 -> _144607) -> P -> _144654))). Qed.
Lemma lem8194340 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term1039 _144529 _144530 _144607 _144645 _144654 P p lt2 s pat e f q g a) = (term1039 _144529 _144530 _144607 _144645 _144654 P p lt2 s pat e f q g a).
Proof. exact (MK_COMB (@lem8194339 _144530 _144607 _144654 P) (@lem8194338 _144529 _144530 _144607 _144645 _144654 P p lt2 s pat e f q g a)). Qed.
Lemma lem8194341 {_144529 _144530 _144607 _144645 _144654 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term1041 _144529 _144530 _144607 _144645 _144654 P lt2 s pat e f q g a) = (term1041 _144529 _144530 _144607 _144645 _144654 P lt2 s pat e f q g a).
Proof. exact (fun_ext (fun p : type560 _144530 _144607 P => @lem8194340 _144529 _144530 _144607 _144645 _144654 P p lt2 s pat e f q g a)). Qed.
Lemma lem8194342 {_144530 _144607 P : Type'} : (@all ((_144530 -> _144607) -> P -> Prop)) = (@all ((_144530 -> _144607) -> P -> Prop)).
Proof. exact (eq_refl (@all ((_144530 -> _144607) -> P -> Prop))). Qed.
Lemma lem8194343 {_144529 _144530 _144607 _144645 _144654 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term1043 _144529 _144530 _144607 _144645 _144654 P lt2 s pat e f q g a) = (term1043 _144529 _144530 _144607 _144645 _144654 P lt2 s pat e f q g a).
Proof. exact (MK_COMB (@lem8194342 _144530 _144607 P) (@lem8194341 _144529 _144530 _144607 _144645 _144654 P lt2 s pat e f q g a)). Qed.
Lemma lem8194344 {_144529 _144530 _144607 _144645 _144654 P : Type'} (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term1045 _144529 _144530 _144607 _144645 _144654 P s pat e f q g a) = (term1045 _144529 _144530 _144607 _144645 _144654 P s pat e f q g a).
Proof. exact (fun_ext (fun lt2 : type1470 _144529 _144530 => @lem8194343 _144529 _144530 _144607 _144645 _144654 P lt2 s pat e f q g a)). Qed.
Lemma lem8194345 {_144529 _144530 : Type'} : (@all (_144530 -> _144529 -> Prop)) = (@all (_144530 -> _144529 -> Prop)).
Proof. exact (eq_refl (@all (_144530 -> _144529 -> Prop))). Qed.
Lemma lem8194346 {_144529 _144530 _144607 _144645 _144654 P : Type'} (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term1047 _144529 _144530 _144607 _144645 _144654 P s pat e f q g a) = (term1047 _144529 _144530 _144607 _144645 _144654 P s pat e f q g a).
Proof. exact (MK_COMB (@lem8194345 _144529 _144530) (@lem8194344 _144529 _144530 _144607 _144645 _144654 P s pat e f q g a)). Qed.
Lemma lem8194347 {_144529 _144530 _144607 _144645 _144654 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term1049 _144529 _144530 _144607 _144645 _144654 P pat e f q g a) = (term1049 _144529 _144530 _144607 _144645 _144654 P pat e f q g a).
Proof. exact (fun_ext (fun s : P -> _144529 => @lem8194346 _144529 _144530 _144607 _144645 _144654 P s pat e f q g a)). Qed.
Lemma lem8194348 {_144529 P : Type'} : (@all (P -> _144529)) = (@all (P -> _144529)).
Proof. exact (eq_refl (@all (P -> _144529))). Qed.
Lemma lem8194349 {_144529 _144530 _144607 _144645 _144654 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term1051 _144529 _144530 _144607 _144645 _144654 P pat e f q g a) = (term1051 _144529 _144530 _144607 _144645 _144654 P pat e f q g a).
Proof. exact (MK_COMB (@lem8194348 _144529 P) (@lem8194347 _144529 _144530 _144607 _144645 _144654 P pat e f q g a)). Qed.
Lemma lem8194350 {_144529 _144530 _144607 _144645 _144654 P : Type'} (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term1053 _144529 _144530 _144607 _144645 _144654 P e f q g a) = (term1053 _144529 _144530 _144607 _144645 _144654 P e f q g a).
Proof. exact (fun_ext (fun pat : type564 _144530 _144607 _144645 P => @lem8194349 _144529 _144530 _144607 _144645 _144654 P pat e f q g a)). Qed.
Lemma lem8194351 {_144530 _144607 _144645 P : Type'} : (@all ((_144530 -> _144607) -> P -> _144645)) = (@all ((_144530 -> _144607) -> P -> _144645)).
Proof. exact (eq_refl (@all ((_144530 -> _144607) -> P -> _144645))). Qed.
Lemma lem8194352 {_144529 _144530 _144607 _144645 _144654 P : Type'} (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term1055 _144529 _144530 _144607 _144645 _144654 P e f q g a) = (term1055 _144529 _144530 _144607 _144645 _144654 P e f q g a).
Proof. exact (MK_COMB (@lem8194351 _144530 _144607 _144645 P) (@lem8194350 _144529 _144530 _144607 _144645 _144654 P e f q g a)). Qed.
Lemma lem8194353 {_144529 _144530 _144607 _144645 _144654 P : Type'} (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term1057 _144529 _144530 _144607 _144645 _144654 P f q g a) = (term1057 _144529 _144530 _144607 _144645 _144654 P f q g a).
Proof. exact (fun_ext (fun e : type564 _144530 _144607 _144645 P => @lem8194352 _144529 _144530 _144607 _144645 _144654 P e f q g a)). Qed.
Lemma lem8194354 {_144530 _144607 _144645 P : Type'} : (@all ((_144530 -> _144607) -> P -> _144645)) = (@all ((_144530 -> _144607) -> P -> _144645)).
Proof. exact (eq_refl (@all ((_144530 -> _144607) -> P -> _144645))). Qed.
Lemma lem8194355 {_144529 _144530 _144607 _144645 _144654 P : Type'} (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term1059 _144529 _144530 _144607 _144645 _144654 P f q g a) = (term1059 _144529 _144530 _144607 _144645 _144654 P f q g a).
Proof. exact (MK_COMB (@lem8194354 _144530 _144607 _144645 P) (@lem8194353 _144529 _144530 _144607 _144645 _144654 P f q g a)). Qed.
Lemma lem8194356 {_144529 _144530 _144607 _144645 _144654 P : Type'} (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term1061 _144529 _144530 _144607 _144645 _144654 P q g a) = (term1061 _144529 _144530 _144607 _144645 _144654 P q g a).
Proof. exact (fun_ext (fun f : _144530 -> _144607 => @lem8194355 _144529 _144530 _144607 _144645 _144654 P f q g a)). Qed.
Lemma lem8194357 {_144530 _144607 : Type'} : (@all (_144530 -> _144607)) = (@all (_144530 -> _144607)).
Proof. exact (eq_refl (@all (_144530 -> _144607))). Qed.
Lemma lem8194358 {_144529 _144530 _144607 _144645 _144654 P : Type'} (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term1063 _144529 _144530 _144607 _144645 _144654 P q g a) = (term1063 _144529 _144530 _144607 _144645 _144654 P q g a).
Proof. exact (MK_COMB (@lem8194357 _144530 _144607) (@lem8194356 _144529 _144530 _144607 _144645 _144654 P q g a)). Qed.
Lemma lem8194359 {_144529 _144530 _144607 _144645 _144654 P : Type'} (g : _144530 -> _144607) (a : P) : (term1065 _144529 _144530 _144607 _144645 _144654 P g a) = (term1065 _144529 _144530 _144607 _144645 _144654 P g a).
Proof. exact (fun_ext (fun q : type560 _144530 _144607 P => @lem8194358 _144529 _144530 _144607 _144645 _144654 P q g a)). Qed.
Lemma lem8194360 {_144530 _144607 P : Type'} : (@all ((_144530 -> _144607) -> P -> Prop)) = (@all ((_144530 -> _144607) -> P -> Prop)).
Proof. exact (eq_refl (@all ((_144530 -> _144607) -> P -> Prop))). Qed.
Lemma lem8194361 {_144529 _144530 _144607 _144645 _144654 P : Type'} (g : _144530 -> _144607) (a : P) : (term1067 _144529 _144530 _144607 _144645 _144654 P g a) = (term1067 _144529 _144530 _144607 _144645 _144654 P g a).
Proof. exact (MK_COMB (@lem8194360 _144530 _144607 P) (@lem8194359 _144529 _144530 _144607 _144645 _144654 P g a)). Qed.
Lemma lem8194362 {_144529 _144530 _144607 _144645 _144654 P : Type'} (a : P) : (term1069 _144529 _144530 _144607 _144645 _144654 P a) = (term1069 _144529 _144530 _144607 _144645 _144654 P a).
Proof. exact (fun_ext (fun g : _144530 -> _144607 => @lem8194361 _144529 _144530 _144607 _144645 _144654 P g a)). Qed.
Lemma lem8194363 {_144530 _144607 : Type'} : (@all (_144530 -> _144607)) = (@all (_144530 -> _144607)).
Proof. exact (eq_refl (@all (_144530 -> _144607))). Qed.
Lemma lem8194364 {_144529 _144530 _144607 _144645 _144654 P : Type'} (a : P) : (term1071 _144529 _144530 _144607 _144645 _144654 P a) = (term1071 _144529 _144530 _144607 _144645 _144654 P a).
Proof. exact (MK_COMB (@lem8194363 _144530 _144607) (@lem8194362 _144529 _144530 _144607 _144645 _144654 P a)). Qed.
Lemma lem8194365 {_144529 _144530 _144607 _144645 _144654 P : Type'} : (term1073 _144529 _144530 _144607 _144645 _144654 P) = (term1073 _144529 _144530 _144607 _144645 _144654 P).
Proof. exact (fun_ext (fun a : P => @lem8194364 _144529 _144530 _144607 _144645 _144654 P a)). Qed.
Lemma lem8194366 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8194367 {_144529 _144530 _144607 _144645 _144654 P : Type'} : (term1075 _144529 _144530 _144607 _144645 _144654 P) = (term1075 _144529 _144530 _144607 _144645 _144654 P).
Proof. exact (MK_COMB (@lem8194366 P) (@lem8194365 _144529 _144530 _144607 _144645 _144654 P)). Qed.
Lemma lem8194644 {_144529 _144530 _144607 _144645 _144654 P : Type'} : (term1074 _144529 _144530 _144607 _144645 _144654 P) = (term1075 _144529 _144530 _144607 _144645 _144654 P).
Proof. exact (TRANS (@lem8194098 _144529 _144530 _144607 _144645 _144654 P) (@lem8194367 _144529 _144530 _144607 _144645 _144654 P)). Qed.
Lemma lem8194645 {_144529 _144530 _144607 _144645 _144654 P : Type'} : (term1075 _144529 _144530 _144607 _144645 _144654 P) = (term1074 _144529 _144530 _144607 _144645 _144654 P).
Proof. exact (SYM (@lem8194644 _144529 _144530 _144607 _144645 _144654 P)). Qed.
Lemma lem8194646 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (h1 : term141 _144529 _144530 _144607 _144645 P p lt2 s pat) : term141 _144529 _144530 _144607 _144645 P p lt2 s pat.
Proof. exact (h1). Qed.
Lemma lem8194647 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (e : type564 _144530 _144607 _144645 P) (h1 : term141 _144529 _144530 _144607 _144645 P p lt2 s e) : term141 _144529 _144530 _144607 _144645 P p lt2 s e.
Proof. exact (h1). Qed.
Lemma lem8194648 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (t : type564 _144530 _144607 _144654 P) (h1 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t.
Proof. exact (h1). Qed.
Lemma lem8194649 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (q : type560 _144530 _144607 P) (h1 : term224 _144529 _144530 _144607 _144645 P p pat e lt2 s q) : term224 _144529 _144530 _144607 _144645 P p pat e lt2 s q.
Proof. exact (h1). Qed.
Lemma lem8194650 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (y : type564 _144530 _144607 _144654 P) (h1 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y) : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y.
Proof. exact (h1). Qed.
Lemma lem8194653 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) : term165 _144529 _144530 _144607 P lt2 s a f g.
Proof. exact (h1). Qed.
Lemma lem8194657 (p : Prop) : p = (term7 p).
Proof. exact (EQ_MP (@lem10578 p) (@lem10597 p)). Qed.
Lemma lem8194658 {_144530 _144607 P : Type'} (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : ((q f a) = (q g a)) = (term1005 _144530 _144607 P f q g a).
Proof. exact (@lem8194657 ((q f a) = (q g a))). Qed.
Lemma lem8194659 {_144530 _144607 P : Type'} (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term1005 _144530 _144607 P f q g a) = ((q f a) = (q g a)).
Proof. exact (SYM (@lem8194658 _144530 _144607 P f q g a)). Qed.
Lemma lem8194660 {_144530 _144607 P : Type'} (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term1006 _144530 _144607 P f q g a) : term1006 _144530 _144607 P f q g a.
Proof. exact (h1). Qed.
Lemma lem8194669 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (z : _144530) : (term404 _144529 _144530 _144607 P lt2 s a f g z) = (term405 _144529 _144530 _144607 P lt2 s a f g z).
Proof. exact (@lem17362 (term406 _144529 _144530 P lt2 z s a) ((f z) = (g z))). Qed.
Lemma lem8194670 {_144530 : Type'} (P : _144530 -> Prop) : (term407 _144530 P) = (term408 _144530 P).
Proof. exact (@lem18392 _144530 P). Qed.
Lemma lem8194671 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term409 _144529 _144530 _144607 P lt2 s a f g) = (term410 _144529 _144530 _144607 P lt2 s a f g).
Proof. exact (@lem8194670 _144530 (term397 _144529 _144530 _144607 P lt2 s a f g)). Qed.
Lemma lem8194672 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (z : _144530) : (term411 _144529 _144530 _144607 P lt2 s a f g z) = (term396 _144529 _144530 _144607 P lt2 s a f g z).
Proof. exact (eq_refl (term411 _144529 _144530 _144607 P lt2 s a f g z)). Qed.
Lemma lem8194673 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8194674 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (z : _144530) : (term412 _144529 _144530 _144607 P lt2 s a f g z) = (term404 _144529 _144530 _144607 P lt2 s a f g z).
Proof. exact (MK_COMB (@lem8194673) (@lem8194672 _144529 _144530 _144607 P lt2 s a f g z)). Qed.
Lemma lem8194675 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (z : _144530) : (term412 _144529 _144530 _144607 P lt2 s a f g z) = (term405 _144529 _144530 _144607 P lt2 s a f g z).
Proof. exact (TRANS (@lem8194674 _144529 _144530 _144607 P lt2 s a f g z) (@lem8194669 _144529 _144530 _144607 P lt2 s a f g z)). Qed.
Lemma lem8194676 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term413 _144529 _144530 _144607 P lt2 s a f g) = (term414 _144529 _144530 _144607 P lt2 s a f g).
Proof. exact (fun_ext (fun z : _144530 => @lem8194675 _144529 _144530 _144607 P lt2 s a f g z)). Qed.
Lemma lem8194677 {_144530 : Type'} : (@ex _144530) = (@ex _144530).
Proof. exact (eq_refl (@ex _144530)). Qed.
Lemma lem8194678 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term410 _144529 _144530 _144607 P lt2 s a f g) = (term415 _144529 _144530 _144607 P lt2 s a f g).
Proof. exact (MK_COMB (@lem8194677 _144530) (@lem8194676 _144529 _144530 _144607 P lt2 s a f g)). Qed.
Lemma lem8194679 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term409 _144529 _144530 _144607 P lt2 s a f g) = (term415 _144529 _144530 _144607 P lt2 s a f g).
Proof. exact (TRANS (@lem8194671 _144529 _144530 _144607 P lt2 s a f g) (@lem8194678 _144529 _144530 _144607 P lt2 s a f g)). Qed.
Lemma lem8194681 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term416 _144530 _144607 P p g a) = (term416 _144530 _144607 P p g a).
Proof. exact (eq_refl (term416 _144530 _144607 P p g a)). Qed.
Lemma lem8194682 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term417 _144529 _144530 _144607 P p lt2 s a f g) = (term418 _144529 _144530 _144607 P p lt2 s a f g).
Proof. exact (MK_COMB (@lem8194681 _144530 _144607 P p g a) (@lem8194679 _144529 _144530 _144607 P lt2 s a f g)). Qed.
Lemma lem8194683 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term419 _144529 _144530 _144607 P p lt2 s a f g) = (term417 _144529 _144530 _144607 P p lt2 s a f g).
Proof. exact (@lem17045 (p g a) (term165 _144529 _144530 _144607 P lt2 s a f g)). Qed.
Lemma lem8194684 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term419 _144529 _144530 _144607 P p lt2 s a f g) = (term418 _144529 _144530 _144607 P p lt2 s a f g).
Proof. exact (TRANS (@lem8194683 _144529 _144530 _144607 P p lt2 s a f g) (@lem8194682 _144529 _144530 _144607 P p lt2 s a f g)). Qed.
Lemma lem8194686 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) : (term416 _144530 _144607 P p f a) = (term416 _144530 _144607 P p f a).
Proof. exact (eq_refl (term416 _144530 _144607 P p f a)). Qed.
Lemma lem8194687 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term420 _144529 _144530 _144607 P p lt2 s a f g) = (term421 _144529 _144530 _144607 P p lt2 s a f g).
Proof. exact (MK_COMB (@lem8194686 _144530 _144607 P p f a) (@lem8194684 _144529 _144530 _144607 P p lt2 s a f g)). Qed.
Lemma lem8194688 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term422 _144529 _144530 _144607 P p lt2 s a f g) = (term420 _144529 _144530 _144607 P p lt2 s a f g).
Proof. exact (@lem17045 (p f a) (term318 _144529 _144530 _144607 P p lt2 s a f g)). Qed.
Lemma lem8194689 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term422 _144529 _144530 _144607 P p lt2 s a f g) = (term421 _144529 _144530 _144607 P p lt2 s a f g).
Proof. exact (TRANS (@lem8194688 _144529 _144530 _144607 P p lt2 s a f g) (@lem8194687 _144529 _144530 _144607 P p lt2 s a f g)). Qed.
Lemma lem8194690 {_144530 _144607 _144645 P : Type'} (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : ((pat f a) = (pat g a)) = ((pat f a) = (pat g a)).
Proof. exact (eq_refl ((pat f a) = (pat g a))). Qed.
Lemma lem8194691 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8194692 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term423 _144529 _144530 _144607 P p lt2 s a f g) = (term424 _144529 _144530 _144607 P p lt2 s a f g).
Proof. exact (MK_COMB (@lem8194691) (@lem8194689 _144529 _144530 _144607 P p lt2 s a f g)). Qed.
Lemma lem8194693 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term425 _144529 _144530 _144607 _144645 P p lt2 s f pat g a) = (term426 _144529 _144530 _144607 _144645 P p lt2 s f pat g a).
Proof. exact (MK_COMB (@lem8194692 _144529 _144530 _144607 P p lt2 s a f g) (@lem8194690 _144530 _144607 _144645 P f pat g a)). Qed.
Lemma lem8194694 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term398 _144529 _144530 _144607 _144645 P p lt2 s f pat g a) = (term425 _144529 _144530 _144607 _144645 P p lt2 s f pat g a).
Proof. exact (@lem17265 (term317 _144529 _144530 _144607 P p lt2 s a f g) ((pat f a) = (pat g a))). Qed.
Lemma lem8194695 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term398 _144529 _144530 _144607 _144645 P p lt2 s f pat g a) = (term426 _144529 _144530 _144607 _144645 P p lt2 s f pat g a).
Proof. exact (TRANS (@lem8194694 _144529 _144530 _144607 _144645 P p lt2 s f pat g a) (@lem8194693 _144529 _144530 _144607 _144645 P p lt2 s f pat g a)). Qed.
Lemma lem8194696 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) : (term399 _144529 _144530 _144607 _144645 P p lt2 s f pat g) = (term427 _144529 _144530 _144607 _144645 P p lt2 s f pat g).
Proof. exact (fun_ext (fun a : P => @lem8194695 _144529 _144530 _144607 _144645 P p lt2 s f pat g a)). Qed.
Lemma lem8194697 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8194698 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) : (term400 _144529 _144530 _144607 _144645 P p lt2 s f pat g) = (term428 _144529 _144530 _144607 _144645 P p lt2 s f pat g).
Proof. exact (MK_COMB (@lem8194697 P) (@lem8194696 _144529 _144530 _144607 _144645 P p lt2 s f pat g)). Qed.
Lemma lem8194699 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) : (term401 _144529 _144530 _144607 _144645 P p lt2 s f pat) = (term429 _144529 _144530 _144607 _144645 P p lt2 s f pat).
Proof. exact (fun_ext (fun g : _144530 -> _144607 => @lem8194698 _144529 _144530 _144607 _144645 P p lt2 s f pat g)). Qed.
Lemma lem8194700 {_144530 _144607 : Type'} : (@all (_144530 -> _144607)) = (@all (_144530 -> _144607)).
Proof. exact (eq_refl (@all (_144530 -> _144607))). Qed.
Lemma lem8194701 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) : (term402 _144529 _144530 _144607 _144645 P p lt2 s f pat) = (term430 _144529 _144530 _144607 _144645 P p lt2 s f pat).
Proof. exact (MK_COMB (@lem8194700 _144530 _144607) (@lem8194699 _144529 _144530 _144607 _144645 P p lt2 s f pat)). Qed.
Lemma lem8194702 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) : (term403 _144529 _144530 _144607 _144645 P p lt2 s pat) = (term431 _144529 _144530 _144607 _144645 P p lt2 s pat).
Proof. exact (fun_ext (fun f : _144530 -> _144607 => @lem8194701 _144529 _144530 _144607 _144645 P p lt2 s f pat)). Qed.
Lemma lem8194703 {_144530 _144607 : Type'} : (@all (_144530 -> _144607)) = (@all (_144530 -> _144607)).
Proof. exact (eq_refl (@all (_144530 -> _144607))). Qed.
Lemma lem8194704 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) : (term141 _144529 _144530 _144607 _144645 P p lt2 s pat) = (term432 _144529 _144530 _144607 _144645 P p lt2 s pat).
Proof. exact (MK_COMB (@lem8194703 _144530 _144607) (@lem8194702 _144529 _144530 _144607 _144645 P p lt2 s pat)). Qed.
Lemma lem8194811 {A : Type'} (P : Prop) (Q : A -> Prop) : (term433 A P Q) = (term434 A P Q).
Proof. exact (EQ_MP (@lem18911 A P Q) (@lem18910 A P Q)). Qed.
Lemma lem8194812 {_144530 : Type'} (P : Prop) (Q : _144530 -> Prop) : (term433 _144530 P Q) = (term434 _144530 P Q).
Proof. exact (@lem8194811 _144530 P Q). Qed.
Lemma lem8194813 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term435 _144529 _144530 _144607 P p lt2 s a f g) = (term436 _144529 _144530 _144607 P p lt2 s a f g).
Proof. exact (@lem8194812 _144530 (term437 _144530 _144607 P p g a) (term414 _144529 _144530 _144607 P lt2 s a f g)). Qed.
Lemma lem8194814 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (z : _144530) : (term438 _144529 _144530 _144607 P lt2 s a f g z) = (term405 _144529 _144530 _144607 P lt2 s a f g z).
Proof. exact (eq_refl (term438 _144529 _144530 _144607 P lt2 s a f g z)). Qed.
Lemma lem8194815 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term439 _144529 _144530 _144607 P lt2 s a f g) = (term414 _144529 _144530 _144607 P lt2 s a f g).
Proof. exact (fun_ext (fun z : _144530 => @lem8194814 _144529 _144530 _144607 P lt2 s a f g z)). Qed.
Lemma lem8194816 {_144530 : Type'} : (@ex _144530) = (@ex _144530).
Proof. exact (eq_refl (@ex _144530)). Qed.
Lemma lem8194817 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term440 _144529 _144530 _144607 P lt2 s a f g) = (term415 _144529 _144530 _144607 P lt2 s a f g).
Proof. exact (MK_COMB (@lem8194816 _144530) (@lem8194815 _144529 _144530 _144607 P lt2 s a f g)). Qed.
Lemma lem8194818 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term416 _144530 _144607 P p g a) = (term416 _144530 _144607 P p g a).
Proof. exact (eq_refl (term416 _144530 _144607 P p g a)). Qed.
Lemma lem8194819 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term435 _144529 _144530 _144607 P p lt2 s a f g) = (term418 _144529 _144530 _144607 P p lt2 s a f g).
Proof. exact (MK_COMB (@lem8194818 _144530 _144607 P p g a) (@lem8194817 _144529 _144530 _144607 P lt2 s a f g)). Qed.
Lemma lem8194820 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8194821 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term441 _144529 _144530 _144607 P p lt2 s a f g) = (term442 _144529 _144530 _144607 P p lt2 s a f g).
Proof. exact (MK_COMB (@lem8194820) (@lem8194819 _144529 _144530 _144607 P p lt2 s a f g)). Qed.
Lemma lem8194822 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (z : _144530) : (term438 _144529 _144530 _144607 P lt2 s a f g z) = (term405 _144529 _144530 _144607 P lt2 s a f g z).
Proof. exact (eq_refl (term438 _144529 _144530 _144607 P lt2 s a f g z)). Qed.
Lemma lem8194823 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term416 _144530 _144607 P p g a) = (term416 _144530 _144607 P p g a).
Proof. exact (eq_refl (term416 _144530 _144607 P p g a)). Qed.
Lemma lem8194824 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (z : _144530) : (term443 _144529 _144530 _144607 P p lt2 s a f g z) = (term444 _144529 _144530 _144607 P p lt2 s a f g z).
Proof. exact (MK_COMB (@lem8194823 _144530 _144607 P p g a) (@lem8194822 _144529 _144530 _144607 P lt2 s a f g z)). Qed.
Lemma lem8194825 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term445 _144529 _144530 _144607 P p lt2 s a f g) = (term446 _144529 _144530 _144607 P p lt2 s a f g).
Proof. exact (fun_ext (fun z : _144530 => @lem8194824 _144529 _144530 _144607 P p lt2 s a f g z)). Qed.
Lemma lem8194826 {_144530 : Type'} : (@ex _144530) = (@ex _144530).
Proof. exact (eq_refl (@ex _144530)). Qed.
Lemma lem8194827 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term436 _144529 _144530 _144607 P p lt2 s a f g) = (term447 _144529 _144530 _144607 P p lt2 s a f g).
Proof. exact (MK_COMB (@lem8194826 _144530) (@lem8194825 _144529 _144530 _144607 P p lt2 s a f g)). Qed.
Lemma lem8194828 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : ((term435 _144529 _144530 _144607 P p lt2 s a f g) = (term436 _144529 _144530 _144607 P p lt2 s a f g)) = ((term418 _144529 _144530 _144607 P p lt2 s a f g) = (term447 _144529 _144530 _144607 P p lt2 s a f g)).
Proof. exact (MK_COMB (@lem8194821 _144529 _144530 _144607 P p lt2 s a f g) (@lem8194827 _144529 _144530 _144607 P p lt2 s a f g)). Qed.
Lemma lem8194829 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term418 _144529 _144530 _144607 P p lt2 s a f g) = (term447 _144529 _144530 _144607 P p lt2 s a f g).
Proof. exact (EQ_MP (@lem8194828 _144529 _144530 _144607 P p lt2 s a f g) (@lem8194813 _144529 _144530 _144607 P p lt2 s a f g)). Qed.
Lemma lem8194830 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) : (term416 _144530 _144607 P p f a) = (term416 _144530 _144607 P p f a).
Proof. exact (eq_refl (term416 _144530 _144607 P p f a)). Qed.
Lemma lem8194831 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term421 _144529 _144530 _144607 P p lt2 s a f g) = (term448 _144529 _144530 _144607 P p lt2 s a f g).
Proof. exact (MK_COMB (@lem8194830 _144530 _144607 P p f a) (@lem8194829 _144529 _144530 _144607 P p lt2 s a f g)). Qed.
Lemma lem8194833 {A : Type'} (P : Prop) (Q : A -> Prop) : (term433 A P Q) = (term434 A P Q).
Proof. exact (EQ_MP (@lem18911 A P Q) (@lem18910 A P Q)). Qed.
Lemma lem8194834 {_144530 : Type'} (P : Prop) (Q : _144530 -> Prop) : (term433 _144530 P Q) = (term434 _144530 P Q).
Proof. exact (@lem8194833 _144530 P Q). Qed.
Lemma lem8194835 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term449 _144529 _144530 _144607 P p lt2 s a f g) = (term450 _144529 _144530 _144607 P p lt2 s a f g).
Proof. exact (@lem8194834 _144530 (term437 _144530 _144607 P p f a) (term446 _144529 _144530 _144607 P p lt2 s a f g)). Qed.
Lemma lem8194836 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (z : _144530) : (term451 _144529 _144530 _144607 P p lt2 s a f g z) = (term444 _144529 _144530 _144607 P p lt2 s a f g z).
Proof. exact (eq_refl (term451 _144529 _144530 _144607 P p lt2 s a f g z)). Qed.
Lemma lem8194837 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term452 _144529 _144530 _144607 P p lt2 s a f g) = (term446 _144529 _144530 _144607 P p lt2 s a f g).
Proof. exact (fun_ext (fun z : _144530 => @lem8194836 _144529 _144530 _144607 P p lt2 s a f g z)). Qed.
Lemma lem8194838 {_144530 : Type'} : (@ex _144530) = (@ex _144530).
Proof. exact (eq_refl (@ex _144530)). Qed.
Lemma lem8194839 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term453 _144529 _144530 _144607 P p lt2 s a f g) = (term447 _144529 _144530 _144607 P p lt2 s a f g).
Proof. exact (MK_COMB (@lem8194838 _144530) (@lem8194837 _144529 _144530 _144607 P p lt2 s a f g)). Qed.
Lemma lem8194840 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) : (term416 _144530 _144607 P p f a) = (term416 _144530 _144607 P p f a).
Proof. exact (eq_refl (term416 _144530 _144607 P p f a)). Qed.
Lemma lem8194841 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term449 _144529 _144530 _144607 P p lt2 s a f g) = (term448 _144529 _144530 _144607 P p lt2 s a f g).
Proof. exact (MK_COMB (@lem8194840 _144530 _144607 P p f a) (@lem8194839 _144529 _144530 _144607 P p lt2 s a f g)). Qed.
Lemma lem8194842 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8194843 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term454 _144529 _144530 _144607 P p lt2 s a f g) = (term455 _144529 _144530 _144607 P p lt2 s a f g).
Proof. exact (MK_COMB (@lem8194842) (@lem8194841 _144529 _144530 _144607 P p lt2 s a f g)). Qed.
Lemma lem8194844 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (z : _144530) : (term451 _144529 _144530 _144607 P p lt2 s a f g z) = (term444 _144529 _144530 _144607 P p lt2 s a f g z).
Proof. exact (eq_refl (term451 _144529 _144530 _144607 P p lt2 s a f g z)). Qed.
Lemma lem8194845 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) : (term416 _144530 _144607 P p f a) = (term416 _144530 _144607 P p f a).
Proof. exact (eq_refl (term416 _144530 _144607 P p f a)). Qed.
Lemma lem8194846 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (z : _144530) : (term456 _144529 _144530 _144607 P p lt2 s a f g z) = (term457 _144529 _144530 _144607 P p lt2 s a f g z).
Proof. exact (MK_COMB (@lem8194845 _144530 _144607 P p f a) (@lem8194844 _144529 _144530 _144607 P p lt2 s a f g z)). Qed.
Lemma lem8194847 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term458 _144529 _144530 _144607 P p lt2 s a f g) = (term459 _144529 _144530 _144607 P p lt2 s a f g).
Proof. exact (fun_ext (fun z : _144530 => @lem8194846 _144529 _144530 _144607 P p lt2 s a f g z)). Qed.
Lemma lem8194848 {_144530 : Type'} : (@ex _144530) = (@ex _144530).
Proof. exact (eq_refl (@ex _144530)). Qed.
Lemma lem8194849 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term450 _144529 _144530 _144607 P p lt2 s a f g) = (term460 _144529 _144530 _144607 P p lt2 s a f g).
Proof. exact (MK_COMB (@lem8194848 _144530) (@lem8194847 _144529 _144530 _144607 P p lt2 s a f g)). Qed.
Lemma lem8194850 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : ((term449 _144529 _144530 _144607 P p lt2 s a f g) = (term450 _144529 _144530 _144607 P p lt2 s a f g)) = ((term448 _144529 _144530 _144607 P p lt2 s a f g) = (term460 _144529 _144530 _144607 P p lt2 s a f g)).
Proof. exact (MK_COMB (@lem8194843 _144529 _144530 _144607 P p lt2 s a f g) (@lem8194849 _144529 _144530 _144607 P p lt2 s a f g)). Qed.
Lemma lem8194851 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term448 _144529 _144530 _144607 P p lt2 s a f g) = (term460 _144529 _144530 _144607 P p lt2 s a f g).
Proof. exact (EQ_MP (@lem8194850 _144529 _144530 _144607 P p lt2 s a f g) (@lem8194835 _144529 _144530 _144607 P p lt2 s a f g)). Qed.
Lemma lem8194852 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term421 _144529 _144530 _144607 P p lt2 s a f g) = (term460 _144529 _144530 _144607 P p lt2 s a f g).
Proof. exact (TRANS (@lem8194831 _144529 _144530 _144607 P p lt2 s a f g) (@lem8194851 _144529 _144530 _144607 P p lt2 s a f g)). Qed.
Lemma lem8194853 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8194854 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term424 _144529 _144530 _144607 P p lt2 s a f g) = (term461 _144529 _144530 _144607 P p lt2 s a f g).
Proof. exact (MK_COMB (@lem8194853) (@lem8194852 _144529 _144530 _144607 P p lt2 s a f g)). Qed.
Lemma lem8194855 {_144530 _144607 _144645 P : Type'} (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : ((pat f a) = (pat g a)) = ((pat f a) = (pat g a)).
Proof. exact (eq_refl ((pat f a) = (pat g a))). Qed.
Lemma lem8194856 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term426 _144529 _144530 _144607 _144645 P p lt2 s f pat g a) = (term462 _144529 _144530 _144607 _144645 P p lt2 s f pat g a).
Proof. exact (MK_COMB (@lem8194854 _144529 _144530 _144607 P p lt2 s a f g) (@lem8194855 _144530 _144607 _144645 P f pat g a)). Qed.
Lemma lem8194858 {A : Type'} (P : A -> Prop) (Q : Prop) : (term463 A P Q) = (term464 A P Q).
Proof. exact (EQ_MP (@lem18905 A P Q) (@lem18904 A P Q)). Qed.
Lemma lem8194859 {_144530 : Type'} (P : _144530 -> Prop) (Q : Prop) : (term463 _144530 P Q) = (term464 _144530 P Q).
Proof. exact (@lem8194858 _144530 P Q). Qed.
Lemma lem8194860 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term465 _144529 _144530 _144607 _144645 P p lt2 s f pat g a) = (term466 _144529 _144530 _144607 _144645 P p lt2 s f pat g a).
Proof. exact (@lem8194859 _144530 (term459 _144529 _144530 _144607 P p lt2 s a f g) ((pat f a) = (pat g a))). Qed.
Lemma lem8194861 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (z : _144530) : (term467 _144529 _144530 _144607 P p lt2 s a f g z) = (term457 _144529 _144530 _144607 P p lt2 s a f g z).
Proof. exact (eq_refl (term467 _144529 _144530 _144607 P p lt2 s a f g z)). Qed.
Lemma lem8194862 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term468 _144529 _144530 _144607 P p lt2 s a f g) = (term459 _144529 _144530 _144607 P p lt2 s a f g).
Proof. exact (fun_ext (fun z : _144530 => @lem8194861 _144529 _144530 _144607 P p lt2 s a f g z)). Qed.
Lemma lem8194863 {_144530 : Type'} : (@ex _144530) = (@ex _144530).
Proof. exact (eq_refl (@ex _144530)). Qed.
Lemma lem8194864 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term469 _144529 _144530 _144607 P p lt2 s a f g) = (term460 _144529 _144530 _144607 P p lt2 s a f g).
Proof. exact (MK_COMB (@lem8194863 _144530) (@lem8194862 _144529 _144530 _144607 P p lt2 s a f g)). Qed.
Lemma lem8194865 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8194866 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term470 _144529 _144530 _144607 P p lt2 s a f g) = (term461 _144529 _144530 _144607 P p lt2 s a f g).
Proof. exact (MK_COMB (@lem8194865) (@lem8194864 _144529 _144530 _144607 P p lt2 s a f g)). Qed.
Lemma lem8194867 {_144530 _144607 _144645 P : Type'} (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : ((pat f a) = (pat g a)) = ((pat f a) = (pat g a)).
Proof. exact (eq_refl ((pat f a) = (pat g a))). Qed.
Lemma lem8194868 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term465 _144529 _144530 _144607 _144645 P p lt2 s f pat g a) = (term462 _144529 _144530 _144607 _144645 P p lt2 s f pat g a).
Proof. exact (MK_COMB (@lem8194866 _144529 _144530 _144607 P p lt2 s a f g) (@lem8194867 _144530 _144607 _144645 P f pat g a)). Qed.
Lemma lem8194869 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8194870 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term471 _144529 _144530 _144607 _144645 P p lt2 s f pat g a) = (term472 _144529 _144530 _144607 _144645 P p lt2 s f pat g a).
Proof. exact (MK_COMB (@lem8194869) (@lem8194868 _144529 _144530 _144607 _144645 P p lt2 s f pat g a)). Qed.
Lemma lem8194871 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (z : _144530) : (term467 _144529 _144530 _144607 P p lt2 s a f g z) = (term457 _144529 _144530 _144607 P p lt2 s a f g z).
Proof. exact (eq_refl (term467 _144529 _144530 _144607 P p lt2 s a f g z)). Qed.
Lemma lem8194872 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8194873 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (z : _144530) : (term473 _144529 _144530 _144607 P p lt2 s a f g z) = (term474 _144529 _144530 _144607 P p lt2 s a f g z).
Proof. exact (MK_COMB (@lem8194872) (@lem8194871 _144529 _144530 _144607 P p lt2 s a f g z)). Qed.
Lemma lem8194874 {_144530 _144607 _144645 P : Type'} (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : ((pat f a) = (pat g a)) = ((pat f a) = (pat g a)).
Proof. exact (eq_refl ((pat f a) = (pat g a))). Qed.
Lemma lem8194875 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : _144530) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term475 _144529 _144530 _144607 _144645 P p lt2 s z f pat g a) = (term476 _144529 _144530 _144607 _144645 P p lt2 s z f pat g a).
Proof. exact (MK_COMB (@lem8194873 _144529 _144530 _144607 P p lt2 s a f g z) (@lem8194874 _144530 _144607 _144645 P f pat g a)). Qed.
Lemma lem8194876 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term477 _144529 _144530 _144607 _144645 P p lt2 s f pat g a) = (term478 _144529 _144530 _144607 _144645 P p lt2 s f pat g a).
Proof. exact (fun_ext (fun z : _144530 => @lem8194875 _144529 _144530 _144607 _144645 P p lt2 s z f pat g a)). Qed.
Lemma lem8194877 {_144530 : Type'} : (@ex _144530) = (@ex _144530).
Proof. exact (eq_refl (@ex _144530)). Qed.
Lemma lem8194878 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term466 _144529 _144530 _144607 _144645 P p lt2 s f pat g a) = (term479 _144529 _144530 _144607 _144645 P p lt2 s f pat g a).
Proof. exact (MK_COMB (@lem8194877 _144530) (@lem8194876 _144529 _144530 _144607 _144645 P p lt2 s f pat g a)). Qed.
Lemma lem8194879 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : ((term465 _144529 _144530 _144607 _144645 P p lt2 s f pat g a) = (term466 _144529 _144530 _144607 _144645 P p lt2 s f pat g a)) = ((term462 _144529 _144530 _144607 _144645 P p lt2 s f pat g a) = (term479 _144529 _144530 _144607 _144645 P p lt2 s f pat g a)).
Proof. exact (MK_COMB (@lem8194870 _144529 _144530 _144607 _144645 P p lt2 s f pat g a) (@lem8194878 _144529 _144530 _144607 _144645 P p lt2 s f pat g a)). Qed.
Lemma lem8194880 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term462 _144529 _144530 _144607 _144645 P p lt2 s f pat g a) = (term479 _144529 _144530 _144607 _144645 P p lt2 s f pat g a).
Proof. exact (EQ_MP (@lem8194879 _144529 _144530 _144607 _144645 P p lt2 s f pat g a) (@lem8194860 _144529 _144530 _144607 _144645 P p lt2 s f pat g a)). Qed.
Lemma lem8194881 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term426 _144529 _144530 _144607 _144645 P p lt2 s f pat g a) = (term479 _144529 _144530 _144607 _144645 P p lt2 s f pat g a).
Proof. exact (TRANS (@lem8194856 _144529 _144530 _144607 _144645 P p lt2 s f pat g a) (@lem8194880 _144529 _144530 _144607 _144645 P p lt2 s f pat g a)). Qed.
Lemma lem8194882 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) : (term427 _144529 _144530 _144607 _144645 P p lt2 s f pat g) = (term480 _144529 _144530 _144607 _144645 P p lt2 s f pat g).
Proof. exact (fun_ext (fun a : P => @lem8194881 _144529 _144530 _144607 _144645 P p lt2 s f pat g a)). Qed.
Lemma lem8194883 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8194884 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) : (term428 _144529 _144530 _144607 _144645 P p lt2 s f pat g) = (term481 _144529 _144530 _144607 _144645 P p lt2 s f pat g).
Proof. exact (MK_COMB (@lem8194883 P) (@lem8194882 _144529 _144530 _144607 _144645 P p lt2 s f pat g)). Qed.
Lemma lem8194886 {A B : Type'} (P : type1413 A B) : (term482 A B P) = (term483 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem8194887 {_144530 P : Type'} (P' : type1470 _144530 P) : (term484 _144530 P P') = (term485 _144530 P P').
Proof. exact (@lem8194886 P _144530 P'). Qed.
Lemma lem8194888 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) : (term486 _144529 _144530 _144607 _144645 P p lt2 s f pat g) = (term487 _144529 _144530 _144607 _144645 P p lt2 s f pat g).
Proof. exact (@lem8194887 _144530 P (term488 _144529 _144530 _144607 _144645 P p lt2 s f pat g)). Qed.
Lemma lem8194889 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term489 _144529 _144530 _144607 _144645 P p lt2 s f pat g a) = (term478 _144529 _144530 _144607 _144645 P p lt2 s f pat g a).
Proof. exact (eq_refl (term489 _144529 _144530 _144607 _144645 P p lt2 s f pat g a)). Qed.
Lemma lem8194890 {_144530 : Type'} (z : _144530) : z = z.
Proof. exact (eq_refl z). Qed.
Lemma lem8194891 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) (z : _144530) : (term490 _144529 _144530 _144607 _144645 P p lt2 s f pat g a z) = (term491 _144529 _144530 _144607 _144645 P p lt2 s f pat g a z).
Proof. exact (MK_COMB (@lem8194889 _144529 _144530 _144607 _144645 P p lt2 s f pat g a) (@lem8194890 _144530 z)). Qed.
Lemma lem8194892 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : _144530) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term491 _144529 _144530 _144607 _144645 P p lt2 s f pat g a z) = (term476 _144529 _144530 _144607 _144645 P p lt2 s z f pat g a).
Proof. exact (eq_refl (term491 _144529 _144530 _144607 _144645 P p lt2 s f pat g a z)). Qed.
Lemma lem8194893 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : _144530) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term490 _144529 _144530 _144607 _144645 P p lt2 s f pat g a z) = (term476 _144529 _144530 _144607 _144645 P p lt2 s z f pat g a).
Proof. exact (TRANS (@lem8194891 _144529 _144530 _144607 _144645 P p lt2 s f pat g a z) (@lem8194892 _144529 _144530 _144607 _144645 P p lt2 s z f pat g a)). Qed.
Lemma lem8194894 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term492 _144529 _144530 _144607 _144645 P p lt2 s f pat g a) = (term478 _144529 _144530 _144607 _144645 P p lt2 s f pat g a).
Proof. exact (fun_ext (fun z : _144530 => @lem8194893 _144529 _144530 _144607 _144645 P p lt2 s z f pat g a)). Qed.
Lemma lem8194895 {_144530 : Type'} : (@ex _144530) = (@ex _144530).
Proof. exact (eq_refl (@ex _144530)). Qed.
Lemma lem8194896 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term493 _144529 _144530 _144607 _144645 P p lt2 s f pat g a) = (term479 _144529 _144530 _144607 _144645 P p lt2 s f pat g a).
Proof. exact (MK_COMB (@lem8194895 _144530) (@lem8194894 _144529 _144530 _144607 _144645 P p lt2 s f pat g a)). Qed.
Lemma lem8194897 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) : (term494 _144529 _144530 _144607 _144645 P p lt2 s f pat g) = (term480 _144529 _144530 _144607 _144645 P p lt2 s f pat g).
Proof. exact (fun_ext (fun a : P => @lem8194896 _144529 _144530 _144607 _144645 P p lt2 s f pat g a)). Qed.
Lemma lem8194898 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8194899 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) : (term486 _144529 _144530 _144607 _144645 P p lt2 s f pat g) = (term481 _144529 _144530 _144607 _144645 P p lt2 s f pat g).
Proof. exact (MK_COMB (@lem8194898 P) (@lem8194897 _144529 _144530 _144607 _144645 P p lt2 s f pat g)). Qed.
Lemma lem8194900 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8194901 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) : (term495 _144529 _144530 _144607 _144645 P p lt2 s f pat g) = (term496 _144529 _144530 _144607 _144645 P p lt2 s f pat g).
Proof. exact (MK_COMB (@lem8194900) (@lem8194899 _144529 _144530 _144607 _144645 P p lt2 s f pat g)). Qed.
Lemma lem8194902 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term489 _144529 _144530 _144607 _144645 P p lt2 s f pat g a) = (term478 _144529 _144530 _144607 _144645 P p lt2 s f pat g a).
Proof. exact (eq_refl (term489 _144529 _144530 _144607 _144645 P p lt2 s f pat g a)). Qed.
Lemma lem8194903 {_144530 P : Type'} (z : P -> _144530) (a : P) : (z a) = (z a).
Proof. exact (eq_refl (z a)). Qed.
Lemma lem8194904 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (z : P -> _144530) (a : P) : (term497 _144529 _144530 _144607 _144645 P p lt2 s f pat g z a) = (term498 _144529 _144530 _144607 _144645 P p lt2 s f pat g z a).
Proof. exact (MK_COMB (@lem8194902 _144529 _144530 _144607 _144645 P p lt2 s f pat g a) (@lem8194903 _144530 P z a)). Qed.
Lemma lem8194905 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : P -> _144530) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term498 _144529 _144530 _144607 _144645 P p lt2 s f pat g z a) = (term499 _144529 _144530 _144607 _144645 P p lt2 s z f pat g a).
Proof. exact (eq_refl (term498 _144529 _144530 _144607 _144645 P p lt2 s f pat g z a)). Qed.
Lemma lem8194906 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : P -> _144530) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term497 _144529 _144530 _144607 _144645 P p lt2 s f pat g z a) = (term499 _144529 _144530 _144607 _144645 P p lt2 s z f pat g a).
Proof. exact (TRANS (@lem8194904 _144529 _144530 _144607 _144645 P p lt2 s f pat g z a) (@lem8194905 _144529 _144530 _144607 _144645 P p lt2 s z f pat g a)). Qed.
Lemma lem8194907 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : P -> _144530) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) : (term500 _144529 _144530 _144607 _144645 P p lt2 s f pat g z) = (term501 _144529 _144530 _144607 _144645 P p lt2 s z f pat g).
Proof. exact (fun_ext (fun a : P => @lem8194906 _144529 _144530 _144607 _144645 P p lt2 s z f pat g a)). Qed.
Lemma lem8194908 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8194909 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : P -> _144530) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) : (term502 _144529 _144530 _144607 _144645 P p lt2 s f pat g z) = (term503 _144529 _144530 _144607 _144645 P p lt2 s z f pat g).
Proof. exact (MK_COMB (@lem8194908 P) (@lem8194907 _144529 _144530 _144607 _144645 P p lt2 s z f pat g)). Qed.
Lemma lem8194910 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) : (term504 _144529 _144530 _144607 _144645 P p lt2 s f pat g) = (term505 _144529 _144530 _144607 _144645 P p lt2 s f pat g).
Proof. exact (fun_ext (fun z : P -> _144530 => @lem8194909 _144529 _144530 _144607 _144645 P p lt2 s z f pat g)). Qed.
Lemma lem8194911 {_144530 P : Type'} : (@ex (P -> _144530)) = (@ex (P -> _144530)).
Proof. exact (eq_refl (@ex (P -> _144530))). Qed.
Lemma lem8194912 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) : (term487 _144529 _144530 _144607 _144645 P p lt2 s f pat g) = (term506 _144529 _144530 _144607 _144645 P p lt2 s f pat g).
Proof. exact (MK_COMB (@lem8194911 _144530 P) (@lem8194910 _144529 _144530 _144607 _144645 P p lt2 s f pat g)). Qed.
Lemma lem8194913 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) : ((term486 _144529 _144530 _144607 _144645 P p lt2 s f pat g) = (term487 _144529 _144530 _144607 _144645 P p lt2 s f pat g)) = ((term481 _144529 _144530 _144607 _144645 P p lt2 s f pat g) = (term506 _144529 _144530 _144607 _144645 P p lt2 s f pat g)).
Proof. exact (MK_COMB (@lem8194901 _144529 _144530 _144607 _144645 P p lt2 s f pat g) (@lem8194912 _144529 _144530 _144607 _144645 P p lt2 s f pat g)). Qed.
Lemma lem8194914 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) : (term481 _144529 _144530 _144607 _144645 P p lt2 s f pat g) = (term506 _144529 _144530 _144607 _144645 P p lt2 s f pat g).
Proof. exact (EQ_MP (@lem8194913 _144529 _144530 _144607 _144645 P p lt2 s f pat g) (@lem8194888 _144529 _144530 _144607 _144645 P p lt2 s f pat g)). Qed.
Lemma lem8194915 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) : (term428 _144529 _144530 _144607 _144645 P p lt2 s f pat g) = (term506 _144529 _144530 _144607 _144645 P p lt2 s f pat g).
Proof. exact (TRANS (@lem8194884 _144529 _144530 _144607 _144645 P p lt2 s f pat g) (@lem8194914 _144529 _144530 _144607 _144645 P p lt2 s f pat g)). Qed.
Lemma lem8194916 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) : (term429 _144529 _144530 _144607 _144645 P p lt2 s f pat) = (term507 _144529 _144530 _144607 _144645 P p lt2 s f pat).
Proof. exact (fun_ext (fun g : _144530 -> _144607 => @lem8194915 _144529 _144530 _144607 _144645 P p lt2 s f pat g)). Qed.
Lemma lem8194917 {_144530 _144607 : Type'} : (@all (_144530 -> _144607)) = (@all (_144530 -> _144607)).
Proof. exact (eq_refl (@all (_144530 -> _144607))). Qed.
Lemma lem8194918 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) : (term430 _144529 _144530 _144607 _144645 P p lt2 s f pat) = (term508 _144529 _144530 _144607 _144645 P p lt2 s f pat).
Proof. exact (MK_COMB (@lem8194917 _144530 _144607) (@lem8194916 _144529 _144530 _144607 _144645 P p lt2 s f pat)). Qed.
Lemma lem8194920 {A B : Type'} (P : type1413 A B) : (term482 A B P) = (term483 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem8194921 {_144530 _144607 P : Type'} (P' : type537 _144530 _144607 P) : (term509 _144530 _144607 P P') = (term510 _144530 _144607 P P').
Proof. exact (@lem8194920 (_144530 -> _144607) (P -> _144530) P'). Qed.
Lemma lem8194922 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) : (term511 _144529 _144530 _144607 _144645 P p lt2 s f pat) = (term512 _144529 _144530 _144607 _144645 P p lt2 s f pat).
Proof. exact (@lem8194921 _144530 _144607 P (term513 _144529 _144530 _144607 _144645 P p lt2 s f pat)). Qed.
Lemma lem8194923 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) : (term514 _144529 _144530 _144607 _144645 P p lt2 s f pat g) = (term505 _144529 _144530 _144607 _144645 P p lt2 s f pat g).
Proof. exact (eq_refl (term514 _144529 _144530 _144607 _144645 P p lt2 s f pat g)). Qed.
Lemma lem8194924 {_144530 P : Type'} (z : P -> _144530) : z = z.
Proof. exact (eq_refl z). Qed.
Lemma lem8194925 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (z : P -> _144530) : (term515 _144529 _144530 _144607 _144645 P p lt2 s f pat g z) = (term516 _144529 _144530 _144607 _144645 P p lt2 s f pat g z).
Proof. exact (MK_COMB (@lem8194923 _144529 _144530 _144607 _144645 P p lt2 s f pat g) (@lem8194924 _144530 P z)). Qed.
Lemma lem8194926 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : P -> _144530) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) : (term516 _144529 _144530 _144607 _144645 P p lt2 s f pat g z) = (term503 _144529 _144530 _144607 _144645 P p lt2 s z f pat g).
Proof. exact (eq_refl (term516 _144529 _144530 _144607 _144645 P p lt2 s f pat g z)). Qed.
Lemma lem8194927 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : P -> _144530) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) : (term515 _144529 _144530 _144607 _144645 P p lt2 s f pat g z) = (term503 _144529 _144530 _144607 _144645 P p lt2 s z f pat g).
Proof. exact (TRANS (@lem8194925 _144529 _144530 _144607 _144645 P p lt2 s f pat g z) (@lem8194926 _144529 _144530 _144607 _144645 P p lt2 s z f pat g)). Qed.
Lemma lem8194928 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) : (term517 _144529 _144530 _144607 _144645 P p lt2 s f pat g) = (term505 _144529 _144530 _144607 _144645 P p lt2 s f pat g).
Proof. exact (fun_ext (fun z : P -> _144530 => @lem8194927 _144529 _144530 _144607 _144645 P p lt2 s z f pat g)). Qed.
Lemma lem8194929 {_144530 P : Type'} : (@ex (P -> _144530)) = (@ex (P -> _144530)).
Proof. exact (eq_refl (@ex (P -> _144530))). Qed.
Lemma lem8194930 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) : (term518 _144529 _144530 _144607 _144645 P p lt2 s f pat g) = (term506 _144529 _144530 _144607 _144645 P p lt2 s f pat g).
Proof. exact (MK_COMB (@lem8194929 _144530 P) (@lem8194928 _144529 _144530 _144607 _144645 P p lt2 s f pat g)). Qed.
Lemma lem8194931 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) : (term519 _144529 _144530 _144607 _144645 P p lt2 s f pat) = (term507 _144529 _144530 _144607 _144645 P p lt2 s f pat).
Proof. exact (fun_ext (fun g : _144530 -> _144607 => @lem8194930 _144529 _144530 _144607 _144645 P p lt2 s f pat g)). Qed.
Lemma lem8194932 {_144530 _144607 : Type'} : (@all (_144530 -> _144607)) = (@all (_144530 -> _144607)).
Proof. exact (eq_refl (@all (_144530 -> _144607))). Qed.
Lemma lem8194933 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) : (term511 _144529 _144530 _144607 _144645 P p lt2 s f pat) = (term508 _144529 _144530 _144607 _144645 P p lt2 s f pat).
Proof. exact (MK_COMB (@lem8194932 _144530 _144607) (@lem8194931 _144529 _144530 _144607 _144645 P p lt2 s f pat)). Qed.
Lemma lem8194934 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8194935 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) : (term520 _144529 _144530 _144607 _144645 P p lt2 s f pat) = (term521 _144529 _144530 _144607 _144645 P p lt2 s f pat).
Proof. exact (MK_COMB (@lem8194934) (@lem8194933 _144529 _144530 _144607 _144645 P p lt2 s f pat)). Qed.
Lemma lem8194936 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) : (term514 _144529 _144530 _144607 _144645 P p lt2 s f pat g) = (term505 _144529 _144530 _144607 _144645 P p lt2 s f pat g).
Proof. exact (eq_refl (term514 _144529 _144530 _144607 _144645 P p lt2 s f pat g)). Qed.
Lemma lem8194937 {_144530 _144607 P : Type'} (z : type557 _144530 _144607 P) (g : _144530 -> _144607) : (z g) = (z g).
Proof. exact (eq_refl (z g)). Qed.
Lemma lem8194938 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (z : type557 _144530 _144607 P) (g : _144530 -> _144607) : (term522 _144529 _144530 _144607 _144645 P p lt2 s f pat z g) = (term523 _144529 _144530 _144607 _144645 P p lt2 s f pat z g).
Proof. exact (MK_COMB (@lem8194936 _144529 _144530 _144607 _144645 P p lt2 s f pat g) (@lem8194937 _144530 _144607 P z g)). Qed.
Lemma lem8194939 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : type557 _144530 _144607 P) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) : (term523 _144529 _144530 _144607 _144645 P p lt2 s f pat z g) = (term524 _144529 _144530 _144607 _144645 P p lt2 s z f pat g).
Proof. exact (eq_refl (term523 _144529 _144530 _144607 _144645 P p lt2 s f pat z g)). Qed.
Lemma lem8194940 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : type557 _144530 _144607 P) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) : (term522 _144529 _144530 _144607 _144645 P p lt2 s f pat z g) = (term524 _144529 _144530 _144607 _144645 P p lt2 s z f pat g).
Proof. exact (TRANS (@lem8194938 _144529 _144530 _144607 _144645 P p lt2 s f pat z g) (@lem8194939 _144529 _144530 _144607 _144645 P p lt2 s z f pat g)). Qed.
Lemma lem8194941 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : type557 _144530 _144607 P) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) : (term525 _144529 _144530 _144607 _144645 P p lt2 s f pat z) = (term526 _144529 _144530 _144607 _144645 P p lt2 s z f pat).
Proof. exact (fun_ext (fun g : _144530 -> _144607 => @lem8194940 _144529 _144530 _144607 _144645 P p lt2 s z f pat g)). Qed.
Lemma lem8194942 {_144530 _144607 : Type'} : (@all (_144530 -> _144607)) = (@all (_144530 -> _144607)).
Proof. exact (eq_refl (@all (_144530 -> _144607))). Qed.
Lemma lem8194943 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : type557 _144530 _144607 P) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) : (term527 _144529 _144530 _144607 _144645 P p lt2 s f pat z) = (term528 _144529 _144530 _144607 _144645 P p lt2 s z f pat).
Proof. exact (MK_COMB (@lem8194942 _144530 _144607) (@lem8194941 _144529 _144530 _144607 _144645 P p lt2 s z f pat)). Qed.
Lemma lem8194944 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) : (term529 _144529 _144530 _144607 _144645 P p lt2 s f pat) = (term530 _144529 _144530 _144607 _144645 P p lt2 s f pat).
Proof. exact (fun_ext (fun z : type557 _144530 _144607 P => @lem8194943 _144529 _144530 _144607 _144645 P p lt2 s z f pat)). Qed.
Lemma lem8194945 {_144530 _144607 P : Type'} : (@ex ((_144530 -> _144607) -> P -> _144530)) = (@ex ((_144530 -> _144607) -> P -> _144530)).
Proof. exact (eq_refl (@ex ((_144530 -> _144607) -> P -> _144530))). Qed.
Lemma lem8194946 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) : (term512 _144529 _144530 _144607 _144645 P p lt2 s f pat) = (term531 _144529 _144530 _144607 _144645 P p lt2 s f pat).
Proof. exact (MK_COMB (@lem8194945 _144530 _144607 P) (@lem8194944 _144529 _144530 _144607 _144645 P p lt2 s f pat)). Qed.
Lemma lem8194947 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) : ((term511 _144529 _144530 _144607 _144645 P p lt2 s f pat) = (term512 _144529 _144530 _144607 _144645 P p lt2 s f pat)) = ((term508 _144529 _144530 _144607 _144645 P p lt2 s f pat) = (term531 _144529 _144530 _144607 _144645 P p lt2 s f pat)).
Proof. exact (MK_COMB (@lem8194935 _144529 _144530 _144607 _144645 P p lt2 s f pat) (@lem8194946 _144529 _144530 _144607 _144645 P p lt2 s f pat)). Qed.
Lemma lem8194948 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) : (term508 _144529 _144530 _144607 _144645 P p lt2 s f pat) = (term531 _144529 _144530 _144607 _144645 P p lt2 s f pat).
Proof. exact (EQ_MP (@lem8194947 _144529 _144530 _144607 _144645 P p lt2 s f pat) (@lem8194922 _144529 _144530 _144607 _144645 P p lt2 s f pat)). Qed.
Lemma lem8194949 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) : (term430 _144529 _144530 _144607 _144645 P p lt2 s f pat) = (term531 _144529 _144530 _144607 _144645 P p lt2 s f pat).
Proof. exact (TRANS (@lem8194918 _144529 _144530 _144607 _144645 P p lt2 s f pat) (@lem8194948 _144529 _144530 _144607 _144645 P p lt2 s f pat)). Qed.
Lemma lem8194950 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) : (term431 _144529 _144530 _144607 _144645 P p lt2 s pat) = (term532 _144529 _144530 _144607 _144645 P p lt2 s pat).
Proof. exact (fun_ext (fun f : _144530 -> _144607 => @lem8194949 _144529 _144530 _144607 _144645 P p lt2 s f pat)). Qed.
Lemma lem8194951 {_144530 _144607 : Type'} : (@all (_144530 -> _144607)) = (@all (_144530 -> _144607)).
Proof. exact (eq_refl (@all (_144530 -> _144607))). Qed.
Lemma lem8194952 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) : (term432 _144529 _144530 _144607 _144645 P p lt2 s pat) = (term533 _144529 _144530 _144607 _144645 P p lt2 s pat).
Proof. exact (MK_COMB (@lem8194951 _144530 _144607) (@lem8194950 _144529 _144530 _144607 _144645 P p lt2 s pat)). Qed.
Lemma lem8194954 {A B : Type'} (P : type1413 A B) : (term482 A B P) = (term483 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem8194955 {_144530 _144607 P : Type'} (P' : type495 _144530 _144607 P) : (term534 _144530 _144607 P P') = (term535 _144530 _144607 P P').
Proof. exact (@lem8194954 (_144530 -> _144607) (type557 _144530 _144607 P) P'). Qed.
Lemma lem8194956 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) : (term536 _144529 _144530 _144607 _144645 P p lt2 s pat) = (term537 _144529 _144530 _144607 _144645 P p lt2 s pat).
Proof. exact (@lem8194955 _144530 _144607 P (term538 _144529 _144530 _144607 _144645 P p lt2 s pat)). Qed.
Lemma lem8194957 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) : (term539 _144529 _144530 _144607 _144645 P p lt2 s pat f) = (term530 _144529 _144530 _144607 _144645 P p lt2 s f pat).
Proof. exact (eq_refl (term539 _144529 _144530 _144607 _144645 P p lt2 s pat f)). Qed.
Lemma lem8194958 {_144530 _144607 P : Type'} (z : type557 _144530 _144607 P) : z = z.
Proof. exact (eq_refl z). Qed.
Lemma lem8194959 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (z : type557 _144530 _144607 P) : (term540 _144529 _144530 _144607 _144645 P p lt2 s pat f z) = (term541 _144529 _144530 _144607 _144645 P p lt2 s f pat z).
Proof. exact (MK_COMB (@lem8194957 _144529 _144530 _144607 _144645 P p lt2 s f pat) (@lem8194958 _144530 _144607 P z)). Qed.
Lemma lem8194960 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : type557 _144530 _144607 P) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) : (term541 _144529 _144530 _144607 _144645 P p lt2 s f pat z) = (term528 _144529 _144530 _144607 _144645 P p lt2 s z f pat).
Proof. exact (eq_refl (term541 _144529 _144530 _144607 _144645 P p lt2 s f pat z)). Qed.
Lemma lem8194961 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : type557 _144530 _144607 P) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) : (term540 _144529 _144530 _144607 _144645 P p lt2 s pat f z) = (term528 _144529 _144530 _144607 _144645 P p lt2 s z f pat).
Proof. exact (TRANS (@lem8194959 _144529 _144530 _144607 _144645 P p lt2 s f pat z) (@lem8194960 _144529 _144530 _144607 _144645 P p lt2 s z f pat)). Qed.
Lemma lem8194962 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) : (term542 _144529 _144530 _144607 _144645 P p lt2 s pat f) = (term530 _144529 _144530 _144607 _144645 P p lt2 s f pat).
Proof. exact (fun_ext (fun z : type557 _144530 _144607 P => @lem8194961 _144529 _144530 _144607 _144645 P p lt2 s z f pat)). Qed.
Lemma lem8194963 {_144530 _144607 P : Type'} : (@ex ((_144530 -> _144607) -> P -> _144530)) = (@ex ((_144530 -> _144607) -> P -> _144530)).
Proof. exact (eq_refl (@ex ((_144530 -> _144607) -> P -> _144530))). Qed.
Lemma lem8194964 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) : (term543 _144529 _144530 _144607 _144645 P p lt2 s pat f) = (term531 _144529 _144530 _144607 _144645 P p lt2 s f pat).
Proof. exact (MK_COMB (@lem8194963 _144530 _144607 P) (@lem8194962 _144529 _144530 _144607 _144645 P p lt2 s f pat)). Qed.
Lemma lem8194965 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) : (term544 _144529 _144530 _144607 _144645 P p lt2 s pat) = (term532 _144529 _144530 _144607 _144645 P p lt2 s pat).
Proof. exact (fun_ext (fun f : _144530 -> _144607 => @lem8194964 _144529 _144530 _144607 _144645 P p lt2 s f pat)). Qed.
Lemma lem8194966 {_144530 _144607 : Type'} : (@all (_144530 -> _144607)) = (@all (_144530 -> _144607)).
Proof. exact (eq_refl (@all (_144530 -> _144607))). Qed.
Lemma lem8194967 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) : (term536 _144529 _144530 _144607 _144645 P p lt2 s pat) = (term533 _144529 _144530 _144607 _144645 P p lt2 s pat).
Proof. exact (MK_COMB (@lem8194966 _144530 _144607) (@lem8194965 _144529 _144530 _144607 _144645 P p lt2 s pat)). Qed.
Lemma lem8194968 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8194969 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) : (term545 _144529 _144530 _144607 _144645 P p lt2 s pat) = (term546 _144529 _144530 _144607 _144645 P p lt2 s pat).
Proof. exact (MK_COMB (@lem8194968) (@lem8194967 _144529 _144530 _144607 _144645 P p lt2 s pat)). Qed.
Lemma lem8194970 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) : (term539 _144529 _144530 _144607 _144645 P p lt2 s pat f) = (term530 _144529 _144530 _144607 _144645 P p lt2 s f pat).
Proof. exact (eq_refl (term539 _144529 _144530 _144607 _144645 P p lt2 s pat f)). Qed.
Lemma lem8194971 {_144530 _144607 P : Type'} (z : type518 _144530 _144607 P) (f : _144530 -> _144607) : (z f) = (z f).
Proof. exact (eq_refl (z f)). Qed.
Lemma lem8194972 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (z : type518 _144530 _144607 P) (f : _144530 -> _144607) : (term547 _144529 _144530 _144607 _144645 P p lt2 s pat z f) = (term548 _144529 _144530 _144607 _144645 P p lt2 s pat z f).
Proof. exact (MK_COMB (@lem8194970 _144529 _144530 _144607 _144645 P p lt2 s f pat) (@lem8194971 _144530 _144607 P z f)). Qed.
Lemma lem8194973 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : type518 _144530 _144607 P) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) : (term548 _144529 _144530 _144607 _144645 P p lt2 s pat z f) = (term549 _144529 _144530 _144607 _144645 P p lt2 s z f pat).
Proof. exact (eq_refl (term548 _144529 _144530 _144607 _144645 P p lt2 s pat z f)). Qed.
Lemma lem8194974 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : type518 _144530 _144607 P) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) : (term547 _144529 _144530 _144607 _144645 P p lt2 s pat z f) = (term549 _144529 _144530 _144607 _144645 P p lt2 s z f pat).
Proof. exact (TRANS (@lem8194972 _144529 _144530 _144607 _144645 P p lt2 s pat z f) (@lem8194973 _144529 _144530 _144607 _144645 P p lt2 s z f pat)). Qed.
Lemma lem8194975 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : type518 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) : (term550 _144529 _144530 _144607 _144645 P p lt2 s pat z) = (term551 _144529 _144530 _144607 _144645 P p lt2 s z pat).
Proof. exact (fun_ext (fun f : _144530 -> _144607 => @lem8194974 _144529 _144530 _144607 _144645 P p lt2 s z f pat)). Qed.
Lemma lem8194976 {_144530 _144607 : Type'} : (@all (_144530 -> _144607)) = (@all (_144530 -> _144607)).
Proof. exact (eq_refl (@all (_144530 -> _144607))). Qed.
Lemma lem8194977 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : type518 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) : (term552 _144529 _144530 _144607 _144645 P p lt2 s pat z) = (term553 _144529 _144530 _144607 _144645 P p lt2 s z pat).
Proof. exact (MK_COMB (@lem8194976 _144530 _144607) (@lem8194975 _144529 _144530 _144607 _144645 P p lt2 s z pat)). Qed.
Lemma lem8194978 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) : (term554 _144529 _144530 _144607 _144645 P p lt2 s pat) = (term555 _144529 _144530 _144607 _144645 P p lt2 s pat).
Proof. exact (fun_ext (fun z : type518 _144530 _144607 P => @lem8194977 _144529 _144530 _144607 _144645 P p lt2 s z pat)). Qed.
Lemma lem8194979 {_144530 _144607 P : Type'} : (@ex ((_144530 -> _144607) -> (_144530 -> _144607) -> P -> _144530)) = (@ex ((_144530 -> _144607) -> (_144530 -> _144607) -> P -> _144530)).
Proof. exact (eq_refl (@ex ((_144530 -> _144607) -> (_144530 -> _144607) -> P -> _144530))). Qed.
Lemma lem8194980 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) : (term537 _144529 _144530 _144607 _144645 P p lt2 s pat) = (term556 _144529 _144530 _144607 _144645 P p lt2 s pat).
Proof. exact (MK_COMB (@lem8194979 _144530 _144607 P) (@lem8194978 _144529 _144530 _144607 _144645 P p lt2 s pat)). Qed.
Lemma lem8194981 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) : ((term536 _144529 _144530 _144607 _144645 P p lt2 s pat) = (term537 _144529 _144530 _144607 _144645 P p lt2 s pat)) = ((term533 _144529 _144530 _144607 _144645 P p lt2 s pat) = (term556 _144529 _144530 _144607 _144645 P p lt2 s pat)).
Proof. exact (MK_COMB (@lem8194969 _144529 _144530 _144607 _144645 P p lt2 s pat) (@lem8194980 _144529 _144530 _144607 _144645 P p lt2 s pat)). Qed.
Lemma lem8194982 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) : (term533 _144529 _144530 _144607 _144645 P p lt2 s pat) = (term556 _144529 _144530 _144607 _144645 P p lt2 s pat).
Proof. exact (EQ_MP (@lem8194981 _144529 _144530 _144607 _144645 P p lt2 s pat) (@lem8194956 _144529 _144530 _144607 _144645 P p lt2 s pat)). Qed.
Lemma lem8194984 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) : (term432 _144529 _144530 _144607 _144645 P p lt2 s pat) = (term556 _144529 _144530 _144607 _144645 P p lt2 s pat).
Proof. exact (TRANS (@lem8194952 _144529 _144530 _144607 _144645 P p lt2 s pat) (@lem8194982 _144529 _144530 _144607 _144645 P p lt2 s pat)). Qed.
Lemma lem8194985 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) : (term141 _144529 _144530 _144607 _144645 P p lt2 s pat) = (term556 _144529 _144530 _144607 _144645 P p lt2 s pat).
Proof. exact (TRANS (@lem8194704 _144529 _144530 _144607 _144645 P p lt2 s pat) (@lem8194984 _144529 _144530 _144607 _144645 P p lt2 s pat)). Qed.
Lemma lem8194986 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (h1 : term141 _144529 _144530 _144607 _144645 P p lt2 s pat) : term556 _144529 _144530 _144607 _144645 P p lt2 s pat.
Proof. exact (EQ_MP (@lem8194985 _144529 _144530 _144607 _144645 P p lt2 s pat) (@lem8194646 _144529 _144530 _144607 _144645 P p lt2 s pat h1)). Qed.
Lemma lem8194995 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (z : _144530) : (term404 _144529 _144530 _144607 P lt2 s a f g z) = (term405 _144529 _144530 _144607 P lt2 s a f g z).
Proof. exact (@lem17362 (term406 _144529 _144530 P lt2 z s a) ((f z) = (g z))). Qed.
Lemma lem8194996 {_144530 : Type'} (P : _144530 -> Prop) : (term407 _144530 P) = (term408 _144530 P).
Proof. exact (@lem18392 _144530 P). Qed.
Lemma lem8194997 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term409 _144529 _144530 _144607 P lt2 s a f g) = (term410 _144529 _144530 _144607 P lt2 s a f g).
Proof. exact (@lem8194996 _144530 (term397 _144529 _144530 _144607 P lt2 s a f g)). Qed.
Lemma lem8194998 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (z : _144530) : (term411 _144529 _144530 _144607 P lt2 s a f g z) = (term396 _144529 _144530 _144607 P lt2 s a f g z).
Proof. exact (eq_refl (term411 _144529 _144530 _144607 P lt2 s a f g z)). Qed.
Lemma lem8194999 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8195000 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (z : _144530) : (term412 _144529 _144530 _144607 P lt2 s a f g z) = (term404 _144529 _144530 _144607 P lt2 s a f g z).
Proof. exact (MK_COMB (@lem8194999) (@lem8194998 _144529 _144530 _144607 P lt2 s a f g z)). Qed.
Lemma lem8195001 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (z : _144530) : (term412 _144529 _144530 _144607 P lt2 s a f g z) = (term405 _144529 _144530 _144607 P lt2 s a f g z).
Proof. exact (TRANS (@lem8195000 _144529 _144530 _144607 P lt2 s a f g z) (@lem8194995 _144529 _144530 _144607 P lt2 s a f g z)). Qed.
Lemma lem8195002 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term413 _144529 _144530 _144607 P lt2 s a f g) = (term414 _144529 _144530 _144607 P lt2 s a f g).
Proof. exact (fun_ext (fun z : _144530 => @lem8195001 _144529 _144530 _144607 P lt2 s a f g z)). Qed.
Lemma lem8195003 {_144530 : Type'} : (@ex _144530) = (@ex _144530).
Proof. exact (eq_refl (@ex _144530)). Qed.
Lemma lem8195004 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term410 _144529 _144530 _144607 P lt2 s a f g) = (term415 _144529 _144530 _144607 P lt2 s a f g).
Proof. exact (MK_COMB (@lem8195003 _144530) (@lem8195002 _144529 _144530 _144607 P lt2 s a f g)). Qed.
Lemma lem8195005 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term409 _144529 _144530 _144607 P lt2 s a f g) = (term415 _144529 _144530 _144607 P lt2 s a f g).
Proof. exact (TRANS (@lem8194997 _144529 _144530 _144607 P lt2 s a f g) (@lem8195004 _144529 _144530 _144607 P lt2 s a f g)). Qed.
Lemma lem8195007 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term416 _144530 _144607 P p g a) = (term416 _144530 _144607 P p g a).
Proof. exact (eq_refl (term416 _144530 _144607 P p g a)). Qed.
Lemma lem8195008 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term417 _144529 _144530 _144607 P p lt2 s a f g) = (term418 _144529 _144530 _144607 P p lt2 s a f g).
Proof. exact (MK_COMB (@lem8195007 _144530 _144607 P p g a) (@lem8195005 _144529 _144530 _144607 P lt2 s a f g)). Qed.
Lemma lem8195009 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term419 _144529 _144530 _144607 P p lt2 s a f g) = (term417 _144529 _144530 _144607 P p lt2 s a f g).
Proof. exact (@lem17045 (p g a) (term165 _144529 _144530 _144607 P lt2 s a f g)). Qed.
Lemma lem8195010 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term419 _144529 _144530 _144607 P p lt2 s a f g) = (term418 _144529 _144530 _144607 P p lt2 s a f g).
Proof. exact (TRANS (@lem8195009 _144529 _144530 _144607 P p lt2 s a f g) (@lem8195008 _144529 _144530 _144607 P p lt2 s a f g)). Qed.
Lemma lem8195012 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) : (term416 _144530 _144607 P p f a) = (term416 _144530 _144607 P p f a).
Proof. exact (eq_refl (term416 _144530 _144607 P p f a)). Qed.
Lemma lem8195013 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term420 _144529 _144530 _144607 P p lt2 s a f g) = (term421 _144529 _144530 _144607 P p lt2 s a f g).
Proof. exact (MK_COMB (@lem8195012 _144530 _144607 P p f a) (@lem8195010 _144529 _144530 _144607 P p lt2 s a f g)). Qed.
Lemma lem8195014 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term422 _144529 _144530 _144607 P p lt2 s a f g) = (term420 _144529 _144530 _144607 P p lt2 s a f g).
Proof. exact (@lem17045 (p f a) (term318 _144529 _144530 _144607 P p lt2 s a f g)). Qed.
Lemma lem8195015 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term422 _144529 _144530 _144607 P p lt2 s a f g) = (term421 _144529 _144530 _144607 P p lt2 s a f g).
Proof. exact (TRANS (@lem8195014 _144529 _144530 _144607 P p lt2 s a f g) (@lem8195013 _144529 _144530 _144607 P p lt2 s a f g)). Qed.
Lemma lem8195016 {_144530 _144607 _144645 P : Type'} (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : ((e f a) = (e g a)) = ((e f a) = (e g a)).
Proof. exact (eq_refl ((e f a) = (e g a))). Qed.
Lemma lem8195017 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8195018 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term423 _144529 _144530 _144607 P p lt2 s a f g) = (term424 _144529 _144530 _144607 P p lt2 s a f g).
Proof. exact (MK_COMB (@lem8195017) (@lem8195015 _144529 _144530 _144607 P p lt2 s a f g)). Qed.
Lemma lem8195019 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term425 _144529 _144530 _144607 _144645 P p lt2 s f e g a) = (term426 _144529 _144530 _144607 _144645 P p lt2 s f e g a).
Proof. exact (MK_COMB (@lem8195018 _144529 _144530 _144607 P p lt2 s a f g) (@lem8195016 _144530 _144607 _144645 P f e g a)). Qed.
Lemma lem8195020 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term398 _144529 _144530 _144607 _144645 P p lt2 s f e g a) = (term425 _144529 _144530 _144607 _144645 P p lt2 s f e g a).
Proof. exact (@lem17265 (term317 _144529 _144530 _144607 P p lt2 s a f g) ((e f a) = (e g a))). Qed.
Lemma lem8195021 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term398 _144529 _144530 _144607 _144645 P p lt2 s f e g a) = (term426 _144529 _144530 _144607 _144645 P p lt2 s f e g a).
Proof. exact (TRANS (@lem8195020 _144529 _144530 _144607 _144645 P p lt2 s f e g a) (@lem8195019 _144529 _144530 _144607 _144645 P p lt2 s f e g a)). Qed.
Lemma lem8195022 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) : (term399 _144529 _144530 _144607 _144645 P p lt2 s f e g) = (term427 _144529 _144530 _144607 _144645 P p lt2 s f e g).
Proof. exact (fun_ext (fun a : P => @lem8195021 _144529 _144530 _144607 _144645 P p lt2 s f e g a)). Qed.
Lemma lem8195023 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8195024 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) : (term400 _144529 _144530 _144607 _144645 P p lt2 s f e g) = (term428 _144529 _144530 _144607 _144645 P p lt2 s f e g).
Proof. exact (MK_COMB (@lem8195023 P) (@lem8195022 _144529 _144530 _144607 _144645 P p lt2 s f e g)). Qed.
Lemma lem8195025 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) : (term401 _144529 _144530 _144607 _144645 P p lt2 s f e) = (term429 _144529 _144530 _144607 _144645 P p lt2 s f e).
Proof. exact (fun_ext (fun g : _144530 -> _144607 => @lem8195024 _144529 _144530 _144607 _144645 P p lt2 s f e g)). Qed.
Lemma lem8195026 {_144530 _144607 : Type'} : (@all (_144530 -> _144607)) = (@all (_144530 -> _144607)).
Proof. exact (eq_refl (@all (_144530 -> _144607))). Qed.
Lemma lem8195027 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) : (term402 _144529 _144530 _144607 _144645 P p lt2 s f e) = (term430 _144529 _144530 _144607 _144645 P p lt2 s f e).
Proof. exact (MK_COMB (@lem8195026 _144530 _144607) (@lem8195025 _144529 _144530 _144607 _144645 P p lt2 s f e)). Qed.
Lemma lem8195028 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (e : type564 _144530 _144607 _144645 P) : (term403 _144529 _144530 _144607 _144645 P p lt2 s e) = (term431 _144529 _144530 _144607 _144645 P p lt2 s e).
Proof. exact (fun_ext (fun f : _144530 -> _144607 => @lem8195027 _144529 _144530 _144607 _144645 P p lt2 s f e)). Qed.
Lemma lem8195029 {_144530 _144607 : Type'} : (@all (_144530 -> _144607)) = (@all (_144530 -> _144607)).
Proof. exact (eq_refl (@all (_144530 -> _144607))). Qed.
Lemma lem8195030 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (e : type564 _144530 _144607 _144645 P) : (term141 _144529 _144530 _144607 _144645 P p lt2 s e) = (term432 _144529 _144530 _144607 _144645 P p lt2 s e).
Proof. exact (MK_COMB (@lem8195029 _144530 _144607) (@lem8195028 _144529 _144530 _144607 _144645 P p lt2 s e)). Qed.
Lemma lem8195137 {A : Type'} (P : Prop) (Q : A -> Prop) : (term433 A P Q) = (term434 A P Q).
Proof. exact (EQ_MP (@lem18911 A P Q) (@lem18910 A P Q)). Qed.
Lemma lem8195138 {_144530 : Type'} (P : Prop) (Q : _144530 -> Prop) : (term433 _144530 P Q) = (term434 _144530 P Q).
Proof. exact (@lem8195137 _144530 P Q). Qed.
Lemma lem8195139 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term435 _144529 _144530 _144607 P p lt2 s a f g) = (term436 _144529 _144530 _144607 P p lt2 s a f g).
Proof. exact (@lem8195138 _144530 (term437 _144530 _144607 P p g a) (term414 _144529 _144530 _144607 P lt2 s a f g)). Qed.
Lemma lem8195140 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (z : _144530) : (term438 _144529 _144530 _144607 P lt2 s a f g z) = (term405 _144529 _144530 _144607 P lt2 s a f g z).
Proof. exact (eq_refl (term438 _144529 _144530 _144607 P lt2 s a f g z)). Qed.
Lemma lem8195141 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term439 _144529 _144530 _144607 P lt2 s a f g) = (term414 _144529 _144530 _144607 P lt2 s a f g).
Proof. exact (fun_ext (fun z : _144530 => @lem8195140 _144529 _144530 _144607 P lt2 s a f g z)). Qed.
Lemma lem8195142 {_144530 : Type'} : (@ex _144530) = (@ex _144530).
Proof. exact (eq_refl (@ex _144530)). Qed.
Lemma lem8195143 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term440 _144529 _144530 _144607 P lt2 s a f g) = (term415 _144529 _144530 _144607 P lt2 s a f g).
Proof. exact (MK_COMB (@lem8195142 _144530) (@lem8195141 _144529 _144530 _144607 P lt2 s a f g)). Qed.
Lemma lem8195144 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term416 _144530 _144607 P p g a) = (term416 _144530 _144607 P p g a).
Proof. exact (eq_refl (term416 _144530 _144607 P p g a)). Qed.
Lemma lem8195145 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term435 _144529 _144530 _144607 P p lt2 s a f g) = (term418 _144529 _144530 _144607 P p lt2 s a f g).
Proof. exact (MK_COMB (@lem8195144 _144530 _144607 P p g a) (@lem8195143 _144529 _144530 _144607 P lt2 s a f g)). Qed.
Lemma lem8195146 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8195147 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term441 _144529 _144530 _144607 P p lt2 s a f g) = (term442 _144529 _144530 _144607 P p lt2 s a f g).
Proof. exact (MK_COMB (@lem8195146) (@lem8195145 _144529 _144530 _144607 P p lt2 s a f g)). Qed.
Lemma lem8195148 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (z : _144530) : (term438 _144529 _144530 _144607 P lt2 s a f g z) = (term405 _144529 _144530 _144607 P lt2 s a f g z).
Proof. exact (eq_refl (term438 _144529 _144530 _144607 P lt2 s a f g z)). Qed.
Lemma lem8195149 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term416 _144530 _144607 P p g a) = (term416 _144530 _144607 P p g a).
Proof. exact (eq_refl (term416 _144530 _144607 P p g a)). Qed.
Lemma lem8195150 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (z : _144530) : (term443 _144529 _144530 _144607 P p lt2 s a f g z) = (term444 _144529 _144530 _144607 P p lt2 s a f g z).
Proof. exact (MK_COMB (@lem8195149 _144530 _144607 P p g a) (@lem8195148 _144529 _144530 _144607 P lt2 s a f g z)). Qed.
Lemma lem8195151 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term445 _144529 _144530 _144607 P p lt2 s a f g) = (term446 _144529 _144530 _144607 P p lt2 s a f g).
Proof. exact (fun_ext (fun z : _144530 => @lem8195150 _144529 _144530 _144607 P p lt2 s a f g z)). Qed.
Lemma lem8195152 {_144530 : Type'} : (@ex _144530) = (@ex _144530).
Proof. exact (eq_refl (@ex _144530)). Qed.
Lemma lem8195153 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term436 _144529 _144530 _144607 P p lt2 s a f g) = (term447 _144529 _144530 _144607 P p lt2 s a f g).
Proof. exact (MK_COMB (@lem8195152 _144530) (@lem8195151 _144529 _144530 _144607 P p lt2 s a f g)). Qed.
Lemma lem8195154 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : ((term435 _144529 _144530 _144607 P p lt2 s a f g) = (term436 _144529 _144530 _144607 P p lt2 s a f g)) = ((term418 _144529 _144530 _144607 P p lt2 s a f g) = (term447 _144529 _144530 _144607 P p lt2 s a f g)).
Proof. exact (MK_COMB (@lem8195147 _144529 _144530 _144607 P p lt2 s a f g) (@lem8195153 _144529 _144530 _144607 P p lt2 s a f g)). Qed.
Lemma lem8195155 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term418 _144529 _144530 _144607 P p lt2 s a f g) = (term447 _144529 _144530 _144607 P p lt2 s a f g).
Proof. exact (EQ_MP (@lem8195154 _144529 _144530 _144607 P p lt2 s a f g) (@lem8195139 _144529 _144530 _144607 P p lt2 s a f g)). Qed.
Lemma lem8195156 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) : (term416 _144530 _144607 P p f a) = (term416 _144530 _144607 P p f a).
Proof. exact (eq_refl (term416 _144530 _144607 P p f a)). Qed.
Lemma lem8195157 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term421 _144529 _144530 _144607 P p lt2 s a f g) = (term448 _144529 _144530 _144607 P p lt2 s a f g).
Proof. exact (MK_COMB (@lem8195156 _144530 _144607 P p f a) (@lem8195155 _144529 _144530 _144607 P p lt2 s a f g)). Qed.
Lemma lem8195159 {A : Type'} (P : Prop) (Q : A -> Prop) : (term433 A P Q) = (term434 A P Q).
Proof. exact (EQ_MP (@lem18911 A P Q) (@lem18910 A P Q)). Qed.
Lemma lem8195160 {_144530 : Type'} (P : Prop) (Q : _144530 -> Prop) : (term433 _144530 P Q) = (term434 _144530 P Q).
Proof. exact (@lem8195159 _144530 P Q). Qed.
Lemma lem8195161 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term449 _144529 _144530 _144607 P p lt2 s a f g) = (term450 _144529 _144530 _144607 P p lt2 s a f g).
Proof. exact (@lem8195160 _144530 (term437 _144530 _144607 P p f a) (term446 _144529 _144530 _144607 P p lt2 s a f g)). Qed.
Lemma lem8195162 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (z : _144530) : (term451 _144529 _144530 _144607 P p lt2 s a f g z) = (term444 _144529 _144530 _144607 P p lt2 s a f g z).
Proof. exact (eq_refl (term451 _144529 _144530 _144607 P p lt2 s a f g z)). Qed.
Lemma lem8195163 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term452 _144529 _144530 _144607 P p lt2 s a f g) = (term446 _144529 _144530 _144607 P p lt2 s a f g).
Proof. exact (fun_ext (fun z : _144530 => @lem8195162 _144529 _144530 _144607 P p lt2 s a f g z)). Qed.
Lemma lem8195164 {_144530 : Type'} : (@ex _144530) = (@ex _144530).
Proof. exact (eq_refl (@ex _144530)). Qed.
Lemma lem8195165 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term453 _144529 _144530 _144607 P p lt2 s a f g) = (term447 _144529 _144530 _144607 P p lt2 s a f g).
Proof. exact (MK_COMB (@lem8195164 _144530) (@lem8195163 _144529 _144530 _144607 P p lt2 s a f g)). Qed.
Lemma lem8195166 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) : (term416 _144530 _144607 P p f a) = (term416 _144530 _144607 P p f a).
Proof. exact (eq_refl (term416 _144530 _144607 P p f a)). Qed.
Lemma lem8195167 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term449 _144529 _144530 _144607 P p lt2 s a f g) = (term448 _144529 _144530 _144607 P p lt2 s a f g).
Proof. exact (MK_COMB (@lem8195166 _144530 _144607 P p f a) (@lem8195165 _144529 _144530 _144607 P p lt2 s a f g)). Qed.
Lemma lem8195168 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8195169 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term454 _144529 _144530 _144607 P p lt2 s a f g) = (term455 _144529 _144530 _144607 P p lt2 s a f g).
Proof. exact (MK_COMB (@lem8195168) (@lem8195167 _144529 _144530 _144607 P p lt2 s a f g)). Qed.
Lemma lem8195170 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (z : _144530) : (term451 _144529 _144530 _144607 P p lt2 s a f g z) = (term444 _144529 _144530 _144607 P p lt2 s a f g z).
Proof. exact (eq_refl (term451 _144529 _144530 _144607 P p lt2 s a f g z)). Qed.
Lemma lem8195171 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) : (term416 _144530 _144607 P p f a) = (term416 _144530 _144607 P p f a).
Proof. exact (eq_refl (term416 _144530 _144607 P p f a)). Qed.
Lemma lem8195172 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (z : _144530) : (term456 _144529 _144530 _144607 P p lt2 s a f g z) = (term457 _144529 _144530 _144607 P p lt2 s a f g z).
Proof. exact (MK_COMB (@lem8195171 _144530 _144607 P p f a) (@lem8195170 _144529 _144530 _144607 P p lt2 s a f g z)). Qed.
Lemma lem8195173 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term458 _144529 _144530 _144607 P p lt2 s a f g) = (term459 _144529 _144530 _144607 P p lt2 s a f g).
Proof. exact (fun_ext (fun z : _144530 => @lem8195172 _144529 _144530 _144607 P p lt2 s a f g z)). Qed.
Lemma lem8195174 {_144530 : Type'} : (@ex _144530) = (@ex _144530).
Proof. exact (eq_refl (@ex _144530)). Qed.
Lemma lem8195175 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term450 _144529 _144530 _144607 P p lt2 s a f g) = (term460 _144529 _144530 _144607 P p lt2 s a f g).
Proof. exact (MK_COMB (@lem8195174 _144530) (@lem8195173 _144529 _144530 _144607 P p lt2 s a f g)). Qed.
Lemma lem8195176 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : ((term449 _144529 _144530 _144607 P p lt2 s a f g) = (term450 _144529 _144530 _144607 P p lt2 s a f g)) = ((term448 _144529 _144530 _144607 P p lt2 s a f g) = (term460 _144529 _144530 _144607 P p lt2 s a f g)).
Proof. exact (MK_COMB (@lem8195169 _144529 _144530 _144607 P p lt2 s a f g) (@lem8195175 _144529 _144530 _144607 P p lt2 s a f g)). Qed.
Lemma lem8195177 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term448 _144529 _144530 _144607 P p lt2 s a f g) = (term460 _144529 _144530 _144607 P p lt2 s a f g).
Proof. exact (EQ_MP (@lem8195176 _144529 _144530 _144607 P p lt2 s a f g) (@lem8195161 _144529 _144530 _144607 P p lt2 s a f g)). Qed.
Lemma lem8195178 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term421 _144529 _144530 _144607 P p lt2 s a f g) = (term460 _144529 _144530 _144607 P p lt2 s a f g).
Proof. exact (TRANS (@lem8195157 _144529 _144530 _144607 P p lt2 s a f g) (@lem8195177 _144529 _144530 _144607 P p lt2 s a f g)). Qed.
Lemma lem8195179 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8195180 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term424 _144529 _144530 _144607 P p lt2 s a f g) = (term461 _144529 _144530 _144607 P p lt2 s a f g).
Proof. exact (MK_COMB (@lem8195179) (@lem8195178 _144529 _144530 _144607 P p lt2 s a f g)). Qed.
Lemma lem8195181 {_144530 _144607 _144645 P : Type'} (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : ((e f a) = (e g a)) = ((e f a) = (e g a)).
Proof. exact (eq_refl ((e f a) = (e g a))). Qed.
Lemma lem8195182 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term426 _144529 _144530 _144607 _144645 P p lt2 s f e g a) = (term462 _144529 _144530 _144607 _144645 P p lt2 s f e g a).
Proof. exact (MK_COMB (@lem8195180 _144529 _144530 _144607 P p lt2 s a f g) (@lem8195181 _144530 _144607 _144645 P f e g a)). Qed.
Lemma lem8195184 {A : Type'} (P : A -> Prop) (Q : Prop) : (term463 A P Q) = (term464 A P Q).
Proof. exact (EQ_MP (@lem18905 A P Q) (@lem18904 A P Q)). Qed.
Lemma lem8195185 {_144530 : Type'} (P : _144530 -> Prop) (Q : Prop) : (term463 _144530 P Q) = (term464 _144530 P Q).
Proof. exact (@lem8195184 _144530 P Q). Qed.
Lemma lem8195186 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term465 _144529 _144530 _144607 _144645 P p lt2 s f e g a) = (term466 _144529 _144530 _144607 _144645 P p lt2 s f e g a).
Proof. exact (@lem8195185 _144530 (term459 _144529 _144530 _144607 P p lt2 s a f g) ((e f a) = (e g a))). Qed.
Lemma lem8195187 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (z : _144530) : (term467 _144529 _144530 _144607 P p lt2 s a f g z) = (term457 _144529 _144530 _144607 P p lt2 s a f g z).
Proof. exact (eq_refl (term467 _144529 _144530 _144607 P p lt2 s a f g z)). Qed.
Lemma lem8195188 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term468 _144529 _144530 _144607 P p lt2 s a f g) = (term459 _144529 _144530 _144607 P p lt2 s a f g).
Proof. exact (fun_ext (fun z : _144530 => @lem8195187 _144529 _144530 _144607 P p lt2 s a f g z)). Qed.
Lemma lem8195189 {_144530 : Type'} : (@ex _144530) = (@ex _144530).
Proof. exact (eq_refl (@ex _144530)). Qed.
Lemma lem8195190 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term469 _144529 _144530 _144607 P p lt2 s a f g) = (term460 _144529 _144530 _144607 P p lt2 s a f g).
Proof. exact (MK_COMB (@lem8195189 _144530) (@lem8195188 _144529 _144530 _144607 P p lt2 s a f g)). Qed.
Lemma lem8195191 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8195192 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term470 _144529 _144530 _144607 P p lt2 s a f g) = (term461 _144529 _144530 _144607 P p lt2 s a f g).
Proof. exact (MK_COMB (@lem8195191) (@lem8195190 _144529 _144530 _144607 P p lt2 s a f g)). Qed.
Lemma lem8195193 {_144530 _144607 _144645 P : Type'} (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : ((e f a) = (e g a)) = ((e f a) = (e g a)).
Proof. exact (eq_refl ((e f a) = (e g a))). Qed.
Lemma lem8195194 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term465 _144529 _144530 _144607 _144645 P p lt2 s f e g a) = (term462 _144529 _144530 _144607 _144645 P p lt2 s f e g a).
Proof. exact (MK_COMB (@lem8195192 _144529 _144530 _144607 P p lt2 s a f g) (@lem8195193 _144530 _144607 _144645 P f e g a)). Qed.
Lemma lem8195195 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8195196 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term471 _144529 _144530 _144607 _144645 P p lt2 s f e g a) = (term472 _144529 _144530 _144607 _144645 P p lt2 s f e g a).
Proof. exact (MK_COMB (@lem8195195) (@lem8195194 _144529 _144530 _144607 _144645 P p lt2 s f e g a)). Qed.
Lemma lem8195197 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (z : _144530) : (term467 _144529 _144530 _144607 P p lt2 s a f g z) = (term457 _144529 _144530 _144607 P p lt2 s a f g z).
Proof. exact (eq_refl (term467 _144529 _144530 _144607 P p lt2 s a f g z)). Qed.
Lemma lem8195198 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8195199 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (z : _144530) : (term473 _144529 _144530 _144607 P p lt2 s a f g z) = (term474 _144529 _144530 _144607 P p lt2 s a f g z).
Proof. exact (MK_COMB (@lem8195198) (@lem8195197 _144529 _144530 _144607 P p lt2 s a f g z)). Qed.
Lemma lem8195200 {_144530 _144607 _144645 P : Type'} (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : ((e f a) = (e g a)) = ((e f a) = (e g a)).
Proof. exact (eq_refl ((e f a) = (e g a))). Qed.
Lemma lem8195201 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : _144530) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term475 _144529 _144530 _144607 _144645 P p lt2 s z f e g a) = (term476 _144529 _144530 _144607 _144645 P p lt2 s z f e g a).
Proof. exact (MK_COMB (@lem8195199 _144529 _144530 _144607 P p lt2 s a f g z) (@lem8195200 _144530 _144607 _144645 P f e g a)). Qed.
Lemma lem8195202 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term477 _144529 _144530 _144607 _144645 P p lt2 s f e g a) = (term478 _144529 _144530 _144607 _144645 P p lt2 s f e g a).
Proof. exact (fun_ext (fun z : _144530 => @lem8195201 _144529 _144530 _144607 _144645 P p lt2 s z f e g a)). Qed.
Lemma lem8195203 {_144530 : Type'} : (@ex _144530) = (@ex _144530).
Proof. exact (eq_refl (@ex _144530)). Qed.
Lemma lem8195204 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term466 _144529 _144530 _144607 _144645 P p lt2 s f e g a) = (term479 _144529 _144530 _144607 _144645 P p lt2 s f e g a).
Proof. exact (MK_COMB (@lem8195203 _144530) (@lem8195202 _144529 _144530 _144607 _144645 P p lt2 s f e g a)). Qed.
Lemma lem8195205 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : ((term465 _144529 _144530 _144607 _144645 P p lt2 s f e g a) = (term466 _144529 _144530 _144607 _144645 P p lt2 s f e g a)) = ((term462 _144529 _144530 _144607 _144645 P p lt2 s f e g a) = (term479 _144529 _144530 _144607 _144645 P p lt2 s f e g a)).
Proof. exact (MK_COMB (@lem8195196 _144529 _144530 _144607 _144645 P p lt2 s f e g a) (@lem8195204 _144529 _144530 _144607 _144645 P p lt2 s f e g a)). Qed.
Lemma lem8195206 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term462 _144529 _144530 _144607 _144645 P p lt2 s f e g a) = (term479 _144529 _144530 _144607 _144645 P p lt2 s f e g a).
Proof. exact (EQ_MP (@lem8195205 _144529 _144530 _144607 _144645 P p lt2 s f e g a) (@lem8195186 _144529 _144530 _144607 _144645 P p lt2 s f e g a)). Qed.
Lemma lem8195207 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term426 _144529 _144530 _144607 _144645 P p lt2 s f e g a) = (term479 _144529 _144530 _144607 _144645 P p lt2 s f e g a).
Proof. exact (TRANS (@lem8195182 _144529 _144530 _144607 _144645 P p lt2 s f e g a) (@lem8195206 _144529 _144530 _144607 _144645 P p lt2 s f e g a)). Qed.
Lemma lem8195208 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) : (term427 _144529 _144530 _144607 _144645 P p lt2 s f e g) = (term480 _144529 _144530 _144607 _144645 P p lt2 s f e g).
Proof. exact (fun_ext (fun a : P => @lem8195207 _144529 _144530 _144607 _144645 P p lt2 s f e g a)). Qed.
Lemma lem8195209 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8195210 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) : (term428 _144529 _144530 _144607 _144645 P p lt2 s f e g) = (term481 _144529 _144530 _144607 _144645 P p lt2 s f e g).
Proof. exact (MK_COMB (@lem8195209 P) (@lem8195208 _144529 _144530 _144607 _144645 P p lt2 s f e g)). Qed.
Lemma lem8195212 {A B : Type'} (P : type1413 A B) : (term482 A B P) = (term483 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem8195213 {_144530 P : Type'} (P' : type1470 _144530 P) : (term484 _144530 P P') = (term485 _144530 P P').
Proof. exact (@lem8195212 P _144530 P'). Qed.
Lemma lem8195214 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) : (term486 _144529 _144530 _144607 _144645 P p lt2 s f e g) = (term487 _144529 _144530 _144607 _144645 P p lt2 s f e g).
Proof. exact (@lem8195213 _144530 P (term488 _144529 _144530 _144607 _144645 P p lt2 s f e g)). Qed.
Lemma lem8195215 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term489 _144529 _144530 _144607 _144645 P p lt2 s f e g a) = (term478 _144529 _144530 _144607 _144645 P p lt2 s f e g a).
Proof. exact (eq_refl (term489 _144529 _144530 _144607 _144645 P p lt2 s f e g a)). Qed.
Lemma lem8195216 {_144530 : Type'} (z : _144530) : z = z.
Proof. exact (eq_refl z). Qed.
Lemma lem8195217 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) (z : _144530) : (term490 _144529 _144530 _144607 _144645 P p lt2 s f e g a z) = (term491 _144529 _144530 _144607 _144645 P p lt2 s f e g a z).
Proof. exact (MK_COMB (@lem8195215 _144529 _144530 _144607 _144645 P p lt2 s f e g a) (@lem8195216 _144530 z)). Qed.
Lemma lem8195218 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : _144530) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term491 _144529 _144530 _144607 _144645 P p lt2 s f e g a z) = (term476 _144529 _144530 _144607 _144645 P p lt2 s z f e g a).
Proof. exact (eq_refl (term491 _144529 _144530 _144607 _144645 P p lt2 s f e g a z)). Qed.
Lemma lem8195219 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : _144530) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term490 _144529 _144530 _144607 _144645 P p lt2 s f e g a z) = (term476 _144529 _144530 _144607 _144645 P p lt2 s z f e g a).
Proof. exact (TRANS (@lem8195217 _144529 _144530 _144607 _144645 P p lt2 s f e g a z) (@lem8195218 _144529 _144530 _144607 _144645 P p lt2 s z f e g a)). Qed.
Lemma lem8195220 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term492 _144529 _144530 _144607 _144645 P p lt2 s f e g a) = (term478 _144529 _144530 _144607 _144645 P p lt2 s f e g a).
Proof. exact (fun_ext (fun z : _144530 => @lem8195219 _144529 _144530 _144607 _144645 P p lt2 s z f e g a)). Qed.
Lemma lem8195221 {_144530 : Type'} : (@ex _144530) = (@ex _144530).
Proof. exact (eq_refl (@ex _144530)). Qed.
Lemma lem8195222 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term493 _144529 _144530 _144607 _144645 P p lt2 s f e g a) = (term479 _144529 _144530 _144607 _144645 P p lt2 s f e g a).
Proof. exact (MK_COMB (@lem8195221 _144530) (@lem8195220 _144529 _144530 _144607 _144645 P p lt2 s f e g a)). Qed.
Lemma lem8195223 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) : (term494 _144529 _144530 _144607 _144645 P p lt2 s f e g) = (term480 _144529 _144530 _144607 _144645 P p lt2 s f e g).
Proof. exact (fun_ext (fun a : P => @lem8195222 _144529 _144530 _144607 _144645 P p lt2 s f e g a)). Qed.
Lemma lem8195224 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8195225 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) : (term486 _144529 _144530 _144607 _144645 P p lt2 s f e g) = (term481 _144529 _144530 _144607 _144645 P p lt2 s f e g).
Proof. exact (MK_COMB (@lem8195224 P) (@lem8195223 _144529 _144530 _144607 _144645 P p lt2 s f e g)). Qed.
Lemma lem8195226 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8195227 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) : (term495 _144529 _144530 _144607 _144645 P p lt2 s f e g) = (term496 _144529 _144530 _144607 _144645 P p lt2 s f e g).
Proof. exact (MK_COMB (@lem8195226) (@lem8195225 _144529 _144530 _144607 _144645 P p lt2 s f e g)). Qed.
Lemma lem8195228 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term489 _144529 _144530 _144607 _144645 P p lt2 s f e g a) = (term478 _144529 _144530 _144607 _144645 P p lt2 s f e g a).
Proof. exact (eq_refl (term489 _144529 _144530 _144607 _144645 P p lt2 s f e g a)). Qed.
Lemma lem8195229 {_144530 P : Type'} (z : P -> _144530) (a : P) : (z a) = (z a).
Proof. exact (eq_refl (z a)). Qed.
Lemma lem8195230 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (z : P -> _144530) (a : P) : (term497 _144529 _144530 _144607 _144645 P p lt2 s f e g z a) = (term498 _144529 _144530 _144607 _144645 P p lt2 s f e g z a).
Proof. exact (MK_COMB (@lem8195228 _144529 _144530 _144607 _144645 P p lt2 s f e g a) (@lem8195229 _144530 P z a)). Qed.
Lemma lem8195231 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : P -> _144530) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term498 _144529 _144530 _144607 _144645 P p lt2 s f e g z a) = (term499 _144529 _144530 _144607 _144645 P p lt2 s z f e g a).
Proof. exact (eq_refl (term498 _144529 _144530 _144607 _144645 P p lt2 s f e g z a)). Qed.
Lemma lem8195232 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : P -> _144530) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term497 _144529 _144530 _144607 _144645 P p lt2 s f e g z a) = (term499 _144529 _144530 _144607 _144645 P p lt2 s z f e g a).
Proof. exact (TRANS (@lem8195230 _144529 _144530 _144607 _144645 P p lt2 s f e g z a) (@lem8195231 _144529 _144530 _144607 _144645 P p lt2 s z f e g a)). Qed.
Lemma lem8195233 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : P -> _144530) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) : (term500 _144529 _144530 _144607 _144645 P p lt2 s f e g z) = (term501 _144529 _144530 _144607 _144645 P p lt2 s z f e g).
Proof. exact (fun_ext (fun a : P => @lem8195232 _144529 _144530 _144607 _144645 P p lt2 s z f e g a)). Qed.
Lemma lem8195234 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8195235 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : P -> _144530) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) : (term502 _144529 _144530 _144607 _144645 P p lt2 s f e g z) = (term503 _144529 _144530 _144607 _144645 P p lt2 s z f e g).
Proof. exact (MK_COMB (@lem8195234 P) (@lem8195233 _144529 _144530 _144607 _144645 P p lt2 s z f e g)). Qed.
Lemma lem8195236 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) : (term504 _144529 _144530 _144607 _144645 P p lt2 s f e g) = (term505 _144529 _144530 _144607 _144645 P p lt2 s f e g).
Proof. exact (fun_ext (fun z : P -> _144530 => @lem8195235 _144529 _144530 _144607 _144645 P p lt2 s z f e g)). Qed.
Lemma lem8195237 {_144530 P : Type'} : (@ex (P -> _144530)) = (@ex (P -> _144530)).
Proof. exact (eq_refl (@ex (P -> _144530))). Qed.
Lemma lem8195238 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) : (term487 _144529 _144530 _144607 _144645 P p lt2 s f e g) = (term506 _144529 _144530 _144607 _144645 P p lt2 s f e g).
Proof. exact (MK_COMB (@lem8195237 _144530 P) (@lem8195236 _144529 _144530 _144607 _144645 P p lt2 s f e g)). Qed.
Lemma lem8195239 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) : ((term486 _144529 _144530 _144607 _144645 P p lt2 s f e g) = (term487 _144529 _144530 _144607 _144645 P p lt2 s f e g)) = ((term481 _144529 _144530 _144607 _144645 P p lt2 s f e g) = (term506 _144529 _144530 _144607 _144645 P p lt2 s f e g)).
Proof. exact (MK_COMB (@lem8195227 _144529 _144530 _144607 _144645 P p lt2 s f e g) (@lem8195238 _144529 _144530 _144607 _144645 P p lt2 s f e g)). Qed.
Lemma lem8195240 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) : (term481 _144529 _144530 _144607 _144645 P p lt2 s f e g) = (term506 _144529 _144530 _144607 _144645 P p lt2 s f e g).
Proof. exact (EQ_MP (@lem8195239 _144529 _144530 _144607 _144645 P p lt2 s f e g) (@lem8195214 _144529 _144530 _144607 _144645 P p lt2 s f e g)). Qed.
Lemma lem8195241 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) : (term428 _144529 _144530 _144607 _144645 P p lt2 s f e g) = (term506 _144529 _144530 _144607 _144645 P p lt2 s f e g).
Proof. exact (TRANS (@lem8195210 _144529 _144530 _144607 _144645 P p lt2 s f e g) (@lem8195240 _144529 _144530 _144607 _144645 P p lt2 s f e g)). Qed.
Lemma lem8195242 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) : (term429 _144529 _144530 _144607 _144645 P p lt2 s f e) = (term507 _144529 _144530 _144607 _144645 P p lt2 s f e).
Proof. exact (fun_ext (fun g : _144530 -> _144607 => @lem8195241 _144529 _144530 _144607 _144645 P p lt2 s f e g)). Qed.
Lemma lem8195243 {_144530 _144607 : Type'} : (@all (_144530 -> _144607)) = (@all (_144530 -> _144607)).
Proof. exact (eq_refl (@all (_144530 -> _144607))). Qed.
Lemma lem8195244 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) : (term430 _144529 _144530 _144607 _144645 P p lt2 s f e) = (term508 _144529 _144530 _144607 _144645 P p lt2 s f e).
Proof. exact (MK_COMB (@lem8195243 _144530 _144607) (@lem8195242 _144529 _144530 _144607 _144645 P p lt2 s f e)). Qed.
Lemma lem8195246 {A B : Type'} (P : type1413 A B) : (term482 A B P) = (term483 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem8195247 {_144530 _144607 P : Type'} (P' : type537 _144530 _144607 P) : (term509 _144530 _144607 P P') = (term510 _144530 _144607 P P').
Proof. exact (@lem8195246 (_144530 -> _144607) (P -> _144530) P'). Qed.
Lemma lem8195248 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) : (term511 _144529 _144530 _144607 _144645 P p lt2 s f e) = (term512 _144529 _144530 _144607 _144645 P p lt2 s f e).
Proof. exact (@lem8195247 _144530 _144607 P (term513 _144529 _144530 _144607 _144645 P p lt2 s f e)). Qed.
Lemma lem8195249 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) : (term514 _144529 _144530 _144607 _144645 P p lt2 s f e g) = (term505 _144529 _144530 _144607 _144645 P p lt2 s f e g).
Proof. exact (eq_refl (term514 _144529 _144530 _144607 _144645 P p lt2 s f e g)). Qed.
Lemma lem8195250 {_144530 P : Type'} (z : P -> _144530) : z = z.
Proof. exact (eq_refl z). Qed.
Lemma lem8195251 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (z : P -> _144530) : (term515 _144529 _144530 _144607 _144645 P p lt2 s f e g z) = (term516 _144529 _144530 _144607 _144645 P p lt2 s f e g z).
Proof. exact (MK_COMB (@lem8195249 _144529 _144530 _144607 _144645 P p lt2 s f e g) (@lem8195250 _144530 P z)). Qed.
Lemma lem8195252 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : P -> _144530) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) : (term516 _144529 _144530 _144607 _144645 P p lt2 s f e g z) = (term503 _144529 _144530 _144607 _144645 P p lt2 s z f e g).
Proof. exact (eq_refl (term516 _144529 _144530 _144607 _144645 P p lt2 s f e g z)). Qed.
Lemma lem8195253 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : P -> _144530) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) : (term515 _144529 _144530 _144607 _144645 P p lt2 s f e g z) = (term503 _144529 _144530 _144607 _144645 P p lt2 s z f e g).
Proof. exact (TRANS (@lem8195251 _144529 _144530 _144607 _144645 P p lt2 s f e g z) (@lem8195252 _144529 _144530 _144607 _144645 P p lt2 s z f e g)). Qed.
Lemma lem8195254 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) : (term517 _144529 _144530 _144607 _144645 P p lt2 s f e g) = (term505 _144529 _144530 _144607 _144645 P p lt2 s f e g).
Proof. exact (fun_ext (fun z : P -> _144530 => @lem8195253 _144529 _144530 _144607 _144645 P p lt2 s z f e g)). Qed.
Lemma lem8195255 {_144530 P : Type'} : (@ex (P -> _144530)) = (@ex (P -> _144530)).
Proof. exact (eq_refl (@ex (P -> _144530))). Qed.
Lemma lem8195256 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) : (term518 _144529 _144530 _144607 _144645 P p lt2 s f e g) = (term506 _144529 _144530 _144607 _144645 P p lt2 s f e g).
Proof. exact (MK_COMB (@lem8195255 _144530 P) (@lem8195254 _144529 _144530 _144607 _144645 P p lt2 s f e g)). Qed.
Lemma lem8195257 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) : (term519 _144529 _144530 _144607 _144645 P p lt2 s f e) = (term507 _144529 _144530 _144607 _144645 P p lt2 s f e).
Proof. exact (fun_ext (fun g : _144530 -> _144607 => @lem8195256 _144529 _144530 _144607 _144645 P p lt2 s f e g)). Qed.
Lemma lem8195258 {_144530 _144607 : Type'} : (@all (_144530 -> _144607)) = (@all (_144530 -> _144607)).
Proof. exact (eq_refl (@all (_144530 -> _144607))). Qed.
Lemma lem8195259 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) : (term511 _144529 _144530 _144607 _144645 P p lt2 s f e) = (term508 _144529 _144530 _144607 _144645 P p lt2 s f e).
Proof. exact (MK_COMB (@lem8195258 _144530 _144607) (@lem8195257 _144529 _144530 _144607 _144645 P p lt2 s f e)). Qed.
Lemma lem8195260 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8195261 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) : (term520 _144529 _144530 _144607 _144645 P p lt2 s f e) = (term521 _144529 _144530 _144607 _144645 P p lt2 s f e).
Proof. exact (MK_COMB (@lem8195260) (@lem8195259 _144529 _144530 _144607 _144645 P p lt2 s f e)). Qed.
Lemma lem8195262 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) : (term514 _144529 _144530 _144607 _144645 P p lt2 s f e g) = (term505 _144529 _144530 _144607 _144645 P p lt2 s f e g).
Proof. exact (eq_refl (term514 _144529 _144530 _144607 _144645 P p lt2 s f e g)). Qed.
Lemma lem8195263 {_144530 _144607 P : Type'} (z : type557 _144530 _144607 P) (g : _144530 -> _144607) : (z g) = (z g).
Proof. exact (eq_refl (z g)). Qed.
Lemma lem8195264 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (z : type557 _144530 _144607 P) (g : _144530 -> _144607) : (term522 _144529 _144530 _144607 _144645 P p lt2 s f e z g) = (term523 _144529 _144530 _144607 _144645 P p lt2 s f e z g).
Proof. exact (MK_COMB (@lem8195262 _144529 _144530 _144607 _144645 P p lt2 s f e g) (@lem8195263 _144530 _144607 P z g)). Qed.
Lemma lem8195265 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : type557 _144530 _144607 P) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) : (term523 _144529 _144530 _144607 _144645 P p lt2 s f e z g) = (term524 _144529 _144530 _144607 _144645 P p lt2 s z f e g).
Proof. exact (eq_refl (term523 _144529 _144530 _144607 _144645 P p lt2 s f e z g)). Qed.
Lemma lem8195266 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : type557 _144530 _144607 P) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) : (term522 _144529 _144530 _144607 _144645 P p lt2 s f e z g) = (term524 _144529 _144530 _144607 _144645 P p lt2 s z f e g).
Proof. exact (TRANS (@lem8195264 _144529 _144530 _144607 _144645 P p lt2 s f e z g) (@lem8195265 _144529 _144530 _144607 _144645 P p lt2 s z f e g)). Qed.
Lemma lem8195267 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : type557 _144530 _144607 P) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) : (term525 _144529 _144530 _144607 _144645 P p lt2 s f e z) = (term526 _144529 _144530 _144607 _144645 P p lt2 s z f e).
Proof. exact (fun_ext (fun g : _144530 -> _144607 => @lem8195266 _144529 _144530 _144607 _144645 P p lt2 s z f e g)). Qed.
Lemma lem8195268 {_144530 _144607 : Type'} : (@all (_144530 -> _144607)) = (@all (_144530 -> _144607)).
Proof. exact (eq_refl (@all (_144530 -> _144607))). Qed.
Lemma lem8195269 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : type557 _144530 _144607 P) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) : (term527 _144529 _144530 _144607 _144645 P p lt2 s f e z) = (term528 _144529 _144530 _144607 _144645 P p lt2 s z f e).
Proof. exact (MK_COMB (@lem8195268 _144530 _144607) (@lem8195267 _144529 _144530 _144607 _144645 P p lt2 s z f e)). Qed.
Lemma lem8195270 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) : (term529 _144529 _144530 _144607 _144645 P p lt2 s f e) = (term530 _144529 _144530 _144607 _144645 P p lt2 s f e).
Proof. exact (fun_ext (fun z : type557 _144530 _144607 P => @lem8195269 _144529 _144530 _144607 _144645 P p lt2 s z f e)). Qed.
Lemma lem8195271 {_144530 _144607 P : Type'} : (@ex ((_144530 -> _144607) -> P -> _144530)) = (@ex ((_144530 -> _144607) -> P -> _144530)).
Proof. exact (eq_refl (@ex ((_144530 -> _144607) -> P -> _144530))). Qed.
Lemma lem8195272 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) : (term512 _144529 _144530 _144607 _144645 P p lt2 s f e) = (term531 _144529 _144530 _144607 _144645 P p lt2 s f e).
Proof. exact (MK_COMB (@lem8195271 _144530 _144607 P) (@lem8195270 _144529 _144530 _144607 _144645 P p lt2 s f e)). Qed.
Lemma lem8195273 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) : ((term511 _144529 _144530 _144607 _144645 P p lt2 s f e) = (term512 _144529 _144530 _144607 _144645 P p lt2 s f e)) = ((term508 _144529 _144530 _144607 _144645 P p lt2 s f e) = (term531 _144529 _144530 _144607 _144645 P p lt2 s f e)).
Proof. exact (MK_COMB (@lem8195261 _144529 _144530 _144607 _144645 P p lt2 s f e) (@lem8195272 _144529 _144530 _144607 _144645 P p lt2 s f e)). Qed.
Lemma lem8195274 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) : (term508 _144529 _144530 _144607 _144645 P p lt2 s f e) = (term531 _144529 _144530 _144607 _144645 P p lt2 s f e).
Proof. exact (EQ_MP (@lem8195273 _144529 _144530 _144607 _144645 P p lt2 s f e) (@lem8195248 _144529 _144530 _144607 _144645 P p lt2 s f e)). Qed.
Lemma lem8195275 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) : (term430 _144529 _144530 _144607 _144645 P p lt2 s f e) = (term531 _144529 _144530 _144607 _144645 P p lt2 s f e).
Proof. exact (TRANS (@lem8195244 _144529 _144530 _144607 _144645 P p lt2 s f e) (@lem8195274 _144529 _144530 _144607 _144645 P p lt2 s f e)). Qed.
Lemma lem8195276 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (e : type564 _144530 _144607 _144645 P) : (term431 _144529 _144530 _144607 _144645 P p lt2 s e) = (term532 _144529 _144530 _144607 _144645 P p lt2 s e).
Proof. exact (fun_ext (fun f : _144530 -> _144607 => @lem8195275 _144529 _144530 _144607 _144645 P p lt2 s f e)). Qed.
Lemma lem8195277 {_144530 _144607 : Type'} : (@all (_144530 -> _144607)) = (@all (_144530 -> _144607)).
Proof. exact (eq_refl (@all (_144530 -> _144607))). Qed.
Lemma lem8195278 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (e : type564 _144530 _144607 _144645 P) : (term432 _144529 _144530 _144607 _144645 P p lt2 s e) = (term533 _144529 _144530 _144607 _144645 P p lt2 s e).
Proof. exact (MK_COMB (@lem8195277 _144530 _144607) (@lem8195276 _144529 _144530 _144607 _144645 P p lt2 s e)). Qed.
Lemma lem8195280 {A B : Type'} (P : type1413 A B) : (term482 A B P) = (term483 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem8195281 {_144530 _144607 P : Type'} (P' : type495 _144530 _144607 P) : (term534 _144530 _144607 P P') = (term535 _144530 _144607 P P').
Proof. exact (@lem8195280 (_144530 -> _144607) (type557 _144530 _144607 P) P'). Qed.
Lemma lem8195282 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (e : type564 _144530 _144607 _144645 P) : (term536 _144529 _144530 _144607 _144645 P p lt2 s e) = (term537 _144529 _144530 _144607 _144645 P p lt2 s e).
Proof. exact (@lem8195281 _144530 _144607 P (term538 _144529 _144530 _144607 _144645 P p lt2 s e)). Qed.
Lemma lem8195283 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) : (term539 _144529 _144530 _144607 _144645 P p lt2 s e f) = (term530 _144529 _144530 _144607 _144645 P p lt2 s f e).
Proof. exact (eq_refl (term539 _144529 _144530 _144607 _144645 P p lt2 s e f)). Qed.
Lemma lem8195284 {_144530 _144607 P : Type'} (z : type557 _144530 _144607 P) : z = z.
Proof. exact (eq_refl z). Qed.
Lemma lem8195285 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (z : type557 _144530 _144607 P) : (term540 _144529 _144530 _144607 _144645 P p lt2 s e f z) = (term541 _144529 _144530 _144607 _144645 P p lt2 s f e z).
Proof. exact (MK_COMB (@lem8195283 _144529 _144530 _144607 _144645 P p lt2 s f e) (@lem8195284 _144530 _144607 P z)). Qed.
Lemma lem8195286 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : type557 _144530 _144607 P) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) : (term541 _144529 _144530 _144607 _144645 P p lt2 s f e z) = (term528 _144529 _144530 _144607 _144645 P p lt2 s z f e).
Proof. exact (eq_refl (term541 _144529 _144530 _144607 _144645 P p lt2 s f e z)). Qed.
Lemma lem8195287 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : type557 _144530 _144607 P) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) : (term540 _144529 _144530 _144607 _144645 P p lt2 s e f z) = (term528 _144529 _144530 _144607 _144645 P p lt2 s z f e).
Proof. exact (TRANS (@lem8195285 _144529 _144530 _144607 _144645 P p lt2 s f e z) (@lem8195286 _144529 _144530 _144607 _144645 P p lt2 s z f e)). Qed.
Lemma lem8195288 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) : (term542 _144529 _144530 _144607 _144645 P p lt2 s e f) = (term530 _144529 _144530 _144607 _144645 P p lt2 s f e).
Proof. exact (fun_ext (fun z : type557 _144530 _144607 P => @lem8195287 _144529 _144530 _144607 _144645 P p lt2 s z f e)). Qed.
Lemma lem8195289 {_144530 _144607 P : Type'} : (@ex ((_144530 -> _144607) -> P -> _144530)) = (@ex ((_144530 -> _144607) -> P -> _144530)).
Proof. exact (eq_refl (@ex ((_144530 -> _144607) -> P -> _144530))). Qed.
Lemma lem8195290 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) : (term543 _144529 _144530 _144607 _144645 P p lt2 s e f) = (term531 _144529 _144530 _144607 _144645 P p lt2 s f e).
Proof. exact (MK_COMB (@lem8195289 _144530 _144607 P) (@lem8195288 _144529 _144530 _144607 _144645 P p lt2 s f e)). Qed.
Lemma lem8195291 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (e : type564 _144530 _144607 _144645 P) : (term544 _144529 _144530 _144607 _144645 P p lt2 s e) = (term532 _144529 _144530 _144607 _144645 P p lt2 s e).
Proof. exact (fun_ext (fun f : _144530 -> _144607 => @lem8195290 _144529 _144530 _144607 _144645 P p lt2 s f e)). Qed.
Lemma lem8195292 {_144530 _144607 : Type'} : (@all (_144530 -> _144607)) = (@all (_144530 -> _144607)).
Proof. exact (eq_refl (@all (_144530 -> _144607))). Qed.
Lemma lem8195293 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (e : type564 _144530 _144607 _144645 P) : (term536 _144529 _144530 _144607 _144645 P p lt2 s e) = (term533 _144529 _144530 _144607 _144645 P p lt2 s e).
Proof. exact (MK_COMB (@lem8195292 _144530 _144607) (@lem8195291 _144529 _144530 _144607 _144645 P p lt2 s e)). Qed.
Lemma lem8195294 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8195295 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (e : type564 _144530 _144607 _144645 P) : (term545 _144529 _144530 _144607 _144645 P p lt2 s e) = (term546 _144529 _144530 _144607 _144645 P p lt2 s e).
Proof. exact (MK_COMB (@lem8195294) (@lem8195293 _144529 _144530 _144607 _144645 P p lt2 s e)). Qed.
Lemma lem8195296 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) : (term539 _144529 _144530 _144607 _144645 P p lt2 s e f) = (term530 _144529 _144530 _144607 _144645 P p lt2 s f e).
Proof. exact (eq_refl (term539 _144529 _144530 _144607 _144645 P p lt2 s e f)). Qed.
Lemma lem8195297 {_144530 _144607 P : Type'} (z : type518 _144530 _144607 P) (f : _144530 -> _144607) : (z f) = (z f).
Proof. exact (eq_refl (z f)). Qed.
Lemma lem8195298 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (e : type564 _144530 _144607 _144645 P) (z : type518 _144530 _144607 P) (f : _144530 -> _144607) : (term547 _144529 _144530 _144607 _144645 P p lt2 s e z f) = (term548 _144529 _144530 _144607 _144645 P p lt2 s e z f).
Proof. exact (MK_COMB (@lem8195296 _144529 _144530 _144607 _144645 P p lt2 s f e) (@lem8195297 _144530 _144607 P z f)). Qed.
Lemma lem8195299 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : type518 _144530 _144607 P) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) : (term548 _144529 _144530 _144607 _144645 P p lt2 s e z f) = (term549 _144529 _144530 _144607 _144645 P p lt2 s z f e).
Proof. exact (eq_refl (term548 _144529 _144530 _144607 _144645 P p lt2 s e z f)). Qed.
Lemma lem8195300 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : type518 _144530 _144607 P) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) : (term547 _144529 _144530 _144607 _144645 P p lt2 s e z f) = (term549 _144529 _144530 _144607 _144645 P p lt2 s z f e).
Proof. exact (TRANS (@lem8195298 _144529 _144530 _144607 _144645 P p lt2 s e z f) (@lem8195299 _144529 _144530 _144607 _144645 P p lt2 s z f e)). Qed.
Lemma lem8195301 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : type518 _144530 _144607 P) (e : type564 _144530 _144607 _144645 P) : (term550 _144529 _144530 _144607 _144645 P p lt2 s e z) = (term551 _144529 _144530 _144607 _144645 P p lt2 s z e).
Proof. exact (fun_ext (fun f : _144530 -> _144607 => @lem8195300 _144529 _144530 _144607 _144645 P p lt2 s z f e)). Qed.
Lemma lem8195302 {_144530 _144607 : Type'} : (@all (_144530 -> _144607)) = (@all (_144530 -> _144607)).
Proof. exact (eq_refl (@all (_144530 -> _144607))). Qed.
Lemma lem8195303 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : type518 _144530 _144607 P) (e : type564 _144530 _144607 _144645 P) : (term552 _144529 _144530 _144607 _144645 P p lt2 s e z) = (term553 _144529 _144530 _144607 _144645 P p lt2 s z e).
Proof. exact (MK_COMB (@lem8195302 _144530 _144607) (@lem8195301 _144529 _144530 _144607 _144645 P p lt2 s z e)). Qed.
Lemma lem8195304 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (e : type564 _144530 _144607 _144645 P) : (term554 _144529 _144530 _144607 _144645 P p lt2 s e) = (term555 _144529 _144530 _144607 _144645 P p lt2 s e).
Proof. exact (fun_ext (fun z : type518 _144530 _144607 P => @lem8195303 _144529 _144530 _144607 _144645 P p lt2 s z e)). Qed.
Lemma lem8195305 {_144530 _144607 P : Type'} : (@ex ((_144530 -> _144607) -> (_144530 -> _144607) -> P -> _144530)) = (@ex ((_144530 -> _144607) -> (_144530 -> _144607) -> P -> _144530)).
Proof. exact (eq_refl (@ex ((_144530 -> _144607) -> (_144530 -> _144607) -> P -> _144530))). Qed.
Lemma lem8195306 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (e : type564 _144530 _144607 _144645 P) : (term537 _144529 _144530 _144607 _144645 P p lt2 s e) = (term556 _144529 _144530 _144607 _144645 P p lt2 s e).
Proof. exact (MK_COMB (@lem8195305 _144530 _144607 P) (@lem8195304 _144529 _144530 _144607 _144645 P p lt2 s e)). Qed.
Lemma lem8195307 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (e : type564 _144530 _144607 _144645 P) : ((term536 _144529 _144530 _144607 _144645 P p lt2 s e) = (term537 _144529 _144530 _144607 _144645 P p lt2 s e)) = ((term533 _144529 _144530 _144607 _144645 P p lt2 s e) = (term556 _144529 _144530 _144607 _144645 P p lt2 s e)).
Proof. exact (MK_COMB (@lem8195295 _144529 _144530 _144607 _144645 P p lt2 s e) (@lem8195306 _144529 _144530 _144607 _144645 P p lt2 s e)). Qed.
Lemma lem8195308 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (e : type564 _144530 _144607 _144645 P) : (term533 _144529 _144530 _144607 _144645 P p lt2 s e) = (term556 _144529 _144530 _144607 _144645 P p lt2 s e).
Proof. exact (EQ_MP (@lem8195307 _144529 _144530 _144607 _144645 P p lt2 s e) (@lem8195282 _144529 _144530 _144607 _144645 P p lt2 s e)). Qed.
Lemma lem8195310 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (e : type564 _144530 _144607 _144645 P) : (term432 _144529 _144530 _144607 _144645 P p lt2 s e) = (term556 _144529 _144530 _144607 _144645 P p lt2 s e).
Proof. exact (TRANS (@lem8195278 _144529 _144530 _144607 _144645 P p lt2 s e) (@lem8195308 _144529 _144530 _144607 _144645 P p lt2 s e)). Qed.
Lemma lem8195311 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (e : type564 _144530 _144607 _144645 P) : (term141 _144529 _144530 _144607 _144645 P p lt2 s e) = (term556 _144529 _144530 _144607 _144645 P p lt2 s e).
Proof. exact (TRANS (@lem8195030 _144529 _144530 _144607 _144645 P p lt2 s e) (@lem8195310 _144529 _144530 _144607 _144645 P p lt2 s e)). Qed.
Lemma lem8195312 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (e : type564 _144530 _144607 _144645 P) (h1 : term141 _144529 _144530 _144607 _144645 P p lt2 s e) : term556 _144529 _144530 _144607 _144645 P p lt2 s e.
Proof. exact (EQ_MP (@lem8195311 _144529 _144530 _144607 _144645 P p lt2 s e) (@lem8194647 _144529 _144530 _144607 _144645 P p lt2 s e h1)). Qed.
Lemma lem8195320 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) : (term557 _144530 _144607 _144645 P pat e q f a) = (term558 _144530 _144607 _144645 P pat e q f a).
Proof. exact (@lem17045 ((pat f a) = (e f a)) (q f a)). Qed.
Lemma lem8195322 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) : (term416 _144530 _144607 P p f a) = (term416 _144530 _144607 P p f a).
Proof. exact (eq_refl (term416 _144530 _144607 P p f a)). Qed.
Lemma lem8195323 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) : (term559 _144530 _144607 _144645 P p pat e q f a) = (term560 _144530 _144607 _144645 P p pat e q f a).
Proof. exact (MK_COMB (@lem8195322 _144530 _144607 P p f a) (@lem8195320 _144530 _144607 _144645 P pat e q f a)). Qed.
Lemma lem8195324 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) : (term561 _144530 _144607 _144645 P p pat e q f a) = (term559 _144530 _144607 _144645 P p pat e q f a).
Proof. exact (@lem17045 (p f a) (term562 _144530 _144607 _144645 P pat e q f a)). Qed.
Lemma lem8195325 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) : (term561 _144530 _144607 _144645 P p pat e q f a) = (term560 _144530 _144607 _144645 P p pat e q f a).
Proof. exact (TRANS (@lem8195324 _144530 _144607 _144645 P p pat e q f a) (@lem8195323 _144530 _144607 _144645 P p pat e q f a)). Qed.
Lemma lem8195333 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term557 _144530 _144607 _144645 P pat e q g a) = (term558 _144530 _144607 _144645 P pat e q g a).
Proof. exact (@lem17045 ((pat g a) = (e g a)) (q g a)). Qed.
Lemma lem8195335 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term416 _144530 _144607 P p g a) = (term416 _144530 _144607 P p g a).
Proof. exact (eq_refl (term416 _144530 _144607 P p g a)). Qed.
Lemma lem8195336 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term559 _144530 _144607 _144645 P p pat e q g a) = (term560 _144530 _144607 _144645 P p pat e q g a).
Proof. exact (MK_COMB (@lem8195335 _144530 _144607 P p g a) (@lem8195333 _144530 _144607 _144645 P pat e q g a)). Qed.
Lemma lem8195337 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term561 _144530 _144607 _144645 P p pat e q g a) = (term559 _144530 _144607 _144645 P p pat e q g a).
Proof. exact (@lem17045 (p g a) (term562 _144530 _144607 _144645 P pat e q g a)). Qed.
Lemma lem8195338 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term561 _144530 _144607 _144645 P p pat e q g a) = (term560 _144530 _144607 _144645 P p pat e q g a).
Proof. exact (TRANS (@lem8195337 _144530 _144607 _144645 P p pat e q g a) (@lem8195336 _144530 _144607 _144645 P p pat e q g a)). Qed.
Lemma lem8195345 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (z : _144530) : (term404 _144529 _144530 _144607 P lt2 s a f g z) = (term405 _144529 _144530 _144607 P lt2 s a f g z).
Proof. exact (@lem17362 (term406 _144529 _144530 P lt2 z s a) ((f z) = (g z))). Qed.
Lemma lem8195346 {_144530 : Type'} (P : _144530 -> Prop) : (term407 _144530 P) = (term408 _144530 P).
Proof. exact (@lem18392 _144530 P). Qed.
Lemma lem8195347 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term409 _144529 _144530 _144607 P lt2 s a f g) = (term410 _144529 _144530 _144607 P lt2 s a f g).
Proof. exact (@lem8195346 _144530 (term397 _144529 _144530 _144607 P lt2 s a f g)). Qed.
Lemma lem8195348 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (z : _144530) : (term411 _144529 _144530 _144607 P lt2 s a f g z) = (term396 _144529 _144530 _144607 P lt2 s a f g z).
Proof. exact (eq_refl (term411 _144529 _144530 _144607 P lt2 s a f g z)). Qed.
Lemma lem8195349 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8195350 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (z : _144530) : (term412 _144529 _144530 _144607 P lt2 s a f g z) = (term404 _144529 _144530 _144607 P lt2 s a f g z).
Proof. exact (MK_COMB (@lem8195349) (@lem8195348 _144529 _144530 _144607 P lt2 s a f g z)). Qed.
Lemma lem8195351 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (z : _144530) : (term412 _144529 _144530 _144607 P lt2 s a f g z) = (term405 _144529 _144530 _144607 P lt2 s a f g z).
Proof. exact (TRANS (@lem8195350 _144529 _144530 _144607 P lt2 s a f g z) (@lem8195345 _144529 _144530 _144607 P lt2 s a f g z)). Qed.
Lemma lem8195352 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term413 _144529 _144530 _144607 P lt2 s a f g) = (term414 _144529 _144530 _144607 P lt2 s a f g).
Proof. exact (fun_ext (fun z : _144530 => @lem8195351 _144529 _144530 _144607 P lt2 s a f g z)). Qed.
Lemma lem8195353 {_144530 : Type'} : (@ex _144530) = (@ex _144530).
Proof. exact (eq_refl (@ex _144530)). Qed.
Lemma lem8195354 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term410 _144529 _144530 _144607 P lt2 s a f g) = (term415 _144529 _144530 _144607 P lt2 s a f g).
Proof. exact (MK_COMB (@lem8195353 _144530) (@lem8195352 _144529 _144530 _144607 P lt2 s a f g)). Qed.
Lemma lem8195355 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term409 _144529 _144530 _144607 P lt2 s a f g) = (term415 _144529 _144530 _144607 P lt2 s a f g).
Proof. exact (TRANS (@lem8195347 _144529 _144530 _144607 P lt2 s a f g) (@lem8195354 _144529 _144530 _144607 P lt2 s a f g)). Qed.
Lemma lem8195356 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8195357 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term563 _144530 _144607 _144645 P p pat e q g a) = (term564 _144530 _144607 _144645 P p pat e q g a).
Proof. exact (MK_COMB (@lem8195356) (@lem8195338 _144530 _144607 _144645 P p pat e q g a)). Qed.
Lemma lem8195358 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term565 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) = (term566 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g).
Proof. exact (MK_COMB (@lem8195357 _144530 _144607 _144645 P p pat e q g a) (@lem8195355 _144529 _144530 _144607 P lt2 s a f g)). Qed.
Lemma lem8195359 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term567 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) = (term565 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g).
Proof. exact (@lem17045 (term159 _144530 _144607 _144645 P p pat e q g a) (term165 _144529 _144530 _144607 P lt2 s a f g)). Qed.
Lemma lem8195360 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term567 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) = (term566 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g).
Proof. exact (TRANS (@lem8195359 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) (@lem8195358 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g)). Qed.
Lemma lem8195361 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8195362 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) : (term563 _144530 _144607 _144645 P p pat e q f a) = (term564 _144530 _144607 _144645 P p pat e q f a).
Proof. exact (MK_COMB (@lem8195361) (@lem8195325 _144530 _144607 _144645 P p pat e q f a)). Qed.
Lemma lem8195363 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term568 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) = (term569 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g).
Proof. exact (MK_COMB (@lem8195362 _144530 _144607 _144645 P p pat e q f a) (@lem8195360 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g)). Qed.
Lemma lem8195364 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term570 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) = (term568 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g).
Proof. exact (@lem17045 (term159 _144530 _144607 _144645 P p pat e q f a) (term167 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g)). Qed.
Lemma lem8195365 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term570 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) = (term569 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g).
Proof. exact (TRANS (@lem8195364 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) (@lem8195363 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g)). Qed.
Lemma lem8195366 {_144530 _144607 _144654 P : Type'} (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : ((t f a) = (t g a)) = ((t f a) = (t g a)).
Proof. exact (eq_refl ((t f a) = (t g a))). Qed.
Lemma lem8195367 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8195368 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term571 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) = (term572 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g).
Proof. exact (MK_COMB (@lem8195367) (@lem8195365 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g)). Qed.
Lemma lem8195369 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (term573 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g a) = (term574 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g a).
Proof. exact (MK_COMB (@lem8195368 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) (@lem8195366 _144530 _144607 _144654 P f t g a)). Qed.
Lemma lem8195370 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (term173 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g a) = (term573 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g a).
Proof. exact (@lem17265 (term169 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) ((t f a) = (t g a))). Qed.
Lemma lem8195371 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (term173 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g a) = (term574 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g a).
Proof. exact (TRANS (@lem8195370 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g a) (@lem8195369 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g a)). Qed.
Lemma lem8195372 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) : (term175 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g) = (term575 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g).
Proof. exact (fun_ext (fun a : P => @lem8195371 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g a)). Qed.
Lemma lem8195373 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8195374 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) : (term177 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g) = (term576 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g).
Proof. exact (MK_COMB (@lem8195373 P) (@lem8195372 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g)). Qed.
Lemma lem8195375 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) : (term179 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t) = (term577 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t).
Proof. exact (fun_ext (fun g : _144530 -> _144607 => @lem8195374 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g)). Qed.
Lemma lem8195376 {_144530 _144607 : Type'} : (@all (_144530 -> _144607)) = (@all (_144530 -> _144607)).
Proof. exact (eq_refl (@all (_144530 -> _144607))). Qed.
Lemma lem8195377 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) : (term181 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t) = (term578 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t).
Proof. exact (MK_COMB (@lem8195376 _144530 _144607) (@lem8195375 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t)). Qed.
Lemma lem8195378 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (t : type564 _144530 _144607 _144654 P) : (term183 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) = (term579 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t).
Proof. exact (fun_ext (fun f : _144530 -> _144607 => @lem8195377 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t)). Qed.
Lemma lem8195379 {_144530 _144607 : Type'} : (@all (_144530 -> _144607)) = (@all (_144530 -> _144607)).
Proof. exact (eq_refl (@all (_144530 -> _144607))). Qed.
Lemma lem8195380 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (t : type564 _144530 _144607 _144654 P) : (term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) = (term580 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t).
Proof. exact (MK_COMB (@lem8195379 _144530 _144607) (@lem8195378 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t)). Qed.
Lemma lem8195487 {A : Type'} (P : Prop) (Q : A -> Prop) : (term433 A P Q) = (term434 A P Q).
Proof. exact (EQ_MP (@lem18911 A P Q) (@lem18910 A P Q)). Qed.
Lemma lem8195488 {_144530 : Type'} (P : Prop) (Q : _144530 -> Prop) : (term433 _144530 P Q) = (term434 _144530 P Q).
Proof. exact (@lem8195487 _144530 P Q). Qed.
Lemma lem8195489 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term581 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) = (term582 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g).
Proof. exact (@lem8195488 _144530 (term560 _144530 _144607 _144645 P p pat e q g a) (term414 _144529 _144530 _144607 P lt2 s a f g)). Qed.
Lemma lem8195490 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (z : _144530) : (term438 _144529 _144530 _144607 P lt2 s a f g z) = (term405 _144529 _144530 _144607 P lt2 s a f g z).
Proof. exact (eq_refl (term438 _144529 _144530 _144607 P lt2 s a f g z)). Qed.
Lemma lem8195491 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term439 _144529 _144530 _144607 P lt2 s a f g) = (term414 _144529 _144530 _144607 P lt2 s a f g).
Proof. exact (fun_ext (fun z : _144530 => @lem8195490 _144529 _144530 _144607 P lt2 s a f g z)). Qed.
Lemma lem8195492 {_144530 : Type'} : (@ex _144530) = (@ex _144530).
Proof. exact (eq_refl (@ex _144530)). Qed.
Lemma lem8195493 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term440 _144529 _144530 _144607 P lt2 s a f g) = (term415 _144529 _144530 _144607 P lt2 s a f g).
Proof. exact (MK_COMB (@lem8195492 _144530) (@lem8195491 _144529 _144530 _144607 P lt2 s a f g)). Qed.
Lemma lem8195494 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term564 _144530 _144607 _144645 P p pat e q g a) = (term564 _144530 _144607 _144645 P p pat e q g a).
Proof. exact (eq_refl (term564 _144530 _144607 _144645 P p pat e q g a)). Qed.
Lemma lem8195495 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term581 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) = (term566 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g).
Proof. exact (MK_COMB (@lem8195494 _144530 _144607 _144645 P p pat e q g a) (@lem8195493 _144529 _144530 _144607 P lt2 s a f g)). Qed.
Lemma lem8195496 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8195497 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term583 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) = (term584 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g).
Proof. exact (MK_COMB (@lem8195496) (@lem8195495 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g)). Qed.
Lemma lem8195498 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (z : _144530) : (term438 _144529 _144530 _144607 P lt2 s a f g z) = (term405 _144529 _144530 _144607 P lt2 s a f g z).
Proof. exact (eq_refl (term438 _144529 _144530 _144607 P lt2 s a f g z)). Qed.
Lemma lem8195499 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term564 _144530 _144607 _144645 P p pat e q g a) = (term564 _144530 _144607 _144645 P p pat e q g a).
Proof. exact (eq_refl (term564 _144530 _144607 _144645 P p pat e q g a)). Qed.
Lemma lem8195500 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (z : _144530) : (term585 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g z) = (term586 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g z).
Proof. exact (MK_COMB (@lem8195499 _144530 _144607 _144645 P p pat e q g a) (@lem8195498 _144529 _144530 _144607 P lt2 s a f g z)). Qed.
Lemma lem8195501 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term587 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) = (term588 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g).
Proof. exact (fun_ext (fun z : _144530 => @lem8195500 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g z)). Qed.
Lemma lem8195502 {_144530 : Type'} : (@ex _144530) = (@ex _144530).
Proof. exact (eq_refl (@ex _144530)). Qed.
Lemma lem8195503 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term582 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) = (term589 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g).
Proof. exact (MK_COMB (@lem8195502 _144530) (@lem8195501 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g)). Qed.
Lemma lem8195504 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : ((term581 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) = (term582 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g)) = ((term566 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) = (term589 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g)).
Proof. exact (MK_COMB (@lem8195497 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) (@lem8195503 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g)). Qed.
Lemma lem8195505 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term566 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) = (term589 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g).
Proof. exact (EQ_MP (@lem8195504 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) (@lem8195489 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g)). Qed.
Lemma lem8195506 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) : (term564 _144530 _144607 _144645 P p pat e q f a) = (term564 _144530 _144607 _144645 P p pat e q f a).
Proof. exact (eq_refl (term564 _144530 _144607 _144645 P p pat e q f a)). Qed.
Lemma lem8195507 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term569 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) = (term590 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g).
Proof. exact (MK_COMB (@lem8195506 _144530 _144607 _144645 P p pat e q f a) (@lem8195505 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g)). Qed.
Lemma lem8195509 {A : Type'} (P : Prop) (Q : A -> Prop) : (term433 A P Q) = (term434 A P Q).
Proof. exact (EQ_MP (@lem18911 A P Q) (@lem18910 A P Q)). Qed.
Lemma lem8195510 {_144530 : Type'} (P : Prop) (Q : _144530 -> Prop) : (term433 _144530 P Q) = (term434 _144530 P Q).
Proof. exact (@lem8195509 _144530 P Q). Qed.
Lemma lem8195511 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term591 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) = (term592 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g).
Proof. exact (@lem8195510 _144530 (term560 _144530 _144607 _144645 P p pat e q f a) (term588 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g)). Qed.
Lemma lem8195512 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (z : _144530) : (term593 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g z) = (term586 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g z).
Proof. exact (eq_refl (term593 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g z)). Qed.
Lemma lem8195513 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term594 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) = (term588 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g).
Proof. exact (fun_ext (fun z : _144530 => @lem8195512 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g z)). Qed.
Lemma lem8195514 {_144530 : Type'} : (@ex _144530) = (@ex _144530).
Proof. exact (eq_refl (@ex _144530)). Qed.
Lemma lem8195515 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term595 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) = (term589 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g).
Proof. exact (MK_COMB (@lem8195514 _144530) (@lem8195513 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g)). Qed.
Lemma lem8195516 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) : (term564 _144530 _144607 _144645 P p pat e q f a) = (term564 _144530 _144607 _144645 P p pat e q f a).
Proof. exact (eq_refl (term564 _144530 _144607 _144645 P p pat e q f a)). Qed.
Lemma lem8195517 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term591 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) = (term590 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g).
Proof. exact (MK_COMB (@lem8195516 _144530 _144607 _144645 P p pat e q f a) (@lem8195515 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g)). Qed.
Lemma lem8195518 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8195519 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term596 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) = (term597 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g).
Proof. exact (MK_COMB (@lem8195518) (@lem8195517 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g)). Qed.
Lemma lem8195520 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (z : _144530) : (term593 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g z) = (term586 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g z).
Proof. exact (eq_refl (term593 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g z)). Qed.
Lemma lem8195521 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) : (term564 _144530 _144607 _144645 P p pat e q f a) = (term564 _144530 _144607 _144645 P p pat e q f a).
Proof. exact (eq_refl (term564 _144530 _144607 _144645 P p pat e q f a)). Qed.
Lemma lem8195522 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (z : _144530) : (term598 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g z) = (term599 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g z).
Proof. exact (MK_COMB (@lem8195521 _144530 _144607 _144645 P p pat e q f a) (@lem8195520 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g z)). Qed.
Lemma lem8195523 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term600 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) = (term601 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g).
Proof. exact (fun_ext (fun z : _144530 => @lem8195522 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g z)). Qed.
Lemma lem8195524 {_144530 : Type'} : (@ex _144530) = (@ex _144530).
Proof. exact (eq_refl (@ex _144530)). Qed.
Lemma lem8195525 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term592 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) = (term602 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g).
Proof. exact (MK_COMB (@lem8195524 _144530) (@lem8195523 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g)). Qed.
Lemma lem8195526 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : ((term591 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) = (term592 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g)) = ((term590 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) = (term602 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g)).
Proof. exact (MK_COMB (@lem8195519 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) (@lem8195525 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g)). Qed.
Lemma lem8195527 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term590 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) = (term602 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g).
Proof. exact (EQ_MP (@lem8195526 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) (@lem8195511 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g)). Qed.
Lemma lem8195528 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term569 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) = (term602 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g).
Proof. exact (TRANS (@lem8195507 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) (@lem8195527 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g)). Qed.
Lemma lem8195529 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8195530 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term572 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) = (term603 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g).
Proof. exact (MK_COMB (@lem8195529) (@lem8195528 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g)). Qed.
Lemma lem8195531 {_144530 _144607 _144654 P : Type'} (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : ((t f a) = (t g a)) = ((t f a) = (t g a)).
Proof. exact (eq_refl ((t f a) = (t g a))). Qed.
Lemma lem8195532 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (term574 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g a) = (term604 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g a).
Proof. exact (MK_COMB (@lem8195530 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) (@lem8195531 _144530 _144607 _144654 P f t g a)). Qed.
Lemma lem8195534 {A : Type'} (P : A -> Prop) (Q : Prop) : (term463 A P Q) = (term464 A P Q).
Proof. exact (EQ_MP (@lem18905 A P Q) (@lem18904 A P Q)). Qed.
Lemma lem8195535 {_144530 : Type'} (P : _144530 -> Prop) (Q : Prop) : (term463 _144530 P Q) = (term464 _144530 P Q).
Proof. exact (@lem8195534 _144530 P Q). Qed.
Lemma lem8195536 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (term605 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g a) = (term606 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g a).
Proof. exact (@lem8195535 _144530 (term601 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) ((t f a) = (t g a))). Qed.
Lemma lem8195537 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (z : _144530) : (term607 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g z) = (term599 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g z).
Proof. exact (eq_refl (term607 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g z)). Qed.
Lemma lem8195538 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term608 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) = (term601 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g).
Proof. exact (fun_ext (fun z : _144530 => @lem8195537 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g z)). Qed.
Lemma lem8195539 {_144530 : Type'} : (@ex _144530) = (@ex _144530).
Proof. exact (eq_refl (@ex _144530)). Qed.
Lemma lem8195540 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term609 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) = (term602 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g).
Proof. exact (MK_COMB (@lem8195539 _144530) (@lem8195538 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g)). Qed.
Lemma lem8195541 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8195542 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term610 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) = (term603 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g).
Proof. exact (MK_COMB (@lem8195541) (@lem8195540 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g)). Qed.
Lemma lem8195543 {_144530 _144607 _144654 P : Type'} (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : ((t f a) = (t g a)) = ((t f a) = (t g a)).
Proof. exact (eq_refl ((t f a) = (t g a))). Qed.
Lemma lem8195544 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (term605 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g a) = (term604 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g a).
Proof. exact (MK_COMB (@lem8195542 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) (@lem8195543 _144530 _144607 _144654 P f t g a)). Qed.
Lemma lem8195545 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8195546 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (term611 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g a) = (term612 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g a).
Proof. exact (MK_COMB (@lem8195545) (@lem8195544 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g a)). Qed.
Lemma lem8195547 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (z : _144530) : (term607 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g z) = (term599 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g z).
Proof. exact (eq_refl (term607 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g z)). Qed.
Lemma lem8195548 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8195549 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (z : _144530) : (term613 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g z) = (term614 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g z).
Proof. exact (MK_COMB (@lem8195548) (@lem8195547 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g z)). Qed.
Lemma lem8195550 {_144530 _144607 _144654 P : Type'} (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : ((t f a) = (t g a)) = ((t f a) = (t g a)).
Proof. exact (eq_refl ((t f a) = (t g a))). Qed.
Lemma lem8195551 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : _144530) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (term615 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z f t g a) = (term616 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z f t g a).
Proof. exact (MK_COMB (@lem8195549 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g z) (@lem8195550 _144530 _144607 _144654 P f t g a)). Qed.
Lemma lem8195552 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (term617 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g a) = (term618 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g a).
Proof. exact (fun_ext (fun z : _144530 => @lem8195551 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z f t g a)). Qed.
Lemma lem8195553 {_144530 : Type'} : (@ex _144530) = (@ex _144530).
Proof. exact (eq_refl (@ex _144530)). Qed.
Lemma lem8195554 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (term606 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g a) = (term619 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g a).
Proof. exact (MK_COMB (@lem8195553 _144530) (@lem8195552 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g a)). Qed.
Lemma lem8195555 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : ((term605 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g a) = (term606 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g a)) = ((term604 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g a) = (term619 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g a)).
Proof. exact (MK_COMB (@lem8195546 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g a) (@lem8195554 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g a)). Qed.
Lemma lem8195556 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (term604 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g a) = (term619 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g a).
Proof. exact (EQ_MP (@lem8195555 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g a) (@lem8195536 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g a)). Qed.
Lemma lem8195557 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (term574 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g a) = (term619 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g a).
Proof. exact (TRANS (@lem8195532 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g a) (@lem8195556 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g a)). Qed.
Lemma lem8195558 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) : (term575 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g) = (term620 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g).
Proof. exact (fun_ext (fun a : P => @lem8195557 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g a)). Qed.
Lemma lem8195559 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8195560 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) : (term576 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g) = (term621 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g).
Proof. exact (MK_COMB (@lem8195559 P) (@lem8195558 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g)). Qed.
Lemma lem8195562 {A B : Type'} (P : type1413 A B) : (term482 A B P) = (term483 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem8195563 {_144530 P : Type'} (P' : type1470 _144530 P) : (term484 _144530 P P') = (term485 _144530 P P').
Proof. exact (@lem8195562 P _144530 P'). Qed.
Lemma lem8195564 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) : (term622 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g) = (term623 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g).
Proof. exact (@lem8195563 _144530 P (term624 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g)). Qed.
Lemma lem8195565 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (term625 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g a) = (term618 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g a).
Proof. exact (eq_refl (term625 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g a)). Qed.
Lemma lem8195566 {_144530 : Type'} (z : _144530) : z = z.
Proof. exact (eq_refl z). Qed.
Lemma lem8195567 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) (z : _144530) : (term626 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g a z) = (term627 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g a z).
Proof. exact (MK_COMB (@lem8195565 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g a) (@lem8195566 _144530 z)). Qed.
Lemma lem8195568 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : _144530) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (term627 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g a z) = (term616 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z f t g a).
Proof. exact (eq_refl (term627 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g a z)). Qed.
Lemma lem8195569 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : _144530) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (term626 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g a z) = (term616 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z f t g a).
Proof. exact (TRANS (@lem8195567 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g a z) (@lem8195568 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z f t g a)). Qed.
Lemma lem8195570 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (term628 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g a) = (term618 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g a).
Proof. exact (fun_ext (fun z : _144530 => @lem8195569 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z f t g a)). Qed.
Lemma lem8195571 {_144530 : Type'} : (@ex _144530) = (@ex _144530).
Proof. exact (eq_refl (@ex _144530)). Qed.
Lemma lem8195572 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (term629 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g a) = (term619 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g a).
Proof. exact (MK_COMB (@lem8195571 _144530) (@lem8195570 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g a)). Qed.
Lemma lem8195573 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) : (term630 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g) = (term620 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g).
Proof. exact (fun_ext (fun a : P => @lem8195572 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g a)). Qed.
Lemma lem8195574 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8195575 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) : (term622 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g) = (term621 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g).
Proof. exact (MK_COMB (@lem8195574 P) (@lem8195573 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g)). Qed.
Lemma lem8195576 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8195577 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) : (term631 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g) = (term632 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g).
Proof. exact (MK_COMB (@lem8195576) (@lem8195575 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g)). Qed.
Lemma lem8195578 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (term625 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g a) = (term618 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g a).
Proof. exact (eq_refl (term625 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g a)). Qed.
Lemma lem8195579 {_144530 P : Type'} (z : P -> _144530) (a : P) : (z a) = (z a).
Proof. exact (eq_refl (z a)). Qed.
Lemma lem8195580 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (z : P -> _144530) (a : P) : (term633 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g z a) = (term634 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g z a).
Proof. exact (MK_COMB (@lem8195578 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g a) (@lem8195579 _144530 P z a)). Qed.
Lemma lem8195581 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : P -> _144530) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (term634 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g z a) = (term635 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z f t g a).
Proof. exact (eq_refl (term634 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g z a)). Qed.
Lemma lem8195582 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : P -> _144530) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (term633 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g z a) = (term635 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z f t g a).
Proof. exact (TRANS (@lem8195580 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g z a) (@lem8195581 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z f t g a)). Qed.
Lemma lem8195583 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : P -> _144530) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) : (term636 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g z) = (term637 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z f t g).
Proof. exact (fun_ext (fun a : P => @lem8195582 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z f t g a)). Qed.
Lemma lem8195584 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8195585 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : P -> _144530) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) : (term638 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g z) = (term639 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z f t g).
Proof. exact (MK_COMB (@lem8195584 P) (@lem8195583 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z f t g)). Qed.
Lemma lem8195586 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) : (term640 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g) = (term641 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g).
Proof. exact (fun_ext (fun z : P -> _144530 => @lem8195585 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z f t g)). Qed.
Lemma lem8195587 {_144530 P : Type'} : (@ex (P -> _144530)) = (@ex (P -> _144530)).
Proof. exact (eq_refl (@ex (P -> _144530))). Qed.
Lemma lem8195588 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) : (term623 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g) = (term642 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g).
Proof. exact (MK_COMB (@lem8195587 _144530 P) (@lem8195586 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g)). Qed.
Lemma lem8195589 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) : ((term622 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g) = (term623 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g)) = ((term621 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g) = (term642 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g)).
Proof. exact (MK_COMB (@lem8195577 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g) (@lem8195588 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g)). Qed.
Lemma lem8195590 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) : (term621 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g) = (term642 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g).
Proof. exact (EQ_MP (@lem8195589 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g) (@lem8195564 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g)). Qed.
Lemma lem8195591 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) : (term576 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g) = (term642 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g).
Proof. exact (TRANS (@lem8195560 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g) (@lem8195590 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g)). Qed.
Lemma lem8195592 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) : (term577 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t) = (term643 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t).
Proof. exact (fun_ext (fun g : _144530 -> _144607 => @lem8195591 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g)). Qed.
Lemma lem8195593 {_144530 _144607 : Type'} : (@all (_144530 -> _144607)) = (@all (_144530 -> _144607)).
Proof. exact (eq_refl (@all (_144530 -> _144607))). Qed.
Lemma lem8195594 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) : (term578 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t) = (term644 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t).
Proof. exact (MK_COMB (@lem8195593 _144530 _144607) (@lem8195592 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t)). Qed.
Lemma lem8195596 {A B : Type'} (P : type1413 A B) : (term482 A B P) = (term483 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem8195597 {_144530 _144607 P : Type'} (P' : type537 _144530 _144607 P) : (term509 _144530 _144607 P P') = (term510 _144530 _144607 P P').
Proof. exact (@lem8195596 (_144530 -> _144607) (P -> _144530) P'). Qed.
Lemma lem8195598 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) : (term645 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t) = (term646 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t).
Proof. exact (@lem8195597 _144530 _144607 P (term647 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t)). Qed.
Lemma lem8195599 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) : (term648 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g) = (term641 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g).
Proof. exact (eq_refl (term648 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g)). Qed.
Lemma lem8195600 {_144530 P : Type'} (z : P -> _144530) : z = z.
Proof. exact (eq_refl z). Qed.
Lemma lem8195601 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (z : P -> _144530) : (term649 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g z) = (term650 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g z).
Proof. exact (MK_COMB (@lem8195599 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g) (@lem8195600 _144530 P z)). Qed.
Lemma lem8195602 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : P -> _144530) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) : (term650 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g z) = (term639 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z f t g).
Proof. exact (eq_refl (term650 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g z)). Qed.
Lemma lem8195603 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : P -> _144530) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) : (term649 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g z) = (term639 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z f t g).
Proof. exact (TRANS (@lem8195601 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g z) (@lem8195602 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z f t g)). Qed.
Lemma lem8195604 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) : (term651 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g) = (term641 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g).
Proof. exact (fun_ext (fun z : P -> _144530 => @lem8195603 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z f t g)). Qed.
Lemma lem8195605 {_144530 P : Type'} : (@ex (P -> _144530)) = (@ex (P -> _144530)).
Proof. exact (eq_refl (@ex (P -> _144530))). Qed.
Lemma lem8195606 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) : (term652 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g) = (term642 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g).
Proof. exact (MK_COMB (@lem8195605 _144530 P) (@lem8195604 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g)). Qed.
Lemma lem8195607 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) : (term653 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t) = (term643 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t).
Proof. exact (fun_ext (fun g : _144530 -> _144607 => @lem8195606 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g)). Qed.
Lemma lem8195608 {_144530 _144607 : Type'} : (@all (_144530 -> _144607)) = (@all (_144530 -> _144607)).
Proof. exact (eq_refl (@all (_144530 -> _144607))). Qed.
Lemma lem8195609 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) : (term645 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t) = (term644 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t).
Proof. exact (MK_COMB (@lem8195608 _144530 _144607) (@lem8195607 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t)). Qed.
Lemma lem8195610 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8195611 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) : (term654 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t) = (term655 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t).
Proof. exact (MK_COMB (@lem8195610) (@lem8195609 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t)). Qed.
Lemma lem8195612 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) : (term648 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g) = (term641 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g).
Proof. exact (eq_refl (term648 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g)). Qed.
Lemma lem8195613 {_144530 _144607 P : Type'} (z : type557 _144530 _144607 P) (g : _144530 -> _144607) : (z g) = (z g).
Proof. exact (eq_refl (z g)). Qed.
Lemma lem8195614 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (z : type557 _144530 _144607 P) (g : _144530 -> _144607) : (term656 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t z g) = (term657 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t z g).
Proof. exact (MK_COMB (@lem8195612 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g) (@lem8195613 _144530 _144607 P z g)). Qed.
Lemma lem8195615 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : type557 _144530 _144607 P) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) : (term657 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t z g) = (term658 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z f t g).
Proof. exact (eq_refl (term657 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t z g)). Qed.
Lemma lem8195616 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : type557 _144530 _144607 P) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) : (term656 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t z g) = (term658 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z f t g).
Proof. exact (TRANS (@lem8195614 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t z g) (@lem8195615 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z f t g)). Qed.
Lemma lem8195617 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : type557 _144530 _144607 P) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) : (term659 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t z) = (term660 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z f t).
Proof. exact (fun_ext (fun g : _144530 -> _144607 => @lem8195616 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z f t g)). Qed.
Lemma lem8195618 {_144530 _144607 : Type'} : (@all (_144530 -> _144607)) = (@all (_144530 -> _144607)).
Proof. exact (eq_refl (@all (_144530 -> _144607))). Qed.
Lemma lem8195619 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : type557 _144530 _144607 P) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) : (term661 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t z) = (term662 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z f t).
Proof. exact (MK_COMB (@lem8195618 _144530 _144607) (@lem8195617 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z f t)). Qed.
Lemma lem8195620 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) : (term663 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t) = (term664 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t).
Proof. exact (fun_ext (fun z : type557 _144530 _144607 P => @lem8195619 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z f t)). Qed.
Lemma lem8195621 {_144530 _144607 P : Type'} : (@ex ((_144530 -> _144607) -> P -> _144530)) = (@ex ((_144530 -> _144607) -> P -> _144530)).
Proof. exact (eq_refl (@ex ((_144530 -> _144607) -> P -> _144530))). Qed.
Lemma lem8195622 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) : (term646 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t) = (term665 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t).
Proof. exact (MK_COMB (@lem8195621 _144530 _144607 P) (@lem8195620 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t)). Qed.
Lemma lem8195623 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) : ((term645 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t) = (term646 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t)) = ((term644 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t) = (term665 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t)).
Proof. exact (MK_COMB (@lem8195611 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t) (@lem8195622 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t)). Qed.
Lemma lem8195624 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) : (term644 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t) = (term665 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t).
Proof. exact (EQ_MP (@lem8195623 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t) (@lem8195598 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t)). Qed.
Lemma lem8195625 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) : (term578 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t) = (term665 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t).
Proof. exact (TRANS (@lem8195594 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t) (@lem8195624 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t)). Qed.
Lemma lem8195626 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (t : type564 _144530 _144607 _144654 P) : (term579 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) = (term666 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t).
Proof. exact (fun_ext (fun f : _144530 -> _144607 => @lem8195625 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t)). Qed.
Lemma lem8195627 {_144530 _144607 : Type'} : (@all (_144530 -> _144607)) = (@all (_144530 -> _144607)).
Proof. exact (eq_refl (@all (_144530 -> _144607))). Qed.
Lemma lem8195628 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (t : type564 _144530 _144607 _144654 P) : (term580 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) = (term667 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t).
Proof. exact (MK_COMB (@lem8195627 _144530 _144607) (@lem8195626 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t)). Qed.
Lemma lem8195630 {A B : Type'} (P : type1413 A B) : (term482 A B P) = (term483 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem8195631 {_144530 _144607 P : Type'} (P' : type495 _144530 _144607 P) : (term534 _144530 _144607 P P') = (term535 _144530 _144607 P P').
Proof. exact (@lem8195630 (_144530 -> _144607) (type557 _144530 _144607 P) P'). Qed.
Lemma lem8195632 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (t : type564 _144530 _144607 _144654 P) : (term668 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) = (term669 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t).
Proof. exact (@lem8195631 _144530 _144607 P (term670 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t)). Qed.
Lemma lem8195633 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) : (term671 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t f) = (term664 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t).
Proof. exact (eq_refl (term671 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t f)). Qed.
Lemma lem8195634 {_144530 _144607 P : Type'} (z : type557 _144530 _144607 P) : z = z.
Proof. exact (eq_refl z). Qed.
Lemma lem8195635 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (z : type557 _144530 _144607 P) : (term672 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t f z) = (term673 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t z).
Proof. exact (MK_COMB (@lem8195633 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t) (@lem8195634 _144530 _144607 P z)). Qed.
Lemma lem8195636 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : type557 _144530 _144607 P) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) : (term673 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t z) = (term662 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z f t).
Proof. exact (eq_refl (term673 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t z)). Qed.
Lemma lem8195637 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : type557 _144530 _144607 P) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) : (term672 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t f z) = (term662 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z f t).
Proof. exact (TRANS (@lem8195635 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t z) (@lem8195636 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z f t)). Qed.
Lemma lem8195638 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) : (term674 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t f) = (term664 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t).
Proof. exact (fun_ext (fun z : type557 _144530 _144607 P => @lem8195637 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z f t)). Qed.
Lemma lem8195639 {_144530 _144607 P : Type'} : (@ex ((_144530 -> _144607) -> P -> _144530)) = (@ex ((_144530 -> _144607) -> P -> _144530)).
Proof. exact (eq_refl (@ex ((_144530 -> _144607) -> P -> _144530))). Qed.
Lemma lem8195640 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) : (term675 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t f) = (term665 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t).
Proof. exact (MK_COMB (@lem8195639 _144530 _144607 P) (@lem8195638 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t)). Qed.
Lemma lem8195641 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (t : type564 _144530 _144607 _144654 P) : (term676 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) = (term666 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t).
Proof. exact (fun_ext (fun f : _144530 -> _144607 => @lem8195640 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t)). Qed.
Lemma lem8195642 {_144530 _144607 : Type'} : (@all (_144530 -> _144607)) = (@all (_144530 -> _144607)).
Proof. exact (eq_refl (@all (_144530 -> _144607))). Qed.
Lemma lem8195643 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (t : type564 _144530 _144607 _144654 P) : (term668 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) = (term667 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t).
Proof. exact (MK_COMB (@lem8195642 _144530 _144607) (@lem8195641 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t)). Qed.
Lemma lem8195644 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8195645 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (t : type564 _144530 _144607 _144654 P) : (term677 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) = (term678 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t).
Proof. exact (MK_COMB (@lem8195644) (@lem8195643 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t)). Qed.
Lemma lem8195646 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) : (term671 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t f) = (term664 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t).
Proof. exact (eq_refl (term671 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t f)). Qed.
Lemma lem8195647 {_144530 _144607 P : Type'} (z : type518 _144530 _144607 P) (f : _144530 -> _144607) : (z f) = (z f).
Proof. exact (eq_refl (z f)). Qed.
Lemma lem8195648 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (t : type564 _144530 _144607 _144654 P) (z : type518 _144530 _144607 P) (f : _144530 -> _144607) : (term679 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t z f) = (term680 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t z f).
Proof. exact (MK_COMB (@lem8195646 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t) (@lem8195647 _144530 _144607 P z f)). Qed.
Lemma lem8195649 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : type518 _144530 _144607 P) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) : (term680 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t z f) = (term681 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z f t).
Proof. exact (eq_refl (term680 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t z f)). Qed.
Lemma lem8195650 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : type518 _144530 _144607 P) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) : (term679 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t z f) = (term681 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z f t).
Proof. exact (TRANS (@lem8195648 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t z f) (@lem8195649 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z f t)). Qed.
Lemma lem8195651 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : type518 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) : (term682 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t z) = (term683 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z t).
Proof. exact (fun_ext (fun f : _144530 -> _144607 => @lem8195650 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z f t)). Qed.
Lemma lem8195652 {_144530 _144607 : Type'} : (@all (_144530 -> _144607)) = (@all (_144530 -> _144607)).
Proof. exact (eq_refl (@all (_144530 -> _144607))). Qed.
Lemma lem8195653 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : type518 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) : (term684 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t z) = (term685 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z t).
Proof. exact (MK_COMB (@lem8195652 _144530 _144607) (@lem8195651 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z t)). Qed.
Lemma lem8195654 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (t : type564 _144530 _144607 _144654 P) : (term686 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) = (term687 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t).
Proof. exact (fun_ext (fun z : type518 _144530 _144607 P => @lem8195653 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z t)). Qed.
Lemma lem8195655 {_144530 _144607 P : Type'} : (@ex ((_144530 -> _144607) -> (_144530 -> _144607) -> P -> _144530)) = (@ex ((_144530 -> _144607) -> (_144530 -> _144607) -> P -> _144530)).
Proof. exact (eq_refl (@ex ((_144530 -> _144607) -> (_144530 -> _144607) -> P -> _144530))). Qed.
Lemma lem8195656 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (t : type564 _144530 _144607 _144654 P) : (term669 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) = (term688 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t).
Proof. exact (MK_COMB (@lem8195655 _144530 _144607 P) (@lem8195654 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t)). Qed.
Lemma lem8195657 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (t : type564 _144530 _144607 _144654 P) : ((term668 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) = (term669 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t)) = ((term667 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) = (term688 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t)).
Proof. exact (MK_COMB (@lem8195645 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) (@lem8195656 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t)). Qed.
Lemma lem8195658 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (t : type564 _144530 _144607 _144654 P) : (term667 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) = (term688 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t).
Proof. exact (EQ_MP (@lem8195657 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) (@lem8195632 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t)). Qed.
Lemma lem8195660 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (t : type564 _144530 _144607 _144654 P) : (term580 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) = (term688 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t).
Proof. exact (TRANS (@lem8195628 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) (@lem8195658 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t)). Qed.
Lemma lem8195661 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (t : type564 _144530 _144607 _144654 P) : (term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) = (term688 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t).
Proof. exact (TRANS (@lem8195380 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) (@lem8195660 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t)). Qed.
Lemma lem8195662 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (t : type564 _144530 _144607 _144654 P) (h1 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) : term688 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t.
Proof. exact (EQ_MP (@lem8195661 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) (@lem8194648 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t h1)). Qed.
Lemma lem8195669 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (a : P) : (term689 _144530 _144607 _144645 P p pat e f a) = (term690 _144530 _144607 _144645 P p pat e f a).
Proof. exact (@lem17045 (p f a) ((pat f a) = (e f a))). Qed.
Lemma lem8195676 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term689 _144530 _144607 _144645 P p pat e g a) = (term690 _144530 _144607 _144645 P p pat e g a).
Proof. exact (@lem17045 (p g a) ((pat g a) = (e g a))). Qed.
Lemma lem8195683 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (z : _144530) : (term404 _144529 _144530 _144607 P lt2 s a f g z) = (term405 _144529 _144530 _144607 P lt2 s a f g z).
Proof. exact (@lem17362 (term406 _144529 _144530 P lt2 z s a) ((f z) = (g z))). Qed.
Lemma lem8195684 {_144530 : Type'} (P : _144530 -> Prop) : (term407 _144530 P) = (term408 _144530 P).
Proof. exact (@lem18392 _144530 P). Qed.
Lemma lem8195685 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term409 _144529 _144530 _144607 P lt2 s a f g) = (term410 _144529 _144530 _144607 P lt2 s a f g).
Proof. exact (@lem8195684 _144530 (term397 _144529 _144530 _144607 P lt2 s a f g)). Qed.
Lemma lem8195686 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (z : _144530) : (term411 _144529 _144530 _144607 P lt2 s a f g z) = (term396 _144529 _144530 _144607 P lt2 s a f g z).
Proof. exact (eq_refl (term411 _144529 _144530 _144607 P lt2 s a f g z)). Qed.
Lemma lem8195687 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8195688 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (z : _144530) : (term412 _144529 _144530 _144607 P lt2 s a f g z) = (term404 _144529 _144530 _144607 P lt2 s a f g z).
Proof. exact (MK_COMB (@lem8195687) (@lem8195686 _144529 _144530 _144607 P lt2 s a f g z)). Qed.
Lemma lem8195689 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (z : _144530) : (term412 _144529 _144530 _144607 P lt2 s a f g z) = (term405 _144529 _144530 _144607 P lt2 s a f g z).
Proof. exact (TRANS (@lem8195688 _144529 _144530 _144607 P lt2 s a f g z) (@lem8195683 _144529 _144530 _144607 P lt2 s a f g z)). Qed.
Lemma lem8195690 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term413 _144529 _144530 _144607 P lt2 s a f g) = (term414 _144529 _144530 _144607 P lt2 s a f g).
Proof. exact (fun_ext (fun z : _144530 => @lem8195689 _144529 _144530 _144607 P lt2 s a f g z)). Qed.
Lemma lem8195691 {_144530 : Type'} : (@ex _144530) = (@ex _144530).
Proof. exact (eq_refl (@ex _144530)). Qed.
Lemma lem8195692 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term410 _144529 _144530 _144607 P lt2 s a f g) = (term415 _144529 _144530 _144607 P lt2 s a f g).
Proof. exact (MK_COMB (@lem8195691 _144530) (@lem8195690 _144529 _144530 _144607 P lt2 s a f g)). Qed.
Lemma lem8195693 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term409 _144529 _144530 _144607 P lt2 s a f g) = (term415 _144529 _144530 _144607 P lt2 s a f g).
Proof. exact (TRANS (@lem8195685 _144529 _144530 _144607 P lt2 s a f g) (@lem8195692 _144529 _144530 _144607 P lt2 s a f g)). Qed.
Lemma lem8195694 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8195695 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term691 _144530 _144607 _144645 P p pat e g a) = (term692 _144530 _144607 _144645 P p pat e g a).
Proof. exact (MK_COMB (@lem8195694) (@lem8195676 _144530 _144607 _144645 P p pat e g a)). Qed.
Lemma lem8195696 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term693 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g) = (term694 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g).
Proof. exact (MK_COMB (@lem8195695 _144530 _144607 _144645 P p pat e g a) (@lem8195693 _144529 _144530 _144607 P lt2 s a f g)). Qed.
Lemma lem8195697 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term695 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g) = (term693 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g).
Proof. exact (@lem17045 (term200 _144530 _144607 _144645 P p pat e g a) (term165 _144529 _144530 _144607 P lt2 s a f g)). Qed.
Lemma lem8195698 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term695 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g) = (term694 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g).
Proof. exact (TRANS (@lem8195697 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g) (@lem8195696 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g)). Qed.
Lemma lem8195699 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8195700 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (a : P) : (term691 _144530 _144607 _144645 P p pat e f a) = (term692 _144530 _144607 _144645 P p pat e f a).
Proof. exact (MK_COMB (@lem8195699) (@lem8195669 _144530 _144607 _144645 P p pat e f a)). Qed.
Lemma lem8195701 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term696 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g) = (term697 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g).
Proof. exact (MK_COMB (@lem8195700 _144530 _144607 _144645 P p pat e f a) (@lem8195698 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g)). Qed.
Lemma lem8195702 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term698 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g) = (term696 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g).
Proof. exact (@lem17045 (term200 _144530 _144607 _144645 P p pat e f a) (term207 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g)). Qed.
Lemma lem8195703 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term698 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g) = (term697 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g).
Proof. exact (TRANS (@lem8195702 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g) (@lem8195701 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g)). Qed.
Lemma lem8195718 {_144530 _144607 P : Type'} (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : ((q f a) = (q g a)) = (term699 _144530 _144607 P f q g a).
Proof. exact (@lem17784 (q f a) (q g a)). Qed.
Lemma lem8195719 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8195720 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term700 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g) = (term701 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g).
Proof. exact (MK_COMB (@lem8195719) (@lem8195703 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g)). Qed.
Lemma lem8195721 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term702 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g a) = (term703 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g a).
Proof. exact (MK_COMB (@lem8195720 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g) (@lem8195718 _144530 _144607 P f q g a)). Qed.
Lemma lem8195722 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term213 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g a) = (term702 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g a).
Proof. exact (@lem17265 (term209 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g) ((q f a) = (q g a))). Qed.
Lemma lem8195723 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term213 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g a) = (term703 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g a).
Proof. exact (TRANS (@lem8195722 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g a) (@lem8195721 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g a)). Qed.
Lemma lem8195724 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) : (term215 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g) = (term704 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g).
Proof. exact (fun_ext (fun a : P => @lem8195723 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g a)). Qed.
Lemma lem8195725 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8195726 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) : (term217 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g) = (term705 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g).
Proof. exact (MK_COMB (@lem8195725 P) (@lem8195724 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g)). Qed.
Lemma lem8195727 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) : (term219 _144529 _144530 _144607 _144645 P p pat e lt2 s f q) = (term706 _144529 _144530 _144607 _144645 P p pat e lt2 s f q).
Proof. exact (fun_ext (fun g : _144530 -> _144607 => @lem8195726 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g)). Qed.
Lemma lem8195728 {_144530 _144607 : Type'} : (@all (_144530 -> _144607)) = (@all (_144530 -> _144607)).
Proof. exact (eq_refl (@all (_144530 -> _144607))). Qed.
Lemma lem8195729 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) : (term221 _144529 _144530 _144607 _144645 P p pat e lt2 s f q) = (term707 _144529 _144530 _144607 _144645 P p pat e lt2 s f q).
Proof. exact (MK_COMB (@lem8195728 _144530 _144607) (@lem8195727 _144529 _144530 _144607 _144645 P p pat e lt2 s f q)). Qed.
Lemma lem8195730 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (q : type560 _144530 _144607 P) : (term223 _144529 _144530 _144607 _144645 P p pat e lt2 s q) = (term708 _144529 _144530 _144607 _144645 P p pat e lt2 s q).
Proof. exact (fun_ext (fun f : _144530 -> _144607 => @lem8195729 _144529 _144530 _144607 _144645 P p pat e lt2 s f q)). Qed.
Lemma lem8195731 {_144530 _144607 : Type'} : (@all (_144530 -> _144607)) = (@all (_144530 -> _144607)).
Proof. exact (eq_refl (@all (_144530 -> _144607))). Qed.
Lemma lem8195732 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (q : type560 _144530 _144607 P) : (term224 _144529 _144530 _144607 _144645 P p pat e lt2 s q) = (term709 _144529 _144530 _144607 _144645 P p pat e lt2 s q).
Proof. exact (MK_COMB (@lem8195731 _144530 _144607) (@lem8195730 _144529 _144530 _144607 _144645 P p pat e lt2 s q)). Qed.
Lemma lem8195839 {A : Type'} (P : Prop) (Q : A -> Prop) : (term433 A P Q) = (term434 A P Q).
Proof. exact (EQ_MP (@lem18911 A P Q) (@lem18910 A P Q)). Qed.
Lemma lem8195840 {_144530 : Type'} (P : Prop) (Q : _144530 -> Prop) : (term433 _144530 P Q) = (term434 _144530 P Q).
Proof. exact (@lem8195839 _144530 P Q). Qed.
Lemma lem8195841 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term710 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g) = (term711 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g).
Proof. exact (@lem8195840 _144530 (term690 _144530 _144607 _144645 P p pat e g a) (term414 _144529 _144530 _144607 P lt2 s a f g)). Qed.
Lemma lem8195842 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (z : _144530) : (term438 _144529 _144530 _144607 P lt2 s a f g z) = (term405 _144529 _144530 _144607 P lt2 s a f g z).
Proof. exact (eq_refl (term438 _144529 _144530 _144607 P lt2 s a f g z)). Qed.
Lemma lem8195843 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term439 _144529 _144530 _144607 P lt2 s a f g) = (term414 _144529 _144530 _144607 P lt2 s a f g).
Proof. exact (fun_ext (fun z : _144530 => @lem8195842 _144529 _144530 _144607 P lt2 s a f g z)). Qed.
Lemma lem8195844 {_144530 : Type'} : (@ex _144530) = (@ex _144530).
Proof. exact (eq_refl (@ex _144530)). Qed.
Lemma lem8195845 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term440 _144529 _144530 _144607 P lt2 s a f g) = (term415 _144529 _144530 _144607 P lt2 s a f g).
Proof. exact (MK_COMB (@lem8195844 _144530) (@lem8195843 _144529 _144530 _144607 P lt2 s a f g)). Qed.
Lemma lem8195846 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term692 _144530 _144607 _144645 P p pat e g a) = (term692 _144530 _144607 _144645 P p pat e g a).
Proof. exact (eq_refl (term692 _144530 _144607 _144645 P p pat e g a)). Qed.
Lemma lem8195847 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term710 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g) = (term694 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g).
Proof. exact (MK_COMB (@lem8195846 _144530 _144607 _144645 P p pat e g a) (@lem8195845 _144529 _144530 _144607 P lt2 s a f g)). Qed.
Lemma lem8195848 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8195849 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term712 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g) = (term713 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g).
Proof. exact (MK_COMB (@lem8195848) (@lem8195847 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g)). Qed.
Lemma lem8195850 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (z : _144530) : (term438 _144529 _144530 _144607 P lt2 s a f g z) = (term405 _144529 _144530 _144607 P lt2 s a f g z).
Proof. exact (eq_refl (term438 _144529 _144530 _144607 P lt2 s a f g z)). Qed.
Lemma lem8195851 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term692 _144530 _144607 _144645 P p pat e g a) = (term692 _144530 _144607 _144645 P p pat e g a).
Proof. exact (eq_refl (term692 _144530 _144607 _144645 P p pat e g a)). Qed.
Lemma lem8195852 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (z : _144530) : (term714 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g z) = (term715 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g z).
Proof. exact (MK_COMB (@lem8195851 _144530 _144607 _144645 P p pat e g a) (@lem8195850 _144529 _144530 _144607 P lt2 s a f g z)). Qed.
Lemma lem8195853 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term716 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g) = (term717 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g).
Proof. exact (fun_ext (fun z : _144530 => @lem8195852 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g z)). Qed.
Lemma lem8195854 {_144530 : Type'} : (@ex _144530) = (@ex _144530).
Proof. exact (eq_refl (@ex _144530)). Qed.
Lemma lem8195855 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term711 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g) = (term718 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g).
Proof. exact (MK_COMB (@lem8195854 _144530) (@lem8195853 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g)). Qed.
Lemma lem8195856 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : ((term710 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g) = (term711 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g)) = ((term694 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g) = (term718 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g)).
Proof. exact (MK_COMB (@lem8195849 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g) (@lem8195855 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g)). Qed.
Lemma lem8195857 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term694 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g) = (term718 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g).
Proof. exact (EQ_MP (@lem8195856 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g) (@lem8195841 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g)). Qed.
Lemma lem8195858 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (a : P) : (term692 _144530 _144607 _144645 P p pat e f a) = (term692 _144530 _144607 _144645 P p pat e f a).
Proof. exact (eq_refl (term692 _144530 _144607 _144645 P p pat e f a)). Qed.
Lemma lem8195859 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term697 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g) = (term719 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g).
Proof. exact (MK_COMB (@lem8195858 _144530 _144607 _144645 P p pat e f a) (@lem8195857 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g)). Qed.
Lemma lem8195861 {A : Type'} (P : Prop) (Q : A -> Prop) : (term433 A P Q) = (term434 A P Q).
Proof. exact (EQ_MP (@lem18911 A P Q) (@lem18910 A P Q)). Qed.
Lemma lem8195862 {_144530 : Type'} (P : Prop) (Q : _144530 -> Prop) : (term433 _144530 P Q) = (term434 _144530 P Q).
Proof. exact (@lem8195861 _144530 P Q). Qed.
Lemma lem8195863 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term720 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g) = (term721 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g).
Proof. exact (@lem8195862 _144530 (term690 _144530 _144607 _144645 P p pat e f a) (term717 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g)). Qed.
Lemma lem8195864 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (z : _144530) : (term722 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g z) = (term715 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g z).
Proof. exact (eq_refl (term722 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g z)). Qed.
Lemma lem8195865 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term723 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g) = (term717 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g).
Proof. exact (fun_ext (fun z : _144530 => @lem8195864 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g z)). Qed.
Lemma lem8195866 {_144530 : Type'} : (@ex _144530) = (@ex _144530).
Proof. exact (eq_refl (@ex _144530)). Qed.
Lemma lem8195867 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term724 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g) = (term718 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g).
Proof. exact (MK_COMB (@lem8195866 _144530) (@lem8195865 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g)). Qed.
Lemma lem8195868 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (a : P) : (term692 _144530 _144607 _144645 P p pat e f a) = (term692 _144530 _144607 _144645 P p pat e f a).
Proof. exact (eq_refl (term692 _144530 _144607 _144645 P p pat e f a)). Qed.
Lemma lem8195869 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term720 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g) = (term719 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g).
Proof. exact (MK_COMB (@lem8195868 _144530 _144607 _144645 P p pat e f a) (@lem8195867 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g)). Qed.
Lemma lem8195870 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8195871 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term725 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g) = (term726 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g).
Proof. exact (MK_COMB (@lem8195870) (@lem8195869 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g)). Qed.
Lemma lem8195872 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (z : _144530) : (term722 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g z) = (term715 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g z).
Proof. exact (eq_refl (term722 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g z)). Qed.
Lemma lem8195873 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (a : P) : (term692 _144530 _144607 _144645 P p pat e f a) = (term692 _144530 _144607 _144645 P p pat e f a).
Proof. exact (eq_refl (term692 _144530 _144607 _144645 P p pat e f a)). Qed.
Lemma lem8195874 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (z : _144530) : (term727 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g z) = (term728 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g z).
Proof. exact (MK_COMB (@lem8195873 _144530 _144607 _144645 P p pat e f a) (@lem8195872 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g z)). Qed.
Lemma lem8195875 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term729 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g) = (term730 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g).
Proof. exact (fun_ext (fun z : _144530 => @lem8195874 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g z)). Qed.
Lemma lem8195876 {_144530 : Type'} : (@ex _144530) = (@ex _144530).
Proof. exact (eq_refl (@ex _144530)). Qed.
Lemma lem8195877 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term721 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g) = (term731 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g).
Proof. exact (MK_COMB (@lem8195876 _144530) (@lem8195875 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g)). Qed.
Lemma lem8195878 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : ((term720 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g) = (term721 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g)) = ((term719 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g) = (term731 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g)).
Proof. exact (MK_COMB (@lem8195871 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g) (@lem8195877 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g)). Qed.
Lemma lem8195879 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term719 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g) = (term731 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g).
Proof. exact (EQ_MP (@lem8195878 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g) (@lem8195863 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g)). Qed.
Lemma lem8195880 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term697 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g) = (term731 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g).
Proof. exact (TRANS (@lem8195859 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g) (@lem8195879 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g)). Qed.
Lemma lem8195881 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8195882 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term701 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g) = (term732 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g).
Proof. exact (MK_COMB (@lem8195881) (@lem8195880 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g)). Qed.
Lemma lem8195883 {_144530 _144607 P : Type'} (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term699 _144530 _144607 P f q g a) = (term699 _144530 _144607 P f q g a).
Proof. exact (eq_refl (term699 _144530 _144607 P f q g a)). Qed.
Lemma lem8195884 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term703 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g a) = (term733 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g a).
Proof. exact (MK_COMB (@lem8195882 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g) (@lem8195883 _144530 _144607 P f q g a)). Qed.
Lemma lem8195886 {A : Type'} (P : A -> Prop) (Q : Prop) : (term463 A P Q) = (term464 A P Q).
Proof. exact (EQ_MP (@lem18905 A P Q) (@lem18904 A P Q)). Qed.
Lemma lem8195887 {_144530 : Type'} (P : _144530 -> Prop) (Q : Prop) : (term463 _144530 P Q) = (term464 _144530 P Q).
Proof. exact (@lem8195886 _144530 P Q). Qed.
Lemma lem8195888 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term734 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g a) = (term735 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g a).
Proof. exact (@lem8195887 _144530 (term730 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g) (term699 _144530 _144607 P f q g a)). Qed.
Lemma lem8195889 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (z : _144530) : (term736 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g z) = (term728 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g z).
Proof. exact (eq_refl (term736 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g z)). Qed.
Lemma lem8195890 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term737 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g) = (term730 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g).
Proof. exact (fun_ext (fun z : _144530 => @lem8195889 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g z)). Qed.
Lemma lem8195891 {_144530 : Type'} : (@ex _144530) = (@ex _144530).
Proof. exact (eq_refl (@ex _144530)). Qed.
Lemma lem8195892 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term738 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g) = (term731 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g).
Proof. exact (MK_COMB (@lem8195891 _144530) (@lem8195890 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g)). Qed.
Lemma lem8195893 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8195894 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term739 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g) = (term732 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g).
Proof. exact (MK_COMB (@lem8195893) (@lem8195892 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g)). Qed.
Lemma lem8195895 {_144530 _144607 P : Type'} (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term699 _144530 _144607 P f q g a) = (term699 _144530 _144607 P f q g a).
Proof. exact (eq_refl (term699 _144530 _144607 P f q g a)). Qed.
Lemma lem8195896 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term734 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g a) = (term733 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g a).
Proof. exact (MK_COMB (@lem8195894 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g) (@lem8195895 _144530 _144607 P f q g a)). Qed.
Lemma lem8195897 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8195898 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term740 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g a) = (term741 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g a).
Proof. exact (MK_COMB (@lem8195897) (@lem8195896 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g a)). Qed.
Lemma lem8195899 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (z : _144530) : (term736 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g z) = (term728 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g z).
Proof. exact (eq_refl (term736 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g z)). Qed.
Lemma lem8195900 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8195901 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (z : _144530) : (term742 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g z) = (term743 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g z).
Proof. exact (MK_COMB (@lem8195900) (@lem8195899 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g z)). Qed.
Lemma lem8195902 {_144530 _144607 P : Type'} (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term699 _144530 _144607 P f q g a) = (term699 _144530 _144607 P f q g a).
Proof. exact (eq_refl (term699 _144530 _144607 P f q g a)). Qed.
Lemma lem8195903 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : _144530) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term744 _144529 _144530 _144607 _144645 P p pat e lt2 s z f q g a) = (term745 _144529 _144530 _144607 _144645 P p pat e lt2 s z f q g a).
Proof. exact (MK_COMB (@lem8195901 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g z) (@lem8195902 _144530 _144607 P f q g a)). Qed.
Lemma lem8195904 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term746 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g a) = (term747 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g a).
Proof. exact (fun_ext (fun z : _144530 => @lem8195903 _144529 _144530 _144607 _144645 P p pat e lt2 s z f q g a)). Qed.
Lemma lem8195905 {_144530 : Type'} : (@ex _144530) = (@ex _144530).
Proof. exact (eq_refl (@ex _144530)). Qed.
Lemma lem8195906 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term735 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g a) = (term748 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g a).
Proof. exact (MK_COMB (@lem8195905 _144530) (@lem8195904 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g a)). Qed.
Lemma lem8195907 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : ((term734 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g a) = (term735 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g a)) = ((term733 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g a) = (term748 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g a)).
Proof. exact (MK_COMB (@lem8195898 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g a) (@lem8195906 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g a)). Qed.
Lemma lem8195908 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term733 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g a) = (term748 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g a).
Proof. exact (EQ_MP (@lem8195907 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g a) (@lem8195888 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g a)). Qed.
Lemma lem8195909 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term703 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g a) = (term748 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g a).
Proof. exact (TRANS (@lem8195884 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g a) (@lem8195908 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g a)). Qed.
Lemma lem8195910 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) : (term704 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g) = (term749 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g).
Proof. exact (fun_ext (fun a : P => @lem8195909 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g a)). Qed.
Lemma lem8195911 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8195912 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) : (term705 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g) = (term750 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g).
Proof. exact (MK_COMB (@lem8195911 P) (@lem8195910 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g)). Qed.
Lemma lem8195914 {A B : Type'} (P : type1413 A B) : (term482 A B P) = (term483 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem8195915 {_144530 P : Type'} (P' : type1470 _144530 P) : (term484 _144530 P P') = (term485 _144530 P P').
Proof. exact (@lem8195914 P _144530 P'). Qed.
Lemma lem8195916 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) : (term751 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g) = (term752 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g).
Proof. exact (@lem8195915 _144530 P (term753 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g)). Qed.
Lemma lem8195917 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term754 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g a) = (term747 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g a).
Proof. exact (eq_refl (term754 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g a)). Qed.
Lemma lem8195918 {_144530 : Type'} (z : _144530) : z = z.
Proof. exact (eq_refl z). Qed.
Lemma lem8195919 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (z : _144530) : (term755 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g a z) = (term756 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g a z).
Proof. exact (MK_COMB (@lem8195917 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g a) (@lem8195918 _144530 z)). Qed.
Lemma lem8195920 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : _144530) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term756 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g a z) = (term745 _144529 _144530 _144607 _144645 P p pat e lt2 s z f q g a).
Proof. exact (eq_refl (term756 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g a z)). Qed.
Lemma lem8195921 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : _144530) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term755 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g a z) = (term745 _144529 _144530 _144607 _144645 P p pat e lt2 s z f q g a).
Proof. exact (TRANS (@lem8195919 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g a z) (@lem8195920 _144529 _144530 _144607 _144645 P p pat e lt2 s z f q g a)). Qed.
Lemma lem8195922 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term757 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g a) = (term747 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g a).
Proof. exact (fun_ext (fun z : _144530 => @lem8195921 _144529 _144530 _144607 _144645 P p pat e lt2 s z f q g a)). Qed.
Lemma lem8195923 {_144530 : Type'} : (@ex _144530) = (@ex _144530).
Proof. exact (eq_refl (@ex _144530)). Qed.
Lemma lem8195924 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term758 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g a) = (term748 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g a).
Proof. exact (MK_COMB (@lem8195923 _144530) (@lem8195922 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g a)). Qed.
Lemma lem8195925 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) : (term759 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g) = (term749 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g).
Proof. exact (fun_ext (fun a : P => @lem8195924 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g a)). Qed.
Lemma lem8195926 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8195927 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) : (term751 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g) = (term750 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g).
Proof. exact (MK_COMB (@lem8195926 P) (@lem8195925 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g)). Qed.
Lemma lem8195928 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8195929 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) : (term760 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g) = (term761 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g).
Proof. exact (MK_COMB (@lem8195928) (@lem8195927 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g)). Qed.
Lemma lem8195930 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term754 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g a) = (term747 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g a).
Proof. exact (eq_refl (term754 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g a)). Qed.
Lemma lem8195931 {_144530 P : Type'} (z : P -> _144530) (a : P) : (z a) = (z a).
Proof. exact (eq_refl (z a)). Qed.
Lemma lem8195932 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (z : P -> _144530) (a : P) : (term762 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g z a) = (term763 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g z a).
Proof. exact (MK_COMB (@lem8195930 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g a) (@lem8195931 _144530 P z a)). Qed.
Lemma lem8195933 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : P -> _144530) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term763 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g z a) = (term764 _144529 _144530 _144607 _144645 P p pat e lt2 s z f q g a).
Proof. exact (eq_refl (term763 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g z a)). Qed.
Lemma lem8195934 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : P -> _144530) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term762 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g z a) = (term764 _144529 _144530 _144607 _144645 P p pat e lt2 s z f q g a).
Proof. exact (TRANS (@lem8195932 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g z a) (@lem8195933 _144529 _144530 _144607 _144645 P p pat e lt2 s z f q g a)). Qed.
Lemma lem8195935 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : P -> _144530) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) : (term765 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g z) = (term766 _144529 _144530 _144607 _144645 P p pat e lt2 s z f q g).
Proof. exact (fun_ext (fun a : P => @lem8195934 _144529 _144530 _144607 _144645 P p pat e lt2 s z f q g a)). Qed.
Lemma lem8195936 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8195937 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : P -> _144530) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) : (term767 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g z) = (term768 _144529 _144530 _144607 _144645 P p pat e lt2 s z f q g).
Proof. exact (MK_COMB (@lem8195936 P) (@lem8195935 _144529 _144530 _144607 _144645 P p pat e lt2 s z f q g)). Qed.
Lemma lem8195938 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) : (term769 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g) = (term770 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g).
Proof. exact (fun_ext (fun z : P -> _144530 => @lem8195937 _144529 _144530 _144607 _144645 P p pat e lt2 s z f q g)). Qed.
Lemma lem8195939 {_144530 P : Type'} : (@ex (P -> _144530)) = (@ex (P -> _144530)).
Proof. exact (eq_refl (@ex (P -> _144530))). Qed.
Lemma lem8195940 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) : (term752 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g) = (term771 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g).
Proof. exact (MK_COMB (@lem8195939 _144530 P) (@lem8195938 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g)). Qed.
Lemma lem8195941 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) : ((term751 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g) = (term752 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g)) = ((term750 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g) = (term771 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g)).
Proof. exact (MK_COMB (@lem8195929 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g) (@lem8195940 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g)). Qed.
Lemma lem8195942 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) : (term750 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g) = (term771 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g).
Proof. exact (EQ_MP (@lem8195941 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g) (@lem8195916 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g)). Qed.
Lemma lem8195943 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) : (term705 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g) = (term771 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g).
Proof. exact (TRANS (@lem8195912 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g) (@lem8195942 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g)). Qed.
Lemma lem8195944 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) : (term706 _144529 _144530 _144607 _144645 P p pat e lt2 s f q) = (term772 _144529 _144530 _144607 _144645 P p pat e lt2 s f q).
Proof. exact (fun_ext (fun g : _144530 -> _144607 => @lem8195943 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g)). Qed.
Lemma lem8195945 {_144530 _144607 : Type'} : (@all (_144530 -> _144607)) = (@all (_144530 -> _144607)).
Proof. exact (eq_refl (@all (_144530 -> _144607))). Qed.
Lemma lem8195946 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) : (term707 _144529 _144530 _144607 _144645 P p pat e lt2 s f q) = (term773 _144529 _144530 _144607 _144645 P p pat e lt2 s f q).
Proof. exact (MK_COMB (@lem8195945 _144530 _144607) (@lem8195944 _144529 _144530 _144607 _144645 P p pat e lt2 s f q)). Qed.
Lemma lem8195948 {A B : Type'} (P : type1413 A B) : (term482 A B P) = (term483 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem8195949 {_144530 _144607 P : Type'} (P' : type537 _144530 _144607 P) : (term509 _144530 _144607 P P') = (term510 _144530 _144607 P P').
Proof. exact (@lem8195948 (_144530 -> _144607) (P -> _144530) P'). Qed.
Lemma lem8195950 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) : (term774 _144529 _144530 _144607 _144645 P p pat e lt2 s f q) = (term775 _144529 _144530 _144607 _144645 P p pat e lt2 s f q).
Proof. exact (@lem8195949 _144530 _144607 P (term776 _144529 _144530 _144607 _144645 P p pat e lt2 s f q)). Qed.
Lemma lem8195951 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) : (term777 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g) = (term770 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g).
Proof. exact (eq_refl (term777 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g)). Qed.
Lemma lem8195952 {_144530 P : Type'} (z : P -> _144530) : z = z.
Proof. exact (eq_refl z). Qed.
Lemma lem8195953 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (z : P -> _144530) : (term778 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g z) = (term779 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g z).
Proof. exact (MK_COMB (@lem8195951 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g) (@lem8195952 _144530 P z)). Qed.
Lemma lem8195954 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : P -> _144530) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) : (term779 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g z) = (term768 _144529 _144530 _144607 _144645 P p pat e lt2 s z f q g).
Proof. exact (eq_refl (term779 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g z)). Qed.
Lemma lem8195955 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : P -> _144530) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) : (term778 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g z) = (term768 _144529 _144530 _144607 _144645 P p pat e lt2 s z f q g).
Proof. exact (TRANS (@lem8195953 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g z) (@lem8195954 _144529 _144530 _144607 _144645 P p pat e lt2 s z f q g)). Qed.
Lemma lem8195956 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) : (term780 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g) = (term770 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g).
Proof. exact (fun_ext (fun z : P -> _144530 => @lem8195955 _144529 _144530 _144607 _144645 P p pat e lt2 s z f q g)). Qed.
Lemma lem8195957 {_144530 P : Type'} : (@ex (P -> _144530)) = (@ex (P -> _144530)).
Proof. exact (eq_refl (@ex (P -> _144530))). Qed.
Lemma lem8195958 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) : (term781 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g) = (term771 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g).
Proof. exact (MK_COMB (@lem8195957 _144530 P) (@lem8195956 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g)). Qed.
Lemma lem8195959 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) : (term782 _144529 _144530 _144607 _144645 P p pat e lt2 s f q) = (term772 _144529 _144530 _144607 _144645 P p pat e lt2 s f q).
Proof. exact (fun_ext (fun g : _144530 -> _144607 => @lem8195958 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g)). Qed.
Lemma lem8195960 {_144530 _144607 : Type'} : (@all (_144530 -> _144607)) = (@all (_144530 -> _144607)).
Proof. exact (eq_refl (@all (_144530 -> _144607))). Qed.
Lemma lem8195961 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) : (term774 _144529 _144530 _144607 _144645 P p pat e lt2 s f q) = (term773 _144529 _144530 _144607 _144645 P p pat e lt2 s f q).
Proof. exact (MK_COMB (@lem8195960 _144530 _144607) (@lem8195959 _144529 _144530 _144607 _144645 P p pat e lt2 s f q)). Qed.
Lemma lem8195962 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8195963 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) : (term783 _144529 _144530 _144607 _144645 P p pat e lt2 s f q) = (term784 _144529 _144530 _144607 _144645 P p pat e lt2 s f q).
Proof. exact (MK_COMB (@lem8195962) (@lem8195961 _144529 _144530 _144607 _144645 P p pat e lt2 s f q)). Qed.
Lemma lem8195964 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) : (term777 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g) = (term770 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g).
Proof. exact (eq_refl (term777 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g)). Qed.
Lemma lem8195965 {_144530 _144607 P : Type'} (z : type557 _144530 _144607 P) (g : _144530 -> _144607) : (z g) = (z g).
Proof. exact (eq_refl (z g)). Qed.
Lemma lem8195966 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (z : type557 _144530 _144607 P) (g : _144530 -> _144607) : (term785 _144529 _144530 _144607 _144645 P p pat e lt2 s f q z g) = (term786 _144529 _144530 _144607 _144645 P p pat e lt2 s f q z g).
Proof. exact (MK_COMB (@lem8195964 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g) (@lem8195965 _144530 _144607 P z g)). Qed.
Lemma lem8195967 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : type557 _144530 _144607 P) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) : (term786 _144529 _144530 _144607 _144645 P p pat e lt2 s f q z g) = (term787 _144529 _144530 _144607 _144645 P p pat e lt2 s z f q g).
Proof. exact (eq_refl (term786 _144529 _144530 _144607 _144645 P p pat e lt2 s f q z g)). Qed.
Lemma lem8195968 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : type557 _144530 _144607 P) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) : (term785 _144529 _144530 _144607 _144645 P p pat e lt2 s f q z g) = (term787 _144529 _144530 _144607 _144645 P p pat e lt2 s z f q g).
Proof. exact (TRANS (@lem8195966 _144529 _144530 _144607 _144645 P p pat e lt2 s f q z g) (@lem8195967 _144529 _144530 _144607 _144645 P p pat e lt2 s z f q g)). Qed.
Lemma lem8195969 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : type557 _144530 _144607 P) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) : (term788 _144529 _144530 _144607 _144645 P p pat e lt2 s f q z) = (term789 _144529 _144530 _144607 _144645 P p pat e lt2 s z f q).
Proof. exact (fun_ext (fun g : _144530 -> _144607 => @lem8195968 _144529 _144530 _144607 _144645 P p pat e lt2 s z f q g)). Qed.
Lemma lem8195970 {_144530 _144607 : Type'} : (@all (_144530 -> _144607)) = (@all (_144530 -> _144607)).
Proof. exact (eq_refl (@all (_144530 -> _144607))). Qed.
Lemma lem8195971 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : type557 _144530 _144607 P) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) : (term790 _144529 _144530 _144607 _144645 P p pat e lt2 s f q z) = (term791 _144529 _144530 _144607 _144645 P p pat e lt2 s z f q).
Proof. exact (MK_COMB (@lem8195970 _144530 _144607) (@lem8195969 _144529 _144530 _144607 _144645 P p pat e lt2 s z f q)). Qed.
Lemma lem8195972 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) : (term792 _144529 _144530 _144607 _144645 P p pat e lt2 s f q) = (term793 _144529 _144530 _144607 _144645 P p pat e lt2 s f q).
Proof. exact (fun_ext (fun z : type557 _144530 _144607 P => @lem8195971 _144529 _144530 _144607 _144645 P p pat e lt2 s z f q)). Qed.
Lemma lem8195973 {_144530 _144607 P : Type'} : (@ex ((_144530 -> _144607) -> P -> _144530)) = (@ex ((_144530 -> _144607) -> P -> _144530)).
Proof. exact (eq_refl (@ex ((_144530 -> _144607) -> P -> _144530))). Qed.
Lemma lem8195974 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) : (term775 _144529 _144530 _144607 _144645 P p pat e lt2 s f q) = (term794 _144529 _144530 _144607 _144645 P p pat e lt2 s f q).
Proof. exact (MK_COMB (@lem8195973 _144530 _144607 P) (@lem8195972 _144529 _144530 _144607 _144645 P p pat e lt2 s f q)). Qed.
Lemma lem8195975 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) : ((term774 _144529 _144530 _144607 _144645 P p pat e lt2 s f q) = (term775 _144529 _144530 _144607 _144645 P p pat e lt2 s f q)) = ((term773 _144529 _144530 _144607 _144645 P p pat e lt2 s f q) = (term794 _144529 _144530 _144607 _144645 P p pat e lt2 s f q)).
Proof. exact (MK_COMB (@lem8195963 _144529 _144530 _144607 _144645 P p pat e lt2 s f q) (@lem8195974 _144529 _144530 _144607 _144645 P p pat e lt2 s f q)). Qed.
Lemma lem8195976 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) : (term773 _144529 _144530 _144607 _144645 P p pat e lt2 s f q) = (term794 _144529 _144530 _144607 _144645 P p pat e lt2 s f q).
Proof. exact (EQ_MP (@lem8195975 _144529 _144530 _144607 _144645 P p pat e lt2 s f q) (@lem8195950 _144529 _144530 _144607 _144645 P p pat e lt2 s f q)). Qed.
Lemma lem8195977 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) : (term707 _144529 _144530 _144607 _144645 P p pat e lt2 s f q) = (term794 _144529 _144530 _144607 _144645 P p pat e lt2 s f q).
Proof. exact (TRANS (@lem8195946 _144529 _144530 _144607 _144645 P p pat e lt2 s f q) (@lem8195976 _144529 _144530 _144607 _144645 P p pat e lt2 s f q)). Qed.
Lemma lem8195978 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (q : type560 _144530 _144607 P) : (term708 _144529 _144530 _144607 _144645 P p pat e lt2 s q) = (term795 _144529 _144530 _144607 _144645 P p pat e lt2 s q).
Proof. exact (fun_ext (fun f : _144530 -> _144607 => @lem8195977 _144529 _144530 _144607 _144645 P p pat e lt2 s f q)). Qed.
Lemma lem8195979 {_144530 _144607 : Type'} : (@all (_144530 -> _144607)) = (@all (_144530 -> _144607)).
Proof. exact (eq_refl (@all (_144530 -> _144607))). Qed.
Lemma lem8195980 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (q : type560 _144530 _144607 P) : (term709 _144529 _144530 _144607 _144645 P p pat e lt2 s q) = (term796 _144529 _144530 _144607 _144645 P p pat e lt2 s q).
Proof. exact (MK_COMB (@lem8195979 _144530 _144607) (@lem8195978 _144529 _144530 _144607 _144645 P p pat e lt2 s q)). Qed.
Lemma lem8195982 {A B : Type'} (P : type1413 A B) : (term482 A B P) = (term483 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem8195983 {_144530 _144607 P : Type'} (P' : type495 _144530 _144607 P) : (term534 _144530 _144607 P P') = (term535 _144530 _144607 P P').
Proof. exact (@lem8195982 (_144530 -> _144607) (type557 _144530 _144607 P) P'). Qed.
Lemma lem8195984 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (q : type560 _144530 _144607 P) : (term797 _144529 _144530 _144607 _144645 P p pat e lt2 s q) = (term798 _144529 _144530 _144607 _144645 P p pat e lt2 s q).
Proof. exact (@lem8195983 _144530 _144607 P (term799 _144529 _144530 _144607 _144645 P p pat e lt2 s q)). Qed.
Lemma lem8195985 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) : (term800 _144529 _144530 _144607 _144645 P p pat e lt2 s q f) = (term793 _144529 _144530 _144607 _144645 P p pat e lt2 s f q).
Proof. exact (eq_refl (term800 _144529 _144530 _144607 _144645 P p pat e lt2 s q f)). Qed.
Lemma lem8195986 {_144530 _144607 P : Type'} (z : type557 _144530 _144607 P) : z = z.
Proof. exact (eq_refl z). Qed.
Lemma lem8195987 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (z : type557 _144530 _144607 P) : (term801 _144529 _144530 _144607 _144645 P p pat e lt2 s q f z) = (term802 _144529 _144530 _144607 _144645 P p pat e lt2 s f q z).
Proof. exact (MK_COMB (@lem8195985 _144529 _144530 _144607 _144645 P p pat e lt2 s f q) (@lem8195986 _144530 _144607 P z)). Qed.
Lemma lem8195988 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : type557 _144530 _144607 P) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) : (term802 _144529 _144530 _144607 _144645 P p pat e lt2 s f q z) = (term791 _144529 _144530 _144607 _144645 P p pat e lt2 s z f q).
Proof. exact (eq_refl (term802 _144529 _144530 _144607 _144645 P p pat e lt2 s f q z)). Qed.
Lemma lem8195989 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : type557 _144530 _144607 P) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) : (term801 _144529 _144530 _144607 _144645 P p pat e lt2 s q f z) = (term791 _144529 _144530 _144607 _144645 P p pat e lt2 s z f q).
Proof. exact (TRANS (@lem8195987 _144529 _144530 _144607 _144645 P p pat e lt2 s f q z) (@lem8195988 _144529 _144530 _144607 _144645 P p pat e lt2 s z f q)). Qed.
Lemma lem8195990 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) : (term803 _144529 _144530 _144607 _144645 P p pat e lt2 s q f) = (term793 _144529 _144530 _144607 _144645 P p pat e lt2 s f q).
Proof. exact (fun_ext (fun z : type557 _144530 _144607 P => @lem8195989 _144529 _144530 _144607 _144645 P p pat e lt2 s z f q)). Qed.
Lemma lem8195991 {_144530 _144607 P : Type'} : (@ex ((_144530 -> _144607) -> P -> _144530)) = (@ex ((_144530 -> _144607) -> P -> _144530)).
Proof. exact (eq_refl (@ex ((_144530 -> _144607) -> P -> _144530))). Qed.
Lemma lem8195992 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) : (term804 _144529 _144530 _144607 _144645 P p pat e lt2 s q f) = (term794 _144529 _144530 _144607 _144645 P p pat e lt2 s f q).
Proof. exact (MK_COMB (@lem8195991 _144530 _144607 P) (@lem8195990 _144529 _144530 _144607 _144645 P p pat e lt2 s f q)). Qed.
Lemma lem8195993 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (q : type560 _144530 _144607 P) : (term805 _144529 _144530 _144607 _144645 P p pat e lt2 s q) = (term795 _144529 _144530 _144607 _144645 P p pat e lt2 s q).
Proof. exact (fun_ext (fun f : _144530 -> _144607 => @lem8195992 _144529 _144530 _144607 _144645 P p pat e lt2 s f q)). Qed.
Lemma lem8195994 {_144530 _144607 : Type'} : (@all (_144530 -> _144607)) = (@all (_144530 -> _144607)).
Proof. exact (eq_refl (@all (_144530 -> _144607))). Qed.
Lemma lem8195995 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (q : type560 _144530 _144607 P) : (term797 _144529 _144530 _144607 _144645 P p pat e lt2 s q) = (term796 _144529 _144530 _144607 _144645 P p pat e lt2 s q).
Proof. exact (MK_COMB (@lem8195994 _144530 _144607) (@lem8195993 _144529 _144530 _144607 _144645 P p pat e lt2 s q)). Qed.
Lemma lem8195996 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8195997 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (q : type560 _144530 _144607 P) : (term806 _144529 _144530 _144607 _144645 P p pat e lt2 s q) = (term807 _144529 _144530 _144607 _144645 P p pat e lt2 s q).
Proof. exact (MK_COMB (@lem8195996) (@lem8195995 _144529 _144530 _144607 _144645 P p pat e lt2 s q)). Qed.
Lemma lem8195998 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) : (term800 _144529 _144530 _144607 _144645 P p pat e lt2 s q f) = (term793 _144529 _144530 _144607 _144645 P p pat e lt2 s f q).
Proof. exact (eq_refl (term800 _144529 _144530 _144607 _144645 P p pat e lt2 s q f)). Qed.
Lemma lem8195999 {_144530 _144607 P : Type'} (z : type518 _144530 _144607 P) (f : _144530 -> _144607) : (z f) = (z f).
Proof. exact (eq_refl (z f)). Qed.
Lemma lem8196000 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (q : type560 _144530 _144607 P) (z : type518 _144530 _144607 P) (f : _144530 -> _144607) : (term808 _144529 _144530 _144607 _144645 P p pat e lt2 s q z f) = (term809 _144529 _144530 _144607 _144645 P p pat e lt2 s q z f).
Proof. exact (MK_COMB (@lem8195998 _144529 _144530 _144607 _144645 P p pat e lt2 s f q) (@lem8195999 _144530 _144607 P z f)). Qed.
Lemma lem8196001 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : type518 _144530 _144607 P) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) : (term809 _144529 _144530 _144607 _144645 P p pat e lt2 s q z f) = (term810 _144529 _144530 _144607 _144645 P p pat e lt2 s z f q).
Proof. exact (eq_refl (term809 _144529 _144530 _144607 _144645 P p pat e lt2 s q z f)). Qed.
Lemma lem8196002 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : type518 _144530 _144607 P) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) : (term808 _144529 _144530 _144607 _144645 P p pat e lt2 s q z f) = (term810 _144529 _144530 _144607 _144645 P p pat e lt2 s z f q).
Proof. exact (TRANS (@lem8196000 _144529 _144530 _144607 _144645 P p pat e lt2 s q z f) (@lem8196001 _144529 _144530 _144607 _144645 P p pat e lt2 s z f q)). Qed.
Lemma lem8196003 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : type518 _144530 _144607 P) (q : type560 _144530 _144607 P) : (term811 _144529 _144530 _144607 _144645 P p pat e lt2 s q z) = (term812 _144529 _144530 _144607 _144645 P p pat e lt2 s z q).
Proof. exact (fun_ext (fun f : _144530 -> _144607 => @lem8196002 _144529 _144530 _144607 _144645 P p pat e lt2 s z f q)). Qed.
Lemma lem8196004 {_144530 _144607 : Type'} : (@all (_144530 -> _144607)) = (@all (_144530 -> _144607)).
Proof. exact (eq_refl (@all (_144530 -> _144607))). Qed.
Lemma lem8196005 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : type518 _144530 _144607 P) (q : type560 _144530 _144607 P) : (term813 _144529 _144530 _144607 _144645 P p pat e lt2 s q z) = (term814 _144529 _144530 _144607 _144645 P p pat e lt2 s z q).
Proof. exact (MK_COMB (@lem8196004 _144530 _144607) (@lem8196003 _144529 _144530 _144607 _144645 P p pat e lt2 s z q)). Qed.
Lemma lem8196006 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (q : type560 _144530 _144607 P) : (term815 _144529 _144530 _144607 _144645 P p pat e lt2 s q) = (term816 _144529 _144530 _144607 _144645 P p pat e lt2 s q).
Proof. exact (fun_ext (fun z : type518 _144530 _144607 P => @lem8196005 _144529 _144530 _144607 _144645 P p pat e lt2 s z q)). Qed.
Lemma lem8196007 {_144530 _144607 P : Type'} : (@ex ((_144530 -> _144607) -> (_144530 -> _144607) -> P -> _144530)) = (@ex ((_144530 -> _144607) -> (_144530 -> _144607) -> P -> _144530)).
Proof. exact (eq_refl (@ex ((_144530 -> _144607) -> (_144530 -> _144607) -> P -> _144530))). Qed.
Lemma lem8196008 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (q : type560 _144530 _144607 P) : (term798 _144529 _144530 _144607 _144645 P p pat e lt2 s q) = (term817 _144529 _144530 _144607 _144645 P p pat e lt2 s q).
Proof. exact (MK_COMB (@lem8196007 _144530 _144607 P) (@lem8196006 _144529 _144530 _144607 _144645 P p pat e lt2 s q)). Qed.
Lemma lem8196009 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (q : type560 _144530 _144607 P) : ((term797 _144529 _144530 _144607 _144645 P p pat e lt2 s q) = (term798 _144529 _144530 _144607 _144645 P p pat e lt2 s q)) = ((term796 _144529 _144530 _144607 _144645 P p pat e lt2 s q) = (term817 _144529 _144530 _144607 _144645 P p pat e lt2 s q)).
Proof. exact (MK_COMB (@lem8195997 _144529 _144530 _144607 _144645 P p pat e lt2 s q) (@lem8196008 _144529 _144530 _144607 _144645 P p pat e lt2 s q)). Qed.
Lemma lem8196010 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (q : type560 _144530 _144607 P) : (term796 _144529 _144530 _144607 _144645 P p pat e lt2 s q) = (term817 _144529 _144530 _144607 _144645 P p pat e lt2 s q).
Proof. exact (EQ_MP (@lem8196009 _144529 _144530 _144607 _144645 P p pat e lt2 s q) (@lem8195984 _144529 _144530 _144607 _144645 P p pat e lt2 s q)). Qed.
Lemma lem8196012 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (q : type560 _144530 _144607 P) : (term709 _144529 _144530 _144607 _144645 P p pat e lt2 s q) = (term817 _144529 _144530 _144607 _144645 P p pat e lt2 s q).
Proof. exact (TRANS (@lem8195980 _144529 _144530 _144607 _144645 P p pat e lt2 s q) (@lem8196010 _144529 _144530 _144607 _144645 P p pat e lt2 s q)). Qed.
Lemma lem8196013 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (q : type560 _144530 _144607 P) : (term224 _144529 _144530 _144607 _144645 P p pat e lt2 s q) = (term817 _144529 _144530 _144607 _144645 P p pat e lt2 s q).
Proof. exact (TRANS (@lem8195732 _144529 _144530 _144607 _144645 P p pat e lt2 s q) (@lem8196012 _144529 _144530 _144607 _144645 P p pat e lt2 s q)). Qed.
Lemma lem8196014 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (q : type560 _144530 _144607 P) (h1 : term224 _144529 _144530 _144607 _144645 P p pat e lt2 s q) : term817 _144529 _144530 _144607 _144645 P p pat e lt2 s q.
Proof. exact (EQ_MP (@lem8196013 _144529 _144530 _144607 _144645 P p pat e lt2 s q) (@lem8194649 _144529 _144530 _144607 _144645 P p pat e lt2 s q h1)). Qed.
Lemma lem8196022 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) : (term557 _144530 _144607 _144645 P pat e q f a) = (term558 _144530 _144607 _144645 P pat e q f a).
Proof. exact (@lem17045 ((pat f a) = (e f a)) (q f a)). Qed.
Lemma lem8196024 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) : (term416 _144530 _144607 P p f a) = (term416 _144530 _144607 P p f a).
Proof. exact (eq_refl (term416 _144530 _144607 P p f a)). Qed.
Lemma lem8196025 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) : (term559 _144530 _144607 _144645 P p pat e q f a) = (term560 _144530 _144607 _144645 P p pat e q f a).
Proof. exact (MK_COMB (@lem8196024 _144530 _144607 P p f a) (@lem8196022 _144530 _144607 _144645 P pat e q f a)). Qed.
Lemma lem8196026 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) : (term561 _144530 _144607 _144645 P p pat e q f a) = (term559 _144530 _144607 _144645 P p pat e q f a).
Proof. exact (@lem17045 (p f a) (term562 _144530 _144607 _144645 P pat e q f a)). Qed.
Lemma lem8196027 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) : (term561 _144530 _144607 _144645 P p pat e q f a) = (term560 _144530 _144607 _144645 P p pat e q f a).
Proof. exact (TRANS (@lem8196026 _144530 _144607 _144645 P p pat e q f a) (@lem8196025 _144530 _144607 _144645 P p pat e q f a)). Qed.
Lemma lem8196035 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term557 _144530 _144607 _144645 P pat e q g a) = (term558 _144530 _144607 _144645 P pat e q g a).
Proof. exact (@lem17045 ((pat g a) = (e g a)) (q g a)). Qed.
Lemma lem8196037 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term416 _144530 _144607 P p g a) = (term416 _144530 _144607 P p g a).
Proof. exact (eq_refl (term416 _144530 _144607 P p g a)). Qed.
Lemma lem8196038 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term559 _144530 _144607 _144645 P p pat e q g a) = (term560 _144530 _144607 _144645 P p pat e q g a).
Proof. exact (MK_COMB (@lem8196037 _144530 _144607 P p g a) (@lem8196035 _144530 _144607 _144645 P pat e q g a)). Qed.
Lemma lem8196039 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term561 _144530 _144607 _144645 P p pat e q g a) = (term559 _144530 _144607 _144645 P p pat e q g a).
Proof. exact (@lem17045 (p g a) (term562 _144530 _144607 _144645 P pat e q g a)). Qed.
Lemma lem8196040 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term561 _144530 _144607 _144645 P p pat e q g a) = (term560 _144530 _144607 _144645 P p pat e q g a).
Proof. exact (TRANS (@lem8196039 _144530 _144607 _144645 P p pat e q g a) (@lem8196038 _144530 _144607 _144645 P p pat e q g a)). Qed.
Lemma lem8196047 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (z : _144530) : (term404 _144529 _144530 _144607 P lt2 s a f g z) = (term405 _144529 _144530 _144607 P lt2 s a f g z).
Proof. exact (@lem17362 (term406 _144529 _144530 P lt2 z s a) ((f z) = (g z))). Qed.
Lemma lem8196048 {_144530 : Type'} (P : _144530 -> Prop) : (term407 _144530 P) = (term408 _144530 P).
Proof. exact (@lem18392 _144530 P). Qed.
Lemma lem8196049 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term409 _144529 _144530 _144607 P lt2 s a f g) = (term410 _144529 _144530 _144607 P lt2 s a f g).
Proof. exact (@lem8196048 _144530 (term397 _144529 _144530 _144607 P lt2 s a f g)). Qed.
Lemma lem8196050 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (z : _144530) : (term411 _144529 _144530 _144607 P lt2 s a f g z) = (term396 _144529 _144530 _144607 P lt2 s a f g z).
Proof. exact (eq_refl (term411 _144529 _144530 _144607 P lt2 s a f g z)). Qed.
Lemma lem8196051 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8196052 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (z : _144530) : (term412 _144529 _144530 _144607 P lt2 s a f g z) = (term404 _144529 _144530 _144607 P lt2 s a f g z).
Proof. exact (MK_COMB (@lem8196051) (@lem8196050 _144529 _144530 _144607 P lt2 s a f g z)). Qed.
Lemma lem8196053 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (z : _144530) : (term412 _144529 _144530 _144607 P lt2 s a f g z) = (term405 _144529 _144530 _144607 P lt2 s a f g z).
Proof. exact (TRANS (@lem8196052 _144529 _144530 _144607 P lt2 s a f g z) (@lem8196047 _144529 _144530 _144607 P lt2 s a f g z)). Qed.
Lemma lem8196054 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term413 _144529 _144530 _144607 P lt2 s a f g) = (term414 _144529 _144530 _144607 P lt2 s a f g).
Proof. exact (fun_ext (fun z : _144530 => @lem8196053 _144529 _144530 _144607 P lt2 s a f g z)). Qed.
Lemma lem8196055 {_144530 : Type'} : (@ex _144530) = (@ex _144530).
Proof. exact (eq_refl (@ex _144530)). Qed.
Lemma lem8196056 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term410 _144529 _144530 _144607 P lt2 s a f g) = (term415 _144529 _144530 _144607 P lt2 s a f g).
Proof. exact (MK_COMB (@lem8196055 _144530) (@lem8196054 _144529 _144530 _144607 P lt2 s a f g)). Qed.
Lemma lem8196057 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term409 _144529 _144530 _144607 P lt2 s a f g) = (term415 _144529 _144530 _144607 P lt2 s a f g).
Proof. exact (TRANS (@lem8196049 _144529 _144530 _144607 P lt2 s a f g) (@lem8196056 _144529 _144530 _144607 P lt2 s a f g)). Qed.
Lemma lem8196058 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8196059 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term563 _144530 _144607 _144645 P p pat e q g a) = (term564 _144530 _144607 _144645 P p pat e q g a).
Proof. exact (MK_COMB (@lem8196058) (@lem8196040 _144530 _144607 _144645 P p pat e q g a)). Qed.
Lemma lem8196060 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term565 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) = (term566 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g).
Proof. exact (MK_COMB (@lem8196059 _144530 _144607 _144645 P p pat e q g a) (@lem8196057 _144529 _144530 _144607 P lt2 s a f g)). Qed.
Lemma lem8196061 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term567 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) = (term565 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g).
Proof. exact (@lem17045 (term159 _144530 _144607 _144645 P p pat e q g a) (term165 _144529 _144530 _144607 P lt2 s a f g)). Qed.
Lemma lem8196062 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term567 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) = (term566 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g).
Proof. exact (TRANS (@lem8196061 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) (@lem8196060 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g)). Qed.
Lemma lem8196063 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8196064 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) : (term563 _144530 _144607 _144645 P p pat e q f a) = (term564 _144530 _144607 _144645 P p pat e q f a).
Proof. exact (MK_COMB (@lem8196063) (@lem8196027 _144530 _144607 _144645 P p pat e q f a)). Qed.
Lemma lem8196065 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term568 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) = (term569 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g).
Proof. exact (MK_COMB (@lem8196064 _144530 _144607 _144645 P p pat e q f a) (@lem8196062 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g)). Qed.
Lemma lem8196066 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term570 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) = (term568 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g).
Proof. exact (@lem17045 (term159 _144530 _144607 _144645 P p pat e q f a) (term167 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g)). Qed.
Lemma lem8196067 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term570 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) = (term569 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g).
Proof. exact (TRANS (@lem8196066 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) (@lem8196065 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g)). Qed.
Lemma lem8196068 {_144530 _144607 _144654 P : Type'} (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : ((y f a) = (y g a)) = ((y f a) = (y g a)).
Proof. exact (eq_refl ((y f a) = (y g a))). Qed.
Lemma lem8196069 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8196070 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term571 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) = (term572 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g).
Proof. exact (MK_COMB (@lem8196069) (@lem8196067 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g)). Qed.
Lemma lem8196071 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (term573 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g a) = (term574 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g a).
Proof. exact (MK_COMB (@lem8196070 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) (@lem8196068 _144530 _144607 _144654 P f y g a)). Qed.
Lemma lem8196072 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (term173 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g a) = (term573 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g a).
Proof. exact (@lem17265 (term169 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) ((y f a) = (y g a))). Qed.
Lemma lem8196073 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (term173 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g a) = (term574 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g a).
Proof. exact (TRANS (@lem8196072 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g a) (@lem8196071 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g a)). Qed.
Lemma lem8196074 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) : (term175 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g) = (term575 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g).
Proof. exact (fun_ext (fun a : P => @lem8196073 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g a)). Qed.
Lemma lem8196075 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8196076 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) : (term177 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g) = (term576 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g).
Proof. exact (MK_COMB (@lem8196075 P) (@lem8196074 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g)). Qed.
Lemma lem8196077 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) : (term179 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y) = (term577 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y).
Proof. exact (fun_ext (fun g : _144530 -> _144607 => @lem8196076 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g)). Qed.
Lemma lem8196078 {_144530 _144607 : Type'} : (@all (_144530 -> _144607)) = (@all (_144530 -> _144607)).
Proof. exact (eq_refl (@all (_144530 -> _144607))). Qed.
Lemma lem8196079 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) : (term181 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y) = (term578 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y).
Proof. exact (MK_COMB (@lem8196078 _144530 _144607) (@lem8196077 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y)). Qed.
Lemma lem8196080 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (y : type564 _144530 _144607 _144654 P) : (term183 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y) = (term579 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y).
Proof. exact (fun_ext (fun f : _144530 -> _144607 => @lem8196079 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y)). Qed.
Lemma lem8196081 {_144530 _144607 : Type'} : (@all (_144530 -> _144607)) = (@all (_144530 -> _144607)).
Proof. exact (eq_refl (@all (_144530 -> _144607))). Qed.
Lemma lem8196082 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (y : type564 _144530 _144607 _144654 P) : (term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y) = (term580 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y).
Proof. exact (MK_COMB (@lem8196081 _144530 _144607) (@lem8196080 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y)). Qed.
Lemma lem8196189 {A : Type'} (P : Prop) (Q : A -> Prop) : (term433 A P Q) = (term434 A P Q).
Proof. exact (EQ_MP (@lem18911 A P Q) (@lem18910 A P Q)). Qed.
Lemma lem8196190 {_144530 : Type'} (P : Prop) (Q : _144530 -> Prop) : (term433 _144530 P Q) = (term434 _144530 P Q).
Proof. exact (@lem8196189 _144530 P Q). Qed.
Lemma lem8196191 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term581 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) = (term582 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g).
Proof. exact (@lem8196190 _144530 (term560 _144530 _144607 _144645 P p pat e q g a) (term414 _144529 _144530 _144607 P lt2 s a f g)). Qed.
Lemma lem8196192 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (z : _144530) : (term438 _144529 _144530 _144607 P lt2 s a f g z) = (term405 _144529 _144530 _144607 P lt2 s a f g z).
Proof. exact (eq_refl (term438 _144529 _144530 _144607 P lt2 s a f g z)). Qed.
Lemma lem8196193 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term439 _144529 _144530 _144607 P lt2 s a f g) = (term414 _144529 _144530 _144607 P lt2 s a f g).
Proof. exact (fun_ext (fun z : _144530 => @lem8196192 _144529 _144530 _144607 P lt2 s a f g z)). Qed.
Lemma lem8196194 {_144530 : Type'} : (@ex _144530) = (@ex _144530).
Proof. exact (eq_refl (@ex _144530)). Qed.
Lemma lem8196195 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term440 _144529 _144530 _144607 P lt2 s a f g) = (term415 _144529 _144530 _144607 P lt2 s a f g).
Proof. exact (MK_COMB (@lem8196194 _144530) (@lem8196193 _144529 _144530 _144607 P lt2 s a f g)). Qed.
Lemma lem8196196 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term564 _144530 _144607 _144645 P p pat e q g a) = (term564 _144530 _144607 _144645 P p pat e q g a).
Proof. exact (eq_refl (term564 _144530 _144607 _144645 P p pat e q g a)). Qed.
Lemma lem8196197 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term581 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) = (term566 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g).
Proof. exact (MK_COMB (@lem8196196 _144530 _144607 _144645 P p pat e q g a) (@lem8196195 _144529 _144530 _144607 P lt2 s a f g)). Qed.
Lemma lem8196198 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8196199 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term583 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) = (term584 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g).
Proof. exact (MK_COMB (@lem8196198) (@lem8196197 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g)). Qed.
Lemma lem8196200 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (z : _144530) : (term438 _144529 _144530 _144607 P lt2 s a f g z) = (term405 _144529 _144530 _144607 P lt2 s a f g z).
Proof. exact (eq_refl (term438 _144529 _144530 _144607 P lt2 s a f g z)). Qed.
Lemma lem8196201 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term564 _144530 _144607 _144645 P p pat e q g a) = (term564 _144530 _144607 _144645 P p pat e q g a).
Proof. exact (eq_refl (term564 _144530 _144607 _144645 P p pat e q g a)). Qed.
Lemma lem8196202 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (z : _144530) : (term585 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g z) = (term586 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g z).
Proof. exact (MK_COMB (@lem8196201 _144530 _144607 _144645 P p pat e q g a) (@lem8196200 _144529 _144530 _144607 P lt2 s a f g z)). Qed.
Lemma lem8196203 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term587 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) = (term588 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g).
Proof. exact (fun_ext (fun z : _144530 => @lem8196202 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g z)). Qed.
Lemma lem8196204 {_144530 : Type'} : (@ex _144530) = (@ex _144530).
Proof. exact (eq_refl (@ex _144530)). Qed.
Lemma lem8196205 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term582 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) = (term589 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g).
Proof. exact (MK_COMB (@lem8196204 _144530) (@lem8196203 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g)). Qed.
Lemma lem8196206 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : ((term581 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) = (term582 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g)) = ((term566 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) = (term589 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g)).
Proof. exact (MK_COMB (@lem8196199 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) (@lem8196205 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g)). Qed.
Lemma lem8196207 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term566 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) = (term589 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g).
Proof. exact (EQ_MP (@lem8196206 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) (@lem8196191 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g)). Qed.
Lemma lem8196208 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) : (term564 _144530 _144607 _144645 P p pat e q f a) = (term564 _144530 _144607 _144645 P p pat e q f a).
Proof. exact (eq_refl (term564 _144530 _144607 _144645 P p pat e q f a)). Qed.
Lemma lem8196209 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term569 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) = (term590 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g).
Proof. exact (MK_COMB (@lem8196208 _144530 _144607 _144645 P p pat e q f a) (@lem8196207 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g)). Qed.
Lemma lem8196211 {A : Type'} (P : Prop) (Q : A -> Prop) : (term433 A P Q) = (term434 A P Q).
Proof. exact (EQ_MP (@lem18911 A P Q) (@lem18910 A P Q)). Qed.
Lemma lem8196212 {_144530 : Type'} (P : Prop) (Q : _144530 -> Prop) : (term433 _144530 P Q) = (term434 _144530 P Q).
Proof. exact (@lem8196211 _144530 P Q). Qed.
Lemma lem8196213 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term591 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) = (term592 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g).
Proof. exact (@lem8196212 _144530 (term560 _144530 _144607 _144645 P p pat e q f a) (term588 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g)). Qed.
Lemma lem8196214 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (z : _144530) : (term593 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g z) = (term586 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g z).
Proof. exact (eq_refl (term593 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g z)). Qed.
Lemma lem8196215 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term594 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) = (term588 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g).
Proof. exact (fun_ext (fun z : _144530 => @lem8196214 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g z)). Qed.
Lemma lem8196216 {_144530 : Type'} : (@ex _144530) = (@ex _144530).
Proof. exact (eq_refl (@ex _144530)). Qed.
Lemma lem8196217 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term595 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) = (term589 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g).
Proof. exact (MK_COMB (@lem8196216 _144530) (@lem8196215 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g)). Qed.
Lemma lem8196218 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) : (term564 _144530 _144607 _144645 P p pat e q f a) = (term564 _144530 _144607 _144645 P p pat e q f a).
Proof. exact (eq_refl (term564 _144530 _144607 _144645 P p pat e q f a)). Qed.
Lemma lem8196219 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term591 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) = (term590 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g).
Proof. exact (MK_COMB (@lem8196218 _144530 _144607 _144645 P p pat e q f a) (@lem8196217 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g)). Qed.
Lemma lem8196220 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8196221 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term596 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) = (term597 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g).
Proof. exact (MK_COMB (@lem8196220) (@lem8196219 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g)). Qed.
Lemma lem8196222 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (z : _144530) : (term593 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g z) = (term586 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g z).
Proof. exact (eq_refl (term593 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g z)). Qed.
Lemma lem8196223 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) : (term564 _144530 _144607 _144645 P p pat e q f a) = (term564 _144530 _144607 _144645 P p pat e q f a).
Proof. exact (eq_refl (term564 _144530 _144607 _144645 P p pat e q f a)). Qed.
Lemma lem8196224 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (z : _144530) : (term598 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g z) = (term599 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g z).
Proof. exact (MK_COMB (@lem8196223 _144530 _144607 _144645 P p pat e q f a) (@lem8196222 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g z)). Qed.
Lemma lem8196225 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term600 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) = (term601 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g).
Proof. exact (fun_ext (fun z : _144530 => @lem8196224 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g z)). Qed.
Lemma lem8196226 {_144530 : Type'} : (@ex _144530) = (@ex _144530).
Proof. exact (eq_refl (@ex _144530)). Qed.
Lemma lem8196227 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term592 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) = (term602 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g).
Proof. exact (MK_COMB (@lem8196226 _144530) (@lem8196225 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g)). Qed.
Lemma lem8196228 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : ((term591 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) = (term592 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g)) = ((term590 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) = (term602 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g)).
Proof. exact (MK_COMB (@lem8196221 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) (@lem8196227 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g)). Qed.
Lemma lem8196229 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term590 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) = (term602 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g).
Proof. exact (EQ_MP (@lem8196228 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) (@lem8196213 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g)). Qed.
Lemma lem8196230 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term569 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) = (term602 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g).
Proof. exact (TRANS (@lem8196209 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) (@lem8196229 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g)). Qed.
Lemma lem8196231 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8196232 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term572 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) = (term603 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g).
Proof. exact (MK_COMB (@lem8196231) (@lem8196230 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g)). Qed.
Lemma lem8196233 {_144530 _144607 _144654 P : Type'} (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : ((y f a) = (y g a)) = ((y f a) = (y g a)).
Proof. exact (eq_refl ((y f a) = (y g a))). Qed.
Lemma lem8196234 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (term574 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g a) = (term604 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g a).
Proof. exact (MK_COMB (@lem8196232 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) (@lem8196233 _144530 _144607 _144654 P f y g a)). Qed.
Lemma lem8196236 {A : Type'} (P : A -> Prop) (Q : Prop) : (term463 A P Q) = (term464 A P Q).
Proof. exact (EQ_MP (@lem18905 A P Q) (@lem18904 A P Q)). Qed.
Lemma lem8196237 {_144530 : Type'} (P : _144530 -> Prop) (Q : Prop) : (term463 _144530 P Q) = (term464 _144530 P Q).
Proof. exact (@lem8196236 _144530 P Q). Qed.
Lemma lem8196238 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (term605 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g a) = (term606 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g a).
Proof. exact (@lem8196237 _144530 (term601 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) ((y f a) = (y g a))). Qed.
Lemma lem8196239 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (z : _144530) : (term607 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g z) = (term599 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g z).
Proof. exact (eq_refl (term607 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g z)). Qed.
Lemma lem8196240 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term608 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) = (term601 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g).
Proof. exact (fun_ext (fun z : _144530 => @lem8196239 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g z)). Qed.
Lemma lem8196241 {_144530 : Type'} : (@ex _144530) = (@ex _144530).
Proof. exact (eq_refl (@ex _144530)). Qed.
Lemma lem8196242 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term609 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) = (term602 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g).
Proof. exact (MK_COMB (@lem8196241 _144530) (@lem8196240 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g)). Qed.
Lemma lem8196243 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8196244 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term610 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) = (term603 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g).
Proof. exact (MK_COMB (@lem8196243) (@lem8196242 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g)). Qed.
Lemma lem8196245 {_144530 _144607 _144654 P : Type'} (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : ((y f a) = (y g a)) = ((y f a) = (y g a)).
Proof. exact (eq_refl ((y f a) = (y g a))). Qed.
Lemma lem8196246 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (term605 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g a) = (term604 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g a).
Proof. exact (MK_COMB (@lem8196244 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) (@lem8196245 _144530 _144607 _144654 P f y g a)). Qed.
Lemma lem8196247 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8196248 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (term611 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g a) = (term612 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g a).
Proof. exact (MK_COMB (@lem8196247) (@lem8196246 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g a)). Qed.
Lemma lem8196249 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (z : _144530) : (term607 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g z) = (term599 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g z).
Proof. exact (eq_refl (term607 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g z)). Qed.
Lemma lem8196250 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8196251 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (z : _144530) : (term613 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g z) = (term614 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g z).
Proof. exact (MK_COMB (@lem8196250) (@lem8196249 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g z)). Qed.
Lemma lem8196252 {_144530 _144607 _144654 P : Type'} (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : ((y f a) = (y g a)) = ((y f a) = (y g a)).
Proof. exact (eq_refl ((y f a) = (y g a))). Qed.
Lemma lem8196253 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : _144530) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (term615 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z f y g a) = (term616 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z f y g a).
Proof. exact (MK_COMB (@lem8196251 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g z) (@lem8196252 _144530 _144607 _144654 P f y g a)). Qed.
Lemma lem8196254 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (term617 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g a) = (term618 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g a).
Proof. exact (fun_ext (fun z : _144530 => @lem8196253 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z f y g a)). Qed.
Lemma lem8196255 {_144530 : Type'} : (@ex _144530) = (@ex _144530).
Proof. exact (eq_refl (@ex _144530)). Qed.
Lemma lem8196256 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (term606 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g a) = (term619 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g a).
Proof. exact (MK_COMB (@lem8196255 _144530) (@lem8196254 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g a)). Qed.
Lemma lem8196257 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : ((term605 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g a) = (term606 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g a)) = ((term604 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g a) = (term619 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g a)).
Proof. exact (MK_COMB (@lem8196248 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g a) (@lem8196256 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g a)). Qed.
Lemma lem8196258 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (term604 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g a) = (term619 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g a).
Proof. exact (EQ_MP (@lem8196257 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g a) (@lem8196238 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g a)). Qed.
Lemma lem8196259 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (term574 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g a) = (term619 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g a).
Proof. exact (TRANS (@lem8196234 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g a) (@lem8196258 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g a)). Qed.
Lemma lem8196260 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) : (term575 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g) = (term620 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g).
Proof. exact (fun_ext (fun a : P => @lem8196259 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g a)). Qed.
Lemma lem8196261 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8196262 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) : (term576 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g) = (term621 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g).
Proof. exact (MK_COMB (@lem8196261 P) (@lem8196260 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g)). Qed.
Lemma lem8196264 {A B : Type'} (P : type1413 A B) : (term482 A B P) = (term483 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem8196265 {_144530 P : Type'} (P' : type1470 _144530 P) : (term484 _144530 P P') = (term485 _144530 P P').
Proof. exact (@lem8196264 P _144530 P'). Qed.
Lemma lem8196266 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) : (term622 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g) = (term623 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g).
Proof. exact (@lem8196265 _144530 P (term624 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g)). Qed.
Lemma lem8196267 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (term625 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g a) = (term618 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g a).
Proof. exact (eq_refl (term625 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g a)). Qed.
Lemma lem8196268 {_144530 : Type'} (z : _144530) : z = z.
Proof. exact (eq_refl z). Qed.
Lemma lem8196269 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) (z : _144530) : (term626 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g a z) = (term627 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g a z).
Proof. exact (MK_COMB (@lem8196267 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g a) (@lem8196268 _144530 z)). Qed.
Lemma lem8196270 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : _144530) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (term627 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g a z) = (term616 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z f y g a).
Proof. exact (eq_refl (term627 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g a z)). Qed.
Lemma lem8196271 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : _144530) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (term626 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g a z) = (term616 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z f y g a).
Proof. exact (TRANS (@lem8196269 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g a z) (@lem8196270 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z f y g a)). Qed.
Lemma lem8196272 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (term628 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g a) = (term618 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g a).
Proof. exact (fun_ext (fun z : _144530 => @lem8196271 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z f y g a)). Qed.
Lemma lem8196273 {_144530 : Type'} : (@ex _144530) = (@ex _144530).
Proof. exact (eq_refl (@ex _144530)). Qed.
Lemma lem8196274 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (term629 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g a) = (term619 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g a).
Proof. exact (MK_COMB (@lem8196273 _144530) (@lem8196272 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g a)). Qed.
Lemma lem8196275 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) : (term630 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g) = (term620 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g).
Proof. exact (fun_ext (fun a : P => @lem8196274 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g a)). Qed.
Lemma lem8196276 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8196277 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) : (term622 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g) = (term621 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g).
Proof. exact (MK_COMB (@lem8196276 P) (@lem8196275 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g)). Qed.
Lemma lem8196278 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8196279 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) : (term631 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g) = (term632 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g).
Proof. exact (MK_COMB (@lem8196278) (@lem8196277 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g)). Qed.
Lemma lem8196280 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (term625 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g a) = (term618 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g a).
Proof. exact (eq_refl (term625 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g a)). Qed.
Lemma lem8196281 {_144530 P : Type'} (z : P -> _144530) (a : P) : (z a) = (z a).
Proof. exact (eq_refl (z a)). Qed.
Lemma lem8196282 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (z : P -> _144530) (a : P) : (term633 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g z a) = (term634 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g z a).
Proof. exact (MK_COMB (@lem8196280 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g a) (@lem8196281 _144530 P z a)). Qed.
Lemma lem8196283 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : P -> _144530) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (term634 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g z a) = (term635 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z f y g a).
Proof. exact (eq_refl (term634 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g z a)). Qed.
Lemma lem8196284 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : P -> _144530) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (term633 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g z a) = (term635 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z f y g a).
Proof. exact (TRANS (@lem8196282 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g z a) (@lem8196283 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z f y g a)). Qed.
Lemma lem8196285 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : P -> _144530) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) : (term636 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g z) = (term637 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z f y g).
Proof. exact (fun_ext (fun a : P => @lem8196284 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z f y g a)). Qed.
Lemma lem8196286 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8196287 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : P -> _144530) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) : (term638 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g z) = (term639 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z f y g).
Proof. exact (MK_COMB (@lem8196286 P) (@lem8196285 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z f y g)). Qed.
Lemma lem8196288 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) : (term640 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g) = (term641 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g).
Proof. exact (fun_ext (fun z : P -> _144530 => @lem8196287 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z f y g)). Qed.
Lemma lem8196289 {_144530 P : Type'} : (@ex (P -> _144530)) = (@ex (P -> _144530)).
Proof. exact (eq_refl (@ex (P -> _144530))). Qed.
Lemma lem8196290 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) : (term623 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g) = (term642 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g).
Proof. exact (MK_COMB (@lem8196289 _144530 P) (@lem8196288 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g)). Qed.
Lemma lem8196291 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) : ((term622 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g) = (term623 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g)) = ((term621 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g) = (term642 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g)).
Proof. exact (MK_COMB (@lem8196279 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g) (@lem8196290 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g)). Qed.
Lemma lem8196292 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) : (term621 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g) = (term642 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g).
Proof. exact (EQ_MP (@lem8196291 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g) (@lem8196266 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g)). Qed.
Lemma lem8196293 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) : (term576 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g) = (term642 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g).
Proof. exact (TRANS (@lem8196262 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g) (@lem8196292 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g)). Qed.
Lemma lem8196294 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) : (term577 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y) = (term643 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y).
Proof. exact (fun_ext (fun g : _144530 -> _144607 => @lem8196293 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g)). Qed.
Lemma lem8196295 {_144530 _144607 : Type'} : (@all (_144530 -> _144607)) = (@all (_144530 -> _144607)).
Proof. exact (eq_refl (@all (_144530 -> _144607))). Qed.
Lemma lem8196296 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) : (term578 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y) = (term644 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y).
Proof. exact (MK_COMB (@lem8196295 _144530 _144607) (@lem8196294 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y)). Qed.
Lemma lem8196298 {A B : Type'} (P : type1413 A B) : (term482 A B P) = (term483 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem8196299 {_144530 _144607 P : Type'} (P' : type537 _144530 _144607 P) : (term509 _144530 _144607 P P') = (term510 _144530 _144607 P P').
Proof. exact (@lem8196298 (_144530 -> _144607) (P -> _144530) P'). Qed.
Lemma lem8196300 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) : (term645 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y) = (term646 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y).
Proof. exact (@lem8196299 _144530 _144607 P (term647 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y)). Qed.
Lemma lem8196301 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) : (term648 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g) = (term641 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g).
Proof. exact (eq_refl (term648 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g)). Qed.
Lemma lem8196302 {_144530 P : Type'} (z : P -> _144530) : z = z.
Proof. exact (eq_refl z). Qed.
Lemma lem8196303 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (z : P -> _144530) : (term649 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g z) = (term650 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g z).
Proof. exact (MK_COMB (@lem8196301 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g) (@lem8196302 _144530 P z)). Qed.
Lemma lem8196304 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : P -> _144530) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) : (term650 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g z) = (term639 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z f y g).
Proof. exact (eq_refl (term650 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g z)). Qed.
Lemma lem8196305 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : P -> _144530) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) : (term649 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g z) = (term639 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z f y g).
Proof. exact (TRANS (@lem8196303 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g z) (@lem8196304 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z f y g)). Qed.
Lemma lem8196306 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) : (term651 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g) = (term641 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g).
Proof. exact (fun_ext (fun z : P -> _144530 => @lem8196305 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z f y g)). Qed.
Lemma lem8196307 {_144530 P : Type'} : (@ex (P -> _144530)) = (@ex (P -> _144530)).
Proof. exact (eq_refl (@ex (P -> _144530))). Qed.
Lemma lem8196308 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) : (term652 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g) = (term642 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g).
Proof. exact (MK_COMB (@lem8196307 _144530 P) (@lem8196306 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g)). Qed.
Lemma lem8196309 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) : (term653 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y) = (term643 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y).
Proof. exact (fun_ext (fun g : _144530 -> _144607 => @lem8196308 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g)). Qed.
Lemma lem8196310 {_144530 _144607 : Type'} : (@all (_144530 -> _144607)) = (@all (_144530 -> _144607)).
Proof. exact (eq_refl (@all (_144530 -> _144607))). Qed.
Lemma lem8196311 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) : (term645 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y) = (term644 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y).
Proof. exact (MK_COMB (@lem8196310 _144530 _144607) (@lem8196309 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y)). Qed.
Lemma lem8196312 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8196313 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) : (term654 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y) = (term655 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y).
Proof. exact (MK_COMB (@lem8196312) (@lem8196311 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y)). Qed.
Lemma lem8196314 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) : (term648 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g) = (term641 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g).
Proof. exact (eq_refl (term648 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g)). Qed.
Lemma lem8196315 {_144530 _144607 P : Type'} (z : type557 _144530 _144607 P) (g : _144530 -> _144607) : (z g) = (z g).
Proof. exact (eq_refl (z g)). Qed.
Lemma lem8196316 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (z : type557 _144530 _144607 P) (g : _144530 -> _144607) : (term656 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y z g) = (term657 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y z g).
Proof. exact (MK_COMB (@lem8196314 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g) (@lem8196315 _144530 _144607 P z g)). Qed.
Lemma lem8196317 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : type557 _144530 _144607 P) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) : (term657 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y z g) = (term658 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z f y g).
Proof. exact (eq_refl (term657 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y z g)). Qed.
Lemma lem8196318 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : type557 _144530 _144607 P) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) : (term656 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y z g) = (term658 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z f y g).
Proof. exact (TRANS (@lem8196316 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y z g) (@lem8196317 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z f y g)). Qed.
Lemma lem8196319 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : type557 _144530 _144607 P) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) : (term659 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y z) = (term660 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z f y).
Proof. exact (fun_ext (fun g : _144530 -> _144607 => @lem8196318 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z f y g)). Qed.
Lemma lem8196320 {_144530 _144607 : Type'} : (@all (_144530 -> _144607)) = (@all (_144530 -> _144607)).
Proof. exact (eq_refl (@all (_144530 -> _144607))). Qed.
Lemma lem8196321 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : type557 _144530 _144607 P) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) : (term661 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y z) = (term662 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z f y).
Proof. exact (MK_COMB (@lem8196320 _144530 _144607) (@lem8196319 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z f y)). Qed.
Lemma lem8196322 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) : (term663 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y) = (term664 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y).
Proof. exact (fun_ext (fun z : type557 _144530 _144607 P => @lem8196321 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z f y)). Qed.
Lemma lem8196323 {_144530 _144607 P : Type'} : (@ex ((_144530 -> _144607) -> P -> _144530)) = (@ex ((_144530 -> _144607) -> P -> _144530)).
Proof. exact (eq_refl (@ex ((_144530 -> _144607) -> P -> _144530))). Qed.
Lemma lem8196324 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) : (term646 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y) = (term665 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y).
Proof. exact (MK_COMB (@lem8196323 _144530 _144607 P) (@lem8196322 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y)). Qed.
Lemma lem8196325 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) : ((term645 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y) = (term646 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y)) = ((term644 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y) = (term665 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y)).
Proof. exact (MK_COMB (@lem8196313 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y) (@lem8196324 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y)). Qed.
Lemma lem8196326 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) : (term644 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y) = (term665 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y).
Proof. exact (EQ_MP (@lem8196325 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y) (@lem8196300 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y)). Qed.
Lemma lem8196327 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) : (term578 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y) = (term665 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y).
Proof. exact (TRANS (@lem8196296 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y) (@lem8196326 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y)). Qed.
Lemma lem8196328 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (y : type564 _144530 _144607 _144654 P) : (term579 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y) = (term666 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y).
Proof. exact (fun_ext (fun f : _144530 -> _144607 => @lem8196327 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y)). Qed.
Lemma lem8196329 {_144530 _144607 : Type'} : (@all (_144530 -> _144607)) = (@all (_144530 -> _144607)).
Proof. exact (eq_refl (@all (_144530 -> _144607))). Qed.
Lemma lem8196330 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (y : type564 _144530 _144607 _144654 P) : (term580 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y) = (term667 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y).
Proof. exact (MK_COMB (@lem8196329 _144530 _144607) (@lem8196328 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y)). Qed.
Lemma lem8196332 {A B : Type'} (P : type1413 A B) : (term482 A B P) = (term483 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem8196333 {_144530 _144607 P : Type'} (P' : type495 _144530 _144607 P) : (term534 _144530 _144607 P P') = (term535 _144530 _144607 P P').
Proof. exact (@lem8196332 (_144530 -> _144607) (type557 _144530 _144607 P) P'). Qed.
Lemma lem8196334 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (y : type564 _144530 _144607 _144654 P) : (term668 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y) = (term669 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y).
Proof. exact (@lem8196333 _144530 _144607 P (term670 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y)). Qed.
Lemma lem8196335 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) : (term671 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y f) = (term664 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y).
Proof. exact (eq_refl (term671 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y f)). Qed.
Lemma lem8196336 {_144530 _144607 P : Type'} (z : type557 _144530 _144607 P) : z = z.
Proof. exact (eq_refl z). Qed.
Lemma lem8196337 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (z : type557 _144530 _144607 P) : (term672 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y f z) = (term673 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y z).
Proof. exact (MK_COMB (@lem8196335 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y) (@lem8196336 _144530 _144607 P z)). Qed.
Lemma lem8196338 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : type557 _144530 _144607 P) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) : (term673 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y z) = (term662 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z f y).
Proof. exact (eq_refl (term673 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y z)). Qed.
Lemma lem8196339 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : type557 _144530 _144607 P) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) : (term672 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y f z) = (term662 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z f y).
Proof. exact (TRANS (@lem8196337 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y z) (@lem8196338 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z f y)). Qed.
Lemma lem8196340 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) : (term674 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y f) = (term664 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y).
Proof. exact (fun_ext (fun z : type557 _144530 _144607 P => @lem8196339 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z f y)). Qed.
Lemma lem8196341 {_144530 _144607 P : Type'} : (@ex ((_144530 -> _144607) -> P -> _144530)) = (@ex ((_144530 -> _144607) -> P -> _144530)).
Proof. exact (eq_refl (@ex ((_144530 -> _144607) -> P -> _144530))). Qed.
Lemma lem8196342 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) : (term675 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y f) = (term665 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y).
Proof. exact (MK_COMB (@lem8196341 _144530 _144607 P) (@lem8196340 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y)). Qed.
Lemma lem8196343 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (y : type564 _144530 _144607 _144654 P) : (term676 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y) = (term666 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y).
Proof. exact (fun_ext (fun f : _144530 -> _144607 => @lem8196342 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y)). Qed.
Lemma lem8196344 {_144530 _144607 : Type'} : (@all (_144530 -> _144607)) = (@all (_144530 -> _144607)).
Proof. exact (eq_refl (@all (_144530 -> _144607))). Qed.
Lemma lem8196345 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (y : type564 _144530 _144607 _144654 P) : (term668 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y) = (term667 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y).
Proof. exact (MK_COMB (@lem8196344 _144530 _144607) (@lem8196343 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y)). Qed.
Lemma lem8196346 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8196347 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (y : type564 _144530 _144607 _144654 P) : (term677 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y) = (term678 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y).
Proof. exact (MK_COMB (@lem8196346) (@lem8196345 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y)). Qed.
Lemma lem8196348 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) : (term671 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y f) = (term664 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y).
Proof. exact (eq_refl (term671 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y f)). Qed.
Lemma lem8196349 {_144530 _144607 P : Type'} (z : type518 _144530 _144607 P) (f : _144530 -> _144607) : (z f) = (z f).
Proof. exact (eq_refl (z f)). Qed.
Lemma lem8196350 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (y : type564 _144530 _144607 _144654 P) (z : type518 _144530 _144607 P) (f : _144530 -> _144607) : (term679 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y z f) = (term680 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y z f).
Proof. exact (MK_COMB (@lem8196348 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y) (@lem8196349 _144530 _144607 P z f)). Qed.
Lemma lem8196351 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : type518 _144530 _144607 P) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) : (term680 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y z f) = (term681 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z f y).
Proof. exact (eq_refl (term680 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y z f)). Qed.
Lemma lem8196352 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : type518 _144530 _144607 P) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) : (term679 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y z f) = (term681 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z f y).
Proof. exact (TRANS (@lem8196350 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y z f) (@lem8196351 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z f y)). Qed.
Lemma lem8196353 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : type518 _144530 _144607 P) (y : type564 _144530 _144607 _144654 P) : (term682 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y z) = (term683 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z y).
Proof. exact (fun_ext (fun f : _144530 -> _144607 => @lem8196352 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z f y)). Qed.
Lemma lem8196354 {_144530 _144607 : Type'} : (@all (_144530 -> _144607)) = (@all (_144530 -> _144607)).
Proof. exact (eq_refl (@all (_144530 -> _144607))). Qed.
Lemma lem8196355 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : type518 _144530 _144607 P) (y : type564 _144530 _144607 _144654 P) : (term684 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y z) = (term685 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z y).
Proof. exact (MK_COMB (@lem8196354 _144530 _144607) (@lem8196353 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z y)). Qed.
Lemma lem8196356 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (y : type564 _144530 _144607 _144654 P) : (term686 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y) = (term687 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y).
Proof. exact (fun_ext (fun z : type518 _144530 _144607 P => @lem8196355 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z y)). Qed.
Lemma lem8196357 {_144530 _144607 P : Type'} : (@ex ((_144530 -> _144607) -> (_144530 -> _144607) -> P -> _144530)) = (@ex ((_144530 -> _144607) -> (_144530 -> _144607) -> P -> _144530)).
Proof. exact (eq_refl (@ex ((_144530 -> _144607) -> (_144530 -> _144607) -> P -> _144530))). Qed.
Lemma lem8196358 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (y : type564 _144530 _144607 _144654 P) : (term669 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y) = (term688 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y).
Proof. exact (MK_COMB (@lem8196357 _144530 _144607 P) (@lem8196356 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y)). Qed.
Lemma lem8196359 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (y : type564 _144530 _144607 _144654 P) : ((term668 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y) = (term669 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y)) = ((term667 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y) = (term688 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y)).
Proof. exact (MK_COMB (@lem8196347 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y) (@lem8196358 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y)). Qed.
Lemma lem8196360 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (y : type564 _144530 _144607 _144654 P) : (term667 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y) = (term688 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y).
Proof. exact (EQ_MP (@lem8196359 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y) (@lem8196334 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y)). Qed.
Lemma lem8196362 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (y : type564 _144530 _144607 _144654 P) : (term580 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y) = (term688 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y).
Proof. exact (TRANS (@lem8196330 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y) (@lem8196360 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y)). Qed.
Lemma lem8196363 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (y : type564 _144530 _144607 _144654 P) : (term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y) = (term688 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y).
Proof. exact (TRANS (@lem8196082 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y) (@lem8196362 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y)). Qed.
Lemma lem8196364 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (y : type564 _144530 _144607 _144654 P) (h1 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y) : term688 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y.
Proof. exact (EQ_MP (@lem8196363 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y) (@lem8194650 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y h1)). Qed.
Lemma lem8196370 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) (h1 : p f a) : p f a.
Proof. exact (h1). Qed.
Lemma lem8196376 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : p g a) : p g a.
Proof. exact (h1). Qed.
Lemma lem8196383 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (z : _144530) : (term396 _144529 _144530 _144607 P lt2 s a f g z) = (term818 _144529 _144530 _144607 P lt2 s a f g z).
Proof. exact (@lem17265 (term406 _144529 _144530 P lt2 z s a) ((f z) = (g z))). Qed.
Lemma lem8196384 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term397 _144529 _144530 _144607 P lt2 s a f g) = (term819 _144529 _144530 _144607 P lt2 s a f g).
Proof. exact (fun_ext (fun z : _144530 => @lem8196383 _144529 _144530 _144607 P lt2 s a f g z)). Qed.
Lemma lem8196385 {_144530 : Type'} : (@all _144530) = (@all _144530).
Proof. exact (eq_refl (@all _144530)). Qed.
Lemma lem8196438 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term165 _144529 _144530 _144607 P lt2 s a f g) = (term820 _144529 _144530 _144607 P lt2 s a f g).
Proof. exact (MK_COMB (@lem8196385 _144530) (@lem8196384 _144529 _144530 _144607 P lt2 s a f g)). Qed.
Lemma lem8196439 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) : term820 _144529 _144530 _144607 P lt2 s a f g.
Proof. exact (EQ_MP (@lem8196438 _144529 _144530 _144607 P lt2 s a f g) (@lem8194653 _144529 _144530 _144607 P lt2 s a f g h1)). Qed.
Lemma lem8196445 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (a : P) (h1 : (pat f a) = (e f a)) : (pat f a) = (e f a).
Proof. exact (h1). Qed.
Lemma lem8196451 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) (h1 : (pat g a) = (e g a)) : (pat g a) = (e g a).
Proof. exact (h1). Qed.
Lemma lem8196470 {_144530 _144607 P : Type'} (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term1006 _144530 _144607 P f q g a) = (term1076 _144530 _144607 P f q g a).
Proof. exact (@lem17646 (q f a) (q g a)). Qed.
Lemma lem8196471 {_144530 _144607 P : Type'} (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term1006 _144530 _144607 P f q g a) : term1076 _144530 _144607 P f q g a.
Proof. exact (EQ_MP (@lem8196470 _144530 _144607 P f q g a) (@lem8194660 _144530 _144607 P f q g a h1)). Qed.
Lemma lem8196473 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z' : type518 _144530 _144607 P) (q : type560 _144530 _144607 P) (h1 : term814 _144529 _144530 _144607 _144645 P p pat e lt2 s z' q) : term814 _144529 _144530 _144607 _144645 P p pat e lt2 s z' q.
Proof. exact (h1). Qed.
Lemma lem8196483 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8196484 {_144530 _144607 P : Type'} (f : type560 _144530 _144607 P) (x : _144530 -> _144607) : (f x) = (@I ((_144530 -> _144607) -> P -> Prop) f x).
Proof. exact (@lem8196483 (_144530 -> _144607) (P -> Prop) f x). Qed.
Lemma lem8196485 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (f : _144530 -> _144607) : (p f) = (@I ((_144530 -> _144607) -> P -> Prop) p f).
Proof. exact (@lem8196484 _144530 _144607 P p f). Qed.
Lemma lem8196486 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8196487 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) : (p f a) = (@I ((_144530 -> _144607) -> P -> Prop) p f a).
Proof. exact (MK_COMB (@lem8196485 _144530 _144607 P p f) (@lem8196486 P a)). Qed.
Lemma lem8196489 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8196490 {P : Type'} (f : P -> Prop) (x : P) : (f x) = (@I (P -> Prop) f x).
Proof. exact (@lem8196489 P Prop f x). Qed.
Lemma lem8196491 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) : (@I ((_144530 -> _144607) -> P -> Prop) p f a) = (term822 _144530 _144607 P p f a).
Proof. exact (@lem8196490 P (@I ((_144530 -> _144607) -> P -> Prop) p f) a). Qed.
Lemma lem8196493 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) : (p f a) = (term822 _144530 _144607 P p f a).
Proof. exact (TRANS (@lem8196487 _144530 _144607 P p f a) (@lem8196491 _144530 _144607 P p f a)). Qed.
Lemma lem8196501 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8196502 {_144530 _144607 P : Type'} (f : type560 _144530 _144607 P) (x : _144530 -> _144607) : (f x) = (@I ((_144530 -> _144607) -> P -> Prop) f x).
Proof. exact (@lem8196501 (_144530 -> _144607) (P -> Prop) f x). Qed.
Lemma lem8196503 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (g : _144530 -> _144607) : (p g) = (@I ((_144530 -> _144607) -> P -> Prop) p g).
Proof. exact (@lem8196502 _144530 _144607 P p g). Qed.
Lemma lem8196504 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8196505 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (p g a) = (@I ((_144530 -> _144607) -> P -> Prop) p g a).
Proof. exact (MK_COMB (@lem8196503 _144530 _144607 P p g) (@lem8196504 P a)). Qed.
Lemma lem8196507 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8196508 {P : Type'} (f : P -> Prop) (x : P) : (f x) = (@I (P -> Prop) f x).
Proof. exact (@lem8196507 P Prop f x). Qed.
Lemma lem8196509 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (@I ((_144530 -> _144607) -> P -> Prop) p g a) = (term822 _144530 _144607 P p g a).
Proof. exact (@lem8196508 P (@I ((_144530 -> _144607) -> P -> Prop) p g) a). Qed.
Lemma lem8196511 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (p g a) = (term822 _144530 _144607 P p g a).
Proof. exact (TRANS (@lem8196505 _144530 _144607 P p g a) (@lem8196509 _144530 _144607 P p g a)). Qed.
Lemma lem8196513 {_144607 : Type'} : (@eq _144607) = (@eq _144607).
Proof. exact (eq_refl (@eq _144607)). Qed.
Lemma lem8196518 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8196519 {_144530 _144607 : Type'} (f : _144530 -> _144607) (x : _144530) : (f x) = (@I (_144530 -> _144607) f x).
Proof. exact (@lem8196518 _144530 _144607 f x). Qed.
Lemma lem8196521 {_144530 _144607 : Type'} (f : _144530 -> _144607) (z : _144530) : (f z) = (@I (_144530 -> _144607) f z).
Proof. exact (@lem8196519 _144530 _144607 f z). Qed.
Lemma lem8196526 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8196527 {_144530 _144607 : Type'} (f : _144530 -> _144607) (x : _144530) : (f x) = (@I (_144530 -> _144607) f x).
Proof. exact (@lem8196526 _144530 _144607 f x). Qed.
Lemma lem8196529 {_144530 _144607 : Type'} (g : _144530 -> _144607) (z : _144530) : (g z) = (@I (_144530 -> _144607) g z).
Proof. exact (@lem8196527 _144530 _144607 g z). Qed.
Lemma lem8196530 {_144530 _144607 : Type'} (f : _144530 -> _144607) (z : _144530) : (term823 _144530 _144607 f z) = (term824 _144530 _144607 f z).
Proof. exact (MK_COMB (@lem8196513 _144607) (@lem8196521 _144530 _144607 f z)). Qed.
Lemma lem8196531 {_144530 _144607 : Type'} (f : _144530 -> _144607) (g : _144530 -> _144607) (z : _144530) : ((f z) = (g z)) = ((@I (_144530 -> _144607) f z) = (@I (_144530 -> _144607) g z)).
Proof. exact (MK_COMB (@lem8196530 _144530 _144607 f z) (@lem8196529 _144530 _144607 g z)). Qed.
Lemma lem8196532 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8196539 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8196540 {_144529 P : Type'} (f : P -> _144529) (x : P) : (f x) = (@I (P -> _144529) f x).
Proof. exact (@lem8196539 P _144529 f x). Qed.
Lemma lem8196542 {_144529 P : Type'} (s : P -> _144529) (a : P) : (s a) = (@I (P -> _144529) s a).
Proof. exact (@lem8196540 _144529 P s a). Qed.
Lemma lem8196543 {_144529 _144530 : Type'} (lt2 : type1470 _144529 _144530) (z : _144530) : (lt2 z) = (lt2 z).
Proof. exact (eq_refl (lt2 z)). Qed.
Lemma lem8196544 {_144529 _144530 P : Type'} (lt2 : type1470 _144529 _144530) (z : _144530) (s : P -> _144529) (a : P) : (term406 _144529 _144530 P lt2 z s a) = (term825 _144529 _144530 P lt2 z s a).
Proof. exact (MK_COMB (@lem8196543 _144529 _144530 lt2 z) (@lem8196542 _144529 P s a)). Qed.
Lemma lem8196546 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8196547 {_144529 _144530 : Type'} (f : type1470 _144529 _144530) (x : _144530) : (f x) = (@I (_144530 -> _144529 -> Prop) f x).
Proof. exact (@lem8196546 _144530 (_144529 -> Prop) f x). Qed.
Lemma lem8196548 {_144529 _144530 : Type'} (lt2 : type1470 _144529 _144530) (z : _144530) : (lt2 z) = (@I (_144530 -> _144529 -> Prop) lt2 z).
Proof. exact (@lem8196547 _144529 _144530 lt2 z). Qed.
Lemma lem8196549 {_144529 P : Type'} (s : P -> _144529) (a : P) : (@I (P -> _144529) s a) = (@I (P -> _144529) s a).
Proof. exact (eq_refl (@I (P -> _144529) s a)). Qed.
Lemma lem8196550 {_144529 _144530 P : Type'} (lt2 : type1470 _144529 _144530) (z : _144530) (s : P -> _144529) (a : P) : (term825 _144529 _144530 P lt2 z s a) = (term826 _144529 _144530 P lt2 z s a).
Proof. exact (MK_COMB (@lem8196548 _144529 _144530 lt2 z) (@lem8196549 _144529 P s a)). Qed.
Lemma lem8196552 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8196553 {_144529 : Type'} (f : _144529 -> Prop) (x : _144529) : (f x) = (@I (_144529 -> Prop) f x).
Proof. exact (@lem8196552 _144529 Prop f x). Qed.
Lemma lem8196554 {_144529 _144530 P : Type'} (lt2 : type1470 _144529 _144530) (z : _144530) (s : P -> _144529) (a : P) : (term826 _144529 _144530 P lt2 z s a) = (term827 _144529 _144530 P lt2 z s a).
Proof. exact (@lem8196553 _144529 (@I (_144530 -> _144529 -> Prop) lt2 z) (@I (P -> _144529) s a)). Qed.
Lemma lem8196555 {_144529 _144530 P : Type'} (lt2 : type1470 _144529 _144530) (z : _144530) (s : P -> _144529) (a : P) : (term825 _144529 _144530 P lt2 z s a) = (term827 _144529 _144530 P lt2 z s a).
Proof. exact (TRANS (@lem8196550 _144529 _144530 P lt2 z s a) (@lem8196554 _144529 _144530 P lt2 z s a)). Qed.
Lemma lem8196556 {_144529 _144530 P : Type'} (lt2 : type1470 _144529 _144530) (z : _144530) (s : P -> _144529) (a : P) : (term406 _144529 _144530 P lt2 z s a) = (term827 _144529 _144530 P lt2 z s a).
Proof. exact (TRANS (@lem8196544 _144529 _144530 P lt2 z s a) (@lem8196555 _144529 _144530 P lt2 z s a)). Qed.
Lemma lem8196557 {_144529 _144530 P : Type'} (lt2 : type1470 _144529 _144530) (z : _144530) (s : P -> _144529) (a : P) : (term828 _144529 _144530 P lt2 z s a) = (term829 _144529 _144530 P lt2 z s a).
Proof. exact (MK_COMB (@lem8196532) (@lem8196556 _144529 _144530 P lt2 z s a)). Qed.
Lemma lem8196558 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8196559 {_144529 _144530 P : Type'} (lt2 : type1470 _144529 _144530) (z : _144530) (s : P -> _144529) (a : P) : (term830 _144529 _144530 P lt2 z s a) = (term831 _144529 _144530 P lt2 z s a).
Proof. exact (MK_COMB (@lem8196558) (@lem8196557 _144529 _144530 P lt2 z s a)). Qed.
Lemma lem8196560 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (z : _144530) : (term818 _144529 _144530 _144607 P lt2 s a f g z) = (term832 _144529 _144530 _144607 P lt2 s a f g z).
Proof. exact (MK_COMB (@lem8196559 _144529 _144530 P lt2 z s a) (@lem8196531 _144530 _144607 f g z)). Qed.
Lemma lem8196561 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term819 _144529 _144530 _144607 P lt2 s a f g) = (term833 _144529 _144530 _144607 P lt2 s a f g).
Proof. exact (fun_ext (fun z : _144530 => @lem8196560 _144529 _144530 _144607 P lt2 s a f g z)). Qed.
Lemma lem8196562 {_144530 : Type'} : (@all _144530) = (@all _144530).
Proof. exact (eq_refl (@all _144530)). Qed.
Lemma lem8196563 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term820 _144529 _144530 _144607 P lt2 s a f g) = (term834 _144529 _144530 _144607 P lt2 s a f g).
Proof. exact (MK_COMB (@lem8196562 _144530) (@lem8196561 _144529 _144530 _144607 P lt2 s a f g)). Qed.
Lemma lem8196564 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) : term834 _144529 _144530 _144607 P lt2 s a f g.
Proof. exact (EQ_MP (@lem8196563 _144529 _144530 _144607 P lt2 s a f g) (@lem8196439 _144529 _144530 _144607 P lt2 s a f g h1)). Qed.
Lemma lem8196565 {_144645 : Type'} : (@eq _144645) = (@eq _144645).
Proof. exact (eq_refl (@eq _144645)). Qed.
Lemma lem8196572 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8196573 {_144530 _144607 _144645 P : Type'} (f : type564 _144530 _144607 _144645 P) (x : _144530 -> _144607) : (f x) = (@I ((_144530 -> _144607) -> P -> _144645) f x).
Proof. exact (@lem8196572 (_144530 -> _144607) (P -> _144645) f x). Qed.
Lemma lem8196574 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) : (pat f) = (@I ((_144530 -> _144607) -> P -> _144645) pat f).
Proof. exact (@lem8196573 _144530 _144607 _144645 P pat f). Qed.
Lemma lem8196575 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8196576 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (a : P) : (pat f a) = (@I ((_144530 -> _144607) -> P -> _144645) pat f a).
Proof. exact (MK_COMB (@lem8196574 _144530 _144607 _144645 P pat f) (@lem8196575 P a)). Qed.
Lemma lem8196578 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8196579 {_144645 P : Type'} (f : P -> _144645) (x : P) : (f x) = (@I (P -> _144645) f x).
Proof. exact (@lem8196578 P _144645 f x). Qed.
Lemma lem8196580 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (a : P) : (@I ((_144530 -> _144607) -> P -> _144645) pat f a) = (term835 _144530 _144607 _144645 P pat f a).
Proof. exact (@lem8196579 _144645 P (@I ((_144530 -> _144607) -> P -> _144645) pat f) a). Qed.
Lemma lem8196582 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (a : P) : (pat f a) = (term835 _144530 _144607 _144645 P pat f a).
Proof. exact (TRANS (@lem8196576 _144530 _144607 _144645 P pat f a) (@lem8196580 _144530 _144607 _144645 P pat f a)). Qed.
Lemma lem8196589 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8196590 {_144530 _144607 _144645 P : Type'} (f : type564 _144530 _144607 _144645 P) (x : _144530 -> _144607) : (f x) = (@I ((_144530 -> _144607) -> P -> _144645) f x).
Proof. exact (@lem8196589 (_144530 -> _144607) (P -> _144645) f x). Qed.
Lemma lem8196591 {_144530 _144607 _144645 P : Type'} (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) : (e f) = (@I ((_144530 -> _144607) -> P -> _144645) e f).
Proof. exact (@lem8196590 _144530 _144607 _144645 P e f). Qed.
Lemma lem8196592 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8196593 {_144530 _144607 _144645 P : Type'} (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (a : P) : (e f a) = (@I ((_144530 -> _144607) -> P -> _144645) e f a).
Proof. exact (MK_COMB (@lem8196591 _144530 _144607 _144645 P e f) (@lem8196592 P a)). Qed.
Lemma lem8196595 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8196596 {_144645 P : Type'} (f : P -> _144645) (x : P) : (f x) = (@I (P -> _144645) f x).
Proof. exact (@lem8196595 P _144645 f x). Qed.
Lemma lem8196597 {_144530 _144607 _144645 P : Type'} (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (a : P) : (@I ((_144530 -> _144607) -> P -> _144645) e f a) = (term835 _144530 _144607 _144645 P e f a).
Proof. exact (@lem8196596 _144645 P (@I ((_144530 -> _144607) -> P -> _144645) e f) a). Qed.
Lemma lem8196599 {_144530 _144607 _144645 P : Type'} (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (a : P) : (e f a) = (term835 _144530 _144607 _144645 P e f a).
Proof. exact (TRANS (@lem8196593 _144530 _144607 _144645 P e f a) (@lem8196597 _144530 _144607 _144645 P e f a)). Qed.
Lemma lem8196600 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (a : P) : (term836 _144530 _144607 _144645 P pat f a) = (term837 _144530 _144607 _144645 P pat f a).
Proof. exact (MK_COMB (@lem8196565 _144645) (@lem8196582 _144530 _144607 _144645 P pat f a)). Qed.
Lemma lem8196601 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (a : P) : ((pat f a) = (e f a)) = ((term835 _144530 _144607 _144645 P pat f a) = (term835 _144530 _144607 _144645 P e f a)).
Proof. exact (MK_COMB (@lem8196600 _144530 _144607 _144645 P pat f a) (@lem8196599 _144530 _144607 _144645 P e f a)). Qed.
Lemma lem8196603 {_144645 : Type'} : (@eq _144645) = (@eq _144645).
Proof. exact (eq_refl (@eq _144645)). Qed.
Lemma lem8196610 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8196611 {_144530 _144607 _144645 P : Type'} (f : type564 _144530 _144607 _144645 P) (x : _144530 -> _144607) : (f x) = (@I ((_144530 -> _144607) -> P -> _144645) f x).
Proof. exact (@lem8196610 (_144530 -> _144607) (P -> _144645) f x). Qed.
Lemma lem8196612 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) : (pat g) = (@I ((_144530 -> _144607) -> P -> _144645) pat g).
Proof. exact (@lem8196611 _144530 _144607 _144645 P pat g). Qed.
Lemma lem8196613 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8196614 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (pat g a) = (@I ((_144530 -> _144607) -> P -> _144645) pat g a).
Proof. exact (MK_COMB (@lem8196612 _144530 _144607 _144645 P pat g) (@lem8196613 P a)). Qed.
Lemma lem8196616 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8196617 {_144645 P : Type'} (f : P -> _144645) (x : P) : (f x) = (@I (P -> _144645) f x).
Proof. exact (@lem8196616 P _144645 f x). Qed.
Lemma lem8196618 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (@I ((_144530 -> _144607) -> P -> _144645) pat g a) = (term835 _144530 _144607 _144645 P pat g a).
Proof. exact (@lem8196617 _144645 P (@I ((_144530 -> _144607) -> P -> _144645) pat g) a). Qed.
Lemma lem8196620 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (pat g a) = (term835 _144530 _144607 _144645 P pat g a).
Proof. exact (TRANS (@lem8196614 _144530 _144607 _144645 P pat g a) (@lem8196618 _144530 _144607 _144645 P pat g a)). Qed.
Lemma lem8196627 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8196628 {_144530 _144607 _144645 P : Type'} (f : type564 _144530 _144607 _144645 P) (x : _144530 -> _144607) : (f x) = (@I ((_144530 -> _144607) -> P -> _144645) f x).
Proof. exact (@lem8196627 (_144530 -> _144607) (P -> _144645) f x). Qed.
Lemma lem8196629 {_144530 _144607 _144645 P : Type'} (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) : (e g) = (@I ((_144530 -> _144607) -> P -> _144645) e g).
Proof. exact (@lem8196628 _144530 _144607 _144645 P e g). Qed.
Lemma lem8196630 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8196631 {_144530 _144607 _144645 P : Type'} (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (e g a) = (@I ((_144530 -> _144607) -> P -> _144645) e g a).
Proof. exact (MK_COMB (@lem8196629 _144530 _144607 _144645 P e g) (@lem8196630 P a)). Qed.
Lemma lem8196633 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8196634 {_144645 P : Type'} (f : P -> _144645) (x : P) : (f x) = (@I (P -> _144645) f x).
Proof. exact (@lem8196633 P _144645 f x). Qed.
Lemma lem8196635 {_144530 _144607 _144645 P : Type'} (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (@I ((_144530 -> _144607) -> P -> _144645) e g a) = (term835 _144530 _144607 _144645 P e g a).
Proof. exact (@lem8196634 _144645 P (@I ((_144530 -> _144607) -> P -> _144645) e g) a). Qed.
Lemma lem8196637 {_144530 _144607 _144645 P : Type'} (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (e g a) = (term835 _144530 _144607 _144645 P e g a).
Proof. exact (TRANS (@lem8196631 _144530 _144607 _144645 P e g a) (@lem8196635 _144530 _144607 _144645 P e g a)). Qed.
Lemma lem8196638 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term836 _144530 _144607 _144645 P pat g a) = (term837 _144530 _144607 _144645 P pat g a).
Proof. exact (MK_COMB (@lem8196603 _144645) (@lem8196620 _144530 _144607 _144645 P pat g a)). Qed.
Lemma lem8196639 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : ((pat g a) = (e g a)) = ((term835 _144530 _144607 _144645 P pat g a) = (term835 _144530 _144607 _144645 P e g a)).
Proof. exact (MK_COMB (@lem8196638 _144530 _144607 _144645 P pat g a) (@lem8196637 _144530 _144607 _144645 P e g a)). Qed.
Lemma lem8196647 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8196648 {_144530 _144607 P : Type'} (f : type560 _144530 _144607 P) (x : _144530 -> _144607) : (f x) = (@I ((_144530 -> _144607) -> P -> Prop) f x).
Proof. exact (@lem8196647 (_144530 -> _144607) (P -> Prop) f x). Qed.
Lemma lem8196649 {_144530 _144607 P : Type'} (q : type560 _144530 _144607 P) (g : _144530 -> _144607) : (q g) = (@I ((_144530 -> _144607) -> P -> Prop) q g).
Proof. exact (@lem8196648 _144530 _144607 P q g). Qed.
Lemma lem8196650 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8196651 {_144530 _144607 P : Type'} (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (q g a) = (@I ((_144530 -> _144607) -> P -> Prop) q g a).
Proof. exact (MK_COMB (@lem8196649 _144530 _144607 P q g) (@lem8196650 P a)). Qed.
Lemma lem8196653 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8196654 {P : Type'} (f : P -> Prop) (x : P) : (f x) = (@I (P -> Prop) f x).
Proof. exact (@lem8196653 P Prop f x). Qed.
Lemma lem8196655 {_144530 _144607 P : Type'} (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (@I ((_144530 -> _144607) -> P -> Prop) q g a) = (term822 _144530 _144607 P q g a).
Proof. exact (@lem8196654 P (@I ((_144530 -> _144607) -> P -> Prop) q g) a). Qed.
Lemma lem8196657 {_144530 _144607 P : Type'} (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (q g a) = (term822 _144530 _144607 P q g a).
Proof. exact (TRANS (@lem8196651 _144530 _144607 P q g a) (@lem8196655 _144530 _144607 P q g a)). Qed.
Lemma lem8196658 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8196665 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8196666 {_144530 _144607 P : Type'} (f : type560 _144530 _144607 P) (x : _144530 -> _144607) : (f x) = (@I ((_144530 -> _144607) -> P -> Prop) f x).
Proof. exact (@lem8196665 (_144530 -> _144607) (P -> Prop) f x). Qed.
Lemma lem8196667 {_144530 _144607 P : Type'} (q : type560 _144530 _144607 P) (f : _144530 -> _144607) : (q f) = (@I ((_144530 -> _144607) -> P -> Prop) q f).
Proof. exact (@lem8196666 _144530 _144607 P q f). Qed.
Lemma lem8196668 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8196669 {_144530 _144607 P : Type'} (q : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) : (q f a) = (@I ((_144530 -> _144607) -> P -> Prop) q f a).
Proof. exact (MK_COMB (@lem8196667 _144530 _144607 P q f) (@lem8196668 P a)). Qed.
Lemma lem8196671 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8196672 {P : Type'} (f : P -> Prop) (x : P) : (f x) = (@I (P -> Prop) f x).
Proof. exact (@lem8196671 P Prop f x). Qed.
Lemma lem8196673 {_144530 _144607 P : Type'} (q : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) : (@I ((_144530 -> _144607) -> P -> Prop) q f a) = (term822 _144530 _144607 P q f a).
Proof. exact (@lem8196672 P (@I ((_144530 -> _144607) -> P -> Prop) q f) a). Qed.
Lemma lem8196675 {_144530 _144607 P : Type'} (q : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) : (q f a) = (term822 _144530 _144607 P q f a).
Proof. exact (TRANS (@lem8196669 _144530 _144607 P q f a) (@lem8196673 _144530 _144607 P q f a)). Qed.
Lemma lem8196676 {_144530 _144607 P : Type'} (q : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) : (term437 _144530 _144607 P q f a) = (term867 _144530 _144607 P q f a).
Proof. exact (MK_COMB (@lem8196658) (@lem8196675 _144530 _144607 P q f a)). Qed.
Lemma lem8196677 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8196678 {_144530 _144607 P : Type'} (q : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) : (term1077 _144530 _144607 P q f a) = (term1078 _144530 _144607 P q f a).
Proof. exact (MK_COMB (@lem8196677) (@lem8196676 _144530 _144607 P q f a)). Qed.
Lemma lem8196679 {_144530 _144607 P : Type'} (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term1079 _144530 _144607 P f q g a) = (term1080 _144530 _144607 P f q g a).
Proof. exact (MK_COMB (@lem8196678 _144530 _144607 P q f a) (@lem8196657 _144530 _144607 P q g a)). Qed.
Lemma lem8196680 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8196687 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8196688 {_144530 _144607 P : Type'} (f : type560 _144530 _144607 P) (x : _144530 -> _144607) : (f x) = (@I ((_144530 -> _144607) -> P -> Prop) f x).
Proof. exact (@lem8196687 (_144530 -> _144607) (P -> Prop) f x). Qed.
Lemma lem8196689 {_144530 _144607 P : Type'} (q : type560 _144530 _144607 P) (g : _144530 -> _144607) : (q g) = (@I ((_144530 -> _144607) -> P -> Prop) q g).
Proof. exact (@lem8196688 _144530 _144607 P q g). Qed.
Lemma lem8196690 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8196691 {_144530 _144607 P : Type'} (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (q g a) = (@I ((_144530 -> _144607) -> P -> Prop) q g a).
Proof. exact (MK_COMB (@lem8196689 _144530 _144607 P q g) (@lem8196690 P a)). Qed.
Lemma lem8196693 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8196694 {P : Type'} (f : P -> Prop) (x : P) : (f x) = (@I (P -> Prop) f x).
Proof. exact (@lem8196693 P Prop f x). Qed.
Lemma lem8196695 {_144530 _144607 P : Type'} (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (@I ((_144530 -> _144607) -> P -> Prop) q g a) = (term822 _144530 _144607 P q g a).
Proof. exact (@lem8196694 P (@I ((_144530 -> _144607) -> P -> Prop) q g) a). Qed.
Lemma lem8196697 {_144530 _144607 P : Type'} (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (q g a) = (term822 _144530 _144607 P q g a).
Proof. exact (TRANS (@lem8196691 _144530 _144607 P q g a) (@lem8196695 _144530 _144607 P q g a)). Qed.
Lemma lem8196698 {_144530 _144607 P : Type'} (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term437 _144530 _144607 P q g a) = (term867 _144530 _144607 P q g a).
Proof. exact (MK_COMB (@lem8196680) (@lem8196697 _144530 _144607 P q g a)). Qed.
Lemma lem8196705 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8196706 {_144530 _144607 P : Type'} (f : type560 _144530 _144607 P) (x : _144530 -> _144607) : (f x) = (@I ((_144530 -> _144607) -> P -> Prop) f x).
Proof. exact (@lem8196705 (_144530 -> _144607) (P -> Prop) f x). Qed.
Lemma lem8196707 {_144530 _144607 P : Type'} (q : type560 _144530 _144607 P) (f : _144530 -> _144607) : (q f) = (@I ((_144530 -> _144607) -> P -> Prop) q f).
Proof. exact (@lem8196706 _144530 _144607 P q f). Qed.
Lemma lem8196708 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8196709 {_144530 _144607 P : Type'} (q : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) : (q f a) = (@I ((_144530 -> _144607) -> P -> Prop) q f a).
Proof. exact (MK_COMB (@lem8196707 _144530 _144607 P q f) (@lem8196708 P a)). Qed.
Lemma lem8196711 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8196712 {P : Type'} (f : P -> Prop) (x : P) : (f x) = (@I (P -> Prop) f x).
Proof. exact (@lem8196711 P Prop f x). Qed.
Lemma lem8196713 {_144530 _144607 P : Type'} (q : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) : (@I ((_144530 -> _144607) -> P -> Prop) q f a) = (term822 _144530 _144607 P q f a).
Proof. exact (@lem8196712 P (@I ((_144530 -> _144607) -> P -> Prop) q f) a). Qed.
Lemma lem8196715 {_144530 _144607 P : Type'} (q : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) : (q f a) = (term822 _144530 _144607 P q f a).
Proof. exact (TRANS (@lem8196709 _144530 _144607 P q f a) (@lem8196713 _144530 _144607 P q f a)). Qed.
Lemma lem8196716 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8196717 {_144530 _144607 P : Type'} (q : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) : (term305 _144530 _144607 P q f a) = (term948 _144530 _144607 P q f a).
Proof. exact (MK_COMB (@lem8196716) (@lem8196715 _144530 _144607 P q f a)). Qed.
Lemma lem8196718 {_144530 _144607 P : Type'} (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term1081 _144530 _144607 P f q g a) = (term1082 _144530 _144607 P f q g a).
Proof. exact (MK_COMB (@lem8196717 _144530 _144607 P q f a) (@lem8196698 _144530 _144607 P q g a)). Qed.
Lemma lem8196719 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8196720 {_144530 _144607 P : Type'} (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term1083 _144530 _144607 P f q g a) = (term1084 _144530 _144607 P f q g a).
Proof. exact (MK_COMB (@lem8196719) (@lem8196718 _144530 _144607 P f q g a)). Qed.
Lemma lem8196721 {_144530 _144607 P : Type'} (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term1076 _144530 _144607 P f q g a) = (term1085 _144530 _144607 P f q g a).
Proof. exact (MK_COMB (@lem8196720 _144530 _144607 P f q g a) (@lem8196679 _144530 _144607 P f q g a)). Qed.
Lemma lem8196722 {_144530 _144607 P : Type'} (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term1006 _144530 _144607 P f q g a) : term1085 _144530 _144607 P f q g a.
Proof. exact (EQ_MP (@lem8196721 _144530 _144607 P f q g a) (@lem8196471 _144530 _144607 P f q g a h1)). Qed.
Lemma lem8197074 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8197075 {_144530 _144607 P : Type'} (f : type560 _144530 _144607 P) (x : _144530 -> _144607) : (f x) = (@I ((_144530 -> _144607) -> P -> Prop) f x).
Proof. exact (@lem8197074 (_144530 -> _144607) (P -> Prop) f x). Qed.
Lemma lem8197076 {_144530 _144607 P : Type'} (q : type560 _144530 _144607 P) (g : _144530 -> _144607) : (q g) = (@I ((_144530 -> _144607) -> P -> Prop) q g).
Proof. exact (@lem8197075 _144530 _144607 P q g). Qed.
Lemma lem8197077 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8197078 {_144530 _144607 P : Type'} (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (q g a) = (@I ((_144530 -> _144607) -> P -> Prop) q g a).
Proof. exact (MK_COMB (@lem8197076 _144530 _144607 P q g) (@lem8197077 P a)). Qed.
Lemma lem8197080 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8197081 {P : Type'} (f : P -> Prop) (x : P) : (f x) = (@I (P -> Prop) f x).
Proof. exact (@lem8197080 P Prop f x). Qed.
Lemma lem8197082 {_144530 _144607 P : Type'} (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (@I ((_144530 -> _144607) -> P -> Prop) q g a) = (term822 _144530 _144607 P q g a).
Proof. exact (@lem8197081 P (@I ((_144530 -> _144607) -> P -> Prop) q g) a). Qed.
Lemma lem8197084 {_144530 _144607 P : Type'} (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (q g a) = (term822 _144530 _144607 P q g a).
Proof. exact (TRANS (@lem8197078 _144530 _144607 P q g a) (@lem8197082 _144530 _144607 P q g a)). Qed.
Lemma lem8197085 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8197092 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8197093 {_144530 _144607 P : Type'} (f : type560 _144530 _144607 P) (x : _144530 -> _144607) : (f x) = (@I ((_144530 -> _144607) -> P -> Prop) f x).
Proof. exact (@lem8197092 (_144530 -> _144607) (P -> Prop) f x). Qed.
Lemma lem8197094 {_144530 _144607 P : Type'} (q : type560 _144530 _144607 P) (f : _144530 -> _144607) : (q f) = (@I ((_144530 -> _144607) -> P -> Prop) q f).
Proof. exact (@lem8197093 _144530 _144607 P q f). Qed.
Lemma lem8197095 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8197096 {_144530 _144607 P : Type'} (q : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) : (q f a) = (@I ((_144530 -> _144607) -> P -> Prop) q f a).
Proof. exact (MK_COMB (@lem8197094 _144530 _144607 P q f) (@lem8197095 P a)). Qed.
Lemma lem8197098 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8197099 {P : Type'} (f : P -> Prop) (x : P) : (f x) = (@I (P -> Prop) f x).
Proof. exact (@lem8197098 P Prop f x). Qed.
Lemma lem8197100 {_144530 _144607 P : Type'} (q : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) : (@I ((_144530 -> _144607) -> P -> Prop) q f a) = (term822 _144530 _144607 P q f a).
Proof. exact (@lem8197099 P (@I ((_144530 -> _144607) -> P -> Prop) q f) a). Qed.
Lemma lem8197102 {_144530 _144607 P : Type'} (q : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) : (q f a) = (term822 _144530 _144607 P q f a).
Proof. exact (TRANS (@lem8197096 _144530 _144607 P q f a) (@lem8197100 _144530 _144607 P q f a)). Qed.
Lemma lem8197103 {_144530 _144607 P : Type'} (q : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) : (term437 _144530 _144607 P q f a) = (term867 _144530 _144607 P q f a).
Proof. exact (MK_COMB (@lem8197085) (@lem8197102 _144530 _144607 P q f a)). Qed.
Lemma lem8197104 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8197105 {_144530 _144607 P : Type'} (q : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) : (term416 _144530 _144607 P q f a) = (term868 _144530 _144607 P q f a).
Proof. exact (MK_COMB (@lem8197104) (@lem8197103 _144530 _144607 P q f a)). Qed.
Lemma lem8197106 {_144530 _144607 P : Type'} (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term1086 _144530 _144607 P f q g a) = (term1087 _144530 _144607 P f q g a).
Proof. exact (MK_COMB (@lem8197105 _144530 _144607 P q f a) (@lem8197084 _144530 _144607 P q g a)). Qed.
Lemma lem8197107 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8197114 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8197115 {_144530 _144607 P : Type'} (f : type560 _144530 _144607 P) (x : _144530 -> _144607) : (f x) = (@I ((_144530 -> _144607) -> P -> Prop) f x).
Proof. exact (@lem8197114 (_144530 -> _144607) (P -> Prop) f x). Qed.
Lemma lem8197116 {_144530 _144607 P : Type'} (q : type560 _144530 _144607 P) (g : _144530 -> _144607) : (q g) = (@I ((_144530 -> _144607) -> P -> Prop) q g).
Proof. exact (@lem8197115 _144530 _144607 P q g). Qed.
Lemma lem8197117 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8197118 {_144530 _144607 P : Type'} (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (q g a) = (@I ((_144530 -> _144607) -> P -> Prop) q g a).
Proof. exact (MK_COMB (@lem8197116 _144530 _144607 P q g) (@lem8197117 P a)). Qed.
Lemma lem8197120 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8197121 {P : Type'} (f : P -> Prop) (x : P) : (f x) = (@I (P -> Prop) f x).
Proof. exact (@lem8197120 P Prop f x). Qed.
Lemma lem8197122 {_144530 _144607 P : Type'} (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (@I ((_144530 -> _144607) -> P -> Prop) q g a) = (term822 _144530 _144607 P q g a).
Proof. exact (@lem8197121 P (@I ((_144530 -> _144607) -> P -> Prop) q g) a). Qed.
Lemma lem8197124 {_144530 _144607 P : Type'} (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (q g a) = (term822 _144530 _144607 P q g a).
Proof. exact (TRANS (@lem8197118 _144530 _144607 P q g a) (@lem8197122 _144530 _144607 P q g a)). Qed.
Lemma lem8197125 {_144530 _144607 P : Type'} (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term437 _144530 _144607 P q g a) = (term867 _144530 _144607 P q g a).
Proof. exact (MK_COMB (@lem8197107) (@lem8197124 _144530 _144607 P q g a)). Qed.
Lemma lem8197132 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8197133 {_144530 _144607 P : Type'} (f : type560 _144530 _144607 P) (x : _144530 -> _144607) : (f x) = (@I ((_144530 -> _144607) -> P -> Prop) f x).
Proof. exact (@lem8197132 (_144530 -> _144607) (P -> Prop) f x). Qed.
Lemma lem8197134 {_144530 _144607 P : Type'} (q : type560 _144530 _144607 P) (f : _144530 -> _144607) : (q f) = (@I ((_144530 -> _144607) -> P -> Prop) q f).
Proof. exact (@lem8197133 _144530 _144607 P q f). Qed.
Lemma lem8197135 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8197136 {_144530 _144607 P : Type'} (q : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) : (q f a) = (@I ((_144530 -> _144607) -> P -> Prop) q f a).
Proof. exact (MK_COMB (@lem8197134 _144530 _144607 P q f) (@lem8197135 P a)). Qed.
Lemma lem8197138 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8197139 {P : Type'} (f : P -> Prop) (x : P) : (f x) = (@I (P -> Prop) f x).
Proof. exact (@lem8197138 P Prop f x). Qed.
Lemma lem8197140 {_144530 _144607 P : Type'} (q : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) : (@I ((_144530 -> _144607) -> P -> Prop) q f a) = (term822 _144530 _144607 P q f a).
Proof. exact (@lem8197139 P (@I ((_144530 -> _144607) -> P -> Prop) q f) a). Qed.
Lemma lem8197142 {_144530 _144607 P : Type'} (q : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) : (q f a) = (term822 _144530 _144607 P q f a).
Proof. exact (TRANS (@lem8197136 _144530 _144607 P q f a) (@lem8197140 _144530 _144607 P q f a)). Qed.
Lemma lem8197143 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8197144 {_144530 _144607 P : Type'} (q : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) : (term1088 _144530 _144607 P q f a) = (term1089 _144530 _144607 P q f a).
Proof. exact (MK_COMB (@lem8197143) (@lem8197142 _144530 _144607 P q f a)). Qed.
Lemma lem8197145 {_144530 _144607 P : Type'} (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term1090 _144530 _144607 P f q g a) = (term1091 _144530 _144607 P f q g a).
Proof. exact (MK_COMB (@lem8197144 _144530 _144607 P q f a) (@lem8197125 _144530 _144607 P q g a)). Qed.
Lemma lem8197146 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8197147 {_144530 _144607 P : Type'} (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term1092 _144530 _144607 P f q g a) = (term1093 _144530 _144607 P f q g a).
Proof. exact (MK_COMB (@lem8197146) (@lem8197145 _144530 _144607 P f q g a)). Qed.
Lemma lem8197148 {_144530 _144607 P : Type'} (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term699 _144530 _144607 P f q g a) = (term1094 _144530 _144607 P f q g a).
Proof. exact (MK_COMB (@lem8197147 _144530 _144607 P f q g a) (@lem8197106 _144530 _144607 P f q g a)). Qed.
Lemma lem8197149 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8197150 {_144607 : Type'} : (@eq _144607) = (@eq _144607).
Proof. exact (eq_refl (@eq _144607)). Qed.
Lemma lem8197151 {_144530 _144607 : Type'} (f : _144530 -> _144607) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem8197160 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8197161 {_144530 _144607 P : Type'} (f : type518 _144530 _144607 P) (x : _144530 -> _144607) : (f x) = (@I ((_144530 -> _144607) -> (_144530 -> _144607) -> P -> _144530) f x).
Proof. exact (@lem8197160 (_144530 -> _144607) (type557 _144530 _144607 P) f x). Qed.
Lemma lem8197162 {_144530 _144607 P : Type'} (z' : type518 _144530 _144607 P) (f : _144530 -> _144607) : (z' f) = (@I ((_144530 -> _144607) -> (_144530 -> _144607) -> P -> _144530) z' f).
Proof. exact (@lem8197161 _144530 _144607 P z' f). Qed.
Lemma lem8197163 {_144530 _144607 : Type'} (g : _144530 -> _144607) : g = g.
Proof. exact (eq_refl g). Qed.
Lemma lem8197164 {_144530 _144607 P : Type'} (z' : type518 _144530 _144607 P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (z' f g) = (@I ((_144530 -> _144607) -> (_144530 -> _144607) -> P -> _144530) z' f g).
Proof. exact (MK_COMB (@lem8197162 _144530 _144607 P z' f) (@lem8197163 _144530 _144607 g)). Qed.
Lemma lem8197166 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8197167 {_144530 _144607 P : Type'} (f : type557 _144530 _144607 P) (x : _144530 -> _144607) : (f x) = (@I ((_144530 -> _144607) -> P -> _144530) f x).
Proof. exact (@lem8197166 (_144530 -> _144607) (P -> _144530) f x). Qed.
Lemma lem8197168 {_144530 _144607 P : Type'} (z' : type518 _144530 _144607 P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (@I ((_144530 -> _144607) -> (_144530 -> _144607) -> P -> _144530) z' f g) = (term843 _144530 _144607 P z' f g).
Proof. exact (@lem8197167 _144530 _144607 P (@I ((_144530 -> _144607) -> (_144530 -> _144607) -> P -> _144530) z' f) g). Qed.
Lemma lem8197169 {_144530 _144607 P : Type'} (z' : type518 _144530 _144607 P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (z' f g) = (term843 _144530 _144607 P z' f g).
Proof. exact (TRANS (@lem8197164 _144530 _144607 P z' f g) (@lem8197168 _144530 _144607 P z' f g)). Qed.
Lemma lem8197170 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8197171 {_144530 _144607 P : Type'} (z' : type518 _144530 _144607 P) (f : _144530 -> _144607) (g : _144530 -> _144607) (a : P) : (z' f g a) = (term844 _144530 _144607 P z' f g a).
Proof. exact (MK_COMB (@lem8197169 _144530 _144607 P z' f g) (@lem8197170 P a)). Qed.
Lemma lem8197173 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8197174 {_144530 P : Type'} (f : P -> _144530) (x : P) : (f x) = (@I (P -> _144530) f x).
Proof. exact (@lem8197173 P _144530 f x). Qed.
Lemma lem8197175 {_144530 _144607 P : Type'} (z' : type518 _144530 _144607 P) (f : _144530 -> _144607) (g : _144530 -> _144607) (a : P) : (term844 _144530 _144607 P z' f g a) = (term845 _144530 _144607 P z' f g a).
Proof. exact (@lem8197174 _144530 P (term843 _144530 _144607 P z' f g) a). Qed.
Lemma lem8197177 {_144530 _144607 P : Type'} (z' : type518 _144530 _144607 P) (f : _144530 -> _144607) (g : _144530 -> _144607) (a : P) : (z' f g a) = (term845 _144530 _144607 P z' f g a).
Proof. exact (TRANS (@lem8197171 _144530 _144607 P z' f g a) (@lem8197175 _144530 _144607 P z' f g a)). Qed.
Lemma lem8197178 {_144530 _144607 P : Type'} (z' : type518 _144530 _144607 P) (f : _144530 -> _144607) (g : _144530 -> _144607) (a : P) : (term846 _144530 _144607 P z' f g a) = (term847 _144530 _144607 P z' f g a).
Proof. exact (MK_COMB (@lem8197151 _144530 _144607 f) (@lem8197177 _144530 _144607 P z' f g a)). Qed.
Lemma lem8197180 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8197181 {_144530 _144607 : Type'} (f : _144530 -> _144607) (x : _144530) : (f x) = (@I (_144530 -> _144607) f x).
Proof. exact (@lem8197180 _144530 _144607 f x). Qed.
Lemma lem8197182 {_144530 _144607 P : Type'} (z' : type518 _144530 _144607 P) (f : _144530 -> _144607) (g : _144530 -> _144607) (a : P) : (term847 _144530 _144607 P z' f g a) = (term848 _144530 _144607 P z' f g a).
Proof. exact (@lem8197181 _144530 _144607 f (term845 _144530 _144607 P z' f g a)). Qed.
Lemma lem8197183 {_144530 _144607 P : Type'} (z' : type518 _144530 _144607 P) (f : _144530 -> _144607) (g : _144530 -> _144607) (a : P) : (term846 _144530 _144607 P z' f g a) = (term848 _144530 _144607 P z' f g a).
Proof. exact (TRANS (@lem8197178 _144530 _144607 P z' f g a) (@lem8197182 _144530 _144607 P z' f g a)). Qed.
Lemma lem8197184 {_144530 _144607 : Type'} (g : _144530 -> _144607) : g = g.
Proof. exact (eq_refl g). Qed.
Lemma lem8197193 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8197194 {_144530 _144607 P : Type'} (f : type518 _144530 _144607 P) (x : _144530 -> _144607) : (f x) = (@I ((_144530 -> _144607) -> (_144530 -> _144607) -> P -> _144530) f x).
Proof. exact (@lem8197193 (_144530 -> _144607) (type557 _144530 _144607 P) f x). Qed.
Lemma lem8197195 {_144530 _144607 P : Type'} (z' : type518 _144530 _144607 P) (f : _144530 -> _144607) : (z' f) = (@I ((_144530 -> _144607) -> (_144530 -> _144607) -> P -> _144530) z' f).
Proof. exact (@lem8197194 _144530 _144607 P z' f). Qed.
Lemma lem8197196 {_144530 _144607 : Type'} (g : _144530 -> _144607) : g = g.
Proof. exact (eq_refl g). Qed.
Lemma lem8197197 {_144530 _144607 P : Type'} (z' : type518 _144530 _144607 P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (z' f g) = (@I ((_144530 -> _144607) -> (_144530 -> _144607) -> P -> _144530) z' f g).
Proof. exact (MK_COMB (@lem8197195 _144530 _144607 P z' f) (@lem8197196 _144530 _144607 g)). Qed.
Lemma lem8197199 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8197200 {_144530 _144607 P : Type'} (f : type557 _144530 _144607 P) (x : _144530 -> _144607) : (f x) = (@I ((_144530 -> _144607) -> P -> _144530) f x).
Proof. exact (@lem8197199 (_144530 -> _144607) (P -> _144530) f x). Qed.
Lemma lem8197201 {_144530 _144607 P : Type'} (z' : type518 _144530 _144607 P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (@I ((_144530 -> _144607) -> (_144530 -> _144607) -> P -> _144530) z' f g) = (term843 _144530 _144607 P z' f g).
Proof. exact (@lem8197200 _144530 _144607 P (@I ((_144530 -> _144607) -> (_144530 -> _144607) -> P -> _144530) z' f) g). Qed.
Lemma lem8197202 {_144530 _144607 P : Type'} (z' : type518 _144530 _144607 P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (z' f g) = (term843 _144530 _144607 P z' f g).
Proof. exact (TRANS (@lem8197197 _144530 _144607 P z' f g) (@lem8197201 _144530 _144607 P z' f g)). Qed.
Lemma lem8197203 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8197204 {_144530 _144607 P : Type'} (z' : type518 _144530 _144607 P) (f : _144530 -> _144607) (g : _144530 -> _144607) (a : P) : (z' f g a) = (term844 _144530 _144607 P z' f g a).
Proof. exact (MK_COMB (@lem8197202 _144530 _144607 P z' f g) (@lem8197203 P a)). Qed.
Lemma lem8197206 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8197207 {_144530 P : Type'} (f : P -> _144530) (x : P) : (f x) = (@I (P -> _144530) f x).
Proof. exact (@lem8197206 P _144530 f x). Qed.
Lemma lem8197208 {_144530 _144607 P : Type'} (z' : type518 _144530 _144607 P) (f : _144530 -> _144607) (g : _144530 -> _144607) (a : P) : (term844 _144530 _144607 P z' f g a) = (term845 _144530 _144607 P z' f g a).
Proof. exact (@lem8197207 _144530 P (term843 _144530 _144607 P z' f g) a). Qed.
Lemma lem8197210 {_144530 _144607 P : Type'} (z' : type518 _144530 _144607 P) (f : _144530 -> _144607) (g : _144530 -> _144607) (a : P) : (z' f g a) = (term845 _144530 _144607 P z' f g a).
Proof. exact (TRANS (@lem8197204 _144530 _144607 P z' f g a) (@lem8197208 _144530 _144607 P z' f g a)). Qed.
Lemma lem8197211 {_144530 _144607 P : Type'} (z' : type518 _144530 _144607 P) (f : _144530 -> _144607) (g : _144530 -> _144607) (a : P) : (term849 _144530 _144607 P z' f g a) = (term850 _144530 _144607 P z' f g a).
Proof. exact (MK_COMB (@lem8197184 _144530 _144607 g) (@lem8197210 _144530 _144607 P z' f g a)). Qed.
Lemma lem8197213 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8197214 {_144530 _144607 : Type'} (f : _144530 -> _144607) (x : _144530) : (f x) = (@I (_144530 -> _144607) f x).
Proof. exact (@lem8197213 _144530 _144607 f x). Qed.
Lemma lem8197215 {_144530 _144607 P : Type'} (z' : type518 _144530 _144607 P) (f : _144530 -> _144607) (g : _144530 -> _144607) (a : P) : (term850 _144530 _144607 P z' f g a) = (term851 _144530 _144607 P z' f g a).
Proof. exact (@lem8197214 _144530 _144607 g (term845 _144530 _144607 P z' f g a)). Qed.
Lemma lem8197216 {_144530 _144607 P : Type'} (z' : type518 _144530 _144607 P) (f : _144530 -> _144607) (g : _144530 -> _144607) (a : P) : (term849 _144530 _144607 P z' f g a) = (term851 _144530 _144607 P z' f g a).
Proof. exact (TRANS (@lem8197211 _144530 _144607 P z' f g a) (@lem8197215 _144530 _144607 P z' f g a)). Qed.
Lemma lem8197217 {_144530 _144607 P : Type'} (z' : type518 _144530 _144607 P) (f : _144530 -> _144607) (g : _144530 -> _144607) (a : P) : (term852 _144530 _144607 P z' f g a) = (term853 _144530 _144607 P z' f g a).
Proof. exact (MK_COMB (@lem8197150 _144607) (@lem8197183 _144530 _144607 P z' f g a)). Qed.
Lemma lem8197218 {_144530 _144607 P : Type'} (z' : type518 _144530 _144607 P) (f : _144530 -> _144607) (g : _144530 -> _144607) (a : P) : ((term846 _144530 _144607 P z' f g a) = (term849 _144530 _144607 P z' f g a)) = ((term848 _144530 _144607 P z' f g a) = (term851 _144530 _144607 P z' f g a)).
Proof. exact (MK_COMB (@lem8197217 _144530 _144607 P z' f g a) (@lem8197216 _144530 _144607 P z' f g a)). Qed.
Lemma lem8197219 {_144530 _144607 P : Type'} (z' : type518 _144530 _144607 P) (f : _144530 -> _144607) (g : _144530 -> _144607) (a : P) : (term854 _144530 _144607 P z' f g a) = (term855 _144530 _144607 P z' f g a).
Proof. exact (MK_COMB (@lem8197149) (@lem8197218 _144530 _144607 P z' f g a)). Qed.
Lemma lem8197220 {_144529 _144530 : Type'} (lt2 : type1470 _144529 _144530) : lt2 = lt2.
Proof. exact (eq_refl lt2). Qed.
Lemma lem8197229 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8197230 {_144530 _144607 P : Type'} (f : type518 _144530 _144607 P) (x : _144530 -> _144607) : (f x) = (@I ((_144530 -> _144607) -> (_144530 -> _144607) -> P -> _144530) f x).
Proof. exact (@lem8197229 (_144530 -> _144607) (type557 _144530 _144607 P) f x). Qed.
Lemma lem8197231 {_144530 _144607 P : Type'} (z' : type518 _144530 _144607 P) (f : _144530 -> _144607) : (z' f) = (@I ((_144530 -> _144607) -> (_144530 -> _144607) -> P -> _144530) z' f).
Proof. exact (@lem8197230 _144530 _144607 P z' f). Qed.
Lemma lem8197232 {_144530 _144607 : Type'} (g : _144530 -> _144607) : g = g.
Proof. exact (eq_refl g). Qed.
Lemma lem8197233 {_144530 _144607 P : Type'} (z' : type518 _144530 _144607 P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (z' f g) = (@I ((_144530 -> _144607) -> (_144530 -> _144607) -> P -> _144530) z' f g).
Proof. exact (MK_COMB (@lem8197231 _144530 _144607 P z' f) (@lem8197232 _144530 _144607 g)). Qed.
Lemma lem8197235 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8197236 {_144530 _144607 P : Type'} (f : type557 _144530 _144607 P) (x : _144530 -> _144607) : (f x) = (@I ((_144530 -> _144607) -> P -> _144530) f x).
Proof. exact (@lem8197235 (_144530 -> _144607) (P -> _144530) f x). Qed.
Lemma lem8197237 {_144530 _144607 P : Type'} (z' : type518 _144530 _144607 P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (@I ((_144530 -> _144607) -> (_144530 -> _144607) -> P -> _144530) z' f g) = (term843 _144530 _144607 P z' f g).
Proof. exact (@lem8197236 _144530 _144607 P (@I ((_144530 -> _144607) -> (_144530 -> _144607) -> P -> _144530) z' f) g). Qed.
Lemma lem8197238 {_144530 _144607 P : Type'} (z' : type518 _144530 _144607 P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (z' f g) = (term843 _144530 _144607 P z' f g).
Proof. exact (TRANS (@lem8197233 _144530 _144607 P z' f g) (@lem8197237 _144530 _144607 P z' f g)). Qed.
Lemma lem8197239 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8197240 {_144530 _144607 P : Type'} (z' : type518 _144530 _144607 P) (f : _144530 -> _144607) (g : _144530 -> _144607) (a : P) : (z' f g a) = (term844 _144530 _144607 P z' f g a).
Proof. exact (MK_COMB (@lem8197238 _144530 _144607 P z' f g) (@lem8197239 P a)). Qed.
Lemma lem8197242 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8197243 {_144530 P : Type'} (f : P -> _144530) (x : P) : (f x) = (@I (P -> _144530) f x).
Proof. exact (@lem8197242 P _144530 f x). Qed.
Lemma lem8197244 {_144530 _144607 P : Type'} (z' : type518 _144530 _144607 P) (f : _144530 -> _144607) (g : _144530 -> _144607) (a : P) : (term844 _144530 _144607 P z' f g a) = (term845 _144530 _144607 P z' f g a).
Proof. exact (@lem8197243 _144530 P (term843 _144530 _144607 P z' f g) a). Qed.
Lemma lem8197246 {_144530 _144607 P : Type'} (z' : type518 _144530 _144607 P) (f : _144530 -> _144607) (g : _144530 -> _144607) (a : P) : (z' f g a) = (term845 _144530 _144607 P z' f g a).
Proof. exact (TRANS (@lem8197240 _144530 _144607 P z' f g a) (@lem8197244 _144530 _144607 P z' f g a)). Qed.
Lemma lem8197251 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8197252 {_144529 P : Type'} (f : P -> _144529) (x : P) : (f x) = (@I (P -> _144529) f x).
Proof. exact (@lem8197251 P _144529 f x). Qed.
Lemma lem8197254 {_144529 P : Type'} (s : P -> _144529) (a : P) : (s a) = (@I (P -> _144529) s a).
Proof. exact (@lem8197252 _144529 P s a). Qed.
Lemma lem8197255 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (z' : type518 _144530 _144607 P) (f : _144530 -> _144607) (g : _144530 -> _144607) (a : P) : (term856 _144529 _144530 _144607 P lt2 z' f g a) = (term857 _144529 _144530 _144607 P lt2 z' f g a).
Proof. exact (MK_COMB (@lem8197220 _144529 _144530 lt2) (@lem8197246 _144530 _144607 P z' f g a)). Qed.
Lemma lem8197256 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (z' : type518 _144530 _144607 P) (f : _144530 -> _144607) (g : _144530 -> _144607) (s : P -> _144529) (a : P) : (term858 _144529 _144530 _144607 P lt2 z' f g s a) = (term859 _144529 _144530 _144607 P lt2 z' f g s a).
Proof. exact (MK_COMB (@lem8197255 _144529 _144530 _144607 P lt2 z' f g a) (@lem8197254 _144529 P s a)). Qed.
Lemma lem8197258 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8197259 {_144529 _144530 : Type'} (f : type1470 _144529 _144530) (x : _144530) : (f x) = (@I (_144530 -> _144529 -> Prop) f x).
Proof. exact (@lem8197258 _144530 (_144529 -> Prop) f x). Qed.
Lemma lem8197260 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (z' : type518 _144530 _144607 P) (f : _144530 -> _144607) (g : _144530 -> _144607) (a : P) : (term857 _144529 _144530 _144607 P lt2 z' f g a) = (term860 _144529 _144530 _144607 P lt2 z' f g a).
Proof. exact (@lem8197259 _144529 _144530 lt2 (term845 _144530 _144607 P z' f g a)). Qed.
Lemma lem8197261 {_144529 P : Type'} (s : P -> _144529) (a : P) : (@I (P -> _144529) s a) = (@I (P -> _144529) s a).
Proof. exact (eq_refl (@I (P -> _144529) s a)). Qed.
Lemma lem8197262 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (z' : type518 _144530 _144607 P) (f : _144530 -> _144607) (g : _144530 -> _144607) (s : P -> _144529) (a : P) : (term859 _144529 _144530 _144607 P lt2 z' f g s a) = (term861 _144529 _144530 _144607 P lt2 z' f g s a).
Proof. exact (MK_COMB (@lem8197260 _144529 _144530 _144607 P lt2 z' f g a) (@lem8197261 _144529 P s a)). Qed.
Lemma lem8197264 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8197265 {_144529 : Type'} (f : _144529 -> Prop) (x : _144529) : (f x) = (@I (_144529 -> Prop) f x).
Proof. exact (@lem8197264 _144529 Prop f x). Qed.
Lemma lem8197266 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (z' : type518 _144530 _144607 P) (f : _144530 -> _144607) (g : _144530 -> _144607) (s : P -> _144529) (a : P) : (term861 _144529 _144530 _144607 P lt2 z' f g s a) = (term862 _144529 _144530 _144607 P lt2 z' f g s a).
Proof. exact (@lem8197265 _144529 (term860 _144529 _144530 _144607 P lt2 z' f g a) (@I (P -> _144529) s a)). Qed.
Lemma lem8197267 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (z' : type518 _144530 _144607 P) (f : _144530 -> _144607) (g : _144530 -> _144607) (s : P -> _144529) (a : P) : (term859 _144529 _144530 _144607 P lt2 z' f g s a) = (term862 _144529 _144530 _144607 P lt2 z' f g s a).
Proof. exact (TRANS (@lem8197262 _144529 _144530 _144607 P lt2 z' f g s a) (@lem8197266 _144529 _144530 _144607 P lt2 z' f g s a)). Qed.
Lemma lem8197268 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (z' : type518 _144530 _144607 P) (f : _144530 -> _144607) (g : _144530 -> _144607) (s : P -> _144529) (a : P) : (term858 _144529 _144530 _144607 P lt2 z' f g s a) = (term862 _144529 _144530 _144607 P lt2 z' f g s a).
Proof. exact (TRANS (@lem8197256 _144529 _144530 _144607 P lt2 z' f g s a) (@lem8197267 _144529 _144530 _144607 P lt2 z' f g s a)). Qed.
Lemma lem8197269 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8197270 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (z' : type518 _144530 _144607 P) (f : _144530 -> _144607) (g : _144530 -> _144607) (s : P -> _144529) (a : P) : (term863 _144529 _144530 _144607 P lt2 z' f g s a) = (term864 _144529 _144530 _144607 P lt2 z' f g s a).
Proof. exact (MK_COMB (@lem8197269) (@lem8197268 _144529 _144530 _144607 P lt2 z' f g s a)). Qed.
Lemma lem8197271 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z' : type518 _144530 _144607 P) (f : _144530 -> _144607) (g : _144530 -> _144607) (a : P) : (term865 _144529 _144530 _144607 P lt2 s z' f g a) = (term866 _144529 _144530 _144607 P lt2 s z' f g a).
Proof. exact (MK_COMB (@lem8197270 _144529 _144530 _144607 P lt2 z' f g s a) (@lem8197219 _144530 _144607 P z' f g a)). Qed.
Lemma lem8197272 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8197273 {_144645 : Type'} : (@eq _144645) = (@eq _144645).
Proof. exact (eq_refl (@eq _144645)). Qed.
Lemma lem8197280 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8197281 {_144530 _144607 _144645 P : Type'} (f : type564 _144530 _144607 _144645 P) (x : _144530 -> _144607) : (f x) = (@I ((_144530 -> _144607) -> P -> _144645) f x).
Proof. exact (@lem8197280 (_144530 -> _144607) (P -> _144645) f x). Qed.
Lemma lem8197282 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) : (pat g) = (@I ((_144530 -> _144607) -> P -> _144645) pat g).
Proof. exact (@lem8197281 _144530 _144607 _144645 P pat g). Qed.
Lemma lem8197283 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8197284 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (pat g a) = (@I ((_144530 -> _144607) -> P -> _144645) pat g a).
Proof. exact (MK_COMB (@lem8197282 _144530 _144607 _144645 P pat g) (@lem8197283 P a)). Qed.
Lemma lem8197286 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8197287 {_144645 P : Type'} (f : P -> _144645) (x : P) : (f x) = (@I (P -> _144645) f x).
Proof. exact (@lem8197286 P _144645 f x). Qed.
Lemma lem8197288 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (@I ((_144530 -> _144607) -> P -> _144645) pat g a) = (term835 _144530 _144607 _144645 P pat g a).
Proof. exact (@lem8197287 _144645 P (@I ((_144530 -> _144607) -> P -> _144645) pat g) a). Qed.
Lemma lem8197290 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (pat g a) = (term835 _144530 _144607 _144645 P pat g a).
Proof. exact (TRANS (@lem8197284 _144530 _144607 _144645 P pat g a) (@lem8197288 _144530 _144607 _144645 P pat g a)). Qed.
Lemma lem8197297 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8197298 {_144530 _144607 _144645 P : Type'} (f : type564 _144530 _144607 _144645 P) (x : _144530 -> _144607) : (f x) = (@I ((_144530 -> _144607) -> P -> _144645) f x).
Proof. exact (@lem8197297 (_144530 -> _144607) (P -> _144645) f x). Qed.
Lemma lem8197299 {_144530 _144607 _144645 P : Type'} (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) : (e g) = (@I ((_144530 -> _144607) -> P -> _144645) e g).
Proof. exact (@lem8197298 _144530 _144607 _144645 P e g). Qed.
Lemma lem8197300 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8197301 {_144530 _144607 _144645 P : Type'} (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (e g a) = (@I ((_144530 -> _144607) -> P -> _144645) e g a).
Proof. exact (MK_COMB (@lem8197299 _144530 _144607 _144645 P e g) (@lem8197300 P a)). Qed.
Lemma lem8197303 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8197304 {_144645 P : Type'} (f : P -> _144645) (x : P) : (f x) = (@I (P -> _144645) f x).
Proof. exact (@lem8197303 P _144645 f x). Qed.
Lemma lem8197305 {_144530 _144607 _144645 P : Type'} (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (@I ((_144530 -> _144607) -> P -> _144645) e g a) = (term835 _144530 _144607 _144645 P e g a).
Proof. exact (@lem8197304 _144645 P (@I ((_144530 -> _144607) -> P -> _144645) e g) a). Qed.
Lemma lem8197307 {_144530 _144607 _144645 P : Type'} (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (e g a) = (term835 _144530 _144607 _144645 P e g a).
Proof. exact (TRANS (@lem8197301 _144530 _144607 _144645 P e g a) (@lem8197305 _144530 _144607 _144645 P e g a)). Qed.
Lemma lem8197308 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term836 _144530 _144607 _144645 P pat g a) = (term837 _144530 _144607 _144645 P pat g a).
Proof. exact (MK_COMB (@lem8197273 _144645) (@lem8197290 _144530 _144607 _144645 P pat g a)). Qed.
Lemma lem8197309 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : ((pat g a) = (e g a)) = ((term835 _144530 _144607 _144645 P pat g a) = (term835 _144530 _144607 _144645 P e g a)).
Proof. exact (MK_COMB (@lem8197308 _144530 _144607 _144645 P pat g a) (@lem8197307 _144530 _144607 _144645 P e g a)). Qed.
Lemma lem8197310 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term1095 _144530 _144607 _144645 P pat e g a) = (term1096 _144530 _144607 _144645 P pat e g a).
Proof. exact (MK_COMB (@lem8197272) (@lem8197309 _144530 _144607 _144645 P pat e g a)). Qed.
Lemma lem8197311 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8197318 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8197319 {_144530 _144607 P : Type'} (f : type560 _144530 _144607 P) (x : _144530 -> _144607) : (f x) = (@I ((_144530 -> _144607) -> P -> Prop) f x).
Proof. exact (@lem8197318 (_144530 -> _144607) (P -> Prop) f x). Qed.
Lemma lem8197320 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (g : _144530 -> _144607) : (p g) = (@I ((_144530 -> _144607) -> P -> Prop) p g).
Proof. exact (@lem8197319 _144530 _144607 P p g). Qed.
Lemma lem8197321 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8197322 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (p g a) = (@I ((_144530 -> _144607) -> P -> Prop) p g a).
Proof. exact (MK_COMB (@lem8197320 _144530 _144607 P p g) (@lem8197321 P a)). Qed.
Lemma lem8197324 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8197325 {P : Type'} (f : P -> Prop) (x : P) : (f x) = (@I (P -> Prop) f x).
Proof. exact (@lem8197324 P Prop f x). Qed.
Lemma lem8197326 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (@I ((_144530 -> _144607) -> P -> Prop) p g a) = (term822 _144530 _144607 P p g a).
Proof. exact (@lem8197325 P (@I ((_144530 -> _144607) -> P -> Prop) p g) a). Qed.
Lemma lem8197328 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (p g a) = (term822 _144530 _144607 P p g a).
Proof. exact (TRANS (@lem8197322 _144530 _144607 P p g a) (@lem8197326 _144530 _144607 P p g a)). Qed.
Lemma lem8197329 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term437 _144530 _144607 P p g a) = (term867 _144530 _144607 P p g a).
Proof. exact (MK_COMB (@lem8197311) (@lem8197328 _144530 _144607 P p g a)). Qed.
Lemma lem8197330 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8197331 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term416 _144530 _144607 P p g a) = (term868 _144530 _144607 P p g a).
Proof. exact (MK_COMB (@lem8197330) (@lem8197329 _144530 _144607 P p g a)). Qed.
Lemma lem8197332 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term690 _144530 _144607 _144645 P p pat e g a) = (term1097 _144530 _144607 _144645 P p pat e g a).
Proof. exact (MK_COMB (@lem8197331 _144530 _144607 P p g a) (@lem8197310 _144530 _144607 _144645 P pat e g a)). Qed.
Lemma lem8197333 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8197334 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term692 _144530 _144607 _144645 P p pat e g a) = (term1098 _144530 _144607 _144645 P p pat e g a).
Proof. exact (MK_COMB (@lem8197333) (@lem8197332 _144530 _144607 _144645 P p pat e g a)). Qed.
Lemma lem8197335 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z' : type518 _144530 _144607 P) (f : _144530 -> _144607) (g : _144530 -> _144607) (a : P) : (term1099 _144529 _144530 _144607 _144645 P p pat e lt2 s z' f g a) = (term1100 _144529 _144530 _144607 _144645 P p pat e lt2 s z' f g a).
Proof. exact (MK_COMB (@lem8197334 _144530 _144607 _144645 P p pat e g a) (@lem8197271 _144529 _144530 _144607 P lt2 s z' f g a)). Qed.
Lemma lem8197336 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8197337 {_144645 : Type'} : (@eq _144645) = (@eq _144645).
Proof. exact (eq_refl (@eq _144645)). Qed.
Lemma lem8197344 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8197345 {_144530 _144607 _144645 P : Type'} (f : type564 _144530 _144607 _144645 P) (x : _144530 -> _144607) : (f x) = (@I ((_144530 -> _144607) -> P -> _144645) f x).
Proof. exact (@lem8197344 (_144530 -> _144607) (P -> _144645) f x). Qed.
Lemma lem8197346 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) : (pat f) = (@I ((_144530 -> _144607) -> P -> _144645) pat f).
Proof. exact (@lem8197345 _144530 _144607 _144645 P pat f). Qed.
Lemma lem8197347 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8197348 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (a : P) : (pat f a) = (@I ((_144530 -> _144607) -> P -> _144645) pat f a).
Proof. exact (MK_COMB (@lem8197346 _144530 _144607 _144645 P pat f) (@lem8197347 P a)). Qed.
Lemma lem8197350 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8197351 {_144645 P : Type'} (f : P -> _144645) (x : P) : (f x) = (@I (P -> _144645) f x).
Proof. exact (@lem8197350 P _144645 f x). Qed.
Lemma lem8197352 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (a : P) : (@I ((_144530 -> _144607) -> P -> _144645) pat f a) = (term835 _144530 _144607 _144645 P pat f a).
Proof. exact (@lem8197351 _144645 P (@I ((_144530 -> _144607) -> P -> _144645) pat f) a). Qed.
Lemma lem8197354 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (a : P) : (pat f a) = (term835 _144530 _144607 _144645 P pat f a).
Proof. exact (TRANS (@lem8197348 _144530 _144607 _144645 P pat f a) (@lem8197352 _144530 _144607 _144645 P pat f a)). Qed.
Lemma lem8197361 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8197362 {_144530 _144607 _144645 P : Type'} (f : type564 _144530 _144607 _144645 P) (x : _144530 -> _144607) : (f x) = (@I ((_144530 -> _144607) -> P -> _144645) f x).
Proof. exact (@lem8197361 (_144530 -> _144607) (P -> _144645) f x). Qed.
Lemma lem8197363 {_144530 _144607 _144645 P : Type'} (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) : (e f) = (@I ((_144530 -> _144607) -> P -> _144645) e f).
Proof. exact (@lem8197362 _144530 _144607 _144645 P e f). Qed.
Lemma lem8197364 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8197365 {_144530 _144607 _144645 P : Type'} (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (a : P) : (e f a) = (@I ((_144530 -> _144607) -> P -> _144645) e f a).
Proof. exact (MK_COMB (@lem8197363 _144530 _144607 _144645 P e f) (@lem8197364 P a)). Qed.
Lemma lem8197367 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8197368 {_144645 P : Type'} (f : P -> _144645) (x : P) : (f x) = (@I (P -> _144645) f x).
Proof. exact (@lem8197367 P _144645 f x). Qed.
Lemma lem8197369 {_144530 _144607 _144645 P : Type'} (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (a : P) : (@I ((_144530 -> _144607) -> P -> _144645) e f a) = (term835 _144530 _144607 _144645 P e f a).
Proof. exact (@lem8197368 _144645 P (@I ((_144530 -> _144607) -> P -> _144645) e f) a). Qed.
Lemma lem8197371 {_144530 _144607 _144645 P : Type'} (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (a : P) : (e f a) = (term835 _144530 _144607 _144645 P e f a).
Proof. exact (TRANS (@lem8197365 _144530 _144607 _144645 P e f a) (@lem8197369 _144530 _144607 _144645 P e f a)). Qed.
Lemma lem8197372 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (a : P) : (term836 _144530 _144607 _144645 P pat f a) = (term837 _144530 _144607 _144645 P pat f a).
Proof. exact (MK_COMB (@lem8197337 _144645) (@lem8197354 _144530 _144607 _144645 P pat f a)). Qed.
Lemma lem8197373 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (a : P) : ((pat f a) = (e f a)) = ((term835 _144530 _144607 _144645 P pat f a) = (term835 _144530 _144607 _144645 P e f a)).
Proof. exact (MK_COMB (@lem8197372 _144530 _144607 _144645 P pat f a) (@lem8197371 _144530 _144607 _144645 P e f a)). Qed.
Lemma lem8197374 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (a : P) : (term1095 _144530 _144607 _144645 P pat e f a) = (term1096 _144530 _144607 _144645 P pat e f a).
Proof. exact (MK_COMB (@lem8197336) (@lem8197373 _144530 _144607 _144645 P pat e f a)). Qed.
Lemma lem8197375 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8197382 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8197383 {_144530 _144607 P : Type'} (f : type560 _144530 _144607 P) (x : _144530 -> _144607) : (f x) = (@I ((_144530 -> _144607) -> P -> Prop) f x).
Proof. exact (@lem8197382 (_144530 -> _144607) (P -> Prop) f x). Qed.
Lemma lem8197384 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (f : _144530 -> _144607) : (p f) = (@I ((_144530 -> _144607) -> P -> Prop) p f).
Proof. exact (@lem8197383 _144530 _144607 P p f). Qed.
Lemma lem8197385 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8197386 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) : (p f a) = (@I ((_144530 -> _144607) -> P -> Prop) p f a).
Proof. exact (MK_COMB (@lem8197384 _144530 _144607 P p f) (@lem8197385 P a)). Qed.
Lemma lem8197388 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8197389 {P : Type'} (f : P -> Prop) (x : P) : (f x) = (@I (P -> Prop) f x).
Proof. exact (@lem8197388 P Prop f x). Qed.
Lemma lem8197390 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) : (@I ((_144530 -> _144607) -> P -> Prop) p f a) = (term822 _144530 _144607 P p f a).
Proof. exact (@lem8197389 P (@I ((_144530 -> _144607) -> P -> Prop) p f) a). Qed.
Lemma lem8197392 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) : (p f a) = (term822 _144530 _144607 P p f a).
Proof. exact (TRANS (@lem8197386 _144530 _144607 P p f a) (@lem8197390 _144530 _144607 P p f a)). Qed.
Lemma lem8197393 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) : (term437 _144530 _144607 P p f a) = (term867 _144530 _144607 P p f a).
Proof. exact (MK_COMB (@lem8197375) (@lem8197392 _144530 _144607 P p f a)). Qed.
Lemma lem8197394 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8197395 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) : (term416 _144530 _144607 P p f a) = (term868 _144530 _144607 P p f a).
Proof. exact (MK_COMB (@lem8197394) (@lem8197393 _144530 _144607 P p f a)). Qed.
Lemma lem8197396 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (a : P) : (term690 _144530 _144607 _144645 P p pat e f a) = (term1097 _144530 _144607 _144645 P p pat e f a).
Proof. exact (MK_COMB (@lem8197395 _144530 _144607 P p f a) (@lem8197374 _144530 _144607 _144645 P pat e f a)). Qed.
Lemma lem8197397 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8197398 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (a : P) : (term692 _144530 _144607 _144645 P p pat e f a) = (term1098 _144530 _144607 _144645 P p pat e f a).
Proof. exact (MK_COMB (@lem8197397) (@lem8197396 _144530 _144607 _144645 P p pat e f a)). Qed.
Lemma lem8197399 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z' : type518 _144530 _144607 P) (f : _144530 -> _144607) (g : _144530 -> _144607) (a : P) : (term1101 _144529 _144530 _144607 _144645 P p pat e lt2 s z' f g a) = (term1102 _144529 _144530 _144607 _144645 P p pat e lt2 s z' f g a).
Proof. exact (MK_COMB (@lem8197398 _144530 _144607 _144645 P p pat e f a) (@lem8197335 _144529 _144530 _144607 _144645 P p pat e lt2 s z' f g a)). Qed.
Lemma lem8197400 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8197401 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z' : type518 _144530 _144607 P) (f : _144530 -> _144607) (g : _144530 -> _144607) (a : P) : (term1103 _144529 _144530 _144607 _144645 P p pat e lt2 s z' f g a) = (term1104 _144529 _144530 _144607 _144645 P p pat e lt2 s z' f g a).
Proof. exact (MK_COMB (@lem8197400) (@lem8197399 _144529 _144530 _144607 _144645 P p pat e lt2 s z' f g a)). Qed.
Lemma lem8197402 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z' : type518 _144530 _144607 P) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term1105 _144529 _144530 _144607 _144645 P p pat e lt2 s z' f q g a) = (term1106 _144529 _144530 _144607 _144645 P p pat e lt2 s z' f q g a).
Proof. exact (MK_COMB (@lem8197401 _144529 _144530 _144607 _144645 P p pat e lt2 s z' f g a) (@lem8197148 _144530 _144607 P f q g a)). Qed.
Lemma lem8197403 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z' : type518 _144530 _144607 P) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) : (term1107 _144529 _144530 _144607 _144645 P p pat e lt2 s z' f q g) = (term1108 _144529 _144530 _144607 _144645 P p pat e lt2 s z' f q g).
Proof. exact (fun_ext (fun a : P => @lem8197402 _144529 _144530 _144607 _144645 P p pat e lt2 s z' f q g a)). Qed.
Lemma lem8197404 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8197405 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z' : type518 _144530 _144607 P) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) : (term1109 _144529 _144530 _144607 _144645 P p pat e lt2 s z' f q g) = (term1110 _144529 _144530 _144607 _144645 P p pat e lt2 s z' f q g).
Proof. exact (MK_COMB (@lem8197404 P) (@lem8197403 _144529 _144530 _144607 _144645 P p pat e lt2 s z' f q g)). Qed.
Lemma lem8197406 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z' : type518 _144530 _144607 P) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) : (term1111 _144529 _144530 _144607 _144645 P p pat e lt2 s z' f q) = (term1112 _144529 _144530 _144607 _144645 P p pat e lt2 s z' f q).
Proof. exact (fun_ext (fun g : _144530 -> _144607 => @lem8197405 _144529 _144530 _144607 _144645 P p pat e lt2 s z' f q g)). Qed.
Lemma lem8197407 {_144530 _144607 : Type'} : (@all (_144530 -> _144607)) = (@all (_144530 -> _144607)).
Proof. exact (eq_refl (@all (_144530 -> _144607))). Qed.
Lemma lem8197408 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z' : type518 _144530 _144607 P) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) : (term810 _144529 _144530 _144607 _144645 P p pat e lt2 s z' f q) = (term1113 _144529 _144530 _144607 _144645 P p pat e lt2 s z' f q).
Proof. exact (MK_COMB (@lem8197407 _144530 _144607) (@lem8197406 _144529 _144530 _144607 _144645 P p pat e lt2 s z' f q)). Qed.
Lemma lem8197409 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z' : type518 _144530 _144607 P) (q : type560 _144530 _144607 P) : (term812 _144529 _144530 _144607 _144645 P p pat e lt2 s z' q) = (term1114 _144529 _144530 _144607 _144645 P p pat e lt2 s z' q).
Proof. exact (fun_ext (fun f : _144530 -> _144607 => @lem8197408 _144529 _144530 _144607 _144645 P p pat e lt2 s z' f q)). Qed.
Lemma lem8197410 {_144530 _144607 : Type'} : (@all (_144530 -> _144607)) = (@all (_144530 -> _144607)).
Proof. exact (eq_refl (@all (_144530 -> _144607))). Qed.
Lemma lem8197411 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z' : type518 _144530 _144607 P) (q : type560 _144530 _144607 P) : (term814 _144529 _144530 _144607 _144645 P p pat e lt2 s z' q) = (term1115 _144529 _144530 _144607 _144645 P p pat e lt2 s z' q).
Proof. exact (MK_COMB (@lem8197410 _144530 _144607) (@lem8197409 _144529 _144530 _144607 _144645 P p pat e lt2 s z' q)). Qed.
Lemma lem8197412 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z' : type518 _144530 _144607 P) (q : type560 _144530 _144607 P) (h1 : term814 _144529 _144530 _144607 _144645 P p pat e lt2 s z' q) : term1115 _144529 _144530 _144607 _144645 P p pat e lt2 s z' q.
Proof. exact (EQ_MP (@lem8197411 _144529 _144530 _144607 _144645 P p pat e lt2 s z' q) (@lem8196473 _144529 _144530 _144607 _144645 P p pat e lt2 s z' q h1)). Qed.
Lemma lem8198192 {_144530 _144607 P : Type'} (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term1082 _144530 _144607 P f q g a) : term1082 _144530 _144607 P f q g a.
Proof. exact (h1). Qed.
Lemma lem8198193 {_144530 _144607 P : Type'} (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term1080 _144530 _144607 P f q g a) : term1080 _144530 _144607 P f q g a.
Proof. exact (h1). Qed.
Lemma lem8198213 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (z : _144530) : (term832 _144529 _144530 _144607 P lt2 s a f g z) = (term832 _144529 _144530 _144607 P lt2 s a f g z).
Proof. exact (eq_refl (term832 _144529 _144530 _144607 P lt2 s a f g z)). Qed.
Lemma lem8198214 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term833 _144529 _144530 _144607 P lt2 s a f g) = (term833 _144529 _144530 _144607 P lt2 s a f g).
Proof. exact (fun_ext (fun z : _144530 => @lem8198213 _144529 _144530 _144607 P lt2 s a f g z)). Qed.
Lemma lem8198215 {_144530 : Type'} : (@all _144530) = (@all _144530).
Proof. exact (eq_refl (@all _144530)). Qed.
Lemma lem8198217 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term834 _144529 _144530 _144607 P lt2 s a f g) = (term834 _144529 _144530 _144607 P lt2 s a f g).
Proof. exact (MK_COMB (@lem8198215 _144530) (@lem8198214 _144529 _144530 _144607 P lt2 s a f g)). Qed.
Lemma lem8198218 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) : term834 _144529 _144530 _144607 P lt2 s a f g.
Proof. exact (EQ_MP (@lem8198217 _144529 _144530 _144607 P lt2 s a f g) (@lem8196564 _144529 _144530 _144607 P lt2 s a f g h1)). Qed.
Lemma lem8198321 {_144530 _144607 P : Type'} (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term1094 _144530 _144607 P f q g a) = (term1094 _144530 _144607 P f q g a).
Proof. exact (eq_refl (term1094 _144530 _144607 P f q g a)). Qed.
Lemma lem8198344 {_144529 _144530 _144607 _144645 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (z' : type518 _144530 _144607 P) (f : _144530 -> _144607) (g : _144530 -> _144607) (a : P) : (term1100 _144529 _144530 _144607 _144645 P p pat e lt2 s z' f g a) = (term1116 _144529 _144530 _144607 _144645 P lt2 s p pat e z' f g a).
Proof. exact (@lem19490 (term862 _144529 _144530 _144607 P lt2 z' f g s a) (term1097 _144530 _144607 _144645 P p pat e g a) (term855 _144530 _144607 P z' f g a)). Qed.
Lemma lem8198353 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (a : P) : (term1098 _144530 _144607 _144645 P p pat e f a) = (term1098 _144530 _144607 _144645 P p pat e f a).
Proof. exact (eq_refl (term1098 _144530 _144607 _144645 P p pat e f a)). Qed.
Lemma lem8198354 {_144529 _144530 _144607 _144645 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (z' : type518 _144530 _144607 P) (f : _144530 -> _144607) (g : _144530 -> _144607) (a : P) : (term1102 _144529 _144530 _144607 _144645 P p pat e lt2 s z' f g a) = (term1117 _144529 _144530 _144607 _144645 P lt2 s p pat e z' f g a).
Proof. exact (MK_COMB (@lem8198353 _144530 _144607 _144645 P p pat e f a) (@lem8198344 _144529 _144530 _144607 _144645 P lt2 s p pat e z' f g a)). Qed.
Lemma lem8198361 {_144529 _144530 _144607 _144645 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (z' : type518 _144530 _144607 P) (f : _144530 -> _144607) (g : _144530 -> _144607) (a : P) : (term1117 _144529 _144530 _144607 _144645 P lt2 s p pat e z' f g a) = (term1118 _144529 _144530 _144607 _144645 P lt2 s p pat e z' f g a).
Proof. exact (@lem19490 (term1119 _144529 _144530 _144607 _144645 P p pat e lt2 z' f g s a) (term1097 _144530 _144607 _144645 P p pat e f a) (term1120 _144530 _144607 _144645 P p pat e z' f g a)). Qed.
Lemma lem8198362 {_144529 _144530 _144607 _144645 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (z' : type518 _144530 _144607 P) (f : _144530 -> _144607) (g : _144530 -> _144607) (a : P) : (term1102 _144529 _144530 _144607 _144645 P p pat e lt2 s z' f g a) = (term1118 _144529 _144530 _144607 _144645 P lt2 s p pat e z' f g a).
Proof. exact (TRANS (@lem8198354 _144529 _144530 _144607 _144645 P lt2 s p pat e z' f g a) (@lem8198361 _144529 _144530 _144607 _144645 P lt2 s p pat e z' f g a)). Qed.
Lemma lem8198363 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8198364 {_144529 _144530 _144607 _144645 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (z' : type518 _144530 _144607 P) (f : _144530 -> _144607) (g : _144530 -> _144607) (a : P) : (term1104 _144529 _144530 _144607 _144645 P p pat e lt2 s z' f g a) = (term1121 _144529 _144530 _144607 _144645 P lt2 s p pat e z' f g a).
Proof. exact (MK_COMB (@lem8198363) (@lem8198362 _144529 _144530 _144607 _144645 P lt2 s p pat e z' f g a)). Qed.
Lemma lem8198365 {_144529 _144530 _144607 _144645 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (z' : type518 _144530 _144607 P) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term1106 _144529 _144530 _144607 _144645 P p pat e lt2 s z' f q g a) = (term1122 _144529 _144530 _144607 _144645 P lt2 s p pat e z' f q g a).
Proof. exact (MK_COMB (@lem8198364 _144529 _144530 _144607 _144645 P lt2 s p pat e z' f g a) (@lem8198321 _144530 _144607 P f q g a)). Qed.
Lemma lem8198366 {_144529 _144530 _144607 _144645 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (z' : type518 _144530 _144607 P) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term1122 _144529 _144530 _144607 _144645 P lt2 s p pat e z' f q g a) = (term1123 _144529 _144530 _144607 _144645 P lt2 s p pat e z' f q g a).
Proof. exact (@lem19490 (term1091 _144530 _144607 P f q g a) (term1118 _144529 _144530 _144607 _144645 P lt2 s p pat e z' f g a) (term1087 _144530 _144607 P f q g a)). Qed.
Lemma lem8198373 {_144529 _144530 _144607 _144645 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (z' : type518 _144530 _144607 P) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term1124 _144529 _144530 _144607 _144645 P lt2 s p pat e z' f q g a) = (term1125 _144529 _144530 _144607 _144645 P lt2 s p pat e z' f q g a).
Proof. exact (@lem19699 (term1126 _144529 _144530 _144607 _144645 P p pat e lt2 z' f g s a) (term1127 _144530 _144607 _144645 P p pat e z' f g a) (term1087 _144530 _144607 P f q g a)). Qed.
Lemma lem8198380 {_144529 _144530 _144607 _144645 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (z' : type518 _144530 _144607 P) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term1128 _144529 _144530 _144607 _144645 P lt2 s p pat e z' f q g a) = (term1129 _144529 _144530 _144607 _144645 P lt2 s p pat e z' f q g a).
Proof. exact (@lem19699 (term1126 _144529 _144530 _144607 _144645 P p pat e lt2 z' f g s a) (term1127 _144530 _144607 _144645 P p pat e z' f g a) (term1091 _144530 _144607 P f q g a)). Qed.
Lemma lem8198381 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8198382 {_144529 _144530 _144607 _144645 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (z' : type518 _144530 _144607 P) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term1130 _144529 _144530 _144607 _144645 P lt2 s p pat e z' f q g a) = (term1131 _144529 _144530 _144607 _144645 P lt2 s p pat e z' f q g a).
Proof. exact (MK_COMB (@lem8198381) (@lem8198380 _144529 _144530 _144607 _144645 P lt2 s p pat e z' f q g a)). Qed.
Lemma lem8198383 {_144529 _144530 _144607 _144645 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (z' : type518 _144530 _144607 P) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term1123 _144529 _144530 _144607 _144645 P lt2 s p pat e z' f q g a) = (term1132 _144529 _144530 _144607 _144645 P lt2 s p pat e z' f q g a).
Proof. exact (MK_COMB (@lem8198382 _144529 _144530 _144607 _144645 P lt2 s p pat e z' f q g a) (@lem8198373 _144529 _144530 _144607 _144645 P lt2 s p pat e z' f q g a)). Qed.
Lemma lem8198384 {_144529 _144530 _144607 _144645 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (z' : type518 _144530 _144607 P) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term1122 _144529 _144530 _144607 _144645 P lt2 s p pat e z' f q g a) = (term1132 _144529 _144530 _144607 _144645 P lt2 s p pat e z' f q g a).
Proof. exact (TRANS (@lem8198366 _144529 _144530 _144607 _144645 P lt2 s p pat e z' f q g a) (@lem8198383 _144529 _144530 _144607 _144645 P lt2 s p pat e z' f q g a)). Qed.
Lemma lem8198385 {_144529 _144530 _144607 _144645 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (z' : type518 _144530 _144607 P) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term1106 _144529 _144530 _144607 _144645 P p pat e lt2 s z' f q g a) = (term1132 _144529 _144530 _144607 _144645 P lt2 s p pat e z' f q g a).
Proof. exact (TRANS (@lem8198365 _144529 _144530 _144607 _144645 P lt2 s p pat e z' f q g a) (@lem8198384 _144529 _144530 _144607 _144645 P lt2 s p pat e z' f q g a)). Qed.
Lemma lem8198386 {_144529 _144530 _144607 _144645 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (z' : type518 _144530 _144607 P) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) : (term1108 _144529 _144530 _144607 _144645 P p pat e lt2 s z' f q g) = (term1133 _144529 _144530 _144607 _144645 P lt2 s p pat e z' f q g).
Proof. exact (fun_ext (fun a : P => @lem8198385 _144529 _144530 _144607 _144645 P lt2 s p pat e z' f q g a)). Qed.
Lemma lem8198387 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8198388 {_144529 _144530 _144607 _144645 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (z' : type518 _144530 _144607 P) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) : (term1110 _144529 _144530 _144607 _144645 P p pat e lt2 s z' f q g) = (term1134 _144529 _144530 _144607 _144645 P lt2 s p pat e z' f q g).
Proof. exact (MK_COMB (@lem8198387 P) (@lem8198386 _144529 _144530 _144607 _144645 P lt2 s p pat e z' f q g)). Qed.
Lemma lem8198389 {_144529 _144530 _144607 _144645 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (z' : type518 _144530 _144607 P) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) : (term1112 _144529 _144530 _144607 _144645 P p pat e lt2 s z' f q) = (term1135 _144529 _144530 _144607 _144645 P lt2 s p pat e z' f q).
Proof. exact (fun_ext (fun g : _144530 -> _144607 => @lem8198388 _144529 _144530 _144607 _144645 P lt2 s p pat e z' f q g)). Qed.
Lemma lem8198390 {_144530 _144607 : Type'} : (@all (_144530 -> _144607)) = (@all (_144530 -> _144607)).
Proof. exact (eq_refl (@all (_144530 -> _144607))). Qed.
Lemma lem8198391 {_144529 _144530 _144607 _144645 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (z' : type518 _144530 _144607 P) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) : (term1113 _144529 _144530 _144607 _144645 P p pat e lt2 s z' f q) = (term1136 _144529 _144530 _144607 _144645 P lt2 s p pat e z' f q).
Proof. exact (MK_COMB (@lem8198390 _144530 _144607) (@lem8198389 _144529 _144530 _144607 _144645 P lt2 s p pat e z' f q)). Qed.
Lemma lem8198392 {_144529 _144530 _144607 _144645 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (z' : type518 _144530 _144607 P) (q : type560 _144530 _144607 P) : (term1114 _144529 _144530 _144607 _144645 P p pat e lt2 s z' q) = (term1137 _144529 _144530 _144607 _144645 P lt2 s p pat e z' q).
Proof. exact (fun_ext (fun f : _144530 -> _144607 => @lem8198391 _144529 _144530 _144607 _144645 P lt2 s p pat e z' f q)). Qed.
Lemma lem8198393 {_144530 _144607 : Type'} : (@all (_144530 -> _144607)) = (@all (_144530 -> _144607)).
Proof. exact (eq_refl (@all (_144530 -> _144607))). Qed.
Lemma lem8198395 {_144529 _144530 _144607 _144645 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (z' : type518 _144530 _144607 P) (q : type560 _144530 _144607 P) : (term1115 _144529 _144530 _144607 _144645 P p pat e lt2 s z' q) = (term1138 _144529 _144530 _144607 _144645 P lt2 s p pat e z' q).
Proof. exact (MK_COMB (@lem8198393 _144530 _144607) (@lem8198392 _144529 _144530 _144607 _144645 P lt2 s p pat e z' q)). Qed.
Lemma lem8198396 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z' : type518 _144530 _144607 P) (q : type560 _144530 _144607 P) (h1 : term814 _144529 _144530 _144607 _144645 P p pat e lt2 s z' q) : term1138 _144529 _144530 _144607 _144645 P lt2 s p pat e z' q.
Proof. exact (EQ_MP (@lem8198395 _144529 _144530 _144607 _144645 P lt2 s p pat e z' q) (@lem8197412 _144529 _144530 _144607 _144645 P p pat e lt2 s z' q h1)). Qed.
Lemma lem8198603 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (z : _144530) : (term832 _144529 _144530 _144607 P lt2 s a f g z) = (term832 _144529 _144530 _144607 P lt2 s a f g z).
Proof. exact (eq_refl (term832 _144529 _144530 _144607 P lt2 s a f g z)). Qed.
Lemma lem8198604 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term833 _144529 _144530 _144607 P lt2 s a f g) = (term833 _144529 _144530 _144607 P lt2 s a f g).
Proof. exact (fun_ext (fun z : _144530 => @lem8198603 _144529 _144530 _144607 P lt2 s a f g z)). Qed.
Lemma lem8198605 {_144530 : Type'} : (@all _144530) = (@all _144530).
Proof. exact (eq_refl (@all _144530)). Qed.
Lemma lem8198607 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term834 _144529 _144530 _144607 P lt2 s a f g) = (term834 _144529 _144530 _144607 P lt2 s a f g).
Proof. exact (MK_COMB (@lem8198605 _144530) (@lem8198604 _144529 _144530 _144607 P lt2 s a f g)). Qed.
Lemma lem8198608 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) : term834 _144529 _144530 _144607 P lt2 s a f g.
Proof. exact (EQ_MP (@lem8198607 _144529 _144530 _144607 P lt2 s a f g) (@lem8196564 _144529 _144530 _144607 P lt2 s a f g h1)). Qed.
Lemma lem8198711 {_144530 _144607 P : Type'} (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term1094 _144530 _144607 P f q g a) = (term1094 _144530 _144607 P f q g a).
Proof. exact (eq_refl (term1094 _144530 _144607 P f q g a)). Qed.
Lemma lem8198734 {_144529 _144530 _144607 _144645 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (z' : type518 _144530 _144607 P) (f : _144530 -> _144607) (g : _144530 -> _144607) (a : P) : (term1100 _144529 _144530 _144607 _144645 P p pat e lt2 s z' f g a) = (term1116 _144529 _144530 _144607 _144645 P lt2 s p pat e z' f g a).
Proof. exact (@lem19490 (term862 _144529 _144530 _144607 P lt2 z' f g s a) (term1097 _144530 _144607 _144645 P p pat e g a) (term855 _144530 _144607 P z' f g a)). Qed.
Lemma lem8198743 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (a : P) : (term1098 _144530 _144607 _144645 P p pat e f a) = (term1098 _144530 _144607 _144645 P p pat e f a).
Proof. exact (eq_refl (term1098 _144530 _144607 _144645 P p pat e f a)). Qed.
Lemma lem8198744 {_144529 _144530 _144607 _144645 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (z' : type518 _144530 _144607 P) (f : _144530 -> _144607) (g : _144530 -> _144607) (a : P) : (term1102 _144529 _144530 _144607 _144645 P p pat e lt2 s z' f g a) = (term1117 _144529 _144530 _144607 _144645 P lt2 s p pat e z' f g a).
Proof. exact (MK_COMB (@lem8198743 _144530 _144607 _144645 P p pat e f a) (@lem8198734 _144529 _144530 _144607 _144645 P lt2 s p pat e z' f g a)). Qed.
Lemma lem8198751 {_144529 _144530 _144607 _144645 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (z' : type518 _144530 _144607 P) (f : _144530 -> _144607) (g : _144530 -> _144607) (a : P) : (term1117 _144529 _144530 _144607 _144645 P lt2 s p pat e z' f g a) = (term1118 _144529 _144530 _144607 _144645 P lt2 s p pat e z' f g a).
Proof. exact (@lem19490 (term1119 _144529 _144530 _144607 _144645 P p pat e lt2 z' f g s a) (term1097 _144530 _144607 _144645 P p pat e f a) (term1120 _144530 _144607 _144645 P p pat e z' f g a)). Qed.
Lemma lem8198752 {_144529 _144530 _144607 _144645 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (z' : type518 _144530 _144607 P) (f : _144530 -> _144607) (g : _144530 -> _144607) (a : P) : (term1102 _144529 _144530 _144607 _144645 P p pat e lt2 s z' f g a) = (term1118 _144529 _144530 _144607 _144645 P lt2 s p pat e z' f g a).
Proof. exact (TRANS (@lem8198744 _144529 _144530 _144607 _144645 P lt2 s p pat e z' f g a) (@lem8198751 _144529 _144530 _144607 _144645 P lt2 s p pat e z' f g a)). Qed.
Lemma lem8198753 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8198754 {_144529 _144530 _144607 _144645 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (z' : type518 _144530 _144607 P) (f : _144530 -> _144607) (g : _144530 -> _144607) (a : P) : (term1104 _144529 _144530 _144607 _144645 P p pat e lt2 s z' f g a) = (term1121 _144529 _144530 _144607 _144645 P lt2 s p pat e z' f g a).
Proof. exact (MK_COMB (@lem8198753) (@lem8198752 _144529 _144530 _144607 _144645 P lt2 s p pat e z' f g a)). Qed.
Lemma lem8198755 {_144529 _144530 _144607 _144645 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (z' : type518 _144530 _144607 P) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term1106 _144529 _144530 _144607 _144645 P p pat e lt2 s z' f q g a) = (term1122 _144529 _144530 _144607 _144645 P lt2 s p pat e z' f q g a).
Proof. exact (MK_COMB (@lem8198754 _144529 _144530 _144607 _144645 P lt2 s p pat e z' f g a) (@lem8198711 _144530 _144607 P f q g a)). Qed.
Lemma lem8198756 {_144529 _144530 _144607 _144645 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (z' : type518 _144530 _144607 P) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term1122 _144529 _144530 _144607 _144645 P lt2 s p pat e z' f q g a) = (term1123 _144529 _144530 _144607 _144645 P lt2 s p pat e z' f q g a).
Proof. exact (@lem19490 (term1091 _144530 _144607 P f q g a) (term1118 _144529 _144530 _144607 _144645 P lt2 s p pat e z' f g a) (term1087 _144530 _144607 P f q g a)). Qed.
Lemma lem8198763 {_144529 _144530 _144607 _144645 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (z' : type518 _144530 _144607 P) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term1124 _144529 _144530 _144607 _144645 P lt2 s p pat e z' f q g a) = (term1125 _144529 _144530 _144607 _144645 P lt2 s p pat e z' f q g a).
Proof. exact (@lem19699 (term1126 _144529 _144530 _144607 _144645 P p pat e lt2 z' f g s a) (term1127 _144530 _144607 _144645 P p pat e z' f g a) (term1087 _144530 _144607 P f q g a)). Qed.
Lemma lem8198770 {_144529 _144530 _144607 _144645 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (z' : type518 _144530 _144607 P) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term1128 _144529 _144530 _144607 _144645 P lt2 s p pat e z' f q g a) = (term1129 _144529 _144530 _144607 _144645 P lt2 s p pat e z' f q g a).
Proof. exact (@lem19699 (term1126 _144529 _144530 _144607 _144645 P p pat e lt2 z' f g s a) (term1127 _144530 _144607 _144645 P p pat e z' f g a) (term1091 _144530 _144607 P f q g a)). Qed.
Lemma lem8198771 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8198772 {_144529 _144530 _144607 _144645 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (z' : type518 _144530 _144607 P) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term1130 _144529 _144530 _144607 _144645 P lt2 s p pat e z' f q g a) = (term1131 _144529 _144530 _144607 _144645 P lt2 s p pat e z' f q g a).
Proof. exact (MK_COMB (@lem8198771) (@lem8198770 _144529 _144530 _144607 _144645 P lt2 s p pat e z' f q g a)). Qed.
Lemma lem8198773 {_144529 _144530 _144607 _144645 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (z' : type518 _144530 _144607 P) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term1123 _144529 _144530 _144607 _144645 P lt2 s p pat e z' f q g a) = (term1132 _144529 _144530 _144607 _144645 P lt2 s p pat e z' f q g a).
Proof. exact (MK_COMB (@lem8198772 _144529 _144530 _144607 _144645 P lt2 s p pat e z' f q g a) (@lem8198763 _144529 _144530 _144607 _144645 P lt2 s p pat e z' f q g a)). Qed.
Lemma lem8198774 {_144529 _144530 _144607 _144645 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (z' : type518 _144530 _144607 P) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term1122 _144529 _144530 _144607 _144645 P lt2 s p pat e z' f q g a) = (term1132 _144529 _144530 _144607 _144645 P lt2 s p pat e z' f q g a).
Proof. exact (TRANS (@lem8198756 _144529 _144530 _144607 _144645 P lt2 s p pat e z' f q g a) (@lem8198773 _144529 _144530 _144607 _144645 P lt2 s p pat e z' f q g a)). Qed.
Lemma lem8198775 {_144529 _144530 _144607 _144645 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (z' : type518 _144530 _144607 P) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term1106 _144529 _144530 _144607 _144645 P p pat e lt2 s z' f q g a) = (term1132 _144529 _144530 _144607 _144645 P lt2 s p pat e z' f q g a).
Proof. exact (TRANS (@lem8198755 _144529 _144530 _144607 _144645 P lt2 s p pat e z' f q g a) (@lem8198774 _144529 _144530 _144607 _144645 P lt2 s p pat e z' f q g a)). Qed.
Lemma lem8198776 {_144529 _144530 _144607 _144645 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (z' : type518 _144530 _144607 P) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) : (term1108 _144529 _144530 _144607 _144645 P p pat e lt2 s z' f q g) = (term1133 _144529 _144530 _144607 _144645 P lt2 s p pat e z' f q g).
Proof. exact (fun_ext (fun a : P => @lem8198775 _144529 _144530 _144607 _144645 P lt2 s p pat e z' f q g a)). Qed.
Lemma lem8198777 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8198778 {_144529 _144530 _144607 _144645 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (z' : type518 _144530 _144607 P) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) : (term1110 _144529 _144530 _144607 _144645 P p pat e lt2 s z' f q g) = (term1134 _144529 _144530 _144607 _144645 P lt2 s p pat e z' f q g).
Proof. exact (MK_COMB (@lem8198777 P) (@lem8198776 _144529 _144530 _144607 _144645 P lt2 s p pat e z' f q g)). Qed.
Lemma lem8198779 {_144529 _144530 _144607 _144645 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (z' : type518 _144530 _144607 P) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) : (term1112 _144529 _144530 _144607 _144645 P p pat e lt2 s z' f q) = (term1135 _144529 _144530 _144607 _144645 P lt2 s p pat e z' f q).
Proof. exact (fun_ext (fun g : _144530 -> _144607 => @lem8198778 _144529 _144530 _144607 _144645 P lt2 s p pat e z' f q g)). Qed.
Lemma lem8198780 {_144530 _144607 : Type'} : (@all (_144530 -> _144607)) = (@all (_144530 -> _144607)).
Proof. exact (eq_refl (@all (_144530 -> _144607))). Qed.
Lemma lem8198781 {_144529 _144530 _144607 _144645 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (z' : type518 _144530 _144607 P) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) : (term1113 _144529 _144530 _144607 _144645 P p pat e lt2 s z' f q) = (term1136 _144529 _144530 _144607 _144645 P lt2 s p pat e z' f q).
Proof. exact (MK_COMB (@lem8198780 _144530 _144607) (@lem8198779 _144529 _144530 _144607 _144645 P lt2 s p pat e z' f q)). Qed.
Lemma lem8198782 {_144529 _144530 _144607 _144645 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (z' : type518 _144530 _144607 P) (q : type560 _144530 _144607 P) : (term1114 _144529 _144530 _144607 _144645 P p pat e lt2 s z' q) = (term1137 _144529 _144530 _144607 _144645 P lt2 s p pat e z' q).
Proof. exact (fun_ext (fun f : _144530 -> _144607 => @lem8198781 _144529 _144530 _144607 _144645 P lt2 s p pat e z' f q)). Qed.
Lemma lem8198783 {_144530 _144607 : Type'} : (@all (_144530 -> _144607)) = (@all (_144530 -> _144607)).
Proof. exact (eq_refl (@all (_144530 -> _144607))). Qed.
Lemma lem8198785 {_144529 _144530 _144607 _144645 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (z' : type518 _144530 _144607 P) (q : type560 _144530 _144607 P) : (term1115 _144529 _144530 _144607 _144645 P p pat e lt2 s z' q) = (term1138 _144529 _144530 _144607 _144645 P lt2 s p pat e z' q).
Proof. exact (MK_COMB (@lem8198783 _144530 _144607) (@lem8198782 _144529 _144530 _144607 _144645 P lt2 s p pat e z' q)). Qed.
Lemma lem8198786 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z' : type518 _144530 _144607 P) (q : type560 _144530 _144607 P) (h1 : term814 _144529 _144530 _144607 _144645 P p pat e lt2 s z' q) : term1138 _144529 _144530 _144607 _144645 P lt2 s p pat e z' q.
Proof. exact (EQ_MP (@lem8198785 _144529 _144530 _144607 _144645 P lt2 s p pat e z' q) (@lem8197412 _144529 _144530 _144607 _144645 P p pat e lt2 s z' q h1)). Qed.
Lemma lem8198978 {_144529 _144530 _144607 P : Type'} (_108865 : _144530) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) : term902 _144529 _144530 _144607 P lt2 s a f g _108865.
Proof. exact (@lem8198218 _144529 _144530 _144607 P lt2 s a f g h1 _108865). Qed.
Lemma lem8198979 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (_108865 : _144530) : (term902 _144529 _144530 _144607 P lt2 s a f g _108865) = (term832 _144529 _144530 _144607 P lt2 s a f g _108865).
Proof. exact (eq_refl (term902 _144529 _144530 _144607 P lt2 s a f g _108865)). Qed.
Lemma lem8198990 {_144529 _144530 _144607 _144645 P : Type'} (_108869 : _144530 -> _144607) (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z' : type518 _144530 _144607 P) (q : type560 _144530 _144607 P) (h1 : term814 _144529 _144530 _144607 _144645 P p pat e lt2 s z' q) : term1139 _144529 _144530 _144607 _144645 P lt2 s p pat e z' q _108869.
Proof. exact (@lem8198396 _144529 _144530 _144607 _144645 P p pat e lt2 s z' q h1 _108869). Qed.
Lemma lem8198991 {_144529 _144530 _144607 _144645 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (z' : type518 _144530 _144607 P) (_108869 : _144530 -> _144607) (q : type560 _144530 _144607 P) : (term1139 _144529 _144530 _144607 _144645 P lt2 s p pat e z' q _108869) = (term1136 _144529 _144530 _144607 _144645 P lt2 s p pat e z' _108869 q).
Proof. exact (eq_refl (term1139 _144529 _144530 _144607 _144645 P lt2 s p pat e z' q _108869)). Qed.
Lemma lem8198992 {_144529 _144530 _144607 _144645 P : Type'} (_108869 : _144530 -> _144607) (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z' : type518 _144530 _144607 P) (q : type560 _144530 _144607 P) (h1 : term814 _144529 _144530 _144607 _144645 P p pat e lt2 s z' q) : term1136 _144529 _144530 _144607 _144645 P lt2 s p pat e z' _108869 q.
Proof. exact (EQ_MP (@lem8198991 _144529 _144530 _144607 _144645 P lt2 s p pat e z' _108869 q) (@lem8198990 _144529 _144530 _144607 _144645 P _108869 p pat e lt2 s z' q h1)). Qed.
Lemma lem8198993 {_144529 _144530 _144607 _144645 P : Type'} (_108869 : _144530 -> _144607) (_108870 : _144530 -> _144607) (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z' : type518 _144530 _144607 P) (q : type560 _144530 _144607 P) (h1 : term814 _144529 _144530 _144607 _144645 P p pat e lt2 s z' q) : term1140 _144529 _144530 _144607 _144645 P lt2 s p pat e z' _108869 q _108870.
Proof. exact (@lem8198992 _144529 _144530 _144607 _144645 P _108869 p pat e lt2 s z' q h1 _108870). Qed.
Lemma lem8198994 {_144529 _144530 _144607 _144645 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (z' : type518 _144530 _144607 P) (_108869 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108870 : _144530 -> _144607) : (term1140 _144529 _144530 _144607 _144645 P lt2 s p pat e z' _108869 q _108870) = (term1134 _144529 _144530 _144607 _144645 P lt2 s p pat e z' _108869 q _108870).
Proof. exact (eq_refl (term1140 _144529 _144530 _144607 _144645 P lt2 s p pat e z' _108869 q _108870)). Qed.
Lemma lem8198995 {_144529 _144530 _144607 _144645 P : Type'} (_108869 : _144530 -> _144607) (_108870 : _144530 -> _144607) (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z' : type518 _144530 _144607 P) (q : type560 _144530 _144607 P) (h1 : term814 _144529 _144530 _144607 _144645 P p pat e lt2 s z' q) : term1134 _144529 _144530 _144607 _144645 P lt2 s p pat e z' _108869 q _108870.
Proof. exact (EQ_MP (@lem8198994 _144529 _144530 _144607 _144645 P lt2 s p pat e z' _108869 q _108870) (@lem8198993 _144529 _144530 _144607 _144645 P _108869 _108870 p pat e lt2 s z' q h1)). Qed.
Lemma lem8198996 {_144529 _144530 _144607 _144645 P : Type'} (_108869 : _144530 -> _144607) (_108870 : _144530 -> _144607) (_108871 : P) (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z' : type518 _144530 _144607 P) (q : type560 _144530 _144607 P) (h1 : term814 _144529 _144530 _144607 _144645 P p pat e lt2 s z' q) : term1141 _144529 _144530 _144607 _144645 P lt2 s p pat e z' _108869 q _108870 _108871.
Proof. exact (@lem8198995 _144529 _144530 _144607 _144645 P _108869 _108870 p pat e lt2 s z' q h1 _108871). Qed.
Lemma lem8198997 {_144529 _144530 _144607 _144645 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (z' : type518 _144530 _144607 P) (_108869 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108870 : _144530 -> _144607) (_108871 : P) : (term1141 _144529 _144530 _144607 _144645 P lt2 s p pat e z' _108869 q _108870 _108871) = (term1132 _144529 _144530 _144607 _144645 P lt2 s p pat e z' _108869 q _108870 _108871).
Proof. exact (eq_refl (term1141 _144529 _144530 _144607 _144645 P lt2 s p pat e z' _108869 q _108870 _108871)). Qed.
Lemma lem8198998 {_144529 _144530 _144607 _144645 P : Type'} (_108869 : _144530 -> _144607) (_108870 : _144530 -> _144607) (_108871 : P) (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z' : type518 _144530 _144607 P) (q : type560 _144530 _144607 P) (h1 : term814 _144529 _144530 _144607 _144645 P p pat e lt2 s z' q) : term1132 _144529 _144530 _144607 _144645 P lt2 s p pat e z' _108869 q _108870 _108871.
Proof. exact (EQ_MP (@lem8198997 _144529 _144530 _144607 _144645 P lt2 s p pat e z' _108869 q _108870 _108871) (@lem8198996 _144529 _144530 _144607 _144645 P _108869 _108870 _108871 p pat e lt2 s z' q h1)). Qed.
Lemma lem8199026 {_144529 _144530 _144607 P : Type'} (_108881 : _144530) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) : term902 _144529 _144530 _144607 P lt2 s a f g _108881.
Proof. exact (@lem8198608 _144529 _144530 _144607 P lt2 s a f g h1 _108881). Qed.
Lemma lem8199027 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (_108881 : _144530) : (term902 _144529 _144530 _144607 P lt2 s a f g _108881) = (term832 _144529 _144530 _144607 P lt2 s a f g _108881).
Proof. exact (eq_refl (term902 _144529 _144530 _144607 P lt2 s a f g _108881)). Qed.
Lemma lem8199038 {_144529 _144530 _144607 _144645 P : Type'} (_108885 : _144530 -> _144607) (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z' : type518 _144530 _144607 P) (q : type560 _144530 _144607 P) (h1 : term814 _144529 _144530 _144607 _144645 P p pat e lt2 s z' q) : term1139 _144529 _144530 _144607 _144645 P lt2 s p pat e z' q _108885.
Proof. exact (@lem8198786 _144529 _144530 _144607 _144645 P p pat e lt2 s z' q h1 _108885). Qed.
Lemma lem8199039 {_144529 _144530 _144607 _144645 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (z' : type518 _144530 _144607 P) (_108885 : _144530 -> _144607) (q : type560 _144530 _144607 P) : (term1139 _144529 _144530 _144607 _144645 P lt2 s p pat e z' q _108885) = (term1136 _144529 _144530 _144607 _144645 P lt2 s p pat e z' _108885 q).
Proof. exact (eq_refl (term1139 _144529 _144530 _144607 _144645 P lt2 s p pat e z' q _108885)). Qed.
Lemma lem8199040 {_144529 _144530 _144607 _144645 P : Type'} (_108885 : _144530 -> _144607) (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z' : type518 _144530 _144607 P) (q : type560 _144530 _144607 P) (h1 : term814 _144529 _144530 _144607 _144645 P p pat e lt2 s z' q) : term1136 _144529 _144530 _144607 _144645 P lt2 s p pat e z' _108885 q.
Proof. exact (EQ_MP (@lem8199039 _144529 _144530 _144607 _144645 P lt2 s p pat e z' _108885 q) (@lem8199038 _144529 _144530 _144607 _144645 P _108885 p pat e lt2 s z' q h1)). Qed.
Lemma lem8199041 {_144529 _144530 _144607 _144645 P : Type'} (_108885 : _144530 -> _144607) (_108886 : _144530 -> _144607) (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z' : type518 _144530 _144607 P) (q : type560 _144530 _144607 P) (h1 : term814 _144529 _144530 _144607 _144645 P p pat e lt2 s z' q) : term1140 _144529 _144530 _144607 _144645 P lt2 s p pat e z' _108885 q _108886.
Proof. exact (@lem8199040 _144529 _144530 _144607 _144645 P _108885 p pat e lt2 s z' q h1 _108886). Qed.
Lemma lem8199042 {_144529 _144530 _144607 _144645 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (z' : type518 _144530 _144607 P) (_108885 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108886 : _144530 -> _144607) : (term1140 _144529 _144530 _144607 _144645 P lt2 s p pat e z' _108885 q _108886) = (term1134 _144529 _144530 _144607 _144645 P lt2 s p pat e z' _108885 q _108886).
Proof. exact (eq_refl (term1140 _144529 _144530 _144607 _144645 P lt2 s p pat e z' _108885 q _108886)). Qed.
Lemma lem8199043 {_144529 _144530 _144607 _144645 P : Type'} (_108885 : _144530 -> _144607) (_108886 : _144530 -> _144607) (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z' : type518 _144530 _144607 P) (q : type560 _144530 _144607 P) (h1 : term814 _144529 _144530 _144607 _144645 P p pat e lt2 s z' q) : term1134 _144529 _144530 _144607 _144645 P lt2 s p pat e z' _108885 q _108886.
Proof. exact (EQ_MP (@lem8199042 _144529 _144530 _144607 _144645 P lt2 s p pat e z' _108885 q _108886) (@lem8199041 _144529 _144530 _144607 _144645 P _108885 _108886 p pat e lt2 s z' q h1)). Qed.
Lemma lem8199044 {_144529 _144530 _144607 _144645 P : Type'} (_108885 : _144530 -> _144607) (_108886 : _144530 -> _144607) (_108887 : P) (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z' : type518 _144530 _144607 P) (q : type560 _144530 _144607 P) (h1 : term814 _144529 _144530 _144607 _144645 P p pat e lt2 s z' q) : term1141 _144529 _144530 _144607 _144645 P lt2 s p pat e z' _108885 q _108886 _108887.
Proof. exact (@lem8199043 _144529 _144530 _144607 _144645 P _108885 _108886 p pat e lt2 s z' q h1 _108887). Qed.
Lemma lem8199045 {_144529 _144530 _144607 _144645 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (z' : type518 _144530 _144607 P) (_108885 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108886 : _144530 -> _144607) (_108887 : P) : (term1141 _144529 _144530 _144607 _144645 P lt2 s p pat e z' _108885 q _108886 _108887) = (term1132 _144529 _144530 _144607 _144645 P lt2 s p pat e z' _108885 q _108886 _108887).
Proof. exact (eq_refl (term1141 _144529 _144530 _144607 _144645 P lt2 s p pat e z' _108885 q _108886 _108887)). Qed.
Lemma lem8199046 {_144529 _144530 _144607 _144645 P : Type'} (_108885 : _144530 -> _144607) (_108886 : _144530 -> _144607) (_108887 : P) (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z' : type518 _144530 _144607 P) (q : type560 _144530 _144607 P) (h1 : term814 _144529 _144530 _144607 _144645 P p pat e lt2 s z' q) : term1132 _144529 _144530 _144607 _144645 P lt2 s p pat e z' _108885 q _108886 _108887.
Proof. exact (EQ_MP (@lem8199045 _144529 _144530 _144607 _144645 P lt2 s p pat e z' _108885 q _108886 _108887) (@lem8199044 _144529 _144530 _144607 _144645 P _108885 _108886 _108887 p pat e lt2 s z' q h1)). Qed.
Lemma lem8199080 {_144529 _144530 _144607 _144645 P : Type'} (_108869 : _144530 -> _144607) (_108870 : _144530 -> _144607) (_108871 : P) (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z' : type518 _144530 _144607 P) (q : type560 _144530 _144607 P) (h1 : term814 _144529 _144530 _144607 _144645 P p pat e lt2 s z' q) : term1125 _144529 _144530 _144607 _144645 P lt2 s p pat e z' _108869 q _108870 _108871.
Proof. exact (proj2 (@lem8198998 _144529 _144530 _144607 _144645 P _108869 _108870 _108871 p pat e lt2 s z' q h1)). Qed.
Lemma lem8199082 {_144529 _144530 _144607 _144645 P : Type'} (_108869 : _144530 -> _144607) (_108870 : _144530 -> _144607) (_108871 : P) (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z' : type518 _144530 _144607 P) (q : type560 _144530 _144607 P) (h1 : term814 _144529 _144530 _144607 _144645 P p pat e lt2 s z' q) : term1142 _144530 _144607 _144645 P p pat e z' _108869 q _108870 _108871.
Proof. exact (proj2 (@lem8199080 _144529 _144530 _144607 _144645 P _108869 _108870 _108871 p pat e lt2 s z' q h1)). Qed.
Lemma lem8199083 {_144529 _144530 _144607 _144645 P : Type'} (_108869 : _144530 -> _144607) (_108870 : _144530 -> _144607) (_108871 : P) (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z' : type518 _144530 _144607 P) (q : type560 _144530 _144607 P) (h1 : term814 _144529 _144530 _144607 _144645 P p pat e lt2 s z' q) : term1143 _144529 _144530 _144607 _144645 P p pat e lt2 z' s _108869 q _108870 _108871.
Proof. exact (proj1 (@lem8199080 _144529 _144530 _144607 _144645 P _108869 _108870 _108871 p pat e lt2 s z' q h1)). Qed.
Lemma lem8199095 {_144529 _144530 _144607 _144645 P : Type'} (_108885 : _144530 -> _144607) (_108886 : _144530 -> _144607) (_108887 : P) (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z' : type518 _144530 _144607 P) (q : type560 _144530 _144607 P) (h1 : term814 _144529 _144530 _144607 _144645 P p pat e lt2 s z' q) : term1129 _144529 _144530 _144607 _144645 P lt2 s p pat e z' _108885 q _108886 _108887.
Proof. exact (proj1 (@lem8199046 _144529 _144530 _144607 _144645 P _108885 _108886 _108887 p pat e lt2 s z' q h1)). Qed.
Lemma lem8199098 {_144529 _144530 _144607 _144645 P : Type'} (_108885 : _144530 -> _144607) (_108886 : _144530 -> _144607) (_108887 : P) (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z' : type518 _144530 _144607 P) (q : type560 _144530 _144607 P) (h1 : term814 _144529 _144530 _144607 _144645 P p pat e lt2 s z' q) : term1144 _144530 _144607 _144645 P p pat e z' _108885 q _108886 _108887.
Proof. exact (proj2 (@lem8199095 _144529 _144530 _144607 _144645 P _108885 _108886 _108887 p pat e lt2 s z' q h1)). Qed.
Lemma lem8199099 {_144529 _144530 _144607 _144645 P : Type'} (_108885 : _144530 -> _144607) (_108886 : _144530 -> _144607) (_108887 : P) (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z' : type518 _144530 _144607 P) (q : type560 _144530 _144607 P) (h1 : term814 _144529 _144530 _144607 _144645 P p pat e lt2 s z' q) : term1145 _144529 _144530 _144607 _144645 P p pat e lt2 z' s _108885 q _108886 _108887.
Proof. exact (proj1 (@lem8199095 _144529 _144530 _144607 _144645 P _108885 _108886 _108887 p pat e lt2 s z' q h1)). Qed.
Lemma lem8199111 {_144529 _144530 _144607 P : Type'} (_108865 : _144530) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) : term832 _144529 _144530 _144607 P lt2 s a f g _108865.
Proof. exact (EQ_MP (@lem8198979 _144529 _144530 _144607 P lt2 s a f g _108865) (@lem8198978 _144529 _144530 _144607 P _108865 lt2 s a f g h1)). Qed.
Lemma lem8199119 {_144530 _144607 P : Type'} (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term1082 _144530 _144607 P f q g a) : term867 _144530 _144607 P q g a.
Proof. exact (proj2 (@lem8198192 _144530 _144607 P f q g a h1)). Qed.
Lemma lem8199283 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (z' : type518 _144530 _144607 P) (s : P -> _144529) (_108869 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108870 : _144530 -> _144607) (_108871 : P) : (term1143 _144529 _144530 _144607 _144645 P p pat e lt2 z' s _108869 q _108870 _108871) = (term1146 _144529 _144530 _144607 _144645 P p pat e lt2 z' s _108869 q _108870 _108871).
Proof. exact (@lem8183609 (term1097 _144530 _144607 _144645 P p pat e _108869 _108871) (term1119 _144529 _144530 _144607 _144645 P p pat e lt2 z' _108869 _108870 s _108871) (term1087 _144530 _144607 P _108869 q _108870 _108871)). Qed.
Lemma lem8199284 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (z' : type518 _144530 _144607 P) (s : P -> _144529) (_108869 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108870 : _144530 -> _144607) (_108871 : P) : (term1147 _144529 _144530 _144607 _144645 P p pat e lt2 z' s _108869 q _108870 _108871) = (term1148 _144529 _144530 _144607 _144645 P p pat e lt2 z' s _108869 q _108870 _108871).
Proof. exact (@lem8183609 (term1097 _144530 _144607 _144645 P p pat e _108870 _108871) (term862 _144529 _144530 _144607 P lt2 z' _108869 _108870 s _108871) (term1087 _144530 _144607 P _108869 q _108870 _108871)). Qed.
Lemma lem8199295 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (z' : type518 _144530 _144607 P) (s : P -> _144529) (_108869 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108870 : _144530 -> _144607) (_108871 : P) : (term1148 _144529 _144530 _144607 _144645 P p pat e lt2 z' s _108869 q _108870 _108871) = (term1149 _144529 _144530 _144607 _144645 P p pat e lt2 z' s _108869 q _108870 _108871).
Proof. exact (@lem8183609 (term867 _144530 _144607 P p _108870 _108871) (term1096 _144530 _144607 _144645 P pat e _108870 _108871) (term1150 _144529 _144530 _144607 P lt2 z' s _108869 q _108870 _108871)). Qed.
Lemma lem8199296 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (z' : type518 _144530 _144607 P) (s : P -> _144529) (_108869 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108870 : _144530 -> _144607) (_108871 : P) : (term1147 _144529 _144530 _144607 _144645 P p pat e lt2 z' s _108869 q _108870 _108871) = (term1149 _144529 _144530 _144607 _144645 P p pat e lt2 z' s _108869 q _108870 _108871).
Proof. exact (TRANS (@lem8199284 _144529 _144530 _144607 _144645 P p pat e lt2 z' s _108869 q _108870 _108871) (@lem8199295 _144529 _144530 _144607 _144645 P p pat e lt2 z' s _108869 q _108870 _108871)). Qed.
Lemma lem8199297 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (_108869 : _144530 -> _144607) (_108871 : P) : (term1098 _144530 _144607 _144645 P p pat e _108869 _108871) = (term1098 _144530 _144607 _144645 P p pat e _108869 _108871).
Proof. exact (eq_refl (term1098 _144530 _144607 _144645 P p pat e _108869 _108871)). Qed.
Lemma lem8199298 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (z' : type518 _144530 _144607 P) (s : P -> _144529) (_108869 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108870 : _144530 -> _144607) (_108871 : P) : (term1146 _144529 _144530 _144607 _144645 P p pat e lt2 z' s _108869 q _108870 _108871) = (term1151 _144529 _144530 _144607 _144645 P p pat e lt2 z' s _108869 q _108870 _108871).
Proof. exact (MK_COMB (@lem8199297 _144530 _144607 _144645 P p pat e _108869 _108871) (@lem8199296 _144529 _144530 _144607 _144645 P p pat e lt2 z' s _108869 q _108870 _108871)). Qed.
Lemma lem8199305 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (z' : type518 _144530 _144607 P) (s : P -> _144529) (_108869 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108870 : _144530 -> _144607) (_108871 : P) : (term1151 _144529 _144530 _144607 _144645 P p pat e lt2 z' s _108869 q _108870 _108871) = (term1152 _144529 _144530 _144607 _144645 P p pat e lt2 z' s _108869 q _108870 _108871).
Proof. exact (@lem8183609 (term867 _144530 _144607 P p _108869 _108871) (term1096 _144530 _144607 _144645 P pat e _108869 _108871) (term1149 _144529 _144530 _144607 _144645 P p pat e lt2 z' s _108869 q _108870 _108871)). Qed.
Lemma lem8199306 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (z' : type518 _144530 _144607 P) (s : P -> _144529) (_108869 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108870 : _144530 -> _144607) (_108871 : P) : (term1146 _144529 _144530 _144607 _144645 P p pat e lt2 z' s _108869 q _108870 _108871) = (term1152 _144529 _144530 _144607 _144645 P p pat e lt2 z' s _108869 q _108870 _108871).
Proof. exact (TRANS (@lem8199298 _144529 _144530 _144607 _144645 P p pat e lt2 z' s _108869 q _108870 _108871) (@lem8199305 _144529 _144530 _144607 _144645 P p pat e lt2 z' s _108869 q _108870 _108871)). Qed.
Lemma lem8199308 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (z' : type518 _144530 _144607 P) (s : P -> _144529) (_108869 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108870 : _144530 -> _144607) (_108871 : P) : (term1143 _144529 _144530 _144607 _144645 P p pat e lt2 z' s _108869 q _108870 _108871) = (term1152 _144529 _144530 _144607 _144645 P p pat e lt2 z' s _108869 q _108870 _108871).
Proof. exact (TRANS (@lem8199283 _144529 _144530 _144607 _144645 P p pat e lt2 z' s _108869 q _108870 _108871) (@lem8199306 _144529 _144530 _144607 _144645 P p pat e lt2 z' s _108869 q _108870 _108871)). Qed.
Lemma lem8199309 {_144529 _144530 _144607 _144645 P : Type'} (_108869 : _144530 -> _144607) (_108870 : _144530 -> _144607) (_108871 : P) (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z' : type518 _144530 _144607 P) (q : type560 _144530 _144607 P) (h1 : term814 _144529 _144530 _144607 _144645 P p pat e lt2 s z' q) : term1152 _144529 _144530 _144607 _144645 P p pat e lt2 z' s _108869 q _108870 _108871.
Proof. exact (EQ_MP (@lem8199308 _144529 _144530 _144607 _144645 P p pat e lt2 z' s _108869 q _108870 _108871) (@lem8199083 _144529 _144530 _144607 _144645 P _108869 _108870 _108871 p pat e lt2 s z' q h1)). Qed.
Lemma lem8199317 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (z' : type518 _144530 _144607 P) (_108869 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108870 : _144530 -> _144607) (_108871 : P) : (term1142 _144530 _144607 _144645 P p pat e z' _108869 q _108870 _108871) = (term1153 _144530 _144607 _144645 P p pat e z' _108869 q _108870 _108871).
Proof. exact (@lem8183609 (term1097 _144530 _144607 _144645 P p pat e _108869 _108871) (term1120 _144530 _144607 _144645 P p pat e z' _108869 _108870 _108871) (term1087 _144530 _144607 P _108869 q _108870 _108871)). Qed.
Lemma lem8199318 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (z' : type518 _144530 _144607 P) (_108869 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108870 : _144530 -> _144607) (_108871 : P) : (term1154 _144530 _144607 _144645 P p pat e z' _108869 q _108870 _108871) = (term1155 _144530 _144607 _144645 P p pat e z' _108869 q _108870 _108871).
Proof. exact (@lem8183609 (term1097 _144530 _144607 _144645 P p pat e _108870 _108871) (term855 _144530 _144607 P z' _108869 _108870 _108871) (term1087 _144530 _144607 P _108869 q _108870 _108871)). Qed.
Lemma lem8199329 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (z' : type518 _144530 _144607 P) (_108869 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108870 : _144530 -> _144607) (_108871 : P) : (term1155 _144530 _144607 _144645 P p pat e z' _108869 q _108870 _108871) = (term1156 _144530 _144607 _144645 P p pat e z' _108869 q _108870 _108871).
Proof. exact (@lem8183609 (term867 _144530 _144607 P p _108870 _108871) (term1096 _144530 _144607 _144645 P pat e _108870 _108871) (term1157 _144530 _144607 P z' _108869 q _108870 _108871)). Qed.
Lemma lem8199330 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (z' : type518 _144530 _144607 P) (_108869 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108870 : _144530 -> _144607) (_108871 : P) : (term1154 _144530 _144607 _144645 P p pat e z' _108869 q _108870 _108871) = (term1156 _144530 _144607 _144645 P p pat e z' _108869 q _108870 _108871).
Proof. exact (TRANS (@lem8199318 _144530 _144607 _144645 P p pat e z' _108869 q _108870 _108871) (@lem8199329 _144530 _144607 _144645 P p pat e z' _108869 q _108870 _108871)). Qed.
Lemma lem8199331 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (_108869 : _144530 -> _144607) (_108871 : P) : (term1098 _144530 _144607 _144645 P p pat e _108869 _108871) = (term1098 _144530 _144607 _144645 P p pat e _108869 _108871).
Proof. exact (eq_refl (term1098 _144530 _144607 _144645 P p pat e _108869 _108871)). Qed.
Lemma lem8199332 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (z' : type518 _144530 _144607 P) (_108869 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108870 : _144530 -> _144607) (_108871 : P) : (term1153 _144530 _144607 _144645 P p pat e z' _108869 q _108870 _108871) = (term1158 _144530 _144607 _144645 P p pat e z' _108869 q _108870 _108871).
Proof. exact (MK_COMB (@lem8199331 _144530 _144607 _144645 P p pat e _108869 _108871) (@lem8199330 _144530 _144607 _144645 P p pat e z' _108869 q _108870 _108871)). Qed.
Lemma lem8199339 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (z' : type518 _144530 _144607 P) (_108869 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108870 : _144530 -> _144607) (_108871 : P) : (term1158 _144530 _144607 _144645 P p pat e z' _108869 q _108870 _108871) = (term1159 _144530 _144607 _144645 P p pat e z' _108869 q _108870 _108871).
Proof. exact (@lem8183609 (term867 _144530 _144607 P p _108869 _108871) (term1096 _144530 _144607 _144645 P pat e _108869 _108871) (term1156 _144530 _144607 _144645 P p pat e z' _108869 q _108870 _108871)). Qed.
Lemma lem8199340 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (z' : type518 _144530 _144607 P) (_108869 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108870 : _144530 -> _144607) (_108871 : P) : (term1153 _144530 _144607 _144645 P p pat e z' _108869 q _108870 _108871) = (term1159 _144530 _144607 _144645 P p pat e z' _108869 q _108870 _108871).
Proof. exact (TRANS (@lem8199332 _144530 _144607 _144645 P p pat e z' _108869 q _108870 _108871) (@lem8199339 _144530 _144607 _144645 P p pat e z' _108869 q _108870 _108871)). Qed.
Lemma lem8199342 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (z' : type518 _144530 _144607 P) (_108869 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108870 : _144530 -> _144607) (_108871 : P) : (term1142 _144530 _144607 _144645 P p pat e z' _108869 q _108870 _108871) = (term1159 _144530 _144607 _144645 P p pat e z' _108869 q _108870 _108871).
Proof. exact (TRANS (@lem8199317 _144530 _144607 _144645 P p pat e z' _108869 q _108870 _108871) (@lem8199340 _144530 _144607 _144645 P p pat e z' _108869 q _108870 _108871)). Qed.
Lemma lem8199343 {_144529 _144530 _144607 _144645 P : Type'} (_108869 : _144530 -> _144607) (_108870 : _144530 -> _144607) (_108871 : P) (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z' : type518 _144530 _144607 P) (q : type560 _144530 _144607 P) (h1 : term814 _144529 _144530 _144607 _144645 P p pat e lt2 s z' q) : term1159 _144530 _144607 _144645 P p pat e z' _108869 q _108870 _108871.
Proof. exact (EQ_MP (@lem8199342 _144530 _144607 _144645 P p pat e z' _108869 q _108870 _108871) (@lem8199082 _144529 _144530 _144607 _144645 P _108869 _108870 _108871 p pat e lt2 s z' q h1)). Qed.
Lemma lem8199505 {_144529 _144530 _144607 P : Type'} (_108881 : _144530) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) : term832 _144529 _144530 _144607 P lt2 s a f g _108881.
Proof. exact (EQ_MP (@lem8199027 _144529 _144530 _144607 P lt2 s a f g _108881) (@lem8199026 _144529 _144530 _144607 P _108881 lt2 s a f g h1)). Qed.
Lemma lem8199511 {_144530 _144607 P : Type'} (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term1080 _144530 _144607 P f q g a) : term867 _144530 _144607 P q f a.
Proof. exact (proj1 (@lem8198193 _144530 _144607 P f q g a h1)). Qed.
Lemma lem8199745 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (z' : type518 _144530 _144607 P) (s : P -> _144529) (_108885 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108886 : _144530 -> _144607) (_108887 : P) : (term1145 _144529 _144530 _144607 _144645 P p pat e lt2 z' s _108885 q _108886 _108887) = (term1160 _144529 _144530 _144607 _144645 P p pat e lt2 z' s _108885 q _108886 _108887).
Proof. exact (@lem8183609 (term1097 _144530 _144607 _144645 P p pat e _108885 _108887) (term1119 _144529 _144530 _144607 _144645 P p pat e lt2 z' _108885 _108886 s _108887) (term1091 _144530 _144607 P _108885 q _108886 _108887)). Qed.
Lemma lem8199746 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (z' : type518 _144530 _144607 P) (s : P -> _144529) (_108885 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108886 : _144530 -> _144607) (_108887 : P) : (term1161 _144529 _144530 _144607 _144645 P p pat e lt2 z' s _108885 q _108886 _108887) = (term1162 _144529 _144530 _144607 _144645 P p pat e lt2 z' s _108885 q _108886 _108887).
Proof. exact (@lem8183609 (term1097 _144530 _144607 _144645 P p pat e _108886 _108887) (term862 _144529 _144530 _144607 P lt2 z' _108885 _108886 s _108887) (term1091 _144530 _144607 P _108885 q _108886 _108887)). Qed.
Lemma lem8199757 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (z' : type518 _144530 _144607 P) (s : P -> _144529) (_108885 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108886 : _144530 -> _144607) (_108887 : P) : (term1162 _144529 _144530 _144607 _144645 P p pat e lt2 z' s _108885 q _108886 _108887) = (term1163 _144529 _144530 _144607 _144645 P p pat e lt2 z' s _108885 q _108886 _108887).
Proof. exact (@lem8183609 (term867 _144530 _144607 P p _108886 _108887) (term1096 _144530 _144607 _144645 P pat e _108886 _108887) (term1164 _144529 _144530 _144607 P lt2 z' s _108885 q _108886 _108887)). Qed.
Lemma lem8199758 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (z' : type518 _144530 _144607 P) (s : P -> _144529) (_108885 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108886 : _144530 -> _144607) (_108887 : P) : (term1161 _144529 _144530 _144607 _144645 P p pat e lt2 z' s _108885 q _108886 _108887) = (term1163 _144529 _144530 _144607 _144645 P p pat e lt2 z' s _108885 q _108886 _108887).
Proof. exact (TRANS (@lem8199746 _144529 _144530 _144607 _144645 P p pat e lt2 z' s _108885 q _108886 _108887) (@lem8199757 _144529 _144530 _144607 _144645 P p pat e lt2 z' s _108885 q _108886 _108887)). Qed.
Lemma lem8199759 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (_108885 : _144530 -> _144607) (_108887 : P) : (term1098 _144530 _144607 _144645 P p pat e _108885 _108887) = (term1098 _144530 _144607 _144645 P p pat e _108885 _108887).
Proof. exact (eq_refl (term1098 _144530 _144607 _144645 P p pat e _108885 _108887)). Qed.
Lemma lem8199760 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (z' : type518 _144530 _144607 P) (s : P -> _144529) (_108885 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108886 : _144530 -> _144607) (_108887 : P) : (term1160 _144529 _144530 _144607 _144645 P p pat e lt2 z' s _108885 q _108886 _108887) = (term1165 _144529 _144530 _144607 _144645 P p pat e lt2 z' s _108885 q _108886 _108887).
Proof. exact (MK_COMB (@lem8199759 _144530 _144607 _144645 P p pat e _108885 _108887) (@lem8199758 _144529 _144530 _144607 _144645 P p pat e lt2 z' s _108885 q _108886 _108887)). Qed.
Lemma lem8199767 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (z' : type518 _144530 _144607 P) (s : P -> _144529) (_108885 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108886 : _144530 -> _144607) (_108887 : P) : (term1165 _144529 _144530 _144607 _144645 P p pat e lt2 z' s _108885 q _108886 _108887) = (term1166 _144529 _144530 _144607 _144645 P p pat e lt2 z' s _108885 q _108886 _108887).
Proof. exact (@lem8183609 (term867 _144530 _144607 P p _108885 _108887) (term1096 _144530 _144607 _144645 P pat e _108885 _108887) (term1163 _144529 _144530 _144607 _144645 P p pat e lt2 z' s _108885 q _108886 _108887)). Qed.
Lemma lem8199768 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (z' : type518 _144530 _144607 P) (s : P -> _144529) (_108885 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108886 : _144530 -> _144607) (_108887 : P) : (term1160 _144529 _144530 _144607 _144645 P p pat e lt2 z' s _108885 q _108886 _108887) = (term1166 _144529 _144530 _144607 _144645 P p pat e lt2 z' s _108885 q _108886 _108887).
Proof. exact (TRANS (@lem8199760 _144529 _144530 _144607 _144645 P p pat e lt2 z' s _108885 q _108886 _108887) (@lem8199767 _144529 _144530 _144607 _144645 P p pat e lt2 z' s _108885 q _108886 _108887)). Qed.
Lemma lem8199770 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (z' : type518 _144530 _144607 P) (s : P -> _144529) (_108885 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108886 : _144530 -> _144607) (_108887 : P) : (term1145 _144529 _144530 _144607 _144645 P p pat e lt2 z' s _108885 q _108886 _108887) = (term1166 _144529 _144530 _144607 _144645 P p pat e lt2 z' s _108885 q _108886 _108887).
Proof. exact (TRANS (@lem8199745 _144529 _144530 _144607 _144645 P p pat e lt2 z' s _108885 q _108886 _108887) (@lem8199768 _144529 _144530 _144607 _144645 P p pat e lt2 z' s _108885 q _108886 _108887)). Qed.
Lemma lem8199771 {_144529 _144530 _144607 _144645 P : Type'} (_108885 : _144530 -> _144607) (_108886 : _144530 -> _144607) (_108887 : P) (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z' : type518 _144530 _144607 P) (q : type560 _144530 _144607 P) (h1 : term814 _144529 _144530 _144607 _144645 P p pat e lt2 s z' q) : term1166 _144529 _144530 _144607 _144645 P p pat e lt2 z' s _108885 q _108886 _108887.
Proof. exact (EQ_MP (@lem8199770 _144529 _144530 _144607 _144645 P p pat e lt2 z' s _108885 q _108886 _108887) (@lem8199099 _144529 _144530 _144607 _144645 P _108885 _108886 _108887 p pat e lt2 s z' q h1)). Qed.
Lemma lem8199779 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (z' : type518 _144530 _144607 P) (_108885 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108886 : _144530 -> _144607) (_108887 : P) : (term1144 _144530 _144607 _144645 P p pat e z' _108885 q _108886 _108887) = (term1167 _144530 _144607 _144645 P p pat e z' _108885 q _108886 _108887).
Proof. exact (@lem8183609 (term1097 _144530 _144607 _144645 P p pat e _108885 _108887) (term1120 _144530 _144607 _144645 P p pat e z' _108885 _108886 _108887) (term1091 _144530 _144607 P _108885 q _108886 _108887)). Qed.
Lemma lem8199780 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (z' : type518 _144530 _144607 P) (_108885 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108886 : _144530 -> _144607) (_108887 : P) : (term1168 _144530 _144607 _144645 P p pat e z' _108885 q _108886 _108887) = (term1169 _144530 _144607 _144645 P p pat e z' _108885 q _108886 _108887).
Proof. exact (@lem8183609 (term1097 _144530 _144607 _144645 P p pat e _108886 _108887) (term855 _144530 _144607 P z' _108885 _108886 _108887) (term1091 _144530 _144607 P _108885 q _108886 _108887)). Qed.
Lemma lem8199791 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (z' : type518 _144530 _144607 P) (_108885 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108886 : _144530 -> _144607) (_108887 : P) : (term1169 _144530 _144607 _144645 P p pat e z' _108885 q _108886 _108887) = (term1170 _144530 _144607 _144645 P p pat e z' _108885 q _108886 _108887).
Proof. exact (@lem8183609 (term867 _144530 _144607 P p _108886 _108887) (term1096 _144530 _144607 _144645 P pat e _108886 _108887) (term1171 _144530 _144607 P z' _108885 q _108886 _108887)). Qed.
Lemma lem8199792 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (z' : type518 _144530 _144607 P) (_108885 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108886 : _144530 -> _144607) (_108887 : P) : (term1168 _144530 _144607 _144645 P p pat e z' _108885 q _108886 _108887) = (term1170 _144530 _144607 _144645 P p pat e z' _108885 q _108886 _108887).
Proof. exact (TRANS (@lem8199780 _144530 _144607 _144645 P p pat e z' _108885 q _108886 _108887) (@lem8199791 _144530 _144607 _144645 P p pat e z' _108885 q _108886 _108887)). Qed.
Lemma lem8199793 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (_108885 : _144530 -> _144607) (_108887 : P) : (term1098 _144530 _144607 _144645 P p pat e _108885 _108887) = (term1098 _144530 _144607 _144645 P p pat e _108885 _108887).
Proof. exact (eq_refl (term1098 _144530 _144607 _144645 P p pat e _108885 _108887)). Qed.
Lemma lem8199794 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (z' : type518 _144530 _144607 P) (_108885 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108886 : _144530 -> _144607) (_108887 : P) : (term1167 _144530 _144607 _144645 P p pat e z' _108885 q _108886 _108887) = (term1172 _144530 _144607 _144645 P p pat e z' _108885 q _108886 _108887).
Proof. exact (MK_COMB (@lem8199793 _144530 _144607 _144645 P p pat e _108885 _108887) (@lem8199792 _144530 _144607 _144645 P p pat e z' _108885 q _108886 _108887)). Qed.
Lemma lem8199801 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (z' : type518 _144530 _144607 P) (_108885 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108886 : _144530 -> _144607) (_108887 : P) : (term1172 _144530 _144607 _144645 P p pat e z' _108885 q _108886 _108887) = (term1173 _144530 _144607 _144645 P p pat e z' _108885 q _108886 _108887).
Proof. exact (@lem8183609 (term867 _144530 _144607 P p _108885 _108887) (term1096 _144530 _144607 _144645 P pat e _108885 _108887) (term1170 _144530 _144607 _144645 P p pat e z' _108885 q _108886 _108887)). Qed.
Lemma lem8199802 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (z' : type518 _144530 _144607 P) (_108885 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108886 : _144530 -> _144607) (_108887 : P) : (term1167 _144530 _144607 _144645 P p pat e z' _108885 q _108886 _108887) = (term1173 _144530 _144607 _144645 P p pat e z' _108885 q _108886 _108887).
Proof. exact (TRANS (@lem8199794 _144530 _144607 _144645 P p pat e z' _108885 q _108886 _108887) (@lem8199801 _144530 _144607 _144645 P p pat e z' _108885 q _108886 _108887)). Qed.
Lemma lem8199804 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (z' : type518 _144530 _144607 P) (_108885 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108886 : _144530 -> _144607) (_108887 : P) : (term1144 _144530 _144607 _144645 P p pat e z' _108885 q _108886 _108887) = (term1173 _144530 _144607 _144645 P p pat e z' _108885 q _108886 _108887).
Proof. exact (TRANS (@lem8199779 _144530 _144607 _144645 P p pat e z' _108885 q _108886 _108887) (@lem8199802 _144530 _144607 _144645 P p pat e z' _108885 q _108886 _108887)). Qed.
Lemma lem8199805 {_144529 _144530 _144607 _144645 P : Type'} (_108885 : _144530 -> _144607) (_108886 : _144530 -> _144607) (_108887 : P) (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z' : type518 _144530 _144607 P) (q : type560 _144530 _144607 P) (h1 : term814 _144529 _144530 _144607 _144645 P p pat e lt2 s z' q) : term1173 _144530 _144607 _144645 P p pat e z' _108885 q _108886 _108887.
Proof. exact (EQ_MP (@lem8199804 _144530 _144607 _144645 P p pat e z' _108885 q _108886 _108887) (@lem8199098 _144529 _144530 _144607 _144645 P _108885 _108886 _108887 p pat e lt2 s z' q h1)). Qed.
Lemma lem8200132 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) (h1 : p f a) : term822 _144530 _144607 P p f a.
Proof. exact (EQ_MP (@lem8196493 _144530 _144607 P p f a) (@lem8196370 _144530 _144607 P p f a h1)). Qed.
Lemma lem8200133 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) (h1 : p f a) : term916 _144530 _144607 P p f a.
Proof. exact (fun h0 : term867 _144530 _144607 P p f a => @lem8200132 _144530 _144607 P p f a h1). Qed.
Lemma lem8200135 (p : Prop) : (term57 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8200136 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) : (term916 _144530 _144607 P p f a) = (term822 _144530 _144607 P p f a).
Proof. exact (@lem8200135 (term822 _144530 _144607 P p f a)). Qed.
Lemma lem8200137 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) (h1 : p f a) : term822 _144530 _144607 P p f a.
Proof. exact (EQ_MP (@lem8200136 _144530 _144607 P p f a) (@lem8200133 _144530 _144607 P p f a h1)). Qed.
Lemma lem8200139 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (a : P) (h1 : (pat f a) = (e f a)) : (term835 _144530 _144607 _144645 P pat f a) = (term835 _144530 _144607 _144645 P e f a).
Proof. exact (EQ_MP (@lem8196601 _144530 _144607 _144645 P pat e f a) (@lem8196445 _144530 _144607 _144645 P pat e f a h1)). Qed.
Lemma lem8200140 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (a : P) (h1 : (pat f a) = (e f a)) : term1174 _144530 _144607 _144645 P pat e f a.
Proof. exact (fun h0 : term1096 _144530 _144607 _144645 P pat e f a => @lem8200139 _144530 _144607 _144645 P pat e f a h1). Qed.
Lemma lem8200142 (p : Prop) : (term57 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8200143 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (a : P) : (term1174 _144530 _144607 _144645 P pat e f a) = ((term835 _144530 _144607 _144645 P pat f a) = (term835 _144530 _144607 _144645 P e f a)).
Proof. exact (@lem8200142 ((term835 _144530 _144607 _144645 P pat f a) = (term835 _144530 _144607 _144645 P e f a))). Qed.
Lemma lem8200144 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (a : P) (h1 : (pat f a) = (e f a)) : (term835 _144530 _144607 _144645 P pat f a) = (term835 _144530 _144607 _144645 P e f a).
Proof. exact (EQ_MP (@lem8200143 _144530 _144607 _144645 P pat e f a) (@lem8200140 _144530 _144607 _144645 P pat e f a h1)). Qed.
Lemma lem8200146 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : p g a) : term822 _144530 _144607 P p g a.
Proof. exact (EQ_MP (@lem8196511 _144530 _144607 P p g a) (@lem8196376 _144530 _144607 P p g a h1)). Qed.
Lemma lem8200147 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : p g a) : term916 _144530 _144607 P p g a.
Proof. exact (fun h0 : term867 _144530 _144607 P p g a => @lem8200146 _144530 _144607 P p g a h1). Qed.
Lemma lem8200149 (p : Prop) : (term57 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8200150 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term916 _144530 _144607 P p g a) = (term822 _144530 _144607 P p g a).
Proof. exact (@lem8200149 (term822 _144530 _144607 P p g a)). Qed.
Lemma lem8200151 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : p g a) : term822 _144530 _144607 P p g a.
Proof. exact (EQ_MP (@lem8200150 _144530 _144607 P p g a) (@lem8200147 _144530 _144607 P p g a h1)). Qed.
Lemma lem8200153 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) (h1 : (pat g a) = (e g a)) : (term835 _144530 _144607 _144645 P pat g a) = (term835 _144530 _144607 _144645 P e g a).
Proof. exact (EQ_MP (@lem8196639 _144530 _144607 _144645 P pat e g a) (@lem8196451 _144530 _144607 _144645 P pat e g a h1)). Qed.
Lemma lem8200154 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) (h1 : (pat g a) = (e g a)) : term1174 _144530 _144607 _144645 P pat e g a.
Proof. exact (fun h0 : term1096 _144530 _144607 _144645 P pat e g a => @lem8200153 _144530 _144607 _144645 P pat e g a h1). Qed.
Lemma lem8200156 (p : Prop) : (term57 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8200157 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term1174 _144530 _144607 _144645 P pat e g a) = ((term835 _144530 _144607 _144645 P pat g a) = (term835 _144530 _144607 _144645 P e g a)).
Proof. exact (@lem8200156 ((term835 _144530 _144607 _144645 P pat g a) = (term835 _144530 _144607 _144645 P e g a))). Qed.
Lemma lem8200158 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) (h1 : (pat g a) = (e g a)) : (term835 _144530 _144607 _144645 P pat g a) = (term835 _144530 _144607 _144645 P e g a).
Proof. exact (EQ_MP (@lem8200157 _144530 _144607 _144645 P pat e g a) (@lem8200154 _144530 _144607 _144645 P pat e g a h1)). Qed.
Lemma lem8200160 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) (h1 : p f a) : term822 _144530 _144607 P p f a.
Proof. exact (EQ_MP (@lem8196493 _144530 _144607 P p f a) (@lem8196370 _144530 _144607 P p f a h1)). Qed.
Lemma lem8200161 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) (h1 : p f a) : term916 _144530 _144607 P p f a.
Proof. exact (fun h0 : term867 _144530 _144607 P p f a => @lem8200160 _144530 _144607 P p f a h1). Qed.
Lemma lem8200163 (p : Prop) : (term57 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8200164 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) : (term916 _144530 _144607 P p f a) = (term822 _144530 _144607 P p f a).
Proof. exact (@lem8200163 (term822 _144530 _144607 P p f a)). Qed.
Lemma lem8200165 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) (h1 : p f a) : term822 _144530 _144607 P p f a.
Proof. exact (EQ_MP (@lem8200164 _144530 _144607 P p f a) (@lem8200161 _144530 _144607 P p f a h1)). Qed.
Lemma lem8200167 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (a : P) (h1 : (pat f a) = (e f a)) : (term835 _144530 _144607 _144645 P pat f a) = (term835 _144530 _144607 _144645 P e f a).
Proof. exact (EQ_MP (@lem8196601 _144530 _144607 _144645 P pat e f a) (@lem8196445 _144530 _144607 _144645 P pat e f a h1)). Qed.
Lemma lem8200168 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (a : P) (h1 : (pat f a) = (e f a)) : term1174 _144530 _144607 _144645 P pat e f a.
Proof. exact (fun h0 : term1096 _144530 _144607 _144645 P pat e f a => @lem8200167 _144530 _144607 _144645 P pat e f a h1). Qed.
Lemma lem8200170 (p : Prop) : (term57 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8200171 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (a : P) : (term1174 _144530 _144607 _144645 P pat e f a) = ((term835 _144530 _144607 _144645 P pat f a) = (term835 _144530 _144607 _144645 P e f a)).
Proof. exact (@lem8200170 ((term835 _144530 _144607 _144645 P pat f a) = (term835 _144530 _144607 _144645 P e f a))). Qed.
Lemma lem8200172 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (a : P) (h1 : (pat f a) = (e f a)) : (term835 _144530 _144607 _144645 P pat f a) = (term835 _144530 _144607 _144645 P e f a).
Proof. exact (EQ_MP (@lem8200171 _144530 _144607 _144645 P pat e f a) (@lem8200168 _144530 _144607 _144645 P pat e f a h1)). Qed.
Lemma lem8200174 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : p g a) : term822 _144530 _144607 P p g a.
Proof. exact (EQ_MP (@lem8196511 _144530 _144607 P p g a) (@lem8196376 _144530 _144607 P p g a h1)). Qed.
Lemma lem8200175 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : p g a) : term916 _144530 _144607 P p g a.
Proof. exact (fun h0 : term867 _144530 _144607 P p g a => @lem8200174 _144530 _144607 P p g a h1). Qed.
Lemma lem8200177 (p : Prop) : (term57 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8200178 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term916 _144530 _144607 P p g a) = (term822 _144530 _144607 P p g a).
Proof. exact (@lem8200177 (term822 _144530 _144607 P p g a)). Qed.
Lemma lem8200179 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : p g a) : term822 _144530 _144607 P p g a.
Proof. exact (EQ_MP (@lem8200178 _144530 _144607 P p g a) (@lem8200175 _144530 _144607 P p g a h1)). Qed.
Lemma lem8200181 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) (h1 : (pat g a) = (e g a)) : (term835 _144530 _144607 _144645 P pat g a) = (term835 _144530 _144607 _144645 P e g a).
Proof. exact (EQ_MP (@lem8196639 _144530 _144607 _144645 P pat e g a) (@lem8196451 _144530 _144607 _144645 P pat e g a h1)). Qed.
Lemma lem8200182 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) (h1 : (pat g a) = (e g a)) : term1174 _144530 _144607 _144645 P pat e g a.
Proof. exact (fun h0 : term1096 _144530 _144607 _144645 P pat e g a => @lem8200181 _144530 _144607 _144645 P pat e g a h1). Qed.
Lemma lem8200184 (p : Prop) : (term57 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8200185 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term1174 _144530 _144607 _144645 P pat e g a) = ((term835 _144530 _144607 _144645 P pat g a) = (term835 _144530 _144607 _144645 P e g a)).
Proof. exact (@lem8200184 ((term835 _144530 _144607 _144645 P pat g a) = (term835 _144530 _144607 _144645 P e g a))). Qed.
Lemma lem8200186 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) (h1 : (pat g a) = (e g a)) : (term835 _144530 _144607 _144645 P pat g a) = (term835 _144530 _144607 _144645 P e g a).
Proof. exact (EQ_MP (@lem8200185 _144530 _144607 _144645 P pat e g a) (@lem8200182 _144530 _144607 _144645 P pat e g a h1)). Qed.
Lemma lem8200188 {_144530 _144607 P : Type'} (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term1082 _144530 _144607 P f q g a) : term822 _144530 _144607 P q f a.
Proof. exact (proj1 (@lem8198192 _144530 _144607 P f q g a h1)). Qed.
Lemma lem8200189 {_144530 _144607 P : Type'} (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term1082 _144530 _144607 P f q g a) : term916 _144530 _144607 P q f a.
Proof. exact (fun h0 : term867 _144530 _144607 P q f a => @lem8200188 _144530 _144607 P f q g a h1). Qed.
Lemma lem8200191 (p : Prop) : (term57 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8200192 {_144530 _144607 P : Type'} (q : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) : (term916 _144530 _144607 P q f a) = (term822 _144530 _144607 P q f a).
Proof. exact (@lem8200191 (term822 _144530 _144607 P q f a)). Qed.
Lemma lem8200193 {_144530 _144607 P : Type'} (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term1082 _144530 _144607 P f q g a) : term822 _144530 _144607 P q f a.
Proof. exact (EQ_MP (@lem8200192 _144530 _144607 P q f a) (@lem8200189 _144530 _144607 P f q g a h1)). Qed.
Lemma lem8200196 {_144530 _144607 P : Type'} (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term867 _144530 _144607 P q g a) : term867 _144530 _144607 P q g a.
Proof. exact (h1). Qed.
Lemma lem8200197 {_144530 _144607 P : Type'} (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term867 _144530 _144607 P q g a) : term1175 _144530 _144607 P q g a.
Proof. exact (fun h0 : term822 _144530 _144607 P q g a => @lem8200196 _144530 _144607 P q g a h1). Qed.
Lemma lem8200199 (p : Prop) : (term918 p) = (~ p).
Proof. exact (EQ_MP (@lem21028 p) (@lem21107 p)). Qed.
Lemma lem8200200 {_144530 _144607 P : Type'} (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term1175 _144530 _144607 P q g a) = (term867 _144530 _144607 P q g a).
Proof. exact (@lem8200199 (term822 _144530 _144607 P q g a)). Qed.
Lemma lem8200201 {_144530 _144607 P : Type'} (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term867 _144530 _144607 P q g a) : term867 _144530 _144607 P q g a.
Proof. exact (EQ_MP (@lem8200200 _144530 _144607 P q g a) (@lem8200197 _144530 _144607 P q g a h1)). Qed.
Lemma lem8200207 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8200208 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (z' : type518 _144530 _144607 P) (s : P -> _144529) (_108869 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108870 : _144530 -> _144607) (_108871 : P) : (term1152 _144529 _144530 _144607 _144645 P p pat e lt2 z' s _108869 q _108870 _108871) = (term1176 _144529 _144530 _144607 _144645 P p pat e lt2 z' s _108869 q _108870 _108871).
Proof. exact (@lem8200207 (term1096 _144530 _144607 _144645 P pat e _108869 _108871) (term867 _144530 _144607 P p _108869 _108871) (term1149 _144529 _144530 _144607 _144645 P p pat e lt2 z' s _108869 q _108870 _108871)). Qed.
Lemma lem8200234 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8200235 {_144529 _144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (z' : type518 _144530 _144607 P) (s : P -> _144529) (_108869 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108870 : _144530 -> _144607) (_108871 : P) : (term1149 _144529 _144530 _144607 _144645 P p pat e lt2 z' s _108869 q _108870 _108871) = (term1177 _144529 _144530 _144607 _144645 P pat e p lt2 z' s _108869 q _108870 _108871).
Proof. exact (@lem8200234 (term1096 _144530 _144607 _144645 P pat e _108870 _108871) (term867 _144530 _144607 P p _108870 _108871) (term1150 _144529 _144530 _144607 P lt2 z' s _108869 q _108870 _108871)). Qed.
Lemma lem8200251 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8200252 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (z' : type518 _144530 _144607 P) (s : P -> _144529) (p : type560 _144530 _144607 P) (_108869 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108870 : _144530 -> _144607) (_108871 : P) : (term1178 _144529 _144530 _144607 P p lt2 z' s _108869 q _108870 _108871) = (term1179 _144529 _144530 _144607 P lt2 z' s p _108869 q _108870 _108871).
Proof. exact (@lem8200251 (term862 _144529 _144530 _144607 P lt2 z' _108869 _108870 s _108871) (term867 _144530 _144607 P p _108870 _108871) (term1087 _144530 _144607 P _108869 q _108870 _108871)). Qed.
Lemma lem8200276 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem8200277 {_144530 _144607 P : Type'} (_108870 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108869 : _144530 -> _144607) (_108871 : P) : (term1087 _144530 _144607 P _108869 q _108870 _108871) = (term1091 _144530 _144607 P _108870 q _108869 _108871).
Proof. exact (@lem8200276 (term822 _144530 _144607 P q _108870 _108871) (term867 _144530 _144607 P q _108869 _108871)). Qed.
Lemma lem8200283 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (_108870 : _144530 -> _144607) (_108871 : P) : (term868 _144530 _144607 P p _108870 _108871) = (term868 _144530 _144607 P p _108870 _108871).
Proof. exact (eq_refl (term868 _144530 _144607 P p _108870 _108871)). Qed.
Lemma lem8200284 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (_108870 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108869 : _144530 -> _144607) (_108871 : P) : (term1180 _144530 _144607 P p _108869 q _108870 _108871) = (term1181 _144530 _144607 P p _108870 q _108869 _108871).
Proof. exact (MK_COMB (@lem8200283 _144530 _144607 P p _108870 _108871) (@lem8200277 _144530 _144607 P _108870 q _108869 _108871)). Qed.
Lemma lem8200288 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8200289 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (_108870 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108869 : _144530 -> _144607) (_108871 : P) : (term1181 _144530 _144607 P p _108870 q _108869 _108871) = (term1182 _144530 _144607 P p _108870 q _108869 _108871).
Proof. exact (@lem8200288 (term822 _144530 _144607 P q _108870 _108871) (term867 _144530 _144607 P p _108870 _108871) (term867 _144530 _144607 P q _108869 _108871)). Qed.
Lemma lem8200305 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (_108870 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108869 : _144530 -> _144607) (_108871 : P) : (term1180 _144530 _144607 P p _108869 q _108870 _108871) = (term1182 _144530 _144607 P p _108870 q _108869 _108871).
Proof. exact (TRANS (@lem8200284 _144530 _144607 P p _108870 q _108869 _108871) (@lem8200289 _144530 _144607 P p _108870 q _108869 _108871)). Qed.
Lemma lem8200306 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (z' : type518 _144530 _144607 P) (_108869 : _144530 -> _144607) (_108870 : _144530 -> _144607) (s : P -> _144529) (_108871 : P) : (term922 _144529 _144530 _144607 P lt2 z' _108869 _108870 s _108871) = (term922 _144529 _144530 _144607 P lt2 z' _108869 _108870 s _108871).
Proof. exact (eq_refl (term922 _144529 _144530 _144607 P lt2 z' _108869 _108870 s _108871)). Qed.
Lemma lem8200307 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (z' : type518 _144530 _144607 P) (s : P -> _144529) (p : type560 _144530 _144607 P) (_108870 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108869 : _144530 -> _144607) (_108871 : P) : (term1179 _144529 _144530 _144607 P lt2 z' s p _108869 q _108870 _108871) = (term1183 _144529 _144530 _144607 P lt2 z' s p _108870 q _108869 _108871).
Proof. exact (MK_COMB (@lem8200306 _144529 _144530 _144607 P lt2 z' _108869 _108870 s _108871) (@lem8200305 _144530 _144607 P p _108870 q _108869 _108871)). Qed.
Lemma lem8200318 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (z' : type518 _144530 _144607 P) (s : P -> _144529) (p : type560 _144530 _144607 P) (_108870 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108869 : _144530 -> _144607) (_108871 : P) : (term1178 _144529 _144530 _144607 P p lt2 z' s _108869 q _108870 _108871) = (term1183 _144529 _144530 _144607 P lt2 z' s p _108870 q _108869 _108871).
Proof. exact (TRANS (@lem8200252 _144529 _144530 _144607 P lt2 z' s p _108869 q _108870 _108871) (@lem8200307 _144529 _144530 _144607 P lt2 z' s p _108870 q _108869 _108871)). Qed.
Lemma lem8200319 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (_108870 : _144530 -> _144607) (_108871 : P) : (term1184 _144530 _144607 _144645 P pat e _108870 _108871) = (term1184 _144530 _144607 _144645 P pat e _108870 _108871).
Proof. exact (eq_refl (term1184 _144530 _144607 _144645 P pat e _108870 _108871)). Qed.
Lemma lem8200320 {_144529 _144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (z' : type518 _144530 _144607 P) (s : P -> _144529) (p : type560 _144530 _144607 P) (_108870 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108869 : _144530 -> _144607) (_108871 : P) : (term1177 _144529 _144530 _144607 _144645 P pat e p lt2 z' s _108869 q _108870 _108871) = (term1185 _144529 _144530 _144607 _144645 P pat e lt2 z' s p _108870 q _108869 _108871).
Proof. exact (MK_COMB (@lem8200319 _144530 _144607 _144645 P pat e _108870 _108871) (@lem8200318 _144529 _144530 _144607 P lt2 z' s p _108870 q _108869 _108871)). Qed.
Lemma lem8200324 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8200325 {_144529 _144530 _144607 _144645 P : Type'} (lt2 : type1470 _144529 _144530) (z' : type518 _144530 _144607 P) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_108870 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108869 : _144530 -> _144607) (_108871 : P) : (term1185 _144529 _144530 _144607 _144645 P pat e lt2 z' s p _108870 q _108869 _108871) = (term1186 _144529 _144530 _144607 _144645 P lt2 z' s pat e p _108870 q _108869 _108871).
Proof. exact (@lem8200324 (term862 _144529 _144530 _144607 P lt2 z' _108869 _108870 s _108871) (term1096 _144530 _144607 _144645 P pat e _108870 _108871) (term1182 _144530 _144607 P p _108870 q _108869 _108871)). Qed.
Lemma lem8200339 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8200340 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_108870 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108869 : _144530 -> _144607) (_108871 : P) : (term1187 _144530 _144607 _144645 P pat e p _108870 q _108869 _108871) = (term1188 _144530 _144607 _144645 P pat e p _108870 q _108869 _108871).
Proof. exact (@lem8200339 (term822 _144530 _144607 P q _108870 _108871) (term1096 _144530 _144607 _144645 P pat e _108870 _108871) (term1189 _144530 _144607 P p _108870 q _108869 _108871)). Qed.
Lemma lem8200368 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (z' : type518 _144530 _144607 P) (_108869 : _144530 -> _144607) (_108870 : _144530 -> _144607) (s : P -> _144529) (_108871 : P) : (term922 _144529 _144530 _144607 P lt2 z' _108869 _108870 s _108871) = (term922 _144529 _144530 _144607 P lt2 z' _108869 _108870 s _108871).
Proof. exact (eq_refl (term922 _144529 _144530 _144607 P lt2 z' _108869 _108870 s _108871)). Qed.
Lemma lem8200369 {_144529 _144530 _144607 _144645 P : Type'} (lt2 : type1470 _144529 _144530) (z' : type518 _144530 _144607 P) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_108870 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108869 : _144530 -> _144607) (_108871 : P) : (term1186 _144529 _144530 _144607 _144645 P lt2 z' s pat e p _108870 q _108869 _108871) = (term1190 _144529 _144530 _144607 _144645 P lt2 z' s pat e p _108870 q _108869 _108871).
Proof. exact (MK_COMB (@lem8200368 _144529 _144530 _144607 P lt2 z' _108869 _108870 s _108871) (@lem8200340 _144530 _144607 _144645 P pat e p _108870 q _108869 _108871)). Qed.
Lemma lem8200380 {_144529 _144530 _144607 _144645 P : Type'} (lt2 : type1470 _144529 _144530) (z' : type518 _144530 _144607 P) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_108870 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108869 : _144530 -> _144607) (_108871 : P) : (term1185 _144529 _144530 _144607 _144645 P pat e lt2 z' s p _108870 q _108869 _108871) = (term1190 _144529 _144530 _144607 _144645 P lt2 z' s pat e p _108870 q _108869 _108871).
Proof. exact (TRANS (@lem8200325 _144529 _144530 _144607 _144645 P lt2 z' s pat e p _108870 q _108869 _108871) (@lem8200369 _144529 _144530 _144607 _144645 P lt2 z' s pat e p _108870 q _108869 _108871)). Qed.
Lemma lem8200381 {_144529 _144530 _144607 _144645 P : Type'} (lt2 : type1470 _144529 _144530) (z' : type518 _144530 _144607 P) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_108870 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108869 : _144530 -> _144607) (_108871 : P) : (term1177 _144529 _144530 _144607 _144645 P pat e p lt2 z' s _108869 q _108870 _108871) = (term1190 _144529 _144530 _144607 _144645 P lt2 z' s pat e p _108870 q _108869 _108871).
Proof. exact (TRANS (@lem8200320 _144529 _144530 _144607 _144645 P pat e lt2 z' s p _108870 q _108869 _108871) (@lem8200380 _144529 _144530 _144607 _144645 P lt2 z' s pat e p _108870 q _108869 _108871)). Qed.
Lemma lem8200382 {_144529 _144530 _144607 _144645 P : Type'} (lt2 : type1470 _144529 _144530) (z' : type518 _144530 _144607 P) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_108870 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108869 : _144530 -> _144607) (_108871 : P) : (term1149 _144529 _144530 _144607 _144645 P p pat e lt2 z' s _108869 q _108870 _108871) = (term1190 _144529 _144530 _144607 _144645 P lt2 z' s pat e p _108870 q _108869 _108871).
Proof. exact (TRANS (@lem8200235 _144529 _144530 _144607 _144645 P pat e p lt2 z' s _108869 q _108870 _108871) (@lem8200381 _144529 _144530 _144607 _144645 P lt2 z' s pat e p _108870 q _108869 _108871)). Qed.
Lemma lem8200383 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (_108869 : _144530 -> _144607) (_108871 : P) : (term868 _144530 _144607 P p _108869 _108871) = (term868 _144530 _144607 P p _108869 _108871).
Proof. exact (eq_refl (term868 _144530 _144607 P p _108869 _108871)). Qed.
Lemma lem8200384 {_144529 _144530 _144607 _144645 P : Type'} (lt2 : type1470 _144529 _144530) (z' : type518 _144530 _144607 P) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_108870 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108869 : _144530 -> _144607) (_108871 : P) : (term1191 _144529 _144530 _144607 _144645 P p pat e lt2 z' s _108869 q _108870 _108871) = (term1192 _144529 _144530 _144607 _144645 P lt2 z' s pat e p _108870 q _108869 _108871).
Proof. exact (MK_COMB (@lem8200383 _144530 _144607 P p _108869 _108871) (@lem8200382 _144529 _144530 _144607 _144645 P lt2 z' s pat e p _108870 q _108869 _108871)). Qed.
Lemma lem8200388 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8200389 {_144529 _144530 _144607 _144645 P : Type'} (lt2 : type1470 _144529 _144530) (z' : type518 _144530 _144607 P) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_108870 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108869 : _144530 -> _144607) (_108871 : P) : (term1192 _144529 _144530 _144607 _144645 P lt2 z' s pat e p _108870 q _108869 _108871) = (term1193 _144529 _144530 _144607 _144645 P lt2 z' s pat e p _108870 q _108869 _108871).
Proof. exact (@lem8200388 (term862 _144529 _144530 _144607 P lt2 z' _108869 _108870 s _108871) (term867 _144530 _144607 P p _108869 _108871) (term1188 _144530 _144607 _144645 P pat e p _108870 q _108869 _108871)). Qed.
Lemma lem8200403 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8200404 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_108870 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108869 : _144530 -> _144607) (_108871 : P) : (term1194 _144530 _144607 _144645 P pat e p _108870 q _108869 _108871) = (term1195 _144530 _144607 _144645 P pat e p _108870 q _108869 _108871).
Proof. exact (@lem8200403 (term822 _144530 _144607 P q _108870 _108871) (term867 _144530 _144607 P p _108869 _108871) (term1196 _144530 _144607 _144645 P pat e p _108870 q _108869 _108871)). Qed.
Lemma lem8200418 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8200419 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_108870 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108869 : _144530 -> _144607) (_108871 : P) : (term1197 _144530 _144607 _144645 P pat e p _108870 q _108869 _108871) = (term1198 _144530 _144607 _144645 P pat e p _108870 q _108869 _108871).
Proof. exact (@lem8200418 (term1096 _144530 _144607 _144645 P pat e _108870 _108871) (term867 _144530 _144607 P p _108869 _108871) (term1189 _144530 _144607 P p _108870 q _108869 _108871)). Qed.
Lemma lem8200447 {_144530 _144607 P : Type'} (q : type560 _144530 _144607 P) (_108870 : _144530 -> _144607) (_108871 : P) : (term1089 _144530 _144607 P q _108870 _108871) = (term1089 _144530 _144607 P q _108870 _108871).
Proof. exact (eq_refl (term1089 _144530 _144607 P q _108870 _108871)). Qed.
Lemma lem8200448 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_108870 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108869 : _144530 -> _144607) (_108871 : P) : (term1195 _144530 _144607 _144645 P pat e p _108870 q _108869 _108871) = (term1199 _144530 _144607 _144645 P pat e p _108870 q _108869 _108871).
Proof. exact (MK_COMB (@lem8200447 _144530 _144607 P q _108870 _108871) (@lem8200419 _144530 _144607 _144645 P pat e p _108870 q _108869 _108871)). Qed.
Lemma lem8200459 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_108870 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108869 : _144530 -> _144607) (_108871 : P) : (term1194 _144530 _144607 _144645 P pat e p _108870 q _108869 _108871) = (term1199 _144530 _144607 _144645 P pat e p _108870 q _108869 _108871).
Proof. exact (TRANS (@lem8200404 _144530 _144607 _144645 P pat e p _108870 q _108869 _108871) (@lem8200448 _144530 _144607 _144645 P pat e p _108870 q _108869 _108871)). Qed.
Lemma lem8200460 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (z' : type518 _144530 _144607 P) (_108869 : _144530 -> _144607) (_108870 : _144530 -> _144607) (s : P -> _144529) (_108871 : P) : (term922 _144529 _144530 _144607 P lt2 z' _108869 _108870 s _108871) = (term922 _144529 _144530 _144607 P lt2 z' _108869 _108870 s _108871).
Proof. exact (eq_refl (term922 _144529 _144530 _144607 P lt2 z' _108869 _108870 s _108871)). Qed.
Lemma lem8200461 {_144529 _144530 _144607 _144645 P : Type'} (lt2 : type1470 _144529 _144530) (z' : type518 _144530 _144607 P) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_108870 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108869 : _144530 -> _144607) (_108871 : P) : (term1193 _144529 _144530 _144607 _144645 P lt2 z' s pat e p _108870 q _108869 _108871) = (term1200 _144529 _144530 _144607 _144645 P lt2 z' s pat e p _108870 q _108869 _108871).
Proof. exact (MK_COMB (@lem8200460 _144529 _144530 _144607 P lt2 z' _108869 _108870 s _108871) (@lem8200459 _144530 _144607 _144645 P pat e p _108870 q _108869 _108871)). Qed.
Lemma lem8200472 {_144529 _144530 _144607 _144645 P : Type'} (lt2 : type1470 _144529 _144530) (z' : type518 _144530 _144607 P) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_108870 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108869 : _144530 -> _144607) (_108871 : P) : (term1192 _144529 _144530 _144607 _144645 P lt2 z' s pat e p _108870 q _108869 _108871) = (term1200 _144529 _144530 _144607 _144645 P lt2 z' s pat e p _108870 q _108869 _108871).
Proof. exact (TRANS (@lem8200389 _144529 _144530 _144607 _144645 P lt2 z' s pat e p _108870 q _108869 _108871) (@lem8200461 _144529 _144530 _144607 _144645 P lt2 z' s pat e p _108870 q _108869 _108871)). Qed.
Lemma lem8200473 {_144529 _144530 _144607 _144645 P : Type'} (lt2 : type1470 _144529 _144530) (z' : type518 _144530 _144607 P) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_108870 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108869 : _144530 -> _144607) (_108871 : P) : (term1191 _144529 _144530 _144607 _144645 P p pat e lt2 z' s _108869 q _108870 _108871) = (term1200 _144529 _144530 _144607 _144645 P lt2 z' s pat e p _108870 q _108869 _108871).
Proof. exact (TRANS (@lem8200384 _144529 _144530 _144607 _144645 P lt2 z' s pat e p _108870 q _108869 _108871) (@lem8200472 _144529 _144530 _144607 _144645 P lt2 z' s pat e p _108870 q _108869 _108871)). Qed.
Lemma lem8200474 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (_108869 : _144530 -> _144607) (_108871 : P) : (term1184 _144530 _144607 _144645 P pat e _108869 _108871) = (term1184 _144530 _144607 _144645 P pat e _108869 _108871).
Proof. exact (eq_refl (term1184 _144530 _144607 _144645 P pat e _108869 _108871)). Qed.
Lemma lem8200475 {_144529 _144530 _144607 _144645 P : Type'} (lt2 : type1470 _144529 _144530) (z' : type518 _144530 _144607 P) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_108870 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108869 : _144530 -> _144607) (_108871 : P) : (term1176 _144529 _144530 _144607 _144645 P p pat e lt2 z' s _108869 q _108870 _108871) = (term1201 _144529 _144530 _144607 _144645 P lt2 z' s pat e p _108870 q _108869 _108871).
Proof. exact (MK_COMB (@lem8200474 _144530 _144607 _144645 P pat e _108869 _108871) (@lem8200473 _144529 _144530 _144607 _144645 P lt2 z' s pat e p _108870 q _108869 _108871)). Qed.
Lemma lem8200479 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8200480 {_144529 _144530 _144607 _144645 P : Type'} (lt2 : type1470 _144529 _144530) (z' : type518 _144530 _144607 P) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_108870 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108869 : _144530 -> _144607) (_108871 : P) : (term1201 _144529 _144530 _144607 _144645 P lt2 z' s pat e p _108870 q _108869 _108871) = (term1202 _144529 _144530 _144607 _144645 P lt2 z' s pat e p _108870 q _108869 _108871).
Proof. exact (@lem8200479 (term862 _144529 _144530 _144607 P lt2 z' _108869 _108870 s _108871) (term1096 _144530 _144607 _144645 P pat e _108869 _108871) (term1199 _144530 _144607 _144645 P pat e p _108870 q _108869 _108871)). Qed.
Lemma lem8200494 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8200495 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_108870 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108869 : _144530 -> _144607) (_108871 : P) : (term1203 _144530 _144607 _144645 P pat e p _108870 q _108869 _108871) = (term1204 _144530 _144607 _144645 P pat e p _108870 q _108869 _108871).
Proof. exact (@lem8200494 (term822 _144530 _144607 P q _108870 _108871) (term1096 _144530 _144607 _144645 P pat e _108869 _108871) (term1198 _144530 _144607 _144645 P pat e p _108870 q _108869 _108871)). Qed.
Lemma lem8200545 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (z' : type518 _144530 _144607 P) (_108869 : _144530 -> _144607) (_108870 : _144530 -> _144607) (s : P -> _144529) (_108871 : P) : (term922 _144529 _144530 _144607 P lt2 z' _108869 _108870 s _108871) = (term922 _144529 _144530 _144607 P lt2 z' _108869 _108870 s _108871).
Proof. exact (eq_refl (term922 _144529 _144530 _144607 P lt2 z' _108869 _108870 s _108871)). Qed.
Lemma lem8200546 {_144529 _144530 _144607 _144645 P : Type'} (lt2 : type1470 _144529 _144530) (z' : type518 _144530 _144607 P) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_108870 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108869 : _144530 -> _144607) (_108871 : P) : (term1202 _144529 _144530 _144607 _144645 P lt2 z' s pat e p _108870 q _108869 _108871) = (term1205 _144529 _144530 _144607 _144645 P lt2 z' s pat e p _108870 q _108869 _108871).
Proof. exact (MK_COMB (@lem8200545 _144529 _144530 _144607 P lt2 z' _108869 _108870 s _108871) (@lem8200495 _144530 _144607 _144645 P pat e p _108870 q _108869 _108871)). Qed.
Lemma lem8200557 {_144529 _144530 _144607 _144645 P : Type'} (lt2 : type1470 _144529 _144530) (z' : type518 _144530 _144607 P) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_108870 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108869 : _144530 -> _144607) (_108871 : P) : (term1201 _144529 _144530 _144607 _144645 P lt2 z' s pat e p _108870 q _108869 _108871) = (term1205 _144529 _144530 _144607 _144645 P lt2 z' s pat e p _108870 q _108869 _108871).
Proof. exact (TRANS (@lem8200480 _144529 _144530 _144607 _144645 P lt2 z' s pat e p _108870 q _108869 _108871) (@lem8200546 _144529 _144530 _144607 _144645 P lt2 z' s pat e p _108870 q _108869 _108871)). Qed.
Lemma lem8200558 {_144529 _144530 _144607 _144645 P : Type'} (lt2 : type1470 _144529 _144530) (z' : type518 _144530 _144607 P) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_108870 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108869 : _144530 -> _144607) (_108871 : P) : (term1176 _144529 _144530 _144607 _144645 P p pat e lt2 z' s _108869 q _108870 _108871) = (term1205 _144529 _144530 _144607 _144645 P lt2 z' s pat e p _108870 q _108869 _108871).
Proof. exact (TRANS (@lem8200475 _144529 _144530 _144607 _144645 P lt2 z' s pat e p _108870 q _108869 _108871) (@lem8200557 _144529 _144530 _144607 _144645 P lt2 z' s pat e p _108870 q _108869 _108871)). Qed.
Lemma lem8200559 {_144529 _144530 _144607 _144645 P : Type'} (lt2 : type1470 _144529 _144530) (z' : type518 _144530 _144607 P) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_108870 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108869 : _144530 -> _144607) (_108871 : P) : (term1152 _144529 _144530 _144607 _144645 P p pat e lt2 z' s _108869 q _108870 _108871) = (term1205 _144529 _144530 _144607 _144645 P lt2 z' s pat e p _108870 q _108869 _108871).
Proof. exact (TRANS (@lem8200208 _144529 _144530 _144607 _144645 P p pat e lt2 z' s _108869 q _108870 _108871) (@lem8200558 _144529 _144530 _144607 _144645 P lt2 z' s pat e p _108870 q _108869 _108871)). Qed.
Lemma lem8200560 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8200561 {_144529 _144530 _144607 _144645 P : Type'} (lt2 : type1470 _144529 _144530) (z' : type518 _144530 _144607 P) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_108870 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108869 : _144530 -> _144607) (_108871 : P) : (term1206 _144529 _144530 _144607 _144645 P p pat e lt2 z' s _108869 q _108870 _108871) = (term1207 _144529 _144530 _144607 _144645 P lt2 z' s pat e p _108870 q _108869 _108871).
Proof. exact (MK_COMB (@lem8200560) (@lem8200559 _144529 _144530 _144607 _144645 P lt2 z' s pat e p _108870 q _108869 _108871)). Qed.
Lemma lem8200575 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8200576 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (_108869 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108870 : _144530 -> _144607) (_108871 : P) : (term1208 _144530 _144607 _144645 P p pat e _108869 q _108870 _108871) = (term1209 _144530 _144607 _144645 P p pat e _108869 q _108870 _108871).
Proof. exact (@lem8200575 (term1096 _144530 _144607 _144645 P pat e _108869 _108871) (term867 _144530 _144607 P p _108869 _108871) (term1210 _144530 _144607 _144645 P p pat e _108869 q _108870 _108871)). Qed.
Lemma lem8200602 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8200603 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_108869 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108870 : _144530 -> _144607) (_108871 : P) : (term1210 _144530 _144607 _144645 P p pat e _108869 q _108870 _108871) = (term1211 _144530 _144607 _144645 P pat e p _108869 q _108870 _108871).
Proof. exact (@lem8200602 (term1096 _144530 _144607 _144645 P pat e _108870 _108871) (term867 _144530 _144607 P p _108870 _108871) (term1087 _144530 _144607 P _108869 q _108870 _108871)). Qed.
Lemma lem8200629 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem8200630 {_144530 _144607 P : Type'} (_108870 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108869 : _144530 -> _144607) (_108871 : P) : (term1087 _144530 _144607 P _108869 q _108870 _108871) = (term1091 _144530 _144607 P _108870 q _108869 _108871).
Proof. exact (@lem8200629 (term822 _144530 _144607 P q _108870 _108871) (term867 _144530 _144607 P q _108869 _108871)). Qed.
Lemma lem8200636 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (_108870 : _144530 -> _144607) (_108871 : P) : (term868 _144530 _144607 P p _108870 _108871) = (term868 _144530 _144607 P p _108870 _108871).
Proof. exact (eq_refl (term868 _144530 _144607 P p _108870 _108871)). Qed.
Lemma lem8200637 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (_108870 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108869 : _144530 -> _144607) (_108871 : P) : (term1180 _144530 _144607 P p _108869 q _108870 _108871) = (term1181 _144530 _144607 P p _108870 q _108869 _108871).
Proof. exact (MK_COMB (@lem8200636 _144530 _144607 P p _108870 _108871) (@lem8200630 _144530 _144607 P _108870 q _108869 _108871)). Qed.
Lemma lem8200641 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8200642 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (_108870 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108869 : _144530 -> _144607) (_108871 : P) : (term1181 _144530 _144607 P p _108870 q _108869 _108871) = (term1182 _144530 _144607 P p _108870 q _108869 _108871).
Proof. exact (@lem8200641 (term822 _144530 _144607 P q _108870 _108871) (term867 _144530 _144607 P p _108870 _108871) (term867 _144530 _144607 P q _108869 _108871)). Qed.
Lemma lem8200658 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (_108870 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108869 : _144530 -> _144607) (_108871 : P) : (term1180 _144530 _144607 P p _108869 q _108870 _108871) = (term1182 _144530 _144607 P p _108870 q _108869 _108871).
Proof. exact (TRANS (@lem8200637 _144530 _144607 P p _108870 q _108869 _108871) (@lem8200642 _144530 _144607 P p _108870 q _108869 _108871)). Qed.
Lemma lem8200659 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (_108870 : _144530 -> _144607) (_108871 : P) : (term1184 _144530 _144607 _144645 P pat e _108870 _108871) = (term1184 _144530 _144607 _144645 P pat e _108870 _108871).
Proof. exact (eq_refl (term1184 _144530 _144607 _144645 P pat e _108870 _108871)). Qed.
Lemma lem8200660 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_108870 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108869 : _144530 -> _144607) (_108871 : P) : (term1211 _144530 _144607 _144645 P pat e p _108869 q _108870 _108871) = (term1187 _144530 _144607 _144645 P pat e p _108870 q _108869 _108871).
Proof. exact (MK_COMB (@lem8200659 _144530 _144607 _144645 P pat e _108870 _108871) (@lem8200658 _144530 _144607 P p _108870 q _108869 _108871)). Qed.
Lemma lem8200664 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8200665 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_108870 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108869 : _144530 -> _144607) (_108871 : P) : (term1187 _144530 _144607 _144645 P pat e p _108870 q _108869 _108871) = (term1188 _144530 _144607 _144645 P pat e p _108870 q _108869 _108871).
Proof. exact (@lem8200664 (term822 _144530 _144607 P q _108870 _108871) (term1096 _144530 _144607 _144645 P pat e _108870 _108871) (term1189 _144530 _144607 P p _108870 q _108869 _108871)). Qed.
Lemma lem8200693 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_108870 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108869 : _144530 -> _144607) (_108871 : P) : (term1211 _144530 _144607 _144645 P pat e p _108869 q _108870 _108871) = (term1188 _144530 _144607 _144645 P pat e p _108870 q _108869 _108871).
Proof. exact (TRANS (@lem8200660 _144530 _144607 _144645 P pat e p _108870 q _108869 _108871) (@lem8200665 _144530 _144607 _144645 P pat e p _108870 q _108869 _108871)). Qed.
Lemma lem8200694 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_108870 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108869 : _144530 -> _144607) (_108871 : P) : (term1210 _144530 _144607 _144645 P p pat e _108869 q _108870 _108871) = (term1188 _144530 _144607 _144645 P pat e p _108870 q _108869 _108871).
Proof. exact (TRANS (@lem8200603 _144530 _144607 _144645 P pat e p _108869 q _108870 _108871) (@lem8200693 _144530 _144607 _144645 P pat e p _108870 q _108869 _108871)). Qed.
Lemma lem8200695 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (_108869 : _144530 -> _144607) (_108871 : P) : (term868 _144530 _144607 P p _108869 _108871) = (term868 _144530 _144607 P p _108869 _108871).
Proof. exact (eq_refl (term868 _144530 _144607 P p _108869 _108871)). Qed.
Lemma lem8200696 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_108870 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108869 : _144530 -> _144607) (_108871 : P) : (term1212 _144530 _144607 _144645 P p pat e _108869 q _108870 _108871) = (term1194 _144530 _144607 _144645 P pat e p _108870 q _108869 _108871).
Proof. exact (MK_COMB (@lem8200695 _144530 _144607 P p _108869 _108871) (@lem8200694 _144530 _144607 _144645 P pat e p _108870 q _108869 _108871)). Qed.
Lemma lem8200700 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8200701 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_108870 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108869 : _144530 -> _144607) (_108871 : P) : (term1194 _144530 _144607 _144645 P pat e p _108870 q _108869 _108871) = (term1195 _144530 _144607 _144645 P pat e p _108870 q _108869 _108871).
Proof. exact (@lem8200700 (term822 _144530 _144607 P q _108870 _108871) (term867 _144530 _144607 P p _108869 _108871) (term1196 _144530 _144607 _144645 P pat e p _108870 q _108869 _108871)). Qed.
Lemma lem8200715 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8200716 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_108870 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108869 : _144530 -> _144607) (_108871 : P) : (term1197 _144530 _144607 _144645 P pat e p _108870 q _108869 _108871) = (term1198 _144530 _144607 _144645 P pat e p _108870 q _108869 _108871).
Proof. exact (@lem8200715 (term1096 _144530 _144607 _144645 P pat e _108870 _108871) (term867 _144530 _144607 P p _108869 _108871) (term1189 _144530 _144607 P p _108870 q _108869 _108871)). Qed.
Lemma lem8200744 {_144530 _144607 P : Type'} (q : type560 _144530 _144607 P) (_108870 : _144530 -> _144607) (_108871 : P) : (term1089 _144530 _144607 P q _108870 _108871) = (term1089 _144530 _144607 P q _108870 _108871).
Proof. exact (eq_refl (term1089 _144530 _144607 P q _108870 _108871)). Qed.
Lemma lem8200745 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_108870 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108869 : _144530 -> _144607) (_108871 : P) : (term1195 _144530 _144607 _144645 P pat e p _108870 q _108869 _108871) = (term1199 _144530 _144607 _144645 P pat e p _108870 q _108869 _108871).
Proof. exact (MK_COMB (@lem8200744 _144530 _144607 P q _108870 _108871) (@lem8200716 _144530 _144607 _144645 P pat e p _108870 q _108869 _108871)). Qed.
Lemma lem8200756 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_108870 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108869 : _144530 -> _144607) (_108871 : P) : (term1194 _144530 _144607 _144645 P pat e p _108870 q _108869 _108871) = (term1199 _144530 _144607 _144645 P pat e p _108870 q _108869 _108871).
Proof. exact (TRANS (@lem8200701 _144530 _144607 _144645 P pat e p _108870 q _108869 _108871) (@lem8200745 _144530 _144607 _144645 P pat e p _108870 q _108869 _108871)). Qed.
Lemma lem8200757 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_108870 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108869 : _144530 -> _144607) (_108871 : P) : (term1212 _144530 _144607 _144645 P p pat e _108869 q _108870 _108871) = (term1199 _144530 _144607 _144645 P pat e p _108870 q _108869 _108871).
Proof. exact (TRANS (@lem8200696 _144530 _144607 _144645 P pat e p _108870 q _108869 _108871) (@lem8200756 _144530 _144607 _144645 P pat e p _108870 q _108869 _108871)). Qed.
Lemma lem8200758 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (_108869 : _144530 -> _144607) (_108871 : P) : (term1184 _144530 _144607 _144645 P pat e _108869 _108871) = (term1184 _144530 _144607 _144645 P pat e _108869 _108871).
Proof. exact (eq_refl (term1184 _144530 _144607 _144645 P pat e _108869 _108871)). Qed.
Lemma lem8200759 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_108870 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108869 : _144530 -> _144607) (_108871 : P) : (term1209 _144530 _144607 _144645 P p pat e _108869 q _108870 _108871) = (term1203 _144530 _144607 _144645 P pat e p _108870 q _108869 _108871).
Proof. exact (MK_COMB (@lem8200758 _144530 _144607 _144645 P pat e _108869 _108871) (@lem8200757 _144530 _144607 _144645 P pat e p _108870 q _108869 _108871)). Qed.
Lemma lem8200763 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8200764 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_108870 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108869 : _144530 -> _144607) (_108871 : P) : (term1203 _144530 _144607 _144645 P pat e p _108870 q _108869 _108871) = (term1204 _144530 _144607 _144645 P pat e p _108870 q _108869 _108871).
Proof. exact (@lem8200763 (term822 _144530 _144607 P q _108870 _108871) (term1096 _144530 _144607 _144645 P pat e _108869 _108871) (term1198 _144530 _144607 _144645 P pat e p _108870 q _108869 _108871)). Qed.
Lemma lem8200814 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_108870 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108869 : _144530 -> _144607) (_108871 : P) : (term1209 _144530 _144607 _144645 P p pat e _108869 q _108870 _108871) = (term1204 _144530 _144607 _144645 P pat e p _108870 q _108869 _108871).
Proof. exact (TRANS (@lem8200759 _144530 _144607 _144645 P pat e p _108870 q _108869 _108871) (@lem8200764 _144530 _144607 _144645 P pat e p _108870 q _108869 _108871)). Qed.
Lemma lem8200815 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_108870 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108869 : _144530 -> _144607) (_108871 : P) : (term1208 _144530 _144607 _144645 P p pat e _108869 q _108870 _108871) = (term1204 _144530 _144607 _144645 P pat e p _108870 q _108869 _108871).
Proof. exact (TRANS (@lem8200576 _144530 _144607 _144645 P p pat e _108869 q _108870 _108871) (@lem8200814 _144530 _144607 _144645 P pat e p _108870 q _108869 _108871)). Qed.
Lemma lem8200816 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (z' : type518 _144530 _144607 P) (_108869 : _144530 -> _144607) (_108870 : _144530 -> _144607) (s : P -> _144529) (_108871 : P) : (term922 _144529 _144530 _144607 P lt2 z' _108869 _108870 s _108871) = (term922 _144529 _144530 _144607 P lt2 z' _108869 _108870 s _108871).
Proof. exact (eq_refl (term922 _144529 _144530 _144607 P lt2 z' _108869 _108870 s _108871)). Qed.
Lemma lem8200817 {_144529 _144530 _144607 _144645 P : Type'} (lt2 : type1470 _144529 _144530) (z' : type518 _144530 _144607 P) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_108870 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108869 : _144530 -> _144607) (_108871 : P) : (term1213 _144529 _144530 _144607 _144645 P lt2 z' s p pat e _108869 q _108870 _108871) = (term1205 _144529 _144530 _144607 _144645 P lt2 z' s pat e p _108870 q _108869 _108871).
Proof. exact (MK_COMB (@lem8200816 _144529 _144530 _144607 P lt2 z' _108869 _108870 s _108871) (@lem8200815 _144530 _144607 _144645 P pat e p _108870 q _108869 _108871)). Qed.
Lemma lem8200828 {_144529 _144530 _144607 _144645 P : Type'} (lt2 : type1470 _144529 _144530) (z' : type518 _144530 _144607 P) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_108870 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108869 : _144530 -> _144607) (_108871 : P) : ((term1152 _144529 _144530 _144607 _144645 P p pat e lt2 z' s _108869 q _108870 _108871) = (term1213 _144529 _144530 _144607 _144645 P lt2 z' s p pat e _108869 q _108870 _108871)) = ((term1205 _144529 _144530 _144607 _144645 P lt2 z' s pat e p _108870 q _108869 _108871) = (term1205 _144529 _144530 _144607 _144645 P lt2 z' s pat e p _108870 q _108869 _108871)).
Proof. exact (MK_COMB (@lem8200561 _144529 _144530 _144607 _144645 P lt2 z' s pat e p _108870 q _108869 _108871) (@lem8200817 _144529 _144530 _144607 _144645 P lt2 z' s pat e p _108870 q _108869 _108871)). Qed.
Lemma lem8200830 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem20665 A x) (@lem20664 A x)). Qed.
Lemma lem8200831 (x : Prop) : (x = x) = True.
Proof. exact (@lem8200830 Prop x). Qed.
Lemma lem8200832 {_144529 _144530 _144607 _144645 P : Type'} (lt2 : type1470 _144529 _144530) (z' : type518 _144530 _144607 P) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_108870 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108869 : _144530 -> _144607) (_108871 : P) : ((term1205 _144529 _144530 _144607 _144645 P lt2 z' s pat e p _108870 q _108869 _108871) = (term1205 _144529 _144530 _144607 _144645 P lt2 z' s pat e p _108870 q _108869 _108871)) = True.
Proof. exact (@lem8200831 (term1205 _144529 _144530 _144607 _144645 P lt2 z' s pat e p _108870 q _108869 _108871)). Qed.
Lemma lem8200833 {_144529 _144530 _144607 _144645 P : Type'} (lt2 : type1470 _144529 _144530) (z' : type518 _144530 _144607 P) (s : P -> _144529) (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (_108869 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108870 : _144530 -> _144607) (_108871 : P) : ((term1152 _144529 _144530 _144607 _144645 P p pat e lt2 z' s _108869 q _108870 _108871) = (term1213 _144529 _144530 _144607 _144645 P lt2 z' s p pat e _108869 q _108870 _108871)) = True.
Proof. exact (TRANS (@lem8200828 _144529 _144530 _144607 _144645 P lt2 z' s pat e p _108870 q _108869 _108871) (@lem8200832 _144529 _144530 _144607 _144645 P lt2 z' s pat e p _108870 q _108869 _108871)). Qed.
Lemma lem8200834 {_144529 _144530 _144607 _144645 P : Type'} (lt2 : type1470 _144529 _144530) (z' : type518 _144530 _144607 P) (s : P -> _144529) (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (_108869 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108870 : _144530 -> _144607) (_108871 : P) : True = ((term1152 _144529 _144530 _144607 _144645 P p pat e lt2 z' s _108869 q _108870 _108871) = (term1213 _144529 _144530 _144607 _144645 P lt2 z' s p pat e _108869 q _108870 _108871)).
Proof. exact (SYM (@lem8200833 _144529 _144530 _144607 _144645 P lt2 z' s p pat e _108869 q _108870 _108871)). Qed.
Lemma lem8200835 {_144529 _144530 _144607 _144645 P : Type'} (lt2 : type1470 _144529 _144530) (z' : type518 _144530 _144607 P) (s : P -> _144529) (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (_108869 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108870 : _144530 -> _144607) (_108871 : P) : (term1152 _144529 _144530 _144607 _144645 P p pat e lt2 z' s _108869 q _108870 _108871) = (term1213 _144529 _144530 _144607 _144645 P lt2 z' s p pat e _108869 q _108870 _108871).
Proof. exact (EQ_MP (@lem8200834 _144529 _144530 _144607 _144645 P lt2 z' s p pat e _108869 q _108870 _108871) (@lem0)). Qed.
Lemma lem8200836 {_144529 _144530 _144607 _144645 P : Type'} (_108869 : _144530 -> _144607) (_108870 : _144530 -> _144607) (_108871 : P) (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z' : type518 _144530 _144607 P) (q : type560 _144530 _144607 P) (h1 : term814 _144529 _144530 _144607 _144645 P p pat e lt2 s z' q) : term1213 _144529 _144530 _144607 _144645 P lt2 z' s p pat e _108869 q _108870 _108871.
Proof. exact (EQ_MP (@lem8200835 _144529 _144530 _144607 _144645 P lt2 z' s p pat e _108869 q _108870 _108871) (@lem8199309 _144529 _144530 _144607 _144645 P _108869 _108870 _108871 p pat e lt2 s z' q h1)). Qed.
Lemma lem8200838 (b : Prop) (a : Prop) : (a \/ b) = (term940 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem8200839 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (z' : type518 _144530 _144607 P) (_108869 : _144530 -> _144607) (_108870 : _144530 -> _144607) (s : P -> _144529) (_108871 : P) : (term1213 _144529 _144530 _144607 _144645 P lt2 z' s p pat e _108869 q _108870 _108871) = (term1214 _144529 _144530 _144607 _144645 P p pat e q lt2 z' _108869 _108870 s _108871).
Proof. exact (@lem8200838 (term1208 _144530 _144607 _144645 P p pat e _108869 q _108870 _108871) (term862 _144529 _144530 _144607 P lt2 z' _108869 _108870 s _108871)). Qed.
Lemma lem8200841 (a : Prop) (b : Prop) : (term942 a b) = (term943 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem8200842 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (_108869 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108870 : _144530 -> _144607) (_108871 : P) : (term1215 _144530 _144607 _144645 P p pat e _108869 q _108870 _108871) = (term1216 _144530 _144607 _144645 P p pat e _108869 q _108870 _108871).
Proof. exact (@lem8200841 (term867 _144530 _144607 P p _108869 _108871) (term1217 _144530 _144607 _144645 P p pat e _108869 q _108870 _108871)). Qed.
Lemma lem8200844 (a : Prop) : (term15 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8200845 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (_108869 : _144530 -> _144607) (_108871 : P) : (term946 _144530 _144607 P p _108869 _108871) = (term822 _144530 _144607 P p _108869 _108871).
Proof. exact (@lem8200844 (term822 _144530 _144607 P p _108869 _108871)). Qed.
Lemma lem8200846 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8200847 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (_108869 : _144530 -> _144607) (_108871 : P) : (term947 _144530 _144607 P p _108869 _108871) = (term948 _144530 _144607 P p _108869 _108871).
Proof. exact (MK_COMB (@lem8200846) (@lem8200845 _144530 _144607 P p _108869 _108871)). Qed.
Lemma lem8200849 (a : Prop) (b : Prop) : (term942 a b) = (term943 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem8200850 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (_108869 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108870 : _144530 -> _144607) (_108871 : P) : (term1218 _144530 _144607 _144645 P p pat e _108869 q _108870 _108871) = (term1219 _144530 _144607 _144645 P p pat e _108869 q _108870 _108871).
Proof. exact (@lem8200849 (term1096 _144530 _144607 _144645 P pat e _108869 _108871) (term1210 _144530 _144607 _144645 P p pat e _108869 q _108870 _108871)). Qed.
Lemma lem8200852 (a : Prop) : (term15 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8200853 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (_108869 : _144530 -> _144607) (_108871 : P) : (term1220 _144530 _144607 _144645 P pat e _108869 _108871) = ((term835 _144530 _144607 _144645 P pat _108869 _108871) = (term835 _144530 _144607 _144645 P e _108869 _108871)).
Proof. exact (@lem8200852 ((term835 _144530 _144607 _144645 P pat _108869 _108871) = (term835 _144530 _144607 _144645 P e _108869 _108871))). Qed.
Lemma lem8200854 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8200855 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (_108869 : _144530 -> _144607) (_108871 : P) : (term1221 _144530 _144607 _144645 P pat e _108869 _108871) = (term1222 _144530 _144607 _144645 P pat e _108869 _108871).
Proof. exact (MK_COMB (@lem8200854) (@lem8200853 _144530 _144607 _144645 P pat e _108869 _108871)). Qed.
Lemma lem8200857 (a : Prop) (b : Prop) : (term942 a b) = (term943 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem8200858 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (_108869 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108870 : _144530 -> _144607) (_108871 : P) : (term1223 _144530 _144607 _144645 P p pat e _108869 q _108870 _108871) = (term1224 _144530 _144607 _144645 P p pat e _108869 q _108870 _108871).
Proof. exact (@lem8200857 (term867 _144530 _144607 P p _108870 _108871) (term1225 _144530 _144607 _144645 P pat e _108869 q _108870 _108871)). Qed.
Lemma lem8200860 (a : Prop) : (term15 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8200861 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (_108870 : _144530 -> _144607) (_108871 : P) : (term946 _144530 _144607 P p _108870 _108871) = (term822 _144530 _144607 P p _108870 _108871).
Proof. exact (@lem8200860 (term822 _144530 _144607 P p _108870 _108871)). Qed.
Lemma lem8200862 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8200863 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (_108870 : _144530 -> _144607) (_108871 : P) : (term947 _144530 _144607 P p _108870 _108871) = (term948 _144530 _144607 P p _108870 _108871).
Proof. exact (MK_COMB (@lem8200862) (@lem8200861 _144530 _144607 P p _108870 _108871)). Qed.
Lemma lem8200865 (a : Prop) (b : Prop) : (term942 a b) = (term943 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem8200866 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (_108869 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108870 : _144530 -> _144607) (_108871 : P) : (term1226 _144530 _144607 _144645 P pat e _108869 q _108870 _108871) = (term1227 _144530 _144607 _144645 P pat e _108869 q _108870 _108871).
Proof. exact (@lem8200865 (term1096 _144530 _144607 _144645 P pat e _108870 _108871) (term1087 _144530 _144607 P _108869 q _108870 _108871)). Qed.
Lemma lem8200868 (a : Prop) : (term15 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8200869 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (_108870 : _144530 -> _144607) (_108871 : P) : (term1220 _144530 _144607 _144645 P pat e _108870 _108871) = ((term835 _144530 _144607 _144645 P pat _108870 _108871) = (term835 _144530 _144607 _144645 P e _108870 _108871)).
Proof. exact (@lem8200868 ((term835 _144530 _144607 _144645 P pat _108870 _108871) = (term835 _144530 _144607 _144645 P e _108870 _108871))). Qed.
Lemma lem8200870 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8200871 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (_108870 : _144530 -> _144607) (_108871 : P) : (term1221 _144530 _144607 _144645 P pat e _108870 _108871) = (term1222 _144530 _144607 _144645 P pat e _108870 _108871).
Proof. exact (MK_COMB (@lem8200870) (@lem8200869 _144530 _144607 _144645 P pat e _108870 _108871)). Qed.
Lemma lem8200873 (a : Prop) (b : Prop) : (term942 a b) = (term943 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem8200874 {_144530 _144607 P : Type'} (_108869 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108870 : _144530 -> _144607) (_108871 : P) : (term1228 _144530 _144607 P _108869 q _108870 _108871) = (term1229 _144530 _144607 P _108869 q _108870 _108871).
Proof. exact (@lem8200873 (term867 _144530 _144607 P q _108869 _108871) (term822 _144530 _144607 P q _108870 _108871)). Qed.
Lemma lem8200876 (a : Prop) : (term15 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8200877 {_144530 _144607 P : Type'} (q : type560 _144530 _144607 P) (_108869 : _144530 -> _144607) (_108871 : P) : (term946 _144530 _144607 P q _108869 _108871) = (term822 _144530 _144607 P q _108869 _108871).
Proof. exact (@lem8200876 (term822 _144530 _144607 P q _108869 _108871)). Qed.
Lemma lem8200878 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8200879 {_144530 _144607 P : Type'} (q : type560 _144530 _144607 P) (_108869 : _144530 -> _144607) (_108871 : P) : (term947 _144530 _144607 P q _108869 _108871) = (term948 _144530 _144607 P q _108869 _108871).
Proof. exact (MK_COMB (@lem8200878) (@lem8200877 _144530 _144607 P q _108869 _108871)). Qed.
Lemma lem8200880 {_144530 _144607 P : Type'} (q : type560 _144530 _144607 P) (_108870 : _144530 -> _144607) (_108871 : P) : (term867 _144530 _144607 P q _108870 _108871) = (term867 _144530 _144607 P q _108870 _108871).
Proof. exact (eq_refl (term867 _144530 _144607 P q _108870 _108871)). Qed.
Lemma lem8200881 {_144530 _144607 P : Type'} (_108869 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108870 : _144530 -> _144607) (_108871 : P) : (term1229 _144530 _144607 P _108869 q _108870 _108871) = (term1082 _144530 _144607 P _108869 q _108870 _108871).
Proof. exact (MK_COMB (@lem8200879 _144530 _144607 P q _108869 _108871) (@lem8200880 _144530 _144607 P q _108870 _108871)). Qed.
Lemma lem8200882 {_144530 _144607 P : Type'} (_108869 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108870 : _144530 -> _144607) (_108871 : P) : (term1228 _144530 _144607 P _108869 q _108870 _108871) = (term1082 _144530 _144607 P _108869 q _108870 _108871).
Proof. exact (TRANS (@lem8200874 _144530 _144607 P _108869 q _108870 _108871) (@lem8200881 _144530 _144607 P _108869 q _108870 _108871)). Qed.
Lemma lem8200883 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (_108869 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108870 : _144530 -> _144607) (_108871 : P) : (term1227 _144530 _144607 _144645 P pat e _108869 q _108870 _108871) = (term1230 _144530 _144607 _144645 P pat e _108869 q _108870 _108871).
Proof. exact (MK_COMB (@lem8200871 _144530 _144607 _144645 P pat e _108870 _108871) (@lem8200882 _144530 _144607 P _108869 q _108870 _108871)). Qed.
Lemma lem8200884 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (_108869 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108870 : _144530 -> _144607) (_108871 : P) : (term1226 _144530 _144607 _144645 P pat e _108869 q _108870 _108871) = (term1230 _144530 _144607 _144645 P pat e _108869 q _108870 _108871).
Proof. exact (TRANS (@lem8200866 _144530 _144607 _144645 P pat e _108869 q _108870 _108871) (@lem8200883 _144530 _144607 _144645 P pat e _108869 q _108870 _108871)). Qed.
Lemma lem8200885 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (_108869 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108870 : _144530 -> _144607) (_108871 : P) : (term1224 _144530 _144607 _144645 P p pat e _108869 q _108870 _108871) = (term1231 _144530 _144607 _144645 P p pat e _108869 q _108870 _108871).
Proof. exact (MK_COMB (@lem8200863 _144530 _144607 P p _108870 _108871) (@lem8200884 _144530 _144607 _144645 P pat e _108869 q _108870 _108871)). Qed.
Lemma lem8200886 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (_108869 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108870 : _144530 -> _144607) (_108871 : P) : (term1223 _144530 _144607 _144645 P p pat e _108869 q _108870 _108871) = (term1231 _144530 _144607 _144645 P p pat e _108869 q _108870 _108871).
Proof. exact (TRANS (@lem8200858 _144530 _144607 _144645 P p pat e _108869 q _108870 _108871) (@lem8200885 _144530 _144607 _144645 P p pat e _108869 q _108870 _108871)). Qed.
Lemma lem8200887 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (_108869 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108870 : _144530 -> _144607) (_108871 : P) : (term1219 _144530 _144607 _144645 P p pat e _108869 q _108870 _108871) = (term1232 _144530 _144607 _144645 P p pat e _108869 q _108870 _108871).
Proof. exact (MK_COMB (@lem8200855 _144530 _144607 _144645 P pat e _108869 _108871) (@lem8200886 _144530 _144607 _144645 P p pat e _108869 q _108870 _108871)). Qed.
Lemma lem8200888 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (_108869 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108870 : _144530 -> _144607) (_108871 : P) : (term1218 _144530 _144607 _144645 P p pat e _108869 q _108870 _108871) = (term1232 _144530 _144607 _144645 P p pat e _108869 q _108870 _108871).
Proof. exact (TRANS (@lem8200850 _144530 _144607 _144645 P p pat e _108869 q _108870 _108871) (@lem8200887 _144530 _144607 _144645 P p pat e _108869 q _108870 _108871)). Qed.
Lemma lem8200889 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (_108869 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108870 : _144530 -> _144607) (_108871 : P) : (term1216 _144530 _144607 _144645 P p pat e _108869 q _108870 _108871) = (term1233 _144530 _144607 _144645 P p pat e _108869 q _108870 _108871).
Proof. exact (MK_COMB (@lem8200847 _144530 _144607 P p _108869 _108871) (@lem8200888 _144530 _144607 _144645 P p pat e _108869 q _108870 _108871)). Qed.
Lemma lem8200890 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (_108869 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108870 : _144530 -> _144607) (_108871 : P) : (term1215 _144530 _144607 _144645 P p pat e _108869 q _108870 _108871) = (term1233 _144530 _144607 _144645 P p pat e _108869 q _108870 _108871).
Proof. exact (TRANS (@lem8200842 _144530 _144607 _144645 P p pat e _108869 q _108870 _108871) (@lem8200889 _144530 _144607 _144645 P p pat e _108869 q _108870 _108871)). Qed.
Lemma lem8200891 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8200892 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (_108869 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108870 : _144530 -> _144607) (_108871 : P) : (term1234 _144530 _144607 _144645 P p pat e _108869 q _108870 _108871) = (term1235 _144530 _144607 _144645 P p pat e _108869 q _108870 _108871).
Proof. exact (MK_COMB (@lem8200891) (@lem8200890 _144530 _144607 _144645 P p pat e _108869 q _108870 _108871)). Qed.
Lemma lem8200893 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (z' : type518 _144530 _144607 P) (_108869 : _144530 -> _144607) (_108870 : _144530 -> _144607) (s : P -> _144529) (_108871 : P) : (term862 _144529 _144530 _144607 P lt2 z' _108869 _108870 s _108871) = (term862 _144529 _144530 _144607 P lt2 z' _108869 _108870 s _108871).
Proof. exact (eq_refl (term862 _144529 _144530 _144607 P lt2 z' _108869 _108870 s _108871)). Qed.
Lemma lem8200894 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (z' : type518 _144530 _144607 P) (_108869 : _144530 -> _144607) (_108870 : _144530 -> _144607) (s : P -> _144529) (_108871 : P) : (term1214 _144529 _144530 _144607 _144645 P p pat e q lt2 z' _108869 _108870 s _108871) = (term1236 _144529 _144530 _144607 _144645 P p pat e q lt2 z' _108869 _108870 s _108871).
Proof. exact (MK_COMB (@lem8200892 _144530 _144607 _144645 P p pat e _108869 q _108870 _108871) (@lem8200893 _144529 _144530 _144607 P lt2 z' _108869 _108870 s _108871)). Qed.
Lemma lem8200895 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (z' : type518 _144530 _144607 P) (_108869 : _144530 -> _144607) (_108870 : _144530 -> _144607) (s : P -> _144529) (_108871 : P) : (term1213 _144529 _144530 _144607 _144645 P lt2 z' s p pat e _108869 q _108870 _108871) = (term1236 _144529 _144530 _144607 _144645 P p pat e q lt2 z' _108869 _108870 s _108871).
Proof. exact (TRANS (@lem8200839 _144529 _144530 _144607 _144645 P p pat e q lt2 z' _108869 _108870 s _108871) (@lem8200894 _144529 _144530 _144607 _144645 P p pat e q lt2 z' _108869 _108870 s _108871)). Qed.
Lemma lem8200897 {_144530 _144607 P : Type'} (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term867 _144530 _144607 P q g a) (h2 : term1082 _144530 _144607 P f q g a) : term1082 _144530 _144607 P f q g a.
Proof. exact (conj (@lem8200193 _144530 _144607 P f q g a h2) (@lem8200201 _144530 _144607 P q g a h1)). Qed.
Lemma lem8200898 {_144530 _144607 _144645 P : Type'} (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) (h1 : term867 _144530 _144607 P q g a) (h2 : term1082 _144530 _144607 P f q g a) (h3 : (pat g a) = (e g a)) : term1230 _144530 _144607 _144645 P pat e f q g a.
Proof. exact (conj (@lem8200186 _144530 _144607 _144645 P pat e g a h3) (@lem8200897 _144530 _144607 P f q g a h1 h2)). Qed.
Lemma lem8200899 {_144530 _144607 _144645 P : Type'} (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term867 _144530 _144607 P q g a) (h2 : term1082 _144530 _144607 P f q g a) (h3 : (pat g a) = (e g a)) (h4 : p g a) : term1231 _144530 _144607 _144645 P p pat e f q g a.
Proof. exact (conj (@lem8200179 _144530 _144607 P p g a h4) (@lem8200898 _144530 _144607 _144645 P f q pat e g a h1 h2 h3)). Qed.
Lemma lem8200900 {_144530 _144607 _144645 P : Type'} (q : type560 _144530 _144607 P) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term867 _144530 _144607 P q g a) (h2 : term1082 _144530 _144607 P f q g a) (h3 : (pat f a) = (e f a)) (h4 : (pat g a) = (e g a)) (h5 : p g a) : term1232 _144530 _144607 _144645 P p pat e f q g a.
Proof. exact (conj (@lem8200172 _144530 _144607 _144645 P pat e f a h3) (@lem8200899 _144530 _144607 _144645 P f q pat e p g a h1 h2 h4 h5)). Qed.
Lemma lem8200901 {_144530 _144607 _144645 P : Type'} (q : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term867 _144530 _144607 P q g a) (h2 : term1082 _144530 _144607 P f q g a) (h3 : (pat f a) = (e f a)) (h4 : (pat g a) = (e g a)) (h5 : p f a) (h6 : p g a) : term1233 _144530 _144607 _144645 P p pat e f q g a.
Proof. exact (conj (@lem8200165 _144530 _144607 P p f a h5) (@lem8200900 _144530 _144607 _144645 P q f pat e p g a h1 h2 h3 h4 h6)). Qed.
Lemma lem8200903 {_144529 _144530 _144607 _144645 P : Type'} (_108869 : _144530 -> _144607) (_108870 : _144530 -> _144607) (_108871 : P) (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z' : type518 _144530 _144607 P) (q : type560 _144530 _144607 P) (h1 : term814 _144529 _144530 _144607 _144645 P p pat e lt2 s z' q) : term1236 _144529 _144530 _144607 _144645 P p pat e q lt2 z' _108869 _108870 s _108871.
Proof. exact (EQ_MP (@lem8200895 _144529 _144530 _144607 _144645 P p pat e q lt2 z' _108869 _108870 s _108871) (@lem8200836 _144529 _144530 _144607 _144645 P _108869 _108870 _108871 p pat e lt2 s z' q h1)). Qed.
Lemma lem8200904 {_144529 _144530 _144607 _144645 P : Type'} (_108869 : _144530 -> _144607) (_108870 : _144530 -> _144607) (_108871 : P) (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z' : type518 _144530 _144607 P) (q : type560 _144530 _144607 P) (h1 : term814 _144529 _144530 _144607 _144645 P p pat e lt2 s z' q) : term1236 _144529 _144530 _144607 _144645 P p pat e q lt2 z' _108869 _108870 s _108871.
Proof. exact (@lem8200903 _144529 _144530 _144607 _144645 P _108869 _108870 _108871 p pat e lt2 s z' q h1). Qed.
Lemma lem8200905 {_144529 _144530 _144607 _144645 P : Type'} (f : _144530 -> _144607) (g : _144530 -> _144607) (a : P) (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z' : type518 _144530 _144607 P) (q : type560 _144530 _144607 P) (h1 : term814 _144529 _144530 _144607 _144645 P p pat e lt2 s z' q) : term1236 _144529 _144530 _144607 _144645 P p pat e q lt2 z' f g s a.
Proof. exact (@lem8200904 _144529 _144530 _144607 _144645 P f g a p pat e lt2 s z' q h1). Qed.
Lemma lem8200908 {_144529 _144530 _144607 _144645 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z' : type518 _144530 _144607 P) (q : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term814 _144529 _144530 _144607 _144645 P p pat e lt2 s z' q) (h2 : term867 _144530 _144607 P q g a) (h3 : term1082 _144530 _144607 P f q g a) (h4 : (pat f a) = (e f a)) (h5 : (pat g a) = (e g a)) (h6 : p f a) (h7 : p g a) : term862 _144529 _144530 _144607 P lt2 z' f g s a.
Proof. exact (@lem8200905 _144529 _144530 _144607 _144645 P f g a p pat e lt2 s z' q h1 (@lem8200901 _144530 _144607 _144645 P q pat e f p g a h2 h3 h4 h5 h6 h7)). Qed.
Lemma lem8200909 {_144529 _144530 _144607 _144645 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z' : type518 _144530 _144607 P) (q : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term814 _144529 _144530 _144607 _144645 P p pat e lt2 s z' q) (h2 : term867 _144530 _144607 P q g a) (h3 : term1082 _144530 _144607 P f q g a) (h4 : (pat f a) = (e f a)) (h5 : (pat g a) = (e g a)) (h6 : p f a) (h7 : p g a) : term956 _144529 _144530 _144607 P lt2 z' f g s a.
Proof. exact (fun h0 : term957 _144529 _144530 _144607 P lt2 z' f g s a => @lem8200908 _144529 _144530 _144607 _144645 P lt2 s z' q pat e f p g a h1 h2 h3 h4 h5 h6 h7). Qed.
Lemma lem8200911 (p : Prop) : (term57 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8200912 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (z' : type518 _144530 _144607 P) (f : _144530 -> _144607) (g : _144530 -> _144607) (s : P -> _144529) (a : P) : (term956 _144529 _144530 _144607 P lt2 z' f g s a) = (term862 _144529 _144530 _144607 P lt2 z' f g s a).
Proof. exact (@lem8200911 (term862 _144529 _144530 _144607 P lt2 z' f g s a)). Qed.
Lemma lem8200913 {_144529 _144530 _144607 _144645 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z' : type518 _144530 _144607 P) (q : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term814 _144529 _144530 _144607 _144645 P p pat e lt2 s z' q) (h2 : term867 _144530 _144607 P q g a) (h3 : term1082 _144530 _144607 P f q g a) (h4 : (pat f a) = (e f a)) (h5 : (pat g a) = (e g a)) (h6 : p f a) (h7 : p g a) : term862 _144529 _144530 _144607 P lt2 z' f g s a.
Proof. exact (EQ_MP (@lem8200912 _144529 _144530 _144607 P lt2 z' f g s a) (@lem8200909 _144529 _144530 _144607 _144645 P lt2 s z' q pat e f p g a h1 h2 h3 h4 h5 h6 h7)). Qed.
Lemma lem8200919 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem8200920 {_144529 _144530 _144607 P : Type'} (f : _144530 -> _144607) (g : _144530 -> _144607) (lt2 : type1470 _144529 _144530) (_108865 : _144530) (s : P -> _144529) (a : P) : (term832 _144529 _144530 _144607 P lt2 s a f g _108865) = (term958 _144529 _144530 _144607 P f g lt2 _108865 s a).
Proof. exact (@lem8200919 ((@I (_144530 -> _144607) f _108865) = (@I (_144530 -> _144607) g _108865)) (term829 _144529 _144530 P lt2 _108865 s a)). Qed.
Lemma lem8200928 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8200929 {_144529 _144530 _144607 P : Type'} (f : _144530 -> _144607) (g : _144530 -> _144607) (lt2 : type1470 _144529 _144530) (_108865 : _144530) (s : P -> _144529) (a : P) : (term959 _144529 _144530 _144607 P lt2 s a f g _108865) = (term960 _144529 _144530 _144607 P f g lt2 _108865 s a).
Proof. exact (MK_COMB (@lem8200928) (@lem8200920 _144529 _144530 _144607 P f g lt2 _108865 s a)). Qed.
Lemma lem8200937 {_144529 _144530 _144607 P : Type'} (f : _144530 -> _144607) (g : _144530 -> _144607) (lt2 : type1470 _144529 _144530) (_108865 : _144530) (s : P -> _144529) (a : P) : (term958 _144529 _144530 _144607 P f g lt2 _108865 s a) = (term958 _144529 _144530 _144607 P f g lt2 _108865 s a).
Proof. exact (eq_refl (term958 _144529 _144530 _144607 P f g lt2 _108865 s a)). Qed.
Lemma lem8200938 {_144529 _144530 _144607 P : Type'} (f : _144530 -> _144607) (g : _144530 -> _144607) (lt2 : type1470 _144529 _144530) (_108865 : _144530) (s : P -> _144529) (a : P) : ((term832 _144529 _144530 _144607 P lt2 s a f g _108865) = (term958 _144529 _144530 _144607 P f g lt2 _108865 s a)) = ((term958 _144529 _144530 _144607 P f g lt2 _108865 s a) = (term958 _144529 _144530 _144607 P f g lt2 _108865 s a)).
Proof. exact (MK_COMB (@lem8200929 _144529 _144530 _144607 P f g lt2 _108865 s a) (@lem8200937 _144529 _144530 _144607 P f g lt2 _108865 s a)). Qed.
Lemma lem8200940 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem20665 A x) (@lem20664 A x)). Qed.
Lemma lem8200941 (x : Prop) : (x = x) = True.
Proof. exact (@lem8200940 Prop x). Qed.
Lemma lem8200942 {_144529 _144530 _144607 P : Type'} (f : _144530 -> _144607) (g : _144530 -> _144607) (lt2 : type1470 _144529 _144530) (_108865 : _144530) (s : P -> _144529) (a : P) : ((term958 _144529 _144530 _144607 P f g lt2 _108865 s a) = (term958 _144529 _144530 _144607 P f g lt2 _108865 s a)) = True.
Proof. exact (@lem8200941 (term958 _144529 _144530 _144607 P f g lt2 _108865 s a)). Qed.
Lemma lem8200943 {_144529 _144530 _144607 P : Type'} (f : _144530 -> _144607) (g : _144530 -> _144607) (lt2 : type1470 _144529 _144530) (_108865 : _144530) (s : P -> _144529) (a : P) : ((term832 _144529 _144530 _144607 P lt2 s a f g _108865) = (term958 _144529 _144530 _144607 P f g lt2 _108865 s a)) = True.
Proof. exact (TRANS (@lem8200938 _144529 _144530 _144607 P f g lt2 _108865 s a) (@lem8200942 _144529 _144530 _144607 P f g lt2 _108865 s a)). Qed.
Lemma lem8200944 {_144529 _144530 _144607 P : Type'} (f : _144530 -> _144607) (g : _144530 -> _144607) (lt2 : type1470 _144529 _144530) (_108865 : _144530) (s : P -> _144529) (a : P) : True = ((term832 _144529 _144530 _144607 P lt2 s a f g _108865) = (term958 _144529 _144530 _144607 P f g lt2 _108865 s a)).
Proof. exact (SYM (@lem8200943 _144529 _144530 _144607 P f g lt2 _108865 s a)). Qed.
Lemma lem8200945 {_144529 _144530 _144607 P : Type'} (f : _144530 -> _144607) (g : _144530 -> _144607) (lt2 : type1470 _144529 _144530) (_108865 : _144530) (s : P -> _144529) (a : P) : (term832 _144529 _144530 _144607 P lt2 s a f g _108865) = (term958 _144529 _144530 _144607 P f g lt2 _108865 s a).
Proof. exact (EQ_MP (@lem8200944 _144529 _144530 _144607 P f g lt2 _108865 s a) (@lem0)). Qed.
Lemma lem8200946 {_144529 _144530 _144607 P : Type'} (_108865 : _144530) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) : term958 _144529 _144530 _144607 P f g lt2 _108865 s a.
Proof. exact (EQ_MP (@lem8200945 _144529 _144530 _144607 P f g lt2 _108865 s a) (@lem8199111 _144529 _144530 _144607 P _108865 lt2 s a f g h1)). Qed.
Lemma lem8200948 (b : Prop) (a : Prop) : (a \/ b) = (term940 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem8200949 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (_108865 : _144530) : (term958 _144529 _144530 _144607 P f g lt2 _108865 s a) = (term961 _144529 _144530 _144607 P lt2 s a f g _108865).
Proof. exact (@lem8200948 (term829 _144529 _144530 P lt2 _108865 s a) ((@I (_144530 -> _144607) f _108865) = (@I (_144530 -> _144607) g _108865))). Qed.
Lemma lem8200951 (a : Prop) : (term15 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8200952 {_144529 _144530 P : Type'} (lt2 : type1470 _144529 _144530) (_108865 : _144530) (s : P -> _144529) (a : P) : (term962 _144529 _144530 P lt2 _108865 s a) = (term827 _144529 _144530 P lt2 _108865 s a).
Proof. exact (@lem8200951 (term827 _144529 _144530 P lt2 _108865 s a)). Qed.
Lemma lem8200953 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8200954 {_144529 _144530 P : Type'} (lt2 : type1470 _144529 _144530) (_108865 : _144530) (s : P -> _144529) (a : P) : (term963 _144529 _144530 P lt2 _108865 s a) = (term964 _144529 _144530 P lt2 _108865 s a).
Proof. exact (MK_COMB (@lem8200953) (@lem8200952 _144529 _144530 P lt2 _108865 s a)). Qed.
Lemma lem8200955 {_144530 _144607 : Type'} (f : _144530 -> _144607) (g : _144530 -> _144607) (_108865 : _144530) : ((@I (_144530 -> _144607) f _108865) = (@I (_144530 -> _144607) g _108865)) = ((@I (_144530 -> _144607) f _108865) = (@I (_144530 -> _144607) g _108865)).
Proof. exact (eq_refl ((@I (_144530 -> _144607) f _108865) = (@I (_144530 -> _144607) g _108865))). Qed.
Lemma lem8200956 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (_108865 : _144530) : (term961 _144529 _144530 _144607 P lt2 s a f g _108865) = (term965 _144529 _144530 _144607 P lt2 s a f g _108865).
Proof. exact (MK_COMB (@lem8200954 _144529 _144530 P lt2 _108865 s a) (@lem8200955 _144530 _144607 f g _108865)). Qed.
Lemma lem8200957 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (_108865 : _144530) : (term958 _144529 _144530 _144607 P f g lt2 _108865 s a) = (term965 _144529 _144530 _144607 P lt2 s a f g _108865).
Proof. exact (TRANS (@lem8200949 _144529 _144530 _144607 P lt2 s a f g _108865) (@lem8200956 _144529 _144530 _144607 P lt2 s a f g _108865)). Qed.
Lemma lem8200960 {_144529 _144530 _144607 P : Type'} (_108865 : _144530) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) : term965 _144529 _144530 _144607 P lt2 s a f g _108865.
Proof. exact (EQ_MP (@lem8200957 _144529 _144530 _144607 P lt2 s a f g _108865) (@lem8200946 _144529 _144530 _144607 P _108865 lt2 s a f g h1)). Qed.
Lemma lem8200961 {_144529 _144530 _144607 P : Type'} (_108865 : _144530) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) : term965 _144529 _144530 _144607 P lt2 s a f g _108865.
Proof. exact (@lem8200960 _144529 _144530 _144607 P _108865 lt2 s a f g h1). Qed.
Lemma lem8200962 {_144529 _144530 _144607 P : Type'} (z' : type518 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) : term966 _144529 _144530 _144607 P lt2 s z' f g a.
Proof. exact (@lem8200961 _144529 _144530 _144607 P (term845 _144530 _144607 P z' f g a) lt2 s a f g h1). Qed.
Lemma lem8200965 {_144529 _144530 _144607 _144645 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z' : type518 _144530 _144607 P) (q : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) (h2 : term814 _144529 _144530 _144607 _144645 P p pat e lt2 s z' q) (h3 : term867 _144530 _144607 P q g a) (h4 : term1082 _144530 _144607 P f q g a) (h5 : (pat f a) = (e f a)) (h6 : (pat g a) = (e g a)) (h7 : p f a) (h8 : p g a) : (term848 _144530 _144607 P z' f g a) = (term851 _144530 _144607 P z' f g a).
Proof. exact (@lem8200962 _144529 _144530 _144607 P z' lt2 s a f g h1 (@lem8200913 _144529 _144530 _144607 _144645 P lt2 s z' q pat e f p g a h2 h3 h4 h5 h6 h7 h8)). Qed.
Lemma lem8200966 {_144529 _144530 _144607 _144645 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z' : type518 _144530 _144607 P) (q : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) (h2 : term814 _144529 _144530 _144607 _144645 P p pat e lt2 s z' q) (h3 : term867 _144530 _144607 P q g a) (h4 : term1082 _144530 _144607 P f q g a) (h5 : (pat f a) = (e f a)) (h6 : (pat g a) = (e g a)) (h7 : p f a) (h8 : p g a) : term967 _144530 _144607 P z' f g a.
Proof. exact (fun h0 : term855 _144530 _144607 P z' f g a => @lem8200965 _144529 _144530 _144607 _144645 P lt2 s z' q pat e f p g a h1 h2 h3 h4 h5 h6 h7 h8). Qed.
Lemma lem8200968 (p : Prop) : (term57 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8200969 {_144530 _144607 P : Type'} (z' : type518 _144530 _144607 P) (f : _144530 -> _144607) (g : _144530 -> _144607) (a : P) : (term967 _144530 _144607 P z' f g a) = ((term848 _144530 _144607 P z' f g a) = (term851 _144530 _144607 P z' f g a)).
Proof. exact (@lem8200968 ((term848 _144530 _144607 P z' f g a) = (term851 _144530 _144607 P z' f g a))). Qed.
Lemma lem8200970 {_144529 _144530 _144607 _144645 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z' : type518 _144530 _144607 P) (q : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) (h2 : term814 _144529 _144530 _144607 _144645 P p pat e lt2 s z' q) (h3 : term867 _144530 _144607 P q g a) (h4 : term1082 _144530 _144607 P f q g a) (h5 : (pat f a) = (e f a)) (h6 : (pat g a) = (e g a)) (h7 : p f a) (h8 : p g a) : (term848 _144530 _144607 P z' f g a) = (term851 _144530 _144607 P z' f g a).
Proof. exact (EQ_MP (@lem8200969 _144530 _144607 P z' f g a) (@lem8200966 _144529 _144530 _144607 _144645 P lt2 s z' q pat e f p g a h1 h2 h3 h4 h5 h6 h7 h8)). Qed.
Lemma lem8200972 {_144530 _144607 P : Type'} (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term1082 _144530 _144607 P f q g a) : term822 _144530 _144607 P q f a.
Proof. exact (proj1 (@lem8198192 _144530 _144607 P f q g a h1)). Qed.
Lemma lem8200973 {_144530 _144607 P : Type'} (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term1082 _144530 _144607 P f q g a) : term916 _144530 _144607 P q f a.
Proof. exact (fun h0 : term867 _144530 _144607 P q f a => @lem8200972 _144530 _144607 P f q g a h1). Qed.
Lemma lem8200975 (p : Prop) : (term57 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8200976 {_144530 _144607 P : Type'} (q : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) : (term916 _144530 _144607 P q f a) = (term822 _144530 _144607 P q f a).
Proof. exact (@lem8200975 (term822 _144530 _144607 P q f a)). Qed.
Lemma lem8200977 {_144530 _144607 P : Type'} (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term1082 _144530 _144607 P f q g a) : term822 _144530 _144607 P q f a.
Proof. exact (EQ_MP (@lem8200976 _144530 _144607 P q f a) (@lem8200973 _144530 _144607 P f q g a h1)). Qed.
Lemma lem8200983 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8200984 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (z' : type518 _144530 _144607 P) (_108869 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108870 : _144530 -> _144607) (_108871 : P) : (term1159 _144530 _144607 _144645 P p pat e z' _108869 q _108870 _108871) = (term1237 _144530 _144607 _144645 P p pat e z' _108869 q _108870 _108871).
Proof. exact (@lem8200983 (term1096 _144530 _144607 _144645 P pat e _108869 _108871) (term867 _144530 _144607 P p _108869 _108871) (term1156 _144530 _144607 _144645 P p pat e z' _108869 q _108870 _108871)). Qed.
Lemma lem8201010 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8201011 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (z' : type518 _144530 _144607 P) (_108869 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108870 : _144530 -> _144607) (_108871 : P) : (term1156 _144530 _144607 _144645 P p pat e z' _108869 q _108870 _108871) = (term1238 _144530 _144607 _144645 P pat e p z' _108869 q _108870 _108871).
Proof. exact (@lem8201010 (term1096 _144530 _144607 _144645 P pat e _108870 _108871) (term867 _144530 _144607 P p _108870 _108871) (term1157 _144530 _144607 P z' _108869 q _108870 _108871)). Qed.
Lemma lem8201027 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8201028 {_144530 _144607 P : Type'} (z' : type518 _144530 _144607 P) (p : type560 _144530 _144607 P) (_108869 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108870 : _144530 -> _144607) (_108871 : P) : (term1239 _144530 _144607 P p z' _108869 q _108870 _108871) = (term1240 _144530 _144607 P z' p _108869 q _108870 _108871).
Proof. exact (@lem8201027 (term855 _144530 _144607 P z' _108869 _108870 _108871) (term867 _144530 _144607 P p _108870 _108871) (term1087 _144530 _144607 P _108869 q _108870 _108871)). Qed.
Lemma lem8201054 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem8201055 {_144530 _144607 P : Type'} (_108870 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108869 : _144530 -> _144607) (_108871 : P) : (term1087 _144530 _144607 P _108869 q _108870 _108871) = (term1091 _144530 _144607 P _108870 q _108869 _108871).
Proof. exact (@lem8201054 (term822 _144530 _144607 P q _108870 _108871) (term867 _144530 _144607 P q _108869 _108871)). Qed.
Lemma lem8201061 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (_108870 : _144530 -> _144607) (_108871 : P) : (term868 _144530 _144607 P p _108870 _108871) = (term868 _144530 _144607 P p _108870 _108871).
Proof. exact (eq_refl (term868 _144530 _144607 P p _108870 _108871)). Qed.
Lemma lem8201062 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (_108870 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108869 : _144530 -> _144607) (_108871 : P) : (term1180 _144530 _144607 P p _108869 q _108870 _108871) = (term1181 _144530 _144607 P p _108870 q _108869 _108871).
Proof. exact (MK_COMB (@lem8201061 _144530 _144607 P p _108870 _108871) (@lem8201055 _144530 _144607 P _108870 q _108869 _108871)). Qed.
Lemma lem8201066 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8201067 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (_108870 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108869 : _144530 -> _144607) (_108871 : P) : (term1181 _144530 _144607 P p _108870 q _108869 _108871) = (term1182 _144530 _144607 P p _108870 q _108869 _108871).
Proof. exact (@lem8201066 (term822 _144530 _144607 P q _108870 _108871) (term867 _144530 _144607 P p _108870 _108871) (term867 _144530 _144607 P q _108869 _108871)). Qed.
Lemma lem8201083 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (_108870 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108869 : _144530 -> _144607) (_108871 : P) : (term1180 _144530 _144607 P p _108869 q _108870 _108871) = (term1182 _144530 _144607 P p _108870 q _108869 _108871).
Proof. exact (TRANS (@lem8201062 _144530 _144607 P p _108870 q _108869 _108871) (@lem8201067 _144530 _144607 P p _108870 q _108869 _108871)). Qed.
Lemma lem8201084 {_144530 _144607 P : Type'} (z' : type518 _144530 _144607 P) (_108869 : _144530 -> _144607) (_108870 : _144530 -> _144607) (_108871 : P) : (term969 _144530 _144607 P z' _108869 _108870 _108871) = (term969 _144530 _144607 P z' _108869 _108870 _108871).
Proof. exact (eq_refl (term969 _144530 _144607 P z' _108869 _108870 _108871)). Qed.
Lemma lem8201085 {_144530 _144607 P : Type'} (z' : type518 _144530 _144607 P) (p : type560 _144530 _144607 P) (_108870 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108869 : _144530 -> _144607) (_108871 : P) : (term1240 _144530 _144607 P z' p _108869 q _108870 _108871) = (term1241 _144530 _144607 P z' p _108870 q _108869 _108871).
Proof. exact (MK_COMB (@lem8201084 _144530 _144607 P z' _108869 _108870 _108871) (@lem8201083 _144530 _144607 P p _108870 q _108869 _108871)). Qed.
Lemma lem8201089 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8201090 {_144530 _144607 P : Type'} (z' : type518 _144530 _144607 P) (p : type560 _144530 _144607 P) (_108870 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108869 : _144530 -> _144607) (_108871 : P) : (term1241 _144530 _144607 P z' p _108870 q _108869 _108871) = (term1242 _144530 _144607 P z' p _108870 q _108869 _108871).
Proof. exact (@lem8201089 (term822 _144530 _144607 P q _108870 _108871) (term855 _144530 _144607 P z' _108869 _108870 _108871) (term1189 _144530 _144607 P p _108870 q _108869 _108871)). Qed.
Lemma lem8201118 {_144530 _144607 P : Type'} (z' : type518 _144530 _144607 P) (p : type560 _144530 _144607 P) (_108870 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108869 : _144530 -> _144607) (_108871 : P) : (term1240 _144530 _144607 P z' p _108869 q _108870 _108871) = (term1242 _144530 _144607 P z' p _108870 q _108869 _108871).
Proof. exact (TRANS (@lem8201085 _144530 _144607 P z' p _108870 q _108869 _108871) (@lem8201090 _144530 _144607 P z' p _108870 q _108869 _108871)). Qed.
Lemma lem8201119 {_144530 _144607 P : Type'} (z' : type518 _144530 _144607 P) (p : type560 _144530 _144607 P) (_108870 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108869 : _144530 -> _144607) (_108871 : P) : (term1239 _144530 _144607 P p z' _108869 q _108870 _108871) = (term1242 _144530 _144607 P z' p _108870 q _108869 _108871).
Proof. exact (TRANS (@lem8201028 _144530 _144607 P z' p _108869 q _108870 _108871) (@lem8201118 _144530 _144607 P z' p _108870 q _108869 _108871)). Qed.
Lemma lem8201120 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (_108870 : _144530 -> _144607) (_108871 : P) : (term1184 _144530 _144607 _144645 P pat e _108870 _108871) = (term1184 _144530 _144607 _144645 P pat e _108870 _108871).
Proof. exact (eq_refl (term1184 _144530 _144607 _144645 P pat e _108870 _108871)). Qed.
Lemma lem8201121 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (z' : type518 _144530 _144607 P) (p : type560 _144530 _144607 P) (_108870 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108869 : _144530 -> _144607) (_108871 : P) : (term1238 _144530 _144607 _144645 P pat e p z' _108869 q _108870 _108871) = (term1243 _144530 _144607 _144645 P pat e z' p _108870 q _108869 _108871).
Proof. exact (MK_COMB (@lem8201120 _144530 _144607 _144645 P pat e _108870 _108871) (@lem8201119 _144530 _144607 P z' p _108870 q _108869 _108871)). Qed.
Lemma lem8201125 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8201126 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (z' : type518 _144530 _144607 P) (p : type560 _144530 _144607 P) (_108870 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108869 : _144530 -> _144607) (_108871 : P) : (term1243 _144530 _144607 _144645 P pat e z' p _108870 q _108869 _108871) = (term1244 _144530 _144607 _144645 P pat e z' p _108870 q _108869 _108871).
Proof. exact (@lem8201125 (term822 _144530 _144607 P q _108870 _108871) (term1096 _144530 _144607 _144645 P pat e _108870 _108871) (term1245 _144530 _144607 P z' p _108870 q _108869 _108871)). Qed.
Lemma lem8201140 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8201141 {_144530 _144607 _144645 P : Type'} (z' : type518 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_108870 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108869 : _144530 -> _144607) (_108871 : P) : (term1246 _144530 _144607 _144645 P pat e z' p _108870 q _108869 _108871) = (term1247 _144530 _144607 _144645 P z' pat e p _108870 q _108869 _108871).
Proof. exact (@lem8201140 (term855 _144530 _144607 P z' _108869 _108870 _108871) (term1096 _144530 _144607 _144645 P pat e _108870 _108871) (term1189 _144530 _144607 P p _108870 q _108869 _108871)). Qed.
Lemma lem8201171 {_144530 _144607 P : Type'} (q : type560 _144530 _144607 P) (_108870 : _144530 -> _144607) (_108871 : P) : (term1089 _144530 _144607 P q _108870 _108871) = (term1089 _144530 _144607 P q _108870 _108871).
Proof. exact (eq_refl (term1089 _144530 _144607 P q _108870 _108871)). Qed.
Lemma lem8201172 {_144530 _144607 _144645 P : Type'} (z' : type518 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_108870 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108869 : _144530 -> _144607) (_108871 : P) : (term1244 _144530 _144607 _144645 P pat e z' p _108870 q _108869 _108871) = (term1248 _144530 _144607 _144645 P z' pat e p _108870 q _108869 _108871).
Proof. exact (MK_COMB (@lem8201171 _144530 _144607 P q _108870 _108871) (@lem8201141 _144530 _144607 _144645 P z' pat e p _108870 q _108869 _108871)). Qed.
Lemma lem8201183 {_144530 _144607 _144645 P : Type'} (z' : type518 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_108870 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108869 : _144530 -> _144607) (_108871 : P) : (term1243 _144530 _144607 _144645 P pat e z' p _108870 q _108869 _108871) = (term1248 _144530 _144607 _144645 P z' pat e p _108870 q _108869 _108871).
Proof. exact (TRANS (@lem8201126 _144530 _144607 _144645 P pat e z' p _108870 q _108869 _108871) (@lem8201172 _144530 _144607 _144645 P z' pat e p _108870 q _108869 _108871)). Qed.
Lemma lem8201184 {_144530 _144607 _144645 P : Type'} (z' : type518 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_108870 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108869 : _144530 -> _144607) (_108871 : P) : (term1238 _144530 _144607 _144645 P pat e p z' _108869 q _108870 _108871) = (term1248 _144530 _144607 _144645 P z' pat e p _108870 q _108869 _108871).
Proof. exact (TRANS (@lem8201121 _144530 _144607 _144645 P pat e z' p _108870 q _108869 _108871) (@lem8201183 _144530 _144607 _144645 P z' pat e p _108870 q _108869 _108871)). Qed.
Lemma lem8201185 {_144530 _144607 _144645 P : Type'} (z' : type518 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_108870 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108869 : _144530 -> _144607) (_108871 : P) : (term1156 _144530 _144607 _144645 P p pat e z' _108869 q _108870 _108871) = (term1248 _144530 _144607 _144645 P z' pat e p _108870 q _108869 _108871).
Proof. exact (TRANS (@lem8201011 _144530 _144607 _144645 P pat e p z' _108869 q _108870 _108871) (@lem8201184 _144530 _144607 _144645 P z' pat e p _108870 q _108869 _108871)). Qed.
Lemma lem8201186 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (_108869 : _144530 -> _144607) (_108871 : P) : (term868 _144530 _144607 P p _108869 _108871) = (term868 _144530 _144607 P p _108869 _108871).
Proof. exact (eq_refl (term868 _144530 _144607 P p _108869 _108871)). Qed.
Lemma lem8201187 {_144530 _144607 _144645 P : Type'} (z' : type518 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_108870 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108869 : _144530 -> _144607) (_108871 : P) : (term1249 _144530 _144607 _144645 P p pat e z' _108869 q _108870 _108871) = (term1250 _144530 _144607 _144645 P z' pat e p _108870 q _108869 _108871).
Proof. exact (MK_COMB (@lem8201186 _144530 _144607 P p _108869 _108871) (@lem8201185 _144530 _144607 _144645 P z' pat e p _108870 q _108869 _108871)). Qed.
Lemma lem8201191 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8201192 {_144530 _144607 _144645 P : Type'} (z' : type518 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_108870 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108869 : _144530 -> _144607) (_108871 : P) : (term1250 _144530 _144607 _144645 P z' pat e p _108870 q _108869 _108871) = (term1251 _144530 _144607 _144645 P z' pat e p _108870 q _108869 _108871).
Proof. exact (@lem8201191 (term822 _144530 _144607 P q _108870 _108871) (term867 _144530 _144607 P p _108869 _108871) (term1247 _144530 _144607 _144645 P z' pat e p _108870 q _108869 _108871)). Qed.
Lemma lem8201206 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8201207 {_144530 _144607 _144645 P : Type'} (z' : type518 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_108870 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108869 : _144530 -> _144607) (_108871 : P) : (term1252 _144530 _144607 _144645 P z' pat e p _108870 q _108869 _108871) = (term1253 _144530 _144607 _144645 P z' pat e p _108870 q _108869 _108871).
Proof. exact (@lem8201206 (term855 _144530 _144607 P z' _108869 _108870 _108871) (term867 _144530 _144607 P p _108869 _108871) (term1196 _144530 _144607 _144645 P pat e p _108870 q _108869 _108871)). Qed.
Lemma lem8201223 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8201224 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_108870 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108869 : _144530 -> _144607) (_108871 : P) : (term1197 _144530 _144607 _144645 P pat e p _108870 q _108869 _108871) = (term1198 _144530 _144607 _144645 P pat e p _108870 q _108869 _108871).
Proof. exact (@lem8201223 (term1096 _144530 _144607 _144645 P pat e _108870 _108871) (term867 _144530 _144607 P p _108869 _108871) (term1189 _144530 _144607 P p _108870 q _108869 _108871)). Qed.
Lemma lem8201252 {_144530 _144607 P : Type'} (z' : type518 _144530 _144607 P) (_108869 : _144530 -> _144607) (_108870 : _144530 -> _144607) (_108871 : P) : (term969 _144530 _144607 P z' _108869 _108870 _108871) = (term969 _144530 _144607 P z' _108869 _108870 _108871).
Proof. exact (eq_refl (term969 _144530 _144607 P z' _108869 _108870 _108871)). Qed.
Lemma lem8201253 {_144530 _144607 _144645 P : Type'} (z' : type518 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_108870 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108869 : _144530 -> _144607) (_108871 : P) : (term1253 _144530 _144607 _144645 P z' pat e p _108870 q _108869 _108871) = (term1254 _144530 _144607 _144645 P z' pat e p _108870 q _108869 _108871).
Proof. exact (MK_COMB (@lem8201252 _144530 _144607 P z' _108869 _108870 _108871) (@lem8201224 _144530 _144607 _144645 P pat e p _108870 q _108869 _108871)). Qed.
Lemma lem8201264 {_144530 _144607 _144645 P : Type'} (z' : type518 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_108870 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108869 : _144530 -> _144607) (_108871 : P) : (term1252 _144530 _144607 _144645 P z' pat e p _108870 q _108869 _108871) = (term1254 _144530 _144607 _144645 P z' pat e p _108870 q _108869 _108871).
Proof. exact (TRANS (@lem8201207 _144530 _144607 _144645 P z' pat e p _108870 q _108869 _108871) (@lem8201253 _144530 _144607 _144645 P z' pat e p _108870 q _108869 _108871)). Qed.
Lemma lem8201265 {_144530 _144607 P : Type'} (q : type560 _144530 _144607 P) (_108870 : _144530 -> _144607) (_108871 : P) : (term1089 _144530 _144607 P q _108870 _108871) = (term1089 _144530 _144607 P q _108870 _108871).
Proof. exact (eq_refl (term1089 _144530 _144607 P q _108870 _108871)). Qed.
Lemma lem8201266 {_144530 _144607 _144645 P : Type'} (z' : type518 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_108870 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108869 : _144530 -> _144607) (_108871 : P) : (term1251 _144530 _144607 _144645 P z' pat e p _108870 q _108869 _108871) = (term1255 _144530 _144607 _144645 P z' pat e p _108870 q _108869 _108871).
Proof. exact (MK_COMB (@lem8201265 _144530 _144607 P q _108870 _108871) (@lem8201264 _144530 _144607 _144645 P z' pat e p _108870 q _108869 _108871)). Qed.
Lemma lem8201277 {_144530 _144607 _144645 P : Type'} (z' : type518 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_108870 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108869 : _144530 -> _144607) (_108871 : P) : (term1250 _144530 _144607 _144645 P z' pat e p _108870 q _108869 _108871) = (term1255 _144530 _144607 _144645 P z' pat e p _108870 q _108869 _108871).
Proof. exact (TRANS (@lem8201192 _144530 _144607 _144645 P z' pat e p _108870 q _108869 _108871) (@lem8201266 _144530 _144607 _144645 P z' pat e p _108870 q _108869 _108871)). Qed.
Lemma lem8201278 {_144530 _144607 _144645 P : Type'} (z' : type518 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_108870 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108869 : _144530 -> _144607) (_108871 : P) : (term1249 _144530 _144607 _144645 P p pat e z' _108869 q _108870 _108871) = (term1255 _144530 _144607 _144645 P z' pat e p _108870 q _108869 _108871).
Proof. exact (TRANS (@lem8201187 _144530 _144607 _144645 P z' pat e p _108870 q _108869 _108871) (@lem8201277 _144530 _144607 _144645 P z' pat e p _108870 q _108869 _108871)). Qed.
Lemma lem8201279 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (_108869 : _144530 -> _144607) (_108871 : P) : (term1184 _144530 _144607 _144645 P pat e _108869 _108871) = (term1184 _144530 _144607 _144645 P pat e _108869 _108871).
Proof. exact (eq_refl (term1184 _144530 _144607 _144645 P pat e _108869 _108871)). Qed.
Lemma lem8201280 {_144530 _144607 _144645 P : Type'} (z' : type518 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_108870 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108869 : _144530 -> _144607) (_108871 : P) : (term1237 _144530 _144607 _144645 P p pat e z' _108869 q _108870 _108871) = (term1256 _144530 _144607 _144645 P z' pat e p _108870 q _108869 _108871).
Proof. exact (MK_COMB (@lem8201279 _144530 _144607 _144645 P pat e _108869 _108871) (@lem8201278 _144530 _144607 _144645 P z' pat e p _108870 q _108869 _108871)). Qed.
Lemma lem8201284 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8201285 {_144530 _144607 _144645 P : Type'} (z' : type518 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_108870 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108869 : _144530 -> _144607) (_108871 : P) : (term1256 _144530 _144607 _144645 P z' pat e p _108870 q _108869 _108871) = (term1257 _144530 _144607 _144645 P z' pat e p _108870 q _108869 _108871).
Proof. exact (@lem8201284 (term822 _144530 _144607 P q _108870 _108871) (term1096 _144530 _144607 _144645 P pat e _108869 _108871) (term1254 _144530 _144607 _144645 P z' pat e p _108870 q _108869 _108871)). Qed.
Lemma lem8201299 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8201300 {_144530 _144607 _144645 P : Type'} (z' : type518 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_108870 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108869 : _144530 -> _144607) (_108871 : P) : (term1258 _144530 _144607 _144645 P z' pat e p _108870 q _108869 _108871) = (term1259 _144530 _144607 _144645 P z' pat e p _108870 q _108869 _108871).
Proof. exact (@lem8201299 (term855 _144530 _144607 P z' _108869 _108870 _108871) (term1096 _144530 _144607 _144645 P pat e _108869 _108871) (term1198 _144530 _144607 _144645 P pat e p _108870 q _108869 _108871)). Qed.
Lemma lem8201352 {_144530 _144607 P : Type'} (q : type560 _144530 _144607 P) (_108870 : _144530 -> _144607) (_108871 : P) : (term1089 _144530 _144607 P q _108870 _108871) = (term1089 _144530 _144607 P q _108870 _108871).
Proof. exact (eq_refl (term1089 _144530 _144607 P q _108870 _108871)). Qed.
Lemma lem8201353 {_144530 _144607 _144645 P : Type'} (z' : type518 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_108870 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108869 : _144530 -> _144607) (_108871 : P) : (term1257 _144530 _144607 _144645 P z' pat e p _108870 q _108869 _108871) = (term1260 _144530 _144607 _144645 P z' pat e p _108870 q _108869 _108871).
Proof. exact (MK_COMB (@lem8201352 _144530 _144607 P q _108870 _108871) (@lem8201300 _144530 _144607 _144645 P z' pat e p _108870 q _108869 _108871)). Qed.
Lemma lem8201364 {_144530 _144607 _144645 P : Type'} (z' : type518 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_108870 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108869 : _144530 -> _144607) (_108871 : P) : (term1256 _144530 _144607 _144645 P z' pat e p _108870 q _108869 _108871) = (term1260 _144530 _144607 _144645 P z' pat e p _108870 q _108869 _108871).
Proof. exact (TRANS (@lem8201285 _144530 _144607 _144645 P z' pat e p _108870 q _108869 _108871) (@lem8201353 _144530 _144607 _144645 P z' pat e p _108870 q _108869 _108871)). Qed.
Lemma lem8201365 {_144530 _144607 _144645 P : Type'} (z' : type518 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_108870 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108869 : _144530 -> _144607) (_108871 : P) : (term1237 _144530 _144607 _144645 P p pat e z' _108869 q _108870 _108871) = (term1260 _144530 _144607 _144645 P z' pat e p _108870 q _108869 _108871).
Proof. exact (TRANS (@lem8201280 _144530 _144607 _144645 P z' pat e p _108870 q _108869 _108871) (@lem8201364 _144530 _144607 _144645 P z' pat e p _108870 q _108869 _108871)). Qed.
Lemma lem8201366 {_144530 _144607 _144645 P : Type'} (z' : type518 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_108870 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108869 : _144530 -> _144607) (_108871 : P) : (term1159 _144530 _144607 _144645 P p pat e z' _108869 q _108870 _108871) = (term1260 _144530 _144607 _144645 P z' pat e p _108870 q _108869 _108871).
Proof. exact (TRANS (@lem8200984 _144530 _144607 _144645 P p pat e z' _108869 q _108870 _108871) (@lem8201365 _144530 _144607 _144645 P z' pat e p _108870 q _108869 _108871)). Qed.
Lemma lem8201367 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8201368 {_144530 _144607 _144645 P : Type'} (z' : type518 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_108870 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108869 : _144530 -> _144607) (_108871 : P) : (term1261 _144530 _144607 _144645 P p pat e z' _108869 q _108870 _108871) = (term1262 _144530 _144607 _144645 P z' pat e p _108870 q _108869 _108871).
Proof. exact (MK_COMB (@lem8201367) (@lem8201366 _144530 _144607 _144645 P z' pat e p _108870 q _108869 _108871)). Qed.
Lemma lem8201382 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8201383 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (z' : type518 _144530 _144607 P) (_108870 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108869 : _144530 -> _144607) (_108871 : P) : (term1263 _144530 _144607 _144645 P p pat e z' _108870 q _108869 _108871) = (term1264 _144530 _144607 _144645 P p pat e z' _108870 q _108869 _108871).
Proof. exact (@lem8201382 (term1096 _144530 _144607 _144645 P pat e _108869 _108871) (term867 _144530 _144607 P p _108869 _108871) (term1265 _144530 _144607 _144645 P p pat e z' _108870 q _108869 _108871)). Qed.
Lemma lem8201409 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8201410 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (z' : type518 _144530 _144607 P) (_108870 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108869 : _144530 -> _144607) (_108871 : P) : (term1265 _144530 _144607 _144645 P p pat e z' _108870 q _108869 _108871) = (term1266 _144530 _144607 _144645 P pat e p z' _108870 q _108869 _108871).
Proof. exact (@lem8201409 (term1096 _144530 _144607 _144645 P pat e _108870 _108871) (term867 _144530 _144607 P p _108870 _108871) (term1267 _144530 _144607 P z' _108870 q _108869 _108871)). Qed.
Lemma lem8201426 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8201427 {_144530 _144607 P : Type'} (z' : type518 _144530 _144607 P) (p : type560 _144530 _144607 P) (_108870 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108869 : _144530 -> _144607) (_108871 : P) : (term1268 _144530 _144607 P p z' _108870 q _108869 _108871) = (term1245 _144530 _144607 P z' p _108870 q _108869 _108871).
Proof. exact (@lem8201426 (term855 _144530 _144607 P z' _108869 _108870 _108871) (term867 _144530 _144607 P p _108870 _108871) (term867 _144530 _144607 P q _108869 _108871)). Qed.
Lemma lem8201445 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (_108870 : _144530 -> _144607) (_108871 : P) : (term1184 _144530 _144607 _144645 P pat e _108870 _108871) = (term1184 _144530 _144607 _144645 P pat e _108870 _108871).
Proof. exact (eq_refl (term1184 _144530 _144607 _144645 P pat e _108870 _108871)). Qed.
Lemma lem8201446 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (z' : type518 _144530 _144607 P) (p : type560 _144530 _144607 P) (_108870 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108869 : _144530 -> _144607) (_108871 : P) : (term1266 _144530 _144607 _144645 P pat e p z' _108870 q _108869 _108871) = (term1246 _144530 _144607 _144645 P pat e z' p _108870 q _108869 _108871).
Proof. exact (MK_COMB (@lem8201445 _144530 _144607 _144645 P pat e _108870 _108871) (@lem8201427 _144530 _144607 P z' p _108870 q _108869 _108871)). Qed.
Lemma lem8201450 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8201451 {_144530 _144607 _144645 P : Type'} (z' : type518 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_108870 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108869 : _144530 -> _144607) (_108871 : P) : (term1246 _144530 _144607 _144645 P pat e z' p _108870 q _108869 _108871) = (term1247 _144530 _144607 _144645 P z' pat e p _108870 q _108869 _108871).
Proof. exact (@lem8201450 (term855 _144530 _144607 P z' _108869 _108870 _108871) (term1096 _144530 _144607 _144645 P pat e _108870 _108871) (term1189 _144530 _144607 P p _108870 q _108869 _108871)). Qed.
Lemma lem8201481 {_144530 _144607 _144645 P : Type'} (z' : type518 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_108870 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108869 : _144530 -> _144607) (_108871 : P) : (term1266 _144530 _144607 _144645 P pat e p z' _108870 q _108869 _108871) = (term1247 _144530 _144607 _144645 P z' pat e p _108870 q _108869 _108871).
Proof. exact (TRANS (@lem8201446 _144530 _144607 _144645 P pat e z' p _108870 q _108869 _108871) (@lem8201451 _144530 _144607 _144645 P z' pat e p _108870 q _108869 _108871)). Qed.
Lemma lem8201482 {_144530 _144607 _144645 P : Type'} (z' : type518 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_108870 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108869 : _144530 -> _144607) (_108871 : P) : (term1265 _144530 _144607 _144645 P p pat e z' _108870 q _108869 _108871) = (term1247 _144530 _144607 _144645 P z' pat e p _108870 q _108869 _108871).
Proof. exact (TRANS (@lem8201410 _144530 _144607 _144645 P pat e p z' _108870 q _108869 _108871) (@lem8201481 _144530 _144607 _144645 P z' pat e p _108870 q _108869 _108871)). Qed.
Lemma lem8201483 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (_108869 : _144530 -> _144607) (_108871 : P) : (term868 _144530 _144607 P p _108869 _108871) = (term868 _144530 _144607 P p _108869 _108871).
Proof. exact (eq_refl (term868 _144530 _144607 P p _108869 _108871)). Qed.
Lemma lem8201484 {_144530 _144607 _144645 P : Type'} (z' : type518 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_108870 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108869 : _144530 -> _144607) (_108871 : P) : (term1269 _144530 _144607 _144645 P p pat e z' _108870 q _108869 _108871) = (term1252 _144530 _144607 _144645 P z' pat e p _108870 q _108869 _108871).
Proof. exact (MK_COMB (@lem8201483 _144530 _144607 P p _108869 _108871) (@lem8201482 _144530 _144607 _144645 P z' pat e p _108870 q _108869 _108871)). Qed.
Lemma lem8201488 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8201489 {_144530 _144607 _144645 P : Type'} (z' : type518 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_108870 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108869 : _144530 -> _144607) (_108871 : P) : (term1252 _144530 _144607 _144645 P z' pat e p _108870 q _108869 _108871) = (term1253 _144530 _144607 _144645 P z' pat e p _108870 q _108869 _108871).
Proof. exact (@lem8201488 (term855 _144530 _144607 P z' _108869 _108870 _108871) (term867 _144530 _144607 P p _108869 _108871) (term1196 _144530 _144607 _144645 P pat e p _108870 q _108869 _108871)). Qed.
Lemma lem8201505 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8201506 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_108870 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108869 : _144530 -> _144607) (_108871 : P) : (term1197 _144530 _144607 _144645 P pat e p _108870 q _108869 _108871) = (term1198 _144530 _144607 _144645 P pat e p _108870 q _108869 _108871).
Proof. exact (@lem8201505 (term1096 _144530 _144607 _144645 P pat e _108870 _108871) (term867 _144530 _144607 P p _108869 _108871) (term1189 _144530 _144607 P p _108870 q _108869 _108871)). Qed.
Lemma lem8201534 {_144530 _144607 P : Type'} (z' : type518 _144530 _144607 P) (_108869 : _144530 -> _144607) (_108870 : _144530 -> _144607) (_108871 : P) : (term969 _144530 _144607 P z' _108869 _108870 _108871) = (term969 _144530 _144607 P z' _108869 _108870 _108871).
Proof. exact (eq_refl (term969 _144530 _144607 P z' _108869 _108870 _108871)). Qed.
Lemma lem8201535 {_144530 _144607 _144645 P : Type'} (z' : type518 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_108870 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108869 : _144530 -> _144607) (_108871 : P) : (term1253 _144530 _144607 _144645 P z' pat e p _108870 q _108869 _108871) = (term1254 _144530 _144607 _144645 P z' pat e p _108870 q _108869 _108871).
Proof. exact (MK_COMB (@lem8201534 _144530 _144607 P z' _108869 _108870 _108871) (@lem8201506 _144530 _144607 _144645 P pat e p _108870 q _108869 _108871)). Qed.
Lemma lem8201546 {_144530 _144607 _144645 P : Type'} (z' : type518 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_108870 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108869 : _144530 -> _144607) (_108871 : P) : (term1252 _144530 _144607 _144645 P z' pat e p _108870 q _108869 _108871) = (term1254 _144530 _144607 _144645 P z' pat e p _108870 q _108869 _108871).
Proof. exact (TRANS (@lem8201489 _144530 _144607 _144645 P z' pat e p _108870 q _108869 _108871) (@lem8201535 _144530 _144607 _144645 P z' pat e p _108870 q _108869 _108871)). Qed.
Lemma lem8201547 {_144530 _144607 _144645 P : Type'} (z' : type518 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_108870 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108869 : _144530 -> _144607) (_108871 : P) : (term1269 _144530 _144607 _144645 P p pat e z' _108870 q _108869 _108871) = (term1254 _144530 _144607 _144645 P z' pat e p _108870 q _108869 _108871).
Proof. exact (TRANS (@lem8201484 _144530 _144607 _144645 P z' pat e p _108870 q _108869 _108871) (@lem8201546 _144530 _144607 _144645 P z' pat e p _108870 q _108869 _108871)). Qed.
Lemma lem8201548 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (_108869 : _144530 -> _144607) (_108871 : P) : (term1184 _144530 _144607 _144645 P pat e _108869 _108871) = (term1184 _144530 _144607 _144645 P pat e _108869 _108871).
Proof. exact (eq_refl (term1184 _144530 _144607 _144645 P pat e _108869 _108871)). Qed.
Lemma lem8201549 {_144530 _144607 _144645 P : Type'} (z' : type518 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_108870 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108869 : _144530 -> _144607) (_108871 : P) : (term1264 _144530 _144607 _144645 P p pat e z' _108870 q _108869 _108871) = (term1258 _144530 _144607 _144645 P z' pat e p _108870 q _108869 _108871).
Proof. exact (MK_COMB (@lem8201548 _144530 _144607 _144645 P pat e _108869 _108871) (@lem8201547 _144530 _144607 _144645 P z' pat e p _108870 q _108869 _108871)). Qed.
Lemma lem8201553 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8201554 {_144530 _144607 _144645 P : Type'} (z' : type518 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_108870 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108869 : _144530 -> _144607) (_108871 : P) : (term1258 _144530 _144607 _144645 P z' pat e p _108870 q _108869 _108871) = (term1259 _144530 _144607 _144645 P z' pat e p _108870 q _108869 _108871).
Proof. exact (@lem8201553 (term855 _144530 _144607 P z' _108869 _108870 _108871) (term1096 _144530 _144607 _144645 P pat e _108869 _108871) (term1198 _144530 _144607 _144645 P pat e p _108870 q _108869 _108871)). Qed.
Lemma lem8201606 {_144530 _144607 _144645 P : Type'} (z' : type518 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_108870 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108869 : _144530 -> _144607) (_108871 : P) : (term1264 _144530 _144607 _144645 P p pat e z' _108870 q _108869 _108871) = (term1259 _144530 _144607 _144645 P z' pat e p _108870 q _108869 _108871).
Proof. exact (TRANS (@lem8201549 _144530 _144607 _144645 P z' pat e p _108870 q _108869 _108871) (@lem8201554 _144530 _144607 _144645 P z' pat e p _108870 q _108869 _108871)). Qed.
Lemma lem8201607 {_144530 _144607 _144645 P : Type'} (z' : type518 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_108870 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108869 : _144530 -> _144607) (_108871 : P) : (term1263 _144530 _144607 _144645 P p pat e z' _108870 q _108869 _108871) = (term1259 _144530 _144607 _144645 P z' pat e p _108870 q _108869 _108871).
Proof. exact (TRANS (@lem8201383 _144530 _144607 _144645 P p pat e z' _108870 q _108869 _108871) (@lem8201606 _144530 _144607 _144645 P z' pat e p _108870 q _108869 _108871)). Qed.
Lemma lem8201608 {_144530 _144607 P : Type'} (q : type560 _144530 _144607 P) (_108870 : _144530 -> _144607) (_108871 : P) : (term1089 _144530 _144607 P q _108870 _108871) = (term1089 _144530 _144607 P q _108870 _108871).
Proof. exact (eq_refl (term1089 _144530 _144607 P q _108870 _108871)). Qed.
Lemma lem8201609 {_144530 _144607 _144645 P : Type'} (z' : type518 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_108870 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108869 : _144530 -> _144607) (_108871 : P) : (term1270 _144530 _144607 _144645 P p pat e z' _108870 q _108869 _108871) = (term1260 _144530 _144607 _144645 P z' pat e p _108870 q _108869 _108871).
Proof. exact (MK_COMB (@lem8201608 _144530 _144607 P q _108870 _108871) (@lem8201607 _144530 _144607 _144645 P z' pat e p _108870 q _108869 _108871)). Qed.
Lemma lem8201620 {_144530 _144607 _144645 P : Type'} (z' : type518 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_108870 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108869 : _144530 -> _144607) (_108871 : P) : ((term1159 _144530 _144607 _144645 P p pat e z' _108869 q _108870 _108871) = (term1270 _144530 _144607 _144645 P p pat e z' _108870 q _108869 _108871)) = ((term1260 _144530 _144607 _144645 P z' pat e p _108870 q _108869 _108871) = (term1260 _144530 _144607 _144645 P z' pat e p _108870 q _108869 _108871)).
Proof. exact (MK_COMB (@lem8201368 _144530 _144607 _144645 P z' pat e p _108870 q _108869 _108871) (@lem8201609 _144530 _144607 _144645 P z' pat e p _108870 q _108869 _108871)). Qed.
Lemma lem8201622 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem20665 A x) (@lem20664 A x)). Qed.
Lemma lem8201623 (x : Prop) : (x = x) = True.
Proof. exact (@lem8201622 Prop x). Qed.
Lemma lem8201624 {_144530 _144607 _144645 P : Type'} (z' : type518 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_108870 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108869 : _144530 -> _144607) (_108871 : P) : ((term1260 _144530 _144607 _144645 P z' pat e p _108870 q _108869 _108871) = (term1260 _144530 _144607 _144645 P z' pat e p _108870 q _108869 _108871)) = True.
Proof. exact (@lem8201623 (term1260 _144530 _144607 _144645 P z' pat e p _108870 q _108869 _108871)). Qed.
Lemma lem8201625 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (z' : type518 _144530 _144607 P) (_108870 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108869 : _144530 -> _144607) (_108871 : P) : ((term1159 _144530 _144607 _144645 P p pat e z' _108869 q _108870 _108871) = (term1270 _144530 _144607 _144645 P p pat e z' _108870 q _108869 _108871)) = True.
Proof. exact (TRANS (@lem8201620 _144530 _144607 _144645 P z' pat e p _108870 q _108869 _108871) (@lem8201624 _144530 _144607 _144645 P z' pat e p _108870 q _108869 _108871)). Qed.
Lemma lem8201626 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (z' : type518 _144530 _144607 P) (_108870 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108869 : _144530 -> _144607) (_108871 : P) : True = ((term1159 _144530 _144607 _144645 P p pat e z' _108869 q _108870 _108871) = (term1270 _144530 _144607 _144645 P p pat e z' _108870 q _108869 _108871)).
Proof. exact (SYM (@lem8201625 _144530 _144607 _144645 P p pat e z' _108870 q _108869 _108871)). Qed.
Lemma lem8201627 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (z' : type518 _144530 _144607 P) (_108870 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108869 : _144530 -> _144607) (_108871 : P) : (term1159 _144530 _144607 _144645 P p pat e z' _108869 q _108870 _108871) = (term1270 _144530 _144607 _144645 P p pat e z' _108870 q _108869 _108871).
Proof. exact (EQ_MP (@lem8201626 _144530 _144607 _144645 P p pat e z' _108870 q _108869 _108871) (@lem0)). Qed.
Lemma lem8201628 {_144529 _144530 _144607 _144645 P : Type'} (_108870 : _144530 -> _144607) (_108869 : _144530 -> _144607) (_108871 : P) (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z' : type518 _144530 _144607 P) (q : type560 _144530 _144607 P) (h1 : term814 _144529 _144530 _144607 _144645 P p pat e lt2 s z' q) : term1270 _144530 _144607 _144645 P p pat e z' _108870 q _108869 _108871.
Proof. exact (EQ_MP (@lem8201627 _144530 _144607 _144645 P p pat e z' _108870 q _108869 _108871) (@lem8199343 _144529 _144530 _144607 _144645 P _108869 _108870 _108871 p pat e lt2 s z' q h1)). Qed.
Lemma lem8201630 (b : Prop) (a : Prop) : (a \/ b) = (term940 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem8201631 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (z' : type518 _144530 _144607 P) (_108869 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108870 : _144530 -> _144607) (_108871 : P) : (term1270 _144530 _144607 _144645 P p pat e z' _108870 q _108869 _108871) = (term1271 _144530 _144607 _144645 P p pat e z' _108869 q _108870 _108871).
Proof. exact (@lem8201630 (term1263 _144530 _144607 _144645 P p pat e z' _108870 q _108869 _108871) (term822 _144530 _144607 P q _108870 _108871)). Qed.
Lemma lem8201633 (a : Prop) (b : Prop) : (term942 a b) = (term943 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem8201634 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (z' : type518 _144530 _144607 P) (_108870 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108869 : _144530 -> _144607) (_108871 : P) : (term1272 _144530 _144607 _144645 P p pat e z' _108870 q _108869 _108871) = (term1273 _144530 _144607 _144645 P p pat e z' _108870 q _108869 _108871).
Proof. exact (@lem8201633 (term867 _144530 _144607 P p _108869 _108871) (term1274 _144530 _144607 _144645 P p pat e z' _108870 q _108869 _108871)). Qed.
Lemma lem8201636 (a : Prop) : (term15 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8201637 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (_108869 : _144530 -> _144607) (_108871 : P) : (term946 _144530 _144607 P p _108869 _108871) = (term822 _144530 _144607 P p _108869 _108871).
Proof. exact (@lem8201636 (term822 _144530 _144607 P p _108869 _108871)). Qed.
Lemma lem8201638 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8201639 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (_108869 : _144530 -> _144607) (_108871 : P) : (term947 _144530 _144607 P p _108869 _108871) = (term948 _144530 _144607 P p _108869 _108871).
Proof. exact (MK_COMB (@lem8201638) (@lem8201637 _144530 _144607 P p _108869 _108871)). Qed.
Lemma lem8201641 (a : Prop) (b : Prop) : (term942 a b) = (term943 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem8201642 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (z' : type518 _144530 _144607 P) (_108870 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108869 : _144530 -> _144607) (_108871 : P) : (term1275 _144530 _144607 _144645 P p pat e z' _108870 q _108869 _108871) = (term1276 _144530 _144607 _144645 P p pat e z' _108870 q _108869 _108871).
Proof. exact (@lem8201641 (term1096 _144530 _144607 _144645 P pat e _108869 _108871) (term1265 _144530 _144607 _144645 P p pat e z' _108870 q _108869 _108871)). Qed.
Lemma lem8201644 (a : Prop) : (term15 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8201645 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (_108869 : _144530 -> _144607) (_108871 : P) : (term1220 _144530 _144607 _144645 P pat e _108869 _108871) = ((term835 _144530 _144607 _144645 P pat _108869 _108871) = (term835 _144530 _144607 _144645 P e _108869 _108871)).
Proof. exact (@lem8201644 ((term835 _144530 _144607 _144645 P pat _108869 _108871) = (term835 _144530 _144607 _144645 P e _108869 _108871))). Qed.
Lemma lem8201646 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8201647 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (_108869 : _144530 -> _144607) (_108871 : P) : (term1221 _144530 _144607 _144645 P pat e _108869 _108871) = (term1222 _144530 _144607 _144645 P pat e _108869 _108871).
Proof. exact (MK_COMB (@lem8201646) (@lem8201645 _144530 _144607 _144645 P pat e _108869 _108871)). Qed.
Lemma lem8201649 (a : Prop) (b : Prop) : (term942 a b) = (term943 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem8201650 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (z' : type518 _144530 _144607 P) (_108870 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108869 : _144530 -> _144607) (_108871 : P) : (term1277 _144530 _144607 _144645 P p pat e z' _108870 q _108869 _108871) = (term1278 _144530 _144607 _144645 P p pat e z' _108870 q _108869 _108871).
Proof. exact (@lem8201649 (term867 _144530 _144607 P p _108870 _108871) (term1279 _144530 _144607 _144645 P pat e z' _108870 q _108869 _108871)). Qed.
Lemma lem8201652 (a : Prop) : (term15 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8201653 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (_108870 : _144530 -> _144607) (_108871 : P) : (term946 _144530 _144607 P p _108870 _108871) = (term822 _144530 _144607 P p _108870 _108871).
Proof. exact (@lem8201652 (term822 _144530 _144607 P p _108870 _108871)). Qed.
Lemma lem8201654 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8201655 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (_108870 : _144530 -> _144607) (_108871 : P) : (term947 _144530 _144607 P p _108870 _108871) = (term948 _144530 _144607 P p _108870 _108871).
Proof. exact (MK_COMB (@lem8201654) (@lem8201653 _144530 _144607 P p _108870 _108871)). Qed.
Lemma lem8201657 (a : Prop) (b : Prop) : (term942 a b) = (term943 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem8201658 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (z' : type518 _144530 _144607 P) (_108870 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108869 : _144530 -> _144607) (_108871 : P) : (term1280 _144530 _144607 _144645 P pat e z' _108870 q _108869 _108871) = (term1281 _144530 _144607 _144645 P pat e z' _108870 q _108869 _108871).
Proof. exact (@lem8201657 (term1096 _144530 _144607 _144645 P pat e _108870 _108871) (term1267 _144530 _144607 P z' _108870 q _108869 _108871)). Qed.
Lemma lem8201660 (a : Prop) : (term15 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8201661 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (_108870 : _144530 -> _144607) (_108871 : P) : (term1220 _144530 _144607 _144645 P pat e _108870 _108871) = ((term835 _144530 _144607 _144645 P pat _108870 _108871) = (term835 _144530 _144607 _144645 P e _108870 _108871)).
Proof. exact (@lem8201660 ((term835 _144530 _144607 _144645 P pat _108870 _108871) = (term835 _144530 _144607 _144645 P e _108870 _108871))). Qed.
Lemma lem8201662 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8201663 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (_108870 : _144530 -> _144607) (_108871 : P) : (term1221 _144530 _144607 _144645 P pat e _108870 _108871) = (term1222 _144530 _144607 _144645 P pat e _108870 _108871).
Proof. exact (MK_COMB (@lem8201662) (@lem8201661 _144530 _144607 _144645 P pat e _108870 _108871)). Qed.
Lemma lem8201665 (a : Prop) (b : Prop) : (term942 a b) = (term943 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem8201666 {_144530 _144607 P : Type'} (z' : type518 _144530 _144607 P) (_108870 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108869 : _144530 -> _144607) (_108871 : P) : (term1282 _144530 _144607 P z' _108870 q _108869 _108871) = (term1283 _144530 _144607 P z' _108870 q _108869 _108871).
Proof. exact (@lem8201665 (term855 _144530 _144607 P z' _108869 _108870 _108871) (term867 _144530 _144607 P q _108869 _108871)). Qed.
Lemma lem8201668 (a : Prop) : (term15 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8201669 {_144530 _144607 P : Type'} (z' : type518 _144530 _144607 P) (_108869 : _144530 -> _144607) (_108870 : _144530 -> _144607) (_108871 : P) : (term986 _144530 _144607 P z' _108869 _108870 _108871) = ((term848 _144530 _144607 P z' _108869 _108870 _108871) = (term851 _144530 _144607 P z' _108869 _108870 _108871)).
Proof. exact (@lem8201668 ((term848 _144530 _144607 P z' _108869 _108870 _108871) = (term851 _144530 _144607 P z' _108869 _108870 _108871))). Qed.
Lemma lem8201670 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8201671 {_144530 _144607 P : Type'} (z' : type518 _144530 _144607 P) (_108869 : _144530 -> _144607) (_108870 : _144530 -> _144607) (_108871 : P) : (term1284 _144530 _144607 P z' _108869 _108870 _108871) = (term1285 _144530 _144607 P z' _108869 _108870 _108871).
Proof. exact (MK_COMB (@lem8201670) (@lem8201669 _144530 _144607 P z' _108869 _108870 _108871)). Qed.
Lemma lem8201673 (a : Prop) : (term15 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8201674 {_144530 _144607 P : Type'} (q : type560 _144530 _144607 P) (_108869 : _144530 -> _144607) (_108871 : P) : (term946 _144530 _144607 P q _108869 _108871) = (term822 _144530 _144607 P q _108869 _108871).
Proof. exact (@lem8201673 (term822 _144530 _144607 P q _108869 _108871)). Qed.
Lemma lem8201675 {_144530 _144607 P : Type'} (z' : type518 _144530 _144607 P) (_108870 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108869 : _144530 -> _144607) (_108871 : P) : (term1283 _144530 _144607 P z' _108870 q _108869 _108871) = (term1286 _144530 _144607 P z' _108870 q _108869 _108871).
Proof. exact (MK_COMB (@lem8201671 _144530 _144607 P z' _108869 _108870 _108871) (@lem8201674 _144530 _144607 P q _108869 _108871)). Qed.
Lemma lem8201676 {_144530 _144607 P : Type'} (z' : type518 _144530 _144607 P) (_108870 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108869 : _144530 -> _144607) (_108871 : P) : (term1282 _144530 _144607 P z' _108870 q _108869 _108871) = (term1286 _144530 _144607 P z' _108870 q _108869 _108871).
Proof. exact (TRANS (@lem8201666 _144530 _144607 P z' _108870 q _108869 _108871) (@lem8201675 _144530 _144607 P z' _108870 q _108869 _108871)). Qed.
Lemma lem8201677 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (z' : type518 _144530 _144607 P) (_108870 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108869 : _144530 -> _144607) (_108871 : P) : (term1281 _144530 _144607 _144645 P pat e z' _108870 q _108869 _108871) = (term1287 _144530 _144607 _144645 P pat e z' _108870 q _108869 _108871).
Proof. exact (MK_COMB (@lem8201663 _144530 _144607 _144645 P pat e _108870 _108871) (@lem8201676 _144530 _144607 P z' _108870 q _108869 _108871)). Qed.
Lemma lem8201678 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (z' : type518 _144530 _144607 P) (_108870 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108869 : _144530 -> _144607) (_108871 : P) : (term1280 _144530 _144607 _144645 P pat e z' _108870 q _108869 _108871) = (term1287 _144530 _144607 _144645 P pat e z' _108870 q _108869 _108871).
Proof. exact (TRANS (@lem8201658 _144530 _144607 _144645 P pat e z' _108870 q _108869 _108871) (@lem8201677 _144530 _144607 _144645 P pat e z' _108870 q _108869 _108871)). Qed.
Lemma lem8201679 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (z' : type518 _144530 _144607 P) (_108870 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108869 : _144530 -> _144607) (_108871 : P) : (term1278 _144530 _144607 _144645 P p pat e z' _108870 q _108869 _108871) = (term1288 _144530 _144607 _144645 P p pat e z' _108870 q _108869 _108871).
Proof. exact (MK_COMB (@lem8201655 _144530 _144607 P p _108870 _108871) (@lem8201678 _144530 _144607 _144645 P pat e z' _108870 q _108869 _108871)). Qed.
Lemma lem8201680 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (z' : type518 _144530 _144607 P) (_108870 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108869 : _144530 -> _144607) (_108871 : P) : (term1277 _144530 _144607 _144645 P p pat e z' _108870 q _108869 _108871) = (term1288 _144530 _144607 _144645 P p pat e z' _108870 q _108869 _108871).
Proof. exact (TRANS (@lem8201650 _144530 _144607 _144645 P p pat e z' _108870 q _108869 _108871) (@lem8201679 _144530 _144607 _144645 P p pat e z' _108870 q _108869 _108871)). Qed.
Lemma lem8201681 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (z' : type518 _144530 _144607 P) (_108870 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108869 : _144530 -> _144607) (_108871 : P) : (term1276 _144530 _144607 _144645 P p pat e z' _108870 q _108869 _108871) = (term1289 _144530 _144607 _144645 P p pat e z' _108870 q _108869 _108871).
Proof. exact (MK_COMB (@lem8201647 _144530 _144607 _144645 P pat e _108869 _108871) (@lem8201680 _144530 _144607 _144645 P p pat e z' _108870 q _108869 _108871)). Qed.
Lemma lem8201682 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (z' : type518 _144530 _144607 P) (_108870 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108869 : _144530 -> _144607) (_108871 : P) : (term1275 _144530 _144607 _144645 P p pat e z' _108870 q _108869 _108871) = (term1289 _144530 _144607 _144645 P p pat e z' _108870 q _108869 _108871).
Proof. exact (TRANS (@lem8201642 _144530 _144607 _144645 P p pat e z' _108870 q _108869 _108871) (@lem8201681 _144530 _144607 _144645 P p pat e z' _108870 q _108869 _108871)). Qed.
Lemma lem8201683 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (z' : type518 _144530 _144607 P) (_108870 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108869 : _144530 -> _144607) (_108871 : P) : (term1273 _144530 _144607 _144645 P p pat e z' _108870 q _108869 _108871) = (term1290 _144530 _144607 _144645 P p pat e z' _108870 q _108869 _108871).
Proof. exact (MK_COMB (@lem8201639 _144530 _144607 P p _108869 _108871) (@lem8201682 _144530 _144607 _144645 P p pat e z' _108870 q _108869 _108871)). Qed.
Lemma lem8201684 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (z' : type518 _144530 _144607 P) (_108870 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108869 : _144530 -> _144607) (_108871 : P) : (term1272 _144530 _144607 _144645 P p pat e z' _108870 q _108869 _108871) = (term1290 _144530 _144607 _144645 P p pat e z' _108870 q _108869 _108871).
Proof. exact (TRANS (@lem8201634 _144530 _144607 _144645 P p pat e z' _108870 q _108869 _108871) (@lem8201683 _144530 _144607 _144645 P p pat e z' _108870 q _108869 _108871)). Qed.
Lemma lem8201685 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8201686 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (z' : type518 _144530 _144607 P) (_108870 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108869 : _144530 -> _144607) (_108871 : P) : (term1291 _144530 _144607 _144645 P p pat e z' _108870 q _108869 _108871) = (term1292 _144530 _144607 _144645 P p pat e z' _108870 q _108869 _108871).
Proof. exact (MK_COMB (@lem8201685) (@lem8201684 _144530 _144607 _144645 P p pat e z' _108870 q _108869 _108871)). Qed.
Lemma lem8201687 {_144530 _144607 P : Type'} (q : type560 _144530 _144607 P) (_108870 : _144530 -> _144607) (_108871 : P) : (term822 _144530 _144607 P q _108870 _108871) = (term822 _144530 _144607 P q _108870 _108871).
Proof. exact (eq_refl (term822 _144530 _144607 P q _108870 _108871)). Qed.
Lemma lem8201688 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (z' : type518 _144530 _144607 P) (_108869 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108870 : _144530 -> _144607) (_108871 : P) : (term1271 _144530 _144607 _144645 P p pat e z' _108869 q _108870 _108871) = (term1293 _144530 _144607 _144645 P p pat e z' _108869 q _108870 _108871).
Proof. exact (MK_COMB (@lem8201686 _144530 _144607 _144645 P p pat e z' _108870 q _108869 _108871) (@lem8201687 _144530 _144607 P q _108870 _108871)). Qed.
Lemma lem8201689 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (z' : type518 _144530 _144607 P) (_108869 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108870 : _144530 -> _144607) (_108871 : P) : (term1270 _144530 _144607 _144645 P p pat e z' _108870 q _108869 _108871) = (term1293 _144530 _144607 _144645 P p pat e z' _108869 q _108870 _108871).
Proof. exact (TRANS (@lem8201631 _144530 _144607 _144645 P p pat e z' _108869 q _108870 _108871) (@lem8201688 _144530 _144607 _144645 P p pat e z' _108869 q _108870 _108871)). Qed.
Lemma lem8201691 {_144529 _144530 _144607 _144645 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z' : type518 _144530 _144607 P) (q : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) (h2 : term814 _144529 _144530 _144607 _144645 P p pat e lt2 s z' q) (h3 : term867 _144530 _144607 P q g a) (h4 : term1082 _144530 _144607 P f q g a) (h5 : (pat f a) = (e f a)) (h6 : (pat g a) = (e g a)) (h7 : p f a) (h8 : p g a) : term1286 _144530 _144607 P z' g q f a.
Proof. exact (conj (@lem8200970 _144529 _144530 _144607 _144645 P lt2 s z' q pat e f p g a h1 h2 h3 h4 h5 h6 h7 h8) (@lem8200977 _144530 _144607 P f q g a h4)). Qed.
Lemma lem8201692 {_144529 _144530 _144607 _144645 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z' : type518 _144530 _144607 P) (q : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) (h2 : term814 _144529 _144530 _144607 _144645 P p pat e lt2 s z' q) (h3 : term867 _144530 _144607 P q g a) (h4 : term1082 _144530 _144607 P f q g a) (h5 : (pat f a) = (e f a)) (h6 : (pat g a) = (e g a)) (h7 : p f a) (h8 : p g a) : term1287 _144530 _144607 _144645 P pat e z' g q f a.
Proof. exact (conj (@lem8200158 _144530 _144607 _144645 P pat e g a h6) (@lem8201691 _144529 _144530 _144607 _144645 P lt2 s z' q pat e f p g a h1 h2 h3 h4 h5 h6 h7 h8)). Qed.
Lemma lem8201693 {_144529 _144530 _144607 _144645 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z' : type518 _144530 _144607 P) (q : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) (h2 : term814 _144529 _144530 _144607 _144645 P p pat e lt2 s z' q) (h3 : term867 _144530 _144607 P q g a) (h4 : term1082 _144530 _144607 P f q g a) (h5 : (pat f a) = (e f a)) (h6 : (pat g a) = (e g a)) (h7 : p f a) (h8 : p g a) : term1288 _144530 _144607 _144645 P p pat e z' g q f a.
Proof. exact (conj (@lem8200151 _144530 _144607 P p g a h8) (@lem8201692 _144529 _144530 _144607 _144645 P lt2 s z' q pat e f p g a h1 h2 h3 h4 h5 h6 h7 h8)). Qed.
Lemma lem8201694 {_144529 _144530 _144607 _144645 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z' : type518 _144530 _144607 P) (q : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) (h2 : term814 _144529 _144530 _144607 _144645 P p pat e lt2 s z' q) (h3 : term867 _144530 _144607 P q g a) (h4 : term1082 _144530 _144607 P f q g a) (h5 : (pat f a) = (e f a)) (h6 : (pat g a) = (e g a)) (h7 : p f a) (h8 : p g a) : term1289 _144530 _144607 _144645 P p pat e z' g q f a.
Proof. exact (conj (@lem8200144 _144530 _144607 _144645 P pat e f a h5) (@lem8201693 _144529 _144530 _144607 _144645 P lt2 s z' q pat e f p g a h1 h2 h3 h4 h5 h6 h7 h8)). Qed.
Lemma lem8201695 {_144529 _144530 _144607 _144645 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z' : type518 _144530 _144607 P) (q : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) (h2 : term814 _144529 _144530 _144607 _144645 P p pat e lt2 s z' q) (h3 : term867 _144530 _144607 P q g a) (h4 : term1082 _144530 _144607 P f q g a) (h5 : (pat f a) = (e f a)) (h6 : (pat g a) = (e g a)) (h7 : p f a) (h8 : p g a) : term1290 _144530 _144607 _144645 P p pat e z' g q f a.
Proof. exact (conj (@lem8200137 _144530 _144607 P p f a h7) (@lem8201694 _144529 _144530 _144607 _144645 P lt2 s z' q pat e f p g a h1 h2 h3 h4 h5 h6 h7 h8)). Qed.
Lemma lem8201697 {_144529 _144530 _144607 _144645 P : Type'} (_108869 : _144530 -> _144607) (_108870 : _144530 -> _144607) (_108871 : P) (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z' : type518 _144530 _144607 P) (q : type560 _144530 _144607 P) (h1 : term814 _144529 _144530 _144607 _144645 P p pat e lt2 s z' q) : term1293 _144530 _144607 _144645 P p pat e z' _108869 q _108870 _108871.
Proof. exact (EQ_MP (@lem8201689 _144530 _144607 _144645 P p pat e z' _108869 q _108870 _108871) (@lem8201628 _144529 _144530 _144607 _144645 P _108870 _108869 _108871 p pat e lt2 s z' q h1)). Qed.
Lemma lem8201698 {_144529 _144530 _144607 _144645 P : Type'} (_108869 : _144530 -> _144607) (_108870 : _144530 -> _144607) (_108871 : P) (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z' : type518 _144530 _144607 P) (q : type560 _144530 _144607 P) (h1 : term814 _144529 _144530 _144607 _144645 P p pat e lt2 s z' q) : term1293 _144530 _144607 _144645 P p pat e z' _108869 q _108870 _108871.
Proof. exact (@lem8201697 _144529 _144530 _144607 _144645 P _108869 _108870 _108871 p pat e lt2 s z' q h1). Qed.
Lemma lem8201699 {_144529 _144530 _144607 _144645 P : Type'} (f : _144530 -> _144607) (g : _144530 -> _144607) (a : P) (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z' : type518 _144530 _144607 P) (q : type560 _144530 _144607 P) (h1 : term814 _144529 _144530 _144607 _144645 P p pat e lt2 s z' q) : term1293 _144530 _144607 _144645 P p pat e z' f q g a.
Proof. exact (@lem8201698 _144529 _144530 _144607 _144645 P f g a p pat e lt2 s z' q h1). Qed.
Lemma lem8201702 {_144529 _144530 _144607 _144645 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z' : type518 _144530 _144607 P) (q : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) (h2 : term814 _144529 _144530 _144607 _144645 P p pat e lt2 s z' q) (h3 : term867 _144530 _144607 P q g a) (h4 : term1082 _144530 _144607 P f q g a) (h5 : (pat f a) = (e f a)) (h6 : (pat g a) = (e g a)) (h7 : p f a) (h8 : p g a) : term822 _144530 _144607 P q g a.
Proof. exact (@lem8201699 _144529 _144530 _144607 _144645 P f g a p pat e lt2 s z' q h2 (@lem8201695 _144529 _144530 _144607 _144645 P lt2 s z' q pat e f p g a h1 h2 h3 h4 h5 h6 h7 h8)). Qed.
Lemma lem8201703 {_144529 _144530 _144607 _144645 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z' : type518 _144530 _144607 P) (q : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) (h2 : term814 _144529 _144530 _144607 _144645 P p pat e lt2 s z' q) (h3 : term1082 _144530 _144607 P f q g a) (h4 : (pat f a) = (e f a)) (h5 : (pat g a) = (e g a)) (h6 : p f a) (h7 : p g a) : term916 _144530 _144607 P q g a.
Proof. exact (fun h0 : term867 _144530 _144607 P q g a => @lem8201702 _144529 _144530 _144607 _144645 P lt2 s z' q pat e f p g a h1 h2 h0 h3 h4 h5 h6 h7). Qed.
Lemma lem8201705 (p : Prop) : (term57 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8201706 {_144530 _144607 P : Type'} (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term916 _144530 _144607 P q g a) = (term822 _144530 _144607 P q g a).
Proof. exact (@lem8201705 (term822 _144530 _144607 P q g a)). Qed.
Lemma lem8201707 {_144529 _144530 _144607 _144645 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z' : type518 _144530 _144607 P) (q : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) (h2 : term814 _144529 _144530 _144607 _144645 P p pat e lt2 s z' q) (h3 : term1082 _144530 _144607 P f q g a) (h4 : (pat f a) = (e f a)) (h5 : (pat g a) = (e g a)) (h6 : p f a) (h7 : p g a) : term822 _144530 _144607 P q g a.
Proof. exact (EQ_MP (@lem8201706 _144530 _144607 P q g a) (@lem8201703 _144529 _144530 _144607 _144645 P lt2 s z' q pat e f p g a h1 h2 h3 h4 h5 h6 h7)). Qed.
Lemma lem8201710 (p : Prop) : (~ p) = (p -> False).
Proof. exact (EQ_MP (@lem21021 p) (@lem0)). Qed.
Lemma lem8201712 {_144530 _144607 P : Type'} (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term867 _144530 _144607 P q g a) = (term1294 _144530 _144607 P q g a).
Proof. exact (@lem8201710 (term822 _144530 _144607 P q g a)). Qed.
Lemma lem8201715 {_144530 _144607 P : Type'} (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term1082 _144530 _144607 P f q g a) : term1294 _144530 _144607 P q g a.
Proof. exact (EQ_MP (@lem8201712 _144530 _144607 P q g a) (@lem8199119 _144530 _144607 P f q g a h1)). Qed.
Lemma lem8201718 {_144529 _144530 _144607 _144645 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z' : type518 _144530 _144607 P) (q : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) (h2 : term814 _144529 _144530 _144607 _144645 P p pat e lt2 s z' q) (h3 : term1082 _144530 _144607 P f q g a) (h4 : (pat f a) = (e f a)) (h5 : (pat g a) = (e g a)) (h6 : p f a) (h7 : p g a) : False.
Proof. exact (@lem8201715 _144530 _144607 P f q g a h3 (@lem8201707 _144529 _144530 _144607 _144645 P lt2 s z' q pat e f p g a h1 h2 h3 h4 h5 h6 h7)). Qed.
Lemma lem8201719 {_144529 _144530 _144607 _144645 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z' : type518 _144530 _144607 P) (q : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) (h2 : term814 _144529 _144530 _144607 _144645 P p pat e lt2 s z' q) (h3 : term1082 _144530 _144607 P f q g a) (h4 : (pat f a) = (e f a)) (h5 : (pat g a) = (e g a)) (h6 : p f a) (h7 : p g a) : term59.
Proof. exact (fun h0 : ~ False => @lem8201718 _144529 _144530 _144607 _144645 P lt2 s z' q pat e f p g a h1 h2 h3 h4 h5 h6 h7). Qed.
Lemma lem8201721 (p : Prop) : (term57 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8201722 : term59 = False.
Proof. exact (@lem8201721 False). Qed.
Lemma lem8201723 {_144529 _144530 _144607 _144645 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z' : type518 _144530 _144607 P) (q : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) (h2 : term814 _144529 _144530 _144607 _144645 P p pat e lt2 s z' q) (h3 : term1082 _144530 _144607 P f q g a) (h4 : (pat f a) = (e f a)) (h5 : (pat g a) = (e g a)) (h6 : p f a) (h7 : p g a) : False.
Proof. exact (EQ_MP (@lem8201722) (@lem8201719 _144529 _144530 _144607 _144645 P lt2 s z' q pat e f p g a h1 h2 h3 h4 h5 h6 h7)). Qed.
Lemma lem8201966 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) (h1 : p f a) : term822 _144530 _144607 P p f a.
Proof. exact (EQ_MP (@lem8196493 _144530 _144607 P p f a) (@lem8196370 _144530 _144607 P p f a h1)). Qed.
Lemma lem8201967 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) (h1 : p f a) : term916 _144530 _144607 P p f a.
Proof. exact (fun h0 : term867 _144530 _144607 P p f a => @lem8201966 _144530 _144607 P p f a h1). Qed.
Lemma lem8201969 (p : Prop) : (term57 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8201970 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) : (term916 _144530 _144607 P p f a) = (term822 _144530 _144607 P p f a).
Proof. exact (@lem8201969 (term822 _144530 _144607 P p f a)). Qed.
Lemma lem8201971 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) (h1 : p f a) : term822 _144530 _144607 P p f a.
Proof. exact (EQ_MP (@lem8201970 _144530 _144607 P p f a) (@lem8201967 _144530 _144607 P p f a h1)). Qed.
Lemma lem8201973 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (a : P) (h1 : (pat f a) = (e f a)) : (term835 _144530 _144607 _144645 P pat f a) = (term835 _144530 _144607 _144645 P e f a).
Proof. exact (EQ_MP (@lem8196601 _144530 _144607 _144645 P pat e f a) (@lem8196445 _144530 _144607 _144645 P pat e f a h1)). Qed.
Lemma lem8201974 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (a : P) (h1 : (pat f a) = (e f a)) : term1174 _144530 _144607 _144645 P pat e f a.
Proof. exact (fun h0 : term1096 _144530 _144607 _144645 P pat e f a => @lem8201973 _144530 _144607 _144645 P pat e f a h1). Qed.
Lemma lem8201976 (p : Prop) : (term57 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8201977 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (a : P) : (term1174 _144530 _144607 _144645 P pat e f a) = ((term835 _144530 _144607 _144645 P pat f a) = (term835 _144530 _144607 _144645 P e f a)).
Proof. exact (@lem8201976 ((term835 _144530 _144607 _144645 P pat f a) = (term835 _144530 _144607 _144645 P e f a))). Qed.
Lemma lem8201978 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (a : P) (h1 : (pat f a) = (e f a)) : (term835 _144530 _144607 _144645 P pat f a) = (term835 _144530 _144607 _144645 P e f a).
Proof. exact (EQ_MP (@lem8201977 _144530 _144607 _144645 P pat e f a) (@lem8201974 _144530 _144607 _144645 P pat e f a h1)). Qed.
Lemma lem8201980 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : p g a) : term822 _144530 _144607 P p g a.
Proof. exact (EQ_MP (@lem8196511 _144530 _144607 P p g a) (@lem8196376 _144530 _144607 P p g a h1)). Qed.
Lemma lem8201981 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : p g a) : term916 _144530 _144607 P p g a.
Proof. exact (fun h0 : term867 _144530 _144607 P p g a => @lem8201980 _144530 _144607 P p g a h1). Qed.
Lemma lem8201983 (p : Prop) : (term57 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8201984 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term916 _144530 _144607 P p g a) = (term822 _144530 _144607 P p g a).
Proof. exact (@lem8201983 (term822 _144530 _144607 P p g a)). Qed.
Lemma lem8201985 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : p g a) : term822 _144530 _144607 P p g a.
Proof. exact (EQ_MP (@lem8201984 _144530 _144607 P p g a) (@lem8201981 _144530 _144607 P p g a h1)). Qed.
Lemma lem8201987 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) (h1 : (pat g a) = (e g a)) : (term835 _144530 _144607 _144645 P pat g a) = (term835 _144530 _144607 _144645 P e g a).
Proof. exact (EQ_MP (@lem8196639 _144530 _144607 _144645 P pat e g a) (@lem8196451 _144530 _144607 _144645 P pat e g a h1)). Qed.
Lemma lem8201988 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) (h1 : (pat g a) = (e g a)) : term1174 _144530 _144607 _144645 P pat e g a.
Proof. exact (fun h0 : term1096 _144530 _144607 _144645 P pat e g a => @lem8201987 _144530 _144607 _144645 P pat e g a h1). Qed.
Lemma lem8201990 (p : Prop) : (term57 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8201991 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term1174 _144530 _144607 _144645 P pat e g a) = ((term835 _144530 _144607 _144645 P pat g a) = (term835 _144530 _144607 _144645 P e g a)).
Proof. exact (@lem8201990 ((term835 _144530 _144607 _144645 P pat g a) = (term835 _144530 _144607 _144645 P e g a))). Qed.
Lemma lem8201992 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) (h1 : (pat g a) = (e g a)) : (term835 _144530 _144607 _144645 P pat g a) = (term835 _144530 _144607 _144645 P e g a).
Proof. exact (EQ_MP (@lem8201991 _144530 _144607 _144645 P pat e g a) (@lem8201988 _144530 _144607 _144645 P pat e g a h1)). Qed.
Lemma lem8201994 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) (h1 : p f a) : term822 _144530 _144607 P p f a.
Proof. exact (EQ_MP (@lem8196493 _144530 _144607 P p f a) (@lem8196370 _144530 _144607 P p f a h1)). Qed.
Lemma lem8201995 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) (h1 : p f a) : term916 _144530 _144607 P p f a.
Proof. exact (fun h0 : term867 _144530 _144607 P p f a => @lem8201994 _144530 _144607 P p f a h1). Qed.
Lemma lem8201997 (p : Prop) : (term57 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8201998 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) : (term916 _144530 _144607 P p f a) = (term822 _144530 _144607 P p f a).
Proof. exact (@lem8201997 (term822 _144530 _144607 P p f a)). Qed.
Lemma lem8201999 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) (h1 : p f a) : term822 _144530 _144607 P p f a.
Proof. exact (EQ_MP (@lem8201998 _144530 _144607 P p f a) (@lem8201995 _144530 _144607 P p f a h1)). Qed.
Lemma lem8202001 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (a : P) (h1 : (pat f a) = (e f a)) : (term835 _144530 _144607 _144645 P pat f a) = (term835 _144530 _144607 _144645 P e f a).
Proof. exact (EQ_MP (@lem8196601 _144530 _144607 _144645 P pat e f a) (@lem8196445 _144530 _144607 _144645 P pat e f a h1)). Qed.
Lemma lem8202002 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (a : P) (h1 : (pat f a) = (e f a)) : term1174 _144530 _144607 _144645 P pat e f a.
Proof. exact (fun h0 : term1096 _144530 _144607 _144645 P pat e f a => @lem8202001 _144530 _144607 _144645 P pat e f a h1). Qed.
Lemma lem8202004 (p : Prop) : (term57 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8202005 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (a : P) : (term1174 _144530 _144607 _144645 P pat e f a) = ((term835 _144530 _144607 _144645 P pat f a) = (term835 _144530 _144607 _144645 P e f a)).
Proof. exact (@lem8202004 ((term835 _144530 _144607 _144645 P pat f a) = (term835 _144530 _144607 _144645 P e f a))). Qed.
Lemma lem8202006 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (a : P) (h1 : (pat f a) = (e f a)) : (term835 _144530 _144607 _144645 P pat f a) = (term835 _144530 _144607 _144645 P e f a).
Proof. exact (EQ_MP (@lem8202005 _144530 _144607 _144645 P pat e f a) (@lem8202002 _144530 _144607 _144645 P pat e f a h1)). Qed.
Lemma lem8202008 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : p g a) : term822 _144530 _144607 P p g a.
Proof. exact (EQ_MP (@lem8196511 _144530 _144607 P p g a) (@lem8196376 _144530 _144607 P p g a h1)). Qed.
Lemma lem8202009 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : p g a) : term916 _144530 _144607 P p g a.
Proof. exact (fun h0 : term867 _144530 _144607 P p g a => @lem8202008 _144530 _144607 P p g a h1). Qed.
Lemma lem8202011 (p : Prop) : (term57 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8202012 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term916 _144530 _144607 P p g a) = (term822 _144530 _144607 P p g a).
Proof. exact (@lem8202011 (term822 _144530 _144607 P p g a)). Qed.
Lemma lem8202013 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : p g a) : term822 _144530 _144607 P p g a.
Proof. exact (EQ_MP (@lem8202012 _144530 _144607 P p g a) (@lem8202009 _144530 _144607 P p g a h1)). Qed.
Lemma lem8202015 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) (h1 : (pat g a) = (e g a)) : (term835 _144530 _144607 _144645 P pat g a) = (term835 _144530 _144607 _144645 P e g a).
Proof. exact (EQ_MP (@lem8196639 _144530 _144607 _144645 P pat e g a) (@lem8196451 _144530 _144607 _144645 P pat e g a h1)). Qed.
Lemma lem8202016 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) (h1 : (pat g a) = (e g a)) : term1174 _144530 _144607 _144645 P pat e g a.
Proof. exact (fun h0 : term1096 _144530 _144607 _144645 P pat e g a => @lem8202015 _144530 _144607 _144645 P pat e g a h1). Qed.
Lemma lem8202018 (p : Prop) : (term57 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8202019 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term1174 _144530 _144607 _144645 P pat e g a) = ((term835 _144530 _144607 _144645 P pat g a) = (term835 _144530 _144607 _144645 P e g a)).
Proof. exact (@lem8202018 ((term835 _144530 _144607 _144645 P pat g a) = (term835 _144530 _144607 _144645 P e g a))). Qed.
Lemma lem8202020 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) (h1 : (pat g a) = (e g a)) : (term835 _144530 _144607 _144645 P pat g a) = (term835 _144530 _144607 _144645 P e g a).
Proof. exact (EQ_MP (@lem8202019 _144530 _144607 _144645 P pat e g a) (@lem8202016 _144530 _144607 _144645 P pat e g a h1)). Qed.
Lemma lem8202023 {_144530 _144607 P : Type'} (q : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) (h1 : term867 _144530 _144607 P q f a) : term867 _144530 _144607 P q f a.
Proof. exact (h1). Qed.
Lemma lem8202024 {_144530 _144607 P : Type'} (q : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) (h1 : term867 _144530 _144607 P q f a) : term1175 _144530 _144607 P q f a.
Proof. exact (fun h0 : term822 _144530 _144607 P q f a => @lem8202023 _144530 _144607 P q f a h1). Qed.
Lemma lem8202026 (p : Prop) : (term918 p) = (~ p).
Proof. exact (EQ_MP (@lem21028 p) (@lem21107 p)). Qed.
Lemma lem8202027 {_144530 _144607 P : Type'} (q : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) : (term1175 _144530 _144607 P q f a) = (term867 _144530 _144607 P q f a).
Proof. exact (@lem8202026 (term822 _144530 _144607 P q f a)). Qed.
Lemma lem8202028 {_144530 _144607 P : Type'} (q : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) (h1 : term867 _144530 _144607 P q f a) : term867 _144530 _144607 P q f a.
Proof. exact (EQ_MP (@lem8202027 _144530 _144607 P q f a) (@lem8202024 _144530 _144607 P q f a h1)). Qed.
Lemma lem8202030 {_144530 _144607 P : Type'} (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term1080 _144530 _144607 P f q g a) : term822 _144530 _144607 P q g a.
Proof. exact (proj2 (@lem8198193 _144530 _144607 P f q g a h1)). Qed.
Lemma lem8202031 {_144530 _144607 P : Type'} (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term1080 _144530 _144607 P f q g a) : term916 _144530 _144607 P q g a.
Proof. exact (fun h0 : term867 _144530 _144607 P q g a => @lem8202030 _144530 _144607 P f q g a h1). Qed.
Lemma lem8202033 (p : Prop) : (term57 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8202034 {_144530 _144607 P : Type'} (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term916 _144530 _144607 P q g a) = (term822 _144530 _144607 P q g a).
Proof. exact (@lem8202033 (term822 _144530 _144607 P q g a)). Qed.
Lemma lem8202035 {_144530 _144607 P : Type'} (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term1080 _144530 _144607 P f q g a) : term822 _144530 _144607 P q g a.
Proof. exact (EQ_MP (@lem8202034 _144530 _144607 P q g a) (@lem8202031 _144530 _144607 P f q g a h1)). Qed.
Lemma lem8202041 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8202042 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (z' : type518 _144530 _144607 P) (s : P -> _144529) (_108885 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108886 : _144530 -> _144607) (_108887 : P) : (term1166 _144529 _144530 _144607 _144645 P p pat e lt2 z' s _108885 q _108886 _108887) = (term1295 _144529 _144530 _144607 _144645 P p pat e lt2 z' s _108885 q _108886 _108887).
Proof. exact (@lem8202041 (term1096 _144530 _144607 _144645 P pat e _108885 _108887) (term867 _144530 _144607 P p _108885 _108887) (term1163 _144529 _144530 _144607 _144645 P p pat e lt2 z' s _108885 q _108886 _108887)). Qed.
Lemma lem8202068 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8202069 {_144529 _144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (z' : type518 _144530 _144607 P) (s : P -> _144529) (_108885 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108886 : _144530 -> _144607) (_108887 : P) : (term1163 _144529 _144530 _144607 _144645 P p pat e lt2 z' s _108885 q _108886 _108887) = (term1296 _144529 _144530 _144607 _144645 P pat e p lt2 z' s _108885 q _108886 _108887).
Proof. exact (@lem8202068 (term1096 _144530 _144607 _144645 P pat e _108886 _108887) (term867 _144530 _144607 P p _108886 _108887) (term1164 _144529 _144530 _144607 P lt2 z' s _108885 q _108886 _108887)). Qed.
Lemma lem8202085 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8202086 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (z' : type518 _144530 _144607 P) (s : P -> _144529) (p : type560 _144530 _144607 P) (_108885 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108886 : _144530 -> _144607) (_108887 : P) : (term1297 _144529 _144530 _144607 P p lt2 z' s _108885 q _108886 _108887) = (term1298 _144529 _144530 _144607 P lt2 z' s p _108885 q _108886 _108887).
Proof. exact (@lem8202085 (term862 _144529 _144530 _144607 P lt2 z' _108885 _108886 s _108887) (term867 _144530 _144607 P p _108886 _108887) (term1091 _144530 _144607 P _108885 q _108886 _108887)). Qed.
Lemma lem8202100 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8202101 {_144530 _144607 P : Type'} (_108885 : _144530 -> _144607) (p : type560 _144530 _144607 P) (q : type560 _144530 _144607 P) (_108886 : _144530 -> _144607) (_108887 : P) : (term1299 _144530 _144607 P p _108885 q _108886 _108887) = (term1300 _144530 _144607 P _108885 p q _108886 _108887).
Proof. exact (@lem8202100 (term822 _144530 _144607 P q _108885 _108887) (term867 _144530 _144607 P p _108886 _108887) (term867 _144530 _144607 P q _108886 _108887)). Qed.
Lemma lem8202117 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (z' : type518 _144530 _144607 P) (_108885 : _144530 -> _144607) (_108886 : _144530 -> _144607) (s : P -> _144529) (_108887 : P) : (term922 _144529 _144530 _144607 P lt2 z' _108885 _108886 s _108887) = (term922 _144529 _144530 _144607 P lt2 z' _108885 _108886 s _108887).
Proof. exact (eq_refl (term922 _144529 _144530 _144607 P lt2 z' _108885 _108886 s _108887)). Qed.
Lemma lem8202118 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (z' : type518 _144530 _144607 P) (s : P -> _144529) (_108885 : _144530 -> _144607) (p : type560 _144530 _144607 P) (q : type560 _144530 _144607 P) (_108886 : _144530 -> _144607) (_108887 : P) : (term1298 _144529 _144530 _144607 P lt2 z' s p _108885 q _108886 _108887) = (term1301 _144529 _144530 _144607 P lt2 z' s _108885 p q _108886 _108887).
Proof. exact (MK_COMB (@lem8202117 _144529 _144530 _144607 P lt2 z' _108885 _108886 s _108887) (@lem8202101 _144530 _144607 P _108885 p q _108886 _108887)). Qed.
Lemma lem8202129 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (z' : type518 _144530 _144607 P) (s : P -> _144529) (_108885 : _144530 -> _144607) (p : type560 _144530 _144607 P) (q : type560 _144530 _144607 P) (_108886 : _144530 -> _144607) (_108887 : P) : (term1297 _144529 _144530 _144607 P p lt2 z' s _108885 q _108886 _108887) = (term1301 _144529 _144530 _144607 P lt2 z' s _108885 p q _108886 _108887).
Proof. exact (TRANS (@lem8202086 _144529 _144530 _144607 P lt2 z' s p _108885 q _108886 _108887) (@lem8202118 _144529 _144530 _144607 P lt2 z' s _108885 p q _108886 _108887)). Qed.
Lemma lem8202130 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (_108886 : _144530 -> _144607) (_108887 : P) : (term1184 _144530 _144607 _144645 P pat e _108886 _108887) = (term1184 _144530 _144607 _144645 P pat e _108886 _108887).
Proof. exact (eq_refl (term1184 _144530 _144607 _144645 P pat e _108886 _108887)). Qed.
Lemma lem8202131 {_144529 _144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (z' : type518 _144530 _144607 P) (s : P -> _144529) (_108885 : _144530 -> _144607) (p : type560 _144530 _144607 P) (q : type560 _144530 _144607 P) (_108886 : _144530 -> _144607) (_108887 : P) : (term1296 _144529 _144530 _144607 _144645 P pat e p lt2 z' s _108885 q _108886 _108887) = (term1302 _144529 _144530 _144607 _144645 P pat e lt2 z' s _108885 p q _108886 _108887).
Proof. exact (MK_COMB (@lem8202130 _144530 _144607 _144645 P pat e _108886 _108887) (@lem8202129 _144529 _144530 _144607 P lt2 z' s _108885 p q _108886 _108887)). Qed.
Lemma lem8202135 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8202136 {_144529 _144530 _144607 _144645 P : Type'} (lt2 : type1470 _144529 _144530) (z' : type518 _144530 _144607 P) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (_108885 : _144530 -> _144607) (p : type560 _144530 _144607 P) (q : type560 _144530 _144607 P) (_108886 : _144530 -> _144607) (_108887 : P) : (term1302 _144529 _144530 _144607 _144645 P pat e lt2 z' s _108885 p q _108886 _108887) = (term1303 _144529 _144530 _144607 _144645 P lt2 z' s pat e _108885 p q _108886 _108887).
Proof. exact (@lem8202135 (term862 _144529 _144530 _144607 P lt2 z' _108885 _108886 s _108887) (term1096 _144530 _144607 _144645 P pat e _108886 _108887) (term1300 _144530 _144607 P _108885 p q _108886 _108887)). Qed.
Lemma lem8202150 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8202151 {_144530 _144607 _144645 P : Type'} (_108885 : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (q : type560 _144530 _144607 P) (_108886 : _144530 -> _144607) (_108887 : P) : (term1304 _144530 _144607 _144645 P pat e _108885 p q _108886 _108887) = (term1305 _144530 _144607 _144645 P _108885 pat e p q _108886 _108887).
Proof. exact (@lem8202150 (term822 _144530 _144607 P q _108885 _108887) (term1096 _144530 _144607 _144645 P pat e _108886 _108887) (term1306 _144530 _144607 P p q _108886 _108887)). Qed.
Lemma lem8202179 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (z' : type518 _144530 _144607 P) (_108885 : _144530 -> _144607) (_108886 : _144530 -> _144607) (s : P -> _144529) (_108887 : P) : (term922 _144529 _144530 _144607 P lt2 z' _108885 _108886 s _108887) = (term922 _144529 _144530 _144607 P lt2 z' _108885 _108886 s _108887).
Proof. exact (eq_refl (term922 _144529 _144530 _144607 P lt2 z' _108885 _108886 s _108887)). Qed.
Lemma lem8202180 {_144529 _144530 _144607 _144645 P : Type'} (lt2 : type1470 _144529 _144530) (z' : type518 _144530 _144607 P) (s : P -> _144529) (_108885 : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (q : type560 _144530 _144607 P) (_108886 : _144530 -> _144607) (_108887 : P) : (term1303 _144529 _144530 _144607 _144645 P lt2 z' s pat e _108885 p q _108886 _108887) = (term1307 _144529 _144530 _144607 _144645 P lt2 z' s _108885 pat e p q _108886 _108887).
Proof. exact (MK_COMB (@lem8202179 _144529 _144530 _144607 P lt2 z' _108885 _108886 s _108887) (@lem8202151 _144530 _144607 _144645 P _108885 pat e p q _108886 _108887)). Qed.
Lemma lem8202191 {_144529 _144530 _144607 _144645 P : Type'} (lt2 : type1470 _144529 _144530) (z' : type518 _144530 _144607 P) (s : P -> _144529) (_108885 : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (q : type560 _144530 _144607 P) (_108886 : _144530 -> _144607) (_108887 : P) : (term1302 _144529 _144530 _144607 _144645 P pat e lt2 z' s _108885 p q _108886 _108887) = (term1307 _144529 _144530 _144607 _144645 P lt2 z' s _108885 pat e p q _108886 _108887).
Proof. exact (TRANS (@lem8202136 _144529 _144530 _144607 _144645 P lt2 z' s pat e _108885 p q _108886 _108887) (@lem8202180 _144529 _144530 _144607 _144645 P lt2 z' s _108885 pat e p q _108886 _108887)). Qed.
Lemma lem8202192 {_144529 _144530 _144607 _144645 P : Type'} (lt2 : type1470 _144529 _144530) (z' : type518 _144530 _144607 P) (s : P -> _144529) (_108885 : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (q : type560 _144530 _144607 P) (_108886 : _144530 -> _144607) (_108887 : P) : (term1296 _144529 _144530 _144607 _144645 P pat e p lt2 z' s _108885 q _108886 _108887) = (term1307 _144529 _144530 _144607 _144645 P lt2 z' s _108885 pat e p q _108886 _108887).
Proof. exact (TRANS (@lem8202131 _144529 _144530 _144607 _144645 P pat e lt2 z' s _108885 p q _108886 _108887) (@lem8202191 _144529 _144530 _144607 _144645 P lt2 z' s _108885 pat e p q _108886 _108887)). Qed.
Lemma lem8202193 {_144529 _144530 _144607 _144645 P : Type'} (lt2 : type1470 _144529 _144530) (z' : type518 _144530 _144607 P) (s : P -> _144529) (_108885 : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (q : type560 _144530 _144607 P) (_108886 : _144530 -> _144607) (_108887 : P) : (term1163 _144529 _144530 _144607 _144645 P p pat e lt2 z' s _108885 q _108886 _108887) = (term1307 _144529 _144530 _144607 _144645 P lt2 z' s _108885 pat e p q _108886 _108887).
Proof. exact (TRANS (@lem8202069 _144529 _144530 _144607 _144645 P pat e p lt2 z' s _108885 q _108886 _108887) (@lem8202192 _144529 _144530 _144607 _144645 P lt2 z' s _108885 pat e p q _108886 _108887)). Qed.
Lemma lem8202194 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (_108885 : _144530 -> _144607) (_108887 : P) : (term868 _144530 _144607 P p _108885 _108887) = (term868 _144530 _144607 P p _108885 _108887).
Proof. exact (eq_refl (term868 _144530 _144607 P p _108885 _108887)). Qed.
Lemma lem8202195 {_144529 _144530 _144607 _144645 P : Type'} (lt2 : type1470 _144529 _144530) (z' : type518 _144530 _144607 P) (s : P -> _144529) (_108885 : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (q : type560 _144530 _144607 P) (_108886 : _144530 -> _144607) (_108887 : P) : (term1308 _144529 _144530 _144607 _144645 P p pat e lt2 z' s _108885 q _108886 _108887) = (term1309 _144529 _144530 _144607 _144645 P lt2 z' s _108885 pat e p q _108886 _108887).
Proof. exact (MK_COMB (@lem8202194 _144530 _144607 P p _108885 _108887) (@lem8202193 _144529 _144530 _144607 _144645 P lt2 z' s _108885 pat e p q _108886 _108887)). Qed.
Lemma lem8202199 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8202200 {_144529 _144530 _144607 _144645 P : Type'} (lt2 : type1470 _144529 _144530) (z' : type518 _144530 _144607 P) (s : P -> _144529) (_108885 : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (q : type560 _144530 _144607 P) (_108886 : _144530 -> _144607) (_108887 : P) : (term1309 _144529 _144530 _144607 _144645 P lt2 z' s _108885 pat e p q _108886 _108887) = (term1310 _144529 _144530 _144607 _144645 P lt2 z' s _108885 pat e p q _108886 _108887).
Proof. exact (@lem8202199 (term862 _144529 _144530 _144607 P lt2 z' _108885 _108886 s _108887) (term867 _144530 _144607 P p _108885 _108887) (term1305 _144530 _144607 _144645 P _108885 pat e p q _108886 _108887)). Qed.
Lemma lem8202214 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8202215 {_144530 _144607 _144645 P : Type'} (_108885 : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (q : type560 _144530 _144607 P) (_108886 : _144530 -> _144607) (_108887 : P) : (term1311 _144530 _144607 _144645 P _108885 pat e p q _108886 _108887) = (term1312 _144530 _144607 _144645 P _108885 pat e p q _108886 _108887).
Proof. exact (@lem8202214 (term822 _144530 _144607 P q _108885 _108887) (term867 _144530 _144607 P p _108885 _108887) (term1313 _144530 _144607 _144645 P pat e p q _108886 _108887)). Qed.
Lemma lem8202229 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8202230 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (_108885 : _144530 -> _144607) (p : type560 _144530 _144607 P) (q : type560 _144530 _144607 P) (_108886 : _144530 -> _144607) (_108887 : P) : (term1314 _144530 _144607 _144645 P _108885 pat e p q _108886 _108887) = (term1315 _144530 _144607 _144645 P pat e _108885 p q _108886 _108887).
Proof. exact (@lem8202229 (term1096 _144530 _144607 _144645 P pat e _108886 _108887) (term867 _144530 _144607 P p _108885 _108887) (term1306 _144530 _144607 P p q _108886 _108887)). Qed.
Lemma lem8202258 {_144530 _144607 P : Type'} (q : type560 _144530 _144607 P) (_108885 : _144530 -> _144607) (_108887 : P) : (term1089 _144530 _144607 P q _108885 _108887) = (term1089 _144530 _144607 P q _108885 _108887).
Proof. exact (eq_refl (term1089 _144530 _144607 P q _108885 _108887)). Qed.
Lemma lem8202259 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (_108885 : _144530 -> _144607) (p : type560 _144530 _144607 P) (q : type560 _144530 _144607 P) (_108886 : _144530 -> _144607) (_108887 : P) : (term1312 _144530 _144607 _144645 P _108885 pat e p q _108886 _108887) = (term1316 _144530 _144607 _144645 P pat e _108885 p q _108886 _108887).
Proof. exact (MK_COMB (@lem8202258 _144530 _144607 P q _108885 _108887) (@lem8202230 _144530 _144607 _144645 P pat e _108885 p q _108886 _108887)). Qed.
Lemma lem8202270 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (_108885 : _144530 -> _144607) (p : type560 _144530 _144607 P) (q : type560 _144530 _144607 P) (_108886 : _144530 -> _144607) (_108887 : P) : (term1311 _144530 _144607 _144645 P _108885 pat e p q _108886 _108887) = (term1316 _144530 _144607 _144645 P pat e _108885 p q _108886 _108887).
Proof. exact (TRANS (@lem8202215 _144530 _144607 _144645 P _108885 pat e p q _108886 _108887) (@lem8202259 _144530 _144607 _144645 P pat e _108885 p q _108886 _108887)). Qed.
Lemma lem8202271 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (z' : type518 _144530 _144607 P) (_108885 : _144530 -> _144607) (_108886 : _144530 -> _144607) (s : P -> _144529) (_108887 : P) : (term922 _144529 _144530 _144607 P lt2 z' _108885 _108886 s _108887) = (term922 _144529 _144530 _144607 P lt2 z' _108885 _108886 s _108887).
Proof. exact (eq_refl (term922 _144529 _144530 _144607 P lt2 z' _108885 _108886 s _108887)). Qed.
Lemma lem8202272 {_144529 _144530 _144607 _144645 P : Type'} (lt2 : type1470 _144529 _144530) (z' : type518 _144530 _144607 P) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (_108885 : _144530 -> _144607) (p : type560 _144530 _144607 P) (q : type560 _144530 _144607 P) (_108886 : _144530 -> _144607) (_108887 : P) : (term1310 _144529 _144530 _144607 _144645 P lt2 z' s _108885 pat e p q _108886 _108887) = (term1317 _144529 _144530 _144607 _144645 P lt2 z' s pat e _108885 p q _108886 _108887).
Proof. exact (MK_COMB (@lem8202271 _144529 _144530 _144607 P lt2 z' _108885 _108886 s _108887) (@lem8202270 _144530 _144607 _144645 P pat e _108885 p q _108886 _108887)). Qed.
Lemma lem8202283 {_144529 _144530 _144607 _144645 P : Type'} (lt2 : type1470 _144529 _144530) (z' : type518 _144530 _144607 P) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (_108885 : _144530 -> _144607) (p : type560 _144530 _144607 P) (q : type560 _144530 _144607 P) (_108886 : _144530 -> _144607) (_108887 : P) : (term1309 _144529 _144530 _144607 _144645 P lt2 z' s _108885 pat e p q _108886 _108887) = (term1317 _144529 _144530 _144607 _144645 P lt2 z' s pat e _108885 p q _108886 _108887).
Proof. exact (TRANS (@lem8202200 _144529 _144530 _144607 _144645 P lt2 z' s _108885 pat e p q _108886 _108887) (@lem8202272 _144529 _144530 _144607 _144645 P lt2 z' s pat e _108885 p q _108886 _108887)). Qed.
Lemma lem8202284 {_144529 _144530 _144607 _144645 P : Type'} (lt2 : type1470 _144529 _144530) (z' : type518 _144530 _144607 P) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (_108885 : _144530 -> _144607) (p : type560 _144530 _144607 P) (q : type560 _144530 _144607 P) (_108886 : _144530 -> _144607) (_108887 : P) : (term1308 _144529 _144530 _144607 _144645 P p pat e lt2 z' s _108885 q _108886 _108887) = (term1317 _144529 _144530 _144607 _144645 P lt2 z' s pat e _108885 p q _108886 _108887).
Proof. exact (TRANS (@lem8202195 _144529 _144530 _144607 _144645 P lt2 z' s _108885 pat e p q _108886 _108887) (@lem8202283 _144529 _144530 _144607 _144645 P lt2 z' s pat e _108885 p q _108886 _108887)). Qed.
Lemma lem8202285 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (_108885 : _144530 -> _144607) (_108887 : P) : (term1184 _144530 _144607 _144645 P pat e _108885 _108887) = (term1184 _144530 _144607 _144645 P pat e _108885 _108887).
Proof. exact (eq_refl (term1184 _144530 _144607 _144645 P pat e _108885 _108887)). Qed.
Lemma lem8202286 {_144529 _144530 _144607 _144645 P : Type'} (lt2 : type1470 _144529 _144530) (z' : type518 _144530 _144607 P) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (_108885 : _144530 -> _144607) (p : type560 _144530 _144607 P) (q : type560 _144530 _144607 P) (_108886 : _144530 -> _144607) (_108887 : P) : (term1295 _144529 _144530 _144607 _144645 P p pat e lt2 z' s _108885 q _108886 _108887) = (term1318 _144529 _144530 _144607 _144645 P lt2 z' s pat e _108885 p q _108886 _108887).
Proof. exact (MK_COMB (@lem8202285 _144530 _144607 _144645 P pat e _108885 _108887) (@lem8202284 _144529 _144530 _144607 _144645 P lt2 z' s pat e _108885 p q _108886 _108887)). Qed.
Lemma lem8202290 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8202291 {_144529 _144530 _144607 _144645 P : Type'} (lt2 : type1470 _144529 _144530) (z' : type518 _144530 _144607 P) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (_108885 : _144530 -> _144607) (p : type560 _144530 _144607 P) (q : type560 _144530 _144607 P) (_108886 : _144530 -> _144607) (_108887 : P) : (term1318 _144529 _144530 _144607 _144645 P lt2 z' s pat e _108885 p q _108886 _108887) = (term1319 _144529 _144530 _144607 _144645 P lt2 z' s pat e _108885 p q _108886 _108887).
Proof. exact (@lem8202290 (term862 _144529 _144530 _144607 P lt2 z' _108885 _108886 s _108887) (term1096 _144530 _144607 _144645 P pat e _108885 _108887) (term1316 _144530 _144607 _144645 P pat e _108885 p q _108886 _108887)). Qed.
Lemma lem8202305 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8202306 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (_108885 : _144530 -> _144607) (p : type560 _144530 _144607 P) (q : type560 _144530 _144607 P) (_108886 : _144530 -> _144607) (_108887 : P) : (term1320 _144530 _144607 _144645 P pat e _108885 p q _108886 _108887) = (term1321 _144530 _144607 _144645 P pat e _108885 p q _108886 _108887).
Proof. exact (@lem8202305 (term822 _144530 _144607 P q _108885 _108887) (term1096 _144530 _144607 _144645 P pat e _108885 _108887) (term1315 _144530 _144607 _144645 P pat e _108885 p q _108886 _108887)). Qed.
Lemma lem8202356 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (z' : type518 _144530 _144607 P) (_108885 : _144530 -> _144607) (_108886 : _144530 -> _144607) (s : P -> _144529) (_108887 : P) : (term922 _144529 _144530 _144607 P lt2 z' _108885 _108886 s _108887) = (term922 _144529 _144530 _144607 P lt2 z' _108885 _108886 s _108887).
Proof. exact (eq_refl (term922 _144529 _144530 _144607 P lt2 z' _108885 _108886 s _108887)). Qed.
Lemma lem8202357 {_144529 _144530 _144607 _144645 P : Type'} (lt2 : type1470 _144529 _144530) (z' : type518 _144530 _144607 P) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (_108885 : _144530 -> _144607) (p : type560 _144530 _144607 P) (q : type560 _144530 _144607 P) (_108886 : _144530 -> _144607) (_108887 : P) : (term1319 _144529 _144530 _144607 _144645 P lt2 z' s pat e _108885 p q _108886 _108887) = (term1322 _144529 _144530 _144607 _144645 P lt2 z' s pat e _108885 p q _108886 _108887).
Proof. exact (MK_COMB (@lem8202356 _144529 _144530 _144607 P lt2 z' _108885 _108886 s _108887) (@lem8202306 _144530 _144607 _144645 P pat e _108885 p q _108886 _108887)). Qed.
Lemma lem8202368 {_144529 _144530 _144607 _144645 P : Type'} (lt2 : type1470 _144529 _144530) (z' : type518 _144530 _144607 P) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (_108885 : _144530 -> _144607) (p : type560 _144530 _144607 P) (q : type560 _144530 _144607 P) (_108886 : _144530 -> _144607) (_108887 : P) : (term1318 _144529 _144530 _144607 _144645 P lt2 z' s pat e _108885 p q _108886 _108887) = (term1322 _144529 _144530 _144607 _144645 P lt2 z' s pat e _108885 p q _108886 _108887).
Proof. exact (TRANS (@lem8202291 _144529 _144530 _144607 _144645 P lt2 z' s pat e _108885 p q _108886 _108887) (@lem8202357 _144529 _144530 _144607 _144645 P lt2 z' s pat e _108885 p q _108886 _108887)). Qed.
Lemma lem8202369 {_144529 _144530 _144607 _144645 P : Type'} (lt2 : type1470 _144529 _144530) (z' : type518 _144530 _144607 P) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (_108885 : _144530 -> _144607) (p : type560 _144530 _144607 P) (q : type560 _144530 _144607 P) (_108886 : _144530 -> _144607) (_108887 : P) : (term1295 _144529 _144530 _144607 _144645 P p pat e lt2 z' s _108885 q _108886 _108887) = (term1322 _144529 _144530 _144607 _144645 P lt2 z' s pat e _108885 p q _108886 _108887).
Proof. exact (TRANS (@lem8202286 _144529 _144530 _144607 _144645 P lt2 z' s pat e _108885 p q _108886 _108887) (@lem8202368 _144529 _144530 _144607 _144645 P lt2 z' s pat e _108885 p q _108886 _108887)). Qed.
Lemma lem8202370 {_144529 _144530 _144607 _144645 P : Type'} (lt2 : type1470 _144529 _144530) (z' : type518 _144530 _144607 P) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (_108885 : _144530 -> _144607) (p : type560 _144530 _144607 P) (q : type560 _144530 _144607 P) (_108886 : _144530 -> _144607) (_108887 : P) : (term1166 _144529 _144530 _144607 _144645 P p pat e lt2 z' s _108885 q _108886 _108887) = (term1322 _144529 _144530 _144607 _144645 P lt2 z' s pat e _108885 p q _108886 _108887).
Proof. exact (TRANS (@lem8202042 _144529 _144530 _144607 _144645 P p pat e lt2 z' s _108885 q _108886 _108887) (@lem8202369 _144529 _144530 _144607 _144645 P lt2 z' s pat e _108885 p q _108886 _108887)). Qed.
Lemma lem8202371 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8202372 {_144529 _144530 _144607 _144645 P : Type'} (lt2 : type1470 _144529 _144530) (z' : type518 _144530 _144607 P) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (_108885 : _144530 -> _144607) (p : type560 _144530 _144607 P) (q : type560 _144530 _144607 P) (_108886 : _144530 -> _144607) (_108887 : P) : (term1323 _144529 _144530 _144607 _144645 P p pat e lt2 z' s _108885 q _108886 _108887) = (term1324 _144529 _144530 _144607 _144645 P lt2 z' s pat e _108885 p q _108886 _108887).
Proof. exact (MK_COMB (@lem8202371) (@lem8202370 _144529 _144530 _144607 _144645 P lt2 z' s pat e _108885 p q _108886 _108887)). Qed.
Lemma lem8202386 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8202387 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (_108885 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108886 : _144530 -> _144607) (_108887 : P) : (term1325 _144530 _144607 _144645 P p pat e _108885 q _108886 _108887) = (term1326 _144530 _144607 _144645 P p pat e _108885 q _108886 _108887).
Proof. exact (@lem8202386 (term1096 _144530 _144607 _144645 P pat e _108885 _108887) (term867 _144530 _144607 P p _108885 _108887) (term1327 _144530 _144607 _144645 P p pat e _108885 q _108886 _108887)). Qed.
Lemma lem8202413 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8202414 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_108885 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108886 : _144530 -> _144607) (_108887 : P) : (term1327 _144530 _144607 _144645 P p pat e _108885 q _108886 _108887) = (term1328 _144530 _144607 _144645 P pat e p _108885 q _108886 _108887).
Proof. exact (@lem8202413 (term1096 _144530 _144607 _144645 P pat e _108886 _108887) (term867 _144530 _144607 P p _108886 _108887) (term1091 _144530 _144607 P _108885 q _108886 _108887)). Qed.
Lemma lem8202430 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8202431 {_144530 _144607 P : Type'} (_108885 : _144530 -> _144607) (p : type560 _144530 _144607 P) (q : type560 _144530 _144607 P) (_108886 : _144530 -> _144607) (_108887 : P) : (term1299 _144530 _144607 P p _108885 q _108886 _108887) = (term1300 _144530 _144607 P _108885 p q _108886 _108887).
Proof. exact (@lem8202430 (term822 _144530 _144607 P q _108885 _108887) (term867 _144530 _144607 P p _108886 _108887) (term867 _144530 _144607 P q _108886 _108887)). Qed.
Lemma lem8202447 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (_108886 : _144530 -> _144607) (_108887 : P) : (term1184 _144530 _144607 _144645 P pat e _108886 _108887) = (term1184 _144530 _144607 _144645 P pat e _108886 _108887).
Proof. exact (eq_refl (term1184 _144530 _144607 _144645 P pat e _108886 _108887)). Qed.
Lemma lem8202448 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (_108885 : _144530 -> _144607) (p : type560 _144530 _144607 P) (q : type560 _144530 _144607 P) (_108886 : _144530 -> _144607) (_108887 : P) : (term1328 _144530 _144607 _144645 P pat e p _108885 q _108886 _108887) = (term1304 _144530 _144607 _144645 P pat e _108885 p q _108886 _108887).
Proof. exact (MK_COMB (@lem8202447 _144530 _144607 _144645 P pat e _108886 _108887) (@lem8202431 _144530 _144607 P _108885 p q _108886 _108887)). Qed.
Lemma lem8202452 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8202453 {_144530 _144607 _144645 P : Type'} (_108885 : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (q : type560 _144530 _144607 P) (_108886 : _144530 -> _144607) (_108887 : P) : (term1304 _144530 _144607 _144645 P pat e _108885 p q _108886 _108887) = (term1305 _144530 _144607 _144645 P _108885 pat e p q _108886 _108887).
Proof. exact (@lem8202452 (term822 _144530 _144607 P q _108885 _108887) (term1096 _144530 _144607 _144645 P pat e _108886 _108887) (term1306 _144530 _144607 P p q _108886 _108887)). Qed.
Lemma lem8202481 {_144530 _144607 _144645 P : Type'} (_108885 : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (q : type560 _144530 _144607 P) (_108886 : _144530 -> _144607) (_108887 : P) : (term1328 _144530 _144607 _144645 P pat e p _108885 q _108886 _108887) = (term1305 _144530 _144607 _144645 P _108885 pat e p q _108886 _108887).
Proof. exact (TRANS (@lem8202448 _144530 _144607 _144645 P pat e _108885 p q _108886 _108887) (@lem8202453 _144530 _144607 _144645 P _108885 pat e p q _108886 _108887)). Qed.
Lemma lem8202482 {_144530 _144607 _144645 P : Type'} (_108885 : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (q : type560 _144530 _144607 P) (_108886 : _144530 -> _144607) (_108887 : P) : (term1327 _144530 _144607 _144645 P p pat e _108885 q _108886 _108887) = (term1305 _144530 _144607 _144645 P _108885 pat e p q _108886 _108887).
Proof. exact (TRANS (@lem8202414 _144530 _144607 _144645 P pat e p _108885 q _108886 _108887) (@lem8202481 _144530 _144607 _144645 P _108885 pat e p q _108886 _108887)). Qed.
Lemma lem8202483 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (_108885 : _144530 -> _144607) (_108887 : P) : (term868 _144530 _144607 P p _108885 _108887) = (term868 _144530 _144607 P p _108885 _108887).
Proof. exact (eq_refl (term868 _144530 _144607 P p _108885 _108887)). Qed.
Lemma lem8202484 {_144530 _144607 _144645 P : Type'} (_108885 : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (q : type560 _144530 _144607 P) (_108886 : _144530 -> _144607) (_108887 : P) : (term1329 _144530 _144607 _144645 P p pat e _108885 q _108886 _108887) = (term1311 _144530 _144607 _144645 P _108885 pat e p q _108886 _108887).
Proof. exact (MK_COMB (@lem8202483 _144530 _144607 P p _108885 _108887) (@lem8202482 _144530 _144607 _144645 P _108885 pat e p q _108886 _108887)). Qed.
Lemma lem8202488 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8202489 {_144530 _144607 _144645 P : Type'} (_108885 : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (q : type560 _144530 _144607 P) (_108886 : _144530 -> _144607) (_108887 : P) : (term1311 _144530 _144607 _144645 P _108885 pat e p q _108886 _108887) = (term1312 _144530 _144607 _144645 P _108885 pat e p q _108886 _108887).
Proof. exact (@lem8202488 (term822 _144530 _144607 P q _108885 _108887) (term867 _144530 _144607 P p _108885 _108887) (term1313 _144530 _144607 _144645 P pat e p q _108886 _108887)). Qed.
Lemma lem8202503 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8202504 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (_108885 : _144530 -> _144607) (p : type560 _144530 _144607 P) (q : type560 _144530 _144607 P) (_108886 : _144530 -> _144607) (_108887 : P) : (term1314 _144530 _144607 _144645 P _108885 pat e p q _108886 _108887) = (term1315 _144530 _144607 _144645 P pat e _108885 p q _108886 _108887).
Proof. exact (@lem8202503 (term1096 _144530 _144607 _144645 P pat e _108886 _108887) (term867 _144530 _144607 P p _108885 _108887) (term1306 _144530 _144607 P p q _108886 _108887)). Qed.
Lemma lem8202532 {_144530 _144607 P : Type'} (q : type560 _144530 _144607 P) (_108885 : _144530 -> _144607) (_108887 : P) : (term1089 _144530 _144607 P q _108885 _108887) = (term1089 _144530 _144607 P q _108885 _108887).
Proof. exact (eq_refl (term1089 _144530 _144607 P q _108885 _108887)). Qed.
Lemma lem8202533 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (_108885 : _144530 -> _144607) (p : type560 _144530 _144607 P) (q : type560 _144530 _144607 P) (_108886 : _144530 -> _144607) (_108887 : P) : (term1312 _144530 _144607 _144645 P _108885 pat e p q _108886 _108887) = (term1316 _144530 _144607 _144645 P pat e _108885 p q _108886 _108887).
Proof. exact (MK_COMB (@lem8202532 _144530 _144607 P q _108885 _108887) (@lem8202504 _144530 _144607 _144645 P pat e _108885 p q _108886 _108887)). Qed.
Lemma lem8202544 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (_108885 : _144530 -> _144607) (p : type560 _144530 _144607 P) (q : type560 _144530 _144607 P) (_108886 : _144530 -> _144607) (_108887 : P) : (term1311 _144530 _144607 _144645 P _108885 pat e p q _108886 _108887) = (term1316 _144530 _144607 _144645 P pat e _108885 p q _108886 _108887).
Proof. exact (TRANS (@lem8202489 _144530 _144607 _144645 P _108885 pat e p q _108886 _108887) (@lem8202533 _144530 _144607 _144645 P pat e _108885 p q _108886 _108887)). Qed.
Lemma lem8202545 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (_108885 : _144530 -> _144607) (p : type560 _144530 _144607 P) (q : type560 _144530 _144607 P) (_108886 : _144530 -> _144607) (_108887 : P) : (term1329 _144530 _144607 _144645 P p pat e _108885 q _108886 _108887) = (term1316 _144530 _144607 _144645 P pat e _108885 p q _108886 _108887).
Proof. exact (TRANS (@lem8202484 _144530 _144607 _144645 P _108885 pat e p q _108886 _108887) (@lem8202544 _144530 _144607 _144645 P pat e _108885 p q _108886 _108887)). Qed.
Lemma lem8202546 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (_108885 : _144530 -> _144607) (_108887 : P) : (term1184 _144530 _144607 _144645 P pat e _108885 _108887) = (term1184 _144530 _144607 _144645 P pat e _108885 _108887).
Proof. exact (eq_refl (term1184 _144530 _144607 _144645 P pat e _108885 _108887)). Qed.
Lemma lem8202547 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (_108885 : _144530 -> _144607) (p : type560 _144530 _144607 P) (q : type560 _144530 _144607 P) (_108886 : _144530 -> _144607) (_108887 : P) : (term1326 _144530 _144607 _144645 P p pat e _108885 q _108886 _108887) = (term1320 _144530 _144607 _144645 P pat e _108885 p q _108886 _108887).
Proof. exact (MK_COMB (@lem8202546 _144530 _144607 _144645 P pat e _108885 _108887) (@lem8202545 _144530 _144607 _144645 P pat e _108885 p q _108886 _108887)). Qed.
Lemma lem8202551 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8202552 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (_108885 : _144530 -> _144607) (p : type560 _144530 _144607 P) (q : type560 _144530 _144607 P) (_108886 : _144530 -> _144607) (_108887 : P) : (term1320 _144530 _144607 _144645 P pat e _108885 p q _108886 _108887) = (term1321 _144530 _144607 _144645 P pat e _108885 p q _108886 _108887).
Proof. exact (@lem8202551 (term822 _144530 _144607 P q _108885 _108887) (term1096 _144530 _144607 _144645 P pat e _108885 _108887) (term1315 _144530 _144607 _144645 P pat e _108885 p q _108886 _108887)). Qed.
Lemma lem8202602 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (_108885 : _144530 -> _144607) (p : type560 _144530 _144607 P) (q : type560 _144530 _144607 P) (_108886 : _144530 -> _144607) (_108887 : P) : (term1326 _144530 _144607 _144645 P p pat e _108885 q _108886 _108887) = (term1321 _144530 _144607 _144645 P pat e _108885 p q _108886 _108887).
Proof. exact (TRANS (@lem8202547 _144530 _144607 _144645 P pat e _108885 p q _108886 _108887) (@lem8202552 _144530 _144607 _144645 P pat e _108885 p q _108886 _108887)). Qed.
Lemma lem8202603 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (_108885 : _144530 -> _144607) (p : type560 _144530 _144607 P) (q : type560 _144530 _144607 P) (_108886 : _144530 -> _144607) (_108887 : P) : (term1325 _144530 _144607 _144645 P p pat e _108885 q _108886 _108887) = (term1321 _144530 _144607 _144645 P pat e _108885 p q _108886 _108887).
Proof. exact (TRANS (@lem8202387 _144530 _144607 _144645 P p pat e _108885 q _108886 _108887) (@lem8202602 _144530 _144607 _144645 P pat e _108885 p q _108886 _108887)). Qed.
Lemma lem8202604 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (z' : type518 _144530 _144607 P) (_108885 : _144530 -> _144607) (_108886 : _144530 -> _144607) (s : P -> _144529) (_108887 : P) : (term922 _144529 _144530 _144607 P lt2 z' _108885 _108886 s _108887) = (term922 _144529 _144530 _144607 P lt2 z' _108885 _108886 s _108887).
Proof. exact (eq_refl (term922 _144529 _144530 _144607 P lt2 z' _108885 _108886 s _108887)). Qed.
Lemma lem8202605 {_144529 _144530 _144607 _144645 P : Type'} (lt2 : type1470 _144529 _144530) (z' : type518 _144530 _144607 P) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (_108885 : _144530 -> _144607) (p : type560 _144530 _144607 P) (q : type560 _144530 _144607 P) (_108886 : _144530 -> _144607) (_108887 : P) : (term1330 _144529 _144530 _144607 _144645 P lt2 z' s p pat e _108885 q _108886 _108887) = (term1322 _144529 _144530 _144607 _144645 P lt2 z' s pat e _108885 p q _108886 _108887).
Proof. exact (MK_COMB (@lem8202604 _144529 _144530 _144607 P lt2 z' _108885 _108886 s _108887) (@lem8202603 _144530 _144607 _144645 P pat e _108885 p q _108886 _108887)). Qed.
Lemma lem8202616 {_144529 _144530 _144607 _144645 P : Type'} (lt2 : type1470 _144529 _144530) (z' : type518 _144530 _144607 P) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (_108885 : _144530 -> _144607) (p : type560 _144530 _144607 P) (q : type560 _144530 _144607 P) (_108886 : _144530 -> _144607) (_108887 : P) : ((term1166 _144529 _144530 _144607 _144645 P p pat e lt2 z' s _108885 q _108886 _108887) = (term1330 _144529 _144530 _144607 _144645 P lt2 z' s p pat e _108885 q _108886 _108887)) = ((term1322 _144529 _144530 _144607 _144645 P lt2 z' s pat e _108885 p q _108886 _108887) = (term1322 _144529 _144530 _144607 _144645 P lt2 z' s pat e _108885 p q _108886 _108887)).
Proof. exact (MK_COMB (@lem8202372 _144529 _144530 _144607 _144645 P lt2 z' s pat e _108885 p q _108886 _108887) (@lem8202605 _144529 _144530 _144607 _144645 P lt2 z' s pat e _108885 p q _108886 _108887)). Qed.
Lemma lem8202618 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem20665 A x) (@lem20664 A x)). Qed.
Lemma lem8202619 (x : Prop) : (x = x) = True.
Proof. exact (@lem8202618 Prop x). Qed.
Lemma lem8202620 {_144529 _144530 _144607 _144645 P : Type'} (lt2 : type1470 _144529 _144530) (z' : type518 _144530 _144607 P) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (_108885 : _144530 -> _144607) (p : type560 _144530 _144607 P) (q : type560 _144530 _144607 P) (_108886 : _144530 -> _144607) (_108887 : P) : ((term1322 _144529 _144530 _144607 _144645 P lt2 z' s pat e _108885 p q _108886 _108887) = (term1322 _144529 _144530 _144607 _144645 P lt2 z' s pat e _108885 p q _108886 _108887)) = True.
Proof. exact (@lem8202619 (term1322 _144529 _144530 _144607 _144645 P lt2 z' s pat e _108885 p q _108886 _108887)). Qed.
Lemma lem8202621 {_144529 _144530 _144607 _144645 P : Type'} (lt2 : type1470 _144529 _144530) (z' : type518 _144530 _144607 P) (s : P -> _144529) (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (_108885 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108886 : _144530 -> _144607) (_108887 : P) : ((term1166 _144529 _144530 _144607 _144645 P p pat e lt2 z' s _108885 q _108886 _108887) = (term1330 _144529 _144530 _144607 _144645 P lt2 z' s p pat e _108885 q _108886 _108887)) = True.
Proof. exact (TRANS (@lem8202616 _144529 _144530 _144607 _144645 P lt2 z' s pat e _108885 p q _108886 _108887) (@lem8202620 _144529 _144530 _144607 _144645 P lt2 z' s pat e _108885 p q _108886 _108887)). Qed.
Lemma lem8202622 {_144529 _144530 _144607 _144645 P : Type'} (lt2 : type1470 _144529 _144530) (z' : type518 _144530 _144607 P) (s : P -> _144529) (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (_108885 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108886 : _144530 -> _144607) (_108887 : P) : True = ((term1166 _144529 _144530 _144607 _144645 P p pat e lt2 z' s _108885 q _108886 _108887) = (term1330 _144529 _144530 _144607 _144645 P lt2 z' s p pat e _108885 q _108886 _108887)).
Proof. exact (SYM (@lem8202621 _144529 _144530 _144607 _144645 P lt2 z' s p pat e _108885 q _108886 _108887)). Qed.
Lemma lem8202623 {_144529 _144530 _144607 _144645 P : Type'} (lt2 : type1470 _144529 _144530) (z' : type518 _144530 _144607 P) (s : P -> _144529) (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (_108885 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108886 : _144530 -> _144607) (_108887 : P) : (term1166 _144529 _144530 _144607 _144645 P p pat e lt2 z' s _108885 q _108886 _108887) = (term1330 _144529 _144530 _144607 _144645 P lt2 z' s p pat e _108885 q _108886 _108887).
Proof. exact (EQ_MP (@lem8202622 _144529 _144530 _144607 _144645 P lt2 z' s p pat e _108885 q _108886 _108887) (@lem0)). Qed.
Lemma lem8202624 {_144529 _144530 _144607 _144645 P : Type'} (_108885 : _144530 -> _144607) (_108886 : _144530 -> _144607) (_108887 : P) (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z' : type518 _144530 _144607 P) (q : type560 _144530 _144607 P) (h1 : term814 _144529 _144530 _144607 _144645 P p pat e lt2 s z' q) : term1330 _144529 _144530 _144607 _144645 P lt2 z' s p pat e _108885 q _108886 _108887.
Proof. exact (EQ_MP (@lem8202623 _144529 _144530 _144607 _144645 P lt2 z' s p pat e _108885 q _108886 _108887) (@lem8199771 _144529 _144530 _144607 _144645 P _108885 _108886 _108887 p pat e lt2 s z' q h1)). Qed.
Lemma lem8202626 (b : Prop) (a : Prop) : (a \/ b) = (term940 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem8202627 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (z' : type518 _144530 _144607 P) (_108885 : _144530 -> _144607) (_108886 : _144530 -> _144607) (s : P -> _144529) (_108887 : P) : (term1330 _144529 _144530 _144607 _144645 P lt2 z' s p pat e _108885 q _108886 _108887) = (term1331 _144529 _144530 _144607 _144645 P p pat e q lt2 z' _108885 _108886 s _108887).
Proof. exact (@lem8202626 (term1325 _144530 _144607 _144645 P p pat e _108885 q _108886 _108887) (term862 _144529 _144530 _144607 P lt2 z' _108885 _108886 s _108887)). Qed.
Lemma lem8202629 (a : Prop) (b : Prop) : (term942 a b) = (term943 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem8202630 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (_108885 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108886 : _144530 -> _144607) (_108887 : P) : (term1332 _144530 _144607 _144645 P p pat e _108885 q _108886 _108887) = (term1333 _144530 _144607 _144645 P p pat e _108885 q _108886 _108887).
Proof. exact (@lem8202629 (term867 _144530 _144607 P p _108885 _108887) (term1334 _144530 _144607 _144645 P p pat e _108885 q _108886 _108887)). Qed.
Lemma lem8202632 (a : Prop) : (term15 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8202633 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (_108885 : _144530 -> _144607) (_108887 : P) : (term946 _144530 _144607 P p _108885 _108887) = (term822 _144530 _144607 P p _108885 _108887).
Proof. exact (@lem8202632 (term822 _144530 _144607 P p _108885 _108887)). Qed.
Lemma lem8202634 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8202635 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (_108885 : _144530 -> _144607) (_108887 : P) : (term947 _144530 _144607 P p _108885 _108887) = (term948 _144530 _144607 P p _108885 _108887).
Proof. exact (MK_COMB (@lem8202634) (@lem8202633 _144530 _144607 P p _108885 _108887)). Qed.
Lemma lem8202637 (a : Prop) (b : Prop) : (term942 a b) = (term943 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem8202638 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (_108885 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108886 : _144530 -> _144607) (_108887 : P) : (term1335 _144530 _144607 _144645 P p pat e _108885 q _108886 _108887) = (term1336 _144530 _144607 _144645 P p pat e _108885 q _108886 _108887).
Proof. exact (@lem8202637 (term1096 _144530 _144607 _144645 P pat e _108885 _108887) (term1327 _144530 _144607 _144645 P p pat e _108885 q _108886 _108887)). Qed.
Lemma lem8202640 (a : Prop) : (term15 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8202641 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (_108885 : _144530 -> _144607) (_108887 : P) : (term1220 _144530 _144607 _144645 P pat e _108885 _108887) = ((term835 _144530 _144607 _144645 P pat _108885 _108887) = (term835 _144530 _144607 _144645 P e _108885 _108887)).
Proof. exact (@lem8202640 ((term835 _144530 _144607 _144645 P pat _108885 _108887) = (term835 _144530 _144607 _144645 P e _108885 _108887))). Qed.
Lemma lem8202642 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8202643 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (_108885 : _144530 -> _144607) (_108887 : P) : (term1221 _144530 _144607 _144645 P pat e _108885 _108887) = (term1222 _144530 _144607 _144645 P pat e _108885 _108887).
Proof. exact (MK_COMB (@lem8202642) (@lem8202641 _144530 _144607 _144645 P pat e _108885 _108887)). Qed.
Lemma lem8202645 (a : Prop) (b : Prop) : (term942 a b) = (term943 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem8202646 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (_108885 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108886 : _144530 -> _144607) (_108887 : P) : (term1337 _144530 _144607 _144645 P p pat e _108885 q _108886 _108887) = (term1338 _144530 _144607 _144645 P p pat e _108885 q _108886 _108887).
Proof. exact (@lem8202645 (term867 _144530 _144607 P p _108886 _108887) (term1339 _144530 _144607 _144645 P pat e _108885 q _108886 _108887)). Qed.
Lemma lem8202648 (a : Prop) : (term15 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8202649 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (_108886 : _144530 -> _144607) (_108887 : P) : (term946 _144530 _144607 P p _108886 _108887) = (term822 _144530 _144607 P p _108886 _108887).
Proof. exact (@lem8202648 (term822 _144530 _144607 P p _108886 _108887)). Qed.
Lemma lem8202650 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8202651 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (_108886 : _144530 -> _144607) (_108887 : P) : (term947 _144530 _144607 P p _108886 _108887) = (term948 _144530 _144607 P p _108886 _108887).
Proof. exact (MK_COMB (@lem8202650) (@lem8202649 _144530 _144607 P p _108886 _108887)). Qed.
Lemma lem8202653 (a : Prop) (b : Prop) : (term942 a b) = (term943 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem8202654 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (_108885 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108886 : _144530 -> _144607) (_108887 : P) : (term1340 _144530 _144607 _144645 P pat e _108885 q _108886 _108887) = (term1341 _144530 _144607 _144645 P pat e _108885 q _108886 _108887).
Proof. exact (@lem8202653 (term1096 _144530 _144607 _144645 P pat e _108886 _108887) (term1091 _144530 _144607 P _108885 q _108886 _108887)). Qed.
Lemma lem8202656 (a : Prop) : (term15 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8202657 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (_108886 : _144530 -> _144607) (_108887 : P) : (term1220 _144530 _144607 _144645 P pat e _108886 _108887) = ((term835 _144530 _144607 _144645 P pat _108886 _108887) = (term835 _144530 _144607 _144645 P e _108886 _108887)).
Proof. exact (@lem8202656 ((term835 _144530 _144607 _144645 P pat _108886 _108887) = (term835 _144530 _144607 _144645 P e _108886 _108887))). Qed.
Lemma lem8202658 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8202659 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (_108886 : _144530 -> _144607) (_108887 : P) : (term1221 _144530 _144607 _144645 P pat e _108886 _108887) = (term1222 _144530 _144607 _144645 P pat e _108886 _108887).
Proof. exact (MK_COMB (@lem8202658) (@lem8202657 _144530 _144607 _144645 P pat e _108886 _108887)). Qed.
Lemma lem8202661 (a : Prop) (b : Prop) : (term942 a b) = (term943 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem8202662 {_144530 _144607 P : Type'} (_108885 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108886 : _144530 -> _144607) (_108887 : P) : (term1342 _144530 _144607 P _108885 q _108886 _108887) = (term1343 _144530 _144607 P _108885 q _108886 _108887).
Proof. exact (@lem8202661 (term822 _144530 _144607 P q _108885 _108887) (term867 _144530 _144607 P q _108886 _108887)). Qed.
Lemma lem8202664 (a : Prop) : (term15 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8202665 {_144530 _144607 P : Type'} (q : type560 _144530 _144607 P) (_108886 : _144530 -> _144607) (_108887 : P) : (term946 _144530 _144607 P q _108886 _108887) = (term822 _144530 _144607 P q _108886 _108887).
Proof. exact (@lem8202664 (term822 _144530 _144607 P q _108886 _108887)). Qed.
Lemma lem8202666 {_144530 _144607 P : Type'} (q : type560 _144530 _144607 P) (_108885 : _144530 -> _144607) (_108887 : P) : (term1078 _144530 _144607 P q _108885 _108887) = (term1078 _144530 _144607 P q _108885 _108887).
Proof. exact (eq_refl (term1078 _144530 _144607 P q _108885 _108887)). Qed.
Lemma lem8202667 {_144530 _144607 P : Type'} (_108885 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108886 : _144530 -> _144607) (_108887 : P) : (term1343 _144530 _144607 P _108885 q _108886 _108887) = (term1080 _144530 _144607 P _108885 q _108886 _108887).
Proof. exact (MK_COMB (@lem8202666 _144530 _144607 P q _108885 _108887) (@lem8202665 _144530 _144607 P q _108886 _108887)). Qed.
Lemma lem8202668 {_144530 _144607 P : Type'} (_108885 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108886 : _144530 -> _144607) (_108887 : P) : (term1342 _144530 _144607 P _108885 q _108886 _108887) = (term1080 _144530 _144607 P _108885 q _108886 _108887).
Proof. exact (TRANS (@lem8202662 _144530 _144607 P _108885 q _108886 _108887) (@lem8202667 _144530 _144607 P _108885 q _108886 _108887)). Qed.
Lemma lem8202669 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (_108885 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108886 : _144530 -> _144607) (_108887 : P) : (term1341 _144530 _144607 _144645 P pat e _108885 q _108886 _108887) = (term1344 _144530 _144607 _144645 P pat e _108885 q _108886 _108887).
Proof. exact (MK_COMB (@lem8202659 _144530 _144607 _144645 P pat e _108886 _108887) (@lem8202668 _144530 _144607 P _108885 q _108886 _108887)). Qed.
Lemma lem8202670 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (_108885 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108886 : _144530 -> _144607) (_108887 : P) : (term1340 _144530 _144607 _144645 P pat e _108885 q _108886 _108887) = (term1344 _144530 _144607 _144645 P pat e _108885 q _108886 _108887).
Proof. exact (TRANS (@lem8202654 _144530 _144607 _144645 P pat e _108885 q _108886 _108887) (@lem8202669 _144530 _144607 _144645 P pat e _108885 q _108886 _108887)). Qed.
Lemma lem8202671 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (_108885 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108886 : _144530 -> _144607) (_108887 : P) : (term1338 _144530 _144607 _144645 P p pat e _108885 q _108886 _108887) = (term1345 _144530 _144607 _144645 P p pat e _108885 q _108886 _108887).
Proof. exact (MK_COMB (@lem8202651 _144530 _144607 P p _108886 _108887) (@lem8202670 _144530 _144607 _144645 P pat e _108885 q _108886 _108887)). Qed.
Lemma lem8202672 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (_108885 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108886 : _144530 -> _144607) (_108887 : P) : (term1337 _144530 _144607 _144645 P p pat e _108885 q _108886 _108887) = (term1345 _144530 _144607 _144645 P p pat e _108885 q _108886 _108887).
Proof. exact (TRANS (@lem8202646 _144530 _144607 _144645 P p pat e _108885 q _108886 _108887) (@lem8202671 _144530 _144607 _144645 P p pat e _108885 q _108886 _108887)). Qed.
Lemma lem8202673 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (_108885 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108886 : _144530 -> _144607) (_108887 : P) : (term1336 _144530 _144607 _144645 P p pat e _108885 q _108886 _108887) = (term1346 _144530 _144607 _144645 P p pat e _108885 q _108886 _108887).
Proof. exact (MK_COMB (@lem8202643 _144530 _144607 _144645 P pat e _108885 _108887) (@lem8202672 _144530 _144607 _144645 P p pat e _108885 q _108886 _108887)). Qed.
Lemma lem8202674 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (_108885 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108886 : _144530 -> _144607) (_108887 : P) : (term1335 _144530 _144607 _144645 P p pat e _108885 q _108886 _108887) = (term1346 _144530 _144607 _144645 P p pat e _108885 q _108886 _108887).
Proof. exact (TRANS (@lem8202638 _144530 _144607 _144645 P p pat e _108885 q _108886 _108887) (@lem8202673 _144530 _144607 _144645 P p pat e _108885 q _108886 _108887)). Qed.
Lemma lem8202675 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (_108885 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108886 : _144530 -> _144607) (_108887 : P) : (term1333 _144530 _144607 _144645 P p pat e _108885 q _108886 _108887) = (term1347 _144530 _144607 _144645 P p pat e _108885 q _108886 _108887).
Proof. exact (MK_COMB (@lem8202635 _144530 _144607 P p _108885 _108887) (@lem8202674 _144530 _144607 _144645 P p pat e _108885 q _108886 _108887)). Qed.
Lemma lem8202676 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (_108885 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108886 : _144530 -> _144607) (_108887 : P) : (term1332 _144530 _144607 _144645 P p pat e _108885 q _108886 _108887) = (term1347 _144530 _144607 _144645 P p pat e _108885 q _108886 _108887).
Proof. exact (TRANS (@lem8202630 _144530 _144607 _144645 P p pat e _108885 q _108886 _108887) (@lem8202675 _144530 _144607 _144645 P p pat e _108885 q _108886 _108887)). Qed.
Lemma lem8202677 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8202678 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (_108885 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108886 : _144530 -> _144607) (_108887 : P) : (term1348 _144530 _144607 _144645 P p pat e _108885 q _108886 _108887) = (term1349 _144530 _144607 _144645 P p pat e _108885 q _108886 _108887).
Proof. exact (MK_COMB (@lem8202677) (@lem8202676 _144530 _144607 _144645 P p pat e _108885 q _108886 _108887)). Qed.
Lemma lem8202679 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (z' : type518 _144530 _144607 P) (_108885 : _144530 -> _144607) (_108886 : _144530 -> _144607) (s : P -> _144529) (_108887 : P) : (term862 _144529 _144530 _144607 P lt2 z' _108885 _108886 s _108887) = (term862 _144529 _144530 _144607 P lt2 z' _108885 _108886 s _108887).
Proof. exact (eq_refl (term862 _144529 _144530 _144607 P lt2 z' _108885 _108886 s _108887)). Qed.
Lemma lem8202680 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (z' : type518 _144530 _144607 P) (_108885 : _144530 -> _144607) (_108886 : _144530 -> _144607) (s : P -> _144529) (_108887 : P) : (term1331 _144529 _144530 _144607 _144645 P p pat e q lt2 z' _108885 _108886 s _108887) = (term1350 _144529 _144530 _144607 _144645 P p pat e q lt2 z' _108885 _108886 s _108887).
Proof. exact (MK_COMB (@lem8202678 _144530 _144607 _144645 P p pat e _108885 q _108886 _108887) (@lem8202679 _144529 _144530 _144607 P lt2 z' _108885 _108886 s _108887)). Qed.
Lemma lem8202681 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (z' : type518 _144530 _144607 P) (_108885 : _144530 -> _144607) (_108886 : _144530 -> _144607) (s : P -> _144529) (_108887 : P) : (term1330 _144529 _144530 _144607 _144645 P lt2 z' s p pat e _108885 q _108886 _108887) = (term1350 _144529 _144530 _144607 _144645 P p pat e q lt2 z' _108885 _108886 s _108887).
Proof. exact (TRANS (@lem8202627 _144529 _144530 _144607 _144645 P p pat e q lt2 z' _108885 _108886 s _108887) (@lem8202680 _144529 _144530 _144607 _144645 P p pat e q lt2 z' _108885 _108886 s _108887)). Qed.
Lemma lem8202683 {_144530 _144607 P : Type'} (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term867 _144530 _144607 P q f a) (h2 : term1080 _144530 _144607 P f q g a) : term1080 _144530 _144607 P f q g a.
Proof. exact (conj (@lem8202028 _144530 _144607 P q f a h1) (@lem8202035 _144530 _144607 P f q g a h2)). Qed.
Lemma lem8202684 {_144530 _144607 _144645 P : Type'} (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) (h1 : term867 _144530 _144607 P q f a) (h2 : term1080 _144530 _144607 P f q g a) (h3 : (pat g a) = (e g a)) : term1344 _144530 _144607 _144645 P pat e f q g a.
Proof. exact (conj (@lem8202020 _144530 _144607 _144645 P pat e g a h3) (@lem8202683 _144530 _144607 P f q g a h1 h2)). Qed.
Lemma lem8202685 {_144530 _144607 _144645 P : Type'} (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term867 _144530 _144607 P q f a) (h2 : term1080 _144530 _144607 P f q g a) (h3 : (pat g a) = (e g a)) (h4 : p g a) : term1345 _144530 _144607 _144645 P p pat e f q g a.
Proof. exact (conj (@lem8202013 _144530 _144607 P p g a h4) (@lem8202684 _144530 _144607 _144645 P f q pat e g a h1 h2 h3)). Qed.
Lemma lem8202686 {_144530 _144607 _144645 P : Type'} (q : type560 _144530 _144607 P) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term867 _144530 _144607 P q f a) (h2 : term1080 _144530 _144607 P f q g a) (h3 : (pat f a) = (e f a)) (h4 : (pat g a) = (e g a)) (h5 : p g a) : term1346 _144530 _144607 _144645 P p pat e f q g a.
Proof. exact (conj (@lem8202006 _144530 _144607 _144645 P pat e f a h3) (@lem8202685 _144530 _144607 _144645 P f q pat e p g a h1 h2 h4 h5)). Qed.
Lemma lem8202687 {_144530 _144607 _144645 P : Type'} (q : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term867 _144530 _144607 P q f a) (h2 : term1080 _144530 _144607 P f q g a) (h3 : (pat f a) = (e f a)) (h4 : (pat g a) = (e g a)) (h5 : p f a) (h6 : p g a) : term1347 _144530 _144607 _144645 P p pat e f q g a.
Proof. exact (conj (@lem8201999 _144530 _144607 P p f a h5) (@lem8202686 _144530 _144607 _144645 P q f pat e p g a h1 h2 h3 h4 h6)). Qed.
Lemma lem8202689 {_144529 _144530 _144607 _144645 P : Type'} (_108885 : _144530 -> _144607) (_108886 : _144530 -> _144607) (_108887 : P) (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z' : type518 _144530 _144607 P) (q : type560 _144530 _144607 P) (h1 : term814 _144529 _144530 _144607 _144645 P p pat e lt2 s z' q) : term1350 _144529 _144530 _144607 _144645 P p pat e q lt2 z' _108885 _108886 s _108887.
Proof. exact (EQ_MP (@lem8202681 _144529 _144530 _144607 _144645 P p pat e q lt2 z' _108885 _108886 s _108887) (@lem8202624 _144529 _144530 _144607 _144645 P _108885 _108886 _108887 p pat e lt2 s z' q h1)). Qed.
Lemma lem8202690 {_144529 _144530 _144607 _144645 P : Type'} (_108885 : _144530 -> _144607) (_108886 : _144530 -> _144607) (_108887 : P) (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z' : type518 _144530 _144607 P) (q : type560 _144530 _144607 P) (h1 : term814 _144529 _144530 _144607 _144645 P p pat e lt2 s z' q) : term1350 _144529 _144530 _144607 _144645 P p pat e q lt2 z' _108885 _108886 s _108887.
Proof. exact (@lem8202689 _144529 _144530 _144607 _144645 P _108885 _108886 _108887 p pat e lt2 s z' q h1). Qed.
Lemma lem8202691 {_144529 _144530 _144607 _144645 P : Type'} (f : _144530 -> _144607) (g : _144530 -> _144607) (a : P) (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z' : type518 _144530 _144607 P) (q : type560 _144530 _144607 P) (h1 : term814 _144529 _144530 _144607 _144645 P p pat e lt2 s z' q) : term1350 _144529 _144530 _144607 _144645 P p pat e q lt2 z' f g s a.
Proof. exact (@lem8202690 _144529 _144530 _144607 _144645 P f g a p pat e lt2 s z' q h1). Qed.
Lemma lem8202694 {_144529 _144530 _144607 _144645 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z' : type518 _144530 _144607 P) (q : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term814 _144529 _144530 _144607 _144645 P p pat e lt2 s z' q) (h2 : term867 _144530 _144607 P q f a) (h3 : term1080 _144530 _144607 P f q g a) (h4 : (pat f a) = (e f a)) (h5 : (pat g a) = (e g a)) (h6 : p f a) (h7 : p g a) : term862 _144529 _144530 _144607 P lt2 z' f g s a.
Proof. exact (@lem8202691 _144529 _144530 _144607 _144645 P f g a p pat e lt2 s z' q h1 (@lem8202687 _144530 _144607 _144645 P q pat e f p g a h2 h3 h4 h5 h6 h7)). Qed.
Lemma lem8202695 {_144529 _144530 _144607 _144645 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z' : type518 _144530 _144607 P) (q : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term814 _144529 _144530 _144607 _144645 P p pat e lt2 s z' q) (h2 : term867 _144530 _144607 P q f a) (h3 : term1080 _144530 _144607 P f q g a) (h4 : (pat f a) = (e f a)) (h5 : (pat g a) = (e g a)) (h6 : p f a) (h7 : p g a) : term956 _144529 _144530 _144607 P lt2 z' f g s a.
Proof. exact (fun h0 : term957 _144529 _144530 _144607 P lt2 z' f g s a => @lem8202694 _144529 _144530 _144607 _144645 P lt2 s z' q pat e f p g a h1 h2 h3 h4 h5 h6 h7). Qed.
Lemma lem8202697 (p : Prop) : (term57 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8202698 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (z' : type518 _144530 _144607 P) (f : _144530 -> _144607) (g : _144530 -> _144607) (s : P -> _144529) (a : P) : (term956 _144529 _144530 _144607 P lt2 z' f g s a) = (term862 _144529 _144530 _144607 P lt2 z' f g s a).
Proof. exact (@lem8202697 (term862 _144529 _144530 _144607 P lt2 z' f g s a)). Qed.
Lemma lem8202699 {_144529 _144530 _144607 _144645 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z' : type518 _144530 _144607 P) (q : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term814 _144529 _144530 _144607 _144645 P p pat e lt2 s z' q) (h2 : term867 _144530 _144607 P q f a) (h3 : term1080 _144530 _144607 P f q g a) (h4 : (pat f a) = (e f a)) (h5 : (pat g a) = (e g a)) (h6 : p f a) (h7 : p g a) : term862 _144529 _144530 _144607 P lt2 z' f g s a.
Proof. exact (EQ_MP (@lem8202698 _144529 _144530 _144607 P lt2 z' f g s a) (@lem8202695 _144529 _144530 _144607 _144645 P lt2 s z' q pat e f p g a h1 h2 h3 h4 h5 h6 h7)). Qed.
Lemma lem8202705 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem8202706 {_144529 _144530 _144607 P : Type'} (f : _144530 -> _144607) (g : _144530 -> _144607) (lt2 : type1470 _144529 _144530) (_108881 : _144530) (s : P -> _144529) (a : P) : (term832 _144529 _144530 _144607 P lt2 s a f g _108881) = (term958 _144529 _144530 _144607 P f g lt2 _108881 s a).
Proof. exact (@lem8202705 ((@I (_144530 -> _144607) f _108881) = (@I (_144530 -> _144607) g _108881)) (term829 _144529 _144530 P lt2 _108881 s a)). Qed.
Lemma lem8202714 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8202715 {_144529 _144530 _144607 P : Type'} (f : _144530 -> _144607) (g : _144530 -> _144607) (lt2 : type1470 _144529 _144530) (_108881 : _144530) (s : P -> _144529) (a : P) : (term959 _144529 _144530 _144607 P lt2 s a f g _108881) = (term960 _144529 _144530 _144607 P f g lt2 _108881 s a).
Proof. exact (MK_COMB (@lem8202714) (@lem8202706 _144529 _144530 _144607 P f g lt2 _108881 s a)). Qed.
Lemma lem8202723 {_144529 _144530 _144607 P : Type'} (f : _144530 -> _144607) (g : _144530 -> _144607) (lt2 : type1470 _144529 _144530) (_108881 : _144530) (s : P -> _144529) (a : P) : (term958 _144529 _144530 _144607 P f g lt2 _108881 s a) = (term958 _144529 _144530 _144607 P f g lt2 _108881 s a).
Proof. exact (eq_refl (term958 _144529 _144530 _144607 P f g lt2 _108881 s a)). Qed.
Lemma lem8202724 {_144529 _144530 _144607 P : Type'} (f : _144530 -> _144607) (g : _144530 -> _144607) (lt2 : type1470 _144529 _144530) (_108881 : _144530) (s : P -> _144529) (a : P) : ((term832 _144529 _144530 _144607 P lt2 s a f g _108881) = (term958 _144529 _144530 _144607 P f g lt2 _108881 s a)) = ((term958 _144529 _144530 _144607 P f g lt2 _108881 s a) = (term958 _144529 _144530 _144607 P f g lt2 _108881 s a)).
Proof. exact (MK_COMB (@lem8202715 _144529 _144530 _144607 P f g lt2 _108881 s a) (@lem8202723 _144529 _144530 _144607 P f g lt2 _108881 s a)). Qed.
Lemma lem8202726 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem20665 A x) (@lem20664 A x)). Qed.
Lemma lem8202727 (x : Prop) : (x = x) = True.
Proof. exact (@lem8202726 Prop x). Qed.
Lemma lem8202728 {_144529 _144530 _144607 P : Type'} (f : _144530 -> _144607) (g : _144530 -> _144607) (lt2 : type1470 _144529 _144530) (_108881 : _144530) (s : P -> _144529) (a : P) : ((term958 _144529 _144530 _144607 P f g lt2 _108881 s a) = (term958 _144529 _144530 _144607 P f g lt2 _108881 s a)) = True.
Proof. exact (@lem8202727 (term958 _144529 _144530 _144607 P f g lt2 _108881 s a)). Qed.
Lemma lem8202729 {_144529 _144530 _144607 P : Type'} (f : _144530 -> _144607) (g : _144530 -> _144607) (lt2 : type1470 _144529 _144530) (_108881 : _144530) (s : P -> _144529) (a : P) : ((term832 _144529 _144530 _144607 P lt2 s a f g _108881) = (term958 _144529 _144530 _144607 P f g lt2 _108881 s a)) = True.
Proof. exact (TRANS (@lem8202724 _144529 _144530 _144607 P f g lt2 _108881 s a) (@lem8202728 _144529 _144530 _144607 P f g lt2 _108881 s a)). Qed.
Lemma lem8202730 {_144529 _144530 _144607 P : Type'} (f : _144530 -> _144607) (g : _144530 -> _144607) (lt2 : type1470 _144529 _144530) (_108881 : _144530) (s : P -> _144529) (a : P) : True = ((term832 _144529 _144530 _144607 P lt2 s a f g _108881) = (term958 _144529 _144530 _144607 P f g lt2 _108881 s a)).
Proof. exact (SYM (@lem8202729 _144529 _144530 _144607 P f g lt2 _108881 s a)). Qed.
Lemma lem8202731 {_144529 _144530 _144607 P : Type'} (f : _144530 -> _144607) (g : _144530 -> _144607) (lt2 : type1470 _144529 _144530) (_108881 : _144530) (s : P -> _144529) (a : P) : (term832 _144529 _144530 _144607 P lt2 s a f g _108881) = (term958 _144529 _144530 _144607 P f g lt2 _108881 s a).
Proof. exact (EQ_MP (@lem8202730 _144529 _144530 _144607 P f g lt2 _108881 s a) (@lem0)). Qed.
Lemma lem8202732 {_144529 _144530 _144607 P : Type'} (_108881 : _144530) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) : term958 _144529 _144530 _144607 P f g lt2 _108881 s a.
Proof. exact (EQ_MP (@lem8202731 _144529 _144530 _144607 P f g lt2 _108881 s a) (@lem8199505 _144529 _144530 _144607 P _108881 lt2 s a f g h1)). Qed.
Lemma lem8202734 (b : Prop) (a : Prop) : (a \/ b) = (term940 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem8202735 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (_108881 : _144530) : (term958 _144529 _144530 _144607 P f g lt2 _108881 s a) = (term961 _144529 _144530 _144607 P lt2 s a f g _108881).
Proof. exact (@lem8202734 (term829 _144529 _144530 P lt2 _108881 s a) ((@I (_144530 -> _144607) f _108881) = (@I (_144530 -> _144607) g _108881))). Qed.
Lemma lem8202737 (a : Prop) : (term15 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8202738 {_144529 _144530 P : Type'} (lt2 : type1470 _144529 _144530) (_108881 : _144530) (s : P -> _144529) (a : P) : (term962 _144529 _144530 P lt2 _108881 s a) = (term827 _144529 _144530 P lt2 _108881 s a).
Proof. exact (@lem8202737 (term827 _144529 _144530 P lt2 _108881 s a)). Qed.
Lemma lem8202739 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8202740 {_144529 _144530 P : Type'} (lt2 : type1470 _144529 _144530) (_108881 : _144530) (s : P -> _144529) (a : P) : (term963 _144529 _144530 P lt2 _108881 s a) = (term964 _144529 _144530 P lt2 _108881 s a).
Proof. exact (MK_COMB (@lem8202739) (@lem8202738 _144529 _144530 P lt2 _108881 s a)). Qed.
Lemma lem8202741 {_144530 _144607 : Type'} (f : _144530 -> _144607) (g : _144530 -> _144607) (_108881 : _144530) : ((@I (_144530 -> _144607) f _108881) = (@I (_144530 -> _144607) g _108881)) = ((@I (_144530 -> _144607) f _108881) = (@I (_144530 -> _144607) g _108881)).
Proof. exact (eq_refl ((@I (_144530 -> _144607) f _108881) = (@I (_144530 -> _144607) g _108881))). Qed.
Lemma lem8202742 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (_108881 : _144530) : (term961 _144529 _144530 _144607 P lt2 s a f g _108881) = (term965 _144529 _144530 _144607 P lt2 s a f g _108881).
Proof. exact (MK_COMB (@lem8202740 _144529 _144530 P lt2 _108881 s a) (@lem8202741 _144530 _144607 f g _108881)). Qed.
Lemma lem8202743 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (_108881 : _144530) : (term958 _144529 _144530 _144607 P f g lt2 _108881 s a) = (term965 _144529 _144530 _144607 P lt2 s a f g _108881).
Proof. exact (TRANS (@lem8202735 _144529 _144530 _144607 P lt2 s a f g _108881) (@lem8202742 _144529 _144530 _144607 P lt2 s a f g _108881)). Qed.
Lemma lem8202746 {_144529 _144530 _144607 P : Type'} (_108881 : _144530) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) : term965 _144529 _144530 _144607 P lt2 s a f g _108881.
Proof. exact (EQ_MP (@lem8202743 _144529 _144530 _144607 P lt2 s a f g _108881) (@lem8202732 _144529 _144530 _144607 P _108881 lt2 s a f g h1)). Qed.
Lemma lem8202747 {_144529 _144530 _144607 P : Type'} (_108881 : _144530) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) : term965 _144529 _144530 _144607 P lt2 s a f g _108881.
Proof. exact (@lem8202746 _144529 _144530 _144607 P _108881 lt2 s a f g h1). Qed.
Lemma lem8202748 {_144529 _144530 _144607 P : Type'} (z' : type518 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) : term966 _144529 _144530 _144607 P lt2 s z' f g a.
Proof. exact (@lem8202747 _144529 _144530 _144607 P (term845 _144530 _144607 P z' f g a) lt2 s a f g h1). Qed.
Lemma lem8202751 {_144529 _144530 _144607 _144645 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z' : type518 _144530 _144607 P) (q : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) (h2 : term814 _144529 _144530 _144607 _144645 P p pat e lt2 s z' q) (h3 : term867 _144530 _144607 P q f a) (h4 : term1080 _144530 _144607 P f q g a) (h5 : (pat f a) = (e f a)) (h6 : (pat g a) = (e g a)) (h7 : p f a) (h8 : p g a) : (term848 _144530 _144607 P z' f g a) = (term851 _144530 _144607 P z' f g a).
Proof. exact (@lem8202748 _144529 _144530 _144607 P z' lt2 s a f g h1 (@lem8202699 _144529 _144530 _144607 _144645 P lt2 s z' q pat e f p g a h2 h3 h4 h5 h6 h7 h8)). Qed.
Lemma lem8202752 {_144529 _144530 _144607 _144645 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z' : type518 _144530 _144607 P) (q : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) (h2 : term814 _144529 _144530 _144607 _144645 P p pat e lt2 s z' q) (h3 : term867 _144530 _144607 P q f a) (h4 : term1080 _144530 _144607 P f q g a) (h5 : (pat f a) = (e f a)) (h6 : (pat g a) = (e g a)) (h7 : p f a) (h8 : p g a) : term967 _144530 _144607 P z' f g a.
Proof. exact (fun h0 : term855 _144530 _144607 P z' f g a => @lem8202751 _144529 _144530 _144607 _144645 P lt2 s z' q pat e f p g a h1 h2 h3 h4 h5 h6 h7 h8). Qed.
Lemma lem8202754 (p : Prop) : (term57 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8202755 {_144530 _144607 P : Type'} (z' : type518 _144530 _144607 P) (f : _144530 -> _144607) (g : _144530 -> _144607) (a : P) : (term967 _144530 _144607 P z' f g a) = ((term848 _144530 _144607 P z' f g a) = (term851 _144530 _144607 P z' f g a)).
Proof. exact (@lem8202754 ((term848 _144530 _144607 P z' f g a) = (term851 _144530 _144607 P z' f g a))). Qed.
Lemma lem8202756 {_144529 _144530 _144607 _144645 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z' : type518 _144530 _144607 P) (q : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) (h2 : term814 _144529 _144530 _144607 _144645 P p pat e lt2 s z' q) (h3 : term867 _144530 _144607 P q f a) (h4 : term1080 _144530 _144607 P f q g a) (h5 : (pat f a) = (e f a)) (h6 : (pat g a) = (e g a)) (h7 : p f a) (h8 : p g a) : (term848 _144530 _144607 P z' f g a) = (term851 _144530 _144607 P z' f g a).
Proof. exact (EQ_MP (@lem8202755 _144530 _144607 P z' f g a) (@lem8202752 _144529 _144530 _144607 _144645 P lt2 s z' q pat e f p g a h1 h2 h3 h4 h5 h6 h7 h8)). Qed.
Lemma lem8202758 {_144530 _144607 P : Type'} (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term1080 _144530 _144607 P f q g a) : term822 _144530 _144607 P q g a.
Proof. exact (proj2 (@lem8198193 _144530 _144607 P f q g a h1)). Qed.
Lemma lem8202759 {_144530 _144607 P : Type'} (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term1080 _144530 _144607 P f q g a) : term916 _144530 _144607 P q g a.
Proof. exact (fun h0 : term867 _144530 _144607 P q g a => @lem8202758 _144530 _144607 P f q g a h1). Qed.
Lemma lem8202761 (p : Prop) : (term57 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8202762 {_144530 _144607 P : Type'} (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term916 _144530 _144607 P q g a) = (term822 _144530 _144607 P q g a).
Proof. exact (@lem8202761 (term822 _144530 _144607 P q g a)). Qed.
Lemma lem8202763 {_144530 _144607 P : Type'} (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term1080 _144530 _144607 P f q g a) : term822 _144530 _144607 P q g a.
Proof. exact (EQ_MP (@lem8202762 _144530 _144607 P q g a) (@lem8202759 _144530 _144607 P f q g a h1)). Qed.
Lemma lem8202769 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8202770 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (z' : type518 _144530 _144607 P) (_108885 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108886 : _144530 -> _144607) (_108887 : P) : (term1173 _144530 _144607 _144645 P p pat e z' _108885 q _108886 _108887) = (term1351 _144530 _144607 _144645 P p pat e z' _108885 q _108886 _108887).
Proof. exact (@lem8202769 (term1096 _144530 _144607 _144645 P pat e _108885 _108887) (term867 _144530 _144607 P p _108885 _108887) (term1170 _144530 _144607 _144645 P p pat e z' _108885 q _108886 _108887)). Qed.
Lemma lem8202796 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8202797 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (z' : type518 _144530 _144607 P) (_108885 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108886 : _144530 -> _144607) (_108887 : P) : (term1170 _144530 _144607 _144645 P p pat e z' _108885 q _108886 _108887) = (term1352 _144530 _144607 _144645 P pat e p z' _108885 q _108886 _108887).
Proof. exact (@lem8202796 (term1096 _144530 _144607 _144645 P pat e _108886 _108887) (term867 _144530 _144607 P p _108886 _108887) (term1171 _144530 _144607 P z' _108885 q _108886 _108887)). Qed.
Lemma lem8202813 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8202814 {_144530 _144607 P : Type'} (z' : type518 _144530 _144607 P) (p : type560 _144530 _144607 P) (_108885 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108886 : _144530 -> _144607) (_108887 : P) : (term1353 _144530 _144607 P p z' _108885 q _108886 _108887) = (term1354 _144530 _144607 P z' p _108885 q _108886 _108887).
Proof. exact (@lem8202813 (term855 _144530 _144607 P z' _108885 _108886 _108887) (term867 _144530 _144607 P p _108886 _108887) (term1091 _144530 _144607 P _108885 q _108886 _108887)). Qed.
Lemma lem8202830 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8202831 {_144530 _144607 P : Type'} (_108885 : _144530 -> _144607) (p : type560 _144530 _144607 P) (q : type560 _144530 _144607 P) (_108886 : _144530 -> _144607) (_108887 : P) : (term1299 _144530 _144607 P p _108885 q _108886 _108887) = (term1300 _144530 _144607 P _108885 p q _108886 _108887).
Proof. exact (@lem8202830 (term822 _144530 _144607 P q _108885 _108887) (term867 _144530 _144607 P p _108886 _108887) (term867 _144530 _144607 P q _108886 _108887)). Qed.
Lemma lem8202847 {_144530 _144607 P : Type'} (z' : type518 _144530 _144607 P) (_108885 : _144530 -> _144607) (_108886 : _144530 -> _144607) (_108887 : P) : (term969 _144530 _144607 P z' _108885 _108886 _108887) = (term969 _144530 _144607 P z' _108885 _108886 _108887).
Proof. exact (eq_refl (term969 _144530 _144607 P z' _108885 _108886 _108887)). Qed.
Lemma lem8202848 {_144530 _144607 P : Type'} (z' : type518 _144530 _144607 P) (_108885 : _144530 -> _144607) (p : type560 _144530 _144607 P) (q : type560 _144530 _144607 P) (_108886 : _144530 -> _144607) (_108887 : P) : (term1354 _144530 _144607 P z' p _108885 q _108886 _108887) = (term1355 _144530 _144607 P z' _108885 p q _108886 _108887).
Proof. exact (MK_COMB (@lem8202847 _144530 _144607 P z' _108885 _108886 _108887) (@lem8202831 _144530 _144607 P _108885 p q _108886 _108887)). Qed.
Lemma lem8202852 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8202853 {_144530 _144607 P : Type'} (z' : type518 _144530 _144607 P) (_108885 : _144530 -> _144607) (p : type560 _144530 _144607 P) (q : type560 _144530 _144607 P) (_108886 : _144530 -> _144607) (_108887 : P) : (term1355 _144530 _144607 P z' _108885 p q _108886 _108887) = (term1356 _144530 _144607 P z' _108885 p q _108886 _108887).
Proof. exact (@lem8202852 (term822 _144530 _144607 P q _108885 _108887) (term855 _144530 _144607 P z' _108885 _108886 _108887) (term1306 _144530 _144607 P p q _108886 _108887)). Qed.
Lemma lem8202881 {_144530 _144607 P : Type'} (z' : type518 _144530 _144607 P) (_108885 : _144530 -> _144607) (p : type560 _144530 _144607 P) (q : type560 _144530 _144607 P) (_108886 : _144530 -> _144607) (_108887 : P) : (term1354 _144530 _144607 P z' p _108885 q _108886 _108887) = (term1356 _144530 _144607 P z' _108885 p q _108886 _108887).
Proof. exact (TRANS (@lem8202848 _144530 _144607 P z' _108885 p q _108886 _108887) (@lem8202853 _144530 _144607 P z' _108885 p q _108886 _108887)). Qed.
Lemma lem8202882 {_144530 _144607 P : Type'} (z' : type518 _144530 _144607 P) (_108885 : _144530 -> _144607) (p : type560 _144530 _144607 P) (q : type560 _144530 _144607 P) (_108886 : _144530 -> _144607) (_108887 : P) : (term1353 _144530 _144607 P p z' _108885 q _108886 _108887) = (term1356 _144530 _144607 P z' _108885 p q _108886 _108887).
Proof. exact (TRANS (@lem8202814 _144530 _144607 P z' p _108885 q _108886 _108887) (@lem8202881 _144530 _144607 P z' _108885 p q _108886 _108887)). Qed.
Lemma lem8202883 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (_108886 : _144530 -> _144607) (_108887 : P) : (term1184 _144530 _144607 _144645 P pat e _108886 _108887) = (term1184 _144530 _144607 _144645 P pat e _108886 _108887).
Proof. exact (eq_refl (term1184 _144530 _144607 _144645 P pat e _108886 _108887)). Qed.
Lemma lem8202884 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (z' : type518 _144530 _144607 P) (_108885 : _144530 -> _144607) (p : type560 _144530 _144607 P) (q : type560 _144530 _144607 P) (_108886 : _144530 -> _144607) (_108887 : P) : (term1352 _144530 _144607 _144645 P pat e p z' _108885 q _108886 _108887) = (term1357 _144530 _144607 _144645 P pat e z' _108885 p q _108886 _108887).
Proof. exact (MK_COMB (@lem8202883 _144530 _144607 _144645 P pat e _108886 _108887) (@lem8202882 _144530 _144607 P z' _108885 p q _108886 _108887)). Qed.
Lemma lem8202888 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8202889 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (z' : type518 _144530 _144607 P) (_108885 : _144530 -> _144607) (p : type560 _144530 _144607 P) (q : type560 _144530 _144607 P) (_108886 : _144530 -> _144607) (_108887 : P) : (term1357 _144530 _144607 _144645 P pat e z' _108885 p q _108886 _108887) = (term1358 _144530 _144607 _144645 P pat e z' _108885 p q _108886 _108887).
Proof. exact (@lem8202888 (term822 _144530 _144607 P q _108885 _108887) (term1096 _144530 _144607 _144645 P pat e _108886 _108887) (term1359 _144530 _144607 P z' _108885 p q _108886 _108887)). Qed.
Lemma lem8202903 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8202904 {_144530 _144607 _144645 P : Type'} (z' : type518 _144530 _144607 P) (_108885 : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (q : type560 _144530 _144607 P) (_108886 : _144530 -> _144607) (_108887 : P) : (term1360 _144530 _144607 _144645 P pat e z' _108885 p q _108886 _108887) = (term1361 _144530 _144607 _144645 P z' _108885 pat e p q _108886 _108887).
Proof. exact (@lem8202903 (term855 _144530 _144607 P z' _108885 _108886 _108887) (term1096 _144530 _144607 _144645 P pat e _108886 _108887) (term1306 _144530 _144607 P p q _108886 _108887)). Qed.
Lemma lem8202934 {_144530 _144607 P : Type'} (q : type560 _144530 _144607 P) (_108885 : _144530 -> _144607) (_108887 : P) : (term1089 _144530 _144607 P q _108885 _108887) = (term1089 _144530 _144607 P q _108885 _108887).
Proof. exact (eq_refl (term1089 _144530 _144607 P q _108885 _108887)). Qed.
Lemma lem8202935 {_144530 _144607 _144645 P : Type'} (z' : type518 _144530 _144607 P) (_108885 : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (q : type560 _144530 _144607 P) (_108886 : _144530 -> _144607) (_108887 : P) : (term1358 _144530 _144607 _144645 P pat e z' _108885 p q _108886 _108887) = (term1362 _144530 _144607 _144645 P z' _108885 pat e p q _108886 _108887).
Proof. exact (MK_COMB (@lem8202934 _144530 _144607 P q _108885 _108887) (@lem8202904 _144530 _144607 _144645 P z' _108885 pat e p q _108886 _108887)). Qed.
Lemma lem8202946 {_144530 _144607 _144645 P : Type'} (z' : type518 _144530 _144607 P) (_108885 : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (q : type560 _144530 _144607 P) (_108886 : _144530 -> _144607) (_108887 : P) : (term1357 _144530 _144607 _144645 P pat e z' _108885 p q _108886 _108887) = (term1362 _144530 _144607 _144645 P z' _108885 pat e p q _108886 _108887).
Proof. exact (TRANS (@lem8202889 _144530 _144607 _144645 P pat e z' _108885 p q _108886 _108887) (@lem8202935 _144530 _144607 _144645 P z' _108885 pat e p q _108886 _108887)). Qed.
Lemma lem8202947 {_144530 _144607 _144645 P : Type'} (z' : type518 _144530 _144607 P) (_108885 : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (q : type560 _144530 _144607 P) (_108886 : _144530 -> _144607) (_108887 : P) : (term1352 _144530 _144607 _144645 P pat e p z' _108885 q _108886 _108887) = (term1362 _144530 _144607 _144645 P z' _108885 pat e p q _108886 _108887).
Proof. exact (TRANS (@lem8202884 _144530 _144607 _144645 P pat e z' _108885 p q _108886 _108887) (@lem8202946 _144530 _144607 _144645 P z' _108885 pat e p q _108886 _108887)). Qed.
Lemma lem8202948 {_144530 _144607 _144645 P : Type'} (z' : type518 _144530 _144607 P) (_108885 : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (q : type560 _144530 _144607 P) (_108886 : _144530 -> _144607) (_108887 : P) : (term1170 _144530 _144607 _144645 P p pat e z' _108885 q _108886 _108887) = (term1362 _144530 _144607 _144645 P z' _108885 pat e p q _108886 _108887).
Proof. exact (TRANS (@lem8202797 _144530 _144607 _144645 P pat e p z' _108885 q _108886 _108887) (@lem8202947 _144530 _144607 _144645 P z' _108885 pat e p q _108886 _108887)). Qed.
Lemma lem8202949 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (_108885 : _144530 -> _144607) (_108887 : P) : (term868 _144530 _144607 P p _108885 _108887) = (term868 _144530 _144607 P p _108885 _108887).
Proof. exact (eq_refl (term868 _144530 _144607 P p _108885 _108887)). Qed.
Lemma lem8202950 {_144530 _144607 _144645 P : Type'} (z' : type518 _144530 _144607 P) (_108885 : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (q : type560 _144530 _144607 P) (_108886 : _144530 -> _144607) (_108887 : P) : (term1363 _144530 _144607 _144645 P p pat e z' _108885 q _108886 _108887) = (term1364 _144530 _144607 _144645 P z' _108885 pat e p q _108886 _108887).
Proof. exact (MK_COMB (@lem8202949 _144530 _144607 P p _108885 _108887) (@lem8202948 _144530 _144607 _144645 P z' _108885 pat e p q _108886 _108887)). Qed.
Lemma lem8202954 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8202955 {_144530 _144607 _144645 P : Type'} (z' : type518 _144530 _144607 P) (_108885 : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (q : type560 _144530 _144607 P) (_108886 : _144530 -> _144607) (_108887 : P) : (term1364 _144530 _144607 _144645 P z' _108885 pat e p q _108886 _108887) = (term1365 _144530 _144607 _144645 P z' _108885 pat e p q _108886 _108887).
Proof. exact (@lem8202954 (term822 _144530 _144607 P q _108885 _108887) (term867 _144530 _144607 P p _108885 _108887) (term1361 _144530 _144607 _144645 P z' _108885 pat e p q _108886 _108887)). Qed.
Lemma lem8202969 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8202970 {_144530 _144607 _144645 P : Type'} (z' : type518 _144530 _144607 P) (_108885 : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (q : type560 _144530 _144607 P) (_108886 : _144530 -> _144607) (_108887 : P) : (term1366 _144530 _144607 _144645 P z' _108885 pat e p q _108886 _108887) = (term1367 _144530 _144607 _144645 P z' _108885 pat e p q _108886 _108887).
Proof. exact (@lem8202969 (term855 _144530 _144607 P z' _108885 _108886 _108887) (term867 _144530 _144607 P p _108885 _108887) (term1313 _144530 _144607 _144645 P pat e p q _108886 _108887)). Qed.
Lemma lem8202986 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8202987 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (_108885 : _144530 -> _144607) (p : type560 _144530 _144607 P) (q : type560 _144530 _144607 P) (_108886 : _144530 -> _144607) (_108887 : P) : (term1314 _144530 _144607 _144645 P _108885 pat e p q _108886 _108887) = (term1315 _144530 _144607 _144645 P pat e _108885 p q _108886 _108887).
Proof. exact (@lem8202986 (term1096 _144530 _144607 _144645 P pat e _108886 _108887) (term867 _144530 _144607 P p _108885 _108887) (term1306 _144530 _144607 P p q _108886 _108887)). Qed.
Lemma lem8203015 {_144530 _144607 P : Type'} (z' : type518 _144530 _144607 P) (_108885 : _144530 -> _144607) (_108886 : _144530 -> _144607) (_108887 : P) : (term969 _144530 _144607 P z' _108885 _108886 _108887) = (term969 _144530 _144607 P z' _108885 _108886 _108887).
Proof. exact (eq_refl (term969 _144530 _144607 P z' _108885 _108886 _108887)). Qed.
Lemma lem8203016 {_144530 _144607 _144645 P : Type'} (z' : type518 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (_108885 : _144530 -> _144607) (p : type560 _144530 _144607 P) (q : type560 _144530 _144607 P) (_108886 : _144530 -> _144607) (_108887 : P) : (term1367 _144530 _144607 _144645 P z' _108885 pat e p q _108886 _108887) = (term1368 _144530 _144607 _144645 P z' pat e _108885 p q _108886 _108887).
Proof. exact (MK_COMB (@lem8203015 _144530 _144607 P z' _108885 _108886 _108887) (@lem8202987 _144530 _144607 _144645 P pat e _108885 p q _108886 _108887)). Qed.
Lemma lem8203027 {_144530 _144607 _144645 P : Type'} (z' : type518 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (_108885 : _144530 -> _144607) (p : type560 _144530 _144607 P) (q : type560 _144530 _144607 P) (_108886 : _144530 -> _144607) (_108887 : P) : (term1366 _144530 _144607 _144645 P z' _108885 pat e p q _108886 _108887) = (term1368 _144530 _144607 _144645 P z' pat e _108885 p q _108886 _108887).
Proof. exact (TRANS (@lem8202970 _144530 _144607 _144645 P z' _108885 pat e p q _108886 _108887) (@lem8203016 _144530 _144607 _144645 P z' pat e _108885 p q _108886 _108887)). Qed.
Lemma lem8203028 {_144530 _144607 P : Type'} (q : type560 _144530 _144607 P) (_108885 : _144530 -> _144607) (_108887 : P) : (term1089 _144530 _144607 P q _108885 _108887) = (term1089 _144530 _144607 P q _108885 _108887).
Proof. exact (eq_refl (term1089 _144530 _144607 P q _108885 _108887)). Qed.
Lemma lem8203029 {_144530 _144607 _144645 P : Type'} (z' : type518 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (_108885 : _144530 -> _144607) (p : type560 _144530 _144607 P) (q : type560 _144530 _144607 P) (_108886 : _144530 -> _144607) (_108887 : P) : (term1365 _144530 _144607 _144645 P z' _108885 pat e p q _108886 _108887) = (term1369 _144530 _144607 _144645 P z' pat e _108885 p q _108886 _108887).
Proof. exact (MK_COMB (@lem8203028 _144530 _144607 P q _108885 _108887) (@lem8203027 _144530 _144607 _144645 P z' pat e _108885 p q _108886 _108887)). Qed.
Lemma lem8203040 {_144530 _144607 _144645 P : Type'} (z' : type518 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (_108885 : _144530 -> _144607) (p : type560 _144530 _144607 P) (q : type560 _144530 _144607 P) (_108886 : _144530 -> _144607) (_108887 : P) : (term1364 _144530 _144607 _144645 P z' _108885 pat e p q _108886 _108887) = (term1369 _144530 _144607 _144645 P z' pat e _108885 p q _108886 _108887).
Proof. exact (TRANS (@lem8202955 _144530 _144607 _144645 P z' _108885 pat e p q _108886 _108887) (@lem8203029 _144530 _144607 _144645 P z' pat e _108885 p q _108886 _108887)). Qed.
Lemma lem8203041 {_144530 _144607 _144645 P : Type'} (z' : type518 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (_108885 : _144530 -> _144607) (p : type560 _144530 _144607 P) (q : type560 _144530 _144607 P) (_108886 : _144530 -> _144607) (_108887 : P) : (term1363 _144530 _144607 _144645 P p pat e z' _108885 q _108886 _108887) = (term1369 _144530 _144607 _144645 P z' pat e _108885 p q _108886 _108887).
Proof. exact (TRANS (@lem8202950 _144530 _144607 _144645 P z' _108885 pat e p q _108886 _108887) (@lem8203040 _144530 _144607 _144645 P z' pat e _108885 p q _108886 _108887)). Qed.
Lemma lem8203042 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (_108885 : _144530 -> _144607) (_108887 : P) : (term1184 _144530 _144607 _144645 P pat e _108885 _108887) = (term1184 _144530 _144607 _144645 P pat e _108885 _108887).
Proof. exact (eq_refl (term1184 _144530 _144607 _144645 P pat e _108885 _108887)). Qed.
Lemma lem8203043 {_144530 _144607 _144645 P : Type'} (z' : type518 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (_108885 : _144530 -> _144607) (p : type560 _144530 _144607 P) (q : type560 _144530 _144607 P) (_108886 : _144530 -> _144607) (_108887 : P) : (term1351 _144530 _144607 _144645 P p pat e z' _108885 q _108886 _108887) = (term1370 _144530 _144607 _144645 P z' pat e _108885 p q _108886 _108887).
Proof. exact (MK_COMB (@lem8203042 _144530 _144607 _144645 P pat e _108885 _108887) (@lem8203041 _144530 _144607 _144645 P z' pat e _108885 p q _108886 _108887)). Qed.
Lemma lem8203047 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8203048 {_144530 _144607 _144645 P : Type'} (z' : type518 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (_108885 : _144530 -> _144607) (p : type560 _144530 _144607 P) (q : type560 _144530 _144607 P) (_108886 : _144530 -> _144607) (_108887 : P) : (term1370 _144530 _144607 _144645 P z' pat e _108885 p q _108886 _108887) = (term1371 _144530 _144607 _144645 P z' pat e _108885 p q _108886 _108887).
Proof. exact (@lem8203047 (term822 _144530 _144607 P q _108885 _108887) (term1096 _144530 _144607 _144645 P pat e _108885 _108887) (term1368 _144530 _144607 _144645 P z' pat e _108885 p q _108886 _108887)). Qed.
Lemma lem8203062 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8203063 {_144530 _144607 _144645 P : Type'} (z' : type518 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (_108885 : _144530 -> _144607) (p : type560 _144530 _144607 P) (q : type560 _144530 _144607 P) (_108886 : _144530 -> _144607) (_108887 : P) : (term1372 _144530 _144607 _144645 P z' pat e _108885 p q _108886 _108887) = (term1373 _144530 _144607 _144645 P z' pat e _108885 p q _108886 _108887).
Proof. exact (@lem8203062 (term855 _144530 _144607 P z' _108885 _108886 _108887) (term1096 _144530 _144607 _144645 P pat e _108885 _108887) (term1315 _144530 _144607 _144645 P pat e _108885 p q _108886 _108887)). Qed.
Lemma lem8203115 {_144530 _144607 P : Type'} (q : type560 _144530 _144607 P) (_108885 : _144530 -> _144607) (_108887 : P) : (term1089 _144530 _144607 P q _108885 _108887) = (term1089 _144530 _144607 P q _108885 _108887).
Proof. exact (eq_refl (term1089 _144530 _144607 P q _108885 _108887)). Qed.
Lemma lem8203116 {_144530 _144607 _144645 P : Type'} (z' : type518 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (_108885 : _144530 -> _144607) (p : type560 _144530 _144607 P) (q : type560 _144530 _144607 P) (_108886 : _144530 -> _144607) (_108887 : P) : (term1371 _144530 _144607 _144645 P z' pat e _108885 p q _108886 _108887) = (term1374 _144530 _144607 _144645 P z' pat e _108885 p q _108886 _108887).
Proof. exact (MK_COMB (@lem8203115 _144530 _144607 P q _108885 _108887) (@lem8203063 _144530 _144607 _144645 P z' pat e _108885 p q _108886 _108887)). Qed.
Lemma lem8203127 {_144530 _144607 _144645 P : Type'} (z' : type518 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (_108885 : _144530 -> _144607) (p : type560 _144530 _144607 P) (q : type560 _144530 _144607 P) (_108886 : _144530 -> _144607) (_108887 : P) : (term1370 _144530 _144607 _144645 P z' pat e _108885 p q _108886 _108887) = (term1374 _144530 _144607 _144645 P z' pat e _108885 p q _108886 _108887).
Proof. exact (TRANS (@lem8203048 _144530 _144607 _144645 P z' pat e _108885 p q _108886 _108887) (@lem8203116 _144530 _144607 _144645 P z' pat e _108885 p q _108886 _108887)). Qed.
Lemma lem8203128 {_144530 _144607 _144645 P : Type'} (z' : type518 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (_108885 : _144530 -> _144607) (p : type560 _144530 _144607 P) (q : type560 _144530 _144607 P) (_108886 : _144530 -> _144607) (_108887 : P) : (term1351 _144530 _144607 _144645 P p pat e z' _108885 q _108886 _108887) = (term1374 _144530 _144607 _144645 P z' pat e _108885 p q _108886 _108887).
Proof. exact (TRANS (@lem8203043 _144530 _144607 _144645 P z' pat e _108885 p q _108886 _108887) (@lem8203127 _144530 _144607 _144645 P z' pat e _108885 p q _108886 _108887)). Qed.
Lemma lem8203129 {_144530 _144607 _144645 P : Type'} (z' : type518 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (_108885 : _144530 -> _144607) (p : type560 _144530 _144607 P) (q : type560 _144530 _144607 P) (_108886 : _144530 -> _144607) (_108887 : P) : (term1173 _144530 _144607 _144645 P p pat e z' _108885 q _108886 _108887) = (term1374 _144530 _144607 _144645 P z' pat e _108885 p q _108886 _108887).
Proof. exact (TRANS (@lem8202770 _144530 _144607 _144645 P p pat e z' _108885 q _108886 _108887) (@lem8203128 _144530 _144607 _144645 P z' pat e _108885 p q _108886 _108887)). Qed.
Lemma lem8203130 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8203131 {_144530 _144607 _144645 P : Type'} (z' : type518 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (_108885 : _144530 -> _144607) (p : type560 _144530 _144607 P) (q : type560 _144530 _144607 P) (_108886 : _144530 -> _144607) (_108887 : P) : (term1375 _144530 _144607 _144645 P p pat e z' _108885 q _108886 _108887) = (term1376 _144530 _144607 _144645 P z' pat e _108885 p q _108886 _108887).
Proof. exact (MK_COMB (@lem8203130) (@lem8203129 _144530 _144607 _144645 P z' pat e _108885 p q _108886 _108887)). Qed.
Lemma lem8203145 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8203146 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (z' : type518 _144530 _144607 P) (_108885 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108886 : _144530 -> _144607) (_108887 : P) : (term1377 _144530 _144607 _144645 P p pat e z' _108885 q _108886 _108887) = (term1378 _144530 _144607 _144645 P p pat e z' _108885 q _108886 _108887).
Proof. exact (@lem8203145 (term1096 _144530 _144607 _144645 P pat e _108885 _108887) (term867 _144530 _144607 P p _108885 _108887) (term1379 _144530 _144607 _144645 P p pat e z' _108885 q _108886 _108887)). Qed.
Lemma lem8203172 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8203173 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (z' : type518 _144530 _144607 P) (_108885 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108886 : _144530 -> _144607) (_108887 : P) : (term1379 _144530 _144607 _144645 P p pat e z' _108885 q _108886 _108887) = (term1380 _144530 _144607 _144645 P pat e p z' _108885 q _108886 _108887).
Proof. exact (@lem8203172 (term1096 _144530 _144607 _144645 P pat e _108886 _108887) (term867 _144530 _144607 P p _108886 _108887) (term974 _144530 _144607 P z' _108885 q _108886 _108887)). Qed.
Lemma lem8203189 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8203190 {_144530 _144607 P : Type'} (z' : type518 _144530 _144607 P) (_108885 : _144530 -> _144607) (p : type560 _144530 _144607 P) (q : type560 _144530 _144607 P) (_108886 : _144530 -> _144607) (_108887 : P) : (term1381 _144530 _144607 P p z' _108885 q _108886 _108887) = (term1359 _144530 _144607 P z' _108885 p q _108886 _108887).
Proof. exact (@lem8203189 (term855 _144530 _144607 P z' _108885 _108886 _108887) (term867 _144530 _144607 P p _108886 _108887) (term867 _144530 _144607 P q _108886 _108887)). Qed.
Lemma lem8203208 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (_108886 : _144530 -> _144607) (_108887 : P) : (term1184 _144530 _144607 _144645 P pat e _108886 _108887) = (term1184 _144530 _144607 _144645 P pat e _108886 _108887).
Proof. exact (eq_refl (term1184 _144530 _144607 _144645 P pat e _108886 _108887)). Qed.
Lemma lem8203209 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (z' : type518 _144530 _144607 P) (_108885 : _144530 -> _144607) (p : type560 _144530 _144607 P) (q : type560 _144530 _144607 P) (_108886 : _144530 -> _144607) (_108887 : P) : (term1380 _144530 _144607 _144645 P pat e p z' _108885 q _108886 _108887) = (term1360 _144530 _144607 _144645 P pat e z' _108885 p q _108886 _108887).
Proof. exact (MK_COMB (@lem8203208 _144530 _144607 _144645 P pat e _108886 _108887) (@lem8203190 _144530 _144607 P z' _108885 p q _108886 _108887)). Qed.
Lemma lem8203213 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8203214 {_144530 _144607 _144645 P : Type'} (z' : type518 _144530 _144607 P) (_108885 : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (q : type560 _144530 _144607 P) (_108886 : _144530 -> _144607) (_108887 : P) : (term1360 _144530 _144607 _144645 P pat e z' _108885 p q _108886 _108887) = (term1361 _144530 _144607 _144645 P z' _108885 pat e p q _108886 _108887).
Proof. exact (@lem8203213 (term855 _144530 _144607 P z' _108885 _108886 _108887) (term1096 _144530 _144607 _144645 P pat e _108886 _108887) (term1306 _144530 _144607 P p q _108886 _108887)). Qed.
Lemma lem8203244 {_144530 _144607 _144645 P : Type'} (z' : type518 _144530 _144607 P) (_108885 : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (q : type560 _144530 _144607 P) (_108886 : _144530 -> _144607) (_108887 : P) : (term1380 _144530 _144607 _144645 P pat e p z' _108885 q _108886 _108887) = (term1361 _144530 _144607 _144645 P z' _108885 pat e p q _108886 _108887).
Proof. exact (TRANS (@lem8203209 _144530 _144607 _144645 P pat e z' _108885 p q _108886 _108887) (@lem8203214 _144530 _144607 _144645 P z' _108885 pat e p q _108886 _108887)). Qed.
Lemma lem8203245 {_144530 _144607 _144645 P : Type'} (z' : type518 _144530 _144607 P) (_108885 : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (q : type560 _144530 _144607 P) (_108886 : _144530 -> _144607) (_108887 : P) : (term1379 _144530 _144607 _144645 P p pat e z' _108885 q _108886 _108887) = (term1361 _144530 _144607 _144645 P z' _108885 pat e p q _108886 _108887).
Proof. exact (TRANS (@lem8203173 _144530 _144607 _144645 P pat e p z' _108885 q _108886 _108887) (@lem8203244 _144530 _144607 _144645 P z' _108885 pat e p q _108886 _108887)). Qed.
Lemma lem8203246 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (_108885 : _144530 -> _144607) (_108887 : P) : (term868 _144530 _144607 P p _108885 _108887) = (term868 _144530 _144607 P p _108885 _108887).
Proof. exact (eq_refl (term868 _144530 _144607 P p _108885 _108887)). Qed.
Lemma lem8203247 {_144530 _144607 _144645 P : Type'} (z' : type518 _144530 _144607 P) (_108885 : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (q : type560 _144530 _144607 P) (_108886 : _144530 -> _144607) (_108887 : P) : (term1382 _144530 _144607 _144645 P p pat e z' _108885 q _108886 _108887) = (term1366 _144530 _144607 _144645 P z' _108885 pat e p q _108886 _108887).
Proof. exact (MK_COMB (@lem8203246 _144530 _144607 P p _108885 _108887) (@lem8203245 _144530 _144607 _144645 P z' _108885 pat e p q _108886 _108887)). Qed.
Lemma lem8203251 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8203252 {_144530 _144607 _144645 P : Type'} (z' : type518 _144530 _144607 P) (_108885 : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (q : type560 _144530 _144607 P) (_108886 : _144530 -> _144607) (_108887 : P) : (term1366 _144530 _144607 _144645 P z' _108885 pat e p q _108886 _108887) = (term1367 _144530 _144607 _144645 P z' _108885 pat e p q _108886 _108887).
Proof. exact (@lem8203251 (term855 _144530 _144607 P z' _108885 _108886 _108887) (term867 _144530 _144607 P p _108885 _108887) (term1313 _144530 _144607 _144645 P pat e p q _108886 _108887)). Qed.
Lemma lem8203268 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8203269 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (_108885 : _144530 -> _144607) (p : type560 _144530 _144607 P) (q : type560 _144530 _144607 P) (_108886 : _144530 -> _144607) (_108887 : P) : (term1314 _144530 _144607 _144645 P _108885 pat e p q _108886 _108887) = (term1315 _144530 _144607 _144645 P pat e _108885 p q _108886 _108887).
Proof. exact (@lem8203268 (term1096 _144530 _144607 _144645 P pat e _108886 _108887) (term867 _144530 _144607 P p _108885 _108887) (term1306 _144530 _144607 P p q _108886 _108887)). Qed.
Lemma lem8203297 {_144530 _144607 P : Type'} (z' : type518 _144530 _144607 P) (_108885 : _144530 -> _144607) (_108886 : _144530 -> _144607) (_108887 : P) : (term969 _144530 _144607 P z' _108885 _108886 _108887) = (term969 _144530 _144607 P z' _108885 _108886 _108887).
Proof. exact (eq_refl (term969 _144530 _144607 P z' _108885 _108886 _108887)). Qed.
Lemma lem8203298 {_144530 _144607 _144645 P : Type'} (z' : type518 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (_108885 : _144530 -> _144607) (p : type560 _144530 _144607 P) (q : type560 _144530 _144607 P) (_108886 : _144530 -> _144607) (_108887 : P) : (term1367 _144530 _144607 _144645 P z' _108885 pat e p q _108886 _108887) = (term1368 _144530 _144607 _144645 P z' pat e _108885 p q _108886 _108887).
Proof. exact (MK_COMB (@lem8203297 _144530 _144607 P z' _108885 _108886 _108887) (@lem8203269 _144530 _144607 _144645 P pat e _108885 p q _108886 _108887)). Qed.
Lemma lem8203309 {_144530 _144607 _144645 P : Type'} (z' : type518 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (_108885 : _144530 -> _144607) (p : type560 _144530 _144607 P) (q : type560 _144530 _144607 P) (_108886 : _144530 -> _144607) (_108887 : P) : (term1366 _144530 _144607 _144645 P z' _108885 pat e p q _108886 _108887) = (term1368 _144530 _144607 _144645 P z' pat e _108885 p q _108886 _108887).
Proof. exact (TRANS (@lem8203252 _144530 _144607 _144645 P z' _108885 pat e p q _108886 _108887) (@lem8203298 _144530 _144607 _144645 P z' pat e _108885 p q _108886 _108887)). Qed.
Lemma lem8203310 {_144530 _144607 _144645 P : Type'} (z' : type518 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (_108885 : _144530 -> _144607) (p : type560 _144530 _144607 P) (q : type560 _144530 _144607 P) (_108886 : _144530 -> _144607) (_108887 : P) : (term1382 _144530 _144607 _144645 P p pat e z' _108885 q _108886 _108887) = (term1368 _144530 _144607 _144645 P z' pat e _108885 p q _108886 _108887).
Proof. exact (TRANS (@lem8203247 _144530 _144607 _144645 P z' _108885 pat e p q _108886 _108887) (@lem8203309 _144530 _144607 _144645 P z' pat e _108885 p q _108886 _108887)). Qed.
Lemma lem8203311 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (_108885 : _144530 -> _144607) (_108887 : P) : (term1184 _144530 _144607 _144645 P pat e _108885 _108887) = (term1184 _144530 _144607 _144645 P pat e _108885 _108887).
Proof. exact (eq_refl (term1184 _144530 _144607 _144645 P pat e _108885 _108887)). Qed.
Lemma lem8203312 {_144530 _144607 _144645 P : Type'} (z' : type518 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (_108885 : _144530 -> _144607) (p : type560 _144530 _144607 P) (q : type560 _144530 _144607 P) (_108886 : _144530 -> _144607) (_108887 : P) : (term1378 _144530 _144607 _144645 P p pat e z' _108885 q _108886 _108887) = (term1372 _144530 _144607 _144645 P z' pat e _108885 p q _108886 _108887).
Proof. exact (MK_COMB (@lem8203311 _144530 _144607 _144645 P pat e _108885 _108887) (@lem8203310 _144530 _144607 _144645 P z' pat e _108885 p q _108886 _108887)). Qed.
Lemma lem8203316 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8203317 {_144530 _144607 _144645 P : Type'} (z' : type518 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (_108885 : _144530 -> _144607) (p : type560 _144530 _144607 P) (q : type560 _144530 _144607 P) (_108886 : _144530 -> _144607) (_108887 : P) : (term1372 _144530 _144607 _144645 P z' pat e _108885 p q _108886 _108887) = (term1373 _144530 _144607 _144645 P z' pat e _108885 p q _108886 _108887).
Proof. exact (@lem8203316 (term855 _144530 _144607 P z' _108885 _108886 _108887) (term1096 _144530 _144607 _144645 P pat e _108885 _108887) (term1315 _144530 _144607 _144645 P pat e _108885 p q _108886 _108887)). Qed.
Lemma lem8203369 {_144530 _144607 _144645 P : Type'} (z' : type518 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (_108885 : _144530 -> _144607) (p : type560 _144530 _144607 P) (q : type560 _144530 _144607 P) (_108886 : _144530 -> _144607) (_108887 : P) : (term1378 _144530 _144607 _144645 P p pat e z' _108885 q _108886 _108887) = (term1373 _144530 _144607 _144645 P z' pat e _108885 p q _108886 _108887).
Proof. exact (TRANS (@lem8203312 _144530 _144607 _144645 P z' pat e _108885 p q _108886 _108887) (@lem8203317 _144530 _144607 _144645 P z' pat e _108885 p q _108886 _108887)). Qed.
Lemma lem8203370 {_144530 _144607 _144645 P : Type'} (z' : type518 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (_108885 : _144530 -> _144607) (p : type560 _144530 _144607 P) (q : type560 _144530 _144607 P) (_108886 : _144530 -> _144607) (_108887 : P) : (term1377 _144530 _144607 _144645 P p pat e z' _108885 q _108886 _108887) = (term1373 _144530 _144607 _144645 P z' pat e _108885 p q _108886 _108887).
Proof. exact (TRANS (@lem8203146 _144530 _144607 _144645 P p pat e z' _108885 q _108886 _108887) (@lem8203369 _144530 _144607 _144645 P z' pat e _108885 p q _108886 _108887)). Qed.
Lemma lem8203371 {_144530 _144607 P : Type'} (q : type560 _144530 _144607 P) (_108885 : _144530 -> _144607) (_108887 : P) : (term1089 _144530 _144607 P q _108885 _108887) = (term1089 _144530 _144607 P q _108885 _108887).
Proof. exact (eq_refl (term1089 _144530 _144607 P q _108885 _108887)). Qed.
Lemma lem8203372 {_144530 _144607 _144645 P : Type'} (z' : type518 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (_108885 : _144530 -> _144607) (p : type560 _144530 _144607 P) (q : type560 _144530 _144607 P) (_108886 : _144530 -> _144607) (_108887 : P) : (term1383 _144530 _144607 _144645 P p pat e z' _108885 q _108886 _108887) = (term1374 _144530 _144607 _144645 P z' pat e _108885 p q _108886 _108887).
Proof. exact (MK_COMB (@lem8203371 _144530 _144607 P q _108885 _108887) (@lem8203370 _144530 _144607 _144645 P z' pat e _108885 p q _108886 _108887)). Qed.
Lemma lem8203383 {_144530 _144607 _144645 P : Type'} (z' : type518 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (_108885 : _144530 -> _144607) (p : type560 _144530 _144607 P) (q : type560 _144530 _144607 P) (_108886 : _144530 -> _144607) (_108887 : P) : ((term1173 _144530 _144607 _144645 P p pat e z' _108885 q _108886 _108887) = (term1383 _144530 _144607 _144645 P p pat e z' _108885 q _108886 _108887)) = ((term1374 _144530 _144607 _144645 P z' pat e _108885 p q _108886 _108887) = (term1374 _144530 _144607 _144645 P z' pat e _108885 p q _108886 _108887)).
Proof. exact (MK_COMB (@lem8203131 _144530 _144607 _144645 P z' pat e _108885 p q _108886 _108887) (@lem8203372 _144530 _144607 _144645 P z' pat e _108885 p q _108886 _108887)). Qed.
Lemma lem8203385 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem20665 A x) (@lem20664 A x)). Qed.
Lemma lem8203386 (x : Prop) : (x = x) = True.
Proof. exact (@lem8203385 Prop x). Qed.
Lemma lem8203387 {_144530 _144607 _144645 P : Type'} (z' : type518 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (_108885 : _144530 -> _144607) (p : type560 _144530 _144607 P) (q : type560 _144530 _144607 P) (_108886 : _144530 -> _144607) (_108887 : P) : ((term1374 _144530 _144607 _144645 P z' pat e _108885 p q _108886 _108887) = (term1374 _144530 _144607 _144645 P z' pat e _108885 p q _108886 _108887)) = True.
Proof. exact (@lem8203386 (term1374 _144530 _144607 _144645 P z' pat e _108885 p q _108886 _108887)). Qed.
Lemma lem8203388 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (z' : type518 _144530 _144607 P) (_108885 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108886 : _144530 -> _144607) (_108887 : P) : ((term1173 _144530 _144607 _144645 P p pat e z' _108885 q _108886 _108887) = (term1383 _144530 _144607 _144645 P p pat e z' _108885 q _108886 _108887)) = True.
Proof. exact (TRANS (@lem8203383 _144530 _144607 _144645 P z' pat e _108885 p q _108886 _108887) (@lem8203387 _144530 _144607 _144645 P z' pat e _108885 p q _108886 _108887)). Qed.
Lemma lem8203389 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (z' : type518 _144530 _144607 P) (_108885 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108886 : _144530 -> _144607) (_108887 : P) : True = ((term1173 _144530 _144607 _144645 P p pat e z' _108885 q _108886 _108887) = (term1383 _144530 _144607 _144645 P p pat e z' _108885 q _108886 _108887)).
Proof. exact (SYM (@lem8203388 _144530 _144607 _144645 P p pat e z' _108885 q _108886 _108887)). Qed.
Lemma lem8203390 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (z' : type518 _144530 _144607 P) (_108885 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108886 : _144530 -> _144607) (_108887 : P) : (term1173 _144530 _144607 _144645 P p pat e z' _108885 q _108886 _108887) = (term1383 _144530 _144607 _144645 P p pat e z' _108885 q _108886 _108887).
Proof. exact (EQ_MP (@lem8203389 _144530 _144607 _144645 P p pat e z' _108885 q _108886 _108887) (@lem0)). Qed.
Lemma lem8203391 {_144529 _144530 _144607 _144645 P : Type'} (_108885 : _144530 -> _144607) (_108886 : _144530 -> _144607) (_108887 : P) (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z' : type518 _144530 _144607 P) (q : type560 _144530 _144607 P) (h1 : term814 _144529 _144530 _144607 _144645 P p pat e lt2 s z' q) : term1383 _144530 _144607 _144645 P p pat e z' _108885 q _108886 _108887.
Proof. exact (EQ_MP (@lem8203390 _144530 _144607 _144645 P p pat e z' _108885 q _108886 _108887) (@lem8199805 _144529 _144530 _144607 _144645 P _108885 _108886 _108887 p pat e lt2 s z' q h1)). Qed.
Lemma lem8203393 (b : Prop) (a : Prop) : (a \/ b) = (term940 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem8203394 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (z' : type518 _144530 _144607 P) (_108886 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108885 : _144530 -> _144607) (_108887 : P) : (term1383 _144530 _144607 _144645 P p pat e z' _108885 q _108886 _108887) = (term1384 _144530 _144607 _144645 P p pat e z' _108886 q _108885 _108887).
Proof. exact (@lem8203393 (term1377 _144530 _144607 _144645 P p pat e z' _108885 q _108886 _108887) (term822 _144530 _144607 P q _108885 _108887)). Qed.
Lemma lem8203396 (a : Prop) (b : Prop) : (term942 a b) = (term943 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem8203397 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (z' : type518 _144530 _144607 P) (_108885 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108886 : _144530 -> _144607) (_108887 : P) : (term1385 _144530 _144607 _144645 P p pat e z' _108885 q _108886 _108887) = (term1386 _144530 _144607 _144645 P p pat e z' _108885 q _108886 _108887).
Proof. exact (@lem8203396 (term867 _144530 _144607 P p _108885 _108887) (term1387 _144530 _144607 _144645 P p pat e z' _108885 q _108886 _108887)). Qed.
Lemma lem8203399 (a : Prop) : (term15 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8203400 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (_108885 : _144530 -> _144607) (_108887 : P) : (term946 _144530 _144607 P p _108885 _108887) = (term822 _144530 _144607 P p _108885 _108887).
Proof. exact (@lem8203399 (term822 _144530 _144607 P p _108885 _108887)). Qed.
Lemma lem8203401 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8203402 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (_108885 : _144530 -> _144607) (_108887 : P) : (term947 _144530 _144607 P p _108885 _108887) = (term948 _144530 _144607 P p _108885 _108887).
Proof. exact (MK_COMB (@lem8203401) (@lem8203400 _144530 _144607 P p _108885 _108887)). Qed.
Lemma lem8203404 (a : Prop) (b : Prop) : (term942 a b) = (term943 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem8203405 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (z' : type518 _144530 _144607 P) (_108885 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108886 : _144530 -> _144607) (_108887 : P) : (term1388 _144530 _144607 _144645 P p pat e z' _108885 q _108886 _108887) = (term1389 _144530 _144607 _144645 P p pat e z' _108885 q _108886 _108887).
Proof. exact (@lem8203404 (term1096 _144530 _144607 _144645 P pat e _108885 _108887) (term1379 _144530 _144607 _144645 P p pat e z' _108885 q _108886 _108887)). Qed.
Lemma lem8203407 (a : Prop) : (term15 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8203408 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (_108885 : _144530 -> _144607) (_108887 : P) : (term1220 _144530 _144607 _144645 P pat e _108885 _108887) = ((term835 _144530 _144607 _144645 P pat _108885 _108887) = (term835 _144530 _144607 _144645 P e _108885 _108887)).
Proof. exact (@lem8203407 ((term835 _144530 _144607 _144645 P pat _108885 _108887) = (term835 _144530 _144607 _144645 P e _108885 _108887))). Qed.
Lemma lem8203409 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8203410 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (_108885 : _144530 -> _144607) (_108887 : P) : (term1221 _144530 _144607 _144645 P pat e _108885 _108887) = (term1222 _144530 _144607 _144645 P pat e _108885 _108887).
Proof. exact (MK_COMB (@lem8203409) (@lem8203408 _144530 _144607 _144645 P pat e _108885 _108887)). Qed.
Lemma lem8203412 (a : Prop) (b : Prop) : (term942 a b) = (term943 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem8203413 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (z' : type518 _144530 _144607 P) (_108885 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108886 : _144530 -> _144607) (_108887 : P) : (term1390 _144530 _144607 _144645 P p pat e z' _108885 q _108886 _108887) = (term1391 _144530 _144607 _144645 P p pat e z' _108885 q _108886 _108887).
Proof. exact (@lem8203412 (term867 _144530 _144607 P p _108886 _108887) (term1392 _144530 _144607 _144645 P pat e z' _108885 q _108886 _108887)). Qed.
Lemma lem8203415 (a : Prop) : (term15 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8203416 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (_108886 : _144530 -> _144607) (_108887 : P) : (term946 _144530 _144607 P p _108886 _108887) = (term822 _144530 _144607 P p _108886 _108887).
Proof. exact (@lem8203415 (term822 _144530 _144607 P p _108886 _108887)). Qed.
Lemma lem8203417 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8203418 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (_108886 : _144530 -> _144607) (_108887 : P) : (term947 _144530 _144607 P p _108886 _108887) = (term948 _144530 _144607 P p _108886 _108887).
Proof. exact (MK_COMB (@lem8203417) (@lem8203416 _144530 _144607 P p _108886 _108887)). Qed.
Lemma lem8203420 (a : Prop) (b : Prop) : (term942 a b) = (term943 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem8203421 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (z' : type518 _144530 _144607 P) (_108885 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108886 : _144530 -> _144607) (_108887 : P) : (term1393 _144530 _144607 _144645 P pat e z' _108885 q _108886 _108887) = (term1394 _144530 _144607 _144645 P pat e z' _108885 q _108886 _108887).
Proof. exact (@lem8203420 (term1096 _144530 _144607 _144645 P pat e _108886 _108887) (term974 _144530 _144607 P z' _108885 q _108886 _108887)). Qed.
Lemma lem8203423 (a : Prop) : (term15 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8203424 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (_108886 : _144530 -> _144607) (_108887 : P) : (term1220 _144530 _144607 _144645 P pat e _108886 _108887) = ((term835 _144530 _144607 _144645 P pat _108886 _108887) = (term835 _144530 _144607 _144645 P e _108886 _108887)).
Proof. exact (@lem8203423 ((term835 _144530 _144607 _144645 P pat _108886 _108887) = (term835 _144530 _144607 _144645 P e _108886 _108887))). Qed.
Lemma lem8203425 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8203426 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (_108886 : _144530 -> _144607) (_108887 : P) : (term1221 _144530 _144607 _144645 P pat e _108886 _108887) = (term1222 _144530 _144607 _144645 P pat e _108886 _108887).
Proof. exact (MK_COMB (@lem8203425) (@lem8203424 _144530 _144607 _144645 P pat e _108886 _108887)). Qed.
Lemma lem8203428 (a : Prop) (b : Prop) : (term942 a b) = (term943 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem8203429 {_144530 _144607 P : Type'} (z' : type518 _144530 _144607 P) (_108885 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108886 : _144530 -> _144607) (_108887 : P) : (term1395 _144530 _144607 P z' _108885 q _108886 _108887) = (term1396 _144530 _144607 P z' _108885 q _108886 _108887).
Proof. exact (@lem8203428 (term855 _144530 _144607 P z' _108885 _108886 _108887) (term867 _144530 _144607 P q _108886 _108887)). Qed.
Lemma lem8203431 (a : Prop) : (term15 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8203432 {_144530 _144607 P : Type'} (z' : type518 _144530 _144607 P) (_108885 : _144530 -> _144607) (_108886 : _144530 -> _144607) (_108887 : P) : (term986 _144530 _144607 P z' _108885 _108886 _108887) = ((term848 _144530 _144607 P z' _108885 _108886 _108887) = (term851 _144530 _144607 P z' _108885 _108886 _108887)).
Proof. exact (@lem8203431 ((term848 _144530 _144607 P z' _108885 _108886 _108887) = (term851 _144530 _144607 P z' _108885 _108886 _108887))). Qed.
Lemma lem8203433 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8203434 {_144530 _144607 P : Type'} (z' : type518 _144530 _144607 P) (_108885 : _144530 -> _144607) (_108886 : _144530 -> _144607) (_108887 : P) : (term1284 _144530 _144607 P z' _108885 _108886 _108887) = (term1285 _144530 _144607 P z' _108885 _108886 _108887).
Proof. exact (MK_COMB (@lem8203433) (@lem8203432 _144530 _144607 P z' _108885 _108886 _108887)). Qed.
Lemma lem8203436 (a : Prop) : (term15 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8203437 {_144530 _144607 P : Type'} (q : type560 _144530 _144607 P) (_108886 : _144530 -> _144607) (_108887 : P) : (term946 _144530 _144607 P q _108886 _108887) = (term822 _144530 _144607 P q _108886 _108887).
Proof. exact (@lem8203436 (term822 _144530 _144607 P q _108886 _108887)). Qed.
Lemma lem8203438 {_144530 _144607 P : Type'} (z' : type518 _144530 _144607 P) (_108885 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108886 : _144530 -> _144607) (_108887 : P) : (term1396 _144530 _144607 P z' _108885 q _108886 _108887) = (term1397 _144530 _144607 P z' _108885 q _108886 _108887).
Proof. exact (MK_COMB (@lem8203434 _144530 _144607 P z' _108885 _108886 _108887) (@lem8203437 _144530 _144607 P q _108886 _108887)). Qed.
Lemma lem8203439 {_144530 _144607 P : Type'} (z' : type518 _144530 _144607 P) (_108885 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108886 : _144530 -> _144607) (_108887 : P) : (term1395 _144530 _144607 P z' _108885 q _108886 _108887) = (term1397 _144530 _144607 P z' _108885 q _108886 _108887).
Proof. exact (TRANS (@lem8203429 _144530 _144607 P z' _108885 q _108886 _108887) (@lem8203438 _144530 _144607 P z' _108885 q _108886 _108887)). Qed.
Lemma lem8203440 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (z' : type518 _144530 _144607 P) (_108885 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108886 : _144530 -> _144607) (_108887 : P) : (term1394 _144530 _144607 _144645 P pat e z' _108885 q _108886 _108887) = (term1398 _144530 _144607 _144645 P pat e z' _108885 q _108886 _108887).
Proof. exact (MK_COMB (@lem8203426 _144530 _144607 _144645 P pat e _108886 _108887) (@lem8203439 _144530 _144607 P z' _108885 q _108886 _108887)). Qed.
Lemma lem8203441 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (z' : type518 _144530 _144607 P) (_108885 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108886 : _144530 -> _144607) (_108887 : P) : (term1393 _144530 _144607 _144645 P pat e z' _108885 q _108886 _108887) = (term1398 _144530 _144607 _144645 P pat e z' _108885 q _108886 _108887).
Proof. exact (TRANS (@lem8203421 _144530 _144607 _144645 P pat e z' _108885 q _108886 _108887) (@lem8203440 _144530 _144607 _144645 P pat e z' _108885 q _108886 _108887)). Qed.
Lemma lem8203442 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (z' : type518 _144530 _144607 P) (_108885 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108886 : _144530 -> _144607) (_108887 : P) : (term1391 _144530 _144607 _144645 P p pat e z' _108885 q _108886 _108887) = (term1399 _144530 _144607 _144645 P p pat e z' _108885 q _108886 _108887).
Proof. exact (MK_COMB (@lem8203418 _144530 _144607 P p _108886 _108887) (@lem8203441 _144530 _144607 _144645 P pat e z' _108885 q _108886 _108887)). Qed.
Lemma lem8203443 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (z' : type518 _144530 _144607 P) (_108885 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108886 : _144530 -> _144607) (_108887 : P) : (term1390 _144530 _144607 _144645 P p pat e z' _108885 q _108886 _108887) = (term1399 _144530 _144607 _144645 P p pat e z' _108885 q _108886 _108887).
Proof. exact (TRANS (@lem8203413 _144530 _144607 _144645 P p pat e z' _108885 q _108886 _108887) (@lem8203442 _144530 _144607 _144645 P p pat e z' _108885 q _108886 _108887)). Qed.
Lemma lem8203444 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (z' : type518 _144530 _144607 P) (_108885 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108886 : _144530 -> _144607) (_108887 : P) : (term1389 _144530 _144607 _144645 P p pat e z' _108885 q _108886 _108887) = (term1400 _144530 _144607 _144645 P p pat e z' _108885 q _108886 _108887).
Proof. exact (MK_COMB (@lem8203410 _144530 _144607 _144645 P pat e _108885 _108887) (@lem8203443 _144530 _144607 _144645 P p pat e z' _108885 q _108886 _108887)). Qed.
Lemma lem8203445 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (z' : type518 _144530 _144607 P) (_108885 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108886 : _144530 -> _144607) (_108887 : P) : (term1388 _144530 _144607 _144645 P p pat e z' _108885 q _108886 _108887) = (term1400 _144530 _144607 _144645 P p pat e z' _108885 q _108886 _108887).
Proof. exact (TRANS (@lem8203405 _144530 _144607 _144645 P p pat e z' _108885 q _108886 _108887) (@lem8203444 _144530 _144607 _144645 P p pat e z' _108885 q _108886 _108887)). Qed.
Lemma lem8203446 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (z' : type518 _144530 _144607 P) (_108885 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108886 : _144530 -> _144607) (_108887 : P) : (term1386 _144530 _144607 _144645 P p pat e z' _108885 q _108886 _108887) = (term1401 _144530 _144607 _144645 P p pat e z' _108885 q _108886 _108887).
Proof. exact (MK_COMB (@lem8203402 _144530 _144607 P p _108885 _108887) (@lem8203445 _144530 _144607 _144645 P p pat e z' _108885 q _108886 _108887)). Qed.
Lemma lem8203447 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (z' : type518 _144530 _144607 P) (_108885 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108886 : _144530 -> _144607) (_108887 : P) : (term1385 _144530 _144607 _144645 P p pat e z' _108885 q _108886 _108887) = (term1401 _144530 _144607 _144645 P p pat e z' _108885 q _108886 _108887).
Proof. exact (TRANS (@lem8203397 _144530 _144607 _144645 P p pat e z' _108885 q _108886 _108887) (@lem8203446 _144530 _144607 _144645 P p pat e z' _108885 q _108886 _108887)). Qed.
Lemma lem8203448 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8203449 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (z' : type518 _144530 _144607 P) (_108885 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108886 : _144530 -> _144607) (_108887 : P) : (term1402 _144530 _144607 _144645 P p pat e z' _108885 q _108886 _108887) = (term1403 _144530 _144607 _144645 P p pat e z' _108885 q _108886 _108887).
Proof. exact (MK_COMB (@lem8203448) (@lem8203447 _144530 _144607 _144645 P p pat e z' _108885 q _108886 _108887)). Qed.
Lemma lem8203450 {_144530 _144607 P : Type'} (q : type560 _144530 _144607 P) (_108885 : _144530 -> _144607) (_108887 : P) : (term822 _144530 _144607 P q _108885 _108887) = (term822 _144530 _144607 P q _108885 _108887).
Proof. exact (eq_refl (term822 _144530 _144607 P q _108885 _108887)). Qed.
Lemma lem8203451 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (z' : type518 _144530 _144607 P) (_108886 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108885 : _144530 -> _144607) (_108887 : P) : (term1384 _144530 _144607 _144645 P p pat e z' _108886 q _108885 _108887) = (term1404 _144530 _144607 _144645 P p pat e z' _108886 q _108885 _108887).
Proof. exact (MK_COMB (@lem8203449 _144530 _144607 _144645 P p pat e z' _108885 q _108886 _108887) (@lem8203450 _144530 _144607 P q _108885 _108887)). Qed.
Lemma lem8203452 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (z' : type518 _144530 _144607 P) (_108886 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_108885 : _144530 -> _144607) (_108887 : P) : (term1383 _144530 _144607 _144645 P p pat e z' _108885 q _108886 _108887) = (term1404 _144530 _144607 _144645 P p pat e z' _108886 q _108885 _108887).
Proof. exact (TRANS (@lem8203394 _144530 _144607 _144645 P p pat e z' _108886 q _108885 _108887) (@lem8203451 _144530 _144607 _144645 P p pat e z' _108886 q _108885 _108887)). Qed.
Lemma lem8203454 {_144529 _144530 _144607 _144645 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z' : type518 _144530 _144607 P) (q : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) (h2 : term814 _144529 _144530 _144607 _144645 P p pat e lt2 s z' q) (h3 : term867 _144530 _144607 P q f a) (h4 : term1080 _144530 _144607 P f q g a) (h5 : (pat f a) = (e f a)) (h6 : (pat g a) = (e g a)) (h7 : p f a) (h8 : p g a) : term1397 _144530 _144607 P z' f q g a.
Proof. exact (conj (@lem8202756 _144529 _144530 _144607 _144645 P lt2 s z' q pat e f p g a h1 h2 h3 h4 h5 h6 h7 h8) (@lem8202763 _144530 _144607 P f q g a h4)). Qed.
Lemma lem8203455 {_144529 _144530 _144607 _144645 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z' : type518 _144530 _144607 P) (q : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) (h2 : term814 _144529 _144530 _144607 _144645 P p pat e lt2 s z' q) (h3 : term867 _144530 _144607 P q f a) (h4 : term1080 _144530 _144607 P f q g a) (h5 : (pat f a) = (e f a)) (h6 : (pat g a) = (e g a)) (h7 : p f a) (h8 : p g a) : term1398 _144530 _144607 _144645 P pat e z' f q g a.
Proof. exact (conj (@lem8201992 _144530 _144607 _144645 P pat e g a h6) (@lem8203454 _144529 _144530 _144607 _144645 P lt2 s z' q pat e f p g a h1 h2 h3 h4 h5 h6 h7 h8)). Qed.
Lemma lem8203456 {_144529 _144530 _144607 _144645 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z' : type518 _144530 _144607 P) (q : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) (h2 : term814 _144529 _144530 _144607 _144645 P p pat e lt2 s z' q) (h3 : term867 _144530 _144607 P q f a) (h4 : term1080 _144530 _144607 P f q g a) (h5 : (pat f a) = (e f a)) (h6 : (pat g a) = (e g a)) (h7 : p f a) (h8 : p g a) : term1399 _144530 _144607 _144645 P p pat e z' f q g a.
Proof. exact (conj (@lem8201985 _144530 _144607 P p g a h8) (@lem8203455 _144529 _144530 _144607 _144645 P lt2 s z' q pat e f p g a h1 h2 h3 h4 h5 h6 h7 h8)). Qed.
Lemma lem8203457 {_144529 _144530 _144607 _144645 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z' : type518 _144530 _144607 P) (q : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) (h2 : term814 _144529 _144530 _144607 _144645 P p pat e lt2 s z' q) (h3 : term867 _144530 _144607 P q f a) (h4 : term1080 _144530 _144607 P f q g a) (h5 : (pat f a) = (e f a)) (h6 : (pat g a) = (e g a)) (h7 : p f a) (h8 : p g a) : term1400 _144530 _144607 _144645 P p pat e z' f q g a.
Proof. exact (conj (@lem8201978 _144530 _144607 _144645 P pat e f a h5) (@lem8203456 _144529 _144530 _144607 _144645 P lt2 s z' q pat e f p g a h1 h2 h3 h4 h5 h6 h7 h8)). Qed.
Lemma lem8203458 {_144529 _144530 _144607 _144645 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z' : type518 _144530 _144607 P) (q : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) (h2 : term814 _144529 _144530 _144607 _144645 P p pat e lt2 s z' q) (h3 : term867 _144530 _144607 P q f a) (h4 : term1080 _144530 _144607 P f q g a) (h5 : (pat f a) = (e f a)) (h6 : (pat g a) = (e g a)) (h7 : p f a) (h8 : p g a) : term1401 _144530 _144607 _144645 P p pat e z' f q g a.
Proof. exact (conj (@lem8201971 _144530 _144607 P p f a h7) (@lem8203457 _144529 _144530 _144607 _144645 P lt2 s z' q pat e f p g a h1 h2 h3 h4 h5 h6 h7 h8)). Qed.
Lemma lem8203460 {_144529 _144530 _144607 _144645 P : Type'} (_108886 : _144530 -> _144607) (_108885 : _144530 -> _144607) (_108887 : P) (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z' : type518 _144530 _144607 P) (q : type560 _144530 _144607 P) (h1 : term814 _144529 _144530 _144607 _144645 P p pat e lt2 s z' q) : term1404 _144530 _144607 _144645 P p pat e z' _108886 q _108885 _108887.
Proof. exact (EQ_MP (@lem8203452 _144530 _144607 _144645 P p pat e z' _108886 q _108885 _108887) (@lem8203391 _144529 _144530 _144607 _144645 P _108885 _108886 _108887 p pat e lt2 s z' q h1)). Qed.
Lemma lem8203461 {_144529 _144530 _144607 _144645 P : Type'} (_108886 : _144530 -> _144607) (_108885 : _144530 -> _144607) (_108887 : P) (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z' : type518 _144530 _144607 P) (q : type560 _144530 _144607 P) (h1 : term814 _144529 _144530 _144607 _144645 P p pat e lt2 s z' q) : term1404 _144530 _144607 _144645 P p pat e z' _108886 q _108885 _108887.
Proof. exact (@lem8203460 _144529 _144530 _144607 _144645 P _108886 _108885 _108887 p pat e lt2 s z' q h1). Qed.
Lemma lem8203462 {_144529 _144530 _144607 _144645 P : Type'} (g : _144530 -> _144607) (f : _144530 -> _144607) (a : P) (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z' : type518 _144530 _144607 P) (q : type560 _144530 _144607 P) (h1 : term814 _144529 _144530 _144607 _144645 P p pat e lt2 s z' q) : term1404 _144530 _144607 _144645 P p pat e z' g q f a.
Proof. exact (@lem8203461 _144529 _144530 _144607 _144645 P g f a p pat e lt2 s z' q h1). Qed.
Lemma lem8203465 {_144529 _144530 _144607 _144645 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z' : type518 _144530 _144607 P) (q : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) (h2 : term814 _144529 _144530 _144607 _144645 P p pat e lt2 s z' q) (h3 : term867 _144530 _144607 P q f a) (h4 : term1080 _144530 _144607 P f q g a) (h5 : (pat f a) = (e f a)) (h6 : (pat g a) = (e g a)) (h7 : p f a) (h8 : p g a) : term822 _144530 _144607 P q f a.
Proof. exact (@lem8203462 _144529 _144530 _144607 _144645 P g f a p pat e lt2 s z' q h2 (@lem8203458 _144529 _144530 _144607 _144645 P lt2 s z' q pat e f p g a h1 h2 h3 h4 h5 h6 h7 h8)). Qed.
Lemma lem8203466 {_144529 _144530 _144607 _144645 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z' : type518 _144530 _144607 P) (q : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) (h2 : term814 _144529 _144530 _144607 _144645 P p pat e lt2 s z' q) (h3 : term1080 _144530 _144607 P f q g a) (h4 : (pat f a) = (e f a)) (h5 : (pat g a) = (e g a)) (h6 : p f a) (h7 : p g a) : term916 _144530 _144607 P q f a.
Proof. exact (fun h0 : term867 _144530 _144607 P q f a => @lem8203465 _144529 _144530 _144607 _144645 P lt2 s z' q pat e f p g a h1 h2 h0 h3 h4 h5 h6 h7). Qed.
Lemma lem8203468 (p : Prop) : (term57 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8203469 {_144530 _144607 P : Type'} (q : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) : (term916 _144530 _144607 P q f a) = (term822 _144530 _144607 P q f a).
Proof. exact (@lem8203468 (term822 _144530 _144607 P q f a)). Qed.
Lemma lem8203470 {_144529 _144530 _144607 _144645 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z' : type518 _144530 _144607 P) (q : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) (h2 : term814 _144529 _144530 _144607 _144645 P p pat e lt2 s z' q) (h3 : term1080 _144530 _144607 P f q g a) (h4 : (pat f a) = (e f a)) (h5 : (pat g a) = (e g a)) (h6 : p f a) (h7 : p g a) : term822 _144530 _144607 P q f a.
Proof. exact (EQ_MP (@lem8203469 _144530 _144607 P q f a) (@lem8203466 _144529 _144530 _144607 _144645 P lt2 s z' q pat e f p g a h1 h2 h3 h4 h5 h6 h7)). Qed.
Lemma lem8203473 (p : Prop) : (~ p) = (p -> False).
Proof. exact (EQ_MP (@lem21021 p) (@lem0)). Qed.
Lemma lem8203475 {_144530 _144607 P : Type'} (q : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) : (term867 _144530 _144607 P q f a) = (term1294 _144530 _144607 P q f a).
Proof. exact (@lem8203473 (term822 _144530 _144607 P q f a)). Qed.
Lemma lem8203478 {_144530 _144607 P : Type'} (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term1080 _144530 _144607 P f q g a) : term1294 _144530 _144607 P q f a.
Proof. exact (EQ_MP (@lem8203475 _144530 _144607 P q f a) (@lem8199511 _144530 _144607 P f q g a h1)). Qed.
Lemma lem8203481 {_144529 _144530 _144607 _144645 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z' : type518 _144530 _144607 P) (q : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) (h2 : term814 _144529 _144530 _144607 _144645 P p pat e lt2 s z' q) (h3 : term1080 _144530 _144607 P f q g a) (h4 : (pat f a) = (e f a)) (h5 : (pat g a) = (e g a)) (h6 : p f a) (h7 : p g a) : False.
Proof. exact (@lem8203478 _144530 _144607 P f q g a h3 (@lem8203470 _144529 _144530 _144607 _144645 P lt2 s z' q pat e f p g a h1 h2 h3 h4 h5 h6 h7)). Qed.
Lemma lem8203482 {_144529 _144530 _144607 _144645 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z' : type518 _144530 _144607 P) (q : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) (h2 : term814 _144529 _144530 _144607 _144645 P p pat e lt2 s z' q) (h3 : term1080 _144530 _144607 P f q g a) (h4 : (pat f a) = (e f a)) (h5 : (pat g a) = (e g a)) (h6 : p f a) (h7 : p g a) : term59.
Proof. exact (fun h0 : ~ False => @lem8203481 _144529 _144530 _144607 _144645 P lt2 s z' q pat e f p g a h1 h2 h3 h4 h5 h6 h7). Qed.
Lemma lem8203484 (p : Prop) : (term57 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8203485 : term59 = False.
Proof. exact (@lem8203484 False). Qed.
Lemma lem8203486 {_144529 _144530 _144607 _144645 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z' : type518 _144530 _144607 P) (q : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) (h2 : term814 _144529 _144530 _144607 _144645 P p pat e lt2 s z' q) (h3 : term1080 _144530 _144607 P f q g a) (h4 : (pat f a) = (e f a)) (h5 : (pat g a) = (e g a)) (h6 : p f a) (h7 : p g a) : False.
Proof. exact (EQ_MP (@lem8203485) (@lem8203482 _144529 _144530 _144607 _144645 P lt2 s z' q pat e f p g a h1 h2 h3 h4 h5 h6 h7)). Qed.
Lemma lem8203487 {_144529 _144530 _144607 _144645 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z' : type518 _144530 _144607 P) (q : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) (h2 : term814 _144529 _144530 _144607 _144645 P p pat e lt2 s z' q) (h3 : term1006 _144530 _144607 P f q g a) (h4 : (pat f a) = (e f a)) (h5 : (pat g a) = (e g a)) (h6 : p f a) (h7 : p g a) : False.
Proof. exact (or_elim (@lem8196722 _144530 _144607 P f q g a h3) (fun h0 : term1082 _144530 _144607 P f q g a => @lem8201723 _144529 _144530 _144607 _144645 P lt2 s z' q pat e f p g a h1 h2 h0 h4 h5 h6 h7) (fun h0 : term1080 _144530 _144607 P f q g a => @lem8203486 _144529 _144530 _144607 _144645 P lt2 s z' q pat e f p g a h1 h2 h0 h4 h5 h6 h7)). Qed.
Lemma lem8203488 {_144529 _144530 _144607 _144645 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z' : type518 _144530 _144607 P) (q : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) (h2 : term141 _144529 _144530 _144607 _144645 P p lt2 s pat) (h3 : term814 _144529 _144530 _144607 _144645 P p pat e lt2 s z' q) (h4 : term1006 _144530 _144607 P f q g a) (h5 : (pat f a) = (e f a)) (h6 : (pat g a) = (e g a)) (h7 : p f a) (h8 : p g a) : False.
Proof. exact (ex_elim (@lem8194986 _144529 _144530 _144607 _144645 P p lt2 s pat h2) (fun z'''' : type518 _144530 _144607 P => fun h0 : term555 _144529 _144530 _144607 _144645 P p lt2 s pat z'''' => @lem8203487 _144529 _144530 _144607 _144645 P lt2 s z' q pat e f p g a h1 h3 h4 h5 h6 h7 h8)). Qed.
Lemma lem8203489 {_144529 _144530 _144607 _144645 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z' : type518 _144530 _144607 P) (q : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) (h2 : term141 _144529 _144530 _144607 _144645 P p lt2 s e) (h3 : term141 _144529 _144530 _144607 _144645 P p lt2 s pat) (h4 : term814 _144529 _144530 _144607 _144645 P p pat e lt2 s z' q) (h5 : term1006 _144530 _144607 P f q g a) (h6 : (pat f a) = (e f a)) (h7 : (pat g a) = (e g a)) (h8 : p f a) (h9 : p g a) : False.
Proof. exact (ex_elim (@lem8195312 _144529 _144530 _144607 _144645 P p lt2 s e h2) (fun z''' : type518 _144530 _144607 P => fun h0 : term555 _144529 _144530 _144607 _144645 P p lt2 s e z''' => @lem8203488 _144529 _144530 _144607 _144645 P lt2 s z' q pat e f p g a h1 h3 h4 h5 h6 h7 h8 h9)). Qed.
Lemma lem8203490 {_144529 _144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z' : type518 _144530 _144607 P) (q : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) (h2 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) (h3 : term141 _144529 _144530 _144607 _144645 P p lt2 s e) (h4 : term141 _144529 _144530 _144607 _144645 P p lt2 s pat) (h5 : term814 _144529 _144530 _144607 _144645 P p pat e lt2 s z' q) (h6 : term1006 _144530 _144607 P f q g a) (h7 : (pat f a) = (e f a)) (h8 : (pat g a) = (e g a)) (h9 : p f a) (h10 : p g a) : False.
Proof. exact (ex_elim (@lem8195662 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t h2) (fun z'' : type518 _144530 _144607 P => fun h0 : term687 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t z'' => @lem8203489 _144529 _144530 _144607 _144645 P lt2 s z' q pat e f p g a h1 h3 h4 h5 h6 h7 h8 h9 h10)). Qed.
Lemma lem8203491 {_144529 _144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (q : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) (h2 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) (h3 : term224 _144529 _144530 _144607 _144645 P p pat e lt2 s q) (h4 : term141 _144529 _144530 _144607 _144645 P p lt2 s e) (h5 : term141 _144529 _144530 _144607 _144645 P p lt2 s pat) (h6 : term1006 _144530 _144607 P f q g a) (h7 : (pat f a) = (e f a)) (h8 : (pat g a) = (e g a)) (h9 : p f a) (h10 : p g a) : False.
Proof. exact (ex_elim (@lem8196014 _144529 _144530 _144607 _144645 P p pat e lt2 s q h3) (fun z' : type518 _144530 _144607 P => fun h0 : term816 _144529 _144530 _144607 _144645 P p pat e lt2 s q z' => @lem8203490 _144529 _144530 _144607 _144645 _144654 P t lt2 s z' q pat e f p g a h1 h2 h4 h5 h0 h6 h7 h8 h9 h10)). Qed.
Lemma lem8203492 {_144529 _144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (q : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) (h2 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) (h3 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y) (h4 : term224 _144529 _144530 _144607 _144645 P p pat e lt2 s q) (h5 : term141 _144529 _144530 _144607 _144645 P p lt2 s e) (h6 : term141 _144529 _144530 _144607 _144645 P p lt2 s pat) (h7 : term1006 _144530 _144607 P f q g a) (h8 : (pat f a) = (e f a)) (h9 : (pat g a) = (e g a)) (h10 : p f a) (h11 : p g a) : False.
Proof. exact (ex_elim (@lem8196364 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y h3) (fun z : type518 _144530 _144607 P => fun h0 : term687 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y z => @lem8203491 _144529 _144530 _144607 _144645 _144654 P t lt2 s q pat e f p g a h1 h2 h4 h5 h6 h7 h8 h9 h10 h11)). Qed.
Lemma lem8203493 {_144529 _144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (q : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) (h2 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) (h3 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y) (h4 : term224 _144529 _144530 _144607 _144645 P p pat e lt2 s q) (h5 : term141 _144529 _144530 _144607 _144645 P p lt2 s e) (h6 : term141 _144529 _144530 _144607 _144645 P p lt2 s pat) (h7 : term1006 _144530 _144607 P f q g a) (h8 : (pat f a) = (e f a)) (h9 : (pat g a) = (e g a)) (h10 : p f a) (h11 : p g a) : ((pat g a) = (e g a)) = False.
Proof. exact (prop_ext (fun h12 : (pat g a) = (e g a) => @lem8203492 _144529 _144530 _144607 _144645 _144654 P t y lt2 s q pat e f p g a h1 h2 h3 h4 h5 h6 h7 h8 h9 h10 h11) (fun h12 : False => @lem8196451 _144530 _144607 _144645 P pat e g a h9)). Qed.
Lemma lem8203494 {_144529 _144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (q : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) (h2 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) (h3 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y) (h4 : term224 _144529 _144530 _144607 _144645 P p pat e lt2 s q) (h5 : term141 _144529 _144530 _144607 _144645 P p lt2 s e) (h6 : term141 _144529 _144530 _144607 _144645 P p lt2 s pat) (h7 : term1006 _144530 _144607 P f q g a) (h8 : (pat f a) = (e f a)) (h9 : (pat g a) = (e g a)) (h10 : p f a) (h11 : p g a) : False.
Proof. exact (EQ_MP (@lem8203493 _144529 _144530 _144607 _144645 _144654 P t y lt2 s q pat e f p g a h1 h2 h3 h4 h5 h6 h7 h8 h9 h10 h11) (@lem8196451 _144530 _144607 _144645 P pat e g a h9)). Qed.
Lemma lem8203495 {_144529 _144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (q : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) (h2 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) (h3 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y) (h4 : term224 _144529 _144530 _144607 _144645 P p pat e lt2 s q) (h5 : term141 _144529 _144530 _144607 _144645 P p lt2 s e) (h6 : term141 _144529 _144530 _144607 _144645 P p lt2 s pat) (h7 : term1006 _144530 _144607 P f q g a) (h8 : (pat f a) = (e f a)) (h9 : (pat g a) = (e g a)) (h10 : p f a) (h11 : p g a) : ((pat f a) = (e f a)) = False.
Proof. exact (prop_ext (fun h12 : (pat f a) = (e f a) => @lem8203494 _144529 _144530 _144607 _144645 _144654 P t y lt2 s q pat e f p g a h1 h2 h3 h4 h5 h6 h7 h8 h9 h10 h11) (fun h12 : False => @lem8196445 _144530 _144607 _144645 P pat e f a h8)). Qed.
Lemma lem8203496 {_144529 _144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (q : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) (h2 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) (h3 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y) (h4 : term224 _144529 _144530 _144607 _144645 P p pat e lt2 s q) (h5 : term141 _144529 _144530 _144607 _144645 P p lt2 s e) (h6 : term141 _144529 _144530 _144607 _144645 P p lt2 s pat) (h7 : term1006 _144530 _144607 P f q g a) (h8 : (pat f a) = (e f a)) (h9 : (pat g a) = (e g a)) (h10 : p f a) (h11 : p g a) : False.
Proof. exact (EQ_MP (@lem8203495 _144529 _144530 _144607 _144645 _144654 P t y lt2 s q pat e f p g a h1 h2 h3 h4 h5 h6 h7 h8 h9 h10 h11) (@lem8196445 _144530 _144607 _144645 P pat e f a h8)). Qed.
Lemma lem8203497 {_144529 _144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (q : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) (h2 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) (h3 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y) (h4 : term224 _144529 _144530 _144607 _144645 P p pat e lt2 s q) (h5 : term141 _144529 _144530 _144607 _144645 P p lt2 s e) (h6 : term141 _144529 _144530 _144607 _144645 P p lt2 s pat) (h7 : term1006 _144530 _144607 P f q g a) (h8 : (pat f a) = (e f a)) (h9 : (pat g a) = (e g a)) (h10 : p f a) (h11 : p g a) : (p g a) = False.
Proof. exact (prop_ext (fun h12 : p g a => @lem8203496 _144529 _144530 _144607 _144645 _144654 P t y lt2 s q pat e f p g a h1 h2 h3 h4 h5 h6 h7 h8 h9 h10 h11) (fun h12 : False => @lem8196376 _144530 _144607 P p g a h11)). Qed.
Lemma lem8203498 {_144529 _144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (q : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) (h2 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) (h3 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y) (h4 : term224 _144529 _144530 _144607 _144645 P p pat e lt2 s q) (h5 : term141 _144529 _144530 _144607 _144645 P p lt2 s e) (h6 : term141 _144529 _144530 _144607 _144645 P p lt2 s pat) (h7 : term1006 _144530 _144607 P f q g a) (h8 : (pat f a) = (e f a)) (h9 : (pat g a) = (e g a)) (h10 : p f a) (h11 : p g a) : False.
Proof. exact (EQ_MP (@lem8203497 _144529 _144530 _144607 _144645 _144654 P t y lt2 s q pat e f p g a h1 h2 h3 h4 h5 h6 h7 h8 h9 h10 h11) (@lem8196376 _144530 _144607 P p g a h11)). Qed.
Lemma lem8203499 {_144529 _144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (q : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) (h2 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) (h3 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y) (h4 : term224 _144529 _144530 _144607 _144645 P p pat e lt2 s q) (h5 : term141 _144529 _144530 _144607 _144645 P p lt2 s e) (h6 : term141 _144529 _144530 _144607 _144645 P p lt2 s pat) (h7 : term1006 _144530 _144607 P f q g a) (h8 : (pat f a) = (e f a)) (h9 : (pat g a) = (e g a)) (h10 : p f a) (h11 : p g a) : (p f a) = False.
Proof. exact (prop_ext (fun h12 : p f a => @lem8203498 _144529 _144530 _144607 _144645 _144654 P t y lt2 s q pat e f p g a h1 h2 h3 h4 h5 h6 h7 h8 h9 h10 h11) (fun h12 : False => @lem8196370 _144530 _144607 P p f a h10)). Qed.
Lemma lem8203500 {_144529 _144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (q : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) (h2 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) (h3 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y) (h4 : term224 _144529 _144530 _144607 _144645 P p pat e lt2 s q) (h5 : term141 _144529 _144530 _144607 _144645 P p lt2 s e) (h6 : term141 _144529 _144530 _144607 _144645 P p lt2 s pat) (h7 : term1006 _144530 _144607 P f q g a) (h8 : (pat f a) = (e f a)) (h9 : (pat g a) = (e g a)) (h10 : p f a) (h11 : p g a) : False.
Proof. exact (EQ_MP (@lem8203499 _144529 _144530 _144607 _144645 _144654 P t y lt2 s q pat e f p g a h1 h2 h3 h4 h5 h6 h7 h8 h9 h10 h11) (@lem8196370 _144530 _144607 P p f a h10)). Qed.
Lemma lem8203501 {_144529 _144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (q : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) (h2 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) (h3 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y) (h4 : term224 _144529 _144530 _144607 _144645 P p pat e lt2 s q) (h5 : term141 _144529 _144530 _144607 _144645 P p lt2 s e) (h6 : term141 _144529 _144530 _144607 _144645 P p lt2 s pat) (h7 : term1006 _144530 _144607 P f q g a) (h8 : (pat f a) = (e f a)) (h9 : (pat g a) = (e g a)) (h10 : p f a) (h11 : p g a) : (term1006 _144530 _144607 P f q g a) = False.
Proof. exact (prop_ext (fun h12 : term1006 _144530 _144607 P f q g a => @lem8203500 _144529 _144530 _144607 _144645 _144654 P t y lt2 s q pat e f p g a h1 h2 h3 h4 h5 h6 h7 h8 h9 h10 h11) (fun h12 : False => @lem8194660 _144530 _144607 P f q g a h7)). Qed.
Lemma lem8203502 {_144529 _144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (q : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) (h2 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) (h3 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y) (h4 : term224 _144529 _144530 _144607 _144645 P p pat e lt2 s q) (h5 : term141 _144529 _144530 _144607 _144645 P p lt2 s e) (h6 : term141 _144529 _144530 _144607 _144645 P p lt2 s pat) (h7 : term1006 _144530 _144607 P f q g a) (h8 : (pat f a) = (e f a)) (h9 : (pat g a) = (e g a)) (h10 : p f a) (h11 : p g a) : False.
Proof. exact (EQ_MP (@lem8203501 _144529 _144530 _144607 _144645 _144654 P t y lt2 s q pat e f p g a h1 h2 h3 h4 h5 h6 h7 h8 h9 h10 h11) (@lem8194660 _144530 _144607 P f q g a h7)). Qed.
Lemma lem8203503 {_144529 _144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) (h2 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) (h3 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y) (h4 : term224 _144529 _144530 _144607 _144645 P p pat e lt2 s q) (h5 : term141 _144529 _144530 _144607 _144645 P p lt2 s e) (h6 : term141 _144529 _144530 _144607 _144645 P p lt2 s pat) (h7 : (pat f a) = (e f a)) (h8 : (pat g a) = (e g a)) (h9 : p f a) (h10 : p g a) : term1005 _144530 _144607 P f q g a.
Proof. exact (fun h0 : term1006 _144530 _144607 P f q g a => @lem8203502 _144529 _144530 _144607 _144645 _144654 P t y lt2 s q pat e f p g a h1 h2 h3 h4 h5 h6 h0 h7 h8 h9 h10). Qed.
Lemma lem8203504 {_144529 _144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) (h2 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) (h3 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y) (h4 : term224 _144529 _144530 _144607 _144645 P p pat e lt2 s q) (h5 : term141 _144529 _144530 _144607 _144645 P p lt2 s e) (h6 : term141 _144529 _144530 _144607 _144645 P p lt2 s pat) (h7 : (pat f a) = (e f a)) (h8 : (pat g a) = (e g a)) (h9 : p f a) (h10 : p g a) : (q f a) = (q g a).
Proof. exact (EQ_MP (@lem8194659 _144530 _144607 P f q g a) (@lem8203503 _144529 _144530 _144607 _144645 _144654 P t y q lt2 s pat e f p g a h1 h2 h3 h4 h5 h6 h7 h8 h9 h10)). Qed.
Lemma lem8203505 {_144529 _144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) (h2 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) (h3 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y) (h4 : term224 _144529 _144530 _144607 _144645 P p pat e lt2 s q) (h5 : term141 _144529 _144530 _144607 _144645 P p lt2 s e) (h6 : term141 _144529 _144530 _144607 _144645 P p lt2 s pat) (h7 : (pat f a) = (e f a)) (h8 : p f a) (h9 : p g a) : term1014 _144530 _144607 _144645 P pat e f q g a.
Proof. exact (fun h0 : (pat g a) = (e g a) => @lem8203504 _144529 _144530 _144607 _144645 _144654 P t y q lt2 s pat e f p g a h1 h2 h3 h4 h5 h6 h7 h0 h8 h9). Qed.
Lemma lem8203506 {_144529 _144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (q : type560 _144530 _144607 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) (h2 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) (h3 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y) (h4 : term224 _144529 _144530 _144607 _144645 P p pat e lt2 s q) (h5 : term141 _144529 _144530 _144607 _144645 P p lt2 s e) (h6 : term141 _144529 _144530 _144607 _144645 P p lt2 s pat) (h7 : p f a) (h8 : p g a) : term1016 _144530 _144607 _144645 P pat e f q g a.
Proof. exact (fun h0 : (pat f a) = (e f a) => @lem8203505 _144529 _144530 _144607 _144645 _144654 P t y q lt2 s pat e f p g a h1 h2 h3 h4 h5 h6 h0 h7 h8). Qed.
Lemma lem8203507 {_144529 _144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (q : type560 _144530 _144607 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) (h2 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y) (h3 : term224 _144529 _144530 _144607 _144645 P p pat e lt2 s q) (h4 : term141 _144529 _144530 _144607 _144645 P p lt2 s e) (h5 : term141 _144529 _144530 _144607 _144645 P p lt2 s pat) (h6 : p f a) (h7 : p g a) : term1018 _144529 _144530 _144607 _144645 P lt2 s pat e f q g a.
Proof. exact (fun h0 : term165 _144529 _144530 _144607 P lt2 s a f g => @lem8203506 _144529 _144530 _144607 _144645 _144654 P t y q e lt2 s pat f p g a h0 h1 h2 h3 h4 h5 h6 h7). Qed.
Lemma lem8203508 {_144529 _144530 _144607 _144645 _144654 P : Type'} (g : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (q : type560 _144530 _144607 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) (h1 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) (h2 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y) (h3 : term224 _144529 _144530 _144607 _144645 P p pat e lt2 s q) (h4 : term141 _144529 _144530 _144607 _144645 P p lt2 s e) (h5 : term141 _144529 _144530 _144607 _144645 P p lt2 s pat) (h6 : p f a) : term1020 _144529 _144530 _144607 _144645 P p lt2 s pat e f q g a.
Proof. exact (fun h0 : p g a => @lem8203507 _144529 _144530 _144607 _144645 _144654 P t y q e lt2 s pat f p g a h1 h2 h3 h4 h5 h6 h0). Qed.
Lemma lem8203509 {_144529 _144530 _144607 _144645 _144654 P : Type'} (f : _144530 -> _144607) (g : _144530 -> _144607) (a : P) (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (q : type560 _144530 _144607 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (h1 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) (h2 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y) (h3 : term224 _144529 _144530 _144607 _144645 P p pat e lt2 s q) (h4 : term141 _144529 _144530 _144607 _144645 P p lt2 s e) (h5 : term141 _144529 _144530 _144607 _144645 P p lt2 s pat) : term1022 _144529 _144530 _144607 _144645 P p lt2 s pat e f q g a.
Proof. exact (fun h0 : p f a => @lem8203508 _144529 _144530 _144607 _144645 _144654 P g t y q e lt2 s pat p f a h1 h2 h3 h4 h5 h0). Qed.
Lemma lem8203510 {_144529 _144530 _144607 _144645 _144654 P : Type'} (y : type564 _144530 _144607 _144654 P) (f : _144530 -> _144607) (g : _144530 -> _144607) (a : P) (t : type564 _144530 _144607 _144654 P) (q : type560 _144530 _144607 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (h1 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) (h2 : term224 _144529 _144530 _144607 _144645 P p pat e lt2 s q) (h3 : term141 _144529 _144530 _144607 _144645 P p lt2 s e) (h4 : term141 _144529 _144530 _144607 _144645 P p lt2 s pat) : term1024 _144529 _144530 _144607 _144645 _144654 P y p lt2 s pat e f q g a.
Proof. exact (fun h0 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y => @lem8203509 _144529 _144530 _144607 _144645 _144654 P f g a t y q e p lt2 s pat h1 h0 h2 h3 h4). Qed.
Lemma lem8203511 {_144529 _144530 _144607 _144645 _144654 P : Type'} (y : type564 _144530 _144607 _144654 P) (f : _144530 -> _144607) (g : _144530 -> _144607) (a : P) (q : type560 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (h1 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) (h2 : term141 _144529 _144530 _144607 _144645 P p lt2 s e) (h3 : term141 _144529 _144530 _144607 _144645 P p lt2 s pat) : term1026 _144529 _144530 _144607 _144645 _144654 P y p lt2 s pat e f q g a.
Proof. exact (fun h0 : term224 _144529 _144530 _144607 _144645 P p pat e lt2 s q => @lem8203510 _144529 _144530 _144607 _144645 _144654 P y f g a t q e p lt2 s pat h1 h0 h2 h3). Qed.
Lemma lem8203512 {_144529 _144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (h1 : term141 _144529 _144530 _144607 _144645 P p lt2 s e) (h2 : term141 _144529 _144530 _144607 _144645 P p lt2 s pat) : term1028 _144529 _144530 _144607 _144645 _144654 P t y p lt2 s pat e f q g a.
Proof. exact (fun h0 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t => @lem8203511 _144529 _144530 _144607 _144645 _144654 P y f g a q t e p lt2 s pat h0 h1 h2). Qed.
Lemma lem8203513 {_144529 _144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (h1 : term141 _144529 _144530 _144607 _144645 P p lt2 s pat) : term1030 _144529 _144530 _144607 _144645 _144654 P t y p lt2 s pat e f q g a.
Proof. exact (fun h0 : term141 _144529 _144530 _144607 _144645 P p lt2 s e => @lem8203512 _144529 _144530 _144607 _144645 _144654 P t y f q g a e p lt2 s pat h0 h1). Qed.
Lemma lem8203514 {_144529 _144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : term1031 _144529 _144530 _144607 _144645 _144654 P t y p lt2 s pat e f q g a.
Proof. exact (fun h0 : term141 _144529 _144530 _144607 _144645 P p lt2 s pat => @lem8203513 _144529 _144530 _144607 _144645 _144654 P t y e f q g a p lt2 s pat h0). Qed.
Lemma lem8203519 {_144529 _144530 _144607 _144645 _144654 P : Type'} (y : type564 _144530 _144607 _144654 P) (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : term1035 _144529 _144530 _144607 _144645 _144654 P y p lt2 s pat e f q g a.
Proof. exact (fun t : type564 _144530 _144607 _144654 P => @lem8203514 _144529 _144530 _144607 _144645 _144654 P t y p lt2 s pat e f q g a). Qed.
Lemma lem8203524 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : term1039 _144529 _144530 _144607 _144645 _144654 P p lt2 s pat e f q g a.
Proof. exact (fun y : type564 _144530 _144607 _144654 P => @lem8203519 _144529 _144530 _144607 _144645 _144654 P y p lt2 s pat e f q g a). Qed.
Lemma lem8203529 {_144529 _144530 _144607 _144645 _144654 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : term1043 _144529 _144530 _144607 _144645 _144654 P lt2 s pat e f q g a.
Proof. exact (fun p : type560 _144530 _144607 P => @lem8203524 _144529 _144530 _144607 _144645 _144654 P p lt2 s pat e f q g a). Qed.
Lemma lem8203534 {_144529 _144530 _144607 _144645 _144654 P : Type'} (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : term1047 _144529 _144530 _144607 _144645 _144654 P s pat e f q g a.
Proof. exact (fun lt2 : type1470 _144529 _144530 => @lem8203529 _144529 _144530 _144607 _144645 _144654 P lt2 s pat e f q g a). Qed.
Lemma lem8203539 {_144529 _144530 _144607 _144645 _144654 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : term1051 _144529 _144530 _144607 _144645 _144654 P pat e f q g a.
Proof. exact (fun s : P -> _144529 => @lem8203534 _144529 _144530 _144607 _144645 _144654 P s pat e f q g a). Qed.
Lemma lem8203544 {_144529 _144530 _144607 _144645 _144654 P : Type'} (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : term1055 _144529 _144530 _144607 _144645 _144654 P e f q g a.
Proof. exact (fun pat : type564 _144530 _144607 _144645 P => @lem8203539 _144529 _144530 _144607 _144645 _144654 P pat e f q g a). Qed.
Lemma lem8203549 {_144529 _144530 _144607 _144645 _144654 P : Type'} (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : term1059 _144529 _144530 _144607 _144645 _144654 P f q g a.
Proof. exact (fun e : type564 _144530 _144607 _144645 P => @lem8203544 _144529 _144530 _144607 _144645 _144654 P e f q g a). Qed.
Lemma lem8203554 {_144529 _144530 _144607 _144645 _144654 P : Type'} (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : term1063 _144529 _144530 _144607 _144645 _144654 P q g a.
Proof. exact (fun f : _144530 -> _144607 => @lem8203549 _144529 _144530 _144607 _144645 _144654 P f q g a). Qed.
Lemma lem8203559 {_144529 _144530 _144607 _144645 _144654 P : Type'} (g : _144530 -> _144607) (a : P) : term1067 _144529 _144530 _144607 _144645 _144654 P g a.
Proof. exact (fun q : type560 _144530 _144607 P => @lem8203554 _144529 _144530 _144607 _144645 _144654 P q g a). Qed.
Lemma lem8203564 {_144529 _144530 _144607 _144645 _144654 P : Type'} (a : P) : term1071 _144529 _144530 _144607 _144645 _144654 P a.
Proof. exact (fun g : _144530 -> _144607 => @lem8203559 _144529 _144530 _144607 _144645 _144654 P g a). Qed.
Lemma lem8203569 {_144529 _144530 _144607 _144645 _144654 P : Type'} : term1075 _144529 _144530 _144607 _144645 _144654 P.
Proof. exact (fun a : P => @lem8203564 _144529 _144530 _144607 _144645 _144654 P a). Qed.
Lemma lem8203570 {_144529 _144530 _144607 _144645 _144654 P : Type'} : term1074 _144529 _144530 _144607 _144645 _144654 P.
Proof. exact (EQ_MP (@lem8194645 _144529 _144530 _144607 _144645 _144654 P) (@lem8203569 _144529 _144530 _144607 _144645 _144654 P)). Qed.
Lemma lem8203571 {_144529 _144530 _144607 _144645 _144654 P : Type'} (a : P) : term1405 _144529 _144530 _144607 _144645 _144654 P a.
Proof. exact (@lem8203570 _144529 _144530 _144607 _144645 _144654 P a). Qed.
Lemma lem8203572 {_144529 _144530 _144607 _144645 _144654 P : Type'} (a : P) : (term1405 _144529 _144530 _144607 _144645 _144654 P a) = (term1070 _144529 _144530 _144607 _144645 _144654 P a).
Proof. exact (eq_refl (term1405 _144529 _144530 _144607 _144645 _144654 P a)). Qed.
Lemma lem8203573 {_144529 _144530 _144607 _144645 _144654 P : Type'} (a : P) : term1070 _144529 _144530 _144607 _144645 _144654 P a.
Proof. exact (EQ_MP (@lem8203572 _144529 _144530 _144607 _144645 _144654 P a) (@lem8203571 _144529 _144530 _144607 _144645 _144654 P a)). Qed.
Lemma lem8203574 {_144529 _144530 _144607 _144645 _144654 P : Type'} (a : P) (g : _144530 -> _144607) : term1406 _144529 _144530 _144607 _144645 _144654 P a g.
Proof. exact (@lem8203573 _144529 _144530 _144607 _144645 _144654 P a g). Qed.
Lemma lem8203575 {_144529 _144530 _144607 _144645 _144654 P : Type'} (g : _144530 -> _144607) (a : P) : (term1406 _144529 _144530 _144607 _144645 _144654 P a g) = (term1066 _144529 _144530 _144607 _144645 _144654 P g a).
Proof. exact (eq_refl (term1406 _144529 _144530 _144607 _144645 _144654 P a g)). Qed.
Lemma lem8203576 {_144529 _144530 _144607 _144645 _144654 P : Type'} (g : _144530 -> _144607) (a : P) : term1066 _144529 _144530 _144607 _144645 _144654 P g a.
Proof. exact (EQ_MP (@lem8203575 _144529 _144530 _144607 _144645 _144654 P g a) (@lem8203574 _144529 _144530 _144607 _144645 _144654 P a g)). Qed.
Lemma lem8203577 {_144529 _144530 _144607 _144645 _144654 P : Type'} (g : _144530 -> _144607) (a : P) (q : type560 _144530 _144607 P) : term1407 _144529 _144530 _144607 _144645 _144654 P g a q.
Proof. exact (@lem8203576 _144529 _144530 _144607 _144645 _144654 P g a q). Qed.
Lemma lem8203578 {_144529 _144530 _144607 _144645 _144654 P : Type'} (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term1407 _144529 _144530 _144607 _144645 _144654 P g a q) = (term1062 _144529 _144530 _144607 _144645 _144654 P q g a).
Proof. exact (eq_refl (term1407 _144529 _144530 _144607 _144645 _144654 P g a q)). Qed.
Lemma lem8203579 {_144529 _144530 _144607 _144645 _144654 P : Type'} (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : term1062 _144529 _144530 _144607 _144645 _144654 P q g a.
Proof. exact (EQ_MP (@lem8203578 _144529 _144530 _144607 _144645 _144654 P q g a) (@lem8203577 _144529 _144530 _144607 _144645 _144654 P g a q)). Qed.
Lemma lem8203580 {_144529 _144530 _144607 _144645 _144654 P : Type'} (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (f : _144530 -> _144607) : term1408 _144529 _144530 _144607 _144645 _144654 P q g a f.
Proof. exact (@lem8203579 _144529 _144530 _144607 _144645 _144654 P q g a f). Qed.
Lemma lem8203581 {_144529 _144530 _144607 _144645 _144654 P : Type'} (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term1408 _144529 _144530 _144607 _144645 _144654 P q g a f) = (term1058 _144529 _144530 _144607 _144645 _144654 P f q g a).
Proof. exact (eq_refl (term1408 _144529 _144530 _144607 _144645 _144654 P q g a f)). Qed.
Lemma lem8203582 {_144529 _144530 _144607 _144645 _144654 P : Type'} (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : term1058 _144529 _144530 _144607 _144645 _144654 P f q g a.
Proof. exact (EQ_MP (@lem8203581 _144529 _144530 _144607 _144645 _144654 P f q g a) (@lem8203580 _144529 _144530 _144607 _144645 _144654 P q g a f)). Qed.
Lemma lem8203583 {_144529 _144530 _144607 _144645 _144654 P : Type'} (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (e : type564 _144530 _144607 _144645 P) : term1409 _144529 _144530 _144607 _144645 _144654 P f q g a e.
Proof. exact (@lem8203582 _144529 _144530 _144607 _144645 _144654 P f q g a e). Qed.
Lemma lem8203584 {_144529 _144530 _144607 _144645 _144654 P : Type'} (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term1409 _144529 _144530 _144607 _144645 _144654 P f q g a e) = (term1054 _144529 _144530 _144607 _144645 _144654 P e f q g a).
Proof. exact (eq_refl (term1409 _144529 _144530 _144607 _144645 _144654 P f q g a e)). Qed.
Lemma lem8203585 {_144529 _144530 _144607 _144645 _144654 P : Type'} (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : term1054 _144529 _144530 _144607 _144645 _144654 P e f q g a.
Proof. exact (EQ_MP (@lem8203584 _144529 _144530 _144607 _144645 _144654 P e f q g a) (@lem8203583 _144529 _144530 _144607 _144645 _144654 P f q g a e)). Qed.
Lemma lem8203586 {_144529 _144530 _144607 _144645 _144654 P : Type'} (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (pat : type564 _144530 _144607 _144645 P) : term1410 _144529 _144530 _144607 _144645 _144654 P e f q g a pat.
Proof. exact (@lem8203585 _144529 _144530 _144607 _144645 _144654 P e f q g a pat). Qed.
Lemma lem8203587 {_144529 _144530 _144607 _144645 _144654 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term1410 _144529 _144530 _144607 _144645 _144654 P e f q g a pat) = (term1050 _144529 _144530 _144607 _144645 _144654 P pat e f q g a).
Proof. exact (eq_refl (term1410 _144529 _144530 _144607 _144645 _144654 P e f q g a pat)). Qed.
Lemma lem8203588 {_144529 _144530 _144607 _144645 _144654 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : term1050 _144529 _144530 _144607 _144645 _144654 P pat e f q g a.
Proof. exact (EQ_MP (@lem8203587 _144529 _144530 _144607 _144645 _144654 P pat e f q g a) (@lem8203586 _144529 _144530 _144607 _144645 _144654 P e f q g a pat)). Qed.
Lemma lem8203589 {_144529 _144530 _144607 _144645 _144654 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (s : P -> _144529) : term1411 _144529 _144530 _144607 _144645 _144654 P pat e f q g a s.
Proof. exact (@lem8203588 _144529 _144530 _144607 _144645 _144654 P pat e f q g a s). Qed.
Lemma lem8203590 {_144529 _144530 _144607 _144645 _144654 P : Type'} (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term1411 _144529 _144530 _144607 _144645 _144654 P pat e f q g a s) = (term1046 _144529 _144530 _144607 _144645 _144654 P s pat e f q g a).
Proof. exact (eq_refl (term1411 _144529 _144530 _144607 _144645 _144654 P pat e f q g a s)). Qed.
Lemma lem8203591 {_144529 _144530 _144607 _144645 _144654 P : Type'} (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : term1046 _144529 _144530 _144607 _144645 _144654 P s pat e f q g a.
Proof. exact (EQ_MP (@lem8203590 _144529 _144530 _144607 _144645 _144654 P s pat e f q g a) (@lem8203589 _144529 _144530 _144607 _144645 _144654 P pat e f q g a s)). Qed.
Lemma lem8203592 {_144529 _144530 _144607 _144645 _144654 P : Type'} (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (lt2 : type1470 _144529 _144530) : term1412 _144529 _144530 _144607 _144645 _144654 P s pat e f q g a lt2.
Proof. exact (@lem8203591 _144529 _144530 _144607 _144645 _144654 P s pat e f q g a lt2). Qed.
Lemma lem8203593 {_144529 _144530 _144607 _144645 _144654 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term1412 _144529 _144530 _144607 _144645 _144654 P s pat e f q g a lt2) = (term1042 _144529 _144530 _144607 _144645 _144654 P lt2 s pat e f q g a).
Proof. exact (eq_refl (term1412 _144529 _144530 _144607 _144645 _144654 P s pat e f q g a lt2)). Qed.
Lemma lem8203594 {_144529 _144530 _144607 _144645 _144654 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : term1042 _144529 _144530 _144607 _144645 _144654 P lt2 s pat e f q g a.
Proof. exact (EQ_MP (@lem8203593 _144529 _144530 _144607 _144645 _144654 P lt2 s pat e f q g a) (@lem8203592 _144529 _144530 _144607 _144645 _144654 P s pat e f q g a lt2)). Qed.
Lemma lem8203595 {_144529 _144530 _144607 _144645 _144654 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (p : type560 _144530 _144607 P) : term1413 _144529 _144530 _144607 _144645 _144654 P lt2 s pat e f q g a p.
Proof. exact (@lem8203594 _144529 _144530 _144607 _144645 _144654 P lt2 s pat e f q g a p). Qed.
Lemma lem8203596 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term1413 _144529 _144530 _144607 _144645 _144654 P lt2 s pat e f q g a p) = (term1038 _144529 _144530 _144607 _144645 _144654 P p lt2 s pat e f q g a).
Proof. exact (eq_refl (term1413 _144529 _144530 _144607 _144645 _144654 P lt2 s pat e f q g a p)). Qed.
Lemma lem8203597 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : term1038 _144529 _144530 _144607 _144645 _144654 P p lt2 s pat e f q g a.
Proof. exact (EQ_MP (@lem8203596 _144529 _144530 _144607 _144645 _144654 P p lt2 s pat e f q g a) (@lem8203595 _144529 _144530 _144607 _144645 _144654 P lt2 s pat e f q g a p)). Qed.
Lemma lem8203598 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (y : type564 _144530 _144607 _144654 P) : term1414 _144529 _144530 _144607 _144645 _144654 P p lt2 s pat e f q g a y.
Proof. exact (@lem8203597 _144529 _144530 _144607 _144645 _144654 P p lt2 s pat e f q g a y). Qed.
Lemma lem8203599 {_144529 _144530 _144607 _144645 _144654 P : Type'} (y : type564 _144530 _144607 _144654 P) (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term1414 _144529 _144530 _144607 _144645 _144654 P p lt2 s pat e f q g a y) = (term1034 _144529 _144530 _144607 _144645 _144654 P y p lt2 s pat e f q g a).
Proof. exact (eq_refl (term1414 _144529 _144530 _144607 _144645 _144654 P p lt2 s pat e f q g a y)). Qed.
Lemma lem8203600 {_144529 _144530 _144607 _144645 _144654 P : Type'} (y : type564 _144530 _144607 _144654 P) (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : term1034 _144529 _144530 _144607 _144645 _144654 P y p lt2 s pat e f q g a.
Proof. exact (EQ_MP (@lem8203599 _144529 _144530 _144607 _144645 _144654 P y p lt2 s pat e f q g a) (@lem8203598 _144529 _144530 _144607 _144645 _144654 P p lt2 s pat e f q g a y)). Qed.
Lemma lem8203601 {_144529 _144530 _144607 _144645 _144654 P : Type'} (y : type564 _144530 _144607 _144654 P) (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (t : type564 _144530 _144607 _144654 P) : term1415 _144529 _144530 _144607 _144645 _144654 P y p lt2 s pat e f q g a t.
Proof. exact (@lem8203600 _144529 _144530 _144607 _144645 _144654 P y p lt2 s pat e f q g a t). Qed.
Lemma lem8203602 {_144529 _144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term1415 _144529 _144530 _144607 _144645 _144654 P y p lt2 s pat e f q g a t) = (term1007 _144529 _144530 _144607 _144645 _144654 P t y p lt2 s pat e f q g a).
Proof. exact (eq_refl (term1415 _144529 _144530 _144607 _144645 _144654 P y p lt2 s pat e f q g a t)). Qed.
Lemma lem8203603 {_144529 _144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : term1007 _144529 _144530 _144607 _144645 _144654 P t y p lt2 s pat e f q g a.
Proof. exact (EQ_MP (@lem8203602 _144529 _144530 _144607 _144645 _144654 P t y p lt2 s pat e f q g a) (@lem8203601 _144529 _144530 _144607 _144645 _144654 P y p lt2 s pat e f q g a t)). Qed.
Lemma lem8203605 {_144529 _144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : term1007 _144529 _144530 _144607 _144645 _144654 P t y p lt2 s pat e f q g a.
Proof. exact (@lem8193760 _144529 _144530 _144607 _144645 _144654 P t y p lt2 s pat e f q g a (@lem8203603 _144529 _144530 _144607 _144645 _144654 P t y p lt2 s pat e f q g a)). Qed.
Lemma lem8203606 {_144529 _144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (h1 : term141 _144529 _144530 _144607 _144645 P p lt2 s pat) : term1029 _144529 _144530 _144607 _144645 _144654 P t y p lt2 s pat e f q g a.
Proof. exact (@lem8203605 _144529 _144530 _144607 _144645 _144654 P t y p lt2 s pat e f q g a (@lem8185836 _144529 _144530 _144607 _144645 P p lt2 s pat h1)). Qed.
Lemma lem8203607 {_144529 _144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (h1 : term141 _144529 _144530 _144607 _144645 P p lt2 s e) (h2 : term141 _144529 _144530 _144607 _144645 P p lt2 s pat) : term1027 _144529 _144530 _144607 _144645 _144654 P t y p lt2 s pat e f q g a.
Proof. exact (@lem8203606 _144529 _144530 _144607 _144645 _144654 P t y e f q g a p lt2 s pat h2 (@lem8185838 _144529 _144530 _144607 _144645 P p lt2 s e h1)). Qed.
Lemma lem8203608 {_144529 _144530 _144607 _144645 _144654 P : Type'} (y : type564 _144530 _144607 _144654 P) (f : _144530 -> _144607) (g : _144530 -> _144607) (a : P) (q : type560 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (h1 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) (h2 : term141 _144529 _144530 _144607 _144645 P p lt2 s e) (h3 : term141 _144529 _144530 _144607 _144645 P p lt2 s pat) : term1025 _144529 _144530 _144607 _144645 _144654 P y p lt2 s pat e f q g a.
Proof. exact (@lem8203607 _144529 _144530 _144607 _144645 _144654 P t y f q g a e p lt2 s pat h2 h3 (@lem8185840 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t h1)). Qed.
Lemma lem8203609 {_144529 _144530 _144607 _144645 _144654 P : Type'} (y : type564 _144530 _144607 _144654 P) (f : _144530 -> _144607) (g : _144530 -> _144607) (a : P) (t : type564 _144530 _144607 _144654 P) (q : type560 _144530 _144607 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (h1 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) (h2 : term224 _144529 _144530 _144607 _144645 P p pat e lt2 s q) (h3 : term141 _144529 _144530 _144607 _144645 P p lt2 s e) (h4 : term141 _144529 _144530 _144607 _144645 P p lt2 s pat) : term1023 _144529 _144530 _144607 _144645 _144654 P y p lt2 s pat e f q g a.
Proof. exact (@lem8203608 _144529 _144530 _144607 _144645 _144654 P y f g a q t e p lt2 s pat h1 h3 h4 (@lem8185842 _144529 _144530 _144607 _144645 P p pat e lt2 s q h2)). Qed.
Lemma lem8203610 {_144529 _144530 _144607 _144645 _144654 P : Type'} (f : _144530 -> _144607) (g : _144530 -> _144607) (a : P) (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (q : type560 _144530 _144607 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (h1 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) (h2 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y) (h3 : term224 _144529 _144530 _144607 _144645 P p pat e lt2 s q) (h4 : term141 _144529 _144530 _144607 _144645 P p lt2 s e) (h5 : term141 _144529 _144530 _144607 _144645 P p lt2 s pat) : term1021 _144529 _144530 _144607 _144645 P p lt2 s pat e f q g a.
Proof. exact (@lem8203609 _144529 _144530 _144607 _144645 _144654 P y f g a t q e p lt2 s pat h1 h3 h4 h5 (@lem8185841 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y h2)). Qed.
Lemma lem8203611 {_144529 _144530 _144607 _144645 _144654 P : Type'} (g : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (q : type560 _144530 _144607 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) (h1 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) (h2 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y) (h3 : term224 _144529 _144530 _144607 _144645 P p pat e lt2 s q) (h4 : term141 _144529 _144530 _144607 _144645 P p lt2 s e) (h5 : term141 _144529 _144530 _144607 _144645 P p lt2 s pat) (h6 : p f a) : term1019 _144529 _144530 _144607 _144645 P p lt2 s pat e f q g a.
Proof. exact (@lem8203610 _144529 _144530 _144607 _144645 _144654 P f g a t y q e p lt2 s pat h1 h2 h3 h4 h5 (@lem8185845 _144530 _144607 P p f a h6)). Qed.
Lemma lem8203612 {_144529 _144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (q : type560 _144530 _144607 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) (h2 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y) (h3 : term224 _144529 _144530 _144607 _144645 P p pat e lt2 s q) (h4 : term141 _144529 _144530 _144607 _144645 P p lt2 s e) (h5 : term141 _144529 _144530 _144607 _144645 P p lt2 s pat) (h6 : p f a) (h7 : p g a) : term1017 _144529 _144530 _144607 _144645 P lt2 s pat e f q g a.
Proof. exact (@lem8203611 _144529 _144530 _144607 _144645 _144654 P g t y q e lt2 s pat p f a h1 h2 h3 h4 h5 h6 (@lem8185847 _144530 _144607 P p g a h7)). Qed.
Lemma lem8203613 {_144529 _144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (q : type560 _144530 _144607 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) (h2 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) (h3 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y) (h4 : term224 _144529 _144530 _144607 _144645 P p pat e lt2 s q) (h5 : term141 _144529 _144530 _144607 _144645 P p lt2 s e) (h6 : term141 _144529 _144530 _144607 _144645 P p lt2 s pat) (h7 : p f a) (h8 : p g a) : term1015 _144530 _144607 _144645 P pat e f q g a.
Proof. exact (@lem8203612 _144529 _144530 _144607 _144645 _144654 P t y q e lt2 s pat f p g a h2 h3 h4 h5 h6 h7 h8 (@lem8185846 _144529 _144530 _144607 P lt2 s a f g h1)). Qed.
Lemma lem8203614 {_144529 _144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) (h2 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) (h3 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y) (h4 : term224 _144529 _144530 _144607 _144645 P p pat e lt2 s q) (h5 : term141 _144529 _144530 _144607 _144645 P p lt2 s e) (h6 : term141 _144529 _144530 _144607 _144645 P p lt2 s pat) (h7 : (pat f a) = (e f a)) (h8 : p f a) (h9 : p g a) : term1013 _144530 _144607 _144645 P pat e f q g a.
Proof. exact (@lem8203613 _144529 _144530 _144607 _144645 _144654 P t y q e lt2 s pat f p g a h1 h2 h3 h4 h5 h6 h8 h9 (@lem8185853 _144530 _144607 _144645 P pat e f a h7)). Qed.
Lemma lem8203615 {_144529 _144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) (h2 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) (h3 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y) (h4 : term224 _144529 _144530 _144607 _144645 P p pat e lt2 s q) (h5 : term141 _144529 _144530 _144607 _144645 P p lt2 s e) (h6 : term141 _144529 _144530 _144607 _144645 P p lt2 s pat) (h7 : (pat f a) = (e f a)) (h8 : (pat g a) = (e g a)) (h9 : p f a) (h10 : p g a) : term1005 _144530 _144607 P f q g a.
Proof. exact (@lem8203614 _144529 _144530 _144607 _144645 _144654 P t y q lt2 s pat e f p g a h1 h2 h3 h4 h5 h6 h7 h9 h10 (@lem8185852 _144530 _144607 _144645 P pat e g a h8)). Qed.
Lemma lem8203616 {_144529 _144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (q : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) (h2 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) (h3 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y) (h4 : term224 _144529 _144530 _144607 _144645 P p pat e lt2 s q) (h5 : term141 _144529 _144530 _144607 _144645 P p lt2 s e) (h6 : term141 _144529 _144530 _144607 _144645 P p lt2 s pat) (h7 : term1006 _144530 _144607 P f q g a) (h8 : (pat f a) = (e f a)) (h9 : (pat g a) = (e g a)) (h10 : p f a) (h11 : p g a) : False.
Proof. exact (@lem8203615 _144529 _144530 _144607 _144645 _144654 P t y q lt2 s pat e f p g a h1 h2 h3 h4 h5 h6 h8 h9 h10 h11 (@lem8193744 _144530 _144607 P f q g a h7)). Qed.
Lemma lem8203617 {_144529 _144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (q : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) (h2 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) (h3 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y) (h4 : term224 _144529 _144530 _144607 _144645 P p pat e lt2 s q) (h5 : term141 _144529 _144530 _144607 _144645 P p lt2 s e) (h6 : term141 _144529 _144530 _144607 _144645 P p lt2 s pat) (h7 : term1006 _144530 _144607 P f q g a) (h8 : (pat f a) = (e f a)) (h9 : (pat g a) = (e g a)) (h10 : p f a) (h11 : p g a) : (term1006 _144530 _144607 P f q g a) = False.
Proof. exact (prop_ext (fun h12 : term1006 _144530 _144607 P f q g a => @lem8203616 _144529 _144530 _144607 _144645 _144654 P t y lt2 s q pat e f p g a h1 h2 h3 h4 h5 h6 h7 h8 h9 h10 h11) (fun h12 : False => @lem8193744 _144530 _144607 P f q g a h7)). Qed.
Lemma lem8203618 {_144529 _144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (q : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) (h2 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) (h3 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y) (h4 : term224 _144529 _144530 _144607 _144645 P p pat e lt2 s q) (h5 : term141 _144529 _144530 _144607 _144645 P p lt2 s e) (h6 : term141 _144529 _144530 _144607 _144645 P p lt2 s pat) (h7 : term1006 _144530 _144607 P f q g a) (h8 : (pat f a) = (e f a)) (h9 : (pat g a) = (e g a)) (h10 : p f a) (h11 : p g a) : False.
Proof. exact (EQ_MP (@lem8203617 _144529 _144530 _144607 _144645 _144654 P t y lt2 s q pat e f p g a h1 h2 h3 h4 h5 h6 h7 h8 h9 h10 h11) (@lem8193744 _144530 _144607 P f q g a h7)). Qed.
Lemma lem8203619 {_144529 _144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) (h2 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) (h3 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y) (h4 : term224 _144529 _144530 _144607 _144645 P p pat e lt2 s q) (h5 : term141 _144529 _144530 _144607 _144645 P p lt2 s e) (h6 : term141 _144529 _144530 _144607 _144645 P p lt2 s pat) (h7 : (pat f a) = (e f a)) (h8 : (pat g a) = (e g a)) (h9 : p f a) (h10 : p g a) : term1005 _144530 _144607 P f q g a.
Proof. exact (fun h0 : term1006 _144530 _144607 P f q g a => @lem8203618 _144529 _144530 _144607 _144645 _144654 P t y lt2 s q pat e f p g a h1 h2 h3 h4 h5 h6 h0 h7 h8 h9 h10). Qed.
Lemma lem8203620 {_144529 _144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) (h2 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) (h3 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y) (h4 : term224 _144529 _144530 _144607 _144645 P p pat e lt2 s q) (h5 : term141 _144529 _144530 _144607 _144645 P p lt2 s e) (h6 : term141 _144529 _144530 _144607 _144645 P p lt2 s pat) (h7 : (pat f a) = (e f a)) (h8 : (pat g a) = (e g a)) (h9 : p f a) (h10 : p g a) : (q f a) = (q g a).
Proof. exact (EQ_MP (@lem8193743 _144530 _144607 P f q g a) (@lem8203619 _144529 _144530 _144607 _144645 _144654 P t y q lt2 s pat e f p g a h1 h2 h3 h4 h5 h6 h7 h8 h9 h10)). Qed.
Lemma lem8203622 (p : Prop) : p = (term7 p).
Proof. exact (EQ_MP (@lem10578 p) (@lem10597 p)). Qed.
Lemma lem8203623 {_144530 _144607 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (term324 _144530 _144607 _144654 P t f y g a) = (term325 _144530 _144607 _144654 P t f y g a).
Proof. exact (@lem8203622 (term324 _144530 _144607 _144654 P t f y g a)). Qed.
Lemma lem8203624 {_144530 _144607 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (term325 _144530 _144607 _144654 P t f y g a) = (term324 _144530 _144607 _144654 P t f y g a).
Proof. exact (SYM (@lem8203623 _144530 _144607 _144654 P t f y g a)). Qed.
Lemma lem8203625 {_144530 _144607 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) (h1 : term326 _144530 _144607 _144654 P t f y g a) : term326 _144530 _144607 _144654 P t f y g a.
Proof. exact (h1). Qed.
Lemma lem8203628 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) (h1 : term1416 _144529 _144530 _144607 _144645 _144654 P p lt2 s pat e q t f y g a) : term1416 _144529 _144530 _144607 _144645 _144654 P p lt2 s pat e q t f y g a.
Proof. exact (h1). Qed.
Lemma lem8203629 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : term1417 _144529 _144530 _144607 _144645 _144654 P p lt2 s pat e q t f y g a.
Proof. exact (fun h0 : term1416 _144529 _144530 _144607 _144645 _144654 P p lt2 s pat e q t f y g a => @lem8203628 _144529 _144530 _144607 _144645 _144654 P p lt2 s pat e q t f y g a h0). Qed.
Lemma lem8203630 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) (h1 : term1417 _144529 _144530 _144607 _144645 _144654 P p lt2 s pat e q t f y g a) : term1417 _144529 _144530 _144607 _144645 _144654 P p lt2 s pat e q t f y g a.
Proof. exact (h1). Qed.
Lemma lem8203631 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) (h1 : term1416 _144529 _144530 _144607 _144645 _144654 P p lt2 s pat e q t f y g a) : term1416 _144529 _144530 _144607 _144645 _144654 P p lt2 s pat e q t f y g a.
Proof. exact (h1). Qed.
Lemma lem8203632 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) (h1 : term1416 _144529 _144530 _144607 _144645 _144654 P p lt2 s pat e q t f y g a) (h2 : term1417 _144529 _144530 _144607 _144645 _144654 P p lt2 s pat e q t f y g a) : term1416 _144529 _144530 _144607 _144645 _144654 P p lt2 s pat e q t f y g a.
Proof. exact (@lem8203630 _144529 _144530 _144607 _144645 _144654 P p lt2 s pat e q t f y g a h2 (@lem8203631 _144529 _144530 _144607 _144645 _144654 P p lt2 s pat e q t f y g a h1)). Qed.
Lemma lem8203633 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) (h1 : term1416 _144529 _144530 _144607 _144645 _144654 P p lt2 s pat e q t f y g a) : term1418 _144529 _144530 _144607 _144645 _144654 P p lt2 s pat e q t f y g a.
Proof. exact (fun h0 : term1417 _144529 _144530 _144607 _144645 _144654 P p lt2 s pat e q t f y g a => @lem8203632 _144529 _144530 _144607 _144645 _144654 P p lt2 s pat e q t f y g a h1 h0). Qed.
Lemma lem8203634 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) (h1 : term1417 _144529 _144530 _144607 _144645 _144654 P p lt2 s pat e q t f y g a) : term1417 _144529 _144530 _144607 _144645 _144654 P p lt2 s pat e q t f y g a.
Proof. exact (h1). Qed.
Lemma lem8203635 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) (h1 : term1416 _144529 _144530 _144607 _144645 _144654 P p lt2 s pat e q t f y g a) (h2 : term1417 _144529 _144530 _144607 _144645 _144654 P p lt2 s pat e q t f y g a) : term1416 _144529 _144530 _144607 _144645 _144654 P p lt2 s pat e q t f y g a.
Proof. exact (@lem8203633 _144529 _144530 _144607 _144645 _144654 P p lt2 s pat e q t f y g a h1 (@lem8203634 _144529 _144530 _144607 _144645 _144654 P p lt2 s pat e q t f y g a h2)). Qed.
Lemma lem8203636 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) (h1 : term1417 _144529 _144530 _144607 _144645 _144654 P p lt2 s pat e q t f y g a) : term1417 _144529 _144530 _144607 _144645 _144654 P p lt2 s pat e q t f y g a.
Proof. exact (fun h0 : term1416 _144529 _144530 _144607 _144645 _144654 P p lt2 s pat e q t f y g a => @lem8203635 _144529 _144530 _144607 _144645 _144654 P p lt2 s pat e q t f y g a h0 h1). Qed.
Lemma lem8203637 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : term1419 _144529 _144530 _144607 _144645 _144654 P p lt2 s pat e q t f y g a.
Proof. exact (fun h0 : term1417 _144529 _144530 _144607 _144645 _144654 P p lt2 s pat e q t f y g a => @lem8203636 _144529 _144530 _144607 _144645 _144654 P p lt2 s pat e q t f y g a h0). Qed.
Lemma lem8203640 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : term1417 _144529 _144530 _144607 _144645 _144654 P p lt2 s pat e q t f y g a.
Proof. exact (@lem8203637 _144529 _144530 _144607 _144645 _144654 P p lt2 s pat e q t f y g a (@lem8203629 _144529 _144530 _144607 _144645 _144654 P p lt2 s pat e q t f y g a)). Qed.
Lemma lem8203641 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : term1417 _144529 _144530 _144607 _144645 _144654 P p lt2 s pat e q t f y g a.
Proof. exact (@lem8203640 _144529 _144530 _144607 _144645 _144654 P p lt2 s pat e q t f y g a). Qed.
Lemma lem8203857 (t : Prop) : (t -> False) = (~ t).
Proof. exact (proj2 (@lem16474 t)). Qed.
Lemma lem8203858 {_144530 _144607 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (term325 _144530 _144607 _144654 P t f y g a) = (term331 _144530 _144607 _144654 P t f y g a).
Proof. exact (@lem8203857 (term326 _144530 _144607 _144654 P t f y g a)). Qed.
Lemma lem8203860 (t : Prop) : (term15 t) = t.
Proof. exact (EQ_MP (@lem16507 t) (@lem16506 t)). Qed.
Lemma lem8203861 {_144530 _144607 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (term331 _144530 _144607 _144654 P t f y g a) = (term324 _144530 _144607 _144654 P t f y g a).
Proof. exact (@lem8203860 (term324 _144530 _144607 _144654 P t f y g a)). Qed.
Lemma lem8203864 {_144530 _144607 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (term325 _144530 _144607 _144654 P t f y g a) = (term324 _144530 _144607 _144654 P t f y g a).
Proof. exact (TRANS (@lem8203858 _144530 _144607 _144654 P t f y g a) (@lem8203861 _144530 _144607 _144654 P t f y g a)). Qed.
Lemma lem8203865 {_144530 _144607 P : Type'} (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term335 _144530 _144607 P q g a) = (term335 _144530 _144607 P q g a).
Proof. exact (eq_refl (term335 _144530 _144607 P q g a)). Qed.
Lemma lem8203866 {_144530 _144607 _144654 P : Type'} (q : type560 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (term1420 _144530 _144607 _144654 P q t f y g a) = (term1421 _144530 _144607 _144654 P q t f y g a).
Proof. exact (MK_COMB (@lem8203865 _144530 _144607 P q g a) (@lem8203864 _144530 _144607 _144654 P t f y g a)). Qed.
Lemma lem8203869 {_144530 _144607 P : Type'} (q : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) : (term335 _144530 _144607 P q f a) = (term335 _144530 _144607 P q f a).
Proof. exact (eq_refl (term335 _144530 _144607 P q f a)). Qed.
Lemma lem8203870 {_144530 _144607 _144654 P : Type'} (q : type560 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (term1422 _144530 _144607 _144654 P q t f y g a) = (term1423 _144530 _144607 _144654 P q t f y g a).
Proof. exact (MK_COMB (@lem8203869 _144530 _144607 P q f a) (@lem8203866 _144530 _144607 _144654 P q t f y g a)). Qed.
Lemma lem8203873 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term1012 _144530 _144607 _144645 P pat e g a) = (term1012 _144530 _144607 _144645 P pat e g a).
Proof. exact (eq_refl (term1012 _144530 _144607 _144645 P pat e g a)). Qed.
Lemma lem8203874 {_144530 _144607 _144645 _144654 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (term1424 _144530 _144607 _144645 _144654 P pat e q t f y g a) = (term1425 _144530 _144607 _144645 _144654 P pat e q t f y g a).
Proof. exact (MK_COMB (@lem8203873 _144530 _144607 _144645 P pat e g a) (@lem8203870 _144530 _144607 _144654 P q t f y g a)). Qed.
Lemma lem8203877 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (a : P) : (term1012 _144530 _144607 _144645 P pat e f a) = (term1012 _144530 _144607 _144645 P pat e f a).
Proof. exact (eq_refl (term1012 _144530 _144607 _144645 P pat e f a)). Qed.
Lemma lem8203878 {_144530 _144607 _144645 _144654 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (term1426 _144530 _144607 _144645 _144654 P pat e q t f y g a) = (term1427 _144530 _144607 _144645 _144654 P pat e q t f y g a).
Proof. exact (MK_COMB (@lem8203877 _144530 _144607 _144645 P pat e f a) (@lem8203874 _144530 _144607 _144645 _144654 P pat e q t f y g a)). Qed.
Lemma lem8203881 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term332 _144529 _144530 _144607 P lt2 s a f g) = (term332 _144529 _144530 _144607 P lt2 s a f g).
Proof. exact (eq_refl (term332 _144529 _144530 _144607 P lt2 s a f g)). Qed.
Lemma lem8203882 {_144529 _144530 _144607 _144645 _144654 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (term1428 _144529 _144530 _144607 _144645 _144654 P lt2 s pat e q t f y g a) = (term1429 _144529 _144530 _144607 _144645 _144654 P lt2 s pat e q t f y g a).
Proof. exact (MK_COMB (@lem8203881 _144529 _144530 _144607 P lt2 s a f g) (@lem8203878 _144530 _144607 _144645 _144654 P pat e q t f y g a)). Qed.
Lemma lem8203885 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term335 _144530 _144607 P p g a) = (term335 _144530 _144607 P p g a).
Proof. exact (eq_refl (term335 _144530 _144607 P p g a)). Qed.
Lemma lem8203886 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (term1430 _144529 _144530 _144607 _144645 _144654 P p lt2 s pat e q t f y g a) = (term1431 _144529 _144530 _144607 _144645 _144654 P p lt2 s pat e q t f y g a).
Proof. exact (MK_COMB (@lem8203885 _144530 _144607 P p g a) (@lem8203882 _144529 _144530 _144607 _144645 _144654 P lt2 s pat e q t f y g a)). Qed.
Lemma lem8203889 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) : (term335 _144530 _144607 P p f a) = (term335 _144530 _144607 P p f a).
Proof. exact (eq_refl (term335 _144530 _144607 P p f a)). Qed.
Lemma lem8203890 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (term1432 _144529 _144530 _144607 _144645 _144654 P p lt2 s pat e q t f y g a) = (term1433 _144529 _144530 _144607 _144645 _144654 P p lt2 s pat e q t f y g a).
Proof. exact (MK_COMB (@lem8203889 _144530 _144607 P p f a) (@lem8203886 _144529 _144530 _144607 _144645 _144654 P p lt2 s pat e q t f y g a)). Qed.
Lemma lem8203893 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (y : type564 _144530 _144607 _144654 P) : (term340 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y) = (term340 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y).
Proof. exact (eq_refl (term340 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y)). Qed.
Lemma lem8203894 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (term1434 _144529 _144530 _144607 _144645 _144654 P p lt2 s pat e q t f y g a) = (term1435 _144529 _144530 _144607 _144645 _144654 P p lt2 s pat e q t f y g a).
Proof. exact (MK_COMB (@lem8203893 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y) (@lem8203890 _144529 _144530 _144607 _144645 _144654 P p lt2 s pat e q t f y g a)). Qed.
Lemma lem8203897 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (q : type560 _144530 _144607 P) : (term343 _144529 _144530 _144607 _144645 P p pat e lt2 s q) = (term343 _144529 _144530 _144607 _144645 P p pat e lt2 s q).
Proof. exact (eq_refl (term343 _144529 _144530 _144607 _144645 P p pat e lt2 s q)). Qed.
Lemma lem8203898 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (term1436 _144529 _144530 _144607 _144645 _144654 P p lt2 s pat e q t f y g a) = (term1437 _144529 _144530 _144607 _144645 _144654 P p lt2 s pat e q t f y g a).
Proof. exact (MK_COMB (@lem8203897 _144529 _144530 _144607 _144645 P p pat e lt2 s q) (@lem8203894 _144529 _144530 _144607 _144645 _144654 P p lt2 s pat e q t f y g a)). Qed.
Lemma lem8203901 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (t : type564 _144530 _144607 _144654 P) : (term340 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) = (term340 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t).
Proof. exact (eq_refl (term340 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t)). Qed.
Lemma lem8203902 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (term1438 _144529 _144530 _144607 _144645 _144654 P p lt2 s pat e q t f y g a) = (term1439 _144529 _144530 _144607 _144645 _144654 P p lt2 s pat e q t f y g a).
Proof. exact (MK_COMB (@lem8203901 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) (@lem8203898 _144529 _144530 _144607 _144645 _144654 P p lt2 s pat e q t f y g a)). Qed.
Lemma lem8203905 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (e : type564 _144530 _144607 _144645 P) : (term348 _144529 _144530 _144607 _144645 P p lt2 s e) = (term348 _144529 _144530 _144607 _144645 P p lt2 s e).
Proof. exact (eq_refl (term348 _144529 _144530 _144607 _144645 P p lt2 s e)). Qed.
Lemma lem8203906 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (term1440 _144529 _144530 _144607 _144645 _144654 P p lt2 s pat e q t f y g a) = (term1441 _144529 _144530 _144607 _144645 _144654 P p lt2 s pat e q t f y g a).
Proof. exact (MK_COMB (@lem8203905 _144529 _144530 _144607 _144645 P p lt2 s e) (@lem8203902 _144529 _144530 _144607 _144645 _144654 P p lt2 s pat e q t f y g a)). Qed.
Lemma lem8203909 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) : (term348 _144529 _144530 _144607 _144645 P p lt2 s pat) = (term348 _144529 _144530 _144607 _144645 P p lt2 s pat).
Proof. exact (eq_refl (term348 _144529 _144530 _144607 _144645 P p lt2 s pat)). Qed.
Lemma lem8203910 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (term1416 _144529 _144530 _144607 _144645 _144654 P p lt2 s pat e q t f y g a) = (term1442 _144529 _144530 _144607 _144645 _144654 P p lt2 s pat e q t f y g a).
Proof. exact (MK_COMB (@lem8203909 _144529 _144530 _144607 _144645 P p lt2 s pat) (@lem8203906 _144529 _144530 _144607 _144645 _144654 P p lt2 s pat e q t f y g a)). Qed.
Lemma lem8203913 {_144529 _144530 _144607 _144645 _144654 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (term1443 _144529 _144530 _144607 _144645 _144654 P lt2 s pat e q t f y g a) = (term1444 _144529 _144530 _144607 _144645 _144654 P lt2 s pat e q t f y g a).
Proof. exact (fun_ext (fun p : type560 _144530 _144607 P => @lem8203910 _144529 _144530 _144607 _144645 _144654 P p lt2 s pat e q t f y g a)). Qed.
Lemma lem8203914 {_144530 _144607 P : Type'} : (@all ((_144530 -> _144607) -> P -> Prop)) = (@all ((_144530 -> _144607) -> P -> Prop)).
Proof. exact (eq_refl (@all ((_144530 -> _144607) -> P -> Prop))). Qed.
Lemma lem8203915 {_144529 _144530 _144607 _144645 _144654 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (term1445 _144529 _144530 _144607 _144645 _144654 P lt2 s pat e q t f y g a) = (term1446 _144529 _144530 _144607 _144645 _144654 P lt2 s pat e q t f y g a).
Proof. exact (MK_COMB (@lem8203914 _144530 _144607 P) (@lem8203913 _144529 _144530 _144607 _144645 _144654 P lt2 s pat e q t f y g a)). Qed.
Lemma lem8203920 {_144529 _144530 _144607 _144645 _144654 P : Type'} (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (term1447 _144529 _144530 _144607 _144645 _144654 P s pat e q t f y g a) = (term1448 _144529 _144530 _144607 _144645 _144654 P s pat e q t f y g a).
Proof. exact (fun_ext (fun lt2 : type1470 _144529 _144530 => @lem8203915 _144529 _144530 _144607 _144645 _144654 P lt2 s pat e q t f y g a)). Qed.
Lemma lem8203921 {_144529 _144530 : Type'} : (@all (_144530 -> _144529 -> Prop)) = (@all (_144530 -> _144529 -> Prop)).
Proof. exact (eq_refl (@all (_144530 -> _144529 -> Prop))). Qed.
Lemma lem8203922 {_144529 _144530 _144607 _144645 _144654 P : Type'} (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (term1449 _144529 _144530 _144607 _144645 _144654 P s pat e q t f y g a) = (term1450 _144529 _144530 _144607 _144645 _144654 P s pat e q t f y g a).
Proof. exact (MK_COMB (@lem8203921 _144529 _144530) (@lem8203920 _144529 _144530 _144607 _144645 _144654 P s pat e q t f y g a)). Qed.
Lemma lem8203927 {_144529 _144530 _144607 _144645 _144654 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (term1451 _144529 _144530 _144607 _144645 _144654 P pat e q t f y g a) = (term1452 _144529 _144530 _144607 _144645 _144654 P pat e q t f y g a).
Proof. exact (fun_ext (fun s : P -> _144529 => @lem8203922 _144529 _144530 _144607 _144645 _144654 P s pat e q t f y g a)). Qed.
Lemma lem8203928 {_144529 P : Type'} : (@all (P -> _144529)) = (@all (P -> _144529)).
Proof. exact (eq_refl (@all (P -> _144529))). Qed.
Lemma lem8203929 {_144529 _144530 _144607 _144645 _144654 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (term1453 _144529 _144530 _144607 _144645 _144654 P pat e q t f y g a) = (term1454 _144529 _144530 _144607 _144645 _144654 P pat e q t f y g a).
Proof. exact (MK_COMB (@lem8203928 _144529 P) (@lem8203927 _144529 _144530 _144607 _144645 _144654 P pat e q t f y g a)). Qed.
Lemma lem8203934 {_144529 _144530 _144607 _144645 _144654 P : Type'} (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (term1455 _144529 _144530 _144607 _144645 _144654 P e q t f y g a) = (term1456 _144529 _144530 _144607 _144645 _144654 P e q t f y g a).
Proof. exact (fun_ext (fun pat : type564 _144530 _144607 _144645 P => @lem8203929 _144529 _144530 _144607 _144645 _144654 P pat e q t f y g a)). Qed.
Lemma lem8203935 {_144530 _144607 _144645 P : Type'} : (@all ((_144530 -> _144607) -> P -> _144645)) = (@all ((_144530 -> _144607) -> P -> _144645)).
Proof. exact (eq_refl (@all ((_144530 -> _144607) -> P -> _144645))). Qed.
Lemma lem8203936 {_144529 _144530 _144607 _144645 _144654 P : Type'} (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (term1457 _144529 _144530 _144607 _144645 _144654 P e q t f y g a) = (term1458 _144529 _144530 _144607 _144645 _144654 P e q t f y g a).
Proof. exact (MK_COMB (@lem8203935 _144530 _144607 _144645 P) (@lem8203934 _144529 _144530 _144607 _144645 _144654 P e q t f y g a)). Qed.
Lemma lem8203941 {_144529 _144530 _144607 _144645 _144654 P : Type'} (q : type560 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (term1459 _144529 _144530 _144607 _144645 _144654 P q t f y g a) = (term1460 _144529 _144530 _144607 _144645 _144654 P q t f y g a).
Proof. exact (fun_ext (fun e : type564 _144530 _144607 _144645 P => @lem8203936 _144529 _144530 _144607 _144645 _144654 P e q t f y g a)). Qed.
Lemma lem8203942 {_144530 _144607 _144645 P : Type'} : (@all ((_144530 -> _144607) -> P -> _144645)) = (@all ((_144530 -> _144607) -> P -> _144645)).
Proof. exact (eq_refl (@all ((_144530 -> _144607) -> P -> _144645))). Qed.
Lemma lem8203943 {_144529 _144530 _144607 _144645 _144654 P : Type'} (q : type560 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (term1461 _144529 _144530 _144607 _144645 _144654 P q t f y g a) = (term1462 _144529 _144530 _144607 _144645 _144654 P q t f y g a).
Proof. exact (MK_COMB (@lem8203942 _144530 _144607 _144645 P) (@lem8203941 _144529 _144530 _144607 _144645 _144654 P q t f y g a)). Qed.
Lemma lem8203948 {_144529 _144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (term1463 _144529 _144530 _144607 _144645 _144654 P t f y g a) = (term1464 _144529 _144530 _144607 _144645 _144654 P t f y g a).
Proof. exact (fun_ext (fun q : type560 _144530 _144607 P => @lem8203943 _144529 _144530 _144607 _144645 _144654 P q t f y g a)). Qed.
Lemma lem8203949 {_144530 _144607 P : Type'} : (@all ((_144530 -> _144607) -> P -> Prop)) = (@all ((_144530 -> _144607) -> P -> Prop)).
Proof. exact (eq_refl (@all ((_144530 -> _144607) -> P -> Prop))). Qed.
Lemma lem8203950 {_144529 _144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (term1465 _144529 _144530 _144607 _144645 _144654 P t f y g a) = (term1466 _144529 _144530 _144607 _144645 _144654 P t f y g a).
Proof. exact (MK_COMB (@lem8203949 _144530 _144607 P) (@lem8203948 _144529 _144530 _144607 _144645 _144654 P t f y g a)). Qed.
Lemma lem8203955 {_144529 _144530 _144607 _144645 _144654 P : Type'} (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (term1467 _144529 _144530 _144607 _144645 _144654 P f y g a) = (term1468 _144529 _144530 _144607 _144645 _144654 P f y g a).
Proof. exact (fun_ext (fun t : type564 _144530 _144607 _144654 P => @lem8203950 _144529 _144530 _144607 _144645 _144654 P t f y g a)). Qed.
Lemma lem8203956 {_144530 _144607 _144654 P : Type'} : (@all ((_144530 -> _144607) -> P -> _144654)) = (@all ((_144530 -> _144607) -> P -> _144654)).
Proof. exact (eq_refl (@all ((_144530 -> _144607) -> P -> _144654))). Qed.
Lemma lem8203957 {_144529 _144530 _144607 _144645 _144654 P : Type'} (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (term1469 _144529 _144530 _144607 _144645 _144654 P f y g a) = (term1470 _144529 _144530 _144607 _144645 _144654 P f y g a).
Proof. exact (MK_COMB (@lem8203956 _144530 _144607 _144654 P) (@lem8203955 _144529 _144530 _144607 _144645 _144654 P f y g a)). Qed.
Lemma lem8203962 {_144529 _144530 _144607 _144645 _144654 P : Type'} (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (term1471 _144529 _144530 _144607 _144645 _144654 P y g a) = (term1472 _144529 _144530 _144607 _144645 _144654 P y g a).
Proof. exact (fun_ext (fun f : _144530 -> _144607 => @lem8203957 _144529 _144530 _144607 _144645 _144654 P f y g a)). Qed.
Lemma lem8203963 {_144530 _144607 : Type'} : (@all (_144530 -> _144607)) = (@all (_144530 -> _144607)).
Proof. exact (eq_refl (@all (_144530 -> _144607))). Qed.
Lemma lem8203964 {_144529 _144530 _144607 _144645 _144654 P : Type'} (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (term1473 _144529 _144530 _144607 _144645 _144654 P y g a) = (term1474 _144529 _144530 _144607 _144645 _144654 P y g a).
Proof. exact (MK_COMB (@lem8203963 _144530 _144607) (@lem8203962 _144529 _144530 _144607 _144645 _144654 P y g a)). Qed.
Lemma lem8203969 {_144529 _144530 _144607 _144645 _144654 P : Type'} (g : _144530 -> _144607) (a : P) : (term1475 _144529 _144530 _144607 _144645 _144654 P g a) = (term1476 _144529 _144530 _144607 _144645 _144654 P g a).
Proof. exact (fun_ext (fun y : type564 _144530 _144607 _144654 P => @lem8203964 _144529 _144530 _144607 _144645 _144654 P y g a)). Qed.
Lemma lem8203970 {_144530 _144607 _144654 P : Type'} : (@all ((_144530 -> _144607) -> P -> _144654)) = (@all ((_144530 -> _144607) -> P -> _144654)).
Proof. exact (eq_refl (@all ((_144530 -> _144607) -> P -> _144654))). Qed.
Lemma lem8203971 {_144529 _144530 _144607 _144645 _144654 P : Type'} (g : _144530 -> _144607) (a : P) : (term1477 _144529 _144530 _144607 _144645 _144654 P g a) = (term1478 _144529 _144530 _144607 _144645 _144654 P g a).
Proof. exact (MK_COMB (@lem8203970 _144530 _144607 _144654 P) (@lem8203969 _144529 _144530 _144607 _144645 _144654 P g a)). Qed.
Lemma lem8203976 {_144529 _144530 _144607 _144645 _144654 P : Type'} (a : P) : (term1479 _144529 _144530 _144607 _144645 _144654 P a) = (term1480 _144529 _144530 _144607 _144645 _144654 P a).
Proof. exact (fun_ext (fun g : _144530 -> _144607 => @lem8203971 _144529 _144530 _144607 _144645 _144654 P g a)). Qed.
Lemma lem8203977 {_144530 _144607 : Type'} : (@all (_144530 -> _144607)) = (@all (_144530 -> _144607)).
Proof. exact (eq_refl (@all (_144530 -> _144607))). Qed.
Lemma lem8203978 {_144529 _144530 _144607 _144645 _144654 P : Type'} (a : P) : (term1481 _144529 _144530 _144607 _144645 _144654 P a) = (term1482 _144529 _144530 _144607 _144645 _144654 P a).
Proof. exact (MK_COMB (@lem8203977 _144530 _144607) (@lem8203976 _144529 _144530 _144607 _144645 _144654 P a)). Qed.
Lemma lem8203983 {_144529 _144530 _144607 _144645 _144654 P : Type'} : (term1483 _144529 _144530 _144607 _144645 _144654 P) = (term1484 _144529 _144530 _144607 _144645 _144654 P).
Proof. exact (fun_ext (fun a : P => @lem8203978 _144529 _144530 _144607 _144645 _144654 P a)). Qed.
Lemma lem8203984 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8203993 {_144529 _144530 _144607 _144645 _144654 P : Type'} : (term1485 _144529 _144530 _144607 _144645 _144654 P) = (term1486 _144529 _144530 _144607 _144645 _144654 P).
Proof. exact (MK_COMB (@lem8203984 P) (@lem8203983 _144529 _144530 _144607 _144645 _144654 P)). Qed.
Lemma lem8204014 {_144530 _144607 _144645 _144654 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (term1427 _144530 _144607 _144645 _144654 P pat e q t f y g a) = (term1427 _144530 _144607 _144645 _144654 P pat e q t f y g a).
Proof. exact (eq_refl (term1427 _144530 _144607 _144645 _144654 P pat e q t f y g a)). Qed.
Lemma lem8204019 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (z : _144530) : (term396 _144529 _144530 _144607 P lt2 s a f g z) = (term396 _144529 _144530 _144607 P lt2 s a f g z).
Proof. exact (eq_refl (term396 _144529 _144530 _144607 P lt2 s a f g z)). Qed.
Lemma lem8204020 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term397 _144529 _144530 _144607 P lt2 s a f g) = (term397 _144529 _144530 _144607 P lt2 s a f g).
Proof. exact (fun_ext (fun z : _144530 => @lem8204019 _144529 _144530 _144607 P lt2 s a f g z)). Qed.
Lemma lem8204021 {_144530 : Type'} : (@all _144530) = (@all _144530).
Proof. exact (eq_refl (@all _144530)). Qed.
Lemma lem8204022 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term165 _144529 _144530 _144607 P lt2 s a f g) = (term165 _144529 _144530 _144607 P lt2 s a f g).
Proof. exact (MK_COMB (@lem8204021 _144530) (@lem8204020 _144529 _144530 _144607 P lt2 s a f g)). Qed.
Lemma lem8204023 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8204024 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term332 _144529 _144530 _144607 P lt2 s a f g) = (term332 _144529 _144530 _144607 P lt2 s a f g).
Proof. exact (MK_COMB (@lem8204023) (@lem8204022 _144529 _144530 _144607 P lt2 s a f g)). Qed.
Lemma lem8204025 {_144529 _144530 _144607 _144645 _144654 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (term1429 _144529 _144530 _144607 _144645 _144654 P lt2 s pat e q t f y g a) = (term1429 _144529 _144530 _144607 _144645 _144654 P lt2 s pat e q t f y g a).
Proof. exact (MK_COMB (@lem8204024 _144529 _144530 _144607 P lt2 s a f g) (@lem8204014 _144530 _144607 _144645 _144654 P pat e q t f y g a)). Qed.
Lemma lem8204028 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term335 _144530 _144607 P p g a) = (term335 _144530 _144607 P p g a).
Proof. exact (eq_refl (term335 _144530 _144607 P p g a)). Qed.
Lemma lem8204029 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (term1431 _144529 _144530 _144607 _144645 _144654 P p lt2 s pat e q t f y g a) = (term1431 _144529 _144530 _144607 _144645 _144654 P p lt2 s pat e q t f y g a).
Proof. exact (MK_COMB (@lem8204028 _144530 _144607 P p g a) (@lem8204025 _144529 _144530 _144607 _144645 _144654 P lt2 s pat e q t f y g a)). Qed.
Lemma lem8204032 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) : (term335 _144530 _144607 P p f a) = (term335 _144530 _144607 P p f a).
Proof. exact (eq_refl (term335 _144530 _144607 P p f a)). Qed.
Lemma lem8204033 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (term1433 _144529 _144530 _144607 _144645 _144654 P p lt2 s pat e q t f y g a) = (term1433 _144529 _144530 _144607 _144645 _144654 P p lt2 s pat e q t f y g a).
Proof. exact (MK_COMB (@lem8204032 _144530 _144607 P p f a) (@lem8204029 _144529 _144530 _144607 _144645 _144654 P p lt2 s pat e q t f y g a)). Qed.
Lemma lem8204034 {_144530 _144607 _144654 P : Type'} (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : ((y f a) = (y g a)) = ((y f a) = (y g a)).
Proof. exact (eq_refl ((y f a) = (y g a))). Qed.
Lemma lem8204039 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (z : _144530) : (term396 _144529 _144530 _144607 P lt2 s a f g z) = (term396 _144529 _144530 _144607 P lt2 s a f g z).
Proof. exact (eq_refl (term396 _144529 _144530 _144607 P lt2 s a f g z)). Qed.
Lemma lem8204040 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term397 _144529 _144530 _144607 P lt2 s a f g) = (term397 _144529 _144530 _144607 P lt2 s a f g).
Proof. exact (fun_ext (fun z : _144530 => @lem8204039 _144529 _144530 _144607 P lt2 s a f g z)). Qed.
Lemma lem8204041 {_144530 : Type'} : (@all _144530) = (@all _144530).
Proof. exact (eq_refl (@all _144530)). Qed.
Lemma lem8204042 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term165 _144529 _144530 _144607 P lt2 s a f g) = (term165 _144529 _144530 _144607 P lt2 s a f g).
Proof. exact (MK_COMB (@lem8204041 _144530) (@lem8204040 _144529 _144530 _144607 P lt2 s a f g)). Qed.
Lemma lem8204053 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term164 _144530 _144607 _144645 P p pat e q g a) = (term164 _144530 _144607 _144645 P p pat e q g a).
Proof. exact (eq_refl (term164 _144530 _144607 _144645 P p pat e q g a)). Qed.
Lemma lem8204054 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term167 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) = (term167 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g).
Proof. exact (MK_COMB (@lem8204053 _144530 _144607 _144645 P p pat e q g a) (@lem8204042 _144529 _144530 _144607 P lt2 s a f g)). Qed.
Lemma lem8204065 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) : (term164 _144530 _144607 _144645 P p pat e q f a) = (term164 _144530 _144607 _144645 P p pat e q f a).
Proof. exact (eq_refl (term164 _144530 _144607 _144645 P p pat e q f a)). Qed.
Lemma lem8204066 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term169 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) = (term169 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g).
Proof. exact (MK_COMB (@lem8204065 _144530 _144607 _144645 P p pat e q f a) (@lem8204054 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g)). Qed.
Lemma lem8204067 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8204068 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term171 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) = (term171 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g).
Proof. exact (MK_COMB (@lem8204067) (@lem8204066 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g)). Qed.
Lemma lem8204069 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (term173 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g a) = (term173 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g a).
Proof. exact (MK_COMB (@lem8204068 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) (@lem8204034 _144530 _144607 _144654 P f y g a)). Qed.
Lemma lem8204070 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) : (term175 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g) = (term175 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g).
Proof. exact (fun_ext (fun a : P => @lem8204069 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g a)). Qed.
Lemma lem8204071 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8204072 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) : (term177 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g) = (term177 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g).
Proof. exact (MK_COMB (@lem8204071 P) (@lem8204070 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g)). Qed.
Lemma lem8204073 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) : (term179 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y) = (term179 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y).
Proof. exact (fun_ext (fun g : _144530 -> _144607 => @lem8204072 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g)). Qed.
Lemma lem8204074 {_144530 _144607 : Type'} : (@all (_144530 -> _144607)) = (@all (_144530 -> _144607)).
Proof. exact (eq_refl (@all (_144530 -> _144607))). Qed.
Lemma lem8204075 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) : (term181 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y) = (term181 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y).
Proof. exact (MK_COMB (@lem8204074 _144530 _144607) (@lem8204073 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y)). Qed.
Lemma lem8204076 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (y : type564 _144530 _144607 _144654 P) : (term183 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y) = (term183 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y).
Proof. exact (fun_ext (fun f : _144530 -> _144607 => @lem8204075 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y)). Qed.
Lemma lem8204077 {_144530 _144607 : Type'} : (@all (_144530 -> _144607)) = (@all (_144530 -> _144607)).
Proof. exact (eq_refl (@all (_144530 -> _144607))). Qed.
Lemma lem8204078 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (y : type564 _144530 _144607 _144654 P) : (term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y) = (term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y).
Proof. exact (MK_COMB (@lem8204077 _144530 _144607) (@lem8204076 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y)). Qed.
Lemma lem8204079 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8204080 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (y : type564 _144530 _144607 _144654 P) : (term340 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y) = (term340 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y).
Proof. exact (MK_COMB (@lem8204079) (@lem8204078 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y)). Qed.
Lemma lem8204081 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (term1435 _144529 _144530 _144607 _144645 _144654 P p lt2 s pat e q t f y g a) = (term1435 _144529 _144530 _144607 _144645 _144654 P p lt2 s pat e q t f y g a).
Proof. exact (MK_COMB (@lem8204080 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y) (@lem8204033 _144529 _144530 _144607 _144645 _144654 P p lt2 s pat e q t f y g a)). Qed.
Lemma lem8204086 {_144530 _144607 P : Type'} (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : ((q f a) = (q g a)) = ((q f a) = (q g a)).
Proof. exact (eq_refl ((q f a) = (q g a))). Qed.
Lemma lem8204091 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (z : _144530) : (term396 _144529 _144530 _144607 P lt2 s a f g z) = (term396 _144529 _144530 _144607 P lt2 s a f g z).
Proof. exact (eq_refl (term396 _144529 _144530 _144607 P lt2 s a f g z)). Qed.
Lemma lem8204092 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term397 _144529 _144530 _144607 P lt2 s a f g) = (term397 _144529 _144530 _144607 P lt2 s a f g).
Proof. exact (fun_ext (fun z : _144530 => @lem8204091 _144529 _144530 _144607 P lt2 s a f g z)). Qed.
Lemma lem8204093 {_144530 : Type'} : (@all _144530) = (@all _144530).
Proof. exact (eq_refl (@all _144530)). Qed.
Lemma lem8204094 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term165 _144529 _144530 _144607 P lt2 s a f g) = (term165 _144529 _144530 _144607 P lt2 s a f g).
Proof. exact (MK_COMB (@lem8204093 _144530) (@lem8204092 _144529 _144530 _144607 P lt2 s a f g)). Qed.
Lemma lem8204101 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term205 _144530 _144607 _144645 P p pat e g a) = (term205 _144530 _144607 _144645 P p pat e g a).
Proof. exact (eq_refl (term205 _144530 _144607 _144645 P p pat e g a)). Qed.
Lemma lem8204102 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term207 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g) = (term207 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g).
Proof. exact (MK_COMB (@lem8204101 _144530 _144607 _144645 P p pat e g a) (@lem8204094 _144529 _144530 _144607 P lt2 s a f g)). Qed.
Lemma lem8204109 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (a : P) : (term205 _144530 _144607 _144645 P p pat e f a) = (term205 _144530 _144607 _144645 P p pat e f a).
Proof. exact (eq_refl (term205 _144530 _144607 _144645 P p pat e f a)). Qed.
Lemma lem8204110 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term209 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g) = (term209 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g).
Proof. exact (MK_COMB (@lem8204109 _144530 _144607 _144645 P p pat e f a) (@lem8204102 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g)). Qed.
Lemma lem8204111 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8204112 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term211 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g) = (term211 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g).
Proof. exact (MK_COMB (@lem8204111) (@lem8204110 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g)). Qed.
Lemma lem8204113 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term213 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g a) = (term213 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g a).
Proof. exact (MK_COMB (@lem8204112 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g) (@lem8204086 _144530 _144607 P f q g a)). Qed.
Lemma lem8204114 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) : (term215 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g) = (term215 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g).
Proof. exact (fun_ext (fun a : P => @lem8204113 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g a)). Qed.
Lemma lem8204115 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8204116 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) : (term217 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g) = (term217 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g).
Proof. exact (MK_COMB (@lem8204115 P) (@lem8204114 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g)). Qed.
Lemma lem8204117 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) : (term219 _144529 _144530 _144607 _144645 P p pat e lt2 s f q) = (term219 _144529 _144530 _144607 _144645 P p pat e lt2 s f q).
Proof. exact (fun_ext (fun g : _144530 -> _144607 => @lem8204116 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g)). Qed.
Lemma lem8204118 {_144530 _144607 : Type'} : (@all (_144530 -> _144607)) = (@all (_144530 -> _144607)).
Proof. exact (eq_refl (@all (_144530 -> _144607))). Qed.
Lemma lem8204119 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) : (term221 _144529 _144530 _144607 _144645 P p pat e lt2 s f q) = (term221 _144529 _144530 _144607 _144645 P p pat e lt2 s f q).
Proof. exact (MK_COMB (@lem8204118 _144530 _144607) (@lem8204117 _144529 _144530 _144607 _144645 P p pat e lt2 s f q)). Qed.
Lemma lem8204120 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (q : type560 _144530 _144607 P) : (term223 _144529 _144530 _144607 _144645 P p pat e lt2 s q) = (term223 _144529 _144530 _144607 _144645 P p pat e lt2 s q).
Proof. exact (fun_ext (fun f : _144530 -> _144607 => @lem8204119 _144529 _144530 _144607 _144645 P p pat e lt2 s f q)). Qed.
Lemma lem8204121 {_144530 _144607 : Type'} : (@all (_144530 -> _144607)) = (@all (_144530 -> _144607)).
Proof. exact (eq_refl (@all (_144530 -> _144607))). Qed.
Lemma lem8204122 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (q : type560 _144530 _144607 P) : (term224 _144529 _144530 _144607 _144645 P p pat e lt2 s q) = (term224 _144529 _144530 _144607 _144645 P p pat e lt2 s q).
Proof. exact (MK_COMB (@lem8204121 _144530 _144607) (@lem8204120 _144529 _144530 _144607 _144645 P p pat e lt2 s q)). Qed.
Lemma lem8204123 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8204124 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (q : type560 _144530 _144607 P) : (term343 _144529 _144530 _144607 _144645 P p pat e lt2 s q) = (term343 _144529 _144530 _144607 _144645 P p pat e lt2 s q).
Proof. exact (MK_COMB (@lem8204123) (@lem8204122 _144529 _144530 _144607 _144645 P p pat e lt2 s q)). Qed.
Lemma lem8204125 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (term1437 _144529 _144530 _144607 _144645 _144654 P p lt2 s pat e q t f y g a) = (term1437 _144529 _144530 _144607 _144645 _144654 P p lt2 s pat e q t f y g a).
Proof. exact (MK_COMB (@lem8204124 _144529 _144530 _144607 _144645 P p pat e lt2 s q) (@lem8204081 _144529 _144530 _144607 _144645 _144654 P p lt2 s pat e q t f y g a)). Qed.
Lemma lem8204126 {_144530 _144607 _144654 P : Type'} (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : ((t f a) = (t g a)) = ((t f a) = (t g a)).
Proof. exact (eq_refl ((t f a) = (t g a))). Qed.
Lemma lem8204131 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (z : _144530) : (term396 _144529 _144530 _144607 P lt2 s a f g z) = (term396 _144529 _144530 _144607 P lt2 s a f g z).
Proof. exact (eq_refl (term396 _144529 _144530 _144607 P lt2 s a f g z)). Qed.
Lemma lem8204132 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term397 _144529 _144530 _144607 P lt2 s a f g) = (term397 _144529 _144530 _144607 P lt2 s a f g).
Proof. exact (fun_ext (fun z : _144530 => @lem8204131 _144529 _144530 _144607 P lt2 s a f g z)). Qed.
Lemma lem8204133 {_144530 : Type'} : (@all _144530) = (@all _144530).
Proof. exact (eq_refl (@all _144530)). Qed.
Lemma lem8204134 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term165 _144529 _144530 _144607 P lt2 s a f g) = (term165 _144529 _144530 _144607 P lt2 s a f g).
Proof. exact (MK_COMB (@lem8204133 _144530) (@lem8204132 _144529 _144530 _144607 P lt2 s a f g)). Qed.
Lemma lem8204145 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term164 _144530 _144607 _144645 P p pat e q g a) = (term164 _144530 _144607 _144645 P p pat e q g a).
Proof. exact (eq_refl (term164 _144530 _144607 _144645 P p pat e q g a)). Qed.
Lemma lem8204146 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term167 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) = (term167 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g).
Proof. exact (MK_COMB (@lem8204145 _144530 _144607 _144645 P p pat e q g a) (@lem8204134 _144529 _144530 _144607 P lt2 s a f g)). Qed.
Lemma lem8204157 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) : (term164 _144530 _144607 _144645 P p pat e q f a) = (term164 _144530 _144607 _144645 P p pat e q f a).
Proof. exact (eq_refl (term164 _144530 _144607 _144645 P p pat e q f a)). Qed.
Lemma lem8204158 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term169 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) = (term169 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g).
Proof. exact (MK_COMB (@lem8204157 _144530 _144607 _144645 P p pat e q f a) (@lem8204146 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g)). Qed.
Lemma lem8204159 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8204160 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term171 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) = (term171 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g).
Proof. exact (MK_COMB (@lem8204159) (@lem8204158 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g)). Qed.
Lemma lem8204161 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (term173 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g a) = (term173 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g a).
Proof. exact (MK_COMB (@lem8204160 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) (@lem8204126 _144530 _144607 _144654 P f t g a)). Qed.
Lemma lem8204162 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) : (term175 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g) = (term175 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g).
Proof. exact (fun_ext (fun a : P => @lem8204161 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g a)). Qed.
Lemma lem8204163 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8204164 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) : (term177 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g) = (term177 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g).
Proof. exact (MK_COMB (@lem8204163 P) (@lem8204162 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g)). Qed.
Lemma lem8204165 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) : (term179 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t) = (term179 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t).
Proof. exact (fun_ext (fun g : _144530 -> _144607 => @lem8204164 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g)). Qed.
Lemma lem8204166 {_144530 _144607 : Type'} : (@all (_144530 -> _144607)) = (@all (_144530 -> _144607)).
Proof. exact (eq_refl (@all (_144530 -> _144607))). Qed.
Lemma lem8204167 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) : (term181 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t) = (term181 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t).
Proof. exact (MK_COMB (@lem8204166 _144530 _144607) (@lem8204165 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t)). Qed.
Lemma lem8204168 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (t : type564 _144530 _144607 _144654 P) : (term183 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) = (term183 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t).
Proof. exact (fun_ext (fun f : _144530 -> _144607 => @lem8204167 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t)). Qed.
Lemma lem8204169 {_144530 _144607 : Type'} : (@all (_144530 -> _144607)) = (@all (_144530 -> _144607)).
Proof. exact (eq_refl (@all (_144530 -> _144607))). Qed.
Lemma lem8204170 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (t : type564 _144530 _144607 _144654 P) : (term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) = (term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t).
Proof. exact (MK_COMB (@lem8204169 _144530 _144607) (@lem8204168 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t)). Qed.
Lemma lem8204171 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8204172 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (t : type564 _144530 _144607 _144654 P) : (term340 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) = (term340 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t).
Proof. exact (MK_COMB (@lem8204171) (@lem8204170 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t)). Qed.
Lemma lem8204173 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (term1439 _144529 _144530 _144607 _144645 _144654 P p lt2 s pat e q t f y g a) = (term1439 _144529 _144530 _144607 _144645 _144654 P p lt2 s pat e q t f y g a).
Proof. exact (MK_COMB (@lem8204172 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) (@lem8204125 _144529 _144530 _144607 _144645 _144654 P p lt2 s pat e q t f y g a)). Qed.
Lemma lem8204174 {_144530 _144607 _144645 P : Type'} (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : ((e f a) = (e g a)) = ((e f a) = (e g a)).
Proof. exact (eq_refl ((e f a) = (e g a))). Qed.
Lemma lem8204179 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (z : _144530) : (term396 _144529 _144530 _144607 P lt2 s a f g z) = (term396 _144529 _144530 _144607 P lt2 s a f g z).
Proof. exact (eq_refl (term396 _144529 _144530 _144607 P lt2 s a f g z)). Qed.
Lemma lem8204180 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term397 _144529 _144530 _144607 P lt2 s a f g) = (term397 _144529 _144530 _144607 P lt2 s a f g).
Proof. exact (fun_ext (fun z : _144530 => @lem8204179 _144529 _144530 _144607 P lt2 s a f g z)). Qed.
Lemma lem8204181 {_144530 : Type'} : (@all _144530) = (@all _144530).
Proof. exact (eq_refl (@all _144530)). Qed.
Lemma lem8204182 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term165 _144529 _144530 _144607 P lt2 s a f g) = (term165 _144529 _144530 _144607 P lt2 s a f g).
Proof. exact (MK_COMB (@lem8204181 _144530) (@lem8204180 _144529 _144530 _144607 P lt2 s a f g)). Qed.
Lemma lem8204185 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term305 _144530 _144607 P p g a) = (term305 _144530 _144607 P p g a).
Proof. exact (eq_refl (term305 _144530 _144607 P p g a)). Qed.
Lemma lem8204186 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term318 _144529 _144530 _144607 P p lt2 s a f g) = (term318 _144529 _144530 _144607 P p lt2 s a f g).
Proof. exact (MK_COMB (@lem8204185 _144530 _144607 P p g a) (@lem8204182 _144529 _144530 _144607 P lt2 s a f g)). Qed.
Lemma lem8204189 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) : (term305 _144530 _144607 P p f a) = (term305 _144530 _144607 P p f a).
Proof. exact (eq_refl (term305 _144530 _144607 P p f a)). Qed.
Lemma lem8204190 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term317 _144529 _144530 _144607 P p lt2 s a f g) = (term317 _144529 _144530 _144607 P p lt2 s a f g).
Proof. exact (MK_COMB (@lem8204189 _144530 _144607 P p f a) (@lem8204186 _144529 _144530 _144607 P p lt2 s a f g)). Qed.
Lemma lem8204191 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8204192 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term287 _144529 _144530 _144607 P p lt2 s a f g) = (term287 _144529 _144530 _144607 P p lt2 s a f g).
Proof. exact (MK_COMB (@lem8204191) (@lem8204190 _144529 _144530 _144607 P p lt2 s a f g)). Qed.
Lemma lem8204193 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term398 _144529 _144530 _144607 _144645 P p lt2 s f e g a) = (term398 _144529 _144530 _144607 _144645 P p lt2 s f e g a).
Proof. exact (MK_COMB (@lem8204192 _144529 _144530 _144607 P p lt2 s a f g) (@lem8204174 _144530 _144607 _144645 P f e g a)). Qed.
Lemma lem8204194 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) : (term399 _144529 _144530 _144607 _144645 P p lt2 s f e g) = (term399 _144529 _144530 _144607 _144645 P p lt2 s f e g).
Proof. exact (fun_ext (fun a : P => @lem8204193 _144529 _144530 _144607 _144645 P p lt2 s f e g a)). Qed.
Lemma lem8204195 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8204196 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) : (term400 _144529 _144530 _144607 _144645 P p lt2 s f e g) = (term400 _144529 _144530 _144607 _144645 P p lt2 s f e g).
Proof. exact (MK_COMB (@lem8204195 P) (@lem8204194 _144529 _144530 _144607 _144645 P p lt2 s f e g)). Qed.
Lemma lem8204197 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) : (term401 _144529 _144530 _144607 _144645 P p lt2 s f e) = (term401 _144529 _144530 _144607 _144645 P p lt2 s f e).
Proof. exact (fun_ext (fun g : _144530 -> _144607 => @lem8204196 _144529 _144530 _144607 _144645 P p lt2 s f e g)). Qed.
Lemma lem8204198 {_144530 _144607 : Type'} : (@all (_144530 -> _144607)) = (@all (_144530 -> _144607)).
Proof. exact (eq_refl (@all (_144530 -> _144607))). Qed.
Lemma lem8204199 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) : (term402 _144529 _144530 _144607 _144645 P p lt2 s f e) = (term402 _144529 _144530 _144607 _144645 P p lt2 s f e).
Proof. exact (MK_COMB (@lem8204198 _144530 _144607) (@lem8204197 _144529 _144530 _144607 _144645 P p lt2 s f e)). Qed.
Lemma lem8204200 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (e : type564 _144530 _144607 _144645 P) : (term403 _144529 _144530 _144607 _144645 P p lt2 s e) = (term403 _144529 _144530 _144607 _144645 P p lt2 s e).
Proof. exact (fun_ext (fun f : _144530 -> _144607 => @lem8204199 _144529 _144530 _144607 _144645 P p lt2 s f e)). Qed.
Lemma lem8204201 {_144530 _144607 : Type'} : (@all (_144530 -> _144607)) = (@all (_144530 -> _144607)).
Proof. exact (eq_refl (@all (_144530 -> _144607))). Qed.
Lemma lem8204202 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (e : type564 _144530 _144607 _144645 P) : (term141 _144529 _144530 _144607 _144645 P p lt2 s e) = (term141 _144529 _144530 _144607 _144645 P p lt2 s e).
Proof. exact (MK_COMB (@lem8204201 _144530 _144607) (@lem8204200 _144529 _144530 _144607 _144645 P p lt2 s e)). Qed.
Lemma lem8204203 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8204204 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (e : type564 _144530 _144607 _144645 P) : (term348 _144529 _144530 _144607 _144645 P p lt2 s e) = (term348 _144529 _144530 _144607 _144645 P p lt2 s e).
Proof. exact (MK_COMB (@lem8204203) (@lem8204202 _144529 _144530 _144607 _144645 P p lt2 s e)). Qed.
Lemma lem8204205 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (term1441 _144529 _144530 _144607 _144645 _144654 P p lt2 s pat e q t f y g a) = (term1441 _144529 _144530 _144607 _144645 _144654 P p lt2 s pat e q t f y g a).
Proof. exact (MK_COMB (@lem8204204 _144529 _144530 _144607 _144645 P p lt2 s e) (@lem8204173 _144529 _144530 _144607 _144645 _144654 P p lt2 s pat e q t f y g a)). Qed.
Lemma lem8204206 {_144530 _144607 _144645 P : Type'} (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : ((pat f a) = (pat g a)) = ((pat f a) = (pat g a)).
Proof. exact (eq_refl ((pat f a) = (pat g a))). Qed.
Lemma lem8204211 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (z : _144530) : (term396 _144529 _144530 _144607 P lt2 s a f g z) = (term396 _144529 _144530 _144607 P lt2 s a f g z).
Proof. exact (eq_refl (term396 _144529 _144530 _144607 P lt2 s a f g z)). Qed.
Lemma lem8204212 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term397 _144529 _144530 _144607 P lt2 s a f g) = (term397 _144529 _144530 _144607 P lt2 s a f g).
Proof. exact (fun_ext (fun z : _144530 => @lem8204211 _144529 _144530 _144607 P lt2 s a f g z)). Qed.
Lemma lem8204213 {_144530 : Type'} : (@all _144530) = (@all _144530).
Proof. exact (eq_refl (@all _144530)). Qed.
Lemma lem8204214 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term165 _144529 _144530 _144607 P lt2 s a f g) = (term165 _144529 _144530 _144607 P lt2 s a f g).
Proof. exact (MK_COMB (@lem8204213 _144530) (@lem8204212 _144529 _144530 _144607 P lt2 s a f g)). Qed.
Lemma lem8204217 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term305 _144530 _144607 P p g a) = (term305 _144530 _144607 P p g a).
Proof. exact (eq_refl (term305 _144530 _144607 P p g a)). Qed.
Lemma lem8204218 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term318 _144529 _144530 _144607 P p lt2 s a f g) = (term318 _144529 _144530 _144607 P p lt2 s a f g).
Proof. exact (MK_COMB (@lem8204217 _144530 _144607 P p g a) (@lem8204214 _144529 _144530 _144607 P lt2 s a f g)). Qed.
Lemma lem8204221 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) : (term305 _144530 _144607 P p f a) = (term305 _144530 _144607 P p f a).
Proof. exact (eq_refl (term305 _144530 _144607 P p f a)). Qed.
Lemma lem8204222 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term317 _144529 _144530 _144607 P p lt2 s a f g) = (term317 _144529 _144530 _144607 P p lt2 s a f g).
Proof. exact (MK_COMB (@lem8204221 _144530 _144607 P p f a) (@lem8204218 _144529 _144530 _144607 P p lt2 s a f g)). Qed.
Lemma lem8204223 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8204224 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term287 _144529 _144530 _144607 P p lt2 s a f g) = (term287 _144529 _144530 _144607 P p lt2 s a f g).
Proof. exact (MK_COMB (@lem8204223) (@lem8204222 _144529 _144530 _144607 P p lt2 s a f g)). Qed.
Lemma lem8204225 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term398 _144529 _144530 _144607 _144645 P p lt2 s f pat g a) = (term398 _144529 _144530 _144607 _144645 P p lt2 s f pat g a).
Proof. exact (MK_COMB (@lem8204224 _144529 _144530 _144607 P p lt2 s a f g) (@lem8204206 _144530 _144607 _144645 P f pat g a)). Qed.
Lemma lem8204226 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) : (term399 _144529 _144530 _144607 _144645 P p lt2 s f pat g) = (term399 _144529 _144530 _144607 _144645 P p lt2 s f pat g).
Proof. exact (fun_ext (fun a : P => @lem8204225 _144529 _144530 _144607 _144645 P p lt2 s f pat g a)). Qed.
Lemma lem8204227 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8204228 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) : (term400 _144529 _144530 _144607 _144645 P p lt2 s f pat g) = (term400 _144529 _144530 _144607 _144645 P p lt2 s f pat g).
Proof. exact (MK_COMB (@lem8204227 P) (@lem8204226 _144529 _144530 _144607 _144645 P p lt2 s f pat g)). Qed.
Lemma lem8204229 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) : (term401 _144529 _144530 _144607 _144645 P p lt2 s f pat) = (term401 _144529 _144530 _144607 _144645 P p lt2 s f pat).
Proof. exact (fun_ext (fun g : _144530 -> _144607 => @lem8204228 _144529 _144530 _144607 _144645 P p lt2 s f pat g)). Qed.
Lemma lem8204230 {_144530 _144607 : Type'} : (@all (_144530 -> _144607)) = (@all (_144530 -> _144607)).
Proof. exact (eq_refl (@all (_144530 -> _144607))). Qed.
Lemma lem8204231 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) : (term402 _144529 _144530 _144607 _144645 P p lt2 s f pat) = (term402 _144529 _144530 _144607 _144645 P p lt2 s f pat).
Proof. exact (MK_COMB (@lem8204230 _144530 _144607) (@lem8204229 _144529 _144530 _144607 _144645 P p lt2 s f pat)). Qed.
Lemma lem8204232 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) : (term403 _144529 _144530 _144607 _144645 P p lt2 s pat) = (term403 _144529 _144530 _144607 _144645 P p lt2 s pat).
Proof. exact (fun_ext (fun f : _144530 -> _144607 => @lem8204231 _144529 _144530 _144607 _144645 P p lt2 s f pat)). Qed.
Lemma lem8204233 {_144530 _144607 : Type'} : (@all (_144530 -> _144607)) = (@all (_144530 -> _144607)).
Proof. exact (eq_refl (@all (_144530 -> _144607))). Qed.
Lemma lem8204234 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) : (term141 _144529 _144530 _144607 _144645 P p lt2 s pat) = (term141 _144529 _144530 _144607 _144645 P p lt2 s pat).
Proof. exact (MK_COMB (@lem8204233 _144530 _144607) (@lem8204232 _144529 _144530 _144607 _144645 P p lt2 s pat)). Qed.
Lemma lem8204235 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8204236 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) : (term348 _144529 _144530 _144607 _144645 P p lt2 s pat) = (term348 _144529 _144530 _144607 _144645 P p lt2 s pat).
Proof. exact (MK_COMB (@lem8204235) (@lem8204234 _144529 _144530 _144607 _144645 P p lt2 s pat)). Qed.
Lemma lem8204237 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (term1442 _144529 _144530 _144607 _144645 _144654 P p lt2 s pat e q t f y g a) = (term1442 _144529 _144530 _144607 _144645 _144654 P p lt2 s pat e q t f y g a).
Proof. exact (MK_COMB (@lem8204236 _144529 _144530 _144607 _144645 P p lt2 s pat) (@lem8204205 _144529 _144530 _144607 _144645 _144654 P p lt2 s pat e q t f y g a)). Qed.
Lemma lem8204238 {_144529 _144530 _144607 _144645 _144654 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (term1444 _144529 _144530 _144607 _144645 _144654 P lt2 s pat e q t f y g a) = (term1444 _144529 _144530 _144607 _144645 _144654 P lt2 s pat e q t f y g a).
Proof. exact (fun_ext (fun p : type560 _144530 _144607 P => @lem8204237 _144529 _144530 _144607 _144645 _144654 P p lt2 s pat e q t f y g a)). Qed.
Lemma lem8204239 {_144530 _144607 P : Type'} : (@all ((_144530 -> _144607) -> P -> Prop)) = (@all ((_144530 -> _144607) -> P -> Prop)).
Proof. exact (eq_refl (@all ((_144530 -> _144607) -> P -> Prop))). Qed.
Lemma lem8204240 {_144529 _144530 _144607 _144645 _144654 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (term1446 _144529 _144530 _144607 _144645 _144654 P lt2 s pat e q t f y g a) = (term1446 _144529 _144530 _144607 _144645 _144654 P lt2 s pat e q t f y g a).
Proof. exact (MK_COMB (@lem8204239 _144530 _144607 P) (@lem8204238 _144529 _144530 _144607 _144645 _144654 P lt2 s pat e q t f y g a)). Qed.
Lemma lem8204241 {_144529 _144530 _144607 _144645 _144654 P : Type'} (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (term1448 _144529 _144530 _144607 _144645 _144654 P s pat e q t f y g a) = (term1448 _144529 _144530 _144607 _144645 _144654 P s pat e q t f y g a).
Proof. exact (fun_ext (fun lt2 : type1470 _144529 _144530 => @lem8204240 _144529 _144530 _144607 _144645 _144654 P lt2 s pat e q t f y g a)). Qed.
Lemma lem8204242 {_144529 _144530 : Type'} : (@all (_144530 -> _144529 -> Prop)) = (@all (_144530 -> _144529 -> Prop)).
Proof. exact (eq_refl (@all (_144530 -> _144529 -> Prop))). Qed.
Lemma lem8204243 {_144529 _144530 _144607 _144645 _144654 P : Type'} (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (term1450 _144529 _144530 _144607 _144645 _144654 P s pat e q t f y g a) = (term1450 _144529 _144530 _144607 _144645 _144654 P s pat e q t f y g a).
Proof. exact (MK_COMB (@lem8204242 _144529 _144530) (@lem8204241 _144529 _144530 _144607 _144645 _144654 P s pat e q t f y g a)). Qed.
Lemma lem8204244 {_144529 _144530 _144607 _144645 _144654 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (term1452 _144529 _144530 _144607 _144645 _144654 P pat e q t f y g a) = (term1452 _144529 _144530 _144607 _144645 _144654 P pat e q t f y g a).
Proof. exact (fun_ext (fun s : P -> _144529 => @lem8204243 _144529 _144530 _144607 _144645 _144654 P s pat e q t f y g a)). Qed.
Lemma lem8204245 {_144529 P : Type'} : (@all (P -> _144529)) = (@all (P -> _144529)).
Proof. exact (eq_refl (@all (P -> _144529))). Qed.
Lemma lem8204246 {_144529 _144530 _144607 _144645 _144654 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (term1454 _144529 _144530 _144607 _144645 _144654 P pat e q t f y g a) = (term1454 _144529 _144530 _144607 _144645 _144654 P pat e q t f y g a).
Proof. exact (MK_COMB (@lem8204245 _144529 P) (@lem8204244 _144529 _144530 _144607 _144645 _144654 P pat e q t f y g a)). Qed.
Lemma lem8204247 {_144529 _144530 _144607 _144645 _144654 P : Type'} (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (term1456 _144529 _144530 _144607 _144645 _144654 P e q t f y g a) = (term1456 _144529 _144530 _144607 _144645 _144654 P e q t f y g a).
Proof. exact (fun_ext (fun pat : type564 _144530 _144607 _144645 P => @lem8204246 _144529 _144530 _144607 _144645 _144654 P pat e q t f y g a)). Qed.
Lemma lem8204248 {_144530 _144607 _144645 P : Type'} : (@all ((_144530 -> _144607) -> P -> _144645)) = (@all ((_144530 -> _144607) -> P -> _144645)).
Proof. exact (eq_refl (@all ((_144530 -> _144607) -> P -> _144645))). Qed.
Lemma lem8204249 {_144529 _144530 _144607 _144645 _144654 P : Type'} (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (term1458 _144529 _144530 _144607 _144645 _144654 P e q t f y g a) = (term1458 _144529 _144530 _144607 _144645 _144654 P e q t f y g a).
Proof. exact (MK_COMB (@lem8204248 _144530 _144607 _144645 P) (@lem8204247 _144529 _144530 _144607 _144645 _144654 P e q t f y g a)). Qed.
Lemma lem8204250 {_144529 _144530 _144607 _144645 _144654 P : Type'} (q : type560 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (term1460 _144529 _144530 _144607 _144645 _144654 P q t f y g a) = (term1460 _144529 _144530 _144607 _144645 _144654 P q t f y g a).
Proof. exact (fun_ext (fun e : type564 _144530 _144607 _144645 P => @lem8204249 _144529 _144530 _144607 _144645 _144654 P e q t f y g a)). Qed.
Lemma lem8204251 {_144530 _144607 _144645 P : Type'} : (@all ((_144530 -> _144607) -> P -> _144645)) = (@all ((_144530 -> _144607) -> P -> _144645)).
Proof. exact (eq_refl (@all ((_144530 -> _144607) -> P -> _144645))). Qed.
Lemma lem8204252 {_144529 _144530 _144607 _144645 _144654 P : Type'} (q : type560 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (term1462 _144529 _144530 _144607 _144645 _144654 P q t f y g a) = (term1462 _144529 _144530 _144607 _144645 _144654 P q t f y g a).
Proof. exact (MK_COMB (@lem8204251 _144530 _144607 _144645 P) (@lem8204250 _144529 _144530 _144607 _144645 _144654 P q t f y g a)). Qed.
Lemma lem8204253 {_144529 _144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (term1464 _144529 _144530 _144607 _144645 _144654 P t f y g a) = (term1464 _144529 _144530 _144607 _144645 _144654 P t f y g a).
Proof. exact (fun_ext (fun q : type560 _144530 _144607 P => @lem8204252 _144529 _144530 _144607 _144645 _144654 P q t f y g a)). Qed.
Lemma lem8204254 {_144530 _144607 P : Type'} : (@all ((_144530 -> _144607) -> P -> Prop)) = (@all ((_144530 -> _144607) -> P -> Prop)).
Proof. exact (eq_refl (@all ((_144530 -> _144607) -> P -> Prop))). Qed.
Lemma lem8204255 {_144529 _144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (term1466 _144529 _144530 _144607 _144645 _144654 P t f y g a) = (term1466 _144529 _144530 _144607 _144645 _144654 P t f y g a).
Proof. exact (MK_COMB (@lem8204254 _144530 _144607 P) (@lem8204253 _144529 _144530 _144607 _144645 _144654 P t f y g a)). Qed.
Lemma lem8204256 {_144529 _144530 _144607 _144645 _144654 P : Type'} (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (term1468 _144529 _144530 _144607 _144645 _144654 P f y g a) = (term1468 _144529 _144530 _144607 _144645 _144654 P f y g a).
Proof. exact (fun_ext (fun t : type564 _144530 _144607 _144654 P => @lem8204255 _144529 _144530 _144607 _144645 _144654 P t f y g a)). Qed.
Lemma lem8204257 {_144530 _144607 _144654 P : Type'} : (@all ((_144530 -> _144607) -> P -> _144654)) = (@all ((_144530 -> _144607) -> P -> _144654)).
Proof. exact (eq_refl (@all ((_144530 -> _144607) -> P -> _144654))). Qed.
Lemma lem8204258 {_144529 _144530 _144607 _144645 _144654 P : Type'} (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (term1470 _144529 _144530 _144607 _144645 _144654 P f y g a) = (term1470 _144529 _144530 _144607 _144645 _144654 P f y g a).
Proof. exact (MK_COMB (@lem8204257 _144530 _144607 _144654 P) (@lem8204256 _144529 _144530 _144607 _144645 _144654 P f y g a)). Qed.
Lemma lem8204259 {_144529 _144530 _144607 _144645 _144654 P : Type'} (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (term1472 _144529 _144530 _144607 _144645 _144654 P y g a) = (term1472 _144529 _144530 _144607 _144645 _144654 P y g a).
Proof. exact (fun_ext (fun f : _144530 -> _144607 => @lem8204258 _144529 _144530 _144607 _144645 _144654 P f y g a)). Qed.
Lemma lem8204260 {_144530 _144607 : Type'} : (@all (_144530 -> _144607)) = (@all (_144530 -> _144607)).
Proof. exact (eq_refl (@all (_144530 -> _144607))). Qed.
Lemma lem8204261 {_144529 _144530 _144607 _144645 _144654 P : Type'} (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (term1474 _144529 _144530 _144607 _144645 _144654 P y g a) = (term1474 _144529 _144530 _144607 _144645 _144654 P y g a).
Proof. exact (MK_COMB (@lem8204260 _144530 _144607) (@lem8204259 _144529 _144530 _144607 _144645 _144654 P y g a)). Qed.
Lemma lem8204262 {_144529 _144530 _144607 _144645 _144654 P : Type'} (g : _144530 -> _144607) (a : P) : (term1476 _144529 _144530 _144607 _144645 _144654 P g a) = (term1476 _144529 _144530 _144607 _144645 _144654 P g a).
Proof. exact (fun_ext (fun y : type564 _144530 _144607 _144654 P => @lem8204261 _144529 _144530 _144607 _144645 _144654 P y g a)). Qed.
Lemma lem8204263 {_144530 _144607 _144654 P : Type'} : (@all ((_144530 -> _144607) -> P -> _144654)) = (@all ((_144530 -> _144607) -> P -> _144654)).
Proof. exact (eq_refl (@all ((_144530 -> _144607) -> P -> _144654))). Qed.
Lemma lem8204264 {_144529 _144530 _144607 _144645 _144654 P : Type'} (g : _144530 -> _144607) (a : P) : (term1478 _144529 _144530 _144607 _144645 _144654 P g a) = (term1478 _144529 _144530 _144607 _144645 _144654 P g a).
Proof. exact (MK_COMB (@lem8204263 _144530 _144607 _144654 P) (@lem8204262 _144529 _144530 _144607 _144645 _144654 P g a)). Qed.
Lemma lem8204265 {_144529 _144530 _144607 _144645 _144654 P : Type'} (a : P) : (term1480 _144529 _144530 _144607 _144645 _144654 P a) = (term1480 _144529 _144530 _144607 _144645 _144654 P a).
Proof. exact (fun_ext (fun g : _144530 -> _144607 => @lem8204264 _144529 _144530 _144607 _144645 _144654 P g a)). Qed.
Lemma lem8204266 {_144530 _144607 : Type'} : (@all (_144530 -> _144607)) = (@all (_144530 -> _144607)).
Proof. exact (eq_refl (@all (_144530 -> _144607))). Qed.
Lemma lem8204267 {_144529 _144530 _144607 _144645 _144654 P : Type'} (a : P) : (term1482 _144529 _144530 _144607 _144645 _144654 P a) = (term1482 _144529 _144530 _144607 _144645 _144654 P a).
Proof. exact (MK_COMB (@lem8204266 _144530 _144607) (@lem8204265 _144529 _144530 _144607 _144645 _144654 P a)). Qed.
Lemma lem8204268 {_144529 _144530 _144607 _144645 _144654 P : Type'} : (term1484 _144529 _144530 _144607 _144645 _144654 P) = (term1484 _144529 _144530 _144607 _144645 _144654 P).
Proof. exact (fun_ext (fun a : P => @lem8204267 _144529 _144530 _144607 _144645 _144654 P a)). Qed.
Lemma lem8204269 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8204270 {_144529 _144530 _144607 _144645 _144654 P : Type'} : (term1486 _144529 _144530 _144607 _144645 _144654 P) = (term1486 _144529 _144530 _144607 _144645 _144654 P).
Proof. exact (MK_COMB (@lem8204269 P) (@lem8204268 _144529 _144530 _144607 _144645 _144654 P)). Qed.
Lemma lem8204553 {_144529 _144530 _144607 _144645 _144654 P : Type'} : (term1485 _144529 _144530 _144607 _144645 _144654 P) = (term1486 _144529 _144530 _144607 _144645 _144654 P).
Proof. exact (TRANS (@lem8203993 _144529 _144530 _144607 _144645 _144654 P) (@lem8204270 _144529 _144530 _144607 _144645 _144654 P)). Qed.
Lemma lem8204554 {_144529 _144530 _144607 _144645 _144654 P : Type'} : (term1486 _144529 _144530 _144607 _144645 _144654 P) = (term1485 _144529 _144530 _144607 _144645 _144654 P).
Proof. exact (SYM (@lem8204553 _144529 _144530 _144607 _144645 _144654 P)). Qed.
Lemma lem8204555 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (h1 : term141 _144529 _144530 _144607 _144645 P p lt2 s pat) : term141 _144529 _144530 _144607 _144645 P p lt2 s pat.
Proof. exact (h1). Qed.
Lemma lem8204556 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (e : type564 _144530 _144607 _144645 P) (h1 : term141 _144529 _144530 _144607 _144645 P p lt2 s e) : term141 _144529 _144530 _144607 _144645 P p lt2 s e.
Proof. exact (h1). Qed.
Lemma lem8204557 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (t : type564 _144530 _144607 _144654 P) (h1 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t.
Proof. exact (h1). Qed.
Lemma lem8204558 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (q : type560 _144530 _144607 P) (h1 : term224 _144529 _144530 _144607 _144645 P p pat e lt2 s q) : term224 _144529 _144530 _144607 _144645 P p pat e lt2 s q.
Proof. exact (h1). Qed.
Lemma lem8204559 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (y : type564 _144530 _144607 _144654 P) (h1 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y) : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y.
Proof. exact (h1). Qed.
Lemma lem8204562 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) : term165 _144529 _144530 _144607 P lt2 s a f g.
Proof. exact (h1). Qed.
Lemma lem8204568 (p : Prop) : p = (term7 p).
Proof. exact (EQ_MP (@lem10578 p) (@lem10597 p)). Qed.
Lemma lem8204569 {_144530 _144607 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (term324 _144530 _144607 _144654 P t f y g a) = (term325 _144530 _144607 _144654 P t f y g a).
Proof. exact (@lem8204568 (term324 _144530 _144607 _144654 P t f y g a)). Qed.
Lemma lem8204570 {_144530 _144607 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (term325 _144530 _144607 _144654 P t f y g a) = (term324 _144530 _144607 _144654 P t f y g a).
Proof. exact (SYM (@lem8204569 _144530 _144607 _144654 P t f y g a)). Qed.
Lemma lem8204571 {_144530 _144607 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) (h1 : term326 _144530 _144607 _144654 P t f y g a) : term326 _144530 _144607 _144654 P t f y g a.
Proof. exact (h1). Qed.
Lemma lem8204580 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (z : _144530) : (term404 _144529 _144530 _144607 P lt2 s a f g z) = (term405 _144529 _144530 _144607 P lt2 s a f g z).
Proof. exact (@lem17362 (term406 _144529 _144530 P lt2 z s a) ((f z) = (g z))). Qed.
Lemma lem8204581 {_144530 : Type'} (P : _144530 -> Prop) : (term407 _144530 P) = (term408 _144530 P).
Proof. exact (@lem18392 _144530 P). Qed.
Lemma lem8204582 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term409 _144529 _144530 _144607 P lt2 s a f g) = (term410 _144529 _144530 _144607 P lt2 s a f g).
Proof. exact (@lem8204581 _144530 (term397 _144529 _144530 _144607 P lt2 s a f g)). Qed.
Lemma lem8204583 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (z : _144530) : (term411 _144529 _144530 _144607 P lt2 s a f g z) = (term396 _144529 _144530 _144607 P lt2 s a f g z).
Proof. exact (eq_refl (term411 _144529 _144530 _144607 P lt2 s a f g z)). Qed.
Lemma lem8204584 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8204585 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (z : _144530) : (term412 _144529 _144530 _144607 P lt2 s a f g z) = (term404 _144529 _144530 _144607 P lt2 s a f g z).
Proof. exact (MK_COMB (@lem8204584) (@lem8204583 _144529 _144530 _144607 P lt2 s a f g z)). Qed.
Lemma lem8204586 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (z : _144530) : (term412 _144529 _144530 _144607 P lt2 s a f g z) = (term405 _144529 _144530 _144607 P lt2 s a f g z).
Proof. exact (TRANS (@lem8204585 _144529 _144530 _144607 P lt2 s a f g z) (@lem8204580 _144529 _144530 _144607 P lt2 s a f g z)). Qed.
Lemma lem8204587 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term413 _144529 _144530 _144607 P lt2 s a f g) = (term414 _144529 _144530 _144607 P lt2 s a f g).
Proof. exact (fun_ext (fun z : _144530 => @lem8204586 _144529 _144530 _144607 P lt2 s a f g z)). Qed.
Lemma lem8204588 {_144530 : Type'} : (@ex _144530) = (@ex _144530).
Proof. exact (eq_refl (@ex _144530)). Qed.
Lemma lem8204589 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term410 _144529 _144530 _144607 P lt2 s a f g) = (term415 _144529 _144530 _144607 P lt2 s a f g).
Proof. exact (MK_COMB (@lem8204588 _144530) (@lem8204587 _144529 _144530 _144607 P lt2 s a f g)). Qed.
Lemma lem8204590 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term409 _144529 _144530 _144607 P lt2 s a f g) = (term415 _144529 _144530 _144607 P lt2 s a f g).
Proof. exact (TRANS (@lem8204582 _144529 _144530 _144607 P lt2 s a f g) (@lem8204589 _144529 _144530 _144607 P lt2 s a f g)). Qed.
Lemma lem8204592 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term416 _144530 _144607 P p g a) = (term416 _144530 _144607 P p g a).
Proof. exact (eq_refl (term416 _144530 _144607 P p g a)). Qed.
Lemma lem8204593 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term417 _144529 _144530 _144607 P p lt2 s a f g) = (term418 _144529 _144530 _144607 P p lt2 s a f g).
Proof. exact (MK_COMB (@lem8204592 _144530 _144607 P p g a) (@lem8204590 _144529 _144530 _144607 P lt2 s a f g)). Qed.
Lemma lem8204594 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term419 _144529 _144530 _144607 P p lt2 s a f g) = (term417 _144529 _144530 _144607 P p lt2 s a f g).
Proof. exact (@lem17045 (p g a) (term165 _144529 _144530 _144607 P lt2 s a f g)). Qed.
Lemma lem8204595 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term419 _144529 _144530 _144607 P p lt2 s a f g) = (term418 _144529 _144530 _144607 P p lt2 s a f g).
Proof. exact (TRANS (@lem8204594 _144529 _144530 _144607 P p lt2 s a f g) (@lem8204593 _144529 _144530 _144607 P p lt2 s a f g)). Qed.
Lemma lem8204597 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) : (term416 _144530 _144607 P p f a) = (term416 _144530 _144607 P p f a).
Proof. exact (eq_refl (term416 _144530 _144607 P p f a)). Qed.
Lemma lem8204598 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term420 _144529 _144530 _144607 P p lt2 s a f g) = (term421 _144529 _144530 _144607 P p lt2 s a f g).
Proof. exact (MK_COMB (@lem8204597 _144530 _144607 P p f a) (@lem8204595 _144529 _144530 _144607 P p lt2 s a f g)). Qed.
Lemma lem8204599 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term422 _144529 _144530 _144607 P p lt2 s a f g) = (term420 _144529 _144530 _144607 P p lt2 s a f g).
Proof. exact (@lem17045 (p f a) (term318 _144529 _144530 _144607 P p lt2 s a f g)). Qed.
Lemma lem8204600 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term422 _144529 _144530 _144607 P p lt2 s a f g) = (term421 _144529 _144530 _144607 P p lt2 s a f g).
Proof. exact (TRANS (@lem8204599 _144529 _144530 _144607 P p lt2 s a f g) (@lem8204598 _144529 _144530 _144607 P p lt2 s a f g)). Qed.
Lemma lem8204601 {_144530 _144607 _144645 P : Type'} (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : ((pat f a) = (pat g a)) = ((pat f a) = (pat g a)).
Proof. exact (eq_refl ((pat f a) = (pat g a))). Qed.
Lemma lem8204602 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8204603 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term423 _144529 _144530 _144607 P p lt2 s a f g) = (term424 _144529 _144530 _144607 P p lt2 s a f g).
Proof. exact (MK_COMB (@lem8204602) (@lem8204600 _144529 _144530 _144607 P p lt2 s a f g)). Qed.
Lemma lem8204604 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term425 _144529 _144530 _144607 _144645 P p lt2 s f pat g a) = (term426 _144529 _144530 _144607 _144645 P p lt2 s f pat g a).
Proof. exact (MK_COMB (@lem8204603 _144529 _144530 _144607 P p lt2 s a f g) (@lem8204601 _144530 _144607 _144645 P f pat g a)). Qed.
Lemma lem8204605 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term398 _144529 _144530 _144607 _144645 P p lt2 s f pat g a) = (term425 _144529 _144530 _144607 _144645 P p lt2 s f pat g a).
Proof. exact (@lem17265 (term317 _144529 _144530 _144607 P p lt2 s a f g) ((pat f a) = (pat g a))). Qed.
Lemma lem8204606 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term398 _144529 _144530 _144607 _144645 P p lt2 s f pat g a) = (term426 _144529 _144530 _144607 _144645 P p lt2 s f pat g a).
Proof. exact (TRANS (@lem8204605 _144529 _144530 _144607 _144645 P p lt2 s f pat g a) (@lem8204604 _144529 _144530 _144607 _144645 P p lt2 s f pat g a)). Qed.
Lemma lem8204607 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) : (term399 _144529 _144530 _144607 _144645 P p lt2 s f pat g) = (term427 _144529 _144530 _144607 _144645 P p lt2 s f pat g).
Proof. exact (fun_ext (fun a : P => @lem8204606 _144529 _144530 _144607 _144645 P p lt2 s f pat g a)). Qed.
Lemma lem8204608 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8204609 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) : (term400 _144529 _144530 _144607 _144645 P p lt2 s f pat g) = (term428 _144529 _144530 _144607 _144645 P p lt2 s f pat g).
Proof. exact (MK_COMB (@lem8204608 P) (@lem8204607 _144529 _144530 _144607 _144645 P p lt2 s f pat g)). Qed.
Lemma lem8204610 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) : (term401 _144529 _144530 _144607 _144645 P p lt2 s f pat) = (term429 _144529 _144530 _144607 _144645 P p lt2 s f pat).
Proof. exact (fun_ext (fun g : _144530 -> _144607 => @lem8204609 _144529 _144530 _144607 _144645 P p lt2 s f pat g)). Qed.
Lemma lem8204611 {_144530 _144607 : Type'} : (@all (_144530 -> _144607)) = (@all (_144530 -> _144607)).
Proof. exact (eq_refl (@all (_144530 -> _144607))). Qed.
Lemma lem8204612 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) : (term402 _144529 _144530 _144607 _144645 P p lt2 s f pat) = (term430 _144529 _144530 _144607 _144645 P p lt2 s f pat).
Proof. exact (MK_COMB (@lem8204611 _144530 _144607) (@lem8204610 _144529 _144530 _144607 _144645 P p lt2 s f pat)). Qed.
Lemma lem8204613 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) : (term403 _144529 _144530 _144607 _144645 P p lt2 s pat) = (term431 _144529 _144530 _144607 _144645 P p lt2 s pat).
Proof. exact (fun_ext (fun f : _144530 -> _144607 => @lem8204612 _144529 _144530 _144607 _144645 P p lt2 s f pat)). Qed.
Lemma lem8204614 {_144530 _144607 : Type'} : (@all (_144530 -> _144607)) = (@all (_144530 -> _144607)).
Proof. exact (eq_refl (@all (_144530 -> _144607))). Qed.
Lemma lem8204615 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) : (term141 _144529 _144530 _144607 _144645 P p lt2 s pat) = (term432 _144529 _144530 _144607 _144645 P p lt2 s pat).
Proof. exact (MK_COMB (@lem8204614 _144530 _144607) (@lem8204613 _144529 _144530 _144607 _144645 P p lt2 s pat)). Qed.
Lemma lem8204722 {A : Type'} (P : Prop) (Q : A -> Prop) : (term433 A P Q) = (term434 A P Q).
Proof. exact (EQ_MP (@lem18911 A P Q) (@lem18910 A P Q)). Qed.
Lemma lem8204723 {_144530 : Type'} (P : Prop) (Q : _144530 -> Prop) : (term433 _144530 P Q) = (term434 _144530 P Q).
Proof. exact (@lem8204722 _144530 P Q). Qed.
Lemma lem8204724 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term435 _144529 _144530 _144607 P p lt2 s a f g) = (term436 _144529 _144530 _144607 P p lt2 s a f g).
Proof. exact (@lem8204723 _144530 (term437 _144530 _144607 P p g a) (term414 _144529 _144530 _144607 P lt2 s a f g)). Qed.
Lemma lem8204725 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (z : _144530) : (term438 _144529 _144530 _144607 P lt2 s a f g z) = (term405 _144529 _144530 _144607 P lt2 s a f g z).
Proof. exact (eq_refl (term438 _144529 _144530 _144607 P lt2 s a f g z)). Qed.
Lemma lem8204726 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term439 _144529 _144530 _144607 P lt2 s a f g) = (term414 _144529 _144530 _144607 P lt2 s a f g).
Proof. exact (fun_ext (fun z : _144530 => @lem8204725 _144529 _144530 _144607 P lt2 s a f g z)). Qed.
Lemma lem8204727 {_144530 : Type'} : (@ex _144530) = (@ex _144530).
Proof. exact (eq_refl (@ex _144530)). Qed.
Lemma lem8204728 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term440 _144529 _144530 _144607 P lt2 s a f g) = (term415 _144529 _144530 _144607 P lt2 s a f g).
Proof. exact (MK_COMB (@lem8204727 _144530) (@lem8204726 _144529 _144530 _144607 P lt2 s a f g)). Qed.
Lemma lem8204729 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term416 _144530 _144607 P p g a) = (term416 _144530 _144607 P p g a).
Proof. exact (eq_refl (term416 _144530 _144607 P p g a)). Qed.
Lemma lem8204730 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term435 _144529 _144530 _144607 P p lt2 s a f g) = (term418 _144529 _144530 _144607 P p lt2 s a f g).
Proof. exact (MK_COMB (@lem8204729 _144530 _144607 P p g a) (@lem8204728 _144529 _144530 _144607 P lt2 s a f g)). Qed.
Lemma lem8204731 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8204732 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term441 _144529 _144530 _144607 P p lt2 s a f g) = (term442 _144529 _144530 _144607 P p lt2 s a f g).
Proof. exact (MK_COMB (@lem8204731) (@lem8204730 _144529 _144530 _144607 P p lt2 s a f g)). Qed.
Lemma lem8204733 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (z : _144530) : (term438 _144529 _144530 _144607 P lt2 s a f g z) = (term405 _144529 _144530 _144607 P lt2 s a f g z).
Proof. exact (eq_refl (term438 _144529 _144530 _144607 P lt2 s a f g z)). Qed.
Lemma lem8204734 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term416 _144530 _144607 P p g a) = (term416 _144530 _144607 P p g a).
Proof. exact (eq_refl (term416 _144530 _144607 P p g a)). Qed.
Lemma lem8204735 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (z : _144530) : (term443 _144529 _144530 _144607 P p lt2 s a f g z) = (term444 _144529 _144530 _144607 P p lt2 s a f g z).
Proof. exact (MK_COMB (@lem8204734 _144530 _144607 P p g a) (@lem8204733 _144529 _144530 _144607 P lt2 s a f g z)). Qed.
Lemma lem8204736 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term445 _144529 _144530 _144607 P p lt2 s a f g) = (term446 _144529 _144530 _144607 P p lt2 s a f g).
Proof. exact (fun_ext (fun z : _144530 => @lem8204735 _144529 _144530 _144607 P p lt2 s a f g z)). Qed.
Lemma lem8204737 {_144530 : Type'} : (@ex _144530) = (@ex _144530).
Proof. exact (eq_refl (@ex _144530)). Qed.
Lemma lem8204738 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term436 _144529 _144530 _144607 P p lt2 s a f g) = (term447 _144529 _144530 _144607 P p lt2 s a f g).
Proof. exact (MK_COMB (@lem8204737 _144530) (@lem8204736 _144529 _144530 _144607 P p lt2 s a f g)). Qed.
Lemma lem8204739 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : ((term435 _144529 _144530 _144607 P p lt2 s a f g) = (term436 _144529 _144530 _144607 P p lt2 s a f g)) = ((term418 _144529 _144530 _144607 P p lt2 s a f g) = (term447 _144529 _144530 _144607 P p lt2 s a f g)).
Proof. exact (MK_COMB (@lem8204732 _144529 _144530 _144607 P p lt2 s a f g) (@lem8204738 _144529 _144530 _144607 P p lt2 s a f g)). Qed.
Lemma lem8204740 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term418 _144529 _144530 _144607 P p lt2 s a f g) = (term447 _144529 _144530 _144607 P p lt2 s a f g).
Proof. exact (EQ_MP (@lem8204739 _144529 _144530 _144607 P p lt2 s a f g) (@lem8204724 _144529 _144530 _144607 P p lt2 s a f g)). Qed.
Lemma lem8204741 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) : (term416 _144530 _144607 P p f a) = (term416 _144530 _144607 P p f a).
Proof. exact (eq_refl (term416 _144530 _144607 P p f a)). Qed.
Lemma lem8204742 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term421 _144529 _144530 _144607 P p lt2 s a f g) = (term448 _144529 _144530 _144607 P p lt2 s a f g).
Proof. exact (MK_COMB (@lem8204741 _144530 _144607 P p f a) (@lem8204740 _144529 _144530 _144607 P p lt2 s a f g)). Qed.
Lemma lem8204744 {A : Type'} (P : Prop) (Q : A -> Prop) : (term433 A P Q) = (term434 A P Q).
Proof. exact (EQ_MP (@lem18911 A P Q) (@lem18910 A P Q)). Qed.
Lemma lem8204745 {_144530 : Type'} (P : Prop) (Q : _144530 -> Prop) : (term433 _144530 P Q) = (term434 _144530 P Q).
Proof. exact (@lem8204744 _144530 P Q). Qed.
Lemma lem8204746 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term449 _144529 _144530 _144607 P p lt2 s a f g) = (term450 _144529 _144530 _144607 P p lt2 s a f g).
Proof. exact (@lem8204745 _144530 (term437 _144530 _144607 P p f a) (term446 _144529 _144530 _144607 P p lt2 s a f g)). Qed.
Lemma lem8204747 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (z : _144530) : (term451 _144529 _144530 _144607 P p lt2 s a f g z) = (term444 _144529 _144530 _144607 P p lt2 s a f g z).
Proof. exact (eq_refl (term451 _144529 _144530 _144607 P p lt2 s a f g z)). Qed.
Lemma lem8204748 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term452 _144529 _144530 _144607 P p lt2 s a f g) = (term446 _144529 _144530 _144607 P p lt2 s a f g).
Proof. exact (fun_ext (fun z : _144530 => @lem8204747 _144529 _144530 _144607 P p lt2 s a f g z)). Qed.
Lemma lem8204749 {_144530 : Type'} : (@ex _144530) = (@ex _144530).
Proof. exact (eq_refl (@ex _144530)). Qed.
Lemma lem8204750 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term453 _144529 _144530 _144607 P p lt2 s a f g) = (term447 _144529 _144530 _144607 P p lt2 s a f g).
Proof. exact (MK_COMB (@lem8204749 _144530) (@lem8204748 _144529 _144530 _144607 P p lt2 s a f g)). Qed.
Lemma lem8204751 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) : (term416 _144530 _144607 P p f a) = (term416 _144530 _144607 P p f a).
Proof. exact (eq_refl (term416 _144530 _144607 P p f a)). Qed.
Lemma lem8204752 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term449 _144529 _144530 _144607 P p lt2 s a f g) = (term448 _144529 _144530 _144607 P p lt2 s a f g).
Proof. exact (MK_COMB (@lem8204751 _144530 _144607 P p f a) (@lem8204750 _144529 _144530 _144607 P p lt2 s a f g)). Qed.
Lemma lem8204753 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8204754 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term454 _144529 _144530 _144607 P p lt2 s a f g) = (term455 _144529 _144530 _144607 P p lt2 s a f g).
Proof. exact (MK_COMB (@lem8204753) (@lem8204752 _144529 _144530 _144607 P p lt2 s a f g)). Qed.
Lemma lem8204755 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (z : _144530) : (term451 _144529 _144530 _144607 P p lt2 s a f g z) = (term444 _144529 _144530 _144607 P p lt2 s a f g z).
Proof. exact (eq_refl (term451 _144529 _144530 _144607 P p lt2 s a f g z)). Qed.
Lemma lem8204756 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) : (term416 _144530 _144607 P p f a) = (term416 _144530 _144607 P p f a).
Proof. exact (eq_refl (term416 _144530 _144607 P p f a)). Qed.
Lemma lem8204757 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (z : _144530) : (term456 _144529 _144530 _144607 P p lt2 s a f g z) = (term457 _144529 _144530 _144607 P p lt2 s a f g z).
Proof. exact (MK_COMB (@lem8204756 _144530 _144607 P p f a) (@lem8204755 _144529 _144530 _144607 P p lt2 s a f g z)). Qed.
Lemma lem8204758 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term458 _144529 _144530 _144607 P p lt2 s a f g) = (term459 _144529 _144530 _144607 P p lt2 s a f g).
Proof. exact (fun_ext (fun z : _144530 => @lem8204757 _144529 _144530 _144607 P p lt2 s a f g z)). Qed.
Lemma lem8204759 {_144530 : Type'} : (@ex _144530) = (@ex _144530).
Proof. exact (eq_refl (@ex _144530)). Qed.
Lemma lem8204760 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term450 _144529 _144530 _144607 P p lt2 s a f g) = (term460 _144529 _144530 _144607 P p lt2 s a f g).
Proof. exact (MK_COMB (@lem8204759 _144530) (@lem8204758 _144529 _144530 _144607 P p lt2 s a f g)). Qed.
Lemma lem8204761 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : ((term449 _144529 _144530 _144607 P p lt2 s a f g) = (term450 _144529 _144530 _144607 P p lt2 s a f g)) = ((term448 _144529 _144530 _144607 P p lt2 s a f g) = (term460 _144529 _144530 _144607 P p lt2 s a f g)).
Proof. exact (MK_COMB (@lem8204754 _144529 _144530 _144607 P p lt2 s a f g) (@lem8204760 _144529 _144530 _144607 P p lt2 s a f g)). Qed.
Lemma lem8204762 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term448 _144529 _144530 _144607 P p lt2 s a f g) = (term460 _144529 _144530 _144607 P p lt2 s a f g).
Proof. exact (EQ_MP (@lem8204761 _144529 _144530 _144607 P p lt2 s a f g) (@lem8204746 _144529 _144530 _144607 P p lt2 s a f g)). Qed.
Lemma lem8204763 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term421 _144529 _144530 _144607 P p lt2 s a f g) = (term460 _144529 _144530 _144607 P p lt2 s a f g).
Proof. exact (TRANS (@lem8204742 _144529 _144530 _144607 P p lt2 s a f g) (@lem8204762 _144529 _144530 _144607 P p lt2 s a f g)). Qed.
Lemma lem8204764 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8204765 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term424 _144529 _144530 _144607 P p lt2 s a f g) = (term461 _144529 _144530 _144607 P p lt2 s a f g).
Proof. exact (MK_COMB (@lem8204764) (@lem8204763 _144529 _144530 _144607 P p lt2 s a f g)). Qed.
Lemma lem8204766 {_144530 _144607 _144645 P : Type'} (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : ((pat f a) = (pat g a)) = ((pat f a) = (pat g a)).
Proof. exact (eq_refl ((pat f a) = (pat g a))). Qed.
Lemma lem8204767 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term426 _144529 _144530 _144607 _144645 P p lt2 s f pat g a) = (term462 _144529 _144530 _144607 _144645 P p lt2 s f pat g a).
Proof. exact (MK_COMB (@lem8204765 _144529 _144530 _144607 P p lt2 s a f g) (@lem8204766 _144530 _144607 _144645 P f pat g a)). Qed.
Lemma lem8204769 {A : Type'} (P : A -> Prop) (Q : Prop) : (term463 A P Q) = (term464 A P Q).
Proof. exact (EQ_MP (@lem18905 A P Q) (@lem18904 A P Q)). Qed.
Lemma lem8204770 {_144530 : Type'} (P : _144530 -> Prop) (Q : Prop) : (term463 _144530 P Q) = (term464 _144530 P Q).
Proof. exact (@lem8204769 _144530 P Q). Qed.
Lemma lem8204771 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term465 _144529 _144530 _144607 _144645 P p lt2 s f pat g a) = (term466 _144529 _144530 _144607 _144645 P p lt2 s f pat g a).
Proof. exact (@lem8204770 _144530 (term459 _144529 _144530 _144607 P p lt2 s a f g) ((pat f a) = (pat g a))). Qed.
Lemma lem8204772 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (z : _144530) : (term467 _144529 _144530 _144607 P p lt2 s a f g z) = (term457 _144529 _144530 _144607 P p lt2 s a f g z).
Proof. exact (eq_refl (term467 _144529 _144530 _144607 P p lt2 s a f g z)). Qed.
Lemma lem8204773 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term468 _144529 _144530 _144607 P p lt2 s a f g) = (term459 _144529 _144530 _144607 P p lt2 s a f g).
Proof. exact (fun_ext (fun z : _144530 => @lem8204772 _144529 _144530 _144607 P p lt2 s a f g z)). Qed.
Lemma lem8204774 {_144530 : Type'} : (@ex _144530) = (@ex _144530).
Proof. exact (eq_refl (@ex _144530)). Qed.
Lemma lem8204775 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term469 _144529 _144530 _144607 P p lt2 s a f g) = (term460 _144529 _144530 _144607 P p lt2 s a f g).
Proof. exact (MK_COMB (@lem8204774 _144530) (@lem8204773 _144529 _144530 _144607 P p lt2 s a f g)). Qed.
Lemma lem8204776 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8204777 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term470 _144529 _144530 _144607 P p lt2 s a f g) = (term461 _144529 _144530 _144607 P p lt2 s a f g).
Proof. exact (MK_COMB (@lem8204776) (@lem8204775 _144529 _144530 _144607 P p lt2 s a f g)). Qed.
Lemma lem8204778 {_144530 _144607 _144645 P : Type'} (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : ((pat f a) = (pat g a)) = ((pat f a) = (pat g a)).
Proof. exact (eq_refl ((pat f a) = (pat g a))). Qed.
Lemma lem8204779 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term465 _144529 _144530 _144607 _144645 P p lt2 s f pat g a) = (term462 _144529 _144530 _144607 _144645 P p lt2 s f pat g a).
Proof. exact (MK_COMB (@lem8204777 _144529 _144530 _144607 P p lt2 s a f g) (@lem8204778 _144530 _144607 _144645 P f pat g a)). Qed.
Lemma lem8204780 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8204781 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term471 _144529 _144530 _144607 _144645 P p lt2 s f pat g a) = (term472 _144529 _144530 _144607 _144645 P p lt2 s f pat g a).
Proof. exact (MK_COMB (@lem8204780) (@lem8204779 _144529 _144530 _144607 _144645 P p lt2 s f pat g a)). Qed.
Lemma lem8204782 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (z : _144530) : (term467 _144529 _144530 _144607 P p lt2 s a f g z) = (term457 _144529 _144530 _144607 P p lt2 s a f g z).
Proof. exact (eq_refl (term467 _144529 _144530 _144607 P p lt2 s a f g z)). Qed.
Lemma lem8204783 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8204784 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (z : _144530) : (term473 _144529 _144530 _144607 P p lt2 s a f g z) = (term474 _144529 _144530 _144607 P p lt2 s a f g z).
Proof. exact (MK_COMB (@lem8204783) (@lem8204782 _144529 _144530 _144607 P p lt2 s a f g z)). Qed.
Lemma lem8204785 {_144530 _144607 _144645 P : Type'} (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : ((pat f a) = (pat g a)) = ((pat f a) = (pat g a)).
Proof. exact (eq_refl ((pat f a) = (pat g a))). Qed.
Lemma lem8204786 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : _144530) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term475 _144529 _144530 _144607 _144645 P p lt2 s z f pat g a) = (term476 _144529 _144530 _144607 _144645 P p lt2 s z f pat g a).
Proof. exact (MK_COMB (@lem8204784 _144529 _144530 _144607 P p lt2 s a f g z) (@lem8204785 _144530 _144607 _144645 P f pat g a)). Qed.
Lemma lem8204787 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term477 _144529 _144530 _144607 _144645 P p lt2 s f pat g a) = (term478 _144529 _144530 _144607 _144645 P p lt2 s f pat g a).
Proof. exact (fun_ext (fun z : _144530 => @lem8204786 _144529 _144530 _144607 _144645 P p lt2 s z f pat g a)). Qed.
Lemma lem8204788 {_144530 : Type'} : (@ex _144530) = (@ex _144530).
Proof. exact (eq_refl (@ex _144530)). Qed.
Lemma lem8204789 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term466 _144529 _144530 _144607 _144645 P p lt2 s f pat g a) = (term479 _144529 _144530 _144607 _144645 P p lt2 s f pat g a).
Proof. exact (MK_COMB (@lem8204788 _144530) (@lem8204787 _144529 _144530 _144607 _144645 P p lt2 s f pat g a)). Qed.
Lemma lem8204790 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : ((term465 _144529 _144530 _144607 _144645 P p lt2 s f pat g a) = (term466 _144529 _144530 _144607 _144645 P p lt2 s f pat g a)) = ((term462 _144529 _144530 _144607 _144645 P p lt2 s f pat g a) = (term479 _144529 _144530 _144607 _144645 P p lt2 s f pat g a)).
Proof. exact (MK_COMB (@lem8204781 _144529 _144530 _144607 _144645 P p lt2 s f pat g a) (@lem8204789 _144529 _144530 _144607 _144645 P p lt2 s f pat g a)). Qed.
Lemma lem8204791 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term462 _144529 _144530 _144607 _144645 P p lt2 s f pat g a) = (term479 _144529 _144530 _144607 _144645 P p lt2 s f pat g a).
Proof. exact (EQ_MP (@lem8204790 _144529 _144530 _144607 _144645 P p lt2 s f pat g a) (@lem8204771 _144529 _144530 _144607 _144645 P p lt2 s f pat g a)). Qed.
Lemma lem8204792 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term426 _144529 _144530 _144607 _144645 P p lt2 s f pat g a) = (term479 _144529 _144530 _144607 _144645 P p lt2 s f pat g a).
Proof. exact (TRANS (@lem8204767 _144529 _144530 _144607 _144645 P p lt2 s f pat g a) (@lem8204791 _144529 _144530 _144607 _144645 P p lt2 s f pat g a)). Qed.
Lemma lem8204793 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) : (term427 _144529 _144530 _144607 _144645 P p lt2 s f pat g) = (term480 _144529 _144530 _144607 _144645 P p lt2 s f pat g).
Proof. exact (fun_ext (fun a : P => @lem8204792 _144529 _144530 _144607 _144645 P p lt2 s f pat g a)). Qed.
Lemma lem8204794 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8204795 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) : (term428 _144529 _144530 _144607 _144645 P p lt2 s f pat g) = (term481 _144529 _144530 _144607 _144645 P p lt2 s f pat g).
Proof. exact (MK_COMB (@lem8204794 P) (@lem8204793 _144529 _144530 _144607 _144645 P p lt2 s f pat g)). Qed.
Lemma lem8204797 {A B : Type'} (P : type1413 A B) : (term482 A B P) = (term483 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem8204798 {_144530 P : Type'} (P' : type1470 _144530 P) : (term484 _144530 P P') = (term485 _144530 P P').
Proof. exact (@lem8204797 P _144530 P'). Qed.
Lemma lem8204799 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) : (term486 _144529 _144530 _144607 _144645 P p lt2 s f pat g) = (term487 _144529 _144530 _144607 _144645 P p lt2 s f pat g).
Proof. exact (@lem8204798 _144530 P (term488 _144529 _144530 _144607 _144645 P p lt2 s f pat g)). Qed.
Lemma lem8204800 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term489 _144529 _144530 _144607 _144645 P p lt2 s f pat g a) = (term478 _144529 _144530 _144607 _144645 P p lt2 s f pat g a).
Proof. exact (eq_refl (term489 _144529 _144530 _144607 _144645 P p lt2 s f pat g a)). Qed.
Lemma lem8204801 {_144530 : Type'} (z : _144530) : z = z.
Proof. exact (eq_refl z). Qed.
Lemma lem8204802 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) (z : _144530) : (term490 _144529 _144530 _144607 _144645 P p lt2 s f pat g a z) = (term491 _144529 _144530 _144607 _144645 P p lt2 s f pat g a z).
Proof. exact (MK_COMB (@lem8204800 _144529 _144530 _144607 _144645 P p lt2 s f pat g a) (@lem8204801 _144530 z)). Qed.
Lemma lem8204803 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : _144530) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term491 _144529 _144530 _144607 _144645 P p lt2 s f pat g a z) = (term476 _144529 _144530 _144607 _144645 P p lt2 s z f pat g a).
Proof. exact (eq_refl (term491 _144529 _144530 _144607 _144645 P p lt2 s f pat g a z)). Qed.
Lemma lem8204804 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : _144530) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term490 _144529 _144530 _144607 _144645 P p lt2 s f pat g a z) = (term476 _144529 _144530 _144607 _144645 P p lt2 s z f pat g a).
Proof. exact (TRANS (@lem8204802 _144529 _144530 _144607 _144645 P p lt2 s f pat g a z) (@lem8204803 _144529 _144530 _144607 _144645 P p lt2 s z f pat g a)). Qed.
Lemma lem8204805 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term492 _144529 _144530 _144607 _144645 P p lt2 s f pat g a) = (term478 _144529 _144530 _144607 _144645 P p lt2 s f pat g a).
Proof. exact (fun_ext (fun z : _144530 => @lem8204804 _144529 _144530 _144607 _144645 P p lt2 s z f pat g a)). Qed.
Lemma lem8204806 {_144530 : Type'} : (@ex _144530) = (@ex _144530).
Proof. exact (eq_refl (@ex _144530)). Qed.
Lemma lem8204807 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term493 _144529 _144530 _144607 _144645 P p lt2 s f pat g a) = (term479 _144529 _144530 _144607 _144645 P p lt2 s f pat g a).
Proof. exact (MK_COMB (@lem8204806 _144530) (@lem8204805 _144529 _144530 _144607 _144645 P p lt2 s f pat g a)). Qed.
Lemma lem8204808 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) : (term494 _144529 _144530 _144607 _144645 P p lt2 s f pat g) = (term480 _144529 _144530 _144607 _144645 P p lt2 s f pat g).
Proof. exact (fun_ext (fun a : P => @lem8204807 _144529 _144530 _144607 _144645 P p lt2 s f pat g a)). Qed.
Lemma lem8204809 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8204810 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) : (term486 _144529 _144530 _144607 _144645 P p lt2 s f pat g) = (term481 _144529 _144530 _144607 _144645 P p lt2 s f pat g).
Proof. exact (MK_COMB (@lem8204809 P) (@lem8204808 _144529 _144530 _144607 _144645 P p lt2 s f pat g)). Qed.
Lemma lem8204811 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8204812 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) : (term495 _144529 _144530 _144607 _144645 P p lt2 s f pat g) = (term496 _144529 _144530 _144607 _144645 P p lt2 s f pat g).
Proof. exact (MK_COMB (@lem8204811) (@lem8204810 _144529 _144530 _144607 _144645 P p lt2 s f pat g)). Qed.
Lemma lem8204813 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term489 _144529 _144530 _144607 _144645 P p lt2 s f pat g a) = (term478 _144529 _144530 _144607 _144645 P p lt2 s f pat g a).
Proof. exact (eq_refl (term489 _144529 _144530 _144607 _144645 P p lt2 s f pat g a)). Qed.
Lemma lem8204814 {_144530 P : Type'} (z : P -> _144530) (a : P) : (z a) = (z a).
Proof. exact (eq_refl (z a)). Qed.
Lemma lem8204815 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (z : P -> _144530) (a : P) : (term497 _144529 _144530 _144607 _144645 P p lt2 s f pat g z a) = (term498 _144529 _144530 _144607 _144645 P p lt2 s f pat g z a).
Proof. exact (MK_COMB (@lem8204813 _144529 _144530 _144607 _144645 P p lt2 s f pat g a) (@lem8204814 _144530 P z a)). Qed.
Lemma lem8204816 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : P -> _144530) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term498 _144529 _144530 _144607 _144645 P p lt2 s f pat g z a) = (term499 _144529 _144530 _144607 _144645 P p lt2 s z f pat g a).
Proof. exact (eq_refl (term498 _144529 _144530 _144607 _144645 P p lt2 s f pat g z a)). Qed.
Lemma lem8204817 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : P -> _144530) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term497 _144529 _144530 _144607 _144645 P p lt2 s f pat g z a) = (term499 _144529 _144530 _144607 _144645 P p lt2 s z f pat g a).
Proof. exact (TRANS (@lem8204815 _144529 _144530 _144607 _144645 P p lt2 s f pat g z a) (@lem8204816 _144529 _144530 _144607 _144645 P p lt2 s z f pat g a)). Qed.
Lemma lem8204818 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : P -> _144530) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) : (term500 _144529 _144530 _144607 _144645 P p lt2 s f pat g z) = (term501 _144529 _144530 _144607 _144645 P p lt2 s z f pat g).
Proof. exact (fun_ext (fun a : P => @lem8204817 _144529 _144530 _144607 _144645 P p lt2 s z f pat g a)). Qed.
Lemma lem8204819 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8204820 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : P -> _144530) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) : (term502 _144529 _144530 _144607 _144645 P p lt2 s f pat g z) = (term503 _144529 _144530 _144607 _144645 P p lt2 s z f pat g).
Proof. exact (MK_COMB (@lem8204819 P) (@lem8204818 _144529 _144530 _144607 _144645 P p lt2 s z f pat g)). Qed.
Lemma lem8204821 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) : (term504 _144529 _144530 _144607 _144645 P p lt2 s f pat g) = (term505 _144529 _144530 _144607 _144645 P p lt2 s f pat g).
Proof. exact (fun_ext (fun z : P -> _144530 => @lem8204820 _144529 _144530 _144607 _144645 P p lt2 s z f pat g)). Qed.
Lemma lem8204822 {_144530 P : Type'} : (@ex (P -> _144530)) = (@ex (P -> _144530)).
Proof. exact (eq_refl (@ex (P -> _144530))). Qed.
Lemma lem8204823 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) : (term487 _144529 _144530 _144607 _144645 P p lt2 s f pat g) = (term506 _144529 _144530 _144607 _144645 P p lt2 s f pat g).
Proof. exact (MK_COMB (@lem8204822 _144530 P) (@lem8204821 _144529 _144530 _144607 _144645 P p lt2 s f pat g)). Qed.
Lemma lem8204824 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) : ((term486 _144529 _144530 _144607 _144645 P p lt2 s f pat g) = (term487 _144529 _144530 _144607 _144645 P p lt2 s f pat g)) = ((term481 _144529 _144530 _144607 _144645 P p lt2 s f pat g) = (term506 _144529 _144530 _144607 _144645 P p lt2 s f pat g)).
Proof. exact (MK_COMB (@lem8204812 _144529 _144530 _144607 _144645 P p lt2 s f pat g) (@lem8204823 _144529 _144530 _144607 _144645 P p lt2 s f pat g)). Qed.
Lemma lem8204825 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) : (term481 _144529 _144530 _144607 _144645 P p lt2 s f pat g) = (term506 _144529 _144530 _144607 _144645 P p lt2 s f pat g).
Proof. exact (EQ_MP (@lem8204824 _144529 _144530 _144607 _144645 P p lt2 s f pat g) (@lem8204799 _144529 _144530 _144607 _144645 P p lt2 s f pat g)). Qed.
Lemma lem8204826 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) : (term428 _144529 _144530 _144607 _144645 P p lt2 s f pat g) = (term506 _144529 _144530 _144607 _144645 P p lt2 s f pat g).
Proof. exact (TRANS (@lem8204795 _144529 _144530 _144607 _144645 P p lt2 s f pat g) (@lem8204825 _144529 _144530 _144607 _144645 P p lt2 s f pat g)). Qed.
Lemma lem8204827 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) : (term429 _144529 _144530 _144607 _144645 P p lt2 s f pat) = (term507 _144529 _144530 _144607 _144645 P p lt2 s f pat).
Proof. exact (fun_ext (fun g : _144530 -> _144607 => @lem8204826 _144529 _144530 _144607 _144645 P p lt2 s f pat g)). Qed.
Lemma lem8204828 {_144530 _144607 : Type'} : (@all (_144530 -> _144607)) = (@all (_144530 -> _144607)).
Proof. exact (eq_refl (@all (_144530 -> _144607))). Qed.
Lemma lem8204829 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) : (term430 _144529 _144530 _144607 _144645 P p lt2 s f pat) = (term508 _144529 _144530 _144607 _144645 P p lt2 s f pat).
Proof. exact (MK_COMB (@lem8204828 _144530 _144607) (@lem8204827 _144529 _144530 _144607 _144645 P p lt2 s f pat)). Qed.
Lemma lem8204831 {A B : Type'} (P : type1413 A B) : (term482 A B P) = (term483 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem8204832 {_144530 _144607 P : Type'} (P' : type537 _144530 _144607 P) : (term509 _144530 _144607 P P') = (term510 _144530 _144607 P P').
Proof. exact (@lem8204831 (_144530 -> _144607) (P -> _144530) P'). Qed.
Lemma lem8204833 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) : (term511 _144529 _144530 _144607 _144645 P p lt2 s f pat) = (term512 _144529 _144530 _144607 _144645 P p lt2 s f pat).
Proof. exact (@lem8204832 _144530 _144607 P (term513 _144529 _144530 _144607 _144645 P p lt2 s f pat)). Qed.
Lemma lem8204834 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) : (term514 _144529 _144530 _144607 _144645 P p lt2 s f pat g) = (term505 _144529 _144530 _144607 _144645 P p lt2 s f pat g).
Proof. exact (eq_refl (term514 _144529 _144530 _144607 _144645 P p lt2 s f pat g)). Qed.
Lemma lem8204835 {_144530 P : Type'} (z : P -> _144530) : z = z.
Proof. exact (eq_refl z). Qed.
Lemma lem8204836 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (z : P -> _144530) : (term515 _144529 _144530 _144607 _144645 P p lt2 s f pat g z) = (term516 _144529 _144530 _144607 _144645 P p lt2 s f pat g z).
Proof. exact (MK_COMB (@lem8204834 _144529 _144530 _144607 _144645 P p lt2 s f pat g) (@lem8204835 _144530 P z)). Qed.
Lemma lem8204837 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : P -> _144530) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) : (term516 _144529 _144530 _144607 _144645 P p lt2 s f pat g z) = (term503 _144529 _144530 _144607 _144645 P p lt2 s z f pat g).
Proof. exact (eq_refl (term516 _144529 _144530 _144607 _144645 P p lt2 s f pat g z)). Qed.
Lemma lem8204838 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : P -> _144530) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) : (term515 _144529 _144530 _144607 _144645 P p lt2 s f pat g z) = (term503 _144529 _144530 _144607 _144645 P p lt2 s z f pat g).
Proof. exact (TRANS (@lem8204836 _144529 _144530 _144607 _144645 P p lt2 s f pat g z) (@lem8204837 _144529 _144530 _144607 _144645 P p lt2 s z f pat g)). Qed.
Lemma lem8204839 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) : (term517 _144529 _144530 _144607 _144645 P p lt2 s f pat g) = (term505 _144529 _144530 _144607 _144645 P p lt2 s f pat g).
Proof. exact (fun_ext (fun z : P -> _144530 => @lem8204838 _144529 _144530 _144607 _144645 P p lt2 s z f pat g)). Qed.
Lemma lem8204840 {_144530 P : Type'} : (@ex (P -> _144530)) = (@ex (P -> _144530)).
Proof. exact (eq_refl (@ex (P -> _144530))). Qed.
Lemma lem8204841 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) : (term518 _144529 _144530 _144607 _144645 P p lt2 s f pat g) = (term506 _144529 _144530 _144607 _144645 P p lt2 s f pat g).
Proof. exact (MK_COMB (@lem8204840 _144530 P) (@lem8204839 _144529 _144530 _144607 _144645 P p lt2 s f pat g)). Qed.
Lemma lem8204842 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) : (term519 _144529 _144530 _144607 _144645 P p lt2 s f pat) = (term507 _144529 _144530 _144607 _144645 P p lt2 s f pat).
Proof. exact (fun_ext (fun g : _144530 -> _144607 => @lem8204841 _144529 _144530 _144607 _144645 P p lt2 s f pat g)). Qed.
Lemma lem8204843 {_144530 _144607 : Type'} : (@all (_144530 -> _144607)) = (@all (_144530 -> _144607)).
Proof. exact (eq_refl (@all (_144530 -> _144607))). Qed.
Lemma lem8204844 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) : (term511 _144529 _144530 _144607 _144645 P p lt2 s f pat) = (term508 _144529 _144530 _144607 _144645 P p lt2 s f pat).
Proof. exact (MK_COMB (@lem8204843 _144530 _144607) (@lem8204842 _144529 _144530 _144607 _144645 P p lt2 s f pat)). Qed.
Lemma lem8204845 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8204846 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) : (term520 _144529 _144530 _144607 _144645 P p lt2 s f pat) = (term521 _144529 _144530 _144607 _144645 P p lt2 s f pat).
Proof. exact (MK_COMB (@lem8204845) (@lem8204844 _144529 _144530 _144607 _144645 P p lt2 s f pat)). Qed.
Lemma lem8204847 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) : (term514 _144529 _144530 _144607 _144645 P p lt2 s f pat g) = (term505 _144529 _144530 _144607 _144645 P p lt2 s f pat g).
Proof. exact (eq_refl (term514 _144529 _144530 _144607 _144645 P p lt2 s f pat g)). Qed.
Lemma lem8204848 {_144530 _144607 P : Type'} (z : type557 _144530 _144607 P) (g : _144530 -> _144607) : (z g) = (z g).
Proof. exact (eq_refl (z g)). Qed.
Lemma lem8204849 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (z : type557 _144530 _144607 P) (g : _144530 -> _144607) : (term522 _144529 _144530 _144607 _144645 P p lt2 s f pat z g) = (term523 _144529 _144530 _144607 _144645 P p lt2 s f pat z g).
Proof. exact (MK_COMB (@lem8204847 _144529 _144530 _144607 _144645 P p lt2 s f pat g) (@lem8204848 _144530 _144607 P z g)). Qed.
Lemma lem8204850 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : type557 _144530 _144607 P) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) : (term523 _144529 _144530 _144607 _144645 P p lt2 s f pat z g) = (term524 _144529 _144530 _144607 _144645 P p lt2 s z f pat g).
Proof. exact (eq_refl (term523 _144529 _144530 _144607 _144645 P p lt2 s f pat z g)). Qed.
Lemma lem8204851 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : type557 _144530 _144607 P) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) : (term522 _144529 _144530 _144607 _144645 P p lt2 s f pat z g) = (term524 _144529 _144530 _144607 _144645 P p lt2 s z f pat g).
Proof. exact (TRANS (@lem8204849 _144529 _144530 _144607 _144645 P p lt2 s f pat z g) (@lem8204850 _144529 _144530 _144607 _144645 P p lt2 s z f pat g)). Qed.
Lemma lem8204852 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : type557 _144530 _144607 P) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) : (term525 _144529 _144530 _144607 _144645 P p lt2 s f pat z) = (term526 _144529 _144530 _144607 _144645 P p lt2 s z f pat).
Proof. exact (fun_ext (fun g : _144530 -> _144607 => @lem8204851 _144529 _144530 _144607 _144645 P p lt2 s z f pat g)). Qed.
Lemma lem8204853 {_144530 _144607 : Type'} : (@all (_144530 -> _144607)) = (@all (_144530 -> _144607)).
Proof. exact (eq_refl (@all (_144530 -> _144607))). Qed.
Lemma lem8204854 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : type557 _144530 _144607 P) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) : (term527 _144529 _144530 _144607 _144645 P p lt2 s f pat z) = (term528 _144529 _144530 _144607 _144645 P p lt2 s z f pat).
Proof. exact (MK_COMB (@lem8204853 _144530 _144607) (@lem8204852 _144529 _144530 _144607 _144645 P p lt2 s z f pat)). Qed.
Lemma lem8204855 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) : (term529 _144529 _144530 _144607 _144645 P p lt2 s f pat) = (term530 _144529 _144530 _144607 _144645 P p lt2 s f pat).
Proof. exact (fun_ext (fun z : type557 _144530 _144607 P => @lem8204854 _144529 _144530 _144607 _144645 P p lt2 s z f pat)). Qed.
Lemma lem8204856 {_144530 _144607 P : Type'} : (@ex ((_144530 -> _144607) -> P -> _144530)) = (@ex ((_144530 -> _144607) -> P -> _144530)).
Proof. exact (eq_refl (@ex ((_144530 -> _144607) -> P -> _144530))). Qed.
Lemma lem8204857 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) : (term512 _144529 _144530 _144607 _144645 P p lt2 s f pat) = (term531 _144529 _144530 _144607 _144645 P p lt2 s f pat).
Proof. exact (MK_COMB (@lem8204856 _144530 _144607 P) (@lem8204855 _144529 _144530 _144607 _144645 P p lt2 s f pat)). Qed.
Lemma lem8204858 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) : ((term511 _144529 _144530 _144607 _144645 P p lt2 s f pat) = (term512 _144529 _144530 _144607 _144645 P p lt2 s f pat)) = ((term508 _144529 _144530 _144607 _144645 P p lt2 s f pat) = (term531 _144529 _144530 _144607 _144645 P p lt2 s f pat)).
Proof. exact (MK_COMB (@lem8204846 _144529 _144530 _144607 _144645 P p lt2 s f pat) (@lem8204857 _144529 _144530 _144607 _144645 P p lt2 s f pat)). Qed.
Lemma lem8204859 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) : (term508 _144529 _144530 _144607 _144645 P p lt2 s f pat) = (term531 _144529 _144530 _144607 _144645 P p lt2 s f pat).
Proof. exact (EQ_MP (@lem8204858 _144529 _144530 _144607 _144645 P p lt2 s f pat) (@lem8204833 _144529 _144530 _144607 _144645 P p lt2 s f pat)). Qed.
Lemma lem8204860 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) : (term430 _144529 _144530 _144607 _144645 P p lt2 s f pat) = (term531 _144529 _144530 _144607 _144645 P p lt2 s f pat).
Proof. exact (TRANS (@lem8204829 _144529 _144530 _144607 _144645 P p lt2 s f pat) (@lem8204859 _144529 _144530 _144607 _144645 P p lt2 s f pat)). Qed.
Lemma lem8204861 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) : (term431 _144529 _144530 _144607 _144645 P p lt2 s pat) = (term532 _144529 _144530 _144607 _144645 P p lt2 s pat).
Proof. exact (fun_ext (fun f : _144530 -> _144607 => @lem8204860 _144529 _144530 _144607 _144645 P p lt2 s f pat)). Qed.
Lemma lem8204862 {_144530 _144607 : Type'} : (@all (_144530 -> _144607)) = (@all (_144530 -> _144607)).
Proof. exact (eq_refl (@all (_144530 -> _144607))). Qed.
Lemma lem8204863 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) : (term432 _144529 _144530 _144607 _144645 P p lt2 s pat) = (term533 _144529 _144530 _144607 _144645 P p lt2 s pat).
Proof. exact (MK_COMB (@lem8204862 _144530 _144607) (@lem8204861 _144529 _144530 _144607 _144645 P p lt2 s pat)). Qed.
Lemma lem8204865 {A B : Type'} (P : type1413 A B) : (term482 A B P) = (term483 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem8204866 {_144530 _144607 P : Type'} (P' : type495 _144530 _144607 P) : (term534 _144530 _144607 P P') = (term535 _144530 _144607 P P').
Proof. exact (@lem8204865 (_144530 -> _144607) (type557 _144530 _144607 P) P'). Qed.
Lemma lem8204867 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) : (term536 _144529 _144530 _144607 _144645 P p lt2 s pat) = (term537 _144529 _144530 _144607 _144645 P p lt2 s pat).
Proof. exact (@lem8204866 _144530 _144607 P (term538 _144529 _144530 _144607 _144645 P p lt2 s pat)). Qed.
Lemma lem8204868 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) : (term539 _144529 _144530 _144607 _144645 P p lt2 s pat f) = (term530 _144529 _144530 _144607 _144645 P p lt2 s f pat).
Proof. exact (eq_refl (term539 _144529 _144530 _144607 _144645 P p lt2 s pat f)). Qed.
Lemma lem8204869 {_144530 _144607 P : Type'} (z : type557 _144530 _144607 P) : z = z.
Proof. exact (eq_refl z). Qed.
Lemma lem8204870 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (z : type557 _144530 _144607 P) : (term540 _144529 _144530 _144607 _144645 P p lt2 s pat f z) = (term541 _144529 _144530 _144607 _144645 P p lt2 s f pat z).
Proof. exact (MK_COMB (@lem8204868 _144529 _144530 _144607 _144645 P p lt2 s f pat) (@lem8204869 _144530 _144607 P z)). Qed.
Lemma lem8204871 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : type557 _144530 _144607 P) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) : (term541 _144529 _144530 _144607 _144645 P p lt2 s f pat z) = (term528 _144529 _144530 _144607 _144645 P p lt2 s z f pat).
Proof. exact (eq_refl (term541 _144529 _144530 _144607 _144645 P p lt2 s f pat z)). Qed.
Lemma lem8204872 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : type557 _144530 _144607 P) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) : (term540 _144529 _144530 _144607 _144645 P p lt2 s pat f z) = (term528 _144529 _144530 _144607 _144645 P p lt2 s z f pat).
Proof. exact (TRANS (@lem8204870 _144529 _144530 _144607 _144645 P p lt2 s f pat z) (@lem8204871 _144529 _144530 _144607 _144645 P p lt2 s z f pat)). Qed.
Lemma lem8204873 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) : (term542 _144529 _144530 _144607 _144645 P p lt2 s pat f) = (term530 _144529 _144530 _144607 _144645 P p lt2 s f pat).
Proof. exact (fun_ext (fun z : type557 _144530 _144607 P => @lem8204872 _144529 _144530 _144607 _144645 P p lt2 s z f pat)). Qed.
Lemma lem8204874 {_144530 _144607 P : Type'} : (@ex ((_144530 -> _144607) -> P -> _144530)) = (@ex ((_144530 -> _144607) -> P -> _144530)).
Proof. exact (eq_refl (@ex ((_144530 -> _144607) -> P -> _144530))). Qed.
Lemma lem8204875 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) : (term543 _144529 _144530 _144607 _144645 P p lt2 s pat f) = (term531 _144529 _144530 _144607 _144645 P p lt2 s f pat).
Proof. exact (MK_COMB (@lem8204874 _144530 _144607 P) (@lem8204873 _144529 _144530 _144607 _144645 P p lt2 s f pat)). Qed.
Lemma lem8204876 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) : (term544 _144529 _144530 _144607 _144645 P p lt2 s pat) = (term532 _144529 _144530 _144607 _144645 P p lt2 s pat).
Proof. exact (fun_ext (fun f : _144530 -> _144607 => @lem8204875 _144529 _144530 _144607 _144645 P p lt2 s f pat)). Qed.
Lemma lem8204877 {_144530 _144607 : Type'} : (@all (_144530 -> _144607)) = (@all (_144530 -> _144607)).
Proof. exact (eq_refl (@all (_144530 -> _144607))). Qed.
Lemma lem8204878 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) : (term536 _144529 _144530 _144607 _144645 P p lt2 s pat) = (term533 _144529 _144530 _144607 _144645 P p lt2 s pat).
Proof. exact (MK_COMB (@lem8204877 _144530 _144607) (@lem8204876 _144529 _144530 _144607 _144645 P p lt2 s pat)). Qed.
Lemma lem8204879 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8204880 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) : (term545 _144529 _144530 _144607 _144645 P p lt2 s pat) = (term546 _144529 _144530 _144607 _144645 P p lt2 s pat).
Proof. exact (MK_COMB (@lem8204879) (@lem8204878 _144529 _144530 _144607 _144645 P p lt2 s pat)). Qed.
Lemma lem8204881 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) : (term539 _144529 _144530 _144607 _144645 P p lt2 s pat f) = (term530 _144529 _144530 _144607 _144645 P p lt2 s f pat).
Proof. exact (eq_refl (term539 _144529 _144530 _144607 _144645 P p lt2 s pat f)). Qed.
Lemma lem8204882 {_144530 _144607 P : Type'} (z : type518 _144530 _144607 P) (f : _144530 -> _144607) : (z f) = (z f).
Proof. exact (eq_refl (z f)). Qed.
Lemma lem8204883 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (z : type518 _144530 _144607 P) (f : _144530 -> _144607) : (term547 _144529 _144530 _144607 _144645 P p lt2 s pat z f) = (term548 _144529 _144530 _144607 _144645 P p lt2 s pat z f).
Proof. exact (MK_COMB (@lem8204881 _144529 _144530 _144607 _144645 P p lt2 s f pat) (@lem8204882 _144530 _144607 P z f)). Qed.
Lemma lem8204884 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : type518 _144530 _144607 P) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) : (term548 _144529 _144530 _144607 _144645 P p lt2 s pat z f) = (term549 _144529 _144530 _144607 _144645 P p lt2 s z f pat).
Proof. exact (eq_refl (term548 _144529 _144530 _144607 _144645 P p lt2 s pat z f)). Qed.
Lemma lem8204885 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : type518 _144530 _144607 P) (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) : (term547 _144529 _144530 _144607 _144645 P p lt2 s pat z f) = (term549 _144529 _144530 _144607 _144645 P p lt2 s z f pat).
Proof. exact (TRANS (@lem8204883 _144529 _144530 _144607 _144645 P p lt2 s pat z f) (@lem8204884 _144529 _144530 _144607 _144645 P p lt2 s z f pat)). Qed.
Lemma lem8204886 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : type518 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) : (term550 _144529 _144530 _144607 _144645 P p lt2 s pat z) = (term551 _144529 _144530 _144607 _144645 P p lt2 s z pat).
Proof. exact (fun_ext (fun f : _144530 -> _144607 => @lem8204885 _144529 _144530 _144607 _144645 P p lt2 s z f pat)). Qed.
Lemma lem8204887 {_144530 _144607 : Type'} : (@all (_144530 -> _144607)) = (@all (_144530 -> _144607)).
Proof. exact (eq_refl (@all (_144530 -> _144607))). Qed.
Lemma lem8204888 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : type518 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) : (term552 _144529 _144530 _144607 _144645 P p lt2 s pat z) = (term553 _144529 _144530 _144607 _144645 P p lt2 s z pat).
Proof. exact (MK_COMB (@lem8204887 _144530 _144607) (@lem8204886 _144529 _144530 _144607 _144645 P p lt2 s z pat)). Qed.
Lemma lem8204889 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) : (term554 _144529 _144530 _144607 _144645 P p lt2 s pat) = (term555 _144529 _144530 _144607 _144645 P p lt2 s pat).
Proof. exact (fun_ext (fun z : type518 _144530 _144607 P => @lem8204888 _144529 _144530 _144607 _144645 P p lt2 s z pat)). Qed.
Lemma lem8204890 {_144530 _144607 P : Type'} : (@ex ((_144530 -> _144607) -> (_144530 -> _144607) -> P -> _144530)) = (@ex ((_144530 -> _144607) -> (_144530 -> _144607) -> P -> _144530)).
Proof. exact (eq_refl (@ex ((_144530 -> _144607) -> (_144530 -> _144607) -> P -> _144530))). Qed.
Lemma lem8204891 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) : (term537 _144529 _144530 _144607 _144645 P p lt2 s pat) = (term556 _144529 _144530 _144607 _144645 P p lt2 s pat).
Proof. exact (MK_COMB (@lem8204890 _144530 _144607 P) (@lem8204889 _144529 _144530 _144607 _144645 P p lt2 s pat)). Qed.
Lemma lem8204892 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) : ((term536 _144529 _144530 _144607 _144645 P p lt2 s pat) = (term537 _144529 _144530 _144607 _144645 P p lt2 s pat)) = ((term533 _144529 _144530 _144607 _144645 P p lt2 s pat) = (term556 _144529 _144530 _144607 _144645 P p lt2 s pat)).
Proof. exact (MK_COMB (@lem8204880 _144529 _144530 _144607 _144645 P p lt2 s pat) (@lem8204891 _144529 _144530 _144607 _144645 P p lt2 s pat)). Qed.
Lemma lem8204893 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) : (term533 _144529 _144530 _144607 _144645 P p lt2 s pat) = (term556 _144529 _144530 _144607 _144645 P p lt2 s pat).
Proof. exact (EQ_MP (@lem8204892 _144529 _144530 _144607 _144645 P p lt2 s pat) (@lem8204867 _144529 _144530 _144607 _144645 P p lt2 s pat)). Qed.
Lemma lem8204895 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) : (term432 _144529 _144530 _144607 _144645 P p lt2 s pat) = (term556 _144529 _144530 _144607 _144645 P p lt2 s pat).
Proof. exact (TRANS (@lem8204863 _144529 _144530 _144607 _144645 P p lt2 s pat) (@lem8204893 _144529 _144530 _144607 _144645 P p lt2 s pat)). Qed.
Lemma lem8204896 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) : (term141 _144529 _144530 _144607 _144645 P p lt2 s pat) = (term556 _144529 _144530 _144607 _144645 P p lt2 s pat).
Proof. exact (TRANS (@lem8204615 _144529 _144530 _144607 _144645 P p lt2 s pat) (@lem8204895 _144529 _144530 _144607 _144645 P p lt2 s pat)). Qed.
Lemma lem8204897 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (h1 : term141 _144529 _144530 _144607 _144645 P p lt2 s pat) : term556 _144529 _144530 _144607 _144645 P p lt2 s pat.
Proof. exact (EQ_MP (@lem8204896 _144529 _144530 _144607 _144645 P p lt2 s pat) (@lem8204555 _144529 _144530 _144607 _144645 P p lt2 s pat h1)). Qed.
Lemma lem8204906 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (z : _144530) : (term404 _144529 _144530 _144607 P lt2 s a f g z) = (term405 _144529 _144530 _144607 P lt2 s a f g z).
Proof. exact (@lem17362 (term406 _144529 _144530 P lt2 z s a) ((f z) = (g z))). Qed.
Lemma lem8204907 {_144530 : Type'} (P : _144530 -> Prop) : (term407 _144530 P) = (term408 _144530 P).
Proof. exact (@lem18392 _144530 P). Qed.
Lemma lem8204908 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term409 _144529 _144530 _144607 P lt2 s a f g) = (term410 _144529 _144530 _144607 P lt2 s a f g).
Proof. exact (@lem8204907 _144530 (term397 _144529 _144530 _144607 P lt2 s a f g)). Qed.
Lemma lem8204909 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (z : _144530) : (term411 _144529 _144530 _144607 P lt2 s a f g z) = (term396 _144529 _144530 _144607 P lt2 s a f g z).
Proof. exact (eq_refl (term411 _144529 _144530 _144607 P lt2 s a f g z)). Qed.
Lemma lem8204910 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8204911 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (z : _144530) : (term412 _144529 _144530 _144607 P lt2 s a f g z) = (term404 _144529 _144530 _144607 P lt2 s a f g z).
Proof. exact (MK_COMB (@lem8204910) (@lem8204909 _144529 _144530 _144607 P lt2 s a f g z)). Qed.
Lemma lem8204912 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (z : _144530) : (term412 _144529 _144530 _144607 P lt2 s a f g z) = (term405 _144529 _144530 _144607 P lt2 s a f g z).
Proof. exact (TRANS (@lem8204911 _144529 _144530 _144607 P lt2 s a f g z) (@lem8204906 _144529 _144530 _144607 P lt2 s a f g z)). Qed.
Lemma lem8204913 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term413 _144529 _144530 _144607 P lt2 s a f g) = (term414 _144529 _144530 _144607 P lt2 s a f g).
Proof. exact (fun_ext (fun z : _144530 => @lem8204912 _144529 _144530 _144607 P lt2 s a f g z)). Qed.
Lemma lem8204914 {_144530 : Type'} : (@ex _144530) = (@ex _144530).
Proof. exact (eq_refl (@ex _144530)). Qed.
Lemma lem8204915 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term410 _144529 _144530 _144607 P lt2 s a f g) = (term415 _144529 _144530 _144607 P lt2 s a f g).
Proof. exact (MK_COMB (@lem8204914 _144530) (@lem8204913 _144529 _144530 _144607 P lt2 s a f g)). Qed.
Lemma lem8204916 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term409 _144529 _144530 _144607 P lt2 s a f g) = (term415 _144529 _144530 _144607 P lt2 s a f g).
Proof. exact (TRANS (@lem8204908 _144529 _144530 _144607 P lt2 s a f g) (@lem8204915 _144529 _144530 _144607 P lt2 s a f g)). Qed.
Lemma lem8204918 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term416 _144530 _144607 P p g a) = (term416 _144530 _144607 P p g a).
Proof. exact (eq_refl (term416 _144530 _144607 P p g a)). Qed.
Lemma lem8204919 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term417 _144529 _144530 _144607 P p lt2 s a f g) = (term418 _144529 _144530 _144607 P p lt2 s a f g).
Proof. exact (MK_COMB (@lem8204918 _144530 _144607 P p g a) (@lem8204916 _144529 _144530 _144607 P lt2 s a f g)). Qed.
Lemma lem8204920 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term419 _144529 _144530 _144607 P p lt2 s a f g) = (term417 _144529 _144530 _144607 P p lt2 s a f g).
Proof. exact (@lem17045 (p g a) (term165 _144529 _144530 _144607 P lt2 s a f g)). Qed.
Lemma lem8204921 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term419 _144529 _144530 _144607 P p lt2 s a f g) = (term418 _144529 _144530 _144607 P p lt2 s a f g).
Proof. exact (TRANS (@lem8204920 _144529 _144530 _144607 P p lt2 s a f g) (@lem8204919 _144529 _144530 _144607 P p lt2 s a f g)). Qed.
Lemma lem8204923 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) : (term416 _144530 _144607 P p f a) = (term416 _144530 _144607 P p f a).
Proof. exact (eq_refl (term416 _144530 _144607 P p f a)). Qed.
Lemma lem8204924 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term420 _144529 _144530 _144607 P p lt2 s a f g) = (term421 _144529 _144530 _144607 P p lt2 s a f g).
Proof. exact (MK_COMB (@lem8204923 _144530 _144607 P p f a) (@lem8204921 _144529 _144530 _144607 P p lt2 s a f g)). Qed.
Lemma lem8204925 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term422 _144529 _144530 _144607 P p lt2 s a f g) = (term420 _144529 _144530 _144607 P p lt2 s a f g).
Proof. exact (@lem17045 (p f a) (term318 _144529 _144530 _144607 P p lt2 s a f g)). Qed.
Lemma lem8204926 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term422 _144529 _144530 _144607 P p lt2 s a f g) = (term421 _144529 _144530 _144607 P p lt2 s a f g).
Proof. exact (TRANS (@lem8204925 _144529 _144530 _144607 P p lt2 s a f g) (@lem8204924 _144529 _144530 _144607 P p lt2 s a f g)). Qed.
Lemma lem8204927 {_144530 _144607 _144645 P : Type'} (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : ((e f a) = (e g a)) = ((e f a) = (e g a)).
Proof. exact (eq_refl ((e f a) = (e g a))). Qed.
Lemma lem8204928 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8204929 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term423 _144529 _144530 _144607 P p lt2 s a f g) = (term424 _144529 _144530 _144607 P p lt2 s a f g).
Proof. exact (MK_COMB (@lem8204928) (@lem8204926 _144529 _144530 _144607 P p lt2 s a f g)). Qed.
Lemma lem8204930 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term425 _144529 _144530 _144607 _144645 P p lt2 s f e g a) = (term426 _144529 _144530 _144607 _144645 P p lt2 s f e g a).
Proof. exact (MK_COMB (@lem8204929 _144529 _144530 _144607 P p lt2 s a f g) (@lem8204927 _144530 _144607 _144645 P f e g a)). Qed.
Lemma lem8204931 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term398 _144529 _144530 _144607 _144645 P p lt2 s f e g a) = (term425 _144529 _144530 _144607 _144645 P p lt2 s f e g a).
Proof. exact (@lem17265 (term317 _144529 _144530 _144607 P p lt2 s a f g) ((e f a) = (e g a))). Qed.
Lemma lem8204932 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term398 _144529 _144530 _144607 _144645 P p lt2 s f e g a) = (term426 _144529 _144530 _144607 _144645 P p lt2 s f e g a).
Proof. exact (TRANS (@lem8204931 _144529 _144530 _144607 _144645 P p lt2 s f e g a) (@lem8204930 _144529 _144530 _144607 _144645 P p lt2 s f e g a)). Qed.
Lemma lem8204933 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) : (term399 _144529 _144530 _144607 _144645 P p lt2 s f e g) = (term427 _144529 _144530 _144607 _144645 P p lt2 s f e g).
Proof. exact (fun_ext (fun a : P => @lem8204932 _144529 _144530 _144607 _144645 P p lt2 s f e g a)). Qed.
Lemma lem8204934 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8204935 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) : (term400 _144529 _144530 _144607 _144645 P p lt2 s f e g) = (term428 _144529 _144530 _144607 _144645 P p lt2 s f e g).
Proof. exact (MK_COMB (@lem8204934 P) (@lem8204933 _144529 _144530 _144607 _144645 P p lt2 s f e g)). Qed.
Lemma lem8204936 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) : (term401 _144529 _144530 _144607 _144645 P p lt2 s f e) = (term429 _144529 _144530 _144607 _144645 P p lt2 s f e).
Proof. exact (fun_ext (fun g : _144530 -> _144607 => @lem8204935 _144529 _144530 _144607 _144645 P p lt2 s f e g)). Qed.
Lemma lem8204937 {_144530 _144607 : Type'} : (@all (_144530 -> _144607)) = (@all (_144530 -> _144607)).
Proof. exact (eq_refl (@all (_144530 -> _144607))). Qed.
Lemma lem8204938 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) : (term402 _144529 _144530 _144607 _144645 P p lt2 s f e) = (term430 _144529 _144530 _144607 _144645 P p lt2 s f e).
Proof. exact (MK_COMB (@lem8204937 _144530 _144607) (@lem8204936 _144529 _144530 _144607 _144645 P p lt2 s f e)). Qed.
Lemma lem8204939 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (e : type564 _144530 _144607 _144645 P) : (term403 _144529 _144530 _144607 _144645 P p lt2 s e) = (term431 _144529 _144530 _144607 _144645 P p lt2 s e).
Proof. exact (fun_ext (fun f : _144530 -> _144607 => @lem8204938 _144529 _144530 _144607 _144645 P p lt2 s f e)). Qed.
Lemma lem8204940 {_144530 _144607 : Type'} : (@all (_144530 -> _144607)) = (@all (_144530 -> _144607)).
Proof. exact (eq_refl (@all (_144530 -> _144607))). Qed.
Lemma lem8204941 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (e : type564 _144530 _144607 _144645 P) : (term141 _144529 _144530 _144607 _144645 P p lt2 s e) = (term432 _144529 _144530 _144607 _144645 P p lt2 s e).
Proof. exact (MK_COMB (@lem8204940 _144530 _144607) (@lem8204939 _144529 _144530 _144607 _144645 P p lt2 s e)). Qed.
Lemma lem8205048 {A : Type'} (P : Prop) (Q : A -> Prop) : (term433 A P Q) = (term434 A P Q).
Proof. exact (EQ_MP (@lem18911 A P Q) (@lem18910 A P Q)). Qed.
Lemma lem8205049 {_144530 : Type'} (P : Prop) (Q : _144530 -> Prop) : (term433 _144530 P Q) = (term434 _144530 P Q).
Proof. exact (@lem8205048 _144530 P Q). Qed.
Lemma lem8205050 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term435 _144529 _144530 _144607 P p lt2 s a f g) = (term436 _144529 _144530 _144607 P p lt2 s a f g).
Proof. exact (@lem8205049 _144530 (term437 _144530 _144607 P p g a) (term414 _144529 _144530 _144607 P lt2 s a f g)). Qed.
Lemma lem8205051 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (z : _144530) : (term438 _144529 _144530 _144607 P lt2 s a f g z) = (term405 _144529 _144530 _144607 P lt2 s a f g z).
Proof. exact (eq_refl (term438 _144529 _144530 _144607 P lt2 s a f g z)). Qed.
Lemma lem8205052 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term439 _144529 _144530 _144607 P lt2 s a f g) = (term414 _144529 _144530 _144607 P lt2 s a f g).
Proof. exact (fun_ext (fun z : _144530 => @lem8205051 _144529 _144530 _144607 P lt2 s a f g z)). Qed.
Lemma lem8205053 {_144530 : Type'} : (@ex _144530) = (@ex _144530).
Proof. exact (eq_refl (@ex _144530)). Qed.
Lemma lem8205054 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term440 _144529 _144530 _144607 P lt2 s a f g) = (term415 _144529 _144530 _144607 P lt2 s a f g).
Proof. exact (MK_COMB (@lem8205053 _144530) (@lem8205052 _144529 _144530 _144607 P lt2 s a f g)). Qed.
Lemma lem8205055 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term416 _144530 _144607 P p g a) = (term416 _144530 _144607 P p g a).
Proof. exact (eq_refl (term416 _144530 _144607 P p g a)). Qed.
Lemma lem8205056 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term435 _144529 _144530 _144607 P p lt2 s a f g) = (term418 _144529 _144530 _144607 P p lt2 s a f g).
Proof. exact (MK_COMB (@lem8205055 _144530 _144607 P p g a) (@lem8205054 _144529 _144530 _144607 P lt2 s a f g)). Qed.
Lemma lem8205057 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8205058 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term441 _144529 _144530 _144607 P p lt2 s a f g) = (term442 _144529 _144530 _144607 P p lt2 s a f g).
Proof. exact (MK_COMB (@lem8205057) (@lem8205056 _144529 _144530 _144607 P p lt2 s a f g)). Qed.
Lemma lem8205059 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (z : _144530) : (term438 _144529 _144530 _144607 P lt2 s a f g z) = (term405 _144529 _144530 _144607 P lt2 s a f g z).
Proof. exact (eq_refl (term438 _144529 _144530 _144607 P lt2 s a f g z)). Qed.
Lemma lem8205060 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term416 _144530 _144607 P p g a) = (term416 _144530 _144607 P p g a).
Proof. exact (eq_refl (term416 _144530 _144607 P p g a)). Qed.
Lemma lem8205061 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (z : _144530) : (term443 _144529 _144530 _144607 P p lt2 s a f g z) = (term444 _144529 _144530 _144607 P p lt2 s a f g z).
Proof. exact (MK_COMB (@lem8205060 _144530 _144607 P p g a) (@lem8205059 _144529 _144530 _144607 P lt2 s a f g z)). Qed.
Lemma lem8205062 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term445 _144529 _144530 _144607 P p lt2 s a f g) = (term446 _144529 _144530 _144607 P p lt2 s a f g).
Proof. exact (fun_ext (fun z : _144530 => @lem8205061 _144529 _144530 _144607 P p lt2 s a f g z)). Qed.
Lemma lem8205063 {_144530 : Type'} : (@ex _144530) = (@ex _144530).
Proof. exact (eq_refl (@ex _144530)). Qed.
Lemma lem8205064 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term436 _144529 _144530 _144607 P p lt2 s a f g) = (term447 _144529 _144530 _144607 P p lt2 s a f g).
Proof. exact (MK_COMB (@lem8205063 _144530) (@lem8205062 _144529 _144530 _144607 P p lt2 s a f g)). Qed.
Lemma lem8205065 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : ((term435 _144529 _144530 _144607 P p lt2 s a f g) = (term436 _144529 _144530 _144607 P p lt2 s a f g)) = ((term418 _144529 _144530 _144607 P p lt2 s a f g) = (term447 _144529 _144530 _144607 P p lt2 s a f g)).
Proof. exact (MK_COMB (@lem8205058 _144529 _144530 _144607 P p lt2 s a f g) (@lem8205064 _144529 _144530 _144607 P p lt2 s a f g)). Qed.
Lemma lem8205066 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term418 _144529 _144530 _144607 P p lt2 s a f g) = (term447 _144529 _144530 _144607 P p lt2 s a f g).
Proof. exact (EQ_MP (@lem8205065 _144529 _144530 _144607 P p lt2 s a f g) (@lem8205050 _144529 _144530 _144607 P p lt2 s a f g)). Qed.
Lemma lem8205067 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) : (term416 _144530 _144607 P p f a) = (term416 _144530 _144607 P p f a).
Proof. exact (eq_refl (term416 _144530 _144607 P p f a)). Qed.
Lemma lem8205068 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term421 _144529 _144530 _144607 P p lt2 s a f g) = (term448 _144529 _144530 _144607 P p lt2 s a f g).
Proof. exact (MK_COMB (@lem8205067 _144530 _144607 P p f a) (@lem8205066 _144529 _144530 _144607 P p lt2 s a f g)). Qed.
Lemma lem8205070 {A : Type'} (P : Prop) (Q : A -> Prop) : (term433 A P Q) = (term434 A P Q).
Proof. exact (EQ_MP (@lem18911 A P Q) (@lem18910 A P Q)). Qed.
Lemma lem8205071 {_144530 : Type'} (P : Prop) (Q : _144530 -> Prop) : (term433 _144530 P Q) = (term434 _144530 P Q).
Proof. exact (@lem8205070 _144530 P Q). Qed.
Lemma lem8205072 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term449 _144529 _144530 _144607 P p lt2 s a f g) = (term450 _144529 _144530 _144607 P p lt2 s a f g).
Proof. exact (@lem8205071 _144530 (term437 _144530 _144607 P p f a) (term446 _144529 _144530 _144607 P p lt2 s a f g)). Qed.
Lemma lem8205073 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (z : _144530) : (term451 _144529 _144530 _144607 P p lt2 s a f g z) = (term444 _144529 _144530 _144607 P p lt2 s a f g z).
Proof. exact (eq_refl (term451 _144529 _144530 _144607 P p lt2 s a f g z)). Qed.
Lemma lem8205074 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term452 _144529 _144530 _144607 P p lt2 s a f g) = (term446 _144529 _144530 _144607 P p lt2 s a f g).
Proof. exact (fun_ext (fun z : _144530 => @lem8205073 _144529 _144530 _144607 P p lt2 s a f g z)). Qed.
Lemma lem8205075 {_144530 : Type'} : (@ex _144530) = (@ex _144530).
Proof. exact (eq_refl (@ex _144530)). Qed.
Lemma lem8205076 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term453 _144529 _144530 _144607 P p lt2 s a f g) = (term447 _144529 _144530 _144607 P p lt2 s a f g).
Proof. exact (MK_COMB (@lem8205075 _144530) (@lem8205074 _144529 _144530 _144607 P p lt2 s a f g)). Qed.
Lemma lem8205077 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) : (term416 _144530 _144607 P p f a) = (term416 _144530 _144607 P p f a).
Proof. exact (eq_refl (term416 _144530 _144607 P p f a)). Qed.
Lemma lem8205078 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term449 _144529 _144530 _144607 P p lt2 s a f g) = (term448 _144529 _144530 _144607 P p lt2 s a f g).
Proof. exact (MK_COMB (@lem8205077 _144530 _144607 P p f a) (@lem8205076 _144529 _144530 _144607 P p lt2 s a f g)). Qed.
Lemma lem8205079 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8205080 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term454 _144529 _144530 _144607 P p lt2 s a f g) = (term455 _144529 _144530 _144607 P p lt2 s a f g).
Proof. exact (MK_COMB (@lem8205079) (@lem8205078 _144529 _144530 _144607 P p lt2 s a f g)). Qed.
Lemma lem8205081 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (z : _144530) : (term451 _144529 _144530 _144607 P p lt2 s a f g z) = (term444 _144529 _144530 _144607 P p lt2 s a f g z).
Proof. exact (eq_refl (term451 _144529 _144530 _144607 P p lt2 s a f g z)). Qed.
Lemma lem8205082 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) : (term416 _144530 _144607 P p f a) = (term416 _144530 _144607 P p f a).
Proof. exact (eq_refl (term416 _144530 _144607 P p f a)). Qed.
Lemma lem8205083 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (z : _144530) : (term456 _144529 _144530 _144607 P p lt2 s a f g z) = (term457 _144529 _144530 _144607 P p lt2 s a f g z).
Proof. exact (MK_COMB (@lem8205082 _144530 _144607 P p f a) (@lem8205081 _144529 _144530 _144607 P p lt2 s a f g z)). Qed.
Lemma lem8205084 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term458 _144529 _144530 _144607 P p lt2 s a f g) = (term459 _144529 _144530 _144607 P p lt2 s a f g).
Proof. exact (fun_ext (fun z : _144530 => @lem8205083 _144529 _144530 _144607 P p lt2 s a f g z)). Qed.
Lemma lem8205085 {_144530 : Type'} : (@ex _144530) = (@ex _144530).
Proof. exact (eq_refl (@ex _144530)). Qed.
Lemma lem8205086 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term450 _144529 _144530 _144607 P p lt2 s a f g) = (term460 _144529 _144530 _144607 P p lt2 s a f g).
Proof. exact (MK_COMB (@lem8205085 _144530) (@lem8205084 _144529 _144530 _144607 P p lt2 s a f g)). Qed.
Lemma lem8205087 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : ((term449 _144529 _144530 _144607 P p lt2 s a f g) = (term450 _144529 _144530 _144607 P p lt2 s a f g)) = ((term448 _144529 _144530 _144607 P p lt2 s a f g) = (term460 _144529 _144530 _144607 P p lt2 s a f g)).
Proof. exact (MK_COMB (@lem8205080 _144529 _144530 _144607 P p lt2 s a f g) (@lem8205086 _144529 _144530 _144607 P p lt2 s a f g)). Qed.
Lemma lem8205088 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term448 _144529 _144530 _144607 P p lt2 s a f g) = (term460 _144529 _144530 _144607 P p lt2 s a f g).
Proof. exact (EQ_MP (@lem8205087 _144529 _144530 _144607 P p lt2 s a f g) (@lem8205072 _144529 _144530 _144607 P p lt2 s a f g)). Qed.
Lemma lem8205089 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term421 _144529 _144530 _144607 P p lt2 s a f g) = (term460 _144529 _144530 _144607 P p lt2 s a f g).
Proof. exact (TRANS (@lem8205068 _144529 _144530 _144607 P p lt2 s a f g) (@lem8205088 _144529 _144530 _144607 P p lt2 s a f g)). Qed.
Lemma lem8205090 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8205091 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term424 _144529 _144530 _144607 P p lt2 s a f g) = (term461 _144529 _144530 _144607 P p lt2 s a f g).
Proof. exact (MK_COMB (@lem8205090) (@lem8205089 _144529 _144530 _144607 P p lt2 s a f g)). Qed.
Lemma lem8205092 {_144530 _144607 _144645 P : Type'} (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : ((e f a) = (e g a)) = ((e f a) = (e g a)).
Proof. exact (eq_refl ((e f a) = (e g a))). Qed.
Lemma lem8205093 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term426 _144529 _144530 _144607 _144645 P p lt2 s f e g a) = (term462 _144529 _144530 _144607 _144645 P p lt2 s f e g a).
Proof. exact (MK_COMB (@lem8205091 _144529 _144530 _144607 P p lt2 s a f g) (@lem8205092 _144530 _144607 _144645 P f e g a)). Qed.
Lemma lem8205095 {A : Type'} (P : A -> Prop) (Q : Prop) : (term463 A P Q) = (term464 A P Q).
Proof. exact (EQ_MP (@lem18905 A P Q) (@lem18904 A P Q)). Qed.
Lemma lem8205096 {_144530 : Type'} (P : _144530 -> Prop) (Q : Prop) : (term463 _144530 P Q) = (term464 _144530 P Q).
Proof. exact (@lem8205095 _144530 P Q). Qed.
Lemma lem8205097 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term465 _144529 _144530 _144607 _144645 P p lt2 s f e g a) = (term466 _144529 _144530 _144607 _144645 P p lt2 s f e g a).
Proof. exact (@lem8205096 _144530 (term459 _144529 _144530 _144607 P p lt2 s a f g) ((e f a) = (e g a))). Qed.
Lemma lem8205098 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (z : _144530) : (term467 _144529 _144530 _144607 P p lt2 s a f g z) = (term457 _144529 _144530 _144607 P p lt2 s a f g z).
Proof. exact (eq_refl (term467 _144529 _144530 _144607 P p lt2 s a f g z)). Qed.
Lemma lem8205099 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term468 _144529 _144530 _144607 P p lt2 s a f g) = (term459 _144529 _144530 _144607 P p lt2 s a f g).
Proof. exact (fun_ext (fun z : _144530 => @lem8205098 _144529 _144530 _144607 P p lt2 s a f g z)). Qed.
Lemma lem8205100 {_144530 : Type'} : (@ex _144530) = (@ex _144530).
Proof. exact (eq_refl (@ex _144530)). Qed.
Lemma lem8205101 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term469 _144529 _144530 _144607 P p lt2 s a f g) = (term460 _144529 _144530 _144607 P p lt2 s a f g).
Proof. exact (MK_COMB (@lem8205100 _144530) (@lem8205099 _144529 _144530 _144607 P p lt2 s a f g)). Qed.
Lemma lem8205102 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8205103 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term470 _144529 _144530 _144607 P p lt2 s a f g) = (term461 _144529 _144530 _144607 P p lt2 s a f g).
Proof. exact (MK_COMB (@lem8205102) (@lem8205101 _144529 _144530 _144607 P p lt2 s a f g)). Qed.
Lemma lem8205104 {_144530 _144607 _144645 P : Type'} (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : ((e f a) = (e g a)) = ((e f a) = (e g a)).
Proof. exact (eq_refl ((e f a) = (e g a))). Qed.
Lemma lem8205105 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term465 _144529 _144530 _144607 _144645 P p lt2 s f e g a) = (term462 _144529 _144530 _144607 _144645 P p lt2 s f e g a).
Proof. exact (MK_COMB (@lem8205103 _144529 _144530 _144607 P p lt2 s a f g) (@lem8205104 _144530 _144607 _144645 P f e g a)). Qed.
Lemma lem8205106 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8205107 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term471 _144529 _144530 _144607 _144645 P p lt2 s f e g a) = (term472 _144529 _144530 _144607 _144645 P p lt2 s f e g a).
Proof. exact (MK_COMB (@lem8205106) (@lem8205105 _144529 _144530 _144607 _144645 P p lt2 s f e g a)). Qed.
Lemma lem8205108 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (z : _144530) : (term467 _144529 _144530 _144607 P p lt2 s a f g z) = (term457 _144529 _144530 _144607 P p lt2 s a f g z).
Proof. exact (eq_refl (term467 _144529 _144530 _144607 P p lt2 s a f g z)). Qed.
Lemma lem8205109 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8205110 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (z : _144530) : (term473 _144529 _144530 _144607 P p lt2 s a f g z) = (term474 _144529 _144530 _144607 P p lt2 s a f g z).
Proof. exact (MK_COMB (@lem8205109) (@lem8205108 _144529 _144530 _144607 P p lt2 s a f g z)). Qed.
Lemma lem8205111 {_144530 _144607 _144645 P : Type'} (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : ((e f a) = (e g a)) = ((e f a) = (e g a)).
Proof. exact (eq_refl ((e f a) = (e g a))). Qed.
Lemma lem8205112 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : _144530) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term475 _144529 _144530 _144607 _144645 P p lt2 s z f e g a) = (term476 _144529 _144530 _144607 _144645 P p lt2 s z f e g a).
Proof. exact (MK_COMB (@lem8205110 _144529 _144530 _144607 P p lt2 s a f g z) (@lem8205111 _144530 _144607 _144645 P f e g a)). Qed.
Lemma lem8205113 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term477 _144529 _144530 _144607 _144645 P p lt2 s f e g a) = (term478 _144529 _144530 _144607 _144645 P p lt2 s f e g a).
Proof. exact (fun_ext (fun z : _144530 => @lem8205112 _144529 _144530 _144607 _144645 P p lt2 s z f e g a)). Qed.
Lemma lem8205114 {_144530 : Type'} : (@ex _144530) = (@ex _144530).
Proof. exact (eq_refl (@ex _144530)). Qed.
Lemma lem8205115 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term466 _144529 _144530 _144607 _144645 P p lt2 s f e g a) = (term479 _144529 _144530 _144607 _144645 P p lt2 s f e g a).
Proof. exact (MK_COMB (@lem8205114 _144530) (@lem8205113 _144529 _144530 _144607 _144645 P p lt2 s f e g a)). Qed.
Lemma lem8205116 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : ((term465 _144529 _144530 _144607 _144645 P p lt2 s f e g a) = (term466 _144529 _144530 _144607 _144645 P p lt2 s f e g a)) = ((term462 _144529 _144530 _144607 _144645 P p lt2 s f e g a) = (term479 _144529 _144530 _144607 _144645 P p lt2 s f e g a)).
Proof. exact (MK_COMB (@lem8205107 _144529 _144530 _144607 _144645 P p lt2 s f e g a) (@lem8205115 _144529 _144530 _144607 _144645 P p lt2 s f e g a)). Qed.
Lemma lem8205117 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term462 _144529 _144530 _144607 _144645 P p lt2 s f e g a) = (term479 _144529 _144530 _144607 _144645 P p lt2 s f e g a).
Proof. exact (EQ_MP (@lem8205116 _144529 _144530 _144607 _144645 P p lt2 s f e g a) (@lem8205097 _144529 _144530 _144607 _144645 P p lt2 s f e g a)). Qed.
Lemma lem8205118 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term426 _144529 _144530 _144607 _144645 P p lt2 s f e g a) = (term479 _144529 _144530 _144607 _144645 P p lt2 s f e g a).
Proof. exact (TRANS (@lem8205093 _144529 _144530 _144607 _144645 P p lt2 s f e g a) (@lem8205117 _144529 _144530 _144607 _144645 P p lt2 s f e g a)). Qed.
Lemma lem8205119 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) : (term427 _144529 _144530 _144607 _144645 P p lt2 s f e g) = (term480 _144529 _144530 _144607 _144645 P p lt2 s f e g).
Proof. exact (fun_ext (fun a : P => @lem8205118 _144529 _144530 _144607 _144645 P p lt2 s f e g a)). Qed.
Lemma lem8205120 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8205121 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) : (term428 _144529 _144530 _144607 _144645 P p lt2 s f e g) = (term481 _144529 _144530 _144607 _144645 P p lt2 s f e g).
Proof. exact (MK_COMB (@lem8205120 P) (@lem8205119 _144529 _144530 _144607 _144645 P p lt2 s f e g)). Qed.
Lemma lem8205123 {A B : Type'} (P : type1413 A B) : (term482 A B P) = (term483 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem8205124 {_144530 P : Type'} (P' : type1470 _144530 P) : (term484 _144530 P P') = (term485 _144530 P P').
Proof. exact (@lem8205123 P _144530 P'). Qed.
Lemma lem8205125 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) : (term486 _144529 _144530 _144607 _144645 P p lt2 s f e g) = (term487 _144529 _144530 _144607 _144645 P p lt2 s f e g).
Proof. exact (@lem8205124 _144530 P (term488 _144529 _144530 _144607 _144645 P p lt2 s f e g)). Qed.
Lemma lem8205126 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term489 _144529 _144530 _144607 _144645 P p lt2 s f e g a) = (term478 _144529 _144530 _144607 _144645 P p lt2 s f e g a).
Proof. exact (eq_refl (term489 _144529 _144530 _144607 _144645 P p lt2 s f e g a)). Qed.
Lemma lem8205127 {_144530 : Type'} (z : _144530) : z = z.
Proof. exact (eq_refl z). Qed.
Lemma lem8205128 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) (z : _144530) : (term490 _144529 _144530 _144607 _144645 P p lt2 s f e g a z) = (term491 _144529 _144530 _144607 _144645 P p lt2 s f e g a z).
Proof. exact (MK_COMB (@lem8205126 _144529 _144530 _144607 _144645 P p lt2 s f e g a) (@lem8205127 _144530 z)). Qed.
Lemma lem8205129 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : _144530) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term491 _144529 _144530 _144607 _144645 P p lt2 s f e g a z) = (term476 _144529 _144530 _144607 _144645 P p lt2 s z f e g a).
Proof. exact (eq_refl (term491 _144529 _144530 _144607 _144645 P p lt2 s f e g a z)). Qed.
Lemma lem8205130 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : _144530) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term490 _144529 _144530 _144607 _144645 P p lt2 s f e g a z) = (term476 _144529 _144530 _144607 _144645 P p lt2 s z f e g a).
Proof. exact (TRANS (@lem8205128 _144529 _144530 _144607 _144645 P p lt2 s f e g a z) (@lem8205129 _144529 _144530 _144607 _144645 P p lt2 s z f e g a)). Qed.
Lemma lem8205131 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term492 _144529 _144530 _144607 _144645 P p lt2 s f e g a) = (term478 _144529 _144530 _144607 _144645 P p lt2 s f e g a).
Proof. exact (fun_ext (fun z : _144530 => @lem8205130 _144529 _144530 _144607 _144645 P p lt2 s z f e g a)). Qed.
Lemma lem8205132 {_144530 : Type'} : (@ex _144530) = (@ex _144530).
Proof. exact (eq_refl (@ex _144530)). Qed.
Lemma lem8205133 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term493 _144529 _144530 _144607 _144645 P p lt2 s f e g a) = (term479 _144529 _144530 _144607 _144645 P p lt2 s f e g a).
Proof. exact (MK_COMB (@lem8205132 _144530) (@lem8205131 _144529 _144530 _144607 _144645 P p lt2 s f e g a)). Qed.
Lemma lem8205134 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) : (term494 _144529 _144530 _144607 _144645 P p lt2 s f e g) = (term480 _144529 _144530 _144607 _144645 P p lt2 s f e g).
Proof. exact (fun_ext (fun a : P => @lem8205133 _144529 _144530 _144607 _144645 P p lt2 s f e g a)). Qed.
Lemma lem8205135 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8205136 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) : (term486 _144529 _144530 _144607 _144645 P p lt2 s f e g) = (term481 _144529 _144530 _144607 _144645 P p lt2 s f e g).
Proof. exact (MK_COMB (@lem8205135 P) (@lem8205134 _144529 _144530 _144607 _144645 P p lt2 s f e g)). Qed.
Lemma lem8205137 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8205138 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) : (term495 _144529 _144530 _144607 _144645 P p lt2 s f e g) = (term496 _144529 _144530 _144607 _144645 P p lt2 s f e g).
Proof. exact (MK_COMB (@lem8205137) (@lem8205136 _144529 _144530 _144607 _144645 P p lt2 s f e g)). Qed.
Lemma lem8205139 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term489 _144529 _144530 _144607 _144645 P p lt2 s f e g a) = (term478 _144529 _144530 _144607 _144645 P p lt2 s f e g a).
Proof. exact (eq_refl (term489 _144529 _144530 _144607 _144645 P p lt2 s f e g a)). Qed.
Lemma lem8205140 {_144530 P : Type'} (z : P -> _144530) (a : P) : (z a) = (z a).
Proof. exact (eq_refl (z a)). Qed.
Lemma lem8205141 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (z : P -> _144530) (a : P) : (term497 _144529 _144530 _144607 _144645 P p lt2 s f e g z a) = (term498 _144529 _144530 _144607 _144645 P p lt2 s f e g z a).
Proof. exact (MK_COMB (@lem8205139 _144529 _144530 _144607 _144645 P p lt2 s f e g a) (@lem8205140 _144530 P z a)). Qed.
Lemma lem8205142 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : P -> _144530) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term498 _144529 _144530 _144607 _144645 P p lt2 s f e g z a) = (term499 _144529 _144530 _144607 _144645 P p lt2 s z f e g a).
Proof. exact (eq_refl (term498 _144529 _144530 _144607 _144645 P p lt2 s f e g z a)). Qed.
Lemma lem8205143 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : P -> _144530) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term497 _144529 _144530 _144607 _144645 P p lt2 s f e g z a) = (term499 _144529 _144530 _144607 _144645 P p lt2 s z f e g a).
Proof. exact (TRANS (@lem8205141 _144529 _144530 _144607 _144645 P p lt2 s f e g z a) (@lem8205142 _144529 _144530 _144607 _144645 P p lt2 s z f e g a)). Qed.
Lemma lem8205144 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : P -> _144530) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) : (term500 _144529 _144530 _144607 _144645 P p lt2 s f e g z) = (term501 _144529 _144530 _144607 _144645 P p lt2 s z f e g).
Proof. exact (fun_ext (fun a : P => @lem8205143 _144529 _144530 _144607 _144645 P p lt2 s z f e g a)). Qed.
Lemma lem8205145 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8205146 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : P -> _144530) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) : (term502 _144529 _144530 _144607 _144645 P p lt2 s f e g z) = (term503 _144529 _144530 _144607 _144645 P p lt2 s z f e g).
Proof. exact (MK_COMB (@lem8205145 P) (@lem8205144 _144529 _144530 _144607 _144645 P p lt2 s z f e g)). Qed.
Lemma lem8205147 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) : (term504 _144529 _144530 _144607 _144645 P p lt2 s f e g) = (term505 _144529 _144530 _144607 _144645 P p lt2 s f e g).
Proof. exact (fun_ext (fun z : P -> _144530 => @lem8205146 _144529 _144530 _144607 _144645 P p lt2 s z f e g)). Qed.
Lemma lem8205148 {_144530 P : Type'} : (@ex (P -> _144530)) = (@ex (P -> _144530)).
Proof. exact (eq_refl (@ex (P -> _144530))). Qed.
Lemma lem8205149 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) : (term487 _144529 _144530 _144607 _144645 P p lt2 s f e g) = (term506 _144529 _144530 _144607 _144645 P p lt2 s f e g).
Proof. exact (MK_COMB (@lem8205148 _144530 P) (@lem8205147 _144529 _144530 _144607 _144645 P p lt2 s f e g)). Qed.
Lemma lem8205150 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) : ((term486 _144529 _144530 _144607 _144645 P p lt2 s f e g) = (term487 _144529 _144530 _144607 _144645 P p lt2 s f e g)) = ((term481 _144529 _144530 _144607 _144645 P p lt2 s f e g) = (term506 _144529 _144530 _144607 _144645 P p lt2 s f e g)).
Proof. exact (MK_COMB (@lem8205138 _144529 _144530 _144607 _144645 P p lt2 s f e g) (@lem8205149 _144529 _144530 _144607 _144645 P p lt2 s f e g)). Qed.
Lemma lem8205151 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) : (term481 _144529 _144530 _144607 _144645 P p lt2 s f e g) = (term506 _144529 _144530 _144607 _144645 P p lt2 s f e g).
Proof. exact (EQ_MP (@lem8205150 _144529 _144530 _144607 _144645 P p lt2 s f e g) (@lem8205125 _144529 _144530 _144607 _144645 P p lt2 s f e g)). Qed.
Lemma lem8205152 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) : (term428 _144529 _144530 _144607 _144645 P p lt2 s f e g) = (term506 _144529 _144530 _144607 _144645 P p lt2 s f e g).
Proof. exact (TRANS (@lem8205121 _144529 _144530 _144607 _144645 P p lt2 s f e g) (@lem8205151 _144529 _144530 _144607 _144645 P p lt2 s f e g)). Qed.
Lemma lem8205153 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) : (term429 _144529 _144530 _144607 _144645 P p lt2 s f e) = (term507 _144529 _144530 _144607 _144645 P p lt2 s f e).
Proof. exact (fun_ext (fun g : _144530 -> _144607 => @lem8205152 _144529 _144530 _144607 _144645 P p lt2 s f e g)). Qed.
Lemma lem8205154 {_144530 _144607 : Type'} : (@all (_144530 -> _144607)) = (@all (_144530 -> _144607)).
Proof. exact (eq_refl (@all (_144530 -> _144607))). Qed.
Lemma lem8205155 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) : (term430 _144529 _144530 _144607 _144645 P p lt2 s f e) = (term508 _144529 _144530 _144607 _144645 P p lt2 s f e).
Proof. exact (MK_COMB (@lem8205154 _144530 _144607) (@lem8205153 _144529 _144530 _144607 _144645 P p lt2 s f e)). Qed.
Lemma lem8205157 {A B : Type'} (P : type1413 A B) : (term482 A B P) = (term483 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem8205158 {_144530 _144607 P : Type'} (P' : type537 _144530 _144607 P) : (term509 _144530 _144607 P P') = (term510 _144530 _144607 P P').
Proof. exact (@lem8205157 (_144530 -> _144607) (P -> _144530) P'). Qed.
Lemma lem8205159 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) : (term511 _144529 _144530 _144607 _144645 P p lt2 s f e) = (term512 _144529 _144530 _144607 _144645 P p lt2 s f e).
Proof. exact (@lem8205158 _144530 _144607 P (term513 _144529 _144530 _144607 _144645 P p lt2 s f e)). Qed.
Lemma lem8205160 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) : (term514 _144529 _144530 _144607 _144645 P p lt2 s f e g) = (term505 _144529 _144530 _144607 _144645 P p lt2 s f e g).
Proof. exact (eq_refl (term514 _144529 _144530 _144607 _144645 P p lt2 s f e g)). Qed.
Lemma lem8205161 {_144530 P : Type'} (z : P -> _144530) : z = z.
Proof. exact (eq_refl z). Qed.
Lemma lem8205162 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (z : P -> _144530) : (term515 _144529 _144530 _144607 _144645 P p lt2 s f e g z) = (term516 _144529 _144530 _144607 _144645 P p lt2 s f e g z).
Proof. exact (MK_COMB (@lem8205160 _144529 _144530 _144607 _144645 P p lt2 s f e g) (@lem8205161 _144530 P z)). Qed.
Lemma lem8205163 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : P -> _144530) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) : (term516 _144529 _144530 _144607 _144645 P p lt2 s f e g z) = (term503 _144529 _144530 _144607 _144645 P p lt2 s z f e g).
Proof. exact (eq_refl (term516 _144529 _144530 _144607 _144645 P p lt2 s f e g z)). Qed.
Lemma lem8205164 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : P -> _144530) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) : (term515 _144529 _144530 _144607 _144645 P p lt2 s f e g z) = (term503 _144529 _144530 _144607 _144645 P p lt2 s z f e g).
Proof. exact (TRANS (@lem8205162 _144529 _144530 _144607 _144645 P p lt2 s f e g z) (@lem8205163 _144529 _144530 _144607 _144645 P p lt2 s z f e g)). Qed.
Lemma lem8205165 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) : (term517 _144529 _144530 _144607 _144645 P p lt2 s f e g) = (term505 _144529 _144530 _144607 _144645 P p lt2 s f e g).
Proof. exact (fun_ext (fun z : P -> _144530 => @lem8205164 _144529 _144530 _144607 _144645 P p lt2 s z f e g)). Qed.
Lemma lem8205166 {_144530 P : Type'} : (@ex (P -> _144530)) = (@ex (P -> _144530)).
Proof. exact (eq_refl (@ex (P -> _144530))). Qed.
Lemma lem8205167 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) : (term518 _144529 _144530 _144607 _144645 P p lt2 s f e g) = (term506 _144529 _144530 _144607 _144645 P p lt2 s f e g).
Proof. exact (MK_COMB (@lem8205166 _144530 P) (@lem8205165 _144529 _144530 _144607 _144645 P p lt2 s f e g)). Qed.
Lemma lem8205168 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) : (term519 _144529 _144530 _144607 _144645 P p lt2 s f e) = (term507 _144529 _144530 _144607 _144645 P p lt2 s f e).
Proof. exact (fun_ext (fun g : _144530 -> _144607 => @lem8205167 _144529 _144530 _144607 _144645 P p lt2 s f e g)). Qed.
Lemma lem8205169 {_144530 _144607 : Type'} : (@all (_144530 -> _144607)) = (@all (_144530 -> _144607)).
Proof. exact (eq_refl (@all (_144530 -> _144607))). Qed.
Lemma lem8205170 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) : (term511 _144529 _144530 _144607 _144645 P p lt2 s f e) = (term508 _144529 _144530 _144607 _144645 P p lt2 s f e).
Proof. exact (MK_COMB (@lem8205169 _144530 _144607) (@lem8205168 _144529 _144530 _144607 _144645 P p lt2 s f e)). Qed.
Lemma lem8205171 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8205172 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) : (term520 _144529 _144530 _144607 _144645 P p lt2 s f e) = (term521 _144529 _144530 _144607 _144645 P p lt2 s f e).
Proof. exact (MK_COMB (@lem8205171) (@lem8205170 _144529 _144530 _144607 _144645 P p lt2 s f e)). Qed.
Lemma lem8205173 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) : (term514 _144529 _144530 _144607 _144645 P p lt2 s f e g) = (term505 _144529 _144530 _144607 _144645 P p lt2 s f e g).
Proof. exact (eq_refl (term514 _144529 _144530 _144607 _144645 P p lt2 s f e g)). Qed.
Lemma lem8205174 {_144530 _144607 P : Type'} (z : type557 _144530 _144607 P) (g : _144530 -> _144607) : (z g) = (z g).
Proof. exact (eq_refl (z g)). Qed.
Lemma lem8205175 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (z : type557 _144530 _144607 P) (g : _144530 -> _144607) : (term522 _144529 _144530 _144607 _144645 P p lt2 s f e z g) = (term523 _144529 _144530 _144607 _144645 P p lt2 s f e z g).
Proof. exact (MK_COMB (@lem8205173 _144529 _144530 _144607 _144645 P p lt2 s f e g) (@lem8205174 _144530 _144607 P z g)). Qed.
Lemma lem8205176 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : type557 _144530 _144607 P) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) : (term523 _144529 _144530 _144607 _144645 P p lt2 s f e z g) = (term524 _144529 _144530 _144607 _144645 P p lt2 s z f e g).
Proof. exact (eq_refl (term523 _144529 _144530 _144607 _144645 P p lt2 s f e z g)). Qed.
Lemma lem8205177 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : type557 _144530 _144607 P) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) : (term522 _144529 _144530 _144607 _144645 P p lt2 s f e z g) = (term524 _144529 _144530 _144607 _144645 P p lt2 s z f e g).
Proof. exact (TRANS (@lem8205175 _144529 _144530 _144607 _144645 P p lt2 s f e z g) (@lem8205176 _144529 _144530 _144607 _144645 P p lt2 s z f e g)). Qed.
Lemma lem8205178 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : type557 _144530 _144607 P) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) : (term525 _144529 _144530 _144607 _144645 P p lt2 s f e z) = (term526 _144529 _144530 _144607 _144645 P p lt2 s z f e).
Proof. exact (fun_ext (fun g : _144530 -> _144607 => @lem8205177 _144529 _144530 _144607 _144645 P p lt2 s z f e g)). Qed.
Lemma lem8205179 {_144530 _144607 : Type'} : (@all (_144530 -> _144607)) = (@all (_144530 -> _144607)).
Proof. exact (eq_refl (@all (_144530 -> _144607))). Qed.
Lemma lem8205180 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : type557 _144530 _144607 P) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) : (term527 _144529 _144530 _144607 _144645 P p lt2 s f e z) = (term528 _144529 _144530 _144607 _144645 P p lt2 s z f e).
Proof. exact (MK_COMB (@lem8205179 _144530 _144607) (@lem8205178 _144529 _144530 _144607 _144645 P p lt2 s z f e)). Qed.
Lemma lem8205181 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) : (term529 _144529 _144530 _144607 _144645 P p lt2 s f e) = (term530 _144529 _144530 _144607 _144645 P p lt2 s f e).
Proof. exact (fun_ext (fun z : type557 _144530 _144607 P => @lem8205180 _144529 _144530 _144607 _144645 P p lt2 s z f e)). Qed.
Lemma lem8205182 {_144530 _144607 P : Type'} : (@ex ((_144530 -> _144607) -> P -> _144530)) = (@ex ((_144530 -> _144607) -> P -> _144530)).
Proof. exact (eq_refl (@ex ((_144530 -> _144607) -> P -> _144530))). Qed.
Lemma lem8205183 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) : (term512 _144529 _144530 _144607 _144645 P p lt2 s f e) = (term531 _144529 _144530 _144607 _144645 P p lt2 s f e).
Proof. exact (MK_COMB (@lem8205182 _144530 _144607 P) (@lem8205181 _144529 _144530 _144607 _144645 P p lt2 s f e)). Qed.
Lemma lem8205184 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) : ((term511 _144529 _144530 _144607 _144645 P p lt2 s f e) = (term512 _144529 _144530 _144607 _144645 P p lt2 s f e)) = ((term508 _144529 _144530 _144607 _144645 P p lt2 s f e) = (term531 _144529 _144530 _144607 _144645 P p lt2 s f e)).
Proof. exact (MK_COMB (@lem8205172 _144529 _144530 _144607 _144645 P p lt2 s f e) (@lem8205183 _144529 _144530 _144607 _144645 P p lt2 s f e)). Qed.
Lemma lem8205185 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) : (term508 _144529 _144530 _144607 _144645 P p lt2 s f e) = (term531 _144529 _144530 _144607 _144645 P p lt2 s f e).
Proof. exact (EQ_MP (@lem8205184 _144529 _144530 _144607 _144645 P p lt2 s f e) (@lem8205159 _144529 _144530 _144607 _144645 P p lt2 s f e)). Qed.
Lemma lem8205186 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) : (term430 _144529 _144530 _144607 _144645 P p lt2 s f e) = (term531 _144529 _144530 _144607 _144645 P p lt2 s f e).
Proof. exact (TRANS (@lem8205155 _144529 _144530 _144607 _144645 P p lt2 s f e) (@lem8205185 _144529 _144530 _144607 _144645 P p lt2 s f e)). Qed.
Lemma lem8205187 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (e : type564 _144530 _144607 _144645 P) : (term431 _144529 _144530 _144607 _144645 P p lt2 s e) = (term532 _144529 _144530 _144607 _144645 P p lt2 s e).
Proof. exact (fun_ext (fun f : _144530 -> _144607 => @lem8205186 _144529 _144530 _144607 _144645 P p lt2 s f e)). Qed.
Lemma lem8205188 {_144530 _144607 : Type'} : (@all (_144530 -> _144607)) = (@all (_144530 -> _144607)).
Proof. exact (eq_refl (@all (_144530 -> _144607))). Qed.
Lemma lem8205189 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (e : type564 _144530 _144607 _144645 P) : (term432 _144529 _144530 _144607 _144645 P p lt2 s e) = (term533 _144529 _144530 _144607 _144645 P p lt2 s e).
Proof. exact (MK_COMB (@lem8205188 _144530 _144607) (@lem8205187 _144529 _144530 _144607 _144645 P p lt2 s e)). Qed.
Lemma lem8205191 {A B : Type'} (P : type1413 A B) : (term482 A B P) = (term483 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem8205192 {_144530 _144607 P : Type'} (P' : type495 _144530 _144607 P) : (term534 _144530 _144607 P P') = (term535 _144530 _144607 P P').
Proof. exact (@lem8205191 (_144530 -> _144607) (type557 _144530 _144607 P) P'). Qed.
Lemma lem8205193 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (e : type564 _144530 _144607 _144645 P) : (term536 _144529 _144530 _144607 _144645 P p lt2 s e) = (term537 _144529 _144530 _144607 _144645 P p lt2 s e).
Proof. exact (@lem8205192 _144530 _144607 P (term538 _144529 _144530 _144607 _144645 P p lt2 s e)). Qed.
Lemma lem8205194 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) : (term539 _144529 _144530 _144607 _144645 P p lt2 s e f) = (term530 _144529 _144530 _144607 _144645 P p lt2 s f e).
Proof. exact (eq_refl (term539 _144529 _144530 _144607 _144645 P p lt2 s e f)). Qed.
Lemma lem8205195 {_144530 _144607 P : Type'} (z : type557 _144530 _144607 P) : z = z.
Proof. exact (eq_refl z). Qed.
Lemma lem8205196 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) (z : type557 _144530 _144607 P) : (term540 _144529 _144530 _144607 _144645 P p lt2 s e f z) = (term541 _144529 _144530 _144607 _144645 P p lt2 s f e z).
Proof. exact (MK_COMB (@lem8205194 _144529 _144530 _144607 _144645 P p lt2 s f e) (@lem8205195 _144530 _144607 P z)). Qed.
Lemma lem8205197 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : type557 _144530 _144607 P) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) : (term541 _144529 _144530 _144607 _144645 P p lt2 s f e z) = (term528 _144529 _144530 _144607 _144645 P p lt2 s z f e).
Proof. exact (eq_refl (term541 _144529 _144530 _144607 _144645 P p lt2 s f e z)). Qed.
Lemma lem8205198 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : type557 _144530 _144607 P) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) : (term540 _144529 _144530 _144607 _144645 P p lt2 s e f z) = (term528 _144529 _144530 _144607 _144645 P p lt2 s z f e).
Proof. exact (TRANS (@lem8205196 _144529 _144530 _144607 _144645 P p lt2 s f e z) (@lem8205197 _144529 _144530 _144607 _144645 P p lt2 s z f e)). Qed.
Lemma lem8205199 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) : (term542 _144529 _144530 _144607 _144645 P p lt2 s e f) = (term530 _144529 _144530 _144607 _144645 P p lt2 s f e).
Proof. exact (fun_ext (fun z : type557 _144530 _144607 P => @lem8205198 _144529 _144530 _144607 _144645 P p lt2 s z f e)). Qed.
Lemma lem8205200 {_144530 _144607 P : Type'} : (@ex ((_144530 -> _144607) -> P -> _144530)) = (@ex ((_144530 -> _144607) -> P -> _144530)).
Proof. exact (eq_refl (@ex ((_144530 -> _144607) -> P -> _144530))). Qed.
Lemma lem8205201 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) : (term543 _144529 _144530 _144607 _144645 P p lt2 s e f) = (term531 _144529 _144530 _144607 _144645 P p lt2 s f e).
Proof. exact (MK_COMB (@lem8205200 _144530 _144607 P) (@lem8205199 _144529 _144530 _144607 _144645 P p lt2 s f e)). Qed.
Lemma lem8205202 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (e : type564 _144530 _144607 _144645 P) : (term544 _144529 _144530 _144607 _144645 P p lt2 s e) = (term532 _144529 _144530 _144607 _144645 P p lt2 s e).
Proof. exact (fun_ext (fun f : _144530 -> _144607 => @lem8205201 _144529 _144530 _144607 _144645 P p lt2 s f e)). Qed.
Lemma lem8205203 {_144530 _144607 : Type'} : (@all (_144530 -> _144607)) = (@all (_144530 -> _144607)).
Proof. exact (eq_refl (@all (_144530 -> _144607))). Qed.
Lemma lem8205204 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (e : type564 _144530 _144607 _144645 P) : (term536 _144529 _144530 _144607 _144645 P p lt2 s e) = (term533 _144529 _144530 _144607 _144645 P p lt2 s e).
Proof. exact (MK_COMB (@lem8205203 _144530 _144607) (@lem8205202 _144529 _144530 _144607 _144645 P p lt2 s e)). Qed.
Lemma lem8205205 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8205206 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (e : type564 _144530 _144607 _144645 P) : (term545 _144529 _144530 _144607 _144645 P p lt2 s e) = (term546 _144529 _144530 _144607 _144645 P p lt2 s e).
Proof. exact (MK_COMB (@lem8205205) (@lem8205204 _144529 _144530 _144607 _144645 P p lt2 s e)). Qed.
Lemma lem8205207 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) : (term539 _144529 _144530 _144607 _144645 P p lt2 s e f) = (term530 _144529 _144530 _144607 _144645 P p lt2 s f e).
Proof. exact (eq_refl (term539 _144529 _144530 _144607 _144645 P p lt2 s e f)). Qed.
Lemma lem8205208 {_144530 _144607 P : Type'} (z : type518 _144530 _144607 P) (f : _144530 -> _144607) : (z f) = (z f).
Proof. exact (eq_refl (z f)). Qed.
Lemma lem8205209 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (e : type564 _144530 _144607 _144645 P) (z : type518 _144530 _144607 P) (f : _144530 -> _144607) : (term547 _144529 _144530 _144607 _144645 P p lt2 s e z f) = (term548 _144529 _144530 _144607 _144645 P p lt2 s e z f).
Proof. exact (MK_COMB (@lem8205207 _144529 _144530 _144607 _144645 P p lt2 s f e) (@lem8205208 _144530 _144607 P z f)). Qed.
Lemma lem8205210 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : type518 _144530 _144607 P) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) : (term548 _144529 _144530 _144607 _144645 P p lt2 s e z f) = (term549 _144529 _144530 _144607 _144645 P p lt2 s z f e).
Proof. exact (eq_refl (term548 _144529 _144530 _144607 _144645 P p lt2 s e z f)). Qed.
Lemma lem8205211 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : type518 _144530 _144607 P) (f : _144530 -> _144607) (e : type564 _144530 _144607 _144645 P) : (term547 _144529 _144530 _144607 _144645 P p lt2 s e z f) = (term549 _144529 _144530 _144607 _144645 P p lt2 s z f e).
Proof. exact (TRANS (@lem8205209 _144529 _144530 _144607 _144645 P p lt2 s e z f) (@lem8205210 _144529 _144530 _144607 _144645 P p lt2 s z f e)). Qed.
Lemma lem8205212 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : type518 _144530 _144607 P) (e : type564 _144530 _144607 _144645 P) : (term550 _144529 _144530 _144607 _144645 P p lt2 s e z) = (term551 _144529 _144530 _144607 _144645 P p lt2 s z e).
Proof. exact (fun_ext (fun f : _144530 -> _144607 => @lem8205211 _144529 _144530 _144607 _144645 P p lt2 s z f e)). Qed.
Lemma lem8205213 {_144530 _144607 : Type'} : (@all (_144530 -> _144607)) = (@all (_144530 -> _144607)).
Proof. exact (eq_refl (@all (_144530 -> _144607))). Qed.
Lemma lem8205214 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : type518 _144530 _144607 P) (e : type564 _144530 _144607 _144645 P) : (term552 _144529 _144530 _144607 _144645 P p lt2 s e z) = (term553 _144529 _144530 _144607 _144645 P p lt2 s z e).
Proof. exact (MK_COMB (@lem8205213 _144530 _144607) (@lem8205212 _144529 _144530 _144607 _144645 P p lt2 s z e)). Qed.
Lemma lem8205215 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (e : type564 _144530 _144607 _144645 P) : (term554 _144529 _144530 _144607 _144645 P p lt2 s e) = (term555 _144529 _144530 _144607 _144645 P p lt2 s e).
Proof. exact (fun_ext (fun z : type518 _144530 _144607 P => @lem8205214 _144529 _144530 _144607 _144645 P p lt2 s z e)). Qed.
Lemma lem8205216 {_144530 _144607 P : Type'} : (@ex ((_144530 -> _144607) -> (_144530 -> _144607) -> P -> _144530)) = (@ex ((_144530 -> _144607) -> (_144530 -> _144607) -> P -> _144530)).
Proof. exact (eq_refl (@ex ((_144530 -> _144607) -> (_144530 -> _144607) -> P -> _144530))). Qed.
Lemma lem8205217 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (e : type564 _144530 _144607 _144645 P) : (term537 _144529 _144530 _144607 _144645 P p lt2 s e) = (term556 _144529 _144530 _144607 _144645 P p lt2 s e).
Proof. exact (MK_COMB (@lem8205216 _144530 _144607 P) (@lem8205215 _144529 _144530 _144607 _144645 P p lt2 s e)). Qed.
Lemma lem8205218 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (e : type564 _144530 _144607 _144645 P) : ((term536 _144529 _144530 _144607 _144645 P p lt2 s e) = (term537 _144529 _144530 _144607 _144645 P p lt2 s e)) = ((term533 _144529 _144530 _144607 _144645 P p lt2 s e) = (term556 _144529 _144530 _144607 _144645 P p lt2 s e)).
Proof. exact (MK_COMB (@lem8205206 _144529 _144530 _144607 _144645 P p lt2 s e) (@lem8205217 _144529 _144530 _144607 _144645 P p lt2 s e)). Qed.
Lemma lem8205219 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (e : type564 _144530 _144607 _144645 P) : (term533 _144529 _144530 _144607 _144645 P p lt2 s e) = (term556 _144529 _144530 _144607 _144645 P p lt2 s e).
Proof. exact (EQ_MP (@lem8205218 _144529 _144530 _144607 _144645 P p lt2 s e) (@lem8205193 _144529 _144530 _144607 _144645 P p lt2 s e)). Qed.
Lemma lem8205221 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (e : type564 _144530 _144607 _144645 P) : (term432 _144529 _144530 _144607 _144645 P p lt2 s e) = (term556 _144529 _144530 _144607 _144645 P p lt2 s e).
Proof. exact (TRANS (@lem8205189 _144529 _144530 _144607 _144645 P p lt2 s e) (@lem8205219 _144529 _144530 _144607 _144645 P p lt2 s e)). Qed.
Lemma lem8205222 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (e : type564 _144530 _144607 _144645 P) : (term141 _144529 _144530 _144607 _144645 P p lt2 s e) = (term556 _144529 _144530 _144607 _144645 P p lt2 s e).
Proof. exact (TRANS (@lem8204941 _144529 _144530 _144607 _144645 P p lt2 s e) (@lem8205221 _144529 _144530 _144607 _144645 P p lt2 s e)). Qed.
Lemma lem8205223 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (e : type564 _144530 _144607 _144645 P) (h1 : term141 _144529 _144530 _144607 _144645 P p lt2 s e) : term556 _144529 _144530 _144607 _144645 P p lt2 s e.
Proof. exact (EQ_MP (@lem8205222 _144529 _144530 _144607 _144645 P p lt2 s e) (@lem8204556 _144529 _144530 _144607 _144645 P p lt2 s e h1)). Qed.
Lemma lem8205231 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) : (term557 _144530 _144607 _144645 P pat e q f a) = (term558 _144530 _144607 _144645 P pat e q f a).
Proof. exact (@lem17045 ((pat f a) = (e f a)) (q f a)). Qed.
Lemma lem8205233 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) : (term416 _144530 _144607 P p f a) = (term416 _144530 _144607 P p f a).
Proof. exact (eq_refl (term416 _144530 _144607 P p f a)). Qed.
Lemma lem8205234 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) : (term559 _144530 _144607 _144645 P p pat e q f a) = (term560 _144530 _144607 _144645 P p pat e q f a).
Proof. exact (MK_COMB (@lem8205233 _144530 _144607 P p f a) (@lem8205231 _144530 _144607 _144645 P pat e q f a)). Qed.
Lemma lem8205235 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) : (term561 _144530 _144607 _144645 P p pat e q f a) = (term559 _144530 _144607 _144645 P p pat e q f a).
Proof. exact (@lem17045 (p f a) (term562 _144530 _144607 _144645 P pat e q f a)). Qed.
Lemma lem8205236 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) : (term561 _144530 _144607 _144645 P p pat e q f a) = (term560 _144530 _144607 _144645 P p pat e q f a).
Proof. exact (TRANS (@lem8205235 _144530 _144607 _144645 P p pat e q f a) (@lem8205234 _144530 _144607 _144645 P p pat e q f a)). Qed.
Lemma lem8205244 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term557 _144530 _144607 _144645 P pat e q g a) = (term558 _144530 _144607 _144645 P pat e q g a).
Proof. exact (@lem17045 ((pat g a) = (e g a)) (q g a)). Qed.
Lemma lem8205246 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term416 _144530 _144607 P p g a) = (term416 _144530 _144607 P p g a).
Proof. exact (eq_refl (term416 _144530 _144607 P p g a)). Qed.
Lemma lem8205247 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term559 _144530 _144607 _144645 P p pat e q g a) = (term560 _144530 _144607 _144645 P p pat e q g a).
Proof. exact (MK_COMB (@lem8205246 _144530 _144607 P p g a) (@lem8205244 _144530 _144607 _144645 P pat e q g a)). Qed.
Lemma lem8205248 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term561 _144530 _144607 _144645 P p pat e q g a) = (term559 _144530 _144607 _144645 P p pat e q g a).
Proof. exact (@lem17045 (p g a) (term562 _144530 _144607 _144645 P pat e q g a)). Qed.
Lemma lem8205249 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term561 _144530 _144607 _144645 P p pat e q g a) = (term560 _144530 _144607 _144645 P p pat e q g a).
Proof. exact (TRANS (@lem8205248 _144530 _144607 _144645 P p pat e q g a) (@lem8205247 _144530 _144607 _144645 P p pat e q g a)). Qed.
Lemma lem8205256 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (z : _144530) : (term404 _144529 _144530 _144607 P lt2 s a f g z) = (term405 _144529 _144530 _144607 P lt2 s a f g z).
Proof. exact (@lem17362 (term406 _144529 _144530 P lt2 z s a) ((f z) = (g z))). Qed.
Lemma lem8205257 {_144530 : Type'} (P : _144530 -> Prop) : (term407 _144530 P) = (term408 _144530 P).
Proof. exact (@lem18392 _144530 P). Qed.
Lemma lem8205258 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term409 _144529 _144530 _144607 P lt2 s a f g) = (term410 _144529 _144530 _144607 P lt2 s a f g).
Proof. exact (@lem8205257 _144530 (term397 _144529 _144530 _144607 P lt2 s a f g)). Qed.
Lemma lem8205259 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (z : _144530) : (term411 _144529 _144530 _144607 P lt2 s a f g z) = (term396 _144529 _144530 _144607 P lt2 s a f g z).
Proof. exact (eq_refl (term411 _144529 _144530 _144607 P lt2 s a f g z)). Qed.
Lemma lem8205260 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8205261 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (z : _144530) : (term412 _144529 _144530 _144607 P lt2 s a f g z) = (term404 _144529 _144530 _144607 P lt2 s a f g z).
Proof. exact (MK_COMB (@lem8205260) (@lem8205259 _144529 _144530 _144607 P lt2 s a f g z)). Qed.
Lemma lem8205262 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (z : _144530) : (term412 _144529 _144530 _144607 P lt2 s a f g z) = (term405 _144529 _144530 _144607 P lt2 s a f g z).
Proof. exact (TRANS (@lem8205261 _144529 _144530 _144607 P lt2 s a f g z) (@lem8205256 _144529 _144530 _144607 P lt2 s a f g z)). Qed.
Lemma lem8205263 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term413 _144529 _144530 _144607 P lt2 s a f g) = (term414 _144529 _144530 _144607 P lt2 s a f g).
Proof. exact (fun_ext (fun z : _144530 => @lem8205262 _144529 _144530 _144607 P lt2 s a f g z)). Qed.
Lemma lem8205264 {_144530 : Type'} : (@ex _144530) = (@ex _144530).
Proof. exact (eq_refl (@ex _144530)). Qed.
Lemma lem8205265 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term410 _144529 _144530 _144607 P lt2 s a f g) = (term415 _144529 _144530 _144607 P lt2 s a f g).
Proof. exact (MK_COMB (@lem8205264 _144530) (@lem8205263 _144529 _144530 _144607 P lt2 s a f g)). Qed.
Lemma lem8205266 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term409 _144529 _144530 _144607 P lt2 s a f g) = (term415 _144529 _144530 _144607 P lt2 s a f g).
Proof. exact (TRANS (@lem8205258 _144529 _144530 _144607 P lt2 s a f g) (@lem8205265 _144529 _144530 _144607 P lt2 s a f g)). Qed.
Lemma lem8205267 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8205268 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term563 _144530 _144607 _144645 P p pat e q g a) = (term564 _144530 _144607 _144645 P p pat e q g a).
Proof. exact (MK_COMB (@lem8205267) (@lem8205249 _144530 _144607 _144645 P p pat e q g a)). Qed.
Lemma lem8205269 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term565 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) = (term566 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g).
Proof. exact (MK_COMB (@lem8205268 _144530 _144607 _144645 P p pat e q g a) (@lem8205266 _144529 _144530 _144607 P lt2 s a f g)). Qed.
Lemma lem8205270 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term567 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) = (term565 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g).
Proof. exact (@lem17045 (term159 _144530 _144607 _144645 P p pat e q g a) (term165 _144529 _144530 _144607 P lt2 s a f g)). Qed.
Lemma lem8205271 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term567 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) = (term566 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g).
Proof. exact (TRANS (@lem8205270 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) (@lem8205269 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g)). Qed.
Lemma lem8205272 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8205273 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) : (term563 _144530 _144607 _144645 P p pat e q f a) = (term564 _144530 _144607 _144645 P p pat e q f a).
Proof. exact (MK_COMB (@lem8205272) (@lem8205236 _144530 _144607 _144645 P p pat e q f a)). Qed.
Lemma lem8205274 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term568 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) = (term569 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g).
Proof. exact (MK_COMB (@lem8205273 _144530 _144607 _144645 P p pat e q f a) (@lem8205271 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g)). Qed.
Lemma lem8205275 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term570 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) = (term568 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g).
Proof. exact (@lem17045 (term159 _144530 _144607 _144645 P p pat e q f a) (term167 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g)). Qed.
Lemma lem8205276 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term570 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) = (term569 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g).
Proof. exact (TRANS (@lem8205275 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) (@lem8205274 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g)). Qed.
Lemma lem8205277 {_144530 _144607 _144654 P : Type'} (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : ((t f a) = (t g a)) = ((t f a) = (t g a)).
Proof. exact (eq_refl ((t f a) = (t g a))). Qed.
Lemma lem8205278 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8205279 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term571 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) = (term572 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g).
Proof. exact (MK_COMB (@lem8205278) (@lem8205276 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g)). Qed.
Lemma lem8205280 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (term573 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g a) = (term574 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g a).
Proof. exact (MK_COMB (@lem8205279 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) (@lem8205277 _144530 _144607 _144654 P f t g a)). Qed.
Lemma lem8205281 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (term173 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g a) = (term573 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g a).
Proof. exact (@lem17265 (term169 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) ((t f a) = (t g a))). Qed.
Lemma lem8205282 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (term173 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g a) = (term574 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g a).
Proof. exact (TRANS (@lem8205281 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g a) (@lem8205280 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g a)). Qed.
Lemma lem8205283 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) : (term175 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g) = (term575 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g).
Proof. exact (fun_ext (fun a : P => @lem8205282 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g a)). Qed.
Lemma lem8205284 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8205285 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) : (term177 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g) = (term576 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g).
Proof. exact (MK_COMB (@lem8205284 P) (@lem8205283 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g)). Qed.
Lemma lem8205286 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) : (term179 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t) = (term577 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t).
Proof. exact (fun_ext (fun g : _144530 -> _144607 => @lem8205285 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g)). Qed.
Lemma lem8205287 {_144530 _144607 : Type'} : (@all (_144530 -> _144607)) = (@all (_144530 -> _144607)).
Proof. exact (eq_refl (@all (_144530 -> _144607))). Qed.
Lemma lem8205288 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) : (term181 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t) = (term578 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t).
Proof. exact (MK_COMB (@lem8205287 _144530 _144607) (@lem8205286 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t)). Qed.
Lemma lem8205289 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (t : type564 _144530 _144607 _144654 P) : (term183 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) = (term579 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t).
Proof. exact (fun_ext (fun f : _144530 -> _144607 => @lem8205288 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t)). Qed.
Lemma lem8205290 {_144530 _144607 : Type'} : (@all (_144530 -> _144607)) = (@all (_144530 -> _144607)).
Proof. exact (eq_refl (@all (_144530 -> _144607))). Qed.
Lemma lem8205291 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (t : type564 _144530 _144607 _144654 P) : (term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) = (term580 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t).
Proof. exact (MK_COMB (@lem8205290 _144530 _144607) (@lem8205289 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t)). Qed.
Lemma lem8205398 {A : Type'} (P : Prop) (Q : A -> Prop) : (term433 A P Q) = (term434 A P Q).
Proof. exact (EQ_MP (@lem18911 A P Q) (@lem18910 A P Q)). Qed.
Lemma lem8205399 {_144530 : Type'} (P : Prop) (Q : _144530 -> Prop) : (term433 _144530 P Q) = (term434 _144530 P Q).
Proof. exact (@lem8205398 _144530 P Q). Qed.
Lemma lem8205400 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term581 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) = (term582 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g).
Proof. exact (@lem8205399 _144530 (term560 _144530 _144607 _144645 P p pat e q g a) (term414 _144529 _144530 _144607 P lt2 s a f g)). Qed.
Lemma lem8205401 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (z : _144530) : (term438 _144529 _144530 _144607 P lt2 s a f g z) = (term405 _144529 _144530 _144607 P lt2 s a f g z).
Proof. exact (eq_refl (term438 _144529 _144530 _144607 P lt2 s a f g z)). Qed.
Lemma lem8205402 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term439 _144529 _144530 _144607 P lt2 s a f g) = (term414 _144529 _144530 _144607 P lt2 s a f g).
Proof. exact (fun_ext (fun z : _144530 => @lem8205401 _144529 _144530 _144607 P lt2 s a f g z)). Qed.
Lemma lem8205403 {_144530 : Type'} : (@ex _144530) = (@ex _144530).
Proof. exact (eq_refl (@ex _144530)). Qed.
Lemma lem8205404 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term440 _144529 _144530 _144607 P lt2 s a f g) = (term415 _144529 _144530 _144607 P lt2 s a f g).
Proof. exact (MK_COMB (@lem8205403 _144530) (@lem8205402 _144529 _144530 _144607 P lt2 s a f g)). Qed.
Lemma lem8205405 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term564 _144530 _144607 _144645 P p pat e q g a) = (term564 _144530 _144607 _144645 P p pat e q g a).
Proof. exact (eq_refl (term564 _144530 _144607 _144645 P p pat e q g a)). Qed.
Lemma lem8205406 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term581 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) = (term566 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g).
Proof. exact (MK_COMB (@lem8205405 _144530 _144607 _144645 P p pat e q g a) (@lem8205404 _144529 _144530 _144607 P lt2 s a f g)). Qed.
Lemma lem8205407 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8205408 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term583 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) = (term584 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g).
Proof. exact (MK_COMB (@lem8205407) (@lem8205406 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g)). Qed.
Lemma lem8205409 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (z : _144530) : (term438 _144529 _144530 _144607 P lt2 s a f g z) = (term405 _144529 _144530 _144607 P lt2 s a f g z).
Proof. exact (eq_refl (term438 _144529 _144530 _144607 P lt2 s a f g z)). Qed.
Lemma lem8205410 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term564 _144530 _144607 _144645 P p pat e q g a) = (term564 _144530 _144607 _144645 P p pat e q g a).
Proof. exact (eq_refl (term564 _144530 _144607 _144645 P p pat e q g a)). Qed.
Lemma lem8205411 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (z : _144530) : (term585 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g z) = (term586 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g z).
Proof. exact (MK_COMB (@lem8205410 _144530 _144607 _144645 P p pat e q g a) (@lem8205409 _144529 _144530 _144607 P lt2 s a f g z)). Qed.
Lemma lem8205412 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term587 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) = (term588 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g).
Proof. exact (fun_ext (fun z : _144530 => @lem8205411 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g z)). Qed.
Lemma lem8205413 {_144530 : Type'} : (@ex _144530) = (@ex _144530).
Proof. exact (eq_refl (@ex _144530)). Qed.
Lemma lem8205414 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term582 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) = (term589 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g).
Proof. exact (MK_COMB (@lem8205413 _144530) (@lem8205412 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g)). Qed.
Lemma lem8205415 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : ((term581 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) = (term582 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g)) = ((term566 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) = (term589 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g)).
Proof. exact (MK_COMB (@lem8205408 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) (@lem8205414 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g)). Qed.
Lemma lem8205416 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term566 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) = (term589 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g).
Proof. exact (EQ_MP (@lem8205415 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) (@lem8205400 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g)). Qed.
Lemma lem8205417 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) : (term564 _144530 _144607 _144645 P p pat e q f a) = (term564 _144530 _144607 _144645 P p pat e q f a).
Proof. exact (eq_refl (term564 _144530 _144607 _144645 P p pat e q f a)). Qed.
Lemma lem8205418 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term569 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) = (term590 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g).
Proof. exact (MK_COMB (@lem8205417 _144530 _144607 _144645 P p pat e q f a) (@lem8205416 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g)). Qed.
Lemma lem8205420 {A : Type'} (P : Prop) (Q : A -> Prop) : (term433 A P Q) = (term434 A P Q).
Proof. exact (EQ_MP (@lem18911 A P Q) (@lem18910 A P Q)). Qed.
Lemma lem8205421 {_144530 : Type'} (P : Prop) (Q : _144530 -> Prop) : (term433 _144530 P Q) = (term434 _144530 P Q).
Proof. exact (@lem8205420 _144530 P Q). Qed.
Lemma lem8205422 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term591 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) = (term592 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g).
Proof. exact (@lem8205421 _144530 (term560 _144530 _144607 _144645 P p pat e q f a) (term588 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g)). Qed.
Lemma lem8205423 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (z : _144530) : (term593 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g z) = (term586 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g z).
Proof. exact (eq_refl (term593 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g z)). Qed.
Lemma lem8205424 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term594 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) = (term588 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g).
Proof. exact (fun_ext (fun z : _144530 => @lem8205423 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g z)). Qed.
Lemma lem8205425 {_144530 : Type'} : (@ex _144530) = (@ex _144530).
Proof. exact (eq_refl (@ex _144530)). Qed.
Lemma lem8205426 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term595 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) = (term589 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g).
Proof. exact (MK_COMB (@lem8205425 _144530) (@lem8205424 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g)). Qed.
Lemma lem8205427 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) : (term564 _144530 _144607 _144645 P p pat e q f a) = (term564 _144530 _144607 _144645 P p pat e q f a).
Proof. exact (eq_refl (term564 _144530 _144607 _144645 P p pat e q f a)). Qed.
Lemma lem8205428 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term591 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) = (term590 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g).
Proof. exact (MK_COMB (@lem8205427 _144530 _144607 _144645 P p pat e q f a) (@lem8205426 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g)). Qed.
Lemma lem8205429 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8205430 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term596 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) = (term597 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g).
Proof. exact (MK_COMB (@lem8205429) (@lem8205428 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g)). Qed.
Lemma lem8205431 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (z : _144530) : (term593 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g z) = (term586 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g z).
Proof. exact (eq_refl (term593 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g z)). Qed.
Lemma lem8205432 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) : (term564 _144530 _144607 _144645 P p pat e q f a) = (term564 _144530 _144607 _144645 P p pat e q f a).
Proof. exact (eq_refl (term564 _144530 _144607 _144645 P p pat e q f a)). Qed.
Lemma lem8205433 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (z : _144530) : (term598 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g z) = (term599 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g z).
Proof. exact (MK_COMB (@lem8205432 _144530 _144607 _144645 P p pat e q f a) (@lem8205431 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g z)). Qed.
Lemma lem8205434 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term600 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) = (term601 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g).
Proof. exact (fun_ext (fun z : _144530 => @lem8205433 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g z)). Qed.
Lemma lem8205435 {_144530 : Type'} : (@ex _144530) = (@ex _144530).
Proof. exact (eq_refl (@ex _144530)). Qed.
Lemma lem8205436 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term592 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) = (term602 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g).
Proof. exact (MK_COMB (@lem8205435 _144530) (@lem8205434 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g)). Qed.
Lemma lem8205437 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : ((term591 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) = (term592 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g)) = ((term590 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) = (term602 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g)).
Proof. exact (MK_COMB (@lem8205430 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) (@lem8205436 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g)). Qed.
Lemma lem8205438 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term590 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) = (term602 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g).
Proof. exact (EQ_MP (@lem8205437 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) (@lem8205422 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g)). Qed.
Lemma lem8205439 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term569 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) = (term602 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g).
Proof. exact (TRANS (@lem8205418 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) (@lem8205438 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g)). Qed.
Lemma lem8205440 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8205441 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term572 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) = (term603 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g).
Proof. exact (MK_COMB (@lem8205440) (@lem8205439 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g)). Qed.
Lemma lem8205442 {_144530 _144607 _144654 P : Type'} (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : ((t f a) = (t g a)) = ((t f a) = (t g a)).
Proof. exact (eq_refl ((t f a) = (t g a))). Qed.
Lemma lem8205443 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (term574 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g a) = (term604 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g a).
Proof. exact (MK_COMB (@lem8205441 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) (@lem8205442 _144530 _144607 _144654 P f t g a)). Qed.
Lemma lem8205445 {A : Type'} (P : A -> Prop) (Q : Prop) : (term463 A P Q) = (term464 A P Q).
Proof. exact (EQ_MP (@lem18905 A P Q) (@lem18904 A P Q)). Qed.
Lemma lem8205446 {_144530 : Type'} (P : _144530 -> Prop) (Q : Prop) : (term463 _144530 P Q) = (term464 _144530 P Q).
Proof. exact (@lem8205445 _144530 P Q). Qed.
Lemma lem8205447 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (term605 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g a) = (term606 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g a).
Proof. exact (@lem8205446 _144530 (term601 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) ((t f a) = (t g a))). Qed.
Lemma lem8205448 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (z : _144530) : (term607 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g z) = (term599 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g z).
Proof. exact (eq_refl (term607 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g z)). Qed.
Lemma lem8205449 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term608 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) = (term601 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g).
Proof. exact (fun_ext (fun z : _144530 => @lem8205448 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g z)). Qed.
Lemma lem8205450 {_144530 : Type'} : (@ex _144530) = (@ex _144530).
Proof. exact (eq_refl (@ex _144530)). Qed.
Lemma lem8205451 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term609 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) = (term602 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g).
Proof. exact (MK_COMB (@lem8205450 _144530) (@lem8205449 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g)). Qed.
Lemma lem8205452 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8205453 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term610 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) = (term603 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g).
Proof. exact (MK_COMB (@lem8205452) (@lem8205451 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g)). Qed.
Lemma lem8205454 {_144530 _144607 _144654 P : Type'} (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : ((t f a) = (t g a)) = ((t f a) = (t g a)).
Proof. exact (eq_refl ((t f a) = (t g a))). Qed.
Lemma lem8205455 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (term605 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g a) = (term604 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g a).
Proof. exact (MK_COMB (@lem8205453 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) (@lem8205454 _144530 _144607 _144654 P f t g a)). Qed.
Lemma lem8205456 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8205457 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (term611 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g a) = (term612 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g a).
Proof. exact (MK_COMB (@lem8205456) (@lem8205455 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g a)). Qed.
Lemma lem8205458 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (z : _144530) : (term607 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g z) = (term599 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g z).
Proof. exact (eq_refl (term607 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g z)). Qed.
Lemma lem8205459 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8205460 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (z : _144530) : (term613 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g z) = (term614 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g z).
Proof. exact (MK_COMB (@lem8205459) (@lem8205458 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g z)). Qed.
Lemma lem8205461 {_144530 _144607 _144654 P : Type'} (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : ((t f a) = (t g a)) = ((t f a) = (t g a)).
Proof. exact (eq_refl ((t f a) = (t g a))). Qed.
Lemma lem8205462 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : _144530) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (term615 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z f t g a) = (term616 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z f t g a).
Proof. exact (MK_COMB (@lem8205460 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g z) (@lem8205461 _144530 _144607 _144654 P f t g a)). Qed.
Lemma lem8205463 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (term617 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g a) = (term618 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g a).
Proof. exact (fun_ext (fun z : _144530 => @lem8205462 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z f t g a)). Qed.
Lemma lem8205464 {_144530 : Type'} : (@ex _144530) = (@ex _144530).
Proof. exact (eq_refl (@ex _144530)). Qed.
Lemma lem8205465 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (term606 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g a) = (term619 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g a).
Proof. exact (MK_COMB (@lem8205464 _144530) (@lem8205463 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g a)). Qed.
Lemma lem8205466 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : ((term605 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g a) = (term606 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g a)) = ((term604 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g a) = (term619 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g a)).
Proof. exact (MK_COMB (@lem8205457 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g a) (@lem8205465 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g a)). Qed.
Lemma lem8205467 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (term604 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g a) = (term619 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g a).
Proof. exact (EQ_MP (@lem8205466 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g a) (@lem8205447 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g a)). Qed.
Lemma lem8205468 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (term574 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g a) = (term619 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g a).
Proof. exact (TRANS (@lem8205443 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g a) (@lem8205467 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g a)). Qed.
Lemma lem8205469 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) : (term575 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g) = (term620 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g).
Proof. exact (fun_ext (fun a : P => @lem8205468 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g a)). Qed.
Lemma lem8205470 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8205471 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) : (term576 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g) = (term621 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g).
Proof. exact (MK_COMB (@lem8205470 P) (@lem8205469 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g)). Qed.
Lemma lem8205473 {A B : Type'} (P : type1413 A B) : (term482 A B P) = (term483 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem8205474 {_144530 P : Type'} (P' : type1470 _144530 P) : (term484 _144530 P P') = (term485 _144530 P P').
Proof. exact (@lem8205473 P _144530 P'). Qed.
Lemma lem8205475 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) : (term622 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g) = (term623 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g).
Proof. exact (@lem8205474 _144530 P (term624 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g)). Qed.
Lemma lem8205476 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (term625 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g a) = (term618 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g a).
Proof. exact (eq_refl (term625 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g a)). Qed.
Lemma lem8205477 {_144530 : Type'} (z : _144530) : z = z.
Proof. exact (eq_refl z). Qed.
Lemma lem8205478 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) (z : _144530) : (term626 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g a z) = (term627 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g a z).
Proof. exact (MK_COMB (@lem8205476 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g a) (@lem8205477 _144530 z)). Qed.
Lemma lem8205479 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : _144530) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (term627 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g a z) = (term616 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z f t g a).
Proof. exact (eq_refl (term627 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g a z)). Qed.
Lemma lem8205480 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : _144530) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (term626 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g a z) = (term616 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z f t g a).
Proof. exact (TRANS (@lem8205478 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g a z) (@lem8205479 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z f t g a)). Qed.
Lemma lem8205481 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (term628 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g a) = (term618 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g a).
Proof. exact (fun_ext (fun z : _144530 => @lem8205480 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z f t g a)). Qed.
Lemma lem8205482 {_144530 : Type'} : (@ex _144530) = (@ex _144530).
Proof. exact (eq_refl (@ex _144530)). Qed.
Lemma lem8205483 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (term629 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g a) = (term619 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g a).
Proof. exact (MK_COMB (@lem8205482 _144530) (@lem8205481 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g a)). Qed.
Lemma lem8205484 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) : (term630 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g) = (term620 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g).
Proof. exact (fun_ext (fun a : P => @lem8205483 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g a)). Qed.
Lemma lem8205485 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8205486 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) : (term622 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g) = (term621 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g).
Proof. exact (MK_COMB (@lem8205485 P) (@lem8205484 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g)). Qed.
Lemma lem8205487 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8205488 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) : (term631 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g) = (term632 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g).
Proof. exact (MK_COMB (@lem8205487) (@lem8205486 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g)). Qed.
Lemma lem8205489 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (term625 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g a) = (term618 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g a).
Proof. exact (eq_refl (term625 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g a)). Qed.
Lemma lem8205490 {_144530 P : Type'} (z : P -> _144530) (a : P) : (z a) = (z a).
Proof. exact (eq_refl (z a)). Qed.
Lemma lem8205491 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (z : P -> _144530) (a : P) : (term633 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g z a) = (term634 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g z a).
Proof. exact (MK_COMB (@lem8205489 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g a) (@lem8205490 _144530 P z a)). Qed.
Lemma lem8205492 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : P -> _144530) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (term634 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g z a) = (term635 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z f t g a).
Proof. exact (eq_refl (term634 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g z a)). Qed.
Lemma lem8205493 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : P -> _144530) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (term633 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g z a) = (term635 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z f t g a).
Proof. exact (TRANS (@lem8205491 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g z a) (@lem8205492 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z f t g a)). Qed.
Lemma lem8205494 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : P -> _144530) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) : (term636 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g z) = (term637 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z f t g).
Proof. exact (fun_ext (fun a : P => @lem8205493 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z f t g a)). Qed.
Lemma lem8205495 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8205496 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : P -> _144530) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) : (term638 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g z) = (term639 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z f t g).
Proof. exact (MK_COMB (@lem8205495 P) (@lem8205494 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z f t g)). Qed.
Lemma lem8205497 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) : (term640 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g) = (term641 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g).
Proof. exact (fun_ext (fun z : P -> _144530 => @lem8205496 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z f t g)). Qed.
Lemma lem8205498 {_144530 P : Type'} : (@ex (P -> _144530)) = (@ex (P -> _144530)).
Proof. exact (eq_refl (@ex (P -> _144530))). Qed.
Lemma lem8205499 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) : (term623 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g) = (term642 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g).
Proof. exact (MK_COMB (@lem8205498 _144530 P) (@lem8205497 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g)). Qed.
Lemma lem8205500 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) : ((term622 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g) = (term623 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g)) = ((term621 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g) = (term642 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g)).
Proof. exact (MK_COMB (@lem8205488 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g) (@lem8205499 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g)). Qed.
Lemma lem8205501 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) : (term621 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g) = (term642 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g).
Proof. exact (EQ_MP (@lem8205500 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g) (@lem8205475 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g)). Qed.
Lemma lem8205502 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) : (term576 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g) = (term642 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g).
Proof. exact (TRANS (@lem8205471 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g) (@lem8205501 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g)). Qed.
Lemma lem8205503 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) : (term577 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t) = (term643 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t).
Proof. exact (fun_ext (fun g : _144530 -> _144607 => @lem8205502 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g)). Qed.
Lemma lem8205504 {_144530 _144607 : Type'} : (@all (_144530 -> _144607)) = (@all (_144530 -> _144607)).
Proof. exact (eq_refl (@all (_144530 -> _144607))). Qed.
Lemma lem8205505 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) : (term578 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t) = (term644 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t).
Proof. exact (MK_COMB (@lem8205504 _144530 _144607) (@lem8205503 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t)). Qed.
Lemma lem8205507 {A B : Type'} (P : type1413 A B) : (term482 A B P) = (term483 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem8205508 {_144530 _144607 P : Type'} (P' : type537 _144530 _144607 P) : (term509 _144530 _144607 P P') = (term510 _144530 _144607 P P').
Proof. exact (@lem8205507 (_144530 -> _144607) (P -> _144530) P'). Qed.
Lemma lem8205509 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) : (term645 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t) = (term646 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t).
Proof. exact (@lem8205508 _144530 _144607 P (term647 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t)). Qed.
Lemma lem8205510 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) : (term648 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g) = (term641 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g).
Proof. exact (eq_refl (term648 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g)). Qed.
Lemma lem8205511 {_144530 P : Type'} (z : P -> _144530) : z = z.
Proof. exact (eq_refl z). Qed.
Lemma lem8205512 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (z : P -> _144530) : (term649 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g z) = (term650 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g z).
Proof. exact (MK_COMB (@lem8205510 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g) (@lem8205511 _144530 P z)). Qed.
Lemma lem8205513 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : P -> _144530) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) : (term650 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g z) = (term639 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z f t g).
Proof. exact (eq_refl (term650 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g z)). Qed.
Lemma lem8205514 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : P -> _144530) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) : (term649 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g z) = (term639 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z f t g).
Proof. exact (TRANS (@lem8205512 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g z) (@lem8205513 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z f t g)). Qed.
Lemma lem8205515 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) : (term651 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g) = (term641 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g).
Proof. exact (fun_ext (fun z : P -> _144530 => @lem8205514 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z f t g)). Qed.
Lemma lem8205516 {_144530 P : Type'} : (@ex (P -> _144530)) = (@ex (P -> _144530)).
Proof. exact (eq_refl (@ex (P -> _144530))). Qed.
Lemma lem8205517 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) : (term652 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g) = (term642 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g).
Proof. exact (MK_COMB (@lem8205516 _144530 P) (@lem8205515 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g)). Qed.
Lemma lem8205518 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) : (term653 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t) = (term643 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t).
Proof. exact (fun_ext (fun g : _144530 -> _144607 => @lem8205517 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g)). Qed.
Lemma lem8205519 {_144530 _144607 : Type'} : (@all (_144530 -> _144607)) = (@all (_144530 -> _144607)).
Proof. exact (eq_refl (@all (_144530 -> _144607))). Qed.
Lemma lem8205520 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) : (term645 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t) = (term644 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t).
Proof. exact (MK_COMB (@lem8205519 _144530 _144607) (@lem8205518 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t)). Qed.
Lemma lem8205521 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8205522 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) : (term654 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t) = (term655 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t).
Proof. exact (MK_COMB (@lem8205521) (@lem8205520 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t)). Qed.
Lemma lem8205523 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) : (term648 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g) = (term641 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g).
Proof. exact (eq_refl (term648 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g)). Qed.
Lemma lem8205524 {_144530 _144607 P : Type'} (z : type557 _144530 _144607 P) (g : _144530 -> _144607) : (z g) = (z g).
Proof. exact (eq_refl (z g)). Qed.
Lemma lem8205525 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (z : type557 _144530 _144607 P) (g : _144530 -> _144607) : (term656 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t z g) = (term657 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t z g).
Proof. exact (MK_COMB (@lem8205523 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t g) (@lem8205524 _144530 _144607 P z g)). Qed.
Lemma lem8205526 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : type557 _144530 _144607 P) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) : (term657 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t z g) = (term658 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z f t g).
Proof. exact (eq_refl (term657 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t z g)). Qed.
Lemma lem8205527 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : type557 _144530 _144607 P) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) : (term656 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t z g) = (term658 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z f t g).
Proof. exact (TRANS (@lem8205525 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t z g) (@lem8205526 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z f t g)). Qed.
Lemma lem8205528 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : type557 _144530 _144607 P) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) : (term659 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t z) = (term660 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z f t).
Proof. exact (fun_ext (fun g : _144530 -> _144607 => @lem8205527 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z f t g)). Qed.
Lemma lem8205529 {_144530 _144607 : Type'} : (@all (_144530 -> _144607)) = (@all (_144530 -> _144607)).
Proof. exact (eq_refl (@all (_144530 -> _144607))). Qed.
Lemma lem8205530 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : type557 _144530 _144607 P) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) : (term661 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t z) = (term662 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z f t).
Proof. exact (MK_COMB (@lem8205529 _144530 _144607) (@lem8205528 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z f t)). Qed.
Lemma lem8205531 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) : (term663 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t) = (term664 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t).
Proof. exact (fun_ext (fun z : type557 _144530 _144607 P => @lem8205530 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z f t)). Qed.
Lemma lem8205532 {_144530 _144607 P : Type'} : (@ex ((_144530 -> _144607) -> P -> _144530)) = (@ex ((_144530 -> _144607) -> P -> _144530)).
Proof. exact (eq_refl (@ex ((_144530 -> _144607) -> P -> _144530))). Qed.
Lemma lem8205533 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) : (term646 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t) = (term665 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t).
Proof. exact (MK_COMB (@lem8205532 _144530 _144607 P) (@lem8205531 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t)). Qed.
Lemma lem8205534 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) : ((term645 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t) = (term646 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t)) = ((term644 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t) = (term665 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t)).
Proof. exact (MK_COMB (@lem8205522 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t) (@lem8205533 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t)). Qed.
Lemma lem8205535 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) : (term644 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t) = (term665 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t).
Proof. exact (EQ_MP (@lem8205534 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t) (@lem8205509 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t)). Qed.
Lemma lem8205536 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) : (term578 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t) = (term665 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t).
Proof. exact (TRANS (@lem8205505 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t) (@lem8205535 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t)). Qed.
Lemma lem8205537 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (t : type564 _144530 _144607 _144654 P) : (term579 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) = (term666 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t).
Proof. exact (fun_ext (fun f : _144530 -> _144607 => @lem8205536 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t)). Qed.
Lemma lem8205538 {_144530 _144607 : Type'} : (@all (_144530 -> _144607)) = (@all (_144530 -> _144607)).
Proof. exact (eq_refl (@all (_144530 -> _144607))). Qed.
Lemma lem8205539 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (t : type564 _144530 _144607 _144654 P) : (term580 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) = (term667 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t).
Proof. exact (MK_COMB (@lem8205538 _144530 _144607) (@lem8205537 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t)). Qed.
Lemma lem8205541 {A B : Type'} (P : type1413 A B) : (term482 A B P) = (term483 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem8205542 {_144530 _144607 P : Type'} (P' : type495 _144530 _144607 P) : (term534 _144530 _144607 P P') = (term535 _144530 _144607 P P').
Proof. exact (@lem8205541 (_144530 -> _144607) (type557 _144530 _144607 P) P'). Qed.
Lemma lem8205543 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (t : type564 _144530 _144607 _144654 P) : (term668 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) = (term669 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t).
Proof. exact (@lem8205542 _144530 _144607 P (term670 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t)). Qed.
Lemma lem8205544 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) : (term671 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t f) = (term664 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t).
Proof. exact (eq_refl (term671 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t f)). Qed.
Lemma lem8205545 {_144530 _144607 P : Type'} (z : type557 _144530 _144607 P) : z = z.
Proof. exact (eq_refl z). Qed.
Lemma lem8205546 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (z : type557 _144530 _144607 P) : (term672 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t f z) = (term673 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t z).
Proof. exact (MK_COMB (@lem8205544 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t) (@lem8205545 _144530 _144607 P z)). Qed.
Lemma lem8205547 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : type557 _144530 _144607 P) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) : (term673 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t z) = (term662 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z f t).
Proof. exact (eq_refl (term673 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t z)). Qed.
Lemma lem8205548 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : type557 _144530 _144607 P) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) : (term672 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t f z) = (term662 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z f t).
Proof. exact (TRANS (@lem8205546 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t z) (@lem8205547 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z f t)). Qed.
Lemma lem8205549 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) : (term674 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t f) = (term664 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t).
Proof. exact (fun_ext (fun z : type557 _144530 _144607 P => @lem8205548 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z f t)). Qed.
Lemma lem8205550 {_144530 _144607 P : Type'} : (@ex ((_144530 -> _144607) -> P -> _144530)) = (@ex ((_144530 -> _144607) -> P -> _144530)).
Proof. exact (eq_refl (@ex ((_144530 -> _144607) -> P -> _144530))). Qed.
Lemma lem8205551 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) : (term675 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t f) = (term665 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t).
Proof. exact (MK_COMB (@lem8205550 _144530 _144607 P) (@lem8205549 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t)). Qed.
Lemma lem8205552 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (t : type564 _144530 _144607 _144654 P) : (term676 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) = (term666 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t).
Proof. exact (fun_ext (fun f : _144530 -> _144607 => @lem8205551 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t)). Qed.
Lemma lem8205553 {_144530 _144607 : Type'} : (@all (_144530 -> _144607)) = (@all (_144530 -> _144607)).
Proof. exact (eq_refl (@all (_144530 -> _144607))). Qed.
Lemma lem8205554 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (t : type564 _144530 _144607 _144654 P) : (term668 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) = (term667 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t).
Proof. exact (MK_COMB (@lem8205553 _144530 _144607) (@lem8205552 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t)). Qed.
Lemma lem8205555 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8205556 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (t : type564 _144530 _144607 _144654 P) : (term677 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) = (term678 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t).
Proof. exact (MK_COMB (@lem8205555) (@lem8205554 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t)). Qed.
Lemma lem8205557 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) : (term671 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t f) = (term664 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t).
Proof. exact (eq_refl (term671 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t f)). Qed.
Lemma lem8205558 {_144530 _144607 P : Type'} (z : type518 _144530 _144607 P) (f : _144530 -> _144607) : (z f) = (z f).
Proof. exact (eq_refl (z f)). Qed.
Lemma lem8205559 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (t : type564 _144530 _144607 _144654 P) (z : type518 _144530 _144607 P) (f : _144530 -> _144607) : (term679 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t z f) = (term680 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t z f).
Proof. exact (MK_COMB (@lem8205557 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f t) (@lem8205558 _144530 _144607 P z f)). Qed.
Lemma lem8205560 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : type518 _144530 _144607 P) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) : (term680 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t z f) = (term681 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z f t).
Proof. exact (eq_refl (term680 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t z f)). Qed.
Lemma lem8205561 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : type518 _144530 _144607 P) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) : (term679 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t z f) = (term681 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z f t).
Proof. exact (TRANS (@lem8205559 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t z f) (@lem8205560 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z f t)). Qed.
Lemma lem8205562 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : type518 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) : (term682 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t z) = (term683 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z t).
Proof. exact (fun_ext (fun f : _144530 -> _144607 => @lem8205561 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z f t)). Qed.
Lemma lem8205563 {_144530 _144607 : Type'} : (@all (_144530 -> _144607)) = (@all (_144530 -> _144607)).
Proof. exact (eq_refl (@all (_144530 -> _144607))). Qed.
Lemma lem8205564 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : type518 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) : (term684 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t z) = (term685 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z t).
Proof. exact (MK_COMB (@lem8205563 _144530 _144607) (@lem8205562 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z t)). Qed.
Lemma lem8205565 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (t : type564 _144530 _144607 _144654 P) : (term686 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) = (term687 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t).
Proof. exact (fun_ext (fun z : type518 _144530 _144607 P => @lem8205564 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z t)). Qed.
Lemma lem8205566 {_144530 _144607 P : Type'} : (@ex ((_144530 -> _144607) -> (_144530 -> _144607) -> P -> _144530)) = (@ex ((_144530 -> _144607) -> (_144530 -> _144607) -> P -> _144530)).
Proof. exact (eq_refl (@ex ((_144530 -> _144607) -> (_144530 -> _144607) -> P -> _144530))). Qed.
Lemma lem8205567 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (t : type564 _144530 _144607 _144654 P) : (term669 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) = (term688 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t).
Proof. exact (MK_COMB (@lem8205566 _144530 _144607 P) (@lem8205565 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t)). Qed.
Lemma lem8205568 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (t : type564 _144530 _144607 _144654 P) : ((term668 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) = (term669 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t)) = ((term667 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) = (term688 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t)).
Proof. exact (MK_COMB (@lem8205556 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) (@lem8205567 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t)). Qed.
Lemma lem8205569 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (t : type564 _144530 _144607 _144654 P) : (term667 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) = (term688 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t).
Proof. exact (EQ_MP (@lem8205568 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) (@lem8205543 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t)). Qed.
Lemma lem8205571 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (t : type564 _144530 _144607 _144654 P) : (term580 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) = (term688 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t).
Proof. exact (TRANS (@lem8205539 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) (@lem8205569 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t)). Qed.
Lemma lem8205572 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (t : type564 _144530 _144607 _144654 P) : (term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) = (term688 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t).
Proof. exact (TRANS (@lem8205291 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) (@lem8205571 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t)). Qed.
Lemma lem8205573 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (t : type564 _144530 _144607 _144654 P) (h1 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) : term688 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t.
Proof. exact (EQ_MP (@lem8205572 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) (@lem8204557 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t h1)). Qed.
Lemma lem8205580 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (a : P) : (term689 _144530 _144607 _144645 P p pat e f a) = (term690 _144530 _144607 _144645 P p pat e f a).
Proof. exact (@lem17045 (p f a) ((pat f a) = (e f a))). Qed.
Lemma lem8205587 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term689 _144530 _144607 _144645 P p pat e g a) = (term690 _144530 _144607 _144645 P p pat e g a).
Proof. exact (@lem17045 (p g a) ((pat g a) = (e g a))). Qed.
Lemma lem8205594 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (z : _144530) : (term404 _144529 _144530 _144607 P lt2 s a f g z) = (term405 _144529 _144530 _144607 P lt2 s a f g z).
Proof. exact (@lem17362 (term406 _144529 _144530 P lt2 z s a) ((f z) = (g z))). Qed.
Lemma lem8205595 {_144530 : Type'} (P : _144530 -> Prop) : (term407 _144530 P) = (term408 _144530 P).
Proof. exact (@lem18392 _144530 P). Qed.
Lemma lem8205596 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term409 _144529 _144530 _144607 P lt2 s a f g) = (term410 _144529 _144530 _144607 P lt2 s a f g).
Proof. exact (@lem8205595 _144530 (term397 _144529 _144530 _144607 P lt2 s a f g)). Qed.
Lemma lem8205597 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (z : _144530) : (term411 _144529 _144530 _144607 P lt2 s a f g z) = (term396 _144529 _144530 _144607 P lt2 s a f g z).
Proof. exact (eq_refl (term411 _144529 _144530 _144607 P lt2 s a f g z)). Qed.
Lemma lem8205598 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8205599 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (z : _144530) : (term412 _144529 _144530 _144607 P lt2 s a f g z) = (term404 _144529 _144530 _144607 P lt2 s a f g z).
Proof. exact (MK_COMB (@lem8205598) (@lem8205597 _144529 _144530 _144607 P lt2 s a f g z)). Qed.
Lemma lem8205600 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (z : _144530) : (term412 _144529 _144530 _144607 P lt2 s a f g z) = (term405 _144529 _144530 _144607 P lt2 s a f g z).
Proof. exact (TRANS (@lem8205599 _144529 _144530 _144607 P lt2 s a f g z) (@lem8205594 _144529 _144530 _144607 P lt2 s a f g z)). Qed.
Lemma lem8205601 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term413 _144529 _144530 _144607 P lt2 s a f g) = (term414 _144529 _144530 _144607 P lt2 s a f g).
Proof. exact (fun_ext (fun z : _144530 => @lem8205600 _144529 _144530 _144607 P lt2 s a f g z)). Qed.
Lemma lem8205602 {_144530 : Type'} : (@ex _144530) = (@ex _144530).
Proof. exact (eq_refl (@ex _144530)). Qed.
Lemma lem8205603 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term410 _144529 _144530 _144607 P lt2 s a f g) = (term415 _144529 _144530 _144607 P lt2 s a f g).
Proof. exact (MK_COMB (@lem8205602 _144530) (@lem8205601 _144529 _144530 _144607 P lt2 s a f g)). Qed.
Lemma lem8205604 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term409 _144529 _144530 _144607 P lt2 s a f g) = (term415 _144529 _144530 _144607 P lt2 s a f g).
Proof. exact (TRANS (@lem8205596 _144529 _144530 _144607 P lt2 s a f g) (@lem8205603 _144529 _144530 _144607 P lt2 s a f g)). Qed.
Lemma lem8205605 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8205606 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term691 _144530 _144607 _144645 P p pat e g a) = (term692 _144530 _144607 _144645 P p pat e g a).
Proof. exact (MK_COMB (@lem8205605) (@lem8205587 _144530 _144607 _144645 P p pat e g a)). Qed.
Lemma lem8205607 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term693 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g) = (term694 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g).
Proof. exact (MK_COMB (@lem8205606 _144530 _144607 _144645 P p pat e g a) (@lem8205604 _144529 _144530 _144607 P lt2 s a f g)). Qed.
Lemma lem8205608 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term695 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g) = (term693 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g).
Proof. exact (@lem17045 (term200 _144530 _144607 _144645 P p pat e g a) (term165 _144529 _144530 _144607 P lt2 s a f g)). Qed.
Lemma lem8205609 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term695 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g) = (term694 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g).
Proof. exact (TRANS (@lem8205608 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g) (@lem8205607 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g)). Qed.
Lemma lem8205610 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8205611 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (a : P) : (term691 _144530 _144607 _144645 P p pat e f a) = (term692 _144530 _144607 _144645 P p pat e f a).
Proof. exact (MK_COMB (@lem8205610) (@lem8205580 _144530 _144607 _144645 P p pat e f a)). Qed.
Lemma lem8205612 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term696 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g) = (term697 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g).
Proof. exact (MK_COMB (@lem8205611 _144530 _144607 _144645 P p pat e f a) (@lem8205609 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g)). Qed.
Lemma lem8205613 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term698 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g) = (term696 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g).
Proof. exact (@lem17045 (term200 _144530 _144607 _144645 P p pat e f a) (term207 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g)). Qed.
Lemma lem8205614 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term698 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g) = (term697 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g).
Proof. exact (TRANS (@lem8205613 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g) (@lem8205612 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g)). Qed.
Lemma lem8205629 {_144530 _144607 P : Type'} (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : ((q f a) = (q g a)) = (term699 _144530 _144607 P f q g a).
Proof. exact (@lem17784 (q f a) (q g a)). Qed.
Lemma lem8205630 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8205631 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term700 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g) = (term701 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g).
Proof. exact (MK_COMB (@lem8205630) (@lem8205614 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g)). Qed.
Lemma lem8205632 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term702 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g a) = (term703 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g a).
Proof. exact (MK_COMB (@lem8205631 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g) (@lem8205629 _144530 _144607 P f q g a)). Qed.
Lemma lem8205633 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term213 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g a) = (term702 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g a).
Proof. exact (@lem17265 (term209 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g) ((q f a) = (q g a))). Qed.
Lemma lem8205634 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term213 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g a) = (term703 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g a).
Proof. exact (TRANS (@lem8205633 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g a) (@lem8205632 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g a)). Qed.
Lemma lem8205635 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) : (term215 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g) = (term704 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g).
Proof. exact (fun_ext (fun a : P => @lem8205634 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g a)). Qed.
Lemma lem8205636 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8205637 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) : (term217 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g) = (term705 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g).
Proof. exact (MK_COMB (@lem8205636 P) (@lem8205635 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g)). Qed.
Lemma lem8205638 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) : (term219 _144529 _144530 _144607 _144645 P p pat e lt2 s f q) = (term706 _144529 _144530 _144607 _144645 P p pat e lt2 s f q).
Proof. exact (fun_ext (fun g : _144530 -> _144607 => @lem8205637 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g)). Qed.
Lemma lem8205639 {_144530 _144607 : Type'} : (@all (_144530 -> _144607)) = (@all (_144530 -> _144607)).
Proof. exact (eq_refl (@all (_144530 -> _144607))). Qed.
Lemma lem8205640 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) : (term221 _144529 _144530 _144607 _144645 P p pat e lt2 s f q) = (term707 _144529 _144530 _144607 _144645 P p pat e lt2 s f q).
Proof. exact (MK_COMB (@lem8205639 _144530 _144607) (@lem8205638 _144529 _144530 _144607 _144645 P p pat e lt2 s f q)). Qed.
Lemma lem8205641 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (q : type560 _144530 _144607 P) : (term223 _144529 _144530 _144607 _144645 P p pat e lt2 s q) = (term708 _144529 _144530 _144607 _144645 P p pat e lt2 s q).
Proof. exact (fun_ext (fun f : _144530 -> _144607 => @lem8205640 _144529 _144530 _144607 _144645 P p pat e lt2 s f q)). Qed.
Lemma lem8205642 {_144530 _144607 : Type'} : (@all (_144530 -> _144607)) = (@all (_144530 -> _144607)).
Proof. exact (eq_refl (@all (_144530 -> _144607))). Qed.
Lemma lem8205643 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (q : type560 _144530 _144607 P) : (term224 _144529 _144530 _144607 _144645 P p pat e lt2 s q) = (term709 _144529 _144530 _144607 _144645 P p pat e lt2 s q).
Proof. exact (MK_COMB (@lem8205642 _144530 _144607) (@lem8205641 _144529 _144530 _144607 _144645 P p pat e lt2 s q)). Qed.
Lemma lem8205750 {A : Type'} (P : Prop) (Q : A -> Prop) : (term433 A P Q) = (term434 A P Q).
Proof. exact (EQ_MP (@lem18911 A P Q) (@lem18910 A P Q)). Qed.
Lemma lem8205751 {_144530 : Type'} (P : Prop) (Q : _144530 -> Prop) : (term433 _144530 P Q) = (term434 _144530 P Q).
Proof. exact (@lem8205750 _144530 P Q). Qed.
Lemma lem8205752 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term710 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g) = (term711 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g).
Proof. exact (@lem8205751 _144530 (term690 _144530 _144607 _144645 P p pat e g a) (term414 _144529 _144530 _144607 P lt2 s a f g)). Qed.
Lemma lem8205753 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (z : _144530) : (term438 _144529 _144530 _144607 P lt2 s a f g z) = (term405 _144529 _144530 _144607 P lt2 s a f g z).
Proof. exact (eq_refl (term438 _144529 _144530 _144607 P lt2 s a f g z)). Qed.
Lemma lem8205754 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term439 _144529 _144530 _144607 P lt2 s a f g) = (term414 _144529 _144530 _144607 P lt2 s a f g).
Proof. exact (fun_ext (fun z : _144530 => @lem8205753 _144529 _144530 _144607 P lt2 s a f g z)). Qed.
Lemma lem8205755 {_144530 : Type'} : (@ex _144530) = (@ex _144530).
Proof. exact (eq_refl (@ex _144530)). Qed.
Lemma lem8205756 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term440 _144529 _144530 _144607 P lt2 s a f g) = (term415 _144529 _144530 _144607 P lt2 s a f g).
Proof. exact (MK_COMB (@lem8205755 _144530) (@lem8205754 _144529 _144530 _144607 P lt2 s a f g)). Qed.
Lemma lem8205757 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term692 _144530 _144607 _144645 P p pat e g a) = (term692 _144530 _144607 _144645 P p pat e g a).
Proof. exact (eq_refl (term692 _144530 _144607 _144645 P p pat e g a)). Qed.
Lemma lem8205758 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term710 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g) = (term694 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g).
Proof. exact (MK_COMB (@lem8205757 _144530 _144607 _144645 P p pat e g a) (@lem8205756 _144529 _144530 _144607 P lt2 s a f g)). Qed.
Lemma lem8205759 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8205760 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term712 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g) = (term713 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g).
Proof. exact (MK_COMB (@lem8205759) (@lem8205758 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g)). Qed.
Lemma lem8205761 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (z : _144530) : (term438 _144529 _144530 _144607 P lt2 s a f g z) = (term405 _144529 _144530 _144607 P lt2 s a f g z).
Proof. exact (eq_refl (term438 _144529 _144530 _144607 P lt2 s a f g z)). Qed.
Lemma lem8205762 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term692 _144530 _144607 _144645 P p pat e g a) = (term692 _144530 _144607 _144645 P p pat e g a).
Proof. exact (eq_refl (term692 _144530 _144607 _144645 P p pat e g a)). Qed.
Lemma lem8205763 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (z : _144530) : (term714 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g z) = (term715 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g z).
Proof. exact (MK_COMB (@lem8205762 _144530 _144607 _144645 P p pat e g a) (@lem8205761 _144529 _144530 _144607 P lt2 s a f g z)). Qed.
Lemma lem8205764 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term716 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g) = (term717 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g).
Proof. exact (fun_ext (fun z : _144530 => @lem8205763 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g z)). Qed.
Lemma lem8205765 {_144530 : Type'} : (@ex _144530) = (@ex _144530).
Proof. exact (eq_refl (@ex _144530)). Qed.
Lemma lem8205766 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term711 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g) = (term718 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g).
Proof. exact (MK_COMB (@lem8205765 _144530) (@lem8205764 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g)). Qed.
Lemma lem8205767 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : ((term710 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g) = (term711 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g)) = ((term694 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g) = (term718 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g)).
Proof. exact (MK_COMB (@lem8205760 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g) (@lem8205766 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g)). Qed.
Lemma lem8205768 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term694 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g) = (term718 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g).
Proof. exact (EQ_MP (@lem8205767 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g) (@lem8205752 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g)). Qed.
Lemma lem8205769 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (a : P) : (term692 _144530 _144607 _144645 P p pat e f a) = (term692 _144530 _144607 _144645 P p pat e f a).
Proof. exact (eq_refl (term692 _144530 _144607 _144645 P p pat e f a)). Qed.
Lemma lem8205770 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term697 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g) = (term719 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g).
Proof. exact (MK_COMB (@lem8205769 _144530 _144607 _144645 P p pat e f a) (@lem8205768 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g)). Qed.
Lemma lem8205772 {A : Type'} (P : Prop) (Q : A -> Prop) : (term433 A P Q) = (term434 A P Q).
Proof. exact (EQ_MP (@lem18911 A P Q) (@lem18910 A P Q)). Qed.
Lemma lem8205773 {_144530 : Type'} (P : Prop) (Q : _144530 -> Prop) : (term433 _144530 P Q) = (term434 _144530 P Q).
Proof. exact (@lem8205772 _144530 P Q). Qed.
Lemma lem8205774 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term720 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g) = (term721 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g).
Proof. exact (@lem8205773 _144530 (term690 _144530 _144607 _144645 P p pat e f a) (term717 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g)). Qed.
Lemma lem8205775 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (z : _144530) : (term722 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g z) = (term715 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g z).
Proof. exact (eq_refl (term722 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g z)). Qed.
Lemma lem8205776 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term723 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g) = (term717 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g).
Proof. exact (fun_ext (fun z : _144530 => @lem8205775 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g z)). Qed.
Lemma lem8205777 {_144530 : Type'} : (@ex _144530) = (@ex _144530).
Proof. exact (eq_refl (@ex _144530)). Qed.
Lemma lem8205778 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term724 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g) = (term718 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g).
Proof. exact (MK_COMB (@lem8205777 _144530) (@lem8205776 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g)). Qed.
Lemma lem8205779 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (a : P) : (term692 _144530 _144607 _144645 P p pat e f a) = (term692 _144530 _144607 _144645 P p pat e f a).
Proof. exact (eq_refl (term692 _144530 _144607 _144645 P p pat e f a)). Qed.
Lemma lem8205780 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term720 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g) = (term719 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g).
Proof. exact (MK_COMB (@lem8205779 _144530 _144607 _144645 P p pat e f a) (@lem8205778 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g)). Qed.
Lemma lem8205781 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8205782 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term725 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g) = (term726 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g).
Proof. exact (MK_COMB (@lem8205781) (@lem8205780 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g)). Qed.
Lemma lem8205783 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (z : _144530) : (term722 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g z) = (term715 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g z).
Proof. exact (eq_refl (term722 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g z)). Qed.
Lemma lem8205784 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (a : P) : (term692 _144530 _144607 _144645 P p pat e f a) = (term692 _144530 _144607 _144645 P p pat e f a).
Proof. exact (eq_refl (term692 _144530 _144607 _144645 P p pat e f a)). Qed.
Lemma lem8205785 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (z : _144530) : (term727 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g z) = (term728 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g z).
Proof. exact (MK_COMB (@lem8205784 _144530 _144607 _144645 P p pat e f a) (@lem8205783 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g z)). Qed.
Lemma lem8205786 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term729 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g) = (term730 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g).
Proof. exact (fun_ext (fun z : _144530 => @lem8205785 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g z)). Qed.
Lemma lem8205787 {_144530 : Type'} : (@ex _144530) = (@ex _144530).
Proof. exact (eq_refl (@ex _144530)). Qed.
Lemma lem8205788 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term721 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g) = (term731 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g).
Proof. exact (MK_COMB (@lem8205787 _144530) (@lem8205786 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g)). Qed.
Lemma lem8205789 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : ((term720 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g) = (term721 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g)) = ((term719 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g) = (term731 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g)).
Proof. exact (MK_COMB (@lem8205782 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g) (@lem8205788 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g)). Qed.
Lemma lem8205790 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term719 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g) = (term731 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g).
Proof. exact (EQ_MP (@lem8205789 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g) (@lem8205774 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g)). Qed.
Lemma lem8205791 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term697 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g) = (term731 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g).
Proof. exact (TRANS (@lem8205770 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g) (@lem8205790 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g)). Qed.
Lemma lem8205792 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8205793 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term701 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g) = (term732 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g).
Proof. exact (MK_COMB (@lem8205792) (@lem8205791 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g)). Qed.
Lemma lem8205794 {_144530 _144607 P : Type'} (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term699 _144530 _144607 P f q g a) = (term699 _144530 _144607 P f q g a).
Proof. exact (eq_refl (term699 _144530 _144607 P f q g a)). Qed.
Lemma lem8205795 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term703 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g a) = (term733 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g a).
Proof. exact (MK_COMB (@lem8205793 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g) (@lem8205794 _144530 _144607 P f q g a)). Qed.
Lemma lem8205797 {A : Type'} (P : A -> Prop) (Q : Prop) : (term463 A P Q) = (term464 A P Q).
Proof. exact (EQ_MP (@lem18905 A P Q) (@lem18904 A P Q)). Qed.
Lemma lem8205798 {_144530 : Type'} (P : _144530 -> Prop) (Q : Prop) : (term463 _144530 P Q) = (term464 _144530 P Q).
Proof. exact (@lem8205797 _144530 P Q). Qed.
Lemma lem8205799 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term734 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g a) = (term735 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g a).
Proof. exact (@lem8205798 _144530 (term730 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g) (term699 _144530 _144607 P f q g a)). Qed.
Lemma lem8205800 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (z : _144530) : (term736 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g z) = (term728 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g z).
Proof. exact (eq_refl (term736 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g z)). Qed.
Lemma lem8205801 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term737 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g) = (term730 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g).
Proof. exact (fun_ext (fun z : _144530 => @lem8205800 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g z)). Qed.
Lemma lem8205802 {_144530 : Type'} : (@ex _144530) = (@ex _144530).
Proof. exact (eq_refl (@ex _144530)). Qed.
Lemma lem8205803 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term738 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g) = (term731 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g).
Proof. exact (MK_COMB (@lem8205802 _144530) (@lem8205801 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g)). Qed.
Lemma lem8205804 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8205805 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term739 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g) = (term732 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g).
Proof. exact (MK_COMB (@lem8205804) (@lem8205803 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g)). Qed.
Lemma lem8205806 {_144530 _144607 P : Type'} (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term699 _144530 _144607 P f q g a) = (term699 _144530 _144607 P f q g a).
Proof. exact (eq_refl (term699 _144530 _144607 P f q g a)). Qed.
Lemma lem8205807 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term734 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g a) = (term733 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g a).
Proof. exact (MK_COMB (@lem8205805 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g) (@lem8205806 _144530 _144607 P f q g a)). Qed.
Lemma lem8205808 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8205809 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term740 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g a) = (term741 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g a).
Proof. exact (MK_COMB (@lem8205808) (@lem8205807 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g a)). Qed.
Lemma lem8205810 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (z : _144530) : (term736 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g z) = (term728 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g z).
Proof. exact (eq_refl (term736 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g z)). Qed.
Lemma lem8205811 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8205812 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (z : _144530) : (term742 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g z) = (term743 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g z).
Proof. exact (MK_COMB (@lem8205811) (@lem8205810 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g z)). Qed.
Lemma lem8205813 {_144530 _144607 P : Type'} (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term699 _144530 _144607 P f q g a) = (term699 _144530 _144607 P f q g a).
Proof. exact (eq_refl (term699 _144530 _144607 P f q g a)). Qed.
Lemma lem8205814 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : _144530) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term744 _144529 _144530 _144607 _144645 P p pat e lt2 s z f q g a) = (term745 _144529 _144530 _144607 _144645 P p pat e lt2 s z f q g a).
Proof. exact (MK_COMB (@lem8205812 _144529 _144530 _144607 _144645 P p pat e lt2 s a f g z) (@lem8205813 _144530 _144607 P f q g a)). Qed.
Lemma lem8205815 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term746 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g a) = (term747 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g a).
Proof. exact (fun_ext (fun z : _144530 => @lem8205814 _144529 _144530 _144607 _144645 P p pat e lt2 s z f q g a)). Qed.
Lemma lem8205816 {_144530 : Type'} : (@ex _144530) = (@ex _144530).
Proof. exact (eq_refl (@ex _144530)). Qed.
Lemma lem8205817 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term735 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g a) = (term748 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g a).
Proof. exact (MK_COMB (@lem8205816 _144530) (@lem8205815 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g a)). Qed.
Lemma lem8205818 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : ((term734 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g a) = (term735 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g a)) = ((term733 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g a) = (term748 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g a)).
Proof. exact (MK_COMB (@lem8205809 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g a) (@lem8205817 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g a)). Qed.
Lemma lem8205819 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term733 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g a) = (term748 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g a).
Proof. exact (EQ_MP (@lem8205818 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g a) (@lem8205799 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g a)). Qed.
Lemma lem8205820 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term703 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g a) = (term748 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g a).
Proof. exact (TRANS (@lem8205795 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g a) (@lem8205819 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g a)). Qed.
Lemma lem8205821 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) : (term704 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g) = (term749 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g).
Proof. exact (fun_ext (fun a : P => @lem8205820 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g a)). Qed.
Lemma lem8205822 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8205823 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) : (term705 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g) = (term750 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g).
Proof. exact (MK_COMB (@lem8205822 P) (@lem8205821 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g)). Qed.
Lemma lem8205825 {A B : Type'} (P : type1413 A B) : (term482 A B P) = (term483 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem8205826 {_144530 P : Type'} (P' : type1470 _144530 P) : (term484 _144530 P P') = (term485 _144530 P P').
Proof. exact (@lem8205825 P _144530 P'). Qed.
Lemma lem8205827 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) : (term751 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g) = (term752 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g).
Proof. exact (@lem8205826 _144530 P (term753 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g)). Qed.
Lemma lem8205828 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term754 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g a) = (term747 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g a).
Proof. exact (eq_refl (term754 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g a)). Qed.
Lemma lem8205829 {_144530 : Type'} (z : _144530) : z = z.
Proof. exact (eq_refl z). Qed.
Lemma lem8205830 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (z : _144530) : (term755 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g a z) = (term756 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g a z).
Proof. exact (MK_COMB (@lem8205828 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g a) (@lem8205829 _144530 z)). Qed.
Lemma lem8205831 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : _144530) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term756 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g a z) = (term745 _144529 _144530 _144607 _144645 P p pat e lt2 s z f q g a).
Proof. exact (eq_refl (term756 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g a z)). Qed.
Lemma lem8205832 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : _144530) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term755 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g a z) = (term745 _144529 _144530 _144607 _144645 P p pat e lt2 s z f q g a).
Proof. exact (TRANS (@lem8205830 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g a z) (@lem8205831 _144529 _144530 _144607 _144645 P p pat e lt2 s z f q g a)). Qed.
Lemma lem8205833 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term757 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g a) = (term747 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g a).
Proof. exact (fun_ext (fun z : _144530 => @lem8205832 _144529 _144530 _144607 _144645 P p pat e lt2 s z f q g a)). Qed.
Lemma lem8205834 {_144530 : Type'} : (@ex _144530) = (@ex _144530).
Proof. exact (eq_refl (@ex _144530)). Qed.
Lemma lem8205835 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term758 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g a) = (term748 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g a).
Proof. exact (MK_COMB (@lem8205834 _144530) (@lem8205833 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g a)). Qed.
Lemma lem8205836 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) : (term759 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g) = (term749 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g).
Proof. exact (fun_ext (fun a : P => @lem8205835 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g a)). Qed.
Lemma lem8205837 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8205838 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) : (term751 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g) = (term750 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g).
Proof. exact (MK_COMB (@lem8205837 P) (@lem8205836 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g)). Qed.
Lemma lem8205839 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8205840 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) : (term760 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g) = (term761 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g).
Proof. exact (MK_COMB (@lem8205839) (@lem8205838 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g)). Qed.
Lemma lem8205841 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term754 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g a) = (term747 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g a).
Proof. exact (eq_refl (term754 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g a)). Qed.
Lemma lem8205842 {_144530 P : Type'} (z : P -> _144530) (a : P) : (z a) = (z a).
Proof. exact (eq_refl (z a)). Qed.
Lemma lem8205843 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (z : P -> _144530) (a : P) : (term762 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g z a) = (term763 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g z a).
Proof. exact (MK_COMB (@lem8205841 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g a) (@lem8205842 _144530 P z a)). Qed.
Lemma lem8205844 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : P -> _144530) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term763 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g z a) = (term764 _144529 _144530 _144607 _144645 P p pat e lt2 s z f q g a).
Proof. exact (eq_refl (term763 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g z a)). Qed.
Lemma lem8205845 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : P -> _144530) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term762 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g z a) = (term764 _144529 _144530 _144607 _144645 P p pat e lt2 s z f q g a).
Proof. exact (TRANS (@lem8205843 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g z a) (@lem8205844 _144529 _144530 _144607 _144645 P p pat e lt2 s z f q g a)). Qed.
Lemma lem8205846 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : P -> _144530) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) : (term765 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g z) = (term766 _144529 _144530 _144607 _144645 P p pat e lt2 s z f q g).
Proof. exact (fun_ext (fun a : P => @lem8205845 _144529 _144530 _144607 _144645 P p pat e lt2 s z f q g a)). Qed.
Lemma lem8205847 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8205848 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : P -> _144530) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) : (term767 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g z) = (term768 _144529 _144530 _144607 _144645 P p pat e lt2 s z f q g).
Proof. exact (MK_COMB (@lem8205847 P) (@lem8205846 _144529 _144530 _144607 _144645 P p pat e lt2 s z f q g)). Qed.
Lemma lem8205849 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) : (term769 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g) = (term770 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g).
Proof. exact (fun_ext (fun z : P -> _144530 => @lem8205848 _144529 _144530 _144607 _144645 P p pat e lt2 s z f q g)). Qed.
Lemma lem8205850 {_144530 P : Type'} : (@ex (P -> _144530)) = (@ex (P -> _144530)).
Proof. exact (eq_refl (@ex (P -> _144530))). Qed.
Lemma lem8205851 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) : (term752 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g) = (term771 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g).
Proof. exact (MK_COMB (@lem8205850 _144530 P) (@lem8205849 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g)). Qed.
Lemma lem8205852 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) : ((term751 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g) = (term752 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g)) = ((term750 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g) = (term771 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g)).
Proof. exact (MK_COMB (@lem8205840 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g) (@lem8205851 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g)). Qed.
Lemma lem8205853 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) : (term750 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g) = (term771 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g).
Proof. exact (EQ_MP (@lem8205852 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g) (@lem8205827 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g)). Qed.
Lemma lem8205854 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) : (term705 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g) = (term771 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g).
Proof. exact (TRANS (@lem8205823 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g) (@lem8205853 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g)). Qed.
Lemma lem8205855 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) : (term706 _144529 _144530 _144607 _144645 P p pat e lt2 s f q) = (term772 _144529 _144530 _144607 _144645 P p pat e lt2 s f q).
Proof. exact (fun_ext (fun g : _144530 -> _144607 => @lem8205854 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g)). Qed.
Lemma lem8205856 {_144530 _144607 : Type'} : (@all (_144530 -> _144607)) = (@all (_144530 -> _144607)).
Proof. exact (eq_refl (@all (_144530 -> _144607))). Qed.
Lemma lem8205857 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) : (term707 _144529 _144530 _144607 _144645 P p pat e lt2 s f q) = (term773 _144529 _144530 _144607 _144645 P p pat e lt2 s f q).
Proof. exact (MK_COMB (@lem8205856 _144530 _144607) (@lem8205855 _144529 _144530 _144607 _144645 P p pat e lt2 s f q)). Qed.
Lemma lem8205859 {A B : Type'} (P : type1413 A B) : (term482 A B P) = (term483 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem8205860 {_144530 _144607 P : Type'} (P' : type537 _144530 _144607 P) : (term509 _144530 _144607 P P') = (term510 _144530 _144607 P P').
Proof. exact (@lem8205859 (_144530 -> _144607) (P -> _144530) P'). Qed.
Lemma lem8205861 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) : (term774 _144529 _144530 _144607 _144645 P p pat e lt2 s f q) = (term775 _144529 _144530 _144607 _144645 P p pat e lt2 s f q).
Proof. exact (@lem8205860 _144530 _144607 P (term776 _144529 _144530 _144607 _144645 P p pat e lt2 s f q)). Qed.
Lemma lem8205862 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) : (term777 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g) = (term770 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g).
Proof. exact (eq_refl (term777 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g)). Qed.
Lemma lem8205863 {_144530 P : Type'} (z : P -> _144530) : z = z.
Proof. exact (eq_refl z). Qed.
Lemma lem8205864 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (z : P -> _144530) : (term778 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g z) = (term779 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g z).
Proof. exact (MK_COMB (@lem8205862 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g) (@lem8205863 _144530 P z)). Qed.
Lemma lem8205865 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : P -> _144530) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) : (term779 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g z) = (term768 _144529 _144530 _144607 _144645 P p pat e lt2 s z f q g).
Proof. exact (eq_refl (term779 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g z)). Qed.
Lemma lem8205866 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : P -> _144530) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) : (term778 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g z) = (term768 _144529 _144530 _144607 _144645 P p pat e lt2 s z f q g).
Proof. exact (TRANS (@lem8205864 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g z) (@lem8205865 _144529 _144530 _144607 _144645 P p pat e lt2 s z f q g)). Qed.
Lemma lem8205867 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) : (term780 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g) = (term770 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g).
Proof. exact (fun_ext (fun z : P -> _144530 => @lem8205866 _144529 _144530 _144607 _144645 P p pat e lt2 s z f q g)). Qed.
Lemma lem8205868 {_144530 P : Type'} : (@ex (P -> _144530)) = (@ex (P -> _144530)).
Proof. exact (eq_refl (@ex (P -> _144530))). Qed.
Lemma lem8205869 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) : (term781 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g) = (term771 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g).
Proof. exact (MK_COMB (@lem8205868 _144530 P) (@lem8205867 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g)). Qed.
Lemma lem8205870 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) : (term782 _144529 _144530 _144607 _144645 P p pat e lt2 s f q) = (term772 _144529 _144530 _144607 _144645 P p pat e lt2 s f q).
Proof. exact (fun_ext (fun g : _144530 -> _144607 => @lem8205869 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g)). Qed.
Lemma lem8205871 {_144530 _144607 : Type'} : (@all (_144530 -> _144607)) = (@all (_144530 -> _144607)).
Proof. exact (eq_refl (@all (_144530 -> _144607))). Qed.
Lemma lem8205872 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) : (term774 _144529 _144530 _144607 _144645 P p pat e lt2 s f q) = (term773 _144529 _144530 _144607 _144645 P p pat e lt2 s f q).
Proof. exact (MK_COMB (@lem8205871 _144530 _144607) (@lem8205870 _144529 _144530 _144607 _144645 P p pat e lt2 s f q)). Qed.
Lemma lem8205873 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8205874 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) : (term783 _144529 _144530 _144607 _144645 P p pat e lt2 s f q) = (term784 _144529 _144530 _144607 _144645 P p pat e lt2 s f q).
Proof. exact (MK_COMB (@lem8205873) (@lem8205872 _144529 _144530 _144607 _144645 P p pat e lt2 s f q)). Qed.
Lemma lem8205875 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) : (term777 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g) = (term770 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g).
Proof. exact (eq_refl (term777 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g)). Qed.
Lemma lem8205876 {_144530 _144607 P : Type'} (z : type557 _144530 _144607 P) (g : _144530 -> _144607) : (z g) = (z g).
Proof. exact (eq_refl (z g)). Qed.
Lemma lem8205877 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (z : type557 _144530 _144607 P) (g : _144530 -> _144607) : (term785 _144529 _144530 _144607 _144645 P p pat e lt2 s f q z g) = (term786 _144529 _144530 _144607 _144645 P p pat e lt2 s f q z g).
Proof. exact (MK_COMB (@lem8205875 _144529 _144530 _144607 _144645 P p pat e lt2 s f q g) (@lem8205876 _144530 _144607 P z g)). Qed.
Lemma lem8205878 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : type557 _144530 _144607 P) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) : (term786 _144529 _144530 _144607 _144645 P p pat e lt2 s f q z g) = (term787 _144529 _144530 _144607 _144645 P p pat e lt2 s z f q g).
Proof. exact (eq_refl (term786 _144529 _144530 _144607 _144645 P p pat e lt2 s f q z g)). Qed.
Lemma lem8205879 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : type557 _144530 _144607 P) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) : (term785 _144529 _144530 _144607 _144645 P p pat e lt2 s f q z g) = (term787 _144529 _144530 _144607 _144645 P p pat e lt2 s z f q g).
Proof. exact (TRANS (@lem8205877 _144529 _144530 _144607 _144645 P p pat e lt2 s f q z g) (@lem8205878 _144529 _144530 _144607 _144645 P p pat e lt2 s z f q g)). Qed.
Lemma lem8205880 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : type557 _144530 _144607 P) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) : (term788 _144529 _144530 _144607 _144645 P p pat e lt2 s f q z) = (term789 _144529 _144530 _144607 _144645 P p pat e lt2 s z f q).
Proof. exact (fun_ext (fun g : _144530 -> _144607 => @lem8205879 _144529 _144530 _144607 _144645 P p pat e lt2 s z f q g)). Qed.
Lemma lem8205881 {_144530 _144607 : Type'} : (@all (_144530 -> _144607)) = (@all (_144530 -> _144607)).
Proof. exact (eq_refl (@all (_144530 -> _144607))). Qed.
Lemma lem8205882 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : type557 _144530 _144607 P) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) : (term790 _144529 _144530 _144607 _144645 P p pat e lt2 s f q z) = (term791 _144529 _144530 _144607 _144645 P p pat e lt2 s z f q).
Proof. exact (MK_COMB (@lem8205881 _144530 _144607) (@lem8205880 _144529 _144530 _144607 _144645 P p pat e lt2 s z f q)). Qed.
Lemma lem8205883 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) : (term792 _144529 _144530 _144607 _144645 P p pat e lt2 s f q) = (term793 _144529 _144530 _144607 _144645 P p pat e lt2 s f q).
Proof. exact (fun_ext (fun z : type557 _144530 _144607 P => @lem8205882 _144529 _144530 _144607 _144645 P p pat e lt2 s z f q)). Qed.
Lemma lem8205884 {_144530 _144607 P : Type'} : (@ex ((_144530 -> _144607) -> P -> _144530)) = (@ex ((_144530 -> _144607) -> P -> _144530)).
Proof. exact (eq_refl (@ex ((_144530 -> _144607) -> P -> _144530))). Qed.
Lemma lem8205885 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) : (term775 _144529 _144530 _144607 _144645 P p pat e lt2 s f q) = (term794 _144529 _144530 _144607 _144645 P p pat e lt2 s f q).
Proof. exact (MK_COMB (@lem8205884 _144530 _144607 P) (@lem8205883 _144529 _144530 _144607 _144645 P p pat e lt2 s f q)). Qed.
Lemma lem8205886 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) : ((term774 _144529 _144530 _144607 _144645 P p pat e lt2 s f q) = (term775 _144529 _144530 _144607 _144645 P p pat e lt2 s f q)) = ((term773 _144529 _144530 _144607 _144645 P p pat e lt2 s f q) = (term794 _144529 _144530 _144607 _144645 P p pat e lt2 s f q)).
Proof. exact (MK_COMB (@lem8205874 _144529 _144530 _144607 _144645 P p pat e lt2 s f q) (@lem8205885 _144529 _144530 _144607 _144645 P p pat e lt2 s f q)). Qed.
Lemma lem8205887 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) : (term773 _144529 _144530 _144607 _144645 P p pat e lt2 s f q) = (term794 _144529 _144530 _144607 _144645 P p pat e lt2 s f q).
Proof. exact (EQ_MP (@lem8205886 _144529 _144530 _144607 _144645 P p pat e lt2 s f q) (@lem8205861 _144529 _144530 _144607 _144645 P p pat e lt2 s f q)). Qed.
Lemma lem8205888 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) : (term707 _144529 _144530 _144607 _144645 P p pat e lt2 s f q) = (term794 _144529 _144530 _144607 _144645 P p pat e lt2 s f q).
Proof. exact (TRANS (@lem8205857 _144529 _144530 _144607 _144645 P p pat e lt2 s f q) (@lem8205887 _144529 _144530 _144607 _144645 P p pat e lt2 s f q)). Qed.
Lemma lem8205889 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (q : type560 _144530 _144607 P) : (term708 _144529 _144530 _144607 _144645 P p pat e lt2 s q) = (term795 _144529 _144530 _144607 _144645 P p pat e lt2 s q).
Proof. exact (fun_ext (fun f : _144530 -> _144607 => @lem8205888 _144529 _144530 _144607 _144645 P p pat e lt2 s f q)). Qed.
Lemma lem8205890 {_144530 _144607 : Type'} : (@all (_144530 -> _144607)) = (@all (_144530 -> _144607)).
Proof. exact (eq_refl (@all (_144530 -> _144607))). Qed.
Lemma lem8205891 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (q : type560 _144530 _144607 P) : (term709 _144529 _144530 _144607 _144645 P p pat e lt2 s q) = (term796 _144529 _144530 _144607 _144645 P p pat e lt2 s q).
Proof. exact (MK_COMB (@lem8205890 _144530 _144607) (@lem8205889 _144529 _144530 _144607 _144645 P p pat e lt2 s q)). Qed.
Lemma lem8205893 {A B : Type'} (P : type1413 A B) : (term482 A B P) = (term483 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem8205894 {_144530 _144607 P : Type'} (P' : type495 _144530 _144607 P) : (term534 _144530 _144607 P P') = (term535 _144530 _144607 P P').
Proof. exact (@lem8205893 (_144530 -> _144607) (type557 _144530 _144607 P) P'). Qed.
Lemma lem8205895 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (q : type560 _144530 _144607 P) : (term797 _144529 _144530 _144607 _144645 P p pat e lt2 s q) = (term798 _144529 _144530 _144607 _144645 P p pat e lt2 s q).
Proof. exact (@lem8205894 _144530 _144607 P (term799 _144529 _144530 _144607 _144645 P p pat e lt2 s q)). Qed.
Lemma lem8205896 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) : (term800 _144529 _144530 _144607 _144645 P p pat e lt2 s q f) = (term793 _144529 _144530 _144607 _144645 P p pat e lt2 s f q).
Proof. exact (eq_refl (term800 _144529 _144530 _144607 _144645 P p pat e lt2 s q f)). Qed.
Lemma lem8205897 {_144530 _144607 P : Type'} (z : type557 _144530 _144607 P) : z = z.
Proof. exact (eq_refl z). Qed.
Lemma lem8205898 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (z : type557 _144530 _144607 P) : (term801 _144529 _144530 _144607 _144645 P p pat e lt2 s q f z) = (term802 _144529 _144530 _144607 _144645 P p pat e lt2 s f q z).
Proof. exact (MK_COMB (@lem8205896 _144529 _144530 _144607 _144645 P p pat e lt2 s f q) (@lem8205897 _144530 _144607 P z)). Qed.
Lemma lem8205899 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : type557 _144530 _144607 P) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) : (term802 _144529 _144530 _144607 _144645 P p pat e lt2 s f q z) = (term791 _144529 _144530 _144607 _144645 P p pat e lt2 s z f q).
Proof. exact (eq_refl (term802 _144529 _144530 _144607 _144645 P p pat e lt2 s f q z)). Qed.
Lemma lem8205900 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : type557 _144530 _144607 P) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) : (term801 _144529 _144530 _144607 _144645 P p pat e lt2 s q f z) = (term791 _144529 _144530 _144607 _144645 P p pat e lt2 s z f q).
Proof. exact (TRANS (@lem8205898 _144529 _144530 _144607 _144645 P p pat e lt2 s f q z) (@lem8205899 _144529 _144530 _144607 _144645 P p pat e lt2 s z f q)). Qed.
Lemma lem8205901 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) : (term803 _144529 _144530 _144607 _144645 P p pat e lt2 s q f) = (term793 _144529 _144530 _144607 _144645 P p pat e lt2 s f q).
Proof. exact (fun_ext (fun z : type557 _144530 _144607 P => @lem8205900 _144529 _144530 _144607 _144645 P p pat e lt2 s z f q)). Qed.
Lemma lem8205902 {_144530 _144607 P : Type'} : (@ex ((_144530 -> _144607) -> P -> _144530)) = (@ex ((_144530 -> _144607) -> P -> _144530)).
Proof. exact (eq_refl (@ex ((_144530 -> _144607) -> P -> _144530))). Qed.
Lemma lem8205903 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) : (term804 _144529 _144530 _144607 _144645 P p pat e lt2 s q f) = (term794 _144529 _144530 _144607 _144645 P p pat e lt2 s f q).
Proof. exact (MK_COMB (@lem8205902 _144530 _144607 P) (@lem8205901 _144529 _144530 _144607 _144645 P p pat e lt2 s f q)). Qed.
Lemma lem8205904 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (q : type560 _144530 _144607 P) : (term805 _144529 _144530 _144607 _144645 P p pat e lt2 s q) = (term795 _144529 _144530 _144607 _144645 P p pat e lt2 s q).
Proof. exact (fun_ext (fun f : _144530 -> _144607 => @lem8205903 _144529 _144530 _144607 _144645 P p pat e lt2 s f q)). Qed.
Lemma lem8205905 {_144530 _144607 : Type'} : (@all (_144530 -> _144607)) = (@all (_144530 -> _144607)).
Proof. exact (eq_refl (@all (_144530 -> _144607))). Qed.
Lemma lem8205906 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (q : type560 _144530 _144607 P) : (term797 _144529 _144530 _144607 _144645 P p pat e lt2 s q) = (term796 _144529 _144530 _144607 _144645 P p pat e lt2 s q).
Proof. exact (MK_COMB (@lem8205905 _144530 _144607) (@lem8205904 _144529 _144530 _144607 _144645 P p pat e lt2 s q)). Qed.
Lemma lem8205907 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8205908 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (q : type560 _144530 _144607 P) : (term806 _144529 _144530 _144607 _144645 P p pat e lt2 s q) = (term807 _144529 _144530 _144607 _144645 P p pat e lt2 s q).
Proof. exact (MK_COMB (@lem8205907) (@lem8205906 _144529 _144530 _144607 _144645 P p pat e lt2 s q)). Qed.
Lemma lem8205909 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) : (term800 _144529 _144530 _144607 _144645 P p pat e lt2 s q f) = (term793 _144529 _144530 _144607 _144645 P p pat e lt2 s f q).
Proof. exact (eq_refl (term800 _144529 _144530 _144607 _144645 P p pat e lt2 s q f)). Qed.
Lemma lem8205910 {_144530 _144607 P : Type'} (z : type518 _144530 _144607 P) (f : _144530 -> _144607) : (z f) = (z f).
Proof. exact (eq_refl (z f)). Qed.
Lemma lem8205911 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (q : type560 _144530 _144607 P) (z : type518 _144530 _144607 P) (f : _144530 -> _144607) : (term808 _144529 _144530 _144607 _144645 P p pat e lt2 s q z f) = (term809 _144529 _144530 _144607 _144645 P p pat e lt2 s q z f).
Proof. exact (MK_COMB (@lem8205909 _144529 _144530 _144607 _144645 P p pat e lt2 s f q) (@lem8205910 _144530 _144607 P z f)). Qed.
Lemma lem8205912 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : type518 _144530 _144607 P) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) : (term809 _144529 _144530 _144607 _144645 P p pat e lt2 s q z f) = (term810 _144529 _144530 _144607 _144645 P p pat e lt2 s z f q).
Proof. exact (eq_refl (term809 _144529 _144530 _144607 _144645 P p pat e lt2 s q z f)). Qed.
Lemma lem8205913 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : type518 _144530 _144607 P) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) : (term808 _144529 _144530 _144607 _144645 P p pat e lt2 s q z f) = (term810 _144529 _144530 _144607 _144645 P p pat e lt2 s z f q).
Proof. exact (TRANS (@lem8205911 _144529 _144530 _144607 _144645 P p pat e lt2 s q z f) (@lem8205912 _144529 _144530 _144607 _144645 P p pat e lt2 s z f q)). Qed.
Lemma lem8205914 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : type518 _144530 _144607 P) (q : type560 _144530 _144607 P) : (term811 _144529 _144530 _144607 _144645 P p pat e lt2 s q z) = (term812 _144529 _144530 _144607 _144645 P p pat e lt2 s z q).
Proof. exact (fun_ext (fun f : _144530 -> _144607 => @lem8205913 _144529 _144530 _144607 _144645 P p pat e lt2 s z f q)). Qed.
Lemma lem8205915 {_144530 _144607 : Type'} : (@all (_144530 -> _144607)) = (@all (_144530 -> _144607)).
Proof. exact (eq_refl (@all (_144530 -> _144607))). Qed.
Lemma lem8205916 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : type518 _144530 _144607 P) (q : type560 _144530 _144607 P) : (term813 _144529 _144530 _144607 _144645 P p pat e lt2 s q z) = (term814 _144529 _144530 _144607 _144645 P p pat e lt2 s z q).
Proof. exact (MK_COMB (@lem8205915 _144530 _144607) (@lem8205914 _144529 _144530 _144607 _144645 P p pat e lt2 s z q)). Qed.
Lemma lem8205917 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (q : type560 _144530 _144607 P) : (term815 _144529 _144530 _144607 _144645 P p pat e lt2 s q) = (term816 _144529 _144530 _144607 _144645 P p pat e lt2 s q).
Proof. exact (fun_ext (fun z : type518 _144530 _144607 P => @lem8205916 _144529 _144530 _144607 _144645 P p pat e lt2 s z q)). Qed.
Lemma lem8205918 {_144530 _144607 P : Type'} : (@ex ((_144530 -> _144607) -> (_144530 -> _144607) -> P -> _144530)) = (@ex ((_144530 -> _144607) -> (_144530 -> _144607) -> P -> _144530)).
Proof. exact (eq_refl (@ex ((_144530 -> _144607) -> (_144530 -> _144607) -> P -> _144530))). Qed.
Lemma lem8205919 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (q : type560 _144530 _144607 P) : (term798 _144529 _144530 _144607 _144645 P p pat e lt2 s q) = (term817 _144529 _144530 _144607 _144645 P p pat e lt2 s q).
Proof. exact (MK_COMB (@lem8205918 _144530 _144607 P) (@lem8205917 _144529 _144530 _144607 _144645 P p pat e lt2 s q)). Qed.
Lemma lem8205920 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (q : type560 _144530 _144607 P) : ((term797 _144529 _144530 _144607 _144645 P p pat e lt2 s q) = (term798 _144529 _144530 _144607 _144645 P p pat e lt2 s q)) = ((term796 _144529 _144530 _144607 _144645 P p pat e lt2 s q) = (term817 _144529 _144530 _144607 _144645 P p pat e lt2 s q)).
Proof. exact (MK_COMB (@lem8205908 _144529 _144530 _144607 _144645 P p pat e lt2 s q) (@lem8205919 _144529 _144530 _144607 _144645 P p pat e lt2 s q)). Qed.
Lemma lem8205921 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (q : type560 _144530 _144607 P) : (term796 _144529 _144530 _144607 _144645 P p pat e lt2 s q) = (term817 _144529 _144530 _144607 _144645 P p pat e lt2 s q).
Proof. exact (EQ_MP (@lem8205920 _144529 _144530 _144607 _144645 P p pat e lt2 s q) (@lem8205895 _144529 _144530 _144607 _144645 P p pat e lt2 s q)). Qed.
Lemma lem8205923 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (q : type560 _144530 _144607 P) : (term709 _144529 _144530 _144607 _144645 P p pat e lt2 s q) = (term817 _144529 _144530 _144607 _144645 P p pat e lt2 s q).
Proof. exact (TRANS (@lem8205891 _144529 _144530 _144607 _144645 P p pat e lt2 s q) (@lem8205921 _144529 _144530 _144607 _144645 P p pat e lt2 s q)). Qed.
Lemma lem8205924 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (q : type560 _144530 _144607 P) : (term224 _144529 _144530 _144607 _144645 P p pat e lt2 s q) = (term817 _144529 _144530 _144607 _144645 P p pat e lt2 s q).
Proof. exact (TRANS (@lem8205643 _144529 _144530 _144607 _144645 P p pat e lt2 s q) (@lem8205923 _144529 _144530 _144607 _144645 P p pat e lt2 s q)). Qed.
Lemma lem8205925 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (q : type560 _144530 _144607 P) (h1 : term224 _144529 _144530 _144607 _144645 P p pat e lt2 s q) : term817 _144529 _144530 _144607 _144645 P p pat e lt2 s q.
Proof. exact (EQ_MP (@lem8205924 _144529 _144530 _144607 _144645 P p pat e lt2 s q) (@lem8204558 _144529 _144530 _144607 _144645 P p pat e lt2 s q h1)). Qed.
Lemma lem8205933 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) : (term557 _144530 _144607 _144645 P pat e q f a) = (term558 _144530 _144607 _144645 P pat e q f a).
Proof. exact (@lem17045 ((pat f a) = (e f a)) (q f a)). Qed.
Lemma lem8205935 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) : (term416 _144530 _144607 P p f a) = (term416 _144530 _144607 P p f a).
Proof. exact (eq_refl (term416 _144530 _144607 P p f a)). Qed.
Lemma lem8205936 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) : (term559 _144530 _144607 _144645 P p pat e q f a) = (term560 _144530 _144607 _144645 P p pat e q f a).
Proof. exact (MK_COMB (@lem8205935 _144530 _144607 P p f a) (@lem8205933 _144530 _144607 _144645 P pat e q f a)). Qed.
Lemma lem8205937 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) : (term561 _144530 _144607 _144645 P p pat e q f a) = (term559 _144530 _144607 _144645 P p pat e q f a).
Proof. exact (@lem17045 (p f a) (term562 _144530 _144607 _144645 P pat e q f a)). Qed.
Lemma lem8205938 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) : (term561 _144530 _144607 _144645 P p pat e q f a) = (term560 _144530 _144607 _144645 P p pat e q f a).
Proof. exact (TRANS (@lem8205937 _144530 _144607 _144645 P p pat e q f a) (@lem8205936 _144530 _144607 _144645 P p pat e q f a)). Qed.
Lemma lem8205946 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term557 _144530 _144607 _144645 P pat e q g a) = (term558 _144530 _144607 _144645 P pat e q g a).
Proof. exact (@lem17045 ((pat g a) = (e g a)) (q g a)). Qed.
Lemma lem8205948 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term416 _144530 _144607 P p g a) = (term416 _144530 _144607 P p g a).
Proof. exact (eq_refl (term416 _144530 _144607 P p g a)). Qed.
Lemma lem8205949 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term559 _144530 _144607 _144645 P p pat e q g a) = (term560 _144530 _144607 _144645 P p pat e q g a).
Proof. exact (MK_COMB (@lem8205948 _144530 _144607 P p g a) (@lem8205946 _144530 _144607 _144645 P pat e q g a)). Qed.
Lemma lem8205950 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term561 _144530 _144607 _144645 P p pat e q g a) = (term559 _144530 _144607 _144645 P p pat e q g a).
Proof. exact (@lem17045 (p g a) (term562 _144530 _144607 _144645 P pat e q g a)). Qed.
Lemma lem8205951 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term561 _144530 _144607 _144645 P p pat e q g a) = (term560 _144530 _144607 _144645 P p pat e q g a).
Proof. exact (TRANS (@lem8205950 _144530 _144607 _144645 P p pat e q g a) (@lem8205949 _144530 _144607 _144645 P p pat e q g a)). Qed.
Lemma lem8205958 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (z : _144530) : (term404 _144529 _144530 _144607 P lt2 s a f g z) = (term405 _144529 _144530 _144607 P lt2 s a f g z).
Proof. exact (@lem17362 (term406 _144529 _144530 P lt2 z s a) ((f z) = (g z))). Qed.
Lemma lem8205959 {_144530 : Type'} (P : _144530 -> Prop) : (term407 _144530 P) = (term408 _144530 P).
Proof. exact (@lem18392 _144530 P). Qed.
Lemma lem8205960 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term409 _144529 _144530 _144607 P lt2 s a f g) = (term410 _144529 _144530 _144607 P lt2 s a f g).
Proof. exact (@lem8205959 _144530 (term397 _144529 _144530 _144607 P lt2 s a f g)). Qed.
Lemma lem8205961 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (z : _144530) : (term411 _144529 _144530 _144607 P lt2 s a f g z) = (term396 _144529 _144530 _144607 P lt2 s a f g z).
Proof. exact (eq_refl (term411 _144529 _144530 _144607 P lt2 s a f g z)). Qed.
Lemma lem8205962 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8205963 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (z : _144530) : (term412 _144529 _144530 _144607 P lt2 s a f g z) = (term404 _144529 _144530 _144607 P lt2 s a f g z).
Proof. exact (MK_COMB (@lem8205962) (@lem8205961 _144529 _144530 _144607 P lt2 s a f g z)). Qed.
Lemma lem8205964 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (z : _144530) : (term412 _144529 _144530 _144607 P lt2 s a f g z) = (term405 _144529 _144530 _144607 P lt2 s a f g z).
Proof. exact (TRANS (@lem8205963 _144529 _144530 _144607 P lt2 s a f g z) (@lem8205958 _144529 _144530 _144607 P lt2 s a f g z)). Qed.
Lemma lem8205965 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term413 _144529 _144530 _144607 P lt2 s a f g) = (term414 _144529 _144530 _144607 P lt2 s a f g).
Proof. exact (fun_ext (fun z : _144530 => @lem8205964 _144529 _144530 _144607 P lt2 s a f g z)). Qed.
Lemma lem8205966 {_144530 : Type'} : (@ex _144530) = (@ex _144530).
Proof. exact (eq_refl (@ex _144530)). Qed.
Lemma lem8205967 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term410 _144529 _144530 _144607 P lt2 s a f g) = (term415 _144529 _144530 _144607 P lt2 s a f g).
Proof. exact (MK_COMB (@lem8205966 _144530) (@lem8205965 _144529 _144530 _144607 P lt2 s a f g)). Qed.
Lemma lem8205968 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term409 _144529 _144530 _144607 P lt2 s a f g) = (term415 _144529 _144530 _144607 P lt2 s a f g).
Proof. exact (TRANS (@lem8205960 _144529 _144530 _144607 P lt2 s a f g) (@lem8205967 _144529 _144530 _144607 P lt2 s a f g)). Qed.
Lemma lem8205969 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8205970 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term563 _144530 _144607 _144645 P p pat e q g a) = (term564 _144530 _144607 _144645 P p pat e q g a).
Proof. exact (MK_COMB (@lem8205969) (@lem8205951 _144530 _144607 _144645 P p pat e q g a)). Qed.
Lemma lem8205971 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term565 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) = (term566 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g).
Proof. exact (MK_COMB (@lem8205970 _144530 _144607 _144645 P p pat e q g a) (@lem8205968 _144529 _144530 _144607 P lt2 s a f g)). Qed.
Lemma lem8205972 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term567 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) = (term565 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g).
Proof. exact (@lem17045 (term159 _144530 _144607 _144645 P p pat e q g a) (term165 _144529 _144530 _144607 P lt2 s a f g)). Qed.
Lemma lem8205973 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term567 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) = (term566 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g).
Proof. exact (TRANS (@lem8205972 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) (@lem8205971 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g)). Qed.
Lemma lem8205974 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8205975 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) : (term563 _144530 _144607 _144645 P p pat e q f a) = (term564 _144530 _144607 _144645 P p pat e q f a).
Proof. exact (MK_COMB (@lem8205974) (@lem8205938 _144530 _144607 _144645 P p pat e q f a)). Qed.
Lemma lem8205976 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term568 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) = (term569 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g).
Proof. exact (MK_COMB (@lem8205975 _144530 _144607 _144645 P p pat e q f a) (@lem8205973 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g)). Qed.
Lemma lem8205977 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term570 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) = (term568 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g).
Proof. exact (@lem17045 (term159 _144530 _144607 _144645 P p pat e q f a) (term167 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g)). Qed.
Lemma lem8205978 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term570 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) = (term569 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g).
Proof. exact (TRANS (@lem8205977 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) (@lem8205976 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g)). Qed.
Lemma lem8205979 {_144530 _144607 _144654 P : Type'} (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : ((y f a) = (y g a)) = ((y f a) = (y g a)).
Proof. exact (eq_refl ((y f a) = (y g a))). Qed.
Lemma lem8205980 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8205981 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term571 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) = (term572 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g).
Proof. exact (MK_COMB (@lem8205980) (@lem8205978 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g)). Qed.
Lemma lem8205982 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (term573 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g a) = (term574 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g a).
Proof. exact (MK_COMB (@lem8205981 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) (@lem8205979 _144530 _144607 _144654 P f y g a)). Qed.
Lemma lem8205983 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (term173 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g a) = (term573 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g a).
Proof. exact (@lem17265 (term169 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) ((y f a) = (y g a))). Qed.
Lemma lem8205984 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (term173 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g a) = (term574 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g a).
Proof. exact (TRANS (@lem8205983 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g a) (@lem8205982 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g a)). Qed.
Lemma lem8205985 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) : (term175 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g) = (term575 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g).
Proof. exact (fun_ext (fun a : P => @lem8205984 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g a)). Qed.
Lemma lem8205986 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8205987 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) : (term177 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g) = (term576 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g).
Proof. exact (MK_COMB (@lem8205986 P) (@lem8205985 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g)). Qed.
Lemma lem8205988 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) : (term179 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y) = (term577 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y).
Proof. exact (fun_ext (fun g : _144530 -> _144607 => @lem8205987 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g)). Qed.
Lemma lem8205989 {_144530 _144607 : Type'} : (@all (_144530 -> _144607)) = (@all (_144530 -> _144607)).
Proof. exact (eq_refl (@all (_144530 -> _144607))). Qed.
Lemma lem8205990 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) : (term181 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y) = (term578 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y).
Proof. exact (MK_COMB (@lem8205989 _144530 _144607) (@lem8205988 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y)). Qed.
Lemma lem8205991 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (y : type564 _144530 _144607 _144654 P) : (term183 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y) = (term579 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y).
Proof. exact (fun_ext (fun f : _144530 -> _144607 => @lem8205990 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y)). Qed.
Lemma lem8205992 {_144530 _144607 : Type'} : (@all (_144530 -> _144607)) = (@all (_144530 -> _144607)).
Proof. exact (eq_refl (@all (_144530 -> _144607))). Qed.
Lemma lem8205993 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (y : type564 _144530 _144607 _144654 P) : (term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y) = (term580 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y).
Proof. exact (MK_COMB (@lem8205992 _144530 _144607) (@lem8205991 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y)). Qed.
Lemma lem8206100 {A : Type'} (P : Prop) (Q : A -> Prop) : (term433 A P Q) = (term434 A P Q).
Proof. exact (EQ_MP (@lem18911 A P Q) (@lem18910 A P Q)). Qed.
Lemma lem8206101 {_144530 : Type'} (P : Prop) (Q : _144530 -> Prop) : (term433 _144530 P Q) = (term434 _144530 P Q).
Proof. exact (@lem8206100 _144530 P Q). Qed.
Lemma lem8206102 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term581 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) = (term582 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g).
Proof. exact (@lem8206101 _144530 (term560 _144530 _144607 _144645 P p pat e q g a) (term414 _144529 _144530 _144607 P lt2 s a f g)). Qed.
Lemma lem8206103 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (z : _144530) : (term438 _144529 _144530 _144607 P lt2 s a f g z) = (term405 _144529 _144530 _144607 P lt2 s a f g z).
Proof. exact (eq_refl (term438 _144529 _144530 _144607 P lt2 s a f g z)). Qed.
Lemma lem8206104 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term439 _144529 _144530 _144607 P lt2 s a f g) = (term414 _144529 _144530 _144607 P lt2 s a f g).
Proof. exact (fun_ext (fun z : _144530 => @lem8206103 _144529 _144530 _144607 P lt2 s a f g z)). Qed.
Lemma lem8206105 {_144530 : Type'} : (@ex _144530) = (@ex _144530).
Proof. exact (eq_refl (@ex _144530)). Qed.
Lemma lem8206106 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term440 _144529 _144530 _144607 P lt2 s a f g) = (term415 _144529 _144530 _144607 P lt2 s a f g).
Proof. exact (MK_COMB (@lem8206105 _144530) (@lem8206104 _144529 _144530 _144607 P lt2 s a f g)). Qed.
Lemma lem8206107 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term564 _144530 _144607 _144645 P p pat e q g a) = (term564 _144530 _144607 _144645 P p pat e q g a).
Proof. exact (eq_refl (term564 _144530 _144607 _144645 P p pat e q g a)). Qed.
Lemma lem8206108 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term581 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) = (term566 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g).
Proof. exact (MK_COMB (@lem8206107 _144530 _144607 _144645 P p pat e q g a) (@lem8206106 _144529 _144530 _144607 P lt2 s a f g)). Qed.
Lemma lem8206109 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8206110 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term583 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) = (term584 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g).
Proof. exact (MK_COMB (@lem8206109) (@lem8206108 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g)). Qed.
Lemma lem8206111 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (z : _144530) : (term438 _144529 _144530 _144607 P lt2 s a f g z) = (term405 _144529 _144530 _144607 P lt2 s a f g z).
Proof. exact (eq_refl (term438 _144529 _144530 _144607 P lt2 s a f g z)). Qed.
Lemma lem8206112 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term564 _144530 _144607 _144645 P p pat e q g a) = (term564 _144530 _144607 _144645 P p pat e q g a).
Proof. exact (eq_refl (term564 _144530 _144607 _144645 P p pat e q g a)). Qed.
Lemma lem8206113 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (z : _144530) : (term585 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g z) = (term586 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g z).
Proof. exact (MK_COMB (@lem8206112 _144530 _144607 _144645 P p pat e q g a) (@lem8206111 _144529 _144530 _144607 P lt2 s a f g z)). Qed.
Lemma lem8206114 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term587 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) = (term588 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g).
Proof. exact (fun_ext (fun z : _144530 => @lem8206113 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g z)). Qed.
Lemma lem8206115 {_144530 : Type'} : (@ex _144530) = (@ex _144530).
Proof. exact (eq_refl (@ex _144530)). Qed.
Lemma lem8206116 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term582 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) = (term589 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g).
Proof. exact (MK_COMB (@lem8206115 _144530) (@lem8206114 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g)). Qed.
Lemma lem8206117 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : ((term581 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) = (term582 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g)) = ((term566 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) = (term589 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g)).
Proof. exact (MK_COMB (@lem8206110 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) (@lem8206116 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g)). Qed.
Lemma lem8206118 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term566 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) = (term589 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g).
Proof. exact (EQ_MP (@lem8206117 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) (@lem8206102 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g)). Qed.
Lemma lem8206119 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) : (term564 _144530 _144607 _144645 P p pat e q f a) = (term564 _144530 _144607 _144645 P p pat e q f a).
Proof. exact (eq_refl (term564 _144530 _144607 _144645 P p pat e q f a)). Qed.
Lemma lem8206120 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term569 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) = (term590 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g).
Proof. exact (MK_COMB (@lem8206119 _144530 _144607 _144645 P p pat e q f a) (@lem8206118 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g)). Qed.
Lemma lem8206122 {A : Type'} (P : Prop) (Q : A -> Prop) : (term433 A P Q) = (term434 A P Q).
Proof. exact (EQ_MP (@lem18911 A P Q) (@lem18910 A P Q)). Qed.
Lemma lem8206123 {_144530 : Type'} (P : Prop) (Q : _144530 -> Prop) : (term433 _144530 P Q) = (term434 _144530 P Q).
Proof. exact (@lem8206122 _144530 P Q). Qed.
Lemma lem8206124 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term591 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) = (term592 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g).
Proof. exact (@lem8206123 _144530 (term560 _144530 _144607 _144645 P p pat e q f a) (term588 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g)). Qed.
Lemma lem8206125 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (z : _144530) : (term593 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g z) = (term586 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g z).
Proof. exact (eq_refl (term593 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g z)). Qed.
Lemma lem8206126 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term594 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) = (term588 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g).
Proof. exact (fun_ext (fun z : _144530 => @lem8206125 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g z)). Qed.
Lemma lem8206127 {_144530 : Type'} : (@ex _144530) = (@ex _144530).
Proof. exact (eq_refl (@ex _144530)). Qed.
Lemma lem8206128 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term595 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) = (term589 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g).
Proof. exact (MK_COMB (@lem8206127 _144530) (@lem8206126 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g)). Qed.
Lemma lem8206129 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) : (term564 _144530 _144607 _144645 P p pat e q f a) = (term564 _144530 _144607 _144645 P p pat e q f a).
Proof. exact (eq_refl (term564 _144530 _144607 _144645 P p pat e q f a)). Qed.
Lemma lem8206130 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term591 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) = (term590 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g).
Proof. exact (MK_COMB (@lem8206129 _144530 _144607 _144645 P p pat e q f a) (@lem8206128 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g)). Qed.
Lemma lem8206131 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8206132 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term596 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) = (term597 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g).
Proof. exact (MK_COMB (@lem8206131) (@lem8206130 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g)). Qed.
Lemma lem8206133 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (z : _144530) : (term593 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g z) = (term586 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g z).
Proof. exact (eq_refl (term593 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g z)). Qed.
Lemma lem8206134 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) : (term564 _144530 _144607 _144645 P p pat e q f a) = (term564 _144530 _144607 _144645 P p pat e q f a).
Proof. exact (eq_refl (term564 _144530 _144607 _144645 P p pat e q f a)). Qed.
Lemma lem8206135 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (z : _144530) : (term598 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g z) = (term599 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g z).
Proof. exact (MK_COMB (@lem8206134 _144530 _144607 _144645 P p pat e q f a) (@lem8206133 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g z)). Qed.
Lemma lem8206136 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term600 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) = (term601 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g).
Proof. exact (fun_ext (fun z : _144530 => @lem8206135 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g z)). Qed.
Lemma lem8206137 {_144530 : Type'} : (@ex _144530) = (@ex _144530).
Proof. exact (eq_refl (@ex _144530)). Qed.
Lemma lem8206138 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term592 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) = (term602 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g).
Proof. exact (MK_COMB (@lem8206137 _144530) (@lem8206136 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g)). Qed.
Lemma lem8206139 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : ((term591 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) = (term592 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g)) = ((term590 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) = (term602 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g)).
Proof. exact (MK_COMB (@lem8206132 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) (@lem8206138 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g)). Qed.
Lemma lem8206140 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term590 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) = (term602 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g).
Proof. exact (EQ_MP (@lem8206139 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) (@lem8206124 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g)). Qed.
Lemma lem8206141 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term569 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) = (term602 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g).
Proof. exact (TRANS (@lem8206120 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) (@lem8206140 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g)). Qed.
Lemma lem8206142 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8206143 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term572 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) = (term603 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g).
Proof. exact (MK_COMB (@lem8206142) (@lem8206141 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g)). Qed.
Lemma lem8206144 {_144530 _144607 _144654 P : Type'} (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : ((y f a) = (y g a)) = ((y f a) = (y g a)).
Proof. exact (eq_refl ((y f a) = (y g a))). Qed.
Lemma lem8206145 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (term574 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g a) = (term604 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g a).
Proof. exact (MK_COMB (@lem8206143 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) (@lem8206144 _144530 _144607 _144654 P f y g a)). Qed.
Lemma lem8206147 {A : Type'} (P : A -> Prop) (Q : Prop) : (term463 A P Q) = (term464 A P Q).
Proof. exact (EQ_MP (@lem18905 A P Q) (@lem18904 A P Q)). Qed.
Lemma lem8206148 {_144530 : Type'} (P : _144530 -> Prop) (Q : Prop) : (term463 _144530 P Q) = (term464 _144530 P Q).
Proof. exact (@lem8206147 _144530 P Q). Qed.
Lemma lem8206149 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (term605 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g a) = (term606 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g a).
Proof. exact (@lem8206148 _144530 (term601 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) ((y f a) = (y g a))). Qed.
Lemma lem8206150 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (z : _144530) : (term607 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g z) = (term599 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g z).
Proof. exact (eq_refl (term607 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g z)). Qed.
Lemma lem8206151 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term608 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) = (term601 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g).
Proof. exact (fun_ext (fun z : _144530 => @lem8206150 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g z)). Qed.
Lemma lem8206152 {_144530 : Type'} : (@ex _144530) = (@ex _144530).
Proof. exact (eq_refl (@ex _144530)). Qed.
Lemma lem8206153 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term609 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) = (term602 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g).
Proof. exact (MK_COMB (@lem8206152 _144530) (@lem8206151 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g)). Qed.
Lemma lem8206154 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8206155 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term610 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) = (term603 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g).
Proof. exact (MK_COMB (@lem8206154) (@lem8206153 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g)). Qed.
Lemma lem8206156 {_144530 _144607 _144654 P : Type'} (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : ((y f a) = (y g a)) = ((y f a) = (y g a)).
Proof. exact (eq_refl ((y f a) = (y g a))). Qed.
Lemma lem8206157 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (term605 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g a) = (term604 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g a).
Proof. exact (MK_COMB (@lem8206155 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g) (@lem8206156 _144530 _144607 _144654 P f y g a)). Qed.
Lemma lem8206158 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8206159 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (term611 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g a) = (term612 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g a).
Proof. exact (MK_COMB (@lem8206158) (@lem8206157 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g a)). Qed.
Lemma lem8206160 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (z : _144530) : (term607 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g z) = (term599 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g z).
Proof. exact (eq_refl (term607 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g z)). Qed.
Lemma lem8206161 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8206162 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (z : _144530) : (term613 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g z) = (term614 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g z).
Proof. exact (MK_COMB (@lem8206161) (@lem8206160 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g z)). Qed.
Lemma lem8206163 {_144530 _144607 _144654 P : Type'} (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : ((y f a) = (y g a)) = ((y f a) = (y g a)).
Proof. exact (eq_refl ((y f a) = (y g a))). Qed.
Lemma lem8206164 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : _144530) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (term615 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z f y g a) = (term616 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z f y g a).
Proof. exact (MK_COMB (@lem8206162 _144529 _144530 _144607 _144645 P p pat e q lt2 s a f g z) (@lem8206163 _144530 _144607 _144654 P f y g a)). Qed.
Lemma lem8206165 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (term617 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g a) = (term618 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g a).
Proof. exact (fun_ext (fun z : _144530 => @lem8206164 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z f y g a)). Qed.
Lemma lem8206166 {_144530 : Type'} : (@ex _144530) = (@ex _144530).
Proof. exact (eq_refl (@ex _144530)). Qed.
Lemma lem8206167 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (term606 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g a) = (term619 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g a).
Proof. exact (MK_COMB (@lem8206166 _144530) (@lem8206165 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g a)). Qed.
Lemma lem8206168 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : ((term605 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g a) = (term606 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g a)) = ((term604 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g a) = (term619 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g a)).
Proof. exact (MK_COMB (@lem8206159 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g a) (@lem8206167 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g a)). Qed.
Lemma lem8206169 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (term604 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g a) = (term619 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g a).
Proof. exact (EQ_MP (@lem8206168 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g a) (@lem8206149 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g a)). Qed.
Lemma lem8206170 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (term574 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g a) = (term619 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g a).
Proof. exact (TRANS (@lem8206145 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g a) (@lem8206169 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g a)). Qed.
Lemma lem8206171 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) : (term575 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g) = (term620 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g).
Proof. exact (fun_ext (fun a : P => @lem8206170 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g a)). Qed.
Lemma lem8206172 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8206173 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) : (term576 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g) = (term621 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g).
Proof. exact (MK_COMB (@lem8206172 P) (@lem8206171 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g)). Qed.
Lemma lem8206175 {A B : Type'} (P : type1413 A B) : (term482 A B P) = (term483 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem8206176 {_144530 P : Type'} (P' : type1470 _144530 P) : (term484 _144530 P P') = (term485 _144530 P P').
Proof. exact (@lem8206175 P _144530 P'). Qed.
Lemma lem8206177 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) : (term622 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g) = (term623 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g).
Proof. exact (@lem8206176 _144530 P (term624 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g)). Qed.
Lemma lem8206178 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (term625 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g a) = (term618 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g a).
Proof. exact (eq_refl (term625 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g a)). Qed.
Lemma lem8206179 {_144530 : Type'} (z : _144530) : z = z.
Proof. exact (eq_refl z). Qed.
Lemma lem8206180 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) (z : _144530) : (term626 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g a z) = (term627 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g a z).
Proof. exact (MK_COMB (@lem8206178 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g a) (@lem8206179 _144530 z)). Qed.
Lemma lem8206181 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : _144530) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (term627 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g a z) = (term616 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z f y g a).
Proof. exact (eq_refl (term627 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g a z)). Qed.
Lemma lem8206182 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : _144530) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (term626 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g a z) = (term616 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z f y g a).
Proof. exact (TRANS (@lem8206180 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g a z) (@lem8206181 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z f y g a)). Qed.
Lemma lem8206183 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (term628 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g a) = (term618 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g a).
Proof. exact (fun_ext (fun z : _144530 => @lem8206182 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z f y g a)). Qed.
Lemma lem8206184 {_144530 : Type'} : (@ex _144530) = (@ex _144530).
Proof. exact (eq_refl (@ex _144530)). Qed.
Lemma lem8206185 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (term629 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g a) = (term619 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g a).
Proof. exact (MK_COMB (@lem8206184 _144530) (@lem8206183 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g a)). Qed.
Lemma lem8206186 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) : (term630 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g) = (term620 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g).
Proof. exact (fun_ext (fun a : P => @lem8206185 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g a)). Qed.
Lemma lem8206187 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8206188 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) : (term622 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g) = (term621 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g).
Proof. exact (MK_COMB (@lem8206187 P) (@lem8206186 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g)). Qed.
Lemma lem8206189 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8206190 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) : (term631 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g) = (term632 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g).
Proof. exact (MK_COMB (@lem8206189) (@lem8206188 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g)). Qed.
Lemma lem8206191 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (term625 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g a) = (term618 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g a).
Proof. exact (eq_refl (term625 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g a)). Qed.
Lemma lem8206192 {_144530 P : Type'} (z : P -> _144530) (a : P) : (z a) = (z a).
Proof. exact (eq_refl (z a)). Qed.
Lemma lem8206193 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (z : P -> _144530) (a : P) : (term633 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g z a) = (term634 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g z a).
Proof. exact (MK_COMB (@lem8206191 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g a) (@lem8206192 _144530 P z a)). Qed.
Lemma lem8206194 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : P -> _144530) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (term634 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g z a) = (term635 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z f y g a).
Proof. exact (eq_refl (term634 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g z a)). Qed.
Lemma lem8206195 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : P -> _144530) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (term633 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g z a) = (term635 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z f y g a).
Proof. exact (TRANS (@lem8206193 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g z a) (@lem8206194 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z f y g a)). Qed.
Lemma lem8206196 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : P -> _144530) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) : (term636 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g z) = (term637 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z f y g).
Proof. exact (fun_ext (fun a : P => @lem8206195 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z f y g a)). Qed.
Lemma lem8206197 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8206198 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : P -> _144530) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) : (term638 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g z) = (term639 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z f y g).
Proof. exact (MK_COMB (@lem8206197 P) (@lem8206196 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z f y g)). Qed.
Lemma lem8206199 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) : (term640 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g) = (term641 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g).
Proof. exact (fun_ext (fun z : P -> _144530 => @lem8206198 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z f y g)). Qed.
Lemma lem8206200 {_144530 P : Type'} : (@ex (P -> _144530)) = (@ex (P -> _144530)).
Proof. exact (eq_refl (@ex (P -> _144530))). Qed.
Lemma lem8206201 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) : (term623 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g) = (term642 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g).
Proof. exact (MK_COMB (@lem8206200 _144530 P) (@lem8206199 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g)). Qed.
Lemma lem8206202 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) : ((term622 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g) = (term623 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g)) = ((term621 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g) = (term642 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g)).
Proof. exact (MK_COMB (@lem8206190 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g) (@lem8206201 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g)). Qed.
Lemma lem8206203 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) : (term621 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g) = (term642 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g).
Proof. exact (EQ_MP (@lem8206202 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g) (@lem8206177 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g)). Qed.
Lemma lem8206204 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) : (term576 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g) = (term642 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g).
Proof. exact (TRANS (@lem8206173 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g) (@lem8206203 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g)). Qed.
Lemma lem8206205 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) : (term577 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y) = (term643 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y).
Proof. exact (fun_ext (fun g : _144530 -> _144607 => @lem8206204 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g)). Qed.
Lemma lem8206206 {_144530 _144607 : Type'} : (@all (_144530 -> _144607)) = (@all (_144530 -> _144607)).
Proof. exact (eq_refl (@all (_144530 -> _144607))). Qed.
Lemma lem8206207 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) : (term578 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y) = (term644 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y).
Proof. exact (MK_COMB (@lem8206206 _144530 _144607) (@lem8206205 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y)). Qed.
Lemma lem8206209 {A B : Type'} (P : type1413 A B) : (term482 A B P) = (term483 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem8206210 {_144530 _144607 P : Type'} (P' : type537 _144530 _144607 P) : (term509 _144530 _144607 P P') = (term510 _144530 _144607 P P').
Proof. exact (@lem8206209 (_144530 -> _144607) (P -> _144530) P'). Qed.
Lemma lem8206211 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) : (term645 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y) = (term646 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y).
Proof. exact (@lem8206210 _144530 _144607 P (term647 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y)). Qed.
Lemma lem8206212 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) : (term648 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g) = (term641 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g).
Proof. exact (eq_refl (term648 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g)). Qed.
Lemma lem8206213 {_144530 P : Type'} (z : P -> _144530) : z = z.
Proof. exact (eq_refl z). Qed.
Lemma lem8206214 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (z : P -> _144530) : (term649 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g z) = (term650 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g z).
Proof. exact (MK_COMB (@lem8206212 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g) (@lem8206213 _144530 P z)). Qed.
Lemma lem8206215 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : P -> _144530) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) : (term650 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g z) = (term639 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z f y g).
Proof. exact (eq_refl (term650 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g z)). Qed.
Lemma lem8206216 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : P -> _144530) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) : (term649 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g z) = (term639 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z f y g).
Proof. exact (TRANS (@lem8206214 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g z) (@lem8206215 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z f y g)). Qed.
Lemma lem8206217 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) : (term651 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g) = (term641 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g).
Proof. exact (fun_ext (fun z : P -> _144530 => @lem8206216 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z f y g)). Qed.
Lemma lem8206218 {_144530 P : Type'} : (@ex (P -> _144530)) = (@ex (P -> _144530)).
Proof. exact (eq_refl (@ex (P -> _144530))). Qed.
Lemma lem8206219 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) : (term652 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g) = (term642 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g).
Proof. exact (MK_COMB (@lem8206218 _144530 P) (@lem8206217 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g)). Qed.
Lemma lem8206220 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) : (term653 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y) = (term643 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y).
Proof. exact (fun_ext (fun g : _144530 -> _144607 => @lem8206219 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g)). Qed.
Lemma lem8206221 {_144530 _144607 : Type'} : (@all (_144530 -> _144607)) = (@all (_144530 -> _144607)).
Proof. exact (eq_refl (@all (_144530 -> _144607))). Qed.
Lemma lem8206222 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) : (term645 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y) = (term644 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y).
Proof. exact (MK_COMB (@lem8206221 _144530 _144607) (@lem8206220 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y)). Qed.
Lemma lem8206223 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8206224 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) : (term654 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y) = (term655 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y).
Proof. exact (MK_COMB (@lem8206223) (@lem8206222 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y)). Qed.
Lemma lem8206225 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) : (term648 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g) = (term641 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g).
Proof. exact (eq_refl (term648 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g)). Qed.
Lemma lem8206226 {_144530 _144607 P : Type'} (z : type557 _144530 _144607 P) (g : _144530 -> _144607) : (z g) = (z g).
Proof. exact (eq_refl (z g)). Qed.
Lemma lem8206227 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (z : type557 _144530 _144607 P) (g : _144530 -> _144607) : (term656 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y z g) = (term657 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y z g).
Proof. exact (MK_COMB (@lem8206225 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y g) (@lem8206226 _144530 _144607 P z g)). Qed.
Lemma lem8206228 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : type557 _144530 _144607 P) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) : (term657 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y z g) = (term658 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z f y g).
Proof. exact (eq_refl (term657 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y z g)). Qed.
Lemma lem8206229 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : type557 _144530 _144607 P) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) : (term656 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y z g) = (term658 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z f y g).
Proof. exact (TRANS (@lem8206227 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y z g) (@lem8206228 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z f y g)). Qed.
Lemma lem8206230 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : type557 _144530 _144607 P) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) : (term659 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y z) = (term660 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z f y).
Proof. exact (fun_ext (fun g : _144530 -> _144607 => @lem8206229 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z f y g)). Qed.
Lemma lem8206231 {_144530 _144607 : Type'} : (@all (_144530 -> _144607)) = (@all (_144530 -> _144607)).
Proof. exact (eq_refl (@all (_144530 -> _144607))). Qed.
Lemma lem8206232 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : type557 _144530 _144607 P) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) : (term661 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y z) = (term662 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z f y).
Proof. exact (MK_COMB (@lem8206231 _144530 _144607) (@lem8206230 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z f y)). Qed.
Lemma lem8206233 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) : (term663 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y) = (term664 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y).
Proof. exact (fun_ext (fun z : type557 _144530 _144607 P => @lem8206232 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z f y)). Qed.
Lemma lem8206234 {_144530 _144607 P : Type'} : (@ex ((_144530 -> _144607) -> P -> _144530)) = (@ex ((_144530 -> _144607) -> P -> _144530)).
Proof. exact (eq_refl (@ex ((_144530 -> _144607) -> P -> _144530))). Qed.
Lemma lem8206235 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) : (term646 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y) = (term665 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y).
Proof. exact (MK_COMB (@lem8206234 _144530 _144607 P) (@lem8206233 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y)). Qed.
Lemma lem8206236 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) : ((term645 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y) = (term646 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y)) = ((term644 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y) = (term665 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y)).
Proof. exact (MK_COMB (@lem8206224 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y) (@lem8206235 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y)). Qed.
Lemma lem8206237 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) : (term644 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y) = (term665 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y).
Proof. exact (EQ_MP (@lem8206236 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y) (@lem8206211 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y)). Qed.
Lemma lem8206238 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) : (term578 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y) = (term665 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y).
Proof. exact (TRANS (@lem8206207 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y) (@lem8206237 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y)). Qed.
Lemma lem8206239 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (y : type564 _144530 _144607 _144654 P) : (term579 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y) = (term666 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y).
Proof. exact (fun_ext (fun f : _144530 -> _144607 => @lem8206238 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y)). Qed.
Lemma lem8206240 {_144530 _144607 : Type'} : (@all (_144530 -> _144607)) = (@all (_144530 -> _144607)).
Proof. exact (eq_refl (@all (_144530 -> _144607))). Qed.
Lemma lem8206241 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (y : type564 _144530 _144607 _144654 P) : (term580 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y) = (term667 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y).
Proof. exact (MK_COMB (@lem8206240 _144530 _144607) (@lem8206239 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y)). Qed.
Lemma lem8206243 {A B : Type'} (P : type1413 A B) : (term482 A B P) = (term483 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem8206244 {_144530 _144607 P : Type'} (P' : type495 _144530 _144607 P) : (term534 _144530 _144607 P P') = (term535 _144530 _144607 P P').
Proof. exact (@lem8206243 (_144530 -> _144607) (type557 _144530 _144607 P) P'). Qed.
Lemma lem8206245 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (y : type564 _144530 _144607 _144654 P) : (term668 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y) = (term669 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y).
Proof. exact (@lem8206244 _144530 _144607 P (term670 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y)). Qed.
Lemma lem8206246 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) : (term671 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y f) = (term664 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y).
Proof. exact (eq_refl (term671 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y f)). Qed.
Lemma lem8206247 {_144530 _144607 P : Type'} (z : type557 _144530 _144607 P) : z = z.
Proof. exact (eq_refl z). Qed.
Lemma lem8206248 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (z : type557 _144530 _144607 P) : (term672 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y f z) = (term673 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y z).
Proof. exact (MK_COMB (@lem8206246 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y) (@lem8206247 _144530 _144607 P z)). Qed.
Lemma lem8206249 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : type557 _144530 _144607 P) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) : (term673 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y z) = (term662 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z f y).
Proof. exact (eq_refl (term673 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y z)). Qed.
Lemma lem8206250 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : type557 _144530 _144607 P) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) : (term672 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y f z) = (term662 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z f y).
Proof. exact (TRANS (@lem8206248 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y z) (@lem8206249 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z f y)). Qed.
Lemma lem8206251 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) : (term674 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y f) = (term664 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y).
Proof. exact (fun_ext (fun z : type557 _144530 _144607 P => @lem8206250 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z f y)). Qed.
Lemma lem8206252 {_144530 _144607 P : Type'} : (@ex ((_144530 -> _144607) -> P -> _144530)) = (@ex ((_144530 -> _144607) -> P -> _144530)).
Proof. exact (eq_refl (@ex ((_144530 -> _144607) -> P -> _144530))). Qed.
Lemma lem8206253 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) : (term675 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y f) = (term665 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y).
Proof. exact (MK_COMB (@lem8206252 _144530 _144607 P) (@lem8206251 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y)). Qed.
Lemma lem8206254 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (y : type564 _144530 _144607 _144654 P) : (term676 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y) = (term666 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y).
Proof. exact (fun_ext (fun f : _144530 -> _144607 => @lem8206253 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y)). Qed.
Lemma lem8206255 {_144530 _144607 : Type'} : (@all (_144530 -> _144607)) = (@all (_144530 -> _144607)).
Proof. exact (eq_refl (@all (_144530 -> _144607))). Qed.
Lemma lem8206256 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (y : type564 _144530 _144607 _144654 P) : (term668 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y) = (term667 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y).
Proof. exact (MK_COMB (@lem8206255 _144530 _144607) (@lem8206254 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y)). Qed.
Lemma lem8206257 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8206258 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (y : type564 _144530 _144607 _144654 P) : (term677 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y) = (term678 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y).
Proof. exact (MK_COMB (@lem8206257) (@lem8206256 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y)). Qed.
Lemma lem8206259 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) : (term671 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y f) = (term664 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y).
Proof. exact (eq_refl (term671 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y f)). Qed.
Lemma lem8206260 {_144530 _144607 P : Type'} (z : type518 _144530 _144607 P) (f : _144530 -> _144607) : (z f) = (z f).
Proof. exact (eq_refl (z f)). Qed.
Lemma lem8206261 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (y : type564 _144530 _144607 _144654 P) (z : type518 _144530 _144607 P) (f : _144530 -> _144607) : (term679 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y z f) = (term680 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y z f).
Proof. exact (MK_COMB (@lem8206259 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s f y) (@lem8206260 _144530 _144607 P z f)). Qed.
Lemma lem8206262 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : type518 _144530 _144607 P) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) : (term680 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y z f) = (term681 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z f y).
Proof. exact (eq_refl (term680 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y z f)). Qed.
Lemma lem8206263 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : type518 _144530 _144607 P) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) : (term679 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y z f) = (term681 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z f y).
Proof. exact (TRANS (@lem8206261 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y z f) (@lem8206262 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z f y)). Qed.
Lemma lem8206264 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : type518 _144530 _144607 P) (y : type564 _144530 _144607 _144654 P) : (term682 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y z) = (term683 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z y).
Proof. exact (fun_ext (fun f : _144530 -> _144607 => @lem8206263 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z f y)). Qed.
Lemma lem8206265 {_144530 _144607 : Type'} : (@all (_144530 -> _144607)) = (@all (_144530 -> _144607)).
Proof. exact (eq_refl (@all (_144530 -> _144607))). Qed.
Lemma lem8206266 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : type518 _144530 _144607 P) (y : type564 _144530 _144607 _144654 P) : (term684 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y z) = (term685 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z y).
Proof. exact (MK_COMB (@lem8206265 _144530 _144607) (@lem8206264 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z y)). Qed.
Lemma lem8206267 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (y : type564 _144530 _144607 _144654 P) : (term686 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y) = (term687 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y).
Proof. exact (fun_ext (fun z : type518 _144530 _144607 P => @lem8206266 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z y)). Qed.
Lemma lem8206268 {_144530 _144607 P : Type'} : (@ex ((_144530 -> _144607) -> (_144530 -> _144607) -> P -> _144530)) = (@ex ((_144530 -> _144607) -> (_144530 -> _144607) -> P -> _144530)).
Proof. exact (eq_refl (@ex ((_144530 -> _144607) -> (_144530 -> _144607) -> P -> _144530))). Qed.
Lemma lem8206269 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (y : type564 _144530 _144607 _144654 P) : (term669 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y) = (term688 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y).
Proof. exact (MK_COMB (@lem8206268 _144530 _144607 P) (@lem8206267 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y)). Qed.
Lemma lem8206270 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (y : type564 _144530 _144607 _144654 P) : ((term668 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y) = (term669 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y)) = ((term667 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y) = (term688 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y)).
Proof. exact (MK_COMB (@lem8206258 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y) (@lem8206269 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y)). Qed.
Lemma lem8206271 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (y : type564 _144530 _144607 _144654 P) : (term667 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y) = (term688 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y).
Proof. exact (EQ_MP (@lem8206270 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y) (@lem8206245 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y)). Qed.
Lemma lem8206273 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (y : type564 _144530 _144607 _144654 P) : (term580 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y) = (term688 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y).
Proof. exact (TRANS (@lem8206241 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y) (@lem8206271 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y)). Qed.
Lemma lem8206274 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (y : type564 _144530 _144607 _144654 P) : (term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y) = (term688 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y).
Proof. exact (TRANS (@lem8205993 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y) (@lem8206273 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y)). Qed.
Lemma lem8206275 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (y : type564 _144530 _144607 _144654 P) (h1 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y) : term688 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y.
Proof. exact (EQ_MP (@lem8206274 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y) (@lem8204559 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y h1)). Qed.
Lemma lem8206281 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) (h1 : p f a) : p f a.
Proof. exact (h1). Qed.
Lemma lem8206287 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : p g a) : p g a.
Proof. exact (h1). Qed.
Lemma lem8206294 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (z : _144530) : (term396 _144529 _144530 _144607 P lt2 s a f g z) = (term818 _144529 _144530 _144607 P lt2 s a f g z).
Proof. exact (@lem17265 (term406 _144529 _144530 P lt2 z s a) ((f z) = (g z))). Qed.
Lemma lem8206295 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term397 _144529 _144530 _144607 P lt2 s a f g) = (term819 _144529 _144530 _144607 P lt2 s a f g).
Proof. exact (fun_ext (fun z : _144530 => @lem8206294 _144529 _144530 _144607 P lt2 s a f g z)). Qed.
Lemma lem8206296 {_144530 : Type'} : (@all _144530) = (@all _144530).
Proof. exact (eq_refl (@all _144530)). Qed.
Lemma lem8206349 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term165 _144529 _144530 _144607 P lt2 s a f g) = (term820 _144529 _144530 _144607 P lt2 s a f g).
Proof. exact (MK_COMB (@lem8206296 _144530) (@lem8206295 _144529 _144530 _144607 P lt2 s a f g)). Qed.
Lemma lem8206350 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) : term820 _144529 _144530 _144607 P lt2 s a f g.
Proof. exact (EQ_MP (@lem8206349 _144529 _144530 _144607 P lt2 s a f g) (@lem8204562 _144529 _144530 _144607 P lt2 s a f g h1)). Qed.
Lemma lem8206356 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (a : P) (h1 : (pat f a) = (e f a)) : (pat f a) = (e f a).
Proof. exact (h1). Qed.
Lemma lem8206362 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) (h1 : (pat g a) = (e g a)) : (pat g a) = (e g a).
Proof. exact (h1). Qed.
Lemma lem8206368 {_144530 _144607 P : Type'} (q : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) (h1 : q f a) : q f a.
Proof. exact (h1). Qed.
Lemma lem8206374 {_144530 _144607 P : Type'} (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : q g a) : q g a.
Proof. exact (h1). Qed.
Lemma lem8206385 {_144530 _144607 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (term326 _144530 _144607 _144654 P t f y g a) = (term821 _144530 _144607 _144654 P t f y g a).
Proof. exact (@lem17045 ((t f a) = (t g a)) ((y f a) = (y g a))). Qed.
Lemma lem8206386 {_144530 _144607 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) (h1 : term326 _144530 _144607 _144654 P t f y g a) : term821 _144530 _144607 _144654 P t f y g a.
Proof. exact (EQ_MP (@lem8206385 _144530 _144607 _144654 P t f y g a) (@lem8204571 _144530 _144607 _144654 P t f y g a h1)). Qed.
Lemma lem8206387 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : type518 _144530 _144607 P) (y : type564 _144530 _144607 _144654 P) (h1 : term685 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z y) : term685 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z y.
Proof. exact (h1). Qed.
Lemma lem8206389 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z'' : type518 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) (h1 : term685 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z'' t) : term685 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z'' t.
Proof. exact (h1). Qed.
Lemma lem8206398 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8206399 {_144530 _144607 P : Type'} (f : type560 _144530 _144607 P) (x : _144530 -> _144607) : (f x) = (@I ((_144530 -> _144607) -> P -> Prop) f x).
Proof. exact (@lem8206398 (_144530 -> _144607) (P -> Prop) f x). Qed.
Lemma lem8206400 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (f : _144530 -> _144607) : (p f) = (@I ((_144530 -> _144607) -> P -> Prop) p f).
Proof. exact (@lem8206399 _144530 _144607 P p f). Qed.
Lemma lem8206401 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8206402 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) : (p f a) = (@I ((_144530 -> _144607) -> P -> Prop) p f a).
Proof. exact (MK_COMB (@lem8206400 _144530 _144607 P p f) (@lem8206401 P a)). Qed.
Lemma lem8206404 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8206405 {P : Type'} (f : P -> Prop) (x : P) : (f x) = (@I (P -> Prop) f x).
Proof. exact (@lem8206404 P Prop f x). Qed.
Lemma lem8206406 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) : (@I ((_144530 -> _144607) -> P -> Prop) p f a) = (term822 _144530 _144607 P p f a).
Proof. exact (@lem8206405 P (@I ((_144530 -> _144607) -> P -> Prop) p f) a). Qed.
Lemma lem8206408 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) : (p f a) = (term822 _144530 _144607 P p f a).
Proof. exact (TRANS (@lem8206402 _144530 _144607 P p f a) (@lem8206406 _144530 _144607 P p f a)). Qed.
Lemma lem8206416 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8206417 {_144530 _144607 P : Type'} (f : type560 _144530 _144607 P) (x : _144530 -> _144607) : (f x) = (@I ((_144530 -> _144607) -> P -> Prop) f x).
Proof. exact (@lem8206416 (_144530 -> _144607) (P -> Prop) f x). Qed.
Lemma lem8206418 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (g : _144530 -> _144607) : (p g) = (@I ((_144530 -> _144607) -> P -> Prop) p g).
Proof. exact (@lem8206417 _144530 _144607 P p g). Qed.
Lemma lem8206419 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8206420 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (p g a) = (@I ((_144530 -> _144607) -> P -> Prop) p g a).
Proof. exact (MK_COMB (@lem8206418 _144530 _144607 P p g) (@lem8206419 P a)). Qed.
Lemma lem8206422 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8206423 {P : Type'} (f : P -> Prop) (x : P) : (f x) = (@I (P -> Prop) f x).
Proof. exact (@lem8206422 P Prop f x). Qed.
Lemma lem8206424 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (@I ((_144530 -> _144607) -> P -> Prop) p g a) = (term822 _144530 _144607 P p g a).
Proof. exact (@lem8206423 P (@I ((_144530 -> _144607) -> P -> Prop) p g) a). Qed.
Lemma lem8206426 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (p g a) = (term822 _144530 _144607 P p g a).
Proof. exact (TRANS (@lem8206420 _144530 _144607 P p g a) (@lem8206424 _144530 _144607 P p g a)). Qed.
Lemma lem8206428 {_144607 : Type'} : (@eq _144607) = (@eq _144607).
Proof. exact (eq_refl (@eq _144607)). Qed.
Lemma lem8206433 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8206434 {_144530 _144607 : Type'} (f : _144530 -> _144607) (x : _144530) : (f x) = (@I (_144530 -> _144607) f x).
Proof. exact (@lem8206433 _144530 _144607 f x). Qed.
Lemma lem8206436 {_144530 _144607 : Type'} (f : _144530 -> _144607) (z : _144530) : (f z) = (@I (_144530 -> _144607) f z).
Proof. exact (@lem8206434 _144530 _144607 f z). Qed.
Lemma lem8206441 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8206442 {_144530 _144607 : Type'} (f : _144530 -> _144607) (x : _144530) : (f x) = (@I (_144530 -> _144607) f x).
Proof. exact (@lem8206441 _144530 _144607 f x). Qed.
Lemma lem8206444 {_144530 _144607 : Type'} (g : _144530 -> _144607) (z : _144530) : (g z) = (@I (_144530 -> _144607) g z).
Proof. exact (@lem8206442 _144530 _144607 g z). Qed.
Lemma lem8206445 {_144530 _144607 : Type'} (f : _144530 -> _144607) (z : _144530) : (term823 _144530 _144607 f z) = (term824 _144530 _144607 f z).
Proof. exact (MK_COMB (@lem8206428 _144607) (@lem8206436 _144530 _144607 f z)). Qed.
Lemma lem8206446 {_144530 _144607 : Type'} (f : _144530 -> _144607) (g : _144530 -> _144607) (z : _144530) : ((f z) = (g z)) = ((@I (_144530 -> _144607) f z) = (@I (_144530 -> _144607) g z)).
Proof. exact (MK_COMB (@lem8206445 _144530 _144607 f z) (@lem8206444 _144530 _144607 g z)). Qed.
Lemma lem8206447 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8206454 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8206455 {_144529 P : Type'} (f : P -> _144529) (x : P) : (f x) = (@I (P -> _144529) f x).
Proof. exact (@lem8206454 P _144529 f x). Qed.
Lemma lem8206457 {_144529 P : Type'} (s : P -> _144529) (a : P) : (s a) = (@I (P -> _144529) s a).
Proof. exact (@lem8206455 _144529 P s a). Qed.
Lemma lem8206458 {_144529 _144530 : Type'} (lt2 : type1470 _144529 _144530) (z : _144530) : (lt2 z) = (lt2 z).
Proof. exact (eq_refl (lt2 z)). Qed.
Lemma lem8206459 {_144529 _144530 P : Type'} (lt2 : type1470 _144529 _144530) (z : _144530) (s : P -> _144529) (a : P) : (term406 _144529 _144530 P lt2 z s a) = (term825 _144529 _144530 P lt2 z s a).
Proof. exact (MK_COMB (@lem8206458 _144529 _144530 lt2 z) (@lem8206457 _144529 P s a)). Qed.
Lemma lem8206461 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8206462 {_144529 _144530 : Type'} (f : type1470 _144529 _144530) (x : _144530) : (f x) = (@I (_144530 -> _144529 -> Prop) f x).
Proof. exact (@lem8206461 _144530 (_144529 -> Prop) f x). Qed.
Lemma lem8206463 {_144529 _144530 : Type'} (lt2 : type1470 _144529 _144530) (z : _144530) : (lt2 z) = (@I (_144530 -> _144529 -> Prop) lt2 z).
Proof. exact (@lem8206462 _144529 _144530 lt2 z). Qed.
Lemma lem8206464 {_144529 P : Type'} (s : P -> _144529) (a : P) : (@I (P -> _144529) s a) = (@I (P -> _144529) s a).
Proof. exact (eq_refl (@I (P -> _144529) s a)). Qed.
Lemma lem8206465 {_144529 _144530 P : Type'} (lt2 : type1470 _144529 _144530) (z : _144530) (s : P -> _144529) (a : P) : (term825 _144529 _144530 P lt2 z s a) = (term826 _144529 _144530 P lt2 z s a).
Proof. exact (MK_COMB (@lem8206463 _144529 _144530 lt2 z) (@lem8206464 _144529 P s a)). Qed.
Lemma lem8206467 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8206468 {_144529 : Type'} (f : _144529 -> Prop) (x : _144529) : (f x) = (@I (_144529 -> Prop) f x).
Proof. exact (@lem8206467 _144529 Prop f x). Qed.
Lemma lem8206469 {_144529 _144530 P : Type'} (lt2 : type1470 _144529 _144530) (z : _144530) (s : P -> _144529) (a : P) : (term826 _144529 _144530 P lt2 z s a) = (term827 _144529 _144530 P lt2 z s a).
Proof. exact (@lem8206468 _144529 (@I (_144530 -> _144529 -> Prop) lt2 z) (@I (P -> _144529) s a)). Qed.
Lemma lem8206470 {_144529 _144530 P : Type'} (lt2 : type1470 _144529 _144530) (z : _144530) (s : P -> _144529) (a : P) : (term825 _144529 _144530 P lt2 z s a) = (term827 _144529 _144530 P lt2 z s a).
Proof. exact (TRANS (@lem8206465 _144529 _144530 P lt2 z s a) (@lem8206469 _144529 _144530 P lt2 z s a)). Qed.
Lemma lem8206471 {_144529 _144530 P : Type'} (lt2 : type1470 _144529 _144530) (z : _144530) (s : P -> _144529) (a : P) : (term406 _144529 _144530 P lt2 z s a) = (term827 _144529 _144530 P lt2 z s a).
Proof. exact (TRANS (@lem8206459 _144529 _144530 P lt2 z s a) (@lem8206470 _144529 _144530 P lt2 z s a)). Qed.
Lemma lem8206472 {_144529 _144530 P : Type'} (lt2 : type1470 _144529 _144530) (z : _144530) (s : P -> _144529) (a : P) : (term828 _144529 _144530 P lt2 z s a) = (term829 _144529 _144530 P lt2 z s a).
Proof. exact (MK_COMB (@lem8206447) (@lem8206471 _144529 _144530 P lt2 z s a)). Qed.
Lemma lem8206473 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8206474 {_144529 _144530 P : Type'} (lt2 : type1470 _144529 _144530) (z : _144530) (s : P -> _144529) (a : P) : (term830 _144529 _144530 P lt2 z s a) = (term831 _144529 _144530 P lt2 z s a).
Proof. exact (MK_COMB (@lem8206473) (@lem8206472 _144529 _144530 P lt2 z s a)). Qed.
Lemma lem8206475 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (z : _144530) : (term818 _144529 _144530 _144607 P lt2 s a f g z) = (term832 _144529 _144530 _144607 P lt2 s a f g z).
Proof. exact (MK_COMB (@lem8206474 _144529 _144530 P lt2 z s a) (@lem8206446 _144530 _144607 f g z)). Qed.
Lemma lem8206476 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term819 _144529 _144530 _144607 P lt2 s a f g) = (term833 _144529 _144530 _144607 P lt2 s a f g).
Proof. exact (fun_ext (fun z : _144530 => @lem8206475 _144529 _144530 _144607 P lt2 s a f g z)). Qed.
Lemma lem8206477 {_144530 : Type'} : (@all _144530) = (@all _144530).
Proof. exact (eq_refl (@all _144530)). Qed.
Lemma lem8206478 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term820 _144529 _144530 _144607 P lt2 s a f g) = (term834 _144529 _144530 _144607 P lt2 s a f g).
Proof. exact (MK_COMB (@lem8206477 _144530) (@lem8206476 _144529 _144530 _144607 P lt2 s a f g)). Qed.
Lemma lem8206479 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) : term834 _144529 _144530 _144607 P lt2 s a f g.
Proof. exact (EQ_MP (@lem8206478 _144529 _144530 _144607 P lt2 s a f g) (@lem8206350 _144529 _144530 _144607 P lt2 s a f g h1)). Qed.
Lemma lem8206480 {_144645 : Type'} : (@eq _144645) = (@eq _144645).
Proof. exact (eq_refl (@eq _144645)). Qed.
Lemma lem8206487 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8206488 {_144530 _144607 _144645 P : Type'} (f : type564 _144530 _144607 _144645 P) (x : _144530 -> _144607) : (f x) = (@I ((_144530 -> _144607) -> P -> _144645) f x).
Proof. exact (@lem8206487 (_144530 -> _144607) (P -> _144645) f x). Qed.
Lemma lem8206489 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) : (pat f) = (@I ((_144530 -> _144607) -> P -> _144645) pat f).
Proof. exact (@lem8206488 _144530 _144607 _144645 P pat f). Qed.
Lemma lem8206490 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8206491 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (a : P) : (pat f a) = (@I ((_144530 -> _144607) -> P -> _144645) pat f a).
Proof. exact (MK_COMB (@lem8206489 _144530 _144607 _144645 P pat f) (@lem8206490 P a)). Qed.
Lemma lem8206493 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8206494 {_144645 P : Type'} (f : P -> _144645) (x : P) : (f x) = (@I (P -> _144645) f x).
Proof. exact (@lem8206493 P _144645 f x). Qed.
Lemma lem8206495 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (a : P) : (@I ((_144530 -> _144607) -> P -> _144645) pat f a) = (term835 _144530 _144607 _144645 P pat f a).
Proof. exact (@lem8206494 _144645 P (@I ((_144530 -> _144607) -> P -> _144645) pat f) a). Qed.
Lemma lem8206497 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (a : P) : (pat f a) = (term835 _144530 _144607 _144645 P pat f a).
Proof. exact (TRANS (@lem8206491 _144530 _144607 _144645 P pat f a) (@lem8206495 _144530 _144607 _144645 P pat f a)). Qed.
Lemma lem8206504 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8206505 {_144530 _144607 _144645 P : Type'} (f : type564 _144530 _144607 _144645 P) (x : _144530 -> _144607) : (f x) = (@I ((_144530 -> _144607) -> P -> _144645) f x).
Proof. exact (@lem8206504 (_144530 -> _144607) (P -> _144645) f x). Qed.
Lemma lem8206506 {_144530 _144607 _144645 P : Type'} (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) : (e f) = (@I ((_144530 -> _144607) -> P -> _144645) e f).
Proof. exact (@lem8206505 _144530 _144607 _144645 P e f). Qed.
Lemma lem8206507 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8206508 {_144530 _144607 _144645 P : Type'} (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (a : P) : (e f a) = (@I ((_144530 -> _144607) -> P -> _144645) e f a).
Proof. exact (MK_COMB (@lem8206506 _144530 _144607 _144645 P e f) (@lem8206507 P a)). Qed.
Lemma lem8206510 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8206511 {_144645 P : Type'} (f : P -> _144645) (x : P) : (f x) = (@I (P -> _144645) f x).
Proof. exact (@lem8206510 P _144645 f x). Qed.
Lemma lem8206512 {_144530 _144607 _144645 P : Type'} (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (a : P) : (@I ((_144530 -> _144607) -> P -> _144645) e f a) = (term835 _144530 _144607 _144645 P e f a).
Proof. exact (@lem8206511 _144645 P (@I ((_144530 -> _144607) -> P -> _144645) e f) a). Qed.
Lemma lem8206514 {_144530 _144607 _144645 P : Type'} (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (a : P) : (e f a) = (term835 _144530 _144607 _144645 P e f a).
Proof. exact (TRANS (@lem8206508 _144530 _144607 _144645 P e f a) (@lem8206512 _144530 _144607 _144645 P e f a)). Qed.
Lemma lem8206515 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (a : P) : (term836 _144530 _144607 _144645 P pat f a) = (term837 _144530 _144607 _144645 P pat f a).
Proof. exact (MK_COMB (@lem8206480 _144645) (@lem8206497 _144530 _144607 _144645 P pat f a)). Qed.
Lemma lem8206516 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (a : P) : ((pat f a) = (e f a)) = ((term835 _144530 _144607 _144645 P pat f a) = (term835 _144530 _144607 _144645 P e f a)).
Proof. exact (MK_COMB (@lem8206515 _144530 _144607 _144645 P pat f a) (@lem8206514 _144530 _144607 _144645 P e f a)). Qed.
Lemma lem8206518 {_144645 : Type'} : (@eq _144645) = (@eq _144645).
Proof. exact (eq_refl (@eq _144645)). Qed.
Lemma lem8206525 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8206526 {_144530 _144607 _144645 P : Type'} (f : type564 _144530 _144607 _144645 P) (x : _144530 -> _144607) : (f x) = (@I ((_144530 -> _144607) -> P -> _144645) f x).
Proof. exact (@lem8206525 (_144530 -> _144607) (P -> _144645) f x). Qed.
Lemma lem8206527 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) : (pat g) = (@I ((_144530 -> _144607) -> P -> _144645) pat g).
Proof. exact (@lem8206526 _144530 _144607 _144645 P pat g). Qed.
Lemma lem8206528 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8206529 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (pat g a) = (@I ((_144530 -> _144607) -> P -> _144645) pat g a).
Proof. exact (MK_COMB (@lem8206527 _144530 _144607 _144645 P pat g) (@lem8206528 P a)). Qed.
Lemma lem8206531 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8206532 {_144645 P : Type'} (f : P -> _144645) (x : P) : (f x) = (@I (P -> _144645) f x).
Proof. exact (@lem8206531 P _144645 f x). Qed.
Lemma lem8206533 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (@I ((_144530 -> _144607) -> P -> _144645) pat g a) = (term835 _144530 _144607 _144645 P pat g a).
Proof. exact (@lem8206532 _144645 P (@I ((_144530 -> _144607) -> P -> _144645) pat g) a). Qed.
Lemma lem8206535 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (pat g a) = (term835 _144530 _144607 _144645 P pat g a).
Proof. exact (TRANS (@lem8206529 _144530 _144607 _144645 P pat g a) (@lem8206533 _144530 _144607 _144645 P pat g a)). Qed.
Lemma lem8206542 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8206543 {_144530 _144607 _144645 P : Type'} (f : type564 _144530 _144607 _144645 P) (x : _144530 -> _144607) : (f x) = (@I ((_144530 -> _144607) -> P -> _144645) f x).
Proof. exact (@lem8206542 (_144530 -> _144607) (P -> _144645) f x). Qed.
Lemma lem8206544 {_144530 _144607 _144645 P : Type'} (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) : (e g) = (@I ((_144530 -> _144607) -> P -> _144645) e g).
Proof. exact (@lem8206543 _144530 _144607 _144645 P e g). Qed.
Lemma lem8206545 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8206546 {_144530 _144607 _144645 P : Type'} (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (e g a) = (@I ((_144530 -> _144607) -> P -> _144645) e g a).
Proof. exact (MK_COMB (@lem8206544 _144530 _144607 _144645 P e g) (@lem8206545 P a)). Qed.
Lemma lem8206548 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8206549 {_144645 P : Type'} (f : P -> _144645) (x : P) : (f x) = (@I (P -> _144645) f x).
Proof. exact (@lem8206548 P _144645 f x). Qed.
Lemma lem8206550 {_144530 _144607 _144645 P : Type'} (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (@I ((_144530 -> _144607) -> P -> _144645) e g a) = (term835 _144530 _144607 _144645 P e g a).
Proof. exact (@lem8206549 _144645 P (@I ((_144530 -> _144607) -> P -> _144645) e g) a). Qed.
Lemma lem8206552 {_144530 _144607 _144645 P : Type'} (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (e g a) = (term835 _144530 _144607 _144645 P e g a).
Proof. exact (TRANS (@lem8206546 _144530 _144607 _144645 P e g a) (@lem8206550 _144530 _144607 _144645 P e g a)). Qed.
Lemma lem8206553 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term836 _144530 _144607 _144645 P pat g a) = (term837 _144530 _144607 _144645 P pat g a).
Proof. exact (MK_COMB (@lem8206518 _144645) (@lem8206535 _144530 _144607 _144645 P pat g a)). Qed.
Lemma lem8206554 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : ((pat g a) = (e g a)) = ((term835 _144530 _144607 _144645 P pat g a) = (term835 _144530 _144607 _144645 P e g a)).
Proof. exact (MK_COMB (@lem8206553 _144530 _144607 _144645 P pat g a) (@lem8206552 _144530 _144607 _144645 P e g a)). Qed.
Lemma lem8206562 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8206563 {_144530 _144607 P : Type'} (f : type560 _144530 _144607 P) (x : _144530 -> _144607) : (f x) = (@I ((_144530 -> _144607) -> P -> Prop) f x).
Proof. exact (@lem8206562 (_144530 -> _144607) (P -> Prop) f x). Qed.
Lemma lem8206564 {_144530 _144607 P : Type'} (q : type560 _144530 _144607 P) (f : _144530 -> _144607) : (q f) = (@I ((_144530 -> _144607) -> P -> Prop) q f).
Proof. exact (@lem8206563 _144530 _144607 P q f). Qed.
Lemma lem8206565 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8206566 {_144530 _144607 P : Type'} (q : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) : (q f a) = (@I ((_144530 -> _144607) -> P -> Prop) q f a).
Proof. exact (MK_COMB (@lem8206564 _144530 _144607 P q f) (@lem8206565 P a)). Qed.
Lemma lem8206568 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8206569 {P : Type'} (f : P -> Prop) (x : P) : (f x) = (@I (P -> Prop) f x).
Proof. exact (@lem8206568 P Prop f x). Qed.
Lemma lem8206570 {_144530 _144607 P : Type'} (q : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) : (@I ((_144530 -> _144607) -> P -> Prop) q f a) = (term822 _144530 _144607 P q f a).
Proof. exact (@lem8206569 P (@I ((_144530 -> _144607) -> P -> Prop) q f) a). Qed.
Lemma lem8206572 {_144530 _144607 P : Type'} (q : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) : (q f a) = (term822 _144530 _144607 P q f a).
Proof. exact (TRANS (@lem8206566 _144530 _144607 P q f a) (@lem8206570 _144530 _144607 P q f a)). Qed.
Lemma lem8206580 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8206581 {_144530 _144607 P : Type'} (f : type560 _144530 _144607 P) (x : _144530 -> _144607) : (f x) = (@I ((_144530 -> _144607) -> P -> Prop) f x).
Proof. exact (@lem8206580 (_144530 -> _144607) (P -> Prop) f x). Qed.
Lemma lem8206582 {_144530 _144607 P : Type'} (q : type560 _144530 _144607 P) (g : _144530 -> _144607) : (q g) = (@I ((_144530 -> _144607) -> P -> Prop) q g).
Proof. exact (@lem8206581 _144530 _144607 P q g). Qed.
Lemma lem8206583 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8206584 {_144530 _144607 P : Type'} (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (q g a) = (@I ((_144530 -> _144607) -> P -> Prop) q g a).
Proof. exact (MK_COMB (@lem8206582 _144530 _144607 P q g) (@lem8206583 P a)). Qed.
Lemma lem8206586 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8206587 {P : Type'} (f : P -> Prop) (x : P) : (f x) = (@I (P -> Prop) f x).
Proof. exact (@lem8206586 P Prop f x). Qed.
Lemma lem8206588 {_144530 _144607 P : Type'} (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (@I ((_144530 -> _144607) -> P -> Prop) q g a) = (term822 _144530 _144607 P q g a).
Proof. exact (@lem8206587 P (@I ((_144530 -> _144607) -> P -> Prop) q g) a). Qed.
Lemma lem8206590 {_144530 _144607 P : Type'} (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (q g a) = (term822 _144530 _144607 P q g a).
Proof. exact (TRANS (@lem8206584 _144530 _144607 P q g a) (@lem8206588 _144530 _144607 P q g a)). Qed.
Lemma lem8206592 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8206593 {_144654 : Type'} : (@eq _144654) = (@eq _144654).
Proof. exact (eq_refl (@eq _144654)). Qed.
Lemma lem8206600 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8206601 {_144530 _144607 _144654 P : Type'} (f : type564 _144530 _144607 _144654 P) (x : _144530 -> _144607) : (f x) = (@I ((_144530 -> _144607) -> P -> _144654) f x).
Proof. exact (@lem8206600 (_144530 -> _144607) (P -> _144654) f x). Qed.
Lemma lem8206602 {_144530 _144607 _144654 P : Type'} (y : type564 _144530 _144607 _144654 P) (f : _144530 -> _144607) : (y f) = (@I ((_144530 -> _144607) -> P -> _144654) y f).
Proof. exact (@lem8206601 _144530 _144607 _144654 P y f). Qed.
Lemma lem8206603 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8206604 {_144530 _144607 _144654 P : Type'} (y : type564 _144530 _144607 _144654 P) (f : _144530 -> _144607) (a : P) : (y f a) = (@I ((_144530 -> _144607) -> P -> _144654) y f a).
Proof. exact (MK_COMB (@lem8206602 _144530 _144607 _144654 P y f) (@lem8206603 P a)). Qed.
Lemma lem8206606 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8206607 {_144654 P : Type'} (f : P -> _144654) (x : P) : (f x) = (@I (P -> _144654) f x).
Proof. exact (@lem8206606 P _144654 f x). Qed.
Lemma lem8206608 {_144530 _144607 _144654 P : Type'} (y : type564 _144530 _144607 _144654 P) (f : _144530 -> _144607) (a : P) : (@I ((_144530 -> _144607) -> P -> _144654) y f a) = (term835 _144530 _144607 _144654 P y f a).
Proof. exact (@lem8206607 _144654 P (@I ((_144530 -> _144607) -> P -> _144654) y f) a). Qed.
Lemma lem8206610 {_144530 _144607 _144654 P : Type'} (y : type564 _144530 _144607 _144654 P) (f : _144530 -> _144607) (a : P) : (y f a) = (term835 _144530 _144607 _144654 P y f a).
Proof. exact (TRANS (@lem8206604 _144530 _144607 _144654 P y f a) (@lem8206608 _144530 _144607 _144654 P y f a)). Qed.
Lemma lem8206617 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8206618 {_144530 _144607 _144654 P : Type'} (f : type564 _144530 _144607 _144654 P) (x : _144530 -> _144607) : (f x) = (@I ((_144530 -> _144607) -> P -> _144654) f x).
Proof. exact (@lem8206617 (_144530 -> _144607) (P -> _144654) f x). Qed.
Lemma lem8206619 {_144530 _144607 _144654 P : Type'} (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) : (y g) = (@I ((_144530 -> _144607) -> P -> _144654) y g).
Proof. exact (@lem8206618 _144530 _144607 _144654 P y g). Qed.
Lemma lem8206620 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8206621 {_144530 _144607 _144654 P : Type'} (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (y g a) = (@I ((_144530 -> _144607) -> P -> _144654) y g a).
Proof. exact (MK_COMB (@lem8206619 _144530 _144607 _144654 P y g) (@lem8206620 P a)). Qed.
Lemma lem8206623 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8206624 {_144654 P : Type'} (f : P -> _144654) (x : P) : (f x) = (@I (P -> _144654) f x).
Proof. exact (@lem8206623 P _144654 f x). Qed.
Lemma lem8206625 {_144530 _144607 _144654 P : Type'} (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (@I ((_144530 -> _144607) -> P -> _144654) y g a) = (term835 _144530 _144607 _144654 P y g a).
Proof. exact (@lem8206624 _144654 P (@I ((_144530 -> _144607) -> P -> _144654) y g) a). Qed.
Lemma lem8206627 {_144530 _144607 _144654 P : Type'} (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (y g a) = (term835 _144530 _144607 _144654 P y g a).
Proof. exact (TRANS (@lem8206621 _144530 _144607 _144654 P y g a) (@lem8206625 _144530 _144607 _144654 P y g a)). Qed.
Lemma lem8206628 {_144530 _144607 _144654 P : Type'} (y : type564 _144530 _144607 _144654 P) (f : _144530 -> _144607) (a : P) : (term836 _144530 _144607 _144654 P y f a) = (term837 _144530 _144607 _144654 P y f a).
Proof. exact (MK_COMB (@lem8206593 _144654) (@lem8206610 _144530 _144607 _144654 P y f a)). Qed.
Lemma lem8206629 {_144530 _144607 _144654 P : Type'} (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : ((y f a) = (y g a)) = ((term835 _144530 _144607 _144654 P y f a) = (term835 _144530 _144607 _144654 P y g a)).
Proof. exact (MK_COMB (@lem8206628 _144530 _144607 _144654 P y f a) (@lem8206627 _144530 _144607 _144654 P y g a)). Qed.
Lemma lem8206630 {_144530 _144607 _144654 P : Type'} (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (term838 _144530 _144607 _144654 P f y g a) = (term839 _144530 _144607 _144654 P f y g a).
Proof. exact (MK_COMB (@lem8206592) (@lem8206629 _144530 _144607 _144654 P f y g a)). Qed.
Lemma lem8206631 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8206632 {_144654 : Type'} : (@eq _144654) = (@eq _144654).
Proof. exact (eq_refl (@eq _144654)). Qed.
Lemma lem8206639 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8206640 {_144530 _144607 _144654 P : Type'} (f : type564 _144530 _144607 _144654 P) (x : _144530 -> _144607) : (f x) = (@I ((_144530 -> _144607) -> P -> _144654) f x).
Proof. exact (@lem8206639 (_144530 -> _144607) (P -> _144654) f x). Qed.
Lemma lem8206641 {_144530 _144607 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (f : _144530 -> _144607) : (t f) = (@I ((_144530 -> _144607) -> P -> _144654) t f).
Proof. exact (@lem8206640 _144530 _144607 _144654 P t f). Qed.
Lemma lem8206642 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8206643 {_144530 _144607 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (f : _144530 -> _144607) (a : P) : (t f a) = (@I ((_144530 -> _144607) -> P -> _144654) t f a).
Proof. exact (MK_COMB (@lem8206641 _144530 _144607 _144654 P t f) (@lem8206642 P a)). Qed.
Lemma lem8206645 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8206646 {_144654 P : Type'} (f : P -> _144654) (x : P) : (f x) = (@I (P -> _144654) f x).
Proof. exact (@lem8206645 P _144654 f x). Qed.
Lemma lem8206647 {_144530 _144607 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (f : _144530 -> _144607) (a : P) : (@I ((_144530 -> _144607) -> P -> _144654) t f a) = (term835 _144530 _144607 _144654 P t f a).
Proof. exact (@lem8206646 _144654 P (@I ((_144530 -> _144607) -> P -> _144654) t f) a). Qed.
Lemma lem8206649 {_144530 _144607 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (f : _144530 -> _144607) (a : P) : (t f a) = (term835 _144530 _144607 _144654 P t f a).
Proof. exact (TRANS (@lem8206643 _144530 _144607 _144654 P t f a) (@lem8206647 _144530 _144607 _144654 P t f a)). Qed.
Lemma lem8206656 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8206657 {_144530 _144607 _144654 P : Type'} (f : type564 _144530 _144607 _144654 P) (x : _144530 -> _144607) : (f x) = (@I ((_144530 -> _144607) -> P -> _144654) f x).
Proof. exact (@lem8206656 (_144530 -> _144607) (P -> _144654) f x). Qed.
Lemma lem8206658 {_144530 _144607 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) : (t g) = (@I ((_144530 -> _144607) -> P -> _144654) t g).
Proof. exact (@lem8206657 _144530 _144607 _144654 P t g). Qed.
Lemma lem8206659 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8206660 {_144530 _144607 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (t g a) = (@I ((_144530 -> _144607) -> P -> _144654) t g a).
Proof. exact (MK_COMB (@lem8206658 _144530 _144607 _144654 P t g) (@lem8206659 P a)). Qed.
Lemma lem8206662 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8206663 {_144654 P : Type'} (f : P -> _144654) (x : P) : (f x) = (@I (P -> _144654) f x).
Proof. exact (@lem8206662 P _144654 f x). Qed.
Lemma lem8206664 {_144530 _144607 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (@I ((_144530 -> _144607) -> P -> _144654) t g a) = (term835 _144530 _144607 _144654 P t g a).
Proof. exact (@lem8206663 _144654 P (@I ((_144530 -> _144607) -> P -> _144654) t g) a). Qed.
Lemma lem8206666 {_144530 _144607 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (t g a) = (term835 _144530 _144607 _144654 P t g a).
Proof. exact (TRANS (@lem8206660 _144530 _144607 _144654 P t g a) (@lem8206664 _144530 _144607 _144654 P t g a)). Qed.
Lemma lem8206667 {_144530 _144607 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (f : _144530 -> _144607) (a : P) : (term836 _144530 _144607 _144654 P t f a) = (term837 _144530 _144607 _144654 P t f a).
Proof. exact (MK_COMB (@lem8206632 _144654) (@lem8206649 _144530 _144607 _144654 P t f a)). Qed.
Lemma lem8206668 {_144530 _144607 _144654 P : Type'} (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : ((t f a) = (t g a)) = ((term835 _144530 _144607 _144654 P t f a) = (term835 _144530 _144607 _144654 P t g a)).
Proof. exact (MK_COMB (@lem8206667 _144530 _144607 _144654 P t f a) (@lem8206666 _144530 _144607 _144654 P t g a)). Qed.
Lemma lem8206669 {_144530 _144607 _144654 P : Type'} (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (term838 _144530 _144607 _144654 P f t g a) = (term839 _144530 _144607 _144654 P f t g a).
Proof. exact (MK_COMB (@lem8206631) (@lem8206668 _144530 _144607 _144654 P f t g a)). Qed.
Lemma lem8206670 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8206671 {_144530 _144607 _144654 P : Type'} (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (term840 _144530 _144607 _144654 P f t g a) = (term841 _144530 _144607 _144654 P f t g a).
Proof. exact (MK_COMB (@lem8206670) (@lem8206669 _144530 _144607 _144654 P f t g a)). Qed.
Lemma lem8206672 {_144530 _144607 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (term821 _144530 _144607 _144654 P t f y g a) = (term842 _144530 _144607 _144654 P t f y g a).
Proof. exact (MK_COMB (@lem8206671 _144530 _144607 _144654 P f t g a) (@lem8206630 _144530 _144607 _144654 P f y g a)). Qed.
Lemma lem8206673 {_144530 _144607 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) (h1 : term326 _144530 _144607 _144654 P t f y g a) : term842 _144530 _144607 _144654 P t f y g a.
Proof. exact (EQ_MP (@lem8206672 _144530 _144607 _144654 P t f y g a) (@lem8206386 _144530 _144607 _144654 P t f y g a h1)). Qed.
Lemma lem8206674 {_144654 : Type'} : (@eq _144654) = (@eq _144654).
Proof. exact (eq_refl (@eq _144654)). Qed.
Lemma lem8206681 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8206682 {_144530 _144607 _144654 P : Type'} (f : type564 _144530 _144607 _144654 P) (x : _144530 -> _144607) : (f x) = (@I ((_144530 -> _144607) -> P -> _144654) f x).
Proof. exact (@lem8206681 (_144530 -> _144607) (P -> _144654) f x). Qed.
Lemma lem8206683 {_144530 _144607 _144654 P : Type'} (y : type564 _144530 _144607 _144654 P) (f : _144530 -> _144607) : (y f) = (@I ((_144530 -> _144607) -> P -> _144654) y f).
Proof. exact (@lem8206682 _144530 _144607 _144654 P y f). Qed.
Lemma lem8206684 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8206685 {_144530 _144607 _144654 P : Type'} (y : type564 _144530 _144607 _144654 P) (f : _144530 -> _144607) (a : P) : (y f a) = (@I ((_144530 -> _144607) -> P -> _144654) y f a).
Proof. exact (MK_COMB (@lem8206683 _144530 _144607 _144654 P y f) (@lem8206684 P a)). Qed.
Lemma lem8206687 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8206688 {_144654 P : Type'} (f : P -> _144654) (x : P) : (f x) = (@I (P -> _144654) f x).
Proof. exact (@lem8206687 P _144654 f x). Qed.
Lemma lem8206689 {_144530 _144607 _144654 P : Type'} (y : type564 _144530 _144607 _144654 P) (f : _144530 -> _144607) (a : P) : (@I ((_144530 -> _144607) -> P -> _144654) y f a) = (term835 _144530 _144607 _144654 P y f a).
Proof. exact (@lem8206688 _144654 P (@I ((_144530 -> _144607) -> P -> _144654) y f) a). Qed.
Lemma lem8206691 {_144530 _144607 _144654 P : Type'} (y : type564 _144530 _144607 _144654 P) (f : _144530 -> _144607) (a : P) : (y f a) = (term835 _144530 _144607 _144654 P y f a).
Proof. exact (TRANS (@lem8206685 _144530 _144607 _144654 P y f a) (@lem8206689 _144530 _144607 _144654 P y f a)). Qed.
Lemma lem8206698 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8206699 {_144530 _144607 _144654 P : Type'} (f : type564 _144530 _144607 _144654 P) (x : _144530 -> _144607) : (f x) = (@I ((_144530 -> _144607) -> P -> _144654) f x).
Proof. exact (@lem8206698 (_144530 -> _144607) (P -> _144654) f x). Qed.
Lemma lem8206700 {_144530 _144607 _144654 P : Type'} (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) : (y g) = (@I ((_144530 -> _144607) -> P -> _144654) y g).
Proof. exact (@lem8206699 _144530 _144607 _144654 P y g). Qed.
Lemma lem8206701 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8206702 {_144530 _144607 _144654 P : Type'} (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (y g a) = (@I ((_144530 -> _144607) -> P -> _144654) y g a).
Proof. exact (MK_COMB (@lem8206700 _144530 _144607 _144654 P y g) (@lem8206701 P a)). Qed.
Lemma lem8206704 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8206705 {_144654 P : Type'} (f : P -> _144654) (x : P) : (f x) = (@I (P -> _144654) f x).
Proof. exact (@lem8206704 P _144654 f x). Qed.
Lemma lem8206706 {_144530 _144607 _144654 P : Type'} (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (@I ((_144530 -> _144607) -> P -> _144654) y g a) = (term835 _144530 _144607 _144654 P y g a).
Proof. exact (@lem8206705 _144654 P (@I ((_144530 -> _144607) -> P -> _144654) y g) a). Qed.
Lemma lem8206708 {_144530 _144607 _144654 P : Type'} (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (y g a) = (term835 _144530 _144607 _144654 P y g a).
Proof. exact (TRANS (@lem8206702 _144530 _144607 _144654 P y g a) (@lem8206706 _144530 _144607 _144654 P y g a)). Qed.
Lemma lem8206709 {_144530 _144607 _144654 P : Type'} (y : type564 _144530 _144607 _144654 P) (f : _144530 -> _144607) (a : P) : (term836 _144530 _144607 _144654 P y f a) = (term837 _144530 _144607 _144654 P y f a).
Proof. exact (MK_COMB (@lem8206674 _144654) (@lem8206691 _144530 _144607 _144654 P y f a)). Qed.
Lemma lem8206710 {_144530 _144607 _144654 P : Type'} (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : ((y f a) = (y g a)) = ((term835 _144530 _144607 _144654 P y f a) = (term835 _144530 _144607 _144654 P y g a)).
Proof. exact (MK_COMB (@lem8206709 _144530 _144607 _144654 P y f a) (@lem8206708 _144530 _144607 _144654 P y g a)). Qed.
Lemma lem8206711 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8206712 {_144607 : Type'} : (@eq _144607) = (@eq _144607).
Proof. exact (eq_refl (@eq _144607)). Qed.
Lemma lem8206713 {_144530 _144607 : Type'} (f : _144530 -> _144607) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem8206722 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8206723 {_144530 _144607 P : Type'} (f : type518 _144530 _144607 P) (x : _144530 -> _144607) : (f x) = (@I ((_144530 -> _144607) -> (_144530 -> _144607) -> P -> _144530) f x).
Proof. exact (@lem8206722 (_144530 -> _144607) (type557 _144530 _144607 P) f x). Qed.
Lemma lem8206724 {_144530 _144607 P : Type'} (z : type518 _144530 _144607 P) (f : _144530 -> _144607) : (z f) = (@I ((_144530 -> _144607) -> (_144530 -> _144607) -> P -> _144530) z f).
Proof. exact (@lem8206723 _144530 _144607 P z f). Qed.
Lemma lem8206725 {_144530 _144607 : Type'} (g : _144530 -> _144607) : g = g.
Proof. exact (eq_refl g). Qed.
Lemma lem8206726 {_144530 _144607 P : Type'} (z : type518 _144530 _144607 P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (z f g) = (@I ((_144530 -> _144607) -> (_144530 -> _144607) -> P -> _144530) z f g).
Proof. exact (MK_COMB (@lem8206724 _144530 _144607 P z f) (@lem8206725 _144530 _144607 g)). Qed.
Lemma lem8206728 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8206729 {_144530 _144607 P : Type'} (f : type557 _144530 _144607 P) (x : _144530 -> _144607) : (f x) = (@I ((_144530 -> _144607) -> P -> _144530) f x).
Proof. exact (@lem8206728 (_144530 -> _144607) (P -> _144530) f x). Qed.
Lemma lem8206730 {_144530 _144607 P : Type'} (z : type518 _144530 _144607 P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (@I ((_144530 -> _144607) -> (_144530 -> _144607) -> P -> _144530) z f g) = (term843 _144530 _144607 P z f g).
Proof. exact (@lem8206729 _144530 _144607 P (@I ((_144530 -> _144607) -> (_144530 -> _144607) -> P -> _144530) z f) g). Qed.
Lemma lem8206731 {_144530 _144607 P : Type'} (z : type518 _144530 _144607 P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (z f g) = (term843 _144530 _144607 P z f g).
Proof. exact (TRANS (@lem8206726 _144530 _144607 P z f g) (@lem8206730 _144530 _144607 P z f g)). Qed.
Lemma lem8206732 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8206733 {_144530 _144607 P : Type'} (z : type518 _144530 _144607 P) (f : _144530 -> _144607) (g : _144530 -> _144607) (a : P) : (z f g a) = (term844 _144530 _144607 P z f g a).
Proof. exact (MK_COMB (@lem8206731 _144530 _144607 P z f g) (@lem8206732 P a)). Qed.
Lemma lem8206735 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8206736 {_144530 P : Type'} (f : P -> _144530) (x : P) : (f x) = (@I (P -> _144530) f x).
Proof. exact (@lem8206735 P _144530 f x). Qed.
Lemma lem8206737 {_144530 _144607 P : Type'} (z : type518 _144530 _144607 P) (f : _144530 -> _144607) (g : _144530 -> _144607) (a : P) : (term844 _144530 _144607 P z f g a) = (term845 _144530 _144607 P z f g a).
Proof. exact (@lem8206736 _144530 P (term843 _144530 _144607 P z f g) a). Qed.
Lemma lem8206739 {_144530 _144607 P : Type'} (z : type518 _144530 _144607 P) (f : _144530 -> _144607) (g : _144530 -> _144607) (a : P) : (z f g a) = (term845 _144530 _144607 P z f g a).
Proof. exact (TRANS (@lem8206733 _144530 _144607 P z f g a) (@lem8206737 _144530 _144607 P z f g a)). Qed.
Lemma lem8206740 {_144530 _144607 P : Type'} (z : type518 _144530 _144607 P) (f : _144530 -> _144607) (g : _144530 -> _144607) (a : P) : (term846 _144530 _144607 P z f g a) = (term847 _144530 _144607 P z f g a).
Proof. exact (MK_COMB (@lem8206713 _144530 _144607 f) (@lem8206739 _144530 _144607 P z f g a)). Qed.
Lemma lem8206742 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8206743 {_144530 _144607 : Type'} (f : _144530 -> _144607) (x : _144530) : (f x) = (@I (_144530 -> _144607) f x).
Proof. exact (@lem8206742 _144530 _144607 f x). Qed.
Lemma lem8206744 {_144530 _144607 P : Type'} (z : type518 _144530 _144607 P) (f : _144530 -> _144607) (g : _144530 -> _144607) (a : P) : (term847 _144530 _144607 P z f g a) = (term848 _144530 _144607 P z f g a).
Proof. exact (@lem8206743 _144530 _144607 f (term845 _144530 _144607 P z f g a)). Qed.
Lemma lem8206745 {_144530 _144607 P : Type'} (z : type518 _144530 _144607 P) (f : _144530 -> _144607) (g : _144530 -> _144607) (a : P) : (term846 _144530 _144607 P z f g a) = (term848 _144530 _144607 P z f g a).
Proof. exact (TRANS (@lem8206740 _144530 _144607 P z f g a) (@lem8206744 _144530 _144607 P z f g a)). Qed.
Lemma lem8206746 {_144530 _144607 : Type'} (g : _144530 -> _144607) : g = g.
Proof. exact (eq_refl g). Qed.
Lemma lem8206755 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8206756 {_144530 _144607 P : Type'} (f : type518 _144530 _144607 P) (x : _144530 -> _144607) : (f x) = (@I ((_144530 -> _144607) -> (_144530 -> _144607) -> P -> _144530) f x).
Proof. exact (@lem8206755 (_144530 -> _144607) (type557 _144530 _144607 P) f x). Qed.
Lemma lem8206757 {_144530 _144607 P : Type'} (z : type518 _144530 _144607 P) (f : _144530 -> _144607) : (z f) = (@I ((_144530 -> _144607) -> (_144530 -> _144607) -> P -> _144530) z f).
Proof. exact (@lem8206756 _144530 _144607 P z f). Qed.
Lemma lem8206758 {_144530 _144607 : Type'} (g : _144530 -> _144607) : g = g.
Proof. exact (eq_refl g). Qed.
Lemma lem8206759 {_144530 _144607 P : Type'} (z : type518 _144530 _144607 P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (z f g) = (@I ((_144530 -> _144607) -> (_144530 -> _144607) -> P -> _144530) z f g).
Proof. exact (MK_COMB (@lem8206757 _144530 _144607 P z f) (@lem8206758 _144530 _144607 g)). Qed.
Lemma lem8206761 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8206762 {_144530 _144607 P : Type'} (f : type557 _144530 _144607 P) (x : _144530 -> _144607) : (f x) = (@I ((_144530 -> _144607) -> P -> _144530) f x).
Proof. exact (@lem8206761 (_144530 -> _144607) (P -> _144530) f x). Qed.
Lemma lem8206763 {_144530 _144607 P : Type'} (z : type518 _144530 _144607 P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (@I ((_144530 -> _144607) -> (_144530 -> _144607) -> P -> _144530) z f g) = (term843 _144530 _144607 P z f g).
Proof. exact (@lem8206762 _144530 _144607 P (@I ((_144530 -> _144607) -> (_144530 -> _144607) -> P -> _144530) z f) g). Qed.
Lemma lem8206764 {_144530 _144607 P : Type'} (z : type518 _144530 _144607 P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (z f g) = (term843 _144530 _144607 P z f g).
Proof. exact (TRANS (@lem8206759 _144530 _144607 P z f g) (@lem8206763 _144530 _144607 P z f g)). Qed.
Lemma lem8206765 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8206766 {_144530 _144607 P : Type'} (z : type518 _144530 _144607 P) (f : _144530 -> _144607) (g : _144530 -> _144607) (a : P) : (z f g a) = (term844 _144530 _144607 P z f g a).
Proof. exact (MK_COMB (@lem8206764 _144530 _144607 P z f g) (@lem8206765 P a)). Qed.
Lemma lem8206768 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8206769 {_144530 P : Type'} (f : P -> _144530) (x : P) : (f x) = (@I (P -> _144530) f x).
Proof. exact (@lem8206768 P _144530 f x). Qed.
Lemma lem8206770 {_144530 _144607 P : Type'} (z : type518 _144530 _144607 P) (f : _144530 -> _144607) (g : _144530 -> _144607) (a : P) : (term844 _144530 _144607 P z f g a) = (term845 _144530 _144607 P z f g a).
Proof. exact (@lem8206769 _144530 P (term843 _144530 _144607 P z f g) a). Qed.
Lemma lem8206772 {_144530 _144607 P : Type'} (z : type518 _144530 _144607 P) (f : _144530 -> _144607) (g : _144530 -> _144607) (a : P) : (z f g a) = (term845 _144530 _144607 P z f g a).
Proof. exact (TRANS (@lem8206766 _144530 _144607 P z f g a) (@lem8206770 _144530 _144607 P z f g a)). Qed.
Lemma lem8206773 {_144530 _144607 P : Type'} (z : type518 _144530 _144607 P) (f : _144530 -> _144607) (g : _144530 -> _144607) (a : P) : (term849 _144530 _144607 P z f g a) = (term850 _144530 _144607 P z f g a).
Proof. exact (MK_COMB (@lem8206746 _144530 _144607 g) (@lem8206772 _144530 _144607 P z f g a)). Qed.
Lemma lem8206775 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8206776 {_144530 _144607 : Type'} (f : _144530 -> _144607) (x : _144530) : (f x) = (@I (_144530 -> _144607) f x).
Proof. exact (@lem8206775 _144530 _144607 f x). Qed.
Lemma lem8206777 {_144530 _144607 P : Type'} (z : type518 _144530 _144607 P) (f : _144530 -> _144607) (g : _144530 -> _144607) (a : P) : (term850 _144530 _144607 P z f g a) = (term851 _144530 _144607 P z f g a).
Proof. exact (@lem8206776 _144530 _144607 g (term845 _144530 _144607 P z f g a)). Qed.
Lemma lem8206778 {_144530 _144607 P : Type'} (z : type518 _144530 _144607 P) (f : _144530 -> _144607) (g : _144530 -> _144607) (a : P) : (term849 _144530 _144607 P z f g a) = (term851 _144530 _144607 P z f g a).
Proof. exact (TRANS (@lem8206773 _144530 _144607 P z f g a) (@lem8206777 _144530 _144607 P z f g a)). Qed.
Lemma lem8206779 {_144530 _144607 P : Type'} (z : type518 _144530 _144607 P) (f : _144530 -> _144607) (g : _144530 -> _144607) (a : P) : (term852 _144530 _144607 P z f g a) = (term853 _144530 _144607 P z f g a).
Proof. exact (MK_COMB (@lem8206712 _144607) (@lem8206745 _144530 _144607 P z f g a)). Qed.
Lemma lem8206780 {_144530 _144607 P : Type'} (z : type518 _144530 _144607 P) (f : _144530 -> _144607) (g : _144530 -> _144607) (a : P) : ((term846 _144530 _144607 P z f g a) = (term849 _144530 _144607 P z f g a)) = ((term848 _144530 _144607 P z f g a) = (term851 _144530 _144607 P z f g a)).
Proof. exact (MK_COMB (@lem8206779 _144530 _144607 P z f g a) (@lem8206778 _144530 _144607 P z f g a)). Qed.
Lemma lem8206781 {_144530 _144607 P : Type'} (z : type518 _144530 _144607 P) (f : _144530 -> _144607) (g : _144530 -> _144607) (a : P) : (term854 _144530 _144607 P z f g a) = (term855 _144530 _144607 P z f g a).
Proof. exact (MK_COMB (@lem8206711) (@lem8206780 _144530 _144607 P z f g a)). Qed.
Lemma lem8206782 {_144529 _144530 : Type'} (lt2 : type1470 _144529 _144530) : lt2 = lt2.
Proof. exact (eq_refl lt2). Qed.
Lemma lem8206791 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8206792 {_144530 _144607 P : Type'} (f : type518 _144530 _144607 P) (x : _144530 -> _144607) : (f x) = (@I ((_144530 -> _144607) -> (_144530 -> _144607) -> P -> _144530) f x).
Proof. exact (@lem8206791 (_144530 -> _144607) (type557 _144530 _144607 P) f x). Qed.
Lemma lem8206793 {_144530 _144607 P : Type'} (z : type518 _144530 _144607 P) (f : _144530 -> _144607) : (z f) = (@I ((_144530 -> _144607) -> (_144530 -> _144607) -> P -> _144530) z f).
Proof. exact (@lem8206792 _144530 _144607 P z f). Qed.
Lemma lem8206794 {_144530 _144607 : Type'} (g : _144530 -> _144607) : g = g.
Proof. exact (eq_refl g). Qed.
Lemma lem8206795 {_144530 _144607 P : Type'} (z : type518 _144530 _144607 P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (z f g) = (@I ((_144530 -> _144607) -> (_144530 -> _144607) -> P -> _144530) z f g).
Proof. exact (MK_COMB (@lem8206793 _144530 _144607 P z f) (@lem8206794 _144530 _144607 g)). Qed.
Lemma lem8206797 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8206798 {_144530 _144607 P : Type'} (f : type557 _144530 _144607 P) (x : _144530 -> _144607) : (f x) = (@I ((_144530 -> _144607) -> P -> _144530) f x).
Proof. exact (@lem8206797 (_144530 -> _144607) (P -> _144530) f x). Qed.
Lemma lem8206799 {_144530 _144607 P : Type'} (z : type518 _144530 _144607 P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (@I ((_144530 -> _144607) -> (_144530 -> _144607) -> P -> _144530) z f g) = (term843 _144530 _144607 P z f g).
Proof. exact (@lem8206798 _144530 _144607 P (@I ((_144530 -> _144607) -> (_144530 -> _144607) -> P -> _144530) z f) g). Qed.
Lemma lem8206800 {_144530 _144607 P : Type'} (z : type518 _144530 _144607 P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (z f g) = (term843 _144530 _144607 P z f g).
Proof. exact (TRANS (@lem8206795 _144530 _144607 P z f g) (@lem8206799 _144530 _144607 P z f g)). Qed.
Lemma lem8206801 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8206802 {_144530 _144607 P : Type'} (z : type518 _144530 _144607 P) (f : _144530 -> _144607) (g : _144530 -> _144607) (a : P) : (z f g a) = (term844 _144530 _144607 P z f g a).
Proof. exact (MK_COMB (@lem8206800 _144530 _144607 P z f g) (@lem8206801 P a)). Qed.
Lemma lem8206804 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8206805 {_144530 P : Type'} (f : P -> _144530) (x : P) : (f x) = (@I (P -> _144530) f x).
Proof. exact (@lem8206804 P _144530 f x). Qed.
Lemma lem8206806 {_144530 _144607 P : Type'} (z : type518 _144530 _144607 P) (f : _144530 -> _144607) (g : _144530 -> _144607) (a : P) : (term844 _144530 _144607 P z f g a) = (term845 _144530 _144607 P z f g a).
Proof. exact (@lem8206805 _144530 P (term843 _144530 _144607 P z f g) a). Qed.
Lemma lem8206808 {_144530 _144607 P : Type'} (z : type518 _144530 _144607 P) (f : _144530 -> _144607) (g : _144530 -> _144607) (a : P) : (z f g a) = (term845 _144530 _144607 P z f g a).
Proof. exact (TRANS (@lem8206802 _144530 _144607 P z f g a) (@lem8206806 _144530 _144607 P z f g a)). Qed.
Lemma lem8206813 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8206814 {_144529 P : Type'} (f : P -> _144529) (x : P) : (f x) = (@I (P -> _144529) f x).
Proof. exact (@lem8206813 P _144529 f x). Qed.
Lemma lem8206816 {_144529 P : Type'} (s : P -> _144529) (a : P) : (s a) = (@I (P -> _144529) s a).
Proof. exact (@lem8206814 _144529 P s a). Qed.
Lemma lem8206817 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (z : type518 _144530 _144607 P) (f : _144530 -> _144607) (g : _144530 -> _144607) (a : P) : (term856 _144529 _144530 _144607 P lt2 z f g a) = (term857 _144529 _144530 _144607 P lt2 z f g a).
Proof. exact (MK_COMB (@lem8206782 _144529 _144530 lt2) (@lem8206808 _144530 _144607 P z f g a)). Qed.
Lemma lem8206818 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (z : type518 _144530 _144607 P) (f : _144530 -> _144607) (g : _144530 -> _144607) (s : P -> _144529) (a : P) : (term858 _144529 _144530 _144607 P lt2 z f g s a) = (term859 _144529 _144530 _144607 P lt2 z f g s a).
Proof. exact (MK_COMB (@lem8206817 _144529 _144530 _144607 P lt2 z f g a) (@lem8206816 _144529 P s a)). Qed.
Lemma lem8206820 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8206821 {_144529 _144530 : Type'} (f : type1470 _144529 _144530) (x : _144530) : (f x) = (@I (_144530 -> _144529 -> Prop) f x).
Proof. exact (@lem8206820 _144530 (_144529 -> Prop) f x). Qed.
Lemma lem8206822 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (z : type518 _144530 _144607 P) (f : _144530 -> _144607) (g : _144530 -> _144607) (a : P) : (term857 _144529 _144530 _144607 P lt2 z f g a) = (term860 _144529 _144530 _144607 P lt2 z f g a).
Proof. exact (@lem8206821 _144529 _144530 lt2 (term845 _144530 _144607 P z f g a)). Qed.
Lemma lem8206823 {_144529 P : Type'} (s : P -> _144529) (a : P) : (@I (P -> _144529) s a) = (@I (P -> _144529) s a).
Proof. exact (eq_refl (@I (P -> _144529) s a)). Qed.
Lemma lem8206824 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (z : type518 _144530 _144607 P) (f : _144530 -> _144607) (g : _144530 -> _144607) (s : P -> _144529) (a : P) : (term859 _144529 _144530 _144607 P lt2 z f g s a) = (term861 _144529 _144530 _144607 P lt2 z f g s a).
Proof. exact (MK_COMB (@lem8206822 _144529 _144530 _144607 P lt2 z f g a) (@lem8206823 _144529 P s a)). Qed.
Lemma lem8206826 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8206827 {_144529 : Type'} (f : _144529 -> Prop) (x : _144529) : (f x) = (@I (_144529 -> Prop) f x).
Proof. exact (@lem8206826 _144529 Prop f x). Qed.
Lemma lem8206828 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (z : type518 _144530 _144607 P) (f : _144530 -> _144607) (g : _144530 -> _144607) (s : P -> _144529) (a : P) : (term861 _144529 _144530 _144607 P lt2 z f g s a) = (term862 _144529 _144530 _144607 P lt2 z f g s a).
Proof. exact (@lem8206827 _144529 (term860 _144529 _144530 _144607 P lt2 z f g a) (@I (P -> _144529) s a)). Qed.
Lemma lem8206829 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (z : type518 _144530 _144607 P) (f : _144530 -> _144607) (g : _144530 -> _144607) (s : P -> _144529) (a : P) : (term859 _144529 _144530 _144607 P lt2 z f g s a) = (term862 _144529 _144530 _144607 P lt2 z f g s a).
Proof. exact (TRANS (@lem8206824 _144529 _144530 _144607 P lt2 z f g s a) (@lem8206828 _144529 _144530 _144607 P lt2 z f g s a)). Qed.
Lemma lem8206830 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (z : type518 _144530 _144607 P) (f : _144530 -> _144607) (g : _144530 -> _144607) (s : P -> _144529) (a : P) : (term858 _144529 _144530 _144607 P lt2 z f g s a) = (term862 _144529 _144530 _144607 P lt2 z f g s a).
Proof. exact (TRANS (@lem8206818 _144529 _144530 _144607 P lt2 z f g s a) (@lem8206829 _144529 _144530 _144607 P lt2 z f g s a)). Qed.
Lemma lem8206831 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8206832 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (z : type518 _144530 _144607 P) (f : _144530 -> _144607) (g : _144530 -> _144607) (s : P -> _144529) (a : P) : (term863 _144529 _144530 _144607 P lt2 z f g s a) = (term864 _144529 _144530 _144607 P lt2 z f g s a).
Proof. exact (MK_COMB (@lem8206831) (@lem8206830 _144529 _144530 _144607 P lt2 z f g s a)). Qed.
Lemma lem8206833 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : type518 _144530 _144607 P) (f : _144530 -> _144607) (g : _144530 -> _144607) (a : P) : (term865 _144529 _144530 _144607 P lt2 s z f g a) = (term866 _144529 _144530 _144607 P lt2 s z f g a).
Proof. exact (MK_COMB (@lem8206832 _144529 _144530 _144607 P lt2 z f g s a) (@lem8206781 _144530 _144607 P z f g a)). Qed.
Lemma lem8206834 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8206841 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8206842 {_144530 _144607 P : Type'} (f : type560 _144530 _144607 P) (x : _144530 -> _144607) : (f x) = (@I ((_144530 -> _144607) -> P -> Prop) f x).
Proof. exact (@lem8206841 (_144530 -> _144607) (P -> Prop) f x). Qed.
Lemma lem8206843 {_144530 _144607 P : Type'} (q : type560 _144530 _144607 P) (g : _144530 -> _144607) : (q g) = (@I ((_144530 -> _144607) -> P -> Prop) q g).
Proof. exact (@lem8206842 _144530 _144607 P q g). Qed.
Lemma lem8206844 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8206845 {_144530 _144607 P : Type'} (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (q g a) = (@I ((_144530 -> _144607) -> P -> Prop) q g a).
Proof. exact (MK_COMB (@lem8206843 _144530 _144607 P q g) (@lem8206844 P a)). Qed.
Lemma lem8206847 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8206848 {P : Type'} (f : P -> Prop) (x : P) : (f x) = (@I (P -> Prop) f x).
Proof. exact (@lem8206847 P Prop f x). Qed.
Lemma lem8206849 {_144530 _144607 P : Type'} (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (@I ((_144530 -> _144607) -> P -> Prop) q g a) = (term822 _144530 _144607 P q g a).
Proof. exact (@lem8206848 P (@I ((_144530 -> _144607) -> P -> Prop) q g) a). Qed.
Lemma lem8206851 {_144530 _144607 P : Type'} (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (q g a) = (term822 _144530 _144607 P q g a).
Proof. exact (TRANS (@lem8206845 _144530 _144607 P q g a) (@lem8206849 _144530 _144607 P q g a)). Qed.
Lemma lem8206852 {_144530 _144607 P : Type'} (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term437 _144530 _144607 P q g a) = (term867 _144530 _144607 P q g a).
Proof. exact (MK_COMB (@lem8206834) (@lem8206851 _144530 _144607 P q g a)). Qed.
Lemma lem8206853 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8206854 {_144645 : Type'} : (@eq _144645) = (@eq _144645).
Proof. exact (eq_refl (@eq _144645)). Qed.
Lemma lem8206861 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8206862 {_144530 _144607 _144645 P : Type'} (f : type564 _144530 _144607 _144645 P) (x : _144530 -> _144607) : (f x) = (@I ((_144530 -> _144607) -> P -> _144645) f x).
Proof. exact (@lem8206861 (_144530 -> _144607) (P -> _144645) f x). Qed.
Lemma lem8206863 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) : (pat g) = (@I ((_144530 -> _144607) -> P -> _144645) pat g).
Proof. exact (@lem8206862 _144530 _144607 _144645 P pat g). Qed.
Lemma lem8206864 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8206865 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (pat g a) = (@I ((_144530 -> _144607) -> P -> _144645) pat g a).
Proof. exact (MK_COMB (@lem8206863 _144530 _144607 _144645 P pat g) (@lem8206864 P a)). Qed.
Lemma lem8206867 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8206868 {_144645 P : Type'} (f : P -> _144645) (x : P) : (f x) = (@I (P -> _144645) f x).
Proof. exact (@lem8206867 P _144645 f x). Qed.
Lemma lem8206869 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (@I ((_144530 -> _144607) -> P -> _144645) pat g a) = (term835 _144530 _144607 _144645 P pat g a).
Proof. exact (@lem8206868 _144645 P (@I ((_144530 -> _144607) -> P -> _144645) pat g) a). Qed.
Lemma lem8206871 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (pat g a) = (term835 _144530 _144607 _144645 P pat g a).
Proof. exact (TRANS (@lem8206865 _144530 _144607 _144645 P pat g a) (@lem8206869 _144530 _144607 _144645 P pat g a)). Qed.
Lemma lem8206878 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8206879 {_144530 _144607 _144645 P : Type'} (f : type564 _144530 _144607 _144645 P) (x : _144530 -> _144607) : (f x) = (@I ((_144530 -> _144607) -> P -> _144645) f x).
Proof. exact (@lem8206878 (_144530 -> _144607) (P -> _144645) f x). Qed.
Lemma lem8206880 {_144530 _144607 _144645 P : Type'} (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) : (e g) = (@I ((_144530 -> _144607) -> P -> _144645) e g).
Proof. exact (@lem8206879 _144530 _144607 _144645 P e g). Qed.
Lemma lem8206881 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8206882 {_144530 _144607 _144645 P : Type'} (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (e g a) = (@I ((_144530 -> _144607) -> P -> _144645) e g a).
Proof. exact (MK_COMB (@lem8206880 _144530 _144607 _144645 P e g) (@lem8206881 P a)). Qed.
Lemma lem8206884 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8206885 {_144645 P : Type'} (f : P -> _144645) (x : P) : (f x) = (@I (P -> _144645) f x).
Proof. exact (@lem8206884 P _144645 f x). Qed.
Lemma lem8206886 {_144530 _144607 _144645 P : Type'} (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (@I ((_144530 -> _144607) -> P -> _144645) e g a) = (term835 _144530 _144607 _144645 P e g a).
Proof. exact (@lem8206885 _144645 P (@I ((_144530 -> _144607) -> P -> _144645) e g) a). Qed.
Lemma lem8206888 {_144530 _144607 _144645 P : Type'} (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (e g a) = (term835 _144530 _144607 _144645 P e g a).
Proof. exact (TRANS (@lem8206882 _144530 _144607 _144645 P e g a) (@lem8206886 _144530 _144607 _144645 P e g a)). Qed.
Lemma lem8206889 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term836 _144530 _144607 _144645 P pat g a) = (term837 _144530 _144607 _144645 P pat g a).
Proof. exact (MK_COMB (@lem8206854 _144645) (@lem8206871 _144530 _144607 _144645 P pat g a)). Qed.
Lemma lem8206890 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : ((pat g a) = (e g a)) = ((term835 _144530 _144607 _144645 P pat g a) = (term835 _144530 _144607 _144645 P e g a)).
Proof. exact (MK_COMB (@lem8206889 _144530 _144607 _144645 P pat g a) (@lem8206888 _144530 _144607 _144645 P e g a)). Qed.
Lemma lem8206891 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term1095 _144530 _144607 _144645 P pat e g a) = (term1096 _144530 _144607 _144645 P pat e g a).
Proof. exact (MK_COMB (@lem8206853) (@lem8206890 _144530 _144607 _144645 P pat e g a)). Qed.
Lemma lem8206892 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8206893 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term1487 _144530 _144607 _144645 P pat e g a) = (term1184 _144530 _144607 _144645 P pat e g a).
Proof. exact (MK_COMB (@lem8206892) (@lem8206891 _144530 _144607 _144645 P pat e g a)). Qed.
Lemma lem8206894 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term558 _144530 _144607 _144645 P pat e q g a) = (term1488 _144530 _144607 _144645 P pat e q g a).
Proof. exact (MK_COMB (@lem8206893 _144530 _144607 _144645 P pat e g a) (@lem8206852 _144530 _144607 P q g a)). Qed.
Lemma lem8206895 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8206902 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8206903 {_144530 _144607 P : Type'} (f : type560 _144530 _144607 P) (x : _144530 -> _144607) : (f x) = (@I ((_144530 -> _144607) -> P -> Prop) f x).
Proof. exact (@lem8206902 (_144530 -> _144607) (P -> Prop) f x). Qed.
Lemma lem8206904 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (g : _144530 -> _144607) : (p g) = (@I ((_144530 -> _144607) -> P -> Prop) p g).
Proof. exact (@lem8206903 _144530 _144607 P p g). Qed.
Lemma lem8206905 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8206906 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (p g a) = (@I ((_144530 -> _144607) -> P -> Prop) p g a).
Proof. exact (MK_COMB (@lem8206904 _144530 _144607 P p g) (@lem8206905 P a)). Qed.
Lemma lem8206908 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8206909 {P : Type'} (f : P -> Prop) (x : P) : (f x) = (@I (P -> Prop) f x).
Proof. exact (@lem8206908 P Prop f x). Qed.
Lemma lem8206910 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (@I ((_144530 -> _144607) -> P -> Prop) p g a) = (term822 _144530 _144607 P p g a).
Proof. exact (@lem8206909 P (@I ((_144530 -> _144607) -> P -> Prop) p g) a). Qed.
Lemma lem8206912 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (p g a) = (term822 _144530 _144607 P p g a).
Proof. exact (TRANS (@lem8206906 _144530 _144607 P p g a) (@lem8206910 _144530 _144607 P p g a)). Qed.
Lemma lem8206913 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term437 _144530 _144607 P p g a) = (term867 _144530 _144607 P p g a).
Proof. exact (MK_COMB (@lem8206895) (@lem8206912 _144530 _144607 P p g a)). Qed.
Lemma lem8206914 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8206915 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term416 _144530 _144607 P p g a) = (term868 _144530 _144607 P p g a).
Proof. exact (MK_COMB (@lem8206914) (@lem8206913 _144530 _144607 P p g a)). Qed.
Lemma lem8206916 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term560 _144530 _144607 _144645 P p pat e q g a) = (term1489 _144530 _144607 _144645 P p pat e q g a).
Proof. exact (MK_COMB (@lem8206915 _144530 _144607 P p g a) (@lem8206894 _144530 _144607 _144645 P pat e q g a)). Qed.
Lemma lem8206917 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8206918 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term564 _144530 _144607 _144645 P p pat e q g a) = (term1490 _144530 _144607 _144645 P p pat e q g a).
Proof. exact (MK_COMB (@lem8206917) (@lem8206916 _144530 _144607 _144645 P p pat e q g a)). Qed.
Lemma lem8206919 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : type518 _144530 _144607 P) (f : _144530 -> _144607) (g : _144530 -> _144607) (a : P) : (term1491 _144529 _144530 _144607 _144645 P p pat e q lt2 s z f g a) = (term1492 _144529 _144530 _144607 _144645 P p pat e q lt2 s z f g a).
Proof. exact (MK_COMB (@lem8206918 _144530 _144607 _144645 P p pat e q g a) (@lem8206833 _144529 _144530 _144607 P lt2 s z f g a)). Qed.
Lemma lem8206920 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8206927 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8206928 {_144530 _144607 P : Type'} (f : type560 _144530 _144607 P) (x : _144530 -> _144607) : (f x) = (@I ((_144530 -> _144607) -> P -> Prop) f x).
Proof. exact (@lem8206927 (_144530 -> _144607) (P -> Prop) f x). Qed.
Lemma lem8206929 {_144530 _144607 P : Type'} (q : type560 _144530 _144607 P) (f : _144530 -> _144607) : (q f) = (@I ((_144530 -> _144607) -> P -> Prop) q f).
Proof. exact (@lem8206928 _144530 _144607 P q f). Qed.
Lemma lem8206930 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8206931 {_144530 _144607 P : Type'} (q : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) : (q f a) = (@I ((_144530 -> _144607) -> P -> Prop) q f a).
Proof. exact (MK_COMB (@lem8206929 _144530 _144607 P q f) (@lem8206930 P a)). Qed.
Lemma lem8206933 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8206934 {P : Type'} (f : P -> Prop) (x : P) : (f x) = (@I (P -> Prop) f x).
Proof. exact (@lem8206933 P Prop f x). Qed.
Lemma lem8206935 {_144530 _144607 P : Type'} (q : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) : (@I ((_144530 -> _144607) -> P -> Prop) q f a) = (term822 _144530 _144607 P q f a).
Proof. exact (@lem8206934 P (@I ((_144530 -> _144607) -> P -> Prop) q f) a). Qed.
Lemma lem8206937 {_144530 _144607 P : Type'} (q : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) : (q f a) = (term822 _144530 _144607 P q f a).
Proof. exact (TRANS (@lem8206931 _144530 _144607 P q f a) (@lem8206935 _144530 _144607 P q f a)). Qed.
Lemma lem8206938 {_144530 _144607 P : Type'} (q : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) : (term437 _144530 _144607 P q f a) = (term867 _144530 _144607 P q f a).
Proof. exact (MK_COMB (@lem8206920) (@lem8206937 _144530 _144607 P q f a)). Qed.
Lemma lem8206939 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8206940 {_144645 : Type'} : (@eq _144645) = (@eq _144645).
Proof. exact (eq_refl (@eq _144645)). Qed.
Lemma lem8206947 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8206948 {_144530 _144607 _144645 P : Type'} (f : type564 _144530 _144607 _144645 P) (x : _144530 -> _144607) : (f x) = (@I ((_144530 -> _144607) -> P -> _144645) f x).
Proof. exact (@lem8206947 (_144530 -> _144607) (P -> _144645) f x). Qed.
Lemma lem8206949 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) : (pat f) = (@I ((_144530 -> _144607) -> P -> _144645) pat f).
Proof. exact (@lem8206948 _144530 _144607 _144645 P pat f). Qed.
Lemma lem8206950 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8206951 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (a : P) : (pat f a) = (@I ((_144530 -> _144607) -> P -> _144645) pat f a).
Proof. exact (MK_COMB (@lem8206949 _144530 _144607 _144645 P pat f) (@lem8206950 P a)). Qed.
Lemma lem8206953 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8206954 {_144645 P : Type'} (f : P -> _144645) (x : P) : (f x) = (@I (P -> _144645) f x).
Proof. exact (@lem8206953 P _144645 f x). Qed.
Lemma lem8206955 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (a : P) : (@I ((_144530 -> _144607) -> P -> _144645) pat f a) = (term835 _144530 _144607 _144645 P pat f a).
Proof. exact (@lem8206954 _144645 P (@I ((_144530 -> _144607) -> P -> _144645) pat f) a). Qed.
Lemma lem8206957 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (a : P) : (pat f a) = (term835 _144530 _144607 _144645 P pat f a).
Proof. exact (TRANS (@lem8206951 _144530 _144607 _144645 P pat f a) (@lem8206955 _144530 _144607 _144645 P pat f a)). Qed.
Lemma lem8206964 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8206965 {_144530 _144607 _144645 P : Type'} (f : type564 _144530 _144607 _144645 P) (x : _144530 -> _144607) : (f x) = (@I ((_144530 -> _144607) -> P -> _144645) f x).
Proof. exact (@lem8206964 (_144530 -> _144607) (P -> _144645) f x). Qed.
Lemma lem8206966 {_144530 _144607 _144645 P : Type'} (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) : (e f) = (@I ((_144530 -> _144607) -> P -> _144645) e f).
Proof. exact (@lem8206965 _144530 _144607 _144645 P e f). Qed.
Lemma lem8206967 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8206968 {_144530 _144607 _144645 P : Type'} (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (a : P) : (e f a) = (@I ((_144530 -> _144607) -> P -> _144645) e f a).
Proof. exact (MK_COMB (@lem8206966 _144530 _144607 _144645 P e f) (@lem8206967 P a)). Qed.
Lemma lem8206970 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8206971 {_144645 P : Type'} (f : P -> _144645) (x : P) : (f x) = (@I (P -> _144645) f x).
Proof. exact (@lem8206970 P _144645 f x). Qed.
Lemma lem8206972 {_144530 _144607 _144645 P : Type'} (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (a : P) : (@I ((_144530 -> _144607) -> P -> _144645) e f a) = (term835 _144530 _144607 _144645 P e f a).
Proof. exact (@lem8206971 _144645 P (@I ((_144530 -> _144607) -> P -> _144645) e f) a). Qed.
Lemma lem8206974 {_144530 _144607 _144645 P : Type'} (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (a : P) : (e f a) = (term835 _144530 _144607 _144645 P e f a).
Proof. exact (TRANS (@lem8206968 _144530 _144607 _144645 P e f a) (@lem8206972 _144530 _144607 _144645 P e f a)). Qed.
Lemma lem8206975 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (a : P) : (term836 _144530 _144607 _144645 P pat f a) = (term837 _144530 _144607 _144645 P pat f a).
Proof. exact (MK_COMB (@lem8206940 _144645) (@lem8206957 _144530 _144607 _144645 P pat f a)). Qed.
Lemma lem8206976 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (a : P) : ((pat f a) = (e f a)) = ((term835 _144530 _144607 _144645 P pat f a) = (term835 _144530 _144607 _144645 P e f a)).
Proof. exact (MK_COMB (@lem8206975 _144530 _144607 _144645 P pat f a) (@lem8206974 _144530 _144607 _144645 P e f a)). Qed.
Lemma lem8206977 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (a : P) : (term1095 _144530 _144607 _144645 P pat e f a) = (term1096 _144530 _144607 _144645 P pat e f a).
Proof. exact (MK_COMB (@lem8206939) (@lem8206976 _144530 _144607 _144645 P pat e f a)). Qed.
Lemma lem8206978 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8206979 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (a : P) : (term1487 _144530 _144607 _144645 P pat e f a) = (term1184 _144530 _144607 _144645 P pat e f a).
Proof. exact (MK_COMB (@lem8206978) (@lem8206977 _144530 _144607 _144645 P pat e f a)). Qed.
Lemma lem8206980 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) : (term558 _144530 _144607 _144645 P pat e q f a) = (term1488 _144530 _144607 _144645 P pat e q f a).
Proof. exact (MK_COMB (@lem8206979 _144530 _144607 _144645 P pat e f a) (@lem8206938 _144530 _144607 P q f a)). Qed.
Lemma lem8206981 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8206988 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8206989 {_144530 _144607 P : Type'} (f : type560 _144530 _144607 P) (x : _144530 -> _144607) : (f x) = (@I ((_144530 -> _144607) -> P -> Prop) f x).
Proof. exact (@lem8206988 (_144530 -> _144607) (P -> Prop) f x). Qed.
Lemma lem8206990 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (f : _144530 -> _144607) : (p f) = (@I ((_144530 -> _144607) -> P -> Prop) p f).
Proof. exact (@lem8206989 _144530 _144607 P p f). Qed.
Lemma lem8206991 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8206992 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) : (p f a) = (@I ((_144530 -> _144607) -> P -> Prop) p f a).
Proof. exact (MK_COMB (@lem8206990 _144530 _144607 P p f) (@lem8206991 P a)). Qed.
Lemma lem8206994 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8206995 {P : Type'} (f : P -> Prop) (x : P) : (f x) = (@I (P -> Prop) f x).
Proof. exact (@lem8206994 P Prop f x). Qed.
Lemma lem8206996 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) : (@I ((_144530 -> _144607) -> P -> Prop) p f a) = (term822 _144530 _144607 P p f a).
Proof. exact (@lem8206995 P (@I ((_144530 -> _144607) -> P -> Prop) p f) a). Qed.
Lemma lem8206998 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) : (p f a) = (term822 _144530 _144607 P p f a).
Proof. exact (TRANS (@lem8206992 _144530 _144607 P p f a) (@lem8206996 _144530 _144607 P p f a)). Qed.
Lemma lem8206999 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) : (term437 _144530 _144607 P p f a) = (term867 _144530 _144607 P p f a).
Proof. exact (MK_COMB (@lem8206981) (@lem8206998 _144530 _144607 P p f a)). Qed.
Lemma lem8207000 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8207001 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) : (term416 _144530 _144607 P p f a) = (term868 _144530 _144607 P p f a).
Proof. exact (MK_COMB (@lem8207000) (@lem8206999 _144530 _144607 P p f a)). Qed.
Lemma lem8207002 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) : (term560 _144530 _144607 _144645 P p pat e q f a) = (term1489 _144530 _144607 _144645 P p pat e q f a).
Proof. exact (MK_COMB (@lem8207001 _144530 _144607 P p f a) (@lem8206980 _144530 _144607 _144645 P pat e q f a)). Qed.
Lemma lem8207003 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8207004 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) : (term564 _144530 _144607 _144645 P p pat e q f a) = (term1490 _144530 _144607 _144645 P p pat e q f a).
Proof. exact (MK_COMB (@lem8207003) (@lem8207002 _144530 _144607 _144645 P p pat e q f a)). Qed.
Lemma lem8207005 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : type518 _144530 _144607 P) (f : _144530 -> _144607) (g : _144530 -> _144607) (a : P) : (term1493 _144529 _144530 _144607 _144645 P p pat e q lt2 s z f g a) = (term1494 _144529 _144530 _144607 _144645 P p pat e q lt2 s z f g a).
Proof. exact (MK_COMB (@lem8207004 _144530 _144607 _144645 P p pat e q f a) (@lem8206919 _144529 _144530 _144607 _144645 P p pat e q lt2 s z f g a)). Qed.
Lemma lem8207006 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8207007 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : type518 _144530 _144607 P) (f : _144530 -> _144607) (g : _144530 -> _144607) (a : P) : (term1495 _144529 _144530 _144607 _144645 P p pat e q lt2 s z f g a) = (term1496 _144529 _144530 _144607 _144645 P p pat e q lt2 s z f g a).
Proof. exact (MK_COMB (@lem8207006) (@lem8207005 _144529 _144530 _144607 _144645 P p pat e q lt2 s z f g a)). Qed.
Lemma lem8207008 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : type518 _144530 _144607 P) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (term1497 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z f y g a) = (term1498 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z f y g a).
Proof. exact (MK_COMB (@lem8207007 _144529 _144530 _144607 _144645 P p pat e q lt2 s z f g a) (@lem8206710 _144530 _144607 _144654 P f y g a)). Qed.
Lemma lem8207009 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : type518 _144530 _144607 P) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) : (term1499 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z f y g) = (term1500 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z f y g).
Proof. exact (fun_ext (fun a : P => @lem8207008 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z f y g a)). Qed.
Lemma lem8207010 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8207011 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : type518 _144530 _144607 P) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) : (term1501 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z f y g) = (term1502 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z f y g).
Proof. exact (MK_COMB (@lem8207010 P) (@lem8207009 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z f y g)). Qed.
Lemma lem8207012 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : type518 _144530 _144607 P) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) : (term1503 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z f y) = (term1504 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z f y).
Proof. exact (fun_ext (fun g : _144530 -> _144607 => @lem8207011 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z f y g)). Qed.
Lemma lem8207013 {_144530 _144607 : Type'} : (@all (_144530 -> _144607)) = (@all (_144530 -> _144607)).
Proof. exact (eq_refl (@all (_144530 -> _144607))). Qed.
Lemma lem8207014 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : type518 _144530 _144607 P) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) : (term681 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z f y) = (term1505 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z f y).
Proof. exact (MK_COMB (@lem8207013 _144530 _144607) (@lem8207012 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z f y)). Qed.
Lemma lem8207015 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : type518 _144530 _144607 P) (y : type564 _144530 _144607 _144654 P) : (term683 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z y) = (term1506 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z y).
Proof. exact (fun_ext (fun f : _144530 -> _144607 => @lem8207014 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z f y)). Qed.
Lemma lem8207016 {_144530 _144607 : Type'} : (@all (_144530 -> _144607)) = (@all (_144530 -> _144607)).
Proof. exact (eq_refl (@all (_144530 -> _144607))). Qed.
Lemma lem8207017 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : type518 _144530 _144607 P) (y : type564 _144530 _144607 _144654 P) : (term685 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z y) = (term1507 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z y).
Proof. exact (MK_COMB (@lem8207016 _144530 _144607) (@lem8207015 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z y)). Qed.
Lemma lem8207018 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : type518 _144530 _144607 P) (y : type564 _144530 _144607 _144654 P) (h1 : term685 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z y) : term1507 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z y.
Proof. exact (EQ_MP (@lem8207017 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z y) (@lem8206387 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z y h1)). Qed.
Lemma lem8207364 {_144654 : Type'} : (@eq _144654) = (@eq _144654).
Proof. exact (eq_refl (@eq _144654)). Qed.
Lemma lem8207371 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8207372 {_144530 _144607 _144654 P : Type'} (f : type564 _144530 _144607 _144654 P) (x : _144530 -> _144607) : (f x) = (@I ((_144530 -> _144607) -> P -> _144654) f x).
Proof. exact (@lem8207371 (_144530 -> _144607) (P -> _144654) f x). Qed.
Lemma lem8207373 {_144530 _144607 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (f : _144530 -> _144607) : (t f) = (@I ((_144530 -> _144607) -> P -> _144654) t f).
Proof. exact (@lem8207372 _144530 _144607 _144654 P t f). Qed.
Lemma lem8207374 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8207375 {_144530 _144607 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (f : _144530 -> _144607) (a : P) : (t f a) = (@I ((_144530 -> _144607) -> P -> _144654) t f a).
Proof. exact (MK_COMB (@lem8207373 _144530 _144607 _144654 P t f) (@lem8207374 P a)). Qed.
Lemma lem8207377 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8207378 {_144654 P : Type'} (f : P -> _144654) (x : P) : (f x) = (@I (P -> _144654) f x).
Proof. exact (@lem8207377 P _144654 f x). Qed.
Lemma lem8207379 {_144530 _144607 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (f : _144530 -> _144607) (a : P) : (@I ((_144530 -> _144607) -> P -> _144654) t f a) = (term835 _144530 _144607 _144654 P t f a).
Proof. exact (@lem8207378 _144654 P (@I ((_144530 -> _144607) -> P -> _144654) t f) a). Qed.
Lemma lem8207381 {_144530 _144607 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (f : _144530 -> _144607) (a : P) : (t f a) = (term835 _144530 _144607 _144654 P t f a).
Proof. exact (TRANS (@lem8207375 _144530 _144607 _144654 P t f a) (@lem8207379 _144530 _144607 _144654 P t f a)). Qed.
Lemma lem8207388 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8207389 {_144530 _144607 _144654 P : Type'} (f : type564 _144530 _144607 _144654 P) (x : _144530 -> _144607) : (f x) = (@I ((_144530 -> _144607) -> P -> _144654) f x).
Proof. exact (@lem8207388 (_144530 -> _144607) (P -> _144654) f x). Qed.
Lemma lem8207390 {_144530 _144607 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) : (t g) = (@I ((_144530 -> _144607) -> P -> _144654) t g).
Proof. exact (@lem8207389 _144530 _144607 _144654 P t g). Qed.
Lemma lem8207391 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8207392 {_144530 _144607 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (t g a) = (@I ((_144530 -> _144607) -> P -> _144654) t g a).
Proof. exact (MK_COMB (@lem8207390 _144530 _144607 _144654 P t g) (@lem8207391 P a)). Qed.
Lemma lem8207394 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8207395 {_144654 P : Type'} (f : P -> _144654) (x : P) : (f x) = (@I (P -> _144654) f x).
Proof. exact (@lem8207394 P _144654 f x). Qed.
Lemma lem8207396 {_144530 _144607 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (@I ((_144530 -> _144607) -> P -> _144654) t g a) = (term835 _144530 _144607 _144654 P t g a).
Proof. exact (@lem8207395 _144654 P (@I ((_144530 -> _144607) -> P -> _144654) t g) a). Qed.
Lemma lem8207398 {_144530 _144607 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (t g a) = (term835 _144530 _144607 _144654 P t g a).
Proof. exact (TRANS (@lem8207392 _144530 _144607 _144654 P t g a) (@lem8207396 _144530 _144607 _144654 P t g a)). Qed.
Lemma lem8207399 {_144530 _144607 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (f : _144530 -> _144607) (a : P) : (term836 _144530 _144607 _144654 P t f a) = (term837 _144530 _144607 _144654 P t f a).
Proof. exact (MK_COMB (@lem8207364 _144654) (@lem8207381 _144530 _144607 _144654 P t f a)). Qed.
Lemma lem8207400 {_144530 _144607 _144654 P : Type'} (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : ((t f a) = (t g a)) = ((term835 _144530 _144607 _144654 P t f a) = (term835 _144530 _144607 _144654 P t g a)).
Proof. exact (MK_COMB (@lem8207399 _144530 _144607 _144654 P t f a) (@lem8207398 _144530 _144607 _144654 P t g a)). Qed.
Lemma lem8207401 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8207402 {_144607 : Type'} : (@eq _144607) = (@eq _144607).
Proof. exact (eq_refl (@eq _144607)). Qed.
Lemma lem8207403 {_144530 _144607 : Type'} (f : _144530 -> _144607) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem8207412 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8207413 {_144530 _144607 P : Type'} (f : type518 _144530 _144607 P) (x : _144530 -> _144607) : (f x) = (@I ((_144530 -> _144607) -> (_144530 -> _144607) -> P -> _144530) f x).
Proof. exact (@lem8207412 (_144530 -> _144607) (type557 _144530 _144607 P) f x). Qed.
Lemma lem8207414 {_144530 _144607 P : Type'} (z'' : type518 _144530 _144607 P) (f : _144530 -> _144607) : (z'' f) = (@I ((_144530 -> _144607) -> (_144530 -> _144607) -> P -> _144530) z'' f).
Proof. exact (@lem8207413 _144530 _144607 P z'' f). Qed.
Lemma lem8207415 {_144530 _144607 : Type'} (g : _144530 -> _144607) : g = g.
Proof. exact (eq_refl g). Qed.
Lemma lem8207416 {_144530 _144607 P : Type'} (z'' : type518 _144530 _144607 P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (z'' f g) = (@I ((_144530 -> _144607) -> (_144530 -> _144607) -> P -> _144530) z'' f g).
Proof. exact (MK_COMB (@lem8207414 _144530 _144607 P z'' f) (@lem8207415 _144530 _144607 g)). Qed.
Lemma lem8207418 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8207419 {_144530 _144607 P : Type'} (f : type557 _144530 _144607 P) (x : _144530 -> _144607) : (f x) = (@I ((_144530 -> _144607) -> P -> _144530) f x).
Proof. exact (@lem8207418 (_144530 -> _144607) (P -> _144530) f x). Qed.
Lemma lem8207420 {_144530 _144607 P : Type'} (z'' : type518 _144530 _144607 P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (@I ((_144530 -> _144607) -> (_144530 -> _144607) -> P -> _144530) z'' f g) = (term843 _144530 _144607 P z'' f g).
Proof. exact (@lem8207419 _144530 _144607 P (@I ((_144530 -> _144607) -> (_144530 -> _144607) -> P -> _144530) z'' f) g). Qed.
Lemma lem8207421 {_144530 _144607 P : Type'} (z'' : type518 _144530 _144607 P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (z'' f g) = (term843 _144530 _144607 P z'' f g).
Proof. exact (TRANS (@lem8207416 _144530 _144607 P z'' f g) (@lem8207420 _144530 _144607 P z'' f g)). Qed.
Lemma lem8207422 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8207423 {_144530 _144607 P : Type'} (z'' : type518 _144530 _144607 P) (f : _144530 -> _144607) (g : _144530 -> _144607) (a : P) : (z'' f g a) = (term844 _144530 _144607 P z'' f g a).
Proof. exact (MK_COMB (@lem8207421 _144530 _144607 P z'' f g) (@lem8207422 P a)). Qed.
Lemma lem8207425 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8207426 {_144530 P : Type'} (f : P -> _144530) (x : P) : (f x) = (@I (P -> _144530) f x).
Proof. exact (@lem8207425 P _144530 f x). Qed.
Lemma lem8207427 {_144530 _144607 P : Type'} (z'' : type518 _144530 _144607 P) (f : _144530 -> _144607) (g : _144530 -> _144607) (a : P) : (term844 _144530 _144607 P z'' f g a) = (term845 _144530 _144607 P z'' f g a).
Proof. exact (@lem8207426 _144530 P (term843 _144530 _144607 P z'' f g) a). Qed.
Lemma lem8207429 {_144530 _144607 P : Type'} (z'' : type518 _144530 _144607 P) (f : _144530 -> _144607) (g : _144530 -> _144607) (a : P) : (z'' f g a) = (term845 _144530 _144607 P z'' f g a).
Proof. exact (TRANS (@lem8207423 _144530 _144607 P z'' f g a) (@lem8207427 _144530 _144607 P z'' f g a)). Qed.
Lemma lem8207430 {_144530 _144607 P : Type'} (z'' : type518 _144530 _144607 P) (f : _144530 -> _144607) (g : _144530 -> _144607) (a : P) : (term846 _144530 _144607 P z'' f g a) = (term847 _144530 _144607 P z'' f g a).
Proof. exact (MK_COMB (@lem8207403 _144530 _144607 f) (@lem8207429 _144530 _144607 P z'' f g a)). Qed.
Lemma lem8207432 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8207433 {_144530 _144607 : Type'} (f : _144530 -> _144607) (x : _144530) : (f x) = (@I (_144530 -> _144607) f x).
Proof. exact (@lem8207432 _144530 _144607 f x). Qed.
Lemma lem8207434 {_144530 _144607 P : Type'} (z'' : type518 _144530 _144607 P) (f : _144530 -> _144607) (g : _144530 -> _144607) (a : P) : (term847 _144530 _144607 P z'' f g a) = (term848 _144530 _144607 P z'' f g a).
Proof. exact (@lem8207433 _144530 _144607 f (term845 _144530 _144607 P z'' f g a)). Qed.
Lemma lem8207435 {_144530 _144607 P : Type'} (z'' : type518 _144530 _144607 P) (f : _144530 -> _144607) (g : _144530 -> _144607) (a : P) : (term846 _144530 _144607 P z'' f g a) = (term848 _144530 _144607 P z'' f g a).
Proof. exact (TRANS (@lem8207430 _144530 _144607 P z'' f g a) (@lem8207434 _144530 _144607 P z'' f g a)). Qed.
Lemma lem8207436 {_144530 _144607 : Type'} (g : _144530 -> _144607) : g = g.
Proof. exact (eq_refl g). Qed.
Lemma lem8207445 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8207446 {_144530 _144607 P : Type'} (f : type518 _144530 _144607 P) (x : _144530 -> _144607) : (f x) = (@I ((_144530 -> _144607) -> (_144530 -> _144607) -> P -> _144530) f x).
Proof. exact (@lem8207445 (_144530 -> _144607) (type557 _144530 _144607 P) f x). Qed.
Lemma lem8207447 {_144530 _144607 P : Type'} (z'' : type518 _144530 _144607 P) (f : _144530 -> _144607) : (z'' f) = (@I ((_144530 -> _144607) -> (_144530 -> _144607) -> P -> _144530) z'' f).
Proof. exact (@lem8207446 _144530 _144607 P z'' f). Qed.
Lemma lem8207448 {_144530 _144607 : Type'} (g : _144530 -> _144607) : g = g.
Proof. exact (eq_refl g). Qed.
Lemma lem8207449 {_144530 _144607 P : Type'} (z'' : type518 _144530 _144607 P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (z'' f g) = (@I ((_144530 -> _144607) -> (_144530 -> _144607) -> P -> _144530) z'' f g).
Proof. exact (MK_COMB (@lem8207447 _144530 _144607 P z'' f) (@lem8207448 _144530 _144607 g)). Qed.
Lemma lem8207451 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8207452 {_144530 _144607 P : Type'} (f : type557 _144530 _144607 P) (x : _144530 -> _144607) : (f x) = (@I ((_144530 -> _144607) -> P -> _144530) f x).
Proof. exact (@lem8207451 (_144530 -> _144607) (P -> _144530) f x). Qed.
Lemma lem8207453 {_144530 _144607 P : Type'} (z'' : type518 _144530 _144607 P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (@I ((_144530 -> _144607) -> (_144530 -> _144607) -> P -> _144530) z'' f g) = (term843 _144530 _144607 P z'' f g).
Proof. exact (@lem8207452 _144530 _144607 P (@I ((_144530 -> _144607) -> (_144530 -> _144607) -> P -> _144530) z'' f) g). Qed.
Lemma lem8207454 {_144530 _144607 P : Type'} (z'' : type518 _144530 _144607 P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (z'' f g) = (term843 _144530 _144607 P z'' f g).
Proof. exact (TRANS (@lem8207449 _144530 _144607 P z'' f g) (@lem8207453 _144530 _144607 P z'' f g)). Qed.
Lemma lem8207455 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8207456 {_144530 _144607 P : Type'} (z'' : type518 _144530 _144607 P) (f : _144530 -> _144607) (g : _144530 -> _144607) (a : P) : (z'' f g a) = (term844 _144530 _144607 P z'' f g a).
Proof. exact (MK_COMB (@lem8207454 _144530 _144607 P z'' f g) (@lem8207455 P a)). Qed.
Lemma lem8207458 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8207459 {_144530 P : Type'} (f : P -> _144530) (x : P) : (f x) = (@I (P -> _144530) f x).
Proof. exact (@lem8207458 P _144530 f x). Qed.
Lemma lem8207460 {_144530 _144607 P : Type'} (z'' : type518 _144530 _144607 P) (f : _144530 -> _144607) (g : _144530 -> _144607) (a : P) : (term844 _144530 _144607 P z'' f g a) = (term845 _144530 _144607 P z'' f g a).
Proof. exact (@lem8207459 _144530 P (term843 _144530 _144607 P z'' f g) a). Qed.
Lemma lem8207462 {_144530 _144607 P : Type'} (z'' : type518 _144530 _144607 P) (f : _144530 -> _144607) (g : _144530 -> _144607) (a : P) : (z'' f g a) = (term845 _144530 _144607 P z'' f g a).
Proof. exact (TRANS (@lem8207456 _144530 _144607 P z'' f g a) (@lem8207460 _144530 _144607 P z'' f g a)). Qed.
Lemma lem8207463 {_144530 _144607 P : Type'} (z'' : type518 _144530 _144607 P) (f : _144530 -> _144607) (g : _144530 -> _144607) (a : P) : (term849 _144530 _144607 P z'' f g a) = (term850 _144530 _144607 P z'' f g a).
Proof. exact (MK_COMB (@lem8207436 _144530 _144607 g) (@lem8207462 _144530 _144607 P z'' f g a)). Qed.
Lemma lem8207465 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8207466 {_144530 _144607 : Type'} (f : _144530 -> _144607) (x : _144530) : (f x) = (@I (_144530 -> _144607) f x).
Proof. exact (@lem8207465 _144530 _144607 f x). Qed.
Lemma lem8207467 {_144530 _144607 P : Type'} (z'' : type518 _144530 _144607 P) (f : _144530 -> _144607) (g : _144530 -> _144607) (a : P) : (term850 _144530 _144607 P z'' f g a) = (term851 _144530 _144607 P z'' f g a).
Proof. exact (@lem8207466 _144530 _144607 g (term845 _144530 _144607 P z'' f g a)). Qed.
Lemma lem8207468 {_144530 _144607 P : Type'} (z'' : type518 _144530 _144607 P) (f : _144530 -> _144607) (g : _144530 -> _144607) (a : P) : (term849 _144530 _144607 P z'' f g a) = (term851 _144530 _144607 P z'' f g a).
Proof. exact (TRANS (@lem8207463 _144530 _144607 P z'' f g a) (@lem8207467 _144530 _144607 P z'' f g a)). Qed.
Lemma lem8207469 {_144530 _144607 P : Type'} (z'' : type518 _144530 _144607 P) (f : _144530 -> _144607) (g : _144530 -> _144607) (a : P) : (term852 _144530 _144607 P z'' f g a) = (term853 _144530 _144607 P z'' f g a).
Proof. exact (MK_COMB (@lem8207402 _144607) (@lem8207435 _144530 _144607 P z'' f g a)). Qed.
Lemma lem8207470 {_144530 _144607 P : Type'} (z'' : type518 _144530 _144607 P) (f : _144530 -> _144607) (g : _144530 -> _144607) (a : P) : ((term846 _144530 _144607 P z'' f g a) = (term849 _144530 _144607 P z'' f g a)) = ((term848 _144530 _144607 P z'' f g a) = (term851 _144530 _144607 P z'' f g a)).
Proof. exact (MK_COMB (@lem8207469 _144530 _144607 P z'' f g a) (@lem8207468 _144530 _144607 P z'' f g a)). Qed.
Lemma lem8207471 {_144530 _144607 P : Type'} (z'' : type518 _144530 _144607 P) (f : _144530 -> _144607) (g : _144530 -> _144607) (a : P) : (term854 _144530 _144607 P z'' f g a) = (term855 _144530 _144607 P z'' f g a).
Proof. exact (MK_COMB (@lem8207401) (@lem8207470 _144530 _144607 P z'' f g a)). Qed.
Lemma lem8207472 {_144529 _144530 : Type'} (lt2 : type1470 _144529 _144530) : lt2 = lt2.
Proof. exact (eq_refl lt2). Qed.
Lemma lem8207481 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8207482 {_144530 _144607 P : Type'} (f : type518 _144530 _144607 P) (x : _144530 -> _144607) : (f x) = (@I ((_144530 -> _144607) -> (_144530 -> _144607) -> P -> _144530) f x).
Proof. exact (@lem8207481 (_144530 -> _144607) (type557 _144530 _144607 P) f x). Qed.
Lemma lem8207483 {_144530 _144607 P : Type'} (z'' : type518 _144530 _144607 P) (f : _144530 -> _144607) : (z'' f) = (@I ((_144530 -> _144607) -> (_144530 -> _144607) -> P -> _144530) z'' f).
Proof. exact (@lem8207482 _144530 _144607 P z'' f). Qed.
Lemma lem8207484 {_144530 _144607 : Type'} (g : _144530 -> _144607) : g = g.
Proof. exact (eq_refl g). Qed.
Lemma lem8207485 {_144530 _144607 P : Type'} (z'' : type518 _144530 _144607 P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (z'' f g) = (@I ((_144530 -> _144607) -> (_144530 -> _144607) -> P -> _144530) z'' f g).
Proof. exact (MK_COMB (@lem8207483 _144530 _144607 P z'' f) (@lem8207484 _144530 _144607 g)). Qed.
Lemma lem8207487 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8207488 {_144530 _144607 P : Type'} (f : type557 _144530 _144607 P) (x : _144530 -> _144607) : (f x) = (@I ((_144530 -> _144607) -> P -> _144530) f x).
Proof. exact (@lem8207487 (_144530 -> _144607) (P -> _144530) f x). Qed.
Lemma lem8207489 {_144530 _144607 P : Type'} (z'' : type518 _144530 _144607 P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (@I ((_144530 -> _144607) -> (_144530 -> _144607) -> P -> _144530) z'' f g) = (term843 _144530 _144607 P z'' f g).
Proof. exact (@lem8207488 _144530 _144607 P (@I ((_144530 -> _144607) -> (_144530 -> _144607) -> P -> _144530) z'' f) g). Qed.
Lemma lem8207490 {_144530 _144607 P : Type'} (z'' : type518 _144530 _144607 P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (z'' f g) = (term843 _144530 _144607 P z'' f g).
Proof. exact (TRANS (@lem8207485 _144530 _144607 P z'' f g) (@lem8207489 _144530 _144607 P z'' f g)). Qed.
Lemma lem8207491 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8207492 {_144530 _144607 P : Type'} (z'' : type518 _144530 _144607 P) (f : _144530 -> _144607) (g : _144530 -> _144607) (a : P) : (z'' f g a) = (term844 _144530 _144607 P z'' f g a).
Proof. exact (MK_COMB (@lem8207490 _144530 _144607 P z'' f g) (@lem8207491 P a)). Qed.
Lemma lem8207494 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8207495 {_144530 P : Type'} (f : P -> _144530) (x : P) : (f x) = (@I (P -> _144530) f x).
Proof. exact (@lem8207494 P _144530 f x). Qed.
Lemma lem8207496 {_144530 _144607 P : Type'} (z'' : type518 _144530 _144607 P) (f : _144530 -> _144607) (g : _144530 -> _144607) (a : P) : (term844 _144530 _144607 P z'' f g a) = (term845 _144530 _144607 P z'' f g a).
Proof. exact (@lem8207495 _144530 P (term843 _144530 _144607 P z'' f g) a). Qed.
Lemma lem8207498 {_144530 _144607 P : Type'} (z'' : type518 _144530 _144607 P) (f : _144530 -> _144607) (g : _144530 -> _144607) (a : P) : (z'' f g a) = (term845 _144530 _144607 P z'' f g a).
Proof. exact (TRANS (@lem8207492 _144530 _144607 P z'' f g a) (@lem8207496 _144530 _144607 P z'' f g a)). Qed.
Lemma lem8207503 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8207504 {_144529 P : Type'} (f : P -> _144529) (x : P) : (f x) = (@I (P -> _144529) f x).
Proof. exact (@lem8207503 P _144529 f x). Qed.
Lemma lem8207506 {_144529 P : Type'} (s : P -> _144529) (a : P) : (s a) = (@I (P -> _144529) s a).
Proof. exact (@lem8207504 _144529 P s a). Qed.
Lemma lem8207507 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (z'' : type518 _144530 _144607 P) (f : _144530 -> _144607) (g : _144530 -> _144607) (a : P) : (term856 _144529 _144530 _144607 P lt2 z'' f g a) = (term857 _144529 _144530 _144607 P lt2 z'' f g a).
Proof. exact (MK_COMB (@lem8207472 _144529 _144530 lt2) (@lem8207498 _144530 _144607 P z'' f g a)). Qed.
Lemma lem8207508 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (z'' : type518 _144530 _144607 P) (f : _144530 -> _144607) (g : _144530 -> _144607) (s : P -> _144529) (a : P) : (term858 _144529 _144530 _144607 P lt2 z'' f g s a) = (term859 _144529 _144530 _144607 P lt2 z'' f g s a).
Proof. exact (MK_COMB (@lem8207507 _144529 _144530 _144607 P lt2 z'' f g a) (@lem8207506 _144529 P s a)). Qed.
Lemma lem8207510 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8207511 {_144529 _144530 : Type'} (f : type1470 _144529 _144530) (x : _144530) : (f x) = (@I (_144530 -> _144529 -> Prop) f x).
Proof. exact (@lem8207510 _144530 (_144529 -> Prop) f x). Qed.
Lemma lem8207512 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (z'' : type518 _144530 _144607 P) (f : _144530 -> _144607) (g : _144530 -> _144607) (a : P) : (term857 _144529 _144530 _144607 P lt2 z'' f g a) = (term860 _144529 _144530 _144607 P lt2 z'' f g a).
Proof. exact (@lem8207511 _144529 _144530 lt2 (term845 _144530 _144607 P z'' f g a)). Qed.
Lemma lem8207513 {_144529 P : Type'} (s : P -> _144529) (a : P) : (@I (P -> _144529) s a) = (@I (P -> _144529) s a).
Proof. exact (eq_refl (@I (P -> _144529) s a)). Qed.
Lemma lem8207514 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (z'' : type518 _144530 _144607 P) (f : _144530 -> _144607) (g : _144530 -> _144607) (s : P -> _144529) (a : P) : (term859 _144529 _144530 _144607 P lt2 z'' f g s a) = (term861 _144529 _144530 _144607 P lt2 z'' f g s a).
Proof. exact (MK_COMB (@lem8207512 _144529 _144530 _144607 P lt2 z'' f g a) (@lem8207513 _144529 P s a)). Qed.
Lemma lem8207516 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8207517 {_144529 : Type'} (f : _144529 -> Prop) (x : _144529) : (f x) = (@I (_144529 -> Prop) f x).
Proof. exact (@lem8207516 _144529 Prop f x). Qed.
Lemma lem8207518 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (z'' : type518 _144530 _144607 P) (f : _144530 -> _144607) (g : _144530 -> _144607) (s : P -> _144529) (a : P) : (term861 _144529 _144530 _144607 P lt2 z'' f g s a) = (term862 _144529 _144530 _144607 P lt2 z'' f g s a).
Proof. exact (@lem8207517 _144529 (term860 _144529 _144530 _144607 P lt2 z'' f g a) (@I (P -> _144529) s a)). Qed.
Lemma lem8207519 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (z'' : type518 _144530 _144607 P) (f : _144530 -> _144607) (g : _144530 -> _144607) (s : P -> _144529) (a : P) : (term859 _144529 _144530 _144607 P lt2 z'' f g s a) = (term862 _144529 _144530 _144607 P lt2 z'' f g s a).
Proof. exact (TRANS (@lem8207514 _144529 _144530 _144607 P lt2 z'' f g s a) (@lem8207518 _144529 _144530 _144607 P lt2 z'' f g s a)). Qed.
Lemma lem8207520 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (z'' : type518 _144530 _144607 P) (f : _144530 -> _144607) (g : _144530 -> _144607) (s : P -> _144529) (a : P) : (term858 _144529 _144530 _144607 P lt2 z'' f g s a) = (term862 _144529 _144530 _144607 P lt2 z'' f g s a).
Proof. exact (TRANS (@lem8207508 _144529 _144530 _144607 P lt2 z'' f g s a) (@lem8207519 _144529 _144530 _144607 P lt2 z'' f g s a)). Qed.
Lemma lem8207521 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8207522 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (z'' : type518 _144530 _144607 P) (f : _144530 -> _144607) (g : _144530 -> _144607) (s : P -> _144529) (a : P) : (term863 _144529 _144530 _144607 P lt2 z'' f g s a) = (term864 _144529 _144530 _144607 P lt2 z'' f g s a).
Proof. exact (MK_COMB (@lem8207521) (@lem8207520 _144529 _144530 _144607 P lt2 z'' f g s a)). Qed.
Lemma lem8207523 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z'' : type518 _144530 _144607 P) (f : _144530 -> _144607) (g : _144530 -> _144607) (a : P) : (term865 _144529 _144530 _144607 P lt2 s z'' f g a) = (term866 _144529 _144530 _144607 P lt2 s z'' f g a).
Proof. exact (MK_COMB (@lem8207522 _144529 _144530 _144607 P lt2 z'' f g s a) (@lem8207471 _144530 _144607 P z'' f g a)). Qed.
Lemma lem8207524 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8207531 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8207532 {_144530 _144607 P : Type'} (f : type560 _144530 _144607 P) (x : _144530 -> _144607) : (f x) = (@I ((_144530 -> _144607) -> P -> Prop) f x).
Proof. exact (@lem8207531 (_144530 -> _144607) (P -> Prop) f x). Qed.
Lemma lem8207533 {_144530 _144607 P : Type'} (q : type560 _144530 _144607 P) (g : _144530 -> _144607) : (q g) = (@I ((_144530 -> _144607) -> P -> Prop) q g).
Proof. exact (@lem8207532 _144530 _144607 P q g). Qed.
Lemma lem8207534 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8207535 {_144530 _144607 P : Type'} (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (q g a) = (@I ((_144530 -> _144607) -> P -> Prop) q g a).
Proof. exact (MK_COMB (@lem8207533 _144530 _144607 P q g) (@lem8207534 P a)). Qed.
Lemma lem8207537 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8207538 {P : Type'} (f : P -> Prop) (x : P) : (f x) = (@I (P -> Prop) f x).
Proof. exact (@lem8207537 P Prop f x). Qed.
Lemma lem8207539 {_144530 _144607 P : Type'} (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (@I ((_144530 -> _144607) -> P -> Prop) q g a) = (term822 _144530 _144607 P q g a).
Proof. exact (@lem8207538 P (@I ((_144530 -> _144607) -> P -> Prop) q g) a). Qed.
Lemma lem8207541 {_144530 _144607 P : Type'} (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (q g a) = (term822 _144530 _144607 P q g a).
Proof. exact (TRANS (@lem8207535 _144530 _144607 P q g a) (@lem8207539 _144530 _144607 P q g a)). Qed.
Lemma lem8207542 {_144530 _144607 P : Type'} (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term437 _144530 _144607 P q g a) = (term867 _144530 _144607 P q g a).
Proof. exact (MK_COMB (@lem8207524) (@lem8207541 _144530 _144607 P q g a)). Qed.
Lemma lem8207543 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8207544 {_144645 : Type'} : (@eq _144645) = (@eq _144645).
Proof. exact (eq_refl (@eq _144645)). Qed.
Lemma lem8207551 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8207552 {_144530 _144607 _144645 P : Type'} (f : type564 _144530 _144607 _144645 P) (x : _144530 -> _144607) : (f x) = (@I ((_144530 -> _144607) -> P -> _144645) f x).
Proof. exact (@lem8207551 (_144530 -> _144607) (P -> _144645) f x). Qed.
Lemma lem8207553 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) : (pat g) = (@I ((_144530 -> _144607) -> P -> _144645) pat g).
Proof. exact (@lem8207552 _144530 _144607 _144645 P pat g). Qed.
Lemma lem8207554 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8207555 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (pat g a) = (@I ((_144530 -> _144607) -> P -> _144645) pat g a).
Proof. exact (MK_COMB (@lem8207553 _144530 _144607 _144645 P pat g) (@lem8207554 P a)). Qed.
Lemma lem8207557 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8207558 {_144645 P : Type'} (f : P -> _144645) (x : P) : (f x) = (@I (P -> _144645) f x).
Proof. exact (@lem8207557 P _144645 f x). Qed.
Lemma lem8207559 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (@I ((_144530 -> _144607) -> P -> _144645) pat g a) = (term835 _144530 _144607 _144645 P pat g a).
Proof. exact (@lem8207558 _144645 P (@I ((_144530 -> _144607) -> P -> _144645) pat g) a). Qed.
Lemma lem8207561 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (pat g a) = (term835 _144530 _144607 _144645 P pat g a).
Proof. exact (TRANS (@lem8207555 _144530 _144607 _144645 P pat g a) (@lem8207559 _144530 _144607 _144645 P pat g a)). Qed.
Lemma lem8207568 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8207569 {_144530 _144607 _144645 P : Type'} (f : type564 _144530 _144607 _144645 P) (x : _144530 -> _144607) : (f x) = (@I ((_144530 -> _144607) -> P -> _144645) f x).
Proof. exact (@lem8207568 (_144530 -> _144607) (P -> _144645) f x). Qed.
Lemma lem8207570 {_144530 _144607 _144645 P : Type'} (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) : (e g) = (@I ((_144530 -> _144607) -> P -> _144645) e g).
Proof. exact (@lem8207569 _144530 _144607 _144645 P e g). Qed.
Lemma lem8207571 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8207572 {_144530 _144607 _144645 P : Type'} (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (e g a) = (@I ((_144530 -> _144607) -> P -> _144645) e g a).
Proof. exact (MK_COMB (@lem8207570 _144530 _144607 _144645 P e g) (@lem8207571 P a)). Qed.
Lemma lem8207574 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8207575 {_144645 P : Type'} (f : P -> _144645) (x : P) : (f x) = (@I (P -> _144645) f x).
Proof. exact (@lem8207574 P _144645 f x). Qed.
Lemma lem8207576 {_144530 _144607 _144645 P : Type'} (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (@I ((_144530 -> _144607) -> P -> _144645) e g a) = (term835 _144530 _144607 _144645 P e g a).
Proof. exact (@lem8207575 _144645 P (@I ((_144530 -> _144607) -> P -> _144645) e g) a). Qed.
Lemma lem8207578 {_144530 _144607 _144645 P : Type'} (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (e g a) = (term835 _144530 _144607 _144645 P e g a).
Proof. exact (TRANS (@lem8207572 _144530 _144607 _144645 P e g a) (@lem8207576 _144530 _144607 _144645 P e g a)). Qed.
Lemma lem8207579 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term836 _144530 _144607 _144645 P pat g a) = (term837 _144530 _144607 _144645 P pat g a).
Proof. exact (MK_COMB (@lem8207544 _144645) (@lem8207561 _144530 _144607 _144645 P pat g a)). Qed.
Lemma lem8207580 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : ((pat g a) = (e g a)) = ((term835 _144530 _144607 _144645 P pat g a) = (term835 _144530 _144607 _144645 P e g a)).
Proof. exact (MK_COMB (@lem8207579 _144530 _144607 _144645 P pat g a) (@lem8207578 _144530 _144607 _144645 P e g a)). Qed.
Lemma lem8207581 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term1095 _144530 _144607 _144645 P pat e g a) = (term1096 _144530 _144607 _144645 P pat e g a).
Proof. exact (MK_COMB (@lem8207543) (@lem8207580 _144530 _144607 _144645 P pat e g a)). Qed.
Lemma lem8207582 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8207583 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term1487 _144530 _144607 _144645 P pat e g a) = (term1184 _144530 _144607 _144645 P pat e g a).
Proof. exact (MK_COMB (@lem8207582) (@lem8207581 _144530 _144607 _144645 P pat e g a)). Qed.
Lemma lem8207584 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term558 _144530 _144607 _144645 P pat e q g a) = (term1488 _144530 _144607 _144645 P pat e q g a).
Proof. exact (MK_COMB (@lem8207583 _144530 _144607 _144645 P pat e g a) (@lem8207542 _144530 _144607 P q g a)). Qed.
Lemma lem8207585 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8207592 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8207593 {_144530 _144607 P : Type'} (f : type560 _144530 _144607 P) (x : _144530 -> _144607) : (f x) = (@I ((_144530 -> _144607) -> P -> Prop) f x).
Proof. exact (@lem8207592 (_144530 -> _144607) (P -> Prop) f x). Qed.
Lemma lem8207594 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (g : _144530 -> _144607) : (p g) = (@I ((_144530 -> _144607) -> P -> Prop) p g).
Proof. exact (@lem8207593 _144530 _144607 P p g). Qed.
Lemma lem8207595 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8207596 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (p g a) = (@I ((_144530 -> _144607) -> P -> Prop) p g a).
Proof. exact (MK_COMB (@lem8207594 _144530 _144607 P p g) (@lem8207595 P a)). Qed.
Lemma lem8207598 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8207599 {P : Type'} (f : P -> Prop) (x : P) : (f x) = (@I (P -> Prop) f x).
Proof. exact (@lem8207598 P Prop f x). Qed.
Lemma lem8207600 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (@I ((_144530 -> _144607) -> P -> Prop) p g a) = (term822 _144530 _144607 P p g a).
Proof. exact (@lem8207599 P (@I ((_144530 -> _144607) -> P -> Prop) p g) a). Qed.
Lemma lem8207602 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (p g a) = (term822 _144530 _144607 P p g a).
Proof. exact (TRANS (@lem8207596 _144530 _144607 P p g a) (@lem8207600 _144530 _144607 P p g a)). Qed.
Lemma lem8207603 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term437 _144530 _144607 P p g a) = (term867 _144530 _144607 P p g a).
Proof. exact (MK_COMB (@lem8207585) (@lem8207602 _144530 _144607 P p g a)). Qed.
Lemma lem8207604 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8207605 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term416 _144530 _144607 P p g a) = (term868 _144530 _144607 P p g a).
Proof. exact (MK_COMB (@lem8207604) (@lem8207603 _144530 _144607 P p g a)). Qed.
Lemma lem8207606 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term560 _144530 _144607 _144645 P p pat e q g a) = (term1489 _144530 _144607 _144645 P p pat e q g a).
Proof. exact (MK_COMB (@lem8207605 _144530 _144607 P p g a) (@lem8207584 _144530 _144607 _144645 P pat e q g a)). Qed.
Lemma lem8207607 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8207608 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term564 _144530 _144607 _144645 P p pat e q g a) = (term1490 _144530 _144607 _144645 P p pat e q g a).
Proof. exact (MK_COMB (@lem8207607) (@lem8207606 _144530 _144607 _144645 P p pat e q g a)). Qed.
Lemma lem8207609 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z'' : type518 _144530 _144607 P) (f : _144530 -> _144607) (g : _144530 -> _144607) (a : P) : (term1491 _144529 _144530 _144607 _144645 P p pat e q lt2 s z'' f g a) = (term1492 _144529 _144530 _144607 _144645 P p pat e q lt2 s z'' f g a).
Proof. exact (MK_COMB (@lem8207608 _144530 _144607 _144645 P p pat e q g a) (@lem8207523 _144529 _144530 _144607 P lt2 s z'' f g a)). Qed.
Lemma lem8207610 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8207617 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8207618 {_144530 _144607 P : Type'} (f : type560 _144530 _144607 P) (x : _144530 -> _144607) : (f x) = (@I ((_144530 -> _144607) -> P -> Prop) f x).
Proof. exact (@lem8207617 (_144530 -> _144607) (P -> Prop) f x). Qed.
Lemma lem8207619 {_144530 _144607 P : Type'} (q : type560 _144530 _144607 P) (f : _144530 -> _144607) : (q f) = (@I ((_144530 -> _144607) -> P -> Prop) q f).
Proof. exact (@lem8207618 _144530 _144607 P q f). Qed.
Lemma lem8207620 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8207621 {_144530 _144607 P : Type'} (q : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) : (q f a) = (@I ((_144530 -> _144607) -> P -> Prop) q f a).
Proof. exact (MK_COMB (@lem8207619 _144530 _144607 P q f) (@lem8207620 P a)). Qed.
Lemma lem8207623 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8207624 {P : Type'} (f : P -> Prop) (x : P) : (f x) = (@I (P -> Prop) f x).
Proof. exact (@lem8207623 P Prop f x). Qed.
Lemma lem8207625 {_144530 _144607 P : Type'} (q : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) : (@I ((_144530 -> _144607) -> P -> Prop) q f a) = (term822 _144530 _144607 P q f a).
Proof. exact (@lem8207624 P (@I ((_144530 -> _144607) -> P -> Prop) q f) a). Qed.
Lemma lem8207627 {_144530 _144607 P : Type'} (q : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) : (q f a) = (term822 _144530 _144607 P q f a).
Proof. exact (TRANS (@lem8207621 _144530 _144607 P q f a) (@lem8207625 _144530 _144607 P q f a)). Qed.
Lemma lem8207628 {_144530 _144607 P : Type'} (q : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) : (term437 _144530 _144607 P q f a) = (term867 _144530 _144607 P q f a).
Proof. exact (MK_COMB (@lem8207610) (@lem8207627 _144530 _144607 P q f a)). Qed.
Lemma lem8207629 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8207630 {_144645 : Type'} : (@eq _144645) = (@eq _144645).
Proof. exact (eq_refl (@eq _144645)). Qed.
Lemma lem8207637 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8207638 {_144530 _144607 _144645 P : Type'} (f : type564 _144530 _144607 _144645 P) (x : _144530 -> _144607) : (f x) = (@I ((_144530 -> _144607) -> P -> _144645) f x).
Proof. exact (@lem8207637 (_144530 -> _144607) (P -> _144645) f x). Qed.
Lemma lem8207639 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) : (pat f) = (@I ((_144530 -> _144607) -> P -> _144645) pat f).
Proof. exact (@lem8207638 _144530 _144607 _144645 P pat f). Qed.
Lemma lem8207640 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8207641 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (a : P) : (pat f a) = (@I ((_144530 -> _144607) -> P -> _144645) pat f a).
Proof. exact (MK_COMB (@lem8207639 _144530 _144607 _144645 P pat f) (@lem8207640 P a)). Qed.
Lemma lem8207643 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8207644 {_144645 P : Type'} (f : P -> _144645) (x : P) : (f x) = (@I (P -> _144645) f x).
Proof. exact (@lem8207643 P _144645 f x). Qed.
Lemma lem8207645 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (a : P) : (@I ((_144530 -> _144607) -> P -> _144645) pat f a) = (term835 _144530 _144607 _144645 P pat f a).
Proof. exact (@lem8207644 _144645 P (@I ((_144530 -> _144607) -> P -> _144645) pat f) a). Qed.
Lemma lem8207647 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (a : P) : (pat f a) = (term835 _144530 _144607 _144645 P pat f a).
Proof. exact (TRANS (@lem8207641 _144530 _144607 _144645 P pat f a) (@lem8207645 _144530 _144607 _144645 P pat f a)). Qed.
Lemma lem8207654 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8207655 {_144530 _144607 _144645 P : Type'} (f : type564 _144530 _144607 _144645 P) (x : _144530 -> _144607) : (f x) = (@I ((_144530 -> _144607) -> P -> _144645) f x).
Proof. exact (@lem8207654 (_144530 -> _144607) (P -> _144645) f x). Qed.
Lemma lem8207656 {_144530 _144607 _144645 P : Type'} (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) : (e f) = (@I ((_144530 -> _144607) -> P -> _144645) e f).
Proof. exact (@lem8207655 _144530 _144607 _144645 P e f). Qed.
Lemma lem8207657 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8207658 {_144530 _144607 _144645 P : Type'} (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (a : P) : (e f a) = (@I ((_144530 -> _144607) -> P -> _144645) e f a).
Proof. exact (MK_COMB (@lem8207656 _144530 _144607 _144645 P e f) (@lem8207657 P a)). Qed.
Lemma lem8207660 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8207661 {_144645 P : Type'} (f : P -> _144645) (x : P) : (f x) = (@I (P -> _144645) f x).
Proof. exact (@lem8207660 P _144645 f x). Qed.
Lemma lem8207662 {_144530 _144607 _144645 P : Type'} (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (a : P) : (@I ((_144530 -> _144607) -> P -> _144645) e f a) = (term835 _144530 _144607 _144645 P e f a).
Proof. exact (@lem8207661 _144645 P (@I ((_144530 -> _144607) -> P -> _144645) e f) a). Qed.
Lemma lem8207664 {_144530 _144607 _144645 P : Type'} (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (a : P) : (e f a) = (term835 _144530 _144607 _144645 P e f a).
Proof. exact (TRANS (@lem8207658 _144530 _144607 _144645 P e f a) (@lem8207662 _144530 _144607 _144645 P e f a)). Qed.
Lemma lem8207665 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (a : P) : (term836 _144530 _144607 _144645 P pat f a) = (term837 _144530 _144607 _144645 P pat f a).
Proof. exact (MK_COMB (@lem8207630 _144645) (@lem8207647 _144530 _144607 _144645 P pat f a)). Qed.
Lemma lem8207666 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (a : P) : ((pat f a) = (e f a)) = ((term835 _144530 _144607 _144645 P pat f a) = (term835 _144530 _144607 _144645 P e f a)).
Proof. exact (MK_COMB (@lem8207665 _144530 _144607 _144645 P pat f a) (@lem8207664 _144530 _144607 _144645 P e f a)). Qed.
Lemma lem8207667 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (a : P) : (term1095 _144530 _144607 _144645 P pat e f a) = (term1096 _144530 _144607 _144645 P pat e f a).
Proof. exact (MK_COMB (@lem8207629) (@lem8207666 _144530 _144607 _144645 P pat e f a)). Qed.
Lemma lem8207668 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8207669 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (a : P) : (term1487 _144530 _144607 _144645 P pat e f a) = (term1184 _144530 _144607 _144645 P pat e f a).
Proof. exact (MK_COMB (@lem8207668) (@lem8207667 _144530 _144607 _144645 P pat e f a)). Qed.
Lemma lem8207670 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) : (term558 _144530 _144607 _144645 P pat e q f a) = (term1488 _144530 _144607 _144645 P pat e q f a).
Proof. exact (MK_COMB (@lem8207669 _144530 _144607 _144645 P pat e f a) (@lem8207628 _144530 _144607 P q f a)). Qed.
Lemma lem8207671 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8207678 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8207679 {_144530 _144607 P : Type'} (f : type560 _144530 _144607 P) (x : _144530 -> _144607) : (f x) = (@I ((_144530 -> _144607) -> P -> Prop) f x).
Proof. exact (@lem8207678 (_144530 -> _144607) (P -> Prop) f x). Qed.
Lemma lem8207680 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (f : _144530 -> _144607) : (p f) = (@I ((_144530 -> _144607) -> P -> Prop) p f).
Proof. exact (@lem8207679 _144530 _144607 P p f). Qed.
Lemma lem8207681 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8207682 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) : (p f a) = (@I ((_144530 -> _144607) -> P -> Prop) p f a).
Proof. exact (MK_COMB (@lem8207680 _144530 _144607 P p f) (@lem8207681 P a)). Qed.
Lemma lem8207684 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8207685 {P : Type'} (f : P -> Prop) (x : P) : (f x) = (@I (P -> Prop) f x).
Proof. exact (@lem8207684 P Prop f x). Qed.
Lemma lem8207686 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) : (@I ((_144530 -> _144607) -> P -> Prop) p f a) = (term822 _144530 _144607 P p f a).
Proof. exact (@lem8207685 P (@I ((_144530 -> _144607) -> P -> Prop) p f) a). Qed.
Lemma lem8207688 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) : (p f a) = (term822 _144530 _144607 P p f a).
Proof. exact (TRANS (@lem8207682 _144530 _144607 P p f a) (@lem8207686 _144530 _144607 P p f a)). Qed.
Lemma lem8207689 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) : (term437 _144530 _144607 P p f a) = (term867 _144530 _144607 P p f a).
Proof. exact (MK_COMB (@lem8207671) (@lem8207688 _144530 _144607 P p f a)). Qed.
Lemma lem8207690 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8207691 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) : (term416 _144530 _144607 P p f a) = (term868 _144530 _144607 P p f a).
Proof. exact (MK_COMB (@lem8207690) (@lem8207689 _144530 _144607 P p f a)). Qed.
Lemma lem8207692 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) : (term560 _144530 _144607 _144645 P p pat e q f a) = (term1489 _144530 _144607 _144645 P p pat e q f a).
Proof. exact (MK_COMB (@lem8207691 _144530 _144607 P p f a) (@lem8207670 _144530 _144607 _144645 P pat e q f a)). Qed.
Lemma lem8207693 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8207694 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) : (term564 _144530 _144607 _144645 P p pat e q f a) = (term1490 _144530 _144607 _144645 P p pat e q f a).
Proof. exact (MK_COMB (@lem8207693) (@lem8207692 _144530 _144607 _144645 P p pat e q f a)). Qed.
Lemma lem8207695 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z'' : type518 _144530 _144607 P) (f : _144530 -> _144607) (g : _144530 -> _144607) (a : P) : (term1493 _144529 _144530 _144607 _144645 P p pat e q lt2 s z'' f g a) = (term1494 _144529 _144530 _144607 _144645 P p pat e q lt2 s z'' f g a).
Proof. exact (MK_COMB (@lem8207694 _144530 _144607 _144645 P p pat e q f a) (@lem8207609 _144529 _144530 _144607 _144645 P p pat e q lt2 s z'' f g a)). Qed.
Lemma lem8207696 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8207697 {_144529 _144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z'' : type518 _144530 _144607 P) (f : _144530 -> _144607) (g : _144530 -> _144607) (a : P) : (term1495 _144529 _144530 _144607 _144645 P p pat e q lt2 s z'' f g a) = (term1496 _144529 _144530 _144607 _144645 P p pat e q lt2 s z'' f g a).
Proof. exact (MK_COMB (@lem8207696) (@lem8207695 _144529 _144530 _144607 _144645 P p pat e q lt2 s z'' f g a)). Qed.
Lemma lem8207698 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z'' : type518 _144530 _144607 P) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (term1497 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z'' f t g a) = (term1498 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z'' f t g a).
Proof. exact (MK_COMB (@lem8207697 _144529 _144530 _144607 _144645 P p pat e q lt2 s z'' f g a) (@lem8207400 _144530 _144607 _144654 P f t g a)). Qed.
Lemma lem8207699 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z'' : type518 _144530 _144607 P) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) : (term1499 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z'' f t g) = (term1500 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z'' f t g).
Proof. exact (fun_ext (fun a : P => @lem8207698 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z'' f t g a)). Qed.
Lemma lem8207700 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8207701 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z'' : type518 _144530 _144607 P) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) : (term1501 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z'' f t g) = (term1502 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z'' f t g).
Proof. exact (MK_COMB (@lem8207700 P) (@lem8207699 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z'' f t g)). Qed.
Lemma lem8207702 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z'' : type518 _144530 _144607 P) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) : (term1503 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z'' f t) = (term1504 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z'' f t).
Proof. exact (fun_ext (fun g : _144530 -> _144607 => @lem8207701 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z'' f t g)). Qed.
Lemma lem8207703 {_144530 _144607 : Type'} : (@all (_144530 -> _144607)) = (@all (_144530 -> _144607)).
Proof. exact (eq_refl (@all (_144530 -> _144607))). Qed.
Lemma lem8207704 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z'' : type518 _144530 _144607 P) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) : (term681 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z'' f t) = (term1505 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z'' f t).
Proof. exact (MK_COMB (@lem8207703 _144530 _144607) (@lem8207702 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z'' f t)). Qed.
Lemma lem8207705 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z'' : type518 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) : (term683 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z'' t) = (term1506 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z'' t).
Proof. exact (fun_ext (fun f : _144530 -> _144607 => @lem8207704 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z'' f t)). Qed.
Lemma lem8207706 {_144530 _144607 : Type'} : (@all (_144530 -> _144607)) = (@all (_144530 -> _144607)).
Proof. exact (eq_refl (@all (_144530 -> _144607))). Qed.
Lemma lem8207707 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z'' : type518 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) : (term685 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z'' t) = (term1507 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z'' t).
Proof. exact (MK_COMB (@lem8207706 _144530 _144607) (@lem8207705 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z'' t)). Qed.
Lemma lem8207708 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z'' : type518 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) (h1 : term685 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z'' t) : term1507 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z'' t.
Proof. exact (EQ_MP (@lem8207707 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z'' t) (@lem8206389 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z'' t h1)). Qed.
Lemma lem8208160 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (z : _144530) : (term832 _144529 _144530 _144607 P lt2 s a f g z) = (term832 _144529 _144530 _144607 P lt2 s a f g z).
Proof. exact (eq_refl (term832 _144529 _144530 _144607 P lt2 s a f g z)). Qed.
Lemma lem8208161 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term833 _144529 _144530 _144607 P lt2 s a f g) = (term833 _144529 _144530 _144607 P lt2 s a f g).
Proof. exact (fun_ext (fun z : _144530 => @lem8208160 _144529 _144530 _144607 P lt2 s a f g z)). Qed.
Lemma lem8208162 {_144530 : Type'} : (@all _144530) = (@all _144530).
Proof. exact (eq_refl (@all _144530)). Qed.
Lemma lem8208164 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term834 _144529 _144530 _144607 P lt2 s a f g) = (term834 _144529 _144530 _144607 P lt2 s a f g).
Proof. exact (MK_COMB (@lem8208162 _144530) (@lem8208161 _144529 _144530 _144607 P lt2 s a f g)). Qed.
Lemma lem8208165 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) : term834 _144529 _144530 _144607 P lt2 s a f g.
Proof. exact (EQ_MP (@lem8208164 _144529 _144530 _144607 P lt2 s a f g) (@lem8206479 _144529 _144530 _144607 P lt2 s a f g h1)). Qed.
Lemma lem8208353 {_144530 _144607 _144654 P : Type'} (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : ((term835 _144530 _144607 _144654 P t f a) = (term835 _144530 _144607 _144654 P t g a)) = ((term835 _144530 _144607 _144654 P t f a) = (term835 _144530 _144607 _144654 P t g a)).
Proof. exact (eq_refl ((term835 _144530 _144607 _144654 P t f a) = (term835 _144530 _144607 _144654 P t g a))). Qed.
Lemma lem8208382 {_144529 _144530 _144607 _144645 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (z'' : type518 _144530 _144607 P) (f : _144530 -> _144607) (g : _144530 -> _144607) (a : P) : (term1492 _144529 _144530 _144607 _144645 P p pat e q lt2 s z'' f g a) = (term1508 _144529 _144530 _144607 _144645 P lt2 s p pat e q z'' f g a).
Proof. exact (@lem19490 (term862 _144529 _144530 _144607 P lt2 z'' f g s a) (term1489 _144530 _144607 _144645 P p pat e q g a) (term855 _144530 _144607 P z'' f g a)). Qed.
Lemma lem8208397 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) : (term1490 _144530 _144607 _144645 P p pat e q f a) = (term1490 _144530 _144607 _144645 P p pat e q f a).
Proof. exact (eq_refl (term1490 _144530 _144607 _144645 P p pat e q f a)). Qed.
Lemma lem8208398 {_144529 _144530 _144607 _144645 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (z'' : type518 _144530 _144607 P) (f : _144530 -> _144607) (g : _144530 -> _144607) (a : P) : (term1494 _144529 _144530 _144607 _144645 P p pat e q lt2 s z'' f g a) = (term1509 _144529 _144530 _144607 _144645 P lt2 s p pat e q z'' f g a).
Proof. exact (MK_COMB (@lem8208397 _144530 _144607 _144645 P p pat e q f a) (@lem8208382 _144529 _144530 _144607 _144645 P lt2 s p pat e q z'' f g a)). Qed.
Lemma lem8208405 {_144529 _144530 _144607 _144645 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (z'' : type518 _144530 _144607 P) (f : _144530 -> _144607) (g : _144530 -> _144607) (a : P) : (term1509 _144529 _144530 _144607 _144645 P lt2 s p pat e q z'' f g a) = (term1510 _144529 _144530 _144607 _144645 P lt2 s p pat e q z'' f g a).
Proof. exact (@lem19490 (term1511 _144529 _144530 _144607 _144645 P p pat e q lt2 z'' f g s a) (term1489 _144530 _144607 _144645 P p pat e q f a) (term1512 _144530 _144607 _144645 P p pat e q z'' f g a)). Qed.
Lemma lem8208406 {_144529 _144530 _144607 _144645 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (z'' : type518 _144530 _144607 P) (f : _144530 -> _144607) (g : _144530 -> _144607) (a : P) : (term1494 _144529 _144530 _144607 _144645 P p pat e q lt2 s z'' f g a) = (term1510 _144529 _144530 _144607 _144645 P lt2 s p pat e q z'' f g a).
Proof. exact (TRANS (@lem8208398 _144529 _144530 _144607 _144645 P lt2 s p pat e q z'' f g a) (@lem8208405 _144529 _144530 _144607 _144645 P lt2 s p pat e q z'' f g a)). Qed.
Lemma lem8208407 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8208408 {_144529 _144530 _144607 _144645 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (z'' : type518 _144530 _144607 P) (f : _144530 -> _144607) (g : _144530 -> _144607) (a : P) : (term1496 _144529 _144530 _144607 _144645 P p pat e q lt2 s z'' f g a) = (term1513 _144529 _144530 _144607 _144645 P lt2 s p pat e q z'' f g a).
Proof. exact (MK_COMB (@lem8208407) (@lem8208406 _144529 _144530 _144607 _144645 P lt2 s p pat e q z'' f g a)). Qed.
Lemma lem8208409 {_144529 _144530 _144607 _144645 _144654 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (z'' : type518 _144530 _144607 P) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (term1498 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z'' f t g a) = (term1514 _144529 _144530 _144607 _144645 _144654 P lt2 s p pat e q z'' f t g a).
Proof. exact (MK_COMB (@lem8208408 _144529 _144530 _144607 _144645 P lt2 s p pat e q z'' f g a) (@lem8208353 _144530 _144607 _144654 P f t g a)). Qed.
Lemma lem8208416 {_144529 _144530 _144607 _144645 _144654 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (z'' : type518 _144530 _144607 P) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (term1514 _144529 _144530 _144607 _144645 _144654 P lt2 s p pat e q z'' f t g a) = (term1515 _144529 _144530 _144607 _144645 _144654 P lt2 s p pat e q z'' f t g a).
Proof. exact (@lem19699 (term1516 _144529 _144530 _144607 _144645 P p pat e q lt2 z'' f g s a) (term1517 _144530 _144607 _144645 P p pat e q z'' f g a) ((term835 _144530 _144607 _144654 P t f a) = (term835 _144530 _144607 _144654 P t g a))). Qed.
Lemma lem8208417 {_144529 _144530 _144607 _144645 _144654 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (z'' : type518 _144530 _144607 P) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (term1498 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z'' f t g a) = (term1515 _144529 _144530 _144607 _144645 _144654 P lt2 s p pat e q z'' f t g a).
Proof. exact (TRANS (@lem8208409 _144529 _144530 _144607 _144645 _144654 P lt2 s p pat e q z'' f t g a) (@lem8208416 _144529 _144530 _144607 _144645 _144654 P lt2 s p pat e q z'' f t g a)). Qed.
Lemma lem8208418 {_144529 _144530 _144607 _144645 _144654 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (z'' : type518 _144530 _144607 P) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) : (term1500 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z'' f t g) = (term1518 _144529 _144530 _144607 _144645 _144654 P lt2 s p pat e q z'' f t g).
Proof. exact (fun_ext (fun a : P => @lem8208417 _144529 _144530 _144607 _144645 _144654 P lt2 s p pat e q z'' f t g a)). Qed.
Lemma lem8208419 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8208420 {_144529 _144530 _144607 _144645 _144654 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (z'' : type518 _144530 _144607 P) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) : (term1502 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z'' f t g) = (term1519 _144529 _144530 _144607 _144645 _144654 P lt2 s p pat e q z'' f t g).
Proof. exact (MK_COMB (@lem8208419 P) (@lem8208418 _144529 _144530 _144607 _144645 _144654 P lt2 s p pat e q z'' f t g)). Qed.
Lemma lem8208421 {_144529 _144530 _144607 _144645 _144654 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (z'' : type518 _144530 _144607 P) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) : (term1504 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z'' f t) = (term1520 _144529 _144530 _144607 _144645 _144654 P lt2 s p pat e q z'' f t).
Proof. exact (fun_ext (fun g : _144530 -> _144607 => @lem8208420 _144529 _144530 _144607 _144645 _144654 P lt2 s p pat e q z'' f t g)). Qed.
Lemma lem8208422 {_144530 _144607 : Type'} : (@all (_144530 -> _144607)) = (@all (_144530 -> _144607)).
Proof. exact (eq_refl (@all (_144530 -> _144607))). Qed.
Lemma lem8208423 {_144529 _144530 _144607 _144645 _144654 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (z'' : type518 _144530 _144607 P) (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) : (term1505 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z'' f t) = (term1521 _144529 _144530 _144607 _144645 _144654 P lt2 s p pat e q z'' f t).
Proof. exact (MK_COMB (@lem8208422 _144530 _144607) (@lem8208421 _144529 _144530 _144607 _144645 _144654 P lt2 s p pat e q z'' f t)). Qed.
Lemma lem8208424 {_144529 _144530 _144607 _144645 _144654 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (z'' : type518 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) : (term1506 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z'' t) = (term1522 _144529 _144530 _144607 _144645 _144654 P lt2 s p pat e q z'' t).
Proof. exact (fun_ext (fun f : _144530 -> _144607 => @lem8208423 _144529 _144530 _144607 _144645 _144654 P lt2 s p pat e q z'' f t)). Qed.
Lemma lem8208425 {_144530 _144607 : Type'} : (@all (_144530 -> _144607)) = (@all (_144530 -> _144607)).
Proof. exact (eq_refl (@all (_144530 -> _144607))). Qed.
Lemma lem8208427 {_144529 _144530 _144607 _144645 _144654 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (z'' : type518 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) : (term1507 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z'' t) = (term1523 _144529 _144530 _144607 _144645 _144654 P lt2 s p pat e q z'' t).
Proof. exact (MK_COMB (@lem8208425 _144530 _144607) (@lem8208424 _144529 _144530 _144607 _144645 _144654 P lt2 s p pat e q z'' t)). Qed.
Lemma lem8208428 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z'' : type518 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) (h1 : term685 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z'' t) : term1523 _144529 _144530 _144607 _144645 _144654 P lt2 s p pat e q z'' t.
Proof. exact (EQ_MP (@lem8208427 _144529 _144530 _144607 _144645 _144654 P lt2 s p pat e q z'' t) (@lem8207708 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z'' t h1)). Qed.
Lemma lem8208538 {_144530 _144607 _144654 P : Type'} (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) (h1 : term839 _144530 _144607 _144654 P f t g a) : term839 _144530 _144607 _144654 P f t g a.
Proof. exact (h1). Qed.
Lemma lem8208554 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (z : _144530) : (term832 _144529 _144530 _144607 P lt2 s a f g z) = (term832 _144529 _144530 _144607 P lt2 s a f g z).
Proof. exact (eq_refl (term832 _144529 _144530 _144607 P lt2 s a f g z)). Qed.
Lemma lem8208555 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term833 _144529 _144530 _144607 P lt2 s a f g) = (term833 _144529 _144530 _144607 P lt2 s a f g).
Proof. exact (fun_ext (fun z : _144530 => @lem8208554 _144529 _144530 _144607 P lt2 s a f g z)). Qed.
Lemma lem8208556 {_144530 : Type'} : (@all _144530) = (@all _144530).
Proof. exact (eq_refl (@all _144530)). Qed.
Lemma lem8208558 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) : (term834 _144529 _144530 _144607 P lt2 s a f g) = (term834 _144529 _144530 _144607 P lt2 s a f g).
Proof. exact (MK_COMB (@lem8208556 _144530) (@lem8208555 _144529 _144530 _144607 P lt2 s a f g)). Qed.
Lemma lem8208559 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) : term834 _144529 _144530 _144607 P lt2 s a f g.
Proof. exact (EQ_MP (@lem8208558 _144529 _144530 _144607 P lt2 s a f g) (@lem8206479 _144529 _144530 _144607 P lt2 s a f g h1)). Qed.
Lemma lem8208577 {_144530 _144607 _144654 P : Type'} (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : ((term835 _144530 _144607 _144654 P y f a) = (term835 _144530 _144607 _144654 P y g a)) = ((term835 _144530 _144607 _144654 P y f a) = (term835 _144530 _144607 _144654 P y g a)).
Proof. exact (eq_refl ((term835 _144530 _144607 _144654 P y f a) = (term835 _144530 _144607 _144654 P y g a))). Qed.
Lemma lem8208606 {_144529 _144530 _144607 _144645 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (z : type518 _144530 _144607 P) (f : _144530 -> _144607) (g : _144530 -> _144607) (a : P) : (term1492 _144529 _144530 _144607 _144645 P p pat e q lt2 s z f g a) = (term1508 _144529 _144530 _144607 _144645 P lt2 s p pat e q z f g a).
Proof. exact (@lem19490 (term862 _144529 _144530 _144607 P lt2 z f g s a) (term1489 _144530 _144607 _144645 P p pat e q g a) (term855 _144530 _144607 P z f g a)). Qed.
Lemma lem8208621 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) : (term1490 _144530 _144607 _144645 P p pat e q f a) = (term1490 _144530 _144607 _144645 P p pat e q f a).
Proof. exact (eq_refl (term1490 _144530 _144607 _144645 P p pat e q f a)). Qed.
Lemma lem8208622 {_144529 _144530 _144607 _144645 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (z : type518 _144530 _144607 P) (f : _144530 -> _144607) (g : _144530 -> _144607) (a : P) : (term1494 _144529 _144530 _144607 _144645 P p pat e q lt2 s z f g a) = (term1509 _144529 _144530 _144607 _144645 P lt2 s p pat e q z f g a).
Proof. exact (MK_COMB (@lem8208621 _144530 _144607 _144645 P p pat e q f a) (@lem8208606 _144529 _144530 _144607 _144645 P lt2 s p pat e q z f g a)). Qed.
Lemma lem8208629 {_144529 _144530 _144607 _144645 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (z : type518 _144530 _144607 P) (f : _144530 -> _144607) (g : _144530 -> _144607) (a : P) : (term1509 _144529 _144530 _144607 _144645 P lt2 s p pat e q z f g a) = (term1510 _144529 _144530 _144607 _144645 P lt2 s p pat e q z f g a).
Proof. exact (@lem19490 (term1511 _144529 _144530 _144607 _144645 P p pat e q lt2 z f g s a) (term1489 _144530 _144607 _144645 P p pat e q f a) (term1512 _144530 _144607 _144645 P p pat e q z f g a)). Qed.
Lemma lem8208630 {_144529 _144530 _144607 _144645 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (z : type518 _144530 _144607 P) (f : _144530 -> _144607) (g : _144530 -> _144607) (a : P) : (term1494 _144529 _144530 _144607 _144645 P p pat e q lt2 s z f g a) = (term1510 _144529 _144530 _144607 _144645 P lt2 s p pat e q z f g a).
Proof. exact (TRANS (@lem8208622 _144529 _144530 _144607 _144645 P lt2 s p pat e q z f g a) (@lem8208629 _144529 _144530 _144607 _144645 P lt2 s p pat e q z f g a)). Qed.
Lemma lem8208631 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8208632 {_144529 _144530 _144607 _144645 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (z : type518 _144530 _144607 P) (f : _144530 -> _144607) (g : _144530 -> _144607) (a : P) : (term1496 _144529 _144530 _144607 _144645 P p pat e q lt2 s z f g a) = (term1513 _144529 _144530 _144607 _144645 P lt2 s p pat e q z f g a).
Proof. exact (MK_COMB (@lem8208631) (@lem8208630 _144529 _144530 _144607 _144645 P lt2 s p pat e q z f g a)). Qed.
Lemma lem8208633 {_144529 _144530 _144607 _144645 _144654 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (z : type518 _144530 _144607 P) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (term1498 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z f y g a) = (term1514 _144529 _144530 _144607 _144645 _144654 P lt2 s p pat e q z f y g a).
Proof. exact (MK_COMB (@lem8208632 _144529 _144530 _144607 _144645 P lt2 s p pat e q z f g a) (@lem8208577 _144530 _144607 _144654 P f y g a)). Qed.
Lemma lem8208640 {_144529 _144530 _144607 _144645 _144654 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (z : type518 _144530 _144607 P) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (term1514 _144529 _144530 _144607 _144645 _144654 P lt2 s p pat e q z f y g a) = (term1515 _144529 _144530 _144607 _144645 _144654 P lt2 s p pat e q z f y g a).
Proof. exact (@lem19699 (term1516 _144529 _144530 _144607 _144645 P p pat e q lt2 z f g s a) (term1517 _144530 _144607 _144645 P p pat e q z f g a) ((term835 _144530 _144607 _144654 P y f a) = (term835 _144530 _144607 _144654 P y g a))). Qed.
Lemma lem8208641 {_144529 _144530 _144607 _144645 _144654 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (z : type518 _144530 _144607 P) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (term1498 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z f y g a) = (term1515 _144529 _144530 _144607 _144645 _144654 P lt2 s p pat e q z f y g a).
Proof. exact (TRANS (@lem8208633 _144529 _144530 _144607 _144645 _144654 P lt2 s p pat e q z f y g a) (@lem8208640 _144529 _144530 _144607 _144645 _144654 P lt2 s p pat e q z f y g a)). Qed.
Lemma lem8208642 {_144529 _144530 _144607 _144645 _144654 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (z : type518 _144530 _144607 P) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) : (term1500 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z f y g) = (term1518 _144529 _144530 _144607 _144645 _144654 P lt2 s p pat e q z f y g).
Proof. exact (fun_ext (fun a : P => @lem8208641 _144529 _144530 _144607 _144645 _144654 P lt2 s p pat e q z f y g a)). Qed.
Lemma lem8208643 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8208644 {_144529 _144530 _144607 _144645 _144654 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (z : type518 _144530 _144607 P) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) : (term1502 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z f y g) = (term1519 _144529 _144530 _144607 _144645 _144654 P lt2 s p pat e q z f y g).
Proof. exact (MK_COMB (@lem8208643 P) (@lem8208642 _144529 _144530 _144607 _144645 _144654 P lt2 s p pat e q z f y g)). Qed.
Lemma lem8208645 {_144529 _144530 _144607 _144645 _144654 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (z : type518 _144530 _144607 P) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) : (term1504 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z f y) = (term1520 _144529 _144530 _144607 _144645 _144654 P lt2 s p pat e q z f y).
Proof. exact (fun_ext (fun g : _144530 -> _144607 => @lem8208644 _144529 _144530 _144607 _144645 _144654 P lt2 s p pat e q z f y g)). Qed.
Lemma lem8208646 {_144530 _144607 : Type'} : (@all (_144530 -> _144607)) = (@all (_144530 -> _144607)).
Proof. exact (eq_refl (@all (_144530 -> _144607))). Qed.
Lemma lem8208647 {_144529 _144530 _144607 _144645 _144654 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (z : type518 _144530 _144607 P) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) : (term1505 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z f y) = (term1521 _144529 _144530 _144607 _144645 _144654 P lt2 s p pat e q z f y).
Proof. exact (MK_COMB (@lem8208646 _144530 _144607) (@lem8208645 _144529 _144530 _144607 _144645 _144654 P lt2 s p pat e q z f y)). Qed.
Lemma lem8208648 {_144529 _144530 _144607 _144645 _144654 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (z : type518 _144530 _144607 P) (y : type564 _144530 _144607 _144654 P) : (term1506 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z y) = (term1522 _144529 _144530 _144607 _144645 _144654 P lt2 s p pat e q z y).
Proof. exact (fun_ext (fun f : _144530 -> _144607 => @lem8208647 _144529 _144530 _144607 _144645 _144654 P lt2 s p pat e q z f y)). Qed.
Lemma lem8208649 {_144530 _144607 : Type'} : (@all (_144530 -> _144607)) = (@all (_144530 -> _144607)).
Proof. exact (eq_refl (@all (_144530 -> _144607))). Qed.
Lemma lem8208651 {_144529 _144530 _144607 _144645 _144654 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (z : type518 _144530 _144607 P) (y : type564 _144530 _144607 _144654 P) : (term1507 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z y) = (term1523 _144529 _144530 _144607 _144645 _144654 P lt2 s p pat e q z y).
Proof. exact (MK_COMB (@lem8208649 _144530 _144607) (@lem8208648 _144529 _144530 _144607 _144645 _144654 P lt2 s p pat e q z y)). Qed.
Lemma lem8208652 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : type518 _144530 _144607 P) (y : type564 _144530 _144607 _144654 P) (h1 : term685 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z y) : term1523 _144529 _144530 _144607 _144645 _144654 P lt2 s p pat e q z y.
Proof. exact (EQ_MP (@lem8208651 _144529 _144530 _144607 _144645 _144654 P lt2 s p pat e q z y) (@lem8207018 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z y h1)). Qed.
Lemma lem8208932 {_144530 _144607 _144654 P : Type'} (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) (h1 : term839 _144530 _144607 _144654 P f y g a) : term839 _144530 _144607 _144654 P f y g a.
Proof. exact (h1). Qed.
Lemma lem8208933 {_144529 _144530 _144607 P : Type'} (_109001 : _144530) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) : term902 _144529 _144530 _144607 P lt2 s a f g _109001.
Proof. exact (@lem8208165 _144529 _144530 _144607 P lt2 s a f g h1 _109001). Qed.
Lemma lem8208934 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (_109001 : _144530) : (term902 _144529 _144530 _144607 P lt2 s a f g _109001) = (term832 _144529 _144530 _144607 P lt2 s a f g _109001).
Proof. exact (eq_refl (term902 _144529 _144530 _144607 P lt2 s a f g _109001)). Qed.
Lemma lem8208954 {_144529 _144530 _144607 _144645 _144654 P : Type'} (_109008 : _144530 -> _144607) (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z'' : type518 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) (h1 : term685 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z'' t) : term1524 _144529 _144530 _144607 _144645 _144654 P lt2 s p pat e q z'' t _109008.
Proof. exact (@lem8208428 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z'' t h1 _109008). Qed.
Lemma lem8208955 {_144529 _144530 _144607 _144645 _144654 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (z'' : type518 _144530 _144607 P) (_109008 : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) : (term1524 _144529 _144530 _144607 _144645 _144654 P lt2 s p pat e q z'' t _109008) = (term1521 _144529 _144530 _144607 _144645 _144654 P lt2 s p pat e q z'' _109008 t).
Proof. exact (eq_refl (term1524 _144529 _144530 _144607 _144645 _144654 P lt2 s p pat e q z'' t _109008)). Qed.
Lemma lem8208956 {_144529 _144530 _144607 _144645 _144654 P : Type'} (_109008 : _144530 -> _144607) (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z'' : type518 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) (h1 : term685 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z'' t) : term1521 _144529 _144530 _144607 _144645 _144654 P lt2 s p pat e q z'' _109008 t.
Proof. exact (EQ_MP (@lem8208955 _144529 _144530 _144607 _144645 _144654 P lt2 s p pat e q z'' _109008 t) (@lem8208954 _144529 _144530 _144607 _144645 _144654 P _109008 p pat e q lt2 s z'' t h1)). Qed.
Lemma lem8208957 {_144529 _144530 _144607 _144645 _144654 P : Type'} (_109008 : _144530 -> _144607) (_109009 : _144530 -> _144607) (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z'' : type518 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) (h1 : term685 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z'' t) : term1525 _144529 _144530 _144607 _144645 _144654 P lt2 s p pat e q z'' _109008 t _109009.
Proof. exact (@lem8208956 _144529 _144530 _144607 _144645 _144654 P _109008 p pat e q lt2 s z'' t h1 _109009). Qed.
Lemma lem8208958 {_144529 _144530 _144607 _144645 _144654 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (z'' : type518 _144530 _144607 P) (_109008 : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (_109009 : _144530 -> _144607) : (term1525 _144529 _144530 _144607 _144645 _144654 P lt2 s p pat e q z'' _109008 t _109009) = (term1519 _144529 _144530 _144607 _144645 _144654 P lt2 s p pat e q z'' _109008 t _109009).
Proof. exact (eq_refl (term1525 _144529 _144530 _144607 _144645 _144654 P lt2 s p pat e q z'' _109008 t _109009)). Qed.
Lemma lem8208959 {_144529 _144530 _144607 _144645 _144654 P : Type'} (_109008 : _144530 -> _144607) (_109009 : _144530 -> _144607) (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z'' : type518 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) (h1 : term685 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z'' t) : term1519 _144529 _144530 _144607 _144645 _144654 P lt2 s p pat e q z'' _109008 t _109009.
Proof. exact (EQ_MP (@lem8208958 _144529 _144530 _144607 _144645 _144654 P lt2 s p pat e q z'' _109008 t _109009) (@lem8208957 _144529 _144530 _144607 _144645 _144654 P _109008 _109009 p pat e q lt2 s z'' t h1)). Qed.
Lemma lem8208960 {_144529 _144530 _144607 _144645 _144654 P : Type'} (_109008 : _144530 -> _144607) (_109009 : _144530 -> _144607) (_109010 : P) (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z'' : type518 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) (h1 : term685 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z'' t) : term1526 _144529 _144530 _144607 _144645 _144654 P lt2 s p pat e q z'' _109008 t _109009 _109010.
Proof. exact (@lem8208959 _144529 _144530 _144607 _144645 _144654 P _109008 _109009 p pat e q lt2 s z'' t h1 _109010). Qed.
Lemma lem8208961 {_144529 _144530 _144607 _144645 _144654 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (z'' : type518 _144530 _144607 P) (_109008 : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term1526 _144529 _144530 _144607 _144645 _144654 P lt2 s p pat e q z'' _109008 t _109009 _109010) = (term1515 _144529 _144530 _144607 _144645 _144654 P lt2 s p pat e q z'' _109008 t _109009 _109010).
Proof. exact (eq_refl (term1526 _144529 _144530 _144607 _144645 _144654 P lt2 s p pat e q z'' _109008 t _109009 _109010)). Qed.
Lemma lem8208962 {_144529 _144530 _144607 _144645 _144654 P : Type'} (_109008 : _144530 -> _144607) (_109009 : _144530 -> _144607) (_109010 : P) (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z'' : type518 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) (h1 : term685 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z'' t) : term1515 _144529 _144530 _144607 _144645 _144654 P lt2 s p pat e q z'' _109008 t _109009 _109010.
Proof. exact (EQ_MP (@lem8208961 _144529 _144530 _144607 _144645 _144654 P lt2 s p pat e q z'' _109008 t _109009 _109010) (@lem8208960 _144529 _144530 _144607 _144645 _144654 P _109008 _109009 _109010 p pat e q lt2 s z'' t h1)). Qed.
Lemma lem8208981 {_144529 _144530 _144607 P : Type'} (_109017 : _144530) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) : term902 _144529 _144530 _144607 P lt2 s a f g _109017.
Proof. exact (@lem8208559 _144529 _144530 _144607 P lt2 s a f g h1 _109017). Qed.
Lemma lem8208982 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (_109017 : _144530) : (term902 _144529 _144530 _144607 P lt2 s a f g _109017) = (term832 _144529 _144530 _144607 P lt2 s a f g _109017).
Proof. exact (eq_refl (term902 _144529 _144530 _144607 P lt2 s a f g _109017)). Qed.
Lemma lem8208984 {_144529 _144530 _144607 _144645 _144654 P : Type'} (_109018 : _144530 -> _144607) (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : type518 _144530 _144607 P) (y : type564 _144530 _144607 _144654 P) (h1 : term685 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z y) : term1524 _144529 _144530 _144607 _144645 _144654 P lt2 s p pat e q z y _109018.
Proof. exact (@lem8208652 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z y h1 _109018). Qed.
Lemma lem8208985 {_144529 _144530 _144607 _144645 _144654 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (z : type518 _144530 _144607 P) (_109018 : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) : (term1524 _144529 _144530 _144607 _144645 _144654 P lt2 s p pat e q z y _109018) = (term1521 _144529 _144530 _144607 _144645 _144654 P lt2 s p pat e q z _109018 y).
Proof. exact (eq_refl (term1524 _144529 _144530 _144607 _144645 _144654 P lt2 s p pat e q z y _109018)). Qed.
Lemma lem8208986 {_144529 _144530 _144607 _144645 _144654 P : Type'} (_109018 : _144530 -> _144607) (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : type518 _144530 _144607 P) (y : type564 _144530 _144607 _144654 P) (h1 : term685 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z y) : term1521 _144529 _144530 _144607 _144645 _144654 P lt2 s p pat e q z _109018 y.
Proof. exact (EQ_MP (@lem8208985 _144529 _144530 _144607 _144645 _144654 P lt2 s p pat e q z _109018 y) (@lem8208984 _144529 _144530 _144607 _144645 _144654 P _109018 p pat e q lt2 s z y h1)). Qed.
Lemma lem8208987 {_144529 _144530 _144607 _144645 _144654 P : Type'} (_109018 : _144530 -> _144607) (_109019 : _144530 -> _144607) (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : type518 _144530 _144607 P) (y : type564 _144530 _144607 _144654 P) (h1 : term685 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z y) : term1525 _144529 _144530 _144607 _144645 _144654 P lt2 s p pat e q z _109018 y _109019.
Proof. exact (@lem8208986 _144529 _144530 _144607 _144645 _144654 P _109018 p pat e q lt2 s z y h1 _109019). Qed.
Lemma lem8208988 {_144529 _144530 _144607 _144645 _144654 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (z : type518 _144530 _144607 P) (_109018 : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (_109019 : _144530 -> _144607) : (term1525 _144529 _144530 _144607 _144645 _144654 P lt2 s p pat e q z _109018 y _109019) = (term1519 _144529 _144530 _144607 _144645 _144654 P lt2 s p pat e q z _109018 y _109019).
Proof. exact (eq_refl (term1525 _144529 _144530 _144607 _144645 _144654 P lt2 s p pat e q z _109018 y _109019)). Qed.
Lemma lem8208989 {_144529 _144530 _144607 _144645 _144654 P : Type'} (_109018 : _144530 -> _144607) (_109019 : _144530 -> _144607) (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : type518 _144530 _144607 P) (y : type564 _144530 _144607 _144654 P) (h1 : term685 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z y) : term1519 _144529 _144530 _144607 _144645 _144654 P lt2 s p pat e q z _109018 y _109019.
Proof. exact (EQ_MP (@lem8208988 _144529 _144530 _144607 _144645 _144654 P lt2 s p pat e q z _109018 y _109019) (@lem8208987 _144529 _144530 _144607 _144645 _144654 P _109018 _109019 p pat e q lt2 s z y h1)). Qed.
Lemma lem8208990 {_144529 _144530 _144607 _144645 _144654 P : Type'} (_109018 : _144530 -> _144607) (_109019 : _144530 -> _144607) (_109020 : P) (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : type518 _144530 _144607 P) (y : type564 _144530 _144607 _144654 P) (h1 : term685 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z y) : term1526 _144529 _144530 _144607 _144645 _144654 P lt2 s p pat e q z _109018 y _109019 _109020.
Proof. exact (@lem8208989 _144529 _144530 _144607 _144645 _144654 P _109018 _109019 p pat e q lt2 s z y h1 _109020). Qed.
Lemma lem8208991 {_144529 _144530 _144607 _144645 _144654 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (z : type518 _144530 _144607 P) (_109018 : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term1526 _144529 _144530 _144607 _144645 _144654 P lt2 s p pat e q z _109018 y _109019 _109020) = (term1515 _144529 _144530 _144607 _144645 _144654 P lt2 s p pat e q z _109018 y _109019 _109020).
Proof. exact (eq_refl (term1526 _144529 _144530 _144607 _144645 _144654 P lt2 s p pat e q z _109018 y _109019 _109020)). Qed.
Lemma lem8208992 {_144529 _144530 _144607 _144645 _144654 P : Type'} (_109018 : _144530 -> _144607) (_109019 : _144530 -> _144607) (_109020 : P) (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : type518 _144530 _144607 P) (y : type564 _144530 _144607 _144654 P) (h1 : term685 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z y) : term1515 _144529 _144530 _144607 _144645 _144654 P lt2 s p pat e q z _109018 y _109019 _109020.
Proof. exact (EQ_MP (@lem8208991 _144529 _144530 _144607 _144645 _144654 P lt2 s p pat e q z _109018 y _109019 _109020) (@lem8208990 _144529 _144530 _144607 _144645 _144654 P _109018 _109019 _109020 p pat e q lt2 s z y h1)). Qed.
Lemma lem8209033 {_144529 _144530 _144607 _144645 _144654 P : Type'} (_109008 : _144530 -> _144607) (_109009 : _144530 -> _144607) (_109010 : P) (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z'' : type518 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) (h1 : term685 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z'' t) : term1527 _144530 _144607 _144645 _144654 P p pat e q z'' _109008 t _109009 _109010.
Proof. exact (proj2 (@lem8208962 _144529 _144530 _144607 _144645 _144654 P _109008 _109009 _109010 p pat e q lt2 s z'' t h1)). Qed.
Lemma lem8209034 {_144529 _144530 _144607 _144645 _144654 P : Type'} (_109008 : _144530 -> _144607) (_109009 : _144530 -> _144607) (_109010 : P) (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z'' : type518 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) (h1 : term685 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z'' t) : term1528 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 z'' s _109008 t _109009 _109010.
Proof. exact (proj1 (@lem8208962 _144529 _144530 _144607 _144645 _144654 P _109008 _109009 _109010 p pat e q lt2 s z'' t h1)). Qed.
Lemma lem8209055 {_144529 _144530 _144607 _144645 _144654 P : Type'} (_109018 : _144530 -> _144607) (_109019 : _144530 -> _144607) (_109020 : P) (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : type518 _144530 _144607 P) (y : type564 _144530 _144607 _144654 P) (h1 : term685 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z y) : term1527 _144530 _144607 _144645 _144654 P p pat e q z _109018 y _109019 _109020.
Proof. exact (proj2 (@lem8208992 _144529 _144530 _144607 _144645 _144654 P _109018 _109019 _109020 p pat e q lt2 s z y h1)). Qed.
Lemma lem8209056 {_144529 _144530 _144607 _144645 _144654 P : Type'} (_109018 : _144530 -> _144607) (_109019 : _144530 -> _144607) (_109020 : P) (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : type518 _144530 _144607 P) (y : type564 _144530 _144607 _144654 P) (h1 : term685 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z y) : term1528 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 z s _109018 y _109019 _109020.
Proof. exact (proj1 (@lem8208992 _144529 _144530 _144607 _144645 _144654 P _109018 _109019 _109020 p pat e q lt2 s z y h1)). Qed.
Lemma lem8209066 {_144529 _144530 _144607 P : Type'} (_109001 : _144530) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) : term832 _144529 _144530 _144607 P lt2 s a f g _109001.
Proof. exact (EQ_MP (@lem8208934 _144529 _144530 _144607 P lt2 s a f g _109001) (@lem8208933 _144529 _144530 _144607 P _109001 lt2 s a f g h1)). Qed.
Lemma lem8209076 {_144530 _144607 _144654 P : Type'} (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) (h1 : term839 _144530 _144607 _144654 P f t g a) : term839 _144530 _144607 _144654 P f t g a.
Proof. exact (h1). Qed.
Lemma lem8209152 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (z'' : type518 _144530 _144607 P) (s : P -> _144529) (_109008 : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term1528 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 z'' s _109008 t _109009 _109010) = (term1529 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 z'' s _109008 t _109009 _109010).
Proof. exact (@lem8183609 (term1489 _144530 _144607 _144645 P p pat e q _109008 _109010) (term1511 _144529 _144530 _144607 _144645 P p pat e q lt2 z'' _109008 _109009 s _109010) ((term835 _144530 _144607 _144654 P t _109008 _109010) = (term835 _144530 _144607 _144654 P t _109009 _109010))). Qed.
Lemma lem8209153 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (z'' : type518 _144530 _144607 P) (s : P -> _144529) (_109008 : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term1530 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 z'' s _109008 t _109009 _109010) = (term1531 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 z'' s _109008 t _109009 _109010).
Proof. exact (@lem8183609 (term1489 _144530 _144607 _144645 P p pat e q _109009 _109010) (term862 _144529 _144530 _144607 P lt2 z'' _109008 _109009 s _109010) ((term835 _144530 _144607 _144654 P t _109008 _109010) = (term835 _144530 _144607 _144654 P t _109009 _109010))). Qed.
Lemma lem8209157 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (z'' : type518 _144530 _144607 P) (s : P -> _144529) (_109008 : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term1531 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 z'' s _109008 t _109009 _109010) = (term1532 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 z'' s _109008 t _109009 _109010).
Proof. exact (@lem8183609 (term867 _144530 _144607 P p _109009 _109010) (term1488 _144530 _144607 _144645 P pat e q _109009 _109010) (term1533 _144529 _144530 _144607 _144654 P lt2 z'' s _109008 t _109009 _109010)). Qed.
Lemma lem8209164 {_144529 _144530 _144607 _144645 _144654 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (z'' : type518 _144530 _144607 P) (s : P -> _144529) (_109008 : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term1534 _144529 _144530 _144607 _144645 _144654 P pat e q lt2 z'' s _109008 t _109009 _109010) = (term1535 _144529 _144530 _144607 _144645 _144654 P pat e q lt2 z'' s _109008 t _109009 _109010).
Proof. exact (@lem8183609 (term1096 _144530 _144607 _144645 P pat e _109009 _109010) (term867 _144530 _144607 P q _109009 _109010) (term1533 _144529 _144530 _144607 _144654 P lt2 z'' s _109008 t _109009 _109010)). Qed.
Lemma lem8209165 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term868 _144530 _144607 P p _109009 _109010) = (term868 _144530 _144607 P p _109009 _109010).
Proof. exact (eq_refl (term868 _144530 _144607 P p _109009 _109010)). Qed.
Lemma lem8209168 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (z'' : type518 _144530 _144607 P) (s : P -> _144529) (_109008 : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term1532 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 z'' s _109008 t _109009 _109010) = (term1536 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 z'' s _109008 t _109009 _109010).
Proof. exact (MK_COMB (@lem8209165 _144530 _144607 P p _109009 _109010) (@lem8209164 _144529 _144530 _144607 _144645 _144654 P pat e q lt2 z'' s _109008 t _109009 _109010)). Qed.
Lemma lem8209170 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (z'' : type518 _144530 _144607 P) (s : P -> _144529) (_109008 : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term1531 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 z'' s _109008 t _109009 _109010) = (term1536 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 z'' s _109008 t _109009 _109010).
Proof. exact (TRANS (@lem8209157 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 z'' s _109008 t _109009 _109010) (@lem8209168 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 z'' s _109008 t _109009 _109010)). Qed.
Lemma lem8209171 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (z'' : type518 _144530 _144607 P) (s : P -> _144529) (_109008 : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term1530 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 z'' s _109008 t _109009 _109010) = (term1536 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 z'' s _109008 t _109009 _109010).
Proof. exact (TRANS (@lem8209153 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 z'' s _109008 t _109009 _109010) (@lem8209170 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 z'' s _109008 t _109009 _109010)). Qed.
Lemma lem8209172 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (_109008 : _144530 -> _144607) (_109010 : P) : (term1490 _144530 _144607 _144645 P p pat e q _109008 _109010) = (term1490 _144530 _144607 _144645 P p pat e q _109008 _109010).
Proof. exact (eq_refl (term1490 _144530 _144607 _144645 P p pat e q _109008 _109010)). Qed.
Lemma lem8209173 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (z'' : type518 _144530 _144607 P) (s : P -> _144529) (_109008 : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term1529 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 z'' s _109008 t _109009 _109010) = (term1537 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 z'' s _109008 t _109009 _109010).
Proof. exact (MK_COMB (@lem8209172 _144530 _144607 _144645 P p pat e q _109008 _109010) (@lem8209171 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 z'' s _109008 t _109009 _109010)). Qed.
Lemma lem8209174 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (z'' : type518 _144530 _144607 P) (s : P -> _144529) (_109008 : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term1537 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 z'' s _109008 t _109009 _109010) = (term1538 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 z'' s _109008 t _109009 _109010).
Proof. exact (@lem8183609 (term867 _144530 _144607 P p _109008 _109010) (term1488 _144530 _144607 _144645 P pat e q _109008 _109010) (term1536 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 z'' s _109008 t _109009 _109010)). Qed.
Lemma lem8209181 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (z'' : type518 _144530 _144607 P) (s : P -> _144529) (_109008 : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term1539 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 z'' s _109008 t _109009 _109010) = (term1540 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 z'' s _109008 t _109009 _109010).
Proof. exact (@lem8183609 (term1096 _144530 _144607 _144645 P pat e _109008 _109010) (term867 _144530 _144607 P q _109008 _109010) (term1536 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 z'' s _109008 t _109009 _109010)). Qed.
Lemma lem8209182 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (_109008 : _144530 -> _144607) (_109010 : P) : (term868 _144530 _144607 P p _109008 _109010) = (term868 _144530 _144607 P p _109008 _109010).
Proof. exact (eq_refl (term868 _144530 _144607 P p _109008 _109010)). Qed.
Lemma lem8209185 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (z'' : type518 _144530 _144607 P) (s : P -> _144529) (_109008 : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term1538 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 z'' s _109008 t _109009 _109010) = (term1541 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 z'' s _109008 t _109009 _109010).
Proof. exact (MK_COMB (@lem8209182 _144530 _144607 P p _109008 _109010) (@lem8209181 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 z'' s _109008 t _109009 _109010)). Qed.
Lemma lem8209186 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (z'' : type518 _144530 _144607 P) (s : P -> _144529) (_109008 : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term1537 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 z'' s _109008 t _109009 _109010) = (term1541 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 z'' s _109008 t _109009 _109010).
Proof. exact (TRANS (@lem8209174 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 z'' s _109008 t _109009 _109010) (@lem8209185 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 z'' s _109008 t _109009 _109010)). Qed.
Lemma lem8209187 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (z'' : type518 _144530 _144607 P) (s : P -> _144529) (_109008 : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term1529 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 z'' s _109008 t _109009 _109010) = (term1541 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 z'' s _109008 t _109009 _109010).
Proof. exact (TRANS (@lem8209173 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 z'' s _109008 t _109009 _109010) (@lem8209186 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 z'' s _109008 t _109009 _109010)). Qed.
Lemma lem8209189 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (z'' : type518 _144530 _144607 P) (s : P -> _144529) (_109008 : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term1528 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 z'' s _109008 t _109009 _109010) = (term1541 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 z'' s _109008 t _109009 _109010).
Proof. exact (TRANS (@lem8209152 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 z'' s _109008 t _109009 _109010) (@lem8209187 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 z'' s _109008 t _109009 _109010)). Qed.
Lemma lem8209190 {_144529 _144530 _144607 _144645 _144654 P : Type'} (_109008 : _144530 -> _144607) (_109009 : _144530 -> _144607) (_109010 : P) (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z'' : type518 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) (h1 : term685 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z'' t) : term1541 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 z'' s _109008 t _109009 _109010.
Proof. exact (EQ_MP (@lem8209189 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 z'' s _109008 t _109009 _109010) (@lem8209034 _144529 _144530 _144607 _144645 _144654 P _109008 _109009 _109010 p pat e q lt2 s z'' t h1)). Qed.
Lemma lem8209194 {_144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (z'' : type518 _144530 _144607 P) (_109008 : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term1527 _144530 _144607 _144645 _144654 P p pat e q z'' _109008 t _109009 _109010) = (term1542 _144530 _144607 _144645 _144654 P p pat e q z'' _109008 t _109009 _109010).
Proof. exact (@lem8183609 (term1489 _144530 _144607 _144645 P p pat e q _109008 _109010) (term1512 _144530 _144607 _144645 P p pat e q z'' _109008 _109009 _109010) ((term835 _144530 _144607 _144654 P t _109008 _109010) = (term835 _144530 _144607 _144654 P t _109009 _109010))). Qed.
Lemma lem8209195 {_144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (z'' : type518 _144530 _144607 P) (_109008 : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term1543 _144530 _144607 _144645 _144654 P p pat e q z'' _109008 t _109009 _109010) = (term1544 _144530 _144607 _144645 _144654 P p pat e q z'' _109008 t _109009 _109010).
Proof. exact (@lem8183609 (term1489 _144530 _144607 _144645 P p pat e q _109009 _109010) (term855 _144530 _144607 P z'' _109008 _109009 _109010) ((term835 _144530 _144607 _144654 P t _109008 _109010) = (term835 _144530 _144607 _144654 P t _109009 _109010))). Qed.
Lemma lem8209199 {_144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (z'' : type518 _144530 _144607 P) (_109008 : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term1544 _144530 _144607 _144645 _144654 P p pat e q z'' _109008 t _109009 _109010) = (term1545 _144530 _144607 _144645 _144654 P p pat e q z'' _109008 t _109009 _109010).
Proof. exact (@lem8183609 (term867 _144530 _144607 P p _109009 _109010) (term1488 _144530 _144607 _144645 P pat e q _109009 _109010) (term1546 _144530 _144607 _144654 P z'' _109008 t _109009 _109010)). Qed.
Lemma lem8209206 {_144530 _144607 _144645 _144654 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (z'' : type518 _144530 _144607 P) (_109008 : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term1547 _144530 _144607 _144645 _144654 P pat e q z'' _109008 t _109009 _109010) = (term1548 _144530 _144607 _144645 _144654 P pat e q z'' _109008 t _109009 _109010).
Proof. exact (@lem8183609 (term1096 _144530 _144607 _144645 P pat e _109009 _109010) (term867 _144530 _144607 P q _109009 _109010) (term1546 _144530 _144607 _144654 P z'' _109008 t _109009 _109010)). Qed.
Lemma lem8209207 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term868 _144530 _144607 P p _109009 _109010) = (term868 _144530 _144607 P p _109009 _109010).
Proof. exact (eq_refl (term868 _144530 _144607 P p _109009 _109010)). Qed.
Lemma lem8209210 {_144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (z'' : type518 _144530 _144607 P) (_109008 : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term1545 _144530 _144607 _144645 _144654 P p pat e q z'' _109008 t _109009 _109010) = (term1549 _144530 _144607 _144645 _144654 P p pat e q z'' _109008 t _109009 _109010).
Proof. exact (MK_COMB (@lem8209207 _144530 _144607 P p _109009 _109010) (@lem8209206 _144530 _144607 _144645 _144654 P pat e q z'' _109008 t _109009 _109010)). Qed.
Lemma lem8209212 {_144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (z'' : type518 _144530 _144607 P) (_109008 : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term1544 _144530 _144607 _144645 _144654 P p pat e q z'' _109008 t _109009 _109010) = (term1549 _144530 _144607 _144645 _144654 P p pat e q z'' _109008 t _109009 _109010).
Proof. exact (TRANS (@lem8209199 _144530 _144607 _144645 _144654 P p pat e q z'' _109008 t _109009 _109010) (@lem8209210 _144530 _144607 _144645 _144654 P p pat e q z'' _109008 t _109009 _109010)). Qed.
Lemma lem8209213 {_144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (z'' : type518 _144530 _144607 P) (_109008 : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term1543 _144530 _144607 _144645 _144654 P p pat e q z'' _109008 t _109009 _109010) = (term1549 _144530 _144607 _144645 _144654 P p pat e q z'' _109008 t _109009 _109010).
Proof. exact (TRANS (@lem8209195 _144530 _144607 _144645 _144654 P p pat e q z'' _109008 t _109009 _109010) (@lem8209212 _144530 _144607 _144645 _144654 P p pat e q z'' _109008 t _109009 _109010)). Qed.
Lemma lem8209214 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (_109008 : _144530 -> _144607) (_109010 : P) : (term1490 _144530 _144607 _144645 P p pat e q _109008 _109010) = (term1490 _144530 _144607 _144645 P p pat e q _109008 _109010).
Proof. exact (eq_refl (term1490 _144530 _144607 _144645 P p pat e q _109008 _109010)). Qed.
Lemma lem8209215 {_144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (z'' : type518 _144530 _144607 P) (_109008 : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term1542 _144530 _144607 _144645 _144654 P p pat e q z'' _109008 t _109009 _109010) = (term1550 _144530 _144607 _144645 _144654 P p pat e q z'' _109008 t _109009 _109010).
Proof. exact (MK_COMB (@lem8209214 _144530 _144607 _144645 P p pat e q _109008 _109010) (@lem8209213 _144530 _144607 _144645 _144654 P p pat e q z'' _109008 t _109009 _109010)). Qed.
Lemma lem8209216 {_144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (z'' : type518 _144530 _144607 P) (_109008 : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term1550 _144530 _144607 _144645 _144654 P p pat e q z'' _109008 t _109009 _109010) = (term1551 _144530 _144607 _144645 _144654 P p pat e q z'' _109008 t _109009 _109010).
Proof. exact (@lem8183609 (term867 _144530 _144607 P p _109008 _109010) (term1488 _144530 _144607 _144645 P pat e q _109008 _109010) (term1549 _144530 _144607 _144645 _144654 P p pat e q z'' _109008 t _109009 _109010)). Qed.
Lemma lem8209223 {_144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (z'' : type518 _144530 _144607 P) (_109008 : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term1552 _144530 _144607 _144645 _144654 P p pat e q z'' _109008 t _109009 _109010) = (term1553 _144530 _144607 _144645 _144654 P p pat e q z'' _109008 t _109009 _109010).
Proof. exact (@lem8183609 (term1096 _144530 _144607 _144645 P pat e _109008 _109010) (term867 _144530 _144607 P q _109008 _109010) (term1549 _144530 _144607 _144645 _144654 P p pat e q z'' _109008 t _109009 _109010)). Qed.
Lemma lem8209224 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (_109008 : _144530 -> _144607) (_109010 : P) : (term868 _144530 _144607 P p _109008 _109010) = (term868 _144530 _144607 P p _109008 _109010).
Proof. exact (eq_refl (term868 _144530 _144607 P p _109008 _109010)). Qed.
Lemma lem8209227 {_144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (z'' : type518 _144530 _144607 P) (_109008 : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term1551 _144530 _144607 _144645 _144654 P p pat e q z'' _109008 t _109009 _109010) = (term1554 _144530 _144607 _144645 _144654 P p pat e q z'' _109008 t _109009 _109010).
Proof. exact (MK_COMB (@lem8209224 _144530 _144607 P p _109008 _109010) (@lem8209223 _144530 _144607 _144645 _144654 P p pat e q z'' _109008 t _109009 _109010)). Qed.
Lemma lem8209228 {_144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (z'' : type518 _144530 _144607 P) (_109008 : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term1550 _144530 _144607 _144645 _144654 P p pat e q z'' _109008 t _109009 _109010) = (term1554 _144530 _144607 _144645 _144654 P p pat e q z'' _109008 t _109009 _109010).
Proof. exact (TRANS (@lem8209216 _144530 _144607 _144645 _144654 P p pat e q z'' _109008 t _109009 _109010) (@lem8209227 _144530 _144607 _144645 _144654 P p pat e q z'' _109008 t _109009 _109010)). Qed.
Lemma lem8209229 {_144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (z'' : type518 _144530 _144607 P) (_109008 : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term1542 _144530 _144607 _144645 _144654 P p pat e q z'' _109008 t _109009 _109010) = (term1554 _144530 _144607 _144645 _144654 P p pat e q z'' _109008 t _109009 _109010).
Proof. exact (TRANS (@lem8209215 _144530 _144607 _144645 _144654 P p pat e q z'' _109008 t _109009 _109010) (@lem8209228 _144530 _144607 _144645 _144654 P p pat e q z'' _109008 t _109009 _109010)). Qed.
Lemma lem8209231 {_144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (z'' : type518 _144530 _144607 P) (_109008 : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term1527 _144530 _144607 _144645 _144654 P p pat e q z'' _109008 t _109009 _109010) = (term1554 _144530 _144607 _144645 _144654 P p pat e q z'' _109008 t _109009 _109010).
Proof. exact (TRANS (@lem8209194 _144530 _144607 _144645 _144654 P p pat e q z'' _109008 t _109009 _109010) (@lem8209229 _144530 _144607 _144645 _144654 P p pat e q z'' _109008 t _109009 _109010)). Qed.
Lemma lem8209232 {_144529 _144530 _144607 _144645 _144654 P : Type'} (_109008 : _144530 -> _144607) (_109009 : _144530 -> _144607) (_109010 : P) (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z'' : type518 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) (h1 : term685 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z'' t) : term1554 _144530 _144607 _144645 _144654 P p pat e q z'' _109008 t _109009 _109010.
Proof. exact (EQ_MP (@lem8209231 _144530 _144607 _144645 _144654 P p pat e q z'' _109008 t _109009 _109010) (@lem8209033 _144529 _144530 _144607 _144645 _144654 P _109008 _109009 _109010 p pat e q lt2 s z'' t h1)). Qed.
Lemma lem8209462 {_144529 _144530 _144607 P : Type'} (_109017 : _144530) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) : term832 _144529 _144530 _144607 P lt2 s a f g _109017.
Proof. exact (EQ_MP (@lem8208982 _144529 _144530 _144607 P lt2 s a f g _109017) (@lem8208981 _144529 _144530 _144607 P _109017 lt2 s a f g h1)). Qed.
Lemma lem8209472 {_144530 _144607 _144654 P : Type'} (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) (h1 : term839 _144530 _144607 _144654 P f y g a) : term839 _144530 _144607 _144654 P f y g a.
Proof. exact (h1). Qed.
Lemma lem8209768 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (z : type518 _144530 _144607 P) (s : P -> _144529) (_109018 : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term1528 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 z s _109018 y _109019 _109020) = (term1529 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 z s _109018 y _109019 _109020).
Proof. exact (@lem8183609 (term1489 _144530 _144607 _144645 P p pat e q _109018 _109020) (term1511 _144529 _144530 _144607 _144645 P p pat e q lt2 z _109018 _109019 s _109020) ((term835 _144530 _144607 _144654 P y _109018 _109020) = (term835 _144530 _144607 _144654 P y _109019 _109020))). Qed.
Lemma lem8209769 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (z : type518 _144530 _144607 P) (s : P -> _144529) (_109018 : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term1530 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 z s _109018 y _109019 _109020) = (term1531 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 z s _109018 y _109019 _109020).
Proof. exact (@lem8183609 (term1489 _144530 _144607 _144645 P p pat e q _109019 _109020) (term862 _144529 _144530 _144607 P lt2 z _109018 _109019 s _109020) ((term835 _144530 _144607 _144654 P y _109018 _109020) = (term835 _144530 _144607 _144654 P y _109019 _109020))). Qed.
Lemma lem8209773 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (z : type518 _144530 _144607 P) (s : P -> _144529) (_109018 : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term1531 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 z s _109018 y _109019 _109020) = (term1532 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 z s _109018 y _109019 _109020).
Proof. exact (@lem8183609 (term867 _144530 _144607 P p _109019 _109020) (term1488 _144530 _144607 _144645 P pat e q _109019 _109020) (term1533 _144529 _144530 _144607 _144654 P lt2 z s _109018 y _109019 _109020)). Qed.
Lemma lem8209780 {_144529 _144530 _144607 _144645 _144654 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (z : type518 _144530 _144607 P) (s : P -> _144529) (_109018 : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term1534 _144529 _144530 _144607 _144645 _144654 P pat e q lt2 z s _109018 y _109019 _109020) = (term1535 _144529 _144530 _144607 _144645 _144654 P pat e q lt2 z s _109018 y _109019 _109020).
Proof. exact (@lem8183609 (term1096 _144530 _144607 _144645 P pat e _109019 _109020) (term867 _144530 _144607 P q _109019 _109020) (term1533 _144529 _144530 _144607 _144654 P lt2 z s _109018 y _109019 _109020)). Qed.
Lemma lem8209781 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term868 _144530 _144607 P p _109019 _109020) = (term868 _144530 _144607 P p _109019 _109020).
Proof. exact (eq_refl (term868 _144530 _144607 P p _109019 _109020)). Qed.
Lemma lem8209784 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (z : type518 _144530 _144607 P) (s : P -> _144529) (_109018 : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term1532 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 z s _109018 y _109019 _109020) = (term1536 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 z s _109018 y _109019 _109020).
Proof. exact (MK_COMB (@lem8209781 _144530 _144607 P p _109019 _109020) (@lem8209780 _144529 _144530 _144607 _144645 _144654 P pat e q lt2 z s _109018 y _109019 _109020)). Qed.
Lemma lem8209786 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (z : type518 _144530 _144607 P) (s : P -> _144529) (_109018 : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term1531 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 z s _109018 y _109019 _109020) = (term1536 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 z s _109018 y _109019 _109020).
Proof. exact (TRANS (@lem8209773 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 z s _109018 y _109019 _109020) (@lem8209784 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 z s _109018 y _109019 _109020)). Qed.
Lemma lem8209787 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (z : type518 _144530 _144607 P) (s : P -> _144529) (_109018 : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term1530 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 z s _109018 y _109019 _109020) = (term1536 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 z s _109018 y _109019 _109020).
Proof. exact (TRANS (@lem8209769 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 z s _109018 y _109019 _109020) (@lem8209786 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 z s _109018 y _109019 _109020)). Qed.
Lemma lem8209788 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (_109018 : _144530 -> _144607) (_109020 : P) : (term1490 _144530 _144607 _144645 P p pat e q _109018 _109020) = (term1490 _144530 _144607 _144645 P p pat e q _109018 _109020).
Proof. exact (eq_refl (term1490 _144530 _144607 _144645 P p pat e q _109018 _109020)). Qed.
Lemma lem8209789 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (z : type518 _144530 _144607 P) (s : P -> _144529) (_109018 : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term1529 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 z s _109018 y _109019 _109020) = (term1537 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 z s _109018 y _109019 _109020).
Proof. exact (MK_COMB (@lem8209788 _144530 _144607 _144645 P p pat e q _109018 _109020) (@lem8209787 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 z s _109018 y _109019 _109020)). Qed.
Lemma lem8209790 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (z : type518 _144530 _144607 P) (s : P -> _144529) (_109018 : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term1537 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 z s _109018 y _109019 _109020) = (term1538 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 z s _109018 y _109019 _109020).
Proof. exact (@lem8183609 (term867 _144530 _144607 P p _109018 _109020) (term1488 _144530 _144607 _144645 P pat e q _109018 _109020) (term1536 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 z s _109018 y _109019 _109020)). Qed.
Lemma lem8209797 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (z : type518 _144530 _144607 P) (s : P -> _144529) (_109018 : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term1539 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 z s _109018 y _109019 _109020) = (term1540 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 z s _109018 y _109019 _109020).
Proof. exact (@lem8183609 (term1096 _144530 _144607 _144645 P pat e _109018 _109020) (term867 _144530 _144607 P q _109018 _109020) (term1536 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 z s _109018 y _109019 _109020)). Qed.
Lemma lem8209798 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (_109018 : _144530 -> _144607) (_109020 : P) : (term868 _144530 _144607 P p _109018 _109020) = (term868 _144530 _144607 P p _109018 _109020).
Proof. exact (eq_refl (term868 _144530 _144607 P p _109018 _109020)). Qed.
Lemma lem8209801 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (z : type518 _144530 _144607 P) (s : P -> _144529) (_109018 : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term1538 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 z s _109018 y _109019 _109020) = (term1541 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 z s _109018 y _109019 _109020).
Proof. exact (MK_COMB (@lem8209798 _144530 _144607 P p _109018 _109020) (@lem8209797 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 z s _109018 y _109019 _109020)). Qed.
Lemma lem8209802 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (z : type518 _144530 _144607 P) (s : P -> _144529) (_109018 : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term1537 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 z s _109018 y _109019 _109020) = (term1541 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 z s _109018 y _109019 _109020).
Proof. exact (TRANS (@lem8209790 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 z s _109018 y _109019 _109020) (@lem8209801 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 z s _109018 y _109019 _109020)). Qed.
Lemma lem8209803 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (z : type518 _144530 _144607 P) (s : P -> _144529) (_109018 : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term1529 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 z s _109018 y _109019 _109020) = (term1541 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 z s _109018 y _109019 _109020).
Proof. exact (TRANS (@lem8209789 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 z s _109018 y _109019 _109020) (@lem8209802 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 z s _109018 y _109019 _109020)). Qed.
Lemma lem8209805 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (z : type518 _144530 _144607 P) (s : P -> _144529) (_109018 : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term1528 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 z s _109018 y _109019 _109020) = (term1541 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 z s _109018 y _109019 _109020).
Proof. exact (TRANS (@lem8209768 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 z s _109018 y _109019 _109020) (@lem8209803 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 z s _109018 y _109019 _109020)). Qed.
Lemma lem8209806 {_144529 _144530 _144607 _144645 _144654 P : Type'} (_109018 : _144530 -> _144607) (_109019 : _144530 -> _144607) (_109020 : P) (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : type518 _144530 _144607 P) (y : type564 _144530 _144607 _144654 P) (h1 : term685 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z y) : term1541 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 z s _109018 y _109019 _109020.
Proof. exact (EQ_MP (@lem8209805 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 z s _109018 y _109019 _109020) (@lem8209056 _144529 _144530 _144607 _144645 _144654 P _109018 _109019 _109020 p pat e q lt2 s z y h1)). Qed.
Lemma lem8209810 {_144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (z : type518 _144530 _144607 P) (_109018 : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term1527 _144530 _144607 _144645 _144654 P p pat e q z _109018 y _109019 _109020) = (term1542 _144530 _144607 _144645 _144654 P p pat e q z _109018 y _109019 _109020).
Proof. exact (@lem8183609 (term1489 _144530 _144607 _144645 P p pat e q _109018 _109020) (term1512 _144530 _144607 _144645 P p pat e q z _109018 _109019 _109020) ((term835 _144530 _144607 _144654 P y _109018 _109020) = (term835 _144530 _144607 _144654 P y _109019 _109020))). Qed.
Lemma lem8209811 {_144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (z : type518 _144530 _144607 P) (_109018 : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term1543 _144530 _144607 _144645 _144654 P p pat e q z _109018 y _109019 _109020) = (term1544 _144530 _144607 _144645 _144654 P p pat e q z _109018 y _109019 _109020).
Proof. exact (@lem8183609 (term1489 _144530 _144607 _144645 P p pat e q _109019 _109020) (term855 _144530 _144607 P z _109018 _109019 _109020) ((term835 _144530 _144607 _144654 P y _109018 _109020) = (term835 _144530 _144607 _144654 P y _109019 _109020))). Qed.
Lemma lem8209815 {_144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (z : type518 _144530 _144607 P) (_109018 : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term1544 _144530 _144607 _144645 _144654 P p pat e q z _109018 y _109019 _109020) = (term1545 _144530 _144607 _144645 _144654 P p pat e q z _109018 y _109019 _109020).
Proof. exact (@lem8183609 (term867 _144530 _144607 P p _109019 _109020) (term1488 _144530 _144607 _144645 P pat e q _109019 _109020) (term1546 _144530 _144607 _144654 P z _109018 y _109019 _109020)). Qed.
Lemma lem8209822 {_144530 _144607 _144645 _144654 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (z : type518 _144530 _144607 P) (_109018 : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term1547 _144530 _144607 _144645 _144654 P pat e q z _109018 y _109019 _109020) = (term1548 _144530 _144607 _144645 _144654 P pat e q z _109018 y _109019 _109020).
Proof. exact (@lem8183609 (term1096 _144530 _144607 _144645 P pat e _109019 _109020) (term867 _144530 _144607 P q _109019 _109020) (term1546 _144530 _144607 _144654 P z _109018 y _109019 _109020)). Qed.
Lemma lem8209823 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term868 _144530 _144607 P p _109019 _109020) = (term868 _144530 _144607 P p _109019 _109020).
Proof. exact (eq_refl (term868 _144530 _144607 P p _109019 _109020)). Qed.
Lemma lem8209826 {_144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (z : type518 _144530 _144607 P) (_109018 : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term1545 _144530 _144607 _144645 _144654 P p pat e q z _109018 y _109019 _109020) = (term1549 _144530 _144607 _144645 _144654 P p pat e q z _109018 y _109019 _109020).
Proof. exact (MK_COMB (@lem8209823 _144530 _144607 P p _109019 _109020) (@lem8209822 _144530 _144607 _144645 _144654 P pat e q z _109018 y _109019 _109020)). Qed.
Lemma lem8209828 {_144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (z : type518 _144530 _144607 P) (_109018 : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term1544 _144530 _144607 _144645 _144654 P p pat e q z _109018 y _109019 _109020) = (term1549 _144530 _144607 _144645 _144654 P p pat e q z _109018 y _109019 _109020).
Proof. exact (TRANS (@lem8209815 _144530 _144607 _144645 _144654 P p pat e q z _109018 y _109019 _109020) (@lem8209826 _144530 _144607 _144645 _144654 P p pat e q z _109018 y _109019 _109020)). Qed.
Lemma lem8209829 {_144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (z : type518 _144530 _144607 P) (_109018 : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term1543 _144530 _144607 _144645 _144654 P p pat e q z _109018 y _109019 _109020) = (term1549 _144530 _144607 _144645 _144654 P p pat e q z _109018 y _109019 _109020).
Proof. exact (TRANS (@lem8209811 _144530 _144607 _144645 _144654 P p pat e q z _109018 y _109019 _109020) (@lem8209828 _144530 _144607 _144645 _144654 P p pat e q z _109018 y _109019 _109020)). Qed.
Lemma lem8209830 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (_109018 : _144530 -> _144607) (_109020 : P) : (term1490 _144530 _144607 _144645 P p pat e q _109018 _109020) = (term1490 _144530 _144607 _144645 P p pat e q _109018 _109020).
Proof. exact (eq_refl (term1490 _144530 _144607 _144645 P p pat e q _109018 _109020)). Qed.
Lemma lem8209831 {_144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (z : type518 _144530 _144607 P) (_109018 : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term1542 _144530 _144607 _144645 _144654 P p pat e q z _109018 y _109019 _109020) = (term1550 _144530 _144607 _144645 _144654 P p pat e q z _109018 y _109019 _109020).
Proof. exact (MK_COMB (@lem8209830 _144530 _144607 _144645 P p pat e q _109018 _109020) (@lem8209829 _144530 _144607 _144645 _144654 P p pat e q z _109018 y _109019 _109020)). Qed.
Lemma lem8209832 {_144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (z : type518 _144530 _144607 P) (_109018 : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term1550 _144530 _144607 _144645 _144654 P p pat e q z _109018 y _109019 _109020) = (term1551 _144530 _144607 _144645 _144654 P p pat e q z _109018 y _109019 _109020).
Proof. exact (@lem8183609 (term867 _144530 _144607 P p _109018 _109020) (term1488 _144530 _144607 _144645 P pat e q _109018 _109020) (term1549 _144530 _144607 _144645 _144654 P p pat e q z _109018 y _109019 _109020)). Qed.
Lemma lem8209839 {_144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (z : type518 _144530 _144607 P) (_109018 : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term1552 _144530 _144607 _144645 _144654 P p pat e q z _109018 y _109019 _109020) = (term1553 _144530 _144607 _144645 _144654 P p pat e q z _109018 y _109019 _109020).
Proof. exact (@lem8183609 (term1096 _144530 _144607 _144645 P pat e _109018 _109020) (term867 _144530 _144607 P q _109018 _109020) (term1549 _144530 _144607 _144645 _144654 P p pat e q z _109018 y _109019 _109020)). Qed.
Lemma lem8209840 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (_109018 : _144530 -> _144607) (_109020 : P) : (term868 _144530 _144607 P p _109018 _109020) = (term868 _144530 _144607 P p _109018 _109020).
Proof. exact (eq_refl (term868 _144530 _144607 P p _109018 _109020)). Qed.
Lemma lem8209843 {_144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (z : type518 _144530 _144607 P) (_109018 : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term1551 _144530 _144607 _144645 _144654 P p pat e q z _109018 y _109019 _109020) = (term1554 _144530 _144607 _144645 _144654 P p pat e q z _109018 y _109019 _109020).
Proof. exact (MK_COMB (@lem8209840 _144530 _144607 P p _109018 _109020) (@lem8209839 _144530 _144607 _144645 _144654 P p pat e q z _109018 y _109019 _109020)). Qed.
Lemma lem8209844 {_144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (z : type518 _144530 _144607 P) (_109018 : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term1550 _144530 _144607 _144645 _144654 P p pat e q z _109018 y _109019 _109020) = (term1554 _144530 _144607 _144645 _144654 P p pat e q z _109018 y _109019 _109020).
Proof. exact (TRANS (@lem8209832 _144530 _144607 _144645 _144654 P p pat e q z _109018 y _109019 _109020) (@lem8209843 _144530 _144607 _144645 _144654 P p pat e q z _109018 y _109019 _109020)). Qed.
Lemma lem8209845 {_144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (z : type518 _144530 _144607 P) (_109018 : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term1542 _144530 _144607 _144645 _144654 P p pat e q z _109018 y _109019 _109020) = (term1554 _144530 _144607 _144645 _144654 P p pat e q z _109018 y _109019 _109020).
Proof. exact (TRANS (@lem8209831 _144530 _144607 _144645 _144654 P p pat e q z _109018 y _109019 _109020) (@lem8209844 _144530 _144607 _144645 _144654 P p pat e q z _109018 y _109019 _109020)). Qed.
Lemma lem8209847 {_144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (z : type518 _144530 _144607 P) (_109018 : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term1527 _144530 _144607 _144645 _144654 P p pat e q z _109018 y _109019 _109020) = (term1554 _144530 _144607 _144645 _144654 P p pat e q z _109018 y _109019 _109020).
Proof. exact (TRANS (@lem8209810 _144530 _144607 _144645 _144654 P p pat e q z _109018 y _109019 _109020) (@lem8209845 _144530 _144607 _144645 _144654 P p pat e q z _109018 y _109019 _109020)). Qed.
Lemma lem8209848 {_144529 _144530 _144607 _144645 _144654 P : Type'} (_109018 : _144530 -> _144607) (_109019 : _144530 -> _144607) (_109020 : P) (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : type518 _144530 _144607 P) (y : type564 _144530 _144607 _144654 P) (h1 : term685 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z y) : term1554 _144530 _144607 _144645 _144654 P p pat e q z _109018 y _109019 _109020.
Proof. exact (EQ_MP (@lem8209847 _144530 _144607 _144645 _144654 P p pat e q z _109018 y _109019 _109020) (@lem8209055 _144529 _144530 _144607 _144645 _144654 P _109018 _109019 _109020 p pat e q lt2 s z y h1)). Qed.
Lemma lem8210091 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) (h1 : p f a) : term822 _144530 _144607 P p f a.
Proof. exact (EQ_MP (@lem8206408 _144530 _144607 P p f a) (@lem8206281 _144530 _144607 P p f a h1)). Qed.
Lemma lem8210092 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) (h1 : p f a) : term916 _144530 _144607 P p f a.
Proof. exact (fun h0 : term867 _144530 _144607 P p f a => @lem8210091 _144530 _144607 P p f a h1). Qed.
Lemma lem8210094 (p : Prop) : (term57 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8210095 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) : (term916 _144530 _144607 P p f a) = (term822 _144530 _144607 P p f a).
Proof. exact (@lem8210094 (term822 _144530 _144607 P p f a)). Qed.
Lemma lem8210096 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) (h1 : p f a) : term822 _144530 _144607 P p f a.
Proof. exact (EQ_MP (@lem8210095 _144530 _144607 P p f a) (@lem8210092 _144530 _144607 P p f a h1)). Qed.
Lemma lem8210098 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (a : P) (h1 : (pat f a) = (e f a)) : (term835 _144530 _144607 _144645 P pat f a) = (term835 _144530 _144607 _144645 P e f a).
Proof. exact (EQ_MP (@lem8206516 _144530 _144607 _144645 P pat e f a) (@lem8206356 _144530 _144607 _144645 P pat e f a h1)). Qed.
Lemma lem8210099 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (a : P) (h1 : (pat f a) = (e f a)) : term1174 _144530 _144607 _144645 P pat e f a.
Proof. exact (fun h0 : term1096 _144530 _144607 _144645 P pat e f a => @lem8210098 _144530 _144607 _144645 P pat e f a h1). Qed.
Lemma lem8210101 (p : Prop) : (term57 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8210102 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (a : P) : (term1174 _144530 _144607 _144645 P pat e f a) = ((term835 _144530 _144607 _144645 P pat f a) = (term835 _144530 _144607 _144645 P e f a)).
Proof. exact (@lem8210101 ((term835 _144530 _144607 _144645 P pat f a) = (term835 _144530 _144607 _144645 P e f a))). Qed.
Lemma lem8210103 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (a : P) (h1 : (pat f a) = (e f a)) : (term835 _144530 _144607 _144645 P pat f a) = (term835 _144530 _144607 _144645 P e f a).
Proof. exact (EQ_MP (@lem8210102 _144530 _144607 _144645 P pat e f a) (@lem8210099 _144530 _144607 _144645 P pat e f a h1)). Qed.
Lemma lem8210105 {_144530 _144607 P : Type'} (q : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) (h1 : q f a) : term822 _144530 _144607 P q f a.
Proof. exact (EQ_MP (@lem8206572 _144530 _144607 P q f a) (@lem8206368 _144530 _144607 P q f a h1)). Qed.
Lemma lem8210106 {_144530 _144607 P : Type'} (q : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) (h1 : q f a) : term916 _144530 _144607 P q f a.
Proof. exact (fun h0 : term867 _144530 _144607 P q f a => @lem8210105 _144530 _144607 P q f a h1). Qed.
Lemma lem8210108 (p : Prop) : (term57 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8210109 {_144530 _144607 P : Type'} (q : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) : (term916 _144530 _144607 P q f a) = (term822 _144530 _144607 P q f a).
Proof. exact (@lem8210108 (term822 _144530 _144607 P q f a)). Qed.
Lemma lem8210110 {_144530 _144607 P : Type'} (q : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) (h1 : q f a) : term822 _144530 _144607 P q f a.
Proof. exact (EQ_MP (@lem8210109 _144530 _144607 P q f a) (@lem8210106 _144530 _144607 P q f a h1)). Qed.
Lemma lem8210112 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : p g a) : term822 _144530 _144607 P p g a.
Proof. exact (EQ_MP (@lem8206426 _144530 _144607 P p g a) (@lem8206287 _144530 _144607 P p g a h1)). Qed.
Lemma lem8210113 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : p g a) : term916 _144530 _144607 P p g a.
Proof. exact (fun h0 : term867 _144530 _144607 P p g a => @lem8210112 _144530 _144607 P p g a h1). Qed.
Lemma lem8210115 (p : Prop) : (term57 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8210116 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term916 _144530 _144607 P p g a) = (term822 _144530 _144607 P p g a).
Proof. exact (@lem8210115 (term822 _144530 _144607 P p g a)). Qed.
Lemma lem8210117 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : p g a) : term822 _144530 _144607 P p g a.
Proof. exact (EQ_MP (@lem8210116 _144530 _144607 P p g a) (@lem8210113 _144530 _144607 P p g a h1)). Qed.
Lemma lem8210119 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) (h1 : (pat g a) = (e g a)) : (term835 _144530 _144607 _144645 P pat g a) = (term835 _144530 _144607 _144645 P e g a).
Proof. exact (EQ_MP (@lem8206554 _144530 _144607 _144645 P pat e g a) (@lem8206362 _144530 _144607 _144645 P pat e g a h1)). Qed.
Lemma lem8210120 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) (h1 : (pat g a) = (e g a)) : term1174 _144530 _144607 _144645 P pat e g a.
Proof. exact (fun h0 : term1096 _144530 _144607 _144645 P pat e g a => @lem8210119 _144530 _144607 _144645 P pat e g a h1). Qed.
Lemma lem8210122 (p : Prop) : (term57 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8210123 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term1174 _144530 _144607 _144645 P pat e g a) = ((term835 _144530 _144607 _144645 P pat g a) = (term835 _144530 _144607 _144645 P e g a)).
Proof. exact (@lem8210122 ((term835 _144530 _144607 _144645 P pat g a) = (term835 _144530 _144607 _144645 P e g a))). Qed.
Lemma lem8210124 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) (h1 : (pat g a) = (e g a)) : (term835 _144530 _144607 _144645 P pat g a) = (term835 _144530 _144607 _144645 P e g a).
Proof. exact (EQ_MP (@lem8210123 _144530 _144607 _144645 P pat e g a) (@lem8210120 _144530 _144607 _144645 P pat e g a h1)). Qed.
Lemma lem8210126 {_144530 _144607 P : Type'} (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : q g a) : term822 _144530 _144607 P q g a.
Proof. exact (EQ_MP (@lem8206590 _144530 _144607 P q g a) (@lem8206374 _144530 _144607 P q g a h1)). Qed.
Lemma lem8210127 {_144530 _144607 P : Type'} (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : q g a) : term916 _144530 _144607 P q g a.
Proof. exact (fun h0 : term867 _144530 _144607 P q g a => @lem8210126 _144530 _144607 P q g a h1). Qed.
Lemma lem8210129 (p : Prop) : (term57 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8210130 {_144530 _144607 P : Type'} (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term916 _144530 _144607 P q g a) = (term822 _144530 _144607 P q g a).
Proof. exact (@lem8210129 (term822 _144530 _144607 P q g a)). Qed.
Lemma lem8210131 {_144530 _144607 P : Type'} (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : q g a) : term822 _144530 _144607 P q g a.
Proof. exact (EQ_MP (@lem8210130 _144530 _144607 P q g a) (@lem8210127 _144530 _144607 P q g a h1)). Qed.
Lemma lem8210133 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) (h1 : p f a) : term822 _144530 _144607 P p f a.
Proof. exact (EQ_MP (@lem8206408 _144530 _144607 P p f a) (@lem8206281 _144530 _144607 P p f a h1)). Qed.
Lemma lem8210134 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) (h1 : p f a) : term916 _144530 _144607 P p f a.
Proof. exact (fun h0 : term867 _144530 _144607 P p f a => @lem8210133 _144530 _144607 P p f a h1). Qed.
Lemma lem8210136 (p : Prop) : (term57 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8210137 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) : (term916 _144530 _144607 P p f a) = (term822 _144530 _144607 P p f a).
Proof. exact (@lem8210136 (term822 _144530 _144607 P p f a)). Qed.
Lemma lem8210138 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) (h1 : p f a) : term822 _144530 _144607 P p f a.
Proof. exact (EQ_MP (@lem8210137 _144530 _144607 P p f a) (@lem8210134 _144530 _144607 P p f a h1)). Qed.
Lemma lem8210140 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (a : P) (h1 : (pat f a) = (e f a)) : (term835 _144530 _144607 _144645 P pat f a) = (term835 _144530 _144607 _144645 P e f a).
Proof. exact (EQ_MP (@lem8206516 _144530 _144607 _144645 P pat e f a) (@lem8206356 _144530 _144607 _144645 P pat e f a h1)). Qed.
Lemma lem8210141 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (a : P) (h1 : (pat f a) = (e f a)) : term1174 _144530 _144607 _144645 P pat e f a.
Proof. exact (fun h0 : term1096 _144530 _144607 _144645 P pat e f a => @lem8210140 _144530 _144607 _144645 P pat e f a h1). Qed.
Lemma lem8210143 (p : Prop) : (term57 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8210144 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (a : P) : (term1174 _144530 _144607 _144645 P pat e f a) = ((term835 _144530 _144607 _144645 P pat f a) = (term835 _144530 _144607 _144645 P e f a)).
Proof. exact (@lem8210143 ((term835 _144530 _144607 _144645 P pat f a) = (term835 _144530 _144607 _144645 P e f a))). Qed.
Lemma lem8210145 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (a : P) (h1 : (pat f a) = (e f a)) : (term835 _144530 _144607 _144645 P pat f a) = (term835 _144530 _144607 _144645 P e f a).
Proof. exact (EQ_MP (@lem8210144 _144530 _144607 _144645 P pat e f a) (@lem8210141 _144530 _144607 _144645 P pat e f a h1)). Qed.
Lemma lem8210147 {_144530 _144607 P : Type'} (q : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) (h1 : q f a) : term822 _144530 _144607 P q f a.
Proof. exact (EQ_MP (@lem8206572 _144530 _144607 P q f a) (@lem8206368 _144530 _144607 P q f a h1)). Qed.
Lemma lem8210148 {_144530 _144607 P : Type'} (q : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) (h1 : q f a) : term916 _144530 _144607 P q f a.
Proof. exact (fun h0 : term867 _144530 _144607 P q f a => @lem8210147 _144530 _144607 P q f a h1). Qed.
Lemma lem8210150 (p : Prop) : (term57 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8210151 {_144530 _144607 P : Type'} (q : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) : (term916 _144530 _144607 P q f a) = (term822 _144530 _144607 P q f a).
Proof. exact (@lem8210150 (term822 _144530 _144607 P q f a)). Qed.
Lemma lem8210152 {_144530 _144607 P : Type'} (q : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) (h1 : q f a) : term822 _144530 _144607 P q f a.
Proof. exact (EQ_MP (@lem8210151 _144530 _144607 P q f a) (@lem8210148 _144530 _144607 P q f a h1)). Qed.
Lemma lem8210154 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : p g a) : term822 _144530 _144607 P p g a.
Proof. exact (EQ_MP (@lem8206426 _144530 _144607 P p g a) (@lem8206287 _144530 _144607 P p g a h1)). Qed.
Lemma lem8210155 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : p g a) : term916 _144530 _144607 P p g a.
Proof. exact (fun h0 : term867 _144530 _144607 P p g a => @lem8210154 _144530 _144607 P p g a h1). Qed.
Lemma lem8210157 (p : Prop) : (term57 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8210158 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term916 _144530 _144607 P p g a) = (term822 _144530 _144607 P p g a).
Proof. exact (@lem8210157 (term822 _144530 _144607 P p g a)). Qed.
Lemma lem8210159 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : p g a) : term822 _144530 _144607 P p g a.
Proof. exact (EQ_MP (@lem8210158 _144530 _144607 P p g a) (@lem8210155 _144530 _144607 P p g a h1)). Qed.
Lemma lem8210161 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) (h1 : (pat g a) = (e g a)) : (term835 _144530 _144607 _144645 P pat g a) = (term835 _144530 _144607 _144645 P e g a).
Proof. exact (EQ_MP (@lem8206554 _144530 _144607 _144645 P pat e g a) (@lem8206362 _144530 _144607 _144645 P pat e g a h1)). Qed.
Lemma lem8210162 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) (h1 : (pat g a) = (e g a)) : term1174 _144530 _144607 _144645 P pat e g a.
Proof. exact (fun h0 : term1096 _144530 _144607 _144645 P pat e g a => @lem8210161 _144530 _144607 _144645 P pat e g a h1). Qed.
Lemma lem8210164 (p : Prop) : (term57 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8210165 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term1174 _144530 _144607 _144645 P pat e g a) = ((term835 _144530 _144607 _144645 P pat g a) = (term835 _144530 _144607 _144645 P e g a)).
Proof. exact (@lem8210164 ((term835 _144530 _144607 _144645 P pat g a) = (term835 _144530 _144607 _144645 P e g a))). Qed.
Lemma lem8210166 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) (h1 : (pat g a) = (e g a)) : (term835 _144530 _144607 _144645 P pat g a) = (term835 _144530 _144607 _144645 P e g a).
Proof. exact (EQ_MP (@lem8210165 _144530 _144607 _144645 P pat e g a) (@lem8210162 _144530 _144607 _144645 P pat e g a h1)). Qed.
Lemma lem8210168 {_144530 _144607 P : Type'} (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : q g a) : term822 _144530 _144607 P q g a.
Proof. exact (EQ_MP (@lem8206590 _144530 _144607 P q g a) (@lem8206374 _144530 _144607 P q g a h1)). Qed.
Lemma lem8210169 {_144530 _144607 P : Type'} (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : q g a) : term916 _144530 _144607 P q g a.
Proof. exact (fun h0 : term867 _144530 _144607 P q g a => @lem8210168 _144530 _144607 P q g a h1). Qed.
Lemma lem8210171 (p : Prop) : (term57 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8210172 {_144530 _144607 P : Type'} (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term916 _144530 _144607 P q g a) = (term822 _144530 _144607 P q g a).
Proof. exact (@lem8210171 (term822 _144530 _144607 P q g a)). Qed.
Lemma lem8210173 {_144530 _144607 P : Type'} (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : q g a) : term822 _144530 _144607 P q g a.
Proof. exact (EQ_MP (@lem8210172 _144530 _144607 P q g a) (@lem8210169 _144530 _144607 P q g a h1)). Qed.
Lemma lem8210176 {_144530 _144607 _144654 P : Type'} (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) (h1 : term839 _144530 _144607 _144654 P f t g a) : term839 _144530 _144607 _144654 P f t g a.
Proof. exact (h1). Qed.
Lemma lem8210177 {_144530 _144607 _144654 P : Type'} (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) (h1 : term839 _144530 _144607 _144654 P f t g a) : term917 _144530 _144607 _144654 P f t g a.
Proof. exact (fun h0 : (term835 _144530 _144607 _144654 P t f a) = (term835 _144530 _144607 _144654 P t g a) => @lem8210176 _144530 _144607 _144654 P f t g a h1). Qed.
Lemma lem8210179 (p : Prop) : (term918 p) = (~ p).
Proof. exact (EQ_MP (@lem21028 p) (@lem21107 p)). Qed.
Lemma lem8210180 {_144530 _144607 _144654 P : Type'} (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (term917 _144530 _144607 _144654 P f t g a) = (term839 _144530 _144607 _144654 P f t g a).
Proof. exact (@lem8210179 ((term835 _144530 _144607 _144654 P t f a) = (term835 _144530 _144607 _144654 P t g a))). Qed.
Lemma lem8210181 {_144530 _144607 _144654 P : Type'} (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) (h1 : term839 _144530 _144607 _144654 P f t g a) : term839 _144530 _144607 _144654 P f t g a.
Proof. exact (EQ_MP (@lem8210180 _144530 _144607 _144654 P f t g a) (@lem8210177 _144530 _144607 _144654 P f t g a h1)). Qed.
Lemma lem8210187 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8210188 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (z'' : type518 _144530 _144607 P) (s : P -> _144529) (_109008 : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term1541 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 z'' s _109008 t _109009 _109010) = (term1555 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 z'' s _109008 t _109009 _109010).
Proof. exact (@lem8210187 (term1096 _144530 _144607 _144645 P pat e _109008 _109010) (term867 _144530 _144607 P p _109008 _109010) (term1556 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 z'' s _109008 t _109009 _109010)). Qed.
Lemma lem8210214 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8210215 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (z'' : type518 _144530 _144607 P) (s : P -> _144529) (_109008 : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term1556 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 z'' s _109008 t _109009 _109010) = (term1557 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 z'' s _109008 t _109009 _109010).
Proof. exact (@lem8210214 (term867 _144530 _144607 P p _109009 _109010) (term867 _144530 _144607 P q _109008 _109010) (term1535 _144529 _144530 _144607 _144645 _144654 P pat e q lt2 z'' s _109008 t _109009 _109010)). Qed.
Lemma lem8210229 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8210230 {_144529 _144530 _144607 _144645 _144654 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (z'' : type518 _144530 _144607 P) (s : P -> _144529) (_109008 : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term1558 _144529 _144530 _144607 _144645 _144654 P pat e q lt2 z'' s _109008 t _109009 _109010) = (term1559 _144529 _144530 _144607 _144645 _144654 P pat e q lt2 z'' s _109008 t _109009 _109010).
Proof. exact (@lem8210229 (term1096 _144530 _144607 _144645 P pat e _109009 _109010) (term867 _144530 _144607 P q _109008 _109010) (term910 _144529 _144530 _144607 _144654 P q lt2 z'' s _109008 t _109009 _109010)). Qed.
Lemma lem8210256 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8210257 {_144529 _144530 _144607 _144654 P : Type'} (lt2 : type1470 _144529 _144530) (z'' : type518 _144530 _144607 P) (s : P -> _144529) (q : type560 _144530 _144607 P) (_109008 : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term910 _144529 _144530 _144607 _144654 P q lt2 z'' s _109008 t _109009 _109010) = (term919 _144529 _144530 _144607 _144654 P lt2 z'' s q _109008 t _109009 _109010).
Proof. exact (@lem8210256 (term862 _144529 _144530 _144607 P lt2 z'' _109008 _109009 s _109010) (term867 _144530 _144607 P q _109009 _109010) ((term835 _144530 _144607 _144654 P t _109008 _109010) = (term835 _144530 _144607 _144654 P t _109009 _109010))). Qed.
Lemma lem8210271 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem8210272 {_144530 _144607 _144654 P : Type'} (_109008 : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (q : type560 _144530 _144607 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term920 _144530 _144607 _144654 P q _109008 t _109009 _109010) = (term921 _144530 _144607 _144654 P _109008 t q _109009 _109010).
Proof. exact (@lem8210271 ((term835 _144530 _144607 _144654 P t _109008 _109010) = (term835 _144530 _144607 _144654 P t _109009 _109010)) (term867 _144530 _144607 P q _109009 _109010)). Qed.
Lemma lem8210280 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (z'' : type518 _144530 _144607 P) (_109008 : _144530 -> _144607) (_109009 : _144530 -> _144607) (s : P -> _144529) (_109010 : P) : (term922 _144529 _144530 _144607 P lt2 z'' _109008 _109009 s _109010) = (term922 _144529 _144530 _144607 P lt2 z'' _109008 _109009 s _109010).
Proof. exact (eq_refl (term922 _144529 _144530 _144607 P lt2 z'' _109008 _109009 s _109010)). Qed.
Lemma lem8210281 {_144529 _144530 _144607 _144654 P : Type'} (lt2 : type1470 _144529 _144530) (z'' : type518 _144530 _144607 P) (s : P -> _144529) (_109008 : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (q : type560 _144530 _144607 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term919 _144529 _144530 _144607 _144654 P lt2 z'' s q _109008 t _109009 _109010) = (term923 _144529 _144530 _144607 _144654 P lt2 z'' s _109008 t q _109009 _109010).
Proof. exact (MK_COMB (@lem8210280 _144529 _144530 _144607 P lt2 z'' _109008 _109009 s _109010) (@lem8210272 _144530 _144607 _144654 P _109008 t q _109009 _109010)). Qed.
Lemma lem8210285 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8210286 {_144529 _144530 _144607 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (lt2 : type1470 _144529 _144530) (z'' : type518 _144530 _144607 P) (_109008 : _144530 -> _144607) (s : P -> _144529) (q : type560 _144530 _144607 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term923 _144529 _144530 _144607 _144654 P lt2 z'' s _109008 t q _109009 _109010) = (term924 _144529 _144530 _144607 _144654 P t lt2 z'' _109008 s q _109009 _109010).
Proof. exact (@lem8210285 ((term835 _144530 _144607 _144654 P t _109008 _109010) = (term835 _144530 _144607 _144654 P t _109009 _109010)) (term862 _144529 _144530 _144607 P lt2 z'' _109008 _109009 s _109010) (term867 _144530 _144607 P q _109009 _109010)). Qed.
Lemma lem8210304 {_144529 _144530 _144607 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (lt2 : type1470 _144529 _144530) (z'' : type518 _144530 _144607 P) (_109008 : _144530 -> _144607) (s : P -> _144529) (q : type560 _144530 _144607 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term919 _144529 _144530 _144607 _144654 P lt2 z'' s q _109008 t _109009 _109010) = (term924 _144529 _144530 _144607 _144654 P t lt2 z'' _109008 s q _109009 _109010).
Proof. exact (TRANS (@lem8210281 _144529 _144530 _144607 _144654 P lt2 z'' s _109008 t q _109009 _109010) (@lem8210286 _144529 _144530 _144607 _144654 P t lt2 z'' _109008 s q _109009 _109010)). Qed.
Lemma lem8210305 {_144529 _144530 _144607 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (lt2 : type1470 _144529 _144530) (z'' : type518 _144530 _144607 P) (_109008 : _144530 -> _144607) (s : P -> _144529) (q : type560 _144530 _144607 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term910 _144529 _144530 _144607 _144654 P q lt2 z'' s _109008 t _109009 _109010) = (term924 _144529 _144530 _144607 _144654 P t lt2 z'' _109008 s q _109009 _109010).
Proof. exact (TRANS (@lem8210257 _144529 _144530 _144607 _144654 P lt2 z'' s q _109008 t _109009 _109010) (@lem8210304 _144529 _144530 _144607 _144654 P t lt2 z'' _109008 s q _109009 _109010)). Qed.
Lemma lem8210306 {_144530 _144607 P : Type'} (q : type560 _144530 _144607 P) (_109008 : _144530 -> _144607) (_109010 : P) : (term868 _144530 _144607 P q _109008 _109010) = (term868 _144530 _144607 P q _109008 _109010).
Proof. exact (eq_refl (term868 _144530 _144607 P q _109008 _109010)). Qed.
Lemma lem8210307 {_144529 _144530 _144607 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (lt2 : type1470 _144529 _144530) (z'' : type518 _144530 _144607 P) (_109008 : _144530 -> _144607) (s : P -> _144529) (q : type560 _144530 _144607 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term911 _144529 _144530 _144607 _144654 P q lt2 z'' s _109008 t _109009 _109010) = (term925 _144529 _144530 _144607 _144654 P t lt2 z'' _109008 s q _109009 _109010).
Proof. exact (MK_COMB (@lem8210306 _144530 _144607 P q _109008 _109010) (@lem8210305 _144529 _144530 _144607 _144654 P t lt2 z'' _109008 s q _109009 _109010)). Qed.
Lemma lem8210311 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8210312 {_144529 _144530 _144607 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (lt2 : type1470 _144529 _144530) (z'' : type518 _144530 _144607 P) (_109008 : _144530 -> _144607) (s : P -> _144529) (q : type560 _144530 _144607 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term925 _144529 _144530 _144607 _144654 P t lt2 z'' _109008 s q _109009 _109010) = (term926 _144529 _144530 _144607 _144654 P t lt2 z'' _109008 s q _109009 _109010).
Proof. exact (@lem8210311 ((term835 _144530 _144607 _144654 P t _109008 _109010) = (term835 _144530 _144607 _144654 P t _109009 _109010)) (term867 _144530 _144607 P q _109008 _109010) (term927 _144529 _144530 _144607 P lt2 z'' _109008 s q _109009 _109010)). Qed.
Lemma lem8210328 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8210329 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (z'' : type518 _144530 _144607 P) (s : P -> _144529) (_109008 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term928 _144529 _144530 _144607 P lt2 z'' _109008 s q _109009 _109010) = (term929 _144529 _144530 _144607 P lt2 z'' s _109008 q _109009 _109010).
Proof. exact (@lem8210328 (term862 _144529 _144530 _144607 P lt2 z'' _109008 _109009 s _109010) (term867 _144530 _144607 P q _109008 _109010) (term867 _144530 _144607 P q _109009 _109010)). Qed.
Lemma lem8210345 {_144530 _144607 _144654 P : Type'} (_109008 : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term930 _144530 _144607 _144654 P _109008 t _109009 _109010) = (term930 _144530 _144607 _144654 P _109008 t _109009 _109010).
Proof. exact (eq_refl (term930 _144530 _144607 _144654 P _109008 t _109009 _109010)). Qed.
Lemma lem8210346 {_144529 _144530 _144607 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (lt2 : type1470 _144529 _144530) (z'' : type518 _144530 _144607 P) (s : P -> _144529) (_109008 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term926 _144529 _144530 _144607 _144654 P t lt2 z'' _109008 s q _109009 _109010) = (term931 _144529 _144530 _144607 _144654 P t lt2 z'' s _109008 q _109009 _109010).
Proof. exact (MK_COMB (@lem8210345 _144530 _144607 _144654 P _109008 t _109009 _109010) (@lem8210329 _144529 _144530 _144607 P lt2 z'' s _109008 q _109009 _109010)). Qed.
Lemma lem8210357 {_144529 _144530 _144607 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (lt2 : type1470 _144529 _144530) (z'' : type518 _144530 _144607 P) (s : P -> _144529) (_109008 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term925 _144529 _144530 _144607 _144654 P t lt2 z'' _109008 s q _109009 _109010) = (term931 _144529 _144530 _144607 _144654 P t lt2 z'' s _109008 q _109009 _109010).
Proof. exact (TRANS (@lem8210312 _144529 _144530 _144607 _144654 P t lt2 z'' _109008 s q _109009 _109010) (@lem8210346 _144529 _144530 _144607 _144654 P t lt2 z'' s _109008 q _109009 _109010)). Qed.
Lemma lem8210358 {_144529 _144530 _144607 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (lt2 : type1470 _144529 _144530) (z'' : type518 _144530 _144607 P) (s : P -> _144529) (_109008 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term911 _144529 _144530 _144607 _144654 P q lt2 z'' s _109008 t _109009 _109010) = (term931 _144529 _144530 _144607 _144654 P t lt2 z'' s _109008 q _109009 _109010).
Proof. exact (TRANS (@lem8210307 _144529 _144530 _144607 _144654 P t lt2 z'' _109008 s q _109009 _109010) (@lem8210357 _144529 _144530 _144607 _144654 P t lt2 z'' s _109008 q _109009 _109010)). Qed.
Lemma lem8210359 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term1184 _144530 _144607 _144645 P pat e _109009 _109010) = (term1184 _144530 _144607 _144645 P pat e _109009 _109010).
Proof. exact (eq_refl (term1184 _144530 _144607 _144645 P pat e _109009 _109010)). Qed.
Lemma lem8210360 {_144529 _144530 _144607 _144645 _144654 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (t : type564 _144530 _144607 _144654 P) (lt2 : type1470 _144529 _144530) (z'' : type518 _144530 _144607 P) (s : P -> _144529) (_109008 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term1559 _144529 _144530 _144607 _144645 _144654 P pat e q lt2 z'' s _109008 t _109009 _109010) = (term1560 _144529 _144530 _144607 _144645 _144654 P pat e t lt2 z'' s _109008 q _109009 _109010).
Proof. exact (MK_COMB (@lem8210359 _144530 _144607 _144645 P pat e _109009 _109010) (@lem8210358 _144529 _144530 _144607 _144654 P t lt2 z'' s _109008 q _109009 _109010)). Qed.
Lemma lem8210364 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8210365 {_144529 _144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (z'' : type518 _144530 _144607 P) (s : P -> _144529) (_109008 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term1560 _144529 _144530 _144607 _144645 _144654 P pat e t lt2 z'' s _109008 q _109009 _109010) = (term1561 _144529 _144530 _144607 _144645 _144654 P t pat e lt2 z'' s _109008 q _109009 _109010).
Proof. exact (@lem8210364 ((term835 _144530 _144607 _144654 P t _109008 _109010) = (term835 _144530 _144607 _144654 P t _109009 _109010)) (term1096 _144530 _144607 _144645 P pat e _109009 _109010) (term929 _144529 _144530 _144607 P lt2 z'' s _109008 q _109009 _109010)). Qed.
Lemma lem8210381 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8210382 {_144529 _144530 _144607 _144645 P : Type'} (lt2 : type1470 _144529 _144530) (z'' : type518 _144530 _144607 P) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (_109008 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term1562 _144529 _144530 _144607 _144645 P pat e lt2 z'' s _109008 q _109009 _109010) = (term1563 _144529 _144530 _144607 _144645 P lt2 z'' s pat e _109008 q _109009 _109010).
Proof. exact (@lem8210381 (term862 _144529 _144530 _144607 P lt2 z'' _109008 _109009 s _109010) (term1096 _144530 _144607 _144645 P pat e _109009 _109010) (term939 _144530 _144607 P _109008 q _109009 _109010)). Qed.
Lemma lem8210410 {_144530 _144607 _144654 P : Type'} (_109008 : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term930 _144530 _144607 _144654 P _109008 t _109009 _109010) = (term930 _144530 _144607 _144654 P _109008 t _109009 _109010).
Proof. exact (eq_refl (term930 _144530 _144607 _144654 P _109008 t _109009 _109010)). Qed.
Lemma lem8210411 {_144529 _144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (lt2 : type1470 _144529 _144530) (z'' : type518 _144530 _144607 P) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (_109008 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term1561 _144529 _144530 _144607 _144645 _144654 P t pat e lt2 z'' s _109008 q _109009 _109010) = (term1564 _144529 _144530 _144607 _144645 _144654 P t lt2 z'' s pat e _109008 q _109009 _109010).
Proof. exact (MK_COMB (@lem8210410 _144530 _144607 _144654 P _109008 t _109009 _109010) (@lem8210382 _144529 _144530 _144607 _144645 P lt2 z'' s pat e _109008 q _109009 _109010)). Qed.
Lemma lem8210422 {_144529 _144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (lt2 : type1470 _144529 _144530) (z'' : type518 _144530 _144607 P) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (_109008 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term1560 _144529 _144530 _144607 _144645 _144654 P pat e t lt2 z'' s _109008 q _109009 _109010) = (term1564 _144529 _144530 _144607 _144645 _144654 P t lt2 z'' s pat e _109008 q _109009 _109010).
Proof. exact (TRANS (@lem8210365 _144529 _144530 _144607 _144645 _144654 P t pat e lt2 z'' s _109008 q _109009 _109010) (@lem8210411 _144529 _144530 _144607 _144645 _144654 P t lt2 z'' s pat e _109008 q _109009 _109010)). Qed.
Lemma lem8210423 {_144529 _144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (lt2 : type1470 _144529 _144530) (z'' : type518 _144530 _144607 P) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (_109008 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term1559 _144529 _144530 _144607 _144645 _144654 P pat e q lt2 z'' s _109008 t _109009 _109010) = (term1564 _144529 _144530 _144607 _144645 _144654 P t lt2 z'' s pat e _109008 q _109009 _109010).
Proof. exact (TRANS (@lem8210360 _144529 _144530 _144607 _144645 _144654 P pat e t lt2 z'' s _109008 q _109009 _109010) (@lem8210422 _144529 _144530 _144607 _144645 _144654 P t lt2 z'' s pat e _109008 q _109009 _109010)). Qed.
Lemma lem8210424 {_144529 _144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (lt2 : type1470 _144529 _144530) (z'' : type518 _144530 _144607 P) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (_109008 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term1558 _144529 _144530 _144607 _144645 _144654 P pat e q lt2 z'' s _109008 t _109009 _109010) = (term1564 _144529 _144530 _144607 _144645 _144654 P t lt2 z'' s pat e _109008 q _109009 _109010).
Proof. exact (TRANS (@lem8210230 _144529 _144530 _144607 _144645 _144654 P pat e q lt2 z'' s _109008 t _109009 _109010) (@lem8210423 _144529 _144530 _144607 _144645 _144654 P t lt2 z'' s pat e _109008 q _109009 _109010)). Qed.
Lemma lem8210425 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term868 _144530 _144607 P p _109009 _109010) = (term868 _144530 _144607 P p _109009 _109010).
Proof. exact (eq_refl (term868 _144530 _144607 P p _109009 _109010)). Qed.
Lemma lem8210426 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) (lt2 : type1470 _144529 _144530) (z'' : type518 _144530 _144607 P) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (_109008 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term1557 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 z'' s _109008 t _109009 _109010) = (term1565 _144529 _144530 _144607 _144645 _144654 P p t lt2 z'' s pat e _109008 q _109009 _109010).
Proof. exact (MK_COMB (@lem8210425 _144530 _144607 P p _109009 _109010) (@lem8210424 _144529 _144530 _144607 _144645 _144654 P t lt2 z'' s pat e _109008 q _109009 _109010)). Qed.
Lemma lem8210430 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8210431 {_144529 _144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (z'' : type518 _144530 _144607 P) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (_109008 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term1565 _144529 _144530 _144607 _144645 _144654 P p t lt2 z'' s pat e _109008 q _109009 _109010) = (term1566 _144529 _144530 _144607 _144645 _144654 P t p lt2 z'' s pat e _109008 q _109009 _109010).
Proof. exact (@lem8210430 ((term835 _144530 _144607 _144654 P t _109008 _109010) = (term835 _144530 _144607 _144654 P t _109009 _109010)) (term867 _144530 _144607 P p _109009 _109010) (term1563 _144529 _144530 _144607 _144645 P lt2 z'' s pat e _109008 q _109009 _109010)). Qed.
Lemma lem8210447 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8210448 {_144529 _144530 _144607 _144645 P : Type'} (lt2 : type1470 _144529 _144530) (z'' : type518 _144530 _144607 P) (s : P -> _144529) (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (_109008 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term1567 _144529 _144530 _144607 _144645 P p lt2 z'' s pat e _109008 q _109009 _109010) = (term1568 _144529 _144530 _144607 _144645 P lt2 z'' s p pat e _109008 q _109009 _109010).
Proof. exact (@lem8210447 (term862 _144529 _144530 _144607 P lt2 z'' _109008 _109009 s _109010) (term867 _144530 _144607 P p _109009 _109010) (term1569 _144530 _144607 _144645 P pat e _109008 q _109009 _109010)). Qed.
Lemma lem8210462 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8210463 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_109008 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term1570 _144530 _144607 _144645 P p pat e _109008 q _109009 _109010) = (term1571 _144530 _144607 _144645 P pat e p _109008 q _109009 _109010).
Proof. exact (@lem8210462 (term1096 _144530 _144607 _144645 P pat e _109009 _109010) (term867 _144530 _144607 P p _109009 _109010) (term939 _144530 _144607 P _109008 q _109009 _109010)). Qed.
Lemma lem8210491 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (z'' : type518 _144530 _144607 P) (_109008 : _144530 -> _144607) (_109009 : _144530 -> _144607) (s : P -> _144529) (_109010 : P) : (term922 _144529 _144530 _144607 P lt2 z'' _109008 _109009 s _109010) = (term922 _144529 _144530 _144607 P lt2 z'' _109008 _109009 s _109010).
Proof. exact (eq_refl (term922 _144529 _144530 _144607 P lt2 z'' _109008 _109009 s _109010)). Qed.
Lemma lem8210492 {_144529 _144530 _144607 _144645 P : Type'} (lt2 : type1470 _144529 _144530) (z'' : type518 _144530 _144607 P) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_109008 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term1568 _144529 _144530 _144607 _144645 P lt2 z'' s p pat e _109008 q _109009 _109010) = (term1572 _144529 _144530 _144607 _144645 P lt2 z'' s pat e p _109008 q _109009 _109010).
Proof. exact (MK_COMB (@lem8210491 _144529 _144530 _144607 P lt2 z'' _109008 _109009 s _109010) (@lem8210463 _144530 _144607 _144645 P pat e p _109008 q _109009 _109010)). Qed.
Lemma lem8210503 {_144529 _144530 _144607 _144645 P : Type'} (lt2 : type1470 _144529 _144530) (z'' : type518 _144530 _144607 P) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_109008 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term1567 _144529 _144530 _144607 _144645 P p lt2 z'' s pat e _109008 q _109009 _109010) = (term1572 _144529 _144530 _144607 _144645 P lt2 z'' s pat e p _109008 q _109009 _109010).
Proof. exact (TRANS (@lem8210448 _144529 _144530 _144607 _144645 P lt2 z'' s p pat e _109008 q _109009 _109010) (@lem8210492 _144529 _144530 _144607 _144645 P lt2 z'' s pat e p _109008 q _109009 _109010)). Qed.
Lemma lem8210504 {_144530 _144607 _144654 P : Type'} (_109008 : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term930 _144530 _144607 _144654 P _109008 t _109009 _109010) = (term930 _144530 _144607 _144654 P _109008 t _109009 _109010).
Proof. exact (eq_refl (term930 _144530 _144607 _144654 P _109008 t _109009 _109010)). Qed.
Lemma lem8210505 {_144529 _144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (lt2 : type1470 _144529 _144530) (z'' : type518 _144530 _144607 P) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_109008 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term1566 _144529 _144530 _144607 _144645 _144654 P t p lt2 z'' s pat e _109008 q _109009 _109010) = (term1573 _144529 _144530 _144607 _144645 _144654 P t lt2 z'' s pat e p _109008 q _109009 _109010).
Proof. exact (MK_COMB (@lem8210504 _144530 _144607 _144654 P _109008 t _109009 _109010) (@lem8210503 _144529 _144530 _144607 _144645 P lt2 z'' s pat e p _109008 q _109009 _109010)). Qed.
Lemma lem8210516 {_144529 _144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (lt2 : type1470 _144529 _144530) (z'' : type518 _144530 _144607 P) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_109008 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term1565 _144529 _144530 _144607 _144645 _144654 P p t lt2 z'' s pat e _109008 q _109009 _109010) = (term1573 _144529 _144530 _144607 _144645 _144654 P t lt2 z'' s pat e p _109008 q _109009 _109010).
Proof. exact (TRANS (@lem8210431 _144529 _144530 _144607 _144645 _144654 P t p lt2 z'' s pat e _109008 q _109009 _109010) (@lem8210505 _144529 _144530 _144607 _144645 _144654 P t lt2 z'' s pat e p _109008 q _109009 _109010)). Qed.
Lemma lem8210517 {_144529 _144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (lt2 : type1470 _144529 _144530) (z'' : type518 _144530 _144607 P) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_109008 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term1557 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 z'' s _109008 t _109009 _109010) = (term1573 _144529 _144530 _144607 _144645 _144654 P t lt2 z'' s pat e p _109008 q _109009 _109010).
Proof. exact (TRANS (@lem8210426 _144529 _144530 _144607 _144645 _144654 P p t lt2 z'' s pat e _109008 q _109009 _109010) (@lem8210516 _144529 _144530 _144607 _144645 _144654 P t lt2 z'' s pat e p _109008 q _109009 _109010)). Qed.
Lemma lem8210518 {_144529 _144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (lt2 : type1470 _144529 _144530) (z'' : type518 _144530 _144607 P) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_109008 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term1556 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 z'' s _109008 t _109009 _109010) = (term1573 _144529 _144530 _144607 _144645 _144654 P t lt2 z'' s pat e p _109008 q _109009 _109010).
Proof. exact (TRANS (@lem8210215 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 z'' s _109008 t _109009 _109010) (@lem8210517 _144529 _144530 _144607 _144645 _144654 P t lt2 z'' s pat e p _109008 q _109009 _109010)). Qed.
Lemma lem8210519 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (_109008 : _144530 -> _144607) (_109010 : P) : (term868 _144530 _144607 P p _109008 _109010) = (term868 _144530 _144607 P p _109008 _109010).
Proof. exact (eq_refl (term868 _144530 _144607 P p _109008 _109010)). Qed.
Lemma lem8210520 {_144529 _144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (lt2 : type1470 _144529 _144530) (z'' : type518 _144530 _144607 P) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_109008 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term1574 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 z'' s _109008 t _109009 _109010) = (term1575 _144529 _144530 _144607 _144645 _144654 P t lt2 z'' s pat e p _109008 q _109009 _109010).
Proof. exact (MK_COMB (@lem8210519 _144530 _144607 P p _109008 _109010) (@lem8210518 _144529 _144530 _144607 _144645 _144654 P t lt2 z'' s pat e p _109008 q _109009 _109010)). Qed.
Lemma lem8210524 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8210525 {_144529 _144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (lt2 : type1470 _144529 _144530) (z'' : type518 _144530 _144607 P) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_109008 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term1575 _144529 _144530 _144607 _144645 _144654 P t lt2 z'' s pat e p _109008 q _109009 _109010) = (term1576 _144529 _144530 _144607 _144645 _144654 P t lt2 z'' s pat e p _109008 q _109009 _109010).
Proof. exact (@lem8210524 ((term835 _144530 _144607 _144654 P t _109008 _109010) = (term835 _144530 _144607 _144654 P t _109009 _109010)) (term867 _144530 _144607 P p _109008 _109010) (term1572 _144529 _144530 _144607 _144645 P lt2 z'' s pat e p _109008 q _109009 _109010)). Qed.
Lemma lem8210541 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8210542 {_144529 _144530 _144607 _144645 P : Type'} (lt2 : type1470 _144529 _144530) (z'' : type518 _144530 _144607 P) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_109008 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term1577 _144529 _144530 _144607 _144645 P lt2 z'' s pat e p _109008 q _109009 _109010) = (term1578 _144529 _144530 _144607 _144645 P lt2 z'' s pat e p _109008 q _109009 _109010).
Proof. exact (@lem8210541 (term862 _144529 _144530 _144607 P lt2 z'' _109008 _109009 s _109010) (term867 _144530 _144607 P p _109008 _109010) (term1571 _144530 _144607 _144645 P pat e p _109008 q _109009 _109010)). Qed.
Lemma lem8210556 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8210557 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_109008 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term1579 _144530 _144607 _144645 P pat e p _109008 q _109009 _109010) = (term1580 _144530 _144607 _144645 P pat e p _109008 q _109009 _109010).
Proof. exact (@lem8210556 (term1096 _144530 _144607 _144645 P pat e _109009 _109010) (term867 _144530 _144607 P p _109008 _109010) (term1581 _144530 _144607 P p _109008 q _109009 _109010)). Qed.
Lemma lem8210595 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (z'' : type518 _144530 _144607 P) (_109008 : _144530 -> _144607) (_109009 : _144530 -> _144607) (s : P -> _144529) (_109010 : P) : (term922 _144529 _144530 _144607 P lt2 z'' _109008 _109009 s _109010) = (term922 _144529 _144530 _144607 P lt2 z'' _109008 _109009 s _109010).
Proof. exact (eq_refl (term922 _144529 _144530 _144607 P lt2 z'' _109008 _109009 s _109010)). Qed.
Lemma lem8210596 {_144529 _144530 _144607 _144645 P : Type'} (lt2 : type1470 _144529 _144530) (z'' : type518 _144530 _144607 P) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_109008 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term1578 _144529 _144530 _144607 _144645 P lt2 z'' s pat e p _109008 q _109009 _109010) = (term1582 _144529 _144530 _144607 _144645 P lt2 z'' s pat e p _109008 q _109009 _109010).
Proof. exact (MK_COMB (@lem8210595 _144529 _144530 _144607 P lt2 z'' _109008 _109009 s _109010) (@lem8210557 _144530 _144607 _144645 P pat e p _109008 q _109009 _109010)). Qed.
Lemma lem8210607 {_144529 _144530 _144607 _144645 P : Type'} (lt2 : type1470 _144529 _144530) (z'' : type518 _144530 _144607 P) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_109008 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term1577 _144529 _144530 _144607 _144645 P lt2 z'' s pat e p _109008 q _109009 _109010) = (term1582 _144529 _144530 _144607 _144645 P lt2 z'' s pat e p _109008 q _109009 _109010).
Proof. exact (TRANS (@lem8210542 _144529 _144530 _144607 _144645 P lt2 z'' s pat e p _109008 q _109009 _109010) (@lem8210596 _144529 _144530 _144607 _144645 P lt2 z'' s pat e p _109008 q _109009 _109010)). Qed.
Lemma lem8210608 {_144530 _144607 _144654 P : Type'} (_109008 : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term930 _144530 _144607 _144654 P _109008 t _109009 _109010) = (term930 _144530 _144607 _144654 P _109008 t _109009 _109010).
Proof. exact (eq_refl (term930 _144530 _144607 _144654 P _109008 t _109009 _109010)). Qed.
Lemma lem8210609 {_144529 _144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (lt2 : type1470 _144529 _144530) (z'' : type518 _144530 _144607 P) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_109008 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term1576 _144529 _144530 _144607 _144645 _144654 P t lt2 z'' s pat e p _109008 q _109009 _109010) = (term1583 _144529 _144530 _144607 _144645 _144654 P t lt2 z'' s pat e p _109008 q _109009 _109010).
Proof. exact (MK_COMB (@lem8210608 _144530 _144607 _144654 P _109008 t _109009 _109010) (@lem8210607 _144529 _144530 _144607 _144645 P lt2 z'' s pat e p _109008 q _109009 _109010)). Qed.
Lemma lem8210620 {_144529 _144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (lt2 : type1470 _144529 _144530) (z'' : type518 _144530 _144607 P) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_109008 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term1575 _144529 _144530 _144607 _144645 _144654 P t lt2 z'' s pat e p _109008 q _109009 _109010) = (term1583 _144529 _144530 _144607 _144645 _144654 P t lt2 z'' s pat e p _109008 q _109009 _109010).
Proof. exact (TRANS (@lem8210525 _144529 _144530 _144607 _144645 _144654 P t lt2 z'' s pat e p _109008 q _109009 _109010) (@lem8210609 _144529 _144530 _144607 _144645 _144654 P t lt2 z'' s pat e p _109008 q _109009 _109010)). Qed.
Lemma lem8210621 {_144529 _144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (lt2 : type1470 _144529 _144530) (z'' : type518 _144530 _144607 P) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_109008 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term1574 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 z'' s _109008 t _109009 _109010) = (term1583 _144529 _144530 _144607 _144645 _144654 P t lt2 z'' s pat e p _109008 q _109009 _109010).
Proof. exact (TRANS (@lem8210520 _144529 _144530 _144607 _144645 _144654 P t lt2 z'' s pat e p _109008 q _109009 _109010) (@lem8210620 _144529 _144530 _144607 _144645 _144654 P t lt2 z'' s pat e p _109008 q _109009 _109010)). Qed.
Lemma lem8210622 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (_109008 : _144530 -> _144607) (_109010 : P) : (term1184 _144530 _144607 _144645 P pat e _109008 _109010) = (term1184 _144530 _144607 _144645 P pat e _109008 _109010).
Proof. exact (eq_refl (term1184 _144530 _144607 _144645 P pat e _109008 _109010)). Qed.
Lemma lem8210623 {_144529 _144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (lt2 : type1470 _144529 _144530) (z'' : type518 _144530 _144607 P) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_109008 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term1555 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 z'' s _109008 t _109009 _109010) = (term1584 _144529 _144530 _144607 _144645 _144654 P t lt2 z'' s pat e p _109008 q _109009 _109010).
Proof. exact (MK_COMB (@lem8210622 _144530 _144607 _144645 P pat e _109008 _109010) (@lem8210621 _144529 _144530 _144607 _144645 _144654 P t lt2 z'' s pat e p _109008 q _109009 _109010)). Qed.
Lemma lem8210627 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8210628 {_144529 _144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (lt2 : type1470 _144529 _144530) (z'' : type518 _144530 _144607 P) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_109008 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term1584 _144529 _144530 _144607 _144645 _144654 P t lt2 z'' s pat e p _109008 q _109009 _109010) = (term1585 _144529 _144530 _144607 _144645 _144654 P t lt2 z'' s pat e p _109008 q _109009 _109010).
Proof. exact (@lem8210627 ((term835 _144530 _144607 _144654 P t _109008 _109010) = (term835 _144530 _144607 _144654 P t _109009 _109010)) (term1096 _144530 _144607 _144645 P pat e _109008 _109010) (term1582 _144529 _144530 _144607 _144645 P lt2 z'' s pat e p _109008 q _109009 _109010)). Qed.
Lemma lem8210644 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8210645 {_144529 _144530 _144607 _144645 P : Type'} (lt2 : type1470 _144529 _144530) (z'' : type518 _144530 _144607 P) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_109008 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term1586 _144529 _144530 _144607 _144645 P lt2 z'' s pat e p _109008 q _109009 _109010) = (term1587 _144529 _144530 _144607 _144645 P lt2 z'' s pat e p _109008 q _109009 _109010).
Proof. exact (@lem8210644 (term862 _144529 _144530 _144607 P lt2 z'' _109008 _109009 s _109010) (term1096 _144530 _144607 _144645 P pat e _109008 _109010) (term1580 _144530 _144607 _144645 P pat e p _109008 q _109009 _109010)). Qed.
Lemma lem8210705 {_144530 _144607 _144654 P : Type'} (_109008 : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term930 _144530 _144607 _144654 P _109008 t _109009 _109010) = (term930 _144530 _144607 _144654 P _109008 t _109009 _109010).
Proof. exact (eq_refl (term930 _144530 _144607 _144654 P _109008 t _109009 _109010)). Qed.
Lemma lem8210706 {_144529 _144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (lt2 : type1470 _144529 _144530) (z'' : type518 _144530 _144607 P) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_109008 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term1585 _144529 _144530 _144607 _144645 _144654 P t lt2 z'' s pat e p _109008 q _109009 _109010) = (term1588 _144529 _144530 _144607 _144645 _144654 P t lt2 z'' s pat e p _109008 q _109009 _109010).
Proof. exact (MK_COMB (@lem8210705 _144530 _144607 _144654 P _109008 t _109009 _109010) (@lem8210645 _144529 _144530 _144607 _144645 P lt2 z'' s pat e p _109008 q _109009 _109010)). Qed.
Lemma lem8210717 {_144529 _144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (lt2 : type1470 _144529 _144530) (z'' : type518 _144530 _144607 P) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_109008 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term1584 _144529 _144530 _144607 _144645 _144654 P t lt2 z'' s pat e p _109008 q _109009 _109010) = (term1588 _144529 _144530 _144607 _144645 _144654 P t lt2 z'' s pat e p _109008 q _109009 _109010).
Proof. exact (TRANS (@lem8210628 _144529 _144530 _144607 _144645 _144654 P t lt2 z'' s pat e p _109008 q _109009 _109010) (@lem8210706 _144529 _144530 _144607 _144645 _144654 P t lt2 z'' s pat e p _109008 q _109009 _109010)). Qed.
Lemma lem8210718 {_144529 _144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (lt2 : type1470 _144529 _144530) (z'' : type518 _144530 _144607 P) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_109008 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term1555 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 z'' s _109008 t _109009 _109010) = (term1588 _144529 _144530 _144607 _144645 _144654 P t lt2 z'' s pat e p _109008 q _109009 _109010).
Proof. exact (TRANS (@lem8210623 _144529 _144530 _144607 _144645 _144654 P t lt2 z'' s pat e p _109008 q _109009 _109010) (@lem8210717 _144529 _144530 _144607 _144645 _144654 P t lt2 z'' s pat e p _109008 q _109009 _109010)). Qed.
Lemma lem8210719 {_144529 _144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (lt2 : type1470 _144529 _144530) (z'' : type518 _144530 _144607 P) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_109008 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term1541 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 z'' s _109008 t _109009 _109010) = (term1588 _144529 _144530 _144607 _144645 _144654 P t lt2 z'' s pat e p _109008 q _109009 _109010).
Proof. exact (TRANS (@lem8210188 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 z'' s _109008 t _109009 _109010) (@lem8210718 _144529 _144530 _144607 _144645 _144654 P t lt2 z'' s pat e p _109008 q _109009 _109010)). Qed.
Lemma lem8210720 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8210721 {_144529 _144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (lt2 : type1470 _144529 _144530) (z'' : type518 _144530 _144607 P) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_109008 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term1589 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 z'' s _109008 t _109009 _109010) = (term1590 _144529 _144530 _144607 _144645 _144654 P t lt2 z'' s pat e p _109008 q _109009 _109010).
Proof. exact (MK_COMB (@lem8210720) (@lem8210719 _144529 _144530 _144607 _144645 _144654 P t lt2 z'' s pat e p _109008 q _109009 _109010)). Qed.
Lemma lem8210735 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8210736 {_144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (_109008 : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term1591 _144530 _144607 _144645 _144654 P p pat e q _109008 t _109009 _109010) = (term1592 _144530 _144607 _144645 _144654 P p pat e q _109008 t _109009 _109010).
Proof. exact (@lem8210735 (term1096 _144530 _144607 _144645 P pat e _109008 _109010) (term867 _144530 _144607 P p _109008 _109010) (term1593 _144530 _144607 _144645 _144654 P p pat e q _109008 t _109009 _109010)). Qed.
Lemma lem8210762 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8210763 {_144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (_109008 : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term1593 _144530 _144607 _144645 _144654 P p pat e q _109008 t _109009 _109010) = (term1594 _144530 _144607 _144645 _144654 P p pat e q _109008 t _109009 _109010).
Proof. exact (@lem8210762 (term867 _144530 _144607 P p _109009 _109010) (term867 _144530 _144607 P q _109008 _109010) (term1595 _144530 _144607 _144645 _144654 P pat e q _109008 t _109009 _109010)). Qed.
Lemma lem8210777 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8210778 {_144530 _144607 _144645 _144654 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (_109008 : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term1596 _144530 _144607 _144645 _144654 P pat e q _109008 t _109009 _109010) = (term1597 _144530 _144607 _144645 _144654 P pat e q _109008 t _109009 _109010).
Proof. exact (@lem8210777 (term1096 _144530 _144607 _144645 P pat e _109009 _109010) (term867 _144530 _144607 P q _109008 _109010) (term920 _144530 _144607 _144654 P q _109008 t _109009 _109010)). Qed.
Lemma lem8210804 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem8210805 {_144530 _144607 _144654 P : Type'} (_109008 : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (q : type560 _144530 _144607 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term920 _144530 _144607 _144654 P q _109008 t _109009 _109010) = (term921 _144530 _144607 _144654 P _109008 t q _109009 _109010).
Proof. exact (@lem8210804 ((term835 _144530 _144607 _144654 P t _109008 _109010) = (term835 _144530 _144607 _144654 P t _109009 _109010)) (term867 _144530 _144607 P q _109009 _109010)). Qed.
Lemma lem8210813 {_144530 _144607 P : Type'} (q : type560 _144530 _144607 P) (_109008 : _144530 -> _144607) (_109010 : P) : (term868 _144530 _144607 P q _109008 _109010) = (term868 _144530 _144607 P q _109008 _109010).
Proof. exact (eq_refl (term868 _144530 _144607 P q _109008 _109010)). Qed.
Lemma lem8210814 {_144530 _144607 _144654 P : Type'} (_109008 : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (q : type560 _144530 _144607 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term934 _144530 _144607 _144654 P q _109008 t _109009 _109010) = (term935 _144530 _144607 _144654 P _109008 t q _109009 _109010).
Proof. exact (MK_COMB (@lem8210813 _144530 _144607 P q _109008 _109010) (@lem8210805 _144530 _144607 _144654 P _109008 t q _109009 _109010)). Qed.
Lemma lem8210818 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8210819 {_144530 _144607 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (_109008 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term935 _144530 _144607 _144654 P _109008 t q _109009 _109010) = (term936 _144530 _144607 _144654 P t _109008 q _109009 _109010).
Proof. exact (@lem8210818 ((term835 _144530 _144607 _144654 P t _109008 _109010) = (term835 _144530 _144607 _144654 P t _109009 _109010)) (term867 _144530 _144607 P q _109008 _109010) (term867 _144530 _144607 P q _109009 _109010)). Qed.
Lemma lem8210837 {_144530 _144607 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (_109008 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term934 _144530 _144607 _144654 P q _109008 t _109009 _109010) = (term936 _144530 _144607 _144654 P t _109008 q _109009 _109010).
Proof. exact (TRANS (@lem8210814 _144530 _144607 _144654 P _109008 t q _109009 _109010) (@lem8210819 _144530 _144607 _144654 P t _109008 q _109009 _109010)). Qed.
Lemma lem8210838 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term1184 _144530 _144607 _144645 P pat e _109009 _109010) = (term1184 _144530 _144607 _144645 P pat e _109009 _109010).
Proof. exact (eq_refl (term1184 _144530 _144607 _144645 P pat e _109009 _109010)). Qed.
Lemma lem8210839 {_144530 _144607 _144645 _144654 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (t : type564 _144530 _144607 _144654 P) (_109008 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term1597 _144530 _144607 _144645 _144654 P pat e q _109008 t _109009 _109010) = (term1598 _144530 _144607 _144645 _144654 P pat e t _109008 q _109009 _109010).
Proof. exact (MK_COMB (@lem8210838 _144530 _144607 _144645 P pat e _109009 _109010) (@lem8210837 _144530 _144607 _144654 P t _109008 q _109009 _109010)). Qed.
Lemma lem8210843 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8210844 {_144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (_109008 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term1598 _144530 _144607 _144645 _144654 P pat e t _109008 q _109009 _109010) = (term1599 _144530 _144607 _144645 _144654 P t pat e _109008 q _109009 _109010).
Proof. exact (@lem8210843 ((term835 _144530 _144607 _144654 P t _109008 _109010) = (term835 _144530 _144607 _144654 P t _109009 _109010)) (term1096 _144530 _144607 _144645 P pat e _109009 _109010) (term939 _144530 _144607 P _109008 q _109009 _109010)). Qed.
Lemma lem8210874 {_144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (_109008 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term1597 _144530 _144607 _144645 _144654 P pat e q _109008 t _109009 _109010) = (term1599 _144530 _144607 _144645 _144654 P t pat e _109008 q _109009 _109010).
Proof. exact (TRANS (@lem8210839 _144530 _144607 _144645 _144654 P pat e t _109008 q _109009 _109010) (@lem8210844 _144530 _144607 _144645 _144654 P t pat e _109008 q _109009 _109010)). Qed.
Lemma lem8210875 {_144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (_109008 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term1596 _144530 _144607 _144645 _144654 P pat e q _109008 t _109009 _109010) = (term1599 _144530 _144607 _144645 _144654 P t pat e _109008 q _109009 _109010).
Proof. exact (TRANS (@lem8210778 _144530 _144607 _144645 _144654 P pat e q _109008 t _109009 _109010) (@lem8210874 _144530 _144607 _144645 _144654 P t pat e _109008 q _109009 _109010)). Qed.
Lemma lem8210876 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term868 _144530 _144607 P p _109009 _109010) = (term868 _144530 _144607 P p _109009 _109010).
Proof. exact (eq_refl (term868 _144530 _144607 P p _109009 _109010)). Qed.
Lemma lem8210877 {_144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (_109008 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term1594 _144530 _144607 _144645 _144654 P p pat e q _109008 t _109009 _109010) = (term1600 _144530 _144607 _144645 _144654 P p t pat e _109008 q _109009 _109010).
Proof. exact (MK_COMB (@lem8210876 _144530 _144607 P p _109009 _109010) (@lem8210875 _144530 _144607 _144645 _144654 P t pat e _109008 q _109009 _109010)). Qed.
Lemma lem8210881 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8210882 {_144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (_109008 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term1600 _144530 _144607 _144645 _144654 P p t pat e _109008 q _109009 _109010) = (term1601 _144530 _144607 _144645 _144654 P t p pat e _109008 q _109009 _109010).
Proof. exact (@lem8210881 ((term835 _144530 _144607 _144654 P t _109008 _109010) = (term835 _144530 _144607 _144654 P t _109009 _109010)) (term867 _144530 _144607 P p _109009 _109010) (term1569 _144530 _144607 _144645 P pat e _109008 q _109009 _109010)). Qed.
Lemma lem8210898 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8210899 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_109008 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term1570 _144530 _144607 _144645 P p pat e _109008 q _109009 _109010) = (term1571 _144530 _144607 _144645 P pat e p _109008 q _109009 _109010).
Proof. exact (@lem8210898 (term1096 _144530 _144607 _144645 P pat e _109009 _109010) (term867 _144530 _144607 P p _109009 _109010) (term939 _144530 _144607 P _109008 q _109009 _109010)). Qed.
Lemma lem8210927 {_144530 _144607 _144654 P : Type'} (_109008 : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term930 _144530 _144607 _144654 P _109008 t _109009 _109010) = (term930 _144530 _144607 _144654 P _109008 t _109009 _109010).
Proof. exact (eq_refl (term930 _144530 _144607 _144654 P _109008 t _109009 _109010)). Qed.
Lemma lem8210928 {_144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_109008 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term1601 _144530 _144607 _144645 _144654 P t p pat e _109008 q _109009 _109010) = (term1602 _144530 _144607 _144645 _144654 P t pat e p _109008 q _109009 _109010).
Proof. exact (MK_COMB (@lem8210927 _144530 _144607 _144654 P _109008 t _109009 _109010) (@lem8210899 _144530 _144607 _144645 P pat e p _109008 q _109009 _109010)). Qed.
Lemma lem8210939 {_144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_109008 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term1600 _144530 _144607 _144645 _144654 P p t pat e _109008 q _109009 _109010) = (term1602 _144530 _144607 _144645 _144654 P t pat e p _109008 q _109009 _109010).
Proof. exact (TRANS (@lem8210882 _144530 _144607 _144645 _144654 P t p pat e _109008 q _109009 _109010) (@lem8210928 _144530 _144607 _144645 _144654 P t pat e p _109008 q _109009 _109010)). Qed.
Lemma lem8210940 {_144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_109008 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term1594 _144530 _144607 _144645 _144654 P p pat e q _109008 t _109009 _109010) = (term1602 _144530 _144607 _144645 _144654 P t pat e p _109008 q _109009 _109010).
Proof. exact (TRANS (@lem8210877 _144530 _144607 _144645 _144654 P p t pat e _109008 q _109009 _109010) (@lem8210939 _144530 _144607 _144645 _144654 P t pat e p _109008 q _109009 _109010)). Qed.
Lemma lem8210941 {_144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_109008 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term1593 _144530 _144607 _144645 _144654 P p pat e q _109008 t _109009 _109010) = (term1602 _144530 _144607 _144645 _144654 P t pat e p _109008 q _109009 _109010).
Proof. exact (TRANS (@lem8210763 _144530 _144607 _144645 _144654 P p pat e q _109008 t _109009 _109010) (@lem8210940 _144530 _144607 _144645 _144654 P t pat e p _109008 q _109009 _109010)). Qed.
Lemma lem8210942 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (_109008 : _144530 -> _144607) (_109010 : P) : (term868 _144530 _144607 P p _109008 _109010) = (term868 _144530 _144607 P p _109008 _109010).
Proof. exact (eq_refl (term868 _144530 _144607 P p _109008 _109010)). Qed.
Lemma lem8210943 {_144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_109008 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term1603 _144530 _144607 _144645 _144654 P p pat e q _109008 t _109009 _109010) = (term1604 _144530 _144607 _144645 _144654 P t pat e p _109008 q _109009 _109010).
Proof. exact (MK_COMB (@lem8210942 _144530 _144607 P p _109008 _109010) (@lem8210941 _144530 _144607 _144645 _144654 P t pat e p _109008 q _109009 _109010)). Qed.
Lemma lem8210947 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8210948 {_144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_109008 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term1604 _144530 _144607 _144645 _144654 P t pat e p _109008 q _109009 _109010) = (term1605 _144530 _144607 _144645 _144654 P t pat e p _109008 q _109009 _109010).
Proof. exact (@lem8210947 ((term835 _144530 _144607 _144654 P t _109008 _109010) = (term835 _144530 _144607 _144654 P t _109009 _109010)) (term867 _144530 _144607 P p _109008 _109010) (term1571 _144530 _144607 _144645 P pat e p _109008 q _109009 _109010)). Qed.
Lemma lem8210964 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8210965 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_109008 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term1579 _144530 _144607 _144645 P pat e p _109008 q _109009 _109010) = (term1580 _144530 _144607 _144645 P pat e p _109008 q _109009 _109010).
Proof. exact (@lem8210964 (term1096 _144530 _144607 _144645 P pat e _109009 _109010) (term867 _144530 _144607 P p _109008 _109010) (term1581 _144530 _144607 P p _109008 q _109009 _109010)). Qed.
Lemma lem8211003 {_144530 _144607 _144654 P : Type'} (_109008 : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term930 _144530 _144607 _144654 P _109008 t _109009 _109010) = (term930 _144530 _144607 _144654 P _109008 t _109009 _109010).
Proof. exact (eq_refl (term930 _144530 _144607 _144654 P _109008 t _109009 _109010)). Qed.
Lemma lem8211004 {_144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_109008 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term1605 _144530 _144607 _144645 _144654 P t pat e p _109008 q _109009 _109010) = (term1606 _144530 _144607 _144645 _144654 P t pat e p _109008 q _109009 _109010).
Proof. exact (MK_COMB (@lem8211003 _144530 _144607 _144654 P _109008 t _109009 _109010) (@lem8210965 _144530 _144607 _144645 P pat e p _109008 q _109009 _109010)). Qed.
Lemma lem8211015 {_144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_109008 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term1604 _144530 _144607 _144645 _144654 P t pat e p _109008 q _109009 _109010) = (term1606 _144530 _144607 _144645 _144654 P t pat e p _109008 q _109009 _109010).
Proof. exact (TRANS (@lem8210948 _144530 _144607 _144645 _144654 P t pat e p _109008 q _109009 _109010) (@lem8211004 _144530 _144607 _144645 _144654 P t pat e p _109008 q _109009 _109010)). Qed.
Lemma lem8211016 {_144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_109008 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term1603 _144530 _144607 _144645 _144654 P p pat e q _109008 t _109009 _109010) = (term1606 _144530 _144607 _144645 _144654 P t pat e p _109008 q _109009 _109010).
Proof. exact (TRANS (@lem8210943 _144530 _144607 _144645 _144654 P t pat e p _109008 q _109009 _109010) (@lem8211015 _144530 _144607 _144645 _144654 P t pat e p _109008 q _109009 _109010)). Qed.
Lemma lem8211017 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (_109008 : _144530 -> _144607) (_109010 : P) : (term1184 _144530 _144607 _144645 P pat e _109008 _109010) = (term1184 _144530 _144607 _144645 P pat e _109008 _109010).
Proof. exact (eq_refl (term1184 _144530 _144607 _144645 P pat e _109008 _109010)). Qed.
Lemma lem8211018 {_144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_109008 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term1592 _144530 _144607 _144645 _144654 P p pat e q _109008 t _109009 _109010) = (term1607 _144530 _144607 _144645 _144654 P t pat e p _109008 q _109009 _109010).
Proof. exact (MK_COMB (@lem8211017 _144530 _144607 _144645 P pat e _109008 _109010) (@lem8211016 _144530 _144607 _144645 _144654 P t pat e p _109008 q _109009 _109010)). Qed.
Lemma lem8211022 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8211023 {_144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_109008 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term1607 _144530 _144607 _144645 _144654 P t pat e p _109008 q _109009 _109010) = (term1608 _144530 _144607 _144645 _144654 P t pat e p _109008 q _109009 _109010).
Proof. exact (@lem8211022 ((term835 _144530 _144607 _144654 P t _109008 _109010) = (term835 _144530 _144607 _144654 P t _109009 _109010)) (term1096 _144530 _144607 _144645 P pat e _109008 _109010) (term1580 _144530 _144607 _144645 P pat e p _109008 q _109009 _109010)). Qed.
Lemma lem8211085 {_144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_109008 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term1592 _144530 _144607 _144645 _144654 P p pat e q _109008 t _109009 _109010) = (term1608 _144530 _144607 _144645 _144654 P t pat e p _109008 q _109009 _109010).
Proof. exact (TRANS (@lem8211018 _144530 _144607 _144645 _144654 P t pat e p _109008 q _109009 _109010) (@lem8211023 _144530 _144607 _144645 _144654 P t pat e p _109008 q _109009 _109010)). Qed.
Lemma lem8211086 {_144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_109008 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term1591 _144530 _144607 _144645 _144654 P p pat e q _109008 t _109009 _109010) = (term1608 _144530 _144607 _144645 _144654 P t pat e p _109008 q _109009 _109010).
Proof. exact (TRANS (@lem8210736 _144530 _144607 _144645 _144654 P p pat e q _109008 t _109009 _109010) (@lem8211085 _144530 _144607 _144645 _144654 P t pat e p _109008 q _109009 _109010)). Qed.
Lemma lem8211087 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (z'' : type518 _144530 _144607 P) (_109008 : _144530 -> _144607) (_109009 : _144530 -> _144607) (s : P -> _144529) (_109010 : P) : (term922 _144529 _144530 _144607 P lt2 z'' _109008 _109009 s _109010) = (term922 _144529 _144530 _144607 P lt2 z'' _109008 _109009 s _109010).
Proof. exact (eq_refl (term922 _144529 _144530 _144607 P lt2 z'' _109008 _109009 s _109010)). Qed.
Lemma lem8211088 {_144529 _144530 _144607 _144645 _144654 P : Type'} (lt2 : type1470 _144529 _144530) (z'' : type518 _144530 _144607 P) (s : P -> _144529) (t : type564 _144530 _144607 _144654 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_109008 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term1609 _144529 _144530 _144607 _144645 _144654 P lt2 z'' s p pat e q _109008 t _109009 _109010) = (term1610 _144529 _144530 _144607 _144645 _144654 P lt2 z'' s t pat e p _109008 q _109009 _109010).
Proof. exact (MK_COMB (@lem8211087 _144529 _144530 _144607 P lt2 z'' _109008 _109009 s _109010) (@lem8211086 _144530 _144607 _144645 _144654 P t pat e p _109008 q _109009 _109010)). Qed.
Lemma lem8211092 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8211093 {_144529 _144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (lt2 : type1470 _144529 _144530) (z'' : type518 _144530 _144607 P) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_109008 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term1610 _144529 _144530 _144607 _144645 _144654 P lt2 z'' s t pat e p _109008 q _109009 _109010) = (term1588 _144529 _144530 _144607 _144645 _144654 P t lt2 z'' s pat e p _109008 q _109009 _109010).
Proof. exact (@lem8211092 ((term835 _144530 _144607 _144654 P t _109008 _109010) = (term835 _144530 _144607 _144654 P t _109009 _109010)) (term862 _144529 _144530 _144607 P lt2 z'' _109008 _109009 s _109010) (term1611 _144530 _144607 _144645 P pat e p _109008 q _109009 _109010)). Qed.
Lemma lem8211165 {_144529 _144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (lt2 : type1470 _144529 _144530) (z'' : type518 _144530 _144607 P) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_109008 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term1609 _144529 _144530 _144607 _144645 _144654 P lt2 z'' s p pat e q _109008 t _109009 _109010) = (term1588 _144529 _144530 _144607 _144645 _144654 P t lt2 z'' s pat e p _109008 q _109009 _109010).
Proof. exact (TRANS (@lem8211088 _144529 _144530 _144607 _144645 _144654 P lt2 z'' s t pat e p _109008 q _109009 _109010) (@lem8211093 _144529 _144530 _144607 _144645 _144654 P t lt2 z'' s pat e p _109008 q _109009 _109010)). Qed.
Lemma lem8211166 {_144529 _144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (lt2 : type1470 _144529 _144530) (z'' : type518 _144530 _144607 P) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_109008 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109009 : _144530 -> _144607) (_109010 : P) : ((term1541 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 z'' s _109008 t _109009 _109010) = (term1609 _144529 _144530 _144607 _144645 _144654 P lt2 z'' s p pat e q _109008 t _109009 _109010)) = ((term1588 _144529 _144530 _144607 _144645 _144654 P t lt2 z'' s pat e p _109008 q _109009 _109010) = (term1588 _144529 _144530 _144607 _144645 _144654 P t lt2 z'' s pat e p _109008 q _109009 _109010)).
Proof. exact (MK_COMB (@lem8210721 _144529 _144530 _144607 _144645 _144654 P t lt2 z'' s pat e p _109008 q _109009 _109010) (@lem8211165 _144529 _144530 _144607 _144645 _144654 P t lt2 z'' s pat e p _109008 q _109009 _109010)). Qed.
Lemma lem8211168 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem20665 A x) (@lem20664 A x)). Qed.
Lemma lem8211169 (x : Prop) : (x = x) = True.
Proof. exact (@lem8211168 Prop x). Qed.
Lemma lem8211170 {_144529 _144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (lt2 : type1470 _144529 _144530) (z'' : type518 _144530 _144607 P) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_109008 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109009 : _144530 -> _144607) (_109010 : P) : ((term1588 _144529 _144530 _144607 _144645 _144654 P t lt2 z'' s pat e p _109008 q _109009 _109010) = (term1588 _144529 _144530 _144607 _144645 _144654 P t lt2 z'' s pat e p _109008 q _109009 _109010)) = True.
Proof. exact (@lem8211169 (term1588 _144529 _144530 _144607 _144645 _144654 P t lt2 z'' s pat e p _109008 q _109009 _109010)). Qed.
Lemma lem8211171 {_144529 _144530 _144607 _144645 _144654 P : Type'} (lt2 : type1470 _144529 _144530) (z'' : type518 _144530 _144607 P) (s : P -> _144529) (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (_109008 : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (_109009 : _144530 -> _144607) (_109010 : P) : ((term1541 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 z'' s _109008 t _109009 _109010) = (term1609 _144529 _144530 _144607 _144645 _144654 P lt2 z'' s p pat e q _109008 t _109009 _109010)) = True.
Proof. exact (TRANS (@lem8211166 _144529 _144530 _144607 _144645 _144654 P t lt2 z'' s pat e p _109008 q _109009 _109010) (@lem8211170 _144529 _144530 _144607 _144645 _144654 P t lt2 z'' s pat e p _109008 q _109009 _109010)). Qed.
Lemma lem8211172 {_144529 _144530 _144607 _144645 _144654 P : Type'} (lt2 : type1470 _144529 _144530) (z'' : type518 _144530 _144607 P) (s : P -> _144529) (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (_109008 : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (_109009 : _144530 -> _144607) (_109010 : P) : True = ((term1541 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 z'' s _109008 t _109009 _109010) = (term1609 _144529 _144530 _144607 _144645 _144654 P lt2 z'' s p pat e q _109008 t _109009 _109010)).
Proof. exact (SYM (@lem8211171 _144529 _144530 _144607 _144645 _144654 P lt2 z'' s p pat e q _109008 t _109009 _109010)). Qed.
Lemma lem8211173 {_144529 _144530 _144607 _144645 _144654 P : Type'} (lt2 : type1470 _144529 _144530) (z'' : type518 _144530 _144607 P) (s : P -> _144529) (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (_109008 : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term1541 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 z'' s _109008 t _109009 _109010) = (term1609 _144529 _144530 _144607 _144645 _144654 P lt2 z'' s p pat e q _109008 t _109009 _109010).
Proof. exact (EQ_MP (@lem8211172 _144529 _144530 _144607 _144645 _144654 P lt2 z'' s p pat e q _109008 t _109009 _109010) (@lem0)). Qed.
Lemma lem8211174 {_144529 _144530 _144607 _144645 _144654 P : Type'} (_109008 : _144530 -> _144607) (_109009 : _144530 -> _144607) (_109010 : P) (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z'' : type518 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) (h1 : term685 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z'' t) : term1609 _144529 _144530 _144607 _144645 _144654 P lt2 z'' s p pat e q _109008 t _109009 _109010.
Proof. exact (EQ_MP (@lem8211173 _144529 _144530 _144607 _144645 _144654 P lt2 z'' s p pat e q _109008 t _109009 _109010) (@lem8209190 _144529 _144530 _144607 _144645 _144654 P _109008 _109009 _109010 p pat e q lt2 s z'' t h1)). Qed.
Lemma lem8211176 (b : Prop) (a : Prop) : (a \/ b) = (term940 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem8211177 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) (lt2 : type1470 _144529 _144530) (z'' : type518 _144530 _144607 P) (_109008 : _144530 -> _144607) (_109009 : _144530 -> _144607) (s : P -> _144529) (_109010 : P) : (term1609 _144529 _144530 _144607 _144645 _144654 P lt2 z'' s p pat e q _109008 t _109009 _109010) = (term1612 _144529 _144530 _144607 _144645 _144654 P p pat e q t lt2 z'' _109008 _109009 s _109010).
Proof. exact (@lem8211176 (term1591 _144530 _144607 _144645 _144654 P p pat e q _109008 t _109009 _109010) (term862 _144529 _144530 _144607 P lt2 z'' _109008 _109009 s _109010)). Qed.
Lemma lem8211179 (a : Prop) (b : Prop) : (term942 a b) = (term943 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem8211180 {_144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (_109008 : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term1613 _144530 _144607 _144645 _144654 P p pat e q _109008 t _109009 _109010) = (term1614 _144530 _144607 _144645 _144654 P p pat e q _109008 t _109009 _109010).
Proof. exact (@lem8211179 (term867 _144530 _144607 P p _109008 _109010) (term1615 _144530 _144607 _144645 _144654 P p pat e q _109008 t _109009 _109010)). Qed.
Lemma lem8211182 (a : Prop) : (term15 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8211183 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (_109008 : _144530 -> _144607) (_109010 : P) : (term946 _144530 _144607 P p _109008 _109010) = (term822 _144530 _144607 P p _109008 _109010).
Proof. exact (@lem8211182 (term822 _144530 _144607 P p _109008 _109010)). Qed.
Lemma lem8211184 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8211185 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (_109008 : _144530 -> _144607) (_109010 : P) : (term947 _144530 _144607 P p _109008 _109010) = (term948 _144530 _144607 P p _109008 _109010).
Proof. exact (MK_COMB (@lem8211184) (@lem8211183 _144530 _144607 P p _109008 _109010)). Qed.
Lemma lem8211187 (a : Prop) (b : Prop) : (term942 a b) = (term943 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem8211188 {_144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (_109008 : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term1616 _144530 _144607 _144645 _144654 P p pat e q _109008 t _109009 _109010) = (term1617 _144530 _144607 _144645 _144654 P p pat e q _109008 t _109009 _109010).
Proof. exact (@lem8211187 (term1096 _144530 _144607 _144645 P pat e _109008 _109010) (term1593 _144530 _144607 _144645 _144654 P p pat e q _109008 t _109009 _109010)). Qed.
Lemma lem8211190 (a : Prop) : (term15 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8211191 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (_109008 : _144530 -> _144607) (_109010 : P) : (term1220 _144530 _144607 _144645 P pat e _109008 _109010) = ((term835 _144530 _144607 _144645 P pat _109008 _109010) = (term835 _144530 _144607 _144645 P e _109008 _109010)).
Proof. exact (@lem8211190 ((term835 _144530 _144607 _144645 P pat _109008 _109010) = (term835 _144530 _144607 _144645 P e _109008 _109010))). Qed.
Lemma lem8211192 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8211193 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (_109008 : _144530 -> _144607) (_109010 : P) : (term1221 _144530 _144607 _144645 P pat e _109008 _109010) = (term1222 _144530 _144607 _144645 P pat e _109008 _109010).
Proof. exact (MK_COMB (@lem8211192) (@lem8211191 _144530 _144607 _144645 P pat e _109008 _109010)). Qed.
Lemma lem8211195 (a : Prop) (b : Prop) : (term942 a b) = (term943 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem8211196 {_144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (_109008 : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term1618 _144530 _144607 _144645 _144654 P p pat e q _109008 t _109009 _109010) = (term1619 _144530 _144607 _144645 _144654 P p pat e q _109008 t _109009 _109010).
Proof. exact (@lem8211195 (term867 _144530 _144607 P q _109008 _109010) (term1620 _144530 _144607 _144645 _144654 P p pat e q _109008 t _109009 _109010)). Qed.
Lemma lem8211198 (a : Prop) : (term15 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8211199 {_144530 _144607 P : Type'} (q : type560 _144530 _144607 P) (_109008 : _144530 -> _144607) (_109010 : P) : (term946 _144530 _144607 P q _109008 _109010) = (term822 _144530 _144607 P q _109008 _109010).
Proof. exact (@lem8211198 (term822 _144530 _144607 P q _109008 _109010)). Qed.
Lemma lem8211200 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8211201 {_144530 _144607 P : Type'} (q : type560 _144530 _144607 P) (_109008 : _144530 -> _144607) (_109010 : P) : (term947 _144530 _144607 P q _109008 _109010) = (term948 _144530 _144607 P q _109008 _109010).
Proof. exact (MK_COMB (@lem8211200) (@lem8211199 _144530 _144607 P q _109008 _109010)). Qed.
Lemma lem8211203 (a : Prop) (b : Prop) : (term942 a b) = (term943 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem8211204 {_144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (_109008 : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term1621 _144530 _144607 _144645 _144654 P p pat e q _109008 t _109009 _109010) = (term1622 _144530 _144607 _144645 _144654 P p pat e q _109008 t _109009 _109010).
Proof. exact (@lem8211203 (term867 _144530 _144607 P p _109009 _109010) (term1595 _144530 _144607 _144645 _144654 P pat e q _109008 t _109009 _109010)). Qed.
Lemma lem8211206 (a : Prop) : (term15 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8211207 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term946 _144530 _144607 P p _109009 _109010) = (term822 _144530 _144607 P p _109009 _109010).
Proof. exact (@lem8211206 (term822 _144530 _144607 P p _109009 _109010)). Qed.
Lemma lem8211208 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8211209 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term947 _144530 _144607 P p _109009 _109010) = (term948 _144530 _144607 P p _109009 _109010).
Proof. exact (MK_COMB (@lem8211208) (@lem8211207 _144530 _144607 P p _109009 _109010)). Qed.
Lemma lem8211211 (a : Prop) (b : Prop) : (term942 a b) = (term943 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem8211212 {_144530 _144607 _144645 _144654 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (_109008 : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term1623 _144530 _144607 _144645 _144654 P pat e q _109008 t _109009 _109010) = (term1624 _144530 _144607 _144645 _144654 P pat e q _109008 t _109009 _109010).
Proof. exact (@lem8211211 (term1096 _144530 _144607 _144645 P pat e _109009 _109010) (term920 _144530 _144607 _144654 P q _109008 t _109009 _109010)). Qed.
Lemma lem8211214 (a : Prop) : (term15 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8211215 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term1220 _144530 _144607 _144645 P pat e _109009 _109010) = ((term835 _144530 _144607 _144645 P pat _109009 _109010) = (term835 _144530 _144607 _144645 P e _109009 _109010)).
Proof. exact (@lem8211214 ((term835 _144530 _144607 _144645 P pat _109009 _109010) = (term835 _144530 _144607 _144645 P e _109009 _109010))). Qed.
Lemma lem8211216 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8211217 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term1221 _144530 _144607 _144645 P pat e _109009 _109010) = (term1222 _144530 _144607 _144645 P pat e _109009 _109010).
Proof. exact (MK_COMB (@lem8211216) (@lem8211215 _144530 _144607 _144645 P pat e _109009 _109010)). Qed.
Lemma lem8211219 (a : Prop) (b : Prop) : (term942 a b) = (term943 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem8211220 {_144530 _144607 _144654 P : Type'} (q : type560 _144530 _144607 P) (_109008 : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term949 _144530 _144607 _144654 P q _109008 t _109009 _109010) = (term950 _144530 _144607 _144654 P q _109008 t _109009 _109010).
Proof. exact (@lem8211219 (term867 _144530 _144607 P q _109009 _109010) ((term835 _144530 _144607 _144654 P t _109008 _109010) = (term835 _144530 _144607 _144654 P t _109009 _109010))). Qed.
Lemma lem8211222 (a : Prop) : (term15 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8211223 {_144530 _144607 P : Type'} (q : type560 _144530 _144607 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term946 _144530 _144607 P q _109009 _109010) = (term822 _144530 _144607 P q _109009 _109010).
Proof. exact (@lem8211222 (term822 _144530 _144607 P q _109009 _109010)). Qed.
Lemma lem8211224 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8211225 {_144530 _144607 P : Type'} (q : type560 _144530 _144607 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term947 _144530 _144607 P q _109009 _109010) = (term948 _144530 _144607 P q _109009 _109010).
Proof. exact (MK_COMB (@lem8211224) (@lem8211223 _144530 _144607 P q _109009 _109010)). Qed.
Lemma lem8211226 {_144530 _144607 _144654 P : Type'} (_109008 : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term839 _144530 _144607 _144654 P _109008 t _109009 _109010) = (term839 _144530 _144607 _144654 P _109008 t _109009 _109010).
Proof. exact (eq_refl (term839 _144530 _144607 _144654 P _109008 t _109009 _109010)). Qed.
Lemma lem8211227 {_144530 _144607 _144654 P : Type'} (q : type560 _144530 _144607 P) (_109008 : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term950 _144530 _144607 _144654 P q _109008 t _109009 _109010) = (term951 _144530 _144607 _144654 P q _109008 t _109009 _109010).
Proof. exact (MK_COMB (@lem8211225 _144530 _144607 P q _109009 _109010) (@lem8211226 _144530 _144607 _144654 P _109008 t _109009 _109010)). Qed.
Lemma lem8211228 {_144530 _144607 _144654 P : Type'} (q : type560 _144530 _144607 P) (_109008 : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term949 _144530 _144607 _144654 P q _109008 t _109009 _109010) = (term951 _144530 _144607 _144654 P q _109008 t _109009 _109010).
Proof. exact (TRANS (@lem8211220 _144530 _144607 _144654 P q _109008 t _109009 _109010) (@lem8211227 _144530 _144607 _144654 P q _109008 t _109009 _109010)). Qed.
Lemma lem8211229 {_144530 _144607 _144645 _144654 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (_109008 : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term1624 _144530 _144607 _144645 _144654 P pat e q _109008 t _109009 _109010) = (term1625 _144530 _144607 _144645 _144654 P pat e q _109008 t _109009 _109010).
Proof. exact (MK_COMB (@lem8211217 _144530 _144607 _144645 P pat e _109009 _109010) (@lem8211228 _144530 _144607 _144654 P q _109008 t _109009 _109010)). Qed.
Lemma lem8211230 {_144530 _144607 _144645 _144654 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (_109008 : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term1623 _144530 _144607 _144645 _144654 P pat e q _109008 t _109009 _109010) = (term1625 _144530 _144607 _144645 _144654 P pat e q _109008 t _109009 _109010).
Proof. exact (TRANS (@lem8211212 _144530 _144607 _144645 _144654 P pat e q _109008 t _109009 _109010) (@lem8211229 _144530 _144607 _144645 _144654 P pat e q _109008 t _109009 _109010)). Qed.
Lemma lem8211231 {_144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (_109008 : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term1622 _144530 _144607 _144645 _144654 P p pat e q _109008 t _109009 _109010) = (term1626 _144530 _144607 _144645 _144654 P p pat e q _109008 t _109009 _109010).
Proof. exact (MK_COMB (@lem8211209 _144530 _144607 P p _109009 _109010) (@lem8211230 _144530 _144607 _144645 _144654 P pat e q _109008 t _109009 _109010)). Qed.
Lemma lem8211232 {_144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (_109008 : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term1621 _144530 _144607 _144645 _144654 P p pat e q _109008 t _109009 _109010) = (term1626 _144530 _144607 _144645 _144654 P p pat e q _109008 t _109009 _109010).
Proof. exact (TRANS (@lem8211204 _144530 _144607 _144645 _144654 P p pat e q _109008 t _109009 _109010) (@lem8211231 _144530 _144607 _144645 _144654 P p pat e q _109008 t _109009 _109010)). Qed.
Lemma lem8211233 {_144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (_109008 : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term1619 _144530 _144607 _144645 _144654 P p pat e q _109008 t _109009 _109010) = (term1627 _144530 _144607 _144645 _144654 P p pat e q _109008 t _109009 _109010).
Proof. exact (MK_COMB (@lem8211201 _144530 _144607 P q _109008 _109010) (@lem8211232 _144530 _144607 _144645 _144654 P p pat e q _109008 t _109009 _109010)). Qed.
Lemma lem8211234 {_144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (_109008 : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term1618 _144530 _144607 _144645 _144654 P p pat e q _109008 t _109009 _109010) = (term1627 _144530 _144607 _144645 _144654 P p pat e q _109008 t _109009 _109010).
Proof. exact (TRANS (@lem8211196 _144530 _144607 _144645 _144654 P p pat e q _109008 t _109009 _109010) (@lem8211233 _144530 _144607 _144645 _144654 P p pat e q _109008 t _109009 _109010)). Qed.
Lemma lem8211235 {_144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (_109008 : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term1617 _144530 _144607 _144645 _144654 P p pat e q _109008 t _109009 _109010) = (term1628 _144530 _144607 _144645 _144654 P p pat e q _109008 t _109009 _109010).
Proof. exact (MK_COMB (@lem8211193 _144530 _144607 _144645 P pat e _109008 _109010) (@lem8211234 _144530 _144607 _144645 _144654 P p pat e q _109008 t _109009 _109010)). Qed.
Lemma lem8211236 {_144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (_109008 : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term1616 _144530 _144607 _144645 _144654 P p pat e q _109008 t _109009 _109010) = (term1628 _144530 _144607 _144645 _144654 P p pat e q _109008 t _109009 _109010).
Proof. exact (TRANS (@lem8211188 _144530 _144607 _144645 _144654 P p pat e q _109008 t _109009 _109010) (@lem8211235 _144530 _144607 _144645 _144654 P p pat e q _109008 t _109009 _109010)). Qed.
Lemma lem8211237 {_144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (_109008 : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term1614 _144530 _144607 _144645 _144654 P p pat e q _109008 t _109009 _109010) = (term1629 _144530 _144607 _144645 _144654 P p pat e q _109008 t _109009 _109010).
Proof. exact (MK_COMB (@lem8211185 _144530 _144607 P p _109008 _109010) (@lem8211236 _144530 _144607 _144645 _144654 P p pat e q _109008 t _109009 _109010)). Qed.
Lemma lem8211238 {_144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (_109008 : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term1613 _144530 _144607 _144645 _144654 P p pat e q _109008 t _109009 _109010) = (term1629 _144530 _144607 _144645 _144654 P p pat e q _109008 t _109009 _109010).
Proof. exact (TRANS (@lem8211180 _144530 _144607 _144645 _144654 P p pat e q _109008 t _109009 _109010) (@lem8211237 _144530 _144607 _144645 _144654 P p pat e q _109008 t _109009 _109010)). Qed.
Lemma lem8211239 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8211240 {_144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (_109008 : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term1630 _144530 _144607 _144645 _144654 P p pat e q _109008 t _109009 _109010) = (term1631 _144530 _144607 _144645 _144654 P p pat e q _109008 t _109009 _109010).
Proof. exact (MK_COMB (@lem8211239) (@lem8211238 _144530 _144607 _144645 _144654 P p pat e q _109008 t _109009 _109010)). Qed.
Lemma lem8211241 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (z'' : type518 _144530 _144607 P) (_109008 : _144530 -> _144607) (_109009 : _144530 -> _144607) (s : P -> _144529) (_109010 : P) : (term862 _144529 _144530 _144607 P lt2 z'' _109008 _109009 s _109010) = (term862 _144529 _144530 _144607 P lt2 z'' _109008 _109009 s _109010).
Proof. exact (eq_refl (term862 _144529 _144530 _144607 P lt2 z'' _109008 _109009 s _109010)). Qed.
Lemma lem8211242 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) (lt2 : type1470 _144529 _144530) (z'' : type518 _144530 _144607 P) (_109008 : _144530 -> _144607) (_109009 : _144530 -> _144607) (s : P -> _144529) (_109010 : P) : (term1612 _144529 _144530 _144607 _144645 _144654 P p pat e q t lt2 z'' _109008 _109009 s _109010) = (term1632 _144529 _144530 _144607 _144645 _144654 P p pat e q t lt2 z'' _109008 _109009 s _109010).
Proof. exact (MK_COMB (@lem8211240 _144530 _144607 _144645 _144654 P p pat e q _109008 t _109009 _109010) (@lem8211241 _144529 _144530 _144607 P lt2 z'' _109008 _109009 s _109010)). Qed.
Lemma lem8211243 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) (lt2 : type1470 _144529 _144530) (z'' : type518 _144530 _144607 P) (_109008 : _144530 -> _144607) (_109009 : _144530 -> _144607) (s : P -> _144529) (_109010 : P) : (term1609 _144529 _144530 _144607 _144645 _144654 P lt2 z'' s p pat e q _109008 t _109009 _109010) = (term1632 _144529 _144530 _144607 _144645 _144654 P p pat e q t lt2 z'' _109008 _109009 s _109010).
Proof. exact (TRANS (@lem8211177 _144529 _144530 _144607 _144645 _144654 P p pat e q t lt2 z'' _109008 _109009 s _109010) (@lem8211242 _144529 _144530 _144607 _144645 _144654 P p pat e q t lt2 z'' _109008 _109009 s _109010)). Qed.
Lemma lem8211245 {_144530 _144607 _144654 P : Type'} (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term839 _144530 _144607 _144654 P f t g a) (h2 : q g a) : term951 _144530 _144607 _144654 P q f t g a.
Proof. exact (conj (@lem8210173 _144530 _144607 P q g a h2) (@lem8210181 _144530 _144607 _144654 P f t g a h1)). Qed.
Lemma lem8211246 {_144530 _144607 _144645 _144654 P : Type'} (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term839 _144530 _144607 _144654 P f t g a) (h2 : (pat g a) = (e g a)) (h3 : q g a) : term1625 _144530 _144607 _144645 _144654 P pat e q f t g a.
Proof. exact (conj (@lem8210166 _144530 _144607 _144645 P pat e g a h2) (@lem8211245 _144530 _144607 _144654 P f t q g a h1 h3)). Qed.
Lemma lem8211247 {_144530 _144607 _144645 _144654 P : Type'} (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term839 _144530 _144607 _144654 P f t g a) (h2 : (pat g a) = (e g a)) (h3 : p g a) (h4 : q g a) : term1626 _144530 _144607 _144645 _144654 P p pat e q f t g a.
Proof. exact (conj (@lem8210159 _144530 _144607 P p g a h3) (@lem8211246 _144530 _144607 _144645 _144654 P f t pat e q g a h1 h2 h4)). Qed.
Lemma lem8211248 {_144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term839 _144530 _144607 _144654 P f t g a) (h2 : (pat g a) = (e g a)) (h3 : p g a) (h4 : q f a) (h5 : q g a) : term1627 _144530 _144607 _144645 _144654 P p pat e q f t g a.
Proof. exact (conj (@lem8210152 _144530 _144607 P q f a h4) (@lem8211247 _144530 _144607 _144645 _144654 P f t pat e p q g a h1 h2 h3 h5)). Qed.
Lemma lem8211249 {_144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term839 _144530 _144607 _144654 P f t g a) (h2 : (pat f a) = (e f a)) (h3 : (pat g a) = (e g a)) (h4 : p g a) (h5 : q f a) (h6 : q g a) : term1628 _144530 _144607 _144645 _144654 P p pat e q f t g a.
Proof. exact (conj (@lem8210145 _144530 _144607 _144645 P pat e f a h2) (@lem8211248 _144530 _144607 _144645 _144654 P t pat e p f q g a h1 h3 h4 h5 h6)). Qed.
Lemma lem8211250 {_144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term839 _144530 _144607 _144654 P f t g a) (h2 : (pat f a) = (e f a)) (h3 : (pat g a) = (e g a)) (h4 : p f a) (h5 : p g a) (h6 : q f a) (h7 : q g a) : term1629 _144530 _144607 _144645 _144654 P p pat e q f t g a.
Proof. exact (conj (@lem8210138 _144530 _144607 P p f a h4) (@lem8211249 _144530 _144607 _144645 _144654 P t pat e p f q g a h1 h2 h3 h5 h6 h7)). Qed.
Lemma lem8211252 {_144529 _144530 _144607 _144645 _144654 P : Type'} (_109008 : _144530 -> _144607) (_109009 : _144530 -> _144607) (_109010 : P) (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z'' : type518 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) (h1 : term685 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z'' t) : term1632 _144529 _144530 _144607 _144645 _144654 P p pat e q t lt2 z'' _109008 _109009 s _109010.
Proof. exact (EQ_MP (@lem8211243 _144529 _144530 _144607 _144645 _144654 P p pat e q t lt2 z'' _109008 _109009 s _109010) (@lem8211174 _144529 _144530 _144607 _144645 _144654 P _109008 _109009 _109010 p pat e q lt2 s z'' t h1)). Qed.
Lemma lem8211253 {_144529 _144530 _144607 _144645 _144654 P : Type'} (_109008 : _144530 -> _144607) (_109009 : _144530 -> _144607) (_109010 : P) (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z'' : type518 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) (h1 : term685 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z'' t) : term1632 _144529 _144530 _144607 _144645 _144654 P p pat e q t lt2 z'' _109008 _109009 s _109010.
Proof. exact (@lem8211252 _144529 _144530 _144607 _144645 _144654 P _109008 _109009 _109010 p pat e q lt2 s z'' t h1). Qed.
Lemma lem8211254 {_144529 _144530 _144607 _144645 _144654 P : Type'} (f : _144530 -> _144607) (g : _144530 -> _144607) (a : P) (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z'' : type518 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) (h1 : term685 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z'' t) : term1632 _144529 _144530 _144607 _144645 _144654 P p pat e q t lt2 z'' f g s a.
Proof. exact (@lem8211253 _144529 _144530 _144607 _144645 _144654 P f g a p pat e q lt2 s z'' t h1). Qed.
Lemma lem8211257 {_144529 _144530 _144607 _144645 _144654 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z'' : type518 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term685 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z'' t) (h2 : term839 _144530 _144607 _144654 P f t g a) (h3 : (pat f a) = (e f a)) (h4 : (pat g a) = (e g a)) (h5 : p f a) (h6 : p g a) (h7 : q f a) (h8 : q g a) : term862 _144529 _144530 _144607 P lt2 z'' f g s a.
Proof. exact (@lem8211254 _144529 _144530 _144607 _144645 _144654 P f g a p pat e q lt2 s z'' t h1 (@lem8211250 _144530 _144607 _144645 _144654 P t pat e p f q g a h2 h3 h4 h5 h6 h7 h8)). Qed.
Lemma lem8211258 {_144529 _144530 _144607 _144645 _144654 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z'' : type518 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term685 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z'' t) (h2 : term839 _144530 _144607 _144654 P f t g a) (h3 : (pat f a) = (e f a)) (h4 : (pat g a) = (e g a)) (h5 : p f a) (h6 : p g a) (h7 : q f a) (h8 : q g a) : term956 _144529 _144530 _144607 P lt2 z'' f g s a.
Proof. exact (fun h0 : term957 _144529 _144530 _144607 P lt2 z'' f g s a => @lem8211257 _144529 _144530 _144607 _144645 _144654 P lt2 s z'' t pat e p f q g a h1 h2 h3 h4 h5 h6 h7 h8). Qed.
Lemma lem8211260 (p : Prop) : (term57 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8211261 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (z'' : type518 _144530 _144607 P) (f : _144530 -> _144607) (g : _144530 -> _144607) (s : P -> _144529) (a : P) : (term956 _144529 _144530 _144607 P lt2 z'' f g s a) = (term862 _144529 _144530 _144607 P lt2 z'' f g s a).
Proof. exact (@lem8211260 (term862 _144529 _144530 _144607 P lt2 z'' f g s a)). Qed.
Lemma lem8211262 {_144529 _144530 _144607 _144645 _144654 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z'' : type518 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term685 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z'' t) (h2 : term839 _144530 _144607 _144654 P f t g a) (h3 : (pat f a) = (e f a)) (h4 : (pat g a) = (e g a)) (h5 : p f a) (h6 : p g a) (h7 : q f a) (h8 : q g a) : term862 _144529 _144530 _144607 P lt2 z'' f g s a.
Proof. exact (EQ_MP (@lem8211261 _144529 _144530 _144607 P lt2 z'' f g s a) (@lem8211258 _144529 _144530 _144607 _144645 _144654 P lt2 s z'' t pat e p f q g a h1 h2 h3 h4 h5 h6 h7 h8)). Qed.
Lemma lem8211268 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem8211269 {_144529 _144530 _144607 P : Type'} (f : _144530 -> _144607) (g : _144530 -> _144607) (lt2 : type1470 _144529 _144530) (_109001 : _144530) (s : P -> _144529) (a : P) : (term832 _144529 _144530 _144607 P lt2 s a f g _109001) = (term958 _144529 _144530 _144607 P f g lt2 _109001 s a).
Proof. exact (@lem8211268 ((@I (_144530 -> _144607) f _109001) = (@I (_144530 -> _144607) g _109001)) (term829 _144529 _144530 P lt2 _109001 s a)). Qed.
Lemma lem8211277 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8211278 {_144529 _144530 _144607 P : Type'} (f : _144530 -> _144607) (g : _144530 -> _144607) (lt2 : type1470 _144529 _144530) (_109001 : _144530) (s : P -> _144529) (a : P) : (term959 _144529 _144530 _144607 P lt2 s a f g _109001) = (term960 _144529 _144530 _144607 P f g lt2 _109001 s a).
Proof. exact (MK_COMB (@lem8211277) (@lem8211269 _144529 _144530 _144607 P f g lt2 _109001 s a)). Qed.
Lemma lem8211286 {_144529 _144530 _144607 P : Type'} (f : _144530 -> _144607) (g : _144530 -> _144607) (lt2 : type1470 _144529 _144530) (_109001 : _144530) (s : P -> _144529) (a : P) : (term958 _144529 _144530 _144607 P f g lt2 _109001 s a) = (term958 _144529 _144530 _144607 P f g lt2 _109001 s a).
Proof. exact (eq_refl (term958 _144529 _144530 _144607 P f g lt2 _109001 s a)). Qed.
Lemma lem8211287 {_144529 _144530 _144607 P : Type'} (f : _144530 -> _144607) (g : _144530 -> _144607) (lt2 : type1470 _144529 _144530) (_109001 : _144530) (s : P -> _144529) (a : P) : ((term832 _144529 _144530 _144607 P lt2 s a f g _109001) = (term958 _144529 _144530 _144607 P f g lt2 _109001 s a)) = ((term958 _144529 _144530 _144607 P f g lt2 _109001 s a) = (term958 _144529 _144530 _144607 P f g lt2 _109001 s a)).
Proof. exact (MK_COMB (@lem8211278 _144529 _144530 _144607 P f g lt2 _109001 s a) (@lem8211286 _144529 _144530 _144607 P f g lt2 _109001 s a)). Qed.
Lemma lem8211289 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem20665 A x) (@lem20664 A x)). Qed.
Lemma lem8211290 (x : Prop) : (x = x) = True.
Proof. exact (@lem8211289 Prop x). Qed.
Lemma lem8211291 {_144529 _144530 _144607 P : Type'} (f : _144530 -> _144607) (g : _144530 -> _144607) (lt2 : type1470 _144529 _144530) (_109001 : _144530) (s : P -> _144529) (a : P) : ((term958 _144529 _144530 _144607 P f g lt2 _109001 s a) = (term958 _144529 _144530 _144607 P f g lt2 _109001 s a)) = True.
Proof. exact (@lem8211290 (term958 _144529 _144530 _144607 P f g lt2 _109001 s a)). Qed.
Lemma lem8211292 {_144529 _144530 _144607 P : Type'} (f : _144530 -> _144607) (g : _144530 -> _144607) (lt2 : type1470 _144529 _144530) (_109001 : _144530) (s : P -> _144529) (a : P) : ((term832 _144529 _144530 _144607 P lt2 s a f g _109001) = (term958 _144529 _144530 _144607 P f g lt2 _109001 s a)) = True.
Proof. exact (TRANS (@lem8211287 _144529 _144530 _144607 P f g lt2 _109001 s a) (@lem8211291 _144529 _144530 _144607 P f g lt2 _109001 s a)). Qed.
Lemma lem8211293 {_144529 _144530 _144607 P : Type'} (f : _144530 -> _144607) (g : _144530 -> _144607) (lt2 : type1470 _144529 _144530) (_109001 : _144530) (s : P -> _144529) (a : P) : True = ((term832 _144529 _144530 _144607 P lt2 s a f g _109001) = (term958 _144529 _144530 _144607 P f g lt2 _109001 s a)).
Proof. exact (SYM (@lem8211292 _144529 _144530 _144607 P f g lt2 _109001 s a)). Qed.
Lemma lem8211294 {_144529 _144530 _144607 P : Type'} (f : _144530 -> _144607) (g : _144530 -> _144607) (lt2 : type1470 _144529 _144530) (_109001 : _144530) (s : P -> _144529) (a : P) : (term832 _144529 _144530 _144607 P lt2 s a f g _109001) = (term958 _144529 _144530 _144607 P f g lt2 _109001 s a).
Proof. exact (EQ_MP (@lem8211293 _144529 _144530 _144607 P f g lt2 _109001 s a) (@lem0)). Qed.
Lemma lem8211295 {_144529 _144530 _144607 P : Type'} (_109001 : _144530) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) : term958 _144529 _144530 _144607 P f g lt2 _109001 s a.
Proof. exact (EQ_MP (@lem8211294 _144529 _144530 _144607 P f g lt2 _109001 s a) (@lem8209066 _144529 _144530 _144607 P _109001 lt2 s a f g h1)). Qed.
Lemma lem8211297 (b : Prop) (a : Prop) : (a \/ b) = (term940 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem8211298 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (_109001 : _144530) : (term958 _144529 _144530 _144607 P f g lt2 _109001 s a) = (term961 _144529 _144530 _144607 P lt2 s a f g _109001).
Proof. exact (@lem8211297 (term829 _144529 _144530 P lt2 _109001 s a) ((@I (_144530 -> _144607) f _109001) = (@I (_144530 -> _144607) g _109001))). Qed.
Lemma lem8211300 (a : Prop) : (term15 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8211301 {_144529 _144530 P : Type'} (lt2 : type1470 _144529 _144530) (_109001 : _144530) (s : P -> _144529) (a : P) : (term962 _144529 _144530 P lt2 _109001 s a) = (term827 _144529 _144530 P lt2 _109001 s a).
Proof. exact (@lem8211300 (term827 _144529 _144530 P lt2 _109001 s a)). Qed.
Lemma lem8211302 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8211303 {_144529 _144530 P : Type'} (lt2 : type1470 _144529 _144530) (_109001 : _144530) (s : P -> _144529) (a : P) : (term963 _144529 _144530 P lt2 _109001 s a) = (term964 _144529 _144530 P lt2 _109001 s a).
Proof. exact (MK_COMB (@lem8211302) (@lem8211301 _144529 _144530 P lt2 _109001 s a)). Qed.
Lemma lem8211304 {_144530 _144607 : Type'} (f : _144530 -> _144607) (g : _144530 -> _144607) (_109001 : _144530) : ((@I (_144530 -> _144607) f _109001) = (@I (_144530 -> _144607) g _109001)) = ((@I (_144530 -> _144607) f _109001) = (@I (_144530 -> _144607) g _109001)).
Proof. exact (eq_refl ((@I (_144530 -> _144607) f _109001) = (@I (_144530 -> _144607) g _109001))). Qed.
Lemma lem8211305 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (_109001 : _144530) : (term961 _144529 _144530 _144607 P lt2 s a f g _109001) = (term965 _144529 _144530 _144607 P lt2 s a f g _109001).
Proof. exact (MK_COMB (@lem8211303 _144529 _144530 P lt2 _109001 s a) (@lem8211304 _144530 _144607 f g _109001)). Qed.
Lemma lem8211306 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (_109001 : _144530) : (term958 _144529 _144530 _144607 P f g lt2 _109001 s a) = (term965 _144529 _144530 _144607 P lt2 s a f g _109001).
Proof. exact (TRANS (@lem8211298 _144529 _144530 _144607 P lt2 s a f g _109001) (@lem8211305 _144529 _144530 _144607 P lt2 s a f g _109001)). Qed.
Lemma lem8211309 {_144529 _144530 _144607 P : Type'} (_109001 : _144530) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) : term965 _144529 _144530 _144607 P lt2 s a f g _109001.
Proof. exact (EQ_MP (@lem8211306 _144529 _144530 _144607 P lt2 s a f g _109001) (@lem8211295 _144529 _144530 _144607 P _109001 lt2 s a f g h1)). Qed.
Lemma lem8211310 {_144529 _144530 _144607 P : Type'} (_109001 : _144530) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) : term965 _144529 _144530 _144607 P lt2 s a f g _109001.
Proof. exact (@lem8211309 _144529 _144530 _144607 P _109001 lt2 s a f g h1). Qed.
Lemma lem8211311 {_144529 _144530 _144607 P : Type'} (z'' : type518 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) : term966 _144529 _144530 _144607 P lt2 s z'' f g a.
Proof. exact (@lem8211310 _144529 _144530 _144607 P (term845 _144530 _144607 P z'' f g a) lt2 s a f g h1). Qed.
Lemma lem8211314 {_144529 _144530 _144607 _144645 _144654 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z'' : type518 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) (h2 : term685 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z'' t) (h3 : term839 _144530 _144607 _144654 P f t g a) (h4 : (pat f a) = (e f a)) (h5 : (pat g a) = (e g a)) (h6 : p f a) (h7 : p g a) (h8 : q f a) (h9 : q g a) : (term848 _144530 _144607 P z'' f g a) = (term851 _144530 _144607 P z'' f g a).
Proof. exact (@lem8211311 _144529 _144530 _144607 P z'' lt2 s a f g h1 (@lem8211262 _144529 _144530 _144607 _144645 _144654 P lt2 s z'' t pat e p f q g a h2 h3 h4 h5 h6 h7 h8 h9)). Qed.
Lemma lem8211315 {_144529 _144530 _144607 _144645 _144654 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z'' : type518 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) (h2 : term685 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z'' t) (h3 : term839 _144530 _144607 _144654 P f t g a) (h4 : (pat f a) = (e f a)) (h5 : (pat g a) = (e g a)) (h6 : p f a) (h7 : p g a) (h8 : q f a) (h9 : q g a) : term967 _144530 _144607 P z'' f g a.
Proof. exact (fun h0 : term855 _144530 _144607 P z'' f g a => @lem8211314 _144529 _144530 _144607 _144645 _144654 P lt2 s z'' t pat e p f q g a h1 h2 h3 h4 h5 h6 h7 h8 h9). Qed.
Lemma lem8211317 (p : Prop) : (term57 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8211318 {_144530 _144607 P : Type'} (z'' : type518 _144530 _144607 P) (f : _144530 -> _144607) (g : _144530 -> _144607) (a : P) : (term967 _144530 _144607 P z'' f g a) = ((term848 _144530 _144607 P z'' f g a) = (term851 _144530 _144607 P z'' f g a)).
Proof. exact (@lem8211317 ((term848 _144530 _144607 P z'' f g a) = (term851 _144530 _144607 P z'' f g a))). Qed.
Lemma lem8211319 {_144529 _144530 _144607 _144645 _144654 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z'' : type518 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) (h2 : term685 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z'' t) (h3 : term839 _144530 _144607 _144654 P f t g a) (h4 : (pat f a) = (e f a)) (h5 : (pat g a) = (e g a)) (h6 : p f a) (h7 : p g a) (h8 : q f a) (h9 : q g a) : (term848 _144530 _144607 P z'' f g a) = (term851 _144530 _144607 P z'' f g a).
Proof. exact (EQ_MP (@lem8211318 _144530 _144607 P z'' f g a) (@lem8211315 _144529 _144530 _144607 _144645 _144654 P lt2 s z'' t pat e p f q g a h1 h2 h3 h4 h5 h6 h7 h8 h9)). Qed.
Lemma lem8211325 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8211326 {_144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (z'' : type518 _144530 _144607 P) (_109008 : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term1554 _144530 _144607 _144645 _144654 P p pat e q z'' _109008 t _109009 _109010) = (term1633 _144530 _144607 _144645 _144654 P p pat e q z'' _109008 t _109009 _109010).
Proof. exact (@lem8211325 (term1096 _144530 _144607 _144645 P pat e _109008 _109010) (term867 _144530 _144607 P p _109008 _109010) (term1634 _144530 _144607 _144645 _144654 P p pat e q z'' _109008 t _109009 _109010)). Qed.
Lemma lem8211352 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8211353 {_144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (z'' : type518 _144530 _144607 P) (_109008 : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term1634 _144530 _144607 _144645 _144654 P p pat e q z'' _109008 t _109009 _109010) = (term1635 _144530 _144607 _144645 _144654 P p pat e q z'' _109008 t _109009 _109010).
Proof. exact (@lem8211352 (term867 _144530 _144607 P p _109009 _109010) (term867 _144530 _144607 P q _109008 _109010) (term1548 _144530 _144607 _144645 _144654 P pat e q z'' _109008 t _109009 _109010)). Qed.
Lemma lem8211367 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8211368 {_144530 _144607 _144645 _144654 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (z'' : type518 _144530 _144607 P) (_109008 : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term1636 _144530 _144607 _144645 _144654 P pat e q z'' _109008 t _109009 _109010) = (term1637 _144530 _144607 _144645 _144654 P pat e q z'' _109008 t _109009 _109010).
Proof. exact (@lem8211367 (term1096 _144530 _144607 _144645 P pat e _109009 _109010) (term867 _144530 _144607 P q _109008 _109010) (term914 _144530 _144607 _144654 P q z'' _109008 t _109009 _109010)). Qed.
Lemma lem8211394 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8211395 {_144530 _144607 _144654 P : Type'} (z'' : type518 _144530 _144607 P) (q : type560 _144530 _144607 P) (_109008 : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term914 _144530 _144607 _144654 P q z'' _109008 t _109009 _109010) = (term968 _144530 _144607 _144654 P z'' q _109008 t _109009 _109010).
Proof. exact (@lem8211394 (term855 _144530 _144607 P z'' _109008 _109009 _109010) (term867 _144530 _144607 P q _109009 _109010) ((term835 _144530 _144607 _144654 P t _109008 _109010) = (term835 _144530 _144607 _144654 P t _109009 _109010))). Qed.
Lemma lem8211411 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem8211412 {_144530 _144607 _144654 P : Type'} (_109008 : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (q : type560 _144530 _144607 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term920 _144530 _144607 _144654 P q _109008 t _109009 _109010) = (term921 _144530 _144607 _144654 P _109008 t q _109009 _109010).
Proof. exact (@lem8211411 ((term835 _144530 _144607 _144654 P t _109008 _109010) = (term835 _144530 _144607 _144654 P t _109009 _109010)) (term867 _144530 _144607 P q _109009 _109010)). Qed.
Lemma lem8211420 {_144530 _144607 P : Type'} (z'' : type518 _144530 _144607 P) (_109008 : _144530 -> _144607) (_109009 : _144530 -> _144607) (_109010 : P) : (term969 _144530 _144607 P z'' _109008 _109009 _109010) = (term969 _144530 _144607 P z'' _109008 _109009 _109010).
Proof. exact (eq_refl (term969 _144530 _144607 P z'' _109008 _109009 _109010)). Qed.
Lemma lem8211421 {_144530 _144607 _144654 P : Type'} (z'' : type518 _144530 _144607 P) (_109008 : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (q : type560 _144530 _144607 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term968 _144530 _144607 _144654 P z'' q _109008 t _109009 _109010) = (term970 _144530 _144607 _144654 P z'' _109008 t q _109009 _109010).
Proof. exact (MK_COMB (@lem8211420 _144530 _144607 P z'' _109008 _109009 _109010) (@lem8211412 _144530 _144607 _144654 P _109008 t q _109009 _109010)). Qed.
Lemma lem8211425 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8211426 {_144530 _144607 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (z'' : type518 _144530 _144607 P) (_109008 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term970 _144530 _144607 _144654 P z'' _109008 t q _109009 _109010) = (term971 _144530 _144607 _144654 P t z'' _109008 q _109009 _109010).
Proof. exact (@lem8211425 ((term835 _144530 _144607 _144654 P t _109008 _109010) = (term835 _144530 _144607 _144654 P t _109009 _109010)) (term855 _144530 _144607 P z'' _109008 _109009 _109010) (term867 _144530 _144607 P q _109009 _109010)). Qed.
Lemma lem8211446 {_144530 _144607 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (z'' : type518 _144530 _144607 P) (_109008 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term968 _144530 _144607 _144654 P z'' q _109008 t _109009 _109010) = (term971 _144530 _144607 _144654 P t z'' _109008 q _109009 _109010).
Proof. exact (TRANS (@lem8211421 _144530 _144607 _144654 P z'' _109008 t q _109009 _109010) (@lem8211426 _144530 _144607 _144654 P t z'' _109008 q _109009 _109010)). Qed.
Lemma lem8211447 {_144530 _144607 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (z'' : type518 _144530 _144607 P) (_109008 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term914 _144530 _144607 _144654 P q z'' _109008 t _109009 _109010) = (term971 _144530 _144607 _144654 P t z'' _109008 q _109009 _109010).
Proof. exact (TRANS (@lem8211395 _144530 _144607 _144654 P z'' q _109008 t _109009 _109010) (@lem8211446 _144530 _144607 _144654 P t z'' _109008 q _109009 _109010)). Qed.
Lemma lem8211448 {_144530 _144607 P : Type'} (q : type560 _144530 _144607 P) (_109008 : _144530 -> _144607) (_109010 : P) : (term868 _144530 _144607 P q _109008 _109010) = (term868 _144530 _144607 P q _109008 _109010).
Proof. exact (eq_refl (term868 _144530 _144607 P q _109008 _109010)). Qed.
Lemma lem8211449 {_144530 _144607 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (z'' : type518 _144530 _144607 P) (_109008 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term915 _144530 _144607 _144654 P q z'' _109008 t _109009 _109010) = (term972 _144530 _144607 _144654 P t z'' _109008 q _109009 _109010).
Proof. exact (MK_COMB (@lem8211448 _144530 _144607 P q _109008 _109010) (@lem8211447 _144530 _144607 _144654 P t z'' _109008 q _109009 _109010)). Qed.
Lemma lem8211453 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8211454 {_144530 _144607 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (z'' : type518 _144530 _144607 P) (_109008 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term972 _144530 _144607 _144654 P t z'' _109008 q _109009 _109010) = (term973 _144530 _144607 _144654 P t z'' _109008 q _109009 _109010).
Proof. exact (@lem8211453 ((term835 _144530 _144607 _144654 P t _109008 _109010) = (term835 _144530 _144607 _144654 P t _109009 _109010)) (term867 _144530 _144607 P q _109008 _109010) (term974 _144530 _144607 P z'' _109008 q _109009 _109010)). Qed.
Lemma lem8211470 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8211471 {_144530 _144607 P : Type'} (z'' : type518 _144530 _144607 P) (_109008 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term975 _144530 _144607 P z'' _109008 q _109009 _109010) = (term976 _144530 _144607 P z'' _109008 q _109009 _109010).
Proof. exact (@lem8211470 (term855 _144530 _144607 P z'' _109008 _109009 _109010) (term867 _144530 _144607 P q _109008 _109010) (term867 _144530 _144607 P q _109009 _109010)). Qed.
Lemma lem8211489 {_144530 _144607 _144654 P : Type'} (_109008 : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term930 _144530 _144607 _144654 P _109008 t _109009 _109010) = (term930 _144530 _144607 _144654 P _109008 t _109009 _109010).
Proof. exact (eq_refl (term930 _144530 _144607 _144654 P _109008 t _109009 _109010)). Qed.
Lemma lem8211490 {_144530 _144607 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (z'' : type518 _144530 _144607 P) (_109008 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term973 _144530 _144607 _144654 P t z'' _109008 q _109009 _109010) = (term977 _144530 _144607 _144654 P t z'' _109008 q _109009 _109010).
Proof. exact (MK_COMB (@lem8211489 _144530 _144607 _144654 P _109008 t _109009 _109010) (@lem8211471 _144530 _144607 P z'' _109008 q _109009 _109010)). Qed.
Lemma lem8211501 {_144530 _144607 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (z'' : type518 _144530 _144607 P) (_109008 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term972 _144530 _144607 _144654 P t z'' _109008 q _109009 _109010) = (term977 _144530 _144607 _144654 P t z'' _109008 q _109009 _109010).
Proof. exact (TRANS (@lem8211454 _144530 _144607 _144654 P t z'' _109008 q _109009 _109010) (@lem8211490 _144530 _144607 _144654 P t z'' _109008 q _109009 _109010)). Qed.
Lemma lem8211502 {_144530 _144607 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (z'' : type518 _144530 _144607 P) (_109008 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term915 _144530 _144607 _144654 P q z'' _109008 t _109009 _109010) = (term977 _144530 _144607 _144654 P t z'' _109008 q _109009 _109010).
Proof. exact (TRANS (@lem8211449 _144530 _144607 _144654 P t z'' _109008 q _109009 _109010) (@lem8211501 _144530 _144607 _144654 P t z'' _109008 q _109009 _109010)). Qed.
Lemma lem8211503 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term1184 _144530 _144607 _144645 P pat e _109009 _109010) = (term1184 _144530 _144607 _144645 P pat e _109009 _109010).
Proof. exact (eq_refl (term1184 _144530 _144607 _144645 P pat e _109009 _109010)). Qed.
Lemma lem8211504 {_144530 _144607 _144645 _144654 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (t : type564 _144530 _144607 _144654 P) (z'' : type518 _144530 _144607 P) (_109008 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term1637 _144530 _144607 _144645 _144654 P pat e q z'' _109008 t _109009 _109010) = (term1638 _144530 _144607 _144645 _144654 P pat e t z'' _109008 q _109009 _109010).
Proof. exact (MK_COMB (@lem8211503 _144530 _144607 _144645 P pat e _109009 _109010) (@lem8211502 _144530 _144607 _144654 P t z'' _109008 q _109009 _109010)). Qed.
Lemma lem8211508 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8211509 {_144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (z'' : type518 _144530 _144607 P) (_109008 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term1638 _144530 _144607 _144645 _144654 P pat e t z'' _109008 q _109009 _109010) = (term1639 _144530 _144607 _144645 _144654 P t pat e z'' _109008 q _109009 _109010).
Proof. exact (@lem8211508 ((term835 _144530 _144607 _144654 P t _109008 _109010) = (term835 _144530 _144607 _144654 P t _109009 _109010)) (term1096 _144530 _144607 _144645 P pat e _109009 _109010) (term976 _144530 _144607 P z'' _109008 q _109009 _109010)). Qed.
Lemma lem8211525 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8211526 {_144530 _144607 _144645 P : Type'} (z'' : type518 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (_109008 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term1640 _144530 _144607 _144645 P pat e z'' _109008 q _109009 _109010) = (term1641 _144530 _144607 _144645 P z'' pat e _109008 q _109009 _109010).
Proof. exact (@lem8211525 (term855 _144530 _144607 P z'' _109008 _109009 _109010) (term1096 _144530 _144607 _144645 P pat e _109009 _109010) (term939 _144530 _144607 P _109008 q _109009 _109010)). Qed.
Lemma lem8211556 {_144530 _144607 _144654 P : Type'} (_109008 : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term930 _144530 _144607 _144654 P _109008 t _109009 _109010) = (term930 _144530 _144607 _144654 P _109008 t _109009 _109010).
Proof. exact (eq_refl (term930 _144530 _144607 _144654 P _109008 t _109009 _109010)). Qed.
Lemma lem8211557 {_144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (z'' : type518 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (_109008 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term1639 _144530 _144607 _144645 _144654 P t pat e z'' _109008 q _109009 _109010) = (term1642 _144530 _144607 _144645 _144654 P t z'' pat e _109008 q _109009 _109010).
Proof. exact (MK_COMB (@lem8211556 _144530 _144607 _144654 P _109008 t _109009 _109010) (@lem8211526 _144530 _144607 _144645 P z'' pat e _109008 q _109009 _109010)). Qed.
Lemma lem8211568 {_144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (z'' : type518 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (_109008 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term1638 _144530 _144607 _144645 _144654 P pat e t z'' _109008 q _109009 _109010) = (term1642 _144530 _144607 _144645 _144654 P t z'' pat e _109008 q _109009 _109010).
Proof. exact (TRANS (@lem8211509 _144530 _144607 _144645 _144654 P t pat e z'' _109008 q _109009 _109010) (@lem8211557 _144530 _144607 _144645 _144654 P t z'' pat e _109008 q _109009 _109010)). Qed.
Lemma lem8211569 {_144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (z'' : type518 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (_109008 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term1637 _144530 _144607 _144645 _144654 P pat e q z'' _109008 t _109009 _109010) = (term1642 _144530 _144607 _144645 _144654 P t z'' pat e _109008 q _109009 _109010).
Proof. exact (TRANS (@lem8211504 _144530 _144607 _144645 _144654 P pat e t z'' _109008 q _109009 _109010) (@lem8211568 _144530 _144607 _144645 _144654 P t z'' pat e _109008 q _109009 _109010)). Qed.
Lemma lem8211570 {_144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (z'' : type518 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (_109008 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term1636 _144530 _144607 _144645 _144654 P pat e q z'' _109008 t _109009 _109010) = (term1642 _144530 _144607 _144645 _144654 P t z'' pat e _109008 q _109009 _109010).
Proof. exact (TRANS (@lem8211368 _144530 _144607 _144645 _144654 P pat e q z'' _109008 t _109009 _109010) (@lem8211569 _144530 _144607 _144645 _144654 P t z'' pat e _109008 q _109009 _109010)). Qed.
Lemma lem8211571 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term868 _144530 _144607 P p _109009 _109010) = (term868 _144530 _144607 P p _109009 _109010).
Proof. exact (eq_refl (term868 _144530 _144607 P p _109009 _109010)). Qed.
Lemma lem8211572 {_144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) (z'' : type518 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (_109008 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term1635 _144530 _144607 _144645 _144654 P p pat e q z'' _109008 t _109009 _109010) = (term1643 _144530 _144607 _144645 _144654 P p t z'' pat e _109008 q _109009 _109010).
Proof. exact (MK_COMB (@lem8211571 _144530 _144607 P p _109009 _109010) (@lem8211570 _144530 _144607 _144645 _144654 P t z'' pat e _109008 q _109009 _109010)). Qed.
Lemma lem8211576 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8211577 {_144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (p : type560 _144530 _144607 P) (z'' : type518 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (_109008 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term1643 _144530 _144607 _144645 _144654 P p t z'' pat e _109008 q _109009 _109010) = (term1644 _144530 _144607 _144645 _144654 P t p z'' pat e _109008 q _109009 _109010).
Proof. exact (@lem8211576 ((term835 _144530 _144607 _144654 P t _109008 _109010) = (term835 _144530 _144607 _144654 P t _109009 _109010)) (term867 _144530 _144607 P p _109009 _109010) (term1641 _144530 _144607 _144645 P z'' pat e _109008 q _109009 _109010)). Qed.
Lemma lem8211593 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8211594 {_144530 _144607 _144645 P : Type'} (z'' : type518 _144530 _144607 P) (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (_109008 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term1645 _144530 _144607 _144645 P p z'' pat e _109008 q _109009 _109010) = (term1646 _144530 _144607 _144645 P z'' p pat e _109008 q _109009 _109010).
Proof. exact (@lem8211593 (term855 _144530 _144607 P z'' _109008 _109009 _109010) (term867 _144530 _144607 P p _109009 _109010) (term1569 _144530 _144607 _144645 P pat e _109008 q _109009 _109010)). Qed.
Lemma lem8211610 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8211611 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_109008 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term1570 _144530 _144607 _144645 P p pat e _109008 q _109009 _109010) = (term1571 _144530 _144607 _144645 P pat e p _109008 q _109009 _109010).
Proof. exact (@lem8211610 (term1096 _144530 _144607 _144645 P pat e _109009 _109010) (term867 _144530 _144607 P p _109009 _109010) (term939 _144530 _144607 P _109008 q _109009 _109010)). Qed.
Lemma lem8211639 {_144530 _144607 P : Type'} (z'' : type518 _144530 _144607 P) (_109008 : _144530 -> _144607) (_109009 : _144530 -> _144607) (_109010 : P) : (term969 _144530 _144607 P z'' _109008 _109009 _109010) = (term969 _144530 _144607 P z'' _109008 _109009 _109010).
Proof. exact (eq_refl (term969 _144530 _144607 P z'' _109008 _109009 _109010)). Qed.
Lemma lem8211640 {_144530 _144607 _144645 P : Type'} (z'' : type518 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_109008 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term1646 _144530 _144607 _144645 P z'' p pat e _109008 q _109009 _109010) = (term1647 _144530 _144607 _144645 P z'' pat e p _109008 q _109009 _109010).
Proof. exact (MK_COMB (@lem8211639 _144530 _144607 P z'' _109008 _109009 _109010) (@lem8211611 _144530 _144607 _144645 P pat e p _109008 q _109009 _109010)). Qed.
Lemma lem8211651 {_144530 _144607 _144645 P : Type'} (z'' : type518 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_109008 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term1645 _144530 _144607 _144645 P p z'' pat e _109008 q _109009 _109010) = (term1647 _144530 _144607 _144645 P z'' pat e p _109008 q _109009 _109010).
Proof. exact (TRANS (@lem8211594 _144530 _144607 _144645 P z'' p pat e _109008 q _109009 _109010) (@lem8211640 _144530 _144607 _144645 P z'' pat e p _109008 q _109009 _109010)). Qed.
Lemma lem8211652 {_144530 _144607 _144654 P : Type'} (_109008 : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term930 _144530 _144607 _144654 P _109008 t _109009 _109010) = (term930 _144530 _144607 _144654 P _109008 t _109009 _109010).
Proof. exact (eq_refl (term930 _144530 _144607 _144654 P _109008 t _109009 _109010)). Qed.
Lemma lem8211653 {_144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (z'' : type518 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_109008 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term1644 _144530 _144607 _144645 _144654 P t p z'' pat e _109008 q _109009 _109010) = (term1648 _144530 _144607 _144645 _144654 P t z'' pat e p _109008 q _109009 _109010).
Proof. exact (MK_COMB (@lem8211652 _144530 _144607 _144654 P _109008 t _109009 _109010) (@lem8211651 _144530 _144607 _144645 P z'' pat e p _109008 q _109009 _109010)). Qed.
Lemma lem8211664 {_144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (z'' : type518 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_109008 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term1643 _144530 _144607 _144645 _144654 P p t z'' pat e _109008 q _109009 _109010) = (term1648 _144530 _144607 _144645 _144654 P t z'' pat e p _109008 q _109009 _109010).
Proof. exact (TRANS (@lem8211577 _144530 _144607 _144645 _144654 P t p z'' pat e _109008 q _109009 _109010) (@lem8211653 _144530 _144607 _144645 _144654 P t z'' pat e p _109008 q _109009 _109010)). Qed.
Lemma lem8211665 {_144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (z'' : type518 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_109008 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term1635 _144530 _144607 _144645 _144654 P p pat e q z'' _109008 t _109009 _109010) = (term1648 _144530 _144607 _144645 _144654 P t z'' pat e p _109008 q _109009 _109010).
Proof. exact (TRANS (@lem8211572 _144530 _144607 _144645 _144654 P p t z'' pat e _109008 q _109009 _109010) (@lem8211664 _144530 _144607 _144645 _144654 P t z'' pat e p _109008 q _109009 _109010)). Qed.
Lemma lem8211666 {_144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (z'' : type518 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_109008 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term1634 _144530 _144607 _144645 _144654 P p pat e q z'' _109008 t _109009 _109010) = (term1648 _144530 _144607 _144645 _144654 P t z'' pat e p _109008 q _109009 _109010).
Proof. exact (TRANS (@lem8211353 _144530 _144607 _144645 _144654 P p pat e q z'' _109008 t _109009 _109010) (@lem8211665 _144530 _144607 _144645 _144654 P t z'' pat e p _109008 q _109009 _109010)). Qed.
Lemma lem8211667 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (_109008 : _144530 -> _144607) (_109010 : P) : (term868 _144530 _144607 P p _109008 _109010) = (term868 _144530 _144607 P p _109008 _109010).
Proof. exact (eq_refl (term868 _144530 _144607 P p _109008 _109010)). Qed.
Lemma lem8211668 {_144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (z'' : type518 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_109008 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term1649 _144530 _144607 _144645 _144654 P p pat e q z'' _109008 t _109009 _109010) = (term1650 _144530 _144607 _144645 _144654 P t z'' pat e p _109008 q _109009 _109010).
Proof. exact (MK_COMB (@lem8211667 _144530 _144607 P p _109008 _109010) (@lem8211666 _144530 _144607 _144645 _144654 P t z'' pat e p _109008 q _109009 _109010)). Qed.
Lemma lem8211672 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8211673 {_144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (z'' : type518 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_109008 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term1650 _144530 _144607 _144645 _144654 P t z'' pat e p _109008 q _109009 _109010) = (term1651 _144530 _144607 _144645 _144654 P t z'' pat e p _109008 q _109009 _109010).
Proof. exact (@lem8211672 ((term835 _144530 _144607 _144654 P t _109008 _109010) = (term835 _144530 _144607 _144654 P t _109009 _109010)) (term867 _144530 _144607 P p _109008 _109010) (term1647 _144530 _144607 _144645 P z'' pat e p _109008 q _109009 _109010)). Qed.
Lemma lem8211689 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8211690 {_144530 _144607 _144645 P : Type'} (z'' : type518 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_109008 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term1652 _144530 _144607 _144645 P z'' pat e p _109008 q _109009 _109010) = (term1653 _144530 _144607 _144645 P z'' pat e p _109008 q _109009 _109010).
Proof. exact (@lem8211689 (term855 _144530 _144607 P z'' _109008 _109009 _109010) (term867 _144530 _144607 P p _109008 _109010) (term1571 _144530 _144607 _144645 P pat e p _109008 q _109009 _109010)). Qed.
Lemma lem8211706 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8211707 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_109008 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term1579 _144530 _144607 _144645 P pat e p _109008 q _109009 _109010) = (term1580 _144530 _144607 _144645 P pat e p _109008 q _109009 _109010).
Proof. exact (@lem8211706 (term1096 _144530 _144607 _144645 P pat e _109009 _109010) (term867 _144530 _144607 P p _109008 _109010) (term1581 _144530 _144607 P p _109008 q _109009 _109010)). Qed.
Lemma lem8211745 {_144530 _144607 P : Type'} (z'' : type518 _144530 _144607 P) (_109008 : _144530 -> _144607) (_109009 : _144530 -> _144607) (_109010 : P) : (term969 _144530 _144607 P z'' _109008 _109009 _109010) = (term969 _144530 _144607 P z'' _109008 _109009 _109010).
Proof. exact (eq_refl (term969 _144530 _144607 P z'' _109008 _109009 _109010)). Qed.
Lemma lem8211746 {_144530 _144607 _144645 P : Type'} (z'' : type518 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_109008 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term1653 _144530 _144607 _144645 P z'' pat e p _109008 q _109009 _109010) = (term1654 _144530 _144607 _144645 P z'' pat e p _109008 q _109009 _109010).
Proof. exact (MK_COMB (@lem8211745 _144530 _144607 P z'' _109008 _109009 _109010) (@lem8211707 _144530 _144607 _144645 P pat e p _109008 q _109009 _109010)). Qed.
Lemma lem8211757 {_144530 _144607 _144645 P : Type'} (z'' : type518 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_109008 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term1652 _144530 _144607 _144645 P z'' pat e p _109008 q _109009 _109010) = (term1654 _144530 _144607 _144645 P z'' pat e p _109008 q _109009 _109010).
Proof. exact (TRANS (@lem8211690 _144530 _144607 _144645 P z'' pat e p _109008 q _109009 _109010) (@lem8211746 _144530 _144607 _144645 P z'' pat e p _109008 q _109009 _109010)). Qed.
Lemma lem8211758 {_144530 _144607 _144654 P : Type'} (_109008 : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term930 _144530 _144607 _144654 P _109008 t _109009 _109010) = (term930 _144530 _144607 _144654 P _109008 t _109009 _109010).
Proof. exact (eq_refl (term930 _144530 _144607 _144654 P _109008 t _109009 _109010)). Qed.
Lemma lem8211759 {_144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (z'' : type518 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_109008 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term1651 _144530 _144607 _144645 _144654 P t z'' pat e p _109008 q _109009 _109010) = (term1655 _144530 _144607 _144645 _144654 P t z'' pat e p _109008 q _109009 _109010).
Proof. exact (MK_COMB (@lem8211758 _144530 _144607 _144654 P _109008 t _109009 _109010) (@lem8211757 _144530 _144607 _144645 P z'' pat e p _109008 q _109009 _109010)). Qed.
Lemma lem8211770 {_144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (z'' : type518 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_109008 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term1650 _144530 _144607 _144645 _144654 P t z'' pat e p _109008 q _109009 _109010) = (term1655 _144530 _144607 _144645 _144654 P t z'' pat e p _109008 q _109009 _109010).
Proof. exact (TRANS (@lem8211673 _144530 _144607 _144645 _144654 P t z'' pat e p _109008 q _109009 _109010) (@lem8211759 _144530 _144607 _144645 _144654 P t z'' pat e p _109008 q _109009 _109010)). Qed.
Lemma lem8211771 {_144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (z'' : type518 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_109008 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term1649 _144530 _144607 _144645 _144654 P p pat e q z'' _109008 t _109009 _109010) = (term1655 _144530 _144607 _144645 _144654 P t z'' pat e p _109008 q _109009 _109010).
Proof. exact (TRANS (@lem8211668 _144530 _144607 _144645 _144654 P t z'' pat e p _109008 q _109009 _109010) (@lem8211770 _144530 _144607 _144645 _144654 P t z'' pat e p _109008 q _109009 _109010)). Qed.
Lemma lem8211772 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (_109008 : _144530 -> _144607) (_109010 : P) : (term1184 _144530 _144607 _144645 P pat e _109008 _109010) = (term1184 _144530 _144607 _144645 P pat e _109008 _109010).
Proof. exact (eq_refl (term1184 _144530 _144607 _144645 P pat e _109008 _109010)). Qed.
Lemma lem8211773 {_144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (z'' : type518 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_109008 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term1633 _144530 _144607 _144645 _144654 P p pat e q z'' _109008 t _109009 _109010) = (term1656 _144530 _144607 _144645 _144654 P t z'' pat e p _109008 q _109009 _109010).
Proof. exact (MK_COMB (@lem8211772 _144530 _144607 _144645 P pat e _109008 _109010) (@lem8211771 _144530 _144607 _144645 _144654 P t z'' pat e p _109008 q _109009 _109010)). Qed.
Lemma lem8211777 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8211778 {_144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (z'' : type518 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_109008 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term1656 _144530 _144607 _144645 _144654 P t z'' pat e p _109008 q _109009 _109010) = (term1657 _144530 _144607 _144645 _144654 P t z'' pat e p _109008 q _109009 _109010).
Proof. exact (@lem8211777 ((term835 _144530 _144607 _144654 P t _109008 _109010) = (term835 _144530 _144607 _144654 P t _109009 _109010)) (term1096 _144530 _144607 _144645 P pat e _109008 _109010) (term1654 _144530 _144607 _144645 P z'' pat e p _109008 q _109009 _109010)). Qed.
Lemma lem8211794 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8211795 {_144530 _144607 _144645 P : Type'} (z'' : type518 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_109008 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term1658 _144530 _144607 _144645 P z'' pat e p _109008 q _109009 _109010) = (term1659 _144530 _144607 _144645 P z'' pat e p _109008 q _109009 _109010).
Proof. exact (@lem8211794 (term855 _144530 _144607 P z'' _109008 _109009 _109010) (term1096 _144530 _144607 _144645 P pat e _109008 _109010) (term1580 _144530 _144607 _144645 P pat e p _109008 q _109009 _109010)). Qed.
Lemma lem8211857 {_144530 _144607 _144654 P : Type'} (_109008 : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term930 _144530 _144607 _144654 P _109008 t _109009 _109010) = (term930 _144530 _144607 _144654 P _109008 t _109009 _109010).
Proof. exact (eq_refl (term930 _144530 _144607 _144654 P _109008 t _109009 _109010)). Qed.
Lemma lem8211858 {_144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (z'' : type518 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_109008 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term1657 _144530 _144607 _144645 _144654 P t z'' pat e p _109008 q _109009 _109010) = (term1660 _144530 _144607 _144645 _144654 P t z'' pat e p _109008 q _109009 _109010).
Proof. exact (MK_COMB (@lem8211857 _144530 _144607 _144654 P _109008 t _109009 _109010) (@lem8211795 _144530 _144607 _144645 P z'' pat e p _109008 q _109009 _109010)). Qed.
Lemma lem8211869 {_144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (z'' : type518 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_109008 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term1656 _144530 _144607 _144645 _144654 P t z'' pat e p _109008 q _109009 _109010) = (term1660 _144530 _144607 _144645 _144654 P t z'' pat e p _109008 q _109009 _109010).
Proof. exact (TRANS (@lem8211778 _144530 _144607 _144645 _144654 P t z'' pat e p _109008 q _109009 _109010) (@lem8211858 _144530 _144607 _144645 _144654 P t z'' pat e p _109008 q _109009 _109010)). Qed.
Lemma lem8211870 {_144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (z'' : type518 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_109008 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term1633 _144530 _144607 _144645 _144654 P p pat e q z'' _109008 t _109009 _109010) = (term1660 _144530 _144607 _144645 _144654 P t z'' pat e p _109008 q _109009 _109010).
Proof. exact (TRANS (@lem8211773 _144530 _144607 _144645 _144654 P t z'' pat e p _109008 q _109009 _109010) (@lem8211869 _144530 _144607 _144645 _144654 P t z'' pat e p _109008 q _109009 _109010)). Qed.
Lemma lem8211871 {_144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (z'' : type518 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_109008 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term1554 _144530 _144607 _144645 _144654 P p pat e q z'' _109008 t _109009 _109010) = (term1660 _144530 _144607 _144645 _144654 P t z'' pat e p _109008 q _109009 _109010).
Proof. exact (TRANS (@lem8211326 _144530 _144607 _144645 _144654 P p pat e q z'' _109008 t _109009 _109010) (@lem8211870 _144530 _144607 _144645 _144654 P t z'' pat e p _109008 q _109009 _109010)). Qed.
Lemma lem8211872 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8211873 {_144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (z'' : type518 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_109008 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term1661 _144530 _144607 _144645 _144654 P p pat e q z'' _109008 t _109009 _109010) = (term1662 _144530 _144607 _144645 _144654 P t z'' pat e p _109008 q _109009 _109010).
Proof. exact (MK_COMB (@lem8211872) (@lem8211871 _144530 _144607 _144645 _144654 P t z'' pat e p _109008 q _109009 _109010)). Qed.
Lemma lem8211889 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8211890 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (z'' : type518 _144530 _144607 P) (_109008 : _144530 -> _144607) (_109009 : _144530 -> _144607) (_109010 : P) : (term1663 _144530 _144607 _144645 P p pat e q z'' _109008 _109009 _109010) = (term1664 _144530 _144607 _144645 P p pat e q z'' _109008 _109009 _109010).
Proof. exact (@lem8211889 (term1096 _144530 _144607 _144645 P pat e _109008 _109010) (term867 _144530 _144607 P p _109008 _109010) (term1665 _144530 _144607 _144645 P p pat e q z'' _109008 _109009 _109010)). Qed.
Lemma lem8211916 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8211917 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (z'' : type518 _144530 _144607 P) (_109008 : _144530 -> _144607) (_109009 : _144530 -> _144607) (_109010 : P) : (term1665 _144530 _144607 _144645 P p pat e q z'' _109008 _109009 _109010) = (term1666 _144530 _144607 _144645 P p pat e q z'' _109008 _109009 _109010).
Proof. exact (@lem8211916 (term867 _144530 _144607 P p _109009 _109010) (term867 _144530 _144607 P q _109008 _109010) (term1667 _144530 _144607 _144645 P pat e q z'' _109008 _109009 _109010)). Qed.
Lemma lem8211931 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8211932 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (z'' : type518 _144530 _144607 P) (_109008 : _144530 -> _144607) (_109009 : _144530 -> _144607) (_109010 : P) : (term1668 _144530 _144607 _144645 P pat e q z'' _109008 _109009 _109010) = (term1669 _144530 _144607 _144645 P pat e q z'' _109008 _109009 _109010).
Proof. exact (@lem8211931 (term1096 _144530 _144607 _144645 P pat e _109009 _109010) (term867 _144530 _144607 P q _109008 _109010) (term890 _144530 _144607 P q z'' _109008 _109009 _109010)). Qed.
Lemma lem8211958 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem8211959 {_144530 _144607 P : Type'} (z'' : type518 _144530 _144607 P) (_109008 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term890 _144530 _144607 P q z'' _109008 _109009 _109010) = (term974 _144530 _144607 P z'' _109008 q _109009 _109010).
Proof. exact (@lem8211958 (term855 _144530 _144607 P z'' _109008 _109009 _109010) (term867 _144530 _144607 P q _109009 _109010)). Qed.
Lemma lem8211967 {_144530 _144607 P : Type'} (q : type560 _144530 _144607 P) (_109008 : _144530 -> _144607) (_109010 : P) : (term868 _144530 _144607 P q _109008 _109010) = (term868 _144530 _144607 P q _109008 _109010).
Proof. exact (eq_refl (term868 _144530 _144607 P q _109008 _109010)). Qed.
Lemma lem8211968 {_144530 _144607 P : Type'} (z'' : type518 _144530 _144607 P) (_109008 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term895 _144530 _144607 P q z'' _109008 _109009 _109010) = (term975 _144530 _144607 P z'' _109008 q _109009 _109010).
Proof. exact (MK_COMB (@lem8211967 _144530 _144607 P q _109008 _109010) (@lem8211959 _144530 _144607 P z'' _109008 q _109009 _109010)). Qed.
Lemma lem8211972 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8211973 {_144530 _144607 P : Type'} (z'' : type518 _144530 _144607 P) (_109008 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term975 _144530 _144607 P z'' _109008 q _109009 _109010) = (term976 _144530 _144607 P z'' _109008 q _109009 _109010).
Proof. exact (@lem8211972 (term855 _144530 _144607 P z'' _109008 _109009 _109010) (term867 _144530 _144607 P q _109008 _109010) (term867 _144530 _144607 P q _109009 _109010)). Qed.
Lemma lem8211991 {_144530 _144607 P : Type'} (z'' : type518 _144530 _144607 P) (_109008 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term895 _144530 _144607 P q z'' _109008 _109009 _109010) = (term976 _144530 _144607 P z'' _109008 q _109009 _109010).
Proof. exact (TRANS (@lem8211968 _144530 _144607 P z'' _109008 q _109009 _109010) (@lem8211973 _144530 _144607 P z'' _109008 q _109009 _109010)). Qed.
Lemma lem8211992 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term1184 _144530 _144607 _144645 P pat e _109009 _109010) = (term1184 _144530 _144607 _144645 P pat e _109009 _109010).
Proof. exact (eq_refl (term1184 _144530 _144607 _144645 P pat e _109009 _109010)). Qed.
Lemma lem8211993 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (z'' : type518 _144530 _144607 P) (_109008 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term1669 _144530 _144607 _144645 P pat e q z'' _109008 _109009 _109010) = (term1640 _144530 _144607 _144645 P pat e z'' _109008 q _109009 _109010).
Proof. exact (MK_COMB (@lem8211992 _144530 _144607 _144645 P pat e _109009 _109010) (@lem8211991 _144530 _144607 P z'' _109008 q _109009 _109010)). Qed.
Lemma lem8211997 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8211998 {_144530 _144607 _144645 P : Type'} (z'' : type518 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (_109008 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term1640 _144530 _144607 _144645 P pat e z'' _109008 q _109009 _109010) = (term1641 _144530 _144607 _144645 P z'' pat e _109008 q _109009 _109010).
Proof. exact (@lem8211997 (term855 _144530 _144607 P z'' _109008 _109009 _109010) (term1096 _144530 _144607 _144645 P pat e _109009 _109010) (term939 _144530 _144607 P _109008 q _109009 _109010)). Qed.
Lemma lem8212028 {_144530 _144607 _144645 P : Type'} (z'' : type518 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (_109008 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term1669 _144530 _144607 _144645 P pat e q z'' _109008 _109009 _109010) = (term1641 _144530 _144607 _144645 P z'' pat e _109008 q _109009 _109010).
Proof. exact (TRANS (@lem8211993 _144530 _144607 _144645 P pat e z'' _109008 q _109009 _109010) (@lem8211998 _144530 _144607 _144645 P z'' pat e _109008 q _109009 _109010)). Qed.
Lemma lem8212029 {_144530 _144607 _144645 P : Type'} (z'' : type518 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (_109008 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term1668 _144530 _144607 _144645 P pat e q z'' _109008 _109009 _109010) = (term1641 _144530 _144607 _144645 P z'' pat e _109008 q _109009 _109010).
Proof. exact (TRANS (@lem8211932 _144530 _144607 _144645 P pat e q z'' _109008 _109009 _109010) (@lem8212028 _144530 _144607 _144645 P z'' pat e _109008 q _109009 _109010)). Qed.
Lemma lem8212030 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term868 _144530 _144607 P p _109009 _109010) = (term868 _144530 _144607 P p _109009 _109010).
Proof. exact (eq_refl (term868 _144530 _144607 P p _109009 _109010)). Qed.
Lemma lem8212031 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (z'' : type518 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (_109008 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term1666 _144530 _144607 _144645 P p pat e q z'' _109008 _109009 _109010) = (term1645 _144530 _144607 _144645 P p z'' pat e _109008 q _109009 _109010).
Proof. exact (MK_COMB (@lem8212030 _144530 _144607 P p _109009 _109010) (@lem8212029 _144530 _144607 _144645 P z'' pat e _109008 q _109009 _109010)). Qed.
Lemma lem8212035 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8212036 {_144530 _144607 _144645 P : Type'} (z'' : type518 _144530 _144607 P) (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (_109008 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term1645 _144530 _144607 _144645 P p z'' pat e _109008 q _109009 _109010) = (term1646 _144530 _144607 _144645 P z'' p pat e _109008 q _109009 _109010).
Proof. exact (@lem8212035 (term855 _144530 _144607 P z'' _109008 _109009 _109010) (term867 _144530 _144607 P p _109009 _109010) (term1569 _144530 _144607 _144645 P pat e _109008 q _109009 _109010)). Qed.
Lemma lem8212052 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8212053 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_109008 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term1570 _144530 _144607 _144645 P p pat e _109008 q _109009 _109010) = (term1571 _144530 _144607 _144645 P pat e p _109008 q _109009 _109010).
Proof. exact (@lem8212052 (term1096 _144530 _144607 _144645 P pat e _109009 _109010) (term867 _144530 _144607 P p _109009 _109010) (term939 _144530 _144607 P _109008 q _109009 _109010)). Qed.
Lemma lem8212081 {_144530 _144607 P : Type'} (z'' : type518 _144530 _144607 P) (_109008 : _144530 -> _144607) (_109009 : _144530 -> _144607) (_109010 : P) : (term969 _144530 _144607 P z'' _109008 _109009 _109010) = (term969 _144530 _144607 P z'' _109008 _109009 _109010).
Proof. exact (eq_refl (term969 _144530 _144607 P z'' _109008 _109009 _109010)). Qed.
Lemma lem8212082 {_144530 _144607 _144645 P : Type'} (z'' : type518 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_109008 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term1646 _144530 _144607 _144645 P z'' p pat e _109008 q _109009 _109010) = (term1647 _144530 _144607 _144645 P z'' pat e p _109008 q _109009 _109010).
Proof. exact (MK_COMB (@lem8212081 _144530 _144607 P z'' _109008 _109009 _109010) (@lem8212053 _144530 _144607 _144645 P pat e p _109008 q _109009 _109010)). Qed.
Lemma lem8212093 {_144530 _144607 _144645 P : Type'} (z'' : type518 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_109008 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term1645 _144530 _144607 _144645 P p z'' pat e _109008 q _109009 _109010) = (term1647 _144530 _144607 _144645 P z'' pat e p _109008 q _109009 _109010).
Proof. exact (TRANS (@lem8212036 _144530 _144607 _144645 P z'' p pat e _109008 q _109009 _109010) (@lem8212082 _144530 _144607 _144645 P z'' pat e p _109008 q _109009 _109010)). Qed.
Lemma lem8212094 {_144530 _144607 _144645 P : Type'} (z'' : type518 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_109008 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term1666 _144530 _144607 _144645 P p pat e q z'' _109008 _109009 _109010) = (term1647 _144530 _144607 _144645 P z'' pat e p _109008 q _109009 _109010).
Proof. exact (TRANS (@lem8212031 _144530 _144607 _144645 P p z'' pat e _109008 q _109009 _109010) (@lem8212093 _144530 _144607 _144645 P z'' pat e p _109008 q _109009 _109010)). Qed.
Lemma lem8212095 {_144530 _144607 _144645 P : Type'} (z'' : type518 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_109008 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term1665 _144530 _144607 _144645 P p pat e q z'' _109008 _109009 _109010) = (term1647 _144530 _144607 _144645 P z'' pat e p _109008 q _109009 _109010).
Proof. exact (TRANS (@lem8211917 _144530 _144607 _144645 P p pat e q z'' _109008 _109009 _109010) (@lem8212094 _144530 _144607 _144645 P z'' pat e p _109008 q _109009 _109010)). Qed.
Lemma lem8212096 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (_109008 : _144530 -> _144607) (_109010 : P) : (term868 _144530 _144607 P p _109008 _109010) = (term868 _144530 _144607 P p _109008 _109010).
Proof. exact (eq_refl (term868 _144530 _144607 P p _109008 _109010)). Qed.
Lemma lem8212097 {_144530 _144607 _144645 P : Type'} (z'' : type518 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_109008 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term1670 _144530 _144607 _144645 P p pat e q z'' _109008 _109009 _109010) = (term1652 _144530 _144607 _144645 P z'' pat e p _109008 q _109009 _109010).
Proof. exact (MK_COMB (@lem8212096 _144530 _144607 P p _109008 _109010) (@lem8212095 _144530 _144607 _144645 P z'' pat e p _109008 q _109009 _109010)). Qed.
Lemma lem8212101 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8212102 {_144530 _144607 _144645 P : Type'} (z'' : type518 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_109008 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term1652 _144530 _144607 _144645 P z'' pat e p _109008 q _109009 _109010) = (term1653 _144530 _144607 _144645 P z'' pat e p _109008 q _109009 _109010).
Proof. exact (@lem8212101 (term855 _144530 _144607 P z'' _109008 _109009 _109010) (term867 _144530 _144607 P p _109008 _109010) (term1571 _144530 _144607 _144645 P pat e p _109008 q _109009 _109010)). Qed.
Lemma lem8212118 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8212119 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_109008 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term1579 _144530 _144607 _144645 P pat e p _109008 q _109009 _109010) = (term1580 _144530 _144607 _144645 P pat e p _109008 q _109009 _109010).
Proof. exact (@lem8212118 (term1096 _144530 _144607 _144645 P pat e _109009 _109010) (term867 _144530 _144607 P p _109008 _109010) (term1581 _144530 _144607 P p _109008 q _109009 _109010)). Qed.
Lemma lem8212157 {_144530 _144607 P : Type'} (z'' : type518 _144530 _144607 P) (_109008 : _144530 -> _144607) (_109009 : _144530 -> _144607) (_109010 : P) : (term969 _144530 _144607 P z'' _109008 _109009 _109010) = (term969 _144530 _144607 P z'' _109008 _109009 _109010).
Proof. exact (eq_refl (term969 _144530 _144607 P z'' _109008 _109009 _109010)). Qed.
Lemma lem8212158 {_144530 _144607 _144645 P : Type'} (z'' : type518 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_109008 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term1653 _144530 _144607 _144645 P z'' pat e p _109008 q _109009 _109010) = (term1654 _144530 _144607 _144645 P z'' pat e p _109008 q _109009 _109010).
Proof. exact (MK_COMB (@lem8212157 _144530 _144607 P z'' _109008 _109009 _109010) (@lem8212119 _144530 _144607 _144645 P pat e p _109008 q _109009 _109010)). Qed.
Lemma lem8212169 {_144530 _144607 _144645 P : Type'} (z'' : type518 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_109008 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term1652 _144530 _144607 _144645 P z'' pat e p _109008 q _109009 _109010) = (term1654 _144530 _144607 _144645 P z'' pat e p _109008 q _109009 _109010).
Proof. exact (TRANS (@lem8212102 _144530 _144607 _144645 P z'' pat e p _109008 q _109009 _109010) (@lem8212158 _144530 _144607 _144645 P z'' pat e p _109008 q _109009 _109010)). Qed.
Lemma lem8212170 {_144530 _144607 _144645 P : Type'} (z'' : type518 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_109008 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term1670 _144530 _144607 _144645 P p pat e q z'' _109008 _109009 _109010) = (term1654 _144530 _144607 _144645 P z'' pat e p _109008 q _109009 _109010).
Proof. exact (TRANS (@lem8212097 _144530 _144607 _144645 P z'' pat e p _109008 q _109009 _109010) (@lem8212169 _144530 _144607 _144645 P z'' pat e p _109008 q _109009 _109010)). Qed.
Lemma lem8212171 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (_109008 : _144530 -> _144607) (_109010 : P) : (term1184 _144530 _144607 _144645 P pat e _109008 _109010) = (term1184 _144530 _144607 _144645 P pat e _109008 _109010).
Proof. exact (eq_refl (term1184 _144530 _144607 _144645 P pat e _109008 _109010)). Qed.
Lemma lem8212172 {_144530 _144607 _144645 P : Type'} (z'' : type518 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_109008 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term1664 _144530 _144607 _144645 P p pat e q z'' _109008 _109009 _109010) = (term1658 _144530 _144607 _144645 P z'' pat e p _109008 q _109009 _109010).
Proof. exact (MK_COMB (@lem8212171 _144530 _144607 _144645 P pat e _109008 _109010) (@lem8212170 _144530 _144607 _144645 P z'' pat e p _109008 q _109009 _109010)). Qed.
Lemma lem8212176 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8212177 {_144530 _144607 _144645 P : Type'} (z'' : type518 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_109008 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term1658 _144530 _144607 _144645 P z'' pat e p _109008 q _109009 _109010) = (term1659 _144530 _144607 _144645 P z'' pat e p _109008 q _109009 _109010).
Proof. exact (@lem8212176 (term855 _144530 _144607 P z'' _109008 _109009 _109010) (term1096 _144530 _144607 _144645 P pat e _109008 _109010) (term1580 _144530 _144607 _144645 P pat e p _109008 q _109009 _109010)). Qed.
Lemma lem8212239 {_144530 _144607 _144645 P : Type'} (z'' : type518 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_109008 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term1664 _144530 _144607 _144645 P p pat e q z'' _109008 _109009 _109010) = (term1659 _144530 _144607 _144645 P z'' pat e p _109008 q _109009 _109010).
Proof. exact (TRANS (@lem8212172 _144530 _144607 _144645 P z'' pat e p _109008 q _109009 _109010) (@lem8212177 _144530 _144607 _144645 P z'' pat e p _109008 q _109009 _109010)). Qed.
Lemma lem8212240 {_144530 _144607 _144645 P : Type'} (z'' : type518 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_109008 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term1663 _144530 _144607 _144645 P p pat e q z'' _109008 _109009 _109010) = (term1659 _144530 _144607 _144645 P z'' pat e p _109008 q _109009 _109010).
Proof. exact (TRANS (@lem8211890 _144530 _144607 _144645 P p pat e q z'' _109008 _109009 _109010) (@lem8212239 _144530 _144607 _144645 P z'' pat e p _109008 q _109009 _109010)). Qed.
Lemma lem8212241 {_144530 _144607 _144654 P : Type'} (_109008 : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term930 _144530 _144607 _144654 P _109008 t _109009 _109010) = (term930 _144530 _144607 _144654 P _109008 t _109009 _109010).
Proof. exact (eq_refl (term930 _144530 _144607 _144654 P _109008 t _109009 _109010)). Qed.
Lemma lem8212242 {_144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (z'' : type518 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_109008 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term1671 _144530 _144607 _144645 _144654 P t p pat e q z'' _109008 _109009 _109010) = (term1660 _144530 _144607 _144645 _144654 P t z'' pat e p _109008 q _109009 _109010).
Proof. exact (MK_COMB (@lem8212241 _144530 _144607 _144654 P _109008 t _109009 _109010) (@lem8212240 _144530 _144607 _144645 P z'' pat e p _109008 q _109009 _109010)). Qed.
Lemma lem8212253 {_144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (z'' : type518 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_109008 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109009 : _144530 -> _144607) (_109010 : P) : ((term1554 _144530 _144607 _144645 _144654 P p pat e q z'' _109008 t _109009 _109010) = (term1671 _144530 _144607 _144645 _144654 P t p pat e q z'' _109008 _109009 _109010)) = ((term1660 _144530 _144607 _144645 _144654 P t z'' pat e p _109008 q _109009 _109010) = (term1660 _144530 _144607 _144645 _144654 P t z'' pat e p _109008 q _109009 _109010)).
Proof. exact (MK_COMB (@lem8211873 _144530 _144607 _144645 _144654 P t z'' pat e p _109008 q _109009 _109010) (@lem8212242 _144530 _144607 _144645 _144654 P t z'' pat e p _109008 q _109009 _109010)). Qed.
Lemma lem8212255 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem20665 A x) (@lem20664 A x)). Qed.
Lemma lem8212256 (x : Prop) : (x = x) = True.
Proof. exact (@lem8212255 Prop x). Qed.
Lemma lem8212257 {_144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (z'' : type518 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_109008 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109009 : _144530 -> _144607) (_109010 : P) : ((term1660 _144530 _144607 _144645 _144654 P t z'' pat e p _109008 q _109009 _109010) = (term1660 _144530 _144607 _144645 _144654 P t z'' pat e p _109008 q _109009 _109010)) = True.
Proof. exact (@lem8212256 (term1660 _144530 _144607 _144645 _144654 P t z'' pat e p _109008 q _109009 _109010)). Qed.
Lemma lem8212258 {_144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (z'' : type518 _144530 _144607 P) (_109008 : _144530 -> _144607) (_109009 : _144530 -> _144607) (_109010 : P) : ((term1554 _144530 _144607 _144645 _144654 P p pat e q z'' _109008 t _109009 _109010) = (term1671 _144530 _144607 _144645 _144654 P t p pat e q z'' _109008 _109009 _109010)) = True.
Proof. exact (TRANS (@lem8212253 _144530 _144607 _144645 _144654 P t z'' pat e p _109008 q _109009 _109010) (@lem8212257 _144530 _144607 _144645 _144654 P t z'' pat e p _109008 q _109009 _109010)). Qed.
Lemma lem8212259 {_144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (z'' : type518 _144530 _144607 P) (_109008 : _144530 -> _144607) (_109009 : _144530 -> _144607) (_109010 : P) : True = ((term1554 _144530 _144607 _144645 _144654 P p pat e q z'' _109008 t _109009 _109010) = (term1671 _144530 _144607 _144645 _144654 P t p pat e q z'' _109008 _109009 _109010)).
Proof. exact (SYM (@lem8212258 _144530 _144607 _144645 _144654 P t p pat e q z'' _109008 _109009 _109010)). Qed.
Lemma lem8212260 {_144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (z'' : type518 _144530 _144607 P) (_109008 : _144530 -> _144607) (_109009 : _144530 -> _144607) (_109010 : P) : (term1554 _144530 _144607 _144645 _144654 P p pat e q z'' _109008 t _109009 _109010) = (term1671 _144530 _144607 _144645 _144654 P t p pat e q z'' _109008 _109009 _109010).
Proof. exact (EQ_MP (@lem8212259 _144530 _144607 _144645 _144654 P t p pat e q z'' _109008 _109009 _109010) (@lem0)). Qed.
Lemma lem8212261 {_144529 _144530 _144607 _144645 _144654 P : Type'} (_109008 : _144530 -> _144607) (_109009 : _144530 -> _144607) (_109010 : P) (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z'' : type518 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) (h1 : term685 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z'' t) : term1671 _144530 _144607 _144645 _144654 P t p pat e q z'' _109008 _109009 _109010.
Proof. exact (EQ_MP (@lem8212260 _144530 _144607 _144645 _144654 P t p pat e q z'' _109008 _109009 _109010) (@lem8209232 _144529 _144530 _144607 _144645 _144654 P _109008 _109009 _109010 p pat e q lt2 s z'' t h1)). Qed.
Lemma lem8212263 (b : Prop) (a : Prop) : (a \/ b) = (term940 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem8212264 {_144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (z'' : type518 _144530 _144607 P) (_109008 : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term1671 _144530 _144607 _144645 _144654 P t p pat e q z'' _109008 _109009 _109010) = (term1672 _144530 _144607 _144645 _144654 P p pat e q z'' _109008 t _109009 _109010).
Proof. exact (@lem8212263 (term1663 _144530 _144607 _144645 P p pat e q z'' _109008 _109009 _109010) ((term835 _144530 _144607 _144654 P t _109008 _109010) = (term835 _144530 _144607 _144654 P t _109009 _109010))). Qed.
Lemma lem8212266 (a : Prop) (b : Prop) : (term942 a b) = (term943 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem8212267 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (z'' : type518 _144530 _144607 P) (_109008 : _144530 -> _144607) (_109009 : _144530 -> _144607) (_109010 : P) : (term1673 _144530 _144607 _144645 P p pat e q z'' _109008 _109009 _109010) = (term1674 _144530 _144607 _144645 P p pat e q z'' _109008 _109009 _109010).
Proof. exact (@lem8212266 (term867 _144530 _144607 P p _109008 _109010) (term1675 _144530 _144607 _144645 P p pat e q z'' _109008 _109009 _109010)). Qed.
Lemma lem8212269 (a : Prop) : (term15 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8212270 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (_109008 : _144530 -> _144607) (_109010 : P) : (term946 _144530 _144607 P p _109008 _109010) = (term822 _144530 _144607 P p _109008 _109010).
Proof. exact (@lem8212269 (term822 _144530 _144607 P p _109008 _109010)). Qed.
Lemma lem8212271 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8212272 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (_109008 : _144530 -> _144607) (_109010 : P) : (term947 _144530 _144607 P p _109008 _109010) = (term948 _144530 _144607 P p _109008 _109010).
Proof. exact (MK_COMB (@lem8212271) (@lem8212270 _144530 _144607 P p _109008 _109010)). Qed.
Lemma lem8212274 (a : Prop) (b : Prop) : (term942 a b) = (term943 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem8212275 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (z'' : type518 _144530 _144607 P) (_109008 : _144530 -> _144607) (_109009 : _144530 -> _144607) (_109010 : P) : (term1676 _144530 _144607 _144645 P p pat e q z'' _109008 _109009 _109010) = (term1677 _144530 _144607 _144645 P p pat e q z'' _109008 _109009 _109010).
Proof. exact (@lem8212274 (term1096 _144530 _144607 _144645 P pat e _109008 _109010) (term1665 _144530 _144607 _144645 P p pat e q z'' _109008 _109009 _109010)). Qed.
Lemma lem8212277 (a : Prop) : (term15 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8212278 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (_109008 : _144530 -> _144607) (_109010 : P) : (term1220 _144530 _144607 _144645 P pat e _109008 _109010) = ((term835 _144530 _144607 _144645 P pat _109008 _109010) = (term835 _144530 _144607 _144645 P e _109008 _109010)).
Proof. exact (@lem8212277 ((term835 _144530 _144607 _144645 P pat _109008 _109010) = (term835 _144530 _144607 _144645 P e _109008 _109010))). Qed.
Lemma lem8212279 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8212280 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (_109008 : _144530 -> _144607) (_109010 : P) : (term1221 _144530 _144607 _144645 P pat e _109008 _109010) = (term1222 _144530 _144607 _144645 P pat e _109008 _109010).
Proof. exact (MK_COMB (@lem8212279) (@lem8212278 _144530 _144607 _144645 P pat e _109008 _109010)). Qed.
Lemma lem8212282 (a : Prop) (b : Prop) : (term942 a b) = (term943 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem8212283 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (z'' : type518 _144530 _144607 P) (_109008 : _144530 -> _144607) (_109009 : _144530 -> _144607) (_109010 : P) : (term1678 _144530 _144607 _144645 P p pat e q z'' _109008 _109009 _109010) = (term1679 _144530 _144607 _144645 P p pat e q z'' _109008 _109009 _109010).
Proof. exact (@lem8212282 (term867 _144530 _144607 P q _109008 _109010) (term1680 _144530 _144607 _144645 P p pat e q z'' _109008 _109009 _109010)). Qed.
Lemma lem8212285 (a : Prop) : (term15 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8212286 {_144530 _144607 P : Type'} (q : type560 _144530 _144607 P) (_109008 : _144530 -> _144607) (_109010 : P) : (term946 _144530 _144607 P q _109008 _109010) = (term822 _144530 _144607 P q _109008 _109010).
Proof. exact (@lem8212285 (term822 _144530 _144607 P q _109008 _109010)). Qed.
Lemma lem8212287 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8212288 {_144530 _144607 P : Type'} (q : type560 _144530 _144607 P) (_109008 : _144530 -> _144607) (_109010 : P) : (term947 _144530 _144607 P q _109008 _109010) = (term948 _144530 _144607 P q _109008 _109010).
Proof. exact (MK_COMB (@lem8212287) (@lem8212286 _144530 _144607 P q _109008 _109010)). Qed.
Lemma lem8212290 (a : Prop) (b : Prop) : (term942 a b) = (term943 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem8212291 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (z'' : type518 _144530 _144607 P) (_109008 : _144530 -> _144607) (_109009 : _144530 -> _144607) (_109010 : P) : (term1681 _144530 _144607 _144645 P p pat e q z'' _109008 _109009 _109010) = (term1682 _144530 _144607 _144645 P p pat e q z'' _109008 _109009 _109010).
Proof. exact (@lem8212290 (term867 _144530 _144607 P p _109009 _109010) (term1667 _144530 _144607 _144645 P pat e q z'' _109008 _109009 _109010)). Qed.
Lemma lem8212293 (a : Prop) : (term15 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8212294 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term946 _144530 _144607 P p _109009 _109010) = (term822 _144530 _144607 P p _109009 _109010).
Proof. exact (@lem8212293 (term822 _144530 _144607 P p _109009 _109010)). Qed.
Lemma lem8212295 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8212296 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term947 _144530 _144607 P p _109009 _109010) = (term948 _144530 _144607 P p _109009 _109010).
Proof. exact (MK_COMB (@lem8212295) (@lem8212294 _144530 _144607 P p _109009 _109010)). Qed.
Lemma lem8212298 (a : Prop) (b : Prop) : (term942 a b) = (term943 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem8212299 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (z'' : type518 _144530 _144607 P) (_109008 : _144530 -> _144607) (_109009 : _144530 -> _144607) (_109010 : P) : (term1683 _144530 _144607 _144645 P pat e q z'' _109008 _109009 _109010) = (term1684 _144530 _144607 _144645 P pat e q z'' _109008 _109009 _109010).
Proof. exact (@lem8212298 (term1096 _144530 _144607 _144645 P pat e _109009 _109010) (term890 _144530 _144607 P q z'' _109008 _109009 _109010)). Qed.
Lemma lem8212301 (a : Prop) : (term15 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8212302 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term1220 _144530 _144607 _144645 P pat e _109009 _109010) = ((term835 _144530 _144607 _144645 P pat _109009 _109010) = (term835 _144530 _144607 _144645 P e _109009 _109010)).
Proof. exact (@lem8212301 ((term835 _144530 _144607 _144645 P pat _109009 _109010) = (term835 _144530 _144607 _144645 P e _109009 _109010))). Qed.
Lemma lem8212303 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8212304 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term1221 _144530 _144607 _144645 P pat e _109009 _109010) = (term1222 _144530 _144607 _144645 P pat e _109009 _109010).
Proof. exact (MK_COMB (@lem8212303) (@lem8212302 _144530 _144607 _144645 P pat e _109009 _109010)). Qed.
Lemma lem8212306 (a : Prop) (b : Prop) : (term942 a b) = (term943 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem8212307 {_144530 _144607 P : Type'} (q : type560 _144530 _144607 P) (z'' : type518 _144530 _144607 P) (_109008 : _144530 -> _144607) (_109009 : _144530 -> _144607) (_109010 : P) : (term984 _144530 _144607 P q z'' _109008 _109009 _109010) = (term985 _144530 _144607 P q z'' _109008 _109009 _109010).
Proof. exact (@lem8212306 (term867 _144530 _144607 P q _109009 _109010) (term855 _144530 _144607 P z'' _109008 _109009 _109010)). Qed.
Lemma lem8212309 (a : Prop) : (term15 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8212310 {_144530 _144607 P : Type'} (q : type560 _144530 _144607 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term946 _144530 _144607 P q _109009 _109010) = (term822 _144530 _144607 P q _109009 _109010).
Proof. exact (@lem8212309 (term822 _144530 _144607 P q _109009 _109010)). Qed.
Lemma lem8212311 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8212312 {_144530 _144607 P : Type'} (q : type560 _144530 _144607 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term947 _144530 _144607 P q _109009 _109010) = (term948 _144530 _144607 P q _109009 _109010).
Proof. exact (MK_COMB (@lem8212311) (@lem8212310 _144530 _144607 P q _109009 _109010)). Qed.
Lemma lem8212314 (a : Prop) : (term15 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8212315 {_144530 _144607 P : Type'} (z'' : type518 _144530 _144607 P) (_109008 : _144530 -> _144607) (_109009 : _144530 -> _144607) (_109010 : P) : (term986 _144530 _144607 P z'' _109008 _109009 _109010) = ((term848 _144530 _144607 P z'' _109008 _109009 _109010) = (term851 _144530 _144607 P z'' _109008 _109009 _109010)).
Proof. exact (@lem8212314 ((term848 _144530 _144607 P z'' _109008 _109009 _109010) = (term851 _144530 _144607 P z'' _109008 _109009 _109010))). Qed.
Lemma lem8212316 {_144530 _144607 P : Type'} (q : type560 _144530 _144607 P) (z'' : type518 _144530 _144607 P) (_109008 : _144530 -> _144607) (_109009 : _144530 -> _144607) (_109010 : P) : (term985 _144530 _144607 P q z'' _109008 _109009 _109010) = (term987 _144530 _144607 P q z'' _109008 _109009 _109010).
Proof. exact (MK_COMB (@lem8212312 _144530 _144607 P q _109009 _109010) (@lem8212315 _144530 _144607 P z'' _109008 _109009 _109010)). Qed.
Lemma lem8212317 {_144530 _144607 P : Type'} (q : type560 _144530 _144607 P) (z'' : type518 _144530 _144607 P) (_109008 : _144530 -> _144607) (_109009 : _144530 -> _144607) (_109010 : P) : (term984 _144530 _144607 P q z'' _109008 _109009 _109010) = (term987 _144530 _144607 P q z'' _109008 _109009 _109010).
Proof. exact (TRANS (@lem8212307 _144530 _144607 P q z'' _109008 _109009 _109010) (@lem8212316 _144530 _144607 P q z'' _109008 _109009 _109010)). Qed.
Lemma lem8212318 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (z'' : type518 _144530 _144607 P) (_109008 : _144530 -> _144607) (_109009 : _144530 -> _144607) (_109010 : P) : (term1684 _144530 _144607 _144645 P pat e q z'' _109008 _109009 _109010) = (term1685 _144530 _144607 _144645 P pat e q z'' _109008 _109009 _109010).
Proof. exact (MK_COMB (@lem8212304 _144530 _144607 _144645 P pat e _109009 _109010) (@lem8212317 _144530 _144607 P q z'' _109008 _109009 _109010)). Qed.
Lemma lem8212319 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (z'' : type518 _144530 _144607 P) (_109008 : _144530 -> _144607) (_109009 : _144530 -> _144607) (_109010 : P) : (term1683 _144530 _144607 _144645 P pat e q z'' _109008 _109009 _109010) = (term1685 _144530 _144607 _144645 P pat e q z'' _109008 _109009 _109010).
Proof. exact (TRANS (@lem8212299 _144530 _144607 _144645 P pat e q z'' _109008 _109009 _109010) (@lem8212318 _144530 _144607 _144645 P pat e q z'' _109008 _109009 _109010)). Qed.
Lemma lem8212320 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (z'' : type518 _144530 _144607 P) (_109008 : _144530 -> _144607) (_109009 : _144530 -> _144607) (_109010 : P) : (term1682 _144530 _144607 _144645 P p pat e q z'' _109008 _109009 _109010) = (term1686 _144530 _144607 _144645 P p pat e q z'' _109008 _109009 _109010).
Proof. exact (MK_COMB (@lem8212296 _144530 _144607 P p _109009 _109010) (@lem8212319 _144530 _144607 _144645 P pat e q z'' _109008 _109009 _109010)). Qed.
Lemma lem8212321 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (z'' : type518 _144530 _144607 P) (_109008 : _144530 -> _144607) (_109009 : _144530 -> _144607) (_109010 : P) : (term1681 _144530 _144607 _144645 P p pat e q z'' _109008 _109009 _109010) = (term1686 _144530 _144607 _144645 P p pat e q z'' _109008 _109009 _109010).
Proof. exact (TRANS (@lem8212291 _144530 _144607 _144645 P p pat e q z'' _109008 _109009 _109010) (@lem8212320 _144530 _144607 _144645 P p pat e q z'' _109008 _109009 _109010)). Qed.
Lemma lem8212322 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (z'' : type518 _144530 _144607 P) (_109008 : _144530 -> _144607) (_109009 : _144530 -> _144607) (_109010 : P) : (term1679 _144530 _144607 _144645 P p pat e q z'' _109008 _109009 _109010) = (term1687 _144530 _144607 _144645 P p pat e q z'' _109008 _109009 _109010).
Proof. exact (MK_COMB (@lem8212288 _144530 _144607 P q _109008 _109010) (@lem8212321 _144530 _144607 _144645 P p pat e q z'' _109008 _109009 _109010)). Qed.
Lemma lem8212323 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (z'' : type518 _144530 _144607 P) (_109008 : _144530 -> _144607) (_109009 : _144530 -> _144607) (_109010 : P) : (term1678 _144530 _144607 _144645 P p pat e q z'' _109008 _109009 _109010) = (term1687 _144530 _144607 _144645 P p pat e q z'' _109008 _109009 _109010).
Proof. exact (TRANS (@lem8212283 _144530 _144607 _144645 P p pat e q z'' _109008 _109009 _109010) (@lem8212322 _144530 _144607 _144645 P p pat e q z'' _109008 _109009 _109010)). Qed.
Lemma lem8212324 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (z'' : type518 _144530 _144607 P) (_109008 : _144530 -> _144607) (_109009 : _144530 -> _144607) (_109010 : P) : (term1677 _144530 _144607 _144645 P p pat e q z'' _109008 _109009 _109010) = (term1688 _144530 _144607 _144645 P p pat e q z'' _109008 _109009 _109010).
Proof. exact (MK_COMB (@lem8212280 _144530 _144607 _144645 P pat e _109008 _109010) (@lem8212323 _144530 _144607 _144645 P p pat e q z'' _109008 _109009 _109010)). Qed.
Lemma lem8212325 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (z'' : type518 _144530 _144607 P) (_109008 : _144530 -> _144607) (_109009 : _144530 -> _144607) (_109010 : P) : (term1676 _144530 _144607 _144645 P p pat e q z'' _109008 _109009 _109010) = (term1688 _144530 _144607 _144645 P p pat e q z'' _109008 _109009 _109010).
Proof. exact (TRANS (@lem8212275 _144530 _144607 _144645 P p pat e q z'' _109008 _109009 _109010) (@lem8212324 _144530 _144607 _144645 P p pat e q z'' _109008 _109009 _109010)). Qed.
Lemma lem8212326 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (z'' : type518 _144530 _144607 P) (_109008 : _144530 -> _144607) (_109009 : _144530 -> _144607) (_109010 : P) : (term1674 _144530 _144607 _144645 P p pat e q z'' _109008 _109009 _109010) = (term1689 _144530 _144607 _144645 P p pat e q z'' _109008 _109009 _109010).
Proof. exact (MK_COMB (@lem8212272 _144530 _144607 P p _109008 _109010) (@lem8212325 _144530 _144607 _144645 P p pat e q z'' _109008 _109009 _109010)). Qed.
Lemma lem8212327 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (z'' : type518 _144530 _144607 P) (_109008 : _144530 -> _144607) (_109009 : _144530 -> _144607) (_109010 : P) : (term1673 _144530 _144607 _144645 P p pat e q z'' _109008 _109009 _109010) = (term1689 _144530 _144607 _144645 P p pat e q z'' _109008 _109009 _109010).
Proof. exact (TRANS (@lem8212267 _144530 _144607 _144645 P p pat e q z'' _109008 _109009 _109010) (@lem8212326 _144530 _144607 _144645 P p pat e q z'' _109008 _109009 _109010)). Qed.
Lemma lem8212328 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8212329 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (z'' : type518 _144530 _144607 P) (_109008 : _144530 -> _144607) (_109009 : _144530 -> _144607) (_109010 : P) : (term1690 _144530 _144607 _144645 P p pat e q z'' _109008 _109009 _109010) = (term1691 _144530 _144607 _144645 P p pat e q z'' _109008 _109009 _109010).
Proof. exact (MK_COMB (@lem8212328) (@lem8212327 _144530 _144607 _144645 P p pat e q z'' _109008 _109009 _109010)). Qed.
Lemma lem8212330 {_144530 _144607 _144654 P : Type'} (_109008 : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (_109009 : _144530 -> _144607) (_109010 : P) : ((term835 _144530 _144607 _144654 P t _109008 _109010) = (term835 _144530 _144607 _144654 P t _109009 _109010)) = ((term835 _144530 _144607 _144654 P t _109008 _109010) = (term835 _144530 _144607 _144654 P t _109009 _109010)).
Proof. exact (eq_refl ((term835 _144530 _144607 _144654 P t _109008 _109010) = (term835 _144530 _144607 _144654 P t _109009 _109010))). Qed.
Lemma lem8212331 {_144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (z'' : type518 _144530 _144607 P) (_109008 : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term1672 _144530 _144607 _144645 _144654 P p pat e q z'' _109008 t _109009 _109010) = (term1692 _144530 _144607 _144645 _144654 P p pat e q z'' _109008 t _109009 _109010).
Proof. exact (MK_COMB (@lem8212329 _144530 _144607 _144645 P p pat e q z'' _109008 _109009 _109010) (@lem8212330 _144530 _144607 _144654 P _109008 t _109009 _109010)). Qed.
Lemma lem8212332 {_144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (z'' : type518 _144530 _144607 P) (_109008 : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (_109009 : _144530 -> _144607) (_109010 : P) : (term1671 _144530 _144607 _144645 _144654 P t p pat e q z'' _109008 _109009 _109010) = (term1692 _144530 _144607 _144645 _144654 P p pat e q z'' _109008 t _109009 _109010).
Proof. exact (TRANS (@lem8212264 _144530 _144607 _144645 _144654 P p pat e q z'' _109008 t _109009 _109010) (@lem8212331 _144530 _144607 _144645 _144654 P p pat e q z'' _109008 t _109009 _109010)). Qed.
Lemma lem8212334 {_144529 _144530 _144607 _144645 _144654 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z'' : type518 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) (h2 : term685 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z'' t) (h3 : term839 _144530 _144607 _144654 P f t g a) (h4 : (pat f a) = (e f a)) (h5 : (pat g a) = (e g a)) (h6 : p f a) (h7 : p g a) (h8 : q f a) (h9 : q g a) : term987 _144530 _144607 P q z'' f g a.
Proof. exact (conj (@lem8210131 _144530 _144607 P q g a h9) (@lem8211319 _144529 _144530 _144607 _144645 _144654 P lt2 s z'' t pat e p f q g a h1 h2 h3 h4 h5 h6 h7 h8 h9)). Qed.
Lemma lem8212335 {_144529 _144530 _144607 _144645 _144654 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z'' : type518 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) (h2 : term685 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z'' t) (h3 : term839 _144530 _144607 _144654 P f t g a) (h4 : (pat f a) = (e f a)) (h5 : (pat g a) = (e g a)) (h6 : p f a) (h7 : p g a) (h8 : q f a) (h9 : q g a) : term1685 _144530 _144607 _144645 P pat e q z'' f g a.
Proof. exact (conj (@lem8210124 _144530 _144607 _144645 P pat e g a h5) (@lem8212334 _144529 _144530 _144607 _144645 _144654 P lt2 s z'' t pat e p f q g a h1 h2 h3 h4 h5 h6 h7 h8 h9)). Qed.
Lemma lem8212336 {_144529 _144530 _144607 _144645 _144654 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z'' : type518 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) (h2 : term685 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z'' t) (h3 : term839 _144530 _144607 _144654 P f t g a) (h4 : (pat f a) = (e f a)) (h5 : (pat g a) = (e g a)) (h6 : p f a) (h7 : p g a) (h8 : q f a) (h9 : q g a) : term1686 _144530 _144607 _144645 P p pat e q z'' f g a.
Proof. exact (conj (@lem8210117 _144530 _144607 P p g a h7) (@lem8212335 _144529 _144530 _144607 _144645 _144654 P lt2 s z'' t pat e p f q g a h1 h2 h3 h4 h5 h6 h7 h8 h9)). Qed.
Lemma lem8212337 {_144529 _144530 _144607 _144645 _144654 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z'' : type518 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) (h2 : term685 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z'' t) (h3 : term839 _144530 _144607 _144654 P f t g a) (h4 : (pat f a) = (e f a)) (h5 : (pat g a) = (e g a)) (h6 : p f a) (h7 : p g a) (h8 : q f a) (h9 : q g a) : term1687 _144530 _144607 _144645 P p pat e q z'' f g a.
Proof. exact (conj (@lem8210110 _144530 _144607 P q f a h8) (@lem8212336 _144529 _144530 _144607 _144645 _144654 P lt2 s z'' t pat e p f q g a h1 h2 h3 h4 h5 h6 h7 h8 h9)). Qed.
Lemma lem8212338 {_144529 _144530 _144607 _144645 _144654 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z'' : type518 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) (h2 : term685 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z'' t) (h3 : term839 _144530 _144607 _144654 P f t g a) (h4 : (pat f a) = (e f a)) (h5 : (pat g a) = (e g a)) (h6 : p f a) (h7 : p g a) (h8 : q f a) (h9 : q g a) : term1688 _144530 _144607 _144645 P p pat e q z'' f g a.
Proof. exact (conj (@lem8210103 _144530 _144607 _144645 P pat e f a h4) (@lem8212337 _144529 _144530 _144607 _144645 _144654 P lt2 s z'' t pat e p f q g a h1 h2 h3 h4 h5 h6 h7 h8 h9)). Qed.
Lemma lem8212339 {_144529 _144530 _144607 _144645 _144654 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z'' : type518 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) (h2 : term685 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z'' t) (h3 : term839 _144530 _144607 _144654 P f t g a) (h4 : (pat f a) = (e f a)) (h5 : (pat g a) = (e g a)) (h6 : p f a) (h7 : p g a) (h8 : q f a) (h9 : q g a) : term1689 _144530 _144607 _144645 P p pat e q z'' f g a.
Proof. exact (conj (@lem8210096 _144530 _144607 P p f a h6) (@lem8212338 _144529 _144530 _144607 _144645 _144654 P lt2 s z'' t pat e p f q g a h1 h2 h3 h4 h5 h6 h7 h8 h9)). Qed.
Lemma lem8212341 {_144529 _144530 _144607 _144645 _144654 P : Type'} (_109008 : _144530 -> _144607) (_109009 : _144530 -> _144607) (_109010 : P) (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z'' : type518 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) (h1 : term685 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z'' t) : term1692 _144530 _144607 _144645 _144654 P p pat e q z'' _109008 t _109009 _109010.
Proof. exact (EQ_MP (@lem8212332 _144530 _144607 _144645 _144654 P p pat e q z'' _109008 t _109009 _109010) (@lem8212261 _144529 _144530 _144607 _144645 _144654 P _109008 _109009 _109010 p pat e q lt2 s z'' t h1)). Qed.
Lemma lem8212342 {_144529 _144530 _144607 _144645 _144654 P : Type'} (_109008 : _144530 -> _144607) (_109009 : _144530 -> _144607) (_109010 : P) (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z'' : type518 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) (h1 : term685 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z'' t) : term1692 _144530 _144607 _144645 _144654 P p pat e q z'' _109008 t _109009 _109010.
Proof. exact (@lem8212341 _144529 _144530 _144607 _144645 _144654 P _109008 _109009 _109010 p pat e q lt2 s z'' t h1). Qed.
Lemma lem8212343 {_144529 _144530 _144607 _144645 _144654 P : Type'} (f : _144530 -> _144607) (g : _144530 -> _144607) (a : P) (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z'' : type518 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) (h1 : term685 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z'' t) : term1692 _144530 _144607 _144645 _144654 P p pat e q z'' f t g a.
Proof. exact (@lem8212342 _144529 _144530 _144607 _144645 _144654 P f g a p pat e q lt2 s z'' t h1). Qed.
Lemma lem8212346 {_144529 _144530 _144607 _144645 _144654 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z'' : type518 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) (h2 : term685 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z'' t) (h3 : term839 _144530 _144607 _144654 P f t g a) (h4 : (pat f a) = (e f a)) (h5 : (pat g a) = (e g a)) (h6 : p f a) (h7 : p g a) (h8 : q f a) (h9 : q g a) : (term835 _144530 _144607 _144654 P t f a) = (term835 _144530 _144607 _144654 P t g a).
Proof. exact (@lem8212343 _144529 _144530 _144607 _144645 _144654 P f g a p pat e q lt2 s z'' t h2 (@lem8212339 _144529 _144530 _144607 _144645 _144654 P lt2 s z'' t pat e p f q g a h1 h2 h3 h4 h5 h6 h7 h8 h9)). Qed.
Lemma lem8212347 {_144529 _144530 _144607 _144645 _144654 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z'' : type518 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) (h2 : term685 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z'' t) (h3 : (pat f a) = (e f a)) (h4 : (pat g a) = (e g a)) (h5 : p f a) (h6 : p g a) (h7 : q f a) (h8 : q g a) : term992 _144530 _144607 _144654 P f t g a.
Proof. exact (fun h0 : term839 _144530 _144607 _144654 P f t g a => @lem8212346 _144529 _144530 _144607 _144645 _144654 P lt2 s z'' t pat e p f q g a h1 h2 h0 h3 h4 h5 h6 h7 h8). Qed.
Lemma lem8212349 (p : Prop) : (term57 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8212350 {_144530 _144607 _144654 P : Type'} (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (term992 _144530 _144607 _144654 P f t g a) = ((term835 _144530 _144607 _144654 P t f a) = (term835 _144530 _144607 _144654 P t g a)).
Proof. exact (@lem8212349 ((term835 _144530 _144607 _144654 P t f a) = (term835 _144530 _144607 _144654 P t g a))). Qed.
Lemma lem8212351 {_144529 _144530 _144607 _144645 _144654 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z'' : type518 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) (h2 : term685 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z'' t) (h3 : (pat f a) = (e f a)) (h4 : (pat g a) = (e g a)) (h5 : p f a) (h6 : p g a) (h7 : q f a) (h8 : q g a) : (term835 _144530 _144607 _144654 P t f a) = (term835 _144530 _144607 _144654 P t g a).
Proof. exact (EQ_MP (@lem8212350 _144530 _144607 _144654 P f t g a) (@lem8212347 _144529 _144530 _144607 _144645 _144654 P lt2 s z'' t pat e p f q g a h1 h2 h3 h4 h5 h6 h7 h8)). Qed.
Lemma lem8212354 (p : Prop) : (~ p) = (p -> False).
Proof. exact (EQ_MP (@lem21021 p) (@lem0)). Qed.
Lemma lem8212356 {_144530 _144607 _144654 P : Type'} (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (term839 _144530 _144607 _144654 P f t g a) = (term993 _144530 _144607 _144654 P f t g a).
Proof. exact (@lem8212354 ((term835 _144530 _144607 _144654 P t f a) = (term835 _144530 _144607 _144654 P t g a))). Qed.
Lemma lem8212359 {_144530 _144607 _144654 P : Type'} (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) (h1 : term839 _144530 _144607 _144654 P f t g a) : term993 _144530 _144607 _144654 P f t g a.
Proof. exact (EQ_MP (@lem8212356 _144530 _144607 _144654 P f t g a) (@lem8209076 _144530 _144607 _144654 P f t g a h1)). Qed.
Lemma lem8212362 {_144529 _144530 _144607 _144645 _144654 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z'' : type518 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) (h2 : term685 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z'' t) (h3 : term839 _144530 _144607 _144654 P f t g a) (h4 : (pat f a) = (e f a)) (h5 : (pat g a) = (e g a)) (h6 : p f a) (h7 : p g a) (h8 : q f a) (h9 : q g a) : False.
Proof. exact (@lem8212359 _144530 _144607 _144654 P f t g a h3 (@lem8212351 _144529 _144530 _144607 _144645 _144654 P lt2 s z'' t pat e p f q g a h1 h2 h4 h5 h6 h7 h8 h9)). Qed.
Lemma lem8212363 {_144529 _144530 _144607 _144645 _144654 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z'' : type518 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) (h2 : term685 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z'' t) (h3 : term839 _144530 _144607 _144654 P f t g a) (h4 : (pat f a) = (e f a)) (h5 : (pat g a) = (e g a)) (h6 : p f a) (h7 : p g a) (h8 : q f a) (h9 : q g a) : term59.
Proof. exact (fun h0 : ~ False => @lem8212362 _144529 _144530 _144607 _144645 _144654 P lt2 s z'' t pat e p f q g a h1 h2 h3 h4 h5 h6 h7 h8 h9). Qed.
Lemma lem8212365 (p : Prop) : (term57 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8212366 : term59 = False.
Proof. exact (@lem8212365 False). Qed.
Lemma lem8212367 {_144529 _144530 _144607 _144645 _144654 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z'' : type518 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) (h2 : term685 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z'' t) (h3 : term839 _144530 _144607 _144654 P f t g a) (h4 : (pat f a) = (e f a)) (h5 : (pat g a) = (e g a)) (h6 : p f a) (h7 : p g a) (h8 : q f a) (h9 : q g a) : False.
Proof. exact (EQ_MP (@lem8212366) (@lem8212363 _144529 _144530 _144607 _144645 _144654 P lt2 s z'' t pat e p f q g a h1 h2 h3 h4 h5 h6 h7 h8 h9)). Qed.
Lemma lem8212610 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) (h1 : p f a) : term822 _144530 _144607 P p f a.
Proof. exact (EQ_MP (@lem8206408 _144530 _144607 P p f a) (@lem8206281 _144530 _144607 P p f a h1)). Qed.
Lemma lem8212611 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) (h1 : p f a) : term916 _144530 _144607 P p f a.
Proof. exact (fun h0 : term867 _144530 _144607 P p f a => @lem8212610 _144530 _144607 P p f a h1). Qed.
Lemma lem8212613 (p : Prop) : (term57 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8212614 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) : (term916 _144530 _144607 P p f a) = (term822 _144530 _144607 P p f a).
Proof. exact (@lem8212613 (term822 _144530 _144607 P p f a)). Qed.
Lemma lem8212615 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) (h1 : p f a) : term822 _144530 _144607 P p f a.
Proof. exact (EQ_MP (@lem8212614 _144530 _144607 P p f a) (@lem8212611 _144530 _144607 P p f a h1)). Qed.
Lemma lem8212617 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (a : P) (h1 : (pat f a) = (e f a)) : (term835 _144530 _144607 _144645 P pat f a) = (term835 _144530 _144607 _144645 P e f a).
Proof. exact (EQ_MP (@lem8206516 _144530 _144607 _144645 P pat e f a) (@lem8206356 _144530 _144607 _144645 P pat e f a h1)). Qed.
Lemma lem8212618 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (a : P) (h1 : (pat f a) = (e f a)) : term1174 _144530 _144607 _144645 P pat e f a.
Proof. exact (fun h0 : term1096 _144530 _144607 _144645 P pat e f a => @lem8212617 _144530 _144607 _144645 P pat e f a h1). Qed.
Lemma lem8212620 (p : Prop) : (term57 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8212621 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (a : P) : (term1174 _144530 _144607 _144645 P pat e f a) = ((term835 _144530 _144607 _144645 P pat f a) = (term835 _144530 _144607 _144645 P e f a)).
Proof. exact (@lem8212620 ((term835 _144530 _144607 _144645 P pat f a) = (term835 _144530 _144607 _144645 P e f a))). Qed.
Lemma lem8212622 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (a : P) (h1 : (pat f a) = (e f a)) : (term835 _144530 _144607 _144645 P pat f a) = (term835 _144530 _144607 _144645 P e f a).
Proof. exact (EQ_MP (@lem8212621 _144530 _144607 _144645 P pat e f a) (@lem8212618 _144530 _144607 _144645 P pat e f a h1)). Qed.
Lemma lem8212624 {_144530 _144607 P : Type'} (q : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) (h1 : q f a) : term822 _144530 _144607 P q f a.
Proof. exact (EQ_MP (@lem8206572 _144530 _144607 P q f a) (@lem8206368 _144530 _144607 P q f a h1)). Qed.
Lemma lem8212625 {_144530 _144607 P : Type'} (q : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) (h1 : q f a) : term916 _144530 _144607 P q f a.
Proof. exact (fun h0 : term867 _144530 _144607 P q f a => @lem8212624 _144530 _144607 P q f a h1). Qed.
Lemma lem8212627 (p : Prop) : (term57 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8212628 {_144530 _144607 P : Type'} (q : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) : (term916 _144530 _144607 P q f a) = (term822 _144530 _144607 P q f a).
Proof. exact (@lem8212627 (term822 _144530 _144607 P q f a)). Qed.
Lemma lem8212629 {_144530 _144607 P : Type'} (q : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) (h1 : q f a) : term822 _144530 _144607 P q f a.
Proof. exact (EQ_MP (@lem8212628 _144530 _144607 P q f a) (@lem8212625 _144530 _144607 P q f a h1)). Qed.
Lemma lem8212631 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : p g a) : term822 _144530 _144607 P p g a.
Proof. exact (EQ_MP (@lem8206426 _144530 _144607 P p g a) (@lem8206287 _144530 _144607 P p g a h1)). Qed.
Lemma lem8212632 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : p g a) : term916 _144530 _144607 P p g a.
Proof. exact (fun h0 : term867 _144530 _144607 P p g a => @lem8212631 _144530 _144607 P p g a h1). Qed.
Lemma lem8212634 (p : Prop) : (term57 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8212635 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term916 _144530 _144607 P p g a) = (term822 _144530 _144607 P p g a).
Proof. exact (@lem8212634 (term822 _144530 _144607 P p g a)). Qed.
Lemma lem8212636 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : p g a) : term822 _144530 _144607 P p g a.
Proof. exact (EQ_MP (@lem8212635 _144530 _144607 P p g a) (@lem8212632 _144530 _144607 P p g a h1)). Qed.
Lemma lem8212638 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) (h1 : (pat g a) = (e g a)) : (term835 _144530 _144607 _144645 P pat g a) = (term835 _144530 _144607 _144645 P e g a).
Proof. exact (EQ_MP (@lem8206554 _144530 _144607 _144645 P pat e g a) (@lem8206362 _144530 _144607 _144645 P pat e g a h1)). Qed.
Lemma lem8212639 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) (h1 : (pat g a) = (e g a)) : term1174 _144530 _144607 _144645 P pat e g a.
Proof. exact (fun h0 : term1096 _144530 _144607 _144645 P pat e g a => @lem8212638 _144530 _144607 _144645 P pat e g a h1). Qed.
Lemma lem8212641 (p : Prop) : (term57 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8212642 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term1174 _144530 _144607 _144645 P pat e g a) = ((term835 _144530 _144607 _144645 P pat g a) = (term835 _144530 _144607 _144645 P e g a)).
Proof. exact (@lem8212641 ((term835 _144530 _144607 _144645 P pat g a) = (term835 _144530 _144607 _144645 P e g a))). Qed.
Lemma lem8212643 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) (h1 : (pat g a) = (e g a)) : (term835 _144530 _144607 _144645 P pat g a) = (term835 _144530 _144607 _144645 P e g a).
Proof. exact (EQ_MP (@lem8212642 _144530 _144607 _144645 P pat e g a) (@lem8212639 _144530 _144607 _144645 P pat e g a h1)). Qed.
Lemma lem8212645 {_144530 _144607 P : Type'} (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : q g a) : term822 _144530 _144607 P q g a.
Proof. exact (EQ_MP (@lem8206590 _144530 _144607 P q g a) (@lem8206374 _144530 _144607 P q g a h1)). Qed.
Lemma lem8212646 {_144530 _144607 P : Type'} (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : q g a) : term916 _144530 _144607 P q g a.
Proof. exact (fun h0 : term867 _144530 _144607 P q g a => @lem8212645 _144530 _144607 P q g a h1). Qed.
Lemma lem8212648 (p : Prop) : (term57 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8212649 {_144530 _144607 P : Type'} (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term916 _144530 _144607 P q g a) = (term822 _144530 _144607 P q g a).
Proof. exact (@lem8212648 (term822 _144530 _144607 P q g a)). Qed.
Lemma lem8212650 {_144530 _144607 P : Type'} (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : q g a) : term822 _144530 _144607 P q g a.
Proof. exact (EQ_MP (@lem8212649 _144530 _144607 P q g a) (@lem8212646 _144530 _144607 P q g a h1)). Qed.
Lemma lem8212652 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) (h1 : p f a) : term822 _144530 _144607 P p f a.
Proof. exact (EQ_MP (@lem8206408 _144530 _144607 P p f a) (@lem8206281 _144530 _144607 P p f a h1)). Qed.
Lemma lem8212653 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) (h1 : p f a) : term916 _144530 _144607 P p f a.
Proof. exact (fun h0 : term867 _144530 _144607 P p f a => @lem8212652 _144530 _144607 P p f a h1). Qed.
Lemma lem8212655 (p : Prop) : (term57 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8212656 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) : (term916 _144530 _144607 P p f a) = (term822 _144530 _144607 P p f a).
Proof. exact (@lem8212655 (term822 _144530 _144607 P p f a)). Qed.
Lemma lem8212657 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) (h1 : p f a) : term822 _144530 _144607 P p f a.
Proof. exact (EQ_MP (@lem8212656 _144530 _144607 P p f a) (@lem8212653 _144530 _144607 P p f a h1)). Qed.
Lemma lem8212659 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (a : P) (h1 : (pat f a) = (e f a)) : (term835 _144530 _144607 _144645 P pat f a) = (term835 _144530 _144607 _144645 P e f a).
Proof. exact (EQ_MP (@lem8206516 _144530 _144607 _144645 P pat e f a) (@lem8206356 _144530 _144607 _144645 P pat e f a h1)). Qed.
Lemma lem8212660 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (a : P) (h1 : (pat f a) = (e f a)) : term1174 _144530 _144607 _144645 P pat e f a.
Proof. exact (fun h0 : term1096 _144530 _144607 _144645 P pat e f a => @lem8212659 _144530 _144607 _144645 P pat e f a h1). Qed.
Lemma lem8212662 (p : Prop) : (term57 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8212663 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (a : P) : (term1174 _144530 _144607 _144645 P pat e f a) = ((term835 _144530 _144607 _144645 P pat f a) = (term835 _144530 _144607 _144645 P e f a)).
Proof. exact (@lem8212662 ((term835 _144530 _144607 _144645 P pat f a) = (term835 _144530 _144607 _144645 P e f a))). Qed.
Lemma lem8212664 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (a : P) (h1 : (pat f a) = (e f a)) : (term835 _144530 _144607 _144645 P pat f a) = (term835 _144530 _144607 _144645 P e f a).
Proof. exact (EQ_MP (@lem8212663 _144530 _144607 _144645 P pat e f a) (@lem8212660 _144530 _144607 _144645 P pat e f a h1)). Qed.
Lemma lem8212666 {_144530 _144607 P : Type'} (q : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) (h1 : q f a) : term822 _144530 _144607 P q f a.
Proof. exact (EQ_MP (@lem8206572 _144530 _144607 P q f a) (@lem8206368 _144530 _144607 P q f a h1)). Qed.
Lemma lem8212667 {_144530 _144607 P : Type'} (q : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) (h1 : q f a) : term916 _144530 _144607 P q f a.
Proof. exact (fun h0 : term867 _144530 _144607 P q f a => @lem8212666 _144530 _144607 P q f a h1). Qed.
Lemma lem8212669 (p : Prop) : (term57 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8212670 {_144530 _144607 P : Type'} (q : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) : (term916 _144530 _144607 P q f a) = (term822 _144530 _144607 P q f a).
Proof. exact (@lem8212669 (term822 _144530 _144607 P q f a)). Qed.
Lemma lem8212671 {_144530 _144607 P : Type'} (q : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) (h1 : q f a) : term822 _144530 _144607 P q f a.
Proof. exact (EQ_MP (@lem8212670 _144530 _144607 P q f a) (@lem8212667 _144530 _144607 P q f a h1)). Qed.
Lemma lem8212673 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : p g a) : term822 _144530 _144607 P p g a.
Proof. exact (EQ_MP (@lem8206426 _144530 _144607 P p g a) (@lem8206287 _144530 _144607 P p g a h1)). Qed.
Lemma lem8212674 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : p g a) : term916 _144530 _144607 P p g a.
Proof. exact (fun h0 : term867 _144530 _144607 P p g a => @lem8212673 _144530 _144607 P p g a h1). Qed.
Lemma lem8212676 (p : Prop) : (term57 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8212677 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term916 _144530 _144607 P p g a) = (term822 _144530 _144607 P p g a).
Proof. exact (@lem8212676 (term822 _144530 _144607 P p g a)). Qed.
Lemma lem8212678 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : p g a) : term822 _144530 _144607 P p g a.
Proof. exact (EQ_MP (@lem8212677 _144530 _144607 P p g a) (@lem8212674 _144530 _144607 P p g a h1)). Qed.
Lemma lem8212680 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) (h1 : (pat g a) = (e g a)) : (term835 _144530 _144607 _144645 P pat g a) = (term835 _144530 _144607 _144645 P e g a).
Proof. exact (EQ_MP (@lem8206554 _144530 _144607 _144645 P pat e g a) (@lem8206362 _144530 _144607 _144645 P pat e g a h1)). Qed.
Lemma lem8212681 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) (h1 : (pat g a) = (e g a)) : term1174 _144530 _144607 _144645 P pat e g a.
Proof. exact (fun h0 : term1096 _144530 _144607 _144645 P pat e g a => @lem8212680 _144530 _144607 _144645 P pat e g a h1). Qed.
Lemma lem8212683 (p : Prop) : (term57 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8212684 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) : (term1174 _144530 _144607 _144645 P pat e g a) = ((term835 _144530 _144607 _144645 P pat g a) = (term835 _144530 _144607 _144645 P e g a)).
Proof. exact (@lem8212683 ((term835 _144530 _144607 _144645 P pat g a) = (term835 _144530 _144607 _144645 P e g a))). Qed.
Lemma lem8212685 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) (h1 : (pat g a) = (e g a)) : (term835 _144530 _144607 _144645 P pat g a) = (term835 _144530 _144607 _144645 P e g a).
Proof. exact (EQ_MP (@lem8212684 _144530 _144607 _144645 P pat e g a) (@lem8212681 _144530 _144607 _144645 P pat e g a h1)). Qed.
Lemma lem8212687 {_144530 _144607 P : Type'} (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : q g a) : term822 _144530 _144607 P q g a.
Proof. exact (EQ_MP (@lem8206590 _144530 _144607 P q g a) (@lem8206374 _144530 _144607 P q g a h1)). Qed.
Lemma lem8212688 {_144530 _144607 P : Type'} (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : q g a) : term916 _144530 _144607 P q g a.
Proof. exact (fun h0 : term867 _144530 _144607 P q g a => @lem8212687 _144530 _144607 P q g a h1). Qed.
Lemma lem8212690 (p : Prop) : (term57 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8212691 {_144530 _144607 P : Type'} (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) : (term916 _144530 _144607 P q g a) = (term822 _144530 _144607 P q g a).
Proof. exact (@lem8212690 (term822 _144530 _144607 P q g a)). Qed.
Lemma lem8212692 {_144530 _144607 P : Type'} (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : q g a) : term822 _144530 _144607 P q g a.
Proof. exact (EQ_MP (@lem8212691 _144530 _144607 P q g a) (@lem8212688 _144530 _144607 P q g a h1)). Qed.
Lemma lem8212695 {_144530 _144607 _144654 P : Type'} (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) (h1 : term839 _144530 _144607 _144654 P f y g a) : term839 _144530 _144607 _144654 P f y g a.
Proof. exact (h1). Qed.
Lemma lem8212696 {_144530 _144607 _144654 P : Type'} (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) (h1 : term839 _144530 _144607 _144654 P f y g a) : term917 _144530 _144607 _144654 P f y g a.
Proof. exact (fun h0 : (term835 _144530 _144607 _144654 P y f a) = (term835 _144530 _144607 _144654 P y g a) => @lem8212695 _144530 _144607 _144654 P f y g a h1). Qed.
Lemma lem8212698 (p : Prop) : (term918 p) = (~ p).
Proof. exact (EQ_MP (@lem21028 p) (@lem21107 p)). Qed.
Lemma lem8212699 {_144530 _144607 _144654 P : Type'} (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (term917 _144530 _144607 _144654 P f y g a) = (term839 _144530 _144607 _144654 P f y g a).
Proof. exact (@lem8212698 ((term835 _144530 _144607 _144654 P y f a) = (term835 _144530 _144607 _144654 P y g a))). Qed.
Lemma lem8212700 {_144530 _144607 _144654 P : Type'} (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) (h1 : term839 _144530 _144607 _144654 P f y g a) : term839 _144530 _144607 _144654 P f y g a.
Proof. exact (EQ_MP (@lem8212699 _144530 _144607 _144654 P f y g a) (@lem8212696 _144530 _144607 _144654 P f y g a h1)). Qed.
Lemma lem8212706 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8212707 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (z : type518 _144530 _144607 P) (s : P -> _144529) (_109018 : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term1541 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 z s _109018 y _109019 _109020) = (term1555 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 z s _109018 y _109019 _109020).
Proof. exact (@lem8212706 (term1096 _144530 _144607 _144645 P pat e _109018 _109020) (term867 _144530 _144607 P p _109018 _109020) (term1556 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 z s _109018 y _109019 _109020)). Qed.
Lemma lem8212733 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8212734 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (z : type518 _144530 _144607 P) (s : P -> _144529) (_109018 : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term1556 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 z s _109018 y _109019 _109020) = (term1557 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 z s _109018 y _109019 _109020).
Proof. exact (@lem8212733 (term867 _144530 _144607 P p _109019 _109020) (term867 _144530 _144607 P q _109018 _109020) (term1535 _144529 _144530 _144607 _144645 _144654 P pat e q lt2 z s _109018 y _109019 _109020)). Qed.
Lemma lem8212748 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8212749 {_144529 _144530 _144607 _144645 _144654 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (z : type518 _144530 _144607 P) (s : P -> _144529) (_109018 : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term1558 _144529 _144530 _144607 _144645 _144654 P pat e q lt2 z s _109018 y _109019 _109020) = (term1559 _144529 _144530 _144607 _144645 _144654 P pat e q lt2 z s _109018 y _109019 _109020).
Proof. exact (@lem8212748 (term1096 _144530 _144607 _144645 P pat e _109019 _109020) (term867 _144530 _144607 P q _109018 _109020) (term910 _144529 _144530 _144607 _144654 P q lt2 z s _109018 y _109019 _109020)). Qed.
Lemma lem8212775 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8212776 {_144529 _144530 _144607 _144654 P : Type'} (lt2 : type1470 _144529 _144530) (z : type518 _144530 _144607 P) (s : P -> _144529) (q : type560 _144530 _144607 P) (_109018 : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term910 _144529 _144530 _144607 _144654 P q lt2 z s _109018 y _109019 _109020) = (term919 _144529 _144530 _144607 _144654 P lt2 z s q _109018 y _109019 _109020).
Proof. exact (@lem8212775 (term862 _144529 _144530 _144607 P lt2 z _109018 _109019 s _109020) (term867 _144530 _144607 P q _109019 _109020) ((term835 _144530 _144607 _144654 P y _109018 _109020) = (term835 _144530 _144607 _144654 P y _109019 _109020))). Qed.
Lemma lem8212790 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem8212791 {_144530 _144607 _144654 P : Type'} (_109018 : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (q : type560 _144530 _144607 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term920 _144530 _144607 _144654 P q _109018 y _109019 _109020) = (term921 _144530 _144607 _144654 P _109018 y q _109019 _109020).
Proof. exact (@lem8212790 ((term835 _144530 _144607 _144654 P y _109018 _109020) = (term835 _144530 _144607 _144654 P y _109019 _109020)) (term867 _144530 _144607 P q _109019 _109020)). Qed.
Lemma lem8212799 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (z : type518 _144530 _144607 P) (_109018 : _144530 -> _144607) (_109019 : _144530 -> _144607) (s : P -> _144529) (_109020 : P) : (term922 _144529 _144530 _144607 P lt2 z _109018 _109019 s _109020) = (term922 _144529 _144530 _144607 P lt2 z _109018 _109019 s _109020).
Proof. exact (eq_refl (term922 _144529 _144530 _144607 P lt2 z _109018 _109019 s _109020)). Qed.
Lemma lem8212800 {_144529 _144530 _144607 _144654 P : Type'} (lt2 : type1470 _144529 _144530) (z : type518 _144530 _144607 P) (s : P -> _144529) (_109018 : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (q : type560 _144530 _144607 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term919 _144529 _144530 _144607 _144654 P lt2 z s q _109018 y _109019 _109020) = (term923 _144529 _144530 _144607 _144654 P lt2 z s _109018 y q _109019 _109020).
Proof. exact (MK_COMB (@lem8212799 _144529 _144530 _144607 P lt2 z _109018 _109019 s _109020) (@lem8212791 _144530 _144607 _144654 P _109018 y q _109019 _109020)). Qed.
Lemma lem8212804 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8212805 {_144529 _144530 _144607 _144654 P : Type'} (y : type564 _144530 _144607 _144654 P) (lt2 : type1470 _144529 _144530) (z : type518 _144530 _144607 P) (_109018 : _144530 -> _144607) (s : P -> _144529) (q : type560 _144530 _144607 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term923 _144529 _144530 _144607 _144654 P lt2 z s _109018 y q _109019 _109020) = (term924 _144529 _144530 _144607 _144654 P y lt2 z _109018 s q _109019 _109020).
Proof. exact (@lem8212804 ((term835 _144530 _144607 _144654 P y _109018 _109020) = (term835 _144530 _144607 _144654 P y _109019 _109020)) (term862 _144529 _144530 _144607 P lt2 z _109018 _109019 s _109020) (term867 _144530 _144607 P q _109019 _109020)). Qed.
Lemma lem8212823 {_144529 _144530 _144607 _144654 P : Type'} (y : type564 _144530 _144607 _144654 P) (lt2 : type1470 _144529 _144530) (z : type518 _144530 _144607 P) (_109018 : _144530 -> _144607) (s : P -> _144529) (q : type560 _144530 _144607 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term919 _144529 _144530 _144607 _144654 P lt2 z s q _109018 y _109019 _109020) = (term924 _144529 _144530 _144607 _144654 P y lt2 z _109018 s q _109019 _109020).
Proof. exact (TRANS (@lem8212800 _144529 _144530 _144607 _144654 P lt2 z s _109018 y q _109019 _109020) (@lem8212805 _144529 _144530 _144607 _144654 P y lt2 z _109018 s q _109019 _109020)). Qed.
Lemma lem8212824 {_144529 _144530 _144607 _144654 P : Type'} (y : type564 _144530 _144607 _144654 P) (lt2 : type1470 _144529 _144530) (z : type518 _144530 _144607 P) (_109018 : _144530 -> _144607) (s : P -> _144529) (q : type560 _144530 _144607 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term910 _144529 _144530 _144607 _144654 P q lt2 z s _109018 y _109019 _109020) = (term924 _144529 _144530 _144607 _144654 P y lt2 z _109018 s q _109019 _109020).
Proof. exact (TRANS (@lem8212776 _144529 _144530 _144607 _144654 P lt2 z s q _109018 y _109019 _109020) (@lem8212823 _144529 _144530 _144607 _144654 P y lt2 z _109018 s q _109019 _109020)). Qed.
Lemma lem8212825 {_144530 _144607 P : Type'} (q : type560 _144530 _144607 P) (_109018 : _144530 -> _144607) (_109020 : P) : (term868 _144530 _144607 P q _109018 _109020) = (term868 _144530 _144607 P q _109018 _109020).
Proof. exact (eq_refl (term868 _144530 _144607 P q _109018 _109020)). Qed.
Lemma lem8212826 {_144529 _144530 _144607 _144654 P : Type'} (y : type564 _144530 _144607 _144654 P) (lt2 : type1470 _144529 _144530) (z : type518 _144530 _144607 P) (_109018 : _144530 -> _144607) (s : P -> _144529) (q : type560 _144530 _144607 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term911 _144529 _144530 _144607 _144654 P q lt2 z s _109018 y _109019 _109020) = (term925 _144529 _144530 _144607 _144654 P y lt2 z _109018 s q _109019 _109020).
Proof. exact (MK_COMB (@lem8212825 _144530 _144607 P q _109018 _109020) (@lem8212824 _144529 _144530 _144607 _144654 P y lt2 z _109018 s q _109019 _109020)). Qed.
Lemma lem8212830 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8212831 {_144529 _144530 _144607 _144654 P : Type'} (y : type564 _144530 _144607 _144654 P) (lt2 : type1470 _144529 _144530) (z : type518 _144530 _144607 P) (_109018 : _144530 -> _144607) (s : P -> _144529) (q : type560 _144530 _144607 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term925 _144529 _144530 _144607 _144654 P y lt2 z _109018 s q _109019 _109020) = (term926 _144529 _144530 _144607 _144654 P y lt2 z _109018 s q _109019 _109020).
Proof. exact (@lem8212830 ((term835 _144530 _144607 _144654 P y _109018 _109020) = (term835 _144530 _144607 _144654 P y _109019 _109020)) (term867 _144530 _144607 P q _109018 _109020) (term927 _144529 _144530 _144607 P lt2 z _109018 s q _109019 _109020)). Qed.
Lemma lem8212847 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8212848 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (z : type518 _144530 _144607 P) (s : P -> _144529) (_109018 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term928 _144529 _144530 _144607 P lt2 z _109018 s q _109019 _109020) = (term929 _144529 _144530 _144607 P lt2 z s _109018 q _109019 _109020).
Proof. exact (@lem8212847 (term862 _144529 _144530 _144607 P lt2 z _109018 _109019 s _109020) (term867 _144530 _144607 P q _109018 _109020) (term867 _144530 _144607 P q _109019 _109020)). Qed.
Lemma lem8212864 {_144530 _144607 _144654 P : Type'} (_109018 : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term930 _144530 _144607 _144654 P _109018 y _109019 _109020) = (term930 _144530 _144607 _144654 P _109018 y _109019 _109020).
Proof. exact (eq_refl (term930 _144530 _144607 _144654 P _109018 y _109019 _109020)). Qed.
Lemma lem8212865 {_144529 _144530 _144607 _144654 P : Type'} (y : type564 _144530 _144607 _144654 P) (lt2 : type1470 _144529 _144530) (z : type518 _144530 _144607 P) (s : P -> _144529) (_109018 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term926 _144529 _144530 _144607 _144654 P y lt2 z _109018 s q _109019 _109020) = (term931 _144529 _144530 _144607 _144654 P y lt2 z s _109018 q _109019 _109020).
Proof. exact (MK_COMB (@lem8212864 _144530 _144607 _144654 P _109018 y _109019 _109020) (@lem8212848 _144529 _144530 _144607 P lt2 z s _109018 q _109019 _109020)). Qed.
Lemma lem8212876 {_144529 _144530 _144607 _144654 P : Type'} (y : type564 _144530 _144607 _144654 P) (lt2 : type1470 _144529 _144530) (z : type518 _144530 _144607 P) (s : P -> _144529) (_109018 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term925 _144529 _144530 _144607 _144654 P y lt2 z _109018 s q _109019 _109020) = (term931 _144529 _144530 _144607 _144654 P y lt2 z s _109018 q _109019 _109020).
Proof. exact (TRANS (@lem8212831 _144529 _144530 _144607 _144654 P y lt2 z _109018 s q _109019 _109020) (@lem8212865 _144529 _144530 _144607 _144654 P y lt2 z s _109018 q _109019 _109020)). Qed.
Lemma lem8212877 {_144529 _144530 _144607 _144654 P : Type'} (y : type564 _144530 _144607 _144654 P) (lt2 : type1470 _144529 _144530) (z : type518 _144530 _144607 P) (s : P -> _144529) (_109018 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term911 _144529 _144530 _144607 _144654 P q lt2 z s _109018 y _109019 _109020) = (term931 _144529 _144530 _144607 _144654 P y lt2 z s _109018 q _109019 _109020).
Proof. exact (TRANS (@lem8212826 _144529 _144530 _144607 _144654 P y lt2 z _109018 s q _109019 _109020) (@lem8212876 _144529 _144530 _144607 _144654 P y lt2 z s _109018 q _109019 _109020)). Qed.
Lemma lem8212878 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term1184 _144530 _144607 _144645 P pat e _109019 _109020) = (term1184 _144530 _144607 _144645 P pat e _109019 _109020).
Proof. exact (eq_refl (term1184 _144530 _144607 _144645 P pat e _109019 _109020)). Qed.
Lemma lem8212879 {_144529 _144530 _144607 _144645 _144654 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (y : type564 _144530 _144607 _144654 P) (lt2 : type1470 _144529 _144530) (z : type518 _144530 _144607 P) (s : P -> _144529) (_109018 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term1559 _144529 _144530 _144607 _144645 _144654 P pat e q lt2 z s _109018 y _109019 _109020) = (term1560 _144529 _144530 _144607 _144645 _144654 P pat e y lt2 z s _109018 q _109019 _109020).
Proof. exact (MK_COMB (@lem8212878 _144530 _144607 _144645 P pat e _109019 _109020) (@lem8212877 _144529 _144530 _144607 _144654 P y lt2 z s _109018 q _109019 _109020)). Qed.
Lemma lem8212883 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8212884 {_144529 _144530 _144607 _144645 _144654 P : Type'} (y : type564 _144530 _144607 _144654 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (z : type518 _144530 _144607 P) (s : P -> _144529) (_109018 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term1560 _144529 _144530 _144607 _144645 _144654 P pat e y lt2 z s _109018 q _109019 _109020) = (term1561 _144529 _144530 _144607 _144645 _144654 P y pat e lt2 z s _109018 q _109019 _109020).
Proof. exact (@lem8212883 ((term835 _144530 _144607 _144654 P y _109018 _109020) = (term835 _144530 _144607 _144654 P y _109019 _109020)) (term1096 _144530 _144607 _144645 P pat e _109019 _109020) (term929 _144529 _144530 _144607 P lt2 z s _109018 q _109019 _109020)). Qed.
Lemma lem8212900 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8212901 {_144529 _144530 _144607 _144645 P : Type'} (lt2 : type1470 _144529 _144530) (z : type518 _144530 _144607 P) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (_109018 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term1562 _144529 _144530 _144607 _144645 P pat e lt2 z s _109018 q _109019 _109020) = (term1563 _144529 _144530 _144607 _144645 P lt2 z s pat e _109018 q _109019 _109020).
Proof. exact (@lem8212900 (term862 _144529 _144530 _144607 P lt2 z _109018 _109019 s _109020) (term1096 _144530 _144607 _144645 P pat e _109019 _109020) (term939 _144530 _144607 P _109018 q _109019 _109020)). Qed.
Lemma lem8212929 {_144530 _144607 _144654 P : Type'} (_109018 : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term930 _144530 _144607 _144654 P _109018 y _109019 _109020) = (term930 _144530 _144607 _144654 P _109018 y _109019 _109020).
Proof. exact (eq_refl (term930 _144530 _144607 _144654 P _109018 y _109019 _109020)). Qed.
Lemma lem8212930 {_144529 _144530 _144607 _144645 _144654 P : Type'} (y : type564 _144530 _144607 _144654 P) (lt2 : type1470 _144529 _144530) (z : type518 _144530 _144607 P) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (_109018 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term1561 _144529 _144530 _144607 _144645 _144654 P y pat e lt2 z s _109018 q _109019 _109020) = (term1564 _144529 _144530 _144607 _144645 _144654 P y lt2 z s pat e _109018 q _109019 _109020).
Proof. exact (MK_COMB (@lem8212929 _144530 _144607 _144654 P _109018 y _109019 _109020) (@lem8212901 _144529 _144530 _144607 _144645 P lt2 z s pat e _109018 q _109019 _109020)). Qed.
Lemma lem8212941 {_144529 _144530 _144607 _144645 _144654 P : Type'} (y : type564 _144530 _144607 _144654 P) (lt2 : type1470 _144529 _144530) (z : type518 _144530 _144607 P) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (_109018 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term1560 _144529 _144530 _144607 _144645 _144654 P pat e y lt2 z s _109018 q _109019 _109020) = (term1564 _144529 _144530 _144607 _144645 _144654 P y lt2 z s pat e _109018 q _109019 _109020).
Proof. exact (TRANS (@lem8212884 _144529 _144530 _144607 _144645 _144654 P y pat e lt2 z s _109018 q _109019 _109020) (@lem8212930 _144529 _144530 _144607 _144645 _144654 P y lt2 z s pat e _109018 q _109019 _109020)). Qed.
Lemma lem8212942 {_144529 _144530 _144607 _144645 _144654 P : Type'} (y : type564 _144530 _144607 _144654 P) (lt2 : type1470 _144529 _144530) (z : type518 _144530 _144607 P) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (_109018 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term1559 _144529 _144530 _144607 _144645 _144654 P pat e q lt2 z s _109018 y _109019 _109020) = (term1564 _144529 _144530 _144607 _144645 _144654 P y lt2 z s pat e _109018 q _109019 _109020).
Proof. exact (TRANS (@lem8212879 _144529 _144530 _144607 _144645 _144654 P pat e y lt2 z s _109018 q _109019 _109020) (@lem8212941 _144529 _144530 _144607 _144645 _144654 P y lt2 z s pat e _109018 q _109019 _109020)). Qed.
Lemma lem8212943 {_144529 _144530 _144607 _144645 _144654 P : Type'} (y : type564 _144530 _144607 _144654 P) (lt2 : type1470 _144529 _144530) (z : type518 _144530 _144607 P) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (_109018 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term1558 _144529 _144530 _144607 _144645 _144654 P pat e q lt2 z s _109018 y _109019 _109020) = (term1564 _144529 _144530 _144607 _144645 _144654 P y lt2 z s pat e _109018 q _109019 _109020).
Proof. exact (TRANS (@lem8212749 _144529 _144530 _144607 _144645 _144654 P pat e q lt2 z s _109018 y _109019 _109020) (@lem8212942 _144529 _144530 _144607 _144645 _144654 P y lt2 z s pat e _109018 q _109019 _109020)). Qed.
Lemma lem8212944 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term868 _144530 _144607 P p _109019 _109020) = (term868 _144530 _144607 P p _109019 _109020).
Proof. exact (eq_refl (term868 _144530 _144607 P p _109019 _109020)). Qed.
Lemma lem8212945 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (y : type564 _144530 _144607 _144654 P) (lt2 : type1470 _144529 _144530) (z : type518 _144530 _144607 P) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (_109018 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term1557 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 z s _109018 y _109019 _109020) = (term1565 _144529 _144530 _144607 _144645 _144654 P p y lt2 z s pat e _109018 q _109019 _109020).
Proof. exact (MK_COMB (@lem8212944 _144530 _144607 P p _109019 _109020) (@lem8212943 _144529 _144530 _144607 _144645 _144654 P y lt2 z s pat e _109018 q _109019 _109020)). Qed.
Lemma lem8212949 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8212950 {_144529 _144530 _144607 _144645 _144654 P : Type'} (y : type564 _144530 _144607 _144654 P) (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (z : type518 _144530 _144607 P) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (_109018 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term1565 _144529 _144530 _144607 _144645 _144654 P p y lt2 z s pat e _109018 q _109019 _109020) = (term1566 _144529 _144530 _144607 _144645 _144654 P y p lt2 z s pat e _109018 q _109019 _109020).
Proof. exact (@lem8212949 ((term835 _144530 _144607 _144654 P y _109018 _109020) = (term835 _144530 _144607 _144654 P y _109019 _109020)) (term867 _144530 _144607 P p _109019 _109020) (term1563 _144529 _144530 _144607 _144645 P lt2 z s pat e _109018 q _109019 _109020)). Qed.
Lemma lem8212966 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8212967 {_144529 _144530 _144607 _144645 P : Type'} (lt2 : type1470 _144529 _144530) (z : type518 _144530 _144607 P) (s : P -> _144529) (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (_109018 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term1567 _144529 _144530 _144607 _144645 P p lt2 z s pat e _109018 q _109019 _109020) = (term1568 _144529 _144530 _144607 _144645 P lt2 z s p pat e _109018 q _109019 _109020).
Proof. exact (@lem8212966 (term862 _144529 _144530 _144607 P lt2 z _109018 _109019 s _109020) (term867 _144530 _144607 P p _109019 _109020) (term1569 _144530 _144607 _144645 P pat e _109018 q _109019 _109020)). Qed.
Lemma lem8212981 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8212982 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_109018 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term1570 _144530 _144607 _144645 P p pat e _109018 q _109019 _109020) = (term1571 _144530 _144607 _144645 P pat e p _109018 q _109019 _109020).
Proof. exact (@lem8212981 (term1096 _144530 _144607 _144645 P pat e _109019 _109020) (term867 _144530 _144607 P p _109019 _109020) (term939 _144530 _144607 P _109018 q _109019 _109020)). Qed.
Lemma lem8213010 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (z : type518 _144530 _144607 P) (_109018 : _144530 -> _144607) (_109019 : _144530 -> _144607) (s : P -> _144529) (_109020 : P) : (term922 _144529 _144530 _144607 P lt2 z _109018 _109019 s _109020) = (term922 _144529 _144530 _144607 P lt2 z _109018 _109019 s _109020).
Proof. exact (eq_refl (term922 _144529 _144530 _144607 P lt2 z _109018 _109019 s _109020)). Qed.
Lemma lem8213011 {_144529 _144530 _144607 _144645 P : Type'} (lt2 : type1470 _144529 _144530) (z : type518 _144530 _144607 P) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_109018 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term1568 _144529 _144530 _144607 _144645 P lt2 z s p pat e _109018 q _109019 _109020) = (term1572 _144529 _144530 _144607 _144645 P lt2 z s pat e p _109018 q _109019 _109020).
Proof. exact (MK_COMB (@lem8213010 _144529 _144530 _144607 P lt2 z _109018 _109019 s _109020) (@lem8212982 _144530 _144607 _144645 P pat e p _109018 q _109019 _109020)). Qed.
Lemma lem8213022 {_144529 _144530 _144607 _144645 P : Type'} (lt2 : type1470 _144529 _144530) (z : type518 _144530 _144607 P) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_109018 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term1567 _144529 _144530 _144607 _144645 P p lt2 z s pat e _109018 q _109019 _109020) = (term1572 _144529 _144530 _144607 _144645 P lt2 z s pat e p _109018 q _109019 _109020).
Proof. exact (TRANS (@lem8212967 _144529 _144530 _144607 _144645 P lt2 z s p pat e _109018 q _109019 _109020) (@lem8213011 _144529 _144530 _144607 _144645 P lt2 z s pat e p _109018 q _109019 _109020)). Qed.
Lemma lem8213023 {_144530 _144607 _144654 P : Type'} (_109018 : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term930 _144530 _144607 _144654 P _109018 y _109019 _109020) = (term930 _144530 _144607 _144654 P _109018 y _109019 _109020).
Proof. exact (eq_refl (term930 _144530 _144607 _144654 P _109018 y _109019 _109020)). Qed.
Lemma lem8213024 {_144529 _144530 _144607 _144645 _144654 P : Type'} (y : type564 _144530 _144607 _144654 P) (lt2 : type1470 _144529 _144530) (z : type518 _144530 _144607 P) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_109018 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term1566 _144529 _144530 _144607 _144645 _144654 P y p lt2 z s pat e _109018 q _109019 _109020) = (term1573 _144529 _144530 _144607 _144645 _144654 P y lt2 z s pat e p _109018 q _109019 _109020).
Proof. exact (MK_COMB (@lem8213023 _144530 _144607 _144654 P _109018 y _109019 _109020) (@lem8213022 _144529 _144530 _144607 _144645 P lt2 z s pat e p _109018 q _109019 _109020)). Qed.
Lemma lem8213035 {_144529 _144530 _144607 _144645 _144654 P : Type'} (y : type564 _144530 _144607 _144654 P) (lt2 : type1470 _144529 _144530) (z : type518 _144530 _144607 P) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_109018 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term1565 _144529 _144530 _144607 _144645 _144654 P p y lt2 z s pat e _109018 q _109019 _109020) = (term1573 _144529 _144530 _144607 _144645 _144654 P y lt2 z s pat e p _109018 q _109019 _109020).
Proof. exact (TRANS (@lem8212950 _144529 _144530 _144607 _144645 _144654 P y p lt2 z s pat e _109018 q _109019 _109020) (@lem8213024 _144529 _144530 _144607 _144645 _144654 P y lt2 z s pat e p _109018 q _109019 _109020)). Qed.
Lemma lem8213036 {_144529 _144530 _144607 _144645 _144654 P : Type'} (y : type564 _144530 _144607 _144654 P) (lt2 : type1470 _144529 _144530) (z : type518 _144530 _144607 P) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_109018 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term1557 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 z s _109018 y _109019 _109020) = (term1573 _144529 _144530 _144607 _144645 _144654 P y lt2 z s pat e p _109018 q _109019 _109020).
Proof. exact (TRANS (@lem8212945 _144529 _144530 _144607 _144645 _144654 P p y lt2 z s pat e _109018 q _109019 _109020) (@lem8213035 _144529 _144530 _144607 _144645 _144654 P y lt2 z s pat e p _109018 q _109019 _109020)). Qed.
Lemma lem8213037 {_144529 _144530 _144607 _144645 _144654 P : Type'} (y : type564 _144530 _144607 _144654 P) (lt2 : type1470 _144529 _144530) (z : type518 _144530 _144607 P) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_109018 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term1556 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 z s _109018 y _109019 _109020) = (term1573 _144529 _144530 _144607 _144645 _144654 P y lt2 z s pat e p _109018 q _109019 _109020).
Proof. exact (TRANS (@lem8212734 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 z s _109018 y _109019 _109020) (@lem8213036 _144529 _144530 _144607 _144645 _144654 P y lt2 z s pat e p _109018 q _109019 _109020)). Qed.
Lemma lem8213038 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (_109018 : _144530 -> _144607) (_109020 : P) : (term868 _144530 _144607 P p _109018 _109020) = (term868 _144530 _144607 P p _109018 _109020).
Proof. exact (eq_refl (term868 _144530 _144607 P p _109018 _109020)). Qed.
Lemma lem8213039 {_144529 _144530 _144607 _144645 _144654 P : Type'} (y : type564 _144530 _144607 _144654 P) (lt2 : type1470 _144529 _144530) (z : type518 _144530 _144607 P) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_109018 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term1574 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 z s _109018 y _109019 _109020) = (term1575 _144529 _144530 _144607 _144645 _144654 P y lt2 z s pat e p _109018 q _109019 _109020).
Proof. exact (MK_COMB (@lem8213038 _144530 _144607 P p _109018 _109020) (@lem8213037 _144529 _144530 _144607 _144645 _144654 P y lt2 z s pat e p _109018 q _109019 _109020)). Qed.
Lemma lem8213043 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8213044 {_144529 _144530 _144607 _144645 _144654 P : Type'} (y : type564 _144530 _144607 _144654 P) (lt2 : type1470 _144529 _144530) (z : type518 _144530 _144607 P) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_109018 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term1575 _144529 _144530 _144607 _144645 _144654 P y lt2 z s pat e p _109018 q _109019 _109020) = (term1576 _144529 _144530 _144607 _144645 _144654 P y lt2 z s pat e p _109018 q _109019 _109020).
Proof. exact (@lem8213043 ((term835 _144530 _144607 _144654 P y _109018 _109020) = (term835 _144530 _144607 _144654 P y _109019 _109020)) (term867 _144530 _144607 P p _109018 _109020) (term1572 _144529 _144530 _144607 _144645 P lt2 z s pat e p _109018 q _109019 _109020)). Qed.
Lemma lem8213060 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8213061 {_144529 _144530 _144607 _144645 P : Type'} (lt2 : type1470 _144529 _144530) (z : type518 _144530 _144607 P) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_109018 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term1577 _144529 _144530 _144607 _144645 P lt2 z s pat e p _109018 q _109019 _109020) = (term1578 _144529 _144530 _144607 _144645 P lt2 z s pat e p _109018 q _109019 _109020).
Proof. exact (@lem8213060 (term862 _144529 _144530 _144607 P lt2 z _109018 _109019 s _109020) (term867 _144530 _144607 P p _109018 _109020) (term1571 _144530 _144607 _144645 P pat e p _109018 q _109019 _109020)). Qed.
Lemma lem8213075 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8213076 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_109018 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term1579 _144530 _144607 _144645 P pat e p _109018 q _109019 _109020) = (term1580 _144530 _144607 _144645 P pat e p _109018 q _109019 _109020).
Proof. exact (@lem8213075 (term1096 _144530 _144607 _144645 P pat e _109019 _109020) (term867 _144530 _144607 P p _109018 _109020) (term1581 _144530 _144607 P p _109018 q _109019 _109020)). Qed.
Lemma lem8213114 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (z : type518 _144530 _144607 P) (_109018 : _144530 -> _144607) (_109019 : _144530 -> _144607) (s : P -> _144529) (_109020 : P) : (term922 _144529 _144530 _144607 P lt2 z _109018 _109019 s _109020) = (term922 _144529 _144530 _144607 P lt2 z _109018 _109019 s _109020).
Proof. exact (eq_refl (term922 _144529 _144530 _144607 P lt2 z _109018 _109019 s _109020)). Qed.
Lemma lem8213115 {_144529 _144530 _144607 _144645 P : Type'} (lt2 : type1470 _144529 _144530) (z : type518 _144530 _144607 P) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_109018 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term1578 _144529 _144530 _144607 _144645 P lt2 z s pat e p _109018 q _109019 _109020) = (term1582 _144529 _144530 _144607 _144645 P lt2 z s pat e p _109018 q _109019 _109020).
Proof. exact (MK_COMB (@lem8213114 _144529 _144530 _144607 P lt2 z _109018 _109019 s _109020) (@lem8213076 _144530 _144607 _144645 P pat e p _109018 q _109019 _109020)). Qed.
Lemma lem8213126 {_144529 _144530 _144607 _144645 P : Type'} (lt2 : type1470 _144529 _144530) (z : type518 _144530 _144607 P) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_109018 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term1577 _144529 _144530 _144607 _144645 P lt2 z s pat e p _109018 q _109019 _109020) = (term1582 _144529 _144530 _144607 _144645 P lt2 z s pat e p _109018 q _109019 _109020).
Proof. exact (TRANS (@lem8213061 _144529 _144530 _144607 _144645 P lt2 z s pat e p _109018 q _109019 _109020) (@lem8213115 _144529 _144530 _144607 _144645 P lt2 z s pat e p _109018 q _109019 _109020)). Qed.
Lemma lem8213127 {_144530 _144607 _144654 P : Type'} (_109018 : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term930 _144530 _144607 _144654 P _109018 y _109019 _109020) = (term930 _144530 _144607 _144654 P _109018 y _109019 _109020).
Proof. exact (eq_refl (term930 _144530 _144607 _144654 P _109018 y _109019 _109020)). Qed.
Lemma lem8213128 {_144529 _144530 _144607 _144645 _144654 P : Type'} (y : type564 _144530 _144607 _144654 P) (lt2 : type1470 _144529 _144530) (z : type518 _144530 _144607 P) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_109018 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term1576 _144529 _144530 _144607 _144645 _144654 P y lt2 z s pat e p _109018 q _109019 _109020) = (term1583 _144529 _144530 _144607 _144645 _144654 P y lt2 z s pat e p _109018 q _109019 _109020).
Proof. exact (MK_COMB (@lem8213127 _144530 _144607 _144654 P _109018 y _109019 _109020) (@lem8213126 _144529 _144530 _144607 _144645 P lt2 z s pat e p _109018 q _109019 _109020)). Qed.
Lemma lem8213139 {_144529 _144530 _144607 _144645 _144654 P : Type'} (y : type564 _144530 _144607 _144654 P) (lt2 : type1470 _144529 _144530) (z : type518 _144530 _144607 P) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_109018 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term1575 _144529 _144530 _144607 _144645 _144654 P y lt2 z s pat e p _109018 q _109019 _109020) = (term1583 _144529 _144530 _144607 _144645 _144654 P y lt2 z s pat e p _109018 q _109019 _109020).
Proof. exact (TRANS (@lem8213044 _144529 _144530 _144607 _144645 _144654 P y lt2 z s pat e p _109018 q _109019 _109020) (@lem8213128 _144529 _144530 _144607 _144645 _144654 P y lt2 z s pat e p _109018 q _109019 _109020)). Qed.
Lemma lem8213140 {_144529 _144530 _144607 _144645 _144654 P : Type'} (y : type564 _144530 _144607 _144654 P) (lt2 : type1470 _144529 _144530) (z : type518 _144530 _144607 P) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_109018 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term1574 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 z s _109018 y _109019 _109020) = (term1583 _144529 _144530 _144607 _144645 _144654 P y lt2 z s pat e p _109018 q _109019 _109020).
Proof. exact (TRANS (@lem8213039 _144529 _144530 _144607 _144645 _144654 P y lt2 z s pat e p _109018 q _109019 _109020) (@lem8213139 _144529 _144530 _144607 _144645 _144654 P y lt2 z s pat e p _109018 q _109019 _109020)). Qed.
Lemma lem8213141 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (_109018 : _144530 -> _144607) (_109020 : P) : (term1184 _144530 _144607 _144645 P pat e _109018 _109020) = (term1184 _144530 _144607 _144645 P pat e _109018 _109020).
Proof. exact (eq_refl (term1184 _144530 _144607 _144645 P pat e _109018 _109020)). Qed.
Lemma lem8213142 {_144529 _144530 _144607 _144645 _144654 P : Type'} (y : type564 _144530 _144607 _144654 P) (lt2 : type1470 _144529 _144530) (z : type518 _144530 _144607 P) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_109018 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term1555 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 z s _109018 y _109019 _109020) = (term1584 _144529 _144530 _144607 _144645 _144654 P y lt2 z s pat e p _109018 q _109019 _109020).
Proof. exact (MK_COMB (@lem8213141 _144530 _144607 _144645 P pat e _109018 _109020) (@lem8213140 _144529 _144530 _144607 _144645 _144654 P y lt2 z s pat e p _109018 q _109019 _109020)). Qed.
Lemma lem8213146 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8213147 {_144529 _144530 _144607 _144645 _144654 P : Type'} (y : type564 _144530 _144607 _144654 P) (lt2 : type1470 _144529 _144530) (z : type518 _144530 _144607 P) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_109018 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term1584 _144529 _144530 _144607 _144645 _144654 P y lt2 z s pat e p _109018 q _109019 _109020) = (term1585 _144529 _144530 _144607 _144645 _144654 P y lt2 z s pat e p _109018 q _109019 _109020).
Proof. exact (@lem8213146 ((term835 _144530 _144607 _144654 P y _109018 _109020) = (term835 _144530 _144607 _144654 P y _109019 _109020)) (term1096 _144530 _144607 _144645 P pat e _109018 _109020) (term1582 _144529 _144530 _144607 _144645 P lt2 z s pat e p _109018 q _109019 _109020)). Qed.
Lemma lem8213163 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8213164 {_144529 _144530 _144607 _144645 P : Type'} (lt2 : type1470 _144529 _144530) (z : type518 _144530 _144607 P) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_109018 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term1586 _144529 _144530 _144607 _144645 P lt2 z s pat e p _109018 q _109019 _109020) = (term1587 _144529 _144530 _144607 _144645 P lt2 z s pat e p _109018 q _109019 _109020).
Proof. exact (@lem8213163 (term862 _144529 _144530 _144607 P lt2 z _109018 _109019 s _109020) (term1096 _144530 _144607 _144645 P pat e _109018 _109020) (term1580 _144530 _144607 _144645 P pat e p _109018 q _109019 _109020)). Qed.
Lemma lem8213224 {_144530 _144607 _144654 P : Type'} (_109018 : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term930 _144530 _144607 _144654 P _109018 y _109019 _109020) = (term930 _144530 _144607 _144654 P _109018 y _109019 _109020).
Proof. exact (eq_refl (term930 _144530 _144607 _144654 P _109018 y _109019 _109020)). Qed.
Lemma lem8213225 {_144529 _144530 _144607 _144645 _144654 P : Type'} (y : type564 _144530 _144607 _144654 P) (lt2 : type1470 _144529 _144530) (z : type518 _144530 _144607 P) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_109018 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term1585 _144529 _144530 _144607 _144645 _144654 P y lt2 z s pat e p _109018 q _109019 _109020) = (term1588 _144529 _144530 _144607 _144645 _144654 P y lt2 z s pat e p _109018 q _109019 _109020).
Proof. exact (MK_COMB (@lem8213224 _144530 _144607 _144654 P _109018 y _109019 _109020) (@lem8213164 _144529 _144530 _144607 _144645 P lt2 z s pat e p _109018 q _109019 _109020)). Qed.
Lemma lem8213236 {_144529 _144530 _144607 _144645 _144654 P : Type'} (y : type564 _144530 _144607 _144654 P) (lt2 : type1470 _144529 _144530) (z : type518 _144530 _144607 P) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_109018 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term1584 _144529 _144530 _144607 _144645 _144654 P y lt2 z s pat e p _109018 q _109019 _109020) = (term1588 _144529 _144530 _144607 _144645 _144654 P y lt2 z s pat e p _109018 q _109019 _109020).
Proof. exact (TRANS (@lem8213147 _144529 _144530 _144607 _144645 _144654 P y lt2 z s pat e p _109018 q _109019 _109020) (@lem8213225 _144529 _144530 _144607 _144645 _144654 P y lt2 z s pat e p _109018 q _109019 _109020)). Qed.
Lemma lem8213237 {_144529 _144530 _144607 _144645 _144654 P : Type'} (y : type564 _144530 _144607 _144654 P) (lt2 : type1470 _144529 _144530) (z : type518 _144530 _144607 P) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_109018 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term1555 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 z s _109018 y _109019 _109020) = (term1588 _144529 _144530 _144607 _144645 _144654 P y lt2 z s pat e p _109018 q _109019 _109020).
Proof. exact (TRANS (@lem8213142 _144529 _144530 _144607 _144645 _144654 P y lt2 z s pat e p _109018 q _109019 _109020) (@lem8213236 _144529 _144530 _144607 _144645 _144654 P y lt2 z s pat e p _109018 q _109019 _109020)). Qed.
Lemma lem8213238 {_144529 _144530 _144607 _144645 _144654 P : Type'} (y : type564 _144530 _144607 _144654 P) (lt2 : type1470 _144529 _144530) (z : type518 _144530 _144607 P) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_109018 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term1541 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 z s _109018 y _109019 _109020) = (term1588 _144529 _144530 _144607 _144645 _144654 P y lt2 z s pat e p _109018 q _109019 _109020).
Proof. exact (TRANS (@lem8212707 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 z s _109018 y _109019 _109020) (@lem8213237 _144529 _144530 _144607 _144645 _144654 P y lt2 z s pat e p _109018 q _109019 _109020)). Qed.
Lemma lem8213239 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8213240 {_144529 _144530 _144607 _144645 _144654 P : Type'} (y : type564 _144530 _144607 _144654 P) (lt2 : type1470 _144529 _144530) (z : type518 _144530 _144607 P) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_109018 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term1589 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 z s _109018 y _109019 _109020) = (term1590 _144529 _144530 _144607 _144645 _144654 P y lt2 z s pat e p _109018 q _109019 _109020).
Proof. exact (MK_COMB (@lem8213239) (@lem8213238 _144529 _144530 _144607 _144645 _144654 P y lt2 z s pat e p _109018 q _109019 _109020)). Qed.
Lemma lem8213254 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8213255 {_144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (_109018 : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term1591 _144530 _144607 _144645 _144654 P p pat e q _109018 y _109019 _109020) = (term1592 _144530 _144607 _144645 _144654 P p pat e q _109018 y _109019 _109020).
Proof. exact (@lem8213254 (term1096 _144530 _144607 _144645 P pat e _109018 _109020) (term867 _144530 _144607 P p _109018 _109020) (term1593 _144530 _144607 _144645 _144654 P p pat e q _109018 y _109019 _109020)). Qed.
Lemma lem8213281 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8213282 {_144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (_109018 : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term1593 _144530 _144607 _144645 _144654 P p pat e q _109018 y _109019 _109020) = (term1594 _144530 _144607 _144645 _144654 P p pat e q _109018 y _109019 _109020).
Proof. exact (@lem8213281 (term867 _144530 _144607 P p _109019 _109020) (term867 _144530 _144607 P q _109018 _109020) (term1595 _144530 _144607 _144645 _144654 P pat e q _109018 y _109019 _109020)). Qed.
Lemma lem8213296 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8213297 {_144530 _144607 _144645 _144654 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (_109018 : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term1596 _144530 _144607 _144645 _144654 P pat e q _109018 y _109019 _109020) = (term1597 _144530 _144607 _144645 _144654 P pat e q _109018 y _109019 _109020).
Proof. exact (@lem8213296 (term1096 _144530 _144607 _144645 P pat e _109019 _109020) (term867 _144530 _144607 P q _109018 _109020) (term920 _144530 _144607 _144654 P q _109018 y _109019 _109020)). Qed.
Lemma lem8213323 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem8213324 {_144530 _144607 _144654 P : Type'} (_109018 : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (q : type560 _144530 _144607 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term920 _144530 _144607 _144654 P q _109018 y _109019 _109020) = (term921 _144530 _144607 _144654 P _109018 y q _109019 _109020).
Proof. exact (@lem8213323 ((term835 _144530 _144607 _144654 P y _109018 _109020) = (term835 _144530 _144607 _144654 P y _109019 _109020)) (term867 _144530 _144607 P q _109019 _109020)). Qed.
Lemma lem8213332 {_144530 _144607 P : Type'} (q : type560 _144530 _144607 P) (_109018 : _144530 -> _144607) (_109020 : P) : (term868 _144530 _144607 P q _109018 _109020) = (term868 _144530 _144607 P q _109018 _109020).
Proof. exact (eq_refl (term868 _144530 _144607 P q _109018 _109020)). Qed.
Lemma lem8213333 {_144530 _144607 _144654 P : Type'} (_109018 : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (q : type560 _144530 _144607 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term934 _144530 _144607 _144654 P q _109018 y _109019 _109020) = (term935 _144530 _144607 _144654 P _109018 y q _109019 _109020).
Proof. exact (MK_COMB (@lem8213332 _144530 _144607 P q _109018 _109020) (@lem8213324 _144530 _144607 _144654 P _109018 y q _109019 _109020)). Qed.
Lemma lem8213337 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8213338 {_144530 _144607 _144654 P : Type'} (y : type564 _144530 _144607 _144654 P) (_109018 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term935 _144530 _144607 _144654 P _109018 y q _109019 _109020) = (term936 _144530 _144607 _144654 P y _109018 q _109019 _109020).
Proof. exact (@lem8213337 ((term835 _144530 _144607 _144654 P y _109018 _109020) = (term835 _144530 _144607 _144654 P y _109019 _109020)) (term867 _144530 _144607 P q _109018 _109020) (term867 _144530 _144607 P q _109019 _109020)). Qed.
Lemma lem8213356 {_144530 _144607 _144654 P : Type'} (y : type564 _144530 _144607 _144654 P) (_109018 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term934 _144530 _144607 _144654 P q _109018 y _109019 _109020) = (term936 _144530 _144607 _144654 P y _109018 q _109019 _109020).
Proof. exact (TRANS (@lem8213333 _144530 _144607 _144654 P _109018 y q _109019 _109020) (@lem8213338 _144530 _144607 _144654 P y _109018 q _109019 _109020)). Qed.
Lemma lem8213357 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term1184 _144530 _144607 _144645 P pat e _109019 _109020) = (term1184 _144530 _144607 _144645 P pat e _109019 _109020).
Proof. exact (eq_refl (term1184 _144530 _144607 _144645 P pat e _109019 _109020)). Qed.
Lemma lem8213358 {_144530 _144607 _144645 _144654 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (y : type564 _144530 _144607 _144654 P) (_109018 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term1597 _144530 _144607 _144645 _144654 P pat e q _109018 y _109019 _109020) = (term1598 _144530 _144607 _144645 _144654 P pat e y _109018 q _109019 _109020).
Proof. exact (MK_COMB (@lem8213357 _144530 _144607 _144645 P pat e _109019 _109020) (@lem8213356 _144530 _144607 _144654 P y _109018 q _109019 _109020)). Qed.
Lemma lem8213362 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8213363 {_144530 _144607 _144645 _144654 P : Type'} (y : type564 _144530 _144607 _144654 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (_109018 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term1598 _144530 _144607 _144645 _144654 P pat e y _109018 q _109019 _109020) = (term1599 _144530 _144607 _144645 _144654 P y pat e _109018 q _109019 _109020).
Proof. exact (@lem8213362 ((term835 _144530 _144607 _144654 P y _109018 _109020) = (term835 _144530 _144607 _144654 P y _109019 _109020)) (term1096 _144530 _144607 _144645 P pat e _109019 _109020) (term939 _144530 _144607 P _109018 q _109019 _109020)). Qed.
Lemma lem8213393 {_144530 _144607 _144645 _144654 P : Type'} (y : type564 _144530 _144607 _144654 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (_109018 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term1597 _144530 _144607 _144645 _144654 P pat e q _109018 y _109019 _109020) = (term1599 _144530 _144607 _144645 _144654 P y pat e _109018 q _109019 _109020).
Proof. exact (TRANS (@lem8213358 _144530 _144607 _144645 _144654 P pat e y _109018 q _109019 _109020) (@lem8213363 _144530 _144607 _144645 _144654 P y pat e _109018 q _109019 _109020)). Qed.
Lemma lem8213394 {_144530 _144607 _144645 _144654 P : Type'} (y : type564 _144530 _144607 _144654 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (_109018 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term1596 _144530 _144607 _144645 _144654 P pat e q _109018 y _109019 _109020) = (term1599 _144530 _144607 _144645 _144654 P y pat e _109018 q _109019 _109020).
Proof. exact (TRANS (@lem8213297 _144530 _144607 _144645 _144654 P pat e q _109018 y _109019 _109020) (@lem8213393 _144530 _144607 _144645 _144654 P y pat e _109018 q _109019 _109020)). Qed.
Lemma lem8213395 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term868 _144530 _144607 P p _109019 _109020) = (term868 _144530 _144607 P p _109019 _109020).
Proof. exact (eq_refl (term868 _144530 _144607 P p _109019 _109020)). Qed.
Lemma lem8213396 {_144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (y : type564 _144530 _144607 _144654 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (_109018 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term1594 _144530 _144607 _144645 _144654 P p pat e q _109018 y _109019 _109020) = (term1600 _144530 _144607 _144645 _144654 P p y pat e _109018 q _109019 _109020).
Proof. exact (MK_COMB (@lem8213395 _144530 _144607 P p _109019 _109020) (@lem8213394 _144530 _144607 _144645 _144654 P y pat e _109018 q _109019 _109020)). Qed.
Lemma lem8213400 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8213401 {_144530 _144607 _144645 _144654 P : Type'} (y : type564 _144530 _144607 _144654 P) (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (_109018 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term1600 _144530 _144607 _144645 _144654 P p y pat e _109018 q _109019 _109020) = (term1601 _144530 _144607 _144645 _144654 P y p pat e _109018 q _109019 _109020).
Proof. exact (@lem8213400 ((term835 _144530 _144607 _144654 P y _109018 _109020) = (term835 _144530 _144607 _144654 P y _109019 _109020)) (term867 _144530 _144607 P p _109019 _109020) (term1569 _144530 _144607 _144645 P pat e _109018 q _109019 _109020)). Qed.
Lemma lem8213417 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8213418 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_109018 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term1570 _144530 _144607 _144645 P p pat e _109018 q _109019 _109020) = (term1571 _144530 _144607 _144645 P pat e p _109018 q _109019 _109020).
Proof. exact (@lem8213417 (term1096 _144530 _144607 _144645 P pat e _109019 _109020) (term867 _144530 _144607 P p _109019 _109020) (term939 _144530 _144607 P _109018 q _109019 _109020)). Qed.
Lemma lem8213446 {_144530 _144607 _144654 P : Type'} (_109018 : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term930 _144530 _144607 _144654 P _109018 y _109019 _109020) = (term930 _144530 _144607 _144654 P _109018 y _109019 _109020).
Proof. exact (eq_refl (term930 _144530 _144607 _144654 P _109018 y _109019 _109020)). Qed.
Lemma lem8213447 {_144530 _144607 _144645 _144654 P : Type'} (y : type564 _144530 _144607 _144654 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_109018 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term1601 _144530 _144607 _144645 _144654 P y p pat e _109018 q _109019 _109020) = (term1602 _144530 _144607 _144645 _144654 P y pat e p _109018 q _109019 _109020).
Proof. exact (MK_COMB (@lem8213446 _144530 _144607 _144654 P _109018 y _109019 _109020) (@lem8213418 _144530 _144607 _144645 P pat e p _109018 q _109019 _109020)). Qed.
Lemma lem8213458 {_144530 _144607 _144645 _144654 P : Type'} (y : type564 _144530 _144607 _144654 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_109018 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term1600 _144530 _144607 _144645 _144654 P p y pat e _109018 q _109019 _109020) = (term1602 _144530 _144607 _144645 _144654 P y pat e p _109018 q _109019 _109020).
Proof. exact (TRANS (@lem8213401 _144530 _144607 _144645 _144654 P y p pat e _109018 q _109019 _109020) (@lem8213447 _144530 _144607 _144645 _144654 P y pat e p _109018 q _109019 _109020)). Qed.
Lemma lem8213459 {_144530 _144607 _144645 _144654 P : Type'} (y : type564 _144530 _144607 _144654 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_109018 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term1594 _144530 _144607 _144645 _144654 P p pat e q _109018 y _109019 _109020) = (term1602 _144530 _144607 _144645 _144654 P y pat e p _109018 q _109019 _109020).
Proof. exact (TRANS (@lem8213396 _144530 _144607 _144645 _144654 P p y pat e _109018 q _109019 _109020) (@lem8213458 _144530 _144607 _144645 _144654 P y pat e p _109018 q _109019 _109020)). Qed.
Lemma lem8213460 {_144530 _144607 _144645 _144654 P : Type'} (y : type564 _144530 _144607 _144654 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_109018 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term1593 _144530 _144607 _144645 _144654 P p pat e q _109018 y _109019 _109020) = (term1602 _144530 _144607 _144645 _144654 P y pat e p _109018 q _109019 _109020).
Proof. exact (TRANS (@lem8213282 _144530 _144607 _144645 _144654 P p pat e q _109018 y _109019 _109020) (@lem8213459 _144530 _144607 _144645 _144654 P y pat e p _109018 q _109019 _109020)). Qed.
Lemma lem8213461 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (_109018 : _144530 -> _144607) (_109020 : P) : (term868 _144530 _144607 P p _109018 _109020) = (term868 _144530 _144607 P p _109018 _109020).
Proof. exact (eq_refl (term868 _144530 _144607 P p _109018 _109020)). Qed.
Lemma lem8213462 {_144530 _144607 _144645 _144654 P : Type'} (y : type564 _144530 _144607 _144654 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_109018 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term1603 _144530 _144607 _144645 _144654 P p pat e q _109018 y _109019 _109020) = (term1604 _144530 _144607 _144645 _144654 P y pat e p _109018 q _109019 _109020).
Proof. exact (MK_COMB (@lem8213461 _144530 _144607 P p _109018 _109020) (@lem8213460 _144530 _144607 _144645 _144654 P y pat e p _109018 q _109019 _109020)). Qed.
Lemma lem8213466 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8213467 {_144530 _144607 _144645 _144654 P : Type'} (y : type564 _144530 _144607 _144654 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_109018 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term1604 _144530 _144607 _144645 _144654 P y pat e p _109018 q _109019 _109020) = (term1605 _144530 _144607 _144645 _144654 P y pat e p _109018 q _109019 _109020).
Proof. exact (@lem8213466 ((term835 _144530 _144607 _144654 P y _109018 _109020) = (term835 _144530 _144607 _144654 P y _109019 _109020)) (term867 _144530 _144607 P p _109018 _109020) (term1571 _144530 _144607 _144645 P pat e p _109018 q _109019 _109020)). Qed.
Lemma lem8213483 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8213484 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_109018 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term1579 _144530 _144607 _144645 P pat e p _109018 q _109019 _109020) = (term1580 _144530 _144607 _144645 P pat e p _109018 q _109019 _109020).
Proof. exact (@lem8213483 (term1096 _144530 _144607 _144645 P pat e _109019 _109020) (term867 _144530 _144607 P p _109018 _109020) (term1581 _144530 _144607 P p _109018 q _109019 _109020)). Qed.
Lemma lem8213522 {_144530 _144607 _144654 P : Type'} (_109018 : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term930 _144530 _144607 _144654 P _109018 y _109019 _109020) = (term930 _144530 _144607 _144654 P _109018 y _109019 _109020).
Proof. exact (eq_refl (term930 _144530 _144607 _144654 P _109018 y _109019 _109020)). Qed.
Lemma lem8213523 {_144530 _144607 _144645 _144654 P : Type'} (y : type564 _144530 _144607 _144654 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_109018 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term1605 _144530 _144607 _144645 _144654 P y pat e p _109018 q _109019 _109020) = (term1606 _144530 _144607 _144645 _144654 P y pat e p _109018 q _109019 _109020).
Proof. exact (MK_COMB (@lem8213522 _144530 _144607 _144654 P _109018 y _109019 _109020) (@lem8213484 _144530 _144607 _144645 P pat e p _109018 q _109019 _109020)). Qed.
Lemma lem8213534 {_144530 _144607 _144645 _144654 P : Type'} (y : type564 _144530 _144607 _144654 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_109018 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term1604 _144530 _144607 _144645 _144654 P y pat e p _109018 q _109019 _109020) = (term1606 _144530 _144607 _144645 _144654 P y pat e p _109018 q _109019 _109020).
Proof. exact (TRANS (@lem8213467 _144530 _144607 _144645 _144654 P y pat e p _109018 q _109019 _109020) (@lem8213523 _144530 _144607 _144645 _144654 P y pat e p _109018 q _109019 _109020)). Qed.
Lemma lem8213535 {_144530 _144607 _144645 _144654 P : Type'} (y : type564 _144530 _144607 _144654 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_109018 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term1603 _144530 _144607 _144645 _144654 P p pat e q _109018 y _109019 _109020) = (term1606 _144530 _144607 _144645 _144654 P y pat e p _109018 q _109019 _109020).
Proof. exact (TRANS (@lem8213462 _144530 _144607 _144645 _144654 P y pat e p _109018 q _109019 _109020) (@lem8213534 _144530 _144607 _144645 _144654 P y pat e p _109018 q _109019 _109020)). Qed.
Lemma lem8213536 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (_109018 : _144530 -> _144607) (_109020 : P) : (term1184 _144530 _144607 _144645 P pat e _109018 _109020) = (term1184 _144530 _144607 _144645 P pat e _109018 _109020).
Proof. exact (eq_refl (term1184 _144530 _144607 _144645 P pat e _109018 _109020)). Qed.
Lemma lem8213537 {_144530 _144607 _144645 _144654 P : Type'} (y : type564 _144530 _144607 _144654 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_109018 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term1592 _144530 _144607 _144645 _144654 P p pat e q _109018 y _109019 _109020) = (term1607 _144530 _144607 _144645 _144654 P y pat e p _109018 q _109019 _109020).
Proof. exact (MK_COMB (@lem8213536 _144530 _144607 _144645 P pat e _109018 _109020) (@lem8213535 _144530 _144607 _144645 _144654 P y pat e p _109018 q _109019 _109020)). Qed.
Lemma lem8213541 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8213542 {_144530 _144607 _144645 _144654 P : Type'} (y : type564 _144530 _144607 _144654 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_109018 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term1607 _144530 _144607 _144645 _144654 P y pat e p _109018 q _109019 _109020) = (term1608 _144530 _144607 _144645 _144654 P y pat e p _109018 q _109019 _109020).
Proof. exact (@lem8213541 ((term835 _144530 _144607 _144654 P y _109018 _109020) = (term835 _144530 _144607 _144654 P y _109019 _109020)) (term1096 _144530 _144607 _144645 P pat e _109018 _109020) (term1580 _144530 _144607 _144645 P pat e p _109018 q _109019 _109020)). Qed.
Lemma lem8213604 {_144530 _144607 _144645 _144654 P : Type'} (y : type564 _144530 _144607 _144654 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_109018 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term1592 _144530 _144607 _144645 _144654 P p pat e q _109018 y _109019 _109020) = (term1608 _144530 _144607 _144645 _144654 P y pat e p _109018 q _109019 _109020).
Proof. exact (TRANS (@lem8213537 _144530 _144607 _144645 _144654 P y pat e p _109018 q _109019 _109020) (@lem8213542 _144530 _144607 _144645 _144654 P y pat e p _109018 q _109019 _109020)). Qed.
Lemma lem8213605 {_144530 _144607 _144645 _144654 P : Type'} (y : type564 _144530 _144607 _144654 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_109018 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term1591 _144530 _144607 _144645 _144654 P p pat e q _109018 y _109019 _109020) = (term1608 _144530 _144607 _144645 _144654 P y pat e p _109018 q _109019 _109020).
Proof. exact (TRANS (@lem8213255 _144530 _144607 _144645 _144654 P p pat e q _109018 y _109019 _109020) (@lem8213604 _144530 _144607 _144645 _144654 P y pat e p _109018 q _109019 _109020)). Qed.
Lemma lem8213606 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (z : type518 _144530 _144607 P) (_109018 : _144530 -> _144607) (_109019 : _144530 -> _144607) (s : P -> _144529) (_109020 : P) : (term922 _144529 _144530 _144607 P lt2 z _109018 _109019 s _109020) = (term922 _144529 _144530 _144607 P lt2 z _109018 _109019 s _109020).
Proof. exact (eq_refl (term922 _144529 _144530 _144607 P lt2 z _109018 _109019 s _109020)). Qed.
Lemma lem8213607 {_144529 _144530 _144607 _144645 _144654 P : Type'} (lt2 : type1470 _144529 _144530) (z : type518 _144530 _144607 P) (s : P -> _144529) (y : type564 _144530 _144607 _144654 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_109018 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term1609 _144529 _144530 _144607 _144645 _144654 P lt2 z s p pat e q _109018 y _109019 _109020) = (term1610 _144529 _144530 _144607 _144645 _144654 P lt2 z s y pat e p _109018 q _109019 _109020).
Proof. exact (MK_COMB (@lem8213606 _144529 _144530 _144607 P lt2 z _109018 _109019 s _109020) (@lem8213605 _144530 _144607 _144645 _144654 P y pat e p _109018 q _109019 _109020)). Qed.
Lemma lem8213611 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8213612 {_144529 _144530 _144607 _144645 _144654 P : Type'} (y : type564 _144530 _144607 _144654 P) (lt2 : type1470 _144529 _144530) (z : type518 _144530 _144607 P) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_109018 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term1610 _144529 _144530 _144607 _144645 _144654 P lt2 z s y pat e p _109018 q _109019 _109020) = (term1588 _144529 _144530 _144607 _144645 _144654 P y lt2 z s pat e p _109018 q _109019 _109020).
Proof. exact (@lem8213611 ((term835 _144530 _144607 _144654 P y _109018 _109020) = (term835 _144530 _144607 _144654 P y _109019 _109020)) (term862 _144529 _144530 _144607 P lt2 z _109018 _109019 s _109020) (term1611 _144530 _144607 _144645 P pat e p _109018 q _109019 _109020)). Qed.
Lemma lem8213684 {_144529 _144530 _144607 _144645 _144654 P : Type'} (y : type564 _144530 _144607 _144654 P) (lt2 : type1470 _144529 _144530) (z : type518 _144530 _144607 P) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_109018 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term1609 _144529 _144530 _144607 _144645 _144654 P lt2 z s p pat e q _109018 y _109019 _109020) = (term1588 _144529 _144530 _144607 _144645 _144654 P y lt2 z s pat e p _109018 q _109019 _109020).
Proof. exact (TRANS (@lem8213607 _144529 _144530 _144607 _144645 _144654 P lt2 z s y pat e p _109018 q _109019 _109020) (@lem8213612 _144529 _144530 _144607 _144645 _144654 P y lt2 z s pat e p _109018 q _109019 _109020)). Qed.
Lemma lem8213685 {_144529 _144530 _144607 _144645 _144654 P : Type'} (y : type564 _144530 _144607 _144654 P) (lt2 : type1470 _144529 _144530) (z : type518 _144530 _144607 P) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_109018 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109019 : _144530 -> _144607) (_109020 : P) : ((term1541 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 z s _109018 y _109019 _109020) = (term1609 _144529 _144530 _144607 _144645 _144654 P lt2 z s p pat e q _109018 y _109019 _109020)) = ((term1588 _144529 _144530 _144607 _144645 _144654 P y lt2 z s pat e p _109018 q _109019 _109020) = (term1588 _144529 _144530 _144607 _144645 _144654 P y lt2 z s pat e p _109018 q _109019 _109020)).
Proof. exact (MK_COMB (@lem8213240 _144529 _144530 _144607 _144645 _144654 P y lt2 z s pat e p _109018 q _109019 _109020) (@lem8213684 _144529 _144530 _144607 _144645 _144654 P y lt2 z s pat e p _109018 q _109019 _109020)). Qed.
Lemma lem8213687 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem20665 A x) (@lem20664 A x)). Qed.
Lemma lem8213688 (x : Prop) : (x = x) = True.
Proof. exact (@lem8213687 Prop x). Qed.
Lemma lem8213689 {_144529 _144530 _144607 _144645 _144654 P : Type'} (y : type564 _144530 _144607 _144654 P) (lt2 : type1470 _144529 _144530) (z : type518 _144530 _144607 P) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_109018 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109019 : _144530 -> _144607) (_109020 : P) : ((term1588 _144529 _144530 _144607 _144645 _144654 P y lt2 z s pat e p _109018 q _109019 _109020) = (term1588 _144529 _144530 _144607 _144645 _144654 P y lt2 z s pat e p _109018 q _109019 _109020)) = True.
Proof. exact (@lem8213688 (term1588 _144529 _144530 _144607 _144645 _144654 P y lt2 z s pat e p _109018 q _109019 _109020)). Qed.
Lemma lem8213690 {_144529 _144530 _144607 _144645 _144654 P : Type'} (lt2 : type1470 _144529 _144530) (z : type518 _144530 _144607 P) (s : P -> _144529) (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (_109018 : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (_109019 : _144530 -> _144607) (_109020 : P) : ((term1541 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 z s _109018 y _109019 _109020) = (term1609 _144529 _144530 _144607 _144645 _144654 P lt2 z s p pat e q _109018 y _109019 _109020)) = True.
Proof. exact (TRANS (@lem8213685 _144529 _144530 _144607 _144645 _144654 P y lt2 z s pat e p _109018 q _109019 _109020) (@lem8213689 _144529 _144530 _144607 _144645 _144654 P y lt2 z s pat e p _109018 q _109019 _109020)). Qed.
Lemma lem8213691 {_144529 _144530 _144607 _144645 _144654 P : Type'} (lt2 : type1470 _144529 _144530) (z : type518 _144530 _144607 P) (s : P -> _144529) (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (_109018 : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (_109019 : _144530 -> _144607) (_109020 : P) : True = ((term1541 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 z s _109018 y _109019 _109020) = (term1609 _144529 _144530 _144607 _144645 _144654 P lt2 z s p pat e q _109018 y _109019 _109020)).
Proof. exact (SYM (@lem8213690 _144529 _144530 _144607 _144645 _144654 P lt2 z s p pat e q _109018 y _109019 _109020)). Qed.
Lemma lem8213692 {_144529 _144530 _144607 _144645 _144654 P : Type'} (lt2 : type1470 _144529 _144530) (z : type518 _144530 _144607 P) (s : P -> _144529) (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (_109018 : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term1541 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 z s _109018 y _109019 _109020) = (term1609 _144529 _144530 _144607 _144645 _144654 P lt2 z s p pat e q _109018 y _109019 _109020).
Proof. exact (EQ_MP (@lem8213691 _144529 _144530 _144607 _144645 _144654 P lt2 z s p pat e q _109018 y _109019 _109020) (@lem0)). Qed.
Lemma lem8213693 {_144529 _144530 _144607 _144645 _144654 P : Type'} (_109018 : _144530 -> _144607) (_109019 : _144530 -> _144607) (_109020 : P) (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : type518 _144530 _144607 P) (y : type564 _144530 _144607 _144654 P) (h1 : term685 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z y) : term1609 _144529 _144530 _144607 _144645 _144654 P lt2 z s p pat e q _109018 y _109019 _109020.
Proof. exact (EQ_MP (@lem8213692 _144529 _144530 _144607 _144645 _144654 P lt2 z s p pat e q _109018 y _109019 _109020) (@lem8209806 _144529 _144530 _144607 _144645 _144654 P _109018 _109019 _109020 p pat e q lt2 s z y h1)). Qed.
Lemma lem8213695 (b : Prop) (a : Prop) : (a \/ b) = (term940 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem8213696 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (y : type564 _144530 _144607 _144654 P) (lt2 : type1470 _144529 _144530) (z : type518 _144530 _144607 P) (_109018 : _144530 -> _144607) (_109019 : _144530 -> _144607) (s : P -> _144529) (_109020 : P) : (term1609 _144529 _144530 _144607 _144645 _144654 P lt2 z s p pat e q _109018 y _109019 _109020) = (term1612 _144529 _144530 _144607 _144645 _144654 P p pat e q y lt2 z _109018 _109019 s _109020).
Proof. exact (@lem8213695 (term1591 _144530 _144607 _144645 _144654 P p pat e q _109018 y _109019 _109020) (term862 _144529 _144530 _144607 P lt2 z _109018 _109019 s _109020)). Qed.
Lemma lem8213698 (a : Prop) (b : Prop) : (term942 a b) = (term943 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem8213699 {_144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (_109018 : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term1613 _144530 _144607 _144645 _144654 P p pat e q _109018 y _109019 _109020) = (term1614 _144530 _144607 _144645 _144654 P p pat e q _109018 y _109019 _109020).
Proof. exact (@lem8213698 (term867 _144530 _144607 P p _109018 _109020) (term1615 _144530 _144607 _144645 _144654 P p pat e q _109018 y _109019 _109020)). Qed.
Lemma lem8213701 (a : Prop) : (term15 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8213702 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (_109018 : _144530 -> _144607) (_109020 : P) : (term946 _144530 _144607 P p _109018 _109020) = (term822 _144530 _144607 P p _109018 _109020).
Proof. exact (@lem8213701 (term822 _144530 _144607 P p _109018 _109020)). Qed.
Lemma lem8213703 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8213704 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (_109018 : _144530 -> _144607) (_109020 : P) : (term947 _144530 _144607 P p _109018 _109020) = (term948 _144530 _144607 P p _109018 _109020).
Proof. exact (MK_COMB (@lem8213703) (@lem8213702 _144530 _144607 P p _109018 _109020)). Qed.
Lemma lem8213706 (a : Prop) (b : Prop) : (term942 a b) = (term943 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem8213707 {_144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (_109018 : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term1616 _144530 _144607 _144645 _144654 P p pat e q _109018 y _109019 _109020) = (term1617 _144530 _144607 _144645 _144654 P p pat e q _109018 y _109019 _109020).
Proof. exact (@lem8213706 (term1096 _144530 _144607 _144645 P pat e _109018 _109020) (term1593 _144530 _144607 _144645 _144654 P p pat e q _109018 y _109019 _109020)). Qed.
Lemma lem8213709 (a : Prop) : (term15 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8213710 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (_109018 : _144530 -> _144607) (_109020 : P) : (term1220 _144530 _144607 _144645 P pat e _109018 _109020) = ((term835 _144530 _144607 _144645 P pat _109018 _109020) = (term835 _144530 _144607 _144645 P e _109018 _109020)).
Proof. exact (@lem8213709 ((term835 _144530 _144607 _144645 P pat _109018 _109020) = (term835 _144530 _144607 _144645 P e _109018 _109020))). Qed.
Lemma lem8213711 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8213712 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (_109018 : _144530 -> _144607) (_109020 : P) : (term1221 _144530 _144607 _144645 P pat e _109018 _109020) = (term1222 _144530 _144607 _144645 P pat e _109018 _109020).
Proof. exact (MK_COMB (@lem8213711) (@lem8213710 _144530 _144607 _144645 P pat e _109018 _109020)). Qed.
Lemma lem8213714 (a : Prop) (b : Prop) : (term942 a b) = (term943 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem8213715 {_144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (_109018 : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term1618 _144530 _144607 _144645 _144654 P p pat e q _109018 y _109019 _109020) = (term1619 _144530 _144607 _144645 _144654 P p pat e q _109018 y _109019 _109020).
Proof. exact (@lem8213714 (term867 _144530 _144607 P q _109018 _109020) (term1620 _144530 _144607 _144645 _144654 P p pat e q _109018 y _109019 _109020)). Qed.
Lemma lem8213717 (a : Prop) : (term15 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8213718 {_144530 _144607 P : Type'} (q : type560 _144530 _144607 P) (_109018 : _144530 -> _144607) (_109020 : P) : (term946 _144530 _144607 P q _109018 _109020) = (term822 _144530 _144607 P q _109018 _109020).
Proof. exact (@lem8213717 (term822 _144530 _144607 P q _109018 _109020)). Qed.
Lemma lem8213719 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8213720 {_144530 _144607 P : Type'} (q : type560 _144530 _144607 P) (_109018 : _144530 -> _144607) (_109020 : P) : (term947 _144530 _144607 P q _109018 _109020) = (term948 _144530 _144607 P q _109018 _109020).
Proof. exact (MK_COMB (@lem8213719) (@lem8213718 _144530 _144607 P q _109018 _109020)). Qed.
Lemma lem8213722 (a : Prop) (b : Prop) : (term942 a b) = (term943 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem8213723 {_144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (_109018 : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term1621 _144530 _144607 _144645 _144654 P p pat e q _109018 y _109019 _109020) = (term1622 _144530 _144607 _144645 _144654 P p pat e q _109018 y _109019 _109020).
Proof. exact (@lem8213722 (term867 _144530 _144607 P p _109019 _109020) (term1595 _144530 _144607 _144645 _144654 P pat e q _109018 y _109019 _109020)). Qed.
Lemma lem8213725 (a : Prop) : (term15 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8213726 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term946 _144530 _144607 P p _109019 _109020) = (term822 _144530 _144607 P p _109019 _109020).
Proof. exact (@lem8213725 (term822 _144530 _144607 P p _109019 _109020)). Qed.
Lemma lem8213727 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8213728 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term947 _144530 _144607 P p _109019 _109020) = (term948 _144530 _144607 P p _109019 _109020).
Proof. exact (MK_COMB (@lem8213727) (@lem8213726 _144530 _144607 P p _109019 _109020)). Qed.
Lemma lem8213730 (a : Prop) (b : Prop) : (term942 a b) = (term943 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem8213731 {_144530 _144607 _144645 _144654 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (_109018 : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term1623 _144530 _144607 _144645 _144654 P pat e q _109018 y _109019 _109020) = (term1624 _144530 _144607 _144645 _144654 P pat e q _109018 y _109019 _109020).
Proof. exact (@lem8213730 (term1096 _144530 _144607 _144645 P pat e _109019 _109020) (term920 _144530 _144607 _144654 P q _109018 y _109019 _109020)). Qed.
Lemma lem8213733 (a : Prop) : (term15 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8213734 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term1220 _144530 _144607 _144645 P pat e _109019 _109020) = ((term835 _144530 _144607 _144645 P pat _109019 _109020) = (term835 _144530 _144607 _144645 P e _109019 _109020)).
Proof. exact (@lem8213733 ((term835 _144530 _144607 _144645 P pat _109019 _109020) = (term835 _144530 _144607 _144645 P e _109019 _109020))). Qed.
Lemma lem8213735 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8213736 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term1221 _144530 _144607 _144645 P pat e _109019 _109020) = (term1222 _144530 _144607 _144645 P pat e _109019 _109020).
Proof. exact (MK_COMB (@lem8213735) (@lem8213734 _144530 _144607 _144645 P pat e _109019 _109020)). Qed.
Lemma lem8213738 (a : Prop) (b : Prop) : (term942 a b) = (term943 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem8213739 {_144530 _144607 _144654 P : Type'} (q : type560 _144530 _144607 P) (_109018 : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term949 _144530 _144607 _144654 P q _109018 y _109019 _109020) = (term950 _144530 _144607 _144654 P q _109018 y _109019 _109020).
Proof. exact (@lem8213738 (term867 _144530 _144607 P q _109019 _109020) ((term835 _144530 _144607 _144654 P y _109018 _109020) = (term835 _144530 _144607 _144654 P y _109019 _109020))). Qed.
Lemma lem8213741 (a : Prop) : (term15 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8213742 {_144530 _144607 P : Type'} (q : type560 _144530 _144607 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term946 _144530 _144607 P q _109019 _109020) = (term822 _144530 _144607 P q _109019 _109020).
Proof. exact (@lem8213741 (term822 _144530 _144607 P q _109019 _109020)). Qed.
Lemma lem8213743 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8213744 {_144530 _144607 P : Type'} (q : type560 _144530 _144607 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term947 _144530 _144607 P q _109019 _109020) = (term948 _144530 _144607 P q _109019 _109020).
Proof. exact (MK_COMB (@lem8213743) (@lem8213742 _144530 _144607 P q _109019 _109020)). Qed.
Lemma lem8213745 {_144530 _144607 _144654 P : Type'} (_109018 : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term839 _144530 _144607 _144654 P _109018 y _109019 _109020) = (term839 _144530 _144607 _144654 P _109018 y _109019 _109020).
Proof. exact (eq_refl (term839 _144530 _144607 _144654 P _109018 y _109019 _109020)). Qed.
Lemma lem8213746 {_144530 _144607 _144654 P : Type'} (q : type560 _144530 _144607 P) (_109018 : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term950 _144530 _144607 _144654 P q _109018 y _109019 _109020) = (term951 _144530 _144607 _144654 P q _109018 y _109019 _109020).
Proof. exact (MK_COMB (@lem8213744 _144530 _144607 P q _109019 _109020) (@lem8213745 _144530 _144607 _144654 P _109018 y _109019 _109020)). Qed.
Lemma lem8213747 {_144530 _144607 _144654 P : Type'} (q : type560 _144530 _144607 P) (_109018 : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term949 _144530 _144607 _144654 P q _109018 y _109019 _109020) = (term951 _144530 _144607 _144654 P q _109018 y _109019 _109020).
Proof. exact (TRANS (@lem8213739 _144530 _144607 _144654 P q _109018 y _109019 _109020) (@lem8213746 _144530 _144607 _144654 P q _109018 y _109019 _109020)). Qed.
Lemma lem8213748 {_144530 _144607 _144645 _144654 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (_109018 : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term1624 _144530 _144607 _144645 _144654 P pat e q _109018 y _109019 _109020) = (term1625 _144530 _144607 _144645 _144654 P pat e q _109018 y _109019 _109020).
Proof. exact (MK_COMB (@lem8213736 _144530 _144607 _144645 P pat e _109019 _109020) (@lem8213747 _144530 _144607 _144654 P q _109018 y _109019 _109020)). Qed.
Lemma lem8213749 {_144530 _144607 _144645 _144654 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (_109018 : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term1623 _144530 _144607 _144645 _144654 P pat e q _109018 y _109019 _109020) = (term1625 _144530 _144607 _144645 _144654 P pat e q _109018 y _109019 _109020).
Proof. exact (TRANS (@lem8213731 _144530 _144607 _144645 _144654 P pat e q _109018 y _109019 _109020) (@lem8213748 _144530 _144607 _144645 _144654 P pat e q _109018 y _109019 _109020)). Qed.
Lemma lem8213750 {_144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (_109018 : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term1622 _144530 _144607 _144645 _144654 P p pat e q _109018 y _109019 _109020) = (term1626 _144530 _144607 _144645 _144654 P p pat e q _109018 y _109019 _109020).
Proof. exact (MK_COMB (@lem8213728 _144530 _144607 P p _109019 _109020) (@lem8213749 _144530 _144607 _144645 _144654 P pat e q _109018 y _109019 _109020)). Qed.
Lemma lem8213751 {_144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (_109018 : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term1621 _144530 _144607 _144645 _144654 P p pat e q _109018 y _109019 _109020) = (term1626 _144530 _144607 _144645 _144654 P p pat e q _109018 y _109019 _109020).
Proof. exact (TRANS (@lem8213723 _144530 _144607 _144645 _144654 P p pat e q _109018 y _109019 _109020) (@lem8213750 _144530 _144607 _144645 _144654 P p pat e q _109018 y _109019 _109020)). Qed.
Lemma lem8213752 {_144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (_109018 : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term1619 _144530 _144607 _144645 _144654 P p pat e q _109018 y _109019 _109020) = (term1627 _144530 _144607 _144645 _144654 P p pat e q _109018 y _109019 _109020).
Proof. exact (MK_COMB (@lem8213720 _144530 _144607 P q _109018 _109020) (@lem8213751 _144530 _144607 _144645 _144654 P p pat e q _109018 y _109019 _109020)). Qed.
Lemma lem8213753 {_144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (_109018 : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term1618 _144530 _144607 _144645 _144654 P p pat e q _109018 y _109019 _109020) = (term1627 _144530 _144607 _144645 _144654 P p pat e q _109018 y _109019 _109020).
Proof. exact (TRANS (@lem8213715 _144530 _144607 _144645 _144654 P p pat e q _109018 y _109019 _109020) (@lem8213752 _144530 _144607 _144645 _144654 P p pat e q _109018 y _109019 _109020)). Qed.
Lemma lem8213754 {_144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (_109018 : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term1617 _144530 _144607 _144645 _144654 P p pat e q _109018 y _109019 _109020) = (term1628 _144530 _144607 _144645 _144654 P p pat e q _109018 y _109019 _109020).
Proof. exact (MK_COMB (@lem8213712 _144530 _144607 _144645 P pat e _109018 _109020) (@lem8213753 _144530 _144607 _144645 _144654 P p pat e q _109018 y _109019 _109020)). Qed.
Lemma lem8213755 {_144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (_109018 : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term1616 _144530 _144607 _144645 _144654 P p pat e q _109018 y _109019 _109020) = (term1628 _144530 _144607 _144645 _144654 P p pat e q _109018 y _109019 _109020).
Proof. exact (TRANS (@lem8213707 _144530 _144607 _144645 _144654 P p pat e q _109018 y _109019 _109020) (@lem8213754 _144530 _144607 _144645 _144654 P p pat e q _109018 y _109019 _109020)). Qed.
Lemma lem8213756 {_144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (_109018 : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term1614 _144530 _144607 _144645 _144654 P p pat e q _109018 y _109019 _109020) = (term1629 _144530 _144607 _144645 _144654 P p pat e q _109018 y _109019 _109020).
Proof. exact (MK_COMB (@lem8213704 _144530 _144607 P p _109018 _109020) (@lem8213755 _144530 _144607 _144645 _144654 P p pat e q _109018 y _109019 _109020)). Qed.
Lemma lem8213757 {_144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (_109018 : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term1613 _144530 _144607 _144645 _144654 P p pat e q _109018 y _109019 _109020) = (term1629 _144530 _144607 _144645 _144654 P p pat e q _109018 y _109019 _109020).
Proof. exact (TRANS (@lem8213699 _144530 _144607 _144645 _144654 P p pat e q _109018 y _109019 _109020) (@lem8213756 _144530 _144607 _144645 _144654 P p pat e q _109018 y _109019 _109020)). Qed.
Lemma lem8213758 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8213759 {_144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (_109018 : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term1630 _144530 _144607 _144645 _144654 P p pat e q _109018 y _109019 _109020) = (term1631 _144530 _144607 _144645 _144654 P p pat e q _109018 y _109019 _109020).
Proof. exact (MK_COMB (@lem8213758) (@lem8213757 _144530 _144607 _144645 _144654 P p pat e q _109018 y _109019 _109020)). Qed.
Lemma lem8213760 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (z : type518 _144530 _144607 P) (_109018 : _144530 -> _144607) (_109019 : _144530 -> _144607) (s : P -> _144529) (_109020 : P) : (term862 _144529 _144530 _144607 P lt2 z _109018 _109019 s _109020) = (term862 _144529 _144530 _144607 P lt2 z _109018 _109019 s _109020).
Proof. exact (eq_refl (term862 _144529 _144530 _144607 P lt2 z _109018 _109019 s _109020)). Qed.
Lemma lem8213761 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (y : type564 _144530 _144607 _144654 P) (lt2 : type1470 _144529 _144530) (z : type518 _144530 _144607 P) (_109018 : _144530 -> _144607) (_109019 : _144530 -> _144607) (s : P -> _144529) (_109020 : P) : (term1612 _144529 _144530 _144607 _144645 _144654 P p pat e q y lt2 z _109018 _109019 s _109020) = (term1632 _144529 _144530 _144607 _144645 _144654 P p pat e q y lt2 z _109018 _109019 s _109020).
Proof. exact (MK_COMB (@lem8213759 _144530 _144607 _144645 _144654 P p pat e q _109018 y _109019 _109020) (@lem8213760 _144529 _144530 _144607 P lt2 z _109018 _109019 s _109020)). Qed.
Lemma lem8213762 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (y : type564 _144530 _144607 _144654 P) (lt2 : type1470 _144529 _144530) (z : type518 _144530 _144607 P) (_109018 : _144530 -> _144607) (_109019 : _144530 -> _144607) (s : P -> _144529) (_109020 : P) : (term1609 _144529 _144530 _144607 _144645 _144654 P lt2 z s p pat e q _109018 y _109019 _109020) = (term1632 _144529 _144530 _144607 _144645 _144654 P p pat e q y lt2 z _109018 _109019 s _109020).
Proof. exact (TRANS (@lem8213696 _144529 _144530 _144607 _144645 _144654 P p pat e q y lt2 z _109018 _109019 s _109020) (@lem8213761 _144529 _144530 _144607 _144645 _144654 P p pat e q y lt2 z _109018 _109019 s _109020)). Qed.
Lemma lem8213764 {_144530 _144607 _144654 P : Type'} (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term839 _144530 _144607 _144654 P f y g a) (h2 : q g a) : term951 _144530 _144607 _144654 P q f y g a.
Proof. exact (conj (@lem8212692 _144530 _144607 P q g a h2) (@lem8212700 _144530 _144607 _144654 P f y g a h1)). Qed.
Lemma lem8213765 {_144530 _144607 _144645 _144654 P : Type'} (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term839 _144530 _144607 _144654 P f y g a) (h2 : (pat g a) = (e g a)) (h3 : q g a) : term1625 _144530 _144607 _144645 _144654 P pat e q f y g a.
Proof. exact (conj (@lem8212685 _144530 _144607 _144645 P pat e g a h2) (@lem8213764 _144530 _144607 _144654 P f y q g a h1 h3)). Qed.
Lemma lem8213766 {_144530 _144607 _144645 _144654 P : Type'} (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term839 _144530 _144607 _144654 P f y g a) (h2 : (pat g a) = (e g a)) (h3 : p g a) (h4 : q g a) : term1626 _144530 _144607 _144645 _144654 P p pat e q f y g a.
Proof. exact (conj (@lem8212678 _144530 _144607 P p g a h3) (@lem8213765 _144530 _144607 _144645 _144654 P f y pat e q g a h1 h2 h4)). Qed.
Lemma lem8213767 {_144530 _144607 _144645 _144654 P : Type'} (y : type564 _144530 _144607 _144654 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term839 _144530 _144607 _144654 P f y g a) (h2 : (pat g a) = (e g a)) (h3 : p g a) (h4 : q f a) (h5 : q g a) : term1627 _144530 _144607 _144645 _144654 P p pat e q f y g a.
Proof. exact (conj (@lem8212671 _144530 _144607 P q f a h4) (@lem8213766 _144530 _144607 _144645 _144654 P f y pat e p q g a h1 h2 h3 h5)). Qed.
Lemma lem8213768 {_144530 _144607 _144645 _144654 P : Type'} (y : type564 _144530 _144607 _144654 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term839 _144530 _144607 _144654 P f y g a) (h2 : (pat f a) = (e f a)) (h3 : (pat g a) = (e g a)) (h4 : p g a) (h5 : q f a) (h6 : q g a) : term1628 _144530 _144607 _144645 _144654 P p pat e q f y g a.
Proof. exact (conj (@lem8212664 _144530 _144607 _144645 P pat e f a h2) (@lem8213767 _144530 _144607 _144645 _144654 P y pat e p f q g a h1 h3 h4 h5 h6)). Qed.
Lemma lem8213769 {_144530 _144607 _144645 _144654 P : Type'} (y : type564 _144530 _144607 _144654 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term839 _144530 _144607 _144654 P f y g a) (h2 : (pat f a) = (e f a)) (h3 : (pat g a) = (e g a)) (h4 : p f a) (h5 : p g a) (h6 : q f a) (h7 : q g a) : term1629 _144530 _144607 _144645 _144654 P p pat e q f y g a.
Proof. exact (conj (@lem8212657 _144530 _144607 P p f a h4) (@lem8213768 _144530 _144607 _144645 _144654 P y pat e p f q g a h1 h2 h3 h5 h6 h7)). Qed.
Lemma lem8213771 {_144529 _144530 _144607 _144645 _144654 P : Type'} (_109018 : _144530 -> _144607) (_109019 : _144530 -> _144607) (_109020 : P) (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : type518 _144530 _144607 P) (y : type564 _144530 _144607 _144654 P) (h1 : term685 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z y) : term1632 _144529 _144530 _144607 _144645 _144654 P p pat e q y lt2 z _109018 _109019 s _109020.
Proof. exact (EQ_MP (@lem8213762 _144529 _144530 _144607 _144645 _144654 P p pat e q y lt2 z _109018 _109019 s _109020) (@lem8213693 _144529 _144530 _144607 _144645 _144654 P _109018 _109019 _109020 p pat e q lt2 s z y h1)). Qed.
Lemma lem8213772 {_144529 _144530 _144607 _144645 _144654 P : Type'} (_109018 : _144530 -> _144607) (_109019 : _144530 -> _144607) (_109020 : P) (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : type518 _144530 _144607 P) (y : type564 _144530 _144607 _144654 P) (h1 : term685 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z y) : term1632 _144529 _144530 _144607 _144645 _144654 P p pat e q y lt2 z _109018 _109019 s _109020.
Proof. exact (@lem8213771 _144529 _144530 _144607 _144645 _144654 P _109018 _109019 _109020 p pat e q lt2 s z y h1). Qed.
Lemma lem8213773 {_144529 _144530 _144607 _144645 _144654 P : Type'} (f : _144530 -> _144607) (g : _144530 -> _144607) (a : P) (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : type518 _144530 _144607 P) (y : type564 _144530 _144607 _144654 P) (h1 : term685 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z y) : term1632 _144529 _144530 _144607 _144645 _144654 P p pat e q y lt2 z f g s a.
Proof. exact (@lem8213772 _144529 _144530 _144607 _144645 _144654 P f g a p pat e q lt2 s z y h1). Qed.
Lemma lem8213776 {_144529 _144530 _144607 _144645 _144654 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : type518 _144530 _144607 P) (y : type564 _144530 _144607 _144654 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term685 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z y) (h2 : term839 _144530 _144607 _144654 P f y g a) (h3 : (pat f a) = (e f a)) (h4 : (pat g a) = (e g a)) (h5 : p f a) (h6 : p g a) (h7 : q f a) (h8 : q g a) : term862 _144529 _144530 _144607 P lt2 z f g s a.
Proof. exact (@lem8213773 _144529 _144530 _144607 _144645 _144654 P f g a p pat e q lt2 s z y h1 (@lem8213769 _144530 _144607 _144645 _144654 P y pat e p f q g a h2 h3 h4 h5 h6 h7 h8)). Qed.
Lemma lem8213777 {_144529 _144530 _144607 _144645 _144654 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : type518 _144530 _144607 P) (y : type564 _144530 _144607 _144654 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term685 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z y) (h2 : term839 _144530 _144607 _144654 P f y g a) (h3 : (pat f a) = (e f a)) (h4 : (pat g a) = (e g a)) (h5 : p f a) (h6 : p g a) (h7 : q f a) (h8 : q g a) : term956 _144529 _144530 _144607 P lt2 z f g s a.
Proof. exact (fun h0 : term957 _144529 _144530 _144607 P lt2 z f g s a => @lem8213776 _144529 _144530 _144607 _144645 _144654 P lt2 s z y pat e p f q g a h1 h2 h3 h4 h5 h6 h7 h8). Qed.
Lemma lem8213779 (p : Prop) : (term57 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8213780 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (z : type518 _144530 _144607 P) (f : _144530 -> _144607) (g : _144530 -> _144607) (s : P -> _144529) (a : P) : (term956 _144529 _144530 _144607 P lt2 z f g s a) = (term862 _144529 _144530 _144607 P lt2 z f g s a).
Proof. exact (@lem8213779 (term862 _144529 _144530 _144607 P lt2 z f g s a)). Qed.
Lemma lem8213781 {_144529 _144530 _144607 _144645 _144654 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : type518 _144530 _144607 P) (y : type564 _144530 _144607 _144654 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term685 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z y) (h2 : term839 _144530 _144607 _144654 P f y g a) (h3 : (pat f a) = (e f a)) (h4 : (pat g a) = (e g a)) (h5 : p f a) (h6 : p g a) (h7 : q f a) (h8 : q g a) : term862 _144529 _144530 _144607 P lt2 z f g s a.
Proof. exact (EQ_MP (@lem8213780 _144529 _144530 _144607 P lt2 z f g s a) (@lem8213777 _144529 _144530 _144607 _144645 _144654 P lt2 s z y pat e p f q g a h1 h2 h3 h4 h5 h6 h7 h8)). Qed.
Lemma lem8213787 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem8213788 {_144529 _144530 _144607 P : Type'} (f : _144530 -> _144607) (g : _144530 -> _144607) (lt2 : type1470 _144529 _144530) (_109017 : _144530) (s : P -> _144529) (a : P) : (term832 _144529 _144530 _144607 P lt2 s a f g _109017) = (term958 _144529 _144530 _144607 P f g lt2 _109017 s a).
Proof. exact (@lem8213787 ((@I (_144530 -> _144607) f _109017) = (@I (_144530 -> _144607) g _109017)) (term829 _144529 _144530 P lt2 _109017 s a)). Qed.
Lemma lem8213796 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8213797 {_144529 _144530 _144607 P : Type'} (f : _144530 -> _144607) (g : _144530 -> _144607) (lt2 : type1470 _144529 _144530) (_109017 : _144530) (s : P -> _144529) (a : P) : (term959 _144529 _144530 _144607 P lt2 s a f g _109017) = (term960 _144529 _144530 _144607 P f g lt2 _109017 s a).
Proof. exact (MK_COMB (@lem8213796) (@lem8213788 _144529 _144530 _144607 P f g lt2 _109017 s a)). Qed.
Lemma lem8213805 {_144529 _144530 _144607 P : Type'} (f : _144530 -> _144607) (g : _144530 -> _144607) (lt2 : type1470 _144529 _144530) (_109017 : _144530) (s : P -> _144529) (a : P) : (term958 _144529 _144530 _144607 P f g lt2 _109017 s a) = (term958 _144529 _144530 _144607 P f g lt2 _109017 s a).
Proof. exact (eq_refl (term958 _144529 _144530 _144607 P f g lt2 _109017 s a)). Qed.
Lemma lem8213806 {_144529 _144530 _144607 P : Type'} (f : _144530 -> _144607) (g : _144530 -> _144607) (lt2 : type1470 _144529 _144530) (_109017 : _144530) (s : P -> _144529) (a : P) : ((term832 _144529 _144530 _144607 P lt2 s a f g _109017) = (term958 _144529 _144530 _144607 P f g lt2 _109017 s a)) = ((term958 _144529 _144530 _144607 P f g lt2 _109017 s a) = (term958 _144529 _144530 _144607 P f g lt2 _109017 s a)).
Proof. exact (MK_COMB (@lem8213797 _144529 _144530 _144607 P f g lt2 _109017 s a) (@lem8213805 _144529 _144530 _144607 P f g lt2 _109017 s a)). Qed.
Lemma lem8213808 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem20665 A x) (@lem20664 A x)). Qed.
Lemma lem8213809 (x : Prop) : (x = x) = True.
Proof. exact (@lem8213808 Prop x). Qed.
Lemma lem8213810 {_144529 _144530 _144607 P : Type'} (f : _144530 -> _144607) (g : _144530 -> _144607) (lt2 : type1470 _144529 _144530) (_109017 : _144530) (s : P -> _144529) (a : P) : ((term958 _144529 _144530 _144607 P f g lt2 _109017 s a) = (term958 _144529 _144530 _144607 P f g lt2 _109017 s a)) = True.
Proof. exact (@lem8213809 (term958 _144529 _144530 _144607 P f g lt2 _109017 s a)). Qed.
Lemma lem8213811 {_144529 _144530 _144607 P : Type'} (f : _144530 -> _144607) (g : _144530 -> _144607) (lt2 : type1470 _144529 _144530) (_109017 : _144530) (s : P -> _144529) (a : P) : ((term832 _144529 _144530 _144607 P lt2 s a f g _109017) = (term958 _144529 _144530 _144607 P f g lt2 _109017 s a)) = True.
Proof. exact (TRANS (@lem8213806 _144529 _144530 _144607 P f g lt2 _109017 s a) (@lem8213810 _144529 _144530 _144607 P f g lt2 _109017 s a)). Qed.
Lemma lem8213812 {_144529 _144530 _144607 P : Type'} (f : _144530 -> _144607) (g : _144530 -> _144607) (lt2 : type1470 _144529 _144530) (_109017 : _144530) (s : P -> _144529) (a : P) : True = ((term832 _144529 _144530 _144607 P lt2 s a f g _109017) = (term958 _144529 _144530 _144607 P f g lt2 _109017 s a)).
Proof. exact (SYM (@lem8213811 _144529 _144530 _144607 P f g lt2 _109017 s a)). Qed.
Lemma lem8213813 {_144529 _144530 _144607 P : Type'} (f : _144530 -> _144607) (g : _144530 -> _144607) (lt2 : type1470 _144529 _144530) (_109017 : _144530) (s : P -> _144529) (a : P) : (term832 _144529 _144530 _144607 P lt2 s a f g _109017) = (term958 _144529 _144530 _144607 P f g lt2 _109017 s a).
Proof. exact (EQ_MP (@lem8213812 _144529 _144530 _144607 P f g lt2 _109017 s a) (@lem0)). Qed.
Lemma lem8213814 {_144529 _144530 _144607 P : Type'} (_109017 : _144530) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) : term958 _144529 _144530 _144607 P f g lt2 _109017 s a.
Proof. exact (EQ_MP (@lem8213813 _144529 _144530 _144607 P f g lt2 _109017 s a) (@lem8209462 _144529 _144530 _144607 P _109017 lt2 s a f g h1)). Qed.
Lemma lem8213816 (b : Prop) (a : Prop) : (a \/ b) = (term940 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem8213817 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (_109017 : _144530) : (term958 _144529 _144530 _144607 P f g lt2 _109017 s a) = (term961 _144529 _144530 _144607 P lt2 s a f g _109017).
Proof. exact (@lem8213816 (term829 _144529 _144530 P lt2 _109017 s a) ((@I (_144530 -> _144607) f _109017) = (@I (_144530 -> _144607) g _109017))). Qed.
Lemma lem8213819 (a : Prop) : (term15 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8213820 {_144529 _144530 P : Type'} (lt2 : type1470 _144529 _144530) (_109017 : _144530) (s : P -> _144529) (a : P) : (term962 _144529 _144530 P lt2 _109017 s a) = (term827 _144529 _144530 P lt2 _109017 s a).
Proof. exact (@lem8213819 (term827 _144529 _144530 P lt2 _109017 s a)). Qed.
Lemma lem8213821 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8213822 {_144529 _144530 P : Type'} (lt2 : type1470 _144529 _144530) (_109017 : _144530) (s : P -> _144529) (a : P) : (term963 _144529 _144530 P lt2 _109017 s a) = (term964 _144529 _144530 P lt2 _109017 s a).
Proof. exact (MK_COMB (@lem8213821) (@lem8213820 _144529 _144530 P lt2 _109017 s a)). Qed.
Lemma lem8213823 {_144530 _144607 : Type'} (f : _144530 -> _144607) (g : _144530 -> _144607) (_109017 : _144530) : ((@I (_144530 -> _144607) f _109017) = (@I (_144530 -> _144607) g _109017)) = ((@I (_144530 -> _144607) f _109017) = (@I (_144530 -> _144607) g _109017)).
Proof. exact (eq_refl ((@I (_144530 -> _144607) f _109017) = (@I (_144530 -> _144607) g _109017))). Qed.
Lemma lem8213824 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (_109017 : _144530) : (term961 _144529 _144530 _144607 P lt2 s a f g _109017) = (term965 _144529 _144530 _144607 P lt2 s a f g _109017).
Proof. exact (MK_COMB (@lem8213822 _144529 _144530 P lt2 _109017 s a) (@lem8213823 _144530 _144607 f g _109017)). Qed.
Lemma lem8213825 {_144529 _144530 _144607 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (_109017 : _144530) : (term958 _144529 _144530 _144607 P f g lt2 _109017 s a) = (term965 _144529 _144530 _144607 P lt2 s a f g _109017).
Proof. exact (TRANS (@lem8213817 _144529 _144530 _144607 P lt2 s a f g _109017) (@lem8213824 _144529 _144530 _144607 P lt2 s a f g _109017)). Qed.
Lemma lem8213828 {_144529 _144530 _144607 P : Type'} (_109017 : _144530) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) : term965 _144529 _144530 _144607 P lt2 s a f g _109017.
Proof. exact (EQ_MP (@lem8213825 _144529 _144530 _144607 P lt2 s a f g _109017) (@lem8213814 _144529 _144530 _144607 P _109017 lt2 s a f g h1)). Qed.
Lemma lem8213829 {_144529 _144530 _144607 P : Type'} (_109017 : _144530) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) : term965 _144529 _144530 _144607 P lt2 s a f g _109017.
Proof. exact (@lem8213828 _144529 _144530 _144607 P _109017 lt2 s a f g h1). Qed.
Lemma lem8213830 {_144529 _144530 _144607 P : Type'} (z : type518 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) : term966 _144529 _144530 _144607 P lt2 s z f g a.
Proof. exact (@lem8213829 _144529 _144530 _144607 P (term845 _144530 _144607 P z f g a) lt2 s a f g h1). Qed.
Lemma lem8213833 {_144529 _144530 _144607 _144645 _144654 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : type518 _144530 _144607 P) (y : type564 _144530 _144607 _144654 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) (h2 : term685 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z y) (h3 : term839 _144530 _144607 _144654 P f y g a) (h4 : (pat f a) = (e f a)) (h5 : (pat g a) = (e g a)) (h6 : p f a) (h7 : p g a) (h8 : q f a) (h9 : q g a) : (term848 _144530 _144607 P z f g a) = (term851 _144530 _144607 P z f g a).
Proof. exact (@lem8213830 _144529 _144530 _144607 P z lt2 s a f g h1 (@lem8213781 _144529 _144530 _144607 _144645 _144654 P lt2 s z y pat e p f q g a h2 h3 h4 h5 h6 h7 h8 h9)). Qed.
Lemma lem8213834 {_144529 _144530 _144607 _144645 _144654 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : type518 _144530 _144607 P) (y : type564 _144530 _144607 _144654 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) (h2 : term685 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z y) (h3 : term839 _144530 _144607 _144654 P f y g a) (h4 : (pat f a) = (e f a)) (h5 : (pat g a) = (e g a)) (h6 : p f a) (h7 : p g a) (h8 : q f a) (h9 : q g a) : term967 _144530 _144607 P z f g a.
Proof. exact (fun h0 : term855 _144530 _144607 P z f g a => @lem8213833 _144529 _144530 _144607 _144645 _144654 P lt2 s z y pat e p f q g a h1 h2 h3 h4 h5 h6 h7 h8 h9). Qed.
Lemma lem8213836 (p : Prop) : (term57 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8213837 {_144530 _144607 P : Type'} (z : type518 _144530 _144607 P) (f : _144530 -> _144607) (g : _144530 -> _144607) (a : P) : (term967 _144530 _144607 P z f g a) = ((term848 _144530 _144607 P z f g a) = (term851 _144530 _144607 P z f g a)).
Proof. exact (@lem8213836 ((term848 _144530 _144607 P z f g a) = (term851 _144530 _144607 P z f g a))). Qed.
Lemma lem8213838 {_144529 _144530 _144607 _144645 _144654 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : type518 _144530 _144607 P) (y : type564 _144530 _144607 _144654 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) (h2 : term685 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z y) (h3 : term839 _144530 _144607 _144654 P f y g a) (h4 : (pat f a) = (e f a)) (h5 : (pat g a) = (e g a)) (h6 : p f a) (h7 : p g a) (h8 : q f a) (h9 : q g a) : (term848 _144530 _144607 P z f g a) = (term851 _144530 _144607 P z f g a).
Proof. exact (EQ_MP (@lem8213837 _144530 _144607 P z f g a) (@lem8213834 _144529 _144530 _144607 _144645 _144654 P lt2 s z y pat e p f q g a h1 h2 h3 h4 h5 h6 h7 h8 h9)). Qed.
Lemma lem8213844 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8213845 {_144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (z : type518 _144530 _144607 P) (_109018 : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term1554 _144530 _144607 _144645 _144654 P p pat e q z _109018 y _109019 _109020) = (term1633 _144530 _144607 _144645 _144654 P p pat e q z _109018 y _109019 _109020).
Proof. exact (@lem8213844 (term1096 _144530 _144607 _144645 P pat e _109018 _109020) (term867 _144530 _144607 P p _109018 _109020) (term1634 _144530 _144607 _144645 _144654 P p pat e q z _109018 y _109019 _109020)). Qed.
Lemma lem8213871 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8213872 {_144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (z : type518 _144530 _144607 P) (_109018 : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term1634 _144530 _144607 _144645 _144654 P p pat e q z _109018 y _109019 _109020) = (term1635 _144530 _144607 _144645 _144654 P p pat e q z _109018 y _109019 _109020).
Proof. exact (@lem8213871 (term867 _144530 _144607 P p _109019 _109020) (term867 _144530 _144607 P q _109018 _109020) (term1548 _144530 _144607 _144645 _144654 P pat e q z _109018 y _109019 _109020)). Qed.
Lemma lem8213886 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8213887 {_144530 _144607 _144645 _144654 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (z : type518 _144530 _144607 P) (_109018 : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term1636 _144530 _144607 _144645 _144654 P pat e q z _109018 y _109019 _109020) = (term1637 _144530 _144607 _144645 _144654 P pat e q z _109018 y _109019 _109020).
Proof. exact (@lem8213886 (term1096 _144530 _144607 _144645 P pat e _109019 _109020) (term867 _144530 _144607 P q _109018 _109020) (term914 _144530 _144607 _144654 P q z _109018 y _109019 _109020)). Qed.
Lemma lem8213913 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8213914 {_144530 _144607 _144654 P : Type'} (z : type518 _144530 _144607 P) (q : type560 _144530 _144607 P) (_109018 : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term914 _144530 _144607 _144654 P q z _109018 y _109019 _109020) = (term968 _144530 _144607 _144654 P z q _109018 y _109019 _109020).
Proof. exact (@lem8213913 (term855 _144530 _144607 P z _109018 _109019 _109020) (term867 _144530 _144607 P q _109019 _109020) ((term835 _144530 _144607 _144654 P y _109018 _109020) = (term835 _144530 _144607 _144654 P y _109019 _109020))). Qed.
Lemma lem8213930 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem8213931 {_144530 _144607 _144654 P : Type'} (_109018 : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (q : type560 _144530 _144607 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term920 _144530 _144607 _144654 P q _109018 y _109019 _109020) = (term921 _144530 _144607 _144654 P _109018 y q _109019 _109020).
Proof. exact (@lem8213930 ((term835 _144530 _144607 _144654 P y _109018 _109020) = (term835 _144530 _144607 _144654 P y _109019 _109020)) (term867 _144530 _144607 P q _109019 _109020)). Qed.
Lemma lem8213939 {_144530 _144607 P : Type'} (z : type518 _144530 _144607 P) (_109018 : _144530 -> _144607) (_109019 : _144530 -> _144607) (_109020 : P) : (term969 _144530 _144607 P z _109018 _109019 _109020) = (term969 _144530 _144607 P z _109018 _109019 _109020).
Proof. exact (eq_refl (term969 _144530 _144607 P z _109018 _109019 _109020)). Qed.
Lemma lem8213940 {_144530 _144607 _144654 P : Type'} (z : type518 _144530 _144607 P) (_109018 : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (q : type560 _144530 _144607 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term968 _144530 _144607 _144654 P z q _109018 y _109019 _109020) = (term970 _144530 _144607 _144654 P z _109018 y q _109019 _109020).
Proof. exact (MK_COMB (@lem8213939 _144530 _144607 P z _109018 _109019 _109020) (@lem8213931 _144530 _144607 _144654 P _109018 y q _109019 _109020)). Qed.
Lemma lem8213944 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8213945 {_144530 _144607 _144654 P : Type'} (y : type564 _144530 _144607 _144654 P) (z : type518 _144530 _144607 P) (_109018 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term970 _144530 _144607 _144654 P z _109018 y q _109019 _109020) = (term971 _144530 _144607 _144654 P y z _109018 q _109019 _109020).
Proof. exact (@lem8213944 ((term835 _144530 _144607 _144654 P y _109018 _109020) = (term835 _144530 _144607 _144654 P y _109019 _109020)) (term855 _144530 _144607 P z _109018 _109019 _109020) (term867 _144530 _144607 P q _109019 _109020)). Qed.
Lemma lem8213965 {_144530 _144607 _144654 P : Type'} (y : type564 _144530 _144607 _144654 P) (z : type518 _144530 _144607 P) (_109018 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term968 _144530 _144607 _144654 P z q _109018 y _109019 _109020) = (term971 _144530 _144607 _144654 P y z _109018 q _109019 _109020).
Proof. exact (TRANS (@lem8213940 _144530 _144607 _144654 P z _109018 y q _109019 _109020) (@lem8213945 _144530 _144607 _144654 P y z _109018 q _109019 _109020)). Qed.
Lemma lem8213966 {_144530 _144607 _144654 P : Type'} (y : type564 _144530 _144607 _144654 P) (z : type518 _144530 _144607 P) (_109018 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term914 _144530 _144607 _144654 P q z _109018 y _109019 _109020) = (term971 _144530 _144607 _144654 P y z _109018 q _109019 _109020).
Proof. exact (TRANS (@lem8213914 _144530 _144607 _144654 P z q _109018 y _109019 _109020) (@lem8213965 _144530 _144607 _144654 P y z _109018 q _109019 _109020)). Qed.
Lemma lem8213967 {_144530 _144607 P : Type'} (q : type560 _144530 _144607 P) (_109018 : _144530 -> _144607) (_109020 : P) : (term868 _144530 _144607 P q _109018 _109020) = (term868 _144530 _144607 P q _109018 _109020).
Proof. exact (eq_refl (term868 _144530 _144607 P q _109018 _109020)). Qed.
Lemma lem8213968 {_144530 _144607 _144654 P : Type'} (y : type564 _144530 _144607 _144654 P) (z : type518 _144530 _144607 P) (_109018 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term915 _144530 _144607 _144654 P q z _109018 y _109019 _109020) = (term972 _144530 _144607 _144654 P y z _109018 q _109019 _109020).
Proof. exact (MK_COMB (@lem8213967 _144530 _144607 P q _109018 _109020) (@lem8213966 _144530 _144607 _144654 P y z _109018 q _109019 _109020)). Qed.
Lemma lem8213972 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8213973 {_144530 _144607 _144654 P : Type'} (y : type564 _144530 _144607 _144654 P) (z : type518 _144530 _144607 P) (_109018 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term972 _144530 _144607 _144654 P y z _109018 q _109019 _109020) = (term973 _144530 _144607 _144654 P y z _109018 q _109019 _109020).
Proof. exact (@lem8213972 ((term835 _144530 _144607 _144654 P y _109018 _109020) = (term835 _144530 _144607 _144654 P y _109019 _109020)) (term867 _144530 _144607 P q _109018 _109020) (term974 _144530 _144607 P z _109018 q _109019 _109020)). Qed.
Lemma lem8213989 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8213990 {_144530 _144607 P : Type'} (z : type518 _144530 _144607 P) (_109018 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term975 _144530 _144607 P z _109018 q _109019 _109020) = (term976 _144530 _144607 P z _109018 q _109019 _109020).
Proof. exact (@lem8213989 (term855 _144530 _144607 P z _109018 _109019 _109020) (term867 _144530 _144607 P q _109018 _109020) (term867 _144530 _144607 P q _109019 _109020)). Qed.
Lemma lem8214008 {_144530 _144607 _144654 P : Type'} (_109018 : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term930 _144530 _144607 _144654 P _109018 y _109019 _109020) = (term930 _144530 _144607 _144654 P _109018 y _109019 _109020).
Proof. exact (eq_refl (term930 _144530 _144607 _144654 P _109018 y _109019 _109020)). Qed.
Lemma lem8214009 {_144530 _144607 _144654 P : Type'} (y : type564 _144530 _144607 _144654 P) (z : type518 _144530 _144607 P) (_109018 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term973 _144530 _144607 _144654 P y z _109018 q _109019 _109020) = (term977 _144530 _144607 _144654 P y z _109018 q _109019 _109020).
Proof. exact (MK_COMB (@lem8214008 _144530 _144607 _144654 P _109018 y _109019 _109020) (@lem8213990 _144530 _144607 P z _109018 q _109019 _109020)). Qed.
Lemma lem8214020 {_144530 _144607 _144654 P : Type'} (y : type564 _144530 _144607 _144654 P) (z : type518 _144530 _144607 P) (_109018 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term972 _144530 _144607 _144654 P y z _109018 q _109019 _109020) = (term977 _144530 _144607 _144654 P y z _109018 q _109019 _109020).
Proof. exact (TRANS (@lem8213973 _144530 _144607 _144654 P y z _109018 q _109019 _109020) (@lem8214009 _144530 _144607 _144654 P y z _109018 q _109019 _109020)). Qed.
Lemma lem8214021 {_144530 _144607 _144654 P : Type'} (y : type564 _144530 _144607 _144654 P) (z : type518 _144530 _144607 P) (_109018 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term915 _144530 _144607 _144654 P q z _109018 y _109019 _109020) = (term977 _144530 _144607 _144654 P y z _109018 q _109019 _109020).
Proof. exact (TRANS (@lem8213968 _144530 _144607 _144654 P y z _109018 q _109019 _109020) (@lem8214020 _144530 _144607 _144654 P y z _109018 q _109019 _109020)). Qed.
Lemma lem8214022 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term1184 _144530 _144607 _144645 P pat e _109019 _109020) = (term1184 _144530 _144607 _144645 P pat e _109019 _109020).
Proof. exact (eq_refl (term1184 _144530 _144607 _144645 P pat e _109019 _109020)). Qed.
Lemma lem8214023 {_144530 _144607 _144645 _144654 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (y : type564 _144530 _144607 _144654 P) (z : type518 _144530 _144607 P) (_109018 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term1637 _144530 _144607 _144645 _144654 P pat e q z _109018 y _109019 _109020) = (term1638 _144530 _144607 _144645 _144654 P pat e y z _109018 q _109019 _109020).
Proof. exact (MK_COMB (@lem8214022 _144530 _144607 _144645 P pat e _109019 _109020) (@lem8214021 _144530 _144607 _144654 P y z _109018 q _109019 _109020)). Qed.
Lemma lem8214027 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8214028 {_144530 _144607 _144645 _144654 P : Type'} (y : type564 _144530 _144607 _144654 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (z : type518 _144530 _144607 P) (_109018 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term1638 _144530 _144607 _144645 _144654 P pat e y z _109018 q _109019 _109020) = (term1639 _144530 _144607 _144645 _144654 P y pat e z _109018 q _109019 _109020).
Proof. exact (@lem8214027 ((term835 _144530 _144607 _144654 P y _109018 _109020) = (term835 _144530 _144607 _144654 P y _109019 _109020)) (term1096 _144530 _144607 _144645 P pat e _109019 _109020) (term976 _144530 _144607 P z _109018 q _109019 _109020)). Qed.
Lemma lem8214044 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8214045 {_144530 _144607 _144645 P : Type'} (z : type518 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (_109018 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term1640 _144530 _144607 _144645 P pat e z _109018 q _109019 _109020) = (term1641 _144530 _144607 _144645 P z pat e _109018 q _109019 _109020).
Proof. exact (@lem8214044 (term855 _144530 _144607 P z _109018 _109019 _109020) (term1096 _144530 _144607 _144645 P pat e _109019 _109020) (term939 _144530 _144607 P _109018 q _109019 _109020)). Qed.
Lemma lem8214075 {_144530 _144607 _144654 P : Type'} (_109018 : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term930 _144530 _144607 _144654 P _109018 y _109019 _109020) = (term930 _144530 _144607 _144654 P _109018 y _109019 _109020).
Proof. exact (eq_refl (term930 _144530 _144607 _144654 P _109018 y _109019 _109020)). Qed.
Lemma lem8214076 {_144530 _144607 _144645 _144654 P : Type'} (y : type564 _144530 _144607 _144654 P) (z : type518 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (_109018 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term1639 _144530 _144607 _144645 _144654 P y pat e z _109018 q _109019 _109020) = (term1642 _144530 _144607 _144645 _144654 P y z pat e _109018 q _109019 _109020).
Proof. exact (MK_COMB (@lem8214075 _144530 _144607 _144654 P _109018 y _109019 _109020) (@lem8214045 _144530 _144607 _144645 P z pat e _109018 q _109019 _109020)). Qed.
Lemma lem8214087 {_144530 _144607 _144645 _144654 P : Type'} (y : type564 _144530 _144607 _144654 P) (z : type518 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (_109018 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term1638 _144530 _144607 _144645 _144654 P pat e y z _109018 q _109019 _109020) = (term1642 _144530 _144607 _144645 _144654 P y z pat e _109018 q _109019 _109020).
Proof. exact (TRANS (@lem8214028 _144530 _144607 _144645 _144654 P y pat e z _109018 q _109019 _109020) (@lem8214076 _144530 _144607 _144645 _144654 P y z pat e _109018 q _109019 _109020)). Qed.
Lemma lem8214088 {_144530 _144607 _144645 _144654 P : Type'} (y : type564 _144530 _144607 _144654 P) (z : type518 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (_109018 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term1637 _144530 _144607 _144645 _144654 P pat e q z _109018 y _109019 _109020) = (term1642 _144530 _144607 _144645 _144654 P y z pat e _109018 q _109019 _109020).
Proof. exact (TRANS (@lem8214023 _144530 _144607 _144645 _144654 P pat e y z _109018 q _109019 _109020) (@lem8214087 _144530 _144607 _144645 _144654 P y z pat e _109018 q _109019 _109020)). Qed.
Lemma lem8214089 {_144530 _144607 _144645 _144654 P : Type'} (y : type564 _144530 _144607 _144654 P) (z : type518 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (_109018 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term1636 _144530 _144607 _144645 _144654 P pat e q z _109018 y _109019 _109020) = (term1642 _144530 _144607 _144645 _144654 P y z pat e _109018 q _109019 _109020).
Proof. exact (TRANS (@lem8213887 _144530 _144607 _144645 _144654 P pat e q z _109018 y _109019 _109020) (@lem8214088 _144530 _144607 _144645 _144654 P y z pat e _109018 q _109019 _109020)). Qed.
Lemma lem8214090 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term868 _144530 _144607 P p _109019 _109020) = (term868 _144530 _144607 P p _109019 _109020).
Proof. exact (eq_refl (term868 _144530 _144607 P p _109019 _109020)). Qed.
Lemma lem8214091 {_144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (y : type564 _144530 _144607 _144654 P) (z : type518 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (_109018 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term1635 _144530 _144607 _144645 _144654 P p pat e q z _109018 y _109019 _109020) = (term1643 _144530 _144607 _144645 _144654 P p y z pat e _109018 q _109019 _109020).
Proof. exact (MK_COMB (@lem8214090 _144530 _144607 P p _109019 _109020) (@lem8214089 _144530 _144607 _144645 _144654 P y z pat e _109018 q _109019 _109020)). Qed.
Lemma lem8214095 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8214096 {_144530 _144607 _144645 _144654 P : Type'} (y : type564 _144530 _144607 _144654 P) (p : type560 _144530 _144607 P) (z : type518 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (_109018 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term1643 _144530 _144607 _144645 _144654 P p y z pat e _109018 q _109019 _109020) = (term1644 _144530 _144607 _144645 _144654 P y p z pat e _109018 q _109019 _109020).
Proof. exact (@lem8214095 ((term835 _144530 _144607 _144654 P y _109018 _109020) = (term835 _144530 _144607 _144654 P y _109019 _109020)) (term867 _144530 _144607 P p _109019 _109020) (term1641 _144530 _144607 _144645 P z pat e _109018 q _109019 _109020)). Qed.
Lemma lem8214112 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8214113 {_144530 _144607 _144645 P : Type'} (z : type518 _144530 _144607 P) (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (_109018 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term1645 _144530 _144607 _144645 P p z pat e _109018 q _109019 _109020) = (term1646 _144530 _144607 _144645 P z p pat e _109018 q _109019 _109020).
Proof. exact (@lem8214112 (term855 _144530 _144607 P z _109018 _109019 _109020) (term867 _144530 _144607 P p _109019 _109020) (term1569 _144530 _144607 _144645 P pat e _109018 q _109019 _109020)). Qed.
Lemma lem8214129 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8214130 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_109018 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term1570 _144530 _144607 _144645 P p pat e _109018 q _109019 _109020) = (term1571 _144530 _144607 _144645 P pat e p _109018 q _109019 _109020).
Proof. exact (@lem8214129 (term1096 _144530 _144607 _144645 P pat e _109019 _109020) (term867 _144530 _144607 P p _109019 _109020) (term939 _144530 _144607 P _109018 q _109019 _109020)). Qed.
Lemma lem8214158 {_144530 _144607 P : Type'} (z : type518 _144530 _144607 P) (_109018 : _144530 -> _144607) (_109019 : _144530 -> _144607) (_109020 : P) : (term969 _144530 _144607 P z _109018 _109019 _109020) = (term969 _144530 _144607 P z _109018 _109019 _109020).
Proof. exact (eq_refl (term969 _144530 _144607 P z _109018 _109019 _109020)). Qed.
Lemma lem8214159 {_144530 _144607 _144645 P : Type'} (z : type518 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_109018 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term1646 _144530 _144607 _144645 P z p pat e _109018 q _109019 _109020) = (term1647 _144530 _144607 _144645 P z pat e p _109018 q _109019 _109020).
Proof. exact (MK_COMB (@lem8214158 _144530 _144607 P z _109018 _109019 _109020) (@lem8214130 _144530 _144607 _144645 P pat e p _109018 q _109019 _109020)). Qed.
Lemma lem8214170 {_144530 _144607 _144645 P : Type'} (z : type518 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_109018 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term1645 _144530 _144607 _144645 P p z pat e _109018 q _109019 _109020) = (term1647 _144530 _144607 _144645 P z pat e p _109018 q _109019 _109020).
Proof. exact (TRANS (@lem8214113 _144530 _144607 _144645 P z p pat e _109018 q _109019 _109020) (@lem8214159 _144530 _144607 _144645 P z pat e p _109018 q _109019 _109020)). Qed.
Lemma lem8214171 {_144530 _144607 _144654 P : Type'} (_109018 : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term930 _144530 _144607 _144654 P _109018 y _109019 _109020) = (term930 _144530 _144607 _144654 P _109018 y _109019 _109020).
Proof. exact (eq_refl (term930 _144530 _144607 _144654 P _109018 y _109019 _109020)). Qed.
Lemma lem8214172 {_144530 _144607 _144645 _144654 P : Type'} (y : type564 _144530 _144607 _144654 P) (z : type518 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_109018 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term1644 _144530 _144607 _144645 _144654 P y p z pat e _109018 q _109019 _109020) = (term1648 _144530 _144607 _144645 _144654 P y z pat e p _109018 q _109019 _109020).
Proof. exact (MK_COMB (@lem8214171 _144530 _144607 _144654 P _109018 y _109019 _109020) (@lem8214170 _144530 _144607 _144645 P z pat e p _109018 q _109019 _109020)). Qed.
Lemma lem8214183 {_144530 _144607 _144645 _144654 P : Type'} (y : type564 _144530 _144607 _144654 P) (z : type518 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_109018 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term1643 _144530 _144607 _144645 _144654 P p y z pat e _109018 q _109019 _109020) = (term1648 _144530 _144607 _144645 _144654 P y z pat e p _109018 q _109019 _109020).
Proof. exact (TRANS (@lem8214096 _144530 _144607 _144645 _144654 P y p z pat e _109018 q _109019 _109020) (@lem8214172 _144530 _144607 _144645 _144654 P y z pat e p _109018 q _109019 _109020)). Qed.
Lemma lem8214184 {_144530 _144607 _144645 _144654 P : Type'} (y : type564 _144530 _144607 _144654 P) (z : type518 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_109018 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term1635 _144530 _144607 _144645 _144654 P p pat e q z _109018 y _109019 _109020) = (term1648 _144530 _144607 _144645 _144654 P y z pat e p _109018 q _109019 _109020).
Proof. exact (TRANS (@lem8214091 _144530 _144607 _144645 _144654 P p y z pat e _109018 q _109019 _109020) (@lem8214183 _144530 _144607 _144645 _144654 P y z pat e p _109018 q _109019 _109020)). Qed.
Lemma lem8214185 {_144530 _144607 _144645 _144654 P : Type'} (y : type564 _144530 _144607 _144654 P) (z : type518 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_109018 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term1634 _144530 _144607 _144645 _144654 P p pat e q z _109018 y _109019 _109020) = (term1648 _144530 _144607 _144645 _144654 P y z pat e p _109018 q _109019 _109020).
Proof. exact (TRANS (@lem8213872 _144530 _144607 _144645 _144654 P p pat e q z _109018 y _109019 _109020) (@lem8214184 _144530 _144607 _144645 _144654 P y z pat e p _109018 q _109019 _109020)). Qed.
Lemma lem8214186 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (_109018 : _144530 -> _144607) (_109020 : P) : (term868 _144530 _144607 P p _109018 _109020) = (term868 _144530 _144607 P p _109018 _109020).
Proof. exact (eq_refl (term868 _144530 _144607 P p _109018 _109020)). Qed.
Lemma lem8214187 {_144530 _144607 _144645 _144654 P : Type'} (y : type564 _144530 _144607 _144654 P) (z : type518 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_109018 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term1649 _144530 _144607 _144645 _144654 P p pat e q z _109018 y _109019 _109020) = (term1650 _144530 _144607 _144645 _144654 P y z pat e p _109018 q _109019 _109020).
Proof. exact (MK_COMB (@lem8214186 _144530 _144607 P p _109018 _109020) (@lem8214185 _144530 _144607 _144645 _144654 P y z pat e p _109018 q _109019 _109020)). Qed.
Lemma lem8214191 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8214192 {_144530 _144607 _144645 _144654 P : Type'} (y : type564 _144530 _144607 _144654 P) (z : type518 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_109018 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term1650 _144530 _144607 _144645 _144654 P y z pat e p _109018 q _109019 _109020) = (term1651 _144530 _144607 _144645 _144654 P y z pat e p _109018 q _109019 _109020).
Proof. exact (@lem8214191 ((term835 _144530 _144607 _144654 P y _109018 _109020) = (term835 _144530 _144607 _144654 P y _109019 _109020)) (term867 _144530 _144607 P p _109018 _109020) (term1647 _144530 _144607 _144645 P z pat e p _109018 q _109019 _109020)). Qed.
Lemma lem8214208 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8214209 {_144530 _144607 _144645 P : Type'} (z : type518 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_109018 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term1652 _144530 _144607 _144645 P z pat e p _109018 q _109019 _109020) = (term1653 _144530 _144607 _144645 P z pat e p _109018 q _109019 _109020).
Proof. exact (@lem8214208 (term855 _144530 _144607 P z _109018 _109019 _109020) (term867 _144530 _144607 P p _109018 _109020) (term1571 _144530 _144607 _144645 P pat e p _109018 q _109019 _109020)). Qed.
Lemma lem8214225 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8214226 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_109018 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term1579 _144530 _144607 _144645 P pat e p _109018 q _109019 _109020) = (term1580 _144530 _144607 _144645 P pat e p _109018 q _109019 _109020).
Proof. exact (@lem8214225 (term1096 _144530 _144607 _144645 P pat e _109019 _109020) (term867 _144530 _144607 P p _109018 _109020) (term1581 _144530 _144607 P p _109018 q _109019 _109020)). Qed.
Lemma lem8214264 {_144530 _144607 P : Type'} (z : type518 _144530 _144607 P) (_109018 : _144530 -> _144607) (_109019 : _144530 -> _144607) (_109020 : P) : (term969 _144530 _144607 P z _109018 _109019 _109020) = (term969 _144530 _144607 P z _109018 _109019 _109020).
Proof. exact (eq_refl (term969 _144530 _144607 P z _109018 _109019 _109020)). Qed.
Lemma lem8214265 {_144530 _144607 _144645 P : Type'} (z : type518 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_109018 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term1653 _144530 _144607 _144645 P z pat e p _109018 q _109019 _109020) = (term1654 _144530 _144607 _144645 P z pat e p _109018 q _109019 _109020).
Proof. exact (MK_COMB (@lem8214264 _144530 _144607 P z _109018 _109019 _109020) (@lem8214226 _144530 _144607 _144645 P pat e p _109018 q _109019 _109020)). Qed.
Lemma lem8214276 {_144530 _144607 _144645 P : Type'} (z : type518 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_109018 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term1652 _144530 _144607 _144645 P z pat e p _109018 q _109019 _109020) = (term1654 _144530 _144607 _144645 P z pat e p _109018 q _109019 _109020).
Proof. exact (TRANS (@lem8214209 _144530 _144607 _144645 P z pat e p _109018 q _109019 _109020) (@lem8214265 _144530 _144607 _144645 P z pat e p _109018 q _109019 _109020)). Qed.
Lemma lem8214277 {_144530 _144607 _144654 P : Type'} (_109018 : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term930 _144530 _144607 _144654 P _109018 y _109019 _109020) = (term930 _144530 _144607 _144654 P _109018 y _109019 _109020).
Proof. exact (eq_refl (term930 _144530 _144607 _144654 P _109018 y _109019 _109020)). Qed.
Lemma lem8214278 {_144530 _144607 _144645 _144654 P : Type'} (y : type564 _144530 _144607 _144654 P) (z : type518 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_109018 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term1651 _144530 _144607 _144645 _144654 P y z pat e p _109018 q _109019 _109020) = (term1655 _144530 _144607 _144645 _144654 P y z pat e p _109018 q _109019 _109020).
Proof. exact (MK_COMB (@lem8214277 _144530 _144607 _144654 P _109018 y _109019 _109020) (@lem8214276 _144530 _144607 _144645 P z pat e p _109018 q _109019 _109020)). Qed.
Lemma lem8214289 {_144530 _144607 _144645 _144654 P : Type'} (y : type564 _144530 _144607 _144654 P) (z : type518 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_109018 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term1650 _144530 _144607 _144645 _144654 P y z pat e p _109018 q _109019 _109020) = (term1655 _144530 _144607 _144645 _144654 P y z pat e p _109018 q _109019 _109020).
Proof. exact (TRANS (@lem8214192 _144530 _144607 _144645 _144654 P y z pat e p _109018 q _109019 _109020) (@lem8214278 _144530 _144607 _144645 _144654 P y z pat e p _109018 q _109019 _109020)). Qed.
Lemma lem8214290 {_144530 _144607 _144645 _144654 P : Type'} (y : type564 _144530 _144607 _144654 P) (z : type518 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_109018 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term1649 _144530 _144607 _144645 _144654 P p pat e q z _109018 y _109019 _109020) = (term1655 _144530 _144607 _144645 _144654 P y z pat e p _109018 q _109019 _109020).
Proof. exact (TRANS (@lem8214187 _144530 _144607 _144645 _144654 P y z pat e p _109018 q _109019 _109020) (@lem8214289 _144530 _144607 _144645 _144654 P y z pat e p _109018 q _109019 _109020)). Qed.
Lemma lem8214291 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (_109018 : _144530 -> _144607) (_109020 : P) : (term1184 _144530 _144607 _144645 P pat e _109018 _109020) = (term1184 _144530 _144607 _144645 P pat e _109018 _109020).
Proof. exact (eq_refl (term1184 _144530 _144607 _144645 P pat e _109018 _109020)). Qed.
Lemma lem8214292 {_144530 _144607 _144645 _144654 P : Type'} (y : type564 _144530 _144607 _144654 P) (z : type518 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_109018 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term1633 _144530 _144607 _144645 _144654 P p pat e q z _109018 y _109019 _109020) = (term1656 _144530 _144607 _144645 _144654 P y z pat e p _109018 q _109019 _109020).
Proof. exact (MK_COMB (@lem8214291 _144530 _144607 _144645 P pat e _109018 _109020) (@lem8214290 _144530 _144607 _144645 _144654 P y z pat e p _109018 q _109019 _109020)). Qed.
Lemma lem8214296 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8214297 {_144530 _144607 _144645 _144654 P : Type'} (y : type564 _144530 _144607 _144654 P) (z : type518 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_109018 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term1656 _144530 _144607 _144645 _144654 P y z pat e p _109018 q _109019 _109020) = (term1657 _144530 _144607 _144645 _144654 P y z pat e p _109018 q _109019 _109020).
Proof. exact (@lem8214296 ((term835 _144530 _144607 _144654 P y _109018 _109020) = (term835 _144530 _144607 _144654 P y _109019 _109020)) (term1096 _144530 _144607 _144645 P pat e _109018 _109020) (term1654 _144530 _144607 _144645 P z pat e p _109018 q _109019 _109020)). Qed.
Lemma lem8214313 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8214314 {_144530 _144607 _144645 P : Type'} (z : type518 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_109018 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term1658 _144530 _144607 _144645 P z pat e p _109018 q _109019 _109020) = (term1659 _144530 _144607 _144645 P z pat e p _109018 q _109019 _109020).
Proof. exact (@lem8214313 (term855 _144530 _144607 P z _109018 _109019 _109020) (term1096 _144530 _144607 _144645 P pat e _109018 _109020) (term1580 _144530 _144607 _144645 P pat e p _109018 q _109019 _109020)). Qed.
Lemma lem8214376 {_144530 _144607 _144654 P : Type'} (_109018 : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term930 _144530 _144607 _144654 P _109018 y _109019 _109020) = (term930 _144530 _144607 _144654 P _109018 y _109019 _109020).
Proof. exact (eq_refl (term930 _144530 _144607 _144654 P _109018 y _109019 _109020)). Qed.
Lemma lem8214377 {_144530 _144607 _144645 _144654 P : Type'} (y : type564 _144530 _144607 _144654 P) (z : type518 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_109018 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term1657 _144530 _144607 _144645 _144654 P y z pat e p _109018 q _109019 _109020) = (term1660 _144530 _144607 _144645 _144654 P y z pat e p _109018 q _109019 _109020).
Proof. exact (MK_COMB (@lem8214376 _144530 _144607 _144654 P _109018 y _109019 _109020) (@lem8214314 _144530 _144607 _144645 P z pat e p _109018 q _109019 _109020)). Qed.
Lemma lem8214388 {_144530 _144607 _144645 _144654 P : Type'} (y : type564 _144530 _144607 _144654 P) (z : type518 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_109018 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term1656 _144530 _144607 _144645 _144654 P y z pat e p _109018 q _109019 _109020) = (term1660 _144530 _144607 _144645 _144654 P y z pat e p _109018 q _109019 _109020).
Proof. exact (TRANS (@lem8214297 _144530 _144607 _144645 _144654 P y z pat e p _109018 q _109019 _109020) (@lem8214377 _144530 _144607 _144645 _144654 P y z pat e p _109018 q _109019 _109020)). Qed.
Lemma lem8214389 {_144530 _144607 _144645 _144654 P : Type'} (y : type564 _144530 _144607 _144654 P) (z : type518 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_109018 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term1633 _144530 _144607 _144645 _144654 P p pat e q z _109018 y _109019 _109020) = (term1660 _144530 _144607 _144645 _144654 P y z pat e p _109018 q _109019 _109020).
Proof. exact (TRANS (@lem8214292 _144530 _144607 _144645 _144654 P y z pat e p _109018 q _109019 _109020) (@lem8214388 _144530 _144607 _144645 _144654 P y z pat e p _109018 q _109019 _109020)). Qed.
Lemma lem8214390 {_144530 _144607 _144645 _144654 P : Type'} (y : type564 _144530 _144607 _144654 P) (z : type518 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_109018 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term1554 _144530 _144607 _144645 _144654 P p pat e q z _109018 y _109019 _109020) = (term1660 _144530 _144607 _144645 _144654 P y z pat e p _109018 q _109019 _109020).
Proof. exact (TRANS (@lem8213845 _144530 _144607 _144645 _144654 P p pat e q z _109018 y _109019 _109020) (@lem8214389 _144530 _144607 _144645 _144654 P y z pat e p _109018 q _109019 _109020)). Qed.
Lemma lem8214391 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8214392 {_144530 _144607 _144645 _144654 P : Type'} (y : type564 _144530 _144607 _144654 P) (z : type518 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_109018 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term1661 _144530 _144607 _144645 _144654 P p pat e q z _109018 y _109019 _109020) = (term1662 _144530 _144607 _144645 _144654 P y z pat e p _109018 q _109019 _109020).
Proof. exact (MK_COMB (@lem8214391) (@lem8214390 _144530 _144607 _144645 _144654 P y z pat e p _109018 q _109019 _109020)). Qed.
Lemma lem8214408 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8214409 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (z : type518 _144530 _144607 P) (_109018 : _144530 -> _144607) (_109019 : _144530 -> _144607) (_109020 : P) : (term1663 _144530 _144607 _144645 P p pat e q z _109018 _109019 _109020) = (term1664 _144530 _144607 _144645 P p pat e q z _109018 _109019 _109020).
Proof. exact (@lem8214408 (term1096 _144530 _144607 _144645 P pat e _109018 _109020) (term867 _144530 _144607 P p _109018 _109020) (term1665 _144530 _144607 _144645 P p pat e q z _109018 _109019 _109020)). Qed.
Lemma lem8214435 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8214436 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (z : type518 _144530 _144607 P) (_109018 : _144530 -> _144607) (_109019 : _144530 -> _144607) (_109020 : P) : (term1665 _144530 _144607 _144645 P p pat e q z _109018 _109019 _109020) = (term1666 _144530 _144607 _144645 P p pat e q z _109018 _109019 _109020).
Proof. exact (@lem8214435 (term867 _144530 _144607 P p _109019 _109020) (term867 _144530 _144607 P q _109018 _109020) (term1667 _144530 _144607 _144645 P pat e q z _109018 _109019 _109020)). Qed.
Lemma lem8214450 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8214451 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (z : type518 _144530 _144607 P) (_109018 : _144530 -> _144607) (_109019 : _144530 -> _144607) (_109020 : P) : (term1668 _144530 _144607 _144645 P pat e q z _109018 _109019 _109020) = (term1669 _144530 _144607 _144645 P pat e q z _109018 _109019 _109020).
Proof. exact (@lem8214450 (term1096 _144530 _144607 _144645 P pat e _109019 _109020) (term867 _144530 _144607 P q _109018 _109020) (term890 _144530 _144607 P q z _109018 _109019 _109020)). Qed.
Lemma lem8214477 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem8214478 {_144530 _144607 P : Type'} (z : type518 _144530 _144607 P) (_109018 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term890 _144530 _144607 P q z _109018 _109019 _109020) = (term974 _144530 _144607 P z _109018 q _109019 _109020).
Proof. exact (@lem8214477 (term855 _144530 _144607 P z _109018 _109019 _109020) (term867 _144530 _144607 P q _109019 _109020)). Qed.
Lemma lem8214486 {_144530 _144607 P : Type'} (q : type560 _144530 _144607 P) (_109018 : _144530 -> _144607) (_109020 : P) : (term868 _144530 _144607 P q _109018 _109020) = (term868 _144530 _144607 P q _109018 _109020).
Proof. exact (eq_refl (term868 _144530 _144607 P q _109018 _109020)). Qed.
Lemma lem8214487 {_144530 _144607 P : Type'} (z : type518 _144530 _144607 P) (_109018 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term895 _144530 _144607 P q z _109018 _109019 _109020) = (term975 _144530 _144607 P z _109018 q _109019 _109020).
Proof. exact (MK_COMB (@lem8214486 _144530 _144607 P q _109018 _109020) (@lem8214478 _144530 _144607 P z _109018 q _109019 _109020)). Qed.
Lemma lem8214491 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8214492 {_144530 _144607 P : Type'} (z : type518 _144530 _144607 P) (_109018 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term975 _144530 _144607 P z _109018 q _109019 _109020) = (term976 _144530 _144607 P z _109018 q _109019 _109020).
Proof. exact (@lem8214491 (term855 _144530 _144607 P z _109018 _109019 _109020) (term867 _144530 _144607 P q _109018 _109020) (term867 _144530 _144607 P q _109019 _109020)). Qed.
Lemma lem8214510 {_144530 _144607 P : Type'} (z : type518 _144530 _144607 P) (_109018 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term895 _144530 _144607 P q z _109018 _109019 _109020) = (term976 _144530 _144607 P z _109018 q _109019 _109020).
Proof. exact (TRANS (@lem8214487 _144530 _144607 P z _109018 q _109019 _109020) (@lem8214492 _144530 _144607 P z _109018 q _109019 _109020)). Qed.
Lemma lem8214511 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term1184 _144530 _144607 _144645 P pat e _109019 _109020) = (term1184 _144530 _144607 _144645 P pat e _109019 _109020).
Proof. exact (eq_refl (term1184 _144530 _144607 _144645 P pat e _109019 _109020)). Qed.
Lemma lem8214512 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (z : type518 _144530 _144607 P) (_109018 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term1669 _144530 _144607 _144645 P pat e q z _109018 _109019 _109020) = (term1640 _144530 _144607 _144645 P pat e z _109018 q _109019 _109020).
Proof. exact (MK_COMB (@lem8214511 _144530 _144607 _144645 P pat e _109019 _109020) (@lem8214510 _144530 _144607 P z _109018 q _109019 _109020)). Qed.
Lemma lem8214516 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8214517 {_144530 _144607 _144645 P : Type'} (z : type518 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (_109018 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term1640 _144530 _144607 _144645 P pat e z _109018 q _109019 _109020) = (term1641 _144530 _144607 _144645 P z pat e _109018 q _109019 _109020).
Proof. exact (@lem8214516 (term855 _144530 _144607 P z _109018 _109019 _109020) (term1096 _144530 _144607 _144645 P pat e _109019 _109020) (term939 _144530 _144607 P _109018 q _109019 _109020)). Qed.
Lemma lem8214547 {_144530 _144607 _144645 P : Type'} (z : type518 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (_109018 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term1669 _144530 _144607 _144645 P pat e q z _109018 _109019 _109020) = (term1641 _144530 _144607 _144645 P z pat e _109018 q _109019 _109020).
Proof. exact (TRANS (@lem8214512 _144530 _144607 _144645 P pat e z _109018 q _109019 _109020) (@lem8214517 _144530 _144607 _144645 P z pat e _109018 q _109019 _109020)). Qed.
Lemma lem8214548 {_144530 _144607 _144645 P : Type'} (z : type518 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (_109018 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term1668 _144530 _144607 _144645 P pat e q z _109018 _109019 _109020) = (term1641 _144530 _144607 _144645 P z pat e _109018 q _109019 _109020).
Proof. exact (TRANS (@lem8214451 _144530 _144607 _144645 P pat e q z _109018 _109019 _109020) (@lem8214547 _144530 _144607 _144645 P z pat e _109018 q _109019 _109020)). Qed.
Lemma lem8214549 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term868 _144530 _144607 P p _109019 _109020) = (term868 _144530 _144607 P p _109019 _109020).
Proof. exact (eq_refl (term868 _144530 _144607 P p _109019 _109020)). Qed.
Lemma lem8214550 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (z : type518 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (_109018 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term1666 _144530 _144607 _144645 P p pat e q z _109018 _109019 _109020) = (term1645 _144530 _144607 _144645 P p z pat e _109018 q _109019 _109020).
Proof. exact (MK_COMB (@lem8214549 _144530 _144607 P p _109019 _109020) (@lem8214548 _144530 _144607 _144645 P z pat e _109018 q _109019 _109020)). Qed.
Lemma lem8214554 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8214555 {_144530 _144607 _144645 P : Type'} (z : type518 _144530 _144607 P) (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (_109018 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term1645 _144530 _144607 _144645 P p z pat e _109018 q _109019 _109020) = (term1646 _144530 _144607 _144645 P z p pat e _109018 q _109019 _109020).
Proof. exact (@lem8214554 (term855 _144530 _144607 P z _109018 _109019 _109020) (term867 _144530 _144607 P p _109019 _109020) (term1569 _144530 _144607 _144645 P pat e _109018 q _109019 _109020)). Qed.
Lemma lem8214571 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8214572 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_109018 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term1570 _144530 _144607 _144645 P p pat e _109018 q _109019 _109020) = (term1571 _144530 _144607 _144645 P pat e p _109018 q _109019 _109020).
Proof. exact (@lem8214571 (term1096 _144530 _144607 _144645 P pat e _109019 _109020) (term867 _144530 _144607 P p _109019 _109020) (term939 _144530 _144607 P _109018 q _109019 _109020)). Qed.
Lemma lem8214600 {_144530 _144607 P : Type'} (z : type518 _144530 _144607 P) (_109018 : _144530 -> _144607) (_109019 : _144530 -> _144607) (_109020 : P) : (term969 _144530 _144607 P z _109018 _109019 _109020) = (term969 _144530 _144607 P z _109018 _109019 _109020).
Proof. exact (eq_refl (term969 _144530 _144607 P z _109018 _109019 _109020)). Qed.
Lemma lem8214601 {_144530 _144607 _144645 P : Type'} (z : type518 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_109018 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term1646 _144530 _144607 _144645 P z p pat e _109018 q _109019 _109020) = (term1647 _144530 _144607 _144645 P z pat e p _109018 q _109019 _109020).
Proof. exact (MK_COMB (@lem8214600 _144530 _144607 P z _109018 _109019 _109020) (@lem8214572 _144530 _144607 _144645 P pat e p _109018 q _109019 _109020)). Qed.
Lemma lem8214612 {_144530 _144607 _144645 P : Type'} (z : type518 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_109018 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term1645 _144530 _144607 _144645 P p z pat e _109018 q _109019 _109020) = (term1647 _144530 _144607 _144645 P z pat e p _109018 q _109019 _109020).
Proof. exact (TRANS (@lem8214555 _144530 _144607 _144645 P z p pat e _109018 q _109019 _109020) (@lem8214601 _144530 _144607 _144645 P z pat e p _109018 q _109019 _109020)). Qed.
Lemma lem8214613 {_144530 _144607 _144645 P : Type'} (z : type518 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_109018 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term1666 _144530 _144607 _144645 P p pat e q z _109018 _109019 _109020) = (term1647 _144530 _144607 _144645 P z pat e p _109018 q _109019 _109020).
Proof. exact (TRANS (@lem8214550 _144530 _144607 _144645 P p z pat e _109018 q _109019 _109020) (@lem8214612 _144530 _144607 _144645 P z pat e p _109018 q _109019 _109020)). Qed.
Lemma lem8214614 {_144530 _144607 _144645 P : Type'} (z : type518 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_109018 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term1665 _144530 _144607 _144645 P p pat e q z _109018 _109019 _109020) = (term1647 _144530 _144607 _144645 P z pat e p _109018 q _109019 _109020).
Proof. exact (TRANS (@lem8214436 _144530 _144607 _144645 P p pat e q z _109018 _109019 _109020) (@lem8214613 _144530 _144607 _144645 P z pat e p _109018 q _109019 _109020)). Qed.
Lemma lem8214615 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (_109018 : _144530 -> _144607) (_109020 : P) : (term868 _144530 _144607 P p _109018 _109020) = (term868 _144530 _144607 P p _109018 _109020).
Proof. exact (eq_refl (term868 _144530 _144607 P p _109018 _109020)). Qed.
Lemma lem8214616 {_144530 _144607 _144645 P : Type'} (z : type518 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_109018 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term1670 _144530 _144607 _144645 P p pat e q z _109018 _109019 _109020) = (term1652 _144530 _144607 _144645 P z pat e p _109018 q _109019 _109020).
Proof. exact (MK_COMB (@lem8214615 _144530 _144607 P p _109018 _109020) (@lem8214614 _144530 _144607 _144645 P z pat e p _109018 q _109019 _109020)). Qed.
Lemma lem8214620 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8214621 {_144530 _144607 _144645 P : Type'} (z : type518 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_109018 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term1652 _144530 _144607 _144645 P z pat e p _109018 q _109019 _109020) = (term1653 _144530 _144607 _144645 P z pat e p _109018 q _109019 _109020).
Proof. exact (@lem8214620 (term855 _144530 _144607 P z _109018 _109019 _109020) (term867 _144530 _144607 P p _109018 _109020) (term1571 _144530 _144607 _144645 P pat e p _109018 q _109019 _109020)). Qed.
Lemma lem8214637 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8214638 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_109018 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term1579 _144530 _144607 _144645 P pat e p _109018 q _109019 _109020) = (term1580 _144530 _144607 _144645 P pat e p _109018 q _109019 _109020).
Proof. exact (@lem8214637 (term1096 _144530 _144607 _144645 P pat e _109019 _109020) (term867 _144530 _144607 P p _109018 _109020) (term1581 _144530 _144607 P p _109018 q _109019 _109020)). Qed.
Lemma lem8214676 {_144530 _144607 P : Type'} (z : type518 _144530 _144607 P) (_109018 : _144530 -> _144607) (_109019 : _144530 -> _144607) (_109020 : P) : (term969 _144530 _144607 P z _109018 _109019 _109020) = (term969 _144530 _144607 P z _109018 _109019 _109020).
Proof. exact (eq_refl (term969 _144530 _144607 P z _109018 _109019 _109020)). Qed.
Lemma lem8214677 {_144530 _144607 _144645 P : Type'} (z : type518 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_109018 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term1653 _144530 _144607 _144645 P z pat e p _109018 q _109019 _109020) = (term1654 _144530 _144607 _144645 P z pat e p _109018 q _109019 _109020).
Proof. exact (MK_COMB (@lem8214676 _144530 _144607 P z _109018 _109019 _109020) (@lem8214638 _144530 _144607 _144645 P pat e p _109018 q _109019 _109020)). Qed.
Lemma lem8214688 {_144530 _144607 _144645 P : Type'} (z : type518 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_109018 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term1652 _144530 _144607 _144645 P z pat e p _109018 q _109019 _109020) = (term1654 _144530 _144607 _144645 P z pat e p _109018 q _109019 _109020).
Proof. exact (TRANS (@lem8214621 _144530 _144607 _144645 P z pat e p _109018 q _109019 _109020) (@lem8214677 _144530 _144607 _144645 P z pat e p _109018 q _109019 _109020)). Qed.
Lemma lem8214689 {_144530 _144607 _144645 P : Type'} (z : type518 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_109018 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term1670 _144530 _144607 _144645 P p pat e q z _109018 _109019 _109020) = (term1654 _144530 _144607 _144645 P z pat e p _109018 q _109019 _109020).
Proof. exact (TRANS (@lem8214616 _144530 _144607 _144645 P z pat e p _109018 q _109019 _109020) (@lem8214688 _144530 _144607 _144645 P z pat e p _109018 q _109019 _109020)). Qed.
Lemma lem8214690 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (_109018 : _144530 -> _144607) (_109020 : P) : (term1184 _144530 _144607 _144645 P pat e _109018 _109020) = (term1184 _144530 _144607 _144645 P pat e _109018 _109020).
Proof. exact (eq_refl (term1184 _144530 _144607 _144645 P pat e _109018 _109020)). Qed.
Lemma lem8214691 {_144530 _144607 _144645 P : Type'} (z : type518 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_109018 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term1664 _144530 _144607 _144645 P p pat e q z _109018 _109019 _109020) = (term1658 _144530 _144607 _144645 P z pat e p _109018 q _109019 _109020).
Proof. exact (MK_COMB (@lem8214690 _144530 _144607 _144645 P pat e _109018 _109020) (@lem8214689 _144530 _144607 _144645 P z pat e p _109018 q _109019 _109020)). Qed.
Lemma lem8214695 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8214696 {_144530 _144607 _144645 P : Type'} (z : type518 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_109018 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term1658 _144530 _144607 _144645 P z pat e p _109018 q _109019 _109020) = (term1659 _144530 _144607 _144645 P z pat e p _109018 q _109019 _109020).
Proof. exact (@lem8214695 (term855 _144530 _144607 P z _109018 _109019 _109020) (term1096 _144530 _144607 _144645 P pat e _109018 _109020) (term1580 _144530 _144607 _144645 P pat e p _109018 q _109019 _109020)). Qed.
Lemma lem8214758 {_144530 _144607 _144645 P : Type'} (z : type518 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_109018 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term1664 _144530 _144607 _144645 P p pat e q z _109018 _109019 _109020) = (term1659 _144530 _144607 _144645 P z pat e p _109018 q _109019 _109020).
Proof. exact (TRANS (@lem8214691 _144530 _144607 _144645 P z pat e p _109018 q _109019 _109020) (@lem8214696 _144530 _144607 _144645 P z pat e p _109018 q _109019 _109020)). Qed.
Lemma lem8214759 {_144530 _144607 _144645 P : Type'} (z : type518 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_109018 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term1663 _144530 _144607 _144645 P p pat e q z _109018 _109019 _109020) = (term1659 _144530 _144607 _144645 P z pat e p _109018 q _109019 _109020).
Proof. exact (TRANS (@lem8214409 _144530 _144607 _144645 P p pat e q z _109018 _109019 _109020) (@lem8214758 _144530 _144607 _144645 P z pat e p _109018 q _109019 _109020)). Qed.
Lemma lem8214760 {_144530 _144607 _144654 P : Type'} (_109018 : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term930 _144530 _144607 _144654 P _109018 y _109019 _109020) = (term930 _144530 _144607 _144654 P _109018 y _109019 _109020).
Proof. exact (eq_refl (term930 _144530 _144607 _144654 P _109018 y _109019 _109020)). Qed.
Lemma lem8214761 {_144530 _144607 _144645 _144654 P : Type'} (y : type564 _144530 _144607 _144654 P) (z : type518 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_109018 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term1671 _144530 _144607 _144645 _144654 P y p pat e q z _109018 _109019 _109020) = (term1660 _144530 _144607 _144645 _144654 P y z pat e p _109018 q _109019 _109020).
Proof. exact (MK_COMB (@lem8214760 _144530 _144607 _144654 P _109018 y _109019 _109020) (@lem8214759 _144530 _144607 _144645 P z pat e p _109018 q _109019 _109020)). Qed.
Lemma lem8214772 {_144530 _144607 _144645 _144654 P : Type'} (y : type564 _144530 _144607 _144654 P) (z : type518 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_109018 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109019 : _144530 -> _144607) (_109020 : P) : ((term1554 _144530 _144607 _144645 _144654 P p pat e q z _109018 y _109019 _109020) = (term1671 _144530 _144607 _144645 _144654 P y p pat e q z _109018 _109019 _109020)) = ((term1660 _144530 _144607 _144645 _144654 P y z pat e p _109018 q _109019 _109020) = (term1660 _144530 _144607 _144645 _144654 P y z pat e p _109018 q _109019 _109020)).
Proof. exact (MK_COMB (@lem8214392 _144530 _144607 _144645 _144654 P y z pat e p _109018 q _109019 _109020) (@lem8214761 _144530 _144607 _144645 _144654 P y z pat e p _109018 q _109019 _109020)). Qed.
Lemma lem8214774 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem20665 A x) (@lem20664 A x)). Qed.
Lemma lem8214775 (x : Prop) : (x = x) = True.
Proof. exact (@lem8214774 Prop x). Qed.
Lemma lem8214776 {_144530 _144607 _144645 _144654 P : Type'} (y : type564 _144530 _144607 _144654 P) (z : type518 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (_109018 : _144530 -> _144607) (q : type560 _144530 _144607 P) (_109019 : _144530 -> _144607) (_109020 : P) : ((term1660 _144530 _144607 _144645 _144654 P y z pat e p _109018 q _109019 _109020) = (term1660 _144530 _144607 _144645 _144654 P y z pat e p _109018 q _109019 _109020)) = True.
Proof. exact (@lem8214775 (term1660 _144530 _144607 _144645 _144654 P y z pat e p _109018 q _109019 _109020)). Qed.
Lemma lem8214777 {_144530 _144607 _144645 _144654 P : Type'} (y : type564 _144530 _144607 _144654 P) (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (z : type518 _144530 _144607 P) (_109018 : _144530 -> _144607) (_109019 : _144530 -> _144607) (_109020 : P) : ((term1554 _144530 _144607 _144645 _144654 P p pat e q z _109018 y _109019 _109020) = (term1671 _144530 _144607 _144645 _144654 P y p pat e q z _109018 _109019 _109020)) = True.
Proof. exact (TRANS (@lem8214772 _144530 _144607 _144645 _144654 P y z pat e p _109018 q _109019 _109020) (@lem8214776 _144530 _144607 _144645 _144654 P y z pat e p _109018 q _109019 _109020)). Qed.
Lemma lem8214778 {_144530 _144607 _144645 _144654 P : Type'} (y : type564 _144530 _144607 _144654 P) (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (z : type518 _144530 _144607 P) (_109018 : _144530 -> _144607) (_109019 : _144530 -> _144607) (_109020 : P) : True = ((term1554 _144530 _144607 _144645 _144654 P p pat e q z _109018 y _109019 _109020) = (term1671 _144530 _144607 _144645 _144654 P y p pat e q z _109018 _109019 _109020)).
Proof. exact (SYM (@lem8214777 _144530 _144607 _144645 _144654 P y p pat e q z _109018 _109019 _109020)). Qed.
Lemma lem8214779 {_144530 _144607 _144645 _144654 P : Type'} (y : type564 _144530 _144607 _144654 P) (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (z : type518 _144530 _144607 P) (_109018 : _144530 -> _144607) (_109019 : _144530 -> _144607) (_109020 : P) : (term1554 _144530 _144607 _144645 _144654 P p pat e q z _109018 y _109019 _109020) = (term1671 _144530 _144607 _144645 _144654 P y p pat e q z _109018 _109019 _109020).
Proof. exact (EQ_MP (@lem8214778 _144530 _144607 _144645 _144654 P y p pat e q z _109018 _109019 _109020) (@lem0)). Qed.
Lemma lem8214780 {_144529 _144530 _144607 _144645 _144654 P : Type'} (_109018 : _144530 -> _144607) (_109019 : _144530 -> _144607) (_109020 : P) (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : type518 _144530 _144607 P) (y : type564 _144530 _144607 _144654 P) (h1 : term685 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z y) : term1671 _144530 _144607 _144645 _144654 P y p pat e q z _109018 _109019 _109020.
Proof. exact (EQ_MP (@lem8214779 _144530 _144607 _144645 _144654 P y p pat e q z _109018 _109019 _109020) (@lem8209848 _144529 _144530 _144607 _144645 _144654 P _109018 _109019 _109020 p pat e q lt2 s z y h1)). Qed.
Lemma lem8214782 (b : Prop) (a : Prop) : (a \/ b) = (term940 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem8214783 {_144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (z : type518 _144530 _144607 P) (_109018 : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term1671 _144530 _144607 _144645 _144654 P y p pat e q z _109018 _109019 _109020) = (term1672 _144530 _144607 _144645 _144654 P p pat e q z _109018 y _109019 _109020).
Proof. exact (@lem8214782 (term1663 _144530 _144607 _144645 P p pat e q z _109018 _109019 _109020) ((term835 _144530 _144607 _144654 P y _109018 _109020) = (term835 _144530 _144607 _144654 P y _109019 _109020))). Qed.
Lemma lem8214785 (a : Prop) (b : Prop) : (term942 a b) = (term943 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem8214786 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (z : type518 _144530 _144607 P) (_109018 : _144530 -> _144607) (_109019 : _144530 -> _144607) (_109020 : P) : (term1673 _144530 _144607 _144645 P p pat e q z _109018 _109019 _109020) = (term1674 _144530 _144607 _144645 P p pat e q z _109018 _109019 _109020).
Proof. exact (@lem8214785 (term867 _144530 _144607 P p _109018 _109020) (term1675 _144530 _144607 _144645 P p pat e q z _109018 _109019 _109020)). Qed.
Lemma lem8214788 (a : Prop) : (term15 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8214789 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (_109018 : _144530 -> _144607) (_109020 : P) : (term946 _144530 _144607 P p _109018 _109020) = (term822 _144530 _144607 P p _109018 _109020).
Proof. exact (@lem8214788 (term822 _144530 _144607 P p _109018 _109020)). Qed.
Lemma lem8214790 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8214791 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (_109018 : _144530 -> _144607) (_109020 : P) : (term947 _144530 _144607 P p _109018 _109020) = (term948 _144530 _144607 P p _109018 _109020).
Proof. exact (MK_COMB (@lem8214790) (@lem8214789 _144530 _144607 P p _109018 _109020)). Qed.
Lemma lem8214793 (a : Prop) (b : Prop) : (term942 a b) = (term943 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem8214794 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (z : type518 _144530 _144607 P) (_109018 : _144530 -> _144607) (_109019 : _144530 -> _144607) (_109020 : P) : (term1676 _144530 _144607 _144645 P p pat e q z _109018 _109019 _109020) = (term1677 _144530 _144607 _144645 P p pat e q z _109018 _109019 _109020).
Proof. exact (@lem8214793 (term1096 _144530 _144607 _144645 P pat e _109018 _109020) (term1665 _144530 _144607 _144645 P p pat e q z _109018 _109019 _109020)). Qed.
Lemma lem8214796 (a : Prop) : (term15 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8214797 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (_109018 : _144530 -> _144607) (_109020 : P) : (term1220 _144530 _144607 _144645 P pat e _109018 _109020) = ((term835 _144530 _144607 _144645 P pat _109018 _109020) = (term835 _144530 _144607 _144645 P e _109018 _109020)).
Proof. exact (@lem8214796 ((term835 _144530 _144607 _144645 P pat _109018 _109020) = (term835 _144530 _144607 _144645 P e _109018 _109020))). Qed.
Lemma lem8214798 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8214799 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (_109018 : _144530 -> _144607) (_109020 : P) : (term1221 _144530 _144607 _144645 P pat e _109018 _109020) = (term1222 _144530 _144607 _144645 P pat e _109018 _109020).
Proof. exact (MK_COMB (@lem8214798) (@lem8214797 _144530 _144607 _144645 P pat e _109018 _109020)). Qed.
Lemma lem8214801 (a : Prop) (b : Prop) : (term942 a b) = (term943 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem8214802 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (z : type518 _144530 _144607 P) (_109018 : _144530 -> _144607) (_109019 : _144530 -> _144607) (_109020 : P) : (term1678 _144530 _144607 _144645 P p pat e q z _109018 _109019 _109020) = (term1679 _144530 _144607 _144645 P p pat e q z _109018 _109019 _109020).
Proof. exact (@lem8214801 (term867 _144530 _144607 P q _109018 _109020) (term1680 _144530 _144607 _144645 P p pat e q z _109018 _109019 _109020)). Qed.
Lemma lem8214804 (a : Prop) : (term15 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8214805 {_144530 _144607 P : Type'} (q : type560 _144530 _144607 P) (_109018 : _144530 -> _144607) (_109020 : P) : (term946 _144530 _144607 P q _109018 _109020) = (term822 _144530 _144607 P q _109018 _109020).
Proof. exact (@lem8214804 (term822 _144530 _144607 P q _109018 _109020)). Qed.
Lemma lem8214806 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8214807 {_144530 _144607 P : Type'} (q : type560 _144530 _144607 P) (_109018 : _144530 -> _144607) (_109020 : P) : (term947 _144530 _144607 P q _109018 _109020) = (term948 _144530 _144607 P q _109018 _109020).
Proof. exact (MK_COMB (@lem8214806) (@lem8214805 _144530 _144607 P q _109018 _109020)). Qed.
Lemma lem8214809 (a : Prop) (b : Prop) : (term942 a b) = (term943 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem8214810 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (z : type518 _144530 _144607 P) (_109018 : _144530 -> _144607) (_109019 : _144530 -> _144607) (_109020 : P) : (term1681 _144530 _144607 _144645 P p pat e q z _109018 _109019 _109020) = (term1682 _144530 _144607 _144645 P p pat e q z _109018 _109019 _109020).
Proof. exact (@lem8214809 (term867 _144530 _144607 P p _109019 _109020) (term1667 _144530 _144607 _144645 P pat e q z _109018 _109019 _109020)). Qed.
Lemma lem8214812 (a : Prop) : (term15 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8214813 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term946 _144530 _144607 P p _109019 _109020) = (term822 _144530 _144607 P p _109019 _109020).
Proof. exact (@lem8214812 (term822 _144530 _144607 P p _109019 _109020)). Qed.
Lemma lem8214814 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8214815 {_144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term947 _144530 _144607 P p _109019 _109020) = (term948 _144530 _144607 P p _109019 _109020).
Proof. exact (MK_COMB (@lem8214814) (@lem8214813 _144530 _144607 P p _109019 _109020)). Qed.
Lemma lem8214817 (a : Prop) (b : Prop) : (term942 a b) = (term943 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem8214818 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (z : type518 _144530 _144607 P) (_109018 : _144530 -> _144607) (_109019 : _144530 -> _144607) (_109020 : P) : (term1683 _144530 _144607 _144645 P pat e q z _109018 _109019 _109020) = (term1684 _144530 _144607 _144645 P pat e q z _109018 _109019 _109020).
Proof. exact (@lem8214817 (term1096 _144530 _144607 _144645 P pat e _109019 _109020) (term890 _144530 _144607 P q z _109018 _109019 _109020)). Qed.
Lemma lem8214820 (a : Prop) : (term15 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8214821 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term1220 _144530 _144607 _144645 P pat e _109019 _109020) = ((term835 _144530 _144607 _144645 P pat _109019 _109020) = (term835 _144530 _144607 _144645 P e _109019 _109020)).
Proof. exact (@lem8214820 ((term835 _144530 _144607 _144645 P pat _109019 _109020) = (term835 _144530 _144607 _144645 P e _109019 _109020))). Qed.
Lemma lem8214822 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8214823 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term1221 _144530 _144607 _144645 P pat e _109019 _109020) = (term1222 _144530 _144607 _144645 P pat e _109019 _109020).
Proof. exact (MK_COMB (@lem8214822) (@lem8214821 _144530 _144607 _144645 P pat e _109019 _109020)). Qed.
Lemma lem8214825 (a : Prop) (b : Prop) : (term942 a b) = (term943 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem8214826 {_144530 _144607 P : Type'} (q : type560 _144530 _144607 P) (z : type518 _144530 _144607 P) (_109018 : _144530 -> _144607) (_109019 : _144530 -> _144607) (_109020 : P) : (term984 _144530 _144607 P q z _109018 _109019 _109020) = (term985 _144530 _144607 P q z _109018 _109019 _109020).
Proof. exact (@lem8214825 (term867 _144530 _144607 P q _109019 _109020) (term855 _144530 _144607 P z _109018 _109019 _109020)). Qed.
Lemma lem8214828 (a : Prop) : (term15 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8214829 {_144530 _144607 P : Type'} (q : type560 _144530 _144607 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term946 _144530 _144607 P q _109019 _109020) = (term822 _144530 _144607 P q _109019 _109020).
Proof. exact (@lem8214828 (term822 _144530 _144607 P q _109019 _109020)). Qed.
Lemma lem8214830 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8214831 {_144530 _144607 P : Type'} (q : type560 _144530 _144607 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term947 _144530 _144607 P q _109019 _109020) = (term948 _144530 _144607 P q _109019 _109020).
Proof. exact (MK_COMB (@lem8214830) (@lem8214829 _144530 _144607 P q _109019 _109020)). Qed.
Lemma lem8214833 (a : Prop) : (term15 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8214834 {_144530 _144607 P : Type'} (z : type518 _144530 _144607 P) (_109018 : _144530 -> _144607) (_109019 : _144530 -> _144607) (_109020 : P) : (term986 _144530 _144607 P z _109018 _109019 _109020) = ((term848 _144530 _144607 P z _109018 _109019 _109020) = (term851 _144530 _144607 P z _109018 _109019 _109020)).
Proof. exact (@lem8214833 ((term848 _144530 _144607 P z _109018 _109019 _109020) = (term851 _144530 _144607 P z _109018 _109019 _109020))). Qed.
Lemma lem8214835 {_144530 _144607 P : Type'} (q : type560 _144530 _144607 P) (z : type518 _144530 _144607 P) (_109018 : _144530 -> _144607) (_109019 : _144530 -> _144607) (_109020 : P) : (term985 _144530 _144607 P q z _109018 _109019 _109020) = (term987 _144530 _144607 P q z _109018 _109019 _109020).
Proof. exact (MK_COMB (@lem8214831 _144530 _144607 P q _109019 _109020) (@lem8214834 _144530 _144607 P z _109018 _109019 _109020)). Qed.
Lemma lem8214836 {_144530 _144607 P : Type'} (q : type560 _144530 _144607 P) (z : type518 _144530 _144607 P) (_109018 : _144530 -> _144607) (_109019 : _144530 -> _144607) (_109020 : P) : (term984 _144530 _144607 P q z _109018 _109019 _109020) = (term987 _144530 _144607 P q z _109018 _109019 _109020).
Proof. exact (TRANS (@lem8214826 _144530 _144607 P q z _109018 _109019 _109020) (@lem8214835 _144530 _144607 P q z _109018 _109019 _109020)). Qed.
Lemma lem8214837 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (z : type518 _144530 _144607 P) (_109018 : _144530 -> _144607) (_109019 : _144530 -> _144607) (_109020 : P) : (term1684 _144530 _144607 _144645 P pat e q z _109018 _109019 _109020) = (term1685 _144530 _144607 _144645 P pat e q z _109018 _109019 _109020).
Proof. exact (MK_COMB (@lem8214823 _144530 _144607 _144645 P pat e _109019 _109020) (@lem8214836 _144530 _144607 P q z _109018 _109019 _109020)). Qed.
Lemma lem8214838 {_144530 _144607 _144645 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (z : type518 _144530 _144607 P) (_109018 : _144530 -> _144607) (_109019 : _144530 -> _144607) (_109020 : P) : (term1683 _144530 _144607 _144645 P pat e q z _109018 _109019 _109020) = (term1685 _144530 _144607 _144645 P pat e q z _109018 _109019 _109020).
Proof. exact (TRANS (@lem8214818 _144530 _144607 _144645 P pat e q z _109018 _109019 _109020) (@lem8214837 _144530 _144607 _144645 P pat e q z _109018 _109019 _109020)). Qed.
Lemma lem8214839 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (z : type518 _144530 _144607 P) (_109018 : _144530 -> _144607) (_109019 : _144530 -> _144607) (_109020 : P) : (term1682 _144530 _144607 _144645 P p pat e q z _109018 _109019 _109020) = (term1686 _144530 _144607 _144645 P p pat e q z _109018 _109019 _109020).
Proof. exact (MK_COMB (@lem8214815 _144530 _144607 P p _109019 _109020) (@lem8214838 _144530 _144607 _144645 P pat e q z _109018 _109019 _109020)). Qed.
Lemma lem8214840 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (z : type518 _144530 _144607 P) (_109018 : _144530 -> _144607) (_109019 : _144530 -> _144607) (_109020 : P) : (term1681 _144530 _144607 _144645 P p pat e q z _109018 _109019 _109020) = (term1686 _144530 _144607 _144645 P p pat e q z _109018 _109019 _109020).
Proof. exact (TRANS (@lem8214810 _144530 _144607 _144645 P p pat e q z _109018 _109019 _109020) (@lem8214839 _144530 _144607 _144645 P p pat e q z _109018 _109019 _109020)). Qed.
Lemma lem8214841 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (z : type518 _144530 _144607 P) (_109018 : _144530 -> _144607) (_109019 : _144530 -> _144607) (_109020 : P) : (term1679 _144530 _144607 _144645 P p pat e q z _109018 _109019 _109020) = (term1687 _144530 _144607 _144645 P p pat e q z _109018 _109019 _109020).
Proof. exact (MK_COMB (@lem8214807 _144530 _144607 P q _109018 _109020) (@lem8214840 _144530 _144607 _144645 P p pat e q z _109018 _109019 _109020)). Qed.
Lemma lem8214842 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (z : type518 _144530 _144607 P) (_109018 : _144530 -> _144607) (_109019 : _144530 -> _144607) (_109020 : P) : (term1678 _144530 _144607 _144645 P p pat e q z _109018 _109019 _109020) = (term1687 _144530 _144607 _144645 P p pat e q z _109018 _109019 _109020).
Proof. exact (TRANS (@lem8214802 _144530 _144607 _144645 P p pat e q z _109018 _109019 _109020) (@lem8214841 _144530 _144607 _144645 P p pat e q z _109018 _109019 _109020)). Qed.
Lemma lem8214843 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (z : type518 _144530 _144607 P) (_109018 : _144530 -> _144607) (_109019 : _144530 -> _144607) (_109020 : P) : (term1677 _144530 _144607 _144645 P p pat e q z _109018 _109019 _109020) = (term1688 _144530 _144607 _144645 P p pat e q z _109018 _109019 _109020).
Proof. exact (MK_COMB (@lem8214799 _144530 _144607 _144645 P pat e _109018 _109020) (@lem8214842 _144530 _144607 _144645 P p pat e q z _109018 _109019 _109020)). Qed.
Lemma lem8214844 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (z : type518 _144530 _144607 P) (_109018 : _144530 -> _144607) (_109019 : _144530 -> _144607) (_109020 : P) : (term1676 _144530 _144607 _144645 P p pat e q z _109018 _109019 _109020) = (term1688 _144530 _144607 _144645 P p pat e q z _109018 _109019 _109020).
Proof. exact (TRANS (@lem8214794 _144530 _144607 _144645 P p pat e q z _109018 _109019 _109020) (@lem8214843 _144530 _144607 _144645 P p pat e q z _109018 _109019 _109020)). Qed.
Lemma lem8214845 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (z : type518 _144530 _144607 P) (_109018 : _144530 -> _144607) (_109019 : _144530 -> _144607) (_109020 : P) : (term1674 _144530 _144607 _144645 P p pat e q z _109018 _109019 _109020) = (term1689 _144530 _144607 _144645 P p pat e q z _109018 _109019 _109020).
Proof. exact (MK_COMB (@lem8214791 _144530 _144607 P p _109018 _109020) (@lem8214844 _144530 _144607 _144645 P p pat e q z _109018 _109019 _109020)). Qed.
Lemma lem8214846 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (z : type518 _144530 _144607 P) (_109018 : _144530 -> _144607) (_109019 : _144530 -> _144607) (_109020 : P) : (term1673 _144530 _144607 _144645 P p pat e q z _109018 _109019 _109020) = (term1689 _144530 _144607 _144645 P p pat e q z _109018 _109019 _109020).
Proof. exact (TRANS (@lem8214786 _144530 _144607 _144645 P p pat e q z _109018 _109019 _109020) (@lem8214845 _144530 _144607 _144645 P p pat e q z _109018 _109019 _109020)). Qed.
Lemma lem8214847 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8214848 {_144530 _144607 _144645 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (z : type518 _144530 _144607 P) (_109018 : _144530 -> _144607) (_109019 : _144530 -> _144607) (_109020 : P) : (term1690 _144530 _144607 _144645 P p pat e q z _109018 _109019 _109020) = (term1691 _144530 _144607 _144645 P p pat e q z _109018 _109019 _109020).
Proof. exact (MK_COMB (@lem8214847) (@lem8214846 _144530 _144607 _144645 P p pat e q z _109018 _109019 _109020)). Qed.
Lemma lem8214849 {_144530 _144607 _144654 P : Type'} (_109018 : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (_109019 : _144530 -> _144607) (_109020 : P) : ((term835 _144530 _144607 _144654 P y _109018 _109020) = (term835 _144530 _144607 _144654 P y _109019 _109020)) = ((term835 _144530 _144607 _144654 P y _109018 _109020) = (term835 _144530 _144607 _144654 P y _109019 _109020)).
Proof. exact (eq_refl ((term835 _144530 _144607 _144654 P y _109018 _109020) = (term835 _144530 _144607 _144654 P y _109019 _109020))). Qed.
Lemma lem8214850 {_144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (z : type518 _144530 _144607 P) (_109018 : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term1672 _144530 _144607 _144645 _144654 P p pat e q z _109018 y _109019 _109020) = (term1692 _144530 _144607 _144645 _144654 P p pat e q z _109018 y _109019 _109020).
Proof. exact (MK_COMB (@lem8214848 _144530 _144607 _144645 P p pat e q z _109018 _109019 _109020) (@lem8214849 _144530 _144607 _144654 P _109018 y _109019 _109020)). Qed.
Lemma lem8214851 {_144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (z : type518 _144530 _144607 P) (_109018 : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (_109019 : _144530 -> _144607) (_109020 : P) : (term1671 _144530 _144607 _144645 _144654 P y p pat e q z _109018 _109019 _109020) = (term1692 _144530 _144607 _144645 _144654 P p pat e q z _109018 y _109019 _109020).
Proof. exact (TRANS (@lem8214783 _144530 _144607 _144645 _144654 P p pat e q z _109018 y _109019 _109020) (@lem8214850 _144530 _144607 _144645 _144654 P p pat e q z _109018 y _109019 _109020)). Qed.
Lemma lem8214853 {_144529 _144530 _144607 _144645 _144654 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : type518 _144530 _144607 P) (y : type564 _144530 _144607 _144654 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) (h2 : term685 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z y) (h3 : term839 _144530 _144607 _144654 P f y g a) (h4 : (pat f a) = (e f a)) (h5 : (pat g a) = (e g a)) (h6 : p f a) (h7 : p g a) (h8 : q f a) (h9 : q g a) : term987 _144530 _144607 P q z f g a.
Proof. exact (conj (@lem8212650 _144530 _144607 P q g a h9) (@lem8213838 _144529 _144530 _144607 _144645 _144654 P lt2 s z y pat e p f q g a h1 h2 h3 h4 h5 h6 h7 h8 h9)). Qed.
Lemma lem8214854 {_144529 _144530 _144607 _144645 _144654 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : type518 _144530 _144607 P) (y : type564 _144530 _144607 _144654 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) (h2 : term685 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z y) (h3 : term839 _144530 _144607 _144654 P f y g a) (h4 : (pat f a) = (e f a)) (h5 : (pat g a) = (e g a)) (h6 : p f a) (h7 : p g a) (h8 : q f a) (h9 : q g a) : term1685 _144530 _144607 _144645 P pat e q z f g a.
Proof. exact (conj (@lem8212643 _144530 _144607 _144645 P pat e g a h5) (@lem8214853 _144529 _144530 _144607 _144645 _144654 P lt2 s z y pat e p f q g a h1 h2 h3 h4 h5 h6 h7 h8 h9)). Qed.
Lemma lem8214855 {_144529 _144530 _144607 _144645 _144654 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : type518 _144530 _144607 P) (y : type564 _144530 _144607 _144654 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) (h2 : term685 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z y) (h3 : term839 _144530 _144607 _144654 P f y g a) (h4 : (pat f a) = (e f a)) (h5 : (pat g a) = (e g a)) (h6 : p f a) (h7 : p g a) (h8 : q f a) (h9 : q g a) : term1686 _144530 _144607 _144645 P p pat e q z f g a.
Proof. exact (conj (@lem8212636 _144530 _144607 P p g a h7) (@lem8214854 _144529 _144530 _144607 _144645 _144654 P lt2 s z y pat e p f q g a h1 h2 h3 h4 h5 h6 h7 h8 h9)). Qed.
Lemma lem8214856 {_144529 _144530 _144607 _144645 _144654 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : type518 _144530 _144607 P) (y : type564 _144530 _144607 _144654 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) (h2 : term685 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z y) (h3 : term839 _144530 _144607 _144654 P f y g a) (h4 : (pat f a) = (e f a)) (h5 : (pat g a) = (e g a)) (h6 : p f a) (h7 : p g a) (h8 : q f a) (h9 : q g a) : term1687 _144530 _144607 _144645 P p pat e q z f g a.
Proof. exact (conj (@lem8212629 _144530 _144607 P q f a h8) (@lem8214855 _144529 _144530 _144607 _144645 _144654 P lt2 s z y pat e p f q g a h1 h2 h3 h4 h5 h6 h7 h8 h9)). Qed.
Lemma lem8214857 {_144529 _144530 _144607 _144645 _144654 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : type518 _144530 _144607 P) (y : type564 _144530 _144607 _144654 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) (h2 : term685 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z y) (h3 : term839 _144530 _144607 _144654 P f y g a) (h4 : (pat f a) = (e f a)) (h5 : (pat g a) = (e g a)) (h6 : p f a) (h7 : p g a) (h8 : q f a) (h9 : q g a) : term1688 _144530 _144607 _144645 P p pat e q z f g a.
Proof. exact (conj (@lem8212622 _144530 _144607 _144645 P pat e f a h4) (@lem8214856 _144529 _144530 _144607 _144645 _144654 P lt2 s z y pat e p f q g a h1 h2 h3 h4 h5 h6 h7 h8 h9)). Qed.
Lemma lem8214858 {_144529 _144530 _144607 _144645 _144654 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : type518 _144530 _144607 P) (y : type564 _144530 _144607 _144654 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) (h2 : term685 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z y) (h3 : term839 _144530 _144607 _144654 P f y g a) (h4 : (pat f a) = (e f a)) (h5 : (pat g a) = (e g a)) (h6 : p f a) (h7 : p g a) (h8 : q f a) (h9 : q g a) : term1689 _144530 _144607 _144645 P p pat e q z f g a.
Proof. exact (conj (@lem8212615 _144530 _144607 P p f a h6) (@lem8214857 _144529 _144530 _144607 _144645 _144654 P lt2 s z y pat e p f q g a h1 h2 h3 h4 h5 h6 h7 h8 h9)). Qed.
Lemma lem8214860 {_144529 _144530 _144607 _144645 _144654 P : Type'} (_109018 : _144530 -> _144607) (_109019 : _144530 -> _144607) (_109020 : P) (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : type518 _144530 _144607 P) (y : type564 _144530 _144607 _144654 P) (h1 : term685 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z y) : term1692 _144530 _144607 _144645 _144654 P p pat e q z _109018 y _109019 _109020.
Proof. exact (EQ_MP (@lem8214851 _144530 _144607 _144645 _144654 P p pat e q z _109018 y _109019 _109020) (@lem8214780 _144529 _144530 _144607 _144645 _144654 P _109018 _109019 _109020 p pat e q lt2 s z y h1)). Qed.
Lemma lem8214861 {_144529 _144530 _144607 _144645 _144654 P : Type'} (_109018 : _144530 -> _144607) (_109019 : _144530 -> _144607) (_109020 : P) (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : type518 _144530 _144607 P) (y : type564 _144530 _144607 _144654 P) (h1 : term685 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z y) : term1692 _144530 _144607 _144645 _144654 P p pat e q z _109018 y _109019 _109020.
Proof. exact (@lem8214860 _144529 _144530 _144607 _144645 _144654 P _109018 _109019 _109020 p pat e q lt2 s z y h1). Qed.
Lemma lem8214862 {_144529 _144530 _144607 _144645 _144654 P : Type'} (f : _144530 -> _144607) (g : _144530 -> _144607) (a : P) (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : type518 _144530 _144607 P) (y : type564 _144530 _144607 _144654 P) (h1 : term685 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z y) : term1692 _144530 _144607 _144645 _144654 P p pat e q z f y g a.
Proof. exact (@lem8214861 _144529 _144530 _144607 _144645 _144654 P f g a p pat e q lt2 s z y h1). Qed.
Lemma lem8214865 {_144529 _144530 _144607 _144645 _144654 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : type518 _144530 _144607 P) (y : type564 _144530 _144607 _144654 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) (h2 : term685 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z y) (h3 : term839 _144530 _144607 _144654 P f y g a) (h4 : (pat f a) = (e f a)) (h5 : (pat g a) = (e g a)) (h6 : p f a) (h7 : p g a) (h8 : q f a) (h9 : q g a) : (term835 _144530 _144607 _144654 P y f a) = (term835 _144530 _144607 _144654 P y g a).
Proof. exact (@lem8214862 _144529 _144530 _144607 _144645 _144654 P f g a p pat e q lt2 s z y h2 (@lem8214858 _144529 _144530 _144607 _144645 _144654 P lt2 s z y pat e p f q g a h1 h2 h3 h4 h5 h6 h7 h8 h9)). Qed.
Lemma lem8214866 {_144529 _144530 _144607 _144645 _144654 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : type518 _144530 _144607 P) (y : type564 _144530 _144607 _144654 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) (h2 : term685 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z y) (h3 : (pat f a) = (e f a)) (h4 : (pat g a) = (e g a)) (h5 : p f a) (h6 : p g a) (h7 : q f a) (h8 : q g a) : term992 _144530 _144607 _144654 P f y g a.
Proof. exact (fun h0 : term839 _144530 _144607 _144654 P f y g a => @lem8214865 _144529 _144530 _144607 _144645 _144654 P lt2 s z y pat e p f q g a h1 h2 h0 h3 h4 h5 h6 h7 h8). Qed.
Lemma lem8214868 (p : Prop) : (term57 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8214869 {_144530 _144607 _144654 P : Type'} (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (term992 _144530 _144607 _144654 P f y g a) = ((term835 _144530 _144607 _144654 P y f a) = (term835 _144530 _144607 _144654 P y g a)).
Proof. exact (@lem8214868 ((term835 _144530 _144607 _144654 P y f a) = (term835 _144530 _144607 _144654 P y g a))). Qed.
Lemma lem8214870 {_144529 _144530 _144607 _144645 _144654 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : type518 _144530 _144607 P) (y : type564 _144530 _144607 _144654 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) (h2 : term685 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z y) (h3 : (pat f a) = (e f a)) (h4 : (pat g a) = (e g a)) (h5 : p f a) (h6 : p g a) (h7 : q f a) (h8 : q g a) : (term835 _144530 _144607 _144654 P y f a) = (term835 _144530 _144607 _144654 P y g a).
Proof. exact (EQ_MP (@lem8214869 _144530 _144607 _144654 P f y g a) (@lem8214866 _144529 _144530 _144607 _144645 _144654 P lt2 s z y pat e p f q g a h1 h2 h3 h4 h5 h6 h7 h8)). Qed.
Lemma lem8214873 (p : Prop) : (~ p) = (p -> False).
Proof. exact (EQ_MP (@lem21021 p) (@lem0)). Qed.
Lemma lem8214875 {_144530 _144607 _144654 P : Type'} (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (term839 _144530 _144607 _144654 P f y g a) = (term993 _144530 _144607 _144654 P f y g a).
Proof. exact (@lem8214873 ((term835 _144530 _144607 _144654 P y f a) = (term835 _144530 _144607 _144654 P y g a))). Qed.
Lemma lem8214878 {_144530 _144607 _144654 P : Type'} (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) (h1 : term839 _144530 _144607 _144654 P f y g a) : term993 _144530 _144607 _144654 P f y g a.
Proof. exact (EQ_MP (@lem8214875 _144530 _144607 _144654 P f y g a) (@lem8209472 _144530 _144607 _144654 P f y g a h1)). Qed.
Lemma lem8214881 {_144529 _144530 _144607 _144645 _144654 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : type518 _144530 _144607 P) (y : type564 _144530 _144607 _144654 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) (h2 : term685 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z y) (h3 : term839 _144530 _144607 _144654 P f y g a) (h4 : (pat f a) = (e f a)) (h5 : (pat g a) = (e g a)) (h6 : p f a) (h7 : p g a) (h8 : q f a) (h9 : q g a) : False.
Proof. exact (@lem8214878 _144530 _144607 _144654 P f y g a h3 (@lem8214870 _144529 _144530 _144607 _144645 _144654 P lt2 s z y pat e p f q g a h1 h2 h4 h5 h6 h7 h8 h9)). Qed.
Lemma lem8214882 {_144529 _144530 _144607 _144645 _144654 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : type518 _144530 _144607 P) (y : type564 _144530 _144607 _144654 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) (h2 : term685 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z y) (h3 : term839 _144530 _144607 _144654 P f y g a) (h4 : (pat f a) = (e f a)) (h5 : (pat g a) = (e g a)) (h6 : p f a) (h7 : p g a) (h8 : q f a) (h9 : q g a) : term59.
Proof. exact (fun h0 : ~ False => @lem8214881 _144529 _144530 _144607 _144645 _144654 P lt2 s z y pat e p f q g a h1 h2 h3 h4 h5 h6 h7 h8 h9). Qed.
Lemma lem8214884 (p : Prop) : (term57 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8214885 : term59 = False.
Proof. exact (@lem8214884 False). Qed.
Lemma lem8214886 {_144529 _144530 _144607 _144645 _144654 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : type518 _144530 _144607 P) (y : type564 _144530 _144607 _144654 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) (h2 : term685 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z y) (h3 : term839 _144530 _144607 _144654 P f y g a) (h4 : (pat f a) = (e f a)) (h5 : (pat g a) = (e g a)) (h6 : p f a) (h7 : p g a) (h8 : q f a) (h9 : q g a) : False.
Proof. exact (EQ_MP (@lem8214885) (@lem8214882 _144529 _144530 _144607 _144645 _144654 P lt2 s z y pat e p f q g a h1 h2 h3 h4 h5 h6 h7 h8 h9)). Qed.
Lemma lem8214887 {_144529 _144530 _144607 _144645 _144654 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : type518 _144530 _144607 P) (y : type564 _144530 _144607 _144654 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) (h2 : term685 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z y) (h3 : term839 _144530 _144607 _144654 P f y g a) (h4 : (pat f a) = (e f a)) (h5 : (pat g a) = (e g a)) (h6 : p f a) (h7 : p g a) (h8 : q f a) (h9 : q g a) : (term839 _144530 _144607 _144654 P f y g a) = False.
Proof. exact (prop_ext (fun h10 : term839 _144530 _144607 _144654 P f y g a => @lem8214886 _144529 _144530 _144607 _144645 _144654 P lt2 s z y pat e p f q g a h1 h2 h3 h4 h5 h6 h7 h8 h9) (fun h10 : False => @lem8209472 _144530 _144607 _144654 P f y g a h3)). Qed.
Lemma lem8214888 {_144529 _144530 _144607 _144645 _144654 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : type518 _144530 _144607 P) (y : type564 _144530 _144607 _144654 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) (h2 : term685 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z y) (h3 : term839 _144530 _144607 _144654 P f y g a) (h4 : (pat f a) = (e f a)) (h5 : (pat g a) = (e g a)) (h6 : p f a) (h7 : p g a) (h8 : q f a) (h9 : q g a) : False.
Proof. exact (EQ_MP (@lem8214887 _144529 _144530 _144607 _144645 _144654 P lt2 s z y pat e p f q g a h1 h2 h3 h4 h5 h6 h7 h8 h9) (@lem8209472 _144530 _144607 _144654 P f y g a h3)). Qed.
Lemma lem8214889 {_144529 _144530 _144607 _144645 _144654 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z'' : type518 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) (h2 : term685 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z'' t) (h3 : term839 _144530 _144607 _144654 P f t g a) (h4 : (pat f a) = (e f a)) (h5 : (pat g a) = (e g a)) (h6 : p f a) (h7 : p g a) (h8 : q f a) (h9 : q g a) : (term839 _144530 _144607 _144654 P f t g a) = False.
Proof. exact (prop_ext (fun h10 : term839 _144530 _144607 _144654 P f t g a => @lem8212367 _144529 _144530 _144607 _144645 _144654 P lt2 s z'' t pat e p f q g a h1 h2 h3 h4 h5 h6 h7 h8 h9) (fun h10 : False => @lem8209076 _144530 _144607 _144654 P f t g a h3)). Qed.
Lemma lem8214890 {_144529 _144530 _144607 _144645 _144654 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z'' : type518 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) (h2 : term685 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z'' t) (h3 : term839 _144530 _144607 _144654 P f t g a) (h4 : (pat f a) = (e f a)) (h5 : (pat g a) = (e g a)) (h6 : p f a) (h7 : p g a) (h8 : q f a) (h9 : q g a) : False.
Proof. exact (EQ_MP (@lem8214889 _144529 _144530 _144607 _144645 _144654 P lt2 s z'' t pat e p f q g a h1 h2 h3 h4 h5 h6 h7 h8 h9) (@lem8209076 _144530 _144607 _144654 P f t g a h3)). Qed.
Lemma lem8214891 {_144529 _144530 _144607 _144645 _144654 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : type518 _144530 _144607 P) (y : type564 _144530 _144607 _144654 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) (h2 : term685 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z y) (h3 : term839 _144530 _144607 _144654 P f y g a) (h4 : (pat f a) = (e f a)) (h5 : (pat g a) = (e g a)) (h6 : p f a) (h7 : p g a) (h8 : q f a) (h9 : q g a) : (term839 _144530 _144607 _144654 P f y g a) = False.
Proof. exact (prop_ext (fun h10 : term839 _144530 _144607 _144654 P f y g a => @lem8214888 _144529 _144530 _144607 _144645 _144654 P lt2 s z y pat e p f q g a h1 h2 h3 h4 h5 h6 h7 h8 h9) (fun h10 : False => @lem8208932 _144530 _144607 _144654 P f y g a h3)). Qed.
Lemma lem8214892 {_144529 _144530 _144607 _144645 _144654 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : type518 _144530 _144607 P) (y : type564 _144530 _144607 _144654 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) (h2 : term685 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z y) (h3 : term839 _144530 _144607 _144654 P f y g a) (h4 : (pat f a) = (e f a)) (h5 : (pat g a) = (e g a)) (h6 : p f a) (h7 : p g a) (h8 : q f a) (h9 : q g a) : False.
Proof. exact (EQ_MP (@lem8214891 _144529 _144530 _144607 _144645 _144654 P lt2 s z y pat e p f q g a h1 h2 h3 h4 h5 h6 h7 h8 h9) (@lem8208932 _144530 _144607 _144654 P f y g a h3)). Qed.
Lemma lem8214893 {_144529 _144530 _144607 _144645 _144654 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z'' : type518 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) (h2 : term685 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z'' t) (h3 : term839 _144530 _144607 _144654 P f t g a) (h4 : (pat f a) = (e f a)) (h5 : (pat g a) = (e g a)) (h6 : p f a) (h7 : p g a) (h8 : q f a) (h9 : q g a) : (term839 _144530 _144607 _144654 P f t g a) = False.
Proof. exact (prop_ext (fun h10 : term839 _144530 _144607 _144654 P f t g a => @lem8214890 _144529 _144530 _144607 _144645 _144654 P lt2 s z'' t pat e p f q g a h1 h2 h3 h4 h5 h6 h7 h8 h9) (fun h10 : False => @lem8208538 _144530 _144607 _144654 P f t g a h3)). Qed.
Lemma lem8214894 {_144529 _144530 _144607 _144645 _144654 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z'' : type518 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) (h2 : term685 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z'' t) (h3 : term839 _144530 _144607 _144654 P f t g a) (h4 : (pat f a) = (e f a)) (h5 : (pat g a) = (e g a)) (h6 : p f a) (h7 : p g a) (h8 : q f a) (h9 : q g a) : False.
Proof. exact (EQ_MP (@lem8214893 _144529 _144530 _144607 _144645 _144654 P lt2 s z'' t pat e p f q g a h1 h2 h3 h4 h5 h6 h7 h8 h9) (@lem8208538 _144530 _144607 _144654 P f t g a h3)). Qed.
Lemma lem8214895 {_144529 _144530 _144607 _144645 _144654 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : type518 _144530 _144607 P) (y : type564 _144530 _144607 _144654 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) (h2 : term685 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z y) (h3 : term839 _144530 _144607 _144654 P f y g a) (h4 : (pat f a) = (e f a)) (h5 : (pat g a) = (e g a)) (h6 : p f a) (h7 : p g a) (h8 : q f a) (h9 : q g a) : (term839 _144530 _144607 _144654 P f y g a) = False.
Proof. exact (prop_ext (fun h10 : term839 _144530 _144607 _144654 P f y g a => @lem8214892 _144529 _144530 _144607 _144645 _144654 P lt2 s z y pat e p f q g a h1 h2 h3 h4 h5 h6 h7 h8 h9) (fun h10 : False => @lem8208932 _144530 _144607 _144654 P f y g a h3)). Qed.
Lemma lem8214896 {_144529 _144530 _144607 _144645 _144654 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : type518 _144530 _144607 P) (y : type564 _144530 _144607 _144654 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) (h2 : term685 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z y) (h3 : term839 _144530 _144607 _144654 P f y g a) (h4 : (pat f a) = (e f a)) (h5 : (pat g a) = (e g a)) (h6 : p f a) (h7 : p g a) (h8 : q f a) (h9 : q g a) : False.
Proof. exact (EQ_MP (@lem8214895 _144529 _144530 _144607 _144645 _144654 P lt2 s z y pat e p f q g a h1 h2 h3 h4 h5 h6 h7 h8 h9) (@lem8208932 _144530 _144607 _144654 P f y g a h3)). Qed.
Lemma lem8214897 {_144529 _144530 _144607 _144645 _144654 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z'' : type518 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) (h2 : term685 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z'' t) (h3 : term839 _144530 _144607 _144654 P f t g a) (h4 : (pat f a) = (e f a)) (h5 : (pat g a) = (e g a)) (h6 : p f a) (h7 : p g a) (h8 : q f a) (h9 : q g a) : (term839 _144530 _144607 _144654 P f t g a) = False.
Proof. exact (prop_ext (fun h10 : term839 _144530 _144607 _144654 P f t g a => @lem8214894 _144529 _144530 _144607 _144645 _144654 P lt2 s z'' t pat e p f q g a h1 h2 h3 h4 h5 h6 h7 h8 h9) (fun h10 : False => @lem8208538 _144530 _144607 _144654 P f t g a h3)). Qed.
Lemma lem8214898 {_144529 _144530 _144607 _144645 _144654 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z'' : type518 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) (h2 : term685 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z'' t) (h3 : term839 _144530 _144607 _144654 P f t g a) (h4 : (pat f a) = (e f a)) (h5 : (pat g a) = (e g a)) (h6 : p f a) (h7 : p g a) (h8 : q f a) (h9 : q g a) : False.
Proof. exact (EQ_MP (@lem8214897 _144529 _144530 _144607 _144645 _144654 P lt2 s z'' t pat e p f q g a h1 h2 h3 h4 h5 h6 h7 h8 h9) (@lem8208538 _144530 _144607 _144654 P f t g a h3)). Qed.
Lemma lem8214899 {_144529 _144530 _144607 _144645 _144654 P : Type'} (z : type518 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z'' : type518 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) (h2 : term685 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z y) (h3 : term685 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z'' t) (h4 : term326 _144530 _144607 _144654 P t f y g a) (h5 : (pat f a) = (e f a)) (h6 : (pat g a) = (e g a)) (h7 : p f a) (h8 : p g a) (h9 : q f a) (h10 : q g a) : False.
Proof. exact (or_elim (@lem8206673 _144530 _144607 _144654 P t f y g a h4) (fun h0 : term839 _144530 _144607 _144654 P f t g a => @lem8214898 _144529 _144530 _144607 _144645 _144654 P lt2 s z'' t pat e p f q g a h1 h3 h0 h5 h6 h7 h8 h9 h10) (fun h0 : term839 _144530 _144607 _144654 P f y g a => @lem8214896 _144529 _144530 _144607 _144645 _144654 P lt2 s z y pat e p f q g a h1 h2 h0 h5 h6 h7 h8 h9 h10)). Qed.
Lemma lem8214900 {_144529 _144530 _144607 _144645 _144654 P : Type'} (z : type518 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z'' : type518 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) (h2 : term141 _144529 _144530 _144607 _144645 P p lt2 s pat) (h3 : term685 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z y) (h4 : term685 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z'' t) (h5 : term326 _144530 _144607 _144654 P t f y g a) (h6 : (pat f a) = (e f a)) (h7 : (pat g a) = (e g a)) (h8 : p f a) (h9 : p g a) (h10 : q f a) (h11 : q g a) : False.
Proof. exact (ex_elim (@lem8204897 _144529 _144530 _144607 _144645 P p lt2 s pat h2) (fun z'''' : type518 _144530 _144607 P => fun h0 : term555 _144529 _144530 _144607 _144645 P p lt2 s pat z'''' => @lem8214899 _144529 _144530 _144607 _144645 _144654 P z lt2 s z'' t y pat e p f q g a h1 h3 h4 h5 h6 h7 h8 h9 h10 h11)). Qed.
Lemma lem8214901 {_144529 _144530 _144607 _144645 _144654 P : Type'} (z : type518 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z'' : type518 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) (h2 : term141 _144529 _144530 _144607 _144645 P p lt2 s e) (h3 : term141 _144529 _144530 _144607 _144645 P p lt2 s pat) (h4 : term685 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z y) (h5 : term685 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z'' t) (h6 : term326 _144530 _144607 _144654 P t f y g a) (h7 : (pat f a) = (e f a)) (h8 : (pat g a) = (e g a)) (h9 : p f a) (h10 : p g a) (h11 : q f a) (h12 : q g a) : False.
Proof. exact (ex_elim (@lem8205223 _144529 _144530 _144607 _144645 P p lt2 s e h2) (fun z''' : type518 _144530 _144607 P => fun h0 : term555 _144529 _144530 _144607 _144645 P p lt2 s e z''' => @lem8214900 _144529 _144530 _144607 _144645 _144654 P z lt2 s z'' t y pat e p f q g a h1 h3 h4 h5 h6 h7 h8 h9 h10 h11 h12)). Qed.
Lemma lem8214902 {_144529 _144530 _144607 _144645 _144654 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : type518 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) (h2 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) (h3 : term141 _144529 _144530 _144607 _144645 P p lt2 s e) (h4 : term141 _144529 _144530 _144607 _144645 P p lt2 s pat) (h5 : term685 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z y) (h6 : term326 _144530 _144607 _144654 P t f y g a) (h7 : (pat f a) = (e f a)) (h8 : (pat g a) = (e g a)) (h9 : p f a) (h10 : p g a) (h11 : q f a) (h12 : q g a) : False.
Proof. exact (ex_elim (@lem8205573 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t h2) (fun z'' : type518 _144530 _144607 P => fun h0 : term687 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t z'' => @lem8214901 _144529 _144530 _144607 _144645 _144654 P z lt2 s z'' t y pat e p f q g a h1 h3 h4 h5 h0 h6 h7 h8 h9 h10 h11 h12)). Qed.
Lemma lem8214903 {_144529 _144530 _144607 _144645 _144654 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (z : type518 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) (h2 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) (h3 : term224 _144529 _144530 _144607 _144645 P p pat e lt2 s q) (h4 : term141 _144529 _144530 _144607 _144645 P p lt2 s e) (h5 : term141 _144529 _144530 _144607 _144645 P p lt2 s pat) (h6 : term685 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s z y) (h7 : term326 _144530 _144607 _144654 P t f y g a) (h8 : (pat f a) = (e f a)) (h9 : (pat g a) = (e g a)) (h10 : p f a) (h11 : p g a) (h12 : q f a) (h13 : q g a) : False.
Proof. exact (ex_elim (@lem8205925 _144529 _144530 _144607 _144645 P p pat e lt2 s q h3) (fun z' : type518 _144530 _144607 P => fun h0 : term816 _144529 _144530 _144607 _144645 P p pat e lt2 s q z' => @lem8214902 _144529 _144530 _144607 _144645 _144654 P lt2 s z t y pat e p f q g a h1 h2 h4 h5 h6 h7 h8 h9 h10 h11 h12 h13)). Qed.
Lemma lem8214904 {_144529 _144530 _144607 _144645 _144654 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) (h2 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) (h3 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y) (h4 : term224 _144529 _144530 _144607 _144645 P p pat e lt2 s q) (h5 : term141 _144529 _144530 _144607 _144645 P p lt2 s e) (h6 : term141 _144529 _144530 _144607 _144645 P p lt2 s pat) (h7 : term326 _144530 _144607 _144654 P t f y g a) (h8 : (pat f a) = (e f a)) (h9 : (pat g a) = (e g a)) (h10 : p f a) (h11 : p g a) (h12 : q f a) (h13 : q g a) : False.
Proof. exact (ex_elim (@lem8206275 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y h3) (fun z : type518 _144530 _144607 P => fun h0 : term687 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y z => @lem8214903 _144529 _144530 _144607 _144645 _144654 P lt2 s z t y pat e p f q g a h1 h2 h4 h5 h6 h0 h7 h8 h9 h10 h11 h12 h13)). Qed.
Lemma lem8214905 {_144529 _144530 _144607 _144645 _144654 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) (h2 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) (h3 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y) (h4 : term224 _144529 _144530 _144607 _144645 P p pat e lt2 s q) (h5 : term141 _144529 _144530 _144607 _144645 P p lt2 s e) (h6 : term141 _144529 _144530 _144607 _144645 P p lt2 s pat) (h7 : term326 _144530 _144607 _144654 P t f y g a) (h8 : (pat f a) = (e f a)) (h9 : (pat g a) = (e g a)) (h10 : p f a) (h11 : p g a) (h12 : q f a) (h13 : q g a) : (q g a) = False.
Proof. exact (prop_ext (fun h14 : q g a => @lem8214904 _144529 _144530 _144607 _144645 _144654 P lt2 s t y pat e p f q g a h1 h2 h3 h4 h5 h6 h7 h8 h9 h10 h11 h12 h13) (fun h14 : False => @lem8206374 _144530 _144607 P q g a h13)). Qed.
Lemma lem8214906 {_144529 _144530 _144607 _144645 _144654 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) (h2 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) (h3 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y) (h4 : term224 _144529 _144530 _144607 _144645 P p pat e lt2 s q) (h5 : term141 _144529 _144530 _144607 _144645 P p lt2 s e) (h6 : term141 _144529 _144530 _144607 _144645 P p lt2 s pat) (h7 : term326 _144530 _144607 _144654 P t f y g a) (h8 : (pat f a) = (e f a)) (h9 : (pat g a) = (e g a)) (h10 : p f a) (h11 : p g a) (h12 : q f a) (h13 : q g a) : False.
Proof. exact (EQ_MP (@lem8214905 _144529 _144530 _144607 _144645 _144654 P lt2 s t y pat e p f q g a h1 h2 h3 h4 h5 h6 h7 h8 h9 h10 h11 h12 h13) (@lem8206374 _144530 _144607 P q g a h13)). Qed.
Lemma lem8214907 {_144529 _144530 _144607 _144645 _144654 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) (h2 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) (h3 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y) (h4 : term224 _144529 _144530 _144607 _144645 P p pat e lt2 s q) (h5 : term141 _144529 _144530 _144607 _144645 P p lt2 s e) (h6 : term141 _144529 _144530 _144607 _144645 P p lt2 s pat) (h7 : term326 _144530 _144607 _144654 P t f y g a) (h8 : (pat f a) = (e f a)) (h9 : (pat g a) = (e g a)) (h10 : p f a) (h11 : p g a) (h12 : q f a) (h13 : q g a) : (q f a) = False.
Proof. exact (prop_ext (fun h14 : q f a => @lem8214906 _144529 _144530 _144607 _144645 _144654 P lt2 s t y pat e p f q g a h1 h2 h3 h4 h5 h6 h7 h8 h9 h10 h11 h12 h13) (fun h14 : False => @lem8206368 _144530 _144607 P q f a h12)). Qed.
Lemma lem8214908 {_144529 _144530 _144607 _144645 _144654 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) (h2 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) (h3 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y) (h4 : term224 _144529 _144530 _144607 _144645 P p pat e lt2 s q) (h5 : term141 _144529 _144530 _144607 _144645 P p lt2 s e) (h6 : term141 _144529 _144530 _144607 _144645 P p lt2 s pat) (h7 : term326 _144530 _144607 _144654 P t f y g a) (h8 : (pat f a) = (e f a)) (h9 : (pat g a) = (e g a)) (h10 : p f a) (h11 : p g a) (h12 : q f a) (h13 : q g a) : False.
Proof. exact (EQ_MP (@lem8214907 _144529 _144530 _144607 _144645 _144654 P lt2 s t y pat e p f q g a h1 h2 h3 h4 h5 h6 h7 h8 h9 h10 h11 h12 h13) (@lem8206368 _144530 _144607 P q f a h12)). Qed.
Lemma lem8214909 {_144529 _144530 _144607 _144645 _144654 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) (h2 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) (h3 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y) (h4 : term224 _144529 _144530 _144607 _144645 P p pat e lt2 s q) (h5 : term141 _144529 _144530 _144607 _144645 P p lt2 s e) (h6 : term141 _144529 _144530 _144607 _144645 P p lt2 s pat) (h7 : term326 _144530 _144607 _144654 P t f y g a) (h8 : (pat f a) = (e f a)) (h9 : (pat g a) = (e g a)) (h10 : p f a) (h11 : p g a) (h12 : q f a) (h13 : q g a) : ((pat g a) = (e g a)) = False.
Proof. exact (prop_ext (fun h14 : (pat g a) = (e g a) => @lem8214908 _144529 _144530 _144607 _144645 _144654 P lt2 s t y pat e p f q g a h1 h2 h3 h4 h5 h6 h7 h8 h9 h10 h11 h12 h13) (fun h14 : False => @lem8206362 _144530 _144607 _144645 P pat e g a h9)). Qed.
Lemma lem8214910 {_144529 _144530 _144607 _144645 _144654 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) (h2 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) (h3 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y) (h4 : term224 _144529 _144530 _144607 _144645 P p pat e lt2 s q) (h5 : term141 _144529 _144530 _144607 _144645 P p lt2 s e) (h6 : term141 _144529 _144530 _144607 _144645 P p lt2 s pat) (h7 : term326 _144530 _144607 _144654 P t f y g a) (h8 : (pat f a) = (e f a)) (h9 : (pat g a) = (e g a)) (h10 : p f a) (h11 : p g a) (h12 : q f a) (h13 : q g a) : False.
Proof. exact (EQ_MP (@lem8214909 _144529 _144530 _144607 _144645 _144654 P lt2 s t y pat e p f q g a h1 h2 h3 h4 h5 h6 h7 h8 h9 h10 h11 h12 h13) (@lem8206362 _144530 _144607 _144645 P pat e g a h9)). Qed.
Lemma lem8214911 {_144529 _144530 _144607 _144645 _144654 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) (h2 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) (h3 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y) (h4 : term224 _144529 _144530 _144607 _144645 P p pat e lt2 s q) (h5 : term141 _144529 _144530 _144607 _144645 P p lt2 s e) (h6 : term141 _144529 _144530 _144607 _144645 P p lt2 s pat) (h7 : term326 _144530 _144607 _144654 P t f y g a) (h8 : (pat f a) = (e f a)) (h9 : (pat g a) = (e g a)) (h10 : p f a) (h11 : p g a) (h12 : q f a) (h13 : q g a) : ((pat f a) = (e f a)) = False.
Proof. exact (prop_ext (fun h14 : (pat f a) = (e f a) => @lem8214910 _144529 _144530 _144607 _144645 _144654 P lt2 s t y pat e p f q g a h1 h2 h3 h4 h5 h6 h7 h8 h9 h10 h11 h12 h13) (fun h14 : False => @lem8206356 _144530 _144607 _144645 P pat e f a h8)). Qed.
Lemma lem8214912 {_144529 _144530 _144607 _144645 _144654 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) (h2 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) (h3 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y) (h4 : term224 _144529 _144530 _144607 _144645 P p pat e lt2 s q) (h5 : term141 _144529 _144530 _144607 _144645 P p lt2 s e) (h6 : term141 _144529 _144530 _144607 _144645 P p lt2 s pat) (h7 : term326 _144530 _144607 _144654 P t f y g a) (h8 : (pat f a) = (e f a)) (h9 : (pat g a) = (e g a)) (h10 : p f a) (h11 : p g a) (h12 : q f a) (h13 : q g a) : False.
Proof. exact (EQ_MP (@lem8214911 _144529 _144530 _144607 _144645 _144654 P lt2 s t y pat e p f q g a h1 h2 h3 h4 h5 h6 h7 h8 h9 h10 h11 h12 h13) (@lem8206356 _144530 _144607 _144645 P pat e f a h8)). Qed.
Lemma lem8214913 {_144529 _144530 _144607 _144645 _144654 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) (h2 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) (h3 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y) (h4 : term224 _144529 _144530 _144607 _144645 P p pat e lt2 s q) (h5 : term141 _144529 _144530 _144607 _144645 P p lt2 s e) (h6 : term141 _144529 _144530 _144607 _144645 P p lt2 s pat) (h7 : term326 _144530 _144607 _144654 P t f y g a) (h8 : (pat f a) = (e f a)) (h9 : (pat g a) = (e g a)) (h10 : p f a) (h11 : p g a) (h12 : q f a) (h13 : q g a) : (p g a) = False.
Proof. exact (prop_ext (fun h14 : p g a => @lem8214912 _144529 _144530 _144607 _144645 _144654 P lt2 s t y pat e p f q g a h1 h2 h3 h4 h5 h6 h7 h8 h9 h10 h11 h12 h13) (fun h14 : False => @lem8206287 _144530 _144607 P p g a h11)). Qed.
Lemma lem8214914 {_144529 _144530 _144607 _144645 _144654 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) (h2 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) (h3 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y) (h4 : term224 _144529 _144530 _144607 _144645 P p pat e lt2 s q) (h5 : term141 _144529 _144530 _144607 _144645 P p lt2 s e) (h6 : term141 _144529 _144530 _144607 _144645 P p lt2 s pat) (h7 : term326 _144530 _144607 _144654 P t f y g a) (h8 : (pat f a) = (e f a)) (h9 : (pat g a) = (e g a)) (h10 : p f a) (h11 : p g a) (h12 : q f a) (h13 : q g a) : False.
Proof. exact (EQ_MP (@lem8214913 _144529 _144530 _144607 _144645 _144654 P lt2 s t y pat e p f q g a h1 h2 h3 h4 h5 h6 h7 h8 h9 h10 h11 h12 h13) (@lem8206287 _144530 _144607 P p g a h11)). Qed.
Lemma lem8214915 {_144529 _144530 _144607 _144645 _144654 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) (h2 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) (h3 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y) (h4 : term224 _144529 _144530 _144607 _144645 P p pat e lt2 s q) (h5 : term141 _144529 _144530 _144607 _144645 P p lt2 s e) (h6 : term141 _144529 _144530 _144607 _144645 P p lt2 s pat) (h7 : term326 _144530 _144607 _144654 P t f y g a) (h8 : (pat f a) = (e f a)) (h9 : (pat g a) = (e g a)) (h10 : p f a) (h11 : p g a) (h12 : q f a) (h13 : q g a) : (p f a) = False.
Proof. exact (prop_ext (fun h14 : p f a => @lem8214914 _144529 _144530 _144607 _144645 _144654 P lt2 s t y pat e p f q g a h1 h2 h3 h4 h5 h6 h7 h8 h9 h10 h11 h12 h13) (fun h14 : False => @lem8206281 _144530 _144607 P p f a h10)). Qed.
Lemma lem8214916 {_144529 _144530 _144607 _144645 _144654 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) (h2 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) (h3 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y) (h4 : term224 _144529 _144530 _144607 _144645 P p pat e lt2 s q) (h5 : term141 _144529 _144530 _144607 _144645 P p lt2 s e) (h6 : term141 _144529 _144530 _144607 _144645 P p lt2 s pat) (h7 : term326 _144530 _144607 _144654 P t f y g a) (h8 : (pat f a) = (e f a)) (h9 : (pat g a) = (e g a)) (h10 : p f a) (h11 : p g a) (h12 : q f a) (h13 : q g a) : False.
Proof. exact (EQ_MP (@lem8214915 _144529 _144530 _144607 _144645 _144654 P lt2 s t y pat e p f q g a h1 h2 h3 h4 h5 h6 h7 h8 h9 h10 h11 h12 h13) (@lem8206281 _144530 _144607 P p f a h10)). Qed.
Lemma lem8214917 {_144529 _144530 _144607 _144645 _144654 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) (h2 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) (h3 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y) (h4 : term224 _144529 _144530 _144607 _144645 P p pat e lt2 s q) (h5 : term141 _144529 _144530 _144607 _144645 P p lt2 s e) (h6 : term141 _144529 _144530 _144607 _144645 P p lt2 s pat) (h7 : term326 _144530 _144607 _144654 P t f y g a) (h8 : (pat f a) = (e f a)) (h9 : (pat g a) = (e g a)) (h10 : p f a) (h11 : p g a) (h12 : q f a) (h13 : q g a) : (term326 _144530 _144607 _144654 P t f y g a) = False.
Proof. exact (prop_ext (fun h14 : term326 _144530 _144607 _144654 P t f y g a => @lem8214916 _144529 _144530 _144607 _144645 _144654 P lt2 s t y pat e p f q g a h1 h2 h3 h4 h5 h6 h7 h8 h9 h10 h11 h12 h13) (fun h14 : False => @lem8204571 _144530 _144607 _144654 P t f y g a h7)). Qed.
Lemma lem8214918 {_144529 _144530 _144607 _144645 _144654 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) (h2 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) (h3 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y) (h4 : term224 _144529 _144530 _144607 _144645 P p pat e lt2 s q) (h5 : term141 _144529 _144530 _144607 _144645 P p lt2 s e) (h6 : term141 _144529 _144530 _144607 _144645 P p lt2 s pat) (h7 : term326 _144530 _144607 _144654 P t f y g a) (h8 : (pat f a) = (e f a)) (h9 : (pat g a) = (e g a)) (h10 : p f a) (h11 : p g a) (h12 : q f a) (h13 : q g a) : False.
Proof. exact (EQ_MP (@lem8214917 _144529 _144530 _144607 _144645 _144654 P lt2 s t y pat e p f q g a h1 h2 h3 h4 h5 h6 h7 h8 h9 h10 h11 h12 h13) (@lem8204571 _144530 _144607 _144654 P t f y g a h7)). Qed.
Lemma lem8214919 {_144529 _144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) (h2 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) (h3 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y) (h4 : term224 _144529 _144530 _144607 _144645 P p pat e lt2 s q) (h5 : term141 _144529 _144530 _144607 _144645 P p lt2 s e) (h6 : term141 _144529 _144530 _144607 _144645 P p lt2 s pat) (h7 : (pat f a) = (e f a)) (h8 : (pat g a) = (e g a)) (h9 : p f a) (h10 : p g a) (h11 : q f a) (h12 : q g a) : term325 _144530 _144607 _144654 P t f y g a.
Proof. exact (fun h0 : term326 _144530 _144607 _144654 P t f y g a => @lem8214918 _144529 _144530 _144607 _144645 _144654 P lt2 s t y pat e p f q g a h1 h2 h3 h4 h5 h6 h0 h7 h8 h9 h10 h11 h12). Qed.
Lemma lem8214920 {_144529 _144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) (h2 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) (h3 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y) (h4 : term224 _144529 _144530 _144607 _144645 P p pat e lt2 s q) (h5 : term141 _144529 _144530 _144607 _144645 P p lt2 s e) (h6 : term141 _144529 _144530 _144607 _144645 P p lt2 s pat) (h7 : (pat f a) = (e f a)) (h8 : (pat g a) = (e g a)) (h9 : p f a) (h10 : p g a) (h11 : q f a) (h12 : q g a) : term324 _144530 _144607 _144654 P t f y g a.
Proof. exact (EQ_MP (@lem8204570 _144530 _144607 _144654 P t f y g a) (@lem8214919 _144529 _144530 _144607 _144645 _144654 P t y lt2 s pat e p f q g a h1 h2 h3 h4 h5 h6 h7 h8 h9 h10 h11 h12)). Qed.
Lemma lem8214921 {_144529 _144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (q : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) (h2 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) (h3 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y) (h4 : term224 _144529 _144530 _144607 _144645 P p pat e lt2 s q) (h5 : term141 _144529 _144530 _144607 _144645 P p lt2 s e) (h6 : term141 _144529 _144530 _144607 _144645 P p lt2 s pat) (h7 : (pat f a) = (e f a)) (h8 : (pat g a) = (e g a)) (h9 : p f a) (h10 : p g a) (h11 : q f a) : term1421 _144530 _144607 _144654 P q t f y g a.
Proof. exact (fun h0 : q g a => @lem8214920 _144529 _144530 _144607 _144645 _144654 P t y lt2 s pat e p f q g a h1 h2 h3 h4 h5 h6 h7 h8 h9 h10 h11 h0). Qed.
Lemma lem8214922 {_144529 _144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) (h2 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) (h3 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y) (h4 : term224 _144529 _144530 _144607 _144645 P p pat e lt2 s q) (h5 : term141 _144529 _144530 _144607 _144645 P p lt2 s e) (h6 : term141 _144529 _144530 _144607 _144645 P p lt2 s pat) (h7 : (pat f a) = (e f a)) (h8 : (pat g a) = (e g a)) (h9 : p f a) (h10 : p g a) : term1423 _144530 _144607 _144654 P q t f y g a.
Proof. exact (fun h0 : q f a => @lem8214921 _144529 _144530 _144607 _144645 _144654 P t y lt2 s pat e p g q f a h1 h2 h3 h4 h5 h6 h7 h8 h9 h10 h0). Qed.
Lemma lem8214923 {_144529 _144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) (h2 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) (h3 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y) (h4 : term224 _144529 _144530 _144607 _144645 P p pat e lt2 s q) (h5 : term141 _144529 _144530 _144607 _144645 P p lt2 s e) (h6 : term141 _144529 _144530 _144607 _144645 P p lt2 s pat) (h7 : (pat f a) = (e f a)) (h8 : p f a) (h9 : p g a) : term1425 _144530 _144607 _144645 _144654 P pat e q t f y g a.
Proof. exact (fun h0 : (pat g a) = (e g a) => @lem8214922 _144529 _144530 _144607 _144645 _144654 P t y q lt2 s pat e f p g a h1 h2 h3 h4 h5 h6 h7 h0 h8 h9). Qed.
Lemma lem8214924 {_144529 _144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (q : type560 _144530 _144607 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) (h2 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) (h3 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y) (h4 : term224 _144529 _144530 _144607 _144645 P p pat e lt2 s q) (h5 : term141 _144529 _144530 _144607 _144645 P p lt2 s e) (h6 : term141 _144529 _144530 _144607 _144645 P p lt2 s pat) (h7 : p f a) (h8 : p g a) : term1427 _144530 _144607 _144645 _144654 P pat e q t f y g a.
Proof. exact (fun h0 : (pat f a) = (e f a) => @lem8214923 _144529 _144530 _144607 _144645 _144654 P t y q lt2 s pat e f p g a h1 h2 h3 h4 h5 h6 h0 h7 h8). Qed.
Lemma lem8214925 {_144529 _144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (q : type560 _144530 _144607 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) (h2 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y) (h3 : term224 _144529 _144530 _144607 _144645 P p pat e lt2 s q) (h4 : term141 _144529 _144530 _144607 _144645 P p lt2 s e) (h5 : term141 _144529 _144530 _144607 _144645 P p lt2 s pat) (h6 : p f a) (h7 : p g a) : term1429 _144529 _144530 _144607 _144645 _144654 P lt2 s pat e q t f y g a.
Proof. exact (fun h0 : term165 _144529 _144530 _144607 P lt2 s a f g => @lem8214924 _144529 _144530 _144607 _144645 _144654 P t y q e lt2 s pat f p g a h0 h1 h2 h3 h4 h5 h6 h7). Qed.
Lemma lem8214926 {_144529 _144530 _144607 _144645 _144654 P : Type'} (g : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (q : type560 _144530 _144607 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) (h1 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) (h2 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y) (h3 : term224 _144529 _144530 _144607 _144645 P p pat e lt2 s q) (h4 : term141 _144529 _144530 _144607 _144645 P p lt2 s e) (h5 : term141 _144529 _144530 _144607 _144645 P p lt2 s pat) (h6 : p f a) : term1431 _144529 _144530 _144607 _144645 _144654 P p lt2 s pat e q t f y g a.
Proof. exact (fun h0 : p g a => @lem8214925 _144529 _144530 _144607 _144645 _144654 P t y q e lt2 s pat f p g a h1 h2 h3 h4 h5 h6 h0). Qed.
Lemma lem8214927 {_144529 _144530 _144607 _144645 _144654 P : Type'} (f : _144530 -> _144607) (g : _144530 -> _144607) (a : P) (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (q : type560 _144530 _144607 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (h1 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) (h2 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y) (h3 : term224 _144529 _144530 _144607 _144645 P p pat e lt2 s q) (h4 : term141 _144529 _144530 _144607 _144645 P p lt2 s e) (h5 : term141 _144529 _144530 _144607 _144645 P p lt2 s pat) : term1433 _144529 _144530 _144607 _144645 _144654 P p lt2 s pat e q t f y g a.
Proof. exact (fun h0 : p f a => @lem8214926 _144529 _144530 _144607 _144645 _144654 P g t y q e lt2 s pat p f a h1 h2 h3 h4 h5 h0). Qed.
Lemma lem8214928 {_144529 _144530 _144607 _144645 _144654 P : Type'} (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) (t : type564 _144530 _144607 _144654 P) (q : type560 _144530 _144607 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (h1 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) (h2 : term224 _144529 _144530 _144607 _144645 P p pat e lt2 s q) (h3 : term141 _144529 _144530 _144607 _144645 P p lt2 s e) (h4 : term141 _144529 _144530 _144607 _144645 P p lt2 s pat) : term1435 _144529 _144530 _144607 _144645 _144654 P p lt2 s pat e q t f y g a.
Proof. exact (fun h0 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y => @lem8214927 _144529 _144530 _144607 _144645 _144654 P f g a t y q e p lt2 s pat h1 h0 h2 h3 h4). Qed.
Lemma lem8214929 {_144529 _144530 _144607 _144645 _144654 P : Type'} (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) (q : type560 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (h1 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) (h2 : term141 _144529 _144530 _144607 _144645 P p lt2 s e) (h3 : term141 _144529 _144530 _144607 _144645 P p lt2 s pat) : term1437 _144529 _144530 _144607 _144645 _144654 P p lt2 s pat e q t f y g a.
Proof. exact (fun h0 : term224 _144529 _144530 _144607 _144645 P p pat e lt2 s q => @lem8214928 _144529 _144530 _144607 _144645 _144654 P f y g a t q e p lt2 s pat h1 h0 h2 h3). Qed.
Lemma lem8214930 {_144529 _144530 _144607 _144645 _144654 P : Type'} (q : type560 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (h1 : term141 _144529 _144530 _144607 _144645 P p lt2 s e) (h2 : term141 _144529 _144530 _144607 _144645 P p lt2 s pat) : term1439 _144529 _144530 _144607 _144645 _144654 P p lt2 s pat e q t f y g a.
Proof. exact (fun h0 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t => @lem8214929 _144529 _144530 _144607 _144645 _144654 P f y g a q t e p lt2 s pat h0 h1 h2). Qed.
Lemma lem8214931 {_144529 _144530 _144607 _144645 _144654 P : Type'} (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (h1 : term141 _144529 _144530 _144607 _144645 P p lt2 s pat) : term1441 _144529 _144530 _144607 _144645 _144654 P p lt2 s pat e q t f y g a.
Proof. exact (fun h0 : term141 _144529 _144530 _144607 _144645 P p lt2 s e => @lem8214930 _144529 _144530 _144607 _144645 _144654 P q t f y g a e p lt2 s pat h0 h1). Qed.
Lemma lem8214932 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : term1442 _144529 _144530 _144607 _144645 _144654 P p lt2 s pat e q t f y g a.
Proof. exact (fun h0 : term141 _144529 _144530 _144607 _144645 P p lt2 s pat => @lem8214931 _144529 _144530 _144607 _144645 _144654 P e q t f y g a p lt2 s pat h0). Qed.
Lemma lem8214937 {_144529 _144530 _144607 _144645 _144654 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : term1446 _144529 _144530 _144607 _144645 _144654 P lt2 s pat e q t f y g a.
Proof. exact (fun p : type560 _144530 _144607 P => @lem8214932 _144529 _144530 _144607 _144645 _144654 P p lt2 s pat e q t f y g a). Qed.
Lemma lem8214942 {_144529 _144530 _144607 _144645 _144654 P : Type'} (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : term1450 _144529 _144530 _144607 _144645 _144654 P s pat e q t f y g a.
Proof. exact (fun lt2 : type1470 _144529 _144530 => @lem8214937 _144529 _144530 _144607 _144645 _144654 P lt2 s pat e q t f y g a). Qed.
Lemma lem8214947 {_144529 _144530 _144607 _144645 _144654 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : term1454 _144529 _144530 _144607 _144645 _144654 P pat e q t f y g a.
Proof. exact (fun s : P -> _144529 => @lem8214942 _144529 _144530 _144607 _144645 _144654 P s pat e q t f y g a). Qed.
Lemma lem8214952 {_144529 _144530 _144607 _144645 _144654 P : Type'} (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : term1458 _144529 _144530 _144607 _144645 _144654 P e q t f y g a.
Proof. exact (fun pat : type564 _144530 _144607 _144645 P => @lem8214947 _144529 _144530 _144607 _144645 _144654 P pat e q t f y g a). Qed.
Lemma lem8214957 {_144529 _144530 _144607 _144645 _144654 P : Type'} (q : type560 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : term1462 _144529 _144530 _144607 _144645 _144654 P q t f y g a.
Proof. exact (fun e : type564 _144530 _144607 _144645 P => @lem8214952 _144529 _144530 _144607 _144645 _144654 P e q t f y g a). Qed.
Lemma lem8214962 {_144529 _144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : term1466 _144529 _144530 _144607 _144645 _144654 P t f y g a.
Proof. exact (fun q : type560 _144530 _144607 P => @lem8214957 _144529 _144530 _144607 _144645 _144654 P q t f y g a). Qed.
Lemma lem8214967 {_144529 _144530 _144607 _144645 _144654 P : Type'} (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : term1470 _144529 _144530 _144607 _144645 _144654 P f y g a.
Proof. exact (fun t : type564 _144530 _144607 _144654 P => @lem8214962 _144529 _144530 _144607 _144645 _144654 P t f y g a). Qed.
Lemma lem8214972 {_144529 _144530 _144607 _144645 _144654 P : Type'} (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : term1474 _144529 _144530 _144607 _144645 _144654 P y g a.
Proof. exact (fun f : _144530 -> _144607 => @lem8214967 _144529 _144530 _144607 _144645 _144654 P f y g a). Qed.
Lemma lem8214977 {_144529 _144530 _144607 _144645 _144654 P : Type'} (g : _144530 -> _144607) (a : P) : term1478 _144529 _144530 _144607 _144645 _144654 P g a.
Proof. exact (fun y : type564 _144530 _144607 _144654 P => @lem8214972 _144529 _144530 _144607 _144645 _144654 P y g a). Qed.
Lemma lem8214982 {_144529 _144530 _144607 _144645 _144654 P : Type'} (a : P) : term1482 _144529 _144530 _144607 _144645 _144654 P a.
Proof. exact (fun g : _144530 -> _144607 => @lem8214977 _144529 _144530 _144607 _144645 _144654 P g a). Qed.
Lemma lem8214987 {_144529 _144530 _144607 _144645 _144654 P : Type'} : term1486 _144529 _144530 _144607 _144645 _144654 P.
Proof. exact (fun a : P => @lem8214982 _144529 _144530 _144607 _144645 _144654 P a). Qed.
Lemma lem8214988 {_144529 _144530 _144607 _144645 _144654 P : Type'} : term1485 _144529 _144530 _144607 _144645 _144654 P.
Proof. exact (EQ_MP (@lem8204554 _144529 _144530 _144607 _144645 _144654 P) (@lem8214987 _144529 _144530 _144607 _144645 _144654 P)). Qed.
Lemma lem8214989 {_144529 _144530 _144607 _144645 _144654 P : Type'} (a : P) : term1693 _144529 _144530 _144607 _144645 _144654 P a.
Proof. exact (@lem8214988 _144529 _144530 _144607 _144645 _144654 P a). Qed.
Lemma lem8214990 {_144529 _144530 _144607 _144645 _144654 P : Type'} (a : P) : (term1693 _144529 _144530 _144607 _144645 _144654 P a) = (term1481 _144529 _144530 _144607 _144645 _144654 P a).
Proof. exact (eq_refl (term1693 _144529 _144530 _144607 _144645 _144654 P a)). Qed.
Lemma lem8214991 {_144529 _144530 _144607 _144645 _144654 P : Type'} (a : P) : term1481 _144529 _144530 _144607 _144645 _144654 P a.
Proof. exact (EQ_MP (@lem8214990 _144529 _144530 _144607 _144645 _144654 P a) (@lem8214989 _144529 _144530 _144607 _144645 _144654 P a)). Qed.
Lemma lem8214992 {_144529 _144530 _144607 _144645 _144654 P : Type'} (a : P) (g : _144530 -> _144607) : term1694 _144529 _144530 _144607 _144645 _144654 P a g.
Proof. exact (@lem8214991 _144529 _144530 _144607 _144645 _144654 P a g). Qed.
Lemma lem8214993 {_144529 _144530 _144607 _144645 _144654 P : Type'} (g : _144530 -> _144607) (a : P) : (term1694 _144529 _144530 _144607 _144645 _144654 P a g) = (term1477 _144529 _144530 _144607 _144645 _144654 P g a).
Proof. exact (eq_refl (term1694 _144529 _144530 _144607 _144645 _144654 P a g)). Qed.
Lemma lem8214994 {_144529 _144530 _144607 _144645 _144654 P : Type'} (g : _144530 -> _144607) (a : P) : term1477 _144529 _144530 _144607 _144645 _144654 P g a.
Proof. exact (EQ_MP (@lem8214993 _144529 _144530 _144607 _144645 _144654 P g a) (@lem8214992 _144529 _144530 _144607 _144645 _144654 P a g)). Qed.
Lemma lem8214995 {_144529 _144530 _144607 _144645 _144654 P : Type'} (g : _144530 -> _144607) (a : P) (y : type564 _144530 _144607 _144654 P) : term1695 _144529 _144530 _144607 _144645 _144654 P g a y.
Proof. exact (@lem8214994 _144529 _144530 _144607 _144645 _144654 P g a y). Qed.
Lemma lem8214996 {_144529 _144530 _144607 _144645 _144654 P : Type'} (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (term1695 _144529 _144530 _144607 _144645 _144654 P g a y) = (term1473 _144529 _144530 _144607 _144645 _144654 P y g a).
Proof. exact (eq_refl (term1695 _144529 _144530 _144607 _144645 _144654 P g a y)). Qed.
Lemma lem8214997 {_144529 _144530 _144607 _144645 _144654 P : Type'} (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : term1473 _144529 _144530 _144607 _144645 _144654 P y g a.
Proof. exact (EQ_MP (@lem8214996 _144529 _144530 _144607 _144645 _144654 P y g a) (@lem8214995 _144529 _144530 _144607 _144645 _144654 P g a y)). Qed.
Lemma lem8214998 {_144529 _144530 _144607 _144645 _144654 P : Type'} (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) (f : _144530 -> _144607) : term1696 _144529 _144530 _144607 _144645 _144654 P y g a f.
Proof. exact (@lem8214997 _144529 _144530 _144607 _144645 _144654 P y g a f). Qed.
Lemma lem8214999 {_144529 _144530 _144607 _144645 _144654 P : Type'} (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (term1696 _144529 _144530 _144607 _144645 _144654 P y g a f) = (term1469 _144529 _144530 _144607 _144645 _144654 P f y g a).
Proof. exact (eq_refl (term1696 _144529 _144530 _144607 _144645 _144654 P y g a f)). Qed.
Lemma lem8215000 {_144529 _144530 _144607 _144645 _144654 P : Type'} (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : term1469 _144529 _144530 _144607 _144645 _144654 P f y g a.
Proof. exact (EQ_MP (@lem8214999 _144529 _144530 _144607 _144645 _144654 P f y g a) (@lem8214998 _144529 _144530 _144607 _144645 _144654 P y g a f)). Qed.
Lemma lem8215001 {_144529 _144530 _144607 _144645 _144654 P : Type'} (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) (t : type564 _144530 _144607 _144654 P) : term1697 _144529 _144530 _144607 _144645 _144654 P f y g a t.
Proof. exact (@lem8215000 _144529 _144530 _144607 _144645 _144654 P f y g a t). Qed.
Lemma lem8215002 {_144529 _144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (term1697 _144529 _144530 _144607 _144645 _144654 P f y g a t) = (term1465 _144529 _144530 _144607 _144645 _144654 P t f y g a).
Proof. exact (eq_refl (term1697 _144529 _144530 _144607 _144645 _144654 P f y g a t)). Qed.
Lemma lem8215003 {_144529 _144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : term1465 _144529 _144530 _144607 _144645 _144654 P t f y g a.
Proof. exact (EQ_MP (@lem8215002 _144529 _144530 _144607 _144645 _144654 P t f y g a) (@lem8215001 _144529 _144530 _144607 _144645 _144654 P f y g a t)). Qed.
Lemma lem8215004 {_144529 _144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) (q : type560 _144530 _144607 P) : term1698 _144529 _144530 _144607 _144645 _144654 P t f y g a q.
Proof. exact (@lem8215003 _144529 _144530 _144607 _144645 _144654 P t f y g a q). Qed.
Lemma lem8215005 {_144529 _144530 _144607 _144645 _144654 P : Type'} (q : type560 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (term1698 _144529 _144530 _144607 _144645 _144654 P t f y g a q) = (term1461 _144529 _144530 _144607 _144645 _144654 P q t f y g a).
Proof. exact (eq_refl (term1698 _144529 _144530 _144607 _144645 _144654 P t f y g a q)). Qed.
Lemma lem8215006 {_144529 _144530 _144607 _144645 _144654 P : Type'} (q : type560 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : term1461 _144529 _144530 _144607 _144645 _144654 P q t f y g a.
Proof. exact (EQ_MP (@lem8215005 _144529 _144530 _144607 _144645 _144654 P q t f y g a) (@lem8215004 _144529 _144530 _144607 _144645 _144654 P t f y g a q)). Qed.
Lemma lem8215007 {_144529 _144530 _144607 _144645 _144654 P : Type'} (q : type560 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) (e : type564 _144530 _144607 _144645 P) : term1699 _144529 _144530 _144607 _144645 _144654 P q t f y g a e.
Proof. exact (@lem8215006 _144529 _144530 _144607 _144645 _144654 P q t f y g a e). Qed.
Lemma lem8215008 {_144529 _144530 _144607 _144645 _144654 P : Type'} (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (term1699 _144529 _144530 _144607 _144645 _144654 P q t f y g a e) = (term1457 _144529 _144530 _144607 _144645 _144654 P e q t f y g a).
Proof. exact (eq_refl (term1699 _144529 _144530 _144607 _144645 _144654 P q t f y g a e)). Qed.
Lemma lem8215009 {_144529 _144530 _144607 _144645 _144654 P : Type'} (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : term1457 _144529 _144530 _144607 _144645 _144654 P e q t f y g a.
Proof. exact (EQ_MP (@lem8215008 _144529 _144530 _144607 _144645 _144654 P e q t f y g a) (@lem8215007 _144529 _144530 _144607 _144645 _144654 P q t f y g a e)). Qed.
Lemma lem8215010 {_144529 _144530 _144607 _144645 _144654 P : Type'} (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) (pat : type564 _144530 _144607 _144645 P) : term1700 _144529 _144530 _144607 _144645 _144654 P e q t f y g a pat.
Proof. exact (@lem8215009 _144529 _144530 _144607 _144645 _144654 P e q t f y g a pat). Qed.
Lemma lem8215011 {_144529 _144530 _144607 _144645 _144654 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (term1700 _144529 _144530 _144607 _144645 _144654 P e q t f y g a pat) = (term1453 _144529 _144530 _144607 _144645 _144654 P pat e q t f y g a).
Proof. exact (eq_refl (term1700 _144529 _144530 _144607 _144645 _144654 P e q t f y g a pat)). Qed.
Lemma lem8215012 {_144529 _144530 _144607 _144645 _144654 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : term1453 _144529 _144530 _144607 _144645 _144654 P pat e q t f y g a.
Proof. exact (EQ_MP (@lem8215011 _144529 _144530 _144607 _144645 _144654 P pat e q t f y g a) (@lem8215010 _144529 _144530 _144607 _144645 _144654 P e q t f y g a pat)). Qed.
Lemma lem8215013 {_144529 _144530 _144607 _144645 _144654 P : Type'} (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) (s : P -> _144529) : term1701 _144529 _144530 _144607 _144645 _144654 P pat e q t f y g a s.
Proof. exact (@lem8215012 _144529 _144530 _144607 _144645 _144654 P pat e q t f y g a s). Qed.
Lemma lem8215014 {_144529 _144530 _144607 _144645 _144654 P : Type'} (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (term1701 _144529 _144530 _144607 _144645 _144654 P pat e q t f y g a s) = (term1449 _144529 _144530 _144607 _144645 _144654 P s pat e q t f y g a).
Proof. exact (eq_refl (term1701 _144529 _144530 _144607 _144645 _144654 P pat e q t f y g a s)). Qed.
Lemma lem8215015 {_144529 _144530 _144607 _144645 _144654 P : Type'} (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : term1449 _144529 _144530 _144607 _144645 _144654 P s pat e q t f y g a.
Proof. exact (EQ_MP (@lem8215014 _144529 _144530 _144607 _144645 _144654 P s pat e q t f y g a) (@lem8215013 _144529 _144530 _144607 _144645 _144654 P pat e q t f y g a s)). Qed.
Lemma lem8215016 {_144529 _144530 _144607 _144645 _144654 P : Type'} (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) (lt2 : type1470 _144529 _144530) : term1702 _144529 _144530 _144607 _144645 _144654 P s pat e q t f y g a lt2.
Proof. exact (@lem8215015 _144529 _144530 _144607 _144645 _144654 P s pat e q t f y g a lt2). Qed.
Lemma lem8215017 {_144529 _144530 _144607 _144645 _144654 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (term1702 _144529 _144530 _144607 _144645 _144654 P s pat e q t f y g a lt2) = (term1445 _144529 _144530 _144607 _144645 _144654 P lt2 s pat e q t f y g a).
Proof. exact (eq_refl (term1702 _144529 _144530 _144607 _144645 _144654 P s pat e q t f y g a lt2)). Qed.
Lemma lem8215018 {_144529 _144530 _144607 _144645 _144654 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : term1445 _144529 _144530 _144607 _144645 _144654 P lt2 s pat e q t f y g a.
Proof. exact (EQ_MP (@lem8215017 _144529 _144530 _144607 _144645 _144654 P lt2 s pat e q t f y g a) (@lem8215016 _144529 _144530 _144607 _144645 _144654 P s pat e q t f y g a lt2)). Qed.
Lemma lem8215019 {_144529 _144530 _144607 _144645 _144654 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) (p : type560 _144530 _144607 P) : term1703 _144529 _144530 _144607 _144645 _144654 P lt2 s pat e q t f y g a p.
Proof. exact (@lem8215018 _144529 _144530 _144607 _144645 _144654 P lt2 s pat e q t f y g a p). Qed.
Lemma lem8215020 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : (term1703 _144529 _144530 _144607 _144645 _144654 P lt2 s pat e q t f y g a p) = (term1416 _144529 _144530 _144607 _144645 _144654 P p lt2 s pat e q t f y g a).
Proof. exact (eq_refl (term1703 _144529 _144530 _144607 _144645 _144654 P lt2 s pat e q t f y g a p)). Qed.
Lemma lem8215021 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : term1416 _144529 _144530 _144607 _144645 _144654 P p lt2 s pat e q t f y g a.
Proof. exact (EQ_MP (@lem8215020 _144529 _144530 _144607 _144645 _144654 P p lt2 s pat e q t f y g a) (@lem8215019 _144529 _144530 _144607 _144645 _144654 P lt2 s pat e q t f y g a p)). Qed.
Lemma lem8215023 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) : term1416 _144529 _144530 _144607 _144645 _144654 P p lt2 s pat e q t f y g a.
Proof. exact (@lem8203641 _144529 _144530 _144607 _144645 _144654 P p lt2 s pat e q t f y g a (@lem8215021 _144529 _144530 _144607 _144645 _144654 P p lt2 s pat e q t f y g a)). Qed.
Lemma lem8215024 {_144529 _144530 _144607 _144645 _144654 P : Type'} (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (h1 : term141 _144529 _144530 _144607 _144645 P p lt2 s pat) : term1440 _144529 _144530 _144607 _144645 _144654 P p lt2 s pat e q t f y g a.
Proof. exact (@lem8215023 _144529 _144530 _144607 _144645 _144654 P p lt2 s pat e q t f y g a (@lem8185836 _144529 _144530 _144607 _144645 P p lt2 s pat h1)). Qed.
Lemma lem8215025 {_144529 _144530 _144607 _144645 _144654 P : Type'} (q : type560 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (h1 : term141 _144529 _144530 _144607 _144645 P p lt2 s e) (h2 : term141 _144529 _144530 _144607 _144645 P p lt2 s pat) : term1438 _144529 _144530 _144607 _144645 _144654 P p lt2 s pat e q t f y g a.
Proof. exact (@lem8215024 _144529 _144530 _144607 _144645 _144654 P e q t f y g a p lt2 s pat h2 (@lem8185838 _144529 _144530 _144607 _144645 P p lt2 s e h1)). Qed.
Lemma lem8215026 {_144529 _144530 _144607 _144645 _144654 P : Type'} (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) (q : type560 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (h1 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) (h2 : term141 _144529 _144530 _144607 _144645 P p lt2 s e) (h3 : term141 _144529 _144530 _144607 _144645 P p lt2 s pat) : term1436 _144529 _144530 _144607 _144645 _144654 P p lt2 s pat e q t f y g a.
Proof. exact (@lem8215025 _144529 _144530 _144607 _144645 _144654 P q t f y g a e p lt2 s pat h2 h3 (@lem8185840 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t h1)). Qed.
Lemma lem8215027 {_144529 _144530 _144607 _144645 _144654 P : Type'} (f : _144530 -> _144607) (y : type564 _144530 _144607 _144654 P) (g : _144530 -> _144607) (a : P) (t : type564 _144530 _144607 _144654 P) (q : type560 _144530 _144607 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (h1 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) (h2 : term224 _144529 _144530 _144607 _144645 P p pat e lt2 s q) (h3 : term141 _144529 _144530 _144607 _144645 P p lt2 s e) (h4 : term141 _144529 _144530 _144607 _144645 P p lt2 s pat) : term1434 _144529 _144530 _144607 _144645 _144654 P p lt2 s pat e q t f y g a.
Proof. exact (@lem8215026 _144529 _144530 _144607 _144645 _144654 P f y g a q t e p lt2 s pat h1 h3 h4 (@lem8185842 _144529 _144530 _144607 _144645 P p pat e lt2 s q h2)). Qed.
Lemma lem8215028 {_144529 _144530 _144607 _144645 _144654 P : Type'} (f : _144530 -> _144607) (g : _144530 -> _144607) (a : P) (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (q : type560 _144530 _144607 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (h1 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) (h2 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y) (h3 : term224 _144529 _144530 _144607 _144645 P p pat e lt2 s q) (h4 : term141 _144529 _144530 _144607 _144645 P p lt2 s e) (h5 : term141 _144529 _144530 _144607 _144645 P p lt2 s pat) : term1432 _144529 _144530 _144607 _144645 _144654 P p lt2 s pat e q t f y g a.
Proof. exact (@lem8215027 _144529 _144530 _144607 _144645 _144654 P f y g a t q e p lt2 s pat h1 h3 h4 h5 (@lem8185841 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y h2)). Qed.
Lemma lem8215029 {_144529 _144530 _144607 _144645 _144654 P : Type'} (g : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (q : type560 _144530 _144607 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) (h1 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) (h2 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y) (h3 : term224 _144529 _144530 _144607 _144645 P p pat e lt2 s q) (h4 : term141 _144529 _144530 _144607 _144645 P p lt2 s e) (h5 : term141 _144529 _144530 _144607 _144645 P p lt2 s pat) (h6 : p f a) : term1430 _144529 _144530 _144607 _144645 _144654 P p lt2 s pat e q t f y g a.
Proof. exact (@lem8215028 _144529 _144530 _144607 _144645 _144654 P f g a t y q e p lt2 s pat h1 h2 h3 h4 h5 (@lem8185845 _144530 _144607 P p f a h6)). Qed.
Lemma lem8215030 {_144529 _144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (q : type560 _144530 _144607 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) (h2 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y) (h3 : term224 _144529 _144530 _144607 _144645 P p pat e lt2 s q) (h4 : term141 _144529 _144530 _144607 _144645 P p lt2 s e) (h5 : term141 _144529 _144530 _144607 _144645 P p lt2 s pat) (h6 : p f a) (h7 : p g a) : term1428 _144529 _144530 _144607 _144645 _144654 P lt2 s pat e q t f y g a.
Proof. exact (@lem8215029 _144529 _144530 _144607 _144645 _144654 P g t y q e lt2 s pat p f a h1 h2 h3 h4 h5 h6 (@lem8185847 _144530 _144607 P p g a h7)). Qed.
Lemma lem8215031 {_144529 _144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (q : type560 _144530 _144607 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) (h2 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) (h3 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y) (h4 : term224 _144529 _144530 _144607 _144645 P p pat e lt2 s q) (h5 : term141 _144529 _144530 _144607 _144645 P p lt2 s e) (h6 : term141 _144529 _144530 _144607 _144645 P p lt2 s pat) (h7 : p f a) (h8 : p g a) : term1426 _144530 _144607 _144645 _144654 P pat e q t f y g a.
Proof. exact (@lem8215030 _144529 _144530 _144607 _144645 _144654 P t y q e lt2 s pat f p g a h2 h3 h4 h5 h6 h7 h8 (@lem8185846 _144529 _144530 _144607 P lt2 s a f g h1)). Qed.
Lemma lem8215032 {_144529 _144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) (h2 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) (h3 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y) (h4 : term224 _144529 _144530 _144607 _144645 P p pat e lt2 s q) (h5 : term141 _144529 _144530 _144607 _144645 P p lt2 s e) (h6 : term141 _144529 _144530 _144607 _144645 P p lt2 s pat) (h7 : (pat f a) = (e f a)) (h8 : p f a) (h9 : p g a) : term1424 _144530 _144607 _144645 _144654 P pat e q t f y g a.
Proof. exact (@lem8215031 _144529 _144530 _144607 _144645 _144654 P t y q e lt2 s pat f p g a h1 h2 h3 h4 h5 h6 h8 h9 (@lem8185853 _144530 _144607 _144645 P pat e f a h7)). Qed.
Lemma lem8215033 {_144529 _144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) (h2 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) (h3 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y) (h4 : term224 _144529 _144530 _144607 _144645 P p pat e lt2 s q) (h5 : term141 _144529 _144530 _144607 _144645 P p lt2 s e) (h6 : term141 _144529 _144530 _144607 _144645 P p lt2 s pat) (h7 : (pat f a) = (e f a)) (h8 : (pat g a) = (e g a)) (h9 : p f a) (h10 : p g a) : term1422 _144530 _144607 _144654 P q t f y g a.
Proof. exact (@lem8215032 _144529 _144530 _144607 _144645 _144654 P t y q lt2 s pat e f p g a h1 h2 h3 h4 h5 h6 h7 h9 h10 (@lem8185852 _144530 _144607 _144645 P pat e g a h8)). Qed.
Lemma lem8215034 {_144529 _144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (q : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) (h2 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) (h3 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y) (h4 : term224 _144529 _144530 _144607 _144645 P p pat e lt2 s q) (h5 : term141 _144529 _144530 _144607 _144645 P p lt2 s e) (h6 : term141 _144529 _144530 _144607 _144645 P p lt2 s pat) (h7 : (pat f a) = (e f a)) (h8 : (pat g a) = (e g a)) (h9 : p f a) (h10 : p g a) (h11 : q f a) : term1420 _144530 _144607 _144654 P q t f y g a.
Proof. exact (@lem8215033 _144529 _144530 _144607 _144645 _144654 P t y q lt2 s pat e f p g a h1 h2 h3 h4 h5 h6 h7 h8 h9 h10 (@lem8185861 _144530 _144607 P q f a h11)). Qed.
Lemma lem8215035 {_144529 _144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) (h2 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) (h3 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y) (h4 : term224 _144529 _144530 _144607 _144645 P p pat e lt2 s q) (h5 : term141 _144529 _144530 _144607 _144645 P p lt2 s e) (h6 : term141 _144529 _144530 _144607 _144645 P p lt2 s pat) (h7 : (pat f a) = (e f a)) (h8 : (pat g a) = (e g a)) (h9 : p f a) (h10 : p g a) (h11 : q f a) (h12 : q g a) : term325 _144530 _144607 _144654 P t f y g a.
Proof. exact (@lem8215034 _144529 _144530 _144607 _144645 _144654 P t y lt2 s pat e p g q f a h1 h2 h3 h4 h5 h6 h7 h8 h9 h10 h11 (@lem8185860 _144530 _144607 P q g a h12)). Qed.
Lemma lem8215036 {_144529 _144530 _144607 _144645 _144654 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) (h2 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) (h3 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y) (h4 : term224 _144529 _144530 _144607 _144645 P p pat e lt2 s q) (h5 : term141 _144529 _144530 _144607 _144645 P p lt2 s e) (h6 : term141 _144529 _144530 _144607 _144645 P p lt2 s pat) (h7 : term326 _144530 _144607 _144654 P t f y g a) (h8 : (pat f a) = (e f a)) (h9 : (pat g a) = (e g a)) (h10 : p f a) (h11 : p g a) (h12 : q f a) (h13 : q g a) : False.
Proof. exact (@lem8215035 _144529 _144530 _144607 _144645 _144654 P t y lt2 s pat e p f q g a h1 h2 h3 h4 h5 h6 h8 h9 h10 h11 h12 h13 (@lem8203625 _144530 _144607 _144654 P t f y g a h7)). Qed.
Lemma lem8215037 {_144529 _144530 _144607 _144645 _144654 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) (h2 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) (h3 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y) (h4 : term224 _144529 _144530 _144607 _144645 P p pat e lt2 s q) (h5 : term141 _144529 _144530 _144607 _144645 P p lt2 s e) (h6 : term141 _144529 _144530 _144607 _144645 P p lt2 s pat) (h7 : term326 _144530 _144607 _144654 P t f y g a) (h8 : (pat f a) = (e f a)) (h9 : (pat g a) = (e g a)) (h10 : p f a) (h11 : p g a) (h12 : q f a) (h13 : q g a) : (term326 _144530 _144607 _144654 P t f y g a) = False.
Proof. exact (prop_ext (fun h14 : term326 _144530 _144607 _144654 P t f y g a => @lem8215036 _144529 _144530 _144607 _144645 _144654 P lt2 s t y pat e p f q g a h1 h2 h3 h4 h5 h6 h7 h8 h9 h10 h11 h12 h13) (fun h14 : False => @lem8203625 _144530 _144607 _144654 P t f y g a h7)). Qed.
Lemma lem8215038 {_144529 _144530 _144607 _144645 _144654 P : Type'} (lt2 : type1470 _144529 _144530) (s : P -> _144529) (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) (h2 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) (h3 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y) (h4 : term224 _144529 _144530 _144607 _144645 P p pat e lt2 s q) (h5 : term141 _144529 _144530 _144607 _144645 P p lt2 s e) (h6 : term141 _144529 _144530 _144607 _144645 P p lt2 s pat) (h7 : term326 _144530 _144607 _144654 P t f y g a) (h8 : (pat f a) = (e f a)) (h9 : (pat g a) = (e g a)) (h10 : p f a) (h11 : p g a) (h12 : q f a) (h13 : q g a) : False.
Proof. exact (EQ_MP (@lem8215037 _144529 _144530 _144607 _144645 _144654 P lt2 s t y pat e p f q g a h1 h2 h3 h4 h5 h6 h7 h8 h9 h10 h11 h12 h13) (@lem8203625 _144530 _144607 _144654 P t f y g a h7)). Qed.
Lemma lem8215039 {_144529 _144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) (h2 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) (h3 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y) (h4 : term224 _144529 _144530 _144607 _144645 P p pat e lt2 s q) (h5 : term141 _144529 _144530 _144607 _144645 P p lt2 s e) (h6 : term141 _144529 _144530 _144607 _144645 P p lt2 s pat) (h7 : (pat f a) = (e f a)) (h8 : (pat g a) = (e g a)) (h9 : p f a) (h10 : p g a) (h11 : q f a) (h12 : q g a) : term325 _144530 _144607 _144654 P t f y g a.
Proof. exact (fun h0 : term326 _144530 _144607 _144654 P t f y g a => @lem8215038 _144529 _144530 _144607 _144645 _144654 P lt2 s t y pat e p f q g a h1 h2 h3 h4 h5 h6 h0 h7 h8 h9 h10 h11 h12). Qed.
Lemma lem8215040 {_144529 _144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) (h2 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) (h3 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y) (h4 : term224 _144529 _144530 _144607 _144645 P p pat e lt2 s q) (h5 : term141 _144529 _144530 _144607 _144645 P p lt2 s e) (h6 : term141 _144529 _144530 _144607 _144645 P p lt2 s pat) (h7 : (pat f a) = (e f a)) (h8 : (pat g a) = (e g a)) (h9 : p f a) (h10 : p g a) (h11 : q f a) (h12 : q g a) : term324 _144530 _144607 _144654 P t f y g a.
Proof. exact (EQ_MP (@lem8203624 _144530 _144607 _144654 P t f y g a) (@lem8215039 _144529 _144530 _144607 _144645 _144654 P t y lt2 s pat e p f q g a h1 h2 h3 h4 h5 h6 h7 h8 h9 h10 h11 h12)). Qed.
Lemma lem8215041 {_144529 _144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) (h2 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) (h3 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y) (h4 : term224 _144529 _144530 _144607 _144645 P p pat e lt2 s q) (h5 : term141 _144529 _144530 _144607 _144645 P p lt2 s e) (h6 : term141 _144529 _144530 _144607 _144645 P p lt2 s pat) (h7 : (pat f a) = (e f a)) (h8 : (pat g a) = (e g a)) (h9 : p f a) (h10 : p g a) (h11 : q f a) (h12 : q g a) : ((t f a) = (y f a)) = ((t g a) = (y g a)).
Proof. exact (@lem8185875 _144530 _144607 _144654 P f t y g a (@lem8215040 _144529 _144530 _144607 _144645 _144654 P t y lt2 s pat e p f q g a h1 h2 h3 h4 h5 h6 h7 h8 h9 h10 h11 h12)). Qed.
Lemma lem8215042 {_144529 _144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (q : type560 _144530 _144607 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) (h2 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) (h3 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y) (h4 : term224 _144529 _144530 _144607 _144645 P p pat e lt2 s q) (h5 : term141 _144529 _144530 _144607 _144645 P p lt2 s e) (h6 : term141 _144529 _144530 _144607 _144645 P p lt2 s pat) (h7 : p f a) (h8 : p g a) : ((pat f a) = (e f a)) = ((pat g a) = (e g a)).
Proof. exact (@lem8185869 _144530 _144607 _144645 P f pat e g a (@lem8193739 _144529 _144530 _144607 _144645 _144654 P t y q e lt2 s pat f p g a h1 h2 h3 h4 h5 h6 h7 h8)). Qed.
Lemma lem8215043 {_144530 _144607 P : Type'} (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term322 _144530 _144607 P f q g a) : q g a.
Proof. exact (proj2 (@lem8185859 _144530 _144607 P f q g a h1)). Qed.
Lemma lem8215044 {_144530 _144607 P : Type'} (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term322 _144530 _144607 P f q g a) : q f a.
Proof. exact (proj1 (@lem8185859 _144530 _144607 P f q g a h1)). Qed.
Lemma lem8215045 {_144529 _144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) (h2 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) (h3 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y) (h4 : term224 _144529 _144530 _144607 _144645 P p pat e lt2 s q) (h5 : term141 _144529 _144530 _144607 _144645 P p lt2 s e) (h6 : term141 _144529 _144530 _144607 _144645 P p lt2 s pat) (h7 : (pat f a) = (e f a)) (h8 : (pat g a) = (e g a)) (h9 : p f a) (h10 : p g a) (h11 : q f a) (h12 : q g a) : (q g a) = (((t f a) = (y f a)) = ((t g a) = (y g a))).
Proof. exact (prop_ext (fun h13 : q g a => @lem8215041 _144529 _144530 _144607 _144645 _144654 P t y lt2 s pat e p f q g a h1 h2 h3 h4 h5 h6 h7 h8 h9 h10 h11 h12) (fun h13 : ((t f a) = (y f a)) = ((t g a) = (y g a)) => @lem8185860 _144530 _144607 P q g a h12)). Qed.
Lemma lem8215046 {_144529 _144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) (h2 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) (h3 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y) (h4 : term224 _144529 _144530 _144607 _144645 P p pat e lt2 s q) (h5 : term141 _144529 _144530 _144607 _144645 P p lt2 s e) (h6 : term141 _144529 _144530 _144607 _144645 P p lt2 s pat) (h7 : (pat f a) = (e f a)) (h8 : (pat g a) = (e g a)) (h9 : p f a) (h10 : p g a) (h11 : q f a) (h12 : q g a) : ((t f a) = (y f a)) = ((t g a) = (y g a)).
Proof. exact (EQ_MP (@lem8215045 _144529 _144530 _144607 _144645 _144654 P t y lt2 s pat e p f q g a h1 h2 h3 h4 h5 h6 h7 h8 h9 h10 h11 h12) (@lem8185860 _144530 _144607 P q g a h12)). Qed.
Lemma lem8215047 {_144529 _144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) (h2 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) (h3 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y) (h4 : term224 _144529 _144530 _144607 _144645 P p pat e lt2 s q) (h5 : term141 _144529 _144530 _144607 _144645 P p lt2 s e) (h6 : term141 _144529 _144530 _144607 _144645 P p lt2 s pat) (h7 : (pat f a) = (e f a)) (h8 : (pat g a) = (e g a)) (h9 : p f a) (h10 : p g a) (h11 : q f a) (h12 : q g a) : (q f a) = (((t f a) = (y f a)) = ((t g a) = (y g a))).
Proof. exact (prop_ext (fun h13 : q f a => @lem8215046 _144529 _144530 _144607 _144645 _144654 P t y lt2 s pat e p f q g a h1 h2 h3 h4 h5 h6 h7 h8 h9 h10 h11 h12) (fun h13 : ((t f a) = (y f a)) = ((t g a) = (y g a)) => @lem8185861 _144530 _144607 P q f a h11)). Qed.
Lemma lem8215048 {_144529 _144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (f : _144530 -> _144607) (q : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) (h2 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) (h3 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y) (h4 : term224 _144529 _144530 _144607 _144645 P p pat e lt2 s q) (h5 : term141 _144529 _144530 _144607 _144645 P p lt2 s e) (h6 : term141 _144529 _144530 _144607 _144645 P p lt2 s pat) (h7 : (pat f a) = (e f a)) (h8 : (pat g a) = (e g a)) (h9 : p f a) (h10 : p g a) (h11 : q f a) (h12 : q g a) : ((t f a) = (y f a)) = ((t g a) = (y g a)).
Proof. exact (EQ_MP (@lem8215047 _144529 _144530 _144607 _144645 _144654 P t y lt2 s pat e p f q g a h1 h2 h3 h4 h5 h6 h7 h8 h9 h10 h11 h12) (@lem8185861 _144530 _144607 P q f a h11)). Qed.
Lemma lem8215049 {_144529 _144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (q : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) (h2 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) (h3 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y) (h4 : term224 _144529 _144530 _144607 _144645 P p pat e lt2 s q) (h5 : term141 _144529 _144530 _144607 _144645 P p lt2 s e) (h6 : term141 _144529 _144530 _144607 _144645 P p lt2 s pat) (h7 : term322 _144530 _144607 P f q g a) (h8 : (pat f a) = (e f a)) (h9 : (pat g a) = (e g a)) (h10 : p f a) (h11 : p g a) (h12 : q f a) : (q g a) = (((t f a) = (y f a)) = ((t g a) = (y g a))).
Proof. exact (prop_ext (fun h13 : q g a => @lem8215048 _144529 _144530 _144607 _144645 _144654 P t y lt2 s pat e p f q g a h1 h2 h3 h4 h5 h6 h8 h9 h10 h11 h12 h13) (fun h13 : ((t f a) = (y f a)) = ((t g a) = (y g a)) => @lem8215043 _144530 _144607 P f q g a h7)). Qed.
Lemma lem8215050 {_144529 _144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (q : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) (h2 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) (h3 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y) (h4 : term224 _144529 _144530 _144607 _144645 P p pat e lt2 s q) (h5 : term141 _144529 _144530 _144607 _144645 P p lt2 s e) (h6 : term141 _144529 _144530 _144607 _144645 P p lt2 s pat) (h7 : term322 _144530 _144607 P f q g a) (h8 : (pat f a) = (e f a)) (h9 : (pat g a) = (e g a)) (h10 : p f a) (h11 : p g a) (h12 : q f a) : ((t f a) = (y f a)) = ((t g a) = (y g a)).
Proof. exact (EQ_MP (@lem8215049 _144529 _144530 _144607 _144645 _144654 P t y lt2 s pat e p g q f a h1 h2 h3 h4 h5 h6 h7 h8 h9 h10 h11 h12) (@lem8215043 _144530 _144607 P f q g a h7)). Qed.
Lemma lem8215051 {_144529 _144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (q : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) (h2 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) (h3 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y) (h4 : term224 _144529 _144530 _144607 _144645 P p pat e lt2 s q) (h5 : term141 _144529 _144530 _144607 _144645 P p lt2 s e) (h6 : term141 _144529 _144530 _144607 _144645 P p lt2 s pat) (h7 : term322 _144530 _144607 P f q g a) (h8 : (pat f a) = (e f a)) (h9 : (pat g a) = (e g a)) (h10 : p f a) (h11 : p g a) : (q f a) = (((t f a) = (y f a)) = ((t g a) = (y g a))).
Proof. exact (prop_ext (fun h12 : q f a => @lem8215050 _144529 _144530 _144607 _144645 _144654 P t y lt2 s pat e p g q f a h1 h2 h3 h4 h5 h6 h7 h8 h9 h10 h11 h12) (fun h12 : ((t f a) = (y f a)) = ((t g a) = (y g a)) => @lem8215044 _144530 _144607 P f q g a h7)). Qed.
Lemma lem8215052 {_144529 _144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (q : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) (h2 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) (h3 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y) (h4 : term224 _144529 _144530 _144607 _144645 P p pat e lt2 s q) (h5 : term141 _144529 _144530 _144607 _144645 P p lt2 s e) (h6 : term141 _144529 _144530 _144607 _144645 P p lt2 s pat) (h7 : term322 _144530 _144607 P f q g a) (h8 : (pat f a) = (e f a)) (h9 : (pat g a) = (e g a)) (h10 : p f a) (h11 : p g a) : ((t f a) = (y f a)) = ((t g a) = (y g a)).
Proof. exact (EQ_MP (@lem8215051 _144529 _144530 _144607 _144645 _144654 P t y lt2 s q pat e f p g a h1 h2 h3 h4 h5 h6 h7 h8 h9 h10 h11) (@lem8215044 _144530 _144607 P f q g a h7)). Qed.
Lemma lem8215053 {_144529 _144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) (h2 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) (h3 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y) (h4 : term224 _144529 _144530 _144607 _144645 P p pat e lt2 s q) (h5 : term141 _144529 _144530 _144607 _144645 P p lt2 s e) (h6 : term141 _144529 _144530 _144607 _144645 P p lt2 s pat) (h7 : (pat f a) = (e f a)) (h8 : (pat g a) = (e g a)) (h9 : p f a) (h10 : p g a) : term1704 _144530 _144607 _144654 P q f t y g a.
Proof. exact (fun h0 : term322 _144530 _144607 P f q g a => @lem8215052 _144529 _144530 _144607 _144645 _144654 P t y lt2 s q pat e f p g a h1 h2 h3 h4 h5 h6 h0 h7 h8 h9 h10). Qed.
Lemma lem8215054 {_144529 _144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) (h2 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) (h3 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y) (h4 : term224 _144529 _144530 _144607 _144645 P p pat e lt2 s q) (h5 : term141 _144529 _144530 _144607 _144645 P p lt2 s e) (h6 : term141 _144529 _144530 _144607 _144645 P p lt2 s pat) (h7 : (pat f a) = (e f a)) (h8 : (pat g a) = (e g a)) (h9 : p f a) (h10 : p g a) : term1705 _144530 _144607 _144654 P q f t y g a.
Proof. exact (conj (@lem8203620 _144529 _144530 _144607 _144645 _144654 P t y q lt2 s pat e f p g a h1 h2 h3 h4 h5 h6 h7 h8 h9 h10) (@lem8215053 _144529 _144530 _144607 _144645 _144654 P t y q lt2 s pat e f p g a h1 h2 h3 h4 h5 h6 h7 h8 h9 h10)). Qed.
Lemma lem8215055 {_144529 _144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) (h2 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) (h3 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y) (h4 : term224 _144529 _144530 _144607 _144645 P p pat e lt2 s q) (h5 : term141 _144529 _144530 _144607 _144645 P p lt2 s e) (h6 : term141 _144529 _144530 _144607 _144645 P p lt2 s pat) (h7 : (pat f a) = (e f a)) (h8 : (pat g a) = (e g a)) (h9 : p f a) (h10 : p g a) : (term200 _144530 _144607 _144654 P q t y f a) = (term200 _144530 _144607 _144654 P q t y g a).
Proof. exact (@lem8185858 _144530 _144607 _144654 P f q t y g a (@lem8215054 _144529 _144530 _144607 _144645 _144654 P t y q lt2 s pat e f p g a h1 h2 h3 h4 h5 h6 h7 h8 h9 h10)). Qed.
Lemma lem8215056 {_144530 _144607 _144645 P : Type'} (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) (h1 : term320 _144530 _144607 _144645 P f pat e g a) : (pat g a) = (e g a).
Proof. exact (proj2 (@lem8185851 _144530 _144607 _144645 P f pat e g a h1)). Qed.
Lemma lem8215057 {_144530 _144607 _144645 P : Type'} (f : _144530 -> _144607) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (g : _144530 -> _144607) (a : P) (h1 : term320 _144530 _144607 _144645 P f pat e g a) : (pat f a) = (e f a).
Proof. exact (proj1 (@lem8185851 _144530 _144607 _144645 P f pat e g a h1)). Qed.
Lemma lem8215058 {_144529 _144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) (h2 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) (h3 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y) (h4 : term224 _144529 _144530 _144607 _144645 P p pat e lt2 s q) (h5 : term141 _144529 _144530 _144607 _144645 P p lt2 s e) (h6 : term141 _144529 _144530 _144607 _144645 P p lt2 s pat) (h7 : (pat f a) = (e f a)) (h8 : (pat g a) = (e g a)) (h9 : p f a) (h10 : p g a) : ((pat g a) = (e g a)) = ((term200 _144530 _144607 _144654 P q t y f a) = (term200 _144530 _144607 _144654 P q t y g a)).
Proof. exact (prop_ext (fun h11 : (pat g a) = (e g a) => @lem8215055 _144529 _144530 _144607 _144645 _144654 P t y q lt2 s pat e f p g a h1 h2 h3 h4 h5 h6 h7 h8 h9 h10) (fun h11 : (term200 _144530 _144607 _144654 P q t y f a) = (term200 _144530 _144607 _144654 P q t y g a) => @lem8185852 _144530 _144607 _144645 P pat e g a h8)). Qed.
Lemma lem8215059 {_144529 _144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) (h2 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) (h3 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y) (h4 : term224 _144529 _144530 _144607 _144645 P p pat e lt2 s q) (h5 : term141 _144529 _144530 _144607 _144645 P p lt2 s e) (h6 : term141 _144529 _144530 _144607 _144645 P p lt2 s pat) (h7 : (pat f a) = (e f a)) (h8 : (pat g a) = (e g a)) (h9 : p f a) (h10 : p g a) : (term200 _144530 _144607 _144654 P q t y f a) = (term200 _144530 _144607 _144654 P q t y g a).
Proof. exact (EQ_MP (@lem8215058 _144529 _144530 _144607 _144645 _144654 P t y q lt2 s pat e f p g a h1 h2 h3 h4 h5 h6 h7 h8 h9 h10) (@lem8185852 _144530 _144607 _144645 P pat e g a h8)). Qed.
Lemma lem8215060 {_144529 _144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) (h2 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) (h3 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y) (h4 : term224 _144529 _144530 _144607 _144645 P p pat e lt2 s q) (h5 : term141 _144529 _144530 _144607 _144645 P p lt2 s e) (h6 : term141 _144529 _144530 _144607 _144645 P p lt2 s pat) (h7 : (pat f a) = (e f a)) (h8 : (pat g a) = (e g a)) (h9 : p f a) (h10 : p g a) : ((pat f a) = (e f a)) = ((term200 _144530 _144607 _144654 P q t y f a) = (term200 _144530 _144607 _144654 P q t y g a)).
Proof. exact (prop_ext (fun h11 : (pat f a) = (e f a) => @lem8215059 _144529 _144530 _144607 _144645 _144654 P t y q lt2 s pat e f p g a h1 h2 h3 h4 h5 h6 h7 h8 h9 h10) (fun h11 : (term200 _144530 _144607 _144654 P q t y f a) = (term200 _144530 _144607 _144654 P q t y g a) => @lem8185853 _144530 _144607 _144645 P pat e f a h7)). Qed.
Lemma lem8215061 {_144529 _144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) (h2 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) (h3 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y) (h4 : term224 _144529 _144530 _144607 _144645 P p pat e lt2 s q) (h5 : term141 _144529 _144530 _144607 _144645 P p lt2 s e) (h6 : term141 _144529 _144530 _144607 _144645 P p lt2 s pat) (h7 : (pat f a) = (e f a)) (h8 : (pat g a) = (e g a)) (h9 : p f a) (h10 : p g a) : (term200 _144530 _144607 _144654 P q t y f a) = (term200 _144530 _144607 _144654 P q t y g a).
Proof. exact (EQ_MP (@lem8215060 _144529 _144530 _144607 _144645 _144654 P t y q lt2 s pat e f p g a h1 h2 h3 h4 h5 h6 h7 h8 h9 h10) (@lem8185853 _144530 _144607 _144645 P pat e f a h7)). Qed.
Lemma lem8215062 {_144529 _144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) (h2 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) (h3 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y) (h4 : term224 _144529 _144530 _144607 _144645 P p pat e lt2 s q) (h5 : term141 _144529 _144530 _144607 _144645 P p lt2 s e) (h6 : term141 _144529 _144530 _144607 _144645 P p lt2 s pat) (h7 : term320 _144530 _144607 _144645 P f pat e g a) (h8 : (pat f a) = (e f a)) (h9 : p f a) (h10 : p g a) : ((pat g a) = (e g a)) = ((term200 _144530 _144607 _144654 P q t y f a) = (term200 _144530 _144607 _144654 P q t y g a)).
Proof. exact (prop_ext (fun h11 : (pat g a) = (e g a) => @lem8215061 _144529 _144530 _144607 _144645 _144654 P t y q lt2 s pat e f p g a h1 h2 h3 h4 h5 h6 h8 h11 h9 h10) (fun h11 : (term200 _144530 _144607 _144654 P q t y f a) = (term200 _144530 _144607 _144654 P q t y g a) => @lem8215056 _144530 _144607 _144645 P f pat e g a h7)). Qed.
Lemma lem8215063 {_144529 _144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) (h2 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) (h3 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y) (h4 : term224 _144529 _144530 _144607 _144645 P p pat e lt2 s q) (h5 : term141 _144529 _144530 _144607 _144645 P p lt2 s e) (h6 : term141 _144529 _144530 _144607 _144645 P p lt2 s pat) (h7 : term320 _144530 _144607 _144645 P f pat e g a) (h8 : (pat f a) = (e f a)) (h9 : p f a) (h10 : p g a) : (term200 _144530 _144607 _144654 P q t y f a) = (term200 _144530 _144607 _144654 P q t y g a).
Proof. exact (EQ_MP (@lem8215062 _144529 _144530 _144607 _144645 _144654 P t y q lt2 s pat e f p g a h1 h2 h3 h4 h5 h6 h7 h8 h9 h10) (@lem8215056 _144530 _144607 _144645 P f pat e g a h7)). Qed.
Lemma lem8215064 {_144529 _144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) (h2 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) (h3 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y) (h4 : term224 _144529 _144530 _144607 _144645 P p pat e lt2 s q) (h5 : term141 _144529 _144530 _144607 _144645 P p lt2 s e) (h6 : term141 _144529 _144530 _144607 _144645 P p lt2 s pat) (h7 : term320 _144530 _144607 _144645 P f pat e g a) (h8 : p f a) (h9 : p g a) : ((pat f a) = (e f a)) = ((term200 _144530 _144607 _144654 P q t y f a) = (term200 _144530 _144607 _144654 P q t y g a)).
Proof. exact (prop_ext (fun h10 : (pat f a) = (e f a) => @lem8215063 _144529 _144530 _144607 _144645 _144654 P t y q lt2 s pat e f p g a h1 h2 h3 h4 h5 h6 h7 h10 h8 h9) (fun h10 : (term200 _144530 _144607 _144654 P q t y f a) = (term200 _144530 _144607 _144654 P q t y g a) => @lem8215057 _144530 _144607 _144645 P f pat e g a h7)). Qed.
Lemma lem8215065 {_144529 _144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) (h2 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) (h3 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y) (h4 : term224 _144529 _144530 _144607 _144645 P p pat e lt2 s q) (h5 : term141 _144529 _144530 _144607 _144645 P p lt2 s e) (h6 : term141 _144529 _144530 _144607 _144645 P p lt2 s pat) (h7 : term320 _144530 _144607 _144645 P f pat e g a) (h8 : p f a) (h9 : p g a) : (term200 _144530 _144607 _144654 P q t y f a) = (term200 _144530 _144607 _144654 P q t y g a).
Proof. exact (EQ_MP (@lem8215064 _144529 _144530 _144607 _144645 _144654 P t y q lt2 s pat e f p g a h1 h2 h3 h4 h5 h6 h7 h8 h9) (@lem8215057 _144530 _144607 _144645 P f pat e g a h7)). Qed.
Lemma lem8215066 {_144529 _144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (q : type560 _144530 _144607 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) (h2 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) (h3 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y) (h4 : term224 _144529 _144530 _144607 _144645 P p pat e lt2 s q) (h5 : term141 _144529 _144530 _144607 _144645 P p lt2 s e) (h6 : term141 _144529 _144530 _144607 _144645 P p lt2 s pat) (h7 : p f a) (h8 : p g a) : term1706 _144530 _144607 _144645 _144654 P pat e f q t y g a.
Proof. exact (fun h0 : term320 _144530 _144607 _144645 P f pat e g a => @lem8215065 _144529 _144530 _144607 _144645 _144654 P t y q lt2 s pat e f p g a h1 h2 h3 h4 h5 h6 h0 h7 h8). Qed.
Lemma lem8215067 {_144529 _144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (q : type560 _144530 _144607 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) (h2 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) (h3 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y) (h4 : term224 _144529 _144530 _144607 _144645 P p pat e lt2 s q) (h5 : term141 _144529 _144530 _144607 _144645 P p lt2 s e) (h6 : term141 _144529 _144530 _144607 _144645 P p lt2 s pat) (h7 : p f a) (h8 : p g a) : term1707 _144530 _144607 _144645 _144654 P pat e f q t y g a.
Proof. exact (conj (@lem8215042 _144529 _144530 _144607 _144645 _144654 P t y q e lt2 s pat f p g a h1 h2 h3 h4 h5 h6 h7 h8) (@lem8215066 _144529 _144530 _144607 _144645 _144654 P t y q e lt2 s pat f p g a h1 h2 h3 h4 h5 h6 h7 h8)). Qed.
Lemma lem8215068 {_144529 _144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (q : type560 _144530 _144607 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) (h2 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) (h3 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y) (h4 : term224 _144529 _144530 _144607 _144645 P p pat e lt2 s q) (h5 : term141 _144529 _144530 _144607 _144645 P p lt2 s e) (h6 : term141 _144529 _144530 _144607 _144645 P p lt2 s pat) (h7 : p f a) (h8 : p g a) : (term307 _144530 _144607 _144645 _144654 P pat e q t y f a) = (term307 _144530 _144607 _144645 _144654 P pat e q t y g a).
Proof. exact (@lem8185850 _144530 _144607 _144645 _144654 P f pat e q t y g a (@lem8215067 _144529 _144530 _144607 _144645 _144654 P t y q e lt2 s pat f p g a h1 h2 h3 h4 h5 h6 h7 h8)). Qed.
Lemma lem8215069 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (h1 : term317 _144529 _144530 _144607 P p lt2 s a f g) : term318 _144529 _144530 _144607 P p lt2 s a f g.
Proof. exact (proj2 (@lem8185843 _144529 _144530 _144607 P p lt2 s a f g h1)). Qed.
Lemma lem8215070 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (h1 : term317 _144529 _144530 _144607 P p lt2 s a f g) : p f a.
Proof. exact (proj1 (@lem8185843 _144529 _144530 _144607 P p lt2 s a f g h1)). Qed.
Lemma lem8215071 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (h1 : term318 _144529 _144530 _144607 P p lt2 s a f g) : term165 _144529 _144530 _144607 P lt2 s a f g.
Proof. exact (proj2 (@lem8185844 _144529 _144530 _144607 P p lt2 s a f g h1)). Qed.
Lemma lem8215072 {_144529 _144530 _144607 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (h1 : term318 _144529 _144530 _144607 P p lt2 s a f g) : p g a.
Proof. exact (proj1 (@lem8185844 _144529 _144530 _144607 P p lt2 s a f g h1)). Qed.
Lemma lem8215073 {_144529 _144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (q : type560 _144530 _144607 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) (h2 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) (h3 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y) (h4 : term224 _144529 _144530 _144607 _144645 P p pat e lt2 s q) (h5 : term141 _144529 _144530 _144607 _144645 P p lt2 s e) (h6 : term141 _144529 _144530 _144607 _144645 P p lt2 s pat) (h7 : p f a) (h8 : p g a) : (term165 _144529 _144530 _144607 P lt2 s a f g) = ((term307 _144530 _144607 _144645 _144654 P pat e q t y f a) = (term307 _144530 _144607 _144645 _144654 P pat e q t y g a)).
Proof. exact (prop_ext (fun h9 : term165 _144529 _144530 _144607 P lt2 s a f g => @lem8215068 _144529 _144530 _144607 _144645 _144654 P t y q e lt2 s pat f p g a h1 h2 h3 h4 h5 h6 h7 h8) (fun h9 : (term307 _144530 _144607 _144645 _144654 P pat e q t y f a) = (term307 _144530 _144607 _144645 _144654 P pat e q t y g a) => @lem8185846 _144529 _144530 _144607 P lt2 s a f g h1)). Qed.
Lemma lem8215074 {_144529 _144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (q : type560 _144530 _144607 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) (h2 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) (h3 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y) (h4 : term224 _144529 _144530 _144607 _144645 P p pat e lt2 s q) (h5 : term141 _144529 _144530 _144607 _144645 P p lt2 s e) (h6 : term141 _144529 _144530 _144607 _144645 P p lt2 s pat) (h7 : p f a) (h8 : p g a) : (term307 _144530 _144607 _144645 _144654 P pat e q t y f a) = (term307 _144530 _144607 _144645 _144654 P pat e q t y g a).
Proof. exact (EQ_MP (@lem8215073 _144529 _144530 _144607 _144645 _144654 P t y q e lt2 s pat f p g a h1 h2 h3 h4 h5 h6 h7 h8) (@lem8185846 _144529 _144530 _144607 P lt2 s a f g h1)). Qed.
Lemma lem8215075 {_144529 _144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (q : type560 _144530 _144607 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) (h2 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) (h3 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y) (h4 : term224 _144529 _144530 _144607 _144645 P p pat e lt2 s q) (h5 : term141 _144529 _144530 _144607 _144645 P p lt2 s e) (h6 : term141 _144529 _144530 _144607 _144645 P p lt2 s pat) (h7 : p f a) (h8 : p g a) : (p g a) = ((term307 _144530 _144607 _144645 _144654 P pat e q t y f a) = (term307 _144530 _144607 _144645 _144654 P pat e q t y g a)).
Proof. exact (prop_ext (fun h9 : p g a => @lem8215074 _144529 _144530 _144607 _144645 _144654 P t y q e lt2 s pat f p g a h1 h2 h3 h4 h5 h6 h7 h8) (fun h9 : (term307 _144530 _144607 _144645 _144654 P pat e q t y f a) = (term307 _144530 _144607 _144645 _144654 P pat e q t y g a) => @lem8185847 _144530 _144607 P p g a h8)). Qed.
Lemma lem8215076 {_144529 _144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (q : type560 _144530 _144607 P) (e : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (f : _144530 -> _144607) (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term165 _144529 _144530 _144607 P lt2 s a f g) (h2 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) (h3 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y) (h4 : term224 _144529 _144530 _144607 _144645 P p pat e lt2 s q) (h5 : term141 _144529 _144530 _144607 _144645 P p lt2 s e) (h6 : term141 _144529 _144530 _144607 _144645 P p lt2 s pat) (h7 : p f a) (h8 : p g a) : (term307 _144530 _144607 _144645 _144654 P pat e q t y f a) = (term307 _144530 _144607 _144645 _144654 P pat e q t y g a).
Proof. exact (EQ_MP (@lem8215075 _144529 _144530 _144607 _144645 _144654 P t y q e lt2 s pat f p g a h1 h2 h3 h4 h5 h6 h7 h8) (@lem8185847 _144530 _144607 P p g a h8)). Qed.
Lemma lem8215077 {_144529 _144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (q : type560 _144530 _144607 P) (e : type564 _144530 _144607 _144645 P) (pat : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) (h2 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y) (h3 : term224 _144529 _144530 _144607 _144645 P p pat e lt2 s q) (h4 : term141 _144529 _144530 _144607 _144645 P p lt2 s e) (h5 : term141 _144529 _144530 _144607 _144645 P p lt2 s pat) (h6 : term318 _144529 _144530 _144607 P p lt2 s a f g) (h7 : p f a) (h8 : p g a) : (term165 _144529 _144530 _144607 P lt2 s a f g) = ((term307 _144530 _144607 _144645 _144654 P pat e q t y f a) = (term307 _144530 _144607 _144645 _144654 P pat e q t y g a)).
Proof. exact (prop_ext (fun h9 : term165 _144529 _144530 _144607 P lt2 s a f g => @lem8215076 _144529 _144530 _144607 _144645 _144654 P t y q e lt2 s pat f p g a h9 h1 h2 h3 h4 h5 h7 h8) (fun h9 : (term307 _144530 _144607 _144645 _144654 P pat e q t y f a) = (term307 _144530 _144607 _144645 _144654 P pat e q t y g a) => @lem8215071 _144529 _144530 _144607 P p lt2 s a f g h6)). Qed.
Lemma lem8215078 {_144529 _144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (q : type560 _144530 _144607 P) (e : type564 _144530 _144607 _144645 P) (pat : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (f : _144530 -> _144607) (p : type560 _144530 _144607 P) (g : _144530 -> _144607) (a : P) (h1 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) (h2 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y) (h3 : term224 _144529 _144530 _144607 _144645 P p pat e lt2 s q) (h4 : term141 _144529 _144530 _144607 _144645 P p lt2 s e) (h5 : term141 _144529 _144530 _144607 _144645 P p lt2 s pat) (h6 : term318 _144529 _144530 _144607 P p lt2 s a f g) (h7 : p f a) (h8 : p g a) : (term307 _144530 _144607 _144645 _144654 P pat e q t y f a) = (term307 _144530 _144607 _144645 _144654 P pat e q t y g a).
Proof. exact (EQ_MP (@lem8215077 _144529 _144530 _144607 _144645 _144654 P t y q e pat lt2 s f p g a h1 h2 h3 h4 h5 h6 h7 h8) (@lem8215071 _144529 _144530 _144607 P p lt2 s a f g h6)). Qed.
Lemma lem8215079 {_144529 _144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (q : type560 _144530 _144607 P) (e : type564 _144530 _144607 _144645 P) (pat : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (g : _144530 -> _144607) (p : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) (h1 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) (h2 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y) (h3 : term224 _144529 _144530 _144607 _144645 P p pat e lt2 s q) (h4 : term141 _144529 _144530 _144607 _144645 P p lt2 s e) (h5 : term141 _144529 _144530 _144607 _144645 P p lt2 s pat) (h6 : term318 _144529 _144530 _144607 P p lt2 s a f g) (h7 : p f a) : (p g a) = ((term307 _144530 _144607 _144645 _144654 P pat e q t y f a) = (term307 _144530 _144607 _144645 _144654 P pat e q t y g a)).
Proof. exact (prop_ext (fun h8 : p g a => @lem8215078 _144529 _144530 _144607 _144645 _144654 P t y q e pat lt2 s f p g a h1 h2 h3 h4 h5 h6 h7 h8) (fun h8 : (term307 _144530 _144607 _144645 _144654 P pat e q t y f a) = (term307 _144530 _144607 _144645 _144654 P pat e q t y g a) => @lem8215072 _144529 _144530 _144607 P p lt2 s a f g h6)). Qed.
Lemma lem8215080 {_144529 _144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (q : type560 _144530 _144607 P) (e : type564 _144530 _144607 _144645 P) (pat : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (g : _144530 -> _144607) (p : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) (h1 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) (h2 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y) (h3 : term224 _144529 _144530 _144607 _144645 P p pat e lt2 s q) (h4 : term141 _144529 _144530 _144607 _144645 P p lt2 s e) (h5 : term141 _144529 _144530 _144607 _144645 P p lt2 s pat) (h6 : term318 _144529 _144530 _144607 P p lt2 s a f g) (h7 : p f a) : (term307 _144530 _144607 _144645 _144654 P pat e q t y f a) = (term307 _144530 _144607 _144645 _144654 P pat e q t y g a).
Proof. exact (EQ_MP (@lem8215079 _144529 _144530 _144607 _144645 _144654 P t y q e pat lt2 s g p f a h1 h2 h3 h4 h5 h6 h7) (@lem8215072 _144529 _144530 _144607 P p lt2 s a f g h6)). Qed.
Lemma lem8215081 {_144529 _144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (q : type560 _144530 _144607 P) (e : type564 _144530 _144607 _144645 P) (pat : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (g : _144530 -> _144607) (p : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) (h1 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) (h2 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y) (h3 : term224 _144529 _144530 _144607 _144645 P p pat e lt2 s q) (h4 : term141 _144529 _144530 _144607 _144645 P p lt2 s e) (h5 : term141 _144529 _144530 _144607 _144645 P p lt2 s pat) (h6 : term318 _144529 _144530 _144607 P p lt2 s a f g) (h7 : p f a) : (p f a) = ((term307 _144530 _144607 _144645 _144654 P pat e q t y f a) = (term307 _144530 _144607 _144645 _144654 P pat e q t y g a)).
Proof. exact (prop_ext (fun h8 : p f a => @lem8215080 _144529 _144530 _144607 _144645 _144654 P t y q e pat lt2 s g p f a h1 h2 h3 h4 h5 h6 h7) (fun h8 : (term307 _144530 _144607 _144645 _144654 P pat e q t y f a) = (term307 _144530 _144607 _144645 _144654 P pat e q t y g a) => @lem8185845 _144530 _144607 P p f a h7)). Qed.
Lemma lem8215082 {_144529 _144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (q : type560 _144530 _144607 P) (e : type564 _144530 _144607 _144645 P) (pat : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (g : _144530 -> _144607) (p : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) (h1 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) (h2 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y) (h3 : term224 _144529 _144530 _144607 _144645 P p pat e lt2 s q) (h4 : term141 _144529 _144530 _144607 _144645 P p lt2 s e) (h5 : term141 _144529 _144530 _144607 _144645 P p lt2 s pat) (h6 : term318 _144529 _144530 _144607 P p lt2 s a f g) (h7 : p f a) : (term307 _144530 _144607 _144645 _144654 P pat e q t y f a) = (term307 _144530 _144607 _144645 _144654 P pat e q t y g a).
Proof. exact (EQ_MP (@lem8215081 _144529 _144530 _144607 _144645 _144654 P t y q e pat lt2 s g p f a h1 h2 h3 h4 h5 h6 h7) (@lem8185845 _144530 _144607 P p f a h7)). Qed.
Lemma lem8215083 {_144529 _144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (q : type560 _144530 _144607 P) (e : type564 _144530 _144607 _144645 P) (pat : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (g : _144530 -> _144607) (p : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) (h1 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) (h2 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y) (h3 : term224 _144529 _144530 _144607 _144645 P p pat e lt2 s q) (h4 : term141 _144529 _144530 _144607 _144645 P p lt2 s e) (h5 : term141 _144529 _144530 _144607 _144645 P p lt2 s pat) (h6 : term317 _144529 _144530 _144607 P p lt2 s a f g) (h7 : p f a) : (term318 _144529 _144530 _144607 P p lt2 s a f g) = ((term307 _144530 _144607 _144645 _144654 P pat e q t y f a) = (term307 _144530 _144607 _144645 _144654 P pat e q t y g a)).
Proof. exact (prop_ext (fun h8 : term318 _144529 _144530 _144607 P p lt2 s a f g => @lem8215082 _144529 _144530 _144607 _144645 _144654 P t y q e pat lt2 s g p f a h1 h2 h3 h4 h5 h8 h7) (fun h8 : (term307 _144530 _144607 _144645 _144654 P pat e q t y f a) = (term307 _144530 _144607 _144645 _144654 P pat e q t y g a) => @lem8215069 _144529 _144530 _144607 P p lt2 s a f g h6)). Qed.
Lemma lem8215084 {_144529 _144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (q : type560 _144530 _144607 P) (e : type564 _144530 _144607 _144645 P) (pat : type564 _144530 _144607 _144645 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (g : _144530 -> _144607) (p : type560 _144530 _144607 P) (f : _144530 -> _144607) (a : P) (h1 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) (h2 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y) (h3 : term224 _144529 _144530 _144607 _144645 P p pat e lt2 s q) (h4 : term141 _144529 _144530 _144607 _144645 P p lt2 s e) (h5 : term141 _144529 _144530 _144607 _144645 P p lt2 s pat) (h6 : term317 _144529 _144530 _144607 P p lt2 s a f g) (h7 : p f a) : (term307 _144530 _144607 _144645 _144654 P pat e q t y f a) = (term307 _144530 _144607 _144645 _144654 P pat e q t y g a).
Proof. exact (EQ_MP (@lem8215083 _144529 _144530 _144607 _144645 _144654 P t y q e pat lt2 s g p f a h1 h2 h3 h4 h5 h6 h7) (@lem8215069 _144529 _144530 _144607 P p lt2 s a f g h6)). Qed.
Lemma lem8215085 {_144529 _144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (q : type560 _144530 _144607 P) (e : type564 _144530 _144607 _144645 P) (pat : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (h1 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) (h2 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y) (h3 : term224 _144529 _144530 _144607 _144645 P p pat e lt2 s q) (h4 : term141 _144529 _144530 _144607 _144645 P p lt2 s e) (h5 : term141 _144529 _144530 _144607 _144645 P p lt2 s pat) (h6 : term317 _144529 _144530 _144607 P p lt2 s a f g) : (p f a) = ((term307 _144530 _144607 _144645 _144654 P pat e q t y f a) = (term307 _144530 _144607 _144645 _144654 P pat e q t y g a)).
Proof. exact (prop_ext (fun h7 : p f a => @lem8215084 _144529 _144530 _144607 _144645 _144654 P t y q e pat lt2 s g p f a h1 h2 h3 h4 h5 h6 h7) (fun h7 : (term307 _144530 _144607 _144645 _144654 P pat e q t y f a) = (term307 _144530 _144607 _144645 _144654 P pat e q t y g a) => @lem8215070 _144529 _144530 _144607 P p lt2 s a f g h6)). Qed.
Lemma lem8215086 {_144529 _144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (q : type560 _144530 _144607 P) (e : type564 _144530 _144607 _144645 P) (pat : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (a : P) (f : _144530 -> _144607) (g : _144530 -> _144607) (h1 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) (h2 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y) (h3 : term224 _144529 _144530 _144607 _144645 P p pat e lt2 s q) (h4 : term141 _144529 _144530 _144607 _144645 P p lt2 s e) (h5 : term141 _144529 _144530 _144607 _144645 P p lt2 s pat) (h6 : term317 _144529 _144530 _144607 P p lt2 s a f g) : (term307 _144530 _144607 _144645 _144654 P pat e q t y f a) = (term307 _144530 _144607 _144645 _144654 P pat e q t y g a).
Proof. exact (EQ_MP (@lem8215085 _144529 _144530 _144607 _144645 _144654 P t y q e pat p lt2 s a f g h1 h2 h3 h4 h5 h6) (@lem8215070 _144529 _144530 _144607 P p lt2 s a f g h6)). Qed.
Lemma lem8215087 {_144529 _144530 _144607 _144645 _144654 P : Type'} (f : _144530 -> _144607) (g : _144530 -> _144607) (a : P) (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (q : type560 _144530 _144607 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (h1 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) (h2 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y) (h3 : term224 _144529 _144530 _144607 _144645 P p pat e lt2 s q) (h4 : term141 _144529 _144530 _144607 _144645 P p lt2 s e) (h5 : term141 _144529 _144530 _144607 _144645 P p lt2 s pat) : term309 _144529 _144530 _144607 _144645 _144654 P p lt2 s f pat e q t y g a.
Proof. exact (fun h0 : term317 _144529 _144530 _144607 P p lt2 s a f g => @lem8215086 _144529 _144530 _144607 _144645 _144654 P t y q e pat p lt2 s a f g h1 h2 h3 h4 h5 h0). Qed.
Lemma lem8215092 {_144529 _144530 _144607 _144645 _144654 P : Type'} (f : _144530 -> _144607) (g : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (q : type560 _144530 _144607 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (h1 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) (h2 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y) (h3 : term224 _144529 _144530 _144607 _144645 P p pat e lt2 s q) (h4 : term141 _144529 _144530 _144607 _144645 P p lt2 s e) (h5 : term141 _144529 _144530 _144607 _144645 P p lt2 s pat) : term311 _144529 _144530 _144607 _144645 _144654 P p lt2 s f pat e q t y g.
Proof. exact (fun a : P => @lem8215087 _144529 _144530 _144607 _144645 _144654 P f g a t y q e p lt2 s pat h1 h2 h3 h4 h5). Qed.
Lemma lem8215097 {_144529 _144530 _144607 _144645 _144654 P : Type'} (f : _144530 -> _144607) (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (q : type560 _144530 _144607 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (h1 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) (h2 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y) (h3 : term224 _144529 _144530 _144607 _144645 P p pat e lt2 s q) (h4 : term141 _144529 _144530 _144607 _144645 P p lt2 s e) (h5 : term141 _144529 _144530 _144607 _144645 P p lt2 s pat) : term313 _144529 _144530 _144607 _144645 _144654 P p lt2 s f pat e q t y.
Proof. exact (fun g : _144530 -> _144607 => @lem8215092 _144529 _144530 _144607 _144645 _144654 P f g t y q e p lt2 s pat h1 h2 h3 h4 h5). Qed.
Lemma lem8215102 {_144529 _144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (q : type560 _144530 _144607 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (h1 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) (h2 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y) (h3 : term224 _144529 _144530 _144607 _144645 P p pat e lt2 s q) (h4 : term141 _144529 _144530 _144607 _144645 P p lt2 s e) (h5 : term141 _144529 _144530 _144607 _144645 P p lt2 s pat) : term315 _144529 _144530 _144607 _144645 _144654 P p lt2 s pat e q t y.
Proof. exact (fun f : _144530 -> _144607 => @lem8215097 _144529 _144530 _144607 _144645 _144654 P f t y q e p lt2 s pat h1 h2 h3 h4 h5). Qed.
Lemma lem8215103 {_144529 _144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (y : type564 _144530 _144607 _144654 P) (h1 : term234 _144529 _144530 _144607 _144645 _144654 P t p pat e q lt2 s y) : term232 _144529 _144530 _144607 _144645 _144654 P t p pat e q lt2 s y.
Proof. exact (proj2 (@lem8185834 _144529 _144530 _144607 _144645 _144654 P t p pat e q lt2 s y h1)). Qed.
Lemma lem8215104 {_144529 _144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (y : type564 _144530 _144607 _144654 P) (h1 : term234 _144529 _144530 _144607 _144645 _144654 P t p pat e q lt2 s y) : term141 _144529 _144530 _144607 _144645 P p lt2 s pat.
Proof. exact (proj1 (@lem8185834 _144529 _144530 _144607 _144645 _144654 P t p pat e q lt2 s y h1)). Qed.
Lemma lem8215105 {_144529 _144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (y : type564 _144530 _144607 _144654 P) (h1 : term232 _144529 _144530 _144607 _144645 _144654 P t p pat e q lt2 s y) : term230 _144529 _144530 _144607 _144645 _144654 P t p pat e q lt2 s y.
Proof. exact (proj2 (@lem8185835 _144529 _144530 _144607 _144645 _144654 P t p pat e q lt2 s y h1)). Qed.
Lemma lem8215106 {_144529 _144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (y : type564 _144530 _144607 _144654 P) (h1 : term232 _144529 _144530 _144607 _144645 _144654 P t p pat e q lt2 s y) : term141 _144529 _144530 _144607 _144645 P p lt2 s e.
Proof. exact (proj1 (@lem8185835 _144529 _144530 _144607 _144645 _144654 P t p pat e q lt2 s y h1)). Qed.
Lemma lem8215107 {_144529 _144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (y : type564 _144530 _144607 _144654 P) (h1 : term230 _144529 _144530 _144607 _144645 _144654 P t p pat e q lt2 s y) : term228 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y.
Proof. exact (proj2 (@lem8185837 _144529 _144530 _144607 _144645 _144654 P t p pat e q lt2 s y h1)). Qed.
Lemma lem8215108 {_144529 _144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (y : type564 _144530 _144607 _144654 P) (h1 : term230 _144529 _144530 _144607 _144645 _144654 P t p pat e q lt2 s y) : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t.
Proof. exact (proj1 (@lem8185837 _144529 _144530 _144607 _144645 _144654 P t p pat e q lt2 s y h1)). Qed.
Lemma lem8215109 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (y : type564 _144530 _144607 _144654 P) (h1 : term228 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y) : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y.
Proof. exact (proj2 (@lem8185839 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y h1)). Qed.
Lemma lem8215110 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (y : type564 _144530 _144607 _144654 P) (h1 : term228 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y) : term224 _144529 _144530 _144607 _144645 P p pat e lt2 s q.
Proof. exact (proj1 (@lem8185839 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y h1)). Qed.
Lemma lem8215111 {_144529 _144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (q : type560 _144530 _144607 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (h1 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) (h2 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y) (h3 : term224 _144529 _144530 _144607 _144645 P p pat e lt2 s q) (h4 : term141 _144529 _144530 _144607 _144645 P p lt2 s e) (h5 : term141 _144529 _144530 _144607 _144645 P p lt2 s pat) : (term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y) = (term315 _144529 _144530 _144607 _144645 _144654 P p lt2 s pat e q t y).
Proof. exact (prop_ext (fun h6 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y => @lem8215102 _144529 _144530 _144607 _144645 _144654 P t y q e p lt2 s pat h1 h2 h3 h4 h5) (fun h6 : term315 _144529 _144530 _144607 _144645 _144654 P p lt2 s pat e q t y => @lem8185841 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y h2)). Qed.
Lemma lem8215112 {_144529 _144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (q : type560 _144530 _144607 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (h1 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) (h2 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y) (h3 : term224 _144529 _144530 _144607 _144645 P p pat e lt2 s q) (h4 : term141 _144529 _144530 _144607 _144645 P p lt2 s e) (h5 : term141 _144529 _144530 _144607 _144645 P p lt2 s pat) : term315 _144529 _144530 _144607 _144645 _144654 P p lt2 s pat e q t y.
Proof. exact (EQ_MP (@lem8215111 _144529 _144530 _144607 _144645 _144654 P t y q e p lt2 s pat h1 h2 h3 h4 h5) (@lem8185841 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y h2)). Qed.
Lemma lem8215113 {_144529 _144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (q : type560 _144530 _144607 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (h1 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) (h2 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y) (h3 : term224 _144529 _144530 _144607 _144645 P p pat e lt2 s q) (h4 : term141 _144529 _144530 _144607 _144645 P p lt2 s e) (h5 : term141 _144529 _144530 _144607 _144645 P p lt2 s pat) : (term224 _144529 _144530 _144607 _144645 P p pat e lt2 s q) = (term315 _144529 _144530 _144607 _144645 _144654 P p lt2 s pat e q t y).
Proof. exact (prop_ext (fun h6 : term224 _144529 _144530 _144607 _144645 P p pat e lt2 s q => @lem8215112 _144529 _144530 _144607 _144645 _144654 P t y q e p lt2 s pat h1 h2 h3 h4 h5) (fun h6 : term315 _144529 _144530 _144607 _144645 _144654 P p lt2 s pat e q t y => @lem8185842 _144529 _144530 _144607 _144645 P p pat e lt2 s q h3)). Qed.
Lemma lem8215114 {_144529 _144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) (q : type560 _144530 _144607 P) (e : type564 _144530 _144607 _144645 P) (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (h1 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) (h2 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y) (h3 : term224 _144529 _144530 _144607 _144645 P p pat e lt2 s q) (h4 : term141 _144529 _144530 _144607 _144645 P p lt2 s e) (h5 : term141 _144529 _144530 _144607 _144645 P p lt2 s pat) : term315 _144529 _144530 _144607 _144645 _144654 P p lt2 s pat e q t y.
Proof. exact (EQ_MP (@lem8215113 _144529 _144530 _144607 _144645 _144654 P t y q e p lt2 s pat h1 h2 h3 h4 h5) (@lem8185842 _144529 _144530 _144607 _144645 P p pat e lt2 s q h3)). Qed.
Lemma lem8215115 {_144529 _144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (y : type564 _144530 _144607 _144654 P) (h1 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) (h2 : term224 _144529 _144530 _144607 _144645 P p pat e lt2 s q) (h3 : term141 _144529 _144530 _144607 _144645 P p lt2 s e) (h4 : term141 _144529 _144530 _144607 _144645 P p lt2 s pat) (h5 : term228 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y) : (term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y) = (term315 _144529 _144530 _144607 _144645 _144654 P p lt2 s pat e q t y).
Proof. exact (prop_ext (fun h6 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y => @lem8215114 _144529 _144530 _144607 _144645 _144654 P t y q e p lt2 s pat h1 h6 h2 h3 h4) (fun h6 : term315 _144529 _144530 _144607 _144645 _144654 P p lt2 s pat e q t y => @lem8215109 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y h5)). Qed.
Lemma lem8215116 {_144529 _144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (y : type564 _144530 _144607 _144654 P) (h1 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) (h2 : term224 _144529 _144530 _144607 _144645 P p pat e lt2 s q) (h3 : term141 _144529 _144530 _144607 _144645 P p lt2 s e) (h4 : term141 _144529 _144530 _144607 _144645 P p lt2 s pat) (h5 : term228 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y) : term315 _144529 _144530 _144607 _144645 _144654 P p lt2 s pat e q t y.
Proof. exact (EQ_MP (@lem8215115 _144529 _144530 _144607 _144645 _144654 P t p pat e q lt2 s y h1 h2 h3 h4 h5) (@lem8215109 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y h5)). Qed.
Lemma lem8215117 {_144529 _144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (y : type564 _144530 _144607 _144654 P) (h1 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) (h2 : term141 _144529 _144530 _144607 _144645 P p lt2 s e) (h3 : term141 _144529 _144530 _144607 _144645 P p lt2 s pat) (h4 : term228 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y) : (term224 _144529 _144530 _144607 _144645 P p pat e lt2 s q) = (term315 _144529 _144530 _144607 _144645 _144654 P p lt2 s pat e q t y).
Proof. exact (prop_ext (fun h5 : term224 _144529 _144530 _144607 _144645 P p pat e lt2 s q => @lem8215116 _144529 _144530 _144607 _144645 _144654 P t p pat e q lt2 s y h1 h5 h2 h3 h4) (fun h5 : term315 _144529 _144530 _144607 _144645 _144654 P p lt2 s pat e q t y => @lem8215110 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y h4)). Qed.
Lemma lem8215118 {_144529 _144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (y : type564 _144530 _144607 _144654 P) (h1 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) (h2 : term141 _144529 _144530 _144607 _144645 P p lt2 s e) (h3 : term141 _144529 _144530 _144607 _144645 P p lt2 s pat) (h4 : term228 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y) : term315 _144529 _144530 _144607 _144645 _144654 P p lt2 s pat e q t y.
Proof. exact (EQ_MP (@lem8215117 _144529 _144530 _144607 _144645 _144654 P t p pat e q lt2 s y h1 h2 h3 h4) (@lem8215110 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y h4)). Qed.
Lemma lem8215119 {_144529 _144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (y : type564 _144530 _144607 _144654 P) (h1 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) (h2 : term141 _144529 _144530 _144607 _144645 P p lt2 s e) (h3 : term141 _144529 _144530 _144607 _144645 P p lt2 s pat) (h4 : term228 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y) : (term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) = (term315 _144529 _144530 _144607 _144645 _144654 P p lt2 s pat e q t y).
Proof. exact (prop_ext (fun h5 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t => @lem8215118 _144529 _144530 _144607 _144645 _144654 P t p pat e q lt2 s y h1 h2 h3 h4) (fun h5 : term315 _144529 _144530 _144607 _144645 _144654 P p lt2 s pat e q t y => @lem8185840 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t h1)). Qed.
Lemma lem8215120 {_144529 _144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (y : type564 _144530 _144607 _144654 P) (h1 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) (h2 : term141 _144529 _144530 _144607 _144645 P p lt2 s e) (h3 : term141 _144529 _144530 _144607 _144645 P p lt2 s pat) (h4 : term228 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y) : term315 _144529 _144530 _144607 _144645 _144654 P p lt2 s pat e q t y.
Proof. exact (EQ_MP (@lem8215119 _144529 _144530 _144607 _144645 _144654 P t p pat e q lt2 s y h1 h2 h3 h4) (@lem8185840 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t h1)). Qed.
Lemma lem8215121 {_144529 _144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (y : type564 _144530 _144607 _144654 P) (h1 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) (h2 : term141 _144529 _144530 _144607 _144645 P p lt2 s e) (h3 : term141 _144529 _144530 _144607 _144645 P p lt2 s pat) (h4 : term230 _144529 _144530 _144607 _144645 _144654 P t p pat e q lt2 s y) : (term228 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y) = (term315 _144529 _144530 _144607 _144645 _144654 P p lt2 s pat e q t y).
Proof. exact (prop_ext (fun h5 : term228 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s y => @lem8215120 _144529 _144530 _144607 _144645 _144654 P t p pat e q lt2 s y h1 h2 h3 h5) (fun h5 : term315 _144529 _144530 _144607 _144645 _144654 P p lt2 s pat e q t y => @lem8215107 _144529 _144530 _144607 _144645 _144654 P t p pat e q lt2 s y h4)). Qed.
Lemma lem8215122 {_144529 _144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (y : type564 _144530 _144607 _144654 P) (h1 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) (h2 : term141 _144529 _144530 _144607 _144645 P p lt2 s e) (h3 : term141 _144529 _144530 _144607 _144645 P p lt2 s pat) (h4 : term230 _144529 _144530 _144607 _144645 _144654 P t p pat e q lt2 s y) : term315 _144529 _144530 _144607 _144645 _144654 P p lt2 s pat e q t y.
Proof. exact (EQ_MP (@lem8215121 _144529 _144530 _144607 _144645 _144654 P t p pat e q lt2 s y h1 h2 h3 h4) (@lem8215107 _144529 _144530 _144607 _144645 _144654 P t p pat e q lt2 s y h4)). Qed.
Lemma lem8215123 {_144529 _144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (y : type564 _144530 _144607 _144654 P) (h1 : term141 _144529 _144530 _144607 _144645 P p lt2 s e) (h2 : term141 _144529 _144530 _144607 _144645 P p lt2 s pat) (h3 : term230 _144529 _144530 _144607 _144645 _144654 P t p pat e q lt2 s y) : (term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t) = (term315 _144529 _144530 _144607 _144645 _144654 P p lt2 s pat e q t y).
Proof. exact (prop_ext (fun h4 : term184 _144529 _144530 _144607 _144645 _144654 P p pat e q lt2 s t => @lem8215122 _144529 _144530 _144607 _144645 _144654 P t p pat e q lt2 s y h4 h1 h2 h3) (fun h4 : term315 _144529 _144530 _144607 _144645 _144654 P p lt2 s pat e q t y => @lem8215108 _144529 _144530 _144607 _144645 _144654 P t p pat e q lt2 s y h3)). Qed.
Lemma lem8215124 {_144529 _144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (y : type564 _144530 _144607 _144654 P) (h1 : term141 _144529 _144530 _144607 _144645 P p lt2 s e) (h2 : term141 _144529 _144530 _144607 _144645 P p lt2 s pat) (h3 : term230 _144529 _144530 _144607 _144645 _144654 P t p pat e q lt2 s y) : term315 _144529 _144530 _144607 _144645 _144654 P p lt2 s pat e q t y.
Proof. exact (EQ_MP (@lem8215123 _144529 _144530 _144607 _144645 _144654 P t p pat e q lt2 s y h1 h2 h3) (@lem8215108 _144529 _144530 _144607 _144645 _144654 P t p pat e q lt2 s y h3)). Qed.
Lemma lem8215125 {_144529 _144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (y : type564 _144530 _144607 _144654 P) (h1 : term141 _144529 _144530 _144607 _144645 P p lt2 s e) (h2 : term141 _144529 _144530 _144607 _144645 P p lt2 s pat) (h3 : term230 _144529 _144530 _144607 _144645 _144654 P t p pat e q lt2 s y) : (term141 _144529 _144530 _144607 _144645 P p lt2 s e) = (term315 _144529 _144530 _144607 _144645 _144654 P p lt2 s pat e q t y).
Proof. exact (prop_ext (fun h4 : term141 _144529 _144530 _144607 _144645 P p lt2 s e => @lem8215124 _144529 _144530 _144607 _144645 _144654 P t p pat e q lt2 s y h1 h2 h3) (fun h4 : term315 _144529 _144530 _144607 _144645 _144654 P p lt2 s pat e q t y => @lem8185838 _144529 _144530 _144607 _144645 P p lt2 s e h1)). Qed.
Lemma lem8215126 {_144529 _144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (y : type564 _144530 _144607 _144654 P) (h1 : term141 _144529 _144530 _144607 _144645 P p lt2 s e) (h2 : term141 _144529 _144530 _144607 _144645 P p lt2 s pat) (h3 : term230 _144529 _144530 _144607 _144645 _144654 P t p pat e q lt2 s y) : term315 _144529 _144530 _144607 _144645 _144654 P p lt2 s pat e q t y.
Proof. exact (EQ_MP (@lem8215125 _144529 _144530 _144607 _144645 _144654 P t p pat e q lt2 s y h1 h2 h3) (@lem8185838 _144529 _144530 _144607 _144645 P p lt2 s e h1)). Qed.
Lemma lem8215127 {_144529 _144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (y : type564 _144530 _144607 _144654 P) (h1 : term141 _144529 _144530 _144607 _144645 P p lt2 s e) (h2 : term141 _144529 _144530 _144607 _144645 P p lt2 s pat) (h3 : term232 _144529 _144530 _144607 _144645 _144654 P t p pat e q lt2 s y) : (term230 _144529 _144530 _144607 _144645 _144654 P t p pat e q lt2 s y) = (term315 _144529 _144530 _144607 _144645 _144654 P p lt2 s pat e q t y).
Proof. exact (prop_ext (fun h4 : term230 _144529 _144530 _144607 _144645 _144654 P t p pat e q lt2 s y => @lem8215126 _144529 _144530 _144607 _144645 _144654 P t p pat e q lt2 s y h1 h2 h4) (fun h4 : term315 _144529 _144530 _144607 _144645 _144654 P p lt2 s pat e q t y => @lem8215105 _144529 _144530 _144607 _144645 _144654 P t p pat e q lt2 s y h3)). Qed.
Lemma lem8215128 {_144529 _144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (y : type564 _144530 _144607 _144654 P) (h1 : term141 _144529 _144530 _144607 _144645 P p lt2 s e) (h2 : term141 _144529 _144530 _144607 _144645 P p lt2 s pat) (h3 : term232 _144529 _144530 _144607 _144645 _144654 P t p pat e q lt2 s y) : term315 _144529 _144530 _144607 _144645 _144654 P p lt2 s pat e q t y.
Proof. exact (EQ_MP (@lem8215127 _144529 _144530 _144607 _144645 _144654 P t p pat e q lt2 s y h1 h2 h3) (@lem8215105 _144529 _144530 _144607 _144645 _144654 P t p pat e q lt2 s y h3)). Qed.
Lemma lem8215129 {_144529 _144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (y : type564 _144530 _144607 _144654 P) (h1 : term141 _144529 _144530 _144607 _144645 P p lt2 s pat) (h2 : term232 _144529 _144530 _144607 _144645 _144654 P t p pat e q lt2 s y) : (term141 _144529 _144530 _144607 _144645 P p lt2 s e) = (term315 _144529 _144530 _144607 _144645 _144654 P p lt2 s pat e q t y).
Proof. exact (prop_ext (fun h3 : term141 _144529 _144530 _144607 _144645 P p lt2 s e => @lem8215128 _144529 _144530 _144607 _144645 _144654 P t p pat e q lt2 s y h3 h1 h2) (fun h3 : term315 _144529 _144530 _144607 _144645 _144654 P p lt2 s pat e q t y => @lem8215106 _144529 _144530 _144607 _144645 _144654 P t p pat e q lt2 s y h2)). Qed.
Lemma lem8215130 {_144529 _144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (y : type564 _144530 _144607 _144654 P) (h1 : term141 _144529 _144530 _144607 _144645 P p lt2 s pat) (h2 : term232 _144529 _144530 _144607 _144645 _144654 P t p pat e q lt2 s y) : term315 _144529 _144530 _144607 _144645 _144654 P p lt2 s pat e q t y.
Proof. exact (EQ_MP (@lem8215129 _144529 _144530 _144607 _144645 _144654 P t p pat e q lt2 s y h1 h2) (@lem8215106 _144529 _144530 _144607 _144645 _144654 P t p pat e q lt2 s y h2)). Qed.
Lemma lem8215131 {_144529 _144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (y : type564 _144530 _144607 _144654 P) (h1 : term141 _144529 _144530 _144607 _144645 P p lt2 s pat) (h2 : term232 _144529 _144530 _144607 _144645 _144654 P t p pat e q lt2 s y) : (term141 _144529 _144530 _144607 _144645 P p lt2 s pat) = (term315 _144529 _144530 _144607 _144645 _144654 P p lt2 s pat e q t y).
Proof. exact (prop_ext (fun h3 : term141 _144529 _144530 _144607 _144645 P p lt2 s pat => @lem8215130 _144529 _144530 _144607 _144645 _144654 P t p pat e q lt2 s y h1 h2) (fun h3 : term315 _144529 _144530 _144607 _144645 _144654 P p lt2 s pat e q t y => @lem8185836 _144529 _144530 _144607 _144645 P p lt2 s pat h1)). Qed.
Lemma lem8215132 {_144529 _144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (y : type564 _144530 _144607 _144654 P) (h1 : term141 _144529 _144530 _144607 _144645 P p lt2 s pat) (h2 : term232 _144529 _144530 _144607 _144645 _144654 P t p pat e q lt2 s y) : term315 _144529 _144530 _144607 _144645 _144654 P p lt2 s pat e q t y.
Proof. exact (EQ_MP (@lem8215131 _144529 _144530 _144607 _144645 _144654 P t p pat e q lt2 s y h1 h2) (@lem8185836 _144529 _144530 _144607 _144645 P p lt2 s pat h1)). Qed.
Lemma lem8215133 {_144529 _144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (y : type564 _144530 _144607 _144654 P) (h1 : term141 _144529 _144530 _144607 _144645 P p lt2 s pat) (h2 : term234 _144529 _144530 _144607 _144645 _144654 P t p pat e q lt2 s y) : (term232 _144529 _144530 _144607 _144645 _144654 P t p pat e q lt2 s y) = (term315 _144529 _144530 _144607 _144645 _144654 P p lt2 s pat e q t y).
Proof. exact (prop_ext (fun h3 : term232 _144529 _144530 _144607 _144645 _144654 P t p pat e q lt2 s y => @lem8215132 _144529 _144530 _144607 _144645 _144654 P t p pat e q lt2 s y h1 h3) (fun h3 : term315 _144529 _144530 _144607 _144645 _144654 P p lt2 s pat e q t y => @lem8215103 _144529 _144530 _144607 _144645 _144654 P t p pat e q lt2 s y h2)). Qed.
Lemma lem8215134 {_144529 _144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (y : type564 _144530 _144607 _144654 P) (h1 : term141 _144529 _144530 _144607 _144645 P p lt2 s pat) (h2 : term234 _144529 _144530 _144607 _144645 _144654 P t p pat e q lt2 s y) : term315 _144529 _144530 _144607 _144645 _144654 P p lt2 s pat e q t y.
Proof. exact (EQ_MP (@lem8215133 _144529 _144530 _144607 _144645 _144654 P t p pat e q lt2 s y h1 h2) (@lem8215103 _144529 _144530 _144607 _144645 _144654 P t p pat e q lt2 s y h2)). Qed.
Lemma lem8215135 {_144529 _144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (y : type564 _144530 _144607 _144654 P) (h1 : term234 _144529 _144530 _144607 _144645 _144654 P t p pat e q lt2 s y) : (term141 _144529 _144530 _144607 _144645 P p lt2 s pat) = (term315 _144529 _144530 _144607 _144645 _144654 P p lt2 s pat e q t y).
Proof. exact (prop_ext (fun h2 : term141 _144529 _144530 _144607 _144645 P p lt2 s pat => @lem8215134 _144529 _144530 _144607 _144645 _144654 P t p pat e q lt2 s y h2 h1) (fun h2 : term315 _144529 _144530 _144607 _144645 _144654 P p lt2 s pat e q t y => @lem8215104 _144529 _144530 _144607 _144645 _144654 P t p pat e q lt2 s y h1)). Qed.
Lemma lem8215136 {_144529 _144530 _144607 _144645 _144654 P : Type'} (t : type564 _144530 _144607 _144654 P) (p : type560 _144530 _144607 P) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (y : type564 _144530 _144607 _144654 P) (h1 : term234 _144529 _144530 _144607 _144645 _144654 P t p pat e q lt2 s y) : term315 _144529 _144530 _144607 _144645 _144654 P p lt2 s pat e q t y.
Proof. exact (EQ_MP (@lem8215135 _144529 _144530 _144607 _144645 _144654 P t p pat e q lt2 s y h1) (@lem8215104 _144529 _144530 _144607 _144645 _144654 P t p pat e q lt2 s y h1)). Qed.
Lemma lem8215137 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) : term316 _144529 _144530 _144607 _144645 _144654 P p lt2 s pat e q t y.
Proof. exact (fun h0 : term234 _144529 _144530 _144607 _144645 _144654 P t p pat e q lt2 s y => @lem8215136 _144529 _144530 _144607 _144645 _144654 P t p pat e q lt2 s y h0). Qed.
Lemma lem8215138 {_144529 _144530 _144607 _144645 _144654 P : Type'} (p : type560 _144530 _144607 P) (lt2 : type1470 _144529 _144530) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) : term302 _144529 _144530 _144607 _144645 _144654 P p lt2 s pat e q t y.
Proof. exact (EQ_MP (@lem8185833 _144529 _144530 _144607 _144645 _144654 P p lt2 s pat e q t y) (@lem8215137 _144529 _144530 _144607 _144645 _144654 P p lt2 s pat e q t y)). Qed.
Lemma lem8215139 {_144529 _144530 _144607 _144645 _144654 P : Type'} (lt2 : type1470 _144529 _144530) (p : type560 _144530 _144607 P) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) (y : type564 _144530 _144607 _144654 P) : term301 _144529 _144530 _144607 _144645 _144654 P lt2 p s pat e q t y.
Proof. exact (EQ_MP (@lem8185538 _144529 _144530 _144607 _144645 _144654 P lt2 p s pat e q t y) (@lem8215138 _144529 _144530 _144607 _144645 _144654 P p lt2 s pat e q t y)). Qed.
Lemma lem8215144 {_144529 _144530 _144607 _144645 _144654 P : Type'} (lt2 : type1470 _144529 _144530) (p : type560 _144530 _144607 P) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) (t : type564 _144530 _144607 _144654 P) : term1708 _144529 _144530 _144607 _144645 _144654 P lt2 p s pat e q t.
Proof. exact (fun y : type564 _144530 _144607 _144654 P => @lem8215139 _144529 _144530 _144607 _144645 _144654 P lt2 p s pat e q t y). Qed.
Lemma lem8215149 {_144529 _144530 _144607 _144645 _144654 P : Type'} (lt2 : type1470 _144529 _144530) (p : type560 _144530 _144607 P) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (e : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) : term1709 _144529 _144530 _144607 _144645 _144654 P lt2 p s pat e q.
Proof. exact (fun t : type564 _144530 _144607 _144654 P => @lem8215144 _144529 _144530 _144607 _144645 _144654 P lt2 p s pat e q t). Qed.
Lemma lem8215154 {_144529 _144530 _144607 _144645 _144654 P : Type'} (lt2 : type1470 _144529 _144530) (p : type560 _144530 _144607 P) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) (q : type560 _144530 _144607 P) : term1710 _144529 _144530 _144607 _144645 _144654 P lt2 p s pat q.
Proof. exact (fun e : type564 _144530 _144607 _144645 P => @lem8215149 _144529 _144530 _144607 _144645 _144654 P lt2 p s pat e q). Qed.
Lemma lem8215159 {_144529 _144530 _144607 _144645 _144654 P : Type'} (lt2 : type1470 _144529 _144530) (p : type560 _144530 _144607 P) (s : P -> _144529) (pat : type564 _144530 _144607 _144645 P) : term1711 _144529 _144530 _144607 _144645 _144654 P lt2 p s pat.
Proof. exact (fun q : type560 _144530 _144607 P => @lem8215154 _144529 _144530 _144607 _144645 _144654 P lt2 p s pat q). Qed.
Lemma lem8215164 {_144529 _144530 _144607 _144645 _144654 P : Type'} (lt2 : type1470 _144529 _144530) (p : type560 _144530 _144607 P) (s : P -> _144529) : term1712 _144529 _144530 _144607 _144645 _144654 P lt2 p s.
Proof. exact (fun pat : type564 _144530 _144607 _144645 P => @lem8215159 _144529 _144530 _144607 _144645 _144654 P lt2 p s pat). Qed.
Lemma lem8215169 {_144529 _144530 _144607 _144645 _144654 P : Type'} (lt2 : type1470 _144529 _144530) (p : type560 _144530 _144607 P) : term1713 _144529 _144530 _144607 _144645 _144654 P lt2 p.
Proof. exact (fun s : P -> _144529 => @lem8215164 _144529 _144530 _144607 _144645 _144654 P lt2 p s). Qed.
Lemma lem8215174 {_144529 _144530 _144607 _144645 _144654 P : Type'} (lt2 : type1470 _144529 _144530) : term1714 _144529 _144530 _144607 _144645 _144654 P lt2.
Proof. exact (fun p : type560 _144530 _144607 P => @lem8215169 _144529 _144530 _144607 _144645 _144654 P lt2 p). Qed.
Lemma lem8215179 {_144529 _144530 _144607 _144645 _144654 P : Type'} : term1715 _144529 _144530 _144607 _144645 _144654 P.
Proof. exact (fun lt2 : type1470 _144529 _144530 => @lem8215174 _144529 _144530 _144607 _144645 _144654 P lt2). Qed.
