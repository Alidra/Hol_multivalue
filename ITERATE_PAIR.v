Require Import coq.
Require Import theory_hol.
Require Import hol_types.
Require Import hol_terms.
Require Import hol_axioms.
Require Import hol_type_abbrevs.
Require Import ITERATE_PAIR_term_abbrevs.
Require Import DISJ_ACI_spec.
Require Import INT_POS_spec.
Require Import ITERATE_CLAUSES_NUMSEG_spec.
Require Import MULT_EQ_0_spec.
Require Import monoidal_spec.
Require Import thm0_spec.
Require Import thm1005477_spec.
Require Import thm1006570_spec.
Require Import thm1007663_spec.
Require Import thm1008952_spec.
Require Import thm1009824_spec.
Require Import thm1013352_spec.
Require Import thm1013364_spec.
Require Import thm1032092_spec.
Require Import thm1032118_spec.
Require Import thm10578_spec.
Require Import thm10597_spec.
Require Import thm12653_spec.
Require Import thm13473_spec.
Require Import thm1365106_spec.
Require Import thm1365406_spec.
Require Import thm1365721_spec.
Require Import thm1367111_spec.
Require Import thm1367247_spec.
Require Import thm1367248_spec.
Require Import thm1367254_spec.
Require Import thm1367303_spec.
Require Import thm1367770_spec.
Require Import thm1367771_spec.
Require Import thm1386578_spec.
Require Import thm1396750_spec.
Require Import thm14781_spec.
Require Import thm15222_spec.
Require Import thm16474_spec.
Require Import thm16485_spec.
Require Import thm16506_spec.
Require Import thm16507_spec.
Require Import thm16933_spec.
Require Import thm17045_spec.
Require Import thm17160_spec.
Require Import thm17362_spec.
Require Import thm17500_spec.
Require Import thm17784_spec.
Require Import thm1809_spec.
Require Import thm1810_spec.
Require Import thm1833_spec.
Require Import thm18392_spec.
Require Import thm1862_spec.
Require Import thm1863_spec.
Require Import thm18898_spec.
Require Import thm18899_spec.
Require Import thm18904_spec.
Require Import thm18905_spec.
Require Import thm18910_spec.
Require Import thm18911_spec.
Require Import thm18916_spec.
Require Import thm18917_spec.
Require Import thm18922_spec.
Require Import thm18923_spec.
Require Import thm18952_spec.
Require Import thm18953_spec.
Require Import thm19006_spec.
Require Import thm19007_spec.
Require Import thm19018_spec.
Require Import thm19019_spec.
Require Import thm19024_spec.
Require Import thm19025_spec.
Require Import thm19030_spec.
Require Import thm19031_spec.
Require Import thm19158_spec.
Require Import thm19367_spec.
Require Import thm19490_spec.
Require Import thm19792_spec.
Require Import thm1980010_spec.
Require Import thm1980011_spec.
Require Import thm1980026_spec.
Require Import thm1980255_spec.
Require Import thm1980259_spec.
Require Import thm1980260_spec.
Require Import thm1980265_spec.
Require Import thm1980266_spec.
Require Import thm1981473_spec.
Require Import thm1981474_spec.
Require Import thm1981475_spec.
Require Import thm1981613_spec.
Require Import thm1982627_spec.
Require Import thm1982628_spec.
Require Import thm1982711_spec.
Require Import thm1982713_spec.
Require Import thm1982715_spec.
Require Import thm1982719_spec.
Require Import thm1982721_spec.
Require Import thm1982723_spec.
Require Import thm1982733_spec.
Require Import thm1982749_spec.
Require Import thm1982753_spec.
Require Import thm1982755_spec.
Require Import thm1982759_spec.
Require Import thm1982761_spec.
Require Import thm1982763_spec.
Require Import thm1982781_spec.
Require Import thm1982792_spec.
Require Import thm1988287_spec.
Require Import thm1988293_spec.
Require Import thm1988332_spec.
Require Import thm1988336_spec.
Require Import thm1988342_spec.
Require Import thm20230_spec.
Require Import thm20661_spec.
Require Import thm20662_spec.
Require Import thm20664_spec.
Require Import thm20665_spec.
Require Import thm20668_spec.
Require Import thm20682_spec.
Require Import thm20764_spec.
Require Import thm20780_spec.
Require Import thm20789_spec.
Require Import thm20895_spec.
Require Import thm21021_spec.
Require Import thm21114_spec.
Require Import thm21182_spec.
Require Import thm21385_spec.
Require Import thm21386_spec.
Require Import thm2318495_spec.
Require Import thm2318497_spec.
Require Import thm2318532_spec.
Require Import thm2318533_spec.
Require Import thm2318538_spec.
Require Import thm2318539_spec.
Require Import thm2318544_spec.
Require Import thm2318545_spec.
Require Import thm2318568_spec.
Require Import thm2318569_spec.
Require Import thm2318574_spec.
Require Import thm2318575_spec.
Require Import thm2318604_spec.
Require Import thm2841377_spec.
Require Import thm2841378_spec.
Require Import thm2841383_spec.
Require Import thm2841384_spec.
Require Import thm2841407_spec.
Require Import thm2841408_spec.
Require Import thm2841413_spec.
Require Import thm2841414_spec.
Require Import thm2841416_spec.
Require Import thm2841417_spec.
Require Import thm513079_spec.
Require Import thm513870_spec.
Require Import thm514290_spec.
Require Import thm514761_spec.
Require Import thm515543_spec.
Require Import thm521920_spec.
Require Import thm522075_spec.
Require Import thm69_spec.
Require Import thm7_spec.
Require Import thm706821_spec.
Require Import thm706885_spec.
Require Import thm706949_spec.
Require Import thm706951_spec.
Require Import thm707013_spec.
Require Import thm707079_spec.
Require Import thm707207_spec.
Require Import thm75622_spec.
Require Import thm75623_spec.
Require Import thm82_spec.
Require Import thm912739_spec.
Require Import thm912803_spec.
Require Import thm940073_spec.
Require Import thm940532_spec.
Require Import thm994717_spec.
Require Import thm996237_spec.
Require Import thm996238_spec.
Require Import thm996664_spec.
Lemma lem6198370 (m : nat) : (S m) = (term0 m).
Proof. exact (EQ_MP (@lem2841417 m) (@lem2841416 m)). Qed.
Lemma lem6198371 (n : nat) : (S n) = (term0 n).
Proof. exact (@lem6198370 n). Qed.
Lemma lem6198372 : term1 = term1.
Proof. exact (eq_refl term1). Qed.
Lemma lem6198373 (n : nat) : (term2 n) = (term3 n).
Proof. exact (MK_COMB (@lem6198372) (@lem6198371 n)). Qed.
Lemma lem6198374 : Nat.add = Nat.add.
Proof. exact (eq_refl Nat.add). Qed.
Lemma lem6198375 (n : nat) : (term4 n) = (term5 n).
Proof. exact (MK_COMB (@lem6198374) (@lem6198373 n)). Qed.
Lemma lem6198376 : term6 = term6.
Proof. exact (eq_refl term6). Qed.
Lemma lem6198377 (n : nat) : (term7 n) = (term8 n).
Proof. exact (MK_COMB (@lem6198375 n) (@lem6198376)). Qed.
Lemma lem6198378 : (@eq nat) = (@eq nat).
Proof. exact (eq_refl (@eq nat)). Qed.
Lemma lem6198379 (n : nat) : (term9 n) = (term10 n).
Proof. exact (MK_COMB (@lem6198378) (@lem6198377 n)). Qed.
Lemma lem6198381 (m : nat) : (S m) = (term0 m).
Proof. exact (EQ_MP (@lem2841417 m) (@lem2841416 m)). Qed.
Lemma lem6198382 (n : nat) : (term11 n) = (term12 n).
Proof. exact (@lem6198381 (term13 n)). Qed.
Lemma lem6198383 : S = S.
Proof. exact (eq_refl S). Qed.
Lemma lem6198384 (n : nat) : (term14 n) = (term15 n).
Proof. exact (MK_COMB (@lem6198383) (@lem6198382 n)). Qed.
Lemma lem6198386 (m : nat) : (S m) = (term0 m).
Proof. exact (EQ_MP (@lem2841417 m) (@lem2841416 m)). Qed.
Lemma lem6198387 (n : nat) : (term15 n) = (term16 n).
Proof. exact (@lem6198386 (term12 n)). Qed.
Lemma lem6198388 (n : nat) : (term14 n) = (term16 n).
Proof. exact (TRANS (@lem6198384 n) (@lem6198387 n)). Qed.
Lemma lem6198390 (n : nat) : ((term7 n) = (term14 n)) = ((term8 n) = (term16 n)).
Proof. exact (MK_COMB (@lem6198379 n) (@lem6198388 n)). Qed.
Lemma lem6198391 : term6 = term6.
Proof. exact (eq_refl term6). Qed.
Lemma lem6198409 (n : nat) : (term12 n) = (term17 n).
Proof. exact (@lem1032092 (term18 n) term6 term6). Qed.
Lemma lem6198410 : term19 = term20.
Proof. exact (@lem706885). Qed.
Lemma lem6198411 : (term19 = term20) = (term21 = term22).
Proof. exact (@lem1006570 (BIT1 0) (BIT1 0) term20). Qed.
Lemma lem6198412 : term21 = term22.
Proof. exact (EQ_MP (@lem6198411) (@lem6198410)). Qed.
Lemma lem6198413 (n : nat) : (term23 n) = (term23 n).
Proof. exact (eq_refl (term23 n)). Qed.
Lemma lem6198414 (n : nat) : (term17 n) = (term24 n).
Proof. exact (MK_COMB (@lem6198413 n) (@lem6198412)). Qed.
Lemma lem6198416 (n : nat) : (term12 n) = (term24 n).
Proof. exact (TRANS (@lem6198409 n) (@lem6198414 n)). Qed.
Lemma lem6198417 : Nat.add = Nat.add.
Proof. exact (eq_refl Nat.add). Qed.
Lemma lem6198418 (n : nat) : (term25 n) = (term26 n).
Proof. exact (MK_COMB (@lem6198417) (@lem6198416 n)). Qed.
Lemma lem6198419 (n : nat) : (term16 n) = (term27 n).
Proof. exact (MK_COMB (@lem6198418 n) (@lem6198391)). Qed.
Lemma lem6198420 (n : nat) : (term27 n) = (term28 n).
Proof. exact (@lem1032092 (term18 n) term22 term6). Qed.
Lemma lem6198421 : term29 = term30.
Proof. exact (@lem706949). Qed.
Lemma lem6198422 : (term29 = term30) = (term31 = term32).
Proof. exact (@lem1006570 term20 (BIT1 0) term30). Qed.
Lemma lem6198423 : term31 = term32.
Proof. exact (EQ_MP (@lem6198422) (@lem6198421)). Qed.
Lemma lem6198424 (n : nat) : (term23 n) = (term23 n).
Proof. exact (eq_refl (term23 n)). Qed.
Lemma lem6198425 (n : nat) : (term28 n) = (term33 n).
Proof. exact (MK_COMB (@lem6198424 n) (@lem6198423)). Qed.
Lemma lem6198426 (n : nat) : (term27 n) = (term33 n).
Proof. exact (TRANS (@lem6198420 n) (@lem6198425 n)). Qed.
Lemma lem6198427 (n : nat) : (term16 n) = (term33 n).
Proof. exact (TRANS (@lem6198419 n) (@lem6198426 n)). Qed.
Lemma lem6198428 : term6 = term6.
Proof. exact (eq_refl term6). Qed.
Lemma lem6198440 (n : nat) : (term3 n) = (term34 n).
Proof. exact (@lem1032118 n term22 term6). Qed.
Lemma lem6198441 : term35 = term20.
Proof. exact (@lem996237 term20). Qed.
Lemma lem6198442 : (term35 = term20) = (term36 = term22).
Proof. exact (@lem1007663 term20 (BIT1 0) term20). Qed.
Lemma lem6198443 : term36 = term22.
Proof. exact (EQ_MP (@lem6198442) (@lem6198441)). Qed.
Lemma lem6198446 (n : nat) : (term23 n) = (term23 n).
Proof. exact (eq_refl (term23 n)). Qed.
Lemma lem6198447 (n : nat) : (term34 n) = (term24 n).
Proof. exact (MK_COMB (@lem6198446 n) (@lem6198443)). Qed.
Lemma lem6198449 (n : nat) : (term3 n) = (term24 n).
Proof. exact (TRANS (@lem6198440 n) (@lem6198447 n)). Qed.
Lemma lem6198450 : Nat.add = Nat.add.
Proof. exact (eq_refl Nat.add). Qed.
Lemma lem6198451 (n : nat) : (term5 n) = (term26 n).
Proof. exact (MK_COMB (@lem6198450) (@lem6198449 n)). Qed.
Lemma lem6198452 (n : nat) : (term8 n) = (term27 n).
Proof. exact (MK_COMB (@lem6198451 n) (@lem6198428)). Qed.
Lemma lem6198453 (n : nat) : (term27 n) = (term28 n).
Proof. exact (@lem1032092 (term18 n) term22 term6). Qed.
Lemma lem6198454 : term29 = term30.
Proof. exact (@lem706949). Qed.
Lemma lem6198455 : (term29 = term30) = (term31 = term32).
Proof. exact (@lem1006570 term20 (BIT1 0) term30). Qed.
Lemma lem6198456 : term31 = term32.
Proof. exact (EQ_MP (@lem6198455) (@lem6198454)). Qed.
Lemma lem6198457 (n : nat) : (term23 n) = (term23 n).
Proof. exact (eq_refl (term23 n)). Qed.
Lemma lem6198458 (n : nat) : (term28 n) = (term33 n).
Proof. exact (MK_COMB (@lem6198457 n) (@lem6198456)). Qed.
Lemma lem6198459 (n : nat) : (term27 n) = (term33 n).
Proof. exact (TRANS (@lem6198453 n) (@lem6198458 n)). Qed.
Lemma lem6198460 (n : nat) : (term8 n) = (term33 n).
Proof. exact (TRANS (@lem6198452 n) (@lem6198459 n)). Qed.
Lemma lem6198461 : (@eq nat) = (@eq nat).
Proof. exact (eq_refl (@eq nat)). Qed.
Lemma lem6198462 (n : nat) : (term10 n) = (term37 n).
Proof. exact (MK_COMB (@lem6198461) (@lem6198460 n)). Qed.
Lemma lem6198463 (n : nat) : ((term8 n) = (term16 n)) = ((term33 n) = (term33 n)).
Proof. exact (MK_COMB (@lem6198462 n) (@lem6198427 n)). Qed.
Lemma lem6198466 (n : nat) : ((term7 n) = (term14 n)) = ((term33 n) = (term33 n)).
Proof. exact (TRANS (@lem6198390 n) (@lem6198463 n)). Qed.
Lemma lem6198468 (m : nat) (n : nat) : (m = n) = ((int_of_num m) = (int_of_num n)).
Proof. exact (EQ_MP (@lem2841414 m n) (@lem2841413 m n)). Qed.
Lemma lem6198469 (n : nat) : ((term33 n) = (term33 n)) = ((term38 n) = (term38 n)).
Proof. exact (@lem6198468 (term33 n) (term33 n)). Qed.
Lemma lem6198473 (m : nat) (n : nat) : (term39 m n) = (term40 m n).
Proof. exact (EQ_MP (@lem2841384 m n) (@lem2841383 m n)). Qed.
Lemma lem6198474 (n : nat) : (term38 n) = (term41 n).
Proof. exact (@lem6198473 (term18 n) term32). Qed.
Lemma lem6198476 (k : nat) (n : nat) : (term42 k n) = (term43 k n).
Proof. exact (EQ_MP (@lem2841378 k n) (@lem2841377 k n)). Qed.
Lemma lem6198477 (n : nat) : (term44 n) = (term45 n).
Proof. exact (@lem6198476 term20 n). Qed.
Lemma lem6198478 : int_add = int_add.
Proof. exact (eq_refl int_add). Qed.
Lemma lem6198479 (n : nat) : (term46 n) = (term47 n).
Proof. exact (MK_COMB (@lem6198478) (@lem6198477 n)). Qed.
Lemma lem6198480 : term48 = term48.
Proof. exact (eq_refl term48). Qed.
Lemma lem6198481 (n : nat) : (term41 n) = (term49 n).
Proof. exact (MK_COMB (@lem6198479 n) (@lem6198480)). Qed.
Lemma lem6198482 (n : nat) : (term38 n) = (term49 n).
Proof. exact (TRANS (@lem6198474 n) (@lem6198481 n)). Qed.
Lemma lem6198483 : (@eq int) = (@eq int).
Proof. exact (eq_refl (@eq int)). Qed.
Lemma lem6198484 (n : nat) : (term50 n) = (term51 n).
Proof. exact (MK_COMB (@lem6198483) (@lem6198482 n)). Qed.
Lemma lem6198486 (m : nat) (n : nat) : (term39 m n) = (term40 m n).
Proof. exact (EQ_MP (@lem2841384 m n) (@lem2841383 m n)). Qed.
Lemma lem6198487 (n : nat) : (term38 n) = (term41 n).
Proof. exact (@lem6198486 (term18 n) term32). Qed.
Lemma lem6198489 (k : nat) (n : nat) : (term42 k n) = (term43 k n).
Proof. exact (EQ_MP (@lem2841378 k n) (@lem2841377 k n)). Qed.
Lemma lem6198490 (n : nat) : (term44 n) = (term45 n).
Proof. exact (@lem6198489 term20 n). Qed.
Lemma lem6198491 : int_add = int_add.
Proof. exact (eq_refl int_add). Qed.
Lemma lem6198492 (n : nat) : (term46 n) = (term47 n).
Proof. exact (MK_COMB (@lem6198491) (@lem6198490 n)). Qed.
Lemma lem6198493 : term48 = term48.
Proof. exact (eq_refl term48). Qed.
Lemma lem6198494 (n : nat) : (term41 n) = (term49 n).
Proof. exact (MK_COMB (@lem6198492 n) (@lem6198493)). Qed.
Lemma lem6198495 (n : nat) : (term38 n) = (term49 n).
Proof. exact (TRANS (@lem6198487 n) (@lem6198494 n)). Qed.
Lemma lem6198496 (n : nat) : ((term38 n) = (term38 n)) = ((term49 n) = (term49 n)).
Proof. exact (MK_COMB (@lem6198484 n) (@lem6198495 n)). Qed.
Lemma lem6198497 (n : nat) : ((term33 n) = (term33 n)) = ((term49 n) = (term49 n)).
Proof. exact (TRANS (@lem6198469 n) (@lem6198496 n)). Qed.
Lemma lem6198498 (n : nat) : ((term7 n) = (term14 n)) = ((term49 n) = (term49 n)).
Proof. exact (TRANS (@lem6198466 n) (@lem6198497 n)). Qed.
Lemma lem6198499 (n : nat) : term52 n.
Proof. exact (@lem2307535 n). Qed.
Lemma lem6198500 (n : nat) : (term52 n) = (term53 n).
Proof. exact (eq_refl (term52 n)). Qed.
Lemma lem6198501 (n : nat) : term53 n.
Proof. exact (EQ_MP (@lem6198500 n) (@lem6198499 n)). Qed.
Lemma lem6198502 (_79013 : int) : (term54 _79013) = (term55 _79013).
Proof. exact (@lem2318604 (term55 _79013)). Qed.
Lemma lem6198525 (_79013 : int) : (term56 _79013) = (term57 _79013).
Proof. exact (@lem17362 (term58 _79013) ((term59 _79013) = (term59 _79013))). Qed.
Lemma lem6198528 (x : int) (y : int) : (int_le x y) = (term60 x y).
Proof. exact (EQ_MP (@lem2318569 x y) (@lem2318568 x y)). Qed.
Lemma lem6198529 (_79013 : int) : (term58 _79013) = (term61 _79013).
Proof. exact (@lem6198528 term62 _79013). Qed.
Lemma lem6198531 (n : nat) : (term63 n) = (real_of_num n).
Proof. exact (EQ_MP (@lem2318545 n) (@lem2318544 n)). Qed.
Lemma lem6198532 : term64 = term65.
Proof. exact (@lem6198531 (NUMERAL 0)). Qed.
Lemma lem6198533 : real_le = real_le.
Proof. exact (eq_refl real_le). Qed.
Lemma lem6198534 : term66 = term67.
Proof. exact (MK_COMB (@lem6198533) (@lem6198532)). Qed.
Lemma lem6198535 (_79013 : int) : (real_of_int _79013) = (real_of_int _79013).
Proof. exact (eq_refl (real_of_int _79013)). Qed.
Lemma lem6198536 (_79013 : int) : (term61 _79013) = (term68 _79013).
Proof. exact (MK_COMB (@lem6198534) (@lem6198535 _79013)). Qed.
Lemma lem6198538 (_79013 : int) : (term58 _79013) = (term68 _79013).
Proof. exact (TRANS (@lem6198529 _79013) (@lem6198536 _79013)). Qed.
Lemma lem6198540 (y : int) (x : int) : (term69 x y) = (term70 y x).
Proof. exact (proj1 (@lem2318497 x y)). Qed.
Lemma lem6198541 (_79013 : int) : (term71 _79013) = (term72 _79013).
Proof. exact (@lem6198540 (term59 _79013) (term59 _79013)). Qed.
Lemma lem6198543 (x : int) (y : int) : (int_le x y) = (term60 x y).
Proof. exact (EQ_MP (@lem2318569 x y) (@lem2318568 x y)). Qed.
Lemma lem6198544 (_79013 : int) : (term73 _79013) = (term74 _79013).
Proof. exact (@lem6198543 (term75 _79013) (term59 _79013)). Qed.
Lemma lem6198546 (x : int) (y : int) : (term76 x y) = (term77 x y).
Proof. exact (EQ_MP (@lem2318539 x y) (@lem2318538 x y)). Qed.
Lemma lem6198547 (_79013 : int) : (term78 _79013) = (term79 _79013).
Proof. exact (@lem6198546 (term59 _79013) term80). Qed.
Lemma lem6198549 (x : int) (y : int) : (term76 x y) = (term77 x y).
Proof. exact (EQ_MP (@lem2318539 x y) (@lem2318538 x y)). Qed.
Lemma lem6198550 (_79013 : int) : (term81 _79013) = (term82 _79013).
Proof. exact (@lem6198549 (term83 _79013) term48). Qed.
Lemma lem6198552 (x : int) (y : int) : (term84 x y) = (term85 x y).
Proof. exact (EQ_MP (@lem2318533 x y) (@lem2318532 x y)). Qed.
Lemma lem6198553 (_79013 : int) : (term86 _79013) = (term87 _79013).
Proof. exact (@lem6198552 term88 _79013). Qed.
Lemma lem6198555 (n : nat) : (term63 n) = (real_of_num n).
Proof. exact (EQ_MP (@lem2318545 n) (@lem2318544 n)). Qed.
Lemma lem6198556 : term89 = term90.
Proof. exact (@lem6198555 term22). Qed.
Lemma lem6198557 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem6198558 : term91 = term92.
Proof. exact (MK_COMB (@lem6198557) (@lem6198556)). Qed.
Lemma lem6198559 (_79013 : int) : (real_of_int _79013) = (real_of_int _79013).
Proof. exact (eq_refl (real_of_int _79013)). Qed.
Lemma lem6198560 (_79013 : int) : (term87 _79013) = (term93 _79013).
Proof. exact (MK_COMB (@lem6198558) (@lem6198559 _79013)). Qed.
Lemma lem6198561 (_79013 : int) : (term86 _79013) = (term93 _79013).
Proof. exact (TRANS (@lem6198553 _79013) (@lem6198560 _79013)). Qed.
Lemma lem6198562 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem6198563 (_79013 : int) : (term94 _79013) = (term95 _79013).
Proof. exact (MK_COMB (@lem6198562) (@lem6198561 _79013)). Qed.
Lemma lem6198565 (n : nat) : (term63 n) = (real_of_num n).
Proof. exact (EQ_MP (@lem2318545 n) (@lem2318544 n)). Qed.
Lemma lem6198566 : term96 = term97.
Proof. exact (@lem6198565 term32). Qed.
Lemma lem6198567 (_79013 : int) : (term82 _79013) = (term98 _79013).
Proof. exact (MK_COMB (@lem6198563 _79013) (@lem6198566)). Qed.
Lemma lem6198568 (_79013 : int) : (term81 _79013) = (term98 _79013).
Proof. exact (TRANS (@lem6198550 _79013) (@lem6198567 _79013)). Qed.
Lemma lem6198569 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem6198570 (_79013 : int) : (term99 _79013) = (term100 _79013).
Proof. exact (MK_COMB (@lem6198569) (@lem6198568 _79013)). Qed.
Lemma lem6198572 (n : nat) : (term63 n) = (real_of_num n).
Proof. exact (EQ_MP (@lem2318545 n) (@lem2318544 n)). Qed.
Lemma lem6198573 : term101 = term102.
Proof. exact (@lem6198572 term6). Qed.
Lemma lem6198574 (_79013 : int) : (term79 _79013) = (term103 _79013).
Proof. exact (MK_COMB (@lem6198570 _79013) (@lem6198573)). Qed.
Lemma lem6198575 (_79013 : int) : (term78 _79013) = (term103 _79013).
Proof. exact (TRANS (@lem6198547 _79013) (@lem6198574 _79013)). Qed.
Lemma lem6198576 : real_le = real_le.
Proof. exact (eq_refl real_le). Qed.
Lemma lem6198577 (_79013 : int) : (term104 _79013) = (term105 _79013).
Proof. exact (MK_COMB (@lem6198576) (@lem6198575 _79013)). Qed.
Lemma lem6198579 (x : int) (y : int) : (term76 x y) = (term77 x y).
Proof. exact (EQ_MP (@lem2318539 x y) (@lem2318538 x y)). Qed.
Lemma lem6198580 (_79013 : int) : (term81 _79013) = (term82 _79013).
Proof. exact (@lem6198579 (term83 _79013) term48). Qed.
Lemma lem6198582 (x : int) (y : int) : (term84 x y) = (term85 x y).
Proof. exact (EQ_MP (@lem2318533 x y) (@lem2318532 x y)). Qed.
Lemma lem6198583 (_79013 : int) : (term86 _79013) = (term87 _79013).
Proof. exact (@lem6198582 term88 _79013). Qed.
Lemma lem6198585 (n : nat) : (term63 n) = (real_of_num n).
Proof. exact (EQ_MP (@lem2318545 n) (@lem2318544 n)). Qed.
Lemma lem6198586 : term89 = term90.
Proof. exact (@lem6198585 term22). Qed.
Lemma lem6198587 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem6198588 : term91 = term92.
Proof. exact (MK_COMB (@lem6198587) (@lem6198586)). Qed.
Lemma lem6198589 (_79013 : int) : (real_of_int _79013) = (real_of_int _79013).
Proof. exact (eq_refl (real_of_int _79013)). Qed.
Lemma lem6198590 (_79013 : int) : (term87 _79013) = (term93 _79013).
Proof. exact (MK_COMB (@lem6198588) (@lem6198589 _79013)). Qed.
Lemma lem6198591 (_79013 : int) : (term86 _79013) = (term93 _79013).
Proof. exact (TRANS (@lem6198583 _79013) (@lem6198590 _79013)). Qed.
Lemma lem6198592 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem6198593 (_79013 : int) : (term94 _79013) = (term95 _79013).
Proof. exact (MK_COMB (@lem6198592) (@lem6198591 _79013)). Qed.
Lemma lem6198595 (n : nat) : (term63 n) = (real_of_num n).
Proof. exact (EQ_MP (@lem2318545 n) (@lem2318544 n)). Qed.
Lemma lem6198596 : term96 = term97.
Proof. exact (@lem6198595 term32). Qed.
Lemma lem6198597 (_79013 : int) : (term82 _79013) = (term98 _79013).
Proof. exact (MK_COMB (@lem6198593 _79013) (@lem6198596)). Qed.
Lemma lem6198598 (_79013 : int) : (term81 _79013) = (term98 _79013).
Proof. exact (TRANS (@lem6198580 _79013) (@lem6198597 _79013)). Qed.
Lemma lem6198599 (_79013 : int) : (term74 _79013) = (term106 _79013).
Proof. exact (MK_COMB (@lem6198577 _79013) (@lem6198598 _79013)). Qed.
Lemma lem6198600 (_79013 : int) : (term73 _79013) = (term106 _79013).
Proof. exact (TRANS (@lem6198544 _79013) (@lem6198599 _79013)). Qed.
Lemma lem6198601 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6198602 (_79013 : int) : (term107 _79013) = (term108 _79013).
Proof. exact (MK_COMB (@lem6198601) (@lem6198600 _79013)). Qed.
Lemma lem6198604 (x : int) (y : int) : (int_le x y) = (term60 x y).
Proof. exact (EQ_MP (@lem2318569 x y) (@lem2318568 x y)). Qed.
Lemma lem6198605 (_79013 : int) : (term73 _79013) = (term74 _79013).
Proof. exact (@lem6198604 (term75 _79013) (term59 _79013)). Qed.
Lemma lem6198607 (x : int) (y : int) : (term76 x y) = (term77 x y).
Proof. exact (EQ_MP (@lem2318539 x y) (@lem2318538 x y)). Qed.
Lemma lem6198608 (_79013 : int) : (term78 _79013) = (term79 _79013).
Proof. exact (@lem6198607 (term59 _79013) term80). Qed.
Lemma lem6198610 (x : int) (y : int) : (term76 x y) = (term77 x y).
Proof. exact (EQ_MP (@lem2318539 x y) (@lem2318538 x y)). Qed.
Lemma lem6198611 (_79013 : int) : (term81 _79013) = (term82 _79013).
Proof. exact (@lem6198610 (term83 _79013) term48). Qed.
Lemma lem6198613 (x : int) (y : int) : (term84 x y) = (term85 x y).
Proof. exact (EQ_MP (@lem2318533 x y) (@lem2318532 x y)). Qed.
Lemma lem6198614 (_79013 : int) : (term86 _79013) = (term87 _79013).
Proof. exact (@lem6198613 term88 _79013). Qed.
Lemma lem6198616 (n : nat) : (term63 n) = (real_of_num n).
Proof. exact (EQ_MP (@lem2318545 n) (@lem2318544 n)). Qed.
Lemma lem6198617 : term89 = term90.
Proof. exact (@lem6198616 term22). Qed.
Lemma lem6198618 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem6198619 : term91 = term92.
Proof. exact (MK_COMB (@lem6198618) (@lem6198617)). Qed.
Lemma lem6198620 (_79013 : int) : (real_of_int _79013) = (real_of_int _79013).
Proof. exact (eq_refl (real_of_int _79013)). Qed.
Lemma lem6198621 (_79013 : int) : (term87 _79013) = (term93 _79013).
Proof. exact (MK_COMB (@lem6198619) (@lem6198620 _79013)). Qed.
Lemma lem6198622 (_79013 : int) : (term86 _79013) = (term93 _79013).
Proof. exact (TRANS (@lem6198614 _79013) (@lem6198621 _79013)). Qed.
Lemma lem6198623 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem6198624 (_79013 : int) : (term94 _79013) = (term95 _79013).
Proof. exact (MK_COMB (@lem6198623) (@lem6198622 _79013)). Qed.
Lemma lem6198626 (n : nat) : (term63 n) = (real_of_num n).
Proof. exact (EQ_MP (@lem2318545 n) (@lem2318544 n)). Qed.
Lemma lem6198627 : term96 = term97.
Proof. exact (@lem6198626 term32). Qed.
Lemma lem6198628 (_79013 : int) : (term82 _79013) = (term98 _79013).
Proof. exact (MK_COMB (@lem6198624 _79013) (@lem6198627)). Qed.
Lemma lem6198629 (_79013 : int) : (term81 _79013) = (term98 _79013).
Proof. exact (TRANS (@lem6198611 _79013) (@lem6198628 _79013)). Qed.
Lemma lem6198630 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem6198631 (_79013 : int) : (term99 _79013) = (term100 _79013).
Proof. exact (MK_COMB (@lem6198630) (@lem6198629 _79013)). Qed.
Lemma lem6198633 (n : nat) : (term63 n) = (real_of_num n).
Proof. exact (EQ_MP (@lem2318545 n) (@lem2318544 n)). Qed.
Lemma lem6198634 : term101 = term102.
Proof. exact (@lem6198633 term6). Qed.
Lemma lem6198635 (_79013 : int) : (term79 _79013) = (term103 _79013).
Proof. exact (MK_COMB (@lem6198631 _79013) (@lem6198634)). Qed.
Lemma lem6198636 (_79013 : int) : (term78 _79013) = (term103 _79013).
Proof. exact (TRANS (@lem6198608 _79013) (@lem6198635 _79013)). Qed.
Lemma lem6198637 : real_le = real_le.
Proof. exact (eq_refl real_le). Qed.
Lemma lem6198638 (_79013 : int) : (term104 _79013) = (term105 _79013).
Proof. exact (MK_COMB (@lem6198637) (@lem6198636 _79013)). Qed.
Lemma lem6198640 (x : int) (y : int) : (term76 x y) = (term77 x y).
Proof. exact (EQ_MP (@lem2318539 x y) (@lem2318538 x y)). Qed.
Lemma lem6198641 (_79013 : int) : (term81 _79013) = (term82 _79013).
Proof. exact (@lem6198640 (term83 _79013) term48). Qed.
Lemma lem6198643 (x : int) (y : int) : (term84 x y) = (term85 x y).
Proof. exact (EQ_MP (@lem2318533 x y) (@lem2318532 x y)). Qed.
Lemma lem6198644 (_79013 : int) : (term86 _79013) = (term87 _79013).
Proof. exact (@lem6198643 term88 _79013). Qed.
Lemma lem6198646 (n : nat) : (term63 n) = (real_of_num n).
Proof. exact (EQ_MP (@lem2318545 n) (@lem2318544 n)). Qed.
Lemma lem6198647 : term89 = term90.
Proof. exact (@lem6198646 term22). Qed.
Lemma lem6198648 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem6198649 : term91 = term92.
Proof. exact (MK_COMB (@lem6198648) (@lem6198647)). Qed.
Lemma lem6198650 (_79013 : int) : (real_of_int _79013) = (real_of_int _79013).
Proof. exact (eq_refl (real_of_int _79013)). Qed.
Lemma lem6198651 (_79013 : int) : (term87 _79013) = (term93 _79013).
Proof. exact (MK_COMB (@lem6198649) (@lem6198650 _79013)). Qed.
Lemma lem6198652 (_79013 : int) : (term86 _79013) = (term93 _79013).
Proof. exact (TRANS (@lem6198644 _79013) (@lem6198651 _79013)). Qed.
Lemma lem6198653 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem6198654 (_79013 : int) : (term94 _79013) = (term95 _79013).
Proof. exact (MK_COMB (@lem6198653) (@lem6198652 _79013)). Qed.
Lemma lem6198656 (n : nat) : (term63 n) = (real_of_num n).
Proof. exact (EQ_MP (@lem2318545 n) (@lem2318544 n)). Qed.
Lemma lem6198657 : term96 = term97.
Proof. exact (@lem6198656 term32). Qed.
Lemma lem6198658 (_79013 : int) : (term82 _79013) = (term98 _79013).
Proof. exact (MK_COMB (@lem6198654 _79013) (@lem6198657)). Qed.
Lemma lem6198659 (_79013 : int) : (term81 _79013) = (term98 _79013).
Proof. exact (TRANS (@lem6198641 _79013) (@lem6198658 _79013)). Qed.
Lemma lem6198660 (_79013 : int) : (term74 _79013) = (term106 _79013).
Proof. exact (MK_COMB (@lem6198638 _79013) (@lem6198659 _79013)). Qed.
Lemma lem6198661 (_79013 : int) : (term73 _79013) = (term106 _79013).
Proof. exact (TRANS (@lem6198605 _79013) (@lem6198660 _79013)). Qed.
Lemma lem6198662 (_79013 : int) : (term72 _79013) = (term109 _79013).
Proof. exact (MK_COMB (@lem6198602 _79013) (@lem6198661 _79013)). Qed.
Lemma lem6198663 (_79013 : int) : (term71 _79013) = (term109 _79013).
Proof. exact (TRANS (@lem6198541 _79013) (@lem6198662 _79013)). Qed.
Lemma lem6198664 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6198665 (_79013 : int) : (term110 _79013) = (term111 _79013).
Proof. exact (MK_COMB (@lem6198664) (@lem6198538 _79013)). Qed.
Lemma lem6198666 (_79013 : int) : (term57 _79013) = (term112 _79013).
Proof. exact (MK_COMB (@lem6198665 _79013) (@lem6198663 _79013)). Qed.
Lemma lem6198667 (_79013 : int) : (term56 _79013) = (term112 _79013).
Proof. exact (TRANS (@lem6198525 _79013) (@lem6198666 _79013)). Qed.
Lemma lem6198671 (t : Prop) : (term113 t) = t.
Proof. exact (EQ_MP (@lem16507 t) (@lem16506 t)). Qed.
Lemma lem6198672 (_79013 : int) : (term114 _79013) = (term112 _79013).
Proof. exact (@lem6198671 (term112 _79013)). Qed.
Lemma lem6198676 (t : Prop) : (t \/ t) = t.
Proof. exact (proj2 (@lem16485 t)). Qed.
Lemma lem6198677 (_79013 : int) : (term109 _79013) = (term106 _79013).
Proof. exact (@lem6198676 (term106 _79013)). Qed.
Lemma lem6198678 (_79013 : int) : (term111 _79013) = (term111 _79013).
Proof. exact (eq_refl (term111 _79013)). Qed.
Lemma lem6198679 (_79013 : int) : (term112 _79013) = (term115 _79013).
Proof. exact (MK_COMB (@lem6198678 _79013) (@lem6198677 _79013)). Qed.
Lemma lem6198695 (_79013 : int) : (term114 _79013) = (term115 _79013).
Proof. exact (TRANS (@lem6198672 _79013) (@lem6198679 _79013)). Qed.
Lemma lem6198696 (_79013 : int) : (term68 _79013) = (term116 _79013).
Proof. exact (@lem1988287 (real_of_int _79013) term65). Qed.
Lemma lem6198702 (_79013 : int) : (term117 _79013) = (term118 _79013).
Proof. exact (@lem1982792 (real_of_int _79013) term65). Qed.
Lemma lem6198704 (x : nat) : (real_of_num x) = (term119 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6198705 : term65 = term120.
Proof. exact (@lem6198704 (NUMERAL 0)). Qed.
Lemma lem6198707 (x : nat) : (term121 x) = (term122 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem6198708 : term123 = term124.
Proof. exact (@lem6198707 term6). Qed.
Lemma lem6198709 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem6198710 : term125 = term126.
Proof. exact (MK_COMB (@lem6198709) (@lem6198708)). Qed.
Lemma lem6198711 : term127 = term128.
Proof. exact (MK_COMB (@lem6198710) (@lem6198705)). Qed.
Lemma lem6198712 : term128 = term129.
Proof. exact (@lem1981613 term123 term65 term102 term102). Qed.
Lemma lem6198714 (m : nat) (n : nat) : (term130 m n) = (term131 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6198715 : term132 = term133.
Proof. exact (@lem6198714 term6 term6). Qed.
Lemma lem6198716 : (term134 = (BIT1 0)) = (term135 = term6).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6198717 : term135 = term6.
Proof. exact (EQ_MP (@lem6198716) (@lem940073)). Qed.
Lemma lem6198718 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6198719 : term133 = term102.
Proof. exact (MK_COMB (@lem6198718) (@lem6198717)). Qed.
Lemma lem6198720 : term132 = term102.
Proof. exact (TRANS (@lem6198715) (@lem6198719)). Qed.
Lemma lem6198722 (x : nat) : (term136 x) = term65.
Proof. exact (proj2 (@lem1367254 x)). Qed.
Lemma lem6198723 : term127 = term65.
Proof. exact (@lem6198722 term6). Qed.
Lemma lem6198724 : real_div = real_div.
Proof. exact (eq_refl real_div). Qed.
Lemma lem6198725 : term137 = term138.
Proof. exact (MK_COMB (@lem6198724) (@lem6198723)). Qed.
Lemma lem6198726 : term129 = term120.
Proof. exact (MK_COMB (@lem6198725) (@lem6198720)). Qed.
Lemma lem6198727 : term128 = term120.
Proof. exact (TRANS (@lem6198712) (@lem6198726)). Qed.
Lemma lem6198728 : term127 = term120.
Proof. exact (TRANS (@lem6198711) (@lem6198727)). Qed.
Lemma lem6198730 (x : real) : (term139 x) = x.
Proof. exact (EQ_MP (@lem1982628 x) (@lem1982627 x)). Qed.
Lemma lem6198731 : term120 = term65.
Proof. exact (@lem6198730 term65). Qed.
Lemma lem6198732 : term127 = term65.
Proof. exact (TRANS (@lem6198728) (@lem6198731)). Qed.
Lemma lem6198733 (_79013 : int) : (term140 _79013) = (term140 _79013).
Proof. exact (eq_refl (term140 _79013)). Qed.
Lemma lem6198734 (_79013 : int) : (term118 _79013) = (term141 _79013).
Proof. exact (MK_COMB (@lem6198733 _79013) (@lem6198732)). Qed.
Lemma lem6198735 (_79013 : int) : (term141 _79013) = (real_of_int _79013).
Proof. exact (@lem1982723 (real_of_int _79013)). Qed.
Lemma lem6198736 (_79013 : int) : (term118 _79013) = (real_of_int _79013).
Proof. exact (TRANS (@lem6198734 _79013) (@lem6198735 _79013)). Qed.
Lemma lem6198738 (_79013 : int) : (term117 _79013) = (real_of_int _79013).
Proof. exact (TRANS (@lem6198702 _79013) (@lem6198736 _79013)). Qed.
Lemma lem6198739 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem6198740 (_79013 : int) : (term142 _79013) = (term143 _79013).
Proof. exact (MK_COMB (@lem6198739) (@lem6198738 _79013)). Qed.
Lemma lem6198741 : term65 = term65.
Proof. exact (eq_refl term65). Qed.
Lemma lem6198742 (_79013 : int) : (term116 _79013) = (term144 _79013).
Proof. exact (MK_COMB (@lem6198740 _79013) (@lem6198741)). Qed.
Lemma lem6198743 (_79013 : int) : (term68 _79013) = (term144 _79013).
Proof. exact (TRANS (@lem6198696 _79013) (@lem6198742 _79013)). Qed.
Lemma lem6198744 (_79013 : int) : (term106 _79013) = (term145 _79013).
Proof. exact (@lem1988287 (term98 _79013) (term103 _79013)). Qed.
Lemma lem6198762 (_79013 : int) : (term103 _79013) = (term146 _79013).
Proof. exact (@lem1982755 (term93 _79013) term97 term102). Qed.
Lemma lem6198764 (x : nat) : (real_of_num x) = (term119 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6198765 : term102 = term147.
Proof. exact (@lem6198764 term6). Qed.
Lemma lem6198767 (x : nat) : (real_of_num x) = (term119 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6198768 : term97 = term148.
Proof. exact (@lem6198767 term32). Qed.
Lemma lem6198769 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem6198770 : term149 = term150.
Proof. exact (MK_COMB (@lem6198769) (@lem6198768)). Qed.
Lemma lem6198771 : term151 = term152.
Proof. exact (MK_COMB (@lem6198770) (@lem6198765)). Qed.
Lemma lem6198772 : term153.
Proof. exact (@lem1981473 term97 term102 term102 term102 term154 term102). Qed.
Lemma lem6198774 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6198775 : term156 = term157.
Proof. exact (@lem6198774 (NUMERAL 0) term6). Qed.
Lemma lem6198776 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6198777 (h1 : term158 = (BIT1 0)) : term157 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6198778 : (term158 = (BIT1 0)) = (term157 = True).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6198777 h1) (fun h1 : term157 = True => @lem6198776)). Qed.
Lemma lem6198779 : term157 = True.
Proof. exact (EQ_MP (@lem6198778) (@lem6198776)). Qed.
Lemma lem6198780 : term156 = True.
Proof. exact (TRANS (@lem6198775) (@lem6198779)). Qed.
Lemma lem6198781 : True = term156.
Proof. exact (SYM (@lem6198780)). Qed.
Lemma lem6198782 : term156.
Proof. exact (EQ_MP (@lem6198781) (@lem0)). Qed.
Lemma lem6198783 : term159.
Proof. exact (@lem6198772 (@lem6198782)). Qed.
Lemma lem6198785 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6198786 : term156 = term157.
Proof. exact (@lem6198785 (NUMERAL 0) term6). Qed.
Lemma lem6198787 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6198788 (h1 : term158 = (BIT1 0)) : term157 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6198789 : (term158 = (BIT1 0)) = (term157 = True).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6198788 h1) (fun h1 : term157 = True => @lem6198787)). Qed.
Lemma lem6198790 : term157 = True.
Proof. exact (EQ_MP (@lem6198789) (@lem6198787)). Qed.
Lemma lem6198791 : term156 = True.
Proof. exact (TRANS (@lem6198786) (@lem6198790)). Qed.
Lemma lem6198792 : True = term156.
Proof. exact (SYM (@lem6198791)). Qed.
Lemma lem6198793 : term156.
Proof. exact (EQ_MP (@lem6198792) (@lem0)). Qed.
Lemma lem6198794 : term160.
Proof. exact (@lem6198783 (@lem6198793)). Qed.
Lemma lem6198796 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6198797 : term156 = term157.
Proof. exact (@lem6198796 (NUMERAL 0) term6). Qed.
Lemma lem6198798 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6198799 (h1 : term158 = (BIT1 0)) : term157 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6198800 : (term158 = (BIT1 0)) = (term157 = True).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6198799 h1) (fun h1 : term157 = True => @lem6198798)). Qed.
Lemma lem6198801 : term157 = True.
Proof. exact (EQ_MP (@lem6198800) (@lem6198798)). Qed.
Lemma lem6198802 : term156 = True.
Proof. exact (TRANS (@lem6198797) (@lem6198801)). Qed.
Lemma lem6198803 : True = term156.
Proof. exact (SYM (@lem6198802)). Qed.
Lemma lem6198804 : term156.
Proof. exact (EQ_MP (@lem6198803) (@lem0)). Qed.
Lemma lem6198805 : term161.
Proof. exact (@lem6198794 (@lem6198804)). Qed.
Lemma lem6198807 (m : nat) (n : nat) : (term130 m n) = (term131 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6198808 : term132 = term133.
Proof. exact (@lem6198807 term6 term6). Qed.
Lemma lem6198809 : (term134 = (BIT1 0)) = (term135 = term6).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6198810 : term135 = term6.
Proof. exact (EQ_MP (@lem6198809) (@lem940073)). Qed.
Lemma lem6198811 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6198812 : term133 = term102.
Proof. exact (MK_COMB (@lem6198811) (@lem6198810)). Qed.
Lemma lem6198813 : term132 = term102.
Proof. exact (TRANS (@lem6198808) (@lem6198812)). Qed.
Lemma lem6198815 (m : nat) (n : nat) : (term130 m n) = (term131 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6198816 : term162 = term163.
Proof. exact (@lem6198815 term32 term6). Qed.
Lemma lem6198817 : term164 = term30.
Proof. exact (@lem996237 term30). Qed.
Lemma lem6198818 : (term164 = term30) = (term165 = term32).
Proof. exact (@lem1007663 term30 (BIT1 0) term30). Qed.
Lemma lem6198819 : term165 = term32.
Proof. exact (EQ_MP (@lem6198818) (@lem6198817)). Qed.
Lemma lem6198820 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6198821 : term163 = term97.
Proof. exact (MK_COMB (@lem6198820) (@lem6198819)). Qed.
Lemma lem6198822 : term162 = term97.
Proof. exact (TRANS (@lem6198816) (@lem6198821)). Qed.
Lemma lem6198823 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem6198824 : term166 = term149.
Proof. exact (MK_COMB (@lem6198823) (@lem6198822)). Qed.
Lemma lem6198825 : term167 = term151.
Proof. exact (MK_COMB (@lem6198824) (@lem6198813)). Qed.
Lemma lem6198826 : term151 = term168.
Proof. exact (@lem1367770 term32 term6). Qed.
Lemma lem6198827 : term169 = term170.
Proof. exact (@lem707013). Qed.
Lemma lem6198828 : (term169 = term170) = (term171 = term172).
Proof. exact (@lem1006570 term30 (BIT1 0) term170). Qed.
Lemma lem6198829 : term171 = term172.
Proof. exact (EQ_MP (@lem6198828) (@lem6198827)). Qed.
Lemma lem6198830 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6198831 : term168 = term154.
Proof. exact (MK_COMB (@lem6198830) (@lem6198829)). Qed.
Lemma lem6198832 : term151 = term154.
Proof. exact (TRANS (@lem6198826) (@lem6198831)). Qed.
Lemma lem6198833 : term167 = term154.
Proof. exact (TRANS (@lem6198825) (@lem6198832)). Qed.
Lemma lem6198834 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem6198835 : term173 = term174.
Proof. exact (MK_COMB (@lem6198834) (@lem6198833)). Qed.
Lemma lem6198836 : term102 = term102.
Proof. exact (eq_refl term102). Qed.
Lemma lem6198837 : term175 = term176.
Proof. exact (MK_COMB (@lem6198835) (@lem6198836)). Qed.
Lemma lem6198839 (m : nat) (n : nat) : (term130 m n) = (term131 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6198840 : term176 = term177.
Proof. exact (@lem6198839 term172 term6). Qed.
Lemma lem6198841 : term178 = term170.
Proof. exact (@lem996237 term170). Qed.
Lemma lem6198842 : (term178 = term170) = (term179 = term172).
Proof. exact (@lem1007663 term170 (BIT1 0) term170). Qed.
Lemma lem6198843 : term179 = term172.
Proof. exact (EQ_MP (@lem6198842) (@lem6198841)). Qed.
Lemma lem6198844 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6198845 : term177 = term154.
Proof. exact (MK_COMB (@lem6198844) (@lem6198843)). Qed.
Lemma lem6198846 : term176 = term154.
Proof. exact (TRANS (@lem6198840) (@lem6198845)). Qed.
Lemma lem6198847 : term175 = term154.
Proof. exact (TRANS (@lem6198837) (@lem6198846)). Qed.
Lemma lem6198849 (m : nat) (n : nat) : (term130 m n) = (term131 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6198850 : term132 = term133.
Proof. exact (@lem6198849 term6 term6). Qed.
Lemma lem6198851 : (term134 = (BIT1 0)) = (term135 = term6).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6198852 : term135 = term6.
Proof. exact (EQ_MP (@lem6198851) (@lem940073)). Qed.
Lemma lem6198853 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6198854 : term133 = term102.
Proof. exact (MK_COMB (@lem6198853) (@lem6198852)). Qed.
Lemma lem6198855 : term132 = term102.
Proof. exact (TRANS (@lem6198850) (@lem6198854)). Qed.
Lemma lem6198856 : term174 = term174.
Proof. exact (eq_refl term174). Qed.
Lemma lem6198857 : term180 = term176.
Proof. exact (MK_COMB (@lem6198856) (@lem6198855)). Qed.
Lemma lem6198859 (m : nat) (n : nat) : (term130 m n) = (term131 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6198860 : term176 = term177.
Proof. exact (@lem6198859 term172 term6). Qed.
Lemma lem6198861 : term178 = term170.
Proof. exact (@lem996237 term170). Qed.
Lemma lem6198862 : (term178 = term170) = (term179 = term172).
Proof. exact (@lem1007663 term170 (BIT1 0) term170). Qed.
Lemma lem6198863 : term179 = term172.
Proof. exact (EQ_MP (@lem6198862) (@lem6198861)). Qed.
Lemma lem6198864 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6198865 : term177 = term154.
Proof. exact (MK_COMB (@lem6198864) (@lem6198863)). Qed.
Lemma lem6198866 : term176 = term154.
Proof. exact (TRANS (@lem6198860) (@lem6198865)). Qed.
Lemma lem6198867 : term180 = term154.
Proof. exact (TRANS (@lem6198857) (@lem6198866)). Qed.
Lemma lem6198868 : term154 = term180.
Proof. exact (SYM (@lem6198867)). Qed.
Lemma lem6198869 : term175 = term180.
Proof. exact (TRANS (@lem6198847) (@lem6198868)). Qed.
Lemma lem6198870 : term152 = term181.
Proof. exact (@lem6198805 (@lem6198869)). Qed.
Lemma lem6198871 : term151 = term181.
Proof. exact (TRANS (@lem6198771) (@lem6198870)). Qed.
Lemma lem6198873 (x : real) : (term139 x) = x.
Proof. exact (EQ_MP (@lem1981475 x) (@lem1981474 x)). Qed.
Lemma lem6198874 : term181 = term154.
Proof. exact (@lem6198873 term154). Qed.
Lemma lem6198875 : term151 = term154.
Proof. exact (TRANS (@lem6198871) (@lem6198874)). Qed.
Lemma lem6198876 (_79013 : int) : (term95 _79013) = (term95 _79013).
Proof. exact (eq_refl (term95 _79013)). Qed.
Lemma lem6198877 (_79013 : int) : (term146 _79013) = (term182 _79013).
Proof. exact (MK_COMB (@lem6198876 _79013) (@lem6198875)). Qed.
Lemma lem6198879 (_79013 : int) : (term103 _79013) = (term182 _79013).
Proof. exact (TRANS (@lem6198762 _79013) (@lem6198877 _79013)). Qed.
Lemma lem6198894 (_79013 : int) : (term183 _79013) = (term183 _79013).
Proof. exact (eq_refl (term183 _79013)). Qed.
Lemma lem6198895 (_79013 : int) : (term184 _79013) = (term185 _79013).
Proof. exact (MK_COMB (@lem6198894 _79013) (@lem6198879 _79013)). Qed.
Lemma lem6198896 (_79013 : int) : (term185 _79013) = (term186 _79013).
Proof. exact (@lem1982792 (term98 _79013) (term182 _79013)). Qed.
Lemma lem6198897 (_79013 : int) : (term187 _79013) = (term188 _79013).
Proof. exact (@lem1982781 (term93 _79013) term123 term154). Qed.
Lemma lem6198899 (x : nat) : (real_of_num x) = (term119 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6198900 : term154 = term181.
Proof. exact (@lem6198899 term172). Qed.
Lemma lem6198902 (x : nat) : (term121 x) = (term122 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem6198903 : term123 = term124.
Proof. exact (@lem6198902 term6). Qed.
Lemma lem6198904 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem6198905 : term125 = term126.
Proof. exact (MK_COMB (@lem6198904) (@lem6198903)). Qed.
Lemma lem6198906 : term189 = term190.
Proof. exact (MK_COMB (@lem6198905) (@lem6198900)). Qed.
Lemma lem6198907 : term190 = term191.
Proof. exact (@lem1981613 term123 term154 term102 term102). Qed.
Lemma lem6198909 (m : nat) (n : nat) : (term130 m n) = (term131 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6198910 : term132 = term133.
Proof. exact (@lem6198909 term6 term6). Qed.
Lemma lem6198911 : (term134 = (BIT1 0)) = (term135 = term6).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6198912 : term135 = term6.
Proof. exact (EQ_MP (@lem6198911) (@lem940073)). Qed.
Lemma lem6198913 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6198914 : term133 = term102.
Proof. exact (MK_COMB (@lem6198913) (@lem6198912)). Qed.
Lemma lem6198915 : term132 = term102.
Proof. exact (TRANS (@lem6198910) (@lem6198914)). Qed.
Lemma lem6198917 (m : nat) (n : nat) : (term192 m n) = (term193 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem6198918 : term189 = term194.
Proof. exact (@lem6198917 term6 term172). Qed.
Lemma lem6198919 : term195 = term170.
Proof. exact (@lem996238 term170). Qed.
Lemma lem6198920 : (term195 = term170) = (term196 = term172).
Proof. exact (@lem1007663 (BIT1 0) term170 term170). Qed.
Lemma lem6198921 : term196 = term172.
Proof. exact (EQ_MP (@lem6198920) (@lem6198919)). Qed.
Lemma lem6198922 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6198923 : term197 = term154.
Proof. exact (MK_COMB (@lem6198922) (@lem6198921)). Qed.
Lemma lem6198924 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem6198925 : term194 = term198.
Proof. exact (MK_COMB (@lem6198924) (@lem6198923)). Qed.
Lemma lem6198926 : term189 = term198.
Proof. exact (TRANS (@lem6198918) (@lem6198925)). Qed.
Lemma lem6198927 : real_div = real_div.
Proof. exact (eq_refl real_div). Qed.
Lemma lem6198928 : term199 = term200.
Proof. exact (MK_COMB (@lem6198927) (@lem6198926)). Qed.
Lemma lem6198929 : term191 = term201.
Proof. exact (MK_COMB (@lem6198928) (@lem6198915)). Qed.
Lemma lem6198930 : term190 = term201.
Proof. exact (TRANS (@lem6198907) (@lem6198929)). Qed.
Lemma lem6198931 : term189 = term201.
Proof. exact (TRANS (@lem6198906) (@lem6198930)). Qed.
Lemma lem6198933 (x : real) : (term139 x) = x.
Proof. exact (EQ_MP (@lem1982628 x) (@lem1982627 x)). Qed.
Lemma lem6198934 : term201 = term198.
Proof. exact (@lem6198933 term198). Qed.
Lemma lem6198935 : term189 = term198.
Proof. exact (TRANS (@lem6198931) (@lem6198934)). Qed.
Lemma lem6198936 (_79013 : int) : (term202 _79013) = (term203 _79013).
Proof. exact (@lem1982749 term123 term90 (real_of_int _79013)). Qed.
Lemma lem6198938 (x : nat) : (real_of_num x) = (term119 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6198939 : term90 = term204.
Proof. exact (@lem6198938 term22). Qed.
Lemma lem6198941 (x : nat) : (term121 x) = (term122 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem6198942 : term123 = term124.
Proof. exact (@lem6198941 term6). Qed.
Lemma lem6198943 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem6198944 : term125 = term126.
Proof. exact (MK_COMB (@lem6198943) (@lem6198942)). Qed.
Lemma lem6198945 : term205 = term206.
Proof. exact (MK_COMB (@lem6198944) (@lem6198939)). Qed.
Lemma lem6198946 : term206 = term207.
Proof. exact (@lem1981613 term123 term90 term102 term102). Qed.
Lemma lem6198948 (m : nat) (n : nat) : (term130 m n) = (term131 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6198949 : term132 = term133.
Proof. exact (@lem6198948 term6 term6). Qed.
Lemma lem6198950 : (term134 = (BIT1 0)) = (term135 = term6).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6198951 : term135 = term6.
Proof. exact (EQ_MP (@lem6198950) (@lem940073)). Qed.
Lemma lem6198952 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6198953 : term133 = term102.
Proof. exact (MK_COMB (@lem6198952) (@lem6198951)). Qed.
Lemma lem6198954 : term132 = term102.
Proof. exact (TRANS (@lem6198949) (@lem6198953)). Qed.
Lemma lem6198956 (m : nat) (n : nat) : (term192 m n) = (term193 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem6198957 : term205 = term208.
Proof. exact (@lem6198956 term6 term22). Qed.
Lemma lem6198958 : term209 = term20.
Proof. exact (@lem996238 term20). Qed.
Lemma lem6198959 : (term209 = term20) = (term210 = term22).
Proof. exact (@lem1007663 (BIT1 0) term20 term20). Qed.
Lemma lem6198960 : term210 = term22.
Proof. exact (EQ_MP (@lem6198959) (@lem6198958)). Qed.
Lemma lem6198961 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6198962 : term211 = term90.
Proof. exact (MK_COMB (@lem6198961) (@lem6198960)). Qed.
Lemma lem6198963 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem6198964 : term208 = term212.
Proof. exact (MK_COMB (@lem6198963) (@lem6198962)). Qed.
Lemma lem6198965 : term205 = term212.
Proof. exact (TRANS (@lem6198957) (@lem6198964)). Qed.
Lemma lem6198966 : real_div = real_div.
Proof. exact (eq_refl real_div). Qed.
Lemma lem6198967 : term213 = term214.
Proof. exact (MK_COMB (@lem6198966) (@lem6198965)). Qed.
Lemma lem6198968 : term207 = term215.
Proof. exact (MK_COMB (@lem6198967) (@lem6198954)). Qed.
Lemma lem6198969 : term206 = term215.
Proof. exact (TRANS (@lem6198946) (@lem6198968)). Qed.
Lemma lem6198970 : term205 = term215.
Proof. exact (TRANS (@lem6198945) (@lem6198969)). Qed.
Lemma lem6198972 (x : real) : (term139 x) = x.
Proof. exact (EQ_MP (@lem1982628 x) (@lem1982627 x)). Qed.
Lemma lem6198973 : term215 = term212.
Proof. exact (@lem6198972 term212). Qed.
Lemma lem6198974 : term205 = term212.
Proof. exact (TRANS (@lem6198970) (@lem6198973)). Qed.
Lemma lem6198975 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem6198976 : term216 = term217.
Proof. exact (MK_COMB (@lem6198975) (@lem6198974)). Qed.
Lemma lem6198977 (_79013 : int) : (real_of_int _79013) = (real_of_int _79013).
Proof. exact (eq_refl (real_of_int _79013)). Qed.
Lemma lem6198978 (_79013 : int) : (term203 _79013) = (term218 _79013).
Proof. exact (MK_COMB (@lem6198976) (@lem6198977 _79013)). Qed.
Lemma lem6198979 (_79013 : int) : (term202 _79013) = (term218 _79013).
Proof. exact (TRANS (@lem6198936 _79013) (@lem6198978 _79013)). Qed.
Lemma lem6198980 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem6198981 (_79013 : int) : (term219 _79013) = (term220 _79013).
Proof. exact (MK_COMB (@lem6198980) (@lem6198979 _79013)). Qed.
Lemma lem6198982 (_79013 : int) : (term188 _79013) = (term221 _79013).
Proof. exact (MK_COMB (@lem6198981 _79013) (@lem6198935)). Qed.
Lemma lem6198983 (_79013 : int) : (term187 _79013) = (term221 _79013).
Proof. exact (TRANS (@lem6198897 _79013) (@lem6198982 _79013)). Qed.
Lemma lem6198984 (_79013 : int) : (term100 _79013) = (term100 _79013).
Proof. exact (eq_refl (term100 _79013)). Qed.
Lemma lem6198985 (_79013 : int) : (term186 _79013) = (term222 _79013).
Proof. exact (MK_COMB (@lem6198984 _79013) (@lem6198983 _79013)). Qed.
Lemma lem6198986 (_79013 : int) : (term222 _79013) = (term223 _79013).
Proof. exact (@lem1982753 (term93 _79013) (term218 _79013) term97 term198). Qed.
Lemma lem6198987 (_79013 : int) : (term224 _79013) = (term225 _79013).
Proof. exact (@lem1982711 term90 term212 (real_of_int _79013)). Qed.
Lemma lem6198989 (x : nat) : (term121 x) = (term122 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem6198990 : term212 = term215.
Proof. exact (@lem6198989 term22). Qed.
Lemma lem6198992 (x : nat) : (real_of_num x) = (term119 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6198993 : term90 = term204.
Proof. exact (@lem6198992 term22). Qed.
Lemma lem6198994 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem6198995 : term226 = term227.
Proof. exact (MK_COMB (@lem6198994) (@lem6198993)). Qed.
Lemma lem6198996 : term228 = term229.
Proof. exact (MK_COMB (@lem6198995) (@lem6198990)). Qed.
Lemma lem6198997 : term230.
Proof. exact (@lem1981473 term90 term102 term212 term102 term65 term102). Qed.
Lemma lem6198999 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6199000 : term156 = term157.
Proof. exact (@lem6198999 (NUMERAL 0) term6). Qed.
Lemma lem6199001 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6199002 (h1 : term158 = (BIT1 0)) : term157 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6199003 : (term158 = (BIT1 0)) = (term157 = True).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6199002 h1) (fun h1 : term157 = True => @lem6199001)). Qed.
Lemma lem6199004 : term157 = True.
Proof. exact (EQ_MP (@lem6199003) (@lem6199001)). Qed.
Lemma lem6199005 : term156 = True.
Proof. exact (TRANS (@lem6199000) (@lem6199004)). Qed.
Lemma lem6199006 : True = term156.
Proof. exact (SYM (@lem6199005)). Qed.
Lemma lem6199007 : term156.
Proof. exact (EQ_MP (@lem6199006) (@lem0)). Qed.
Lemma lem6199008 : term231.
Proof. exact (@lem6198997 (@lem6199007)). Qed.
Lemma lem6199010 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6199011 : term156 = term157.
Proof. exact (@lem6199010 (NUMERAL 0) term6). Qed.
Lemma lem6199012 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6199013 (h1 : term158 = (BIT1 0)) : term157 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6199014 : (term158 = (BIT1 0)) = (term157 = True).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6199013 h1) (fun h1 : term157 = True => @lem6199012)). Qed.
Lemma lem6199015 : term157 = True.
Proof. exact (EQ_MP (@lem6199014) (@lem6199012)). Qed.
Lemma lem6199016 : term156 = True.
Proof. exact (TRANS (@lem6199011) (@lem6199015)). Qed.
Lemma lem6199017 : True = term156.
Proof. exact (SYM (@lem6199016)). Qed.
Lemma lem6199018 : term156.
Proof. exact (EQ_MP (@lem6199017) (@lem0)). Qed.
Lemma lem6199019 : term232.
Proof. exact (@lem6199008 (@lem6199018)). Qed.
Lemma lem6199021 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6199022 : term156 = term157.
Proof. exact (@lem6199021 (NUMERAL 0) term6). Qed.
Lemma lem6199023 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6199024 (h1 : term158 = (BIT1 0)) : term157 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6199025 : (term158 = (BIT1 0)) = (term157 = True).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6199024 h1) (fun h1 : term157 = True => @lem6199023)). Qed.
Lemma lem6199026 : term157 = True.
Proof. exact (EQ_MP (@lem6199025) (@lem6199023)). Qed.
Lemma lem6199027 : term156 = True.
Proof. exact (TRANS (@lem6199022) (@lem6199026)). Qed.
Lemma lem6199028 : True = term156.
Proof. exact (SYM (@lem6199027)). Qed.
Lemma lem6199029 : term156.
Proof. exact (EQ_MP (@lem6199028) (@lem0)). Qed.
Lemma lem6199030 : term233.
Proof. exact (@lem6199019 (@lem6199029)). Qed.
Lemma lem6199032 (m : nat) (n : nat) : (term192 m n) = (term193 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem6199033 : term234 = term235.
Proof. exact (@lem6199032 term22 term6). Qed.
Lemma lem6199034 : term35 = term20.
Proof. exact (@lem996237 term20). Qed.
Lemma lem6199035 : (term35 = term20) = (term36 = term22).
Proof. exact (@lem1007663 term20 (BIT1 0) term20). Qed.
Lemma lem6199036 : term36 = term22.
Proof. exact (EQ_MP (@lem6199035) (@lem6199034)). Qed.
Lemma lem6199037 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6199038 : term236 = term90.
Proof. exact (MK_COMB (@lem6199037) (@lem6199036)). Qed.
Lemma lem6199039 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem6199040 : term235 = term212.
Proof. exact (MK_COMB (@lem6199039) (@lem6199038)). Qed.
Lemma lem6199041 : term234 = term212.
Proof. exact (TRANS (@lem6199033) (@lem6199040)). Qed.
Lemma lem6199043 (m : nat) (n : nat) : (term130 m n) = (term131 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6199044 : term237 = term236.
Proof. exact (@lem6199043 term22 term6). Qed.
Lemma lem6199045 : term35 = term20.
Proof. exact (@lem996237 term20). Qed.
Lemma lem6199046 : (term35 = term20) = (term36 = term22).
Proof. exact (@lem1007663 term20 (BIT1 0) term20). Qed.
Lemma lem6199047 : term36 = term22.
Proof. exact (EQ_MP (@lem6199046) (@lem6199045)). Qed.
Lemma lem6199048 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6199049 : term236 = term90.
Proof. exact (MK_COMB (@lem6199048) (@lem6199047)). Qed.
Lemma lem6199050 : term237 = term90.
Proof. exact (TRANS (@lem6199044) (@lem6199049)). Qed.
Lemma lem6199051 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem6199052 : term238 = term226.
Proof. exact (MK_COMB (@lem6199051) (@lem6199050)). Qed.
Lemma lem6199053 : term239 = term228.
Proof. exact (MK_COMB (@lem6199052) (@lem6199041)). Qed.
Lemma lem6199055 (m : nat) : (term240 m) = term65.
Proof. exact (proj2 (@lem1367303 m)). Qed.
Lemma lem6199056 : term228 = term65.
Proof. exact (@lem6199055 term22). Qed.
Lemma lem6199057 : term239 = term65.
Proof. exact (TRANS (@lem6199053) (@lem6199056)). Qed.
Lemma lem6199058 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem6199059 : term241 = term242.
Proof. exact (MK_COMB (@lem6199058) (@lem6199057)). Qed.
Lemma lem6199060 : term102 = term102.
Proof. exact (eq_refl term102). Qed.
Lemma lem6199061 : term243 = term244.
Proof. exact (MK_COMB (@lem6199059) (@lem6199060)). Qed.
Lemma lem6199063 (x : nat) : (term245 x) = term65.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem6199064 : term244 = term65.
Proof. exact (@lem6199063 term6). Qed.
Lemma lem6199065 : term243 = term65.
Proof. exact (TRANS (@lem6199061) (@lem6199064)). Qed.
Lemma lem6199067 (m : nat) (n : nat) : (term130 m n) = (term131 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6199068 : term132 = term133.
Proof. exact (@lem6199067 term6 term6). Qed.
Lemma lem6199069 : (term134 = (BIT1 0)) = (term135 = term6).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6199070 : term135 = term6.
Proof. exact (EQ_MP (@lem6199069) (@lem940073)). Qed.
Lemma lem6199071 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6199072 : term133 = term102.
Proof. exact (MK_COMB (@lem6199071) (@lem6199070)). Qed.
Lemma lem6199073 : term132 = term102.
Proof. exact (TRANS (@lem6199068) (@lem6199072)). Qed.
Lemma lem6199074 : term242 = term242.
Proof. exact (eq_refl term242). Qed.
Lemma lem6199075 : term246 = term244.
Proof. exact (MK_COMB (@lem6199074) (@lem6199073)). Qed.
Lemma lem6199077 (x : nat) : (term245 x) = term65.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem6199078 : term244 = term65.
Proof. exact (@lem6199077 term6). Qed.
Lemma lem6199079 : term246 = term65.
Proof. exact (TRANS (@lem6199075) (@lem6199078)). Qed.
Lemma lem6199080 : term65 = term246.
Proof. exact (SYM (@lem6199079)). Qed.
Lemma lem6199081 : term243 = term246.
Proof. exact (TRANS (@lem6199065) (@lem6199080)). Qed.
Lemma lem6199082 : term229 = term120.
Proof. exact (@lem6199030 (@lem6199081)). Qed.
Lemma lem6199083 : term228 = term120.
Proof. exact (TRANS (@lem6198996) (@lem6199082)). Qed.
Lemma lem6199085 (x : real) : (term139 x) = x.
Proof. exact (EQ_MP (@lem1981475 x) (@lem1981474 x)). Qed.
Lemma lem6199086 : term120 = term65.
Proof. exact (@lem6199085 term65). Qed.
Lemma lem6199087 : term228 = term65.
Proof. exact (TRANS (@lem6199083) (@lem6199086)). Qed.
Lemma lem6199088 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem6199089 : term247 = term242.
Proof. exact (MK_COMB (@lem6199088) (@lem6199087)). Qed.
Lemma lem6199090 (_79013 : int) : (real_of_int _79013) = (real_of_int _79013).
Proof. exact (eq_refl (real_of_int _79013)). Qed.
Lemma lem6199091 (_79013 : int) : (term225 _79013) = (term248 _79013).
Proof. exact (MK_COMB (@lem6199089) (@lem6199090 _79013)). Qed.
Lemma lem6199092 (_79013 : int) : (term224 _79013) = (term248 _79013).
Proof. exact (TRANS (@lem6198987 _79013) (@lem6199091 _79013)). Qed.
Lemma lem6199093 (_79013 : int) : (term248 _79013) = term65.
Proof. exact (@lem1982719 (real_of_int _79013)). Qed.
Lemma lem6199094 (_79013 : int) : (term224 _79013) = term65.
Proof. exact (TRANS (@lem6199092 _79013) (@lem6199093 _79013)). Qed.
Lemma lem6199095 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem6199096 (_79013 : int) : (term249 _79013) = term250.
Proof. exact (MK_COMB (@lem6199095) (@lem6199094 _79013)). Qed.
Lemma lem6199098 (x : nat) : (term121 x) = (term122 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem6199099 : term198 = term201.
Proof. exact (@lem6199098 term172). Qed.
Lemma lem6199101 (x : nat) : (real_of_num x) = (term119 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6199102 : term97 = term148.
Proof. exact (@lem6199101 term32). Qed.
Lemma lem6199103 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem6199104 : term149 = term150.
Proof. exact (MK_COMB (@lem6199103) (@lem6199102)). Qed.
Lemma lem6199105 : term251 = term252.
Proof. exact (MK_COMB (@lem6199104) (@lem6199099)). Qed.
Lemma lem6199106 : term253.
Proof. exact (@lem1981473 term97 term102 term198 term102 term123 term102). Qed.
Lemma lem6199108 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6199109 : term156 = term157.
Proof. exact (@lem6199108 (NUMERAL 0) term6). Qed.
Lemma lem6199110 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6199111 (h1 : term158 = (BIT1 0)) : term157 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6199112 : (term158 = (BIT1 0)) = (term157 = True).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6199111 h1) (fun h1 : term157 = True => @lem6199110)). Qed.
Lemma lem6199113 : term157 = True.
Proof. exact (EQ_MP (@lem6199112) (@lem6199110)). Qed.
Lemma lem6199114 : term156 = True.
Proof. exact (TRANS (@lem6199109) (@lem6199113)). Qed.
Lemma lem6199115 : True = term156.
Proof. exact (SYM (@lem6199114)). Qed.
Lemma lem6199116 : term156.
Proof. exact (EQ_MP (@lem6199115) (@lem0)). Qed.
Lemma lem6199117 : term254.
Proof. exact (@lem6199106 (@lem6199116)). Qed.
Lemma lem6199119 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6199120 : term156 = term157.
Proof. exact (@lem6199119 (NUMERAL 0) term6). Qed.
Lemma lem6199121 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6199122 (h1 : term158 = (BIT1 0)) : term157 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6199123 : (term158 = (BIT1 0)) = (term157 = True).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6199122 h1) (fun h1 : term157 = True => @lem6199121)). Qed.
Lemma lem6199124 : term157 = True.
Proof. exact (EQ_MP (@lem6199123) (@lem6199121)). Qed.
Lemma lem6199125 : term156 = True.
Proof. exact (TRANS (@lem6199120) (@lem6199124)). Qed.
Lemma lem6199126 : True = term156.
Proof. exact (SYM (@lem6199125)). Qed.
Lemma lem6199127 : term156.
Proof. exact (EQ_MP (@lem6199126) (@lem0)). Qed.
Lemma lem6199128 : term255.
Proof. exact (@lem6199117 (@lem6199127)). Qed.
Lemma lem6199130 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6199131 : term156 = term157.
Proof. exact (@lem6199130 (NUMERAL 0) term6). Qed.
Lemma lem6199132 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6199133 (h1 : term158 = (BIT1 0)) : term157 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6199134 : (term158 = (BIT1 0)) = (term157 = True).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6199133 h1) (fun h1 : term157 = True => @lem6199132)). Qed.
Lemma lem6199135 : term157 = True.
Proof. exact (EQ_MP (@lem6199134) (@lem6199132)). Qed.
Lemma lem6199136 : term156 = True.
Proof. exact (TRANS (@lem6199131) (@lem6199135)). Qed.
Lemma lem6199137 : True = term156.
Proof. exact (SYM (@lem6199136)). Qed.
Lemma lem6199138 : term156.
Proof. exact (EQ_MP (@lem6199137) (@lem0)). Qed.
Lemma lem6199139 : term256.
Proof. exact (@lem6199128 (@lem6199138)). Qed.
Lemma lem6199141 (m : nat) (n : nat) : (term192 m n) = (term193 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem6199142 : term257 = term258.
Proof. exact (@lem6199141 term172 term6). Qed.
Lemma lem6199143 : term178 = term170.
Proof. exact (@lem996237 term170). Qed.
Lemma lem6199144 : (term178 = term170) = (term179 = term172).
Proof. exact (@lem1007663 term170 (BIT1 0) term170). Qed.
Lemma lem6199145 : term179 = term172.
Proof. exact (EQ_MP (@lem6199144) (@lem6199143)). Qed.
Lemma lem6199146 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6199147 : term177 = term154.
Proof. exact (MK_COMB (@lem6199146) (@lem6199145)). Qed.
Lemma lem6199148 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem6199149 : term258 = term198.
Proof. exact (MK_COMB (@lem6199148) (@lem6199147)). Qed.
Lemma lem6199150 : term257 = term198.
Proof. exact (TRANS (@lem6199142) (@lem6199149)). Qed.
Lemma lem6199152 (m : nat) (n : nat) : (term130 m n) = (term131 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6199153 : term162 = term163.
Proof. exact (@lem6199152 term32 term6). Qed.
Lemma lem6199154 : term164 = term30.
Proof. exact (@lem996237 term30). Qed.
Lemma lem6199155 : (term164 = term30) = (term165 = term32).
Proof. exact (@lem1007663 term30 (BIT1 0) term30). Qed.
Lemma lem6199156 : term165 = term32.
Proof. exact (EQ_MP (@lem6199155) (@lem6199154)). Qed.
Lemma lem6199157 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6199158 : term163 = term97.
Proof. exact (MK_COMB (@lem6199157) (@lem6199156)). Qed.
Lemma lem6199159 : term162 = term97.
Proof. exact (TRANS (@lem6199153) (@lem6199158)). Qed.
Lemma lem6199160 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem6199161 : term166 = term149.
Proof. exact (MK_COMB (@lem6199160) (@lem6199159)). Qed.
Lemma lem6199162 : term259 = term251.
Proof. exact (MK_COMB (@lem6199161) (@lem6199150)). Qed.
Lemma lem6199165 : term260 = term123.
Proof. exact (@lem1367771 term32 term6). Qed.
Lemma lem6199166 : term169 = term170.
Proof. exact (@lem707013). Qed.
Lemma lem6199167 : (term169 = term170) = (term171 = term172).
Proof. exact (@lem1006570 term30 (BIT1 0) term170). Qed.
Lemma lem6199168 : term171 = term172.
Proof. exact (EQ_MP (@lem6199167) (@lem6199166)). Qed.
Lemma lem6199169 : term172 = term171.
Proof. exact (SYM (@lem6199168)). Qed.
Lemma lem6199170 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6199171 : term154 = term168.
Proof. exact (MK_COMB (@lem6199170) (@lem6199169)). Qed.
Lemma lem6199172 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem6199173 : term198 = term261.
Proof. exact (MK_COMB (@lem6199172) (@lem6199171)). Qed.
Lemma lem6199174 : term149 = term149.
Proof. exact (eq_refl term149). Qed.
Lemma lem6199175 : term251 = term260.
Proof. exact (MK_COMB (@lem6199174) (@lem6199173)). Qed.
Lemma lem6199176 : term251 = term123.
Proof. exact (TRANS (@lem6199175) (@lem6199165)). Qed.
Lemma lem6199177 : term259 = term123.
Proof. exact (TRANS (@lem6199162) (@lem6199176)). Qed.
Lemma lem6199178 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem6199179 : term262 = term125.
Proof. exact (MK_COMB (@lem6199178) (@lem6199177)). Qed.
Lemma lem6199180 : term102 = term102.
Proof. exact (eq_refl term102). Qed.
Lemma lem6199181 : term263 = term264.
Proof. exact (MK_COMB (@lem6199179) (@lem6199180)). Qed.
Lemma lem6199183 (m : nat) (n : nat) : (term192 m n) = (term193 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem6199184 : term264 = term265.
Proof. exact (@lem6199183 term6 term6). Qed.
Lemma lem6199185 : (term134 = (BIT1 0)) = (term135 = term6).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6199186 : term135 = term6.
Proof. exact (EQ_MP (@lem6199185) (@lem940073)). Qed.
Lemma lem6199187 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6199188 : term133 = term102.
Proof. exact (MK_COMB (@lem6199187) (@lem6199186)). Qed.
Lemma lem6199189 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem6199190 : term265 = term123.
Proof. exact (MK_COMB (@lem6199189) (@lem6199188)). Qed.
Lemma lem6199191 : term264 = term123.
Proof. exact (TRANS (@lem6199184) (@lem6199190)). Qed.
Lemma lem6199192 : term263 = term123.
Proof. exact (TRANS (@lem6199181) (@lem6199191)). Qed.
Lemma lem6199194 (m : nat) (n : nat) : (term130 m n) = (term131 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6199195 : term132 = term133.
Proof. exact (@lem6199194 term6 term6). Qed.
Lemma lem6199196 : (term134 = (BIT1 0)) = (term135 = term6).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6199197 : term135 = term6.
Proof. exact (EQ_MP (@lem6199196) (@lem940073)). Qed.
Lemma lem6199198 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6199199 : term133 = term102.
Proof. exact (MK_COMB (@lem6199198) (@lem6199197)). Qed.
Lemma lem6199200 : term132 = term102.
Proof. exact (TRANS (@lem6199195) (@lem6199199)). Qed.
Lemma lem6199201 : term125 = term125.
Proof. exact (eq_refl term125). Qed.
Lemma lem6199202 : term266 = term264.
Proof. exact (MK_COMB (@lem6199201) (@lem6199200)). Qed.
Lemma lem6199204 (m : nat) (n : nat) : (term192 m n) = (term193 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem6199205 : term264 = term265.
Proof. exact (@lem6199204 term6 term6). Qed.
Lemma lem6199206 : (term134 = (BIT1 0)) = (term135 = term6).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6199207 : term135 = term6.
Proof. exact (EQ_MP (@lem6199206) (@lem940073)). Qed.
Lemma lem6199208 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6199209 : term133 = term102.
Proof. exact (MK_COMB (@lem6199208) (@lem6199207)). Qed.
Lemma lem6199210 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem6199211 : term265 = term123.
Proof. exact (MK_COMB (@lem6199210) (@lem6199209)). Qed.
Lemma lem6199212 : term264 = term123.
Proof. exact (TRANS (@lem6199205) (@lem6199211)). Qed.
Lemma lem6199213 : term266 = term123.
Proof. exact (TRANS (@lem6199202) (@lem6199212)). Qed.
Lemma lem6199214 : term123 = term266.
Proof. exact (SYM (@lem6199213)). Qed.
Lemma lem6199215 : term263 = term266.
Proof. exact (TRANS (@lem6199192) (@lem6199214)). Qed.
Lemma lem6199216 : term252 = term124.
Proof. exact (@lem6199139 (@lem6199215)). Qed.
Lemma lem6199217 : term251 = term124.
Proof. exact (TRANS (@lem6199105) (@lem6199216)). Qed.
Lemma lem6199219 (x : real) : (term139 x) = x.
Proof. exact (EQ_MP (@lem1981475 x) (@lem1981474 x)). Qed.
Lemma lem6199220 : term124 = term123.
Proof. exact (@lem6199219 term123). Qed.
Lemma lem6199221 : term251 = term123.
Proof. exact (TRANS (@lem6199217) (@lem6199220)). Qed.
Lemma lem6199222 (_79013 : int) : (term223 _79013) = term267.
Proof. exact (MK_COMB (@lem6199096 _79013) (@lem6199221)). Qed.
Lemma lem6199223 (_79013 : int) : (term222 _79013) = term267.
Proof. exact (TRANS (@lem6198986 _79013) (@lem6199222 _79013)). Qed.
Lemma lem6199224 : term267 = term123.
Proof. exact (@lem1982721 term123). Qed.
Lemma lem6199225 (_79013 : int) : (term222 _79013) = term123.
Proof. exact (TRANS (@lem6199223 _79013) (@lem6199224)). Qed.
Lemma lem6199226 (_79013 : int) : (term186 _79013) = term123.
Proof. exact (TRANS (@lem6198985 _79013) (@lem6199225 _79013)). Qed.
Lemma lem6199227 (_79013 : int) : (term185 _79013) = term123.
Proof. exact (TRANS (@lem6198896 _79013) (@lem6199226 _79013)). Qed.
Lemma lem6199228 (_79013 : int) : (term184 _79013) = term123.
Proof. exact (TRANS (@lem6198895 _79013) (@lem6199227 _79013)). Qed.
Lemma lem6199229 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem6199230 (_79013 : int) : (term268 _79013) = term269.
Proof. exact (MK_COMB (@lem6199229) (@lem6199228 _79013)). Qed.
Lemma lem6199231 : term65 = term65.
Proof. exact (eq_refl term65). Qed.
Lemma lem6199232 (_79013 : int) : (term145 _79013) = term270.
Proof. exact (MK_COMB (@lem6199230 _79013) (@lem6199231)). Qed.
Lemma lem6199233 (_79013 : int) : (term106 _79013) = term270.
Proof. exact (TRANS (@lem6198744 _79013) (@lem6199232 _79013)). Qed.
Lemma lem6199234 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6199235 (_79013 : int) : (term111 _79013) = (term271 _79013).
Proof. exact (MK_COMB (@lem6199234) (@lem6198743 _79013)). Qed.
Lemma lem6199236 (_79013 : int) : (term115 _79013) = (term272 _79013).
Proof. exact (MK_COMB (@lem6199235 _79013) (@lem6199233 _79013)). Qed.
Lemma lem6199251 (_79013 : int) : (term114 _79013) = (term272 _79013).
Proof. exact (TRANS (@lem6198695 _79013) (@lem6199236 _79013)). Qed.
Lemma lem6199255 (_79013 : int) (h1 : term272 _79013) : term272 _79013.
Proof. exact (h1). Qed.
Lemma lem6199256 (_79013 : int) (h1 : term272 _79013) : term270.
Proof. exact (proj2 (@lem6199255 _79013 h1)). Qed.
Lemma lem6199259 (y : real) (x : real) : (real_ge x y) = (real_le y x).
Proof. exact (EQ_MP (@lem1980260 y x) (@lem1980259 y x)). Qed.
Lemma lem6199260 : term270 = term273.
Proof. exact (@lem6199259 term65 term123). Qed.
Lemma lem6199262 (x : nat) : (term121 x) = (term122 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem6199263 : term123 = term124.
Proof. exact (@lem6199262 term6). Qed.
Lemma lem6199265 (x : nat) : (real_of_num x) = (term119 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6199266 : term65 = term120.
Proof. exact (@lem6199265 (NUMERAL 0)). Qed.
Lemma lem6199267 : real_le = real_le.
Proof. exact (eq_refl real_le). Qed.
Lemma lem6199268 : term67 = term274.
Proof. exact (MK_COMB (@lem6199267) (@lem6199266)). Qed.
Lemma lem6199269 : term273 = term275.
Proof. exact (MK_COMB (@lem6199268) (@lem6199263)). Qed.
Lemma lem6199270 : term276.
Proof. exact (@lem1980026 term65 term102 term123 term102). Qed.
Lemma lem6199272 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6199273 : term156 = term157.
Proof. exact (@lem6199272 (NUMERAL 0) term6). Qed.
Lemma lem6199274 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6199275 (h1 : term158 = (BIT1 0)) : term157 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6199276 : (term158 = (BIT1 0)) = (term157 = True).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6199275 h1) (fun h1 : term157 = True => @lem6199274)). Qed.
Lemma lem6199277 : term157 = True.
Proof. exact (EQ_MP (@lem6199276) (@lem6199274)). Qed.
Lemma lem6199278 : term156 = True.
Proof. exact (TRANS (@lem6199273) (@lem6199277)). Qed.
Lemma lem6199279 : True = term156.
Proof. exact (SYM (@lem6199278)). Qed.
Lemma lem6199280 : term156.
Proof. exact (EQ_MP (@lem6199279) (@lem0)). Qed.
Lemma lem6199281 : term277.
Proof. exact (@lem6199270 (@lem6199280)). Qed.
Lemma lem6199283 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6199284 : term156 = term157.
Proof. exact (@lem6199283 (NUMERAL 0) term6). Qed.
Lemma lem6199285 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6199286 (h1 : term158 = (BIT1 0)) : term157 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6199287 : (term158 = (BIT1 0)) = (term157 = True).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6199286 h1) (fun h1 : term157 = True => @lem6199285)). Qed.
Lemma lem6199288 : term157 = True.
Proof. exact (EQ_MP (@lem6199287) (@lem6199285)). Qed.
Lemma lem6199289 : term156 = True.
Proof. exact (TRANS (@lem6199284) (@lem6199288)). Qed.
Lemma lem6199290 : True = term156.
Proof. exact (SYM (@lem6199289)). Qed.
Lemma lem6199291 : term156.
Proof. exact (EQ_MP (@lem6199290) (@lem0)). Qed.
Lemma lem6199292 : term275 = term278.
Proof. exact (@lem6199281 (@lem6199291)). Qed.
Lemma lem6199294 (m : nat) (n : nat) : (term192 m n) = (term193 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem6199295 : term264 = term265.
Proof. exact (@lem6199294 term6 term6). Qed.
Lemma lem6199296 : (term134 = (BIT1 0)) = (term135 = term6).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6199297 : term135 = term6.
Proof. exact (EQ_MP (@lem6199296) (@lem940073)). Qed.
Lemma lem6199298 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6199299 : term133 = term102.
Proof. exact (MK_COMB (@lem6199298) (@lem6199297)). Qed.
Lemma lem6199300 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem6199301 : term265 = term123.
Proof. exact (MK_COMB (@lem6199300) (@lem6199299)). Qed.
Lemma lem6199302 : term264 = term123.
Proof. exact (TRANS (@lem6199295) (@lem6199301)). Qed.
Lemma lem6199304 (x : nat) : (term245 x) = term65.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem6199305 : term244 = term65.
Proof. exact (@lem6199304 term6). Qed.
Lemma lem6199306 : real_le = real_le.
Proof. exact (eq_refl real_le). Qed.
Lemma lem6199307 : term279 = term67.
Proof. exact (MK_COMB (@lem6199306) (@lem6199305)). Qed.
Lemma lem6199308 : term278 = term273.
Proof. exact (MK_COMB (@lem6199307) (@lem6199302)). Qed.
Lemma lem6199310 (m : nat) (n : nat) : (term280 m n) = (term281 m n).
Proof. exact (proj2 (@lem1365406 m n)). Qed.
Lemma lem6199311 : term273 = term282.
Proof. exact (@lem6199310 (NUMERAL 0) term6). Qed.
Lemma lem6199312 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6199313 (h1 : term158 = (BIT1 0)) : (term6 = (NUMERAL 0)) = False.
Proof. exact (@lem1013352 0 0 (BIT1 0) h1). Qed.
Lemma lem6199314 : (term158 = (BIT1 0)) = ((term6 = (NUMERAL 0)) = False).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6199313 h1) (fun h1 : (term6 = (NUMERAL 0)) = False => @lem6199312)). Qed.
Lemma lem6199315 : (term6 = (NUMERAL 0)) = False.
Proof. exact (EQ_MP (@lem6199314) (@lem6199312)). Qed.
Lemma lem6199316 : ((NUMERAL 0) = (NUMERAL 0)) = True.
Proof. exact (@lem1013364 0). Qed.
Lemma lem6199317 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6199318 : term283 = (and True).
Proof. exact (MK_COMB (@lem6199317) (@lem6199316)). Qed.
Lemma lem6199319 : term282 = (True /\ False).
Proof. exact (MK_COMB (@lem6199318) (@lem6199315)). Qed.
Lemma lem6199321 : (True /\ False) = False.
Proof. exact (proj1 (@lem1365106)). Qed.
Lemma lem6199322 : term282 = False.
Proof. exact (TRANS (@lem6199319) (@lem6199321)). Qed.
Lemma lem6199323 : term273 = False.
Proof. exact (TRANS (@lem6199311) (@lem6199322)). Qed.
Lemma lem6199324 : term278 = False.
Proof. exact (TRANS (@lem6199308) (@lem6199323)). Qed.
Lemma lem6199325 : term275 = False.
Proof. exact (TRANS (@lem6199292) (@lem6199324)). Qed.
Lemma lem6199326 : term273 = False.
Proof. exact (TRANS (@lem6199269) (@lem6199325)). Qed.
Lemma lem6199327 : term270 = False.
Proof. exact (TRANS (@lem6199260) (@lem6199326)). Qed.
Lemma lem6199328 (_79013 : int) (h1 : term272 _79013) : False.
Proof. exact (EQ_MP (@lem6199327) (@lem6199256 _79013 h1)). Qed.
Lemma lem6199330 (_79013 : int) (h1 : term272 _79013) : term272 _79013.
Proof. exact (h1). Qed.
Lemma lem6199331 (_79013 : int) (h1 : term272 _79013) : (term272 _79013) = False.
Proof. exact (prop_ext (fun h2 : term272 _79013 => @lem6199328 _79013 h1) (fun h2 : False => @lem6199330 _79013 h1)). Qed.
Lemma lem6199332 (_79013 : int) (h1 : term272 _79013) : False.
Proof. exact (EQ_MP (@lem6199331 _79013 h1) (@lem6199330 _79013 h1)). Qed.
Lemma lem6199333 (_79013 : int) (h1 : term114 _79013) : term114 _79013.
Proof. exact (h1). Qed.
Lemma lem6199334 (_79013 : int) (h1 : term114 _79013) : term272 _79013.
Proof. exact (EQ_MP (@lem6199251 _79013) (@lem6199333 _79013 h1)). Qed.
Lemma lem6199335 (_79013 : int) (h1 : term114 _79013) : (term272 _79013) = False.
Proof. exact (prop_ext (fun h2 : term272 _79013 => @lem6199332 _79013 h2) (fun h2 : False => @lem6199334 _79013 h1)). Qed.
Lemma lem6199336 (_79013 : int) (h1 : term114 _79013) : False.
Proof. exact (EQ_MP (@lem6199335 _79013 h1) (@lem6199334 _79013 h1)). Qed.
Lemma lem6199337 (_79013 : int) : term284 _79013.
Proof. exact (fun h0 : term114 _79013 => @lem6199336 _79013 h0). Qed.
Lemma lem6199338 (_79013 : int) : term285 _79013.
Proof. exact (@lem1386578 (term286 _79013)). Qed.
Lemma lem6199341 (_79013 : int) : term286 _79013.
Proof. exact (@lem6199338 _79013 (@lem6199337 _79013)). Qed.
Lemma lem6199342 (_79013 : int) : (term112 _79013) = (term56 _79013).
Proof. exact (SYM (@lem6198667 _79013)). Qed.
Lemma lem6199343 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem6199344 (_79013 : int) : (term286 _79013) = (term54 _79013).
Proof. exact (MK_COMB (@lem6199343) (@lem6199342 _79013)). Qed.
Lemma lem6199345 (_79013 : int) : term54 _79013.
Proof. exact (EQ_MP (@lem6199344 _79013) (@lem6199341 _79013)). Qed.
Lemma lem6199346 (_79013 : int) : term55 _79013.
Proof. exact (EQ_MP (@lem6198502 _79013) (@lem6199345 _79013)). Qed.
Lemma lem6199347 (n : nat) : term287 n.
Proof. exact (@lem6199346 (int_of_num n)). Qed.
Lemma lem6199348 (n : nat) : (term49 n) = (term49 n).
Proof. exact (@lem6199347 n (@lem6198501 n)). Qed.
Lemma lem6199349 (n : nat) : ((term49 n) = (term49 n)) = ((term7 n) = (term14 n)).
Proof. exact (SYM (@lem6198498 n)). Qed.
Lemma lem6199367 (m : nat) : (S m) = (term0 m).
Proof. exact (EQ_MP (@lem2841417 m) (@lem2841416 m)). Qed.
Lemma lem6199368 (n : nat) : (S n) = (term0 n).
Proof. exact (@lem6199367 n). Qed.
Lemma lem6199369 : term1 = term1.
Proof. exact (eq_refl term1). Qed.
Lemma lem6199370 (n : nat) : (term2 n) = (term3 n).
Proof. exact (MK_COMB (@lem6199369) (@lem6199368 n)). Qed.
Lemma lem6199371 : (@eq nat) = (@eq nat).
Proof. exact (eq_refl (@eq nat)). Qed.
Lemma lem6199372 (n : nat) : (term288 n) = (term289 n).
Proof. exact (MK_COMB (@lem6199371) (@lem6199370 n)). Qed.
Lemma lem6199374 (m : nat) : (S m) = (term0 m).
Proof. exact (EQ_MP (@lem2841417 m) (@lem2841416 m)). Qed.
Lemma lem6199375 (n : nat) : (term11 n) = (term12 n).
Proof. exact (@lem6199374 (term13 n)). Qed.
Lemma lem6199377 (n : nat) : ((term2 n) = (term11 n)) = ((term3 n) = (term12 n)).
Proof. exact (MK_COMB (@lem6199372 n) (@lem6199375 n)). Qed.
Lemma lem6199395 (n : nat) : (term12 n) = (term17 n).
Proof. exact (@lem1032092 (term18 n) term6 term6). Qed.
Lemma lem6199396 : term19 = term20.
Proof. exact (@lem706885). Qed.
Lemma lem6199397 : (term19 = term20) = (term21 = term22).
Proof. exact (@lem1006570 (BIT1 0) (BIT1 0) term20). Qed.
Lemma lem6199398 : term21 = term22.
Proof. exact (EQ_MP (@lem6199397) (@lem6199396)). Qed.
Lemma lem6199399 (n : nat) : (term23 n) = (term23 n).
Proof. exact (eq_refl (term23 n)). Qed.
Lemma lem6199400 (n : nat) : (term17 n) = (term24 n).
Proof. exact (MK_COMB (@lem6199399 n) (@lem6199398)). Qed.
Lemma lem6199402 (n : nat) : (term12 n) = (term24 n).
Proof. exact (TRANS (@lem6199395 n) (@lem6199400 n)). Qed.
Lemma lem6199414 (n : nat) : (term3 n) = (term34 n).
Proof. exact (@lem1032118 n term22 term6). Qed.
Lemma lem6199415 : term35 = term20.
Proof. exact (@lem996237 term20). Qed.
Lemma lem6199416 : (term35 = term20) = (term36 = term22).
Proof. exact (@lem1007663 term20 (BIT1 0) term20). Qed.
Lemma lem6199417 : term36 = term22.
Proof. exact (EQ_MP (@lem6199416) (@lem6199415)). Qed.
Lemma lem6199420 (n : nat) : (term23 n) = (term23 n).
Proof. exact (eq_refl (term23 n)). Qed.
Lemma lem6199421 (n : nat) : (term34 n) = (term24 n).
Proof. exact (MK_COMB (@lem6199420 n) (@lem6199417)). Qed.
Lemma lem6199423 (n : nat) : (term3 n) = (term24 n).
Proof. exact (TRANS (@lem6199414 n) (@lem6199421 n)). Qed.
Lemma lem6199424 : (@eq nat) = (@eq nat).
Proof. exact (eq_refl (@eq nat)). Qed.
Lemma lem6199425 (n : nat) : (term289 n) = (term290 n).
Proof. exact (MK_COMB (@lem6199424) (@lem6199423 n)). Qed.
Lemma lem6199426 (n : nat) : ((term3 n) = (term12 n)) = ((term24 n) = (term24 n)).
Proof. exact (MK_COMB (@lem6199425 n) (@lem6199402 n)). Qed.
Lemma lem6199429 (n : nat) : ((term2 n) = (term11 n)) = ((term24 n) = (term24 n)).
Proof. exact (TRANS (@lem6199377 n) (@lem6199426 n)). Qed.
Lemma lem6199431 (m : nat) (n : nat) : (m = n) = ((int_of_num m) = (int_of_num n)).
Proof. exact (EQ_MP (@lem2841414 m n) (@lem2841413 m n)). Qed.
Lemma lem6199432 (n : nat) : ((term24 n) = (term24 n)) = ((term291 n) = (term291 n)).
Proof. exact (@lem6199431 (term24 n) (term24 n)). Qed.
Lemma lem6199436 (m : nat) (n : nat) : (term39 m n) = (term40 m n).
Proof. exact (EQ_MP (@lem2841384 m n) (@lem2841383 m n)). Qed.
Lemma lem6199437 (n : nat) : (term291 n) = (term292 n).
Proof. exact (@lem6199436 (term18 n) term22). Qed.
Lemma lem6199439 (k : nat) (n : nat) : (term42 k n) = (term43 k n).
Proof. exact (EQ_MP (@lem2841378 k n) (@lem2841377 k n)). Qed.
Lemma lem6199440 (n : nat) : (term44 n) = (term45 n).
Proof. exact (@lem6199439 term20 n). Qed.
Lemma lem6199441 : int_add = int_add.
Proof. exact (eq_refl int_add). Qed.
Lemma lem6199442 (n : nat) : (term46 n) = (term47 n).
Proof. exact (MK_COMB (@lem6199441) (@lem6199440 n)). Qed.
Lemma lem6199443 : term88 = term88.
Proof. exact (eq_refl term88). Qed.
Lemma lem6199444 (n : nat) : (term292 n) = (term293 n).
Proof. exact (MK_COMB (@lem6199442 n) (@lem6199443)). Qed.
Lemma lem6199445 (n : nat) : (term291 n) = (term293 n).
Proof. exact (TRANS (@lem6199437 n) (@lem6199444 n)). Qed.
Lemma lem6199446 : (@eq int) = (@eq int).
Proof. exact (eq_refl (@eq int)). Qed.
Lemma lem6199447 (n : nat) : (term294 n) = (term295 n).
Proof. exact (MK_COMB (@lem6199446) (@lem6199445 n)). Qed.
Lemma lem6199449 (m : nat) (n : nat) : (term39 m n) = (term40 m n).
Proof. exact (EQ_MP (@lem2841384 m n) (@lem2841383 m n)). Qed.
Lemma lem6199450 (n : nat) : (term291 n) = (term292 n).
Proof. exact (@lem6199449 (term18 n) term22). Qed.
Lemma lem6199452 (k : nat) (n : nat) : (term42 k n) = (term43 k n).
Proof. exact (EQ_MP (@lem2841378 k n) (@lem2841377 k n)). Qed.
Lemma lem6199453 (n : nat) : (term44 n) = (term45 n).
Proof. exact (@lem6199452 term20 n). Qed.
Lemma lem6199454 : int_add = int_add.
Proof. exact (eq_refl int_add). Qed.
Lemma lem6199455 (n : nat) : (term46 n) = (term47 n).
Proof. exact (MK_COMB (@lem6199454) (@lem6199453 n)). Qed.
Lemma lem6199456 : term88 = term88.
Proof. exact (eq_refl term88). Qed.
Lemma lem6199457 (n : nat) : (term292 n) = (term293 n).
Proof. exact (MK_COMB (@lem6199455 n) (@lem6199456)). Qed.
Lemma lem6199458 (n : nat) : (term291 n) = (term293 n).
Proof. exact (TRANS (@lem6199450 n) (@lem6199457 n)). Qed.
Lemma lem6199459 (n : nat) : ((term291 n) = (term291 n)) = ((term293 n) = (term293 n)).
Proof. exact (MK_COMB (@lem6199447 n) (@lem6199458 n)). Qed.
Lemma lem6199460 (n : nat) : ((term24 n) = (term24 n)) = ((term293 n) = (term293 n)).
Proof. exact (TRANS (@lem6199432 n) (@lem6199459 n)). Qed.
Lemma lem6199461 (n : nat) : ((term2 n) = (term11 n)) = ((term293 n) = (term293 n)).
Proof. exact (TRANS (@lem6199429 n) (@lem6199460 n)). Qed.
Lemma lem6199462 (n : nat) : term52 n.
Proof. exact (@lem2307535 n). Qed.
Lemma lem6199463 (n : nat) : (term52 n) = (term53 n).
Proof. exact (eq_refl (term52 n)). Qed.
Lemma lem6199464 (n : nat) : term53 n.
Proof. exact (EQ_MP (@lem6199463 n) (@lem6199462 n)). Qed.
Lemma lem6199465 (_79015 : int) : (term296 _79015) = (term297 _79015).
Proof. exact (@lem2318604 (term297 _79015)). Qed.
Lemma lem6199488 (_79015 : int) : (term298 _79015) = (term299 _79015).
Proof. exact (@lem17362 (term58 _79015) ((term300 _79015) = (term300 _79015))). Qed.
Lemma lem6199491 (x : int) (y : int) : (int_le x y) = (term60 x y).
Proof. exact (EQ_MP (@lem2318569 x y) (@lem2318568 x y)). Qed.
Lemma lem6199492 (_79015 : int) : (term58 _79015) = (term61 _79015).
Proof. exact (@lem6199491 term62 _79015). Qed.
Lemma lem6199494 (n : nat) : (term63 n) = (real_of_num n).
Proof. exact (EQ_MP (@lem2318545 n) (@lem2318544 n)). Qed.
Lemma lem6199495 : term64 = term65.
Proof. exact (@lem6199494 (NUMERAL 0)). Qed.
Lemma lem6199496 : real_le = real_le.
Proof. exact (eq_refl real_le). Qed.
Lemma lem6199497 : term66 = term67.
Proof. exact (MK_COMB (@lem6199496) (@lem6199495)). Qed.
Lemma lem6199498 (_79015 : int) : (real_of_int _79015) = (real_of_int _79015).
Proof. exact (eq_refl (real_of_int _79015)). Qed.
Lemma lem6199499 (_79015 : int) : (term61 _79015) = (term68 _79015).
Proof. exact (MK_COMB (@lem6199497) (@lem6199498 _79015)). Qed.
Lemma lem6199501 (_79015 : int) : (term58 _79015) = (term68 _79015).
Proof. exact (TRANS (@lem6199492 _79015) (@lem6199499 _79015)). Qed.
Lemma lem6199503 (y : int) (x : int) : (term69 x y) = (term70 y x).
Proof. exact (proj1 (@lem2318497 x y)). Qed.
Lemma lem6199504 (_79015 : int) : (term301 _79015) = (term302 _79015).
Proof. exact (@lem6199503 (term300 _79015) (term300 _79015)). Qed.
Lemma lem6199506 (x : int) (y : int) : (int_le x y) = (term60 x y).
Proof. exact (EQ_MP (@lem2318569 x y) (@lem2318568 x y)). Qed.
Lemma lem6199507 (_79015 : int) : (term303 _79015) = (term304 _79015).
Proof. exact (@lem6199506 (term305 _79015) (term300 _79015)). Qed.
Lemma lem6199509 (x : int) (y : int) : (term76 x y) = (term77 x y).
Proof. exact (EQ_MP (@lem2318539 x y) (@lem2318538 x y)). Qed.
Lemma lem6199510 (_79015 : int) : (term306 _79015) = (term307 _79015).
Proof. exact (@lem6199509 (term300 _79015) term80). Qed.
Lemma lem6199512 (x : int) (y : int) : (term76 x y) = (term77 x y).
Proof. exact (EQ_MP (@lem2318539 x y) (@lem2318538 x y)). Qed.
Lemma lem6199513 (_79015 : int) : (term308 _79015) = (term309 _79015).
Proof. exact (@lem6199512 (term83 _79015) term88). Qed.
Lemma lem6199515 (x : int) (y : int) : (term84 x y) = (term85 x y).
Proof. exact (EQ_MP (@lem2318533 x y) (@lem2318532 x y)). Qed.
Lemma lem6199516 (_79015 : int) : (term86 _79015) = (term87 _79015).
Proof. exact (@lem6199515 term88 _79015). Qed.
Lemma lem6199518 (n : nat) : (term63 n) = (real_of_num n).
Proof. exact (EQ_MP (@lem2318545 n) (@lem2318544 n)). Qed.
Lemma lem6199519 : term89 = term90.
Proof. exact (@lem6199518 term22). Qed.
Lemma lem6199520 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem6199521 : term91 = term92.
Proof. exact (MK_COMB (@lem6199520) (@lem6199519)). Qed.
Lemma lem6199522 (_79015 : int) : (real_of_int _79015) = (real_of_int _79015).
Proof. exact (eq_refl (real_of_int _79015)). Qed.
Lemma lem6199523 (_79015 : int) : (term87 _79015) = (term93 _79015).
Proof. exact (MK_COMB (@lem6199521) (@lem6199522 _79015)). Qed.
Lemma lem6199524 (_79015 : int) : (term86 _79015) = (term93 _79015).
Proof. exact (TRANS (@lem6199516 _79015) (@lem6199523 _79015)). Qed.
Lemma lem6199525 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem6199526 (_79015 : int) : (term94 _79015) = (term95 _79015).
Proof. exact (MK_COMB (@lem6199525) (@lem6199524 _79015)). Qed.
Lemma lem6199528 (n : nat) : (term63 n) = (real_of_num n).
Proof. exact (EQ_MP (@lem2318545 n) (@lem2318544 n)). Qed.
Lemma lem6199529 : term89 = term90.
Proof. exact (@lem6199528 term22). Qed.
Lemma lem6199530 (_79015 : int) : (term309 _79015) = (term310 _79015).
Proof. exact (MK_COMB (@lem6199526 _79015) (@lem6199529)). Qed.
Lemma lem6199531 (_79015 : int) : (term308 _79015) = (term310 _79015).
Proof. exact (TRANS (@lem6199513 _79015) (@lem6199530 _79015)). Qed.
Lemma lem6199532 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem6199533 (_79015 : int) : (term311 _79015) = (term312 _79015).
Proof. exact (MK_COMB (@lem6199532) (@lem6199531 _79015)). Qed.
Lemma lem6199535 (n : nat) : (term63 n) = (real_of_num n).
Proof. exact (EQ_MP (@lem2318545 n) (@lem2318544 n)). Qed.
Lemma lem6199536 : term101 = term102.
Proof. exact (@lem6199535 term6). Qed.
Lemma lem6199537 (_79015 : int) : (term307 _79015) = (term313 _79015).
Proof. exact (MK_COMB (@lem6199533 _79015) (@lem6199536)). Qed.
Lemma lem6199538 (_79015 : int) : (term306 _79015) = (term313 _79015).
Proof. exact (TRANS (@lem6199510 _79015) (@lem6199537 _79015)). Qed.
Lemma lem6199539 : real_le = real_le.
Proof. exact (eq_refl real_le). Qed.
Lemma lem6199540 (_79015 : int) : (term314 _79015) = (term315 _79015).
Proof. exact (MK_COMB (@lem6199539) (@lem6199538 _79015)). Qed.
Lemma lem6199542 (x : int) (y : int) : (term76 x y) = (term77 x y).
Proof. exact (EQ_MP (@lem2318539 x y) (@lem2318538 x y)). Qed.
Lemma lem6199543 (_79015 : int) : (term308 _79015) = (term309 _79015).
Proof. exact (@lem6199542 (term83 _79015) term88). Qed.
Lemma lem6199545 (x : int) (y : int) : (term84 x y) = (term85 x y).
Proof. exact (EQ_MP (@lem2318533 x y) (@lem2318532 x y)). Qed.
Lemma lem6199546 (_79015 : int) : (term86 _79015) = (term87 _79015).
Proof. exact (@lem6199545 term88 _79015). Qed.
Lemma lem6199548 (n : nat) : (term63 n) = (real_of_num n).
Proof. exact (EQ_MP (@lem2318545 n) (@lem2318544 n)). Qed.
Lemma lem6199549 : term89 = term90.
Proof. exact (@lem6199548 term22). Qed.
Lemma lem6199550 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem6199551 : term91 = term92.
Proof. exact (MK_COMB (@lem6199550) (@lem6199549)). Qed.
Lemma lem6199552 (_79015 : int) : (real_of_int _79015) = (real_of_int _79015).
Proof. exact (eq_refl (real_of_int _79015)). Qed.
Lemma lem6199553 (_79015 : int) : (term87 _79015) = (term93 _79015).
Proof. exact (MK_COMB (@lem6199551) (@lem6199552 _79015)). Qed.
Lemma lem6199554 (_79015 : int) : (term86 _79015) = (term93 _79015).
Proof. exact (TRANS (@lem6199546 _79015) (@lem6199553 _79015)). Qed.
Lemma lem6199555 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem6199556 (_79015 : int) : (term94 _79015) = (term95 _79015).
Proof. exact (MK_COMB (@lem6199555) (@lem6199554 _79015)). Qed.
Lemma lem6199558 (n : nat) : (term63 n) = (real_of_num n).
Proof. exact (EQ_MP (@lem2318545 n) (@lem2318544 n)). Qed.
Lemma lem6199559 : term89 = term90.
Proof. exact (@lem6199558 term22). Qed.
Lemma lem6199560 (_79015 : int) : (term309 _79015) = (term310 _79015).
Proof. exact (MK_COMB (@lem6199556 _79015) (@lem6199559)). Qed.
Lemma lem6199561 (_79015 : int) : (term308 _79015) = (term310 _79015).
Proof. exact (TRANS (@lem6199543 _79015) (@lem6199560 _79015)). Qed.
Lemma lem6199562 (_79015 : int) : (term304 _79015) = (term316 _79015).
Proof. exact (MK_COMB (@lem6199540 _79015) (@lem6199561 _79015)). Qed.
Lemma lem6199563 (_79015 : int) : (term303 _79015) = (term316 _79015).
Proof. exact (TRANS (@lem6199507 _79015) (@lem6199562 _79015)). Qed.
Lemma lem6199564 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6199565 (_79015 : int) : (term317 _79015) = (term318 _79015).
Proof. exact (MK_COMB (@lem6199564) (@lem6199563 _79015)). Qed.
Lemma lem6199567 (x : int) (y : int) : (int_le x y) = (term60 x y).
Proof. exact (EQ_MP (@lem2318569 x y) (@lem2318568 x y)). Qed.
Lemma lem6199568 (_79015 : int) : (term303 _79015) = (term304 _79015).
Proof. exact (@lem6199567 (term305 _79015) (term300 _79015)). Qed.
Lemma lem6199570 (x : int) (y : int) : (term76 x y) = (term77 x y).
Proof. exact (EQ_MP (@lem2318539 x y) (@lem2318538 x y)). Qed.
Lemma lem6199571 (_79015 : int) : (term306 _79015) = (term307 _79015).
Proof. exact (@lem6199570 (term300 _79015) term80). Qed.
Lemma lem6199573 (x : int) (y : int) : (term76 x y) = (term77 x y).
Proof. exact (EQ_MP (@lem2318539 x y) (@lem2318538 x y)). Qed.
Lemma lem6199574 (_79015 : int) : (term308 _79015) = (term309 _79015).
Proof. exact (@lem6199573 (term83 _79015) term88). Qed.
Lemma lem6199576 (x : int) (y : int) : (term84 x y) = (term85 x y).
Proof. exact (EQ_MP (@lem2318533 x y) (@lem2318532 x y)). Qed.
Lemma lem6199577 (_79015 : int) : (term86 _79015) = (term87 _79015).
Proof. exact (@lem6199576 term88 _79015). Qed.
Lemma lem6199579 (n : nat) : (term63 n) = (real_of_num n).
Proof. exact (EQ_MP (@lem2318545 n) (@lem2318544 n)). Qed.
Lemma lem6199580 : term89 = term90.
Proof. exact (@lem6199579 term22). Qed.
Lemma lem6199581 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem6199582 : term91 = term92.
Proof. exact (MK_COMB (@lem6199581) (@lem6199580)). Qed.
Lemma lem6199583 (_79015 : int) : (real_of_int _79015) = (real_of_int _79015).
Proof. exact (eq_refl (real_of_int _79015)). Qed.
Lemma lem6199584 (_79015 : int) : (term87 _79015) = (term93 _79015).
Proof. exact (MK_COMB (@lem6199582) (@lem6199583 _79015)). Qed.
Lemma lem6199585 (_79015 : int) : (term86 _79015) = (term93 _79015).
Proof. exact (TRANS (@lem6199577 _79015) (@lem6199584 _79015)). Qed.
Lemma lem6199586 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem6199587 (_79015 : int) : (term94 _79015) = (term95 _79015).
Proof. exact (MK_COMB (@lem6199586) (@lem6199585 _79015)). Qed.
Lemma lem6199589 (n : nat) : (term63 n) = (real_of_num n).
Proof. exact (EQ_MP (@lem2318545 n) (@lem2318544 n)). Qed.
Lemma lem6199590 : term89 = term90.
Proof. exact (@lem6199589 term22). Qed.
Lemma lem6199591 (_79015 : int) : (term309 _79015) = (term310 _79015).
Proof. exact (MK_COMB (@lem6199587 _79015) (@lem6199590)). Qed.
Lemma lem6199592 (_79015 : int) : (term308 _79015) = (term310 _79015).
Proof. exact (TRANS (@lem6199574 _79015) (@lem6199591 _79015)). Qed.
Lemma lem6199593 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem6199594 (_79015 : int) : (term311 _79015) = (term312 _79015).
Proof. exact (MK_COMB (@lem6199593) (@lem6199592 _79015)). Qed.
Lemma lem6199596 (n : nat) : (term63 n) = (real_of_num n).
Proof. exact (EQ_MP (@lem2318545 n) (@lem2318544 n)). Qed.
Lemma lem6199597 : term101 = term102.
Proof. exact (@lem6199596 term6). Qed.
Lemma lem6199598 (_79015 : int) : (term307 _79015) = (term313 _79015).
Proof. exact (MK_COMB (@lem6199594 _79015) (@lem6199597)). Qed.
Lemma lem6199599 (_79015 : int) : (term306 _79015) = (term313 _79015).
Proof. exact (TRANS (@lem6199571 _79015) (@lem6199598 _79015)). Qed.
Lemma lem6199600 : real_le = real_le.
Proof. exact (eq_refl real_le). Qed.
Lemma lem6199601 (_79015 : int) : (term314 _79015) = (term315 _79015).
Proof. exact (MK_COMB (@lem6199600) (@lem6199599 _79015)). Qed.
Lemma lem6199603 (x : int) (y : int) : (term76 x y) = (term77 x y).
Proof. exact (EQ_MP (@lem2318539 x y) (@lem2318538 x y)). Qed.
Lemma lem6199604 (_79015 : int) : (term308 _79015) = (term309 _79015).
Proof. exact (@lem6199603 (term83 _79015) term88). Qed.
Lemma lem6199606 (x : int) (y : int) : (term84 x y) = (term85 x y).
Proof. exact (EQ_MP (@lem2318533 x y) (@lem2318532 x y)). Qed.
Lemma lem6199607 (_79015 : int) : (term86 _79015) = (term87 _79015).
Proof. exact (@lem6199606 term88 _79015). Qed.
Lemma lem6199609 (n : nat) : (term63 n) = (real_of_num n).
Proof. exact (EQ_MP (@lem2318545 n) (@lem2318544 n)). Qed.
Lemma lem6199610 : term89 = term90.
Proof. exact (@lem6199609 term22). Qed.
Lemma lem6199611 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem6199612 : term91 = term92.
Proof. exact (MK_COMB (@lem6199611) (@lem6199610)). Qed.
Lemma lem6199613 (_79015 : int) : (real_of_int _79015) = (real_of_int _79015).
Proof. exact (eq_refl (real_of_int _79015)). Qed.
Lemma lem6199614 (_79015 : int) : (term87 _79015) = (term93 _79015).
Proof. exact (MK_COMB (@lem6199612) (@lem6199613 _79015)). Qed.
Lemma lem6199615 (_79015 : int) : (term86 _79015) = (term93 _79015).
Proof. exact (TRANS (@lem6199607 _79015) (@lem6199614 _79015)). Qed.
Lemma lem6199616 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem6199617 (_79015 : int) : (term94 _79015) = (term95 _79015).
Proof. exact (MK_COMB (@lem6199616) (@lem6199615 _79015)). Qed.
Lemma lem6199619 (n : nat) : (term63 n) = (real_of_num n).
Proof. exact (EQ_MP (@lem2318545 n) (@lem2318544 n)). Qed.
Lemma lem6199620 : term89 = term90.
Proof. exact (@lem6199619 term22). Qed.
Lemma lem6199621 (_79015 : int) : (term309 _79015) = (term310 _79015).
Proof. exact (MK_COMB (@lem6199617 _79015) (@lem6199620)). Qed.
Lemma lem6199622 (_79015 : int) : (term308 _79015) = (term310 _79015).
Proof. exact (TRANS (@lem6199604 _79015) (@lem6199621 _79015)). Qed.
Lemma lem6199623 (_79015 : int) : (term304 _79015) = (term316 _79015).
Proof. exact (MK_COMB (@lem6199601 _79015) (@lem6199622 _79015)). Qed.
Lemma lem6199624 (_79015 : int) : (term303 _79015) = (term316 _79015).
Proof. exact (TRANS (@lem6199568 _79015) (@lem6199623 _79015)). Qed.
Lemma lem6199625 (_79015 : int) : (term302 _79015) = (term319 _79015).
Proof. exact (MK_COMB (@lem6199565 _79015) (@lem6199624 _79015)). Qed.
Lemma lem6199626 (_79015 : int) : (term301 _79015) = (term319 _79015).
Proof. exact (TRANS (@lem6199504 _79015) (@lem6199625 _79015)). Qed.
Lemma lem6199627 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6199628 (_79015 : int) : (term110 _79015) = (term111 _79015).
Proof. exact (MK_COMB (@lem6199627) (@lem6199501 _79015)). Qed.
Lemma lem6199629 (_79015 : int) : (term299 _79015) = (term320 _79015).
Proof. exact (MK_COMB (@lem6199628 _79015) (@lem6199626 _79015)). Qed.
Lemma lem6199630 (_79015 : int) : (term298 _79015) = (term320 _79015).
Proof. exact (TRANS (@lem6199488 _79015) (@lem6199629 _79015)). Qed.
Lemma lem6199634 (t : Prop) : (term113 t) = t.
Proof. exact (EQ_MP (@lem16507 t) (@lem16506 t)). Qed.
Lemma lem6199635 (_79015 : int) : (term321 _79015) = (term320 _79015).
Proof. exact (@lem6199634 (term320 _79015)). Qed.
Lemma lem6199639 (t : Prop) : (t \/ t) = t.
Proof. exact (proj2 (@lem16485 t)). Qed.
Lemma lem6199640 (_79015 : int) : (term319 _79015) = (term316 _79015).
Proof. exact (@lem6199639 (term316 _79015)). Qed.
Lemma lem6199641 (_79015 : int) : (term111 _79015) = (term111 _79015).
Proof. exact (eq_refl (term111 _79015)). Qed.
Lemma lem6199642 (_79015 : int) : (term320 _79015) = (term322 _79015).
Proof. exact (MK_COMB (@lem6199641 _79015) (@lem6199640 _79015)). Qed.
Lemma lem6199658 (_79015 : int) : (term321 _79015) = (term322 _79015).
Proof. exact (TRANS (@lem6199635 _79015) (@lem6199642 _79015)). Qed.
Lemma lem6199659 (_79015 : int) : (term68 _79015) = (term116 _79015).
Proof. exact (@lem1988287 (real_of_int _79015) term65). Qed.
Lemma lem6199665 (_79015 : int) : (term117 _79015) = (term118 _79015).
Proof. exact (@lem1982792 (real_of_int _79015) term65). Qed.
Lemma lem6199667 (x : nat) : (real_of_num x) = (term119 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6199668 : term65 = term120.
Proof. exact (@lem6199667 (NUMERAL 0)). Qed.
Lemma lem6199670 (x : nat) : (term121 x) = (term122 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem6199671 : term123 = term124.
Proof. exact (@lem6199670 term6). Qed.
Lemma lem6199672 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem6199673 : term125 = term126.
Proof. exact (MK_COMB (@lem6199672) (@lem6199671)). Qed.
Lemma lem6199674 : term127 = term128.
Proof. exact (MK_COMB (@lem6199673) (@lem6199668)). Qed.
Lemma lem6199675 : term128 = term129.
Proof. exact (@lem1981613 term123 term65 term102 term102). Qed.
Lemma lem6199677 (m : nat) (n : nat) : (term130 m n) = (term131 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6199678 : term132 = term133.
Proof. exact (@lem6199677 term6 term6). Qed.
Lemma lem6199679 : (term134 = (BIT1 0)) = (term135 = term6).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6199680 : term135 = term6.
Proof. exact (EQ_MP (@lem6199679) (@lem940073)). Qed.
Lemma lem6199681 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6199682 : term133 = term102.
Proof. exact (MK_COMB (@lem6199681) (@lem6199680)). Qed.
Lemma lem6199683 : term132 = term102.
Proof. exact (TRANS (@lem6199678) (@lem6199682)). Qed.
Lemma lem6199685 (x : nat) : (term136 x) = term65.
Proof. exact (proj2 (@lem1367254 x)). Qed.
Lemma lem6199686 : term127 = term65.
Proof. exact (@lem6199685 term6). Qed.
Lemma lem6199687 : real_div = real_div.
Proof. exact (eq_refl real_div). Qed.
Lemma lem6199688 : term137 = term138.
Proof. exact (MK_COMB (@lem6199687) (@lem6199686)). Qed.
Lemma lem6199689 : term129 = term120.
Proof. exact (MK_COMB (@lem6199688) (@lem6199683)). Qed.
Lemma lem6199690 : term128 = term120.
Proof. exact (TRANS (@lem6199675) (@lem6199689)). Qed.
Lemma lem6199691 : term127 = term120.
Proof. exact (TRANS (@lem6199674) (@lem6199690)). Qed.
Lemma lem6199693 (x : real) : (term139 x) = x.
Proof. exact (EQ_MP (@lem1982628 x) (@lem1982627 x)). Qed.
Lemma lem6199694 : term120 = term65.
Proof. exact (@lem6199693 term65). Qed.
Lemma lem6199695 : term127 = term65.
Proof. exact (TRANS (@lem6199691) (@lem6199694)). Qed.
Lemma lem6199696 (_79015 : int) : (term140 _79015) = (term140 _79015).
Proof. exact (eq_refl (term140 _79015)). Qed.
Lemma lem6199697 (_79015 : int) : (term118 _79015) = (term141 _79015).
Proof. exact (MK_COMB (@lem6199696 _79015) (@lem6199695)). Qed.
Lemma lem6199698 (_79015 : int) : (term141 _79015) = (real_of_int _79015).
Proof. exact (@lem1982723 (real_of_int _79015)). Qed.
Lemma lem6199699 (_79015 : int) : (term118 _79015) = (real_of_int _79015).
Proof. exact (TRANS (@lem6199697 _79015) (@lem6199698 _79015)). Qed.
Lemma lem6199701 (_79015 : int) : (term117 _79015) = (real_of_int _79015).
Proof. exact (TRANS (@lem6199665 _79015) (@lem6199699 _79015)). Qed.
Lemma lem6199702 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem6199703 (_79015 : int) : (term142 _79015) = (term143 _79015).
Proof. exact (MK_COMB (@lem6199702) (@lem6199701 _79015)). Qed.
Lemma lem6199704 : term65 = term65.
Proof. exact (eq_refl term65). Qed.
Lemma lem6199705 (_79015 : int) : (term116 _79015) = (term144 _79015).
Proof. exact (MK_COMB (@lem6199703 _79015) (@lem6199704)). Qed.
Lemma lem6199706 (_79015 : int) : (term68 _79015) = (term144 _79015).
Proof. exact (TRANS (@lem6199659 _79015) (@lem6199705 _79015)). Qed.
Lemma lem6199707 (_79015 : int) : (term316 _79015) = (term323 _79015).
Proof. exact (@lem1988287 (term310 _79015) (term313 _79015)). Qed.
Lemma lem6199725 (_79015 : int) : (term313 _79015) = (term324 _79015).
Proof. exact (@lem1982755 (term93 _79015) term90 term102). Qed.
Lemma lem6199727 (x : nat) : (real_of_num x) = (term119 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6199728 : term102 = term147.
Proof. exact (@lem6199727 term6). Qed.
Lemma lem6199730 (x : nat) : (real_of_num x) = (term119 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6199731 : term90 = term204.
Proof. exact (@lem6199730 term22). Qed.
Lemma lem6199732 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem6199733 : term226 = term227.
Proof. exact (MK_COMB (@lem6199732) (@lem6199731)). Qed.
Lemma lem6199734 : term325 = term326.
Proof. exact (MK_COMB (@lem6199733) (@lem6199728)). Qed.
Lemma lem6199735 : term327.
Proof. exact (@lem1981473 term90 term102 term102 term102 term97 term102). Qed.
Lemma lem6199737 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6199738 : term156 = term157.
Proof. exact (@lem6199737 (NUMERAL 0) term6). Qed.
Lemma lem6199739 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6199740 (h1 : term158 = (BIT1 0)) : term157 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6199741 : (term158 = (BIT1 0)) = (term157 = True).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6199740 h1) (fun h1 : term157 = True => @lem6199739)). Qed.
Lemma lem6199742 : term157 = True.
Proof. exact (EQ_MP (@lem6199741) (@lem6199739)). Qed.
Lemma lem6199743 : term156 = True.
Proof. exact (TRANS (@lem6199738) (@lem6199742)). Qed.
Lemma lem6199744 : True = term156.
Proof. exact (SYM (@lem6199743)). Qed.
Lemma lem6199745 : term156.
Proof. exact (EQ_MP (@lem6199744) (@lem0)). Qed.
Lemma lem6199746 : term328.
Proof. exact (@lem6199735 (@lem6199745)). Qed.
Lemma lem6199748 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6199749 : term156 = term157.
Proof. exact (@lem6199748 (NUMERAL 0) term6). Qed.
Lemma lem6199750 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6199751 (h1 : term158 = (BIT1 0)) : term157 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6199752 : (term158 = (BIT1 0)) = (term157 = True).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6199751 h1) (fun h1 : term157 = True => @lem6199750)). Qed.
Lemma lem6199753 : term157 = True.
Proof. exact (EQ_MP (@lem6199752) (@lem6199750)). Qed.
Lemma lem6199754 : term156 = True.
Proof. exact (TRANS (@lem6199749) (@lem6199753)). Qed.
Lemma lem6199755 : True = term156.
Proof. exact (SYM (@lem6199754)). Qed.
Lemma lem6199756 : term156.
Proof. exact (EQ_MP (@lem6199755) (@lem0)). Qed.
Lemma lem6199757 : term329.
Proof. exact (@lem6199746 (@lem6199756)). Qed.
Lemma lem6199759 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6199760 : term156 = term157.
Proof. exact (@lem6199759 (NUMERAL 0) term6). Qed.
Lemma lem6199761 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6199762 (h1 : term158 = (BIT1 0)) : term157 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6199763 : (term158 = (BIT1 0)) = (term157 = True).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6199762 h1) (fun h1 : term157 = True => @lem6199761)). Qed.
Lemma lem6199764 : term157 = True.
Proof. exact (EQ_MP (@lem6199763) (@lem6199761)). Qed.
Lemma lem6199765 : term156 = True.
Proof. exact (TRANS (@lem6199760) (@lem6199764)). Qed.
Lemma lem6199766 : True = term156.
Proof. exact (SYM (@lem6199765)). Qed.
Lemma lem6199767 : term156.
Proof. exact (EQ_MP (@lem6199766) (@lem0)). Qed.
Lemma lem6199768 : term330.
Proof. exact (@lem6199757 (@lem6199767)). Qed.
Lemma lem6199770 (m : nat) (n : nat) : (term130 m n) = (term131 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6199771 : term132 = term133.
Proof. exact (@lem6199770 term6 term6). Qed.
Lemma lem6199772 : (term134 = (BIT1 0)) = (term135 = term6).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6199773 : term135 = term6.
Proof. exact (EQ_MP (@lem6199772) (@lem940073)). Qed.
Lemma lem6199774 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6199775 : term133 = term102.
Proof. exact (MK_COMB (@lem6199774) (@lem6199773)). Qed.
Lemma lem6199776 : term132 = term102.
Proof. exact (TRANS (@lem6199771) (@lem6199775)). Qed.
Lemma lem6199778 (m : nat) (n : nat) : (term130 m n) = (term131 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6199779 : term237 = term236.
Proof. exact (@lem6199778 term22 term6). Qed.
Lemma lem6199780 : term35 = term20.
Proof. exact (@lem996237 term20). Qed.
Lemma lem6199781 : (term35 = term20) = (term36 = term22).
Proof. exact (@lem1007663 term20 (BIT1 0) term20). Qed.
Lemma lem6199782 : term36 = term22.
Proof. exact (EQ_MP (@lem6199781) (@lem6199780)). Qed.
Lemma lem6199783 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6199784 : term236 = term90.
Proof. exact (MK_COMB (@lem6199783) (@lem6199782)). Qed.
Lemma lem6199785 : term237 = term90.
Proof. exact (TRANS (@lem6199779) (@lem6199784)). Qed.
Lemma lem6199786 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem6199787 : term238 = term226.
Proof. exact (MK_COMB (@lem6199786) (@lem6199785)). Qed.
Lemma lem6199788 : term331 = term325.
Proof. exact (MK_COMB (@lem6199787) (@lem6199776)). Qed.
Lemma lem6199789 : term325 = term332.
Proof. exact (@lem1367770 term22 term6). Qed.
Lemma lem6199790 : term29 = term30.
Proof. exact (@lem706949). Qed.
Lemma lem6199791 : (term29 = term30) = (term31 = term32).
Proof. exact (@lem1006570 term20 (BIT1 0) term30). Qed.
Lemma lem6199792 : term31 = term32.
Proof. exact (EQ_MP (@lem6199791) (@lem6199790)). Qed.
Lemma lem6199793 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6199794 : term332 = term97.
Proof. exact (MK_COMB (@lem6199793) (@lem6199792)). Qed.
Lemma lem6199795 : term325 = term97.
Proof. exact (TRANS (@lem6199789) (@lem6199794)). Qed.
Lemma lem6199796 : term331 = term97.
Proof. exact (TRANS (@lem6199788) (@lem6199795)). Qed.
Lemma lem6199797 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem6199798 : term333 = term334.
Proof. exact (MK_COMB (@lem6199797) (@lem6199796)). Qed.
Lemma lem6199799 : term102 = term102.
Proof. exact (eq_refl term102). Qed.
Lemma lem6199800 : term335 = term162.
Proof. exact (MK_COMB (@lem6199798) (@lem6199799)). Qed.
Lemma lem6199802 (m : nat) (n : nat) : (term130 m n) = (term131 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6199803 : term162 = term163.
Proof. exact (@lem6199802 term32 term6). Qed.
Lemma lem6199804 : term164 = term30.
Proof. exact (@lem996237 term30). Qed.
Lemma lem6199805 : (term164 = term30) = (term165 = term32).
Proof. exact (@lem1007663 term30 (BIT1 0) term30). Qed.
Lemma lem6199806 : term165 = term32.
Proof. exact (EQ_MP (@lem6199805) (@lem6199804)). Qed.
Lemma lem6199807 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6199808 : term163 = term97.
Proof. exact (MK_COMB (@lem6199807) (@lem6199806)). Qed.
Lemma lem6199809 : term162 = term97.
Proof. exact (TRANS (@lem6199803) (@lem6199808)). Qed.
Lemma lem6199810 : term335 = term97.
Proof. exact (TRANS (@lem6199800) (@lem6199809)). Qed.
Lemma lem6199812 (m : nat) (n : nat) : (term130 m n) = (term131 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6199813 : term132 = term133.
Proof. exact (@lem6199812 term6 term6). Qed.
Lemma lem6199814 : (term134 = (BIT1 0)) = (term135 = term6).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6199815 : term135 = term6.
Proof. exact (EQ_MP (@lem6199814) (@lem940073)). Qed.
Lemma lem6199816 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6199817 : term133 = term102.
Proof. exact (MK_COMB (@lem6199816) (@lem6199815)). Qed.
Lemma lem6199818 : term132 = term102.
Proof. exact (TRANS (@lem6199813) (@lem6199817)). Qed.
Lemma lem6199819 : term334 = term334.
Proof. exact (eq_refl term334). Qed.
Lemma lem6199820 : term336 = term162.
Proof. exact (MK_COMB (@lem6199819) (@lem6199818)). Qed.
Lemma lem6199822 (m : nat) (n : nat) : (term130 m n) = (term131 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6199823 : term162 = term163.
Proof. exact (@lem6199822 term32 term6). Qed.
Lemma lem6199824 : term164 = term30.
Proof. exact (@lem996237 term30). Qed.
Lemma lem6199825 : (term164 = term30) = (term165 = term32).
Proof. exact (@lem1007663 term30 (BIT1 0) term30). Qed.
Lemma lem6199826 : term165 = term32.
Proof. exact (EQ_MP (@lem6199825) (@lem6199824)). Qed.
Lemma lem6199827 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6199828 : term163 = term97.
Proof. exact (MK_COMB (@lem6199827) (@lem6199826)). Qed.
Lemma lem6199829 : term162 = term97.
Proof. exact (TRANS (@lem6199823) (@lem6199828)). Qed.
Lemma lem6199830 : term336 = term97.
Proof. exact (TRANS (@lem6199820) (@lem6199829)). Qed.
Lemma lem6199831 : term97 = term336.
Proof. exact (SYM (@lem6199830)). Qed.
Lemma lem6199832 : term335 = term336.
Proof. exact (TRANS (@lem6199810) (@lem6199831)). Qed.
Lemma lem6199833 : term326 = term148.
Proof. exact (@lem6199768 (@lem6199832)). Qed.
Lemma lem6199834 : term325 = term148.
Proof. exact (TRANS (@lem6199734) (@lem6199833)). Qed.
Lemma lem6199836 (x : real) : (term139 x) = x.
Proof. exact (EQ_MP (@lem1981475 x) (@lem1981474 x)). Qed.
Lemma lem6199837 : term148 = term97.
Proof. exact (@lem6199836 term97). Qed.
Lemma lem6199838 : term325 = term97.
Proof. exact (TRANS (@lem6199834) (@lem6199837)). Qed.
Lemma lem6199839 (_79015 : int) : (term95 _79015) = (term95 _79015).
Proof. exact (eq_refl (term95 _79015)). Qed.
Lemma lem6199840 (_79015 : int) : (term324 _79015) = (term98 _79015).
Proof. exact (MK_COMB (@lem6199839 _79015) (@lem6199838)). Qed.
Lemma lem6199842 (_79015 : int) : (term313 _79015) = (term98 _79015).
Proof. exact (TRANS (@lem6199725 _79015) (@lem6199840 _79015)). Qed.
Lemma lem6199857 (_79015 : int) : (term337 _79015) = (term337 _79015).
Proof. exact (eq_refl (term337 _79015)). Qed.
Lemma lem6199858 (_79015 : int) : (term338 _79015) = (term339 _79015).
Proof. exact (MK_COMB (@lem6199857 _79015) (@lem6199842 _79015)). Qed.
Lemma lem6199859 (_79015 : int) : (term339 _79015) = (term340 _79015).
Proof. exact (@lem1982792 (term310 _79015) (term98 _79015)). Qed.
Lemma lem6199860 (_79015 : int) : (term341 _79015) = (term342 _79015).
Proof. exact (@lem1982781 (term93 _79015) term123 term97). Qed.
Lemma lem6199862 (x : nat) : (real_of_num x) = (term119 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6199863 : term97 = term148.
Proof. exact (@lem6199862 term32). Qed.
Lemma lem6199865 (x : nat) : (term121 x) = (term122 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem6199866 : term123 = term124.
Proof. exact (@lem6199865 term6). Qed.
Lemma lem6199867 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem6199868 : term125 = term126.
Proof. exact (MK_COMB (@lem6199867) (@lem6199866)). Qed.
Lemma lem6199869 : term343 = term344.
Proof. exact (MK_COMB (@lem6199868) (@lem6199863)). Qed.
Lemma lem6199870 : term344 = term345.
Proof. exact (@lem1981613 term123 term97 term102 term102). Qed.
Lemma lem6199872 (m : nat) (n : nat) : (term130 m n) = (term131 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6199873 : term132 = term133.
Proof. exact (@lem6199872 term6 term6). Qed.
Lemma lem6199874 : (term134 = (BIT1 0)) = (term135 = term6).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6199875 : term135 = term6.
Proof. exact (EQ_MP (@lem6199874) (@lem940073)). Qed.
Lemma lem6199876 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6199877 : term133 = term102.
Proof. exact (MK_COMB (@lem6199876) (@lem6199875)). Qed.
Lemma lem6199878 : term132 = term102.
Proof. exact (TRANS (@lem6199873) (@lem6199877)). Qed.
Lemma lem6199880 (m : nat) (n : nat) : (term192 m n) = (term193 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem6199881 : term343 = term346.
Proof. exact (@lem6199880 term6 term32). Qed.
Lemma lem6199882 : term347 = term30.
Proof. exact (@lem996238 term30). Qed.
Lemma lem6199883 : (term347 = term30) = (term348 = term32).
Proof. exact (@lem1007663 (BIT1 0) term30 term30). Qed.
Lemma lem6199884 : term348 = term32.
Proof. exact (EQ_MP (@lem6199883) (@lem6199882)). Qed.
Lemma lem6199885 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6199886 : term349 = term97.
Proof. exact (MK_COMB (@lem6199885) (@lem6199884)). Qed.
Lemma lem6199887 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem6199888 : term346 = term350.
Proof. exact (MK_COMB (@lem6199887) (@lem6199886)). Qed.
Lemma lem6199889 : term343 = term350.
Proof. exact (TRANS (@lem6199881) (@lem6199888)). Qed.
Lemma lem6199890 : real_div = real_div.
Proof. exact (eq_refl real_div). Qed.
Lemma lem6199891 : term351 = term352.
Proof. exact (MK_COMB (@lem6199890) (@lem6199889)). Qed.
Lemma lem6199892 : term345 = term353.
Proof. exact (MK_COMB (@lem6199891) (@lem6199878)). Qed.
Lemma lem6199893 : term344 = term353.
Proof. exact (TRANS (@lem6199870) (@lem6199892)). Qed.
Lemma lem6199894 : term343 = term353.
Proof. exact (TRANS (@lem6199869) (@lem6199893)). Qed.
Lemma lem6199896 (x : real) : (term139 x) = x.
Proof. exact (EQ_MP (@lem1982628 x) (@lem1982627 x)). Qed.
Lemma lem6199897 : term353 = term350.
Proof. exact (@lem6199896 term350). Qed.
Lemma lem6199898 : term343 = term350.
Proof. exact (TRANS (@lem6199894) (@lem6199897)). Qed.
Lemma lem6199899 (_79015 : int) : (term202 _79015) = (term203 _79015).
Proof. exact (@lem1982749 term123 term90 (real_of_int _79015)). Qed.
Lemma lem6199901 (x : nat) : (real_of_num x) = (term119 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6199902 : term90 = term204.
Proof. exact (@lem6199901 term22). Qed.
Lemma lem6199904 (x : nat) : (term121 x) = (term122 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem6199905 : term123 = term124.
Proof. exact (@lem6199904 term6). Qed.
Lemma lem6199906 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem6199907 : term125 = term126.
Proof. exact (MK_COMB (@lem6199906) (@lem6199905)). Qed.
Lemma lem6199908 : term205 = term206.
Proof. exact (MK_COMB (@lem6199907) (@lem6199902)). Qed.
Lemma lem6199909 : term206 = term207.
Proof. exact (@lem1981613 term123 term90 term102 term102). Qed.
Lemma lem6199911 (m : nat) (n : nat) : (term130 m n) = (term131 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6199912 : term132 = term133.
Proof. exact (@lem6199911 term6 term6). Qed.
Lemma lem6199913 : (term134 = (BIT1 0)) = (term135 = term6).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6199914 : term135 = term6.
Proof. exact (EQ_MP (@lem6199913) (@lem940073)). Qed.
Lemma lem6199915 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6199916 : term133 = term102.
Proof. exact (MK_COMB (@lem6199915) (@lem6199914)). Qed.
Lemma lem6199917 : term132 = term102.
Proof. exact (TRANS (@lem6199912) (@lem6199916)). Qed.
Lemma lem6199919 (m : nat) (n : nat) : (term192 m n) = (term193 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem6199920 : term205 = term208.
Proof. exact (@lem6199919 term6 term22). Qed.
Lemma lem6199921 : term209 = term20.
Proof. exact (@lem996238 term20). Qed.
Lemma lem6199922 : (term209 = term20) = (term210 = term22).
Proof. exact (@lem1007663 (BIT1 0) term20 term20). Qed.
Lemma lem6199923 : term210 = term22.
Proof. exact (EQ_MP (@lem6199922) (@lem6199921)). Qed.
Lemma lem6199924 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6199925 : term211 = term90.
Proof. exact (MK_COMB (@lem6199924) (@lem6199923)). Qed.
Lemma lem6199926 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem6199927 : term208 = term212.
Proof. exact (MK_COMB (@lem6199926) (@lem6199925)). Qed.
Lemma lem6199928 : term205 = term212.
Proof. exact (TRANS (@lem6199920) (@lem6199927)). Qed.
Lemma lem6199929 : real_div = real_div.
Proof. exact (eq_refl real_div). Qed.
Lemma lem6199930 : term213 = term214.
Proof. exact (MK_COMB (@lem6199929) (@lem6199928)). Qed.
Lemma lem6199931 : term207 = term215.
Proof. exact (MK_COMB (@lem6199930) (@lem6199917)). Qed.
Lemma lem6199932 : term206 = term215.
Proof. exact (TRANS (@lem6199909) (@lem6199931)). Qed.
Lemma lem6199933 : term205 = term215.
Proof. exact (TRANS (@lem6199908) (@lem6199932)). Qed.
Lemma lem6199935 (x : real) : (term139 x) = x.
Proof. exact (EQ_MP (@lem1982628 x) (@lem1982627 x)). Qed.
Lemma lem6199936 : term215 = term212.
Proof. exact (@lem6199935 term212). Qed.
Lemma lem6199937 : term205 = term212.
Proof. exact (TRANS (@lem6199933) (@lem6199936)). Qed.
Lemma lem6199938 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem6199939 : term216 = term217.
Proof. exact (MK_COMB (@lem6199938) (@lem6199937)). Qed.
Lemma lem6199940 (_79015 : int) : (real_of_int _79015) = (real_of_int _79015).
Proof. exact (eq_refl (real_of_int _79015)). Qed.
Lemma lem6199941 (_79015 : int) : (term203 _79015) = (term218 _79015).
Proof. exact (MK_COMB (@lem6199939) (@lem6199940 _79015)). Qed.
Lemma lem6199942 (_79015 : int) : (term202 _79015) = (term218 _79015).
Proof. exact (TRANS (@lem6199899 _79015) (@lem6199941 _79015)). Qed.
Lemma lem6199943 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem6199944 (_79015 : int) : (term219 _79015) = (term220 _79015).
Proof. exact (MK_COMB (@lem6199943) (@lem6199942 _79015)). Qed.
Lemma lem6199945 (_79015 : int) : (term342 _79015) = (term354 _79015).
Proof. exact (MK_COMB (@lem6199944 _79015) (@lem6199898)). Qed.
Lemma lem6199946 (_79015 : int) : (term341 _79015) = (term354 _79015).
Proof. exact (TRANS (@lem6199860 _79015) (@lem6199945 _79015)). Qed.
Lemma lem6199947 (_79015 : int) : (term312 _79015) = (term312 _79015).
Proof. exact (eq_refl (term312 _79015)). Qed.
Lemma lem6199948 (_79015 : int) : (term340 _79015) = (term355 _79015).
Proof. exact (MK_COMB (@lem6199947 _79015) (@lem6199946 _79015)). Qed.
Lemma lem6199949 (_79015 : int) : (term355 _79015) = (term356 _79015).
Proof. exact (@lem1982753 (term93 _79015) (term218 _79015) term90 term350). Qed.
Lemma lem6199950 (_79015 : int) : (term224 _79015) = (term225 _79015).
Proof. exact (@lem1982711 term90 term212 (real_of_int _79015)). Qed.
Lemma lem6199952 (x : nat) : (term121 x) = (term122 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem6199953 : term212 = term215.
Proof. exact (@lem6199952 term22). Qed.
Lemma lem6199955 (x : nat) : (real_of_num x) = (term119 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6199956 : term90 = term204.
Proof. exact (@lem6199955 term22). Qed.
Lemma lem6199957 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem6199958 : term226 = term227.
Proof. exact (MK_COMB (@lem6199957) (@lem6199956)). Qed.
Lemma lem6199959 : term228 = term229.
Proof. exact (MK_COMB (@lem6199958) (@lem6199953)). Qed.
Lemma lem6199960 : term230.
Proof. exact (@lem1981473 term90 term102 term212 term102 term65 term102). Qed.
Lemma lem6199962 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6199963 : term156 = term157.
Proof. exact (@lem6199962 (NUMERAL 0) term6). Qed.
Lemma lem6199964 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6199965 (h1 : term158 = (BIT1 0)) : term157 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6199966 : (term158 = (BIT1 0)) = (term157 = True).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6199965 h1) (fun h1 : term157 = True => @lem6199964)). Qed.
Lemma lem6199967 : term157 = True.
Proof. exact (EQ_MP (@lem6199966) (@lem6199964)). Qed.
Lemma lem6199968 : term156 = True.
Proof. exact (TRANS (@lem6199963) (@lem6199967)). Qed.
Lemma lem6199969 : True = term156.
Proof. exact (SYM (@lem6199968)). Qed.
Lemma lem6199970 : term156.
Proof. exact (EQ_MP (@lem6199969) (@lem0)). Qed.
Lemma lem6199971 : term231.
Proof. exact (@lem6199960 (@lem6199970)). Qed.
Lemma lem6199973 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6199974 : term156 = term157.
Proof. exact (@lem6199973 (NUMERAL 0) term6). Qed.
Lemma lem6199975 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6199976 (h1 : term158 = (BIT1 0)) : term157 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6199977 : (term158 = (BIT1 0)) = (term157 = True).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6199976 h1) (fun h1 : term157 = True => @lem6199975)). Qed.
Lemma lem6199978 : term157 = True.
Proof. exact (EQ_MP (@lem6199977) (@lem6199975)). Qed.
Lemma lem6199979 : term156 = True.
Proof. exact (TRANS (@lem6199974) (@lem6199978)). Qed.
Lemma lem6199980 : True = term156.
Proof. exact (SYM (@lem6199979)). Qed.
Lemma lem6199981 : term156.
Proof. exact (EQ_MP (@lem6199980) (@lem0)). Qed.
Lemma lem6199982 : term232.
Proof. exact (@lem6199971 (@lem6199981)). Qed.
Lemma lem6199984 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6199985 : term156 = term157.
Proof. exact (@lem6199984 (NUMERAL 0) term6). Qed.
Lemma lem6199986 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6199987 (h1 : term158 = (BIT1 0)) : term157 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6199988 : (term158 = (BIT1 0)) = (term157 = True).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6199987 h1) (fun h1 : term157 = True => @lem6199986)). Qed.
Lemma lem6199989 : term157 = True.
Proof. exact (EQ_MP (@lem6199988) (@lem6199986)). Qed.
Lemma lem6199990 : term156 = True.
Proof. exact (TRANS (@lem6199985) (@lem6199989)). Qed.
Lemma lem6199991 : True = term156.
Proof. exact (SYM (@lem6199990)). Qed.
Lemma lem6199992 : term156.
Proof. exact (EQ_MP (@lem6199991) (@lem0)). Qed.
Lemma lem6199993 : term233.
Proof. exact (@lem6199982 (@lem6199992)). Qed.
Lemma lem6199995 (m : nat) (n : nat) : (term192 m n) = (term193 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem6199996 : term234 = term235.
Proof. exact (@lem6199995 term22 term6). Qed.
Lemma lem6199997 : term35 = term20.
Proof. exact (@lem996237 term20). Qed.
Lemma lem6199998 : (term35 = term20) = (term36 = term22).
Proof. exact (@lem1007663 term20 (BIT1 0) term20). Qed.
Lemma lem6199999 : term36 = term22.
Proof. exact (EQ_MP (@lem6199998) (@lem6199997)). Qed.
Lemma lem6200000 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6200001 : term236 = term90.
Proof. exact (MK_COMB (@lem6200000) (@lem6199999)). Qed.
Lemma lem6200002 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem6200003 : term235 = term212.
Proof. exact (MK_COMB (@lem6200002) (@lem6200001)). Qed.
Lemma lem6200004 : term234 = term212.
Proof. exact (TRANS (@lem6199996) (@lem6200003)). Qed.
Lemma lem6200006 (m : nat) (n : nat) : (term130 m n) = (term131 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6200007 : term237 = term236.
Proof. exact (@lem6200006 term22 term6). Qed.
Lemma lem6200008 : term35 = term20.
Proof. exact (@lem996237 term20). Qed.
Lemma lem6200009 : (term35 = term20) = (term36 = term22).
Proof. exact (@lem1007663 term20 (BIT1 0) term20). Qed.
Lemma lem6200010 : term36 = term22.
Proof. exact (EQ_MP (@lem6200009) (@lem6200008)). Qed.
Lemma lem6200011 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6200012 : term236 = term90.
Proof. exact (MK_COMB (@lem6200011) (@lem6200010)). Qed.
Lemma lem6200013 : term237 = term90.
Proof. exact (TRANS (@lem6200007) (@lem6200012)). Qed.
Lemma lem6200014 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem6200015 : term238 = term226.
Proof. exact (MK_COMB (@lem6200014) (@lem6200013)). Qed.
Lemma lem6200016 : term239 = term228.
Proof. exact (MK_COMB (@lem6200015) (@lem6200004)). Qed.
Lemma lem6200018 (m : nat) : (term240 m) = term65.
Proof. exact (proj2 (@lem1367303 m)). Qed.
Lemma lem6200019 : term228 = term65.
Proof. exact (@lem6200018 term22). Qed.
Lemma lem6200020 : term239 = term65.
Proof. exact (TRANS (@lem6200016) (@lem6200019)). Qed.
Lemma lem6200021 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem6200022 : term241 = term242.
Proof. exact (MK_COMB (@lem6200021) (@lem6200020)). Qed.
Lemma lem6200023 : term102 = term102.
Proof. exact (eq_refl term102). Qed.
Lemma lem6200024 : term243 = term244.
Proof. exact (MK_COMB (@lem6200022) (@lem6200023)). Qed.
Lemma lem6200026 (x : nat) : (term245 x) = term65.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem6200027 : term244 = term65.
Proof. exact (@lem6200026 term6). Qed.
Lemma lem6200028 : term243 = term65.
Proof. exact (TRANS (@lem6200024) (@lem6200027)). Qed.
Lemma lem6200030 (m : nat) (n : nat) : (term130 m n) = (term131 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6200031 : term132 = term133.
Proof. exact (@lem6200030 term6 term6). Qed.
Lemma lem6200032 : (term134 = (BIT1 0)) = (term135 = term6).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6200033 : term135 = term6.
Proof. exact (EQ_MP (@lem6200032) (@lem940073)). Qed.
Lemma lem6200034 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6200035 : term133 = term102.
Proof. exact (MK_COMB (@lem6200034) (@lem6200033)). Qed.
Lemma lem6200036 : term132 = term102.
Proof. exact (TRANS (@lem6200031) (@lem6200035)). Qed.
Lemma lem6200037 : term242 = term242.
Proof. exact (eq_refl term242). Qed.
Lemma lem6200038 : term246 = term244.
Proof. exact (MK_COMB (@lem6200037) (@lem6200036)). Qed.
Lemma lem6200040 (x : nat) : (term245 x) = term65.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem6200041 : term244 = term65.
Proof. exact (@lem6200040 term6). Qed.
Lemma lem6200042 : term246 = term65.
Proof. exact (TRANS (@lem6200038) (@lem6200041)). Qed.
Lemma lem6200043 : term65 = term246.
Proof. exact (SYM (@lem6200042)). Qed.
Lemma lem6200044 : term243 = term246.
Proof. exact (TRANS (@lem6200028) (@lem6200043)). Qed.
Lemma lem6200045 : term229 = term120.
Proof. exact (@lem6199993 (@lem6200044)). Qed.
Lemma lem6200046 : term228 = term120.
Proof. exact (TRANS (@lem6199959) (@lem6200045)). Qed.
Lemma lem6200048 (x : real) : (term139 x) = x.
Proof. exact (EQ_MP (@lem1981475 x) (@lem1981474 x)). Qed.
Lemma lem6200049 : term120 = term65.
Proof. exact (@lem6200048 term65). Qed.
Lemma lem6200050 : term228 = term65.
Proof. exact (TRANS (@lem6200046) (@lem6200049)). Qed.
Lemma lem6200051 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem6200052 : term247 = term242.
Proof. exact (MK_COMB (@lem6200051) (@lem6200050)). Qed.
Lemma lem6200053 (_79015 : int) : (real_of_int _79015) = (real_of_int _79015).
Proof. exact (eq_refl (real_of_int _79015)). Qed.
Lemma lem6200054 (_79015 : int) : (term225 _79015) = (term248 _79015).
Proof. exact (MK_COMB (@lem6200052) (@lem6200053 _79015)). Qed.
Lemma lem6200055 (_79015 : int) : (term224 _79015) = (term248 _79015).
Proof. exact (TRANS (@lem6199950 _79015) (@lem6200054 _79015)). Qed.
Lemma lem6200056 (_79015 : int) : (term248 _79015) = term65.
Proof. exact (@lem1982719 (real_of_int _79015)). Qed.
Lemma lem6200057 (_79015 : int) : (term224 _79015) = term65.
Proof. exact (TRANS (@lem6200055 _79015) (@lem6200056 _79015)). Qed.
Lemma lem6200058 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem6200059 (_79015 : int) : (term249 _79015) = term250.
Proof. exact (MK_COMB (@lem6200058) (@lem6200057 _79015)). Qed.
Lemma lem6200061 (x : nat) : (term121 x) = (term122 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem6200062 : term350 = term353.
Proof. exact (@lem6200061 term32). Qed.
Lemma lem6200064 (x : nat) : (real_of_num x) = (term119 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6200065 : term90 = term204.
Proof. exact (@lem6200064 term22). Qed.
Lemma lem6200066 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem6200067 : term226 = term227.
Proof. exact (MK_COMB (@lem6200066) (@lem6200065)). Qed.
Lemma lem6200068 : term357 = term358.
Proof. exact (MK_COMB (@lem6200067) (@lem6200062)). Qed.
Lemma lem6200069 : term359.
Proof. exact (@lem1981473 term90 term102 term350 term102 term123 term102). Qed.
Lemma lem6200071 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6200072 : term156 = term157.
Proof. exact (@lem6200071 (NUMERAL 0) term6). Qed.
Lemma lem6200073 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6200074 (h1 : term158 = (BIT1 0)) : term157 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6200075 : (term158 = (BIT1 0)) = (term157 = True).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6200074 h1) (fun h1 : term157 = True => @lem6200073)). Qed.
Lemma lem6200076 : term157 = True.
Proof. exact (EQ_MP (@lem6200075) (@lem6200073)). Qed.
Lemma lem6200077 : term156 = True.
Proof. exact (TRANS (@lem6200072) (@lem6200076)). Qed.
Lemma lem6200078 : True = term156.
Proof. exact (SYM (@lem6200077)). Qed.
Lemma lem6200079 : term156.
Proof. exact (EQ_MP (@lem6200078) (@lem0)). Qed.
Lemma lem6200080 : term360.
Proof. exact (@lem6200069 (@lem6200079)). Qed.
Lemma lem6200082 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6200083 : term156 = term157.
Proof. exact (@lem6200082 (NUMERAL 0) term6). Qed.
Lemma lem6200084 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6200085 (h1 : term158 = (BIT1 0)) : term157 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6200086 : (term158 = (BIT1 0)) = (term157 = True).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6200085 h1) (fun h1 : term157 = True => @lem6200084)). Qed.
Lemma lem6200087 : term157 = True.
Proof. exact (EQ_MP (@lem6200086) (@lem6200084)). Qed.
Lemma lem6200088 : term156 = True.
Proof. exact (TRANS (@lem6200083) (@lem6200087)). Qed.
Lemma lem6200089 : True = term156.
Proof. exact (SYM (@lem6200088)). Qed.
Lemma lem6200090 : term156.
Proof. exact (EQ_MP (@lem6200089) (@lem0)). Qed.
Lemma lem6200091 : term361.
Proof. exact (@lem6200080 (@lem6200090)). Qed.
Lemma lem6200093 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6200094 : term156 = term157.
Proof. exact (@lem6200093 (NUMERAL 0) term6). Qed.
Lemma lem6200095 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6200096 (h1 : term158 = (BIT1 0)) : term157 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6200097 : (term158 = (BIT1 0)) = (term157 = True).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6200096 h1) (fun h1 : term157 = True => @lem6200095)). Qed.
Lemma lem6200098 : term157 = True.
Proof. exact (EQ_MP (@lem6200097) (@lem6200095)). Qed.
Lemma lem6200099 : term156 = True.
Proof. exact (TRANS (@lem6200094) (@lem6200098)). Qed.
Lemma lem6200100 : True = term156.
Proof. exact (SYM (@lem6200099)). Qed.
Lemma lem6200101 : term156.
Proof. exact (EQ_MP (@lem6200100) (@lem0)). Qed.
Lemma lem6200102 : term362.
Proof. exact (@lem6200091 (@lem6200101)). Qed.
Lemma lem6200104 (m : nat) (n : nat) : (term192 m n) = (term193 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem6200105 : term363 = term364.
Proof. exact (@lem6200104 term32 term6). Qed.
Lemma lem6200106 : term164 = term30.
Proof. exact (@lem996237 term30). Qed.
Lemma lem6200107 : (term164 = term30) = (term165 = term32).
Proof. exact (@lem1007663 term30 (BIT1 0) term30). Qed.
Lemma lem6200108 : term165 = term32.
Proof. exact (EQ_MP (@lem6200107) (@lem6200106)). Qed.
Lemma lem6200109 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6200110 : term163 = term97.
Proof. exact (MK_COMB (@lem6200109) (@lem6200108)). Qed.
Lemma lem6200111 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem6200112 : term364 = term350.
Proof. exact (MK_COMB (@lem6200111) (@lem6200110)). Qed.
Lemma lem6200113 : term363 = term350.
Proof. exact (TRANS (@lem6200105) (@lem6200112)). Qed.
Lemma lem6200115 (m : nat) (n : nat) : (term130 m n) = (term131 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6200116 : term237 = term236.
Proof. exact (@lem6200115 term22 term6). Qed.
Lemma lem6200117 : term35 = term20.
Proof. exact (@lem996237 term20). Qed.
Lemma lem6200118 : (term35 = term20) = (term36 = term22).
Proof. exact (@lem1007663 term20 (BIT1 0) term20). Qed.
Lemma lem6200119 : term36 = term22.
Proof. exact (EQ_MP (@lem6200118) (@lem6200117)). Qed.
Lemma lem6200120 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6200121 : term236 = term90.
Proof. exact (MK_COMB (@lem6200120) (@lem6200119)). Qed.
Lemma lem6200122 : term237 = term90.
Proof. exact (TRANS (@lem6200116) (@lem6200121)). Qed.
Lemma lem6200123 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem6200124 : term238 = term226.
Proof. exact (MK_COMB (@lem6200123) (@lem6200122)). Qed.
Lemma lem6200125 : term365 = term357.
Proof. exact (MK_COMB (@lem6200124) (@lem6200113)). Qed.
Lemma lem6200128 : term366 = term123.
Proof. exact (@lem1367771 term22 term6). Qed.
Lemma lem6200129 : term29 = term30.
Proof. exact (@lem706949). Qed.
Lemma lem6200130 : (term29 = term30) = (term31 = term32).
Proof. exact (@lem1006570 term20 (BIT1 0) term30). Qed.
Lemma lem6200131 : term31 = term32.
Proof. exact (EQ_MP (@lem6200130) (@lem6200129)). Qed.
Lemma lem6200132 : term32 = term31.
Proof. exact (SYM (@lem6200131)). Qed.
Lemma lem6200133 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6200134 : term97 = term332.
Proof. exact (MK_COMB (@lem6200133) (@lem6200132)). Qed.
Lemma lem6200135 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem6200136 : term350 = term367.
Proof. exact (MK_COMB (@lem6200135) (@lem6200134)). Qed.
Lemma lem6200137 : term226 = term226.
Proof. exact (eq_refl term226). Qed.
Lemma lem6200138 : term357 = term366.
Proof. exact (MK_COMB (@lem6200137) (@lem6200136)). Qed.
Lemma lem6200139 : term357 = term123.
Proof. exact (TRANS (@lem6200138) (@lem6200128)). Qed.
Lemma lem6200140 : term365 = term123.
Proof. exact (TRANS (@lem6200125) (@lem6200139)). Qed.
Lemma lem6200141 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem6200142 : term368 = term125.
Proof. exact (MK_COMB (@lem6200141) (@lem6200140)). Qed.
Lemma lem6200143 : term102 = term102.
Proof. exact (eq_refl term102). Qed.
Lemma lem6200144 : term369 = term264.
Proof. exact (MK_COMB (@lem6200142) (@lem6200143)). Qed.
Lemma lem6200146 (m : nat) (n : nat) : (term192 m n) = (term193 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem6200147 : term264 = term265.
Proof. exact (@lem6200146 term6 term6). Qed.
Lemma lem6200148 : (term134 = (BIT1 0)) = (term135 = term6).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6200149 : term135 = term6.
Proof. exact (EQ_MP (@lem6200148) (@lem940073)). Qed.
Lemma lem6200150 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6200151 : term133 = term102.
Proof. exact (MK_COMB (@lem6200150) (@lem6200149)). Qed.
Lemma lem6200152 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem6200153 : term265 = term123.
Proof. exact (MK_COMB (@lem6200152) (@lem6200151)). Qed.
Lemma lem6200154 : term264 = term123.
Proof. exact (TRANS (@lem6200147) (@lem6200153)). Qed.
Lemma lem6200155 : term369 = term123.
Proof. exact (TRANS (@lem6200144) (@lem6200154)). Qed.
Lemma lem6200157 (m : nat) (n : nat) : (term130 m n) = (term131 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6200158 : term132 = term133.
Proof. exact (@lem6200157 term6 term6). Qed.
Lemma lem6200159 : (term134 = (BIT1 0)) = (term135 = term6).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6200160 : term135 = term6.
Proof. exact (EQ_MP (@lem6200159) (@lem940073)). Qed.
Lemma lem6200161 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6200162 : term133 = term102.
Proof. exact (MK_COMB (@lem6200161) (@lem6200160)). Qed.
Lemma lem6200163 : term132 = term102.
Proof. exact (TRANS (@lem6200158) (@lem6200162)). Qed.
Lemma lem6200164 : term125 = term125.
Proof. exact (eq_refl term125). Qed.
Lemma lem6200165 : term266 = term264.
Proof. exact (MK_COMB (@lem6200164) (@lem6200163)). Qed.
Lemma lem6200167 (m : nat) (n : nat) : (term192 m n) = (term193 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem6200168 : term264 = term265.
Proof. exact (@lem6200167 term6 term6). Qed.
Lemma lem6200169 : (term134 = (BIT1 0)) = (term135 = term6).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6200170 : term135 = term6.
Proof. exact (EQ_MP (@lem6200169) (@lem940073)). Qed.
Lemma lem6200171 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6200172 : term133 = term102.
Proof. exact (MK_COMB (@lem6200171) (@lem6200170)). Qed.
Lemma lem6200173 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem6200174 : term265 = term123.
Proof. exact (MK_COMB (@lem6200173) (@lem6200172)). Qed.
Lemma lem6200175 : term264 = term123.
Proof. exact (TRANS (@lem6200168) (@lem6200174)). Qed.
Lemma lem6200176 : term266 = term123.
Proof. exact (TRANS (@lem6200165) (@lem6200175)). Qed.
Lemma lem6200177 : term123 = term266.
Proof. exact (SYM (@lem6200176)). Qed.
Lemma lem6200178 : term369 = term266.
Proof. exact (TRANS (@lem6200155) (@lem6200177)). Qed.
Lemma lem6200179 : term358 = term124.
Proof. exact (@lem6200102 (@lem6200178)). Qed.
Lemma lem6200180 : term357 = term124.
Proof. exact (TRANS (@lem6200068) (@lem6200179)). Qed.
Lemma lem6200182 (x : real) : (term139 x) = x.
Proof. exact (EQ_MP (@lem1981475 x) (@lem1981474 x)). Qed.
Lemma lem6200183 : term124 = term123.
Proof. exact (@lem6200182 term123). Qed.
Lemma lem6200184 : term357 = term123.
Proof. exact (TRANS (@lem6200180) (@lem6200183)). Qed.
Lemma lem6200185 (_79015 : int) : (term356 _79015) = term267.
Proof. exact (MK_COMB (@lem6200059 _79015) (@lem6200184)). Qed.
Lemma lem6200186 (_79015 : int) : (term355 _79015) = term267.
Proof. exact (TRANS (@lem6199949 _79015) (@lem6200185 _79015)). Qed.
Lemma lem6200187 : term267 = term123.
Proof. exact (@lem1982721 term123). Qed.
Lemma lem6200188 (_79015 : int) : (term355 _79015) = term123.
Proof. exact (TRANS (@lem6200186 _79015) (@lem6200187)). Qed.
Lemma lem6200189 (_79015 : int) : (term340 _79015) = term123.
Proof. exact (TRANS (@lem6199948 _79015) (@lem6200188 _79015)). Qed.
Lemma lem6200190 (_79015 : int) : (term339 _79015) = term123.
Proof. exact (TRANS (@lem6199859 _79015) (@lem6200189 _79015)). Qed.
Lemma lem6200191 (_79015 : int) : (term338 _79015) = term123.
Proof. exact (TRANS (@lem6199858 _79015) (@lem6200190 _79015)). Qed.
Lemma lem6200192 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem6200193 (_79015 : int) : (term370 _79015) = term269.
Proof. exact (MK_COMB (@lem6200192) (@lem6200191 _79015)). Qed.
Lemma lem6200194 : term65 = term65.
Proof. exact (eq_refl term65). Qed.
Lemma lem6200195 (_79015 : int) : (term323 _79015) = term270.
Proof. exact (MK_COMB (@lem6200193 _79015) (@lem6200194)). Qed.
Lemma lem6200196 (_79015 : int) : (term316 _79015) = term270.
Proof. exact (TRANS (@lem6199707 _79015) (@lem6200195 _79015)). Qed.
Lemma lem6200197 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6200198 (_79015 : int) : (term111 _79015) = (term271 _79015).
Proof. exact (MK_COMB (@lem6200197) (@lem6199706 _79015)). Qed.
Lemma lem6200199 (_79015 : int) : (term322 _79015) = (term272 _79015).
Proof. exact (MK_COMB (@lem6200198 _79015) (@lem6200196 _79015)). Qed.
Lemma lem6200214 (_79015 : int) : (term321 _79015) = (term272 _79015).
Proof. exact (TRANS (@lem6199658 _79015) (@lem6200199 _79015)). Qed.
Lemma lem6200218 (_79015 : int) (h1 : term272 _79015) : term272 _79015.
Proof. exact (h1). Qed.
Lemma lem6200219 (_79015 : int) (h1 : term272 _79015) : term270.
Proof. exact (proj2 (@lem6200218 _79015 h1)). Qed.
Lemma lem6200222 (y : real) (x : real) : (real_ge x y) = (real_le y x).
Proof. exact (EQ_MP (@lem1980260 y x) (@lem1980259 y x)). Qed.
Lemma lem6200223 : term270 = term273.
Proof. exact (@lem6200222 term65 term123). Qed.
Lemma lem6200225 (x : nat) : (term121 x) = (term122 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem6200226 : term123 = term124.
Proof. exact (@lem6200225 term6). Qed.
Lemma lem6200228 (x : nat) : (real_of_num x) = (term119 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6200229 : term65 = term120.
Proof. exact (@lem6200228 (NUMERAL 0)). Qed.
Lemma lem6200230 : real_le = real_le.
Proof. exact (eq_refl real_le). Qed.
Lemma lem6200231 : term67 = term274.
Proof. exact (MK_COMB (@lem6200230) (@lem6200229)). Qed.
Lemma lem6200232 : term273 = term275.
Proof. exact (MK_COMB (@lem6200231) (@lem6200226)). Qed.
Lemma lem6200233 : term276.
Proof. exact (@lem1980026 term65 term102 term123 term102). Qed.
Lemma lem6200235 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6200236 : term156 = term157.
Proof. exact (@lem6200235 (NUMERAL 0) term6). Qed.
Lemma lem6200237 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6200238 (h1 : term158 = (BIT1 0)) : term157 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6200239 : (term158 = (BIT1 0)) = (term157 = True).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6200238 h1) (fun h1 : term157 = True => @lem6200237)). Qed.
Lemma lem6200240 : term157 = True.
Proof. exact (EQ_MP (@lem6200239) (@lem6200237)). Qed.
Lemma lem6200241 : term156 = True.
Proof. exact (TRANS (@lem6200236) (@lem6200240)). Qed.
Lemma lem6200242 : True = term156.
Proof. exact (SYM (@lem6200241)). Qed.
Lemma lem6200243 : term156.
Proof. exact (EQ_MP (@lem6200242) (@lem0)). Qed.
Lemma lem6200244 : term277.
Proof. exact (@lem6200233 (@lem6200243)). Qed.
Lemma lem6200246 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6200247 : term156 = term157.
Proof. exact (@lem6200246 (NUMERAL 0) term6). Qed.
Lemma lem6200248 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6200249 (h1 : term158 = (BIT1 0)) : term157 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6200250 : (term158 = (BIT1 0)) = (term157 = True).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6200249 h1) (fun h1 : term157 = True => @lem6200248)). Qed.
Lemma lem6200251 : term157 = True.
Proof. exact (EQ_MP (@lem6200250) (@lem6200248)). Qed.
Lemma lem6200252 : term156 = True.
Proof. exact (TRANS (@lem6200247) (@lem6200251)). Qed.
Lemma lem6200253 : True = term156.
Proof. exact (SYM (@lem6200252)). Qed.
Lemma lem6200254 : term156.
Proof. exact (EQ_MP (@lem6200253) (@lem0)). Qed.
Lemma lem6200255 : term275 = term278.
Proof. exact (@lem6200244 (@lem6200254)). Qed.
Lemma lem6200257 (m : nat) (n : nat) : (term192 m n) = (term193 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem6200258 : term264 = term265.
Proof. exact (@lem6200257 term6 term6). Qed.
Lemma lem6200259 : (term134 = (BIT1 0)) = (term135 = term6).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6200260 : term135 = term6.
Proof. exact (EQ_MP (@lem6200259) (@lem940073)). Qed.
Lemma lem6200261 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6200262 : term133 = term102.
Proof. exact (MK_COMB (@lem6200261) (@lem6200260)). Qed.
Lemma lem6200263 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem6200264 : term265 = term123.
Proof. exact (MK_COMB (@lem6200263) (@lem6200262)). Qed.
Lemma lem6200265 : term264 = term123.
Proof. exact (TRANS (@lem6200258) (@lem6200264)). Qed.
Lemma lem6200267 (x : nat) : (term245 x) = term65.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem6200268 : term244 = term65.
Proof. exact (@lem6200267 term6). Qed.
Lemma lem6200269 : real_le = real_le.
Proof. exact (eq_refl real_le). Qed.
Lemma lem6200270 : term279 = term67.
Proof. exact (MK_COMB (@lem6200269) (@lem6200268)). Qed.
Lemma lem6200271 : term278 = term273.
Proof. exact (MK_COMB (@lem6200270) (@lem6200265)). Qed.
Lemma lem6200273 (m : nat) (n : nat) : (term280 m n) = (term281 m n).
Proof. exact (proj2 (@lem1365406 m n)). Qed.
Lemma lem6200274 : term273 = term282.
Proof. exact (@lem6200273 (NUMERAL 0) term6). Qed.
Lemma lem6200275 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6200276 (h1 : term158 = (BIT1 0)) : (term6 = (NUMERAL 0)) = False.
Proof. exact (@lem1013352 0 0 (BIT1 0) h1). Qed.
Lemma lem6200277 : (term158 = (BIT1 0)) = ((term6 = (NUMERAL 0)) = False).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6200276 h1) (fun h1 : (term6 = (NUMERAL 0)) = False => @lem6200275)). Qed.
Lemma lem6200278 : (term6 = (NUMERAL 0)) = False.
Proof. exact (EQ_MP (@lem6200277) (@lem6200275)). Qed.
Lemma lem6200279 : ((NUMERAL 0) = (NUMERAL 0)) = True.
Proof. exact (@lem1013364 0). Qed.
Lemma lem6200280 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6200281 : term283 = (and True).
Proof. exact (MK_COMB (@lem6200280) (@lem6200279)). Qed.
Lemma lem6200282 : term282 = (True /\ False).
Proof. exact (MK_COMB (@lem6200281) (@lem6200278)). Qed.
Lemma lem6200284 : (True /\ False) = False.
Proof. exact (proj1 (@lem1365106)). Qed.
Lemma lem6200285 : term282 = False.
Proof. exact (TRANS (@lem6200282) (@lem6200284)). Qed.
Lemma lem6200286 : term273 = False.
Proof. exact (TRANS (@lem6200274) (@lem6200285)). Qed.
Lemma lem6200287 : term278 = False.
Proof. exact (TRANS (@lem6200271) (@lem6200286)). Qed.
Lemma lem6200288 : term275 = False.
Proof. exact (TRANS (@lem6200255) (@lem6200287)). Qed.
Lemma lem6200289 : term273 = False.
Proof. exact (TRANS (@lem6200232) (@lem6200288)). Qed.
Lemma lem6200290 : term270 = False.
Proof. exact (TRANS (@lem6200223) (@lem6200289)). Qed.
Lemma lem6200291 (_79015 : int) (h1 : term272 _79015) : False.
Proof. exact (EQ_MP (@lem6200290) (@lem6200219 _79015 h1)). Qed.
Lemma lem6200293 (_79015 : int) (h1 : term272 _79015) : term272 _79015.
Proof. exact (h1). Qed.
Lemma lem6200294 (_79015 : int) (h1 : term272 _79015) : (term272 _79015) = False.
Proof. exact (prop_ext (fun h2 : term272 _79015 => @lem6200291 _79015 h1) (fun h2 : False => @lem6200293 _79015 h1)). Qed.
Lemma lem6200295 (_79015 : int) (h1 : term272 _79015) : False.
Proof. exact (EQ_MP (@lem6200294 _79015 h1) (@lem6200293 _79015 h1)). Qed.
Lemma lem6200296 (_79015 : int) (h1 : term321 _79015) : term321 _79015.
Proof. exact (h1). Qed.
Lemma lem6200297 (_79015 : int) (h1 : term321 _79015) : term272 _79015.
Proof. exact (EQ_MP (@lem6200214 _79015) (@lem6200296 _79015 h1)). Qed.
Lemma lem6200298 (_79015 : int) (h1 : term321 _79015) : (term272 _79015) = False.
Proof. exact (prop_ext (fun h2 : term272 _79015 => @lem6200295 _79015 h2) (fun h2 : False => @lem6200297 _79015 h1)). Qed.
Lemma lem6200299 (_79015 : int) (h1 : term321 _79015) : False.
Proof. exact (EQ_MP (@lem6200298 _79015 h1) (@lem6200297 _79015 h1)). Qed.
Lemma lem6200300 (_79015 : int) : term371 _79015.
Proof. exact (fun h0 : term321 _79015 => @lem6200299 _79015 h0). Qed.
Lemma lem6200301 (_79015 : int) : term372 _79015.
Proof. exact (@lem1386578 (term373 _79015)). Qed.
Lemma lem6200304 (_79015 : int) : term373 _79015.
Proof. exact (@lem6200301 _79015 (@lem6200300 _79015)). Qed.
Lemma lem6200305 (_79015 : int) : (term320 _79015) = (term298 _79015).
Proof. exact (SYM (@lem6199630 _79015)). Qed.
Lemma lem6200306 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem6200307 (_79015 : int) : (term373 _79015) = (term296 _79015).
Proof. exact (MK_COMB (@lem6200306) (@lem6200305 _79015)). Qed.
Lemma lem6200308 (_79015 : int) : term296 _79015.
Proof. exact (EQ_MP (@lem6200307 _79015) (@lem6200304 _79015)). Qed.
Lemma lem6200309 (_79015 : int) : term297 _79015.
Proof. exact (EQ_MP (@lem6199465 _79015) (@lem6200308 _79015)). Qed.
Lemma lem6200310 (n : nat) : term374 n.
Proof. exact (@lem6200309 (int_of_num n)). Qed.
Lemma lem6200311 (n : nat) : (term293 n) = (term293 n).
Proof. exact (@lem6200310 n (@lem6199464 n)). Qed.
Lemma lem6200312 (n : nat) : ((term293 n) = (term293 n)) = ((term2 n) = (term11 n)).
Proof. exact (SYM (@lem6199461 n)). Qed.
Lemma lem6200350 (m : nat) (n : nat) : ((term375 m n) = (term376 m n)) = (term377 m n).
Proof. exact (@lem17500 (term375 m n) (term376 m n)). Qed.
Lemma lem6200352 (m : nat) : (S m) = (term0 m).
Proof. exact (EQ_MP (@lem2841417 m) (@lem2841416 m)). Qed.
Lemma lem6200353 (n : nat) : (term11 n) = (term12 n).
Proof. exact (@lem6200352 (term13 n)). Qed.
Lemma lem6200354 (m : nat) : (term378 m) = (term378 m).
Proof. exact (eq_refl (term378 m)). Qed.
Lemma lem6200355 (m : nat) (n : nat) : (term375 m n) = (term379 m n).
Proof. exact (MK_COMB (@lem6200354 m) (@lem6200353 n)). Qed.
Lemma lem6200356 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6200357 (m : nat) (n : nat) : (term380 m n) = (term381 m n).
Proof. exact (MK_COMB (@lem6200356) (@lem6200355 m n)). Qed.
Lemma lem6200359 (m : nat) : (S m) = (term0 m).
Proof. exact (EQ_MP (@lem2841417 m) (@lem2841416 m)). Qed.
Lemma lem6200360 (n : nat) : (S n) = (term0 n).
Proof. exact (@lem6200359 n). Qed.
Lemma lem6200361 (m : nat) : (Peano.le m) = (Peano.le m).
Proof. exact (eq_refl (Peano.le m)). Qed.
Lemma lem6200362 (m : nat) (n : nat) : (term376 m n) = (term382 m n).
Proof. exact (MK_COMB (@lem6200361 m) (@lem6200360 n)). Qed.
Lemma lem6200363 (m : nat) (n : nat) : (term383 m n) = (term384 m n).
Proof. exact (MK_COMB (@lem6200357 m n) (@lem6200362 m n)). Qed.
Lemma lem6200364 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6200365 (m : nat) (n : nat) : (term385 m n) = (term386 m n).
Proof. exact (MK_COMB (@lem6200364) (@lem6200363 m n)). Qed.
Lemma lem6200367 (m : nat) : (S m) = (term0 m).
Proof. exact (EQ_MP (@lem2841417 m) (@lem2841416 m)). Qed.
Lemma lem6200368 (n : nat) : (term11 n) = (term12 n).
Proof. exact (@lem6200367 (term13 n)). Qed.
Lemma lem6200369 (m : nat) : (term378 m) = (term378 m).
Proof. exact (eq_refl (term378 m)). Qed.
Lemma lem6200370 (m : nat) (n : nat) : (term375 m n) = (term379 m n).
Proof. exact (MK_COMB (@lem6200369 m) (@lem6200368 n)). Qed.
Lemma lem6200371 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem6200372 (m : nat) (n : nat) : (term387 m n) = (term388 m n).
Proof. exact (MK_COMB (@lem6200371) (@lem6200370 m n)). Qed.
Lemma lem6200373 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6200374 (m : nat) (n : nat) : (term389 m n) = (term390 m n).
Proof. exact (MK_COMB (@lem6200373) (@lem6200372 m n)). Qed.
Lemma lem6200376 (m : nat) : (S m) = (term0 m).
Proof. exact (EQ_MP (@lem2841417 m) (@lem2841416 m)). Qed.
Lemma lem6200377 (n : nat) : (S n) = (term0 n).
Proof. exact (@lem6200376 n). Qed.
Lemma lem6200378 (m : nat) : (Peano.le m) = (Peano.le m).
Proof. exact (eq_refl (Peano.le m)). Qed.
Lemma lem6200379 (m : nat) (n : nat) : (term376 m n) = (term382 m n).
Proof. exact (MK_COMB (@lem6200378 m) (@lem6200377 n)). Qed.
Lemma lem6200380 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem6200381 (m : nat) (n : nat) : (term391 m n) = (term392 m n).
Proof. exact (MK_COMB (@lem6200380) (@lem6200379 m n)). Qed.
Lemma lem6200382 (m : nat) (n : nat) : (term393 m n) = (term394 m n).
Proof. exact (MK_COMB (@lem6200374 m n) (@lem6200381 m n)). Qed.
Lemma lem6200383 (m : nat) (n : nat) : (term377 m n) = (term395 m n).
Proof. exact (MK_COMB (@lem6200365 m n) (@lem6200382 m n)). Qed.
Lemma lem6200384 (m : nat) (n : nat) : ((term375 m n) = (term376 m n)) = (term395 m n).
Proof. exact (TRANS (@lem6200350 m n) (@lem6200383 m n)). Qed.
Lemma lem6200397 (m : nat) (n : nat) : (term392 m n) = (term392 m n).
Proof. exact (eq_refl (term392 m n)). Qed.
Lemma lem6200415 (n : nat) : (term12 n) = (term17 n).
Proof. exact (@lem1032092 (term18 n) term6 term6). Qed.
Lemma lem6200416 : term19 = term20.
Proof. exact (@lem706885). Qed.
Lemma lem6200417 : (term19 = term20) = (term21 = term22).
Proof. exact (@lem1006570 (BIT1 0) (BIT1 0) term20). Qed.
Lemma lem6200418 : term21 = term22.
Proof. exact (EQ_MP (@lem6200417) (@lem6200416)). Qed.
Lemma lem6200419 (n : nat) : (term23 n) = (term23 n).
Proof. exact (eq_refl (term23 n)). Qed.
Lemma lem6200420 (n : nat) : (term17 n) = (term24 n).
Proof. exact (MK_COMB (@lem6200419 n) (@lem6200418)). Qed.
Lemma lem6200422 (n : nat) : (term12 n) = (term24 n).
Proof. exact (TRANS (@lem6200415 n) (@lem6200420 n)). Qed.
Lemma lem6200431 (m : nat) : (term378 m) = (term378 m).
Proof. exact (eq_refl (term378 m)). Qed.
Lemma lem6200432 (m : nat) (n : nat) : (term379 m n) = (term396 m n).
Proof. exact (MK_COMB (@lem6200431 m) (@lem6200422 n)). Qed.
Lemma lem6200433 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem6200434 (m : nat) (n : nat) : (term388 m n) = (term397 m n).
Proof. exact (MK_COMB (@lem6200433) (@lem6200432 m n)). Qed.
Lemma lem6200435 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6200436 (m : nat) (n : nat) : (term390 m n) = (term398 m n).
Proof. exact (MK_COMB (@lem6200435) (@lem6200434 m n)). Qed.
Lemma lem6200437 (m : nat) (n : nat) : (term394 m n) = (term399 m n).
Proof. exact (MK_COMB (@lem6200436 m n) (@lem6200397 m n)). Qed.
Lemma lem6200448 (m : nat) (n : nat) : (term382 m n) = (term382 m n).
Proof. exact (eq_refl (term382 m n)). Qed.
Lemma lem6200466 (n : nat) : (term12 n) = (term17 n).
Proof. exact (@lem1032092 (term18 n) term6 term6). Qed.
Lemma lem6200467 : term19 = term20.
Proof. exact (@lem706885). Qed.
Lemma lem6200468 : (term19 = term20) = (term21 = term22).
Proof. exact (@lem1006570 (BIT1 0) (BIT1 0) term20). Qed.
Lemma lem6200469 : term21 = term22.
Proof. exact (EQ_MP (@lem6200468) (@lem6200467)). Qed.
Lemma lem6200470 (n : nat) : (term23 n) = (term23 n).
Proof. exact (eq_refl (term23 n)). Qed.
Lemma lem6200471 (n : nat) : (term17 n) = (term24 n).
Proof. exact (MK_COMB (@lem6200470 n) (@lem6200469)). Qed.
Lemma lem6200473 (n : nat) : (term12 n) = (term24 n).
Proof. exact (TRANS (@lem6200466 n) (@lem6200471 n)). Qed.
Lemma lem6200482 (m : nat) : (term378 m) = (term378 m).
Proof. exact (eq_refl (term378 m)). Qed.
Lemma lem6200483 (m : nat) (n : nat) : (term379 m n) = (term396 m n).
Proof. exact (MK_COMB (@lem6200482 m) (@lem6200473 n)). Qed.
Lemma lem6200484 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6200485 (m : nat) (n : nat) : (term381 m n) = (term400 m n).
Proof. exact (MK_COMB (@lem6200484) (@lem6200483 m n)). Qed.
Lemma lem6200486 (m : nat) (n : nat) : (term384 m n) = (term401 m n).
Proof. exact (MK_COMB (@lem6200485 m n) (@lem6200448 m n)). Qed.
Lemma lem6200487 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6200488 (m : nat) (n : nat) : (term386 m n) = (term402 m n).
Proof. exact (MK_COMB (@lem6200487) (@lem6200486 m n)). Qed.
Lemma lem6200489 (m : nat) (n : nat) : (term395 m n) = (term403 m n).
Proof. exact (MK_COMB (@lem6200488 m n) (@lem6200437 m n)). Qed.
Lemma lem6200492 (m : nat) (n : nat) : ((term375 m n) = (term376 m n)) = (term403 m n).
Proof. exact (TRANS (@lem6200384 m n) (@lem6200489 m n)). Qed.
Lemma lem6200494 (m : nat) (n : nat) : (Peano.le m n) = (term404 m n).
Proof. exact (EQ_MP (@lem2841408 m n) (@lem2841407 m n)). Qed.
Lemma lem6200495 (m : nat) (n : nat) : (term396 m n) = (term405 m n).
Proof. exact (@lem6200494 (term18 m) (term24 n)). Qed.
Lemma lem6200497 (k : nat) (n : nat) : (term42 k n) = (term43 k n).
Proof. exact (EQ_MP (@lem2841378 k n) (@lem2841377 k n)). Qed.
Lemma lem6200498 (m : nat) : (term44 m) = (term45 m).
Proof. exact (@lem6200497 term20 m). Qed.
Lemma lem6200499 : int_le = int_le.
Proof. exact (eq_refl int_le). Qed.
Lemma lem6200500 (m : nat) : (term406 m) = (term407 m).
Proof. exact (MK_COMB (@lem6200499) (@lem6200498 m)). Qed.
Lemma lem6200502 (m : nat) (n : nat) : (term39 m n) = (term40 m n).
Proof. exact (EQ_MP (@lem2841384 m n) (@lem2841383 m n)). Qed.
Lemma lem6200503 (n : nat) : (term291 n) = (term292 n).
Proof. exact (@lem6200502 (term18 n) term22). Qed.
Lemma lem6200505 (k : nat) (n : nat) : (term42 k n) = (term43 k n).
Proof. exact (EQ_MP (@lem2841378 k n) (@lem2841377 k n)). Qed.
Lemma lem6200506 (n : nat) : (term44 n) = (term45 n).
Proof. exact (@lem6200505 term20 n). Qed.
Lemma lem6200507 : int_add = int_add.
Proof. exact (eq_refl int_add). Qed.
Lemma lem6200508 (n : nat) : (term46 n) = (term47 n).
Proof. exact (MK_COMB (@lem6200507) (@lem6200506 n)). Qed.
Lemma lem6200509 : term88 = term88.
Proof. exact (eq_refl term88). Qed.
Lemma lem6200510 (n : nat) : (term292 n) = (term293 n).
Proof. exact (MK_COMB (@lem6200508 n) (@lem6200509)). Qed.
Lemma lem6200511 (n : nat) : (term291 n) = (term293 n).
Proof. exact (TRANS (@lem6200503 n) (@lem6200510 n)). Qed.
Lemma lem6200512 (m : nat) (n : nat) : (term405 m n) = (term408 m n).
Proof. exact (MK_COMB (@lem6200500 m) (@lem6200511 n)). Qed.
Lemma lem6200513 (m : nat) (n : nat) : (term396 m n) = (term408 m n).
Proof. exact (TRANS (@lem6200495 m n) (@lem6200512 m n)). Qed.
Lemma lem6200514 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6200515 (m : nat) (n : nat) : (term400 m n) = (term409 m n).
Proof. exact (MK_COMB (@lem6200514) (@lem6200513 m n)). Qed.
Lemma lem6200517 (m : nat) (n : nat) : (Peano.le m n) = (term404 m n).
Proof. exact (EQ_MP (@lem2841408 m n) (@lem2841407 m n)). Qed.
Lemma lem6200518 (m : nat) (n : nat) : (term382 m n) = (term410 m n).
Proof. exact (@lem6200517 m (term0 n)). Qed.
Lemma lem6200520 (m : nat) (n : nat) : (term39 m n) = (term40 m n).
Proof. exact (EQ_MP (@lem2841384 m n) (@lem2841383 m n)). Qed.
Lemma lem6200521 (n : nat) : (term411 n) = (term412 n).
Proof. exact (@lem6200520 n term6). Qed.
Lemma lem6200522 (m : nat) : (term413 m) = (term413 m).
Proof. exact (eq_refl (term413 m)). Qed.
Lemma lem6200523 (m : nat) (n : nat) : (term410 m n) = (term414 m n).
Proof. exact (MK_COMB (@lem6200522 m) (@lem6200521 n)). Qed.
Lemma lem6200524 (m : nat) (n : nat) : (term382 m n) = (term414 m n).
Proof. exact (TRANS (@lem6200518 m n) (@lem6200523 m n)). Qed.
Lemma lem6200525 (m : nat) (n : nat) : (term401 m n) = (term415 m n).
Proof. exact (MK_COMB (@lem6200515 m n) (@lem6200524 m n)). Qed.
Lemma lem6200526 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6200527 (m : nat) (n : nat) : (term402 m n) = (term416 m n).
Proof. exact (MK_COMB (@lem6200526) (@lem6200525 m n)). Qed.
Lemma lem6200529 (m : nat) (n : nat) : (Peano.le m n) = (term404 m n).
Proof. exact (EQ_MP (@lem2841408 m n) (@lem2841407 m n)). Qed.
Lemma lem6200530 (m : nat) (n : nat) : (term396 m n) = (term405 m n).
Proof. exact (@lem6200529 (term18 m) (term24 n)). Qed.
Lemma lem6200532 (k : nat) (n : nat) : (term42 k n) = (term43 k n).
Proof. exact (EQ_MP (@lem2841378 k n) (@lem2841377 k n)). Qed.
Lemma lem6200533 (m : nat) : (term44 m) = (term45 m).
Proof. exact (@lem6200532 term20 m). Qed.
Lemma lem6200534 : int_le = int_le.
Proof. exact (eq_refl int_le). Qed.
Lemma lem6200535 (m : nat) : (term406 m) = (term407 m).
Proof. exact (MK_COMB (@lem6200534) (@lem6200533 m)). Qed.
Lemma lem6200537 (m : nat) (n : nat) : (term39 m n) = (term40 m n).
Proof. exact (EQ_MP (@lem2841384 m n) (@lem2841383 m n)). Qed.
Lemma lem6200538 (n : nat) : (term291 n) = (term292 n).
Proof. exact (@lem6200537 (term18 n) term22). Qed.
Lemma lem6200540 (k : nat) (n : nat) : (term42 k n) = (term43 k n).
Proof. exact (EQ_MP (@lem2841378 k n) (@lem2841377 k n)). Qed.
Lemma lem6200541 (n : nat) : (term44 n) = (term45 n).
Proof. exact (@lem6200540 term20 n). Qed.
Lemma lem6200542 : int_add = int_add.
Proof. exact (eq_refl int_add). Qed.
Lemma lem6200543 (n : nat) : (term46 n) = (term47 n).
Proof. exact (MK_COMB (@lem6200542) (@lem6200541 n)). Qed.
Lemma lem6200544 : term88 = term88.
Proof. exact (eq_refl term88). Qed.
Lemma lem6200545 (n : nat) : (term292 n) = (term293 n).
Proof. exact (MK_COMB (@lem6200543 n) (@lem6200544)). Qed.
Lemma lem6200546 (n : nat) : (term291 n) = (term293 n).
Proof. exact (TRANS (@lem6200538 n) (@lem6200545 n)). Qed.
Lemma lem6200547 (m : nat) (n : nat) : (term405 m n) = (term408 m n).
Proof. exact (MK_COMB (@lem6200535 m) (@lem6200546 n)). Qed.
Lemma lem6200548 (m : nat) (n : nat) : (term396 m n) = (term408 m n).
Proof. exact (TRANS (@lem6200530 m n) (@lem6200547 m n)). Qed.
Lemma lem6200549 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem6200550 (m : nat) (n : nat) : (term397 m n) = (term417 m n).
Proof. exact (MK_COMB (@lem6200549) (@lem6200548 m n)). Qed.
Lemma lem6200551 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6200552 (m : nat) (n : nat) : (term398 m n) = (term418 m n).
Proof. exact (MK_COMB (@lem6200551) (@lem6200550 m n)). Qed.
Lemma lem6200554 (m : nat) (n : nat) : (Peano.le m n) = (term404 m n).
Proof. exact (EQ_MP (@lem2841408 m n) (@lem2841407 m n)). Qed.
Lemma lem6200555 (m : nat) (n : nat) : (term382 m n) = (term410 m n).
Proof. exact (@lem6200554 m (term0 n)). Qed.
Lemma lem6200557 (m : nat) (n : nat) : (term39 m n) = (term40 m n).
Proof. exact (EQ_MP (@lem2841384 m n) (@lem2841383 m n)). Qed.
Lemma lem6200558 (n : nat) : (term411 n) = (term412 n).
Proof. exact (@lem6200557 n term6). Qed.
Lemma lem6200559 (m : nat) : (term413 m) = (term413 m).
Proof. exact (eq_refl (term413 m)). Qed.
Lemma lem6200560 (m : nat) (n : nat) : (term410 m n) = (term414 m n).
Proof. exact (MK_COMB (@lem6200559 m) (@lem6200558 n)). Qed.
Lemma lem6200561 (m : nat) (n : nat) : (term382 m n) = (term414 m n).
Proof. exact (TRANS (@lem6200555 m n) (@lem6200560 m n)). Qed.
Lemma lem6200562 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem6200563 (m : nat) (n : nat) : (term392 m n) = (term419 m n).
Proof. exact (MK_COMB (@lem6200562) (@lem6200561 m n)). Qed.
Lemma lem6200564 (m : nat) (n : nat) : (term399 m n) = (term420 m n).
Proof. exact (MK_COMB (@lem6200552 m n) (@lem6200563 m n)). Qed.
Lemma lem6200565 (m : nat) (n : nat) : (term403 m n) = (term421 m n).
Proof. exact (MK_COMB (@lem6200527 m n) (@lem6200564 m n)). Qed.
Lemma lem6200566 (m : nat) (n : nat) : ((term375 m n) = (term376 m n)) = (term421 m n).
Proof. exact (TRANS (@lem6200492 m n) (@lem6200565 m n)). Qed.
Lemma lem6200567 (m : nat) : term52 m.
Proof. exact (@lem2307535 m). Qed.
Lemma lem6200568 (m : nat) : (term52 m) = (term53 m).
Proof. exact (eq_refl (term52 m)). Qed.
Lemma lem6200569 (m : nat) : term53 m.
Proof. exact (EQ_MP (@lem6200568 m) (@lem6200567 m)). Qed.
Lemma lem6200570 (n : nat) : term52 n.
Proof. exact (@lem2307535 n). Qed.
Lemma lem6200571 (n : nat) : (term52 n) = (term53 n).
Proof. exact (eq_refl (term52 n)). Qed.
Lemma lem6200572 (n : nat) : term53 n.
Proof. exact (EQ_MP (@lem6200571 n) (@lem6200570 n)). Qed.
Lemma lem6200573 (_79017 : int) (_79018 : int) : (term422 _79017 _79018) = (term423 _79017 _79018).
Proof. exact (@lem2318604 (term423 _79017 _79018)). Qed.
Lemma lem6200597 (_79017 : int) (_79018 : int) : (term424 _79017 _79018) = (term425 _79017 _79018).
Proof. exact (@lem17045 (term426 _79017 _79018) (term427 _79017 _79018)). Qed.
Lemma lem6200600 (_79017 : int) (_79018 : int) : (term428 _79017 _79018) = (term426 _79017 _79018).
Proof. exact (@lem16933 (term426 _79017 _79018)). Qed.
Lemma lem6200603 (_79017 : int) (_79018 : int) : (term429 _79017 _79018) = (term427 _79017 _79018).
Proof. exact (@lem16933 (term427 _79017 _79018)). Qed.
Lemma lem6200604 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6200605 (_79017 : int) (_79018 : int) : (term430 _79017 _79018) = (term431 _79017 _79018).
Proof. exact (MK_COMB (@lem6200604) (@lem6200600 _79017 _79018)). Qed.
Lemma lem6200606 (_79017 : int) (_79018 : int) : (term432 _79017 _79018) = (term433 _79017 _79018).
Proof. exact (MK_COMB (@lem6200605 _79017 _79018) (@lem6200603 _79017 _79018)). Qed.
Lemma lem6200607 (_79017 : int) (_79018 : int) : (term434 _79017 _79018) = (term432 _79017 _79018).
Proof. exact (@lem17045 (term435 _79017 _79018) (term436 _79017 _79018)). Qed.
Lemma lem6200608 (_79017 : int) (_79018 : int) : (term434 _79017 _79018) = (term433 _79017 _79018).
Proof. exact (TRANS (@lem6200607 _79017 _79018) (@lem6200606 _79017 _79018)). Qed.
Lemma lem6200609 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6200610 (_79017 : int) (_79018 : int) : (term437 _79017 _79018) = (term438 _79017 _79018).
Proof. exact (MK_COMB (@lem6200609) (@lem6200597 _79017 _79018)). Qed.
Lemma lem6200611 (_79017 : int) (_79018 : int) : (term439 _79017 _79018) = (term440 _79017 _79018).
Proof. exact (MK_COMB (@lem6200610 _79017 _79018) (@lem6200608 _79017 _79018)). Qed.
Lemma lem6200612 (_79017 : int) (_79018 : int) : (term441 _79017 _79018) = (term439 _79017 _79018).
Proof. exact (@lem17160 (term442 _79017 _79018) (term443 _79017 _79018)). Qed.
Lemma lem6200613 (_79017 : int) (_79018 : int) : (term441 _79017 _79018) = (term440 _79017 _79018).
Proof. exact (TRANS (@lem6200612 _79017 _79018) (@lem6200611 _79017 _79018)). Qed.
Lemma lem6200615 (_79018 : int) : (term110 _79018) = (term110 _79018).
Proof. exact (eq_refl (term110 _79018)). Qed.
Lemma lem6200616 (_79017 : int) (_79018 : int) : (term444 _79017 _79018) = (term445 _79017 _79018).
Proof. exact (MK_COMB (@lem6200615 _79018) (@lem6200613 _79017 _79018)). Qed.
Lemma lem6200617 (_79017 : int) (_79018 : int) : (term446 _79017 _79018) = (term444 _79017 _79018).
Proof. exact (@lem17362 (term58 _79018) (term447 _79017 _79018)). Qed.
Lemma lem6200618 (_79017 : int) (_79018 : int) : (term446 _79017 _79018) = (term445 _79017 _79018).
Proof. exact (TRANS (@lem6200617 _79017 _79018) (@lem6200616 _79017 _79018)). Qed.
Lemma lem6200620 (_79017 : int) : (term110 _79017) = (term110 _79017).
Proof. exact (eq_refl (term110 _79017)). Qed.
Lemma lem6200621 (_79017 : int) (_79018 : int) : (term448 _79017 _79018) = (term449 _79017 _79018).
Proof. exact (MK_COMB (@lem6200620 _79017) (@lem6200618 _79017 _79018)). Qed.
Lemma lem6200622 (_79017 : int) (_79018 : int) : (term450 _79017 _79018) = (term448 _79017 _79018).
Proof. exact (@lem17362 (term58 _79017) (term451 _79017 _79018)). Qed.
Lemma lem6200650 (_79017 : int) (_79018 : int) : (term450 _79017 _79018) = (term449 _79017 _79018).
Proof. exact (TRANS (@lem6200622 _79017 _79018) (@lem6200621 _79017 _79018)). Qed.
Lemma lem6200653 (x : int) (y : int) : (int_le x y) = (term60 x y).
Proof. exact (EQ_MP (@lem2318569 x y) (@lem2318568 x y)). Qed.
Lemma lem6200654 (_79017 : int) : (term58 _79017) = (term61 _79017).
Proof. exact (@lem6200653 term62 _79017). Qed.
Lemma lem6200656 (n : nat) : (term63 n) = (real_of_num n).
Proof. exact (EQ_MP (@lem2318545 n) (@lem2318544 n)). Qed.
Lemma lem6200657 : term64 = term65.
Proof. exact (@lem6200656 (NUMERAL 0)). Qed.
Lemma lem6200658 : real_le = real_le.
Proof. exact (eq_refl real_le). Qed.
Lemma lem6200659 : term66 = term67.
Proof. exact (MK_COMB (@lem6200658) (@lem6200657)). Qed.
Lemma lem6200660 (_79017 : int) : (real_of_int _79017) = (real_of_int _79017).
Proof. exact (eq_refl (real_of_int _79017)). Qed.
Lemma lem6200661 (_79017 : int) : (term61 _79017) = (term68 _79017).
Proof. exact (MK_COMB (@lem6200659) (@lem6200660 _79017)). Qed.
Lemma lem6200663 (_79017 : int) : (term58 _79017) = (term68 _79017).
Proof. exact (TRANS (@lem6200654 _79017) (@lem6200661 _79017)). Qed.
Lemma lem6200666 (x : int) (y : int) : (int_le x y) = (term60 x y).
Proof. exact (EQ_MP (@lem2318569 x y) (@lem2318568 x y)). Qed.
Lemma lem6200667 (_79018 : int) : (term58 _79018) = (term61 _79018).
Proof. exact (@lem6200666 term62 _79018). Qed.
Lemma lem6200669 (n : nat) : (term63 n) = (real_of_num n).
Proof. exact (EQ_MP (@lem2318545 n) (@lem2318544 n)). Qed.
Lemma lem6200670 : term64 = term65.
Proof. exact (@lem6200669 (NUMERAL 0)). Qed.
Lemma lem6200671 : real_le = real_le.
Proof. exact (eq_refl real_le). Qed.
Lemma lem6200672 : term66 = term67.
Proof. exact (MK_COMB (@lem6200671) (@lem6200670)). Qed.
Lemma lem6200673 (_79018 : int) : (real_of_int _79018) = (real_of_int _79018).
Proof. exact (eq_refl (real_of_int _79018)). Qed.
Lemma lem6200674 (_79018 : int) : (term61 _79018) = (term68 _79018).
Proof. exact (MK_COMB (@lem6200672) (@lem6200673 _79018)). Qed.
Lemma lem6200676 (_79018 : int) : (term58 _79018) = (term68 _79018).
Proof. exact (TRANS (@lem6200667 _79018) (@lem6200674 _79018)). Qed.
Lemma lem6200678 (y : int) (x : int) : (term452 x y) = (term453 y x).
Proof. exact (proj1 (@lem2318495 x y)). Qed.
Lemma lem6200679 (_79018 : int) (_79017 : int) : (term435 _79017 _79018) = (term454 _79018 _79017).
Proof. exact (@lem6200678 (term300 _79018) (term83 _79017)). Qed.
Lemma lem6200681 (x : int) (y : int) : (int_le x y) = (term60 x y).
Proof. exact (EQ_MP (@lem2318569 x y) (@lem2318568 x y)). Qed.
Lemma lem6200682 (_79018 : int) (_79017 : int) : (term454 _79018 _79017) = (term455 _79018 _79017).
Proof. exact (@lem6200681 (term305 _79018) (term83 _79017)). Qed.
Lemma lem6200684 (x : int) (y : int) : (term76 x y) = (term77 x y).
Proof. exact (EQ_MP (@lem2318539 x y) (@lem2318538 x y)). Qed.
Lemma lem6200685 (_79018 : int) : (term306 _79018) = (term307 _79018).
Proof. exact (@lem6200684 (term300 _79018) term80). Qed.
Lemma lem6200687 (x : int) (y : int) : (term76 x y) = (term77 x y).
Proof. exact (EQ_MP (@lem2318539 x y) (@lem2318538 x y)). Qed.
Lemma lem6200688 (_79018 : int) : (term308 _79018) = (term309 _79018).
Proof. exact (@lem6200687 (term83 _79018) term88). Qed.
Lemma lem6200690 (x : int) (y : int) : (term84 x y) = (term85 x y).
Proof. exact (EQ_MP (@lem2318533 x y) (@lem2318532 x y)). Qed.
Lemma lem6200691 (_79018 : int) : (term86 _79018) = (term87 _79018).
Proof. exact (@lem6200690 term88 _79018). Qed.
Lemma lem6200693 (n : nat) : (term63 n) = (real_of_num n).
Proof. exact (EQ_MP (@lem2318545 n) (@lem2318544 n)). Qed.
Lemma lem6200694 : term89 = term90.
Proof. exact (@lem6200693 term22). Qed.
Lemma lem6200695 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem6200696 : term91 = term92.
Proof. exact (MK_COMB (@lem6200695) (@lem6200694)). Qed.
Lemma lem6200697 (_79018 : int) : (real_of_int _79018) = (real_of_int _79018).
Proof. exact (eq_refl (real_of_int _79018)). Qed.
Lemma lem6200698 (_79018 : int) : (term87 _79018) = (term93 _79018).
Proof. exact (MK_COMB (@lem6200696) (@lem6200697 _79018)). Qed.
Lemma lem6200699 (_79018 : int) : (term86 _79018) = (term93 _79018).
Proof. exact (TRANS (@lem6200691 _79018) (@lem6200698 _79018)). Qed.
Lemma lem6200700 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem6200701 (_79018 : int) : (term94 _79018) = (term95 _79018).
Proof. exact (MK_COMB (@lem6200700) (@lem6200699 _79018)). Qed.
Lemma lem6200703 (n : nat) : (term63 n) = (real_of_num n).
Proof. exact (EQ_MP (@lem2318545 n) (@lem2318544 n)). Qed.
Lemma lem6200704 : term89 = term90.
Proof. exact (@lem6200703 term22). Qed.
Lemma lem6200705 (_79018 : int) : (term309 _79018) = (term310 _79018).
Proof. exact (MK_COMB (@lem6200701 _79018) (@lem6200704)). Qed.
Lemma lem6200706 (_79018 : int) : (term308 _79018) = (term310 _79018).
Proof. exact (TRANS (@lem6200688 _79018) (@lem6200705 _79018)). Qed.
Lemma lem6200707 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem6200708 (_79018 : int) : (term311 _79018) = (term312 _79018).
Proof. exact (MK_COMB (@lem6200707) (@lem6200706 _79018)). Qed.
Lemma lem6200710 (n : nat) : (term63 n) = (real_of_num n).
Proof. exact (EQ_MP (@lem2318545 n) (@lem2318544 n)). Qed.
Lemma lem6200711 : term101 = term102.
Proof. exact (@lem6200710 term6). Qed.
Lemma lem6200712 (_79018 : int) : (term307 _79018) = (term313 _79018).
Proof. exact (MK_COMB (@lem6200708 _79018) (@lem6200711)). Qed.
Lemma lem6200713 (_79018 : int) : (term306 _79018) = (term313 _79018).
Proof. exact (TRANS (@lem6200685 _79018) (@lem6200712 _79018)). Qed.
Lemma lem6200714 : real_le = real_le.
Proof. exact (eq_refl real_le). Qed.
Lemma lem6200715 (_79018 : int) : (term314 _79018) = (term315 _79018).
Proof. exact (MK_COMB (@lem6200714) (@lem6200713 _79018)). Qed.
Lemma lem6200717 (x : int) (y : int) : (term84 x y) = (term85 x y).
Proof. exact (EQ_MP (@lem2318533 x y) (@lem2318532 x y)). Qed.
Lemma lem6200718 (_79017 : int) : (term86 _79017) = (term87 _79017).
Proof. exact (@lem6200717 term88 _79017). Qed.
Lemma lem6200720 (n : nat) : (term63 n) = (real_of_num n).
Proof. exact (EQ_MP (@lem2318545 n) (@lem2318544 n)). Qed.
Lemma lem6200721 : term89 = term90.
Proof. exact (@lem6200720 term22). Qed.
Lemma lem6200722 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem6200723 : term91 = term92.
Proof. exact (MK_COMB (@lem6200722) (@lem6200721)). Qed.
Lemma lem6200724 (_79017 : int) : (real_of_int _79017) = (real_of_int _79017).
Proof. exact (eq_refl (real_of_int _79017)). Qed.
Lemma lem6200725 (_79017 : int) : (term87 _79017) = (term93 _79017).
Proof. exact (MK_COMB (@lem6200723) (@lem6200724 _79017)). Qed.
Lemma lem6200726 (_79017 : int) : (term86 _79017) = (term93 _79017).
Proof. exact (TRANS (@lem6200718 _79017) (@lem6200725 _79017)). Qed.
Lemma lem6200727 (_79018 : int) (_79017 : int) : (term455 _79018 _79017) = (term456 _79018 _79017).
Proof. exact (MK_COMB (@lem6200715 _79018) (@lem6200726 _79017)). Qed.
Lemma lem6200728 (_79018 : int) (_79017 : int) : (term454 _79018 _79017) = (term456 _79018 _79017).
Proof. exact (TRANS (@lem6200682 _79018 _79017) (@lem6200727 _79018 _79017)). Qed.
Lemma lem6200729 (_79018 : int) (_79017 : int) : (term435 _79017 _79018) = (term456 _79018 _79017).
Proof. exact (TRANS (@lem6200679 _79018 _79017) (@lem6200728 _79018 _79017)). Qed.
Lemma lem6200731 (y : int) (x : int) : (term452 x y) = (term453 y x).
Proof. exact (proj1 (@lem2318495 x y)). Qed.
Lemma lem6200732 (_79018 : int) (_79017 : int) : (term436 _79017 _79018) = (term457 _79018 _79017).
Proof. exact (@lem6200731 (term458 _79018) _79017). Qed.
Lemma lem6200734 (x : int) (y : int) : (int_le x y) = (term60 x y).
Proof. exact (EQ_MP (@lem2318569 x y) (@lem2318568 x y)). Qed.
Lemma lem6200735 (_79018 : int) (_79017 : int) : (term457 _79018 _79017) = (term459 _79018 _79017).
Proof. exact (@lem6200734 (term460 _79018) _79017). Qed.
Lemma lem6200737 (x : int) (y : int) : (term76 x y) = (term77 x y).
Proof. exact (EQ_MP (@lem2318539 x y) (@lem2318538 x y)). Qed.
Lemma lem6200738 (_79018 : int) : (term461 _79018) = (term462 _79018).
Proof. exact (@lem6200737 (term458 _79018) term80). Qed.
Lemma lem6200740 (x : int) (y : int) : (term76 x y) = (term77 x y).
Proof. exact (EQ_MP (@lem2318539 x y) (@lem2318538 x y)). Qed.
Lemma lem6200741 (_79018 : int) : (term463 _79018) = (term464 _79018).
Proof. exact (@lem6200740 _79018 term80). Qed.
Lemma lem6200743 (n : nat) : (term63 n) = (real_of_num n).
Proof. exact (EQ_MP (@lem2318545 n) (@lem2318544 n)). Qed.
Lemma lem6200744 : term101 = term102.
Proof. exact (@lem6200743 term6). Qed.
Lemma lem6200745 (_79018 : int) : (term140 _79018) = (term140 _79018).
Proof. exact (eq_refl (term140 _79018)). Qed.
Lemma lem6200746 (_79018 : int) : (term464 _79018) = (term465 _79018).
Proof. exact (MK_COMB (@lem6200745 _79018) (@lem6200744)). Qed.
Lemma lem6200747 (_79018 : int) : (term463 _79018) = (term465 _79018).
Proof. exact (TRANS (@lem6200741 _79018) (@lem6200746 _79018)). Qed.
Lemma lem6200748 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem6200749 (_79018 : int) : (term466 _79018) = (term467 _79018).
Proof. exact (MK_COMB (@lem6200748) (@lem6200747 _79018)). Qed.
Lemma lem6200751 (n : nat) : (term63 n) = (real_of_num n).
Proof. exact (EQ_MP (@lem2318545 n) (@lem2318544 n)). Qed.
Lemma lem6200752 : term101 = term102.
Proof. exact (@lem6200751 term6). Qed.
Lemma lem6200753 (_79018 : int) : (term462 _79018) = (term468 _79018).
Proof. exact (MK_COMB (@lem6200749 _79018) (@lem6200752)). Qed.
Lemma lem6200754 (_79018 : int) : (term461 _79018) = (term468 _79018).
Proof. exact (TRANS (@lem6200738 _79018) (@lem6200753 _79018)). Qed.
Lemma lem6200755 : real_le = real_le.
Proof. exact (eq_refl real_le). Qed.
Lemma lem6200756 (_79018 : int) : (term469 _79018) = (term470 _79018).
Proof. exact (MK_COMB (@lem6200755) (@lem6200754 _79018)). Qed.
Lemma lem6200757 (_79017 : int) : (real_of_int _79017) = (real_of_int _79017).
Proof. exact (eq_refl (real_of_int _79017)). Qed.
Lemma lem6200758 (_79018 : int) (_79017 : int) : (term459 _79018 _79017) = (term471 _79018 _79017).
Proof. exact (MK_COMB (@lem6200756 _79018) (@lem6200757 _79017)). Qed.
Lemma lem6200759 (_79018 : int) (_79017 : int) : (term457 _79018 _79017) = (term471 _79018 _79017).
Proof. exact (TRANS (@lem6200735 _79018 _79017) (@lem6200758 _79018 _79017)). Qed.
Lemma lem6200760 (_79018 : int) (_79017 : int) : (term436 _79017 _79018) = (term471 _79018 _79017).
Proof. exact (TRANS (@lem6200732 _79018 _79017) (@lem6200759 _79018 _79017)). Qed.
Lemma lem6200761 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6200762 (_79018 : int) (_79017 : int) : (term472 _79017 _79018) = (term473 _79018 _79017).
Proof. exact (MK_COMB (@lem6200761) (@lem6200729 _79018 _79017)). Qed.
Lemma lem6200763 (_79018 : int) (_79017 : int) : (term425 _79017 _79018) = (term474 _79018 _79017).
Proof. exact (MK_COMB (@lem6200762 _79018 _79017) (@lem6200760 _79018 _79017)). Qed.
Lemma lem6200766 (x : int) (y : int) : (int_le x y) = (term60 x y).
Proof. exact (EQ_MP (@lem2318569 x y) (@lem2318568 x y)). Qed.
Lemma lem6200767 (_79017 : int) (_79018 : int) : (term426 _79017 _79018) = (term475 _79017 _79018).
Proof. exact (@lem6200766 (term83 _79017) (term300 _79018)). Qed.
Lemma lem6200769 (x : int) (y : int) : (term84 x y) = (term85 x y).
Proof. exact (EQ_MP (@lem2318533 x y) (@lem2318532 x y)). Qed.
Lemma lem6200770 (_79017 : int) : (term86 _79017) = (term87 _79017).
Proof. exact (@lem6200769 term88 _79017). Qed.
Lemma lem6200772 (n : nat) : (term63 n) = (real_of_num n).
Proof. exact (EQ_MP (@lem2318545 n) (@lem2318544 n)). Qed.
Lemma lem6200773 : term89 = term90.
Proof. exact (@lem6200772 term22). Qed.
Lemma lem6200774 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem6200775 : term91 = term92.
Proof. exact (MK_COMB (@lem6200774) (@lem6200773)). Qed.
Lemma lem6200776 (_79017 : int) : (real_of_int _79017) = (real_of_int _79017).
Proof. exact (eq_refl (real_of_int _79017)). Qed.
Lemma lem6200777 (_79017 : int) : (term87 _79017) = (term93 _79017).
Proof. exact (MK_COMB (@lem6200775) (@lem6200776 _79017)). Qed.
Lemma lem6200778 (_79017 : int) : (term86 _79017) = (term93 _79017).
Proof. exact (TRANS (@lem6200770 _79017) (@lem6200777 _79017)). Qed.
Lemma lem6200779 : real_le = real_le.
Proof. exact (eq_refl real_le). Qed.
Lemma lem6200780 (_79017 : int) : (term476 _79017) = (term477 _79017).
Proof. exact (MK_COMB (@lem6200779) (@lem6200778 _79017)). Qed.
Lemma lem6200782 (x : int) (y : int) : (term76 x y) = (term77 x y).
Proof. exact (EQ_MP (@lem2318539 x y) (@lem2318538 x y)). Qed.
Lemma lem6200783 (_79018 : int) : (term308 _79018) = (term309 _79018).
Proof. exact (@lem6200782 (term83 _79018) term88). Qed.
Lemma lem6200785 (x : int) (y : int) : (term84 x y) = (term85 x y).
Proof. exact (EQ_MP (@lem2318533 x y) (@lem2318532 x y)). Qed.
Lemma lem6200786 (_79018 : int) : (term86 _79018) = (term87 _79018).
Proof. exact (@lem6200785 term88 _79018). Qed.
Lemma lem6200788 (n : nat) : (term63 n) = (real_of_num n).
Proof. exact (EQ_MP (@lem2318545 n) (@lem2318544 n)). Qed.
Lemma lem6200789 : term89 = term90.
Proof. exact (@lem6200788 term22). Qed.
Lemma lem6200790 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem6200791 : term91 = term92.
Proof. exact (MK_COMB (@lem6200790) (@lem6200789)). Qed.
Lemma lem6200792 (_79018 : int) : (real_of_int _79018) = (real_of_int _79018).
Proof. exact (eq_refl (real_of_int _79018)). Qed.
Lemma lem6200793 (_79018 : int) : (term87 _79018) = (term93 _79018).
Proof. exact (MK_COMB (@lem6200791) (@lem6200792 _79018)). Qed.
Lemma lem6200794 (_79018 : int) : (term86 _79018) = (term93 _79018).
Proof. exact (TRANS (@lem6200786 _79018) (@lem6200793 _79018)). Qed.
Lemma lem6200795 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem6200796 (_79018 : int) : (term94 _79018) = (term95 _79018).
Proof. exact (MK_COMB (@lem6200795) (@lem6200794 _79018)). Qed.
Lemma lem6200798 (n : nat) : (term63 n) = (real_of_num n).
Proof. exact (EQ_MP (@lem2318545 n) (@lem2318544 n)). Qed.
Lemma lem6200799 : term89 = term90.
Proof. exact (@lem6200798 term22). Qed.
Lemma lem6200800 (_79018 : int) : (term309 _79018) = (term310 _79018).
Proof. exact (MK_COMB (@lem6200796 _79018) (@lem6200799)). Qed.
Lemma lem6200801 (_79018 : int) : (term308 _79018) = (term310 _79018).
Proof. exact (TRANS (@lem6200783 _79018) (@lem6200800 _79018)). Qed.
Lemma lem6200802 (_79017 : int) (_79018 : int) : (term475 _79017 _79018) = (term478 _79017 _79018).
Proof. exact (MK_COMB (@lem6200780 _79017) (@lem6200801 _79018)). Qed.
Lemma lem6200804 (_79017 : int) (_79018 : int) : (term426 _79017 _79018) = (term478 _79017 _79018).
Proof. exact (TRANS (@lem6200767 _79017 _79018) (@lem6200802 _79017 _79018)). Qed.
Lemma lem6200807 (x : int) (y : int) : (int_le x y) = (term60 x y).
Proof. exact (EQ_MP (@lem2318569 x y) (@lem2318568 x y)). Qed.
Lemma lem6200808 (_79017 : int) (_79018 : int) : (term427 _79017 _79018) = (term479 _79017 _79018).
Proof. exact (@lem6200807 _79017 (term458 _79018)). Qed.
Lemma lem6200810 (x : int) (y : int) : (term76 x y) = (term77 x y).
Proof. exact (EQ_MP (@lem2318539 x y) (@lem2318538 x y)). Qed.
Lemma lem6200811 (_79018 : int) : (term463 _79018) = (term464 _79018).
Proof. exact (@lem6200810 _79018 term80). Qed.
Lemma lem6200813 (n : nat) : (term63 n) = (real_of_num n).
Proof. exact (EQ_MP (@lem2318545 n) (@lem2318544 n)). Qed.
Lemma lem6200814 : term101 = term102.
Proof. exact (@lem6200813 term6). Qed.
Lemma lem6200815 (_79018 : int) : (term140 _79018) = (term140 _79018).
Proof. exact (eq_refl (term140 _79018)). Qed.
Lemma lem6200816 (_79018 : int) : (term464 _79018) = (term465 _79018).
Proof. exact (MK_COMB (@lem6200815 _79018) (@lem6200814)). Qed.
Lemma lem6200817 (_79018 : int) : (term463 _79018) = (term465 _79018).
Proof. exact (TRANS (@lem6200811 _79018) (@lem6200816 _79018)). Qed.
Lemma lem6200818 (_79017 : int) : (term480 _79017) = (term480 _79017).
Proof. exact (eq_refl (term480 _79017)). Qed.
Lemma lem6200819 (_79017 : int) (_79018 : int) : (term479 _79017 _79018) = (term481 _79017 _79018).
Proof. exact (MK_COMB (@lem6200818 _79017) (@lem6200817 _79018)). Qed.
Lemma lem6200821 (_79017 : int) (_79018 : int) : (term427 _79017 _79018) = (term481 _79017 _79018).
Proof. exact (TRANS (@lem6200808 _79017 _79018) (@lem6200819 _79017 _79018)). Qed.
Lemma lem6200822 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6200823 (_79017 : int) (_79018 : int) : (term431 _79017 _79018) = (term482 _79017 _79018).
Proof. exact (MK_COMB (@lem6200822) (@lem6200804 _79017 _79018)). Qed.
Lemma lem6200824 (_79017 : int) (_79018 : int) : (term433 _79017 _79018) = (term483 _79017 _79018).
Proof. exact (MK_COMB (@lem6200823 _79017 _79018) (@lem6200821 _79017 _79018)). Qed.
Lemma lem6200825 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6200826 (_79018 : int) (_79017 : int) : (term438 _79017 _79018) = (term484 _79018 _79017).
Proof. exact (MK_COMB (@lem6200825) (@lem6200763 _79018 _79017)). Qed.
Lemma lem6200827 (_79017 : int) (_79018 : int) : (term440 _79017 _79018) = (term485 _79017 _79018).
Proof. exact (MK_COMB (@lem6200826 _79018 _79017) (@lem6200824 _79017 _79018)). Qed.
Lemma lem6200828 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6200829 (_79018 : int) : (term110 _79018) = (term111 _79018).
Proof. exact (MK_COMB (@lem6200828) (@lem6200676 _79018)). Qed.
Lemma lem6200830 (_79017 : int) (_79018 : int) : (term445 _79017 _79018) = (term486 _79017 _79018).
Proof. exact (MK_COMB (@lem6200829 _79018) (@lem6200827 _79017 _79018)). Qed.
Lemma lem6200831 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6200832 (_79017 : int) : (term110 _79017) = (term111 _79017).
Proof. exact (MK_COMB (@lem6200831) (@lem6200663 _79017)). Qed.
Lemma lem6200833 (_79017 : int) (_79018 : int) : (term449 _79017 _79018) = (term487 _79017 _79018).
Proof. exact (MK_COMB (@lem6200832 _79017) (@lem6200830 _79017 _79018)). Qed.
Lemma lem6200834 (_79017 : int) (_79018 : int) : (term450 _79017 _79018) = (term487 _79017 _79018).
Proof. exact (TRANS (@lem6200650 _79017 _79018) (@lem6200833 _79017 _79018)). Qed.
Lemma lem6200838 (t : Prop) : (term113 t) = t.
Proof. exact (EQ_MP (@lem16507 t) (@lem16506 t)). Qed.
Lemma lem6200894 (_79017 : int) (_79018 : int) : (term488 _79017 _79018) = (term487 _79017 _79018).
Proof. exact (@lem6200838 (term487 _79017 _79018)). Qed.
Lemma lem6200895 (_79017 : int) : (term68 _79017) = (term116 _79017).
Proof. exact (@lem1988287 (real_of_int _79017) term65). Qed.
Lemma lem6200901 (_79017 : int) : (term117 _79017) = (term118 _79017).
Proof. exact (@lem1982792 (real_of_int _79017) term65). Qed.
Lemma lem6200903 (x : nat) : (real_of_num x) = (term119 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6200904 : term65 = term120.
Proof. exact (@lem6200903 (NUMERAL 0)). Qed.
Lemma lem6200906 (x : nat) : (term121 x) = (term122 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem6200907 : term123 = term124.
Proof. exact (@lem6200906 term6). Qed.
Lemma lem6200908 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem6200909 : term125 = term126.
Proof. exact (MK_COMB (@lem6200908) (@lem6200907)). Qed.
Lemma lem6200910 : term127 = term128.
Proof. exact (MK_COMB (@lem6200909) (@lem6200904)). Qed.
Lemma lem6200911 : term128 = term129.
Proof. exact (@lem1981613 term123 term65 term102 term102). Qed.
Lemma lem6200913 (m : nat) (n : nat) : (term130 m n) = (term131 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6200914 : term132 = term133.
Proof. exact (@lem6200913 term6 term6). Qed.
Lemma lem6200915 : (term134 = (BIT1 0)) = (term135 = term6).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6200916 : term135 = term6.
Proof. exact (EQ_MP (@lem6200915) (@lem940073)). Qed.
Lemma lem6200917 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6200918 : term133 = term102.
Proof. exact (MK_COMB (@lem6200917) (@lem6200916)). Qed.
Lemma lem6200919 : term132 = term102.
Proof. exact (TRANS (@lem6200914) (@lem6200918)). Qed.
Lemma lem6200921 (x : nat) : (term136 x) = term65.
Proof. exact (proj2 (@lem1367254 x)). Qed.
Lemma lem6200922 : term127 = term65.
Proof. exact (@lem6200921 term6). Qed.
Lemma lem6200923 : real_div = real_div.
Proof. exact (eq_refl real_div). Qed.
Lemma lem6200924 : term137 = term138.
Proof. exact (MK_COMB (@lem6200923) (@lem6200922)). Qed.
Lemma lem6200925 : term129 = term120.
Proof. exact (MK_COMB (@lem6200924) (@lem6200919)). Qed.
Lemma lem6200926 : term128 = term120.
Proof. exact (TRANS (@lem6200911) (@lem6200925)). Qed.
Lemma lem6200927 : term127 = term120.
Proof. exact (TRANS (@lem6200910) (@lem6200926)). Qed.
Lemma lem6200929 (x : real) : (term139 x) = x.
Proof. exact (EQ_MP (@lem1982628 x) (@lem1982627 x)). Qed.
Lemma lem6200930 : term120 = term65.
Proof. exact (@lem6200929 term65). Qed.
Lemma lem6200931 : term127 = term65.
Proof. exact (TRANS (@lem6200927) (@lem6200930)). Qed.
Lemma lem6200932 (_79017 : int) : (term140 _79017) = (term140 _79017).
Proof. exact (eq_refl (term140 _79017)). Qed.
Lemma lem6200933 (_79017 : int) : (term118 _79017) = (term141 _79017).
Proof. exact (MK_COMB (@lem6200932 _79017) (@lem6200931)). Qed.
Lemma lem6200934 (_79017 : int) : (term141 _79017) = (real_of_int _79017).
Proof. exact (@lem1982723 (real_of_int _79017)). Qed.
Lemma lem6200935 (_79017 : int) : (term118 _79017) = (real_of_int _79017).
Proof. exact (TRANS (@lem6200933 _79017) (@lem6200934 _79017)). Qed.
Lemma lem6200937 (_79017 : int) : (term117 _79017) = (real_of_int _79017).
Proof. exact (TRANS (@lem6200901 _79017) (@lem6200935 _79017)). Qed.
Lemma lem6200938 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem6200939 (_79017 : int) : (term142 _79017) = (term143 _79017).
Proof. exact (MK_COMB (@lem6200938) (@lem6200937 _79017)). Qed.
Lemma lem6200940 : term65 = term65.
Proof. exact (eq_refl term65). Qed.
Lemma lem6200941 (_79017 : int) : (term116 _79017) = (term144 _79017).
Proof. exact (MK_COMB (@lem6200939 _79017) (@lem6200940)). Qed.
Lemma lem6200942 (_79017 : int) : (term68 _79017) = (term144 _79017).
Proof. exact (TRANS (@lem6200895 _79017) (@lem6200941 _79017)). Qed.
Lemma lem6200943 (_79018 : int) : (term68 _79018) = (term116 _79018).
Proof. exact (@lem1988287 (real_of_int _79018) term65). Qed.
Lemma lem6200949 (_79018 : int) : (term117 _79018) = (term118 _79018).
Proof. exact (@lem1982792 (real_of_int _79018) term65). Qed.
Lemma lem6200951 (x : nat) : (real_of_num x) = (term119 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6200952 : term65 = term120.
Proof. exact (@lem6200951 (NUMERAL 0)). Qed.
Lemma lem6200954 (x : nat) : (term121 x) = (term122 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem6200955 : term123 = term124.
Proof. exact (@lem6200954 term6). Qed.
Lemma lem6200956 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem6200957 : term125 = term126.
Proof. exact (MK_COMB (@lem6200956) (@lem6200955)). Qed.
Lemma lem6200958 : term127 = term128.
Proof. exact (MK_COMB (@lem6200957) (@lem6200952)). Qed.
Lemma lem6200959 : term128 = term129.
Proof. exact (@lem1981613 term123 term65 term102 term102). Qed.
Lemma lem6200961 (m : nat) (n : nat) : (term130 m n) = (term131 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6200962 : term132 = term133.
Proof. exact (@lem6200961 term6 term6). Qed.
Lemma lem6200963 : (term134 = (BIT1 0)) = (term135 = term6).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6200964 : term135 = term6.
Proof. exact (EQ_MP (@lem6200963) (@lem940073)). Qed.
Lemma lem6200965 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6200966 : term133 = term102.
Proof. exact (MK_COMB (@lem6200965) (@lem6200964)). Qed.
Lemma lem6200967 : term132 = term102.
Proof. exact (TRANS (@lem6200962) (@lem6200966)). Qed.
Lemma lem6200969 (x : nat) : (term136 x) = term65.
Proof. exact (proj2 (@lem1367254 x)). Qed.
Lemma lem6200970 : term127 = term65.
Proof. exact (@lem6200969 term6). Qed.
Lemma lem6200971 : real_div = real_div.
Proof. exact (eq_refl real_div). Qed.
Lemma lem6200972 : term137 = term138.
Proof. exact (MK_COMB (@lem6200971) (@lem6200970)). Qed.
Lemma lem6200973 : term129 = term120.
Proof. exact (MK_COMB (@lem6200972) (@lem6200967)). Qed.
Lemma lem6200974 : term128 = term120.
Proof. exact (TRANS (@lem6200959) (@lem6200973)). Qed.
Lemma lem6200975 : term127 = term120.
Proof. exact (TRANS (@lem6200958) (@lem6200974)). Qed.
Lemma lem6200977 (x : real) : (term139 x) = x.
Proof. exact (EQ_MP (@lem1982628 x) (@lem1982627 x)). Qed.
Lemma lem6200978 : term120 = term65.
Proof. exact (@lem6200977 term65). Qed.
Lemma lem6200979 : term127 = term65.
Proof. exact (TRANS (@lem6200975) (@lem6200978)). Qed.
Lemma lem6200980 (_79018 : int) : (term140 _79018) = (term140 _79018).
Proof. exact (eq_refl (term140 _79018)). Qed.
Lemma lem6200981 (_79018 : int) : (term118 _79018) = (term141 _79018).
Proof. exact (MK_COMB (@lem6200980 _79018) (@lem6200979)). Qed.
Lemma lem6200982 (_79018 : int) : (term141 _79018) = (real_of_int _79018).
Proof. exact (@lem1982723 (real_of_int _79018)). Qed.
Lemma lem6200983 (_79018 : int) : (term118 _79018) = (real_of_int _79018).
Proof. exact (TRANS (@lem6200981 _79018) (@lem6200982 _79018)). Qed.
Lemma lem6200985 (_79018 : int) : (term117 _79018) = (real_of_int _79018).
Proof. exact (TRANS (@lem6200949 _79018) (@lem6200983 _79018)). Qed.
Lemma lem6200986 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem6200987 (_79018 : int) : (term142 _79018) = (term143 _79018).
Proof. exact (MK_COMB (@lem6200986) (@lem6200985 _79018)). Qed.
Lemma lem6200988 : term65 = term65.
Proof. exact (eq_refl term65). Qed.
Lemma lem6200989 (_79018 : int) : (term116 _79018) = (term144 _79018).
Proof. exact (MK_COMB (@lem6200987 _79018) (@lem6200988)). Qed.
Lemma lem6200990 (_79018 : int) : (term68 _79018) = (term144 _79018).
Proof. exact (TRANS (@lem6200943 _79018) (@lem6200989 _79018)). Qed.
Lemma lem6200991 (_79017 : int) (_79018 : int) : (term456 _79018 _79017) = (term489 _79017 _79018).
Proof. exact (@lem1988287 (term93 _79017) (term313 _79018)). Qed.
Lemma lem6201009 (_79018 : int) : (term313 _79018) = (term324 _79018).
Proof. exact (@lem1982755 (term93 _79018) term90 term102). Qed.
Lemma lem6201011 (x : nat) : (real_of_num x) = (term119 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6201012 : term102 = term147.
Proof. exact (@lem6201011 term6). Qed.
Lemma lem6201014 (x : nat) : (real_of_num x) = (term119 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6201015 : term90 = term204.
Proof. exact (@lem6201014 term22). Qed.
Lemma lem6201016 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem6201017 : term226 = term227.
Proof. exact (MK_COMB (@lem6201016) (@lem6201015)). Qed.
Lemma lem6201018 : term325 = term326.
Proof. exact (MK_COMB (@lem6201017) (@lem6201012)). Qed.
Lemma lem6201019 : term327.
Proof. exact (@lem1981473 term90 term102 term102 term102 term97 term102). Qed.
Lemma lem6201021 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6201022 : term156 = term157.
Proof. exact (@lem6201021 (NUMERAL 0) term6). Qed.
Lemma lem6201023 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6201024 (h1 : term158 = (BIT1 0)) : term157 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6201025 : (term158 = (BIT1 0)) = (term157 = True).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6201024 h1) (fun h1 : term157 = True => @lem6201023)). Qed.
Lemma lem6201026 : term157 = True.
Proof. exact (EQ_MP (@lem6201025) (@lem6201023)). Qed.
Lemma lem6201027 : term156 = True.
Proof. exact (TRANS (@lem6201022) (@lem6201026)). Qed.
Lemma lem6201028 : True = term156.
Proof. exact (SYM (@lem6201027)). Qed.
Lemma lem6201029 : term156.
Proof. exact (EQ_MP (@lem6201028) (@lem0)). Qed.
Lemma lem6201030 : term328.
Proof. exact (@lem6201019 (@lem6201029)). Qed.
Lemma lem6201032 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6201033 : term156 = term157.
Proof. exact (@lem6201032 (NUMERAL 0) term6). Qed.
Lemma lem6201034 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6201035 (h1 : term158 = (BIT1 0)) : term157 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6201036 : (term158 = (BIT1 0)) = (term157 = True).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6201035 h1) (fun h1 : term157 = True => @lem6201034)). Qed.
Lemma lem6201037 : term157 = True.
Proof. exact (EQ_MP (@lem6201036) (@lem6201034)). Qed.
Lemma lem6201038 : term156 = True.
Proof. exact (TRANS (@lem6201033) (@lem6201037)). Qed.
Lemma lem6201039 : True = term156.
Proof. exact (SYM (@lem6201038)). Qed.
Lemma lem6201040 : term156.
Proof. exact (EQ_MP (@lem6201039) (@lem0)). Qed.
Lemma lem6201041 : term329.
Proof. exact (@lem6201030 (@lem6201040)). Qed.
Lemma lem6201043 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6201044 : term156 = term157.
Proof. exact (@lem6201043 (NUMERAL 0) term6). Qed.
Lemma lem6201045 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6201046 (h1 : term158 = (BIT1 0)) : term157 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6201047 : (term158 = (BIT1 0)) = (term157 = True).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6201046 h1) (fun h1 : term157 = True => @lem6201045)). Qed.
Lemma lem6201048 : term157 = True.
Proof. exact (EQ_MP (@lem6201047) (@lem6201045)). Qed.
Lemma lem6201049 : term156 = True.
Proof. exact (TRANS (@lem6201044) (@lem6201048)). Qed.
Lemma lem6201050 : True = term156.
Proof. exact (SYM (@lem6201049)). Qed.
Lemma lem6201051 : term156.
Proof. exact (EQ_MP (@lem6201050) (@lem0)). Qed.
Lemma lem6201052 : term330.
Proof. exact (@lem6201041 (@lem6201051)). Qed.
Lemma lem6201054 (m : nat) (n : nat) : (term130 m n) = (term131 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6201055 : term132 = term133.
Proof. exact (@lem6201054 term6 term6). Qed.
Lemma lem6201056 : (term134 = (BIT1 0)) = (term135 = term6).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6201057 : term135 = term6.
Proof. exact (EQ_MP (@lem6201056) (@lem940073)). Qed.
Lemma lem6201058 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6201059 : term133 = term102.
Proof. exact (MK_COMB (@lem6201058) (@lem6201057)). Qed.
Lemma lem6201060 : term132 = term102.
Proof. exact (TRANS (@lem6201055) (@lem6201059)). Qed.
Lemma lem6201062 (m : nat) (n : nat) : (term130 m n) = (term131 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6201063 : term237 = term236.
Proof. exact (@lem6201062 term22 term6). Qed.
Lemma lem6201064 : term35 = term20.
Proof. exact (@lem996237 term20). Qed.
Lemma lem6201065 : (term35 = term20) = (term36 = term22).
Proof. exact (@lem1007663 term20 (BIT1 0) term20). Qed.
Lemma lem6201066 : term36 = term22.
Proof. exact (EQ_MP (@lem6201065) (@lem6201064)). Qed.
Lemma lem6201067 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6201068 : term236 = term90.
Proof. exact (MK_COMB (@lem6201067) (@lem6201066)). Qed.
Lemma lem6201069 : term237 = term90.
Proof. exact (TRANS (@lem6201063) (@lem6201068)). Qed.
Lemma lem6201070 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem6201071 : term238 = term226.
Proof. exact (MK_COMB (@lem6201070) (@lem6201069)). Qed.
Lemma lem6201072 : term331 = term325.
Proof. exact (MK_COMB (@lem6201071) (@lem6201060)). Qed.
Lemma lem6201073 : term325 = term332.
Proof. exact (@lem1367770 term22 term6). Qed.
Lemma lem6201074 : term29 = term30.
Proof. exact (@lem706949). Qed.
Lemma lem6201075 : (term29 = term30) = (term31 = term32).
Proof. exact (@lem1006570 term20 (BIT1 0) term30). Qed.
Lemma lem6201076 : term31 = term32.
Proof. exact (EQ_MP (@lem6201075) (@lem6201074)). Qed.
Lemma lem6201077 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6201078 : term332 = term97.
Proof. exact (MK_COMB (@lem6201077) (@lem6201076)). Qed.
Lemma lem6201079 : term325 = term97.
Proof. exact (TRANS (@lem6201073) (@lem6201078)). Qed.
Lemma lem6201080 : term331 = term97.
Proof. exact (TRANS (@lem6201072) (@lem6201079)). Qed.
Lemma lem6201081 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem6201082 : term333 = term334.
Proof. exact (MK_COMB (@lem6201081) (@lem6201080)). Qed.
Lemma lem6201083 : term102 = term102.
Proof. exact (eq_refl term102). Qed.
Lemma lem6201084 : term335 = term162.
Proof. exact (MK_COMB (@lem6201082) (@lem6201083)). Qed.
Lemma lem6201086 (m : nat) (n : nat) : (term130 m n) = (term131 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6201087 : term162 = term163.
Proof. exact (@lem6201086 term32 term6). Qed.
Lemma lem6201088 : term164 = term30.
Proof. exact (@lem996237 term30). Qed.
Lemma lem6201089 : (term164 = term30) = (term165 = term32).
Proof. exact (@lem1007663 term30 (BIT1 0) term30). Qed.
Lemma lem6201090 : term165 = term32.
Proof. exact (EQ_MP (@lem6201089) (@lem6201088)). Qed.
Lemma lem6201091 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6201092 : term163 = term97.
Proof. exact (MK_COMB (@lem6201091) (@lem6201090)). Qed.
Lemma lem6201093 : term162 = term97.
Proof. exact (TRANS (@lem6201087) (@lem6201092)). Qed.
Lemma lem6201094 : term335 = term97.
Proof. exact (TRANS (@lem6201084) (@lem6201093)). Qed.
Lemma lem6201096 (m : nat) (n : nat) : (term130 m n) = (term131 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6201097 : term132 = term133.
Proof. exact (@lem6201096 term6 term6). Qed.
Lemma lem6201098 : (term134 = (BIT1 0)) = (term135 = term6).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6201099 : term135 = term6.
Proof. exact (EQ_MP (@lem6201098) (@lem940073)). Qed.
Lemma lem6201100 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6201101 : term133 = term102.
Proof. exact (MK_COMB (@lem6201100) (@lem6201099)). Qed.
Lemma lem6201102 : term132 = term102.
Proof. exact (TRANS (@lem6201097) (@lem6201101)). Qed.
Lemma lem6201103 : term334 = term334.
Proof. exact (eq_refl term334). Qed.
Lemma lem6201104 : term336 = term162.
Proof. exact (MK_COMB (@lem6201103) (@lem6201102)). Qed.
Lemma lem6201106 (m : nat) (n : nat) : (term130 m n) = (term131 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6201107 : term162 = term163.
Proof. exact (@lem6201106 term32 term6). Qed.
Lemma lem6201108 : term164 = term30.
Proof. exact (@lem996237 term30). Qed.
Lemma lem6201109 : (term164 = term30) = (term165 = term32).
Proof. exact (@lem1007663 term30 (BIT1 0) term30). Qed.
Lemma lem6201110 : term165 = term32.
Proof. exact (EQ_MP (@lem6201109) (@lem6201108)). Qed.
Lemma lem6201111 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6201112 : term163 = term97.
Proof. exact (MK_COMB (@lem6201111) (@lem6201110)). Qed.
Lemma lem6201113 : term162 = term97.
Proof. exact (TRANS (@lem6201107) (@lem6201112)). Qed.
Lemma lem6201114 : term336 = term97.
Proof. exact (TRANS (@lem6201104) (@lem6201113)). Qed.
Lemma lem6201115 : term97 = term336.
Proof. exact (SYM (@lem6201114)). Qed.
Lemma lem6201116 : term335 = term336.
Proof. exact (TRANS (@lem6201094) (@lem6201115)). Qed.
Lemma lem6201117 : term326 = term148.
Proof. exact (@lem6201052 (@lem6201116)). Qed.
Lemma lem6201118 : term325 = term148.
Proof. exact (TRANS (@lem6201018) (@lem6201117)). Qed.
Lemma lem6201120 (x : real) : (term139 x) = x.
Proof. exact (EQ_MP (@lem1981475 x) (@lem1981474 x)). Qed.
Lemma lem6201121 : term148 = term97.
Proof. exact (@lem6201120 term97). Qed.
Lemma lem6201122 : term325 = term97.
Proof. exact (TRANS (@lem6201118) (@lem6201121)). Qed.
Lemma lem6201123 (_79018 : int) : (term95 _79018) = (term95 _79018).
Proof. exact (eq_refl (term95 _79018)). Qed.
Lemma lem6201124 (_79018 : int) : (term324 _79018) = (term98 _79018).
Proof. exact (MK_COMB (@lem6201123 _79018) (@lem6201122)). Qed.
Lemma lem6201126 (_79018 : int) : (term313 _79018) = (term98 _79018).
Proof. exact (TRANS (@lem6201009 _79018) (@lem6201124 _79018)). Qed.
Lemma lem6201135 (_79017 : int) : (term490 _79017) = (term490 _79017).
Proof. exact (eq_refl (term490 _79017)). Qed.
Lemma lem6201136 (_79017 : int) (_79018 : int) : (term491 _79017 _79018) = (term492 _79017 _79018).
Proof. exact (MK_COMB (@lem6201135 _79017) (@lem6201126 _79018)). Qed.
Lemma lem6201137 (_79017 : int) (_79018 : int) : (term492 _79017 _79018) = (term493 _79017 _79018).
Proof. exact (@lem1982792 (term93 _79017) (term98 _79018)). Qed.
Lemma lem6201138 (_79018 : int) : (term341 _79018) = (term342 _79018).
Proof. exact (@lem1982781 (term93 _79018) term123 term97). Qed.
Lemma lem6201140 (x : nat) : (real_of_num x) = (term119 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6201141 : term97 = term148.
Proof. exact (@lem6201140 term32). Qed.
Lemma lem6201143 (x : nat) : (term121 x) = (term122 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem6201144 : term123 = term124.
Proof. exact (@lem6201143 term6). Qed.
Lemma lem6201145 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem6201146 : term125 = term126.
Proof. exact (MK_COMB (@lem6201145) (@lem6201144)). Qed.
Lemma lem6201147 : term343 = term344.
Proof. exact (MK_COMB (@lem6201146) (@lem6201141)). Qed.
Lemma lem6201148 : term344 = term345.
Proof. exact (@lem1981613 term123 term97 term102 term102). Qed.
Lemma lem6201150 (m : nat) (n : nat) : (term130 m n) = (term131 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6201151 : term132 = term133.
Proof. exact (@lem6201150 term6 term6). Qed.
Lemma lem6201152 : (term134 = (BIT1 0)) = (term135 = term6).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6201153 : term135 = term6.
Proof. exact (EQ_MP (@lem6201152) (@lem940073)). Qed.
Lemma lem6201154 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6201155 : term133 = term102.
Proof. exact (MK_COMB (@lem6201154) (@lem6201153)). Qed.
Lemma lem6201156 : term132 = term102.
Proof. exact (TRANS (@lem6201151) (@lem6201155)). Qed.
Lemma lem6201158 (m : nat) (n : nat) : (term192 m n) = (term193 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem6201159 : term343 = term346.
Proof. exact (@lem6201158 term6 term32). Qed.
Lemma lem6201160 : term347 = term30.
Proof. exact (@lem996238 term30). Qed.
Lemma lem6201161 : (term347 = term30) = (term348 = term32).
Proof. exact (@lem1007663 (BIT1 0) term30 term30). Qed.
Lemma lem6201162 : term348 = term32.
Proof. exact (EQ_MP (@lem6201161) (@lem6201160)). Qed.
Lemma lem6201163 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6201164 : term349 = term97.
Proof. exact (MK_COMB (@lem6201163) (@lem6201162)). Qed.
Lemma lem6201165 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem6201166 : term346 = term350.
Proof. exact (MK_COMB (@lem6201165) (@lem6201164)). Qed.
Lemma lem6201167 : term343 = term350.
Proof. exact (TRANS (@lem6201159) (@lem6201166)). Qed.
Lemma lem6201168 : real_div = real_div.
Proof. exact (eq_refl real_div). Qed.
Lemma lem6201169 : term351 = term352.
Proof. exact (MK_COMB (@lem6201168) (@lem6201167)). Qed.
Lemma lem6201170 : term345 = term353.
Proof. exact (MK_COMB (@lem6201169) (@lem6201156)). Qed.
Lemma lem6201171 : term344 = term353.
Proof. exact (TRANS (@lem6201148) (@lem6201170)). Qed.
Lemma lem6201172 : term343 = term353.
Proof. exact (TRANS (@lem6201147) (@lem6201171)). Qed.
Lemma lem6201174 (x : real) : (term139 x) = x.
Proof. exact (EQ_MP (@lem1982628 x) (@lem1982627 x)). Qed.
Lemma lem6201175 : term353 = term350.
Proof. exact (@lem6201174 term350). Qed.
Lemma lem6201176 : term343 = term350.
Proof. exact (TRANS (@lem6201172) (@lem6201175)). Qed.
Lemma lem6201177 (_79018 : int) : (term202 _79018) = (term203 _79018).
Proof. exact (@lem1982749 term123 term90 (real_of_int _79018)). Qed.
Lemma lem6201179 (x : nat) : (real_of_num x) = (term119 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6201180 : term90 = term204.
Proof. exact (@lem6201179 term22). Qed.
Lemma lem6201182 (x : nat) : (term121 x) = (term122 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem6201183 : term123 = term124.
Proof. exact (@lem6201182 term6). Qed.
Lemma lem6201184 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem6201185 : term125 = term126.
Proof. exact (MK_COMB (@lem6201184) (@lem6201183)). Qed.
Lemma lem6201186 : term205 = term206.
Proof. exact (MK_COMB (@lem6201185) (@lem6201180)). Qed.
Lemma lem6201187 : term206 = term207.
Proof. exact (@lem1981613 term123 term90 term102 term102). Qed.
Lemma lem6201189 (m : nat) (n : nat) : (term130 m n) = (term131 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6201190 : term132 = term133.
Proof. exact (@lem6201189 term6 term6). Qed.
Lemma lem6201191 : (term134 = (BIT1 0)) = (term135 = term6).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6201192 : term135 = term6.
Proof. exact (EQ_MP (@lem6201191) (@lem940073)). Qed.
Lemma lem6201193 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6201194 : term133 = term102.
Proof. exact (MK_COMB (@lem6201193) (@lem6201192)). Qed.
Lemma lem6201195 : term132 = term102.
Proof. exact (TRANS (@lem6201190) (@lem6201194)). Qed.
Lemma lem6201197 (m : nat) (n : nat) : (term192 m n) = (term193 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem6201198 : term205 = term208.
Proof. exact (@lem6201197 term6 term22). Qed.
Lemma lem6201199 : term209 = term20.
Proof. exact (@lem996238 term20). Qed.
Lemma lem6201200 : (term209 = term20) = (term210 = term22).
Proof. exact (@lem1007663 (BIT1 0) term20 term20). Qed.
Lemma lem6201201 : term210 = term22.
Proof. exact (EQ_MP (@lem6201200) (@lem6201199)). Qed.
Lemma lem6201202 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6201203 : term211 = term90.
Proof. exact (MK_COMB (@lem6201202) (@lem6201201)). Qed.
Lemma lem6201204 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem6201205 : term208 = term212.
Proof. exact (MK_COMB (@lem6201204) (@lem6201203)). Qed.
Lemma lem6201206 : term205 = term212.
Proof. exact (TRANS (@lem6201198) (@lem6201205)). Qed.
Lemma lem6201207 : real_div = real_div.
Proof. exact (eq_refl real_div). Qed.
Lemma lem6201208 : term213 = term214.
Proof. exact (MK_COMB (@lem6201207) (@lem6201206)). Qed.
Lemma lem6201209 : term207 = term215.
Proof. exact (MK_COMB (@lem6201208) (@lem6201195)). Qed.
Lemma lem6201210 : term206 = term215.
Proof. exact (TRANS (@lem6201187) (@lem6201209)). Qed.
Lemma lem6201211 : term205 = term215.
Proof. exact (TRANS (@lem6201186) (@lem6201210)). Qed.
Lemma lem6201213 (x : real) : (term139 x) = x.
Proof. exact (EQ_MP (@lem1982628 x) (@lem1982627 x)). Qed.
Lemma lem6201214 : term215 = term212.
Proof. exact (@lem6201213 term212). Qed.
Lemma lem6201215 : term205 = term212.
Proof. exact (TRANS (@lem6201211) (@lem6201214)). Qed.
Lemma lem6201216 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem6201217 : term216 = term217.
Proof. exact (MK_COMB (@lem6201216) (@lem6201215)). Qed.
Lemma lem6201218 (_79018 : int) : (real_of_int _79018) = (real_of_int _79018).
Proof. exact (eq_refl (real_of_int _79018)). Qed.
Lemma lem6201219 (_79018 : int) : (term203 _79018) = (term218 _79018).
Proof. exact (MK_COMB (@lem6201217) (@lem6201218 _79018)). Qed.
Lemma lem6201220 (_79018 : int) : (term202 _79018) = (term218 _79018).
Proof. exact (TRANS (@lem6201177 _79018) (@lem6201219 _79018)). Qed.
Lemma lem6201221 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem6201222 (_79018 : int) : (term219 _79018) = (term220 _79018).
Proof. exact (MK_COMB (@lem6201221) (@lem6201220 _79018)). Qed.
Lemma lem6201223 (_79018 : int) : (term342 _79018) = (term354 _79018).
Proof. exact (MK_COMB (@lem6201222 _79018) (@lem6201176)). Qed.
Lemma lem6201224 (_79018 : int) : (term341 _79018) = (term354 _79018).
Proof. exact (TRANS (@lem6201138 _79018) (@lem6201223 _79018)). Qed.
Lemma lem6201225 (_79017 : int) : (term95 _79017) = (term95 _79017).
Proof. exact (eq_refl (term95 _79017)). Qed.
Lemma lem6201228 (_79017 : int) (_79018 : int) : (term493 _79017 _79018) = (term494 _79017 _79018).
Proof. exact (MK_COMB (@lem6201225 _79017) (@lem6201224 _79018)). Qed.
Lemma lem6201229 (_79017 : int) (_79018 : int) : (term492 _79017 _79018) = (term494 _79017 _79018).
Proof. exact (TRANS (@lem6201137 _79017 _79018) (@lem6201228 _79017 _79018)). Qed.
Lemma lem6201230 (_79017 : int) (_79018 : int) : (term491 _79017 _79018) = (term494 _79017 _79018).
Proof. exact (TRANS (@lem6201136 _79017 _79018) (@lem6201229 _79017 _79018)). Qed.
Lemma lem6201231 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem6201232 (_79017 : int) (_79018 : int) : (term495 _79017 _79018) = (term496 _79017 _79018).
Proof. exact (MK_COMB (@lem6201231) (@lem6201230 _79017 _79018)). Qed.
Lemma lem6201233 : term65 = term65.
Proof. exact (eq_refl term65). Qed.
Lemma lem6201234 (_79017 : int) (_79018 : int) : (term489 _79017 _79018) = (term497 _79017 _79018).
Proof. exact (MK_COMB (@lem6201232 _79017 _79018) (@lem6201233)). Qed.
Lemma lem6201235 (_79017 : int) (_79018 : int) : (term456 _79018 _79017) = (term497 _79017 _79018).
Proof. exact (TRANS (@lem6200991 _79017 _79018) (@lem6201234 _79017 _79018)). Qed.
Lemma lem6201236 (_79017 : int) (_79018 : int) : (term471 _79018 _79017) = (term498 _79017 _79018).
Proof. exact (@lem1988287 (real_of_int _79017) (term468 _79018)). Qed.
Lemma lem6201248 (_79018 : int) : (term468 _79018) = (term499 _79018).
Proof. exact (@lem1982755 (real_of_int _79018) term102 term102). Qed.
Lemma lem6201250 (x : nat) : (real_of_num x) = (term119 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6201251 : term102 = term147.
Proof. exact (@lem6201250 term6). Qed.
Lemma lem6201253 (x : nat) : (real_of_num x) = (term119 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6201254 : term102 = term147.
Proof. exact (@lem6201253 term6). Qed.
Lemma lem6201255 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem6201256 : term500 = term501.
Proof. exact (MK_COMB (@lem6201255) (@lem6201254)). Qed.
Lemma lem6201257 : term502 = term503.
Proof. exact (MK_COMB (@lem6201256) (@lem6201251)). Qed.
Lemma lem6201258 : term504.
Proof. exact (@lem1981473 term102 term102 term102 term102 term90 term102). Qed.
Lemma lem6201260 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6201261 : term156 = term157.
Proof. exact (@lem6201260 (NUMERAL 0) term6). Qed.
Lemma lem6201262 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6201263 (h1 : term158 = (BIT1 0)) : term157 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6201264 : (term158 = (BIT1 0)) = (term157 = True).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6201263 h1) (fun h1 : term157 = True => @lem6201262)). Qed.
Lemma lem6201265 : term157 = True.
Proof. exact (EQ_MP (@lem6201264) (@lem6201262)). Qed.
Lemma lem6201266 : term156 = True.
Proof. exact (TRANS (@lem6201261) (@lem6201265)). Qed.
Lemma lem6201267 : True = term156.
Proof. exact (SYM (@lem6201266)). Qed.
Lemma lem6201268 : term156.
Proof. exact (EQ_MP (@lem6201267) (@lem0)). Qed.
Lemma lem6201269 : term505.
Proof. exact (@lem6201258 (@lem6201268)). Qed.
Lemma lem6201271 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6201272 : term156 = term157.
Proof. exact (@lem6201271 (NUMERAL 0) term6). Qed.
Lemma lem6201273 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6201274 (h1 : term158 = (BIT1 0)) : term157 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6201275 : (term158 = (BIT1 0)) = (term157 = True).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6201274 h1) (fun h1 : term157 = True => @lem6201273)). Qed.
Lemma lem6201276 : term157 = True.
Proof. exact (EQ_MP (@lem6201275) (@lem6201273)). Qed.
Lemma lem6201277 : term156 = True.
Proof. exact (TRANS (@lem6201272) (@lem6201276)). Qed.
Lemma lem6201278 : True = term156.
Proof. exact (SYM (@lem6201277)). Qed.
Lemma lem6201279 : term156.
Proof. exact (EQ_MP (@lem6201278) (@lem0)). Qed.
Lemma lem6201280 : term506.
Proof. exact (@lem6201269 (@lem6201279)). Qed.
Lemma lem6201282 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6201283 : term156 = term157.
Proof. exact (@lem6201282 (NUMERAL 0) term6). Qed.
Lemma lem6201284 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6201285 (h1 : term158 = (BIT1 0)) : term157 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6201286 : (term158 = (BIT1 0)) = (term157 = True).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6201285 h1) (fun h1 : term157 = True => @lem6201284)). Qed.
Lemma lem6201287 : term157 = True.
Proof. exact (EQ_MP (@lem6201286) (@lem6201284)). Qed.
Lemma lem6201288 : term156 = True.
Proof. exact (TRANS (@lem6201283) (@lem6201287)). Qed.
Lemma lem6201289 : True = term156.
Proof. exact (SYM (@lem6201288)). Qed.
Lemma lem6201290 : term156.
Proof. exact (EQ_MP (@lem6201289) (@lem0)). Qed.
Lemma lem6201291 : term507.
Proof. exact (@lem6201280 (@lem6201290)). Qed.
Lemma lem6201293 (m : nat) (n : nat) : (term130 m n) = (term131 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6201294 : term132 = term133.
Proof. exact (@lem6201293 term6 term6). Qed.
Lemma lem6201295 : (term134 = (BIT1 0)) = (term135 = term6).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6201296 : term135 = term6.
Proof. exact (EQ_MP (@lem6201295) (@lem940073)). Qed.
Lemma lem6201297 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6201298 : term133 = term102.
Proof. exact (MK_COMB (@lem6201297) (@lem6201296)). Qed.
Lemma lem6201299 : term132 = term102.
Proof. exact (TRANS (@lem6201294) (@lem6201298)). Qed.
Lemma lem6201301 (m : nat) (n : nat) : (term130 m n) = (term131 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6201302 : term132 = term133.
Proof. exact (@lem6201301 term6 term6). Qed.
Lemma lem6201303 : (term134 = (BIT1 0)) = (term135 = term6).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6201304 : term135 = term6.
Proof. exact (EQ_MP (@lem6201303) (@lem940073)). Qed.
Lemma lem6201305 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6201306 : term133 = term102.
Proof. exact (MK_COMB (@lem6201305) (@lem6201304)). Qed.
Lemma lem6201307 : term132 = term102.
Proof. exact (TRANS (@lem6201302) (@lem6201306)). Qed.
Lemma lem6201308 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem6201309 : term508 = term500.
Proof. exact (MK_COMB (@lem6201308) (@lem6201307)). Qed.
Lemma lem6201310 : term509 = term502.
Proof. exact (MK_COMB (@lem6201309) (@lem6201299)). Qed.
Lemma lem6201311 : term502 = term510.
Proof. exact (@lem1367770 term6 term6). Qed.
Lemma lem6201312 : term19 = term20.
Proof. exact (@lem706885). Qed.
Lemma lem6201313 : (term19 = term20) = (term21 = term22).
Proof. exact (@lem1006570 (BIT1 0) (BIT1 0) term20). Qed.
Lemma lem6201314 : term21 = term22.
Proof. exact (EQ_MP (@lem6201313) (@lem6201312)). Qed.
Lemma lem6201315 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6201316 : term510 = term90.
Proof. exact (MK_COMB (@lem6201315) (@lem6201314)). Qed.
Lemma lem6201317 : term502 = term90.
Proof. exact (TRANS (@lem6201311) (@lem6201316)). Qed.
Lemma lem6201318 : term509 = term90.
Proof. exact (TRANS (@lem6201310) (@lem6201317)). Qed.
Lemma lem6201319 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem6201320 : term511 = term92.
Proof. exact (MK_COMB (@lem6201319) (@lem6201318)). Qed.
Lemma lem6201321 : term102 = term102.
Proof. exact (eq_refl term102). Qed.
Lemma lem6201322 : term512 = term237.
Proof. exact (MK_COMB (@lem6201320) (@lem6201321)). Qed.
Lemma lem6201324 (m : nat) (n : nat) : (term130 m n) = (term131 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6201325 : term237 = term236.
Proof. exact (@lem6201324 term22 term6). Qed.
Lemma lem6201326 : term35 = term20.
Proof. exact (@lem996237 term20). Qed.
Lemma lem6201327 : (term35 = term20) = (term36 = term22).
Proof. exact (@lem1007663 term20 (BIT1 0) term20). Qed.
Lemma lem6201328 : term36 = term22.
Proof. exact (EQ_MP (@lem6201327) (@lem6201326)). Qed.
Lemma lem6201329 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6201330 : term236 = term90.
Proof. exact (MK_COMB (@lem6201329) (@lem6201328)). Qed.
Lemma lem6201331 : term237 = term90.
Proof. exact (TRANS (@lem6201325) (@lem6201330)). Qed.
Lemma lem6201332 : term512 = term90.
Proof. exact (TRANS (@lem6201322) (@lem6201331)). Qed.
Lemma lem6201334 (m : nat) (n : nat) : (term130 m n) = (term131 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6201335 : term132 = term133.
Proof. exact (@lem6201334 term6 term6). Qed.
Lemma lem6201336 : (term134 = (BIT1 0)) = (term135 = term6).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6201337 : term135 = term6.
Proof. exact (EQ_MP (@lem6201336) (@lem940073)). Qed.
Lemma lem6201338 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6201339 : term133 = term102.
Proof. exact (MK_COMB (@lem6201338) (@lem6201337)). Qed.
Lemma lem6201340 : term132 = term102.
Proof. exact (TRANS (@lem6201335) (@lem6201339)). Qed.
Lemma lem6201341 : term92 = term92.
Proof. exact (eq_refl term92). Qed.
Lemma lem6201342 : term513 = term237.
Proof. exact (MK_COMB (@lem6201341) (@lem6201340)). Qed.
Lemma lem6201344 (m : nat) (n : nat) : (term130 m n) = (term131 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6201345 : term237 = term236.
Proof. exact (@lem6201344 term22 term6). Qed.
Lemma lem6201346 : term35 = term20.
Proof. exact (@lem996237 term20). Qed.
Lemma lem6201347 : (term35 = term20) = (term36 = term22).
Proof. exact (@lem1007663 term20 (BIT1 0) term20). Qed.
Lemma lem6201348 : term36 = term22.
Proof. exact (EQ_MP (@lem6201347) (@lem6201346)). Qed.
Lemma lem6201349 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6201350 : term236 = term90.
Proof. exact (MK_COMB (@lem6201349) (@lem6201348)). Qed.
Lemma lem6201351 : term237 = term90.
Proof. exact (TRANS (@lem6201345) (@lem6201350)). Qed.
Lemma lem6201352 : term513 = term90.
Proof. exact (TRANS (@lem6201342) (@lem6201351)). Qed.
Lemma lem6201353 : term90 = term513.
Proof. exact (SYM (@lem6201352)). Qed.
Lemma lem6201354 : term512 = term513.
Proof. exact (TRANS (@lem6201332) (@lem6201353)). Qed.
Lemma lem6201355 : term503 = term204.
Proof. exact (@lem6201291 (@lem6201354)). Qed.
Lemma lem6201356 : term502 = term204.
Proof. exact (TRANS (@lem6201257) (@lem6201355)). Qed.
Lemma lem6201358 (x : real) : (term139 x) = x.
Proof. exact (EQ_MP (@lem1981475 x) (@lem1981474 x)). Qed.
Lemma lem6201359 : term204 = term90.
Proof. exact (@lem6201358 term90). Qed.
Lemma lem6201360 : term502 = term90.
Proof. exact (TRANS (@lem6201356) (@lem6201359)). Qed.
Lemma lem6201361 (_79018 : int) : (term140 _79018) = (term140 _79018).
Proof. exact (eq_refl (term140 _79018)). Qed.
Lemma lem6201362 (_79018 : int) : (term499 _79018) = (term514 _79018).
Proof. exact (MK_COMB (@lem6201361 _79018) (@lem6201360)). Qed.
Lemma lem6201364 (_79018 : int) : (term468 _79018) = (term514 _79018).
Proof. exact (TRANS (@lem6201248 _79018) (@lem6201362 _79018)). Qed.
Lemma lem6201367 (_79017 : int) : (term515 _79017) = (term515 _79017).
Proof. exact (eq_refl (term515 _79017)). Qed.
Lemma lem6201368 (_79017 : int) (_79018 : int) : (term516 _79017 _79018) = (term517 _79017 _79018).
Proof. exact (MK_COMB (@lem6201367 _79017) (@lem6201364 _79018)). Qed.
Lemma lem6201369 (_79017 : int) (_79018 : int) : (term517 _79017 _79018) = (term518 _79017 _79018).
Proof. exact (@lem1982792 (real_of_int _79017) (term514 _79018)). Qed.
Lemma lem6201370 (_79018 : int) : (term519 _79018) = (term520 _79018).
Proof. exact (@lem1982781 (real_of_int _79018) term123 term90). Qed.
Lemma lem6201372 (x : nat) : (real_of_num x) = (term119 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6201373 : term90 = term204.
Proof. exact (@lem6201372 term22). Qed.
Lemma lem6201375 (x : nat) : (term121 x) = (term122 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem6201376 : term123 = term124.
Proof. exact (@lem6201375 term6). Qed.
Lemma lem6201377 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem6201378 : term125 = term126.
Proof. exact (MK_COMB (@lem6201377) (@lem6201376)). Qed.
Lemma lem6201379 : term205 = term206.
Proof. exact (MK_COMB (@lem6201378) (@lem6201373)). Qed.
Lemma lem6201380 : term206 = term207.
Proof. exact (@lem1981613 term123 term90 term102 term102). Qed.
Lemma lem6201382 (m : nat) (n : nat) : (term130 m n) = (term131 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6201383 : term132 = term133.
Proof. exact (@lem6201382 term6 term6). Qed.
Lemma lem6201384 : (term134 = (BIT1 0)) = (term135 = term6).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6201385 : term135 = term6.
Proof. exact (EQ_MP (@lem6201384) (@lem940073)). Qed.
Lemma lem6201386 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6201387 : term133 = term102.
Proof. exact (MK_COMB (@lem6201386) (@lem6201385)). Qed.
Lemma lem6201388 : term132 = term102.
Proof. exact (TRANS (@lem6201383) (@lem6201387)). Qed.
Lemma lem6201390 (m : nat) (n : nat) : (term192 m n) = (term193 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem6201391 : term205 = term208.
Proof. exact (@lem6201390 term6 term22). Qed.
Lemma lem6201392 : term209 = term20.
Proof. exact (@lem996238 term20). Qed.
Lemma lem6201393 : (term209 = term20) = (term210 = term22).
Proof. exact (@lem1007663 (BIT1 0) term20 term20). Qed.
Lemma lem6201394 : term210 = term22.
Proof. exact (EQ_MP (@lem6201393) (@lem6201392)). Qed.
Lemma lem6201395 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6201396 : term211 = term90.
Proof. exact (MK_COMB (@lem6201395) (@lem6201394)). Qed.
Lemma lem6201397 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem6201398 : term208 = term212.
Proof. exact (MK_COMB (@lem6201397) (@lem6201396)). Qed.
Lemma lem6201399 : term205 = term212.
Proof. exact (TRANS (@lem6201391) (@lem6201398)). Qed.
Lemma lem6201400 : real_div = real_div.
Proof. exact (eq_refl real_div). Qed.
Lemma lem6201401 : term213 = term214.
Proof. exact (MK_COMB (@lem6201400) (@lem6201399)). Qed.
Lemma lem6201402 : term207 = term215.
Proof. exact (MK_COMB (@lem6201401) (@lem6201388)). Qed.
Lemma lem6201403 : term206 = term215.
Proof. exact (TRANS (@lem6201380) (@lem6201402)). Qed.
Lemma lem6201404 : term205 = term215.
Proof. exact (TRANS (@lem6201379) (@lem6201403)). Qed.
Lemma lem6201406 (x : real) : (term139 x) = x.
Proof. exact (EQ_MP (@lem1982628 x) (@lem1982627 x)). Qed.
Lemma lem6201407 : term215 = term212.
Proof. exact (@lem6201406 term212). Qed.
Lemma lem6201408 : term205 = term212.
Proof. exact (TRANS (@lem6201404) (@lem6201407)). Qed.
Lemma lem6201411 (_79018 : int) : (term521 _79018) = (term521 _79018).
Proof. exact (eq_refl (term521 _79018)). Qed.
Lemma lem6201412 (_79018 : int) : (term520 _79018) = (term522 _79018).
Proof. exact (MK_COMB (@lem6201411 _79018) (@lem6201408)). Qed.
Lemma lem6201413 (_79018 : int) : (term519 _79018) = (term522 _79018).
Proof. exact (TRANS (@lem6201370 _79018) (@lem6201412 _79018)). Qed.
Lemma lem6201414 (_79017 : int) : (term140 _79017) = (term140 _79017).
Proof. exact (eq_refl (term140 _79017)). Qed.
Lemma lem6201417 (_79017 : int) (_79018 : int) : (term518 _79017 _79018) = (term523 _79017 _79018).
Proof. exact (MK_COMB (@lem6201414 _79017) (@lem6201413 _79018)). Qed.
Lemma lem6201418 (_79017 : int) (_79018 : int) : (term517 _79017 _79018) = (term523 _79017 _79018).
Proof. exact (TRANS (@lem6201369 _79017 _79018) (@lem6201417 _79017 _79018)). Qed.
Lemma lem6201419 (_79017 : int) (_79018 : int) : (term516 _79017 _79018) = (term523 _79017 _79018).
Proof. exact (TRANS (@lem6201368 _79017 _79018) (@lem6201418 _79017 _79018)). Qed.
Lemma lem6201420 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem6201421 (_79017 : int) (_79018 : int) : (term524 _79017 _79018) = (term525 _79017 _79018).
Proof. exact (MK_COMB (@lem6201420) (@lem6201419 _79017 _79018)). Qed.
Lemma lem6201422 : term65 = term65.
Proof. exact (eq_refl term65). Qed.
Lemma lem6201423 (_79017 : int) (_79018 : int) : (term498 _79017 _79018) = (term526 _79017 _79018).
Proof. exact (MK_COMB (@lem6201421 _79017 _79018) (@lem6201422)). Qed.
Lemma lem6201424 (_79017 : int) (_79018 : int) : (term471 _79018 _79017) = (term526 _79017 _79018).
Proof. exact (TRANS (@lem6201236 _79017 _79018) (@lem6201423 _79017 _79018)). Qed.
Lemma lem6201425 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6201426 (_79017 : int) (_79018 : int) : (term473 _79018 _79017) = (term527 _79017 _79018).
Proof. exact (MK_COMB (@lem6201425) (@lem6201235 _79017 _79018)). Qed.
Lemma lem6201427 (_79017 : int) (_79018 : int) : (term474 _79018 _79017) = (term528 _79017 _79018).
Proof. exact (MK_COMB (@lem6201426 _79017 _79018) (@lem6201424 _79017 _79018)). Qed.
Lemma lem6201428 (_79018 : int) (_79017 : int) : (term478 _79017 _79018) = (term529 _79018 _79017).
Proof. exact (@lem1988287 (term310 _79018) (term93 _79017)). Qed.
Lemma lem6201452 (_79018 : int) (_79017 : int) : (term530 _79018 _79017) = (term531 _79018 _79017).
Proof. exact (@lem1982792 (term310 _79018) (term93 _79017)). Qed.
Lemma lem6201453 (_79017 : int) : (term202 _79017) = (term203 _79017).
Proof. exact (@lem1982749 term123 term90 (real_of_int _79017)). Qed.
Lemma lem6201455 (x : nat) : (real_of_num x) = (term119 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6201456 : term90 = term204.
Proof. exact (@lem6201455 term22). Qed.
Lemma lem6201458 (x : nat) : (term121 x) = (term122 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem6201459 : term123 = term124.
Proof. exact (@lem6201458 term6). Qed.
Lemma lem6201460 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem6201461 : term125 = term126.
Proof. exact (MK_COMB (@lem6201460) (@lem6201459)). Qed.
Lemma lem6201462 : term205 = term206.
Proof. exact (MK_COMB (@lem6201461) (@lem6201456)). Qed.
Lemma lem6201463 : term206 = term207.
Proof. exact (@lem1981613 term123 term90 term102 term102). Qed.
Lemma lem6201465 (m : nat) (n : nat) : (term130 m n) = (term131 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6201466 : term132 = term133.
Proof. exact (@lem6201465 term6 term6). Qed.
Lemma lem6201467 : (term134 = (BIT1 0)) = (term135 = term6).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6201468 : term135 = term6.
Proof. exact (EQ_MP (@lem6201467) (@lem940073)). Qed.
Lemma lem6201469 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6201470 : term133 = term102.
Proof. exact (MK_COMB (@lem6201469) (@lem6201468)). Qed.
Lemma lem6201471 : term132 = term102.
Proof. exact (TRANS (@lem6201466) (@lem6201470)). Qed.
Lemma lem6201473 (m : nat) (n : nat) : (term192 m n) = (term193 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem6201474 : term205 = term208.
Proof. exact (@lem6201473 term6 term22). Qed.
Lemma lem6201475 : term209 = term20.
Proof. exact (@lem996238 term20). Qed.
Lemma lem6201476 : (term209 = term20) = (term210 = term22).
Proof. exact (@lem1007663 (BIT1 0) term20 term20). Qed.
Lemma lem6201477 : term210 = term22.
Proof. exact (EQ_MP (@lem6201476) (@lem6201475)). Qed.
Lemma lem6201478 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6201479 : term211 = term90.
Proof. exact (MK_COMB (@lem6201478) (@lem6201477)). Qed.
Lemma lem6201480 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem6201481 : term208 = term212.
Proof. exact (MK_COMB (@lem6201480) (@lem6201479)). Qed.
Lemma lem6201482 : term205 = term212.
Proof. exact (TRANS (@lem6201474) (@lem6201481)). Qed.
Lemma lem6201483 : real_div = real_div.
Proof. exact (eq_refl real_div). Qed.
Lemma lem6201484 : term213 = term214.
Proof. exact (MK_COMB (@lem6201483) (@lem6201482)). Qed.
Lemma lem6201485 : term207 = term215.
Proof. exact (MK_COMB (@lem6201484) (@lem6201471)). Qed.
Lemma lem6201486 : term206 = term215.
Proof. exact (TRANS (@lem6201463) (@lem6201485)). Qed.
Lemma lem6201487 : term205 = term215.
Proof. exact (TRANS (@lem6201462) (@lem6201486)). Qed.
Lemma lem6201489 (x : real) : (term139 x) = x.
Proof. exact (EQ_MP (@lem1982628 x) (@lem1982627 x)). Qed.
Lemma lem6201490 : term215 = term212.
Proof. exact (@lem6201489 term212). Qed.
Lemma lem6201491 : term205 = term212.
Proof. exact (TRANS (@lem6201487) (@lem6201490)). Qed.
Lemma lem6201492 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem6201493 : term216 = term217.
Proof. exact (MK_COMB (@lem6201492) (@lem6201491)). Qed.
Lemma lem6201494 (_79017 : int) : (real_of_int _79017) = (real_of_int _79017).
Proof. exact (eq_refl (real_of_int _79017)). Qed.
Lemma lem6201495 (_79017 : int) : (term203 _79017) = (term218 _79017).
Proof. exact (MK_COMB (@lem6201493) (@lem6201494 _79017)). Qed.
Lemma lem6201496 (_79017 : int) : (term202 _79017) = (term218 _79017).
Proof. exact (TRANS (@lem6201453 _79017) (@lem6201495 _79017)). Qed.
Lemma lem6201497 (_79018 : int) : (term312 _79018) = (term312 _79018).
Proof. exact (eq_refl (term312 _79018)). Qed.
Lemma lem6201498 (_79018 : int) (_79017 : int) : (term531 _79018 _79017) = (term532 _79018 _79017).
Proof. exact (MK_COMB (@lem6201497 _79018) (@lem6201496 _79017)). Qed.
Lemma lem6201499 (_79017 : int) (_79018 : int) : (term532 _79018 _79017) = (term533 _79017 _79018).
Proof. exact (@lem1982761 (term218 _79017) (term310 _79018)). Qed.
Lemma lem6201500 (_79017 : int) (_79018 : int) : (term531 _79018 _79017) = (term533 _79017 _79018).
Proof. exact (TRANS (@lem6201498 _79018 _79017) (@lem6201499 _79017 _79018)). Qed.
Lemma lem6201502 (_79017 : int) (_79018 : int) : (term530 _79018 _79017) = (term533 _79017 _79018).
Proof. exact (TRANS (@lem6201452 _79018 _79017) (@lem6201500 _79017 _79018)). Qed.
Lemma lem6201503 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem6201504 (_79017 : int) (_79018 : int) : (term534 _79018 _79017) = (term535 _79017 _79018).
Proof. exact (MK_COMB (@lem6201503) (@lem6201502 _79017 _79018)). Qed.
Lemma lem6201505 : term65 = term65.
Proof. exact (eq_refl term65). Qed.
Lemma lem6201506 (_79017 : int) (_79018 : int) : (term529 _79018 _79017) = (term536 _79017 _79018).
Proof. exact (MK_COMB (@lem6201504 _79017 _79018) (@lem6201505)). Qed.
Lemma lem6201507 (_79017 : int) (_79018 : int) : (term478 _79017 _79018) = (term536 _79017 _79018).
Proof. exact (TRANS (@lem6201428 _79018 _79017) (@lem6201506 _79017 _79018)). Qed.
Lemma lem6201508 (_79018 : int) (_79017 : int) : (term481 _79017 _79018) = (term537 _79018 _79017).
Proof. exact (@lem1988287 (term465 _79018) (real_of_int _79017)). Qed.
Lemma lem6201520 (_79018 : int) (_79017 : int) : (term538 _79018 _79017) = (term539 _79018 _79017).
Proof. exact (@lem1982792 (term465 _79018) (real_of_int _79017)). Qed.
Lemma lem6201525 (_79017 : int) (_79018 : int) : (term539 _79018 _79017) = (term540 _79017 _79018).
Proof. exact (@lem1982761 (term541 _79017) (term465 _79018)). Qed.
Lemma lem6201527 (_79017 : int) (_79018 : int) : (term538 _79018 _79017) = (term540 _79017 _79018).
Proof. exact (TRANS (@lem6201520 _79018 _79017) (@lem6201525 _79017 _79018)). Qed.
Lemma lem6201528 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem6201529 (_79017 : int) (_79018 : int) : (term542 _79018 _79017) = (term543 _79017 _79018).
Proof. exact (MK_COMB (@lem6201528) (@lem6201527 _79017 _79018)). Qed.
Lemma lem6201530 : term65 = term65.
Proof. exact (eq_refl term65). Qed.
Lemma lem6201531 (_79017 : int) (_79018 : int) : (term537 _79018 _79017) = (term544 _79017 _79018).
Proof. exact (MK_COMB (@lem6201529 _79017 _79018) (@lem6201530)). Qed.
Lemma lem6201532 (_79017 : int) (_79018 : int) : (term481 _79017 _79018) = (term544 _79017 _79018).
Proof. exact (TRANS (@lem6201508 _79018 _79017) (@lem6201531 _79017 _79018)). Qed.
Lemma lem6201533 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6201534 (_79017 : int) (_79018 : int) : (term482 _79017 _79018) = (term545 _79017 _79018).
Proof. exact (MK_COMB (@lem6201533) (@lem6201507 _79017 _79018)). Qed.
Lemma lem6201535 (_79017 : int) (_79018 : int) : (term483 _79017 _79018) = (term546 _79017 _79018).
Proof. exact (MK_COMB (@lem6201534 _79017 _79018) (@lem6201532 _79017 _79018)). Qed.
Lemma lem6201536 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6201537 (_79017 : int) (_79018 : int) : (term484 _79018 _79017) = (term547 _79017 _79018).
Proof. exact (MK_COMB (@lem6201536) (@lem6201427 _79017 _79018)). Qed.
Lemma lem6201538 (_79017 : int) (_79018 : int) : (term485 _79017 _79018) = (term548 _79017 _79018).
Proof. exact (MK_COMB (@lem6201537 _79017 _79018) (@lem6201535 _79017 _79018)). Qed.
Lemma lem6201539 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6201540 (_79018 : int) : (term111 _79018) = (term271 _79018).
Proof. exact (MK_COMB (@lem6201539) (@lem6200990 _79018)). Qed.
Lemma lem6201541 (_79017 : int) (_79018 : int) : (term486 _79017 _79018) = (term549 _79017 _79018).
Proof. exact (MK_COMB (@lem6201540 _79018) (@lem6201538 _79017 _79018)). Qed.
Lemma lem6201542 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6201543 (_79017 : int) : (term111 _79017) = (term271 _79017).
Proof. exact (MK_COMB (@lem6201542) (@lem6200942 _79017)). Qed.
Lemma lem6201544 (_79017 : int) (_79018 : int) : (term487 _79017 _79018) = (term550 _79017 _79018).
Proof. exact (MK_COMB (@lem6201543 _79017) (@lem6201541 _79017 _79018)). Qed.
Lemma lem6201551 (_79017 : int) (_79018 : int) : (term488 _79017 _79018) = (term550 _79017 _79018).
Proof. exact (TRANS (@lem6200894 _79017 _79018) (@lem6201544 _79017 _79018)). Qed.
Lemma lem6201565 (_79017 : int) (_79018 : int) : (term548 _79017 _79018) = (term551 _79017 _79018).
Proof. exact (@lem19158 (term536 _79017 _79018) (term528 _79017 _79018) (term544 _79017 _79018)). Qed.
Lemma lem6201572 (_79017 : int) (_79018 : int) : (term552 _79017 _79018) = (term553 _79017 _79018).
Proof. exact (@lem19367 (term497 _79017 _79018) (term526 _79017 _79018) (term544 _79017 _79018)). Qed.
Lemma lem6201579 (_79017 : int) (_79018 : int) : (term554 _79017 _79018) = (term555 _79017 _79018).
Proof. exact (@lem19367 (term497 _79017 _79018) (term526 _79017 _79018) (term536 _79017 _79018)). Qed.
Lemma lem6201580 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6201581 (_79017 : int) (_79018 : int) : (term556 _79017 _79018) = (term557 _79017 _79018).
Proof. exact (MK_COMB (@lem6201580) (@lem6201579 _79017 _79018)). Qed.
Lemma lem6201582 (_79017 : int) (_79018 : int) : (term551 _79017 _79018) = (term558 _79017 _79018).
Proof. exact (MK_COMB (@lem6201581 _79017 _79018) (@lem6201572 _79017 _79018)). Qed.
Lemma lem6201584 (_79017 : int) (_79018 : int) : (term548 _79017 _79018) = (term558 _79017 _79018).
Proof. exact (TRANS (@lem6201565 _79017 _79018) (@lem6201582 _79017 _79018)). Qed.
Lemma lem6201587 (_79018 : int) : (term271 _79018) = (term271 _79018).
Proof. exact (eq_refl (term271 _79018)). Qed.
Lemma lem6201588 (_79017 : int) (_79018 : int) : (term549 _79017 _79018) = (term559 _79017 _79018).
Proof. exact (MK_COMB (@lem6201587 _79018) (@lem6201584 _79017 _79018)). Qed.
Lemma lem6201589 (_79017 : int) (_79018 : int) : (term559 _79017 _79018) = (term560 _79017 _79018).
Proof. exact (@lem19158 (term555 _79017 _79018) (term144 _79018) (term553 _79017 _79018)). Qed.
Lemma lem6201596 (_79017 : int) (_79018 : int) : (term561 _79017 _79018) = (term562 _79017 _79018).
Proof. exact (@lem19158 (term563 _79017 _79018) (term144 _79018) (term564 _79017 _79018)). Qed.
Lemma lem6201603 (_79017 : int) (_79018 : int) : (term565 _79017 _79018) = (term566 _79017 _79018).
Proof. exact (@lem19158 (term567 _79017 _79018) (term144 _79018) (term568 _79017 _79018)). Qed.
Lemma lem6201604 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6201605 (_79017 : int) (_79018 : int) : (term569 _79017 _79018) = (term570 _79017 _79018).
Proof. exact (MK_COMB (@lem6201604) (@lem6201603 _79017 _79018)). Qed.
Lemma lem6201606 (_79017 : int) (_79018 : int) : (term560 _79017 _79018) = (term571 _79017 _79018).
Proof. exact (MK_COMB (@lem6201605 _79017 _79018) (@lem6201596 _79017 _79018)). Qed.
Lemma lem6201607 (_79017 : int) (_79018 : int) : (term559 _79017 _79018) = (term571 _79017 _79018).
Proof. exact (TRANS (@lem6201589 _79017 _79018) (@lem6201606 _79017 _79018)). Qed.
Lemma lem6201608 (_79017 : int) (_79018 : int) : (term549 _79017 _79018) = (term571 _79017 _79018).
Proof. exact (TRANS (@lem6201588 _79017 _79018) (@lem6201607 _79017 _79018)). Qed.
Lemma lem6201611 (_79017 : int) : (term271 _79017) = (term271 _79017).
Proof. exact (eq_refl (term271 _79017)). Qed.
Lemma lem6201612 (_79017 : int) (_79018 : int) : (term550 _79017 _79018) = (term572 _79017 _79018).
Proof. exact (MK_COMB (@lem6201611 _79017) (@lem6201608 _79017 _79018)). Qed.
Lemma lem6201613 (_79017 : int) (_79018 : int) : (term572 _79017 _79018) = (term573 _79017 _79018).
Proof. exact (@lem19158 (term566 _79017 _79018) (term144 _79017) (term562 _79017 _79018)). Qed.
Lemma lem6201620 (_79017 : int) (_79018 : int) : (term574 _79017 _79018) = (term575 _79017 _79018).
Proof. exact (@lem19158 (term576 _79017 _79018) (term144 _79017) (term577 _79017 _79018)). Qed.
Lemma lem6201627 (_79017 : int) (_79018 : int) : (term578 _79017 _79018) = (term579 _79017 _79018).
Proof. exact (@lem19158 (term580 _79017 _79018) (term144 _79017) (term581 _79017 _79018)). Qed.
Lemma lem6201628 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6201629 (_79017 : int) (_79018 : int) : (term582 _79017 _79018) = (term583 _79017 _79018).
Proof. exact (MK_COMB (@lem6201628) (@lem6201627 _79017 _79018)). Qed.
Lemma lem6201630 (_79017 : int) (_79018 : int) : (term573 _79017 _79018) = (term584 _79017 _79018).
Proof. exact (MK_COMB (@lem6201629 _79017 _79018) (@lem6201620 _79017 _79018)). Qed.
Lemma lem6201631 (_79017 : int) (_79018 : int) : (term572 _79017 _79018) = (term584 _79017 _79018).
Proof. exact (TRANS (@lem6201613 _79017 _79018) (@lem6201630 _79017 _79018)). Qed.
Lemma lem6201632 (_79017 : int) (_79018 : int) : (term550 _79017 _79018) = (term584 _79017 _79018).
Proof. exact (TRANS (@lem6201612 _79017 _79018) (@lem6201631 _79017 _79018)). Qed.
Lemma lem6201633 (_79017 : int) (_79018 : int) : (term488 _79017 _79018) = (term584 _79017 _79018).
Proof. exact (TRANS (@lem6201551 _79017 _79018) (@lem6201632 _79017 _79018)). Qed.
Lemma lem6201655 (_79017 : int) (_79018 : int) (h1 : term584 _79017 _79018) : term584 _79017 _79018.
Proof. exact (h1). Qed.
Lemma lem6201656 (_79017 : int) (_79018 : int) (h1 : term579 _79017 _79018) : term579 _79017 _79018.
Proof. exact (h1). Qed.
Lemma lem6201657 (_79017 : int) (_79018 : int) (h1 : term585 _79017 _79018) : term585 _79017 _79018.
Proof. exact (h1). Qed.
Lemma lem6201658 (_79017 : int) (_79018 : int) (h1 : term585 _79017 _79018) : term580 _79017 _79018.
Proof. exact (proj2 (@lem6201657 _79017 _79018 h1)). Qed.
Lemma lem6201660 (_79017 : int) (_79018 : int) (h1 : term585 _79017 _79018) : term567 _79017 _79018.
Proof. exact (proj2 (@lem6201658 _79017 _79018 h1)). Qed.
Lemma lem6201662 (_79017 : int) (_79018 : int) (h1 : term585 _79017 _79018) : term536 _79017 _79018.
Proof. exact (proj2 (@lem6201660 _79017 _79018 h1)). Qed.
Lemma lem6201663 (_79017 : int) (_79018 : int) (h1 : term585 _79017 _79018) : term497 _79017 _79018.
Proof. exact (proj1 (@lem6201660 _79017 _79018 h1)). Qed.
Lemma lem6201665 (y : real) (x : real) : (real_gt x y) = (real_lt y x).
Proof. exact (EQ_MP (@lem1980266 y x) (@lem1980265 y x)). Qed.
Lemma lem6201666 : term586 = term587.
Proof. exact (@lem6201665 term65 term90). Qed.
Lemma lem6201668 (x : nat) : (real_of_num x) = (term119 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6201669 : term90 = term204.
Proof. exact (@lem6201668 term22). Qed.
Lemma lem6201671 (x : nat) : (real_of_num x) = (term119 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6201672 : term65 = term120.
Proof. exact (@lem6201671 (NUMERAL 0)). Qed.
Lemma lem6201673 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem6201674 : term588 = term589.
Proof. exact (MK_COMB (@lem6201673) (@lem6201672)). Qed.
Lemma lem6201675 : term587 = term590.
Proof. exact (MK_COMB (@lem6201674) (@lem6201669)). Qed.
Lemma lem6201676 : term591.
Proof. exact (@lem1980255 term65 term102 term90 term102). Qed.
Lemma lem6201678 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6201679 : term156 = term157.
Proof. exact (@lem6201678 (NUMERAL 0) term6). Qed.
Lemma lem6201680 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6201681 (h1 : term158 = (BIT1 0)) : term157 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6201682 : (term158 = (BIT1 0)) = (term157 = True).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6201681 h1) (fun h1 : term157 = True => @lem6201680)). Qed.
Lemma lem6201683 : term157 = True.
Proof. exact (EQ_MP (@lem6201682) (@lem6201680)). Qed.
Lemma lem6201684 : term156 = True.
Proof. exact (TRANS (@lem6201679) (@lem6201683)). Qed.
Lemma lem6201685 : True = term156.
Proof. exact (SYM (@lem6201684)). Qed.
Lemma lem6201686 : term156.
Proof. exact (EQ_MP (@lem6201685) (@lem0)). Qed.
Lemma lem6201687 : term592.
Proof. exact (@lem6201676 (@lem6201686)). Qed.
Lemma lem6201689 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6201690 : term156 = term157.
Proof. exact (@lem6201689 (NUMERAL 0) term6). Qed.
Lemma lem6201691 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6201692 (h1 : term158 = (BIT1 0)) : term157 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6201693 : (term158 = (BIT1 0)) = (term157 = True).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6201692 h1) (fun h1 : term157 = True => @lem6201691)). Qed.
Lemma lem6201694 : term157 = True.
Proof. exact (EQ_MP (@lem6201693) (@lem6201691)). Qed.
Lemma lem6201695 : term156 = True.
Proof. exact (TRANS (@lem6201690) (@lem6201694)). Qed.
Lemma lem6201696 : True = term156.
Proof. exact (SYM (@lem6201695)). Qed.
Lemma lem6201697 : term156.
Proof. exact (EQ_MP (@lem6201696) (@lem0)). Qed.
Lemma lem6201698 : term590 = term593.
Proof. exact (@lem6201687 (@lem6201697)). Qed.
Lemma lem6201700 (m : nat) (n : nat) : (term130 m n) = (term131 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6201701 : term237 = term236.
Proof. exact (@lem6201700 term22 term6). Qed.
Lemma lem6201702 : term35 = term20.
Proof. exact (@lem996237 term20). Qed.
Lemma lem6201703 : (term35 = term20) = (term36 = term22).
Proof. exact (@lem1007663 term20 (BIT1 0) term20). Qed.
Lemma lem6201704 : term36 = term22.
Proof. exact (EQ_MP (@lem6201703) (@lem6201702)). Qed.
Lemma lem6201705 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6201706 : term236 = term90.
Proof. exact (MK_COMB (@lem6201705) (@lem6201704)). Qed.
Lemma lem6201707 : term237 = term90.
Proof. exact (TRANS (@lem6201701) (@lem6201706)). Qed.
Lemma lem6201709 (x : nat) : (term245 x) = term65.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem6201710 : term244 = term65.
Proof. exact (@lem6201709 term6). Qed.
Lemma lem6201711 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem6201712 : term594 = term588.
Proof. exact (MK_COMB (@lem6201711) (@lem6201710)). Qed.
Lemma lem6201713 : term593 = term587.
Proof. exact (MK_COMB (@lem6201712) (@lem6201707)). Qed.
Lemma lem6201715 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6201716 : term587 = term595.
Proof. exact (@lem6201715 (NUMERAL 0) term22). Qed.
Lemma lem6201717 : term596 = term20.
Proof. exact (@lem912803). Qed.
Lemma lem6201718 (h1 : term596 = term20) : term595 = True.
Proof. exact (@lem1009824 (BIT1 0) 0 term20 h1). Qed.
Lemma lem6201719 : (term596 = term20) = (term595 = True).
Proof. exact (prop_ext (fun h1 : term596 = term20 => @lem6201718 h1) (fun h1 : term595 = True => @lem6201717)). Qed.
Lemma lem6201720 : term595 = True.
Proof. exact (EQ_MP (@lem6201719) (@lem6201717)). Qed.
Lemma lem6201721 : term587 = True.
Proof. exact (TRANS (@lem6201716) (@lem6201720)). Qed.
Lemma lem6201722 : term593 = True.
Proof. exact (TRANS (@lem6201713) (@lem6201721)). Qed.
Lemma lem6201723 : term590 = True.
Proof. exact (TRANS (@lem6201698) (@lem6201722)). Qed.
Lemma lem6201724 : term587 = True.
Proof. exact (TRANS (@lem6201675) (@lem6201723)). Qed.
Lemma lem6201725 : term586 = True.
Proof. exact (TRANS (@lem6201666) (@lem6201724)). Qed.
Lemma lem6201726 : True = term586.
Proof. exact (SYM (@lem6201725)). Qed.
Lemma lem6201727 : term586.
Proof. exact (EQ_MP (@lem6201726) (@lem0)). Qed.
Lemma lem6201728 (_79017 : int) (_79018 : int) (h1 : term585 _79017 _79018) : term597 _79017 _79018.
Proof. exact (conj (@lem6201727) (@lem6201663 _79017 _79018 h1)). Qed.
Lemma lem6201730 (x : real) (y : real) : term598 x y.
Proof. exact (proj1 (@lem1988332 x y)). Qed.
Lemma lem6201731 (_79017 : int) (_79018 : int) : term599 _79017 _79018.
Proof. exact (@lem6201730 term90 (term494 _79017 _79018)). Qed.
Lemma lem6201732 (_79017 : int) (_79018 : int) (h1 : term585 _79017 _79018) : term600 _79017 _79018.
Proof. exact (@lem6201731 _79017 _79018 (@lem6201728 _79017 _79018 h1)). Qed.
Lemma lem6201733 (_79017 : int) (_79018 : int) : (term601 _79017 _79018) = (term602 _79017 _79018).
Proof. exact (@lem1982781 (term93 _79017) term90 (term354 _79018)). Qed.
Lemma lem6201734 (_79018 : int) : (term603 _79018) = (term604 _79018).
Proof. exact (@lem1982781 (term218 _79018) term90 term350). Qed.
Lemma lem6201736 (x : nat) : (term121 x) = (term122 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem6201737 : term350 = term353.
Proof. exact (@lem6201736 term32). Qed.
Lemma lem6201739 (x : nat) : (real_of_num x) = (term119 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6201740 : term90 = term204.
Proof. exact (@lem6201739 term22). Qed.
Lemma lem6201741 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem6201742 : term92 = term605.
Proof. exact (MK_COMB (@lem6201741) (@lem6201740)). Qed.
Lemma lem6201743 : term606 = term607.
Proof. exact (MK_COMB (@lem6201742) (@lem6201737)). Qed.
Lemma lem6201744 : term607 = term608.
Proof. exact (@lem1981613 term90 term350 term102 term102). Qed.
Lemma lem6201746 (m : nat) (n : nat) : (term130 m n) = (term131 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6201747 : term132 = term133.
Proof. exact (@lem6201746 term6 term6). Qed.
Lemma lem6201748 : (term134 = (BIT1 0)) = (term135 = term6).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6201749 : term135 = term6.
Proof. exact (EQ_MP (@lem6201748) (@lem940073)). Qed.
Lemma lem6201750 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6201751 : term133 = term102.
Proof. exact (MK_COMB (@lem6201750) (@lem6201749)). Qed.
Lemma lem6201752 : term132 = term102.
Proof. exact (TRANS (@lem6201747) (@lem6201751)). Qed.
Lemma lem6201754 (m : nat) (n : nat) : (term609 m n) = (term193 m n).
Proof. exact (proj2 (@lem1367247 m n)). Qed.
Lemma lem6201755 : term606 = term610.
Proof. exact (@lem6201754 term22 term32). Qed.
Lemma lem6201756 : term347 = term30.
Proof. exact (@lem996238 term30). Qed.
Lemma lem6201757 : (term347 = term30) = (term611 = term612).
Proof. exact (@lem996664 (BIT1 0) term30 term30). Qed.
Lemma lem6201758 : term611 = term612.
Proof. exact (EQ_MP (@lem6201757) (@lem6201756)). Qed.
Lemma lem6201759 : (term611 = term612) = (term613 = term614).
Proof. exact (@lem1007663 term20 term30 term612). Qed.
Lemma lem6201760 : term613 = term614.
Proof. exact (EQ_MP (@lem6201759) (@lem6201758)). Qed.
Lemma lem6201761 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6201762 : term615 = term616.
Proof. exact (MK_COMB (@lem6201761) (@lem6201760)). Qed.
Lemma lem6201763 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem6201764 : term610 = term617.
Proof. exact (MK_COMB (@lem6201763) (@lem6201762)). Qed.
Lemma lem6201765 : term606 = term617.
Proof. exact (TRANS (@lem6201755) (@lem6201764)). Qed.
Lemma lem6201766 : real_div = real_div.
Proof. exact (eq_refl real_div). Qed.
Lemma lem6201767 : term618 = term619.
Proof. exact (MK_COMB (@lem6201766) (@lem6201765)). Qed.
Lemma lem6201768 : term608 = term620.
Proof. exact (MK_COMB (@lem6201767) (@lem6201752)). Qed.
Lemma lem6201769 : term607 = term620.
Proof. exact (TRANS (@lem6201744) (@lem6201768)). Qed.
Lemma lem6201770 : term606 = term620.
Proof. exact (TRANS (@lem6201743) (@lem6201769)). Qed.
Lemma lem6201772 (x : real) : (term139 x) = x.
Proof. exact (EQ_MP (@lem1982628 x) (@lem1982627 x)). Qed.
Lemma lem6201773 : term620 = term617.
Proof. exact (@lem6201772 term617). Qed.
Lemma lem6201774 : term606 = term617.
Proof. exact (TRANS (@lem6201770) (@lem6201773)). Qed.
Lemma lem6201775 (_79018 : int) : (term621 _79018) = (term622 _79018).
Proof. exact (@lem1982749 term90 term212 (real_of_int _79018)). Qed.
Lemma lem6201777 (x : nat) : (term121 x) = (term122 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem6201778 : term212 = term215.
Proof. exact (@lem6201777 term22). Qed.
Lemma lem6201780 (x : nat) : (real_of_num x) = (term119 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6201781 : term90 = term204.
Proof. exact (@lem6201780 term22). Qed.
Lemma lem6201782 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem6201783 : term92 = term605.
Proof. exact (MK_COMB (@lem6201782) (@lem6201781)). Qed.
Lemma lem6201784 : term623 = term624.
Proof. exact (MK_COMB (@lem6201783) (@lem6201778)). Qed.
Lemma lem6201785 : term624 = term625.
Proof. exact (@lem1981613 term90 term212 term102 term102). Qed.
Lemma lem6201787 (m : nat) (n : nat) : (term130 m n) = (term131 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6201788 : term132 = term133.
Proof. exact (@lem6201787 term6 term6). Qed.
Lemma lem6201789 : (term134 = (BIT1 0)) = (term135 = term6).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6201790 : term135 = term6.
Proof. exact (EQ_MP (@lem6201789) (@lem940073)). Qed.
Lemma lem6201791 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6201792 : term133 = term102.
Proof. exact (MK_COMB (@lem6201791) (@lem6201790)). Qed.
Lemma lem6201793 : term132 = term102.
Proof. exact (TRANS (@lem6201788) (@lem6201792)). Qed.
Lemma lem6201795 (m : nat) (n : nat) : (term609 m n) = (term193 m n).
Proof. exact (proj2 (@lem1367247 m n)). Qed.
Lemma lem6201796 : term623 = term626.
Proof. exact (@lem6201795 term22 term22). Qed.
Lemma lem6201797 : (term134 = (BIT1 0)) = (term627 = term170).
Proof. exact (@lem940532 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6201798 : term627 = term170.
Proof. exact (EQ_MP (@lem6201797) (@lem940073)). Qed.
Lemma lem6201799 : (term627 = term170) = (term628 = term172).
Proof. exact (@lem1008952 term20 term170). Qed.
Lemma lem6201800 : term628 = term172.
Proof. exact (EQ_MP (@lem6201799) (@lem6201798)). Qed.
Lemma lem6201801 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6201802 : term629 = term154.
Proof. exact (MK_COMB (@lem6201801) (@lem6201800)). Qed.
Lemma lem6201803 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem6201804 : term626 = term198.
Proof. exact (MK_COMB (@lem6201803) (@lem6201802)). Qed.
Lemma lem6201805 : term623 = term198.
Proof. exact (TRANS (@lem6201796) (@lem6201804)). Qed.
Lemma lem6201806 : real_div = real_div.
Proof. exact (eq_refl real_div). Qed.
Lemma lem6201807 : term630 = term200.
Proof. exact (MK_COMB (@lem6201806) (@lem6201805)). Qed.
Lemma lem6201808 : term625 = term201.
Proof. exact (MK_COMB (@lem6201807) (@lem6201793)). Qed.
Lemma lem6201809 : term624 = term201.
Proof. exact (TRANS (@lem6201785) (@lem6201808)). Qed.
Lemma lem6201810 : term623 = term201.
Proof. exact (TRANS (@lem6201784) (@lem6201809)). Qed.
Lemma lem6201812 (x : real) : (term139 x) = x.
Proof. exact (EQ_MP (@lem1982628 x) (@lem1982627 x)). Qed.
Lemma lem6201813 : term201 = term198.
Proof. exact (@lem6201812 term198). Qed.
Lemma lem6201814 : term623 = term198.
Proof. exact (TRANS (@lem6201810) (@lem6201813)). Qed.
Lemma lem6201815 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem6201816 : term631 = term632.
Proof. exact (MK_COMB (@lem6201815) (@lem6201814)). Qed.
Lemma lem6201817 (_79018 : int) : (real_of_int _79018) = (real_of_int _79018).
Proof. exact (eq_refl (real_of_int _79018)). Qed.
Lemma lem6201818 (_79018 : int) : (term622 _79018) = (term633 _79018).
Proof. exact (MK_COMB (@lem6201816) (@lem6201817 _79018)). Qed.
Lemma lem6201819 (_79018 : int) : (term621 _79018) = (term633 _79018).
Proof. exact (TRANS (@lem6201775 _79018) (@lem6201818 _79018)). Qed.
Lemma lem6201820 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem6201821 (_79018 : int) : (term634 _79018) = (term635 _79018).
Proof. exact (MK_COMB (@lem6201820) (@lem6201819 _79018)). Qed.
Lemma lem6201822 (_79018 : int) : (term604 _79018) = (term636 _79018).
Proof. exact (MK_COMB (@lem6201821 _79018) (@lem6201774)). Qed.
Lemma lem6201823 (_79018 : int) : (term603 _79018) = (term636 _79018).
Proof. exact (TRANS (@lem6201734 _79018) (@lem6201822 _79018)). Qed.
Lemma lem6201824 (_79017 : int) : (term637 _79017) = (term638 _79017).
Proof. exact (@lem1982749 term90 term90 (real_of_int _79017)). Qed.
Lemma lem6201826 (x : nat) : (real_of_num x) = (term119 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6201827 : term90 = term204.
Proof. exact (@lem6201826 term22). Qed.
Lemma lem6201829 (x : nat) : (real_of_num x) = (term119 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6201830 : term90 = term204.
Proof. exact (@lem6201829 term22). Qed.
Lemma lem6201831 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem6201832 : term92 = term605.
Proof. exact (MK_COMB (@lem6201831) (@lem6201830)). Qed.
Lemma lem6201833 : term639 = term640.
Proof. exact (MK_COMB (@lem6201832) (@lem6201827)). Qed.
Lemma lem6201834 : term640 = term641.
Proof. exact (@lem1981613 term90 term90 term102 term102). Qed.
Lemma lem6201836 (m : nat) (n : nat) : (term130 m n) = (term131 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6201837 : term132 = term133.
Proof. exact (@lem6201836 term6 term6). Qed.
Lemma lem6201838 : (term134 = (BIT1 0)) = (term135 = term6).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6201839 : term135 = term6.
Proof. exact (EQ_MP (@lem6201838) (@lem940073)). Qed.
Lemma lem6201840 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6201841 : term133 = term102.
Proof. exact (MK_COMB (@lem6201840) (@lem6201839)). Qed.
Lemma lem6201842 : term132 = term102.
Proof. exact (TRANS (@lem6201837) (@lem6201841)). Qed.
Lemma lem6201844 (m : nat) (n : nat) : (term130 m n) = (term131 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6201845 : term639 = term629.
Proof. exact (@lem6201844 term22 term22). Qed.
Lemma lem6201846 : (term134 = (BIT1 0)) = (term627 = term170).
Proof. exact (@lem940532 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6201847 : term627 = term170.
Proof. exact (EQ_MP (@lem6201846) (@lem940073)). Qed.
Lemma lem6201848 : (term627 = term170) = (term628 = term172).
Proof. exact (@lem1008952 term20 term170). Qed.
Lemma lem6201849 : term628 = term172.
Proof. exact (EQ_MP (@lem6201848) (@lem6201847)). Qed.
Lemma lem6201850 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6201851 : term629 = term154.
Proof. exact (MK_COMB (@lem6201850) (@lem6201849)). Qed.
Lemma lem6201852 : term639 = term154.
Proof. exact (TRANS (@lem6201845) (@lem6201851)). Qed.
Lemma lem6201853 : real_div = real_div.
Proof. exact (eq_refl real_div). Qed.
Lemma lem6201854 : term642 = term643.
Proof. exact (MK_COMB (@lem6201853) (@lem6201852)). Qed.
Lemma lem6201855 : term641 = term181.
Proof. exact (MK_COMB (@lem6201854) (@lem6201842)). Qed.
Lemma lem6201856 : term640 = term181.
Proof. exact (TRANS (@lem6201834) (@lem6201855)). Qed.
Lemma lem6201857 : term639 = term181.
Proof. exact (TRANS (@lem6201833) (@lem6201856)). Qed.
Lemma lem6201859 (x : real) : (term139 x) = x.
Proof. exact (EQ_MP (@lem1982628 x) (@lem1982627 x)). Qed.
Lemma lem6201860 : term181 = term154.
Proof. exact (@lem6201859 term154). Qed.
Lemma lem6201861 : term639 = term154.
Proof. exact (TRANS (@lem6201857) (@lem6201860)). Qed.
Lemma lem6201862 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem6201863 : term644 = term174.
Proof. exact (MK_COMB (@lem6201862) (@lem6201861)). Qed.
Lemma lem6201864 (_79017 : int) : (real_of_int _79017) = (real_of_int _79017).
Proof. exact (eq_refl (real_of_int _79017)). Qed.
Lemma lem6201865 (_79017 : int) : (term638 _79017) = (term645 _79017).
Proof. exact (MK_COMB (@lem6201863) (@lem6201864 _79017)). Qed.
Lemma lem6201866 (_79017 : int) : (term637 _79017) = (term645 _79017).
Proof. exact (TRANS (@lem6201824 _79017) (@lem6201865 _79017)). Qed.
Lemma lem6201867 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem6201868 (_79017 : int) : (term646 _79017) = (term647 _79017).
Proof. exact (MK_COMB (@lem6201867) (@lem6201866 _79017)). Qed.
Lemma lem6201869 (_79017 : int) (_79018 : int) : (term602 _79017 _79018) = (term648 _79017 _79018).
Proof. exact (MK_COMB (@lem6201868 _79017) (@lem6201823 _79018)). Qed.
Lemma lem6201870 (_79017 : int) (_79018 : int) : (term601 _79017 _79018) = (term648 _79017 _79018).
Proof. exact (TRANS (@lem6201733 _79017 _79018) (@lem6201869 _79017 _79018)). Qed.
Lemma lem6201871 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem6201872 (_79017 : int) (_79018 : int) : (term649 _79017 _79018) = (term650 _79017 _79018).
Proof. exact (MK_COMB (@lem6201871) (@lem6201870 _79017 _79018)). Qed.
Lemma lem6201873 : term65 = term65.
Proof. exact (eq_refl term65). Qed.
Lemma lem6201874 (_79017 : int) (_79018 : int) : (term600 _79017 _79018) = (term651 _79017 _79018).
Proof. exact (MK_COMB (@lem6201872 _79017 _79018) (@lem6201873)). Qed.
Lemma lem6201875 (_79017 : int) (_79018 : int) (h1 : term585 _79017 _79018) : term651 _79017 _79018.
Proof. exact (EQ_MP (@lem6201874 _79017 _79018) (@lem6201732 _79017 _79018 h1)). Qed.
Lemma lem6201877 (y : real) (x : real) : (real_gt x y) = (real_lt y x).
Proof. exact (EQ_MP (@lem1980266 y x) (@lem1980265 y x)). Qed.
Lemma lem6201878 : term586 = term587.
Proof. exact (@lem6201877 term65 term90). Qed.
Lemma lem6201880 (x : nat) : (real_of_num x) = (term119 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6201881 : term90 = term204.
Proof. exact (@lem6201880 term22). Qed.
Lemma lem6201883 (x : nat) : (real_of_num x) = (term119 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6201884 : term65 = term120.
Proof. exact (@lem6201883 (NUMERAL 0)). Qed.
Lemma lem6201885 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem6201886 : term588 = term589.
Proof. exact (MK_COMB (@lem6201885) (@lem6201884)). Qed.
Lemma lem6201887 : term587 = term590.
Proof. exact (MK_COMB (@lem6201886) (@lem6201881)). Qed.
Lemma lem6201888 : term591.
Proof. exact (@lem1980255 term65 term102 term90 term102). Qed.
Lemma lem6201890 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6201891 : term156 = term157.
Proof. exact (@lem6201890 (NUMERAL 0) term6). Qed.
Lemma lem6201892 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6201893 (h1 : term158 = (BIT1 0)) : term157 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6201894 : (term158 = (BIT1 0)) = (term157 = True).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6201893 h1) (fun h1 : term157 = True => @lem6201892)). Qed.
Lemma lem6201895 : term157 = True.
Proof. exact (EQ_MP (@lem6201894) (@lem6201892)). Qed.
Lemma lem6201896 : term156 = True.
Proof. exact (TRANS (@lem6201891) (@lem6201895)). Qed.
Lemma lem6201897 : True = term156.
Proof. exact (SYM (@lem6201896)). Qed.
Lemma lem6201898 : term156.
Proof. exact (EQ_MP (@lem6201897) (@lem0)). Qed.
Lemma lem6201899 : term592.
Proof. exact (@lem6201888 (@lem6201898)). Qed.
Lemma lem6201901 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6201902 : term156 = term157.
Proof. exact (@lem6201901 (NUMERAL 0) term6). Qed.
Lemma lem6201903 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6201904 (h1 : term158 = (BIT1 0)) : term157 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6201905 : (term158 = (BIT1 0)) = (term157 = True).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6201904 h1) (fun h1 : term157 = True => @lem6201903)). Qed.
Lemma lem6201906 : term157 = True.
Proof. exact (EQ_MP (@lem6201905) (@lem6201903)). Qed.
Lemma lem6201907 : term156 = True.
Proof. exact (TRANS (@lem6201902) (@lem6201906)). Qed.
Lemma lem6201908 : True = term156.
Proof. exact (SYM (@lem6201907)). Qed.
Lemma lem6201909 : term156.
Proof. exact (EQ_MP (@lem6201908) (@lem0)). Qed.
Lemma lem6201910 : term590 = term593.
Proof. exact (@lem6201899 (@lem6201909)). Qed.
Lemma lem6201912 (m : nat) (n : nat) : (term130 m n) = (term131 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6201913 : term237 = term236.
Proof. exact (@lem6201912 term22 term6). Qed.
Lemma lem6201914 : term35 = term20.
Proof. exact (@lem996237 term20). Qed.
Lemma lem6201915 : (term35 = term20) = (term36 = term22).
Proof. exact (@lem1007663 term20 (BIT1 0) term20). Qed.
Lemma lem6201916 : term36 = term22.
Proof. exact (EQ_MP (@lem6201915) (@lem6201914)). Qed.
Lemma lem6201917 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6201918 : term236 = term90.
Proof. exact (MK_COMB (@lem6201917) (@lem6201916)). Qed.
Lemma lem6201919 : term237 = term90.
Proof. exact (TRANS (@lem6201913) (@lem6201918)). Qed.
Lemma lem6201921 (x : nat) : (term245 x) = term65.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem6201922 : term244 = term65.
Proof. exact (@lem6201921 term6). Qed.
Lemma lem6201923 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem6201924 : term594 = term588.
Proof. exact (MK_COMB (@lem6201923) (@lem6201922)). Qed.
Lemma lem6201925 : term593 = term587.
Proof. exact (MK_COMB (@lem6201924) (@lem6201919)). Qed.
Lemma lem6201927 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6201928 : term587 = term595.
Proof. exact (@lem6201927 (NUMERAL 0) term22). Qed.
Lemma lem6201929 : term596 = term20.
Proof. exact (@lem912803). Qed.
Lemma lem6201930 (h1 : term596 = term20) : term595 = True.
Proof. exact (@lem1009824 (BIT1 0) 0 term20 h1). Qed.
Lemma lem6201931 : (term596 = term20) = (term595 = True).
Proof. exact (prop_ext (fun h1 : term596 = term20 => @lem6201930 h1) (fun h1 : term595 = True => @lem6201929)). Qed.
Lemma lem6201932 : term595 = True.
Proof. exact (EQ_MP (@lem6201931) (@lem6201929)). Qed.
Lemma lem6201933 : term587 = True.
Proof. exact (TRANS (@lem6201928) (@lem6201932)). Qed.
Lemma lem6201934 : term593 = True.
Proof. exact (TRANS (@lem6201925) (@lem6201933)). Qed.
Lemma lem6201935 : term590 = True.
Proof. exact (TRANS (@lem6201910) (@lem6201934)). Qed.
Lemma lem6201936 : term587 = True.
Proof. exact (TRANS (@lem6201887) (@lem6201935)). Qed.
Lemma lem6201937 : term586 = True.
Proof. exact (TRANS (@lem6201878) (@lem6201936)). Qed.
Lemma lem6201938 : True = term586.
Proof. exact (SYM (@lem6201937)). Qed.
Lemma lem6201939 : term586.
Proof. exact (EQ_MP (@lem6201938) (@lem0)). Qed.
Lemma lem6201940 (_79017 : int) (_79018 : int) (h1 : term585 _79017 _79018) : term652 _79017 _79018.
Proof. exact (conj (@lem6201939) (@lem6201662 _79017 _79018 h1)). Qed.
Lemma lem6201942 (x : real) (y : real) : term598 x y.
Proof. exact (proj1 (@lem1988332 x y)). Qed.
Lemma lem6201943 (_79017 : int) (_79018 : int) : term653 _79017 _79018.
Proof. exact (@lem6201942 term90 (term533 _79017 _79018)). Qed.
Lemma lem6201944 (_79017 : int) (_79018 : int) (h1 : term585 _79017 _79018) : term654 _79017 _79018.
Proof. exact (@lem6201943 _79017 _79018 (@lem6201940 _79017 _79018 h1)). Qed.
Lemma lem6201945 (_79017 : int) (_79018 : int) : (term655 _79017 _79018) = (term656 _79017 _79018).
Proof. exact (@lem1982781 (term218 _79017) term90 (term310 _79018)). Qed.
Lemma lem6201946 (_79018 : int) : (term657 _79018) = (term658 _79018).
Proof. exact (@lem1982781 (term93 _79018) term90 term90). Qed.
Lemma lem6201948 (x : nat) : (real_of_num x) = (term119 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6201949 : term90 = term204.
Proof. exact (@lem6201948 term22). Qed.
Lemma lem6201951 (x : nat) : (real_of_num x) = (term119 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6201952 : term90 = term204.
Proof. exact (@lem6201951 term22). Qed.
Lemma lem6201953 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem6201954 : term92 = term605.
Proof. exact (MK_COMB (@lem6201953) (@lem6201952)). Qed.
Lemma lem6201955 : term639 = term640.
Proof. exact (MK_COMB (@lem6201954) (@lem6201949)). Qed.
Lemma lem6201956 : term640 = term641.
Proof. exact (@lem1981613 term90 term90 term102 term102). Qed.
Lemma lem6201958 (m : nat) (n : nat) : (term130 m n) = (term131 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6201959 : term132 = term133.
Proof. exact (@lem6201958 term6 term6). Qed.
Lemma lem6201960 : (term134 = (BIT1 0)) = (term135 = term6).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6201961 : term135 = term6.
Proof. exact (EQ_MP (@lem6201960) (@lem940073)). Qed.
Lemma lem6201962 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6201963 : term133 = term102.
Proof. exact (MK_COMB (@lem6201962) (@lem6201961)). Qed.
Lemma lem6201964 : term132 = term102.
Proof. exact (TRANS (@lem6201959) (@lem6201963)). Qed.
Lemma lem6201966 (m : nat) (n : nat) : (term130 m n) = (term131 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6201967 : term639 = term629.
Proof. exact (@lem6201966 term22 term22). Qed.
Lemma lem6201968 : (term134 = (BIT1 0)) = (term627 = term170).
Proof. exact (@lem940532 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6201969 : term627 = term170.
Proof. exact (EQ_MP (@lem6201968) (@lem940073)). Qed.
Lemma lem6201970 : (term627 = term170) = (term628 = term172).
Proof. exact (@lem1008952 term20 term170). Qed.
Lemma lem6201971 : term628 = term172.
Proof. exact (EQ_MP (@lem6201970) (@lem6201969)). Qed.
Lemma lem6201972 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6201973 : term629 = term154.
Proof. exact (MK_COMB (@lem6201972) (@lem6201971)). Qed.
Lemma lem6201974 : term639 = term154.
Proof. exact (TRANS (@lem6201967) (@lem6201973)). Qed.
Lemma lem6201975 : real_div = real_div.
Proof. exact (eq_refl real_div). Qed.
Lemma lem6201976 : term642 = term643.
Proof. exact (MK_COMB (@lem6201975) (@lem6201974)). Qed.
Lemma lem6201977 : term641 = term181.
Proof. exact (MK_COMB (@lem6201976) (@lem6201964)). Qed.
Lemma lem6201978 : term640 = term181.
Proof. exact (TRANS (@lem6201956) (@lem6201977)). Qed.
Lemma lem6201979 : term639 = term181.
Proof. exact (TRANS (@lem6201955) (@lem6201978)). Qed.
Lemma lem6201981 (x : real) : (term139 x) = x.
Proof. exact (EQ_MP (@lem1982628 x) (@lem1982627 x)). Qed.
Lemma lem6201982 : term181 = term154.
Proof. exact (@lem6201981 term154). Qed.
Lemma lem6201983 : term639 = term154.
Proof. exact (TRANS (@lem6201979) (@lem6201982)). Qed.
Lemma lem6201984 (_79018 : int) : (term637 _79018) = (term638 _79018).
Proof. exact (@lem1982749 term90 term90 (real_of_int _79018)). Qed.
Lemma lem6201986 (x : nat) : (real_of_num x) = (term119 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6201987 : term90 = term204.
Proof. exact (@lem6201986 term22). Qed.
Lemma lem6201989 (x : nat) : (real_of_num x) = (term119 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6201990 : term90 = term204.
Proof. exact (@lem6201989 term22). Qed.
Lemma lem6201991 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem6201992 : term92 = term605.
Proof. exact (MK_COMB (@lem6201991) (@lem6201990)). Qed.
Lemma lem6201993 : term639 = term640.
Proof. exact (MK_COMB (@lem6201992) (@lem6201987)). Qed.
Lemma lem6201994 : term640 = term641.
Proof. exact (@lem1981613 term90 term90 term102 term102). Qed.
Lemma lem6201996 (m : nat) (n : nat) : (term130 m n) = (term131 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6201997 : term132 = term133.
Proof. exact (@lem6201996 term6 term6). Qed.
Lemma lem6201998 : (term134 = (BIT1 0)) = (term135 = term6).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6201999 : term135 = term6.
Proof. exact (EQ_MP (@lem6201998) (@lem940073)). Qed.
Lemma lem6202000 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6202001 : term133 = term102.
Proof. exact (MK_COMB (@lem6202000) (@lem6201999)). Qed.
Lemma lem6202002 : term132 = term102.
Proof. exact (TRANS (@lem6201997) (@lem6202001)). Qed.
Lemma lem6202004 (m : nat) (n : nat) : (term130 m n) = (term131 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6202005 : term639 = term629.
Proof. exact (@lem6202004 term22 term22). Qed.
Lemma lem6202006 : (term134 = (BIT1 0)) = (term627 = term170).
Proof. exact (@lem940532 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6202007 : term627 = term170.
Proof. exact (EQ_MP (@lem6202006) (@lem940073)). Qed.
Lemma lem6202008 : (term627 = term170) = (term628 = term172).
Proof. exact (@lem1008952 term20 term170). Qed.
Lemma lem6202009 : term628 = term172.
Proof. exact (EQ_MP (@lem6202008) (@lem6202007)). Qed.
Lemma lem6202010 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6202011 : term629 = term154.
Proof. exact (MK_COMB (@lem6202010) (@lem6202009)). Qed.
Lemma lem6202012 : term639 = term154.
Proof. exact (TRANS (@lem6202005) (@lem6202011)). Qed.
Lemma lem6202013 : real_div = real_div.
Proof. exact (eq_refl real_div). Qed.
Lemma lem6202014 : term642 = term643.
Proof. exact (MK_COMB (@lem6202013) (@lem6202012)). Qed.
Lemma lem6202015 : term641 = term181.
Proof. exact (MK_COMB (@lem6202014) (@lem6202002)). Qed.
Lemma lem6202016 : term640 = term181.
Proof. exact (TRANS (@lem6201994) (@lem6202015)). Qed.
Lemma lem6202017 : term639 = term181.
Proof. exact (TRANS (@lem6201993) (@lem6202016)). Qed.
Lemma lem6202019 (x : real) : (term139 x) = x.
Proof. exact (EQ_MP (@lem1982628 x) (@lem1982627 x)). Qed.
Lemma lem6202020 : term181 = term154.
Proof. exact (@lem6202019 term154). Qed.
Lemma lem6202021 : term639 = term154.
Proof. exact (TRANS (@lem6202017) (@lem6202020)). Qed.
Lemma lem6202022 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem6202023 : term644 = term174.
Proof. exact (MK_COMB (@lem6202022) (@lem6202021)). Qed.
Lemma lem6202024 (_79018 : int) : (real_of_int _79018) = (real_of_int _79018).
Proof. exact (eq_refl (real_of_int _79018)). Qed.
Lemma lem6202025 (_79018 : int) : (term638 _79018) = (term645 _79018).
Proof. exact (MK_COMB (@lem6202023) (@lem6202024 _79018)). Qed.
Lemma lem6202026 (_79018 : int) : (term637 _79018) = (term645 _79018).
Proof. exact (TRANS (@lem6201984 _79018) (@lem6202025 _79018)). Qed.
Lemma lem6202027 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem6202028 (_79018 : int) : (term646 _79018) = (term647 _79018).
Proof. exact (MK_COMB (@lem6202027) (@lem6202026 _79018)). Qed.
Lemma lem6202029 (_79018 : int) : (term658 _79018) = (term659 _79018).
Proof. exact (MK_COMB (@lem6202028 _79018) (@lem6201983)). Qed.
Lemma lem6202030 (_79018 : int) : (term657 _79018) = (term659 _79018).
Proof. exact (TRANS (@lem6201946 _79018) (@lem6202029 _79018)). Qed.
Lemma lem6202031 (_79017 : int) : (term621 _79017) = (term622 _79017).
Proof. exact (@lem1982749 term90 term212 (real_of_int _79017)). Qed.
Lemma lem6202033 (x : nat) : (term121 x) = (term122 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem6202034 : term212 = term215.
Proof. exact (@lem6202033 term22). Qed.
Lemma lem6202036 (x : nat) : (real_of_num x) = (term119 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6202037 : term90 = term204.
Proof. exact (@lem6202036 term22). Qed.
Lemma lem6202038 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem6202039 : term92 = term605.
Proof. exact (MK_COMB (@lem6202038) (@lem6202037)). Qed.
Lemma lem6202040 : term623 = term624.
Proof. exact (MK_COMB (@lem6202039) (@lem6202034)). Qed.
Lemma lem6202041 : term624 = term625.
Proof. exact (@lem1981613 term90 term212 term102 term102). Qed.
Lemma lem6202043 (m : nat) (n : nat) : (term130 m n) = (term131 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6202044 : term132 = term133.
Proof. exact (@lem6202043 term6 term6). Qed.
Lemma lem6202045 : (term134 = (BIT1 0)) = (term135 = term6).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6202046 : term135 = term6.
Proof. exact (EQ_MP (@lem6202045) (@lem940073)). Qed.
Lemma lem6202047 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6202048 : term133 = term102.
Proof. exact (MK_COMB (@lem6202047) (@lem6202046)). Qed.
Lemma lem6202049 : term132 = term102.
Proof. exact (TRANS (@lem6202044) (@lem6202048)). Qed.
Lemma lem6202051 (m : nat) (n : nat) : (term609 m n) = (term193 m n).
Proof. exact (proj2 (@lem1367247 m n)). Qed.
Lemma lem6202052 : term623 = term626.
Proof. exact (@lem6202051 term22 term22). Qed.
Lemma lem6202053 : (term134 = (BIT1 0)) = (term627 = term170).
Proof. exact (@lem940532 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6202054 : term627 = term170.
Proof. exact (EQ_MP (@lem6202053) (@lem940073)). Qed.
Lemma lem6202055 : (term627 = term170) = (term628 = term172).
Proof. exact (@lem1008952 term20 term170). Qed.
Lemma lem6202056 : term628 = term172.
Proof. exact (EQ_MP (@lem6202055) (@lem6202054)). Qed.
Lemma lem6202057 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6202058 : term629 = term154.
Proof. exact (MK_COMB (@lem6202057) (@lem6202056)). Qed.
Lemma lem6202059 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem6202060 : term626 = term198.
Proof. exact (MK_COMB (@lem6202059) (@lem6202058)). Qed.
Lemma lem6202061 : term623 = term198.
Proof. exact (TRANS (@lem6202052) (@lem6202060)). Qed.
Lemma lem6202062 : real_div = real_div.
Proof. exact (eq_refl real_div). Qed.
Lemma lem6202063 : term630 = term200.
Proof. exact (MK_COMB (@lem6202062) (@lem6202061)). Qed.
Lemma lem6202064 : term625 = term201.
Proof. exact (MK_COMB (@lem6202063) (@lem6202049)). Qed.
Lemma lem6202065 : term624 = term201.
Proof. exact (TRANS (@lem6202041) (@lem6202064)). Qed.
Lemma lem6202066 : term623 = term201.
Proof. exact (TRANS (@lem6202040) (@lem6202065)). Qed.
Lemma lem6202068 (x : real) : (term139 x) = x.
Proof. exact (EQ_MP (@lem1982628 x) (@lem1982627 x)). Qed.
Lemma lem6202069 : term201 = term198.
Proof. exact (@lem6202068 term198). Qed.
Lemma lem6202070 : term623 = term198.
Proof. exact (TRANS (@lem6202066) (@lem6202069)). Qed.
Lemma lem6202071 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem6202072 : term631 = term632.
Proof. exact (MK_COMB (@lem6202071) (@lem6202070)). Qed.
Lemma lem6202073 (_79017 : int) : (real_of_int _79017) = (real_of_int _79017).
Proof. exact (eq_refl (real_of_int _79017)). Qed.
Lemma lem6202074 (_79017 : int) : (term622 _79017) = (term633 _79017).
Proof. exact (MK_COMB (@lem6202072) (@lem6202073 _79017)). Qed.
Lemma lem6202075 (_79017 : int) : (term621 _79017) = (term633 _79017).
Proof. exact (TRANS (@lem6202031 _79017) (@lem6202074 _79017)). Qed.
Lemma lem6202076 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem6202077 (_79017 : int) : (term634 _79017) = (term635 _79017).
Proof. exact (MK_COMB (@lem6202076) (@lem6202075 _79017)). Qed.
Lemma lem6202078 (_79017 : int) (_79018 : int) : (term656 _79017 _79018) = (term660 _79017 _79018).
Proof. exact (MK_COMB (@lem6202077 _79017) (@lem6202030 _79018)). Qed.
Lemma lem6202079 (_79017 : int) (_79018 : int) : (term655 _79017 _79018) = (term660 _79017 _79018).
Proof. exact (TRANS (@lem6201945 _79017 _79018) (@lem6202078 _79017 _79018)). Qed.
Lemma lem6202080 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem6202081 (_79017 : int) (_79018 : int) : (term661 _79017 _79018) = (term662 _79017 _79018).
Proof. exact (MK_COMB (@lem6202080) (@lem6202079 _79017 _79018)). Qed.
Lemma lem6202082 : term65 = term65.
Proof. exact (eq_refl term65). Qed.
Lemma lem6202083 (_79017 : int) (_79018 : int) : (term654 _79017 _79018) = (term663 _79017 _79018).
Proof. exact (MK_COMB (@lem6202081 _79017 _79018) (@lem6202082)). Qed.
Lemma lem6202084 (_79017 : int) (_79018 : int) (h1 : term585 _79017 _79018) : term663 _79017 _79018.
Proof. exact (EQ_MP (@lem6202083 _79017 _79018) (@lem6201944 _79017 _79018 h1)). Qed.
Lemma lem6202085 (_79017 : int) (_79018 : int) (h1 : term585 _79017 _79018) : term664 _79017 _79018.
Proof. exact (conj (@lem6202084 _79017 _79018 h1) (@lem6201875 _79017 _79018 h1)). Qed.
Lemma lem6202087 (x : real) (y : real) : term665 x y.
Proof. exact (proj1 (@lem1988342 x y)). Qed.
Lemma lem6202088 (_79017 : int) (_79018 : int) : term666 _79017 _79018.
Proof. exact (@lem6202087 (term660 _79017 _79018) (term648 _79017 _79018)). Qed.
Lemma lem6202089 (_79017 : int) (_79018 : int) (h1 : term585 _79017 _79018) : term667 _79017 _79018.
Proof. exact (@lem6202088 _79017 _79018 (@lem6202085 _79017 _79018 h1)). Qed.
Lemma lem6202090 (_79017 : int) (_79018 : int) : (term668 _79017 _79018) = (term669 _79017 _79018).
Proof. exact (@lem1982753 (term633 _79017) (term645 _79017) (term659 _79018) (term636 _79018)). Qed.
Lemma lem6202091 (_79017 : int) : (term670 _79017) = (term671 _79017).
Proof. exact (@lem1982711 term198 term154 (real_of_int _79017)). Qed.
Lemma lem6202093 (x : nat) : (real_of_num x) = (term119 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6202094 : term154 = term181.
Proof. exact (@lem6202093 term172). Qed.
Lemma lem6202096 (x : nat) : (term121 x) = (term122 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem6202097 : term198 = term201.
Proof. exact (@lem6202096 term172). Qed.
Lemma lem6202098 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem6202099 : term672 = term673.
Proof. exact (MK_COMB (@lem6202098) (@lem6202097)). Qed.
Lemma lem6202100 : term674 = term675.
Proof. exact (MK_COMB (@lem6202099) (@lem6202094)). Qed.
Lemma lem6202101 : term676.
Proof. exact (@lem1981473 term198 term102 term154 term102 term65 term102). Qed.
Lemma lem6202103 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6202104 : term156 = term157.
Proof. exact (@lem6202103 (NUMERAL 0) term6). Qed.
Lemma lem6202105 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6202106 (h1 : term158 = (BIT1 0)) : term157 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6202107 : (term158 = (BIT1 0)) = (term157 = True).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6202106 h1) (fun h1 : term157 = True => @lem6202105)). Qed.
Lemma lem6202108 : term157 = True.
Proof. exact (EQ_MP (@lem6202107) (@lem6202105)). Qed.
Lemma lem6202109 : term156 = True.
Proof. exact (TRANS (@lem6202104) (@lem6202108)). Qed.
Lemma lem6202110 : True = term156.
Proof. exact (SYM (@lem6202109)). Qed.
Lemma lem6202111 : term156.
Proof. exact (EQ_MP (@lem6202110) (@lem0)). Qed.
Lemma lem6202112 : term677.
Proof. exact (@lem6202101 (@lem6202111)). Qed.
Lemma lem6202114 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6202115 : term156 = term157.
Proof. exact (@lem6202114 (NUMERAL 0) term6). Qed.
Lemma lem6202116 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6202117 (h1 : term158 = (BIT1 0)) : term157 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6202118 : (term158 = (BIT1 0)) = (term157 = True).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6202117 h1) (fun h1 : term157 = True => @lem6202116)). Qed.
Lemma lem6202119 : term157 = True.
Proof. exact (EQ_MP (@lem6202118) (@lem6202116)). Qed.
Lemma lem6202120 : term156 = True.
Proof. exact (TRANS (@lem6202115) (@lem6202119)). Qed.
Lemma lem6202121 : True = term156.
Proof. exact (SYM (@lem6202120)). Qed.
Lemma lem6202122 : term156.
Proof. exact (EQ_MP (@lem6202121) (@lem0)). Qed.
Lemma lem6202123 : term678.
Proof. exact (@lem6202112 (@lem6202122)). Qed.
Lemma lem6202125 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6202126 : term156 = term157.
Proof. exact (@lem6202125 (NUMERAL 0) term6). Qed.
Lemma lem6202127 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6202128 (h1 : term158 = (BIT1 0)) : term157 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6202129 : (term158 = (BIT1 0)) = (term157 = True).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6202128 h1) (fun h1 : term157 = True => @lem6202127)). Qed.
Lemma lem6202130 : term157 = True.
Proof. exact (EQ_MP (@lem6202129) (@lem6202127)). Qed.
Lemma lem6202131 : term156 = True.
Proof. exact (TRANS (@lem6202126) (@lem6202130)). Qed.
Lemma lem6202132 : True = term156.
Proof. exact (SYM (@lem6202131)). Qed.
Lemma lem6202133 : term156.
Proof. exact (EQ_MP (@lem6202132) (@lem0)). Qed.
Lemma lem6202134 : term679.
Proof. exact (@lem6202123 (@lem6202133)). Qed.
Lemma lem6202136 (m : nat) (n : nat) : (term130 m n) = (term131 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6202137 : term176 = term177.
Proof. exact (@lem6202136 term172 term6). Qed.
Lemma lem6202138 : term178 = term170.
Proof. exact (@lem996237 term170). Qed.
Lemma lem6202139 : (term178 = term170) = (term179 = term172).
Proof. exact (@lem1007663 term170 (BIT1 0) term170). Qed.
Lemma lem6202140 : term179 = term172.
Proof. exact (EQ_MP (@lem6202139) (@lem6202138)). Qed.
Lemma lem6202141 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6202142 : term177 = term154.
Proof. exact (MK_COMB (@lem6202141) (@lem6202140)). Qed.
Lemma lem6202143 : term176 = term154.
Proof. exact (TRANS (@lem6202137) (@lem6202142)). Qed.
Lemma lem6202145 (m : nat) (n : nat) : (term192 m n) = (term193 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem6202146 : term257 = term258.
Proof. exact (@lem6202145 term172 term6). Qed.
Lemma lem6202147 : term178 = term170.
Proof. exact (@lem996237 term170). Qed.
Lemma lem6202148 : (term178 = term170) = (term179 = term172).
Proof. exact (@lem1007663 term170 (BIT1 0) term170). Qed.
Lemma lem6202149 : term179 = term172.
Proof. exact (EQ_MP (@lem6202148) (@lem6202147)). Qed.
Lemma lem6202150 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6202151 : term177 = term154.
Proof. exact (MK_COMB (@lem6202150) (@lem6202149)). Qed.
Lemma lem6202152 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem6202153 : term258 = term198.
Proof. exact (MK_COMB (@lem6202152) (@lem6202151)). Qed.
Lemma lem6202154 : term257 = term198.
Proof. exact (TRANS (@lem6202146) (@lem6202153)). Qed.
Lemma lem6202155 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem6202156 : term680 = term672.
Proof. exact (MK_COMB (@lem6202155) (@lem6202154)). Qed.
Lemma lem6202157 : term681 = term674.
Proof. exact (MK_COMB (@lem6202156) (@lem6202143)). Qed.
Lemma lem6202159 (m : nat) : (term682 m) = term65.
Proof. exact (proj1 (@lem1367303 m)). Qed.
Lemma lem6202160 : term674 = term65.
Proof. exact (@lem6202159 term172). Qed.
Lemma lem6202161 : term681 = term65.
Proof. exact (TRANS (@lem6202157) (@lem6202160)). Qed.
Lemma lem6202162 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem6202163 : term683 = term242.
Proof. exact (MK_COMB (@lem6202162) (@lem6202161)). Qed.
Lemma lem6202164 : term102 = term102.
Proof. exact (eq_refl term102). Qed.
Lemma lem6202165 : term684 = term244.
Proof. exact (MK_COMB (@lem6202163) (@lem6202164)). Qed.
Lemma lem6202167 (x : nat) : (term245 x) = term65.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem6202168 : term244 = term65.
Proof. exact (@lem6202167 term6). Qed.
Lemma lem6202169 : term684 = term65.
Proof. exact (TRANS (@lem6202165) (@lem6202168)). Qed.
Lemma lem6202171 (m : nat) (n : nat) : (term130 m n) = (term131 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6202172 : term132 = term133.
Proof. exact (@lem6202171 term6 term6). Qed.
Lemma lem6202173 : (term134 = (BIT1 0)) = (term135 = term6).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6202174 : term135 = term6.
Proof. exact (EQ_MP (@lem6202173) (@lem940073)). Qed.
Lemma lem6202175 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6202176 : term133 = term102.
Proof. exact (MK_COMB (@lem6202175) (@lem6202174)). Qed.
Lemma lem6202177 : term132 = term102.
Proof. exact (TRANS (@lem6202172) (@lem6202176)). Qed.
Lemma lem6202178 : term242 = term242.
Proof. exact (eq_refl term242). Qed.
Lemma lem6202179 : term246 = term244.
Proof. exact (MK_COMB (@lem6202178) (@lem6202177)). Qed.
Lemma lem6202181 (x : nat) : (term245 x) = term65.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem6202182 : term244 = term65.
Proof. exact (@lem6202181 term6). Qed.
Lemma lem6202183 : term246 = term65.
Proof. exact (TRANS (@lem6202179) (@lem6202182)). Qed.
Lemma lem6202184 : term65 = term246.
Proof. exact (SYM (@lem6202183)). Qed.
Lemma lem6202185 : term684 = term246.
Proof. exact (TRANS (@lem6202169) (@lem6202184)). Qed.
Lemma lem6202186 : term675 = term120.
Proof. exact (@lem6202134 (@lem6202185)). Qed.
Lemma lem6202187 : term674 = term120.
Proof. exact (TRANS (@lem6202100) (@lem6202186)). Qed.
Lemma lem6202189 (x : real) : (term139 x) = x.
Proof. exact (EQ_MP (@lem1981475 x) (@lem1981474 x)). Qed.
Lemma lem6202190 : term120 = term65.
Proof. exact (@lem6202189 term65). Qed.
Lemma lem6202191 : term674 = term65.
Proof. exact (TRANS (@lem6202187) (@lem6202190)). Qed.
Lemma lem6202192 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem6202193 : term685 = term242.
Proof. exact (MK_COMB (@lem6202192) (@lem6202191)). Qed.
Lemma lem6202194 (_79017 : int) : (real_of_int _79017) = (real_of_int _79017).
Proof. exact (eq_refl (real_of_int _79017)). Qed.
Lemma lem6202195 (_79017 : int) : (term671 _79017) = (term248 _79017).
Proof. exact (MK_COMB (@lem6202193) (@lem6202194 _79017)). Qed.
Lemma lem6202196 (_79017 : int) : (term670 _79017) = (term248 _79017).
Proof. exact (TRANS (@lem6202091 _79017) (@lem6202195 _79017)). Qed.
Lemma lem6202197 (_79017 : int) : (term248 _79017) = term65.
Proof. exact (@lem1982719 (real_of_int _79017)). Qed.
Lemma lem6202198 (_79017 : int) : (term670 _79017) = term65.
Proof. exact (TRANS (@lem6202196 _79017) (@lem6202197 _79017)). Qed.
Lemma lem6202199 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem6202200 (_79017 : int) : (term686 _79017) = term250.
Proof. exact (MK_COMB (@lem6202199) (@lem6202198 _79017)). Qed.
Lemma lem6202201 (_79018 : int) : (term687 _79018) = (term688 _79018).
Proof. exact (@lem1982753 (term645 _79018) (term633 _79018) term154 term617). Qed.
Lemma lem6202202 (_79018 : int) : (term689 _79018) = (term690 _79018).
Proof. exact (@lem1982711 term154 term198 (real_of_int _79018)). Qed.
Lemma lem6202204 (x : nat) : (term121 x) = (term122 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem6202205 : term198 = term201.
Proof. exact (@lem6202204 term172). Qed.
Lemma lem6202207 (x : nat) : (real_of_num x) = (term119 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6202208 : term154 = term181.
Proof. exact (@lem6202207 term172). Qed.
Lemma lem6202209 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem6202210 : term691 = term692.
Proof. exact (MK_COMB (@lem6202209) (@lem6202208)). Qed.
Lemma lem6202211 : term693 = term694.
Proof. exact (MK_COMB (@lem6202210) (@lem6202205)). Qed.
Lemma lem6202212 : term695.
Proof. exact (@lem1981473 term154 term102 term198 term102 term65 term102). Qed.
Lemma lem6202214 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6202215 : term156 = term157.
Proof. exact (@lem6202214 (NUMERAL 0) term6). Qed.
Lemma lem6202216 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6202217 (h1 : term158 = (BIT1 0)) : term157 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6202218 : (term158 = (BIT1 0)) = (term157 = True).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6202217 h1) (fun h1 : term157 = True => @lem6202216)). Qed.
Lemma lem6202219 : term157 = True.
Proof. exact (EQ_MP (@lem6202218) (@lem6202216)). Qed.
Lemma lem6202220 : term156 = True.
Proof. exact (TRANS (@lem6202215) (@lem6202219)). Qed.
Lemma lem6202221 : True = term156.
Proof. exact (SYM (@lem6202220)). Qed.
Lemma lem6202222 : term156.
Proof. exact (EQ_MP (@lem6202221) (@lem0)). Qed.
Lemma lem6202223 : term696.
Proof. exact (@lem6202212 (@lem6202222)). Qed.
Lemma lem6202225 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6202226 : term156 = term157.
Proof. exact (@lem6202225 (NUMERAL 0) term6). Qed.
Lemma lem6202227 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6202228 (h1 : term158 = (BIT1 0)) : term157 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6202229 : (term158 = (BIT1 0)) = (term157 = True).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6202228 h1) (fun h1 : term157 = True => @lem6202227)). Qed.
Lemma lem6202230 : term157 = True.
Proof. exact (EQ_MP (@lem6202229) (@lem6202227)). Qed.
Lemma lem6202231 : term156 = True.
Proof. exact (TRANS (@lem6202226) (@lem6202230)). Qed.
Lemma lem6202232 : True = term156.
Proof. exact (SYM (@lem6202231)). Qed.
Lemma lem6202233 : term156.
Proof. exact (EQ_MP (@lem6202232) (@lem0)). Qed.
Lemma lem6202234 : term697.
Proof. exact (@lem6202223 (@lem6202233)). Qed.
Lemma lem6202236 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6202237 : term156 = term157.
Proof. exact (@lem6202236 (NUMERAL 0) term6). Qed.
Lemma lem6202238 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6202239 (h1 : term158 = (BIT1 0)) : term157 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6202240 : (term158 = (BIT1 0)) = (term157 = True).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6202239 h1) (fun h1 : term157 = True => @lem6202238)). Qed.
Lemma lem6202241 : term157 = True.
Proof. exact (EQ_MP (@lem6202240) (@lem6202238)). Qed.
Lemma lem6202242 : term156 = True.
Proof. exact (TRANS (@lem6202237) (@lem6202241)). Qed.
Lemma lem6202243 : True = term156.
Proof. exact (SYM (@lem6202242)). Qed.
Lemma lem6202244 : term156.
Proof. exact (EQ_MP (@lem6202243) (@lem0)). Qed.
Lemma lem6202245 : term698.
Proof. exact (@lem6202234 (@lem6202244)). Qed.
Lemma lem6202247 (m : nat) (n : nat) : (term192 m n) = (term193 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem6202248 : term257 = term258.
Proof. exact (@lem6202247 term172 term6). Qed.
Lemma lem6202249 : term178 = term170.
Proof. exact (@lem996237 term170). Qed.
Lemma lem6202250 : (term178 = term170) = (term179 = term172).
Proof. exact (@lem1007663 term170 (BIT1 0) term170). Qed.
Lemma lem6202251 : term179 = term172.
Proof. exact (EQ_MP (@lem6202250) (@lem6202249)). Qed.
Lemma lem6202252 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6202253 : term177 = term154.
Proof. exact (MK_COMB (@lem6202252) (@lem6202251)). Qed.
Lemma lem6202254 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem6202255 : term258 = term198.
Proof. exact (MK_COMB (@lem6202254) (@lem6202253)). Qed.
Lemma lem6202256 : term257 = term198.
Proof. exact (TRANS (@lem6202248) (@lem6202255)). Qed.
Lemma lem6202258 (m : nat) (n : nat) : (term130 m n) = (term131 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6202259 : term176 = term177.
Proof. exact (@lem6202258 term172 term6). Qed.
Lemma lem6202260 : term178 = term170.
Proof. exact (@lem996237 term170). Qed.
Lemma lem6202261 : (term178 = term170) = (term179 = term172).
Proof. exact (@lem1007663 term170 (BIT1 0) term170). Qed.
Lemma lem6202262 : term179 = term172.
Proof. exact (EQ_MP (@lem6202261) (@lem6202260)). Qed.
Lemma lem6202263 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6202264 : term177 = term154.
Proof. exact (MK_COMB (@lem6202263) (@lem6202262)). Qed.
Lemma lem6202265 : term176 = term154.
Proof. exact (TRANS (@lem6202259) (@lem6202264)). Qed.
Lemma lem6202266 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem6202267 : term699 = term691.
Proof. exact (MK_COMB (@lem6202266) (@lem6202265)). Qed.
Lemma lem6202268 : term700 = term693.
Proof. exact (MK_COMB (@lem6202267) (@lem6202256)). Qed.
Lemma lem6202270 (m : nat) : (term240 m) = term65.
Proof. exact (proj2 (@lem1367303 m)). Qed.
Lemma lem6202271 : term693 = term65.
Proof. exact (@lem6202270 term172). Qed.
Lemma lem6202272 : term700 = term65.
Proof. exact (TRANS (@lem6202268) (@lem6202271)). Qed.
Lemma lem6202273 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem6202274 : term701 = term242.
Proof. exact (MK_COMB (@lem6202273) (@lem6202272)). Qed.
Lemma lem6202275 : term102 = term102.
Proof. exact (eq_refl term102). Qed.
Lemma lem6202276 : term702 = term244.
Proof. exact (MK_COMB (@lem6202274) (@lem6202275)). Qed.
Lemma lem6202278 (x : nat) : (term245 x) = term65.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem6202279 : term244 = term65.
Proof. exact (@lem6202278 term6). Qed.
Lemma lem6202280 : term702 = term65.
Proof. exact (TRANS (@lem6202276) (@lem6202279)). Qed.
Lemma lem6202282 (m : nat) (n : nat) : (term130 m n) = (term131 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6202283 : term132 = term133.
Proof. exact (@lem6202282 term6 term6). Qed.
Lemma lem6202284 : (term134 = (BIT1 0)) = (term135 = term6).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6202285 : term135 = term6.
Proof. exact (EQ_MP (@lem6202284) (@lem940073)). Qed.
Lemma lem6202286 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6202287 : term133 = term102.
Proof. exact (MK_COMB (@lem6202286) (@lem6202285)). Qed.
Lemma lem6202288 : term132 = term102.
Proof. exact (TRANS (@lem6202283) (@lem6202287)). Qed.
Lemma lem6202289 : term242 = term242.
Proof. exact (eq_refl term242). Qed.
Lemma lem6202290 : term246 = term244.
Proof. exact (MK_COMB (@lem6202289) (@lem6202288)). Qed.
Lemma lem6202292 (x : nat) : (term245 x) = term65.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem6202293 : term244 = term65.
Proof. exact (@lem6202292 term6). Qed.
Lemma lem6202294 : term246 = term65.
Proof. exact (TRANS (@lem6202290) (@lem6202293)). Qed.
Lemma lem6202295 : term65 = term246.
Proof. exact (SYM (@lem6202294)). Qed.
Lemma lem6202296 : term702 = term246.
Proof. exact (TRANS (@lem6202280) (@lem6202295)). Qed.
Lemma lem6202297 : term694 = term120.
Proof. exact (@lem6202245 (@lem6202296)). Qed.
Lemma lem6202298 : term693 = term120.
Proof. exact (TRANS (@lem6202211) (@lem6202297)). Qed.
Lemma lem6202300 (x : real) : (term139 x) = x.
Proof. exact (EQ_MP (@lem1981475 x) (@lem1981474 x)). Qed.
Lemma lem6202301 : term120 = term65.
Proof. exact (@lem6202300 term65). Qed.
Lemma lem6202302 : term693 = term65.
Proof. exact (TRANS (@lem6202298) (@lem6202301)). Qed.
Lemma lem6202303 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem6202304 : term703 = term242.
Proof. exact (MK_COMB (@lem6202303) (@lem6202302)). Qed.
Lemma lem6202305 (_79018 : int) : (real_of_int _79018) = (real_of_int _79018).
Proof. exact (eq_refl (real_of_int _79018)). Qed.
Lemma lem6202306 (_79018 : int) : (term690 _79018) = (term248 _79018).
Proof. exact (MK_COMB (@lem6202304) (@lem6202305 _79018)). Qed.
Lemma lem6202307 (_79018 : int) : (term689 _79018) = (term248 _79018).
Proof. exact (TRANS (@lem6202202 _79018) (@lem6202306 _79018)). Qed.
Lemma lem6202308 (_79018 : int) : (term248 _79018) = term65.
Proof. exact (@lem1982719 (real_of_int _79018)). Qed.
Lemma lem6202309 (_79018 : int) : (term689 _79018) = term65.
Proof. exact (TRANS (@lem6202307 _79018) (@lem6202308 _79018)). Qed.
Lemma lem6202310 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem6202311 (_79018 : int) : (term704 _79018) = term250.
Proof. exact (MK_COMB (@lem6202310) (@lem6202309 _79018)). Qed.
Lemma lem6202313 (x : nat) : (term121 x) = (term122 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem6202314 : term617 = term620.
Proof. exact (@lem6202313 term614). Qed.
Lemma lem6202316 (x : nat) : (real_of_num x) = (term119 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6202317 : term154 = term181.
Proof. exact (@lem6202316 term172). Qed.
Lemma lem6202318 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem6202319 : term691 = term692.
Proof. exact (MK_COMB (@lem6202318) (@lem6202317)). Qed.
Lemma lem6202320 : term705 = term706.
Proof. exact (MK_COMB (@lem6202319) (@lem6202314)). Qed.
Lemma lem6202321 : term707.
Proof. exact (@lem1981473 term154 term102 term617 term102 term212 term102). Qed.
Lemma lem6202323 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6202324 : term156 = term157.
Proof. exact (@lem6202323 (NUMERAL 0) term6). Qed.
Lemma lem6202325 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6202326 (h1 : term158 = (BIT1 0)) : term157 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6202327 : (term158 = (BIT1 0)) = (term157 = True).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6202326 h1) (fun h1 : term157 = True => @lem6202325)). Qed.
Lemma lem6202328 : term157 = True.
Proof. exact (EQ_MP (@lem6202327) (@lem6202325)). Qed.
Lemma lem6202329 : term156 = True.
Proof. exact (TRANS (@lem6202324) (@lem6202328)). Qed.
Lemma lem6202330 : True = term156.
Proof. exact (SYM (@lem6202329)). Qed.
Lemma lem6202331 : term156.
Proof. exact (EQ_MP (@lem6202330) (@lem0)). Qed.
Lemma lem6202332 : term708.
Proof. exact (@lem6202321 (@lem6202331)). Qed.
Lemma lem6202334 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6202335 : term156 = term157.
Proof. exact (@lem6202334 (NUMERAL 0) term6). Qed.
Lemma lem6202336 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6202337 (h1 : term158 = (BIT1 0)) : term157 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6202338 : (term158 = (BIT1 0)) = (term157 = True).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6202337 h1) (fun h1 : term157 = True => @lem6202336)). Qed.
Lemma lem6202339 : term157 = True.
Proof. exact (EQ_MP (@lem6202338) (@lem6202336)). Qed.
Lemma lem6202340 : term156 = True.
Proof. exact (TRANS (@lem6202335) (@lem6202339)). Qed.
Lemma lem6202341 : True = term156.
Proof. exact (SYM (@lem6202340)). Qed.
Lemma lem6202342 : term156.
Proof. exact (EQ_MP (@lem6202341) (@lem0)). Qed.
Lemma lem6202343 : term709.
Proof. exact (@lem6202332 (@lem6202342)). Qed.
Lemma lem6202345 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6202346 : term156 = term157.
Proof. exact (@lem6202345 (NUMERAL 0) term6). Qed.
Lemma lem6202347 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6202348 (h1 : term158 = (BIT1 0)) : term157 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6202349 : (term158 = (BIT1 0)) = (term157 = True).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6202348 h1) (fun h1 : term157 = True => @lem6202347)). Qed.
Lemma lem6202350 : term157 = True.
Proof. exact (EQ_MP (@lem6202349) (@lem6202347)). Qed.
Lemma lem6202351 : term156 = True.
Proof. exact (TRANS (@lem6202346) (@lem6202350)). Qed.
Lemma lem6202352 : True = term156.
Proof. exact (SYM (@lem6202351)). Qed.
Lemma lem6202353 : term156.
Proof. exact (EQ_MP (@lem6202352) (@lem0)). Qed.
Lemma lem6202354 : term710.
Proof. exact (@lem6202343 (@lem6202353)). Qed.
Lemma lem6202356 (m : nat) (n : nat) : (term192 m n) = (term193 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem6202357 : term711 = term712.
Proof. exact (@lem6202356 term614 term6). Qed.
Lemma lem6202358 : term713 = term612.
Proof. exact (@lem996237 term612). Qed.
Lemma lem6202359 : (term713 = term612) = (term714 = term614).
Proof. exact (@lem1007663 term612 (BIT1 0) term612). Qed.
Lemma lem6202360 : term714 = term614.
Proof. exact (EQ_MP (@lem6202359) (@lem6202358)). Qed.
Lemma lem6202361 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6202362 : term715 = term616.
Proof. exact (MK_COMB (@lem6202361) (@lem6202360)). Qed.
Lemma lem6202363 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem6202364 : term712 = term617.
Proof. exact (MK_COMB (@lem6202363) (@lem6202362)). Qed.
Lemma lem6202365 : term711 = term617.
Proof. exact (TRANS (@lem6202357) (@lem6202364)). Qed.
Lemma lem6202367 (m : nat) (n : nat) : (term130 m n) = (term131 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6202368 : term176 = term177.
Proof. exact (@lem6202367 term172 term6). Qed.
Lemma lem6202369 : term178 = term170.
Proof. exact (@lem996237 term170). Qed.
Lemma lem6202370 : (term178 = term170) = (term179 = term172).
Proof. exact (@lem1007663 term170 (BIT1 0) term170). Qed.
Lemma lem6202371 : term179 = term172.
Proof. exact (EQ_MP (@lem6202370) (@lem6202369)). Qed.
Lemma lem6202372 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6202373 : term177 = term154.
Proof. exact (MK_COMB (@lem6202372) (@lem6202371)). Qed.
Lemma lem6202374 : term176 = term154.
Proof. exact (TRANS (@lem6202368) (@lem6202373)). Qed.
Lemma lem6202375 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem6202376 : term699 = term691.
Proof. exact (MK_COMB (@lem6202375) (@lem6202374)). Qed.
Lemma lem6202377 : term716 = term705.
Proof. exact (MK_COMB (@lem6202376) (@lem6202365)). Qed.
Lemma lem6202380 : term717 = term212.
Proof. exact (@lem1367771 term172 term22). Qed.
Lemma lem6202381 : term718 = term612.
Proof. exact (@lem707079). Qed.
Lemma lem6202382 : (term718 = term612) = (term719 = term614).
Proof. exact (@lem1006570 term170 term20 term612). Qed.
Lemma lem6202383 : term719 = term614.
Proof. exact (EQ_MP (@lem6202382) (@lem6202381)). Qed.
Lemma lem6202384 : term614 = term719.
Proof. exact (SYM (@lem6202383)). Qed.
Lemma lem6202385 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6202386 : term616 = term720.
Proof. exact (MK_COMB (@lem6202385) (@lem6202384)). Qed.
Lemma lem6202387 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem6202388 : term617 = term721.
Proof. exact (MK_COMB (@lem6202387) (@lem6202386)). Qed.
Lemma lem6202389 : term691 = term691.
Proof. exact (eq_refl term691). Qed.
Lemma lem6202390 : term705 = term717.
Proof. exact (MK_COMB (@lem6202389) (@lem6202388)). Qed.
Lemma lem6202391 : term705 = term212.
Proof. exact (TRANS (@lem6202390) (@lem6202380)). Qed.
Lemma lem6202392 : term716 = term212.
Proof. exact (TRANS (@lem6202377) (@lem6202391)). Qed.
Lemma lem6202393 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem6202394 : term722 = term217.
Proof. exact (MK_COMB (@lem6202393) (@lem6202392)). Qed.
Lemma lem6202395 : term102 = term102.
Proof. exact (eq_refl term102). Qed.
Lemma lem6202396 : term723 = term234.
Proof. exact (MK_COMB (@lem6202394) (@lem6202395)). Qed.
Lemma lem6202398 (m : nat) (n : nat) : (term192 m n) = (term193 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem6202399 : term234 = term235.
Proof. exact (@lem6202398 term22 term6). Qed.
Lemma lem6202400 : term35 = term20.
Proof. exact (@lem996237 term20). Qed.
Lemma lem6202401 : (term35 = term20) = (term36 = term22).
Proof. exact (@lem1007663 term20 (BIT1 0) term20). Qed.
Lemma lem6202402 : term36 = term22.
Proof. exact (EQ_MP (@lem6202401) (@lem6202400)). Qed.
Lemma lem6202403 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6202404 : term236 = term90.
Proof. exact (MK_COMB (@lem6202403) (@lem6202402)). Qed.
Lemma lem6202405 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem6202406 : term235 = term212.
Proof. exact (MK_COMB (@lem6202405) (@lem6202404)). Qed.
Lemma lem6202407 : term234 = term212.
Proof. exact (TRANS (@lem6202399) (@lem6202406)). Qed.
Lemma lem6202408 : term723 = term212.
Proof. exact (TRANS (@lem6202396) (@lem6202407)). Qed.
Lemma lem6202410 (m : nat) (n : nat) : (term130 m n) = (term131 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6202411 : term132 = term133.
Proof. exact (@lem6202410 term6 term6). Qed.
Lemma lem6202412 : (term134 = (BIT1 0)) = (term135 = term6).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6202413 : term135 = term6.
Proof. exact (EQ_MP (@lem6202412) (@lem940073)). Qed.
Lemma lem6202414 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6202415 : term133 = term102.
Proof. exact (MK_COMB (@lem6202414) (@lem6202413)). Qed.
Lemma lem6202416 : term132 = term102.
Proof. exact (TRANS (@lem6202411) (@lem6202415)). Qed.
Lemma lem6202417 : term217 = term217.
Proof. exact (eq_refl term217). Qed.
Lemma lem6202418 : term724 = term234.
Proof. exact (MK_COMB (@lem6202417) (@lem6202416)). Qed.
Lemma lem6202420 (m : nat) (n : nat) : (term192 m n) = (term193 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem6202421 : term234 = term235.
Proof. exact (@lem6202420 term22 term6). Qed.
Lemma lem6202422 : term35 = term20.
Proof. exact (@lem996237 term20). Qed.
Lemma lem6202423 : (term35 = term20) = (term36 = term22).
Proof. exact (@lem1007663 term20 (BIT1 0) term20). Qed.
Lemma lem6202424 : term36 = term22.
Proof. exact (EQ_MP (@lem6202423) (@lem6202422)). Qed.
Lemma lem6202425 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6202426 : term236 = term90.
Proof. exact (MK_COMB (@lem6202425) (@lem6202424)). Qed.
Lemma lem6202427 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem6202428 : term235 = term212.
Proof. exact (MK_COMB (@lem6202427) (@lem6202426)). Qed.
Lemma lem6202429 : term234 = term212.
Proof. exact (TRANS (@lem6202421) (@lem6202428)). Qed.
Lemma lem6202430 : term724 = term212.
Proof. exact (TRANS (@lem6202418) (@lem6202429)). Qed.
Lemma lem6202431 : term212 = term724.
Proof. exact (SYM (@lem6202430)). Qed.
Lemma lem6202432 : term723 = term724.
Proof. exact (TRANS (@lem6202408) (@lem6202431)). Qed.
Lemma lem6202433 : term706 = term215.
Proof. exact (@lem6202354 (@lem6202432)). Qed.
Lemma lem6202434 : term705 = term215.
Proof. exact (TRANS (@lem6202320) (@lem6202433)). Qed.
Lemma lem6202436 (x : real) : (term139 x) = x.
Proof. exact (EQ_MP (@lem1981475 x) (@lem1981474 x)). Qed.
Lemma lem6202437 : term215 = term212.
Proof. exact (@lem6202436 term212). Qed.
Lemma lem6202438 : term705 = term212.
Proof. exact (TRANS (@lem6202434) (@lem6202437)). Qed.
Lemma lem6202439 (_79018 : int) : (term688 _79018) = term725.
Proof. exact (MK_COMB (@lem6202311 _79018) (@lem6202438)). Qed.
Lemma lem6202440 (_79018 : int) : (term687 _79018) = term725.
Proof. exact (TRANS (@lem6202201 _79018) (@lem6202439 _79018)). Qed.
Lemma lem6202441 : term725 = term212.
Proof. exact (@lem1982721 term212). Qed.
Lemma lem6202442 (_79018 : int) : (term687 _79018) = term212.
Proof. exact (TRANS (@lem6202440 _79018) (@lem6202441)). Qed.
Lemma lem6202443 (_79017 : int) (_79018 : int) : (term669 _79017 _79018) = term725.
Proof. exact (MK_COMB (@lem6202200 _79017) (@lem6202442 _79018)). Qed.
Lemma lem6202444 (_79017 : int) (_79018 : int) : (term668 _79017 _79018) = term725.
Proof. exact (TRANS (@lem6202090 _79017 _79018) (@lem6202443 _79017 _79018)). Qed.
Lemma lem6202445 : term725 = term212.
Proof. exact (@lem1982721 term212). Qed.
Lemma lem6202446 (_79017 : int) (_79018 : int) : (term668 _79017 _79018) = term212.
Proof. exact (TRANS (@lem6202444 _79017 _79018) (@lem6202445)). Qed.
Lemma lem6202447 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem6202448 (_79017 : int) (_79018 : int) : (term726 _79017 _79018) = term727.
Proof. exact (MK_COMB (@lem6202447) (@lem6202446 _79017 _79018)). Qed.
Lemma lem6202449 : term65 = term65.
Proof. exact (eq_refl term65). Qed.
Lemma lem6202450 (_79017 : int) (_79018 : int) : (term667 _79017 _79018) = term728.
Proof. exact (MK_COMB (@lem6202448 _79017 _79018) (@lem6202449)). Qed.
Lemma lem6202451 (_79017 : int) (_79018 : int) (h1 : term585 _79017 _79018) : term728.
Proof. exact (EQ_MP (@lem6202450 _79017 _79018) (@lem6202089 _79017 _79018 h1)). Qed.
Lemma lem6202453 (y : real) (x : real) : (real_ge x y) = (real_le y x).
Proof. exact (EQ_MP (@lem1980260 y x) (@lem1980259 y x)). Qed.
Lemma lem6202454 : term728 = term729.
Proof. exact (@lem6202453 term65 term212). Qed.
Lemma lem6202456 (x : nat) : (term121 x) = (term122 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem6202457 : term212 = term215.
Proof. exact (@lem6202456 term22). Qed.
Lemma lem6202459 (x : nat) : (real_of_num x) = (term119 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6202460 : term65 = term120.
Proof. exact (@lem6202459 (NUMERAL 0)). Qed.
Lemma lem6202461 : real_le = real_le.
Proof. exact (eq_refl real_le). Qed.
Lemma lem6202462 : term67 = term274.
Proof. exact (MK_COMB (@lem6202461) (@lem6202460)). Qed.
Lemma lem6202463 : term729 = term730.
Proof. exact (MK_COMB (@lem6202462) (@lem6202457)). Qed.
Lemma lem6202464 : term731.
Proof. exact (@lem1980026 term65 term102 term212 term102). Qed.
Lemma lem6202466 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6202467 : term156 = term157.
Proof. exact (@lem6202466 (NUMERAL 0) term6). Qed.
Lemma lem6202468 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6202469 (h1 : term158 = (BIT1 0)) : term157 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6202470 : (term158 = (BIT1 0)) = (term157 = True).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6202469 h1) (fun h1 : term157 = True => @lem6202468)). Qed.
Lemma lem6202471 : term157 = True.
Proof. exact (EQ_MP (@lem6202470) (@lem6202468)). Qed.
Lemma lem6202472 : term156 = True.
Proof. exact (TRANS (@lem6202467) (@lem6202471)). Qed.
Lemma lem6202473 : True = term156.
Proof. exact (SYM (@lem6202472)). Qed.
Lemma lem6202474 : term156.
Proof. exact (EQ_MP (@lem6202473) (@lem0)). Qed.
Lemma lem6202475 : term732.
Proof. exact (@lem6202464 (@lem6202474)). Qed.
Lemma lem6202477 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6202478 : term156 = term157.
Proof. exact (@lem6202477 (NUMERAL 0) term6). Qed.
Lemma lem6202479 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6202480 (h1 : term158 = (BIT1 0)) : term157 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6202481 : (term158 = (BIT1 0)) = (term157 = True).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6202480 h1) (fun h1 : term157 = True => @lem6202479)). Qed.
Lemma lem6202482 : term157 = True.
Proof. exact (EQ_MP (@lem6202481) (@lem6202479)). Qed.
Lemma lem6202483 : term156 = True.
Proof. exact (TRANS (@lem6202478) (@lem6202482)). Qed.
Lemma lem6202484 : True = term156.
Proof. exact (SYM (@lem6202483)). Qed.
Lemma lem6202485 : term156.
Proof. exact (EQ_MP (@lem6202484) (@lem0)). Qed.
Lemma lem6202486 : term730 = term733.
Proof. exact (@lem6202475 (@lem6202485)). Qed.
Lemma lem6202488 (m : nat) (n : nat) : (term192 m n) = (term193 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem6202489 : term234 = term235.
Proof. exact (@lem6202488 term22 term6). Qed.
Lemma lem6202490 : term35 = term20.
Proof. exact (@lem996237 term20). Qed.
Lemma lem6202491 : (term35 = term20) = (term36 = term22).
Proof. exact (@lem1007663 term20 (BIT1 0) term20). Qed.
Lemma lem6202492 : term36 = term22.
Proof. exact (EQ_MP (@lem6202491) (@lem6202490)). Qed.
Lemma lem6202493 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6202494 : term236 = term90.
Proof. exact (MK_COMB (@lem6202493) (@lem6202492)). Qed.
Lemma lem6202495 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem6202496 : term235 = term212.
Proof. exact (MK_COMB (@lem6202495) (@lem6202494)). Qed.
Lemma lem6202497 : term234 = term212.
Proof. exact (TRANS (@lem6202489) (@lem6202496)). Qed.
Lemma lem6202499 (x : nat) : (term245 x) = term65.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem6202500 : term244 = term65.
Proof. exact (@lem6202499 term6). Qed.
Lemma lem6202501 : real_le = real_le.
Proof. exact (eq_refl real_le). Qed.
Lemma lem6202502 : term279 = term67.
Proof. exact (MK_COMB (@lem6202501) (@lem6202500)). Qed.
Lemma lem6202503 : term733 = term729.
Proof. exact (MK_COMB (@lem6202502) (@lem6202497)). Qed.
Lemma lem6202505 (m : nat) (n : nat) : (term280 m n) = (term281 m n).
Proof. exact (proj2 (@lem1365406 m n)). Qed.
Lemma lem6202506 : term729 = term734.
Proof. exact (@lem6202505 (NUMERAL 0) term22). Qed.
Lemma lem6202507 : term596 = term20.
Proof. exact (@lem912803). Qed.
Lemma lem6202508 (h1 : term596 = term20) : (term22 = (NUMERAL 0)) = False.
Proof. exact (@lem1013352 (BIT1 0) 0 term20 h1). Qed.
Lemma lem6202509 : (term596 = term20) = ((term22 = (NUMERAL 0)) = False).
Proof. exact (prop_ext (fun h1 : term596 = term20 => @lem6202508 h1) (fun h1 : (term22 = (NUMERAL 0)) = False => @lem6202507)). Qed.
Lemma lem6202510 : (term22 = (NUMERAL 0)) = False.
Proof. exact (EQ_MP (@lem6202509) (@lem6202507)). Qed.
Lemma lem6202511 : ((NUMERAL 0) = (NUMERAL 0)) = True.
Proof. exact (@lem1013364 0). Qed.
Lemma lem6202512 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6202513 : term283 = (and True).
Proof. exact (MK_COMB (@lem6202512) (@lem6202511)). Qed.
Lemma lem6202514 : term734 = (True /\ False).
Proof. exact (MK_COMB (@lem6202513) (@lem6202510)). Qed.
Lemma lem6202516 : (True /\ False) = False.
Proof. exact (proj1 (@lem1365106)). Qed.
Lemma lem6202517 : term734 = False.
Proof. exact (TRANS (@lem6202514) (@lem6202516)). Qed.
Lemma lem6202518 : term729 = False.
Proof. exact (TRANS (@lem6202506) (@lem6202517)). Qed.
Lemma lem6202519 : term733 = False.
Proof. exact (TRANS (@lem6202503) (@lem6202518)). Qed.
Lemma lem6202520 : term730 = False.
Proof. exact (TRANS (@lem6202486) (@lem6202519)). Qed.
Lemma lem6202521 : term729 = False.
Proof. exact (TRANS (@lem6202463) (@lem6202520)). Qed.
Lemma lem6202522 : term728 = False.
Proof. exact (TRANS (@lem6202454) (@lem6202521)). Qed.
Lemma lem6202523 (_79017 : int) (_79018 : int) (h1 : term585 _79017 _79018) : False.
Proof. exact (EQ_MP (@lem6202522) (@lem6202451 _79017 _79018 h1)). Qed.
Lemma lem6202524 (_79017 : int) (_79018 : int) (h1 : term735 _79017 _79018) : term735 _79017 _79018.
Proof. exact (h1). Qed.
Lemma lem6202525 (_79017 : int) (_79018 : int) (h1 : term735 _79017 _79018) : term581 _79017 _79018.
Proof. exact (proj2 (@lem6202524 _79017 _79018 h1)). Qed.
Lemma lem6202527 (_79017 : int) (_79018 : int) (h1 : term735 _79017 _79018) : term568 _79017 _79018.
Proof. exact (proj2 (@lem6202525 _79017 _79018 h1)). Qed.
Lemma lem6202529 (_79017 : int) (_79018 : int) (h1 : term735 _79017 _79018) : term536 _79017 _79018.
Proof. exact (proj2 (@lem6202527 _79017 _79018 h1)). Qed.
Lemma lem6202530 (_79017 : int) (_79018 : int) (h1 : term735 _79017 _79018) : term526 _79017 _79018.
Proof. exact (proj1 (@lem6202527 _79017 _79018 h1)). Qed.
Lemma lem6202532 (y : real) (x : real) : (real_gt x y) = (real_lt y x).
Proof. exact (EQ_MP (@lem1980266 y x) (@lem1980265 y x)). Qed.
Lemma lem6202533 : term586 = term587.
Proof. exact (@lem6202532 term65 term90). Qed.
Lemma lem6202535 (x : nat) : (real_of_num x) = (term119 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6202536 : term90 = term204.
Proof. exact (@lem6202535 term22). Qed.
Lemma lem6202538 (x : nat) : (real_of_num x) = (term119 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6202539 : term65 = term120.
Proof. exact (@lem6202538 (NUMERAL 0)). Qed.
Lemma lem6202540 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem6202541 : term588 = term589.
Proof. exact (MK_COMB (@lem6202540) (@lem6202539)). Qed.
Lemma lem6202542 : term587 = term590.
Proof. exact (MK_COMB (@lem6202541) (@lem6202536)). Qed.
Lemma lem6202543 : term591.
Proof. exact (@lem1980255 term65 term102 term90 term102). Qed.
Lemma lem6202545 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6202546 : term156 = term157.
Proof. exact (@lem6202545 (NUMERAL 0) term6). Qed.
Lemma lem6202547 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6202548 (h1 : term158 = (BIT1 0)) : term157 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6202549 : (term158 = (BIT1 0)) = (term157 = True).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6202548 h1) (fun h1 : term157 = True => @lem6202547)). Qed.
Lemma lem6202550 : term157 = True.
Proof. exact (EQ_MP (@lem6202549) (@lem6202547)). Qed.
Lemma lem6202551 : term156 = True.
Proof. exact (TRANS (@lem6202546) (@lem6202550)). Qed.
Lemma lem6202552 : True = term156.
Proof. exact (SYM (@lem6202551)). Qed.
Lemma lem6202553 : term156.
Proof. exact (EQ_MP (@lem6202552) (@lem0)). Qed.
Lemma lem6202554 : term592.
Proof. exact (@lem6202543 (@lem6202553)). Qed.
Lemma lem6202556 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6202557 : term156 = term157.
Proof. exact (@lem6202556 (NUMERAL 0) term6). Qed.
Lemma lem6202558 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6202559 (h1 : term158 = (BIT1 0)) : term157 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6202560 : (term158 = (BIT1 0)) = (term157 = True).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6202559 h1) (fun h1 : term157 = True => @lem6202558)). Qed.
Lemma lem6202561 : term157 = True.
Proof. exact (EQ_MP (@lem6202560) (@lem6202558)). Qed.
Lemma lem6202562 : term156 = True.
Proof. exact (TRANS (@lem6202557) (@lem6202561)). Qed.
Lemma lem6202563 : True = term156.
Proof. exact (SYM (@lem6202562)). Qed.
Lemma lem6202564 : term156.
Proof. exact (EQ_MP (@lem6202563) (@lem0)). Qed.
Lemma lem6202565 : term590 = term593.
Proof. exact (@lem6202554 (@lem6202564)). Qed.
Lemma lem6202567 (m : nat) (n : nat) : (term130 m n) = (term131 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6202568 : term237 = term236.
Proof. exact (@lem6202567 term22 term6). Qed.
Lemma lem6202569 : term35 = term20.
Proof. exact (@lem996237 term20). Qed.
Lemma lem6202570 : (term35 = term20) = (term36 = term22).
Proof. exact (@lem1007663 term20 (BIT1 0) term20). Qed.
Lemma lem6202571 : term36 = term22.
Proof. exact (EQ_MP (@lem6202570) (@lem6202569)). Qed.
Lemma lem6202572 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6202573 : term236 = term90.
Proof. exact (MK_COMB (@lem6202572) (@lem6202571)). Qed.
Lemma lem6202574 : term237 = term90.
Proof. exact (TRANS (@lem6202568) (@lem6202573)). Qed.
Lemma lem6202576 (x : nat) : (term245 x) = term65.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem6202577 : term244 = term65.
Proof. exact (@lem6202576 term6). Qed.
Lemma lem6202578 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem6202579 : term594 = term588.
Proof. exact (MK_COMB (@lem6202578) (@lem6202577)). Qed.
Lemma lem6202580 : term593 = term587.
Proof. exact (MK_COMB (@lem6202579) (@lem6202574)). Qed.
Lemma lem6202582 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6202583 : term587 = term595.
Proof. exact (@lem6202582 (NUMERAL 0) term22). Qed.
Lemma lem6202584 : term596 = term20.
Proof. exact (@lem912803). Qed.
Lemma lem6202585 (h1 : term596 = term20) : term595 = True.
Proof. exact (@lem1009824 (BIT1 0) 0 term20 h1). Qed.
Lemma lem6202586 : (term596 = term20) = (term595 = True).
Proof. exact (prop_ext (fun h1 : term596 = term20 => @lem6202585 h1) (fun h1 : term595 = True => @lem6202584)). Qed.
Lemma lem6202587 : term595 = True.
Proof. exact (EQ_MP (@lem6202586) (@lem6202584)). Qed.
Lemma lem6202588 : term587 = True.
Proof. exact (TRANS (@lem6202583) (@lem6202587)). Qed.
Lemma lem6202589 : term593 = True.
Proof. exact (TRANS (@lem6202580) (@lem6202588)). Qed.
Lemma lem6202590 : term590 = True.
Proof. exact (TRANS (@lem6202565) (@lem6202589)). Qed.
Lemma lem6202591 : term587 = True.
Proof. exact (TRANS (@lem6202542) (@lem6202590)). Qed.
Lemma lem6202592 : term586 = True.
Proof. exact (TRANS (@lem6202533) (@lem6202591)). Qed.
Lemma lem6202593 : True = term586.
Proof. exact (SYM (@lem6202592)). Qed.
Lemma lem6202594 : term586.
Proof. exact (EQ_MP (@lem6202593) (@lem0)). Qed.
Lemma lem6202595 (_79017 : int) (_79018 : int) (h1 : term735 _79017 _79018) : term736 _79017 _79018.
Proof. exact (conj (@lem6202594) (@lem6202530 _79017 _79018 h1)). Qed.
Lemma lem6202597 (x : real) (y : real) : term598 x y.
Proof. exact (proj1 (@lem1988332 x y)). Qed.
Lemma lem6202598 (_79017 : int) (_79018 : int) : term737 _79017 _79018.
Proof. exact (@lem6202597 term90 (term523 _79017 _79018)). Qed.
Lemma lem6202599 (_79017 : int) (_79018 : int) (h1 : term735 _79017 _79018) : term738 _79017 _79018.
Proof. exact (@lem6202598 _79017 _79018 (@lem6202595 _79017 _79018 h1)). Qed.
Lemma lem6202600 (_79017 : int) (_79018 : int) : (term739 _79017 _79018) = (term740 _79017 _79018).
Proof. exact (@lem1982781 (real_of_int _79017) term90 (term522 _79018)). Qed.
Lemma lem6202601 (_79018 : int) : (term741 _79018) = (term742 _79018).
Proof. exact (@lem1982781 (term541 _79018) term90 term212). Qed.
Lemma lem6202603 (x : nat) : (term121 x) = (term122 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem6202604 : term212 = term215.
Proof. exact (@lem6202603 term22). Qed.
Lemma lem6202606 (x : nat) : (real_of_num x) = (term119 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6202607 : term90 = term204.
Proof. exact (@lem6202606 term22). Qed.
Lemma lem6202608 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem6202609 : term92 = term605.
Proof. exact (MK_COMB (@lem6202608) (@lem6202607)). Qed.
Lemma lem6202610 : term623 = term624.
Proof. exact (MK_COMB (@lem6202609) (@lem6202604)). Qed.
Lemma lem6202611 : term624 = term625.
Proof. exact (@lem1981613 term90 term212 term102 term102). Qed.
Lemma lem6202613 (m : nat) (n : nat) : (term130 m n) = (term131 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6202614 : term132 = term133.
Proof. exact (@lem6202613 term6 term6). Qed.
Lemma lem6202615 : (term134 = (BIT1 0)) = (term135 = term6).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6202616 : term135 = term6.
Proof. exact (EQ_MP (@lem6202615) (@lem940073)). Qed.
Lemma lem6202617 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6202618 : term133 = term102.
Proof. exact (MK_COMB (@lem6202617) (@lem6202616)). Qed.
Lemma lem6202619 : term132 = term102.
Proof. exact (TRANS (@lem6202614) (@lem6202618)). Qed.
Lemma lem6202621 (m : nat) (n : nat) : (term609 m n) = (term193 m n).
Proof. exact (proj2 (@lem1367247 m n)). Qed.
Lemma lem6202622 : term623 = term626.
Proof. exact (@lem6202621 term22 term22). Qed.
Lemma lem6202623 : (term134 = (BIT1 0)) = (term627 = term170).
Proof. exact (@lem940532 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6202624 : term627 = term170.
Proof. exact (EQ_MP (@lem6202623) (@lem940073)). Qed.
Lemma lem6202625 : (term627 = term170) = (term628 = term172).
Proof. exact (@lem1008952 term20 term170). Qed.
Lemma lem6202626 : term628 = term172.
Proof. exact (EQ_MP (@lem6202625) (@lem6202624)). Qed.
Lemma lem6202627 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6202628 : term629 = term154.
Proof. exact (MK_COMB (@lem6202627) (@lem6202626)). Qed.
Lemma lem6202629 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem6202630 : term626 = term198.
Proof. exact (MK_COMB (@lem6202629) (@lem6202628)). Qed.
Lemma lem6202631 : term623 = term198.
Proof. exact (TRANS (@lem6202622) (@lem6202630)). Qed.
Lemma lem6202632 : real_div = real_div.
Proof. exact (eq_refl real_div). Qed.
Lemma lem6202633 : term630 = term200.
Proof. exact (MK_COMB (@lem6202632) (@lem6202631)). Qed.
Lemma lem6202634 : term625 = term201.
Proof. exact (MK_COMB (@lem6202633) (@lem6202619)). Qed.
Lemma lem6202635 : term624 = term201.
Proof. exact (TRANS (@lem6202611) (@lem6202634)). Qed.
Lemma lem6202636 : term623 = term201.
Proof. exact (TRANS (@lem6202610) (@lem6202635)). Qed.
Lemma lem6202638 (x : real) : (term139 x) = x.
Proof. exact (EQ_MP (@lem1982628 x) (@lem1982627 x)). Qed.
Lemma lem6202639 : term201 = term198.
Proof. exact (@lem6202638 term198). Qed.
Lemma lem6202640 : term623 = term198.
Proof. exact (TRANS (@lem6202636) (@lem6202639)). Qed.
Lemma lem6202641 (_79018 : int) : (term743 _79018) = (term744 _79018).
Proof. exact (@lem1982749 term90 term123 (real_of_int _79018)). Qed.
Lemma lem6202643 (x : nat) : (term121 x) = (term122 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem6202644 : term123 = term124.
Proof. exact (@lem6202643 term6). Qed.
Lemma lem6202646 (x : nat) : (real_of_num x) = (term119 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6202647 : term90 = term204.
Proof. exact (@lem6202646 term22). Qed.
Lemma lem6202648 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem6202649 : term92 = term605.
Proof. exact (MK_COMB (@lem6202648) (@lem6202647)). Qed.
Lemma lem6202650 : term745 = term746.
Proof. exact (MK_COMB (@lem6202649) (@lem6202644)). Qed.
Lemma lem6202651 : term746 = term747.
Proof. exact (@lem1981613 term90 term123 term102 term102). Qed.
Lemma lem6202653 (m : nat) (n : nat) : (term130 m n) = (term131 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6202654 : term132 = term133.
Proof. exact (@lem6202653 term6 term6). Qed.
Lemma lem6202655 : (term134 = (BIT1 0)) = (term135 = term6).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6202656 : term135 = term6.
Proof. exact (EQ_MP (@lem6202655) (@lem940073)). Qed.
Lemma lem6202657 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6202658 : term133 = term102.
Proof. exact (MK_COMB (@lem6202657) (@lem6202656)). Qed.
Lemma lem6202659 : term132 = term102.
Proof. exact (TRANS (@lem6202654) (@lem6202658)). Qed.
Lemma lem6202661 (m : nat) (n : nat) : (term609 m n) = (term193 m n).
Proof. exact (proj2 (@lem1367247 m n)). Qed.
Lemma lem6202662 : term745 = term235.
Proof. exact (@lem6202661 term22 term6). Qed.
Lemma lem6202663 : term35 = term20.
Proof. exact (@lem996237 term20). Qed.
Lemma lem6202664 : (term35 = term20) = (term36 = term22).
Proof. exact (@lem1007663 term20 (BIT1 0) term20). Qed.
Lemma lem6202665 : term36 = term22.
Proof. exact (EQ_MP (@lem6202664) (@lem6202663)). Qed.
Lemma lem6202666 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6202667 : term236 = term90.
Proof. exact (MK_COMB (@lem6202666) (@lem6202665)). Qed.
Lemma lem6202668 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem6202669 : term235 = term212.
Proof. exact (MK_COMB (@lem6202668) (@lem6202667)). Qed.
Lemma lem6202670 : term745 = term212.
Proof. exact (TRANS (@lem6202662) (@lem6202669)). Qed.
Lemma lem6202671 : real_div = real_div.
Proof. exact (eq_refl real_div). Qed.
Lemma lem6202672 : term748 = term214.
Proof. exact (MK_COMB (@lem6202671) (@lem6202670)). Qed.
Lemma lem6202673 : term747 = term215.
Proof. exact (MK_COMB (@lem6202672) (@lem6202659)). Qed.
Lemma lem6202674 : term746 = term215.
Proof. exact (TRANS (@lem6202651) (@lem6202673)). Qed.
Lemma lem6202675 : term745 = term215.
Proof. exact (TRANS (@lem6202650) (@lem6202674)). Qed.
Lemma lem6202677 (x : real) : (term139 x) = x.
Proof. exact (EQ_MP (@lem1982628 x) (@lem1982627 x)). Qed.
Lemma lem6202678 : term215 = term212.
Proof. exact (@lem6202677 term212). Qed.
Lemma lem6202679 : term745 = term212.
Proof. exact (TRANS (@lem6202675) (@lem6202678)). Qed.
Lemma lem6202680 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem6202681 : term749 = term217.
Proof. exact (MK_COMB (@lem6202680) (@lem6202679)). Qed.
Lemma lem6202682 (_79018 : int) : (real_of_int _79018) = (real_of_int _79018).
Proof. exact (eq_refl (real_of_int _79018)). Qed.
Lemma lem6202683 (_79018 : int) : (term744 _79018) = (term218 _79018).
Proof. exact (MK_COMB (@lem6202681) (@lem6202682 _79018)). Qed.
Lemma lem6202684 (_79018 : int) : (term743 _79018) = (term218 _79018).
Proof. exact (TRANS (@lem6202641 _79018) (@lem6202683 _79018)). Qed.
Lemma lem6202685 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem6202686 (_79018 : int) : (term750 _79018) = (term220 _79018).
Proof. exact (MK_COMB (@lem6202685) (@lem6202684 _79018)). Qed.
Lemma lem6202687 (_79018 : int) : (term742 _79018) = (term221 _79018).
Proof. exact (MK_COMB (@lem6202686 _79018) (@lem6202640)). Qed.
Lemma lem6202688 (_79018 : int) : (term741 _79018) = (term221 _79018).
Proof. exact (TRANS (@lem6202601 _79018) (@lem6202687 _79018)). Qed.
Lemma lem6202691 (_79017 : int) : (term95 _79017) = (term95 _79017).
Proof. exact (eq_refl (term95 _79017)). Qed.
Lemma lem6202692 (_79017 : int) (_79018 : int) : (term740 _79017 _79018) = (term751 _79017 _79018).
Proof. exact (MK_COMB (@lem6202691 _79017) (@lem6202688 _79018)). Qed.
Lemma lem6202693 (_79017 : int) (_79018 : int) : (term739 _79017 _79018) = (term751 _79017 _79018).
Proof. exact (TRANS (@lem6202600 _79017 _79018) (@lem6202692 _79017 _79018)). Qed.
Lemma lem6202694 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem6202695 (_79017 : int) (_79018 : int) : (term752 _79017 _79018) = (term753 _79017 _79018).
Proof. exact (MK_COMB (@lem6202694) (@lem6202693 _79017 _79018)). Qed.
Lemma lem6202696 : term65 = term65.
Proof. exact (eq_refl term65). Qed.
Lemma lem6202697 (_79017 : int) (_79018 : int) : (term738 _79017 _79018) = (term754 _79017 _79018).
Proof. exact (MK_COMB (@lem6202695 _79017 _79018) (@lem6202696)). Qed.
Lemma lem6202698 (_79017 : int) (_79018 : int) (h1 : term735 _79017 _79018) : term754 _79017 _79018.
Proof. exact (EQ_MP (@lem6202697 _79017 _79018) (@lem6202599 _79017 _79018 h1)). Qed.
Lemma lem6202700 (y : real) (x : real) : (real_gt x y) = (real_lt y x).
Proof. exact (EQ_MP (@lem1980266 y x) (@lem1980265 y x)). Qed.
Lemma lem6202701 : term755 = term156.
Proof. exact (@lem6202700 term65 term102). Qed.
Lemma lem6202703 (x : nat) : (real_of_num x) = (term119 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6202704 : term102 = term147.
Proof. exact (@lem6202703 term6). Qed.
Lemma lem6202706 (x : nat) : (real_of_num x) = (term119 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6202707 : term65 = term120.
Proof. exact (@lem6202706 (NUMERAL 0)). Qed.
Lemma lem6202708 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem6202709 : term588 = term589.
Proof. exact (MK_COMB (@lem6202708) (@lem6202707)). Qed.
Lemma lem6202710 : term156 = term756.
Proof. exact (MK_COMB (@lem6202709) (@lem6202704)). Qed.
Lemma lem6202711 : term757.
Proof. exact (@lem1980255 term65 term102 term102 term102). Qed.
Lemma lem6202713 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6202714 : term156 = term157.
Proof. exact (@lem6202713 (NUMERAL 0) term6). Qed.
Lemma lem6202715 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6202716 (h1 : term158 = (BIT1 0)) : term157 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6202717 : (term158 = (BIT1 0)) = (term157 = True).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6202716 h1) (fun h1 : term157 = True => @lem6202715)). Qed.
Lemma lem6202718 : term157 = True.
Proof. exact (EQ_MP (@lem6202717) (@lem6202715)). Qed.
Lemma lem6202719 : term156 = True.
Proof. exact (TRANS (@lem6202714) (@lem6202718)). Qed.
Lemma lem6202720 : True = term156.
Proof. exact (SYM (@lem6202719)). Qed.
Lemma lem6202721 : term156.
Proof. exact (EQ_MP (@lem6202720) (@lem0)). Qed.
Lemma lem6202722 : term758.
Proof. exact (@lem6202711 (@lem6202721)). Qed.
Lemma lem6202724 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6202725 : term156 = term157.
Proof. exact (@lem6202724 (NUMERAL 0) term6). Qed.
Lemma lem6202726 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6202727 (h1 : term158 = (BIT1 0)) : term157 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6202728 : (term158 = (BIT1 0)) = (term157 = True).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6202727 h1) (fun h1 : term157 = True => @lem6202726)). Qed.
Lemma lem6202729 : term157 = True.
Proof. exact (EQ_MP (@lem6202728) (@lem6202726)). Qed.
Lemma lem6202730 : term156 = True.
Proof. exact (TRANS (@lem6202725) (@lem6202729)). Qed.
Lemma lem6202731 : True = term156.
Proof. exact (SYM (@lem6202730)). Qed.
Lemma lem6202732 : term156.
Proof. exact (EQ_MP (@lem6202731) (@lem0)). Qed.
Lemma lem6202733 : term756 = term759.
Proof. exact (@lem6202722 (@lem6202732)). Qed.
Lemma lem6202735 (m : nat) (n : nat) : (term130 m n) = (term131 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6202736 : term132 = term133.
Proof. exact (@lem6202735 term6 term6). Qed.
Lemma lem6202737 : (term134 = (BIT1 0)) = (term135 = term6).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6202738 : term135 = term6.
Proof. exact (EQ_MP (@lem6202737) (@lem940073)). Qed.
Lemma lem6202739 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6202740 : term133 = term102.
Proof. exact (MK_COMB (@lem6202739) (@lem6202738)). Qed.
Lemma lem6202741 : term132 = term102.
Proof. exact (TRANS (@lem6202736) (@lem6202740)). Qed.
Lemma lem6202743 (x : nat) : (term245 x) = term65.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem6202744 : term244 = term65.
Proof. exact (@lem6202743 term6). Qed.
Lemma lem6202745 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem6202746 : term594 = term588.
Proof. exact (MK_COMB (@lem6202745) (@lem6202744)). Qed.
Lemma lem6202747 : term759 = term156.
Proof. exact (MK_COMB (@lem6202746) (@lem6202741)). Qed.
Lemma lem6202749 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6202750 : term156 = term157.
Proof. exact (@lem6202749 (NUMERAL 0) term6). Qed.
Lemma lem6202751 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6202752 (h1 : term158 = (BIT1 0)) : term157 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6202753 : (term158 = (BIT1 0)) = (term157 = True).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6202752 h1) (fun h1 : term157 = True => @lem6202751)). Qed.
Lemma lem6202754 : term157 = True.
Proof. exact (EQ_MP (@lem6202753) (@lem6202751)). Qed.
Lemma lem6202755 : term156 = True.
Proof. exact (TRANS (@lem6202750) (@lem6202754)). Qed.
Lemma lem6202756 : term759 = True.
Proof. exact (TRANS (@lem6202747) (@lem6202755)). Qed.
Lemma lem6202757 : term756 = True.
Proof. exact (TRANS (@lem6202733) (@lem6202756)). Qed.
Lemma lem6202758 : term156 = True.
Proof. exact (TRANS (@lem6202710) (@lem6202757)). Qed.
Lemma lem6202759 : term755 = True.
Proof. exact (TRANS (@lem6202701) (@lem6202758)). Qed.
Lemma lem6202760 : True = term755.
Proof. exact (SYM (@lem6202759)). Qed.
Lemma lem6202761 : term755.
Proof. exact (EQ_MP (@lem6202760) (@lem0)). Qed.
Lemma lem6202762 (_79017 : int) (_79018 : int) (h1 : term735 _79017 _79018) : term760 _79017 _79018.
Proof. exact (conj (@lem6202761) (@lem6202529 _79017 _79018 h1)). Qed.
Lemma lem6202764 (x : real) (y : real) : term598 x y.
Proof. exact (proj1 (@lem1988332 x y)). Qed.
Lemma lem6202765 (_79017 : int) (_79018 : int) : term761 _79017 _79018.
Proof. exact (@lem6202764 term102 (term533 _79017 _79018)). Qed.
Lemma lem6202766 (_79017 : int) (_79018 : int) (h1 : term735 _79017 _79018) : term762 _79017 _79018.
Proof. exact (@lem6202765 _79017 _79018 (@lem6202762 _79017 _79018 h1)). Qed.
Lemma lem6202767 (_79017 : int) (_79018 : int) : (term763 _79017 _79018) = (term533 _79017 _79018).
Proof. exact (@lem1982733 (term533 _79017 _79018)). Qed.
Lemma lem6202768 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem6202769 (_79017 : int) (_79018 : int) : (term764 _79017 _79018) = (term535 _79017 _79018).
Proof. exact (MK_COMB (@lem6202768) (@lem6202767 _79017 _79018)). Qed.
Lemma lem6202770 : term65 = term65.
Proof. exact (eq_refl term65). Qed.
Lemma lem6202771 (_79017 : int) (_79018 : int) : (term762 _79017 _79018) = (term536 _79017 _79018).
Proof. exact (MK_COMB (@lem6202769 _79017 _79018) (@lem6202770)). Qed.
Lemma lem6202772 (_79017 : int) (_79018 : int) (h1 : term735 _79017 _79018) : term536 _79017 _79018.
Proof. exact (EQ_MP (@lem6202771 _79017 _79018) (@lem6202766 _79017 _79018 h1)). Qed.
Lemma lem6202773 (_79017 : int) (_79018 : int) (h1 : term735 _79017 _79018) : term765 _79017 _79018.
Proof. exact (conj (@lem6202772 _79017 _79018 h1) (@lem6202698 _79017 _79018 h1)). Qed.
Lemma lem6202775 (x : real) (y : real) : term665 x y.
Proof. exact (proj1 (@lem1988342 x y)). Qed.
Lemma lem6202776 (_79017 : int) (_79018 : int) : term766 _79017 _79018.
Proof. exact (@lem6202775 (term533 _79017 _79018) (term751 _79017 _79018)). Qed.
Lemma lem6202777 (_79017 : int) (_79018 : int) (h1 : term735 _79017 _79018) : term767 _79017 _79018.
Proof. exact (@lem6202776 _79017 _79018 (@lem6202773 _79017 _79018 h1)). Qed.
Lemma lem6202778 (_79017 : int) (_79018 : int) : (term768 _79017 _79018) = (term769 _79017 _79018).
Proof. exact (@lem1982753 (term218 _79017) (term93 _79017) (term310 _79018) (term221 _79018)). Qed.
Lemma lem6202779 (_79017 : int) : (term770 _79017) = (term771 _79017).
Proof. exact (@lem1982711 term212 term90 (real_of_int _79017)). Qed.
Lemma lem6202781 (x : nat) : (real_of_num x) = (term119 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6202782 : term90 = term204.
Proof. exact (@lem6202781 term22). Qed.
Lemma lem6202784 (x : nat) : (term121 x) = (term122 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem6202785 : term212 = term215.
Proof. exact (@lem6202784 term22). Qed.
Lemma lem6202786 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem6202787 : term772 = term773.
Proof. exact (MK_COMB (@lem6202786) (@lem6202785)). Qed.
Lemma lem6202788 : term774 = term775.
Proof. exact (MK_COMB (@lem6202787) (@lem6202782)). Qed.
Lemma lem6202789 : term776.
Proof. exact (@lem1981473 term212 term102 term90 term102 term65 term102). Qed.
Lemma lem6202791 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6202792 : term156 = term157.
Proof. exact (@lem6202791 (NUMERAL 0) term6). Qed.
Lemma lem6202793 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6202794 (h1 : term158 = (BIT1 0)) : term157 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6202795 : (term158 = (BIT1 0)) = (term157 = True).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6202794 h1) (fun h1 : term157 = True => @lem6202793)). Qed.
Lemma lem6202796 : term157 = True.
Proof. exact (EQ_MP (@lem6202795) (@lem6202793)). Qed.
Lemma lem6202797 : term156 = True.
Proof. exact (TRANS (@lem6202792) (@lem6202796)). Qed.
Lemma lem6202798 : True = term156.
Proof. exact (SYM (@lem6202797)). Qed.
Lemma lem6202799 : term156.
Proof. exact (EQ_MP (@lem6202798) (@lem0)). Qed.
Lemma lem6202800 : term777.
Proof. exact (@lem6202789 (@lem6202799)). Qed.
Lemma lem6202802 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6202803 : term156 = term157.
Proof. exact (@lem6202802 (NUMERAL 0) term6). Qed.
Lemma lem6202804 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6202805 (h1 : term158 = (BIT1 0)) : term157 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6202806 : (term158 = (BIT1 0)) = (term157 = True).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6202805 h1) (fun h1 : term157 = True => @lem6202804)). Qed.
Lemma lem6202807 : term157 = True.
Proof. exact (EQ_MP (@lem6202806) (@lem6202804)). Qed.
Lemma lem6202808 : term156 = True.
Proof. exact (TRANS (@lem6202803) (@lem6202807)). Qed.
Lemma lem6202809 : True = term156.
Proof. exact (SYM (@lem6202808)). Qed.
Lemma lem6202810 : term156.
Proof. exact (EQ_MP (@lem6202809) (@lem0)). Qed.
Lemma lem6202811 : term778.
Proof. exact (@lem6202800 (@lem6202810)). Qed.
Lemma lem6202813 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6202814 : term156 = term157.
Proof. exact (@lem6202813 (NUMERAL 0) term6). Qed.
Lemma lem6202815 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6202816 (h1 : term158 = (BIT1 0)) : term157 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6202817 : (term158 = (BIT1 0)) = (term157 = True).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6202816 h1) (fun h1 : term157 = True => @lem6202815)). Qed.
Lemma lem6202818 : term157 = True.
Proof. exact (EQ_MP (@lem6202817) (@lem6202815)). Qed.
Lemma lem6202819 : term156 = True.
Proof. exact (TRANS (@lem6202814) (@lem6202818)). Qed.
Lemma lem6202820 : True = term156.
Proof. exact (SYM (@lem6202819)). Qed.
Lemma lem6202821 : term156.
Proof. exact (EQ_MP (@lem6202820) (@lem0)). Qed.
Lemma lem6202822 : term779.
Proof. exact (@lem6202811 (@lem6202821)). Qed.
Lemma lem6202824 (m : nat) (n : nat) : (term130 m n) = (term131 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6202825 : term237 = term236.
Proof. exact (@lem6202824 term22 term6). Qed.
Lemma lem6202826 : term35 = term20.
Proof. exact (@lem996237 term20). Qed.
Lemma lem6202827 : (term35 = term20) = (term36 = term22).
Proof. exact (@lem1007663 term20 (BIT1 0) term20). Qed.
Lemma lem6202828 : term36 = term22.
Proof. exact (EQ_MP (@lem6202827) (@lem6202826)). Qed.
Lemma lem6202829 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6202830 : term236 = term90.
Proof. exact (MK_COMB (@lem6202829) (@lem6202828)). Qed.
Lemma lem6202831 : term237 = term90.
Proof. exact (TRANS (@lem6202825) (@lem6202830)). Qed.
Lemma lem6202833 (m : nat) (n : nat) : (term192 m n) = (term193 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem6202834 : term234 = term235.
Proof. exact (@lem6202833 term22 term6). Qed.
Lemma lem6202835 : term35 = term20.
Proof. exact (@lem996237 term20). Qed.
Lemma lem6202836 : (term35 = term20) = (term36 = term22).
Proof. exact (@lem1007663 term20 (BIT1 0) term20). Qed.
Lemma lem6202837 : term36 = term22.
Proof. exact (EQ_MP (@lem6202836) (@lem6202835)). Qed.
Lemma lem6202838 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6202839 : term236 = term90.
Proof. exact (MK_COMB (@lem6202838) (@lem6202837)). Qed.
Lemma lem6202840 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem6202841 : term235 = term212.
Proof. exact (MK_COMB (@lem6202840) (@lem6202839)). Qed.
Lemma lem6202842 : term234 = term212.
Proof. exact (TRANS (@lem6202834) (@lem6202841)). Qed.
Lemma lem6202843 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem6202844 : term780 = term772.
Proof. exact (MK_COMB (@lem6202843) (@lem6202842)). Qed.
Lemma lem6202845 : term781 = term774.
Proof. exact (MK_COMB (@lem6202844) (@lem6202831)). Qed.
Lemma lem6202847 (m : nat) : (term682 m) = term65.
Proof. exact (proj1 (@lem1367303 m)). Qed.
Lemma lem6202848 : term774 = term65.
Proof. exact (@lem6202847 term22). Qed.
Lemma lem6202849 : term781 = term65.
Proof. exact (TRANS (@lem6202845) (@lem6202848)). Qed.
Lemma lem6202850 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem6202851 : term782 = term242.
Proof. exact (MK_COMB (@lem6202850) (@lem6202849)). Qed.
Lemma lem6202852 : term102 = term102.
Proof. exact (eq_refl term102). Qed.
Lemma lem6202853 : term783 = term244.
Proof. exact (MK_COMB (@lem6202851) (@lem6202852)). Qed.
Lemma lem6202855 (x : nat) : (term245 x) = term65.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem6202856 : term244 = term65.
Proof. exact (@lem6202855 term6). Qed.
Lemma lem6202857 : term783 = term65.
Proof. exact (TRANS (@lem6202853) (@lem6202856)). Qed.
Lemma lem6202859 (m : nat) (n : nat) : (term130 m n) = (term131 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6202860 : term132 = term133.
Proof. exact (@lem6202859 term6 term6). Qed.
Lemma lem6202861 : (term134 = (BIT1 0)) = (term135 = term6).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6202862 : term135 = term6.
Proof. exact (EQ_MP (@lem6202861) (@lem940073)). Qed.
Lemma lem6202863 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6202864 : term133 = term102.
Proof. exact (MK_COMB (@lem6202863) (@lem6202862)). Qed.
Lemma lem6202865 : term132 = term102.
Proof. exact (TRANS (@lem6202860) (@lem6202864)). Qed.
Lemma lem6202866 : term242 = term242.
Proof. exact (eq_refl term242). Qed.
Lemma lem6202867 : term246 = term244.
Proof. exact (MK_COMB (@lem6202866) (@lem6202865)). Qed.
Lemma lem6202869 (x : nat) : (term245 x) = term65.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem6202870 : term244 = term65.
Proof. exact (@lem6202869 term6). Qed.
Lemma lem6202871 : term246 = term65.
Proof. exact (TRANS (@lem6202867) (@lem6202870)). Qed.
Lemma lem6202872 : term65 = term246.
Proof. exact (SYM (@lem6202871)). Qed.
Lemma lem6202873 : term783 = term246.
Proof. exact (TRANS (@lem6202857) (@lem6202872)). Qed.
Lemma lem6202874 : term775 = term120.
Proof. exact (@lem6202822 (@lem6202873)). Qed.
Lemma lem6202875 : term774 = term120.
Proof. exact (TRANS (@lem6202788) (@lem6202874)). Qed.
Lemma lem6202877 (x : real) : (term139 x) = x.
Proof. exact (EQ_MP (@lem1981475 x) (@lem1981474 x)). Qed.
Lemma lem6202878 : term120 = term65.
Proof. exact (@lem6202877 term65). Qed.
Lemma lem6202879 : term774 = term65.
Proof. exact (TRANS (@lem6202875) (@lem6202878)). Qed.
Lemma lem6202880 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem6202881 : term784 = term242.
Proof. exact (MK_COMB (@lem6202880) (@lem6202879)). Qed.
Lemma lem6202882 (_79017 : int) : (real_of_int _79017) = (real_of_int _79017).
Proof. exact (eq_refl (real_of_int _79017)). Qed.
Lemma lem6202883 (_79017 : int) : (term771 _79017) = (term248 _79017).
Proof. exact (MK_COMB (@lem6202881) (@lem6202882 _79017)). Qed.
Lemma lem6202884 (_79017 : int) : (term770 _79017) = (term248 _79017).
Proof. exact (TRANS (@lem6202779 _79017) (@lem6202883 _79017)). Qed.
Lemma lem6202885 (_79017 : int) : (term248 _79017) = term65.
Proof. exact (@lem1982719 (real_of_int _79017)). Qed.
Lemma lem6202886 (_79017 : int) : (term770 _79017) = term65.
Proof. exact (TRANS (@lem6202884 _79017) (@lem6202885 _79017)). Qed.
Lemma lem6202887 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem6202888 (_79017 : int) : (term785 _79017) = term250.
Proof. exact (MK_COMB (@lem6202887) (@lem6202886 _79017)). Qed.
Lemma lem6202889 (_79018 : int) : (term786 _79018) = (term787 _79018).
Proof. exact (@lem1982753 (term93 _79018) (term218 _79018) term90 term198). Qed.
Lemma lem6202890 (_79018 : int) : (term224 _79018) = (term225 _79018).
Proof. exact (@lem1982711 term90 term212 (real_of_int _79018)). Qed.
Lemma lem6202892 (x : nat) : (term121 x) = (term122 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem6202893 : term212 = term215.
Proof. exact (@lem6202892 term22). Qed.
Lemma lem6202895 (x : nat) : (real_of_num x) = (term119 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6202896 : term90 = term204.
Proof. exact (@lem6202895 term22). Qed.
Lemma lem6202897 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem6202898 : term226 = term227.
Proof. exact (MK_COMB (@lem6202897) (@lem6202896)). Qed.
Lemma lem6202899 : term228 = term229.
Proof. exact (MK_COMB (@lem6202898) (@lem6202893)). Qed.
Lemma lem6202900 : term230.
Proof. exact (@lem1981473 term90 term102 term212 term102 term65 term102). Qed.
Lemma lem6202902 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6202903 : term156 = term157.
Proof. exact (@lem6202902 (NUMERAL 0) term6). Qed.
Lemma lem6202904 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6202905 (h1 : term158 = (BIT1 0)) : term157 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6202906 : (term158 = (BIT1 0)) = (term157 = True).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6202905 h1) (fun h1 : term157 = True => @lem6202904)). Qed.
Lemma lem6202907 : term157 = True.
Proof. exact (EQ_MP (@lem6202906) (@lem6202904)). Qed.
Lemma lem6202908 : term156 = True.
Proof. exact (TRANS (@lem6202903) (@lem6202907)). Qed.
Lemma lem6202909 : True = term156.
Proof. exact (SYM (@lem6202908)). Qed.
Lemma lem6202910 : term156.
Proof. exact (EQ_MP (@lem6202909) (@lem0)). Qed.
Lemma lem6202911 : term231.
Proof. exact (@lem6202900 (@lem6202910)). Qed.
Lemma lem6202913 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6202914 : term156 = term157.
Proof. exact (@lem6202913 (NUMERAL 0) term6). Qed.
Lemma lem6202915 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6202916 (h1 : term158 = (BIT1 0)) : term157 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6202917 : (term158 = (BIT1 0)) = (term157 = True).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6202916 h1) (fun h1 : term157 = True => @lem6202915)). Qed.
Lemma lem6202918 : term157 = True.
Proof. exact (EQ_MP (@lem6202917) (@lem6202915)). Qed.
Lemma lem6202919 : term156 = True.
Proof. exact (TRANS (@lem6202914) (@lem6202918)). Qed.
Lemma lem6202920 : True = term156.
Proof. exact (SYM (@lem6202919)). Qed.
Lemma lem6202921 : term156.
Proof. exact (EQ_MP (@lem6202920) (@lem0)). Qed.
Lemma lem6202922 : term232.
Proof. exact (@lem6202911 (@lem6202921)). Qed.
Lemma lem6202924 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6202925 : term156 = term157.
Proof. exact (@lem6202924 (NUMERAL 0) term6). Qed.
Lemma lem6202926 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6202927 (h1 : term158 = (BIT1 0)) : term157 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6202928 : (term158 = (BIT1 0)) = (term157 = True).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6202927 h1) (fun h1 : term157 = True => @lem6202926)). Qed.
Lemma lem6202929 : term157 = True.
Proof. exact (EQ_MP (@lem6202928) (@lem6202926)). Qed.
Lemma lem6202930 : term156 = True.
Proof. exact (TRANS (@lem6202925) (@lem6202929)). Qed.
Lemma lem6202931 : True = term156.
Proof. exact (SYM (@lem6202930)). Qed.
Lemma lem6202932 : term156.
Proof. exact (EQ_MP (@lem6202931) (@lem0)). Qed.
Lemma lem6202933 : term233.
Proof. exact (@lem6202922 (@lem6202932)). Qed.
Lemma lem6202935 (m : nat) (n : nat) : (term192 m n) = (term193 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem6202936 : term234 = term235.
Proof. exact (@lem6202935 term22 term6). Qed.
Lemma lem6202937 : term35 = term20.
Proof. exact (@lem996237 term20). Qed.
Lemma lem6202938 : (term35 = term20) = (term36 = term22).
Proof. exact (@lem1007663 term20 (BIT1 0) term20). Qed.
Lemma lem6202939 : term36 = term22.
Proof. exact (EQ_MP (@lem6202938) (@lem6202937)). Qed.
Lemma lem6202940 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6202941 : term236 = term90.
Proof. exact (MK_COMB (@lem6202940) (@lem6202939)). Qed.
Lemma lem6202942 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem6202943 : term235 = term212.
Proof. exact (MK_COMB (@lem6202942) (@lem6202941)). Qed.
Lemma lem6202944 : term234 = term212.
Proof. exact (TRANS (@lem6202936) (@lem6202943)). Qed.
Lemma lem6202946 (m : nat) (n : nat) : (term130 m n) = (term131 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6202947 : term237 = term236.
Proof. exact (@lem6202946 term22 term6). Qed.
Lemma lem6202948 : term35 = term20.
Proof. exact (@lem996237 term20). Qed.
Lemma lem6202949 : (term35 = term20) = (term36 = term22).
Proof. exact (@lem1007663 term20 (BIT1 0) term20). Qed.
Lemma lem6202950 : term36 = term22.
Proof. exact (EQ_MP (@lem6202949) (@lem6202948)). Qed.
Lemma lem6202951 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6202952 : term236 = term90.
Proof. exact (MK_COMB (@lem6202951) (@lem6202950)). Qed.
Lemma lem6202953 : term237 = term90.
Proof. exact (TRANS (@lem6202947) (@lem6202952)). Qed.
Lemma lem6202954 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem6202955 : term238 = term226.
Proof. exact (MK_COMB (@lem6202954) (@lem6202953)). Qed.
Lemma lem6202956 : term239 = term228.
Proof. exact (MK_COMB (@lem6202955) (@lem6202944)). Qed.
Lemma lem6202958 (m : nat) : (term240 m) = term65.
Proof. exact (proj2 (@lem1367303 m)). Qed.
Lemma lem6202959 : term228 = term65.
Proof. exact (@lem6202958 term22). Qed.
Lemma lem6202960 : term239 = term65.
Proof. exact (TRANS (@lem6202956) (@lem6202959)). Qed.
Lemma lem6202961 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem6202962 : term241 = term242.
Proof. exact (MK_COMB (@lem6202961) (@lem6202960)). Qed.
Lemma lem6202963 : term102 = term102.
Proof. exact (eq_refl term102). Qed.
Lemma lem6202964 : term243 = term244.
Proof. exact (MK_COMB (@lem6202962) (@lem6202963)). Qed.
Lemma lem6202966 (x : nat) : (term245 x) = term65.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem6202967 : term244 = term65.
Proof. exact (@lem6202966 term6). Qed.
Lemma lem6202968 : term243 = term65.
Proof. exact (TRANS (@lem6202964) (@lem6202967)). Qed.
Lemma lem6202970 (m : nat) (n : nat) : (term130 m n) = (term131 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6202971 : term132 = term133.
Proof. exact (@lem6202970 term6 term6). Qed.
Lemma lem6202972 : (term134 = (BIT1 0)) = (term135 = term6).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6202973 : term135 = term6.
Proof. exact (EQ_MP (@lem6202972) (@lem940073)). Qed.
Lemma lem6202974 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6202975 : term133 = term102.
Proof. exact (MK_COMB (@lem6202974) (@lem6202973)). Qed.
Lemma lem6202976 : term132 = term102.
Proof. exact (TRANS (@lem6202971) (@lem6202975)). Qed.
Lemma lem6202977 : term242 = term242.
Proof. exact (eq_refl term242). Qed.
Lemma lem6202978 : term246 = term244.
Proof. exact (MK_COMB (@lem6202977) (@lem6202976)). Qed.
Lemma lem6202980 (x : nat) : (term245 x) = term65.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem6202981 : term244 = term65.
Proof. exact (@lem6202980 term6). Qed.
Lemma lem6202982 : term246 = term65.
Proof. exact (TRANS (@lem6202978) (@lem6202981)). Qed.
Lemma lem6202983 : term65 = term246.
Proof. exact (SYM (@lem6202982)). Qed.
Lemma lem6202984 : term243 = term246.
Proof. exact (TRANS (@lem6202968) (@lem6202983)). Qed.
Lemma lem6202985 : term229 = term120.
Proof. exact (@lem6202933 (@lem6202984)). Qed.
Lemma lem6202986 : term228 = term120.
Proof. exact (TRANS (@lem6202899) (@lem6202985)). Qed.
Lemma lem6202988 (x : real) : (term139 x) = x.
Proof. exact (EQ_MP (@lem1981475 x) (@lem1981474 x)). Qed.
Lemma lem6202989 : term120 = term65.
Proof. exact (@lem6202988 term65). Qed.
Lemma lem6202990 : term228 = term65.
Proof. exact (TRANS (@lem6202986) (@lem6202989)). Qed.
Lemma lem6202991 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem6202992 : term247 = term242.
Proof. exact (MK_COMB (@lem6202991) (@lem6202990)). Qed.
Lemma lem6202993 (_79018 : int) : (real_of_int _79018) = (real_of_int _79018).
Proof. exact (eq_refl (real_of_int _79018)). Qed.
Lemma lem6202994 (_79018 : int) : (term225 _79018) = (term248 _79018).
Proof. exact (MK_COMB (@lem6202992) (@lem6202993 _79018)). Qed.
Lemma lem6202995 (_79018 : int) : (term224 _79018) = (term248 _79018).
Proof. exact (TRANS (@lem6202890 _79018) (@lem6202994 _79018)). Qed.
Lemma lem6202996 (_79018 : int) : (term248 _79018) = term65.
Proof. exact (@lem1982719 (real_of_int _79018)). Qed.
Lemma lem6202997 (_79018 : int) : (term224 _79018) = term65.
Proof. exact (TRANS (@lem6202995 _79018) (@lem6202996 _79018)). Qed.
Lemma lem6202998 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem6202999 (_79018 : int) : (term249 _79018) = term250.
Proof. exact (MK_COMB (@lem6202998) (@lem6202997 _79018)). Qed.
Lemma lem6203001 (x : nat) : (term121 x) = (term122 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem6203002 : term198 = term201.
Proof. exact (@lem6203001 term172). Qed.
Lemma lem6203004 (x : nat) : (real_of_num x) = (term119 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6203005 : term90 = term204.
Proof. exact (@lem6203004 term22). Qed.
Lemma lem6203006 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem6203007 : term226 = term227.
Proof. exact (MK_COMB (@lem6203006) (@lem6203005)). Qed.
Lemma lem6203008 : term788 = term789.
Proof. exact (MK_COMB (@lem6203007) (@lem6203002)). Qed.
Lemma lem6203009 : term790.
Proof. exact (@lem1981473 term90 term102 term198 term102 term212 term102). Qed.
Lemma lem6203011 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6203012 : term156 = term157.
Proof. exact (@lem6203011 (NUMERAL 0) term6). Qed.
Lemma lem6203013 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6203014 (h1 : term158 = (BIT1 0)) : term157 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6203015 : (term158 = (BIT1 0)) = (term157 = True).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6203014 h1) (fun h1 : term157 = True => @lem6203013)). Qed.
Lemma lem6203016 : term157 = True.
Proof. exact (EQ_MP (@lem6203015) (@lem6203013)). Qed.
Lemma lem6203017 : term156 = True.
Proof. exact (TRANS (@lem6203012) (@lem6203016)). Qed.
Lemma lem6203018 : True = term156.
Proof. exact (SYM (@lem6203017)). Qed.
Lemma lem6203019 : term156.
Proof. exact (EQ_MP (@lem6203018) (@lem0)). Qed.
Lemma lem6203020 : term791.
Proof. exact (@lem6203009 (@lem6203019)). Qed.
Lemma lem6203022 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6203023 : term156 = term157.
Proof. exact (@lem6203022 (NUMERAL 0) term6). Qed.
Lemma lem6203024 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6203025 (h1 : term158 = (BIT1 0)) : term157 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6203026 : (term158 = (BIT1 0)) = (term157 = True).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6203025 h1) (fun h1 : term157 = True => @lem6203024)). Qed.
Lemma lem6203027 : term157 = True.
Proof. exact (EQ_MP (@lem6203026) (@lem6203024)). Qed.
Lemma lem6203028 : term156 = True.
Proof. exact (TRANS (@lem6203023) (@lem6203027)). Qed.
Lemma lem6203029 : True = term156.
Proof. exact (SYM (@lem6203028)). Qed.
Lemma lem6203030 : term156.
Proof. exact (EQ_MP (@lem6203029) (@lem0)). Qed.
Lemma lem6203031 : term792.
Proof. exact (@lem6203020 (@lem6203030)). Qed.
Lemma lem6203033 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6203034 : term156 = term157.
Proof. exact (@lem6203033 (NUMERAL 0) term6). Qed.
Lemma lem6203035 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6203036 (h1 : term158 = (BIT1 0)) : term157 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6203037 : (term158 = (BIT1 0)) = (term157 = True).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6203036 h1) (fun h1 : term157 = True => @lem6203035)). Qed.
Lemma lem6203038 : term157 = True.
Proof. exact (EQ_MP (@lem6203037) (@lem6203035)). Qed.
Lemma lem6203039 : term156 = True.
Proof. exact (TRANS (@lem6203034) (@lem6203038)). Qed.
Lemma lem6203040 : True = term156.
Proof. exact (SYM (@lem6203039)). Qed.
Lemma lem6203041 : term156.
Proof. exact (EQ_MP (@lem6203040) (@lem0)). Qed.
Lemma lem6203042 : term793.
Proof. exact (@lem6203031 (@lem6203041)). Qed.
Lemma lem6203044 (m : nat) (n : nat) : (term192 m n) = (term193 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem6203045 : term257 = term258.
Proof. exact (@lem6203044 term172 term6). Qed.
Lemma lem6203046 : term178 = term170.
Proof. exact (@lem996237 term170). Qed.
Lemma lem6203047 : (term178 = term170) = (term179 = term172).
Proof. exact (@lem1007663 term170 (BIT1 0) term170). Qed.
Lemma lem6203048 : term179 = term172.
Proof. exact (EQ_MP (@lem6203047) (@lem6203046)). Qed.
Lemma lem6203049 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6203050 : term177 = term154.
Proof. exact (MK_COMB (@lem6203049) (@lem6203048)). Qed.
Lemma lem6203051 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem6203052 : term258 = term198.
Proof. exact (MK_COMB (@lem6203051) (@lem6203050)). Qed.
Lemma lem6203053 : term257 = term198.
Proof. exact (TRANS (@lem6203045) (@lem6203052)). Qed.
Lemma lem6203055 (m : nat) (n : nat) : (term130 m n) = (term131 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6203056 : term237 = term236.
Proof. exact (@lem6203055 term22 term6). Qed.
Lemma lem6203057 : term35 = term20.
Proof. exact (@lem996237 term20). Qed.
Lemma lem6203058 : (term35 = term20) = (term36 = term22).
Proof. exact (@lem1007663 term20 (BIT1 0) term20). Qed.
Lemma lem6203059 : term36 = term22.
Proof. exact (EQ_MP (@lem6203058) (@lem6203057)). Qed.
Lemma lem6203060 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6203061 : term236 = term90.
Proof. exact (MK_COMB (@lem6203060) (@lem6203059)). Qed.
Lemma lem6203062 : term237 = term90.
Proof. exact (TRANS (@lem6203056) (@lem6203061)). Qed.
Lemma lem6203063 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem6203064 : term238 = term226.
Proof. exact (MK_COMB (@lem6203063) (@lem6203062)). Qed.
Lemma lem6203065 : term794 = term788.
Proof. exact (MK_COMB (@lem6203064) (@lem6203053)). Qed.
Lemma lem6203068 : term795 = term212.
Proof. exact (@lem1367771 term22 term22). Qed.
Lemma lem6203069 : term796 = term170.
Proof. exact (@lem706951). Qed.
Lemma lem6203070 : (term796 = term170) = (term797 = term172).
Proof. exact (@lem1006570 term20 term20 term170). Qed.
Lemma lem6203071 : term797 = term172.
Proof. exact (EQ_MP (@lem6203070) (@lem6203069)). Qed.
Lemma lem6203072 : term172 = term797.
Proof. exact (SYM (@lem6203071)). Qed.
Lemma lem6203073 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6203074 : term154 = term798.
Proof. exact (MK_COMB (@lem6203073) (@lem6203072)). Qed.
Lemma lem6203075 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem6203076 : term198 = term799.
Proof. exact (MK_COMB (@lem6203075) (@lem6203074)). Qed.
Lemma lem6203077 : term226 = term226.
Proof. exact (eq_refl term226). Qed.
Lemma lem6203078 : term788 = term795.
Proof. exact (MK_COMB (@lem6203077) (@lem6203076)). Qed.
Lemma lem6203079 : term788 = term212.
Proof. exact (TRANS (@lem6203078) (@lem6203068)). Qed.
Lemma lem6203080 : term794 = term212.
Proof. exact (TRANS (@lem6203065) (@lem6203079)). Qed.
Lemma lem6203081 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem6203082 : term800 = term217.
Proof. exact (MK_COMB (@lem6203081) (@lem6203080)). Qed.
Lemma lem6203083 : term102 = term102.
Proof. exact (eq_refl term102). Qed.
Lemma lem6203084 : term801 = term234.
Proof. exact (MK_COMB (@lem6203082) (@lem6203083)). Qed.
Lemma lem6203086 (m : nat) (n : nat) : (term192 m n) = (term193 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem6203087 : term234 = term235.
Proof. exact (@lem6203086 term22 term6). Qed.
Lemma lem6203088 : term35 = term20.
Proof. exact (@lem996237 term20). Qed.
Lemma lem6203089 : (term35 = term20) = (term36 = term22).
Proof. exact (@lem1007663 term20 (BIT1 0) term20). Qed.
Lemma lem6203090 : term36 = term22.
Proof. exact (EQ_MP (@lem6203089) (@lem6203088)). Qed.
Lemma lem6203091 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6203092 : term236 = term90.
Proof. exact (MK_COMB (@lem6203091) (@lem6203090)). Qed.
Lemma lem6203093 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem6203094 : term235 = term212.
Proof. exact (MK_COMB (@lem6203093) (@lem6203092)). Qed.
Lemma lem6203095 : term234 = term212.
Proof. exact (TRANS (@lem6203087) (@lem6203094)). Qed.
Lemma lem6203096 : term801 = term212.
Proof. exact (TRANS (@lem6203084) (@lem6203095)). Qed.
Lemma lem6203098 (m : nat) (n : nat) : (term130 m n) = (term131 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6203099 : term132 = term133.
Proof. exact (@lem6203098 term6 term6). Qed.
Lemma lem6203100 : (term134 = (BIT1 0)) = (term135 = term6).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6203101 : term135 = term6.
Proof. exact (EQ_MP (@lem6203100) (@lem940073)). Qed.
Lemma lem6203102 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6203103 : term133 = term102.
Proof. exact (MK_COMB (@lem6203102) (@lem6203101)). Qed.
Lemma lem6203104 : term132 = term102.
Proof. exact (TRANS (@lem6203099) (@lem6203103)). Qed.
Lemma lem6203105 : term217 = term217.
Proof. exact (eq_refl term217). Qed.
Lemma lem6203106 : term724 = term234.
Proof. exact (MK_COMB (@lem6203105) (@lem6203104)). Qed.
Lemma lem6203108 (m : nat) (n : nat) : (term192 m n) = (term193 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem6203109 : term234 = term235.
Proof. exact (@lem6203108 term22 term6). Qed.
Lemma lem6203110 : term35 = term20.
Proof. exact (@lem996237 term20). Qed.
Lemma lem6203111 : (term35 = term20) = (term36 = term22).
Proof. exact (@lem1007663 term20 (BIT1 0) term20). Qed.
Lemma lem6203112 : term36 = term22.
Proof. exact (EQ_MP (@lem6203111) (@lem6203110)). Qed.
Lemma lem6203113 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6203114 : term236 = term90.
Proof. exact (MK_COMB (@lem6203113) (@lem6203112)). Qed.
Lemma lem6203115 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem6203116 : term235 = term212.
Proof. exact (MK_COMB (@lem6203115) (@lem6203114)). Qed.
Lemma lem6203117 : term234 = term212.
Proof. exact (TRANS (@lem6203109) (@lem6203116)). Qed.
Lemma lem6203118 : term724 = term212.
Proof. exact (TRANS (@lem6203106) (@lem6203117)). Qed.
Lemma lem6203119 : term212 = term724.
Proof. exact (SYM (@lem6203118)). Qed.
Lemma lem6203120 : term801 = term724.
Proof. exact (TRANS (@lem6203096) (@lem6203119)). Qed.
Lemma lem6203121 : term789 = term215.
Proof. exact (@lem6203042 (@lem6203120)). Qed.
Lemma lem6203122 : term788 = term215.
Proof. exact (TRANS (@lem6203008) (@lem6203121)). Qed.
Lemma lem6203124 (x : real) : (term139 x) = x.
Proof. exact (EQ_MP (@lem1981475 x) (@lem1981474 x)). Qed.
Lemma lem6203125 : term215 = term212.
Proof. exact (@lem6203124 term212). Qed.
Lemma lem6203126 : term788 = term212.
Proof. exact (TRANS (@lem6203122) (@lem6203125)). Qed.
Lemma lem6203127 (_79018 : int) : (term787 _79018) = term725.
Proof. exact (MK_COMB (@lem6202999 _79018) (@lem6203126)). Qed.
Lemma lem6203128 (_79018 : int) : (term786 _79018) = term725.
Proof. exact (TRANS (@lem6202889 _79018) (@lem6203127 _79018)). Qed.
Lemma lem6203129 : term725 = term212.
Proof. exact (@lem1982721 term212). Qed.
Lemma lem6203130 (_79018 : int) : (term786 _79018) = term212.
Proof. exact (TRANS (@lem6203128 _79018) (@lem6203129)). Qed.
Lemma lem6203131 (_79017 : int) (_79018 : int) : (term769 _79017 _79018) = term725.
Proof. exact (MK_COMB (@lem6202888 _79017) (@lem6203130 _79018)). Qed.
Lemma lem6203132 (_79017 : int) (_79018 : int) : (term768 _79017 _79018) = term725.
Proof. exact (TRANS (@lem6202778 _79017 _79018) (@lem6203131 _79017 _79018)). Qed.
Lemma lem6203133 : term725 = term212.
Proof. exact (@lem1982721 term212). Qed.
Lemma lem6203134 (_79017 : int) (_79018 : int) : (term768 _79017 _79018) = term212.
Proof. exact (TRANS (@lem6203132 _79017 _79018) (@lem6203133)). Qed.
Lemma lem6203135 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem6203136 (_79017 : int) (_79018 : int) : (term802 _79017 _79018) = term727.
Proof. exact (MK_COMB (@lem6203135) (@lem6203134 _79017 _79018)). Qed.
Lemma lem6203137 : term65 = term65.
Proof. exact (eq_refl term65). Qed.
Lemma lem6203138 (_79017 : int) (_79018 : int) : (term767 _79017 _79018) = term728.
Proof. exact (MK_COMB (@lem6203136 _79017 _79018) (@lem6203137)). Qed.
Lemma lem6203139 (_79017 : int) (_79018 : int) (h1 : term735 _79017 _79018) : term728.
Proof. exact (EQ_MP (@lem6203138 _79017 _79018) (@lem6202777 _79017 _79018 h1)). Qed.
Lemma lem6203141 (y : real) (x : real) : (real_ge x y) = (real_le y x).
Proof. exact (EQ_MP (@lem1980260 y x) (@lem1980259 y x)). Qed.
Lemma lem6203142 : term728 = term729.
Proof. exact (@lem6203141 term65 term212). Qed.
Lemma lem6203144 (x : nat) : (term121 x) = (term122 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem6203145 : term212 = term215.
Proof. exact (@lem6203144 term22). Qed.
Lemma lem6203147 (x : nat) : (real_of_num x) = (term119 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6203148 : term65 = term120.
Proof. exact (@lem6203147 (NUMERAL 0)). Qed.
Lemma lem6203149 : real_le = real_le.
Proof. exact (eq_refl real_le). Qed.
Lemma lem6203150 : term67 = term274.
Proof. exact (MK_COMB (@lem6203149) (@lem6203148)). Qed.
Lemma lem6203151 : term729 = term730.
Proof. exact (MK_COMB (@lem6203150) (@lem6203145)). Qed.
Lemma lem6203152 : term731.
Proof. exact (@lem1980026 term65 term102 term212 term102). Qed.
Lemma lem6203154 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6203155 : term156 = term157.
Proof. exact (@lem6203154 (NUMERAL 0) term6). Qed.
Lemma lem6203156 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6203157 (h1 : term158 = (BIT1 0)) : term157 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6203158 : (term158 = (BIT1 0)) = (term157 = True).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6203157 h1) (fun h1 : term157 = True => @lem6203156)). Qed.
Lemma lem6203159 : term157 = True.
Proof. exact (EQ_MP (@lem6203158) (@lem6203156)). Qed.
Lemma lem6203160 : term156 = True.
Proof. exact (TRANS (@lem6203155) (@lem6203159)). Qed.
Lemma lem6203161 : True = term156.
Proof. exact (SYM (@lem6203160)). Qed.
Lemma lem6203162 : term156.
Proof. exact (EQ_MP (@lem6203161) (@lem0)). Qed.
Lemma lem6203163 : term732.
Proof. exact (@lem6203152 (@lem6203162)). Qed.
Lemma lem6203165 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6203166 : term156 = term157.
Proof. exact (@lem6203165 (NUMERAL 0) term6). Qed.
Lemma lem6203167 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6203168 (h1 : term158 = (BIT1 0)) : term157 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6203169 : (term158 = (BIT1 0)) = (term157 = True).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6203168 h1) (fun h1 : term157 = True => @lem6203167)). Qed.
Lemma lem6203170 : term157 = True.
Proof. exact (EQ_MP (@lem6203169) (@lem6203167)). Qed.
Lemma lem6203171 : term156 = True.
Proof. exact (TRANS (@lem6203166) (@lem6203170)). Qed.
Lemma lem6203172 : True = term156.
Proof. exact (SYM (@lem6203171)). Qed.
Lemma lem6203173 : term156.
Proof. exact (EQ_MP (@lem6203172) (@lem0)). Qed.
Lemma lem6203174 : term730 = term733.
Proof. exact (@lem6203163 (@lem6203173)). Qed.
Lemma lem6203176 (m : nat) (n : nat) : (term192 m n) = (term193 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem6203177 : term234 = term235.
Proof. exact (@lem6203176 term22 term6). Qed.
Lemma lem6203178 : term35 = term20.
Proof. exact (@lem996237 term20). Qed.
Lemma lem6203179 : (term35 = term20) = (term36 = term22).
Proof. exact (@lem1007663 term20 (BIT1 0) term20). Qed.
Lemma lem6203180 : term36 = term22.
Proof. exact (EQ_MP (@lem6203179) (@lem6203178)). Qed.
Lemma lem6203181 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6203182 : term236 = term90.
Proof. exact (MK_COMB (@lem6203181) (@lem6203180)). Qed.
Lemma lem6203183 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem6203184 : term235 = term212.
Proof. exact (MK_COMB (@lem6203183) (@lem6203182)). Qed.
Lemma lem6203185 : term234 = term212.
Proof. exact (TRANS (@lem6203177) (@lem6203184)). Qed.
Lemma lem6203187 (x : nat) : (term245 x) = term65.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem6203188 : term244 = term65.
Proof. exact (@lem6203187 term6). Qed.
Lemma lem6203189 : real_le = real_le.
Proof. exact (eq_refl real_le). Qed.
Lemma lem6203190 : term279 = term67.
Proof. exact (MK_COMB (@lem6203189) (@lem6203188)). Qed.
Lemma lem6203191 : term733 = term729.
Proof. exact (MK_COMB (@lem6203190) (@lem6203185)). Qed.
Lemma lem6203193 (m : nat) (n : nat) : (term280 m n) = (term281 m n).
Proof. exact (proj2 (@lem1365406 m n)). Qed.
Lemma lem6203194 : term729 = term734.
Proof. exact (@lem6203193 (NUMERAL 0) term22). Qed.
Lemma lem6203195 : term596 = term20.
Proof. exact (@lem912803). Qed.
Lemma lem6203196 (h1 : term596 = term20) : (term22 = (NUMERAL 0)) = False.
Proof. exact (@lem1013352 (BIT1 0) 0 term20 h1). Qed.
Lemma lem6203197 : (term596 = term20) = ((term22 = (NUMERAL 0)) = False).
Proof. exact (prop_ext (fun h1 : term596 = term20 => @lem6203196 h1) (fun h1 : (term22 = (NUMERAL 0)) = False => @lem6203195)). Qed.
Lemma lem6203198 : (term22 = (NUMERAL 0)) = False.
Proof. exact (EQ_MP (@lem6203197) (@lem6203195)). Qed.
Lemma lem6203199 : ((NUMERAL 0) = (NUMERAL 0)) = True.
Proof. exact (@lem1013364 0). Qed.
Lemma lem6203200 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6203201 : term283 = (and True).
Proof. exact (MK_COMB (@lem6203200) (@lem6203199)). Qed.
Lemma lem6203202 : term734 = (True /\ False).
Proof. exact (MK_COMB (@lem6203201) (@lem6203198)). Qed.
Lemma lem6203204 : (True /\ False) = False.
Proof. exact (proj1 (@lem1365106)). Qed.
Lemma lem6203205 : term734 = False.
Proof. exact (TRANS (@lem6203202) (@lem6203204)). Qed.
Lemma lem6203206 : term729 = False.
Proof. exact (TRANS (@lem6203194) (@lem6203205)). Qed.
Lemma lem6203207 : term733 = False.
Proof. exact (TRANS (@lem6203191) (@lem6203206)). Qed.
Lemma lem6203208 : term730 = False.
Proof. exact (TRANS (@lem6203174) (@lem6203207)). Qed.
Lemma lem6203209 : term729 = False.
Proof. exact (TRANS (@lem6203151) (@lem6203208)). Qed.
Lemma lem6203210 : term728 = False.
Proof. exact (TRANS (@lem6203142) (@lem6203209)). Qed.
Lemma lem6203211 (_79017 : int) (_79018 : int) (h1 : term735 _79017 _79018) : False.
Proof. exact (EQ_MP (@lem6203210) (@lem6203139 _79017 _79018 h1)). Qed.
Lemma lem6203212 (_79017 : int) (_79018 : int) (h1 : term579 _79017 _79018) : False.
Proof. exact (or_elim (@lem6201656 _79017 _79018 h1) (fun h0 : term585 _79017 _79018 => @lem6202523 _79017 _79018 h0) (fun h0 : term735 _79017 _79018 => @lem6203211 _79017 _79018 h0)). Qed.
Lemma lem6203213 (_79017 : int) (_79018 : int) (h1 : term575 _79017 _79018) : term575 _79017 _79018.
Proof. exact (h1). Qed.
Lemma lem6203214 (_79017 : int) (_79018 : int) (h1 : term803 _79017 _79018) : term803 _79017 _79018.
Proof. exact (h1). Qed.
Lemma lem6203215 (_79017 : int) (_79018 : int) (h1 : term803 _79017 _79018) : term576 _79017 _79018.
Proof. exact (proj2 (@lem6203214 _79017 _79018 h1)). Qed.
Lemma lem6203217 (_79017 : int) (_79018 : int) (h1 : term803 _79017 _79018) : term563 _79017 _79018.
Proof. exact (proj2 (@lem6203215 _79017 _79018 h1)). Qed.
Lemma lem6203219 (_79017 : int) (_79018 : int) (h1 : term803 _79017 _79018) : term544 _79017 _79018.
Proof. exact (proj2 (@lem6203217 _79017 _79018 h1)). Qed.
Lemma lem6203220 (_79017 : int) (_79018 : int) (h1 : term803 _79017 _79018) : term497 _79017 _79018.
Proof. exact (proj1 (@lem6203217 _79017 _79018 h1)). Qed.
Lemma lem6203222 (y : real) (x : real) : (real_gt x y) = (real_lt y x).
Proof. exact (EQ_MP (@lem1980266 y x) (@lem1980265 y x)). Qed.
Lemma lem6203223 : term755 = term156.
Proof. exact (@lem6203222 term65 term102). Qed.
Lemma lem6203225 (x : nat) : (real_of_num x) = (term119 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6203226 : term102 = term147.
Proof. exact (@lem6203225 term6). Qed.
Lemma lem6203228 (x : nat) : (real_of_num x) = (term119 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6203229 : term65 = term120.
Proof. exact (@lem6203228 (NUMERAL 0)). Qed.
Lemma lem6203230 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem6203231 : term588 = term589.
Proof. exact (MK_COMB (@lem6203230) (@lem6203229)). Qed.
Lemma lem6203232 : term156 = term756.
Proof. exact (MK_COMB (@lem6203231) (@lem6203226)). Qed.
Lemma lem6203233 : term757.
Proof. exact (@lem1980255 term65 term102 term102 term102). Qed.
Lemma lem6203235 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6203236 : term156 = term157.
Proof. exact (@lem6203235 (NUMERAL 0) term6). Qed.
Lemma lem6203237 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6203238 (h1 : term158 = (BIT1 0)) : term157 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6203239 : (term158 = (BIT1 0)) = (term157 = True).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6203238 h1) (fun h1 : term157 = True => @lem6203237)). Qed.
Lemma lem6203240 : term157 = True.
Proof. exact (EQ_MP (@lem6203239) (@lem6203237)). Qed.
Lemma lem6203241 : term156 = True.
Proof. exact (TRANS (@lem6203236) (@lem6203240)). Qed.
Lemma lem6203242 : True = term156.
Proof. exact (SYM (@lem6203241)). Qed.
Lemma lem6203243 : term156.
Proof. exact (EQ_MP (@lem6203242) (@lem0)). Qed.
Lemma lem6203244 : term758.
Proof. exact (@lem6203233 (@lem6203243)). Qed.
Lemma lem6203246 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6203247 : term156 = term157.
Proof. exact (@lem6203246 (NUMERAL 0) term6). Qed.
Lemma lem6203248 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6203249 (h1 : term158 = (BIT1 0)) : term157 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6203250 : (term158 = (BIT1 0)) = (term157 = True).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6203249 h1) (fun h1 : term157 = True => @lem6203248)). Qed.
Lemma lem6203251 : term157 = True.
Proof. exact (EQ_MP (@lem6203250) (@lem6203248)). Qed.
Lemma lem6203252 : term156 = True.
Proof. exact (TRANS (@lem6203247) (@lem6203251)). Qed.
Lemma lem6203253 : True = term156.
Proof. exact (SYM (@lem6203252)). Qed.
Lemma lem6203254 : term156.
Proof. exact (EQ_MP (@lem6203253) (@lem0)). Qed.
Lemma lem6203255 : term756 = term759.
Proof. exact (@lem6203244 (@lem6203254)). Qed.
Lemma lem6203257 (m : nat) (n : nat) : (term130 m n) = (term131 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6203258 : term132 = term133.
Proof. exact (@lem6203257 term6 term6). Qed.
Lemma lem6203259 : (term134 = (BIT1 0)) = (term135 = term6).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6203260 : term135 = term6.
Proof. exact (EQ_MP (@lem6203259) (@lem940073)). Qed.
Lemma lem6203261 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6203262 : term133 = term102.
Proof. exact (MK_COMB (@lem6203261) (@lem6203260)). Qed.
Lemma lem6203263 : term132 = term102.
Proof. exact (TRANS (@lem6203258) (@lem6203262)). Qed.
Lemma lem6203265 (x : nat) : (term245 x) = term65.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem6203266 : term244 = term65.
Proof. exact (@lem6203265 term6). Qed.
Lemma lem6203267 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem6203268 : term594 = term588.
Proof. exact (MK_COMB (@lem6203267) (@lem6203266)). Qed.
Lemma lem6203269 : term759 = term156.
Proof. exact (MK_COMB (@lem6203268) (@lem6203263)). Qed.
Lemma lem6203271 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6203272 : term156 = term157.
Proof. exact (@lem6203271 (NUMERAL 0) term6). Qed.
Lemma lem6203273 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6203274 (h1 : term158 = (BIT1 0)) : term157 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6203275 : (term158 = (BIT1 0)) = (term157 = True).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6203274 h1) (fun h1 : term157 = True => @lem6203273)). Qed.
Lemma lem6203276 : term157 = True.
Proof. exact (EQ_MP (@lem6203275) (@lem6203273)). Qed.
Lemma lem6203277 : term156 = True.
Proof. exact (TRANS (@lem6203272) (@lem6203276)). Qed.
Lemma lem6203278 : term759 = True.
Proof. exact (TRANS (@lem6203269) (@lem6203277)). Qed.
Lemma lem6203279 : term756 = True.
Proof. exact (TRANS (@lem6203255) (@lem6203278)). Qed.
Lemma lem6203280 : term156 = True.
Proof. exact (TRANS (@lem6203232) (@lem6203279)). Qed.
Lemma lem6203281 : term755 = True.
Proof. exact (TRANS (@lem6203223) (@lem6203280)). Qed.
Lemma lem6203282 : True = term755.
Proof. exact (SYM (@lem6203281)). Qed.
Lemma lem6203283 : term755.
Proof. exact (EQ_MP (@lem6203282) (@lem0)). Qed.
Lemma lem6203284 (_79017 : int) (_79018 : int) (h1 : term803 _79017 _79018) : term804 _79017 _79018.
Proof. exact (conj (@lem6203283) (@lem6203220 _79017 _79018 h1)). Qed.
Lemma lem6203286 (x : real) (y : real) : term598 x y.
Proof. exact (proj1 (@lem1988332 x y)). Qed.
Lemma lem6203287 (_79017 : int) (_79018 : int) : term805 _79017 _79018.
Proof. exact (@lem6203286 term102 (term494 _79017 _79018)). Qed.
Lemma lem6203288 (_79017 : int) (_79018 : int) (h1 : term803 _79017 _79018) : term806 _79017 _79018.
Proof. exact (@lem6203287 _79017 _79018 (@lem6203284 _79017 _79018 h1)). Qed.
Lemma lem6203289 (_79017 : int) (_79018 : int) : (term807 _79017 _79018) = (term494 _79017 _79018).
Proof. exact (@lem1982733 (term494 _79017 _79018)). Qed.
Lemma lem6203290 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem6203291 (_79017 : int) (_79018 : int) : (term808 _79017 _79018) = (term496 _79017 _79018).
Proof. exact (MK_COMB (@lem6203290) (@lem6203289 _79017 _79018)). Qed.
Lemma lem6203292 : term65 = term65.
Proof. exact (eq_refl term65). Qed.
Lemma lem6203293 (_79017 : int) (_79018 : int) : (term806 _79017 _79018) = (term497 _79017 _79018).
Proof. exact (MK_COMB (@lem6203291 _79017 _79018) (@lem6203292)). Qed.
Lemma lem6203294 (_79017 : int) (_79018 : int) (h1 : term803 _79017 _79018) : term497 _79017 _79018.
Proof. exact (EQ_MP (@lem6203293 _79017 _79018) (@lem6203288 _79017 _79018 h1)). Qed.
Lemma lem6203296 (y : real) (x : real) : (real_gt x y) = (real_lt y x).
Proof. exact (EQ_MP (@lem1980266 y x) (@lem1980265 y x)). Qed.
Lemma lem6203297 : term586 = term587.
Proof. exact (@lem6203296 term65 term90). Qed.
Lemma lem6203299 (x : nat) : (real_of_num x) = (term119 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6203300 : term90 = term204.
Proof. exact (@lem6203299 term22). Qed.
Lemma lem6203302 (x : nat) : (real_of_num x) = (term119 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6203303 : term65 = term120.
Proof. exact (@lem6203302 (NUMERAL 0)). Qed.
Lemma lem6203304 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem6203305 : term588 = term589.
Proof. exact (MK_COMB (@lem6203304) (@lem6203303)). Qed.
Lemma lem6203306 : term587 = term590.
Proof. exact (MK_COMB (@lem6203305) (@lem6203300)). Qed.
Lemma lem6203307 : term591.
Proof. exact (@lem1980255 term65 term102 term90 term102). Qed.
Lemma lem6203309 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6203310 : term156 = term157.
Proof. exact (@lem6203309 (NUMERAL 0) term6). Qed.
Lemma lem6203311 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6203312 (h1 : term158 = (BIT1 0)) : term157 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6203313 : (term158 = (BIT1 0)) = (term157 = True).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6203312 h1) (fun h1 : term157 = True => @lem6203311)). Qed.
Lemma lem6203314 : term157 = True.
Proof. exact (EQ_MP (@lem6203313) (@lem6203311)). Qed.
Lemma lem6203315 : term156 = True.
Proof. exact (TRANS (@lem6203310) (@lem6203314)). Qed.
Lemma lem6203316 : True = term156.
Proof. exact (SYM (@lem6203315)). Qed.
Lemma lem6203317 : term156.
Proof. exact (EQ_MP (@lem6203316) (@lem0)). Qed.
Lemma lem6203318 : term592.
Proof. exact (@lem6203307 (@lem6203317)). Qed.
Lemma lem6203320 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6203321 : term156 = term157.
Proof. exact (@lem6203320 (NUMERAL 0) term6). Qed.
Lemma lem6203322 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6203323 (h1 : term158 = (BIT1 0)) : term157 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6203324 : (term158 = (BIT1 0)) = (term157 = True).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6203323 h1) (fun h1 : term157 = True => @lem6203322)). Qed.
Lemma lem6203325 : term157 = True.
Proof. exact (EQ_MP (@lem6203324) (@lem6203322)). Qed.
Lemma lem6203326 : term156 = True.
Proof. exact (TRANS (@lem6203321) (@lem6203325)). Qed.
Lemma lem6203327 : True = term156.
Proof. exact (SYM (@lem6203326)). Qed.
Lemma lem6203328 : term156.
Proof. exact (EQ_MP (@lem6203327) (@lem0)). Qed.
Lemma lem6203329 : term590 = term593.
Proof. exact (@lem6203318 (@lem6203328)). Qed.
Lemma lem6203331 (m : nat) (n : nat) : (term130 m n) = (term131 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6203332 : term237 = term236.
Proof. exact (@lem6203331 term22 term6). Qed.
Lemma lem6203333 : term35 = term20.
Proof. exact (@lem996237 term20). Qed.
Lemma lem6203334 : (term35 = term20) = (term36 = term22).
Proof. exact (@lem1007663 term20 (BIT1 0) term20). Qed.
Lemma lem6203335 : term36 = term22.
Proof. exact (EQ_MP (@lem6203334) (@lem6203333)). Qed.
Lemma lem6203336 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6203337 : term236 = term90.
Proof. exact (MK_COMB (@lem6203336) (@lem6203335)). Qed.
Lemma lem6203338 : term237 = term90.
Proof. exact (TRANS (@lem6203332) (@lem6203337)). Qed.
Lemma lem6203340 (x : nat) : (term245 x) = term65.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem6203341 : term244 = term65.
Proof. exact (@lem6203340 term6). Qed.
Lemma lem6203342 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem6203343 : term594 = term588.
Proof. exact (MK_COMB (@lem6203342) (@lem6203341)). Qed.
Lemma lem6203344 : term593 = term587.
Proof. exact (MK_COMB (@lem6203343) (@lem6203338)). Qed.
Lemma lem6203346 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6203347 : term587 = term595.
Proof. exact (@lem6203346 (NUMERAL 0) term22). Qed.
Lemma lem6203348 : term596 = term20.
Proof. exact (@lem912803). Qed.
Lemma lem6203349 (h1 : term596 = term20) : term595 = True.
Proof. exact (@lem1009824 (BIT1 0) 0 term20 h1). Qed.
Lemma lem6203350 : (term596 = term20) = (term595 = True).
Proof. exact (prop_ext (fun h1 : term596 = term20 => @lem6203349 h1) (fun h1 : term595 = True => @lem6203348)). Qed.
Lemma lem6203351 : term595 = True.
Proof. exact (EQ_MP (@lem6203350) (@lem6203348)). Qed.
Lemma lem6203352 : term587 = True.
Proof. exact (TRANS (@lem6203347) (@lem6203351)). Qed.
Lemma lem6203353 : term593 = True.
Proof. exact (TRANS (@lem6203344) (@lem6203352)). Qed.
Lemma lem6203354 : term590 = True.
Proof. exact (TRANS (@lem6203329) (@lem6203353)). Qed.
Lemma lem6203355 : term587 = True.
Proof. exact (TRANS (@lem6203306) (@lem6203354)). Qed.
Lemma lem6203356 : term586 = True.
Proof. exact (TRANS (@lem6203297) (@lem6203355)). Qed.
Lemma lem6203357 : True = term586.
Proof. exact (SYM (@lem6203356)). Qed.
Lemma lem6203358 : term586.
Proof. exact (EQ_MP (@lem6203357) (@lem0)). Qed.
Lemma lem6203359 (_79017 : int) (_79018 : int) (h1 : term803 _79017 _79018) : term809 _79017 _79018.
Proof. exact (conj (@lem6203358) (@lem6203219 _79017 _79018 h1)). Qed.
Lemma lem6203361 (x : real) (y : real) : term598 x y.
Proof. exact (proj1 (@lem1988332 x y)). Qed.
Lemma lem6203362 (_79017 : int) (_79018 : int) : term810 _79017 _79018.
Proof. exact (@lem6203361 term90 (term540 _79017 _79018)). Qed.
Lemma lem6203363 (_79017 : int) (_79018 : int) (h1 : term803 _79017 _79018) : term811 _79017 _79018.
Proof. exact (@lem6203362 _79017 _79018 (@lem6203359 _79017 _79018 h1)). Qed.
Lemma lem6203364 (_79017 : int) (_79018 : int) : (term812 _79017 _79018) = (term813 _79017 _79018).
Proof. exact (@lem1982781 (term541 _79017) term90 (term465 _79018)). Qed.
Lemma lem6203365 (_79018 : int) : (term814 _79018) = (term815 _79018).
Proof. exact (@lem1982781 (real_of_int _79018) term90 term102). Qed.
Lemma lem6203367 (x : nat) : (real_of_num x) = (term119 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6203368 : term102 = term147.
Proof. exact (@lem6203367 term6). Qed.
Lemma lem6203370 (x : nat) : (real_of_num x) = (term119 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6203371 : term90 = term204.
Proof. exact (@lem6203370 term22). Qed.
Lemma lem6203372 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem6203373 : term92 = term605.
Proof. exact (MK_COMB (@lem6203372) (@lem6203371)). Qed.
Lemma lem6203374 : term237 = term816.
Proof. exact (MK_COMB (@lem6203373) (@lem6203368)). Qed.
Lemma lem6203375 : term816 = term817.
Proof. exact (@lem1981613 term90 term102 term102 term102). Qed.
Lemma lem6203377 (m : nat) (n : nat) : (term130 m n) = (term131 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6203378 : term132 = term133.
Proof. exact (@lem6203377 term6 term6). Qed.
Lemma lem6203379 : (term134 = (BIT1 0)) = (term135 = term6).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6203380 : term135 = term6.
Proof. exact (EQ_MP (@lem6203379) (@lem940073)). Qed.
Lemma lem6203381 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6203382 : term133 = term102.
Proof. exact (MK_COMB (@lem6203381) (@lem6203380)). Qed.
Lemma lem6203383 : term132 = term102.
Proof. exact (TRANS (@lem6203378) (@lem6203382)). Qed.
Lemma lem6203385 (m : nat) (n : nat) : (term130 m n) = (term131 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6203386 : term237 = term236.
Proof. exact (@lem6203385 term22 term6). Qed.
Lemma lem6203387 : term35 = term20.
Proof. exact (@lem996237 term20). Qed.
Lemma lem6203388 : (term35 = term20) = (term36 = term22).
Proof. exact (@lem1007663 term20 (BIT1 0) term20). Qed.
Lemma lem6203389 : term36 = term22.
Proof. exact (EQ_MP (@lem6203388) (@lem6203387)). Qed.
Lemma lem6203390 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6203391 : term236 = term90.
Proof. exact (MK_COMB (@lem6203390) (@lem6203389)). Qed.
Lemma lem6203392 : term237 = term90.
Proof. exact (TRANS (@lem6203386) (@lem6203391)). Qed.
Lemma lem6203393 : real_div = real_div.
Proof. exact (eq_refl real_div). Qed.
Lemma lem6203394 : term818 = term819.
Proof. exact (MK_COMB (@lem6203393) (@lem6203392)). Qed.
Lemma lem6203395 : term817 = term204.
Proof. exact (MK_COMB (@lem6203394) (@lem6203383)). Qed.
Lemma lem6203396 : term816 = term204.
Proof. exact (TRANS (@lem6203375) (@lem6203395)). Qed.
Lemma lem6203397 : term237 = term204.
Proof. exact (TRANS (@lem6203374) (@lem6203396)). Qed.
Lemma lem6203399 (x : real) : (term139 x) = x.
Proof. exact (EQ_MP (@lem1982628 x) (@lem1982627 x)). Qed.
Lemma lem6203400 : term204 = term90.
Proof. exact (@lem6203399 term90). Qed.
Lemma lem6203401 : term237 = term90.
Proof. exact (TRANS (@lem6203397) (@lem6203400)). Qed.
Lemma lem6203404 (_79018 : int) : (term95 _79018) = (term95 _79018).
Proof. exact (eq_refl (term95 _79018)). Qed.
Lemma lem6203405 (_79018 : int) : (term815 _79018) = (term310 _79018).
Proof. exact (MK_COMB (@lem6203404 _79018) (@lem6203401)). Qed.
Lemma lem6203406 (_79018 : int) : (term814 _79018) = (term310 _79018).
Proof. exact (TRANS (@lem6203365 _79018) (@lem6203405 _79018)). Qed.
Lemma lem6203407 (_79017 : int) : (term743 _79017) = (term744 _79017).
Proof. exact (@lem1982749 term90 term123 (real_of_int _79017)). Qed.
Lemma lem6203409 (x : nat) : (term121 x) = (term122 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem6203410 : term123 = term124.
Proof. exact (@lem6203409 term6). Qed.
Lemma lem6203412 (x : nat) : (real_of_num x) = (term119 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6203413 : term90 = term204.
Proof. exact (@lem6203412 term22). Qed.
Lemma lem6203414 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem6203415 : term92 = term605.
Proof. exact (MK_COMB (@lem6203414) (@lem6203413)). Qed.
Lemma lem6203416 : term745 = term746.
Proof. exact (MK_COMB (@lem6203415) (@lem6203410)). Qed.
Lemma lem6203417 : term746 = term747.
Proof. exact (@lem1981613 term90 term123 term102 term102). Qed.
Lemma lem6203419 (m : nat) (n : nat) : (term130 m n) = (term131 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6203420 : term132 = term133.
Proof. exact (@lem6203419 term6 term6). Qed.
Lemma lem6203421 : (term134 = (BIT1 0)) = (term135 = term6).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6203422 : term135 = term6.
Proof. exact (EQ_MP (@lem6203421) (@lem940073)). Qed.
Lemma lem6203423 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6203424 : term133 = term102.
Proof. exact (MK_COMB (@lem6203423) (@lem6203422)). Qed.
Lemma lem6203425 : term132 = term102.
Proof. exact (TRANS (@lem6203420) (@lem6203424)). Qed.
Lemma lem6203427 (m : nat) (n : nat) : (term609 m n) = (term193 m n).
Proof. exact (proj2 (@lem1367247 m n)). Qed.
Lemma lem6203428 : term745 = term235.
Proof. exact (@lem6203427 term22 term6). Qed.
Lemma lem6203429 : term35 = term20.
Proof. exact (@lem996237 term20). Qed.
Lemma lem6203430 : (term35 = term20) = (term36 = term22).
Proof. exact (@lem1007663 term20 (BIT1 0) term20). Qed.
Lemma lem6203431 : term36 = term22.
Proof. exact (EQ_MP (@lem6203430) (@lem6203429)). Qed.
Lemma lem6203432 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6203433 : term236 = term90.
Proof. exact (MK_COMB (@lem6203432) (@lem6203431)). Qed.
Lemma lem6203434 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem6203435 : term235 = term212.
Proof. exact (MK_COMB (@lem6203434) (@lem6203433)). Qed.
Lemma lem6203436 : term745 = term212.
Proof. exact (TRANS (@lem6203428) (@lem6203435)). Qed.
Lemma lem6203437 : real_div = real_div.
Proof. exact (eq_refl real_div). Qed.
Lemma lem6203438 : term748 = term214.
Proof. exact (MK_COMB (@lem6203437) (@lem6203436)). Qed.
Lemma lem6203439 : term747 = term215.
Proof. exact (MK_COMB (@lem6203438) (@lem6203425)). Qed.
Lemma lem6203440 : term746 = term215.
Proof. exact (TRANS (@lem6203417) (@lem6203439)). Qed.
Lemma lem6203441 : term745 = term215.
Proof. exact (TRANS (@lem6203416) (@lem6203440)). Qed.
Lemma lem6203443 (x : real) : (term139 x) = x.
Proof. exact (EQ_MP (@lem1982628 x) (@lem1982627 x)). Qed.
Lemma lem6203444 : term215 = term212.
Proof. exact (@lem6203443 term212). Qed.
Lemma lem6203445 : term745 = term212.
Proof. exact (TRANS (@lem6203441) (@lem6203444)). Qed.
Lemma lem6203446 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem6203447 : term749 = term217.
Proof. exact (MK_COMB (@lem6203446) (@lem6203445)). Qed.
Lemma lem6203448 (_79017 : int) : (real_of_int _79017) = (real_of_int _79017).
Proof. exact (eq_refl (real_of_int _79017)). Qed.
Lemma lem6203449 (_79017 : int) : (term744 _79017) = (term218 _79017).
Proof. exact (MK_COMB (@lem6203447) (@lem6203448 _79017)). Qed.
Lemma lem6203450 (_79017 : int) : (term743 _79017) = (term218 _79017).
Proof. exact (TRANS (@lem6203407 _79017) (@lem6203449 _79017)). Qed.
Lemma lem6203451 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem6203452 (_79017 : int) : (term750 _79017) = (term220 _79017).
Proof. exact (MK_COMB (@lem6203451) (@lem6203450 _79017)). Qed.
Lemma lem6203453 (_79017 : int) (_79018 : int) : (term813 _79017 _79018) = (term533 _79017 _79018).
Proof. exact (MK_COMB (@lem6203452 _79017) (@lem6203406 _79018)). Qed.
Lemma lem6203454 (_79017 : int) (_79018 : int) : (term812 _79017 _79018) = (term533 _79017 _79018).
Proof. exact (TRANS (@lem6203364 _79017 _79018) (@lem6203453 _79017 _79018)). Qed.
Lemma lem6203455 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem6203456 (_79017 : int) (_79018 : int) : (term820 _79017 _79018) = (term535 _79017 _79018).
Proof. exact (MK_COMB (@lem6203455) (@lem6203454 _79017 _79018)). Qed.
Lemma lem6203457 : term65 = term65.
Proof. exact (eq_refl term65). Qed.
Lemma lem6203458 (_79017 : int) (_79018 : int) : (term811 _79017 _79018) = (term536 _79017 _79018).
Proof. exact (MK_COMB (@lem6203456 _79017 _79018) (@lem6203457)). Qed.
Lemma lem6203459 (_79017 : int) (_79018 : int) (h1 : term803 _79017 _79018) : term536 _79017 _79018.
Proof. exact (EQ_MP (@lem6203458 _79017 _79018) (@lem6203363 _79017 _79018 h1)). Qed.
Lemma lem6203460 (_79017 : int) (_79018 : int) (h1 : term803 _79017 _79018) : term821 _79017 _79018.
Proof. exact (conj (@lem6203459 _79017 _79018 h1) (@lem6203294 _79017 _79018 h1)). Qed.
Lemma lem6203462 (x : real) (y : real) : term665 x y.
Proof. exact (proj1 (@lem1988342 x y)). Qed.
Lemma lem6203463 (_79017 : int) (_79018 : int) : term822 _79017 _79018.
Proof. exact (@lem6203462 (term533 _79017 _79018) (term494 _79017 _79018)). Qed.
Lemma lem6203464 (_79017 : int) (_79018 : int) (h1 : term803 _79017 _79018) : term823 _79017 _79018.
Proof. exact (@lem6203463 _79017 _79018 (@lem6203460 _79017 _79018 h1)). Qed.
Lemma lem6203465 (_79017 : int) (_79018 : int) : (term824 _79017 _79018) = (term825 _79017 _79018).
Proof. exact (@lem1982753 (term218 _79017) (term93 _79017) (term310 _79018) (term354 _79018)). Qed.
Lemma lem6203466 (_79017 : int) : (term770 _79017) = (term771 _79017).
Proof. exact (@lem1982711 term212 term90 (real_of_int _79017)). Qed.
Lemma lem6203468 (x : nat) : (real_of_num x) = (term119 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6203469 : term90 = term204.
Proof. exact (@lem6203468 term22). Qed.
Lemma lem6203471 (x : nat) : (term121 x) = (term122 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem6203472 : term212 = term215.
Proof. exact (@lem6203471 term22). Qed.
Lemma lem6203473 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem6203474 : term772 = term773.
Proof. exact (MK_COMB (@lem6203473) (@lem6203472)). Qed.
Lemma lem6203475 : term774 = term775.
Proof. exact (MK_COMB (@lem6203474) (@lem6203469)). Qed.
Lemma lem6203476 : term776.
Proof. exact (@lem1981473 term212 term102 term90 term102 term65 term102). Qed.
Lemma lem6203478 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6203479 : term156 = term157.
Proof. exact (@lem6203478 (NUMERAL 0) term6). Qed.
Lemma lem6203480 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6203481 (h1 : term158 = (BIT1 0)) : term157 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6203482 : (term158 = (BIT1 0)) = (term157 = True).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6203481 h1) (fun h1 : term157 = True => @lem6203480)). Qed.
Lemma lem6203483 : term157 = True.
Proof. exact (EQ_MP (@lem6203482) (@lem6203480)). Qed.
Lemma lem6203484 : term156 = True.
Proof. exact (TRANS (@lem6203479) (@lem6203483)). Qed.
Lemma lem6203485 : True = term156.
Proof. exact (SYM (@lem6203484)). Qed.
Lemma lem6203486 : term156.
Proof. exact (EQ_MP (@lem6203485) (@lem0)). Qed.
Lemma lem6203487 : term777.
Proof. exact (@lem6203476 (@lem6203486)). Qed.
Lemma lem6203489 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6203490 : term156 = term157.
Proof. exact (@lem6203489 (NUMERAL 0) term6). Qed.
Lemma lem6203491 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6203492 (h1 : term158 = (BIT1 0)) : term157 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6203493 : (term158 = (BIT1 0)) = (term157 = True).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6203492 h1) (fun h1 : term157 = True => @lem6203491)). Qed.
Lemma lem6203494 : term157 = True.
Proof. exact (EQ_MP (@lem6203493) (@lem6203491)). Qed.
Lemma lem6203495 : term156 = True.
Proof. exact (TRANS (@lem6203490) (@lem6203494)). Qed.
Lemma lem6203496 : True = term156.
Proof. exact (SYM (@lem6203495)). Qed.
Lemma lem6203497 : term156.
Proof. exact (EQ_MP (@lem6203496) (@lem0)). Qed.
Lemma lem6203498 : term778.
Proof. exact (@lem6203487 (@lem6203497)). Qed.
Lemma lem6203500 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6203501 : term156 = term157.
Proof. exact (@lem6203500 (NUMERAL 0) term6). Qed.
Lemma lem6203502 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6203503 (h1 : term158 = (BIT1 0)) : term157 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6203504 : (term158 = (BIT1 0)) = (term157 = True).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6203503 h1) (fun h1 : term157 = True => @lem6203502)). Qed.
Lemma lem6203505 : term157 = True.
Proof. exact (EQ_MP (@lem6203504) (@lem6203502)). Qed.
Lemma lem6203506 : term156 = True.
Proof. exact (TRANS (@lem6203501) (@lem6203505)). Qed.
Lemma lem6203507 : True = term156.
Proof. exact (SYM (@lem6203506)). Qed.
Lemma lem6203508 : term156.
Proof. exact (EQ_MP (@lem6203507) (@lem0)). Qed.
Lemma lem6203509 : term779.
Proof. exact (@lem6203498 (@lem6203508)). Qed.
Lemma lem6203511 (m : nat) (n : nat) : (term130 m n) = (term131 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6203512 : term237 = term236.
Proof. exact (@lem6203511 term22 term6). Qed.
Lemma lem6203513 : term35 = term20.
Proof. exact (@lem996237 term20). Qed.
Lemma lem6203514 : (term35 = term20) = (term36 = term22).
Proof. exact (@lem1007663 term20 (BIT1 0) term20). Qed.
Lemma lem6203515 : term36 = term22.
Proof. exact (EQ_MP (@lem6203514) (@lem6203513)). Qed.
Lemma lem6203516 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6203517 : term236 = term90.
Proof. exact (MK_COMB (@lem6203516) (@lem6203515)). Qed.
Lemma lem6203518 : term237 = term90.
Proof. exact (TRANS (@lem6203512) (@lem6203517)). Qed.
Lemma lem6203520 (m : nat) (n : nat) : (term192 m n) = (term193 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem6203521 : term234 = term235.
Proof. exact (@lem6203520 term22 term6). Qed.
Lemma lem6203522 : term35 = term20.
Proof. exact (@lem996237 term20). Qed.
Lemma lem6203523 : (term35 = term20) = (term36 = term22).
Proof. exact (@lem1007663 term20 (BIT1 0) term20). Qed.
Lemma lem6203524 : term36 = term22.
Proof. exact (EQ_MP (@lem6203523) (@lem6203522)). Qed.
Lemma lem6203525 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6203526 : term236 = term90.
Proof. exact (MK_COMB (@lem6203525) (@lem6203524)). Qed.
Lemma lem6203527 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem6203528 : term235 = term212.
Proof. exact (MK_COMB (@lem6203527) (@lem6203526)). Qed.
Lemma lem6203529 : term234 = term212.
Proof. exact (TRANS (@lem6203521) (@lem6203528)). Qed.
Lemma lem6203530 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem6203531 : term780 = term772.
Proof. exact (MK_COMB (@lem6203530) (@lem6203529)). Qed.
Lemma lem6203532 : term781 = term774.
Proof. exact (MK_COMB (@lem6203531) (@lem6203518)). Qed.
Lemma lem6203534 (m : nat) : (term682 m) = term65.
Proof. exact (proj1 (@lem1367303 m)). Qed.
Lemma lem6203535 : term774 = term65.
Proof. exact (@lem6203534 term22). Qed.
Lemma lem6203536 : term781 = term65.
Proof. exact (TRANS (@lem6203532) (@lem6203535)). Qed.
Lemma lem6203537 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem6203538 : term782 = term242.
Proof. exact (MK_COMB (@lem6203537) (@lem6203536)). Qed.
Lemma lem6203539 : term102 = term102.
Proof. exact (eq_refl term102). Qed.
Lemma lem6203540 : term783 = term244.
Proof. exact (MK_COMB (@lem6203538) (@lem6203539)). Qed.
Lemma lem6203542 (x : nat) : (term245 x) = term65.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem6203543 : term244 = term65.
Proof. exact (@lem6203542 term6). Qed.
Lemma lem6203544 : term783 = term65.
Proof. exact (TRANS (@lem6203540) (@lem6203543)). Qed.
Lemma lem6203546 (m : nat) (n : nat) : (term130 m n) = (term131 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6203547 : term132 = term133.
Proof. exact (@lem6203546 term6 term6). Qed.
Lemma lem6203548 : (term134 = (BIT1 0)) = (term135 = term6).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6203549 : term135 = term6.
Proof. exact (EQ_MP (@lem6203548) (@lem940073)). Qed.
Lemma lem6203550 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6203551 : term133 = term102.
Proof. exact (MK_COMB (@lem6203550) (@lem6203549)). Qed.
Lemma lem6203552 : term132 = term102.
Proof. exact (TRANS (@lem6203547) (@lem6203551)). Qed.
Lemma lem6203553 : term242 = term242.
Proof. exact (eq_refl term242). Qed.
Lemma lem6203554 : term246 = term244.
Proof. exact (MK_COMB (@lem6203553) (@lem6203552)). Qed.
Lemma lem6203556 (x : nat) : (term245 x) = term65.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem6203557 : term244 = term65.
Proof. exact (@lem6203556 term6). Qed.
Lemma lem6203558 : term246 = term65.
Proof. exact (TRANS (@lem6203554) (@lem6203557)). Qed.
Lemma lem6203559 : term65 = term246.
Proof. exact (SYM (@lem6203558)). Qed.
Lemma lem6203560 : term783 = term246.
Proof. exact (TRANS (@lem6203544) (@lem6203559)). Qed.
Lemma lem6203561 : term775 = term120.
Proof. exact (@lem6203509 (@lem6203560)). Qed.
Lemma lem6203562 : term774 = term120.
Proof. exact (TRANS (@lem6203475) (@lem6203561)). Qed.
Lemma lem6203564 (x : real) : (term139 x) = x.
Proof. exact (EQ_MP (@lem1981475 x) (@lem1981474 x)). Qed.
Lemma lem6203565 : term120 = term65.
Proof. exact (@lem6203564 term65). Qed.
Lemma lem6203566 : term774 = term65.
Proof. exact (TRANS (@lem6203562) (@lem6203565)). Qed.
Lemma lem6203567 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem6203568 : term784 = term242.
Proof. exact (MK_COMB (@lem6203567) (@lem6203566)). Qed.
Lemma lem6203569 (_79017 : int) : (real_of_int _79017) = (real_of_int _79017).
Proof. exact (eq_refl (real_of_int _79017)). Qed.
Lemma lem6203570 (_79017 : int) : (term771 _79017) = (term248 _79017).
Proof. exact (MK_COMB (@lem6203568) (@lem6203569 _79017)). Qed.
Lemma lem6203571 (_79017 : int) : (term770 _79017) = (term248 _79017).
Proof. exact (TRANS (@lem6203466 _79017) (@lem6203570 _79017)). Qed.
Lemma lem6203572 (_79017 : int) : (term248 _79017) = term65.
Proof. exact (@lem1982719 (real_of_int _79017)). Qed.
Lemma lem6203573 (_79017 : int) : (term770 _79017) = term65.
Proof. exact (TRANS (@lem6203571 _79017) (@lem6203572 _79017)). Qed.
Lemma lem6203574 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem6203575 (_79017 : int) : (term785 _79017) = term250.
Proof. exact (MK_COMB (@lem6203574) (@lem6203573 _79017)). Qed.
Lemma lem6203576 (_79018 : int) : (term355 _79018) = (term356 _79018).
Proof. exact (@lem1982753 (term93 _79018) (term218 _79018) term90 term350). Qed.
Lemma lem6203577 (_79018 : int) : (term224 _79018) = (term225 _79018).
Proof. exact (@lem1982711 term90 term212 (real_of_int _79018)). Qed.
Lemma lem6203579 (x : nat) : (term121 x) = (term122 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem6203580 : term212 = term215.
Proof. exact (@lem6203579 term22). Qed.
Lemma lem6203582 (x : nat) : (real_of_num x) = (term119 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6203583 : term90 = term204.
Proof. exact (@lem6203582 term22). Qed.
Lemma lem6203584 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem6203585 : term226 = term227.
Proof. exact (MK_COMB (@lem6203584) (@lem6203583)). Qed.
Lemma lem6203586 : term228 = term229.
Proof. exact (MK_COMB (@lem6203585) (@lem6203580)). Qed.
Lemma lem6203587 : term230.
Proof. exact (@lem1981473 term90 term102 term212 term102 term65 term102). Qed.
Lemma lem6203589 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6203590 : term156 = term157.
Proof. exact (@lem6203589 (NUMERAL 0) term6). Qed.
Lemma lem6203591 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6203592 (h1 : term158 = (BIT1 0)) : term157 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6203593 : (term158 = (BIT1 0)) = (term157 = True).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6203592 h1) (fun h1 : term157 = True => @lem6203591)). Qed.
Lemma lem6203594 : term157 = True.
Proof. exact (EQ_MP (@lem6203593) (@lem6203591)). Qed.
Lemma lem6203595 : term156 = True.
Proof. exact (TRANS (@lem6203590) (@lem6203594)). Qed.
Lemma lem6203596 : True = term156.
Proof. exact (SYM (@lem6203595)). Qed.
Lemma lem6203597 : term156.
Proof. exact (EQ_MP (@lem6203596) (@lem0)). Qed.
Lemma lem6203598 : term231.
Proof. exact (@lem6203587 (@lem6203597)). Qed.
Lemma lem6203600 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6203601 : term156 = term157.
Proof. exact (@lem6203600 (NUMERAL 0) term6). Qed.
Lemma lem6203602 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6203603 (h1 : term158 = (BIT1 0)) : term157 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6203604 : (term158 = (BIT1 0)) = (term157 = True).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6203603 h1) (fun h1 : term157 = True => @lem6203602)). Qed.
Lemma lem6203605 : term157 = True.
Proof. exact (EQ_MP (@lem6203604) (@lem6203602)). Qed.
Lemma lem6203606 : term156 = True.
Proof. exact (TRANS (@lem6203601) (@lem6203605)). Qed.
Lemma lem6203607 : True = term156.
Proof. exact (SYM (@lem6203606)). Qed.
Lemma lem6203608 : term156.
Proof. exact (EQ_MP (@lem6203607) (@lem0)). Qed.
Lemma lem6203609 : term232.
Proof. exact (@lem6203598 (@lem6203608)). Qed.
Lemma lem6203611 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6203612 : term156 = term157.
Proof. exact (@lem6203611 (NUMERAL 0) term6). Qed.
Lemma lem6203613 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6203614 (h1 : term158 = (BIT1 0)) : term157 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6203615 : (term158 = (BIT1 0)) = (term157 = True).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6203614 h1) (fun h1 : term157 = True => @lem6203613)). Qed.
Lemma lem6203616 : term157 = True.
Proof. exact (EQ_MP (@lem6203615) (@lem6203613)). Qed.
Lemma lem6203617 : term156 = True.
Proof. exact (TRANS (@lem6203612) (@lem6203616)). Qed.
Lemma lem6203618 : True = term156.
Proof. exact (SYM (@lem6203617)). Qed.
Lemma lem6203619 : term156.
Proof. exact (EQ_MP (@lem6203618) (@lem0)). Qed.
Lemma lem6203620 : term233.
Proof. exact (@lem6203609 (@lem6203619)). Qed.
Lemma lem6203622 (m : nat) (n : nat) : (term192 m n) = (term193 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem6203623 : term234 = term235.
Proof. exact (@lem6203622 term22 term6). Qed.
Lemma lem6203624 : term35 = term20.
Proof. exact (@lem996237 term20). Qed.
Lemma lem6203625 : (term35 = term20) = (term36 = term22).
Proof. exact (@lem1007663 term20 (BIT1 0) term20). Qed.
Lemma lem6203626 : term36 = term22.
Proof. exact (EQ_MP (@lem6203625) (@lem6203624)). Qed.
Lemma lem6203627 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6203628 : term236 = term90.
Proof. exact (MK_COMB (@lem6203627) (@lem6203626)). Qed.
Lemma lem6203629 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem6203630 : term235 = term212.
Proof. exact (MK_COMB (@lem6203629) (@lem6203628)). Qed.
Lemma lem6203631 : term234 = term212.
Proof. exact (TRANS (@lem6203623) (@lem6203630)). Qed.
Lemma lem6203633 (m : nat) (n : nat) : (term130 m n) = (term131 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6203634 : term237 = term236.
Proof. exact (@lem6203633 term22 term6). Qed.
Lemma lem6203635 : term35 = term20.
Proof. exact (@lem996237 term20). Qed.
Lemma lem6203636 : (term35 = term20) = (term36 = term22).
Proof. exact (@lem1007663 term20 (BIT1 0) term20). Qed.
Lemma lem6203637 : term36 = term22.
Proof. exact (EQ_MP (@lem6203636) (@lem6203635)). Qed.
Lemma lem6203638 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6203639 : term236 = term90.
Proof. exact (MK_COMB (@lem6203638) (@lem6203637)). Qed.
Lemma lem6203640 : term237 = term90.
Proof. exact (TRANS (@lem6203634) (@lem6203639)). Qed.
Lemma lem6203641 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem6203642 : term238 = term226.
Proof. exact (MK_COMB (@lem6203641) (@lem6203640)). Qed.
Lemma lem6203643 : term239 = term228.
Proof. exact (MK_COMB (@lem6203642) (@lem6203631)). Qed.
Lemma lem6203645 (m : nat) : (term240 m) = term65.
Proof. exact (proj2 (@lem1367303 m)). Qed.
Lemma lem6203646 : term228 = term65.
Proof. exact (@lem6203645 term22). Qed.
Lemma lem6203647 : term239 = term65.
Proof. exact (TRANS (@lem6203643) (@lem6203646)). Qed.
Lemma lem6203648 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem6203649 : term241 = term242.
Proof. exact (MK_COMB (@lem6203648) (@lem6203647)). Qed.
Lemma lem6203650 : term102 = term102.
Proof. exact (eq_refl term102). Qed.
Lemma lem6203651 : term243 = term244.
Proof. exact (MK_COMB (@lem6203649) (@lem6203650)). Qed.
Lemma lem6203653 (x : nat) : (term245 x) = term65.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem6203654 : term244 = term65.
Proof. exact (@lem6203653 term6). Qed.
Lemma lem6203655 : term243 = term65.
Proof. exact (TRANS (@lem6203651) (@lem6203654)). Qed.
Lemma lem6203657 (m : nat) (n : nat) : (term130 m n) = (term131 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6203658 : term132 = term133.
Proof. exact (@lem6203657 term6 term6). Qed.
Lemma lem6203659 : (term134 = (BIT1 0)) = (term135 = term6).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6203660 : term135 = term6.
Proof. exact (EQ_MP (@lem6203659) (@lem940073)). Qed.
Lemma lem6203661 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6203662 : term133 = term102.
Proof. exact (MK_COMB (@lem6203661) (@lem6203660)). Qed.
Lemma lem6203663 : term132 = term102.
Proof. exact (TRANS (@lem6203658) (@lem6203662)). Qed.
Lemma lem6203664 : term242 = term242.
Proof. exact (eq_refl term242). Qed.
Lemma lem6203665 : term246 = term244.
Proof. exact (MK_COMB (@lem6203664) (@lem6203663)). Qed.
Lemma lem6203667 (x : nat) : (term245 x) = term65.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem6203668 : term244 = term65.
Proof. exact (@lem6203667 term6). Qed.
Lemma lem6203669 : term246 = term65.
Proof. exact (TRANS (@lem6203665) (@lem6203668)). Qed.
Lemma lem6203670 : term65 = term246.
Proof. exact (SYM (@lem6203669)). Qed.
Lemma lem6203671 : term243 = term246.
Proof. exact (TRANS (@lem6203655) (@lem6203670)). Qed.
Lemma lem6203672 : term229 = term120.
Proof. exact (@lem6203620 (@lem6203671)). Qed.
Lemma lem6203673 : term228 = term120.
Proof. exact (TRANS (@lem6203586) (@lem6203672)). Qed.
Lemma lem6203675 (x : real) : (term139 x) = x.
Proof. exact (EQ_MP (@lem1981475 x) (@lem1981474 x)). Qed.
Lemma lem6203676 : term120 = term65.
Proof. exact (@lem6203675 term65). Qed.
Lemma lem6203677 : term228 = term65.
Proof. exact (TRANS (@lem6203673) (@lem6203676)). Qed.
Lemma lem6203678 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem6203679 : term247 = term242.
Proof. exact (MK_COMB (@lem6203678) (@lem6203677)). Qed.
Lemma lem6203680 (_79018 : int) : (real_of_int _79018) = (real_of_int _79018).
Proof. exact (eq_refl (real_of_int _79018)). Qed.
Lemma lem6203681 (_79018 : int) : (term225 _79018) = (term248 _79018).
Proof. exact (MK_COMB (@lem6203679) (@lem6203680 _79018)). Qed.
Lemma lem6203682 (_79018 : int) : (term224 _79018) = (term248 _79018).
Proof. exact (TRANS (@lem6203577 _79018) (@lem6203681 _79018)). Qed.
Lemma lem6203683 (_79018 : int) : (term248 _79018) = term65.
Proof. exact (@lem1982719 (real_of_int _79018)). Qed.
Lemma lem6203684 (_79018 : int) : (term224 _79018) = term65.
Proof. exact (TRANS (@lem6203682 _79018) (@lem6203683 _79018)). Qed.
Lemma lem6203685 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem6203686 (_79018 : int) : (term249 _79018) = term250.
Proof. exact (MK_COMB (@lem6203685) (@lem6203684 _79018)). Qed.
Lemma lem6203688 (x : nat) : (term121 x) = (term122 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem6203689 : term350 = term353.
Proof. exact (@lem6203688 term32). Qed.
Lemma lem6203691 (x : nat) : (real_of_num x) = (term119 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6203692 : term90 = term204.
Proof. exact (@lem6203691 term22). Qed.
Lemma lem6203693 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem6203694 : term226 = term227.
Proof. exact (MK_COMB (@lem6203693) (@lem6203692)). Qed.
Lemma lem6203695 : term357 = term358.
Proof. exact (MK_COMB (@lem6203694) (@lem6203689)). Qed.
Lemma lem6203696 : term359.
Proof. exact (@lem1981473 term90 term102 term350 term102 term123 term102). Qed.
Lemma lem6203698 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6203699 : term156 = term157.
Proof. exact (@lem6203698 (NUMERAL 0) term6). Qed.
Lemma lem6203700 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6203701 (h1 : term158 = (BIT1 0)) : term157 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6203702 : (term158 = (BIT1 0)) = (term157 = True).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6203701 h1) (fun h1 : term157 = True => @lem6203700)). Qed.
Lemma lem6203703 : term157 = True.
Proof. exact (EQ_MP (@lem6203702) (@lem6203700)). Qed.
Lemma lem6203704 : term156 = True.
Proof. exact (TRANS (@lem6203699) (@lem6203703)). Qed.
Lemma lem6203705 : True = term156.
Proof. exact (SYM (@lem6203704)). Qed.
Lemma lem6203706 : term156.
Proof. exact (EQ_MP (@lem6203705) (@lem0)). Qed.
Lemma lem6203707 : term360.
Proof. exact (@lem6203696 (@lem6203706)). Qed.
Lemma lem6203709 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6203710 : term156 = term157.
Proof. exact (@lem6203709 (NUMERAL 0) term6). Qed.
Lemma lem6203711 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6203712 (h1 : term158 = (BIT1 0)) : term157 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6203713 : (term158 = (BIT1 0)) = (term157 = True).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6203712 h1) (fun h1 : term157 = True => @lem6203711)). Qed.
Lemma lem6203714 : term157 = True.
Proof. exact (EQ_MP (@lem6203713) (@lem6203711)). Qed.
Lemma lem6203715 : term156 = True.
Proof. exact (TRANS (@lem6203710) (@lem6203714)). Qed.
Lemma lem6203716 : True = term156.
Proof. exact (SYM (@lem6203715)). Qed.
Lemma lem6203717 : term156.
Proof. exact (EQ_MP (@lem6203716) (@lem0)). Qed.
Lemma lem6203718 : term361.
Proof. exact (@lem6203707 (@lem6203717)). Qed.
Lemma lem6203720 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6203721 : term156 = term157.
Proof. exact (@lem6203720 (NUMERAL 0) term6). Qed.
Lemma lem6203722 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6203723 (h1 : term158 = (BIT1 0)) : term157 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6203724 : (term158 = (BIT1 0)) = (term157 = True).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6203723 h1) (fun h1 : term157 = True => @lem6203722)). Qed.
Lemma lem6203725 : term157 = True.
Proof. exact (EQ_MP (@lem6203724) (@lem6203722)). Qed.
Lemma lem6203726 : term156 = True.
Proof. exact (TRANS (@lem6203721) (@lem6203725)). Qed.
Lemma lem6203727 : True = term156.
Proof. exact (SYM (@lem6203726)). Qed.
Lemma lem6203728 : term156.
Proof. exact (EQ_MP (@lem6203727) (@lem0)). Qed.
Lemma lem6203729 : term362.
Proof. exact (@lem6203718 (@lem6203728)). Qed.
Lemma lem6203731 (m : nat) (n : nat) : (term192 m n) = (term193 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem6203732 : term363 = term364.
Proof. exact (@lem6203731 term32 term6). Qed.
Lemma lem6203733 : term164 = term30.
Proof. exact (@lem996237 term30). Qed.
Lemma lem6203734 : (term164 = term30) = (term165 = term32).
Proof. exact (@lem1007663 term30 (BIT1 0) term30). Qed.
Lemma lem6203735 : term165 = term32.
Proof. exact (EQ_MP (@lem6203734) (@lem6203733)). Qed.
Lemma lem6203736 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6203737 : term163 = term97.
Proof. exact (MK_COMB (@lem6203736) (@lem6203735)). Qed.
Lemma lem6203738 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem6203739 : term364 = term350.
Proof. exact (MK_COMB (@lem6203738) (@lem6203737)). Qed.
Lemma lem6203740 : term363 = term350.
Proof. exact (TRANS (@lem6203732) (@lem6203739)). Qed.
Lemma lem6203742 (m : nat) (n : nat) : (term130 m n) = (term131 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6203743 : term237 = term236.
Proof. exact (@lem6203742 term22 term6). Qed.
Lemma lem6203744 : term35 = term20.
Proof. exact (@lem996237 term20). Qed.
Lemma lem6203745 : (term35 = term20) = (term36 = term22).
Proof. exact (@lem1007663 term20 (BIT1 0) term20). Qed.
Lemma lem6203746 : term36 = term22.
Proof. exact (EQ_MP (@lem6203745) (@lem6203744)). Qed.
Lemma lem6203747 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6203748 : term236 = term90.
Proof. exact (MK_COMB (@lem6203747) (@lem6203746)). Qed.
Lemma lem6203749 : term237 = term90.
Proof. exact (TRANS (@lem6203743) (@lem6203748)). Qed.
Lemma lem6203750 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem6203751 : term238 = term226.
Proof. exact (MK_COMB (@lem6203750) (@lem6203749)). Qed.
Lemma lem6203752 : term365 = term357.
Proof. exact (MK_COMB (@lem6203751) (@lem6203740)). Qed.
Lemma lem6203755 : term366 = term123.
Proof. exact (@lem1367771 term22 term6). Qed.
Lemma lem6203756 : term29 = term30.
Proof. exact (@lem706949). Qed.
Lemma lem6203757 : (term29 = term30) = (term31 = term32).
Proof. exact (@lem1006570 term20 (BIT1 0) term30). Qed.
Lemma lem6203758 : term31 = term32.
Proof. exact (EQ_MP (@lem6203757) (@lem6203756)). Qed.
Lemma lem6203759 : term32 = term31.
Proof. exact (SYM (@lem6203758)). Qed.
Lemma lem6203760 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6203761 : term97 = term332.
Proof. exact (MK_COMB (@lem6203760) (@lem6203759)). Qed.
Lemma lem6203762 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem6203763 : term350 = term367.
Proof. exact (MK_COMB (@lem6203762) (@lem6203761)). Qed.
Lemma lem6203764 : term226 = term226.
Proof. exact (eq_refl term226). Qed.
Lemma lem6203765 : term357 = term366.
Proof. exact (MK_COMB (@lem6203764) (@lem6203763)). Qed.
Lemma lem6203766 : term357 = term123.
Proof. exact (TRANS (@lem6203765) (@lem6203755)). Qed.
Lemma lem6203767 : term365 = term123.
Proof. exact (TRANS (@lem6203752) (@lem6203766)). Qed.
Lemma lem6203768 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem6203769 : term368 = term125.
Proof. exact (MK_COMB (@lem6203768) (@lem6203767)). Qed.
Lemma lem6203770 : term102 = term102.
Proof. exact (eq_refl term102). Qed.
Lemma lem6203771 : term369 = term264.
Proof. exact (MK_COMB (@lem6203769) (@lem6203770)). Qed.
Lemma lem6203773 (m : nat) (n : nat) : (term192 m n) = (term193 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem6203774 : term264 = term265.
Proof. exact (@lem6203773 term6 term6). Qed.
Lemma lem6203775 : (term134 = (BIT1 0)) = (term135 = term6).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6203776 : term135 = term6.
Proof. exact (EQ_MP (@lem6203775) (@lem940073)). Qed.
Lemma lem6203777 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6203778 : term133 = term102.
Proof. exact (MK_COMB (@lem6203777) (@lem6203776)). Qed.
Lemma lem6203779 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem6203780 : term265 = term123.
Proof. exact (MK_COMB (@lem6203779) (@lem6203778)). Qed.
Lemma lem6203781 : term264 = term123.
Proof. exact (TRANS (@lem6203774) (@lem6203780)). Qed.
Lemma lem6203782 : term369 = term123.
Proof. exact (TRANS (@lem6203771) (@lem6203781)). Qed.
Lemma lem6203784 (m : nat) (n : nat) : (term130 m n) = (term131 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6203785 : term132 = term133.
Proof. exact (@lem6203784 term6 term6). Qed.
Lemma lem6203786 : (term134 = (BIT1 0)) = (term135 = term6).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6203787 : term135 = term6.
Proof. exact (EQ_MP (@lem6203786) (@lem940073)). Qed.
Lemma lem6203788 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6203789 : term133 = term102.
Proof. exact (MK_COMB (@lem6203788) (@lem6203787)). Qed.
Lemma lem6203790 : term132 = term102.
Proof. exact (TRANS (@lem6203785) (@lem6203789)). Qed.
Lemma lem6203791 : term125 = term125.
Proof. exact (eq_refl term125). Qed.
Lemma lem6203792 : term266 = term264.
Proof. exact (MK_COMB (@lem6203791) (@lem6203790)). Qed.
Lemma lem6203794 (m : nat) (n : nat) : (term192 m n) = (term193 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem6203795 : term264 = term265.
Proof. exact (@lem6203794 term6 term6). Qed.
Lemma lem6203796 : (term134 = (BIT1 0)) = (term135 = term6).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6203797 : term135 = term6.
Proof. exact (EQ_MP (@lem6203796) (@lem940073)). Qed.
Lemma lem6203798 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6203799 : term133 = term102.
Proof. exact (MK_COMB (@lem6203798) (@lem6203797)). Qed.
Lemma lem6203800 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem6203801 : term265 = term123.
Proof. exact (MK_COMB (@lem6203800) (@lem6203799)). Qed.
Lemma lem6203802 : term264 = term123.
Proof. exact (TRANS (@lem6203795) (@lem6203801)). Qed.
Lemma lem6203803 : term266 = term123.
Proof. exact (TRANS (@lem6203792) (@lem6203802)). Qed.
Lemma lem6203804 : term123 = term266.
Proof. exact (SYM (@lem6203803)). Qed.
Lemma lem6203805 : term369 = term266.
Proof. exact (TRANS (@lem6203782) (@lem6203804)). Qed.
Lemma lem6203806 : term358 = term124.
Proof. exact (@lem6203729 (@lem6203805)). Qed.
Lemma lem6203807 : term357 = term124.
Proof. exact (TRANS (@lem6203695) (@lem6203806)). Qed.
Lemma lem6203809 (x : real) : (term139 x) = x.
Proof. exact (EQ_MP (@lem1981475 x) (@lem1981474 x)). Qed.
Lemma lem6203810 : term124 = term123.
Proof. exact (@lem6203809 term123). Qed.
Lemma lem6203811 : term357 = term123.
Proof. exact (TRANS (@lem6203807) (@lem6203810)). Qed.
Lemma lem6203812 (_79018 : int) : (term356 _79018) = term267.
Proof. exact (MK_COMB (@lem6203686 _79018) (@lem6203811)). Qed.
Lemma lem6203813 (_79018 : int) : (term355 _79018) = term267.
Proof. exact (TRANS (@lem6203576 _79018) (@lem6203812 _79018)). Qed.
Lemma lem6203814 : term267 = term123.
Proof. exact (@lem1982721 term123). Qed.
Lemma lem6203815 (_79018 : int) : (term355 _79018) = term123.
Proof. exact (TRANS (@lem6203813 _79018) (@lem6203814)). Qed.
Lemma lem6203816 (_79017 : int) (_79018 : int) : (term825 _79017 _79018) = term267.
Proof. exact (MK_COMB (@lem6203575 _79017) (@lem6203815 _79018)). Qed.
Lemma lem6203817 (_79017 : int) (_79018 : int) : (term824 _79017 _79018) = term267.
Proof. exact (TRANS (@lem6203465 _79017 _79018) (@lem6203816 _79017 _79018)). Qed.
Lemma lem6203818 : term267 = term123.
Proof. exact (@lem1982721 term123). Qed.
Lemma lem6203819 (_79017 : int) (_79018 : int) : (term824 _79017 _79018) = term123.
Proof. exact (TRANS (@lem6203817 _79017 _79018) (@lem6203818)). Qed.
Lemma lem6203820 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem6203821 (_79017 : int) (_79018 : int) : (term826 _79017 _79018) = term269.
Proof. exact (MK_COMB (@lem6203820) (@lem6203819 _79017 _79018)). Qed.
Lemma lem6203822 : term65 = term65.
Proof. exact (eq_refl term65). Qed.
Lemma lem6203823 (_79017 : int) (_79018 : int) : (term823 _79017 _79018) = term270.
Proof. exact (MK_COMB (@lem6203821 _79017 _79018) (@lem6203822)). Qed.
Lemma lem6203824 (_79017 : int) (_79018 : int) (h1 : term803 _79017 _79018) : term270.
Proof. exact (EQ_MP (@lem6203823 _79017 _79018) (@lem6203464 _79017 _79018 h1)). Qed.
Lemma lem6203826 (y : real) (x : real) : (real_ge x y) = (real_le y x).
Proof. exact (EQ_MP (@lem1980260 y x) (@lem1980259 y x)). Qed.
Lemma lem6203827 : term270 = term273.
Proof. exact (@lem6203826 term65 term123). Qed.
Lemma lem6203829 (x : nat) : (term121 x) = (term122 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem6203830 : term123 = term124.
Proof. exact (@lem6203829 term6). Qed.
Lemma lem6203832 (x : nat) : (real_of_num x) = (term119 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6203833 : term65 = term120.
Proof. exact (@lem6203832 (NUMERAL 0)). Qed.
Lemma lem6203834 : real_le = real_le.
Proof. exact (eq_refl real_le). Qed.
Lemma lem6203835 : term67 = term274.
Proof. exact (MK_COMB (@lem6203834) (@lem6203833)). Qed.
Lemma lem6203836 : term273 = term275.
Proof. exact (MK_COMB (@lem6203835) (@lem6203830)). Qed.
Lemma lem6203837 : term276.
Proof. exact (@lem1980026 term65 term102 term123 term102). Qed.
Lemma lem6203839 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6203840 : term156 = term157.
Proof. exact (@lem6203839 (NUMERAL 0) term6). Qed.
Lemma lem6203841 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6203842 (h1 : term158 = (BIT1 0)) : term157 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6203843 : (term158 = (BIT1 0)) = (term157 = True).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6203842 h1) (fun h1 : term157 = True => @lem6203841)). Qed.
Lemma lem6203844 : term157 = True.
Proof. exact (EQ_MP (@lem6203843) (@lem6203841)). Qed.
Lemma lem6203845 : term156 = True.
Proof. exact (TRANS (@lem6203840) (@lem6203844)). Qed.
Lemma lem6203846 : True = term156.
Proof. exact (SYM (@lem6203845)). Qed.
Lemma lem6203847 : term156.
Proof. exact (EQ_MP (@lem6203846) (@lem0)). Qed.
Lemma lem6203848 : term277.
Proof. exact (@lem6203837 (@lem6203847)). Qed.
Lemma lem6203850 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6203851 : term156 = term157.
Proof. exact (@lem6203850 (NUMERAL 0) term6). Qed.
Lemma lem6203852 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6203853 (h1 : term158 = (BIT1 0)) : term157 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6203854 : (term158 = (BIT1 0)) = (term157 = True).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6203853 h1) (fun h1 : term157 = True => @lem6203852)). Qed.
Lemma lem6203855 : term157 = True.
Proof. exact (EQ_MP (@lem6203854) (@lem6203852)). Qed.
Lemma lem6203856 : term156 = True.
Proof. exact (TRANS (@lem6203851) (@lem6203855)). Qed.
Lemma lem6203857 : True = term156.
Proof. exact (SYM (@lem6203856)). Qed.
Lemma lem6203858 : term156.
Proof. exact (EQ_MP (@lem6203857) (@lem0)). Qed.
Lemma lem6203859 : term275 = term278.
Proof. exact (@lem6203848 (@lem6203858)). Qed.
Lemma lem6203861 (m : nat) (n : nat) : (term192 m n) = (term193 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem6203862 : term264 = term265.
Proof. exact (@lem6203861 term6 term6). Qed.
Lemma lem6203863 : (term134 = (BIT1 0)) = (term135 = term6).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6203864 : term135 = term6.
Proof. exact (EQ_MP (@lem6203863) (@lem940073)). Qed.
Lemma lem6203865 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6203866 : term133 = term102.
Proof. exact (MK_COMB (@lem6203865) (@lem6203864)). Qed.
Lemma lem6203867 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem6203868 : term265 = term123.
Proof. exact (MK_COMB (@lem6203867) (@lem6203866)). Qed.
Lemma lem6203869 : term264 = term123.
Proof. exact (TRANS (@lem6203862) (@lem6203868)). Qed.
Lemma lem6203871 (x : nat) : (term245 x) = term65.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem6203872 : term244 = term65.
Proof. exact (@lem6203871 term6). Qed.
Lemma lem6203873 : real_le = real_le.
Proof. exact (eq_refl real_le). Qed.
Lemma lem6203874 : term279 = term67.
Proof. exact (MK_COMB (@lem6203873) (@lem6203872)). Qed.
Lemma lem6203875 : term278 = term273.
Proof. exact (MK_COMB (@lem6203874) (@lem6203869)). Qed.
Lemma lem6203877 (m : nat) (n : nat) : (term280 m n) = (term281 m n).
Proof. exact (proj2 (@lem1365406 m n)). Qed.
Lemma lem6203878 : term273 = term282.
Proof. exact (@lem6203877 (NUMERAL 0) term6). Qed.
Lemma lem6203879 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6203880 (h1 : term158 = (BIT1 0)) : (term6 = (NUMERAL 0)) = False.
Proof. exact (@lem1013352 0 0 (BIT1 0) h1). Qed.
Lemma lem6203881 : (term158 = (BIT1 0)) = ((term6 = (NUMERAL 0)) = False).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6203880 h1) (fun h1 : (term6 = (NUMERAL 0)) = False => @lem6203879)). Qed.
Lemma lem6203882 : (term6 = (NUMERAL 0)) = False.
Proof. exact (EQ_MP (@lem6203881) (@lem6203879)). Qed.
Lemma lem6203883 : ((NUMERAL 0) = (NUMERAL 0)) = True.
Proof. exact (@lem1013364 0). Qed.
Lemma lem6203884 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6203885 : term283 = (and True).
Proof. exact (MK_COMB (@lem6203884) (@lem6203883)). Qed.
Lemma lem6203886 : term282 = (True /\ False).
Proof. exact (MK_COMB (@lem6203885) (@lem6203882)). Qed.
Lemma lem6203888 : (True /\ False) = False.
Proof. exact (proj1 (@lem1365106)). Qed.
Lemma lem6203889 : term282 = False.
Proof. exact (TRANS (@lem6203886) (@lem6203888)). Qed.
Lemma lem6203890 : term273 = False.
Proof. exact (TRANS (@lem6203878) (@lem6203889)). Qed.
Lemma lem6203891 : term278 = False.
Proof. exact (TRANS (@lem6203875) (@lem6203890)). Qed.
Lemma lem6203892 : term275 = False.
Proof. exact (TRANS (@lem6203859) (@lem6203891)). Qed.
Lemma lem6203893 : term273 = False.
Proof. exact (TRANS (@lem6203836) (@lem6203892)). Qed.
Lemma lem6203894 : term270 = False.
Proof. exact (TRANS (@lem6203827) (@lem6203893)). Qed.
Lemma lem6203895 (_79017 : int) (_79018 : int) (h1 : term803 _79017 _79018) : False.
Proof. exact (EQ_MP (@lem6203894) (@lem6203824 _79017 _79018 h1)). Qed.
Lemma lem6203896 (_79017 : int) (_79018 : int) (h1 : term827 _79017 _79018) : term827 _79017 _79018.
Proof. exact (h1). Qed.
Lemma lem6203897 (_79017 : int) (_79018 : int) (h1 : term827 _79017 _79018) : term577 _79017 _79018.
Proof. exact (proj2 (@lem6203896 _79017 _79018 h1)). Qed.
Lemma lem6203899 (_79017 : int) (_79018 : int) (h1 : term827 _79017 _79018) : term564 _79017 _79018.
Proof. exact (proj2 (@lem6203897 _79017 _79018 h1)). Qed.
Lemma lem6203901 (_79017 : int) (_79018 : int) (h1 : term827 _79017 _79018) : term544 _79017 _79018.
Proof. exact (proj2 (@lem6203899 _79017 _79018 h1)). Qed.
Lemma lem6203902 (_79017 : int) (_79018 : int) (h1 : term827 _79017 _79018) : term526 _79017 _79018.
Proof. exact (proj1 (@lem6203899 _79017 _79018 h1)). Qed.
Lemma lem6203904 (y : real) (x : real) : (real_gt x y) = (real_lt y x).
Proof. exact (EQ_MP (@lem1980266 y x) (@lem1980265 y x)). Qed.
Lemma lem6203905 : term755 = term156.
Proof. exact (@lem6203904 term65 term102). Qed.
Lemma lem6203907 (x : nat) : (real_of_num x) = (term119 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6203908 : term102 = term147.
Proof. exact (@lem6203907 term6). Qed.
Lemma lem6203910 (x : nat) : (real_of_num x) = (term119 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6203911 : term65 = term120.
Proof. exact (@lem6203910 (NUMERAL 0)). Qed.
Lemma lem6203912 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem6203913 : term588 = term589.
Proof. exact (MK_COMB (@lem6203912) (@lem6203911)). Qed.
Lemma lem6203914 : term156 = term756.
Proof. exact (MK_COMB (@lem6203913) (@lem6203908)). Qed.
Lemma lem6203915 : term757.
Proof. exact (@lem1980255 term65 term102 term102 term102). Qed.
Lemma lem6203917 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6203918 : term156 = term157.
Proof. exact (@lem6203917 (NUMERAL 0) term6). Qed.
Lemma lem6203919 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6203920 (h1 : term158 = (BIT1 0)) : term157 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6203921 : (term158 = (BIT1 0)) = (term157 = True).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6203920 h1) (fun h1 : term157 = True => @lem6203919)). Qed.
Lemma lem6203922 : term157 = True.
Proof. exact (EQ_MP (@lem6203921) (@lem6203919)). Qed.
Lemma lem6203923 : term156 = True.
Proof. exact (TRANS (@lem6203918) (@lem6203922)). Qed.
Lemma lem6203924 : True = term156.
Proof. exact (SYM (@lem6203923)). Qed.
Lemma lem6203925 : term156.
Proof. exact (EQ_MP (@lem6203924) (@lem0)). Qed.
Lemma lem6203926 : term758.
Proof. exact (@lem6203915 (@lem6203925)). Qed.
Lemma lem6203928 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6203929 : term156 = term157.
Proof. exact (@lem6203928 (NUMERAL 0) term6). Qed.
Lemma lem6203930 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6203931 (h1 : term158 = (BIT1 0)) : term157 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6203932 : (term158 = (BIT1 0)) = (term157 = True).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6203931 h1) (fun h1 : term157 = True => @lem6203930)). Qed.
Lemma lem6203933 : term157 = True.
Proof. exact (EQ_MP (@lem6203932) (@lem6203930)). Qed.
Lemma lem6203934 : term156 = True.
Proof. exact (TRANS (@lem6203929) (@lem6203933)). Qed.
Lemma lem6203935 : True = term156.
Proof. exact (SYM (@lem6203934)). Qed.
Lemma lem6203936 : term156.
Proof. exact (EQ_MP (@lem6203935) (@lem0)). Qed.
Lemma lem6203937 : term756 = term759.
Proof. exact (@lem6203926 (@lem6203936)). Qed.
Lemma lem6203939 (m : nat) (n : nat) : (term130 m n) = (term131 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6203940 : term132 = term133.
Proof. exact (@lem6203939 term6 term6). Qed.
Lemma lem6203941 : (term134 = (BIT1 0)) = (term135 = term6).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6203942 : term135 = term6.
Proof. exact (EQ_MP (@lem6203941) (@lem940073)). Qed.
Lemma lem6203943 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6203944 : term133 = term102.
Proof. exact (MK_COMB (@lem6203943) (@lem6203942)). Qed.
Lemma lem6203945 : term132 = term102.
Proof. exact (TRANS (@lem6203940) (@lem6203944)). Qed.
Lemma lem6203947 (x : nat) : (term245 x) = term65.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem6203948 : term244 = term65.
Proof. exact (@lem6203947 term6). Qed.
Lemma lem6203949 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem6203950 : term594 = term588.
Proof. exact (MK_COMB (@lem6203949) (@lem6203948)). Qed.
Lemma lem6203951 : term759 = term156.
Proof. exact (MK_COMB (@lem6203950) (@lem6203945)). Qed.
Lemma lem6203953 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6203954 : term156 = term157.
Proof. exact (@lem6203953 (NUMERAL 0) term6). Qed.
Lemma lem6203955 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6203956 (h1 : term158 = (BIT1 0)) : term157 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6203957 : (term158 = (BIT1 0)) = (term157 = True).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6203956 h1) (fun h1 : term157 = True => @lem6203955)). Qed.
Lemma lem6203958 : term157 = True.
Proof. exact (EQ_MP (@lem6203957) (@lem6203955)). Qed.
Lemma lem6203959 : term156 = True.
Proof. exact (TRANS (@lem6203954) (@lem6203958)). Qed.
Lemma lem6203960 : term759 = True.
Proof. exact (TRANS (@lem6203951) (@lem6203959)). Qed.
Lemma lem6203961 : term756 = True.
Proof. exact (TRANS (@lem6203937) (@lem6203960)). Qed.
Lemma lem6203962 : term156 = True.
Proof. exact (TRANS (@lem6203914) (@lem6203961)). Qed.
Lemma lem6203963 : term755 = True.
Proof. exact (TRANS (@lem6203905) (@lem6203962)). Qed.
Lemma lem6203964 : True = term755.
Proof. exact (SYM (@lem6203963)). Qed.
Lemma lem6203965 : term755.
Proof. exact (EQ_MP (@lem6203964) (@lem0)). Qed.
Lemma lem6203966 (_79017 : int) (_79018 : int) (h1 : term827 _79017 _79018) : term828 _79017 _79018.
Proof. exact (conj (@lem6203965) (@lem6203902 _79017 _79018 h1)). Qed.
Lemma lem6203968 (x : real) (y : real) : term598 x y.
Proof. exact (proj1 (@lem1988332 x y)). Qed.
Lemma lem6203969 (_79017 : int) (_79018 : int) : term829 _79017 _79018.
Proof. exact (@lem6203968 term102 (term523 _79017 _79018)). Qed.
Lemma lem6203970 (_79017 : int) (_79018 : int) (h1 : term827 _79017 _79018) : term830 _79017 _79018.
Proof. exact (@lem6203969 _79017 _79018 (@lem6203966 _79017 _79018 h1)). Qed.
Lemma lem6203971 (_79017 : int) (_79018 : int) : (term831 _79017 _79018) = (term523 _79017 _79018).
Proof. exact (@lem1982733 (term523 _79017 _79018)). Qed.
Lemma lem6203972 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem6203973 (_79017 : int) (_79018 : int) : (term832 _79017 _79018) = (term525 _79017 _79018).
Proof. exact (MK_COMB (@lem6203972) (@lem6203971 _79017 _79018)). Qed.
Lemma lem6203974 : term65 = term65.
Proof. exact (eq_refl term65). Qed.
Lemma lem6203975 (_79017 : int) (_79018 : int) : (term830 _79017 _79018) = (term526 _79017 _79018).
Proof. exact (MK_COMB (@lem6203973 _79017 _79018) (@lem6203974)). Qed.
Lemma lem6203976 (_79017 : int) (_79018 : int) (h1 : term827 _79017 _79018) : term526 _79017 _79018.
Proof. exact (EQ_MP (@lem6203975 _79017 _79018) (@lem6203970 _79017 _79018 h1)). Qed.
Lemma lem6203978 (y : real) (x : real) : (real_gt x y) = (real_lt y x).
Proof. exact (EQ_MP (@lem1980266 y x) (@lem1980265 y x)). Qed.
Lemma lem6203979 : term755 = term156.
Proof. exact (@lem6203978 term65 term102). Qed.
Lemma lem6203981 (x : nat) : (real_of_num x) = (term119 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6203982 : term102 = term147.
Proof. exact (@lem6203981 term6). Qed.
Lemma lem6203984 (x : nat) : (real_of_num x) = (term119 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6203985 : term65 = term120.
Proof. exact (@lem6203984 (NUMERAL 0)). Qed.
Lemma lem6203986 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem6203987 : term588 = term589.
Proof. exact (MK_COMB (@lem6203986) (@lem6203985)). Qed.
Lemma lem6203988 : term156 = term756.
Proof. exact (MK_COMB (@lem6203987) (@lem6203982)). Qed.
Lemma lem6203989 : term757.
Proof. exact (@lem1980255 term65 term102 term102 term102). Qed.
Lemma lem6203991 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6203992 : term156 = term157.
Proof. exact (@lem6203991 (NUMERAL 0) term6). Qed.
Lemma lem6203993 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6203994 (h1 : term158 = (BIT1 0)) : term157 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6203995 : (term158 = (BIT1 0)) = (term157 = True).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6203994 h1) (fun h1 : term157 = True => @lem6203993)). Qed.
Lemma lem6203996 : term157 = True.
Proof. exact (EQ_MP (@lem6203995) (@lem6203993)). Qed.
Lemma lem6203997 : term156 = True.
Proof. exact (TRANS (@lem6203992) (@lem6203996)). Qed.
Lemma lem6203998 : True = term156.
Proof. exact (SYM (@lem6203997)). Qed.
Lemma lem6203999 : term156.
Proof. exact (EQ_MP (@lem6203998) (@lem0)). Qed.
Lemma lem6204000 : term758.
Proof. exact (@lem6203989 (@lem6203999)). Qed.
Lemma lem6204002 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6204003 : term156 = term157.
Proof. exact (@lem6204002 (NUMERAL 0) term6). Qed.
Lemma lem6204004 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6204005 (h1 : term158 = (BIT1 0)) : term157 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6204006 : (term158 = (BIT1 0)) = (term157 = True).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6204005 h1) (fun h1 : term157 = True => @lem6204004)). Qed.
Lemma lem6204007 : term157 = True.
Proof. exact (EQ_MP (@lem6204006) (@lem6204004)). Qed.
Lemma lem6204008 : term156 = True.
Proof. exact (TRANS (@lem6204003) (@lem6204007)). Qed.
Lemma lem6204009 : True = term156.
Proof. exact (SYM (@lem6204008)). Qed.
Lemma lem6204010 : term156.
Proof. exact (EQ_MP (@lem6204009) (@lem0)). Qed.
Lemma lem6204011 : term756 = term759.
Proof. exact (@lem6204000 (@lem6204010)). Qed.
Lemma lem6204013 (m : nat) (n : nat) : (term130 m n) = (term131 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6204014 : term132 = term133.
Proof. exact (@lem6204013 term6 term6). Qed.
Lemma lem6204015 : (term134 = (BIT1 0)) = (term135 = term6).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6204016 : term135 = term6.
Proof. exact (EQ_MP (@lem6204015) (@lem940073)). Qed.
Lemma lem6204017 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6204018 : term133 = term102.
Proof. exact (MK_COMB (@lem6204017) (@lem6204016)). Qed.
Lemma lem6204019 : term132 = term102.
Proof. exact (TRANS (@lem6204014) (@lem6204018)). Qed.
Lemma lem6204021 (x : nat) : (term245 x) = term65.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem6204022 : term244 = term65.
Proof. exact (@lem6204021 term6). Qed.
Lemma lem6204023 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem6204024 : term594 = term588.
Proof. exact (MK_COMB (@lem6204023) (@lem6204022)). Qed.
Lemma lem6204025 : term759 = term156.
Proof. exact (MK_COMB (@lem6204024) (@lem6204019)). Qed.
Lemma lem6204027 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6204028 : term156 = term157.
Proof. exact (@lem6204027 (NUMERAL 0) term6). Qed.
Lemma lem6204029 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6204030 (h1 : term158 = (BIT1 0)) : term157 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6204031 : (term158 = (BIT1 0)) = (term157 = True).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6204030 h1) (fun h1 : term157 = True => @lem6204029)). Qed.
Lemma lem6204032 : term157 = True.
Proof. exact (EQ_MP (@lem6204031) (@lem6204029)). Qed.
Lemma lem6204033 : term156 = True.
Proof. exact (TRANS (@lem6204028) (@lem6204032)). Qed.
Lemma lem6204034 : term759 = True.
Proof. exact (TRANS (@lem6204025) (@lem6204033)). Qed.
Lemma lem6204035 : term756 = True.
Proof. exact (TRANS (@lem6204011) (@lem6204034)). Qed.
Lemma lem6204036 : term156 = True.
Proof. exact (TRANS (@lem6203988) (@lem6204035)). Qed.
Lemma lem6204037 : term755 = True.
Proof. exact (TRANS (@lem6203979) (@lem6204036)). Qed.
Lemma lem6204038 : True = term755.
Proof. exact (SYM (@lem6204037)). Qed.
Lemma lem6204039 : term755.
Proof. exact (EQ_MP (@lem6204038) (@lem0)). Qed.
Lemma lem6204040 (_79017 : int) (_79018 : int) (h1 : term827 _79017 _79018) : term833 _79017 _79018.
Proof. exact (conj (@lem6204039) (@lem6203901 _79017 _79018 h1)). Qed.
Lemma lem6204042 (x : real) (y : real) : term598 x y.
Proof. exact (proj1 (@lem1988332 x y)). Qed.
Lemma lem6204043 (_79017 : int) (_79018 : int) : term834 _79017 _79018.
Proof. exact (@lem6204042 term102 (term540 _79017 _79018)). Qed.
Lemma lem6204044 (_79017 : int) (_79018 : int) (h1 : term827 _79017 _79018) : term835 _79017 _79018.
Proof. exact (@lem6204043 _79017 _79018 (@lem6204040 _79017 _79018 h1)). Qed.
Lemma lem6204045 (_79017 : int) (_79018 : int) : (term836 _79017 _79018) = (term540 _79017 _79018).
Proof. exact (@lem1982733 (term540 _79017 _79018)). Qed.
Lemma lem6204046 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem6204047 (_79017 : int) (_79018 : int) : (term837 _79017 _79018) = (term543 _79017 _79018).
Proof. exact (MK_COMB (@lem6204046) (@lem6204045 _79017 _79018)). Qed.
Lemma lem6204048 : term65 = term65.
Proof. exact (eq_refl term65). Qed.
Lemma lem6204049 (_79017 : int) (_79018 : int) : (term835 _79017 _79018) = (term544 _79017 _79018).
Proof. exact (MK_COMB (@lem6204047 _79017 _79018) (@lem6204048)). Qed.
Lemma lem6204050 (_79017 : int) (_79018 : int) (h1 : term827 _79017 _79018) : term544 _79017 _79018.
Proof. exact (EQ_MP (@lem6204049 _79017 _79018) (@lem6204044 _79017 _79018 h1)). Qed.
Lemma lem6204051 (_79017 : int) (_79018 : int) (h1 : term827 _79017 _79018) : term838 _79017 _79018.
Proof. exact (conj (@lem6204050 _79017 _79018 h1) (@lem6203976 _79017 _79018 h1)). Qed.
Lemma lem6204053 (x : real) (y : real) : term665 x y.
Proof. exact (proj1 (@lem1988342 x y)). Qed.
Lemma lem6204054 (_79017 : int) (_79018 : int) : term839 _79017 _79018.
Proof. exact (@lem6204053 (term540 _79017 _79018) (term523 _79017 _79018)). Qed.
Lemma lem6204055 (_79017 : int) (_79018 : int) (h1 : term827 _79017 _79018) : term840 _79017 _79018.
Proof. exact (@lem6204054 _79017 _79018 (@lem6204051 _79017 _79018 h1)). Qed.
Lemma lem6204056 (_79017 : int) (_79018 : int) : (term841 _79017 _79018) = (term842 _79017 _79018).
Proof. exact (@lem1982753 (term541 _79017) (real_of_int _79017) (term465 _79018) (term522 _79018)). Qed.
Lemma lem6204057 (_79017 : int) : (term843 _79017) = (term844 _79017).
Proof. exact (@lem1982713 term123 (real_of_int _79017)). Qed.
Lemma lem6204059 (x : nat) : (real_of_num x) = (term119 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6204060 : term102 = term147.
Proof. exact (@lem6204059 term6). Qed.
Lemma lem6204062 (x : nat) : (term121 x) = (term122 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem6204063 : term123 = term124.
Proof. exact (@lem6204062 term6). Qed.
Lemma lem6204064 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem6204065 : term845 = term846.
Proof. exact (MK_COMB (@lem6204064) (@lem6204063)). Qed.
Lemma lem6204066 : term847 = term848.
Proof. exact (MK_COMB (@lem6204065) (@lem6204060)). Qed.
Lemma lem6204067 : term849.
Proof. exact (@lem1981473 term123 term102 term102 term102 term65 term102). Qed.
Lemma lem6204069 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6204070 : term156 = term157.
Proof. exact (@lem6204069 (NUMERAL 0) term6). Qed.
Lemma lem6204071 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6204072 (h1 : term158 = (BIT1 0)) : term157 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6204073 : (term158 = (BIT1 0)) = (term157 = True).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6204072 h1) (fun h1 : term157 = True => @lem6204071)). Qed.
Lemma lem6204074 : term157 = True.
Proof. exact (EQ_MP (@lem6204073) (@lem6204071)). Qed.
Lemma lem6204075 : term156 = True.
Proof. exact (TRANS (@lem6204070) (@lem6204074)). Qed.
Lemma lem6204076 : True = term156.
Proof. exact (SYM (@lem6204075)). Qed.
Lemma lem6204077 : term156.
Proof. exact (EQ_MP (@lem6204076) (@lem0)). Qed.
Lemma lem6204078 : term850.
Proof. exact (@lem6204067 (@lem6204077)). Qed.
Lemma lem6204080 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6204081 : term156 = term157.
Proof. exact (@lem6204080 (NUMERAL 0) term6). Qed.
Lemma lem6204082 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6204083 (h1 : term158 = (BIT1 0)) : term157 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6204084 : (term158 = (BIT1 0)) = (term157 = True).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6204083 h1) (fun h1 : term157 = True => @lem6204082)). Qed.
Lemma lem6204085 : term157 = True.
Proof. exact (EQ_MP (@lem6204084) (@lem6204082)). Qed.
Lemma lem6204086 : term156 = True.
Proof. exact (TRANS (@lem6204081) (@lem6204085)). Qed.
Lemma lem6204087 : True = term156.
Proof. exact (SYM (@lem6204086)). Qed.
Lemma lem6204088 : term156.
Proof. exact (EQ_MP (@lem6204087) (@lem0)). Qed.
Lemma lem6204089 : term851.
Proof. exact (@lem6204078 (@lem6204088)). Qed.
Lemma lem6204091 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6204092 : term156 = term157.
Proof. exact (@lem6204091 (NUMERAL 0) term6). Qed.
Lemma lem6204093 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6204094 (h1 : term158 = (BIT1 0)) : term157 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6204095 : (term158 = (BIT1 0)) = (term157 = True).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6204094 h1) (fun h1 : term157 = True => @lem6204093)). Qed.
Lemma lem6204096 : term157 = True.
Proof. exact (EQ_MP (@lem6204095) (@lem6204093)). Qed.
Lemma lem6204097 : term156 = True.
Proof. exact (TRANS (@lem6204092) (@lem6204096)). Qed.
Lemma lem6204098 : True = term156.
Proof. exact (SYM (@lem6204097)). Qed.
Lemma lem6204099 : term156.
Proof. exact (EQ_MP (@lem6204098) (@lem0)). Qed.
Lemma lem6204100 : term852.
Proof. exact (@lem6204089 (@lem6204099)). Qed.
Lemma lem6204102 (m : nat) (n : nat) : (term130 m n) = (term131 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6204103 : term132 = term133.
Proof. exact (@lem6204102 term6 term6). Qed.
Lemma lem6204104 : (term134 = (BIT1 0)) = (term135 = term6).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6204105 : term135 = term6.
Proof. exact (EQ_MP (@lem6204104) (@lem940073)). Qed.
Lemma lem6204106 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6204107 : term133 = term102.
Proof. exact (MK_COMB (@lem6204106) (@lem6204105)). Qed.
Lemma lem6204108 : term132 = term102.
Proof. exact (TRANS (@lem6204103) (@lem6204107)). Qed.
Lemma lem6204110 (m : nat) (n : nat) : (term192 m n) = (term193 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem6204111 : term264 = term265.
Proof. exact (@lem6204110 term6 term6). Qed.
Lemma lem6204112 : (term134 = (BIT1 0)) = (term135 = term6).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6204113 : term135 = term6.
Proof. exact (EQ_MP (@lem6204112) (@lem940073)). Qed.
Lemma lem6204114 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6204115 : term133 = term102.
Proof. exact (MK_COMB (@lem6204114) (@lem6204113)). Qed.
Lemma lem6204116 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem6204117 : term265 = term123.
Proof. exact (MK_COMB (@lem6204116) (@lem6204115)). Qed.
Lemma lem6204118 : term264 = term123.
Proof. exact (TRANS (@lem6204111) (@lem6204117)). Qed.
Lemma lem6204119 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem6204120 : term853 = term845.
Proof. exact (MK_COMB (@lem6204119) (@lem6204118)). Qed.
Lemma lem6204121 : term854 = term847.
Proof. exact (MK_COMB (@lem6204120) (@lem6204108)). Qed.
Lemma lem6204123 (m : nat) : (term682 m) = term65.
Proof. exact (proj1 (@lem1367303 m)). Qed.
Lemma lem6204124 : term847 = term65.
Proof. exact (@lem6204123 term6). Qed.
Lemma lem6204125 : term854 = term65.
Proof. exact (TRANS (@lem6204121) (@lem6204124)). Qed.
Lemma lem6204126 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem6204127 : term855 = term242.
Proof. exact (MK_COMB (@lem6204126) (@lem6204125)). Qed.
Lemma lem6204128 : term102 = term102.
Proof. exact (eq_refl term102). Qed.
Lemma lem6204129 : term856 = term244.
Proof. exact (MK_COMB (@lem6204127) (@lem6204128)). Qed.
Lemma lem6204131 (x : nat) : (term245 x) = term65.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem6204132 : term244 = term65.
Proof. exact (@lem6204131 term6). Qed.
Lemma lem6204133 : term856 = term65.
Proof. exact (TRANS (@lem6204129) (@lem6204132)). Qed.
Lemma lem6204135 (m : nat) (n : nat) : (term130 m n) = (term131 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6204136 : term132 = term133.
Proof. exact (@lem6204135 term6 term6). Qed.
Lemma lem6204137 : (term134 = (BIT1 0)) = (term135 = term6).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6204138 : term135 = term6.
Proof. exact (EQ_MP (@lem6204137) (@lem940073)). Qed.
Lemma lem6204139 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6204140 : term133 = term102.
Proof. exact (MK_COMB (@lem6204139) (@lem6204138)). Qed.
Lemma lem6204141 : term132 = term102.
Proof. exact (TRANS (@lem6204136) (@lem6204140)). Qed.
Lemma lem6204142 : term242 = term242.
Proof. exact (eq_refl term242). Qed.
Lemma lem6204143 : term246 = term244.
Proof. exact (MK_COMB (@lem6204142) (@lem6204141)). Qed.
Lemma lem6204145 (x : nat) : (term245 x) = term65.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem6204146 : term244 = term65.
Proof. exact (@lem6204145 term6). Qed.
Lemma lem6204147 : term246 = term65.
Proof. exact (TRANS (@lem6204143) (@lem6204146)). Qed.
Lemma lem6204148 : term65 = term246.
Proof. exact (SYM (@lem6204147)). Qed.
Lemma lem6204149 : term856 = term246.
Proof. exact (TRANS (@lem6204133) (@lem6204148)). Qed.
Lemma lem6204150 : term848 = term120.
Proof. exact (@lem6204100 (@lem6204149)). Qed.
Lemma lem6204151 : term847 = term120.
Proof. exact (TRANS (@lem6204066) (@lem6204150)). Qed.
Lemma lem6204153 (x : real) : (term139 x) = x.
Proof. exact (EQ_MP (@lem1981475 x) (@lem1981474 x)). Qed.
Lemma lem6204154 : term120 = term65.
Proof. exact (@lem6204153 term65). Qed.
Lemma lem6204155 : term847 = term65.
Proof. exact (TRANS (@lem6204151) (@lem6204154)). Qed.
Lemma lem6204156 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem6204157 : term857 = term242.
Proof. exact (MK_COMB (@lem6204156) (@lem6204155)). Qed.
Lemma lem6204158 (_79017 : int) : (real_of_int _79017) = (real_of_int _79017).
Proof. exact (eq_refl (real_of_int _79017)). Qed.
Lemma lem6204159 (_79017 : int) : (term844 _79017) = (term248 _79017).
Proof. exact (MK_COMB (@lem6204157) (@lem6204158 _79017)). Qed.
Lemma lem6204160 (_79017 : int) : (term843 _79017) = (term248 _79017).
Proof. exact (TRANS (@lem6204057 _79017) (@lem6204159 _79017)). Qed.
Lemma lem6204161 (_79017 : int) : (term248 _79017) = term65.
Proof. exact (@lem1982719 (real_of_int _79017)). Qed.
Lemma lem6204162 (_79017 : int) : (term843 _79017) = term65.
Proof. exact (TRANS (@lem6204160 _79017) (@lem6204161 _79017)). Qed.
Lemma lem6204163 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem6204164 (_79017 : int) : (term858 _79017) = term250.
Proof. exact (MK_COMB (@lem6204163) (@lem6204162 _79017)). Qed.
Lemma lem6204165 (_79018 : int) : (term859 _79018) = (term860 _79018).
Proof. exact (@lem1982753 (real_of_int _79018) (term541 _79018) term102 term212). Qed.
Lemma lem6204166 (_79018 : int) : (term861 _79018) = (term844 _79018).
Proof. exact (@lem1982715 term123 (real_of_int _79018)). Qed.
Lemma lem6204168 (x : nat) : (real_of_num x) = (term119 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6204169 : term102 = term147.
Proof. exact (@lem6204168 term6). Qed.
Lemma lem6204171 (x : nat) : (term121 x) = (term122 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem6204172 : term123 = term124.
Proof. exact (@lem6204171 term6). Qed.
Lemma lem6204173 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem6204174 : term845 = term846.
Proof. exact (MK_COMB (@lem6204173) (@lem6204172)). Qed.
Lemma lem6204175 : term847 = term848.
Proof. exact (MK_COMB (@lem6204174) (@lem6204169)). Qed.
Lemma lem6204176 : term849.
Proof. exact (@lem1981473 term123 term102 term102 term102 term65 term102). Qed.
Lemma lem6204178 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6204179 : term156 = term157.
Proof. exact (@lem6204178 (NUMERAL 0) term6). Qed.
Lemma lem6204180 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6204181 (h1 : term158 = (BIT1 0)) : term157 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6204182 : (term158 = (BIT1 0)) = (term157 = True).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6204181 h1) (fun h1 : term157 = True => @lem6204180)). Qed.
Lemma lem6204183 : term157 = True.
Proof. exact (EQ_MP (@lem6204182) (@lem6204180)). Qed.
Lemma lem6204184 : term156 = True.
Proof. exact (TRANS (@lem6204179) (@lem6204183)). Qed.
Lemma lem6204185 : True = term156.
Proof. exact (SYM (@lem6204184)). Qed.
Lemma lem6204186 : term156.
Proof. exact (EQ_MP (@lem6204185) (@lem0)). Qed.
Lemma lem6204187 : term850.
Proof. exact (@lem6204176 (@lem6204186)). Qed.
Lemma lem6204189 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6204190 : term156 = term157.
Proof. exact (@lem6204189 (NUMERAL 0) term6). Qed.
Lemma lem6204191 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6204192 (h1 : term158 = (BIT1 0)) : term157 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6204193 : (term158 = (BIT1 0)) = (term157 = True).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6204192 h1) (fun h1 : term157 = True => @lem6204191)). Qed.
Lemma lem6204194 : term157 = True.
Proof. exact (EQ_MP (@lem6204193) (@lem6204191)). Qed.
Lemma lem6204195 : term156 = True.
Proof. exact (TRANS (@lem6204190) (@lem6204194)). Qed.
Lemma lem6204196 : True = term156.
Proof. exact (SYM (@lem6204195)). Qed.
Lemma lem6204197 : term156.
Proof. exact (EQ_MP (@lem6204196) (@lem0)). Qed.
Lemma lem6204198 : term851.
Proof. exact (@lem6204187 (@lem6204197)). Qed.
Lemma lem6204200 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6204201 : term156 = term157.
Proof. exact (@lem6204200 (NUMERAL 0) term6). Qed.
Lemma lem6204202 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6204203 (h1 : term158 = (BIT1 0)) : term157 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6204204 : (term158 = (BIT1 0)) = (term157 = True).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6204203 h1) (fun h1 : term157 = True => @lem6204202)). Qed.
Lemma lem6204205 : term157 = True.
Proof. exact (EQ_MP (@lem6204204) (@lem6204202)). Qed.
Lemma lem6204206 : term156 = True.
Proof. exact (TRANS (@lem6204201) (@lem6204205)). Qed.
Lemma lem6204207 : True = term156.
Proof. exact (SYM (@lem6204206)). Qed.
Lemma lem6204208 : term156.
Proof. exact (EQ_MP (@lem6204207) (@lem0)). Qed.
Lemma lem6204209 : term852.
Proof. exact (@lem6204198 (@lem6204208)). Qed.
Lemma lem6204211 (m : nat) (n : nat) : (term130 m n) = (term131 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6204212 : term132 = term133.
Proof. exact (@lem6204211 term6 term6). Qed.
Lemma lem6204213 : (term134 = (BIT1 0)) = (term135 = term6).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6204214 : term135 = term6.
Proof. exact (EQ_MP (@lem6204213) (@lem940073)). Qed.
Lemma lem6204215 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6204216 : term133 = term102.
Proof. exact (MK_COMB (@lem6204215) (@lem6204214)). Qed.
Lemma lem6204217 : term132 = term102.
Proof. exact (TRANS (@lem6204212) (@lem6204216)). Qed.
Lemma lem6204219 (m : nat) (n : nat) : (term192 m n) = (term193 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem6204220 : term264 = term265.
Proof. exact (@lem6204219 term6 term6). Qed.
Lemma lem6204221 : (term134 = (BIT1 0)) = (term135 = term6).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6204222 : term135 = term6.
Proof. exact (EQ_MP (@lem6204221) (@lem940073)). Qed.
Lemma lem6204223 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6204224 : term133 = term102.
Proof. exact (MK_COMB (@lem6204223) (@lem6204222)). Qed.
Lemma lem6204225 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem6204226 : term265 = term123.
Proof. exact (MK_COMB (@lem6204225) (@lem6204224)). Qed.
Lemma lem6204227 : term264 = term123.
Proof. exact (TRANS (@lem6204220) (@lem6204226)). Qed.
Lemma lem6204228 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem6204229 : term853 = term845.
Proof. exact (MK_COMB (@lem6204228) (@lem6204227)). Qed.
Lemma lem6204230 : term854 = term847.
Proof. exact (MK_COMB (@lem6204229) (@lem6204217)). Qed.
Lemma lem6204232 (m : nat) : (term682 m) = term65.
Proof. exact (proj1 (@lem1367303 m)). Qed.
Lemma lem6204233 : term847 = term65.
Proof. exact (@lem6204232 term6). Qed.
Lemma lem6204234 : term854 = term65.
Proof. exact (TRANS (@lem6204230) (@lem6204233)). Qed.
Lemma lem6204235 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem6204236 : term855 = term242.
Proof. exact (MK_COMB (@lem6204235) (@lem6204234)). Qed.
Lemma lem6204237 : term102 = term102.
Proof. exact (eq_refl term102). Qed.
Lemma lem6204238 : term856 = term244.
Proof. exact (MK_COMB (@lem6204236) (@lem6204237)). Qed.
Lemma lem6204240 (x : nat) : (term245 x) = term65.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem6204241 : term244 = term65.
Proof. exact (@lem6204240 term6). Qed.
Lemma lem6204242 : term856 = term65.
Proof. exact (TRANS (@lem6204238) (@lem6204241)). Qed.
Lemma lem6204244 (m : nat) (n : nat) : (term130 m n) = (term131 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6204245 : term132 = term133.
Proof. exact (@lem6204244 term6 term6). Qed.
Lemma lem6204246 : (term134 = (BIT1 0)) = (term135 = term6).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6204247 : term135 = term6.
Proof. exact (EQ_MP (@lem6204246) (@lem940073)). Qed.
Lemma lem6204248 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6204249 : term133 = term102.
Proof. exact (MK_COMB (@lem6204248) (@lem6204247)). Qed.
Lemma lem6204250 : term132 = term102.
Proof. exact (TRANS (@lem6204245) (@lem6204249)). Qed.
Lemma lem6204251 : term242 = term242.
Proof. exact (eq_refl term242). Qed.
Lemma lem6204252 : term246 = term244.
Proof. exact (MK_COMB (@lem6204251) (@lem6204250)). Qed.
Lemma lem6204254 (x : nat) : (term245 x) = term65.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem6204255 : term244 = term65.
Proof. exact (@lem6204254 term6). Qed.
Lemma lem6204256 : term246 = term65.
Proof. exact (TRANS (@lem6204252) (@lem6204255)). Qed.
Lemma lem6204257 : term65 = term246.
Proof. exact (SYM (@lem6204256)). Qed.
Lemma lem6204258 : term856 = term246.
Proof. exact (TRANS (@lem6204242) (@lem6204257)). Qed.
Lemma lem6204259 : term848 = term120.
Proof. exact (@lem6204209 (@lem6204258)). Qed.
Lemma lem6204260 : term847 = term120.
Proof. exact (TRANS (@lem6204175) (@lem6204259)). Qed.
Lemma lem6204262 (x : real) : (term139 x) = x.
Proof. exact (EQ_MP (@lem1981475 x) (@lem1981474 x)). Qed.
Lemma lem6204263 : term120 = term65.
Proof. exact (@lem6204262 term65). Qed.
Lemma lem6204264 : term847 = term65.
Proof. exact (TRANS (@lem6204260) (@lem6204263)). Qed.
Lemma lem6204265 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem6204266 : term857 = term242.
Proof. exact (MK_COMB (@lem6204265) (@lem6204264)). Qed.
Lemma lem6204267 (_79018 : int) : (real_of_int _79018) = (real_of_int _79018).
Proof. exact (eq_refl (real_of_int _79018)). Qed.
Lemma lem6204268 (_79018 : int) : (term844 _79018) = (term248 _79018).
Proof. exact (MK_COMB (@lem6204266) (@lem6204267 _79018)). Qed.
Lemma lem6204269 (_79018 : int) : (term861 _79018) = (term248 _79018).
Proof. exact (TRANS (@lem6204166 _79018) (@lem6204268 _79018)). Qed.
Lemma lem6204270 (_79018 : int) : (term248 _79018) = term65.
Proof. exact (@lem1982719 (real_of_int _79018)). Qed.
Lemma lem6204271 (_79018 : int) : (term861 _79018) = term65.
Proof. exact (TRANS (@lem6204269 _79018) (@lem6204270 _79018)). Qed.
Lemma lem6204272 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem6204273 (_79018 : int) : (term862 _79018) = term250.
Proof. exact (MK_COMB (@lem6204272) (@lem6204271 _79018)). Qed.
Lemma lem6204275 (x : nat) : (term121 x) = (term122 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem6204276 : term212 = term215.
Proof. exact (@lem6204275 term22). Qed.
Lemma lem6204278 (x : nat) : (real_of_num x) = (term119 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6204279 : term102 = term147.
Proof. exact (@lem6204278 term6). Qed.
Lemma lem6204280 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem6204281 : term500 = term501.
Proof. exact (MK_COMB (@lem6204280) (@lem6204279)). Qed.
Lemma lem6204282 : term863 = term864.
Proof. exact (MK_COMB (@lem6204281) (@lem6204276)). Qed.
Lemma lem6204283 : term865.
Proof. exact (@lem1981473 term102 term102 term212 term102 term123 term102). Qed.
Lemma lem6204285 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6204286 : term156 = term157.
Proof. exact (@lem6204285 (NUMERAL 0) term6). Qed.
Lemma lem6204287 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6204288 (h1 : term158 = (BIT1 0)) : term157 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6204289 : (term158 = (BIT1 0)) = (term157 = True).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6204288 h1) (fun h1 : term157 = True => @lem6204287)). Qed.
Lemma lem6204290 : term157 = True.
Proof. exact (EQ_MP (@lem6204289) (@lem6204287)). Qed.
Lemma lem6204291 : term156 = True.
Proof. exact (TRANS (@lem6204286) (@lem6204290)). Qed.
Lemma lem6204292 : True = term156.
Proof. exact (SYM (@lem6204291)). Qed.
Lemma lem6204293 : term156.
Proof. exact (EQ_MP (@lem6204292) (@lem0)). Qed.
Lemma lem6204294 : term866.
Proof. exact (@lem6204283 (@lem6204293)). Qed.
Lemma lem6204296 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6204297 : term156 = term157.
Proof. exact (@lem6204296 (NUMERAL 0) term6). Qed.
Lemma lem6204298 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6204299 (h1 : term158 = (BIT1 0)) : term157 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6204300 : (term158 = (BIT1 0)) = (term157 = True).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6204299 h1) (fun h1 : term157 = True => @lem6204298)). Qed.
Lemma lem6204301 : term157 = True.
Proof. exact (EQ_MP (@lem6204300) (@lem6204298)). Qed.
Lemma lem6204302 : term156 = True.
Proof. exact (TRANS (@lem6204297) (@lem6204301)). Qed.
Lemma lem6204303 : True = term156.
Proof. exact (SYM (@lem6204302)). Qed.
Lemma lem6204304 : term156.
Proof. exact (EQ_MP (@lem6204303) (@lem0)). Qed.
Lemma lem6204305 : term867.
Proof. exact (@lem6204294 (@lem6204304)). Qed.
Lemma lem6204307 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6204308 : term156 = term157.
Proof. exact (@lem6204307 (NUMERAL 0) term6). Qed.
Lemma lem6204309 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6204310 (h1 : term158 = (BIT1 0)) : term157 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6204311 : (term158 = (BIT1 0)) = (term157 = True).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6204310 h1) (fun h1 : term157 = True => @lem6204309)). Qed.
Lemma lem6204312 : term157 = True.
Proof. exact (EQ_MP (@lem6204311) (@lem6204309)). Qed.
Lemma lem6204313 : term156 = True.
Proof. exact (TRANS (@lem6204308) (@lem6204312)). Qed.
Lemma lem6204314 : True = term156.
Proof. exact (SYM (@lem6204313)). Qed.
Lemma lem6204315 : term156.
Proof. exact (EQ_MP (@lem6204314) (@lem0)). Qed.
Lemma lem6204316 : term868.
Proof. exact (@lem6204305 (@lem6204315)). Qed.
Lemma lem6204318 (m : nat) (n : nat) : (term192 m n) = (term193 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem6204319 : term234 = term235.
Proof. exact (@lem6204318 term22 term6). Qed.
Lemma lem6204320 : term35 = term20.
Proof. exact (@lem996237 term20). Qed.
Lemma lem6204321 : (term35 = term20) = (term36 = term22).
Proof. exact (@lem1007663 term20 (BIT1 0) term20). Qed.
Lemma lem6204322 : term36 = term22.
Proof. exact (EQ_MP (@lem6204321) (@lem6204320)). Qed.
Lemma lem6204323 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6204324 : term236 = term90.
Proof. exact (MK_COMB (@lem6204323) (@lem6204322)). Qed.
Lemma lem6204325 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem6204326 : term235 = term212.
Proof. exact (MK_COMB (@lem6204325) (@lem6204324)). Qed.
Lemma lem6204327 : term234 = term212.
Proof. exact (TRANS (@lem6204319) (@lem6204326)). Qed.
Lemma lem6204329 (m : nat) (n : nat) : (term130 m n) = (term131 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6204330 : term132 = term133.
Proof. exact (@lem6204329 term6 term6). Qed.
Lemma lem6204331 : (term134 = (BIT1 0)) = (term135 = term6).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6204332 : term135 = term6.
Proof. exact (EQ_MP (@lem6204331) (@lem940073)). Qed.
Lemma lem6204333 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6204334 : term133 = term102.
Proof. exact (MK_COMB (@lem6204333) (@lem6204332)). Qed.
Lemma lem6204335 : term132 = term102.
Proof. exact (TRANS (@lem6204330) (@lem6204334)). Qed.
Lemma lem6204336 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem6204337 : term508 = term500.
Proof. exact (MK_COMB (@lem6204336) (@lem6204335)). Qed.
Lemma lem6204338 : term869 = term863.
Proof. exact (MK_COMB (@lem6204337) (@lem6204327)). Qed.
Lemma lem6204341 : term870 = term123.
Proof. exact (@lem1367771 term6 term6). Qed.
Lemma lem6204342 : term19 = term20.
Proof. exact (@lem706885). Qed.
Lemma lem6204343 : (term19 = term20) = (term21 = term22).
Proof. exact (@lem1006570 (BIT1 0) (BIT1 0) term20). Qed.
Lemma lem6204344 : term21 = term22.
Proof. exact (EQ_MP (@lem6204343) (@lem6204342)). Qed.
Lemma lem6204345 : term22 = term21.
Proof. exact (SYM (@lem6204344)). Qed.
Lemma lem6204346 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6204347 : term90 = term510.
Proof. exact (MK_COMB (@lem6204346) (@lem6204345)). Qed.
Lemma lem6204348 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem6204349 : term212 = term871.
Proof. exact (MK_COMB (@lem6204348) (@lem6204347)). Qed.
Lemma lem6204350 : term500 = term500.
Proof. exact (eq_refl term500). Qed.
Lemma lem6204351 : term863 = term870.
Proof. exact (MK_COMB (@lem6204350) (@lem6204349)). Qed.
Lemma lem6204352 : term863 = term123.
Proof. exact (TRANS (@lem6204351) (@lem6204341)). Qed.
Lemma lem6204353 : term869 = term123.
Proof. exact (TRANS (@lem6204338) (@lem6204352)). Qed.
Lemma lem6204354 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem6204355 : term872 = term125.
Proof. exact (MK_COMB (@lem6204354) (@lem6204353)). Qed.
Lemma lem6204356 : term102 = term102.
Proof. exact (eq_refl term102). Qed.
Lemma lem6204357 : term873 = term264.
Proof. exact (MK_COMB (@lem6204355) (@lem6204356)). Qed.
Lemma lem6204359 (m : nat) (n : nat) : (term192 m n) = (term193 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem6204360 : term264 = term265.
Proof. exact (@lem6204359 term6 term6). Qed.
Lemma lem6204361 : (term134 = (BIT1 0)) = (term135 = term6).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6204362 : term135 = term6.
Proof. exact (EQ_MP (@lem6204361) (@lem940073)). Qed.
Lemma lem6204363 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6204364 : term133 = term102.
Proof. exact (MK_COMB (@lem6204363) (@lem6204362)). Qed.
Lemma lem6204365 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem6204366 : term265 = term123.
Proof. exact (MK_COMB (@lem6204365) (@lem6204364)). Qed.
Lemma lem6204367 : term264 = term123.
Proof. exact (TRANS (@lem6204360) (@lem6204366)). Qed.
Lemma lem6204368 : term873 = term123.
Proof. exact (TRANS (@lem6204357) (@lem6204367)). Qed.
Lemma lem6204370 (m : nat) (n : nat) : (term130 m n) = (term131 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6204371 : term132 = term133.
Proof. exact (@lem6204370 term6 term6). Qed.
Lemma lem6204372 : (term134 = (BIT1 0)) = (term135 = term6).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6204373 : term135 = term6.
Proof. exact (EQ_MP (@lem6204372) (@lem940073)). Qed.
Lemma lem6204374 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6204375 : term133 = term102.
Proof. exact (MK_COMB (@lem6204374) (@lem6204373)). Qed.
Lemma lem6204376 : term132 = term102.
Proof. exact (TRANS (@lem6204371) (@lem6204375)). Qed.
Lemma lem6204377 : term125 = term125.
Proof. exact (eq_refl term125). Qed.
Lemma lem6204378 : term266 = term264.
Proof. exact (MK_COMB (@lem6204377) (@lem6204376)). Qed.
Lemma lem6204380 (m : nat) (n : nat) : (term192 m n) = (term193 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem6204381 : term264 = term265.
Proof. exact (@lem6204380 term6 term6). Qed.
Lemma lem6204382 : (term134 = (BIT1 0)) = (term135 = term6).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6204383 : term135 = term6.
Proof. exact (EQ_MP (@lem6204382) (@lem940073)). Qed.
Lemma lem6204384 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6204385 : term133 = term102.
Proof. exact (MK_COMB (@lem6204384) (@lem6204383)). Qed.
Lemma lem6204386 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem6204387 : term265 = term123.
Proof. exact (MK_COMB (@lem6204386) (@lem6204385)). Qed.
Lemma lem6204388 : term264 = term123.
Proof. exact (TRANS (@lem6204381) (@lem6204387)). Qed.
Lemma lem6204389 : term266 = term123.
Proof. exact (TRANS (@lem6204378) (@lem6204388)). Qed.
Lemma lem6204390 : term123 = term266.
Proof. exact (SYM (@lem6204389)). Qed.
Lemma lem6204391 : term873 = term266.
Proof. exact (TRANS (@lem6204368) (@lem6204390)). Qed.
Lemma lem6204392 : term864 = term124.
Proof. exact (@lem6204316 (@lem6204391)). Qed.
Lemma lem6204393 : term863 = term124.
Proof. exact (TRANS (@lem6204282) (@lem6204392)). Qed.
Lemma lem6204395 (x : real) : (term139 x) = x.
Proof. exact (EQ_MP (@lem1981475 x) (@lem1981474 x)). Qed.
Lemma lem6204396 : term124 = term123.
Proof. exact (@lem6204395 term123). Qed.
Lemma lem6204397 : term863 = term123.
Proof. exact (TRANS (@lem6204393) (@lem6204396)). Qed.
Lemma lem6204398 (_79018 : int) : (term860 _79018) = term267.
Proof. exact (MK_COMB (@lem6204273 _79018) (@lem6204397)). Qed.
Lemma lem6204399 (_79018 : int) : (term859 _79018) = term267.
Proof. exact (TRANS (@lem6204165 _79018) (@lem6204398 _79018)). Qed.
Lemma lem6204400 : term267 = term123.
Proof. exact (@lem1982721 term123). Qed.
Lemma lem6204401 (_79018 : int) : (term859 _79018) = term123.
Proof. exact (TRANS (@lem6204399 _79018) (@lem6204400)). Qed.
Lemma lem6204402 (_79017 : int) (_79018 : int) : (term842 _79017 _79018) = term267.
Proof. exact (MK_COMB (@lem6204164 _79017) (@lem6204401 _79018)). Qed.
Lemma lem6204403 (_79017 : int) (_79018 : int) : (term841 _79017 _79018) = term267.
Proof. exact (TRANS (@lem6204056 _79017 _79018) (@lem6204402 _79017 _79018)). Qed.
Lemma lem6204404 : term267 = term123.
Proof. exact (@lem1982721 term123). Qed.
Lemma lem6204405 (_79017 : int) (_79018 : int) : (term841 _79017 _79018) = term123.
Proof. exact (TRANS (@lem6204403 _79017 _79018) (@lem6204404)). Qed.
Lemma lem6204406 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem6204407 (_79017 : int) (_79018 : int) : (term874 _79017 _79018) = term269.
Proof. exact (MK_COMB (@lem6204406) (@lem6204405 _79017 _79018)). Qed.
Lemma lem6204408 : term65 = term65.
Proof. exact (eq_refl term65). Qed.
Lemma lem6204409 (_79017 : int) (_79018 : int) : (term840 _79017 _79018) = term270.
Proof. exact (MK_COMB (@lem6204407 _79017 _79018) (@lem6204408)). Qed.
Lemma lem6204410 (_79017 : int) (_79018 : int) (h1 : term827 _79017 _79018) : term270.
Proof. exact (EQ_MP (@lem6204409 _79017 _79018) (@lem6204055 _79017 _79018 h1)). Qed.
Lemma lem6204412 (y : real) (x : real) : (real_ge x y) = (real_le y x).
Proof. exact (EQ_MP (@lem1980260 y x) (@lem1980259 y x)). Qed.
Lemma lem6204413 : term270 = term273.
Proof. exact (@lem6204412 term65 term123). Qed.
Lemma lem6204415 (x : nat) : (term121 x) = (term122 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem6204416 : term123 = term124.
Proof. exact (@lem6204415 term6). Qed.
Lemma lem6204418 (x : nat) : (real_of_num x) = (term119 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6204419 : term65 = term120.
Proof. exact (@lem6204418 (NUMERAL 0)). Qed.
Lemma lem6204420 : real_le = real_le.
Proof. exact (eq_refl real_le). Qed.
Lemma lem6204421 : term67 = term274.
Proof. exact (MK_COMB (@lem6204420) (@lem6204419)). Qed.
Lemma lem6204422 : term273 = term275.
Proof. exact (MK_COMB (@lem6204421) (@lem6204416)). Qed.
Lemma lem6204423 : term276.
Proof. exact (@lem1980026 term65 term102 term123 term102). Qed.
Lemma lem6204425 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6204426 : term156 = term157.
Proof. exact (@lem6204425 (NUMERAL 0) term6). Qed.
Lemma lem6204427 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6204428 (h1 : term158 = (BIT1 0)) : term157 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6204429 : (term158 = (BIT1 0)) = (term157 = True).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6204428 h1) (fun h1 : term157 = True => @lem6204427)). Qed.
Lemma lem6204430 : term157 = True.
Proof. exact (EQ_MP (@lem6204429) (@lem6204427)). Qed.
Lemma lem6204431 : term156 = True.
Proof. exact (TRANS (@lem6204426) (@lem6204430)). Qed.
Lemma lem6204432 : True = term156.
Proof. exact (SYM (@lem6204431)). Qed.
Lemma lem6204433 : term156.
Proof. exact (EQ_MP (@lem6204432) (@lem0)). Qed.
Lemma lem6204434 : term277.
Proof. exact (@lem6204423 (@lem6204433)). Qed.
Lemma lem6204436 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6204437 : term156 = term157.
Proof. exact (@lem6204436 (NUMERAL 0) term6). Qed.
Lemma lem6204438 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6204439 (h1 : term158 = (BIT1 0)) : term157 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6204440 : (term158 = (BIT1 0)) = (term157 = True).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6204439 h1) (fun h1 : term157 = True => @lem6204438)). Qed.
Lemma lem6204441 : term157 = True.
Proof. exact (EQ_MP (@lem6204440) (@lem6204438)). Qed.
Lemma lem6204442 : term156 = True.
Proof. exact (TRANS (@lem6204437) (@lem6204441)). Qed.
Lemma lem6204443 : True = term156.
Proof. exact (SYM (@lem6204442)). Qed.
Lemma lem6204444 : term156.
Proof. exact (EQ_MP (@lem6204443) (@lem0)). Qed.
Lemma lem6204445 : term275 = term278.
Proof. exact (@lem6204434 (@lem6204444)). Qed.
Lemma lem6204447 (m : nat) (n : nat) : (term192 m n) = (term193 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem6204448 : term264 = term265.
Proof. exact (@lem6204447 term6 term6). Qed.
Lemma lem6204449 : (term134 = (BIT1 0)) = (term135 = term6).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6204450 : term135 = term6.
Proof. exact (EQ_MP (@lem6204449) (@lem940073)). Qed.
Lemma lem6204451 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6204452 : term133 = term102.
Proof. exact (MK_COMB (@lem6204451) (@lem6204450)). Qed.
Lemma lem6204453 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem6204454 : term265 = term123.
Proof. exact (MK_COMB (@lem6204453) (@lem6204452)). Qed.
Lemma lem6204455 : term264 = term123.
Proof. exact (TRANS (@lem6204448) (@lem6204454)). Qed.
Lemma lem6204457 (x : nat) : (term245 x) = term65.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem6204458 : term244 = term65.
Proof. exact (@lem6204457 term6). Qed.
Lemma lem6204459 : real_le = real_le.
Proof. exact (eq_refl real_le). Qed.
Lemma lem6204460 : term279 = term67.
Proof. exact (MK_COMB (@lem6204459) (@lem6204458)). Qed.
Lemma lem6204461 : term278 = term273.
Proof. exact (MK_COMB (@lem6204460) (@lem6204455)). Qed.
Lemma lem6204463 (m : nat) (n : nat) : (term280 m n) = (term281 m n).
Proof. exact (proj2 (@lem1365406 m n)). Qed.
Lemma lem6204464 : term273 = term282.
Proof. exact (@lem6204463 (NUMERAL 0) term6). Qed.
Lemma lem6204465 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6204466 (h1 : term158 = (BIT1 0)) : (term6 = (NUMERAL 0)) = False.
Proof. exact (@lem1013352 0 0 (BIT1 0) h1). Qed.
Lemma lem6204467 : (term158 = (BIT1 0)) = ((term6 = (NUMERAL 0)) = False).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6204466 h1) (fun h1 : (term6 = (NUMERAL 0)) = False => @lem6204465)). Qed.
Lemma lem6204468 : (term6 = (NUMERAL 0)) = False.
Proof. exact (EQ_MP (@lem6204467) (@lem6204465)). Qed.
Lemma lem6204469 : ((NUMERAL 0) = (NUMERAL 0)) = True.
Proof. exact (@lem1013364 0). Qed.
Lemma lem6204470 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6204471 : term283 = (and True).
Proof. exact (MK_COMB (@lem6204470) (@lem6204469)). Qed.
Lemma lem6204472 : term282 = (True /\ False).
Proof. exact (MK_COMB (@lem6204471) (@lem6204468)). Qed.
Lemma lem6204474 : (True /\ False) = False.
Proof. exact (proj1 (@lem1365106)). Qed.
Lemma lem6204475 : term282 = False.
Proof. exact (TRANS (@lem6204472) (@lem6204474)). Qed.
Lemma lem6204476 : term273 = False.
Proof. exact (TRANS (@lem6204464) (@lem6204475)). Qed.
Lemma lem6204477 : term278 = False.
Proof. exact (TRANS (@lem6204461) (@lem6204476)). Qed.
Lemma lem6204478 : term275 = False.
Proof. exact (TRANS (@lem6204445) (@lem6204477)). Qed.
Lemma lem6204479 : term273 = False.
Proof. exact (TRANS (@lem6204422) (@lem6204478)). Qed.
Lemma lem6204480 : term270 = False.
Proof. exact (TRANS (@lem6204413) (@lem6204479)). Qed.
Lemma lem6204481 (_79017 : int) (_79018 : int) (h1 : term827 _79017 _79018) : False.
Proof. exact (EQ_MP (@lem6204480) (@lem6204410 _79017 _79018 h1)). Qed.
Lemma lem6204482 (_79017 : int) (_79018 : int) (h1 : term575 _79017 _79018) : False.
Proof. exact (or_elim (@lem6203213 _79017 _79018 h1) (fun h0 : term803 _79017 _79018 => @lem6203895 _79017 _79018 h0) (fun h0 : term827 _79017 _79018 => @lem6204481 _79017 _79018 h0)). Qed.
Lemma lem6204483 (_79017 : int) (_79018 : int) (h1 : term584 _79017 _79018) : False.
Proof. exact (or_elim (@lem6201655 _79017 _79018 h1) (fun h0 : term579 _79017 _79018 => @lem6203212 _79017 _79018 h0) (fun h0 : term575 _79017 _79018 => @lem6204482 _79017 _79018 h0)). Qed.
Lemma lem6204485 (_79017 : int) (_79018 : int) (h1 : term584 _79017 _79018) : term584 _79017 _79018.
Proof. exact (h1). Qed.
Lemma lem6204486 (_79017 : int) (_79018 : int) (h1 : term584 _79017 _79018) : (term584 _79017 _79018) = False.
Proof. exact (prop_ext (fun h2 : term584 _79017 _79018 => @lem6204483 _79017 _79018 h1) (fun h2 : False => @lem6204485 _79017 _79018 h1)). Qed.
Lemma lem6204487 (_79017 : int) (_79018 : int) (h1 : term584 _79017 _79018) : False.
Proof. exact (EQ_MP (@lem6204486 _79017 _79018 h1) (@lem6204485 _79017 _79018 h1)). Qed.
Lemma lem6204488 (_79017 : int) (_79018 : int) (h1 : term488 _79017 _79018) : term488 _79017 _79018.
Proof. exact (h1). Qed.
Lemma lem6204489 (_79017 : int) (_79018 : int) (h1 : term488 _79017 _79018) : term584 _79017 _79018.
Proof. exact (EQ_MP (@lem6201633 _79017 _79018) (@lem6204488 _79017 _79018 h1)). Qed.
Lemma lem6204490 (_79017 : int) (_79018 : int) (h1 : term488 _79017 _79018) : (term584 _79017 _79018) = False.
Proof. exact (prop_ext (fun h2 : term584 _79017 _79018 => @lem6204487 _79017 _79018 h2) (fun h2 : False => @lem6204489 _79017 _79018 h1)). Qed.
Lemma lem6204491 (_79017 : int) (_79018 : int) (h1 : term488 _79017 _79018) : False.
Proof. exact (EQ_MP (@lem6204490 _79017 _79018 h1) (@lem6204489 _79017 _79018 h1)). Qed.
Lemma lem6204492 (_79017 : int) (_79018 : int) : term875 _79017 _79018.
Proof. exact (fun h0 : term488 _79017 _79018 => @lem6204491 _79017 _79018 h0). Qed.
Lemma lem6204493 (_79017 : int) (_79018 : int) : term876 _79017 _79018.
Proof. exact (@lem1386578 (term877 _79017 _79018)). Qed.
Lemma lem6204496 (_79017 : int) (_79018 : int) : term877 _79017 _79018.
Proof. exact (@lem6204493 _79017 _79018 (@lem6204492 _79017 _79018)). Qed.
Lemma lem6204497 (_79017 : int) (_79018 : int) : (term487 _79017 _79018) = (term450 _79017 _79018).
Proof. exact (SYM (@lem6200834 _79017 _79018)). Qed.
Lemma lem6204498 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem6204499 (_79017 : int) (_79018 : int) : (term877 _79017 _79018) = (term422 _79017 _79018).
Proof. exact (MK_COMB (@lem6204498) (@lem6204497 _79017 _79018)). Qed.
Lemma lem6204500 (_79017 : int) (_79018 : int) : term422 _79017 _79018.
Proof. exact (EQ_MP (@lem6204499 _79017 _79018) (@lem6204496 _79017 _79018)). Qed.
Lemma lem6204501 (_79017 : int) (_79018 : int) : term423 _79017 _79018.
Proof. exact (EQ_MP (@lem6200573 _79017 _79018) (@lem6204500 _79017 _79018)). Qed.
Lemma lem6204502 (m : nat) (n : nat) : term878 m n.
Proof. exact (@lem6204501 (int_of_num m) (int_of_num n)). Qed.
Lemma lem6204503 (m : nat) (n : nat) : term879 m n.
Proof. exact (@lem6204502 m n (@lem6200569 m)). Qed.
Lemma lem6204504 (m : nat) (n : nat) : term421 m n.
Proof. exact (@lem6204503 m n (@lem6200572 n)). Qed.
Lemma lem6204505 (m : nat) (n : nat) : (term421 m n) = ((term375 m n) = (term376 m n)).
Proof. exact (SYM (@lem6200566 m n)). Qed.
Lemma lem6204543 (m : nat) (n : nat) : ((term880 m n) = (term376 m n)) = (term881 m n).
Proof. exact (@lem17500 (term880 m n) (term376 m n)). Qed.
Lemma lem6204545 (m : nat) : (S m) = (term0 m).
Proof. exact (EQ_MP (@lem2841417 m) (@lem2841416 m)). Qed.
Lemma lem6204546 (n : nat) : (term11 n) = (term12 n).
Proof. exact (@lem6204545 (term13 n)). Qed.
Lemma lem6204547 : S = S.
Proof. exact (eq_refl S). Qed.
Lemma lem6204548 (n : nat) : (term14 n) = (term15 n).
Proof. exact (MK_COMB (@lem6204547) (@lem6204546 n)). Qed.
Lemma lem6204550 (m : nat) : (S m) = (term0 m).
Proof. exact (EQ_MP (@lem2841417 m) (@lem2841416 m)). Qed.
Lemma lem6204551 (n : nat) : (term15 n) = (term16 n).
Proof. exact (@lem6204550 (term12 n)). Qed.
Lemma lem6204552 (n : nat) : (term14 n) = (term16 n).
Proof. exact (TRANS (@lem6204548 n) (@lem6204551 n)). Qed.
Lemma lem6204553 (m : nat) : (term378 m) = (term378 m).
Proof. exact (eq_refl (term378 m)). Qed.
Lemma lem6204554 (m : nat) (n : nat) : (term880 m n) = (term882 m n).
Proof. exact (MK_COMB (@lem6204553 m) (@lem6204552 n)). Qed.
Lemma lem6204555 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6204556 (m : nat) (n : nat) : (term883 m n) = (term884 m n).
Proof. exact (MK_COMB (@lem6204555) (@lem6204554 m n)). Qed.
Lemma lem6204558 (m : nat) : (S m) = (term0 m).
Proof. exact (EQ_MP (@lem2841417 m) (@lem2841416 m)). Qed.
Lemma lem6204559 (n : nat) : (S n) = (term0 n).
Proof. exact (@lem6204558 n). Qed.
Lemma lem6204560 (m : nat) : (Peano.le m) = (Peano.le m).
Proof. exact (eq_refl (Peano.le m)). Qed.
Lemma lem6204561 (m : nat) (n : nat) : (term376 m n) = (term382 m n).
Proof. exact (MK_COMB (@lem6204560 m) (@lem6204559 n)). Qed.
Lemma lem6204562 (m : nat) (n : nat) : (term885 m n) = (term886 m n).
Proof. exact (MK_COMB (@lem6204556 m n) (@lem6204561 m n)). Qed.
Lemma lem6204563 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6204564 (m : nat) (n : nat) : (term887 m n) = (term888 m n).
Proof. exact (MK_COMB (@lem6204563) (@lem6204562 m n)). Qed.
Lemma lem6204566 (m : nat) : (S m) = (term0 m).
Proof. exact (EQ_MP (@lem2841417 m) (@lem2841416 m)). Qed.
Lemma lem6204567 (n : nat) : (term11 n) = (term12 n).
Proof. exact (@lem6204566 (term13 n)). Qed.
Lemma lem6204568 : S = S.
Proof. exact (eq_refl S). Qed.
Lemma lem6204569 (n : nat) : (term14 n) = (term15 n).
Proof. exact (MK_COMB (@lem6204568) (@lem6204567 n)). Qed.
Lemma lem6204571 (m : nat) : (S m) = (term0 m).
Proof. exact (EQ_MP (@lem2841417 m) (@lem2841416 m)). Qed.
Lemma lem6204572 (n : nat) : (term15 n) = (term16 n).
Proof. exact (@lem6204571 (term12 n)). Qed.
Lemma lem6204573 (n : nat) : (term14 n) = (term16 n).
Proof. exact (TRANS (@lem6204569 n) (@lem6204572 n)). Qed.
Lemma lem6204574 (m : nat) : (term378 m) = (term378 m).
Proof. exact (eq_refl (term378 m)). Qed.
Lemma lem6204575 (m : nat) (n : nat) : (term880 m n) = (term882 m n).
Proof. exact (MK_COMB (@lem6204574 m) (@lem6204573 n)). Qed.
Lemma lem6204576 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem6204577 (m : nat) (n : nat) : (term889 m n) = (term890 m n).
Proof. exact (MK_COMB (@lem6204576) (@lem6204575 m n)). Qed.
Lemma lem6204578 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6204579 (m : nat) (n : nat) : (term891 m n) = (term892 m n).
Proof. exact (MK_COMB (@lem6204578) (@lem6204577 m n)). Qed.
Lemma lem6204581 (m : nat) : (S m) = (term0 m).
Proof. exact (EQ_MP (@lem2841417 m) (@lem2841416 m)). Qed.
Lemma lem6204582 (n : nat) : (S n) = (term0 n).
Proof. exact (@lem6204581 n). Qed.
Lemma lem6204583 (m : nat) : (Peano.le m) = (Peano.le m).
Proof. exact (eq_refl (Peano.le m)). Qed.
Lemma lem6204584 (m : nat) (n : nat) : (term376 m n) = (term382 m n).
Proof. exact (MK_COMB (@lem6204583 m) (@lem6204582 n)). Qed.
Lemma lem6204585 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem6204586 (m : nat) (n : nat) : (term391 m n) = (term392 m n).
Proof. exact (MK_COMB (@lem6204585) (@lem6204584 m n)). Qed.
Lemma lem6204587 (m : nat) (n : nat) : (term893 m n) = (term894 m n).
Proof. exact (MK_COMB (@lem6204579 m n) (@lem6204586 m n)). Qed.
Lemma lem6204588 (m : nat) (n : nat) : (term881 m n) = (term895 m n).
Proof. exact (MK_COMB (@lem6204564 m n) (@lem6204587 m n)). Qed.
Lemma lem6204589 (m : nat) (n : nat) : ((term880 m n) = (term376 m n)) = (term895 m n).
Proof. exact (TRANS (@lem6204543 m n) (@lem6204588 m n)). Qed.
Lemma lem6204602 (m : nat) (n : nat) : (term392 m n) = (term392 m n).
Proof. exact (eq_refl (term392 m n)). Qed.
Lemma lem6204603 : term6 = term6.
Proof. exact (eq_refl term6). Qed.
Lemma lem6204621 (n : nat) : (term12 n) = (term17 n).
Proof. exact (@lem1032092 (term18 n) term6 term6). Qed.
Lemma lem6204622 : term19 = term20.
Proof. exact (@lem706885). Qed.
Lemma lem6204623 : (term19 = term20) = (term21 = term22).
Proof. exact (@lem1006570 (BIT1 0) (BIT1 0) term20). Qed.
Lemma lem6204624 : term21 = term22.
Proof. exact (EQ_MP (@lem6204623) (@lem6204622)). Qed.
Lemma lem6204625 (n : nat) : (term23 n) = (term23 n).
Proof. exact (eq_refl (term23 n)). Qed.
Lemma lem6204626 (n : nat) : (term17 n) = (term24 n).
Proof. exact (MK_COMB (@lem6204625 n) (@lem6204624)). Qed.
Lemma lem6204628 (n : nat) : (term12 n) = (term24 n).
Proof. exact (TRANS (@lem6204621 n) (@lem6204626 n)). Qed.
Lemma lem6204629 : Nat.add = Nat.add.
Proof. exact (eq_refl Nat.add). Qed.
Lemma lem6204630 (n : nat) : (term25 n) = (term26 n).
Proof. exact (MK_COMB (@lem6204629) (@lem6204628 n)). Qed.
Lemma lem6204631 (n : nat) : (term16 n) = (term27 n).
Proof. exact (MK_COMB (@lem6204630 n) (@lem6204603)). Qed.
Lemma lem6204632 (n : nat) : (term27 n) = (term28 n).
Proof. exact (@lem1032092 (term18 n) term22 term6). Qed.
Lemma lem6204633 : term29 = term30.
Proof. exact (@lem706949). Qed.
Lemma lem6204634 : (term29 = term30) = (term31 = term32).
Proof. exact (@lem1006570 term20 (BIT1 0) term30). Qed.
Lemma lem6204635 : term31 = term32.
Proof. exact (EQ_MP (@lem6204634) (@lem6204633)). Qed.
Lemma lem6204636 (n : nat) : (term23 n) = (term23 n).
Proof. exact (eq_refl (term23 n)). Qed.
Lemma lem6204637 (n : nat) : (term28 n) = (term33 n).
Proof. exact (MK_COMB (@lem6204636 n) (@lem6204635)). Qed.
Lemma lem6204638 (n : nat) : (term27 n) = (term33 n).
Proof. exact (TRANS (@lem6204632 n) (@lem6204637 n)). Qed.
Lemma lem6204639 (n : nat) : (term16 n) = (term33 n).
Proof. exact (TRANS (@lem6204631 n) (@lem6204638 n)). Qed.
Lemma lem6204648 (m : nat) : (term378 m) = (term378 m).
Proof. exact (eq_refl (term378 m)). Qed.
Lemma lem6204649 (m : nat) (n : nat) : (term882 m n) = (term896 m n).
Proof. exact (MK_COMB (@lem6204648 m) (@lem6204639 n)). Qed.
Lemma lem6204650 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem6204651 (m : nat) (n : nat) : (term890 m n) = (term897 m n).
Proof. exact (MK_COMB (@lem6204650) (@lem6204649 m n)). Qed.
Lemma lem6204652 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6204653 (m : nat) (n : nat) : (term892 m n) = (term898 m n).
Proof. exact (MK_COMB (@lem6204652) (@lem6204651 m n)). Qed.
Lemma lem6204654 (m : nat) (n : nat) : (term894 m n) = (term899 m n).
Proof. exact (MK_COMB (@lem6204653 m n) (@lem6204602 m n)). Qed.
Lemma lem6204665 (m : nat) (n : nat) : (term382 m n) = (term382 m n).
Proof. exact (eq_refl (term382 m n)). Qed.
Lemma lem6204666 : term6 = term6.
Proof. exact (eq_refl term6). Qed.
Lemma lem6204684 (n : nat) : (term12 n) = (term17 n).
Proof. exact (@lem1032092 (term18 n) term6 term6). Qed.
Lemma lem6204685 : term19 = term20.
Proof. exact (@lem706885). Qed.
Lemma lem6204686 : (term19 = term20) = (term21 = term22).
Proof. exact (@lem1006570 (BIT1 0) (BIT1 0) term20). Qed.
Lemma lem6204687 : term21 = term22.
Proof. exact (EQ_MP (@lem6204686) (@lem6204685)). Qed.
Lemma lem6204688 (n : nat) : (term23 n) = (term23 n).
Proof. exact (eq_refl (term23 n)). Qed.
Lemma lem6204689 (n : nat) : (term17 n) = (term24 n).
Proof. exact (MK_COMB (@lem6204688 n) (@lem6204687)). Qed.
Lemma lem6204691 (n : nat) : (term12 n) = (term24 n).
Proof. exact (TRANS (@lem6204684 n) (@lem6204689 n)). Qed.
Lemma lem6204692 : Nat.add = Nat.add.
Proof. exact (eq_refl Nat.add). Qed.
Lemma lem6204693 (n : nat) : (term25 n) = (term26 n).
Proof. exact (MK_COMB (@lem6204692) (@lem6204691 n)). Qed.
Lemma lem6204694 (n : nat) : (term16 n) = (term27 n).
Proof. exact (MK_COMB (@lem6204693 n) (@lem6204666)). Qed.
Lemma lem6204695 (n : nat) : (term27 n) = (term28 n).
Proof. exact (@lem1032092 (term18 n) term22 term6). Qed.
Lemma lem6204696 : term29 = term30.
Proof. exact (@lem706949). Qed.
Lemma lem6204697 : (term29 = term30) = (term31 = term32).
Proof. exact (@lem1006570 term20 (BIT1 0) term30). Qed.
Lemma lem6204698 : term31 = term32.
Proof. exact (EQ_MP (@lem6204697) (@lem6204696)). Qed.
Lemma lem6204699 (n : nat) : (term23 n) = (term23 n).
Proof. exact (eq_refl (term23 n)). Qed.
Lemma lem6204700 (n : nat) : (term28 n) = (term33 n).
Proof. exact (MK_COMB (@lem6204699 n) (@lem6204698)). Qed.
Lemma lem6204701 (n : nat) : (term27 n) = (term33 n).
Proof. exact (TRANS (@lem6204695 n) (@lem6204700 n)). Qed.
Lemma lem6204702 (n : nat) : (term16 n) = (term33 n).
Proof. exact (TRANS (@lem6204694 n) (@lem6204701 n)). Qed.
Lemma lem6204711 (m : nat) : (term378 m) = (term378 m).
Proof. exact (eq_refl (term378 m)). Qed.
Lemma lem6204712 (m : nat) (n : nat) : (term882 m n) = (term896 m n).
Proof. exact (MK_COMB (@lem6204711 m) (@lem6204702 n)). Qed.
Lemma lem6204713 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6204714 (m : nat) (n : nat) : (term884 m n) = (term900 m n).
Proof. exact (MK_COMB (@lem6204713) (@lem6204712 m n)). Qed.
Lemma lem6204715 (m : nat) (n : nat) : (term886 m n) = (term901 m n).
Proof. exact (MK_COMB (@lem6204714 m n) (@lem6204665 m n)). Qed.
Lemma lem6204716 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6204717 (m : nat) (n : nat) : (term888 m n) = (term902 m n).
Proof. exact (MK_COMB (@lem6204716) (@lem6204715 m n)). Qed.
Lemma lem6204718 (m : nat) (n : nat) : (term895 m n) = (term903 m n).
Proof. exact (MK_COMB (@lem6204717 m n) (@lem6204654 m n)). Qed.
Lemma lem6204721 (m : nat) (n : nat) : ((term880 m n) = (term376 m n)) = (term903 m n).
Proof. exact (TRANS (@lem6204589 m n) (@lem6204718 m n)). Qed.
Lemma lem6204723 (m : nat) (n : nat) : (Peano.le m n) = (term404 m n).
Proof. exact (EQ_MP (@lem2841408 m n) (@lem2841407 m n)). Qed.
Lemma lem6204724 (m : nat) (n : nat) : (term896 m n) = (term904 m n).
Proof. exact (@lem6204723 (term18 m) (term33 n)). Qed.
Lemma lem6204726 (k : nat) (n : nat) : (term42 k n) = (term43 k n).
Proof. exact (EQ_MP (@lem2841378 k n) (@lem2841377 k n)). Qed.
Lemma lem6204727 (m : nat) : (term44 m) = (term45 m).
Proof. exact (@lem6204726 term20 m). Qed.
Lemma lem6204728 : int_le = int_le.
Proof. exact (eq_refl int_le). Qed.
Lemma lem6204729 (m : nat) : (term406 m) = (term407 m).
Proof. exact (MK_COMB (@lem6204728) (@lem6204727 m)). Qed.
Lemma lem6204731 (m : nat) (n : nat) : (term39 m n) = (term40 m n).
Proof. exact (EQ_MP (@lem2841384 m n) (@lem2841383 m n)). Qed.
Lemma lem6204732 (n : nat) : (term38 n) = (term41 n).
Proof. exact (@lem6204731 (term18 n) term32). Qed.
Lemma lem6204734 (k : nat) (n : nat) : (term42 k n) = (term43 k n).
Proof. exact (EQ_MP (@lem2841378 k n) (@lem2841377 k n)). Qed.
Lemma lem6204735 (n : nat) : (term44 n) = (term45 n).
Proof. exact (@lem6204734 term20 n). Qed.
Lemma lem6204736 : int_add = int_add.
Proof. exact (eq_refl int_add). Qed.
Lemma lem6204737 (n : nat) : (term46 n) = (term47 n).
Proof. exact (MK_COMB (@lem6204736) (@lem6204735 n)). Qed.
Lemma lem6204738 : term48 = term48.
Proof. exact (eq_refl term48). Qed.
Lemma lem6204739 (n : nat) : (term41 n) = (term49 n).
Proof. exact (MK_COMB (@lem6204737 n) (@lem6204738)). Qed.
Lemma lem6204740 (n : nat) : (term38 n) = (term49 n).
Proof. exact (TRANS (@lem6204732 n) (@lem6204739 n)). Qed.
Lemma lem6204741 (m : nat) (n : nat) : (term904 m n) = (term905 m n).
Proof. exact (MK_COMB (@lem6204729 m) (@lem6204740 n)). Qed.
Lemma lem6204742 (m : nat) (n : nat) : (term896 m n) = (term905 m n).
Proof. exact (TRANS (@lem6204724 m n) (@lem6204741 m n)). Qed.
Lemma lem6204743 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6204744 (m : nat) (n : nat) : (term900 m n) = (term906 m n).
Proof. exact (MK_COMB (@lem6204743) (@lem6204742 m n)). Qed.
Lemma lem6204746 (m : nat) (n : nat) : (Peano.le m n) = (term404 m n).
Proof. exact (EQ_MP (@lem2841408 m n) (@lem2841407 m n)). Qed.
Lemma lem6204747 (m : nat) (n : nat) : (term382 m n) = (term410 m n).
Proof. exact (@lem6204746 m (term0 n)). Qed.
Lemma lem6204749 (m : nat) (n : nat) : (term39 m n) = (term40 m n).
Proof. exact (EQ_MP (@lem2841384 m n) (@lem2841383 m n)). Qed.
Lemma lem6204750 (n : nat) : (term411 n) = (term412 n).
Proof. exact (@lem6204749 n term6). Qed.
Lemma lem6204751 (m : nat) : (term413 m) = (term413 m).
Proof. exact (eq_refl (term413 m)). Qed.
Lemma lem6204752 (m : nat) (n : nat) : (term410 m n) = (term414 m n).
Proof. exact (MK_COMB (@lem6204751 m) (@lem6204750 n)). Qed.
Lemma lem6204753 (m : nat) (n : nat) : (term382 m n) = (term414 m n).
Proof. exact (TRANS (@lem6204747 m n) (@lem6204752 m n)). Qed.
Lemma lem6204754 (m : nat) (n : nat) : (term901 m n) = (term907 m n).
Proof. exact (MK_COMB (@lem6204744 m n) (@lem6204753 m n)). Qed.
Lemma lem6204755 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6204756 (m : nat) (n : nat) : (term902 m n) = (term908 m n).
Proof. exact (MK_COMB (@lem6204755) (@lem6204754 m n)). Qed.
Lemma lem6204758 (m : nat) (n : nat) : (Peano.le m n) = (term404 m n).
Proof. exact (EQ_MP (@lem2841408 m n) (@lem2841407 m n)). Qed.
Lemma lem6204759 (m : nat) (n : nat) : (term896 m n) = (term904 m n).
Proof. exact (@lem6204758 (term18 m) (term33 n)). Qed.
Lemma lem6204761 (k : nat) (n : nat) : (term42 k n) = (term43 k n).
Proof. exact (EQ_MP (@lem2841378 k n) (@lem2841377 k n)). Qed.
Lemma lem6204762 (m : nat) : (term44 m) = (term45 m).
Proof. exact (@lem6204761 term20 m). Qed.
Lemma lem6204763 : int_le = int_le.
Proof. exact (eq_refl int_le). Qed.
Lemma lem6204764 (m : nat) : (term406 m) = (term407 m).
Proof. exact (MK_COMB (@lem6204763) (@lem6204762 m)). Qed.
Lemma lem6204766 (m : nat) (n : nat) : (term39 m n) = (term40 m n).
Proof. exact (EQ_MP (@lem2841384 m n) (@lem2841383 m n)). Qed.
Lemma lem6204767 (n : nat) : (term38 n) = (term41 n).
Proof. exact (@lem6204766 (term18 n) term32). Qed.
Lemma lem6204769 (k : nat) (n : nat) : (term42 k n) = (term43 k n).
Proof. exact (EQ_MP (@lem2841378 k n) (@lem2841377 k n)). Qed.
Lemma lem6204770 (n : nat) : (term44 n) = (term45 n).
Proof. exact (@lem6204769 term20 n). Qed.
Lemma lem6204771 : int_add = int_add.
Proof. exact (eq_refl int_add). Qed.
Lemma lem6204772 (n : nat) : (term46 n) = (term47 n).
Proof. exact (MK_COMB (@lem6204771) (@lem6204770 n)). Qed.
Lemma lem6204773 : term48 = term48.
Proof. exact (eq_refl term48). Qed.
Lemma lem6204774 (n : nat) : (term41 n) = (term49 n).
Proof. exact (MK_COMB (@lem6204772 n) (@lem6204773)). Qed.
Lemma lem6204775 (n : nat) : (term38 n) = (term49 n).
Proof. exact (TRANS (@lem6204767 n) (@lem6204774 n)). Qed.
Lemma lem6204776 (m : nat) (n : nat) : (term904 m n) = (term905 m n).
Proof. exact (MK_COMB (@lem6204764 m) (@lem6204775 n)). Qed.
Lemma lem6204777 (m : nat) (n : nat) : (term896 m n) = (term905 m n).
Proof. exact (TRANS (@lem6204759 m n) (@lem6204776 m n)). Qed.
Lemma lem6204778 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem6204779 (m : nat) (n : nat) : (term897 m n) = (term909 m n).
Proof. exact (MK_COMB (@lem6204778) (@lem6204777 m n)). Qed.
Lemma lem6204780 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6204781 (m : nat) (n : nat) : (term898 m n) = (term910 m n).
Proof. exact (MK_COMB (@lem6204780) (@lem6204779 m n)). Qed.
Lemma lem6204783 (m : nat) (n : nat) : (Peano.le m n) = (term404 m n).
Proof. exact (EQ_MP (@lem2841408 m n) (@lem2841407 m n)). Qed.
Lemma lem6204784 (m : nat) (n : nat) : (term382 m n) = (term410 m n).
Proof. exact (@lem6204783 m (term0 n)). Qed.
Lemma lem6204786 (m : nat) (n : nat) : (term39 m n) = (term40 m n).
Proof. exact (EQ_MP (@lem2841384 m n) (@lem2841383 m n)). Qed.
Lemma lem6204787 (n : nat) : (term411 n) = (term412 n).
Proof. exact (@lem6204786 n term6). Qed.
Lemma lem6204788 (m : nat) : (term413 m) = (term413 m).
Proof. exact (eq_refl (term413 m)). Qed.
Lemma lem6204789 (m : nat) (n : nat) : (term410 m n) = (term414 m n).
Proof. exact (MK_COMB (@lem6204788 m) (@lem6204787 n)). Qed.
Lemma lem6204790 (m : nat) (n : nat) : (term382 m n) = (term414 m n).
Proof. exact (TRANS (@lem6204784 m n) (@lem6204789 m n)). Qed.
Lemma lem6204791 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem6204792 (m : nat) (n : nat) : (term392 m n) = (term419 m n).
Proof. exact (MK_COMB (@lem6204791) (@lem6204790 m n)). Qed.
Lemma lem6204793 (m : nat) (n : nat) : (term899 m n) = (term911 m n).
Proof. exact (MK_COMB (@lem6204781 m n) (@lem6204792 m n)). Qed.
Lemma lem6204794 (m : nat) (n : nat) : (term903 m n) = (term912 m n).
Proof. exact (MK_COMB (@lem6204756 m n) (@lem6204793 m n)). Qed.
Lemma lem6204795 (m : nat) (n : nat) : ((term880 m n) = (term376 m n)) = (term912 m n).
Proof. exact (TRANS (@lem6204721 m n) (@lem6204794 m n)). Qed.
Lemma lem6204796 (m : nat) : term52 m.
Proof. exact (@lem2307535 m). Qed.
Lemma lem6204797 (m : nat) : (term52 m) = (term53 m).
Proof. exact (eq_refl (term52 m)). Qed.
Lemma lem6204798 (m : nat) : term53 m.
Proof. exact (EQ_MP (@lem6204797 m) (@lem6204796 m)). Qed.
Lemma lem6204799 (n : nat) : term52 n.
Proof. exact (@lem2307535 n). Qed.
Lemma lem6204800 (n : nat) : (term52 n) = (term53 n).
Proof. exact (eq_refl (term52 n)). Qed.
Lemma lem6204801 (n : nat) : term53 n.
Proof. exact (EQ_MP (@lem6204800 n) (@lem6204799 n)). Qed.
Lemma lem6204802 (_79021 : int) (_79022 : int) : (term913 _79021 _79022) = (term914 _79021 _79022).
Proof. exact (@lem2318604 (term914 _79021 _79022)). Qed.
Lemma lem6204826 (_79021 : int) (_79022 : int) : (term915 _79021 _79022) = (term916 _79021 _79022).
Proof. exact (@lem17045 (term917 _79021 _79022) (term427 _79021 _79022)). Qed.
Lemma lem6204829 (_79021 : int) (_79022 : int) : (term918 _79021 _79022) = (term917 _79021 _79022).
Proof. exact (@lem16933 (term917 _79021 _79022)). Qed.
Lemma lem6204832 (_79021 : int) (_79022 : int) : (term429 _79021 _79022) = (term427 _79021 _79022).
Proof. exact (@lem16933 (term427 _79021 _79022)). Qed.
Lemma lem6204833 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6204834 (_79021 : int) (_79022 : int) : (term919 _79021 _79022) = (term920 _79021 _79022).
Proof. exact (MK_COMB (@lem6204833) (@lem6204829 _79021 _79022)). Qed.
Lemma lem6204835 (_79021 : int) (_79022 : int) : (term921 _79021 _79022) = (term922 _79021 _79022).
Proof. exact (MK_COMB (@lem6204834 _79021 _79022) (@lem6204832 _79021 _79022)). Qed.
Lemma lem6204836 (_79021 : int) (_79022 : int) : (term923 _79021 _79022) = (term921 _79021 _79022).
Proof. exact (@lem17045 (term924 _79021 _79022) (term436 _79021 _79022)). Qed.
Lemma lem6204837 (_79021 : int) (_79022 : int) : (term923 _79021 _79022) = (term922 _79021 _79022).
Proof. exact (TRANS (@lem6204836 _79021 _79022) (@lem6204835 _79021 _79022)). Qed.
Lemma lem6204838 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6204839 (_79021 : int) (_79022 : int) : (term925 _79021 _79022) = (term926 _79021 _79022).
Proof. exact (MK_COMB (@lem6204838) (@lem6204826 _79021 _79022)). Qed.
Lemma lem6204840 (_79021 : int) (_79022 : int) : (term927 _79021 _79022) = (term928 _79021 _79022).
Proof. exact (MK_COMB (@lem6204839 _79021 _79022) (@lem6204837 _79021 _79022)). Qed.
Lemma lem6204841 (_79021 : int) (_79022 : int) : (term929 _79021 _79022) = (term927 _79021 _79022).
Proof. exact (@lem17160 (term930 _79021 _79022) (term931 _79021 _79022)). Qed.
Lemma lem6204842 (_79021 : int) (_79022 : int) : (term929 _79021 _79022) = (term928 _79021 _79022).
Proof. exact (TRANS (@lem6204841 _79021 _79022) (@lem6204840 _79021 _79022)). Qed.
Lemma lem6204844 (_79022 : int) : (term110 _79022) = (term110 _79022).
Proof. exact (eq_refl (term110 _79022)). Qed.
Lemma lem6204845 (_79021 : int) (_79022 : int) : (term932 _79021 _79022) = (term933 _79021 _79022).
Proof. exact (MK_COMB (@lem6204844 _79022) (@lem6204842 _79021 _79022)). Qed.
Lemma lem6204846 (_79021 : int) (_79022 : int) : (term934 _79021 _79022) = (term932 _79021 _79022).
Proof. exact (@lem17362 (term58 _79022) (term935 _79021 _79022)). Qed.
Lemma lem6204847 (_79021 : int) (_79022 : int) : (term934 _79021 _79022) = (term933 _79021 _79022).
Proof. exact (TRANS (@lem6204846 _79021 _79022) (@lem6204845 _79021 _79022)). Qed.
Lemma lem6204849 (_79021 : int) : (term110 _79021) = (term110 _79021).
Proof. exact (eq_refl (term110 _79021)). Qed.
Lemma lem6204850 (_79021 : int) (_79022 : int) : (term936 _79021 _79022) = (term937 _79021 _79022).
Proof. exact (MK_COMB (@lem6204849 _79021) (@lem6204847 _79021 _79022)). Qed.
Lemma lem6204851 (_79021 : int) (_79022 : int) : (term938 _79021 _79022) = (term936 _79021 _79022).
Proof. exact (@lem17362 (term58 _79021) (term939 _79021 _79022)). Qed.
Lemma lem6204879 (_79021 : int) (_79022 : int) : (term938 _79021 _79022) = (term937 _79021 _79022).
Proof. exact (TRANS (@lem6204851 _79021 _79022) (@lem6204850 _79021 _79022)). Qed.
Lemma lem6204882 (x : int) (y : int) : (int_le x y) = (term60 x y).
Proof. exact (EQ_MP (@lem2318569 x y) (@lem2318568 x y)). Qed.
Lemma lem6204883 (_79021 : int) : (term58 _79021) = (term61 _79021).
Proof. exact (@lem6204882 term62 _79021). Qed.
Lemma lem6204885 (n : nat) : (term63 n) = (real_of_num n).
Proof. exact (EQ_MP (@lem2318545 n) (@lem2318544 n)). Qed.
Lemma lem6204886 : term64 = term65.
Proof. exact (@lem6204885 (NUMERAL 0)). Qed.
Lemma lem6204887 : real_le = real_le.
Proof. exact (eq_refl real_le). Qed.
Lemma lem6204888 : term66 = term67.
Proof. exact (MK_COMB (@lem6204887) (@lem6204886)). Qed.
Lemma lem6204889 (_79021 : int) : (real_of_int _79021) = (real_of_int _79021).
Proof. exact (eq_refl (real_of_int _79021)). Qed.
Lemma lem6204890 (_79021 : int) : (term61 _79021) = (term68 _79021).
Proof. exact (MK_COMB (@lem6204888) (@lem6204889 _79021)). Qed.
Lemma lem6204892 (_79021 : int) : (term58 _79021) = (term68 _79021).
Proof. exact (TRANS (@lem6204883 _79021) (@lem6204890 _79021)). Qed.
Lemma lem6204895 (x : int) (y : int) : (int_le x y) = (term60 x y).
Proof. exact (EQ_MP (@lem2318569 x y) (@lem2318568 x y)). Qed.
Lemma lem6204896 (_79022 : int) : (term58 _79022) = (term61 _79022).
Proof. exact (@lem6204895 term62 _79022). Qed.
Lemma lem6204898 (n : nat) : (term63 n) = (real_of_num n).
Proof. exact (EQ_MP (@lem2318545 n) (@lem2318544 n)). Qed.
Lemma lem6204899 : term64 = term65.
Proof. exact (@lem6204898 (NUMERAL 0)). Qed.
Lemma lem6204900 : real_le = real_le.
Proof. exact (eq_refl real_le). Qed.
Lemma lem6204901 : term66 = term67.
Proof. exact (MK_COMB (@lem6204900) (@lem6204899)). Qed.
Lemma lem6204902 (_79022 : int) : (real_of_int _79022) = (real_of_int _79022).
Proof. exact (eq_refl (real_of_int _79022)). Qed.
Lemma lem6204903 (_79022 : int) : (term61 _79022) = (term68 _79022).
Proof. exact (MK_COMB (@lem6204901) (@lem6204902 _79022)). Qed.
Lemma lem6204905 (_79022 : int) : (term58 _79022) = (term68 _79022).
Proof. exact (TRANS (@lem6204896 _79022) (@lem6204903 _79022)). Qed.
Lemma lem6204907 (y : int) (x : int) : (term452 x y) = (term453 y x).
Proof. exact (proj1 (@lem2318495 x y)). Qed.
Lemma lem6204908 (_79022 : int) (_79021 : int) : (term924 _79021 _79022) = (term940 _79022 _79021).
Proof. exact (@lem6204907 (term59 _79022) (term83 _79021)). Qed.
Lemma lem6204910 (x : int) (y : int) : (int_le x y) = (term60 x y).
Proof. exact (EQ_MP (@lem2318569 x y) (@lem2318568 x y)). Qed.
Lemma lem6204911 (_79022 : int) (_79021 : int) : (term940 _79022 _79021) = (term941 _79022 _79021).
Proof. exact (@lem6204910 (term75 _79022) (term83 _79021)). Qed.
Lemma lem6204913 (x : int) (y : int) : (term76 x y) = (term77 x y).
Proof. exact (EQ_MP (@lem2318539 x y) (@lem2318538 x y)). Qed.
Lemma lem6204914 (_79022 : int) : (term78 _79022) = (term79 _79022).
Proof. exact (@lem6204913 (term59 _79022) term80). Qed.
Lemma lem6204916 (x : int) (y : int) : (term76 x y) = (term77 x y).
Proof. exact (EQ_MP (@lem2318539 x y) (@lem2318538 x y)). Qed.
Lemma lem6204917 (_79022 : int) : (term81 _79022) = (term82 _79022).
Proof. exact (@lem6204916 (term83 _79022) term48). Qed.
Lemma lem6204919 (x : int) (y : int) : (term84 x y) = (term85 x y).
Proof. exact (EQ_MP (@lem2318533 x y) (@lem2318532 x y)). Qed.
Lemma lem6204920 (_79022 : int) : (term86 _79022) = (term87 _79022).
Proof. exact (@lem6204919 term88 _79022). Qed.
Lemma lem6204922 (n : nat) : (term63 n) = (real_of_num n).
Proof. exact (EQ_MP (@lem2318545 n) (@lem2318544 n)). Qed.
Lemma lem6204923 : term89 = term90.
Proof. exact (@lem6204922 term22). Qed.
Lemma lem6204924 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem6204925 : term91 = term92.
Proof. exact (MK_COMB (@lem6204924) (@lem6204923)). Qed.
Lemma lem6204926 (_79022 : int) : (real_of_int _79022) = (real_of_int _79022).
Proof. exact (eq_refl (real_of_int _79022)). Qed.
Lemma lem6204927 (_79022 : int) : (term87 _79022) = (term93 _79022).
Proof. exact (MK_COMB (@lem6204925) (@lem6204926 _79022)). Qed.
Lemma lem6204928 (_79022 : int) : (term86 _79022) = (term93 _79022).
Proof. exact (TRANS (@lem6204920 _79022) (@lem6204927 _79022)). Qed.
Lemma lem6204929 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem6204930 (_79022 : int) : (term94 _79022) = (term95 _79022).
Proof. exact (MK_COMB (@lem6204929) (@lem6204928 _79022)). Qed.
Lemma lem6204932 (n : nat) : (term63 n) = (real_of_num n).
Proof. exact (EQ_MP (@lem2318545 n) (@lem2318544 n)). Qed.
Lemma lem6204933 : term96 = term97.
Proof. exact (@lem6204932 term32). Qed.
Lemma lem6204934 (_79022 : int) : (term82 _79022) = (term98 _79022).
Proof. exact (MK_COMB (@lem6204930 _79022) (@lem6204933)). Qed.
Lemma lem6204935 (_79022 : int) : (term81 _79022) = (term98 _79022).
Proof. exact (TRANS (@lem6204917 _79022) (@lem6204934 _79022)). Qed.
Lemma lem6204936 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem6204937 (_79022 : int) : (term99 _79022) = (term100 _79022).
Proof. exact (MK_COMB (@lem6204936) (@lem6204935 _79022)). Qed.
Lemma lem6204939 (n : nat) : (term63 n) = (real_of_num n).
Proof. exact (EQ_MP (@lem2318545 n) (@lem2318544 n)). Qed.
Lemma lem6204940 : term101 = term102.
Proof. exact (@lem6204939 term6). Qed.
Lemma lem6204941 (_79022 : int) : (term79 _79022) = (term103 _79022).
Proof. exact (MK_COMB (@lem6204937 _79022) (@lem6204940)). Qed.
Lemma lem6204942 (_79022 : int) : (term78 _79022) = (term103 _79022).
Proof. exact (TRANS (@lem6204914 _79022) (@lem6204941 _79022)). Qed.
Lemma lem6204943 : real_le = real_le.
Proof. exact (eq_refl real_le). Qed.
Lemma lem6204944 (_79022 : int) : (term104 _79022) = (term105 _79022).
Proof. exact (MK_COMB (@lem6204943) (@lem6204942 _79022)). Qed.
Lemma lem6204946 (x : int) (y : int) : (term84 x y) = (term85 x y).
Proof. exact (EQ_MP (@lem2318533 x y) (@lem2318532 x y)). Qed.
Lemma lem6204947 (_79021 : int) : (term86 _79021) = (term87 _79021).
Proof. exact (@lem6204946 term88 _79021). Qed.
Lemma lem6204949 (n : nat) : (term63 n) = (real_of_num n).
Proof. exact (EQ_MP (@lem2318545 n) (@lem2318544 n)). Qed.
Lemma lem6204950 : term89 = term90.
Proof. exact (@lem6204949 term22). Qed.
Lemma lem6204951 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem6204952 : term91 = term92.
Proof. exact (MK_COMB (@lem6204951) (@lem6204950)). Qed.
Lemma lem6204953 (_79021 : int) : (real_of_int _79021) = (real_of_int _79021).
Proof. exact (eq_refl (real_of_int _79021)). Qed.
Lemma lem6204954 (_79021 : int) : (term87 _79021) = (term93 _79021).
Proof. exact (MK_COMB (@lem6204952) (@lem6204953 _79021)). Qed.
Lemma lem6204955 (_79021 : int) : (term86 _79021) = (term93 _79021).
Proof. exact (TRANS (@lem6204947 _79021) (@lem6204954 _79021)). Qed.
Lemma lem6204956 (_79022 : int) (_79021 : int) : (term941 _79022 _79021) = (term942 _79022 _79021).
Proof. exact (MK_COMB (@lem6204944 _79022) (@lem6204955 _79021)). Qed.
Lemma lem6204957 (_79022 : int) (_79021 : int) : (term940 _79022 _79021) = (term942 _79022 _79021).
Proof. exact (TRANS (@lem6204911 _79022 _79021) (@lem6204956 _79022 _79021)). Qed.
Lemma lem6204958 (_79022 : int) (_79021 : int) : (term924 _79021 _79022) = (term942 _79022 _79021).
Proof. exact (TRANS (@lem6204908 _79022 _79021) (@lem6204957 _79022 _79021)). Qed.
Lemma lem6204960 (y : int) (x : int) : (term452 x y) = (term453 y x).
Proof. exact (proj1 (@lem2318495 x y)). Qed.
Lemma lem6204961 (_79022 : int) (_79021 : int) : (term436 _79021 _79022) = (term457 _79022 _79021).
Proof. exact (@lem6204960 (term458 _79022) _79021). Qed.
Lemma lem6204963 (x : int) (y : int) : (int_le x y) = (term60 x y).
Proof. exact (EQ_MP (@lem2318569 x y) (@lem2318568 x y)). Qed.
Lemma lem6204964 (_79022 : int) (_79021 : int) : (term457 _79022 _79021) = (term459 _79022 _79021).
Proof. exact (@lem6204963 (term460 _79022) _79021). Qed.
Lemma lem6204966 (x : int) (y : int) : (term76 x y) = (term77 x y).
Proof. exact (EQ_MP (@lem2318539 x y) (@lem2318538 x y)). Qed.
Lemma lem6204967 (_79022 : int) : (term461 _79022) = (term462 _79022).
Proof. exact (@lem6204966 (term458 _79022) term80). Qed.
Lemma lem6204969 (x : int) (y : int) : (term76 x y) = (term77 x y).
Proof. exact (EQ_MP (@lem2318539 x y) (@lem2318538 x y)). Qed.
Lemma lem6204970 (_79022 : int) : (term463 _79022) = (term464 _79022).
Proof. exact (@lem6204969 _79022 term80). Qed.
Lemma lem6204972 (n : nat) : (term63 n) = (real_of_num n).
Proof. exact (EQ_MP (@lem2318545 n) (@lem2318544 n)). Qed.
Lemma lem6204973 : term101 = term102.
Proof. exact (@lem6204972 term6). Qed.
Lemma lem6204974 (_79022 : int) : (term140 _79022) = (term140 _79022).
Proof. exact (eq_refl (term140 _79022)). Qed.
Lemma lem6204975 (_79022 : int) : (term464 _79022) = (term465 _79022).
Proof. exact (MK_COMB (@lem6204974 _79022) (@lem6204973)). Qed.
Lemma lem6204976 (_79022 : int) : (term463 _79022) = (term465 _79022).
Proof. exact (TRANS (@lem6204970 _79022) (@lem6204975 _79022)). Qed.
Lemma lem6204977 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem6204978 (_79022 : int) : (term466 _79022) = (term467 _79022).
Proof. exact (MK_COMB (@lem6204977) (@lem6204976 _79022)). Qed.
Lemma lem6204980 (n : nat) : (term63 n) = (real_of_num n).
Proof. exact (EQ_MP (@lem2318545 n) (@lem2318544 n)). Qed.
Lemma lem6204981 : term101 = term102.
Proof. exact (@lem6204980 term6). Qed.
Lemma lem6204982 (_79022 : int) : (term462 _79022) = (term468 _79022).
Proof. exact (MK_COMB (@lem6204978 _79022) (@lem6204981)). Qed.
Lemma lem6204983 (_79022 : int) : (term461 _79022) = (term468 _79022).
Proof. exact (TRANS (@lem6204967 _79022) (@lem6204982 _79022)). Qed.
Lemma lem6204984 : real_le = real_le.
Proof. exact (eq_refl real_le). Qed.
Lemma lem6204985 (_79022 : int) : (term469 _79022) = (term470 _79022).
Proof. exact (MK_COMB (@lem6204984) (@lem6204983 _79022)). Qed.
Lemma lem6204986 (_79021 : int) : (real_of_int _79021) = (real_of_int _79021).
Proof. exact (eq_refl (real_of_int _79021)). Qed.
Lemma lem6204987 (_79022 : int) (_79021 : int) : (term459 _79022 _79021) = (term471 _79022 _79021).
Proof. exact (MK_COMB (@lem6204985 _79022) (@lem6204986 _79021)). Qed.
Lemma lem6204988 (_79022 : int) (_79021 : int) : (term457 _79022 _79021) = (term471 _79022 _79021).
Proof. exact (TRANS (@lem6204964 _79022 _79021) (@lem6204987 _79022 _79021)). Qed.
Lemma lem6204989 (_79022 : int) (_79021 : int) : (term436 _79021 _79022) = (term471 _79022 _79021).
Proof. exact (TRANS (@lem6204961 _79022 _79021) (@lem6204988 _79022 _79021)). Qed.
Lemma lem6204990 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6204991 (_79022 : int) (_79021 : int) : (term943 _79021 _79022) = (term944 _79022 _79021).
Proof. exact (MK_COMB (@lem6204990) (@lem6204958 _79022 _79021)). Qed.
Lemma lem6204992 (_79022 : int) (_79021 : int) : (term916 _79021 _79022) = (term945 _79022 _79021).
Proof. exact (MK_COMB (@lem6204991 _79022 _79021) (@lem6204989 _79022 _79021)). Qed.
Lemma lem6204995 (x : int) (y : int) : (int_le x y) = (term60 x y).
Proof. exact (EQ_MP (@lem2318569 x y) (@lem2318568 x y)). Qed.
Lemma lem6204996 (_79021 : int) (_79022 : int) : (term917 _79021 _79022) = (term946 _79021 _79022).
Proof. exact (@lem6204995 (term83 _79021) (term59 _79022)). Qed.
Lemma lem6204998 (x : int) (y : int) : (term84 x y) = (term85 x y).
Proof. exact (EQ_MP (@lem2318533 x y) (@lem2318532 x y)). Qed.
Lemma lem6204999 (_79021 : int) : (term86 _79021) = (term87 _79021).
Proof. exact (@lem6204998 term88 _79021). Qed.
Lemma lem6205001 (n : nat) : (term63 n) = (real_of_num n).
Proof. exact (EQ_MP (@lem2318545 n) (@lem2318544 n)). Qed.
Lemma lem6205002 : term89 = term90.
Proof. exact (@lem6205001 term22). Qed.
Lemma lem6205003 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem6205004 : term91 = term92.
Proof. exact (MK_COMB (@lem6205003) (@lem6205002)). Qed.
Lemma lem6205005 (_79021 : int) : (real_of_int _79021) = (real_of_int _79021).
Proof. exact (eq_refl (real_of_int _79021)). Qed.
Lemma lem6205006 (_79021 : int) : (term87 _79021) = (term93 _79021).
Proof. exact (MK_COMB (@lem6205004) (@lem6205005 _79021)). Qed.
Lemma lem6205007 (_79021 : int) : (term86 _79021) = (term93 _79021).
Proof. exact (TRANS (@lem6204999 _79021) (@lem6205006 _79021)). Qed.
Lemma lem6205008 : real_le = real_le.
Proof. exact (eq_refl real_le). Qed.
Lemma lem6205009 (_79021 : int) : (term476 _79021) = (term477 _79021).
Proof. exact (MK_COMB (@lem6205008) (@lem6205007 _79021)). Qed.
Lemma lem6205011 (x : int) (y : int) : (term76 x y) = (term77 x y).
Proof. exact (EQ_MP (@lem2318539 x y) (@lem2318538 x y)). Qed.
Lemma lem6205012 (_79022 : int) : (term81 _79022) = (term82 _79022).
Proof. exact (@lem6205011 (term83 _79022) term48). Qed.
Lemma lem6205014 (x : int) (y : int) : (term84 x y) = (term85 x y).
Proof. exact (EQ_MP (@lem2318533 x y) (@lem2318532 x y)). Qed.
Lemma lem6205015 (_79022 : int) : (term86 _79022) = (term87 _79022).
Proof. exact (@lem6205014 term88 _79022). Qed.
Lemma lem6205017 (n : nat) : (term63 n) = (real_of_num n).
Proof. exact (EQ_MP (@lem2318545 n) (@lem2318544 n)). Qed.
Lemma lem6205018 : term89 = term90.
Proof. exact (@lem6205017 term22). Qed.
Lemma lem6205019 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem6205020 : term91 = term92.
Proof. exact (MK_COMB (@lem6205019) (@lem6205018)). Qed.
Lemma lem6205021 (_79022 : int) : (real_of_int _79022) = (real_of_int _79022).
Proof. exact (eq_refl (real_of_int _79022)). Qed.
Lemma lem6205022 (_79022 : int) : (term87 _79022) = (term93 _79022).
Proof. exact (MK_COMB (@lem6205020) (@lem6205021 _79022)). Qed.
Lemma lem6205023 (_79022 : int) : (term86 _79022) = (term93 _79022).
Proof. exact (TRANS (@lem6205015 _79022) (@lem6205022 _79022)). Qed.
Lemma lem6205024 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem6205025 (_79022 : int) : (term94 _79022) = (term95 _79022).
Proof. exact (MK_COMB (@lem6205024) (@lem6205023 _79022)). Qed.
Lemma lem6205027 (n : nat) : (term63 n) = (real_of_num n).
Proof. exact (EQ_MP (@lem2318545 n) (@lem2318544 n)). Qed.
Lemma lem6205028 : term96 = term97.
Proof. exact (@lem6205027 term32). Qed.
Lemma lem6205029 (_79022 : int) : (term82 _79022) = (term98 _79022).
Proof. exact (MK_COMB (@lem6205025 _79022) (@lem6205028)). Qed.
Lemma lem6205030 (_79022 : int) : (term81 _79022) = (term98 _79022).
Proof. exact (TRANS (@lem6205012 _79022) (@lem6205029 _79022)). Qed.
Lemma lem6205031 (_79021 : int) (_79022 : int) : (term946 _79021 _79022) = (term947 _79021 _79022).
Proof. exact (MK_COMB (@lem6205009 _79021) (@lem6205030 _79022)). Qed.
Lemma lem6205033 (_79021 : int) (_79022 : int) : (term917 _79021 _79022) = (term947 _79021 _79022).
Proof. exact (TRANS (@lem6204996 _79021 _79022) (@lem6205031 _79021 _79022)). Qed.
Lemma lem6205036 (x : int) (y : int) : (int_le x y) = (term60 x y).
Proof. exact (EQ_MP (@lem2318569 x y) (@lem2318568 x y)). Qed.
Lemma lem6205037 (_79021 : int) (_79022 : int) : (term427 _79021 _79022) = (term479 _79021 _79022).
Proof. exact (@lem6205036 _79021 (term458 _79022)). Qed.
Lemma lem6205039 (x : int) (y : int) : (term76 x y) = (term77 x y).
Proof. exact (EQ_MP (@lem2318539 x y) (@lem2318538 x y)). Qed.
Lemma lem6205040 (_79022 : int) : (term463 _79022) = (term464 _79022).
Proof. exact (@lem6205039 _79022 term80). Qed.
Lemma lem6205042 (n : nat) : (term63 n) = (real_of_num n).
Proof. exact (EQ_MP (@lem2318545 n) (@lem2318544 n)). Qed.
Lemma lem6205043 : term101 = term102.
Proof. exact (@lem6205042 term6). Qed.
Lemma lem6205044 (_79022 : int) : (term140 _79022) = (term140 _79022).
Proof. exact (eq_refl (term140 _79022)). Qed.
Lemma lem6205045 (_79022 : int) : (term464 _79022) = (term465 _79022).
Proof. exact (MK_COMB (@lem6205044 _79022) (@lem6205043)). Qed.
Lemma lem6205046 (_79022 : int) : (term463 _79022) = (term465 _79022).
Proof. exact (TRANS (@lem6205040 _79022) (@lem6205045 _79022)). Qed.
Lemma lem6205047 (_79021 : int) : (term480 _79021) = (term480 _79021).
Proof. exact (eq_refl (term480 _79021)). Qed.
Lemma lem6205048 (_79021 : int) (_79022 : int) : (term479 _79021 _79022) = (term481 _79021 _79022).
Proof. exact (MK_COMB (@lem6205047 _79021) (@lem6205046 _79022)). Qed.
Lemma lem6205050 (_79021 : int) (_79022 : int) : (term427 _79021 _79022) = (term481 _79021 _79022).
Proof. exact (TRANS (@lem6205037 _79021 _79022) (@lem6205048 _79021 _79022)). Qed.
Lemma lem6205051 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6205052 (_79021 : int) (_79022 : int) : (term920 _79021 _79022) = (term948 _79021 _79022).
Proof. exact (MK_COMB (@lem6205051) (@lem6205033 _79021 _79022)). Qed.
Lemma lem6205053 (_79021 : int) (_79022 : int) : (term922 _79021 _79022) = (term949 _79021 _79022).
Proof. exact (MK_COMB (@lem6205052 _79021 _79022) (@lem6205050 _79021 _79022)). Qed.
Lemma lem6205054 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6205055 (_79022 : int) (_79021 : int) : (term926 _79021 _79022) = (term950 _79022 _79021).
Proof. exact (MK_COMB (@lem6205054) (@lem6204992 _79022 _79021)). Qed.
Lemma lem6205056 (_79021 : int) (_79022 : int) : (term928 _79021 _79022) = (term951 _79021 _79022).
Proof. exact (MK_COMB (@lem6205055 _79022 _79021) (@lem6205053 _79021 _79022)). Qed.
Lemma lem6205057 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6205058 (_79022 : int) : (term110 _79022) = (term111 _79022).
Proof. exact (MK_COMB (@lem6205057) (@lem6204905 _79022)). Qed.
Lemma lem6205059 (_79021 : int) (_79022 : int) : (term933 _79021 _79022) = (term952 _79021 _79022).
Proof. exact (MK_COMB (@lem6205058 _79022) (@lem6205056 _79021 _79022)). Qed.
Lemma lem6205060 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6205061 (_79021 : int) : (term110 _79021) = (term111 _79021).
Proof. exact (MK_COMB (@lem6205060) (@lem6204892 _79021)). Qed.
Lemma lem6205062 (_79021 : int) (_79022 : int) : (term937 _79021 _79022) = (term953 _79021 _79022).
Proof. exact (MK_COMB (@lem6205061 _79021) (@lem6205059 _79021 _79022)). Qed.
Lemma lem6205063 (_79021 : int) (_79022 : int) : (term938 _79021 _79022) = (term953 _79021 _79022).
Proof. exact (TRANS (@lem6204879 _79021 _79022) (@lem6205062 _79021 _79022)). Qed.
Lemma lem6205067 (t : Prop) : (term113 t) = t.
Proof. exact (EQ_MP (@lem16507 t) (@lem16506 t)). Qed.
Lemma lem6205123 (_79021 : int) (_79022 : int) : (term954 _79021 _79022) = (term953 _79021 _79022).
Proof. exact (@lem6205067 (term953 _79021 _79022)). Qed.
Lemma lem6205124 (_79021 : int) : (term68 _79021) = (term116 _79021).
Proof. exact (@lem1988287 (real_of_int _79021) term65). Qed.
Lemma lem6205130 (_79021 : int) : (term117 _79021) = (term118 _79021).
Proof. exact (@lem1982792 (real_of_int _79021) term65). Qed.
Lemma lem6205132 (x : nat) : (real_of_num x) = (term119 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6205133 : term65 = term120.
Proof. exact (@lem6205132 (NUMERAL 0)). Qed.
Lemma lem6205135 (x : nat) : (term121 x) = (term122 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem6205136 : term123 = term124.
Proof. exact (@lem6205135 term6). Qed.
Lemma lem6205137 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem6205138 : term125 = term126.
Proof. exact (MK_COMB (@lem6205137) (@lem6205136)). Qed.
Lemma lem6205139 : term127 = term128.
Proof. exact (MK_COMB (@lem6205138) (@lem6205133)). Qed.
Lemma lem6205140 : term128 = term129.
Proof. exact (@lem1981613 term123 term65 term102 term102). Qed.
Lemma lem6205142 (m : nat) (n : nat) : (term130 m n) = (term131 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6205143 : term132 = term133.
Proof. exact (@lem6205142 term6 term6). Qed.
Lemma lem6205144 : (term134 = (BIT1 0)) = (term135 = term6).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6205145 : term135 = term6.
Proof. exact (EQ_MP (@lem6205144) (@lem940073)). Qed.
Lemma lem6205146 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6205147 : term133 = term102.
Proof. exact (MK_COMB (@lem6205146) (@lem6205145)). Qed.
Lemma lem6205148 : term132 = term102.
Proof. exact (TRANS (@lem6205143) (@lem6205147)). Qed.
Lemma lem6205150 (x : nat) : (term136 x) = term65.
Proof. exact (proj2 (@lem1367254 x)). Qed.
Lemma lem6205151 : term127 = term65.
Proof. exact (@lem6205150 term6). Qed.
Lemma lem6205152 : real_div = real_div.
Proof. exact (eq_refl real_div). Qed.
Lemma lem6205153 : term137 = term138.
Proof. exact (MK_COMB (@lem6205152) (@lem6205151)). Qed.
Lemma lem6205154 : term129 = term120.
Proof. exact (MK_COMB (@lem6205153) (@lem6205148)). Qed.
Lemma lem6205155 : term128 = term120.
Proof. exact (TRANS (@lem6205140) (@lem6205154)). Qed.
Lemma lem6205156 : term127 = term120.
Proof. exact (TRANS (@lem6205139) (@lem6205155)). Qed.
Lemma lem6205158 (x : real) : (term139 x) = x.
Proof. exact (EQ_MP (@lem1982628 x) (@lem1982627 x)). Qed.
Lemma lem6205159 : term120 = term65.
Proof. exact (@lem6205158 term65). Qed.
Lemma lem6205160 : term127 = term65.
Proof. exact (TRANS (@lem6205156) (@lem6205159)). Qed.
Lemma lem6205161 (_79021 : int) : (term140 _79021) = (term140 _79021).
Proof. exact (eq_refl (term140 _79021)). Qed.
Lemma lem6205162 (_79021 : int) : (term118 _79021) = (term141 _79021).
Proof. exact (MK_COMB (@lem6205161 _79021) (@lem6205160)). Qed.
Lemma lem6205163 (_79021 : int) : (term141 _79021) = (real_of_int _79021).
Proof. exact (@lem1982723 (real_of_int _79021)). Qed.
Lemma lem6205164 (_79021 : int) : (term118 _79021) = (real_of_int _79021).
Proof. exact (TRANS (@lem6205162 _79021) (@lem6205163 _79021)). Qed.
Lemma lem6205166 (_79021 : int) : (term117 _79021) = (real_of_int _79021).
Proof. exact (TRANS (@lem6205130 _79021) (@lem6205164 _79021)). Qed.
Lemma lem6205167 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem6205168 (_79021 : int) : (term142 _79021) = (term143 _79021).
Proof. exact (MK_COMB (@lem6205167) (@lem6205166 _79021)). Qed.
Lemma lem6205169 : term65 = term65.
Proof. exact (eq_refl term65). Qed.
Lemma lem6205170 (_79021 : int) : (term116 _79021) = (term144 _79021).
Proof. exact (MK_COMB (@lem6205168 _79021) (@lem6205169)). Qed.
Lemma lem6205171 (_79021 : int) : (term68 _79021) = (term144 _79021).
Proof. exact (TRANS (@lem6205124 _79021) (@lem6205170 _79021)). Qed.
Lemma lem6205172 (_79022 : int) : (term68 _79022) = (term116 _79022).
Proof. exact (@lem1988287 (real_of_int _79022) term65). Qed.
Lemma lem6205178 (_79022 : int) : (term117 _79022) = (term118 _79022).
Proof. exact (@lem1982792 (real_of_int _79022) term65). Qed.
Lemma lem6205180 (x : nat) : (real_of_num x) = (term119 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6205181 : term65 = term120.
Proof. exact (@lem6205180 (NUMERAL 0)). Qed.
Lemma lem6205183 (x : nat) : (term121 x) = (term122 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem6205184 : term123 = term124.
Proof. exact (@lem6205183 term6). Qed.
Lemma lem6205185 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem6205186 : term125 = term126.
Proof. exact (MK_COMB (@lem6205185) (@lem6205184)). Qed.
Lemma lem6205187 : term127 = term128.
Proof. exact (MK_COMB (@lem6205186) (@lem6205181)). Qed.
Lemma lem6205188 : term128 = term129.
Proof. exact (@lem1981613 term123 term65 term102 term102). Qed.
Lemma lem6205190 (m : nat) (n : nat) : (term130 m n) = (term131 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6205191 : term132 = term133.
Proof. exact (@lem6205190 term6 term6). Qed.
Lemma lem6205192 : (term134 = (BIT1 0)) = (term135 = term6).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6205193 : term135 = term6.
Proof. exact (EQ_MP (@lem6205192) (@lem940073)). Qed.
Lemma lem6205194 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6205195 : term133 = term102.
Proof. exact (MK_COMB (@lem6205194) (@lem6205193)). Qed.
Lemma lem6205196 : term132 = term102.
Proof. exact (TRANS (@lem6205191) (@lem6205195)). Qed.
Lemma lem6205198 (x : nat) : (term136 x) = term65.
Proof. exact (proj2 (@lem1367254 x)). Qed.
Lemma lem6205199 : term127 = term65.
Proof. exact (@lem6205198 term6). Qed.
Lemma lem6205200 : real_div = real_div.
Proof. exact (eq_refl real_div). Qed.
Lemma lem6205201 : term137 = term138.
Proof. exact (MK_COMB (@lem6205200) (@lem6205199)). Qed.
Lemma lem6205202 : term129 = term120.
Proof. exact (MK_COMB (@lem6205201) (@lem6205196)). Qed.
Lemma lem6205203 : term128 = term120.
Proof. exact (TRANS (@lem6205188) (@lem6205202)). Qed.
Lemma lem6205204 : term127 = term120.
Proof. exact (TRANS (@lem6205187) (@lem6205203)). Qed.
Lemma lem6205206 (x : real) : (term139 x) = x.
Proof. exact (EQ_MP (@lem1982628 x) (@lem1982627 x)). Qed.
Lemma lem6205207 : term120 = term65.
Proof. exact (@lem6205206 term65). Qed.
Lemma lem6205208 : term127 = term65.
Proof. exact (TRANS (@lem6205204) (@lem6205207)). Qed.
Lemma lem6205209 (_79022 : int) : (term140 _79022) = (term140 _79022).
Proof. exact (eq_refl (term140 _79022)). Qed.
Lemma lem6205210 (_79022 : int) : (term118 _79022) = (term141 _79022).
Proof. exact (MK_COMB (@lem6205209 _79022) (@lem6205208)). Qed.
Lemma lem6205211 (_79022 : int) : (term141 _79022) = (real_of_int _79022).
Proof. exact (@lem1982723 (real_of_int _79022)). Qed.
Lemma lem6205212 (_79022 : int) : (term118 _79022) = (real_of_int _79022).
Proof. exact (TRANS (@lem6205210 _79022) (@lem6205211 _79022)). Qed.
Lemma lem6205214 (_79022 : int) : (term117 _79022) = (real_of_int _79022).
Proof. exact (TRANS (@lem6205178 _79022) (@lem6205212 _79022)). Qed.
Lemma lem6205215 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem6205216 (_79022 : int) : (term142 _79022) = (term143 _79022).
Proof. exact (MK_COMB (@lem6205215) (@lem6205214 _79022)). Qed.
Lemma lem6205217 : term65 = term65.
Proof. exact (eq_refl term65). Qed.
Lemma lem6205218 (_79022 : int) : (term116 _79022) = (term144 _79022).
Proof. exact (MK_COMB (@lem6205216 _79022) (@lem6205217)). Qed.
Lemma lem6205219 (_79022 : int) : (term68 _79022) = (term144 _79022).
Proof. exact (TRANS (@lem6205172 _79022) (@lem6205218 _79022)). Qed.
Lemma lem6205220 (_79021 : int) (_79022 : int) : (term942 _79022 _79021) = (term955 _79021 _79022).
Proof. exact (@lem1988287 (term93 _79021) (term103 _79022)). Qed.
Lemma lem6205238 (_79022 : int) : (term103 _79022) = (term146 _79022).
Proof. exact (@lem1982755 (term93 _79022) term97 term102). Qed.
Lemma lem6205240 (x : nat) : (real_of_num x) = (term119 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6205241 : term102 = term147.
Proof. exact (@lem6205240 term6). Qed.
Lemma lem6205243 (x : nat) : (real_of_num x) = (term119 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6205244 : term97 = term148.
Proof. exact (@lem6205243 term32). Qed.
Lemma lem6205245 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem6205246 : term149 = term150.
Proof. exact (MK_COMB (@lem6205245) (@lem6205244)). Qed.
Lemma lem6205247 : term151 = term152.
Proof. exact (MK_COMB (@lem6205246) (@lem6205241)). Qed.
Lemma lem6205248 : term153.
Proof. exact (@lem1981473 term97 term102 term102 term102 term154 term102). Qed.
Lemma lem6205250 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6205251 : term156 = term157.
Proof. exact (@lem6205250 (NUMERAL 0) term6). Qed.
Lemma lem6205252 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6205253 (h1 : term158 = (BIT1 0)) : term157 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6205254 : (term158 = (BIT1 0)) = (term157 = True).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6205253 h1) (fun h1 : term157 = True => @lem6205252)). Qed.
Lemma lem6205255 : term157 = True.
Proof. exact (EQ_MP (@lem6205254) (@lem6205252)). Qed.
Lemma lem6205256 : term156 = True.
Proof. exact (TRANS (@lem6205251) (@lem6205255)). Qed.
Lemma lem6205257 : True = term156.
Proof. exact (SYM (@lem6205256)). Qed.
Lemma lem6205258 : term156.
Proof. exact (EQ_MP (@lem6205257) (@lem0)). Qed.
Lemma lem6205259 : term159.
Proof. exact (@lem6205248 (@lem6205258)). Qed.
Lemma lem6205261 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6205262 : term156 = term157.
Proof. exact (@lem6205261 (NUMERAL 0) term6). Qed.
Lemma lem6205263 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6205264 (h1 : term158 = (BIT1 0)) : term157 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6205265 : (term158 = (BIT1 0)) = (term157 = True).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6205264 h1) (fun h1 : term157 = True => @lem6205263)). Qed.
Lemma lem6205266 : term157 = True.
Proof. exact (EQ_MP (@lem6205265) (@lem6205263)). Qed.
Lemma lem6205267 : term156 = True.
Proof. exact (TRANS (@lem6205262) (@lem6205266)). Qed.
Lemma lem6205268 : True = term156.
Proof. exact (SYM (@lem6205267)). Qed.
Lemma lem6205269 : term156.
Proof. exact (EQ_MP (@lem6205268) (@lem0)). Qed.
Lemma lem6205270 : term160.
Proof. exact (@lem6205259 (@lem6205269)). Qed.
Lemma lem6205272 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6205273 : term156 = term157.
Proof. exact (@lem6205272 (NUMERAL 0) term6). Qed.
Lemma lem6205274 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6205275 (h1 : term158 = (BIT1 0)) : term157 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6205276 : (term158 = (BIT1 0)) = (term157 = True).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6205275 h1) (fun h1 : term157 = True => @lem6205274)). Qed.
Lemma lem6205277 : term157 = True.
Proof. exact (EQ_MP (@lem6205276) (@lem6205274)). Qed.
Lemma lem6205278 : term156 = True.
Proof. exact (TRANS (@lem6205273) (@lem6205277)). Qed.
Lemma lem6205279 : True = term156.
Proof. exact (SYM (@lem6205278)). Qed.
Lemma lem6205280 : term156.
Proof. exact (EQ_MP (@lem6205279) (@lem0)). Qed.
Lemma lem6205281 : term161.
Proof. exact (@lem6205270 (@lem6205280)). Qed.
Lemma lem6205283 (m : nat) (n : nat) : (term130 m n) = (term131 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6205284 : term132 = term133.
Proof. exact (@lem6205283 term6 term6). Qed.
Lemma lem6205285 : (term134 = (BIT1 0)) = (term135 = term6).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6205286 : term135 = term6.
Proof. exact (EQ_MP (@lem6205285) (@lem940073)). Qed.
Lemma lem6205287 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6205288 : term133 = term102.
Proof. exact (MK_COMB (@lem6205287) (@lem6205286)). Qed.
Lemma lem6205289 : term132 = term102.
Proof. exact (TRANS (@lem6205284) (@lem6205288)). Qed.
Lemma lem6205291 (m : nat) (n : nat) : (term130 m n) = (term131 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6205292 : term162 = term163.
Proof. exact (@lem6205291 term32 term6). Qed.
Lemma lem6205293 : term164 = term30.
Proof. exact (@lem996237 term30). Qed.
Lemma lem6205294 : (term164 = term30) = (term165 = term32).
Proof. exact (@lem1007663 term30 (BIT1 0) term30). Qed.
Lemma lem6205295 : term165 = term32.
Proof. exact (EQ_MP (@lem6205294) (@lem6205293)). Qed.
Lemma lem6205296 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6205297 : term163 = term97.
Proof. exact (MK_COMB (@lem6205296) (@lem6205295)). Qed.
Lemma lem6205298 : term162 = term97.
Proof. exact (TRANS (@lem6205292) (@lem6205297)). Qed.
Lemma lem6205299 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem6205300 : term166 = term149.
Proof. exact (MK_COMB (@lem6205299) (@lem6205298)). Qed.
Lemma lem6205301 : term167 = term151.
Proof. exact (MK_COMB (@lem6205300) (@lem6205289)). Qed.
Lemma lem6205302 : term151 = term168.
Proof. exact (@lem1367770 term32 term6). Qed.
Lemma lem6205303 : term169 = term170.
Proof. exact (@lem707013). Qed.
Lemma lem6205304 : (term169 = term170) = (term171 = term172).
Proof. exact (@lem1006570 term30 (BIT1 0) term170). Qed.
Lemma lem6205305 : term171 = term172.
Proof. exact (EQ_MP (@lem6205304) (@lem6205303)). Qed.
Lemma lem6205306 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6205307 : term168 = term154.
Proof. exact (MK_COMB (@lem6205306) (@lem6205305)). Qed.
Lemma lem6205308 : term151 = term154.
Proof. exact (TRANS (@lem6205302) (@lem6205307)). Qed.
Lemma lem6205309 : term167 = term154.
Proof. exact (TRANS (@lem6205301) (@lem6205308)). Qed.
Lemma lem6205310 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem6205311 : term173 = term174.
Proof. exact (MK_COMB (@lem6205310) (@lem6205309)). Qed.
Lemma lem6205312 : term102 = term102.
Proof. exact (eq_refl term102). Qed.
Lemma lem6205313 : term175 = term176.
Proof. exact (MK_COMB (@lem6205311) (@lem6205312)). Qed.
Lemma lem6205315 (m : nat) (n : nat) : (term130 m n) = (term131 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6205316 : term176 = term177.
Proof. exact (@lem6205315 term172 term6). Qed.
Lemma lem6205317 : term178 = term170.
Proof. exact (@lem996237 term170). Qed.
Lemma lem6205318 : (term178 = term170) = (term179 = term172).
Proof. exact (@lem1007663 term170 (BIT1 0) term170). Qed.
Lemma lem6205319 : term179 = term172.
Proof. exact (EQ_MP (@lem6205318) (@lem6205317)). Qed.
Lemma lem6205320 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6205321 : term177 = term154.
Proof. exact (MK_COMB (@lem6205320) (@lem6205319)). Qed.
Lemma lem6205322 : term176 = term154.
Proof. exact (TRANS (@lem6205316) (@lem6205321)). Qed.
Lemma lem6205323 : term175 = term154.
Proof. exact (TRANS (@lem6205313) (@lem6205322)). Qed.
Lemma lem6205325 (m : nat) (n : nat) : (term130 m n) = (term131 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6205326 : term132 = term133.
Proof. exact (@lem6205325 term6 term6). Qed.
Lemma lem6205327 : (term134 = (BIT1 0)) = (term135 = term6).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6205328 : term135 = term6.
Proof. exact (EQ_MP (@lem6205327) (@lem940073)). Qed.
Lemma lem6205329 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6205330 : term133 = term102.
Proof. exact (MK_COMB (@lem6205329) (@lem6205328)). Qed.
Lemma lem6205331 : term132 = term102.
Proof. exact (TRANS (@lem6205326) (@lem6205330)). Qed.
Lemma lem6205332 : term174 = term174.
Proof. exact (eq_refl term174). Qed.
Lemma lem6205333 : term180 = term176.
Proof. exact (MK_COMB (@lem6205332) (@lem6205331)). Qed.
Lemma lem6205335 (m : nat) (n : nat) : (term130 m n) = (term131 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6205336 : term176 = term177.
Proof. exact (@lem6205335 term172 term6). Qed.
Lemma lem6205337 : term178 = term170.
Proof. exact (@lem996237 term170). Qed.
Lemma lem6205338 : (term178 = term170) = (term179 = term172).
Proof. exact (@lem1007663 term170 (BIT1 0) term170). Qed.
Lemma lem6205339 : term179 = term172.
Proof. exact (EQ_MP (@lem6205338) (@lem6205337)). Qed.
Lemma lem6205340 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6205341 : term177 = term154.
Proof. exact (MK_COMB (@lem6205340) (@lem6205339)). Qed.
Lemma lem6205342 : term176 = term154.
Proof. exact (TRANS (@lem6205336) (@lem6205341)). Qed.
Lemma lem6205343 : term180 = term154.
Proof. exact (TRANS (@lem6205333) (@lem6205342)). Qed.
Lemma lem6205344 : term154 = term180.
Proof. exact (SYM (@lem6205343)). Qed.
Lemma lem6205345 : term175 = term180.
Proof. exact (TRANS (@lem6205323) (@lem6205344)). Qed.
Lemma lem6205346 : term152 = term181.
Proof. exact (@lem6205281 (@lem6205345)). Qed.
Lemma lem6205347 : term151 = term181.
Proof. exact (TRANS (@lem6205247) (@lem6205346)). Qed.
Lemma lem6205349 (x : real) : (term139 x) = x.
Proof. exact (EQ_MP (@lem1981475 x) (@lem1981474 x)). Qed.
Lemma lem6205350 : term181 = term154.
Proof. exact (@lem6205349 term154). Qed.
Lemma lem6205351 : term151 = term154.
Proof. exact (TRANS (@lem6205347) (@lem6205350)). Qed.
Lemma lem6205352 (_79022 : int) : (term95 _79022) = (term95 _79022).
Proof. exact (eq_refl (term95 _79022)). Qed.
Lemma lem6205353 (_79022 : int) : (term146 _79022) = (term182 _79022).
Proof. exact (MK_COMB (@lem6205352 _79022) (@lem6205351)). Qed.
Lemma lem6205355 (_79022 : int) : (term103 _79022) = (term182 _79022).
Proof. exact (TRANS (@lem6205238 _79022) (@lem6205353 _79022)). Qed.
Lemma lem6205364 (_79021 : int) : (term490 _79021) = (term490 _79021).
Proof. exact (eq_refl (term490 _79021)). Qed.
Lemma lem6205365 (_79021 : int) (_79022 : int) : (term956 _79021 _79022) = (term957 _79021 _79022).
Proof. exact (MK_COMB (@lem6205364 _79021) (@lem6205355 _79022)). Qed.
Lemma lem6205366 (_79021 : int) (_79022 : int) : (term957 _79021 _79022) = (term958 _79021 _79022).
Proof. exact (@lem1982792 (term93 _79021) (term182 _79022)). Qed.
Lemma lem6205367 (_79022 : int) : (term187 _79022) = (term188 _79022).
Proof. exact (@lem1982781 (term93 _79022) term123 term154). Qed.
Lemma lem6205369 (x : nat) : (real_of_num x) = (term119 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6205370 : term154 = term181.
Proof. exact (@lem6205369 term172). Qed.
Lemma lem6205372 (x : nat) : (term121 x) = (term122 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem6205373 : term123 = term124.
Proof. exact (@lem6205372 term6). Qed.
Lemma lem6205374 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem6205375 : term125 = term126.
Proof. exact (MK_COMB (@lem6205374) (@lem6205373)). Qed.
Lemma lem6205376 : term189 = term190.
Proof. exact (MK_COMB (@lem6205375) (@lem6205370)). Qed.
Lemma lem6205377 : term190 = term191.
Proof. exact (@lem1981613 term123 term154 term102 term102). Qed.
Lemma lem6205379 (m : nat) (n : nat) : (term130 m n) = (term131 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6205380 : term132 = term133.
Proof. exact (@lem6205379 term6 term6). Qed.
Lemma lem6205381 : (term134 = (BIT1 0)) = (term135 = term6).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6205382 : term135 = term6.
Proof. exact (EQ_MP (@lem6205381) (@lem940073)). Qed.
Lemma lem6205383 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6205384 : term133 = term102.
Proof. exact (MK_COMB (@lem6205383) (@lem6205382)). Qed.
Lemma lem6205385 : term132 = term102.
Proof. exact (TRANS (@lem6205380) (@lem6205384)). Qed.
Lemma lem6205387 (m : nat) (n : nat) : (term192 m n) = (term193 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem6205388 : term189 = term194.
Proof. exact (@lem6205387 term6 term172). Qed.
Lemma lem6205389 : term195 = term170.
Proof. exact (@lem996238 term170). Qed.
Lemma lem6205390 : (term195 = term170) = (term196 = term172).
Proof. exact (@lem1007663 (BIT1 0) term170 term170). Qed.
Lemma lem6205391 : term196 = term172.
Proof. exact (EQ_MP (@lem6205390) (@lem6205389)). Qed.
Lemma lem6205392 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6205393 : term197 = term154.
Proof. exact (MK_COMB (@lem6205392) (@lem6205391)). Qed.
Lemma lem6205394 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem6205395 : term194 = term198.
Proof. exact (MK_COMB (@lem6205394) (@lem6205393)). Qed.
Lemma lem6205396 : term189 = term198.
Proof. exact (TRANS (@lem6205388) (@lem6205395)). Qed.
Lemma lem6205397 : real_div = real_div.
Proof. exact (eq_refl real_div). Qed.
Lemma lem6205398 : term199 = term200.
Proof. exact (MK_COMB (@lem6205397) (@lem6205396)). Qed.
Lemma lem6205399 : term191 = term201.
Proof. exact (MK_COMB (@lem6205398) (@lem6205385)). Qed.
Lemma lem6205400 : term190 = term201.
Proof. exact (TRANS (@lem6205377) (@lem6205399)). Qed.
Lemma lem6205401 : term189 = term201.
Proof. exact (TRANS (@lem6205376) (@lem6205400)). Qed.
Lemma lem6205403 (x : real) : (term139 x) = x.
Proof. exact (EQ_MP (@lem1982628 x) (@lem1982627 x)). Qed.
Lemma lem6205404 : term201 = term198.
Proof. exact (@lem6205403 term198). Qed.
Lemma lem6205405 : term189 = term198.
Proof. exact (TRANS (@lem6205401) (@lem6205404)). Qed.
Lemma lem6205406 (_79022 : int) : (term202 _79022) = (term203 _79022).
Proof. exact (@lem1982749 term123 term90 (real_of_int _79022)). Qed.
Lemma lem6205408 (x : nat) : (real_of_num x) = (term119 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6205409 : term90 = term204.
Proof. exact (@lem6205408 term22). Qed.
Lemma lem6205411 (x : nat) : (term121 x) = (term122 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem6205412 : term123 = term124.
Proof. exact (@lem6205411 term6). Qed.
Lemma lem6205413 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem6205414 : term125 = term126.
Proof. exact (MK_COMB (@lem6205413) (@lem6205412)). Qed.
Lemma lem6205415 : term205 = term206.
Proof. exact (MK_COMB (@lem6205414) (@lem6205409)). Qed.
Lemma lem6205416 : term206 = term207.
Proof. exact (@lem1981613 term123 term90 term102 term102). Qed.
Lemma lem6205418 (m : nat) (n : nat) : (term130 m n) = (term131 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6205419 : term132 = term133.
Proof. exact (@lem6205418 term6 term6). Qed.
Lemma lem6205420 : (term134 = (BIT1 0)) = (term135 = term6).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6205421 : term135 = term6.
Proof. exact (EQ_MP (@lem6205420) (@lem940073)). Qed.
Lemma lem6205422 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6205423 : term133 = term102.
Proof. exact (MK_COMB (@lem6205422) (@lem6205421)). Qed.
Lemma lem6205424 : term132 = term102.
Proof. exact (TRANS (@lem6205419) (@lem6205423)). Qed.
Lemma lem6205426 (m : nat) (n : nat) : (term192 m n) = (term193 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem6205427 : term205 = term208.
Proof. exact (@lem6205426 term6 term22). Qed.
Lemma lem6205428 : term209 = term20.
Proof. exact (@lem996238 term20). Qed.
Lemma lem6205429 : (term209 = term20) = (term210 = term22).
Proof. exact (@lem1007663 (BIT1 0) term20 term20). Qed.
Lemma lem6205430 : term210 = term22.
Proof. exact (EQ_MP (@lem6205429) (@lem6205428)). Qed.
Lemma lem6205431 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6205432 : term211 = term90.
Proof. exact (MK_COMB (@lem6205431) (@lem6205430)). Qed.
Lemma lem6205433 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem6205434 : term208 = term212.
Proof. exact (MK_COMB (@lem6205433) (@lem6205432)). Qed.
Lemma lem6205435 : term205 = term212.
Proof. exact (TRANS (@lem6205427) (@lem6205434)). Qed.
Lemma lem6205436 : real_div = real_div.
Proof. exact (eq_refl real_div). Qed.
Lemma lem6205437 : term213 = term214.
Proof. exact (MK_COMB (@lem6205436) (@lem6205435)). Qed.
Lemma lem6205438 : term207 = term215.
Proof. exact (MK_COMB (@lem6205437) (@lem6205424)). Qed.
Lemma lem6205439 : term206 = term215.
Proof. exact (TRANS (@lem6205416) (@lem6205438)). Qed.
Lemma lem6205440 : term205 = term215.
Proof. exact (TRANS (@lem6205415) (@lem6205439)). Qed.
Lemma lem6205442 (x : real) : (term139 x) = x.
Proof. exact (EQ_MP (@lem1982628 x) (@lem1982627 x)). Qed.
Lemma lem6205443 : term215 = term212.
Proof. exact (@lem6205442 term212). Qed.
Lemma lem6205444 : term205 = term212.
Proof. exact (TRANS (@lem6205440) (@lem6205443)). Qed.
Lemma lem6205445 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem6205446 : term216 = term217.
Proof. exact (MK_COMB (@lem6205445) (@lem6205444)). Qed.
Lemma lem6205447 (_79022 : int) : (real_of_int _79022) = (real_of_int _79022).
Proof. exact (eq_refl (real_of_int _79022)). Qed.
Lemma lem6205448 (_79022 : int) : (term203 _79022) = (term218 _79022).
Proof. exact (MK_COMB (@lem6205446) (@lem6205447 _79022)). Qed.
Lemma lem6205449 (_79022 : int) : (term202 _79022) = (term218 _79022).
Proof. exact (TRANS (@lem6205406 _79022) (@lem6205448 _79022)). Qed.
Lemma lem6205450 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem6205451 (_79022 : int) : (term219 _79022) = (term220 _79022).
Proof. exact (MK_COMB (@lem6205450) (@lem6205449 _79022)). Qed.
Lemma lem6205452 (_79022 : int) : (term188 _79022) = (term221 _79022).
Proof. exact (MK_COMB (@lem6205451 _79022) (@lem6205405)). Qed.
Lemma lem6205453 (_79022 : int) : (term187 _79022) = (term221 _79022).
Proof. exact (TRANS (@lem6205367 _79022) (@lem6205452 _79022)). Qed.
Lemma lem6205454 (_79021 : int) : (term95 _79021) = (term95 _79021).
Proof. exact (eq_refl (term95 _79021)). Qed.
Lemma lem6205457 (_79021 : int) (_79022 : int) : (term958 _79021 _79022) = (term751 _79021 _79022).
Proof. exact (MK_COMB (@lem6205454 _79021) (@lem6205453 _79022)). Qed.
Lemma lem6205458 (_79021 : int) (_79022 : int) : (term957 _79021 _79022) = (term751 _79021 _79022).
Proof. exact (TRANS (@lem6205366 _79021 _79022) (@lem6205457 _79021 _79022)). Qed.
Lemma lem6205459 (_79021 : int) (_79022 : int) : (term956 _79021 _79022) = (term751 _79021 _79022).
Proof. exact (TRANS (@lem6205365 _79021 _79022) (@lem6205458 _79021 _79022)). Qed.
Lemma lem6205460 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem6205461 (_79021 : int) (_79022 : int) : (term959 _79021 _79022) = (term753 _79021 _79022).
Proof. exact (MK_COMB (@lem6205460) (@lem6205459 _79021 _79022)). Qed.
Lemma lem6205462 : term65 = term65.
Proof. exact (eq_refl term65). Qed.
Lemma lem6205463 (_79021 : int) (_79022 : int) : (term955 _79021 _79022) = (term754 _79021 _79022).
Proof. exact (MK_COMB (@lem6205461 _79021 _79022) (@lem6205462)). Qed.
Lemma lem6205464 (_79021 : int) (_79022 : int) : (term942 _79022 _79021) = (term754 _79021 _79022).
Proof. exact (TRANS (@lem6205220 _79021 _79022) (@lem6205463 _79021 _79022)). Qed.
Lemma lem6205465 (_79021 : int) (_79022 : int) : (term471 _79022 _79021) = (term498 _79021 _79022).
Proof. exact (@lem1988287 (real_of_int _79021) (term468 _79022)). Qed.
Lemma lem6205477 (_79022 : int) : (term468 _79022) = (term499 _79022).
Proof. exact (@lem1982755 (real_of_int _79022) term102 term102). Qed.
Lemma lem6205479 (x : nat) : (real_of_num x) = (term119 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6205480 : term102 = term147.
Proof. exact (@lem6205479 term6). Qed.
Lemma lem6205482 (x : nat) : (real_of_num x) = (term119 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6205483 : term102 = term147.
Proof. exact (@lem6205482 term6). Qed.
Lemma lem6205484 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem6205485 : term500 = term501.
Proof. exact (MK_COMB (@lem6205484) (@lem6205483)). Qed.
Lemma lem6205486 : term502 = term503.
Proof. exact (MK_COMB (@lem6205485) (@lem6205480)). Qed.
Lemma lem6205487 : term504.
Proof. exact (@lem1981473 term102 term102 term102 term102 term90 term102). Qed.
Lemma lem6205489 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6205490 : term156 = term157.
Proof. exact (@lem6205489 (NUMERAL 0) term6). Qed.
Lemma lem6205491 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6205492 (h1 : term158 = (BIT1 0)) : term157 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6205493 : (term158 = (BIT1 0)) = (term157 = True).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6205492 h1) (fun h1 : term157 = True => @lem6205491)). Qed.
Lemma lem6205494 : term157 = True.
Proof. exact (EQ_MP (@lem6205493) (@lem6205491)). Qed.
Lemma lem6205495 : term156 = True.
Proof. exact (TRANS (@lem6205490) (@lem6205494)). Qed.
Lemma lem6205496 : True = term156.
Proof. exact (SYM (@lem6205495)). Qed.
Lemma lem6205497 : term156.
Proof. exact (EQ_MP (@lem6205496) (@lem0)). Qed.
Lemma lem6205498 : term505.
Proof. exact (@lem6205487 (@lem6205497)). Qed.
Lemma lem6205500 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6205501 : term156 = term157.
Proof. exact (@lem6205500 (NUMERAL 0) term6). Qed.
Lemma lem6205502 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6205503 (h1 : term158 = (BIT1 0)) : term157 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6205504 : (term158 = (BIT1 0)) = (term157 = True).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6205503 h1) (fun h1 : term157 = True => @lem6205502)). Qed.
Lemma lem6205505 : term157 = True.
Proof. exact (EQ_MP (@lem6205504) (@lem6205502)). Qed.
Lemma lem6205506 : term156 = True.
Proof. exact (TRANS (@lem6205501) (@lem6205505)). Qed.
Lemma lem6205507 : True = term156.
Proof. exact (SYM (@lem6205506)). Qed.
Lemma lem6205508 : term156.
Proof. exact (EQ_MP (@lem6205507) (@lem0)). Qed.
Lemma lem6205509 : term506.
Proof. exact (@lem6205498 (@lem6205508)). Qed.
Lemma lem6205511 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6205512 : term156 = term157.
Proof. exact (@lem6205511 (NUMERAL 0) term6). Qed.
Lemma lem6205513 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6205514 (h1 : term158 = (BIT1 0)) : term157 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6205515 : (term158 = (BIT1 0)) = (term157 = True).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6205514 h1) (fun h1 : term157 = True => @lem6205513)). Qed.
Lemma lem6205516 : term157 = True.
Proof. exact (EQ_MP (@lem6205515) (@lem6205513)). Qed.
Lemma lem6205517 : term156 = True.
Proof. exact (TRANS (@lem6205512) (@lem6205516)). Qed.
Lemma lem6205518 : True = term156.
Proof. exact (SYM (@lem6205517)). Qed.
Lemma lem6205519 : term156.
Proof. exact (EQ_MP (@lem6205518) (@lem0)). Qed.
Lemma lem6205520 : term507.
Proof. exact (@lem6205509 (@lem6205519)). Qed.
Lemma lem6205522 (m : nat) (n : nat) : (term130 m n) = (term131 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6205523 : term132 = term133.
Proof. exact (@lem6205522 term6 term6). Qed.
Lemma lem6205524 : (term134 = (BIT1 0)) = (term135 = term6).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6205525 : term135 = term6.
Proof. exact (EQ_MP (@lem6205524) (@lem940073)). Qed.
Lemma lem6205526 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6205527 : term133 = term102.
Proof. exact (MK_COMB (@lem6205526) (@lem6205525)). Qed.
Lemma lem6205528 : term132 = term102.
Proof. exact (TRANS (@lem6205523) (@lem6205527)). Qed.
Lemma lem6205530 (m : nat) (n : nat) : (term130 m n) = (term131 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6205531 : term132 = term133.
Proof. exact (@lem6205530 term6 term6). Qed.
Lemma lem6205532 : (term134 = (BIT1 0)) = (term135 = term6).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6205533 : term135 = term6.
Proof. exact (EQ_MP (@lem6205532) (@lem940073)). Qed.
Lemma lem6205534 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6205535 : term133 = term102.
Proof. exact (MK_COMB (@lem6205534) (@lem6205533)). Qed.
Lemma lem6205536 : term132 = term102.
Proof. exact (TRANS (@lem6205531) (@lem6205535)). Qed.
Lemma lem6205537 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem6205538 : term508 = term500.
Proof. exact (MK_COMB (@lem6205537) (@lem6205536)). Qed.
Lemma lem6205539 : term509 = term502.
Proof. exact (MK_COMB (@lem6205538) (@lem6205528)). Qed.
Lemma lem6205540 : term502 = term510.
Proof. exact (@lem1367770 term6 term6). Qed.
Lemma lem6205541 : term19 = term20.
Proof. exact (@lem706885). Qed.
Lemma lem6205542 : (term19 = term20) = (term21 = term22).
Proof. exact (@lem1006570 (BIT1 0) (BIT1 0) term20). Qed.
Lemma lem6205543 : term21 = term22.
Proof. exact (EQ_MP (@lem6205542) (@lem6205541)). Qed.
Lemma lem6205544 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6205545 : term510 = term90.
Proof. exact (MK_COMB (@lem6205544) (@lem6205543)). Qed.
Lemma lem6205546 : term502 = term90.
Proof. exact (TRANS (@lem6205540) (@lem6205545)). Qed.
Lemma lem6205547 : term509 = term90.
Proof. exact (TRANS (@lem6205539) (@lem6205546)). Qed.
Lemma lem6205548 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem6205549 : term511 = term92.
Proof. exact (MK_COMB (@lem6205548) (@lem6205547)). Qed.
Lemma lem6205550 : term102 = term102.
Proof. exact (eq_refl term102). Qed.
Lemma lem6205551 : term512 = term237.
Proof. exact (MK_COMB (@lem6205549) (@lem6205550)). Qed.
Lemma lem6205553 (m : nat) (n : nat) : (term130 m n) = (term131 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6205554 : term237 = term236.
Proof. exact (@lem6205553 term22 term6). Qed.
Lemma lem6205555 : term35 = term20.
Proof. exact (@lem996237 term20). Qed.
Lemma lem6205556 : (term35 = term20) = (term36 = term22).
Proof. exact (@lem1007663 term20 (BIT1 0) term20). Qed.
Lemma lem6205557 : term36 = term22.
Proof. exact (EQ_MP (@lem6205556) (@lem6205555)). Qed.
Lemma lem6205558 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6205559 : term236 = term90.
Proof. exact (MK_COMB (@lem6205558) (@lem6205557)). Qed.
Lemma lem6205560 : term237 = term90.
Proof. exact (TRANS (@lem6205554) (@lem6205559)). Qed.
Lemma lem6205561 : term512 = term90.
Proof. exact (TRANS (@lem6205551) (@lem6205560)). Qed.
Lemma lem6205563 (m : nat) (n : nat) : (term130 m n) = (term131 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6205564 : term132 = term133.
Proof. exact (@lem6205563 term6 term6). Qed.
Lemma lem6205565 : (term134 = (BIT1 0)) = (term135 = term6).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6205566 : term135 = term6.
Proof. exact (EQ_MP (@lem6205565) (@lem940073)). Qed.
Lemma lem6205567 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6205568 : term133 = term102.
Proof. exact (MK_COMB (@lem6205567) (@lem6205566)). Qed.
Lemma lem6205569 : term132 = term102.
Proof. exact (TRANS (@lem6205564) (@lem6205568)). Qed.
Lemma lem6205570 : term92 = term92.
Proof. exact (eq_refl term92). Qed.
Lemma lem6205571 : term513 = term237.
Proof. exact (MK_COMB (@lem6205570) (@lem6205569)). Qed.
Lemma lem6205573 (m : nat) (n : nat) : (term130 m n) = (term131 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6205574 : term237 = term236.
Proof. exact (@lem6205573 term22 term6). Qed.
Lemma lem6205575 : term35 = term20.
Proof. exact (@lem996237 term20). Qed.
Lemma lem6205576 : (term35 = term20) = (term36 = term22).
Proof. exact (@lem1007663 term20 (BIT1 0) term20). Qed.
Lemma lem6205577 : term36 = term22.
Proof. exact (EQ_MP (@lem6205576) (@lem6205575)). Qed.
Lemma lem6205578 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6205579 : term236 = term90.
Proof. exact (MK_COMB (@lem6205578) (@lem6205577)). Qed.
Lemma lem6205580 : term237 = term90.
Proof. exact (TRANS (@lem6205574) (@lem6205579)). Qed.
Lemma lem6205581 : term513 = term90.
Proof. exact (TRANS (@lem6205571) (@lem6205580)). Qed.
Lemma lem6205582 : term90 = term513.
Proof. exact (SYM (@lem6205581)). Qed.
Lemma lem6205583 : term512 = term513.
Proof. exact (TRANS (@lem6205561) (@lem6205582)). Qed.
Lemma lem6205584 : term503 = term204.
Proof. exact (@lem6205520 (@lem6205583)). Qed.
Lemma lem6205585 : term502 = term204.
Proof. exact (TRANS (@lem6205486) (@lem6205584)). Qed.
Lemma lem6205587 (x : real) : (term139 x) = x.
Proof. exact (EQ_MP (@lem1981475 x) (@lem1981474 x)). Qed.
Lemma lem6205588 : term204 = term90.
Proof. exact (@lem6205587 term90). Qed.
Lemma lem6205589 : term502 = term90.
Proof. exact (TRANS (@lem6205585) (@lem6205588)). Qed.
Lemma lem6205590 (_79022 : int) : (term140 _79022) = (term140 _79022).
Proof. exact (eq_refl (term140 _79022)). Qed.
Lemma lem6205591 (_79022 : int) : (term499 _79022) = (term514 _79022).
Proof. exact (MK_COMB (@lem6205590 _79022) (@lem6205589)). Qed.
Lemma lem6205593 (_79022 : int) : (term468 _79022) = (term514 _79022).
Proof. exact (TRANS (@lem6205477 _79022) (@lem6205591 _79022)). Qed.
Lemma lem6205596 (_79021 : int) : (term515 _79021) = (term515 _79021).
Proof. exact (eq_refl (term515 _79021)). Qed.
Lemma lem6205597 (_79021 : int) (_79022 : int) : (term516 _79021 _79022) = (term517 _79021 _79022).
Proof. exact (MK_COMB (@lem6205596 _79021) (@lem6205593 _79022)). Qed.
Lemma lem6205598 (_79021 : int) (_79022 : int) : (term517 _79021 _79022) = (term518 _79021 _79022).
Proof. exact (@lem1982792 (real_of_int _79021) (term514 _79022)). Qed.
Lemma lem6205599 (_79022 : int) : (term519 _79022) = (term520 _79022).
Proof. exact (@lem1982781 (real_of_int _79022) term123 term90). Qed.
Lemma lem6205601 (x : nat) : (real_of_num x) = (term119 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6205602 : term90 = term204.
Proof. exact (@lem6205601 term22). Qed.
Lemma lem6205604 (x : nat) : (term121 x) = (term122 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem6205605 : term123 = term124.
Proof. exact (@lem6205604 term6). Qed.
Lemma lem6205606 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem6205607 : term125 = term126.
Proof. exact (MK_COMB (@lem6205606) (@lem6205605)). Qed.
Lemma lem6205608 : term205 = term206.
Proof. exact (MK_COMB (@lem6205607) (@lem6205602)). Qed.
Lemma lem6205609 : term206 = term207.
Proof. exact (@lem1981613 term123 term90 term102 term102). Qed.
Lemma lem6205611 (m : nat) (n : nat) : (term130 m n) = (term131 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6205612 : term132 = term133.
Proof. exact (@lem6205611 term6 term6). Qed.
Lemma lem6205613 : (term134 = (BIT1 0)) = (term135 = term6).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6205614 : term135 = term6.
Proof. exact (EQ_MP (@lem6205613) (@lem940073)). Qed.
Lemma lem6205615 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6205616 : term133 = term102.
Proof. exact (MK_COMB (@lem6205615) (@lem6205614)). Qed.
Lemma lem6205617 : term132 = term102.
Proof. exact (TRANS (@lem6205612) (@lem6205616)). Qed.
Lemma lem6205619 (m : nat) (n : nat) : (term192 m n) = (term193 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem6205620 : term205 = term208.
Proof. exact (@lem6205619 term6 term22). Qed.
Lemma lem6205621 : term209 = term20.
Proof. exact (@lem996238 term20). Qed.
Lemma lem6205622 : (term209 = term20) = (term210 = term22).
Proof. exact (@lem1007663 (BIT1 0) term20 term20). Qed.
Lemma lem6205623 : term210 = term22.
Proof. exact (EQ_MP (@lem6205622) (@lem6205621)). Qed.
Lemma lem6205624 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6205625 : term211 = term90.
Proof. exact (MK_COMB (@lem6205624) (@lem6205623)). Qed.
Lemma lem6205626 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem6205627 : term208 = term212.
Proof. exact (MK_COMB (@lem6205626) (@lem6205625)). Qed.
Lemma lem6205628 : term205 = term212.
Proof. exact (TRANS (@lem6205620) (@lem6205627)). Qed.
Lemma lem6205629 : real_div = real_div.
Proof. exact (eq_refl real_div). Qed.
Lemma lem6205630 : term213 = term214.
Proof. exact (MK_COMB (@lem6205629) (@lem6205628)). Qed.
Lemma lem6205631 : term207 = term215.
Proof. exact (MK_COMB (@lem6205630) (@lem6205617)). Qed.
Lemma lem6205632 : term206 = term215.
Proof. exact (TRANS (@lem6205609) (@lem6205631)). Qed.
Lemma lem6205633 : term205 = term215.
Proof. exact (TRANS (@lem6205608) (@lem6205632)). Qed.
Lemma lem6205635 (x : real) : (term139 x) = x.
Proof. exact (EQ_MP (@lem1982628 x) (@lem1982627 x)). Qed.
Lemma lem6205636 : term215 = term212.
Proof. exact (@lem6205635 term212). Qed.
Lemma lem6205637 : term205 = term212.
Proof. exact (TRANS (@lem6205633) (@lem6205636)). Qed.
Lemma lem6205640 (_79022 : int) : (term521 _79022) = (term521 _79022).
Proof. exact (eq_refl (term521 _79022)). Qed.
Lemma lem6205641 (_79022 : int) : (term520 _79022) = (term522 _79022).
Proof. exact (MK_COMB (@lem6205640 _79022) (@lem6205637)). Qed.
Lemma lem6205642 (_79022 : int) : (term519 _79022) = (term522 _79022).
Proof. exact (TRANS (@lem6205599 _79022) (@lem6205641 _79022)). Qed.
Lemma lem6205643 (_79021 : int) : (term140 _79021) = (term140 _79021).
Proof. exact (eq_refl (term140 _79021)). Qed.
Lemma lem6205646 (_79021 : int) (_79022 : int) : (term518 _79021 _79022) = (term523 _79021 _79022).
Proof. exact (MK_COMB (@lem6205643 _79021) (@lem6205642 _79022)). Qed.
Lemma lem6205647 (_79021 : int) (_79022 : int) : (term517 _79021 _79022) = (term523 _79021 _79022).
Proof. exact (TRANS (@lem6205598 _79021 _79022) (@lem6205646 _79021 _79022)). Qed.
Lemma lem6205648 (_79021 : int) (_79022 : int) : (term516 _79021 _79022) = (term523 _79021 _79022).
Proof. exact (TRANS (@lem6205597 _79021 _79022) (@lem6205647 _79021 _79022)). Qed.
Lemma lem6205649 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem6205650 (_79021 : int) (_79022 : int) : (term524 _79021 _79022) = (term525 _79021 _79022).
Proof. exact (MK_COMB (@lem6205649) (@lem6205648 _79021 _79022)). Qed.
Lemma lem6205651 : term65 = term65.
Proof. exact (eq_refl term65). Qed.
Lemma lem6205652 (_79021 : int) (_79022 : int) : (term498 _79021 _79022) = (term526 _79021 _79022).
Proof. exact (MK_COMB (@lem6205650 _79021 _79022) (@lem6205651)). Qed.
Lemma lem6205653 (_79021 : int) (_79022 : int) : (term471 _79022 _79021) = (term526 _79021 _79022).
Proof. exact (TRANS (@lem6205465 _79021 _79022) (@lem6205652 _79021 _79022)). Qed.
Lemma lem6205654 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6205655 (_79021 : int) (_79022 : int) : (term944 _79022 _79021) = (term960 _79021 _79022).
Proof. exact (MK_COMB (@lem6205654) (@lem6205464 _79021 _79022)). Qed.
Lemma lem6205656 (_79021 : int) (_79022 : int) : (term945 _79022 _79021) = (term961 _79021 _79022).
Proof. exact (MK_COMB (@lem6205655 _79021 _79022) (@lem6205653 _79021 _79022)). Qed.
Lemma lem6205657 (_79022 : int) (_79021 : int) : (term947 _79021 _79022) = (term962 _79022 _79021).
Proof. exact (@lem1988287 (term98 _79022) (term93 _79021)). Qed.
Lemma lem6205681 (_79022 : int) (_79021 : int) : (term963 _79022 _79021) = (term964 _79022 _79021).
Proof. exact (@lem1982792 (term98 _79022) (term93 _79021)). Qed.
Lemma lem6205682 (_79021 : int) : (term202 _79021) = (term203 _79021).
Proof. exact (@lem1982749 term123 term90 (real_of_int _79021)). Qed.
Lemma lem6205684 (x : nat) : (real_of_num x) = (term119 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6205685 : term90 = term204.
Proof. exact (@lem6205684 term22). Qed.
Lemma lem6205687 (x : nat) : (term121 x) = (term122 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem6205688 : term123 = term124.
Proof. exact (@lem6205687 term6). Qed.
Lemma lem6205689 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem6205690 : term125 = term126.
Proof. exact (MK_COMB (@lem6205689) (@lem6205688)). Qed.
Lemma lem6205691 : term205 = term206.
Proof. exact (MK_COMB (@lem6205690) (@lem6205685)). Qed.
Lemma lem6205692 : term206 = term207.
Proof. exact (@lem1981613 term123 term90 term102 term102). Qed.
Lemma lem6205694 (m : nat) (n : nat) : (term130 m n) = (term131 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6205695 : term132 = term133.
Proof. exact (@lem6205694 term6 term6). Qed.
Lemma lem6205696 : (term134 = (BIT1 0)) = (term135 = term6).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6205697 : term135 = term6.
Proof. exact (EQ_MP (@lem6205696) (@lem940073)). Qed.
Lemma lem6205698 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6205699 : term133 = term102.
Proof. exact (MK_COMB (@lem6205698) (@lem6205697)). Qed.
Lemma lem6205700 : term132 = term102.
Proof. exact (TRANS (@lem6205695) (@lem6205699)). Qed.
Lemma lem6205702 (m : nat) (n : nat) : (term192 m n) = (term193 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem6205703 : term205 = term208.
Proof. exact (@lem6205702 term6 term22). Qed.
Lemma lem6205704 : term209 = term20.
Proof. exact (@lem996238 term20). Qed.
Lemma lem6205705 : (term209 = term20) = (term210 = term22).
Proof. exact (@lem1007663 (BIT1 0) term20 term20). Qed.
Lemma lem6205706 : term210 = term22.
Proof. exact (EQ_MP (@lem6205705) (@lem6205704)). Qed.
Lemma lem6205707 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6205708 : term211 = term90.
Proof. exact (MK_COMB (@lem6205707) (@lem6205706)). Qed.
Lemma lem6205709 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem6205710 : term208 = term212.
Proof. exact (MK_COMB (@lem6205709) (@lem6205708)). Qed.
Lemma lem6205711 : term205 = term212.
Proof. exact (TRANS (@lem6205703) (@lem6205710)). Qed.
Lemma lem6205712 : real_div = real_div.
Proof. exact (eq_refl real_div). Qed.
Lemma lem6205713 : term213 = term214.
Proof. exact (MK_COMB (@lem6205712) (@lem6205711)). Qed.
Lemma lem6205714 : term207 = term215.
Proof. exact (MK_COMB (@lem6205713) (@lem6205700)). Qed.
Lemma lem6205715 : term206 = term215.
Proof. exact (TRANS (@lem6205692) (@lem6205714)). Qed.
Lemma lem6205716 : term205 = term215.
Proof. exact (TRANS (@lem6205691) (@lem6205715)). Qed.
Lemma lem6205718 (x : real) : (term139 x) = x.
Proof. exact (EQ_MP (@lem1982628 x) (@lem1982627 x)). Qed.
Lemma lem6205719 : term215 = term212.
Proof. exact (@lem6205718 term212). Qed.
Lemma lem6205720 : term205 = term212.
Proof. exact (TRANS (@lem6205716) (@lem6205719)). Qed.
Lemma lem6205721 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem6205722 : term216 = term217.
Proof. exact (MK_COMB (@lem6205721) (@lem6205720)). Qed.
Lemma lem6205723 (_79021 : int) : (real_of_int _79021) = (real_of_int _79021).
Proof. exact (eq_refl (real_of_int _79021)). Qed.
Lemma lem6205724 (_79021 : int) : (term203 _79021) = (term218 _79021).
Proof. exact (MK_COMB (@lem6205722) (@lem6205723 _79021)). Qed.
Lemma lem6205725 (_79021 : int) : (term202 _79021) = (term218 _79021).
Proof. exact (TRANS (@lem6205682 _79021) (@lem6205724 _79021)). Qed.
Lemma lem6205726 (_79022 : int) : (term100 _79022) = (term100 _79022).
Proof. exact (eq_refl (term100 _79022)). Qed.
Lemma lem6205727 (_79022 : int) (_79021 : int) : (term964 _79022 _79021) = (term965 _79022 _79021).
Proof. exact (MK_COMB (@lem6205726 _79022) (@lem6205725 _79021)). Qed.
Lemma lem6205728 (_79021 : int) (_79022 : int) : (term965 _79022 _79021) = (term966 _79021 _79022).
Proof. exact (@lem1982761 (term218 _79021) (term98 _79022)). Qed.
Lemma lem6205729 (_79021 : int) (_79022 : int) : (term964 _79022 _79021) = (term966 _79021 _79022).
Proof. exact (TRANS (@lem6205727 _79022 _79021) (@lem6205728 _79021 _79022)). Qed.
Lemma lem6205731 (_79021 : int) (_79022 : int) : (term963 _79022 _79021) = (term966 _79021 _79022).
Proof. exact (TRANS (@lem6205681 _79022 _79021) (@lem6205729 _79021 _79022)). Qed.
Lemma lem6205732 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem6205733 (_79021 : int) (_79022 : int) : (term967 _79022 _79021) = (term968 _79021 _79022).
Proof. exact (MK_COMB (@lem6205732) (@lem6205731 _79021 _79022)). Qed.
Lemma lem6205734 : term65 = term65.
Proof. exact (eq_refl term65). Qed.
Lemma lem6205735 (_79021 : int) (_79022 : int) : (term962 _79022 _79021) = (term969 _79021 _79022).
Proof. exact (MK_COMB (@lem6205733 _79021 _79022) (@lem6205734)). Qed.
Lemma lem6205736 (_79021 : int) (_79022 : int) : (term947 _79021 _79022) = (term969 _79021 _79022).
Proof. exact (TRANS (@lem6205657 _79022 _79021) (@lem6205735 _79021 _79022)). Qed.
Lemma lem6205737 (_79022 : int) (_79021 : int) : (term481 _79021 _79022) = (term537 _79022 _79021).
Proof. exact (@lem1988287 (term465 _79022) (real_of_int _79021)). Qed.
Lemma lem6205749 (_79022 : int) (_79021 : int) : (term538 _79022 _79021) = (term539 _79022 _79021).
Proof. exact (@lem1982792 (term465 _79022) (real_of_int _79021)). Qed.
Lemma lem6205754 (_79021 : int) (_79022 : int) : (term539 _79022 _79021) = (term540 _79021 _79022).
Proof. exact (@lem1982761 (term541 _79021) (term465 _79022)). Qed.
Lemma lem6205756 (_79021 : int) (_79022 : int) : (term538 _79022 _79021) = (term540 _79021 _79022).
Proof. exact (TRANS (@lem6205749 _79022 _79021) (@lem6205754 _79021 _79022)). Qed.
Lemma lem6205757 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem6205758 (_79021 : int) (_79022 : int) : (term542 _79022 _79021) = (term543 _79021 _79022).
Proof. exact (MK_COMB (@lem6205757) (@lem6205756 _79021 _79022)). Qed.
Lemma lem6205759 : term65 = term65.
Proof. exact (eq_refl term65). Qed.
Lemma lem6205760 (_79021 : int) (_79022 : int) : (term537 _79022 _79021) = (term544 _79021 _79022).
Proof. exact (MK_COMB (@lem6205758 _79021 _79022) (@lem6205759)). Qed.
Lemma lem6205761 (_79021 : int) (_79022 : int) : (term481 _79021 _79022) = (term544 _79021 _79022).
Proof. exact (TRANS (@lem6205737 _79022 _79021) (@lem6205760 _79021 _79022)). Qed.
Lemma lem6205762 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6205763 (_79021 : int) (_79022 : int) : (term948 _79021 _79022) = (term970 _79021 _79022).
Proof. exact (MK_COMB (@lem6205762) (@lem6205736 _79021 _79022)). Qed.
Lemma lem6205764 (_79021 : int) (_79022 : int) : (term949 _79021 _79022) = (term971 _79021 _79022).
Proof. exact (MK_COMB (@lem6205763 _79021 _79022) (@lem6205761 _79021 _79022)). Qed.
Lemma lem6205765 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6205766 (_79021 : int) (_79022 : int) : (term950 _79022 _79021) = (term972 _79021 _79022).
Proof. exact (MK_COMB (@lem6205765) (@lem6205656 _79021 _79022)). Qed.
Lemma lem6205767 (_79021 : int) (_79022 : int) : (term951 _79021 _79022) = (term973 _79021 _79022).
Proof. exact (MK_COMB (@lem6205766 _79021 _79022) (@lem6205764 _79021 _79022)). Qed.
Lemma lem6205768 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6205769 (_79022 : int) : (term111 _79022) = (term271 _79022).
Proof. exact (MK_COMB (@lem6205768) (@lem6205219 _79022)). Qed.
Lemma lem6205770 (_79021 : int) (_79022 : int) : (term952 _79021 _79022) = (term974 _79021 _79022).
Proof. exact (MK_COMB (@lem6205769 _79022) (@lem6205767 _79021 _79022)). Qed.
Lemma lem6205771 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6205772 (_79021 : int) : (term111 _79021) = (term271 _79021).
Proof. exact (MK_COMB (@lem6205771) (@lem6205171 _79021)). Qed.
Lemma lem6205773 (_79021 : int) (_79022 : int) : (term953 _79021 _79022) = (term975 _79021 _79022).
Proof. exact (MK_COMB (@lem6205772 _79021) (@lem6205770 _79021 _79022)). Qed.
Lemma lem6205780 (_79021 : int) (_79022 : int) : (term954 _79021 _79022) = (term975 _79021 _79022).
Proof. exact (TRANS (@lem6205123 _79021 _79022) (@lem6205773 _79021 _79022)). Qed.
Lemma lem6205794 (_79021 : int) (_79022 : int) : (term973 _79021 _79022) = (term976 _79021 _79022).
Proof. exact (@lem19158 (term969 _79021 _79022) (term961 _79021 _79022) (term544 _79021 _79022)). Qed.
Lemma lem6205801 (_79021 : int) (_79022 : int) : (term977 _79021 _79022) = (term978 _79021 _79022).
Proof. exact (@lem19367 (term754 _79021 _79022) (term526 _79021 _79022) (term544 _79021 _79022)). Qed.
Lemma lem6205808 (_79021 : int) (_79022 : int) : (term979 _79021 _79022) = (term980 _79021 _79022).
Proof. exact (@lem19367 (term754 _79021 _79022) (term526 _79021 _79022) (term969 _79021 _79022)). Qed.
Lemma lem6205809 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6205810 (_79021 : int) (_79022 : int) : (term981 _79021 _79022) = (term982 _79021 _79022).
Proof. exact (MK_COMB (@lem6205809) (@lem6205808 _79021 _79022)). Qed.
Lemma lem6205811 (_79021 : int) (_79022 : int) : (term976 _79021 _79022) = (term983 _79021 _79022).
Proof. exact (MK_COMB (@lem6205810 _79021 _79022) (@lem6205801 _79021 _79022)). Qed.
Lemma lem6205813 (_79021 : int) (_79022 : int) : (term973 _79021 _79022) = (term983 _79021 _79022).
Proof. exact (TRANS (@lem6205794 _79021 _79022) (@lem6205811 _79021 _79022)). Qed.
Lemma lem6205816 (_79022 : int) : (term271 _79022) = (term271 _79022).
Proof. exact (eq_refl (term271 _79022)). Qed.
Lemma lem6205817 (_79021 : int) (_79022 : int) : (term974 _79021 _79022) = (term984 _79021 _79022).
Proof. exact (MK_COMB (@lem6205816 _79022) (@lem6205813 _79021 _79022)). Qed.
Lemma lem6205818 (_79021 : int) (_79022 : int) : (term984 _79021 _79022) = (term985 _79021 _79022).
Proof. exact (@lem19158 (term980 _79021 _79022) (term144 _79022) (term978 _79021 _79022)). Qed.
Lemma lem6205825 (_79021 : int) (_79022 : int) : (term986 _79021 _79022) = (term987 _79021 _79022).
Proof. exact (@lem19158 (term988 _79021 _79022) (term144 _79022) (term564 _79021 _79022)). Qed.
Lemma lem6205832 (_79021 : int) (_79022 : int) : (term989 _79021 _79022) = (term990 _79021 _79022).
Proof. exact (@lem19158 (term991 _79021 _79022) (term144 _79022) (term992 _79021 _79022)). Qed.
Lemma lem6205833 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6205834 (_79021 : int) (_79022 : int) : (term993 _79021 _79022) = (term994 _79021 _79022).
Proof. exact (MK_COMB (@lem6205833) (@lem6205832 _79021 _79022)). Qed.
Lemma lem6205835 (_79021 : int) (_79022 : int) : (term985 _79021 _79022) = (term995 _79021 _79022).
Proof. exact (MK_COMB (@lem6205834 _79021 _79022) (@lem6205825 _79021 _79022)). Qed.
Lemma lem6205836 (_79021 : int) (_79022 : int) : (term984 _79021 _79022) = (term995 _79021 _79022).
Proof. exact (TRANS (@lem6205818 _79021 _79022) (@lem6205835 _79021 _79022)). Qed.
Lemma lem6205837 (_79021 : int) (_79022 : int) : (term974 _79021 _79022) = (term995 _79021 _79022).
Proof. exact (TRANS (@lem6205817 _79021 _79022) (@lem6205836 _79021 _79022)). Qed.
Lemma lem6205840 (_79021 : int) : (term271 _79021) = (term271 _79021).
Proof. exact (eq_refl (term271 _79021)). Qed.
Lemma lem6205841 (_79021 : int) (_79022 : int) : (term975 _79021 _79022) = (term996 _79021 _79022).
Proof. exact (MK_COMB (@lem6205840 _79021) (@lem6205837 _79021 _79022)). Qed.
Lemma lem6205842 (_79021 : int) (_79022 : int) : (term996 _79021 _79022) = (term997 _79021 _79022).
Proof. exact (@lem19158 (term990 _79021 _79022) (term144 _79021) (term987 _79021 _79022)). Qed.
Lemma lem6205849 (_79021 : int) (_79022 : int) : (term998 _79021 _79022) = (term999 _79021 _79022).
Proof. exact (@lem19158 (term1000 _79021 _79022) (term144 _79021) (term577 _79021 _79022)). Qed.
Lemma lem6205856 (_79021 : int) (_79022 : int) : (term1001 _79021 _79022) = (term1002 _79021 _79022).
Proof. exact (@lem19158 (term1003 _79021 _79022) (term144 _79021) (term1004 _79021 _79022)). Qed.
Lemma lem6205857 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6205858 (_79021 : int) (_79022 : int) : (term1005 _79021 _79022) = (term1006 _79021 _79022).
Proof. exact (MK_COMB (@lem6205857) (@lem6205856 _79021 _79022)). Qed.
Lemma lem6205859 (_79021 : int) (_79022 : int) : (term997 _79021 _79022) = (term1007 _79021 _79022).
Proof. exact (MK_COMB (@lem6205858 _79021 _79022) (@lem6205849 _79021 _79022)). Qed.
Lemma lem6205860 (_79021 : int) (_79022 : int) : (term996 _79021 _79022) = (term1007 _79021 _79022).
Proof. exact (TRANS (@lem6205842 _79021 _79022) (@lem6205859 _79021 _79022)). Qed.
Lemma lem6205861 (_79021 : int) (_79022 : int) : (term975 _79021 _79022) = (term1007 _79021 _79022).
Proof. exact (TRANS (@lem6205841 _79021 _79022) (@lem6205860 _79021 _79022)). Qed.
Lemma lem6205862 (_79021 : int) (_79022 : int) : (term954 _79021 _79022) = (term1007 _79021 _79022).
Proof. exact (TRANS (@lem6205780 _79021 _79022) (@lem6205861 _79021 _79022)). Qed.
Lemma lem6205884 (_79021 : int) (_79022 : int) (h1 : term1007 _79021 _79022) : term1007 _79021 _79022.
Proof. exact (h1). Qed.
Lemma lem6205885 (_79021 : int) (_79022 : int) (h1 : term1002 _79021 _79022) : term1002 _79021 _79022.
Proof. exact (h1). Qed.
Lemma lem6205886 (_79021 : int) (_79022 : int) (h1 : term1008 _79021 _79022) : term1008 _79021 _79022.
Proof. exact (h1). Qed.
Lemma lem6205887 (_79021 : int) (_79022 : int) (h1 : term1008 _79021 _79022) : term1003 _79021 _79022.
Proof. exact (proj2 (@lem6205886 _79021 _79022 h1)). Qed.
Lemma lem6205889 (_79021 : int) (_79022 : int) (h1 : term1008 _79021 _79022) : term991 _79021 _79022.
Proof. exact (proj2 (@lem6205887 _79021 _79022 h1)). Qed.
Lemma lem6205891 (_79021 : int) (_79022 : int) (h1 : term1008 _79021 _79022) : term969 _79021 _79022.
Proof. exact (proj2 (@lem6205889 _79021 _79022 h1)). Qed.
Lemma lem6205892 (_79021 : int) (_79022 : int) (h1 : term1008 _79021 _79022) : term754 _79021 _79022.
Proof. exact (proj1 (@lem6205889 _79021 _79022 h1)). Qed.
Lemma lem6205894 (y : real) (x : real) : (real_gt x y) = (real_lt y x).
Proof. exact (EQ_MP (@lem1980266 y x) (@lem1980265 y x)). Qed.
Lemma lem6205895 : term586 = term587.
Proof. exact (@lem6205894 term65 term90). Qed.
Lemma lem6205897 (x : nat) : (real_of_num x) = (term119 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6205898 : term90 = term204.
Proof. exact (@lem6205897 term22). Qed.
Lemma lem6205900 (x : nat) : (real_of_num x) = (term119 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6205901 : term65 = term120.
Proof. exact (@lem6205900 (NUMERAL 0)). Qed.
Lemma lem6205902 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem6205903 : term588 = term589.
Proof. exact (MK_COMB (@lem6205902) (@lem6205901)). Qed.
Lemma lem6205904 : term587 = term590.
Proof. exact (MK_COMB (@lem6205903) (@lem6205898)). Qed.
Lemma lem6205905 : term591.
Proof. exact (@lem1980255 term65 term102 term90 term102). Qed.
Lemma lem6205907 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6205908 : term156 = term157.
Proof. exact (@lem6205907 (NUMERAL 0) term6). Qed.
Lemma lem6205909 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6205910 (h1 : term158 = (BIT1 0)) : term157 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6205911 : (term158 = (BIT1 0)) = (term157 = True).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6205910 h1) (fun h1 : term157 = True => @lem6205909)). Qed.
Lemma lem6205912 : term157 = True.
Proof. exact (EQ_MP (@lem6205911) (@lem6205909)). Qed.
Lemma lem6205913 : term156 = True.
Proof. exact (TRANS (@lem6205908) (@lem6205912)). Qed.
Lemma lem6205914 : True = term156.
Proof. exact (SYM (@lem6205913)). Qed.
Lemma lem6205915 : term156.
Proof. exact (EQ_MP (@lem6205914) (@lem0)). Qed.
Lemma lem6205916 : term592.
Proof. exact (@lem6205905 (@lem6205915)). Qed.
Lemma lem6205918 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6205919 : term156 = term157.
Proof. exact (@lem6205918 (NUMERAL 0) term6). Qed.
Lemma lem6205920 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6205921 (h1 : term158 = (BIT1 0)) : term157 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6205922 : (term158 = (BIT1 0)) = (term157 = True).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6205921 h1) (fun h1 : term157 = True => @lem6205920)). Qed.
Lemma lem6205923 : term157 = True.
Proof. exact (EQ_MP (@lem6205922) (@lem6205920)). Qed.
Lemma lem6205924 : term156 = True.
Proof. exact (TRANS (@lem6205919) (@lem6205923)). Qed.
Lemma lem6205925 : True = term156.
Proof. exact (SYM (@lem6205924)). Qed.
Lemma lem6205926 : term156.
Proof. exact (EQ_MP (@lem6205925) (@lem0)). Qed.
Lemma lem6205927 : term590 = term593.
Proof. exact (@lem6205916 (@lem6205926)). Qed.
Lemma lem6205929 (m : nat) (n : nat) : (term130 m n) = (term131 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6205930 : term237 = term236.
Proof. exact (@lem6205929 term22 term6). Qed.
Lemma lem6205931 : term35 = term20.
Proof. exact (@lem996237 term20). Qed.
Lemma lem6205932 : (term35 = term20) = (term36 = term22).
Proof. exact (@lem1007663 term20 (BIT1 0) term20). Qed.
Lemma lem6205933 : term36 = term22.
Proof. exact (EQ_MP (@lem6205932) (@lem6205931)). Qed.
Lemma lem6205934 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6205935 : term236 = term90.
Proof. exact (MK_COMB (@lem6205934) (@lem6205933)). Qed.
Lemma lem6205936 : term237 = term90.
Proof. exact (TRANS (@lem6205930) (@lem6205935)). Qed.
Lemma lem6205938 (x : nat) : (term245 x) = term65.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem6205939 : term244 = term65.
Proof. exact (@lem6205938 term6). Qed.
Lemma lem6205940 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem6205941 : term594 = term588.
Proof. exact (MK_COMB (@lem6205940) (@lem6205939)). Qed.
Lemma lem6205942 : term593 = term587.
Proof. exact (MK_COMB (@lem6205941) (@lem6205936)). Qed.
Lemma lem6205944 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6205945 : term587 = term595.
Proof. exact (@lem6205944 (NUMERAL 0) term22). Qed.
Lemma lem6205946 : term596 = term20.
Proof. exact (@lem912803). Qed.
Lemma lem6205947 (h1 : term596 = term20) : term595 = True.
Proof. exact (@lem1009824 (BIT1 0) 0 term20 h1). Qed.
Lemma lem6205948 : (term596 = term20) = (term595 = True).
Proof. exact (prop_ext (fun h1 : term596 = term20 => @lem6205947 h1) (fun h1 : term595 = True => @lem6205946)). Qed.
Lemma lem6205949 : term595 = True.
Proof. exact (EQ_MP (@lem6205948) (@lem6205946)). Qed.
Lemma lem6205950 : term587 = True.
Proof. exact (TRANS (@lem6205945) (@lem6205949)). Qed.
Lemma lem6205951 : term593 = True.
Proof. exact (TRANS (@lem6205942) (@lem6205950)). Qed.
Lemma lem6205952 : term590 = True.
Proof. exact (TRANS (@lem6205927) (@lem6205951)). Qed.
Lemma lem6205953 : term587 = True.
Proof. exact (TRANS (@lem6205904) (@lem6205952)). Qed.
Lemma lem6205954 : term586 = True.
Proof. exact (TRANS (@lem6205895) (@lem6205953)). Qed.
Lemma lem6205955 : True = term586.
Proof. exact (SYM (@lem6205954)). Qed.
Lemma lem6205956 : term586.
Proof. exact (EQ_MP (@lem6205955) (@lem0)). Qed.
Lemma lem6205957 (_79021 : int) (_79022 : int) (h1 : term1008 _79021 _79022) : term1009 _79021 _79022.
Proof. exact (conj (@lem6205956) (@lem6205892 _79021 _79022 h1)). Qed.
Lemma lem6205959 (x : real) (y : real) : term598 x y.
Proof. exact (proj1 (@lem1988332 x y)). Qed.
Lemma lem6205960 (_79021 : int) (_79022 : int) : term1010 _79021 _79022.
Proof. exact (@lem6205959 term90 (term751 _79021 _79022)). Qed.
Lemma lem6205961 (_79021 : int) (_79022 : int) (h1 : term1008 _79021 _79022) : term1011 _79021 _79022.
Proof. exact (@lem6205960 _79021 _79022 (@lem6205957 _79021 _79022 h1)). Qed.
Lemma lem6205962 (_79021 : int) (_79022 : int) : (term1012 _79021 _79022) = (term1013 _79021 _79022).
Proof. exact (@lem1982781 (term93 _79021) term90 (term221 _79022)). Qed.
Lemma lem6205963 (_79022 : int) : (term1014 _79022) = (term1015 _79022).
Proof. exact (@lem1982781 (term218 _79022) term90 term198). Qed.
Lemma lem6205965 (x : nat) : (term121 x) = (term122 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem6205966 : term198 = term201.
Proof. exact (@lem6205965 term172). Qed.
Lemma lem6205968 (x : nat) : (real_of_num x) = (term119 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6205969 : term90 = term204.
Proof. exact (@lem6205968 term22). Qed.
Lemma lem6205970 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem6205971 : term92 = term605.
Proof. exact (MK_COMB (@lem6205970) (@lem6205969)). Qed.
Lemma lem6205972 : term1016 = term1017.
Proof. exact (MK_COMB (@lem6205971) (@lem6205966)). Qed.
Lemma lem6205973 : term1017 = term1018.
Proof. exact (@lem1981613 term90 term198 term102 term102). Qed.
Lemma lem6205975 (m : nat) (n : nat) : (term130 m n) = (term131 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6205976 : term132 = term133.
Proof. exact (@lem6205975 term6 term6). Qed.
Lemma lem6205977 : (term134 = (BIT1 0)) = (term135 = term6).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6205978 : term135 = term6.
Proof. exact (EQ_MP (@lem6205977) (@lem940073)). Qed.
Lemma lem6205979 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6205980 : term133 = term102.
Proof. exact (MK_COMB (@lem6205979) (@lem6205978)). Qed.
Lemma lem6205981 : term132 = term102.
Proof. exact (TRANS (@lem6205976) (@lem6205980)). Qed.
Lemma lem6205983 (m : nat) (n : nat) : (term609 m n) = (term193 m n).
Proof. exact (proj2 (@lem1367247 m n)). Qed.
Lemma lem6205984 : term1016 = term1019.
Proof. exact (@lem6205983 term22 term172). Qed.
Lemma lem6205985 : term195 = term170.
Proof. exact (@lem996238 term170). Qed.
Lemma lem6205986 : (term195 = term170) = (term1020 = term1021).
Proof. exact (@lem996664 (BIT1 0) term170 term170). Qed.
Lemma lem6205987 : term1020 = term1021.
Proof. exact (EQ_MP (@lem6205986) (@lem6205985)). Qed.
Lemma lem6205988 : (term1020 = term1021) = (term1022 = term1023).
Proof. exact (@lem1007663 term20 term170 term1021). Qed.
Lemma lem6205989 : term1022 = term1023.
Proof. exact (EQ_MP (@lem6205988) (@lem6205987)). Qed.
Lemma lem6205990 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6205991 : term1024 = term1025.
Proof. exact (MK_COMB (@lem6205990) (@lem6205989)). Qed.
Lemma lem6205992 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem6205993 : term1019 = term1026.
Proof. exact (MK_COMB (@lem6205992) (@lem6205991)). Qed.
Lemma lem6205994 : term1016 = term1026.
Proof. exact (TRANS (@lem6205984) (@lem6205993)). Qed.
Lemma lem6205995 : real_div = real_div.
Proof. exact (eq_refl real_div). Qed.
Lemma lem6205996 : term1027 = term1028.
Proof. exact (MK_COMB (@lem6205995) (@lem6205994)). Qed.
Lemma lem6205997 : term1018 = term1029.
Proof. exact (MK_COMB (@lem6205996) (@lem6205981)). Qed.
Lemma lem6205998 : term1017 = term1029.
Proof. exact (TRANS (@lem6205973) (@lem6205997)). Qed.
Lemma lem6205999 : term1016 = term1029.
Proof. exact (TRANS (@lem6205972) (@lem6205998)). Qed.
Lemma lem6206001 (x : real) : (term139 x) = x.
Proof. exact (EQ_MP (@lem1982628 x) (@lem1982627 x)). Qed.
Lemma lem6206002 : term1029 = term1026.
Proof. exact (@lem6206001 term1026). Qed.
Lemma lem6206003 : term1016 = term1026.
Proof. exact (TRANS (@lem6205999) (@lem6206002)). Qed.
Lemma lem6206004 (_79022 : int) : (term621 _79022) = (term622 _79022).
Proof. exact (@lem1982749 term90 term212 (real_of_int _79022)). Qed.
Lemma lem6206006 (x : nat) : (term121 x) = (term122 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem6206007 : term212 = term215.
Proof. exact (@lem6206006 term22). Qed.
Lemma lem6206009 (x : nat) : (real_of_num x) = (term119 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6206010 : term90 = term204.
Proof. exact (@lem6206009 term22). Qed.
Lemma lem6206011 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem6206012 : term92 = term605.
Proof. exact (MK_COMB (@lem6206011) (@lem6206010)). Qed.
Lemma lem6206013 : term623 = term624.
Proof. exact (MK_COMB (@lem6206012) (@lem6206007)). Qed.
Lemma lem6206014 : term624 = term625.
Proof. exact (@lem1981613 term90 term212 term102 term102). Qed.
Lemma lem6206016 (m : nat) (n : nat) : (term130 m n) = (term131 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6206017 : term132 = term133.
Proof. exact (@lem6206016 term6 term6). Qed.
Lemma lem6206018 : (term134 = (BIT1 0)) = (term135 = term6).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6206019 : term135 = term6.
Proof. exact (EQ_MP (@lem6206018) (@lem940073)). Qed.
Lemma lem6206020 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6206021 : term133 = term102.
Proof. exact (MK_COMB (@lem6206020) (@lem6206019)). Qed.
Lemma lem6206022 : term132 = term102.
Proof. exact (TRANS (@lem6206017) (@lem6206021)). Qed.
Lemma lem6206024 (m : nat) (n : nat) : (term609 m n) = (term193 m n).
Proof. exact (proj2 (@lem1367247 m n)). Qed.
Lemma lem6206025 : term623 = term626.
Proof. exact (@lem6206024 term22 term22). Qed.
Lemma lem6206026 : (term134 = (BIT1 0)) = (term627 = term170).
Proof. exact (@lem940532 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6206027 : term627 = term170.
Proof. exact (EQ_MP (@lem6206026) (@lem940073)). Qed.
Lemma lem6206028 : (term627 = term170) = (term628 = term172).
Proof. exact (@lem1008952 term20 term170). Qed.
Lemma lem6206029 : term628 = term172.
Proof. exact (EQ_MP (@lem6206028) (@lem6206027)). Qed.
Lemma lem6206030 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6206031 : term629 = term154.
Proof. exact (MK_COMB (@lem6206030) (@lem6206029)). Qed.
Lemma lem6206032 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem6206033 : term626 = term198.
Proof. exact (MK_COMB (@lem6206032) (@lem6206031)). Qed.
Lemma lem6206034 : term623 = term198.
Proof. exact (TRANS (@lem6206025) (@lem6206033)). Qed.
Lemma lem6206035 : real_div = real_div.
Proof. exact (eq_refl real_div). Qed.
Lemma lem6206036 : term630 = term200.
Proof. exact (MK_COMB (@lem6206035) (@lem6206034)). Qed.
Lemma lem6206037 : term625 = term201.
Proof. exact (MK_COMB (@lem6206036) (@lem6206022)). Qed.
Lemma lem6206038 : term624 = term201.
Proof. exact (TRANS (@lem6206014) (@lem6206037)). Qed.
Lemma lem6206039 : term623 = term201.
Proof. exact (TRANS (@lem6206013) (@lem6206038)). Qed.
Lemma lem6206041 (x : real) : (term139 x) = x.
Proof. exact (EQ_MP (@lem1982628 x) (@lem1982627 x)). Qed.
Lemma lem6206042 : term201 = term198.
Proof. exact (@lem6206041 term198). Qed.
Lemma lem6206043 : term623 = term198.
Proof. exact (TRANS (@lem6206039) (@lem6206042)). Qed.
Lemma lem6206044 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem6206045 : term631 = term632.
Proof. exact (MK_COMB (@lem6206044) (@lem6206043)). Qed.
Lemma lem6206046 (_79022 : int) : (real_of_int _79022) = (real_of_int _79022).
Proof. exact (eq_refl (real_of_int _79022)). Qed.
Lemma lem6206047 (_79022 : int) : (term622 _79022) = (term633 _79022).
Proof. exact (MK_COMB (@lem6206045) (@lem6206046 _79022)). Qed.
Lemma lem6206048 (_79022 : int) : (term621 _79022) = (term633 _79022).
Proof. exact (TRANS (@lem6206004 _79022) (@lem6206047 _79022)). Qed.
Lemma lem6206049 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem6206050 (_79022 : int) : (term634 _79022) = (term635 _79022).
Proof. exact (MK_COMB (@lem6206049) (@lem6206048 _79022)). Qed.
Lemma lem6206051 (_79022 : int) : (term1015 _79022) = (term1030 _79022).
Proof. exact (MK_COMB (@lem6206050 _79022) (@lem6206003)). Qed.
Lemma lem6206052 (_79022 : int) : (term1014 _79022) = (term1030 _79022).
Proof. exact (TRANS (@lem6205963 _79022) (@lem6206051 _79022)). Qed.
Lemma lem6206053 (_79021 : int) : (term637 _79021) = (term638 _79021).
Proof. exact (@lem1982749 term90 term90 (real_of_int _79021)). Qed.
Lemma lem6206055 (x : nat) : (real_of_num x) = (term119 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6206056 : term90 = term204.
Proof. exact (@lem6206055 term22). Qed.
Lemma lem6206058 (x : nat) : (real_of_num x) = (term119 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6206059 : term90 = term204.
Proof. exact (@lem6206058 term22). Qed.
Lemma lem6206060 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem6206061 : term92 = term605.
Proof. exact (MK_COMB (@lem6206060) (@lem6206059)). Qed.
Lemma lem6206062 : term639 = term640.
Proof. exact (MK_COMB (@lem6206061) (@lem6206056)). Qed.
Lemma lem6206063 : term640 = term641.
Proof. exact (@lem1981613 term90 term90 term102 term102). Qed.
Lemma lem6206065 (m : nat) (n : nat) : (term130 m n) = (term131 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6206066 : term132 = term133.
Proof. exact (@lem6206065 term6 term6). Qed.
Lemma lem6206067 : (term134 = (BIT1 0)) = (term135 = term6).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6206068 : term135 = term6.
Proof. exact (EQ_MP (@lem6206067) (@lem940073)). Qed.
Lemma lem6206069 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6206070 : term133 = term102.
Proof. exact (MK_COMB (@lem6206069) (@lem6206068)). Qed.
Lemma lem6206071 : term132 = term102.
Proof. exact (TRANS (@lem6206066) (@lem6206070)). Qed.
Lemma lem6206073 (m : nat) (n : nat) : (term130 m n) = (term131 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6206074 : term639 = term629.
Proof. exact (@lem6206073 term22 term22). Qed.
Lemma lem6206075 : (term134 = (BIT1 0)) = (term627 = term170).
Proof. exact (@lem940532 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6206076 : term627 = term170.
Proof. exact (EQ_MP (@lem6206075) (@lem940073)). Qed.
Lemma lem6206077 : (term627 = term170) = (term628 = term172).
Proof. exact (@lem1008952 term20 term170). Qed.
Lemma lem6206078 : term628 = term172.
Proof. exact (EQ_MP (@lem6206077) (@lem6206076)). Qed.
Lemma lem6206079 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6206080 : term629 = term154.
Proof. exact (MK_COMB (@lem6206079) (@lem6206078)). Qed.
Lemma lem6206081 : term639 = term154.
Proof. exact (TRANS (@lem6206074) (@lem6206080)). Qed.
Lemma lem6206082 : real_div = real_div.
Proof. exact (eq_refl real_div). Qed.
Lemma lem6206083 : term642 = term643.
Proof. exact (MK_COMB (@lem6206082) (@lem6206081)). Qed.
Lemma lem6206084 : term641 = term181.
Proof. exact (MK_COMB (@lem6206083) (@lem6206071)). Qed.
Lemma lem6206085 : term640 = term181.
Proof. exact (TRANS (@lem6206063) (@lem6206084)). Qed.
Lemma lem6206086 : term639 = term181.
Proof. exact (TRANS (@lem6206062) (@lem6206085)). Qed.
Lemma lem6206088 (x : real) : (term139 x) = x.
Proof. exact (EQ_MP (@lem1982628 x) (@lem1982627 x)). Qed.
Lemma lem6206089 : term181 = term154.
Proof. exact (@lem6206088 term154). Qed.
Lemma lem6206090 : term639 = term154.
Proof. exact (TRANS (@lem6206086) (@lem6206089)). Qed.
Lemma lem6206091 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem6206092 : term644 = term174.
Proof. exact (MK_COMB (@lem6206091) (@lem6206090)). Qed.
Lemma lem6206093 (_79021 : int) : (real_of_int _79021) = (real_of_int _79021).
Proof. exact (eq_refl (real_of_int _79021)). Qed.
Lemma lem6206094 (_79021 : int) : (term638 _79021) = (term645 _79021).
Proof. exact (MK_COMB (@lem6206092) (@lem6206093 _79021)). Qed.
Lemma lem6206095 (_79021 : int) : (term637 _79021) = (term645 _79021).
Proof. exact (TRANS (@lem6206053 _79021) (@lem6206094 _79021)). Qed.
Lemma lem6206096 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem6206097 (_79021 : int) : (term646 _79021) = (term647 _79021).
Proof. exact (MK_COMB (@lem6206096) (@lem6206095 _79021)). Qed.
Lemma lem6206098 (_79021 : int) (_79022 : int) : (term1013 _79021 _79022) = (term1031 _79021 _79022).
Proof. exact (MK_COMB (@lem6206097 _79021) (@lem6206052 _79022)). Qed.
Lemma lem6206099 (_79021 : int) (_79022 : int) : (term1012 _79021 _79022) = (term1031 _79021 _79022).
Proof. exact (TRANS (@lem6205962 _79021 _79022) (@lem6206098 _79021 _79022)). Qed.
Lemma lem6206100 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem6206101 (_79021 : int) (_79022 : int) : (term1032 _79021 _79022) = (term1033 _79021 _79022).
Proof. exact (MK_COMB (@lem6206100) (@lem6206099 _79021 _79022)). Qed.
Lemma lem6206102 : term65 = term65.
Proof. exact (eq_refl term65). Qed.
Lemma lem6206103 (_79021 : int) (_79022 : int) : (term1011 _79021 _79022) = (term1034 _79021 _79022).
Proof. exact (MK_COMB (@lem6206101 _79021 _79022) (@lem6206102)). Qed.
Lemma lem6206104 (_79021 : int) (_79022 : int) (h1 : term1008 _79021 _79022) : term1034 _79021 _79022.
Proof. exact (EQ_MP (@lem6206103 _79021 _79022) (@lem6205961 _79021 _79022 h1)). Qed.
Lemma lem6206106 (y : real) (x : real) : (real_gt x y) = (real_lt y x).
Proof. exact (EQ_MP (@lem1980266 y x) (@lem1980265 y x)). Qed.
Lemma lem6206107 : term586 = term587.
Proof. exact (@lem6206106 term65 term90). Qed.
Lemma lem6206109 (x : nat) : (real_of_num x) = (term119 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6206110 : term90 = term204.
Proof. exact (@lem6206109 term22). Qed.
Lemma lem6206112 (x : nat) : (real_of_num x) = (term119 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6206113 : term65 = term120.
Proof. exact (@lem6206112 (NUMERAL 0)). Qed.
Lemma lem6206114 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem6206115 : term588 = term589.
Proof. exact (MK_COMB (@lem6206114) (@lem6206113)). Qed.
Lemma lem6206116 : term587 = term590.
Proof. exact (MK_COMB (@lem6206115) (@lem6206110)). Qed.
Lemma lem6206117 : term591.
Proof. exact (@lem1980255 term65 term102 term90 term102). Qed.
Lemma lem6206119 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6206120 : term156 = term157.
Proof. exact (@lem6206119 (NUMERAL 0) term6). Qed.
Lemma lem6206121 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6206122 (h1 : term158 = (BIT1 0)) : term157 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6206123 : (term158 = (BIT1 0)) = (term157 = True).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6206122 h1) (fun h1 : term157 = True => @lem6206121)). Qed.
Lemma lem6206124 : term157 = True.
Proof. exact (EQ_MP (@lem6206123) (@lem6206121)). Qed.
Lemma lem6206125 : term156 = True.
Proof. exact (TRANS (@lem6206120) (@lem6206124)). Qed.
Lemma lem6206126 : True = term156.
Proof. exact (SYM (@lem6206125)). Qed.
Lemma lem6206127 : term156.
Proof. exact (EQ_MP (@lem6206126) (@lem0)). Qed.
Lemma lem6206128 : term592.
Proof. exact (@lem6206117 (@lem6206127)). Qed.
Lemma lem6206130 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6206131 : term156 = term157.
Proof. exact (@lem6206130 (NUMERAL 0) term6). Qed.
Lemma lem6206132 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6206133 (h1 : term158 = (BIT1 0)) : term157 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6206134 : (term158 = (BIT1 0)) = (term157 = True).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6206133 h1) (fun h1 : term157 = True => @lem6206132)). Qed.
Lemma lem6206135 : term157 = True.
Proof. exact (EQ_MP (@lem6206134) (@lem6206132)). Qed.
Lemma lem6206136 : term156 = True.
Proof. exact (TRANS (@lem6206131) (@lem6206135)). Qed.
Lemma lem6206137 : True = term156.
Proof. exact (SYM (@lem6206136)). Qed.
Lemma lem6206138 : term156.
Proof. exact (EQ_MP (@lem6206137) (@lem0)). Qed.
Lemma lem6206139 : term590 = term593.
Proof. exact (@lem6206128 (@lem6206138)). Qed.
Lemma lem6206141 (m : nat) (n : nat) : (term130 m n) = (term131 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6206142 : term237 = term236.
Proof. exact (@lem6206141 term22 term6). Qed.
Lemma lem6206143 : term35 = term20.
Proof. exact (@lem996237 term20). Qed.
Lemma lem6206144 : (term35 = term20) = (term36 = term22).
Proof. exact (@lem1007663 term20 (BIT1 0) term20). Qed.
Lemma lem6206145 : term36 = term22.
Proof. exact (EQ_MP (@lem6206144) (@lem6206143)). Qed.
Lemma lem6206146 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6206147 : term236 = term90.
Proof. exact (MK_COMB (@lem6206146) (@lem6206145)). Qed.
Lemma lem6206148 : term237 = term90.
Proof. exact (TRANS (@lem6206142) (@lem6206147)). Qed.
Lemma lem6206150 (x : nat) : (term245 x) = term65.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem6206151 : term244 = term65.
Proof. exact (@lem6206150 term6). Qed.
Lemma lem6206152 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem6206153 : term594 = term588.
Proof. exact (MK_COMB (@lem6206152) (@lem6206151)). Qed.
Lemma lem6206154 : term593 = term587.
Proof. exact (MK_COMB (@lem6206153) (@lem6206148)). Qed.
Lemma lem6206156 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6206157 : term587 = term595.
Proof. exact (@lem6206156 (NUMERAL 0) term22). Qed.
Lemma lem6206158 : term596 = term20.
Proof. exact (@lem912803). Qed.
Lemma lem6206159 (h1 : term596 = term20) : term595 = True.
Proof. exact (@lem1009824 (BIT1 0) 0 term20 h1). Qed.
Lemma lem6206160 : (term596 = term20) = (term595 = True).
Proof. exact (prop_ext (fun h1 : term596 = term20 => @lem6206159 h1) (fun h1 : term595 = True => @lem6206158)). Qed.
Lemma lem6206161 : term595 = True.
Proof. exact (EQ_MP (@lem6206160) (@lem6206158)). Qed.
Lemma lem6206162 : term587 = True.
Proof. exact (TRANS (@lem6206157) (@lem6206161)). Qed.
Lemma lem6206163 : term593 = True.
Proof. exact (TRANS (@lem6206154) (@lem6206162)). Qed.
Lemma lem6206164 : term590 = True.
Proof. exact (TRANS (@lem6206139) (@lem6206163)). Qed.
Lemma lem6206165 : term587 = True.
Proof. exact (TRANS (@lem6206116) (@lem6206164)). Qed.
Lemma lem6206166 : term586 = True.
Proof. exact (TRANS (@lem6206107) (@lem6206165)). Qed.
Lemma lem6206167 : True = term586.
Proof. exact (SYM (@lem6206166)). Qed.
Lemma lem6206168 : term586.
Proof. exact (EQ_MP (@lem6206167) (@lem0)). Qed.
Lemma lem6206169 (_79021 : int) (_79022 : int) (h1 : term1008 _79021 _79022) : term1035 _79021 _79022.
Proof. exact (conj (@lem6206168) (@lem6205891 _79021 _79022 h1)). Qed.
Lemma lem6206171 (x : real) (y : real) : term598 x y.
Proof. exact (proj1 (@lem1988332 x y)). Qed.
Lemma lem6206172 (_79021 : int) (_79022 : int) : term1036 _79021 _79022.
Proof. exact (@lem6206171 term90 (term966 _79021 _79022)). Qed.
Lemma lem6206173 (_79021 : int) (_79022 : int) (h1 : term1008 _79021 _79022) : term1037 _79021 _79022.
Proof. exact (@lem6206172 _79021 _79022 (@lem6206169 _79021 _79022 h1)). Qed.
Lemma lem6206174 (_79021 : int) (_79022 : int) : (term1038 _79021 _79022) = (term1039 _79021 _79022).
Proof. exact (@lem1982781 (term218 _79021) term90 (term98 _79022)). Qed.
Lemma lem6206175 (_79022 : int) : (term1040 _79022) = (term1041 _79022).
Proof. exact (@lem1982781 (term93 _79022) term90 term97). Qed.
Lemma lem6206177 (x : nat) : (real_of_num x) = (term119 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6206178 : term97 = term148.
Proof. exact (@lem6206177 term32). Qed.
Lemma lem6206180 (x : nat) : (real_of_num x) = (term119 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6206181 : term90 = term204.
Proof. exact (@lem6206180 term22). Qed.
Lemma lem6206182 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem6206183 : term92 = term605.
Proof. exact (MK_COMB (@lem6206182) (@lem6206181)). Qed.
Lemma lem6206184 : term1042 = term1043.
Proof. exact (MK_COMB (@lem6206183) (@lem6206178)). Qed.
Lemma lem6206185 : term1043 = term1044.
Proof. exact (@lem1981613 term90 term97 term102 term102). Qed.
Lemma lem6206187 (m : nat) (n : nat) : (term130 m n) = (term131 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6206188 : term132 = term133.
Proof. exact (@lem6206187 term6 term6). Qed.
Lemma lem6206189 : (term134 = (BIT1 0)) = (term135 = term6).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6206190 : term135 = term6.
Proof. exact (EQ_MP (@lem6206189) (@lem940073)). Qed.
Lemma lem6206191 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6206192 : term133 = term102.
Proof. exact (MK_COMB (@lem6206191) (@lem6206190)). Qed.
Lemma lem6206193 : term132 = term102.
Proof. exact (TRANS (@lem6206188) (@lem6206192)). Qed.
Lemma lem6206195 (m : nat) (n : nat) : (term130 m n) = (term131 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6206196 : term1042 = term615.
Proof. exact (@lem6206195 term22 term32). Qed.
Lemma lem6206197 : term347 = term30.
Proof. exact (@lem996238 term30). Qed.
Lemma lem6206198 : (term347 = term30) = (term611 = term612).
Proof. exact (@lem996664 (BIT1 0) term30 term30). Qed.
Lemma lem6206199 : term611 = term612.
Proof. exact (EQ_MP (@lem6206198) (@lem6206197)). Qed.
Lemma lem6206200 : (term611 = term612) = (term613 = term614).
Proof. exact (@lem1007663 term20 term30 term612). Qed.
Lemma lem6206201 : term613 = term614.
Proof. exact (EQ_MP (@lem6206200) (@lem6206199)). Qed.
Lemma lem6206202 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6206203 : term615 = term616.
Proof. exact (MK_COMB (@lem6206202) (@lem6206201)). Qed.
Lemma lem6206204 : term1042 = term616.
Proof. exact (TRANS (@lem6206196) (@lem6206203)). Qed.
Lemma lem6206205 : real_div = real_div.
Proof. exact (eq_refl real_div). Qed.
Lemma lem6206206 : term1045 = term1046.
Proof. exact (MK_COMB (@lem6206205) (@lem6206204)). Qed.
Lemma lem6206207 : term1044 = term1047.
Proof. exact (MK_COMB (@lem6206206) (@lem6206193)). Qed.
Lemma lem6206208 : term1043 = term1047.
Proof. exact (TRANS (@lem6206185) (@lem6206207)). Qed.
Lemma lem6206209 : term1042 = term1047.
Proof. exact (TRANS (@lem6206184) (@lem6206208)). Qed.
Lemma lem6206211 (x : real) : (term139 x) = x.
Proof. exact (EQ_MP (@lem1982628 x) (@lem1982627 x)). Qed.
Lemma lem6206212 : term1047 = term616.
Proof. exact (@lem6206211 term616). Qed.
Lemma lem6206213 : term1042 = term616.
Proof. exact (TRANS (@lem6206209) (@lem6206212)). Qed.
Lemma lem6206214 (_79022 : int) : (term637 _79022) = (term638 _79022).
Proof. exact (@lem1982749 term90 term90 (real_of_int _79022)). Qed.
Lemma lem6206216 (x : nat) : (real_of_num x) = (term119 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6206217 : term90 = term204.
Proof. exact (@lem6206216 term22). Qed.
Lemma lem6206219 (x : nat) : (real_of_num x) = (term119 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6206220 : term90 = term204.
Proof. exact (@lem6206219 term22). Qed.
Lemma lem6206221 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem6206222 : term92 = term605.
Proof. exact (MK_COMB (@lem6206221) (@lem6206220)). Qed.
Lemma lem6206223 : term639 = term640.
Proof. exact (MK_COMB (@lem6206222) (@lem6206217)). Qed.
Lemma lem6206224 : term640 = term641.
Proof. exact (@lem1981613 term90 term90 term102 term102). Qed.
Lemma lem6206226 (m : nat) (n : nat) : (term130 m n) = (term131 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6206227 : term132 = term133.
Proof. exact (@lem6206226 term6 term6). Qed.
Lemma lem6206228 : (term134 = (BIT1 0)) = (term135 = term6).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6206229 : term135 = term6.
Proof. exact (EQ_MP (@lem6206228) (@lem940073)). Qed.
Lemma lem6206230 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6206231 : term133 = term102.
Proof. exact (MK_COMB (@lem6206230) (@lem6206229)). Qed.
Lemma lem6206232 : term132 = term102.
Proof. exact (TRANS (@lem6206227) (@lem6206231)). Qed.
Lemma lem6206234 (m : nat) (n : nat) : (term130 m n) = (term131 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6206235 : term639 = term629.
Proof. exact (@lem6206234 term22 term22). Qed.
Lemma lem6206236 : (term134 = (BIT1 0)) = (term627 = term170).
Proof. exact (@lem940532 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6206237 : term627 = term170.
Proof. exact (EQ_MP (@lem6206236) (@lem940073)). Qed.
Lemma lem6206238 : (term627 = term170) = (term628 = term172).
Proof. exact (@lem1008952 term20 term170). Qed.
Lemma lem6206239 : term628 = term172.
Proof. exact (EQ_MP (@lem6206238) (@lem6206237)). Qed.
Lemma lem6206240 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6206241 : term629 = term154.
Proof. exact (MK_COMB (@lem6206240) (@lem6206239)). Qed.
Lemma lem6206242 : term639 = term154.
Proof. exact (TRANS (@lem6206235) (@lem6206241)). Qed.
Lemma lem6206243 : real_div = real_div.
Proof. exact (eq_refl real_div). Qed.
Lemma lem6206244 : term642 = term643.
Proof. exact (MK_COMB (@lem6206243) (@lem6206242)). Qed.
Lemma lem6206245 : term641 = term181.
Proof. exact (MK_COMB (@lem6206244) (@lem6206232)). Qed.
Lemma lem6206246 : term640 = term181.
Proof. exact (TRANS (@lem6206224) (@lem6206245)). Qed.
Lemma lem6206247 : term639 = term181.
Proof. exact (TRANS (@lem6206223) (@lem6206246)). Qed.
Lemma lem6206249 (x : real) : (term139 x) = x.
Proof. exact (EQ_MP (@lem1982628 x) (@lem1982627 x)). Qed.
Lemma lem6206250 : term181 = term154.
Proof. exact (@lem6206249 term154). Qed.
Lemma lem6206251 : term639 = term154.
Proof. exact (TRANS (@lem6206247) (@lem6206250)). Qed.
Lemma lem6206252 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem6206253 : term644 = term174.
Proof. exact (MK_COMB (@lem6206252) (@lem6206251)). Qed.
Lemma lem6206254 (_79022 : int) : (real_of_int _79022) = (real_of_int _79022).
Proof. exact (eq_refl (real_of_int _79022)). Qed.
Lemma lem6206255 (_79022 : int) : (term638 _79022) = (term645 _79022).
Proof. exact (MK_COMB (@lem6206253) (@lem6206254 _79022)). Qed.
Lemma lem6206256 (_79022 : int) : (term637 _79022) = (term645 _79022).
Proof. exact (TRANS (@lem6206214 _79022) (@lem6206255 _79022)). Qed.
Lemma lem6206257 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem6206258 (_79022 : int) : (term646 _79022) = (term647 _79022).
Proof. exact (MK_COMB (@lem6206257) (@lem6206256 _79022)). Qed.
Lemma lem6206259 (_79022 : int) : (term1041 _79022) = (term1048 _79022).
Proof. exact (MK_COMB (@lem6206258 _79022) (@lem6206213)). Qed.
Lemma lem6206260 (_79022 : int) : (term1040 _79022) = (term1048 _79022).
Proof. exact (TRANS (@lem6206175 _79022) (@lem6206259 _79022)). Qed.
Lemma lem6206261 (_79021 : int) : (term621 _79021) = (term622 _79021).
Proof. exact (@lem1982749 term90 term212 (real_of_int _79021)). Qed.
Lemma lem6206263 (x : nat) : (term121 x) = (term122 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem6206264 : term212 = term215.
Proof. exact (@lem6206263 term22). Qed.
Lemma lem6206266 (x : nat) : (real_of_num x) = (term119 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6206267 : term90 = term204.
Proof. exact (@lem6206266 term22). Qed.
Lemma lem6206268 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem6206269 : term92 = term605.
Proof. exact (MK_COMB (@lem6206268) (@lem6206267)). Qed.
Lemma lem6206270 : term623 = term624.
Proof. exact (MK_COMB (@lem6206269) (@lem6206264)). Qed.
Lemma lem6206271 : term624 = term625.
Proof. exact (@lem1981613 term90 term212 term102 term102). Qed.
Lemma lem6206273 (m : nat) (n : nat) : (term130 m n) = (term131 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6206274 : term132 = term133.
Proof. exact (@lem6206273 term6 term6). Qed.
Lemma lem6206275 : (term134 = (BIT1 0)) = (term135 = term6).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6206276 : term135 = term6.
Proof. exact (EQ_MP (@lem6206275) (@lem940073)). Qed.
Lemma lem6206277 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6206278 : term133 = term102.
Proof. exact (MK_COMB (@lem6206277) (@lem6206276)). Qed.
Lemma lem6206279 : term132 = term102.
Proof. exact (TRANS (@lem6206274) (@lem6206278)). Qed.
Lemma lem6206281 (m : nat) (n : nat) : (term609 m n) = (term193 m n).
Proof. exact (proj2 (@lem1367247 m n)). Qed.
Lemma lem6206282 : term623 = term626.
Proof. exact (@lem6206281 term22 term22). Qed.
Lemma lem6206283 : (term134 = (BIT1 0)) = (term627 = term170).
Proof. exact (@lem940532 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6206284 : term627 = term170.
Proof. exact (EQ_MP (@lem6206283) (@lem940073)). Qed.
Lemma lem6206285 : (term627 = term170) = (term628 = term172).
Proof. exact (@lem1008952 term20 term170). Qed.
Lemma lem6206286 : term628 = term172.
Proof. exact (EQ_MP (@lem6206285) (@lem6206284)). Qed.
Lemma lem6206287 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6206288 : term629 = term154.
Proof. exact (MK_COMB (@lem6206287) (@lem6206286)). Qed.
Lemma lem6206289 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem6206290 : term626 = term198.
Proof. exact (MK_COMB (@lem6206289) (@lem6206288)). Qed.
Lemma lem6206291 : term623 = term198.
Proof. exact (TRANS (@lem6206282) (@lem6206290)). Qed.
Lemma lem6206292 : real_div = real_div.
Proof. exact (eq_refl real_div). Qed.
Lemma lem6206293 : term630 = term200.
Proof. exact (MK_COMB (@lem6206292) (@lem6206291)). Qed.
Lemma lem6206294 : term625 = term201.
Proof. exact (MK_COMB (@lem6206293) (@lem6206279)). Qed.
Lemma lem6206295 : term624 = term201.
Proof. exact (TRANS (@lem6206271) (@lem6206294)). Qed.
Lemma lem6206296 : term623 = term201.
Proof. exact (TRANS (@lem6206270) (@lem6206295)). Qed.
Lemma lem6206298 (x : real) : (term139 x) = x.
Proof. exact (EQ_MP (@lem1982628 x) (@lem1982627 x)). Qed.
Lemma lem6206299 : term201 = term198.
Proof. exact (@lem6206298 term198). Qed.
Lemma lem6206300 : term623 = term198.
Proof. exact (TRANS (@lem6206296) (@lem6206299)). Qed.
Lemma lem6206301 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem6206302 : term631 = term632.
Proof. exact (MK_COMB (@lem6206301) (@lem6206300)). Qed.
Lemma lem6206303 (_79021 : int) : (real_of_int _79021) = (real_of_int _79021).
Proof. exact (eq_refl (real_of_int _79021)). Qed.
Lemma lem6206304 (_79021 : int) : (term622 _79021) = (term633 _79021).
Proof. exact (MK_COMB (@lem6206302) (@lem6206303 _79021)). Qed.
Lemma lem6206305 (_79021 : int) : (term621 _79021) = (term633 _79021).
Proof. exact (TRANS (@lem6206261 _79021) (@lem6206304 _79021)). Qed.
Lemma lem6206306 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem6206307 (_79021 : int) : (term634 _79021) = (term635 _79021).
Proof. exact (MK_COMB (@lem6206306) (@lem6206305 _79021)). Qed.
Lemma lem6206308 (_79021 : int) (_79022 : int) : (term1039 _79021 _79022) = (term1049 _79021 _79022).
Proof. exact (MK_COMB (@lem6206307 _79021) (@lem6206260 _79022)). Qed.
Lemma lem6206309 (_79021 : int) (_79022 : int) : (term1038 _79021 _79022) = (term1049 _79021 _79022).
Proof. exact (TRANS (@lem6206174 _79021 _79022) (@lem6206308 _79021 _79022)). Qed.
Lemma lem6206310 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem6206311 (_79021 : int) (_79022 : int) : (term1050 _79021 _79022) = (term1051 _79021 _79022).
Proof. exact (MK_COMB (@lem6206310) (@lem6206309 _79021 _79022)). Qed.
Lemma lem6206312 : term65 = term65.
Proof. exact (eq_refl term65). Qed.
Lemma lem6206313 (_79021 : int) (_79022 : int) : (term1037 _79021 _79022) = (term1052 _79021 _79022).
Proof. exact (MK_COMB (@lem6206311 _79021 _79022) (@lem6206312)). Qed.
Lemma lem6206314 (_79021 : int) (_79022 : int) (h1 : term1008 _79021 _79022) : term1052 _79021 _79022.
Proof. exact (EQ_MP (@lem6206313 _79021 _79022) (@lem6206173 _79021 _79022 h1)). Qed.
Lemma lem6206315 (_79021 : int) (_79022 : int) (h1 : term1008 _79021 _79022) : term1053 _79021 _79022.
Proof. exact (conj (@lem6206314 _79021 _79022 h1) (@lem6206104 _79021 _79022 h1)). Qed.
Lemma lem6206317 (x : real) (y : real) : term665 x y.
Proof. exact (proj1 (@lem1988342 x y)). Qed.
Lemma lem6206318 (_79021 : int) (_79022 : int) : term1054 _79021 _79022.
Proof. exact (@lem6206317 (term1049 _79021 _79022) (term1031 _79021 _79022)). Qed.
Lemma lem6206319 (_79021 : int) (_79022 : int) (h1 : term1008 _79021 _79022) : term1055 _79021 _79022.
Proof. exact (@lem6206318 _79021 _79022 (@lem6206315 _79021 _79022 h1)). Qed.
Lemma lem6206320 (_79021 : int) (_79022 : int) : (term1056 _79021 _79022) = (term1057 _79021 _79022).
Proof. exact (@lem1982753 (term633 _79021) (term645 _79021) (term1048 _79022) (term1030 _79022)). Qed.
Lemma lem6206321 (_79021 : int) : (term670 _79021) = (term671 _79021).
Proof. exact (@lem1982711 term198 term154 (real_of_int _79021)). Qed.
Lemma lem6206323 (x : nat) : (real_of_num x) = (term119 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6206324 : term154 = term181.
Proof. exact (@lem6206323 term172). Qed.
Lemma lem6206326 (x : nat) : (term121 x) = (term122 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem6206327 : term198 = term201.
Proof. exact (@lem6206326 term172). Qed.
Lemma lem6206328 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem6206329 : term672 = term673.
Proof. exact (MK_COMB (@lem6206328) (@lem6206327)). Qed.
Lemma lem6206330 : term674 = term675.
Proof. exact (MK_COMB (@lem6206329) (@lem6206324)). Qed.
Lemma lem6206331 : term676.
Proof. exact (@lem1981473 term198 term102 term154 term102 term65 term102). Qed.
Lemma lem6206333 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6206334 : term156 = term157.
Proof. exact (@lem6206333 (NUMERAL 0) term6). Qed.
Lemma lem6206335 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6206336 (h1 : term158 = (BIT1 0)) : term157 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6206337 : (term158 = (BIT1 0)) = (term157 = True).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6206336 h1) (fun h1 : term157 = True => @lem6206335)). Qed.
Lemma lem6206338 : term157 = True.
Proof. exact (EQ_MP (@lem6206337) (@lem6206335)). Qed.
Lemma lem6206339 : term156 = True.
Proof. exact (TRANS (@lem6206334) (@lem6206338)). Qed.
Lemma lem6206340 : True = term156.
Proof. exact (SYM (@lem6206339)). Qed.
Lemma lem6206341 : term156.
Proof. exact (EQ_MP (@lem6206340) (@lem0)). Qed.
Lemma lem6206342 : term677.
Proof. exact (@lem6206331 (@lem6206341)). Qed.
Lemma lem6206344 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6206345 : term156 = term157.
Proof. exact (@lem6206344 (NUMERAL 0) term6). Qed.
Lemma lem6206346 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6206347 (h1 : term158 = (BIT1 0)) : term157 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6206348 : (term158 = (BIT1 0)) = (term157 = True).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6206347 h1) (fun h1 : term157 = True => @lem6206346)). Qed.
Lemma lem6206349 : term157 = True.
Proof. exact (EQ_MP (@lem6206348) (@lem6206346)). Qed.
Lemma lem6206350 : term156 = True.
Proof. exact (TRANS (@lem6206345) (@lem6206349)). Qed.
Lemma lem6206351 : True = term156.
Proof. exact (SYM (@lem6206350)). Qed.
Lemma lem6206352 : term156.
Proof. exact (EQ_MP (@lem6206351) (@lem0)). Qed.
Lemma lem6206353 : term678.
Proof. exact (@lem6206342 (@lem6206352)). Qed.
Lemma lem6206355 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6206356 : term156 = term157.
Proof. exact (@lem6206355 (NUMERAL 0) term6). Qed.
Lemma lem6206357 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6206358 (h1 : term158 = (BIT1 0)) : term157 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6206359 : (term158 = (BIT1 0)) = (term157 = True).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6206358 h1) (fun h1 : term157 = True => @lem6206357)). Qed.
Lemma lem6206360 : term157 = True.
Proof. exact (EQ_MP (@lem6206359) (@lem6206357)). Qed.
Lemma lem6206361 : term156 = True.
Proof. exact (TRANS (@lem6206356) (@lem6206360)). Qed.
Lemma lem6206362 : True = term156.
Proof. exact (SYM (@lem6206361)). Qed.
Lemma lem6206363 : term156.
Proof. exact (EQ_MP (@lem6206362) (@lem0)). Qed.
Lemma lem6206364 : term679.
Proof. exact (@lem6206353 (@lem6206363)). Qed.
Lemma lem6206366 (m : nat) (n : nat) : (term130 m n) = (term131 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6206367 : term176 = term177.
Proof. exact (@lem6206366 term172 term6). Qed.
Lemma lem6206368 : term178 = term170.
Proof. exact (@lem996237 term170). Qed.
Lemma lem6206369 : (term178 = term170) = (term179 = term172).
Proof. exact (@lem1007663 term170 (BIT1 0) term170). Qed.
Lemma lem6206370 : term179 = term172.
Proof. exact (EQ_MP (@lem6206369) (@lem6206368)). Qed.
Lemma lem6206371 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6206372 : term177 = term154.
Proof. exact (MK_COMB (@lem6206371) (@lem6206370)). Qed.
Lemma lem6206373 : term176 = term154.
Proof. exact (TRANS (@lem6206367) (@lem6206372)). Qed.
Lemma lem6206375 (m : nat) (n : nat) : (term192 m n) = (term193 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem6206376 : term257 = term258.
Proof. exact (@lem6206375 term172 term6). Qed.
Lemma lem6206377 : term178 = term170.
Proof. exact (@lem996237 term170). Qed.
Lemma lem6206378 : (term178 = term170) = (term179 = term172).
Proof. exact (@lem1007663 term170 (BIT1 0) term170). Qed.
Lemma lem6206379 : term179 = term172.
Proof. exact (EQ_MP (@lem6206378) (@lem6206377)). Qed.
Lemma lem6206380 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6206381 : term177 = term154.
Proof. exact (MK_COMB (@lem6206380) (@lem6206379)). Qed.
Lemma lem6206382 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem6206383 : term258 = term198.
Proof. exact (MK_COMB (@lem6206382) (@lem6206381)). Qed.
Lemma lem6206384 : term257 = term198.
Proof. exact (TRANS (@lem6206376) (@lem6206383)). Qed.
Lemma lem6206385 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem6206386 : term680 = term672.
Proof. exact (MK_COMB (@lem6206385) (@lem6206384)). Qed.
Lemma lem6206387 : term681 = term674.
Proof. exact (MK_COMB (@lem6206386) (@lem6206373)). Qed.
Lemma lem6206389 (m : nat) : (term682 m) = term65.
Proof. exact (proj1 (@lem1367303 m)). Qed.
Lemma lem6206390 : term674 = term65.
Proof. exact (@lem6206389 term172). Qed.
Lemma lem6206391 : term681 = term65.
Proof. exact (TRANS (@lem6206387) (@lem6206390)). Qed.
Lemma lem6206392 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem6206393 : term683 = term242.
Proof. exact (MK_COMB (@lem6206392) (@lem6206391)). Qed.
Lemma lem6206394 : term102 = term102.
Proof. exact (eq_refl term102). Qed.
Lemma lem6206395 : term684 = term244.
Proof. exact (MK_COMB (@lem6206393) (@lem6206394)). Qed.
Lemma lem6206397 (x : nat) : (term245 x) = term65.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem6206398 : term244 = term65.
Proof. exact (@lem6206397 term6). Qed.
Lemma lem6206399 : term684 = term65.
Proof. exact (TRANS (@lem6206395) (@lem6206398)). Qed.
Lemma lem6206401 (m : nat) (n : nat) : (term130 m n) = (term131 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6206402 : term132 = term133.
Proof. exact (@lem6206401 term6 term6). Qed.
Lemma lem6206403 : (term134 = (BIT1 0)) = (term135 = term6).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6206404 : term135 = term6.
Proof. exact (EQ_MP (@lem6206403) (@lem940073)). Qed.
Lemma lem6206405 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6206406 : term133 = term102.
Proof. exact (MK_COMB (@lem6206405) (@lem6206404)). Qed.
Lemma lem6206407 : term132 = term102.
Proof. exact (TRANS (@lem6206402) (@lem6206406)). Qed.
Lemma lem6206408 : term242 = term242.
Proof. exact (eq_refl term242). Qed.
Lemma lem6206409 : term246 = term244.
Proof. exact (MK_COMB (@lem6206408) (@lem6206407)). Qed.
Lemma lem6206411 (x : nat) : (term245 x) = term65.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem6206412 : term244 = term65.
Proof. exact (@lem6206411 term6). Qed.
Lemma lem6206413 : term246 = term65.
Proof. exact (TRANS (@lem6206409) (@lem6206412)). Qed.
Lemma lem6206414 : term65 = term246.
Proof. exact (SYM (@lem6206413)). Qed.
Lemma lem6206415 : term684 = term246.
Proof. exact (TRANS (@lem6206399) (@lem6206414)). Qed.
Lemma lem6206416 : term675 = term120.
Proof. exact (@lem6206364 (@lem6206415)). Qed.
Lemma lem6206417 : term674 = term120.
Proof. exact (TRANS (@lem6206330) (@lem6206416)). Qed.
Lemma lem6206419 (x : real) : (term139 x) = x.
Proof. exact (EQ_MP (@lem1981475 x) (@lem1981474 x)). Qed.
Lemma lem6206420 : term120 = term65.
Proof. exact (@lem6206419 term65). Qed.
Lemma lem6206421 : term674 = term65.
Proof. exact (TRANS (@lem6206417) (@lem6206420)). Qed.
Lemma lem6206422 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem6206423 : term685 = term242.
Proof. exact (MK_COMB (@lem6206422) (@lem6206421)). Qed.
Lemma lem6206424 (_79021 : int) : (real_of_int _79021) = (real_of_int _79021).
Proof. exact (eq_refl (real_of_int _79021)). Qed.
Lemma lem6206425 (_79021 : int) : (term671 _79021) = (term248 _79021).
Proof. exact (MK_COMB (@lem6206423) (@lem6206424 _79021)). Qed.
Lemma lem6206426 (_79021 : int) : (term670 _79021) = (term248 _79021).
Proof. exact (TRANS (@lem6206321 _79021) (@lem6206425 _79021)). Qed.
Lemma lem6206427 (_79021 : int) : (term248 _79021) = term65.
Proof. exact (@lem1982719 (real_of_int _79021)). Qed.
Lemma lem6206428 (_79021 : int) : (term670 _79021) = term65.
Proof. exact (TRANS (@lem6206426 _79021) (@lem6206427 _79021)). Qed.
Lemma lem6206429 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem6206430 (_79021 : int) : (term686 _79021) = term250.
Proof. exact (MK_COMB (@lem6206429) (@lem6206428 _79021)). Qed.
Lemma lem6206431 (_79022 : int) : (term1058 _79022) = (term1059 _79022).
Proof. exact (@lem1982753 (term645 _79022) (term633 _79022) term616 term1026). Qed.
Lemma lem6206432 (_79022 : int) : (term689 _79022) = (term690 _79022).
Proof. exact (@lem1982711 term154 term198 (real_of_int _79022)). Qed.
Lemma lem6206434 (x : nat) : (term121 x) = (term122 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem6206435 : term198 = term201.
Proof. exact (@lem6206434 term172). Qed.
Lemma lem6206437 (x : nat) : (real_of_num x) = (term119 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6206438 : term154 = term181.
Proof. exact (@lem6206437 term172). Qed.
Lemma lem6206439 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem6206440 : term691 = term692.
Proof. exact (MK_COMB (@lem6206439) (@lem6206438)). Qed.
Lemma lem6206441 : term693 = term694.
Proof. exact (MK_COMB (@lem6206440) (@lem6206435)). Qed.
Lemma lem6206442 : term695.
Proof. exact (@lem1981473 term154 term102 term198 term102 term65 term102). Qed.
Lemma lem6206444 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6206445 : term156 = term157.
Proof. exact (@lem6206444 (NUMERAL 0) term6). Qed.
Lemma lem6206446 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6206447 (h1 : term158 = (BIT1 0)) : term157 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6206448 : (term158 = (BIT1 0)) = (term157 = True).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6206447 h1) (fun h1 : term157 = True => @lem6206446)). Qed.
Lemma lem6206449 : term157 = True.
Proof. exact (EQ_MP (@lem6206448) (@lem6206446)). Qed.
Lemma lem6206450 : term156 = True.
Proof. exact (TRANS (@lem6206445) (@lem6206449)). Qed.
Lemma lem6206451 : True = term156.
Proof. exact (SYM (@lem6206450)). Qed.
Lemma lem6206452 : term156.
Proof. exact (EQ_MP (@lem6206451) (@lem0)). Qed.
Lemma lem6206453 : term696.
Proof. exact (@lem6206442 (@lem6206452)). Qed.
Lemma lem6206455 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6206456 : term156 = term157.
Proof. exact (@lem6206455 (NUMERAL 0) term6). Qed.
Lemma lem6206457 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6206458 (h1 : term158 = (BIT1 0)) : term157 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6206459 : (term158 = (BIT1 0)) = (term157 = True).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6206458 h1) (fun h1 : term157 = True => @lem6206457)). Qed.
Lemma lem6206460 : term157 = True.
Proof. exact (EQ_MP (@lem6206459) (@lem6206457)). Qed.
Lemma lem6206461 : term156 = True.
Proof. exact (TRANS (@lem6206456) (@lem6206460)). Qed.
Lemma lem6206462 : True = term156.
Proof. exact (SYM (@lem6206461)). Qed.
Lemma lem6206463 : term156.
Proof. exact (EQ_MP (@lem6206462) (@lem0)). Qed.
Lemma lem6206464 : term697.
Proof. exact (@lem6206453 (@lem6206463)). Qed.
Lemma lem6206466 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6206467 : term156 = term157.
Proof. exact (@lem6206466 (NUMERAL 0) term6). Qed.
Lemma lem6206468 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6206469 (h1 : term158 = (BIT1 0)) : term157 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6206470 : (term158 = (BIT1 0)) = (term157 = True).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6206469 h1) (fun h1 : term157 = True => @lem6206468)). Qed.
Lemma lem6206471 : term157 = True.
Proof. exact (EQ_MP (@lem6206470) (@lem6206468)). Qed.
Lemma lem6206472 : term156 = True.
Proof. exact (TRANS (@lem6206467) (@lem6206471)). Qed.
Lemma lem6206473 : True = term156.
Proof. exact (SYM (@lem6206472)). Qed.
Lemma lem6206474 : term156.
Proof. exact (EQ_MP (@lem6206473) (@lem0)). Qed.
Lemma lem6206475 : term698.
Proof. exact (@lem6206464 (@lem6206474)). Qed.
Lemma lem6206477 (m : nat) (n : nat) : (term192 m n) = (term193 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem6206478 : term257 = term258.
Proof. exact (@lem6206477 term172 term6). Qed.
Lemma lem6206479 : term178 = term170.
Proof. exact (@lem996237 term170). Qed.
Lemma lem6206480 : (term178 = term170) = (term179 = term172).
Proof. exact (@lem1007663 term170 (BIT1 0) term170). Qed.
Lemma lem6206481 : term179 = term172.
Proof. exact (EQ_MP (@lem6206480) (@lem6206479)). Qed.
Lemma lem6206482 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6206483 : term177 = term154.
Proof. exact (MK_COMB (@lem6206482) (@lem6206481)). Qed.
Lemma lem6206484 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem6206485 : term258 = term198.
Proof. exact (MK_COMB (@lem6206484) (@lem6206483)). Qed.
Lemma lem6206486 : term257 = term198.
Proof. exact (TRANS (@lem6206478) (@lem6206485)). Qed.
Lemma lem6206488 (m : nat) (n : nat) : (term130 m n) = (term131 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6206489 : term176 = term177.
Proof. exact (@lem6206488 term172 term6). Qed.
Lemma lem6206490 : term178 = term170.
Proof. exact (@lem996237 term170). Qed.
Lemma lem6206491 : (term178 = term170) = (term179 = term172).
Proof. exact (@lem1007663 term170 (BIT1 0) term170). Qed.
Lemma lem6206492 : term179 = term172.
Proof. exact (EQ_MP (@lem6206491) (@lem6206490)). Qed.
Lemma lem6206493 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6206494 : term177 = term154.
Proof. exact (MK_COMB (@lem6206493) (@lem6206492)). Qed.
Lemma lem6206495 : term176 = term154.
Proof. exact (TRANS (@lem6206489) (@lem6206494)). Qed.
Lemma lem6206496 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem6206497 : term699 = term691.
Proof. exact (MK_COMB (@lem6206496) (@lem6206495)). Qed.
Lemma lem6206498 : term700 = term693.
Proof. exact (MK_COMB (@lem6206497) (@lem6206486)). Qed.
Lemma lem6206500 (m : nat) : (term240 m) = term65.
Proof. exact (proj2 (@lem1367303 m)). Qed.
Lemma lem6206501 : term693 = term65.
Proof. exact (@lem6206500 term172). Qed.
Lemma lem6206502 : term700 = term65.
Proof. exact (TRANS (@lem6206498) (@lem6206501)). Qed.
Lemma lem6206503 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem6206504 : term701 = term242.
Proof. exact (MK_COMB (@lem6206503) (@lem6206502)). Qed.
Lemma lem6206505 : term102 = term102.
Proof. exact (eq_refl term102). Qed.
Lemma lem6206506 : term702 = term244.
Proof. exact (MK_COMB (@lem6206504) (@lem6206505)). Qed.
Lemma lem6206508 (x : nat) : (term245 x) = term65.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem6206509 : term244 = term65.
Proof. exact (@lem6206508 term6). Qed.
Lemma lem6206510 : term702 = term65.
Proof. exact (TRANS (@lem6206506) (@lem6206509)). Qed.
Lemma lem6206512 (m : nat) (n : nat) : (term130 m n) = (term131 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6206513 : term132 = term133.
Proof. exact (@lem6206512 term6 term6). Qed.
Lemma lem6206514 : (term134 = (BIT1 0)) = (term135 = term6).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6206515 : term135 = term6.
Proof. exact (EQ_MP (@lem6206514) (@lem940073)). Qed.
Lemma lem6206516 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6206517 : term133 = term102.
Proof. exact (MK_COMB (@lem6206516) (@lem6206515)). Qed.
Lemma lem6206518 : term132 = term102.
Proof. exact (TRANS (@lem6206513) (@lem6206517)). Qed.
Lemma lem6206519 : term242 = term242.
Proof. exact (eq_refl term242). Qed.
Lemma lem6206520 : term246 = term244.
Proof. exact (MK_COMB (@lem6206519) (@lem6206518)). Qed.
Lemma lem6206522 (x : nat) : (term245 x) = term65.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem6206523 : term244 = term65.
Proof. exact (@lem6206522 term6). Qed.
Lemma lem6206524 : term246 = term65.
Proof. exact (TRANS (@lem6206520) (@lem6206523)). Qed.
Lemma lem6206525 : term65 = term246.
Proof. exact (SYM (@lem6206524)). Qed.
Lemma lem6206526 : term702 = term246.
Proof. exact (TRANS (@lem6206510) (@lem6206525)). Qed.
Lemma lem6206527 : term694 = term120.
Proof. exact (@lem6206475 (@lem6206526)). Qed.
Lemma lem6206528 : term693 = term120.
Proof. exact (TRANS (@lem6206441) (@lem6206527)). Qed.
Lemma lem6206530 (x : real) : (term139 x) = x.
Proof. exact (EQ_MP (@lem1981475 x) (@lem1981474 x)). Qed.
Lemma lem6206531 : term120 = term65.
Proof. exact (@lem6206530 term65). Qed.
Lemma lem6206532 : term693 = term65.
Proof. exact (TRANS (@lem6206528) (@lem6206531)). Qed.
Lemma lem6206533 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem6206534 : term703 = term242.
Proof. exact (MK_COMB (@lem6206533) (@lem6206532)). Qed.
Lemma lem6206535 (_79022 : int) : (real_of_int _79022) = (real_of_int _79022).
Proof. exact (eq_refl (real_of_int _79022)). Qed.
Lemma lem6206536 (_79022 : int) : (term690 _79022) = (term248 _79022).
Proof. exact (MK_COMB (@lem6206534) (@lem6206535 _79022)). Qed.
Lemma lem6206537 (_79022 : int) : (term689 _79022) = (term248 _79022).
Proof. exact (TRANS (@lem6206432 _79022) (@lem6206536 _79022)). Qed.
Lemma lem6206538 (_79022 : int) : (term248 _79022) = term65.
Proof. exact (@lem1982719 (real_of_int _79022)). Qed.
Lemma lem6206539 (_79022 : int) : (term689 _79022) = term65.
Proof. exact (TRANS (@lem6206537 _79022) (@lem6206538 _79022)). Qed.
Lemma lem6206540 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem6206541 (_79022 : int) : (term704 _79022) = term250.
Proof. exact (MK_COMB (@lem6206540) (@lem6206539 _79022)). Qed.
Lemma lem6206543 (x : nat) : (term121 x) = (term122 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem6206544 : term1026 = term1029.
Proof. exact (@lem6206543 term1023). Qed.
Lemma lem6206546 (x : nat) : (real_of_num x) = (term119 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6206547 : term616 = term1047.
Proof. exact (@lem6206546 term614). Qed.
Lemma lem6206548 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem6206549 : term1060 = term1061.
Proof. exact (MK_COMB (@lem6206548) (@lem6206547)). Qed.
Lemma lem6206550 : term1062 = term1063.
Proof. exact (MK_COMB (@lem6206549) (@lem6206544)). Qed.
Lemma lem6206551 : term1064.
Proof. exact (@lem1981473 term616 term102 term1026 term102 term212 term102). Qed.
Lemma lem6206553 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6206554 : term156 = term157.
Proof. exact (@lem6206553 (NUMERAL 0) term6). Qed.
Lemma lem6206555 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6206556 (h1 : term158 = (BIT1 0)) : term157 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6206557 : (term158 = (BIT1 0)) = (term157 = True).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6206556 h1) (fun h1 : term157 = True => @lem6206555)). Qed.
Lemma lem6206558 : term157 = True.
Proof. exact (EQ_MP (@lem6206557) (@lem6206555)). Qed.
Lemma lem6206559 : term156 = True.
Proof. exact (TRANS (@lem6206554) (@lem6206558)). Qed.
Lemma lem6206560 : True = term156.
Proof. exact (SYM (@lem6206559)). Qed.
Lemma lem6206561 : term156.
Proof. exact (EQ_MP (@lem6206560) (@lem0)). Qed.
Lemma lem6206562 : term1065.
Proof. exact (@lem6206551 (@lem6206561)). Qed.
Lemma lem6206564 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6206565 : term156 = term157.
Proof. exact (@lem6206564 (NUMERAL 0) term6). Qed.
Lemma lem6206566 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6206567 (h1 : term158 = (BIT1 0)) : term157 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6206568 : (term158 = (BIT1 0)) = (term157 = True).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6206567 h1) (fun h1 : term157 = True => @lem6206566)). Qed.
Lemma lem6206569 : term157 = True.
Proof. exact (EQ_MP (@lem6206568) (@lem6206566)). Qed.
Lemma lem6206570 : term156 = True.
Proof. exact (TRANS (@lem6206565) (@lem6206569)). Qed.
Lemma lem6206571 : True = term156.
Proof. exact (SYM (@lem6206570)). Qed.
Lemma lem6206572 : term156.
Proof. exact (EQ_MP (@lem6206571) (@lem0)). Qed.
Lemma lem6206573 : term1066.
Proof. exact (@lem6206562 (@lem6206572)). Qed.
Lemma lem6206575 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6206576 : term156 = term157.
Proof. exact (@lem6206575 (NUMERAL 0) term6). Qed.
Lemma lem6206577 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6206578 (h1 : term158 = (BIT1 0)) : term157 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6206579 : (term158 = (BIT1 0)) = (term157 = True).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6206578 h1) (fun h1 : term157 = True => @lem6206577)). Qed.
Lemma lem6206580 : term157 = True.
Proof. exact (EQ_MP (@lem6206579) (@lem6206577)). Qed.
Lemma lem6206581 : term156 = True.
Proof. exact (TRANS (@lem6206576) (@lem6206580)). Qed.
Lemma lem6206582 : True = term156.
Proof. exact (SYM (@lem6206581)). Qed.
Lemma lem6206583 : term156.
Proof. exact (EQ_MP (@lem6206582) (@lem0)). Qed.
Lemma lem6206584 : term1067.
Proof. exact (@lem6206573 (@lem6206583)). Qed.
Lemma lem6206586 (m : nat) (n : nat) : (term192 m n) = (term193 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem6206587 : term1068 = term1069.
Proof. exact (@lem6206586 term1023 term6). Qed.
Lemma lem6206588 : term1070 = term1021.
Proof. exact (@lem996237 term1021). Qed.
Lemma lem6206589 : (term1070 = term1021) = (term1071 = term1023).
Proof. exact (@lem1007663 term1021 (BIT1 0) term1021). Qed.
Lemma lem6206590 : term1071 = term1023.
Proof. exact (EQ_MP (@lem6206589) (@lem6206588)). Qed.
Lemma lem6206591 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6206592 : term1072 = term1025.
Proof. exact (MK_COMB (@lem6206591) (@lem6206590)). Qed.
Lemma lem6206593 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem6206594 : term1069 = term1026.
Proof. exact (MK_COMB (@lem6206593) (@lem6206592)). Qed.
Lemma lem6206595 : term1068 = term1026.
Proof. exact (TRANS (@lem6206587) (@lem6206594)). Qed.
Lemma lem6206597 (m : nat) (n : nat) : (term130 m n) = (term131 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6206598 : term1073 = term715.
Proof. exact (@lem6206597 term614 term6). Qed.
Lemma lem6206599 : term713 = term612.
Proof. exact (@lem996237 term612). Qed.
Lemma lem6206600 : (term713 = term612) = (term714 = term614).
Proof. exact (@lem1007663 term612 (BIT1 0) term612). Qed.
Lemma lem6206601 : term714 = term614.
Proof. exact (EQ_MP (@lem6206600) (@lem6206599)). Qed.
Lemma lem6206602 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6206603 : term715 = term616.
Proof. exact (MK_COMB (@lem6206602) (@lem6206601)). Qed.
Lemma lem6206604 : term1073 = term616.
Proof. exact (TRANS (@lem6206598) (@lem6206603)). Qed.
Lemma lem6206605 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem6206606 : term1074 = term1060.
Proof. exact (MK_COMB (@lem6206605) (@lem6206604)). Qed.
Lemma lem6206607 : term1075 = term1062.
Proof. exact (MK_COMB (@lem6206606) (@lem6206595)). Qed.
Lemma lem6206610 : term1076 = term212.
Proof. exact (@lem1367771 term614 term22). Qed.
Lemma lem6206611 : term1077 = term1021.
Proof. exact (@lem707207). Qed.
Lemma lem6206612 : (term1077 = term1021) = (term1078 = term1023).
Proof. exact (@lem1006570 term612 term20 term1021). Qed.
Lemma lem6206613 : term1078 = term1023.
Proof. exact (EQ_MP (@lem6206612) (@lem6206611)). Qed.
Lemma lem6206614 : term1023 = term1078.
Proof. exact (SYM (@lem6206613)). Qed.
Lemma lem6206615 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6206616 : term1025 = term1079.
Proof. exact (MK_COMB (@lem6206615) (@lem6206614)). Qed.
Lemma lem6206617 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem6206618 : term1026 = term1080.
Proof. exact (MK_COMB (@lem6206617) (@lem6206616)). Qed.
Lemma lem6206619 : term1060 = term1060.
Proof. exact (eq_refl term1060). Qed.
Lemma lem6206620 : term1062 = term1076.
Proof. exact (MK_COMB (@lem6206619) (@lem6206618)). Qed.
Lemma lem6206621 : term1062 = term212.
Proof. exact (TRANS (@lem6206620) (@lem6206610)). Qed.
Lemma lem6206622 : term1075 = term212.
Proof. exact (TRANS (@lem6206607) (@lem6206621)). Qed.
Lemma lem6206623 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem6206624 : term1081 = term217.
Proof. exact (MK_COMB (@lem6206623) (@lem6206622)). Qed.
Lemma lem6206625 : term102 = term102.
Proof. exact (eq_refl term102). Qed.
Lemma lem6206626 : term1082 = term234.
Proof. exact (MK_COMB (@lem6206624) (@lem6206625)). Qed.
Lemma lem6206628 (m : nat) (n : nat) : (term192 m n) = (term193 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem6206629 : term234 = term235.
Proof. exact (@lem6206628 term22 term6). Qed.
Lemma lem6206630 : term35 = term20.
Proof. exact (@lem996237 term20). Qed.
Lemma lem6206631 : (term35 = term20) = (term36 = term22).
Proof. exact (@lem1007663 term20 (BIT1 0) term20). Qed.
Lemma lem6206632 : term36 = term22.
Proof. exact (EQ_MP (@lem6206631) (@lem6206630)). Qed.
Lemma lem6206633 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6206634 : term236 = term90.
Proof. exact (MK_COMB (@lem6206633) (@lem6206632)). Qed.
Lemma lem6206635 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem6206636 : term235 = term212.
Proof. exact (MK_COMB (@lem6206635) (@lem6206634)). Qed.
Lemma lem6206637 : term234 = term212.
Proof. exact (TRANS (@lem6206629) (@lem6206636)). Qed.
Lemma lem6206638 : term1082 = term212.
Proof. exact (TRANS (@lem6206626) (@lem6206637)). Qed.
Lemma lem6206640 (m : nat) (n : nat) : (term130 m n) = (term131 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6206641 : term132 = term133.
Proof. exact (@lem6206640 term6 term6). Qed.
Lemma lem6206642 : (term134 = (BIT1 0)) = (term135 = term6).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6206643 : term135 = term6.
Proof. exact (EQ_MP (@lem6206642) (@lem940073)). Qed.
Lemma lem6206644 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6206645 : term133 = term102.
Proof. exact (MK_COMB (@lem6206644) (@lem6206643)). Qed.
Lemma lem6206646 : term132 = term102.
Proof. exact (TRANS (@lem6206641) (@lem6206645)). Qed.
Lemma lem6206647 : term217 = term217.
Proof. exact (eq_refl term217). Qed.
Lemma lem6206648 : term724 = term234.
Proof. exact (MK_COMB (@lem6206647) (@lem6206646)). Qed.
Lemma lem6206650 (m : nat) (n : nat) : (term192 m n) = (term193 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem6206651 : term234 = term235.
Proof. exact (@lem6206650 term22 term6). Qed.
Lemma lem6206652 : term35 = term20.
Proof. exact (@lem996237 term20). Qed.
Lemma lem6206653 : (term35 = term20) = (term36 = term22).
Proof. exact (@lem1007663 term20 (BIT1 0) term20). Qed.
Lemma lem6206654 : term36 = term22.
Proof. exact (EQ_MP (@lem6206653) (@lem6206652)). Qed.
Lemma lem6206655 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6206656 : term236 = term90.
Proof. exact (MK_COMB (@lem6206655) (@lem6206654)). Qed.
Lemma lem6206657 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem6206658 : term235 = term212.
Proof. exact (MK_COMB (@lem6206657) (@lem6206656)). Qed.
Lemma lem6206659 : term234 = term212.
Proof. exact (TRANS (@lem6206651) (@lem6206658)). Qed.
Lemma lem6206660 : term724 = term212.
Proof. exact (TRANS (@lem6206648) (@lem6206659)). Qed.
Lemma lem6206661 : term212 = term724.
Proof. exact (SYM (@lem6206660)). Qed.
Lemma lem6206662 : term1082 = term724.
Proof. exact (TRANS (@lem6206638) (@lem6206661)). Qed.
Lemma lem6206663 : term1063 = term215.
Proof. exact (@lem6206584 (@lem6206662)). Qed.
Lemma lem6206664 : term1062 = term215.
Proof. exact (TRANS (@lem6206550) (@lem6206663)). Qed.
Lemma lem6206666 (x : real) : (term139 x) = x.
Proof. exact (EQ_MP (@lem1981475 x) (@lem1981474 x)). Qed.
Lemma lem6206667 : term215 = term212.
Proof. exact (@lem6206666 term212). Qed.
Lemma lem6206668 : term1062 = term212.
Proof. exact (TRANS (@lem6206664) (@lem6206667)). Qed.
Lemma lem6206669 (_79022 : int) : (term1059 _79022) = term725.
Proof. exact (MK_COMB (@lem6206541 _79022) (@lem6206668)). Qed.
Lemma lem6206670 (_79022 : int) : (term1058 _79022) = term725.
Proof. exact (TRANS (@lem6206431 _79022) (@lem6206669 _79022)). Qed.
Lemma lem6206671 : term725 = term212.
Proof. exact (@lem1982721 term212). Qed.
Lemma lem6206672 (_79022 : int) : (term1058 _79022) = term212.
Proof. exact (TRANS (@lem6206670 _79022) (@lem6206671)). Qed.
Lemma lem6206673 (_79021 : int) (_79022 : int) : (term1057 _79021 _79022) = term725.
Proof. exact (MK_COMB (@lem6206430 _79021) (@lem6206672 _79022)). Qed.
Lemma lem6206674 (_79021 : int) (_79022 : int) : (term1056 _79021 _79022) = term725.
Proof. exact (TRANS (@lem6206320 _79021 _79022) (@lem6206673 _79021 _79022)). Qed.
Lemma lem6206675 : term725 = term212.
Proof. exact (@lem1982721 term212). Qed.
Lemma lem6206676 (_79021 : int) (_79022 : int) : (term1056 _79021 _79022) = term212.
Proof. exact (TRANS (@lem6206674 _79021 _79022) (@lem6206675)). Qed.
Lemma lem6206677 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem6206678 (_79021 : int) (_79022 : int) : (term1083 _79021 _79022) = term727.
Proof. exact (MK_COMB (@lem6206677) (@lem6206676 _79021 _79022)). Qed.
Lemma lem6206679 : term65 = term65.
Proof. exact (eq_refl term65). Qed.
Lemma lem6206680 (_79021 : int) (_79022 : int) : (term1055 _79021 _79022) = term728.
Proof. exact (MK_COMB (@lem6206678 _79021 _79022) (@lem6206679)). Qed.
Lemma lem6206681 (_79021 : int) (_79022 : int) (h1 : term1008 _79021 _79022) : term728.
Proof. exact (EQ_MP (@lem6206680 _79021 _79022) (@lem6206319 _79021 _79022 h1)). Qed.
Lemma lem6206683 (y : real) (x : real) : (real_ge x y) = (real_le y x).
Proof. exact (EQ_MP (@lem1980260 y x) (@lem1980259 y x)). Qed.
Lemma lem6206684 : term728 = term729.
Proof. exact (@lem6206683 term65 term212). Qed.
Lemma lem6206686 (x : nat) : (term121 x) = (term122 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem6206687 : term212 = term215.
Proof. exact (@lem6206686 term22). Qed.
Lemma lem6206689 (x : nat) : (real_of_num x) = (term119 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6206690 : term65 = term120.
Proof. exact (@lem6206689 (NUMERAL 0)). Qed.
Lemma lem6206691 : real_le = real_le.
Proof. exact (eq_refl real_le). Qed.
Lemma lem6206692 : term67 = term274.
Proof. exact (MK_COMB (@lem6206691) (@lem6206690)). Qed.
Lemma lem6206693 : term729 = term730.
Proof. exact (MK_COMB (@lem6206692) (@lem6206687)). Qed.
Lemma lem6206694 : term731.
Proof. exact (@lem1980026 term65 term102 term212 term102). Qed.
Lemma lem6206696 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6206697 : term156 = term157.
Proof. exact (@lem6206696 (NUMERAL 0) term6). Qed.
Lemma lem6206698 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6206699 (h1 : term158 = (BIT1 0)) : term157 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6206700 : (term158 = (BIT1 0)) = (term157 = True).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6206699 h1) (fun h1 : term157 = True => @lem6206698)). Qed.
Lemma lem6206701 : term157 = True.
Proof. exact (EQ_MP (@lem6206700) (@lem6206698)). Qed.
Lemma lem6206702 : term156 = True.
Proof. exact (TRANS (@lem6206697) (@lem6206701)). Qed.
Lemma lem6206703 : True = term156.
Proof. exact (SYM (@lem6206702)). Qed.
Lemma lem6206704 : term156.
Proof. exact (EQ_MP (@lem6206703) (@lem0)). Qed.
Lemma lem6206705 : term732.
Proof. exact (@lem6206694 (@lem6206704)). Qed.
Lemma lem6206707 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6206708 : term156 = term157.
Proof. exact (@lem6206707 (NUMERAL 0) term6). Qed.
Lemma lem6206709 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6206710 (h1 : term158 = (BIT1 0)) : term157 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6206711 : (term158 = (BIT1 0)) = (term157 = True).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6206710 h1) (fun h1 : term157 = True => @lem6206709)). Qed.
Lemma lem6206712 : term157 = True.
Proof. exact (EQ_MP (@lem6206711) (@lem6206709)). Qed.
Lemma lem6206713 : term156 = True.
Proof. exact (TRANS (@lem6206708) (@lem6206712)). Qed.
Lemma lem6206714 : True = term156.
Proof. exact (SYM (@lem6206713)). Qed.
Lemma lem6206715 : term156.
Proof. exact (EQ_MP (@lem6206714) (@lem0)). Qed.
Lemma lem6206716 : term730 = term733.
Proof. exact (@lem6206705 (@lem6206715)). Qed.
Lemma lem6206718 (m : nat) (n : nat) : (term192 m n) = (term193 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem6206719 : term234 = term235.
Proof. exact (@lem6206718 term22 term6). Qed.
Lemma lem6206720 : term35 = term20.
Proof. exact (@lem996237 term20). Qed.
Lemma lem6206721 : (term35 = term20) = (term36 = term22).
Proof. exact (@lem1007663 term20 (BIT1 0) term20). Qed.
Lemma lem6206722 : term36 = term22.
Proof. exact (EQ_MP (@lem6206721) (@lem6206720)). Qed.
Lemma lem6206723 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6206724 : term236 = term90.
Proof. exact (MK_COMB (@lem6206723) (@lem6206722)). Qed.
Lemma lem6206725 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem6206726 : term235 = term212.
Proof. exact (MK_COMB (@lem6206725) (@lem6206724)). Qed.
Lemma lem6206727 : term234 = term212.
Proof. exact (TRANS (@lem6206719) (@lem6206726)). Qed.
Lemma lem6206729 (x : nat) : (term245 x) = term65.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem6206730 : term244 = term65.
Proof. exact (@lem6206729 term6). Qed.
Lemma lem6206731 : real_le = real_le.
Proof. exact (eq_refl real_le). Qed.
Lemma lem6206732 : term279 = term67.
Proof. exact (MK_COMB (@lem6206731) (@lem6206730)). Qed.
Lemma lem6206733 : term733 = term729.
Proof. exact (MK_COMB (@lem6206732) (@lem6206727)). Qed.
Lemma lem6206735 (m : nat) (n : nat) : (term280 m n) = (term281 m n).
Proof. exact (proj2 (@lem1365406 m n)). Qed.
Lemma lem6206736 : term729 = term734.
Proof. exact (@lem6206735 (NUMERAL 0) term22). Qed.
Lemma lem6206737 : term596 = term20.
Proof. exact (@lem912803). Qed.
Lemma lem6206738 (h1 : term596 = term20) : (term22 = (NUMERAL 0)) = False.
Proof. exact (@lem1013352 (BIT1 0) 0 term20 h1). Qed.
Lemma lem6206739 : (term596 = term20) = ((term22 = (NUMERAL 0)) = False).
Proof. exact (prop_ext (fun h1 : term596 = term20 => @lem6206738 h1) (fun h1 : (term22 = (NUMERAL 0)) = False => @lem6206737)). Qed.
Lemma lem6206740 : (term22 = (NUMERAL 0)) = False.
Proof. exact (EQ_MP (@lem6206739) (@lem6206737)). Qed.
Lemma lem6206741 : ((NUMERAL 0) = (NUMERAL 0)) = True.
Proof. exact (@lem1013364 0). Qed.
Lemma lem6206742 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6206743 : term283 = (and True).
Proof. exact (MK_COMB (@lem6206742) (@lem6206741)). Qed.
Lemma lem6206744 : term734 = (True /\ False).
Proof. exact (MK_COMB (@lem6206743) (@lem6206740)). Qed.
Lemma lem6206746 : (True /\ False) = False.
Proof. exact (proj1 (@lem1365106)). Qed.
Lemma lem6206747 : term734 = False.
Proof. exact (TRANS (@lem6206744) (@lem6206746)). Qed.
Lemma lem6206748 : term729 = False.
Proof. exact (TRANS (@lem6206736) (@lem6206747)). Qed.
Lemma lem6206749 : term733 = False.
Proof. exact (TRANS (@lem6206733) (@lem6206748)). Qed.
Lemma lem6206750 : term730 = False.
Proof. exact (TRANS (@lem6206716) (@lem6206749)). Qed.
Lemma lem6206751 : term729 = False.
Proof. exact (TRANS (@lem6206693) (@lem6206750)). Qed.
Lemma lem6206752 : term728 = False.
Proof. exact (TRANS (@lem6206684) (@lem6206751)). Qed.
Lemma lem6206753 (_79021 : int) (_79022 : int) (h1 : term1008 _79021 _79022) : False.
Proof. exact (EQ_MP (@lem6206752) (@lem6206681 _79021 _79022 h1)). Qed.
Lemma lem6206754 (_79021 : int) (_79022 : int) (h1 : term1084 _79021 _79022) : term1084 _79021 _79022.
Proof. exact (h1). Qed.
Lemma lem6206755 (_79021 : int) (_79022 : int) (h1 : term1084 _79021 _79022) : term1004 _79021 _79022.
Proof. exact (proj2 (@lem6206754 _79021 _79022 h1)). Qed.
Lemma lem6206757 (_79021 : int) (_79022 : int) (h1 : term1084 _79021 _79022) : term992 _79021 _79022.
Proof. exact (proj2 (@lem6206755 _79021 _79022 h1)). Qed.
Lemma lem6206759 (_79021 : int) (_79022 : int) (h1 : term1084 _79021 _79022) : term969 _79021 _79022.
Proof. exact (proj2 (@lem6206757 _79021 _79022 h1)). Qed.
Lemma lem6206760 (_79021 : int) (_79022 : int) (h1 : term1084 _79021 _79022) : term526 _79021 _79022.
Proof. exact (proj1 (@lem6206757 _79021 _79022 h1)). Qed.
Lemma lem6206762 (y : real) (x : real) : (real_gt x y) = (real_lt y x).
Proof. exact (EQ_MP (@lem1980266 y x) (@lem1980265 y x)). Qed.
Lemma lem6206763 : term586 = term587.
Proof. exact (@lem6206762 term65 term90). Qed.
Lemma lem6206765 (x : nat) : (real_of_num x) = (term119 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6206766 : term90 = term204.
Proof. exact (@lem6206765 term22). Qed.
Lemma lem6206768 (x : nat) : (real_of_num x) = (term119 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6206769 : term65 = term120.
Proof. exact (@lem6206768 (NUMERAL 0)). Qed.
Lemma lem6206770 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem6206771 : term588 = term589.
Proof. exact (MK_COMB (@lem6206770) (@lem6206769)). Qed.
Lemma lem6206772 : term587 = term590.
Proof. exact (MK_COMB (@lem6206771) (@lem6206766)). Qed.
Lemma lem6206773 : term591.
Proof. exact (@lem1980255 term65 term102 term90 term102). Qed.
Lemma lem6206775 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6206776 : term156 = term157.
Proof. exact (@lem6206775 (NUMERAL 0) term6). Qed.
Lemma lem6206777 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6206778 (h1 : term158 = (BIT1 0)) : term157 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6206779 : (term158 = (BIT1 0)) = (term157 = True).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6206778 h1) (fun h1 : term157 = True => @lem6206777)). Qed.
Lemma lem6206780 : term157 = True.
Proof. exact (EQ_MP (@lem6206779) (@lem6206777)). Qed.
Lemma lem6206781 : term156 = True.
Proof. exact (TRANS (@lem6206776) (@lem6206780)). Qed.
Lemma lem6206782 : True = term156.
Proof. exact (SYM (@lem6206781)). Qed.
Lemma lem6206783 : term156.
Proof. exact (EQ_MP (@lem6206782) (@lem0)). Qed.
Lemma lem6206784 : term592.
Proof. exact (@lem6206773 (@lem6206783)). Qed.
Lemma lem6206786 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6206787 : term156 = term157.
Proof. exact (@lem6206786 (NUMERAL 0) term6). Qed.
Lemma lem6206788 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6206789 (h1 : term158 = (BIT1 0)) : term157 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6206790 : (term158 = (BIT1 0)) = (term157 = True).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6206789 h1) (fun h1 : term157 = True => @lem6206788)). Qed.
Lemma lem6206791 : term157 = True.
Proof. exact (EQ_MP (@lem6206790) (@lem6206788)). Qed.
Lemma lem6206792 : term156 = True.
Proof. exact (TRANS (@lem6206787) (@lem6206791)). Qed.
Lemma lem6206793 : True = term156.
Proof. exact (SYM (@lem6206792)). Qed.
Lemma lem6206794 : term156.
Proof. exact (EQ_MP (@lem6206793) (@lem0)). Qed.
Lemma lem6206795 : term590 = term593.
Proof. exact (@lem6206784 (@lem6206794)). Qed.
Lemma lem6206797 (m : nat) (n : nat) : (term130 m n) = (term131 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6206798 : term237 = term236.
Proof. exact (@lem6206797 term22 term6). Qed.
Lemma lem6206799 : term35 = term20.
Proof. exact (@lem996237 term20). Qed.
Lemma lem6206800 : (term35 = term20) = (term36 = term22).
Proof. exact (@lem1007663 term20 (BIT1 0) term20). Qed.
Lemma lem6206801 : term36 = term22.
Proof. exact (EQ_MP (@lem6206800) (@lem6206799)). Qed.
Lemma lem6206802 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6206803 : term236 = term90.
Proof. exact (MK_COMB (@lem6206802) (@lem6206801)). Qed.
Lemma lem6206804 : term237 = term90.
Proof. exact (TRANS (@lem6206798) (@lem6206803)). Qed.
Lemma lem6206806 (x : nat) : (term245 x) = term65.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem6206807 : term244 = term65.
Proof. exact (@lem6206806 term6). Qed.
Lemma lem6206808 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem6206809 : term594 = term588.
Proof. exact (MK_COMB (@lem6206808) (@lem6206807)). Qed.
Lemma lem6206810 : term593 = term587.
Proof. exact (MK_COMB (@lem6206809) (@lem6206804)). Qed.
Lemma lem6206812 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6206813 : term587 = term595.
Proof. exact (@lem6206812 (NUMERAL 0) term22). Qed.
Lemma lem6206814 : term596 = term20.
Proof. exact (@lem912803). Qed.
Lemma lem6206815 (h1 : term596 = term20) : term595 = True.
Proof. exact (@lem1009824 (BIT1 0) 0 term20 h1). Qed.
Lemma lem6206816 : (term596 = term20) = (term595 = True).
Proof. exact (prop_ext (fun h1 : term596 = term20 => @lem6206815 h1) (fun h1 : term595 = True => @lem6206814)). Qed.
Lemma lem6206817 : term595 = True.
Proof. exact (EQ_MP (@lem6206816) (@lem6206814)). Qed.
Lemma lem6206818 : term587 = True.
Proof. exact (TRANS (@lem6206813) (@lem6206817)). Qed.
Lemma lem6206819 : term593 = True.
Proof. exact (TRANS (@lem6206810) (@lem6206818)). Qed.
Lemma lem6206820 : term590 = True.
Proof. exact (TRANS (@lem6206795) (@lem6206819)). Qed.
Lemma lem6206821 : term587 = True.
Proof. exact (TRANS (@lem6206772) (@lem6206820)). Qed.
Lemma lem6206822 : term586 = True.
Proof. exact (TRANS (@lem6206763) (@lem6206821)). Qed.
Lemma lem6206823 : True = term586.
Proof. exact (SYM (@lem6206822)). Qed.
Lemma lem6206824 : term586.
Proof. exact (EQ_MP (@lem6206823) (@lem0)). Qed.
Lemma lem6206825 (_79021 : int) (_79022 : int) (h1 : term1084 _79021 _79022) : term736 _79021 _79022.
Proof. exact (conj (@lem6206824) (@lem6206760 _79021 _79022 h1)). Qed.
Lemma lem6206827 (x : real) (y : real) : term598 x y.
Proof. exact (proj1 (@lem1988332 x y)). Qed.
Lemma lem6206828 (_79021 : int) (_79022 : int) : term737 _79021 _79022.
Proof. exact (@lem6206827 term90 (term523 _79021 _79022)). Qed.
Lemma lem6206829 (_79021 : int) (_79022 : int) (h1 : term1084 _79021 _79022) : term738 _79021 _79022.
Proof. exact (@lem6206828 _79021 _79022 (@lem6206825 _79021 _79022 h1)). Qed.
Lemma lem6206830 (_79021 : int) (_79022 : int) : (term739 _79021 _79022) = (term740 _79021 _79022).
Proof. exact (@lem1982781 (real_of_int _79021) term90 (term522 _79022)). Qed.
Lemma lem6206831 (_79022 : int) : (term741 _79022) = (term742 _79022).
Proof. exact (@lem1982781 (term541 _79022) term90 term212). Qed.
Lemma lem6206833 (x : nat) : (term121 x) = (term122 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem6206834 : term212 = term215.
Proof. exact (@lem6206833 term22). Qed.
Lemma lem6206836 (x : nat) : (real_of_num x) = (term119 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6206837 : term90 = term204.
Proof. exact (@lem6206836 term22). Qed.
Lemma lem6206838 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem6206839 : term92 = term605.
Proof. exact (MK_COMB (@lem6206838) (@lem6206837)). Qed.
Lemma lem6206840 : term623 = term624.
Proof. exact (MK_COMB (@lem6206839) (@lem6206834)). Qed.
Lemma lem6206841 : term624 = term625.
Proof. exact (@lem1981613 term90 term212 term102 term102). Qed.
Lemma lem6206843 (m : nat) (n : nat) : (term130 m n) = (term131 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6206844 : term132 = term133.
Proof. exact (@lem6206843 term6 term6). Qed.
Lemma lem6206845 : (term134 = (BIT1 0)) = (term135 = term6).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6206846 : term135 = term6.
Proof. exact (EQ_MP (@lem6206845) (@lem940073)). Qed.
Lemma lem6206847 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6206848 : term133 = term102.
Proof. exact (MK_COMB (@lem6206847) (@lem6206846)). Qed.
Lemma lem6206849 : term132 = term102.
Proof. exact (TRANS (@lem6206844) (@lem6206848)). Qed.
Lemma lem6206851 (m : nat) (n : nat) : (term609 m n) = (term193 m n).
Proof. exact (proj2 (@lem1367247 m n)). Qed.
Lemma lem6206852 : term623 = term626.
Proof. exact (@lem6206851 term22 term22). Qed.
Lemma lem6206853 : (term134 = (BIT1 0)) = (term627 = term170).
Proof. exact (@lem940532 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6206854 : term627 = term170.
Proof. exact (EQ_MP (@lem6206853) (@lem940073)). Qed.
Lemma lem6206855 : (term627 = term170) = (term628 = term172).
Proof. exact (@lem1008952 term20 term170). Qed.
Lemma lem6206856 : term628 = term172.
Proof. exact (EQ_MP (@lem6206855) (@lem6206854)). Qed.
Lemma lem6206857 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6206858 : term629 = term154.
Proof. exact (MK_COMB (@lem6206857) (@lem6206856)). Qed.
Lemma lem6206859 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem6206860 : term626 = term198.
Proof. exact (MK_COMB (@lem6206859) (@lem6206858)). Qed.
Lemma lem6206861 : term623 = term198.
Proof. exact (TRANS (@lem6206852) (@lem6206860)). Qed.
Lemma lem6206862 : real_div = real_div.
Proof. exact (eq_refl real_div). Qed.
Lemma lem6206863 : term630 = term200.
Proof. exact (MK_COMB (@lem6206862) (@lem6206861)). Qed.
Lemma lem6206864 : term625 = term201.
Proof. exact (MK_COMB (@lem6206863) (@lem6206849)). Qed.
Lemma lem6206865 : term624 = term201.
Proof. exact (TRANS (@lem6206841) (@lem6206864)). Qed.
Lemma lem6206866 : term623 = term201.
Proof. exact (TRANS (@lem6206840) (@lem6206865)). Qed.
Lemma lem6206868 (x : real) : (term139 x) = x.
Proof. exact (EQ_MP (@lem1982628 x) (@lem1982627 x)). Qed.
Lemma lem6206869 : term201 = term198.
Proof. exact (@lem6206868 term198). Qed.
Lemma lem6206870 : term623 = term198.
Proof. exact (TRANS (@lem6206866) (@lem6206869)). Qed.
Lemma lem6206871 (_79022 : int) : (term743 _79022) = (term744 _79022).
Proof. exact (@lem1982749 term90 term123 (real_of_int _79022)). Qed.
Lemma lem6206873 (x : nat) : (term121 x) = (term122 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem6206874 : term123 = term124.
Proof. exact (@lem6206873 term6). Qed.
Lemma lem6206876 (x : nat) : (real_of_num x) = (term119 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6206877 : term90 = term204.
Proof. exact (@lem6206876 term22). Qed.
Lemma lem6206878 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem6206879 : term92 = term605.
Proof. exact (MK_COMB (@lem6206878) (@lem6206877)). Qed.
Lemma lem6206880 : term745 = term746.
Proof. exact (MK_COMB (@lem6206879) (@lem6206874)). Qed.
Lemma lem6206881 : term746 = term747.
Proof. exact (@lem1981613 term90 term123 term102 term102). Qed.
Lemma lem6206883 (m : nat) (n : nat) : (term130 m n) = (term131 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6206884 : term132 = term133.
Proof. exact (@lem6206883 term6 term6). Qed.
Lemma lem6206885 : (term134 = (BIT1 0)) = (term135 = term6).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6206886 : term135 = term6.
Proof. exact (EQ_MP (@lem6206885) (@lem940073)). Qed.
Lemma lem6206887 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6206888 : term133 = term102.
Proof. exact (MK_COMB (@lem6206887) (@lem6206886)). Qed.
Lemma lem6206889 : term132 = term102.
Proof. exact (TRANS (@lem6206884) (@lem6206888)). Qed.
Lemma lem6206891 (m : nat) (n : nat) : (term609 m n) = (term193 m n).
Proof. exact (proj2 (@lem1367247 m n)). Qed.
Lemma lem6206892 : term745 = term235.
Proof. exact (@lem6206891 term22 term6). Qed.
Lemma lem6206893 : term35 = term20.
Proof. exact (@lem996237 term20). Qed.
Lemma lem6206894 : (term35 = term20) = (term36 = term22).
Proof. exact (@lem1007663 term20 (BIT1 0) term20). Qed.
Lemma lem6206895 : term36 = term22.
Proof. exact (EQ_MP (@lem6206894) (@lem6206893)). Qed.
Lemma lem6206896 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6206897 : term236 = term90.
Proof. exact (MK_COMB (@lem6206896) (@lem6206895)). Qed.
Lemma lem6206898 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem6206899 : term235 = term212.
Proof. exact (MK_COMB (@lem6206898) (@lem6206897)). Qed.
Lemma lem6206900 : term745 = term212.
Proof. exact (TRANS (@lem6206892) (@lem6206899)). Qed.
Lemma lem6206901 : real_div = real_div.
Proof. exact (eq_refl real_div). Qed.
Lemma lem6206902 : term748 = term214.
Proof. exact (MK_COMB (@lem6206901) (@lem6206900)). Qed.
Lemma lem6206903 : term747 = term215.
Proof. exact (MK_COMB (@lem6206902) (@lem6206889)). Qed.
Lemma lem6206904 : term746 = term215.
Proof. exact (TRANS (@lem6206881) (@lem6206903)). Qed.
Lemma lem6206905 : term745 = term215.
Proof. exact (TRANS (@lem6206880) (@lem6206904)). Qed.
Lemma lem6206907 (x : real) : (term139 x) = x.
Proof. exact (EQ_MP (@lem1982628 x) (@lem1982627 x)). Qed.
Lemma lem6206908 : term215 = term212.
Proof. exact (@lem6206907 term212). Qed.
Lemma lem6206909 : term745 = term212.
Proof. exact (TRANS (@lem6206905) (@lem6206908)). Qed.
Lemma lem6206910 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem6206911 : term749 = term217.
Proof. exact (MK_COMB (@lem6206910) (@lem6206909)). Qed.
Lemma lem6206912 (_79022 : int) : (real_of_int _79022) = (real_of_int _79022).
Proof. exact (eq_refl (real_of_int _79022)). Qed.
Lemma lem6206913 (_79022 : int) : (term744 _79022) = (term218 _79022).
Proof. exact (MK_COMB (@lem6206911) (@lem6206912 _79022)). Qed.
Lemma lem6206914 (_79022 : int) : (term743 _79022) = (term218 _79022).
Proof. exact (TRANS (@lem6206871 _79022) (@lem6206913 _79022)). Qed.
Lemma lem6206915 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem6206916 (_79022 : int) : (term750 _79022) = (term220 _79022).
Proof. exact (MK_COMB (@lem6206915) (@lem6206914 _79022)). Qed.
Lemma lem6206917 (_79022 : int) : (term742 _79022) = (term221 _79022).
Proof. exact (MK_COMB (@lem6206916 _79022) (@lem6206870)). Qed.
Lemma lem6206918 (_79022 : int) : (term741 _79022) = (term221 _79022).
Proof. exact (TRANS (@lem6206831 _79022) (@lem6206917 _79022)). Qed.
Lemma lem6206921 (_79021 : int) : (term95 _79021) = (term95 _79021).
Proof. exact (eq_refl (term95 _79021)). Qed.
Lemma lem6206922 (_79021 : int) (_79022 : int) : (term740 _79021 _79022) = (term751 _79021 _79022).
Proof. exact (MK_COMB (@lem6206921 _79021) (@lem6206918 _79022)). Qed.
Lemma lem6206923 (_79021 : int) (_79022 : int) : (term739 _79021 _79022) = (term751 _79021 _79022).
Proof. exact (TRANS (@lem6206830 _79021 _79022) (@lem6206922 _79021 _79022)). Qed.
Lemma lem6206924 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem6206925 (_79021 : int) (_79022 : int) : (term752 _79021 _79022) = (term753 _79021 _79022).
Proof. exact (MK_COMB (@lem6206924) (@lem6206923 _79021 _79022)). Qed.
Lemma lem6206926 : term65 = term65.
Proof. exact (eq_refl term65). Qed.
Lemma lem6206927 (_79021 : int) (_79022 : int) : (term738 _79021 _79022) = (term754 _79021 _79022).
Proof. exact (MK_COMB (@lem6206925 _79021 _79022) (@lem6206926)). Qed.
Lemma lem6206928 (_79021 : int) (_79022 : int) (h1 : term1084 _79021 _79022) : term754 _79021 _79022.
Proof. exact (EQ_MP (@lem6206927 _79021 _79022) (@lem6206829 _79021 _79022 h1)). Qed.
Lemma lem6206930 (y : real) (x : real) : (real_gt x y) = (real_lt y x).
Proof. exact (EQ_MP (@lem1980266 y x) (@lem1980265 y x)). Qed.
Lemma lem6206931 : term755 = term156.
Proof. exact (@lem6206930 term65 term102). Qed.
Lemma lem6206933 (x : nat) : (real_of_num x) = (term119 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6206934 : term102 = term147.
Proof. exact (@lem6206933 term6). Qed.
Lemma lem6206936 (x : nat) : (real_of_num x) = (term119 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6206937 : term65 = term120.
Proof. exact (@lem6206936 (NUMERAL 0)). Qed.
Lemma lem6206938 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem6206939 : term588 = term589.
Proof. exact (MK_COMB (@lem6206938) (@lem6206937)). Qed.
Lemma lem6206940 : term156 = term756.
Proof. exact (MK_COMB (@lem6206939) (@lem6206934)). Qed.
Lemma lem6206941 : term757.
Proof. exact (@lem1980255 term65 term102 term102 term102). Qed.
Lemma lem6206943 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6206944 : term156 = term157.
Proof. exact (@lem6206943 (NUMERAL 0) term6). Qed.
Lemma lem6206945 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6206946 (h1 : term158 = (BIT1 0)) : term157 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6206947 : (term158 = (BIT1 0)) = (term157 = True).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6206946 h1) (fun h1 : term157 = True => @lem6206945)). Qed.
Lemma lem6206948 : term157 = True.
Proof. exact (EQ_MP (@lem6206947) (@lem6206945)). Qed.
Lemma lem6206949 : term156 = True.
Proof. exact (TRANS (@lem6206944) (@lem6206948)). Qed.
Lemma lem6206950 : True = term156.
Proof. exact (SYM (@lem6206949)). Qed.
Lemma lem6206951 : term156.
Proof. exact (EQ_MP (@lem6206950) (@lem0)). Qed.
Lemma lem6206952 : term758.
Proof. exact (@lem6206941 (@lem6206951)). Qed.
Lemma lem6206954 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6206955 : term156 = term157.
Proof. exact (@lem6206954 (NUMERAL 0) term6). Qed.
Lemma lem6206956 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6206957 (h1 : term158 = (BIT1 0)) : term157 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6206958 : (term158 = (BIT1 0)) = (term157 = True).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6206957 h1) (fun h1 : term157 = True => @lem6206956)). Qed.
Lemma lem6206959 : term157 = True.
Proof. exact (EQ_MP (@lem6206958) (@lem6206956)). Qed.
Lemma lem6206960 : term156 = True.
Proof. exact (TRANS (@lem6206955) (@lem6206959)). Qed.
Lemma lem6206961 : True = term156.
Proof. exact (SYM (@lem6206960)). Qed.
Lemma lem6206962 : term156.
Proof. exact (EQ_MP (@lem6206961) (@lem0)). Qed.
Lemma lem6206963 : term756 = term759.
Proof. exact (@lem6206952 (@lem6206962)). Qed.
Lemma lem6206965 (m : nat) (n : nat) : (term130 m n) = (term131 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6206966 : term132 = term133.
Proof. exact (@lem6206965 term6 term6). Qed.
Lemma lem6206967 : (term134 = (BIT1 0)) = (term135 = term6).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6206968 : term135 = term6.
Proof. exact (EQ_MP (@lem6206967) (@lem940073)). Qed.
Lemma lem6206969 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6206970 : term133 = term102.
Proof. exact (MK_COMB (@lem6206969) (@lem6206968)). Qed.
Lemma lem6206971 : term132 = term102.
Proof. exact (TRANS (@lem6206966) (@lem6206970)). Qed.
Lemma lem6206973 (x : nat) : (term245 x) = term65.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem6206974 : term244 = term65.
Proof. exact (@lem6206973 term6). Qed.
Lemma lem6206975 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem6206976 : term594 = term588.
Proof. exact (MK_COMB (@lem6206975) (@lem6206974)). Qed.
Lemma lem6206977 : term759 = term156.
Proof. exact (MK_COMB (@lem6206976) (@lem6206971)). Qed.
Lemma lem6206979 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6206980 : term156 = term157.
Proof. exact (@lem6206979 (NUMERAL 0) term6). Qed.
Lemma lem6206981 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6206982 (h1 : term158 = (BIT1 0)) : term157 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6206983 : (term158 = (BIT1 0)) = (term157 = True).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6206982 h1) (fun h1 : term157 = True => @lem6206981)). Qed.
Lemma lem6206984 : term157 = True.
Proof. exact (EQ_MP (@lem6206983) (@lem6206981)). Qed.
Lemma lem6206985 : term156 = True.
Proof. exact (TRANS (@lem6206980) (@lem6206984)). Qed.
Lemma lem6206986 : term759 = True.
Proof. exact (TRANS (@lem6206977) (@lem6206985)). Qed.
Lemma lem6206987 : term756 = True.
Proof. exact (TRANS (@lem6206963) (@lem6206986)). Qed.
Lemma lem6206988 : term156 = True.
Proof. exact (TRANS (@lem6206940) (@lem6206987)). Qed.
Lemma lem6206989 : term755 = True.
Proof. exact (TRANS (@lem6206931) (@lem6206988)). Qed.
Lemma lem6206990 : True = term755.
Proof. exact (SYM (@lem6206989)). Qed.
Lemma lem6206991 : term755.
Proof. exact (EQ_MP (@lem6206990) (@lem0)). Qed.
Lemma lem6206992 (_79021 : int) (_79022 : int) (h1 : term1084 _79021 _79022) : term1085 _79021 _79022.
Proof. exact (conj (@lem6206991) (@lem6206759 _79021 _79022 h1)). Qed.
Lemma lem6206994 (x : real) (y : real) : term598 x y.
Proof. exact (proj1 (@lem1988332 x y)). Qed.
Lemma lem6206995 (_79021 : int) (_79022 : int) : term1086 _79021 _79022.
Proof. exact (@lem6206994 term102 (term966 _79021 _79022)). Qed.
Lemma lem6206996 (_79021 : int) (_79022 : int) (h1 : term1084 _79021 _79022) : term1087 _79021 _79022.
Proof. exact (@lem6206995 _79021 _79022 (@lem6206992 _79021 _79022 h1)). Qed.
Lemma lem6206997 (_79021 : int) (_79022 : int) : (term1088 _79021 _79022) = (term966 _79021 _79022).
Proof. exact (@lem1982733 (term966 _79021 _79022)). Qed.
Lemma lem6206998 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem6206999 (_79021 : int) (_79022 : int) : (term1089 _79021 _79022) = (term968 _79021 _79022).
Proof. exact (MK_COMB (@lem6206998) (@lem6206997 _79021 _79022)). Qed.
Lemma lem6207000 : term65 = term65.
Proof. exact (eq_refl term65). Qed.
Lemma lem6207001 (_79021 : int) (_79022 : int) : (term1087 _79021 _79022) = (term969 _79021 _79022).
Proof. exact (MK_COMB (@lem6206999 _79021 _79022) (@lem6207000)). Qed.
Lemma lem6207002 (_79021 : int) (_79022 : int) (h1 : term1084 _79021 _79022) : term969 _79021 _79022.
Proof. exact (EQ_MP (@lem6207001 _79021 _79022) (@lem6206996 _79021 _79022 h1)). Qed.
Lemma lem6207003 (_79021 : int) (_79022 : int) (h1 : term1084 _79021 _79022) : term1090 _79021 _79022.
Proof. exact (conj (@lem6207002 _79021 _79022 h1) (@lem6206928 _79021 _79022 h1)). Qed.
Lemma lem6207005 (x : real) (y : real) : term665 x y.
Proof. exact (proj1 (@lem1988342 x y)). Qed.
Lemma lem6207006 (_79021 : int) (_79022 : int) : term1091 _79021 _79022.
Proof. exact (@lem6207005 (term966 _79021 _79022) (term751 _79021 _79022)). Qed.
Lemma lem6207007 (_79021 : int) (_79022 : int) (h1 : term1084 _79021 _79022) : term1092 _79021 _79022.
Proof. exact (@lem6207006 _79021 _79022 (@lem6207003 _79021 _79022 h1)). Qed.
Lemma lem6207008 (_79021 : int) (_79022 : int) : (term1093 _79021 _79022) = (term1094 _79021 _79022).
Proof. exact (@lem1982753 (term218 _79021) (term93 _79021) (term98 _79022) (term221 _79022)). Qed.
Lemma lem6207009 (_79021 : int) : (term770 _79021) = (term771 _79021).
Proof. exact (@lem1982711 term212 term90 (real_of_int _79021)). Qed.
Lemma lem6207011 (x : nat) : (real_of_num x) = (term119 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6207012 : term90 = term204.
Proof. exact (@lem6207011 term22). Qed.
Lemma lem6207014 (x : nat) : (term121 x) = (term122 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem6207015 : term212 = term215.
Proof. exact (@lem6207014 term22). Qed.
Lemma lem6207016 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem6207017 : term772 = term773.
Proof. exact (MK_COMB (@lem6207016) (@lem6207015)). Qed.
Lemma lem6207018 : term774 = term775.
Proof. exact (MK_COMB (@lem6207017) (@lem6207012)). Qed.
Lemma lem6207019 : term776.
Proof. exact (@lem1981473 term212 term102 term90 term102 term65 term102). Qed.
Lemma lem6207021 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6207022 : term156 = term157.
Proof. exact (@lem6207021 (NUMERAL 0) term6). Qed.
Lemma lem6207023 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6207024 (h1 : term158 = (BIT1 0)) : term157 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6207025 : (term158 = (BIT1 0)) = (term157 = True).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6207024 h1) (fun h1 : term157 = True => @lem6207023)). Qed.
Lemma lem6207026 : term157 = True.
Proof. exact (EQ_MP (@lem6207025) (@lem6207023)). Qed.
Lemma lem6207027 : term156 = True.
Proof. exact (TRANS (@lem6207022) (@lem6207026)). Qed.
Lemma lem6207028 : True = term156.
Proof. exact (SYM (@lem6207027)). Qed.
Lemma lem6207029 : term156.
Proof. exact (EQ_MP (@lem6207028) (@lem0)). Qed.
Lemma lem6207030 : term777.
Proof. exact (@lem6207019 (@lem6207029)). Qed.
Lemma lem6207032 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6207033 : term156 = term157.
Proof. exact (@lem6207032 (NUMERAL 0) term6). Qed.
Lemma lem6207034 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6207035 (h1 : term158 = (BIT1 0)) : term157 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6207036 : (term158 = (BIT1 0)) = (term157 = True).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6207035 h1) (fun h1 : term157 = True => @lem6207034)). Qed.
Lemma lem6207037 : term157 = True.
Proof. exact (EQ_MP (@lem6207036) (@lem6207034)). Qed.
Lemma lem6207038 : term156 = True.
Proof. exact (TRANS (@lem6207033) (@lem6207037)). Qed.
Lemma lem6207039 : True = term156.
Proof. exact (SYM (@lem6207038)). Qed.
Lemma lem6207040 : term156.
Proof. exact (EQ_MP (@lem6207039) (@lem0)). Qed.
Lemma lem6207041 : term778.
Proof. exact (@lem6207030 (@lem6207040)). Qed.
Lemma lem6207043 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6207044 : term156 = term157.
Proof. exact (@lem6207043 (NUMERAL 0) term6). Qed.
Lemma lem6207045 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6207046 (h1 : term158 = (BIT1 0)) : term157 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6207047 : (term158 = (BIT1 0)) = (term157 = True).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6207046 h1) (fun h1 : term157 = True => @lem6207045)). Qed.
Lemma lem6207048 : term157 = True.
Proof. exact (EQ_MP (@lem6207047) (@lem6207045)). Qed.
Lemma lem6207049 : term156 = True.
Proof. exact (TRANS (@lem6207044) (@lem6207048)). Qed.
Lemma lem6207050 : True = term156.
Proof. exact (SYM (@lem6207049)). Qed.
Lemma lem6207051 : term156.
Proof. exact (EQ_MP (@lem6207050) (@lem0)). Qed.
Lemma lem6207052 : term779.
Proof. exact (@lem6207041 (@lem6207051)). Qed.
Lemma lem6207054 (m : nat) (n : nat) : (term130 m n) = (term131 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6207055 : term237 = term236.
Proof. exact (@lem6207054 term22 term6). Qed.
Lemma lem6207056 : term35 = term20.
Proof. exact (@lem996237 term20). Qed.
Lemma lem6207057 : (term35 = term20) = (term36 = term22).
Proof. exact (@lem1007663 term20 (BIT1 0) term20). Qed.
Lemma lem6207058 : term36 = term22.
Proof. exact (EQ_MP (@lem6207057) (@lem6207056)). Qed.
Lemma lem6207059 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6207060 : term236 = term90.
Proof. exact (MK_COMB (@lem6207059) (@lem6207058)). Qed.
Lemma lem6207061 : term237 = term90.
Proof. exact (TRANS (@lem6207055) (@lem6207060)). Qed.
Lemma lem6207063 (m : nat) (n : nat) : (term192 m n) = (term193 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem6207064 : term234 = term235.
Proof. exact (@lem6207063 term22 term6). Qed.
Lemma lem6207065 : term35 = term20.
Proof. exact (@lem996237 term20). Qed.
Lemma lem6207066 : (term35 = term20) = (term36 = term22).
Proof. exact (@lem1007663 term20 (BIT1 0) term20). Qed.
Lemma lem6207067 : term36 = term22.
Proof. exact (EQ_MP (@lem6207066) (@lem6207065)). Qed.
Lemma lem6207068 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6207069 : term236 = term90.
Proof. exact (MK_COMB (@lem6207068) (@lem6207067)). Qed.
Lemma lem6207070 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem6207071 : term235 = term212.
Proof. exact (MK_COMB (@lem6207070) (@lem6207069)). Qed.
Lemma lem6207072 : term234 = term212.
Proof. exact (TRANS (@lem6207064) (@lem6207071)). Qed.
Lemma lem6207073 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem6207074 : term780 = term772.
Proof. exact (MK_COMB (@lem6207073) (@lem6207072)). Qed.
Lemma lem6207075 : term781 = term774.
Proof. exact (MK_COMB (@lem6207074) (@lem6207061)). Qed.
Lemma lem6207077 (m : nat) : (term682 m) = term65.
Proof. exact (proj1 (@lem1367303 m)). Qed.
Lemma lem6207078 : term774 = term65.
Proof. exact (@lem6207077 term22). Qed.
Lemma lem6207079 : term781 = term65.
Proof. exact (TRANS (@lem6207075) (@lem6207078)). Qed.
Lemma lem6207080 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem6207081 : term782 = term242.
Proof. exact (MK_COMB (@lem6207080) (@lem6207079)). Qed.
Lemma lem6207082 : term102 = term102.
Proof. exact (eq_refl term102). Qed.
Lemma lem6207083 : term783 = term244.
Proof. exact (MK_COMB (@lem6207081) (@lem6207082)). Qed.
Lemma lem6207085 (x : nat) : (term245 x) = term65.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem6207086 : term244 = term65.
Proof. exact (@lem6207085 term6). Qed.
Lemma lem6207087 : term783 = term65.
Proof. exact (TRANS (@lem6207083) (@lem6207086)). Qed.
Lemma lem6207089 (m : nat) (n : nat) : (term130 m n) = (term131 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6207090 : term132 = term133.
Proof. exact (@lem6207089 term6 term6). Qed.
Lemma lem6207091 : (term134 = (BIT1 0)) = (term135 = term6).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6207092 : term135 = term6.
Proof. exact (EQ_MP (@lem6207091) (@lem940073)). Qed.
Lemma lem6207093 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6207094 : term133 = term102.
Proof. exact (MK_COMB (@lem6207093) (@lem6207092)). Qed.
Lemma lem6207095 : term132 = term102.
Proof. exact (TRANS (@lem6207090) (@lem6207094)). Qed.
Lemma lem6207096 : term242 = term242.
Proof. exact (eq_refl term242). Qed.
Lemma lem6207097 : term246 = term244.
Proof. exact (MK_COMB (@lem6207096) (@lem6207095)). Qed.
Lemma lem6207099 (x : nat) : (term245 x) = term65.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem6207100 : term244 = term65.
Proof. exact (@lem6207099 term6). Qed.
Lemma lem6207101 : term246 = term65.
Proof. exact (TRANS (@lem6207097) (@lem6207100)). Qed.
Lemma lem6207102 : term65 = term246.
Proof. exact (SYM (@lem6207101)). Qed.
Lemma lem6207103 : term783 = term246.
Proof. exact (TRANS (@lem6207087) (@lem6207102)). Qed.
Lemma lem6207104 : term775 = term120.
Proof. exact (@lem6207052 (@lem6207103)). Qed.
Lemma lem6207105 : term774 = term120.
Proof. exact (TRANS (@lem6207018) (@lem6207104)). Qed.
Lemma lem6207107 (x : real) : (term139 x) = x.
Proof. exact (EQ_MP (@lem1981475 x) (@lem1981474 x)). Qed.
Lemma lem6207108 : term120 = term65.
Proof. exact (@lem6207107 term65). Qed.
Lemma lem6207109 : term774 = term65.
Proof. exact (TRANS (@lem6207105) (@lem6207108)). Qed.
Lemma lem6207110 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem6207111 : term784 = term242.
Proof. exact (MK_COMB (@lem6207110) (@lem6207109)). Qed.
Lemma lem6207112 (_79021 : int) : (real_of_int _79021) = (real_of_int _79021).
Proof. exact (eq_refl (real_of_int _79021)). Qed.
Lemma lem6207113 (_79021 : int) : (term771 _79021) = (term248 _79021).
Proof. exact (MK_COMB (@lem6207111) (@lem6207112 _79021)). Qed.
Lemma lem6207114 (_79021 : int) : (term770 _79021) = (term248 _79021).
Proof. exact (TRANS (@lem6207009 _79021) (@lem6207113 _79021)). Qed.
Lemma lem6207115 (_79021 : int) : (term248 _79021) = term65.
Proof. exact (@lem1982719 (real_of_int _79021)). Qed.
Lemma lem6207116 (_79021 : int) : (term770 _79021) = term65.
Proof. exact (TRANS (@lem6207114 _79021) (@lem6207115 _79021)). Qed.
Lemma lem6207117 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem6207118 (_79021 : int) : (term785 _79021) = term250.
Proof. exact (MK_COMB (@lem6207117) (@lem6207116 _79021)). Qed.
Lemma lem6207119 (_79022 : int) : (term222 _79022) = (term223 _79022).
Proof. exact (@lem1982753 (term93 _79022) (term218 _79022) term97 term198). Qed.
Lemma lem6207120 (_79022 : int) : (term224 _79022) = (term225 _79022).
Proof. exact (@lem1982711 term90 term212 (real_of_int _79022)). Qed.
Lemma lem6207122 (x : nat) : (term121 x) = (term122 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem6207123 : term212 = term215.
Proof. exact (@lem6207122 term22). Qed.
Lemma lem6207125 (x : nat) : (real_of_num x) = (term119 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6207126 : term90 = term204.
Proof. exact (@lem6207125 term22). Qed.
Lemma lem6207127 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem6207128 : term226 = term227.
Proof. exact (MK_COMB (@lem6207127) (@lem6207126)). Qed.
Lemma lem6207129 : term228 = term229.
Proof. exact (MK_COMB (@lem6207128) (@lem6207123)). Qed.
Lemma lem6207130 : term230.
Proof. exact (@lem1981473 term90 term102 term212 term102 term65 term102). Qed.
Lemma lem6207132 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6207133 : term156 = term157.
Proof. exact (@lem6207132 (NUMERAL 0) term6). Qed.
Lemma lem6207134 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6207135 (h1 : term158 = (BIT1 0)) : term157 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6207136 : (term158 = (BIT1 0)) = (term157 = True).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6207135 h1) (fun h1 : term157 = True => @lem6207134)). Qed.
Lemma lem6207137 : term157 = True.
Proof. exact (EQ_MP (@lem6207136) (@lem6207134)). Qed.
Lemma lem6207138 : term156 = True.
Proof. exact (TRANS (@lem6207133) (@lem6207137)). Qed.
Lemma lem6207139 : True = term156.
Proof. exact (SYM (@lem6207138)). Qed.
Lemma lem6207140 : term156.
Proof. exact (EQ_MP (@lem6207139) (@lem0)). Qed.
Lemma lem6207141 : term231.
Proof. exact (@lem6207130 (@lem6207140)). Qed.
Lemma lem6207143 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6207144 : term156 = term157.
Proof. exact (@lem6207143 (NUMERAL 0) term6). Qed.
Lemma lem6207145 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6207146 (h1 : term158 = (BIT1 0)) : term157 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6207147 : (term158 = (BIT1 0)) = (term157 = True).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6207146 h1) (fun h1 : term157 = True => @lem6207145)). Qed.
Lemma lem6207148 : term157 = True.
Proof. exact (EQ_MP (@lem6207147) (@lem6207145)). Qed.
Lemma lem6207149 : term156 = True.
Proof. exact (TRANS (@lem6207144) (@lem6207148)). Qed.
Lemma lem6207150 : True = term156.
Proof. exact (SYM (@lem6207149)). Qed.
Lemma lem6207151 : term156.
Proof. exact (EQ_MP (@lem6207150) (@lem0)). Qed.
Lemma lem6207152 : term232.
Proof. exact (@lem6207141 (@lem6207151)). Qed.
Lemma lem6207154 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6207155 : term156 = term157.
Proof. exact (@lem6207154 (NUMERAL 0) term6). Qed.
Lemma lem6207156 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6207157 (h1 : term158 = (BIT1 0)) : term157 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6207158 : (term158 = (BIT1 0)) = (term157 = True).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6207157 h1) (fun h1 : term157 = True => @lem6207156)). Qed.
Lemma lem6207159 : term157 = True.
Proof. exact (EQ_MP (@lem6207158) (@lem6207156)). Qed.
Lemma lem6207160 : term156 = True.
Proof. exact (TRANS (@lem6207155) (@lem6207159)). Qed.
Lemma lem6207161 : True = term156.
Proof. exact (SYM (@lem6207160)). Qed.
Lemma lem6207162 : term156.
Proof. exact (EQ_MP (@lem6207161) (@lem0)). Qed.
Lemma lem6207163 : term233.
Proof. exact (@lem6207152 (@lem6207162)). Qed.
Lemma lem6207165 (m : nat) (n : nat) : (term192 m n) = (term193 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem6207166 : term234 = term235.
Proof. exact (@lem6207165 term22 term6). Qed.
Lemma lem6207167 : term35 = term20.
Proof. exact (@lem996237 term20). Qed.
Lemma lem6207168 : (term35 = term20) = (term36 = term22).
Proof. exact (@lem1007663 term20 (BIT1 0) term20). Qed.
Lemma lem6207169 : term36 = term22.
Proof. exact (EQ_MP (@lem6207168) (@lem6207167)). Qed.
Lemma lem6207170 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6207171 : term236 = term90.
Proof. exact (MK_COMB (@lem6207170) (@lem6207169)). Qed.
Lemma lem6207172 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem6207173 : term235 = term212.
Proof. exact (MK_COMB (@lem6207172) (@lem6207171)). Qed.
Lemma lem6207174 : term234 = term212.
Proof. exact (TRANS (@lem6207166) (@lem6207173)). Qed.
Lemma lem6207176 (m : nat) (n : nat) : (term130 m n) = (term131 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6207177 : term237 = term236.
Proof. exact (@lem6207176 term22 term6). Qed.
Lemma lem6207178 : term35 = term20.
Proof. exact (@lem996237 term20). Qed.
Lemma lem6207179 : (term35 = term20) = (term36 = term22).
Proof. exact (@lem1007663 term20 (BIT1 0) term20). Qed.
Lemma lem6207180 : term36 = term22.
Proof. exact (EQ_MP (@lem6207179) (@lem6207178)). Qed.
Lemma lem6207181 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6207182 : term236 = term90.
Proof. exact (MK_COMB (@lem6207181) (@lem6207180)). Qed.
Lemma lem6207183 : term237 = term90.
Proof. exact (TRANS (@lem6207177) (@lem6207182)). Qed.
Lemma lem6207184 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem6207185 : term238 = term226.
Proof. exact (MK_COMB (@lem6207184) (@lem6207183)). Qed.
Lemma lem6207186 : term239 = term228.
Proof. exact (MK_COMB (@lem6207185) (@lem6207174)). Qed.
Lemma lem6207188 (m : nat) : (term240 m) = term65.
Proof. exact (proj2 (@lem1367303 m)). Qed.
Lemma lem6207189 : term228 = term65.
Proof. exact (@lem6207188 term22). Qed.
Lemma lem6207190 : term239 = term65.
Proof. exact (TRANS (@lem6207186) (@lem6207189)). Qed.
Lemma lem6207191 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem6207192 : term241 = term242.
Proof. exact (MK_COMB (@lem6207191) (@lem6207190)). Qed.
Lemma lem6207193 : term102 = term102.
Proof. exact (eq_refl term102). Qed.
Lemma lem6207194 : term243 = term244.
Proof. exact (MK_COMB (@lem6207192) (@lem6207193)). Qed.
Lemma lem6207196 (x : nat) : (term245 x) = term65.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem6207197 : term244 = term65.
Proof. exact (@lem6207196 term6). Qed.
Lemma lem6207198 : term243 = term65.
Proof. exact (TRANS (@lem6207194) (@lem6207197)). Qed.
Lemma lem6207200 (m : nat) (n : nat) : (term130 m n) = (term131 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6207201 : term132 = term133.
Proof. exact (@lem6207200 term6 term6). Qed.
Lemma lem6207202 : (term134 = (BIT1 0)) = (term135 = term6).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6207203 : term135 = term6.
Proof. exact (EQ_MP (@lem6207202) (@lem940073)). Qed.
Lemma lem6207204 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6207205 : term133 = term102.
Proof. exact (MK_COMB (@lem6207204) (@lem6207203)). Qed.
Lemma lem6207206 : term132 = term102.
Proof. exact (TRANS (@lem6207201) (@lem6207205)). Qed.
Lemma lem6207207 : term242 = term242.
Proof. exact (eq_refl term242). Qed.
Lemma lem6207208 : term246 = term244.
Proof. exact (MK_COMB (@lem6207207) (@lem6207206)). Qed.
Lemma lem6207210 (x : nat) : (term245 x) = term65.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem6207211 : term244 = term65.
Proof. exact (@lem6207210 term6). Qed.
Lemma lem6207212 : term246 = term65.
Proof. exact (TRANS (@lem6207208) (@lem6207211)). Qed.
Lemma lem6207213 : term65 = term246.
Proof. exact (SYM (@lem6207212)). Qed.
Lemma lem6207214 : term243 = term246.
Proof. exact (TRANS (@lem6207198) (@lem6207213)). Qed.
Lemma lem6207215 : term229 = term120.
Proof. exact (@lem6207163 (@lem6207214)). Qed.
Lemma lem6207216 : term228 = term120.
Proof. exact (TRANS (@lem6207129) (@lem6207215)). Qed.
Lemma lem6207218 (x : real) : (term139 x) = x.
Proof. exact (EQ_MP (@lem1981475 x) (@lem1981474 x)). Qed.
Lemma lem6207219 : term120 = term65.
Proof. exact (@lem6207218 term65). Qed.
Lemma lem6207220 : term228 = term65.
Proof. exact (TRANS (@lem6207216) (@lem6207219)). Qed.
Lemma lem6207221 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem6207222 : term247 = term242.
Proof. exact (MK_COMB (@lem6207221) (@lem6207220)). Qed.
Lemma lem6207223 (_79022 : int) : (real_of_int _79022) = (real_of_int _79022).
Proof. exact (eq_refl (real_of_int _79022)). Qed.
Lemma lem6207224 (_79022 : int) : (term225 _79022) = (term248 _79022).
Proof. exact (MK_COMB (@lem6207222) (@lem6207223 _79022)). Qed.
Lemma lem6207225 (_79022 : int) : (term224 _79022) = (term248 _79022).
Proof. exact (TRANS (@lem6207120 _79022) (@lem6207224 _79022)). Qed.
Lemma lem6207226 (_79022 : int) : (term248 _79022) = term65.
Proof. exact (@lem1982719 (real_of_int _79022)). Qed.
Lemma lem6207227 (_79022 : int) : (term224 _79022) = term65.
Proof. exact (TRANS (@lem6207225 _79022) (@lem6207226 _79022)). Qed.
Lemma lem6207228 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem6207229 (_79022 : int) : (term249 _79022) = term250.
Proof. exact (MK_COMB (@lem6207228) (@lem6207227 _79022)). Qed.
Lemma lem6207231 (x : nat) : (term121 x) = (term122 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem6207232 : term198 = term201.
Proof. exact (@lem6207231 term172). Qed.
Lemma lem6207234 (x : nat) : (real_of_num x) = (term119 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6207235 : term97 = term148.
Proof. exact (@lem6207234 term32). Qed.
Lemma lem6207236 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem6207237 : term149 = term150.
Proof. exact (MK_COMB (@lem6207236) (@lem6207235)). Qed.
Lemma lem6207238 : term251 = term252.
Proof. exact (MK_COMB (@lem6207237) (@lem6207232)). Qed.
Lemma lem6207239 : term253.
Proof. exact (@lem1981473 term97 term102 term198 term102 term123 term102). Qed.
Lemma lem6207241 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6207242 : term156 = term157.
Proof. exact (@lem6207241 (NUMERAL 0) term6). Qed.
Lemma lem6207243 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6207244 (h1 : term158 = (BIT1 0)) : term157 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6207245 : (term158 = (BIT1 0)) = (term157 = True).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6207244 h1) (fun h1 : term157 = True => @lem6207243)). Qed.
Lemma lem6207246 : term157 = True.
Proof. exact (EQ_MP (@lem6207245) (@lem6207243)). Qed.
Lemma lem6207247 : term156 = True.
Proof. exact (TRANS (@lem6207242) (@lem6207246)). Qed.
Lemma lem6207248 : True = term156.
Proof. exact (SYM (@lem6207247)). Qed.
Lemma lem6207249 : term156.
Proof. exact (EQ_MP (@lem6207248) (@lem0)). Qed.
Lemma lem6207250 : term254.
Proof. exact (@lem6207239 (@lem6207249)). Qed.
Lemma lem6207252 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6207253 : term156 = term157.
Proof. exact (@lem6207252 (NUMERAL 0) term6). Qed.
Lemma lem6207254 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6207255 (h1 : term158 = (BIT1 0)) : term157 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6207256 : (term158 = (BIT1 0)) = (term157 = True).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6207255 h1) (fun h1 : term157 = True => @lem6207254)). Qed.
Lemma lem6207257 : term157 = True.
Proof. exact (EQ_MP (@lem6207256) (@lem6207254)). Qed.
Lemma lem6207258 : term156 = True.
Proof. exact (TRANS (@lem6207253) (@lem6207257)). Qed.
Lemma lem6207259 : True = term156.
Proof. exact (SYM (@lem6207258)). Qed.
Lemma lem6207260 : term156.
Proof. exact (EQ_MP (@lem6207259) (@lem0)). Qed.
Lemma lem6207261 : term255.
Proof. exact (@lem6207250 (@lem6207260)). Qed.
Lemma lem6207263 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6207264 : term156 = term157.
Proof. exact (@lem6207263 (NUMERAL 0) term6). Qed.
Lemma lem6207265 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6207266 (h1 : term158 = (BIT1 0)) : term157 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6207267 : (term158 = (BIT1 0)) = (term157 = True).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6207266 h1) (fun h1 : term157 = True => @lem6207265)). Qed.
Lemma lem6207268 : term157 = True.
Proof. exact (EQ_MP (@lem6207267) (@lem6207265)). Qed.
Lemma lem6207269 : term156 = True.
Proof. exact (TRANS (@lem6207264) (@lem6207268)). Qed.
Lemma lem6207270 : True = term156.
Proof. exact (SYM (@lem6207269)). Qed.
Lemma lem6207271 : term156.
Proof. exact (EQ_MP (@lem6207270) (@lem0)). Qed.
Lemma lem6207272 : term256.
Proof. exact (@lem6207261 (@lem6207271)). Qed.
Lemma lem6207274 (m : nat) (n : nat) : (term192 m n) = (term193 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem6207275 : term257 = term258.
Proof. exact (@lem6207274 term172 term6). Qed.
Lemma lem6207276 : term178 = term170.
Proof. exact (@lem996237 term170). Qed.
Lemma lem6207277 : (term178 = term170) = (term179 = term172).
Proof. exact (@lem1007663 term170 (BIT1 0) term170). Qed.
Lemma lem6207278 : term179 = term172.
Proof. exact (EQ_MP (@lem6207277) (@lem6207276)). Qed.
Lemma lem6207279 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6207280 : term177 = term154.
Proof. exact (MK_COMB (@lem6207279) (@lem6207278)). Qed.
Lemma lem6207281 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem6207282 : term258 = term198.
Proof. exact (MK_COMB (@lem6207281) (@lem6207280)). Qed.
Lemma lem6207283 : term257 = term198.
Proof. exact (TRANS (@lem6207275) (@lem6207282)). Qed.
Lemma lem6207285 (m : nat) (n : nat) : (term130 m n) = (term131 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6207286 : term162 = term163.
Proof. exact (@lem6207285 term32 term6). Qed.
Lemma lem6207287 : term164 = term30.
Proof. exact (@lem996237 term30). Qed.
Lemma lem6207288 : (term164 = term30) = (term165 = term32).
Proof. exact (@lem1007663 term30 (BIT1 0) term30). Qed.
Lemma lem6207289 : term165 = term32.
Proof. exact (EQ_MP (@lem6207288) (@lem6207287)). Qed.
Lemma lem6207290 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6207291 : term163 = term97.
Proof. exact (MK_COMB (@lem6207290) (@lem6207289)). Qed.
Lemma lem6207292 : term162 = term97.
Proof. exact (TRANS (@lem6207286) (@lem6207291)). Qed.
Lemma lem6207293 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem6207294 : term166 = term149.
Proof. exact (MK_COMB (@lem6207293) (@lem6207292)). Qed.
Lemma lem6207295 : term259 = term251.
Proof. exact (MK_COMB (@lem6207294) (@lem6207283)). Qed.
Lemma lem6207298 : term260 = term123.
Proof. exact (@lem1367771 term32 term6). Qed.
Lemma lem6207299 : term169 = term170.
Proof. exact (@lem707013). Qed.
Lemma lem6207300 : (term169 = term170) = (term171 = term172).
Proof. exact (@lem1006570 term30 (BIT1 0) term170). Qed.
Lemma lem6207301 : term171 = term172.
Proof. exact (EQ_MP (@lem6207300) (@lem6207299)). Qed.
Lemma lem6207302 : term172 = term171.
Proof. exact (SYM (@lem6207301)). Qed.
Lemma lem6207303 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6207304 : term154 = term168.
Proof. exact (MK_COMB (@lem6207303) (@lem6207302)). Qed.
Lemma lem6207305 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem6207306 : term198 = term261.
Proof. exact (MK_COMB (@lem6207305) (@lem6207304)). Qed.
Lemma lem6207307 : term149 = term149.
Proof. exact (eq_refl term149). Qed.
Lemma lem6207308 : term251 = term260.
Proof. exact (MK_COMB (@lem6207307) (@lem6207306)). Qed.
Lemma lem6207309 : term251 = term123.
Proof. exact (TRANS (@lem6207308) (@lem6207298)). Qed.
Lemma lem6207310 : term259 = term123.
Proof. exact (TRANS (@lem6207295) (@lem6207309)). Qed.
Lemma lem6207311 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem6207312 : term262 = term125.
Proof. exact (MK_COMB (@lem6207311) (@lem6207310)). Qed.
Lemma lem6207313 : term102 = term102.
Proof. exact (eq_refl term102). Qed.
Lemma lem6207314 : term263 = term264.
Proof. exact (MK_COMB (@lem6207312) (@lem6207313)). Qed.
Lemma lem6207316 (m : nat) (n : nat) : (term192 m n) = (term193 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem6207317 : term264 = term265.
Proof. exact (@lem6207316 term6 term6). Qed.
Lemma lem6207318 : (term134 = (BIT1 0)) = (term135 = term6).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6207319 : term135 = term6.
Proof. exact (EQ_MP (@lem6207318) (@lem940073)). Qed.
Lemma lem6207320 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6207321 : term133 = term102.
Proof. exact (MK_COMB (@lem6207320) (@lem6207319)). Qed.
Lemma lem6207322 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem6207323 : term265 = term123.
Proof. exact (MK_COMB (@lem6207322) (@lem6207321)). Qed.
Lemma lem6207324 : term264 = term123.
Proof. exact (TRANS (@lem6207317) (@lem6207323)). Qed.
Lemma lem6207325 : term263 = term123.
Proof. exact (TRANS (@lem6207314) (@lem6207324)). Qed.
Lemma lem6207327 (m : nat) (n : nat) : (term130 m n) = (term131 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6207328 : term132 = term133.
Proof. exact (@lem6207327 term6 term6). Qed.
Lemma lem6207329 : (term134 = (BIT1 0)) = (term135 = term6).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6207330 : term135 = term6.
Proof. exact (EQ_MP (@lem6207329) (@lem940073)). Qed.
Lemma lem6207331 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6207332 : term133 = term102.
Proof. exact (MK_COMB (@lem6207331) (@lem6207330)). Qed.
Lemma lem6207333 : term132 = term102.
Proof. exact (TRANS (@lem6207328) (@lem6207332)). Qed.
Lemma lem6207334 : term125 = term125.
Proof. exact (eq_refl term125). Qed.
Lemma lem6207335 : term266 = term264.
Proof. exact (MK_COMB (@lem6207334) (@lem6207333)). Qed.
Lemma lem6207337 (m : nat) (n : nat) : (term192 m n) = (term193 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem6207338 : term264 = term265.
Proof. exact (@lem6207337 term6 term6). Qed.
Lemma lem6207339 : (term134 = (BIT1 0)) = (term135 = term6).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6207340 : term135 = term6.
Proof. exact (EQ_MP (@lem6207339) (@lem940073)). Qed.
Lemma lem6207341 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6207342 : term133 = term102.
Proof. exact (MK_COMB (@lem6207341) (@lem6207340)). Qed.
Lemma lem6207343 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem6207344 : term265 = term123.
Proof. exact (MK_COMB (@lem6207343) (@lem6207342)). Qed.
Lemma lem6207345 : term264 = term123.
Proof. exact (TRANS (@lem6207338) (@lem6207344)). Qed.
Lemma lem6207346 : term266 = term123.
Proof. exact (TRANS (@lem6207335) (@lem6207345)). Qed.
Lemma lem6207347 : term123 = term266.
Proof. exact (SYM (@lem6207346)). Qed.
Lemma lem6207348 : term263 = term266.
Proof. exact (TRANS (@lem6207325) (@lem6207347)). Qed.
Lemma lem6207349 : term252 = term124.
Proof. exact (@lem6207272 (@lem6207348)). Qed.
Lemma lem6207350 : term251 = term124.
Proof. exact (TRANS (@lem6207238) (@lem6207349)). Qed.
Lemma lem6207352 (x : real) : (term139 x) = x.
Proof. exact (EQ_MP (@lem1981475 x) (@lem1981474 x)). Qed.
Lemma lem6207353 : term124 = term123.
Proof. exact (@lem6207352 term123). Qed.
Lemma lem6207354 : term251 = term123.
Proof. exact (TRANS (@lem6207350) (@lem6207353)). Qed.
Lemma lem6207355 (_79022 : int) : (term223 _79022) = term267.
Proof. exact (MK_COMB (@lem6207229 _79022) (@lem6207354)). Qed.
Lemma lem6207356 (_79022 : int) : (term222 _79022) = term267.
Proof. exact (TRANS (@lem6207119 _79022) (@lem6207355 _79022)). Qed.
Lemma lem6207357 : term267 = term123.
Proof. exact (@lem1982721 term123). Qed.
Lemma lem6207358 (_79022 : int) : (term222 _79022) = term123.
Proof. exact (TRANS (@lem6207356 _79022) (@lem6207357)). Qed.
Lemma lem6207359 (_79021 : int) (_79022 : int) : (term1094 _79021 _79022) = term267.
Proof. exact (MK_COMB (@lem6207118 _79021) (@lem6207358 _79022)). Qed.
Lemma lem6207360 (_79021 : int) (_79022 : int) : (term1093 _79021 _79022) = term267.
Proof. exact (TRANS (@lem6207008 _79021 _79022) (@lem6207359 _79021 _79022)). Qed.
Lemma lem6207361 : term267 = term123.
Proof. exact (@lem1982721 term123). Qed.
Lemma lem6207362 (_79021 : int) (_79022 : int) : (term1093 _79021 _79022) = term123.
Proof. exact (TRANS (@lem6207360 _79021 _79022) (@lem6207361)). Qed.
Lemma lem6207363 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem6207364 (_79021 : int) (_79022 : int) : (term1095 _79021 _79022) = term269.
Proof. exact (MK_COMB (@lem6207363) (@lem6207362 _79021 _79022)). Qed.
Lemma lem6207365 : term65 = term65.
Proof. exact (eq_refl term65). Qed.
Lemma lem6207366 (_79021 : int) (_79022 : int) : (term1092 _79021 _79022) = term270.
Proof. exact (MK_COMB (@lem6207364 _79021 _79022) (@lem6207365)). Qed.
Lemma lem6207367 (_79021 : int) (_79022 : int) (h1 : term1084 _79021 _79022) : term270.
Proof. exact (EQ_MP (@lem6207366 _79021 _79022) (@lem6207007 _79021 _79022 h1)). Qed.
Lemma lem6207369 (y : real) (x : real) : (real_ge x y) = (real_le y x).
Proof. exact (EQ_MP (@lem1980260 y x) (@lem1980259 y x)). Qed.
Lemma lem6207370 : term270 = term273.
Proof. exact (@lem6207369 term65 term123). Qed.
Lemma lem6207372 (x : nat) : (term121 x) = (term122 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem6207373 : term123 = term124.
Proof. exact (@lem6207372 term6). Qed.
Lemma lem6207375 (x : nat) : (real_of_num x) = (term119 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6207376 : term65 = term120.
Proof. exact (@lem6207375 (NUMERAL 0)). Qed.
Lemma lem6207377 : real_le = real_le.
Proof. exact (eq_refl real_le). Qed.
Lemma lem6207378 : term67 = term274.
Proof. exact (MK_COMB (@lem6207377) (@lem6207376)). Qed.
Lemma lem6207379 : term273 = term275.
Proof. exact (MK_COMB (@lem6207378) (@lem6207373)). Qed.
Lemma lem6207380 : term276.
Proof. exact (@lem1980026 term65 term102 term123 term102). Qed.
Lemma lem6207382 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6207383 : term156 = term157.
Proof. exact (@lem6207382 (NUMERAL 0) term6). Qed.
Lemma lem6207384 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6207385 (h1 : term158 = (BIT1 0)) : term157 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6207386 : (term158 = (BIT1 0)) = (term157 = True).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6207385 h1) (fun h1 : term157 = True => @lem6207384)). Qed.
Lemma lem6207387 : term157 = True.
Proof. exact (EQ_MP (@lem6207386) (@lem6207384)). Qed.
Lemma lem6207388 : term156 = True.
Proof. exact (TRANS (@lem6207383) (@lem6207387)). Qed.
Lemma lem6207389 : True = term156.
Proof. exact (SYM (@lem6207388)). Qed.
Lemma lem6207390 : term156.
Proof. exact (EQ_MP (@lem6207389) (@lem0)). Qed.
Lemma lem6207391 : term277.
Proof. exact (@lem6207380 (@lem6207390)). Qed.
Lemma lem6207393 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6207394 : term156 = term157.
Proof. exact (@lem6207393 (NUMERAL 0) term6). Qed.
Lemma lem6207395 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6207396 (h1 : term158 = (BIT1 0)) : term157 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6207397 : (term158 = (BIT1 0)) = (term157 = True).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6207396 h1) (fun h1 : term157 = True => @lem6207395)). Qed.
Lemma lem6207398 : term157 = True.
Proof. exact (EQ_MP (@lem6207397) (@lem6207395)). Qed.
Lemma lem6207399 : term156 = True.
Proof. exact (TRANS (@lem6207394) (@lem6207398)). Qed.
Lemma lem6207400 : True = term156.
Proof. exact (SYM (@lem6207399)). Qed.
Lemma lem6207401 : term156.
Proof. exact (EQ_MP (@lem6207400) (@lem0)). Qed.
Lemma lem6207402 : term275 = term278.
Proof. exact (@lem6207391 (@lem6207401)). Qed.
Lemma lem6207404 (m : nat) (n : nat) : (term192 m n) = (term193 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem6207405 : term264 = term265.
Proof. exact (@lem6207404 term6 term6). Qed.
Lemma lem6207406 : (term134 = (BIT1 0)) = (term135 = term6).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6207407 : term135 = term6.
Proof. exact (EQ_MP (@lem6207406) (@lem940073)). Qed.
Lemma lem6207408 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6207409 : term133 = term102.
Proof. exact (MK_COMB (@lem6207408) (@lem6207407)). Qed.
Lemma lem6207410 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem6207411 : term265 = term123.
Proof. exact (MK_COMB (@lem6207410) (@lem6207409)). Qed.
Lemma lem6207412 : term264 = term123.
Proof. exact (TRANS (@lem6207405) (@lem6207411)). Qed.
Lemma lem6207414 (x : nat) : (term245 x) = term65.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem6207415 : term244 = term65.
Proof. exact (@lem6207414 term6). Qed.
Lemma lem6207416 : real_le = real_le.
Proof. exact (eq_refl real_le). Qed.
Lemma lem6207417 : term279 = term67.
Proof. exact (MK_COMB (@lem6207416) (@lem6207415)). Qed.
Lemma lem6207418 : term278 = term273.
Proof. exact (MK_COMB (@lem6207417) (@lem6207412)). Qed.
Lemma lem6207420 (m : nat) (n : nat) : (term280 m n) = (term281 m n).
Proof. exact (proj2 (@lem1365406 m n)). Qed.
Lemma lem6207421 : term273 = term282.
Proof. exact (@lem6207420 (NUMERAL 0) term6). Qed.
Lemma lem6207422 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6207423 (h1 : term158 = (BIT1 0)) : (term6 = (NUMERAL 0)) = False.
Proof. exact (@lem1013352 0 0 (BIT1 0) h1). Qed.
Lemma lem6207424 : (term158 = (BIT1 0)) = ((term6 = (NUMERAL 0)) = False).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6207423 h1) (fun h1 : (term6 = (NUMERAL 0)) = False => @lem6207422)). Qed.
Lemma lem6207425 : (term6 = (NUMERAL 0)) = False.
Proof. exact (EQ_MP (@lem6207424) (@lem6207422)). Qed.
Lemma lem6207426 : ((NUMERAL 0) = (NUMERAL 0)) = True.
Proof. exact (@lem1013364 0). Qed.
Lemma lem6207427 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6207428 : term283 = (and True).
Proof. exact (MK_COMB (@lem6207427) (@lem6207426)). Qed.
Lemma lem6207429 : term282 = (True /\ False).
Proof. exact (MK_COMB (@lem6207428) (@lem6207425)). Qed.
Lemma lem6207431 : (True /\ False) = False.
Proof. exact (proj1 (@lem1365106)). Qed.
Lemma lem6207432 : term282 = False.
Proof. exact (TRANS (@lem6207429) (@lem6207431)). Qed.
Lemma lem6207433 : term273 = False.
Proof. exact (TRANS (@lem6207421) (@lem6207432)). Qed.
Lemma lem6207434 : term278 = False.
Proof. exact (TRANS (@lem6207418) (@lem6207433)). Qed.
Lemma lem6207435 : term275 = False.
Proof. exact (TRANS (@lem6207402) (@lem6207434)). Qed.
Lemma lem6207436 : term273 = False.
Proof. exact (TRANS (@lem6207379) (@lem6207435)). Qed.
Lemma lem6207437 : term270 = False.
Proof. exact (TRANS (@lem6207370) (@lem6207436)). Qed.
Lemma lem6207438 (_79021 : int) (_79022 : int) (h1 : term1084 _79021 _79022) : False.
Proof. exact (EQ_MP (@lem6207437) (@lem6207367 _79021 _79022 h1)). Qed.
Lemma lem6207439 (_79021 : int) (_79022 : int) (h1 : term1002 _79021 _79022) : False.
Proof. exact (or_elim (@lem6205885 _79021 _79022 h1) (fun h0 : term1008 _79021 _79022 => @lem6206753 _79021 _79022 h0) (fun h0 : term1084 _79021 _79022 => @lem6207438 _79021 _79022 h0)). Qed.
Lemma lem6207440 (_79021 : int) (_79022 : int) (h1 : term999 _79021 _79022) : term999 _79021 _79022.
Proof. exact (h1). Qed.
Lemma lem6207441 (_79021 : int) (_79022 : int) (h1 : term1096 _79021 _79022) : term1096 _79021 _79022.
Proof. exact (h1). Qed.
Lemma lem6207442 (_79021 : int) (_79022 : int) (h1 : term1096 _79021 _79022) : term1000 _79021 _79022.
Proof. exact (proj2 (@lem6207441 _79021 _79022 h1)). Qed.
Lemma lem6207444 (_79021 : int) (_79022 : int) (h1 : term1096 _79021 _79022) : term988 _79021 _79022.
Proof. exact (proj2 (@lem6207442 _79021 _79022 h1)). Qed.
Lemma lem6207446 (_79021 : int) (_79022 : int) (h1 : term1096 _79021 _79022) : term544 _79021 _79022.
Proof. exact (proj2 (@lem6207444 _79021 _79022 h1)). Qed.
Lemma lem6207447 (_79021 : int) (_79022 : int) (h1 : term1096 _79021 _79022) : term754 _79021 _79022.
Proof. exact (proj1 (@lem6207444 _79021 _79022 h1)). Qed.
Lemma lem6207449 (y : real) (x : real) : (real_gt x y) = (real_lt y x).
Proof. exact (EQ_MP (@lem1980266 y x) (@lem1980265 y x)). Qed.
Lemma lem6207450 : term755 = term156.
Proof. exact (@lem6207449 term65 term102). Qed.
Lemma lem6207452 (x : nat) : (real_of_num x) = (term119 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6207453 : term102 = term147.
Proof. exact (@lem6207452 term6). Qed.
Lemma lem6207455 (x : nat) : (real_of_num x) = (term119 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6207456 : term65 = term120.
Proof. exact (@lem6207455 (NUMERAL 0)). Qed.
Lemma lem6207457 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem6207458 : term588 = term589.
Proof. exact (MK_COMB (@lem6207457) (@lem6207456)). Qed.
Lemma lem6207459 : term156 = term756.
Proof. exact (MK_COMB (@lem6207458) (@lem6207453)). Qed.
Lemma lem6207460 : term757.
Proof. exact (@lem1980255 term65 term102 term102 term102). Qed.
Lemma lem6207462 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6207463 : term156 = term157.
Proof. exact (@lem6207462 (NUMERAL 0) term6). Qed.
Lemma lem6207464 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6207465 (h1 : term158 = (BIT1 0)) : term157 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6207466 : (term158 = (BIT1 0)) = (term157 = True).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6207465 h1) (fun h1 : term157 = True => @lem6207464)). Qed.
Lemma lem6207467 : term157 = True.
Proof. exact (EQ_MP (@lem6207466) (@lem6207464)). Qed.
Lemma lem6207468 : term156 = True.
Proof. exact (TRANS (@lem6207463) (@lem6207467)). Qed.
Lemma lem6207469 : True = term156.
Proof. exact (SYM (@lem6207468)). Qed.
Lemma lem6207470 : term156.
Proof. exact (EQ_MP (@lem6207469) (@lem0)). Qed.
Lemma lem6207471 : term758.
Proof. exact (@lem6207460 (@lem6207470)). Qed.
Lemma lem6207473 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6207474 : term156 = term157.
Proof. exact (@lem6207473 (NUMERAL 0) term6). Qed.
Lemma lem6207475 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6207476 (h1 : term158 = (BIT1 0)) : term157 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6207477 : (term158 = (BIT1 0)) = (term157 = True).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6207476 h1) (fun h1 : term157 = True => @lem6207475)). Qed.
Lemma lem6207478 : term157 = True.
Proof. exact (EQ_MP (@lem6207477) (@lem6207475)). Qed.
Lemma lem6207479 : term156 = True.
Proof. exact (TRANS (@lem6207474) (@lem6207478)). Qed.
Lemma lem6207480 : True = term156.
Proof. exact (SYM (@lem6207479)). Qed.
Lemma lem6207481 : term156.
Proof. exact (EQ_MP (@lem6207480) (@lem0)). Qed.
Lemma lem6207482 : term756 = term759.
Proof. exact (@lem6207471 (@lem6207481)). Qed.
Lemma lem6207484 (m : nat) (n : nat) : (term130 m n) = (term131 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6207485 : term132 = term133.
Proof. exact (@lem6207484 term6 term6). Qed.
Lemma lem6207486 : (term134 = (BIT1 0)) = (term135 = term6).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6207487 : term135 = term6.
Proof. exact (EQ_MP (@lem6207486) (@lem940073)). Qed.
Lemma lem6207488 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6207489 : term133 = term102.
Proof. exact (MK_COMB (@lem6207488) (@lem6207487)). Qed.
Lemma lem6207490 : term132 = term102.
Proof. exact (TRANS (@lem6207485) (@lem6207489)). Qed.
Lemma lem6207492 (x : nat) : (term245 x) = term65.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem6207493 : term244 = term65.
Proof. exact (@lem6207492 term6). Qed.
Lemma lem6207494 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem6207495 : term594 = term588.
Proof. exact (MK_COMB (@lem6207494) (@lem6207493)). Qed.
Lemma lem6207496 : term759 = term156.
Proof. exact (MK_COMB (@lem6207495) (@lem6207490)). Qed.
Lemma lem6207498 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6207499 : term156 = term157.
Proof. exact (@lem6207498 (NUMERAL 0) term6). Qed.
Lemma lem6207500 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6207501 (h1 : term158 = (BIT1 0)) : term157 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6207502 : (term158 = (BIT1 0)) = (term157 = True).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6207501 h1) (fun h1 : term157 = True => @lem6207500)). Qed.
Lemma lem6207503 : term157 = True.
Proof. exact (EQ_MP (@lem6207502) (@lem6207500)). Qed.
Lemma lem6207504 : term156 = True.
Proof. exact (TRANS (@lem6207499) (@lem6207503)). Qed.
Lemma lem6207505 : term759 = True.
Proof. exact (TRANS (@lem6207496) (@lem6207504)). Qed.
Lemma lem6207506 : term756 = True.
Proof. exact (TRANS (@lem6207482) (@lem6207505)). Qed.
Lemma lem6207507 : term156 = True.
Proof. exact (TRANS (@lem6207459) (@lem6207506)). Qed.
Lemma lem6207508 : term755 = True.
Proof. exact (TRANS (@lem6207450) (@lem6207507)). Qed.
Lemma lem6207509 : True = term755.
Proof. exact (SYM (@lem6207508)). Qed.
Lemma lem6207510 : term755.
Proof. exact (EQ_MP (@lem6207509) (@lem0)). Qed.
Lemma lem6207511 (_79021 : int) (_79022 : int) (h1 : term1096 _79021 _79022) : term1097 _79021 _79022.
Proof. exact (conj (@lem6207510) (@lem6207447 _79021 _79022 h1)). Qed.
Lemma lem6207513 (x : real) (y : real) : term598 x y.
Proof. exact (proj1 (@lem1988332 x y)). Qed.
Lemma lem6207514 (_79021 : int) (_79022 : int) : term1098 _79021 _79022.
Proof. exact (@lem6207513 term102 (term751 _79021 _79022)). Qed.
Lemma lem6207515 (_79021 : int) (_79022 : int) (h1 : term1096 _79021 _79022) : term1099 _79021 _79022.
Proof. exact (@lem6207514 _79021 _79022 (@lem6207511 _79021 _79022 h1)). Qed.
Lemma lem6207516 (_79021 : int) (_79022 : int) : (term1100 _79021 _79022) = (term751 _79021 _79022).
Proof. exact (@lem1982733 (term751 _79021 _79022)). Qed.
Lemma lem6207517 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem6207518 (_79021 : int) (_79022 : int) : (term1101 _79021 _79022) = (term753 _79021 _79022).
Proof. exact (MK_COMB (@lem6207517) (@lem6207516 _79021 _79022)). Qed.
Lemma lem6207519 : term65 = term65.
Proof. exact (eq_refl term65). Qed.
Lemma lem6207520 (_79021 : int) (_79022 : int) : (term1099 _79021 _79022) = (term754 _79021 _79022).
Proof. exact (MK_COMB (@lem6207518 _79021 _79022) (@lem6207519)). Qed.
Lemma lem6207521 (_79021 : int) (_79022 : int) (h1 : term1096 _79021 _79022) : term754 _79021 _79022.
Proof. exact (EQ_MP (@lem6207520 _79021 _79022) (@lem6207515 _79021 _79022 h1)). Qed.
Lemma lem6207523 (y : real) (x : real) : (real_gt x y) = (real_lt y x).
Proof. exact (EQ_MP (@lem1980266 y x) (@lem1980265 y x)). Qed.
Lemma lem6207524 : term586 = term587.
Proof. exact (@lem6207523 term65 term90). Qed.
Lemma lem6207526 (x : nat) : (real_of_num x) = (term119 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6207527 : term90 = term204.
Proof. exact (@lem6207526 term22). Qed.
Lemma lem6207529 (x : nat) : (real_of_num x) = (term119 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6207530 : term65 = term120.
Proof. exact (@lem6207529 (NUMERAL 0)). Qed.
Lemma lem6207531 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem6207532 : term588 = term589.
Proof. exact (MK_COMB (@lem6207531) (@lem6207530)). Qed.
Lemma lem6207533 : term587 = term590.
Proof. exact (MK_COMB (@lem6207532) (@lem6207527)). Qed.
Lemma lem6207534 : term591.
Proof. exact (@lem1980255 term65 term102 term90 term102). Qed.
Lemma lem6207536 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6207537 : term156 = term157.
Proof. exact (@lem6207536 (NUMERAL 0) term6). Qed.
Lemma lem6207538 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6207539 (h1 : term158 = (BIT1 0)) : term157 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6207540 : (term158 = (BIT1 0)) = (term157 = True).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6207539 h1) (fun h1 : term157 = True => @lem6207538)). Qed.
Lemma lem6207541 : term157 = True.
Proof. exact (EQ_MP (@lem6207540) (@lem6207538)). Qed.
Lemma lem6207542 : term156 = True.
Proof. exact (TRANS (@lem6207537) (@lem6207541)). Qed.
Lemma lem6207543 : True = term156.
Proof. exact (SYM (@lem6207542)). Qed.
Lemma lem6207544 : term156.
Proof. exact (EQ_MP (@lem6207543) (@lem0)). Qed.
Lemma lem6207545 : term592.
Proof. exact (@lem6207534 (@lem6207544)). Qed.
Lemma lem6207547 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6207548 : term156 = term157.
Proof. exact (@lem6207547 (NUMERAL 0) term6). Qed.
Lemma lem6207549 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6207550 (h1 : term158 = (BIT1 0)) : term157 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6207551 : (term158 = (BIT1 0)) = (term157 = True).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6207550 h1) (fun h1 : term157 = True => @lem6207549)). Qed.
Lemma lem6207552 : term157 = True.
Proof. exact (EQ_MP (@lem6207551) (@lem6207549)). Qed.
Lemma lem6207553 : term156 = True.
Proof. exact (TRANS (@lem6207548) (@lem6207552)). Qed.
Lemma lem6207554 : True = term156.
Proof. exact (SYM (@lem6207553)). Qed.
Lemma lem6207555 : term156.
Proof. exact (EQ_MP (@lem6207554) (@lem0)). Qed.
Lemma lem6207556 : term590 = term593.
Proof. exact (@lem6207545 (@lem6207555)). Qed.
Lemma lem6207558 (m : nat) (n : nat) : (term130 m n) = (term131 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6207559 : term237 = term236.
Proof. exact (@lem6207558 term22 term6). Qed.
Lemma lem6207560 : term35 = term20.
Proof. exact (@lem996237 term20). Qed.
Lemma lem6207561 : (term35 = term20) = (term36 = term22).
Proof. exact (@lem1007663 term20 (BIT1 0) term20). Qed.
Lemma lem6207562 : term36 = term22.
Proof. exact (EQ_MP (@lem6207561) (@lem6207560)). Qed.
Lemma lem6207563 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6207564 : term236 = term90.
Proof. exact (MK_COMB (@lem6207563) (@lem6207562)). Qed.
Lemma lem6207565 : term237 = term90.
Proof. exact (TRANS (@lem6207559) (@lem6207564)). Qed.
Lemma lem6207567 (x : nat) : (term245 x) = term65.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem6207568 : term244 = term65.
Proof. exact (@lem6207567 term6). Qed.
Lemma lem6207569 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem6207570 : term594 = term588.
Proof. exact (MK_COMB (@lem6207569) (@lem6207568)). Qed.
Lemma lem6207571 : term593 = term587.
Proof. exact (MK_COMB (@lem6207570) (@lem6207565)). Qed.
Lemma lem6207573 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6207574 : term587 = term595.
Proof. exact (@lem6207573 (NUMERAL 0) term22). Qed.
Lemma lem6207575 : term596 = term20.
Proof. exact (@lem912803). Qed.
Lemma lem6207576 (h1 : term596 = term20) : term595 = True.
Proof. exact (@lem1009824 (BIT1 0) 0 term20 h1). Qed.
Lemma lem6207577 : (term596 = term20) = (term595 = True).
Proof. exact (prop_ext (fun h1 : term596 = term20 => @lem6207576 h1) (fun h1 : term595 = True => @lem6207575)). Qed.
Lemma lem6207578 : term595 = True.
Proof. exact (EQ_MP (@lem6207577) (@lem6207575)). Qed.
Lemma lem6207579 : term587 = True.
Proof. exact (TRANS (@lem6207574) (@lem6207578)). Qed.
Lemma lem6207580 : term593 = True.
Proof. exact (TRANS (@lem6207571) (@lem6207579)). Qed.
Lemma lem6207581 : term590 = True.
Proof. exact (TRANS (@lem6207556) (@lem6207580)). Qed.
Lemma lem6207582 : term587 = True.
Proof. exact (TRANS (@lem6207533) (@lem6207581)). Qed.
Lemma lem6207583 : term586 = True.
Proof. exact (TRANS (@lem6207524) (@lem6207582)). Qed.
Lemma lem6207584 : True = term586.
Proof. exact (SYM (@lem6207583)). Qed.
Lemma lem6207585 : term586.
Proof. exact (EQ_MP (@lem6207584) (@lem0)). Qed.
Lemma lem6207586 (_79021 : int) (_79022 : int) (h1 : term1096 _79021 _79022) : term809 _79021 _79022.
Proof. exact (conj (@lem6207585) (@lem6207446 _79021 _79022 h1)). Qed.
Lemma lem6207588 (x : real) (y : real) : term598 x y.
Proof. exact (proj1 (@lem1988332 x y)). Qed.
Lemma lem6207589 (_79021 : int) (_79022 : int) : term810 _79021 _79022.
Proof. exact (@lem6207588 term90 (term540 _79021 _79022)). Qed.
Lemma lem6207590 (_79021 : int) (_79022 : int) (h1 : term1096 _79021 _79022) : term811 _79021 _79022.
Proof. exact (@lem6207589 _79021 _79022 (@lem6207586 _79021 _79022 h1)). Qed.
Lemma lem6207591 (_79021 : int) (_79022 : int) : (term812 _79021 _79022) = (term813 _79021 _79022).
Proof. exact (@lem1982781 (term541 _79021) term90 (term465 _79022)). Qed.
Lemma lem6207592 (_79022 : int) : (term814 _79022) = (term815 _79022).
Proof. exact (@lem1982781 (real_of_int _79022) term90 term102). Qed.
Lemma lem6207594 (x : nat) : (real_of_num x) = (term119 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6207595 : term102 = term147.
Proof. exact (@lem6207594 term6). Qed.
Lemma lem6207597 (x : nat) : (real_of_num x) = (term119 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6207598 : term90 = term204.
Proof. exact (@lem6207597 term22). Qed.
Lemma lem6207599 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem6207600 : term92 = term605.
Proof. exact (MK_COMB (@lem6207599) (@lem6207598)). Qed.
Lemma lem6207601 : term237 = term816.
Proof. exact (MK_COMB (@lem6207600) (@lem6207595)). Qed.
Lemma lem6207602 : term816 = term817.
Proof. exact (@lem1981613 term90 term102 term102 term102). Qed.
Lemma lem6207604 (m : nat) (n : nat) : (term130 m n) = (term131 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6207605 : term132 = term133.
Proof. exact (@lem6207604 term6 term6). Qed.
Lemma lem6207606 : (term134 = (BIT1 0)) = (term135 = term6).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6207607 : term135 = term6.
Proof. exact (EQ_MP (@lem6207606) (@lem940073)). Qed.
Lemma lem6207608 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6207609 : term133 = term102.
Proof. exact (MK_COMB (@lem6207608) (@lem6207607)). Qed.
Lemma lem6207610 : term132 = term102.
Proof. exact (TRANS (@lem6207605) (@lem6207609)). Qed.
Lemma lem6207612 (m : nat) (n : nat) : (term130 m n) = (term131 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6207613 : term237 = term236.
Proof. exact (@lem6207612 term22 term6). Qed.
Lemma lem6207614 : term35 = term20.
Proof. exact (@lem996237 term20). Qed.
Lemma lem6207615 : (term35 = term20) = (term36 = term22).
Proof. exact (@lem1007663 term20 (BIT1 0) term20). Qed.
Lemma lem6207616 : term36 = term22.
Proof. exact (EQ_MP (@lem6207615) (@lem6207614)). Qed.
Lemma lem6207617 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6207618 : term236 = term90.
Proof. exact (MK_COMB (@lem6207617) (@lem6207616)). Qed.
Lemma lem6207619 : term237 = term90.
Proof. exact (TRANS (@lem6207613) (@lem6207618)). Qed.
Lemma lem6207620 : real_div = real_div.
Proof. exact (eq_refl real_div). Qed.
Lemma lem6207621 : term818 = term819.
Proof. exact (MK_COMB (@lem6207620) (@lem6207619)). Qed.
Lemma lem6207622 : term817 = term204.
Proof. exact (MK_COMB (@lem6207621) (@lem6207610)). Qed.
Lemma lem6207623 : term816 = term204.
Proof. exact (TRANS (@lem6207602) (@lem6207622)). Qed.
Lemma lem6207624 : term237 = term204.
Proof. exact (TRANS (@lem6207601) (@lem6207623)). Qed.
Lemma lem6207626 (x : real) : (term139 x) = x.
Proof. exact (EQ_MP (@lem1982628 x) (@lem1982627 x)). Qed.
Lemma lem6207627 : term204 = term90.
Proof. exact (@lem6207626 term90). Qed.
Lemma lem6207628 : term237 = term90.
Proof. exact (TRANS (@lem6207624) (@lem6207627)). Qed.
Lemma lem6207631 (_79022 : int) : (term95 _79022) = (term95 _79022).
Proof. exact (eq_refl (term95 _79022)). Qed.
Lemma lem6207632 (_79022 : int) : (term815 _79022) = (term310 _79022).
Proof. exact (MK_COMB (@lem6207631 _79022) (@lem6207628)). Qed.
Lemma lem6207633 (_79022 : int) : (term814 _79022) = (term310 _79022).
Proof. exact (TRANS (@lem6207592 _79022) (@lem6207632 _79022)). Qed.
Lemma lem6207634 (_79021 : int) : (term743 _79021) = (term744 _79021).
Proof. exact (@lem1982749 term90 term123 (real_of_int _79021)). Qed.
Lemma lem6207636 (x : nat) : (term121 x) = (term122 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem6207637 : term123 = term124.
Proof. exact (@lem6207636 term6). Qed.
Lemma lem6207639 (x : nat) : (real_of_num x) = (term119 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6207640 : term90 = term204.
Proof. exact (@lem6207639 term22). Qed.
Lemma lem6207641 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem6207642 : term92 = term605.
Proof. exact (MK_COMB (@lem6207641) (@lem6207640)). Qed.
Lemma lem6207643 : term745 = term746.
Proof. exact (MK_COMB (@lem6207642) (@lem6207637)). Qed.
Lemma lem6207644 : term746 = term747.
Proof. exact (@lem1981613 term90 term123 term102 term102). Qed.
Lemma lem6207646 (m : nat) (n : nat) : (term130 m n) = (term131 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6207647 : term132 = term133.
Proof. exact (@lem6207646 term6 term6). Qed.
Lemma lem6207648 : (term134 = (BIT1 0)) = (term135 = term6).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6207649 : term135 = term6.
Proof. exact (EQ_MP (@lem6207648) (@lem940073)). Qed.
Lemma lem6207650 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6207651 : term133 = term102.
Proof. exact (MK_COMB (@lem6207650) (@lem6207649)). Qed.
Lemma lem6207652 : term132 = term102.
Proof. exact (TRANS (@lem6207647) (@lem6207651)). Qed.
Lemma lem6207654 (m : nat) (n : nat) : (term609 m n) = (term193 m n).
Proof. exact (proj2 (@lem1367247 m n)). Qed.
Lemma lem6207655 : term745 = term235.
Proof. exact (@lem6207654 term22 term6). Qed.
Lemma lem6207656 : term35 = term20.
Proof. exact (@lem996237 term20). Qed.
Lemma lem6207657 : (term35 = term20) = (term36 = term22).
Proof. exact (@lem1007663 term20 (BIT1 0) term20). Qed.
Lemma lem6207658 : term36 = term22.
Proof. exact (EQ_MP (@lem6207657) (@lem6207656)). Qed.
Lemma lem6207659 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6207660 : term236 = term90.
Proof. exact (MK_COMB (@lem6207659) (@lem6207658)). Qed.
Lemma lem6207661 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem6207662 : term235 = term212.
Proof. exact (MK_COMB (@lem6207661) (@lem6207660)). Qed.
Lemma lem6207663 : term745 = term212.
Proof. exact (TRANS (@lem6207655) (@lem6207662)). Qed.
Lemma lem6207664 : real_div = real_div.
Proof. exact (eq_refl real_div). Qed.
Lemma lem6207665 : term748 = term214.
Proof. exact (MK_COMB (@lem6207664) (@lem6207663)). Qed.
Lemma lem6207666 : term747 = term215.
Proof. exact (MK_COMB (@lem6207665) (@lem6207652)). Qed.
Lemma lem6207667 : term746 = term215.
Proof. exact (TRANS (@lem6207644) (@lem6207666)). Qed.
Lemma lem6207668 : term745 = term215.
Proof. exact (TRANS (@lem6207643) (@lem6207667)). Qed.
Lemma lem6207670 (x : real) : (term139 x) = x.
Proof. exact (EQ_MP (@lem1982628 x) (@lem1982627 x)). Qed.
Lemma lem6207671 : term215 = term212.
Proof. exact (@lem6207670 term212). Qed.
Lemma lem6207672 : term745 = term212.
Proof. exact (TRANS (@lem6207668) (@lem6207671)). Qed.
Lemma lem6207673 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem6207674 : term749 = term217.
Proof. exact (MK_COMB (@lem6207673) (@lem6207672)). Qed.
Lemma lem6207675 (_79021 : int) : (real_of_int _79021) = (real_of_int _79021).
Proof. exact (eq_refl (real_of_int _79021)). Qed.
Lemma lem6207676 (_79021 : int) : (term744 _79021) = (term218 _79021).
Proof. exact (MK_COMB (@lem6207674) (@lem6207675 _79021)). Qed.
Lemma lem6207677 (_79021 : int) : (term743 _79021) = (term218 _79021).
Proof. exact (TRANS (@lem6207634 _79021) (@lem6207676 _79021)). Qed.
Lemma lem6207678 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem6207679 (_79021 : int) : (term750 _79021) = (term220 _79021).
Proof. exact (MK_COMB (@lem6207678) (@lem6207677 _79021)). Qed.
Lemma lem6207680 (_79021 : int) (_79022 : int) : (term813 _79021 _79022) = (term533 _79021 _79022).
Proof. exact (MK_COMB (@lem6207679 _79021) (@lem6207633 _79022)). Qed.
Lemma lem6207681 (_79021 : int) (_79022 : int) : (term812 _79021 _79022) = (term533 _79021 _79022).
Proof. exact (TRANS (@lem6207591 _79021 _79022) (@lem6207680 _79021 _79022)). Qed.
Lemma lem6207682 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem6207683 (_79021 : int) (_79022 : int) : (term820 _79021 _79022) = (term535 _79021 _79022).
Proof. exact (MK_COMB (@lem6207682) (@lem6207681 _79021 _79022)). Qed.
Lemma lem6207684 : term65 = term65.
Proof. exact (eq_refl term65). Qed.
Lemma lem6207685 (_79021 : int) (_79022 : int) : (term811 _79021 _79022) = (term536 _79021 _79022).
Proof. exact (MK_COMB (@lem6207683 _79021 _79022) (@lem6207684)). Qed.
Lemma lem6207686 (_79021 : int) (_79022 : int) (h1 : term1096 _79021 _79022) : term536 _79021 _79022.
Proof. exact (EQ_MP (@lem6207685 _79021 _79022) (@lem6207590 _79021 _79022 h1)). Qed.
Lemma lem6207687 (_79021 : int) (_79022 : int) (h1 : term1096 _79021 _79022) : term765 _79021 _79022.
Proof. exact (conj (@lem6207686 _79021 _79022 h1) (@lem6207521 _79021 _79022 h1)). Qed.
Lemma lem6207689 (x : real) (y : real) : term665 x y.
Proof. exact (proj1 (@lem1988342 x y)). Qed.
Lemma lem6207690 (_79021 : int) (_79022 : int) : term766 _79021 _79022.
Proof. exact (@lem6207689 (term533 _79021 _79022) (term751 _79021 _79022)). Qed.
Lemma lem6207691 (_79021 : int) (_79022 : int) (h1 : term1096 _79021 _79022) : term767 _79021 _79022.
Proof. exact (@lem6207690 _79021 _79022 (@lem6207687 _79021 _79022 h1)). Qed.
Lemma lem6207692 (_79021 : int) (_79022 : int) : (term768 _79021 _79022) = (term769 _79021 _79022).
Proof. exact (@lem1982753 (term218 _79021) (term93 _79021) (term310 _79022) (term221 _79022)). Qed.
Lemma lem6207693 (_79021 : int) : (term770 _79021) = (term771 _79021).
Proof. exact (@lem1982711 term212 term90 (real_of_int _79021)). Qed.
Lemma lem6207695 (x : nat) : (real_of_num x) = (term119 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6207696 : term90 = term204.
Proof. exact (@lem6207695 term22). Qed.
Lemma lem6207698 (x : nat) : (term121 x) = (term122 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem6207699 : term212 = term215.
Proof. exact (@lem6207698 term22). Qed.
Lemma lem6207700 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem6207701 : term772 = term773.
Proof. exact (MK_COMB (@lem6207700) (@lem6207699)). Qed.
Lemma lem6207702 : term774 = term775.
Proof. exact (MK_COMB (@lem6207701) (@lem6207696)). Qed.
Lemma lem6207703 : term776.
Proof. exact (@lem1981473 term212 term102 term90 term102 term65 term102). Qed.
Lemma lem6207705 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6207706 : term156 = term157.
Proof. exact (@lem6207705 (NUMERAL 0) term6). Qed.
Lemma lem6207707 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6207708 (h1 : term158 = (BIT1 0)) : term157 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6207709 : (term158 = (BIT1 0)) = (term157 = True).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6207708 h1) (fun h1 : term157 = True => @lem6207707)). Qed.
Lemma lem6207710 : term157 = True.
Proof. exact (EQ_MP (@lem6207709) (@lem6207707)). Qed.
Lemma lem6207711 : term156 = True.
Proof. exact (TRANS (@lem6207706) (@lem6207710)). Qed.
Lemma lem6207712 : True = term156.
Proof. exact (SYM (@lem6207711)). Qed.
Lemma lem6207713 : term156.
Proof. exact (EQ_MP (@lem6207712) (@lem0)). Qed.
Lemma lem6207714 : term777.
Proof. exact (@lem6207703 (@lem6207713)). Qed.
Lemma lem6207716 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6207717 : term156 = term157.
Proof. exact (@lem6207716 (NUMERAL 0) term6). Qed.
Lemma lem6207718 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6207719 (h1 : term158 = (BIT1 0)) : term157 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6207720 : (term158 = (BIT1 0)) = (term157 = True).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6207719 h1) (fun h1 : term157 = True => @lem6207718)). Qed.
Lemma lem6207721 : term157 = True.
Proof. exact (EQ_MP (@lem6207720) (@lem6207718)). Qed.
Lemma lem6207722 : term156 = True.
Proof. exact (TRANS (@lem6207717) (@lem6207721)). Qed.
Lemma lem6207723 : True = term156.
Proof. exact (SYM (@lem6207722)). Qed.
Lemma lem6207724 : term156.
Proof. exact (EQ_MP (@lem6207723) (@lem0)). Qed.
Lemma lem6207725 : term778.
Proof. exact (@lem6207714 (@lem6207724)). Qed.
Lemma lem6207727 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6207728 : term156 = term157.
Proof. exact (@lem6207727 (NUMERAL 0) term6). Qed.
Lemma lem6207729 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6207730 (h1 : term158 = (BIT1 0)) : term157 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6207731 : (term158 = (BIT1 0)) = (term157 = True).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6207730 h1) (fun h1 : term157 = True => @lem6207729)). Qed.
Lemma lem6207732 : term157 = True.
Proof. exact (EQ_MP (@lem6207731) (@lem6207729)). Qed.
Lemma lem6207733 : term156 = True.
Proof. exact (TRANS (@lem6207728) (@lem6207732)). Qed.
Lemma lem6207734 : True = term156.
Proof. exact (SYM (@lem6207733)). Qed.
Lemma lem6207735 : term156.
Proof. exact (EQ_MP (@lem6207734) (@lem0)). Qed.
Lemma lem6207736 : term779.
Proof. exact (@lem6207725 (@lem6207735)). Qed.
Lemma lem6207738 (m : nat) (n : nat) : (term130 m n) = (term131 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6207739 : term237 = term236.
Proof. exact (@lem6207738 term22 term6). Qed.
Lemma lem6207740 : term35 = term20.
Proof. exact (@lem996237 term20). Qed.
Lemma lem6207741 : (term35 = term20) = (term36 = term22).
Proof. exact (@lem1007663 term20 (BIT1 0) term20). Qed.
Lemma lem6207742 : term36 = term22.
Proof. exact (EQ_MP (@lem6207741) (@lem6207740)). Qed.
Lemma lem6207743 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6207744 : term236 = term90.
Proof. exact (MK_COMB (@lem6207743) (@lem6207742)). Qed.
Lemma lem6207745 : term237 = term90.
Proof. exact (TRANS (@lem6207739) (@lem6207744)). Qed.
Lemma lem6207747 (m : nat) (n : nat) : (term192 m n) = (term193 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem6207748 : term234 = term235.
Proof. exact (@lem6207747 term22 term6). Qed.
Lemma lem6207749 : term35 = term20.
Proof. exact (@lem996237 term20). Qed.
Lemma lem6207750 : (term35 = term20) = (term36 = term22).
Proof. exact (@lem1007663 term20 (BIT1 0) term20). Qed.
Lemma lem6207751 : term36 = term22.
Proof. exact (EQ_MP (@lem6207750) (@lem6207749)). Qed.
Lemma lem6207752 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6207753 : term236 = term90.
Proof. exact (MK_COMB (@lem6207752) (@lem6207751)). Qed.
Lemma lem6207754 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem6207755 : term235 = term212.
Proof. exact (MK_COMB (@lem6207754) (@lem6207753)). Qed.
Lemma lem6207756 : term234 = term212.
Proof. exact (TRANS (@lem6207748) (@lem6207755)). Qed.
Lemma lem6207757 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem6207758 : term780 = term772.
Proof. exact (MK_COMB (@lem6207757) (@lem6207756)). Qed.
Lemma lem6207759 : term781 = term774.
Proof. exact (MK_COMB (@lem6207758) (@lem6207745)). Qed.
Lemma lem6207761 (m : nat) : (term682 m) = term65.
Proof. exact (proj1 (@lem1367303 m)). Qed.
Lemma lem6207762 : term774 = term65.
Proof. exact (@lem6207761 term22). Qed.
Lemma lem6207763 : term781 = term65.
Proof. exact (TRANS (@lem6207759) (@lem6207762)). Qed.
Lemma lem6207764 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem6207765 : term782 = term242.
Proof. exact (MK_COMB (@lem6207764) (@lem6207763)). Qed.
Lemma lem6207766 : term102 = term102.
Proof. exact (eq_refl term102). Qed.
Lemma lem6207767 : term783 = term244.
Proof. exact (MK_COMB (@lem6207765) (@lem6207766)). Qed.
Lemma lem6207769 (x : nat) : (term245 x) = term65.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem6207770 : term244 = term65.
Proof. exact (@lem6207769 term6). Qed.
Lemma lem6207771 : term783 = term65.
Proof. exact (TRANS (@lem6207767) (@lem6207770)). Qed.
Lemma lem6207773 (m : nat) (n : nat) : (term130 m n) = (term131 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6207774 : term132 = term133.
Proof. exact (@lem6207773 term6 term6). Qed.
Lemma lem6207775 : (term134 = (BIT1 0)) = (term135 = term6).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6207776 : term135 = term6.
Proof. exact (EQ_MP (@lem6207775) (@lem940073)). Qed.
Lemma lem6207777 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6207778 : term133 = term102.
Proof. exact (MK_COMB (@lem6207777) (@lem6207776)). Qed.
Lemma lem6207779 : term132 = term102.
Proof. exact (TRANS (@lem6207774) (@lem6207778)). Qed.
Lemma lem6207780 : term242 = term242.
Proof. exact (eq_refl term242). Qed.
Lemma lem6207781 : term246 = term244.
Proof. exact (MK_COMB (@lem6207780) (@lem6207779)). Qed.
Lemma lem6207783 (x : nat) : (term245 x) = term65.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem6207784 : term244 = term65.
Proof. exact (@lem6207783 term6). Qed.
Lemma lem6207785 : term246 = term65.
Proof. exact (TRANS (@lem6207781) (@lem6207784)). Qed.
Lemma lem6207786 : term65 = term246.
Proof. exact (SYM (@lem6207785)). Qed.
Lemma lem6207787 : term783 = term246.
Proof. exact (TRANS (@lem6207771) (@lem6207786)). Qed.
Lemma lem6207788 : term775 = term120.
Proof. exact (@lem6207736 (@lem6207787)). Qed.
Lemma lem6207789 : term774 = term120.
Proof. exact (TRANS (@lem6207702) (@lem6207788)). Qed.
Lemma lem6207791 (x : real) : (term139 x) = x.
Proof. exact (EQ_MP (@lem1981475 x) (@lem1981474 x)). Qed.
Lemma lem6207792 : term120 = term65.
Proof. exact (@lem6207791 term65). Qed.
Lemma lem6207793 : term774 = term65.
Proof. exact (TRANS (@lem6207789) (@lem6207792)). Qed.
Lemma lem6207794 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem6207795 : term784 = term242.
Proof. exact (MK_COMB (@lem6207794) (@lem6207793)). Qed.
Lemma lem6207796 (_79021 : int) : (real_of_int _79021) = (real_of_int _79021).
Proof. exact (eq_refl (real_of_int _79021)). Qed.
Lemma lem6207797 (_79021 : int) : (term771 _79021) = (term248 _79021).
Proof. exact (MK_COMB (@lem6207795) (@lem6207796 _79021)). Qed.
Lemma lem6207798 (_79021 : int) : (term770 _79021) = (term248 _79021).
Proof. exact (TRANS (@lem6207693 _79021) (@lem6207797 _79021)). Qed.
Lemma lem6207799 (_79021 : int) : (term248 _79021) = term65.
Proof. exact (@lem1982719 (real_of_int _79021)). Qed.
Lemma lem6207800 (_79021 : int) : (term770 _79021) = term65.
Proof. exact (TRANS (@lem6207798 _79021) (@lem6207799 _79021)). Qed.
Lemma lem6207801 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem6207802 (_79021 : int) : (term785 _79021) = term250.
Proof. exact (MK_COMB (@lem6207801) (@lem6207800 _79021)). Qed.
Lemma lem6207803 (_79022 : int) : (term786 _79022) = (term787 _79022).
Proof. exact (@lem1982753 (term93 _79022) (term218 _79022) term90 term198). Qed.
Lemma lem6207804 (_79022 : int) : (term224 _79022) = (term225 _79022).
Proof. exact (@lem1982711 term90 term212 (real_of_int _79022)). Qed.
Lemma lem6207806 (x : nat) : (term121 x) = (term122 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem6207807 : term212 = term215.
Proof. exact (@lem6207806 term22). Qed.
Lemma lem6207809 (x : nat) : (real_of_num x) = (term119 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6207810 : term90 = term204.
Proof. exact (@lem6207809 term22). Qed.
Lemma lem6207811 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem6207812 : term226 = term227.
Proof. exact (MK_COMB (@lem6207811) (@lem6207810)). Qed.
Lemma lem6207813 : term228 = term229.
Proof. exact (MK_COMB (@lem6207812) (@lem6207807)). Qed.
Lemma lem6207814 : term230.
Proof. exact (@lem1981473 term90 term102 term212 term102 term65 term102). Qed.
Lemma lem6207816 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6207817 : term156 = term157.
Proof. exact (@lem6207816 (NUMERAL 0) term6). Qed.
Lemma lem6207818 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6207819 (h1 : term158 = (BIT1 0)) : term157 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6207820 : (term158 = (BIT1 0)) = (term157 = True).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6207819 h1) (fun h1 : term157 = True => @lem6207818)). Qed.
Lemma lem6207821 : term157 = True.
Proof. exact (EQ_MP (@lem6207820) (@lem6207818)). Qed.
Lemma lem6207822 : term156 = True.
Proof. exact (TRANS (@lem6207817) (@lem6207821)). Qed.
Lemma lem6207823 : True = term156.
Proof. exact (SYM (@lem6207822)). Qed.
Lemma lem6207824 : term156.
Proof. exact (EQ_MP (@lem6207823) (@lem0)). Qed.
Lemma lem6207825 : term231.
Proof. exact (@lem6207814 (@lem6207824)). Qed.
Lemma lem6207827 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6207828 : term156 = term157.
Proof. exact (@lem6207827 (NUMERAL 0) term6). Qed.
Lemma lem6207829 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6207830 (h1 : term158 = (BIT1 0)) : term157 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6207831 : (term158 = (BIT1 0)) = (term157 = True).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6207830 h1) (fun h1 : term157 = True => @lem6207829)). Qed.
Lemma lem6207832 : term157 = True.
Proof. exact (EQ_MP (@lem6207831) (@lem6207829)). Qed.
Lemma lem6207833 : term156 = True.
Proof. exact (TRANS (@lem6207828) (@lem6207832)). Qed.
Lemma lem6207834 : True = term156.
Proof. exact (SYM (@lem6207833)). Qed.
Lemma lem6207835 : term156.
Proof. exact (EQ_MP (@lem6207834) (@lem0)). Qed.
Lemma lem6207836 : term232.
Proof. exact (@lem6207825 (@lem6207835)). Qed.
Lemma lem6207838 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6207839 : term156 = term157.
Proof. exact (@lem6207838 (NUMERAL 0) term6). Qed.
Lemma lem6207840 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6207841 (h1 : term158 = (BIT1 0)) : term157 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6207842 : (term158 = (BIT1 0)) = (term157 = True).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6207841 h1) (fun h1 : term157 = True => @lem6207840)). Qed.
Lemma lem6207843 : term157 = True.
Proof. exact (EQ_MP (@lem6207842) (@lem6207840)). Qed.
Lemma lem6207844 : term156 = True.
Proof. exact (TRANS (@lem6207839) (@lem6207843)). Qed.
Lemma lem6207845 : True = term156.
Proof. exact (SYM (@lem6207844)). Qed.
Lemma lem6207846 : term156.
Proof. exact (EQ_MP (@lem6207845) (@lem0)). Qed.
Lemma lem6207847 : term233.
Proof. exact (@lem6207836 (@lem6207846)). Qed.
Lemma lem6207849 (m : nat) (n : nat) : (term192 m n) = (term193 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem6207850 : term234 = term235.
Proof. exact (@lem6207849 term22 term6). Qed.
Lemma lem6207851 : term35 = term20.
Proof. exact (@lem996237 term20). Qed.
Lemma lem6207852 : (term35 = term20) = (term36 = term22).
Proof. exact (@lem1007663 term20 (BIT1 0) term20). Qed.
Lemma lem6207853 : term36 = term22.
Proof. exact (EQ_MP (@lem6207852) (@lem6207851)). Qed.
Lemma lem6207854 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6207855 : term236 = term90.
Proof. exact (MK_COMB (@lem6207854) (@lem6207853)). Qed.
Lemma lem6207856 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem6207857 : term235 = term212.
Proof. exact (MK_COMB (@lem6207856) (@lem6207855)). Qed.
Lemma lem6207858 : term234 = term212.
Proof. exact (TRANS (@lem6207850) (@lem6207857)). Qed.
Lemma lem6207860 (m : nat) (n : nat) : (term130 m n) = (term131 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6207861 : term237 = term236.
Proof. exact (@lem6207860 term22 term6). Qed.
Lemma lem6207862 : term35 = term20.
Proof. exact (@lem996237 term20). Qed.
Lemma lem6207863 : (term35 = term20) = (term36 = term22).
Proof. exact (@lem1007663 term20 (BIT1 0) term20). Qed.
Lemma lem6207864 : term36 = term22.
Proof. exact (EQ_MP (@lem6207863) (@lem6207862)). Qed.
Lemma lem6207865 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6207866 : term236 = term90.
Proof. exact (MK_COMB (@lem6207865) (@lem6207864)). Qed.
Lemma lem6207867 : term237 = term90.
Proof. exact (TRANS (@lem6207861) (@lem6207866)). Qed.
Lemma lem6207868 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem6207869 : term238 = term226.
Proof. exact (MK_COMB (@lem6207868) (@lem6207867)). Qed.
Lemma lem6207870 : term239 = term228.
Proof. exact (MK_COMB (@lem6207869) (@lem6207858)). Qed.
Lemma lem6207872 (m : nat) : (term240 m) = term65.
Proof. exact (proj2 (@lem1367303 m)). Qed.
Lemma lem6207873 : term228 = term65.
Proof. exact (@lem6207872 term22). Qed.
Lemma lem6207874 : term239 = term65.
Proof. exact (TRANS (@lem6207870) (@lem6207873)). Qed.
Lemma lem6207875 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem6207876 : term241 = term242.
Proof. exact (MK_COMB (@lem6207875) (@lem6207874)). Qed.
Lemma lem6207877 : term102 = term102.
Proof. exact (eq_refl term102). Qed.
Lemma lem6207878 : term243 = term244.
Proof. exact (MK_COMB (@lem6207876) (@lem6207877)). Qed.
Lemma lem6207880 (x : nat) : (term245 x) = term65.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem6207881 : term244 = term65.
Proof. exact (@lem6207880 term6). Qed.
Lemma lem6207882 : term243 = term65.
Proof. exact (TRANS (@lem6207878) (@lem6207881)). Qed.
Lemma lem6207884 (m : nat) (n : nat) : (term130 m n) = (term131 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6207885 : term132 = term133.
Proof. exact (@lem6207884 term6 term6). Qed.
Lemma lem6207886 : (term134 = (BIT1 0)) = (term135 = term6).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6207887 : term135 = term6.
Proof. exact (EQ_MP (@lem6207886) (@lem940073)). Qed.
Lemma lem6207888 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6207889 : term133 = term102.
Proof. exact (MK_COMB (@lem6207888) (@lem6207887)). Qed.
Lemma lem6207890 : term132 = term102.
Proof. exact (TRANS (@lem6207885) (@lem6207889)). Qed.
Lemma lem6207891 : term242 = term242.
Proof. exact (eq_refl term242). Qed.
Lemma lem6207892 : term246 = term244.
Proof. exact (MK_COMB (@lem6207891) (@lem6207890)). Qed.
Lemma lem6207894 (x : nat) : (term245 x) = term65.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem6207895 : term244 = term65.
Proof. exact (@lem6207894 term6). Qed.
Lemma lem6207896 : term246 = term65.
Proof. exact (TRANS (@lem6207892) (@lem6207895)). Qed.
Lemma lem6207897 : term65 = term246.
Proof. exact (SYM (@lem6207896)). Qed.
Lemma lem6207898 : term243 = term246.
Proof. exact (TRANS (@lem6207882) (@lem6207897)). Qed.
Lemma lem6207899 : term229 = term120.
Proof. exact (@lem6207847 (@lem6207898)). Qed.
Lemma lem6207900 : term228 = term120.
Proof. exact (TRANS (@lem6207813) (@lem6207899)). Qed.
Lemma lem6207902 (x : real) : (term139 x) = x.
Proof. exact (EQ_MP (@lem1981475 x) (@lem1981474 x)). Qed.
Lemma lem6207903 : term120 = term65.
Proof. exact (@lem6207902 term65). Qed.
Lemma lem6207904 : term228 = term65.
Proof. exact (TRANS (@lem6207900) (@lem6207903)). Qed.
Lemma lem6207905 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem6207906 : term247 = term242.
Proof. exact (MK_COMB (@lem6207905) (@lem6207904)). Qed.
Lemma lem6207907 (_79022 : int) : (real_of_int _79022) = (real_of_int _79022).
Proof. exact (eq_refl (real_of_int _79022)). Qed.
Lemma lem6207908 (_79022 : int) : (term225 _79022) = (term248 _79022).
Proof. exact (MK_COMB (@lem6207906) (@lem6207907 _79022)). Qed.
Lemma lem6207909 (_79022 : int) : (term224 _79022) = (term248 _79022).
Proof. exact (TRANS (@lem6207804 _79022) (@lem6207908 _79022)). Qed.
Lemma lem6207910 (_79022 : int) : (term248 _79022) = term65.
Proof. exact (@lem1982719 (real_of_int _79022)). Qed.
Lemma lem6207911 (_79022 : int) : (term224 _79022) = term65.
Proof. exact (TRANS (@lem6207909 _79022) (@lem6207910 _79022)). Qed.
Lemma lem6207912 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem6207913 (_79022 : int) : (term249 _79022) = term250.
Proof. exact (MK_COMB (@lem6207912) (@lem6207911 _79022)). Qed.
Lemma lem6207915 (x : nat) : (term121 x) = (term122 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem6207916 : term198 = term201.
Proof. exact (@lem6207915 term172). Qed.
Lemma lem6207918 (x : nat) : (real_of_num x) = (term119 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6207919 : term90 = term204.
Proof. exact (@lem6207918 term22). Qed.
Lemma lem6207920 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem6207921 : term226 = term227.
Proof. exact (MK_COMB (@lem6207920) (@lem6207919)). Qed.
Lemma lem6207922 : term788 = term789.
Proof. exact (MK_COMB (@lem6207921) (@lem6207916)). Qed.
Lemma lem6207923 : term790.
Proof. exact (@lem1981473 term90 term102 term198 term102 term212 term102). Qed.
Lemma lem6207925 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6207926 : term156 = term157.
Proof. exact (@lem6207925 (NUMERAL 0) term6). Qed.
Lemma lem6207927 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6207928 (h1 : term158 = (BIT1 0)) : term157 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6207929 : (term158 = (BIT1 0)) = (term157 = True).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6207928 h1) (fun h1 : term157 = True => @lem6207927)). Qed.
Lemma lem6207930 : term157 = True.
Proof. exact (EQ_MP (@lem6207929) (@lem6207927)). Qed.
Lemma lem6207931 : term156 = True.
Proof. exact (TRANS (@lem6207926) (@lem6207930)). Qed.
Lemma lem6207932 : True = term156.
Proof. exact (SYM (@lem6207931)). Qed.
Lemma lem6207933 : term156.
Proof. exact (EQ_MP (@lem6207932) (@lem0)). Qed.
Lemma lem6207934 : term791.
Proof. exact (@lem6207923 (@lem6207933)). Qed.
Lemma lem6207936 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6207937 : term156 = term157.
Proof. exact (@lem6207936 (NUMERAL 0) term6). Qed.
Lemma lem6207938 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6207939 (h1 : term158 = (BIT1 0)) : term157 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6207940 : (term158 = (BIT1 0)) = (term157 = True).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6207939 h1) (fun h1 : term157 = True => @lem6207938)). Qed.
Lemma lem6207941 : term157 = True.
Proof. exact (EQ_MP (@lem6207940) (@lem6207938)). Qed.
Lemma lem6207942 : term156 = True.
Proof. exact (TRANS (@lem6207937) (@lem6207941)). Qed.
Lemma lem6207943 : True = term156.
Proof. exact (SYM (@lem6207942)). Qed.
Lemma lem6207944 : term156.
Proof. exact (EQ_MP (@lem6207943) (@lem0)). Qed.
Lemma lem6207945 : term792.
Proof. exact (@lem6207934 (@lem6207944)). Qed.
Lemma lem6207947 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6207948 : term156 = term157.
Proof. exact (@lem6207947 (NUMERAL 0) term6). Qed.
Lemma lem6207949 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6207950 (h1 : term158 = (BIT1 0)) : term157 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6207951 : (term158 = (BIT1 0)) = (term157 = True).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6207950 h1) (fun h1 : term157 = True => @lem6207949)). Qed.
Lemma lem6207952 : term157 = True.
Proof. exact (EQ_MP (@lem6207951) (@lem6207949)). Qed.
Lemma lem6207953 : term156 = True.
Proof. exact (TRANS (@lem6207948) (@lem6207952)). Qed.
Lemma lem6207954 : True = term156.
Proof. exact (SYM (@lem6207953)). Qed.
Lemma lem6207955 : term156.
Proof. exact (EQ_MP (@lem6207954) (@lem0)). Qed.
Lemma lem6207956 : term793.
Proof. exact (@lem6207945 (@lem6207955)). Qed.
Lemma lem6207958 (m : nat) (n : nat) : (term192 m n) = (term193 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem6207959 : term257 = term258.
Proof. exact (@lem6207958 term172 term6). Qed.
Lemma lem6207960 : term178 = term170.
Proof. exact (@lem996237 term170). Qed.
Lemma lem6207961 : (term178 = term170) = (term179 = term172).
Proof. exact (@lem1007663 term170 (BIT1 0) term170). Qed.
Lemma lem6207962 : term179 = term172.
Proof. exact (EQ_MP (@lem6207961) (@lem6207960)). Qed.
Lemma lem6207963 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6207964 : term177 = term154.
Proof. exact (MK_COMB (@lem6207963) (@lem6207962)). Qed.
Lemma lem6207965 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem6207966 : term258 = term198.
Proof. exact (MK_COMB (@lem6207965) (@lem6207964)). Qed.
Lemma lem6207967 : term257 = term198.
Proof. exact (TRANS (@lem6207959) (@lem6207966)). Qed.
Lemma lem6207969 (m : nat) (n : nat) : (term130 m n) = (term131 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6207970 : term237 = term236.
Proof. exact (@lem6207969 term22 term6). Qed.
Lemma lem6207971 : term35 = term20.
Proof. exact (@lem996237 term20). Qed.
Lemma lem6207972 : (term35 = term20) = (term36 = term22).
Proof. exact (@lem1007663 term20 (BIT1 0) term20). Qed.
Lemma lem6207973 : term36 = term22.
Proof. exact (EQ_MP (@lem6207972) (@lem6207971)). Qed.
Lemma lem6207974 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6207975 : term236 = term90.
Proof. exact (MK_COMB (@lem6207974) (@lem6207973)). Qed.
Lemma lem6207976 : term237 = term90.
Proof. exact (TRANS (@lem6207970) (@lem6207975)). Qed.
Lemma lem6207977 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem6207978 : term238 = term226.
Proof. exact (MK_COMB (@lem6207977) (@lem6207976)). Qed.
Lemma lem6207979 : term794 = term788.
Proof. exact (MK_COMB (@lem6207978) (@lem6207967)). Qed.
Lemma lem6207982 : term795 = term212.
Proof. exact (@lem1367771 term22 term22). Qed.
Lemma lem6207983 : term796 = term170.
Proof. exact (@lem706951). Qed.
Lemma lem6207984 : (term796 = term170) = (term797 = term172).
Proof. exact (@lem1006570 term20 term20 term170). Qed.
Lemma lem6207985 : term797 = term172.
Proof. exact (EQ_MP (@lem6207984) (@lem6207983)). Qed.
Lemma lem6207986 : term172 = term797.
Proof. exact (SYM (@lem6207985)). Qed.
Lemma lem6207987 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6207988 : term154 = term798.
Proof. exact (MK_COMB (@lem6207987) (@lem6207986)). Qed.
Lemma lem6207989 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem6207990 : term198 = term799.
Proof. exact (MK_COMB (@lem6207989) (@lem6207988)). Qed.
Lemma lem6207991 : term226 = term226.
Proof. exact (eq_refl term226). Qed.
Lemma lem6207992 : term788 = term795.
Proof. exact (MK_COMB (@lem6207991) (@lem6207990)). Qed.
Lemma lem6207993 : term788 = term212.
Proof. exact (TRANS (@lem6207992) (@lem6207982)). Qed.
Lemma lem6207994 : term794 = term212.
Proof. exact (TRANS (@lem6207979) (@lem6207993)). Qed.
Lemma lem6207995 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem6207996 : term800 = term217.
Proof. exact (MK_COMB (@lem6207995) (@lem6207994)). Qed.
Lemma lem6207997 : term102 = term102.
Proof. exact (eq_refl term102). Qed.
Lemma lem6207998 : term801 = term234.
Proof. exact (MK_COMB (@lem6207996) (@lem6207997)). Qed.
Lemma lem6208000 (m : nat) (n : nat) : (term192 m n) = (term193 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem6208001 : term234 = term235.
Proof. exact (@lem6208000 term22 term6). Qed.
Lemma lem6208002 : term35 = term20.
Proof. exact (@lem996237 term20). Qed.
Lemma lem6208003 : (term35 = term20) = (term36 = term22).
Proof. exact (@lem1007663 term20 (BIT1 0) term20). Qed.
Lemma lem6208004 : term36 = term22.
Proof. exact (EQ_MP (@lem6208003) (@lem6208002)). Qed.
Lemma lem6208005 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6208006 : term236 = term90.
Proof. exact (MK_COMB (@lem6208005) (@lem6208004)). Qed.
Lemma lem6208007 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem6208008 : term235 = term212.
Proof. exact (MK_COMB (@lem6208007) (@lem6208006)). Qed.
Lemma lem6208009 : term234 = term212.
Proof. exact (TRANS (@lem6208001) (@lem6208008)). Qed.
Lemma lem6208010 : term801 = term212.
Proof. exact (TRANS (@lem6207998) (@lem6208009)). Qed.
Lemma lem6208012 (m : nat) (n : nat) : (term130 m n) = (term131 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6208013 : term132 = term133.
Proof. exact (@lem6208012 term6 term6). Qed.
Lemma lem6208014 : (term134 = (BIT1 0)) = (term135 = term6).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6208015 : term135 = term6.
Proof. exact (EQ_MP (@lem6208014) (@lem940073)). Qed.
Lemma lem6208016 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6208017 : term133 = term102.
Proof. exact (MK_COMB (@lem6208016) (@lem6208015)). Qed.
Lemma lem6208018 : term132 = term102.
Proof. exact (TRANS (@lem6208013) (@lem6208017)). Qed.
Lemma lem6208019 : term217 = term217.
Proof. exact (eq_refl term217). Qed.
Lemma lem6208020 : term724 = term234.
Proof. exact (MK_COMB (@lem6208019) (@lem6208018)). Qed.
Lemma lem6208022 (m : nat) (n : nat) : (term192 m n) = (term193 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem6208023 : term234 = term235.
Proof. exact (@lem6208022 term22 term6). Qed.
Lemma lem6208024 : term35 = term20.
Proof. exact (@lem996237 term20). Qed.
Lemma lem6208025 : (term35 = term20) = (term36 = term22).
Proof. exact (@lem1007663 term20 (BIT1 0) term20). Qed.
Lemma lem6208026 : term36 = term22.
Proof. exact (EQ_MP (@lem6208025) (@lem6208024)). Qed.
Lemma lem6208027 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6208028 : term236 = term90.
Proof. exact (MK_COMB (@lem6208027) (@lem6208026)). Qed.
Lemma lem6208029 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem6208030 : term235 = term212.
Proof. exact (MK_COMB (@lem6208029) (@lem6208028)). Qed.
Lemma lem6208031 : term234 = term212.
Proof. exact (TRANS (@lem6208023) (@lem6208030)). Qed.
Lemma lem6208032 : term724 = term212.
Proof. exact (TRANS (@lem6208020) (@lem6208031)). Qed.
Lemma lem6208033 : term212 = term724.
Proof. exact (SYM (@lem6208032)). Qed.
Lemma lem6208034 : term801 = term724.
Proof. exact (TRANS (@lem6208010) (@lem6208033)). Qed.
Lemma lem6208035 : term789 = term215.
Proof. exact (@lem6207956 (@lem6208034)). Qed.
Lemma lem6208036 : term788 = term215.
Proof. exact (TRANS (@lem6207922) (@lem6208035)). Qed.
Lemma lem6208038 (x : real) : (term139 x) = x.
Proof. exact (EQ_MP (@lem1981475 x) (@lem1981474 x)). Qed.
Lemma lem6208039 : term215 = term212.
Proof. exact (@lem6208038 term212). Qed.
Lemma lem6208040 : term788 = term212.
Proof. exact (TRANS (@lem6208036) (@lem6208039)). Qed.
Lemma lem6208041 (_79022 : int) : (term787 _79022) = term725.
Proof. exact (MK_COMB (@lem6207913 _79022) (@lem6208040)). Qed.
Lemma lem6208042 (_79022 : int) : (term786 _79022) = term725.
Proof. exact (TRANS (@lem6207803 _79022) (@lem6208041 _79022)). Qed.
Lemma lem6208043 : term725 = term212.
Proof. exact (@lem1982721 term212). Qed.
Lemma lem6208044 (_79022 : int) : (term786 _79022) = term212.
Proof. exact (TRANS (@lem6208042 _79022) (@lem6208043)). Qed.
Lemma lem6208045 (_79021 : int) (_79022 : int) : (term769 _79021 _79022) = term725.
Proof. exact (MK_COMB (@lem6207802 _79021) (@lem6208044 _79022)). Qed.
Lemma lem6208046 (_79021 : int) (_79022 : int) : (term768 _79021 _79022) = term725.
Proof. exact (TRANS (@lem6207692 _79021 _79022) (@lem6208045 _79021 _79022)). Qed.
Lemma lem6208047 : term725 = term212.
Proof. exact (@lem1982721 term212). Qed.
Lemma lem6208048 (_79021 : int) (_79022 : int) : (term768 _79021 _79022) = term212.
Proof. exact (TRANS (@lem6208046 _79021 _79022) (@lem6208047)). Qed.
Lemma lem6208049 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem6208050 (_79021 : int) (_79022 : int) : (term802 _79021 _79022) = term727.
Proof. exact (MK_COMB (@lem6208049) (@lem6208048 _79021 _79022)). Qed.
Lemma lem6208051 : term65 = term65.
Proof. exact (eq_refl term65). Qed.
Lemma lem6208052 (_79021 : int) (_79022 : int) : (term767 _79021 _79022) = term728.
Proof. exact (MK_COMB (@lem6208050 _79021 _79022) (@lem6208051)). Qed.
Lemma lem6208053 (_79021 : int) (_79022 : int) (h1 : term1096 _79021 _79022) : term728.
Proof. exact (EQ_MP (@lem6208052 _79021 _79022) (@lem6207691 _79021 _79022 h1)). Qed.
Lemma lem6208055 (y : real) (x : real) : (real_ge x y) = (real_le y x).
Proof. exact (EQ_MP (@lem1980260 y x) (@lem1980259 y x)). Qed.
Lemma lem6208056 : term728 = term729.
Proof. exact (@lem6208055 term65 term212). Qed.
Lemma lem6208058 (x : nat) : (term121 x) = (term122 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem6208059 : term212 = term215.
Proof. exact (@lem6208058 term22). Qed.
Lemma lem6208061 (x : nat) : (real_of_num x) = (term119 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6208062 : term65 = term120.
Proof. exact (@lem6208061 (NUMERAL 0)). Qed.
Lemma lem6208063 : real_le = real_le.
Proof. exact (eq_refl real_le). Qed.
Lemma lem6208064 : term67 = term274.
Proof. exact (MK_COMB (@lem6208063) (@lem6208062)). Qed.
Lemma lem6208065 : term729 = term730.
Proof. exact (MK_COMB (@lem6208064) (@lem6208059)). Qed.
Lemma lem6208066 : term731.
Proof. exact (@lem1980026 term65 term102 term212 term102). Qed.
Lemma lem6208068 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6208069 : term156 = term157.
Proof. exact (@lem6208068 (NUMERAL 0) term6). Qed.
Lemma lem6208070 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6208071 (h1 : term158 = (BIT1 0)) : term157 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6208072 : (term158 = (BIT1 0)) = (term157 = True).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6208071 h1) (fun h1 : term157 = True => @lem6208070)). Qed.
Lemma lem6208073 : term157 = True.
Proof. exact (EQ_MP (@lem6208072) (@lem6208070)). Qed.
Lemma lem6208074 : term156 = True.
Proof. exact (TRANS (@lem6208069) (@lem6208073)). Qed.
Lemma lem6208075 : True = term156.
Proof. exact (SYM (@lem6208074)). Qed.
Lemma lem6208076 : term156.
Proof. exact (EQ_MP (@lem6208075) (@lem0)). Qed.
Lemma lem6208077 : term732.
Proof. exact (@lem6208066 (@lem6208076)). Qed.
Lemma lem6208079 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6208080 : term156 = term157.
Proof. exact (@lem6208079 (NUMERAL 0) term6). Qed.
Lemma lem6208081 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6208082 (h1 : term158 = (BIT1 0)) : term157 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6208083 : (term158 = (BIT1 0)) = (term157 = True).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6208082 h1) (fun h1 : term157 = True => @lem6208081)). Qed.
Lemma lem6208084 : term157 = True.
Proof. exact (EQ_MP (@lem6208083) (@lem6208081)). Qed.
Lemma lem6208085 : term156 = True.
Proof. exact (TRANS (@lem6208080) (@lem6208084)). Qed.
Lemma lem6208086 : True = term156.
Proof. exact (SYM (@lem6208085)). Qed.
Lemma lem6208087 : term156.
Proof. exact (EQ_MP (@lem6208086) (@lem0)). Qed.
Lemma lem6208088 : term730 = term733.
Proof. exact (@lem6208077 (@lem6208087)). Qed.
Lemma lem6208090 (m : nat) (n : nat) : (term192 m n) = (term193 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem6208091 : term234 = term235.
Proof. exact (@lem6208090 term22 term6). Qed.
Lemma lem6208092 : term35 = term20.
Proof. exact (@lem996237 term20). Qed.
Lemma lem6208093 : (term35 = term20) = (term36 = term22).
Proof. exact (@lem1007663 term20 (BIT1 0) term20). Qed.
Lemma lem6208094 : term36 = term22.
Proof. exact (EQ_MP (@lem6208093) (@lem6208092)). Qed.
Lemma lem6208095 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6208096 : term236 = term90.
Proof. exact (MK_COMB (@lem6208095) (@lem6208094)). Qed.
Lemma lem6208097 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem6208098 : term235 = term212.
Proof. exact (MK_COMB (@lem6208097) (@lem6208096)). Qed.
Lemma lem6208099 : term234 = term212.
Proof. exact (TRANS (@lem6208091) (@lem6208098)). Qed.
Lemma lem6208101 (x : nat) : (term245 x) = term65.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem6208102 : term244 = term65.
Proof. exact (@lem6208101 term6). Qed.
Lemma lem6208103 : real_le = real_le.
Proof. exact (eq_refl real_le). Qed.
Lemma lem6208104 : term279 = term67.
Proof. exact (MK_COMB (@lem6208103) (@lem6208102)). Qed.
Lemma lem6208105 : term733 = term729.
Proof. exact (MK_COMB (@lem6208104) (@lem6208099)). Qed.
Lemma lem6208107 (m : nat) (n : nat) : (term280 m n) = (term281 m n).
Proof. exact (proj2 (@lem1365406 m n)). Qed.
Lemma lem6208108 : term729 = term734.
Proof. exact (@lem6208107 (NUMERAL 0) term22). Qed.
Lemma lem6208109 : term596 = term20.
Proof. exact (@lem912803). Qed.
Lemma lem6208110 (h1 : term596 = term20) : (term22 = (NUMERAL 0)) = False.
Proof. exact (@lem1013352 (BIT1 0) 0 term20 h1). Qed.
Lemma lem6208111 : (term596 = term20) = ((term22 = (NUMERAL 0)) = False).
Proof. exact (prop_ext (fun h1 : term596 = term20 => @lem6208110 h1) (fun h1 : (term22 = (NUMERAL 0)) = False => @lem6208109)). Qed.
Lemma lem6208112 : (term22 = (NUMERAL 0)) = False.
Proof. exact (EQ_MP (@lem6208111) (@lem6208109)). Qed.
Lemma lem6208113 : ((NUMERAL 0) = (NUMERAL 0)) = True.
Proof. exact (@lem1013364 0). Qed.
Lemma lem6208114 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6208115 : term283 = (and True).
Proof. exact (MK_COMB (@lem6208114) (@lem6208113)). Qed.
Lemma lem6208116 : term734 = (True /\ False).
Proof. exact (MK_COMB (@lem6208115) (@lem6208112)). Qed.
Lemma lem6208118 : (True /\ False) = False.
Proof. exact (proj1 (@lem1365106)). Qed.
Lemma lem6208119 : term734 = False.
Proof. exact (TRANS (@lem6208116) (@lem6208118)). Qed.
Lemma lem6208120 : term729 = False.
Proof. exact (TRANS (@lem6208108) (@lem6208119)). Qed.
Lemma lem6208121 : term733 = False.
Proof. exact (TRANS (@lem6208105) (@lem6208120)). Qed.
Lemma lem6208122 : term730 = False.
Proof. exact (TRANS (@lem6208088) (@lem6208121)). Qed.
Lemma lem6208123 : term729 = False.
Proof. exact (TRANS (@lem6208065) (@lem6208122)). Qed.
Lemma lem6208124 : term728 = False.
Proof. exact (TRANS (@lem6208056) (@lem6208123)). Qed.
Lemma lem6208125 (_79021 : int) (_79022 : int) (h1 : term1096 _79021 _79022) : False.
Proof. exact (EQ_MP (@lem6208124) (@lem6208053 _79021 _79022 h1)). Qed.
Lemma lem6208126 (_79021 : int) (_79022 : int) (h1 : term827 _79021 _79022) : term827 _79021 _79022.
Proof. exact (h1). Qed.
Lemma lem6208127 (_79021 : int) (_79022 : int) (h1 : term827 _79021 _79022) : term577 _79021 _79022.
Proof. exact (proj2 (@lem6208126 _79021 _79022 h1)). Qed.
Lemma lem6208129 (_79021 : int) (_79022 : int) (h1 : term827 _79021 _79022) : term564 _79021 _79022.
Proof. exact (proj2 (@lem6208127 _79021 _79022 h1)). Qed.
Lemma lem6208131 (_79021 : int) (_79022 : int) (h1 : term827 _79021 _79022) : term544 _79021 _79022.
Proof. exact (proj2 (@lem6208129 _79021 _79022 h1)). Qed.
Lemma lem6208132 (_79021 : int) (_79022 : int) (h1 : term827 _79021 _79022) : term526 _79021 _79022.
Proof. exact (proj1 (@lem6208129 _79021 _79022 h1)). Qed.
Lemma lem6208134 (y : real) (x : real) : (real_gt x y) = (real_lt y x).
Proof. exact (EQ_MP (@lem1980266 y x) (@lem1980265 y x)). Qed.
Lemma lem6208135 : term755 = term156.
Proof. exact (@lem6208134 term65 term102). Qed.
Lemma lem6208137 (x : nat) : (real_of_num x) = (term119 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6208138 : term102 = term147.
Proof. exact (@lem6208137 term6). Qed.
Lemma lem6208140 (x : nat) : (real_of_num x) = (term119 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6208141 : term65 = term120.
Proof. exact (@lem6208140 (NUMERAL 0)). Qed.
Lemma lem6208142 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem6208143 : term588 = term589.
Proof. exact (MK_COMB (@lem6208142) (@lem6208141)). Qed.
Lemma lem6208144 : term156 = term756.
Proof. exact (MK_COMB (@lem6208143) (@lem6208138)). Qed.
Lemma lem6208145 : term757.
Proof. exact (@lem1980255 term65 term102 term102 term102). Qed.
Lemma lem6208147 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6208148 : term156 = term157.
Proof. exact (@lem6208147 (NUMERAL 0) term6). Qed.
Lemma lem6208149 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6208150 (h1 : term158 = (BIT1 0)) : term157 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6208151 : (term158 = (BIT1 0)) = (term157 = True).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6208150 h1) (fun h1 : term157 = True => @lem6208149)). Qed.
Lemma lem6208152 : term157 = True.
Proof. exact (EQ_MP (@lem6208151) (@lem6208149)). Qed.
Lemma lem6208153 : term156 = True.
Proof. exact (TRANS (@lem6208148) (@lem6208152)). Qed.
Lemma lem6208154 : True = term156.
Proof. exact (SYM (@lem6208153)). Qed.
Lemma lem6208155 : term156.
Proof. exact (EQ_MP (@lem6208154) (@lem0)). Qed.
Lemma lem6208156 : term758.
Proof. exact (@lem6208145 (@lem6208155)). Qed.
Lemma lem6208158 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6208159 : term156 = term157.
Proof. exact (@lem6208158 (NUMERAL 0) term6). Qed.
Lemma lem6208160 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6208161 (h1 : term158 = (BIT1 0)) : term157 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6208162 : (term158 = (BIT1 0)) = (term157 = True).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6208161 h1) (fun h1 : term157 = True => @lem6208160)). Qed.
Lemma lem6208163 : term157 = True.
Proof. exact (EQ_MP (@lem6208162) (@lem6208160)). Qed.
Lemma lem6208164 : term156 = True.
Proof. exact (TRANS (@lem6208159) (@lem6208163)). Qed.
Lemma lem6208165 : True = term156.
Proof. exact (SYM (@lem6208164)). Qed.
Lemma lem6208166 : term156.
Proof. exact (EQ_MP (@lem6208165) (@lem0)). Qed.
Lemma lem6208167 : term756 = term759.
Proof. exact (@lem6208156 (@lem6208166)). Qed.
Lemma lem6208169 (m : nat) (n : nat) : (term130 m n) = (term131 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6208170 : term132 = term133.
Proof. exact (@lem6208169 term6 term6). Qed.
Lemma lem6208171 : (term134 = (BIT1 0)) = (term135 = term6).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6208172 : term135 = term6.
Proof. exact (EQ_MP (@lem6208171) (@lem940073)). Qed.
Lemma lem6208173 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6208174 : term133 = term102.
Proof. exact (MK_COMB (@lem6208173) (@lem6208172)). Qed.
Lemma lem6208175 : term132 = term102.
Proof. exact (TRANS (@lem6208170) (@lem6208174)). Qed.
Lemma lem6208177 (x : nat) : (term245 x) = term65.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem6208178 : term244 = term65.
Proof. exact (@lem6208177 term6). Qed.
Lemma lem6208179 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem6208180 : term594 = term588.
Proof. exact (MK_COMB (@lem6208179) (@lem6208178)). Qed.
Lemma lem6208181 : term759 = term156.
Proof. exact (MK_COMB (@lem6208180) (@lem6208175)). Qed.
Lemma lem6208183 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6208184 : term156 = term157.
Proof. exact (@lem6208183 (NUMERAL 0) term6). Qed.
Lemma lem6208185 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6208186 (h1 : term158 = (BIT1 0)) : term157 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6208187 : (term158 = (BIT1 0)) = (term157 = True).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6208186 h1) (fun h1 : term157 = True => @lem6208185)). Qed.
Lemma lem6208188 : term157 = True.
Proof. exact (EQ_MP (@lem6208187) (@lem6208185)). Qed.
Lemma lem6208189 : term156 = True.
Proof. exact (TRANS (@lem6208184) (@lem6208188)). Qed.
Lemma lem6208190 : term759 = True.
Proof. exact (TRANS (@lem6208181) (@lem6208189)). Qed.
Lemma lem6208191 : term756 = True.
Proof. exact (TRANS (@lem6208167) (@lem6208190)). Qed.
Lemma lem6208192 : term156 = True.
Proof. exact (TRANS (@lem6208144) (@lem6208191)). Qed.
Lemma lem6208193 : term755 = True.
Proof. exact (TRANS (@lem6208135) (@lem6208192)). Qed.
Lemma lem6208194 : True = term755.
Proof. exact (SYM (@lem6208193)). Qed.
Lemma lem6208195 : term755.
Proof. exact (EQ_MP (@lem6208194) (@lem0)). Qed.
Lemma lem6208196 (_79021 : int) (_79022 : int) (h1 : term827 _79021 _79022) : term828 _79021 _79022.
Proof. exact (conj (@lem6208195) (@lem6208132 _79021 _79022 h1)). Qed.
Lemma lem6208198 (x : real) (y : real) : term598 x y.
Proof. exact (proj1 (@lem1988332 x y)). Qed.
Lemma lem6208199 (_79021 : int) (_79022 : int) : term829 _79021 _79022.
Proof. exact (@lem6208198 term102 (term523 _79021 _79022)). Qed.
Lemma lem6208200 (_79021 : int) (_79022 : int) (h1 : term827 _79021 _79022) : term830 _79021 _79022.
Proof. exact (@lem6208199 _79021 _79022 (@lem6208196 _79021 _79022 h1)). Qed.
Lemma lem6208201 (_79021 : int) (_79022 : int) : (term831 _79021 _79022) = (term523 _79021 _79022).
Proof. exact (@lem1982733 (term523 _79021 _79022)). Qed.
Lemma lem6208202 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem6208203 (_79021 : int) (_79022 : int) : (term832 _79021 _79022) = (term525 _79021 _79022).
Proof. exact (MK_COMB (@lem6208202) (@lem6208201 _79021 _79022)). Qed.
Lemma lem6208204 : term65 = term65.
Proof. exact (eq_refl term65). Qed.
Lemma lem6208205 (_79021 : int) (_79022 : int) : (term830 _79021 _79022) = (term526 _79021 _79022).
Proof. exact (MK_COMB (@lem6208203 _79021 _79022) (@lem6208204)). Qed.
Lemma lem6208206 (_79021 : int) (_79022 : int) (h1 : term827 _79021 _79022) : term526 _79021 _79022.
Proof. exact (EQ_MP (@lem6208205 _79021 _79022) (@lem6208200 _79021 _79022 h1)). Qed.
Lemma lem6208208 (y : real) (x : real) : (real_gt x y) = (real_lt y x).
Proof. exact (EQ_MP (@lem1980266 y x) (@lem1980265 y x)). Qed.
Lemma lem6208209 : term755 = term156.
Proof. exact (@lem6208208 term65 term102). Qed.
Lemma lem6208211 (x : nat) : (real_of_num x) = (term119 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6208212 : term102 = term147.
Proof. exact (@lem6208211 term6). Qed.
Lemma lem6208214 (x : nat) : (real_of_num x) = (term119 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6208215 : term65 = term120.
Proof. exact (@lem6208214 (NUMERAL 0)). Qed.
Lemma lem6208216 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem6208217 : term588 = term589.
Proof. exact (MK_COMB (@lem6208216) (@lem6208215)). Qed.
Lemma lem6208218 : term156 = term756.
Proof. exact (MK_COMB (@lem6208217) (@lem6208212)). Qed.
Lemma lem6208219 : term757.
Proof. exact (@lem1980255 term65 term102 term102 term102). Qed.
Lemma lem6208221 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6208222 : term156 = term157.
Proof. exact (@lem6208221 (NUMERAL 0) term6). Qed.
Lemma lem6208223 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6208224 (h1 : term158 = (BIT1 0)) : term157 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6208225 : (term158 = (BIT1 0)) = (term157 = True).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6208224 h1) (fun h1 : term157 = True => @lem6208223)). Qed.
Lemma lem6208226 : term157 = True.
Proof. exact (EQ_MP (@lem6208225) (@lem6208223)). Qed.
Lemma lem6208227 : term156 = True.
Proof. exact (TRANS (@lem6208222) (@lem6208226)). Qed.
Lemma lem6208228 : True = term156.
Proof. exact (SYM (@lem6208227)). Qed.
Lemma lem6208229 : term156.
Proof. exact (EQ_MP (@lem6208228) (@lem0)). Qed.
Lemma lem6208230 : term758.
Proof. exact (@lem6208219 (@lem6208229)). Qed.
Lemma lem6208232 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6208233 : term156 = term157.
Proof. exact (@lem6208232 (NUMERAL 0) term6). Qed.
Lemma lem6208234 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6208235 (h1 : term158 = (BIT1 0)) : term157 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6208236 : (term158 = (BIT1 0)) = (term157 = True).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6208235 h1) (fun h1 : term157 = True => @lem6208234)). Qed.
Lemma lem6208237 : term157 = True.
Proof. exact (EQ_MP (@lem6208236) (@lem6208234)). Qed.
Lemma lem6208238 : term156 = True.
Proof. exact (TRANS (@lem6208233) (@lem6208237)). Qed.
Lemma lem6208239 : True = term156.
Proof. exact (SYM (@lem6208238)). Qed.
Lemma lem6208240 : term156.
Proof. exact (EQ_MP (@lem6208239) (@lem0)). Qed.
Lemma lem6208241 : term756 = term759.
Proof. exact (@lem6208230 (@lem6208240)). Qed.
Lemma lem6208243 (m : nat) (n : nat) : (term130 m n) = (term131 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6208244 : term132 = term133.
Proof. exact (@lem6208243 term6 term6). Qed.
Lemma lem6208245 : (term134 = (BIT1 0)) = (term135 = term6).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6208246 : term135 = term6.
Proof. exact (EQ_MP (@lem6208245) (@lem940073)). Qed.
Lemma lem6208247 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6208248 : term133 = term102.
Proof. exact (MK_COMB (@lem6208247) (@lem6208246)). Qed.
Lemma lem6208249 : term132 = term102.
Proof. exact (TRANS (@lem6208244) (@lem6208248)). Qed.
Lemma lem6208251 (x : nat) : (term245 x) = term65.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem6208252 : term244 = term65.
Proof. exact (@lem6208251 term6). Qed.
Lemma lem6208253 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem6208254 : term594 = term588.
Proof. exact (MK_COMB (@lem6208253) (@lem6208252)). Qed.
Lemma lem6208255 : term759 = term156.
Proof. exact (MK_COMB (@lem6208254) (@lem6208249)). Qed.
Lemma lem6208257 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6208258 : term156 = term157.
Proof. exact (@lem6208257 (NUMERAL 0) term6). Qed.
Lemma lem6208259 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6208260 (h1 : term158 = (BIT1 0)) : term157 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6208261 : (term158 = (BIT1 0)) = (term157 = True).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6208260 h1) (fun h1 : term157 = True => @lem6208259)). Qed.
Lemma lem6208262 : term157 = True.
Proof. exact (EQ_MP (@lem6208261) (@lem6208259)). Qed.
Lemma lem6208263 : term156 = True.
Proof. exact (TRANS (@lem6208258) (@lem6208262)). Qed.
Lemma lem6208264 : term759 = True.
Proof. exact (TRANS (@lem6208255) (@lem6208263)). Qed.
Lemma lem6208265 : term756 = True.
Proof. exact (TRANS (@lem6208241) (@lem6208264)). Qed.
Lemma lem6208266 : term156 = True.
Proof. exact (TRANS (@lem6208218) (@lem6208265)). Qed.
Lemma lem6208267 : term755 = True.
Proof. exact (TRANS (@lem6208209) (@lem6208266)). Qed.
Lemma lem6208268 : True = term755.
Proof. exact (SYM (@lem6208267)). Qed.
Lemma lem6208269 : term755.
Proof. exact (EQ_MP (@lem6208268) (@lem0)). Qed.
Lemma lem6208270 (_79021 : int) (_79022 : int) (h1 : term827 _79021 _79022) : term833 _79021 _79022.
Proof. exact (conj (@lem6208269) (@lem6208131 _79021 _79022 h1)). Qed.
Lemma lem6208272 (x : real) (y : real) : term598 x y.
Proof. exact (proj1 (@lem1988332 x y)). Qed.
Lemma lem6208273 (_79021 : int) (_79022 : int) : term834 _79021 _79022.
Proof. exact (@lem6208272 term102 (term540 _79021 _79022)). Qed.
Lemma lem6208274 (_79021 : int) (_79022 : int) (h1 : term827 _79021 _79022) : term835 _79021 _79022.
Proof. exact (@lem6208273 _79021 _79022 (@lem6208270 _79021 _79022 h1)). Qed.
Lemma lem6208275 (_79021 : int) (_79022 : int) : (term836 _79021 _79022) = (term540 _79021 _79022).
Proof. exact (@lem1982733 (term540 _79021 _79022)). Qed.
Lemma lem6208276 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem6208277 (_79021 : int) (_79022 : int) : (term837 _79021 _79022) = (term543 _79021 _79022).
Proof. exact (MK_COMB (@lem6208276) (@lem6208275 _79021 _79022)). Qed.
Lemma lem6208278 : term65 = term65.
Proof. exact (eq_refl term65). Qed.
Lemma lem6208279 (_79021 : int) (_79022 : int) : (term835 _79021 _79022) = (term544 _79021 _79022).
Proof. exact (MK_COMB (@lem6208277 _79021 _79022) (@lem6208278)). Qed.
Lemma lem6208280 (_79021 : int) (_79022 : int) (h1 : term827 _79021 _79022) : term544 _79021 _79022.
Proof. exact (EQ_MP (@lem6208279 _79021 _79022) (@lem6208274 _79021 _79022 h1)). Qed.
Lemma lem6208281 (_79021 : int) (_79022 : int) (h1 : term827 _79021 _79022) : term838 _79021 _79022.
Proof. exact (conj (@lem6208280 _79021 _79022 h1) (@lem6208206 _79021 _79022 h1)). Qed.
Lemma lem6208283 (x : real) (y : real) : term665 x y.
Proof. exact (proj1 (@lem1988342 x y)). Qed.
Lemma lem6208284 (_79021 : int) (_79022 : int) : term839 _79021 _79022.
Proof. exact (@lem6208283 (term540 _79021 _79022) (term523 _79021 _79022)). Qed.
Lemma lem6208285 (_79021 : int) (_79022 : int) (h1 : term827 _79021 _79022) : term840 _79021 _79022.
Proof. exact (@lem6208284 _79021 _79022 (@lem6208281 _79021 _79022 h1)). Qed.
Lemma lem6208286 (_79021 : int) (_79022 : int) : (term841 _79021 _79022) = (term842 _79021 _79022).
Proof. exact (@lem1982753 (term541 _79021) (real_of_int _79021) (term465 _79022) (term522 _79022)). Qed.
Lemma lem6208287 (_79021 : int) : (term843 _79021) = (term844 _79021).
Proof. exact (@lem1982713 term123 (real_of_int _79021)). Qed.
Lemma lem6208289 (x : nat) : (real_of_num x) = (term119 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6208290 : term102 = term147.
Proof. exact (@lem6208289 term6). Qed.
Lemma lem6208292 (x : nat) : (term121 x) = (term122 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem6208293 : term123 = term124.
Proof. exact (@lem6208292 term6). Qed.
Lemma lem6208294 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem6208295 : term845 = term846.
Proof. exact (MK_COMB (@lem6208294) (@lem6208293)). Qed.
Lemma lem6208296 : term847 = term848.
Proof. exact (MK_COMB (@lem6208295) (@lem6208290)). Qed.
Lemma lem6208297 : term849.
Proof. exact (@lem1981473 term123 term102 term102 term102 term65 term102). Qed.
Lemma lem6208299 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6208300 : term156 = term157.
Proof. exact (@lem6208299 (NUMERAL 0) term6). Qed.
Lemma lem6208301 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6208302 (h1 : term158 = (BIT1 0)) : term157 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6208303 : (term158 = (BIT1 0)) = (term157 = True).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6208302 h1) (fun h1 : term157 = True => @lem6208301)). Qed.
Lemma lem6208304 : term157 = True.
Proof. exact (EQ_MP (@lem6208303) (@lem6208301)). Qed.
Lemma lem6208305 : term156 = True.
Proof. exact (TRANS (@lem6208300) (@lem6208304)). Qed.
Lemma lem6208306 : True = term156.
Proof. exact (SYM (@lem6208305)). Qed.
Lemma lem6208307 : term156.
Proof. exact (EQ_MP (@lem6208306) (@lem0)). Qed.
Lemma lem6208308 : term850.
Proof. exact (@lem6208297 (@lem6208307)). Qed.
Lemma lem6208310 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6208311 : term156 = term157.
Proof. exact (@lem6208310 (NUMERAL 0) term6). Qed.
Lemma lem6208312 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6208313 (h1 : term158 = (BIT1 0)) : term157 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6208314 : (term158 = (BIT1 0)) = (term157 = True).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6208313 h1) (fun h1 : term157 = True => @lem6208312)). Qed.
Lemma lem6208315 : term157 = True.
Proof. exact (EQ_MP (@lem6208314) (@lem6208312)). Qed.
Lemma lem6208316 : term156 = True.
Proof. exact (TRANS (@lem6208311) (@lem6208315)). Qed.
Lemma lem6208317 : True = term156.
Proof. exact (SYM (@lem6208316)). Qed.
Lemma lem6208318 : term156.
Proof. exact (EQ_MP (@lem6208317) (@lem0)). Qed.
Lemma lem6208319 : term851.
Proof. exact (@lem6208308 (@lem6208318)). Qed.
Lemma lem6208321 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6208322 : term156 = term157.
Proof. exact (@lem6208321 (NUMERAL 0) term6). Qed.
Lemma lem6208323 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6208324 (h1 : term158 = (BIT1 0)) : term157 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6208325 : (term158 = (BIT1 0)) = (term157 = True).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6208324 h1) (fun h1 : term157 = True => @lem6208323)). Qed.
Lemma lem6208326 : term157 = True.
Proof. exact (EQ_MP (@lem6208325) (@lem6208323)). Qed.
Lemma lem6208327 : term156 = True.
Proof. exact (TRANS (@lem6208322) (@lem6208326)). Qed.
Lemma lem6208328 : True = term156.
Proof. exact (SYM (@lem6208327)). Qed.
Lemma lem6208329 : term156.
Proof. exact (EQ_MP (@lem6208328) (@lem0)). Qed.
Lemma lem6208330 : term852.
Proof. exact (@lem6208319 (@lem6208329)). Qed.
Lemma lem6208332 (m : nat) (n : nat) : (term130 m n) = (term131 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6208333 : term132 = term133.
Proof. exact (@lem6208332 term6 term6). Qed.
Lemma lem6208334 : (term134 = (BIT1 0)) = (term135 = term6).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6208335 : term135 = term6.
Proof. exact (EQ_MP (@lem6208334) (@lem940073)). Qed.
Lemma lem6208336 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6208337 : term133 = term102.
Proof. exact (MK_COMB (@lem6208336) (@lem6208335)). Qed.
Lemma lem6208338 : term132 = term102.
Proof. exact (TRANS (@lem6208333) (@lem6208337)). Qed.
Lemma lem6208340 (m : nat) (n : nat) : (term192 m n) = (term193 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem6208341 : term264 = term265.
Proof. exact (@lem6208340 term6 term6). Qed.
Lemma lem6208342 : (term134 = (BIT1 0)) = (term135 = term6).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6208343 : term135 = term6.
Proof. exact (EQ_MP (@lem6208342) (@lem940073)). Qed.
Lemma lem6208344 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6208345 : term133 = term102.
Proof. exact (MK_COMB (@lem6208344) (@lem6208343)). Qed.
Lemma lem6208346 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem6208347 : term265 = term123.
Proof. exact (MK_COMB (@lem6208346) (@lem6208345)). Qed.
Lemma lem6208348 : term264 = term123.
Proof. exact (TRANS (@lem6208341) (@lem6208347)). Qed.
Lemma lem6208349 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem6208350 : term853 = term845.
Proof. exact (MK_COMB (@lem6208349) (@lem6208348)). Qed.
Lemma lem6208351 : term854 = term847.
Proof. exact (MK_COMB (@lem6208350) (@lem6208338)). Qed.
Lemma lem6208353 (m : nat) : (term682 m) = term65.
Proof. exact (proj1 (@lem1367303 m)). Qed.
Lemma lem6208354 : term847 = term65.
Proof. exact (@lem6208353 term6). Qed.
Lemma lem6208355 : term854 = term65.
Proof. exact (TRANS (@lem6208351) (@lem6208354)). Qed.
Lemma lem6208356 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem6208357 : term855 = term242.
Proof. exact (MK_COMB (@lem6208356) (@lem6208355)). Qed.
Lemma lem6208358 : term102 = term102.
Proof. exact (eq_refl term102). Qed.
Lemma lem6208359 : term856 = term244.
Proof. exact (MK_COMB (@lem6208357) (@lem6208358)). Qed.
Lemma lem6208361 (x : nat) : (term245 x) = term65.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem6208362 : term244 = term65.
Proof. exact (@lem6208361 term6). Qed.
Lemma lem6208363 : term856 = term65.
Proof. exact (TRANS (@lem6208359) (@lem6208362)). Qed.
Lemma lem6208365 (m : nat) (n : nat) : (term130 m n) = (term131 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6208366 : term132 = term133.
Proof. exact (@lem6208365 term6 term6). Qed.
Lemma lem6208367 : (term134 = (BIT1 0)) = (term135 = term6).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6208368 : term135 = term6.
Proof. exact (EQ_MP (@lem6208367) (@lem940073)). Qed.
Lemma lem6208369 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6208370 : term133 = term102.
Proof. exact (MK_COMB (@lem6208369) (@lem6208368)). Qed.
Lemma lem6208371 : term132 = term102.
Proof. exact (TRANS (@lem6208366) (@lem6208370)). Qed.
Lemma lem6208372 : term242 = term242.
Proof. exact (eq_refl term242). Qed.
Lemma lem6208373 : term246 = term244.
Proof. exact (MK_COMB (@lem6208372) (@lem6208371)). Qed.
Lemma lem6208375 (x : nat) : (term245 x) = term65.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem6208376 : term244 = term65.
Proof. exact (@lem6208375 term6). Qed.
Lemma lem6208377 : term246 = term65.
Proof. exact (TRANS (@lem6208373) (@lem6208376)). Qed.
Lemma lem6208378 : term65 = term246.
Proof. exact (SYM (@lem6208377)). Qed.
Lemma lem6208379 : term856 = term246.
Proof. exact (TRANS (@lem6208363) (@lem6208378)). Qed.
Lemma lem6208380 : term848 = term120.
Proof. exact (@lem6208330 (@lem6208379)). Qed.
Lemma lem6208381 : term847 = term120.
Proof. exact (TRANS (@lem6208296) (@lem6208380)). Qed.
Lemma lem6208383 (x : real) : (term139 x) = x.
Proof. exact (EQ_MP (@lem1981475 x) (@lem1981474 x)). Qed.
Lemma lem6208384 : term120 = term65.
Proof. exact (@lem6208383 term65). Qed.
Lemma lem6208385 : term847 = term65.
Proof. exact (TRANS (@lem6208381) (@lem6208384)). Qed.
Lemma lem6208386 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem6208387 : term857 = term242.
Proof. exact (MK_COMB (@lem6208386) (@lem6208385)). Qed.
Lemma lem6208388 (_79021 : int) : (real_of_int _79021) = (real_of_int _79021).
Proof. exact (eq_refl (real_of_int _79021)). Qed.
Lemma lem6208389 (_79021 : int) : (term844 _79021) = (term248 _79021).
Proof. exact (MK_COMB (@lem6208387) (@lem6208388 _79021)). Qed.
Lemma lem6208390 (_79021 : int) : (term843 _79021) = (term248 _79021).
Proof. exact (TRANS (@lem6208287 _79021) (@lem6208389 _79021)). Qed.
Lemma lem6208391 (_79021 : int) : (term248 _79021) = term65.
Proof. exact (@lem1982719 (real_of_int _79021)). Qed.
Lemma lem6208392 (_79021 : int) : (term843 _79021) = term65.
Proof. exact (TRANS (@lem6208390 _79021) (@lem6208391 _79021)). Qed.
Lemma lem6208393 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem6208394 (_79021 : int) : (term858 _79021) = term250.
Proof. exact (MK_COMB (@lem6208393) (@lem6208392 _79021)). Qed.
Lemma lem6208395 (_79022 : int) : (term859 _79022) = (term860 _79022).
Proof. exact (@lem1982753 (real_of_int _79022) (term541 _79022) term102 term212). Qed.
Lemma lem6208396 (_79022 : int) : (term861 _79022) = (term844 _79022).
Proof. exact (@lem1982715 term123 (real_of_int _79022)). Qed.
Lemma lem6208398 (x : nat) : (real_of_num x) = (term119 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6208399 : term102 = term147.
Proof. exact (@lem6208398 term6). Qed.
Lemma lem6208401 (x : nat) : (term121 x) = (term122 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem6208402 : term123 = term124.
Proof. exact (@lem6208401 term6). Qed.
Lemma lem6208403 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem6208404 : term845 = term846.
Proof. exact (MK_COMB (@lem6208403) (@lem6208402)). Qed.
Lemma lem6208405 : term847 = term848.
Proof. exact (MK_COMB (@lem6208404) (@lem6208399)). Qed.
Lemma lem6208406 : term849.
Proof. exact (@lem1981473 term123 term102 term102 term102 term65 term102). Qed.
Lemma lem6208408 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6208409 : term156 = term157.
Proof. exact (@lem6208408 (NUMERAL 0) term6). Qed.
Lemma lem6208410 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6208411 (h1 : term158 = (BIT1 0)) : term157 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6208412 : (term158 = (BIT1 0)) = (term157 = True).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6208411 h1) (fun h1 : term157 = True => @lem6208410)). Qed.
Lemma lem6208413 : term157 = True.
Proof. exact (EQ_MP (@lem6208412) (@lem6208410)). Qed.
Lemma lem6208414 : term156 = True.
Proof. exact (TRANS (@lem6208409) (@lem6208413)). Qed.
Lemma lem6208415 : True = term156.
Proof. exact (SYM (@lem6208414)). Qed.
Lemma lem6208416 : term156.
Proof. exact (EQ_MP (@lem6208415) (@lem0)). Qed.
Lemma lem6208417 : term850.
Proof. exact (@lem6208406 (@lem6208416)). Qed.
Lemma lem6208419 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6208420 : term156 = term157.
Proof. exact (@lem6208419 (NUMERAL 0) term6). Qed.
Lemma lem6208421 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6208422 (h1 : term158 = (BIT1 0)) : term157 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6208423 : (term158 = (BIT1 0)) = (term157 = True).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6208422 h1) (fun h1 : term157 = True => @lem6208421)). Qed.
Lemma lem6208424 : term157 = True.
Proof. exact (EQ_MP (@lem6208423) (@lem6208421)). Qed.
Lemma lem6208425 : term156 = True.
Proof. exact (TRANS (@lem6208420) (@lem6208424)). Qed.
Lemma lem6208426 : True = term156.
Proof. exact (SYM (@lem6208425)). Qed.
Lemma lem6208427 : term156.
Proof. exact (EQ_MP (@lem6208426) (@lem0)). Qed.
Lemma lem6208428 : term851.
Proof. exact (@lem6208417 (@lem6208427)). Qed.
Lemma lem6208430 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6208431 : term156 = term157.
Proof. exact (@lem6208430 (NUMERAL 0) term6). Qed.
Lemma lem6208432 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6208433 (h1 : term158 = (BIT1 0)) : term157 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6208434 : (term158 = (BIT1 0)) = (term157 = True).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6208433 h1) (fun h1 : term157 = True => @lem6208432)). Qed.
Lemma lem6208435 : term157 = True.
Proof. exact (EQ_MP (@lem6208434) (@lem6208432)). Qed.
Lemma lem6208436 : term156 = True.
Proof. exact (TRANS (@lem6208431) (@lem6208435)). Qed.
Lemma lem6208437 : True = term156.
Proof. exact (SYM (@lem6208436)). Qed.
Lemma lem6208438 : term156.
Proof. exact (EQ_MP (@lem6208437) (@lem0)). Qed.
Lemma lem6208439 : term852.
Proof. exact (@lem6208428 (@lem6208438)). Qed.
Lemma lem6208441 (m : nat) (n : nat) : (term130 m n) = (term131 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6208442 : term132 = term133.
Proof. exact (@lem6208441 term6 term6). Qed.
Lemma lem6208443 : (term134 = (BIT1 0)) = (term135 = term6).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6208444 : term135 = term6.
Proof. exact (EQ_MP (@lem6208443) (@lem940073)). Qed.
Lemma lem6208445 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6208446 : term133 = term102.
Proof. exact (MK_COMB (@lem6208445) (@lem6208444)). Qed.
Lemma lem6208447 : term132 = term102.
Proof. exact (TRANS (@lem6208442) (@lem6208446)). Qed.
Lemma lem6208449 (m : nat) (n : nat) : (term192 m n) = (term193 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem6208450 : term264 = term265.
Proof. exact (@lem6208449 term6 term6). Qed.
Lemma lem6208451 : (term134 = (BIT1 0)) = (term135 = term6).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6208452 : term135 = term6.
Proof. exact (EQ_MP (@lem6208451) (@lem940073)). Qed.
Lemma lem6208453 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6208454 : term133 = term102.
Proof. exact (MK_COMB (@lem6208453) (@lem6208452)). Qed.
Lemma lem6208455 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem6208456 : term265 = term123.
Proof. exact (MK_COMB (@lem6208455) (@lem6208454)). Qed.
Lemma lem6208457 : term264 = term123.
Proof. exact (TRANS (@lem6208450) (@lem6208456)). Qed.
Lemma lem6208458 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem6208459 : term853 = term845.
Proof. exact (MK_COMB (@lem6208458) (@lem6208457)). Qed.
Lemma lem6208460 : term854 = term847.
Proof. exact (MK_COMB (@lem6208459) (@lem6208447)). Qed.
Lemma lem6208462 (m : nat) : (term682 m) = term65.
Proof. exact (proj1 (@lem1367303 m)). Qed.
Lemma lem6208463 : term847 = term65.
Proof. exact (@lem6208462 term6). Qed.
Lemma lem6208464 : term854 = term65.
Proof. exact (TRANS (@lem6208460) (@lem6208463)). Qed.
Lemma lem6208465 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem6208466 : term855 = term242.
Proof. exact (MK_COMB (@lem6208465) (@lem6208464)). Qed.
Lemma lem6208467 : term102 = term102.
Proof. exact (eq_refl term102). Qed.
Lemma lem6208468 : term856 = term244.
Proof. exact (MK_COMB (@lem6208466) (@lem6208467)). Qed.
Lemma lem6208470 (x : nat) : (term245 x) = term65.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem6208471 : term244 = term65.
Proof. exact (@lem6208470 term6). Qed.
Lemma lem6208472 : term856 = term65.
Proof. exact (TRANS (@lem6208468) (@lem6208471)). Qed.
Lemma lem6208474 (m : nat) (n : nat) : (term130 m n) = (term131 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6208475 : term132 = term133.
Proof. exact (@lem6208474 term6 term6). Qed.
Lemma lem6208476 : (term134 = (BIT1 0)) = (term135 = term6).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6208477 : term135 = term6.
Proof. exact (EQ_MP (@lem6208476) (@lem940073)). Qed.
Lemma lem6208478 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6208479 : term133 = term102.
Proof. exact (MK_COMB (@lem6208478) (@lem6208477)). Qed.
Lemma lem6208480 : term132 = term102.
Proof. exact (TRANS (@lem6208475) (@lem6208479)). Qed.
Lemma lem6208481 : term242 = term242.
Proof. exact (eq_refl term242). Qed.
Lemma lem6208482 : term246 = term244.
Proof. exact (MK_COMB (@lem6208481) (@lem6208480)). Qed.
Lemma lem6208484 (x : nat) : (term245 x) = term65.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem6208485 : term244 = term65.
Proof. exact (@lem6208484 term6). Qed.
Lemma lem6208486 : term246 = term65.
Proof. exact (TRANS (@lem6208482) (@lem6208485)). Qed.
Lemma lem6208487 : term65 = term246.
Proof. exact (SYM (@lem6208486)). Qed.
Lemma lem6208488 : term856 = term246.
Proof. exact (TRANS (@lem6208472) (@lem6208487)). Qed.
Lemma lem6208489 : term848 = term120.
Proof. exact (@lem6208439 (@lem6208488)). Qed.
Lemma lem6208490 : term847 = term120.
Proof. exact (TRANS (@lem6208405) (@lem6208489)). Qed.
Lemma lem6208492 (x : real) : (term139 x) = x.
Proof. exact (EQ_MP (@lem1981475 x) (@lem1981474 x)). Qed.
Lemma lem6208493 : term120 = term65.
Proof. exact (@lem6208492 term65). Qed.
Lemma lem6208494 : term847 = term65.
Proof. exact (TRANS (@lem6208490) (@lem6208493)). Qed.
Lemma lem6208495 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem6208496 : term857 = term242.
Proof. exact (MK_COMB (@lem6208495) (@lem6208494)). Qed.
Lemma lem6208497 (_79022 : int) : (real_of_int _79022) = (real_of_int _79022).
Proof. exact (eq_refl (real_of_int _79022)). Qed.
Lemma lem6208498 (_79022 : int) : (term844 _79022) = (term248 _79022).
Proof. exact (MK_COMB (@lem6208496) (@lem6208497 _79022)). Qed.
Lemma lem6208499 (_79022 : int) : (term861 _79022) = (term248 _79022).
Proof. exact (TRANS (@lem6208396 _79022) (@lem6208498 _79022)). Qed.
Lemma lem6208500 (_79022 : int) : (term248 _79022) = term65.
Proof. exact (@lem1982719 (real_of_int _79022)). Qed.
Lemma lem6208501 (_79022 : int) : (term861 _79022) = term65.
Proof. exact (TRANS (@lem6208499 _79022) (@lem6208500 _79022)). Qed.
Lemma lem6208502 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem6208503 (_79022 : int) : (term862 _79022) = term250.
Proof. exact (MK_COMB (@lem6208502) (@lem6208501 _79022)). Qed.
Lemma lem6208505 (x : nat) : (term121 x) = (term122 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem6208506 : term212 = term215.
Proof. exact (@lem6208505 term22). Qed.
Lemma lem6208508 (x : nat) : (real_of_num x) = (term119 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6208509 : term102 = term147.
Proof. exact (@lem6208508 term6). Qed.
Lemma lem6208510 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem6208511 : term500 = term501.
Proof. exact (MK_COMB (@lem6208510) (@lem6208509)). Qed.
Lemma lem6208512 : term863 = term864.
Proof. exact (MK_COMB (@lem6208511) (@lem6208506)). Qed.
Lemma lem6208513 : term865.
Proof. exact (@lem1981473 term102 term102 term212 term102 term123 term102). Qed.
Lemma lem6208515 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6208516 : term156 = term157.
Proof. exact (@lem6208515 (NUMERAL 0) term6). Qed.
Lemma lem6208517 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6208518 (h1 : term158 = (BIT1 0)) : term157 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6208519 : (term158 = (BIT1 0)) = (term157 = True).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6208518 h1) (fun h1 : term157 = True => @lem6208517)). Qed.
Lemma lem6208520 : term157 = True.
Proof. exact (EQ_MP (@lem6208519) (@lem6208517)). Qed.
Lemma lem6208521 : term156 = True.
Proof. exact (TRANS (@lem6208516) (@lem6208520)). Qed.
Lemma lem6208522 : True = term156.
Proof. exact (SYM (@lem6208521)). Qed.
Lemma lem6208523 : term156.
Proof. exact (EQ_MP (@lem6208522) (@lem0)). Qed.
Lemma lem6208524 : term866.
Proof. exact (@lem6208513 (@lem6208523)). Qed.
Lemma lem6208526 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6208527 : term156 = term157.
Proof. exact (@lem6208526 (NUMERAL 0) term6). Qed.
Lemma lem6208528 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6208529 (h1 : term158 = (BIT1 0)) : term157 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6208530 : (term158 = (BIT1 0)) = (term157 = True).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6208529 h1) (fun h1 : term157 = True => @lem6208528)). Qed.
Lemma lem6208531 : term157 = True.
Proof. exact (EQ_MP (@lem6208530) (@lem6208528)). Qed.
Lemma lem6208532 : term156 = True.
Proof. exact (TRANS (@lem6208527) (@lem6208531)). Qed.
Lemma lem6208533 : True = term156.
Proof. exact (SYM (@lem6208532)). Qed.
Lemma lem6208534 : term156.
Proof. exact (EQ_MP (@lem6208533) (@lem0)). Qed.
Lemma lem6208535 : term867.
Proof. exact (@lem6208524 (@lem6208534)). Qed.
Lemma lem6208537 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6208538 : term156 = term157.
Proof. exact (@lem6208537 (NUMERAL 0) term6). Qed.
Lemma lem6208539 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6208540 (h1 : term158 = (BIT1 0)) : term157 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6208541 : (term158 = (BIT1 0)) = (term157 = True).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6208540 h1) (fun h1 : term157 = True => @lem6208539)). Qed.
Lemma lem6208542 : term157 = True.
Proof. exact (EQ_MP (@lem6208541) (@lem6208539)). Qed.
Lemma lem6208543 : term156 = True.
Proof. exact (TRANS (@lem6208538) (@lem6208542)). Qed.
Lemma lem6208544 : True = term156.
Proof. exact (SYM (@lem6208543)). Qed.
Lemma lem6208545 : term156.
Proof. exact (EQ_MP (@lem6208544) (@lem0)). Qed.
Lemma lem6208546 : term868.
Proof. exact (@lem6208535 (@lem6208545)). Qed.
Lemma lem6208548 (m : nat) (n : nat) : (term192 m n) = (term193 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem6208549 : term234 = term235.
Proof. exact (@lem6208548 term22 term6). Qed.
Lemma lem6208550 : term35 = term20.
Proof. exact (@lem996237 term20). Qed.
Lemma lem6208551 : (term35 = term20) = (term36 = term22).
Proof. exact (@lem1007663 term20 (BIT1 0) term20). Qed.
Lemma lem6208552 : term36 = term22.
Proof. exact (EQ_MP (@lem6208551) (@lem6208550)). Qed.
Lemma lem6208553 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6208554 : term236 = term90.
Proof. exact (MK_COMB (@lem6208553) (@lem6208552)). Qed.
Lemma lem6208555 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem6208556 : term235 = term212.
Proof. exact (MK_COMB (@lem6208555) (@lem6208554)). Qed.
Lemma lem6208557 : term234 = term212.
Proof. exact (TRANS (@lem6208549) (@lem6208556)). Qed.
Lemma lem6208559 (m : nat) (n : nat) : (term130 m n) = (term131 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6208560 : term132 = term133.
Proof. exact (@lem6208559 term6 term6). Qed.
Lemma lem6208561 : (term134 = (BIT1 0)) = (term135 = term6).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6208562 : term135 = term6.
Proof. exact (EQ_MP (@lem6208561) (@lem940073)). Qed.
Lemma lem6208563 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6208564 : term133 = term102.
Proof. exact (MK_COMB (@lem6208563) (@lem6208562)). Qed.
Lemma lem6208565 : term132 = term102.
Proof. exact (TRANS (@lem6208560) (@lem6208564)). Qed.
Lemma lem6208566 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem6208567 : term508 = term500.
Proof. exact (MK_COMB (@lem6208566) (@lem6208565)). Qed.
Lemma lem6208568 : term869 = term863.
Proof. exact (MK_COMB (@lem6208567) (@lem6208557)). Qed.
Lemma lem6208571 : term870 = term123.
Proof. exact (@lem1367771 term6 term6). Qed.
Lemma lem6208572 : term19 = term20.
Proof. exact (@lem706885). Qed.
Lemma lem6208573 : (term19 = term20) = (term21 = term22).
Proof. exact (@lem1006570 (BIT1 0) (BIT1 0) term20). Qed.
Lemma lem6208574 : term21 = term22.
Proof. exact (EQ_MP (@lem6208573) (@lem6208572)). Qed.
Lemma lem6208575 : term22 = term21.
Proof. exact (SYM (@lem6208574)). Qed.
Lemma lem6208576 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6208577 : term90 = term510.
Proof. exact (MK_COMB (@lem6208576) (@lem6208575)). Qed.
Lemma lem6208578 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem6208579 : term212 = term871.
Proof. exact (MK_COMB (@lem6208578) (@lem6208577)). Qed.
Lemma lem6208580 : term500 = term500.
Proof. exact (eq_refl term500). Qed.
Lemma lem6208581 : term863 = term870.
Proof. exact (MK_COMB (@lem6208580) (@lem6208579)). Qed.
Lemma lem6208582 : term863 = term123.
Proof. exact (TRANS (@lem6208581) (@lem6208571)). Qed.
Lemma lem6208583 : term869 = term123.
Proof. exact (TRANS (@lem6208568) (@lem6208582)). Qed.
Lemma lem6208584 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem6208585 : term872 = term125.
Proof. exact (MK_COMB (@lem6208584) (@lem6208583)). Qed.
Lemma lem6208586 : term102 = term102.
Proof. exact (eq_refl term102). Qed.
Lemma lem6208587 : term873 = term264.
Proof. exact (MK_COMB (@lem6208585) (@lem6208586)). Qed.
Lemma lem6208589 (m : nat) (n : nat) : (term192 m n) = (term193 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem6208590 : term264 = term265.
Proof. exact (@lem6208589 term6 term6). Qed.
Lemma lem6208591 : (term134 = (BIT1 0)) = (term135 = term6).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6208592 : term135 = term6.
Proof. exact (EQ_MP (@lem6208591) (@lem940073)). Qed.
Lemma lem6208593 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6208594 : term133 = term102.
Proof. exact (MK_COMB (@lem6208593) (@lem6208592)). Qed.
Lemma lem6208595 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem6208596 : term265 = term123.
Proof. exact (MK_COMB (@lem6208595) (@lem6208594)). Qed.
Lemma lem6208597 : term264 = term123.
Proof. exact (TRANS (@lem6208590) (@lem6208596)). Qed.
Lemma lem6208598 : term873 = term123.
Proof. exact (TRANS (@lem6208587) (@lem6208597)). Qed.
Lemma lem6208600 (m : nat) (n : nat) : (term130 m n) = (term131 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6208601 : term132 = term133.
Proof. exact (@lem6208600 term6 term6). Qed.
Lemma lem6208602 : (term134 = (BIT1 0)) = (term135 = term6).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6208603 : term135 = term6.
Proof. exact (EQ_MP (@lem6208602) (@lem940073)). Qed.
Lemma lem6208604 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6208605 : term133 = term102.
Proof. exact (MK_COMB (@lem6208604) (@lem6208603)). Qed.
Lemma lem6208606 : term132 = term102.
Proof. exact (TRANS (@lem6208601) (@lem6208605)). Qed.
Lemma lem6208607 : term125 = term125.
Proof. exact (eq_refl term125). Qed.
Lemma lem6208608 : term266 = term264.
Proof. exact (MK_COMB (@lem6208607) (@lem6208606)). Qed.
Lemma lem6208610 (m : nat) (n : nat) : (term192 m n) = (term193 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem6208611 : term264 = term265.
Proof. exact (@lem6208610 term6 term6). Qed.
Lemma lem6208612 : (term134 = (BIT1 0)) = (term135 = term6).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6208613 : term135 = term6.
Proof. exact (EQ_MP (@lem6208612) (@lem940073)). Qed.
Lemma lem6208614 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6208615 : term133 = term102.
Proof. exact (MK_COMB (@lem6208614) (@lem6208613)). Qed.
Lemma lem6208616 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem6208617 : term265 = term123.
Proof. exact (MK_COMB (@lem6208616) (@lem6208615)). Qed.
Lemma lem6208618 : term264 = term123.
Proof. exact (TRANS (@lem6208611) (@lem6208617)). Qed.
Lemma lem6208619 : term266 = term123.
Proof. exact (TRANS (@lem6208608) (@lem6208618)). Qed.
Lemma lem6208620 : term123 = term266.
Proof. exact (SYM (@lem6208619)). Qed.
Lemma lem6208621 : term873 = term266.
Proof. exact (TRANS (@lem6208598) (@lem6208620)). Qed.
Lemma lem6208622 : term864 = term124.
Proof. exact (@lem6208546 (@lem6208621)). Qed.
Lemma lem6208623 : term863 = term124.
Proof. exact (TRANS (@lem6208512) (@lem6208622)). Qed.
Lemma lem6208625 (x : real) : (term139 x) = x.
Proof. exact (EQ_MP (@lem1981475 x) (@lem1981474 x)). Qed.
Lemma lem6208626 : term124 = term123.
Proof. exact (@lem6208625 term123). Qed.
Lemma lem6208627 : term863 = term123.
Proof. exact (TRANS (@lem6208623) (@lem6208626)). Qed.
Lemma lem6208628 (_79022 : int) : (term860 _79022) = term267.
Proof. exact (MK_COMB (@lem6208503 _79022) (@lem6208627)). Qed.
Lemma lem6208629 (_79022 : int) : (term859 _79022) = term267.
Proof. exact (TRANS (@lem6208395 _79022) (@lem6208628 _79022)). Qed.
Lemma lem6208630 : term267 = term123.
Proof. exact (@lem1982721 term123). Qed.
Lemma lem6208631 (_79022 : int) : (term859 _79022) = term123.
Proof. exact (TRANS (@lem6208629 _79022) (@lem6208630)). Qed.
Lemma lem6208632 (_79021 : int) (_79022 : int) : (term842 _79021 _79022) = term267.
Proof. exact (MK_COMB (@lem6208394 _79021) (@lem6208631 _79022)). Qed.
Lemma lem6208633 (_79021 : int) (_79022 : int) : (term841 _79021 _79022) = term267.
Proof. exact (TRANS (@lem6208286 _79021 _79022) (@lem6208632 _79021 _79022)). Qed.
Lemma lem6208634 : term267 = term123.
Proof. exact (@lem1982721 term123). Qed.
Lemma lem6208635 (_79021 : int) (_79022 : int) : (term841 _79021 _79022) = term123.
Proof. exact (TRANS (@lem6208633 _79021 _79022) (@lem6208634)). Qed.
Lemma lem6208636 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem6208637 (_79021 : int) (_79022 : int) : (term874 _79021 _79022) = term269.
Proof. exact (MK_COMB (@lem6208636) (@lem6208635 _79021 _79022)). Qed.
Lemma lem6208638 : term65 = term65.
Proof. exact (eq_refl term65). Qed.
Lemma lem6208639 (_79021 : int) (_79022 : int) : (term840 _79021 _79022) = term270.
Proof. exact (MK_COMB (@lem6208637 _79021 _79022) (@lem6208638)). Qed.
Lemma lem6208640 (_79021 : int) (_79022 : int) (h1 : term827 _79021 _79022) : term270.
Proof. exact (EQ_MP (@lem6208639 _79021 _79022) (@lem6208285 _79021 _79022 h1)). Qed.
Lemma lem6208642 (y : real) (x : real) : (real_ge x y) = (real_le y x).
Proof. exact (EQ_MP (@lem1980260 y x) (@lem1980259 y x)). Qed.
Lemma lem6208643 : term270 = term273.
Proof. exact (@lem6208642 term65 term123). Qed.
Lemma lem6208645 (x : nat) : (term121 x) = (term122 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem6208646 : term123 = term124.
Proof. exact (@lem6208645 term6). Qed.
Lemma lem6208648 (x : nat) : (real_of_num x) = (term119 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6208649 : term65 = term120.
Proof. exact (@lem6208648 (NUMERAL 0)). Qed.
Lemma lem6208650 : real_le = real_le.
Proof. exact (eq_refl real_le). Qed.
Lemma lem6208651 : term67 = term274.
Proof. exact (MK_COMB (@lem6208650) (@lem6208649)). Qed.
Lemma lem6208652 : term273 = term275.
Proof. exact (MK_COMB (@lem6208651) (@lem6208646)). Qed.
Lemma lem6208653 : term276.
Proof. exact (@lem1980026 term65 term102 term123 term102). Qed.
Lemma lem6208655 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6208656 : term156 = term157.
Proof. exact (@lem6208655 (NUMERAL 0) term6). Qed.
Lemma lem6208657 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6208658 (h1 : term158 = (BIT1 0)) : term157 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6208659 : (term158 = (BIT1 0)) = (term157 = True).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6208658 h1) (fun h1 : term157 = True => @lem6208657)). Qed.
Lemma lem6208660 : term157 = True.
Proof. exact (EQ_MP (@lem6208659) (@lem6208657)). Qed.
Lemma lem6208661 : term156 = True.
Proof. exact (TRANS (@lem6208656) (@lem6208660)). Qed.
Lemma lem6208662 : True = term156.
Proof. exact (SYM (@lem6208661)). Qed.
Lemma lem6208663 : term156.
Proof. exact (EQ_MP (@lem6208662) (@lem0)). Qed.
Lemma lem6208664 : term277.
Proof. exact (@lem6208653 (@lem6208663)). Qed.
Lemma lem6208666 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6208667 : term156 = term157.
Proof. exact (@lem6208666 (NUMERAL 0) term6). Qed.
Lemma lem6208668 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6208669 (h1 : term158 = (BIT1 0)) : term157 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6208670 : (term158 = (BIT1 0)) = (term157 = True).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6208669 h1) (fun h1 : term157 = True => @lem6208668)). Qed.
Lemma lem6208671 : term157 = True.
Proof. exact (EQ_MP (@lem6208670) (@lem6208668)). Qed.
Lemma lem6208672 : term156 = True.
Proof. exact (TRANS (@lem6208667) (@lem6208671)). Qed.
Lemma lem6208673 : True = term156.
Proof. exact (SYM (@lem6208672)). Qed.
Lemma lem6208674 : term156.
Proof. exact (EQ_MP (@lem6208673) (@lem0)). Qed.
Lemma lem6208675 : term275 = term278.
Proof. exact (@lem6208664 (@lem6208674)). Qed.
Lemma lem6208677 (m : nat) (n : nat) : (term192 m n) = (term193 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem6208678 : term264 = term265.
Proof. exact (@lem6208677 term6 term6). Qed.
Lemma lem6208679 : (term134 = (BIT1 0)) = (term135 = term6).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6208680 : term135 = term6.
Proof. exact (EQ_MP (@lem6208679) (@lem940073)). Qed.
Lemma lem6208681 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6208682 : term133 = term102.
Proof. exact (MK_COMB (@lem6208681) (@lem6208680)). Qed.
Lemma lem6208683 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem6208684 : term265 = term123.
Proof. exact (MK_COMB (@lem6208683) (@lem6208682)). Qed.
Lemma lem6208685 : term264 = term123.
Proof. exact (TRANS (@lem6208678) (@lem6208684)). Qed.
Lemma lem6208687 (x : nat) : (term245 x) = term65.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem6208688 : term244 = term65.
Proof. exact (@lem6208687 term6). Qed.
Lemma lem6208689 : real_le = real_le.
Proof. exact (eq_refl real_le). Qed.
Lemma lem6208690 : term279 = term67.
Proof. exact (MK_COMB (@lem6208689) (@lem6208688)). Qed.
Lemma lem6208691 : term278 = term273.
Proof. exact (MK_COMB (@lem6208690) (@lem6208685)). Qed.
Lemma lem6208693 (m : nat) (n : nat) : (term280 m n) = (term281 m n).
Proof. exact (proj2 (@lem1365406 m n)). Qed.
Lemma lem6208694 : term273 = term282.
Proof. exact (@lem6208693 (NUMERAL 0) term6). Qed.
Lemma lem6208695 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6208696 (h1 : term158 = (BIT1 0)) : (term6 = (NUMERAL 0)) = False.
Proof. exact (@lem1013352 0 0 (BIT1 0) h1). Qed.
Lemma lem6208697 : (term158 = (BIT1 0)) = ((term6 = (NUMERAL 0)) = False).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6208696 h1) (fun h1 : (term6 = (NUMERAL 0)) = False => @lem6208695)). Qed.
Lemma lem6208698 : (term6 = (NUMERAL 0)) = False.
Proof. exact (EQ_MP (@lem6208697) (@lem6208695)). Qed.
Lemma lem6208699 : ((NUMERAL 0) = (NUMERAL 0)) = True.
Proof. exact (@lem1013364 0). Qed.
Lemma lem6208700 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6208701 : term283 = (and True).
Proof. exact (MK_COMB (@lem6208700) (@lem6208699)). Qed.
Lemma lem6208702 : term282 = (True /\ False).
Proof. exact (MK_COMB (@lem6208701) (@lem6208698)). Qed.
Lemma lem6208704 : (True /\ False) = False.
Proof. exact (proj1 (@lem1365106)). Qed.
Lemma lem6208705 : term282 = False.
Proof. exact (TRANS (@lem6208702) (@lem6208704)). Qed.
Lemma lem6208706 : term273 = False.
Proof. exact (TRANS (@lem6208694) (@lem6208705)). Qed.
Lemma lem6208707 : term278 = False.
Proof. exact (TRANS (@lem6208691) (@lem6208706)). Qed.
Lemma lem6208708 : term275 = False.
Proof. exact (TRANS (@lem6208675) (@lem6208707)). Qed.
Lemma lem6208709 : term273 = False.
Proof. exact (TRANS (@lem6208652) (@lem6208708)). Qed.
Lemma lem6208710 : term270 = False.
Proof. exact (TRANS (@lem6208643) (@lem6208709)). Qed.
Lemma lem6208711 (_79021 : int) (_79022 : int) (h1 : term827 _79021 _79022) : False.
Proof. exact (EQ_MP (@lem6208710) (@lem6208640 _79021 _79022 h1)). Qed.
Lemma lem6208712 (_79021 : int) (_79022 : int) (h1 : term999 _79021 _79022) : False.
Proof. exact (or_elim (@lem6207440 _79021 _79022 h1) (fun h0 : term1096 _79021 _79022 => @lem6208125 _79021 _79022 h0) (fun h0 : term827 _79021 _79022 => @lem6208711 _79021 _79022 h0)). Qed.
Lemma lem6208713 (_79021 : int) (_79022 : int) (h1 : term1007 _79021 _79022) : False.
Proof. exact (or_elim (@lem6205884 _79021 _79022 h1) (fun h0 : term1002 _79021 _79022 => @lem6207439 _79021 _79022 h0) (fun h0 : term999 _79021 _79022 => @lem6208712 _79021 _79022 h0)). Qed.
Lemma lem6208715 (_79021 : int) (_79022 : int) (h1 : term1007 _79021 _79022) : term1007 _79021 _79022.
Proof. exact (h1). Qed.
Lemma lem6208716 (_79021 : int) (_79022 : int) (h1 : term1007 _79021 _79022) : (term1007 _79021 _79022) = False.
Proof. exact (prop_ext (fun h2 : term1007 _79021 _79022 => @lem6208713 _79021 _79022 h1) (fun h2 : False => @lem6208715 _79021 _79022 h1)). Qed.
Lemma lem6208717 (_79021 : int) (_79022 : int) (h1 : term1007 _79021 _79022) : False.
Proof. exact (EQ_MP (@lem6208716 _79021 _79022 h1) (@lem6208715 _79021 _79022 h1)). Qed.
Lemma lem6208718 (_79021 : int) (_79022 : int) (h1 : term954 _79021 _79022) : term954 _79021 _79022.
Proof. exact (h1). Qed.
Lemma lem6208719 (_79021 : int) (_79022 : int) (h1 : term954 _79021 _79022) : term1007 _79021 _79022.
Proof. exact (EQ_MP (@lem6205862 _79021 _79022) (@lem6208718 _79021 _79022 h1)). Qed.
Lemma lem6208720 (_79021 : int) (_79022 : int) (h1 : term954 _79021 _79022) : (term1007 _79021 _79022) = False.
Proof. exact (prop_ext (fun h2 : term1007 _79021 _79022 => @lem6208717 _79021 _79022 h2) (fun h2 : False => @lem6208719 _79021 _79022 h1)). Qed.
Lemma lem6208721 (_79021 : int) (_79022 : int) (h1 : term954 _79021 _79022) : False.
Proof. exact (EQ_MP (@lem6208720 _79021 _79022 h1) (@lem6208719 _79021 _79022 h1)). Qed.
Lemma lem6208722 (_79021 : int) (_79022 : int) : term1102 _79021 _79022.
Proof. exact (fun h0 : term954 _79021 _79022 => @lem6208721 _79021 _79022 h0). Qed.
Lemma lem6208723 (_79021 : int) (_79022 : int) : term1103 _79021 _79022.
Proof. exact (@lem1386578 (term1104 _79021 _79022)). Qed.
Lemma lem6208726 (_79021 : int) (_79022 : int) : term1104 _79021 _79022.
Proof. exact (@lem6208723 _79021 _79022 (@lem6208722 _79021 _79022)). Qed.
Lemma lem6208727 (_79021 : int) (_79022 : int) : (term953 _79021 _79022) = (term938 _79021 _79022).
Proof. exact (SYM (@lem6205063 _79021 _79022)). Qed.
Lemma lem6208728 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem6208729 (_79021 : int) (_79022 : int) : (term1104 _79021 _79022) = (term913 _79021 _79022).
Proof. exact (MK_COMB (@lem6208728) (@lem6208727 _79021 _79022)). Qed.
Lemma lem6208730 (_79021 : int) (_79022 : int) : term913 _79021 _79022.
Proof. exact (EQ_MP (@lem6208729 _79021 _79022) (@lem6208726 _79021 _79022)). Qed.
Lemma lem6208731 (_79021 : int) (_79022 : int) : term914 _79021 _79022.
Proof. exact (EQ_MP (@lem6204802 _79021 _79022) (@lem6208730 _79021 _79022)). Qed.
Lemma lem6208732 (m : nat) (n : nat) : term1105 m n.
Proof. exact (@lem6208731 (int_of_num m) (int_of_num n)). Qed.
Lemma lem6208733 (m : nat) (n : nat) : term1106 m n.
Proof. exact (@lem6208732 m n (@lem6204798 m)). Qed.
Lemma lem6208734 (m : nat) (n : nat) : term912 m n.
Proof. exact (@lem6208733 m n (@lem6204801 n)). Qed.
Lemma lem6208735 (m : nat) (n : nat) : (term912 m n) = ((term880 m n) = (term376 m n)).
Proof. exact (SYM (@lem6204795 m n)). Qed.
Lemma lem6208753 (m : nat) : (S m) = (term0 m).
Proof. exact (EQ_MP (@lem2841417 m) (@lem2841416 m)). Qed.
Lemma lem6208754 (n : nat) : (S n) = (term0 n).
Proof. exact (@lem6208753 n). Qed.
Lemma lem6208755 : term1 = term1.
Proof. exact (eq_refl term1). Qed.
Lemma lem6208756 (n : nat) : (term2 n) = (term3 n).
Proof. exact (MK_COMB (@lem6208755) (@lem6208754 n)). Qed.
Lemma lem6208757 : Nat.add = Nat.add.
Proof. exact (eq_refl Nat.add). Qed.
Lemma lem6208758 (n : nat) : (term4 n) = (term5 n).
Proof. exact (MK_COMB (@lem6208757) (@lem6208756 n)). Qed.
Lemma lem6208759 : term6 = term6.
Proof. exact (eq_refl term6). Qed.
Lemma lem6208760 (n : nat) : (term7 n) = (term8 n).
Proof. exact (MK_COMB (@lem6208758 n) (@lem6208759)). Qed.
Lemma lem6208761 : (@eq nat) = (@eq nat).
Proof. exact (eq_refl (@eq nat)). Qed.
Lemma lem6208762 (n : nat) : (term9 n) = (term10 n).
Proof. exact (MK_COMB (@lem6208761) (@lem6208760 n)). Qed.
Lemma lem6208764 (m : nat) : (S m) = (term0 m).
Proof. exact (EQ_MP (@lem2841417 m) (@lem2841416 m)). Qed.
Lemma lem6208765 (n : nat) : (term11 n) = (term12 n).
Proof. exact (@lem6208764 (term13 n)). Qed.
Lemma lem6208766 : S = S.
Proof. exact (eq_refl S). Qed.
Lemma lem6208767 (n : nat) : (term14 n) = (term15 n).
Proof. exact (MK_COMB (@lem6208766) (@lem6208765 n)). Qed.
Lemma lem6208769 (m : nat) : (S m) = (term0 m).
Proof. exact (EQ_MP (@lem2841417 m) (@lem2841416 m)). Qed.
Lemma lem6208770 (n : nat) : (term15 n) = (term16 n).
Proof. exact (@lem6208769 (term12 n)). Qed.
Lemma lem6208771 (n : nat) : (term14 n) = (term16 n).
Proof. exact (TRANS (@lem6208767 n) (@lem6208770 n)). Qed.
Lemma lem6208773 (n : nat) : ((term7 n) = (term14 n)) = ((term8 n) = (term16 n)).
Proof. exact (MK_COMB (@lem6208762 n) (@lem6208771 n)). Qed.
Lemma lem6208774 : term6 = term6.
Proof. exact (eq_refl term6). Qed.
Lemma lem6208792 (n : nat) : (term12 n) = (term17 n).
Proof. exact (@lem1032092 (term18 n) term6 term6). Qed.
Lemma lem6208793 : term19 = term20.
Proof. exact (@lem706885). Qed.
Lemma lem6208794 : (term19 = term20) = (term21 = term22).
Proof. exact (@lem1006570 (BIT1 0) (BIT1 0) term20). Qed.
Lemma lem6208795 : term21 = term22.
Proof. exact (EQ_MP (@lem6208794) (@lem6208793)). Qed.
Lemma lem6208796 (n : nat) : (term23 n) = (term23 n).
Proof. exact (eq_refl (term23 n)). Qed.
Lemma lem6208797 (n : nat) : (term17 n) = (term24 n).
Proof. exact (MK_COMB (@lem6208796 n) (@lem6208795)). Qed.
Lemma lem6208799 (n : nat) : (term12 n) = (term24 n).
Proof. exact (TRANS (@lem6208792 n) (@lem6208797 n)). Qed.
Lemma lem6208800 : Nat.add = Nat.add.
Proof. exact (eq_refl Nat.add). Qed.
Lemma lem6208801 (n : nat) : (term25 n) = (term26 n).
Proof. exact (MK_COMB (@lem6208800) (@lem6208799 n)). Qed.
Lemma lem6208802 (n : nat) : (term16 n) = (term27 n).
Proof. exact (MK_COMB (@lem6208801 n) (@lem6208774)). Qed.
Lemma lem6208803 (n : nat) : (term27 n) = (term28 n).
Proof. exact (@lem1032092 (term18 n) term22 term6). Qed.
Lemma lem6208804 : term29 = term30.
Proof. exact (@lem706949). Qed.
Lemma lem6208805 : (term29 = term30) = (term31 = term32).
Proof. exact (@lem1006570 term20 (BIT1 0) term30). Qed.
Lemma lem6208806 : term31 = term32.
Proof. exact (EQ_MP (@lem6208805) (@lem6208804)). Qed.
Lemma lem6208807 (n : nat) : (term23 n) = (term23 n).
Proof. exact (eq_refl (term23 n)). Qed.
Lemma lem6208808 (n : nat) : (term28 n) = (term33 n).
Proof. exact (MK_COMB (@lem6208807 n) (@lem6208806)). Qed.
Lemma lem6208809 (n : nat) : (term27 n) = (term33 n).
Proof. exact (TRANS (@lem6208803 n) (@lem6208808 n)). Qed.
Lemma lem6208810 (n : nat) : (term16 n) = (term33 n).
Proof. exact (TRANS (@lem6208802 n) (@lem6208809 n)). Qed.
Lemma lem6208811 : term6 = term6.
Proof. exact (eq_refl term6). Qed.
Lemma lem6208823 (n : nat) : (term3 n) = (term34 n).
Proof. exact (@lem1032118 n term22 term6). Qed.
Lemma lem6208824 : term35 = term20.
Proof. exact (@lem996237 term20). Qed.
Lemma lem6208825 : (term35 = term20) = (term36 = term22).
Proof. exact (@lem1007663 term20 (BIT1 0) term20). Qed.
Lemma lem6208826 : term36 = term22.
Proof. exact (EQ_MP (@lem6208825) (@lem6208824)). Qed.
Lemma lem6208829 (n : nat) : (term23 n) = (term23 n).
Proof. exact (eq_refl (term23 n)). Qed.
Lemma lem6208830 (n : nat) : (term34 n) = (term24 n).
Proof. exact (MK_COMB (@lem6208829 n) (@lem6208826)). Qed.
Lemma lem6208832 (n : nat) : (term3 n) = (term24 n).
Proof. exact (TRANS (@lem6208823 n) (@lem6208830 n)). Qed.
Lemma lem6208833 : Nat.add = Nat.add.
Proof. exact (eq_refl Nat.add). Qed.
Lemma lem6208834 (n : nat) : (term5 n) = (term26 n).
Proof. exact (MK_COMB (@lem6208833) (@lem6208832 n)). Qed.
Lemma lem6208835 (n : nat) : (term8 n) = (term27 n).
Proof. exact (MK_COMB (@lem6208834 n) (@lem6208811)). Qed.
Lemma lem6208836 (n : nat) : (term27 n) = (term28 n).
Proof. exact (@lem1032092 (term18 n) term22 term6). Qed.
Lemma lem6208837 : term29 = term30.
Proof. exact (@lem706949). Qed.
Lemma lem6208838 : (term29 = term30) = (term31 = term32).
Proof. exact (@lem1006570 term20 (BIT1 0) term30). Qed.
Lemma lem6208839 : term31 = term32.
Proof. exact (EQ_MP (@lem6208838) (@lem6208837)). Qed.
Lemma lem6208840 (n : nat) : (term23 n) = (term23 n).
Proof. exact (eq_refl (term23 n)). Qed.
Lemma lem6208841 (n : nat) : (term28 n) = (term33 n).
Proof. exact (MK_COMB (@lem6208840 n) (@lem6208839)). Qed.
Lemma lem6208842 (n : nat) : (term27 n) = (term33 n).
Proof. exact (TRANS (@lem6208836 n) (@lem6208841 n)). Qed.
Lemma lem6208843 (n : nat) : (term8 n) = (term33 n).
Proof. exact (TRANS (@lem6208835 n) (@lem6208842 n)). Qed.
Lemma lem6208844 : (@eq nat) = (@eq nat).
Proof. exact (eq_refl (@eq nat)). Qed.
Lemma lem6208845 (n : nat) : (term10 n) = (term37 n).
Proof. exact (MK_COMB (@lem6208844) (@lem6208843 n)). Qed.
Lemma lem6208846 (n : nat) : ((term8 n) = (term16 n)) = ((term33 n) = (term33 n)).
Proof. exact (MK_COMB (@lem6208845 n) (@lem6208810 n)). Qed.
Lemma lem6208849 (n : nat) : ((term7 n) = (term14 n)) = ((term33 n) = (term33 n)).
Proof. exact (TRANS (@lem6208773 n) (@lem6208846 n)). Qed.
Lemma lem6208851 (m : nat) (n : nat) : (m = n) = ((int_of_num m) = (int_of_num n)).
Proof. exact (EQ_MP (@lem2841414 m n) (@lem2841413 m n)). Qed.
Lemma lem6208852 (n : nat) : ((term33 n) = (term33 n)) = ((term38 n) = (term38 n)).
Proof. exact (@lem6208851 (term33 n) (term33 n)). Qed.
Lemma lem6208856 (m : nat) (n : nat) : (term39 m n) = (term40 m n).
Proof. exact (EQ_MP (@lem2841384 m n) (@lem2841383 m n)). Qed.
Lemma lem6208857 (n : nat) : (term38 n) = (term41 n).
Proof. exact (@lem6208856 (term18 n) term32). Qed.
Lemma lem6208859 (k : nat) (n : nat) : (term42 k n) = (term43 k n).
Proof. exact (EQ_MP (@lem2841378 k n) (@lem2841377 k n)). Qed.
Lemma lem6208860 (n : nat) : (term44 n) = (term45 n).
Proof. exact (@lem6208859 term20 n). Qed.
Lemma lem6208861 : int_add = int_add.
Proof. exact (eq_refl int_add). Qed.
Lemma lem6208862 (n : nat) : (term46 n) = (term47 n).
Proof. exact (MK_COMB (@lem6208861) (@lem6208860 n)). Qed.
Lemma lem6208863 : term48 = term48.
Proof. exact (eq_refl term48). Qed.
Lemma lem6208864 (n : nat) : (term41 n) = (term49 n).
Proof. exact (MK_COMB (@lem6208862 n) (@lem6208863)). Qed.
Lemma lem6208865 (n : nat) : (term38 n) = (term49 n).
Proof. exact (TRANS (@lem6208857 n) (@lem6208864 n)). Qed.
Lemma lem6208866 : (@eq int) = (@eq int).
Proof. exact (eq_refl (@eq int)). Qed.
Lemma lem6208867 (n : nat) : (term50 n) = (term51 n).
Proof. exact (MK_COMB (@lem6208866) (@lem6208865 n)). Qed.
Lemma lem6208869 (m : nat) (n : nat) : (term39 m n) = (term40 m n).
Proof. exact (EQ_MP (@lem2841384 m n) (@lem2841383 m n)). Qed.
Lemma lem6208870 (n : nat) : (term38 n) = (term41 n).
Proof. exact (@lem6208869 (term18 n) term32). Qed.
Lemma lem6208872 (k : nat) (n : nat) : (term42 k n) = (term43 k n).
Proof. exact (EQ_MP (@lem2841378 k n) (@lem2841377 k n)). Qed.
Lemma lem6208873 (n : nat) : (term44 n) = (term45 n).
Proof. exact (@lem6208872 term20 n). Qed.
Lemma lem6208874 : int_add = int_add.
Proof. exact (eq_refl int_add). Qed.
Lemma lem6208875 (n : nat) : (term46 n) = (term47 n).
Proof. exact (MK_COMB (@lem6208874) (@lem6208873 n)). Qed.
Lemma lem6208876 : term48 = term48.
Proof. exact (eq_refl term48). Qed.
Lemma lem6208877 (n : nat) : (term41 n) = (term49 n).
Proof. exact (MK_COMB (@lem6208875 n) (@lem6208876)). Qed.
Lemma lem6208878 (n : nat) : (term38 n) = (term49 n).
Proof. exact (TRANS (@lem6208870 n) (@lem6208877 n)). Qed.
Lemma lem6208879 (n : nat) : ((term38 n) = (term38 n)) = ((term49 n) = (term49 n)).
Proof. exact (MK_COMB (@lem6208867 n) (@lem6208878 n)). Qed.
Lemma lem6208880 (n : nat) : ((term33 n) = (term33 n)) = ((term49 n) = (term49 n)).
Proof. exact (TRANS (@lem6208852 n) (@lem6208879 n)). Qed.
Lemma lem6208881 (n : nat) : ((term7 n) = (term14 n)) = ((term49 n) = (term49 n)).
Proof. exact (TRANS (@lem6208849 n) (@lem6208880 n)). Qed.
Lemma lem6208882 (n : nat) : term52 n.
Proof. exact (@lem2307535 n). Qed.
Lemma lem6208883 (n : nat) : (term52 n) = (term53 n).
Proof. exact (eq_refl (term52 n)). Qed.
Lemma lem6208884 (n : nat) : term53 n.
Proof. exact (EQ_MP (@lem6208883 n) (@lem6208882 n)). Qed.
Lemma lem6208885 (_79025 : int) : (term54 _79025) = (term55 _79025).
Proof. exact (@lem2318604 (term55 _79025)). Qed.
Lemma lem6208908 (_79025 : int) : (term56 _79025) = (term57 _79025).
Proof. exact (@lem17362 (term58 _79025) ((term59 _79025) = (term59 _79025))). Qed.
Lemma lem6208911 (x : int) (y : int) : (int_le x y) = (term60 x y).
Proof. exact (EQ_MP (@lem2318569 x y) (@lem2318568 x y)). Qed.
Lemma lem6208912 (_79025 : int) : (term58 _79025) = (term61 _79025).
Proof. exact (@lem6208911 term62 _79025). Qed.
Lemma lem6208914 (n : nat) : (term63 n) = (real_of_num n).
Proof. exact (EQ_MP (@lem2318545 n) (@lem2318544 n)). Qed.
Lemma lem6208915 : term64 = term65.
Proof. exact (@lem6208914 (NUMERAL 0)). Qed.
Lemma lem6208916 : real_le = real_le.
Proof. exact (eq_refl real_le). Qed.
Lemma lem6208917 : term66 = term67.
Proof. exact (MK_COMB (@lem6208916) (@lem6208915)). Qed.
Lemma lem6208918 (_79025 : int) : (real_of_int _79025) = (real_of_int _79025).
Proof. exact (eq_refl (real_of_int _79025)). Qed.
Lemma lem6208919 (_79025 : int) : (term61 _79025) = (term68 _79025).
Proof. exact (MK_COMB (@lem6208917) (@lem6208918 _79025)). Qed.
Lemma lem6208921 (_79025 : int) : (term58 _79025) = (term68 _79025).
Proof. exact (TRANS (@lem6208912 _79025) (@lem6208919 _79025)). Qed.
Lemma lem6208923 (y : int) (x : int) : (term69 x y) = (term70 y x).
Proof. exact (proj1 (@lem2318497 x y)). Qed.
Lemma lem6208924 (_79025 : int) : (term71 _79025) = (term72 _79025).
Proof. exact (@lem6208923 (term59 _79025) (term59 _79025)). Qed.
Lemma lem6208926 (x : int) (y : int) : (int_le x y) = (term60 x y).
Proof. exact (EQ_MP (@lem2318569 x y) (@lem2318568 x y)). Qed.
Lemma lem6208927 (_79025 : int) : (term73 _79025) = (term74 _79025).
Proof. exact (@lem6208926 (term75 _79025) (term59 _79025)). Qed.
Lemma lem6208929 (x : int) (y : int) : (term76 x y) = (term77 x y).
Proof. exact (EQ_MP (@lem2318539 x y) (@lem2318538 x y)). Qed.
Lemma lem6208930 (_79025 : int) : (term78 _79025) = (term79 _79025).
Proof. exact (@lem6208929 (term59 _79025) term80). Qed.
Lemma lem6208932 (x : int) (y : int) : (term76 x y) = (term77 x y).
Proof. exact (EQ_MP (@lem2318539 x y) (@lem2318538 x y)). Qed.
Lemma lem6208933 (_79025 : int) : (term81 _79025) = (term82 _79025).
Proof. exact (@lem6208932 (term83 _79025) term48). Qed.
Lemma lem6208935 (x : int) (y : int) : (term84 x y) = (term85 x y).
Proof. exact (EQ_MP (@lem2318533 x y) (@lem2318532 x y)). Qed.
Lemma lem6208936 (_79025 : int) : (term86 _79025) = (term87 _79025).
Proof. exact (@lem6208935 term88 _79025). Qed.
Lemma lem6208938 (n : nat) : (term63 n) = (real_of_num n).
Proof. exact (EQ_MP (@lem2318545 n) (@lem2318544 n)). Qed.
Lemma lem6208939 : term89 = term90.
Proof. exact (@lem6208938 term22). Qed.
Lemma lem6208940 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem6208941 : term91 = term92.
Proof. exact (MK_COMB (@lem6208940) (@lem6208939)). Qed.
Lemma lem6208942 (_79025 : int) : (real_of_int _79025) = (real_of_int _79025).
Proof. exact (eq_refl (real_of_int _79025)). Qed.
Lemma lem6208943 (_79025 : int) : (term87 _79025) = (term93 _79025).
Proof. exact (MK_COMB (@lem6208941) (@lem6208942 _79025)). Qed.
Lemma lem6208944 (_79025 : int) : (term86 _79025) = (term93 _79025).
Proof. exact (TRANS (@lem6208936 _79025) (@lem6208943 _79025)). Qed.
Lemma lem6208945 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem6208946 (_79025 : int) : (term94 _79025) = (term95 _79025).
Proof. exact (MK_COMB (@lem6208945) (@lem6208944 _79025)). Qed.
Lemma lem6208948 (n : nat) : (term63 n) = (real_of_num n).
Proof. exact (EQ_MP (@lem2318545 n) (@lem2318544 n)). Qed.
Lemma lem6208949 : term96 = term97.
Proof. exact (@lem6208948 term32). Qed.
Lemma lem6208950 (_79025 : int) : (term82 _79025) = (term98 _79025).
Proof. exact (MK_COMB (@lem6208946 _79025) (@lem6208949)). Qed.
Lemma lem6208951 (_79025 : int) : (term81 _79025) = (term98 _79025).
Proof. exact (TRANS (@lem6208933 _79025) (@lem6208950 _79025)). Qed.
Lemma lem6208952 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem6208953 (_79025 : int) : (term99 _79025) = (term100 _79025).
Proof. exact (MK_COMB (@lem6208952) (@lem6208951 _79025)). Qed.
Lemma lem6208955 (n : nat) : (term63 n) = (real_of_num n).
Proof. exact (EQ_MP (@lem2318545 n) (@lem2318544 n)). Qed.
Lemma lem6208956 : term101 = term102.
Proof. exact (@lem6208955 term6). Qed.
Lemma lem6208957 (_79025 : int) : (term79 _79025) = (term103 _79025).
Proof. exact (MK_COMB (@lem6208953 _79025) (@lem6208956)). Qed.
Lemma lem6208958 (_79025 : int) : (term78 _79025) = (term103 _79025).
Proof. exact (TRANS (@lem6208930 _79025) (@lem6208957 _79025)). Qed.
Lemma lem6208959 : real_le = real_le.
Proof. exact (eq_refl real_le). Qed.
Lemma lem6208960 (_79025 : int) : (term104 _79025) = (term105 _79025).
Proof. exact (MK_COMB (@lem6208959) (@lem6208958 _79025)). Qed.
Lemma lem6208962 (x : int) (y : int) : (term76 x y) = (term77 x y).
Proof. exact (EQ_MP (@lem2318539 x y) (@lem2318538 x y)). Qed.
Lemma lem6208963 (_79025 : int) : (term81 _79025) = (term82 _79025).
Proof. exact (@lem6208962 (term83 _79025) term48). Qed.
Lemma lem6208965 (x : int) (y : int) : (term84 x y) = (term85 x y).
Proof. exact (EQ_MP (@lem2318533 x y) (@lem2318532 x y)). Qed.
Lemma lem6208966 (_79025 : int) : (term86 _79025) = (term87 _79025).
Proof. exact (@lem6208965 term88 _79025). Qed.
Lemma lem6208968 (n : nat) : (term63 n) = (real_of_num n).
Proof. exact (EQ_MP (@lem2318545 n) (@lem2318544 n)). Qed.
Lemma lem6208969 : term89 = term90.
Proof. exact (@lem6208968 term22). Qed.
Lemma lem6208970 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem6208971 : term91 = term92.
Proof. exact (MK_COMB (@lem6208970) (@lem6208969)). Qed.
Lemma lem6208972 (_79025 : int) : (real_of_int _79025) = (real_of_int _79025).
Proof. exact (eq_refl (real_of_int _79025)). Qed.
Lemma lem6208973 (_79025 : int) : (term87 _79025) = (term93 _79025).
Proof. exact (MK_COMB (@lem6208971) (@lem6208972 _79025)). Qed.
Lemma lem6208974 (_79025 : int) : (term86 _79025) = (term93 _79025).
Proof. exact (TRANS (@lem6208966 _79025) (@lem6208973 _79025)). Qed.
Lemma lem6208975 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem6208976 (_79025 : int) : (term94 _79025) = (term95 _79025).
Proof. exact (MK_COMB (@lem6208975) (@lem6208974 _79025)). Qed.
Lemma lem6208978 (n : nat) : (term63 n) = (real_of_num n).
Proof. exact (EQ_MP (@lem2318545 n) (@lem2318544 n)). Qed.
Lemma lem6208979 : term96 = term97.
Proof. exact (@lem6208978 term32). Qed.
Lemma lem6208980 (_79025 : int) : (term82 _79025) = (term98 _79025).
Proof. exact (MK_COMB (@lem6208976 _79025) (@lem6208979)). Qed.
Lemma lem6208981 (_79025 : int) : (term81 _79025) = (term98 _79025).
Proof. exact (TRANS (@lem6208963 _79025) (@lem6208980 _79025)). Qed.
Lemma lem6208982 (_79025 : int) : (term74 _79025) = (term106 _79025).
Proof. exact (MK_COMB (@lem6208960 _79025) (@lem6208981 _79025)). Qed.
Lemma lem6208983 (_79025 : int) : (term73 _79025) = (term106 _79025).
Proof. exact (TRANS (@lem6208927 _79025) (@lem6208982 _79025)). Qed.
Lemma lem6208984 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6208985 (_79025 : int) : (term107 _79025) = (term108 _79025).
Proof. exact (MK_COMB (@lem6208984) (@lem6208983 _79025)). Qed.
Lemma lem6208987 (x : int) (y : int) : (int_le x y) = (term60 x y).
Proof. exact (EQ_MP (@lem2318569 x y) (@lem2318568 x y)). Qed.
Lemma lem6208988 (_79025 : int) : (term73 _79025) = (term74 _79025).
Proof. exact (@lem6208987 (term75 _79025) (term59 _79025)). Qed.
Lemma lem6208990 (x : int) (y : int) : (term76 x y) = (term77 x y).
Proof. exact (EQ_MP (@lem2318539 x y) (@lem2318538 x y)). Qed.
Lemma lem6208991 (_79025 : int) : (term78 _79025) = (term79 _79025).
Proof. exact (@lem6208990 (term59 _79025) term80). Qed.
Lemma lem6208993 (x : int) (y : int) : (term76 x y) = (term77 x y).
Proof. exact (EQ_MP (@lem2318539 x y) (@lem2318538 x y)). Qed.
Lemma lem6208994 (_79025 : int) : (term81 _79025) = (term82 _79025).
Proof. exact (@lem6208993 (term83 _79025) term48). Qed.
Lemma lem6208996 (x : int) (y : int) : (term84 x y) = (term85 x y).
Proof. exact (EQ_MP (@lem2318533 x y) (@lem2318532 x y)). Qed.
Lemma lem6208997 (_79025 : int) : (term86 _79025) = (term87 _79025).
Proof. exact (@lem6208996 term88 _79025). Qed.
Lemma lem6208999 (n : nat) : (term63 n) = (real_of_num n).
Proof. exact (EQ_MP (@lem2318545 n) (@lem2318544 n)). Qed.
Lemma lem6209000 : term89 = term90.
Proof. exact (@lem6208999 term22). Qed.
Lemma lem6209001 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem6209002 : term91 = term92.
Proof. exact (MK_COMB (@lem6209001) (@lem6209000)). Qed.
Lemma lem6209003 (_79025 : int) : (real_of_int _79025) = (real_of_int _79025).
Proof. exact (eq_refl (real_of_int _79025)). Qed.
Lemma lem6209004 (_79025 : int) : (term87 _79025) = (term93 _79025).
Proof. exact (MK_COMB (@lem6209002) (@lem6209003 _79025)). Qed.
Lemma lem6209005 (_79025 : int) : (term86 _79025) = (term93 _79025).
Proof. exact (TRANS (@lem6208997 _79025) (@lem6209004 _79025)). Qed.
Lemma lem6209006 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem6209007 (_79025 : int) : (term94 _79025) = (term95 _79025).
Proof. exact (MK_COMB (@lem6209006) (@lem6209005 _79025)). Qed.
Lemma lem6209009 (n : nat) : (term63 n) = (real_of_num n).
Proof. exact (EQ_MP (@lem2318545 n) (@lem2318544 n)). Qed.
Lemma lem6209010 : term96 = term97.
Proof. exact (@lem6209009 term32). Qed.
Lemma lem6209011 (_79025 : int) : (term82 _79025) = (term98 _79025).
Proof. exact (MK_COMB (@lem6209007 _79025) (@lem6209010)). Qed.
Lemma lem6209012 (_79025 : int) : (term81 _79025) = (term98 _79025).
Proof. exact (TRANS (@lem6208994 _79025) (@lem6209011 _79025)). Qed.
Lemma lem6209013 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem6209014 (_79025 : int) : (term99 _79025) = (term100 _79025).
Proof. exact (MK_COMB (@lem6209013) (@lem6209012 _79025)). Qed.
Lemma lem6209016 (n : nat) : (term63 n) = (real_of_num n).
Proof. exact (EQ_MP (@lem2318545 n) (@lem2318544 n)). Qed.
Lemma lem6209017 : term101 = term102.
Proof. exact (@lem6209016 term6). Qed.
Lemma lem6209018 (_79025 : int) : (term79 _79025) = (term103 _79025).
Proof. exact (MK_COMB (@lem6209014 _79025) (@lem6209017)). Qed.
Lemma lem6209019 (_79025 : int) : (term78 _79025) = (term103 _79025).
Proof. exact (TRANS (@lem6208991 _79025) (@lem6209018 _79025)). Qed.
Lemma lem6209020 : real_le = real_le.
Proof. exact (eq_refl real_le). Qed.
Lemma lem6209021 (_79025 : int) : (term104 _79025) = (term105 _79025).
Proof. exact (MK_COMB (@lem6209020) (@lem6209019 _79025)). Qed.
Lemma lem6209023 (x : int) (y : int) : (term76 x y) = (term77 x y).
Proof. exact (EQ_MP (@lem2318539 x y) (@lem2318538 x y)). Qed.
Lemma lem6209024 (_79025 : int) : (term81 _79025) = (term82 _79025).
Proof. exact (@lem6209023 (term83 _79025) term48). Qed.
Lemma lem6209026 (x : int) (y : int) : (term84 x y) = (term85 x y).
Proof. exact (EQ_MP (@lem2318533 x y) (@lem2318532 x y)). Qed.
Lemma lem6209027 (_79025 : int) : (term86 _79025) = (term87 _79025).
Proof. exact (@lem6209026 term88 _79025). Qed.
Lemma lem6209029 (n : nat) : (term63 n) = (real_of_num n).
Proof. exact (EQ_MP (@lem2318545 n) (@lem2318544 n)). Qed.
Lemma lem6209030 : term89 = term90.
Proof. exact (@lem6209029 term22). Qed.
Lemma lem6209031 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem6209032 : term91 = term92.
Proof. exact (MK_COMB (@lem6209031) (@lem6209030)). Qed.
Lemma lem6209033 (_79025 : int) : (real_of_int _79025) = (real_of_int _79025).
Proof. exact (eq_refl (real_of_int _79025)). Qed.
Lemma lem6209034 (_79025 : int) : (term87 _79025) = (term93 _79025).
Proof. exact (MK_COMB (@lem6209032) (@lem6209033 _79025)). Qed.
Lemma lem6209035 (_79025 : int) : (term86 _79025) = (term93 _79025).
Proof. exact (TRANS (@lem6209027 _79025) (@lem6209034 _79025)). Qed.
Lemma lem6209036 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem6209037 (_79025 : int) : (term94 _79025) = (term95 _79025).
Proof. exact (MK_COMB (@lem6209036) (@lem6209035 _79025)). Qed.
Lemma lem6209039 (n : nat) : (term63 n) = (real_of_num n).
Proof. exact (EQ_MP (@lem2318545 n) (@lem2318544 n)). Qed.
Lemma lem6209040 : term96 = term97.
Proof. exact (@lem6209039 term32). Qed.
Lemma lem6209041 (_79025 : int) : (term82 _79025) = (term98 _79025).
Proof. exact (MK_COMB (@lem6209037 _79025) (@lem6209040)). Qed.
Lemma lem6209042 (_79025 : int) : (term81 _79025) = (term98 _79025).
Proof. exact (TRANS (@lem6209024 _79025) (@lem6209041 _79025)). Qed.
Lemma lem6209043 (_79025 : int) : (term74 _79025) = (term106 _79025).
Proof. exact (MK_COMB (@lem6209021 _79025) (@lem6209042 _79025)). Qed.
Lemma lem6209044 (_79025 : int) : (term73 _79025) = (term106 _79025).
Proof. exact (TRANS (@lem6208988 _79025) (@lem6209043 _79025)). Qed.
Lemma lem6209045 (_79025 : int) : (term72 _79025) = (term109 _79025).
Proof. exact (MK_COMB (@lem6208985 _79025) (@lem6209044 _79025)). Qed.
Lemma lem6209046 (_79025 : int) : (term71 _79025) = (term109 _79025).
Proof. exact (TRANS (@lem6208924 _79025) (@lem6209045 _79025)). Qed.
Lemma lem6209047 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6209048 (_79025 : int) : (term110 _79025) = (term111 _79025).
Proof. exact (MK_COMB (@lem6209047) (@lem6208921 _79025)). Qed.
Lemma lem6209049 (_79025 : int) : (term57 _79025) = (term112 _79025).
Proof. exact (MK_COMB (@lem6209048 _79025) (@lem6209046 _79025)). Qed.
Lemma lem6209050 (_79025 : int) : (term56 _79025) = (term112 _79025).
Proof. exact (TRANS (@lem6208908 _79025) (@lem6209049 _79025)). Qed.
Lemma lem6209054 (t : Prop) : (term113 t) = t.
Proof. exact (EQ_MP (@lem16507 t) (@lem16506 t)). Qed.
Lemma lem6209055 (_79025 : int) : (term114 _79025) = (term112 _79025).
Proof. exact (@lem6209054 (term112 _79025)). Qed.
Lemma lem6209059 (t : Prop) : (t \/ t) = t.
Proof. exact (proj2 (@lem16485 t)). Qed.
Lemma lem6209060 (_79025 : int) : (term109 _79025) = (term106 _79025).
Proof. exact (@lem6209059 (term106 _79025)). Qed.
Lemma lem6209061 (_79025 : int) : (term111 _79025) = (term111 _79025).
Proof. exact (eq_refl (term111 _79025)). Qed.
Lemma lem6209062 (_79025 : int) : (term112 _79025) = (term115 _79025).
Proof. exact (MK_COMB (@lem6209061 _79025) (@lem6209060 _79025)). Qed.
Lemma lem6209078 (_79025 : int) : (term114 _79025) = (term115 _79025).
Proof. exact (TRANS (@lem6209055 _79025) (@lem6209062 _79025)). Qed.
Lemma lem6209079 (_79025 : int) : (term68 _79025) = (term116 _79025).
Proof. exact (@lem1988287 (real_of_int _79025) term65). Qed.
Lemma lem6209085 (_79025 : int) : (term117 _79025) = (term118 _79025).
Proof. exact (@lem1982792 (real_of_int _79025) term65). Qed.
Lemma lem6209087 (x : nat) : (real_of_num x) = (term119 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6209088 : term65 = term120.
Proof. exact (@lem6209087 (NUMERAL 0)). Qed.
Lemma lem6209090 (x : nat) : (term121 x) = (term122 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem6209091 : term123 = term124.
Proof. exact (@lem6209090 term6). Qed.
Lemma lem6209092 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem6209093 : term125 = term126.
Proof. exact (MK_COMB (@lem6209092) (@lem6209091)). Qed.
Lemma lem6209094 : term127 = term128.
Proof. exact (MK_COMB (@lem6209093) (@lem6209088)). Qed.
Lemma lem6209095 : term128 = term129.
Proof. exact (@lem1981613 term123 term65 term102 term102). Qed.
Lemma lem6209097 (m : nat) (n : nat) : (term130 m n) = (term131 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6209098 : term132 = term133.
Proof. exact (@lem6209097 term6 term6). Qed.
Lemma lem6209099 : (term134 = (BIT1 0)) = (term135 = term6).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6209100 : term135 = term6.
Proof. exact (EQ_MP (@lem6209099) (@lem940073)). Qed.
Lemma lem6209101 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6209102 : term133 = term102.
Proof. exact (MK_COMB (@lem6209101) (@lem6209100)). Qed.
Lemma lem6209103 : term132 = term102.
Proof. exact (TRANS (@lem6209098) (@lem6209102)). Qed.
Lemma lem6209105 (x : nat) : (term136 x) = term65.
Proof. exact (proj2 (@lem1367254 x)). Qed.
Lemma lem6209106 : term127 = term65.
Proof. exact (@lem6209105 term6). Qed.
Lemma lem6209107 : real_div = real_div.
Proof. exact (eq_refl real_div). Qed.
Lemma lem6209108 : term137 = term138.
Proof. exact (MK_COMB (@lem6209107) (@lem6209106)). Qed.
Lemma lem6209109 : term129 = term120.
Proof. exact (MK_COMB (@lem6209108) (@lem6209103)). Qed.
Lemma lem6209110 : term128 = term120.
Proof. exact (TRANS (@lem6209095) (@lem6209109)). Qed.
Lemma lem6209111 : term127 = term120.
Proof. exact (TRANS (@lem6209094) (@lem6209110)). Qed.
Lemma lem6209113 (x : real) : (term139 x) = x.
Proof. exact (EQ_MP (@lem1982628 x) (@lem1982627 x)). Qed.
Lemma lem6209114 : term120 = term65.
Proof. exact (@lem6209113 term65). Qed.
Lemma lem6209115 : term127 = term65.
Proof. exact (TRANS (@lem6209111) (@lem6209114)). Qed.
Lemma lem6209116 (_79025 : int) : (term140 _79025) = (term140 _79025).
Proof. exact (eq_refl (term140 _79025)). Qed.
Lemma lem6209117 (_79025 : int) : (term118 _79025) = (term141 _79025).
Proof. exact (MK_COMB (@lem6209116 _79025) (@lem6209115)). Qed.
Lemma lem6209118 (_79025 : int) : (term141 _79025) = (real_of_int _79025).
Proof. exact (@lem1982723 (real_of_int _79025)). Qed.
Lemma lem6209119 (_79025 : int) : (term118 _79025) = (real_of_int _79025).
Proof. exact (TRANS (@lem6209117 _79025) (@lem6209118 _79025)). Qed.
Lemma lem6209121 (_79025 : int) : (term117 _79025) = (real_of_int _79025).
Proof. exact (TRANS (@lem6209085 _79025) (@lem6209119 _79025)). Qed.
Lemma lem6209122 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem6209123 (_79025 : int) : (term142 _79025) = (term143 _79025).
Proof. exact (MK_COMB (@lem6209122) (@lem6209121 _79025)). Qed.
Lemma lem6209124 : term65 = term65.
Proof. exact (eq_refl term65). Qed.
Lemma lem6209125 (_79025 : int) : (term116 _79025) = (term144 _79025).
Proof. exact (MK_COMB (@lem6209123 _79025) (@lem6209124)). Qed.
Lemma lem6209126 (_79025 : int) : (term68 _79025) = (term144 _79025).
Proof. exact (TRANS (@lem6209079 _79025) (@lem6209125 _79025)). Qed.
Lemma lem6209127 (_79025 : int) : (term106 _79025) = (term145 _79025).
Proof. exact (@lem1988287 (term98 _79025) (term103 _79025)). Qed.
Lemma lem6209145 (_79025 : int) : (term103 _79025) = (term146 _79025).
Proof. exact (@lem1982755 (term93 _79025) term97 term102). Qed.
Lemma lem6209147 (x : nat) : (real_of_num x) = (term119 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6209148 : term102 = term147.
Proof. exact (@lem6209147 term6). Qed.
Lemma lem6209150 (x : nat) : (real_of_num x) = (term119 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6209151 : term97 = term148.
Proof. exact (@lem6209150 term32). Qed.
Lemma lem6209152 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem6209153 : term149 = term150.
Proof. exact (MK_COMB (@lem6209152) (@lem6209151)). Qed.
Lemma lem6209154 : term151 = term152.
Proof. exact (MK_COMB (@lem6209153) (@lem6209148)). Qed.
Lemma lem6209155 : term153.
Proof. exact (@lem1981473 term97 term102 term102 term102 term154 term102). Qed.
Lemma lem6209157 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6209158 : term156 = term157.
Proof. exact (@lem6209157 (NUMERAL 0) term6). Qed.
Lemma lem6209159 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6209160 (h1 : term158 = (BIT1 0)) : term157 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6209161 : (term158 = (BIT1 0)) = (term157 = True).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6209160 h1) (fun h1 : term157 = True => @lem6209159)). Qed.
Lemma lem6209162 : term157 = True.
Proof. exact (EQ_MP (@lem6209161) (@lem6209159)). Qed.
Lemma lem6209163 : term156 = True.
Proof. exact (TRANS (@lem6209158) (@lem6209162)). Qed.
Lemma lem6209164 : True = term156.
Proof. exact (SYM (@lem6209163)). Qed.
Lemma lem6209165 : term156.
Proof. exact (EQ_MP (@lem6209164) (@lem0)). Qed.
Lemma lem6209166 : term159.
Proof. exact (@lem6209155 (@lem6209165)). Qed.
Lemma lem6209168 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6209169 : term156 = term157.
Proof. exact (@lem6209168 (NUMERAL 0) term6). Qed.
Lemma lem6209170 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6209171 (h1 : term158 = (BIT1 0)) : term157 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6209172 : (term158 = (BIT1 0)) = (term157 = True).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6209171 h1) (fun h1 : term157 = True => @lem6209170)). Qed.
Lemma lem6209173 : term157 = True.
Proof. exact (EQ_MP (@lem6209172) (@lem6209170)). Qed.
Lemma lem6209174 : term156 = True.
Proof. exact (TRANS (@lem6209169) (@lem6209173)). Qed.
Lemma lem6209175 : True = term156.
Proof. exact (SYM (@lem6209174)). Qed.
Lemma lem6209176 : term156.
Proof. exact (EQ_MP (@lem6209175) (@lem0)). Qed.
Lemma lem6209177 : term160.
Proof. exact (@lem6209166 (@lem6209176)). Qed.
Lemma lem6209179 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6209180 : term156 = term157.
Proof. exact (@lem6209179 (NUMERAL 0) term6). Qed.
Lemma lem6209181 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6209182 (h1 : term158 = (BIT1 0)) : term157 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6209183 : (term158 = (BIT1 0)) = (term157 = True).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6209182 h1) (fun h1 : term157 = True => @lem6209181)). Qed.
Lemma lem6209184 : term157 = True.
Proof. exact (EQ_MP (@lem6209183) (@lem6209181)). Qed.
Lemma lem6209185 : term156 = True.
Proof. exact (TRANS (@lem6209180) (@lem6209184)). Qed.
Lemma lem6209186 : True = term156.
Proof. exact (SYM (@lem6209185)). Qed.
Lemma lem6209187 : term156.
Proof. exact (EQ_MP (@lem6209186) (@lem0)). Qed.
Lemma lem6209188 : term161.
Proof. exact (@lem6209177 (@lem6209187)). Qed.
Lemma lem6209190 (m : nat) (n : nat) : (term130 m n) = (term131 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6209191 : term132 = term133.
Proof. exact (@lem6209190 term6 term6). Qed.
Lemma lem6209192 : (term134 = (BIT1 0)) = (term135 = term6).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6209193 : term135 = term6.
Proof. exact (EQ_MP (@lem6209192) (@lem940073)). Qed.
Lemma lem6209194 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6209195 : term133 = term102.
Proof. exact (MK_COMB (@lem6209194) (@lem6209193)). Qed.
Lemma lem6209196 : term132 = term102.
Proof. exact (TRANS (@lem6209191) (@lem6209195)). Qed.
Lemma lem6209198 (m : nat) (n : nat) : (term130 m n) = (term131 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6209199 : term162 = term163.
Proof. exact (@lem6209198 term32 term6). Qed.
Lemma lem6209200 : term164 = term30.
Proof. exact (@lem996237 term30). Qed.
Lemma lem6209201 : (term164 = term30) = (term165 = term32).
Proof. exact (@lem1007663 term30 (BIT1 0) term30). Qed.
Lemma lem6209202 : term165 = term32.
Proof. exact (EQ_MP (@lem6209201) (@lem6209200)). Qed.
Lemma lem6209203 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6209204 : term163 = term97.
Proof. exact (MK_COMB (@lem6209203) (@lem6209202)). Qed.
Lemma lem6209205 : term162 = term97.
Proof. exact (TRANS (@lem6209199) (@lem6209204)). Qed.
Lemma lem6209206 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem6209207 : term166 = term149.
Proof. exact (MK_COMB (@lem6209206) (@lem6209205)). Qed.
Lemma lem6209208 : term167 = term151.
Proof. exact (MK_COMB (@lem6209207) (@lem6209196)). Qed.
Lemma lem6209209 : term151 = term168.
Proof. exact (@lem1367770 term32 term6). Qed.
Lemma lem6209210 : term169 = term170.
Proof. exact (@lem707013). Qed.
Lemma lem6209211 : (term169 = term170) = (term171 = term172).
Proof. exact (@lem1006570 term30 (BIT1 0) term170). Qed.
Lemma lem6209212 : term171 = term172.
Proof. exact (EQ_MP (@lem6209211) (@lem6209210)). Qed.
Lemma lem6209213 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6209214 : term168 = term154.
Proof. exact (MK_COMB (@lem6209213) (@lem6209212)). Qed.
Lemma lem6209215 : term151 = term154.
Proof. exact (TRANS (@lem6209209) (@lem6209214)). Qed.
Lemma lem6209216 : term167 = term154.
Proof. exact (TRANS (@lem6209208) (@lem6209215)). Qed.
Lemma lem6209217 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem6209218 : term173 = term174.
Proof. exact (MK_COMB (@lem6209217) (@lem6209216)). Qed.
Lemma lem6209219 : term102 = term102.
Proof. exact (eq_refl term102). Qed.
Lemma lem6209220 : term175 = term176.
Proof. exact (MK_COMB (@lem6209218) (@lem6209219)). Qed.
Lemma lem6209222 (m : nat) (n : nat) : (term130 m n) = (term131 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6209223 : term176 = term177.
Proof. exact (@lem6209222 term172 term6). Qed.
Lemma lem6209224 : term178 = term170.
Proof. exact (@lem996237 term170). Qed.
Lemma lem6209225 : (term178 = term170) = (term179 = term172).
Proof. exact (@lem1007663 term170 (BIT1 0) term170). Qed.
Lemma lem6209226 : term179 = term172.
Proof. exact (EQ_MP (@lem6209225) (@lem6209224)). Qed.
Lemma lem6209227 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6209228 : term177 = term154.
Proof. exact (MK_COMB (@lem6209227) (@lem6209226)). Qed.
Lemma lem6209229 : term176 = term154.
Proof. exact (TRANS (@lem6209223) (@lem6209228)). Qed.
Lemma lem6209230 : term175 = term154.
Proof. exact (TRANS (@lem6209220) (@lem6209229)). Qed.
Lemma lem6209232 (m : nat) (n : nat) : (term130 m n) = (term131 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6209233 : term132 = term133.
Proof. exact (@lem6209232 term6 term6). Qed.
Lemma lem6209234 : (term134 = (BIT1 0)) = (term135 = term6).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6209235 : term135 = term6.
Proof. exact (EQ_MP (@lem6209234) (@lem940073)). Qed.
Lemma lem6209236 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6209237 : term133 = term102.
Proof. exact (MK_COMB (@lem6209236) (@lem6209235)). Qed.
Lemma lem6209238 : term132 = term102.
Proof. exact (TRANS (@lem6209233) (@lem6209237)). Qed.
Lemma lem6209239 : term174 = term174.
Proof. exact (eq_refl term174). Qed.
Lemma lem6209240 : term180 = term176.
Proof. exact (MK_COMB (@lem6209239) (@lem6209238)). Qed.
Lemma lem6209242 (m : nat) (n : nat) : (term130 m n) = (term131 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6209243 : term176 = term177.
Proof. exact (@lem6209242 term172 term6). Qed.
Lemma lem6209244 : term178 = term170.
Proof. exact (@lem996237 term170). Qed.
Lemma lem6209245 : (term178 = term170) = (term179 = term172).
Proof. exact (@lem1007663 term170 (BIT1 0) term170). Qed.
Lemma lem6209246 : term179 = term172.
Proof. exact (EQ_MP (@lem6209245) (@lem6209244)). Qed.
Lemma lem6209247 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6209248 : term177 = term154.
Proof. exact (MK_COMB (@lem6209247) (@lem6209246)). Qed.
Lemma lem6209249 : term176 = term154.
Proof. exact (TRANS (@lem6209243) (@lem6209248)). Qed.
Lemma lem6209250 : term180 = term154.
Proof. exact (TRANS (@lem6209240) (@lem6209249)). Qed.
Lemma lem6209251 : term154 = term180.
Proof. exact (SYM (@lem6209250)). Qed.
Lemma lem6209252 : term175 = term180.
Proof. exact (TRANS (@lem6209230) (@lem6209251)). Qed.
Lemma lem6209253 : term152 = term181.
Proof. exact (@lem6209188 (@lem6209252)). Qed.
Lemma lem6209254 : term151 = term181.
Proof. exact (TRANS (@lem6209154) (@lem6209253)). Qed.
Lemma lem6209256 (x : real) : (term139 x) = x.
Proof. exact (EQ_MP (@lem1981475 x) (@lem1981474 x)). Qed.
Lemma lem6209257 : term181 = term154.
Proof. exact (@lem6209256 term154). Qed.
Lemma lem6209258 : term151 = term154.
Proof. exact (TRANS (@lem6209254) (@lem6209257)). Qed.
Lemma lem6209259 (_79025 : int) : (term95 _79025) = (term95 _79025).
Proof. exact (eq_refl (term95 _79025)). Qed.
Lemma lem6209260 (_79025 : int) : (term146 _79025) = (term182 _79025).
Proof. exact (MK_COMB (@lem6209259 _79025) (@lem6209258)). Qed.
Lemma lem6209262 (_79025 : int) : (term103 _79025) = (term182 _79025).
Proof. exact (TRANS (@lem6209145 _79025) (@lem6209260 _79025)). Qed.
Lemma lem6209277 (_79025 : int) : (term183 _79025) = (term183 _79025).
Proof. exact (eq_refl (term183 _79025)). Qed.
Lemma lem6209278 (_79025 : int) : (term184 _79025) = (term185 _79025).
Proof. exact (MK_COMB (@lem6209277 _79025) (@lem6209262 _79025)). Qed.
Lemma lem6209279 (_79025 : int) : (term185 _79025) = (term186 _79025).
Proof. exact (@lem1982792 (term98 _79025) (term182 _79025)). Qed.
Lemma lem6209280 (_79025 : int) : (term187 _79025) = (term188 _79025).
Proof. exact (@lem1982781 (term93 _79025) term123 term154). Qed.
Lemma lem6209282 (x : nat) : (real_of_num x) = (term119 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6209283 : term154 = term181.
Proof. exact (@lem6209282 term172). Qed.
Lemma lem6209285 (x : nat) : (term121 x) = (term122 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem6209286 : term123 = term124.
Proof. exact (@lem6209285 term6). Qed.
Lemma lem6209287 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem6209288 : term125 = term126.
Proof. exact (MK_COMB (@lem6209287) (@lem6209286)). Qed.
Lemma lem6209289 : term189 = term190.
Proof. exact (MK_COMB (@lem6209288) (@lem6209283)). Qed.
Lemma lem6209290 : term190 = term191.
Proof. exact (@lem1981613 term123 term154 term102 term102). Qed.
Lemma lem6209292 (m : nat) (n : nat) : (term130 m n) = (term131 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6209293 : term132 = term133.
Proof. exact (@lem6209292 term6 term6). Qed.
Lemma lem6209294 : (term134 = (BIT1 0)) = (term135 = term6).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6209295 : term135 = term6.
Proof. exact (EQ_MP (@lem6209294) (@lem940073)). Qed.
Lemma lem6209296 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6209297 : term133 = term102.
Proof. exact (MK_COMB (@lem6209296) (@lem6209295)). Qed.
Lemma lem6209298 : term132 = term102.
Proof. exact (TRANS (@lem6209293) (@lem6209297)). Qed.
Lemma lem6209300 (m : nat) (n : nat) : (term192 m n) = (term193 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem6209301 : term189 = term194.
Proof. exact (@lem6209300 term6 term172). Qed.
Lemma lem6209302 : term195 = term170.
Proof. exact (@lem996238 term170). Qed.
Lemma lem6209303 : (term195 = term170) = (term196 = term172).
Proof. exact (@lem1007663 (BIT1 0) term170 term170). Qed.
Lemma lem6209304 : term196 = term172.
Proof. exact (EQ_MP (@lem6209303) (@lem6209302)). Qed.
Lemma lem6209305 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6209306 : term197 = term154.
Proof. exact (MK_COMB (@lem6209305) (@lem6209304)). Qed.
Lemma lem6209307 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem6209308 : term194 = term198.
Proof. exact (MK_COMB (@lem6209307) (@lem6209306)). Qed.
Lemma lem6209309 : term189 = term198.
Proof. exact (TRANS (@lem6209301) (@lem6209308)). Qed.
Lemma lem6209310 : real_div = real_div.
Proof. exact (eq_refl real_div). Qed.
Lemma lem6209311 : term199 = term200.
Proof. exact (MK_COMB (@lem6209310) (@lem6209309)). Qed.
Lemma lem6209312 : term191 = term201.
Proof. exact (MK_COMB (@lem6209311) (@lem6209298)). Qed.
Lemma lem6209313 : term190 = term201.
Proof. exact (TRANS (@lem6209290) (@lem6209312)). Qed.
Lemma lem6209314 : term189 = term201.
Proof. exact (TRANS (@lem6209289) (@lem6209313)). Qed.
Lemma lem6209316 (x : real) : (term139 x) = x.
Proof. exact (EQ_MP (@lem1982628 x) (@lem1982627 x)). Qed.
Lemma lem6209317 : term201 = term198.
Proof. exact (@lem6209316 term198). Qed.
Lemma lem6209318 : term189 = term198.
Proof. exact (TRANS (@lem6209314) (@lem6209317)). Qed.
Lemma lem6209319 (_79025 : int) : (term202 _79025) = (term203 _79025).
Proof. exact (@lem1982749 term123 term90 (real_of_int _79025)). Qed.
Lemma lem6209321 (x : nat) : (real_of_num x) = (term119 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6209322 : term90 = term204.
Proof. exact (@lem6209321 term22). Qed.
Lemma lem6209324 (x : nat) : (term121 x) = (term122 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem6209325 : term123 = term124.
Proof. exact (@lem6209324 term6). Qed.
Lemma lem6209326 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem6209327 : term125 = term126.
Proof. exact (MK_COMB (@lem6209326) (@lem6209325)). Qed.
Lemma lem6209328 : term205 = term206.
Proof. exact (MK_COMB (@lem6209327) (@lem6209322)). Qed.
Lemma lem6209329 : term206 = term207.
Proof. exact (@lem1981613 term123 term90 term102 term102). Qed.
Lemma lem6209331 (m : nat) (n : nat) : (term130 m n) = (term131 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6209332 : term132 = term133.
Proof. exact (@lem6209331 term6 term6). Qed.
Lemma lem6209333 : (term134 = (BIT1 0)) = (term135 = term6).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6209334 : term135 = term6.
Proof. exact (EQ_MP (@lem6209333) (@lem940073)). Qed.
Lemma lem6209335 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6209336 : term133 = term102.
Proof. exact (MK_COMB (@lem6209335) (@lem6209334)). Qed.
Lemma lem6209337 : term132 = term102.
Proof. exact (TRANS (@lem6209332) (@lem6209336)). Qed.
Lemma lem6209339 (m : nat) (n : nat) : (term192 m n) = (term193 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem6209340 : term205 = term208.
Proof. exact (@lem6209339 term6 term22). Qed.
Lemma lem6209341 : term209 = term20.
Proof. exact (@lem996238 term20). Qed.
Lemma lem6209342 : (term209 = term20) = (term210 = term22).
Proof. exact (@lem1007663 (BIT1 0) term20 term20). Qed.
Lemma lem6209343 : term210 = term22.
Proof. exact (EQ_MP (@lem6209342) (@lem6209341)). Qed.
Lemma lem6209344 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6209345 : term211 = term90.
Proof. exact (MK_COMB (@lem6209344) (@lem6209343)). Qed.
Lemma lem6209346 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem6209347 : term208 = term212.
Proof. exact (MK_COMB (@lem6209346) (@lem6209345)). Qed.
Lemma lem6209348 : term205 = term212.
Proof. exact (TRANS (@lem6209340) (@lem6209347)). Qed.
Lemma lem6209349 : real_div = real_div.
Proof. exact (eq_refl real_div). Qed.
Lemma lem6209350 : term213 = term214.
Proof. exact (MK_COMB (@lem6209349) (@lem6209348)). Qed.
Lemma lem6209351 : term207 = term215.
Proof. exact (MK_COMB (@lem6209350) (@lem6209337)). Qed.
Lemma lem6209352 : term206 = term215.
Proof. exact (TRANS (@lem6209329) (@lem6209351)). Qed.
Lemma lem6209353 : term205 = term215.
Proof. exact (TRANS (@lem6209328) (@lem6209352)). Qed.
Lemma lem6209355 (x : real) : (term139 x) = x.
Proof. exact (EQ_MP (@lem1982628 x) (@lem1982627 x)). Qed.
Lemma lem6209356 : term215 = term212.
Proof. exact (@lem6209355 term212). Qed.
Lemma lem6209357 : term205 = term212.
Proof. exact (TRANS (@lem6209353) (@lem6209356)). Qed.
Lemma lem6209358 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem6209359 : term216 = term217.
Proof. exact (MK_COMB (@lem6209358) (@lem6209357)). Qed.
Lemma lem6209360 (_79025 : int) : (real_of_int _79025) = (real_of_int _79025).
Proof. exact (eq_refl (real_of_int _79025)). Qed.
Lemma lem6209361 (_79025 : int) : (term203 _79025) = (term218 _79025).
Proof. exact (MK_COMB (@lem6209359) (@lem6209360 _79025)). Qed.
Lemma lem6209362 (_79025 : int) : (term202 _79025) = (term218 _79025).
Proof. exact (TRANS (@lem6209319 _79025) (@lem6209361 _79025)). Qed.
Lemma lem6209363 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem6209364 (_79025 : int) : (term219 _79025) = (term220 _79025).
Proof. exact (MK_COMB (@lem6209363) (@lem6209362 _79025)). Qed.
Lemma lem6209365 (_79025 : int) : (term188 _79025) = (term221 _79025).
Proof. exact (MK_COMB (@lem6209364 _79025) (@lem6209318)). Qed.
Lemma lem6209366 (_79025 : int) : (term187 _79025) = (term221 _79025).
Proof. exact (TRANS (@lem6209280 _79025) (@lem6209365 _79025)). Qed.
Lemma lem6209367 (_79025 : int) : (term100 _79025) = (term100 _79025).
Proof. exact (eq_refl (term100 _79025)). Qed.
Lemma lem6209368 (_79025 : int) : (term186 _79025) = (term222 _79025).
Proof. exact (MK_COMB (@lem6209367 _79025) (@lem6209366 _79025)). Qed.
Lemma lem6209369 (_79025 : int) : (term222 _79025) = (term223 _79025).
Proof. exact (@lem1982753 (term93 _79025) (term218 _79025) term97 term198). Qed.
Lemma lem6209370 (_79025 : int) : (term224 _79025) = (term225 _79025).
Proof. exact (@lem1982711 term90 term212 (real_of_int _79025)). Qed.
Lemma lem6209372 (x : nat) : (term121 x) = (term122 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem6209373 : term212 = term215.
Proof. exact (@lem6209372 term22). Qed.
Lemma lem6209375 (x : nat) : (real_of_num x) = (term119 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6209376 : term90 = term204.
Proof. exact (@lem6209375 term22). Qed.
Lemma lem6209377 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem6209378 : term226 = term227.
Proof. exact (MK_COMB (@lem6209377) (@lem6209376)). Qed.
Lemma lem6209379 : term228 = term229.
Proof. exact (MK_COMB (@lem6209378) (@lem6209373)). Qed.
Lemma lem6209380 : term230.
Proof. exact (@lem1981473 term90 term102 term212 term102 term65 term102). Qed.
Lemma lem6209382 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6209383 : term156 = term157.
Proof. exact (@lem6209382 (NUMERAL 0) term6). Qed.
Lemma lem6209384 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6209385 (h1 : term158 = (BIT1 0)) : term157 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6209386 : (term158 = (BIT1 0)) = (term157 = True).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6209385 h1) (fun h1 : term157 = True => @lem6209384)). Qed.
Lemma lem6209387 : term157 = True.
Proof. exact (EQ_MP (@lem6209386) (@lem6209384)). Qed.
Lemma lem6209388 : term156 = True.
Proof. exact (TRANS (@lem6209383) (@lem6209387)). Qed.
Lemma lem6209389 : True = term156.
Proof. exact (SYM (@lem6209388)). Qed.
Lemma lem6209390 : term156.
Proof. exact (EQ_MP (@lem6209389) (@lem0)). Qed.
Lemma lem6209391 : term231.
Proof. exact (@lem6209380 (@lem6209390)). Qed.
Lemma lem6209393 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6209394 : term156 = term157.
Proof. exact (@lem6209393 (NUMERAL 0) term6). Qed.
Lemma lem6209395 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6209396 (h1 : term158 = (BIT1 0)) : term157 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6209397 : (term158 = (BIT1 0)) = (term157 = True).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6209396 h1) (fun h1 : term157 = True => @lem6209395)). Qed.
Lemma lem6209398 : term157 = True.
Proof. exact (EQ_MP (@lem6209397) (@lem6209395)). Qed.
Lemma lem6209399 : term156 = True.
Proof. exact (TRANS (@lem6209394) (@lem6209398)). Qed.
Lemma lem6209400 : True = term156.
Proof. exact (SYM (@lem6209399)). Qed.
Lemma lem6209401 : term156.
Proof. exact (EQ_MP (@lem6209400) (@lem0)). Qed.
Lemma lem6209402 : term232.
Proof. exact (@lem6209391 (@lem6209401)). Qed.
Lemma lem6209404 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6209405 : term156 = term157.
Proof. exact (@lem6209404 (NUMERAL 0) term6). Qed.
Lemma lem6209406 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6209407 (h1 : term158 = (BIT1 0)) : term157 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6209408 : (term158 = (BIT1 0)) = (term157 = True).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6209407 h1) (fun h1 : term157 = True => @lem6209406)). Qed.
Lemma lem6209409 : term157 = True.
Proof. exact (EQ_MP (@lem6209408) (@lem6209406)). Qed.
Lemma lem6209410 : term156 = True.
Proof. exact (TRANS (@lem6209405) (@lem6209409)). Qed.
Lemma lem6209411 : True = term156.
Proof. exact (SYM (@lem6209410)). Qed.
Lemma lem6209412 : term156.
Proof. exact (EQ_MP (@lem6209411) (@lem0)). Qed.
Lemma lem6209413 : term233.
Proof. exact (@lem6209402 (@lem6209412)). Qed.
Lemma lem6209415 (m : nat) (n : nat) : (term192 m n) = (term193 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem6209416 : term234 = term235.
Proof. exact (@lem6209415 term22 term6). Qed.
Lemma lem6209417 : term35 = term20.
Proof. exact (@lem996237 term20). Qed.
Lemma lem6209418 : (term35 = term20) = (term36 = term22).
Proof. exact (@lem1007663 term20 (BIT1 0) term20). Qed.
Lemma lem6209419 : term36 = term22.
Proof. exact (EQ_MP (@lem6209418) (@lem6209417)). Qed.
Lemma lem6209420 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6209421 : term236 = term90.
Proof. exact (MK_COMB (@lem6209420) (@lem6209419)). Qed.
Lemma lem6209422 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem6209423 : term235 = term212.
Proof. exact (MK_COMB (@lem6209422) (@lem6209421)). Qed.
Lemma lem6209424 : term234 = term212.
Proof. exact (TRANS (@lem6209416) (@lem6209423)). Qed.
Lemma lem6209426 (m : nat) (n : nat) : (term130 m n) = (term131 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6209427 : term237 = term236.
Proof. exact (@lem6209426 term22 term6). Qed.
Lemma lem6209428 : term35 = term20.
Proof. exact (@lem996237 term20). Qed.
Lemma lem6209429 : (term35 = term20) = (term36 = term22).
Proof. exact (@lem1007663 term20 (BIT1 0) term20). Qed.
Lemma lem6209430 : term36 = term22.
Proof. exact (EQ_MP (@lem6209429) (@lem6209428)). Qed.
Lemma lem6209431 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6209432 : term236 = term90.
Proof. exact (MK_COMB (@lem6209431) (@lem6209430)). Qed.
Lemma lem6209433 : term237 = term90.
Proof. exact (TRANS (@lem6209427) (@lem6209432)). Qed.
Lemma lem6209434 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem6209435 : term238 = term226.
Proof. exact (MK_COMB (@lem6209434) (@lem6209433)). Qed.
Lemma lem6209436 : term239 = term228.
Proof. exact (MK_COMB (@lem6209435) (@lem6209424)). Qed.
Lemma lem6209438 (m : nat) : (term240 m) = term65.
Proof. exact (proj2 (@lem1367303 m)). Qed.
Lemma lem6209439 : term228 = term65.
Proof. exact (@lem6209438 term22). Qed.
Lemma lem6209440 : term239 = term65.
Proof. exact (TRANS (@lem6209436) (@lem6209439)). Qed.
Lemma lem6209441 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem6209442 : term241 = term242.
Proof. exact (MK_COMB (@lem6209441) (@lem6209440)). Qed.
Lemma lem6209443 : term102 = term102.
Proof. exact (eq_refl term102). Qed.
Lemma lem6209444 : term243 = term244.
Proof. exact (MK_COMB (@lem6209442) (@lem6209443)). Qed.
Lemma lem6209446 (x : nat) : (term245 x) = term65.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem6209447 : term244 = term65.
Proof. exact (@lem6209446 term6). Qed.
Lemma lem6209448 : term243 = term65.
Proof. exact (TRANS (@lem6209444) (@lem6209447)). Qed.
Lemma lem6209450 (m : nat) (n : nat) : (term130 m n) = (term131 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6209451 : term132 = term133.
Proof. exact (@lem6209450 term6 term6). Qed.
Lemma lem6209452 : (term134 = (BIT1 0)) = (term135 = term6).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6209453 : term135 = term6.
Proof. exact (EQ_MP (@lem6209452) (@lem940073)). Qed.
Lemma lem6209454 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6209455 : term133 = term102.
Proof. exact (MK_COMB (@lem6209454) (@lem6209453)). Qed.
Lemma lem6209456 : term132 = term102.
Proof. exact (TRANS (@lem6209451) (@lem6209455)). Qed.
Lemma lem6209457 : term242 = term242.
Proof. exact (eq_refl term242). Qed.
Lemma lem6209458 : term246 = term244.
Proof. exact (MK_COMB (@lem6209457) (@lem6209456)). Qed.
Lemma lem6209460 (x : nat) : (term245 x) = term65.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem6209461 : term244 = term65.
Proof. exact (@lem6209460 term6). Qed.
Lemma lem6209462 : term246 = term65.
Proof. exact (TRANS (@lem6209458) (@lem6209461)). Qed.
Lemma lem6209463 : term65 = term246.
Proof. exact (SYM (@lem6209462)). Qed.
Lemma lem6209464 : term243 = term246.
Proof. exact (TRANS (@lem6209448) (@lem6209463)). Qed.
Lemma lem6209465 : term229 = term120.
Proof. exact (@lem6209413 (@lem6209464)). Qed.
Lemma lem6209466 : term228 = term120.
Proof. exact (TRANS (@lem6209379) (@lem6209465)). Qed.
Lemma lem6209468 (x : real) : (term139 x) = x.
Proof. exact (EQ_MP (@lem1981475 x) (@lem1981474 x)). Qed.
Lemma lem6209469 : term120 = term65.
Proof. exact (@lem6209468 term65). Qed.
Lemma lem6209470 : term228 = term65.
Proof. exact (TRANS (@lem6209466) (@lem6209469)). Qed.
Lemma lem6209471 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem6209472 : term247 = term242.
Proof. exact (MK_COMB (@lem6209471) (@lem6209470)). Qed.
Lemma lem6209473 (_79025 : int) : (real_of_int _79025) = (real_of_int _79025).
Proof. exact (eq_refl (real_of_int _79025)). Qed.
Lemma lem6209474 (_79025 : int) : (term225 _79025) = (term248 _79025).
Proof. exact (MK_COMB (@lem6209472) (@lem6209473 _79025)). Qed.
Lemma lem6209475 (_79025 : int) : (term224 _79025) = (term248 _79025).
Proof. exact (TRANS (@lem6209370 _79025) (@lem6209474 _79025)). Qed.
Lemma lem6209476 (_79025 : int) : (term248 _79025) = term65.
Proof. exact (@lem1982719 (real_of_int _79025)). Qed.
Lemma lem6209477 (_79025 : int) : (term224 _79025) = term65.
Proof. exact (TRANS (@lem6209475 _79025) (@lem6209476 _79025)). Qed.
Lemma lem6209478 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem6209479 (_79025 : int) : (term249 _79025) = term250.
Proof. exact (MK_COMB (@lem6209478) (@lem6209477 _79025)). Qed.
Lemma lem6209481 (x : nat) : (term121 x) = (term122 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem6209482 : term198 = term201.
Proof. exact (@lem6209481 term172). Qed.
Lemma lem6209484 (x : nat) : (real_of_num x) = (term119 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6209485 : term97 = term148.
Proof. exact (@lem6209484 term32). Qed.
Lemma lem6209486 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem6209487 : term149 = term150.
Proof. exact (MK_COMB (@lem6209486) (@lem6209485)). Qed.
Lemma lem6209488 : term251 = term252.
Proof. exact (MK_COMB (@lem6209487) (@lem6209482)). Qed.
Lemma lem6209489 : term253.
Proof. exact (@lem1981473 term97 term102 term198 term102 term123 term102). Qed.
Lemma lem6209491 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6209492 : term156 = term157.
Proof. exact (@lem6209491 (NUMERAL 0) term6). Qed.
Lemma lem6209493 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6209494 (h1 : term158 = (BIT1 0)) : term157 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6209495 : (term158 = (BIT1 0)) = (term157 = True).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6209494 h1) (fun h1 : term157 = True => @lem6209493)). Qed.
Lemma lem6209496 : term157 = True.
Proof. exact (EQ_MP (@lem6209495) (@lem6209493)). Qed.
Lemma lem6209497 : term156 = True.
Proof. exact (TRANS (@lem6209492) (@lem6209496)). Qed.
Lemma lem6209498 : True = term156.
Proof. exact (SYM (@lem6209497)). Qed.
Lemma lem6209499 : term156.
Proof. exact (EQ_MP (@lem6209498) (@lem0)). Qed.
Lemma lem6209500 : term254.
Proof. exact (@lem6209489 (@lem6209499)). Qed.
Lemma lem6209502 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6209503 : term156 = term157.
Proof. exact (@lem6209502 (NUMERAL 0) term6). Qed.
Lemma lem6209504 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6209505 (h1 : term158 = (BIT1 0)) : term157 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6209506 : (term158 = (BIT1 0)) = (term157 = True).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6209505 h1) (fun h1 : term157 = True => @lem6209504)). Qed.
Lemma lem6209507 : term157 = True.
Proof. exact (EQ_MP (@lem6209506) (@lem6209504)). Qed.
Lemma lem6209508 : term156 = True.
Proof. exact (TRANS (@lem6209503) (@lem6209507)). Qed.
Lemma lem6209509 : True = term156.
Proof. exact (SYM (@lem6209508)). Qed.
Lemma lem6209510 : term156.
Proof. exact (EQ_MP (@lem6209509) (@lem0)). Qed.
Lemma lem6209511 : term255.
Proof. exact (@lem6209500 (@lem6209510)). Qed.
Lemma lem6209513 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6209514 : term156 = term157.
Proof. exact (@lem6209513 (NUMERAL 0) term6). Qed.
Lemma lem6209515 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6209516 (h1 : term158 = (BIT1 0)) : term157 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6209517 : (term158 = (BIT1 0)) = (term157 = True).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6209516 h1) (fun h1 : term157 = True => @lem6209515)). Qed.
Lemma lem6209518 : term157 = True.
Proof. exact (EQ_MP (@lem6209517) (@lem6209515)). Qed.
Lemma lem6209519 : term156 = True.
Proof. exact (TRANS (@lem6209514) (@lem6209518)). Qed.
Lemma lem6209520 : True = term156.
Proof. exact (SYM (@lem6209519)). Qed.
Lemma lem6209521 : term156.
Proof. exact (EQ_MP (@lem6209520) (@lem0)). Qed.
Lemma lem6209522 : term256.
Proof. exact (@lem6209511 (@lem6209521)). Qed.
Lemma lem6209524 (m : nat) (n : nat) : (term192 m n) = (term193 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem6209525 : term257 = term258.
Proof. exact (@lem6209524 term172 term6). Qed.
Lemma lem6209526 : term178 = term170.
Proof. exact (@lem996237 term170). Qed.
Lemma lem6209527 : (term178 = term170) = (term179 = term172).
Proof. exact (@lem1007663 term170 (BIT1 0) term170). Qed.
Lemma lem6209528 : term179 = term172.
Proof. exact (EQ_MP (@lem6209527) (@lem6209526)). Qed.
Lemma lem6209529 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6209530 : term177 = term154.
Proof. exact (MK_COMB (@lem6209529) (@lem6209528)). Qed.
Lemma lem6209531 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem6209532 : term258 = term198.
Proof. exact (MK_COMB (@lem6209531) (@lem6209530)). Qed.
Lemma lem6209533 : term257 = term198.
Proof. exact (TRANS (@lem6209525) (@lem6209532)). Qed.
Lemma lem6209535 (m : nat) (n : nat) : (term130 m n) = (term131 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6209536 : term162 = term163.
Proof. exact (@lem6209535 term32 term6). Qed.
Lemma lem6209537 : term164 = term30.
Proof. exact (@lem996237 term30). Qed.
Lemma lem6209538 : (term164 = term30) = (term165 = term32).
Proof. exact (@lem1007663 term30 (BIT1 0) term30). Qed.
Lemma lem6209539 : term165 = term32.
Proof. exact (EQ_MP (@lem6209538) (@lem6209537)). Qed.
Lemma lem6209540 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6209541 : term163 = term97.
Proof. exact (MK_COMB (@lem6209540) (@lem6209539)). Qed.
Lemma lem6209542 : term162 = term97.
Proof. exact (TRANS (@lem6209536) (@lem6209541)). Qed.
Lemma lem6209543 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem6209544 : term166 = term149.
Proof. exact (MK_COMB (@lem6209543) (@lem6209542)). Qed.
Lemma lem6209545 : term259 = term251.
Proof. exact (MK_COMB (@lem6209544) (@lem6209533)). Qed.
Lemma lem6209548 : term260 = term123.
Proof. exact (@lem1367771 term32 term6). Qed.
Lemma lem6209549 : term169 = term170.
Proof. exact (@lem707013). Qed.
Lemma lem6209550 : (term169 = term170) = (term171 = term172).
Proof. exact (@lem1006570 term30 (BIT1 0) term170). Qed.
Lemma lem6209551 : term171 = term172.
Proof. exact (EQ_MP (@lem6209550) (@lem6209549)). Qed.
Lemma lem6209552 : term172 = term171.
Proof. exact (SYM (@lem6209551)). Qed.
Lemma lem6209553 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6209554 : term154 = term168.
Proof. exact (MK_COMB (@lem6209553) (@lem6209552)). Qed.
Lemma lem6209555 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem6209556 : term198 = term261.
Proof. exact (MK_COMB (@lem6209555) (@lem6209554)). Qed.
Lemma lem6209557 : term149 = term149.
Proof. exact (eq_refl term149). Qed.
Lemma lem6209558 : term251 = term260.
Proof. exact (MK_COMB (@lem6209557) (@lem6209556)). Qed.
Lemma lem6209559 : term251 = term123.
Proof. exact (TRANS (@lem6209558) (@lem6209548)). Qed.
Lemma lem6209560 : term259 = term123.
Proof. exact (TRANS (@lem6209545) (@lem6209559)). Qed.
Lemma lem6209561 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem6209562 : term262 = term125.
Proof. exact (MK_COMB (@lem6209561) (@lem6209560)). Qed.
Lemma lem6209563 : term102 = term102.
Proof. exact (eq_refl term102). Qed.
Lemma lem6209564 : term263 = term264.
Proof. exact (MK_COMB (@lem6209562) (@lem6209563)). Qed.
Lemma lem6209566 (m : nat) (n : nat) : (term192 m n) = (term193 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem6209567 : term264 = term265.
Proof. exact (@lem6209566 term6 term6). Qed.
Lemma lem6209568 : (term134 = (BIT1 0)) = (term135 = term6).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6209569 : term135 = term6.
Proof. exact (EQ_MP (@lem6209568) (@lem940073)). Qed.
Lemma lem6209570 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6209571 : term133 = term102.
Proof. exact (MK_COMB (@lem6209570) (@lem6209569)). Qed.
Lemma lem6209572 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem6209573 : term265 = term123.
Proof. exact (MK_COMB (@lem6209572) (@lem6209571)). Qed.
Lemma lem6209574 : term264 = term123.
Proof. exact (TRANS (@lem6209567) (@lem6209573)). Qed.
Lemma lem6209575 : term263 = term123.
Proof. exact (TRANS (@lem6209564) (@lem6209574)). Qed.
Lemma lem6209577 (m : nat) (n : nat) : (term130 m n) = (term131 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6209578 : term132 = term133.
Proof. exact (@lem6209577 term6 term6). Qed.
Lemma lem6209579 : (term134 = (BIT1 0)) = (term135 = term6).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6209580 : term135 = term6.
Proof. exact (EQ_MP (@lem6209579) (@lem940073)). Qed.
Lemma lem6209581 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6209582 : term133 = term102.
Proof. exact (MK_COMB (@lem6209581) (@lem6209580)). Qed.
Lemma lem6209583 : term132 = term102.
Proof. exact (TRANS (@lem6209578) (@lem6209582)). Qed.
Lemma lem6209584 : term125 = term125.
Proof. exact (eq_refl term125). Qed.
Lemma lem6209585 : term266 = term264.
Proof. exact (MK_COMB (@lem6209584) (@lem6209583)). Qed.
Lemma lem6209587 (m : nat) (n : nat) : (term192 m n) = (term193 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem6209588 : term264 = term265.
Proof. exact (@lem6209587 term6 term6). Qed.
Lemma lem6209589 : (term134 = (BIT1 0)) = (term135 = term6).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6209590 : term135 = term6.
Proof. exact (EQ_MP (@lem6209589) (@lem940073)). Qed.
Lemma lem6209591 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6209592 : term133 = term102.
Proof. exact (MK_COMB (@lem6209591) (@lem6209590)). Qed.
Lemma lem6209593 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem6209594 : term265 = term123.
Proof. exact (MK_COMB (@lem6209593) (@lem6209592)). Qed.
Lemma lem6209595 : term264 = term123.
Proof. exact (TRANS (@lem6209588) (@lem6209594)). Qed.
Lemma lem6209596 : term266 = term123.
Proof. exact (TRANS (@lem6209585) (@lem6209595)). Qed.
Lemma lem6209597 : term123 = term266.
Proof. exact (SYM (@lem6209596)). Qed.
Lemma lem6209598 : term263 = term266.
Proof. exact (TRANS (@lem6209575) (@lem6209597)). Qed.
Lemma lem6209599 : term252 = term124.
Proof. exact (@lem6209522 (@lem6209598)). Qed.
Lemma lem6209600 : term251 = term124.
Proof. exact (TRANS (@lem6209488) (@lem6209599)). Qed.
Lemma lem6209602 (x : real) : (term139 x) = x.
Proof. exact (EQ_MP (@lem1981475 x) (@lem1981474 x)). Qed.
Lemma lem6209603 : term124 = term123.
Proof. exact (@lem6209602 term123). Qed.
Lemma lem6209604 : term251 = term123.
Proof. exact (TRANS (@lem6209600) (@lem6209603)). Qed.
Lemma lem6209605 (_79025 : int) : (term223 _79025) = term267.
Proof. exact (MK_COMB (@lem6209479 _79025) (@lem6209604)). Qed.
Lemma lem6209606 (_79025 : int) : (term222 _79025) = term267.
Proof. exact (TRANS (@lem6209369 _79025) (@lem6209605 _79025)). Qed.
Lemma lem6209607 : term267 = term123.
Proof. exact (@lem1982721 term123). Qed.
Lemma lem6209608 (_79025 : int) : (term222 _79025) = term123.
Proof. exact (TRANS (@lem6209606 _79025) (@lem6209607)). Qed.
Lemma lem6209609 (_79025 : int) : (term186 _79025) = term123.
Proof. exact (TRANS (@lem6209368 _79025) (@lem6209608 _79025)). Qed.
Lemma lem6209610 (_79025 : int) : (term185 _79025) = term123.
Proof. exact (TRANS (@lem6209279 _79025) (@lem6209609 _79025)). Qed.
Lemma lem6209611 (_79025 : int) : (term184 _79025) = term123.
Proof. exact (TRANS (@lem6209278 _79025) (@lem6209610 _79025)). Qed.
Lemma lem6209612 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem6209613 (_79025 : int) : (term268 _79025) = term269.
Proof. exact (MK_COMB (@lem6209612) (@lem6209611 _79025)). Qed.
Lemma lem6209614 : term65 = term65.
Proof. exact (eq_refl term65). Qed.
Lemma lem6209615 (_79025 : int) : (term145 _79025) = term270.
Proof. exact (MK_COMB (@lem6209613 _79025) (@lem6209614)). Qed.
Lemma lem6209616 (_79025 : int) : (term106 _79025) = term270.
Proof. exact (TRANS (@lem6209127 _79025) (@lem6209615 _79025)). Qed.
Lemma lem6209617 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6209618 (_79025 : int) : (term111 _79025) = (term271 _79025).
Proof. exact (MK_COMB (@lem6209617) (@lem6209126 _79025)). Qed.
Lemma lem6209619 (_79025 : int) : (term115 _79025) = (term272 _79025).
Proof. exact (MK_COMB (@lem6209618 _79025) (@lem6209616 _79025)). Qed.
Lemma lem6209634 (_79025 : int) : (term114 _79025) = (term272 _79025).
Proof. exact (TRANS (@lem6209078 _79025) (@lem6209619 _79025)). Qed.
Lemma lem6209638 (_79025 : int) (h1 : term272 _79025) : term272 _79025.
Proof. exact (h1). Qed.
Lemma lem6209639 (_79025 : int) (h1 : term272 _79025) : term270.
Proof. exact (proj2 (@lem6209638 _79025 h1)). Qed.
Lemma lem6209642 (y : real) (x : real) : (real_ge x y) = (real_le y x).
Proof. exact (EQ_MP (@lem1980260 y x) (@lem1980259 y x)). Qed.
Lemma lem6209643 : term270 = term273.
Proof. exact (@lem6209642 term65 term123). Qed.
Lemma lem6209645 (x : nat) : (term121 x) = (term122 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem6209646 : term123 = term124.
Proof. exact (@lem6209645 term6). Qed.
Lemma lem6209648 (x : nat) : (real_of_num x) = (term119 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6209649 : term65 = term120.
Proof. exact (@lem6209648 (NUMERAL 0)). Qed.
Lemma lem6209650 : real_le = real_le.
Proof. exact (eq_refl real_le). Qed.
Lemma lem6209651 : term67 = term274.
Proof. exact (MK_COMB (@lem6209650) (@lem6209649)). Qed.
Lemma lem6209652 : term273 = term275.
Proof. exact (MK_COMB (@lem6209651) (@lem6209646)). Qed.
Lemma lem6209653 : term276.
Proof. exact (@lem1980026 term65 term102 term123 term102). Qed.
Lemma lem6209655 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6209656 : term156 = term157.
Proof. exact (@lem6209655 (NUMERAL 0) term6). Qed.
Lemma lem6209657 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6209658 (h1 : term158 = (BIT1 0)) : term157 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6209659 : (term158 = (BIT1 0)) = (term157 = True).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6209658 h1) (fun h1 : term157 = True => @lem6209657)). Qed.
Lemma lem6209660 : term157 = True.
Proof. exact (EQ_MP (@lem6209659) (@lem6209657)). Qed.
Lemma lem6209661 : term156 = True.
Proof. exact (TRANS (@lem6209656) (@lem6209660)). Qed.
Lemma lem6209662 : True = term156.
Proof. exact (SYM (@lem6209661)). Qed.
Lemma lem6209663 : term156.
Proof. exact (EQ_MP (@lem6209662) (@lem0)). Qed.
Lemma lem6209664 : term277.
Proof. exact (@lem6209653 (@lem6209663)). Qed.
Lemma lem6209666 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6209667 : term156 = term157.
Proof. exact (@lem6209666 (NUMERAL 0) term6). Qed.
Lemma lem6209668 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6209669 (h1 : term158 = (BIT1 0)) : term157 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6209670 : (term158 = (BIT1 0)) = (term157 = True).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6209669 h1) (fun h1 : term157 = True => @lem6209668)). Qed.
Lemma lem6209671 : term157 = True.
Proof. exact (EQ_MP (@lem6209670) (@lem6209668)). Qed.
Lemma lem6209672 : term156 = True.
Proof. exact (TRANS (@lem6209667) (@lem6209671)). Qed.
Lemma lem6209673 : True = term156.
Proof. exact (SYM (@lem6209672)). Qed.
Lemma lem6209674 : term156.
Proof. exact (EQ_MP (@lem6209673) (@lem0)). Qed.
Lemma lem6209675 : term275 = term278.
Proof. exact (@lem6209664 (@lem6209674)). Qed.
Lemma lem6209677 (m : nat) (n : nat) : (term192 m n) = (term193 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem6209678 : term264 = term265.
Proof. exact (@lem6209677 term6 term6). Qed.
Lemma lem6209679 : (term134 = (BIT1 0)) = (term135 = term6).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6209680 : term135 = term6.
Proof. exact (EQ_MP (@lem6209679) (@lem940073)). Qed.
Lemma lem6209681 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6209682 : term133 = term102.
Proof. exact (MK_COMB (@lem6209681) (@lem6209680)). Qed.
Lemma lem6209683 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem6209684 : term265 = term123.
Proof. exact (MK_COMB (@lem6209683) (@lem6209682)). Qed.
Lemma lem6209685 : term264 = term123.
Proof. exact (TRANS (@lem6209678) (@lem6209684)). Qed.
Lemma lem6209687 (x : nat) : (term245 x) = term65.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem6209688 : term244 = term65.
Proof. exact (@lem6209687 term6). Qed.
Lemma lem6209689 : real_le = real_le.
Proof. exact (eq_refl real_le). Qed.
Lemma lem6209690 : term279 = term67.
Proof. exact (MK_COMB (@lem6209689) (@lem6209688)). Qed.
Lemma lem6209691 : term278 = term273.
Proof. exact (MK_COMB (@lem6209690) (@lem6209685)). Qed.
Lemma lem6209693 (m : nat) (n : nat) : (term280 m n) = (term281 m n).
Proof. exact (proj2 (@lem1365406 m n)). Qed.
Lemma lem6209694 : term273 = term282.
Proof. exact (@lem6209693 (NUMERAL 0) term6). Qed.
Lemma lem6209695 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6209696 (h1 : term158 = (BIT1 0)) : (term6 = (NUMERAL 0)) = False.
Proof. exact (@lem1013352 0 0 (BIT1 0) h1). Qed.
Lemma lem6209697 : (term158 = (BIT1 0)) = ((term6 = (NUMERAL 0)) = False).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6209696 h1) (fun h1 : (term6 = (NUMERAL 0)) = False => @lem6209695)). Qed.
Lemma lem6209698 : (term6 = (NUMERAL 0)) = False.
Proof. exact (EQ_MP (@lem6209697) (@lem6209695)). Qed.
Lemma lem6209699 : ((NUMERAL 0) = (NUMERAL 0)) = True.
Proof. exact (@lem1013364 0). Qed.
Lemma lem6209700 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6209701 : term283 = (and True).
Proof. exact (MK_COMB (@lem6209700) (@lem6209699)). Qed.
Lemma lem6209702 : term282 = (True /\ False).
Proof. exact (MK_COMB (@lem6209701) (@lem6209698)). Qed.
Lemma lem6209704 : (True /\ False) = False.
Proof. exact (proj1 (@lem1365106)). Qed.
Lemma lem6209705 : term282 = False.
Proof. exact (TRANS (@lem6209702) (@lem6209704)). Qed.
Lemma lem6209706 : term273 = False.
Proof. exact (TRANS (@lem6209694) (@lem6209705)). Qed.
Lemma lem6209707 : term278 = False.
Proof. exact (TRANS (@lem6209691) (@lem6209706)). Qed.
Lemma lem6209708 : term275 = False.
Proof. exact (TRANS (@lem6209675) (@lem6209707)). Qed.
Lemma lem6209709 : term273 = False.
Proof. exact (TRANS (@lem6209652) (@lem6209708)). Qed.
Lemma lem6209710 : term270 = False.
Proof. exact (TRANS (@lem6209643) (@lem6209709)). Qed.
Lemma lem6209711 (_79025 : int) (h1 : term272 _79025) : False.
Proof. exact (EQ_MP (@lem6209710) (@lem6209639 _79025 h1)). Qed.
Lemma lem6209713 (_79025 : int) (h1 : term272 _79025) : term272 _79025.
Proof. exact (h1). Qed.
Lemma lem6209714 (_79025 : int) (h1 : term272 _79025) : (term272 _79025) = False.
Proof. exact (prop_ext (fun h2 : term272 _79025 => @lem6209711 _79025 h1) (fun h2 : False => @lem6209713 _79025 h1)). Qed.
Lemma lem6209715 (_79025 : int) (h1 : term272 _79025) : False.
Proof. exact (EQ_MP (@lem6209714 _79025 h1) (@lem6209713 _79025 h1)). Qed.
Lemma lem6209716 (_79025 : int) (h1 : term114 _79025) : term114 _79025.
Proof. exact (h1). Qed.
Lemma lem6209717 (_79025 : int) (h1 : term114 _79025) : term272 _79025.
Proof. exact (EQ_MP (@lem6209634 _79025) (@lem6209716 _79025 h1)). Qed.
Lemma lem6209718 (_79025 : int) (h1 : term114 _79025) : (term272 _79025) = False.
Proof. exact (prop_ext (fun h2 : term272 _79025 => @lem6209715 _79025 h2) (fun h2 : False => @lem6209717 _79025 h1)). Qed.
Lemma lem6209719 (_79025 : int) (h1 : term114 _79025) : False.
Proof. exact (EQ_MP (@lem6209718 _79025 h1) (@lem6209717 _79025 h1)). Qed.
Lemma lem6209720 (_79025 : int) : term284 _79025.
Proof. exact (fun h0 : term114 _79025 => @lem6209719 _79025 h0). Qed.
Lemma lem6209721 (_79025 : int) : term285 _79025.
Proof. exact (@lem1386578 (term286 _79025)). Qed.
Lemma lem6209724 (_79025 : int) : term286 _79025.
Proof. exact (@lem6209721 _79025 (@lem6209720 _79025)). Qed.
Lemma lem6209725 (_79025 : int) : (term112 _79025) = (term56 _79025).
Proof. exact (SYM (@lem6209050 _79025)). Qed.
Lemma lem6209726 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem6209727 (_79025 : int) : (term286 _79025) = (term54 _79025).
Proof. exact (MK_COMB (@lem6209726) (@lem6209725 _79025)). Qed.
Lemma lem6209728 (_79025 : int) : term54 _79025.
Proof. exact (EQ_MP (@lem6209727 _79025) (@lem6209724 _79025)). Qed.
Lemma lem6209729 (_79025 : int) : term55 _79025.
Proof. exact (EQ_MP (@lem6208885 _79025) (@lem6209728 _79025)). Qed.
Lemma lem6209730 (n : nat) : term287 n.
Proof. exact (@lem6209729 (int_of_num n)). Qed.
Lemma lem6209731 (n : nat) : (term49 n) = (term49 n).
Proof. exact (@lem6209730 n (@lem6208884 n)). Qed.
Lemma lem6209732 (n : nat) : ((term49 n) = (term49 n)) = ((term7 n) = (term14 n)).
Proof. exact (SYM (@lem6208881 n)). Qed.
Lemma lem6209734 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6209735 : (term158 = (BIT1 0)) = (term1107 = term6).
Proof. exact (@lem1005477 0 (BIT1 0)). Qed.
Lemma lem6209736 : term1107 = term6.
Proof. exact (EQ_MP (@lem6209735) (@lem6209734)). Qed.
Lemma lem6209737 (m : nat) : (term378 m) = (term378 m).
Proof. exact (eq_refl (term378 m)). Qed.
Lemma lem6209738 (m : nat) : (term1108 m) = (term1109 m).
Proof. exact (MK_COMB (@lem6209737 m) (@lem6209736)). Qed.
Lemma lem6209739 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6209740 (m : nat) : (term1110 m) = (term1111 m).
Proof. exact (MK_COMB (@lem6209739) (@lem6209738 m)). Qed.
Lemma lem6209743 (m : nat) : (m = (NUMERAL 0)) = (m = (NUMERAL 0)).
Proof. exact (eq_refl (m = (NUMERAL 0))). Qed.
Lemma lem6209752 (m : nat) : ((term1108 m) = (m = (NUMERAL 0))) = ((term1109 m) = (m = (NUMERAL 0))).
Proof. exact (MK_COMB (@lem6209740 m) (@lem6209743 m)). Qed.
Lemma lem6209767 (m : nat) : ((term1109 m) = (m = (NUMERAL 0))) = (term1112 m).
Proof. exact (@lem17500 (term1109 m) (m = (NUMERAL 0))). Qed.
Lemma lem6209834 (m : nat) : ((term1108 m) = (m = (NUMERAL 0))) = (term1112 m).
Proof. exact (TRANS (@lem6209752 m) (@lem6209767 m)). Qed.
Lemma lem6209836 (m : nat) (n : nat) : (Peano.le m n) = (term404 m n).
Proof. exact (EQ_MP (@lem2841408 m n) (@lem2841407 m n)). Qed.
Lemma lem6209837 (m : nat) : (term1109 m) = (term1113 m).
Proof. exact (@lem6209836 (term18 m) term6). Qed.
Lemma lem6209839 (k : nat) (n : nat) : (term42 k n) = (term43 k n).
Proof. exact (EQ_MP (@lem2841378 k n) (@lem2841377 k n)). Qed.
Lemma lem6209840 (m : nat) : (term44 m) = (term45 m).
Proof. exact (@lem6209839 term20 m). Qed.
Lemma lem6209841 : int_le = int_le.
Proof. exact (eq_refl int_le). Qed.
Lemma lem6209842 (m : nat) : (term406 m) = (term407 m).
Proof. exact (MK_COMB (@lem6209841) (@lem6209840 m)). Qed.
Lemma lem6209843 : term80 = term80.
Proof. exact (eq_refl term80). Qed.
Lemma lem6209844 (m : nat) : (term1113 m) = (term1114 m).
Proof. exact (MK_COMB (@lem6209842 m) (@lem6209843)). Qed.
Lemma lem6209845 (m : nat) : (term1109 m) = (term1114 m).
Proof. exact (TRANS (@lem6209837 m) (@lem6209844 m)). Qed.
Lemma lem6209846 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6209847 (m : nat) : (term1115 m) = (term1116 m).
Proof. exact (MK_COMB (@lem6209846) (@lem6209845 m)). Qed.
Lemma lem6209849 (m : nat) (n : nat) : (m = n) = ((int_of_num m) = (int_of_num n)).
Proof. exact (EQ_MP (@lem2841414 m n) (@lem2841413 m n)). Qed.
Lemma lem6209850 (m : nat) : (m = (NUMERAL 0)) = ((int_of_num m) = term62).
Proof. exact (@lem6209849 m (NUMERAL 0)). Qed.
Lemma lem6209853 (m : nat) : (term1117 m) = (term1118 m).
Proof. exact (MK_COMB (@lem6209847 m) (@lem6209850 m)). Qed.
Lemma lem6209854 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6209855 (m : nat) : (term1119 m) = (term1120 m).
Proof. exact (MK_COMB (@lem6209854) (@lem6209853 m)). Qed.
Lemma lem6209857 (m : nat) (n : nat) : (Peano.le m n) = (term404 m n).
Proof. exact (EQ_MP (@lem2841408 m n) (@lem2841407 m n)). Qed.
Lemma lem6209858 (m : nat) : (term1109 m) = (term1113 m).
Proof. exact (@lem6209857 (term18 m) term6). Qed.
Lemma lem6209860 (k : nat) (n : nat) : (term42 k n) = (term43 k n).
Proof. exact (EQ_MP (@lem2841378 k n) (@lem2841377 k n)). Qed.
Lemma lem6209861 (m : nat) : (term44 m) = (term45 m).
Proof. exact (@lem6209860 term20 m). Qed.
Lemma lem6209862 : int_le = int_le.
Proof. exact (eq_refl int_le). Qed.
Lemma lem6209863 (m : nat) : (term406 m) = (term407 m).
Proof. exact (MK_COMB (@lem6209862) (@lem6209861 m)). Qed.
Lemma lem6209864 : term80 = term80.
Proof. exact (eq_refl term80). Qed.
Lemma lem6209865 (m : nat) : (term1113 m) = (term1114 m).
Proof. exact (MK_COMB (@lem6209863 m) (@lem6209864)). Qed.
Lemma lem6209866 (m : nat) : (term1109 m) = (term1114 m).
Proof. exact (TRANS (@lem6209858 m) (@lem6209865 m)). Qed.
Lemma lem6209867 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem6209868 (m : nat) : (term1121 m) = (term1122 m).
Proof. exact (MK_COMB (@lem6209867) (@lem6209866 m)). Qed.
Lemma lem6209869 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6209870 (m : nat) : (term1123 m) = (term1124 m).
Proof. exact (MK_COMB (@lem6209869) (@lem6209868 m)). Qed.
Lemma lem6209872 (m : nat) (n : nat) : (m = n) = ((int_of_num m) = (int_of_num n)).
Proof. exact (EQ_MP (@lem2841414 m n) (@lem2841413 m n)). Qed.
Lemma lem6209873 (m : nat) : (m = (NUMERAL 0)) = ((int_of_num m) = term62).
Proof. exact (@lem6209872 m (NUMERAL 0)). Qed.
Lemma lem6209876 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem6209877 (m : nat) : (term1125 m) = (term1126 m).
Proof. exact (MK_COMB (@lem6209876) (@lem6209873 m)). Qed.
Lemma lem6209878 (m : nat) : (term1127 m) = (term1128 m).
Proof. exact (MK_COMB (@lem6209870 m) (@lem6209877 m)). Qed.
Lemma lem6209879 (m : nat) : (term1112 m) = (term1129 m).
Proof. exact (MK_COMB (@lem6209855 m) (@lem6209878 m)). Qed.
Lemma lem6209880 (m : nat) : ((term1108 m) = (m = (NUMERAL 0))) = (term1129 m).
Proof. exact (TRANS (@lem6209834 m) (@lem6209879 m)). Qed.
Lemma lem6209881 (m : nat) : term52 m.
Proof. exact (@lem2307535 m). Qed.
Lemma lem6209882 (m : nat) : (term52 m) = (term53 m).
Proof. exact (eq_refl (term52 m)). Qed.
Lemma lem6209883 (m : nat) : term53 m.
Proof. exact (EQ_MP (@lem6209882 m) (@lem6209881 m)). Qed.
Lemma lem6209884 (_79027 : int) : (term1130 _79027) = (term1131 _79027).
Proof. exact (@lem2318604 (term1131 _79027)). Qed.
Lemma lem6209905 (_79027 : int) : (term1132 _79027) = (term1133 _79027).
Proof. exact (@lem17045 (term1134 _79027) (_79027 = term62)). Qed.
Lemma lem6209908 (_79027 : int) : (term1135 _79027) = (term1134 _79027).
Proof. exact (@lem16933 (term1134 _79027)). Qed.
Lemma lem6209911 (_79027 : int) : (term1136 _79027) = (_79027 = term62).
Proof. exact (@lem16933 (_79027 = term62)). Qed.
Lemma lem6209912 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6209913 (_79027 : int) : (term1137 _79027) = (term1138 _79027).
Proof. exact (MK_COMB (@lem6209912) (@lem6209908 _79027)). Qed.
Lemma lem6209914 (_79027 : int) : (term1139 _79027) = (term1140 _79027).
Proof. exact (MK_COMB (@lem6209913 _79027) (@lem6209911 _79027)). Qed.
Lemma lem6209915 (_79027 : int) : (term1141 _79027) = (term1139 _79027).
Proof. exact (@lem17045 (term1142 _79027) (term1143 _79027)). Qed.
Lemma lem6209916 (_79027 : int) : (term1141 _79027) = (term1140 _79027).
Proof. exact (TRANS (@lem6209915 _79027) (@lem6209914 _79027)). Qed.
Lemma lem6209917 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6209918 (_79027 : int) : (term1144 _79027) = (term1145 _79027).
Proof. exact (MK_COMB (@lem6209917) (@lem6209905 _79027)). Qed.
Lemma lem6209919 (_79027 : int) : (term1146 _79027) = (term1147 _79027).
Proof. exact (MK_COMB (@lem6209918 _79027) (@lem6209916 _79027)). Qed.
Lemma lem6209920 (_79027 : int) : (term1148 _79027) = (term1146 _79027).
Proof. exact (@lem17160 (term1149 _79027) (term1150 _79027)). Qed.
Lemma lem6209921 (_79027 : int) : (term1148 _79027) = (term1147 _79027).
Proof. exact (TRANS (@lem6209920 _79027) (@lem6209919 _79027)). Qed.
Lemma lem6209923 (_79027 : int) : (term110 _79027) = (term110 _79027).
Proof. exact (eq_refl (term110 _79027)). Qed.
Lemma lem6209924 (_79027 : int) : (term1151 _79027) = (term1152 _79027).
Proof. exact (MK_COMB (@lem6209923 _79027) (@lem6209921 _79027)). Qed.
Lemma lem6209925 (_79027 : int) : (term1153 _79027) = (term1151 _79027).
Proof. exact (@lem17362 (term58 _79027) (term1154 _79027)). Qed.
Lemma lem6209949 (_79027 : int) : (term1153 _79027) = (term1152 _79027).
Proof. exact (TRANS (@lem6209925 _79027) (@lem6209924 _79027)). Qed.
Lemma lem6209952 (x : int) (y : int) : (int_le x y) = (term60 x y).
Proof. exact (EQ_MP (@lem2318569 x y) (@lem2318568 x y)). Qed.
Lemma lem6209953 (_79027 : int) : (term58 _79027) = (term61 _79027).
Proof. exact (@lem6209952 term62 _79027). Qed.
Lemma lem6209955 (n : nat) : (term63 n) = (real_of_num n).
Proof. exact (EQ_MP (@lem2318545 n) (@lem2318544 n)). Qed.
Lemma lem6209956 : term64 = term65.
Proof. exact (@lem6209955 (NUMERAL 0)). Qed.
Lemma lem6209957 : real_le = real_le.
Proof. exact (eq_refl real_le). Qed.
Lemma lem6209958 : term66 = term67.
Proof. exact (MK_COMB (@lem6209957) (@lem6209956)). Qed.
Lemma lem6209959 (_79027 : int) : (real_of_int _79027) = (real_of_int _79027).
Proof. exact (eq_refl (real_of_int _79027)). Qed.
Lemma lem6209960 (_79027 : int) : (term61 _79027) = (term68 _79027).
Proof. exact (MK_COMB (@lem6209958) (@lem6209959 _79027)). Qed.
Lemma lem6209962 (_79027 : int) : (term58 _79027) = (term68 _79027).
Proof. exact (TRANS (@lem6209953 _79027) (@lem6209960 _79027)). Qed.
Lemma lem6209964 (y : int) (x : int) : (term452 x y) = (term453 y x).
Proof. exact (proj1 (@lem2318495 x y)). Qed.
Lemma lem6209965 (_79027 : int) : (term1142 _79027) = (term1155 _79027).
Proof. exact (@lem6209964 term80 (term83 _79027)). Qed.
Lemma lem6209967 (x : int) (y : int) : (int_le x y) = (term60 x y).
Proof. exact (EQ_MP (@lem2318569 x y) (@lem2318568 x y)). Qed.
Lemma lem6209968 (_79027 : int) : (term1155 _79027) = (term1156 _79027).
Proof. exact (@lem6209967 term1157 (term83 _79027)). Qed.
Lemma lem6209970 (x : int) (y : int) : (term76 x y) = (term77 x y).
Proof. exact (EQ_MP (@lem2318539 x y) (@lem2318538 x y)). Qed.
Lemma lem6209971 : term1158 = term1159.
Proof. exact (@lem6209970 term80 term80). Qed.
Lemma lem6209973 (n : nat) : (term63 n) = (real_of_num n).
Proof. exact (EQ_MP (@lem2318545 n) (@lem2318544 n)). Qed.
Lemma lem6209974 : term101 = term102.
Proof. exact (@lem6209973 term6). Qed.
Lemma lem6209975 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem6209976 : term1160 = term500.
Proof. exact (MK_COMB (@lem6209975) (@lem6209974)). Qed.
Lemma lem6209978 (n : nat) : (term63 n) = (real_of_num n).
Proof. exact (EQ_MP (@lem2318545 n) (@lem2318544 n)). Qed.
Lemma lem6209979 : term101 = term102.
Proof. exact (@lem6209978 term6). Qed.
Lemma lem6209980 : term1159 = term502.
Proof. exact (MK_COMB (@lem6209976) (@lem6209979)). Qed.
Lemma lem6209981 : term1158 = term502.
Proof. exact (TRANS (@lem6209971) (@lem6209980)). Qed.
Lemma lem6209982 : real_le = real_le.
Proof. exact (eq_refl real_le). Qed.
Lemma lem6209983 : term1161 = term1162.
Proof. exact (MK_COMB (@lem6209982) (@lem6209981)). Qed.
Lemma lem6209985 (x : int) (y : int) : (term84 x y) = (term85 x y).
Proof. exact (EQ_MP (@lem2318533 x y) (@lem2318532 x y)). Qed.
Lemma lem6209986 (_79027 : int) : (term86 _79027) = (term87 _79027).
Proof. exact (@lem6209985 term88 _79027). Qed.
Lemma lem6209988 (n : nat) : (term63 n) = (real_of_num n).
Proof. exact (EQ_MP (@lem2318545 n) (@lem2318544 n)). Qed.
Lemma lem6209989 : term89 = term90.
Proof. exact (@lem6209988 term22). Qed.
Lemma lem6209990 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem6209991 : term91 = term92.
Proof. exact (MK_COMB (@lem6209990) (@lem6209989)). Qed.
Lemma lem6209992 (_79027 : int) : (real_of_int _79027) = (real_of_int _79027).
Proof. exact (eq_refl (real_of_int _79027)). Qed.
Lemma lem6209993 (_79027 : int) : (term87 _79027) = (term93 _79027).
Proof. exact (MK_COMB (@lem6209991) (@lem6209992 _79027)). Qed.
Lemma lem6209994 (_79027 : int) : (term86 _79027) = (term93 _79027).
Proof. exact (TRANS (@lem6209986 _79027) (@lem6209993 _79027)). Qed.
Lemma lem6209995 (_79027 : int) : (term1156 _79027) = (term1163 _79027).
Proof. exact (MK_COMB (@lem6209983) (@lem6209994 _79027)). Qed.
Lemma lem6209996 (_79027 : int) : (term1155 _79027) = (term1163 _79027).
Proof. exact (TRANS (@lem6209968 _79027) (@lem6209995 _79027)). Qed.
Lemma lem6209997 (_79027 : int) : (term1142 _79027) = (term1163 _79027).
Proof. exact (TRANS (@lem6209965 _79027) (@lem6209996 _79027)). Qed.
Lemma lem6209999 (y : int) (x : int) : (term69 x y) = (term70 y x).
Proof. exact (proj1 (@lem2318497 x y)). Qed.
Lemma lem6210000 (_79027 : int) : (term1143 _79027) = (term1164 _79027).
Proof. exact (@lem6209999 term62 _79027). Qed.
Lemma lem6210002 (x : int) (y : int) : (int_le x y) = (term60 x y).
Proof. exact (EQ_MP (@lem2318569 x y) (@lem2318568 x y)). Qed.
Lemma lem6210003 (_79027 : int) : (term1165 _79027) = (term1166 _79027).
Proof. exact (@lem6210002 (term458 _79027) term62). Qed.
Lemma lem6210005 (x : int) (y : int) : (term76 x y) = (term77 x y).
Proof. exact (EQ_MP (@lem2318539 x y) (@lem2318538 x y)). Qed.
Lemma lem6210006 (_79027 : int) : (term463 _79027) = (term464 _79027).
Proof. exact (@lem6210005 _79027 term80). Qed.
Lemma lem6210008 (n : nat) : (term63 n) = (real_of_num n).
Proof. exact (EQ_MP (@lem2318545 n) (@lem2318544 n)). Qed.
Lemma lem6210009 : term101 = term102.
Proof. exact (@lem6210008 term6). Qed.
Lemma lem6210010 (_79027 : int) : (term140 _79027) = (term140 _79027).
Proof. exact (eq_refl (term140 _79027)). Qed.
Lemma lem6210011 (_79027 : int) : (term464 _79027) = (term465 _79027).
Proof. exact (MK_COMB (@lem6210010 _79027) (@lem6210009)). Qed.
Lemma lem6210012 (_79027 : int) : (term463 _79027) = (term465 _79027).
Proof. exact (TRANS (@lem6210006 _79027) (@lem6210011 _79027)). Qed.
Lemma lem6210013 : real_le = real_le.
Proof. exact (eq_refl real_le). Qed.
Lemma lem6210014 (_79027 : int) : (term1167 _79027) = (term1168 _79027).
Proof. exact (MK_COMB (@lem6210013) (@lem6210012 _79027)). Qed.
Lemma lem6210016 (n : nat) : (term63 n) = (real_of_num n).
Proof. exact (EQ_MP (@lem2318545 n) (@lem2318544 n)). Qed.
Lemma lem6210017 : term64 = term65.
Proof. exact (@lem6210016 (NUMERAL 0)). Qed.
Lemma lem6210018 (_79027 : int) : (term1166 _79027) = (term1169 _79027).
Proof. exact (MK_COMB (@lem6210014 _79027) (@lem6210017)). Qed.
Lemma lem6210019 (_79027 : int) : (term1165 _79027) = (term1169 _79027).
Proof. exact (TRANS (@lem6210003 _79027) (@lem6210018 _79027)). Qed.
Lemma lem6210020 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6210021 (_79027 : int) : (term1170 _79027) = (term1171 _79027).
Proof. exact (MK_COMB (@lem6210020) (@lem6210019 _79027)). Qed.
Lemma lem6210023 (x : int) (y : int) : (int_le x y) = (term60 x y).
Proof. exact (EQ_MP (@lem2318569 x y) (@lem2318568 x y)). Qed.
Lemma lem6210024 (_79027 : int) : (term1172 _79027) = (term1173 _79027).
Proof. exact (@lem6210023 term1174 _79027). Qed.
Lemma lem6210026 (x : int) (y : int) : (term76 x y) = (term77 x y).
Proof. exact (EQ_MP (@lem2318539 x y) (@lem2318538 x y)). Qed.
Lemma lem6210027 : term1175 = term1176.
Proof. exact (@lem6210026 term62 term80). Qed.
Lemma lem6210029 (n : nat) : (term63 n) = (real_of_num n).
Proof. exact (EQ_MP (@lem2318545 n) (@lem2318544 n)). Qed.
Lemma lem6210030 : term64 = term65.
Proof. exact (@lem6210029 (NUMERAL 0)). Qed.
Lemma lem6210031 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem6210032 : term1177 = term250.
Proof. exact (MK_COMB (@lem6210031) (@lem6210030)). Qed.
Lemma lem6210034 (n : nat) : (term63 n) = (real_of_num n).
Proof. exact (EQ_MP (@lem2318545 n) (@lem2318544 n)). Qed.
Lemma lem6210035 : term101 = term102.
Proof. exact (@lem6210034 term6). Qed.
Lemma lem6210036 : term1176 = term1178.
Proof. exact (MK_COMB (@lem6210032) (@lem6210035)). Qed.
Lemma lem6210037 : term1175 = term1178.
Proof. exact (TRANS (@lem6210027) (@lem6210036)). Qed.
Lemma lem6210038 : real_le = real_le.
Proof. exact (eq_refl real_le). Qed.
Lemma lem6210039 : term1179 = term1180.
Proof. exact (MK_COMB (@lem6210038) (@lem6210037)). Qed.
Lemma lem6210040 (_79027 : int) : (real_of_int _79027) = (real_of_int _79027).
Proof. exact (eq_refl (real_of_int _79027)). Qed.
Lemma lem6210041 (_79027 : int) : (term1173 _79027) = (term1181 _79027).
Proof. exact (MK_COMB (@lem6210039) (@lem6210040 _79027)). Qed.
Lemma lem6210042 (_79027 : int) : (term1172 _79027) = (term1181 _79027).
Proof. exact (TRANS (@lem6210024 _79027) (@lem6210041 _79027)). Qed.
Lemma lem6210043 (_79027 : int) : (term1164 _79027) = (term1182 _79027).
Proof. exact (MK_COMB (@lem6210021 _79027) (@lem6210042 _79027)). Qed.
Lemma lem6210044 (_79027 : int) : (term1143 _79027) = (term1182 _79027).
Proof. exact (TRANS (@lem6210000 _79027) (@lem6210043 _79027)). Qed.
Lemma lem6210045 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6210046 (_79027 : int) : (term1183 _79027) = (term1184 _79027).
Proof. exact (MK_COMB (@lem6210045) (@lem6209997 _79027)). Qed.
Lemma lem6210047 (_79027 : int) : (term1133 _79027) = (term1185 _79027).
Proof. exact (MK_COMB (@lem6210046 _79027) (@lem6210044 _79027)). Qed.
Lemma lem6210050 (x : int) (y : int) : (int_le x y) = (term60 x y).
Proof. exact (EQ_MP (@lem2318569 x y) (@lem2318568 x y)). Qed.
Lemma lem6210051 (_79027 : int) : (term1134 _79027) = (term1186 _79027).
Proof. exact (@lem6210050 (term83 _79027) term80). Qed.
Lemma lem6210053 (x : int) (y : int) : (term84 x y) = (term85 x y).
Proof. exact (EQ_MP (@lem2318533 x y) (@lem2318532 x y)). Qed.
Lemma lem6210054 (_79027 : int) : (term86 _79027) = (term87 _79027).
Proof. exact (@lem6210053 term88 _79027). Qed.
Lemma lem6210056 (n : nat) : (term63 n) = (real_of_num n).
Proof. exact (EQ_MP (@lem2318545 n) (@lem2318544 n)). Qed.
Lemma lem6210057 : term89 = term90.
Proof. exact (@lem6210056 term22). Qed.
Lemma lem6210058 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem6210059 : term91 = term92.
Proof. exact (MK_COMB (@lem6210058) (@lem6210057)). Qed.
Lemma lem6210060 (_79027 : int) : (real_of_int _79027) = (real_of_int _79027).
Proof. exact (eq_refl (real_of_int _79027)). Qed.
Lemma lem6210061 (_79027 : int) : (term87 _79027) = (term93 _79027).
Proof. exact (MK_COMB (@lem6210059) (@lem6210060 _79027)). Qed.
Lemma lem6210062 (_79027 : int) : (term86 _79027) = (term93 _79027).
Proof. exact (TRANS (@lem6210054 _79027) (@lem6210061 _79027)). Qed.
Lemma lem6210063 : real_le = real_le.
Proof. exact (eq_refl real_le). Qed.
Lemma lem6210064 (_79027 : int) : (term476 _79027) = (term477 _79027).
Proof. exact (MK_COMB (@lem6210063) (@lem6210062 _79027)). Qed.
Lemma lem6210066 (n : nat) : (term63 n) = (real_of_num n).
Proof. exact (EQ_MP (@lem2318545 n) (@lem2318544 n)). Qed.
Lemma lem6210067 : term101 = term102.
Proof. exact (@lem6210066 term6). Qed.
Lemma lem6210068 (_79027 : int) : (term1186 _79027) = (term1187 _79027).
Proof. exact (MK_COMB (@lem6210064 _79027) (@lem6210067)). Qed.
Lemma lem6210070 (_79027 : int) : (term1134 _79027) = (term1187 _79027).
Proof. exact (TRANS (@lem6210051 _79027) (@lem6210068 _79027)). Qed.
Lemma lem6210073 (x : int) (y : int) : (x = y) = ((real_of_int x) = (real_of_int y)).
Proof. exact (EQ_MP (@lem2318575 x y) (@lem2318574 x y)). Qed.
Lemma lem6210074 (_79027 : int) : (_79027 = term62) = ((real_of_int _79027) = term64).
Proof. exact (@lem6210073 _79027 term62). Qed.
Lemma lem6210078 (n : nat) : (term63 n) = (real_of_num n).
Proof. exact (EQ_MP (@lem2318545 n) (@lem2318544 n)). Qed.
Lemma lem6210079 : term64 = term65.
Proof. exact (@lem6210078 (NUMERAL 0)). Qed.
Lemma lem6210080 (_79027 : int) : (term1188 _79027) = (term1188 _79027).
Proof. exact (eq_refl (term1188 _79027)). Qed.
Lemma lem6210081 (_79027 : int) : ((real_of_int _79027) = term64) = ((real_of_int _79027) = term65).
Proof. exact (MK_COMB (@lem6210080 _79027) (@lem6210079)). Qed.
Lemma lem6210083 (_79027 : int) : (_79027 = term62) = ((real_of_int _79027) = term65).
Proof. exact (TRANS (@lem6210074 _79027) (@lem6210081 _79027)). Qed.
Lemma lem6210084 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6210085 (_79027 : int) : (term1138 _79027) = (term1189 _79027).
Proof. exact (MK_COMB (@lem6210084) (@lem6210070 _79027)). Qed.
Lemma lem6210086 (_79027 : int) : (term1140 _79027) = (term1190 _79027).
Proof. exact (MK_COMB (@lem6210085 _79027) (@lem6210083 _79027)). Qed.
Lemma lem6210087 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6210088 (_79027 : int) : (term1145 _79027) = (term1191 _79027).
Proof. exact (MK_COMB (@lem6210087) (@lem6210047 _79027)). Qed.
Lemma lem6210089 (_79027 : int) : (term1147 _79027) = (term1192 _79027).
Proof. exact (MK_COMB (@lem6210088 _79027) (@lem6210086 _79027)). Qed.
Lemma lem6210090 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6210091 (_79027 : int) : (term110 _79027) = (term111 _79027).
Proof. exact (MK_COMB (@lem6210090) (@lem6209962 _79027)). Qed.
Lemma lem6210092 (_79027 : int) : (term1152 _79027) = (term1193 _79027).
Proof. exact (MK_COMB (@lem6210091 _79027) (@lem6210089 _79027)). Qed.
Lemma lem6210093 (_79027 : int) : (term1153 _79027) = (term1193 _79027).
Proof. exact (TRANS (@lem6209949 _79027) (@lem6210092 _79027)). Qed.
Lemma lem6210097 (t : Prop) : (term113 t) = t.
Proof. exact (EQ_MP (@lem16507 t) (@lem16506 t)). Qed.
Lemma lem6210153 (_79027 : int) : (term1194 _79027) = (term1193 _79027).
Proof. exact (@lem6210097 (term1193 _79027)). Qed.
Lemma lem6210154 (_79027 : int) : (term68 _79027) = (term116 _79027).
Proof. exact (@lem1988287 (real_of_int _79027) term65). Qed.
Lemma lem6210160 (_79027 : int) : (term117 _79027) = (term118 _79027).
Proof. exact (@lem1982792 (real_of_int _79027) term65). Qed.
Lemma lem6210162 (x : nat) : (real_of_num x) = (term119 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6210163 : term65 = term120.
Proof. exact (@lem6210162 (NUMERAL 0)). Qed.
Lemma lem6210165 (x : nat) : (term121 x) = (term122 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem6210166 : term123 = term124.
Proof. exact (@lem6210165 term6). Qed.
Lemma lem6210167 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem6210168 : term125 = term126.
Proof. exact (MK_COMB (@lem6210167) (@lem6210166)). Qed.
Lemma lem6210169 : term127 = term128.
Proof. exact (MK_COMB (@lem6210168) (@lem6210163)). Qed.
Lemma lem6210170 : term128 = term129.
Proof. exact (@lem1981613 term123 term65 term102 term102). Qed.
Lemma lem6210172 (m : nat) (n : nat) : (term130 m n) = (term131 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6210173 : term132 = term133.
Proof. exact (@lem6210172 term6 term6). Qed.
Lemma lem6210174 : (term134 = (BIT1 0)) = (term135 = term6).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6210175 : term135 = term6.
Proof. exact (EQ_MP (@lem6210174) (@lem940073)). Qed.
Lemma lem6210176 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6210177 : term133 = term102.
Proof. exact (MK_COMB (@lem6210176) (@lem6210175)). Qed.
Lemma lem6210178 : term132 = term102.
Proof. exact (TRANS (@lem6210173) (@lem6210177)). Qed.
Lemma lem6210180 (x : nat) : (term136 x) = term65.
Proof. exact (proj2 (@lem1367254 x)). Qed.
Lemma lem6210181 : term127 = term65.
Proof. exact (@lem6210180 term6). Qed.
Lemma lem6210182 : real_div = real_div.
Proof. exact (eq_refl real_div). Qed.
Lemma lem6210183 : term137 = term138.
Proof. exact (MK_COMB (@lem6210182) (@lem6210181)). Qed.
Lemma lem6210184 : term129 = term120.
Proof. exact (MK_COMB (@lem6210183) (@lem6210178)). Qed.
Lemma lem6210185 : term128 = term120.
Proof. exact (TRANS (@lem6210170) (@lem6210184)). Qed.
Lemma lem6210186 : term127 = term120.
Proof. exact (TRANS (@lem6210169) (@lem6210185)). Qed.
Lemma lem6210188 (x : real) : (term139 x) = x.
Proof. exact (EQ_MP (@lem1982628 x) (@lem1982627 x)). Qed.
Lemma lem6210189 : term120 = term65.
Proof. exact (@lem6210188 term65). Qed.
Lemma lem6210190 : term127 = term65.
Proof. exact (TRANS (@lem6210186) (@lem6210189)). Qed.
Lemma lem6210191 (_79027 : int) : (term140 _79027) = (term140 _79027).
Proof. exact (eq_refl (term140 _79027)). Qed.
Lemma lem6210192 (_79027 : int) : (term118 _79027) = (term141 _79027).
Proof. exact (MK_COMB (@lem6210191 _79027) (@lem6210190)). Qed.
Lemma lem6210193 (_79027 : int) : (term141 _79027) = (real_of_int _79027).
Proof. exact (@lem1982723 (real_of_int _79027)). Qed.
Lemma lem6210194 (_79027 : int) : (term118 _79027) = (real_of_int _79027).
Proof. exact (TRANS (@lem6210192 _79027) (@lem6210193 _79027)). Qed.
Lemma lem6210196 (_79027 : int) : (term117 _79027) = (real_of_int _79027).
Proof. exact (TRANS (@lem6210160 _79027) (@lem6210194 _79027)). Qed.
Lemma lem6210197 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem6210198 (_79027 : int) : (term142 _79027) = (term143 _79027).
Proof. exact (MK_COMB (@lem6210197) (@lem6210196 _79027)). Qed.
Lemma lem6210199 : term65 = term65.
Proof. exact (eq_refl term65). Qed.
Lemma lem6210200 (_79027 : int) : (term116 _79027) = (term144 _79027).
Proof. exact (MK_COMB (@lem6210198 _79027) (@lem6210199)). Qed.
Lemma lem6210201 (_79027 : int) : (term68 _79027) = (term144 _79027).
Proof. exact (TRANS (@lem6210154 _79027) (@lem6210200 _79027)). Qed.
Lemma lem6210202 (_79027 : int) : (term1163 _79027) = (term1195 _79027).
Proof. exact (@lem1988287 (term93 _79027) term502). Qed.
Lemma lem6210209 (x : nat) : (real_of_num x) = (term119 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6210210 : term102 = term147.
Proof. exact (@lem6210209 term6). Qed.
Lemma lem6210212 (x : nat) : (real_of_num x) = (term119 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6210213 : term102 = term147.
Proof. exact (@lem6210212 term6). Qed.
Lemma lem6210214 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem6210215 : term500 = term501.
Proof. exact (MK_COMB (@lem6210214) (@lem6210213)). Qed.
Lemma lem6210216 : term502 = term503.
Proof. exact (MK_COMB (@lem6210215) (@lem6210210)). Qed.
Lemma lem6210217 : term504.
Proof. exact (@lem1981473 term102 term102 term102 term102 term90 term102). Qed.
Lemma lem6210219 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6210220 : term156 = term157.
Proof. exact (@lem6210219 (NUMERAL 0) term6). Qed.
Lemma lem6210221 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6210222 (h1 : term158 = (BIT1 0)) : term157 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6210223 : (term158 = (BIT1 0)) = (term157 = True).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6210222 h1) (fun h1 : term157 = True => @lem6210221)). Qed.
Lemma lem6210224 : term157 = True.
Proof. exact (EQ_MP (@lem6210223) (@lem6210221)). Qed.
Lemma lem6210225 : term156 = True.
Proof. exact (TRANS (@lem6210220) (@lem6210224)). Qed.
Lemma lem6210226 : True = term156.
Proof. exact (SYM (@lem6210225)). Qed.
Lemma lem6210227 : term156.
Proof. exact (EQ_MP (@lem6210226) (@lem0)). Qed.
Lemma lem6210228 : term505.
Proof. exact (@lem6210217 (@lem6210227)). Qed.
Lemma lem6210230 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6210231 : term156 = term157.
Proof. exact (@lem6210230 (NUMERAL 0) term6). Qed.
Lemma lem6210232 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6210233 (h1 : term158 = (BIT1 0)) : term157 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6210234 : (term158 = (BIT1 0)) = (term157 = True).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6210233 h1) (fun h1 : term157 = True => @lem6210232)). Qed.
Lemma lem6210235 : term157 = True.
Proof. exact (EQ_MP (@lem6210234) (@lem6210232)). Qed.
Lemma lem6210236 : term156 = True.
Proof. exact (TRANS (@lem6210231) (@lem6210235)). Qed.
Lemma lem6210237 : True = term156.
Proof. exact (SYM (@lem6210236)). Qed.
Lemma lem6210238 : term156.
Proof. exact (EQ_MP (@lem6210237) (@lem0)). Qed.
Lemma lem6210239 : term506.
Proof. exact (@lem6210228 (@lem6210238)). Qed.
Lemma lem6210241 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6210242 : term156 = term157.
Proof. exact (@lem6210241 (NUMERAL 0) term6). Qed.
Lemma lem6210243 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6210244 (h1 : term158 = (BIT1 0)) : term157 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6210245 : (term158 = (BIT1 0)) = (term157 = True).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6210244 h1) (fun h1 : term157 = True => @lem6210243)). Qed.
Lemma lem6210246 : term157 = True.
Proof. exact (EQ_MP (@lem6210245) (@lem6210243)). Qed.
Lemma lem6210247 : term156 = True.
Proof. exact (TRANS (@lem6210242) (@lem6210246)). Qed.
Lemma lem6210248 : True = term156.
Proof. exact (SYM (@lem6210247)). Qed.
Lemma lem6210249 : term156.
Proof. exact (EQ_MP (@lem6210248) (@lem0)). Qed.
Lemma lem6210250 : term507.
Proof. exact (@lem6210239 (@lem6210249)). Qed.
Lemma lem6210252 (m : nat) (n : nat) : (term130 m n) = (term131 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6210253 : term132 = term133.
Proof. exact (@lem6210252 term6 term6). Qed.
Lemma lem6210254 : (term134 = (BIT1 0)) = (term135 = term6).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6210255 : term135 = term6.
Proof. exact (EQ_MP (@lem6210254) (@lem940073)). Qed.
Lemma lem6210256 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6210257 : term133 = term102.
Proof. exact (MK_COMB (@lem6210256) (@lem6210255)). Qed.
Lemma lem6210258 : term132 = term102.
Proof. exact (TRANS (@lem6210253) (@lem6210257)). Qed.
Lemma lem6210260 (m : nat) (n : nat) : (term130 m n) = (term131 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6210261 : term132 = term133.
Proof. exact (@lem6210260 term6 term6). Qed.
Lemma lem6210262 : (term134 = (BIT1 0)) = (term135 = term6).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6210263 : term135 = term6.
Proof. exact (EQ_MP (@lem6210262) (@lem940073)). Qed.
Lemma lem6210264 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6210265 : term133 = term102.
Proof. exact (MK_COMB (@lem6210264) (@lem6210263)). Qed.
Lemma lem6210266 : term132 = term102.
Proof. exact (TRANS (@lem6210261) (@lem6210265)). Qed.
Lemma lem6210267 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem6210268 : term508 = term500.
Proof. exact (MK_COMB (@lem6210267) (@lem6210266)). Qed.
Lemma lem6210269 : term509 = term502.
Proof. exact (MK_COMB (@lem6210268) (@lem6210258)). Qed.
Lemma lem6210270 : term502 = term510.
Proof. exact (@lem1367770 term6 term6). Qed.
Lemma lem6210271 : term19 = term20.
Proof. exact (@lem706885). Qed.
Lemma lem6210272 : (term19 = term20) = (term21 = term22).
Proof. exact (@lem1006570 (BIT1 0) (BIT1 0) term20). Qed.
Lemma lem6210273 : term21 = term22.
Proof. exact (EQ_MP (@lem6210272) (@lem6210271)). Qed.
Lemma lem6210274 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6210275 : term510 = term90.
Proof. exact (MK_COMB (@lem6210274) (@lem6210273)). Qed.
Lemma lem6210276 : term502 = term90.
Proof. exact (TRANS (@lem6210270) (@lem6210275)). Qed.
Lemma lem6210277 : term509 = term90.
Proof. exact (TRANS (@lem6210269) (@lem6210276)). Qed.
Lemma lem6210278 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem6210279 : term511 = term92.
Proof. exact (MK_COMB (@lem6210278) (@lem6210277)). Qed.
Lemma lem6210280 : term102 = term102.
Proof. exact (eq_refl term102). Qed.
Lemma lem6210281 : term512 = term237.
Proof. exact (MK_COMB (@lem6210279) (@lem6210280)). Qed.
Lemma lem6210283 (m : nat) (n : nat) : (term130 m n) = (term131 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6210284 : term237 = term236.
Proof. exact (@lem6210283 term22 term6). Qed.
Lemma lem6210285 : term35 = term20.
Proof. exact (@lem996237 term20). Qed.
Lemma lem6210286 : (term35 = term20) = (term36 = term22).
Proof. exact (@lem1007663 term20 (BIT1 0) term20). Qed.
Lemma lem6210287 : term36 = term22.
Proof. exact (EQ_MP (@lem6210286) (@lem6210285)). Qed.
Lemma lem6210288 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6210289 : term236 = term90.
Proof. exact (MK_COMB (@lem6210288) (@lem6210287)). Qed.
Lemma lem6210290 : term237 = term90.
Proof. exact (TRANS (@lem6210284) (@lem6210289)). Qed.
Lemma lem6210291 : term512 = term90.
Proof. exact (TRANS (@lem6210281) (@lem6210290)). Qed.
Lemma lem6210293 (m : nat) (n : nat) : (term130 m n) = (term131 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6210294 : term132 = term133.
Proof. exact (@lem6210293 term6 term6). Qed.
Lemma lem6210295 : (term134 = (BIT1 0)) = (term135 = term6).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6210296 : term135 = term6.
Proof. exact (EQ_MP (@lem6210295) (@lem940073)). Qed.
Lemma lem6210297 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6210298 : term133 = term102.
Proof. exact (MK_COMB (@lem6210297) (@lem6210296)). Qed.
Lemma lem6210299 : term132 = term102.
Proof. exact (TRANS (@lem6210294) (@lem6210298)). Qed.
Lemma lem6210300 : term92 = term92.
Proof. exact (eq_refl term92). Qed.
Lemma lem6210301 : term513 = term237.
Proof. exact (MK_COMB (@lem6210300) (@lem6210299)). Qed.
Lemma lem6210303 (m : nat) (n : nat) : (term130 m n) = (term131 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6210304 : term237 = term236.
Proof. exact (@lem6210303 term22 term6). Qed.
Lemma lem6210305 : term35 = term20.
Proof. exact (@lem996237 term20). Qed.
Lemma lem6210306 : (term35 = term20) = (term36 = term22).
Proof. exact (@lem1007663 term20 (BIT1 0) term20). Qed.
Lemma lem6210307 : term36 = term22.
Proof. exact (EQ_MP (@lem6210306) (@lem6210305)). Qed.
Lemma lem6210308 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6210309 : term236 = term90.
Proof. exact (MK_COMB (@lem6210308) (@lem6210307)). Qed.
Lemma lem6210310 : term237 = term90.
Proof. exact (TRANS (@lem6210304) (@lem6210309)). Qed.
Lemma lem6210311 : term513 = term90.
Proof. exact (TRANS (@lem6210301) (@lem6210310)). Qed.
Lemma lem6210312 : term90 = term513.
Proof. exact (SYM (@lem6210311)). Qed.
Lemma lem6210313 : term512 = term513.
Proof. exact (TRANS (@lem6210291) (@lem6210312)). Qed.
Lemma lem6210314 : term503 = term204.
Proof. exact (@lem6210250 (@lem6210313)). Qed.
Lemma lem6210315 : term502 = term204.
Proof. exact (TRANS (@lem6210216) (@lem6210314)). Qed.
Lemma lem6210317 (x : real) : (term139 x) = x.
Proof. exact (EQ_MP (@lem1981475 x) (@lem1981474 x)). Qed.
Lemma lem6210318 : term204 = term90.
Proof. exact (@lem6210317 term90). Qed.
Lemma lem6210320 : term502 = term90.
Proof. exact (TRANS (@lem6210315) (@lem6210318)). Qed.
Lemma lem6210329 (_79027 : int) : (term490 _79027) = (term490 _79027).
Proof. exact (eq_refl (term490 _79027)). Qed.
Lemma lem6210330 (_79027 : int) : (term1196 _79027) = (term1197 _79027).
Proof. exact (MK_COMB (@lem6210329 _79027) (@lem6210320)). Qed.
Lemma lem6210331 (_79027 : int) : (term1197 _79027) = (term1198 _79027).
Proof. exact (@lem1982792 (term93 _79027) term90). Qed.
Lemma lem6210333 (x : nat) : (real_of_num x) = (term119 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6210334 : term90 = term204.
Proof. exact (@lem6210333 term22). Qed.
Lemma lem6210336 (x : nat) : (term121 x) = (term122 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem6210337 : term123 = term124.
Proof. exact (@lem6210336 term6). Qed.
Lemma lem6210338 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem6210339 : term125 = term126.
Proof. exact (MK_COMB (@lem6210338) (@lem6210337)). Qed.
Lemma lem6210340 : term205 = term206.
Proof. exact (MK_COMB (@lem6210339) (@lem6210334)). Qed.
Lemma lem6210341 : term206 = term207.
Proof. exact (@lem1981613 term123 term90 term102 term102). Qed.
Lemma lem6210343 (m : nat) (n : nat) : (term130 m n) = (term131 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6210344 : term132 = term133.
Proof. exact (@lem6210343 term6 term6). Qed.
Lemma lem6210345 : (term134 = (BIT1 0)) = (term135 = term6).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6210346 : term135 = term6.
Proof. exact (EQ_MP (@lem6210345) (@lem940073)). Qed.
Lemma lem6210347 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6210348 : term133 = term102.
Proof. exact (MK_COMB (@lem6210347) (@lem6210346)). Qed.
Lemma lem6210349 : term132 = term102.
Proof. exact (TRANS (@lem6210344) (@lem6210348)). Qed.
Lemma lem6210351 (m : nat) (n : nat) : (term192 m n) = (term193 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem6210352 : term205 = term208.
Proof. exact (@lem6210351 term6 term22). Qed.
Lemma lem6210353 : term209 = term20.
Proof. exact (@lem996238 term20). Qed.
Lemma lem6210354 : (term209 = term20) = (term210 = term22).
Proof. exact (@lem1007663 (BIT1 0) term20 term20). Qed.
Lemma lem6210355 : term210 = term22.
Proof. exact (EQ_MP (@lem6210354) (@lem6210353)). Qed.
Lemma lem6210356 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6210357 : term211 = term90.
Proof. exact (MK_COMB (@lem6210356) (@lem6210355)). Qed.
Lemma lem6210358 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem6210359 : term208 = term212.
Proof. exact (MK_COMB (@lem6210358) (@lem6210357)). Qed.
Lemma lem6210360 : term205 = term212.
Proof. exact (TRANS (@lem6210352) (@lem6210359)). Qed.
Lemma lem6210361 : real_div = real_div.
Proof. exact (eq_refl real_div). Qed.
Lemma lem6210362 : term213 = term214.
Proof. exact (MK_COMB (@lem6210361) (@lem6210360)). Qed.
Lemma lem6210363 : term207 = term215.
Proof. exact (MK_COMB (@lem6210362) (@lem6210349)). Qed.
Lemma lem6210364 : term206 = term215.
Proof. exact (TRANS (@lem6210341) (@lem6210363)). Qed.
Lemma lem6210365 : term205 = term215.
Proof. exact (TRANS (@lem6210340) (@lem6210364)). Qed.
Lemma lem6210367 (x : real) : (term139 x) = x.
Proof. exact (EQ_MP (@lem1982628 x) (@lem1982627 x)). Qed.
Lemma lem6210368 : term215 = term212.
Proof. exact (@lem6210367 term212). Qed.
Lemma lem6210369 : term205 = term212.
Proof. exact (TRANS (@lem6210365) (@lem6210368)). Qed.
Lemma lem6210370 (_79027 : int) : (term95 _79027) = (term95 _79027).
Proof. exact (eq_refl (term95 _79027)). Qed.
Lemma lem6210373 (_79027 : int) : (term1198 _79027) = (term1199 _79027).
Proof. exact (MK_COMB (@lem6210370 _79027) (@lem6210369)). Qed.
Lemma lem6210374 (_79027 : int) : (term1197 _79027) = (term1199 _79027).
Proof. exact (TRANS (@lem6210331 _79027) (@lem6210373 _79027)). Qed.
Lemma lem6210375 (_79027 : int) : (term1196 _79027) = (term1199 _79027).
Proof. exact (TRANS (@lem6210330 _79027) (@lem6210374 _79027)). Qed.
Lemma lem6210376 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem6210377 (_79027 : int) : (term1200 _79027) = (term1201 _79027).
Proof. exact (MK_COMB (@lem6210376) (@lem6210375 _79027)). Qed.
Lemma lem6210378 : term65 = term65.
Proof. exact (eq_refl term65). Qed.
Lemma lem6210379 (_79027 : int) : (term1195 _79027) = (term1202 _79027).
Proof. exact (MK_COMB (@lem6210377 _79027) (@lem6210378)). Qed.
Lemma lem6210380 (_79027 : int) : (term1163 _79027) = (term1202 _79027).
Proof. exact (TRANS (@lem6210202 _79027) (@lem6210379 _79027)). Qed.
Lemma lem6210381 (_79027 : int) : (term1169 _79027) = (term1203 _79027).
Proof. exact (@lem1988287 term65 (term465 _79027)). Qed.
Lemma lem6210393 (_79027 : int) : (term1204 _79027) = (term1205 _79027).
Proof. exact (@lem1982792 term65 (term465 _79027)). Qed.
Lemma lem6210394 (_79027 : int) : (term1206 _79027) = (term1207 _79027).
Proof. exact (@lem1982781 (real_of_int _79027) term123 term102). Qed.
Lemma lem6210396 (x : nat) : (real_of_num x) = (term119 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6210397 : term102 = term147.
Proof. exact (@lem6210396 term6). Qed.
Lemma lem6210399 (x : nat) : (term121 x) = (term122 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem6210400 : term123 = term124.
Proof. exact (@lem6210399 term6). Qed.
Lemma lem6210401 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem6210402 : term125 = term126.
Proof. exact (MK_COMB (@lem6210401) (@lem6210400)). Qed.
Lemma lem6210403 : term264 = term1208.
Proof. exact (MK_COMB (@lem6210402) (@lem6210397)). Qed.
Lemma lem6210404 : term1208 = term1209.
Proof. exact (@lem1981613 term123 term102 term102 term102). Qed.
Lemma lem6210406 (m : nat) (n : nat) : (term130 m n) = (term131 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6210407 : term132 = term133.
Proof. exact (@lem6210406 term6 term6). Qed.
Lemma lem6210408 : (term134 = (BIT1 0)) = (term135 = term6).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6210409 : term135 = term6.
Proof. exact (EQ_MP (@lem6210408) (@lem940073)). Qed.
Lemma lem6210410 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6210411 : term133 = term102.
Proof. exact (MK_COMB (@lem6210410) (@lem6210409)). Qed.
Lemma lem6210412 : term132 = term102.
Proof. exact (TRANS (@lem6210407) (@lem6210411)). Qed.
Lemma lem6210414 (m : nat) (n : nat) : (term192 m n) = (term193 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem6210415 : term264 = term265.
Proof. exact (@lem6210414 term6 term6). Qed.
Lemma lem6210416 : (term134 = (BIT1 0)) = (term135 = term6).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6210417 : term135 = term6.
Proof. exact (EQ_MP (@lem6210416) (@lem940073)). Qed.
Lemma lem6210418 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6210419 : term133 = term102.
Proof. exact (MK_COMB (@lem6210418) (@lem6210417)). Qed.
Lemma lem6210420 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem6210421 : term265 = term123.
Proof. exact (MK_COMB (@lem6210420) (@lem6210419)). Qed.
Lemma lem6210422 : term264 = term123.
Proof. exact (TRANS (@lem6210415) (@lem6210421)). Qed.
Lemma lem6210423 : real_div = real_div.
Proof. exact (eq_refl real_div). Qed.
Lemma lem6210424 : term1210 = term1211.
Proof. exact (MK_COMB (@lem6210423) (@lem6210422)). Qed.
Lemma lem6210425 : term1209 = term124.
Proof. exact (MK_COMB (@lem6210424) (@lem6210412)). Qed.
Lemma lem6210426 : term1208 = term124.
Proof. exact (TRANS (@lem6210404) (@lem6210425)). Qed.
Lemma lem6210427 : term264 = term124.
Proof. exact (TRANS (@lem6210403) (@lem6210426)). Qed.
Lemma lem6210429 (x : real) : (term139 x) = x.
Proof. exact (EQ_MP (@lem1982628 x) (@lem1982627 x)). Qed.
Lemma lem6210430 : term124 = term123.
Proof. exact (@lem6210429 term123). Qed.
Lemma lem6210431 : term264 = term123.
Proof. exact (TRANS (@lem6210427) (@lem6210430)). Qed.
Lemma lem6210434 (_79027 : int) : (term521 _79027) = (term521 _79027).
Proof. exact (eq_refl (term521 _79027)). Qed.
Lemma lem6210435 (_79027 : int) : (term1207 _79027) = (term1212 _79027).
Proof. exact (MK_COMB (@lem6210434 _79027) (@lem6210431)). Qed.
Lemma lem6210436 (_79027 : int) : (term1206 _79027) = (term1212 _79027).
Proof. exact (TRANS (@lem6210394 _79027) (@lem6210435 _79027)). Qed.
Lemma lem6210437 : term250 = term250.
Proof. exact (eq_refl term250). Qed.
Lemma lem6210438 (_79027 : int) : (term1205 _79027) = (term1213 _79027).
Proof. exact (MK_COMB (@lem6210437) (@lem6210436 _79027)). Qed.
Lemma lem6210439 (_79027 : int) : (term1213 _79027) = (term1212 _79027).
Proof. exact (@lem1982721 (term1212 _79027)). Qed.
Lemma lem6210440 (_79027 : int) : (term1205 _79027) = (term1212 _79027).
Proof. exact (TRANS (@lem6210438 _79027) (@lem6210439 _79027)). Qed.
Lemma lem6210442 (_79027 : int) : (term1204 _79027) = (term1212 _79027).
Proof. exact (TRANS (@lem6210393 _79027) (@lem6210440 _79027)). Qed.
Lemma lem6210443 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem6210444 (_79027 : int) : (term1214 _79027) = (term1215 _79027).
Proof. exact (MK_COMB (@lem6210443) (@lem6210442 _79027)). Qed.
Lemma lem6210445 : term65 = term65.
Proof. exact (eq_refl term65). Qed.
Lemma lem6210446 (_79027 : int) : (term1203 _79027) = (term1216 _79027).
Proof. exact (MK_COMB (@lem6210444 _79027) (@lem6210445)). Qed.
Lemma lem6210447 (_79027 : int) : (term1169 _79027) = (term1216 _79027).
Proof. exact (TRANS (@lem6210381 _79027) (@lem6210446 _79027)). Qed.
Lemma lem6210448 (_79027 : int) : (term1181 _79027) = (term1217 _79027).
Proof. exact (@lem1988287 (real_of_int _79027) term1178). Qed.
Lemma lem6210455 : term1178 = term102.
Proof. exact (@lem1982721 term102). Qed.
Lemma lem6210458 (_79027 : int) : (term515 _79027) = (term515 _79027).
Proof. exact (eq_refl (term515 _79027)). Qed.
Lemma lem6210459 (_79027 : int) : (term1218 _79027) = (term1219 _79027).
Proof. exact (MK_COMB (@lem6210458 _79027) (@lem6210455)). Qed.
Lemma lem6210460 (_79027 : int) : (term1219 _79027) = (term1220 _79027).
Proof. exact (@lem1982792 (real_of_int _79027) term102). Qed.
Lemma lem6210462 (x : nat) : (real_of_num x) = (term119 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6210463 : term102 = term147.
Proof. exact (@lem6210462 term6). Qed.
Lemma lem6210465 (x : nat) : (term121 x) = (term122 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem6210466 : term123 = term124.
Proof. exact (@lem6210465 term6). Qed.
Lemma lem6210467 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem6210468 : term125 = term126.
Proof. exact (MK_COMB (@lem6210467) (@lem6210466)). Qed.
Lemma lem6210469 : term264 = term1208.
Proof. exact (MK_COMB (@lem6210468) (@lem6210463)). Qed.
Lemma lem6210470 : term1208 = term1209.
Proof. exact (@lem1981613 term123 term102 term102 term102). Qed.
Lemma lem6210472 (m : nat) (n : nat) : (term130 m n) = (term131 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6210473 : term132 = term133.
Proof. exact (@lem6210472 term6 term6). Qed.
Lemma lem6210474 : (term134 = (BIT1 0)) = (term135 = term6).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6210475 : term135 = term6.
Proof. exact (EQ_MP (@lem6210474) (@lem940073)). Qed.
Lemma lem6210476 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6210477 : term133 = term102.
Proof. exact (MK_COMB (@lem6210476) (@lem6210475)). Qed.
Lemma lem6210478 : term132 = term102.
Proof. exact (TRANS (@lem6210473) (@lem6210477)). Qed.
Lemma lem6210480 (m : nat) (n : nat) : (term192 m n) = (term193 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem6210481 : term264 = term265.
Proof. exact (@lem6210480 term6 term6). Qed.
Lemma lem6210482 : (term134 = (BIT1 0)) = (term135 = term6).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6210483 : term135 = term6.
Proof. exact (EQ_MP (@lem6210482) (@lem940073)). Qed.
Lemma lem6210484 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6210485 : term133 = term102.
Proof. exact (MK_COMB (@lem6210484) (@lem6210483)). Qed.
Lemma lem6210486 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem6210487 : term265 = term123.
Proof. exact (MK_COMB (@lem6210486) (@lem6210485)). Qed.
Lemma lem6210488 : term264 = term123.
Proof. exact (TRANS (@lem6210481) (@lem6210487)). Qed.
Lemma lem6210489 : real_div = real_div.
Proof. exact (eq_refl real_div). Qed.
Lemma lem6210490 : term1210 = term1211.
Proof. exact (MK_COMB (@lem6210489) (@lem6210488)). Qed.
Lemma lem6210491 : term1209 = term124.
Proof. exact (MK_COMB (@lem6210490) (@lem6210478)). Qed.
Lemma lem6210492 : term1208 = term124.
Proof. exact (TRANS (@lem6210470) (@lem6210491)). Qed.
Lemma lem6210493 : term264 = term124.
Proof. exact (TRANS (@lem6210469) (@lem6210492)). Qed.
Lemma lem6210495 (x : real) : (term139 x) = x.
Proof. exact (EQ_MP (@lem1982628 x) (@lem1982627 x)). Qed.
Lemma lem6210496 : term124 = term123.
Proof. exact (@lem6210495 term123). Qed.
Lemma lem6210497 : term264 = term123.
Proof. exact (TRANS (@lem6210493) (@lem6210496)). Qed.
Lemma lem6210498 (_79027 : int) : (term140 _79027) = (term140 _79027).
Proof. exact (eq_refl (term140 _79027)). Qed.
Lemma lem6210501 (_79027 : int) : (term1220 _79027) = (term1221 _79027).
Proof. exact (MK_COMB (@lem6210498 _79027) (@lem6210497)). Qed.
Lemma lem6210502 (_79027 : int) : (term1219 _79027) = (term1221 _79027).
Proof. exact (TRANS (@lem6210460 _79027) (@lem6210501 _79027)). Qed.
Lemma lem6210503 (_79027 : int) : (term1218 _79027) = (term1221 _79027).
Proof. exact (TRANS (@lem6210459 _79027) (@lem6210502 _79027)). Qed.
Lemma lem6210504 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem6210505 (_79027 : int) : (term1222 _79027) = (term1223 _79027).
Proof. exact (MK_COMB (@lem6210504) (@lem6210503 _79027)). Qed.
Lemma lem6210506 : term65 = term65.
Proof. exact (eq_refl term65). Qed.
Lemma lem6210507 (_79027 : int) : (term1217 _79027) = (term1224 _79027).
Proof. exact (MK_COMB (@lem6210505 _79027) (@lem6210506)). Qed.
Lemma lem6210508 (_79027 : int) : (term1181 _79027) = (term1224 _79027).
Proof. exact (TRANS (@lem6210448 _79027) (@lem6210507 _79027)). Qed.
Lemma lem6210509 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6210510 (_79027 : int) : (term1171 _79027) = (term1225 _79027).
Proof. exact (MK_COMB (@lem6210509) (@lem6210447 _79027)). Qed.
Lemma lem6210511 (_79027 : int) : (term1182 _79027) = (term1226 _79027).
Proof. exact (MK_COMB (@lem6210510 _79027) (@lem6210508 _79027)). Qed.
Lemma lem6210512 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6210513 (_79027 : int) : (term1184 _79027) = (term1227 _79027).
Proof. exact (MK_COMB (@lem6210512) (@lem6210380 _79027)). Qed.
Lemma lem6210514 (_79027 : int) : (term1185 _79027) = (term1228 _79027).
Proof. exact (MK_COMB (@lem6210513 _79027) (@lem6210511 _79027)). Qed.
Lemma lem6210515 (_79027 : int) : (term1187 _79027) = (term1229 _79027).
Proof. exact (@lem1988287 term102 (term93 _79027)). Qed.
Lemma lem6210527 (_79027 : int) : (term1230 _79027) = (term1231 _79027).
Proof. exact (@lem1982792 term102 (term93 _79027)). Qed.
Lemma lem6210528 (_79027 : int) : (term202 _79027) = (term203 _79027).
Proof. exact (@lem1982749 term123 term90 (real_of_int _79027)). Qed.
Lemma lem6210530 (x : nat) : (real_of_num x) = (term119 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6210531 : term90 = term204.
Proof. exact (@lem6210530 term22). Qed.
Lemma lem6210533 (x : nat) : (term121 x) = (term122 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem6210534 : term123 = term124.
Proof. exact (@lem6210533 term6). Qed.
Lemma lem6210535 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem6210536 : term125 = term126.
Proof. exact (MK_COMB (@lem6210535) (@lem6210534)). Qed.
Lemma lem6210537 : term205 = term206.
Proof. exact (MK_COMB (@lem6210536) (@lem6210531)). Qed.
Lemma lem6210538 : term206 = term207.
Proof. exact (@lem1981613 term123 term90 term102 term102). Qed.
Lemma lem6210540 (m : nat) (n : nat) : (term130 m n) = (term131 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6210541 : term132 = term133.
Proof. exact (@lem6210540 term6 term6). Qed.
Lemma lem6210542 : (term134 = (BIT1 0)) = (term135 = term6).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6210543 : term135 = term6.
Proof. exact (EQ_MP (@lem6210542) (@lem940073)). Qed.
Lemma lem6210544 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6210545 : term133 = term102.
Proof. exact (MK_COMB (@lem6210544) (@lem6210543)). Qed.
Lemma lem6210546 : term132 = term102.
Proof. exact (TRANS (@lem6210541) (@lem6210545)). Qed.
Lemma lem6210548 (m : nat) (n : nat) : (term192 m n) = (term193 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem6210549 : term205 = term208.
Proof. exact (@lem6210548 term6 term22). Qed.
Lemma lem6210550 : term209 = term20.
Proof. exact (@lem996238 term20). Qed.
Lemma lem6210551 : (term209 = term20) = (term210 = term22).
Proof. exact (@lem1007663 (BIT1 0) term20 term20). Qed.
Lemma lem6210552 : term210 = term22.
Proof. exact (EQ_MP (@lem6210551) (@lem6210550)). Qed.
Lemma lem6210553 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6210554 : term211 = term90.
Proof. exact (MK_COMB (@lem6210553) (@lem6210552)). Qed.
Lemma lem6210555 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem6210556 : term208 = term212.
Proof. exact (MK_COMB (@lem6210555) (@lem6210554)). Qed.
Lemma lem6210557 : term205 = term212.
Proof. exact (TRANS (@lem6210549) (@lem6210556)). Qed.
Lemma lem6210558 : real_div = real_div.
Proof. exact (eq_refl real_div). Qed.
Lemma lem6210559 : term213 = term214.
Proof. exact (MK_COMB (@lem6210558) (@lem6210557)). Qed.
Lemma lem6210560 : term207 = term215.
Proof. exact (MK_COMB (@lem6210559) (@lem6210546)). Qed.
Lemma lem6210561 : term206 = term215.
Proof. exact (TRANS (@lem6210538) (@lem6210560)). Qed.
Lemma lem6210562 : term205 = term215.
Proof. exact (TRANS (@lem6210537) (@lem6210561)). Qed.
Lemma lem6210564 (x : real) : (term139 x) = x.
Proof. exact (EQ_MP (@lem1982628 x) (@lem1982627 x)). Qed.
Lemma lem6210565 : term215 = term212.
Proof. exact (@lem6210564 term212). Qed.
Lemma lem6210566 : term205 = term212.
Proof. exact (TRANS (@lem6210562) (@lem6210565)). Qed.
Lemma lem6210567 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem6210568 : term216 = term217.
Proof. exact (MK_COMB (@lem6210567) (@lem6210566)). Qed.
Lemma lem6210569 (_79027 : int) : (real_of_int _79027) = (real_of_int _79027).
Proof. exact (eq_refl (real_of_int _79027)). Qed.
Lemma lem6210570 (_79027 : int) : (term203 _79027) = (term218 _79027).
Proof. exact (MK_COMB (@lem6210568) (@lem6210569 _79027)). Qed.
Lemma lem6210571 (_79027 : int) : (term202 _79027) = (term218 _79027).
Proof. exact (TRANS (@lem6210528 _79027) (@lem6210570 _79027)). Qed.
Lemma lem6210572 : term500 = term500.
Proof. exact (eq_refl term500). Qed.
Lemma lem6210573 (_79027 : int) : (term1231 _79027) = (term1232 _79027).
Proof. exact (MK_COMB (@lem6210572) (@lem6210571 _79027)). Qed.
Lemma lem6210574 (_79027 : int) : (term1232 _79027) = (term1233 _79027).
Proof. exact (@lem1982761 (term218 _79027) term102). Qed.
Lemma lem6210575 (_79027 : int) : (term1231 _79027) = (term1233 _79027).
Proof. exact (TRANS (@lem6210573 _79027) (@lem6210574 _79027)). Qed.
Lemma lem6210577 (_79027 : int) : (term1230 _79027) = (term1233 _79027).
Proof. exact (TRANS (@lem6210527 _79027) (@lem6210575 _79027)). Qed.
Lemma lem6210578 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem6210579 (_79027 : int) : (term1234 _79027) = (term1235 _79027).
Proof. exact (MK_COMB (@lem6210578) (@lem6210577 _79027)). Qed.
Lemma lem6210580 : term65 = term65.
Proof. exact (eq_refl term65). Qed.
Lemma lem6210581 (_79027 : int) : (term1229 _79027) = (term1236 _79027).
Proof. exact (MK_COMB (@lem6210579 _79027) (@lem6210580)). Qed.
Lemma lem6210582 (_79027 : int) : (term1187 _79027) = (term1236 _79027).
Proof. exact (TRANS (@lem6210515 _79027) (@lem6210581 _79027)). Qed.
Lemma lem6210583 (_79027 : int) : ((real_of_int _79027) = term65) = ((term117 _79027) = term65).
Proof. exact (@lem1988293 (real_of_int _79027) term65). Qed.
Lemma lem6210589 (_79027 : int) : (term117 _79027) = (term118 _79027).
Proof. exact (@lem1982792 (real_of_int _79027) term65). Qed.
Lemma lem6210591 (x : nat) : (real_of_num x) = (term119 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6210592 : term65 = term120.
Proof. exact (@lem6210591 (NUMERAL 0)). Qed.
Lemma lem6210594 (x : nat) : (term121 x) = (term122 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem6210595 : term123 = term124.
Proof. exact (@lem6210594 term6). Qed.
Lemma lem6210596 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem6210597 : term125 = term126.
Proof. exact (MK_COMB (@lem6210596) (@lem6210595)). Qed.
Lemma lem6210598 : term127 = term128.
Proof. exact (MK_COMB (@lem6210597) (@lem6210592)). Qed.
Lemma lem6210599 : term128 = term129.
Proof. exact (@lem1981613 term123 term65 term102 term102). Qed.
Lemma lem6210601 (m : nat) (n : nat) : (term130 m n) = (term131 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6210602 : term132 = term133.
Proof. exact (@lem6210601 term6 term6). Qed.
Lemma lem6210603 : (term134 = (BIT1 0)) = (term135 = term6).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6210604 : term135 = term6.
Proof. exact (EQ_MP (@lem6210603) (@lem940073)). Qed.
Lemma lem6210605 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6210606 : term133 = term102.
Proof. exact (MK_COMB (@lem6210605) (@lem6210604)). Qed.
Lemma lem6210607 : term132 = term102.
Proof. exact (TRANS (@lem6210602) (@lem6210606)). Qed.
Lemma lem6210609 (x : nat) : (term136 x) = term65.
Proof. exact (proj2 (@lem1367254 x)). Qed.
Lemma lem6210610 : term127 = term65.
Proof. exact (@lem6210609 term6). Qed.
Lemma lem6210611 : real_div = real_div.
Proof. exact (eq_refl real_div). Qed.
Lemma lem6210612 : term137 = term138.
Proof. exact (MK_COMB (@lem6210611) (@lem6210610)). Qed.
Lemma lem6210613 : term129 = term120.
Proof. exact (MK_COMB (@lem6210612) (@lem6210607)). Qed.
Lemma lem6210614 : term128 = term120.
Proof. exact (TRANS (@lem6210599) (@lem6210613)). Qed.
Lemma lem6210615 : term127 = term120.
Proof. exact (TRANS (@lem6210598) (@lem6210614)). Qed.
Lemma lem6210617 (x : real) : (term139 x) = x.
Proof. exact (EQ_MP (@lem1982628 x) (@lem1982627 x)). Qed.
Lemma lem6210618 : term120 = term65.
Proof. exact (@lem6210617 term65). Qed.
Lemma lem6210619 : term127 = term65.
Proof. exact (TRANS (@lem6210615) (@lem6210618)). Qed.
Lemma lem6210620 (_79027 : int) : (term140 _79027) = (term140 _79027).
Proof. exact (eq_refl (term140 _79027)). Qed.
Lemma lem6210621 (_79027 : int) : (term118 _79027) = (term141 _79027).
Proof. exact (MK_COMB (@lem6210620 _79027) (@lem6210619)). Qed.
Lemma lem6210622 (_79027 : int) : (term141 _79027) = (real_of_int _79027).
Proof. exact (@lem1982723 (real_of_int _79027)). Qed.
Lemma lem6210623 (_79027 : int) : (term118 _79027) = (real_of_int _79027).
Proof. exact (TRANS (@lem6210621 _79027) (@lem6210622 _79027)). Qed.
Lemma lem6210625 (_79027 : int) : (term117 _79027) = (real_of_int _79027).
Proof. exact (TRANS (@lem6210589 _79027) (@lem6210623 _79027)). Qed.
Lemma lem6210626 : (@eq real) = (@eq real).
Proof. exact (eq_refl (@eq real)). Qed.
Lemma lem6210627 (_79027 : int) : (term1237 _79027) = (term1188 _79027).
Proof. exact (MK_COMB (@lem6210626) (@lem6210625 _79027)). Qed.
Lemma lem6210628 : term65 = term65.
Proof. exact (eq_refl term65). Qed.
Lemma lem6210629 (_79027 : int) : ((term117 _79027) = term65) = ((real_of_int _79027) = term65).
Proof. exact (MK_COMB (@lem6210627 _79027) (@lem6210628)). Qed.
Lemma lem6210630 (_79027 : int) : ((real_of_int _79027) = term65) = ((real_of_int _79027) = term65).
Proof. exact (TRANS (@lem6210583 _79027) (@lem6210629 _79027)). Qed.
Lemma lem6210631 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6210632 (_79027 : int) : (term1189 _79027) = (term1238 _79027).
Proof. exact (MK_COMB (@lem6210631) (@lem6210582 _79027)). Qed.
Lemma lem6210633 (_79027 : int) : (term1190 _79027) = (term1239 _79027).
Proof. exact (MK_COMB (@lem6210632 _79027) (@lem6210630 _79027)). Qed.
Lemma lem6210634 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6210635 (_79027 : int) : (term1191 _79027) = (term1240 _79027).
Proof. exact (MK_COMB (@lem6210634) (@lem6210514 _79027)). Qed.
Lemma lem6210636 (_79027 : int) : (term1192 _79027) = (term1241 _79027).
Proof. exact (MK_COMB (@lem6210635 _79027) (@lem6210633 _79027)). Qed.
Lemma lem6210637 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6210638 (_79027 : int) : (term111 _79027) = (term271 _79027).
Proof. exact (MK_COMB (@lem6210637) (@lem6210201 _79027)). Qed.
Lemma lem6210639 (_79027 : int) : (term1193 _79027) = (term1242 _79027).
Proof. exact (MK_COMB (@lem6210638 _79027) (@lem6210636 _79027)). Qed.
Lemma lem6210646 (_79027 : int) : (term1194 _79027) = (term1242 _79027).
Proof. exact (TRANS (@lem6210153 _79027) (@lem6210639 _79027)). Qed.
Lemma lem6210664 (_79027 : int) : (term1241 _79027) = (term1243 _79027).
Proof. exact (@lem19158 (term1236 _79027) (term1228 _79027) ((real_of_int _79027) = term65)). Qed.
Lemma lem6210665 (_79027 : int) : (term1244 _79027) = (term1245 _79027).
Proof. exact (@lem19367 (term1202 _79027) (term1226 _79027) ((real_of_int _79027) = term65)). Qed.
Lemma lem6210672 (_79027 : int) : (term1246 _79027) = (term1247 _79027).
Proof. exact (@lem19367 (term1216 _79027) (term1224 _79027) ((real_of_int _79027) = term65)). Qed.
Lemma lem6210675 (_79027 : int) : (term1248 _79027) = (term1248 _79027).
Proof. exact (eq_refl (term1248 _79027)). Qed.
Lemma lem6210676 (_79027 : int) : (term1245 _79027) = (term1249 _79027).
Proof. exact (MK_COMB (@lem6210675 _79027) (@lem6210672 _79027)). Qed.
Lemma lem6210677 (_79027 : int) : (term1244 _79027) = (term1249 _79027).
Proof. exact (TRANS (@lem6210665 _79027) (@lem6210676 _79027)). Qed.
Lemma lem6210678 (_79027 : int) : (term1250 _79027) = (term1251 _79027).
Proof. exact (@lem19367 (term1202 _79027) (term1226 _79027) (term1236 _79027)). Qed.
Lemma lem6210685 (_79027 : int) : (term1252 _79027) = (term1253 _79027).
Proof. exact (@lem19367 (term1216 _79027) (term1224 _79027) (term1236 _79027)). Qed.
Lemma lem6210688 (_79027 : int) : (term1254 _79027) = (term1254 _79027).
Proof. exact (eq_refl (term1254 _79027)). Qed.
Lemma lem6210689 (_79027 : int) : (term1251 _79027) = (term1255 _79027).
Proof. exact (MK_COMB (@lem6210688 _79027) (@lem6210685 _79027)). Qed.
Lemma lem6210690 (_79027 : int) : (term1250 _79027) = (term1255 _79027).
Proof. exact (TRANS (@lem6210678 _79027) (@lem6210689 _79027)). Qed.
Lemma lem6210691 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6210692 (_79027 : int) : (term1256 _79027) = (term1257 _79027).
Proof. exact (MK_COMB (@lem6210691) (@lem6210690 _79027)). Qed.
Lemma lem6210693 (_79027 : int) : (term1243 _79027) = (term1258 _79027).
Proof. exact (MK_COMB (@lem6210692 _79027) (@lem6210677 _79027)). Qed.
Lemma lem6210695 (_79027 : int) : (term1241 _79027) = (term1258 _79027).
Proof. exact (TRANS (@lem6210664 _79027) (@lem6210693 _79027)). Qed.
Lemma lem6210698 (_79027 : int) : (term271 _79027) = (term271 _79027).
Proof. exact (eq_refl (term271 _79027)). Qed.
Lemma lem6210699 (_79027 : int) : (term1242 _79027) = (term1259 _79027).
Proof. exact (MK_COMB (@lem6210698 _79027) (@lem6210695 _79027)). Qed.
Lemma lem6210700 (_79027 : int) : (term1259 _79027) = (term1260 _79027).
Proof. exact (@lem19158 (term1255 _79027) (term144 _79027) (term1249 _79027)). Qed.
Lemma lem6210701 (_79027 : int) : (term1261 _79027) = (term1262 _79027).
Proof. exact (@lem19158 (term1263 _79027) (term144 _79027) (term1247 _79027)). Qed.
Lemma lem6210708 (_79027 : int) : (term1264 _79027) = (term1265 _79027).
Proof. exact (@lem19158 (term1266 _79027) (term144 _79027) (term1267 _79027)). Qed.
Lemma lem6210711 (_79027 : int) : (term1268 _79027) = (term1268 _79027).
Proof. exact (eq_refl (term1268 _79027)). Qed.
Lemma lem6210712 (_79027 : int) : (term1262 _79027) = (term1269 _79027).
Proof. exact (MK_COMB (@lem6210711 _79027) (@lem6210708 _79027)). Qed.
Lemma lem6210713 (_79027 : int) : (term1261 _79027) = (term1269 _79027).
Proof. exact (TRANS (@lem6210701 _79027) (@lem6210712 _79027)). Qed.
Lemma lem6210714 (_79027 : int) : (term1270 _79027) = (term1271 _79027).
Proof. exact (@lem19158 (term1272 _79027) (term144 _79027) (term1253 _79027)). Qed.
Lemma lem6210721 (_79027 : int) : (term1273 _79027) = (term1274 _79027).
Proof. exact (@lem19158 (term1275 _79027) (term144 _79027) (term1276 _79027)). Qed.
Lemma lem6210724 (_79027 : int) : (term1277 _79027) = (term1277 _79027).
Proof. exact (eq_refl (term1277 _79027)). Qed.
Lemma lem6210725 (_79027 : int) : (term1271 _79027) = (term1278 _79027).
Proof. exact (MK_COMB (@lem6210724 _79027) (@lem6210721 _79027)). Qed.
Lemma lem6210726 (_79027 : int) : (term1270 _79027) = (term1278 _79027).
Proof. exact (TRANS (@lem6210714 _79027) (@lem6210725 _79027)). Qed.
Lemma lem6210727 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6210728 (_79027 : int) : (term1279 _79027) = (term1280 _79027).
Proof. exact (MK_COMB (@lem6210727) (@lem6210726 _79027)). Qed.
Lemma lem6210729 (_79027 : int) : (term1260 _79027) = (term1281 _79027).
Proof. exact (MK_COMB (@lem6210728 _79027) (@lem6210713 _79027)). Qed.
Lemma lem6210730 (_79027 : int) : (term1259 _79027) = (term1281 _79027).
Proof. exact (TRANS (@lem6210700 _79027) (@lem6210729 _79027)). Qed.
Lemma lem6210731 (_79027 : int) : (term1242 _79027) = (term1281 _79027).
Proof. exact (TRANS (@lem6210699 _79027) (@lem6210730 _79027)). Qed.
Lemma lem6210732 (_79027 : int) : (term1194 _79027) = (term1281 _79027).
Proof. exact (TRANS (@lem6210646 _79027) (@lem6210731 _79027)). Qed.
Lemma lem6210766 (_79027 : int) (h1 : term1281 _79027) : term1281 _79027.
Proof. exact (h1). Qed.
Lemma lem6210767 (_79027 : int) (h1 : term1278 _79027) : term1278 _79027.
Proof. exact (h1). Qed.
Lemma lem6210768 (_79027 : int) (h1 : term1282 _79027) : term1282 _79027.
Proof. exact (h1). Qed.
Lemma lem6210769 (_79027 : int) (h1 : term1282 _79027) : term1272 _79027.
Proof. exact (proj2 (@lem6210768 _79027 h1)). Qed.
Lemma lem6210771 (_79027 : int) (h1 : term1282 _79027) : term1236 _79027.
Proof. exact (proj2 (@lem6210769 _79027 h1)). Qed.
Lemma lem6210772 (_79027 : int) (h1 : term1282 _79027) : term1202 _79027.
Proof. exact (proj1 (@lem6210769 _79027 h1)). Qed.
Lemma lem6210774 (y : real) (x : real) : (real_gt x y) = (real_lt y x).
Proof. exact (EQ_MP (@lem1980266 y x) (@lem1980265 y x)). Qed.
Lemma lem6210775 : term586 = term587.
Proof. exact (@lem6210774 term65 term90). Qed.
Lemma lem6210777 (x : nat) : (real_of_num x) = (term119 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6210778 : term90 = term204.
Proof. exact (@lem6210777 term22). Qed.
Lemma lem6210780 (x : nat) : (real_of_num x) = (term119 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6210781 : term65 = term120.
Proof. exact (@lem6210780 (NUMERAL 0)). Qed.
Lemma lem6210782 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem6210783 : term588 = term589.
Proof. exact (MK_COMB (@lem6210782) (@lem6210781)). Qed.
Lemma lem6210784 : term587 = term590.
Proof. exact (MK_COMB (@lem6210783) (@lem6210778)). Qed.
Lemma lem6210785 : term591.
Proof. exact (@lem1980255 term65 term102 term90 term102). Qed.
Lemma lem6210787 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6210788 : term156 = term157.
Proof. exact (@lem6210787 (NUMERAL 0) term6). Qed.
Lemma lem6210789 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6210790 (h1 : term158 = (BIT1 0)) : term157 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6210791 : (term158 = (BIT1 0)) = (term157 = True).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6210790 h1) (fun h1 : term157 = True => @lem6210789)). Qed.
Lemma lem6210792 : term157 = True.
Proof. exact (EQ_MP (@lem6210791) (@lem6210789)). Qed.
Lemma lem6210793 : term156 = True.
Proof. exact (TRANS (@lem6210788) (@lem6210792)). Qed.
Lemma lem6210794 : True = term156.
Proof. exact (SYM (@lem6210793)). Qed.
Lemma lem6210795 : term156.
Proof. exact (EQ_MP (@lem6210794) (@lem0)). Qed.
Lemma lem6210796 : term592.
Proof. exact (@lem6210785 (@lem6210795)). Qed.
Lemma lem6210798 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6210799 : term156 = term157.
Proof. exact (@lem6210798 (NUMERAL 0) term6). Qed.
Lemma lem6210800 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6210801 (h1 : term158 = (BIT1 0)) : term157 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6210802 : (term158 = (BIT1 0)) = (term157 = True).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6210801 h1) (fun h1 : term157 = True => @lem6210800)). Qed.
Lemma lem6210803 : term157 = True.
Proof. exact (EQ_MP (@lem6210802) (@lem6210800)). Qed.
Lemma lem6210804 : term156 = True.
Proof. exact (TRANS (@lem6210799) (@lem6210803)). Qed.
Lemma lem6210805 : True = term156.
Proof. exact (SYM (@lem6210804)). Qed.
Lemma lem6210806 : term156.
Proof. exact (EQ_MP (@lem6210805) (@lem0)). Qed.
Lemma lem6210807 : term590 = term593.
Proof. exact (@lem6210796 (@lem6210806)). Qed.
Lemma lem6210809 (m : nat) (n : nat) : (term130 m n) = (term131 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6210810 : term237 = term236.
Proof. exact (@lem6210809 term22 term6). Qed.
Lemma lem6210811 : term35 = term20.
Proof. exact (@lem996237 term20). Qed.
Lemma lem6210812 : (term35 = term20) = (term36 = term22).
Proof. exact (@lem1007663 term20 (BIT1 0) term20). Qed.
Lemma lem6210813 : term36 = term22.
Proof. exact (EQ_MP (@lem6210812) (@lem6210811)). Qed.
Lemma lem6210814 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6210815 : term236 = term90.
Proof. exact (MK_COMB (@lem6210814) (@lem6210813)). Qed.
Lemma lem6210816 : term237 = term90.
Proof. exact (TRANS (@lem6210810) (@lem6210815)). Qed.
Lemma lem6210818 (x : nat) : (term245 x) = term65.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem6210819 : term244 = term65.
Proof. exact (@lem6210818 term6). Qed.
Lemma lem6210820 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem6210821 : term594 = term588.
Proof. exact (MK_COMB (@lem6210820) (@lem6210819)). Qed.
Lemma lem6210822 : term593 = term587.
Proof. exact (MK_COMB (@lem6210821) (@lem6210816)). Qed.
Lemma lem6210824 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6210825 : term587 = term595.
Proof. exact (@lem6210824 (NUMERAL 0) term22). Qed.
Lemma lem6210826 : term596 = term20.
Proof. exact (@lem912803). Qed.
Lemma lem6210827 (h1 : term596 = term20) : term595 = True.
Proof. exact (@lem1009824 (BIT1 0) 0 term20 h1). Qed.
Lemma lem6210828 : (term596 = term20) = (term595 = True).
Proof. exact (prop_ext (fun h1 : term596 = term20 => @lem6210827 h1) (fun h1 : term595 = True => @lem6210826)). Qed.
Lemma lem6210829 : term595 = True.
Proof. exact (EQ_MP (@lem6210828) (@lem6210826)). Qed.
Lemma lem6210830 : term587 = True.
Proof. exact (TRANS (@lem6210825) (@lem6210829)). Qed.
Lemma lem6210831 : term593 = True.
Proof. exact (TRANS (@lem6210822) (@lem6210830)). Qed.
Lemma lem6210832 : term590 = True.
Proof. exact (TRANS (@lem6210807) (@lem6210831)). Qed.
Lemma lem6210833 : term587 = True.
Proof. exact (TRANS (@lem6210784) (@lem6210832)). Qed.
Lemma lem6210834 : term586 = True.
Proof. exact (TRANS (@lem6210775) (@lem6210833)). Qed.
Lemma lem6210835 : True = term586.
Proof. exact (SYM (@lem6210834)). Qed.
Lemma lem6210836 : term586.
Proof. exact (EQ_MP (@lem6210835) (@lem0)). Qed.
Lemma lem6210837 (_79027 : int) (h1 : term1282 _79027) : term1283 _79027.
Proof. exact (conj (@lem6210836) (@lem6210772 _79027 h1)). Qed.
Lemma lem6210839 (x : real) (y : real) : term598 x y.
Proof. exact (proj1 (@lem1988332 x y)). Qed.
Lemma lem6210840 (_79027 : int) : term1284 _79027.
Proof. exact (@lem6210839 term90 (term1199 _79027)). Qed.
Lemma lem6210841 (_79027 : int) (h1 : term1282 _79027) : term1285 _79027.
Proof. exact (@lem6210840 _79027 (@lem6210837 _79027 h1)). Qed.
Lemma lem6210842 (_79027 : int) : (term1286 _79027) = (term1287 _79027).
Proof. exact (@lem1982781 (term93 _79027) term90 term212). Qed.
Lemma lem6210844 (x : nat) : (term121 x) = (term122 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem6210845 : term212 = term215.
Proof. exact (@lem6210844 term22). Qed.
Lemma lem6210847 (x : nat) : (real_of_num x) = (term119 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6210848 : term90 = term204.
Proof. exact (@lem6210847 term22). Qed.
Lemma lem6210849 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem6210850 : term92 = term605.
Proof. exact (MK_COMB (@lem6210849) (@lem6210848)). Qed.
Lemma lem6210851 : term623 = term624.
Proof. exact (MK_COMB (@lem6210850) (@lem6210845)). Qed.
Lemma lem6210852 : term624 = term625.
Proof. exact (@lem1981613 term90 term212 term102 term102). Qed.
Lemma lem6210854 (m : nat) (n : nat) : (term130 m n) = (term131 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6210855 : term132 = term133.
Proof. exact (@lem6210854 term6 term6). Qed.
Lemma lem6210856 : (term134 = (BIT1 0)) = (term135 = term6).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6210857 : term135 = term6.
Proof. exact (EQ_MP (@lem6210856) (@lem940073)). Qed.
Lemma lem6210858 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6210859 : term133 = term102.
Proof. exact (MK_COMB (@lem6210858) (@lem6210857)). Qed.
Lemma lem6210860 : term132 = term102.
Proof. exact (TRANS (@lem6210855) (@lem6210859)). Qed.
Lemma lem6210862 (m : nat) (n : nat) : (term609 m n) = (term193 m n).
Proof. exact (proj2 (@lem1367247 m n)). Qed.
Lemma lem6210863 : term623 = term626.
Proof. exact (@lem6210862 term22 term22). Qed.
Lemma lem6210864 : (term134 = (BIT1 0)) = (term627 = term170).
Proof. exact (@lem940532 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6210865 : term627 = term170.
Proof. exact (EQ_MP (@lem6210864) (@lem940073)). Qed.
Lemma lem6210866 : (term627 = term170) = (term628 = term172).
Proof. exact (@lem1008952 term20 term170). Qed.
Lemma lem6210867 : term628 = term172.
Proof. exact (EQ_MP (@lem6210866) (@lem6210865)). Qed.
Lemma lem6210868 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6210869 : term629 = term154.
Proof. exact (MK_COMB (@lem6210868) (@lem6210867)). Qed.
Lemma lem6210870 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem6210871 : term626 = term198.
Proof. exact (MK_COMB (@lem6210870) (@lem6210869)). Qed.
Lemma lem6210872 : term623 = term198.
Proof. exact (TRANS (@lem6210863) (@lem6210871)). Qed.
Lemma lem6210873 : real_div = real_div.
Proof. exact (eq_refl real_div). Qed.
Lemma lem6210874 : term630 = term200.
Proof. exact (MK_COMB (@lem6210873) (@lem6210872)). Qed.
Lemma lem6210875 : term625 = term201.
Proof. exact (MK_COMB (@lem6210874) (@lem6210860)). Qed.
Lemma lem6210876 : term624 = term201.
Proof. exact (TRANS (@lem6210852) (@lem6210875)). Qed.
Lemma lem6210877 : term623 = term201.
Proof. exact (TRANS (@lem6210851) (@lem6210876)). Qed.
Lemma lem6210879 (x : real) : (term139 x) = x.
Proof. exact (EQ_MP (@lem1982628 x) (@lem1982627 x)). Qed.
Lemma lem6210880 : term201 = term198.
Proof. exact (@lem6210879 term198). Qed.
Lemma lem6210881 : term623 = term198.
Proof. exact (TRANS (@lem6210877) (@lem6210880)). Qed.
Lemma lem6210882 (_79027 : int) : (term637 _79027) = (term638 _79027).
Proof. exact (@lem1982749 term90 term90 (real_of_int _79027)). Qed.
Lemma lem6210884 (x : nat) : (real_of_num x) = (term119 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6210885 : term90 = term204.
Proof. exact (@lem6210884 term22). Qed.
Lemma lem6210887 (x : nat) : (real_of_num x) = (term119 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6210888 : term90 = term204.
Proof. exact (@lem6210887 term22). Qed.
Lemma lem6210889 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem6210890 : term92 = term605.
Proof. exact (MK_COMB (@lem6210889) (@lem6210888)). Qed.
Lemma lem6210891 : term639 = term640.
Proof. exact (MK_COMB (@lem6210890) (@lem6210885)). Qed.
Lemma lem6210892 : term640 = term641.
Proof. exact (@lem1981613 term90 term90 term102 term102). Qed.
Lemma lem6210894 (m : nat) (n : nat) : (term130 m n) = (term131 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6210895 : term132 = term133.
Proof. exact (@lem6210894 term6 term6). Qed.
Lemma lem6210896 : (term134 = (BIT1 0)) = (term135 = term6).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6210897 : term135 = term6.
Proof. exact (EQ_MP (@lem6210896) (@lem940073)). Qed.
Lemma lem6210898 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6210899 : term133 = term102.
Proof. exact (MK_COMB (@lem6210898) (@lem6210897)). Qed.
Lemma lem6210900 : term132 = term102.
Proof. exact (TRANS (@lem6210895) (@lem6210899)). Qed.
Lemma lem6210902 (m : nat) (n : nat) : (term130 m n) = (term131 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6210903 : term639 = term629.
Proof. exact (@lem6210902 term22 term22). Qed.
Lemma lem6210904 : (term134 = (BIT1 0)) = (term627 = term170).
Proof. exact (@lem940532 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6210905 : term627 = term170.
Proof. exact (EQ_MP (@lem6210904) (@lem940073)). Qed.
Lemma lem6210906 : (term627 = term170) = (term628 = term172).
Proof. exact (@lem1008952 term20 term170). Qed.
Lemma lem6210907 : term628 = term172.
Proof. exact (EQ_MP (@lem6210906) (@lem6210905)). Qed.
Lemma lem6210908 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6210909 : term629 = term154.
Proof. exact (MK_COMB (@lem6210908) (@lem6210907)). Qed.
Lemma lem6210910 : term639 = term154.
Proof. exact (TRANS (@lem6210903) (@lem6210909)). Qed.
Lemma lem6210911 : real_div = real_div.
Proof. exact (eq_refl real_div). Qed.
Lemma lem6210912 : term642 = term643.
Proof. exact (MK_COMB (@lem6210911) (@lem6210910)). Qed.
Lemma lem6210913 : term641 = term181.
Proof. exact (MK_COMB (@lem6210912) (@lem6210900)). Qed.
Lemma lem6210914 : term640 = term181.
Proof. exact (TRANS (@lem6210892) (@lem6210913)). Qed.
Lemma lem6210915 : term639 = term181.
Proof. exact (TRANS (@lem6210891) (@lem6210914)). Qed.
Lemma lem6210917 (x : real) : (term139 x) = x.
Proof. exact (EQ_MP (@lem1982628 x) (@lem1982627 x)). Qed.
Lemma lem6210918 : term181 = term154.
Proof. exact (@lem6210917 term154). Qed.
Lemma lem6210919 : term639 = term154.
Proof. exact (TRANS (@lem6210915) (@lem6210918)). Qed.
Lemma lem6210920 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem6210921 : term644 = term174.
Proof. exact (MK_COMB (@lem6210920) (@lem6210919)). Qed.
Lemma lem6210922 (_79027 : int) : (real_of_int _79027) = (real_of_int _79027).
Proof. exact (eq_refl (real_of_int _79027)). Qed.
Lemma lem6210923 (_79027 : int) : (term638 _79027) = (term645 _79027).
Proof. exact (MK_COMB (@lem6210921) (@lem6210922 _79027)). Qed.
Lemma lem6210924 (_79027 : int) : (term637 _79027) = (term645 _79027).
Proof. exact (TRANS (@lem6210882 _79027) (@lem6210923 _79027)). Qed.
Lemma lem6210925 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem6210926 (_79027 : int) : (term646 _79027) = (term647 _79027).
Proof. exact (MK_COMB (@lem6210925) (@lem6210924 _79027)). Qed.
Lemma lem6210927 (_79027 : int) : (term1287 _79027) = (term1288 _79027).
Proof. exact (MK_COMB (@lem6210926 _79027) (@lem6210881)). Qed.
Lemma lem6210928 (_79027 : int) : (term1286 _79027) = (term1288 _79027).
Proof. exact (TRANS (@lem6210842 _79027) (@lem6210927 _79027)). Qed.
Lemma lem6210929 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem6210930 (_79027 : int) : (term1289 _79027) = (term1290 _79027).
Proof. exact (MK_COMB (@lem6210929) (@lem6210928 _79027)). Qed.
Lemma lem6210931 : term65 = term65.
Proof. exact (eq_refl term65). Qed.
Lemma lem6210932 (_79027 : int) : (term1285 _79027) = (term1291 _79027).
Proof. exact (MK_COMB (@lem6210930 _79027) (@lem6210931)). Qed.
Lemma lem6210933 (_79027 : int) (h1 : term1282 _79027) : term1291 _79027.
Proof. exact (EQ_MP (@lem6210932 _79027) (@lem6210841 _79027 h1)). Qed.
Lemma lem6210935 (y : real) (x : real) : (real_gt x y) = (real_lt y x).
Proof. exact (EQ_MP (@lem1980266 y x) (@lem1980265 y x)). Qed.
Lemma lem6210936 : term586 = term587.
Proof. exact (@lem6210935 term65 term90). Qed.
Lemma lem6210938 (x : nat) : (real_of_num x) = (term119 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6210939 : term90 = term204.
Proof. exact (@lem6210938 term22). Qed.
Lemma lem6210941 (x : nat) : (real_of_num x) = (term119 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6210942 : term65 = term120.
Proof. exact (@lem6210941 (NUMERAL 0)). Qed.
Lemma lem6210943 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem6210944 : term588 = term589.
Proof. exact (MK_COMB (@lem6210943) (@lem6210942)). Qed.
Lemma lem6210945 : term587 = term590.
Proof. exact (MK_COMB (@lem6210944) (@lem6210939)). Qed.
Lemma lem6210946 : term591.
Proof. exact (@lem1980255 term65 term102 term90 term102). Qed.
Lemma lem6210948 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6210949 : term156 = term157.
Proof. exact (@lem6210948 (NUMERAL 0) term6). Qed.
Lemma lem6210950 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6210951 (h1 : term158 = (BIT1 0)) : term157 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6210952 : (term158 = (BIT1 0)) = (term157 = True).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6210951 h1) (fun h1 : term157 = True => @lem6210950)). Qed.
Lemma lem6210953 : term157 = True.
Proof. exact (EQ_MP (@lem6210952) (@lem6210950)). Qed.
Lemma lem6210954 : term156 = True.
Proof. exact (TRANS (@lem6210949) (@lem6210953)). Qed.
Lemma lem6210955 : True = term156.
Proof. exact (SYM (@lem6210954)). Qed.
Lemma lem6210956 : term156.
Proof. exact (EQ_MP (@lem6210955) (@lem0)). Qed.
Lemma lem6210957 : term592.
Proof. exact (@lem6210946 (@lem6210956)). Qed.
Lemma lem6210959 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6210960 : term156 = term157.
Proof. exact (@lem6210959 (NUMERAL 0) term6). Qed.
Lemma lem6210961 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6210962 (h1 : term158 = (BIT1 0)) : term157 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6210963 : (term158 = (BIT1 0)) = (term157 = True).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6210962 h1) (fun h1 : term157 = True => @lem6210961)). Qed.
Lemma lem6210964 : term157 = True.
Proof. exact (EQ_MP (@lem6210963) (@lem6210961)). Qed.
Lemma lem6210965 : term156 = True.
Proof. exact (TRANS (@lem6210960) (@lem6210964)). Qed.
Lemma lem6210966 : True = term156.
Proof. exact (SYM (@lem6210965)). Qed.
Lemma lem6210967 : term156.
Proof. exact (EQ_MP (@lem6210966) (@lem0)). Qed.
Lemma lem6210968 : term590 = term593.
Proof. exact (@lem6210957 (@lem6210967)). Qed.
Lemma lem6210970 (m : nat) (n : nat) : (term130 m n) = (term131 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6210971 : term237 = term236.
Proof. exact (@lem6210970 term22 term6). Qed.
Lemma lem6210972 : term35 = term20.
Proof. exact (@lem996237 term20). Qed.
Lemma lem6210973 : (term35 = term20) = (term36 = term22).
Proof. exact (@lem1007663 term20 (BIT1 0) term20). Qed.
Lemma lem6210974 : term36 = term22.
Proof. exact (EQ_MP (@lem6210973) (@lem6210972)). Qed.
Lemma lem6210975 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6210976 : term236 = term90.
Proof. exact (MK_COMB (@lem6210975) (@lem6210974)). Qed.
Lemma lem6210977 : term237 = term90.
Proof. exact (TRANS (@lem6210971) (@lem6210976)). Qed.
Lemma lem6210979 (x : nat) : (term245 x) = term65.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem6210980 : term244 = term65.
Proof. exact (@lem6210979 term6). Qed.
Lemma lem6210981 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem6210982 : term594 = term588.
Proof. exact (MK_COMB (@lem6210981) (@lem6210980)). Qed.
Lemma lem6210983 : term593 = term587.
Proof. exact (MK_COMB (@lem6210982) (@lem6210977)). Qed.
Lemma lem6210985 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6210986 : term587 = term595.
Proof. exact (@lem6210985 (NUMERAL 0) term22). Qed.
Lemma lem6210987 : term596 = term20.
Proof. exact (@lem912803). Qed.
Lemma lem6210988 (h1 : term596 = term20) : term595 = True.
Proof. exact (@lem1009824 (BIT1 0) 0 term20 h1). Qed.
Lemma lem6210989 : (term596 = term20) = (term595 = True).
Proof. exact (prop_ext (fun h1 : term596 = term20 => @lem6210988 h1) (fun h1 : term595 = True => @lem6210987)). Qed.
Lemma lem6210990 : term595 = True.
Proof. exact (EQ_MP (@lem6210989) (@lem6210987)). Qed.
Lemma lem6210991 : term587 = True.
Proof. exact (TRANS (@lem6210986) (@lem6210990)). Qed.
Lemma lem6210992 : term593 = True.
Proof. exact (TRANS (@lem6210983) (@lem6210991)). Qed.
Lemma lem6210993 : term590 = True.
Proof. exact (TRANS (@lem6210968) (@lem6210992)). Qed.
Lemma lem6210994 : term587 = True.
Proof. exact (TRANS (@lem6210945) (@lem6210993)). Qed.
Lemma lem6210995 : term586 = True.
Proof. exact (TRANS (@lem6210936) (@lem6210994)). Qed.
Lemma lem6210996 : True = term586.
Proof. exact (SYM (@lem6210995)). Qed.
Lemma lem6210997 : term586.
Proof. exact (EQ_MP (@lem6210996) (@lem0)). Qed.
Lemma lem6210998 (_79027 : int) (h1 : term1282 _79027) : term1292 _79027.
Proof. exact (conj (@lem6210997) (@lem6210771 _79027 h1)). Qed.
Lemma lem6211000 (x : real) (y : real) : term598 x y.
Proof. exact (proj1 (@lem1988332 x y)). Qed.
Lemma lem6211001 (_79027 : int) : term1293 _79027.
Proof. exact (@lem6211000 term90 (term1233 _79027)). Qed.
Lemma lem6211002 (_79027 : int) (h1 : term1282 _79027) : term1294 _79027.
Proof. exact (@lem6211001 _79027 (@lem6210998 _79027 h1)). Qed.
Lemma lem6211003 (_79027 : int) : (term1295 _79027) = (term1296 _79027).
Proof. exact (@lem1982781 (term218 _79027) term90 term102). Qed.
Lemma lem6211005 (x : nat) : (real_of_num x) = (term119 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6211006 : term102 = term147.
Proof. exact (@lem6211005 term6). Qed.
Lemma lem6211008 (x : nat) : (real_of_num x) = (term119 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6211009 : term90 = term204.
Proof. exact (@lem6211008 term22). Qed.
Lemma lem6211010 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem6211011 : term92 = term605.
Proof. exact (MK_COMB (@lem6211010) (@lem6211009)). Qed.
Lemma lem6211012 : term237 = term816.
Proof. exact (MK_COMB (@lem6211011) (@lem6211006)). Qed.
Lemma lem6211013 : term816 = term817.
Proof. exact (@lem1981613 term90 term102 term102 term102). Qed.
Lemma lem6211015 (m : nat) (n : nat) : (term130 m n) = (term131 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6211016 : term132 = term133.
Proof. exact (@lem6211015 term6 term6). Qed.
Lemma lem6211017 : (term134 = (BIT1 0)) = (term135 = term6).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6211018 : term135 = term6.
Proof. exact (EQ_MP (@lem6211017) (@lem940073)). Qed.
Lemma lem6211019 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6211020 : term133 = term102.
Proof. exact (MK_COMB (@lem6211019) (@lem6211018)). Qed.
Lemma lem6211021 : term132 = term102.
Proof. exact (TRANS (@lem6211016) (@lem6211020)). Qed.
Lemma lem6211023 (m : nat) (n : nat) : (term130 m n) = (term131 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6211024 : term237 = term236.
Proof. exact (@lem6211023 term22 term6). Qed.
Lemma lem6211025 : term35 = term20.
Proof. exact (@lem996237 term20). Qed.
Lemma lem6211026 : (term35 = term20) = (term36 = term22).
Proof. exact (@lem1007663 term20 (BIT1 0) term20). Qed.
Lemma lem6211027 : term36 = term22.
Proof. exact (EQ_MP (@lem6211026) (@lem6211025)). Qed.
Lemma lem6211028 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6211029 : term236 = term90.
Proof. exact (MK_COMB (@lem6211028) (@lem6211027)). Qed.
Lemma lem6211030 : term237 = term90.
Proof. exact (TRANS (@lem6211024) (@lem6211029)). Qed.
Lemma lem6211031 : real_div = real_div.
Proof. exact (eq_refl real_div). Qed.
Lemma lem6211032 : term818 = term819.
Proof. exact (MK_COMB (@lem6211031) (@lem6211030)). Qed.
Lemma lem6211033 : term817 = term204.
Proof. exact (MK_COMB (@lem6211032) (@lem6211021)). Qed.
Lemma lem6211034 : term816 = term204.
Proof. exact (TRANS (@lem6211013) (@lem6211033)). Qed.
Lemma lem6211035 : term237 = term204.
Proof. exact (TRANS (@lem6211012) (@lem6211034)). Qed.
Lemma lem6211037 (x : real) : (term139 x) = x.
Proof. exact (EQ_MP (@lem1982628 x) (@lem1982627 x)). Qed.
Lemma lem6211038 : term204 = term90.
Proof. exact (@lem6211037 term90). Qed.
Lemma lem6211039 : term237 = term90.
Proof. exact (TRANS (@lem6211035) (@lem6211038)). Qed.
Lemma lem6211040 (_79027 : int) : (term621 _79027) = (term622 _79027).
Proof. exact (@lem1982749 term90 term212 (real_of_int _79027)). Qed.
Lemma lem6211042 (x : nat) : (term121 x) = (term122 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem6211043 : term212 = term215.
Proof. exact (@lem6211042 term22). Qed.
Lemma lem6211045 (x : nat) : (real_of_num x) = (term119 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6211046 : term90 = term204.
Proof. exact (@lem6211045 term22). Qed.
Lemma lem6211047 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem6211048 : term92 = term605.
Proof. exact (MK_COMB (@lem6211047) (@lem6211046)). Qed.
Lemma lem6211049 : term623 = term624.
Proof. exact (MK_COMB (@lem6211048) (@lem6211043)). Qed.
Lemma lem6211050 : term624 = term625.
Proof. exact (@lem1981613 term90 term212 term102 term102). Qed.
Lemma lem6211052 (m : nat) (n : nat) : (term130 m n) = (term131 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6211053 : term132 = term133.
Proof. exact (@lem6211052 term6 term6). Qed.
Lemma lem6211054 : (term134 = (BIT1 0)) = (term135 = term6).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6211055 : term135 = term6.
Proof. exact (EQ_MP (@lem6211054) (@lem940073)). Qed.
Lemma lem6211056 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6211057 : term133 = term102.
Proof. exact (MK_COMB (@lem6211056) (@lem6211055)). Qed.
Lemma lem6211058 : term132 = term102.
Proof. exact (TRANS (@lem6211053) (@lem6211057)). Qed.
Lemma lem6211060 (m : nat) (n : nat) : (term609 m n) = (term193 m n).
Proof. exact (proj2 (@lem1367247 m n)). Qed.
Lemma lem6211061 : term623 = term626.
Proof. exact (@lem6211060 term22 term22). Qed.
Lemma lem6211062 : (term134 = (BIT1 0)) = (term627 = term170).
Proof. exact (@lem940532 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6211063 : term627 = term170.
Proof. exact (EQ_MP (@lem6211062) (@lem940073)). Qed.
Lemma lem6211064 : (term627 = term170) = (term628 = term172).
Proof. exact (@lem1008952 term20 term170). Qed.
Lemma lem6211065 : term628 = term172.
Proof. exact (EQ_MP (@lem6211064) (@lem6211063)). Qed.
Lemma lem6211066 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6211067 : term629 = term154.
Proof. exact (MK_COMB (@lem6211066) (@lem6211065)). Qed.
Lemma lem6211068 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem6211069 : term626 = term198.
Proof. exact (MK_COMB (@lem6211068) (@lem6211067)). Qed.
Lemma lem6211070 : term623 = term198.
Proof. exact (TRANS (@lem6211061) (@lem6211069)). Qed.
Lemma lem6211071 : real_div = real_div.
Proof. exact (eq_refl real_div). Qed.
Lemma lem6211072 : term630 = term200.
Proof. exact (MK_COMB (@lem6211071) (@lem6211070)). Qed.
Lemma lem6211073 : term625 = term201.
Proof. exact (MK_COMB (@lem6211072) (@lem6211058)). Qed.
Lemma lem6211074 : term624 = term201.
Proof. exact (TRANS (@lem6211050) (@lem6211073)). Qed.
Lemma lem6211075 : term623 = term201.
Proof. exact (TRANS (@lem6211049) (@lem6211074)). Qed.
Lemma lem6211077 (x : real) : (term139 x) = x.
Proof. exact (EQ_MP (@lem1982628 x) (@lem1982627 x)). Qed.
Lemma lem6211078 : term201 = term198.
Proof. exact (@lem6211077 term198). Qed.
Lemma lem6211079 : term623 = term198.
Proof. exact (TRANS (@lem6211075) (@lem6211078)). Qed.
Lemma lem6211080 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem6211081 : term631 = term632.
Proof. exact (MK_COMB (@lem6211080) (@lem6211079)). Qed.
Lemma lem6211082 (_79027 : int) : (real_of_int _79027) = (real_of_int _79027).
Proof. exact (eq_refl (real_of_int _79027)). Qed.
Lemma lem6211083 (_79027 : int) : (term622 _79027) = (term633 _79027).
Proof. exact (MK_COMB (@lem6211081) (@lem6211082 _79027)). Qed.
Lemma lem6211084 (_79027 : int) : (term621 _79027) = (term633 _79027).
Proof. exact (TRANS (@lem6211040 _79027) (@lem6211083 _79027)). Qed.
Lemma lem6211085 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem6211086 (_79027 : int) : (term634 _79027) = (term635 _79027).
Proof. exact (MK_COMB (@lem6211085) (@lem6211084 _79027)). Qed.
Lemma lem6211087 (_79027 : int) : (term1296 _79027) = (term1297 _79027).
Proof. exact (MK_COMB (@lem6211086 _79027) (@lem6211039)). Qed.
Lemma lem6211088 (_79027 : int) : (term1295 _79027) = (term1297 _79027).
Proof. exact (TRANS (@lem6211003 _79027) (@lem6211087 _79027)). Qed.
Lemma lem6211089 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem6211090 (_79027 : int) : (term1298 _79027) = (term1299 _79027).
Proof. exact (MK_COMB (@lem6211089) (@lem6211088 _79027)). Qed.
Lemma lem6211091 : term65 = term65.
Proof. exact (eq_refl term65). Qed.
Lemma lem6211092 (_79027 : int) : (term1294 _79027) = (term1300 _79027).
Proof. exact (MK_COMB (@lem6211090 _79027) (@lem6211091)). Qed.
Lemma lem6211093 (_79027 : int) (h1 : term1282 _79027) : term1300 _79027.
Proof. exact (EQ_MP (@lem6211092 _79027) (@lem6211002 _79027 h1)). Qed.
Lemma lem6211094 (_79027 : int) (h1 : term1282 _79027) : term1301 _79027.
Proof. exact (conj (@lem6211093 _79027 h1) (@lem6210933 _79027 h1)). Qed.
Lemma lem6211096 (x : real) (y : real) : term665 x y.
Proof. exact (proj1 (@lem1988342 x y)). Qed.
Lemma lem6211097 (_79027 : int) : term1302 _79027.
Proof. exact (@lem6211096 (term1297 _79027) (term1288 _79027)). Qed.
Lemma lem6211098 (_79027 : int) (h1 : term1282 _79027) : term1303 _79027.
Proof. exact (@lem6211097 _79027 (@lem6211094 _79027 h1)). Qed.
Lemma lem6211099 (_79027 : int) : (term1304 _79027) = (term1305 _79027).
Proof. exact (@lem1982753 (term633 _79027) (term645 _79027) term90 term198). Qed.
Lemma lem6211100 (_79027 : int) : (term670 _79027) = (term671 _79027).
Proof. exact (@lem1982711 term198 term154 (real_of_int _79027)). Qed.
Lemma lem6211102 (x : nat) : (real_of_num x) = (term119 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6211103 : term154 = term181.
Proof. exact (@lem6211102 term172). Qed.
Lemma lem6211105 (x : nat) : (term121 x) = (term122 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem6211106 : term198 = term201.
Proof. exact (@lem6211105 term172). Qed.
Lemma lem6211107 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem6211108 : term672 = term673.
Proof. exact (MK_COMB (@lem6211107) (@lem6211106)). Qed.
Lemma lem6211109 : term674 = term675.
Proof. exact (MK_COMB (@lem6211108) (@lem6211103)). Qed.
Lemma lem6211110 : term676.
Proof. exact (@lem1981473 term198 term102 term154 term102 term65 term102). Qed.
Lemma lem6211112 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6211113 : term156 = term157.
Proof. exact (@lem6211112 (NUMERAL 0) term6). Qed.
Lemma lem6211114 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6211115 (h1 : term158 = (BIT1 0)) : term157 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6211116 : (term158 = (BIT1 0)) = (term157 = True).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6211115 h1) (fun h1 : term157 = True => @lem6211114)). Qed.
Lemma lem6211117 : term157 = True.
Proof. exact (EQ_MP (@lem6211116) (@lem6211114)). Qed.
Lemma lem6211118 : term156 = True.
Proof. exact (TRANS (@lem6211113) (@lem6211117)). Qed.
Lemma lem6211119 : True = term156.
Proof. exact (SYM (@lem6211118)). Qed.
Lemma lem6211120 : term156.
Proof. exact (EQ_MP (@lem6211119) (@lem0)). Qed.
Lemma lem6211121 : term677.
Proof. exact (@lem6211110 (@lem6211120)). Qed.
Lemma lem6211123 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6211124 : term156 = term157.
Proof. exact (@lem6211123 (NUMERAL 0) term6). Qed.
Lemma lem6211125 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6211126 (h1 : term158 = (BIT1 0)) : term157 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6211127 : (term158 = (BIT1 0)) = (term157 = True).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6211126 h1) (fun h1 : term157 = True => @lem6211125)). Qed.
Lemma lem6211128 : term157 = True.
Proof. exact (EQ_MP (@lem6211127) (@lem6211125)). Qed.
Lemma lem6211129 : term156 = True.
Proof. exact (TRANS (@lem6211124) (@lem6211128)). Qed.
Lemma lem6211130 : True = term156.
Proof. exact (SYM (@lem6211129)). Qed.
Lemma lem6211131 : term156.
Proof. exact (EQ_MP (@lem6211130) (@lem0)). Qed.
Lemma lem6211132 : term678.
Proof. exact (@lem6211121 (@lem6211131)). Qed.
Lemma lem6211134 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6211135 : term156 = term157.
Proof. exact (@lem6211134 (NUMERAL 0) term6). Qed.
Lemma lem6211136 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6211137 (h1 : term158 = (BIT1 0)) : term157 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6211138 : (term158 = (BIT1 0)) = (term157 = True).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6211137 h1) (fun h1 : term157 = True => @lem6211136)). Qed.
Lemma lem6211139 : term157 = True.
Proof. exact (EQ_MP (@lem6211138) (@lem6211136)). Qed.
Lemma lem6211140 : term156 = True.
Proof. exact (TRANS (@lem6211135) (@lem6211139)). Qed.
Lemma lem6211141 : True = term156.
Proof. exact (SYM (@lem6211140)). Qed.
Lemma lem6211142 : term156.
Proof. exact (EQ_MP (@lem6211141) (@lem0)). Qed.
Lemma lem6211143 : term679.
Proof. exact (@lem6211132 (@lem6211142)). Qed.
Lemma lem6211145 (m : nat) (n : nat) : (term130 m n) = (term131 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6211146 : term176 = term177.
Proof. exact (@lem6211145 term172 term6). Qed.
Lemma lem6211147 : term178 = term170.
Proof. exact (@lem996237 term170). Qed.
Lemma lem6211148 : (term178 = term170) = (term179 = term172).
Proof. exact (@lem1007663 term170 (BIT1 0) term170). Qed.
Lemma lem6211149 : term179 = term172.
Proof. exact (EQ_MP (@lem6211148) (@lem6211147)). Qed.
Lemma lem6211150 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6211151 : term177 = term154.
Proof. exact (MK_COMB (@lem6211150) (@lem6211149)). Qed.
Lemma lem6211152 : term176 = term154.
Proof. exact (TRANS (@lem6211146) (@lem6211151)). Qed.
Lemma lem6211154 (m : nat) (n : nat) : (term192 m n) = (term193 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem6211155 : term257 = term258.
Proof. exact (@lem6211154 term172 term6). Qed.
Lemma lem6211156 : term178 = term170.
Proof. exact (@lem996237 term170). Qed.
Lemma lem6211157 : (term178 = term170) = (term179 = term172).
Proof. exact (@lem1007663 term170 (BIT1 0) term170). Qed.
Lemma lem6211158 : term179 = term172.
Proof. exact (EQ_MP (@lem6211157) (@lem6211156)). Qed.
Lemma lem6211159 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6211160 : term177 = term154.
Proof. exact (MK_COMB (@lem6211159) (@lem6211158)). Qed.
Lemma lem6211161 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem6211162 : term258 = term198.
Proof. exact (MK_COMB (@lem6211161) (@lem6211160)). Qed.
Lemma lem6211163 : term257 = term198.
Proof. exact (TRANS (@lem6211155) (@lem6211162)). Qed.
Lemma lem6211164 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem6211165 : term680 = term672.
Proof. exact (MK_COMB (@lem6211164) (@lem6211163)). Qed.
Lemma lem6211166 : term681 = term674.
Proof. exact (MK_COMB (@lem6211165) (@lem6211152)). Qed.
Lemma lem6211168 (m : nat) : (term682 m) = term65.
Proof. exact (proj1 (@lem1367303 m)). Qed.
Lemma lem6211169 : term674 = term65.
Proof. exact (@lem6211168 term172). Qed.
Lemma lem6211170 : term681 = term65.
Proof. exact (TRANS (@lem6211166) (@lem6211169)). Qed.
Lemma lem6211171 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem6211172 : term683 = term242.
Proof. exact (MK_COMB (@lem6211171) (@lem6211170)). Qed.
Lemma lem6211173 : term102 = term102.
Proof. exact (eq_refl term102). Qed.
Lemma lem6211174 : term684 = term244.
Proof. exact (MK_COMB (@lem6211172) (@lem6211173)). Qed.
Lemma lem6211176 (x : nat) : (term245 x) = term65.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem6211177 : term244 = term65.
Proof. exact (@lem6211176 term6). Qed.
Lemma lem6211178 : term684 = term65.
Proof. exact (TRANS (@lem6211174) (@lem6211177)). Qed.
Lemma lem6211180 (m : nat) (n : nat) : (term130 m n) = (term131 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6211181 : term132 = term133.
Proof. exact (@lem6211180 term6 term6). Qed.
Lemma lem6211182 : (term134 = (BIT1 0)) = (term135 = term6).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6211183 : term135 = term6.
Proof. exact (EQ_MP (@lem6211182) (@lem940073)). Qed.
Lemma lem6211184 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6211185 : term133 = term102.
Proof. exact (MK_COMB (@lem6211184) (@lem6211183)). Qed.
Lemma lem6211186 : term132 = term102.
Proof. exact (TRANS (@lem6211181) (@lem6211185)). Qed.
Lemma lem6211187 : term242 = term242.
Proof. exact (eq_refl term242). Qed.
Lemma lem6211188 : term246 = term244.
Proof. exact (MK_COMB (@lem6211187) (@lem6211186)). Qed.
Lemma lem6211190 (x : nat) : (term245 x) = term65.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem6211191 : term244 = term65.
Proof. exact (@lem6211190 term6). Qed.
Lemma lem6211192 : term246 = term65.
Proof. exact (TRANS (@lem6211188) (@lem6211191)). Qed.
Lemma lem6211193 : term65 = term246.
Proof. exact (SYM (@lem6211192)). Qed.
Lemma lem6211194 : term684 = term246.
Proof. exact (TRANS (@lem6211178) (@lem6211193)). Qed.
Lemma lem6211195 : term675 = term120.
Proof. exact (@lem6211143 (@lem6211194)). Qed.
Lemma lem6211196 : term674 = term120.
Proof. exact (TRANS (@lem6211109) (@lem6211195)). Qed.
Lemma lem6211198 (x : real) : (term139 x) = x.
Proof. exact (EQ_MP (@lem1981475 x) (@lem1981474 x)). Qed.
Lemma lem6211199 : term120 = term65.
Proof. exact (@lem6211198 term65). Qed.
Lemma lem6211200 : term674 = term65.
Proof. exact (TRANS (@lem6211196) (@lem6211199)). Qed.
Lemma lem6211201 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem6211202 : term685 = term242.
Proof. exact (MK_COMB (@lem6211201) (@lem6211200)). Qed.
Lemma lem6211203 (_79027 : int) : (real_of_int _79027) = (real_of_int _79027).
Proof. exact (eq_refl (real_of_int _79027)). Qed.
Lemma lem6211204 (_79027 : int) : (term671 _79027) = (term248 _79027).
Proof. exact (MK_COMB (@lem6211202) (@lem6211203 _79027)). Qed.
Lemma lem6211205 (_79027 : int) : (term670 _79027) = (term248 _79027).
Proof. exact (TRANS (@lem6211100 _79027) (@lem6211204 _79027)). Qed.
Lemma lem6211206 (_79027 : int) : (term248 _79027) = term65.
Proof. exact (@lem1982719 (real_of_int _79027)). Qed.
Lemma lem6211207 (_79027 : int) : (term670 _79027) = term65.
Proof. exact (TRANS (@lem6211205 _79027) (@lem6211206 _79027)). Qed.
Lemma lem6211208 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem6211209 (_79027 : int) : (term686 _79027) = term250.
Proof. exact (MK_COMB (@lem6211208) (@lem6211207 _79027)). Qed.
Lemma lem6211211 (x : nat) : (term121 x) = (term122 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem6211212 : term198 = term201.
Proof. exact (@lem6211211 term172). Qed.
Lemma lem6211214 (x : nat) : (real_of_num x) = (term119 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6211215 : term90 = term204.
Proof. exact (@lem6211214 term22). Qed.
Lemma lem6211216 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem6211217 : term226 = term227.
Proof. exact (MK_COMB (@lem6211216) (@lem6211215)). Qed.
Lemma lem6211218 : term788 = term789.
Proof. exact (MK_COMB (@lem6211217) (@lem6211212)). Qed.
Lemma lem6211219 : term790.
Proof. exact (@lem1981473 term90 term102 term198 term102 term212 term102). Qed.
Lemma lem6211221 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6211222 : term156 = term157.
Proof. exact (@lem6211221 (NUMERAL 0) term6). Qed.
Lemma lem6211223 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6211224 (h1 : term158 = (BIT1 0)) : term157 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6211225 : (term158 = (BIT1 0)) = (term157 = True).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6211224 h1) (fun h1 : term157 = True => @lem6211223)). Qed.
Lemma lem6211226 : term157 = True.
Proof. exact (EQ_MP (@lem6211225) (@lem6211223)). Qed.
Lemma lem6211227 : term156 = True.
Proof. exact (TRANS (@lem6211222) (@lem6211226)). Qed.
Lemma lem6211228 : True = term156.
Proof. exact (SYM (@lem6211227)). Qed.
Lemma lem6211229 : term156.
Proof. exact (EQ_MP (@lem6211228) (@lem0)). Qed.
Lemma lem6211230 : term791.
Proof. exact (@lem6211219 (@lem6211229)). Qed.
Lemma lem6211232 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6211233 : term156 = term157.
Proof. exact (@lem6211232 (NUMERAL 0) term6). Qed.
Lemma lem6211234 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6211235 (h1 : term158 = (BIT1 0)) : term157 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6211236 : (term158 = (BIT1 0)) = (term157 = True).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6211235 h1) (fun h1 : term157 = True => @lem6211234)). Qed.
Lemma lem6211237 : term157 = True.
Proof. exact (EQ_MP (@lem6211236) (@lem6211234)). Qed.
Lemma lem6211238 : term156 = True.
Proof. exact (TRANS (@lem6211233) (@lem6211237)). Qed.
Lemma lem6211239 : True = term156.
Proof. exact (SYM (@lem6211238)). Qed.
Lemma lem6211240 : term156.
Proof. exact (EQ_MP (@lem6211239) (@lem0)). Qed.
Lemma lem6211241 : term792.
Proof. exact (@lem6211230 (@lem6211240)). Qed.
Lemma lem6211243 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6211244 : term156 = term157.
Proof. exact (@lem6211243 (NUMERAL 0) term6). Qed.
Lemma lem6211245 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6211246 (h1 : term158 = (BIT1 0)) : term157 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6211247 : (term158 = (BIT1 0)) = (term157 = True).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6211246 h1) (fun h1 : term157 = True => @lem6211245)). Qed.
Lemma lem6211248 : term157 = True.
Proof. exact (EQ_MP (@lem6211247) (@lem6211245)). Qed.
Lemma lem6211249 : term156 = True.
Proof. exact (TRANS (@lem6211244) (@lem6211248)). Qed.
Lemma lem6211250 : True = term156.
Proof. exact (SYM (@lem6211249)). Qed.
Lemma lem6211251 : term156.
Proof. exact (EQ_MP (@lem6211250) (@lem0)). Qed.
Lemma lem6211252 : term793.
Proof. exact (@lem6211241 (@lem6211251)). Qed.
Lemma lem6211254 (m : nat) (n : nat) : (term192 m n) = (term193 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem6211255 : term257 = term258.
Proof. exact (@lem6211254 term172 term6). Qed.
Lemma lem6211256 : term178 = term170.
Proof. exact (@lem996237 term170). Qed.
Lemma lem6211257 : (term178 = term170) = (term179 = term172).
Proof. exact (@lem1007663 term170 (BIT1 0) term170). Qed.
Lemma lem6211258 : term179 = term172.
Proof. exact (EQ_MP (@lem6211257) (@lem6211256)). Qed.
Lemma lem6211259 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6211260 : term177 = term154.
Proof. exact (MK_COMB (@lem6211259) (@lem6211258)). Qed.
Lemma lem6211261 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem6211262 : term258 = term198.
Proof. exact (MK_COMB (@lem6211261) (@lem6211260)). Qed.
Lemma lem6211263 : term257 = term198.
Proof. exact (TRANS (@lem6211255) (@lem6211262)). Qed.
Lemma lem6211265 (m : nat) (n : nat) : (term130 m n) = (term131 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6211266 : term237 = term236.
Proof. exact (@lem6211265 term22 term6). Qed.
Lemma lem6211267 : term35 = term20.
Proof. exact (@lem996237 term20). Qed.
Lemma lem6211268 : (term35 = term20) = (term36 = term22).
Proof. exact (@lem1007663 term20 (BIT1 0) term20). Qed.
Lemma lem6211269 : term36 = term22.
Proof. exact (EQ_MP (@lem6211268) (@lem6211267)). Qed.
Lemma lem6211270 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6211271 : term236 = term90.
Proof. exact (MK_COMB (@lem6211270) (@lem6211269)). Qed.
Lemma lem6211272 : term237 = term90.
Proof. exact (TRANS (@lem6211266) (@lem6211271)). Qed.
Lemma lem6211273 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem6211274 : term238 = term226.
Proof. exact (MK_COMB (@lem6211273) (@lem6211272)). Qed.
Lemma lem6211275 : term794 = term788.
Proof. exact (MK_COMB (@lem6211274) (@lem6211263)). Qed.
Lemma lem6211278 : term795 = term212.
Proof. exact (@lem1367771 term22 term22). Qed.
Lemma lem6211279 : term796 = term170.
Proof. exact (@lem706951). Qed.
Lemma lem6211280 : (term796 = term170) = (term797 = term172).
Proof. exact (@lem1006570 term20 term20 term170). Qed.
Lemma lem6211281 : term797 = term172.
Proof. exact (EQ_MP (@lem6211280) (@lem6211279)). Qed.
Lemma lem6211282 : term172 = term797.
Proof. exact (SYM (@lem6211281)). Qed.
Lemma lem6211283 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6211284 : term154 = term798.
Proof. exact (MK_COMB (@lem6211283) (@lem6211282)). Qed.
Lemma lem6211285 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem6211286 : term198 = term799.
Proof. exact (MK_COMB (@lem6211285) (@lem6211284)). Qed.
Lemma lem6211287 : term226 = term226.
Proof. exact (eq_refl term226). Qed.
Lemma lem6211288 : term788 = term795.
Proof. exact (MK_COMB (@lem6211287) (@lem6211286)). Qed.
Lemma lem6211289 : term788 = term212.
Proof. exact (TRANS (@lem6211288) (@lem6211278)). Qed.
Lemma lem6211290 : term794 = term212.
Proof. exact (TRANS (@lem6211275) (@lem6211289)). Qed.
Lemma lem6211291 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem6211292 : term800 = term217.
Proof. exact (MK_COMB (@lem6211291) (@lem6211290)). Qed.
Lemma lem6211293 : term102 = term102.
Proof. exact (eq_refl term102). Qed.
Lemma lem6211294 : term801 = term234.
Proof. exact (MK_COMB (@lem6211292) (@lem6211293)). Qed.
Lemma lem6211296 (m : nat) (n : nat) : (term192 m n) = (term193 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem6211297 : term234 = term235.
Proof. exact (@lem6211296 term22 term6). Qed.
Lemma lem6211298 : term35 = term20.
Proof. exact (@lem996237 term20). Qed.
Lemma lem6211299 : (term35 = term20) = (term36 = term22).
Proof. exact (@lem1007663 term20 (BIT1 0) term20). Qed.
Lemma lem6211300 : term36 = term22.
Proof. exact (EQ_MP (@lem6211299) (@lem6211298)). Qed.
Lemma lem6211301 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6211302 : term236 = term90.
Proof. exact (MK_COMB (@lem6211301) (@lem6211300)). Qed.
Lemma lem6211303 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem6211304 : term235 = term212.
Proof. exact (MK_COMB (@lem6211303) (@lem6211302)). Qed.
Lemma lem6211305 : term234 = term212.
Proof. exact (TRANS (@lem6211297) (@lem6211304)). Qed.
Lemma lem6211306 : term801 = term212.
Proof. exact (TRANS (@lem6211294) (@lem6211305)). Qed.
Lemma lem6211308 (m : nat) (n : nat) : (term130 m n) = (term131 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6211309 : term132 = term133.
Proof. exact (@lem6211308 term6 term6). Qed.
Lemma lem6211310 : (term134 = (BIT1 0)) = (term135 = term6).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6211311 : term135 = term6.
Proof. exact (EQ_MP (@lem6211310) (@lem940073)). Qed.
Lemma lem6211312 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6211313 : term133 = term102.
Proof. exact (MK_COMB (@lem6211312) (@lem6211311)). Qed.
Lemma lem6211314 : term132 = term102.
Proof. exact (TRANS (@lem6211309) (@lem6211313)). Qed.
Lemma lem6211315 : term217 = term217.
Proof. exact (eq_refl term217). Qed.
Lemma lem6211316 : term724 = term234.
Proof. exact (MK_COMB (@lem6211315) (@lem6211314)). Qed.
Lemma lem6211318 (m : nat) (n : nat) : (term192 m n) = (term193 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem6211319 : term234 = term235.
Proof. exact (@lem6211318 term22 term6). Qed.
Lemma lem6211320 : term35 = term20.
Proof. exact (@lem996237 term20). Qed.
Lemma lem6211321 : (term35 = term20) = (term36 = term22).
Proof. exact (@lem1007663 term20 (BIT1 0) term20). Qed.
Lemma lem6211322 : term36 = term22.
Proof. exact (EQ_MP (@lem6211321) (@lem6211320)). Qed.
Lemma lem6211323 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6211324 : term236 = term90.
Proof. exact (MK_COMB (@lem6211323) (@lem6211322)). Qed.
Lemma lem6211325 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem6211326 : term235 = term212.
Proof. exact (MK_COMB (@lem6211325) (@lem6211324)). Qed.
Lemma lem6211327 : term234 = term212.
Proof. exact (TRANS (@lem6211319) (@lem6211326)). Qed.
Lemma lem6211328 : term724 = term212.
Proof. exact (TRANS (@lem6211316) (@lem6211327)). Qed.
Lemma lem6211329 : term212 = term724.
Proof. exact (SYM (@lem6211328)). Qed.
Lemma lem6211330 : term801 = term724.
Proof. exact (TRANS (@lem6211306) (@lem6211329)). Qed.
Lemma lem6211331 : term789 = term215.
Proof. exact (@lem6211252 (@lem6211330)). Qed.
Lemma lem6211332 : term788 = term215.
Proof. exact (TRANS (@lem6211218) (@lem6211331)). Qed.
Lemma lem6211334 (x : real) : (term139 x) = x.
Proof. exact (EQ_MP (@lem1981475 x) (@lem1981474 x)). Qed.
Lemma lem6211335 : term215 = term212.
Proof. exact (@lem6211334 term212). Qed.
Lemma lem6211336 : term788 = term212.
Proof. exact (TRANS (@lem6211332) (@lem6211335)). Qed.
Lemma lem6211337 (_79027 : int) : (term1305 _79027) = term725.
Proof. exact (MK_COMB (@lem6211209 _79027) (@lem6211336)). Qed.
Lemma lem6211338 (_79027 : int) : (term1304 _79027) = term725.
Proof. exact (TRANS (@lem6211099 _79027) (@lem6211337 _79027)). Qed.
Lemma lem6211339 : term725 = term212.
Proof. exact (@lem1982721 term212). Qed.
Lemma lem6211340 (_79027 : int) : (term1304 _79027) = term212.
Proof. exact (TRANS (@lem6211338 _79027) (@lem6211339)). Qed.
Lemma lem6211341 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem6211342 (_79027 : int) : (term1306 _79027) = term727.
Proof. exact (MK_COMB (@lem6211341) (@lem6211340 _79027)). Qed.
Lemma lem6211343 : term65 = term65.
Proof. exact (eq_refl term65). Qed.
Lemma lem6211344 (_79027 : int) : (term1303 _79027) = term728.
Proof. exact (MK_COMB (@lem6211342 _79027) (@lem6211343)). Qed.
Lemma lem6211345 (_79027 : int) (h1 : term1282 _79027) : term728.
Proof. exact (EQ_MP (@lem6211344 _79027) (@lem6211098 _79027 h1)). Qed.
Lemma lem6211347 (y : real) (x : real) : (real_ge x y) = (real_le y x).
Proof. exact (EQ_MP (@lem1980260 y x) (@lem1980259 y x)). Qed.
Lemma lem6211348 : term728 = term729.
Proof. exact (@lem6211347 term65 term212). Qed.
Lemma lem6211350 (x : nat) : (term121 x) = (term122 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem6211351 : term212 = term215.
Proof. exact (@lem6211350 term22). Qed.
Lemma lem6211353 (x : nat) : (real_of_num x) = (term119 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6211354 : term65 = term120.
Proof. exact (@lem6211353 (NUMERAL 0)). Qed.
Lemma lem6211355 : real_le = real_le.
Proof. exact (eq_refl real_le). Qed.
Lemma lem6211356 : term67 = term274.
Proof. exact (MK_COMB (@lem6211355) (@lem6211354)). Qed.
Lemma lem6211357 : term729 = term730.
Proof. exact (MK_COMB (@lem6211356) (@lem6211351)). Qed.
Lemma lem6211358 : term731.
Proof. exact (@lem1980026 term65 term102 term212 term102). Qed.
Lemma lem6211360 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6211361 : term156 = term157.
Proof. exact (@lem6211360 (NUMERAL 0) term6). Qed.
Lemma lem6211362 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6211363 (h1 : term158 = (BIT1 0)) : term157 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6211364 : (term158 = (BIT1 0)) = (term157 = True).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6211363 h1) (fun h1 : term157 = True => @lem6211362)). Qed.
Lemma lem6211365 : term157 = True.
Proof. exact (EQ_MP (@lem6211364) (@lem6211362)). Qed.
Lemma lem6211366 : term156 = True.
Proof. exact (TRANS (@lem6211361) (@lem6211365)). Qed.
Lemma lem6211367 : True = term156.
Proof. exact (SYM (@lem6211366)). Qed.
Lemma lem6211368 : term156.
Proof. exact (EQ_MP (@lem6211367) (@lem0)). Qed.
Lemma lem6211369 : term732.
Proof. exact (@lem6211358 (@lem6211368)). Qed.
Lemma lem6211371 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6211372 : term156 = term157.
Proof. exact (@lem6211371 (NUMERAL 0) term6). Qed.
Lemma lem6211373 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6211374 (h1 : term158 = (BIT1 0)) : term157 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6211375 : (term158 = (BIT1 0)) = (term157 = True).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6211374 h1) (fun h1 : term157 = True => @lem6211373)). Qed.
Lemma lem6211376 : term157 = True.
Proof. exact (EQ_MP (@lem6211375) (@lem6211373)). Qed.
Lemma lem6211377 : term156 = True.
Proof. exact (TRANS (@lem6211372) (@lem6211376)). Qed.
Lemma lem6211378 : True = term156.
Proof. exact (SYM (@lem6211377)). Qed.
Lemma lem6211379 : term156.
Proof. exact (EQ_MP (@lem6211378) (@lem0)). Qed.
Lemma lem6211380 : term730 = term733.
Proof. exact (@lem6211369 (@lem6211379)). Qed.
Lemma lem6211382 (m : nat) (n : nat) : (term192 m n) = (term193 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem6211383 : term234 = term235.
Proof. exact (@lem6211382 term22 term6). Qed.
Lemma lem6211384 : term35 = term20.
Proof. exact (@lem996237 term20). Qed.
Lemma lem6211385 : (term35 = term20) = (term36 = term22).
Proof. exact (@lem1007663 term20 (BIT1 0) term20). Qed.
Lemma lem6211386 : term36 = term22.
Proof. exact (EQ_MP (@lem6211385) (@lem6211384)). Qed.
Lemma lem6211387 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6211388 : term236 = term90.
Proof. exact (MK_COMB (@lem6211387) (@lem6211386)). Qed.
Lemma lem6211389 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem6211390 : term235 = term212.
Proof. exact (MK_COMB (@lem6211389) (@lem6211388)). Qed.
Lemma lem6211391 : term234 = term212.
Proof. exact (TRANS (@lem6211383) (@lem6211390)). Qed.
Lemma lem6211393 (x : nat) : (term245 x) = term65.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem6211394 : term244 = term65.
Proof. exact (@lem6211393 term6). Qed.
Lemma lem6211395 : real_le = real_le.
Proof. exact (eq_refl real_le). Qed.
Lemma lem6211396 : term279 = term67.
Proof. exact (MK_COMB (@lem6211395) (@lem6211394)). Qed.
Lemma lem6211397 : term733 = term729.
Proof. exact (MK_COMB (@lem6211396) (@lem6211391)). Qed.
Lemma lem6211399 (m : nat) (n : nat) : (term280 m n) = (term281 m n).
Proof. exact (proj2 (@lem1365406 m n)). Qed.
Lemma lem6211400 : term729 = term734.
Proof. exact (@lem6211399 (NUMERAL 0) term22). Qed.
Lemma lem6211401 : term596 = term20.
Proof. exact (@lem912803). Qed.
Lemma lem6211402 (h1 : term596 = term20) : (term22 = (NUMERAL 0)) = False.
Proof. exact (@lem1013352 (BIT1 0) 0 term20 h1). Qed.
Lemma lem6211403 : (term596 = term20) = ((term22 = (NUMERAL 0)) = False).
Proof. exact (prop_ext (fun h1 : term596 = term20 => @lem6211402 h1) (fun h1 : (term22 = (NUMERAL 0)) = False => @lem6211401)). Qed.
Lemma lem6211404 : (term22 = (NUMERAL 0)) = False.
Proof. exact (EQ_MP (@lem6211403) (@lem6211401)). Qed.
Lemma lem6211405 : ((NUMERAL 0) = (NUMERAL 0)) = True.
Proof. exact (@lem1013364 0). Qed.
Lemma lem6211406 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6211407 : term283 = (and True).
Proof. exact (MK_COMB (@lem6211406) (@lem6211405)). Qed.
Lemma lem6211408 : term734 = (True /\ False).
Proof. exact (MK_COMB (@lem6211407) (@lem6211404)). Qed.
Lemma lem6211410 : (True /\ False) = False.
Proof. exact (proj1 (@lem1365106)). Qed.
Lemma lem6211411 : term734 = False.
Proof. exact (TRANS (@lem6211408) (@lem6211410)). Qed.
Lemma lem6211412 : term729 = False.
Proof. exact (TRANS (@lem6211400) (@lem6211411)). Qed.
Lemma lem6211413 : term733 = False.
Proof. exact (TRANS (@lem6211397) (@lem6211412)). Qed.
Lemma lem6211414 : term730 = False.
Proof. exact (TRANS (@lem6211380) (@lem6211413)). Qed.
Lemma lem6211415 : term729 = False.
Proof. exact (TRANS (@lem6211357) (@lem6211414)). Qed.
Lemma lem6211416 : term728 = False.
Proof. exact (TRANS (@lem6211348) (@lem6211415)). Qed.
Lemma lem6211417 (_79027 : int) (h1 : term1282 _79027) : False.
Proof. exact (EQ_MP (@lem6211416) (@lem6211345 _79027 h1)). Qed.
Lemma lem6211418 (_79027 : int) (h1 : term1274 _79027) : term1274 _79027.
Proof. exact (h1). Qed.
Lemma lem6211419 (_79027 : int) (h1 : term1307 _79027) : term1307 _79027.
Proof. exact (h1). Qed.
Lemma lem6211420 (_79027 : int) (h1 : term1307 _79027) : term1275 _79027.
Proof. exact (proj2 (@lem6211419 _79027 h1)). Qed.
Lemma lem6211421 (_79027 : int) (h1 : term1307 _79027) : term144 _79027.
Proof. exact (proj1 (@lem6211419 _79027 h1)). Qed.
Lemma lem6211423 (_79027 : int) (h1 : term1307 _79027) : term1216 _79027.
Proof. exact (proj1 (@lem6211420 _79027 h1)). Qed.
Lemma lem6211425 (y : real) (x : real) : (real_gt x y) = (real_lt y x).
Proof. exact (EQ_MP (@lem1980266 y x) (@lem1980265 y x)). Qed.
Lemma lem6211426 : term755 = term156.
Proof. exact (@lem6211425 term65 term102). Qed.
Lemma lem6211428 (x : nat) : (real_of_num x) = (term119 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6211429 : term102 = term147.
Proof. exact (@lem6211428 term6). Qed.
Lemma lem6211431 (x : nat) : (real_of_num x) = (term119 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6211432 : term65 = term120.
Proof. exact (@lem6211431 (NUMERAL 0)). Qed.
Lemma lem6211433 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem6211434 : term588 = term589.
Proof. exact (MK_COMB (@lem6211433) (@lem6211432)). Qed.
Lemma lem6211435 : term156 = term756.
Proof. exact (MK_COMB (@lem6211434) (@lem6211429)). Qed.
Lemma lem6211436 : term757.
Proof. exact (@lem1980255 term65 term102 term102 term102). Qed.
Lemma lem6211438 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6211439 : term156 = term157.
Proof. exact (@lem6211438 (NUMERAL 0) term6). Qed.
Lemma lem6211440 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6211441 (h1 : term158 = (BIT1 0)) : term157 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6211442 : (term158 = (BIT1 0)) = (term157 = True).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6211441 h1) (fun h1 : term157 = True => @lem6211440)). Qed.
Lemma lem6211443 : term157 = True.
Proof. exact (EQ_MP (@lem6211442) (@lem6211440)). Qed.
Lemma lem6211444 : term156 = True.
Proof. exact (TRANS (@lem6211439) (@lem6211443)). Qed.
Lemma lem6211445 : True = term156.
Proof. exact (SYM (@lem6211444)). Qed.
Lemma lem6211446 : term156.
Proof. exact (EQ_MP (@lem6211445) (@lem0)). Qed.
Lemma lem6211447 : term758.
Proof. exact (@lem6211436 (@lem6211446)). Qed.
Lemma lem6211449 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6211450 : term156 = term157.
Proof. exact (@lem6211449 (NUMERAL 0) term6). Qed.
Lemma lem6211451 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6211452 (h1 : term158 = (BIT1 0)) : term157 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6211453 : (term158 = (BIT1 0)) = (term157 = True).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6211452 h1) (fun h1 : term157 = True => @lem6211451)). Qed.
Lemma lem6211454 : term157 = True.
Proof. exact (EQ_MP (@lem6211453) (@lem6211451)). Qed.
Lemma lem6211455 : term156 = True.
Proof. exact (TRANS (@lem6211450) (@lem6211454)). Qed.
Lemma lem6211456 : True = term156.
Proof. exact (SYM (@lem6211455)). Qed.
Lemma lem6211457 : term156.
Proof. exact (EQ_MP (@lem6211456) (@lem0)). Qed.
Lemma lem6211458 : term756 = term759.
Proof. exact (@lem6211447 (@lem6211457)). Qed.
Lemma lem6211460 (m : nat) (n : nat) : (term130 m n) = (term131 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6211461 : term132 = term133.
Proof. exact (@lem6211460 term6 term6). Qed.
Lemma lem6211462 : (term134 = (BIT1 0)) = (term135 = term6).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6211463 : term135 = term6.
Proof. exact (EQ_MP (@lem6211462) (@lem940073)). Qed.
Lemma lem6211464 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6211465 : term133 = term102.
Proof. exact (MK_COMB (@lem6211464) (@lem6211463)). Qed.
Lemma lem6211466 : term132 = term102.
Proof. exact (TRANS (@lem6211461) (@lem6211465)). Qed.
Lemma lem6211468 (x : nat) : (term245 x) = term65.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem6211469 : term244 = term65.
Proof. exact (@lem6211468 term6). Qed.
Lemma lem6211470 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem6211471 : term594 = term588.
Proof. exact (MK_COMB (@lem6211470) (@lem6211469)). Qed.
Lemma lem6211472 : term759 = term156.
Proof. exact (MK_COMB (@lem6211471) (@lem6211466)). Qed.
Lemma lem6211474 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6211475 : term156 = term157.
Proof. exact (@lem6211474 (NUMERAL 0) term6). Qed.
Lemma lem6211476 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6211477 (h1 : term158 = (BIT1 0)) : term157 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6211478 : (term158 = (BIT1 0)) = (term157 = True).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6211477 h1) (fun h1 : term157 = True => @lem6211476)). Qed.
Lemma lem6211479 : term157 = True.
Proof. exact (EQ_MP (@lem6211478) (@lem6211476)). Qed.
Lemma lem6211480 : term156 = True.
Proof. exact (TRANS (@lem6211475) (@lem6211479)). Qed.
Lemma lem6211481 : term759 = True.
Proof. exact (TRANS (@lem6211472) (@lem6211480)). Qed.
Lemma lem6211482 : term756 = True.
Proof. exact (TRANS (@lem6211458) (@lem6211481)). Qed.
Lemma lem6211483 : term156 = True.
Proof. exact (TRANS (@lem6211435) (@lem6211482)). Qed.
Lemma lem6211484 : term755 = True.
Proof. exact (TRANS (@lem6211426) (@lem6211483)). Qed.
Lemma lem6211485 : True = term755.
Proof. exact (SYM (@lem6211484)). Qed.
Lemma lem6211486 : term755.
Proof. exact (EQ_MP (@lem6211485) (@lem0)). Qed.
Lemma lem6211487 (_79027 : int) (h1 : term1307 _79027) : term1308 _79027.
Proof. exact (conj (@lem6211486) (@lem6211421 _79027 h1)). Qed.
Lemma lem6211489 (x : real) (y : real) : term598 x y.
Proof. exact (proj1 (@lem1988332 x y)). Qed.
Lemma lem6211490 (_79027 : int) : term1309 _79027.
Proof. exact (@lem6211489 term102 (real_of_int _79027)). Qed.
Lemma lem6211491 (_79027 : int) (h1 : term1307 _79027) : term1310 _79027.
Proof. exact (@lem6211490 _79027 (@lem6211487 _79027 h1)). Qed.
Lemma lem6211492 (_79027 : int) : (term1311 _79027) = (real_of_int _79027).
Proof. exact (@lem1982733 (real_of_int _79027)). Qed.
Lemma lem6211493 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem6211494 (_79027 : int) : (term1312 _79027) = (term143 _79027).
Proof. exact (MK_COMB (@lem6211493) (@lem6211492 _79027)). Qed.
Lemma lem6211495 : term65 = term65.
Proof. exact (eq_refl term65). Qed.
Lemma lem6211496 (_79027 : int) : (term1310 _79027) = (term144 _79027).
Proof. exact (MK_COMB (@lem6211494 _79027) (@lem6211495)). Qed.
Lemma lem6211497 (_79027 : int) (h1 : term1307 _79027) : term144 _79027.
Proof. exact (EQ_MP (@lem6211496 _79027) (@lem6211491 _79027 h1)). Qed.
Lemma lem6211499 (y : real) (x : real) : (real_gt x y) = (real_lt y x).
Proof. exact (EQ_MP (@lem1980266 y x) (@lem1980265 y x)). Qed.
Lemma lem6211500 : term755 = term156.
Proof. exact (@lem6211499 term65 term102). Qed.
Lemma lem6211502 (x : nat) : (real_of_num x) = (term119 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6211503 : term102 = term147.
Proof. exact (@lem6211502 term6). Qed.
Lemma lem6211505 (x : nat) : (real_of_num x) = (term119 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6211506 : term65 = term120.
Proof. exact (@lem6211505 (NUMERAL 0)). Qed.
Lemma lem6211507 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem6211508 : term588 = term589.
Proof. exact (MK_COMB (@lem6211507) (@lem6211506)). Qed.
Lemma lem6211509 : term156 = term756.
Proof. exact (MK_COMB (@lem6211508) (@lem6211503)). Qed.
Lemma lem6211510 : term757.
Proof. exact (@lem1980255 term65 term102 term102 term102). Qed.
Lemma lem6211512 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6211513 : term156 = term157.
Proof. exact (@lem6211512 (NUMERAL 0) term6). Qed.
Lemma lem6211514 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6211515 (h1 : term158 = (BIT1 0)) : term157 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6211516 : (term158 = (BIT1 0)) = (term157 = True).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6211515 h1) (fun h1 : term157 = True => @lem6211514)). Qed.
Lemma lem6211517 : term157 = True.
Proof. exact (EQ_MP (@lem6211516) (@lem6211514)). Qed.
Lemma lem6211518 : term156 = True.
Proof. exact (TRANS (@lem6211513) (@lem6211517)). Qed.
Lemma lem6211519 : True = term156.
Proof. exact (SYM (@lem6211518)). Qed.
Lemma lem6211520 : term156.
Proof. exact (EQ_MP (@lem6211519) (@lem0)). Qed.
Lemma lem6211521 : term758.
Proof. exact (@lem6211510 (@lem6211520)). Qed.
Lemma lem6211523 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6211524 : term156 = term157.
Proof. exact (@lem6211523 (NUMERAL 0) term6). Qed.
Lemma lem6211525 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6211526 (h1 : term158 = (BIT1 0)) : term157 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6211527 : (term158 = (BIT1 0)) = (term157 = True).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6211526 h1) (fun h1 : term157 = True => @lem6211525)). Qed.
Lemma lem6211528 : term157 = True.
Proof. exact (EQ_MP (@lem6211527) (@lem6211525)). Qed.
Lemma lem6211529 : term156 = True.
Proof. exact (TRANS (@lem6211524) (@lem6211528)). Qed.
Lemma lem6211530 : True = term156.
Proof. exact (SYM (@lem6211529)). Qed.
Lemma lem6211531 : term156.
Proof. exact (EQ_MP (@lem6211530) (@lem0)). Qed.
Lemma lem6211532 : term756 = term759.
Proof. exact (@lem6211521 (@lem6211531)). Qed.
Lemma lem6211534 (m : nat) (n : nat) : (term130 m n) = (term131 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6211535 : term132 = term133.
Proof. exact (@lem6211534 term6 term6). Qed.
Lemma lem6211536 : (term134 = (BIT1 0)) = (term135 = term6).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6211537 : term135 = term6.
Proof. exact (EQ_MP (@lem6211536) (@lem940073)). Qed.
Lemma lem6211538 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6211539 : term133 = term102.
Proof. exact (MK_COMB (@lem6211538) (@lem6211537)). Qed.
Lemma lem6211540 : term132 = term102.
Proof. exact (TRANS (@lem6211535) (@lem6211539)). Qed.
Lemma lem6211542 (x : nat) : (term245 x) = term65.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem6211543 : term244 = term65.
Proof. exact (@lem6211542 term6). Qed.
Lemma lem6211544 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem6211545 : term594 = term588.
Proof. exact (MK_COMB (@lem6211544) (@lem6211543)). Qed.
Lemma lem6211546 : term759 = term156.
Proof. exact (MK_COMB (@lem6211545) (@lem6211540)). Qed.
Lemma lem6211548 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6211549 : term156 = term157.
Proof. exact (@lem6211548 (NUMERAL 0) term6). Qed.
Lemma lem6211550 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6211551 (h1 : term158 = (BIT1 0)) : term157 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6211552 : (term158 = (BIT1 0)) = (term157 = True).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6211551 h1) (fun h1 : term157 = True => @lem6211550)). Qed.
Lemma lem6211553 : term157 = True.
Proof. exact (EQ_MP (@lem6211552) (@lem6211550)). Qed.
Lemma lem6211554 : term156 = True.
Proof. exact (TRANS (@lem6211549) (@lem6211553)). Qed.
Lemma lem6211555 : term759 = True.
Proof. exact (TRANS (@lem6211546) (@lem6211554)). Qed.
Lemma lem6211556 : term756 = True.
Proof. exact (TRANS (@lem6211532) (@lem6211555)). Qed.
Lemma lem6211557 : term156 = True.
Proof. exact (TRANS (@lem6211509) (@lem6211556)). Qed.
Lemma lem6211558 : term755 = True.
Proof. exact (TRANS (@lem6211500) (@lem6211557)). Qed.
Lemma lem6211559 : True = term755.
Proof. exact (SYM (@lem6211558)). Qed.
Lemma lem6211560 : term755.
Proof. exact (EQ_MP (@lem6211559) (@lem0)). Qed.
Lemma lem6211561 (_79027 : int) (h1 : term1307 _79027) : term1313 _79027.
Proof. exact (conj (@lem6211560) (@lem6211423 _79027 h1)). Qed.
Lemma lem6211563 (x : real) (y : real) : term598 x y.
Proof. exact (proj1 (@lem1988332 x y)). Qed.
Lemma lem6211564 (_79027 : int) : term1314 _79027.
Proof. exact (@lem6211563 term102 (term1212 _79027)). Qed.
Lemma lem6211565 (_79027 : int) (h1 : term1307 _79027) : term1315 _79027.
Proof. exact (@lem6211564 _79027 (@lem6211561 _79027 h1)). Qed.
Lemma lem6211566 (_79027 : int) : (term1316 _79027) = (term1212 _79027).
Proof. exact (@lem1982733 (term1212 _79027)). Qed.
Lemma lem6211567 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem6211568 (_79027 : int) : (term1317 _79027) = (term1215 _79027).
Proof. exact (MK_COMB (@lem6211567) (@lem6211566 _79027)). Qed.
Lemma lem6211569 : term65 = term65.
Proof. exact (eq_refl term65). Qed.
Lemma lem6211570 (_79027 : int) : (term1315 _79027) = (term1216 _79027).
Proof. exact (MK_COMB (@lem6211568 _79027) (@lem6211569)). Qed.
Lemma lem6211571 (_79027 : int) (h1 : term1307 _79027) : term1216 _79027.
Proof. exact (EQ_MP (@lem6211570 _79027) (@lem6211565 _79027 h1)). Qed.
Lemma lem6211572 (_79027 : int) (h1 : term1307 _79027) : term1318 _79027.
Proof. exact (conj (@lem6211571 _79027 h1) (@lem6211497 _79027 h1)). Qed.
Lemma lem6211574 (x : real) (y : real) : term665 x y.
Proof. exact (proj1 (@lem1988342 x y)). Qed.
Lemma lem6211575 (_79027 : int) : term1319 _79027.
Proof. exact (@lem6211574 (term1212 _79027) (real_of_int _79027)). Qed.
Lemma lem6211576 (_79027 : int) (h1 : term1307 _79027) : term1320 _79027.
Proof. exact (@lem6211575 _79027 (@lem6211572 _79027 h1)). Qed.
Lemma lem6211577 (_79027 : int) : (term1321 _79027) = (term1322 _79027).
Proof. exact (@lem1982759 (term541 _79027) (real_of_int _79027) term123). Qed.
Lemma lem6211578 (_79027 : int) : (term843 _79027) = (term844 _79027).
Proof. exact (@lem1982713 term123 (real_of_int _79027)). Qed.
Lemma lem6211580 (x : nat) : (real_of_num x) = (term119 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6211581 : term102 = term147.
Proof. exact (@lem6211580 term6). Qed.
Lemma lem6211583 (x : nat) : (term121 x) = (term122 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem6211584 : term123 = term124.
Proof. exact (@lem6211583 term6). Qed.
Lemma lem6211585 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem6211586 : term845 = term846.
Proof. exact (MK_COMB (@lem6211585) (@lem6211584)). Qed.
Lemma lem6211587 : term847 = term848.
Proof. exact (MK_COMB (@lem6211586) (@lem6211581)). Qed.
Lemma lem6211588 : term849.
Proof. exact (@lem1981473 term123 term102 term102 term102 term65 term102). Qed.
Lemma lem6211590 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6211591 : term156 = term157.
Proof. exact (@lem6211590 (NUMERAL 0) term6). Qed.
Lemma lem6211592 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6211593 (h1 : term158 = (BIT1 0)) : term157 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6211594 : (term158 = (BIT1 0)) = (term157 = True).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6211593 h1) (fun h1 : term157 = True => @lem6211592)). Qed.
Lemma lem6211595 : term157 = True.
Proof. exact (EQ_MP (@lem6211594) (@lem6211592)). Qed.
Lemma lem6211596 : term156 = True.
Proof. exact (TRANS (@lem6211591) (@lem6211595)). Qed.
Lemma lem6211597 : True = term156.
Proof. exact (SYM (@lem6211596)). Qed.
Lemma lem6211598 : term156.
Proof. exact (EQ_MP (@lem6211597) (@lem0)). Qed.
Lemma lem6211599 : term850.
Proof. exact (@lem6211588 (@lem6211598)). Qed.
Lemma lem6211601 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6211602 : term156 = term157.
Proof. exact (@lem6211601 (NUMERAL 0) term6). Qed.
Lemma lem6211603 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6211604 (h1 : term158 = (BIT1 0)) : term157 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6211605 : (term158 = (BIT1 0)) = (term157 = True).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6211604 h1) (fun h1 : term157 = True => @lem6211603)). Qed.
Lemma lem6211606 : term157 = True.
Proof. exact (EQ_MP (@lem6211605) (@lem6211603)). Qed.
Lemma lem6211607 : term156 = True.
Proof. exact (TRANS (@lem6211602) (@lem6211606)). Qed.
Lemma lem6211608 : True = term156.
Proof. exact (SYM (@lem6211607)). Qed.
Lemma lem6211609 : term156.
Proof. exact (EQ_MP (@lem6211608) (@lem0)). Qed.
Lemma lem6211610 : term851.
Proof. exact (@lem6211599 (@lem6211609)). Qed.
Lemma lem6211612 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6211613 : term156 = term157.
Proof. exact (@lem6211612 (NUMERAL 0) term6). Qed.
Lemma lem6211614 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6211615 (h1 : term158 = (BIT1 0)) : term157 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6211616 : (term158 = (BIT1 0)) = (term157 = True).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6211615 h1) (fun h1 : term157 = True => @lem6211614)). Qed.
Lemma lem6211617 : term157 = True.
Proof. exact (EQ_MP (@lem6211616) (@lem6211614)). Qed.
Lemma lem6211618 : term156 = True.
Proof. exact (TRANS (@lem6211613) (@lem6211617)). Qed.
Lemma lem6211619 : True = term156.
Proof. exact (SYM (@lem6211618)). Qed.
Lemma lem6211620 : term156.
Proof. exact (EQ_MP (@lem6211619) (@lem0)). Qed.
Lemma lem6211621 : term852.
Proof. exact (@lem6211610 (@lem6211620)). Qed.
Lemma lem6211623 (m : nat) (n : nat) : (term130 m n) = (term131 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6211624 : term132 = term133.
Proof. exact (@lem6211623 term6 term6). Qed.
Lemma lem6211625 : (term134 = (BIT1 0)) = (term135 = term6).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6211626 : term135 = term6.
Proof. exact (EQ_MP (@lem6211625) (@lem940073)). Qed.
Lemma lem6211627 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6211628 : term133 = term102.
Proof. exact (MK_COMB (@lem6211627) (@lem6211626)). Qed.
Lemma lem6211629 : term132 = term102.
Proof. exact (TRANS (@lem6211624) (@lem6211628)). Qed.
Lemma lem6211631 (m : nat) (n : nat) : (term192 m n) = (term193 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem6211632 : term264 = term265.
Proof. exact (@lem6211631 term6 term6). Qed.
Lemma lem6211633 : (term134 = (BIT1 0)) = (term135 = term6).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6211634 : term135 = term6.
Proof. exact (EQ_MP (@lem6211633) (@lem940073)). Qed.
Lemma lem6211635 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6211636 : term133 = term102.
Proof. exact (MK_COMB (@lem6211635) (@lem6211634)). Qed.
Lemma lem6211637 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem6211638 : term265 = term123.
Proof. exact (MK_COMB (@lem6211637) (@lem6211636)). Qed.
Lemma lem6211639 : term264 = term123.
Proof. exact (TRANS (@lem6211632) (@lem6211638)). Qed.
Lemma lem6211640 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem6211641 : term853 = term845.
Proof. exact (MK_COMB (@lem6211640) (@lem6211639)). Qed.
Lemma lem6211642 : term854 = term847.
Proof. exact (MK_COMB (@lem6211641) (@lem6211629)). Qed.
Lemma lem6211644 (m : nat) : (term682 m) = term65.
Proof. exact (proj1 (@lem1367303 m)). Qed.
Lemma lem6211645 : term847 = term65.
Proof. exact (@lem6211644 term6). Qed.
Lemma lem6211646 : term854 = term65.
Proof. exact (TRANS (@lem6211642) (@lem6211645)). Qed.
Lemma lem6211647 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem6211648 : term855 = term242.
Proof. exact (MK_COMB (@lem6211647) (@lem6211646)). Qed.
Lemma lem6211649 : term102 = term102.
Proof. exact (eq_refl term102). Qed.
Lemma lem6211650 : term856 = term244.
Proof. exact (MK_COMB (@lem6211648) (@lem6211649)). Qed.
Lemma lem6211652 (x : nat) : (term245 x) = term65.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem6211653 : term244 = term65.
Proof. exact (@lem6211652 term6). Qed.
Lemma lem6211654 : term856 = term65.
Proof. exact (TRANS (@lem6211650) (@lem6211653)). Qed.
Lemma lem6211656 (m : nat) (n : nat) : (term130 m n) = (term131 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6211657 : term132 = term133.
Proof. exact (@lem6211656 term6 term6). Qed.
Lemma lem6211658 : (term134 = (BIT1 0)) = (term135 = term6).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6211659 : term135 = term6.
Proof. exact (EQ_MP (@lem6211658) (@lem940073)). Qed.
Lemma lem6211660 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6211661 : term133 = term102.
Proof. exact (MK_COMB (@lem6211660) (@lem6211659)). Qed.
Lemma lem6211662 : term132 = term102.
Proof. exact (TRANS (@lem6211657) (@lem6211661)). Qed.
Lemma lem6211663 : term242 = term242.
Proof. exact (eq_refl term242). Qed.
Lemma lem6211664 : term246 = term244.
Proof. exact (MK_COMB (@lem6211663) (@lem6211662)). Qed.
Lemma lem6211666 (x : nat) : (term245 x) = term65.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem6211667 : term244 = term65.
Proof. exact (@lem6211666 term6). Qed.
Lemma lem6211668 : term246 = term65.
Proof. exact (TRANS (@lem6211664) (@lem6211667)). Qed.
Lemma lem6211669 : term65 = term246.
Proof. exact (SYM (@lem6211668)). Qed.
Lemma lem6211670 : term856 = term246.
Proof. exact (TRANS (@lem6211654) (@lem6211669)). Qed.
Lemma lem6211671 : term848 = term120.
Proof. exact (@lem6211621 (@lem6211670)). Qed.
Lemma lem6211672 : term847 = term120.
Proof. exact (TRANS (@lem6211587) (@lem6211671)). Qed.
Lemma lem6211674 (x : real) : (term139 x) = x.
Proof. exact (EQ_MP (@lem1981475 x) (@lem1981474 x)). Qed.
Lemma lem6211675 : term120 = term65.
Proof. exact (@lem6211674 term65). Qed.
Lemma lem6211676 : term847 = term65.
Proof. exact (TRANS (@lem6211672) (@lem6211675)). Qed.
Lemma lem6211677 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem6211678 : term857 = term242.
Proof. exact (MK_COMB (@lem6211677) (@lem6211676)). Qed.
Lemma lem6211679 (_79027 : int) : (real_of_int _79027) = (real_of_int _79027).
Proof. exact (eq_refl (real_of_int _79027)). Qed.
Lemma lem6211680 (_79027 : int) : (term844 _79027) = (term248 _79027).
Proof. exact (MK_COMB (@lem6211678) (@lem6211679 _79027)). Qed.
Lemma lem6211681 (_79027 : int) : (term843 _79027) = (term248 _79027).
Proof. exact (TRANS (@lem6211578 _79027) (@lem6211680 _79027)). Qed.
Lemma lem6211682 (_79027 : int) : (term248 _79027) = term65.
Proof. exact (@lem1982719 (real_of_int _79027)). Qed.
Lemma lem6211683 (_79027 : int) : (term843 _79027) = term65.
Proof. exact (TRANS (@lem6211681 _79027) (@lem6211682 _79027)). Qed.
Lemma lem6211684 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem6211685 (_79027 : int) : (term858 _79027) = term250.
Proof. exact (MK_COMB (@lem6211684) (@lem6211683 _79027)). Qed.
Lemma lem6211686 : term123 = term123.
Proof. exact (eq_refl term123). Qed.
Lemma lem6211687 (_79027 : int) : (term1322 _79027) = term267.
Proof. exact (MK_COMB (@lem6211685 _79027) (@lem6211686)). Qed.
Lemma lem6211688 (_79027 : int) : (term1321 _79027) = term267.
Proof. exact (TRANS (@lem6211577 _79027) (@lem6211687 _79027)). Qed.
Lemma lem6211689 : term267 = term123.
Proof. exact (@lem1982721 term123). Qed.
Lemma lem6211690 (_79027 : int) : (term1321 _79027) = term123.
Proof. exact (TRANS (@lem6211688 _79027) (@lem6211689)). Qed.
Lemma lem6211691 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem6211692 (_79027 : int) : (term1323 _79027) = term269.
Proof. exact (MK_COMB (@lem6211691) (@lem6211690 _79027)). Qed.
Lemma lem6211693 : term65 = term65.
Proof. exact (eq_refl term65). Qed.
Lemma lem6211694 (_79027 : int) : (term1320 _79027) = term270.
Proof. exact (MK_COMB (@lem6211692 _79027) (@lem6211693)). Qed.
Lemma lem6211695 (_79027 : int) (h1 : term1307 _79027) : term270.
Proof. exact (EQ_MP (@lem6211694 _79027) (@lem6211576 _79027 h1)). Qed.
Lemma lem6211697 (y : real) (x : real) : (real_ge x y) = (real_le y x).
Proof. exact (EQ_MP (@lem1980260 y x) (@lem1980259 y x)). Qed.
Lemma lem6211698 : term270 = term273.
Proof. exact (@lem6211697 term65 term123). Qed.
Lemma lem6211700 (x : nat) : (term121 x) = (term122 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem6211701 : term123 = term124.
Proof. exact (@lem6211700 term6). Qed.
Lemma lem6211703 (x : nat) : (real_of_num x) = (term119 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6211704 : term65 = term120.
Proof. exact (@lem6211703 (NUMERAL 0)). Qed.
Lemma lem6211705 : real_le = real_le.
Proof. exact (eq_refl real_le). Qed.
Lemma lem6211706 : term67 = term274.
Proof. exact (MK_COMB (@lem6211705) (@lem6211704)). Qed.
Lemma lem6211707 : term273 = term275.
Proof. exact (MK_COMB (@lem6211706) (@lem6211701)). Qed.
Lemma lem6211708 : term276.
Proof. exact (@lem1980026 term65 term102 term123 term102). Qed.
Lemma lem6211710 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6211711 : term156 = term157.
Proof. exact (@lem6211710 (NUMERAL 0) term6). Qed.
Lemma lem6211712 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6211713 (h1 : term158 = (BIT1 0)) : term157 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6211714 : (term158 = (BIT1 0)) = (term157 = True).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6211713 h1) (fun h1 : term157 = True => @lem6211712)). Qed.
Lemma lem6211715 : term157 = True.
Proof. exact (EQ_MP (@lem6211714) (@lem6211712)). Qed.
Lemma lem6211716 : term156 = True.
Proof. exact (TRANS (@lem6211711) (@lem6211715)). Qed.
Lemma lem6211717 : True = term156.
Proof. exact (SYM (@lem6211716)). Qed.
Lemma lem6211718 : term156.
Proof. exact (EQ_MP (@lem6211717) (@lem0)). Qed.
Lemma lem6211719 : term277.
Proof. exact (@lem6211708 (@lem6211718)). Qed.
Lemma lem6211721 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6211722 : term156 = term157.
Proof. exact (@lem6211721 (NUMERAL 0) term6). Qed.
Lemma lem6211723 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6211724 (h1 : term158 = (BIT1 0)) : term157 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6211725 : (term158 = (BIT1 0)) = (term157 = True).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6211724 h1) (fun h1 : term157 = True => @lem6211723)). Qed.
Lemma lem6211726 : term157 = True.
Proof. exact (EQ_MP (@lem6211725) (@lem6211723)). Qed.
Lemma lem6211727 : term156 = True.
Proof. exact (TRANS (@lem6211722) (@lem6211726)). Qed.
Lemma lem6211728 : True = term156.
Proof. exact (SYM (@lem6211727)). Qed.
Lemma lem6211729 : term156.
Proof. exact (EQ_MP (@lem6211728) (@lem0)). Qed.
Lemma lem6211730 : term275 = term278.
Proof. exact (@lem6211719 (@lem6211729)). Qed.
Lemma lem6211732 (m : nat) (n : nat) : (term192 m n) = (term193 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem6211733 : term264 = term265.
Proof. exact (@lem6211732 term6 term6). Qed.
Lemma lem6211734 : (term134 = (BIT1 0)) = (term135 = term6).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6211735 : term135 = term6.
Proof. exact (EQ_MP (@lem6211734) (@lem940073)). Qed.
Lemma lem6211736 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6211737 : term133 = term102.
Proof. exact (MK_COMB (@lem6211736) (@lem6211735)). Qed.
Lemma lem6211738 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem6211739 : term265 = term123.
Proof. exact (MK_COMB (@lem6211738) (@lem6211737)). Qed.
Lemma lem6211740 : term264 = term123.
Proof. exact (TRANS (@lem6211733) (@lem6211739)). Qed.
Lemma lem6211742 (x : nat) : (term245 x) = term65.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem6211743 : term244 = term65.
Proof. exact (@lem6211742 term6). Qed.
Lemma lem6211744 : real_le = real_le.
Proof. exact (eq_refl real_le). Qed.
Lemma lem6211745 : term279 = term67.
Proof. exact (MK_COMB (@lem6211744) (@lem6211743)). Qed.
Lemma lem6211746 : term278 = term273.
Proof. exact (MK_COMB (@lem6211745) (@lem6211740)). Qed.
Lemma lem6211748 (m : nat) (n : nat) : (term280 m n) = (term281 m n).
Proof. exact (proj2 (@lem1365406 m n)). Qed.
Lemma lem6211749 : term273 = term282.
Proof. exact (@lem6211748 (NUMERAL 0) term6). Qed.
Lemma lem6211750 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6211751 (h1 : term158 = (BIT1 0)) : (term6 = (NUMERAL 0)) = False.
Proof. exact (@lem1013352 0 0 (BIT1 0) h1). Qed.
Lemma lem6211752 : (term158 = (BIT1 0)) = ((term6 = (NUMERAL 0)) = False).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6211751 h1) (fun h1 : (term6 = (NUMERAL 0)) = False => @lem6211750)). Qed.
Lemma lem6211753 : (term6 = (NUMERAL 0)) = False.
Proof. exact (EQ_MP (@lem6211752) (@lem6211750)). Qed.
Lemma lem6211754 : ((NUMERAL 0) = (NUMERAL 0)) = True.
Proof. exact (@lem1013364 0). Qed.
Lemma lem6211755 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6211756 : term283 = (and True).
Proof. exact (MK_COMB (@lem6211755) (@lem6211754)). Qed.
Lemma lem6211757 : term282 = (True /\ False).
Proof. exact (MK_COMB (@lem6211756) (@lem6211753)). Qed.
Lemma lem6211759 : (True /\ False) = False.
Proof. exact (proj1 (@lem1365106)). Qed.
Lemma lem6211760 : term282 = False.
Proof. exact (TRANS (@lem6211757) (@lem6211759)). Qed.
Lemma lem6211761 : term273 = False.
Proof. exact (TRANS (@lem6211749) (@lem6211760)). Qed.
Lemma lem6211762 : term278 = False.
Proof. exact (TRANS (@lem6211746) (@lem6211761)). Qed.
Lemma lem6211763 : term275 = False.
Proof. exact (TRANS (@lem6211730) (@lem6211762)). Qed.
Lemma lem6211764 : term273 = False.
Proof. exact (TRANS (@lem6211707) (@lem6211763)). Qed.
Lemma lem6211765 : term270 = False.
Proof. exact (TRANS (@lem6211698) (@lem6211764)). Qed.
Lemma lem6211766 (_79027 : int) (h1 : term1307 _79027) : False.
Proof. exact (EQ_MP (@lem6211765) (@lem6211695 _79027 h1)). Qed.
Lemma lem6211767 (_79027 : int) (h1 : term1324 _79027) : term1324 _79027.
Proof. exact (h1). Qed.
Lemma lem6211768 (_79027 : int) (h1 : term1324 _79027) : term1276 _79027.
Proof. exact (proj2 (@lem6211767 _79027 h1)). Qed.
Lemma lem6211770 (_79027 : int) (h1 : term1324 _79027) : term1236 _79027.
Proof. exact (proj2 (@lem6211768 _79027 h1)). Qed.
Lemma lem6211771 (_79027 : int) (h1 : term1324 _79027) : term1224 _79027.
Proof. exact (proj1 (@lem6211768 _79027 h1)). Qed.
Lemma lem6211773 (y : real) (x : real) : (real_gt x y) = (real_lt y x).
Proof. exact (EQ_MP (@lem1980266 y x) (@lem1980265 y x)). Qed.
Lemma lem6211774 : term586 = term587.
Proof. exact (@lem6211773 term65 term90). Qed.
Lemma lem6211776 (x : nat) : (real_of_num x) = (term119 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6211777 : term90 = term204.
Proof. exact (@lem6211776 term22). Qed.
Lemma lem6211779 (x : nat) : (real_of_num x) = (term119 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6211780 : term65 = term120.
Proof. exact (@lem6211779 (NUMERAL 0)). Qed.
Lemma lem6211781 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem6211782 : term588 = term589.
Proof. exact (MK_COMB (@lem6211781) (@lem6211780)). Qed.
Lemma lem6211783 : term587 = term590.
Proof. exact (MK_COMB (@lem6211782) (@lem6211777)). Qed.
Lemma lem6211784 : term591.
Proof. exact (@lem1980255 term65 term102 term90 term102). Qed.
Lemma lem6211786 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6211787 : term156 = term157.
Proof. exact (@lem6211786 (NUMERAL 0) term6). Qed.
Lemma lem6211788 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6211789 (h1 : term158 = (BIT1 0)) : term157 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6211790 : (term158 = (BIT1 0)) = (term157 = True).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6211789 h1) (fun h1 : term157 = True => @lem6211788)). Qed.
Lemma lem6211791 : term157 = True.
Proof. exact (EQ_MP (@lem6211790) (@lem6211788)). Qed.
Lemma lem6211792 : term156 = True.
Proof. exact (TRANS (@lem6211787) (@lem6211791)). Qed.
Lemma lem6211793 : True = term156.
Proof. exact (SYM (@lem6211792)). Qed.
Lemma lem6211794 : term156.
Proof. exact (EQ_MP (@lem6211793) (@lem0)). Qed.
Lemma lem6211795 : term592.
Proof. exact (@lem6211784 (@lem6211794)). Qed.
Lemma lem6211797 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6211798 : term156 = term157.
Proof. exact (@lem6211797 (NUMERAL 0) term6). Qed.
Lemma lem6211799 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6211800 (h1 : term158 = (BIT1 0)) : term157 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6211801 : (term158 = (BIT1 0)) = (term157 = True).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6211800 h1) (fun h1 : term157 = True => @lem6211799)). Qed.
Lemma lem6211802 : term157 = True.
Proof. exact (EQ_MP (@lem6211801) (@lem6211799)). Qed.
Lemma lem6211803 : term156 = True.
Proof. exact (TRANS (@lem6211798) (@lem6211802)). Qed.
Lemma lem6211804 : True = term156.
Proof. exact (SYM (@lem6211803)). Qed.
Lemma lem6211805 : term156.
Proof. exact (EQ_MP (@lem6211804) (@lem0)). Qed.
Lemma lem6211806 : term590 = term593.
Proof. exact (@lem6211795 (@lem6211805)). Qed.
Lemma lem6211808 (m : nat) (n : nat) : (term130 m n) = (term131 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6211809 : term237 = term236.
Proof. exact (@lem6211808 term22 term6). Qed.
Lemma lem6211810 : term35 = term20.
Proof. exact (@lem996237 term20). Qed.
Lemma lem6211811 : (term35 = term20) = (term36 = term22).
Proof. exact (@lem1007663 term20 (BIT1 0) term20). Qed.
Lemma lem6211812 : term36 = term22.
Proof. exact (EQ_MP (@lem6211811) (@lem6211810)). Qed.
Lemma lem6211813 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6211814 : term236 = term90.
Proof. exact (MK_COMB (@lem6211813) (@lem6211812)). Qed.
Lemma lem6211815 : term237 = term90.
Proof. exact (TRANS (@lem6211809) (@lem6211814)). Qed.
Lemma lem6211817 (x : nat) : (term245 x) = term65.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem6211818 : term244 = term65.
Proof. exact (@lem6211817 term6). Qed.
Lemma lem6211819 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem6211820 : term594 = term588.
Proof. exact (MK_COMB (@lem6211819) (@lem6211818)). Qed.
Lemma lem6211821 : term593 = term587.
Proof. exact (MK_COMB (@lem6211820) (@lem6211815)). Qed.
Lemma lem6211823 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6211824 : term587 = term595.
Proof. exact (@lem6211823 (NUMERAL 0) term22). Qed.
Lemma lem6211825 : term596 = term20.
Proof. exact (@lem912803). Qed.
Lemma lem6211826 (h1 : term596 = term20) : term595 = True.
Proof. exact (@lem1009824 (BIT1 0) 0 term20 h1). Qed.
Lemma lem6211827 : (term596 = term20) = (term595 = True).
Proof. exact (prop_ext (fun h1 : term596 = term20 => @lem6211826 h1) (fun h1 : term595 = True => @lem6211825)). Qed.
Lemma lem6211828 : term595 = True.
Proof. exact (EQ_MP (@lem6211827) (@lem6211825)). Qed.
Lemma lem6211829 : term587 = True.
Proof. exact (TRANS (@lem6211824) (@lem6211828)). Qed.
Lemma lem6211830 : term593 = True.
Proof. exact (TRANS (@lem6211821) (@lem6211829)). Qed.
Lemma lem6211831 : term590 = True.
Proof. exact (TRANS (@lem6211806) (@lem6211830)). Qed.
Lemma lem6211832 : term587 = True.
Proof. exact (TRANS (@lem6211783) (@lem6211831)). Qed.
Lemma lem6211833 : term586 = True.
Proof. exact (TRANS (@lem6211774) (@lem6211832)). Qed.
Lemma lem6211834 : True = term586.
Proof. exact (SYM (@lem6211833)). Qed.
Lemma lem6211835 : term586.
Proof. exact (EQ_MP (@lem6211834) (@lem0)). Qed.
Lemma lem6211836 (_79027 : int) (h1 : term1324 _79027) : term1325 _79027.
Proof. exact (conj (@lem6211835) (@lem6211771 _79027 h1)). Qed.
Lemma lem6211838 (x : real) (y : real) : term598 x y.
Proof. exact (proj1 (@lem1988332 x y)). Qed.
Lemma lem6211839 (_79027 : int) : term1326 _79027.
Proof. exact (@lem6211838 term90 (term1221 _79027)). Qed.
Lemma lem6211840 (_79027 : int) (h1 : term1324 _79027) : term1327 _79027.
Proof. exact (@lem6211839 _79027 (@lem6211836 _79027 h1)). Qed.
Lemma lem6211841 (_79027 : int) : (term1328 _79027) = (term1329 _79027).
Proof. exact (@lem1982781 (real_of_int _79027) term90 term123). Qed.
Lemma lem6211843 (x : nat) : (term121 x) = (term122 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem6211844 : term123 = term124.
Proof. exact (@lem6211843 term6). Qed.
Lemma lem6211846 (x : nat) : (real_of_num x) = (term119 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6211847 : term90 = term204.
Proof. exact (@lem6211846 term22). Qed.
Lemma lem6211848 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem6211849 : term92 = term605.
Proof. exact (MK_COMB (@lem6211848) (@lem6211847)). Qed.
Lemma lem6211850 : term745 = term746.
Proof. exact (MK_COMB (@lem6211849) (@lem6211844)). Qed.
Lemma lem6211851 : term746 = term747.
Proof. exact (@lem1981613 term90 term123 term102 term102). Qed.
Lemma lem6211853 (m : nat) (n : nat) : (term130 m n) = (term131 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6211854 : term132 = term133.
Proof. exact (@lem6211853 term6 term6). Qed.
Lemma lem6211855 : (term134 = (BIT1 0)) = (term135 = term6).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6211856 : term135 = term6.
Proof. exact (EQ_MP (@lem6211855) (@lem940073)). Qed.
Lemma lem6211857 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6211858 : term133 = term102.
Proof. exact (MK_COMB (@lem6211857) (@lem6211856)). Qed.
Lemma lem6211859 : term132 = term102.
Proof. exact (TRANS (@lem6211854) (@lem6211858)). Qed.
Lemma lem6211861 (m : nat) (n : nat) : (term609 m n) = (term193 m n).
Proof. exact (proj2 (@lem1367247 m n)). Qed.
Lemma lem6211862 : term745 = term235.
Proof. exact (@lem6211861 term22 term6). Qed.
Lemma lem6211863 : term35 = term20.
Proof. exact (@lem996237 term20). Qed.
Lemma lem6211864 : (term35 = term20) = (term36 = term22).
Proof. exact (@lem1007663 term20 (BIT1 0) term20). Qed.
Lemma lem6211865 : term36 = term22.
Proof. exact (EQ_MP (@lem6211864) (@lem6211863)). Qed.
Lemma lem6211866 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6211867 : term236 = term90.
Proof. exact (MK_COMB (@lem6211866) (@lem6211865)). Qed.
Lemma lem6211868 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem6211869 : term235 = term212.
Proof. exact (MK_COMB (@lem6211868) (@lem6211867)). Qed.
Lemma lem6211870 : term745 = term212.
Proof. exact (TRANS (@lem6211862) (@lem6211869)). Qed.
Lemma lem6211871 : real_div = real_div.
Proof. exact (eq_refl real_div). Qed.
Lemma lem6211872 : term748 = term214.
Proof. exact (MK_COMB (@lem6211871) (@lem6211870)). Qed.
Lemma lem6211873 : term747 = term215.
Proof. exact (MK_COMB (@lem6211872) (@lem6211859)). Qed.
Lemma lem6211874 : term746 = term215.
Proof. exact (TRANS (@lem6211851) (@lem6211873)). Qed.
Lemma lem6211875 : term745 = term215.
Proof. exact (TRANS (@lem6211850) (@lem6211874)). Qed.
Lemma lem6211877 (x : real) : (term139 x) = x.
Proof. exact (EQ_MP (@lem1982628 x) (@lem1982627 x)). Qed.
Lemma lem6211878 : term215 = term212.
Proof. exact (@lem6211877 term212). Qed.
Lemma lem6211879 : term745 = term212.
Proof. exact (TRANS (@lem6211875) (@lem6211878)). Qed.
Lemma lem6211882 (_79027 : int) : (term95 _79027) = (term95 _79027).
Proof. exact (eq_refl (term95 _79027)). Qed.
Lemma lem6211883 (_79027 : int) : (term1329 _79027) = (term1199 _79027).
Proof. exact (MK_COMB (@lem6211882 _79027) (@lem6211879)). Qed.
Lemma lem6211884 (_79027 : int) : (term1328 _79027) = (term1199 _79027).
Proof. exact (TRANS (@lem6211841 _79027) (@lem6211883 _79027)). Qed.
Lemma lem6211885 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem6211886 (_79027 : int) : (term1330 _79027) = (term1201 _79027).
Proof. exact (MK_COMB (@lem6211885) (@lem6211884 _79027)). Qed.
Lemma lem6211887 : term65 = term65.
Proof. exact (eq_refl term65). Qed.
Lemma lem6211888 (_79027 : int) : (term1327 _79027) = (term1202 _79027).
Proof. exact (MK_COMB (@lem6211886 _79027) (@lem6211887)). Qed.
Lemma lem6211889 (_79027 : int) (h1 : term1324 _79027) : term1202 _79027.
Proof. exact (EQ_MP (@lem6211888 _79027) (@lem6211840 _79027 h1)). Qed.
Lemma lem6211891 (y : real) (x : real) : (real_gt x y) = (real_lt y x).
Proof. exact (EQ_MP (@lem1980266 y x) (@lem1980265 y x)). Qed.
Lemma lem6211892 : term755 = term156.
Proof. exact (@lem6211891 term65 term102). Qed.
Lemma lem6211894 (x : nat) : (real_of_num x) = (term119 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6211895 : term102 = term147.
Proof. exact (@lem6211894 term6). Qed.
Lemma lem6211897 (x : nat) : (real_of_num x) = (term119 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6211898 : term65 = term120.
Proof. exact (@lem6211897 (NUMERAL 0)). Qed.
Lemma lem6211899 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem6211900 : term588 = term589.
Proof. exact (MK_COMB (@lem6211899) (@lem6211898)). Qed.
Lemma lem6211901 : term156 = term756.
Proof. exact (MK_COMB (@lem6211900) (@lem6211895)). Qed.
Lemma lem6211902 : term757.
Proof. exact (@lem1980255 term65 term102 term102 term102). Qed.
Lemma lem6211904 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6211905 : term156 = term157.
Proof. exact (@lem6211904 (NUMERAL 0) term6). Qed.
Lemma lem6211906 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6211907 (h1 : term158 = (BIT1 0)) : term157 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6211908 : (term158 = (BIT1 0)) = (term157 = True).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6211907 h1) (fun h1 : term157 = True => @lem6211906)). Qed.
Lemma lem6211909 : term157 = True.
Proof. exact (EQ_MP (@lem6211908) (@lem6211906)). Qed.
Lemma lem6211910 : term156 = True.
Proof. exact (TRANS (@lem6211905) (@lem6211909)). Qed.
Lemma lem6211911 : True = term156.
Proof. exact (SYM (@lem6211910)). Qed.
Lemma lem6211912 : term156.
Proof. exact (EQ_MP (@lem6211911) (@lem0)). Qed.
Lemma lem6211913 : term758.
Proof. exact (@lem6211902 (@lem6211912)). Qed.
Lemma lem6211915 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6211916 : term156 = term157.
Proof. exact (@lem6211915 (NUMERAL 0) term6). Qed.
Lemma lem6211917 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6211918 (h1 : term158 = (BIT1 0)) : term157 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6211919 : (term158 = (BIT1 0)) = (term157 = True).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6211918 h1) (fun h1 : term157 = True => @lem6211917)). Qed.
Lemma lem6211920 : term157 = True.
Proof. exact (EQ_MP (@lem6211919) (@lem6211917)). Qed.
Lemma lem6211921 : term156 = True.
Proof. exact (TRANS (@lem6211916) (@lem6211920)). Qed.
Lemma lem6211922 : True = term156.
Proof. exact (SYM (@lem6211921)). Qed.
Lemma lem6211923 : term156.
Proof. exact (EQ_MP (@lem6211922) (@lem0)). Qed.
Lemma lem6211924 : term756 = term759.
Proof. exact (@lem6211913 (@lem6211923)). Qed.
Lemma lem6211926 (m : nat) (n : nat) : (term130 m n) = (term131 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6211927 : term132 = term133.
Proof. exact (@lem6211926 term6 term6). Qed.
Lemma lem6211928 : (term134 = (BIT1 0)) = (term135 = term6).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6211929 : term135 = term6.
Proof. exact (EQ_MP (@lem6211928) (@lem940073)). Qed.
Lemma lem6211930 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6211931 : term133 = term102.
Proof. exact (MK_COMB (@lem6211930) (@lem6211929)). Qed.
Lemma lem6211932 : term132 = term102.
Proof. exact (TRANS (@lem6211927) (@lem6211931)). Qed.
Lemma lem6211934 (x : nat) : (term245 x) = term65.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem6211935 : term244 = term65.
Proof. exact (@lem6211934 term6). Qed.
Lemma lem6211936 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem6211937 : term594 = term588.
Proof. exact (MK_COMB (@lem6211936) (@lem6211935)). Qed.
Lemma lem6211938 : term759 = term156.
Proof. exact (MK_COMB (@lem6211937) (@lem6211932)). Qed.
Lemma lem6211940 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6211941 : term156 = term157.
Proof. exact (@lem6211940 (NUMERAL 0) term6). Qed.
Lemma lem6211942 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6211943 (h1 : term158 = (BIT1 0)) : term157 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6211944 : (term158 = (BIT1 0)) = (term157 = True).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6211943 h1) (fun h1 : term157 = True => @lem6211942)). Qed.
Lemma lem6211945 : term157 = True.
Proof. exact (EQ_MP (@lem6211944) (@lem6211942)). Qed.
Lemma lem6211946 : term156 = True.
Proof. exact (TRANS (@lem6211941) (@lem6211945)). Qed.
Lemma lem6211947 : term759 = True.
Proof. exact (TRANS (@lem6211938) (@lem6211946)). Qed.
Lemma lem6211948 : term756 = True.
Proof. exact (TRANS (@lem6211924) (@lem6211947)). Qed.
Lemma lem6211949 : term156 = True.
Proof. exact (TRANS (@lem6211901) (@lem6211948)). Qed.
Lemma lem6211950 : term755 = True.
Proof. exact (TRANS (@lem6211892) (@lem6211949)). Qed.
Lemma lem6211951 : True = term755.
Proof. exact (SYM (@lem6211950)). Qed.
Lemma lem6211952 : term755.
Proof. exact (EQ_MP (@lem6211951) (@lem0)). Qed.
Lemma lem6211953 (_79027 : int) (h1 : term1324 _79027) : term1331 _79027.
Proof. exact (conj (@lem6211952) (@lem6211770 _79027 h1)). Qed.
Lemma lem6211955 (x : real) (y : real) : term598 x y.
Proof. exact (proj1 (@lem1988332 x y)). Qed.
Lemma lem6211956 (_79027 : int) : term1332 _79027.
Proof. exact (@lem6211955 term102 (term1233 _79027)). Qed.
Lemma lem6211957 (_79027 : int) (h1 : term1324 _79027) : term1333 _79027.
Proof. exact (@lem6211956 _79027 (@lem6211953 _79027 h1)). Qed.
Lemma lem6211958 (_79027 : int) : (term1334 _79027) = (term1233 _79027).
Proof. exact (@lem1982733 (term1233 _79027)). Qed.
Lemma lem6211959 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem6211960 (_79027 : int) : (term1335 _79027) = (term1235 _79027).
Proof. exact (MK_COMB (@lem6211959) (@lem6211958 _79027)). Qed.
Lemma lem6211961 : term65 = term65.
Proof. exact (eq_refl term65). Qed.
Lemma lem6211962 (_79027 : int) : (term1333 _79027) = (term1236 _79027).
Proof. exact (MK_COMB (@lem6211960 _79027) (@lem6211961)). Qed.
Lemma lem6211963 (_79027 : int) (h1 : term1324 _79027) : term1236 _79027.
Proof. exact (EQ_MP (@lem6211962 _79027) (@lem6211957 _79027 h1)). Qed.
Lemma lem6211964 (_79027 : int) (h1 : term1324 _79027) : term1336 _79027.
Proof. exact (conj (@lem6211963 _79027 h1) (@lem6211889 _79027 h1)). Qed.
Lemma lem6211966 (x : real) (y : real) : term665 x y.
Proof. exact (proj1 (@lem1988342 x y)). Qed.
Lemma lem6211967 (_79027 : int) : term1337 _79027.
Proof. exact (@lem6211966 (term1233 _79027) (term1199 _79027)). Qed.
Lemma lem6211968 (_79027 : int) (h1 : term1324 _79027) : term1338 _79027.
Proof. exact (@lem6211967 _79027 (@lem6211964 _79027 h1)). Qed.
Lemma lem6211969 (_79027 : int) : (term1339 _79027) = (term1340 _79027).
Proof. exact (@lem1982753 (term218 _79027) (term93 _79027) term102 term212). Qed.
Lemma lem6211970 (_79027 : int) : (term770 _79027) = (term771 _79027).
Proof. exact (@lem1982711 term212 term90 (real_of_int _79027)). Qed.
Lemma lem6211972 (x : nat) : (real_of_num x) = (term119 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6211973 : term90 = term204.
Proof. exact (@lem6211972 term22). Qed.
Lemma lem6211975 (x : nat) : (term121 x) = (term122 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem6211976 : term212 = term215.
Proof. exact (@lem6211975 term22). Qed.
Lemma lem6211977 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem6211978 : term772 = term773.
Proof. exact (MK_COMB (@lem6211977) (@lem6211976)). Qed.
Lemma lem6211979 : term774 = term775.
Proof. exact (MK_COMB (@lem6211978) (@lem6211973)). Qed.
Lemma lem6211980 : term776.
Proof. exact (@lem1981473 term212 term102 term90 term102 term65 term102). Qed.
Lemma lem6211982 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6211983 : term156 = term157.
Proof. exact (@lem6211982 (NUMERAL 0) term6). Qed.
Lemma lem6211984 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6211985 (h1 : term158 = (BIT1 0)) : term157 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6211986 : (term158 = (BIT1 0)) = (term157 = True).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6211985 h1) (fun h1 : term157 = True => @lem6211984)). Qed.
Lemma lem6211987 : term157 = True.
Proof. exact (EQ_MP (@lem6211986) (@lem6211984)). Qed.
Lemma lem6211988 : term156 = True.
Proof. exact (TRANS (@lem6211983) (@lem6211987)). Qed.
Lemma lem6211989 : True = term156.
Proof. exact (SYM (@lem6211988)). Qed.
Lemma lem6211990 : term156.
Proof. exact (EQ_MP (@lem6211989) (@lem0)). Qed.
Lemma lem6211991 : term777.
Proof. exact (@lem6211980 (@lem6211990)). Qed.
Lemma lem6211993 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6211994 : term156 = term157.
Proof. exact (@lem6211993 (NUMERAL 0) term6). Qed.
Lemma lem6211995 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6211996 (h1 : term158 = (BIT1 0)) : term157 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6211997 : (term158 = (BIT1 0)) = (term157 = True).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6211996 h1) (fun h1 : term157 = True => @lem6211995)). Qed.
Lemma lem6211998 : term157 = True.
Proof. exact (EQ_MP (@lem6211997) (@lem6211995)). Qed.
Lemma lem6211999 : term156 = True.
Proof. exact (TRANS (@lem6211994) (@lem6211998)). Qed.
Lemma lem6212000 : True = term156.
Proof. exact (SYM (@lem6211999)). Qed.
Lemma lem6212001 : term156.
Proof. exact (EQ_MP (@lem6212000) (@lem0)). Qed.
Lemma lem6212002 : term778.
Proof. exact (@lem6211991 (@lem6212001)). Qed.
Lemma lem6212004 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6212005 : term156 = term157.
Proof. exact (@lem6212004 (NUMERAL 0) term6). Qed.
Lemma lem6212006 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6212007 (h1 : term158 = (BIT1 0)) : term157 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6212008 : (term158 = (BIT1 0)) = (term157 = True).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6212007 h1) (fun h1 : term157 = True => @lem6212006)). Qed.
Lemma lem6212009 : term157 = True.
Proof. exact (EQ_MP (@lem6212008) (@lem6212006)). Qed.
Lemma lem6212010 : term156 = True.
Proof. exact (TRANS (@lem6212005) (@lem6212009)). Qed.
Lemma lem6212011 : True = term156.
Proof. exact (SYM (@lem6212010)). Qed.
Lemma lem6212012 : term156.
Proof. exact (EQ_MP (@lem6212011) (@lem0)). Qed.
Lemma lem6212013 : term779.
Proof. exact (@lem6212002 (@lem6212012)). Qed.
Lemma lem6212015 (m : nat) (n : nat) : (term130 m n) = (term131 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6212016 : term237 = term236.
Proof. exact (@lem6212015 term22 term6). Qed.
Lemma lem6212017 : term35 = term20.
Proof. exact (@lem996237 term20). Qed.
Lemma lem6212018 : (term35 = term20) = (term36 = term22).
Proof. exact (@lem1007663 term20 (BIT1 0) term20). Qed.
Lemma lem6212019 : term36 = term22.
Proof. exact (EQ_MP (@lem6212018) (@lem6212017)). Qed.
Lemma lem6212020 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6212021 : term236 = term90.
Proof. exact (MK_COMB (@lem6212020) (@lem6212019)). Qed.
Lemma lem6212022 : term237 = term90.
Proof. exact (TRANS (@lem6212016) (@lem6212021)). Qed.
Lemma lem6212024 (m : nat) (n : nat) : (term192 m n) = (term193 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem6212025 : term234 = term235.
Proof. exact (@lem6212024 term22 term6). Qed.
Lemma lem6212026 : term35 = term20.
Proof. exact (@lem996237 term20). Qed.
Lemma lem6212027 : (term35 = term20) = (term36 = term22).
Proof. exact (@lem1007663 term20 (BIT1 0) term20). Qed.
Lemma lem6212028 : term36 = term22.
Proof. exact (EQ_MP (@lem6212027) (@lem6212026)). Qed.
Lemma lem6212029 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6212030 : term236 = term90.
Proof. exact (MK_COMB (@lem6212029) (@lem6212028)). Qed.
Lemma lem6212031 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem6212032 : term235 = term212.
Proof. exact (MK_COMB (@lem6212031) (@lem6212030)). Qed.
Lemma lem6212033 : term234 = term212.
Proof. exact (TRANS (@lem6212025) (@lem6212032)). Qed.
Lemma lem6212034 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem6212035 : term780 = term772.
Proof. exact (MK_COMB (@lem6212034) (@lem6212033)). Qed.
Lemma lem6212036 : term781 = term774.
Proof. exact (MK_COMB (@lem6212035) (@lem6212022)). Qed.
Lemma lem6212038 (m : nat) : (term682 m) = term65.
Proof. exact (proj1 (@lem1367303 m)). Qed.
Lemma lem6212039 : term774 = term65.
Proof. exact (@lem6212038 term22). Qed.
Lemma lem6212040 : term781 = term65.
Proof. exact (TRANS (@lem6212036) (@lem6212039)). Qed.
Lemma lem6212041 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem6212042 : term782 = term242.
Proof. exact (MK_COMB (@lem6212041) (@lem6212040)). Qed.
Lemma lem6212043 : term102 = term102.
Proof. exact (eq_refl term102). Qed.
Lemma lem6212044 : term783 = term244.
Proof. exact (MK_COMB (@lem6212042) (@lem6212043)). Qed.
Lemma lem6212046 (x : nat) : (term245 x) = term65.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem6212047 : term244 = term65.
Proof. exact (@lem6212046 term6). Qed.
Lemma lem6212048 : term783 = term65.
Proof. exact (TRANS (@lem6212044) (@lem6212047)). Qed.
Lemma lem6212050 (m : nat) (n : nat) : (term130 m n) = (term131 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6212051 : term132 = term133.
Proof. exact (@lem6212050 term6 term6). Qed.
Lemma lem6212052 : (term134 = (BIT1 0)) = (term135 = term6).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6212053 : term135 = term6.
Proof. exact (EQ_MP (@lem6212052) (@lem940073)). Qed.
Lemma lem6212054 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6212055 : term133 = term102.
Proof. exact (MK_COMB (@lem6212054) (@lem6212053)). Qed.
Lemma lem6212056 : term132 = term102.
Proof. exact (TRANS (@lem6212051) (@lem6212055)). Qed.
Lemma lem6212057 : term242 = term242.
Proof. exact (eq_refl term242). Qed.
Lemma lem6212058 : term246 = term244.
Proof. exact (MK_COMB (@lem6212057) (@lem6212056)). Qed.
Lemma lem6212060 (x : nat) : (term245 x) = term65.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem6212061 : term244 = term65.
Proof. exact (@lem6212060 term6). Qed.
Lemma lem6212062 : term246 = term65.
Proof. exact (TRANS (@lem6212058) (@lem6212061)). Qed.
Lemma lem6212063 : term65 = term246.
Proof. exact (SYM (@lem6212062)). Qed.
Lemma lem6212064 : term783 = term246.
Proof. exact (TRANS (@lem6212048) (@lem6212063)). Qed.
Lemma lem6212065 : term775 = term120.
Proof. exact (@lem6212013 (@lem6212064)). Qed.
Lemma lem6212066 : term774 = term120.
Proof. exact (TRANS (@lem6211979) (@lem6212065)). Qed.
Lemma lem6212068 (x : real) : (term139 x) = x.
Proof. exact (EQ_MP (@lem1981475 x) (@lem1981474 x)). Qed.
Lemma lem6212069 : term120 = term65.
Proof. exact (@lem6212068 term65). Qed.
Lemma lem6212070 : term774 = term65.
Proof. exact (TRANS (@lem6212066) (@lem6212069)). Qed.
Lemma lem6212071 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem6212072 : term784 = term242.
Proof. exact (MK_COMB (@lem6212071) (@lem6212070)). Qed.
Lemma lem6212073 (_79027 : int) : (real_of_int _79027) = (real_of_int _79027).
Proof. exact (eq_refl (real_of_int _79027)). Qed.
Lemma lem6212074 (_79027 : int) : (term771 _79027) = (term248 _79027).
Proof. exact (MK_COMB (@lem6212072) (@lem6212073 _79027)). Qed.
Lemma lem6212075 (_79027 : int) : (term770 _79027) = (term248 _79027).
Proof. exact (TRANS (@lem6211970 _79027) (@lem6212074 _79027)). Qed.
Lemma lem6212076 (_79027 : int) : (term248 _79027) = term65.
Proof. exact (@lem1982719 (real_of_int _79027)). Qed.
Lemma lem6212077 (_79027 : int) : (term770 _79027) = term65.
Proof. exact (TRANS (@lem6212075 _79027) (@lem6212076 _79027)). Qed.
Lemma lem6212078 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem6212079 (_79027 : int) : (term785 _79027) = term250.
Proof. exact (MK_COMB (@lem6212078) (@lem6212077 _79027)). Qed.
Lemma lem6212081 (x : nat) : (term121 x) = (term122 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem6212082 : term212 = term215.
Proof. exact (@lem6212081 term22). Qed.
Lemma lem6212084 (x : nat) : (real_of_num x) = (term119 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6212085 : term102 = term147.
Proof. exact (@lem6212084 term6). Qed.
Lemma lem6212086 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem6212087 : term500 = term501.
Proof. exact (MK_COMB (@lem6212086) (@lem6212085)). Qed.
Lemma lem6212088 : term863 = term864.
Proof. exact (MK_COMB (@lem6212087) (@lem6212082)). Qed.
Lemma lem6212089 : term865.
Proof. exact (@lem1981473 term102 term102 term212 term102 term123 term102). Qed.
Lemma lem6212091 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6212092 : term156 = term157.
Proof. exact (@lem6212091 (NUMERAL 0) term6). Qed.
Lemma lem6212093 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6212094 (h1 : term158 = (BIT1 0)) : term157 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6212095 : (term158 = (BIT1 0)) = (term157 = True).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6212094 h1) (fun h1 : term157 = True => @lem6212093)). Qed.
Lemma lem6212096 : term157 = True.
Proof. exact (EQ_MP (@lem6212095) (@lem6212093)). Qed.
Lemma lem6212097 : term156 = True.
Proof. exact (TRANS (@lem6212092) (@lem6212096)). Qed.
Lemma lem6212098 : True = term156.
Proof. exact (SYM (@lem6212097)). Qed.
Lemma lem6212099 : term156.
Proof. exact (EQ_MP (@lem6212098) (@lem0)). Qed.
Lemma lem6212100 : term866.
Proof. exact (@lem6212089 (@lem6212099)). Qed.
Lemma lem6212102 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6212103 : term156 = term157.
Proof. exact (@lem6212102 (NUMERAL 0) term6). Qed.
Lemma lem6212104 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6212105 (h1 : term158 = (BIT1 0)) : term157 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6212106 : (term158 = (BIT1 0)) = (term157 = True).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6212105 h1) (fun h1 : term157 = True => @lem6212104)). Qed.
Lemma lem6212107 : term157 = True.
Proof. exact (EQ_MP (@lem6212106) (@lem6212104)). Qed.
Lemma lem6212108 : term156 = True.
Proof. exact (TRANS (@lem6212103) (@lem6212107)). Qed.
Lemma lem6212109 : True = term156.
Proof. exact (SYM (@lem6212108)). Qed.
Lemma lem6212110 : term156.
Proof. exact (EQ_MP (@lem6212109) (@lem0)). Qed.
Lemma lem6212111 : term867.
Proof. exact (@lem6212100 (@lem6212110)). Qed.
Lemma lem6212113 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6212114 : term156 = term157.
Proof. exact (@lem6212113 (NUMERAL 0) term6). Qed.
Lemma lem6212115 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6212116 (h1 : term158 = (BIT1 0)) : term157 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6212117 : (term158 = (BIT1 0)) = (term157 = True).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6212116 h1) (fun h1 : term157 = True => @lem6212115)). Qed.
Lemma lem6212118 : term157 = True.
Proof. exact (EQ_MP (@lem6212117) (@lem6212115)). Qed.
Lemma lem6212119 : term156 = True.
Proof. exact (TRANS (@lem6212114) (@lem6212118)). Qed.
Lemma lem6212120 : True = term156.
Proof. exact (SYM (@lem6212119)). Qed.
Lemma lem6212121 : term156.
Proof. exact (EQ_MP (@lem6212120) (@lem0)). Qed.
Lemma lem6212122 : term868.
Proof. exact (@lem6212111 (@lem6212121)). Qed.
Lemma lem6212124 (m : nat) (n : nat) : (term192 m n) = (term193 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem6212125 : term234 = term235.
Proof. exact (@lem6212124 term22 term6). Qed.
Lemma lem6212126 : term35 = term20.
Proof. exact (@lem996237 term20). Qed.
Lemma lem6212127 : (term35 = term20) = (term36 = term22).
Proof. exact (@lem1007663 term20 (BIT1 0) term20). Qed.
Lemma lem6212128 : term36 = term22.
Proof. exact (EQ_MP (@lem6212127) (@lem6212126)). Qed.
Lemma lem6212129 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6212130 : term236 = term90.
Proof. exact (MK_COMB (@lem6212129) (@lem6212128)). Qed.
Lemma lem6212131 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem6212132 : term235 = term212.
Proof. exact (MK_COMB (@lem6212131) (@lem6212130)). Qed.
Lemma lem6212133 : term234 = term212.
Proof. exact (TRANS (@lem6212125) (@lem6212132)). Qed.
Lemma lem6212135 (m : nat) (n : nat) : (term130 m n) = (term131 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6212136 : term132 = term133.
Proof. exact (@lem6212135 term6 term6). Qed.
Lemma lem6212137 : (term134 = (BIT1 0)) = (term135 = term6).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6212138 : term135 = term6.
Proof. exact (EQ_MP (@lem6212137) (@lem940073)). Qed.
Lemma lem6212139 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6212140 : term133 = term102.
Proof. exact (MK_COMB (@lem6212139) (@lem6212138)). Qed.
Lemma lem6212141 : term132 = term102.
Proof. exact (TRANS (@lem6212136) (@lem6212140)). Qed.
Lemma lem6212142 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem6212143 : term508 = term500.
Proof. exact (MK_COMB (@lem6212142) (@lem6212141)). Qed.
Lemma lem6212144 : term869 = term863.
Proof. exact (MK_COMB (@lem6212143) (@lem6212133)). Qed.
Lemma lem6212147 : term870 = term123.
Proof. exact (@lem1367771 term6 term6). Qed.
Lemma lem6212148 : term19 = term20.
Proof. exact (@lem706885). Qed.
Lemma lem6212149 : (term19 = term20) = (term21 = term22).
Proof. exact (@lem1006570 (BIT1 0) (BIT1 0) term20). Qed.
Lemma lem6212150 : term21 = term22.
Proof. exact (EQ_MP (@lem6212149) (@lem6212148)). Qed.
Lemma lem6212151 : term22 = term21.
Proof. exact (SYM (@lem6212150)). Qed.
Lemma lem6212152 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6212153 : term90 = term510.
Proof. exact (MK_COMB (@lem6212152) (@lem6212151)). Qed.
Lemma lem6212154 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem6212155 : term212 = term871.
Proof. exact (MK_COMB (@lem6212154) (@lem6212153)). Qed.
Lemma lem6212156 : term500 = term500.
Proof. exact (eq_refl term500). Qed.
Lemma lem6212157 : term863 = term870.
Proof. exact (MK_COMB (@lem6212156) (@lem6212155)). Qed.
Lemma lem6212158 : term863 = term123.
Proof. exact (TRANS (@lem6212157) (@lem6212147)). Qed.
Lemma lem6212159 : term869 = term123.
Proof. exact (TRANS (@lem6212144) (@lem6212158)). Qed.
Lemma lem6212160 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem6212161 : term872 = term125.
Proof. exact (MK_COMB (@lem6212160) (@lem6212159)). Qed.
Lemma lem6212162 : term102 = term102.
Proof. exact (eq_refl term102). Qed.
Lemma lem6212163 : term873 = term264.
Proof. exact (MK_COMB (@lem6212161) (@lem6212162)). Qed.
Lemma lem6212165 (m : nat) (n : nat) : (term192 m n) = (term193 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem6212166 : term264 = term265.
Proof. exact (@lem6212165 term6 term6). Qed.
Lemma lem6212167 : (term134 = (BIT1 0)) = (term135 = term6).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6212168 : term135 = term6.
Proof. exact (EQ_MP (@lem6212167) (@lem940073)). Qed.
Lemma lem6212169 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6212170 : term133 = term102.
Proof. exact (MK_COMB (@lem6212169) (@lem6212168)). Qed.
Lemma lem6212171 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem6212172 : term265 = term123.
Proof. exact (MK_COMB (@lem6212171) (@lem6212170)). Qed.
Lemma lem6212173 : term264 = term123.
Proof. exact (TRANS (@lem6212166) (@lem6212172)). Qed.
Lemma lem6212174 : term873 = term123.
Proof. exact (TRANS (@lem6212163) (@lem6212173)). Qed.
Lemma lem6212176 (m : nat) (n : nat) : (term130 m n) = (term131 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6212177 : term132 = term133.
Proof. exact (@lem6212176 term6 term6). Qed.
Lemma lem6212178 : (term134 = (BIT1 0)) = (term135 = term6).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6212179 : term135 = term6.
Proof. exact (EQ_MP (@lem6212178) (@lem940073)). Qed.
Lemma lem6212180 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6212181 : term133 = term102.
Proof. exact (MK_COMB (@lem6212180) (@lem6212179)). Qed.
Lemma lem6212182 : term132 = term102.
Proof. exact (TRANS (@lem6212177) (@lem6212181)). Qed.
Lemma lem6212183 : term125 = term125.
Proof. exact (eq_refl term125). Qed.
Lemma lem6212184 : term266 = term264.
Proof. exact (MK_COMB (@lem6212183) (@lem6212182)). Qed.
Lemma lem6212186 (m : nat) (n : nat) : (term192 m n) = (term193 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem6212187 : term264 = term265.
Proof. exact (@lem6212186 term6 term6). Qed.
Lemma lem6212188 : (term134 = (BIT1 0)) = (term135 = term6).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6212189 : term135 = term6.
Proof. exact (EQ_MP (@lem6212188) (@lem940073)). Qed.
Lemma lem6212190 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6212191 : term133 = term102.
Proof. exact (MK_COMB (@lem6212190) (@lem6212189)). Qed.
Lemma lem6212192 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem6212193 : term265 = term123.
Proof. exact (MK_COMB (@lem6212192) (@lem6212191)). Qed.
Lemma lem6212194 : term264 = term123.
Proof. exact (TRANS (@lem6212187) (@lem6212193)). Qed.
Lemma lem6212195 : term266 = term123.
Proof. exact (TRANS (@lem6212184) (@lem6212194)). Qed.
Lemma lem6212196 : term123 = term266.
Proof. exact (SYM (@lem6212195)). Qed.
Lemma lem6212197 : term873 = term266.
Proof. exact (TRANS (@lem6212174) (@lem6212196)). Qed.
Lemma lem6212198 : term864 = term124.
Proof. exact (@lem6212122 (@lem6212197)). Qed.
Lemma lem6212199 : term863 = term124.
Proof. exact (TRANS (@lem6212088) (@lem6212198)). Qed.
Lemma lem6212201 (x : real) : (term139 x) = x.
Proof. exact (EQ_MP (@lem1981475 x) (@lem1981474 x)). Qed.
Lemma lem6212202 : term124 = term123.
Proof. exact (@lem6212201 term123). Qed.
Lemma lem6212203 : term863 = term123.
Proof. exact (TRANS (@lem6212199) (@lem6212202)). Qed.
Lemma lem6212204 (_79027 : int) : (term1340 _79027) = term267.
Proof. exact (MK_COMB (@lem6212079 _79027) (@lem6212203)). Qed.
Lemma lem6212205 (_79027 : int) : (term1339 _79027) = term267.
Proof. exact (TRANS (@lem6211969 _79027) (@lem6212204 _79027)). Qed.
Lemma lem6212206 : term267 = term123.
Proof. exact (@lem1982721 term123). Qed.
Lemma lem6212207 (_79027 : int) : (term1339 _79027) = term123.
Proof. exact (TRANS (@lem6212205 _79027) (@lem6212206)). Qed.
Lemma lem6212208 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem6212209 (_79027 : int) : (term1341 _79027) = term269.
Proof. exact (MK_COMB (@lem6212208) (@lem6212207 _79027)). Qed.
Lemma lem6212210 : term65 = term65.
Proof. exact (eq_refl term65). Qed.
Lemma lem6212211 (_79027 : int) : (term1338 _79027) = term270.
Proof. exact (MK_COMB (@lem6212209 _79027) (@lem6212210)). Qed.
Lemma lem6212212 (_79027 : int) (h1 : term1324 _79027) : term270.
Proof. exact (EQ_MP (@lem6212211 _79027) (@lem6211968 _79027 h1)). Qed.
Lemma lem6212214 (y : real) (x : real) : (real_ge x y) = (real_le y x).
Proof. exact (EQ_MP (@lem1980260 y x) (@lem1980259 y x)). Qed.
Lemma lem6212215 : term270 = term273.
Proof. exact (@lem6212214 term65 term123). Qed.
Lemma lem6212217 (x : nat) : (term121 x) = (term122 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem6212218 : term123 = term124.
Proof. exact (@lem6212217 term6). Qed.
Lemma lem6212220 (x : nat) : (real_of_num x) = (term119 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6212221 : term65 = term120.
Proof. exact (@lem6212220 (NUMERAL 0)). Qed.
Lemma lem6212222 : real_le = real_le.
Proof. exact (eq_refl real_le). Qed.
Lemma lem6212223 : term67 = term274.
Proof. exact (MK_COMB (@lem6212222) (@lem6212221)). Qed.
Lemma lem6212224 : term273 = term275.
Proof. exact (MK_COMB (@lem6212223) (@lem6212218)). Qed.
Lemma lem6212225 : term276.
Proof. exact (@lem1980026 term65 term102 term123 term102). Qed.
Lemma lem6212227 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6212228 : term156 = term157.
Proof. exact (@lem6212227 (NUMERAL 0) term6). Qed.
Lemma lem6212229 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6212230 (h1 : term158 = (BIT1 0)) : term157 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6212231 : (term158 = (BIT1 0)) = (term157 = True).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6212230 h1) (fun h1 : term157 = True => @lem6212229)). Qed.
Lemma lem6212232 : term157 = True.
Proof. exact (EQ_MP (@lem6212231) (@lem6212229)). Qed.
Lemma lem6212233 : term156 = True.
Proof. exact (TRANS (@lem6212228) (@lem6212232)). Qed.
Lemma lem6212234 : True = term156.
Proof. exact (SYM (@lem6212233)). Qed.
Lemma lem6212235 : term156.
Proof. exact (EQ_MP (@lem6212234) (@lem0)). Qed.
Lemma lem6212236 : term277.
Proof. exact (@lem6212225 (@lem6212235)). Qed.
Lemma lem6212238 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6212239 : term156 = term157.
Proof. exact (@lem6212238 (NUMERAL 0) term6). Qed.
Lemma lem6212240 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6212241 (h1 : term158 = (BIT1 0)) : term157 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6212242 : (term158 = (BIT1 0)) = (term157 = True).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6212241 h1) (fun h1 : term157 = True => @lem6212240)). Qed.
Lemma lem6212243 : term157 = True.
Proof. exact (EQ_MP (@lem6212242) (@lem6212240)). Qed.
Lemma lem6212244 : term156 = True.
Proof. exact (TRANS (@lem6212239) (@lem6212243)). Qed.
Lemma lem6212245 : True = term156.
Proof. exact (SYM (@lem6212244)). Qed.
Lemma lem6212246 : term156.
Proof. exact (EQ_MP (@lem6212245) (@lem0)). Qed.
Lemma lem6212247 : term275 = term278.
Proof. exact (@lem6212236 (@lem6212246)). Qed.
Lemma lem6212249 (m : nat) (n : nat) : (term192 m n) = (term193 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem6212250 : term264 = term265.
Proof. exact (@lem6212249 term6 term6). Qed.
Lemma lem6212251 : (term134 = (BIT1 0)) = (term135 = term6).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6212252 : term135 = term6.
Proof. exact (EQ_MP (@lem6212251) (@lem940073)). Qed.
Lemma lem6212253 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6212254 : term133 = term102.
Proof. exact (MK_COMB (@lem6212253) (@lem6212252)). Qed.
Lemma lem6212255 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem6212256 : term265 = term123.
Proof. exact (MK_COMB (@lem6212255) (@lem6212254)). Qed.
Lemma lem6212257 : term264 = term123.
Proof. exact (TRANS (@lem6212250) (@lem6212256)). Qed.
Lemma lem6212259 (x : nat) : (term245 x) = term65.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem6212260 : term244 = term65.
Proof. exact (@lem6212259 term6). Qed.
Lemma lem6212261 : real_le = real_le.
Proof. exact (eq_refl real_le). Qed.
Lemma lem6212262 : term279 = term67.
Proof. exact (MK_COMB (@lem6212261) (@lem6212260)). Qed.
Lemma lem6212263 : term278 = term273.
Proof. exact (MK_COMB (@lem6212262) (@lem6212257)). Qed.
Lemma lem6212265 (m : nat) (n : nat) : (term280 m n) = (term281 m n).
Proof. exact (proj2 (@lem1365406 m n)). Qed.
Lemma lem6212266 : term273 = term282.
Proof. exact (@lem6212265 (NUMERAL 0) term6). Qed.
Lemma lem6212267 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6212268 (h1 : term158 = (BIT1 0)) : (term6 = (NUMERAL 0)) = False.
Proof. exact (@lem1013352 0 0 (BIT1 0) h1). Qed.
Lemma lem6212269 : (term158 = (BIT1 0)) = ((term6 = (NUMERAL 0)) = False).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6212268 h1) (fun h1 : (term6 = (NUMERAL 0)) = False => @lem6212267)). Qed.
Lemma lem6212270 : (term6 = (NUMERAL 0)) = False.
Proof. exact (EQ_MP (@lem6212269) (@lem6212267)). Qed.
Lemma lem6212271 : ((NUMERAL 0) = (NUMERAL 0)) = True.
Proof. exact (@lem1013364 0). Qed.
Lemma lem6212272 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6212273 : term283 = (and True).
Proof. exact (MK_COMB (@lem6212272) (@lem6212271)). Qed.
Lemma lem6212274 : term282 = (True /\ False).
Proof. exact (MK_COMB (@lem6212273) (@lem6212270)). Qed.
Lemma lem6212276 : (True /\ False) = False.
Proof. exact (proj1 (@lem1365106)). Qed.
Lemma lem6212277 : term282 = False.
Proof. exact (TRANS (@lem6212274) (@lem6212276)). Qed.
Lemma lem6212278 : term273 = False.
Proof. exact (TRANS (@lem6212266) (@lem6212277)). Qed.
Lemma lem6212279 : term278 = False.
Proof. exact (TRANS (@lem6212263) (@lem6212278)). Qed.
Lemma lem6212280 : term275 = False.
Proof. exact (TRANS (@lem6212247) (@lem6212279)). Qed.
Lemma lem6212281 : term273 = False.
Proof. exact (TRANS (@lem6212224) (@lem6212280)). Qed.
Lemma lem6212282 : term270 = False.
Proof. exact (TRANS (@lem6212215) (@lem6212281)). Qed.
Lemma lem6212283 (_79027 : int) (h1 : term1324 _79027) : False.
Proof. exact (EQ_MP (@lem6212282) (@lem6212212 _79027 h1)). Qed.
Lemma lem6212284 (_79027 : int) (h1 : term1274 _79027) : False.
Proof. exact (or_elim (@lem6211418 _79027 h1) (fun h0 : term1307 _79027 => @lem6211766 _79027 h0) (fun h0 : term1324 _79027 => @lem6212283 _79027 h0)). Qed.
Lemma lem6212285 (_79027 : int) (h1 : term1278 _79027) : False.
Proof. exact (or_elim (@lem6210767 _79027 h1) (fun h0 : term1282 _79027 => @lem6211417 _79027 h0) (fun h0 : term1274 _79027 => @lem6212284 _79027 h0)). Qed.
Lemma lem6212286 (_79027 : int) (h1 : term1269 _79027) : term1269 _79027.
Proof. exact (h1). Qed.
Lemma lem6212287 (_79027 : int) (h1 : term1342 _79027) : term1342 _79027.
Proof. exact (h1). Qed.
Lemma lem6212288 (_79027 : int) (h1 : term1342 _79027) : term1263 _79027.
Proof. exact (proj2 (@lem6212287 _79027 h1)). Qed.
Lemma lem6212290 (_79027 : int) (h1 : term1342 _79027) : (real_of_int _79027) = term65.
Proof. exact (proj2 (@lem6212288 _79027 h1)). Qed.
Lemma lem6212291 (_79027 : int) (h1 : term1342 _79027) : term1202 _79027.
Proof. exact (proj1 (@lem6212288 _79027 h1)). Qed.
Lemma lem6212293 (y : real) (x : real) : (real_gt x y) = (real_lt y x).
Proof. exact (EQ_MP (@lem1980266 y x) (@lem1980265 y x)). Qed.
Lemma lem6212294 : term755 = term156.
Proof. exact (@lem6212293 term65 term102). Qed.
Lemma lem6212296 (x : nat) : (real_of_num x) = (term119 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6212297 : term102 = term147.
Proof. exact (@lem6212296 term6). Qed.
Lemma lem6212299 (x : nat) : (real_of_num x) = (term119 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6212300 : term65 = term120.
Proof. exact (@lem6212299 (NUMERAL 0)). Qed.
Lemma lem6212301 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem6212302 : term588 = term589.
Proof. exact (MK_COMB (@lem6212301) (@lem6212300)). Qed.
Lemma lem6212303 : term156 = term756.
Proof. exact (MK_COMB (@lem6212302) (@lem6212297)). Qed.
Lemma lem6212304 : term757.
Proof. exact (@lem1980255 term65 term102 term102 term102). Qed.
Lemma lem6212306 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6212307 : term156 = term157.
Proof. exact (@lem6212306 (NUMERAL 0) term6). Qed.
Lemma lem6212308 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6212309 (h1 : term158 = (BIT1 0)) : term157 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6212310 : (term158 = (BIT1 0)) = (term157 = True).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6212309 h1) (fun h1 : term157 = True => @lem6212308)). Qed.
Lemma lem6212311 : term157 = True.
Proof. exact (EQ_MP (@lem6212310) (@lem6212308)). Qed.
Lemma lem6212312 : term156 = True.
Proof. exact (TRANS (@lem6212307) (@lem6212311)). Qed.
Lemma lem6212313 : True = term156.
Proof. exact (SYM (@lem6212312)). Qed.
Lemma lem6212314 : term156.
Proof. exact (EQ_MP (@lem6212313) (@lem0)). Qed.
Lemma lem6212315 : term758.
Proof. exact (@lem6212304 (@lem6212314)). Qed.
Lemma lem6212317 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6212318 : term156 = term157.
Proof. exact (@lem6212317 (NUMERAL 0) term6). Qed.
Lemma lem6212319 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6212320 (h1 : term158 = (BIT1 0)) : term157 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6212321 : (term158 = (BIT1 0)) = (term157 = True).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6212320 h1) (fun h1 : term157 = True => @lem6212319)). Qed.
Lemma lem6212322 : term157 = True.
Proof. exact (EQ_MP (@lem6212321) (@lem6212319)). Qed.
Lemma lem6212323 : term156 = True.
Proof. exact (TRANS (@lem6212318) (@lem6212322)). Qed.
Lemma lem6212324 : True = term156.
Proof. exact (SYM (@lem6212323)). Qed.
Lemma lem6212325 : term156.
Proof. exact (EQ_MP (@lem6212324) (@lem0)). Qed.
Lemma lem6212326 : term756 = term759.
Proof. exact (@lem6212315 (@lem6212325)). Qed.
Lemma lem6212328 (m : nat) (n : nat) : (term130 m n) = (term131 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6212329 : term132 = term133.
Proof. exact (@lem6212328 term6 term6). Qed.
Lemma lem6212330 : (term134 = (BIT1 0)) = (term135 = term6).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6212331 : term135 = term6.
Proof. exact (EQ_MP (@lem6212330) (@lem940073)). Qed.
Lemma lem6212332 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6212333 : term133 = term102.
Proof. exact (MK_COMB (@lem6212332) (@lem6212331)). Qed.
Lemma lem6212334 : term132 = term102.
Proof. exact (TRANS (@lem6212329) (@lem6212333)). Qed.
Lemma lem6212336 (x : nat) : (term245 x) = term65.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem6212337 : term244 = term65.
Proof. exact (@lem6212336 term6). Qed.
Lemma lem6212338 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem6212339 : term594 = term588.
Proof. exact (MK_COMB (@lem6212338) (@lem6212337)). Qed.
Lemma lem6212340 : term759 = term156.
Proof. exact (MK_COMB (@lem6212339) (@lem6212334)). Qed.
Lemma lem6212342 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6212343 : term156 = term157.
Proof. exact (@lem6212342 (NUMERAL 0) term6). Qed.
Lemma lem6212344 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6212345 (h1 : term158 = (BIT1 0)) : term157 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6212346 : (term158 = (BIT1 0)) = (term157 = True).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6212345 h1) (fun h1 : term157 = True => @lem6212344)). Qed.
Lemma lem6212347 : term157 = True.
Proof. exact (EQ_MP (@lem6212346) (@lem6212344)). Qed.
Lemma lem6212348 : term156 = True.
Proof. exact (TRANS (@lem6212343) (@lem6212347)). Qed.
Lemma lem6212349 : term759 = True.
Proof. exact (TRANS (@lem6212340) (@lem6212348)). Qed.
Lemma lem6212350 : term756 = True.
Proof. exact (TRANS (@lem6212326) (@lem6212349)). Qed.
Lemma lem6212351 : term156 = True.
Proof. exact (TRANS (@lem6212303) (@lem6212350)). Qed.
Lemma lem6212352 : term755 = True.
Proof. exact (TRANS (@lem6212294) (@lem6212351)). Qed.
Lemma lem6212353 : True = term755.
Proof. exact (SYM (@lem6212352)). Qed.
Lemma lem6212354 : term755.
Proof. exact (EQ_MP (@lem6212353) (@lem0)). Qed.
Lemma lem6212355 (_79027 : int) (h1 : term1342 _79027) : term1343 _79027.
Proof. exact (conj (@lem6212354) (@lem6212291 _79027 h1)). Qed.
Lemma lem6212357 (x : real) (y : real) : term598 x y.
Proof. exact (proj1 (@lem1988332 x y)). Qed.
Lemma lem6212358 (_79027 : int) : term1344 _79027.
Proof. exact (@lem6212357 term102 (term1199 _79027)). Qed.
Lemma lem6212359 (_79027 : int) (h1 : term1342 _79027) : term1345 _79027.
Proof. exact (@lem6212358 _79027 (@lem6212355 _79027 h1)). Qed.
Lemma lem6212360 (_79027 : int) : (term1346 _79027) = (term1199 _79027).
Proof. exact (@lem1982733 (term1199 _79027)). Qed.
Lemma lem6212361 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem6212362 (_79027 : int) : (term1347 _79027) = (term1201 _79027).
Proof. exact (MK_COMB (@lem6212361) (@lem6212360 _79027)). Qed.
Lemma lem6212363 : term65 = term65.
Proof. exact (eq_refl term65). Qed.
Lemma lem6212364 (_79027 : int) : (term1345 _79027) = (term1202 _79027).
Proof. exact (MK_COMB (@lem6212362 _79027) (@lem6212363)). Qed.
Lemma lem6212365 (_79027 : int) (h1 : term1342 _79027) : term1202 _79027.
Proof. exact (EQ_MP (@lem6212364 _79027) (@lem6212359 _79027 h1)). Qed.
Lemma lem6212367 (y : real) : term1348 y.
Proof. exact (EQ_MP (@lem1396750 y) (@lem0)). Qed.
Lemma lem6212368 (_79027 : int) : term1349 _79027.
Proof. exact (@lem6212367 (real_of_int _79027)). Qed.
Lemma lem6212369 (_79027 : int) (h1 : term1342 _79027) : term1350 _79027.
Proof. exact (@lem6212368 _79027 (@lem6212290 _79027 h1)). Qed.
Lemma lem6212370 (_79027 : int) (h1 : term1342 _79027) : term1351 _79027.
Proof. exact (@lem6212369 _79027 h1 term212). Qed.
Lemma lem6212371 (_79027 : int) : (term1351 _79027) = ((term218 _79027) = term65).
Proof. exact (eq_refl (term1351 _79027)). Qed.
Lemma lem6212378 (_79027 : int) (h1 : term1342 _79027) : (term218 _79027) = term65.
Proof. exact (EQ_MP (@lem6212371 _79027) (@lem6212370 _79027 h1)). Qed.
Lemma lem6212379 (_79027 : int) (h1 : term1342 _79027) : term1352 _79027.
Proof. exact (conj (@lem6212378 _79027 h1) (@lem6212365 _79027 h1)). Qed.
Lemma lem6212381 (x : real) (y : real) : term1353 x y.
Proof. exact (proj1 (@lem1988336 x y)). Qed.
Lemma lem6212382 (_79027 : int) : term1354 _79027.
Proof. exact (@lem6212381 (term218 _79027) (term1199 _79027)). Qed.
Lemma lem6212383 (_79027 : int) (h1 : term1342 _79027) : term1355 _79027.
Proof. exact (@lem6212382 _79027 (@lem6212379 _79027 h1)). Qed.
Lemma lem6212384 (_79027 : int) : (term1356 _79027) = (term1357 _79027).
Proof. exact (@lem1982763 (term218 _79027) (term93 _79027) term212). Qed.
Lemma lem6212385 (_79027 : int) : (term770 _79027) = (term771 _79027).
Proof. exact (@lem1982711 term212 term90 (real_of_int _79027)). Qed.
Lemma lem6212387 (x : nat) : (real_of_num x) = (term119 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6212388 : term90 = term204.
Proof. exact (@lem6212387 term22). Qed.
Lemma lem6212390 (x : nat) : (term121 x) = (term122 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem6212391 : term212 = term215.
Proof. exact (@lem6212390 term22). Qed.
Lemma lem6212392 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem6212393 : term772 = term773.
Proof. exact (MK_COMB (@lem6212392) (@lem6212391)). Qed.
Lemma lem6212394 : term774 = term775.
Proof. exact (MK_COMB (@lem6212393) (@lem6212388)). Qed.
Lemma lem6212395 : term776.
Proof. exact (@lem1981473 term212 term102 term90 term102 term65 term102). Qed.
Lemma lem6212397 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6212398 : term156 = term157.
Proof. exact (@lem6212397 (NUMERAL 0) term6). Qed.
Lemma lem6212399 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6212400 (h1 : term158 = (BIT1 0)) : term157 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6212401 : (term158 = (BIT1 0)) = (term157 = True).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6212400 h1) (fun h1 : term157 = True => @lem6212399)). Qed.
Lemma lem6212402 : term157 = True.
Proof. exact (EQ_MP (@lem6212401) (@lem6212399)). Qed.
Lemma lem6212403 : term156 = True.
Proof. exact (TRANS (@lem6212398) (@lem6212402)). Qed.
Lemma lem6212404 : True = term156.
Proof. exact (SYM (@lem6212403)). Qed.
Lemma lem6212405 : term156.
Proof. exact (EQ_MP (@lem6212404) (@lem0)). Qed.
Lemma lem6212406 : term777.
Proof. exact (@lem6212395 (@lem6212405)). Qed.
Lemma lem6212408 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6212409 : term156 = term157.
Proof. exact (@lem6212408 (NUMERAL 0) term6). Qed.
Lemma lem6212410 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6212411 (h1 : term158 = (BIT1 0)) : term157 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6212412 : (term158 = (BIT1 0)) = (term157 = True).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6212411 h1) (fun h1 : term157 = True => @lem6212410)). Qed.
Lemma lem6212413 : term157 = True.
Proof. exact (EQ_MP (@lem6212412) (@lem6212410)). Qed.
Lemma lem6212414 : term156 = True.
Proof. exact (TRANS (@lem6212409) (@lem6212413)). Qed.
Lemma lem6212415 : True = term156.
Proof. exact (SYM (@lem6212414)). Qed.
Lemma lem6212416 : term156.
Proof. exact (EQ_MP (@lem6212415) (@lem0)). Qed.
Lemma lem6212417 : term778.
Proof. exact (@lem6212406 (@lem6212416)). Qed.
Lemma lem6212419 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6212420 : term156 = term157.
Proof. exact (@lem6212419 (NUMERAL 0) term6). Qed.
Lemma lem6212421 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6212422 (h1 : term158 = (BIT1 0)) : term157 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6212423 : (term158 = (BIT1 0)) = (term157 = True).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6212422 h1) (fun h1 : term157 = True => @lem6212421)). Qed.
Lemma lem6212424 : term157 = True.
Proof. exact (EQ_MP (@lem6212423) (@lem6212421)). Qed.
Lemma lem6212425 : term156 = True.
Proof. exact (TRANS (@lem6212420) (@lem6212424)). Qed.
Lemma lem6212426 : True = term156.
Proof. exact (SYM (@lem6212425)). Qed.
Lemma lem6212427 : term156.
Proof. exact (EQ_MP (@lem6212426) (@lem0)). Qed.
Lemma lem6212428 : term779.
Proof. exact (@lem6212417 (@lem6212427)). Qed.
Lemma lem6212430 (m : nat) (n : nat) : (term130 m n) = (term131 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6212431 : term237 = term236.
Proof. exact (@lem6212430 term22 term6). Qed.
Lemma lem6212432 : term35 = term20.
Proof. exact (@lem996237 term20). Qed.
Lemma lem6212433 : (term35 = term20) = (term36 = term22).
Proof. exact (@lem1007663 term20 (BIT1 0) term20). Qed.
Lemma lem6212434 : term36 = term22.
Proof. exact (EQ_MP (@lem6212433) (@lem6212432)). Qed.
Lemma lem6212435 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6212436 : term236 = term90.
Proof. exact (MK_COMB (@lem6212435) (@lem6212434)). Qed.
Lemma lem6212437 : term237 = term90.
Proof. exact (TRANS (@lem6212431) (@lem6212436)). Qed.
Lemma lem6212439 (m : nat) (n : nat) : (term192 m n) = (term193 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem6212440 : term234 = term235.
Proof. exact (@lem6212439 term22 term6). Qed.
Lemma lem6212441 : term35 = term20.
Proof. exact (@lem996237 term20). Qed.
Lemma lem6212442 : (term35 = term20) = (term36 = term22).
Proof. exact (@lem1007663 term20 (BIT1 0) term20). Qed.
Lemma lem6212443 : term36 = term22.
Proof. exact (EQ_MP (@lem6212442) (@lem6212441)). Qed.
Lemma lem6212444 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6212445 : term236 = term90.
Proof. exact (MK_COMB (@lem6212444) (@lem6212443)). Qed.
Lemma lem6212446 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem6212447 : term235 = term212.
Proof. exact (MK_COMB (@lem6212446) (@lem6212445)). Qed.
Lemma lem6212448 : term234 = term212.
Proof. exact (TRANS (@lem6212440) (@lem6212447)). Qed.
Lemma lem6212449 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem6212450 : term780 = term772.
Proof. exact (MK_COMB (@lem6212449) (@lem6212448)). Qed.
Lemma lem6212451 : term781 = term774.
Proof. exact (MK_COMB (@lem6212450) (@lem6212437)). Qed.
Lemma lem6212453 (m : nat) : (term682 m) = term65.
Proof. exact (proj1 (@lem1367303 m)). Qed.
Lemma lem6212454 : term774 = term65.
Proof. exact (@lem6212453 term22). Qed.
Lemma lem6212455 : term781 = term65.
Proof. exact (TRANS (@lem6212451) (@lem6212454)). Qed.
Lemma lem6212456 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem6212457 : term782 = term242.
Proof. exact (MK_COMB (@lem6212456) (@lem6212455)). Qed.
Lemma lem6212458 : term102 = term102.
Proof. exact (eq_refl term102). Qed.
Lemma lem6212459 : term783 = term244.
Proof. exact (MK_COMB (@lem6212457) (@lem6212458)). Qed.
Lemma lem6212461 (x : nat) : (term245 x) = term65.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem6212462 : term244 = term65.
Proof. exact (@lem6212461 term6). Qed.
Lemma lem6212463 : term783 = term65.
Proof. exact (TRANS (@lem6212459) (@lem6212462)). Qed.
Lemma lem6212465 (m : nat) (n : nat) : (term130 m n) = (term131 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6212466 : term132 = term133.
Proof. exact (@lem6212465 term6 term6). Qed.
Lemma lem6212467 : (term134 = (BIT1 0)) = (term135 = term6).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6212468 : term135 = term6.
Proof. exact (EQ_MP (@lem6212467) (@lem940073)). Qed.
Lemma lem6212469 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6212470 : term133 = term102.
Proof. exact (MK_COMB (@lem6212469) (@lem6212468)). Qed.
Lemma lem6212471 : term132 = term102.
Proof. exact (TRANS (@lem6212466) (@lem6212470)). Qed.
Lemma lem6212472 : term242 = term242.
Proof. exact (eq_refl term242). Qed.
Lemma lem6212473 : term246 = term244.
Proof. exact (MK_COMB (@lem6212472) (@lem6212471)). Qed.
Lemma lem6212475 (x : nat) : (term245 x) = term65.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem6212476 : term244 = term65.
Proof. exact (@lem6212475 term6). Qed.
Lemma lem6212477 : term246 = term65.
Proof. exact (TRANS (@lem6212473) (@lem6212476)). Qed.
Lemma lem6212478 : term65 = term246.
Proof. exact (SYM (@lem6212477)). Qed.
Lemma lem6212479 : term783 = term246.
Proof. exact (TRANS (@lem6212463) (@lem6212478)). Qed.
Lemma lem6212480 : term775 = term120.
Proof. exact (@lem6212428 (@lem6212479)). Qed.
Lemma lem6212481 : term774 = term120.
Proof. exact (TRANS (@lem6212394) (@lem6212480)). Qed.
Lemma lem6212483 (x : real) : (term139 x) = x.
Proof. exact (EQ_MP (@lem1981475 x) (@lem1981474 x)). Qed.
Lemma lem6212484 : term120 = term65.
Proof. exact (@lem6212483 term65). Qed.
Lemma lem6212485 : term774 = term65.
Proof. exact (TRANS (@lem6212481) (@lem6212484)). Qed.
Lemma lem6212486 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem6212487 : term784 = term242.
Proof. exact (MK_COMB (@lem6212486) (@lem6212485)). Qed.
Lemma lem6212488 (_79027 : int) : (real_of_int _79027) = (real_of_int _79027).
Proof. exact (eq_refl (real_of_int _79027)). Qed.
Lemma lem6212489 (_79027 : int) : (term771 _79027) = (term248 _79027).
Proof. exact (MK_COMB (@lem6212487) (@lem6212488 _79027)). Qed.
Lemma lem6212490 (_79027 : int) : (term770 _79027) = (term248 _79027).
Proof. exact (TRANS (@lem6212385 _79027) (@lem6212489 _79027)). Qed.
Lemma lem6212491 (_79027 : int) : (term248 _79027) = term65.
Proof. exact (@lem1982719 (real_of_int _79027)). Qed.
Lemma lem6212492 (_79027 : int) : (term770 _79027) = term65.
Proof. exact (TRANS (@lem6212490 _79027) (@lem6212491 _79027)). Qed.
Lemma lem6212493 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem6212494 (_79027 : int) : (term785 _79027) = term250.
Proof. exact (MK_COMB (@lem6212493) (@lem6212492 _79027)). Qed.
Lemma lem6212495 : term212 = term212.
Proof. exact (eq_refl term212). Qed.
Lemma lem6212496 (_79027 : int) : (term1357 _79027) = term725.
Proof. exact (MK_COMB (@lem6212494 _79027) (@lem6212495)). Qed.
Lemma lem6212497 (_79027 : int) : (term1356 _79027) = term725.
Proof. exact (TRANS (@lem6212384 _79027) (@lem6212496 _79027)). Qed.
Lemma lem6212498 : term725 = term212.
Proof. exact (@lem1982721 term212). Qed.
Lemma lem6212499 (_79027 : int) : (term1356 _79027) = term212.
Proof. exact (TRANS (@lem6212497 _79027) (@lem6212498)). Qed.
Lemma lem6212500 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem6212501 (_79027 : int) : (term1358 _79027) = term727.
Proof. exact (MK_COMB (@lem6212500) (@lem6212499 _79027)). Qed.
Lemma lem6212502 : term65 = term65.
Proof. exact (eq_refl term65). Qed.
Lemma lem6212503 (_79027 : int) : (term1355 _79027) = term728.
Proof. exact (MK_COMB (@lem6212501 _79027) (@lem6212502)). Qed.
Lemma lem6212504 (_79027 : int) (h1 : term1342 _79027) : term728.
Proof. exact (EQ_MP (@lem6212503 _79027) (@lem6212383 _79027 h1)). Qed.
Lemma lem6212506 (y : real) (x : real) : (real_ge x y) = (real_le y x).
Proof. exact (EQ_MP (@lem1980260 y x) (@lem1980259 y x)). Qed.
Lemma lem6212507 : term728 = term729.
Proof. exact (@lem6212506 term65 term212). Qed.
Lemma lem6212509 (x : nat) : (term121 x) = (term122 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem6212510 : term212 = term215.
Proof. exact (@lem6212509 term22). Qed.
Lemma lem6212512 (x : nat) : (real_of_num x) = (term119 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6212513 : term65 = term120.
Proof. exact (@lem6212512 (NUMERAL 0)). Qed.
Lemma lem6212514 : real_le = real_le.
Proof. exact (eq_refl real_le). Qed.
Lemma lem6212515 : term67 = term274.
Proof. exact (MK_COMB (@lem6212514) (@lem6212513)). Qed.
Lemma lem6212516 : term729 = term730.
Proof. exact (MK_COMB (@lem6212515) (@lem6212510)). Qed.
Lemma lem6212517 : term731.
Proof. exact (@lem1980026 term65 term102 term212 term102). Qed.
Lemma lem6212519 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6212520 : term156 = term157.
Proof. exact (@lem6212519 (NUMERAL 0) term6). Qed.
Lemma lem6212521 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6212522 (h1 : term158 = (BIT1 0)) : term157 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6212523 : (term158 = (BIT1 0)) = (term157 = True).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6212522 h1) (fun h1 : term157 = True => @lem6212521)). Qed.
Lemma lem6212524 : term157 = True.
Proof. exact (EQ_MP (@lem6212523) (@lem6212521)). Qed.
Lemma lem6212525 : term156 = True.
Proof. exact (TRANS (@lem6212520) (@lem6212524)). Qed.
Lemma lem6212526 : True = term156.
Proof. exact (SYM (@lem6212525)). Qed.
Lemma lem6212527 : term156.
Proof. exact (EQ_MP (@lem6212526) (@lem0)). Qed.
Lemma lem6212528 : term732.
Proof. exact (@lem6212517 (@lem6212527)). Qed.
Lemma lem6212530 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6212531 : term156 = term157.
Proof. exact (@lem6212530 (NUMERAL 0) term6). Qed.
Lemma lem6212532 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6212533 (h1 : term158 = (BIT1 0)) : term157 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6212534 : (term158 = (BIT1 0)) = (term157 = True).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6212533 h1) (fun h1 : term157 = True => @lem6212532)). Qed.
Lemma lem6212535 : term157 = True.
Proof. exact (EQ_MP (@lem6212534) (@lem6212532)). Qed.
Lemma lem6212536 : term156 = True.
Proof. exact (TRANS (@lem6212531) (@lem6212535)). Qed.
Lemma lem6212537 : True = term156.
Proof. exact (SYM (@lem6212536)). Qed.
Lemma lem6212538 : term156.
Proof. exact (EQ_MP (@lem6212537) (@lem0)). Qed.
Lemma lem6212539 : term730 = term733.
Proof. exact (@lem6212528 (@lem6212538)). Qed.
Lemma lem6212541 (m : nat) (n : nat) : (term192 m n) = (term193 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem6212542 : term234 = term235.
Proof. exact (@lem6212541 term22 term6). Qed.
Lemma lem6212543 : term35 = term20.
Proof. exact (@lem996237 term20). Qed.
Lemma lem6212544 : (term35 = term20) = (term36 = term22).
Proof. exact (@lem1007663 term20 (BIT1 0) term20). Qed.
Lemma lem6212545 : term36 = term22.
Proof. exact (EQ_MP (@lem6212544) (@lem6212543)). Qed.
Lemma lem6212546 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6212547 : term236 = term90.
Proof. exact (MK_COMB (@lem6212546) (@lem6212545)). Qed.
Lemma lem6212548 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem6212549 : term235 = term212.
Proof. exact (MK_COMB (@lem6212548) (@lem6212547)). Qed.
Lemma lem6212550 : term234 = term212.
Proof. exact (TRANS (@lem6212542) (@lem6212549)). Qed.
Lemma lem6212552 (x : nat) : (term245 x) = term65.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem6212553 : term244 = term65.
Proof. exact (@lem6212552 term6). Qed.
Lemma lem6212554 : real_le = real_le.
Proof. exact (eq_refl real_le). Qed.
Lemma lem6212555 : term279 = term67.
Proof. exact (MK_COMB (@lem6212554) (@lem6212553)). Qed.
Lemma lem6212556 : term733 = term729.
Proof. exact (MK_COMB (@lem6212555) (@lem6212550)). Qed.
Lemma lem6212558 (m : nat) (n : nat) : (term280 m n) = (term281 m n).
Proof. exact (proj2 (@lem1365406 m n)). Qed.
Lemma lem6212559 : term729 = term734.
Proof. exact (@lem6212558 (NUMERAL 0) term22). Qed.
Lemma lem6212560 : term596 = term20.
Proof. exact (@lem912803). Qed.
Lemma lem6212561 (h1 : term596 = term20) : (term22 = (NUMERAL 0)) = False.
Proof. exact (@lem1013352 (BIT1 0) 0 term20 h1). Qed.
Lemma lem6212562 : (term596 = term20) = ((term22 = (NUMERAL 0)) = False).
Proof. exact (prop_ext (fun h1 : term596 = term20 => @lem6212561 h1) (fun h1 : (term22 = (NUMERAL 0)) = False => @lem6212560)). Qed.
Lemma lem6212563 : (term22 = (NUMERAL 0)) = False.
Proof. exact (EQ_MP (@lem6212562) (@lem6212560)). Qed.
Lemma lem6212564 : ((NUMERAL 0) = (NUMERAL 0)) = True.
Proof. exact (@lem1013364 0). Qed.
Lemma lem6212565 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6212566 : term283 = (and True).
Proof. exact (MK_COMB (@lem6212565) (@lem6212564)). Qed.
Lemma lem6212567 : term734 = (True /\ False).
Proof. exact (MK_COMB (@lem6212566) (@lem6212563)). Qed.
Lemma lem6212569 : (True /\ False) = False.
Proof. exact (proj1 (@lem1365106)). Qed.
Lemma lem6212570 : term734 = False.
Proof. exact (TRANS (@lem6212567) (@lem6212569)). Qed.
Lemma lem6212571 : term729 = False.
Proof. exact (TRANS (@lem6212559) (@lem6212570)). Qed.
Lemma lem6212572 : term733 = False.
Proof. exact (TRANS (@lem6212556) (@lem6212571)). Qed.
Lemma lem6212573 : term730 = False.
Proof. exact (TRANS (@lem6212539) (@lem6212572)). Qed.
Lemma lem6212574 : term729 = False.
Proof. exact (TRANS (@lem6212516) (@lem6212573)). Qed.
Lemma lem6212575 : term728 = False.
Proof. exact (TRANS (@lem6212507) (@lem6212574)). Qed.
Lemma lem6212576 (_79027 : int) (h1 : term1342 _79027) : False.
Proof. exact (EQ_MP (@lem6212575) (@lem6212504 _79027 h1)). Qed.
Lemma lem6212577 (_79027 : int) (h1 : term1265 _79027) : term1265 _79027.
Proof. exact (h1). Qed.
Lemma lem6212578 (_79027 : int) (h1 : term1359 _79027) : term1359 _79027.
Proof. exact (h1). Qed.
Lemma lem6212579 (_79027 : int) (h1 : term1359 _79027) : term1266 _79027.
Proof. exact (proj2 (@lem6212578 _79027 h1)). Qed.
Lemma lem6212581 (_79027 : int) (h1 : term1359 _79027) : (real_of_int _79027) = term65.
Proof. exact (proj2 (@lem6212579 _79027 h1)). Qed.
Lemma lem6212582 (_79027 : int) (h1 : term1359 _79027) : term1216 _79027.
Proof. exact (proj1 (@lem6212579 _79027 h1)). Qed.
Lemma lem6212584 (y : real) (x : real) : (real_gt x y) = (real_lt y x).
Proof. exact (EQ_MP (@lem1980266 y x) (@lem1980265 y x)). Qed.
Lemma lem6212585 : term755 = term156.
Proof. exact (@lem6212584 term65 term102). Qed.
Lemma lem6212587 (x : nat) : (real_of_num x) = (term119 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6212588 : term102 = term147.
Proof. exact (@lem6212587 term6). Qed.
Lemma lem6212590 (x : nat) : (real_of_num x) = (term119 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6212591 : term65 = term120.
Proof. exact (@lem6212590 (NUMERAL 0)). Qed.
Lemma lem6212592 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem6212593 : term588 = term589.
Proof. exact (MK_COMB (@lem6212592) (@lem6212591)). Qed.
Lemma lem6212594 : term156 = term756.
Proof. exact (MK_COMB (@lem6212593) (@lem6212588)). Qed.
Lemma lem6212595 : term757.
Proof. exact (@lem1980255 term65 term102 term102 term102). Qed.
Lemma lem6212597 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6212598 : term156 = term157.
Proof. exact (@lem6212597 (NUMERAL 0) term6). Qed.
Lemma lem6212599 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6212600 (h1 : term158 = (BIT1 0)) : term157 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6212601 : (term158 = (BIT1 0)) = (term157 = True).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6212600 h1) (fun h1 : term157 = True => @lem6212599)). Qed.
Lemma lem6212602 : term157 = True.
Proof. exact (EQ_MP (@lem6212601) (@lem6212599)). Qed.
Lemma lem6212603 : term156 = True.
Proof. exact (TRANS (@lem6212598) (@lem6212602)). Qed.
Lemma lem6212604 : True = term156.
Proof. exact (SYM (@lem6212603)). Qed.
Lemma lem6212605 : term156.
Proof. exact (EQ_MP (@lem6212604) (@lem0)). Qed.
Lemma lem6212606 : term758.
Proof. exact (@lem6212595 (@lem6212605)). Qed.
Lemma lem6212608 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6212609 : term156 = term157.
Proof. exact (@lem6212608 (NUMERAL 0) term6). Qed.
Lemma lem6212610 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6212611 (h1 : term158 = (BIT1 0)) : term157 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6212612 : (term158 = (BIT1 0)) = (term157 = True).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6212611 h1) (fun h1 : term157 = True => @lem6212610)). Qed.
Lemma lem6212613 : term157 = True.
Proof. exact (EQ_MP (@lem6212612) (@lem6212610)). Qed.
Lemma lem6212614 : term156 = True.
Proof. exact (TRANS (@lem6212609) (@lem6212613)). Qed.
Lemma lem6212615 : True = term156.
Proof. exact (SYM (@lem6212614)). Qed.
Lemma lem6212616 : term156.
Proof. exact (EQ_MP (@lem6212615) (@lem0)). Qed.
Lemma lem6212617 : term756 = term759.
Proof. exact (@lem6212606 (@lem6212616)). Qed.
Lemma lem6212619 (m : nat) (n : nat) : (term130 m n) = (term131 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6212620 : term132 = term133.
Proof. exact (@lem6212619 term6 term6). Qed.
Lemma lem6212621 : (term134 = (BIT1 0)) = (term135 = term6).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6212622 : term135 = term6.
Proof. exact (EQ_MP (@lem6212621) (@lem940073)). Qed.
Lemma lem6212623 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6212624 : term133 = term102.
Proof. exact (MK_COMB (@lem6212623) (@lem6212622)). Qed.
Lemma lem6212625 : term132 = term102.
Proof. exact (TRANS (@lem6212620) (@lem6212624)). Qed.
Lemma lem6212627 (x : nat) : (term245 x) = term65.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem6212628 : term244 = term65.
Proof. exact (@lem6212627 term6). Qed.
Lemma lem6212629 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem6212630 : term594 = term588.
Proof. exact (MK_COMB (@lem6212629) (@lem6212628)). Qed.
Lemma lem6212631 : term759 = term156.
Proof. exact (MK_COMB (@lem6212630) (@lem6212625)). Qed.
Lemma lem6212633 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6212634 : term156 = term157.
Proof. exact (@lem6212633 (NUMERAL 0) term6). Qed.
Lemma lem6212635 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6212636 (h1 : term158 = (BIT1 0)) : term157 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6212637 : (term158 = (BIT1 0)) = (term157 = True).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6212636 h1) (fun h1 : term157 = True => @lem6212635)). Qed.
Lemma lem6212638 : term157 = True.
Proof. exact (EQ_MP (@lem6212637) (@lem6212635)). Qed.
Lemma lem6212639 : term156 = True.
Proof. exact (TRANS (@lem6212634) (@lem6212638)). Qed.
Lemma lem6212640 : term759 = True.
Proof. exact (TRANS (@lem6212631) (@lem6212639)). Qed.
Lemma lem6212641 : term756 = True.
Proof. exact (TRANS (@lem6212617) (@lem6212640)). Qed.
Lemma lem6212642 : term156 = True.
Proof. exact (TRANS (@lem6212594) (@lem6212641)). Qed.
Lemma lem6212643 : term755 = True.
Proof. exact (TRANS (@lem6212585) (@lem6212642)). Qed.
Lemma lem6212644 : True = term755.
Proof. exact (SYM (@lem6212643)). Qed.
Lemma lem6212645 : term755.
Proof. exact (EQ_MP (@lem6212644) (@lem0)). Qed.
Lemma lem6212646 (_79027 : int) (h1 : term1359 _79027) : term1313 _79027.
Proof. exact (conj (@lem6212645) (@lem6212582 _79027 h1)). Qed.
Lemma lem6212648 (x : real) (y : real) : term598 x y.
Proof. exact (proj1 (@lem1988332 x y)). Qed.
Lemma lem6212649 (_79027 : int) : term1314 _79027.
Proof. exact (@lem6212648 term102 (term1212 _79027)). Qed.
Lemma lem6212650 (_79027 : int) (h1 : term1359 _79027) : term1315 _79027.
Proof. exact (@lem6212649 _79027 (@lem6212646 _79027 h1)). Qed.
Lemma lem6212651 (_79027 : int) : (term1316 _79027) = (term1212 _79027).
Proof. exact (@lem1982733 (term1212 _79027)). Qed.
Lemma lem6212652 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem6212653 (_79027 : int) : (term1317 _79027) = (term1215 _79027).
Proof. exact (MK_COMB (@lem6212652) (@lem6212651 _79027)). Qed.
Lemma lem6212654 : term65 = term65.
Proof. exact (eq_refl term65). Qed.
Lemma lem6212655 (_79027 : int) : (term1315 _79027) = (term1216 _79027).
Proof. exact (MK_COMB (@lem6212653 _79027) (@lem6212654)). Qed.
Lemma lem6212656 (_79027 : int) (h1 : term1359 _79027) : term1216 _79027.
Proof. exact (EQ_MP (@lem6212655 _79027) (@lem6212650 _79027 h1)). Qed.
Lemma lem6212658 (y : real) : term1348 y.
Proof. exact (EQ_MP (@lem1396750 y) (@lem0)). Qed.
Lemma lem6212659 (_79027 : int) : term1349 _79027.
Proof. exact (@lem6212658 (real_of_int _79027)). Qed.
Lemma lem6212660 (_79027 : int) (h1 : term1359 _79027) : term1350 _79027.
Proof. exact (@lem6212659 _79027 (@lem6212581 _79027 h1)). Qed.
Lemma lem6212661 (_79027 : int) (h1 : term1359 _79027) : term1360 _79027.
Proof. exact (@lem6212660 _79027 h1 term102). Qed.
Lemma lem6212662 (_79027 : int) : (term1360 _79027) = ((term1311 _79027) = term65).
Proof. exact (eq_refl (term1360 _79027)). Qed.
Lemma lem6212663 (_79027 : int) (h1 : term1359 _79027) : (term1311 _79027) = term65.
Proof. exact (EQ_MP (@lem6212662 _79027) (@lem6212661 _79027 h1)). Qed.
Lemma lem6212664 (_79027 : int) : (term1311 _79027) = (real_of_int _79027).
Proof. exact (@lem1982733 (real_of_int _79027)). Qed.
Lemma lem6212665 : (@eq real) = (@eq real).
Proof. exact (eq_refl (@eq real)). Qed.
Lemma lem6212666 (_79027 : int) : (term1361 _79027) = (term1188 _79027).
Proof. exact (MK_COMB (@lem6212665) (@lem6212664 _79027)). Qed.
Lemma lem6212667 : term65 = term65.
Proof. exact (eq_refl term65). Qed.
Lemma lem6212668 (_79027 : int) : ((term1311 _79027) = term65) = ((real_of_int _79027) = term65).
Proof. exact (MK_COMB (@lem6212666 _79027) (@lem6212667)). Qed.
Lemma lem6212669 (_79027 : int) (h1 : term1359 _79027) : (real_of_int _79027) = term65.
Proof. exact (EQ_MP (@lem6212668 _79027) (@lem6212663 _79027 h1)). Qed.
Lemma lem6212670 (_79027 : int) (h1 : term1359 _79027) : term1362 _79027.
Proof. exact (conj (@lem6212669 _79027 h1) (@lem6212656 _79027 h1)). Qed.
Lemma lem6212672 (x : real) (y : real) : term1353 x y.
Proof. exact (proj1 (@lem1988336 x y)). Qed.
Lemma lem6212673 (_79027 : int) : term1363 _79027.
Proof. exact (@lem6212672 (real_of_int _79027) (term1212 _79027)). Qed.
Lemma lem6212674 (_79027 : int) (h1 : term1359 _79027) : term1364 _79027.
Proof. exact (@lem6212673 _79027 (@lem6212670 _79027 h1)). Qed.
Lemma lem6212675 (_79027 : int) : (term1365 _79027) = (term1366 _79027).
Proof. exact (@lem1982763 (real_of_int _79027) (term541 _79027) term123). Qed.
Lemma lem6212676 (_79027 : int) : (term861 _79027) = (term844 _79027).
Proof. exact (@lem1982715 term123 (real_of_int _79027)). Qed.
Lemma lem6212678 (x : nat) : (real_of_num x) = (term119 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6212679 : term102 = term147.
Proof. exact (@lem6212678 term6). Qed.
Lemma lem6212681 (x : nat) : (term121 x) = (term122 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem6212682 : term123 = term124.
Proof. exact (@lem6212681 term6). Qed.
Lemma lem6212683 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem6212684 : term845 = term846.
Proof. exact (MK_COMB (@lem6212683) (@lem6212682)). Qed.
Lemma lem6212685 : term847 = term848.
Proof. exact (MK_COMB (@lem6212684) (@lem6212679)). Qed.
Lemma lem6212686 : term849.
Proof. exact (@lem1981473 term123 term102 term102 term102 term65 term102). Qed.
Lemma lem6212688 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6212689 : term156 = term157.
Proof. exact (@lem6212688 (NUMERAL 0) term6). Qed.
Lemma lem6212690 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6212691 (h1 : term158 = (BIT1 0)) : term157 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6212692 : (term158 = (BIT1 0)) = (term157 = True).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6212691 h1) (fun h1 : term157 = True => @lem6212690)). Qed.
Lemma lem6212693 : term157 = True.
Proof. exact (EQ_MP (@lem6212692) (@lem6212690)). Qed.
Lemma lem6212694 : term156 = True.
Proof. exact (TRANS (@lem6212689) (@lem6212693)). Qed.
Lemma lem6212695 : True = term156.
Proof. exact (SYM (@lem6212694)). Qed.
Lemma lem6212696 : term156.
Proof. exact (EQ_MP (@lem6212695) (@lem0)). Qed.
Lemma lem6212697 : term850.
Proof. exact (@lem6212686 (@lem6212696)). Qed.
Lemma lem6212699 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6212700 : term156 = term157.
Proof. exact (@lem6212699 (NUMERAL 0) term6). Qed.
Lemma lem6212701 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6212702 (h1 : term158 = (BIT1 0)) : term157 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6212703 : (term158 = (BIT1 0)) = (term157 = True).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6212702 h1) (fun h1 : term157 = True => @lem6212701)). Qed.
Lemma lem6212704 : term157 = True.
Proof. exact (EQ_MP (@lem6212703) (@lem6212701)). Qed.
Lemma lem6212705 : term156 = True.
Proof. exact (TRANS (@lem6212700) (@lem6212704)). Qed.
Lemma lem6212706 : True = term156.
Proof. exact (SYM (@lem6212705)). Qed.
Lemma lem6212707 : term156.
Proof. exact (EQ_MP (@lem6212706) (@lem0)). Qed.
Lemma lem6212708 : term851.
Proof. exact (@lem6212697 (@lem6212707)). Qed.
Lemma lem6212710 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6212711 : term156 = term157.
Proof. exact (@lem6212710 (NUMERAL 0) term6). Qed.
Lemma lem6212712 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6212713 (h1 : term158 = (BIT1 0)) : term157 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6212714 : (term158 = (BIT1 0)) = (term157 = True).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6212713 h1) (fun h1 : term157 = True => @lem6212712)). Qed.
Lemma lem6212715 : term157 = True.
Proof. exact (EQ_MP (@lem6212714) (@lem6212712)). Qed.
Lemma lem6212716 : term156 = True.
Proof. exact (TRANS (@lem6212711) (@lem6212715)). Qed.
Lemma lem6212717 : True = term156.
Proof. exact (SYM (@lem6212716)). Qed.
Lemma lem6212718 : term156.
Proof. exact (EQ_MP (@lem6212717) (@lem0)). Qed.
Lemma lem6212719 : term852.
Proof. exact (@lem6212708 (@lem6212718)). Qed.
Lemma lem6212721 (m : nat) (n : nat) : (term130 m n) = (term131 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6212722 : term132 = term133.
Proof. exact (@lem6212721 term6 term6). Qed.
Lemma lem6212723 : (term134 = (BIT1 0)) = (term135 = term6).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6212724 : term135 = term6.
Proof. exact (EQ_MP (@lem6212723) (@lem940073)). Qed.
Lemma lem6212725 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6212726 : term133 = term102.
Proof. exact (MK_COMB (@lem6212725) (@lem6212724)). Qed.
Lemma lem6212727 : term132 = term102.
Proof. exact (TRANS (@lem6212722) (@lem6212726)). Qed.
Lemma lem6212729 (m : nat) (n : nat) : (term192 m n) = (term193 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem6212730 : term264 = term265.
Proof. exact (@lem6212729 term6 term6). Qed.
Lemma lem6212731 : (term134 = (BIT1 0)) = (term135 = term6).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6212732 : term135 = term6.
Proof. exact (EQ_MP (@lem6212731) (@lem940073)). Qed.
Lemma lem6212733 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6212734 : term133 = term102.
Proof. exact (MK_COMB (@lem6212733) (@lem6212732)). Qed.
Lemma lem6212735 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem6212736 : term265 = term123.
Proof. exact (MK_COMB (@lem6212735) (@lem6212734)). Qed.
Lemma lem6212737 : term264 = term123.
Proof. exact (TRANS (@lem6212730) (@lem6212736)). Qed.
Lemma lem6212738 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem6212739 : term853 = term845.
Proof. exact (MK_COMB (@lem6212738) (@lem6212737)). Qed.
Lemma lem6212740 : term854 = term847.
Proof. exact (MK_COMB (@lem6212739) (@lem6212727)). Qed.
Lemma lem6212742 (m : nat) : (term682 m) = term65.
Proof. exact (proj1 (@lem1367303 m)). Qed.
Lemma lem6212743 : term847 = term65.
Proof. exact (@lem6212742 term6). Qed.
Lemma lem6212744 : term854 = term65.
Proof. exact (TRANS (@lem6212740) (@lem6212743)). Qed.
Lemma lem6212745 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem6212746 : term855 = term242.
Proof. exact (MK_COMB (@lem6212745) (@lem6212744)). Qed.
Lemma lem6212747 : term102 = term102.
Proof. exact (eq_refl term102). Qed.
Lemma lem6212748 : term856 = term244.
Proof. exact (MK_COMB (@lem6212746) (@lem6212747)). Qed.
Lemma lem6212750 (x : nat) : (term245 x) = term65.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem6212751 : term244 = term65.
Proof. exact (@lem6212750 term6). Qed.
Lemma lem6212752 : term856 = term65.
Proof. exact (TRANS (@lem6212748) (@lem6212751)). Qed.
Lemma lem6212754 (m : nat) (n : nat) : (term130 m n) = (term131 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6212755 : term132 = term133.
Proof. exact (@lem6212754 term6 term6). Qed.
Lemma lem6212756 : (term134 = (BIT1 0)) = (term135 = term6).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6212757 : term135 = term6.
Proof. exact (EQ_MP (@lem6212756) (@lem940073)). Qed.
Lemma lem6212758 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6212759 : term133 = term102.
Proof. exact (MK_COMB (@lem6212758) (@lem6212757)). Qed.
Lemma lem6212760 : term132 = term102.
Proof. exact (TRANS (@lem6212755) (@lem6212759)). Qed.
Lemma lem6212761 : term242 = term242.
Proof. exact (eq_refl term242). Qed.
Lemma lem6212762 : term246 = term244.
Proof. exact (MK_COMB (@lem6212761) (@lem6212760)). Qed.
Lemma lem6212764 (x : nat) : (term245 x) = term65.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem6212765 : term244 = term65.
Proof. exact (@lem6212764 term6). Qed.
Lemma lem6212766 : term246 = term65.
Proof. exact (TRANS (@lem6212762) (@lem6212765)). Qed.
Lemma lem6212767 : term65 = term246.
Proof. exact (SYM (@lem6212766)). Qed.
Lemma lem6212768 : term856 = term246.
Proof. exact (TRANS (@lem6212752) (@lem6212767)). Qed.
Lemma lem6212769 : term848 = term120.
Proof. exact (@lem6212719 (@lem6212768)). Qed.
Lemma lem6212770 : term847 = term120.
Proof. exact (TRANS (@lem6212685) (@lem6212769)). Qed.
Lemma lem6212772 (x : real) : (term139 x) = x.
Proof. exact (EQ_MP (@lem1981475 x) (@lem1981474 x)). Qed.
Lemma lem6212773 : term120 = term65.
Proof. exact (@lem6212772 term65). Qed.
Lemma lem6212774 : term847 = term65.
Proof. exact (TRANS (@lem6212770) (@lem6212773)). Qed.
Lemma lem6212775 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem6212776 : term857 = term242.
Proof. exact (MK_COMB (@lem6212775) (@lem6212774)). Qed.
Lemma lem6212777 (_79027 : int) : (real_of_int _79027) = (real_of_int _79027).
Proof. exact (eq_refl (real_of_int _79027)). Qed.
Lemma lem6212778 (_79027 : int) : (term844 _79027) = (term248 _79027).
Proof. exact (MK_COMB (@lem6212776) (@lem6212777 _79027)). Qed.
Lemma lem6212779 (_79027 : int) : (term861 _79027) = (term248 _79027).
Proof. exact (TRANS (@lem6212676 _79027) (@lem6212778 _79027)). Qed.
Lemma lem6212780 (_79027 : int) : (term248 _79027) = term65.
Proof. exact (@lem1982719 (real_of_int _79027)). Qed.
Lemma lem6212781 (_79027 : int) : (term861 _79027) = term65.
Proof. exact (TRANS (@lem6212779 _79027) (@lem6212780 _79027)). Qed.
Lemma lem6212782 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem6212783 (_79027 : int) : (term862 _79027) = term250.
Proof. exact (MK_COMB (@lem6212782) (@lem6212781 _79027)). Qed.
Lemma lem6212784 : term123 = term123.
Proof. exact (eq_refl term123). Qed.
Lemma lem6212785 (_79027 : int) : (term1366 _79027) = term267.
Proof. exact (MK_COMB (@lem6212783 _79027) (@lem6212784)). Qed.
Lemma lem6212786 (_79027 : int) : (term1365 _79027) = term267.
Proof. exact (TRANS (@lem6212675 _79027) (@lem6212785 _79027)). Qed.
Lemma lem6212787 : term267 = term123.
Proof. exact (@lem1982721 term123). Qed.
Lemma lem6212788 (_79027 : int) : (term1365 _79027) = term123.
Proof. exact (TRANS (@lem6212786 _79027) (@lem6212787)). Qed.
Lemma lem6212789 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem6212790 (_79027 : int) : (term1367 _79027) = term269.
Proof. exact (MK_COMB (@lem6212789) (@lem6212788 _79027)). Qed.
Lemma lem6212791 : term65 = term65.
Proof. exact (eq_refl term65). Qed.
Lemma lem6212792 (_79027 : int) : (term1364 _79027) = term270.
Proof. exact (MK_COMB (@lem6212790 _79027) (@lem6212791)). Qed.
Lemma lem6212793 (_79027 : int) (h1 : term1359 _79027) : term270.
Proof. exact (EQ_MP (@lem6212792 _79027) (@lem6212674 _79027 h1)). Qed.
Lemma lem6212795 (y : real) (x : real) : (real_ge x y) = (real_le y x).
Proof. exact (EQ_MP (@lem1980260 y x) (@lem1980259 y x)). Qed.
Lemma lem6212796 : term270 = term273.
Proof. exact (@lem6212795 term65 term123). Qed.
Lemma lem6212798 (x : nat) : (term121 x) = (term122 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem6212799 : term123 = term124.
Proof. exact (@lem6212798 term6). Qed.
Lemma lem6212801 (x : nat) : (real_of_num x) = (term119 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6212802 : term65 = term120.
Proof. exact (@lem6212801 (NUMERAL 0)). Qed.
Lemma lem6212803 : real_le = real_le.
Proof. exact (eq_refl real_le). Qed.
Lemma lem6212804 : term67 = term274.
Proof. exact (MK_COMB (@lem6212803) (@lem6212802)). Qed.
Lemma lem6212805 : term273 = term275.
Proof. exact (MK_COMB (@lem6212804) (@lem6212799)). Qed.
Lemma lem6212806 : term276.
Proof. exact (@lem1980026 term65 term102 term123 term102). Qed.
Lemma lem6212808 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6212809 : term156 = term157.
Proof. exact (@lem6212808 (NUMERAL 0) term6). Qed.
Lemma lem6212810 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6212811 (h1 : term158 = (BIT1 0)) : term157 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6212812 : (term158 = (BIT1 0)) = (term157 = True).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6212811 h1) (fun h1 : term157 = True => @lem6212810)). Qed.
Lemma lem6212813 : term157 = True.
Proof. exact (EQ_MP (@lem6212812) (@lem6212810)). Qed.
Lemma lem6212814 : term156 = True.
Proof. exact (TRANS (@lem6212809) (@lem6212813)). Qed.
Lemma lem6212815 : True = term156.
Proof. exact (SYM (@lem6212814)). Qed.
Lemma lem6212816 : term156.
Proof. exact (EQ_MP (@lem6212815) (@lem0)). Qed.
Lemma lem6212817 : term277.
Proof. exact (@lem6212806 (@lem6212816)). Qed.
Lemma lem6212819 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6212820 : term156 = term157.
Proof. exact (@lem6212819 (NUMERAL 0) term6). Qed.
Lemma lem6212821 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6212822 (h1 : term158 = (BIT1 0)) : term157 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6212823 : (term158 = (BIT1 0)) = (term157 = True).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6212822 h1) (fun h1 : term157 = True => @lem6212821)). Qed.
Lemma lem6212824 : term157 = True.
Proof. exact (EQ_MP (@lem6212823) (@lem6212821)). Qed.
Lemma lem6212825 : term156 = True.
Proof. exact (TRANS (@lem6212820) (@lem6212824)). Qed.
Lemma lem6212826 : True = term156.
Proof. exact (SYM (@lem6212825)). Qed.
Lemma lem6212827 : term156.
Proof. exact (EQ_MP (@lem6212826) (@lem0)). Qed.
Lemma lem6212828 : term275 = term278.
Proof. exact (@lem6212817 (@lem6212827)). Qed.
Lemma lem6212830 (m : nat) (n : nat) : (term192 m n) = (term193 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem6212831 : term264 = term265.
Proof. exact (@lem6212830 term6 term6). Qed.
Lemma lem6212832 : (term134 = (BIT1 0)) = (term135 = term6).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6212833 : term135 = term6.
Proof. exact (EQ_MP (@lem6212832) (@lem940073)). Qed.
Lemma lem6212834 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6212835 : term133 = term102.
Proof. exact (MK_COMB (@lem6212834) (@lem6212833)). Qed.
Lemma lem6212836 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem6212837 : term265 = term123.
Proof. exact (MK_COMB (@lem6212836) (@lem6212835)). Qed.
Lemma lem6212838 : term264 = term123.
Proof. exact (TRANS (@lem6212831) (@lem6212837)). Qed.
Lemma lem6212840 (x : nat) : (term245 x) = term65.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem6212841 : term244 = term65.
Proof. exact (@lem6212840 term6). Qed.
Lemma lem6212842 : real_le = real_le.
Proof. exact (eq_refl real_le). Qed.
Lemma lem6212843 : term279 = term67.
Proof. exact (MK_COMB (@lem6212842) (@lem6212841)). Qed.
Lemma lem6212844 : term278 = term273.
Proof. exact (MK_COMB (@lem6212843) (@lem6212838)). Qed.
Lemma lem6212846 (m : nat) (n : nat) : (term280 m n) = (term281 m n).
Proof. exact (proj2 (@lem1365406 m n)). Qed.
Lemma lem6212847 : term273 = term282.
Proof. exact (@lem6212846 (NUMERAL 0) term6). Qed.
Lemma lem6212848 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6212849 (h1 : term158 = (BIT1 0)) : (term6 = (NUMERAL 0)) = False.
Proof. exact (@lem1013352 0 0 (BIT1 0) h1). Qed.
Lemma lem6212850 : (term158 = (BIT1 0)) = ((term6 = (NUMERAL 0)) = False).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6212849 h1) (fun h1 : (term6 = (NUMERAL 0)) = False => @lem6212848)). Qed.
Lemma lem6212851 : (term6 = (NUMERAL 0)) = False.
Proof. exact (EQ_MP (@lem6212850) (@lem6212848)). Qed.
Lemma lem6212852 : ((NUMERAL 0) = (NUMERAL 0)) = True.
Proof. exact (@lem1013364 0). Qed.
Lemma lem6212853 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6212854 : term283 = (and True).
Proof. exact (MK_COMB (@lem6212853) (@lem6212852)). Qed.
Lemma lem6212855 : term282 = (True /\ False).
Proof. exact (MK_COMB (@lem6212854) (@lem6212851)). Qed.
Lemma lem6212857 : (True /\ False) = False.
Proof. exact (proj1 (@lem1365106)). Qed.
Lemma lem6212858 : term282 = False.
Proof. exact (TRANS (@lem6212855) (@lem6212857)). Qed.
Lemma lem6212859 : term273 = False.
Proof. exact (TRANS (@lem6212847) (@lem6212858)). Qed.
Lemma lem6212860 : term278 = False.
Proof. exact (TRANS (@lem6212844) (@lem6212859)). Qed.
Lemma lem6212861 : term275 = False.
Proof. exact (TRANS (@lem6212828) (@lem6212860)). Qed.
Lemma lem6212862 : term273 = False.
Proof. exact (TRANS (@lem6212805) (@lem6212861)). Qed.
Lemma lem6212863 : term270 = False.
Proof. exact (TRANS (@lem6212796) (@lem6212862)). Qed.
Lemma lem6212864 (_79027 : int) (h1 : term1359 _79027) : False.
Proof. exact (EQ_MP (@lem6212863) (@lem6212793 _79027 h1)). Qed.
Lemma lem6212865 (_79027 : int) (h1 : term1368 _79027) : term1368 _79027.
Proof. exact (h1). Qed.
Lemma lem6212866 (_79027 : int) (h1 : term1368 _79027) : term1267 _79027.
Proof. exact (proj2 (@lem6212865 _79027 h1)). Qed.
Lemma lem6212868 (_79027 : int) (h1 : term1368 _79027) : (real_of_int _79027) = term65.
Proof. exact (proj2 (@lem6212866 _79027 h1)). Qed.
Lemma lem6212869 (_79027 : int) (h1 : term1368 _79027) : term1224 _79027.
Proof. exact (proj1 (@lem6212866 _79027 h1)). Qed.
Lemma lem6212871 (y : real) (x : real) : (real_gt x y) = (real_lt y x).
Proof. exact (EQ_MP (@lem1980266 y x) (@lem1980265 y x)). Qed.
Lemma lem6212872 : term755 = term156.
Proof. exact (@lem6212871 term65 term102). Qed.
Lemma lem6212874 (x : nat) : (real_of_num x) = (term119 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6212875 : term102 = term147.
Proof. exact (@lem6212874 term6). Qed.
Lemma lem6212877 (x : nat) : (real_of_num x) = (term119 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6212878 : term65 = term120.
Proof. exact (@lem6212877 (NUMERAL 0)). Qed.
Lemma lem6212879 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem6212880 : term588 = term589.
Proof. exact (MK_COMB (@lem6212879) (@lem6212878)). Qed.
Lemma lem6212881 : term156 = term756.
Proof. exact (MK_COMB (@lem6212880) (@lem6212875)). Qed.
Lemma lem6212882 : term757.
Proof. exact (@lem1980255 term65 term102 term102 term102). Qed.
Lemma lem6212884 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6212885 : term156 = term157.
Proof. exact (@lem6212884 (NUMERAL 0) term6). Qed.
Lemma lem6212886 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6212887 (h1 : term158 = (BIT1 0)) : term157 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6212888 : (term158 = (BIT1 0)) = (term157 = True).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6212887 h1) (fun h1 : term157 = True => @lem6212886)). Qed.
Lemma lem6212889 : term157 = True.
Proof. exact (EQ_MP (@lem6212888) (@lem6212886)). Qed.
Lemma lem6212890 : term156 = True.
Proof. exact (TRANS (@lem6212885) (@lem6212889)). Qed.
Lemma lem6212891 : True = term156.
Proof. exact (SYM (@lem6212890)). Qed.
Lemma lem6212892 : term156.
Proof. exact (EQ_MP (@lem6212891) (@lem0)). Qed.
Lemma lem6212893 : term758.
Proof. exact (@lem6212882 (@lem6212892)). Qed.
Lemma lem6212895 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6212896 : term156 = term157.
Proof. exact (@lem6212895 (NUMERAL 0) term6). Qed.
Lemma lem6212897 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6212898 (h1 : term158 = (BIT1 0)) : term157 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6212899 : (term158 = (BIT1 0)) = (term157 = True).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6212898 h1) (fun h1 : term157 = True => @lem6212897)). Qed.
Lemma lem6212900 : term157 = True.
Proof. exact (EQ_MP (@lem6212899) (@lem6212897)). Qed.
Lemma lem6212901 : term156 = True.
Proof. exact (TRANS (@lem6212896) (@lem6212900)). Qed.
Lemma lem6212902 : True = term156.
Proof. exact (SYM (@lem6212901)). Qed.
Lemma lem6212903 : term156.
Proof. exact (EQ_MP (@lem6212902) (@lem0)). Qed.
Lemma lem6212904 : term756 = term759.
Proof. exact (@lem6212893 (@lem6212903)). Qed.
Lemma lem6212906 (m : nat) (n : nat) : (term130 m n) = (term131 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6212907 : term132 = term133.
Proof. exact (@lem6212906 term6 term6). Qed.
Lemma lem6212908 : (term134 = (BIT1 0)) = (term135 = term6).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6212909 : term135 = term6.
Proof. exact (EQ_MP (@lem6212908) (@lem940073)). Qed.
Lemma lem6212910 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6212911 : term133 = term102.
Proof. exact (MK_COMB (@lem6212910) (@lem6212909)). Qed.
Lemma lem6212912 : term132 = term102.
Proof. exact (TRANS (@lem6212907) (@lem6212911)). Qed.
Lemma lem6212914 (x : nat) : (term245 x) = term65.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem6212915 : term244 = term65.
Proof. exact (@lem6212914 term6). Qed.
Lemma lem6212916 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem6212917 : term594 = term588.
Proof. exact (MK_COMB (@lem6212916) (@lem6212915)). Qed.
Lemma lem6212918 : term759 = term156.
Proof. exact (MK_COMB (@lem6212917) (@lem6212912)). Qed.
Lemma lem6212920 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6212921 : term156 = term157.
Proof. exact (@lem6212920 (NUMERAL 0) term6). Qed.
Lemma lem6212922 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6212923 (h1 : term158 = (BIT1 0)) : term157 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6212924 : (term158 = (BIT1 0)) = (term157 = True).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6212923 h1) (fun h1 : term157 = True => @lem6212922)). Qed.
Lemma lem6212925 : term157 = True.
Proof. exact (EQ_MP (@lem6212924) (@lem6212922)). Qed.
Lemma lem6212926 : term156 = True.
Proof. exact (TRANS (@lem6212921) (@lem6212925)). Qed.
Lemma lem6212927 : term759 = True.
Proof. exact (TRANS (@lem6212918) (@lem6212926)). Qed.
Lemma lem6212928 : term756 = True.
Proof. exact (TRANS (@lem6212904) (@lem6212927)). Qed.
Lemma lem6212929 : term156 = True.
Proof. exact (TRANS (@lem6212881) (@lem6212928)). Qed.
Lemma lem6212930 : term755 = True.
Proof. exact (TRANS (@lem6212872) (@lem6212929)). Qed.
Lemma lem6212931 : True = term755.
Proof. exact (SYM (@lem6212930)). Qed.
Lemma lem6212932 : term755.
Proof. exact (EQ_MP (@lem6212931) (@lem0)). Qed.
Lemma lem6212933 (_79027 : int) (h1 : term1368 _79027) : term1369 _79027.
Proof. exact (conj (@lem6212932) (@lem6212869 _79027 h1)). Qed.
Lemma lem6212935 (x : real) (y : real) : term598 x y.
Proof. exact (proj1 (@lem1988332 x y)). Qed.
Lemma lem6212936 (_79027 : int) : term1370 _79027.
Proof. exact (@lem6212935 term102 (term1221 _79027)). Qed.
Lemma lem6212937 (_79027 : int) (h1 : term1368 _79027) : term1371 _79027.
Proof. exact (@lem6212936 _79027 (@lem6212933 _79027 h1)). Qed.
Lemma lem6212938 (_79027 : int) : (term1372 _79027) = (term1221 _79027).
Proof. exact (@lem1982733 (term1221 _79027)). Qed.
Lemma lem6212939 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem6212940 (_79027 : int) : (term1373 _79027) = (term1223 _79027).
Proof. exact (MK_COMB (@lem6212939) (@lem6212938 _79027)). Qed.
Lemma lem6212941 : term65 = term65.
Proof. exact (eq_refl term65). Qed.
Lemma lem6212942 (_79027 : int) : (term1371 _79027) = (term1224 _79027).
Proof. exact (MK_COMB (@lem6212940 _79027) (@lem6212941)). Qed.
Lemma lem6212943 (_79027 : int) (h1 : term1368 _79027) : term1224 _79027.
Proof. exact (EQ_MP (@lem6212942 _79027) (@lem6212937 _79027 h1)). Qed.
Lemma lem6212945 (y : real) : term1348 y.
Proof. exact (EQ_MP (@lem1396750 y) (@lem0)). Qed.
Lemma lem6212946 (_79027 : int) : term1349 _79027.
Proof. exact (@lem6212945 (real_of_int _79027)). Qed.
Lemma lem6212947 (_79027 : int) (h1 : term1368 _79027) : term1350 _79027.
Proof. exact (@lem6212946 _79027 (@lem6212868 _79027 h1)). Qed.
Lemma lem6212948 (_79027 : int) (h1 : term1368 _79027) : term1374 _79027.
Proof. exact (@lem6212947 _79027 h1 term123). Qed.
Lemma lem6212949 (_79027 : int) : (term1374 _79027) = ((term541 _79027) = term65).
Proof. exact (eq_refl (term1374 _79027)). Qed.
Lemma lem6212956 (_79027 : int) (h1 : term1368 _79027) : (term541 _79027) = term65.
Proof. exact (EQ_MP (@lem6212949 _79027) (@lem6212948 _79027 h1)). Qed.
Lemma lem6212957 (_79027 : int) (h1 : term1368 _79027) : term1375 _79027.
Proof. exact (conj (@lem6212956 _79027 h1) (@lem6212943 _79027 h1)). Qed.
Lemma lem6212959 (x : real) (y : real) : term1353 x y.
Proof. exact (proj1 (@lem1988336 x y)). Qed.
Lemma lem6212960 (_79027 : int) : term1376 _79027.
Proof. exact (@lem6212959 (term541 _79027) (term1221 _79027)). Qed.
Lemma lem6212961 (_79027 : int) (h1 : term1368 _79027) : term1377 _79027.
Proof. exact (@lem6212960 _79027 (@lem6212957 _79027 h1)). Qed.
Lemma lem6212962 (_79027 : int) : (term1378 _79027) = (term1322 _79027).
Proof. exact (@lem1982763 (term541 _79027) (real_of_int _79027) term123). Qed.
Lemma lem6212963 (_79027 : int) : (term843 _79027) = (term844 _79027).
Proof. exact (@lem1982713 term123 (real_of_int _79027)). Qed.
Lemma lem6212965 (x : nat) : (real_of_num x) = (term119 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6212966 : term102 = term147.
Proof. exact (@lem6212965 term6). Qed.
Lemma lem6212968 (x : nat) : (term121 x) = (term122 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem6212969 : term123 = term124.
Proof. exact (@lem6212968 term6). Qed.
Lemma lem6212970 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem6212971 : term845 = term846.
Proof. exact (MK_COMB (@lem6212970) (@lem6212969)). Qed.
Lemma lem6212972 : term847 = term848.
Proof. exact (MK_COMB (@lem6212971) (@lem6212966)). Qed.
Lemma lem6212973 : term849.
Proof. exact (@lem1981473 term123 term102 term102 term102 term65 term102). Qed.
Lemma lem6212975 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6212976 : term156 = term157.
Proof. exact (@lem6212975 (NUMERAL 0) term6). Qed.
Lemma lem6212977 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6212978 (h1 : term158 = (BIT1 0)) : term157 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6212979 : (term158 = (BIT1 0)) = (term157 = True).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6212978 h1) (fun h1 : term157 = True => @lem6212977)). Qed.
Lemma lem6212980 : term157 = True.
Proof. exact (EQ_MP (@lem6212979) (@lem6212977)). Qed.
Lemma lem6212981 : term156 = True.
Proof. exact (TRANS (@lem6212976) (@lem6212980)). Qed.
Lemma lem6212982 : True = term156.
Proof. exact (SYM (@lem6212981)). Qed.
Lemma lem6212983 : term156.
Proof. exact (EQ_MP (@lem6212982) (@lem0)). Qed.
Lemma lem6212984 : term850.
Proof. exact (@lem6212973 (@lem6212983)). Qed.
Lemma lem6212986 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6212987 : term156 = term157.
Proof. exact (@lem6212986 (NUMERAL 0) term6). Qed.
Lemma lem6212988 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6212989 (h1 : term158 = (BIT1 0)) : term157 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6212990 : (term158 = (BIT1 0)) = (term157 = True).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6212989 h1) (fun h1 : term157 = True => @lem6212988)). Qed.
Lemma lem6212991 : term157 = True.
Proof. exact (EQ_MP (@lem6212990) (@lem6212988)). Qed.
Lemma lem6212992 : term156 = True.
Proof. exact (TRANS (@lem6212987) (@lem6212991)). Qed.
Lemma lem6212993 : True = term156.
Proof. exact (SYM (@lem6212992)). Qed.
Lemma lem6212994 : term156.
Proof. exact (EQ_MP (@lem6212993) (@lem0)). Qed.
Lemma lem6212995 : term851.
Proof. exact (@lem6212984 (@lem6212994)). Qed.
Lemma lem6212997 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6212998 : term156 = term157.
Proof. exact (@lem6212997 (NUMERAL 0) term6). Qed.
Lemma lem6212999 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6213000 (h1 : term158 = (BIT1 0)) : term157 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6213001 : (term158 = (BIT1 0)) = (term157 = True).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6213000 h1) (fun h1 : term157 = True => @lem6212999)). Qed.
Lemma lem6213002 : term157 = True.
Proof. exact (EQ_MP (@lem6213001) (@lem6212999)). Qed.
Lemma lem6213003 : term156 = True.
Proof. exact (TRANS (@lem6212998) (@lem6213002)). Qed.
Lemma lem6213004 : True = term156.
Proof. exact (SYM (@lem6213003)). Qed.
Lemma lem6213005 : term156.
Proof. exact (EQ_MP (@lem6213004) (@lem0)). Qed.
Lemma lem6213006 : term852.
Proof. exact (@lem6212995 (@lem6213005)). Qed.
Lemma lem6213008 (m : nat) (n : nat) : (term130 m n) = (term131 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6213009 : term132 = term133.
Proof. exact (@lem6213008 term6 term6). Qed.
Lemma lem6213010 : (term134 = (BIT1 0)) = (term135 = term6).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6213011 : term135 = term6.
Proof. exact (EQ_MP (@lem6213010) (@lem940073)). Qed.
Lemma lem6213012 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6213013 : term133 = term102.
Proof. exact (MK_COMB (@lem6213012) (@lem6213011)). Qed.
Lemma lem6213014 : term132 = term102.
Proof. exact (TRANS (@lem6213009) (@lem6213013)). Qed.
Lemma lem6213016 (m : nat) (n : nat) : (term192 m n) = (term193 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem6213017 : term264 = term265.
Proof. exact (@lem6213016 term6 term6). Qed.
Lemma lem6213018 : (term134 = (BIT1 0)) = (term135 = term6).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6213019 : term135 = term6.
Proof. exact (EQ_MP (@lem6213018) (@lem940073)). Qed.
Lemma lem6213020 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6213021 : term133 = term102.
Proof. exact (MK_COMB (@lem6213020) (@lem6213019)). Qed.
Lemma lem6213022 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem6213023 : term265 = term123.
Proof. exact (MK_COMB (@lem6213022) (@lem6213021)). Qed.
Lemma lem6213024 : term264 = term123.
Proof. exact (TRANS (@lem6213017) (@lem6213023)). Qed.
Lemma lem6213025 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem6213026 : term853 = term845.
Proof. exact (MK_COMB (@lem6213025) (@lem6213024)). Qed.
Lemma lem6213027 : term854 = term847.
Proof. exact (MK_COMB (@lem6213026) (@lem6213014)). Qed.
Lemma lem6213029 (m : nat) : (term682 m) = term65.
Proof. exact (proj1 (@lem1367303 m)). Qed.
Lemma lem6213030 : term847 = term65.
Proof. exact (@lem6213029 term6). Qed.
Lemma lem6213031 : term854 = term65.
Proof. exact (TRANS (@lem6213027) (@lem6213030)). Qed.
Lemma lem6213032 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem6213033 : term855 = term242.
Proof. exact (MK_COMB (@lem6213032) (@lem6213031)). Qed.
Lemma lem6213034 : term102 = term102.
Proof. exact (eq_refl term102). Qed.
Lemma lem6213035 : term856 = term244.
Proof. exact (MK_COMB (@lem6213033) (@lem6213034)). Qed.
Lemma lem6213037 (x : nat) : (term245 x) = term65.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem6213038 : term244 = term65.
Proof. exact (@lem6213037 term6). Qed.
Lemma lem6213039 : term856 = term65.
Proof. exact (TRANS (@lem6213035) (@lem6213038)). Qed.
Lemma lem6213041 (m : nat) (n : nat) : (term130 m n) = (term131 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6213042 : term132 = term133.
Proof. exact (@lem6213041 term6 term6). Qed.
Lemma lem6213043 : (term134 = (BIT1 0)) = (term135 = term6).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6213044 : term135 = term6.
Proof. exact (EQ_MP (@lem6213043) (@lem940073)). Qed.
Lemma lem6213045 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6213046 : term133 = term102.
Proof. exact (MK_COMB (@lem6213045) (@lem6213044)). Qed.
Lemma lem6213047 : term132 = term102.
Proof. exact (TRANS (@lem6213042) (@lem6213046)). Qed.
Lemma lem6213048 : term242 = term242.
Proof. exact (eq_refl term242). Qed.
Lemma lem6213049 : term246 = term244.
Proof. exact (MK_COMB (@lem6213048) (@lem6213047)). Qed.
Lemma lem6213051 (x : nat) : (term245 x) = term65.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem6213052 : term244 = term65.
Proof. exact (@lem6213051 term6). Qed.
Lemma lem6213053 : term246 = term65.
Proof. exact (TRANS (@lem6213049) (@lem6213052)). Qed.
Lemma lem6213054 : term65 = term246.
Proof. exact (SYM (@lem6213053)). Qed.
Lemma lem6213055 : term856 = term246.
Proof. exact (TRANS (@lem6213039) (@lem6213054)). Qed.
Lemma lem6213056 : term848 = term120.
Proof. exact (@lem6213006 (@lem6213055)). Qed.
Lemma lem6213057 : term847 = term120.
Proof. exact (TRANS (@lem6212972) (@lem6213056)). Qed.
Lemma lem6213059 (x : real) : (term139 x) = x.
Proof. exact (EQ_MP (@lem1981475 x) (@lem1981474 x)). Qed.
Lemma lem6213060 : term120 = term65.
Proof. exact (@lem6213059 term65). Qed.
Lemma lem6213061 : term847 = term65.
Proof. exact (TRANS (@lem6213057) (@lem6213060)). Qed.
Lemma lem6213062 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem6213063 : term857 = term242.
Proof. exact (MK_COMB (@lem6213062) (@lem6213061)). Qed.
Lemma lem6213064 (_79027 : int) : (real_of_int _79027) = (real_of_int _79027).
Proof. exact (eq_refl (real_of_int _79027)). Qed.
Lemma lem6213065 (_79027 : int) : (term844 _79027) = (term248 _79027).
Proof. exact (MK_COMB (@lem6213063) (@lem6213064 _79027)). Qed.
Lemma lem6213066 (_79027 : int) : (term843 _79027) = (term248 _79027).
Proof. exact (TRANS (@lem6212963 _79027) (@lem6213065 _79027)). Qed.
Lemma lem6213067 (_79027 : int) : (term248 _79027) = term65.
Proof. exact (@lem1982719 (real_of_int _79027)). Qed.
Lemma lem6213068 (_79027 : int) : (term843 _79027) = term65.
Proof. exact (TRANS (@lem6213066 _79027) (@lem6213067 _79027)). Qed.
Lemma lem6213069 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem6213070 (_79027 : int) : (term858 _79027) = term250.
Proof. exact (MK_COMB (@lem6213069) (@lem6213068 _79027)). Qed.
Lemma lem6213071 : term123 = term123.
Proof. exact (eq_refl term123). Qed.
Lemma lem6213072 (_79027 : int) : (term1322 _79027) = term267.
Proof. exact (MK_COMB (@lem6213070 _79027) (@lem6213071)). Qed.
Lemma lem6213073 (_79027 : int) : (term1378 _79027) = term267.
Proof. exact (TRANS (@lem6212962 _79027) (@lem6213072 _79027)). Qed.
Lemma lem6213074 : term267 = term123.
Proof. exact (@lem1982721 term123). Qed.
Lemma lem6213075 (_79027 : int) : (term1378 _79027) = term123.
Proof. exact (TRANS (@lem6213073 _79027) (@lem6213074)). Qed.
Lemma lem6213076 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem6213077 (_79027 : int) : (term1379 _79027) = term269.
Proof. exact (MK_COMB (@lem6213076) (@lem6213075 _79027)). Qed.
Lemma lem6213078 : term65 = term65.
Proof. exact (eq_refl term65). Qed.
Lemma lem6213079 (_79027 : int) : (term1377 _79027) = term270.
Proof. exact (MK_COMB (@lem6213077 _79027) (@lem6213078)). Qed.
Lemma lem6213080 (_79027 : int) (h1 : term1368 _79027) : term270.
Proof. exact (EQ_MP (@lem6213079 _79027) (@lem6212961 _79027 h1)). Qed.
Lemma lem6213082 (y : real) (x : real) : (real_ge x y) = (real_le y x).
Proof. exact (EQ_MP (@lem1980260 y x) (@lem1980259 y x)). Qed.
Lemma lem6213083 : term270 = term273.
Proof. exact (@lem6213082 term65 term123). Qed.
Lemma lem6213085 (x : nat) : (term121 x) = (term122 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem6213086 : term123 = term124.
Proof. exact (@lem6213085 term6). Qed.
Lemma lem6213088 (x : nat) : (real_of_num x) = (term119 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6213089 : term65 = term120.
Proof. exact (@lem6213088 (NUMERAL 0)). Qed.
Lemma lem6213090 : real_le = real_le.
Proof. exact (eq_refl real_le). Qed.
Lemma lem6213091 : term67 = term274.
Proof. exact (MK_COMB (@lem6213090) (@lem6213089)). Qed.
Lemma lem6213092 : term273 = term275.
Proof. exact (MK_COMB (@lem6213091) (@lem6213086)). Qed.
Lemma lem6213093 : term276.
Proof. exact (@lem1980026 term65 term102 term123 term102). Qed.
Lemma lem6213095 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6213096 : term156 = term157.
Proof. exact (@lem6213095 (NUMERAL 0) term6). Qed.
Lemma lem6213097 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6213098 (h1 : term158 = (BIT1 0)) : term157 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6213099 : (term158 = (BIT1 0)) = (term157 = True).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6213098 h1) (fun h1 : term157 = True => @lem6213097)). Qed.
Lemma lem6213100 : term157 = True.
Proof. exact (EQ_MP (@lem6213099) (@lem6213097)). Qed.
Lemma lem6213101 : term156 = True.
Proof. exact (TRANS (@lem6213096) (@lem6213100)). Qed.
Lemma lem6213102 : True = term156.
Proof. exact (SYM (@lem6213101)). Qed.
Lemma lem6213103 : term156.
Proof. exact (EQ_MP (@lem6213102) (@lem0)). Qed.
Lemma lem6213104 : term277.
Proof. exact (@lem6213093 (@lem6213103)). Qed.
Lemma lem6213106 (m : nat) (n : nat) : (term155 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6213107 : term156 = term157.
Proof. exact (@lem6213106 (NUMERAL 0) term6). Qed.
Lemma lem6213108 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6213109 (h1 : term158 = (BIT1 0)) : term157 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6213110 : (term158 = (BIT1 0)) = (term157 = True).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6213109 h1) (fun h1 : term157 = True => @lem6213108)). Qed.
Lemma lem6213111 : term157 = True.
Proof. exact (EQ_MP (@lem6213110) (@lem6213108)). Qed.
Lemma lem6213112 : term156 = True.
Proof. exact (TRANS (@lem6213107) (@lem6213111)). Qed.
Lemma lem6213113 : True = term156.
Proof. exact (SYM (@lem6213112)). Qed.
Lemma lem6213114 : term156.
Proof. exact (EQ_MP (@lem6213113) (@lem0)). Qed.
Lemma lem6213115 : term275 = term278.
Proof. exact (@lem6213104 (@lem6213114)). Qed.
Lemma lem6213117 (m : nat) (n : nat) : (term192 m n) = (term193 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem6213118 : term264 = term265.
Proof. exact (@lem6213117 term6 term6). Qed.
Lemma lem6213119 : (term134 = (BIT1 0)) = (term135 = term6).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6213120 : term135 = term6.
Proof. exact (EQ_MP (@lem6213119) (@lem940073)). Qed.
Lemma lem6213121 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6213122 : term133 = term102.
Proof. exact (MK_COMB (@lem6213121) (@lem6213120)). Qed.
Lemma lem6213123 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem6213124 : term265 = term123.
Proof. exact (MK_COMB (@lem6213123) (@lem6213122)). Qed.
Lemma lem6213125 : term264 = term123.
Proof. exact (TRANS (@lem6213118) (@lem6213124)). Qed.
Lemma lem6213127 (x : nat) : (term245 x) = term65.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem6213128 : term244 = term65.
Proof. exact (@lem6213127 term6). Qed.
Lemma lem6213129 : real_le = real_le.
Proof. exact (eq_refl real_le). Qed.
Lemma lem6213130 : term279 = term67.
Proof. exact (MK_COMB (@lem6213129) (@lem6213128)). Qed.
Lemma lem6213131 : term278 = term273.
Proof. exact (MK_COMB (@lem6213130) (@lem6213125)). Qed.
Lemma lem6213133 (m : nat) (n : nat) : (term280 m n) = (term281 m n).
Proof. exact (proj2 (@lem1365406 m n)). Qed.
Lemma lem6213134 : term273 = term282.
Proof. exact (@lem6213133 (NUMERAL 0) term6). Qed.
Lemma lem6213135 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6213136 (h1 : term158 = (BIT1 0)) : (term6 = (NUMERAL 0)) = False.
Proof. exact (@lem1013352 0 0 (BIT1 0) h1). Qed.
Lemma lem6213137 : (term158 = (BIT1 0)) = ((term6 = (NUMERAL 0)) = False).
Proof. exact (prop_ext (fun h1 : term158 = (BIT1 0) => @lem6213136 h1) (fun h1 : (term6 = (NUMERAL 0)) = False => @lem6213135)). Qed.
Lemma lem6213138 : (term6 = (NUMERAL 0)) = False.
Proof. exact (EQ_MP (@lem6213137) (@lem6213135)). Qed.
Lemma lem6213139 : ((NUMERAL 0) = (NUMERAL 0)) = True.
Proof. exact (@lem1013364 0). Qed.
Lemma lem6213140 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6213141 : term283 = (and True).
Proof. exact (MK_COMB (@lem6213140) (@lem6213139)). Qed.
Lemma lem6213142 : term282 = (True /\ False).
Proof. exact (MK_COMB (@lem6213141) (@lem6213138)). Qed.
Lemma lem6213144 : (True /\ False) = False.
Proof. exact (proj1 (@lem1365106)). Qed.
Lemma lem6213145 : term282 = False.
Proof. exact (TRANS (@lem6213142) (@lem6213144)). Qed.
Lemma lem6213146 : term273 = False.
Proof. exact (TRANS (@lem6213134) (@lem6213145)). Qed.
Lemma lem6213147 : term278 = False.
Proof. exact (TRANS (@lem6213131) (@lem6213146)). Qed.
Lemma lem6213148 : term275 = False.
Proof. exact (TRANS (@lem6213115) (@lem6213147)). Qed.
Lemma lem6213149 : term273 = False.
Proof. exact (TRANS (@lem6213092) (@lem6213148)). Qed.
Lemma lem6213150 : term270 = False.
Proof. exact (TRANS (@lem6213083) (@lem6213149)). Qed.
Lemma lem6213151 (_79027 : int) (h1 : term1368 _79027) : False.
Proof. exact (EQ_MP (@lem6213150) (@lem6213080 _79027 h1)). Qed.
Lemma lem6213152 (_79027 : int) (h1 : term1265 _79027) : False.
Proof. exact (or_elim (@lem6212577 _79027 h1) (fun h0 : term1359 _79027 => @lem6212864 _79027 h0) (fun h0 : term1368 _79027 => @lem6213151 _79027 h0)). Qed.
Lemma lem6213153 (_79027 : int) (h1 : term1269 _79027) : False.
Proof. exact (or_elim (@lem6212286 _79027 h1) (fun h0 : term1342 _79027 => @lem6212576 _79027 h0) (fun h0 : term1265 _79027 => @lem6213152 _79027 h0)). Qed.
Lemma lem6213154 (_79027 : int) (h1 : term1281 _79027) : False.
Proof. exact (or_elim (@lem6210766 _79027 h1) (fun h0 : term1278 _79027 => @lem6212285 _79027 h0) (fun h0 : term1269 _79027 => @lem6213153 _79027 h0)). Qed.
Lemma lem6213156 (_79027 : int) (h1 : term1281 _79027) : term1281 _79027.
Proof. exact (h1). Qed.
Lemma lem6213157 (_79027 : int) (h1 : term1281 _79027) : (term1281 _79027) = False.
Proof. exact (prop_ext (fun h2 : term1281 _79027 => @lem6213154 _79027 h1) (fun h2 : False => @lem6213156 _79027 h1)). Qed.
Lemma lem6213158 (_79027 : int) (h1 : term1281 _79027) : False.
Proof. exact (EQ_MP (@lem6213157 _79027 h1) (@lem6213156 _79027 h1)). Qed.
Lemma lem6213159 (_79027 : int) (h1 : term1194 _79027) : term1194 _79027.
Proof. exact (h1). Qed.
Lemma lem6213160 (_79027 : int) (h1 : term1194 _79027) : term1281 _79027.
Proof. exact (EQ_MP (@lem6210732 _79027) (@lem6213159 _79027 h1)). Qed.
Lemma lem6213161 (_79027 : int) (h1 : term1194 _79027) : (term1281 _79027) = False.
Proof. exact (prop_ext (fun h2 : term1281 _79027 => @lem6213158 _79027 h2) (fun h2 : False => @lem6213160 _79027 h1)). Qed.
Lemma lem6213162 (_79027 : int) (h1 : term1194 _79027) : False.
Proof. exact (EQ_MP (@lem6213161 _79027 h1) (@lem6213160 _79027 h1)). Qed.
Lemma lem6213163 (_79027 : int) : term1380 _79027.
Proof. exact (fun h0 : term1194 _79027 => @lem6213162 _79027 h0). Qed.
Lemma lem6213164 (_79027 : int) : term1381 _79027.
Proof. exact (@lem1386578 (term1382 _79027)). Qed.
Lemma lem6213167 (_79027 : int) : term1382 _79027.
Proof. exact (@lem6213164 _79027 (@lem6213163 _79027)). Qed.
Lemma lem6213168 (_79027 : int) : (term1193 _79027) = (term1153 _79027).
Proof. exact (SYM (@lem6210093 _79027)). Qed.
Lemma lem6213169 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem6213170 (_79027 : int) : (term1382 _79027) = (term1130 _79027).
Proof. exact (MK_COMB (@lem6213169) (@lem6213168 _79027)). Qed.
Lemma lem6213171 (_79027 : int) : term1130 _79027.
Proof. exact (EQ_MP (@lem6213170 _79027) (@lem6213167 _79027)). Qed.
Lemma lem6213172 (_79027 : int) : term1131 _79027.
Proof. exact (EQ_MP (@lem6209884 _79027) (@lem6213171 _79027)). Qed.
Lemma lem6213173 (m : nat) : term1383 m.
Proof. exact (@lem6213172 (int_of_num m)). Qed.
Lemma lem6213174 (m : nat) : term1129 m.
Proof. exact (@lem6213173 m (@lem6209883 m)). Qed.
Lemma lem6213175 (m : nat) : (term1129 m) = ((term1108 m) = (m = (NUMERAL 0))).
Proof. exact (SYM (@lem6209880 m)). Qed.
Lemma lem6213177 : term158 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6213178 : (term158 = (BIT1 0)) = (term1107 = term6).
Proof. exact (@lem1005477 0 (BIT1 0)). Qed.
Lemma lem6213179 : term1107 = term6.
Proof. exact (EQ_MP (@lem6213178) (@lem6213177)). Qed.
Lemma lem6213181 {_123774 : Type'} (op : type1400 _123774) (h1 : @monoidal _123774 op) : @monoidal _123774 op.
Proof. exact (h1). Qed.
Lemma lem6213183 (P : nat -> Prop) : term1384 P.
Proof. exact (EQ_MP (@lem75623 P) (@lem75622 P)). Qed.
Lemma lem6213184 {_123774 : Type'} (m : nat) (op : type1400 _123774) (f : nat -> _123774) : term1385 _123774 m op f.
Proof. exact (@lem6213183 (term1386 _123774 m op f)). Qed.
Lemma lem6213185 {_123774 : Type'} (m : nat) (op : type1400 _123774) (f : nat -> _123774) : (term1387 _123774 m op f) = ((term1388 _123774 op m f) = (term1389 _123774 m op f)).
Proof. exact (eq_refl (term1387 _123774 m op f)). Qed.
Lemma lem6213186 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6213187 {_123774 : Type'} (m : nat) (op : type1400 _123774) (f : nat -> _123774) : (term1390 _123774 m op f) = (term1391 _123774 m op f).
Proof. exact (MK_COMB (@lem6213186) (@lem6213185 _123774 m op f)). Qed.
Lemma lem6213188 {_123774 : Type'} (m : nat) (n : nat) (op : type1400 _123774) (f : nat -> _123774) : (term1392 _123774 m op f n) = ((term1393 _123774 op m n f) = (term1394 _123774 m n op f)).
Proof. exact (eq_refl (term1392 _123774 m op f n)). Qed.
Lemma lem6213189 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem6213190 {_123774 : Type'} (m : nat) (n : nat) (op : type1400 _123774) (f : nat -> _123774) : (term1395 _123774 m op f n) = (term1396 _123774 m n op f).
Proof. exact (MK_COMB (@lem6213189) (@lem6213188 _123774 m n op f)). Qed.
Lemma lem6213191 {_123774 : Type'} (m : nat) (n : nat) (op : type1400 _123774) (f : nat -> _123774) : (term1397 _123774 m op f n) = ((term1398 _123774 op m n f) = (term1399 _123774 m n op f)).
Proof. exact (eq_refl (term1397 _123774 m op f n)). Qed.
Lemma lem6213192 {_123774 : Type'} (m : nat) (n : nat) (op : type1400 _123774) (f : nat -> _123774) : (term1400 _123774 m op f n) = (term1401 _123774 m n op f).
Proof. exact (MK_COMB (@lem6213190 _123774 m n op f) (@lem6213191 _123774 m n op f)). Qed.
Lemma lem6213193 {_123774 : Type'} (m : nat) (op : type1400 _123774) (f : nat -> _123774) : (term1402 _123774 m op f) = (term1403 _123774 m op f).
Proof. exact (fun_ext (fun n : nat => @lem6213192 _123774 m n op f)). Qed.
Lemma lem6213194 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem6213195 {_123774 : Type'} (m : nat) (op : type1400 _123774) (f : nat -> _123774) : (term1404 _123774 m op f) = (term1405 _123774 m op f).
Proof. exact (MK_COMB (@lem6213194) (@lem6213193 _123774 m op f)). Qed.
Lemma lem6213196 {_123774 : Type'} (m : nat) (op : type1400 _123774) (f : nat -> _123774) : (term1406 _123774 m op f) = (term1407 _123774 m op f).
Proof. exact (MK_COMB (@lem6213187 _123774 m op f) (@lem6213195 _123774 m op f)). Qed.
Lemma lem6213197 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem6213198 {_123774 : Type'} (m : nat) (op : type1400 _123774) (f : nat -> _123774) : (term1408 _123774 m op f) = (term1409 _123774 m op f).
Proof. exact (MK_COMB (@lem6213197) (@lem6213196 _123774 m op f)). Qed.
Lemma lem6213199 {_123774 : Type'} (m : nat) (n : nat) (op : type1400 _123774) (f : nat -> _123774) : (term1392 _123774 m op f n) = ((term1393 _123774 op m n f) = (term1394 _123774 m n op f)).
Proof. exact (eq_refl (term1392 _123774 m op f n)). Qed.
Lemma lem6213200 {_123774 : Type'} (m : nat) (op : type1400 _123774) (f : nat -> _123774) : (term1410 _123774 m op f) = (term1386 _123774 m op f).
Proof. exact (fun_ext (fun n : nat => @lem6213199 _123774 m n op f)). Qed.
Lemma lem6213201 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem6213202 {_123774 : Type'} (m : nat) (op : type1400 _123774) (f : nat -> _123774) : (term1411 _123774 m op f) = (term1412 _123774 m op f).
Proof. exact (MK_COMB (@lem6213201) (@lem6213200 _123774 m op f)). Qed.
Lemma lem6213203 {_123774 : Type'} (m : nat) (op : type1400 _123774) (f : nat -> _123774) : (term1385 _123774 m op f) = (term1413 _123774 m op f).
Proof. exact (MK_COMB (@lem6213198 _123774 m op f) (@lem6213202 _123774 m op f)). Qed.
Lemma lem6213204 {_123774 : Type'} (m : nat) (op : type1400 _123774) (f : nat -> _123774) : term1413 _123774 m op f.
Proof. exact (EQ_MP (@lem6213203 _123774 m op f) (@lem6213184 _123774 m op f)). Qed.
Lemma lem6213205 {_123774 : Type'} (m : nat) (n : nat) (op : type1400 _123774) (f : nat -> _123774) (h1 : (term1393 _123774 op m n f) = (term1394 _123774 m n op f)) : (term1393 _123774 op m n f) = (term1394 _123774 m n op f).
Proof. exact (h1). Qed.
Lemma lem6213206 : term1414 = 0.
Proof. exact (@lem994717 term20). Qed.
Lemma lem6213207 : (term1414 = 0) = (term1415 = (NUMERAL 0)).
Proof. exact (@lem1007663 term20 0 0). Qed.
Lemma lem6213208 : term1415 = (NUMERAL 0).
Proof. exact (EQ_MP (@lem6213207) (@lem6213206)). Qed.
Lemma lem6213209 : Nat.add = Nat.add.
Proof. exact (eq_refl Nat.add). Qed.
Lemma lem6213210 : term1416 = term1417.
Proof. exact (MK_COMB (@lem6213209) (@lem6213208)). Qed.
Lemma lem6213211 : term6 = term6.
Proof. exact (eq_refl term6). Qed.
Lemma lem6213212 : term1418 = term1419.
Proof. exact (MK_COMB (@lem6213210) (@lem6213211)). Qed.
Lemma lem6213213 : term1420 = (BIT1 0).
Proof. exact (@lem706821). Qed.
Lemma lem6213214 : (term1420 = (BIT1 0)) = (term1419 = term6).
Proof. exact (@lem1006570 0 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6213215 : term1419 = term6.
Proof. exact (EQ_MP (@lem6213214) (@lem6213213)). Qed.
Lemma lem6213216 : term1418 = term6.
Proof. exact (TRANS (@lem6213212) (@lem6213215)). Qed.
Lemma lem6213217 (m : nat) : (term1421 m) = (term1421 m).
Proof. exact (eq_refl (term1421 m)). Qed.
Lemma lem6213218 (m : nat) : (term1422 m) = (term1423 m).
Proof. exact (MK_COMB (@lem6213217 m) (@lem6213216)). Qed.
Lemma lem6213219 {_123774 : Type'} (op : type1400 _123774) : (@iterate _123774 nat op) = (@iterate _123774 nat op).
Proof. exact (eq_refl (@iterate _123774 nat op)). Qed.
Lemma lem6213220 {_123774 : Type'} (op : type1400 _123774) (m : nat) : (term1424 _123774 op m) = (term1425 _123774 op m).
Proof. exact (MK_COMB (@lem6213219 _123774 op) (@lem6213218 m)). Qed.
Lemma lem6213221 {_123774 : Type'} (f : nat -> _123774) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem6213222 {_123774 : Type'} (op : type1400 _123774) (m : nat) (f : nat -> _123774) : (term1388 _123774 op m f) = (term1426 _123774 op m f).
Proof. exact (MK_COMB (@lem6213220 _123774 op m) (@lem6213221 _123774 f)). Qed.
Lemma lem6213223 {_123774 : Type'} : (@eq _123774) = (@eq _123774).
Proof. exact (eq_refl (@eq _123774)). Qed.
Lemma lem6213224 {_123774 : Type'} (op : type1400 _123774) (m : nat) (f : nat -> _123774) : (term1427 _123774 op m f) = (term1428 _123774 op m f).
Proof. exact (MK_COMB (@lem6213223 _123774) (@lem6213222 _123774 op m f)). Qed.
Lemma lem6213225 {_123774 : Type'} (m : nat) (op : type1400 _123774) (f : nat -> _123774) : (term1389 _123774 m op f) = (term1389 _123774 m op f).
Proof. exact (eq_refl (term1389 _123774 m op f)). Qed.
Lemma lem6213226 {_123774 : Type'} (m : nat) (op : type1400 _123774) (f : nat -> _123774) : ((term1388 _123774 op m f) = (term1389 _123774 m op f)) = ((term1426 _123774 op m f) = (term1389 _123774 m op f)).
Proof. exact (MK_COMB (@lem6213224 _123774 op m f) (@lem6213225 _123774 m op f)). Qed.
Lemma lem6213229 {_123774 : Type'} (m : nat) (op : type1400 _123774) (f : nat -> _123774) : ((term1426 _123774 op m f) = (term1389 _123774 m op f)) = ((term1388 _123774 op m f) = (term1389 _123774 m op f)).
Proof. exact (SYM (@lem6213226 _123774 m op f)). Qed.
Lemma lem6213234 {_123419 : Type'} (f : nat -> _123419) (op : type1400 _123419) : term1429 _123419 f op.
Proof. exact (@lem6192133 _123419 f op). Qed.
Lemma lem6213235 {_123419 : Type'} (op : type1400 _123419) (f : nat -> _123419) : (term1429 _123419 f op) = (term1430 _123419 op f).
Proof. exact (eq_refl (term1429 _123419 f op)). Qed.
Lemma lem6213236 {_123419 : Type'} (op : type1400 _123419) (f : nat -> _123419) : term1430 _123419 op f.
Proof. exact (EQ_MP (@lem6213235 _123419 op f) (@lem6213234 _123419 f op)). Qed.
Lemma lem6213237 {_123419 : Type'} (op : type1400 _123419) (h1 : @monoidal _123419 op) : @monoidal _123419 op.
Proof. exact (h1). Qed.
Lemma lem6213238 {_123419 : Type'} (f : nat -> _123419) (op : type1400 _123419) (h1 : @monoidal _123419 op) : term1431 _123419 op f.
Proof. exact (@lem6213236 _123419 op f (@lem6213237 _123419 op h1)). Qed.
Lemma lem6213239 {_123419 : Type'} (f : nat -> _123419) (op : type1400 _123419) (h1 : @monoidal _123419 op) : term1432 _123419 op f.
Proof. exact (proj2 (@lem6213238 _123419 f op h1)). Qed.
Lemma lem6213240 {_123419 : Type'} (f : nat -> _123419) (m : nat) (op : type1400 _123419) (h1 : @monoidal _123419 op) : term1433 _123419 op f m.
Proof. exact (@lem6213239 _123419 f op h1 m). Qed.
Lemma lem6213241 {_123419 : Type'} (op : type1400 _123419) (m : nat) (f : nat -> _123419) : (term1433 _123419 op f m) = (term1434 _123419 op m f).
Proof. exact (eq_refl (term1433 _123419 op f m)). Qed.
Lemma lem6213242 {_123419 : Type'} (m : nat) (f : nat -> _123419) (op : type1400 _123419) (h1 : @monoidal _123419 op) : term1434 _123419 op m f.
Proof. exact (EQ_MP (@lem6213241 _123419 op m f) (@lem6213240 _123419 f m op h1)). Qed.
Lemma lem6213243 {_123419 : Type'} (m : nat) (f : nat -> _123419) (n : nat) (op : type1400 _123419) (h1 : @monoidal _123419 op) : term1435 _123419 op m f n.
Proof. exact (@lem6213242 _123419 m f op h1 n). Qed.
Lemma lem6213244 {_123419 : Type'} (op : type1400 _123419) (m : nat) (n : nat) (f : nat -> _123419) : (term1435 _123419 op m f n) = ((term1436 _123419 op m n f) = (term1437 _123419 op m n f)).
Proof. exact (eq_refl (term1435 _123419 op m f n)). Qed.
Lemma lem6213245 {_123419 : Type'} (m : nat) (n : nat) (f : nat -> _123419) (op : type1400 _123419) (h1 : @monoidal _123419 op) : (term1436 _123419 op m n f) = (term1437 _123419 op m n f).
Proof. exact (EQ_MP (@lem6213244 _123419 op m n f) (@lem6213243 _123419 m f n op h1)). Qed.
Lemma lem6213251 {_123419 : Type'} (f : nat -> _123419) (op : type1400 _123419) (h1 : @monoidal _123419 op) : term1438 _123419 f op.
Proof. exact (proj1 (@lem6213238 _123419 f op h1)). Qed.
Lemma lem6213252 {_123419 : Type'} (f : nat -> _123419) (m : nat) (op : type1400 _123419) (h1 : @monoidal _123419 op) : term1439 _123419 f op m.
Proof. exact (@lem6213251 _123419 f op h1 m). Qed.
Lemma lem6213253 {_123419 : Type'} (m : nat) (f : nat -> _123419) (op : type1400 _123419) : (term1439 _123419 f op m) = ((term1440 _123419 op m f) = (term1441 _123419 m f op)).
Proof. exact (eq_refl (term1439 _123419 f op m)). Qed.
Lemma lem6213254 {_123419 : Type'} (m : nat) (f : nat -> _123419) (op : type1400 _123419) (h1 : @monoidal _123419 op) : (term1440 _123419 op m f) = (term1441 _123419 m f op).
Proof. exact (EQ_MP (@lem6213253 _123419 m f op) (@lem6213252 _123419 f m op h1)). Qed.
Lemma lem6213260 {_123774 : Type'} (op : type1400 _123774) : (@monoidal _123774 op) = ((@monoidal _123774 op) = True).
Proof. exact (@lem7 (@monoidal _123774 op)). Qed.
Lemma lem6213265 : term6 = term1107.
Proof. exact (SYM (@lem6213179)). Qed.
Lemma lem6213266 (m : nat) : (term1421 m) = (term1421 m).
Proof. exact (eq_refl (term1421 m)). Qed.
Lemma lem6213267 (m : nat) : (term1423 m) = (term1442 m).
Proof. exact (MK_COMB (@lem6213266 m) (@lem6213265)). Qed.
Lemma lem6213268 {_123774 : Type'} (op : type1400 _123774) : (@iterate _123774 nat op) = (@iterate _123774 nat op).
Proof. exact (eq_refl (@iterate _123774 nat op)). Qed.
Lemma lem6213269 {_123774 : Type'} (op : type1400 _123774) (m : nat) : (term1425 _123774 op m) = (term1443 _123774 op m).
Proof. exact (MK_COMB (@lem6213268 _123774 op) (@lem6213267 m)). Qed.
Lemma lem6213270 {_123774 : Type'} (f : nat -> _123774) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem6213271 {_123774 : Type'} (op : type1400 _123774) (m : nat) (f : nat -> _123774) : (term1426 _123774 op m f) = (term1444 _123774 op m f).
Proof. exact (MK_COMB (@lem6213269 _123774 op m) (@lem6213270 _123774 f)). Qed.
Lemma lem6213273 {_123419 : Type'} (op : type1400 _123419) (m : nat) (n : nat) (f : nat -> _123419) : term1445 _123419 op m n f.
Proof. exact (fun h0 : @monoidal _123419 op => @lem6213245 _123419 m n f op h0). Qed.
Lemma lem6213274 {_123774 : Type'} (op : type1400 _123774) (m : nat) (n : nat) (f : nat -> _123774) : term1445 _123774 op m n f.
Proof. exact (@lem6213273 _123774 op m n f). Qed.
Lemma lem6213275 {_123774 : Type'} (op : type1400 _123774) (m : nat) (f : nat -> _123774) : term1446 _123774 op m f.
Proof. exact (@lem6213274 _123774 op (term18 m) (NUMERAL 0) f). Qed.
Lemma lem6213277 {_123774 : Type'} (op : type1400 _123774) (h1 : @monoidal _123774 op) : (@monoidal _123774 op) = True.
Proof. exact (EQ_MP (@lem6213260 _123774 op) (@lem6213181 _123774 op h1)). Qed.
Lemma lem6213278 {_123774 : Type'} (op : type1400 _123774) (h1 : @monoidal _123774 op) : True = (@monoidal _123774 op).
Proof. exact (SYM (@lem6213277 _123774 op h1)). Qed.
Lemma lem6213279 {_123774 : Type'} (op : type1400 _123774) (h1 : @monoidal _123774 op) : @monoidal _123774 op.
Proof. exact (EQ_MP (@lem6213278 _123774 op h1) (@lem0)). Qed.
Lemma lem6213280 {_123774 : Type'} (m : nat) (f : nat -> _123774) (op : type1400 _123774) (h1 : @monoidal _123774 op) : (term1444 _123774 op m f) = (term1447 _123774 op m f).
Proof. exact (@lem6213275 _123774 op m f (@lem6213279 _123774 op h1)). Qed.
Lemma lem6213282 {_2963 : Type'} (g : Prop) (t : _2963) (e : _2963) (g' : Prop) (t' : _2963) (e' : _2963) : term1448 _2963 g t e g' t' e'.
Proof. exact (EQ_MP (@lem14781 _2963 g t e g' t' e') (@lem15222 _2963 g t e g' t' e')). Qed.
Lemma lem6213283 {_2963 : Type'} (g : Prop) (t : _2963) (e : _2963) (g' : Prop) (t' : _2963) : term1449 _2963 g t e g' t'.
Proof. exact (fun e' : _2963 => @lem6213282 _2963 g t e g' t' e'). Qed.
Lemma lem6213284 {_2963 : Type'} (g : Prop) (t : _2963) (e : _2963) (g' : Prop) : term1450 _2963 g t e g'.
Proof. exact (fun t' : _2963 => @lem6213283 _2963 g t e g' t'). Qed.
Lemma lem6213285 {_2963 : Type'} (g : Prop) (t : _2963) (e : _2963) : term1451 _2963 g t e.
Proof. exact (fun g' : Prop => @lem6213284 _2963 g t e g'). Qed.
Lemma lem6213286 {_123774 : Type'} (g : Prop) (t : _123774) (e : _123774) : term1451 _123774 g t e.
Proof. exact (@lem6213285 _123774 g t e). Qed.
Lemma lem6213287 {_123774 : Type'} (op : type1400 _123774) (m : nat) (f : nat -> _123774) : term1452 _123774 op m f.
Proof. exact (@lem6213286 _123774 (term1108 m) (term1453 _123774 op m f) (term1454 _123774 op m f)). Qed.
Lemma lem6213288 {_123774 : Type'} (op : type1400 _123774) (m : nat) (f : nat -> _123774) (g' : Prop) : term1455 _123774 op m f g'.
Proof. exact (@lem6213287 _123774 op m f g'). Qed.
Lemma lem6213289 {_123774 : Type'} (op : type1400 _123774) (m : nat) (f : nat -> _123774) (g' : Prop) : (term1455 _123774 op m f g') = (term1456 _123774 op m f g').
Proof. exact (eq_refl (term1455 _123774 op m f g')). Qed.
Lemma lem6213290 {_123774 : Type'} (op : type1400 _123774) (m : nat) (f : nat -> _123774) (g' : Prop) : term1456 _123774 op m f g'.
Proof. exact (EQ_MP (@lem6213289 _123774 op m f g') (@lem6213288 _123774 op m f g')). Qed.
Lemma lem6213291 {_123774 : Type'} (op : type1400 _123774) (m : nat) (f : nat -> _123774) (g' : Prop) (t' : _123774) : term1457 _123774 op m f g' t'.
Proof. exact (@lem6213290 _123774 op m f g' t'). Qed.
Lemma lem6213292 {_123774 : Type'} (op : type1400 _123774) (m : nat) (f : nat -> _123774) (g' : Prop) (t' : _123774) : (term1457 _123774 op m f g' t') = (term1458 _123774 op m f g' t').
Proof. exact (eq_refl (term1457 _123774 op m f g' t')). Qed.
Lemma lem6213293 {_123774 : Type'} (op : type1400 _123774) (m : nat) (f : nat -> _123774) (g' : Prop) (t' : _123774) : term1458 _123774 op m f g' t'.
Proof. exact (EQ_MP (@lem6213292 _123774 op m f g' t') (@lem6213291 _123774 op m f g' t')). Qed.
Lemma lem6213294 {_123774 : Type'} (op : type1400 _123774) (m : nat) (f : nat -> _123774) (g' : Prop) (t' : _123774) (e' : _123774) : term1459 _123774 op m f g' t' e'.
Proof. exact (@lem6213293 _123774 op m f g' t' e'). Qed.
Lemma lem6213295 {_123774 : Type'} (op : type1400 _123774) (m : nat) (f : nat -> _123774) (g' : Prop) (t' : _123774) (e' : _123774) : (term1459 _123774 op m f g' t' e') = (term1460 _123774 op m f g' t' e').
Proof. exact (eq_refl (term1459 _123774 op m f g' t' e')). Qed.
Lemma lem6213296 {_123774 : Type'} (op : type1400 _123774) (m : nat) (f : nat -> _123774) (g' : Prop) (t' : _123774) (e' : _123774) : term1460 _123774 op m f g' t' e'.
Proof. exact (EQ_MP (@lem6213295 _123774 op m f g' t' e') (@lem6213294 _123774 op m f g' t' e')). Qed.
Lemma lem6213297 (m : nat) : (term1108 m) = (term1108 m).
Proof. exact (eq_refl (term1108 m)). Qed.
Lemma lem6213298 {_123774 : Type'} (op : type1400 _123774) (f : nat -> _123774) (m : nat) (t' : _123774) (e' : _123774) : term1461 _123774 op f m t' e'.
Proof. exact (@lem6213296 _123774 op m f (term1108 m) t' e'). Qed.
Lemma lem6213299 {_123774 : Type'} (op : type1400 _123774) (f : nat -> _123774) (m : nat) (t' : _123774) (e' : _123774) : term1462 _123774 op f m t' e'.
Proof. exact (@lem6213298 _123774 op f m t' e' (@lem6213297 m)). Qed.
Lemma lem6213304 {_123419 : Type'} (m : nat) (f : nat -> _123419) (op : type1400 _123419) : term1463 _123419 m f op.
Proof. exact (fun h0 : @monoidal _123419 op => @lem6213254 _123419 m f op h0). Qed.
Lemma lem6213305 {_123774 : Type'} (m : nat) (f : nat -> _123774) (op : type1400 _123774) : term1463 _123774 m f op.
Proof. exact (@lem6213304 _123774 m f op). Qed.
Lemma lem6213306 {_123774 : Type'} (m : nat) (f : nat -> _123774) (op : type1400 _123774) : term1464 _123774 m f op.
Proof. exact (@lem6213305 _123774 (term18 m) f op). Qed.
Lemma lem6213308 {_123774 : Type'} (op : type1400 _123774) (h1 : @monoidal _123774 op) : (@monoidal _123774 op) = True.
Proof. exact (EQ_MP (@lem6213260 _123774 op) (@lem6213181 _123774 op h1)). Qed.
Lemma lem6213309 {_123774 : Type'} (op : type1400 _123774) (h1 : @monoidal _123774 op) : True = (@monoidal _123774 op).
Proof. exact (SYM (@lem6213308 _123774 op h1)). Qed.
Lemma lem6213310 {_123774 : Type'} (op : type1400 _123774) (h1 : @monoidal _123774 op) : @monoidal _123774 op.
Proof. exact (EQ_MP (@lem6213309 _123774 op h1) (@lem0)). Qed.
Lemma lem6213311 {_123774 : Type'} (m : nat) (f : nat -> _123774) (op : type1400 _123774) (h1 : @monoidal _123774 op) : (term1454 _123774 op m f) = (term1465 _123774 m f op).
Proof. exact (@lem6213306 _123774 m f op (@lem6213310 _123774 op h1)). Qed.
Lemma lem6213360 {_123774 : Type'} (op : type1400 _123774) : op = op.
Proof. exact (eq_refl op). Qed.
Lemma lem6213361 {_123774 : Type'} (m : nat) (f : nat -> _123774) (op : type1400 _123774) (h1 : @monoidal _123774 op) : (term1466 _123774 op m f) = (term1467 _123774 m f op).
Proof. exact (MK_COMB (@lem6213360 _123774 op) (@lem6213311 _123774 m f op h1)). Qed.
Lemma lem6213410 {_123774 : Type'} (f : nat -> _123774) : (term1468 _123774 f) = (term1468 _123774 f).
Proof. exact (eq_refl (term1468 _123774 f)). Qed.
Lemma lem6213411 {_123774 : Type'} (m : nat) (f : nat -> _123774) (op : type1400 _123774) (h1 : @monoidal _123774 op) : (term1453 _123774 op m f) = (term1469 _123774 m op f).
Proof. exact (MK_COMB (@lem6213361 _123774 m f op h1) (@lem6213410 _123774 f)). Qed.
Lemma lem6213460 {_123774 : Type'} (m : nat) (f : nat -> _123774) (op : type1400 _123774) (h1 : @monoidal _123774 op) : term1470 _123774 m op f.
Proof. exact (fun h0 : term1108 m => @lem6213411 _123774 m f op h1). Qed.
Lemma lem6213461 {_123774 : Type'} (m : nat) (op : type1400 _123774) (f : nat -> _123774) (e' : _123774) : term1471 _123774 m op f e'.
Proof. exact (@lem6213299 _123774 op f m (term1469 _123774 m op f) e'). Qed.
Lemma lem6213462 {_123774 : Type'} (m : nat) (f : nat -> _123774) (e' : _123774) (op : type1400 _123774) (h1 : @monoidal _123774 op) : term1472 _123774 m op f e'.
Proof. exact (@lem6213461 _123774 m op f e' (@lem6213460 _123774 m f op h1)). Qed.
Lemma lem6213467 {_123419 : Type'} (m : nat) (f : nat -> _123419) (op : type1400 _123419) : term1463 _123419 m f op.
Proof. exact (fun h0 : @monoidal _123419 op => @lem6213254 _123419 m f op h0). Qed.
Lemma lem6213468 {_123774 : Type'} (m : nat) (f : nat -> _123774) (op : type1400 _123774) : term1463 _123774 m f op.
Proof. exact (@lem6213467 _123774 m f op). Qed.
Lemma lem6213469 {_123774 : Type'} (m : nat) (f : nat -> _123774) (op : type1400 _123774) : term1464 _123774 m f op.
Proof. exact (@lem6213468 _123774 (term18 m) f op). Qed.
Lemma lem6213471 {_123774 : Type'} (op : type1400 _123774) (h1 : @monoidal _123774 op) : (@monoidal _123774 op) = True.
Proof. exact (EQ_MP (@lem6213260 _123774 op) (@lem6213181 _123774 op h1)). Qed.
Lemma lem6213472 {_123774 : Type'} (op : type1400 _123774) (h1 : @monoidal _123774 op) : True = (@monoidal _123774 op).
Proof. exact (SYM (@lem6213471 _123774 op h1)). Qed.
Lemma lem6213473 {_123774 : Type'} (op : type1400 _123774) (h1 : @monoidal _123774 op) : @monoidal _123774 op.
Proof. exact (EQ_MP (@lem6213472 _123774 op h1) (@lem0)). Qed.
Lemma lem6213474 {_123774 : Type'} (m : nat) (f : nat -> _123774) (op : type1400 _123774) (h1 : @monoidal _123774 op) : (term1454 _123774 op m f) = (term1465 _123774 m f op).
Proof. exact (@lem6213469 _123774 m f op (@lem6213473 _123774 op h1)). Qed.
Lemma lem6213523 {_123774 : Type'} (m : nat) (f : nat -> _123774) (op : type1400 _123774) (h1 : @monoidal _123774 op) : term1473 _123774 m f op.
Proof. exact (fun h0 : term1474 m => @lem6213474 _123774 m f op h1). Qed.
Lemma lem6213524 {_123774 : Type'} (m : nat) (f : nat -> _123774) (op : type1400 _123774) (h1 : @monoidal _123774 op) : term1475 _123774 m f op.
Proof. exact (@lem6213462 _123774 m f (term1465 _123774 m f op) op h1). Qed.
Lemma lem6213525 {_123774 : Type'} (m : nat) (f : nat -> _123774) (op : type1400 _123774) (h1 : @monoidal _123774 op) : (term1447 _123774 op m f) = (term1476 _123774 m f op).
Proof. exact (@lem6213524 _123774 m f op h1 (@lem6213523 _123774 m f op h1)). Qed.
Lemma lem6213751 {_123774 : Type'} (m : nat) (f : nat -> _123774) (op : type1400 _123774) (h1 : @monoidal _123774 op) : (term1444 _123774 op m f) = (term1476 _123774 m f op).
Proof. exact (TRANS (@lem6213280 _123774 m f op h1) (@lem6213525 _123774 m f op h1)). Qed.
Lemma lem6213752 {_123774 : Type'} (m : nat) (f : nat -> _123774) (op : type1400 _123774) (h1 : @monoidal _123774 op) : (term1426 _123774 op m f) = (term1476 _123774 m f op).
Proof. exact (TRANS (@lem6213271 _123774 op m f) (@lem6213751 _123774 m f op h1)). Qed.
Lemma lem6213753 {_123774 : Type'} : (@eq _123774) = (@eq _123774).
Proof. exact (eq_refl (@eq _123774)). Qed.
Lemma lem6213754 {_123774 : Type'} (m : nat) (f : nat -> _123774) (op : type1400 _123774) (h1 : @monoidal _123774 op) : (term1428 _123774 op m f) = (term1477 _123774 m f op).
Proof. exact (MK_COMB (@lem6213753 _123774) (@lem6213752 _123774 m f op h1)). Qed.
Lemma lem6213981 {_123419 : Type'} (m : nat) (f : nat -> _123419) (op : type1400 _123419) : term1463 _123419 m f op.
Proof. exact (fun h0 : @monoidal _123419 op => @lem6213254 _123419 m f op h0). Qed.
Lemma lem6213982 {_123774 : Type'} (m : nat) (f : nat -> _123774) (op : type1400 _123774) : term1463 _123774 m f op.
Proof. exact (@lem6213981 _123774 m f op). Qed.
Lemma lem6213983 {_123774 : Type'} (m : nat) (f : nat -> _123774) (op : type1400 _123774) : term1478 _123774 m f op.
Proof. exact (@lem6213982 _123774 m (term1479 _123774 op f) op). Qed.
Lemma lem6213985 {_123774 : Type'} (op : type1400 _123774) (h1 : @monoidal _123774 op) : (@monoidal _123774 op) = True.
Proof. exact (EQ_MP (@lem6213260 _123774 op) (@lem6213181 _123774 op h1)). Qed.
Lemma lem6213986 {_123774 : Type'} (op : type1400 _123774) (h1 : @monoidal _123774 op) : True = (@monoidal _123774 op).
Proof. exact (SYM (@lem6213985 _123774 op h1)). Qed.
Lemma lem6213987 {_123774 : Type'} (op : type1400 _123774) (h1 : @monoidal _123774 op) : @monoidal _123774 op.
Proof. exact (EQ_MP (@lem6213986 _123774 op h1) (@lem0)). Qed.
Lemma lem6213988 {_123774 : Type'} (m : nat) (f : nat -> _123774) (op : type1400 _123774) (h1 : @monoidal _123774 op) : (term1389 _123774 m op f) = (term1480 _123774 m f op).
Proof. exact (@lem6213983 _123774 m f op (@lem6213987 _123774 op h1)). Qed.
Lemma lem6213992 {_2963 : Type'} (g : Prop) (t : _2963) (e : _2963) (g' : Prop) (t' : _2963) (e' : _2963) : term1448 _2963 g t e g' t' e'.
Proof. exact (EQ_MP (@lem14781 _2963 g t e g' t' e') (@lem15222 _2963 g t e g' t' e')). Qed.
Lemma lem6213993 {_2963 : Type'} (g : Prop) (t : _2963) (e : _2963) (g' : Prop) (t' : _2963) : term1449 _2963 g t e g' t'.
Proof. exact (fun e' : _2963 => @lem6213992 _2963 g t e g' t' e'). Qed.
Lemma lem6213994 {_2963 : Type'} (g : Prop) (t : _2963) (e : _2963) (g' : Prop) : term1450 _2963 g t e g'.
Proof. exact (fun t' : _2963 => @lem6213993 _2963 g t e g' t'). Qed.
Lemma lem6213995 {_2963 : Type'} (g : Prop) (t : _2963) (e : _2963) : term1451 _2963 g t e.
Proof. exact (fun g' : Prop => @lem6213994 _2963 g t e g'). Qed.
Lemma lem6213996 {_123774 : Type'} (g : Prop) (t : _123774) (e : _123774) : term1451 _123774 g t e.
Proof. exact (@lem6213995 _123774 g t e). Qed.
Lemma lem6213997 {_123774 : Type'} (m : nat) (f : nat -> _123774) (op : type1400 _123774) : term1481 _123774 m f op.
Proof. exact (@lem6213996 _123774 (m = (NUMERAL 0)) (term1482 _123774 op f) (@neutral _123774 op)). Qed.
Lemma lem6213998 {_123774 : Type'} (m : nat) (f : nat -> _123774) (op : type1400 _123774) (g' : Prop) : term1483 _123774 m f op g'.
Proof. exact (@lem6213997 _123774 m f op g'). Qed.
Lemma lem6213999 {_123774 : Type'} (m : nat) (f : nat -> _123774) (op : type1400 _123774) (g' : Prop) : (term1483 _123774 m f op g') = (term1484 _123774 m f op g').
Proof. exact (eq_refl (term1483 _123774 m f op g')). Qed.
Lemma lem6214000 {_123774 : Type'} (m : nat) (f : nat -> _123774) (op : type1400 _123774) (g' : Prop) : term1484 _123774 m f op g'.
Proof. exact (EQ_MP (@lem6213999 _123774 m f op g') (@lem6213998 _123774 m f op g')). Qed.
Lemma lem6214001 {_123774 : Type'} (m : nat) (f : nat -> _123774) (op : type1400 _123774) (g' : Prop) (t' : _123774) : term1485 _123774 m f op g' t'.
Proof. exact (@lem6214000 _123774 m f op g' t'). Qed.
Lemma lem6214002 {_123774 : Type'} (m : nat) (f : nat -> _123774) (op : type1400 _123774) (g' : Prop) (t' : _123774) : (term1485 _123774 m f op g' t') = (term1486 _123774 m f op g' t').
Proof. exact (eq_refl (term1485 _123774 m f op g' t')). Qed.
Lemma lem6214003 {_123774 : Type'} (m : nat) (f : nat -> _123774) (op : type1400 _123774) (g' : Prop) (t' : _123774) : term1486 _123774 m f op g' t'.
Proof. exact (EQ_MP (@lem6214002 _123774 m f op g' t') (@lem6214001 _123774 m f op g' t')). Qed.
Lemma lem6214004 {_123774 : Type'} (m : nat) (f : nat -> _123774) (op : type1400 _123774) (g' : Prop) (t' : _123774) (e' : _123774) : term1487 _123774 m f op g' t' e'.
Proof. exact (@lem6214003 _123774 m f op g' t' e'). Qed.
Lemma lem6214005 {_123774 : Type'} (m : nat) (f : nat -> _123774) (op : type1400 _123774) (g' : Prop) (t' : _123774) (e' : _123774) : (term1487 _123774 m f op g' t' e') = (term1488 _123774 m f op g' t' e').
Proof. exact (eq_refl (term1487 _123774 m f op g' t' e')). Qed.
Lemma lem6214006 {_123774 : Type'} (m : nat) (f : nat -> _123774) (op : type1400 _123774) (g' : Prop) (t' : _123774) (e' : _123774) : term1488 _123774 m f op g' t' e'.
Proof. exact (EQ_MP (@lem6214005 _123774 m f op g' t' e') (@lem6214004 _123774 m f op g' t' e')). Qed.
Lemma lem6214009 (m : nat) : (m = (NUMERAL 0)) = (m = (NUMERAL 0)).
Proof. exact (eq_refl (m = (NUMERAL 0))). Qed.
Lemma lem6214010 {_123774 : Type'} (f : nat -> _123774) (op : type1400 _123774) (m : nat) (t' : _123774) (e' : _123774) : term1489 _123774 f op m t' e'.
Proof. exact (@lem6214006 _123774 m f op (m = (NUMERAL 0)) t' e'). Qed.
Lemma lem6214011 {_123774 : Type'} (f : nat -> _123774) (op : type1400 _123774) (m : nat) (t' : _123774) (e' : _123774) : term1490 _123774 f op m t' e'.
Proof. exact (@lem6214010 _123774 f op m t' e' (@lem6214009 m)). Qed.
Lemma lem6214014 {A B : Type'} (f : A -> B) (y : A) : (term1491 A B f y) = (f y).
Proof. exact (EQ_MP (@lem1810 A B f y) (@lem1809 A B f y)). Qed.
Lemma lem6214015 {_123774 : Type'} (f : nat -> _123774) (y : nat) : (term1492 _123774 f y) = (f y).
Proof. exact (@lem6214014 nat _123774 f y). Qed.
Lemma lem6214016 {_123774 : Type'} (op : type1400 _123774) (f : nat -> _123774) : (term1493 _123774 op f) = (term1482 _123774 op f).
Proof. exact (@lem6214015 _123774 (term1479 _123774 op f) (NUMERAL 0)). Qed.
Lemma lem6214017 {_123774 : Type'} (op : type1400 _123774) (f : nat -> _123774) (i : nat) : (term1494 _123774 op f i) = (term1495 _123774 op f i).
Proof. exact (eq_refl (term1494 _123774 op f i)). Qed.
Lemma lem6214018 {_123774 : Type'} (op : type1400 _123774) (f : nat -> _123774) : (term1496 _123774 op f) = (term1479 _123774 op f).
Proof. exact (fun_ext (fun i : nat => @lem6214017 _123774 op f i)). Qed.
Lemma lem6214019 : (NUMERAL 0) = (NUMERAL 0).
Proof. exact (eq_refl (NUMERAL 0)). Qed.
Lemma lem6214020 {_123774 : Type'} (op : type1400 _123774) (f : nat -> _123774) : (term1493 _123774 op f) = (term1482 _123774 op f).
Proof. exact (MK_COMB (@lem6214018 _123774 op f) (@lem6214019)). Qed.
Lemma lem6214021 {_123774 : Type'} : (@eq _123774) = (@eq _123774).
Proof. exact (eq_refl (@eq _123774)). Qed.
Lemma lem6214022 {_123774 : Type'} (op : type1400 _123774) (f : nat -> _123774) : (term1497 _123774 op f) = (term1498 _123774 op f).
Proof. exact (MK_COMB (@lem6214021 _123774) (@lem6214020 _123774 op f)). Qed.
Lemma lem6214023 {_123774 : Type'} (op : type1400 _123774) (f : nat -> _123774) : (term1482 _123774 op f) = (term1499 _123774 op f).
Proof. exact (eq_refl (term1482 _123774 op f)). Qed.
Lemma lem6214024 {_123774 : Type'} (op : type1400 _123774) (f : nat -> _123774) : ((term1493 _123774 op f) = (term1482 _123774 op f)) = ((term1482 _123774 op f) = (term1499 _123774 op f)).
Proof. exact (MK_COMB (@lem6214022 _123774 op f) (@lem6214023 _123774 op f)). Qed.
Lemma lem6214025 {_123774 : Type'} (op : type1400 _123774) (f : nat -> _123774) : (term1482 _123774 op f) = (term1499 _123774 op f).
Proof. exact (EQ_MP (@lem6214024 _123774 op f) (@lem6214016 _123774 op f)). Qed.
Lemma lem6214027 : term6 = term1107.
Proof. exact (SYM (@lem6213179)). Qed.
Lemma lem6214028 : term1416 = term1416.
Proof. exact (eq_refl term1416). Qed.
Lemma lem6214029 : term1418 = term1500.
Proof. exact (MK_COMB (@lem6214028) (@lem6214027)). Qed.
Lemma lem6214030 {_123774 : Type'} (f : nat -> _123774) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem6214031 {_123774 : Type'} (f : nat -> _123774) : (term1501 _123774 f) = (term1502 _123774 f).
Proof. exact (MK_COMB (@lem6214030 _123774 f) (@lem6214029)). Qed.
Lemma lem6214032 {_123774 : Type'} (op : type1400 _123774) (f : nat -> _123774) : (term1503 _123774 op f) = (term1503 _123774 op f).
Proof. exact (eq_refl (term1503 _123774 op f)). Qed.
Lemma lem6214033 {_123774 : Type'} (op : type1400 _123774) (f : nat -> _123774) : (term1499 _123774 op f) = (term1504 _123774 op f).
Proof. exact (MK_COMB (@lem6214032 _123774 op f) (@lem6214031 _123774 f)). Qed.
Lemma lem6214034 {_123774 : Type'} (op : type1400 _123774) (f : nat -> _123774) : (term1482 _123774 op f) = (term1504 _123774 op f).
Proof. exact (TRANS (@lem6214025 _123774 op f) (@lem6214033 _123774 op f)). Qed.
Lemma lem6214035 {_123774 : Type'} (m : nat) (op : type1400 _123774) (f : nat -> _123774) : term1505 _123774 m op f.
Proof. exact (fun h0 : m = (NUMERAL 0) => @lem6214034 _123774 op f). Qed.
Lemma lem6214036 {_123774 : Type'} (m : nat) (op : type1400 _123774) (f : nat -> _123774) (e' : _123774) : term1506 _123774 m op f e'.
Proof. exact (@lem6214011 _123774 f op m (term1504 _123774 op f) e'). Qed.
Lemma lem6214037 {_123774 : Type'} (m : nat) (op : type1400 _123774) (f : nat -> _123774) (e' : _123774) : term1507 _123774 m op f e'.
Proof. exact (@lem6214036 _123774 m op f e' (@lem6214035 _123774 m op f)). Qed.
Lemma lem6214052 {_123774 : Type'} (op : type1400 _123774) : (@neutral _123774 op) = (@neutral _123774 op).
Proof. exact (eq_refl (@neutral _123774 op)). Qed.
Lemma lem6214053 {_123774 : Type'} (m : nat) (op : type1400 _123774) : term1508 _123774 m op.
Proof. exact (fun h0 : term1125 m => @lem6214052 _123774 op). Qed.
Lemma lem6214054 {_123774 : Type'} (m : nat) (f : nat -> _123774) (op : type1400 _123774) : term1509 _123774 m f op.
Proof. exact (@lem6214037 _123774 m op f (@neutral _123774 op)). Qed.
Lemma lem6214055 {_123774 : Type'} (m : nat) (f : nat -> _123774) (op : type1400 _123774) : (term1480 _123774 m f op) = (term1510 _123774 m f op).
Proof. exact (@lem6214054 _123774 m f op (@lem6214053 _123774 m op)). Qed.
Lemma lem6214104 {_123774 : Type'} (m : nat) (f : nat -> _123774) (op : type1400 _123774) (h1 : @monoidal _123774 op) : (term1389 _123774 m op f) = (term1510 _123774 m f op).
Proof. exact (TRANS (@lem6213988 _123774 m f op h1) (@lem6214055 _123774 m f op)). Qed.
Lemma lem6214105 {_123774 : Type'} (m : nat) (f : nat -> _123774) (op : type1400 _123774) (h1 : @monoidal _123774 op) : ((term1426 _123774 op m f) = (term1389 _123774 m op f)) = ((term1476 _123774 m f op) = (term1510 _123774 m f op)).
Proof. exact (MK_COMB (@lem6213754 _123774 m f op h1) (@lem6214104 _123774 m f op h1)). Qed.
Lemma lem6214381 {_123774 : Type'} (m : nat) (f : nat -> _123774) (op : type1400 _123774) (h1 : @monoidal _123774 op) : ((term1476 _123774 m f op) = (term1510 _123774 m f op)) = ((term1426 _123774 op m f) = (term1389 _123774 m op f)).
Proof. exact (SYM (@lem6214105 _123774 m f op h1)). Qed.
Lemma lem6214385 (m : nat) : (term1108 m) = (m = (NUMERAL 0)).
Proof. exact (EQ_MP (@lem6213175 m) (@lem6213174 m)). Qed.
Lemma lem6214388 {_123774 : Type'} : (@COND _123774) = (@COND _123774).
Proof. exact (eq_refl (@COND _123774)). Qed.
Lemma lem6214389 {_123774 : Type'} (m : nat) : (term1511 _123774 m) = (term1512 _123774 m).
Proof. exact (MK_COMB (@lem6214388 _123774) (@lem6214385 m)). Qed.
Lemma lem6214394 {_123774 : Type'} (m : nat) (op : type1400 _123774) (f : nat -> _123774) : (term1469 _123774 m op f) = (term1469 _123774 m op f).
Proof. exact (eq_refl (term1469 _123774 m op f)). Qed.
Lemma lem6214395 {_123774 : Type'} (m : nat) (op : type1400 _123774) (f : nat -> _123774) : (term1513 _123774 m op f) = (term1514 _123774 m op f).
Proof. exact (MK_COMB (@lem6214389 _123774 m) (@lem6214394 _123774 m op f)). Qed.
Lemma lem6214400 {_123774 : Type'} (m : nat) (f : nat -> _123774) (op : type1400 _123774) : (term1465 _123774 m f op) = (term1465 _123774 m f op).
Proof. exact (eq_refl (term1465 _123774 m f op)). Qed.
Lemma lem6214401 {_123774 : Type'} (m : nat) (f : nat -> _123774) (op : type1400 _123774) : (term1476 _123774 m f op) = (term1515 _123774 m f op).
Proof. exact (MK_COMB (@lem6214395 _123774 m op f) (@lem6214400 _123774 m f op)). Qed.
Lemma lem6214404 {_123774 : Type'} : (@eq _123774) = (@eq _123774).
Proof. exact (eq_refl (@eq _123774)). Qed.
Lemma lem6214405 {_123774 : Type'} (m : nat) (f : nat -> _123774) (op : type1400 _123774) : (term1477 _123774 m f op) = (term1516 _123774 m f op).
Proof. exact (MK_COMB (@lem6214404 _123774) (@lem6214401 _123774 m f op)). Qed.
Lemma lem6214410 {_123774 : Type'} (m : nat) (f : nat -> _123774) (op : type1400 _123774) : (term1510 _123774 m f op) = (term1510 _123774 m f op).
Proof. exact (eq_refl (term1510 _123774 m f op)). Qed.
Lemma lem6214411 {_123774 : Type'} (m : nat) (f : nat -> _123774) (op : type1400 _123774) : ((term1476 _123774 m f op) = (term1510 _123774 m f op)) = ((term1515 _123774 m f op) = (term1510 _123774 m f op)).
Proof. exact (MK_COMB (@lem6214405 _123774 m f op) (@lem6214410 _123774 m f op)). Qed.
Lemma lem6214414 {_123774 : Type'} (m : nat) (f : nat -> _123774) (op : type1400 _123774) : ((term1515 _123774 m f op) = (term1510 _123774 m f op)) = ((term1476 _123774 m f op) = (term1510 _123774 m f op)).
Proof. exact (SYM (@lem6214411 _123774 m f op)). Qed.
Lemma lem6214415 {_123774 : Type'} (_474 : _123774) (_475 : Prop) (_476 : _123774 -> Prop) (_477 : _123774) : (term1517 _123774 _476 _475 _474 _477) = (term1518 _123774 _474 _475 _476 _477).
Proof. exact (@lem13473 _123774 _474 _475 _476 _477). Qed.
Lemma lem6214416 {_123774 : Type'} (_474 : _123774) (_475 : Prop) (m : nat) (f : nat -> _123774) (op : type1400 _123774) (_477 : _123774) : (term1519 _123774 m f op _475 _474 _477) = (term1520 _123774 _474 _475 m f op _477).
Proof. exact (@lem6214415 _123774 _474 _475 (term1521 _123774 m f op) _477). Qed.
Lemma lem6214417 {_123774 : Type'} (m : nat) (f : nat -> _123774) (op : type1400 _123774) : (term1522 _123774 m f op) = (term1523 _123774 m f op).
Proof. exact (@lem6214416 _123774 (term1469 _123774 m op f) (m = (NUMERAL 0)) m f op (term1465 _123774 m f op)). Qed.
Lemma lem6214418 {_123774 : Type'} (m : nat) (f : nat -> _123774) (op : type1400 _123774) : (term1524 _123774 m f op) = ((term1465 _123774 m f op) = (term1510 _123774 m f op)).
Proof. exact (eq_refl (term1524 _123774 m f op)). Qed.
Lemma lem6214419 (m : nat) : (term1525 m) = (term1525 m).
Proof. exact (eq_refl (term1525 m)). Qed.
Lemma lem6214420 {_123774 : Type'} (m : nat) (f : nat -> _123774) (op : type1400 _123774) : (term1526 _123774 m f op) = (term1527 _123774 m f op).
Proof. exact (MK_COMB (@lem6214419 m) (@lem6214418 _123774 m f op)). Qed.
Lemma lem6214421 {_123774 : Type'} (m : nat) (f : nat -> _123774) (op : type1400 _123774) : (term1528 _123774 m op f) = ((term1469 _123774 m op f) = (term1510 _123774 m f op)).
Proof. exact (eq_refl (term1528 _123774 m op f)). Qed.
Lemma lem6214422 (m : nat) : (term1529 m) = (term1529 m).
Proof. exact (eq_refl (term1529 m)). Qed.
Lemma lem6214423 {_123774 : Type'} (m : nat) (f : nat -> _123774) (op : type1400 _123774) : (term1530 _123774 m op f) = (term1531 _123774 m f op).
Proof. exact (MK_COMB (@lem6214422 m) (@lem6214421 _123774 m f op)). Qed.
Lemma lem6214424 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6214425 {_123774 : Type'} (m : nat) (f : nat -> _123774) (op : type1400 _123774) : (term1532 _123774 m op f) = (term1533 _123774 m f op).
Proof. exact (MK_COMB (@lem6214424) (@lem6214423 _123774 m f op)). Qed.
Lemma lem6214426 {_123774 : Type'} (m : nat) (f : nat -> _123774) (op : type1400 _123774) : (term1523 _123774 m f op) = (term1534 _123774 m f op).
Proof. exact (MK_COMB (@lem6214425 _123774 m f op) (@lem6214420 _123774 m f op)). Qed.
Lemma lem6214427 {_123774 : Type'} (m : nat) (f : nat -> _123774) (op : type1400 _123774) : (term1522 _123774 m f op) = ((term1515 _123774 m f op) = (term1510 _123774 m f op)).
Proof. exact (eq_refl (term1522 _123774 m f op)). Qed.
Lemma lem6214428 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6214429 {_123774 : Type'} (m : nat) (f : nat -> _123774) (op : type1400 _123774) : (term1535 _123774 m f op) = (term1536 _123774 m f op).
Proof. exact (MK_COMB (@lem6214428) (@lem6214427 _123774 m f op)). Qed.
Lemma lem6214430 {_123774 : Type'} (m : nat) (f : nat -> _123774) (op : type1400 _123774) : ((term1522 _123774 m f op) = (term1523 _123774 m f op)) = (((term1515 _123774 m f op) = (term1510 _123774 m f op)) = (term1534 _123774 m f op)).
Proof. exact (MK_COMB (@lem6214429 _123774 m f op) (@lem6214426 _123774 m f op)). Qed.
Lemma lem6214431 {_123774 : Type'} (m : nat) (f : nat -> _123774) (op : type1400 _123774) : ((term1515 _123774 m f op) = (term1510 _123774 m f op)) = (term1534 _123774 m f op).
Proof. exact (EQ_MP (@lem6214430 _123774 m f op) (@lem6214417 _123774 m f op)). Qed.
Lemma lem6214432 {_123774 : Type'} (m : nat) (f : nat -> _123774) (op : type1400 _123774) : (term1534 _123774 m f op) = ((term1515 _123774 m f op) = (term1510 _123774 m f op)).
Proof. exact (SYM (@lem6214431 _123774 m f op)). Qed.
Lemma lem6214433 (m : nat) (h1 : m = (NUMERAL 0)) : m = (NUMERAL 0).
Proof. exact (h1). Qed.
Lemma lem6214434 (m : nat) : (m = (NUMERAL 0)) = ((m = (NUMERAL 0)) = True).
Proof. exact (@lem7 (m = (NUMERAL 0))). Qed.
Lemma lem6214435 (m : nat) (h1 : m = (NUMERAL 0)) : (m = (NUMERAL 0)) = True.
Proof. exact (EQ_MP (@lem6214434 m) (@lem6214433 m h1)). Qed.
Lemma lem6214436 {_123774 : Type'} (m : nat) (f : nat -> _123774) (op : type1400 _123774) : (term1537 _123774 m f op) = (term1537 _123774 m f op).
Proof. exact (eq_refl (term1537 _123774 m f op)). Qed.
Lemma lem6214437 {_123774 : Type'} (f : nat -> _123774) (op : type1400 _123774) (m : nat) (h1 : m = (NUMERAL 0)) : (term1538 _123774 f op m) = (term1539 _123774 m f op).
Proof. exact (MK_COMB (@lem6214436 _123774 m f op) (@lem6214435 m h1)). Qed.
Lemma lem6214438 {_123774 : Type'} (m : nat) (f : nat -> _123774) (op : type1400 _123774) : (term1539 _123774 m f op) = ((term1469 _123774 m op f) = (term1540 _123774 f op)).
Proof. exact (eq_refl (term1539 _123774 m f op)). Qed.
Lemma lem6214439 {_123774 : Type'} (f : nat -> _123774) (op : type1400 _123774) (m : nat) : (term1541 _123774 f op m) = (term1541 _123774 f op m).
Proof. exact (eq_refl (term1541 _123774 f op m)). Qed.
Lemma lem6214440 {_123774 : Type'} (m : nat) (f : nat -> _123774) (op : type1400 _123774) : ((term1538 _123774 f op m) = (term1539 _123774 m f op)) = ((term1538 _123774 f op m) = ((term1469 _123774 m op f) = (term1540 _123774 f op))).
Proof. exact (MK_COMB (@lem6214439 _123774 f op m) (@lem6214438 _123774 m f op)). Qed.
Lemma lem6214441 {_123774 : Type'} (m : nat) (f : nat -> _123774) (op : type1400 _123774) : (term1538 _123774 f op m) = ((term1469 _123774 m op f) = (term1510 _123774 m f op)).
Proof. exact (eq_refl (term1538 _123774 f op m)). Qed.
Lemma lem6214442 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6214443 {_123774 : Type'} (m : nat) (f : nat -> _123774) (op : type1400 _123774) : (term1541 _123774 f op m) = (term1542 _123774 m f op).
Proof. exact (MK_COMB (@lem6214442) (@lem6214441 _123774 m f op)). Qed.
Lemma lem6214444 {_123774 : Type'} (m : nat) (f : nat -> _123774) (op : type1400 _123774) : ((term1469 _123774 m op f) = (term1540 _123774 f op)) = ((term1469 _123774 m op f) = (term1540 _123774 f op)).
Proof. exact (eq_refl ((term1469 _123774 m op f) = (term1540 _123774 f op))). Qed.
Lemma lem6214445 {_123774 : Type'} (m : nat) (f : nat -> _123774) (op : type1400 _123774) : ((term1538 _123774 f op m) = ((term1469 _123774 m op f) = (term1540 _123774 f op))) = (((term1469 _123774 m op f) = (term1510 _123774 m f op)) = ((term1469 _123774 m op f) = (term1540 _123774 f op))).
Proof. exact (MK_COMB (@lem6214443 _123774 m f op) (@lem6214444 _123774 m f op)). Qed.
Lemma lem6214446 {_123774 : Type'} (m : nat) (f : nat -> _123774) (op : type1400 _123774) : ((term1538 _123774 f op m) = (term1539 _123774 m f op)) = (((term1469 _123774 m op f) = (term1510 _123774 m f op)) = ((term1469 _123774 m op f) = (term1540 _123774 f op))).
Proof. exact (TRANS (@lem6214440 _123774 m f op) (@lem6214445 _123774 m f op)). Qed.
Lemma lem6214447 {_123774 : Type'} (f : nat -> _123774) (op : type1400 _123774) (m : nat) (h1 : m = (NUMERAL 0)) : ((term1469 _123774 m op f) = (term1510 _123774 m f op)) = ((term1469 _123774 m op f) = (term1540 _123774 f op)).
Proof. exact (EQ_MP (@lem6214446 _123774 m f op) (@lem6214437 _123774 f op m h1)). Qed.
Lemma lem6214448 {_123774 : Type'} (f : nat -> _123774) (op : type1400 _123774) (m : nat) (h1 : m = (NUMERAL 0)) : ((term1469 _123774 m op f) = (term1540 _123774 f op)) = ((term1469 _123774 m op f) = (term1510 _123774 m f op)).
Proof. exact (SYM (@lem6214447 _123774 f op m h1)). Qed.
Lemma lem6214449 (m : nat) (h1 : term1125 m) : term1125 m.
Proof. exact (h1). Qed.
Lemma lem6214450 (m : nat) : term1543 m.
Proof. exact (@lem82 (m = (NUMERAL 0))). Qed.
Lemma lem6214451 (m : nat) (h1 : term1125 m) : (m = (NUMERAL 0)) = False.
Proof. exact (@lem6214450 m (@lem6214449 m h1)). Qed.
Lemma lem6214452 {_123774 : Type'} (m : nat) (f : nat -> _123774) (op : type1400 _123774) : (term1544 _123774 m f op) = (term1544 _123774 m f op).
Proof. exact (eq_refl (term1544 _123774 m f op)). Qed.
Lemma lem6214453 {_123774 : Type'} (f : nat -> _123774) (op : type1400 _123774) (m : nat) (h1 : term1125 m) : (term1545 _123774 f op m) = (term1546 _123774 m f op).
Proof. exact (MK_COMB (@lem6214452 _123774 m f op) (@lem6214451 m h1)). Qed.
Lemma lem6214454 {_123774 : Type'} (m : nat) (f : nat -> _123774) (op : type1400 _123774) : (term1546 _123774 m f op) = ((term1465 _123774 m f op) = (term1547 _123774 f op)).
Proof. exact (eq_refl (term1546 _123774 m f op)). Qed.
Lemma lem6214455 {_123774 : Type'} (f : nat -> _123774) (op : type1400 _123774) (m : nat) : (term1548 _123774 f op m) = (term1548 _123774 f op m).
Proof. exact (eq_refl (term1548 _123774 f op m)). Qed.
Lemma lem6214456 {_123774 : Type'} (m : nat) (f : nat -> _123774) (op : type1400 _123774) : ((term1545 _123774 f op m) = (term1546 _123774 m f op)) = ((term1545 _123774 f op m) = ((term1465 _123774 m f op) = (term1547 _123774 f op))).
Proof. exact (MK_COMB (@lem6214455 _123774 f op m) (@lem6214454 _123774 m f op)). Qed.
Lemma lem6214457 {_123774 : Type'} (m : nat) (f : nat -> _123774) (op : type1400 _123774) : (term1545 _123774 f op m) = ((term1465 _123774 m f op) = (term1510 _123774 m f op)).
Proof. exact (eq_refl (term1545 _123774 f op m)). Qed.
Lemma lem6214458 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6214459 {_123774 : Type'} (m : nat) (f : nat -> _123774) (op : type1400 _123774) : (term1548 _123774 f op m) = (term1549 _123774 m f op).
Proof. exact (MK_COMB (@lem6214458) (@lem6214457 _123774 m f op)). Qed.
Lemma lem6214460 {_123774 : Type'} (m : nat) (f : nat -> _123774) (op : type1400 _123774) : ((term1465 _123774 m f op) = (term1547 _123774 f op)) = ((term1465 _123774 m f op) = (term1547 _123774 f op)).
Proof. exact (eq_refl ((term1465 _123774 m f op) = (term1547 _123774 f op))). Qed.
Lemma lem6214461 {_123774 : Type'} (m : nat) (f : nat -> _123774) (op : type1400 _123774) : ((term1545 _123774 f op m) = ((term1465 _123774 m f op) = (term1547 _123774 f op))) = (((term1465 _123774 m f op) = (term1510 _123774 m f op)) = ((term1465 _123774 m f op) = (term1547 _123774 f op))).
Proof. exact (MK_COMB (@lem6214459 _123774 m f op) (@lem6214460 _123774 m f op)). Qed.
Lemma lem6214462 {_123774 : Type'} (m : nat) (f : nat -> _123774) (op : type1400 _123774) : ((term1545 _123774 f op m) = (term1546 _123774 m f op)) = (((term1465 _123774 m f op) = (term1510 _123774 m f op)) = ((term1465 _123774 m f op) = (term1547 _123774 f op))).
Proof. exact (TRANS (@lem6214456 _123774 m f op) (@lem6214461 _123774 m f op)). Qed.
Lemma lem6214463 {_123774 : Type'} (f : nat -> _123774) (op : type1400 _123774) (m : nat) (h1 : term1125 m) : ((term1465 _123774 m f op) = (term1510 _123774 m f op)) = ((term1465 _123774 m f op) = (term1547 _123774 f op)).
Proof. exact (EQ_MP (@lem6214462 _123774 m f op) (@lem6214453 _123774 f op m h1)). Qed.
Lemma lem6214464 {_123774 : Type'} (f : nat -> _123774) (op : type1400 _123774) (m : nat) (h1 : term1125 m) : ((term1465 _123774 m f op) = (term1547 _123774 f op)) = ((term1465 _123774 m f op) = (term1510 _123774 m f op)).
Proof. exact (SYM (@lem6214463 _123774 f op m h1)). Qed.
Lemma lem6214798 : term1550.
Proof. exact (EQ_MP (@lem521920) (@lem522075)). Qed.
Lemma lem6214799 : term1551.
Proof. exact (proj2 (@lem6214798)). Qed.
Lemma lem6214800 : term1552.
Proof. exact (proj2 (@lem6214799)). Qed.
Lemma lem6214801 : term1553.
Proof. exact (proj2 (@lem6214800)). Qed.
Lemma lem6214843 : term1554.
Proof. exact (proj1 (@lem6214801)). Qed.
Lemma lem6214844 (n : nat) : term1555 n.
Proof. exact (@lem6214843 n). Qed.
Lemma lem6214845 (n : nat) : (term1555 n) = (((BIT1 n) = 0) = False).
Proof. exact (eq_refl (term1555 n)). Qed.
Lemma lem6214847 : term1556.
Proof. exact (proj1 (@lem6214800)). Qed.
Lemma lem6214848 (n : nat) : term1557 n.
Proof. exact (@lem6214847 n). Qed.
Lemma lem6214849 (n : nat) : (term1557 n) = (((BIT0 n) = 0) = (n = 0)).
Proof. exact (eq_refl (term1557 n)). Qed.
Lemma lem6214852 : term1558.
Proof. exact (proj1 (@lem6214798)). Qed.
Lemma lem6214853 (m : nat) : term1559 m.
Proof. exact (@lem6214852 m). Qed.
Lemma lem6214854 (m : nat) : (term1559 m) = (term1560 m).
Proof. exact (eq_refl (term1559 m)). Qed.
Lemma lem6214855 (m : nat) : term1560 m.
Proof. exact (EQ_MP (@lem6214854 m) (@lem6214853 m)). Qed.
Lemma lem6214856 (m : nat) (n : nat) : term1561 m n.
Proof. exact (@lem6214855 m n). Qed.
Lemma lem6214857 (m : nat) (n : nat) : (term1561 m n) = (((NUMERAL m) = (NUMERAL n)) = (m = n)).
Proof. exact (eq_refl (term1561 m n)). Qed.
Lemma lem6214952 : term1562.
Proof. exact (EQ_MP (@lem514761) (@lem515543)). Qed.
Lemma lem6214953 : term1563.
Proof. exact (proj2 (@lem6214952)). Qed.
Lemma lem6214954 : term1564.
Proof. exact (proj2 (@lem6214953)). Qed.
Lemma lem6214955 : term1565.
Proof. exact (proj2 (@lem6214954)). Qed.
Lemma lem6214956 : term1566.
Proof. exact (proj2 (@lem6214955)). Qed.
Lemma lem6214993 : term1567.
Proof. exact (proj1 (@lem6214956)). Qed.
Lemma lem6214994 (n : nat) : term1568 n.
Proof. exact (@lem6214993 n). Qed.
Lemma lem6214995 (n : nat) : (term1568 n) = ((term1569 n) = 0).
Proof. exact (eq_refl (term1568 n)). Qed.
Lemma lem6215006 : term1570.
Proof. exact (proj1 (@lem6214952)). Qed.
Lemma lem6215007 (m : nat) : term1571 m.
Proof. exact (@lem6215006 m). Qed.
Lemma lem6215008 (m : nat) : (term1571 m) = (term1572 m).
Proof. exact (eq_refl (term1571 m)). Qed.
Lemma lem6215009 (m : nat) : term1572 m.
Proof. exact (EQ_MP (@lem6215008 m) (@lem6215007 m)). Qed.
Lemma lem6215010 (m : nat) (n : nat) : term1573 m n.
Proof. exact (@lem6215009 m n). Qed.
Lemma lem6215011 (m : nat) (n : nat) : (term1573 m n) = ((term1574 m n) = (term1575 m n)).
Proof. exact (eq_refl (term1573 m n)). Qed.
Lemma lem6215013 : term1576.
Proof. exact (EQ_MP (@lem513870) (@lem514290)). Qed.
Lemma lem6215014 : term1577.
Proof. exact (proj2 (@lem6215013)). Qed.
Lemma lem6215015 : term1578.
Proof. exact (proj2 (@lem6215014)). Qed.
Lemma lem6215016 : term1579.
Proof. exact (proj2 (@lem6215015)). Qed.
Lemma lem6215058 : term1580.
Proof. exact (proj1 (@lem6215016)). Qed.
Lemma lem6215059 (n : nat) : term1581 n.
Proof. exact (@lem6215058 n). Qed.
Lemma lem6215060 (n : nat) : (term1581 n) = ((term1582 n) = (BIT1 n)).
Proof. exact (eq_refl (term1581 n)). Qed.
Lemma lem6215067 : term1583.
Proof. exact (proj1 (@lem6215013)). Qed.
Lemma lem6215068 (m : nat) : term1584 m.
Proof. exact (@lem6215067 m). Qed.
Lemma lem6215069 (m : nat) : (term1584 m) = (term1585 m).
Proof. exact (eq_refl (term1584 m)). Qed.
Lemma lem6215070 (m : nat) : term1585 m.
Proof. exact (EQ_MP (@lem6215069 m) (@lem6215068 m)). Qed.
Lemma lem6215071 (m : nat) (n : nat) : term1586 m n.
Proof. exact (@lem6215070 m n). Qed.
Lemma lem6215072 (m : nat) (n : nat) : (term1586 m n) = ((term1587 m n) = (term1588 m n)).
Proof. exact (eq_refl (term1586 m n)). Qed.
Lemma lem6215090 : term1589.
Proof. exact (EQ_MP (@lem513079) (@lem0)). Qed.
Lemma lem6215091 : term1590.
Proof. exact (proj2 (@lem6215090)). Qed.
Lemma lem6215102 : term1591.
Proof. exact (proj1 (@lem6215090)). Qed.
Lemma lem6215103 (n : nat) : term1592 n.
Proof. exact (@lem6215102 n). Qed.
Lemma lem6215104 (n : nat) : (term1592 n) = ((term1593 n) = (term1594 n)).
Proof. exact (eq_refl (term1592 n)). Qed.
Lemma lem6215109 (m : nat) : term1595 m.
Proof. exact (@lem83870 m). Qed.
Lemma lem6215110 (m : nat) : (term1595 m) = (term1596 m).
Proof. exact (eq_refl (term1595 m)). Qed.
Lemma lem6215111 (m : nat) : term1596 m.
Proof. exact (EQ_MP (@lem6215110 m) (@lem6215109 m)). Qed.
Lemma lem6215112 (m : nat) (n : nat) : term1597 m n.
Proof. exact (@lem6215111 m n). Qed.
Lemma lem6215113 (m : nat) (n : nat) : (term1597 m n) = (((Nat.mul m n) = (NUMERAL 0)) = (term1598 m n)).
Proof. exact (eq_refl (term1597 m n)). Qed.
Lemma lem6215122 (m : nat) (n : nat) : ((Nat.mul m n) = (NUMERAL 0)) = (term1598 m n).
Proof. exact (EQ_MP (@lem6215113 m n) (@lem6215112 m n)). Qed.
Lemma lem6215123 (m : nat) : ((term18 m) = (NUMERAL 0)) = (term1599 m).
Proof. exact (@lem6215122 term22 m). Qed.
Lemma lem6215127 (m : nat) (n : nat) : ((NUMERAL m) = (NUMERAL n)) = (m = n).
Proof. exact (EQ_MP (@lem6214857 m n) (@lem6214856 m n)). Qed.
Lemma lem6215128 : (term22 = (NUMERAL 0)) = (term20 = 0).
Proof. exact (@lem6215127 term20 0). Qed.
Lemma lem6215130 (n : nat) : ((BIT0 n) = 0) = (n = 0).
Proof. exact (EQ_MP (@lem6214849 n) (@lem6214848 n)). Qed.
Lemma lem6215131 : (term20 = 0) = ((BIT1 0) = 0).
Proof. exact (@lem6215130 (BIT1 0)). Qed.
Lemma lem6215133 (n : nat) : ((BIT1 n) = 0) = False.
Proof. exact (EQ_MP (@lem6214845 n) (@lem6214844 n)). Qed.
Lemma lem6215134 : ((BIT1 0) = 0) = False.
Proof. exact (@lem6215133 0). Qed.
Lemma lem6215135 : (term20 = 0) = False.
Proof. exact (TRANS (@lem6215131) (@lem6215134)). Qed.
Lemma lem6215136 : (term22 = (NUMERAL 0)) = False.
Proof. exact (TRANS (@lem6215128) (@lem6215135)). Qed.
Lemma lem6215137 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6215138 : term1600 = (or False).
Proof. exact (MK_COMB (@lem6215137) (@lem6215136)). Qed.
Lemma lem6215142 (m : nat) (h1 : m = (NUMERAL 0)) : m = (NUMERAL 0).
Proof. exact (h1). Qed.
Lemma lem6215143 : (@eq nat) = (@eq nat).
Proof. exact (eq_refl (@eq nat)). Qed.
Lemma lem6215144 (m : nat) (h1 : m = (NUMERAL 0)) : (@eq nat m) = term1601.
Proof. exact (MK_COMB (@lem6215143) (@lem6215142 m h1)). Qed.
Lemma lem6215145 : (NUMERAL 0) = (NUMERAL 0).
Proof. exact (eq_refl (NUMERAL 0)). Qed.
Lemma lem6215146 (m : nat) (h1 : m = (NUMERAL 0)) : (m = (NUMERAL 0)) = ((NUMERAL 0) = (NUMERAL 0)).
Proof. exact (MK_COMB (@lem6215144 m h1) (@lem6215145)). Qed.
Lemma lem6215148 (m : nat) (n : nat) : ((NUMERAL m) = (NUMERAL n)) = (m = n).
Proof. exact (EQ_MP (@lem6214857 m n) (@lem6214856 m n)). Qed.
Lemma lem6215149 : ((NUMERAL 0) = (NUMERAL 0)) = (0 = 0).
Proof. exact (@lem6215148 0 0). Qed.
Lemma lem6215151 : (0 = 0) = True.
Proof. exact (proj1 (@lem6214799)). Qed.
Lemma lem6215152 : ((NUMERAL 0) = (NUMERAL 0)) = True.
Proof. exact (TRANS (@lem6215149) (@lem6215151)). Qed.
Lemma lem6215153 (m : nat) (h1 : m = (NUMERAL 0)) : (m = (NUMERAL 0)) = True.
Proof. exact (TRANS (@lem6215146 m h1) (@lem6215152)). Qed.
Lemma lem6215154 (m : nat) (h1 : m = (NUMERAL 0)) : (term1599 m) = (False \/ True).
Proof. exact (MK_COMB (@lem6215138) (@lem6215153 m h1)). Qed.
Lemma lem6215156 (t : Prop) : (False \/ t) = t.
Proof. exact (proj1 (@lem1833 t)). Qed.
Lemma lem6215157 : (False \/ True) = True.
Proof. exact (@lem6215156 True). Qed.
Lemma lem6215158 (m : nat) (h1 : m = (NUMERAL 0)) : (term1599 m) = True.
Proof. exact (TRANS (@lem6215154 m h1) (@lem6215157)). Qed.
Lemma lem6215159 (m : nat) (h1 : m = (NUMERAL 0)) : ((term18 m) = (NUMERAL 0)) = True.
Proof. exact (TRANS (@lem6215123 m) (@lem6215158 m h1)). Qed.
Lemma lem6215160 {_123774 : Type'} : (@COND _123774) = (@COND _123774).
Proof. exact (eq_refl (@COND _123774)). Qed.
Lemma lem6215161 {_123774 : Type'} (m : nat) (h1 : m = (NUMERAL 0)) : (term1602 _123774 m) = (@COND _123774 True).
Proof. exact (MK_COMB (@lem6215160 _123774) (@lem6215159 m h1)). Qed.
Lemma lem6215162 {_123774 : Type'} (f : nat -> _123774) : (term1603 _123774 f) = (term1603 _123774 f).
Proof. exact (eq_refl (term1603 _123774 f)). Qed.
Lemma lem6215163 {_123774 : Type'} (f : nat -> _123774) (m : nat) (h1 : m = (NUMERAL 0)) : (term1604 _123774 m f) = (term1605 _123774 f).
Proof. exact (MK_COMB (@lem6215161 _123774 m h1) (@lem6215162 _123774 f)). Qed.
Lemma lem6215164 {_123774 : Type'} (op : type1400 _123774) : (@neutral _123774 op) = (@neutral _123774 op).
Proof. exact (eq_refl (@neutral _123774 op)). Qed.
Lemma lem6215165 {_123774 : Type'} (f : nat -> _123774) (op : type1400 _123774) (m : nat) (h1 : m = (NUMERAL 0)) : (term1465 _123774 m f op) = (term1606 _123774 f op).
Proof. exact (MK_COMB (@lem6215163 _123774 f m h1) (@lem6215164 _123774 op)). Qed.
Lemma lem6215167 {A : Type'} (t2 : A) (t1 : A) : (@COND A True t1 t2) = t1.
Proof. exact (proj1 (@lem12653 A t1 t2)). Qed.
Lemma lem6215168 {_123774 : Type'} (t2 : _123774) (t1 : _123774) : (@COND _123774 True t1 t2) = t1.
Proof. exact (@lem6215167 _123774 t2 t1). Qed.
Lemma lem6215169 {_123774 : Type'} (op : type1400 _123774) (f : nat -> _123774) : (term1606 _123774 f op) = (term1603 _123774 f).
Proof. exact (@lem6215168 _123774 (@neutral _123774 op) (term1603 _123774 f)). Qed.
Lemma lem6215170 {_123774 : Type'} (op : type1400 _123774) (f : nat -> _123774) (m : nat) (h1 : m = (NUMERAL 0)) : (term1465 _123774 m f op) = (term1603 _123774 f).
Proof. exact (TRANS (@lem6215165 _123774 f op m h1) (@lem6215169 _123774 op f)). Qed.
Lemma lem6215171 {_123774 : Type'} (op : type1400 _123774) : op = op.
Proof. exact (eq_refl op). Qed.
Lemma lem6215172 {_123774 : Type'} (op : type1400 _123774) (f : nat -> _123774) (m : nat) (h1 : m = (NUMERAL 0)) : (term1467 _123774 m f op) = (term1607 _123774 op f).
Proof. exact (MK_COMB (@lem6215171 _123774 op) (@lem6215170 _123774 op f m h1)). Qed.
Lemma lem6215174 (n : nat) : (term1593 n) = (term1594 n).
Proof. exact (EQ_MP (@lem6215104 n) (@lem6215103 n)). Qed.
Lemma lem6215175 : term1107 = term1608.
Proof. exact (@lem6215174 0). Qed.
Lemma lem6215177 : (S 0) = (BIT1 0).
Proof. exact (proj1 (@lem6215091)). Qed.
Lemma lem6215178 : NUMERAL = NUMERAL.
Proof. exact (eq_refl NUMERAL). Qed.
Lemma lem6215179 : term1608 = term6.
Proof. exact (MK_COMB (@lem6215178) (@lem6215177)). Qed.
Lemma lem6215180 : term1107 = term6.
Proof. exact (TRANS (@lem6215175) (@lem6215179)). Qed.
Lemma lem6215181 {_123774 : Type'} (f : nat -> _123774) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem6215182 {_123774 : Type'} (f : nat -> _123774) : (term1468 _123774 f) = (term1609 _123774 f).
Proof. exact (MK_COMB (@lem6215181 _123774 f) (@lem6215180)). Qed.
Lemma lem6215183 {_123774 : Type'} (op : type1400 _123774) (f : nat -> _123774) (m : nat) (h1 : m = (NUMERAL 0)) : (term1469 _123774 m op f) = (term1610 _123774 op f).
Proof. exact (MK_COMB (@lem6215172 _123774 op f m h1) (@lem6215182 _123774 f)). Qed.
Lemma lem6215184 {_123774 : Type'} : (@eq _123774) = (@eq _123774).
Proof. exact (eq_refl (@eq _123774)). Qed.
Lemma lem6215185 {_123774 : Type'} (op : type1400 _123774) (f : nat -> _123774) (m : nat) (h1 : m = (NUMERAL 0)) : (term1611 _123774 m op f) = (term1612 _123774 op f).
Proof. exact (MK_COMB (@lem6215184 _123774) (@lem6215183 _123774 op f m h1)). Qed.
Lemma lem6215187 {A : Type'} (t2 : A) (t1 : A) : (@COND A True t1 t2) = t1.
Proof. exact (proj1 (@lem12653 A t1 t2)). Qed.
Lemma lem6215188 {_123774 : Type'} (t2 : _123774) (t1 : _123774) : (@COND _123774 True t1 t2) = t1.
Proof. exact (@lem6215187 _123774 t2 t1). Qed.
Lemma lem6215189 {_123774 : Type'} (op : type1400 _123774) (f : nat -> _123774) : (term1540 _123774 f op) = (term1504 _123774 op f).
Proof. exact (@lem6215188 _123774 (@neutral _123774 op) (term1504 _123774 op f)). Qed.
Lemma lem6215191 (m : nat) (n : nat) : (term1574 m n) = (term1575 m n).
Proof. exact (EQ_MP (@lem6215011 m n) (@lem6215010 m n)). Qed.
Lemma lem6215192 : term1415 = term1613.
Proof. exact (@lem6215191 term20 0). Qed.
Lemma lem6215194 (n : nat) : (term1569 n) = 0.
Proof. exact (EQ_MP (@lem6214995 n) (@lem6214994 n)). Qed.
Lemma lem6215195 : term1414 = 0.
Proof. exact (@lem6215194 (BIT1 0)). Qed.
Lemma lem6215196 : NUMERAL = NUMERAL.
Proof. exact (eq_refl NUMERAL). Qed.
Lemma lem6215197 : term1613 = (NUMERAL 0).
Proof. exact (MK_COMB (@lem6215196) (@lem6215195)). Qed.
Lemma lem6215198 : term1415 = (NUMERAL 0).
Proof. exact (TRANS (@lem6215192) (@lem6215197)). Qed.
Lemma lem6215199 {_123774 : Type'} (f : nat -> _123774) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem6215200 {_123774 : Type'} (f : nat -> _123774) : (term1614 _123774 f) = (term1603 _123774 f).
Proof. exact (MK_COMB (@lem6215199 _123774 f) (@lem6215198)). Qed.
Lemma lem6215201 {_123774 : Type'} (op : type1400 _123774) : op = op.
Proof. exact (eq_refl op). Qed.
Lemma lem6215202 {_123774 : Type'} (op : type1400 _123774) (f : nat -> _123774) : (term1503 _123774 op f) = (term1607 _123774 op f).
Proof. exact (MK_COMB (@lem6215201 _123774 op) (@lem6215200 _123774 f)). Qed.
Lemma lem6215204 (m : nat) (n : nat) : (term1574 m n) = (term1575 m n).
Proof. exact (EQ_MP (@lem6215011 m n) (@lem6215010 m n)). Qed.
Lemma lem6215205 : term1415 = term1613.
Proof. exact (@lem6215204 term20 0). Qed.
Lemma lem6215207 (n : nat) : (term1569 n) = 0.
Proof. exact (EQ_MP (@lem6214995 n) (@lem6214994 n)). Qed.
Lemma lem6215208 : term1414 = 0.
Proof. exact (@lem6215207 (BIT1 0)). Qed.
Lemma lem6215209 : NUMERAL = NUMERAL.
Proof. exact (eq_refl NUMERAL). Qed.
Lemma lem6215210 : term1613 = (NUMERAL 0).
Proof. exact (MK_COMB (@lem6215209) (@lem6215208)). Qed.
Lemma lem6215211 : term1415 = (NUMERAL 0).
Proof. exact (TRANS (@lem6215205) (@lem6215210)). Qed.
Lemma lem6215212 : Nat.add = Nat.add.
Proof. exact (eq_refl Nat.add). Qed.
Lemma lem6215213 : term1416 = term1417.
Proof. exact (MK_COMB (@lem6215212) (@lem6215211)). Qed.
Lemma lem6215215 (n : nat) : (term1593 n) = (term1594 n).
Proof. exact (EQ_MP (@lem6215104 n) (@lem6215103 n)). Qed.
Lemma lem6215216 : term1107 = term1608.
Proof. exact (@lem6215215 0). Qed.
Lemma lem6215218 : (S 0) = (BIT1 0).
Proof. exact (proj1 (@lem6215091)). Qed.
Lemma lem6215219 : NUMERAL = NUMERAL.
Proof. exact (eq_refl NUMERAL). Qed.
Lemma lem6215220 : term1608 = term6.
Proof. exact (MK_COMB (@lem6215219) (@lem6215218)). Qed.
Lemma lem6215221 : term1107 = term6.
Proof. exact (TRANS (@lem6215216) (@lem6215220)). Qed.
Lemma lem6215222 : term1500 = term1419.
Proof. exact (MK_COMB (@lem6215213) (@lem6215221)). Qed.
Lemma lem6215224 (m : nat) (n : nat) : (term1587 m n) = (term1588 m n).
Proof. exact (EQ_MP (@lem6215072 m n) (@lem6215071 m n)). Qed.
Lemma lem6215225 : term1419 = term1615.
Proof. exact (@lem6215224 0 (BIT1 0)). Qed.
Lemma lem6215227 (n : nat) : (term1582 n) = (BIT1 n).
Proof. exact (EQ_MP (@lem6215060 n) (@lem6215059 n)). Qed.
Lemma lem6215228 : term1420 = (BIT1 0).
Proof. exact (@lem6215227 0). Qed.
Lemma lem6215229 : NUMERAL = NUMERAL.
Proof. exact (eq_refl NUMERAL). Qed.
Lemma lem6215230 : term1615 = term6.
Proof. exact (MK_COMB (@lem6215229) (@lem6215228)). Qed.
Lemma lem6215231 : term1419 = term6.
Proof. exact (TRANS (@lem6215225) (@lem6215230)). Qed.
Lemma lem6215232 : term1500 = term6.
Proof. exact (TRANS (@lem6215222) (@lem6215231)). Qed.
Lemma lem6215233 {_123774 : Type'} (f : nat -> _123774) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem6215234 {_123774 : Type'} (f : nat -> _123774) : (term1502 _123774 f) = (term1609 _123774 f).
Proof. exact (MK_COMB (@lem6215233 _123774 f) (@lem6215232)). Qed.
Lemma lem6215235 {_123774 : Type'} (op : type1400 _123774) (f : nat -> _123774) : (term1504 _123774 op f) = (term1610 _123774 op f).
Proof. exact (MK_COMB (@lem6215202 _123774 op f) (@lem6215234 _123774 f)). Qed.
Lemma lem6215236 {_123774 : Type'} (op : type1400 _123774) (f : nat -> _123774) : (term1540 _123774 f op) = (term1610 _123774 op f).
Proof. exact (TRANS (@lem6215189 _123774 op f) (@lem6215235 _123774 op f)). Qed.
Lemma lem6215237 {_123774 : Type'} (op : type1400 _123774) (f : nat -> _123774) (m : nat) (h1 : m = (NUMERAL 0)) : ((term1469 _123774 m op f) = (term1540 _123774 f op)) = ((term1610 _123774 op f) = (term1610 _123774 op f)).
Proof. exact (MK_COMB (@lem6215185 _123774 op f m h1) (@lem6215236 _123774 op f)). Qed.
Lemma lem6215239 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem1863 A x) (@lem1862 A x)). Qed.
Lemma lem6215240 {_123774 : Type'} (x : _123774) : (x = x) = True.
Proof. exact (@lem6215239 _123774 x). Qed.
Lemma lem6215241 {_123774 : Type'} (op : type1400 _123774) (f : nat -> _123774) : ((term1610 _123774 op f) = (term1610 _123774 op f)) = True.
Proof. exact (@lem6215240 _123774 (term1610 _123774 op f)). Qed.
Lemma lem6215242 {_123774 : Type'} (f : nat -> _123774) (op : type1400 _123774) (m : nat) (h1 : m = (NUMERAL 0)) : ((term1469 _123774 m op f) = (term1540 _123774 f op)) = True.
Proof. exact (TRANS (@lem6215237 _123774 op f m h1) (@lem6215241 _123774 op f)). Qed.
Lemma lem6215243 {_123774 : Type'} (f : nat -> _123774) (op : type1400 _123774) (m : nat) (h1 : m = (NUMERAL 0)) : True = ((term1469 _123774 m op f) = (term1540 _123774 f op)).
Proof. exact (SYM (@lem6215242 _123774 f op m h1)). Qed.
Lemma lem6215244 {_123774 : Type'} (f : nat -> _123774) (op : type1400 _123774) (m : nat) (h1 : m = (NUMERAL 0)) : (term1469 _123774 m op f) = (term1540 _123774 f op).
Proof. exact (EQ_MP (@lem6215243 _123774 f op m h1) (@lem0)). Qed.
Lemma lem6215578 : term1550.
Proof. exact (EQ_MP (@lem521920) (@lem522075)). Qed.
Lemma lem6215579 : term1551.
Proof. exact (proj2 (@lem6215578)). Qed.
Lemma lem6215580 : term1552.
Proof. exact (proj2 (@lem6215579)). Qed.
Lemma lem6215581 : term1553.
Proof. exact (proj2 (@lem6215580)). Qed.
Lemma lem6215623 : term1554.
Proof. exact (proj1 (@lem6215581)). Qed.
Lemma lem6215624 (n : nat) : term1555 n.
Proof. exact (@lem6215623 n). Qed.
Lemma lem6215625 (n : nat) : (term1555 n) = (((BIT1 n) = 0) = False).
Proof. exact (eq_refl (term1555 n)). Qed.
Lemma lem6215627 : term1556.
Proof. exact (proj1 (@lem6215580)). Qed.
Lemma lem6215628 (n : nat) : term1557 n.
Proof. exact (@lem6215627 n). Qed.
Lemma lem6215629 (n : nat) : (term1557 n) = (((BIT0 n) = 0) = (n = 0)).
Proof. exact (eq_refl (term1557 n)). Qed.
Lemma lem6215632 : term1558.
Proof. exact (proj1 (@lem6215578)). Qed.
Lemma lem6215633 (m : nat) : term1559 m.
Proof. exact (@lem6215632 m). Qed.
Lemma lem6215634 (m : nat) : (term1559 m) = (term1560 m).
Proof. exact (eq_refl (term1559 m)). Qed.
Lemma lem6215635 (m : nat) : term1560 m.
Proof. exact (EQ_MP (@lem6215634 m) (@lem6215633 m)). Qed.
Lemma lem6215636 (m : nat) (n : nat) : term1561 m n.
Proof. exact (@lem6215635 m n). Qed.
Lemma lem6215637 (m : nat) (n : nat) : (term1561 m n) = (((NUMERAL m) = (NUMERAL n)) = (m = n)).
Proof. exact (eq_refl (term1561 m n)). Qed.
Lemma lem6215889 (m : nat) : term1595 m.
Proof. exact (@lem83870 m). Qed.
Lemma lem6215890 (m : nat) : (term1595 m) = (term1596 m).
Proof. exact (eq_refl (term1595 m)). Qed.
Lemma lem6215891 (m : nat) : term1596 m.
Proof. exact (EQ_MP (@lem6215890 m) (@lem6215889 m)). Qed.
Lemma lem6215892 (m : nat) (n : nat) : term1597 m n.
Proof. exact (@lem6215891 m n). Qed.
Lemma lem6215893 (m : nat) (n : nat) : (term1597 m n) = (((Nat.mul m n) = (NUMERAL 0)) = (term1598 m n)).
Proof. exact (eq_refl (term1597 m n)). Qed.
Lemma lem6215897 (m : nat) : term1543 m.
Proof. exact (@lem82 (m = (NUMERAL 0))). Qed.
Lemma lem6215915 (m : nat) (n : nat) : ((Nat.mul m n) = (NUMERAL 0)) = (term1598 m n).
Proof. exact (EQ_MP (@lem6215893 m n) (@lem6215892 m n)). Qed.
Lemma lem6215916 (m : nat) : ((term18 m) = (NUMERAL 0)) = (term1599 m).
Proof. exact (@lem6215915 term22 m). Qed.
Lemma lem6215920 (m : nat) (n : nat) : ((NUMERAL m) = (NUMERAL n)) = (m = n).
Proof. exact (EQ_MP (@lem6215637 m n) (@lem6215636 m n)). Qed.
Lemma lem6215921 : (term22 = (NUMERAL 0)) = (term20 = 0).
Proof. exact (@lem6215920 term20 0). Qed.
Lemma lem6215923 (n : nat) : ((BIT0 n) = 0) = (n = 0).
Proof. exact (EQ_MP (@lem6215629 n) (@lem6215628 n)). Qed.
Lemma lem6215924 : (term20 = 0) = ((BIT1 0) = 0).
Proof. exact (@lem6215923 (BIT1 0)). Qed.
Lemma lem6215926 (n : nat) : ((BIT1 n) = 0) = False.
Proof. exact (EQ_MP (@lem6215625 n) (@lem6215624 n)). Qed.
Lemma lem6215927 : ((BIT1 0) = 0) = False.
Proof. exact (@lem6215926 0). Qed.
Lemma lem6215928 : (term20 = 0) = False.
Proof. exact (TRANS (@lem6215924) (@lem6215927)). Qed.
Lemma lem6215929 : (term22 = (NUMERAL 0)) = False.
Proof. exact (TRANS (@lem6215921) (@lem6215928)). Qed.
Lemma lem6215930 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6215931 : term1600 = (or False).
Proof. exact (MK_COMB (@lem6215930) (@lem6215929)). Qed.
Lemma lem6215933 (m : nat) (h1 : term1125 m) : (m = (NUMERAL 0)) = False.
Proof. exact (@lem6215897 m (@lem6214449 m h1)). Qed.
Lemma lem6215934 (m : nat) (h1 : term1125 m) : (term1599 m) = (False \/ False).
Proof. exact (MK_COMB (@lem6215931) (@lem6215933 m h1)). Qed.
Lemma lem6215936 (t : Prop) : (False \/ t) = t.
Proof. exact (proj1 (@lem1833 t)). Qed.
Lemma lem6215937 : (False \/ False) = False.
Proof. exact (@lem6215936 False). Qed.
Lemma lem6215938 (m : nat) (h1 : term1125 m) : (term1599 m) = False.
Proof. exact (TRANS (@lem6215934 m h1) (@lem6215937)). Qed.
Lemma lem6215939 (m : nat) (h1 : term1125 m) : ((term18 m) = (NUMERAL 0)) = False.
Proof. exact (TRANS (@lem6215916 m) (@lem6215938 m h1)). Qed.
Lemma lem6215940 {_123774 : Type'} : (@COND _123774) = (@COND _123774).
Proof. exact (eq_refl (@COND _123774)). Qed.
Lemma lem6215941 {_123774 : Type'} (m : nat) (h1 : term1125 m) : (term1602 _123774 m) = (@COND _123774 False).
Proof. exact (MK_COMB (@lem6215940 _123774) (@lem6215939 m h1)). Qed.
Lemma lem6215942 {_123774 : Type'} (f : nat -> _123774) : (term1603 _123774 f) = (term1603 _123774 f).
Proof. exact (eq_refl (term1603 _123774 f)). Qed.
Lemma lem6215943 {_123774 : Type'} (f : nat -> _123774) (m : nat) (h1 : term1125 m) : (term1604 _123774 m f) = (term1616 _123774 f).
Proof. exact (MK_COMB (@lem6215941 _123774 m h1) (@lem6215942 _123774 f)). Qed.
Lemma lem6215944 {_123774 : Type'} (op : type1400 _123774) : (@neutral _123774 op) = (@neutral _123774 op).
Proof. exact (eq_refl (@neutral _123774 op)). Qed.
Lemma lem6215945 {_123774 : Type'} (f : nat -> _123774) (op : type1400 _123774) (m : nat) (h1 : term1125 m) : (term1465 _123774 m f op) = (term1617 _123774 f op).
Proof. exact (MK_COMB (@lem6215943 _123774 f m h1) (@lem6215944 _123774 op)). Qed.
Lemma lem6215947 {A : Type'} (t1 : A) (t2 : A) : (@COND A False t1 t2) = t2.
Proof. exact (proj2 (@lem12653 A t1 t2)). Qed.
Lemma lem6215948 {_123774 : Type'} (t1 : _123774) (t2 : _123774) : (@COND _123774 False t1 t2) = t2.
Proof. exact (@lem6215947 _123774 t1 t2). Qed.
Lemma lem6215949 {_123774 : Type'} (f : nat -> _123774) (op : type1400 _123774) : (term1617 _123774 f op) = (@neutral _123774 op).
Proof. exact (@lem6215948 _123774 (term1603 _123774 f) (@neutral _123774 op)). Qed.
Lemma lem6215950 {_123774 : Type'} (f : nat -> _123774) (op : type1400 _123774) (m : nat) (h1 : term1125 m) : (term1465 _123774 m f op) = (@neutral _123774 op).
Proof. exact (TRANS (@lem6215945 _123774 f op m h1) (@lem6215949 _123774 f op)). Qed.
Lemma lem6215951 {_123774 : Type'} : (@eq _123774) = (@eq _123774).
Proof. exact (eq_refl (@eq _123774)). Qed.
Lemma lem6215952 {_123774 : Type'} (f : nat -> _123774) (op : type1400 _123774) (m : nat) (h1 : term1125 m) : (term1618 _123774 m f op) = (term1619 _123774 op).
Proof. exact (MK_COMB (@lem6215951 _123774) (@lem6215950 _123774 f op m h1)). Qed.
Lemma lem6215954 {A : Type'} (t1 : A) (t2 : A) : (@COND A False t1 t2) = t2.
Proof. exact (proj2 (@lem12653 A t1 t2)). Qed.
Lemma lem6215955 {_123774 : Type'} (t1 : _123774) (t2 : _123774) : (@COND _123774 False t1 t2) = t2.
Proof. exact (@lem6215954 _123774 t1 t2). Qed.
Lemma lem6215956 {_123774 : Type'} (f : nat -> _123774) (op : type1400 _123774) : (term1547 _123774 f op) = (@neutral _123774 op).
Proof. exact (@lem6215955 _123774 (term1504 _123774 op f) (@neutral _123774 op)). Qed.
Lemma lem6215957 {_123774 : Type'} (f : nat -> _123774) (op : type1400 _123774) (m : nat) (h1 : term1125 m) : ((term1465 _123774 m f op) = (term1547 _123774 f op)) = ((@neutral _123774 op) = (@neutral _123774 op)).
Proof. exact (MK_COMB (@lem6215952 _123774 f op m h1) (@lem6215956 _123774 f op)). Qed.
Lemma lem6215959 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem1863 A x) (@lem1862 A x)). Qed.
Lemma lem6215960 {_123774 : Type'} (x : _123774) : (x = x) = True.
Proof. exact (@lem6215959 _123774 x). Qed.
Lemma lem6215961 {_123774 : Type'} (op : type1400 _123774) : ((@neutral _123774 op) = (@neutral _123774 op)) = True.
Proof. exact (@lem6215960 _123774 (@neutral _123774 op)). Qed.
Lemma lem6215962 {_123774 : Type'} (f : nat -> _123774) (op : type1400 _123774) (m : nat) (h1 : term1125 m) : ((term1465 _123774 m f op) = (term1547 _123774 f op)) = True.
Proof. exact (TRANS (@lem6215957 _123774 f op m h1) (@lem6215961 _123774 op)). Qed.
Lemma lem6215963 {_123774 : Type'} (f : nat -> _123774) (op : type1400 _123774) (m : nat) (h1 : term1125 m) : True = ((term1465 _123774 m f op) = (term1547 _123774 f op)).
Proof. exact (SYM (@lem6215962 _123774 f op m h1)). Qed.
Lemma lem6215964 {_123774 : Type'} (f : nat -> _123774) (op : type1400 _123774) (m : nat) (h1 : term1125 m) : (term1465 _123774 m f op) = (term1547 _123774 f op).
Proof. exact (EQ_MP (@lem6215963 _123774 f op m h1) (@lem0)). Qed.
Lemma lem6215965 {_123774 : Type'} (f : nat -> _123774) (op : type1400 _123774) (m : nat) (h1 : term1125 m) : (term1465 _123774 m f op) = (term1510 _123774 m f op).
Proof. exact (EQ_MP (@lem6214464 _123774 f op m h1) (@lem6215964 _123774 f op m h1)). Qed.
Lemma lem6215966 {_123774 : Type'} (f : nat -> _123774) (op : type1400 _123774) (m : nat) (h1 : term1125 m) : (term1125 m) = ((term1465 _123774 m f op) = (term1510 _123774 m f op)).
Proof. exact (prop_ext (fun h2 : term1125 m => @lem6215965 _123774 f op m h1) (fun h2 : (term1465 _123774 m f op) = (term1510 _123774 m f op) => @lem6214449 m h1)). Qed.
Lemma lem6215967 {_123774 : Type'} (f : nat -> _123774) (op : type1400 _123774) (m : nat) (h1 : term1125 m) : (term1465 _123774 m f op) = (term1510 _123774 m f op).
Proof. exact (EQ_MP (@lem6215966 _123774 f op m h1) (@lem6214449 m h1)). Qed.
Lemma lem6215968 {_123774 : Type'} (m : nat) (f : nat -> _123774) (op : type1400 _123774) : term1527 _123774 m f op.
Proof. exact (fun h0 : term1125 m => @lem6215967 _123774 f op m h0). Qed.
Lemma lem6215969 {_123774 : Type'} (f : nat -> _123774) (op : type1400 _123774) (m : nat) (h1 : m = (NUMERAL 0)) : (term1469 _123774 m op f) = (term1510 _123774 m f op).
Proof. exact (EQ_MP (@lem6214448 _123774 f op m h1) (@lem6215244 _123774 f op m h1)). Qed.
Lemma lem6215970 {_123774 : Type'} (f : nat -> _123774) (op : type1400 _123774) (m : nat) (h1 : m = (NUMERAL 0)) : (m = (NUMERAL 0)) = ((term1469 _123774 m op f) = (term1510 _123774 m f op)).
Proof. exact (prop_ext (fun h2 : m = (NUMERAL 0) => @lem6215969 _123774 f op m h1) (fun h2 : (term1469 _123774 m op f) = (term1510 _123774 m f op) => @lem6214433 m h1)). Qed.
Lemma lem6215971 {_123774 : Type'} (f : nat -> _123774) (op : type1400 _123774) (m : nat) (h1 : m = (NUMERAL 0)) : (term1469 _123774 m op f) = (term1510 _123774 m f op).
Proof. exact (EQ_MP (@lem6215970 _123774 f op m h1) (@lem6214433 m h1)). Qed.
Lemma lem6215972 {_123774 : Type'} (m : nat) (f : nat -> _123774) (op : type1400 _123774) : term1531 _123774 m f op.
Proof. exact (fun h0 : m = (NUMERAL 0) => @lem6215971 _123774 f op m h0). Qed.
Lemma lem6215973 {_123774 : Type'} (m : nat) (f : nat -> _123774) (op : type1400 _123774) : term1534 _123774 m f op.
Proof. exact (conj (@lem6215972 _123774 m f op) (@lem6215968 _123774 m f op)). Qed.
Lemma lem6215974 {_123774 : Type'} (m : nat) (f : nat -> _123774) (op : type1400 _123774) : (term1515 _123774 m f op) = (term1510 _123774 m f op).
Proof. exact (EQ_MP (@lem6214432 _123774 m f op) (@lem6215973 _123774 m f op)). Qed.
Lemma lem6215975 {_123774 : Type'} (m : nat) (f : nat -> _123774) (op : type1400 _123774) : (term1476 _123774 m f op) = (term1510 _123774 m f op).
Proof. exact (EQ_MP (@lem6214414 _123774 m f op) (@lem6215974 _123774 m f op)). Qed.
Lemma lem6215976 {_123774 : Type'} (m : nat) (f : nat -> _123774) (op : type1400 _123774) (h1 : @monoidal _123774 op) : (term1426 _123774 op m f) = (term1389 _123774 m op f).
Proof. exact (EQ_MP (@lem6214381 _123774 m f op h1) (@lem6215975 _123774 m f op)). Qed.
Lemma lem6215980 (n : nat) : (term7 n) = (term14 n).
Proof. exact (EQ_MP (@lem6209732 n) (@lem6209731 n)). Qed.
Lemma lem6215981 (m : nat) : (term1421 m) = (term1421 m).
Proof. exact (eq_refl (term1421 m)). Qed.
Lemma lem6215982 (m : nat) (n : nat) : (term1620 m n) = (term1621 m n).
Proof. exact (MK_COMB (@lem6215981 m) (@lem6215980 n)). Qed.
Lemma lem6215983 {_123774 : Type'} (op : type1400 _123774) : (@iterate _123774 nat op) = (@iterate _123774 nat op).
Proof. exact (eq_refl (@iterate _123774 nat op)). Qed.
Lemma lem6215984 {_123774 : Type'} (op : type1400 _123774) (m : nat) (n : nat) : (term1622 _123774 op m n) = (term1623 _123774 op m n).
Proof. exact (MK_COMB (@lem6215983 _123774 op) (@lem6215982 m n)). Qed.
Lemma lem6215985 {_123774 : Type'} (f : nat -> _123774) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem6215986 {_123774 : Type'} (op : type1400 _123774) (m : nat) (n : nat) (f : nat -> _123774) : (term1398 _123774 op m n f) = (term1624 _123774 op m n f).
Proof. exact (MK_COMB (@lem6215984 _123774 op m n) (@lem6215985 _123774 f)). Qed.
Lemma lem6215987 {_123774 : Type'} : (@eq _123774) = (@eq _123774).
Proof. exact (eq_refl (@eq _123774)). Qed.
Lemma lem6215988 {_123774 : Type'} (op : type1400 _123774) (m : nat) (n : nat) (f : nat -> _123774) : (term1625 _123774 op m n f) = (term1626 _123774 op m n f).
Proof. exact (MK_COMB (@lem6215987 _123774) (@lem6215986 _123774 op m n f)). Qed.
Lemma lem6215989 {_123774 : Type'} (m : nat) (n : nat) (op : type1400 _123774) (f : nat -> _123774) : (term1399 _123774 m n op f) = (term1399 _123774 m n op f).
Proof. exact (eq_refl (term1399 _123774 m n op f)). Qed.
Lemma lem6215990 {_123774 : Type'} (m : nat) (n : nat) (op : type1400 _123774) (f : nat -> _123774) : ((term1398 _123774 op m n f) = (term1399 _123774 m n op f)) = ((term1624 _123774 op m n f) = (term1399 _123774 m n op f)).
Proof. exact (MK_COMB (@lem6215988 _123774 op m n f) (@lem6215989 _123774 m n op f)). Qed.
Lemma lem6215993 {_123774 : Type'} (m : nat) (n : nat) (op : type1400 _123774) (f : nat -> _123774) : ((term1624 _123774 op m n f) = (term1399 _123774 m n op f)) = ((term1398 _123774 op m n f) = (term1399 _123774 m n op f)).
Proof. exact (SYM (@lem6215990 _123774 m n op f)). Qed.
Lemma lem6215994 {_123419 : Type'} (f : nat -> _123419) (op : type1400 _123419) : term1429 _123419 f op.
Proof. exact (@lem6192133 _123419 f op). Qed.
Lemma lem6215995 {_123419 : Type'} (op : type1400 _123419) (f : nat -> _123419) : (term1429 _123419 f op) = (term1430 _123419 op f).
Proof. exact (eq_refl (term1429 _123419 f op)). Qed.
Lemma lem6215996 {_123419 : Type'} (op : type1400 _123419) (f : nat -> _123419) : term1430 _123419 op f.
Proof. exact (EQ_MP (@lem6215995 _123419 op f) (@lem6215994 _123419 f op)). Qed.
Lemma lem6215997 {_123419 : Type'} (op : type1400 _123419) (h1 : @monoidal _123419 op) : @monoidal _123419 op.
Proof. exact (h1). Qed.
Lemma lem6215998 {_123419 : Type'} (f : nat -> _123419) (op : type1400 _123419) (h1 : @monoidal _123419 op) : term1431 _123419 op f.
Proof. exact (@lem6215996 _123419 op f (@lem6215997 _123419 op h1)). Qed.
Lemma lem6215999 {_123419 : Type'} (f : nat -> _123419) (op : type1400 _123419) (h1 : @monoidal _123419 op) : term1432 _123419 op f.
Proof. exact (proj2 (@lem6215998 _123419 f op h1)). Qed.
Lemma lem6216000 {_123419 : Type'} (f : nat -> _123419) (m : nat) (op : type1400 _123419) (h1 : @monoidal _123419 op) : term1433 _123419 op f m.
Proof. exact (@lem6215999 _123419 f op h1 m). Qed.
Lemma lem6216001 {_123419 : Type'} (op : type1400 _123419) (m : nat) (f : nat -> _123419) : (term1433 _123419 op f m) = (term1434 _123419 op m f).
Proof. exact (eq_refl (term1433 _123419 op f m)). Qed.
Lemma lem6216002 {_123419 : Type'} (m : nat) (f : nat -> _123419) (op : type1400 _123419) (h1 : @monoidal _123419 op) : term1434 _123419 op m f.
Proof. exact (EQ_MP (@lem6216001 _123419 op m f) (@lem6216000 _123419 f m op h1)). Qed.
Lemma lem6216003 {_123419 : Type'} (m : nat) (f : nat -> _123419) (n : nat) (op : type1400 _123419) (h1 : @monoidal _123419 op) : term1435 _123419 op m f n.
Proof. exact (@lem6216002 _123419 m f op h1 n). Qed.
Lemma lem6216004 {_123419 : Type'} (op : type1400 _123419) (m : nat) (n : nat) (f : nat -> _123419) : (term1435 _123419 op m f n) = ((term1436 _123419 op m n f) = (term1437 _123419 op m n f)).
Proof. exact (eq_refl (term1435 _123419 op m f n)). Qed.
Lemma lem6216005 {_123419 : Type'} (m : nat) (n : nat) (f : nat -> _123419) (op : type1400 _123419) (h1 : @monoidal _123419 op) : (term1436 _123419 op m n f) = (term1437 _123419 op m n f).
Proof. exact (EQ_MP (@lem6216004 _123419 op m n f) (@lem6216003 _123419 m f n op h1)). Qed.
Lemma lem6216020 {_123774 : Type'} (op : type1400 _123774) : (@monoidal _123774 op) = ((@monoidal _123774 op) = True).
Proof. exact (@lem7 (@monoidal _123774 op)). Qed.
Lemma lem6216025 {_123419 : Type'} (op : type1400 _123419) (m : nat) (n : nat) (f : nat -> _123419) : term1445 _123419 op m n f.
Proof. exact (fun h0 : @monoidal _123419 op => @lem6216005 _123419 m n f op h0). Qed.
Lemma lem6216026 {_123774 : Type'} (op : type1400 _123774) (m : nat) (n : nat) (f : nat -> _123774) : term1445 _123774 op m n f.
Proof. exact (@lem6216025 _123774 op m n f). Qed.
Lemma lem6216027 {_123774 : Type'} (op : type1400 _123774) (m : nat) (n : nat) (f : nat -> _123774) : term1627 _123774 op m n f.
Proof. exact (@lem6216026 _123774 op (term18 m) (term11 n) f). Qed.
Lemma lem6216029 {_123774 : Type'} (op : type1400 _123774) (h1 : @monoidal _123774 op) : (@monoidal _123774 op) = True.
Proof. exact (EQ_MP (@lem6216020 _123774 op) (@lem6213181 _123774 op h1)). Qed.
Lemma lem6216030 {_123774 : Type'} (op : type1400 _123774) (h1 : @monoidal _123774 op) : True = (@monoidal _123774 op).
Proof. exact (SYM (@lem6216029 _123774 op h1)). Qed.
Lemma lem6216031 {_123774 : Type'} (op : type1400 _123774) (h1 : @monoidal _123774 op) : @monoidal _123774 op.
Proof. exact (EQ_MP (@lem6216030 _123774 op h1) (@lem0)). Qed.
Lemma lem6216032 {_123774 : Type'} (m : nat) (n : nat) (f : nat -> _123774) (op : type1400 _123774) (h1 : @monoidal _123774 op) : (term1624 _123774 op m n f) = (term1628 _123774 op m n f).
Proof. exact (@lem6216027 _123774 op m n f (@lem6216031 _123774 op h1)). Qed.
Lemma lem6216034 {_2963 : Type'} (g : Prop) (t : _2963) (e : _2963) (g' : Prop) (t' : _2963) (e' : _2963) : term1448 _2963 g t e g' t' e'.
Proof. exact (EQ_MP (@lem14781 _2963 g t e g' t' e') (@lem15222 _2963 g t e g' t' e')). Qed.
Lemma lem6216035 {_2963 : Type'} (g : Prop) (t : _2963) (e : _2963) (g' : Prop) (t' : _2963) : term1449 _2963 g t e g' t'.
Proof. exact (fun e' : _2963 => @lem6216034 _2963 g t e g' t' e'). Qed.
Lemma lem6216036 {_2963 : Type'} (g : Prop) (t : _2963) (e : _2963) (g' : Prop) : term1450 _2963 g t e g'.
Proof. exact (fun t' : _2963 => @lem6216035 _2963 g t e g' t'). Qed.
Lemma lem6216037 {_2963 : Type'} (g : Prop) (t : _2963) (e : _2963) : term1451 _2963 g t e.
Proof. exact (fun g' : Prop => @lem6216036 _2963 g t e g'). Qed.
Lemma lem6216038 {_123774 : Type'} (g : Prop) (t : _123774) (e : _123774) : term1451 _123774 g t e.
Proof. exact (@lem6216037 _123774 g t e). Qed.
Lemma lem6216039 {_123774 : Type'} (op : type1400 _123774) (m : nat) (n : nat) (f : nat -> _123774) : term1629 _123774 op m n f.
Proof. exact (@lem6216038 _123774 (term880 m n) (term1630 _123774 op m f n) (term1631 _123774 op m n f)). Qed.
Lemma lem6216040 {_123774 : Type'} (op : type1400 _123774) (m : nat) (n : nat) (f : nat -> _123774) (g' : Prop) : term1632 _123774 op m n f g'.
Proof. exact (@lem6216039 _123774 op m n f g'). Qed.
Lemma lem6216041 {_123774 : Type'} (op : type1400 _123774) (m : nat) (n : nat) (f : nat -> _123774) (g' : Prop) : (term1632 _123774 op m n f g') = (term1633 _123774 op m n f g').
Proof. exact (eq_refl (term1632 _123774 op m n f g')). Qed.
Lemma lem6216042 {_123774 : Type'} (op : type1400 _123774) (m : nat) (n : nat) (f : nat -> _123774) (g' : Prop) : term1633 _123774 op m n f g'.
Proof. exact (EQ_MP (@lem6216041 _123774 op m n f g') (@lem6216040 _123774 op m n f g')). Qed.
Lemma lem6216043 {_123774 : Type'} (op : type1400 _123774) (m : nat) (n : nat) (f : nat -> _123774) (g' : Prop) (t' : _123774) : term1634 _123774 op m n f g' t'.
Proof. exact (@lem6216042 _123774 op m n f g' t'). Qed.
Lemma lem6216044 {_123774 : Type'} (op : type1400 _123774) (m : nat) (n : nat) (f : nat -> _123774) (g' : Prop) (t' : _123774) : (term1634 _123774 op m n f g' t') = (term1635 _123774 op m n f g' t').
Proof. exact (eq_refl (term1634 _123774 op m n f g' t')). Qed.
Lemma lem6216045 {_123774 : Type'} (op : type1400 _123774) (m : nat) (n : nat) (f : nat -> _123774) (g' : Prop) (t' : _123774) : term1635 _123774 op m n f g' t'.
Proof. exact (EQ_MP (@lem6216044 _123774 op m n f g' t') (@lem6216043 _123774 op m n f g' t')). Qed.
Lemma lem6216046 {_123774 : Type'} (op : type1400 _123774) (m : nat) (n : nat) (f : nat -> _123774) (g' : Prop) (t' : _123774) (e' : _123774) : term1636 _123774 op m n f g' t' e'.
Proof. exact (@lem6216045 _123774 op m n f g' t' e'). Qed.
Lemma lem6216047 {_123774 : Type'} (op : type1400 _123774) (m : nat) (n : nat) (f : nat -> _123774) (g' : Prop) (t' : _123774) (e' : _123774) : (term1636 _123774 op m n f g' t' e') = (term1637 _123774 op m n f g' t' e').
Proof. exact (eq_refl (term1636 _123774 op m n f g' t' e')). Qed.
Lemma lem6216048 {_123774 : Type'} (op : type1400 _123774) (m : nat) (n : nat) (f : nat -> _123774) (g' : Prop) (t' : _123774) (e' : _123774) : term1637 _123774 op m n f g' t' e'.
Proof. exact (EQ_MP (@lem6216047 _123774 op m n f g' t' e') (@lem6216046 _123774 op m n f g' t' e')). Qed.
Lemma lem6216049 (m : nat) (n : nat) : (term880 m n) = (term880 m n).
Proof. exact (eq_refl (term880 m n)). Qed.
Lemma lem6216050 {_123774 : Type'} (op : type1400 _123774) (f : nat -> _123774) (m : nat) (n : nat) (t' : _123774) (e' : _123774) : term1638 _123774 op f m n t' e'.
Proof. exact (@lem6216048 _123774 op m n f (term880 m n) t' e'). Qed.
Lemma lem6216051 {_123774 : Type'} (op : type1400 _123774) (f : nat -> _123774) (m : nat) (n : nat) (t' : _123774) (e' : _123774) : term1639 _123774 op f m n t' e'.
Proof. exact (@lem6216050 _123774 op f m n t' e' (@lem6216049 m n)). Qed.
Lemma lem6216056 {_123419 : Type'} (op : type1400 _123419) (m : nat) (n : nat) (f : nat -> _123419) : term1445 _123419 op m n f.
Proof. exact (fun h0 : @monoidal _123419 op => @lem6216005 _123419 m n f op h0). Qed.
Lemma lem6216057 {_123774 : Type'} (op : type1400 _123774) (m : nat) (n : nat) (f : nat -> _123774) : term1445 _123774 op m n f.
Proof. exact (@lem6216056 _123774 op m n f). Qed.
Lemma lem6216058 {_123774 : Type'} (op : type1400 _123774) (m : nat) (n : nat) (f : nat -> _123774) : term1640 _123774 op m n f.
Proof. exact (@lem6216057 _123774 op (term18 m) (term13 n) f). Qed.
Lemma lem6216060 {_123774 : Type'} (op : type1400 _123774) (h1 : @monoidal _123774 op) : (@monoidal _123774 op) = True.
Proof. exact (EQ_MP (@lem6216020 _123774 op) (@lem6213181 _123774 op h1)). Qed.
Lemma lem6216061 {_123774 : Type'} (op : type1400 _123774) (h1 : @monoidal _123774 op) : True = (@monoidal _123774 op).
Proof. exact (SYM (@lem6216060 _123774 op h1)). Qed.
Lemma lem6216062 {_123774 : Type'} (op : type1400 _123774) (h1 : @monoidal _123774 op) : @monoidal _123774 op.
Proof. exact (EQ_MP (@lem6216061 _123774 op h1) (@lem0)). Qed.
Lemma lem6216063 {_123774 : Type'} (m : nat) (n : nat) (f : nat -> _123774) (op : type1400 _123774) (h1 : @monoidal _123774 op) : (term1631 _123774 op m n f) = (term1641 _123774 op m n f).
Proof. exact (@lem6216058 _123774 op m n f (@lem6216062 _123774 op h1)). Qed.
Lemma lem6216065 {_2963 : Type'} (g : Prop) (t : _2963) (e : _2963) (g' : Prop) (t' : _2963) (e' : _2963) : term1448 _2963 g t e g' t' e'.
Proof. exact (EQ_MP (@lem14781 _2963 g t e g' t' e') (@lem15222 _2963 g t e g' t' e')). Qed.
Lemma lem6216066 {_2963 : Type'} (g : Prop) (t : _2963) (e : _2963) (g' : Prop) (t' : _2963) : term1449 _2963 g t e g' t'.
Proof. exact (fun e' : _2963 => @lem6216065 _2963 g t e g' t' e'). Qed.
Lemma lem6216067 {_2963 : Type'} (g : Prop) (t : _2963) (e : _2963) (g' : Prop) : term1450 _2963 g t e g'.
Proof. exact (fun t' : _2963 => @lem6216066 _2963 g t e g' t'). Qed.
Lemma lem6216068 {_2963 : Type'} (g : Prop) (t : _2963) (e : _2963) : term1451 _2963 g t e.
Proof. exact (fun g' : Prop => @lem6216067 _2963 g t e g'). Qed.
Lemma lem6216069 {_123774 : Type'} (g : Prop) (t : _123774) (e : _123774) : term1451 _123774 g t e.
Proof. exact (@lem6216068 _123774 g t e). Qed.
Lemma lem6216070 {_123774 : Type'} (op : type1400 _123774) (m : nat) (n : nat) (f : nat -> _123774) : term1642 _123774 op m n f.
Proof. exact (@lem6216069 _123774 (term375 m n) (term1643 _123774 op m f n) (term1393 _123774 op m n f)). Qed.
Lemma lem6216071 {_123774 : Type'} (op : type1400 _123774) (m : nat) (n : nat) (f : nat -> _123774) (g' : Prop) : term1644 _123774 op m n f g'.
Proof. exact (@lem6216070 _123774 op m n f g'). Qed.
Lemma lem6216072 {_123774 : Type'} (op : type1400 _123774) (m : nat) (n : nat) (f : nat -> _123774) (g' : Prop) : (term1644 _123774 op m n f g') = (term1645 _123774 op m n f g').
Proof. exact (eq_refl (term1644 _123774 op m n f g')). Qed.
Lemma lem6216073 {_123774 : Type'} (op : type1400 _123774) (m : nat) (n : nat) (f : nat -> _123774) (g' : Prop) : term1645 _123774 op m n f g'.
Proof. exact (EQ_MP (@lem6216072 _123774 op m n f g') (@lem6216071 _123774 op m n f g')). Qed.
Lemma lem6216074 {_123774 : Type'} (op : type1400 _123774) (m : nat) (n : nat) (f : nat -> _123774) (g' : Prop) (t' : _123774) : term1646 _123774 op m n f g' t'.
Proof. exact (@lem6216073 _123774 op m n f g' t'). Qed.
Lemma lem6216075 {_123774 : Type'} (op : type1400 _123774) (m : nat) (n : nat) (f : nat -> _123774) (g' : Prop) (t' : _123774) : (term1646 _123774 op m n f g' t') = (term1647 _123774 op m n f g' t').
Proof. exact (eq_refl (term1646 _123774 op m n f g' t')). Qed.
Lemma lem6216076 {_123774 : Type'} (op : type1400 _123774) (m : nat) (n : nat) (f : nat -> _123774) (g' : Prop) (t' : _123774) : term1647 _123774 op m n f g' t'.
Proof. exact (EQ_MP (@lem6216075 _123774 op m n f g' t') (@lem6216074 _123774 op m n f g' t')). Qed.
Lemma lem6216077 {_123774 : Type'} (op : type1400 _123774) (m : nat) (n : nat) (f : nat -> _123774) (g' : Prop) (t' : _123774) (e' : _123774) : term1648 _123774 op m n f g' t' e'.
Proof. exact (@lem6216076 _123774 op m n f g' t' e'). Qed.
Lemma lem6216078 {_123774 : Type'} (op : type1400 _123774) (m : nat) (n : nat) (f : nat -> _123774) (g' : Prop) (t' : _123774) (e' : _123774) : (term1648 _123774 op m n f g' t' e') = (term1649 _123774 op m n f g' t' e').
Proof. exact (eq_refl (term1648 _123774 op m n f g' t' e')). Qed.
Lemma lem6216079 {_123774 : Type'} (op : type1400 _123774) (m : nat) (n : nat) (f : nat -> _123774) (g' : Prop) (t' : _123774) (e' : _123774) : term1649 _123774 op m n f g' t' e'.
Proof. exact (EQ_MP (@lem6216078 _123774 op m n f g' t' e') (@lem6216077 _123774 op m n f g' t' e')). Qed.
Lemma lem6216080 (m : nat) (n : nat) : (term375 m n) = (term375 m n).
Proof. exact (eq_refl (term375 m n)). Qed.
Lemma lem6216081 {_123774 : Type'} (op : type1400 _123774) (f : nat -> _123774) (m : nat) (n : nat) (t' : _123774) (e' : _123774) : term1650 _123774 op f m n t' e'.
Proof. exact (@lem6216079 _123774 op m n f (term375 m n) t' e'). Qed.
Lemma lem6216082 {_123774 : Type'} (op : type1400 _123774) (f : nat -> _123774) (m : nat) (n : nat) (t' : _123774) (e' : _123774) : term1651 _123774 op f m n t' e'.
Proof. exact (@lem6216081 _123774 op f m n t' e' (@lem6216080 m n)). Qed.
Lemma lem6216087 {_123774 : Type'} (m : nat) (n : nat) (op : type1400 _123774) (f : nat -> _123774) (h1 : (term1393 _123774 op m n f) = (term1394 _123774 m n op f)) : (term1393 _123774 op m n f) = (term1394 _123774 m n op f).
Proof. exact (h1). Qed.
Lemma lem6216088 {_123774 : Type'} (op : type1400 _123774) : op = op.
Proof. exact (eq_refl op). Qed.
Lemma lem6216089 {_123774 : Type'} (m : nat) (n : nat) (op : type1400 _123774) (f : nat -> _123774) (h1 : (term1393 _123774 op m n f) = (term1394 _123774 m n op f)) : (term1652 _123774 op m n f) = (term1653 _123774 m n op f).
Proof. exact (MK_COMB (@lem6216088 _123774 op) (@lem6216087 _123774 m n op f h1)). Qed.
Lemma lem6216090 {_123774 : Type'} (f : nat -> _123774) (n : nat) : (term1654 _123774 f n) = (term1654 _123774 f n).
Proof. exact (eq_refl (term1654 _123774 f n)). Qed.
Lemma lem6216091 {_123774 : Type'} (m : nat) (n : nat) (op : type1400 _123774) (f : nat -> _123774) (h1 : (term1393 _123774 op m n f) = (term1394 _123774 m n op f)) : (term1643 _123774 op m f n) = (term1655 _123774 m op f n).
Proof. exact (MK_COMB (@lem6216089 _123774 m n op f h1) (@lem6216090 _123774 f n)). Qed.
Lemma lem6216092 {_123774 : Type'} (m : nat) (n : nat) (op : type1400 _123774) (f : nat -> _123774) (h1 : (term1393 _123774 op m n f) = (term1394 _123774 m n op f)) : term1656 _123774 m op f n.
Proof. exact (fun h0 : term375 m n => @lem6216091 _123774 m n op f h1). Qed.
Lemma lem6216093 {_123774 : Type'} (m : nat) (op : type1400 _123774) (f : nat -> _123774) (n : nat) (e' : _123774) : term1657 _123774 m op f n e'.
Proof. exact (@lem6216082 _123774 op f m n (term1655 _123774 m op f n) e'). Qed.
Lemma lem6216094 {_123774 : Type'} (e' : _123774) (m : nat) (n : nat) (op : type1400 _123774) (f : nat -> _123774) (h1 : (term1393 _123774 op m n f) = (term1394 _123774 m n op f)) : term1658 _123774 m op f n e'.
Proof. exact (@lem6216093 _123774 m op f n e' (@lem6216092 _123774 m n op f h1)). Qed.
Lemma lem6216099 {_123774 : Type'} (m : nat) (n : nat) (op : type1400 _123774) (f : nat -> _123774) (h1 : (term1393 _123774 op m n f) = (term1394 _123774 m n op f)) : (term1393 _123774 op m n f) = (term1394 _123774 m n op f).
Proof. exact (h1). Qed.
Lemma lem6216100 {_123774 : Type'} (m : nat) (n : nat) (op : type1400 _123774) (f : nat -> _123774) (h1 : (term1393 _123774 op m n f) = (term1394 _123774 m n op f)) : term1659 _123774 m n op f.
Proof. exact (fun h0 : term387 m n => @lem6216099 _123774 m n op f h1). Qed.
Lemma lem6216101 {_123774 : Type'} (m : nat) (n : nat) (op : type1400 _123774) (f : nat -> _123774) (h1 : (term1393 _123774 op m n f) = (term1394 _123774 m n op f)) : term1660 _123774 m n op f.
Proof. exact (@lem6216094 _123774 (term1394 _123774 m n op f) m n op f h1). Qed.
Lemma lem6216102 {_123774 : Type'} (m : nat) (n : nat) (op : type1400 _123774) (f : nat -> _123774) (h1 : (term1393 _123774 op m n f) = (term1394 _123774 m n op f)) : (term1641 _123774 op m n f) = (term1661 _123774 m n op f).
Proof. exact (@lem6216101 _123774 m n op f h1 (@lem6216100 _123774 m n op f h1)). Qed.
Lemma lem6216136 {_123774 : Type'} (m : nat) (n : nat) (op : type1400 _123774) (f : nat -> _123774) (h1 : @monoidal _123774 op) (h2 : (term1393 _123774 op m n f) = (term1394 _123774 m n op f)) : (term1631 _123774 op m n f) = (term1661 _123774 m n op f).
Proof. exact (TRANS (@lem6216063 _123774 m n f op h1) (@lem6216102 _123774 m n op f h2)). Qed.
Lemma lem6216137 {_123774 : Type'} (op : type1400 _123774) : op = op.
Proof. exact (eq_refl op). Qed.
Lemma lem6216138 {_123774 : Type'} (m : nat) (n : nat) (op : type1400 _123774) (f : nat -> _123774) (h1 : @monoidal _123774 op) (h2 : (term1393 _123774 op m n f) = (term1394 _123774 m n op f)) : (term1662 _123774 op m n f) = (term1663 _123774 m n op f).
Proof. exact (MK_COMB (@lem6216137 _123774 op) (@lem6216136 _123774 m n op f h1 h2)). Qed.
Lemma lem6216172 {_123774 : Type'} (f : nat -> _123774) (n : nat) : (term1664 _123774 f n) = (term1664 _123774 f n).
Proof. exact (eq_refl (term1664 _123774 f n)). Qed.
Lemma lem6216173 {_123774 : Type'} (m : nat) (n : nat) (op : type1400 _123774) (f : nat -> _123774) (h1 : @monoidal _123774 op) (h2 : (term1393 _123774 op m n f) = (term1394 _123774 m n op f)) : (term1630 _123774 op m f n) = (term1665 _123774 m op f n).
Proof. exact (MK_COMB (@lem6216138 _123774 m n op f h1 h2) (@lem6216172 _123774 f n)). Qed.
Lemma lem6216207 {_123774 : Type'} (m : nat) (n : nat) (op : type1400 _123774) (f : nat -> _123774) (h1 : @monoidal _123774 op) (h2 : (term1393 _123774 op m n f) = (term1394 _123774 m n op f)) : term1666 _123774 m op f n.
Proof. exact (fun h0 : term880 m n => @lem6216173 _123774 m n op f h1 h2). Qed.
Lemma lem6216208 {_123774 : Type'} (m : nat) (op : type1400 _123774) (f : nat -> _123774) (n : nat) (e' : _123774) : term1667 _123774 m op f n e'.
Proof. exact (@lem6216051 _123774 op f m n (term1665 _123774 m op f n) e'). Qed.
Lemma lem6216209 {_123774 : Type'} (e' : _123774) (m : nat) (n : nat) (op : type1400 _123774) (f : nat -> _123774) (h1 : @monoidal _123774 op) (h2 : (term1393 _123774 op m n f) = (term1394 _123774 m n op f)) : term1668 _123774 m op f n e'.
Proof. exact (@lem6216208 _123774 m op f n e' (@lem6216207 _123774 m n op f h1 h2)). Qed.
Lemma lem6216214 {_123419 : Type'} (op : type1400 _123419) (m : nat) (n : nat) (f : nat -> _123419) : term1445 _123419 op m n f.
Proof. exact (fun h0 : @monoidal _123419 op => @lem6216005 _123419 m n f op h0). Qed.
Lemma lem6216215 {_123774 : Type'} (op : type1400 _123774) (m : nat) (n : nat) (f : nat -> _123774) : term1445 _123774 op m n f.
Proof. exact (@lem6216214 _123774 op m n f). Qed.
Lemma lem6216216 {_123774 : Type'} (op : type1400 _123774) (m : nat) (n : nat) (f : nat -> _123774) : term1640 _123774 op m n f.
Proof. exact (@lem6216215 _123774 op (term18 m) (term13 n) f). Qed.
Lemma lem6216218 {_123774 : Type'} (op : type1400 _123774) (h1 : @monoidal _123774 op) : (@monoidal _123774 op) = True.
Proof. exact (EQ_MP (@lem6216020 _123774 op) (@lem6213181 _123774 op h1)). Qed.
Lemma lem6216219 {_123774 : Type'} (op : type1400 _123774) (h1 : @monoidal _123774 op) : True = (@monoidal _123774 op).
Proof. exact (SYM (@lem6216218 _123774 op h1)). Qed.
Lemma lem6216220 {_123774 : Type'} (op : type1400 _123774) (h1 : @monoidal _123774 op) : @monoidal _123774 op.
Proof. exact (EQ_MP (@lem6216219 _123774 op h1) (@lem0)). Qed.
Lemma lem6216221 {_123774 : Type'} (m : nat) (n : nat) (f : nat -> _123774) (op : type1400 _123774) (h1 : @monoidal _123774 op) : (term1631 _123774 op m n f) = (term1641 _123774 op m n f).
Proof. exact (@lem6216216 _123774 op m n f (@lem6216220 _123774 op h1)). Qed.
Lemma lem6216223 {_2963 : Type'} (g : Prop) (t : _2963) (e : _2963) (g' : Prop) (t' : _2963) (e' : _2963) : term1448 _2963 g t e g' t' e'.
Proof. exact (EQ_MP (@lem14781 _2963 g t e g' t' e') (@lem15222 _2963 g t e g' t' e')). Qed.
Lemma lem6216224 {_2963 : Type'} (g : Prop) (t : _2963) (e : _2963) (g' : Prop) (t' : _2963) : term1449 _2963 g t e g' t'.
Proof. exact (fun e' : _2963 => @lem6216223 _2963 g t e g' t' e'). Qed.
Lemma lem6216225 {_2963 : Type'} (g : Prop) (t : _2963) (e : _2963) (g' : Prop) : term1450 _2963 g t e g'.
Proof. exact (fun t' : _2963 => @lem6216224 _2963 g t e g' t'). Qed.
Lemma lem6216226 {_2963 : Type'} (g : Prop) (t : _2963) (e : _2963) : term1451 _2963 g t e.
Proof. exact (fun g' : Prop => @lem6216225 _2963 g t e g'). Qed.
Lemma lem6216227 {_123774 : Type'} (g : Prop) (t : _123774) (e : _123774) : term1451 _123774 g t e.
Proof. exact (@lem6216226 _123774 g t e). Qed.
Lemma lem6216228 {_123774 : Type'} (op : type1400 _123774) (m : nat) (n : nat) (f : nat -> _123774) : term1642 _123774 op m n f.
Proof. exact (@lem6216227 _123774 (term375 m n) (term1643 _123774 op m f n) (term1393 _123774 op m n f)). Qed.
Lemma lem6216229 {_123774 : Type'} (op : type1400 _123774) (m : nat) (n : nat) (f : nat -> _123774) (g' : Prop) : term1644 _123774 op m n f g'.
Proof. exact (@lem6216228 _123774 op m n f g'). Qed.
Lemma lem6216230 {_123774 : Type'} (op : type1400 _123774) (m : nat) (n : nat) (f : nat -> _123774) (g' : Prop) : (term1644 _123774 op m n f g') = (term1645 _123774 op m n f g').
Proof. exact (eq_refl (term1644 _123774 op m n f g')). Qed.
Lemma lem6216231 {_123774 : Type'} (op : type1400 _123774) (m : nat) (n : nat) (f : nat -> _123774) (g' : Prop) : term1645 _123774 op m n f g'.
Proof. exact (EQ_MP (@lem6216230 _123774 op m n f g') (@lem6216229 _123774 op m n f g')). Qed.
Lemma lem6216232 {_123774 : Type'} (op : type1400 _123774) (m : nat) (n : nat) (f : nat -> _123774) (g' : Prop) (t' : _123774) : term1646 _123774 op m n f g' t'.
Proof. exact (@lem6216231 _123774 op m n f g' t'). Qed.
Lemma lem6216233 {_123774 : Type'} (op : type1400 _123774) (m : nat) (n : nat) (f : nat -> _123774) (g' : Prop) (t' : _123774) : (term1646 _123774 op m n f g' t') = (term1647 _123774 op m n f g' t').
Proof. exact (eq_refl (term1646 _123774 op m n f g' t')). Qed.
Lemma lem6216234 {_123774 : Type'} (op : type1400 _123774) (m : nat) (n : nat) (f : nat -> _123774) (g' : Prop) (t' : _123774) : term1647 _123774 op m n f g' t'.
Proof. exact (EQ_MP (@lem6216233 _123774 op m n f g' t') (@lem6216232 _123774 op m n f g' t')). Qed.
Lemma lem6216235 {_123774 : Type'} (op : type1400 _123774) (m : nat) (n : nat) (f : nat -> _123774) (g' : Prop) (t' : _123774) (e' : _123774) : term1648 _123774 op m n f g' t' e'.
Proof. exact (@lem6216234 _123774 op m n f g' t' e'). Qed.
Lemma lem6216236 {_123774 : Type'} (op : type1400 _123774) (m : nat) (n : nat) (f : nat -> _123774) (g' : Prop) (t' : _123774) (e' : _123774) : (term1648 _123774 op m n f g' t' e') = (term1649 _123774 op m n f g' t' e').
Proof. exact (eq_refl (term1648 _123774 op m n f g' t' e')). Qed.
Lemma lem6216237 {_123774 : Type'} (op : type1400 _123774) (m : nat) (n : nat) (f : nat -> _123774) (g' : Prop) (t' : _123774) (e' : _123774) : term1649 _123774 op m n f g' t' e'.
Proof. exact (EQ_MP (@lem6216236 _123774 op m n f g' t' e') (@lem6216235 _123774 op m n f g' t' e')). Qed.
Lemma lem6216238 (m : nat) (n : nat) : (term375 m n) = (term375 m n).
Proof. exact (eq_refl (term375 m n)). Qed.
Lemma lem6216239 {_123774 : Type'} (op : type1400 _123774) (f : nat -> _123774) (m : nat) (n : nat) (t' : _123774) (e' : _123774) : term1650 _123774 op f m n t' e'.
Proof. exact (@lem6216237 _123774 op m n f (term375 m n) t' e'). Qed.
Lemma lem6216240 {_123774 : Type'} (op : type1400 _123774) (f : nat -> _123774) (m : nat) (n : nat) (t' : _123774) (e' : _123774) : term1651 _123774 op f m n t' e'.
Proof. exact (@lem6216239 _123774 op f m n t' e' (@lem6216238 m n)). Qed.
Lemma lem6216245 {_123774 : Type'} (m : nat) (n : nat) (op : type1400 _123774) (f : nat -> _123774) (h1 : (term1393 _123774 op m n f) = (term1394 _123774 m n op f)) : (term1393 _123774 op m n f) = (term1394 _123774 m n op f).
Proof. exact (h1). Qed.
Lemma lem6216246 {_123774 : Type'} (op : type1400 _123774) : op = op.
Proof. exact (eq_refl op). Qed.
Lemma lem6216247 {_123774 : Type'} (m : nat) (n : nat) (op : type1400 _123774) (f : nat -> _123774) (h1 : (term1393 _123774 op m n f) = (term1394 _123774 m n op f)) : (term1652 _123774 op m n f) = (term1653 _123774 m n op f).
Proof. exact (MK_COMB (@lem6216246 _123774 op) (@lem6216245 _123774 m n op f h1)). Qed.
Lemma lem6216248 {_123774 : Type'} (f : nat -> _123774) (n : nat) : (term1654 _123774 f n) = (term1654 _123774 f n).
Proof. exact (eq_refl (term1654 _123774 f n)). Qed.
Lemma lem6216249 {_123774 : Type'} (m : nat) (n : nat) (op : type1400 _123774) (f : nat -> _123774) (h1 : (term1393 _123774 op m n f) = (term1394 _123774 m n op f)) : (term1643 _123774 op m f n) = (term1655 _123774 m op f n).
Proof. exact (MK_COMB (@lem6216247 _123774 m n op f h1) (@lem6216248 _123774 f n)). Qed.
Lemma lem6216250 {_123774 : Type'} (m : nat) (n : nat) (op : type1400 _123774) (f : nat -> _123774) (h1 : (term1393 _123774 op m n f) = (term1394 _123774 m n op f)) : term1656 _123774 m op f n.
Proof. exact (fun h0 : term375 m n => @lem6216249 _123774 m n op f h1). Qed.
Lemma lem6216251 {_123774 : Type'} (m : nat) (op : type1400 _123774) (f : nat -> _123774) (n : nat) (e' : _123774) : term1657 _123774 m op f n e'.
Proof. exact (@lem6216240 _123774 op f m n (term1655 _123774 m op f n) e'). Qed.
Lemma lem6216252 {_123774 : Type'} (e' : _123774) (m : nat) (n : nat) (op : type1400 _123774) (f : nat -> _123774) (h1 : (term1393 _123774 op m n f) = (term1394 _123774 m n op f)) : term1658 _123774 m op f n e'.
Proof. exact (@lem6216251 _123774 m op f n e' (@lem6216250 _123774 m n op f h1)). Qed.
Lemma lem6216257 {_123774 : Type'} (m : nat) (n : nat) (op : type1400 _123774) (f : nat -> _123774) (h1 : (term1393 _123774 op m n f) = (term1394 _123774 m n op f)) : (term1393 _123774 op m n f) = (term1394 _123774 m n op f).
Proof. exact (h1). Qed.
Lemma lem6216258 {_123774 : Type'} (m : nat) (n : nat) (op : type1400 _123774) (f : nat -> _123774) (h1 : (term1393 _123774 op m n f) = (term1394 _123774 m n op f)) : term1659 _123774 m n op f.
Proof. exact (fun h0 : term387 m n => @lem6216257 _123774 m n op f h1). Qed.
Lemma lem6216259 {_123774 : Type'} (m : nat) (n : nat) (op : type1400 _123774) (f : nat -> _123774) (h1 : (term1393 _123774 op m n f) = (term1394 _123774 m n op f)) : term1660 _123774 m n op f.
Proof. exact (@lem6216252 _123774 (term1394 _123774 m n op f) m n op f h1). Qed.
Lemma lem6216260 {_123774 : Type'} (m : nat) (n : nat) (op : type1400 _123774) (f : nat -> _123774) (h1 : (term1393 _123774 op m n f) = (term1394 _123774 m n op f)) : (term1641 _123774 op m n f) = (term1661 _123774 m n op f).
Proof. exact (@lem6216259 _123774 m n op f h1 (@lem6216258 _123774 m n op f h1)). Qed.
Lemma lem6216294 {_123774 : Type'} (m : nat) (n : nat) (op : type1400 _123774) (f : nat -> _123774) (h1 : @monoidal _123774 op) (h2 : (term1393 _123774 op m n f) = (term1394 _123774 m n op f)) : (term1631 _123774 op m n f) = (term1661 _123774 m n op f).
Proof. exact (TRANS (@lem6216221 _123774 m n f op h1) (@lem6216260 _123774 m n op f h2)). Qed.
Lemma lem6216295 {_123774 : Type'} (m : nat) (n : nat) (op : type1400 _123774) (f : nat -> _123774) (h1 : @monoidal _123774 op) (h2 : (term1393 _123774 op m n f) = (term1394 _123774 m n op f)) : term1669 _123774 m n op f.
Proof. exact (fun h0 : term889 m n => @lem6216294 _123774 m n op f h1 h2). Qed.
Lemma lem6216296 {_123774 : Type'} (m : nat) (n : nat) (op : type1400 _123774) (f : nat -> _123774) (h1 : @monoidal _123774 op) (h2 : (term1393 _123774 op m n f) = (term1394 _123774 m n op f)) : term1670 _123774 m n op f.
Proof. exact (@lem6216209 _123774 (term1661 _123774 m n op f) m n op f h1 h2). Qed.
Lemma lem6216297 {_123774 : Type'} (m : nat) (n : nat) (op : type1400 _123774) (f : nat -> _123774) (h1 : @monoidal _123774 op) (h2 : (term1393 _123774 op m n f) = (term1394 _123774 m n op f)) : (term1628 _123774 op m n f) = (term1671 _123774 m n op f).
Proof. exact (@lem6216296 _123774 m n op f h1 h2 (@lem6216295 _123774 m n op f h1 h2)). Qed.
Lemma lem6216463 {_123774 : Type'} (m : nat) (n : nat) (op : type1400 _123774) (f : nat -> _123774) (h1 : @monoidal _123774 op) (h2 : (term1393 _123774 op m n f) = (term1394 _123774 m n op f)) : (term1624 _123774 op m n f) = (term1671 _123774 m n op f).
Proof. exact (TRANS (@lem6216032 _123774 m n f op h1) (@lem6216297 _123774 m n op f h1 h2)). Qed.
Lemma lem6216464 {_123774 : Type'} : (@eq _123774) = (@eq _123774).
Proof. exact (eq_refl (@eq _123774)). Qed.
Lemma lem6216465 {_123774 : Type'} (m : nat) (n : nat) (op : type1400 _123774) (f : nat -> _123774) (h1 : @monoidal _123774 op) (h2 : (term1393 _123774 op m n f) = (term1394 _123774 m n op f)) : (term1626 _123774 op m n f) = (term1672 _123774 m n op f).
Proof. exact (MK_COMB (@lem6216464 _123774) (@lem6216463 _123774 m n op f h1 h2)). Qed.
Lemma lem6216632 {_123419 : Type'} (op : type1400 _123419) (m : nat) (n : nat) (f : nat -> _123419) : term1445 _123419 op m n f.
Proof. exact (fun h0 : @monoidal _123419 op => @lem6216005 _123419 m n f op h0). Qed.
Lemma lem6216633 {_123774 : Type'} (op : type1400 _123774) (m : nat) (n : nat) (f : nat -> _123774) : term1445 _123774 op m n f.
Proof. exact (@lem6216632 _123774 op m n f). Qed.
Lemma lem6216634 {_123774 : Type'} (m : nat) (n : nat) (op : type1400 _123774) (f : nat -> _123774) : term1673 _123774 m n op f.
Proof. exact (@lem6216633 _123774 op m n (term1479 _123774 op f)). Qed.
Lemma lem6216636 {_123774 : Type'} (op : type1400 _123774) (h1 : @monoidal _123774 op) : (@monoidal _123774 op) = True.
Proof. exact (EQ_MP (@lem6216020 _123774 op) (@lem6213181 _123774 op h1)). Qed.
Lemma lem6216637 {_123774 : Type'} (op : type1400 _123774) (h1 : @monoidal _123774 op) : True = (@monoidal _123774 op).
Proof. exact (SYM (@lem6216636 _123774 op h1)). Qed.
Lemma lem6216638 {_123774 : Type'} (op : type1400 _123774) (h1 : @monoidal _123774 op) : @monoidal _123774 op.
Proof. exact (EQ_MP (@lem6216637 _123774 op h1) (@lem0)). Qed.
Lemma lem6216639 {_123774 : Type'} (m : nat) (n : nat) (f : nat -> _123774) (op : type1400 _123774) (h1 : @monoidal _123774 op) : (term1399 _123774 m n op f) = (term1674 _123774 m n op f).
Proof. exact (@lem6216634 _123774 m n op f (@lem6216638 _123774 op h1)). Qed.
Lemma lem6216641 {_2963 : Type'} (g : Prop) (t : _2963) (e : _2963) (g' : Prop) (t' : _2963) (e' : _2963) : term1448 _2963 g t e g' t' e'.
Proof. exact (EQ_MP (@lem14781 _2963 g t e g' t' e') (@lem15222 _2963 g t e g' t' e')). Qed.
Lemma lem6216642 {_2963 : Type'} (g : Prop) (t : _2963) (e : _2963) (g' : Prop) (t' : _2963) : term1449 _2963 g t e g' t'.
Proof. exact (fun e' : _2963 => @lem6216641 _2963 g t e g' t' e'). Qed.
Lemma lem6216643 {_2963 : Type'} (g : Prop) (t : _2963) (e : _2963) (g' : Prop) : term1450 _2963 g t e g'.
Proof. exact (fun t' : _2963 => @lem6216642 _2963 g t e g' t'). Qed.
Lemma lem6216644 {_2963 : Type'} (g : Prop) (t : _2963) (e : _2963) : term1451 _2963 g t e.
Proof. exact (fun g' : Prop => @lem6216643 _2963 g t e g'). Qed.
Lemma lem6216645 {_123774 : Type'} (g : Prop) (t : _123774) (e : _123774) : term1451 _123774 g t e.
Proof. exact (@lem6216644 _123774 g t e). Qed.
Lemma lem6216646 {_123774 : Type'} (m : nat) (n : nat) (op : type1400 _123774) (f : nat -> _123774) : term1675 _123774 m n op f.
Proof. exact (@lem6216645 _123774 (term376 m n) (term1676 _123774 m op f n) (term1394 _123774 m n op f)). Qed.
Lemma lem6216647 {_123774 : Type'} (m : nat) (n : nat) (op : type1400 _123774) (f : nat -> _123774) (g' : Prop) : term1677 _123774 m n op f g'.
Proof. exact (@lem6216646 _123774 m n op f g'). Qed.
Lemma lem6216648 {_123774 : Type'} (m : nat) (n : nat) (op : type1400 _123774) (f : nat -> _123774) (g' : Prop) : (term1677 _123774 m n op f g') = (term1678 _123774 m n op f g').
Proof. exact (eq_refl (term1677 _123774 m n op f g')). Qed.
Lemma lem6216649 {_123774 : Type'} (m : nat) (n : nat) (op : type1400 _123774) (f : nat -> _123774) (g' : Prop) : term1678 _123774 m n op f g'.
Proof. exact (EQ_MP (@lem6216648 _123774 m n op f g') (@lem6216647 _123774 m n op f g')). Qed.
Lemma lem6216650 {_123774 : Type'} (m : nat) (n : nat) (op : type1400 _123774) (f : nat -> _123774) (g' : Prop) (t' : _123774) : term1679 _123774 m n op f g' t'.
Proof. exact (@lem6216649 _123774 m n op f g' t'). Qed.
Lemma lem6216651 {_123774 : Type'} (m : nat) (n : nat) (op : type1400 _123774) (f : nat -> _123774) (g' : Prop) (t' : _123774) : (term1679 _123774 m n op f g' t') = (term1680 _123774 m n op f g' t').
Proof. exact (eq_refl (term1679 _123774 m n op f g' t')). Qed.
Lemma lem6216652 {_123774 : Type'} (m : nat) (n : nat) (op : type1400 _123774) (f : nat -> _123774) (g' : Prop) (t' : _123774) : term1680 _123774 m n op f g' t'.
Proof. exact (EQ_MP (@lem6216651 _123774 m n op f g' t') (@lem6216650 _123774 m n op f g' t')). Qed.
Lemma lem6216653 {_123774 : Type'} (m : nat) (n : nat) (op : type1400 _123774) (f : nat -> _123774) (g' : Prop) (t' : _123774) (e' : _123774) : term1681 _123774 m n op f g' t' e'.
Proof. exact (@lem6216652 _123774 m n op f g' t' e'). Qed.
Lemma lem6216654 {_123774 : Type'} (m : nat) (n : nat) (op : type1400 _123774) (f : nat -> _123774) (g' : Prop) (t' : _123774) (e' : _123774) : (term1681 _123774 m n op f g' t' e') = (term1682 _123774 m n op f g' t' e').
Proof. exact (eq_refl (term1681 _123774 m n op f g' t' e')). Qed.
Lemma lem6216655 {_123774 : Type'} (m : nat) (n : nat) (op : type1400 _123774) (f : nat -> _123774) (g' : Prop) (t' : _123774) (e' : _123774) : term1682 _123774 m n op f g' t' e'.
Proof. exact (EQ_MP (@lem6216654 _123774 m n op f g' t' e') (@lem6216653 _123774 m n op f g' t' e')). Qed.
Lemma lem6216656 (m : nat) (n : nat) : (term376 m n) = (term376 m n).
Proof. exact (eq_refl (term376 m n)). Qed.
Lemma lem6216657 {_123774 : Type'} (op : type1400 _123774) (f : nat -> _123774) (m : nat) (n : nat) (t' : _123774) (e' : _123774) : term1683 _123774 op f m n t' e'.
Proof. exact (@lem6216655 _123774 m n op f (term376 m n) t' e'). Qed.
Lemma lem6216658 {_123774 : Type'} (op : type1400 _123774) (f : nat -> _123774) (m : nat) (n : nat) (t' : _123774) (e' : _123774) : term1684 _123774 op f m n t' e'.
Proof. exact (@lem6216657 _123774 op f m n t' e' (@lem6216656 m n)). Qed.
Lemma lem6216663 {A B : Type'} (f : A -> B) (y : A) : (term1491 A B f y) = (f y).
Proof. exact (EQ_MP (@lem1810 A B f y) (@lem1809 A B f y)). Qed.
Lemma lem6216664 {_123774 : Type'} (f : nat -> _123774) (y : nat) : (term1492 _123774 f y) = (f y).
Proof. exact (@lem6216663 nat _123774 f y). Qed.
Lemma lem6216665 {_123774 : Type'} (op : type1400 _123774) (f : nat -> _123774) (n : nat) : (term1685 _123774 op f n) = (term1686 _123774 op f n).
Proof. exact (@lem6216664 _123774 (term1479 _123774 op f) (S n)). Qed.
Lemma lem6216666 {_123774 : Type'} (op : type1400 _123774) (f : nat -> _123774) (i : nat) : (term1494 _123774 op f i) = (term1495 _123774 op f i).
Proof. exact (eq_refl (term1494 _123774 op f i)). Qed.
Lemma lem6216667 {_123774 : Type'} (op : type1400 _123774) (f : nat -> _123774) : (term1496 _123774 op f) = (term1479 _123774 op f).
Proof. exact (fun_ext (fun i : nat => @lem6216666 _123774 op f i)). Qed.
Lemma lem6216668 (n : nat) : (S n) = (S n).
Proof. exact (eq_refl (S n)). Qed.
Lemma lem6216669 {_123774 : Type'} (op : type1400 _123774) (f : nat -> _123774) (n : nat) : (term1685 _123774 op f n) = (term1686 _123774 op f n).
Proof. exact (MK_COMB (@lem6216667 _123774 op f) (@lem6216668 n)). Qed.
Lemma lem6216670 {_123774 : Type'} : (@eq _123774) = (@eq _123774).
Proof. exact (eq_refl (@eq _123774)). Qed.
Lemma lem6216671 {_123774 : Type'} (op : type1400 _123774) (f : nat -> _123774) (n : nat) : (term1687 _123774 op f n) = (term1688 _123774 op f n).
Proof. exact (MK_COMB (@lem6216670 _123774) (@lem6216669 _123774 op f n)). Qed.
Lemma lem6216672 {_123774 : Type'} (op : type1400 _123774) (f : nat -> _123774) (n : nat) : (term1686 _123774 op f n) = (term1689 _123774 op f n).
Proof. exact (eq_refl (term1686 _123774 op f n)). Qed.
Lemma lem6216673 {_123774 : Type'} (op : type1400 _123774) (f : nat -> _123774) (n : nat) : ((term1685 _123774 op f n) = (term1686 _123774 op f n)) = ((term1686 _123774 op f n) = (term1689 _123774 op f n)).
Proof. exact (MK_COMB (@lem6216671 _123774 op f n) (@lem6216672 _123774 op f n)). Qed.
Lemma lem6216674 {_123774 : Type'} (op : type1400 _123774) (f : nat -> _123774) (n : nat) : (term1686 _123774 op f n) = (term1689 _123774 op f n).
Proof. exact (EQ_MP (@lem6216673 _123774 op f n) (@lem6216665 _123774 op f n)). Qed.
Lemma lem6216675 {_123774 : Type'} (m : nat) (n : nat) (op : type1400 _123774) (f : nat -> _123774) : (term1653 _123774 m n op f) = (term1653 _123774 m n op f).
Proof. exact (eq_refl (term1653 _123774 m n op f)). Qed.
Lemma lem6216676 {_123774 : Type'} (m : nat) (op : type1400 _123774) (f : nat -> _123774) (n : nat) : (term1676 _123774 m op f n) = (term1690 _123774 m op f n).
Proof. exact (MK_COMB (@lem6216675 _123774 m n op f) (@lem6216674 _123774 op f n)). Qed.
Lemma lem6216677 {_123774 : Type'} (m : nat) (op : type1400 _123774) (f : nat -> _123774) (n : nat) : term1691 _123774 m op f n.
Proof. exact (fun h0 : term376 m n => @lem6216676 _123774 m op f n). Qed.
Lemma lem6216678 {_123774 : Type'} (m : nat) (op : type1400 _123774) (f : nat -> _123774) (n : nat) (e' : _123774) : term1692 _123774 m op f n e'.
Proof. exact (@lem6216658 _123774 op f m n (term1690 _123774 m op f n) e'). Qed.
Lemma lem6216679 {_123774 : Type'} (m : nat) (op : type1400 _123774) (f : nat -> _123774) (n : nat) (e' : _123774) : term1693 _123774 m op f n e'.
Proof. exact (@lem6216678 _123774 m op f n e' (@lem6216677 _123774 m op f n)). Qed.
Lemma lem6216683 {_123774 : Type'} (m : nat) (n : nat) (op : type1400 _123774) (f : nat -> _123774) : (term1394 _123774 m n op f) = (term1394 _123774 m n op f).
Proof. exact (eq_refl (term1394 _123774 m n op f)). Qed.
Lemma lem6216684 {_123774 : Type'} (m : nat) (n : nat) (op : type1400 _123774) (f : nat -> _123774) : term1694 _123774 m n op f.
Proof. exact (fun h0 : term391 m n => @lem6216683 _123774 m n op f). Qed.
Lemma lem6216685 {_123774 : Type'} (m : nat) (n : nat) (op : type1400 _123774) (f : nat -> _123774) : term1695 _123774 m n op f.
Proof. exact (@lem6216679 _123774 m op f n (term1394 _123774 m n op f)). Qed.
Lemma lem6216686 {_123774 : Type'} (m : nat) (n : nat) (op : type1400 _123774) (f : nat -> _123774) : (term1674 _123774 m n op f) = (term1696 _123774 m n op f).
Proof. exact (@lem6216685 _123774 m n op f (@lem6216684 _123774 m n op f)). Qed.
Lemma lem6216720 {_123774 : Type'} (m : nat) (n : nat) (f : nat -> _123774) (op : type1400 _123774) (h1 : @monoidal _123774 op) : (term1399 _123774 m n op f) = (term1696 _123774 m n op f).
Proof. exact (TRANS (@lem6216639 _123774 m n f op h1) (@lem6216686 _123774 m n op f)). Qed.
Lemma lem6216721 {_123774 : Type'} (m : nat) (n : nat) (op : type1400 _123774) (f : nat -> _123774) (h1 : @monoidal _123774 op) (h2 : (term1393 _123774 op m n f) = (term1394 _123774 m n op f)) : ((term1624 _123774 op m n f) = (term1399 _123774 m n op f)) = ((term1671 _123774 m n op f) = (term1696 _123774 m n op f)).
Proof. exact (MK_COMB (@lem6216465 _123774 m n op f h1 h2) (@lem6216720 _123774 m n f op h1)). Qed.
Lemma lem6216922 {_123774 : Type'} (m : nat) (n : nat) (op : type1400 _123774) (f : nat -> _123774) (h1 : @monoidal _123774 op) (h2 : (term1393 _123774 op m n f) = (term1394 _123774 m n op f)) : ((term1671 _123774 m n op f) = (term1696 _123774 m n op f)) = ((term1624 _123774 op m n f) = (term1399 _123774 m n op f)).
Proof. exact (SYM (@lem6216721 _123774 m n op f h1 h2)). Qed.
Lemma lem6216926 (m : nat) (n : nat) : (term880 m n) = (term376 m n).
Proof. exact (EQ_MP (@lem6208735 m n) (@lem6208734 m n)). Qed.
Lemma lem6216927 {_123774 : Type'} : (@COND _123774) = (@COND _123774).
Proof. exact (eq_refl (@COND _123774)). Qed.
Lemma lem6216928 {_123774 : Type'} (m : nat) (n : nat) : (term1697 _123774 m n) = (term1698 _123774 m n).
Proof. exact (MK_COMB (@lem6216927 _123774) (@lem6216926 m n)). Qed.
Lemma lem6216930 (m : nat) (n : nat) : (term375 m n) = (term376 m n).
Proof. exact (EQ_MP (@lem6204505 m n) (@lem6204504 m n)). Qed.
Lemma lem6216931 {_123774 : Type'} : (@COND _123774) = (@COND _123774).
Proof. exact (eq_refl (@COND _123774)). Qed.
Lemma lem6216932 {_123774 : Type'} (m : nat) (n : nat) : (term1699 _123774 m n) = (term1698 _123774 m n).
Proof. exact (MK_COMB (@lem6216931 _123774) (@lem6216930 m n)). Qed.
Lemma lem6216933 {_123774 : Type'} (m : nat) (op : type1400 _123774) (f : nat -> _123774) (n : nat) : (term1655 _123774 m op f n) = (term1655 _123774 m op f n).
Proof. exact (eq_refl (term1655 _123774 m op f n)). Qed.
Lemma lem6216934 {_123774 : Type'} (m : nat) (op : type1400 _123774) (f : nat -> _123774) (n : nat) : (term1700 _123774 m op f n) = (term1701 _123774 m op f n).
Proof. exact (MK_COMB (@lem6216932 _123774 m n) (@lem6216933 _123774 m op f n)). Qed.
Lemma lem6216935 {_123774 : Type'} (m : nat) (n : nat) (op : type1400 _123774) (f : nat -> _123774) : (term1394 _123774 m n op f) = (term1394 _123774 m n op f).
Proof. exact (eq_refl (term1394 _123774 m n op f)). Qed.
Lemma lem6216936 {_123774 : Type'} (m : nat) (n : nat) (op : type1400 _123774) (f : nat -> _123774) : (term1661 _123774 m n op f) = (term1702 _123774 m n op f).
Proof. exact (MK_COMB (@lem6216934 _123774 m op f n) (@lem6216935 _123774 m n op f)). Qed.
Lemma lem6216937 {_123774 : Type'} (op : type1400 _123774) : op = op.
Proof. exact (eq_refl op). Qed.
Lemma lem6216938 {_123774 : Type'} (m : nat) (n : nat) (op : type1400 _123774) (f : nat -> _123774) : (term1663 _123774 m n op f) = (term1703 _123774 m n op f).
Proof. exact (MK_COMB (@lem6216937 _123774 op) (@lem6216936 _123774 m n op f)). Qed.
Lemma lem6216939 {_123774 : Type'} (f : nat -> _123774) (n : nat) : (term1664 _123774 f n) = (term1664 _123774 f n).
Proof. exact (eq_refl (term1664 _123774 f n)). Qed.
Lemma lem6216940 {_123774 : Type'} (m : nat) (op : type1400 _123774) (f : nat -> _123774) (n : nat) : (term1665 _123774 m op f n) = (term1704 _123774 m op f n).
Proof. exact (MK_COMB (@lem6216938 _123774 m n op f) (@lem6216939 _123774 f n)). Qed.
Lemma lem6216941 {_123774 : Type'} (m : nat) (op : type1400 _123774) (f : nat -> _123774) (n : nat) : (term1705 _123774 m op f n) = (term1706 _123774 m op f n).
Proof. exact (MK_COMB (@lem6216928 _123774 m n) (@lem6216940 _123774 m op f n)). Qed.
Lemma lem6216943 (m : nat) (n : nat) : (term375 m n) = (term376 m n).
Proof. exact (EQ_MP (@lem6204505 m n) (@lem6204504 m n)). Qed.
Lemma lem6216944 {_123774 : Type'} : (@COND _123774) = (@COND _123774).
Proof. exact (eq_refl (@COND _123774)). Qed.
Lemma lem6216945 {_123774 : Type'} (m : nat) (n : nat) : (term1699 _123774 m n) = (term1698 _123774 m n).
Proof. exact (MK_COMB (@lem6216944 _123774) (@lem6216943 m n)). Qed.
Lemma lem6216946 {_123774 : Type'} (m : nat) (op : type1400 _123774) (f : nat -> _123774) (n : nat) : (term1655 _123774 m op f n) = (term1655 _123774 m op f n).
Proof. exact (eq_refl (term1655 _123774 m op f n)). Qed.
Lemma lem6216947 {_123774 : Type'} (m : nat) (op : type1400 _123774) (f : nat -> _123774) (n : nat) : (term1700 _123774 m op f n) = (term1701 _123774 m op f n).
Proof. exact (MK_COMB (@lem6216945 _123774 m n) (@lem6216946 _123774 m op f n)). Qed.
Lemma lem6216948 {_123774 : Type'} (m : nat) (n : nat) (op : type1400 _123774) (f : nat -> _123774) : (term1394 _123774 m n op f) = (term1394 _123774 m n op f).
Proof. exact (eq_refl (term1394 _123774 m n op f)). Qed.
Lemma lem6216949 {_123774 : Type'} (m : nat) (n : nat) (op : type1400 _123774) (f : nat -> _123774) : (term1661 _123774 m n op f) = (term1702 _123774 m n op f).
Proof. exact (MK_COMB (@lem6216947 _123774 m op f n) (@lem6216948 _123774 m n op f)). Qed.
Lemma lem6216950 {_123774 : Type'} (m : nat) (n : nat) (op : type1400 _123774) (f : nat -> _123774) : (term1671 _123774 m n op f) = (term1707 _123774 m n op f).
Proof. exact (MK_COMB (@lem6216941 _123774 m op f n) (@lem6216949 _123774 m n op f)). Qed.
Lemma lem6216951 {_123774 : Type'} : (@eq _123774) = (@eq _123774).
Proof. exact (eq_refl (@eq _123774)). Qed.
Lemma lem6216952 {_123774 : Type'} (m : nat) (n : nat) (op : type1400 _123774) (f : nat -> _123774) : (term1672 _123774 m n op f) = (term1708 _123774 m n op f).
Proof. exact (MK_COMB (@lem6216951 _123774) (@lem6216950 _123774 m n op f)). Qed.
Lemma lem6216953 {_123774 : Type'} (m : nat) (n : nat) (op : type1400 _123774) (f : nat -> _123774) : (term1696 _123774 m n op f) = (term1696 _123774 m n op f).
Proof. exact (eq_refl (term1696 _123774 m n op f)). Qed.
Lemma lem6216954 {_123774 : Type'} (m : nat) (n : nat) (op : type1400 _123774) (f : nat -> _123774) : ((term1671 _123774 m n op f) = (term1696 _123774 m n op f)) = ((term1707 _123774 m n op f) = (term1696 _123774 m n op f)).
Proof. exact (MK_COMB (@lem6216952 _123774 m n op f) (@lem6216953 _123774 m n op f)). Qed.
Lemma lem6216957 {_123774 : Type'} (m : nat) (n : nat) (op : type1400 _123774) (f : nat -> _123774) : ((term1707 _123774 m n op f) = (term1696 _123774 m n op f)) = ((term1671 _123774 m n op f) = (term1696 _123774 m n op f)).
Proof. exact (SYM (@lem6216954 _123774 m n op f)). Qed.
Lemma lem6216958 {_123774 : Type'} (_474 : _123774) (_475 : Prop) (_476 : _123774 -> Prop) (_477 : _123774) : (term1517 _123774 _476 _475 _474 _477) = (term1518 _123774 _474 _475 _476 _477).
Proof. exact (@lem13473 _123774 _474 _475 _476 _477). Qed.
Lemma lem6216959 {_123774 : Type'} (_474 : _123774) (_475 : Prop) (m : nat) (n : nat) (op : type1400 _123774) (f : nat -> _123774) (_477 : _123774) : (term1709 _123774 m n op f _475 _474 _477) = (term1710 _123774 _474 _475 m n op f _477).
Proof. exact (@lem6216958 _123774 _474 _475 (term1711 _123774 m n op f) _477). Qed.
Lemma lem6216960 {_123774 : Type'} (m : nat) (n : nat) (op : type1400 _123774) (f : nat -> _123774) : (term1712 _123774 m n op f) = (term1713 _123774 m n op f).
Proof. exact (@lem6216959 _123774 (term1704 _123774 m op f n) (term376 m n) m n op f (term1702 _123774 m n op f)). Qed.
Lemma lem6216961 {_123774 : Type'} (m : nat) (n : nat) (op : type1400 _123774) (f : nat -> _123774) : (term1714 _123774 m n op f) = ((term1702 _123774 m n op f) = (term1696 _123774 m n op f)).
Proof. exact (eq_refl (term1714 _123774 m n op f)). Qed.
Lemma lem6216962 (m : nat) (n : nat) : (term1715 m n) = (term1715 m n).
Proof. exact (eq_refl (term1715 m n)). Qed.
Lemma lem6216963 {_123774 : Type'} (m : nat) (n : nat) (op : type1400 _123774) (f : nat -> _123774) : (term1716 _123774 m n op f) = (term1717 _123774 m n op f).
Proof. exact (MK_COMB (@lem6216962 m n) (@lem6216961 _123774 m n op f)). Qed.
Lemma lem6216964 {_123774 : Type'} (m : nat) (n : nat) (op : type1400 _123774) (f : nat -> _123774) : (term1718 _123774 m op f n) = ((term1704 _123774 m op f n) = (term1696 _123774 m n op f)).
Proof. exact (eq_refl (term1718 _123774 m op f n)). Qed.
Lemma lem6216965 (m : nat) (n : nat) : (term1719 m n) = (term1719 m n).
Proof. exact (eq_refl (term1719 m n)). Qed.
Lemma lem6216966 {_123774 : Type'} (m : nat) (n : nat) (op : type1400 _123774) (f : nat -> _123774) : (term1720 _123774 m op f n) = (term1721 _123774 m n op f).
Proof. exact (MK_COMB (@lem6216965 m n) (@lem6216964 _123774 m n op f)). Qed.
Lemma lem6216967 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6216968 {_123774 : Type'} (m : nat) (n : nat) (op : type1400 _123774) (f : nat -> _123774) : (term1722 _123774 m op f n) = (term1723 _123774 m n op f).
Proof. exact (MK_COMB (@lem6216967) (@lem6216966 _123774 m n op f)). Qed.
Lemma lem6216969 {_123774 : Type'} (m : nat) (n : nat) (op : type1400 _123774) (f : nat -> _123774) : (term1713 _123774 m n op f) = (term1724 _123774 m n op f).
Proof. exact (MK_COMB (@lem6216968 _123774 m n op f) (@lem6216963 _123774 m n op f)). Qed.
Lemma lem6216970 {_123774 : Type'} (m : nat) (n : nat) (op : type1400 _123774) (f : nat -> _123774) : (term1712 _123774 m n op f) = ((term1707 _123774 m n op f) = (term1696 _123774 m n op f)).
Proof. exact (eq_refl (term1712 _123774 m n op f)). Qed.
Lemma lem6216971 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6216972 {_123774 : Type'} (m : nat) (n : nat) (op : type1400 _123774) (f : nat -> _123774) : (term1725 _123774 m n op f) = (term1726 _123774 m n op f).
Proof. exact (MK_COMB (@lem6216971) (@lem6216970 _123774 m n op f)). Qed.
Lemma lem6216973 {_123774 : Type'} (m : nat) (n : nat) (op : type1400 _123774) (f : nat -> _123774) : ((term1712 _123774 m n op f) = (term1713 _123774 m n op f)) = (((term1707 _123774 m n op f) = (term1696 _123774 m n op f)) = (term1724 _123774 m n op f)).
Proof. exact (MK_COMB (@lem6216972 _123774 m n op f) (@lem6216969 _123774 m n op f)). Qed.
Lemma lem6216974 {_123774 : Type'} (m : nat) (n : nat) (op : type1400 _123774) (f : nat -> _123774) : ((term1707 _123774 m n op f) = (term1696 _123774 m n op f)) = (term1724 _123774 m n op f).
Proof. exact (EQ_MP (@lem6216973 _123774 m n op f) (@lem6216960 _123774 m n op f)). Qed.
Lemma lem6216975 {_123774 : Type'} (m : nat) (n : nat) (op : type1400 _123774) (f : nat -> _123774) : (term1724 _123774 m n op f) = ((term1707 _123774 m n op f) = (term1696 _123774 m n op f)).
Proof. exact (SYM (@lem6216974 _123774 m n op f)). Qed.
Lemma lem6216976 (m : nat) (n : nat) (h1 : term376 m n) : term376 m n.
Proof. exact (h1). Qed.
Lemma lem6216977 (m : nat) (n : nat) : (term376 m n) = ((term376 m n) = True).
Proof. exact (@lem7 (term376 m n)). Qed.
Lemma lem6216978 (m : nat) (n : nat) (h1 : term376 m n) : (term376 m n) = True.
Proof. exact (EQ_MP (@lem6216977 m n) (@lem6216976 m n h1)). Qed.
Lemma lem6216979 {_123774 : Type'} (m : nat) (n : nat) (op : type1400 _123774) (f : nat -> _123774) : (term1727 _123774 m n op f) = (term1727 _123774 m n op f).
Proof. exact (eq_refl (term1727 _123774 m n op f)). Qed.
Lemma lem6216980 {_123774 : Type'} (op : type1400 _123774) (f : nat -> _123774) (m : nat) (n : nat) (h1 : term376 m n) : (term1728 _123774 op f m n) = (term1729 _123774 m n op f).
Proof. exact (MK_COMB (@lem6216979 _123774 m n op f) (@lem6216978 m n h1)). Qed.
Lemma lem6216981 {_123774 : Type'} (m : nat) (n : nat) (op : type1400 _123774) (f : nat -> _123774) : (term1729 _123774 m n op f) = ((term1730 _123774 m op f n) = (term1731 _123774 m n op f)).
Proof. exact (eq_refl (term1729 _123774 m n op f)). Qed.
Lemma lem6216982 {_123774 : Type'} (op : type1400 _123774) (f : nat -> _123774) (m : nat) (n : nat) : (term1732 _123774 op f m n) = (term1732 _123774 op f m n).
Proof. exact (eq_refl (term1732 _123774 op f m n)). Qed.
Lemma lem6216983 {_123774 : Type'} (m : nat) (n : nat) (op : type1400 _123774) (f : nat -> _123774) : ((term1728 _123774 op f m n) = (term1729 _123774 m n op f)) = ((term1728 _123774 op f m n) = ((term1730 _123774 m op f n) = (term1731 _123774 m n op f))).
Proof. exact (MK_COMB (@lem6216982 _123774 op f m n) (@lem6216981 _123774 m n op f)). Qed.
Lemma lem6216984 {_123774 : Type'} (m : nat) (n : nat) (op : type1400 _123774) (f : nat -> _123774) : (term1728 _123774 op f m n) = ((term1704 _123774 m op f n) = (term1696 _123774 m n op f)).
Proof. exact (eq_refl (term1728 _123774 op f m n)). Qed.
Lemma lem6216985 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6216986 {_123774 : Type'} (m : nat) (n : nat) (op : type1400 _123774) (f : nat -> _123774) : (term1732 _123774 op f m n) = (term1733 _123774 m n op f).
Proof. exact (MK_COMB (@lem6216985) (@lem6216984 _123774 m n op f)). Qed.
Lemma lem6216987 {_123774 : Type'} (m : nat) (n : nat) (op : type1400 _123774) (f : nat -> _123774) : ((term1730 _123774 m op f n) = (term1731 _123774 m n op f)) = ((term1730 _123774 m op f n) = (term1731 _123774 m n op f)).
Proof. exact (eq_refl ((term1730 _123774 m op f n) = (term1731 _123774 m n op f))). Qed.
Lemma lem6216988 {_123774 : Type'} (m : nat) (n : nat) (op : type1400 _123774) (f : nat -> _123774) : ((term1728 _123774 op f m n) = ((term1730 _123774 m op f n) = (term1731 _123774 m n op f))) = (((term1704 _123774 m op f n) = (term1696 _123774 m n op f)) = ((term1730 _123774 m op f n) = (term1731 _123774 m n op f))).
Proof. exact (MK_COMB (@lem6216986 _123774 m n op f) (@lem6216987 _123774 m n op f)). Qed.
Lemma lem6216989 {_123774 : Type'} (m : nat) (n : nat) (op : type1400 _123774) (f : nat -> _123774) : ((term1728 _123774 op f m n) = (term1729 _123774 m n op f)) = (((term1704 _123774 m op f n) = (term1696 _123774 m n op f)) = ((term1730 _123774 m op f n) = (term1731 _123774 m n op f))).
Proof. exact (TRANS (@lem6216983 _123774 m n op f) (@lem6216988 _123774 m n op f)). Qed.
Lemma lem6216990 {_123774 : Type'} (op : type1400 _123774) (f : nat -> _123774) (m : nat) (n : nat) (h1 : term376 m n) : ((term1704 _123774 m op f n) = (term1696 _123774 m n op f)) = ((term1730 _123774 m op f n) = (term1731 _123774 m n op f)).
Proof. exact (EQ_MP (@lem6216989 _123774 m n op f) (@lem6216980 _123774 op f m n h1)). Qed.
Lemma lem6216991 {_123774 : Type'} (op : type1400 _123774) (f : nat -> _123774) (m : nat) (n : nat) (h1 : term376 m n) : ((term1730 _123774 m op f n) = (term1731 _123774 m n op f)) = ((term1704 _123774 m op f n) = (term1696 _123774 m n op f)).
Proof. exact (SYM (@lem6216990 _123774 op f m n h1)). Qed.
Lemma lem6216992 (m : nat) (n : nat) (h1 : term391 m n) : term391 m n.
Proof. exact (h1). Qed.
Lemma lem6216993 (m : nat) (n : nat) : term1734 m n.
Proof. exact (@lem82 (term376 m n)). Qed.
Lemma lem6216994 (m : nat) (n : nat) (h1 : term391 m n) : (term376 m n) = False.
Proof. exact (@lem6216993 m n (@lem6216992 m n h1)). Qed.
Lemma lem6216995 {_123774 : Type'} (m : nat) (n : nat) (op : type1400 _123774) (f : nat -> _123774) : (term1735 _123774 m n op f) = (term1735 _123774 m n op f).
Proof. exact (eq_refl (term1735 _123774 m n op f)). Qed.
Lemma lem6216996 {_123774 : Type'} (op : type1400 _123774) (f : nat -> _123774) (m : nat) (n : nat) (h1 : term391 m n) : (term1736 _123774 op f m n) = (term1737 _123774 m n op f).
Proof. exact (MK_COMB (@lem6216995 _123774 m n op f) (@lem6216994 m n h1)). Qed.
Lemma lem6216997 {_123774 : Type'} (m : nat) (n : nat) (op : type1400 _123774) (f : nat -> _123774) : (term1737 _123774 m n op f) = ((term1738 _123774 m n op f) = (term1739 _123774 m n op f)).
Proof. exact (eq_refl (term1737 _123774 m n op f)). Qed.
Lemma lem6216998 {_123774 : Type'} (op : type1400 _123774) (f : nat -> _123774) (m : nat) (n : nat) : (term1740 _123774 op f m n) = (term1740 _123774 op f m n).
Proof. exact (eq_refl (term1740 _123774 op f m n)). Qed.
Lemma lem6216999 {_123774 : Type'} (m : nat) (n : nat) (op : type1400 _123774) (f : nat -> _123774) : ((term1736 _123774 op f m n) = (term1737 _123774 m n op f)) = ((term1736 _123774 op f m n) = ((term1738 _123774 m n op f) = (term1739 _123774 m n op f))).
Proof. exact (MK_COMB (@lem6216998 _123774 op f m n) (@lem6216997 _123774 m n op f)). Qed.
Lemma lem6217000 {_123774 : Type'} (m : nat) (n : nat) (op : type1400 _123774) (f : nat -> _123774) : (term1736 _123774 op f m n) = ((term1702 _123774 m n op f) = (term1696 _123774 m n op f)).
Proof. exact (eq_refl (term1736 _123774 op f m n)). Qed.
Lemma lem6217001 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6217002 {_123774 : Type'} (m : nat) (n : nat) (op : type1400 _123774) (f : nat -> _123774) : (term1740 _123774 op f m n) = (term1741 _123774 m n op f).
Proof. exact (MK_COMB (@lem6217001) (@lem6217000 _123774 m n op f)). Qed.
Lemma lem6217003 {_123774 : Type'} (m : nat) (n : nat) (op : type1400 _123774) (f : nat -> _123774) : ((term1738 _123774 m n op f) = (term1739 _123774 m n op f)) = ((term1738 _123774 m n op f) = (term1739 _123774 m n op f)).
Proof. exact (eq_refl ((term1738 _123774 m n op f) = (term1739 _123774 m n op f))). Qed.
Lemma lem6217004 {_123774 : Type'} (m : nat) (n : nat) (op : type1400 _123774) (f : nat -> _123774) : ((term1736 _123774 op f m n) = ((term1738 _123774 m n op f) = (term1739 _123774 m n op f))) = (((term1702 _123774 m n op f) = (term1696 _123774 m n op f)) = ((term1738 _123774 m n op f) = (term1739 _123774 m n op f))).
Proof. exact (MK_COMB (@lem6217002 _123774 m n op f) (@lem6217003 _123774 m n op f)). Qed.
Lemma lem6217005 {_123774 : Type'} (m : nat) (n : nat) (op : type1400 _123774) (f : nat -> _123774) : ((term1736 _123774 op f m n) = (term1737 _123774 m n op f)) = (((term1702 _123774 m n op f) = (term1696 _123774 m n op f)) = ((term1738 _123774 m n op f) = (term1739 _123774 m n op f))).
Proof. exact (TRANS (@lem6216999 _123774 m n op f) (@lem6217004 _123774 m n op f)). Qed.
Lemma lem6217006 {_123774 : Type'} (op : type1400 _123774) (f : nat -> _123774) (m : nat) (n : nat) (h1 : term391 m n) : ((term1702 _123774 m n op f) = (term1696 _123774 m n op f)) = ((term1738 _123774 m n op f) = (term1739 _123774 m n op f)).
Proof. exact (EQ_MP (@lem6217005 _123774 m n op f) (@lem6216996 _123774 op f m n h1)). Qed.
Lemma lem6217007 {_123774 : Type'} (op : type1400 _123774) (f : nat -> _123774) (m : nat) (n : nat) (h1 : term391 m n) : ((term1738 _123774 m n op f) = (term1739 _123774 m n op f)) = ((term1702 _123774 m n op f) = (term1696 _123774 m n op f)).
Proof. exact (SYM (@lem6217006 _123774 op f m n h1)). Qed.
Lemma lem6217015 {A : Type'} (t2 : A) (t1 : A) : (@COND A True t1 t2) = t1.
Proof. exact (proj1 (@lem12653 A t1 t2)). Qed.
Lemma lem6217016 {_123774 : Type'} (t2 : _123774) (t1 : _123774) : (@COND _123774 True t1 t2) = t1.
Proof. exact (@lem6217015 _123774 t2 t1). Qed.
Lemma lem6217017 {_123774 : Type'} (m : nat) (op : type1400 _123774) (f : nat -> _123774) (n : nat) : (term1742 _123774 m n op f) = (term1655 _123774 m op f n).
Proof. exact (@lem6217016 _123774 (term1394 _123774 m n op f) (term1655 _123774 m op f n)). Qed.
Lemma lem6217018 {_123774 : Type'} (op : type1400 _123774) : op = op.
Proof. exact (eq_refl op). Qed.
Lemma lem6217019 {_123774 : Type'} (m : nat) (op : type1400 _123774) (f : nat -> _123774) (n : nat) : (term1743 _123774 m n op f) = (term1744 _123774 m op f n).
Proof. exact (MK_COMB (@lem6217018 _123774 op) (@lem6217017 _123774 m op f n)). Qed.
Lemma lem6217020 {_123774 : Type'} (f : nat -> _123774) (n : nat) : (term1664 _123774 f n) = (term1664 _123774 f n).
Proof. exact (eq_refl (term1664 _123774 f n)). Qed.
Lemma lem6217021 {_123774 : Type'} (m : nat) (op : type1400 _123774) (f : nat -> _123774) (n : nat) : (term1730 _123774 m op f n) = (term1745 _123774 m op f n).
Proof. exact (MK_COMB (@lem6217019 _123774 m op f n) (@lem6217020 _123774 f n)). Qed.
Lemma lem6217022 {_123774 : Type'} : (@eq _123774) = (@eq _123774).
Proof. exact (eq_refl (@eq _123774)). Qed.
Lemma lem6217023 {_123774 : Type'} (m : nat) (op : type1400 _123774) (f : nat -> _123774) (n : nat) : (term1746 _123774 m op f n) = (term1747 _123774 m op f n).
Proof. exact (MK_COMB (@lem6217022 _123774) (@lem6217021 _123774 m op f n)). Qed.
Lemma lem6217025 {A : Type'} (t2 : A) (t1 : A) : (@COND A True t1 t2) = t1.
Proof. exact (proj1 (@lem12653 A t1 t2)). Qed.
Lemma lem6217026 {_123774 : Type'} (t2 : _123774) (t1 : _123774) : (@COND _123774 True t1 t2) = t1.
Proof. exact (@lem6217025 _123774 t2 t1). Qed.
Lemma lem6217027 {_123774 : Type'} (m : nat) (op : type1400 _123774) (f : nat -> _123774) (n : nat) : (term1731 _123774 m n op f) = (term1690 _123774 m op f n).
Proof. exact (@lem6217026 _123774 (term1394 _123774 m n op f) (term1690 _123774 m op f n)). Qed.
Lemma lem6217028 {_123774 : Type'} (m : nat) (op : type1400 _123774) (f : nat -> _123774) (n : nat) : ((term1730 _123774 m op f n) = (term1731 _123774 m n op f)) = ((term1745 _123774 m op f n) = (term1690 _123774 m op f n)).
Proof. exact (MK_COMB (@lem6217023 _123774 m op f n) (@lem6217027 _123774 m op f n)). Qed.
Lemma lem6217031 {_123774 : Type'} (m : nat) (n : nat) (op : type1400 _123774) (f : nat -> _123774) : ((term1745 _123774 m op f n) = (term1690 _123774 m op f n)) = ((term1730 _123774 m op f n) = (term1731 _123774 m n op f)).
Proof. exact (SYM (@lem6217028 _123774 m op f n)). Qed.
Lemma lem6217039 {A : Type'} (t1 : A) (t2 : A) : (@COND A False t1 t2) = t2.
Proof. exact (proj2 (@lem12653 A t1 t2)). Qed.
Lemma lem6217040 {_123774 : Type'} (t1 : _123774) (t2 : _123774) : (@COND _123774 False t1 t2) = t2.
Proof. exact (@lem6217039 _123774 t1 t2). Qed.
Lemma lem6217041 {_123774 : Type'} (m : nat) (n : nat) (op : type1400 _123774) (f : nat -> _123774) : (term1738 _123774 m n op f) = (term1394 _123774 m n op f).
Proof. exact (@lem6217040 _123774 (term1655 _123774 m op f n) (term1394 _123774 m n op f)). Qed.
Lemma lem6217042 {_123774 : Type'} : (@eq _123774) = (@eq _123774).
Proof. exact (eq_refl (@eq _123774)). Qed.
Lemma lem6217043 {_123774 : Type'} (m : nat) (n : nat) (op : type1400 _123774) (f : nat -> _123774) : (term1748 _123774 m n op f) = (term1749 _123774 m n op f).
Proof. exact (MK_COMB (@lem6217042 _123774) (@lem6217041 _123774 m n op f)). Qed.
Lemma lem6217045 {A : Type'} (t1 : A) (t2 : A) : (@COND A False t1 t2) = t2.
Proof. exact (proj2 (@lem12653 A t1 t2)). Qed.
Lemma lem6217046 {_123774 : Type'} (t1 : _123774) (t2 : _123774) : (@COND _123774 False t1 t2) = t2.
Proof. exact (@lem6217045 _123774 t1 t2). Qed.
Lemma lem6217047 {_123774 : Type'} (m : nat) (n : nat) (op : type1400 _123774) (f : nat -> _123774) : (term1739 _123774 m n op f) = (term1394 _123774 m n op f).
Proof. exact (@lem6217046 _123774 (term1690 _123774 m op f n) (term1394 _123774 m n op f)). Qed.
Lemma lem6217048 {_123774 : Type'} (m : nat) (n : nat) (op : type1400 _123774) (f : nat -> _123774) : ((term1738 _123774 m n op f) = (term1739 _123774 m n op f)) = ((term1394 _123774 m n op f) = (term1394 _123774 m n op f)).
Proof. exact (MK_COMB (@lem6217043 _123774 m n op f) (@lem6217047 _123774 m n op f)). Qed.
Lemma lem6217050 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem1863 A x) (@lem1862 A x)). Qed.
Lemma lem6217051 {_123774 : Type'} (x : _123774) : (x = x) = True.
Proof. exact (@lem6217050 _123774 x). Qed.
Lemma lem6217052 {_123774 : Type'} (m : nat) (n : nat) (op : type1400 _123774) (f : nat -> _123774) : ((term1394 _123774 m n op f) = (term1394 _123774 m n op f)) = True.
Proof. exact (@lem6217051 _123774 (term1394 _123774 m n op f)). Qed.
Lemma lem6217053 {_123774 : Type'} (m : nat) (n : nat) (op : type1400 _123774) (f : nat -> _123774) : ((term1738 _123774 m n op f) = (term1739 _123774 m n op f)) = True.
Proof. exact (TRANS (@lem6217048 _123774 m n op f) (@lem6217052 _123774 m n op f)). Qed.
Lemma lem6217054 {_123774 : Type'} (m : nat) (n : nat) (op : type1400 _123774) (f : nat -> _123774) : True = ((term1738 _123774 m n op f) = (term1739 _123774 m n op f)).
Proof. exact (SYM (@lem6217053 _123774 m n op f)). Qed.
Lemma lem6217055 {_123774 : Type'} (m : nat) (n : nat) (op : type1400 _123774) (f : nat -> _123774) : (term1738 _123774 m n op f) = (term1739 _123774 m n op f).
Proof. exact (EQ_MP (@lem6217054 _123774 m n op f) (@lem0)). Qed.
Lemma lem6217059 (n : nat) : (term2 n) = (term11 n).
Proof. exact (EQ_MP (@lem6200312 n) (@lem6200311 n)). Qed.
Lemma lem6217060 {_123774 : Type'} (f : nat -> _123774) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem6217061 {_123774 : Type'} (f : nat -> _123774) (n : nat) : (term1750 _123774 f n) = (term1654 _123774 f n).
Proof. exact (MK_COMB (@lem6217060 _123774 f) (@lem6217059 n)). Qed.
Lemma lem6217062 {_123774 : Type'} (op : type1400 _123774) : op = op.
Proof. exact (eq_refl op). Qed.
Lemma lem6217063 {_123774 : Type'} (op : type1400 _123774) (f : nat -> _123774) (n : nat) : (term1751 _123774 op f n) = (term1752 _123774 op f n).
Proof. exact (MK_COMB (@lem6217062 _123774 op) (@lem6217061 _123774 f n)). Qed.
Lemma lem6217065 (n : nat) : (term7 n) = (term14 n).
Proof. exact (EQ_MP (@lem6199349 n) (@lem6199348 n)). Qed.
Lemma lem6217066 {_123774 : Type'} (f : nat -> _123774) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem6217067 {_123774 : Type'} (f : nat -> _123774) (n : nat) : (term1753 _123774 f n) = (term1664 _123774 f n).
Proof. exact (MK_COMB (@lem6217066 _123774 f) (@lem6217065 n)). Qed.
Lemma lem6217068 {_123774 : Type'} (op : type1400 _123774) (f : nat -> _123774) (n : nat) : (term1689 _123774 op f n) = (term1754 _123774 op f n).
Proof. exact (MK_COMB (@lem6217063 _123774 op f n) (@lem6217067 _123774 f n)). Qed.
Lemma lem6217069 {_123774 : Type'} (m : nat) (n : nat) (op : type1400 _123774) (f : nat -> _123774) : (term1653 _123774 m n op f) = (term1653 _123774 m n op f).
Proof. exact (eq_refl (term1653 _123774 m n op f)). Qed.
Lemma lem6217070 {_123774 : Type'} (m : nat) (op : type1400 _123774) (f : nat -> _123774) (n : nat) : (term1690 _123774 m op f n) = (term1755 _123774 m op f n).
Proof. exact (MK_COMB (@lem6217069 _123774 m n op f) (@lem6217068 _123774 op f n)). Qed.
Lemma lem6217071 {_123774 : Type'} (m : nat) (op : type1400 _123774) (f : nat -> _123774) (n : nat) : (term1747 _123774 m op f n) = (term1747 _123774 m op f n).
Proof. exact (eq_refl (term1747 _123774 m op f n)). Qed.
Lemma lem6217072 {_123774 : Type'} (m : nat) (op : type1400 _123774) (f : nat -> _123774) (n : nat) : ((term1745 _123774 m op f n) = (term1690 _123774 m op f n)) = ((term1745 _123774 m op f n) = (term1755 _123774 m op f n)).
Proof. exact (MK_COMB (@lem6217071 _123774 m op f n) (@lem6217070 _123774 m op f n)). Qed.
Lemma lem6217075 {_123774 : Type'} (m : nat) (op : type1400 _123774) (f : nat -> _123774) (n : nat) : ((term1745 _123774 m op f n) = (term1755 _123774 m op f n)) = ((term1745 _123774 m op f n) = (term1690 _123774 m op f n)).
Proof. exact (SYM (@lem6217072 _123774 m op f n)). Qed.
Lemma lem6217077 (p : Prop) : p = (term1756 p).
Proof. exact (EQ_MP (@lem10578 p) (@lem10597 p)). Qed.
Lemma lem6217078 {_123774 : Type'} (m : nat) (op : type1400 _123774) (f : nat -> _123774) (n : nat) : ((term1745 _123774 m op f n) = (term1755 _123774 m op f n)) = (term1757 _123774 m op f n).
Proof. exact (@lem6217077 ((term1745 _123774 m op f n) = (term1755 _123774 m op f n))). Qed.
Lemma lem6217079 {_123774 : Type'} (m : nat) (op : type1400 _123774) (f : nat -> _123774) (n : nat) : (term1757 _123774 m op f n) = ((term1745 _123774 m op f n) = (term1755 _123774 m op f n)).
Proof. exact (SYM (@lem6217078 _123774 m op f n)). Qed.
Lemma lem6217080 {_123774 : Type'} (m : nat) (op : type1400 _123774) (f : nat -> _123774) (n : nat) (h1 : term1758 _123774 m op f n) : term1758 _123774 m op f n.
Proof. exact (h1). Qed.
Lemma lem6217081 {_123774 : Type'} : term1759 _123774.
Proof. exact (@lem5712802 _123774). Qed.
Lemma lem6217085 {_123774 : Type'} (m : nat) (op : type1400 _123774) (f : nat -> _123774) (n : nat) (h1 : term1760 _123774 m op f n) : term1760 _123774 m op f n.
Proof. exact (h1). Qed.
Lemma lem6217086 {_123774 : Type'} (m : nat) (op : type1400 _123774) (f : nat -> _123774) (n : nat) : term1761 _123774 m op f n.
Proof. exact (fun h0 : term1760 _123774 m op f n => @lem6217085 _123774 m op f n h0). Qed.
Lemma lem6217087 {_123774 : Type'} (m : nat) (op : type1400 _123774) (f : nat -> _123774) (n : nat) (h1 : term1761 _123774 m op f n) : term1761 _123774 m op f n.
Proof. exact (h1). Qed.
Lemma lem6217088 {_123774 : Type'} (m : nat) (op : type1400 _123774) (f : nat -> _123774) (n : nat) (h1 : term1760 _123774 m op f n) : term1760 _123774 m op f n.
Proof. exact (h1). Qed.
Lemma lem6217089 {_123774 : Type'} (m : nat) (op : type1400 _123774) (f : nat -> _123774) (n : nat) (h1 : term1760 _123774 m op f n) (h2 : term1761 _123774 m op f n) : term1760 _123774 m op f n.
Proof. exact (@lem6217087 _123774 m op f n h2 (@lem6217088 _123774 m op f n h1)). Qed.
Lemma lem6217090 {_123774 : Type'} (m : nat) (op : type1400 _123774) (f : nat -> _123774) (n : nat) (h1 : term1760 _123774 m op f n) : term1762 _123774 m op f n.
Proof. exact (fun h0 : term1761 _123774 m op f n => @lem6217089 _123774 m op f n h1 h0). Qed.
Lemma lem6217091 {_123774 : Type'} (m : nat) (op : type1400 _123774) (f : nat -> _123774) (n : nat) (h1 : term1761 _123774 m op f n) : term1761 _123774 m op f n.
Proof. exact (h1). Qed.
Lemma lem6217092 {_123774 : Type'} (m : nat) (op : type1400 _123774) (f : nat -> _123774) (n : nat) (h1 : term1760 _123774 m op f n) (h2 : term1761 _123774 m op f n) : term1760 _123774 m op f n.
Proof. exact (@lem6217090 _123774 m op f n h1 (@lem6217091 _123774 m op f n h2)). Qed.
Lemma lem6217093 {_123774 : Type'} (m : nat) (op : type1400 _123774) (f : nat -> _123774) (n : nat) (h1 : term1761 _123774 m op f n) : term1761 _123774 m op f n.
Proof. exact (fun h0 : term1760 _123774 m op f n => @lem6217092 _123774 m op f n h0 h1). Qed.
Lemma lem6217094 {_123774 : Type'} (m : nat) (op : type1400 _123774) (f : nat -> _123774) (n : nat) : term1763 _123774 m op f n.
Proof. exact (fun h0 : term1761 _123774 m op f n => @lem6217093 _123774 m op f n h0). Qed.
Lemma lem6217097 {_123774 : Type'} (m : nat) (op : type1400 _123774) (f : nat -> _123774) (n : nat) : term1761 _123774 m op f n.
Proof. exact (@lem6217094 _123774 m op f n (@lem6217086 _123774 m op f n)). Qed.
Lemma lem6217098 {_123774 : Type'} (m : nat) (op : type1400 _123774) (f : nat -> _123774) (n : nat) : term1761 _123774 m op f n.
Proof. exact (@lem6217097 _123774 m op f n). Qed.
Lemma lem6217124 (t : Prop) : (t -> False) = (~ t).
Proof. exact (proj2 (@lem16474 t)). Qed.
Lemma lem6217125 {_123774 : Type'} : (term1764 _123774) = (term1765 _123774).
Proof. exact (@lem6217124 (term1759 _123774)). Qed.
Lemma lem6217158 {_123774 : Type'} (m : nat) (op : type1400 _123774) (f : nat -> _123774) (n : nat) : (term1766 _123774 m op f n) = (term1766 _123774 m op f n).
Proof. exact (eq_refl (term1766 _123774 m op f n)). Qed.
Lemma lem6217159 {_123774 : Type'} (m : nat) (op : type1400 _123774) (f : nat -> _123774) (n : nat) : (term1767 _123774 m op f n) = (term1768 _123774 m op f n).
Proof. exact (MK_COMB (@lem6217158 _123774 m op f n) (@lem6217125 _123774)). Qed.
Lemma lem6217162 (m : nat) (n : nat) : (term1719 m n) = (term1719 m n).
Proof. exact (eq_refl (term1719 m n)). Qed.
Lemma lem6217163 {_123774 : Type'} (m : nat) (op : type1400 _123774) (f : nat -> _123774) (n : nat) : (term1769 _123774 m op f n) = (term1770 _123774 m op f n).
Proof. exact (MK_COMB (@lem6217162 m n) (@lem6217159 _123774 m op f n)). Qed.
Lemma lem6217166 {_123774 : Type'} (m : nat) (n : nat) (op : type1400 _123774) (f : nat -> _123774) : (term1396 _123774 m n op f) = (term1396 _123774 m n op f).
Proof. exact (eq_refl (term1396 _123774 m n op f)). Qed.
Lemma lem6217167 {_123774 : Type'} (m : nat) (op : type1400 _123774) (f : nat -> _123774) (n : nat) : (term1771 _123774 m op f n) = (term1772 _123774 m op f n).
Proof. exact (MK_COMB (@lem6217166 _123774 m n op f) (@lem6217163 _123774 m op f n)). Qed.
Lemma lem6217170 {_123774 : Type'} (op : type1400 _123774) : (term1773 _123774 op) = (term1773 _123774 op).
Proof. exact (eq_refl (term1773 _123774 op)). Qed.
Lemma lem6217171 {_123774 : Type'} (m : nat) (op : type1400 _123774) (f : nat -> _123774) (n : nat) : (term1760 _123774 m op f n) = (term1774 _123774 m op f n).
Proof. exact (MK_COMB (@lem6217170 _123774 op) (@lem6217167 _123774 m op f n)). Qed.
Lemma lem6217174 {_123774 : Type'} (op : type1400 _123774) (f : nat -> _123774) (n : nat) : (term1775 _123774 op f n) = (term1776 _123774 op f n).
Proof. exact (fun_ext (fun m : nat => @lem6217171 _123774 m op f n)). Qed.
Lemma lem6217175 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem6217176 {_123774 : Type'} (op : type1400 _123774) (f : nat -> _123774) (n : nat) : (term1777 _123774 op f n) = (term1778 _123774 op f n).
Proof. exact (MK_COMB (@lem6217175) (@lem6217174 _123774 op f n)). Qed.
Lemma lem6217181 {_123774 : Type'} (f : nat -> _123774) (n : nat) : (term1779 _123774 f n) = (term1780 _123774 f n).
Proof. exact (fun_ext (fun op : type1400 _123774 => @lem6217176 _123774 op f n)). Qed.
Lemma lem6217182 {_123774 : Type'} : (@all (_123774 -> _123774 -> _123774)) = (@all (_123774 -> _123774 -> _123774)).
Proof. exact (eq_refl (@all (_123774 -> _123774 -> _123774))). Qed.
Lemma lem6217183 {_123774 : Type'} (f : nat -> _123774) (n : nat) : (term1781 _123774 f n) = (term1782 _123774 f n).
Proof. exact (MK_COMB (@lem6217182 _123774) (@lem6217181 _123774 f n)). Qed.
Lemma lem6217188 {_123774 : Type'} (n : nat) : (term1783 _123774 n) = (term1784 _123774 n).
Proof. exact (fun_ext (fun f : nat -> _123774 => @lem6217183 _123774 f n)). Qed.
Lemma lem6217189 {_123774 : Type'} : (@all (nat -> _123774)) = (@all (nat -> _123774)).
Proof. exact (eq_refl (@all (nat -> _123774))). Qed.
Lemma lem6217190 {_123774 : Type'} (n : nat) : (term1785 _123774 n) = (term1786 _123774 n).
Proof. exact (MK_COMB (@lem6217189 _123774) (@lem6217188 _123774 n)). Qed.
Lemma lem6217195 {_123774 : Type'} : (term1787 _123774) = (term1788 _123774).
Proof. exact (fun_ext (fun n : nat => @lem6217190 _123774 n)). Qed.
Lemma lem6217196 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem6217203 {_123774 : Type'} : (term1789 _123774) = (term1790 _123774).
Proof. exact (MK_COMB (@lem6217196) (@lem6217195 _123774)). Qed.
Lemma lem6217204 {_123774 : Type'} (_79041 : type399 _123774) (h1 : _79041 = (term1791 _123774)) : _79041 = (term1791 _123774).
Proof. exact (h1). Qed.
Lemma lem6217205 {_123774 : Type'} (op : type1400 _123774) : op = op.
Proof. exact (eq_refl op). Qed.
Lemma lem6217206 {_123774 : Type'} (op : type1400 _123774) (_79041 : type399 _123774) (h1 : _79041 = (term1791 _123774)) : (_79041 op) = (term1792 _123774 op).
Proof. exact (MK_COMB (@lem6217204 _123774 _79041 h1) (@lem6217205 _123774 op)). Qed.
Lemma lem6217207 {_123774 : Type'} (op : type1400 _123774) : (term1792 _123774 op) = (term1793 _123774 op).
Proof. exact (eq_refl (term1792 _123774 op)). Qed.
Lemma lem6217208 {_123774 : Type'} (_79041 : type399 _123774) (op : type1400 _123774) : (term1794 _123774 _79041 op) = (term1794 _123774 _79041 op).
Proof. exact (eq_refl (term1794 _123774 _79041 op)). Qed.
Lemma lem6217209 {_123774 : Type'} (_79041 : type399 _123774) (op : type1400 _123774) : ((_79041 op) = (term1792 _123774 op)) = ((_79041 op) = (term1793 _123774 op)).
Proof. exact (MK_COMB (@lem6217208 _123774 _79041 op) (@lem6217207 _123774 op)). Qed.
Lemma lem6217210 {_123774 : Type'} (op : type1400 _123774) (_79041 : type399 _123774) (h1 : _79041 = (term1791 _123774)) : (_79041 op) = (term1793 _123774 op).
Proof. exact (EQ_MP (@lem6217209 _123774 _79041 op) (@lem6217206 _123774 op _79041 h1)). Qed.
Lemma lem6217211 {_123774 : Type'} (f : nat -> _123774) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem6217212 {_123774 : Type'} (op : type1400 _123774) (f : nat -> _123774) (_79041 : type399 _123774) (h1 : _79041 = (term1791 _123774)) : (_79041 op f) = (term1795 _123774 op f).
Proof. exact (MK_COMB (@lem6217210 _123774 op _79041 h1) (@lem6217211 _123774 f)). Qed.
Lemma lem6217213 {_123774 : Type'} (op : type1400 _123774) (f : nat -> _123774) : (term1795 _123774 op f) = (term1479 _123774 op f).
Proof. exact (eq_refl (term1795 _123774 op f)). Qed.
Lemma lem6217214 {_123774 : Type'} (_79041 : type399 _123774) (op : type1400 _123774) (f : nat -> _123774) : (term1796 _123774 _79041 op f) = (term1796 _123774 _79041 op f).
Proof. exact (eq_refl (term1796 _123774 _79041 op f)). Qed.
Lemma lem6217215 {_123774 : Type'} (_79041 : type399 _123774) (op : type1400 _123774) (f : nat -> _123774) : ((_79041 op f) = (term1795 _123774 op f)) = ((_79041 op f) = (term1479 _123774 op f)).
Proof. exact (MK_COMB (@lem6217214 _123774 _79041 op f) (@lem6217213 _123774 op f)). Qed.
Lemma lem6217216 {_123774 : Type'} (op : type1400 _123774) (f : nat -> _123774) (_79041 : type399 _123774) (h1 : _79041 = (term1791 _123774)) : (_79041 op f) = (term1479 _123774 op f).
Proof. exact (EQ_MP (@lem6217215 _123774 _79041 op f) (@lem6217212 _123774 op f _79041 h1)). Qed.
Lemma lem6217228 {_123774 : Type'} (op : type1400 _123774) (x : _123774) : ((term1797 _123774 op x) = x) = ((term1797 _123774 op x) = x).
Proof. exact (eq_refl ((term1797 _123774 op x) = x)). Qed.
Lemma lem6217229 {_123774 : Type'} (op : type1400 _123774) : (term1798 _123774 op) = (term1798 _123774 op).
Proof. exact (fun_ext (fun x : _123774 => @lem6217228 _123774 op x)). Qed.
Lemma lem6217230 {_123774 : Type'} : (@all _123774) = (@all _123774).
Proof. exact (eq_refl (@all _123774)). Qed.
Lemma lem6217231 {_123774 : Type'} (op : type1400 _123774) : (term1799 _123774 op) = (term1799 _123774 op).
Proof. exact (MK_COMB (@lem6217230 _123774) (@lem6217229 _123774 op)). Qed.
Lemma lem6217252 {_123774 : Type'} (op : type1400 _123774) (x : _123774) (y : _123774) (z : _123774) : ((term1800 _123774 x op y z) = (term1801 _123774 op x y z)) = ((term1800 _123774 x op y z) = (term1801 _123774 op x y z)).
Proof. exact (eq_refl ((term1800 _123774 x op y z) = (term1801 _123774 op x y z))). Qed.
Lemma lem6217253 {_123774 : Type'} (op : type1400 _123774) (x : _123774) (y : _123774) : (term1802 _123774 op x y) = (term1802 _123774 op x y).
Proof. exact (fun_ext (fun z : _123774 => @lem6217252 _123774 op x y z)). Qed.
Lemma lem6217254 {_123774 : Type'} : (@all _123774) = (@all _123774).
Proof. exact (eq_refl (@all _123774)). Qed.
Lemma lem6217255 {_123774 : Type'} (op : type1400 _123774) (x : _123774) (y : _123774) : (term1803 _123774 op x y) = (term1803 _123774 op x y).
Proof. exact (MK_COMB (@lem6217254 _123774) (@lem6217253 _123774 op x y)). Qed.
Lemma lem6217256 {_123774 : Type'} (op : type1400 _123774) (x : _123774) : (term1804 _123774 op x) = (term1804 _123774 op x).
Proof. exact (fun_ext (fun y : _123774 => @lem6217255 _123774 op x y)). Qed.
Lemma lem6217257 {_123774 : Type'} : (@all _123774) = (@all _123774).
Proof. exact (eq_refl (@all _123774)). Qed.
Lemma lem6217258 {_123774 : Type'} (op : type1400 _123774) (x : _123774) : (term1805 _123774 op x) = (term1805 _123774 op x).
Proof. exact (MK_COMB (@lem6217257 _123774) (@lem6217256 _123774 op x)). Qed.
Lemma lem6217259 {_123774 : Type'} (op : type1400 _123774) : (term1806 _123774 op) = (term1806 _123774 op).
Proof. exact (fun_ext (fun x : _123774 => @lem6217258 _123774 op x)). Qed.
Lemma lem6217260 {_123774 : Type'} : (@all _123774) = (@all _123774).
Proof. exact (eq_refl (@all _123774)). Qed.
Lemma lem6217261 {_123774 : Type'} (op : type1400 _123774) : (term1807 _123774 op) = (term1807 _123774 op).
Proof. exact (MK_COMB (@lem6217260 _123774) (@lem6217259 _123774 op)). Qed.
Lemma lem6217262 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6217263 {_123774 : Type'} (op : type1400 _123774) : (term1808 _123774 op) = (term1808 _123774 op).
Proof. exact (MK_COMB (@lem6217262) (@lem6217261 _123774 op)). Qed.
Lemma lem6217264 {_123774 : Type'} (op : type1400 _123774) : (term1809 _123774 op) = (term1809 _123774 op).
Proof. exact (MK_COMB (@lem6217263 _123774 op) (@lem6217231 _123774 op)). Qed.
Lemma lem6217277 {_123774 : Type'} (op : type1400 _123774) (y : _123774) (x : _123774) : ((op x y) = (op y x)) = ((op x y) = (op y x)).
Proof. exact (eq_refl ((op x y) = (op y x))). Qed.
Lemma lem6217278 {_123774 : Type'} (op : type1400 _123774) (x : _123774) : (term1810 _123774 op x) = (term1810 _123774 op x).
Proof. exact (fun_ext (fun y : _123774 => @lem6217277 _123774 op y x)). Qed.
Lemma lem6217279 {_123774 : Type'} : (@all _123774) = (@all _123774).
Proof. exact (eq_refl (@all _123774)). Qed.
Lemma lem6217280 {_123774 : Type'} (op : type1400 _123774) (x : _123774) : (term1811 _123774 op x) = (term1811 _123774 op x).
Proof. exact (MK_COMB (@lem6217279 _123774) (@lem6217278 _123774 op x)). Qed.
Lemma lem6217281 {_123774 : Type'} (op : type1400 _123774) : (term1812 _123774 op) = (term1812 _123774 op).
Proof. exact (fun_ext (fun x : _123774 => @lem6217280 _123774 op x)). Qed.
Lemma lem6217282 {_123774 : Type'} : (@all _123774) = (@all _123774).
Proof. exact (eq_refl (@all _123774)). Qed.
Lemma lem6217283 {_123774 : Type'} (op : type1400 _123774) : (term1813 _123774 op) = (term1813 _123774 op).
Proof. exact (MK_COMB (@lem6217282 _123774) (@lem6217281 _123774 op)). Qed.
Lemma lem6217284 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6217285 {_123774 : Type'} (op : type1400 _123774) : (term1814 _123774 op) = (term1814 _123774 op).
Proof. exact (MK_COMB (@lem6217284) (@lem6217283 _123774 op)). Qed.
Lemma lem6217286 {_123774 : Type'} (op : type1400 _123774) : (term1815 _123774 op) = (term1815 _123774 op).
Proof. exact (MK_COMB (@lem6217285 _123774 op) (@lem6217264 _123774 op)). Qed.
Lemma lem6217291 {_123774 : Type'} (op : type1400 _123774) : (term1816 _123774 op) = (term1816 _123774 op).
Proof. exact (eq_refl (term1816 _123774 op)). Qed.
Lemma lem6217292 {_123774 : Type'} (op : type1400 _123774) : ((@monoidal _123774 op) = (term1815 _123774 op)) = ((@monoidal _123774 op) = (term1815 _123774 op)).
Proof. exact (MK_COMB (@lem6217291 _123774 op) (@lem6217286 _123774 op)). Qed.
Lemma lem6217293 {_123774 : Type'} : (term1817 _123774) = (term1817 _123774).
Proof. exact (fun_ext (fun op : type1400 _123774 => @lem6217292 _123774 op)). Qed.
Lemma lem6217294 {_123774 : Type'} : (@all (_123774 -> _123774 -> _123774)) = (@all (_123774 -> _123774 -> _123774)).
Proof. exact (eq_refl (@all (_123774 -> _123774 -> _123774))). Qed.
Lemma lem6217295 {_123774 : Type'} : (term1759 _123774) = (term1759 _123774).
Proof. exact (MK_COMB (@lem6217294 _123774) (@lem6217293 _123774)). Qed.
Lemma lem6217296 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem6217297 {_123774 : Type'} : (term1765 _123774) = (term1765 _123774).
Proof. exact (MK_COMB (@lem6217296) (@lem6217295 _123774)). Qed.
Lemma lem6217348 {_123774 : Type'} (op : type1400 _123774) (f : nat -> _123774) (n : nat) : (term1754 _123774 op f n) = (term1754 _123774 op f n).
Proof. exact (eq_refl (term1754 _123774 op f n)). Qed.
Lemma lem6217350 {_123774 : Type'} (op : type1400 _123774) (f : nat -> _123774) (_79041 : type399 _123774) (h1 : _79041 = (term1791 _123774)) : (term1479 _123774 op f) = (_79041 op f).
Proof. exact (SYM (@lem6217216 _123774 op f _79041 h1)). Qed.
Lemma lem6217359 {_123774 : Type'} (op : type1400 _123774) (m : nat) (n : nat) : (term1818 _123774 op m n) = (term1818 _123774 op m n).
Proof. exact (eq_refl (term1818 _123774 op m n)). Qed.
Lemma lem6217360 {_123774 : Type'} (m : nat) (n : nat) (op : type1400 _123774) (f : nat -> _123774) (_79041 : type399 _123774) (h1 : _79041 = (term1791 _123774)) : (term1394 _123774 m n op f) = (term1819 _123774 m n _79041 op f).
Proof. exact (MK_COMB (@lem6217359 _123774 op m n) (@lem6217350 _123774 op f _79041 h1)). Qed.
Lemma lem6217361 {_123774 : Type'} (op : type1400 _123774) : op = op.
Proof. exact (eq_refl op). Qed.
Lemma lem6217362 {_123774 : Type'} (m : nat) (n : nat) (op : type1400 _123774) (f : nat -> _123774) (_79041 : type399 _123774) (h1 : _79041 = (term1791 _123774)) : (term1653 _123774 m n op f) = (term1820 _123774 m n _79041 op f).
Proof. exact (MK_COMB (@lem6217361 _123774 op) (@lem6217360 _123774 m n op f _79041 h1)). Qed.
Lemma lem6217363 {_123774 : Type'} (m : nat) (op : type1400 _123774) (f : nat -> _123774) (n : nat) (_79041 : type399 _123774) (h1 : _79041 = (term1791 _123774)) : (term1755 _123774 m op f n) = (term1821 _123774 m _79041 op f n).
Proof. exact (MK_COMB (@lem6217362 _123774 m n op f _79041 h1) (@lem6217348 _123774 op f n)). Qed.
Lemma lem6217388 {_123774 : Type'} (f : nat -> _123774) (n : nat) : (term1664 _123774 f n) = (term1664 _123774 f n).
Proof. exact (eq_refl (term1664 _123774 f n)). Qed.
Lemma lem6217411 {_123774 : Type'} (f : nat -> _123774) (n : nat) : (term1654 _123774 f n) = (term1654 _123774 f n).
Proof. exact (eq_refl (term1654 _123774 f n)). Qed.
Lemma lem6217413 {_123774 : Type'} (op : type1400 _123774) (f : nat -> _123774) (_79041 : type399 _123774) (h1 : _79041 = (term1791 _123774)) : (term1479 _123774 op f) = (_79041 op f).
Proof. exact (SYM (@lem6217216 _123774 op f _79041 h1)). Qed.
Lemma lem6217422 {_123774 : Type'} (op : type1400 _123774) (m : nat) (n : nat) : (term1818 _123774 op m n) = (term1818 _123774 op m n).
Proof. exact (eq_refl (term1818 _123774 op m n)). Qed.
Lemma lem6217423 {_123774 : Type'} (m : nat) (n : nat) (op : type1400 _123774) (f : nat -> _123774) (_79041 : type399 _123774) (h1 : _79041 = (term1791 _123774)) : (term1394 _123774 m n op f) = (term1819 _123774 m n _79041 op f).
Proof. exact (MK_COMB (@lem6217422 _123774 op m n) (@lem6217413 _123774 op f _79041 h1)). Qed.
Lemma lem6217424 {_123774 : Type'} (op : type1400 _123774) : op = op.
Proof. exact (eq_refl op). Qed.
Lemma lem6217425 {_123774 : Type'} (m : nat) (n : nat) (op : type1400 _123774) (f : nat -> _123774) (_79041 : type399 _123774) (h1 : _79041 = (term1791 _123774)) : (term1653 _123774 m n op f) = (term1820 _123774 m n _79041 op f).
Proof. exact (MK_COMB (@lem6217424 _123774 op) (@lem6217423 _123774 m n op f _79041 h1)). Qed.
Lemma lem6217426 {_123774 : Type'} (m : nat) (op : type1400 _123774) (f : nat -> _123774) (n : nat) (_79041 : type399 _123774) (h1 : _79041 = (term1791 _123774)) : (term1655 _123774 m op f n) = (term1822 _123774 m _79041 op f n).
Proof. exact (MK_COMB (@lem6217425 _123774 m n op f _79041 h1) (@lem6217411 _123774 f n)). Qed.
Lemma lem6217427 {_123774 : Type'} (op : type1400 _123774) : op = op.
Proof. exact (eq_refl op). Qed.
Lemma lem6217428 {_123774 : Type'} (m : nat) (op : type1400 _123774) (f : nat -> _123774) (n : nat) (_79041 : type399 _123774) (h1 : _79041 = (term1791 _123774)) : (term1744 _123774 m op f n) = (term1823 _123774 m _79041 op f n).
Proof. exact (MK_COMB (@lem6217427 _123774 op) (@lem6217426 _123774 m op f n _79041 h1)). Qed.
Lemma lem6217429 {_123774 : Type'} (m : nat) (op : type1400 _123774) (f : nat -> _123774) (n : nat) (_79041 : type399 _123774) (h1 : _79041 = (term1791 _123774)) : (term1745 _123774 m op f n) = (term1824 _123774 m _79041 op f n).
Proof. exact (MK_COMB (@lem6217428 _123774 m op f n _79041 h1) (@lem6217388 _123774 f n)). Qed.
Lemma lem6217430 {_123774 : Type'} : (@eq _123774) = (@eq _123774).
Proof. exact (eq_refl (@eq _123774)). Qed.
Lemma lem6217431 {_123774 : Type'} (m : nat) (op : type1400 _123774) (f : nat -> _123774) (n : nat) (_79041 : type399 _123774) (h1 : _79041 = (term1791 _123774)) : (term1747 _123774 m op f n) = (term1825 _123774 m _79041 op f n).
Proof. exact (MK_COMB (@lem6217430 _123774) (@lem6217429 _123774 m op f n _79041 h1)). Qed.
Lemma lem6217432 {_123774 : Type'} (m : nat) (op : type1400 _123774) (f : nat -> _123774) (n : nat) (_79041 : type399 _123774) (h1 : _79041 = (term1791 _123774)) : ((term1745 _123774 m op f n) = (term1755 _123774 m op f n)) = ((term1824 _123774 m _79041 op f n) = (term1821 _123774 m _79041 op f n)).
Proof. exact (MK_COMB (@lem6217431 _123774 m op f n _79041 h1) (@lem6217363 _123774 m op f n _79041 h1)). Qed.
Lemma lem6217433 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem6217434 {_123774 : Type'} (m : nat) (op : type1400 _123774) (f : nat -> _123774) (n : nat) (_79041 : type399 _123774) (h1 : _79041 = (term1791 _123774)) : (term1758 _123774 m op f n) = (term1826 _123774 m _79041 op f n).
Proof. exact (MK_COMB (@lem6217433) (@lem6217432 _123774 m op f n _79041 h1)). Qed.
Lemma lem6217435 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem6217436 {_123774 : Type'} (m : nat) (op : type1400 _123774) (f : nat -> _123774) (n : nat) (_79041 : type399 _123774) (h1 : _79041 = (term1791 _123774)) : (term1766 _123774 m op f n) = (term1827 _123774 m _79041 op f n).
Proof. exact (MK_COMB (@lem6217435) (@lem6217434 _123774 m op f n _79041 h1)). Qed.
Lemma lem6217437 {_123774 : Type'} (m : nat) (op : type1400 _123774) (f : nat -> _123774) (n : nat) (_79041 : type399 _123774) (h1 : _79041 = (term1791 _123774)) : (term1768 _123774 m op f n) = (term1828 _123774 m _79041 op f n).
Proof. exact (MK_COMB (@lem6217436 _123774 m op f n _79041 h1) (@lem6217297 _123774)). Qed.
Lemma lem6217446 (m : nat) (n : nat) : (term1719 m n) = (term1719 m n).
Proof. exact (eq_refl (term1719 m n)). Qed.
Lemma lem6217447 {_123774 : Type'} (m : nat) (op : type1400 _123774) (f : nat -> _123774) (n : nat) (_79041 : type399 _123774) (h1 : _79041 = (term1791 _123774)) : (term1770 _123774 m op f n) = (term1829 _123774 m _79041 op f n).
Proof. exact (MK_COMB (@lem6217446 m n) (@lem6217437 _123774 m op f n _79041 h1)). Qed.
Lemma lem6217449 {_123774 : Type'} (op : type1400 _123774) (f : nat -> _123774) (_79041 : type399 _123774) (h1 : _79041 = (term1791 _123774)) : (term1479 _123774 op f) = (_79041 op f).
Proof. exact (SYM (@lem6217216 _123774 op f _79041 h1)). Qed.
Lemma lem6217458 {_123774 : Type'} (op : type1400 _123774) (m : nat) (n : nat) : (term1818 _123774 op m n) = (term1818 _123774 op m n).
Proof. exact (eq_refl (term1818 _123774 op m n)). Qed.
Lemma lem6217459 {_123774 : Type'} (m : nat) (n : nat) (op : type1400 _123774) (f : nat -> _123774) (_79041 : type399 _123774) (h1 : _79041 = (term1791 _123774)) : (term1394 _123774 m n op f) = (term1819 _123774 m n _79041 op f).
Proof. exact (MK_COMB (@lem6217458 _123774 op m n) (@lem6217449 _123774 op f _79041 h1)). Qed.
Lemma lem6217500 {_123774 : Type'} (op : type1400 _123774) (m : nat) (n : nat) (f : nat -> _123774) : (term1830 _123774 op m n f) = (term1830 _123774 op m n f).
Proof. exact (eq_refl (term1830 _123774 op m n f)). Qed.
Lemma lem6217501 {_123774 : Type'} (m : nat) (n : nat) (op : type1400 _123774) (f : nat -> _123774) (_79041 : type399 _123774) (h1 : _79041 = (term1791 _123774)) : ((term1393 _123774 op m n f) = (term1394 _123774 m n op f)) = ((term1393 _123774 op m n f) = (term1819 _123774 m n _79041 op f)).
Proof. exact (MK_COMB (@lem6217500 _123774 op m n f) (@lem6217459 _123774 m n op f _79041 h1)). Qed.
Lemma lem6217502 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem6217503 {_123774 : Type'} (m : nat) (n : nat) (op : type1400 _123774) (f : nat -> _123774) (_79041 : type399 _123774) (h1 : _79041 = (term1791 _123774)) : (term1396 _123774 m n op f) = (term1831 _123774 m n _79041 op f).
Proof. exact (MK_COMB (@lem6217502) (@lem6217501 _123774 m n op f _79041 h1)). Qed.
Lemma lem6217504 {_123774 : Type'} (m : nat) (op : type1400 _123774) (f : nat -> _123774) (n : nat) (_79041 : type399 _123774) (h1 : _79041 = (term1791 _123774)) : (term1772 _123774 m op f n) = (term1832 _123774 m _79041 op f n).
Proof. exact (MK_COMB (@lem6217503 _123774 m n op f _79041 h1) (@lem6217447 _123774 m op f n _79041 h1)). Qed.
Lemma lem6217509 {_123774 : Type'} (op : type1400 _123774) : (term1773 _123774 op) = (term1773 _123774 op).
Proof. exact (eq_refl (term1773 _123774 op)). Qed.
Lemma lem6217510 {_123774 : Type'} (m : nat) (op : type1400 _123774) (f : nat -> _123774) (n : nat) (_79041 : type399 _123774) (h1 : _79041 = (term1791 _123774)) : (term1774 _123774 m op f n) = (term1833 _123774 m _79041 op f n).
Proof. exact (MK_COMB (@lem6217509 _123774 op) (@lem6217504 _123774 m op f n _79041 h1)). Qed.
Lemma lem6217511 {_123774 : Type'} (op : type1400 _123774) (f : nat -> _123774) (n : nat) (_79041 : type399 _123774) (h1 : _79041 = (term1791 _123774)) : (term1776 _123774 op f n) = (term1834 _123774 _79041 op f n).
Proof. exact (fun_ext (fun m : nat => @lem6217510 _123774 m op f n _79041 h1)). Qed.
Lemma lem6217512 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem6217513 {_123774 : Type'} (op : type1400 _123774) (f : nat -> _123774) (n : nat) (_79041 : type399 _123774) (h1 : _79041 = (term1791 _123774)) : (term1778 _123774 op f n) = (term1835 _123774 _79041 op f n).
Proof. exact (MK_COMB (@lem6217512) (@lem6217511 _123774 op f n _79041 h1)). Qed.
Lemma lem6217514 {_123774 : Type'} (f : nat -> _123774) (n : nat) (_79041 : type399 _123774) (h1 : _79041 = (term1791 _123774)) : (term1780 _123774 f n) = (term1836 _123774 _79041 f n).
Proof. exact (fun_ext (fun op : type1400 _123774 => @lem6217513 _123774 op f n _79041 h1)). Qed.
Lemma lem6217515 {_123774 : Type'} : (@all (_123774 -> _123774 -> _123774)) = (@all (_123774 -> _123774 -> _123774)).
Proof. exact (eq_refl (@all (_123774 -> _123774 -> _123774))). Qed.
Lemma lem6217516 {_123774 : Type'} (f : nat -> _123774) (n : nat) (_79041 : type399 _123774) (h1 : _79041 = (term1791 _123774)) : (term1782 _123774 f n) = (term1837 _123774 _79041 f n).
Proof. exact (MK_COMB (@lem6217515 _123774) (@lem6217514 _123774 f n _79041 h1)). Qed.
Lemma lem6217517 {_123774 : Type'} (n : nat) (_79041 : type399 _123774) (h1 : _79041 = (term1791 _123774)) : (term1784 _123774 n) = (term1838 _123774 _79041 n).
Proof. exact (fun_ext (fun f : nat -> _123774 => @lem6217516 _123774 f n _79041 h1)). Qed.
Lemma lem6217518 {_123774 : Type'} : (@all (nat -> _123774)) = (@all (nat -> _123774)).
Proof. exact (eq_refl (@all (nat -> _123774))). Qed.
Lemma lem6217519 {_123774 : Type'} (n : nat) (_79041 : type399 _123774) (h1 : _79041 = (term1791 _123774)) : (term1786 _123774 n) = (term1839 _123774 _79041 n).
Proof. exact (MK_COMB (@lem6217518 _123774) (@lem6217517 _123774 n _79041 h1)). Qed.
Lemma lem6217520 {_123774 : Type'} (_79041 : type399 _123774) (h1 : _79041 = (term1791 _123774)) : (term1788 _123774) = (term1840 _123774 _79041).
Proof. exact (fun_ext (fun n : nat => @lem6217519 _123774 n _79041 h1)). Qed.
Lemma lem6217521 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem6217522 {_123774 : Type'} (_79041 : type399 _123774) (h1 : _79041 = (term1791 _123774)) : (term1790 _123774) = (term1841 _123774 _79041).
Proof. exact (MK_COMB (@lem6217521) (@lem6217520 _123774 _79041 h1)). Qed.
Lemma lem6217523 {_123774 : Type'} (_79041 : type399 _123774) : term1842 _123774 _79041.
Proof. exact (fun h0 : _79041 = (term1791 _123774) => @lem6217522 _123774 _79041 h0). Qed.
Lemma lem6217524 {_123774 : Type'} : term1843 _123774.
Proof. exact (fun _79041 : type399 _123774 => @lem6217523 _123774 _79041). Qed.
Lemma lem6217526 {_3603 : Type'} (P : Prop) (c : _3603) (Q : _3603 -> Prop) : term1844 _3603 P c Q.
Proof. exact (EQ_MP (@lem20230 _3603 P c Q) (@lem0)). Qed.
Lemma lem6217527 {_123774 : Type'} (P : Prop) (c : type399 _123774) (Q : type81 _123774) : term1845 _123774 P c Q.
Proof. exact (@lem6217526 (type399 _123774) P c Q). Qed.
Lemma lem6217528 {_123774 : Type'} : term1846 _123774.
Proof. exact (@lem6217527 _123774 (term1790 _123774) (term1791 _123774) (term1847 _123774)). Qed.
Lemma lem6217529 {_123774 : Type'} (_79041 : type399 _123774) : (term1848 _123774 _79041) = (term1841 _123774 _79041).
Proof. exact (eq_refl (term1848 _123774 _79041)). Qed.
Lemma lem6217530 {_123774 : Type'} : (term1849 _123774) = (term1849 _123774).
Proof. exact (eq_refl (term1849 _123774)). Qed.
Lemma lem6217531 {_123774 : Type'} (_79041 : type399 _123774) : ((term1790 _123774) = (term1848 _123774 _79041)) = ((term1790 _123774) = (term1841 _123774 _79041)).
Proof. exact (MK_COMB (@lem6217530 _123774) (@lem6217529 _123774 _79041)). Qed.
Lemma lem6217532 {_123774 : Type'} (_79041 : type399 _123774) : (term1850 _123774 _79041) = (term1850 _123774 _79041).
Proof. exact (eq_refl (term1850 _123774 _79041)). Qed.
Lemma lem6217533 {_123774 : Type'} (_79041 : type399 _123774) : (term1851 _123774 _79041) = (term1842 _123774 _79041).
Proof. exact (MK_COMB (@lem6217532 _123774 _79041) (@lem6217531 _123774 _79041)). Qed.
Lemma lem6217534 {_123774 : Type'} : (term1852 _123774) = (term1853 _123774).
Proof. exact (fun_ext (fun _79041 : type399 _123774 => @lem6217533 _123774 _79041)). Qed.
Lemma lem6217535 {_123774 : Type'} : (@all ((_123774 -> _123774 -> _123774) -> (nat -> _123774) -> nat -> _123774)) = (@all ((_123774 -> _123774 -> _123774) -> (nat -> _123774) -> nat -> _123774)).
Proof. exact (eq_refl (@all ((_123774 -> _123774 -> _123774) -> (nat -> _123774) -> nat -> _123774))). Qed.
Lemma lem6217536 {_123774 : Type'} : (term1854 _123774) = (term1843 _123774).
Proof. exact (MK_COMB (@lem6217535 _123774) (@lem6217534 _123774)). Qed.
Lemma lem6217537 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem6217538 {_123774 : Type'} : (term1855 _123774) = (term1856 _123774).
Proof. exact (MK_COMB (@lem6217537) (@lem6217536 _123774)). Qed.
Lemma lem6217539 {_123774 : Type'} (_79041 : type399 _123774) : (term1848 _123774 _79041) = (term1841 _123774 _79041).
Proof. exact (eq_refl (term1848 _123774 _79041)). Qed.
Lemma lem6217540 {_123774 : Type'} (_79041 : type399 _123774) : (term1850 _123774 _79041) = (term1850 _123774 _79041).
Proof. exact (eq_refl (term1850 _123774 _79041)). Qed.
Lemma lem6217541 {_123774 : Type'} (_79041 : type399 _123774) : (term1857 _123774 _79041) = (term1858 _123774 _79041).
Proof. exact (MK_COMB (@lem6217540 _123774 _79041) (@lem6217539 _123774 _79041)). Qed.
Lemma lem6217542 {_123774 : Type'} : (term1859 _123774) = (term1860 _123774).
Proof. exact (fun_ext (fun _79041 : type399 _123774 => @lem6217541 _123774 _79041)). Qed.
Lemma lem6217543 {_123774 : Type'} : (@all ((_123774 -> _123774 -> _123774) -> (nat -> _123774) -> nat -> _123774)) = (@all ((_123774 -> _123774 -> _123774) -> (nat -> _123774) -> nat -> _123774)).
Proof. exact (eq_refl (@all ((_123774 -> _123774 -> _123774) -> (nat -> _123774) -> nat -> _123774))). Qed.
Lemma lem6217544 {_123774 : Type'} : (term1861 _123774) = (term1862 _123774).
Proof. exact (MK_COMB (@lem6217543 _123774) (@lem6217542 _123774)). Qed.
Lemma lem6217545 {_123774 : Type'} : (term1849 _123774) = (term1849 _123774).
Proof. exact (eq_refl (term1849 _123774)). Qed.
Lemma lem6217546 {_123774 : Type'} : ((term1790 _123774) = (term1861 _123774)) = ((term1790 _123774) = (term1862 _123774)).
Proof. exact (MK_COMB (@lem6217545 _123774) (@lem6217544 _123774)). Qed.
Lemma lem6217547 {_123774 : Type'} : (term1846 _123774) = (term1863 _123774).
Proof. exact (MK_COMB (@lem6217538 _123774) (@lem6217546 _123774)). Qed.
Lemma lem6217548 {_123774 : Type'} : term1863 _123774.
Proof. exact (EQ_MP (@lem6217547 _123774) (@lem6217528 _123774)). Qed.
Lemma lem6217549 {_123774 : Type'} : (term1790 _123774) = (term1862 _123774).
Proof. exact (@lem6217548 _123774 (@lem6217524 _123774)). Qed.
Lemma lem6217551 {_3571 _3575 : Type'} (s : _3575 -> _3571) (t : _3575 -> _3571) : (s = (term1864 _3571 _3575 t)) = (term1865 _3571 _3575 s t).
Proof. exact (EQ_MP (@lem19792 _3571 _3575 s t) (@lem0)). Qed.
Lemma lem6217552 {_123774 : Type'} (s : type399 _123774) (t : type399 _123774) : (s = (term1866 _123774 t)) = (term1867 _123774 s t).
Proof. exact (@lem6217551 (type972 _123774) (type1400 _123774) s t). Qed.
Lemma lem6217553 {_123774 : Type'} (_79041 : type399 _123774) : (_79041 = (term1868 _123774)) = (term1869 _123774 _79041).
Proof. exact (@lem6217552 _123774 _79041 (term1791 _123774)). Qed.
Lemma lem6217554 {_123774 : Type'} (op : type1400 _123774) : (term1792 _123774 op) = (term1793 _123774 op).
Proof. exact (eq_refl (term1792 _123774 op)). Qed.
Lemma lem6217555 {_123774 : Type'} : (term1868 _123774) = (term1791 _123774).
Proof. exact (fun_ext (fun op : type1400 _123774 => @lem6217554 _123774 op)). Qed.
Lemma lem6217556 {_123774 : Type'} (_79041 : type399 _123774) : (@eq ((_123774 -> _123774 -> _123774) -> (nat -> _123774) -> nat -> _123774) _79041) = (@eq ((_123774 -> _123774 -> _123774) -> (nat -> _123774) -> nat -> _123774) _79041).
Proof. exact (eq_refl (@eq ((_123774 -> _123774 -> _123774) -> (nat -> _123774) -> nat -> _123774) _79041)). Qed.
Lemma lem6217557 {_123774 : Type'} (_79041 : type399 _123774) : (_79041 = (term1868 _123774)) = (_79041 = (term1791 _123774)).
Proof. exact (MK_COMB (@lem6217556 _123774 _79041) (@lem6217555 _123774)). Qed.
Lemma lem6217558 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6217559 {_123774 : Type'} (_79041 : type399 _123774) : (term1870 _123774 _79041) = (term1871 _123774 _79041).
Proof. exact (MK_COMB (@lem6217558) (@lem6217557 _123774 _79041)). Qed.
Lemma lem6217560 {_123774 : Type'} (op : type1400 _123774) : (term1792 _123774 op) = (term1793 _123774 op).
Proof. exact (eq_refl (term1792 _123774 op)). Qed.
Lemma lem6217561 {_123774 : Type'} (_79041 : type399 _123774) (op : type1400 _123774) : (term1794 _123774 _79041 op) = (term1794 _123774 _79041 op).
Proof. exact (eq_refl (term1794 _123774 _79041 op)). Qed.
Lemma lem6217562 {_123774 : Type'} (_79041 : type399 _123774) (op : type1400 _123774) : ((_79041 op) = (term1792 _123774 op)) = ((_79041 op) = (term1793 _123774 op)).
Proof. exact (MK_COMB (@lem6217561 _123774 _79041 op) (@lem6217560 _123774 op)). Qed.
Lemma lem6217563 {_123774 : Type'} (_79041 : type399 _123774) : (term1872 _123774 _79041) = (term1873 _123774 _79041).
Proof. exact (fun_ext (fun op : type1400 _123774 => @lem6217562 _123774 _79041 op)). Qed.
Lemma lem6217564 {_123774 : Type'} : (@all (_123774 -> _123774 -> _123774)) = (@all (_123774 -> _123774 -> _123774)).
Proof. exact (eq_refl (@all (_123774 -> _123774 -> _123774))). Qed.
Lemma lem6217565 {_123774 : Type'} (_79041 : type399 _123774) : (term1869 _123774 _79041) = (term1874 _123774 _79041).
Proof. exact (MK_COMB (@lem6217564 _123774) (@lem6217563 _123774 _79041)). Qed.
Lemma lem6217566 {_123774 : Type'} (_79041 : type399 _123774) : ((_79041 = (term1868 _123774)) = (term1869 _123774 _79041)) = ((_79041 = (term1791 _123774)) = (term1874 _123774 _79041)).
Proof. exact (MK_COMB (@lem6217559 _123774 _79041) (@lem6217565 _123774 _79041)). Qed.
Lemma lem6217567 {_123774 : Type'} (_79041 : type399 _123774) : (_79041 = (term1791 _123774)) = (term1874 _123774 _79041).
Proof. exact (EQ_MP (@lem6217566 _123774 _79041) (@lem6217553 _123774 _79041)). Qed.
Lemma lem6217569 {_3571 _3575 : Type'} (s : _3575 -> _3571) (t : _3575 -> _3571) : (s = (term1864 _3571 _3575 t)) = (term1865 _3571 _3575 s t).
Proof. exact (EQ_MP (@lem19792 _3571 _3575 s t) (@lem0)). Qed.
Lemma lem6217570 {_123774 : Type'} (s : type972 _123774) (t : type972 _123774) : (s = (term1875 _123774 t)) = (term1876 _123774 s t).
Proof. exact (@lem6217569 (nat -> _123774) (nat -> _123774) s t). Qed.
Lemma lem6217571 {_123774 : Type'} (_79041 : type399 _123774) (op : type1400 _123774) : ((_79041 op) = (term1877 _123774 op)) = (term1878 _123774 _79041 op).
Proof. exact (@lem6217570 _123774 (_79041 op) (term1793 _123774 op)). Qed.
Lemma lem6217572 {_123774 : Type'} (op : type1400 _123774) (f : nat -> _123774) : (term1795 _123774 op f) = (term1479 _123774 op f).
Proof. exact (eq_refl (term1795 _123774 op f)). Qed.
Lemma lem6217573 {_123774 : Type'} (op : type1400 _123774) : (term1877 _123774 op) = (term1793 _123774 op).
Proof. exact (fun_ext (fun f : nat -> _123774 => @lem6217572 _123774 op f)). Qed.
Lemma lem6217574 {_123774 : Type'} (_79041 : type399 _123774) (op : type1400 _123774) : (term1794 _123774 _79041 op) = (term1794 _123774 _79041 op).
Proof. exact (eq_refl (term1794 _123774 _79041 op)). Qed.
Lemma lem6217575 {_123774 : Type'} (_79041 : type399 _123774) (op : type1400 _123774) : ((_79041 op) = (term1877 _123774 op)) = ((_79041 op) = (term1793 _123774 op)).
Proof. exact (MK_COMB (@lem6217574 _123774 _79041 op) (@lem6217573 _123774 op)). Qed.
Lemma lem6217576 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6217577 {_123774 : Type'} (_79041 : type399 _123774) (op : type1400 _123774) : (term1879 _123774 _79041 op) = (term1880 _123774 _79041 op).
Proof. exact (MK_COMB (@lem6217576) (@lem6217575 _123774 _79041 op)). Qed.
Lemma lem6217578 {_123774 : Type'} (op : type1400 _123774) (f : nat -> _123774) : (term1795 _123774 op f) = (term1479 _123774 op f).
Proof. exact (eq_refl (term1795 _123774 op f)). Qed.
Lemma lem6217579 {_123774 : Type'} (_79041 : type399 _123774) (op : type1400 _123774) (f : nat -> _123774) : (term1796 _123774 _79041 op f) = (term1796 _123774 _79041 op f).
Proof. exact (eq_refl (term1796 _123774 _79041 op f)). Qed.
Lemma lem6217580 {_123774 : Type'} (_79041 : type399 _123774) (op : type1400 _123774) (f : nat -> _123774) : ((_79041 op f) = (term1795 _123774 op f)) = ((_79041 op f) = (term1479 _123774 op f)).
Proof. exact (MK_COMB (@lem6217579 _123774 _79041 op f) (@lem6217578 _123774 op f)). Qed.
Lemma lem6217581 {_123774 : Type'} (_79041 : type399 _123774) (op : type1400 _123774) : (term1881 _123774 _79041 op) = (term1882 _123774 _79041 op).
Proof. exact (fun_ext (fun f : nat -> _123774 => @lem6217580 _123774 _79041 op f)). Qed.
Lemma lem6217582 {_123774 : Type'} : (@all (nat -> _123774)) = (@all (nat -> _123774)).
Proof. exact (eq_refl (@all (nat -> _123774))). Qed.
Lemma lem6217583 {_123774 : Type'} (_79041 : type399 _123774) (op : type1400 _123774) : (term1878 _123774 _79041 op) = (term1883 _123774 _79041 op).
Proof. exact (MK_COMB (@lem6217582 _123774) (@lem6217581 _123774 _79041 op)). Qed.
Lemma lem6217584 {_123774 : Type'} (_79041 : type399 _123774) (op : type1400 _123774) : (((_79041 op) = (term1877 _123774 op)) = (term1878 _123774 _79041 op)) = (((_79041 op) = (term1793 _123774 op)) = (term1883 _123774 _79041 op)).
Proof. exact (MK_COMB (@lem6217577 _123774 _79041 op) (@lem6217583 _123774 _79041 op)). Qed.
Lemma lem6217585 {_123774 : Type'} (_79041 : type399 _123774) (op : type1400 _123774) : ((_79041 op) = (term1793 _123774 op)) = (term1883 _123774 _79041 op).
Proof. exact (EQ_MP (@lem6217584 _123774 _79041 op) (@lem6217571 _123774 _79041 op)). Qed.
Lemma lem6217587 {_3571 _3575 : Type'} (s : _3575 -> _3571) (t : _3575 -> _3571) : (s = (term1864 _3571 _3575 t)) = (term1865 _3571 _3575 s t).
Proof. exact (EQ_MP (@lem19792 _3571 _3575 s t) (@lem0)). Qed.
Lemma lem6217588 {_123774 : Type'} (s : nat -> _123774) (t : nat -> _123774) : (s = (term1884 _123774 t)) = (term1885 _123774 s t).
Proof. exact (@lem6217587 _123774 nat s t). Qed.
Lemma lem6217589 {_123774 : Type'} (_79041 : type399 _123774) (op : type1400 _123774) (f : nat -> _123774) : ((_79041 op f) = (term1496 _123774 op f)) = (term1886 _123774 _79041 op f).
Proof. exact (@lem6217588 _123774 (_79041 op f) (term1479 _123774 op f)). Qed.
Lemma lem6217590 {_123774 : Type'} (op : type1400 _123774) (f : nat -> _123774) (i : nat) : (term1494 _123774 op f i) = (term1495 _123774 op f i).
Proof. exact (eq_refl (term1494 _123774 op f i)). Qed.
Lemma lem6217591 {_123774 : Type'} (op : type1400 _123774) (f : nat -> _123774) : (term1496 _123774 op f) = (term1479 _123774 op f).
Proof. exact (fun_ext (fun i : nat => @lem6217590 _123774 op f i)). Qed.
Lemma lem6217592 {_123774 : Type'} (_79041 : type399 _123774) (op : type1400 _123774) (f : nat -> _123774) : (term1796 _123774 _79041 op f) = (term1796 _123774 _79041 op f).
Proof. exact (eq_refl (term1796 _123774 _79041 op f)). Qed.
Lemma lem6217593 {_123774 : Type'} (_79041 : type399 _123774) (op : type1400 _123774) (f : nat -> _123774) : ((_79041 op f) = (term1496 _123774 op f)) = ((_79041 op f) = (term1479 _123774 op f)).
Proof. exact (MK_COMB (@lem6217592 _123774 _79041 op f) (@lem6217591 _123774 op f)). Qed.
Lemma lem6217594 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6217595 {_123774 : Type'} (_79041 : type399 _123774) (op : type1400 _123774) (f : nat -> _123774) : (term1887 _123774 _79041 op f) = (term1888 _123774 _79041 op f).
Proof. exact (MK_COMB (@lem6217594) (@lem6217593 _123774 _79041 op f)). Qed.
Lemma lem6217596 {_123774 : Type'} (op : type1400 _123774) (f : nat -> _123774) (i : nat) : (term1494 _123774 op f i) = (term1495 _123774 op f i).
Proof. exact (eq_refl (term1494 _123774 op f i)). Qed.
Lemma lem6217597 {_123774 : Type'} (_79041 : type399 _123774) (op : type1400 _123774) (f : nat -> _123774) (i : nat) : (term1889 _123774 _79041 op f i) = (term1889 _123774 _79041 op f i).
Proof. exact (eq_refl (term1889 _123774 _79041 op f i)). Qed.
Lemma lem6217598 {_123774 : Type'} (_79041 : type399 _123774) (op : type1400 _123774) (f : nat -> _123774) (i : nat) : ((_79041 op f i) = (term1494 _123774 op f i)) = ((_79041 op f i) = (term1495 _123774 op f i)).
Proof. exact (MK_COMB (@lem6217597 _123774 _79041 op f i) (@lem6217596 _123774 op f i)). Qed.
Lemma lem6217599 {_123774 : Type'} (_79041 : type399 _123774) (op : type1400 _123774) (f : nat -> _123774) : (term1890 _123774 _79041 op f) = (term1891 _123774 _79041 op f).
Proof. exact (fun_ext (fun i : nat => @lem6217598 _123774 _79041 op f i)). Qed.
Lemma lem6217600 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem6217601 {_123774 : Type'} (_79041 : type399 _123774) (op : type1400 _123774) (f : nat -> _123774) : (term1886 _123774 _79041 op f) = (term1892 _123774 _79041 op f).
Proof. exact (MK_COMB (@lem6217600) (@lem6217599 _123774 _79041 op f)). Qed.
Lemma lem6217602 {_123774 : Type'} (_79041 : type399 _123774) (op : type1400 _123774) (f : nat -> _123774) : (((_79041 op f) = (term1496 _123774 op f)) = (term1886 _123774 _79041 op f)) = (((_79041 op f) = (term1479 _123774 op f)) = (term1892 _123774 _79041 op f)).
Proof. exact (MK_COMB (@lem6217595 _123774 _79041 op f) (@lem6217601 _123774 _79041 op f)). Qed.
Lemma lem6217603 {_123774 : Type'} (_79041 : type399 _123774) (op : type1400 _123774) (f : nat -> _123774) : ((_79041 op f) = (term1479 _123774 op f)) = (term1892 _123774 _79041 op f).
Proof. exact (EQ_MP (@lem6217602 _123774 _79041 op f) (@lem6217589 _123774 _79041 op f)). Qed.
Lemma lem6217604 {_123774 : Type'} (_79041 : type399 _123774) (op : type1400 _123774) (f : nat -> _123774) (i : nat) : ((_79041 op f i) = (term1495 _123774 op f i)) = ((_79041 op f i) = (term1495 _123774 op f i)).
Proof. exact (eq_refl ((_79041 op f i) = (term1495 _123774 op f i))). Qed.
Lemma lem6217605 {_123774 : Type'} (_79041 : type399 _123774) (op : type1400 _123774) (f : nat -> _123774) : (term1891 _123774 _79041 op f) = (term1891 _123774 _79041 op f).
Proof. exact (fun_ext (fun i : nat => @lem6217604 _123774 _79041 op f i)). Qed.
Lemma lem6217606 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem6217607 {_123774 : Type'} (_79041 : type399 _123774) (op : type1400 _123774) (f : nat -> _123774) : (term1892 _123774 _79041 op f) = (term1892 _123774 _79041 op f).
Proof. exact (MK_COMB (@lem6217606) (@lem6217605 _123774 _79041 op f)). Qed.
Lemma lem6217608 {_123774 : Type'} (_79041 : type399 _123774) (op : type1400 _123774) (f : nat -> _123774) : ((_79041 op f) = (term1479 _123774 op f)) = (term1892 _123774 _79041 op f).
Proof. exact (TRANS (@lem6217603 _123774 _79041 op f) (@lem6217607 _123774 _79041 op f)). Qed.
Lemma lem6217609 {_123774 : Type'} (_79041 : type399 _123774) (op : type1400 _123774) : (term1882 _123774 _79041 op) = (term1893 _123774 _79041 op).
Proof. exact (fun_ext (fun f : nat -> _123774 => @lem6217608 _123774 _79041 op f)). Qed.
Lemma lem6217610 {_123774 : Type'} : (@all (nat -> _123774)) = (@all (nat -> _123774)).
Proof. exact (eq_refl (@all (nat -> _123774))). Qed.
Lemma lem6217611 {_123774 : Type'} (_79041 : type399 _123774) (op : type1400 _123774) : (term1883 _123774 _79041 op) = (term1894 _123774 _79041 op).
Proof. exact (MK_COMB (@lem6217610 _123774) (@lem6217609 _123774 _79041 op)). Qed.
Lemma lem6217612 {_123774 : Type'} (_79041 : type399 _123774) (op : type1400 _123774) : ((_79041 op) = (term1793 _123774 op)) = (term1894 _123774 _79041 op).
Proof. exact (TRANS (@lem6217585 _123774 _79041 op) (@lem6217611 _123774 _79041 op)). Qed.
Lemma lem6217613 {_123774 : Type'} (_79041 : type399 _123774) : (term1873 _123774 _79041) = (term1895 _123774 _79041).
Proof. exact (fun_ext (fun op : type1400 _123774 => @lem6217612 _123774 _79041 op)). Qed.
Lemma lem6217614 {_123774 : Type'} : (@all (_123774 -> _123774 -> _123774)) = (@all (_123774 -> _123774 -> _123774)).
Proof. exact (eq_refl (@all (_123774 -> _123774 -> _123774))). Qed.
Lemma lem6217615 {_123774 : Type'} (_79041 : type399 _123774) : (term1874 _123774 _79041) = (term1896 _123774 _79041).
Proof. exact (MK_COMB (@lem6217614 _123774) (@lem6217613 _123774 _79041)). Qed.
Lemma lem6217616 {_123774 : Type'} (_79041 : type399 _123774) : (_79041 = (term1791 _123774)) = (term1896 _123774 _79041).
Proof. exact (TRANS (@lem6217567 _123774 _79041) (@lem6217615 _123774 _79041)). Qed.
Lemma lem6217617 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem6217618 {_123774 : Type'} (_79041 : type399 _123774) : (term1850 _123774 _79041) = (term1897 _123774 _79041).
Proof. exact (MK_COMB (@lem6217617) (@lem6217616 _123774 _79041)). Qed.
Lemma lem6217619 {_123774 : Type'} (_79041 : type399 _123774) : (term1841 _123774 _79041) = (term1841 _123774 _79041).
Proof. exact (eq_refl (term1841 _123774 _79041)). Qed.
Lemma lem6217620 {_123774 : Type'} (_79041 : type399 _123774) : (term1858 _123774 _79041) = (term1898 _123774 _79041).
Proof. exact (MK_COMB (@lem6217618 _123774 _79041) (@lem6217619 _123774 _79041)). Qed.
Lemma lem6217621 {_123774 : Type'} : (term1860 _123774) = (term1899 _123774).
Proof. exact (fun_ext (fun _79041 : type399 _123774 => @lem6217620 _123774 _79041)). Qed.
Lemma lem6217622 {_123774 : Type'} : (@all ((_123774 -> _123774 -> _123774) -> (nat -> _123774) -> nat -> _123774)) = (@all ((_123774 -> _123774 -> _123774) -> (nat -> _123774) -> nat -> _123774)).
Proof. exact (eq_refl (@all ((_123774 -> _123774 -> _123774) -> (nat -> _123774) -> nat -> _123774))). Qed.
Lemma lem6217623 {_123774 : Type'} : (term1862 _123774) = (term1900 _123774).
Proof. exact (MK_COMB (@lem6217622 _123774) (@lem6217621 _123774)). Qed.
Lemma lem6217624 {_123774 : Type'} : (term1849 _123774) = (term1849 _123774).
Proof. exact (eq_refl (term1849 _123774)). Qed.
Lemma lem6217625 {_123774 : Type'} : ((term1790 _123774) = (term1862 _123774)) = ((term1790 _123774) = (term1900 _123774)).
Proof. exact (MK_COMB (@lem6217624 _123774) (@lem6217623 _123774)). Qed.
Lemma lem6217628 {_123774 : Type'} : (term1790 _123774) = (term1900 _123774).
Proof. exact (EQ_MP (@lem6217625 _123774) (@lem6217549 _123774)). Qed.
Lemma lem6217629 {_123774 : Type'} : (term1789 _123774) = (term1900 _123774).
Proof. exact (TRANS (@lem6217203 _123774) (@lem6217628 _123774)). Qed.
Lemma lem6217630 {_123774 : Type'} (op : type1400 _123774) (x : _123774) : ((term1797 _123774 op x) = x) = ((term1797 _123774 op x) = x).
Proof. exact (eq_refl ((term1797 _123774 op x) = x)). Qed.
Lemma lem6217631 {_123774 : Type'} (op : type1400 _123774) : (term1798 _123774 op) = (term1798 _123774 op).
Proof. exact (fun_ext (fun x : _123774 => @lem6217630 _123774 op x)). Qed.
Lemma lem6217632 {_123774 : Type'} : (@all _123774) = (@all _123774).
Proof. exact (eq_refl (@all _123774)). Qed.
Lemma lem6217633 {_123774 : Type'} (op : type1400 _123774) : (term1799 _123774 op) = (term1799 _123774 op).
Proof. exact (MK_COMB (@lem6217632 _123774) (@lem6217631 _123774 op)). Qed.
Lemma lem6217634 {_123774 : Type'} (op : type1400 _123774) (x : _123774) (y : _123774) (z : _123774) : ((term1800 _123774 x op y z) = (term1801 _123774 op x y z)) = ((term1800 _123774 x op y z) = (term1801 _123774 op x y z)).
Proof. exact (eq_refl ((term1800 _123774 x op y z) = (term1801 _123774 op x y z))). Qed.
Lemma lem6217635 {_123774 : Type'} (op : type1400 _123774) (x : _123774) (y : _123774) : (term1802 _123774 op x y) = (term1802 _123774 op x y).
Proof. exact (fun_ext (fun z : _123774 => @lem6217634 _123774 op x y z)). Qed.
Lemma lem6217636 {_123774 : Type'} : (@all _123774) = (@all _123774).
Proof. exact (eq_refl (@all _123774)). Qed.
Lemma lem6217637 {_123774 : Type'} (op : type1400 _123774) (x : _123774) (y : _123774) : (term1803 _123774 op x y) = (term1803 _123774 op x y).
Proof. exact (MK_COMB (@lem6217636 _123774) (@lem6217635 _123774 op x y)). Qed.
Lemma lem6217638 {_123774 : Type'} (op : type1400 _123774) (x : _123774) : (term1804 _123774 op x) = (term1804 _123774 op x).
Proof. exact (fun_ext (fun y : _123774 => @lem6217637 _123774 op x y)). Qed.
Lemma lem6217639 {_123774 : Type'} : (@all _123774) = (@all _123774).
Proof. exact (eq_refl (@all _123774)). Qed.
Lemma lem6217640 {_123774 : Type'} (op : type1400 _123774) (x : _123774) : (term1805 _123774 op x) = (term1805 _123774 op x).
Proof. exact (MK_COMB (@lem6217639 _123774) (@lem6217638 _123774 op x)). Qed.
Lemma lem6217641 {_123774 : Type'} (op : type1400 _123774) : (term1806 _123774 op) = (term1806 _123774 op).
Proof. exact (fun_ext (fun x : _123774 => @lem6217640 _123774 op x)). Qed.
Lemma lem6217642 {_123774 : Type'} : (@all _123774) = (@all _123774).
Proof. exact (eq_refl (@all _123774)). Qed.
Lemma lem6217643 {_123774 : Type'} (op : type1400 _123774) : (term1807 _123774 op) = (term1807 _123774 op).
Proof. exact (MK_COMB (@lem6217642 _123774) (@lem6217641 _123774 op)). Qed.
Lemma lem6217644 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6217645 {_123774 : Type'} (op : type1400 _123774) : (term1808 _123774 op) = (term1808 _123774 op).
Proof. exact (MK_COMB (@lem6217644) (@lem6217643 _123774 op)). Qed.
Lemma lem6217646 {_123774 : Type'} (op : type1400 _123774) : (term1809 _123774 op) = (term1809 _123774 op).
Proof. exact (MK_COMB (@lem6217645 _123774 op) (@lem6217633 _123774 op)). Qed.
Lemma lem6217647 {_123774 : Type'} (op : type1400 _123774) (y : _123774) (x : _123774) : ((op x y) = (op y x)) = ((op x y) = (op y x)).
Proof. exact (eq_refl ((op x y) = (op y x))). Qed.
Lemma lem6217648 {_123774 : Type'} (op : type1400 _123774) (x : _123774) : (term1810 _123774 op x) = (term1810 _123774 op x).
Proof. exact (fun_ext (fun y : _123774 => @lem6217647 _123774 op y x)). Qed.
Lemma lem6217649 {_123774 : Type'} : (@all _123774) = (@all _123774).
Proof. exact (eq_refl (@all _123774)). Qed.
Lemma lem6217650 {_123774 : Type'} (op : type1400 _123774) (x : _123774) : (term1811 _123774 op x) = (term1811 _123774 op x).
Proof. exact (MK_COMB (@lem6217649 _123774) (@lem6217648 _123774 op x)). Qed.
Lemma lem6217651 {_123774 : Type'} (op : type1400 _123774) : (term1812 _123774 op) = (term1812 _123774 op).
Proof. exact (fun_ext (fun x : _123774 => @lem6217650 _123774 op x)). Qed.
Lemma lem6217652 {_123774 : Type'} : (@all _123774) = (@all _123774).
Proof. exact (eq_refl (@all _123774)). Qed.
Lemma lem6217653 {_123774 : Type'} (op : type1400 _123774) : (term1813 _123774 op) = (term1813 _123774 op).
Proof. exact (MK_COMB (@lem6217652 _123774) (@lem6217651 _123774 op)). Qed.
Lemma lem6217654 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6217655 {_123774 : Type'} (op : type1400 _123774) : (term1814 _123774 op) = (term1814 _123774 op).
Proof. exact (MK_COMB (@lem6217654) (@lem6217653 _123774 op)). Qed.
Lemma lem6217656 {_123774 : Type'} (op : type1400 _123774) : (term1815 _123774 op) = (term1815 _123774 op).
Proof. exact (MK_COMB (@lem6217655 _123774 op) (@lem6217646 _123774 op)). Qed.
Lemma lem6217659 {_123774 : Type'} (op : type1400 _123774) : (term1816 _123774 op) = (term1816 _123774 op).
Proof. exact (eq_refl (term1816 _123774 op)). Qed.
Lemma lem6217660 {_123774 : Type'} (op : type1400 _123774) : ((@monoidal _123774 op) = (term1815 _123774 op)) = ((@monoidal _123774 op) = (term1815 _123774 op)).
Proof. exact (MK_COMB (@lem6217659 _123774 op) (@lem6217656 _123774 op)). Qed.
Lemma lem6217661 {_123774 : Type'} : (term1817 _123774) = (term1817 _123774).
Proof. exact (fun_ext (fun op : type1400 _123774 => @lem6217660 _123774 op)). Qed.
Lemma lem6217662 {_123774 : Type'} : (@all (_123774 -> _123774 -> _123774)) = (@all (_123774 -> _123774 -> _123774)).
Proof. exact (eq_refl (@all (_123774 -> _123774 -> _123774))). Qed.
Lemma lem6217663 {_123774 : Type'} : (term1759 _123774) = (term1759 _123774).
Proof. exact (MK_COMB (@lem6217662 _123774) (@lem6217661 _123774)). Qed.
Lemma lem6217664 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem6217665 {_123774 : Type'} : (term1765 _123774) = (term1765 _123774).
Proof. exact (MK_COMB (@lem6217664) (@lem6217663 _123774)). Qed.
Lemma lem6217670 {_123774 : Type'} (m : nat) (_79041 : type399 _123774) (op : type1400 _123774) (f : nat -> _123774) (n : nat) : (term1827 _123774 m _79041 op f n) = (term1827 _123774 m _79041 op f n).
Proof. exact (eq_refl (term1827 _123774 m _79041 op f n)). Qed.
Lemma lem6217671 {_123774 : Type'} (m : nat) (_79041 : type399 _123774) (op : type1400 _123774) (f : nat -> _123774) (n : nat) : (term1828 _123774 m _79041 op f n) = (term1828 _123774 m _79041 op f n).
Proof. exact (MK_COMB (@lem6217670 _123774 m _79041 op f n) (@lem6217665 _123774)). Qed.
Lemma lem6217674 (m : nat) (n : nat) : (term1719 m n) = (term1719 m n).
Proof. exact (eq_refl (term1719 m n)). Qed.
Lemma lem6217675 {_123774 : Type'} (m : nat) (_79041 : type399 _123774) (op : type1400 _123774) (f : nat -> _123774) (n : nat) : (term1829 _123774 m _79041 op f n) = (term1829 _123774 m _79041 op f n).
Proof. exact (MK_COMB (@lem6217674 m n) (@lem6217671 _123774 m _79041 op f n)). Qed.
Lemma lem6217678 {_123774 : Type'} (m : nat) (n : nat) (_79041 : type399 _123774) (op : type1400 _123774) (f : nat -> _123774) : (term1831 _123774 m n _79041 op f) = (term1831 _123774 m n _79041 op f).
Proof. exact (eq_refl (term1831 _123774 m n _79041 op f)). Qed.
Lemma lem6217679 {_123774 : Type'} (m : nat) (_79041 : type399 _123774) (op : type1400 _123774) (f : nat -> _123774) (n : nat) : (term1832 _123774 m _79041 op f n) = (term1832 _123774 m _79041 op f n).
Proof. exact (MK_COMB (@lem6217678 _123774 m n _79041 op f) (@lem6217675 _123774 m _79041 op f n)). Qed.
Lemma lem6217682 {_123774 : Type'} (op : type1400 _123774) : (term1773 _123774 op) = (term1773 _123774 op).
Proof. exact (eq_refl (term1773 _123774 op)). Qed.
Lemma lem6217683 {_123774 : Type'} (m : nat) (_79041 : type399 _123774) (op : type1400 _123774) (f : nat -> _123774) (n : nat) : (term1833 _123774 m _79041 op f n) = (term1833 _123774 m _79041 op f n).
Proof. exact (MK_COMB (@lem6217682 _123774 op) (@lem6217679 _123774 m _79041 op f n)). Qed.
Lemma lem6217684 {_123774 : Type'} (_79041 : type399 _123774) (op : type1400 _123774) (f : nat -> _123774) (n : nat) : (term1834 _123774 _79041 op f n) = (term1834 _123774 _79041 op f n).
Proof. exact (fun_ext (fun m : nat => @lem6217683 _123774 m _79041 op f n)). Qed.
Lemma lem6217685 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem6217686 {_123774 : Type'} (_79041 : type399 _123774) (op : type1400 _123774) (f : nat -> _123774) (n : nat) : (term1835 _123774 _79041 op f n) = (term1835 _123774 _79041 op f n).
Proof. exact (MK_COMB (@lem6217685) (@lem6217684 _123774 _79041 op f n)). Qed.
Lemma lem6217687 {_123774 : Type'} (_79041 : type399 _123774) (f : nat -> _123774) (n : nat) : (term1836 _123774 _79041 f n) = (term1836 _123774 _79041 f n).
Proof. exact (fun_ext (fun op : type1400 _123774 => @lem6217686 _123774 _79041 op f n)). Qed.
Lemma lem6217688 {_123774 : Type'} : (@all (_123774 -> _123774 -> _123774)) = (@all (_123774 -> _123774 -> _123774)).
Proof. exact (eq_refl (@all (_123774 -> _123774 -> _123774))). Qed.
Lemma lem6217689 {_123774 : Type'} (_79041 : type399 _123774) (f : nat -> _123774) (n : nat) : (term1837 _123774 _79041 f n) = (term1837 _123774 _79041 f n).
Proof. exact (MK_COMB (@lem6217688 _123774) (@lem6217687 _123774 _79041 f n)). Qed.
Lemma lem6217690 {_123774 : Type'} (_79041 : type399 _123774) (n : nat) : (term1838 _123774 _79041 n) = (term1838 _123774 _79041 n).
Proof. exact (fun_ext (fun f : nat -> _123774 => @lem6217689 _123774 _79041 f n)). Qed.
Lemma lem6217691 {_123774 : Type'} : (@all (nat -> _123774)) = (@all (nat -> _123774)).
Proof. exact (eq_refl (@all (nat -> _123774))). Qed.
Lemma lem6217692 {_123774 : Type'} (_79041 : type399 _123774) (n : nat) : (term1839 _123774 _79041 n) = (term1839 _123774 _79041 n).
Proof. exact (MK_COMB (@lem6217691 _123774) (@lem6217690 _123774 _79041 n)). Qed.
Lemma lem6217693 {_123774 : Type'} (_79041 : type399 _123774) : (term1840 _123774 _79041) = (term1840 _123774 _79041).
Proof. exact (fun_ext (fun n : nat => @lem6217692 _123774 _79041 n)). Qed.
Lemma lem6217694 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem6217695 {_123774 : Type'} (_79041 : type399 _123774) : (term1841 _123774 _79041) = (term1841 _123774 _79041).
Proof. exact (MK_COMB (@lem6217694) (@lem6217693 _123774 _79041)). Qed.
Lemma lem6217696 {_123774 : Type'} (_79041 : type399 _123774) (op : type1400 _123774) (f : nat -> _123774) (i : nat) : ((_79041 op f i) = (term1495 _123774 op f i)) = ((_79041 op f i) = (term1495 _123774 op f i)).
Proof. exact (eq_refl ((_79041 op f i) = (term1495 _123774 op f i))). Qed.
Lemma lem6217697 {_123774 : Type'} (_79041 : type399 _123774) (op : type1400 _123774) (f : nat -> _123774) : (term1891 _123774 _79041 op f) = (term1891 _123774 _79041 op f).
Proof. exact (fun_ext (fun i : nat => @lem6217696 _123774 _79041 op f i)). Qed.
Lemma lem6217698 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem6217699 {_123774 : Type'} (_79041 : type399 _123774) (op : type1400 _123774) (f : nat -> _123774) : (term1892 _123774 _79041 op f) = (term1892 _123774 _79041 op f).
Proof. exact (MK_COMB (@lem6217698) (@lem6217697 _123774 _79041 op f)). Qed.
Lemma lem6217700 {_123774 : Type'} (_79041 : type399 _123774) (op : type1400 _123774) : (term1893 _123774 _79041 op) = (term1893 _123774 _79041 op).
Proof. exact (fun_ext (fun f : nat -> _123774 => @lem6217699 _123774 _79041 op f)). Qed.
Lemma lem6217701 {_123774 : Type'} : (@all (nat -> _123774)) = (@all (nat -> _123774)).
Proof. exact (eq_refl (@all (nat -> _123774))). Qed.
Lemma lem6217702 {_123774 : Type'} (_79041 : type399 _123774) (op : type1400 _123774) : (term1894 _123774 _79041 op) = (term1894 _123774 _79041 op).
Proof. exact (MK_COMB (@lem6217701 _123774) (@lem6217700 _123774 _79041 op)). Qed.
Lemma lem6217703 {_123774 : Type'} (_79041 : type399 _123774) : (term1895 _123774 _79041) = (term1895 _123774 _79041).
Proof. exact (fun_ext (fun op : type1400 _123774 => @lem6217702 _123774 _79041 op)). Qed.
Lemma lem6217704 {_123774 : Type'} : (@all (_123774 -> _123774 -> _123774)) = (@all (_123774 -> _123774 -> _123774)).
Proof. exact (eq_refl (@all (_123774 -> _123774 -> _123774))). Qed.
Lemma lem6217705 {_123774 : Type'} (_79041 : type399 _123774) : (term1896 _123774 _79041) = (term1896 _123774 _79041).
Proof. exact (MK_COMB (@lem6217704 _123774) (@lem6217703 _123774 _79041)). Qed.
Lemma lem6217706 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem6217707 {_123774 : Type'} (_79041 : type399 _123774) : (term1897 _123774 _79041) = (term1897 _123774 _79041).
Proof. exact (MK_COMB (@lem6217706) (@lem6217705 _123774 _79041)). Qed.
Lemma lem6217708 {_123774 : Type'} (_79041 : type399 _123774) : (term1898 _123774 _79041) = (term1898 _123774 _79041).
Proof. exact (MK_COMB (@lem6217707 _123774 _79041) (@lem6217695 _123774 _79041)). Qed.
Lemma lem6217709 {_123774 : Type'} : (term1899 _123774) = (term1899 _123774).
Proof. exact (fun_ext (fun _79041 : type399 _123774 => @lem6217708 _123774 _79041)). Qed.
Lemma lem6217710 {_123774 : Type'} : (@all ((_123774 -> _123774 -> _123774) -> (nat -> _123774) -> nat -> _123774)) = (@all ((_123774 -> _123774 -> _123774) -> (nat -> _123774) -> nat -> _123774)).
Proof. exact (eq_refl (@all ((_123774 -> _123774 -> _123774) -> (nat -> _123774) -> nat -> _123774))). Qed.
Lemma lem6217711 {_123774 : Type'} : (term1900 _123774) = (term1900 _123774).
Proof. exact (MK_COMB (@lem6217710 _123774) (@lem6217709 _123774)). Qed.
Lemma lem6217818 {_123774 : Type'} : (term1789 _123774) = (term1900 _123774).
Proof. exact (TRANS (@lem6217629 _123774) (@lem6217711 _123774)). Qed.
Lemma lem6217819 {_123774 : Type'} : (term1900 _123774) = (term1789 _123774).
Proof. exact (SYM (@lem6217818 _123774)). Qed.
Lemma lem6217825 {_123774 : Type'} (h1 : term1759 _123774) : term1759 _123774.
Proof. exact (h1). Qed.
Lemma lem6217858 {_123774 : Type'} (op : type1400 _123774) (h1 : @monoidal _123774 op) : @monoidal _123774 op.
Proof. exact (h1). Qed.
Lemma lem6217876 {_123774 : Type'} (m : nat) (_79041 : type399 _123774) (op : type1400 _123774) (f : nat -> _123774) (n : nat) (h1 : term1826 _123774 m _79041 op f n) : term1826 _123774 m _79041 op f n.
Proof. exact (h1). Qed.
Lemma lem6217880 {_123774 : Type'} (op : type1400 _123774) (y : _123774) (x : _123774) : ((op x y) = (op y x)) = ((op x y) = (op y x)).
Proof. exact (eq_refl ((op x y) = (op y x))). Qed.
Lemma lem6217881 {_123774 : Type'} (P : _123774 -> Prop) : (term1901 _123774 P) = (term1902 _123774 P).
Proof. exact (@lem18392 _123774 P). Qed.
Lemma lem6217882 {_123774 : Type'} (op : type1400 _123774) (x : _123774) : (term1903 _123774 op x) = (term1904 _123774 op x).
Proof. exact (@lem6217881 _123774 (term1810 _123774 op x)). Qed.
Lemma lem6217883 {_123774 : Type'} (op : type1400 _123774) (y : _123774) (x : _123774) : (term1905 _123774 op x y) = ((op x y) = (op y x)).
Proof. exact (eq_refl (term1905 _123774 op x y)). Qed.
Lemma lem6217884 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem6217886 {_123774 : Type'} (op : type1400 _123774) (y : _123774) (x : _123774) : (term1906 _123774 op x y) = (term1907 _123774 op y x).
Proof. exact (MK_COMB (@lem6217884) (@lem6217883 _123774 op y x)). Qed.
Lemma lem6217887 {_123774 : Type'} (op : type1400 _123774) (x : _123774) : (term1908 _123774 op x) = (term1909 _123774 op x).
Proof. exact (fun_ext (fun y : _123774 => @lem6217886 _123774 op y x)). Qed.
Lemma lem6217888 {_123774 : Type'} : (@ex _123774) = (@ex _123774).
Proof. exact (eq_refl (@ex _123774)). Qed.
Lemma lem6217889 {_123774 : Type'} (op : type1400 _123774) (x : _123774) : (term1904 _123774 op x) = (term1910 _123774 op x).
Proof. exact (MK_COMB (@lem6217888 _123774) (@lem6217887 _123774 op x)). Qed.
Lemma lem6217890 {_123774 : Type'} (op : type1400 _123774) (x : _123774) : (term1903 _123774 op x) = (term1910 _123774 op x).
Proof. exact (TRANS (@lem6217882 _123774 op x) (@lem6217889 _123774 op x)). Qed.
Lemma lem6217891 {_123774 : Type'} (op : type1400 _123774) (x : _123774) : (term1810 _123774 op x) = (term1810 _123774 op x).
Proof. exact (fun_ext (fun y : _123774 => @lem6217880 _123774 op y x)). Qed.
Lemma lem6217892 {_123774 : Type'} : (@all _123774) = (@all _123774).
Proof. exact (eq_refl (@all _123774)). Qed.
Lemma lem6217893 {_123774 : Type'} (op : type1400 _123774) (x : _123774) : (term1811 _123774 op x) = (term1811 _123774 op x).
Proof. exact (MK_COMB (@lem6217892 _123774) (@lem6217891 _123774 op x)). Qed.
Lemma lem6217894 {_123774 : Type'} (P : _123774 -> Prop) : (term1901 _123774 P) = (term1902 _123774 P).
Proof. exact (@lem18392 _123774 P). Qed.
Lemma lem6217895 {_123774 : Type'} (op : type1400 _123774) : (term1911 _123774 op) = (term1912 _123774 op).
Proof. exact (@lem6217894 _123774 (term1812 _123774 op)). Qed.
Lemma lem6217896 {_123774 : Type'} (op : type1400 _123774) (x : _123774) : (term1913 _123774 op x) = (term1811 _123774 op x).
Proof. exact (eq_refl (term1913 _123774 op x)). Qed.
Lemma lem6217897 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem6217898 {_123774 : Type'} (op : type1400 _123774) (x : _123774) : (term1914 _123774 op x) = (term1903 _123774 op x).
Proof. exact (MK_COMB (@lem6217897) (@lem6217896 _123774 op x)). Qed.
Lemma lem6217899 {_123774 : Type'} (op : type1400 _123774) (x : _123774) : (term1914 _123774 op x) = (term1910 _123774 op x).
Proof. exact (TRANS (@lem6217898 _123774 op x) (@lem6217890 _123774 op x)). Qed.
Lemma lem6217900 {_123774 : Type'} (op : type1400 _123774) : (term1915 _123774 op) = (term1916 _123774 op).
Proof. exact (fun_ext (fun x : _123774 => @lem6217899 _123774 op x)). Qed.
Lemma lem6217901 {_123774 : Type'} : (@ex _123774) = (@ex _123774).
Proof. exact (eq_refl (@ex _123774)). Qed.
Lemma lem6217902 {_123774 : Type'} (op : type1400 _123774) : (term1912 _123774 op) = (term1917 _123774 op).
Proof. exact (MK_COMB (@lem6217901 _123774) (@lem6217900 _123774 op)). Qed.
Lemma lem6217903 {_123774 : Type'} (op : type1400 _123774) : (term1911 _123774 op) = (term1917 _123774 op).
Proof. exact (TRANS (@lem6217895 _123774 op) (@lem6217902 _123774 op)). Qed.
Lemma lem6217904 {_123774 : Type'} (op : type1400 _123774) : (term1812 _123774 op) = (term1812 _123774 op).
Proof. exact (fun_ext (fun x : _123774 => @lem6217893 _123774 op x)). Qed.
Lemma lem6217905 {_123774 : Type'} : (@all _123774) = (@all _123774).
Proof. exact (eq_refl (@all _123774)). Qed.
Lemma lem6217906 {_123774 : Type'} (op : type1400 _123774) : (term1813 _123774 op) = (term1813 _123774 op).
Proof. exact (MK_COMB (@lem6217905 _123774) (@lem6217904 _123774 op)). Qed.
Lemma lem6217908 {_123774 : Type'} (op : type1400 _123774) (x : _123774) (y : _123774) (z : _123774) : ((term1800 _123774 x op y z) = (term1801 _123774 op x y z)) = ((term1800 _123774 x op y z) = (term1801 _123774 op x y z)).
Proof. exact (eq_refl ((term1800 _123774 x op y z) = (term1801 _123774 op x y z))). Qed.
Lemma lem6217909 {_123774 : Type'} (P : _123774 -> Prop) : (term1901 _123774 P) = (term1902 _123774 P).
Proof. exact (@lem18392 _123774 P). Qed.
Lemma lem6217910 {_123774 : Type'} (op : type1400 _123774) (x : _123774) (y : _123774) : (term1918 _123774 op x y) = (term1919 _123774 op x y).
Proof. exact (@lem6217909 _123774 (term1802 _123774 op x y)). Qed.
Lemma lem6217911 {_123774 : Type'} (op : type1400 _123774) (x : _123774) (y : _123774) (z : _123774) : (term1920 _123774 op x y z) = ((term1800 _123774 x op y z) = (term1801 _123774 op x y z)).
Proof. exact (eq_refl (term1920 _123774 op x y z)). Qed.
Lemma lem6217912 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem6217914 {_123774 : Type'} (op : type1400 _123774) (x : _123774) (y : _123774) (z : _123774) : (term1921 _123774 op x y z) = (term1922 _123774 op x y z).
Proof. exact (MK_COMB (@lem6217912) (@lem6217911 _123774 op x y z)). Qed.
Lemma lem6217915 {_123774 : Type'} (op : type1400 _123774) (x : _123774) (y : _123774) : (term1923 _123774 op x y) = (term1924 _123774 op x y).
Proof. exact (fun_ext (fun z : _123774 => @lem6217914 _123774 op x y z)). Qed.
Lemma lem6217916 {_123774 : Type'} : (@ex _123774) = (@ex _123774).
Proof. exact (eq_refl (@ex _123774)). Qed.
Lemma lem6217917 {_123774 : Type'} (op : type1400 _123774) (x : _123774) (y : _123774) : (term1919 _123774 op x y) = (term1925 _123774 op x y).
Proof. exact (MK_COMB (@lem6217916 _123774) (@lem6217915 _123774 op x y)). Qed.
Lemma lem6217918 {_123774 : Type'} (op : type1400 _123774) (x : _123774) (y : _123774) : (term1918 _123774 op x y) = (term1925 _123774 op x y).
Proof. exact (TRANS (@lem6217910 _123774 op x y) (@lem6217917 _123774 op x y)). Qed.
Lemma lem6217919 {_123774 : Type'} (op : type1400 _123774) (x : _123774) (y : _123774) : (term1802 _123774 op x y) = (term1802 _123774 op x y).
Proof. exact (fun_ext (fun z : _123774 => @lem6217908 _123774 op x y z)). Qed.
Lemma lem6217920 {_123774 : Type'} : (@all _123774) = (@all _123774).
Proof. exact (eq_refl (@all _123774)). Qed.
Lemma lem6217921 {_123774 : Type'} (op : type1400 _123774) (x : _123774) (y : _123774) : (term1803 _123774 op x y) = (term1803 _123774 op x y).
Proof. exact (MK_COMB (@lem6217920 _123774) (@lem6217919 _123774 op x y)). Qed.
Lemma lem6217922 {_123774 : Type'} (P : _123774 -> Prop) : (term1901 _123774 P) = (term1902 _123774 P).
Proof. exact (@lem18392 _123774 P). Qed.
Lemma lem6217923 {_123774 : Type'} (op : type1400 _123774) (x : _123774) : (term1926 _123774 op x) = (term1927 _123774 op x).
Proof. exact (@lem6217922 _123774 (term1804 _123774 op x)). Qed.
Lemma lem6217924 {_123774 : Type'} (op : type1400 _123774) (x : _123774) (y : _123774) : (term1928 _123774 op x y) = (term1803 _123774 op x y).
Proof. exact (eq_refl (term1928 _123774 op x y)). Qed.
Lemma lem6217925 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem6217926 {_123774 : Type'} (op : type1400 _123774) (x : _123774) (y : _123774) : (term1929 _123774 op x y) = (term1918 _123774 op x y).
Proof. exact (MK_COMB (@lem6217925) (@lem6217924 _123774 op x y)). Qed.
Lemma lem6217927 {_123774 : Type'} (op : type1400 _123774) (x : _123774) (y : _123774) : (term1929 _123774 op x y) = (term1925 _123774 op x y).
Proof. exact (TRANS (@lem6217926 _123774 op x y) (@lem6217918 _123774 op x y)). Qed.
Lemma lem6217928 {_123774 : Type'} (op : type1400 _123774) (x : _123774) : (term1930 _123774 op x) = (term1931 _123774 op x).
Proof. exact (fun_ext (fun y : _123774 => @lem6217927 _123774 op x y)). Qed.
Lemma lem6217929 {_123774 : Type'} : (@ex _123774) = (@ex _123774).
Proof. exact (eq_refl (@ex _123774)). Qed.
Lemma lem6217930 {_123774 : Type'} (op : type1400 _123774) (x : _123774) : (term1927 _123774 op x) = (term1932 _123774 op x).
Proof. exact (MK_COMB (@lem6217929 _123774) (@lem6217928 _123774 op x)). Qed.
Lemma lem6217931 {_123774 : Type'} (op : type1400 _123774) (x : _123774) : (term1926 _123774 op x) = (term1932 _123774 op x).
Proof. exact (TRANS (@lem6217923 _123774 op x) (@lem6217930 _123774 op x)). Qed.
Lemma lem6217932 {_123774 : Type'} (op : type1400 _123774) (x : _123774) : (term1804 _123774 op x) = (term1804 _123774 op x).
Proof. exact (fun_ext (fun y : _123774 => @lem6217921 _123774 op x y)). Qed.
Lemma lem6217933 {_123774 : Type'} : (@all _123774) = (@all _123774).
Proof. exact (eq_refl (@all _123774)). Qed.
Lemma lem6217934 {_123774 : Type'} (op : type1400 _123774) (x : _123774) : (term1805 _123774 op x) = (term1805 _123774 op x).
Proof. exact (MK_COMB (@lem6217933 _123774) (@lem6217932 _123774 op x)). Qed.
Lemma lem6217935 {_123774 : Type'} (P : _123774 -> Prop) : (term1901 _123774 P) = (term1902 _123774 P).
Proof. exact (@lem18392 _123774 P). Qed.
Lemma lem6217936 {_123774 : Type'} (op : type1400 _123774) : (term1933 _123774 op) = (term1934 _123774 op).
Proof. exact (@lem6217935 _123774 (term1806 _123774 op)). Qed.
Lemma lem6217937 {_123774 : Type'} (op : type1400 _123774) (x : _123774) : (term1935 _123774 op x) = (term1805 _123774 op x).
Proof. exact (eq_refl (term1935 _123774 op x)). Qed.
Lemma lem6217938 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem6217939 {_123774 : Type'} (op : type1400 _123774) (x : _123774) : (term1936 _123774 op x) = (term1926 _123774 op x).
Proof. exact (MK_COMB (@lem6217938) (@lem6217937 _123774 op x)). Qed.
Lemma lem6217940 {_123774 : Type'} (op : type1400 _123774) (x : _123774) : (term1936 _123774 op x) = (term1932 _123774 op x).
Proof. exact (TRANS (@lem6217939 _123774 op x) (@lem6217931 _123774 op x)). Qed.
Lemma lem6217941 {_123774 : Type'} (op : type1400 _123774) : (term1937 _123774 op) = (term1938 _123774 op).
Proof. exact (fun_ext (fun x : _123774 => @lem6217940 _123774 op x)). Qed.
Lemma lem6217942 {_123774 : Type'} : (@ex _123774) = (@ex _123774).
Proof. exact (eq_refl (@ex _123774)). Qed.
Lemma lem6217943 {_123774 : Type'} (op : type1400 _123774) : (term1934 _123774 op) = (term1939 _123774 op).
Proof. exact (MK_COMB (@lem6217942 _123774) (@lem6217941 _123774 op)). Qed.
Lemma lem6217944 {_123774 : Type'} (op : type1400 _123774) : (term1933 _123774 op) = (term1939 _123774 op).
Proof. exact (TRANS (@lem6217936 _123774 op) (@lem6217943 _123774 op)). Qed.
Lemma lem6217945 {_123774 : Type'} (op : type1400 _123774) : (term1806 _123774 op) = (term1806 _123774 op).
Proof. exact (fun_ext (fun x : _123774 => @lem6217934 _123774 op x)). Qed.
Lemma lem6217946 {_123774 : Type'} : (@all _123774) = (@all _123774).
Proof. exact (eq_refl (@all _123774)). Qed.
Lemma lem6217947 {_123774 : Type'} (op : type1400 _123774) : (term1807 _123774 op) = (term1807 _123774 op).
Proof. exact (MK_COMB (@lem6217946 _123774) (@lem6217945 _123774 op)). Qed.
Lemma lem6217949 {_123774 : Type'} (op : type1400 _123774) (x : _123774) : ((term1797 _123774 op x) = x) = ((term1797 _123774 op x) = x).
Proof. exact (eq_refl ((term1797 _123774 op x) = x)). Qed.
Lemma lem6217950 {_123774 : Type'} (P : _123774 -> Prop) : (term1901 _123774 P) = (term1902 _123774 P).
Proof. exact (@lem18392 _123774 P). Qed.
Lemma lem6217951 {_123774 : Type'} (op : type1400 _123774) : (term1940 _123774 op) = (term1941 _123774 op).
Proof. exact (@lem6217950 _123774 (term1798 _123774 op)). Qed.
Lemma lem6217952 {_123774 : Type'} (op : type1400 _123774) (x : _123774) : (term1942 _123774 op x) = ((term1797 _123774 op x) = x).
Proof. exact (eq_refl (term1942 _123774 op x)). Qed.
Lemma lem6217953 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem6217955 {_123774 : Type'} (op : type1400 _123774) (x : _123774) : (term1943 _123774 op x) = (term1944 _123774 op x).
Proof. exact (MK_COMB (@lem6217953) (@lem6217952 _123774 op x)). Qed.
Lemma lem6217956 {_123774 : Type'} (op : type1400 _123774) : (term1945 _123774 op) = (term1946 _123774 op).
Proof. exact (fun_ext (fun x : _123774 => @lem6217955 _123774 op x)). Qed.
Lemma lem6217957 {_123774 : Type'} : (@ex _123774) = (@ex _123774).
Proof. exact (eq_refl (@ex _123774)). Qed.
Lemma lem6217958 {_123774 : Type'} (op : type1400 _123774) : (term1941 _123774 op) = (term1947 _123774 op).
Proof. exact (MK_COMB (@lem6217957 _123774) (@lem6217956 _123774 op)). Qed.
Lemma lem6217959 {_123774 : Type'} (op : type1400 _123774) : (term1940 _123774 op) = (term1947 _123774 op).
Proof. exact (TRANS (@lem6217951 _123774 op) (@lem6217958 _123774 op)). Qed.
Lemma lem6217960 {_123774 : Type'} (op : type1400 _123774) : (term1798 _123774 op) = (term1798 _123774 op).
Proof. exact (fun_ext (fun x : _123774 => @lem6217949 _123774 op x)). Qed.
Lemma lem6217961 {_123774 : Type'} : (@all _123774) = (@all _123774).
Proof. exact (eq_refl (@all _123774)). Qed.
Lemma lem6217962 {_123774 : Type'} (op : type1400 _123774) : (term1799 _123774 op) = (term1799 _123774 op).
Proof. exact (MK_COMB (@lem6217961 _123774) (@lem6217960 _123774 op)). Qed.
Lemma lem6217963 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6217964 {_123774 : Type'} (op : type1400 _123774) : (term1948 _123774 op) = (term1949 _123774 op).
Proof. exact (MK_COMB (@lem6217963) (@lem6217944 _123774 op)). Qed.
Lemma lem6217965 {_123774 : Type'} (op : type1400 _123774) : (term1950 _123774 op) = (term1951 _123774 op).
Proof. exact (MK_COMB (@lem6217964 _123774 op) (@lem6217959 _123774 op)). Qed.
Lemma lem6217966 {_123774 : Type'} (op : type1400 _123774) : (term1952 _123774 op) = (term1950 _123774 op).
Proof. exact (@lem17045 (term1807 _123774 op) (term1799 _123774 op)). Qed.
Lemma lem6217967 {_123774 : Type'} (op : type1400 _123774) : (term1952 _123774 op) = (term1951 _123774 op).
Proof. exact (TRANS (@lem6217966 _123774 op) (@lem6217965 _123774 op)). Qed.
Lemma lem6217968 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6217969 {_123774 : Type'} (op : type1400 _123774) : (term1808 _123774 op) = (term1808 _123774 op).
Proof. exact (MK_COMB (@lem6217968) (@lem6217947 _123774 op)). Qed.
Lemma lem6217970 {_123774 : Type'} (op : type1400 _123774) : (term1809 _123774 op) = (term1809 _123774 op).
Proof. exact (MK_COMB (@lem6217969 _123774 op) (@lem6217962 _123774 op)). Qed.
Lemma lem6217971 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6217972 {_123774 : Type'} (op : type1400 _123774) : (term1953 _123774 op) = (term1954 _123774 op).
Proof. exact (MK_COMB (@lem6217971) (@lem6217903 _123774 op)). Qed.
Lemma lem6217973 {_123774 : Type'} (op : type1400 _123774) : (term1955 _123774 op) = (term1956 _123774 op).
Proof. exact (MK_COMB (@lem6217972 _123774 op) (@lem6217967 _123774 op)). Qed.
Lemma lem6217974 {_123774 : Type'} (op : type1400 _123774) : (term1957 _123774 op) = (term1955 _123774 op).
Proof. exact (@lem17045 (term1813 _123774 op) (term1809 _123774 op)). Qed.
Lemma lem6217975 {_123774 : Type'} (op : type1400 _123774) : (term1957 _123774 op) = (term1956 _123774 op).
Proof. exact (TRANS (@lem6217974 _123774 op) (@lem6217973 _123774 op)). Qed.
Lemma lem6217976 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6217977 {_123774 : Type'} (op : type1400 _123774) : (term1814 _123774 op) = (term1814 _123774 op).
Proof. exact (MK_COMB (@lem6217976) (@lem6217906 _123774 op)). Qed.
Lemma lem6217978 {_123774 : Type'} (op : type1400 _123774) : (term1815 _123774 op) = (term1815 _123774 op).
Proof. exact (MK_COMB (@lem6217977 _123774 op) (@lem6217970 _123774 op)). Qed.
Lemma lem6217980 {_123774 : Type'} (op : type1400 _123774) : (term1958 _123774 op) = (term1958 _123774 op).
Proof. exact (eq_refl (term1958 _123774 op)). Qed.
Lemma lem6217981 {_123774 : Type'} (op : type1400 _123774) : (term1959 _123774 op) = (term1959 _123774 op).
Proof. exact (MK_COMB (@lem6217980 _123774 op) (@lem6217978 _123774 op)). Qed.
Lemma lem6217983 {_123774 : Type'} (op : type1400 _123774) : (term1960 _123774 op) = (term1960 _123774 op).
Proof. exact (eq_refl (term1960 _123774 op)). Qed.
Lemma lem6217984 {_123774 : Type'} (op : type1400 _123774) : (term1961 _123774 op) = (term1962 _123774 op).
Proof. exact (MK_COMB (@lem6217983 _123774 op) (@lem6217975 _123774 op)). Qed.
Lemma lem6217985 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6217986 {_123774 : Type'} (op : type1400 _123774) : (term1963 _123774 op) = (term1964 _123774 op).
Proof. exact (MK_COMB (@lem6217985) (@lem6217984 _123774 op)). Qed.
Lemma lem6217987 {_123774 : Type'} (op : type1400 _123774) : (term1965 _123774 op) = (term1966 _123774 op).
Proof. exact (MK_COMB (@lem6217986 _123774 op) (@lem6217981 _123774 op)). Qed.
Lemma lem6217988 {_123774 : Type'} (op : type1400 _123774) : ((@monoidal _123774 op) = (term1815 _123774 op)) = (term1965 _123774 op).
Proof. exact (@lem17784 (@monoidal _123774 op) (term1815 _123774 op)). Qed.
Lemma lem6217989 {_123774 : Type'} (op : type1400 _123774) : ((@monoidal _123774 op) = (term1815 _123774 op)) = (term1966 _123774 op).
Proof. exact (TRANS (@lem6217988 _123774 op) (@lem6217987 _123774 op)). Qed.
Lemma lem6217990 {_123774 : Type'} : (term1817 _123774) = (term1967 _123774).
Proof. exact (fun_ext (fun op : type1400 _123774 => @lem6217989 _123774 op)). Qed.
Lemma lem6217991 {_123774 : Type'} : (@all (_123774 -> _123774 -> _123774)) = (@all (_123774 -> _123774 -> _123774)).
Proof. exact (eq_refl (@all (_123774 -> _123774 -> _123774))). Qed.
Lemma lem6217992 {_123774 : Type'} : (term1759 _123774) = (term1968 _123774).
Proof. exact (MK_COMB (@lem6217991 _123774) (@lem6217990 _123774)). Qed.
Lemma lem6217994 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term1969 A P Q) = (term1970 A P Q).
Proof. exact (EQ_MP (@lem18953 A P Q) (@lem18952 A P Q)). Qed.
Lemma lem6217995 {_123774 : Type'} (P : type403 _123774) (Q : type403 _123774) : (term1971 _123774 P Q) = (term1972 _123774 P Q).
Proof. exact (@lem6217994 (type1400 _123774) P Q). Qed.
Lemma lem6217996 {_123774 : Type'} : (term1973 _123774) = (term1974 _123774).
Proof. exact (@lem6217995 _123774 (term1975 _123774) (term1976 _123774)). Qed.
Lemma lem6217997 {_123774 : Type'} (op : type1400 _123774) : (term1977 _123774 op) = (term1962 _123774 op).
Proof. exact (eq_refl (term1977 _123774 op)). Qed.
Lemma lem6217998 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6217999 {_123774 : Type'} (op : type1400 _123774) : (term1978 _123774 op) = (term1964 _123774 op).
Proof. exact (MK_COMB (@lem6217998) (@lem6217997 _123774 op)). Qed.
Lemma lem6218000 {_123774 : Type'} (op : type1400 _123774) : (term1979 _123774 op) = (term1959 _123774 op).
Proof. exact (eq_refl (term1979 _123774 op)). Qed.
Lemma lem6218001 {_123774 : Type'} (op : type1400 _123774) : (term1980 _123774 op) = (term1966 _123774 op).
Proof. exact (MK_COMB (@lem6217999 _123774 op) (@lem6218000 _123774 op)). Qed.
Lemma lem6218002 {_123774 : Type'} : (term1981 _123774) = (term1967 _123774).
Proof. exact (fun_ext (fun op : type1400 _123774 => @lem6218001 _123774 op)). Qed.
Lemma lem6218003 {_123774 : Type'} : (@all (_123774 -> _123774 -> _123774)) = (@all (_123774 -> _123774 -> _123774)).
Proof. exact (eq_refl (@all (_123774 -> _123774 -> _123774))). Qed.
Lemma lem6218004 {_123774 : Type'} : (term1973 _123774) = (term1968 _123774).
Proof. exact (MK_COMB (@lem6218003 _123774) (@lem6218002 _123774)). Qed.
Lemma lem6218005 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6218006 {_123774 : Type'} : (term1982 _123774) = (term1983 _123774).
Proof. exact (MK_COMB (@lem6218005) (@lem6218004 _123774)). Qed.
Lemma lem6218007 {_123774 : Type'} (op : type1400 _123774) : (term1977 _123774 op) = (term1962 _123774 op).
Proof. exact (eq_refl (term1977 _123774 op)). Qed.
Lemma lem6218008 {_123774 : Type'} : (term1984 _123774) = (term1975 _123774).
Proof. exact (fun_ext (fun op : type1400 _123774 => @lem6218007 _123774 op)). Qed.
Lemma lem6218009 {_123774 : Type'} : (@all (_123774 -> _123774 -> _123774)) = (@all (_123774 -> _123774 -> _123774)).
Proof. exact (eq_refl (@all (_123774 -> _123774 -> _123774))). Qed.
Lemma lem6218010 {_123774 : Type'} : (term1985 _123774) = (term1986 _123774).
Proof. exact (MK_COMB (@lem6218009 _123774) (@lem6218008 _123774)). Qed.
Lemma lem6218011 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6218012 {_123774 : Type'} : (term1987 _123774) = (term1988 _123774).
Proof. exact (MK_COMB (@lem6218011) (@lem6218010 _123774)). Qed.
Lemma lem6218013 {_123774 : Type'} (op : type1400 _123774) : (term1979 _123774 op) = (term1959 _123774 op).
Proof. exact (eq_refl (term1979 _123774 op)). Qed.
Lemma lem6218014 {_123774 : Type'} : (term1989 _123774) = (term1976 _123774).
Proof. exact (fun_ext (fun op : type1400 _123774 => @lem6218013 _123774 op)). Qed.
Lemma lem6218015 {_123774 : Type'} : (@all (_123774 -> _123774 -> _123774)) = (@all (_123774 -> _123774 -> _123774)).
Proof. exact (eq_refl (@all (_123774 -> _123774 -> _123774))). Qed.
Lemma lem6218016 {_123774 : Type'} : (term1990 _123774) = (term1991 _123774).
Proof. exact (MK_COMB (@lem6218015 _123774) (@lem6218014 _123774)). Qed.
Lemma lem6218017 {_123774 : Type'} : (term1974 _123774) = (term1992 _123774).
Proof. exact (MK_COMB (@lem6218012 _123774) (@lem6218016 _123774)). Qed.
Lemma lem6218018 {_123774 : Type'} : ((term1973 _123774) = (term1974 _123774)) = ((term1968 _123774) = (term1992 _123774)).
Proof. exact (MK_COMB (@lem6218006 _123774) (@lem6218017 _123774)). Qed.
Lemma lem6218019 {_123774 : Type'} : (term1968 _123774) = (term1992 _123774).
Proof. exact (EQ_MP (@lem6218018 _123774) (@lem6217996 _123774)). Qed.
Lemma lem6218145 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term1993 A P Q) = (term1994 A P Q).
Proof. exact (EQ_MP (@lem18917 A P Q) (@lem18916 A P Q)). Qed.
Lemma lem6218146 {_123774 : Type'} (P : _123774 -> Prop) (Q : _123774 -> Prop) : (term1993 _123774 P Q) = (term1994 _123774 P Q).
Proof. exact (@lem6218145 _123774 P Q). Qed.
Lemma lem6218147 {_123774 : Type'} (op : type1400 _123774) : (term1995 _123774 op) = (term1996 _123774 op).
Proof. exact (@lem6218146 _123774 (term1938 _123774 op) (term1946 _123774 op)). Qed.
Lemma lem6218148 {_123774 : Type'} (op : type1400 _123774) (x : _123774) : (term1997 _123774 op x) = (term1932 _123774 op x).
Proof. exact (eq_refl (term1997 _123774 op x)). Qed.
Lemma lem6218149 {_123774 : Type'} (op : type1400 _123774) : (term1998 _123774 op) = (term1938 _123774 op).
Proof. exact (fun_ext (fun x : _123774 => @lem6218148 _123774 op x)). Qed.
Lemma lem6218150 {_123774 : Type'} : (@ex _123774) = (@ex _123774).
Proof. exact (eq_refl (@ex _123774)). Qed.
Lemma lem6218151 {_123774 : Type'} (op : type1400 _123774) : (term1999 _123774 op) = (term1939 _123774 op).
Proof. exact (MK_COMB (@lem6218150 _123774) (@lem6218149 _123774 op)). Qed.
Lemma lem6218152 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6218153 {_123774 : Type'} (op : type1400 _123774) : (term2000 _123774 op) = (term1949 _123774 op).
Proof. exact (MK_COMB (@lem6218152) (@lem6218151 _123774 op)). Qed.
Lemma lem6218154 {_123774 : Type'} (op : type1400 _123774) (x : _123774) : (term2001 _123774 op x) = (term1944 _123774 op x).
Proof. exact (eq_refl (term2001 _123774 op x)). Qed.
Lemma lem6218155 {_123774 : Type'} (op : type1400 _123774) : (term2002 _123774 op) = (term1946 _123774 op).
Proof. exact (fun_ext (fun x : _123774 => @lem6218154 _123774 op x)). Qed.
Lemma lem6218156 {_123774 : Type'} : (@ex _123774) = (@ex _123774).
Proof. exact (eq_refl (@ex _123774)). Qed.
Lemma lem6218157 {_123774 : Type'} (op : type1400 _123774) : (term2003 _123774 op) = (term1947 _123774 op).
Proof. exact (MK_COMB (@lem6218156 _123774) (@lem6218155 _123774 op)). Qed.
Lemma lem6218158 {_123774 : Type'} (op : type1400 _123774) : (term1995 _123774 op) = (term1951 _123774 op).
Proof. exact (MK_COMB (@lem6218153 _123774 op) (@lem6218157 _123774 op)). Qed.
Lemma lem6218159 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6218160 {_123774 : Type'} (op : type1400 _123774) : (term2004 _123774 op) = (term2005 _123774 op).
Proof. exact (MK_COMB (@lem6218159) (@lem6218158 _123774 op)). Qed.
Lemma lem6218161 {_123774 : Type'} (op : type1400 _123774) (x : _123774) : (term1997 _123774 op x) = (term1932 _123774 op x).
Proof. exact (eq_refl (term1997 _123774 op x)). Qed.
Lemma lem6218162 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6218163 {_123774 : Type'} (op : type1400 _123774) (x : _123774) : (term2006 _123774 op x) = (term2007 _123774 op x).
Proof. exact (MK_COMB (@lem6218162) (@lem6218161 _123774 op x)). Qed.
Lemma lem6218164 {_123774 : Type'} (op : type1400 _123774) (x : _123774) : (term2001 _123774 op x) = (term1944 _123774 op x).
Proof. exact (eq_refl (term2001 _123774 op x)). Qed.
Lemma lem6218165 {_123774 : Type'} (op : type1400 _123774) (x : _123774) : (term2008 _123774 op x) = (term2009 _123774 op x).
Proof. exact (MK_COMB (@lem6218163 _123774 op x) (@lem6218164 _123774 op x)). Qed.
Lemma lem6218166 {_123774 : Type'} (op : type1400 _123774) : (term2010 _123774 op) = (term2011 _123774 op).
Proof. exact (fun_ext (fun x : _123774 => @lem6218165 _123774 op x)). Qed.
Lemma lem6218167 {_123774 : Type'} : (@ex _123774) = (@ex _123774).
Proof. exact (eq_refl (@ex _123774)). Qed.
Lemma lem6218168 {_123774 : Type'} (op : type1400 _123774) : (term1996 _123774 op) = (term2012 _123774 op).
Proof. exact (MK_COMB (@lem6218167 _123774) (@lem6218166 _123774 op)). Qed.
Lemma lem6218169 {_123774 : Type'} (op : type1400 _123774) : ((term1995 _123774 op) = (term1996 _123774 op)) = ((term1951 _123774 op) = (term2012 _123774 op)).
Proof. exact (MK_COMB (@lem6218160 _123774 op) (@lem6218168 _123774 op)). Qed.
Lemma lem6218170 {_123774 : Type'} (op : type1400 _123774) : (term1951 _123774 op) = (term2012 _123774 op).
Proof. exact (EQ_MP (@lem6218169 _123774 op) (@lem6218147 _123774 op)). Qed.
Lemma lem6218172 {A : Type'} (P : A -> Prop) (Q : Prop) : (term2013 A P Q) = (term2014 A P Q).
Proof. exact (EQ_MP (@lem18905 A P Q) (@lem18904 A P Q)). Qed.
Lemma lem6218173 {_123774 : Type'} (P : _123774 -> Prop) (Q : Prop) : (term2013 _123774 P Q) = (term2014 _123774 P Q).
Proof. exact (@lem6218172 _123774 P Q). Qed.
Lemma lem6218174 {_123774 : Type'} (op : type1400 _123774) (x : _123774) : (term2015 _123774 op x) = (term2016 _123774 op x).
Proof. exact (@lem6218173 _123774 (term1931 _123774 op x) (term1944 _123774 op x)). Qed.
Lemma lem6218175 {_123774 : Type'} (op : type1400 _123774) (x : _123774) (y : _123774) : (term2017 _123774 op x y) = (term1925 _123774 op x y).
Proof. exact (eq_refl (term2017 _123774 op x y)). Qed.
Lemma lem6218176 {_123774 : Type'} (op : type1400 _123774) (x : _123774) : (term2018 _123774 op x) = (term1931 _123774 op x).
Proof. exact (fun_ext (fun y : _123774 => @lem6218175 _123774 op x y)). Qed.
Lemma lem6218177 {_123774 : Type'} : (@ex _123774) = (@ex _123774).
Proof. exact (eq_refl (@ex _123774)). Qed.
Lemma lem6218178 {_123774 : Type'} (op : type1400 _123774) (x : _123774) : (term2019 _123774 op x) = (term1932 _123774 op x).
Proof. exact (MK_COMB (@lem6218177 _123774) (@lem6218176 _123774 op x)). Qed.
Lemma lem6218179 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6218180 {_123774 : Type'} (op : type1400 _123774) (x : _123774) : (term2020 _123774 op x) = (term2007 _123774 op x).
Proof. exact (MK_COMB (@lem6218179) (@lem6218178 _123774 op x)). Qed.
Lemma lem6218181 {_123774 : Type'} (op : type1400 _123774) (x : _123774) : (term1944 _123774 op x) = (term1944 _123774 op x).
Proof. exact (eq_refl (term1944 _123774 op x)). Qed.
Lemma lem6218182 {_123774 : Type'} (op : type1400 _123774) (x : _123774) : (term2015 _123774 op x) = (term2009 _123774 op x).
Proof. exact (MK_COMB (@lem6218180 _123774 op x) (@lem6218181 _123774 op x)). Qed.
Lemma lem6218183 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6218184 {_123774 : Type'} (op : type1400 _123774) (x : _123774) : (term2021 _123774 op x) = (term2022 _123774 op x).
Proof. exact (MK_COMB (@lem6218183) (@lem6218182 _123774 op x)). Qed.
Lemma lem6218185 {_123774 : Type'} (op : type1400 _123774) (x : _123774) (y : _123774) : (term2017 _123774 op x y) = (term1925 _123774 op x y).
Proof. exact (eq_refl (term2017 _123774 op x y)). Qed.
Lemma lem6218186 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6218187 {_123774 : Type'} (op : type1400 _123774) (x : _123774) (y : _123774) : (term2023 _123774 op x y) = (term2024 _123774 op x y).
Proof. exact (MK_COMB (@lem6218186) (@lem6218185 _123774 op x y)). Qed.
Lemma lem6218188 {_123774 : Type'} (op : type1400 _123774) (x : _123774) : (term1944 _123774 op x) = (term1944 _123774 op x).
Proof. exact (eq_refl (term1944 _123774 op x)). Qed.
Lemma lem6218189 {_123774 : Type'} (y : _123774) (op : type1400 _123774) (x : _123774) : (term2025 _123774 y op x) = (term2026 _123774 y op x).
Proof. exact (MK_COMB (@lem6218187 _123774 op x y) (@lem6218188 _123774 op x)). Qed.
Lemma lem6218190 {_123774 : Type'} (op : type1400 _123774) (x : _123774) : (term2027 _123774 op x) = (term2028 _123774 op x).
Proof. exact (fun_ext (fun y : _123774 => @lem6218189 _123774 y op x)). Qed.
Lemma lem6218191 {_123774 : Type'} : (@ex _123774) = (@ex _123774).
Proof. exact (eq_refl (@ex _123774)). Qed.
Lemma lem6218192 {_123774 : Type'} (op : type1400 _123774) (x : _123774) : (term2016 _123774 op x) = (term2029 _123774 op x).
Proof. exact (MK_COMB (@lem6218191 _123774) (@lem6218190 _123774 op x)). Qed.
Lemma lem6218193 {_123774 : Type'} (op : type1400 _123774) (x : _123774) : ((term2015 _123774 op x) = (term2016 _123774 op x)) = ((term2009 _123774 op x) = (term2029 _123774 op x)).
Proof. exact (MK_COMB (@lem6218184 _123774 op x) (@lem6218192 _123774 op x)). Qed.
Lemma lem6218194 {_123774 : Type'} (op : type1400 _123774) (x : _123774) : (term2009 _123774 op x) = (term2029 _123774 op x).
Proof. exact (EQ_MP (@lem6218193 _123774 op x) (@lem6218174 _123774 op x)). Qed.
Lemma lem6218196 {A : Type'} (P : A -> Prop) (Q : Prop) : (term2013 A P Q) = (term2014 A P Q).
Proof. exact (EQ_MP (@lem18905 A P Q) (@lem18904 A P Q)). Qed.
Lemma lem6218197 {_123774 : Type'} (P : _123774 -> Prop) (Q : Prop) : (term2013 _123774 P Q) = (term2014 _123774 P Q).
Proof. exact (@lem6218196 _123774 P Q). Qed.
Lemma lem6218198 {_123774 : Type'} (y : _123774) (op : type1400 _123774) (x : _123774) : (term2030 _123774 y op x) = (term2031 _123774 y op x).
Proof. exact (@lem6218197 _123774 (term1924 _123774 op x y) (term1944 _123774 op x)). Qed.
Lemma lem6218199 {_123774 : Type'} (op : type1400 _123774) (x : _123774) (y : _123774) (z : _123774) : (term2032 _123774 op x y z) = (term1922 _123774 op x y z).
Proof. exact (eq_refl (term2032 _123774 op x y z)). Qed.
Lemma lem6218200 {_123774 : Type'} (op : type1400 _123774) (x : _123774) (y : _123774) : (term2033 _123774 op x y) = (term1924 _123774 op x y).
Proof. exact (fun_ext (fun z : _123774 => @lem6218199 _123774 op x y z)). Qed.
Lemma lem6218201 {_123774 : Type'} : (@ex _123774) = (@ex _123774).
Proof. exact (eq_refl (@ex _123774)). Qed.
Lemma lem6218202 {_123774 : Type'} (op : type1400 _123774) (x : _123774) (y : _123774) : (term2034 _123774 op x y) = (term1925 _123774 op x y).
Proof. exact (MK_COMB (@lem6218201 _123774) (@lem6218200 _123774 op x y)). Qed.
Lemma lem6218203 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6218204 {_123774 : Type'} (op : type1400 _123774) (x : _123774) (y : _123774) : (term2035 _123774 op x y) = (term2024 _123774 op x y).
Proof. exact (MK_COMB (@lem6218203) (@lem6218202 _123774 op x y)). Qed.
Lemma lem6218205 {_123774 : Type'} (op : type1400 _123774) (x : _123774) : (term1944 _123774 op x) = (term1944 _123774 op x).
Proof. exact (eq_refl (term1944 _123774 op x)). Qed.
Lemma lem6218206 {_123774 : Type'} (y : _123774) (op : type1400 _123774) (x : _123774) : (term2030 _123774 y op x) = (term2026 _123774 y op x).
Proof. exact (MK_COMB (@lem6218204 _123774 op x y) (@lem6218205 _123774 op x)). Qed.
Lemma lem6218207 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6218208 {_123774 : Type'} (y : _123774) (op : type1400 _123774) (x : _123774) : (term2036 _123774 y op x) = (term2037 _123774 y op x).
Proof. exact (MK_COMB (@lem6218207) (@lem6218206 _123774 y op x)). Qed.
Lemma lem6218209 {_123774 : Type'} (op : type1400 _123774) (x : _123774) (y : _123774) (z : _123774) : (term2032 _123774 op x y z) = (term1922 _123774 op x y z).
Proof. exact (eq_refl (term2032 _123774 op x y z)). Qed.
Lemma lem6218210 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6218211 {_123774 : Type'} (op : type1400 _123774) (x : _123774) (y : _123774) (z : _123774) : (term2038 _123774 op x y z) = (term2039 _123774 op x y z).
Proof. exact (MK_COMB (@lem6218210) (@lem6218209 _123774 op x y z)). Qed.
Lemma lem6218212 {_123774 : Type'} (op : type1400 _123774) (x : _123774) : (term1944 _123774 op x) = (term1944 _123774 op x).
Proof. exact (eq_refl (term1944 _123774 op x)). Qed.
Lemma lem6218213 {_123774 : Type'} (y : _123774) (z : _123774) (op : type1400 _123774) (x : _123774) : (term2040 _123774 y z op x) = (term2041 _123774 y z op x).
Proof. exact (MK_COMB (@lem6218211 _123774 op x y z) (@lem6218212 _123774 op x)). Qed.
Lemma lem6218214 {_123774 : Type'} (y : _123774) (op : type1400 _123774) (x : _123774) : (term2042 _123774 y op x) = (term2043 _123774 y op x).
Proof. exact (fun_ext (fun z : _123774 => @lem6218213 _123774 y z op x)). Qed.
Lemma lem6218215 {_123774 : Type'} : (@ex _123774) = (@ex _123774).
Proof. exact (eq_refl (@ex _123774)). Qed.
Lemma lem6218216 {_123774 : Type'} (y : _123774) (op : type1400 _123774) (x : _123774) : (term2031 _123774 y op x) = (term2044 _123774 y op x).
Proof. exact (MK_COMB (@lem6218215 _123774) (@lem6218214 _123774 y op x)). Qed.
Lemma lem6218217 {_123774 : Type'} (y : _123774) (op : type1400 _123774) (x : _123774) : ((term2030 _123774 y op x) = (term2031 _123774 y op x)) = ((term2026 _123774 y op x) = (term2044 _123774 y op x)).
Proof. exact (MK_COMB (@lem6218208 _123774 y op x) (@lem6218216 _123774 y op x)). Qed.
Lemma lem6218218 {_123774 : Type'} (y : _123774) (op : type1400 _123774) (x : _123774) : (term2026 _123774 y op x) = (term2044 _123774 y op x).
Proof. exact (EQ_MP (@lem6218217 _123774 y op x) (@lem6218198 _123774 y op x)). Qed.
Lemma lem6218219 {_123774 : Type'} (op : type1400 _123774) (x : _123774) : (term2028 _123774 op x) = (term2045 _123774 op x).
Proof. exact (fun_ext (fun y : _123774 => @lem6218218 _123774 y op x)). Qed.
Lemma lem6218220 {_123774 : Type'} : (@ex _123774) = (@ex _123774).
Proof. exact (eq_refl (@ex _123774)). Qed.
Lemma lem6218221 {_123774 : Type'} (op : type1400 _123774) (x : _123774) : (term2029 _123774 op x) = (term2046 _123774 op x).
Proof. exact (MK_COMB (@lem6218220 _123774) (@lem6218219 _123774 op x)). Qed.
Lemma lem6218222 {_123774 : Type'} (op : type1400 _123774) (x : _123774) : (term2009 _123774 op x) = (term2046 _123774 op x).
Proof. exact (TRANS (@lem6218194 _123774 op x) (@lem6218221 _123774 op x)). Qed.
Lemma lem6218223 {_123774 : Type'} (op : type1400 _123774) : (term2011 _123774 op) = (term2047 _123774 op).
Proof. exact (fun_ext (fun x : _123774 => @lem6218222 _123774 op x)). Qed.
Lemma lem6218224 {_123774 : Type'} : (@ex _123774) = (@ex _123774).
Proof. exact (eq_refl (@ex _123774)). Qed.
Lemma lem6218225 {_123774 : Type'} (op : type1400 _123774) : (term2012 _123774 op) = (term2048 _123774 op).
Proof. exact (MK_COMB (@lem6218224 _123774) (@lem6218223 _123774 op)). Qed.
Lemma lem6218226 {_123774 : Type'} (op : type1400 _123774) : (term1951 _123774 op) = (term2048 _123774 op).
Proof. exact (TRANS (@lem6218170 _123774 op) (@lem6218225 _123774 op)). Qed.
Lemma lem6218227 {_123774 : Type'} (op : type1400 _123774) : (term1954 _123774 op) = (term1954 _123774 op).
Proof. exact (eq_refl (term1954 _123774 op)). Qed.
Lemma lem6218228 {_123774 : Type'} (op : type1400 _123774) : (term1956 _123774 op) = (term2049 _123774 op).
Proof. exact (MK_COMB (@lem6218227 _123774 op) (@lem6218226 _123774 op)). Qed.
Lemma lem6218230 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term1993 A P Q) = (term1994 A P Q).
Proof. exact (EQ_MP (@lem18917 A P Q) (@lem18916 A P Q)). Qed.
Lemma lem6218231 {_123774 : Type'} (P : _123774 -> Prop) (Q : _123774 -> Prop) : (term1993 _123774 P Q) = (term1994 _123774 P Q).
Proof. exact (@lem6218230 _123774 P Q). Qed.
Lemma lem6218232 {_123774 : Type'} (op : type1400 _123774) : (term2050 _123774 op) = (term2051 _123774 op).
Proof. exact (@lem6218231 _123774 (term1916 _123774 op) (term2047 _123774 op)). Qed.
Lemma lem6218233 {_123774 : Type'} (op : type1400 _123774) (x : _123774) : (term2052 _123774 op x) = (term1910 _123774 op x).
Proof. exact (eq_refl (term2052 _123774 op x)). Qed.
Lemma lem6218234 {_123774 : Type'} (op : type1400 _123774) : (term2053 _123774 op) = (term1916 _123774 op).
Proof. exact (fun_ext (fun x : _123774 => @lem6218233 _123774 op x)). Qed.
Lemma lem6218235 {_123774 : Type'} : (@ex _123774) = (@ex _123774).
Proof. exact (eq_refl (@ex _123774)). Qed.
Lemma lem6218236 {_123774 : Type'} (op : type1400 _123774) : (term2054 _123774 op) = (term1917 _123774 op).
Proof. exact (MK_COMB (@lem6218235 _123774) (@lem6218234 _123774 op)). Qed.
Lemma lem6218237 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6218238 {_123774 : Type'} (op : type1400 _123774) : (term2055 _123774 op) = (term1954 _123774 op).
Proof. exact (MK_COMB (@lem6218237) (@lem6218236 _123774 op)). Qed.
Lemma lem6218239 {_123774 : Type'} (op : type1400 _123774) (x : _123774) : (term2056 _123774 op x) = (term2046 _123774 op x).
Proof. exact (eq_refl (term2056 _123774 op x)). Qed.
Lemma lem6218240 {_123774 : Type'} (op : type1400 _123774) : (term2057 _123774 op) = (term2047 _123774 op).
Proof. exact (fun_ext (fun x : _123774 => @lem6218239 _123774 op x)). Qed.
Lemma lem6218241 {_123774 : Type'} : (@ex _123774) = (@ex _123774).
Proof. exact (eq_refl (@ex _123774)). Qed.
Lemma lem6218242 {_123774 : Type'} (op : type1400 _123774) : (term2058 _123774 op) = (term2048 _123774 op).
Proof. exact (MK_COMB (@lem6218241 _123774) (@lem6218240 _123774 op)). Qed.
Lemma lem6218243 {_123774 : Type'} (op : type1400 _123774) : (term2050 _123774 op) = (term2049 _123774 op).
Proof. exact (MK_COMB (@lem6218238 _123774 op) (@lem6218242 _123774 op)). Qed.
Lemma lem6218244 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6218245 {_123774 : Type'} (op : type1400 _123774) : (term2059 _123774 op) = (term2060 _123774 op).
Proof. exact (MK_COMB (@lem6218244) (@lem6218243 _123774 op)). Qed.
Lemma lem6218246 {_123774 : Type'} (op : type1400 _123774) (x : _123774) : (term2052 _123774 op x) = (term1910 _123774 op x).
Proof. exact (eq_refl (term2052 _123774 op x)). Qed.
Lemma lem6218247 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6218248 {_123774 : Type'} (op : type1400 _123774) (x : _123774) : (term2061 _123774 op x) = (term2062 _123774 op x).
Proof. exact (MK_COMB (@lem6218247) (@lem6218246 _123774 op x)). Qed.
Lemma lem6218249 {_123774 : Type'} (op : type1400 _123774) (x : _123774) : (term2056 _123774 op x) = (term2046 _123774 op x).
Proof. exact (eq_refl (term2056 _123774 op x)). Qed.
Lemma lem6218250 {_123774 : Type'} (op : type1400 _123774) (x : _123774) : (term2063 _123774 op x) = (term2064 _123774 op x).
Proof. exact (MK_COMB (@lem6218248 _123774 op x) (@lem6218249 _123774 op x)). Qed.
Lemma lem6218251 {_123774 : Type'} (op : type1400 _123774) : (term2065 _123774 op) = (term2066 _123774 op).
Proof. exact (fun_ext (fun x : _123774 => @lem6218250 _123774 op x)). Qed.
Lemma lem6218252 {_123774 : Type'} : (@ex _123774) = (@ex _123774).
Proof. exact (eq_refl (@ex _123774)). Qed.
Lemma lem6218253 {_123774 : Type'} (op : type1400 _123774) : (term2051 _123774 op) = (term2067 _123774 op).
Proof. exact (MK_COMB (@lem6218252 _123774) (@lem6218251 _123774 op)). Qed.
Lemma lem6218254 {_123774 : Type'} (op : type1400 _123774) : ((term2050 _123774 op) = (term2051 _123774 op)) = ((term2049 _123774 op) = (term2067 _123774 op)).
Proof. exact (MK_COMB (@lem6218245 _123774 op) (@lem6218253 _123774 op)). Qed.
Lemma lem6218255 {_123774 : Type'} (op : type1400 _123774) : (term2049 _123774 op) = (term2067 _123774 op).
Proof. exact (EQ_MP (@lem6218254 _123774 op) (@lem6218232 _123774 op)). Qed.
Lemma lem6218257 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term1993 A P Q) = (term1994 A P Q).
Proof. exact (EQ_MP (@lem18917 A P Q) (@lem18916 A P Q)). Qed.
Lemma lem6218258 {_123774 : Type'} (P : _123774 -> Prop) (Q : _123774 -> Prop) : (term1993 _123774 P Q) = (term1994 _123774 P Q).
Proof. exact (@lem6218257 _123774 P Q). Qed.
Lemma lem6218259 {_123774 : Type'} (op : type1400 _123774) (x : _123774) : (term2068 _123774 op x) = (term2069 _123774 op x).
Proof. exact (@lem6218258 _123774 (term1909 _123774 op x) (term2045 _123774 op x)). Qed.
Lemma lem6218260 {_123774 : Type'} (op : type1400 _123774) (y : _123774) (x : _123774) : (term2070 _123774 op x y) = (term1907 _123774 op y x).
Proof. exact (eq_refl (term2070 _123774 op x y)). Qed.
Lemma lem6218261 {_123774 : Type'} (op : type1400 _123774) (x : _123774) : (term2071 _123774 op x) = (term1909 _123774 op x).
Proof. exact (fun_ext (fun y : _123774 => @lem6218260 _123774 op y x)). Qed.
Lemma lem6218262 {_123774 : Type'} : (@ex _123774) = (@ex _123774).
Proof. exact (eq_refl (@ex _123774)). Qed.
Lemma lem6218263 {_123774 : Type'} (op : type1400 _123774) (x : _123774) : (term2072 _123774 op x) = (term1910 _123774 op x).
Proof. exact (MK_COMB (@lem6218262 _123774) (@lem6218261 _123774 op x)). Qed.
Lemma lem6218264 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6218265 {_123774 : Type'} (op : type1400 _123774) (x : _123774) : (term2073 _123774 op x) = (term2062 _123774 op x).
Proof. exact (MK_COMB (@lem6218264) (@lem6218263 _123774 op x)). Qed.
Lemma lem6218266 {_123774 : Type'} (y : _123774) (op : type1400 _123774) (x : _123774) : (term2074 _123774 op x y) = (term2044 _123774 y op x).
Proof. exact (eq_refl (term2074 _123774 op x y)). Qed.
Lemma lem6218267 {_123774 : Type'} (op : type1400 _123774) (x : _123774) : (term2075 _123774 op x) = (term2045 _123774 op x).
Proof. exact (fun_ext (fun y : _123774 => @lem6218266 _123774 y op x)). Qed.
Lemma lem6218268 {_123774 : Type'} : (@ex _123774) = (@ex _123774).
Proof. exact (eq_refl (@ex _123774)). Qed.
Lemma lem6218269 {_123774 : Type'} (op : type1400 _123774) (x : _123774) : (term2076 _123774 op x) = (term2046 _123774 op x).
Proof. exact (MK_COMB (@lem6218268 _123774) (@lem6218267 _123774 op x)). Qed.
Lemma lem6218270 {_123774 : Type'} (op : type1400 _123774) (x : _123774) : (term2068 _123774 op x) = (term2064 _123774 op x).
Proof. exact (MK_COMB (@lem6218265 _123774 op x) (@lem6218269 _123774 op x)). Qed.
Lemma lem6218271 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6218272 {_123774 : Type'} (op : type1400 _123774) (x : _123774) : (term2077 _123774 op x) = (term2078 _123774 op x).
Proof. exact (MK_COMB (@lem6218271) (@lem6218270 _123774 op x)). Qed.
Lemma lem6218273 {_123774 : Type'} (op : type1400 _123774) (y : _123774) (x : _123774) : (term2070 _123774 op x y) = (term1907 _123774 op y x).
Proof. exact (eq_refl (term2070 _123774 op x y)). Qed.
Lemma lem6218274 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6218275 {_123774 : Type'} (op : type1400 _123774) (y : _123774) (x : _123774) : (term2079 _123774 op x y) = (term2080 _123774 op y x).
Proof. exact (MK_COMB (@lem6218274) (@lem6218273 _123774 op y x)). Qed.
Lemma lem6218276 {_123774 : Type'} (y : _123774) (op : type1400 _123774) (x : _123774) : (term2074 _123774 op x y) = (term2044 _123774 y op x).
Proof. exact (eq_refl (term2074 _123774 op x y)). Qed.
Lemma lem6218277 {_123774 : Type'} (y : _123774) (op : type1400 _123774) (x : _123774) : (term2081 _123774 op x y) = (term2082 _123774 y op x).
Proof. exact (MK_COMB (@lem6218275 _123774 op y x) (@lem6218276 _123774 y op x)). Qed.
Lemma lem6218278 {_123774 : Type'} (op : type1400 _123774) (x : _123774) : (term2083 _123774 op x) = (term2084 _123774 op x).
Proof. exact (fun_ext (fun y : _123774 => @lem6218277 _123774 y op x)). Qed.
Lemma lem6218279 {_123774 : Type'} : (@ex _123774) = (@ex _123774).
Proof. exact (eq_refl (@ex _123774)). Qed.
Lemma lem6218280 {_123774 : Type'} (op : type1400 _123774) (x : _123774) : (term2069 _123774 op x) = (term2085 _123774 op x).
Proof. exact (MK_COMB (@lem6218279 _123774) (@lem6218278 _123774 op x)). Qed.
Lemma lem6218281 {_123774 : Type'} (op : type1400 _123774) (x : _123774) : ((term2068 _123774 op x) = (term2069 _123774 op x)) = ((term2064 _123774 op x) = (term2085 _123774 op x)).
Proof. exact (MK_COMB (@lem6218272 _123774 op x) (@lem6218280 _123774 op x)). Qed.
Lemma lem6218282 {_123774 : Type'} (op : type1400 _123774) (x : _123774) : (term2064 _123774 op x) = (term2085 _123774 op x).
Proof. exact (EQ_MP (@lem6218281 _123774 op x) (@lem6218259 _123774 op x)). Qed.
Lemma lem6218284 {A : Type'} (P : Prop) (Q : A -> Prop) : (term2086 A P Q) = (term2087 A P Q).
Proof. exact (EQ_MP (@lem18911 A P Q) (@lem18910 A P Q)). Qed.
Lemma lem6218285 {_123774 : Type'} (P : Prop) (Q : _123774 -> Prop) : (term2086 _123774 P Q) = (term2087 _123774 P Q).
Proof. exact (@lem6218284 _123774 P Q). Qed.
Lemma lem6218286 {_123774 : Type'} (y : _123774) (op : type1400 _123774) (x : _123774) : (term2088 _123774 y op x) = (term2089 _123774 y op x).
Proof. exact (@lem6218285 _123774 (term1907 _123774 op y x) (term2043 _123774 y op x)). Qed.
Lemma lem6218287 {_123774 : Type'} (y : _123774) (z : _123774) (op : type1400 _123774) (x : _123774) : (term2090 _123774 y op x z) = (term2041 _123774 y z op x).
Proof. exact (eq_refl (term2090 _123774 y op x z)). Qed.
Lemma lem6218288 {_123774 : Type'} (y : _123774) (op : type1400 _123774) (x : _123774) : (term2091 _123774 y op x) = (term2043 _123774 y op x).
Proof. exact (fun_ext (fun z : _123774 => @lem6218287 _123774 y z op x)). Qed.
Lemma lem6218289 {_123774 : Type'} : (@ex _123774) = (@ex _123774).
Proof. exact (eq_refl (@ex _123774)). Qed.
Lemma lem6218290 {_123774 : Type'} (y : _123774) (op : type1400 _123774) (x : _123774) : (term2092 _123774 y op x) = (term2044 _123774 y op x).
Proof. exact (MK_COMB (@lem6218289 _123774) (@lem6218288 _123774 y op x)). Qed.
Lemma lem6218291 {_123774 : Type'} (op : type1400 _123774) (y : _123774) (x : _123774) : (term2080 _123774 op y x) = (term2080 _123774 op y x).
Proof. exact (eq_refl (term2080 _123774 op y x)). Qed.
Lemma lem6218292 {_123774 : Type'} (y : _123774) (op : type1400 _123774) (x : _123774) : (term2088 _123774 y op x) = (term2082 _123774 y op x).
Proof. exact (MK_COMB (@lem6218291 _123774 op y x) (@lem6218290 _123774 y op x)). Qed.
Lemma lem6218293 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6218294 {_123774 : Type'} (y : _123774) (op : type1400 _123774) (x : _123774) : (term2093 _123774 y op x) = (term2094 _123774 y op x).
Proof. exact (MK_COMB (@lem6218293) (@lem6218292 _123774 y op x)). Qed.
Lemma lem6218295 {_123774 : Type'} (y : _123774) (z : _123774) (op : type1400 _123774) (x : _123774) : (term2090 _123774 y op x z) = (term2041 _123774 y z op x).
Proof. exact (eq_refl (term2090 _123774 y op x z)). Qed.
Lemma lem6218296 {_123774 : Type'} (op : type1400 _123774) (y : _123774) (x : _123774) : (term2080 _123774 op y x) = (term2080 _123774 op y x).
Proof. exact (eq_refl (term2080 _123774 op y x)). Qed.
Lemma lem6218297 {_123774 : Type'} (y : _123774) (z : _123774) (op : type1400 _123774) (x : _123774) : (term2095 _123774 y op x z) = (term2096 _123774 y z op x).
Proof. exact (MK_COMB (@lem6218296 _123774 op y x) (@lem6218295 _123774 y z op x)). Qed.
Lemma lem6218298 {_123774 : Type'} (y : _123774) (op : type1400 _123774) (x : _123774) : (term2097 _123774 y op x) = (term2098 _123774 y op x).
Proof. exact (fun_ext (fun z : _123774 => @lem6218297 _123774 y z op x)). Qed.
Lemma lem6218299 {_123774 : Type'} : (@ex _123774) = (@ex _123774).
Proof. exact (eq_refl (@ex _123774)). Qed.
Lemma lem6218300 {_123774 : Type'} (y : _123774) (op : type1400 _123774) (x : _123774) : (term2089 _123774 y op x) = (term2099 _123774 y op x).
Proof. exact (MK_COMB (@lem6218299 _123774) (@lem6218298 _123774 y op x)). Qed.
Lemma lem6218301 {_123774 : Type'} (y : _123774) (op : type1400 _123774) (x : _123774) : ((term2088 _123774 y op x) = (term2089 _123774 y op x)) = ((term2082 _123774 y op x) = (term2099 _123774 y op x)).
Proof. exact (MK_COMB (@lem6218294 _123774 y op x) (@lem6218300 _123774 y op x)). Qed.
Lemma lem6218302 {_123774 : Type'} (y : _123774) (op : type1400 _123774) (x : _123774) : (term2082 _123774 y op x) = (term2099 _123774 y op x).
Proof. exact (EQ_MP (@lem6218301 _123774 y op x) (@lem6218286 _123774 y op x)). Qed.
Lemma lem6218303 {_123774 : Type'} (op : type1400 _123774) (x : _123774) : (term2084 _123774 op x) = (term2100 _123774 op x).
Proof. exact (fun_ext (fun y : _123774 => @lem6218302 _123774 y op x)). Qed.
Lemma lem6218304 {_123774 : Type'} : (@ex _123774) = (@ex _123774).
Proof. exact (eq_refl (@ex _123774)). Qed.
Lemma lem6218305 {_123774 : Type'} (op : type1400 _123774) (x : _123774) : (term2085 _123774 op x) = (term2101 _123774 op x).
Proof. exact (MK_COMB (@lem6218304 _123774) (@lem6218303 _123774 op x)). Qed.
Lemma lem6218306 {_123774 : Type'} (op : type1400 _123774) (x : _123774) : (term2064 _123774 op x) = (term2101 _123774 op x).
Proof. exact (TRANS (@lem6218282 _123774 op x) (@lem6218305 _123774 op x)). Qed.
Lemma lem6218307 {_123774 : Type'} (op : type1400 _123774) : (term2066 _123774 op) = (term2102 _123774 op).
Proof. exact (fun_ext (fun x : _123774 => @lem6218306 _123774 op x)). Qed.
Lemma lem6218308 {_123774 : Type'} : (@ex _123774) = (@ex _123774).
Proof. exact (eq_refl (@ex _123774)). Qed.
Lemma lem6218309 {_123774 : Type'} (op : type1400 _123774) : (term2067 _123774 op) = (term2103 _123774 op).
Proof. exact (MK_COMB (@lem6218308 _123774) (@lem6218307 _123774 op)). Qed.
Lemma lem6218310 {_123774 : Type'} (op : type1400 _123774) : (term2049 _123774 op) = (term2103 _123774 op).
Proof. exact (TRANS (@lem6218255 _123774 op) (@lem6218309 _123774 op)). Qed.
Lemma lem6218311 {_123774 : Type'} (op : type1400 _123774) : (term1956 _123774 op) = (term2103 _123774 op).
Proof. exact (TRANS (@lem6218228 _123774 op) (@lem6218310 _123774 op)). Qed.
Lemma lem6218312 {_123774 : Type'} (op : type1400 _123774) : (term1960 _123774 op) = (term1960 _123774 op).
Proof. exact (eq_refl (term1960 _123774 op)). Qed.
Lemma lem6218313 {_123774 : Type'} (op : type1400 _123774) : (term1962 _123774 op) = (term2104 _123774 op).
Proof. exact (MK_COMB (@lem6218312 _123774 op) (@lem6218311 _123774 op)). Qed.
Lemma lem6218315 {A : Type'} (P : Prop) (Q : A -> Prop) : (term2086 A P Q) = (term2087 A P Q).
Proof. exact (EQ_MP (@lem18911 A P Q) (@lem18910 A P Q)). Qed.
Lemma lem6218316 {_123774 : Type'} (P : Prop) (Q : _123774 -> Prop) : (term2086 _123774 P Q) = (term2087 _123774 P Q).
Proof. exact (@lem6218315 _123774 P Q). Qed.
Lemma lem6218317 {_123774 : Type'} (op : type1400 _123774) : (term2105 _123774 op) = (term2106 _123774 op).
Proof. exact (@lem6218316 _123774 (@monoidal _123774 op) (term2102 _123774 op)). Qed.
Lemma lem6218318 {_123774 : Type'} (op : type1400 _123774) (x : _123774) : (term2107 _123774 op x) = (term2101 _123774 op x).
Proof. exact (eq_refl (term2107 _123774 op x)). Qed.
Lemma lem6218319 {_123774 : Type'} (op : type1400 _123774) : (term2108 _123774 op) = (term2102 _123774 op).
Proof. exact (fun_ext (fun x : _123774 => @lem6218318 _123774 op x)). Qed.
Lemma lem6218320 {_123774 : Type'} : (@ex _123774) = (@ex _123774).
Proof. exact (eq_refl (@ex _123774)). Qed.
Lemma lem6218321 {_123774 : Type'} (op : type1400 _123774) : (term2109 _123774 op) = (term2103 _123774 op).
Proof. exact (MK_COMB (@lem6218320 _123774) (@lem6218319 _123774 op)). Qed.
Lemma lem6218322 {_123774 : Type'} (op : type1400 _123774) : (term1960 _123774 op) = (term1960 _123774 op).
Proof. exact (eq_refl (term1960 _123774 op)). Qed.
Lemma lem6218323 {_123774 : Type'} (op : type1400 _123774) : (term2105 _123774 op) = (term2104 _123774 op).
Proof. exact (MK_COMB (@lem6218322 _123774 op) (@lem6218321 _123774 op)). Qed.
Lemma lem6218324 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6218325 {_123774 : Type'} (op : type1400 _123774) : (term2110 _123774 op) = (term2111 _123774 op).
Proof. exact (MK_COMB (@lem6218324) (@lem6218323 _123774 op)). Qed.
Lemma lem6218326 {_123774 : Type'} (op : type1400 _123774) (x : _123774) : (term2107 _123774 op x) = (term2101 _123774 op x).
Proof. exact (eq_refl (term2107 _123774 op x)). Qed.
Lemma lem6218327 {_123774 : Type'} (op : type1400 _123774) : (term1960 _123774 op) = (term1960 _123774 op).
Proof. exact (eq_refl (term1960 _123774 op)). Qed.
Lemma lem6218328 {_123774 : Type'} (op : type1400 _123774) (x : _123774) : (term2112 _123774 op x) = (term2113 _123774 op x).
Proof. exact (MK_COMB (@lem6218327 _123774 op) (@lem6218326 _123774 op x)). Qed.
Lemma lem6218329 {_123774 : Type'} (op : type1400 _123774) : (term2114 _123774 op) = (term2115 _123774 op).
Proof. exact (fun_ext (fun x : _123774 => @lem6218328 _123774 op x)). Qed.
Lemma lem6218330 {_123774 : Type'} : (@ex _123774) = (@ex _123774).
Proof. exact (eq_refl (@ex _123774)). Qed.
Lemma lem6218331 {_123774 : Type'} (op : type1400 _123774) : (term2106 _123774 op) = (term2116 _123774 op).
Proof. exact (MK_COMB (@lem6218330 _123774) (@lem6218329 _123774 op)). Qed.
Lemma lem6218332 {_123774 : Type'} (op : type1400 _123774) : ((term2105 _123774 op) = (term2106 _123774 op)) = ((term2104 _123774 op) = (term2116 _123774 op)).
Proof. exact (MK_COMB (@lem6218325 _123774 op) (@lem6218331 _123774 op)). Qed.
Lemma lem6218333 {_123774 : Type'} (op : type1400 _123774) : (term2104 _123774 op) = (term2116 _123774 op).
Proof. exact (EQ_MP (@lem6218332 _123774 op) (@lem6218317 _123774 op)). Qed.
Lemma lem6218335 {A : Type'} (P : Prop) (Q : A -> Prop) : (term2086 A P Q) = (term2087 A P Q).
Proof. exact (EQ_MP (@lem18911 A P Q) (@lem18910 A P Q)). Qed.
Lemma lem6218336 {_123774 : Type'} (P : Prop) (Q : _123774 -> Prop) : (term2086 _123774 P Q) = (term2087 _123774 P Q).
Proof. exact (@lem6218335 _123774 P Q). Qed.
Lemma lem6218337 {_123774 : Type'} (op : type1400 _123774) (x : _123774) : (term2117 _123774 op x) = (term2118 _123774 op x).
Proof. exact (@lem6218336 _123774 (@monoidal _123774 op) (term2100 _123774 op x)). Qed.
Lemma lem6218338 {_123774 : Type'} (y : _123774) (op : type1400 _123774) (x : _123774) : (term2119 _123774 op x y) = (term2099 _123774 y op x).
Proof. exact (eq_refl (term2119 _123774 op x y)). Qed.
Lemma lem6218339 {_123774 : Type'} (op : type1400 _123774) (x : _123774) : (term2120 _123774 op x) = (term2100 _123774 op x).
Proof. exact (fun_ext (fun y : _123774 => @lem6218338 _123774 y op x)). Qed.
Lemma lem6218340 {_123774 : Type'} : (@ex _123774) = (@ex _123774).
Proof. exact (eq_refl (@ex _123774)). Qed.
Lemma lem6218341 {_123774 : Type'} (op : type1400 _123774) (x : _123774) : (term2121 _123774 op x) = (term2101 _123774 op x).
Proof. exact (MK_COMB (@lem6218340 _123774) (@lem6218339 _123774 op x)). Qed.
Lemma lem6218342 {_123774 : Type'} (op : type1400 _123774) : (term1960 _123774 op) = (term1960 _123774 op).
Proof. exact (eq_refl (term1960 _123774 op)). Qed.
Lemma lem6218343 {_123774 : Type'} (op : type1400 _123774) (x : _123774) : (term2117 _123774 op x) = (term2113 _123774 op x).
Proof. exact (MK_COMB (@lem6218342 _123774 op) (@lem6218341 _123774 op x)). Qed.
Lemma lem6218344 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6218345 {_123774 : Type'} (op : type1400 _123774) (x : _123774) : (term2122 _123774 op x) = (term2123 _123774 op x).
Proof. exact (MK_COMB (@lem6218344) (@lem6218343 _123774 op x)). Qed.
Lemma lem6218346 {_123774 : Type'} (y : _123774) (op : type1400 _123774) (x : _123774) : (term2119 _123774 op x y) = (term2099 _123774 y op x).
Proof. exact (eq_refl (term2119 _123774 op x y)). Qed.
Lemma lem6218347 {_123774 : Type'} (op : type1400 _123774) : (term1960 _123774 op) = (term1960 _123774 op).
Proof. exact (eq_refl (term1960 _123774 op)). Qed.
Lemma lem6218348 {_123774 : Type'} (y : _123774) (op : type1400 _123774) (x : _123774) : (term2124 _123774 op x y) = (term2125 _123774 y op x).
Proof. exact (MK_COMB (@lem6218347 _123774 op) (@lem6218346 _123774 y op x)). Qed.
Lemma lem6218349 {_123774 : Type'} (op : type1400 _123774) (x : _123774) : (term2126 _123774 op x) = (term2127 _123774 op x).
Proof. exact (fun_ext (fun y : _123774 => @lem6218348 _123774 y op x)). Qed.
Lemma lem6218350 {_123774 : Type'} : (@ex _123774) = (@ex _123774).
Proof. exact (eq_refl (@ex _123774)). Qed.
Lemma lem6218351 {_123774 : Type'} (op : type1400 _123774) (x : _123774) : (term2118 _123774 op x) = (term2128 _123774 op x).
Proof. exact (MK_COMB (@lem6218350 _123774) (@lem6218349 _123774 op x)). Qed.
Lemma lem6218352 {_123774 : Type'} (op : type1400 _123774) (x : _123774) : ((term2117 _123774 op x) = (term2118 _123774 op x)) = ((term2113 _123774 op x) = (term2128 _123774 op x)).
Proof. exact (MK_COMB (@lem6218345 _123774 op x) (@lem6218351 _123774 op x)). Qed.
Lemma lem6218353 {_123774 : Type'} (op : type1400 _123774) (x : _123774) : (term2113 _123774 op x) = (term2128 _123774 op x).
Proof. exact (EQ_MP (@lem6218352 _123774 op x) (@lem6218337 _123774 op x)). Qed.
Lemma lem6218355 {A : Type'} (P : Prop) (Q : A -> Prop) : (term2086 A P Q) = (term2087 A P Q).
Proof. exact (EQ_MP (@lem18911 A P Q) (@lem18910 A P Q)). Qed.
Lemma lem6218356 {_123774 : Type'} (P : Prop) (Q : _123774 -> Prop) : (term2086 _123774 P Q) = (term2087 _123774 P Q).
Proof. exact (@lem6218355 _123774 P Q). Qed.
Lemma lem6218357 {_123774 : Type'} (y : _123774) (op : type1400 _123774) (x : _123774) : (term2129 _123774 y op x) = (term2130 _123774 y op x).
Proof. exact (@lem6218356 _123774 (@monoidal _123774 op) (term2098 _123774 y op x)). Qed.
Lemma lem6218358 {_123774 : Type'} (y : _123774) (z : _123774) (op : type1400 _123774) (x : _123774) : (term2131 _123774 y op x z) = (term2096 _123774 y z op x).
Proof. exact (eq_refl (term2131 _123774 y op x z)). Qed.
Lemma lem6218359 {_123774 : Type'} (y : _123774) (op : type1400 _123774) (x : _123774) : (term2132 _123774 y op x) = (term2098 _123774 y op x).
Proof. exact (fun_ext (fun z : _123774 => @lem6218358 _123774 y z op x)). Qed.
Lemma lem6218360 {_123774 : Type'} : (@ex _123774) = (@ex _123774).
Proof. exact (eq_refl (@ex _123774)). Qed.
Lemma lem6218361 {_123774 : Type'} (y : _123774) (op : type1400 _123774) (x : _123774) : (term2133 _123774 y op x) = (term2099 _123774 y op x).
Proof. exact (MK_COMB (@lem6218360 _123774) (@lem6218359 _123774 y op x)). Qed.
Lemma lem6218362 {_123774 : Type'} (op : type1400 _123774) : (term1960 _123774 op) = (term1960 _123774 op).
Proof. exact (eq_refl (term1960 _123774 op)). Qed.
Lemma lem6218363 {_123774 : Type'} (y : _123774) (op : type1400 _123774) (x : _123774) : (term2129 _123774 y op x) = (term2125 _123774 y op x).
Proof. exact (MK_COMB (@lem6218362 _123774 op) (@lem6218361 _123774 y op x)). Qed.
Lemma lem6218364 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6218365 {_123774 : Type'} (y : _123774) (op : type1400 _123774) (x : _123774) : (term2134 _123774 y op x) = (term2135 _123774 y op x).
Proof. exact (MK_COMB (@lem6218364) (@lem6218363 _123774 y op x)). Qed.
Lemma lem6218366 {_123774 : Type'} (y : _123774) (z : _123774) (op : type1400 _123774) (x : _123774) : (term2131 _123774 y op x z) = (term2096 _123774 y z op x).
Proof. exact (eq_refl (term2131 _123774 y op x z)). Qed.
Lemma lem6218367 {_123774 : Type'} (op : type1400 _123774) : (term1960 _123774 op) = (term1960 _123774 op).
Proof. exact (eq_refl (term1960 _123774 op)). Qed.
Lemma lem6218368 {_123774 : Type'} (y : _123774) (z : _123774) (op : type1400 _123774) (x : _123774) : (term2136 _123774 y op x z) = (term2137 _123774 y z op x).
Proof. exact (MK_COMB (@lem6218367 _123774 op) (@lem6218366 _123774 y z op x)). Qed.
Lemma lem6218369 {_123774 : Type'} (y : _123774) (op : type1400 _123774) (x : _123774) : (term2138 _123774 y op x) = (term2139 _123774 y op x).
Proof. exact (fun_ext (fun z : _123774 => @lem6218368 _123774 y z op x)). Qed.
Lemma lem6218370 {_123774 : Type'} : (@ex _123774) = (@ex _123774).
Proof. exact (eq_refl (@ex _123774)). Qed.
Lemma lem6218371 {_123774 : Type'} (y : _123774) (op : type1400 _123774) (x : _123774) : (term2130 _123774 y op x) = (term2140 _123774 y op x).
Proof. exact (MK_COMB (@lem6218370 _123774) (@lem6218369 _123774 y op x)). Qed.
Lemma lem6218372 {_123774 : Type'} (y : _123774) (op : type1400 _123774) (x : _123774) : ((term2129 _123774 y op x) = (term2130 _123774 y op x)) = ((term2125 _123774 y op x) = (term2140 _123774 y op x)).
Proof. exact (MK_COMB (@lem6218365 _123774 y op x) (@lem6218371 _123774 y op x)). Qed.
Lemma lem6218373 {_123774 : Type'} (y : _123774) (op : type1400 _123774) (x : _123774) : (term2125 _123774 y op x) = (term2140 _123774 y op x).
Proof. exact (EQ_MP (@lem6218372 _123774 y op x) (@lem6218357 _123774 y op x)). Qed.
Lemma lem6218374 {_123774 : Type'} (op : type1400 _123774) (x : _123774) : (term2127 _123774 op x) = (term2141 _123774 op x).
Proof. exact (fun_ext (fun y : _123774 => @lem6218373 _123774 y op x)). Qed.
Lemma lem6218375 {_123774 : Type'} : (@ex _123774) = (@ex _123774).
Proof. exact (eq_refl (@ex _123774)). Qed.
Lemma lem6218376 {_123774 : Type'} (op : type1400 _123774) (x : _123774) : (term2128 _123774 op x) = (term2142 _123774 op x).
Proof. exact (MK_COMB (@lem6218375 _123774) (@lem6218374 _123774 op x)). Qed.
Lemma lem6218377 {_123774 : Type'} (op : type1400 _123774) (x : _123774) : (term2113 _123774 op x) = (term2142 _123774 op x).
Proof. exact (TRANS (@lem6218353 _123774 op x) (@lem6218376 _123774 op x)). Qed.
Lemma lem6218378 {_123774 : Type'} (op : type1400 _123774) : (term2115 _123774 op) = (term2143 _123774 op).
Proof. exact (fun_ext (fun x : _123774 => @lem6218377 _123774 op x)). Qed.
Lemma lem6218379 {_123774 : Type'} : (@ex _123774) = (@ex _123774).
Proof. exact (eq_refl (@ex _123774)). Qed.
Lemma lem6218380 {_123774 : Type'} (op : type1400 _123774) : (term2116 _123774 op) = (term2144 _123774 op).
Proof. exact (MK_COMB (@lem6218379 _123774) (@lem6218378 _123774 op)). Qed.
Lemma lem6218381 {_123774 : Type'} (op : type1400 _123774) : (term2104 _123774 op) = (term2144 _123774 op).
Proof. exact (TRANS (@lem6218333 _123774 op) (@lem6218380 _123774 op)). Qed.
Lemma lem6218382 {_123774 : Type'} (op : type1400 _123774) : (term1962 _123774 op) = (term2144 _123774 op).
Proof. exact (TRANS (@lem6218313 _123774 op) (@lem6218381 _123774 op)). Qed.
Lemma lem6218383 {_123774 : Type'} : (term1975 _123774) = (term2145 _123774).
Proof. exact (fun_ext (fun op : type1400 _123774 => @lem6218382 _123774 op)). Qed.
Lemma lem6218384 {_123774 : Type'} : (@all (_123774 -> _123774 -> _123774)) = (@all (_123774 -> _123774 -> _123774)).
Proof. exact (eq_refl (@all (_123774 -> _123774 -> _123774))). Qed.
Lemma lem6218385 {_123774 : Type'} : (term1986 _123774) = (term2146 _123774).
Proof. exact (MK_COMB (@lem6218384 _123774) (@lem6218383 _123774)). Qed.
Lemma lem6218387 {A B : Type'} (P : type1413 A B) : (term2147 A B P) = (term2148 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem6218388 {_123774 : Type'} (P : type401 _123774) : (term2149 _123774 P) = (term2150 _123774 P).
Proof. exact (@lem6218387 (type1400 _123774) _123774 P). Qed.
Lemma lem6218389 {_123774 : Type'} : (term2151 _123774) = (term2152 _123774).
Proof. exact (@lem6218388 _123774 (term2153 _123774)). Qed.
Lemma lem6218390 {_123774 : Type'} (op : type1400 _123774) : (term2154 _123774 op) = (term2143 _123774 op).
Proof. exact (eq_refl (term2154 _123774 op)). Qed.
Lemma lem6218391 {_123774 : Type'} (x : _123774) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem6218392 {_123774 : Type'} (op : type1400 _123774) (x : _123774) : (term2155 _123774 op x) = (term2156 _123774 op x).
Proof. exact (MK_COMB (@lem6218390 _123774 op) (@lem6218391 _123774 x)). Qed.
Lemma lem6218393 {_123774 : Type'} (op : type1400 _123774) (x : _123774) : (term2156 _123774 op x) = (term2142 _123774 op x).
Proof. exact (eq_refl (term2156 _123774 op x)). Qed.
Lemma lem6218394 {_123774 : Type'} (op : type1400 _123774) (x : _123774) : (term2155 _123774 op x) = (term2142 _123774 op x).
Proof. exact (TRANS (@lem6218392 _123774 op x) (@lem6218393 _123774 op x)). Qed.
Lemma lem6218395 {_123774 : Type'} (op : type1400 _123774) : (term2157 _123774 op) = (term2143 _123774 op).
Proof. exact (fun_ext (fun x : _123774 => @lem6218394 _123774 op x)). Qed.
Lemma lem6218396 {_123774 : Type'} : (@ex _123774) = (@ex _123774).
Proof. exact (eq_refl (@ex _123774)). Qed.
Lemma lem6218397 {_123774 : Type'} (op : type1400 _123774) : (term2158 _123774 op) = (term2144 _123774 op).
Proof. exact (MK_COMB (@lem6218396 _123774) (@lem6218395 _123774 op)). Qed.
Lemma lem6218398 {_123774 : Type'} : (term2159 _123774) = (term2145 _123774).
Proof. exact (fun_ext (fun op : type1400 _123774 => @lem6218397 _123774 op)). Qed.
Lemma lem6218399 {_123774 : Type'} : (@all (_123774 -> _123774 -> _123774)) = (@all (_123774 -> _123774 -> _123774)).
Proof. exact (eq_refl (@all (_123774 -> _123774 -> _123774))). Qed.
Lemma lem6218400 {_123774 : Type'} : (term2151 _123774) = (term2146 _123774).
Proof. exact (MK_COMB (@lem6218399 _123774) (@lem6218398 _123774)). Qed.
Lemma lem6218401 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6218402 {_123774 : Type'} : (term2160 _123774) = (term2161 _123774).
Proof. exact (MK_COMB (@lem6218401) (@lem6218400 _123774)). Qed.
Lemma lem6218403 {_123774 : Type'} (op : type1400 _123774) : (term2154 _123774 op) = (term2143 _123774 op).
Proof. exact (eq_refl (term2154 _123774 op)). Qed.
Lemma lem6218404 {_123774 : Type'} (x : type402 _123774) (op : type1400 _123774) : (x op) = (x op).
Proof. exact (eq_refl (x op)). Qed.
Lemma lem6218405 {_123774 : Type'} (x : type402 _123774) (op : type1400 _123774) : (term2162 _123774 x op) = (term2163 _123774 x op).
Proof. exact (MK_COMB (@lem6218403 _123774 op) (@lem6218404 _123774 x op)). Qed.
Lemma lem6218406 {_123774 : Type'} (x : type402 _123774) (op : type1400 _123774) : (term2163 _123774 x op) = (term2164 _123774 x op).
Proof. exact (eq_refl (term2163 _123774 x op)). Qed.
Lemma lem6218407 {_123774 : Type'} (x : type402 _123774) (op : type1400 _123774) : (term2162 _123774 x op) = (term2164 _123774 x op).
Proof. exact (TRANS (@lem6218405 _123774 x op) (@lem6218406 _123774 x op)). Qed.
Lemma lem6218408 {_123774 : Type'} (x : type402 _123774) : (term2165 _123774 x) = (term2166 _123774 x).
Proof. exact (fun_ext (fun op : type1400 _123774 => @lem6218407 _123774 x op)). Qed.
Lemma lem6218409 {_123774 : Type'} : (@all (_123774 -> _123774 -> _123774)) = (@all (_123774 -> _123774 -> _123774)).
Proof. exact (eq_refl (@all (_123774 -> _123774 -> _123774))). Qed.
Lemma lem6218410 {_123774 : Type'} (x : type402 _123774) : (term2167 _123774 x) = (term2168 _123774 x).
Proof. exact (MK_COMB (@lem6218409 _123774) (@lem6218408 _123774 x)). Qed.
Lemma lem6218411 {_123774 : Type'} : (term2169 _123774) = (term2170 _123774).
Proof. exact (fun_ext (fun x : type402 _123774 => @lem6218410 _123774 x)). Qed.
Lemma lem6218412 {_123774 : Type'} : (@ex ((_123774 -> _123774 -> _123774) -> _123774)) = (@ex ((_123774 -> _123774 -> _123774) -> _123774)).
Proof. exact (eq_refl (@ex ((_123774 -> _123774 -> _123774) -> _123774))). Qed.
Lemma lem6218413 {_123774 : Type'} : (term2152 _123774) = (term2171 _123774).
Proof. exact (MK_COMB (@lem6218412 _123774) (@lem6218411 _123774)). Qed.
Lemma lem6218414 {_123774 : Type'} : ((term2151 _123774) = (term2152 _123774)) = ((term2146 _123774) = (term2171 _123774)).
Proof. exact (MK_COMB (@lem6218402 _123774) (@lem6218413 _123774)). Qed.
Lemma lem6218415 {_123774 : Type'} : (term2146 _123774) = (term2171 _123774).
Proof. exact (EQ_MP (@lem6218414 _123774) (@lem6218389 _123774)). Qed.
Lemma lem6218417 {A B : Type'} (P : type1413 A B) : (term2147 A B P) = (term2148 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem6218418 {_123774 : Type'} (P : type401 _123774) : (term2149 _123774 P) = (term2150 _123774 P).
Proof. exact (@lem6218417 (type1400 _123774) _123774 P). Qed.
Lemma lem6218419 {_123774 : Type'} (x : type402 _123774) : (term2172 _123774 x) = (term2173 _123774 x).
Proof. exact (@lem6218418 _123774 (term2174 _123774 x)). Qed.
Lemma lem6218420 {_123774 : Type'} (x : type402 _123774) (op : type1400 _123774) : (term2175 _123774 x op) = (term2176 _123774 x op).
Proof. exact (eq_refl (term2175 _123774 x op)). Qed.
Lemma lem6218421 {_123774 : Type'} (y : _123774) : y = y.
Proof. exact (eq_refl y). Qed.
Lemma lem6218422 {_123774 : Type'} (x : type402 _123774) (op : type1400 _123774) (y : _123774) : (term2177 _123774 x op y) = (term2178 _123774 x op y).
Proof. exact (MK_COMB (@lem6218420 _123774 x op) (@lem6218421 _123774 y)). Qed.
Lemma lem6218423 {_123774 : Type'} (y : _123774) (x : type402 _123774) (op : type1400 _123774) : (term2178 _123774 x op y) = (term2179 _123774 y x op).
Proof. exact (eq_refl (term2178 _123774 x op y)). Qed.
Lemma lem6218424 {_123774 : Type'} (y : _123774) (x : type402 _123774) (op : type1400 _123774) : (term2177 _123774 x op y) = (term2179 _123774 y x op).
Proof. exact (TRANS (@lem6218422 _123774 x op y) (@lem6218423 _123774 y x op)). Qed.
Lemma lem6218425 {_123774 : Type'} (x : type402 _123774) (op : type1400 _123774) : (term2180 _123774 x op) = (term2176 _123774 x op).
Proof. exact (fun_ext (fun y : _123774 => @lem6218424 _123774 y x op)). Qed.
Lemma lem6218426 {_123774 : Type'} : (@ex _123774) = (@ex _123774).
Proof. exact (eq_refl (@ex _123774)). Qed.
Lemma lem6218427 {_123774 : Type'} (x : type402 _123774) (op : type1400 _123774) : (term2181 _123774 x op) = (term2164 _123774 x op).
Proof. exact (MK_COMB (@lem6218426 _123774) (@lem6218425 _123774 x op)). Qed.
Lemma lem6218428 {_123774 : Type'} (x : type402 _123774) : (term2182 _123774 x) = (term2166 _123774 x).
Proof. exact (fun_ext (fun op : type1400 _123774 => @lem6218427 _123774 x op)). Qed.
Lemma lem6218429 {_123774 : Type'} : (@all (_123774 -> _123774 -> _123774)) = (@all (_123774 -> _123774 -> _123774)).
Proof. exact (eq_refl (@all (_123774 -> _123774 -> _123774))). Qed.
Lemma lem6218430 {_123774 : Type'} (x : type402 _123774) : (term2172 _123774 x) = (term2168 _123774 x).
Proof. exact (MK_COMB (@lem6218429 _123774) (@lem6218428 _123774 x)). Qed.
Lemma lem6218431 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6218432 {_123774 : Type'} (x : type402 _123774) : (term2183 _123774 x) = (term2184 _123774 x).
Proof. exact (MK_COMB (@lem6218431) (@lem6218430 _123774 x)). Qed.
Lemma lem6218433 {_123774 : Type'} (x : type402 _123774) (op : type1400 _123774) : (term2175 _123774 x op) = (term2176 _123774 x op).
Proof. exact (eq_refl (term2175 _123774 x op)). Qed.
Lemma lem6218434 {_123774 : Type'} (y : type402 _123774) (op : type1400 _123774) : (y op) = (y op).
Proof. exact (eq_refl (y op)). Qed.
Lemma lem6218435 {_123774 : Type'} (x : type402 _123774) (y : type402 _123774) (op : type1400 _123774) : (term2185 _123774 x y op) = (term2186 _123774 x y op).
Proof. exact (MK_COMB (@lem6218433 _123774 x op) (@lem6218434 _123774 y op)). Qed.
Lemma lem6218436 {_123774 : Type'} (y : type402 _123774) (x : type402 _123774) (op : type1400 _123774) : (term2186 _123774 x y op) = (term2187 _123774 y x op).
Proof. exact (eq_refl (term2186 _123774 x y op)). Qed.
Lemma lem6218437 {_123774 : Type'} (y : type402 _123774) (x : type402 _123774) (op : type1400 _123774) : (term2185 _123774 x y op) = (term2187 _123774 y x op).
Proof. exact (TRANS (@lem6218435 _123774 x y op) (@lem6218436 _123774 y x op)). Qed.
Lemma lem6218438 {_123774 : Type'} (y : type402 _123774) (x : type402 _123774) : (term2188 _123774 x y) = (term2189 _123774 y x).
Proof. exact (fun_ext (fun op : type1400 _123774 => @lem6218437 _123774 y x op)). Qed.
Lemma lem6218439 {_123774 : Type'} : (@all (_123774 -> _123774 -> _123774)) = (@all (_123774 -> _123774 -> _123774)).
Proof. exact (eq_refl (@all (_123774 -> _123774 -> _123774))). Qed.
Lemma lem6218440 {_123774 : Type'} (y : type402 _123774) (x : type402 _123774) : (term2190 _123774 x y) = (term2191 _123774 y x).
Proof. exact (MK_COMB (@lem6218439 _123774) (@lem6218438 _123774 y x)). Qed.
Lemma lem6218441 {_123774 : Type'} (x : type402 _123774) : (term2192 _123774 x) = (term2193 _123774 x).
Proof. exact (fun_ext (fun y : type402 _123774 => @lem6218440 _123774 y x)). Qed.
Lemma lem6218442 {_123774 : Type'} : (@ex ((_123774 -> _123774 -> _123774) -> _123774)) = (@ex ((_123774 -> _123774 -> _123774) -> _123774)).
Proof. exact (eq_refl (@ex ((_123774 -> _123774 -> _123774) -> _123774))). Qed.
Lemma lem6218443 {_123774 : Type'} (x : type402 _123774) : (term2173 _123774 x) = (term2194 _123774 x).
Proof. exact (MK_COMB (@lem6218442 _123774) (@lem6218441 _123774 x)). Qed.
Lemma lem6218444 {_123774 : Type'} (x : type402 _123774) : ((term2172 _123774 x) = (term2173 _123774 x)) = ((term2168 _123774 x) = (term2194 _123774 x)).
Proof. exact (MK_COMB (@lem6218432 _123774 x) (@lem6218443 _123774 x)). Qed.
Lemma lem6218445 {_123774 : Type'} (x : type402 _123774) : (term2168 _123774 x) = (term2194 _123774 x).
Proof. exact (EQ_MP (@lem6218444 _123774 x) (@lem6218419 _123774 x)). Qed.
Lemma lem6218447 {A B : Type'} (P : type1413 A B) : (term2147 A B P) = (term2148 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem6218448 {_123774 : Type'} (P : type401 _123774) : (term2149 _123774 P) = (term2150 _123774 P).
Proof. exact (@lem6218447 (type1400 _123774) _123774 P). Qed.
Lemma lem6218449 {_123774 : Type'} (y : type402 _123774) (x : type402 _123774) : (term2195 _123774 y x) = (term2196 _123774 y x).
Proof. exact (@lem6218448 _123774 (term2197 _123774 y x)). Qed.
Lemma lem6218450 {_123774 : Type'} (y : type402 _123774) (x : type402 _123774) (op : type1400 _123774) : (term2198 _123774 y x op) = (term2199 _123774 y x op).
Proof. exact (eq_refl (term2198 _123774 y x op)). Qed.
Lemma lem6218451 {_123774 : Type'} (z : _123774) : z = z.
Proof. exact (eq_refl z). Qed.
Lemma lem6218452 {_123774 : Type'} (y : type402 _123774) (x : type402 _123774) (op : type1400 _123774) (z : _123774) : (term2200 _123774 y x op z) = (term2201 _123774 y x op z).
Proof. exact (MK_COMB (@lem6218450 _123774 y x op) (@lem6218451 _123774 z)). Qed.
Lemma lem6218453 {_123774 : Type'} (y : type402 _123774) (z : _123774) (x : type402 _123774) (op : type1400 _123774) : (term2201 _123774 y x op z) = (term2202 _123774 y z x op).
Proof. exact (eq_refl (term2201 _123774 y x op z)). Qed.
Lemma lem6218454 {_123774 : Type'} (y : type402 _123774) (z : _123774) (x : type402 _123774) (op : type1400 _123774) : (term2200 _123774 y x op z) = (term2202 _123774 y z x op).
Proof. exact (TRANS (@lem6218452 _123774 y x op z) (@lem6218453 _123774 y z x op)). Qed.
Lemma lem6218455 {_123774 : Type'} (y : type402 _123774) (x : type402 _123774) (op : type1400 _123774) : (term2203 _123774 y x op) = (term2199 _123774 y x op).
Proof. exact (fun_ext (fun z : _123774 => @lem6218454 _123774 y z x op)). Qed.
Lemma lem6218456 {_123774 : Type'} : (@ex _123774) = (@ex _123774).
Proof. exact (eq_refl (@ex _123774)). Qed.
Lemma lem6218457 {_123774 : Type'} (y : type402 _123774) (x : type402 _123774) (op : type1400 _123774) : (term2204 _123774 y x op) = (term2187 _123774 y x op).
Proof. exact (MK_COMB (@lem6218456 _123774) (@lem6218455 _123774 y x op)). Qed.
Lemma lem6218458 {_123774 : Type'} (y : type402 _123774) (x : type402 _123774) : (term2205 _123774 y x) = (term2189 _123774 y x).
Proof. exact (fun_ext (fun op : type1400 _123774 => @lem6218457 _123774 y x op)). Qed.
Lemma lem6218459 {_123774 : Type'} : (@all (_123774 -> _123774 -> _123774)) = (@all (_123774 -> _123774 -> _123774)).
Proof. exact (eq_refl (@all (_123774 -> _123774 -> _123774))). Qed.
Lemma lem6218460 {_123774 : Type'} (y : type402 _123774) (x : type402 _123774) : (term2195 _123774 y x) = (term2191 _123774 y x).
Proof. exact (MK_COMB (@lem6218459 _123774) (@lem6218458 _123774 y x)). Qed.
Lemma lem6218461 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6218462 {_123774 : Type'} (y : type402 _123774) (x : type402 _123774) : (term2206 _123774 y x) = (term2207 _123774 y x).
Proof. exact (MK_COMB (@lem6218461) (@lem6218460 _123774 y x)). Qed.
Lemma lem6218463 {_123774 : Type'} (y : type402 _123774) (x : type402 _123774) (op : type1400 _123774) : (term2198 _123774 y x op) = (term2199 _123774 y x op).
Proof. exact (eq_refl (term2198 _123774 y x op)). Qed.
Lemma lem6218464 {_123774 : Type'} (z : type402 _123774) (op : type1400 _123774) : (z op) = (z op).
Proof. exact (eq_refl (z op)). Qed.
Lemma lem6218465 {_123774 : Type'} (y : type402 _123774) (x : type402 _123774) (z : type402 _123774) (op : type1400 _123774) : (term2208 _123774 y x z op) = (term2209 _123774 y x z op).
Proof. exact (MK_COMB (@lem6218463 _123774 y x op) (@lem6218464 _123774 z op)). Qed.
Lemma lem6218466 {_123774 : Type'} (y : type402 _123774) (z : type402 _123774) (x : type402 _123774) (op : type1400 _123774) : (term2209 _123774 y x z op) = (term2210 _123774 y z x op).
Proof. exact (eq_refl (term2209 _123774 y x z op)). Qed.
Lemma lem6218467 {_123774 : Type'} (y : type402 _123774) (z : type402 _123774) (x : type402 _123774) (op : type1400 _123774) : (term2208 _123774 y x z op) = (term2210 _123774 y z x op).
Proof. exact (TRANS (@lem6218465 _123774 y x z op) (@lem6218466 _123774 y z x op)). Qed.
Lemma lem6218468 {_123774 : Type'} (y : type402 _123774) (z : type402 _123774) (x : type402 _123774) : (term2211 _123774 y x z) = (term2212 _123774 y z x).
Proof. exact (fun_ext (fun op : type1400 _123774 => @lem6218467 _123774 y z x op)). Qed.
Lemma lem6218469 {_123774 : Type'} : (@all (_123774 -> _123774 -> _123774)) = (@all (_123774 -> _123774 -> _123774)).
Proof. exact (eq_refl (@all (_123774 -> _123774 -> _123774))). Qed.
Lemma lem6218470 {_123774 : Type'} (y : type402 _123774) (z : type402 _123774) (x : type402 _123774) : (term2213 _123774 y x z) = (term2214 _123774 y z x).
Proof. exact (MK_COMB (@lem6218469 _123774) (@lem6218468 _123774 y z x)). Qed.
Lemma lem6218471 {_123774 : Type'} (y : type402 _123774) (x : type402 _123774) : (term2215 _123774 y x) = (term2216 _123774 y x).
Proof. exact (fun_ext (fun z : type402 _123774 => @lem6218470 _123774 y z x)). Qed.
Lemma lem6218472 {_123774 : Type'} : (@ex ((_123774 -> _123774 -> _123774) -> _123774)) = (@ex ((_123774 -> _123774 -> _123774) -> _123774)).
Proof. exact (eq_refl (@ex ((_123774 -> _123774 -> _123774) -> _123774))). Qed.
Lemma lem6218473 {_123774 : Type'} (y : type402 _123774) (x : type402 _123774) : (term2196 _123774 y x) = (term2217 _123774 y x).
Proof. exact (MK_COMB (@lem6218472 _123774) (@lem6218471 _123774 y x)). Qed.
Lemma lem6218474 {_123774 : Type'} (y : type402 _123774) (x : type402 _123774) : ((term2195 _123774 y x) = (term2196 _123774 y x)) = ((term2191 _123774 y x) = (term2217 _123774 y x)).
Proof. exact (MK_COMB (@lem6218462 _123774 y x) (@lem6218473 _123774 y x)). Qed.
Lemma lem6218475 {_123774 : Type'} (y : type402 _123774) (x : type402 _123774) : (term2191 _123774 y x) = (term2217 _123774 y x).
Proof. exact (EQ_MP (@lem6218474 _123774 y x) (@lem6218449 _123774 y x)). Qed.
Lemma lem6218476 {_123774 : Type'} (x : type402 _123774) : (term2193 _123774 x) = (term2218 _123774 x).
Proof. exact (fun_ext (fun y : type402 _123774 => @lem6218475 _123774 y x)). Qed.
Lemma lem6218477 {_123774 : Type'} : (@ex ((_123774 -> _123774 -> _123774) -> _123774)) = (@ex ((_123774 -> _123774 -> _123774) -> _123774)).
Proof. exact (eq_refl (@ex ((_123774 -> _123774 -> _123774) -> _123774))). Qed.
Lemma lem6218478 {_123774 : Type'} (x : type402 _123774) : (term2194 _123774 x) = (term2219 _123774 x).
Proof. exact (MK_COMB (@lem6218477 _123774) (@lem6218476 _123774 x)). Qed.
Lemma lem6218479 {_123774 : Type'} (x : type402 _123774) : (term2168 _123774 x) = (term2219 _123774 x).
Proof. exact (TRANS (@lem6218445 _123774 x) (@lem6218478 _123774 x)). Qed.
Lemma lem6218480 {_123774 : Type'} : (term2170 _123774) = (term2220 _123774).
Proof. exact (fun_ext (fun x : type402 _123774 => @lem6218479 _123774 x)). Qed.
Lemma lem6218481 {_123774 : Type'} : (@ex ((_123774 -> _123774 -> _123774) -> _123774)) = (@ex ((_123774 -> _123774 -> _123774) -> _123774)).
Proof. exact (eq_refl (@ex ((_123774 -> _123774 -> _123774) -> _123774))). Qed.
Lemma lem6218482 {_123774 : Type'} : (term2171 _123774) = (term2221 _123774).
Proof. exact (MK_COMB (@lem6218481 _123774) (@lem6218480 _123774)). Qed.
Lemma lem6218483 {_123774 : Type'} : (term2146 _123774) = (term2221 _123774).
Proof. exact (TRANS (@lem6218415 _123774) (@lem6218482 _123774)). Qed.
Lemma lem6218484 {_123774 : Type'} : (term1986 _123774) = (term2221 _123774).
Proof. exact (TRANS (@lem6218385 _123774) (@lem6218483 _123774)). Qed.
Lemma lem6218485 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6218486 {_123774 : Type'} : (term1988 _123774) = (term2222 _123774).
Proof. exact (MK_COMB (@lem6218485) (@lem6218484 _123774)). Qed.
Lemma lem6218487 {_123774 : Type'} : (term1991 _123774) = (term1991 _123774).
Proof. exact (eq_refl (term1991 _123774)). Qed.
Lemma lem6218488 {_123774 : Type'} : (term1992 _123774) = (term2223 _123774).
Proof. exact (MK_COMB (@lem6218486 _123774) (@lem6218487 _123774)). Qed.
Lemma lem6218490 {A : Type'} (P : A -> Prop) (Q : Prop) : (term2224 A P Q) = (term2225 A P Q).
Proof. exact (EQ_MP (@lem18923 A P Q) (@lem18922 A P Q)). Qed.
Lemma lem6218491 {_123774 : Type'} (P : type82 _123774) (Q : Prop) : (term2226 _123774 P Q) = (term2227 _123774 P Q).
Proof. exact (@lem6218490 (type402 _123774) P Q). Qed.
Lemma lem6218492 {_123774 : Type'} : (term2228 _123774) = (term2229 _123774).
Proof. exact (@lem6218491 _123774 (term2220 _123774) (term1991 _123774)). Qed.
Lemma lem6218493 {_123774 : Type'} (x : type402 _123774) : (term2230 _123774 x) = (term2219 _123774 x).
Proof. exact (eq_refl (term2230 _123774 x)). Qed.
Lemma lem6218494 {_123774 : Type'} : (term2231 _123774) = (term2220 _123774).
Proof. exact (fun_ext (fun x : type402 _123774 => @lem6218493 _123774 x)). Qed.
Lemma lem6218495 {_123774 : Type'} : (@ex ((_123774 -> _123774 -> _123774) -> _123774)) = (@ex ((_123774 -> _123774 -> _123774) -> _123774)).
Proof. exact (eq_refl (@ex ((_123774 -> _123774 -> _123774) -> _123774))). Qed.
Lemma lem6218496 {_123774 : Type'} : (term2232 _123774) = (term2221 _123774).
Proof. exact (MK_COMB (@lem6218495 _123774) (@lem6218494 _123774)). Qed.
Lemma lem6218497 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6218498 {_123774 : Type'} : (term2233 _123774) = (term2222 _123774).
Proof. exact (MK_COMB (@lem6218497) (@lem6218496 _123774)). Qed.
Lemma lem6218499 {_123774 : Type'} : (term1991 _123774) = (term1991 _123774).
Proof. exact (eq_refl (term1991 _123774)). Qed.
Lemma lem6218500 {_123774 : Type'} : (term2228 _123774) = (term2223 _123774).
Proof. exact (MK_COMB (@lem6218498 _123774) (@lem6218499 _123774)). Qed.
Lemma lem6218501 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6218502 {_123774 : Type'} : (term2234 _123774) = (term2235 _123774).
Proof. exact (MK_COMB (@lem6218501) (@lem6218500 _123774)). Qed.
Lemma lem6218503 {_123774 : Type'} (x : type402 _123774) : (term2230 _123774 x) = (term2219 _123774 x).
Proof. exact (eq_refl (term2230 _123774 x)). Qed.
Lemma lem6218504 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6218505 {_123774 : Type'} (x : type402 _123774) : (term2236 _123774 x) = (term2237 _123774 x).
Proof. exact (MK_COMB (@lem6218504) (@lem6218503 _123774 x)). Qed.
Lemma lem6218506 {_123774 : Type'} : (term1991 _123774) = (term1991 _123774).
Proof. exact (eq_refl (term1991 _123774)). Qed.
Lemma lem6218507 {_123774 : Type'} (x : type402 _123774) : (term2238 _123774 x) = (term2239 _123774 x).
Proof. exact (MK_COMB (@lem6218505 _123774 x) (@lem6218506 _123774)). Qed.
Lemma lem6218508 {_123774 : Type'} : (term2240 _123774) = (term2241 _123774).
Proof. exact (fun_ext (fun x : type402 _123774 => @lem6218507 _123774 x)). Qed.
Lemma lem6218509 {_123774 : Type'} : (@ex ((_123774 -> _123774 -> _123774) -> _123774)) = (@ex ((_123774 -> _123774 -> _123774) -> _123774)).
Proof. exact (eq_refl (@ex ((_123774 -> _123774 -> _123774) -> _123774))). Qed.
Lemma lem6218510 {_123774 : Type'} : (term2229 _123774) = (term2242 _123774).
Proof. exact (MK_COMB (@lem6218509 _123774) (@lem6218508 _123774)). Qed.
Lemma lem6218511 {_123774 : Type'} : ((term2228 _123774) = (term2229 _123774)) = ((term2223 _123774) = (term2242 _123774)).
Proof. exact (MK_COMB (@lem6218502 _123774) (@lem6218510 _123774)). Qed.
Lemma lem6218512 {_123774 : Type'} : (term2223 _123774) = (term2242 _123774).
Proof. exact (EQ_MP (@lem6218511 _123774) (@lem6218492 _123774)). Qed.
Lemma lem6218514 {A : Type'} (P : A -> Prop) (Q : Prop) : (term2224 A P Q) = (term2225 A P Q).
Proof. exact (EQ_MP (@lem18923 A P Q) (@lem18922 A P Q)). Qed.
Lemma lem6218515 {_123774 : Type'} (P : type82 _123774) (Q : Prop) : (term2226 _123774 P Q) = (term2227 _123774 P Q).
Proof. exact (@lem6218514 (type402 _123774) P Q). Qed.
Lemma lem6218516 {_123774 : Type'} (x : type402 _123774) : (term2243 _123774 x) = (term2244 _123774 x).
Proof. exact (@lem6218515 _123774 (term2218 _123774 x) (term1991 _123774)). Qed.
Lemma lem6218517 {_123774 : Type'} (y : type402 _123774) (x : type402 _123774) : (term2245 _123774 x y) = (term2217 _123774 y x).
Proof. exact (eq_refl (term2245 _123774 x y)). Qed.
Lemma lem6218518 {_123774 : Type'} (x : type402 _123774) : (term2246 _123774 x) = (term2218 _123774 x).
Proof. exact (fun_ext (fun y : type402 _123774 => @lem6218517 _123774 y x)). Qed.
Lemma lem6218519 {_123774 : Type'} : (@ex ((_123774 -> _123774 -> _123774) -> _123774)) = (@ex ((_123774 -> _123774 -> _123774) -> _123774)).
Proof. exact (eq_refl (@ex ((_123774 -> _123774 -> _123774) -> _123774))). Qed.
Lemma lem6218520 {_123774 : Type'} (x : type402 _123774) : (term2247 _123774 x) = (term2219 _123774 x).
Proof. exact (MK_COMB (@lem6218519 _123774) (@lem6218518 _123774 x)). Qed.
Lemma lem6218521 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6218522 {_123774 : Type'} (x : type402 _123774) : (term2248 _123774 x) = (term2237 _123774 x).
Proof. exact (MK_COMB (@lem6218521) (@lem6218520 _123774 x)). Qed.
Lemma lem6218523 {_123774 : Type'} : (term1991 _123774) = (term1991 _123774).
Proof. exact (eq_refl (term1991 _123774)). Qed.
Lemma lem6218524 {_123774 : Type'} (x : type402 _123774) : (term2243 _123774 x) = (term2239 _123774 x).
Proof. exact (MK_COMB (@lem6218522 _123774 x) (@lem6218523 _123774)). Qed.
Lemma lem6218525 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6218526 {_123774 : Type'} (x : type402 _123774) : (term2249 _123774 x) = (term2250 _123774 x).
Proof. exact (MK_COMB (@lem6218525) (@lem6218524 _123774 x)). Qed.
Lemma lem6218527 {_123774 : Type'} (y : type402 _123774) (x : type402 _123774) : (term2245 _123774 x y) = (term2217 _123774 y x).
Proof. exact (eq_refl (term2245 _123774 x y)). Qed.
Lemma lem6218528 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6218529 {_123774 : Type'} (y : type402 _123774) (x : type402 _123774) : (term2251 _123774 x y) = (term2252 _123774 y x).
Proof. exact (MK_COMB (@lem6218528) (@lem6218527 _123774 y x)). Qed.
Lemma lem6218530 {_123774 : Type'} : (term1991 _123774) = (term1991 _123774).
Proof. exact (eq_refl (term1991 _123774)). Qed.
Lemma lem6218531 {_123774 : Type'} (y : type402 _123774) (x : type402 _123774) : (term2253 _123774 x y) = (term2254 _123774 y x).
Proof. exact (MK_COMB (@lem6218529 _123774 y x) (@lem6218530 _123774)). Qed.
Lemma lem6218532 {_123774 : Type'} (x : type402 _123774) : (term2255 _123774 x) = (term2256 _123774 x).
Proof. exact (fun_ext (fun y : type402 _123774 => @lem6218531 _123774 y x)). Qed.
Lemma lem6218533 {_123774 : Type'} : (@ex ((_123774 -> _123774 -> _123774) -> _123774)) = (@ex ((_123774 -> _123774 -> _123774) -> _123774)).
Proof. exact (eq_refl (@ex ((_123774 -> _123774 -> _123774) -> _123774))). Qed.
Lemma lem6218534 {_123774 : Type'} (x : type402 _123774) : (term2244 _123774 x) = (term2257 _123774 x).
Proof. exact (MK_COMB (@lem6218533 _123774) (@lem6218532 _123774 x)). Qed.
Lemma lem6218535 {_123774 : Type'} (x : type402 _123774) : ((term2243 _123774 x) = (term2244 _123774 x)) = ((term2239 _123774 x) = (term2257 _123774 x)).
Proof. exact (MK_COMB (@lem6218526 _123774 x) (@lem6218534 _123774 x)). Qed.
Lemma lem6218536 {_123774 : Type'} (x : type402 _123774) : (term2239 _123774 x) = (term2257 _123774 x).
Proof. exact (EQ_MP (@lem6218535 _123774 x) (@lem6218516 _123774 x)). Qed.
Lemma lem6218538 {A : Type'} (P : A -> Prop) (Q : Prop) : (term2224 A P Q) = (term2225 A P Q).
Proof. exact (EQ_MP (@lem18923 A P Q) (@lem18922 A P Q)). Qed.
Lemma lem6218539 {_123774 : Type'} (P : type82 _123774) (Q : Prop) : (term2226 _123774 P Q) = (term2227 _123774 P Q).
Proof. exact (@lem6218538 (type402 _123774) P Q). Qed.
Lemma lem6218540 {_123774 : Type'} (y : type402 _123774) (x : type402 _123774) : (term2258 _123774 y x) = (term2259 _123774 y x).
Proof. exact (@lem6218539 _123774 (term2216 _123774 y x) (term1991 _123774)). Qed.
Lemma lem6218541 {_123774 : Type'} (y : type402 _123774) (z : type402 _123774) (x : type402 _123774) : (term2260 _123774 y x z) = (term2214 _123774 y z x).
Proof. exact (eq_refl (term2260 _123774 y x z)). Qed.
Lemma lem6218542 {_123774 : Type'} (y : type402 _123774) (x : type402 _123774) : (term2261 _123774 y x) = (term2216 _123774 y x).
Proof. exact (fun_ext (fun z : type402 _123774 => @lem6218541 _123774 y z x)). Qed.
Lemma lem6218543 {_123774 : Type'} : (@ex ((_123774 -> _123774 -> _123774) -> _123774)) = (@ex ((_123774 -> _123774 -> _123774) -> _123774)).
Proof. exact (eq_refl (@ex ((_123774 -> _123774 -> _123774) -> _123774))). Qed.
Lemma lem6218544 {_123774 : Type'} (y : type402 _123774) (x : type402 _123774) : (term2262 _123774 y x) = (term2217 _123774 y x).
Proof. exact (MK_COMB (@lem6218543 _123774) (@lem6218542 _123774 y x)). Qed.
Lemma lem6218545 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6218546 {_123774 : Type'} (y : type402 _123774) (x : type402 _123774) : (term2263 _123774 y x) = (term2252 _123774 y x).
Proof. exact (MK_COMB (@lem6218545) (@lem6218544 _123774 y x)). Qed.
Lemma lem6218547 {_123774 : Type'} : (term1991 _123774) = (term1991 _123774).
Proof. exact (eq_refl (term1991 _123774)). Qed.
Lemma lem6218548 {_123774 : Type'} (y : type402 _123774) (x : type402 _123774) : (term2258 _123774 y x) = (term2254 _123774 y x).
Proof. exact (MK_COMB (@lem6218546 _123774 y x) (@lem6218547 _123774)). Qed.
Lemma lem6218549 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6218550 {_123774 : Type'} (y : type402 _123774) (x : type402 _123774) : (term2264 _123774 y x) = (term2265 _123774 y x).
Proof. exact (MK_COMB (@lem6218549) (@lem6218548 _123774 y x)). Qed.
Lemma lem6218551 {_123774 : Type'} (y : type402 _123774) (z : type402 _123774) (x : type402 _123774) : (term2260 _123774 y x z) = (term2214 _123774 y z x).
Proof. exact (eq_refl (term2260 _123774 y x z)). Qed.
Lemma lem6218552 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6218553 {_123774 : Type'} (y : type402 _123774) (z : type402 _123774) (x : type402 _123774) : (term2266 _123774 y x z) = (term2267 _123774 y z x).
Proof. exact (MK_COMB (@lem6218552) (@lem6218551 _123774 y z x)). Qed.
Lemma lem6218554 {_123774 : Type'} : (term1991 _123774) = (term1991 _123774).
Proof. exact (eq_refl (term1991 _123774)). Qed.
Lemma lem6218555 {_123774 : Type'} (y : type402 _123774) (z : type402 _123774) (x : type402 _123774) : (term2268 _123774 y x z) = (term2269 _123774 y z x).
Proof. exact (MK_COMB (@lem6218553 _123774 y z x) (@lem6218554 _123774)). Qed.
Lemma lem6218556 {_123774 : Type'} (y : type402 _123774) (x : type402 _123774) : (term2270 _123774 y x) = (term2271 _123774 y x).
Proof. exact (fun_ext (fun z : type402 _123774 => @lem6218555 _123774 y z x)). Qed.
Lemma lem6218557 {_123774 : Type'} : (@ex ((_123774 -> _123774 -> _123774) -> _123774)) = (@ex ((_123774 -> _123774 -> _123774) -> _123774)).
Proof. exact (eq_refl (@ex ((_123774 -> _123774 -> _123774) -> _123774))). Qed.
Lemma lem6218558 {_123774 : Type'} (y : type402 _123774) (x : type402 _123774) : (term2259 _123774 y x) = (term2272 _123774 y x).
Proof. exact (MK_COMB (@lem6218557 _123774) (@lem6218556 _123774 y x)). Qed.
Lemma lem6218559 {_123774 : Type'} (y : type402 _123774) (x : type402 _123774) : ((term2258 _123774 y x) = (term2259 _123774 y x)) = ((term2254 _123774 y x) = (term2272 _123774 y x)).
Proof. exact (MK_COMB (@lem6218550 _123774 y x) (@lem6218558 _123774 y x)). Qed.
Lemma lem6218560 {_123774 : Type'} (y : type402 _123774) (x : type402 _123774) : (term2254 _123774 y x) = (term2272 _123774 y x).
Proof. exact (EQ_MP (@lem6218559 _123774 y x) (@lem6218540 _123774 y x)). Qed.
Lemma lem6218561 {_123774 : Type'} (x : type402 _123774) : (term2256 _123774 x) = (term2273 _123774 x).
Proof. exact (fun_ext (fun y : type402 _123774 => @lem6218560 _123774 y x)). Qed.
Lemma lem6218562 {_123774 : Type'} : (@ex ((_123774 -> _123774 -> _123774) -> _123774)) = (@ex ((_123774 -> _123774 -> _123774) -> _123774)).
Proof. exact (eq_refl (@ex ((_123774 -> _123774 -> _123774) -> _123774))). Qed.
Lemma lem6218563 {_123774 : Type'} (x : type402 _123774) : (term2257 _123774 x) = (term2274 _123774 x).
Proof. exact (MK_COMB (@lem6218562 _123774) (@lem6218561 _123774 x)). Qed.
Lemma lem6218564 {_123774 : Type'} (x : type402 _123774) : (term2239 _123774 x) = (term2274 _123774 x).
Proof. exact (TRANS (@lem6218536 _123774 x) (@lem6218563 _123774 x)). Qed.
Lemma lem6218565 {_123774 : Type'} : (term2241 _123774) = (term2275 _123774).
Proof. exact (fun_ext (fun x : type402 _123774 => @lem6218564 _123774 x)). Qed.
Lemma lem6218566 {_123774 : Type'} : (@ex ((_123774 -> _123774 -> _123774) -> _123774)) = (@ex ((_123774 -> _123774 -> _123774) -> _123774)).
Proof. exact (eq_refl (@ex ((_123774 -> _123774 -> _123774) -> _123774))). Qed.
Lemma lem6218567 {_123774 : Type'} : (term2242 _123774) = (term2276 _123774).
Proof. exact (MK_COMB (@lem6218566 _123774) (@lem6218565 _123774)). Qed.
Lemma lem6218568 {_123774 : Type'} : (term2223 _123774) = (term2276 _123774).
Proof. exact (TRANS (@lem6218512 _123774) (@lem6218567 _123774)). Qed.
Lemma lem6218569 {_123774 : Type'} : (term1992 _123774) = (term2276 _123774).
Proof. exact (TRANS (@lem6218488 _123774) (@lem6218568 _123774)). Qed.
Lemma lem6218570 {_123774 : Type'} : (term1968 _123774) = (term2276 _123774).
Proof. exact (TRANS (@lem6218019 _123774) (@lem6218569 _123774)). Qed.
Lemma lem6218571 {_123774 : Type'} : (term1759 _123774) = (term2276 _123774).
Proof. exact (TRANS (@lem6217992 _123774) (@lem6218570 _123774)). Qed.
Lemma lem6218572 {_123774 : Type'} (h1 : term1759 _123774) : term2276 _123774.
Proof. exact (EQ_MP (@lem6218571 _123774) (@lem6217825 _123774 h1)). Qed.
Lemma lem6218573 {_123774 : Type'} (x : type402 _123774) (h1 : term2274 _123774 x) : term2274 _123774 x.
Proof. exact (h1). Qed.
Lemma lem6218574 {_123774 : Type'} (y : type402 _123774) (x : type402 _123774) (h1 : term2272 _123774 y x) : term2272 _123774 y x.
Proof. exact (h1). Qed.
Lemma lem6218575 {_123774 : Type'} (y : type402 _123774) (z : type402 _123774) (x : type402 _123774) (h1 : term2269 _123774 y z x) : term2269 _123774 y z x.
Proof. exact (h1). Qed.
Lemma lem6218754 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6218755 {_123774 : Type'} (f : type403 _123774) (x : type1400 _123774) : (f x) = (@I ((_123774 -> _123774 -> _123774) -> Prop) f x).
Proof. exact (@lem6218754 (type1400 _123774) Prop f x). Qed.
Lemma lem6218757 {_123774 : Type'} (op : type1400 _123774) : (@monoidal _123774 op) = (@I ((_123774 -> _123774 -> _123774) -> Prop) (@monoidal _123774) op).
Proof. exact (@lem6218755 _123774 (@monoidal _123774) op). Qed.
Lemma lem6218992 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem6218993 {_123774 : Type'} : (@eq _123774) = (@eq _123774).
Proof. exact (eq_refl (@eq _123774)). Qed.
Lemma lem6218994 {_123774 : Type'} (op : type1400 _123774) : op = op.
Proof. exact (eq_refl op). Qed.
Lemma lem6218995 {_123774 : Type'} (op : type1400 _123774) : op = op.
Proof. exact (eq_refl op). Qed.
Lemma lem6219004 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6219005 (f : type1601) (x : nat) : (f x) = (@I (nat -> nat -> nat -> Prop) f x).
Proof. exact (@lem6219004 nat type1605 f x). Qed.
Lemma lem6219006 (m : nat) : (dotdot m) = (@I (nat -> nat -> nat -> Prop) dotdot m).
Proof. exact (@lem6219005 dotdot m). Qed.
Lemma lem6219007 (n : nat) : n = n.
Proof. exact (eq_refl n). Qed.
Lemma lem6219008 (m : nat) (n : nat) : (dotdot m n) = (@I (nat -> nat -> nat -> Prop) dotdot m n).
Proof. exact (MK_COMB (@lem6219006 m) (@lem6219007 n)). Qed.
Lemma lem6219010 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6219011 (f : type1605) (x : nat) : (f x) = (@I (nat -> nat -> Prop) f x).
Proof. exact (@lem6219010 nat (nat -> Prop) f x). Qed.
Lemma lem6219012 (m : nat) (n : nat) : (@I (nat -> nat -> nat -> Prop) dotdot m n) = (term2277 m n).
Proof. exact (@lem6219011 (@I (nat -> nat -> nat -> Prop) dotdot m) n). Qed.
Lemma lem6219014 (m : nat) (n : nat) : (dotdot m n) = (term2277 m n).
Proof. exact (TRANS (@lem6219008 m n) (@lem6219012 m n)). Qed.
Lemma lem6219021 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6219022 {_123774 : Type'} (f : type399 _123774) (x : type1400 _123774) : (f x) = (@I ((_123774 -> _123774 -> _123774) -> (nat -> _123774) -> nat -> _123774) f x).
Proof. exact (@lem6219021 (type1400 _123774) (type972 _123774) f x). Qed.
Lemma lem6219023 {_123774 : Type'} (_79041 : type399 _123774) (op : type1400 _123774) : (_79041 op) = (@I ((_123774 -> _123774 -> _123774) -> (nat -> _123774) -> nat -> _123774) _79041 op).
Proof. exact (@lem6219022 _123774 _79041 op). Qed.
Lemma lem6219024 {_123774 : Type'} (f : nat -> _123774) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem6219025 {_123774 : Type'} (_79041 : type399 _123774) (op : type1400 _123774) (f : nat -> _123774) : (_79041 op f) = (@I ((_123774 -> _123774 -> _123774) -> (nat -> _123774) -> nat -> _123774) _79041 op f).
Proof. exact (MK_COMB (@lem6219023 _123774 _79041 op) (@lem6219024 _123774 f)). Qed.
Lemma lem6219027 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6219028 {_123774 : Type'} (f : type972 _123774) (x : nat -> _123774) : (f x) = (@I ((nat -> _123774) -> nat -> _123774) f x).
Proof. exact (@lem6219027 (nat -> _123774) (nat -> _123774) f x). Qed.
Lemma lem6219029 {_123774 : Type'} (_79041 : type399 _123774) (op : type1400 _123774) (f : nat -> _123774) : (@I ((_123774 -> _123774 -> _123774) -> (nat -> _123774) -> nat -> _123774) _79041 op f) = (term2278 _123774 _79041 op f).
Proof. exact (@lem6219028 _123774 (@I ((_123774 -> _123774 -> _123774) -> (nat -> _123774) -> nat -> _123774) _79041 op) f). Qed.
Lemma lem6219031 {_123774 : Type'} (_79041 : type399 _123774) (op : type1400 _123774) (f : nat -> _123774) : (_79041 op f) = (term2278 _123774 _79041 op f).
Proof. exact (TRANS (@lem6219025 _123774 _79041 op f) (@lem6219029 _123774 _79041 op f)). Qed.
Lemma lem6219032 {_123774 : Type'} (op : type1400 _123774) : (@iterate _123774 nat op) = (@iterate _123774 nat op).
Proof. exact (eq_refl (@iterate _123774 nat op)). Qed.
Lemma lem6219033 {_123774 : Type'} (op : type1400 _123774) (m : nat) (n : nat) : (term1818 _123774 op m n) = (term2279 _123774 op m n).
Proof. exact (MK_COMB (@lem6219032 _123774 op) (@lem6219014 m n)). Qed.
Lemma lem6219034 {_123774 : Type'} (m : nat) (n : nat) (_79041 : type399 _123774) (op : type1400 _123774) (f : nat -> _123774) : (term1819 _123774 m n _79041 op f) = (term2280 _123774 m n _79041 op f).
Proof. exact (MK_COMB (@lem6219033 _123774 op m n) (@lem6219031 _123774 _79041 op f)). Qed.
Lemma lem6219036 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6219037 {_123774 : Type'} (f : type400 _123774) (x : type1400 _123774) : (f x) = (@I ((_123774 -> _123774 -> _123774) -> (nat -> Prop) -> (nat -> _123774) -> _123774) f x).
Proof. exact (@lem6219036 (type1400 _123774) (type983 _123774) f x). Qed.
Lemma lem6219038 {_123774 : Type'} (op : type1400 _123774) : (@iterate _123774 nat op) = (@I ((_123774 -> _123774 -> _123774) -> (nat -> Prop) -> (nat -> _123774) -> _123774) (@iterate _123774 nat) op).
Proof. exact (@lem6219037 _123774 (@iterate _123774 nat) op). Qed.
Lemma lem6219039 (m : nat) (n : nat) : (term2277 m n) = (term2277 m n).
Proof. exact (eq_refl (term2277 m n)). Qed.
Lemma lem6219040 {_123774 : Type'} (op : type1400 _123774) (m : nat) (n : nat) : (term2279 _123774 op m n) = (term2281 _123774 op m n).
Proof. exact (MK_COMB (@lem6219038 _123774 op) (@lem6219039 m n)). Qed.
Lemma lem6219042 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6219043 {_123774 : Type'} (f : type983 _123774) (x : nat -> Prop) : (f x) = (@I ((nat -> Prop) -> (nat -> _123774) -> _123774) f x).
Proof. exact (@lem6219042 (nat -> Prop) (type975 _123774) f x). Qed.
Lemma lem6219044 {_123774 : Type'} (op : type1400 _123774) (m : nat) (n : nat) : (term2281 _123774 op m n) = (term2282 _123774 op m n).
Proof. exact (@lem6219043 _123774 (@I ((_123774 -> _123774 -> _123774) -> (nat -> Prop) -> (nat -> _123774) -> _123774) (@iterate _123774 nat) op) (term2277 m n)). Qed.
Lemma lem6219045 {_123774 : Type'} (op : type1400 _123774) (m : nat) (n : nat) : (term2279 _123774 op m n) = (term2282 _123774 op m n).
Proof. exact (TRANS (@lem6219040 _123774 op m n) (@lem6219044 _123774 op m n)). Qed.
Lemma lem6219046 {_123774 : Type'} (_79041 : type399 _123774) (op : type1400 _123774) (f : nat -> _123774) : (term2278 _123774 _79041 op f) = (term2278 _123774 _79041 op f).
Proof. exact (eq_refl (term2278 _123774 _79041 op f)). Qed.
Lemma lem6219047 {_123774 : Type'} (m : nat) (n : nat) (_79041 : type399 _123774) (op : type1400 _123774) (f : nat -> _123774) : (term2280 _123774 m n _79041 op f) = (term2283 _123774 m n _79041 op f).
Proof. exact (MK_COMB (@lem6219045 _123774 op m n) (@lem6219046 _123774 _79041 op f)). Qed.
Lemma lem6219049 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6219050 {_123774 : Type'} (f : type975 _123774) (x : nat -> _123774) : (f x) = (@I ((nat -> _123774) -> _123774) f x).
Proof. exact (@lem6219049 (nat -> _123774) _123774 f x). Qed.
Lemma lem6219051 {_123774 : Type'} (m : nat) (n : nat) (_79041 : type399 _123774) (op : type1400 _123774) (f : nat -> _123774) : (term2283 _123774 m n _79041 op f) = (term2284 _123774 m n _79041 op f).
Proof. exact (@lem6219050 _123774 (term2282 _123774 op m n) (term2278 _123774 _79041 op f)). Qed.
Lemma lem6219052 {_123774 : Type'} (m : nat) (n : nat) (_79041 : type399 _123774) (op : type1400 _123774) (f : nat -> _123774) : (term2280 _123774 m n _79041 op f) = (term2284 _123774 m n _79041 op f).
Proof. exact (TRANS (@lem6219047 _123774 m n _79041 op f) (@lem6219051 _123774 m n _79041 op f)). Qed.
Lemma lem6219053 {_123774 : Type'} (m : nat) (n : nat) (_79041 : type399 _123774) (op : type1400 _123774) (f : nat -> _123774) : (term1819 _123774 m n _79041 op f) = (term2284 _123774 m n _79041 op f).
Proof. exact (TRANS (@lem6219034 _123774 m n _79041 op f) (@lem6219052 _123774 m n _79041 op f)). Qed.
Lemma lem6219054 {_123774 : Type'} (f : nat -> _123774) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem6219055 : S = S.
Proof. exact (eq_refl S). Qed.
Lemma lem6219056 : Nat.add = Nat.add.
Proof. exact (eq_refl Nat.add). Qed.
Lemma lem6219057 : Nat.mul = Nat.mul.
Proof. exact (eq_refl Nat.mul). Qed.
Lemma lem6219058 : NUMERAL = NUMERAL.
Proof. exact (eq_refl NUMERAL). Qed.
Lemma lem6219059 : BIT0 = BIT0.
Proof. exact (eq_refl BIT0). Qed.
Lemma lem6219064 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6219065 (f : nat -> nat) (x : nat) : (f x) = (@I (nat -> nat) f x).
Proof. exact (@lem6219064 nat nat f x). Qed.
Lemma lem6219067 : (BIT1 0) = (@I (nat -> nat) BIT1 0).
Proof. exact (@lem6219065 BIT1 0). Qed.
Lemma lem6219068 : term20 = term2285.
Proof. exact (MK_COMB (@lem6219059) (@lem6219067)). Qed.
Lemma lem6219070 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6219071 (f : nat -> nat) (x : nat) : (f x) = (@I (nat -> nat) f x).
Proof. exact (@lem6219070 nat nat f x). Qed.
Lemma lem6219072 : term2285 = term2286.
Proof. exact (@lem6219071 BIT0 (@I (nat -> nat) BIT1 0)). Qed.
Lemma lem6219073 : term20 = term2286.
Proof. exact (TRANS (@lem6219068) (@lem6219072)). Qed.
Lemma lem6219074 : term22 = term2287.
Proof. exact (MK_COMB (@lem6219058) (@lem6219073)). Qed.
Lemma lem6219076 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6219077 (f : nat -> nat) (x : nat) : (f x) = (@I (nat -> nat) f x).
Proof. exact (@lem6219076 nat nat f x). Qed.
Lemma lem6219078 : term2287 = term2288.
Proof. exact (@lem6219077 NUMERAL term2286). Qed.
Lemma lem6219079 : term22 = term2288.
Proof. exact (TRANS (@lem6219074) (@lem6219078)). Qed.
Lemma lem6219080 (n : nat) : n = n.
Proof. exact (eq_refl n). Qed.
Lemma lem6219081 : term1 = term2289.
Proof. exact (MK_COMB (@lem6219057) (@lem6219079)). Qed.
Lemma lem6219082 (n : nat) : (term18 n) = (term2290 n).
Proof. exact (MK_COMB (@lem6219081) (@lem6219080 n)). Qed.
Lemma lem6219084 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6219085 (f : type1606) (x : nat) : (f x) = (@I (nat -> nat -> nat) f x).
Proof. exact (@lem6219084 nat (nat -> nat) f x). Qed.
Lemma lem6219086 : term2289 = term2291.
Proof. exact (@lem6219085 Nat.mul term2288). Qed.
Lemma lem6219087 (n : nat) : n = n.
Proof. exact (eq_refl n). Qed.
Lemma lem6219088 (n : nat) : (term2290 n) = (term2292 n).
Proof. exact (MK_COMB (@lem6219086) (@lem6219087 n)). Qed.
Lemma lem6219090 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6219091 (f : nat -> nat) (x : nat) : (f x) = (@I (nat -> nat) f x).
Proof. exact (@lem6219090 nat nat f x). Qed.
Lemma lem6219092 (n : nat) : (term2292 n) = (term2293 n).
Proof. exact (@lem6219091 term2291 n). Qed.
Lemma lem6219093 (n : nat) : (term2290 n) = (term2293 n).
Proof. exact (TRANS (@lem6219088 n) (@lem6219092 n)). Qed.
Lemma lem6219094 (n : nat) : (term18 n) = (term2293 n).
Proof. exact (TRANS (@lem6219082 n) (@lem6219093 n)). Qed.
Lemma lem6219095 : NUMERAL = NUMERAL.
Proof. exact (eq_refl NUMERAL). Qed.
Lemma lem6219100 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6219101 (f : nat -> nat) (x : nat) : (f x) = (@I (nat -> nat) f x).
Proof. exact (@lem6219100 nat nat f x). Qed.
Lemma lem6219103 : (BIT1 0) = (@I (nat -> nat) BIT1 0).
Proof. exact (@lem6219101 BIT1 0). Qed.
Lemma lem6219104 : term6 = term2294.
Proof. exact (MK_COMB (@lem6219095) (@lem6219103)). Qed.
Lemma lem6219106 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6219107 (f : nat -> nat) (x : nat) : (f x) = (@I (nat -> nat) f x).
Proof. exact (@lem6219106 nat nat f x). Qed.
Lemma lem6219108 : term2294 = term2295.
Proof. exact (@lem6219107 NUMERAL (@I (nat -> nat) BIT1 0)). Qed.
Lemma lem6219109 : term6 = term2295.
Proof. exact (TRANS (@lem6219104) (@lem6219108)). Qed.
Lemma lem6219110 (n : nat) : (term23 n) = (term2296 n).
Proof. exact (MK_COMB (@lem6219056) (@lem6219094 n)). Qed.
Lemma lem6219111 (n : nat) : (term13 n) = (term2297 n).
Proof. exact (MK_COMB (@lem6219110 n) (@lem6219109)). Qed.
Lemma lem6219113 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6219114 (f : type1606) (x : nat) : (f x) = (@I (nat -> nat -> nat) f x).
Proof. exact (@lem6219113 nat (nat -> nat) f x). Qed.
Lemma lem6219115 (n : nat) : (term2296 n) = (term2298 n).
Proof. exact (@lem6219114 Nat.add (term2293 n)). Qed.
Lemma lem6219116 : term2295 = term2295.
Proof. exact (eq_refl term2295). Qed.
Lemma lem6219117 (n : nat) : (term2297 n) = (term2299 n).
Proof. exact (MK_COMB (@lem6219115 n) (@lem6219116)). Qed.
Lemma lem6219119 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6219120 (f : nat -> nat) (x : nat) : (f x) = (@I (nat -> nat) f x).
Proof. exact (@lem6219119 nat nat f x). Qed.
Lemma lem6219121 (n : nat) : (term2299 n) = (term2300 n).
Proof. exact (@lem6219120 (term2298 n) term2295). Qed.
Lemma lem6219122 (n : nat) : (term2297 n) = (term2300 n).
Proof. exact (TRANS (@lem6219117 n) (@lem6219121 n)). Qed.
Lemma lem6219123 (n : nat) : (term13 n) = (term2300 n).
Proof. exact (TRANS (@lem6219111 n) (@lem6219122 n)). Qed.
Lemma lem6219124 (n : nat) : (term11 n) = (term2301 n).
Proof. exact (MK_COMB (@lem6219055) (@lem6219123 n)). Qed.
Lemma lem6219126 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6219127 (f : nat -> nat) (x : nat) : (f x) = (@I (nat -> nat) f x).
Proof. exact (@lem6219126 nat nat f x). Qed.
Lemma lem6219128 (n : nat) : (term2301 n) = (term2302 n).
Proof. exact (@lem6219127 S (term2300 n)). Qed.
Lemma lem6219129 (n : nat) : (term11 n) = (term2302 n).
Proof. exact (TRANS (@lem6219124 n) (@lem6219128 n)). Qed.
Lemma lem6219130 {_123774 : Type'} (f : nat -> _123774) (n : nat) : (term1654 _123774 f n) = (term2303 _123774 f n).
Proof. exact (MK_COMB (@lem6219054 _123774 f) (@lem6219129 n)). Qed.
Lemma lem6219132 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6219133 {_123774 : Type'} (f : nat -> _123774) (x : nat) : (f x) = (@I (nat -> _123774) f x).
Proof. exact (@lem6219132 nat _123774 f x). Qed.
Lemma lem6219134 {_123774 : Type'} (f : nat -> _123774) (n : nat) : (term2303 _123774 f n) = (term2304 _123774 f n).
Proof. exact (@lem6219133 _123774 f (term2302 n)). Qed.
Lemma lem6219135 {_123774 : Type'} (f : nat -> _123774) (n : nat) : (term1654 _123774 f n) = (term2304 _123774 f n).
Proof. exact (TRANS (@lem6219130 _123774 f n) (@lem6219134 _123774 f n)). Qed.
Lemma lem6219136 {_123774 : Type'} (m : nat) (n : nat) (_79041 : type399 _123774) (op : type1400 _123774) (f : nat -> _123774) : (term1820 _123774 m n _79041 op f) = (term2305 _123774 m n _79041 op f).
Proof. exact (MK_COMB (@lem6218995 _123774 op) (@lem6219053 _123774 m n _79041 op f)). Qed.
Lemma lem6219137 {_123774 : Type'} (m : nat) (_79041 : type399 _123774) (op : type1400 _123774) (f : nat -> _123774) (n : nat) : (term1822 _123774 m _79041 op f n) = (term2306 _123774 m _79041 op f n).
Proof. exact (MK_COMB (@lem6219136 _123774 m n _79041 op f) (@lem6219135 _123774 f n)). Qed.
Lemma lem6219139 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6219140 {_123774 : Type'} (f : type1400 _123774) (x : _123774) : (f x) = (@I (_123774 -> _123774 -> _123774) f x).
Proof. exact (@lem6219139 _123774 (_123774 -> _123774) f x). Qed.
Lemma lem6219141 {_123774 : Type'} (m : nat) (n : nat) (_79041 : type399 _123774) (op : type1400 _123774) (f : nat -> _123774) : (term2305 _123774 m n _79041 op f) = (term2307 _123774 m n _79041 op f).
Proof. exact (@lem6219140 _123774 op (term2284 _123774 m n _79041 op f)). Qed.
Lemma lem6219142 {_123774 : Type'} (f : nat -> _123774) (n : nat) : (term2304 _123774 f n) = (term2304 _123774 f n).
Proof. exact (eq_refl (term2304 _123774 f n)). Qed.
Lemma lem6219143 {_123774 : Type'} (m : nat) (_79041 : type399 _123774) (op : type1400 _123774) (f : nat -> _123774) (n : nat) : (term2306 _123774 m _79041 op f n) = (term2308 _123774 m _79041 op f n).
Proof. exact (MK_COMB (@lem6219141 _123774 m n _79041 op f) (@lem6219142 _123774 f n)). Qed.
Lemma lem6219145 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6219146 {_123774 : Type'} (f : _123774 -> _123774) (x : _123774) : (f x) = (@I (_123774 -> _123774) f x).
Proof. exact (@lem6219145 _123774 _123774 f x). Qed.
Lemma lem6219147 {_123774 : Type'} (m : nat) (_79041 : type399 _123774) (op : type1400 _123774) (f : nat -> _123774) (n : nat) : (term2308 _123774 m _79041 op f n) = (term2309 _123774 m _79041 op f n).
Proof. exact (@lem6219146 _123774 (term2307 _123774 m n _79041 op f) (term2304 _123774 f n)). Qed.
Lemma lem6219148 {_123774 : Type'} (m : nat) (_79041 : type399 _123774) (op : type1400 _123774) (f : nat -> _123774) (n : nat) : (term2306 _123774 m _79041 op f n) = (term2309 _123774 m _79041 op f n).
Proof. exact (TRANS (@lem6219143 _123774 m _79041 op f n) (@lem6219147 _123774 m _79041 op f n)). Qed.
Lemma lem6219149 {_123774 : Type'} (m : nat) (_79041 : type399 _123774) (op : type1400 _123774) (f : nat -> _123774) (n : nat) : (term1822 _123774 m _79041 op f n) = (term2309 _123774 m _79041 op f n).
Proof. exact (TRANS (@lem6219137 _123774 m _79041 op f n) (@lem6219148 _123774 m _79041 op f n)). Qed.
Lemma lem6219150 {_123774 : Type'} (f : nat -> _123774) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem6219151 : S = S.
Proof. exact (eq_refl S). Qed.
Lemma lem6219152 : S = S.
Proof. exact (eq_refl S). Qed.
Lemma lem6219153 : Nat.add = Nat.add.
Proof. exact (eq_refl Nat.add). Qed.
Lemma lem6219154 : Nat.mul = Nat.mul.
Proof. exact (eq_refl Nat.mul). Qed.
Lemma lem6219155 : NUMERAL = NUMERAL.
Proof. exact (eq_refl NUMERAL). Qed.
Lemma lem6219156 : BIT0 = BIT0.
Proof. exact (eq_refl BIT0). Qed.
Lemma lem6219161 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6219162 (f : nat -> nat) (x : nat) : (f x) = (@I (nat -> nat) f x).
Proof. exact (@lem6219161 nat nat f x). Qed.
Lemma lem6219164 : (BIT1 0) = (@I (nat -> nat) BIT1 0).
Proof. exact (@lem6219162 BIT1 0). Qed.
Lemma lem6219165 : term20 = term2285.
Proof. exact (MK_COMB (@lem6219156) (@lem6219164)). Qed.
Lemma lem6219167 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6219168 (f : nat -> nat) (x : nat) : (f x) = (@I (nat -> nat) f x).
Proof. exact (@lem6219167 nat nat f x). Qed.
Lemma lem6219169 : term2285 = term2286.
Proof. exact (@lem6219168 BIT0 (@I (nat -> nat) BIT1 0)). Qed.
Lemma lem6219170 : term20 = term2286.
Proof. exact (TRANS (@lem6219165) (@lem6219169)). Qed.
Lemma lem6219171 : term22 = term2287.
Proof. exact (MK_COMB (@lem6219155) (@lem6219170)). Qed.
Lemma lem6219173 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6219174 (f : nat -> nat) (x : nat) : (f x) = (@I (nat -> nat) f x).
Proof. exact (@lem6219173 nat nat f x). Qed.
Lemma lem6219175 : term2287 = term2288.
Proof. exact (@lem6219174 NUMERAL term2286). Qed.
Lemma lem6219176 : term22 = term2288.
Proof. exact (TRANS (@lem6219171) (@lem6219175)). Qed.
Lemma lem6219177 (n : nat) : n = n.
Proof. exact (eq_refl n). Qed.
Lemma lem6219178 : term1 = term2289.
Proof. exact (MK_COMB (@lem6219154) (@lem6219176)). Qed.
Lemma lem6219179 (n : nat) : (term18 n) = (term2290 n).
Proof. exact (MK_COMB (@lem6219178) (@lem6219177 n)). Qed.
Lemma lem6219181 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6219182 (f : type1606) (x : nat) : (f x) = (@I (nat -> nat -> nat) f x).
Proof. exact (@lem6219181 nat (nat -> nat) f x). Qed.
Lemma lem6219183 : term2289 = term2291.
Proof. exact (@lem6219182 Nat.mul term2288). Qed.
Lemma lem6219184 (n : nat) : n = n.
Proof. exact (eq_refl n). Qed.
Lemma lem6219185 (n : nat) : (term2290 n) = (term2292 n).
Proof. exact (MK_COMB (@lem6219183) (@lem6219184 n)). Qed.
Lemma lem6219187 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6219188 (f : nat -> nat) (x : nat) : (f x) = (@I (nat -> nat) f x).
Proof. exact (@lem6219187 nat nat f x). Qed.
Lemma lem6219189 (n : nat) : (term2292 n) = (term2293 n).
Proof. exact (@lem6219188 term2291 n). Qed.
Lemma lem6219190 (n : nat) : (term2290 n) = (term2293 n).
Proof. exact (TRANS (@lem6219185 n) (@lem6219189 n)). Qed.
Lemma lem6219191 (n : nat) : (term18 n) = (term2293 n).
Proof. exact (TRANS (@lem6219179 n) (@lem6219190 n)). Qed.
Lemma lem6219192 : NUMERAL = NUMERAL.
Proof. exact (eq_refl NUMERAL). Qed.
Lemma lem6219197 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6219198 (f : nat -> nat) (x : nat) : (f x) = (@I (nat -> nat) f x).
Proof. exact (@lem6219197 nat nat f x). Qed.
Lemma lem6219200 : (BIT1 0) = (@I (nat -> nat) BIT1 0).
Proof. exact (@lem6219198 BIT1 0). Qed.
Lemma lem6219201 : term6 = term2294.
Proof. exact (MK_COMB (@lem6219192) (@lem6219200)). Qed.
Lemma lem6219203 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6219204 (f : nat -> nat) (x : nat) : (f x) = (@I (nat -> nat) f x).
Proof. exact (@lem6219203 nat nat f x). Qed.
Lemma lem6219205 : term2294 = term2295.
Proof. exact (@lem6219204 NUMERAL (@I (nat -> nat) BIT1 0)). Qed.
Lemma lem6219206 : term6 = term2295.
Proof. exact (TRANS (@lem6219201) (@lem6219205)). Qed.
Lemma lem6219207 (n : nat) : (term23 n) = (term2296 n).
Proof. exact (MK_COMB (@lem6219153) (@lem6219191 n)). Qed.
Lemma lem6219208 (n : nat) : (term13 n) = (term2297 n).
Proof. exact (MK_COMB (@lem6219207 n) (@lem6219206)). Qed.
Lemma lem6219210 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6219211 (f : type1606) (x : nat) : (f x) = (@I (nat -> nat -> nat) f x).
Proof. exact (@lem6219210 nat (nat -> nat) f x). Qed.
Lemma lem6219212 (n : nat) : (term2296 n) = (term2298 n).
Proof. exact (@lem6219211 Nat.add (term2293 n)). Qed.
Lemma lem6219213 : term2295 = term2295.
Proof. exact (eq_refl term2295). Qed.
Lemma lem6219214 (n : nat) : (term2297 n) = (term2299 n).
Proof. exact (MK_COMB (@lem6219212 n) (@lem6219213)). Qed.
Lemma lem6219216 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6219217 (f : nat -> nat) (x : nat) : (f x) = (@I (nat -> nat) f x).
Proof. exact (@lem6219216 nat nat f x). Qed.
Lemma lem6219218 (n : nat) : (term2299 n) = (term2300 n).
Proof. exact (@lem6219217 (term2298 n) term2295). Qed.
Lemma lem6219219 (n : nat) : (term2297 n) = (term2300 n).
Proof. exact (TRANS (@lem6219214 n) (@lem6219218 n)). Qed.
Lemma lem6219220 (n : nat) : (term13 n) = (term2300 n).
Proof. exact (TRANS (@lem6219208 n) (@lem6219219 n)). Qed.
Lemma lem6219221 (n : nat) : (term11 n) = (term2301 n).
Proof. exact (MK_COMB (@lem6219152) (@lem6219220 n)). Qed.
Lemma lem6219223 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6219224 (f : nat -> nat) (x : nat) : (f x) = (@I (nat -> nat) f x).
Proof. exact (@lem6219223 nat nat f x). Qed.
Lemma lem6219225 (n : nat) : (term2301 n) = (term2302 n).
Proof. exact (@lem6219224 S (term2300 n)). Qed.
Lemma lem6219226 (n : nat) : (term11 n) = (term2302 n).
Proof. exact (TRANS (@lem6219221 n) (@lem6219225 n)). Qed.
Lemma lem6219227 (n : nat) : (term14 n) = (term2310 n).
Proof. exact (MK_COMB (@lem6219151) (@lem6219226 n)). Qed.
Lemma lem6219229 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6219230 (f : nat -> nat) (x : nat) : (f x) = (@I (nat -> nat) f x).
Proof. exact (@lem6219229 nat nat f x). Qed.
Lemma lem6219231 (n : nat) : (term2310 n) = (term2311 n).
Proof. exact (@lem6219230 S (term2302 n)). Qed.
Lemma lem6219232 (n : nat) : (term14 n) = (term2311 n).
Proof. exact (TRANS (@lem6219227 n) (@lem6219231 n)). Qed.
Lemma lem6219233 {_123774 : Type'} (f : nat -> _123774) (n : nat) : (term1664 _123774 f n) = (term2312 _123774 f n).
Proof. exact (MK_COMB (@lem6219150 _123774 f) (@lem6219232 n)). Qed.
Lemma lem6219235 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6219236 {_123774 : Type'} (f : nat -> _123774) (x : nat) : (f x) = (@I (nat -> _123774) f x).
Proof. exact (@lem6219235 nat _123774 f x). Qed.
Lemma lem6219237 {_123774 : Type'} (f : nat -> _123774) (n : nat) : (term2312 _123774 f n) = (term2313 _123774 f n).
Proof. exact (@lem6219236 _123774 f (term2311 n)). Qed.
Lemma lem6219238 {_123774 : Type'} (f : nat -> _123774) (n : nat) : (term1664 _123774 f n) = (term2313 _123774 f n).
Proof. exact (TRANS (@lem6219233 _123774 f n) (@lem6219237 _123774 f n)). Qed.
Lemma lem6219239 {_123774 : Type'} (m : nat) (_79041 : type399 _123774) (op : type1400 _123774) (f : nat -> _123774) (n : nat) : (term1823 _123774 m _79041 op f n) = (term2314 _123774 m _79041 op f n).
Proof. exact (MK_COMB (@lem6218994 _123774 op) (@lem6219149 _123774 m _79041 op f n)). Qed.
Lemma lem6219240 {_123774 : Type'} (m : nat) (_79041 : type399 _123774) (op : type1400 _123774) (f : nat -> _123774) (n : nat) : (term1824 _123774 m _79041 op f n) = (term2315 _123774 m _79041 op f n).
Proof. exact (MK_COMB (@lem6219239 _123774 m _79041 op f n) (@lem6219238 _123774 f n)). Qed.
Lemma lem6219242 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6219243 {_123774 : Type'} (f : type1400 _123774) (x : _123774) : (f x) = (@I (_123774 -> _123774 -> _123774) f x).
Proof. exact (@lem6219242 _123774 (_123774 -> _123774) f x). Qed.
Lemma lem6219244 {_123774 : Type'} (m : nat) (_79041 : type399 _123774) (op : type1400 _123774) (f : nat -> _123774) (n : nat) : (term2314 _123774 m _79041 op f n) = (term2316 _123774 m _79041 op f n).
Proof. exact (@lem6219243 _123774 op (term2309 _123774 m _79041 op f n)). Qed.
Lemma lem6219245 {_123774 : Type'} (f : nat -> _123774) (n : nat) : (term2313 _123774 f n) = (term2313 _123774 f n).
Proof. exact (eq_refl (term2313 _123774 f n)). Qed.
Lemma lem6219246 {_123774 : Type'} (m : nat) (_79041 : type399 _123774) (op : type1400 _123774) (f : nat -> _123774) (n : nat) : (term2315 _123774 m _79041 op f n) = (term2317 _123774 m _79041 op f n).
Proof. exact (MK_COMB (@lem6219244 _123774 m _79041 op f n) (@lem6219245 _123774 f n)). Qed.
Lemma lem6219248 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6219249 {_123774 : Type'} (f : _123774 -> _123774) (x : _123774) : (f x) = (@I (_123774 -> _123774) f x).
Proof. exact (@lem6219248 _123774 _123774 f x). Qed.
Lemma lem6219250 {_123774 : Type'} (m : nat) (_79041 : type399 _123774) (op : type1400 _123774) (f : nat -> _123774) (n : nat) : (term2317 _123774 m _79041 op f n) = (term2318 _123774 m _79041 op f n).
Proof. exact (@lem6219249 _123774 (term2316 _123774 m _79041 op f n) (term2313 _123774 f n)). Qed.
Lemma lem6219251 {_123774 : Type'} (m : nat) (_79041 : type399 _123774) (op : type1400 _123774) (f : nat -> _123774) (n : nat) : (term2315 _123774 m _79041 op f n) = (term2318 _123774 m _79041 op f n).
Proof. exact (TRANS (@lem6219246 _123774 m _79041 op f n) (@lem6219250 _123774 m _79041 op f n)). Qed.
Lemma lem6219252 {_123774 : Type'} (m : nat) (_79041 : type399 _123774) (op : type1400 _123774) (f : nat -> _123774) (n : nat) : (term1824 _123774 m _79041 op f n) = (term2318 _123774 m _79041 op f n).
Proof. exact (TRANS (@lem6219240 _123774 m _79041 op f n) (@lem6219251 _123774 m _79041 op f n)). Qed.
Lemma lem6219253 {_123774 : Type'} (op : type1400 _123774) : op = op.
Proof. exact (eq_refl op). Qed.
Lemma lem6219262 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6219263 (f : type1601) (x : nat) : (f x) = (@I (nat -> nat -> nat -> Prop) f x).
Proof. exact (@lem6219262 nat type1605 f x). Qed.
Lemma lem6219264 (m : nat) : (dotdot m) = (@I (nat -> nat -> nat -> Prop) dotdot m).
Proof. exact (@lem6219263 dotdot m). Qed.
Lemma lem6219265 (n : nat) : n = n.
Proof. exact (eq_refl n). Qed.
Lemma lem6219266 (m : nat) (n : nat) : (dotdot m n) = (@I (nat -> nat -> nat -> Prop) dotdot m n).
Proof. exact (MK_COMB (@lem6219264 m) (@lem6219265 n)). Qed.
Lemma lem6219268 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6219269 (f : type1605) (x : nat) : (f x) = (@I (nat -> nat -> Prop) f x).
Proof. exact (@lem6219268 nat (nat -> Prop) f x). Qed.
Lemma lem6219270 (m : nat) (n : nat) : (@I (nat -> nat -> nat -> Prop) dotdot m n) = (term2277 m n).
Proof. exact (@lem6219269 (@I (nat -> nat -> nat -> Prop) dotdot m) n). Qed.
Lemma lem6219272 (m : nat) (n : nat) : (dotdot m n) = (term2277 m n).
Proof. exact (TRANS (@lem6219266 m n) (@lem6219270 m n)). Qed.
Lemma lem6219279 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6219280 {_123774 : Type'} (f : type399 _123774) (x : type1400 _123774) : (f x) = (@I ((_123774 -> _123774 -> _123774) -> (nat -> _123774) -> nat -> _123774) f x).
Proof. exact (@lem6219279 (type1400 _123774) (type972 _123774) f x). Qed.
Lemma lem6219281 {_123774 : Type'} (_79041 : type399 _123774) (op : type1400 _123774) : (_79041 op) = (@I ((_123774 -> _123774 -> _123774) -> (nat -> _123774) -> nat -> _123774) _79041 op).
Proof. exact (@lem6219280 _123774 _79041 op). Qed.
Lemma lem6219282 {_123774 : Type'} (f : nat -> _123774) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem6219283 {_123774 : Type'} (_79041 : type399 _123774) (op : type1400 _123774) (f : nat -> _123774) : (_79041 op f) = (@I ((_123774 -> _123774 -> _123774) -> (nat -> _123774) -> nat -> _123774) _79041 op f).
Proof. exact (MK_COMB (@lem6219281 _123774 _79041 op) (@lem6219282 _123774 f)). Qed.
Lemma lem6219285 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6219286 {_123774 : Type'} (f : type972 _123774) (x : nat -> _123774) : (f x) = (@I ((nat -> _123774) -> nat -> _123774) f x).
Proof. exact (@lem6219285 (nat -> _123774) (nat -> _123774) f x). Qed.
Lemma lem6219287 {_123774 : Type'} (_79041 : type399 _123774) (op : type1400 _123774) (f : nat -> _123774) : (@I ((_123774 -> _123774 -> _123774) -> (nat -> _123774) -> nat -> _123774) _79041 op f) = (term2278 _123774 _79041 op f).
Proof. exact (@lem6219286 _123774 (@I ((_123774 -> _123774 -> _123774) -> (nat -> _123774) -> nat -> _123774) _79041 op) f). Qed.
Lemma lem6219289 {_123774 : Type'} (_79041 : type399 _123774) (op : type1400 _123774) (f : nat -> _123774) : (_79041 op f) = (term2278 _123774 _79041 op f).
Proof. exact (TRANS (@lem6219283 _123774 _79041 op f) (@lem6219287 _123774 _79041 op f)). Qed.
Lemma lem6219290 {_123774 : Type'} (op : type1400 _123774) : (@iterate _123774 nat op) = (@iterate _123774 nat op).
Proof. exact (eq_refl (@iterate _123774 nat op)). Qed.
Lemma lem6219291 {_123774 : Type'} (op : type1400 _123774) (m : nat) (n : nat) : (term1818 _123774 op m n) = (term2279 _123774 op m n).
Proof. exact (MK_COMB (@lem6219290 _123774 op) (@lem6219272 m n)). Qed.
Lemma lem6219292 {_123774 : Type'} (m : nat) (n : nat) (_79041 : type399 _123774) (op : type1400 _123774) (f : nat -> _123774) : (term1819 _123774 m n _79041 op f) = (term2280 _123774 m n _79041 op f).
Proof. exact (MK_COMB (@lem6219291 _123774 op m n) (@lem6219289 _123774 _79041 op f)). Qed.
Lemma lem6219294 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6219295 {_123774 : Type'} (f : type400 _123774) (x : type1400 _123774) : (f x) = (@I ((_123774 -> _123774 -> _123774) -> (nat -> Prop) -> (nat -> _123774) -> _123774) f x).
Proof. exact (@lem6219294 (type1400 _123774) (type983 _123774) f x). Qed.
Lemma lem6219296 {_123774 : Type'} (op : type1400 _123774) : (@iterate _123774 nat op) = (@I ((_123774 -> _123774 -> _123774) -> (nat -> Prop) -> (nat -> _123774) -> _123774) (@iterate _123774 nat) op).
Proof. exact (@lem6219295 _123774 (@iterate _123774 nat) op). Qed.
Lemma lem6219297 (m : nat) (n : nat) : (term2277 m n) = (term2277 m n).
Proof. exact (eq_refl (term2277 m n)). Qed.
Lemma lem6219298 {_123774 : Type'} (op : type1400 _123774) (m : nat) (n : nat) : (term2279 _123774 op m n) = (term2281 _123774 op m n).
Proof. exact (MK_COMB (@lem6219296 _123774 op) (@lem6219297 m n)). Qed.
Lemma lem6219300 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6219301 {_123774 : Type'} (f : type983 _123774) (x : nat -> Prop) : (f x) = (@I ((nat -> Prop) -> (nat -> _123774) -> _123774) f x).
Proof. exact (@lem6219300 (nat -> Prop) (type975 _123774) f x). Qed.
Lemma lem6219302 {_123774 : Type'} (op : type1400 _123774) (m : nat) (n : nat) : (term2281 _123774 op m n) = (term2282 _123774 op m n).
Proof. exact (@lem6219301 _123774 (@I ((_123774 -> _123774 -> _123774) -> (nat -> Prop) -> (nat -> _123774) -> _123774) (@iterate _123774 nat) op) (term2277 m n)). Qed.
Lemma lem6219303 {_123774 : Type'} (op : type1400 _123774) (m : nat) (n : nat) : (term2279 _123774 op m n) = (term2282 _123774 op m n).
Proof. exact (TRANS (@lem6219298 _123774 op m n) (@lem6219302 _123774 op m n)). Qed.
Lemma lem6219304 {_123774 : Type'} (_79041 : type399 _123774) (op : type1400 _123774) (f : nat -> _123774) : (term2278 _123774 _79041 op f) = (term2278 _123774 _79041 op f).
Proof. exact (eq_refl (term2278 _123774 _79041 op f)). Qed.
Lemma lem6219305 {_123774 : Type'} (m : nat) (n : nat) (_79041 : type399 _123774) (op : type1400 _123774) (f : nat -> _123774) : (term2280 _123774 m n _79041 op f) = (term2283 _123774 m n _79041 op f).
Proof. exact (MK_COMB (@lem6219303 _123774 op m n) (@lem6219304 _123774 _79041 op f)). Qed.
Lemma lem6219307 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6219308 {_123774 : Type'} (f : type975 _123774) (x : nat -> _123774) : (f x) = (@I ((nat -> _123774) -> _123774) f x).
Proof. exact (@lem6219307 (nat -> _123774) _123774 f x). Qed.
Lemma lem6219309 {_123774 : Type'} (m : nat) (n : nat) (_79041 : type399 _123774) (op : type1400 _123774) (f : nat -> _123774) : (term2283 _123774 m n _79041 op f) = (term2284 _123774 m n _79041 op f).
Proof. exact (@lem6219308 _123774 (term2282 _123774 op m n) (term2278 _123774 _79041 op f)). Qed.
Lemma lem6219310 {_123774 : Type'} (m : nat) (n : nat) (_79041 : type399 _123774) (op : type1400 _123774) (f : nat -> _123774) : (term2280 _123774 m n _79041 op f) = (term2284 _123774 m n _79041 op f).
Proof. exact (TRANS (@lem6219305 _123774 m n _79041 op f) (@lem6219309 _123774 m n _79041 op f)). Qed.
Lemma lem6219311 {_123774 : Type'} (m : nat) (n : nat) (_79041 : type399 _123774) (op : type1400 _123774) (f : nat -> _123774) : (term1819 _123774 m n _79041 op f) = (term2284 _123774 m n _79041 op f).
Proof. exact (TRANS (@lem6219292 _123774 m n _79041 op f) (@lem6219310 _123774 m n _79041 op f)). Qed.
Lemma lem6219312 {_123774 : Type'} (op : type1400 _123774) : op = op.
Proof. exact (eq_refl op). Qed.
Lemma lem6219313 {_123774 : Type'} (f : nat -> _123774) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem6219314 : S = S.
Proof. exact (eq_refl S). Qed.
Lemma lem6219315 : Nat.add = Nat.add.
Proof. exact (eq_refl Nat.add). Qed.
Lemma lem6219316 : Nat.mul = Nat.mul.
Proof. exact (eq_refl Nat.mul). Qed.
Lemma lem6219317 : NUMERAL = NUMERAL.
Proof. exact (eq_refl NUMERAL). Qed.
Lemma lem6219318 : BIT0 = BIT0.
Proof. exact (eq_refl BIT0). Qed.
Lemma lem6219323 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6219324 (f : nat -> nat) (x : nat) : (f x) = (@I (nat -> nat) f x).
Proof. exact (@lem6219323 nat nat f x). Qed.
Lemma lem6219326 : (BIT1 0) = (@I (nat -> nat) BIT1 0).
Proof. exact (@lem6219324 BIT1 0). Qed.
Lemma lem6219327 : term20 = term2285.
Proof. exact (MK_COMB (@lem6219318) (@lem6219326)). Qed.
Lemma lem6219329 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6219330 (f : nat -> nat) (x : nat) : (f x) = (@I (nat -> nat) f x).
Proof. exact (@lem6219329 nat nat f x). Qed.
Lemma lem6219331 : term2285 = term2286.
Proof. exact (@lem6219330 BIT0 (@I (nat -> nat) BIT1 0)). Qed.
Lemma lem6219332 : term20 = term2286.
Proof. exact (TRANS (@lem6219327) (@lem6219331)). Qed.
Lemma lem6219333 : term22 = term2287.
Proof. exact (MK_COMB (@lem6219317) (@lem6219332)). Qed.
Lemma lem6219335 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6219336 (f : nat -> nat) (x : nat) : (f x) = (@I (nat -> nat) f x).
Proof. exact (@lem6219335 nat nat f x). Qed.
Lemma lem6219337 : term2287 = term2288.
Proof. exact (@lem6219336 NUMERAL term2286). Qed.
Lemma lem6219338 : term22 = term2288.
Proof. exact (TRANS (@lem6219333) (@lem6219337)). Qed.
Lemma lem6219339 (n : nat) : n = n.
Proof. exact (eq_refl n). Qed.
Lemma lem6219340 : term1 = term2289.
Proof. exact (MK_COMB (@lem6219316) (@lem6219338)). Qed.
Lemma lem6219341 (n : nat) : (term18 n) = (term2290 n).
Proof. exact (MK_COMB (@lem6219340) (@lem6219339 n)). Qed.
Lemma lem6219343 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6219344 (f : type1606) (x : nat) : (f x) = (@I (nat -> nat -> nat) f x).
Proof. exact (@lem6219343 nat (nat -> nat) f x). Qed.
Lemma lem6219345 : term2289 = term2291.
Proof. exact (@lem6219344 Nat.mul term2288). Qed.
Lemma lem6219346 (n : nat) : n = n.
Proof. exact (eq_refl n). Qed.
Lemma lem6219347 (n : nat) : (term2290 n) = (term2292 n).
Proof. exact (MK_COMB (@lem6219345) (@lem6219346 n)). Qed.
Lemma lem6219349 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6219350 (f : nat -> nat) (x : nat) : (f x) = (@I (nat -> nat) f x).
Proof. exact (@lem6219349 nat nat f x). Qed.
Lemma lem6219351 (n : nat) : (term2292 n) = (term2293 n).
Proof. exact (@lem6219350 term2291 n). Qed.
Lemma lem6219352 (n : nat) : (term2290 n) = (term2293 n).
Proof. exact (TRANS (@lem6219347 n) (@lem6219351 n)). Qed.
Lemma lem6219353 (n : nat) : (term18 n) = (term2293 n).
Proof. exact (TRANS (@lem6219341 n) (@lem6219352 n)). Qed.
Lemma lem6219354 : NUMERAL = NUMERAL.
Proof. exact (eq_refl NUMERAL). Qed.
Lemma lem6219359 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6219360 (f : nat -> nat) (x : nat) : (f x) = (@I (nat -> nat) f x).
Proof. exact (@lem6219359 nat nat f x). Qed.
Lemma lem6219362 : (BIT1 0) = (@I (nat -> nat) BIT1 0).
Proof. exact (@lem6219360 BIT1 0). Qed.
Lemma lem6219363 : term6 = term2294.
Proof. exact (MK_COMB (@lem6219354) (@lem6219362)). Qed.
Lemma lem6219365 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6219366 (f : nat -> nat) (x : nat) : (f x) = (@I (nat -> nat) f x).
Proof. exact (@lem6219365 nat nat f x). Qed.
Lemma lem6219367 : term2294 = term2295.
Proof. exact (@lem6219366 NUMERAL (@I (nat -> nat) BIT1 0)). Qed.
Lemma lem6219368 : term6 = term2295.
Proof. exact (TRANS (@lem6219363) (@lem6219367)). Qed.
Lemma lem6219369 (n : nat) : (term23 n) = (term2296 n).
Proof. exact (MK_COMB (@lem6219315) (@lem6219353 n)). Qed.
Lemma lem6219370 (n : nat) : (term13 n) = (term2297 n).
Proof. exact (MK_COMB (@lem6219369 n) (@lem6219368)). Qed.
Lemma lem6219372 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6219373 (f : type1606) (x : nat) : (f x) = (@I (nat -> nat -> nat) f x).
Proof. exact (@lem6219372 nat (nat -> nat) f x). Qed.
Lemma lem6219374 (n : nat) : (term2296 n) = (term2298 n).
Proof. exact (@lem6219373 Nat.add (term2293 n)). Qed.
Lemma lem6219375 : term2295 = term2295.
Proof. exact (eq_refl term2295). Qed.
Lemma lem6219376 (n : nat) : (term2297 n) = (term2299 n).
Proof. exact (MK_COMB (@lem6219374 n) (@lem6219375)). Qed.
Lemma lem6219378 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6219379 (f : nat -> nat) (x : nat) : (f x) = (@I (nat -> nat) f x).
Proof. exact (@lem6219378 nat nat f x). Qed.
Lemma lem6219380 (n : nat) : (term2299 n) = (term2300 n).
Proof. exact (@lem6219379 (term2298 n) term2295). Qed.
Lemma lem6219381 (n : nat) : (term2297 n) = (term2300 n).
Proof. exact (TRANS (@lem6219376 n) (@lem6219380 n)). Qed.
Lemma lem6219382 (n : nat) : (term13 n) = (term2300 n).
Proof. exact (TRANS (@lem6219370 n) (@lem6219381 n)). Qed.
Lemma lem6219383 (n : nat) : (term11 n) = (term2301 n).
Proof. exact (MK_COMB (@lem6219314) (@lem6219382 n)). Qed.
Lemma lem6219385 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6219386 (f : nat -> nat) (x : nat) : (f x) = (@I (nat -> nat) f x).
Proof. exact (@lem6219385 nat nat f x). Qed.
Lemma lem6219387 (n : nat) : (term2301 n) = (term2302 n).
Proof. exact (@lem6219386 S (term2300 n)). Qed.
Lemma lem6219388 (n : nat) : (term11 n) = (term2302 n).
Proof. exact (TRANS (@lem6219383 n) (@lem6219387 n)). Qed.
Lemma lem6219389 {_123774 : Type'} (f : nat -> _123774) (n : nat) : (term1654 _123774 f n) = (term2303 _123774 f n).
Proof. exact (MK_COMB (@lem6219313 _123774 f) (@lem6219388 n)). Qed.
Lemma lem6219391 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6219392 {_123774 : Type'} (f : nat -> _123774) (x : nat) : (f x) = (@I (nat -> _123774) f x).
Proof. exact (@lem6219391 nat _123774 f x). Qed.
Lemma lem6219393 {_123774 : Type'} (f : nat -> _123774) (n : nat) : (term2303 _123774 f n) = (term2304 _123774 f n).
Proof. exact (@lem6219392 _123774 f (term2302 n)). Qed.
Lemma lem6219394 {_123774 : Type'} (f : nat -> _123774) (n : nat) : (term1654 _123774 f n) = (term2304 _123774 f n).
Proof. exact (TRANS (@lem6219389 _123774 f n) (@lem6219393 _123774 f n)). Qed.
Lemma lem6219395 {_123774 : Type'} (f : nat -> _123774) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem6219396 : S = S.
Proof. exact (eq_refl S). Qed.
Lemma lem6219397 : S = S.
Proof. exact (eq_refl S). Qed.
Lemma lem6219398 : Nat.add = Nat.add.
Proof. exact (eq_refl Nat.add). Qed.
Lemma lem6219399 : Nat.mul = Nat.mul.
Proof. exact (eq_refl Nat.mul). Qed.
Lemma lem6219400 : NUMERAL = NUMERAL.
Proof. exact (eq_refl NUMERAL). Qed.
Lemma lem6219401 : BIT0 = BIT0.
Proof. exact (eq_refl BIT0). Qed.
Lemma lem6219406 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6219407 (f : nat -> nat) (x : nat) : (f x) = (@I (nat -> nat) f x).
Proof. exact (@lem6219406 nat nat f x). Qed.
Lemma lem6219409 : (BIT1 0) = (@I (nat -> nat) BIT1 0).
Proof. exact (@lem6219407 BIT1 0). Qed.
Lemma lem6219410 : term20 = term2285.
Proof. exact (MK_COMB (@lem6219401) (@lem6219409)). Qed.
Lemma lem6219412 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6219413 (f : nat -> nat) (x : nat) : (f x) = (@I (nat -> nat) f x).
Proof. exact (@lem6219412 nat nat f x). Qed.
Lemma lem6219414 : term2285 = term2286.
Proof. exact (@lem6219413 BIT0 (@I (nat -> nat) BIT1 0)). Qed.
Lemma lem6219415 : term20 = term2286.
Proof. exact (TRANS (@lem6219410) (@lem6219414)). Qed.
Lemma lem6219416 : term22 = term2287.
Proof. exact (MK_COMB (@lem6219400) (@lem6219415)). Qed.
Lemma lem6219418 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6219419 (f : nat -> nat) (x : nat) : (f x) = (@I (nat -> nat) f x).
Proof. exact (@lem6219418 nat nat f x). Qed.
Lemma lem6219420 : term2287 = term2288.
Proof. exact (@lem6219419 NUMERAL term2286). Qed.
Lemma lem6219421 : term22 = term2288.
Proof. exact (TRANS (@lem6219416) (@lem6219420)). Qed.
Lemma lem6219422 (n : nat) : n = n.
Proof. exact (eq_refl n). Qed.
Lemma lem6219423 : term1 = term2289.
Proof. exact (MK_COMB (@lem6219399) (@lem6219421)). Qed.
Lemma lem6219424 (n : nat) : (term18 n) = (term2290 n).
Proof. exact (MK_COMB (@lem6219423) (@lem6219422 n)). Qed.
Lemma lem6219426 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6219427 (f : type1606) (x : nat) : (f x) = (@I (nat -> nat -> nat) f x).
Proof. exact (@lem6219426 nat (nat -> nat) f x). Qed.
Lemma lem6219428 : term2289 = term2291.
Proof. exact (@lem6219427 Nat.mul term2288). Qed.
Lemma lem6219429 (n : nat) : n = n.
Proof. exact (eq_refl n). Qed.
Lemma lem6219430 (n : nat) : (term2290 n) = (term2292 n).
Proof. exact (MK_COMB (@lem6219428) (@lem6219429 n)). Qed.
Lemma lem6219432 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6219433 (f : nat -> nat) (x : nat) : (f x) = (@I (nat -> nat) f x).
Proof. exact (@lem6219432 nat nat f x). Qed.
Lemma lem6219434 (n : nat) : (term2292 n) = (term2293 n).
Proof. exact (@lem6219433 term2291 n). Qed.
Lemma lem6219435 (n : nat) : (term2290 n) = (term2293 n).
Proof. exact (TRANS (@lem6219430 n) (@lem6219434 n)). Qed.
Lemma lem6219436 (n : nat) : (term18 n) = (term2293 n).
Proof. exact (TRANS (@lem6219424 n) (@lem6219435 n)). Qed.
Lemma lem6219437 : NUMERAL = NUMERAL.
Proof. exact (eq_refl NUMERAL). Qed.
Lemma lem6219442 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6219443 (f : nat -> nat) (x : nat) : (f x) = (@I (nat -> nat) f x).
Proof. exact (@lem6219442 nat nat f x). Qed.
Lemma lem6219445 : (BIT1 0) = (@I (nat -> nat) BIT1 0).
Proof. exact (@lem6219443 BIT1 0). Qed.
Lemma lem6219446 : term6 = term2294.
Proof. exact (MK_COMB (@lem6219437) (@lem6219445)). Qed.
Lemma lem6219448 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6219449 (f : nat -> nat) (x : nat) : (f x) = (@I (nat -> nat) f x).
Proof. exact (@lem6219448 nat nat f x). Qed.
Lemma lem6219450 : term2294 = term2295.
Proof. exact (@lem6219449 NUMERAL (@I (nat -> nat) BIT1 0)). Qed.
Lemma lem6219451 : term6 = term2295.
Proof. exact (TRANS (@lem6219446) (@lem6219450)). Qed.
Lemma lem6219452 (n : nat) : (term23 n) = (term2296 n).
Proof. exact (MK_COMB (@lem6219398) (@lem6219436 n)). Qed.
Lemma lem6219453 (n : nat) : (term13 n) = (term2297 n).
Proof. exact (MK_COMB (@lem6219452 n) (@lem6219451)). Qed.
Lemma lem6219455 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6219456 (f : type1606) (x : nat) : (f x) = (@I (nat -> nat -> nat) f x).
Proof. exact (@lem6219455 nat (nat -> nat) f x). Qed.
Lemma lem6219457 (n : nat) : (term2296 n) = (term2298 n).
Proof. exact (@lem6219456 Nat.add (term2293 n)). Qed.
Lemma lem6219458 : term2295 = term2295.
Proof. exact (eq_refl term2295). Qed.
Lemma lem6219459 (n : nat) : (term2297 n) = (term2299 n).
Proof. exact (MK_COMB (@lem6219457 n) (@lem6219458)). Qed.
Lemma lem6219461 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6219462 (f : nat -> nat) (x : nat) : (f x) = (@I (nat -> nat) f x).
Proof. exact (@lem6219461 nat nat f x). Qed.
Lemma lem6219463 (n : nat) : (term2299 n) = (term2300 n).
Proof. exact (@lem6219462 (term2298 n) term2295). Qed.
Lemma lem6219464 (n : nat) : (term2297 n) = (term2300 n).
Proof. exact (TRANS (@lem6219459 n) (@lem6219463 n)). Qed.
Lemma lem6219465 (n : nat) : (term13 n) = (term2300 n).
Proof. exact (TRANS (@lem6219453 n) (@lem6219464 n)). Qed.
Lemma lem6219466 (n : nat) : (term11 n) = (term2301 n).
Proof. exact (MK_COMB (@lem6219397) (@lem6219465 n)). Qed.
Lemma lem6219468 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6219469 (f : nat -> nat) (x : nat) : (f x) = (@I (nat -> nat) f x).
Proof. exact (@lem6219468 nat nat f x). Qed.
Lemma lem6219470 (n : nat) : (term2301 n) = (term2302 n).
Proof. exact (@lem6219469 S (term2300 n)). Qed.
Lemma lem6219471 (n : nat) : (term11 n) = (term2302 n).
Proof. exact (TRANS (@lem6219466 n) (@lem6219470 n)). Qed.
Lemma lem6219472 (n : nat) : (term14 n) = (term2310 n).
Proof. exact (MK_COMB (@lem6219396) (@lem6219471 n)). Qed.
Lemma lem6219474 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6219475 (f : nat -> nat) (x : nat) : (f x) = (@I (nat -> nat) f x).
Proof. exact (@lem6219474 nat nat f x). Qed.
Lemma lem6219476 (n : nat) : (term2310 n) = (term2311 n).
Proof. exact (@lem6219475 S (term2302 n)). Qed.
Lemma lem6219477 (n : nat) : (term14 n) = (term2311 n).
Proof. exact (TRANS (@lem6219472 n) (@lem6219476 n)). Qed.
Lemma lem6219478 {_123774 : Type'} (f : nat -> _123774) (n : nat) : (term1664 _123774 f n) = (term2312 _123774 f n).
Proof. exact (MK_COMB (@lem6219395 _123774 f) (@lem6219477 n)). Qed.
Lemma lem6219480 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6219481 {_123774 : Type'} (f : nat -> _123774) (x : nat) : (f x) = (@I (nat -> _123774) f x).
Proof. exact (@lem6219480 nat _123774 f x). Qed.
Lemma lem6219482 {_123774 : Type'} (f : nat -> _123774) (n : nat) : (term2312 _123774 f n) = (term2313 _123774 f n).
Proof. exact (@lem6219481 _123774 f (term2311 n)). Qed.
Lemma lem6219483 {_123774 : Type'} (f : nat -> _123774) (n : nat) : (term1664 _123774 f n) = (term2313 _123774 f n).
Proof. exact (TRANS (@lem6219478 _123774 f n) (@lem6219482 _123774 f n)). Qed.
Lemma lem6219484 {_123774 : Type'} (op : type1400 _123774) (f : nat -> _123774) (n : nat) : (term1752 _123774 op f n) = (term2319 _123774 op f n).
Proof. exact (MK_COMB (@lem6219312 _123774 op) (@lem6219394 _123774 f n)). Qed.
Lemma lem6219485 {_123774 : Type'} (op : type1400 _123774) (f : nat -> _123774) (n : nat) : (term1754 _123774 op f n) = (term2320 _123774 op f n).
Proof. exact (MK_COMB (@lem6219484 _123774 op f n) (@lem6219483 _123774 f n)). Qed.
Lemma lem6219487 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6219488 {_123774 : Type'} (f : type1400 _123774) (x : _123774) : (f x) = (@I (_123774 -> _123774 -> _123774) f x).
Proof. exact (@lem6219487 _123774 (_123774 -> _123774) f x). Qed.
Lemma lem6219489 {_123774 : Type'} (op : type1400 _123774) (f : nat -> _123774) (n : nat) : (term2319 _123774 op f n) = (term2321 _123774 op f n).
Proof. exact (@lem6219488 _123774 op (term2304 _123774 f n)). Qed.
Lemma lem6219490 {_123774 : Type'} (f : nat -> _123774) (n : nat) : (term2313 _123774 f n) = (term2313 _123774 f n).
Proof. exact (eq_refl (term2313 _123774 f n)). Qed.
Lemma lem6219491 {_123774 : Type'} (op : type1400 _123774) (f : nat -> _123774) (n : nat) : (term2320 _123774 op f n) = (term2322 _123774 op f n).
Proof. exact (MK_COMB (@lem6219489 _123774 op f n) (@lem6219490 _123774 f n)). Qed.
Lemma lem6219493 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6219494 {_123774 : Type'} (f : _123774 -> _123774) (x : _123774) : (f x) = (@I (_123774 -> _123774) f x).
Proof. exact (@lem6219493 _123774 _123774 f x). Qed.
Lemma lem6219495 {_123774 : Type'} (op : type1400 _123774) (f : nat -> _123774) (n : nat) : (term2322 _123774 op f n) = (term2323 _123774 op f n).
Proof. exact (@lem6219494 _123774 (term2321 _123774 op f n) (term2313 _123774 f n)). Qed.
Lemma lem6219496 {_123774 : Type'} (op : type1400 _123774) (f : nat -> _123774) (n : nat) : (term2320 _123774 op f n) = (term2323 _123774 op f n).
Proof. exact (TRANS (@lem6219491 _123774 op f n) (@lem6219495 _123774 op f n)). Qed.
Lemma lem6219497 {_123774 : Type'} (op : type1400 _123774) (f : nat -> _123774) (n : nat) : (term1754 _123774 op f n) = (term2323 _123774 op f n).
Proof. exact (TRANS (@lem6219485 _123774 op f n) (@lem6219496 _123774 op f n)). Qed.
Lemma lem6219498 {_123774 : Type'} (m : nat) (n : nat) (_79041 : type399 _123774) (op : type1400 _123774) (f : nat -> _123774) : (term1820 _123774 m n _79041 op f) = (term2305 _123774 m n _79041 op f).
Proof. exact (MK_COMB (@lem6219253 _123774 op) (@lem6219311 _123774 m n _79041 op f)). Qed.
Lemma lem6219499 {_123774 : Type'} (m : nat) (_79041 : type399 _123774) (op : type1400 _123774) (f : nat -> _123774) (n : nat) : (term1821 _123774 m _79041 op f n) = (term2324 _123774 m _79041 op f n).
Proof. exact (MK_COMB (@lem6219498 _123774 m n _79041 op f) (@lem6219497 _123774 op f n)). Qed.
Lemma lem6219501 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6219502 {_123774 : Type'} (f : type1400 _123774) (x : _123774) : (f x) = (@I (_123774 -> _123774 -> _123774) f x).
Proof. exact (@lem6219501 _123774 (_123774 -> _123774) f x). Qed.
Lemma lem6219503 {_123774 : Type'} (m : nat) (n : nat) (_79041 : type399 _123774) (op : type1400 _123774) (f : nat -> _123774) : (term2305 _123774 m n _79041 op f) = (term2307 _123774 m n _79041 op f).
Proof. exact (@lem6219502 _123774 op (term2284 _123774 m n _79041 op f)). Qed.
Lemma lem6219504 {_123774 : Type'} (op : type1400 _123774) (f : nat -> _123774) (n : nat) : (term2323 _123774 op f n) = (term2323 _123774 op f n).
Proof. exact (eq_refl (term2323 _123774 op f n)). Qed.
Lemma lem6219505 {_123774 : Type'} (m : nat) (_79041 : type399 _123774) (op : type1400 _123774) (f : nat -> _123774) (n : nat) : (term2324 _123774 m _79041 op f n) = (term2325 _123774 m _79041 op f n).
Proof. exact (MK_COMB (@lem6219503 _123774 m n _79041 op f) (@lem6219504 _123774 op f n)). Qed.
Lemma lem6219507 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6219508 {_123774 : Type'} (f : _123774 -> _123774) (x : _123774) : (f x) = (@I (_123774 -> _123774) f x).
Proof. exact (@lem6219507 _123774 _123774 f x). Qed.
Lemma lem6219509 {_123774 : Type'} (m : nat) (_79041 : type399 _123774) (op : type1400 _123774) (f : nat -> _123774) (n : nat) : (term2325 _123774 m _79041 op f n) = (term2326 _123774 m _79041 op f n).
Proof. exact (@lem6219508 _123774 (term2307 _123774 m n _79041 op f) (term2323 _123774 op f n)). Qed.
Lemma lem6219510 {_123774 : Type'} (m : nat) (_79041 : type399 _123774) (op : type1400 _123774) (f : nat -> _123774) (n : nat) : (term2324 _123774 m _79041 op f n) = (term2326 _123774 m _79041 op f n).
Proof. exact (TRANS (@lem6219505 _123774 m _79041 op f n) (@lem6219509 _123774 m _79041 op f n)). Qed.
Lemma lem6219511 {_123774 : Type'} (m : nat) (_79041 : type399 _123774) (op : type1400 _123774) (f : nat -> _123774) (n : nat) : (term1821 _123774 m _79041 op f n) = (term2326 _123774 m _79041 op f n).
Proof. exact (TRANS (@lem6219499 _123774 m _79041 op f n) (@lem6219510 _123774 m _79041 op f n)). Qed.
Lemma lem6219512 {_123774 : Type'} (m : nat) (_79041 : type399 _123774) (op : type1400 _123774) (f : nat -> _123774) (n : nat) : (term1825 _123774 m _79041 op f n) = (term2327 _123774 m _79041 op f n).
Proof. exact (MK_COMB (@lem6218993 _123774) (@lem6219252 _123774 m _79041 op f n)). Qed.
Lemma lem6219513 {_123774 : Type'} (m : nat) (_79041 : type399 _123774) (op : type1400 _123774) (f : nat -> _123774) (n : nat) : ((term1824 _123774 m _79041 op f n) = (term1821 _123774 m _79041 op f n)) = ((term2318 _123774 m _79041 op f n) = (term2326 _123774 m _79041 op f n)).
Proof. exact (MK_COMB (@lem6219512 _123774 m _79041 op f n) (@lem6219511 _123774 m _79041 op f n)). Qed.
Lemma lem6219514 {_123774 : Type'} (m : nat) (_79041 : type399 _123774) (op : type1400 _123774) (f : nat -> _123774) (n : nat) : (term1826 _123774 m _79041 op f n) = (term2328 _123774 m _79041 op f n).
Proof. exact (MK_COMB (@lem6218992) (@lem6219513 _123774 m _79041 op f n)). Qed.
Lemma lem6219516 {_123774 : Type'} : (@eq _123774) = (@eq _123774).
Proof. exact (eq_refl (@eq _123774)). Qed.
Lemma lem6219517 {_123774 : Type'} (op : type1400 _123774) : op = op.
Proof. exact (eq_refl op). Qed.
Lemma lem6219522 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6219523 {_123774 : Type'} (f : type402 _123774) (x : type1400 _123774) : (f x) = (@I ((_123774 -> _123774 -> _123774) -> _123774) f x).
Proof. exact (@lem6219522 (type1400 _123774) _123774 f x). Qed.
Lemma lem6219525 {_123774 : Type'} (op : type1400 _123774) : (@neutral _123774 op) = (@I ((_123774 -> _123774 -> _123774) -> _123774) (@neutral _123774) op).
Proof. exact (@lem6219523 _123774 (@neutral _123774) op). Qed.
Lemma lem6219526 {_123774 : Type'} (x : _123774) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem6219527 {_123774 : Type'} (op : type1400 _123774) : (term2329 _123774 op) = (term2330 _123774 op).
Proof. exact (MK_COMB (@lem6219517 _123774 op) (@lem6219525 _123774 op)). Qed.
Lemma lem6219528 {_123774 : Type'} (op : type1400 _123774) (x : _123774) : (term1797 _123774 op x) = (term2331 _123774 op x).
Proof. exact (MK_COMB (@lem6219527 _123774 op) (@lem6219526 _123774 x)). Qed.
Lemma lem6219530 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6219531 {_123774 : Type'} (f : type1400 _123774) (x : _123774) : (f x) = (@I (_123774 -> _123774 -> _123774) f x).
Proof. exact (@lem6219530 _123774 (_123774 -> _123774) f x). Qed.
Lemma lem6219532 {_123774 : Type'} (op : type1400 _123774) : (term2330 _123774 op) = (term2332 _123774 op).
Proof. exact (@lem6219531 _123774 op (@I ((_123774 -> _123774 -> _123774) -> _123774) (@neutral _123774) op)). Qed.
Lemma lem6219533 {_123774 : Type'} (x : _123774) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem6219534 {_123774 : Type'} (op : type1400 _123774) (x : _123774) : (term2331 _123774 op x) = (term2333 _123774 op x).
Proof. exact (MK_COMB (@lem6219532 _123774 op) (@lem6219533 _123774 x)). Qed.
Lemma lem6219536 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6219537 {_123774 : Type'} (f : _123774 -> _123774) (x : _123774) : (f x) = (@I (_123774 -> _123774) f x).
Proof. exact (@lem6219536 _123774 _123774 f x). Qed.
Lemma lem6219538 {_123774 : Type'} (op : type1400 _123774) (x : _123774) : (term2333 _123774 op x) = (term2334 _123774 op x).
Proof. exact (@lem6219537 _123774 (term2332 _123774 op) x). Qed.
Lemma lem6219539 {_123774 : Type'} (op : type1400 _123774) (x : _123774) : (term2331 _123774 op x) = (term2334 _123774 op x).
Proof. exact (TRANS (@lem6219534 _123774 op x) (@lem6219538 _123774 op x)). Qed.
Lemma lem6219540 {_123774 : Type'} (op : type1400 _123774) (x : _123774) : (term1797 _123774 op x) = (term2334 _123774 op x).
Proof. exact (TRANS (@lem6219528 _123774 op x) (@lem6219539 _123774 op x)). Qed.
Lemma lem6219541 {_123774 : Type'} (x : _123774) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem6219542 {_123774 : Type'} (op : type1400 _123774) (x : _123774) : (term2335 _123774 op x) = (term2336 _123774 op x).
Proof. exact (MK_COMB (@lem6219516 _123774) (@lem6219540 _123774 op x)). Qed.
Lemma lem6219543 {_123774 : Type'} (op : type1400 _123774) (x : _123774) : ((term1797 _123774 op x) = x) = ((term2334 _123774 op x) = x).
Proof. exact (MK_COMB (@lem6219542 _123774 op x) (@lem6219541 _123774 x)). Qed.
Lemma lem6219544 {_123774 : Type'} (op : type1400 _123774) : (term1798 _123774 op) = (term2337 _123774 op).
Proof. exact (fun_ext (fun x : _123774 => @lem6219543 _123774 op x)). Qed.
Lemma lem6219545 {_123774 : Type'} : (@all _123774) = (@all _123774).
Proof. exact (eq_refl (@all _123774)). Qed.
Lemma lem6219546 {_123774 : Type'} (op : type1400 _123774) : (term1799 _123774 op) = (term2338 _123774 op).
Proof. exact (MK_COMB (@lem6219545 _123774) (@lem6219544 _123774 op)). Qed.
Lemma lem6219547 {_123774 : Type'} : (@eq _123774) = (@eq _123774).
Proof. exact (eq_refl (@eq _123774)). Qed.
Lemma lem6219556 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6219557 {_123774 : Type'} (f : type1400 _123774) (x : _123774) : (f x) = (@I (_123774 -> _123774 -> _123774) f x).
Proof. exact (@lem6219556 _123774 (_123774 -> _123774) f x). Qed.
Lemma lem6219558 {_123774 : Type'} (op : type1400 _123774) (y : _123774) : (op y) = (@I (_123774 -> _123774 -> _123774) op y).
Proof. exact (@lem6219557 _123774 op y). Qed.
Lemma lem6219559 {_123774 : Type'} (z : _123774) : z = z.
Proof. exact (eq_refl z). Qed.
Lemma lem6219560 {_123774 : Type'} (op : type1400 _123774) (y : _123774) (z : _123774) : (op y z) = (@I (_123774 -> _123774 -> _123774) op y z).
Proof. exact (MK_COMB (@lem6219558 _123774 op y) (@lem6219559 _123774 z)). Qed.
Lemma lem6219562 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6219563 {_123774 : Type'} (f : _123774 -> _123774) (x : _123774) : (f x) = (@I (_123774 -> _123774) f x).
Proof. exact (@lem6219562 _123774 _123774 f x). Qed.
Lemma lem6219564 {_123774 : Type'} (op : type1400 _123774) (y : _123774) (z : _123774) : (@I (_123774 -> _123774 -> _123774) op y z) = (term2339 _123774 op y z).
Proof. exact (@lem6219563 _123774 (@I (_123774 -> _123774 -> _123774) op y) z). Qed.
Lemma lem6219566 {_123774 : Type'} (op : type1400 _123774) (y : _123774) (z : _123774) : (op y z) = (term2339 _123774 op y z).
Proof. exact (TRANS (@lem6219560 _123774 op y z) (@lem6219564 _123774 op y z)). Qed.
Lemma lem6219567 {_123774 : Type'} (op : type1400 _123774) (x : _123774) : (op x) = (op x).
Proof. exact (eq_refl (op x)). Qed.
Lemma lem6219568 {_123774 : Type'} (x : _123774) (op : type1400 _123774) (y : _123774) (z : _123774) : (term1800 _123774 x op y z) = (term2340 _123774 x op y z).
Proof. exact (MK_COMB (@lem6219567 _123774 op x) (@lem6219566 _123774 op y z)). Qed.
Lemma lem6219570 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6219571 {_123774 : Type'} (f : type1400 _123774) (x : _123774) : (f x) = (@I (_123774 -> _123774 -> _123774) f x).
Proof. exact (@lem6219570 _123774 (_123774 -> _123774) f x). Qed.
Lemma lem6219572 {_123774 : Type'} (op : type1400 _123774) (x : _123774) : (op x) = (@I (_123774 -> _123774 -> _123774) op x).
Proof. exact (@lem6219571 _123774 op x). Qed.
Lemma lem6219573 {_123774 : Type'} (op : type1400 _123774) (y : _123774) (z : _123774) : (term2339 _123774 op y z) = (term2339 _123774 op y z).
Proof. exact (eq_refl (term2339 _123774 op y z)). Qed.
Lemma lem6219574 {_123774 : Type'} (x : _123774) (op : type1400 _123774) (y : _123774) (z : _123774) : (term2340 _123774 x op y z) = (term2341 _123774 x op y z).
Proof. exact (MK_COMB (@lem6219572 _123774 op x) (@lem6219573 _123774 op y z)). Qed.
Lemma lem6219576 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6219577 {_123774 : Type'} (f : _123774 -> _123774) (x : _123774) : (f x) = (@I (_123774 -> _123774) f x).
Proof. exact (@lem6219576 _123774 _123774 f x). Qed.
Lemma lem6219578 {_123774 : Type'} (x : _123774) (op : type1400 _123774) (y : _123774) (z : _123774) : (term2341 _123774 x op y z) = (term2342 _123774 x op y z).
Proof. exact (@lem6219577 _123774 (@I (_123774 -> _123774 -> _123774) op x) (term2339 _123774 op y z)). Qed.
Lemma lem6219579 {_123774 : Type'} (x : _123774) (op : type1400 _123774) (y : _123774) (z : _123774) : (term2340 _123774 x op y z) = (term2342 _123774 x op y z).
Proof. exact (TRANS (@lem6219574 _123774 x op y z) (@lem6219578 _123774 x op y z)). Qed.
Lemma lem6219580 {_123774 : Type'} (x : _123774) (op : type1400 _123774) (y : _123774) (z : _123774) : (term1800 _123774 x op y z) = (term2342 _123774 x op y z).
Proof. exact (TRANS (@lem6219568 _123774 x op y z) (@lem6219579 _123774 x op y z)). Qed.
Lemma lem6219581 {_123774 : Type'} (op : type1400 _123774) : op = op.
Proof. exact (eq_refl op). Qed.
Lemma lem6219588 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6219589 {_123774 : Type'} (f : type1400 _123774) (x : _123774) : (f x) = (@I (_123774 -> _123774 -> _123774) f x).
Proof. exact (@lem6219588 _123774 (_123774 -> _123774) f x). Qed.
Lemma lem6219590 {_123774 : Type'} (op : type1400 _123774) (x : _123774) : (op x) = (@I (_123774 -> _123774 -> _123774) op x).
Proof. exact (@lem6219589 _123774 op x). Qed.
Lemma lem6219591 {_123774 : Type'} (y : _123774) : y = y.
Proof. exact (eq_refl y). Qed.
Lemma lem6219592 {_123774 : Type'} (op : type1400 _123774) (x : _123774) (y : _123774) : (op x y) = (@I (_123774 -> _123774 -> _123774) op x y).
Proof. exact (MK_COMB (@lem6219590 _123774 op x) (@lem6219591 _123774 y)). Qed.
Lemma lem6219594 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6219595 {_123774 : Type'} (f : _123774 -> _123774) (x : _123774) : (f x) = (@I (_123774 -> _123774) f x).
Proof. exact (@lem6219594 _123774 _123774 f x). Qed.
Lemma lem6219596 {_123774 : Type'} (op : type1400 _123774) (x : _123774) (y : _123774) : (@I (_123774 -> _123774 -> _123774) op x y) = (term2339 _123774 op x y).
Proof. exact (@lem6219595 _123774 (@I (_123774 -> _123774 -> _123774) op x) y). Qed.
Lemma lem6219598 {_123774 : Type'} (op : type1400 _123774) (x : _123774) (y : _123774) : (op x y) = (term2339 _123774 op x y).
Proof. exact (TRANS (@lem6219592 _123774 op x y) (@lem6219596 _123774 op x y)). Qed.
Lemma lem6219599 {_123774 : Type'} (z : _123774) : z = z.
Proof. exact (eq_refl z). Qed.
Lemma lem6219600 {_123774 : Type'} (op : type1400 _123774) (x : _123774) (y : _123774) : (term2343 _123774 op x y) = (term2344 _123774 op x y).
Proof. exact (MK_COMB (@lem6219581 _123774 op) (@lem6219598 _123774 op x y)). Qed.
Lemma lem6219601 {_123774 : Type'} (op : type1400 _123774) (x : _123774) (y : _123774) (z : _123774) : (term1801 _123774 op x y z) = (term2345 _123774 op x y z).
Proof. exact (MK_COMB (@lem6219600 _123774 op x y) (@lem6219599 _123774 z)). Qed.
Lemma lem6219603 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6219604 {_123774 : Type'} (f : type1400 _123774) (x : _123774) : (f x) = (@I (_123774 -> _123774 -> _123774) f x).
Proof. exact (@lem6219603 _123774 (_123774 -> _123774) f x). Qed.
Lemma lem6219605 {_123774 : Type'} (op : type1400 _123774) (x : _123774) (y : _123774) : (term2344 _123774 op x y) = (term2346 _123774 op x y).
Proof. exact (@lem6219604 _123774 op (term2339 _123774 op x y)). Qed.
Lemma lem6219606 {_123774 : Type'} (z : _123774) : z = z.
Proof. exact (eq_refl z). Qed.
Lemma lem6219607 {_123774 : Type'} (op : type1400 _123774) (x : _123774) (y : _123774) (z : _123774) : (term2345 _123774 op x y z) = (term2347 _123774 op x y z).
Proof. exact (MK_COMB (@lem6219605 _123774 op x y) (@lem6219606 _123774 z)). Qed.
Lemma lem6219609 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6219610 {_123774 : Type'} (f : _123774 -> _123774) (x : _123774) : (f x) = (@I (_123774 -> _123774) f x).
Proof. exact (@lem6219609 _123774 _123774 f x). Qed.
Lemma lem6219611 {_123774 : Type'} (op : type1400 _123774) (x : _123774) (y : _123774) (z : _123774) : (term2347 _123774 op x y z) = (term2348 _123774 op x y z).
Proof. exact (@lem6219610 _123774 (term2346 _123774 op x y) z). Qed.
Lemma lem6219612 {_123774 : Type'} (op : type1400 _123774) (x : _123774) (y : _123774) (z : _123774) : (term2345 _123774 op x y z) = (term2348 _123774 op x y z).
Proof. exact (TRANS (@lem6219607 _123774 op x y z) (@lem6219611 _123774 op x y z)). Qed.
Lemma lem6219613 {_123774 : Type'} (op : type1400 _123774) (x : _123774) (y : _123774) (z : _123774) : (term1801 _123774 op x y z) = (term2348 _123774 op x y z).
Proof. exact (TRANS (@lem6219601 _123774 op x y z) (@lem6219612 _123774 op x y z)). Qed.
Lemma lem6219614 {_123774 : Type'} (x : _123774) (op : type1400 _123774) (y : _123774) (z : _123774) : (term2349 _123774 x op y z) = (term2350 _123774 x op y z).
Proof. exact (MK_COMB (@lem6219547 _123774) (@lem6219580 _123774 x op y z)). Qed.
Lemma lem6219615 {_123774 : Type'} (op : type1400 _123774) (x : _123774) (y : _123774) (z : _123774) : ((term1800 _123774 x op y z) = (term1801 _123774 op x y z)) = ((term2342 _123774 x op y z) = (term2348 _123774 op x y z)).
Proof. exact (MK_COMB (@lem6219614 _123774 x op y z) (@lem6219613 _123774 op x y z)). Qed.
Lemma lem6219616 {_123774 : Type'} (op : type1400 _123774) (x : _123774) (y : _123774) : (term1802 _123774 op x y) = (term2351 _123774 op x y).
Proof. exact (fun_ext (fun z : _123774 => @lem6219615 _123774 op x y z)). Qed.
Lemma lem6219617 {_123774 : Type'} : (@all _123774) = (@all _123774).
Proof. exact (eq_refl (@all _123774)). Qed.
Lemma lem6219618 {_123774 : Type'} (op : type1400 _123774) (x : _123774) (y : _123774) : (term1803 _123774 op x y) = (term2352 _123774 op x y).
Proof. exact (MK_COMB (@lem6219617 _123774) (@lem6219616 _123774 op x y)). Qed.
Lemma lem6219619 {_123774 : Type'} (op : type1400 _123774) (x : _123774) : (term1804 _123774 op x) = (term2353 _123774 op x).
Proof. exact (fun_ext (fun y : _123774 => @lem6219618 _123774 op x y)). Qed.
Lemma lem6219620 {_123774 : Type'} : (@all _123774) = (@all _123774).
Proof. exact (eq_refl (@all _123774)). Qed.
Lemma lem6219621 {_123774 : Type'} (op : type1400 _123774) (x : _123774) : (term1805 _123774 op x) = (term2354 _123774 op x).
Proof. exact (MK_COMB (@lem6219620 _123774) (@lem6219619 _123774 op x)). Qed.
Lemma lem6219622 {_123774 : Type'} (op : type1400 _123774) : (term1806 _123774 op) = (term2355 _123774 op).
Proof. exact (fun_ext (fun x : _123774 => @lem6219621 _123774 op x)). Qed.
Lemma lem6219623 {_123774 : Type'} : (@all _123774) = (@all _123774).
Proof. exact (eq_refl (@all _123774)). Qed.
Lemma lem6219624 {_123774 : Type'} (op : type1400 _123774) : (term1807 _123774 op) = (term2356 _123774 op).
Proof. exact (MK_COMB (@lem6219623 _123774) (@lem6219622 _123774 op)). Qed.
Lemma lem6219625 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6219626 {_123774 : Type'} (op : type1400 _123774) : (term1808 _123774 op) = (term2357 _123774 op).
Proof. exact (MK_COMB (@lem6219625) (@lem6219624 _123774 op)). Qed.
Lemma lem6219627 {_123774 : Type'} (op : type1400 _123774) : (term1809 _123774 op) = (term2358 _123774 op).
Proof. exact (MK_COMB (@lem6219626 _123774 op) (@lem6219546 _123774 op)). Qed.
Lemma lem6219628 {_123774 : Type'} : (@eq _123774) = (@eq _123774).
Proof. exact (eq_refl (@eq _123774)). Qed.
Lemma lem6219635 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6219636 {_123774 : Type'} (f : type1400 _123774) (x : _123774) : (f x) = (@I (_123774 -> _123774 -> _123774) f x).
Proof. exact (@lem6219635 _123774 (_123774 -> _123774) f x). Qed.
Lemma lem6219637 {_123774 : Type'} (op : type1400 _123774) (x : _123774) : (op x) = (@I (_123774 -> _123774 -> _123774) op x).
Proof. exact (@lem6219636 _123774 op x). Qed.
Lemma lem6219638 {_123774 : Type'} (y : _123774) : y = y.
Proof. exact (eq_refl y). Qed.
Lemma lem6219639 {_123774 : Type'} (op : type1400 _123774) (x : _123774) (y : _123774) : (op x y) = (@I (_123774 -> _123774 -> _123774) op x y).
Proof. exact (MK_COMB (@lem6219637 _123774 op x) (@lem6219638 _123774 y)). Qed.
Lemma lem6219641 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6219642 {_123774 : Type'} (f : _123774 -> _123774) (x : _123774) : (f x) = (@I (_123774 -> _123774) f x).
Proof. exact (@lem6219641 _123774 _123774 f x). Qed.
Lemma lem6219643 {_123774 : Type'} (op : type1400 _123774) (x : _123774) (y : _123774) : (@I (_123774 -> _123774 -> _123774) op x y) = (term2339 _123774 op x y).
Proof. exact (@lem6219642 _123774 (@I (_123774 -> _123774 -> _123774) op x) y). Qed.
Lemma lem6219645 {_123774 : Type'} (op : type1400 _123774) (x : _123774) (y : _123774) : (op x y) = (term2339 _123774 op x y).
Proof. exact (TRANS (@lem6219639 _123774 op x y) (@lem6219643 _123774 op x y)). Qed.
Lemma lem6219652 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6219653 {_123774 : Type'} (f : type1400 _123774) (x : _123774) : (f x) = (@I (_123774 -> _123774 -> _123774) f x).
Proof. exact (@lem6219652 _123774 (_123774 -> _123774) f x). Qed.
Lemma lem6219654 {_123774 : Type'} (op : type1400 _123774) (y : _123774) : (op y) = (@I (_123774 -> _123774 -> _123774) op y).
Proof. exact (@lem6219653 _123774 op y). Qed.
Lemma lem6219655 {_123774 : Type'} (x : _123774) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem6219656 {_123774 : Type'} (op : type1400 _123774) (y : _123774) (x : _123774) : (op y x) = (@I (_123774 -> _123774 -> _123774) op y x).
Proof. exact (MK_COMB (@lem6219654 _123774 op y) (@lem6219655 _123774 x)). Qed.
Lemma lem6219658 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6219659 {_123774 : Type'} (f : _123774 -> _123774) (x : _123774) : (f x) = (@I (_123774 -> _123774) f x).
Proof. exact (@lem6219658 _123774 _123774 f x). Qed.
Lemma lem6219660 {_123774 : Type'} (op : type1400 _123774) (y : _123774) (x : _123774) : (@I (_123774 -> _123774 -> _123774) op y x) = (term2339 _123774 op y x).
Proof. exact (@lem6219659 _123774 (@I (_123774 -> _123774 -> _123774) op y) x). Qed.
Lemma lem6219662 {_123774 : Type'} (op : type1400 _123774) (y : _123774) (x : _123774) : (op y x) = (term2339 _123774 op y x).
Proof. exact (TRANS (@lem6219656 _123774 op y x) (@lem6219660 _123774 op y x)). Qed.
Lemma lem6219663 {_123774 : Type'} (op : type1400 _123774) (x : _123774) (y : _123774) : (term2359 _123774 op x y) = (term2360 _123774 op x y).
Proof. exact (MK_COMB (@lem6219628 _123774) (@lem6219645 _123774 op x y)). Qed.
Lemma lem6219664 {_123774 : Type'} (op : type1400 _123774) (y : _123774) (x : _123774) : ((op x y) = (op y x)) = ((term2339 _123774 op x y) = (term2339 _123774 op y x)).
Proof. exact (MK_COMB (@lem6219663 _123774 op x y) (@lem6219662 _123774 op y x)). Qed.
Lemma lem6219665 {_123774 : Type'} (op : type1400 _123774) (x : _123774) : (term1810 _123774 op x) = (term2361 _123774 op x).
Proof. exact (fun_ext (fun y : _123774 => @lem6219664 _123774 op y x)). Qed.
Lemma lem6219666 {_123774 : Type'} : (@all _123774) = (@all _123774).
Proof. exact (eq_refl (@all _123774)). Qed.
Lemma lem6219667 {_123774 : Type'} (op : type1400 _123774) (x : _123774) : (term1811 _123774 op x) = (term2362 _123774 op x).
Proof. exact (MK_COMB (@lem6219666 _123774) (@lem6219665 _123774 op x)). Qed.
Lemma lem6219668 {_123774 : Type'} (op : type1400 _123774) : (term1812 _123774 op) = (term2363 _123774 op).
Proof. exact (fun_ext (fun x : _123774 => @lem6219667 _123774 op x)). Qed.
Lemma lem6219669 {_123774 : Type'} : (@all _123774) = (@all _123774).
Proof. exact (eq_refl (@all _123774)). Qed.
Lemma lem6219670 {_123774 : Type'} (op : type1400 _123774) : (term1813 _123774 op) = (term2364 _123774 op).
Proof. exact (MK_COMB (@lem6219669 _123774) (@lem6219668 _123774 op)). Qed.
Lemma lem6219671 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6219672 {_123774 : Type'} (op : type1400 _123774) : (term1814 _123774 op) = (term2365 _123774 op).
Proof. exact (MK_COMB (@lem6219671) (@lem6219670 _123774 op)). Qed.
Lemma lem6219673 {_123774 : Type'} (op : type1400 _123774) : (term1815 _123774 op) = (term2366 _123774 op).
Proof. exact (MK_COMB (@lem6219672 _123774 op) (@lem6219627 _123774 op)). Qed.
Lemma lem6219674 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem6219679 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6219680 {_123774 : Type'} (f : type403 _123774) (x : type1400 _123774) : (f x) = (@I ((_123774 -> _123774 -> _123774) -> Prop) f x).
Proof. exact (@lem6219679 (type1400 _123774) Prop f x). Qed.
Lemma lem6219682 {_123774 : Type'} (op : type1400 _123774) : (@monoidal _123774 op) = (@I ((_123774 -> _123774 -> _123774) -> Prop) (@monoidal _123774) op).
Proof. exact (@lem6219680 _123774 (@monoidal _123774) op). Qed.
Lemma lem6219683 {_123774 : Type'} (op : type1400 _123774) : (term2367 _123774 op) = (term2368 _123774 op).
Proof. exact (MK_COMB (@lem6219674) (@lem6219682 _123774 op)). Qed.
Lemma lem6219684 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6219685 {_123774 : Type'} (op : type1400 _123774) : (term1958 _123774 op) = (term2369 _123774 op).
Proof. exact (MK_COMB (@lem6219684) (@lem6219683 _123774 op)). Qed.
Lemma lem6219686 {_123774 : Type'} (op : type1400 _123774) : (term1959 _123774 op) = (term2370 _123774 op).
Proof. exact (MK_COMB (@lem6219685 _123774 op) (@lem6219673 _123774 op)). Qed.
Lemma lem6219687 {_123774 : Type'} : (term1976 _123774) = (term2371 _123774).
Proof. exact (fun_ext (fun op : type1400 _123774 => @lem6219686 _123774 op)). Qed.
Lemma lem6219688 {_123774 : Type'} : (@all (_123774 -> _123774 -> _123774)) = (@all (_123774 -> _123774 -> _123774)).
Proof. exact (eq_refl (@all (_123774 -> _123774 -> _123774))). Qed.
Lemma lem6219689 {_123774 : Type'} : (term1991 _123774) = (term2372 _123774).
Proof. exact (MK_COMB (@lem6219688 _123774) (@lem6219687 _123774)). Qed.
Lemma lem6219690 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem6219691 {_123774 : Type'} : (@eq _123774) = (@eq _123774).
Proof. exact (eq_refl (@eq _123774)). Qed.
Lemma lem6219692 {_123774 : Type'} (op : type1400 _123774) : op = op.
Proof. exact (eq_refl op). Qed.
Lemma lem6219697 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6219698 {_123774 : Type'} (f : type402 _123774) (x : type1400 _123774) : (f x) = (@I ((_123774 -> _123774 -> _123774) -> _123774) f x).
Proof. exact (@lem6219697 (type1400 _123774) _123774 f x). Qed.
Lemma lem6219700 {_123774 : Type'} (op : type1400 _123774) : (@neutral _123774 op) = (@I ((_123774 -> _123774 -> _123774) -> _123774) (@neutral _123774) op).
Proof. exact (@lem6219698 _123774 (@neutral _123774) op). Qed.
Lemma lem6219705 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6219706 {_123774 : Type'} (f : type402 _123774) (x : type1400 _123774) : (f x) = (@I ((_123774 -> _123774 -> _123774) -> _123774) f x).
Proof. exact (@lem6219705 (type1400 _123774) _123774 f x). Qed.
Lemma lem6219708 {_123774 : Type'} (x : type402 _123774) (op : type1400 _123774) : (x op) = (@I ((_123774 -> _123774 -> _123774) -> _123774) x op).
Proof. exact (@lem6219706 _123774 x op). Qed.
Lemma lem6219709 {_123774 : Type'} (op : type1400 _123774) : (term2329 _123774 op) = (term2330 _123774 op).
Proof. exact (MK_COMB (@lem6219692 _123774 op) (@lem6219700 _123774 op)). Qed.
Lemma lem6219710 {_123774 : Type'} (x : type402 _123774) (op : type1400 _123774) : (term2373 _123774 x op) = (term2374 _123774 x op).
Proof. exact (MK_COMB (@lem6219709 _123774 op) (@lem6219708 _123774 x op)). Qed.
Lemma lem6219712 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6219713 {_123774 : Type'} (f : type1400 _123774) (x : _123774) : (f x) = (@I (_123774 -> _123774 -> _123774) f x).
Proof. exact (@lem6219712 _123774 (_123774 -> _123774) f x). Qed.
Lemma lem6219714 {_123774 : Type'} (op : type1400 _123774) : (term2330 _123774 op) = (term2332 _123774 op).
Proof. exact (@lem6219713 _123774 op (@I ((_123774 -> _123774 -> _123774) -> _123774) (@neutral _123774) op)). Qed.
Lemma lem6219715 {_123774 : Type'} (x : type402 _123774) (op : type1400 _123774) : (@I ((_123774 -> _123774 -> _123774) -> _123774) x op) = (@I ((_123774 -> _123774 -> _123774) -> _123774) x op).
Proof. exact (eq_refl (@I ((_123774 -> _123774 -> _123774) -> _123774) x op)). Qed.
Lemma lem6219716 {_123774 : Type'} (x : type402 _123774) (op : type1400 _123774) : (term2374 _123774 x op) = (term2375 _123774 x op).
Proof. exact (MK_COMB (@lem6219714 _123774 op) (@lem6219715 _123774 x op)). Qed.
Lemma lem6219718 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6219719 {_123774 : Type'} (f : _123774 -> _123774) (x : _123774) : (f x) = (@I (_123774 -> _123774) f x).
Proof. exact (@lem6219718 _123774 _123774 f x). Qed.
Lemma lem6219720 {_123774 : Type'} (x : type402 _123774) (op : type1400 _123774) : (term2375 _123774 x op) = (term2376 _123774 x op).
Proof. exact (@lem6219719 _123774 (term2332 _123774 op) (@I ((_123774 -> _123774 -> _123774) -> _123774) x op)). Qed.
Lemma lem6219721 {_123774 : Type'} (x : type402 _123774) (op : type1400 _123774) : (term2374 _123774 x op) = (term2376 _123774 x op).
Proof. exact (TRANS (@lem6219716 _123774 x op) (@lem6219720 _123774 x op)). Qed.
Lemma lem6219722 {_123774 : Type'} (x : type402 _123774) (op : type1400 _123774) : (term2373 _123774 x op) = (term2376 _123774 x op).
Proof. exact (TRANS (@lem6219710 _123774 x op) (@lem6219721 _123774 x op)). Qed.
Lemma lem6219727 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6219728 {_123774 : Type'} (f : type402 _123774) (x : type1400 _123774) : (f x) = (@I ((_123774 -> _123774 -> _123774) -> _123774) f x).
Proof. exact (@lem6219727 (type1400 _123774) _123774 f x). Qed.
Lemma lem6219730 {_123774 : Type'} (x : type402 _123774) (op : type1400 _123774) : (x op) = (@I ((_123774 -> _123774 -> _123774) -> _123774) x op).
Proof. exact (@lem6219728 _123774 x op). Qed.
Lemma lem6219731 {_123774 : Type'} (x : type402 _123774) (op : type1400 _123774) : (term2377 _123774 x op) = (term2378 _123774 x op).
Proof. exact (MK_COMB (@lem6219691 _123774) (@lem6219722 _123774 x op)). Qed.
Lemma lem6219732 {_123774 : Type'} (x : type402 _123774) (op : type1400 _123774) : ((term2373 _123774 x op) = (x op)) = ((term2376 _123774 x op) = (@I ((_123774 -> _123774 -> _123774) -> _123774) x op)).
Proof. exact (MK_COMB (@lem6219731 _123774 x op) (@lem6219730 _123774 x op)). Qed.
Lemma lem6219733 {_123774 : Type'} (x : type402 _123774) (op : type1400 _123774) : (term2379 _123774 x op) = (term2380 _123774 x op).
Proof. exact (MK_COMB (@lem6219690) (@lem6219732 _123774 x op)). Qed.
Lemma lem6219734 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem6219735 {_123774 : Type'} : (@eq _123774) = (@eq _123774).
Proof. exact (eq_refl (@eq _123774)). Qed.
Lemma lem6219736 {_123774 : Type'} (op : type1400 _123774) : op = op.
Proof. exact (eq_refl op). Qed.
Lemma lem6219741 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6219742 {_123774 : Type'} (f : type402 _123774) (x : type1400 _123774) : (f x) = (@I ((_123774 -> _123774 -> _123774) -> _123774) f x).
Proof. exact (@lem6219741 (type1400 _123774) _123774 f x). Qed.
Lemma lem6219744 {_123774 : Type'} (x : type402 _123774) (op : type1400 _123774) : (x op) = (@I ((_123774 -> _123774 -> _123774) -> _123774) x op).
Proof. exact (@lem6219742 _123774 x op). Qed.
Lemma lem6219745 {_123774 : Type'} (op : type1400 _123774) : op = op.
Proof. exact (eq_refl op). Qed.
Lemma lem6219750 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6219751 {_123774 : Type'} (f : type402 _123774) (x : type1400 _123774) : (f x) = (@I ((_123774 -> _123774 -> _123774) -> _123774) f x).
Proof. exact (@lem6219750 (type1400 _123774) _123774 f x). Qed.
Lemma lem6219753 {_123774 : Type'} (y : type402 _123774) (op : type1400 _123774) : (y op) = (@I ((_123774 -> _123774 -> _123774) -> _123774) y op).
Proof. exact (@lem6219751 _123774 y op). Qed.
Lemma lem6219758 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6219759 {_123774 : Type'} (f : type402 _123774) (x : type1400 _123774) : (f x) = (@I ((_123774 -> _123774 -> _123774) -> _123774) f x).
Proof. exact (@lem6219758 (type1400 _123774) _123774 f x). Qed.
Lemma lem6219761 {_123774 : Type'} (z : type402 _123774) (op : type1400 _123774) : (z op) = (@I ((_123774 -> _123774 -> _123774) -> _123774) z op).
Proof. exact (@lem6219759 _123774 z op). Qed.
Lemma lem6219762 {_123774 : Type'} (y : type402 _123774) (op : type1400 _123774) : (term2381 _123774 y op) = (term2382 _123774 y op).
Proof. exact (MK_COMB (@lem6219745 _123774 op) (@lem6219753 _123774 y op)). Qed.
Lemma lem6219763 {_123774 : Type'} (y : type402 _123774) (z : type402 _123774) (op : type1400 _123774) : (term2383 _123774 y z op) = (term2384 _123774 y z op).
Proof. exact (MK_COMB (@lem6219762 _123774 y op) (@lem6219761 _123774 z op)). Qed.
Lemma lem6219765 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6219766 {_123774 : Type'} (f : type1400 _123774) (x : _123774) : (f x) = (@I (_123774 -> _123774 -> _123774) f x).
Proof. exact (@lem6219765 _123774 (_123774 -> _123774) f x). Qed.
Lemma lem6219767 {_123774 : Type'} (y : type402 _123774) (op : type1400 _123774) : (term2382 _123774 y op) = (term2385 _123774 y op).
Proof. exact (@lem6219766 _123774 op (@I ((_123774 -> _123774 -> _123774) -> _123774) y op)). Qed.
Lemma lem6219768 {_123774 : Type'} (z : type402 _123774) (op : type1400 _123774) : (@I ((_123774 -> _123774 -> _123774) -> _123774) z op) = (@I ((_123774 -> _123774 -> _123774) -> _123774) z op).
Proof. exact (eq_refl (@I ((_123774 -> _123774 -> _123774) -> _123774) z op)). Qed.
Lemma lem6219769 {_123774 : Type'} (y : type402 _123774) (z : type402 _123774) (op : type1400 _123774) : (term2384 _123774 y z op) = (term2386 _123774 y z op).
Proof. exact (MK_COMB (@lem6219767 _123774 y op) (@lem6219768 _123774 z op)). Qed.
Lemma lem6219771 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6219772 {_123774 : Type'} (f : _123774 -> _123774) (x : _123774) : (f x) = (@I (_123774 -> _123774) f x).
Proof. exact (@lem6219771 _123774 _123774 f x). Qed.
Lemma lem6219773 {_123774 : Type'} (y : type402 _123774) (z : type402 _123774) (op : type1400 _123774) : (term2386 _123774 y z op) = (term2387 _123774 y z op).
Proof. exact (@lem6219772 _123774 (term2385 _123774 y op) (@I ((_123774 -> _123774 -> _123774) -> _123774) z op)). Qed.
Lemma lem6219774 {_123774 : Type'} (y : type402 _123774) (z : type402 _123774) (op : type1400 _123774) : (term2384 _123774 y z op) = (term2387 _123774 y z op).
Proof. exact (TRANS (@lem6219769 _123774 y z op) (@lem6219773 _123774 y z op)). Qed.
Lemma lem6219775 {_123774 : Type'} (y : type402 _123774) (z : type402 _123774) (op : type1400 _123774) : (term2383 _123774 y z op) = (term2387 _123774 y z op).
Proof. exact (TRANS (@lem6219763 _123774 y z op) (@lem6219774 _123774 y z op)). Qed.
Lemma lem6219776 {_123774 : Type'} (x : type402 _123774) (op : type1400 _123774) : (term2381 _123774 x op) = (term2382 _123774 x op).
Proof. exact (MK_COMB (@lem6219736 _123774 op) (@lem6219744 _123774 x op)). Qed.
Lemma lem6219777 {_123774 : Type'} (x : type402 _123774) (y : type402 _123774) (z : type402 _123774) (op : type1400 _123774) : (term2388 _123774 x y z op) = (term2389 _123774 x y z op).
Proof. exact (MK_COMB (@lem6219776 _123774 x op) (@lem6219775 _123774 y z op)). Qed.
Lemma lem6219779 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6219780 {_123774 : Type'} (f : type1400 _123774) (x : _123774) : (f x) = (@I (_123774 -> _123774 -> _123774) f x).
Proof. exact (@lem6219779 _123774 (_123774 -> _123774) f x). Qed.
Lemma lem6219781 {_123774 : Type'} (x : type402 _123774) (op : type1400 _123774) : (term2382 _123774 x op) = (term2385 _123774 x op).
Proof. exact (@lem6219780 _123774 op (@I ((_123774 -> _123774 -> _123774) -> _123774) x op)). Qed.
Lemma lem6219782 {_123774 : Type'} (y : type402 _123774) (z : type402 _123774) (op : type1400 _123774) : (term2387 _123774 y z op) = (term2387 _123774 y z op).
Proof. exact (eq_refl (term2387 _123774 y z op)). Qed.
Lemma lem6219783 {_123774 : Type'} (x : type402 _123774) (y : type402 _123774) (z : type402 _123774) (op : type1400 _123774) : (term2389 _123774 x y z op) = (term2390 _123774 x y z op).
Proof. exact (MK_COMB (@lem6219781 _123774 x op) (@lem6219782 _123774 y z op)). Qed.
Lemma lem6219785 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6219786 {_123774 : Type'} (f : _123774 -> _123774) (x : _123774) : (f x) = (@I (_123774 -> _123774) f x).
Proof. exact (@lem6219785 _123774 _123774 f x). Qed.
Lemma lem6219787 {_123774 : Type'} (x : type402 _123774) (y : type402 _123774) (z : type402 _123774) (op : type1400 _123774) : (term2390 _123774 x y z op) = (term2391 _123774 x y z op).
Proof. exact (@lem6219786 _123774 (term2385 _123774 x op) (term2387 _123774 y z op)). Qed.
Lemma lem6219788 {_123774 : Type'} (x : type402 _123774) (y : type402 _123774) (z : type402 _123774) (op : type1400 _123774) : (term2389 _123774 x y z op) = (term2391 _123774 x y z op).
Proof. exact (TRANS (@lem6219783 _123774 x y z op) (@lem6219787 _123774 x y z op)). Qed.
Lemma lem6219789 {_123774 : Type'} (x : type402 _123774) (y : type402 _123774) (z : type402 _123774) (op : type1400 _123774) : (term2388 _123774 x y z op) = (term2391 _123774 x y z op).
Proof. exact (TRANS (@lem6219777 _123774 x y z op) (@lem6219788 _123774 x y z op)). Qed.
Lemma lem6219790 {_123774 : Type'} (op : type1400 _123774) : op = op.
Proof. exact (eq_refl op). Qed.
Lemma lem6219791 {_123774 : Type'} (op : type1400 _123774) : op = op.
Proof. exact (eq_refl op). Qed.
Lemma lem6219796 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6219797 {_123774 : Type'} (f : type402 _123774) (x : type1400 _123774) : (f x) = (@I ((_123774 -> _123774 -> _123774) -> _123774) f x).
Proof. exact (@lem6219796 (type1400 _123774) _123774 f x). Qed.
Lemma lem6219799 {_123774 : Type'} (x : type402 _123774) (op : type1400 _123774) : (x op) = (@I ((_123774 -> _123774 -> _123774) -> _123774) x op).
Proof. exact (@lem6219797 _123774 x op). Qed.
Lemma lem6219804 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6219805 {_123774 : Type'} (f : type402 _123774) (x : type1400 _123774) : (f x) = (@I ((_123774 -> _123774 -> _123774) -> _123774) f x).
Proof. exact (@lem6219804 (type1400 _123774) _123774 f x). Qed.
Lemma lem6219807 {_123774 : Type'} (y : type402 _123774) (op : type1400 _123774) : (y op) = (@I ((_123774 -> _123774 -> _123774) -> _123774) y op).
Proof. exact (@lem6219805 _123774 y op). Qed.
Lemma lem6219808 {_123774 : Type'} (x : type402 _123774) (op : type1400 _123774) : (term2381 _123774 x op) = (term2382 _123774 x op).
Proof. exact (MK_COMB (@lem6219791 _123774 op) (@lem6219799 _123774 x op)). Qed.
Lemma lem6219809 {_123774 : Type'} (x : type402 _123774) (y : type402 _123774) (op : type1400 _123774) : (term2383 _123774 x y op) = (term2384 _123774 x y op).
Proof. exact (MK_COMB (@lem6219808 _123774 x op) (@lem6219807 _123774 y op)). Qed.
Lemma lem6219811 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6219812 {_123774 : Type'} (f : type1400 _123774) (x : _123774) : (f x) = (@I (_123774 -> _123774 -> _123774) f x).
Proof. exact (@lem6219811 _123774 (_123774 -> _123774) f x). Qed.
Lemma lem6219813 {_123774 : Type'} (x : type402 _123774) (op : type1400 _123774) : (term2382 _123774 x op) = (term2385 _123774 x op).
Proof. exact (@lem6219812 _123774 op (@I ((_123774 -> _123774 -> _123774) -> _123774) x op)). Qed.
Lemma lem6219814 {_123774 : Type'} (y : type402 _123774) (op : type1400 _123774) : (@I ((_123774 -> _123774 -> _123774) -> _123774) y op) = (@I ((_123774 -> _123774 -> _123774) -> _123774) y op).
Proof. exact (eq_refl (@I ((_123774 -> _123774 -> _123774) -> _123774) y op)). Qed.
Lemma lem6219815 {_123774 : Type'} (x : type402 _123774) (y : type402 _123774) (op : type1400 _123774) : (term2384 _123774 x y op) = (term2386 _123774 x y op).
Proof. exact (MK_COMB (@lem6219813 _123774 x op) (@lem6219814 _123774 y op)). Qed.
Lemma lem6219817 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6219818 {_123774 : Type'} (f : _123774 -> _123774) (x : _123774) : (f x) = (@I (_123774 -> _123774) f x).
Proof. exact (@lem6219817 _123774 _123774 f x). Qed.
Lemma lem6219819 {_123774 : Type'} (x : type402 _123774) (y : type402 _123774) (op : type1400 _123774) : (term2386 _123774 x y op) = (term2387 _123774 x y op).
Proof. exact (@lem6219818 _123774 (term2385 _123774 x op) (@I ((_123774 -> _123774 -> _123774) -> _123774) y op)). Qed.
Lemma lem6219820 {_123774 : Type'} (x : type402 _123774) (y : type402 _123774) (op : type1400 _123774) : (term2384 _123774 x y op) = (term2387 _123774 x y op).
Proof. exact (TRANS (@lem6219815 _123774 x y op) (@lem6219819 _123774 x y op)). Qed.
Lemma lem6219821 {_123774 : Type'} (x : type402 _123774) (y : type402 _123774) (op : type1400 _123774) : (term2383 _123774 x y op) = (term2387 _123774 x y op).
Proof. exact (TRANS (@lem6219809 _123774 x y op) (@lem6219820 _123774 x y op)). Qed.
Lemma lem6219826 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6219827 {_123774 : Type'} (f : type402 _123774) (x : type1400 _123774) : (f x) = (@I ((_123774 -> _123774 -> _123774) -> _123774) f x).
Proof. exact (@lem6219826 (type1400 _123774) _123774 f x). Qed.
Lemma lem6219829 {_123774 : Type'} (z : type402 _123774) (op : type1400 _123774) : (z op) = (@I ((_123774 -> _123774 -> _123774) -> _123774) z op).
Proof. exact (@lem6219827 _123774 z op). Qed.
Lemma lem6219830 {_123774 : Type'} (x : type402 _123774) (y : type402 _123774) (op : type1400 _123774) : (term2392 _123774 x y op) = (term2393 _123774 x y op).
Proof. exact (MK_COMB (@lem6219790 _123774 op) (@lem6219821 _123774 x y op)). Qed.
Lemma lem6219831 {_123774 : Type'} (x : type402 _123774) (y : type402 _123774) (z : type402 _123774) (op : type1400 _123774) : (term2394 _123774 x y z op) = (term2395 _123774 x y z op).
Proof. exact (MK_COMB (@lem6219830 _123774 x y op) (@lem6219829 _123774 z op)). Qed.
Lemma lem6219833 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6219834 {_123774 : Type'} (f : type1400 _123774) (x : _123774) : (f x) = (@I (_123774 -> _123774 -> _123774) f x).
Proof. exact (@lem6219833 _123774 (_123774 -> _123774) f x). Qed.
Lemma lem6219835 {_123774 : Type'} (x : type402 _123774) (y : type402 _123774) (op : type1400 _123774) : (term2393 _123774 x y op) = (term2396 _123774 x y op).
Proof. exact (@lem6219834 _123774 op (term2387 _123774 x y op)). Qed.
Lemma lem6219836 {_123774 : Type'} (z : type402 _123774) (op : type1400 _123774) : (@I ((_123774 -> _123774 -> _123774) -> _123774) z op) = (@I ((_123774 -> _123774 -> _123774) -> _123774) z op).
Proof. exact (eq_refl (@I ((_123774 -> _123774 -> _123774) -> _123774) z op)). Qed.
Lemma lem6219837 {_123774 : Type'} (x : type402 _123774) (y : type402 _123774) (z : type402 _123774) (op : type1400 _123774) : (term2395 _123774 x y z op) = (term2397 _123774 x y z op).
Proof. exact (MK_COMB (@lem6219835 _123774 x y op) (@lem6219836 _123774 z op)). Qed.
Lemma lem6219839 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6219840 {_123774 : Type'} (f : _123774 -> _123774) (x : _123774) : (f x) = (@I (_123774 -> _123774) f x).
Proof. exact (@lem6219839 _123774 _123774 f x). Qed.
Lemma lem6219841 {_123774 : Type'} (x : type402 _123774) (y : type402 _123774) (z : type402 _123774) (op : type1400 _123774) : (term2397 _123774 x y z op) = (term2398 _123774 x y z op).
Proof. exact (@lem6219840 _123774 (term2396 _123774 x y op) (@I ((_123774 -> _123774 -> _123774) -> _123774) z op)). Qed.
Lemma lem6219842 {_123774 : Type'} (x : type402 _123774) (y : type402 _123774) (z : type402 _123774) (op : type1400 _123774) : (term2395 _123774 x y z op) = (term2398 _123774 x y z op).
Proof. exact (TRANS (@lem6219837 _123774 x y z op) (@lem6219841 _123774 x y z op)). Qed.
Lemma lem6219843 {_123774 : Type'} (x : type402 _123774) (y : type402 _123774) (z : type402 _123774) (op : type1400 _123774) : (term2394 _123774 x y z op) = (term2398 _123774 x y z op).
Proof. exact (TRANS (@lem6219831 _123774 x y z op) (@lem6219842 _123774 x y z op)). Qed.
Lemma lem6219844 {_123774 : Type'} (x : type402 _123774) (y : type402 _123774) (z : type402 _123774) (op : type1400 _123774) : (term2399 _123774 x y z op) = (term2400 _123774 x y z op).
Proof. exact (MK_COMB (@lem6219735 _123774) (@lem6219789 _123774 x y z op)). Qed.
Lemma lem6219845 {_123774 : Type'} (x : type402 _123774) (y : type402 _123774) (z : type402 _123774) (op : type1400 _123774) : ((term2388 _123774 x y z op) = (term2394 _123774 x y z op)) = ((term2391 _123774 x y z op) = (term2398 _123774 x y z op)).
Proof. exact (MK_COMB (@lem6219844 _123774 x y z op) (@lem6219843 _123774 x y z op)). Qed.
Lemma lem6219846 {_123774 : Type'} (x : type402 _123774) (y : type402 _123774) (z : type402 _123774) (op : type1400 _123774) : (term2401 _123774 x y z op) = (term2402 _123774 x y z op).
Proof. exact (MK_COMB (@lem6219734) (@lem6219845 _123774 x y z op)). Qed.
Lemma lem6219847 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6219848 {_123774 : Type'} (x : type402 _123774) (y : type402 _123774) (z : type402 _123774) (op : type1400 _123774) : (term2403 _123774 x y z op) = (term2404 _123774 x y z op).
Proof. exact (MK_COMB (@lem6219847) (@lem6219846 _123774 x y z op)). Qed.
Lemma lem6219849 {_123774 : Type'} (y : type402 _123774) (z : type402 _123774) (x : type402 _123774) (op : type1400 _123774) : (term2405 _123774 y z x op) = (term2406 _123774 y z x op).
Proof. exact (MK_COMB (@lem6219848 _123774 x y z op) (@lem6219733 _123774 x op)). Qed.
Lemma lem6219850 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem6219851 {_123774 : Type'} : (@eq _123774) = (@eq _123774).
Proof. exact (eq_refl (@eq _123774)). Qed.
Lemma lem6219852 {_123774 : Type'} (op : type1400 _123774) : op = op.
Proof. exact (eq_refl op). Qed.
Lemma lem6219857 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6219858 {_123774 : Type'} (f : type402 _123774) (x : type1400 _123774) : (f x) = (@I ((_123774 -> _123774 -> _123774) -> _123774) f x).
Proof. exact (@lem6219857 (type1400 _123774) _123774 f x). Qed.
Lemma lem6219860 {_123774 : Type'} (x : type402 _123774) (op : type1400 _123774) : (x op) = (@I ((_123774 -> _123774 -> _123774) -> _123774) x op).
Proof. exact (@lem6219858 _123774 x op). Qed.
Lemma lem6219865 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6219866 {_123774 : Type'} (f : type402 _123774) (x : type1400 _123774) : (f x) = (@I ((_123774 -> _123774 -> _123774) -> _123774) f x).
Proof. exact (@lem6219865 (type1400 _123774) _123774 f x). Qed.
Lemma lem6219868 {_123774 : Type'} (y : type402 _123774) (op : type1400 _123774) : (y op) = (@I ((_123774 -> _123774 -> _123774) -> _123774) y op).
Proof. exact (@lem6219866 _123774 y op). Qed.
Lemma lem6219869 {_123774 : Type'} (x : type402 _123774) (op : type1400 _123774) : (term2381 _123774 x op) = (term2382 _123774 x op).
Proof. exact (MK_COMB (@lem6219852 _123774 op) (@lem6219860 _123774 x op)). Qed.
Lemma lem6219870 {_123774 : Type'} (x : type402 _123774) (y : type402 _123774) (op : type1400 _123774) : (term2383 _123774 x y op) = (term2384 _123774 x y op).
Proof. exact (MK_COMB (@lem6219869 _123774 x op) (@lem6219868 _123774 y op)). Qed.
Lemma lem6219872 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6219873 {_123774 : Type'} (f : type1400 _123774) (x : _123774) : (f x) = (@I (_123774 -> _123774 -> _123774) f x).
Proof. exact (@lem6219872 _123774 (_123774 -> _123774) f x). Qed.
Lemma lem6219874 {_123774 : Type'} (x : type402 _123774) (op : type1400 _123774) : (term2382 _123774 x op) = (term2385 _123774 x op).
Proof. exact (@lem6219873 _123774 op (@I ((_123774 -> _123774 -> _123774) -> _123774) x op)). Qed.
Lemma lem6219875 {_123774 : Type'} (y : type402 _123774) (op : type1400 _123774) : (@I ((_123774 -> _123774 -> _123774) -> _123774) y op) = (@I ((_123774 -> _123774 -> _123774) -> _123774) y op).
Proof. exact (eq_refl (@I ((_123774 -> _123774 -> _123774) -> _123774) y op)). Qed.
Lemma lem6219876 {_123774 : Type'} (x : type402 _123774) (y : type402 _123774) (op : type1400 _123774) : (term2384 _123774 x y op) = (term2386 _123774 x y op).
Proof. exact (MK_COMB (@lem6219874 _123774 x op) (@lem6219875 _123774 y op)). Qed.
Lemma lem6219878 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6219879 {_123774 : Type'} (f : _123774 -> _123774) (x : _123774) : (f x) = (@I (_123774 -> _123774) f x).
Proof. exact (@lem6219878 _123774 _123774 f x). Qed.
Lemma lem6219880 {_123774 : Type'} (x : type402 _123774) (y : type402 _123774) (op : type1400 _123774) : (term2386 _123774 x y op) = (term2387 _123774 x y op).
Proof. exact (@lem6219879 _123774 (term2385 _123774 x op) (@I ((_123774 -> _123774 -> _123774) -> _123774) y op)). Qed.
Lemma lem6219881 {_123774 : Type'} (x : type402 _123774) (y : type402 _123774) (op : type1400 _123774) : (term2384 _123774 x y op) = (term2387 _123774 x y op).
Proof. exact (TRANS (@lem6219876 _123774 x y op) (@lem6219880 _123774 x y op)). Qed.
Lemma lem6219882 {_123774 : Type'} (x : type402 _123774) (y : type402 _123774) (op : type1400 _123774) : (term2383 _123774 x y op) = (term2387 _123774 x y op).
Proof. exact (TRANS (@lem6219870 _123774 x y op) (@lem6219881 _123774 x y op)). Qed.
Lemma lem6219883 {_123774 : Type'} (op : type1400 _123774) : op = op.
Proof. exact (eq_refl op). Qed.
Lemma lem6219888 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6219889 {_123774 : Type'} (f : type402 _123774) (x : type1400 _123774) : (f x) = (@I ((_123774 -> _123774 -> _123774) -> _123774) f x).
Proof. exact (@lem6219888 (type1400 _123774) _123774 f x). Qed.
Lemma lem6219891 {_123774 : Type'} (y : type402 _123774) (op : type1400 _123774) : (y op) = (@I ((_123774 -> _123774 -> _123774) -> _123774) y op).
Proof. exact (@lem6219889 _123774 y op). Qed.
Lemma lem6219896 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6219897 {_123774 : Type'} (f : type402 _123774) (x : type1400 _123774) : (f x) = (@I ((_123774 -> _123774 -> _123774) -> _123774) f x).
Proof. exact (@lem6219896 (type1400 _123774) _123774 f x). Qed.
Lemma lem6219899 {_123774 : Type'} (x : type402 _123774) (op : type1400 _123774) : (x op) = (@I ((_123774 -> _123774 -> _123774) -> _123774) x op).
Proof. exact (@lem6219897 _123774 x op). Qed.
Lemma lem6219900 {_123774 : Type'} (y : type402 _123774) (op : type1400 _123774) : (term2381 _123774 y op) = (term2382 _123774 y op).
Proof. exact (MK_COMB (@lem6219883 _123774 op) (@lem6219891 _123774 y op)). Qed.
Lemma lem6219901 {_123774 : Type'} (y : type402 _123774) (x : type402 _123774) (op : type1400 _123774) : (term2383 _123774 y x op) = (term2384 _123774 y x op).
Proof. exact (MK_COMB (@lem6219900 _123774 y op) (@lem6219899 _123774 x op)). Qed.
Lemma lem6219903 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6219904 {_123774 : Type'} (f : type1400 _123774) (x : _123774) : (f x) = (@I (_123774 -> _123774 -> _123774) f x).
Proof. exact (@lem6219903 _123774 (_123774 -> _123774) f x). Qed.
Lemma lem6219905 {_123774 : Type'} (y : type402 _123774) (op : type1400 _123774) : (term2382 _123774 y op) = (term2385 _123774 y op).
Proof. exact (@lem6219904 _123774 op (@I ((_123774 -> _123774 -> _123774) -> _123774) y op)). Qed.
Lemma lem6219906 {_123774 : Type'} (x : type402 _123774) (op : type1400 _123774) : (@I ((_123774 -> _123774 -> _123774) -> _123774) x op) = (@I ((_123774 -> _123774 -> _123774) -> _123774) x op).
Proof. exact (eq_refl (@I ((_123774 -> _123774 -> _123774) -> _123774) x op)). Qed.
Lemma lem6219907 {_123774 : Type'} (y : type402 _123774) (x : type402 _123774) (op : type1400 _123774) : (term2384 _123774 y x op) = (term2386 _123774 y x op).
Proof. exact (MK_COMB (@lem6219905 _123774 y op) (@lem6219906 _123774 x op)). Qed.
Lemma lem6219909 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6219910 {_123774 : Type'} (f : _123774 -> _123774) (x : _123774) : (f x) = (@I (_123774 -> _123774) f x).
Proof. exact (@lem6219909 _123774 _123774 f x). Qed.
Lemma lem6219911 {_123774 : Type'} (y : type402 _123774) (x : type402 _123774) (op : type1400 _123774) : (term2386 _123774 y x op) = (term2387 _123774 y x op).
Proof. exact (@lem6219910 _123774 (term2385 _123774 y op) (@I ((_123774 -> _123774 -> _123774) -> _123774) x op)). Qed.
Lemma lem6219912 {_123774 : Type'} (y : type402 _123774) (x : type402 _123774) (op : type1400 _123774) : (term2384 _123774 y x op) = (term2387 _123774 y x op).
Proof. exact (TRANS (@lem6219907 _123774 y x op) (@lem6219911 _123774 y x op)). Qed.
Lemma lem6219913 {_123774 : Type'} (y : type402 _123774) (x : type402 _123774) (op : type1400 _123774) : (term2383 _123774 y x op) = (term2387 _123774 y x op).
Proof. exact (TRANS (@lem6219901 _123774 y x op) (@lem6219912 _123774 y x op)). Qed.
Lemma lem6219914 {_123774 : Type'} (x : type402 _123774) (y : type402 _123774) (op : type1400 _123774) : (term2407 _123774 x y op) = (term2408 _123774 x y op).
Proof. exact (MK_COMB (@lem6219851 _123774) (@lem6219882 _123774 x y op)). Qed.
Lemma lem6219915 {_123774 : Type'} (y : type402 _123774) (x : type402 _123774) (op : type1400 _123774) : ((term2383 _123774 x y op) = (term2383 _123774 y x op)) = ((term2387 _123774 x y op) = (term2387 _123774 y x op)).
Proof. exact (MK_COMB (@lem6219914 _123774 x y op) (@lem6219913 _123774 y x op)). Qed.
Lemma lem6219916 {_123774 : Type'} (y : type402 _123774) (x : type402 _123774) (op : type1400 _123774) : (term2409 _123774 y x op) = (term2410 _123774 y x op).
Proof. exact (MK_COMB (@lem6219850) (@lem6219915 _123774 y x op)). Qed.
Lemma lem6219917 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6219918 {_123774 : Type'} (y : type402 _123774) (x : type402 _123774) (op : type1400 _123774) : (term2411 _123774 y x op) = (term2412 _123774 y x op).
Proof. exact (MK_COMB (@lem6219917) (@lem6219916 _123774 y x op)). Qed.
Lemma lem6219919 {_123774 : Type'} (y : type402 _123774) (z : type402 _123774) (x : type402 _123774) (op : type1400 _123774) : (term2413 _123774 y z x op) = (term2414 _123774 y z x op).
Proof. exact (MK_COMB (@lem6219918 _123774 y x op) (@lem6219849 _123774 y z x op)). Qed.
Lemma lem6219924 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem6219925 {_123774 : Type'} (f : type403 _123774) (x : type1400 _123774) : (f x) = (@I ((_123774 -> _123774 -> _123774) -> Prop) f x).
Proof. exact (@lem6219924 (type1400 _123774) Prop f x). Qed.
Lemma lem6219927 {_123774 : Type'} (op : type1400 _123774) : (@monoidal _123774 op) = (@I ((_123774 -> _123774 -> _123774) -> Prop) (@monoidal _123774) op).
Proof. exact (@lem6219925 _123774 (@monoidal _123774) op). Qed.
Lemma lem6219928 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6219929 {_123774 : Type'} (op : type1400 _123774) : (term1960 _123774 op) = (term2415 _123774 op).
Proof. exact (MK_COMB (@lem6219928) (@lem6219927 _123774 op)). Qed.
Lemma lem6219930 {_123774 : Type'} (y : type402 _123774) (z : type402 _123774) (x : type402 _123774) (op : type1400 _123774) : (term2210 _123774 y z x op) = (term2416 _123774 y z x op).
Proof. exact (MK_COMB (@lem6219929 _123774 op) (@lem6219919 _123774 y z x op)). Qed.
Lemma lem6219931 {_123774 : Type'} (y : type402 _123774) (z : type402 _123774) (x : type402 _123774) : (term2212 _123774 y z x) = (term2417 _123774 y z x).
Proof. exact (fun_ext (fun op : type1400 _123774 => @lem6219930 _123774 y z x op)). Qed.
Lemma lem6219932 {_123774 : Type'} : (@all (_123774 -> _123774 -> _123774)) = (@all (_123774 -> _123774 -> _123774)).
Proof. exact (eq_refl (@all (_123774 -> _123774 -> _123774))). Qed.
Lemma lem6219933 {_123774 : Type'} (y : type402 _123774) (z : type402 _123774) (x : type402 _123774) : (term2214 _123774 y z x) = (term2418 _123774 y z x).
Proof. exact (MK_COMB (@lem6219932 _123774) (@lem6219931 _123774 y z x)). Qed.
Lemma lem6219934 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6219935 {_123774 : Type'} (y : type402 _123774) (z : type402 _123774) (x : type402 _123774) : (term2267 _123774 y z x) = (term2419 _123774 y z x).
Proof. exact (MK_COMB (@lem6219934) (@lem6219933 _123774 y z x)). Qed.
Lemma lem6219936 {_123774 : Type'} (y : type402 _123774) (z : type402 _123774) (x : type402 _123774) : (term2269 _123774 y z x) = (term2420 _123774 y z x).
Proof. exact (MK_COMB (@lem6219935 _123774 y z x) (@lem6219689 _123774)). Qed.
Lemma lem6219937 {_123774 : Type'} (y : type402 _123774) (z : type402 _123774) (x : type402 _123774) (h1 : term2269 _123774 y z x) : term2420 _123774 y z x.
Proof. exact (EQ_MP (@lem6219936 _123774 y z x) (@lem6218575 _123774 y z x h1)). Qed.
Lemma lem6219938 {_123774 : Type'} (y : type402 _123774) (z : type402 _123774) (x : type402 _123774) (h1 : term2269 _123774 y z x) : term2372 _123774.
Proof. exact (proj2 (@lem6219937 _123774 y z x h1)). Qed.
Lemma lem6219995 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term1970 A P Q) = (term1969 A P Q).
Proof. exact (EQ_MP (@lem19031 A P Q) (@lem19030 A P Q)). Qed.
Lemma lem6219996 {_123774 : Type'} (P : _123774 -> Prop) (Q : _123774 -> Prop) : (term1970 _123774 P Q) = (term1969 _123774 P Q).
Proof. exact (@lem6219995 _123774 P Q). Qed.
Lemma lem6219997 {_123774 : Type'} (op : type1400 _123774) : (term2421 _123774 op) = (term2422 _123774 op).
Proof. exact (@lem6219996 _123774 (term2355 _123774 op) (term2337 _123774 op)). Qed.
Lemma lem6219998 {_123774 : Type'} (op : type1400 _123774) (x : _123774) : (term2423 _123774 op x) = (term2354 _123774 op x).
Proof. exact (eq_refl (term2423 _123774 op x)). Qed.
Lemma lem6219999 {_123774 : Type'} (op : type1400 _123774) : (term2424 _123774 op) = (term2355 _123774 op).
Proof. exact (fun_ext (fun x : _123774 => @lem6219998 _123774 op x)). Qed.
Lemma lem6220000 {_123774 : Type'} : (@all _123774) = (@all _123774).
Proof. exact (eq_refl (@all _123774)). Qed.
Lemma lem6220001 {_123774 : Type'} (op : type1400 _123774) : (term2425 _123774 op) = (term2356 _123774 op).
Proof. exact (MK_COMB (@lem6220000 _123774) (@lem6219999 _123774 op)). Qed.
Lemma lem6220002 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6220003 {_123774 : Type'} (op : type1400 _123774) : (term2426 _123774 op) = (term2357 _123774 op).
Proof. exact (MK_COMB (@lem6220002) (@lem6220001 _123774 op)). Qed.
Lemma lem6220004 {_123774 : Type'} (op : type1400 _123774) (x : _123774) : (term2427 _123774 op x) = ((term2334 _123774 op x) = x).
Proof. exact (eq_refl (term2427 _123774 op x)). Qed.
Lemma lem6220005 {_123774 : Type'} (op : type1400 _123774) : (term2428 _123774 op) = (term2337 _123774 op).
Proof. exact (fun_ext (fun x : _123774 => @lem6220004 _123774 op x)). Qed.
Lemma lem6220006 {_123774 : Type'} : (@all _123774) = (@all _123774).
Proof. exact (eq_refl (@all _123774)). Qed.
Lemma lem6220007 {_123774 : Type'} (op : type1400 _123774) : (term2429 _123774 op) = (term2338 _123774 op).
Proof. exact (MK_COMB (@lem6220006 _123774) (@lem6220005 _123774 op)). Qed.
Lemma lem6220008 {_123774 : Type'} (op : type1400 _123774) : (term2421 _123774 op) = (term2358 _123774 op).
Proof. exact (MK_COMB (@lem6220003 _123774 op) (@lem6220007 _123774 op)). Qed.
Lemma lem6220009 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6220010 {_123774 : Type'} (op : type1400 _123774) : (term2430 _123774 op) = (term2431 _123774 op).
Proof. exact (MK_COMB (@lem6220009) (@lem6220008 _123774 op)). Qed.
Lemma lem6220011 {_123774 : Type'} (op : type1400 _123774) (x : _123774) : (term2423 _123774 op x) = (term2354 _123774 op x).
Proof. exact (eq_refl (term2423 _123774 op x)). Qed.
Lemma lem6220012 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6220013 {_123774 : Type'} (op : type1400 _123774) (x : _123774) : (term2432 _123774 op x) = (term2433 _123774 op x).
Proof. exact (MK_COMB (@lem6220012) (@lem6220011 _123774 op x)). Qed.
Lemma lem6220014 {_123774 : Type'} (op : type1400 _123774) (x : _123774) : (term2427 _123774 op x) = ((term2334 _123774 op x) = x).
Proof. exact (eq_refl (term2427 _123774 op x)). Qed.
Lemma lem6220015 {_123774 : Type'} (op : type1400 _123774) (x : _123774) : (term2434 _123774 op x) = (term2435 _123774 op x).
Proof. exact (MK_COMB (@lem6220013 _123774 op x) (@lem6220014 _123774 op x)). Qed.
Lemma lem6220016 {_123774 : Type'} (op : type1400 _123774) : (term2436 _123774 op) = (term2437 _123774 op).
Proof. exact (fun_ext (fun x : _123774 => @lem6220015 _123774 op x)). Qed.
Lemma lem6220017 {_123774 : Type'} : (@all _123774) = (@all _123774).
Proof. exact (eq_refl (@all _123774)). Qed.
Lemma lem6220018 {_123774 : Type'} (op : type1400 _123774) : (term2422 _123774 op) = (term2438 _123774 op).
Proof. exact (MK_COMB (@lem6220017 _123774) (@lem6220016 _123774 op)). Qed.
Lemma lem6220019 {_123774 : Type'} (op : type1400 _123774) : ((term2421 _123774 op) = (term2422 _123774 op)) = ((term2358 _123774 op) = (term2438 _123774 op)).
Proof. exact (MK_COMB (@lem6220010 _123774 op) (@lem6220018 _123774 op)). Qed.
Lemma lem6220020 {_123774 : Type'} (op : type1400 _123774) : (term2358 _123774 op) = (term2438 _123774 op).
Proof. exact (EQ_MP (@lem6220019 _123774 op) (@lem6219997 _123774 op)). Qed.
Lemma lem6220022 {A : Type'} (P : A -> Prop) (Q : Prop) : (term2439 A P Q) = (term2440 A P Q).
Proof. exact (EQ_MP (@lem19025 A P Q) (@lem19024 A P Q)). Qed.
Lemma lem6220023 {_123774 : Type'} (P : _123774 -> Prop) (Q : Prop) : (term2439 _123774 P Q) = (term2440 _123774 P Q).
Proof. exact (@lem6220022 _123774 P Q). Qed.
Lemma lem6220024 {_123774 : Type'} (op : type1400 _123774) (x : _123774) : (term2441 _123774 op x) = (term2442 _123774 op x).
Proof. exact (@lem6220023 _123774 (term2353 _123774 op x) ((term2334 _123774 op x) = x)). Qed.
Lemma lem6220025 {_123774 : Type'} (op : type1400 _123774) (x : _123774) (y : _123774) : (term2443 _123774 op x y) = (term2352 _123774 op x y).
Proof. exact (eq_refl (term2443 _123774 op x y)). Qed.
Lemma lem6220026 {_123774 : Type'} (op : type1400 _123774) (x : _123774) : (term2444 _123774 op x) = (term2353 _123774 op x).
Proof. exact (fun_ext (fun y : _123774 => @lem6220025 _123774 op x y)). Qed.
Lemma lem6220027 {_123774 : Type'} : (@all _123774) = (@all _123774).
Proof. exact (eq_refl (@all _123774)). Qed.
Lemma lem6220028 {_123774 : Type'} (op : type1400 _123774) (x : _123774) : (term2445 _123774 op x) = (term2354 _123774 op x).
Proof. exact (MK_COMB (@lem6220027 _123774) (@lem6220026 _123774 op x)). Qed.
Lemma lem6220029 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6220030 {_123774 : Type'} (op : type1400 _123774) (x : _123774) : (term2446 _123774 op x) = (term2433 _123774 op x).
Proof. exact (MK_COMB (@lem6220029) (@lem6220028 _123774 op x)). Qed.
Lemma lem6220031 {_123774 : Type'} (op : type1400 _123774) (x : _123774) : ((term2334 _123774 op x) = x) = ((term2334 _123774 op x) = x).
Proof. exact (eq_refl ((term2334 _123774 op x) = x)). Qed.
Lemma lem6220032 {_123774 : Type'} (op : type1400 _123774) (x : _123774) : (term2441 _123774 op x) = (term2435 _123774 op x).
Proof. exact (MK_COMB (@lem6220030 _123774 op x) (@lem6220031 _123774 op x)). Qed.
Lemma lem6220033 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6220034 {_123774 : Type'} (op : type1400 _123774) (x : _123774) : (term2447 _123774 op x) = (term2448 _123774 op x).
Proof. exact (MK_COMB (@lem6220033) (@lem6220032 _123774 op x)). Qed.
Lemma lem6220035 {_123774 : Type'} (op : type1400 _123774) (x : _123774) (y : _123774) : (term2443 _123774 op x y) = (term2352 _123774 op x y).
Proof. exact (eq_refl (term2443 _123774 op x y)). Qed.
Lemma lem6220036 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6220037 {_123774 : Type'} (op : type1400 _123774) (x : _123774) (y : _123774) : (term2449 _123774 op x y) = (term2450 _123774 op x y).
Proof. exact (MK_COMB (@lem6220036) (@lem6220035 _123774 op x y)). Qed.
Lemma lem6220038 {_123774 : Type'} (op : type1400 _123774) (x : _123774) : ((term2334 _123774 op x) = x) = ((term2334 _123774 op x) = x).
Proof. exact (eq_refl ((term2334 _123774 op x) = x)). Qed.
Lemma lem6220039 {_123774 : Type'} (y : _123774) (op : type1400 _123774) (x : _123774) : (term2451 _123774 y op x) = (term2452 _123774 y op x).
Proof. exact (MK_COMB (@lem6220037 _123774 op x y) (@lem6220038 _123774 op x)). Qed.
Lemma lem6220040 {_123774 : Type'} (op : type1400 _123774) (x : _123774) : (term2453 _123774 op x) = (term2454 _123774 op x).
Proof. exact (fun_ext (fun y : _123774 => @lem6220039 _123774 y op x)). Qed.
Lemma lem6220041 {_123774 : Type'} : (@all _123774) = (@all _123774).
Proof. exact (eq_refl (@all _123774)). Qed.
Lemma lem6220042 {_123774 : Type'} (op : type1400 _123774) (x : _123774) : (term2442 _123774 op x) = (term2455 _123774 op x).
Proof. exact (MK_COMB (@lem6220041 _123774) (@lem6220040 _123774 op x)). Qed.
Lemma lem6220043 {_123774 : Type'} (op : type1400 _123774) (x : _123774) : ((term2441 _123774 op x) = (term2442 _123774 op x)) = ((term2435 _123774 op x) = (term2455 _123774 op x)).
Proof. exact (MK_COMB (@lem6220034 _123774 op x) (@lem6220042 _123774 op x)). Qed.
Lemma lem6220044 {_123774 : Type'} (op : type1400 _123774) (x : _123774) : (term2435 _123774 op x) = (term2455 _123774 op x).
Proof. exact (EQ_MP (@lem6220043 _123774 op x) (@lem6220024 _123774 op x)). Qed.
Lemma lem6220046 {A : Type'} (P : A -> Prop) (Q : Prop) : (term2439 A P Q) = (term2440 A P Q).
Proof. exact (EQ_MP (@lem19025 A P Q) (@lem19024 A P Q)). Qed.
Lemma lem6220047 {_123774 : Type'} (P : _123774 -> Prop) (Q : Prop) : (term2439 _123774 P Q) = (term2440 _123774 P Q).
Proof. exact (@lem6220046 _123774 P Q). Qed.
Lemma lem6220048 {_123774 : Type'} (y : _123774) (op : type1400 _123774) (x : _123774) : (term2456 _123774 y op x) = (term2457 _123774 y op x).
Proof. exact (@lem6220047 _123774 (term2351 _123774 op x y) ((term2334 _123774 op x) = x)). Qed.
Lemma lem6220049 {_123774 : Type'} (op : type1400 _123774) (x : _123774) (y : _123774) (z : _123774) : (term2458 _123774 op x y z) = ((term2342 _123774 x op y z) = (term2348 _123774 op x y z)).
Proof. exact (eq_refl (term2458 _123774 op x y z)). Qed.
Lemma lem6220050 {_123774 : Type'} (op : type1400 _123774) (x : _123774) (y : _123774) : (term2459 _123774 op x y) = (term2351 _123774 op x y).
Proof. exact (fun_ext (fun z : _123774 => @lem6220049 _123774 op x y z)). Qed.
Lemma lem6220051 {_123774 : Type'} : (@all _123774) = (@all _123774).
Proof. exact (eq_refl (@all _123774)). Qed.
Lemma lem6220052 {_123774 : Type'} (op : type1400 _123774) (x : _123774) (y : _123774) : (term2460 _123774 op x y) = (term2352 _123774 op x y).
Proof. exact (MK_COMB (@lem6220051 _123774) (@lem6220050 _123774 op x y)). Qed.
Lemma lem6220053 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6220054 {_123774 : Type'} (op : type1400 _123774) (x : _123774) (y : _123774) : (term2461 _123774 op x y) = (term2450 _123774 op x y).
Proof. exact (MK_COMB (@lem6220053) (@lem6220052 _123774 op x y)). Qed.
Lemma lem6220055 {_123774 : Type'} (op : type1400 _123774) (x : _123774) : ((term2334 _123774 op x) = x) = ((term2334 _123774 op x) = x).
Proof. exact (eq_refl ((term2334 _123774 op x) = x)). Qed.
Lemma lem6220056 {_123774 : Type'} (y : _123774) (op : type1400 _123774) (x : _123774) : (term2456 _123774 y op x) = (term2452 _123774 y op x).
Proof. exact (MK_COMB (@lem6220054 _123774 op x y) (@lem6220055 _123774 op x)). Qed.
Lemma lem6220057 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6220058 {_123774 : Type'} (y : _123774) (op : type1400 _123774) (x : _123774) : (term2462 _123774 y op x) = (term2463 _123774 y op x).
Proof. exact (MK_COMB (@lem6220057) (@lem6220056 _123774 y op x)). Qed.
Lemma lem6220059 {_123774 : Type'} (op : type1400 _123774) (x : _123774) (y : _123774) (z : _123774) : (term2458 _123774 op x y z) = ((term2342 _123774 x op y z) = (term2348 _123774 op x y z)).
Proof. exact (eq_refl (term2458 _123774 op x y z)). Qed.
Lemma lem6220060 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6220061 {_123774 : Type'} (op : type1400 _123774) (x : _123774) (y : _123774) (z : _123774) : (term2464 _123774 op x y z) = (term2465 _123774 op x y z).
Proof. exact (MK_COMB (@lem6220060) (@lem6220059 _123774 op x y z)). Qed.
Lemma lem6220062 {_123774 : Type'} (op : type1400 _123774) (x : _123774) : ((term2334 _123774 op x) = x) = ((term2334 _123774 op x) = x).
Proof. exact (eq_refl ((term2334 _123774 op x) = x)). Qed.
Lemma lem6220063 {_123774 : Type'} (y : _123774) (z : _123774) (op : type1400 _123774) (x : _123774) : (term2466 _123774 y z op x) = (term2467 _123774 y z op x).
Proof. exact (MK_COMB (@lem6220061 _123774 op x y z) (@lem6220062 _123774 op x)). Qed.
Lemma lem6220064 {_123774 : Type'} (y : _123774) (op : type1400 _123774) (x : _123774) : (term2468 _123774 y op x) = (term2469 _123774 y op x).
Proof. exact (fun_ext (fun z : _123774 => @lem6220063 _123774 y z op x)). Qed.
Lemma lem6220065 {_123774 : Type'} : (@all _123774) = (@all _123774).
Proof. exact (eq_refl (@all _123774)). Qed.
Lemma lem6220066 {_123774 : Type'} (y : _123774) (op : type1400 _123774) (x : _123774) : (term2457 _123774 y op x) = (term2470 _123774 y op x).
Proof. exact (MK_COMB (@lem6220065 _123774) (@lem6220064 _123774 y op x)). Qed.
Lemma lem6220067 {_123774 : Type'} (y : _123774) (op : type1400 _123774) (x : _123774) : ((term2456 _123774 y op x) = (term2457 _123774 y op x)) = ((term2452 _123774 y op x) = (term2470 _123774 y op x)).
Proof. exact (MK_COMB (@lem6220058 _123774 y op x) (@lem6220066 _123774 y op x)). Qed.
Lemma lem6220068 {_123774 : Type'} (y : _123774) (op : type1400 _123774) (x : _123774) : (term2452 _123774 y op x) = (term2470 _123774 y op x).
Proof. exact (EQ_MP (@lem6220067 _123774 y op x) (@lem6220048 _123774 y op x)). Qed.
Lemma lem6220069 {_123774 : Type'} (op : type1400 _123774) (x : _123774) : (term2454 _123774 op x) = (term2471 _123774 op x).
Proof. exact (fun_ext (fun y : _123774 => @lem6220068 _123774 y op x)). Qed.
Lemma lem6220070 {_123774 : Type'} : (@all _123774) = (@all _123774).
Proof. exact (eq_refl (@all _123774)). Qed.
Lemma lem6220071 {_123774 : Type'} (op : type1400 _123774) (x : _123774) : (term2455 _123774 op x) = (term2472 _123774 op x).
Proof. exact (MK_COMB (@lem6220070 _123774) (@lem6220069 _123774 op x)). Qed.
Lemma lem6220072 {_123774 : Type'} (op : type1400 _123774) (x : _123774) : (term2435 _123774 op x) = (term2472 _123774 op x).
Proof. exact (TRANS (@lem6220044 _123774 op x) (@lem6220071 _123774 op x)). Qed.
Lemma lem6220073 {_123774 : Type'} (op : type1400 _123774) : (term2437 _123774 op) = (term2473 _123774 op).
Proof. exact (fun_ext (fun x : _123774 => @lem6220072 _123774 op x)). Qed.
Lemma lem6220074 {_123774 : Type'} : (@all _123774) = (@all _123774).
Proof. exact (eq_refl (@all _123774)). Qed.
Lemma lem6220075 {_123774 : Type'} (op : type1400 _123774) : (term2438 _123774 op) = (term2474 _123774 op).
Proof. exact (MK_COMB (@lem6220074 _123774) (@lem6220073 _123774 op)). Qed.
Lemma lem6220076 {_123774 : Type'} (op : type1400 _123774) : (term2358 _123774 op) = (term2474 _123774 op).
Proof. exact (TRANS (@lem6220020 _123774 op) (@lem6220075 _123774 op)). Qed.
Lemma lem6220077 {_123774 : Type'} (op : type1400 _123774) : (term2365 _123774 op) = (term2365 _123774 op).
Proof. exact (eq_refl (term2365 _123774 op)). Qed.
Lemma lem6220078 {_123774 : Type'} (op : type1400 _123774) : (term2366 _123774 op) = (term2475 _123774 op).
Proof. exact (MK_COMB (@lem6220077 _123774 op) (@lem6220076 _123774 op)). Qed.
Lemma lem6220080 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term1970 A P Q) = (term1969 A P Q).
Proof. exact (EQ_MP (@lem19031 A P Q) (@lem19030 A P Q)). Qed.
Lemma lem6220081 {_123774 : Type'} (P : _123774 -> Prop) (Q : _123774 -> Prop) : (term1970 _123774 P Q) = (term1969 _123774 P Q).
Proof. exact (@lem6220080 _123774 P Q). Qed.
Lemma lem6220082 {_123774 : Type'} (op : type1400 _123774) : (term2476 _123774 op) = (term2477 _123774 op).
Proof. exact (@lem6220081 _123774 (term2363 _123774 op) (term2473 _123774 op)). Qed.
Lemma lem6220083 {_123774 : Type'} (op : type1400 _123774) (x : _123774) : (term2478 _123774 op x) = (term2362 _123774 op x).
Proof. exact (eq_refl (term2478 _123774 op x)). Qed.
Lemma lem6220084 {_123774 : Type'} (op : type1400 _123774) : (term2479 _123774 op) = (term2363 _123774 op).
Proof. exact (fun_ext (fun x : _123774 => @lem6220083 _123774 op x)). Qed.
Lemma lem6220085 {_123774 : Type'} : (@all _123774) = (@all _123774).
Proof. exact (eq_refl (@all _123774)). Qed.
Lemma lem6220086 {_123774 : Type'} (op : type1400 _123774) : (term2480 _123774 op) = (term2364 _123774 op).
Proof. exact (MK_COMB (@lem6220085 _123774) (@lem6220084 _123774 op)). Qed.
Lemma lem6220087 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6220088 {_123774 : Type'} (op : type1400 _123774) : (term2481 _123774 op) = (term2365 _123774 op).
Proof. exact (MK_COMB (@lem6220087) (@lem6220086 _123774 op)). Qed.
Lemma lem6220089 {_123774 : Type'} (op : type1400 _123774) (x : _123774) : (term2482 _123774 op x) = (term2472 _123774 op x).
Proof. exact (eq_refl (term2482 _123774 op x)). Qed.
Lemma lem6220090 {_123774 : Type'} (op : type1400 _123774) : (term2483 _123774 op) = (term2473 _123774 op).
Proof. exact (fun_ext (fun x : _123774 => @lem6220089 _123774 op x)). Qed.
Lemma lem6220091 {_123774 : Type'} : (@all _123774) = (@all _123774).
Proof. exact (eq_refl (@all _123774)). Qed.
Lemma lem6220092 {_123774 : Type'} (op : type1400 _123774) : (term2484 _123774 op) = (term2474 _123774 op).
Proof. exact (MK_COMB (@lem6220091 _123774) (@lem6220090 _123774 op)). Qed.
Lemma lem6220093 {_123774 : Type'} (op : type1400 _123774) : (term2476 _123774 op) = (term2475 _123774 op).
Proof. exact (MK_COMB (@lem6220088 _123774 op) (@lem6220092 _123774 op)). Qed.
Lemma lem6220094 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6220095 {_123774 : Type'} (op : type1400 _123774) : (term2485 _123774 op) = (term2486 _123774 op).
Proof. exact (MK_COMB (@lem6220094) (@lem6220093 _123774 op)). Qed.
Lemma lem6220096 {_123774 : Type'} (op : type1400 _123774) (x : _123774) : (term2478 _123774 op x) = (term2362 _123774 op x).
Proof. exact (eq_refl (term2478 _123774 op x)). Qed.
Lemma lem6220097 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6220098 {_123774 : Type'} (op : type1400 _123774) (x : _123774) : (term2487 _123774 op x) = (term2488 _123774 op x).
Proof. exact (MK_COMB (@lem6220097) (@lem6220096 _123774 op x)). Qed.
Lemma lem6220099 {_123774 : Type'} (op : type1400 _123774) (x : _123774) : (term2482 _123774 op x) = (term2472 _123774 op x).
Proof. exact (eq_refl (term2482 _123774 op x)). Qed.
Lemma lem6220100 {_123774 : Type'} (op : type1400 _123774) (x : _123774) : (term2489 _123774 op x) = (term2490 _123774 op x).
Proof. exact (MK_COMB (@lem6220098 _123774 op x) (@lem6220099 _123774 op x)). Qed.
Lemma lem6220101 {_123774 : Type'} (op : type1400 _123774) : (term2491 _123774 op) = (term2492 _123774 op).
Proof. exact (fun_ext (fun x : _123774 => @lem6220100 _123774 op x)). Qed.
Lemma lem6220102 {_123774 : Type'} : (@all _123774) = (@all _123774).
Proof. exact (eq_refl (@all _123774)). Qed.
Lemma lem6220103 {_123774 : Type'} (op : type1400 _123774) : (term2477 _123774 op) = (term2493 _123774 op).
Proof. exact (MK_COMB (@lem6220102 _123774) (@lem6220101 _123774 op)). Qed.
Lemma lem6220104 {_123774 : Type'} (op : type1400 _123774) : ((term2476 _123774 op) = (term2477 _123774 op)) = ((term2475 _123774 op) = (term2493 _123774 op)).
Proof. exact (MK_COMB (@lem6220095 _123774 op) (@lem6220103 _123774 op)). Qed.
Lemma lem6220105 {_123774 : Type'} (op : type1400 _123774) : (term2475 _123774 op) = (term2493 _123774 op).
Proof. exact (EQ_MP (@lem6220104 _123774 op) (@lem6220082 _123774 op)). Qed.
Lemma lem6220107 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term1970 A P Q) = (term1969 A P Q).
Proof. exact (EQ_MP (@lem19031 A P Q) (@lem19030 A P Q)). Qed.
Lemma lem6220108 {_123774 : Type'} (P : _123774 -> Prop) (Q : _123774 -> Prop) : (term1970 _123774 P Q) = (term1969 _123774 P Q).
Proof. exact (@lem6220107 _123774 P Q). Qed.
Lemma lem6220109 {_123774 : Type'} (op : type1400 _123774) (x : _123774) : (term2494 _123774 op x) = (term2495 _123774 op x).
Proof. exact (@lem6220108 _123774 (term2361 _123774 op x) (term2471 _123774 op x)). Qed.
Lemma lem6220110 {_123774 : Type'} (op : type1400 _123774) (y : _123774) (x : _123774) : (term2496 _123774 op x y) = ((term2339 _123774 op x y) = (term2339 _123774 op y x)).
Proof. exact (eq_refl (term2496 _123774 op x y)). Qed.
Lemma lem6220111 {_123774 : Type'} (op : type1400 _123774) (x : _123774) : (term2497 _123774 op x) = (term2361 _123774 op x).
Proof. exact (fun_ext (fun y : _123774 => @lem6220110 _123774 op y x)). Qed.
Lemma lem6220112 {_123774 : Type'} : (@all _123774) = (@all _123774).
Proof. exact (eq_refl (@all _123774)). Qed.
Lemma lem6220113 {_123774 : Type'} (op : type1400 _123774) (x : _123774) : (term2498 _123774 op x) = (term2362 _123774 op x).
Proof. exact (MK_COMB (@lem6220112 _123774) (@lem6220111 _123774 op x)). Qed.
Lemma lem6220114 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6220115 {_123774 : Type'} (op : type1400 _123774) (x : _123774) : (term2499 _123774 op x) = (term2488 _123774 op x).
Proof. exact (MK_COMB (@lem6220114) (@lem6220113 _123774 op x)). Qed.
Lemma lem6220116 {_123774 : Type'} (y : _123774) (op : type1400 _123774) (x : _123774) : (term2500 _123774 op x y) = (term2470 _123774 y op x).
Proof. exact (eq_refl (term2500 _123774 op x y)). Qed.
Lemma lem6220117 {_123774 : Type'} (op : type1400 _123774) (x : _123774) : (term2501 _123774 op x) = (term2471 _123774 op x).
Proof. exact (fun_ext (fun y : _123774 => @lem6220116 _123774 y op x)). Qed.
Lemma lem6220118 {_123774 : Type'} : (@all _123774) = (@all _123774).
Proof. exact (eq_refl (@all _123774)). Qed.
Lemma lem6220119 {_123774 : Type'} (op : type1400 _123774) (x : _123774) : (term2502 _123774 op x) = (term2472 _123774 op x).
Proof. exact (MK_COMB (@lem6220118 _123774) (@lem6220117 _123774 op x)). Qed.
Lemma lem6220120 {_123774 : Type'} (op : type1400 _123774) (x : _123774) : (term2494 _123774 op x) = (term2490 _123774 op x).
Proof. exact (MK_COMB (@lem6220115 _123774 op x) (@lem6220119 _123774 op x)). Qed.
Lemma lem6220121 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6220122 {_123774 : Type'} (op : type1400 _123774) (x : _123774) : (term2503 _123774 op x) = (term2504 _123774 op x).
Proof. exact (MK_COMB (@lem6220121) (@lem6220120 _123774 op x)). Qed.
Lemma lem6220123 {_123774 : Type'} (op : type1400 _123774) (y : _123774) (x : _123774) : (term2496 _123774 op x y) = ((term2339 _123774 op x y) = (term2339 _123774 op y x)).
Proof. exact (eq_refl (term2496 _123774 op x y)). Qed.
Lemma lem6220124 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6220125 {_123774 : Type'} (op : type1400 _123774) (y : _123774) (x : _123774) : (term2505 _123774 op x y) = (term2506 _123774 op y x).
Proof. exact (MK_COMB (@lem6220124) (@lem6220123 _123774 op y x)). Qed.
Lemma lem6220126 {_123774 : Type'} (y : _123774) (op : type1400 _123774) (x : _123774) : (term2500 _123774 op x y) = (term2470 _123774 y op x).
Proof. exact (eq_refl (term2500 _123774 op x y)). Qed.
Lemma lem6220127 {_123774 : Type'} (y : _123774) (op : type1400 _123774) (x : _123774) : (term2507 _123774 op x y) = (term2508 _123774 y op x).
Proof. exact (MK_COMB (@lem6220125 _123774 op y x) (@lem6220126 _123774 y op x)). Qed.
Lemma lem6220128 {_123774 : Type'} (op : type1400 _123774) (x : _123774) : (term2509 _123774 op x) = (term2510 _123774 op x).
Proof. exact (fun_ext (fun y : _123774 => @lem6220127 _123774 y op x)). Qed.
Lemma lem6220129 {_123774 : Type'} : (@all _123774) = (@all _123774).
Proof. exact (eq_refl (@all _123774)). Qed.
Lemma lem6220130 {_123774 : Type'} (op : type1400 _123774) (x : _123774) : (term2495 _123774 op x) = (term2511 _123774 op x).
Proof. exact (MK_COMB (@lem6220129 _123774) (@lem6220128 _123774 op x)). Qed.
Lemma lem6220131 {_123774 : Type'} (op : type1400 _123774) (x : _123774) : ((term2494 _123774 op x) = (term2495 _123774 op x)) = ((term2490 _123774 op x) = (term2511 _123774 op x)).
Proof. exact (MK_COMB (@lem6220122 _123774 op x) (@lem6220130 _123774 op x)). Qed.
Lemma lem6220132 {_123774 : Type'} (op : type1400 _123774) (x : _123774) : (term2490 _123774 op x) = (term2511 _123774 op x).
Proof. exact (EQ_MP (@lem6220131 _123774 op x) (@lem6220109 _123774 op x)). Qed.
Lemma lem6220134 {A : Type'} (P : Prop) (Q : A -> Prop) : (term2512 A P Q) = (term2513 A P Q).
Proof. exact (EQ_MP (@lem19019 A P Q) (@lem19018 A P Q)). Qed.
Lemma lem6220135 {_123774 : Type'} (P : Prop) (Q : _123774 -> Prop) : (term2512 _123774 P Q) = (term2513 _123774 P Q).
Proof. exact (@lem6220134 _123774 P Q). Qed.
Lemma lem6220136 {_123774 : Type'} (y : _123774) (op : type1400 _123774) (x : _123774) : (term2514 _123774 y op x) = (term2515 _123774 y op x).
Proof. exact (@lem6220135 _123774 ((term2339 _123774 op x y) = (term2339 _123774 op y x)) (term2469 _123774 y op x)). Qed.
Lemma lem6220137 {_123774 : Type'} (y : _123774) (z : _123774) (op : type1400 _123774) (x : _123774) : (term2516 _123774 y op x z) = (term2467 _123774 y z op x).
Proof. exact (eq_refl (term2516 _123774 y op x z)). Qed.
Lemma lem6220138 {_123774 : Type'} (y : _123774) (op : type1400 _123774) (x : _123774) : (term2517 _123774 y op x) = (term2469 _123774 y op x).
Proof. exact (fun_ext (fun z : _123774 => @lem6220137 _123774 y z op x)). Qed.
Lemma lem6220139 {_123774 : Type'} : (@all _123774) = (@all _123774).
Proof. exact (eq_refl (@all _123774)). Qed.
Lemma lem6220140 {_123774 : Type'} (y : _123774) (op : type1400 _123774) (x : _123774) : (term2518 _123774 y op x) = (term2470 _123774 y op x).
Proof. exact (MK_COMB (@lem6220139 _123774) (@lem6220138 _123774 y op x)). Qed.
Lemma lem6220141 {_123774 : Type'} (op : type1400 _123774) (y : _123774) (x : _123774) : (term2506 _123774 op y x) = (term2506 _123774 op y x).
Proof. exact (eq_refl (term2506 _123774 op y x)). Qed.
Lemma lem6220142 {_123774 : Type'} (y : _123774) (op : type1400 _123774) (x : _123774) : (term2514 _123774 y op x) = (term2508 _123774 y op x).
Proof. exact (MK_COMB (@lem6220141 _123774 op y x) (@lem6220140 _123774 y op x)). Qed.
Lemma lem6220143 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6220144 {_123774 : Type'} (y : _123774) (op : type1400 _123774) (x : _123774) : (term2519 _123774 y op x) = (term2520 _123774 y op x).
Proof. exact (MK_COMB (@lem6220143) (@lem6220142 _123774 y op x)). Qed.
Lemma lem6220145 {_123774 : Type'} (y : _123774) (z : _123774) (op : type1400 _123774) (x : _123774) : (term2516 _123774 y op x z) = (term2467 _123774 y z op x).
Proof. exact (eq_refl (term2516 _123774 y op x z)). Qed.
Lemma lem6220146 {_123774 : Type'} (op : type1400 _123774) (y : _123774) (x : _123774) : (term2506 _123774 op y x) = (term2506 _123774 op y x).
Proof. exact (eq_refl (term2506 _123774 op y x)). Qed.
Lemma lem6220147 {_123774 : Type'} (y : _123774) (z : _123774) (op : type1400 _123774) (x : _123774) : (term2521 _123774 y op x z) = (term2522 _123774 y z op x).
Proof. exact (MK_COMB (@lem6220146 _123774 op y x) (@lem6220145 _123774 y z op x)). Qed.
Lemma lem6220148 {_123774 : Type'} (y : _123774) (op : type1400 _123774) (x : _123774) : (term2523 _123774 y op x) = (term2524 _123774 y op x).
Proof. exact (fun_ext (fun z : _123774 => @lem6220147 _123774 y z op x)). Qed.
Lemma lem6220149 {_123774 : Type'} : (@all _123774) = (@all _123774).
Proof. exact (eq_refl (@all _123774)). Qed.
Lemma lem6220150 {_123774 : Type'} (y : _123774) (op : type1400 _123774) (x : _123774) : (term2515 _123774 y op x) = (term2525 _123774 y op x).
Proof. exact (MK_COMB (@lem6220149 _123774) (@lem6220148 _123774 y op x)). Qed.
Lemma lem6220151 {_123774 : Type'} (y : _123774) (op : type1400 _123774) (x : _123774) : ((term2514 _123774 y op x) = (term2515 _123774 y op x)) = ((term2508 _123774 y op x) = (term2525 _123774 y op x)).
Proof. exact (MK_COMB (@lem6220144 _123774 y op x) (@lem6220150 _123774 y op x)). Qed.
Lemma lem6220152 {_123774 : Type'} (y : _123774) (op : type1400 _123774) (x : _123774) : (term2508 _123774 y op x) = (term2525 _123774 y op x).
Proof. exact (EQ_MP (@lem6220151 _123774 y op x) (@lem6220136 _123774 y op x)). Qed.
Lemma lem6220153 {_123774 : Type'} (op : type1400 _123774) (x : _123774) : (term2510 _123774 op x) = (term2526 _123774 op x).
Proof. exact (fun_ext (fun y : _123774 => @lem6220152 _123774 y op x)). Qed.
Lemma lem6220154 {_123774 : Type'} : (@all _123774) = (@all _123774).
Proof. exact (eq_refl (@all _123774)). Qed.
Lemma lem6220155 {_123774 : Type'} (op : type1400 _123774) (x : _123774) : (term2511 _123774 op x) = (term2527 _123774 op x).
Proof. exact (MK_COMB (@lem6220154 _123774) (@lem6220153 _123774 op x)). Qed.
Lemma lem6220156 {_123774 : Type'} (op : type1400 _123774) (x : _123774) : (term2490 _123774 op x) = (term2527 _123774 op x).
Proof. exact (TRANS (@lem6220132 _123774 op x) (@lem6220155 _123774 op x)). Qed.
Lemma lem6220157 {_123774 : Type'} (op : type1400 _123774) : (term2492 _123774 op) = (term2528 _123774 op).
Proof. exact (fun_ext (fun x : _123774 => @lem6220156 _123774 op x)). Qed.
Lemma lem6220158 {_123774 : Type'} : (@all _123774) = (@all _123774).
Proof. exact (eq_refl (@all _123774)). Qed.
Lemma lem6220159 {_123774 : Type'} (op : type1400 _123774) : (term2493 _123774 op) = (term2529 _123774 op).
Proof. exact (MK_COMB (@lem6220158 _123774) (@lem6220157 _123774 op)). Qed.
Lemma lem6220160 {_123774 : Type'} (op : type1400 _123774) : (term2475 _123774 op) = (term2529 _123774 op).
Proof. exact (TRANS (@lem6220105 _123774 op) (@lem6220159 _123774 op)). Qed.
Lemma lem6220161 {_123774 : Type'} (op : type1400 _123774) : (term2366 _123774 op) = (term2529 _123774 op).
Proof. exact (TRANS (@lem6220078 _123774 op) (@lem6220160 _123774 op)). Qed.
Lemma lem6220162 {_123774 : Type'} (op : type1400 _123774) : (term2369 _123774 op) = (term2369 _123774 op).
Proof. exact (eq_refl (term2369 _123774 op)). Qed.
Lemma lem6220163 {_123774 : Type'} (op : type1400 _123774) : (term2370 _123774 op) = (term2530 _123774 op).
Proof. exact (MK_COMB (@lem6220162 _123774 op) (@lem6220161 _123774 op)). Qed.
Lemma lem6220165 {A : Type'} (P : Prop) (Q : A -> Prop) : (term2531 A P Q) = (term2532 A P Q).
Proof. exact (EQ_MP (@lem19007 A P Q) (@lem19006 A P Q)). Qed.
Lemma lem6220166 {_123774 : Type'} (P : Prop) (Q : _123774 -> Prop) : (term2531 _123774 P Q) = (term2532 _123774 P Q).
Proof. exact (@lem6220165 _123774 P Q). Qed.
Lemma lem6220167 {_123774 : Type'} (op : type1400 _123774) : (term2533 _123774 op) = (term2534 _123774 op).
Proof. exact (@lem6220166 _123774 (term2368 _123774 op) (term2528 _123774 op)). Qed.
Lemma lem6220168 {_123774 : Type'} (op : type1400 _123774) (x : _123774) : (term2535 _123774 op x) = (term2527 _123774 op x).
Proof. exact (eq_refl (term2535 _123774 op x)). Qed.
Lemma lem6220169 {_123774 : Type'} (op : type1400 _123774) : (term2536 _123774 op) = (term2528 _123774 op).
Proof. exact (fun_ext (fun x : _123774 => @lem6220168 _123774 op x)). Qed.
Lemma lem6220170 {_123774 : Type'} : (@all _123774) = (@all _123774).
Proof. exact (eq_refl (@all _123774)). Qed.
Lemma lem6220171 {_123774 : Type'} (op : type1400 _123774) : (term2537 _123774 op) = (term2529 _123774 op).
Proof. exact (MK_COMB (@lem6220170 _123774) (@lem6220169 _123774 op)). Qed.
Lemma lem6220172 {_123774 : Type'} (op : type1400 _123774) : (term2369 _123774 op) = (term2369 _123774 op).
Proof. exact (eq_refl (term2369 _123774 op)). Qed.
Lemma lem6220173 {_123774 : Type'} (op : type1400 _123774) : (term2533 _123774 op) = (term2530 _123774 op).
Proof. exact (MK_COMB (@lem6220172 _123774 op) (@lem6220171 _123774 op)). Qed.
Lemma lem6220174 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6220175 {_123774 : Type'} (op : type1400 _123774) : (term2538 _123774 op) = (term2539 _123774 op).
Proof. exact (MK_COMB (@lem6220174) (@lem6220173 _123774 op)). Qed.
Lemma lem6220176 {_123774 : Type'} (op : type1400 _123774) (x : _123774) : (term2535 _123774 op x) = (term2527 _123774 op x).
Proof. exact (eq_refl (term2535 _123774 op x)). Qed.
Lemma lem6220177 {_123774 : Type'} (op : type1400 _123774) : (term2369 _123774 op) = (term2369 _123774 op).
Proof. exact (eq_refl (term2369 _123774 op)). Qed.
Lemma lem6220178 {_123774 : Type'} (op : type1400 _123774) (x : _123774) : (term2540 _123774 op x) = (term2541 _123774 op x).
Proof. exact (MK_COMB (@lem6220177 _123774 op) (@lem6220176 _123774 op x)). Qed.
Lemma lem6220179 {_123774 : Type'} (op : type1400 _123774) : (term2542 _123774 op) = (term2543 _123774 op).
Proof. exact (fun_ext (fun x : _123774 => @lem6220178 _123774 op x)). Qed.
Lemma lem6220180 {_123774 : Type'} : (@all _123774) = (@all _123774).
Proof. exact (eq_refl (@all _123774)). Qed.
Lemma lem6220181 {_123774 : Type'} (op : type1400 _123774) : (term2534 _123774 op) = (term2544 _123774 op).
Proof. exact (MK_COMB (@lem6220180 _123774) (@lem6220179 _123774 op)). Qed.
Lemma lem6220182 {_123774 : Type'} (op : type1400 _123774) : ((term2533 _123774 op) = (term2534 _123774 op)) = ((term2530 _123774 op) = (term2544 _123774 op)).
Proof. exact (MK_COMB (@lem6220175 _123774 op) (@lem6220181 _123774 op)). Qed.
Lemma lem6220183 {_123774 : Type'} (op : type1400 _123774) : (term2530 _123774 op) = (term2544 _123774 op).
Proof. exact (EQ_MP (@lem6220182 _123774 op) (@lem6220167 _123774 op)). Qed.
Lemma lem6220185 {A : Type'} (P : Prop) (Q : A -> Prop) : (term2531 A P Q) = (term2532 A P Q).
Proof. exact (EQ_MP (@lem19007 A P Q) (@lem19006 A P Q)). Qed.
Lemma lem6220186 {_123774 : Type'} (P : Prop) (Q : _123774 -> Prop) : (term2531 _123774 P Q) = (term2532 _123774 P Q).
Proof. exact (@lem6220185 _123774 P Q). Qed.
Lemma lem6220187 {_123774 : Type'} (op : type1400 _123774) (x : _123774) : (term2545 _123774 op x) = (term2546 _123774 op x).
Proof. exact (@lem6220186 _123774 (term2368 _123774 op) (term2526 _123774 op x)). Qed.
Lemma lem6220188 {_123774 : Type'} (y : _123774) (op : type1400 _123774) (x : _123774) : (term2547 _123774 op x y) = (term2525 _123774 y op x).
Proof. exact (eq_refl (term2547 _123774 op x y)). Qed.
Lemma lem6220189 {_123774 : Type'} (op : type1400 _123774) (x : _123774) : (term2548 _123774 op x) = (term2526 _123774 op x).
Proof. exact (fun_ext (fun y : _123774 => @lem6220188 _123774 y op x)). Qed.
Lemma lem6220190 {_123774 : Type'} : (@all _123774) = (@all _123774).
Proof. exact (eq_refl (@all _123774)). Qed.
Lemma lem6220191 {_123774 : Type'} (op : type1400 _123774) (x : _123774) : (term2549 _123774 op x) = (term2527 _123774 op x).
Proof. exact (MK_COMB (@lem6220190 _123774) (@lem6220189 _123774 op x)). Qed.
Lemma lem6220192 {_123774 : Type'} (op : type1400 _123774) : (term2369 _123774 op) = (term2369 _123774 op).
Proof. exact (eq_refl (term2369 _123774 op)). Qed.
Lemma lem6220193 {_123774 : Type'} (op : type1400 _123774) (x : _123774) : (term2545 _123774 op x) = (term2541 _123774 op x).
Proof. exact (MK_COMB (@lem6220192 _123774 op) (@lem6220191 _123774 op x)). Qed.
Lemma lem6220194 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6220195 {_123774 : Type'} (op : type1400 _123774) (x : _123774) : (term2550 _123774 op x) = (term2551 _123774 op x).
Proof. exact (MK_COMB (@lem6220194) (@lem6220193 _123774 op x)). Qed.
Lemma lem6220196 {_123774 : Type'} (y : _123774) (op : type1400 _123774) (x : _123774) : (term2547 _123774 op x y) = (term2525 _123774 y op x).
Proof. exact (eq_refl (term2547 _123774 op x y)). Qed.
Lemma lem6220197 {_123774 : Type'} (op : type1400 _123774) : (term2369 _123774 op) = (term2369 _123774 op).
Proof. exact (eq_refl (term2369 _123774 op)). Qed.
Lemma lem6220198 {_123774 : Type'} (y : _123774) (op : type1400 _123774) (x : _123774) : (term2552 _123774 op x y) = (term2553 _123774 y op x).
Proof. exact (MK_COMB (@lem6220197 _123774 op) (@lem6220196 _123774 y op x)). Qed.
Lemma lem6220199 {_123774 : Type'} (op : type1400 _123774) (x : _123774) : (term2554 _123774 op x) = (term2555 _123774 op x).
Proof. exact (fun_ext (fun y : _123774 => @lem6220198 _123774 y op x)). Qed.
Lemma lem6220200 {_123774 : Type'} : (@all _123774) = (@all _123774).
Proof. exact (eq_refl (@all _123774)). Qed.
Lemma lem6220201 {_123774 : Type'} (op : type1400 _123774) (x : _123774) : (term2546 _123774 op x) = (term2556 _123774 op x).
Proof. exact (MK_COMB (@lem6220200 _123774) (@lem6220199 _123774 op x)). Qed.
Lemma lem6220202 {_123774 : Type'} (op : type1400 _123774) (x : _123774) : ((term2545 _123774 op x) = (term2546 _123774 op x)) = ((term2541 _123774 op x) = (term2556 _123774 op x)).
Proof. exact (MK_COMB (@lem6220195 _123774 op x) (@lem6220201 _123774 op x)). Qed.
Lemma lem6220203 {_123774 : Type'} (op : type1400 _123774) (x : _123774) : (term2541 _123774 op x) = (term2556 _123774 op x).
Proof. exact (EQ_MP (@lem6220202 _123774 op x) (@lem6220187 _123774 op x)). Qed.
Lemma lem6220205 {A : Type'} (P : Prop) (Q : A -> Prop) : (term2531 A P Q) = (term2532 A P Q).
Proof. exact (EQ_MP (@lem19007 A P Q) (@lem19006 A P Q)). Qed.
Lemma lem6220206 {_123774 : Type'} (P : Prop) (Q : _123774 -> Prop) : (term2531 _123774 P Q) = (term2532 _123774 P Q).
Proof. exact (@lem6220205 _123774 P Q). Qed.
Lemma lem6220207 {_123774 : Type'} (y : _123774) (op : type1400 _123774) (x : _123774) : (term2557 _123774 y op x) = (term2558 _123774 y op x).
Proof. exact (@lem6220206 _123774 (term2368 _123774 op) (term2524 _123774 y op x)). Qed.
Lemma lem6220208 {_123774 : Type'} (y : _123774) (z : _123774) (op : type1400 _123774) (x : _123774) : (term2559 _123774 y op x z) = (term2522 _123774 y z op x).
Proof. exact (eq_refl (term2559 _123774 y op x z)). Qed.
Lemma lem6220209 {_123774 : Type'} (y : _123774) (op : type1400 _123774) (x : _123774) : (term2560 _123774 y op x) = (term2524 _123774 y op x).
Proof. exact (fun_ext (fun z : _123774 => @lem6220208 _123774 y z op x)). Qed.
Lemma lem6220210 {_123774 : Type'} : (@all _123774) = (@all _123774).
Proof. exact (eq_refl (@all _123774)). Qed.
Lemma lem6220211 {_123774 : Type'} (y : _123774) (op : type1400 _123774) (x : _123774) : (term2561 _123774 y op x) = (term2525 _123774 y op x).
Proof. exact (MK_COMB (@lem6220210 _123774) (@lem6220209 _123774 y op x)). Qed.
Lemma lem6220212 {_123774 : Type'} (op : type1400 _123774) : (term2369 _123774 op) = (term2369 _123774 op).
Proof. exact (eq_refl (term2369 _123774 op)). Qed.
Lemma lem6220213 {_123774 : Type'} (y : _123774) (op : type1400 _123774) (x : _123774) : (term2557 _123774 y op x) = (term2553 _123774 y op x).
Proof. exact (MK_COMB (@lem6220212 _123774 op) (@lem6220211 _123774 y op x)). Qed.
Lemma lem6220214 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6220215 {_123774 : Type'} (y : _123774) (op : type1400 _123774) (x : _123774) : (term2562 _123774 y op x) = (term2563 _123774 y op x).
Proof. exact (MK_COMB (@lem6220214) (@lem6220213 _123774 y op x)). Qed.
Lemma lem6220216 {_123774 : Type'} (y : _123774) (z : _123774) (op : type1400 _123774) (x : _123774) : (term2559 _123774 y op x z) = (term2522 _123774 y z op x).
Proof. exact (eq_refl (term2559 _123774 y op x z)). Qed.
Lemma lem6220217 {_123774 : Type'} (op : type1400 _123774) : (term2369 _123774 op) = (term2369 _123774 op).
Proof. exact (eq_refl (term2369 _123774 op)). Qed.
Lemma lem6220218 {_123774 : Type'} (y : _123774) (z : _123774) (op : type1400 _123774) (x : _123774) : (term2564 _123774 y op x z) = (term2565 _123774 y z op x).
Proof. exact (MK_COMB (@lem6220217 _123774 op) (@lem6220216 _123774 y z op x)). Qed.
Lemma lem6220219 {_123774 : Type'} (y : _123774) (op : type1400 _123774) (x : _123774) : (term2566 _123774 y op x) = (term2567 _123774 y op x).
Proof. exact (fun_ext (fun z : _123774 => @lem6220218 _123774 y z op x)). Qed.
Lemma lem6220220 {_123774 : Type'} : (@all _123774) = (@all _123774).
Proof. exact (eq_refl (@all _123774)). Qed.
Lemma lem6220221 {_123774 : Type'} (y : _123774) (op : type1400 _123774) (x : _123774) : (term2558 _123774 y op x) = (term2568 _123774 y op x).
Proof. exact (MK_COMB (@lem6220220 _123774) (@lem6220219 _123774 y op x)). Qed.
Lemma lem6220222 {_123774 : Type'} (y : _123774) (op : type1400 _123774) (x : _123774) : ((term2557 _123774 y op x) = (term2558 _123774 y op x)) = ((term2553 _123774 y op x) = (term2568 _123774 y op x)).
Proof. exact (MK_COMB (@lem6220215 _123774 y op x) (@lem6220221 _123774 y op x)). Qed.
Lemma lem6220223 {_123774 : Type'} (y : _123774) (op : type1400 _123774) (x : _123774) : (term2553 _123774 y op x) = (term2568 _123774 y op x).
Proof. exact (EQ_MP (@lem6220222 _123774 y op x) (@lem6220207 _123774 y op x)). Qed.
Lemma lem6220224 {_123774 : Type'} (op : type1400 _123774) (x : _123774) : (term2555 _123774 op x) = (term2569 _123774 op x).
Proof. exact (fun_ext (fun y : _123774 => @lem6220223 _123774 y op x)). Qed.
Lemma lem6220225 {_123774 : Type'} : (@all _123774) = (@all _123774).
Proof. exact (eq_refl (@all _123774)). Qed.
Lemma lem6220226 {_123774 : Type'} (op : type1400 _123774) (x : _123774) : (term2556 _123774 op x) = (term2570 _123774 op x).
Proof. exact (MK_COMB (@lem6220225 _123774) (@lem6220224 _123774 op x)). Qed.
Lemma lem6220227 {_123774 : Type'} (op : type1400 _123774) (x : _123774) : (term2541 _123774 op x) = (term2570 _123774 op x).
Proof. exact (TRANS (@lem6220203 _123774 op x) (@lem6220226 _123774 op x)). Qed.
Lemma lem6220228 {_123774 : Type'} (op : type1400 _123774) : (term2543 _123774 op) = (term2571 _123774 op).
Proof. exact (fun_ext (fun x : _123774 => @lem6220227 _123774 op x)). Qed.
Lemma lem6220229 {_123774 : Type'} : (@all _123774) = (@all _123774).
Proof. exact (eq_refl (@all _123774)). Qed.
Lemma lem6220230 {_123774 : Type'} (op : type1400 _123774) : (term2544 _123774 op) = (term2572 _123774 op).
Proof. exact (MK_COMB (@lem6220229 _123774) (@lem6220228 _123774 op)). Qed.
Lemma lem6220231 {_123774 : Type'} (op : type1400 _123774) : (term2530 _123774 op) = (term2572 _123774 op).
Proof. exact (TRANS (@lem6220183 _123774 op) (@lem6220230 _123774 op)). Qed.
Lemma lem6220232 {_123774 : Type'} (op : type1400 _123774) : (term2370 _123774 op) = (term2572 _123774 op).
Proof. exact (TRANS (@lem6220163 _123774 op) (@lem6220231 _123774 op)). Qed.
Lemma lem6220233 {_123774 : Type'} : (term2371 _123774) = (term2573 _123774).
Proof. exact (fun_ext (fun op : type1400 _123774 => @lem6220232 _123774 op)). Qed.
Lemma lem6220234 {_123774 : Type'} : (@all (_123774 -> _123774 -> _123774)) = (@all (_123774 -> _123774 -> _123774)).
Proof. exact (eq_refl (@all (_123774 -> _123774 -> _123774))). Qed.
Lemma lem6220235 {_123774 : Type'} : (term2372 _123774) = (term2574 _123774).
Proof. exact (MK_COMB (@lem6220234 _123774) (@lem6220233 _123774)). Qed.
Lemma lem6220249 {_123774 : Type'} (y : _123774) (z : _123774) (op : type1400 _123774) (x : _123774) : (term2565 _123774 y z op x) = (term2575 _123774 y z op x).
Proof. exact (@lem19490 ((term2339 _123774 op x y) = (term2339 _123774 op y x)) (term2368 _123774 op) (term2467 _123774 y z op x)). Qed.
Lemma lem6220256 {_123774 : Type'} (y : _123774) (z : _123774) (op : type1400 _123774) (x : _123774) : (term2576 _123774 y z op x) = (term2577 _123774 y z op x).
Proof. exact (@lem19490 ((term2342 _123774 x op y z) = (term2348 _123774 op x y z)) (term2368 _123774 op) ((term2334 _123774 op x) = x)). Qed.
Lemma lem6220259 {_123774 : Type'} (op : type1400 _123774) (y : _123774) (x : _123774) : (term2578 _123774 op y x) = (term2578 _123774 op y x).
Proof. exact (eq_refl (term2578 _123774 op y x)). Qed.
Lemma lem6220260 {_123774 : Type'} (y : _123774) (z : _123774) (op : type1400 _123774) (x : _123774) : (term2575 _123774 y z op x) = (term2579 _123774 y z op x).
Proof. exact (MK_COMB (@lem6220259 _123774 op y x) (@lem6220256 _123774 y z op x)). Qed.
Lemma lem6220262 {_123774 : Type'} (y : _123774) (z : _123774) (op : type1400 _123774) (x : _123774) : (term2565 _123774 y z op x) = (term2579 _123774 y z op x).
Proof. exact (TRANS (@lem6220249 _123774 y z op x) (@lem6220260 _123774 y z op x)). Qed.
Lemma lem6220263 {_123774 : Type'} (y : _123774) (op : type1400 _123774) (x : _123774) : (term2567 _123774 y op x) = (term2580 _123774 y op x).
Proof. exact (fun_ext (fun z : _123774 => @lem6220262 _123774 y z op x)). Qed.
Lemma lem6220264 {_123774 : Type'} : (@all _123774) = (@all _123774).
Proof. exact (eq_refl (@all _123774)). Qed.
Lemma lem6220265 {_123774 : Type'} (y : _123774) (op : type1400 _123774) (x : _123774) : (term2568 _123774 y op x) = (term2581 _123774 y op x).
Proof. exact (MK_COMB (@lem6220264 _123774) (@lem6220263 _123774 y op x)). Qed.
Lemma lem6220266 {_123774 : Type'} (op : type1400 _123774) (x : _123774) : (term2569 _123774 op x) = (term2582 _123774 op x).
Proof. exact (fun_ext (fun y : _123774 => @lem6220265 _123774 y op x)). Qed.
Lemma lem6220267 {_123774 : Type'} : (@all _123774) = (@all _123774).
Proof. exact (eq_refl (@all _123774)). Qed.
Lemma lem6220268 {_123774 : Type'} (op : type1400 _123774) (x : _123774) : (term2570 _123774 op x) = (term2583 _123774 op x).
Proof. exact (MK_COMB (@lem6220267 _123774) (@lem6220266 _123774 op x)). Qed.
Lemma lem6220269 {_123774 : Type'} (op : type1400 _123774) : (term2571 _123774 op) = (term2584 _123774 op).
Proof. exact (fun_ext (fun x : _123774 => @lem6220268 _123774 op x)). Qed.
Lemma lem6220270 {_123774 : Type'} : (@all _123774) = (@all _123774).
Proof. exact (eq_refl (@all _123774)). Qed.
Lemma lem6220271 {_123774 : Type'} (op : type1400 _123774) : (term2572 _123774 op) = (term2585 _123774 op).
Proof. exact (MK_COMB (@lem6220270 _123774) (@lem6220269 _123774 op)). Qed.
Lemma lem6220272 {_123774 : Type'} : (term2573 _123774) = (term2586 _123774).
Proof. exact (fun_ext (fun op : type1400 _123774 => @lem6220271 _123774 op)). Qed.
Lemma lem6220273 {_123774 : Type'} : (@all (_123774 -> _123774 -> _123774)) = (@all (_123774 -> _123774 -> _123774)).
Proof. exact (eq_refl (@all (_123774 -> _123774 -> _123774))). Qed.
Lemma lem6220274 {_123774 : Type'} : (term2574 _123774) = (term2587 _123774).
Proof. exact (MK_COMB (@lem6220273 _123774) (@lem6220272 _123774)). Qed.
Lemma lem6220275 {_123774 : Type'} : (term2372 _123774) = (term2587 _123774).
Proof. exact (TRANS (@lem6220235 _123774) (@lem6220274 _123774)). Qed.
Lemma lem6220276 {_123774 : Type'} (y : type402 _123774) (z : type402 _123774) (x : type402 _123774) (h1 : term2269 _123774 y z x) : term2587 _123774.
Proof. exact (EQ_MP (@lem6220275 _123774) (@lem6219938 _123774 y z x h1)). Qed.
Lemma lem6220289 {_123774 : Type'} (_79046 : type1400 _123774) (y : type402 _123774) (z : type402 _123774) (x : type402 _123774) (h1 : term2269 _123774 y z x) : term2588 _123774 _79046.
Proof. exact (@lem6220276 _123774 y z x h1 _79046). Qed.
Lemma lem6220290 {_123774 : Type'} (_79046 : type1400 _123774) : (term2588 _123774 _79046) = (term2585 _123774 _79046).
Proof. exact (eq_refl (term2588 _123774 _79046)). Qed.
Lemma lem6220291 {_123774 : Type'} (_79046 : type1400 _123774) (y : type402 _123774) (z : type402 _123774) (x : type402 _123774) (h1 : term2269 _123774 y z x) : term2585 _123774 _79046.
Proof. exact (EQ_MP (@lem6220290 _123774 _79046) (@lem6220289 _123774 _79046 y z x h1)). Qed.
Lemma lem6220292 {_123774 : Type'} (_79046 : type1400 _123774) (_79047 : _123774) (y : type402 _123774) (z : type402 _123774) (x : type402 _123774) (h1 : term2269 _123774 y z x) : term2589 _123774 _79046 _79047.
Proof. exact (@lem6220291 _123774 _79046 y z x h1 _79047). Qed.
Lemma lem6220293 {_123774 : Type'} (_79046 : type1400 _123774) (_79047 : _123774) : (term2589 _123774 _79046 _79047) = (term2583 _123774 _79046 _79047).
Proof. exact (eq_refl (term2589 _123774 _79046 _79047)). Qed.
Lemma lem6220294 {_123774 : Type'} (_79046 : type1400 _123774) (_79047 : _123774) (y : type402 _123774) (z : type402 _123774) (x : type402 _123774) (h1 : term2269 _123774 y z x) : term2583 _123774 _79046 _79047.
Proof. exact (EQ_MP (@lem6220293 _123774 _79046 _79047) (@lem6220292 _123774 _79046 _79047 y z x h1)). Qed.
Lemma lem6220295 {_123774 : Type'} (_79046 : type1400 _123774) (_79047 : _123774) (_79048 : _123774) (y : type402 _123774) (z : type402 _123774) (x : type402 _123774) (h1 : term2269 _123774 y z x) : term2590 _123774 _79046 _79047 _79048.
Proof. exact (@lem6220294 _123774 _79046 _79047 y z x h1 _79048). Qed.
Lemma lem6220296 {_123774 : Type'} (_79048 : _123774) (_79046 : type1400 _123774) (_79047 : _123774) : (term2590 _123774 _79046 _79047 _79048) = (term2581 _123774 _79048 _79046 _79047).
Proof. exact (eq_refl (term2590 _123774 _79046 _79047 _79048)). Qed.
Lemma lem6220297 {_123774 : Type'} (_79048 : _123774) (_79046 : type1400 _123774) (_79047 : _123774) (y : type402 _123774) (z : type402 _123774) (x : type402 _123774) (h1 : term2269 _123774 y z x) : term2581 _123774 _79048 _79046 _79047.
Proof. exact (EQ_MP (@lem6220296 _123774 _79048 _79046 _79047) (@lem6220295 _123774 _79046 _79047 _79048 y z x h1)). Qed.
Lemma lem6220298 {_123774 : Type'} (_79048 : _123774) (_79046 : type1400 _123774) (_79047 : _123774) (_79049 : _123774) (y : type402 _123774) (z : type402 _123774) (x : type402 _123774) (h1 : term2269 _123774 y z x) : term2591 _123774 _79048 _79046 _79047 _79049.
Proof. exact (@lem6220297 _123774 _79048 _79046 _79047 y z x h1 _79049). Qed.
Lemma lem6220299 {_123774 : Type'} (_79048 : _123774) (_79049 : _123774) (_79046 : type1400 _123774) (_79047 : _123774) : (term2591 _123774 _79048 _79046 _79047 _79049) = (term2579 _123774 _79048 _79049 _79046 _79047).
Proof. exact (eq_refl (term2591 _123774 _79048 _79046 _79047 _79049)). Qed.
Lemma lem6220300 {_123774 : Type'} (_79048 : _123774) (_79049 : _123774) (_79046 : type1400 _123774) (_79047 : _123774) (y : type402 _123774) (z : type402 _123774) (x : type402 _123774) (h1 : term2269 _123774 y z x) : term2579 _123774 _79048 _79049 _79046 _79047.
Proof. exact (EQ_MP (@lem6220299 _123774 _79048 _79049 _79046 _79047) (@lem6220298 _123774 _79048 _79046 _79047 _79049 y z x h1)). Qed.
Lemma lem6220301 {_123774 : Type'} (_79048 : _123774) (_79049 : _123774) (_79046 : type1400 _123774) (_79047 : _123774) (y : type402 _123774) (z : type402 _123774) (x : type402 _123774) (h1 : term2269 _123774 y z x) : term2577 _123774 _79048 _79049 _79046 _79047.
Proof. exact (proj2 (@lem6220300 _123774 _79048 _79049 _79046 _79047 y z x h1)). Qed.
Lemma lem6220314 {_123774 : Type'} (m : nat) (_79041 : type399 _123774) (op : type1400 _123774) (f : nat -> _123774) (n : nat) (h1 : term1826 _123774 m _79041 op f n) : term2328 _123774 m _79041 op f n.
Proof. exact (EQ_MP (@lem6219514 _123774 m _79041 op f n) (@lem6217876 _123774 m _79041 op f n h1)). Qed.
Lemma lem6220340 {_123774 : Type'} (_79046 : type1400 _123774) (_79047 : _123774) (_79048 : _123774) (_79049 : _123774) (y : type402 _123774) (z : type402 _123774) (x : type402 _123774) (h1 : term2269 _123774 y z x) : term2592 _123774 _79046 _79047 _79048 _79049.
Proof. exact (proj1 (@lem6220301 _123774 _79048 _79049 _79046 _79047 y z x h1)). Qed.
Lemma lem6220581 {_123774 : Type'} (x : _123774) (y : _123774) (z : _123774) : term2593 _123774 x y z.
Proof. exact (@lem21385 _123774 x y z). Qed.
Lemma lem6220615 {_123774 : Type'} (op : type1400 _123774) (h1 : @monoidal _123774 op) : @I ((_123774 -> _123774 -> _123774) -> Prop) (@monoidal _123774) op.
Proof. exact (EQ_MP (@lem6218757 _123774 op) (@lem6217858 _123774 op h1)). Qed.
Lemma lem6220616 {_123774 : Type'} (op : type1400 _123774) (h1 : @monoidal _123774 op) : term2594 _123774 op.
Proof. exact (fun h0 : term2368 _123774 op => @lem6220615 _123774 op h1). Qed.
Lemma lem6220618 (p : Prop) : (term2595 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem6220619 {_123774 : Type'} (op : type1400 _123774) : (term2594 _123774 op) = (@I ((_123774 -> _123774 -> _123774) -> Prop) (@monoidal _123774) op).
Proof. exact (@lem6220618 (@I ((_123774 -> _123774 -> _123774) -> Prop) (@monoidal _123774) op)). Qed.
Lemma lem6220620 {_123774 : Type'} (op : type1400 _123774) (h1 : @monoidal _123774 op) : @I ((_123774 -> _123774 -> _123774) -> Prop) (@monoidal _123774) op.
Proof. exact (EQ_MP (@lem6220619 _123774 op) (@lem6220616 _123774 op h1)). Qed.
Lemma lem6220626 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem6220627 {_123774 : Type'} (_79047 : _123774) (_79048 : _123774) (_79049 : _123774) (_79046 : type1400 _123774) : (term2592 _123774 _79046 _79047 _79048 _79049) = (term2596 _123774 _79047 _79048 _79049 _79046).
Proof. exact (@lem6220626 ((term2342 _123774 _79047 _79046 _79048 _79049) = (term2348 _123774 _79046 _79047 _79048 _79049)) (term2368 _123774 _79046)). Qed.
Lemma lem6220635 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6220636 {_123774 : Type'} (_79047 : _123774) (_79048 : _123774) (_79049 : _123774) (_79046 : type1400 _123774) : (term2597 _123774 _79046 _79047 _79048 _79049) = (term2598 _123774 _79047 _79048 _79049 _79046).
Proof. exact (MK_COMB (@lem6220635) (@lem6220627 _123774 _79047 _79048 _79049 _79046)). Qed.
Lemma lem6220644 {_123774 : Type'} (_79047 : _123774) (_79048 : _123774) (_79049 : _123774) (_79046 : type1400 _123774) : (term2596 _123774 _79047 _79048 _79049 _79046) = (term2596 _123774 _79047 _79048 _79049 _79046).
Proof. exact (eq_refl (term2596 _123774 _79047 _79048 _79049 _79046)). Qed.
Lemma lem6220645 {_123774 : Type'} (_79047 : _123774) (_79048 : _123774) (_79049 : _123774) (_79046 : type1400 _123774) : ((term2592 _123774 _79046 _79047 _79048 _79049) = (term2596 _123774 _79047 _79048 _79049 _79046)) = ((term2596 _123774 _79047 _79048 _79049 _79046) = (term2596 _123774 _79047 _79048 _79049 _79046)).
Proof. exact (MK_COMB (@lem6220636 _123774 _79047 _79048 _79049 _79046) (@lem6220644 _123774 _79047 _79048 _79049 _79046)). Qed.
Lemma lem6220647 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem20665 A x) (@lem20664 A x)). Qed.
Lemma lem6220648 (x : Prop) : (x = x) = True.
Proof. exact (@lem6220647 Prop x). Qed.
Lemma lem6220649 {_123774 : Type'} (_79047 : _123774) (_79048 : _123774) (_79049 : _123774) (_79046 : type1400 _123774) : ((term2596 _123774 _79047 _79048 _79049 _79046) = (term2596 _123774 _79047 _79048 _79049 _79046)) = True.
Proof. exact (@lem6220648 (term2596 _123774 _79047 _79048 _79049 _79046)). Qed.
Lemma lem6220650 {_123774 : Type'} (_79047 : _123774) (_79048 : _123774) (_79049 : _123774) (_79046 : type1400 _123774) : ((term2592 _123774 _79046 _79047 _79048 _79049) = (term2596 _123774 _79047 _79048 _79049 _79046)) = True.
Proof. exact (TRANS (@lem6220645 _123774 _79047 _79048 _79049 _79046) (@lem6220649 _123774 _79047 _79048 _79049 _79046)). Qed.
Lemma lem6220651 {_123774 : Type'} (_79047 : _123774) (_79048 : _123774) (_79049 : _123774) (_79046 : type1400 _123774) : True = ((term2592 _123774 _79046 _79047 _79048 _79049) = (term2596 _123774 _79047 _79048 _79049 _79046)).
Proof. exact (SYM (@lem6220650 _123774 _79047 _79048 _79049 _79046)). Qed.
Lemma lem6220652 {_123774 : Type'} (_79047 : _123774) (_79048 : _123774) (_79049 : _123774) (_79046 : type1400 _123774) : (term2592 _123774 _79046 _79047 _79048 _79049) = (term2596 _123774 _79047 _79048 _79049 _79046).
Proof. exact (EQ_MP (@lem6220651 _123774 _79047 _79048 _79049 _79046) (@lem0)). Qed.
Lemma lem6220653 {_123774 : Type'} (_79047 : _123774) (_79048 : _123774) (_79049 : _123774) (_79046 : type1400 _123774) (y : type402 _123774) (z : type402 _123774) (x : type402 _123774) (h1 : term2269 _123774 y z x) : term2596 _123774 _79047 _79048 _79049 _79046.
Proof. exact (EQ_MP (@lem6220652 _123774 _79047 _79048 _79049 _79046) (@lem6220340 _123774 _79046 _79047 _79048 _79049 y z x h1)). Qed.
Lemma lem6220655 (b : Prop) (a : Prop) : (a \/ b) = (term2599 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem6220656 {_123774 : Type'} (_79046 : type1400 _123774) (_79047 : _123774) (_79048 : _123774) (_79049 : _123774) : (term2596 _123774 _79047 _79048 _79049 _79046) = (term2600 _123774 _79046 _79047 _79048 _79049).
Proof. exact (@lem6220655 (term2368 _123774 _79046) ((term2342 _123774 _79047 _79046 _79048 _79049) = (term2348 _123774 _79046 _79047 _79048 _79049))). Qed.
Lemma lem6220658 (a : Prop) : (term113 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem6220659 {_123774 : Type'} (_79046 : type1400 _123774) : (term2601 _123774 _79046) = (@I ((_123774 -> _123774 -> _123774) -> Prop) (@monoidal _123774) _79046).
Proof. exact (@lem6220658 (@I ((_123774 -> _123774 -> _123774) -> Prop) (@monoidal _123774) _79046)). Qed.
Lemma lem6220660 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem6220661 {_123774 : Type'} (_79046 : type1400 _123774) : (term2602 _123774 _79046) = (term2603 _123774 _79046).
Proof. exact (MK_COMB (@lem6220660) (@lem6220659 _123774 _79046)). Qed.
Lemma lem6220662 {_123774 : Type'} (_79046 : type1400 _123774) (_79047 : _123774) (_79048 : _123774) (_79049 : _123774) : ((term2342 _123774 _79047 _79046 _79048 _79049) = (term2348 _123774 _79046 _79047 _79048 _79049)) = ((term2342 _123774 _79047 _79046 _79048 _79049) = (term2348 _123774 _79046 _79047 _79048 _79049)).
Proof. exact (eq_refl ((term2342 _123774 _79047 _79046 _79048 _79049) = (term2348 _123774 _79046 _79047 _79048 _79049))). Qed.
Lemma lem6220663 {_123774 : Type'} (_79046 : type1400 _123774) (_79047 : _123774) (_79048 : _123774) (_79049 : _123774) : (term2600 _123774 _79046 _79047 _79048 _79049) = (term2604 _123774 _79046 _79047 _79048 _79049).
Proof. exact (MK_COMB (@lem6220661 _123774 _79046) (@lem6220662 _123774 _79046 _79047 _79048 _79049)). Qed.
Lemma lem6220664 {_123774 : Type'} (_79046 : type1400 _123774) (_79047 : _123774) (_79048 : _123774) (_79049 : _123774) : (term2596 _123774 _79047 _79048 _79049 _79046) = (term2604 _123774 _79046 _79047 _79048 _79049).
Proof. exact (TRANS (@lem6220656 _123774 _79046 _79047 _79048 _79049) (@lem6220663 _123774 _79046 _79047 _79048 _79049)). Qed.
Lemma lem6220667 {_123774 : Type'} (_79046 : type1400 _123774) (_79047 : _123774) (_79048 : _123774) (_79049 : _123774) (y : type402 _123774) (z : type402 _123774) (x : type402 _123774) (h1 : term2269 _123774 y z x) : term2604 _123774 _79046 _79047 _79048 _79049.
Proof. exact (EQ_MP (@lem6220664 _123774 _79046 _79047 _79048 _79049) (@lem6220653 _123774 _79047 _79048 _79049 _79046 y z x h1)). Qed.
Lemma lem6220668 {_123774 : Type'} (_79046 : type1400 _123774) (_79047 : _123774) (_79048 : _123774) (_79049 : _123774) (y : type402 _123774) (z : type402 _123774) (x : type402 _123774) (h1 : term2269 _123774 y z x) : term2604 _123774 _79046 _79047 _79048 _79049.
Proof. exact (@lem6220667 _123774 _79046 _79047 _79048 _79049 y z x h1). Qed.
Lemma lem6220669 {_123774 : Type'} (op : type1400 _123774) (_79047 : _123774) (_79048 : _123774) (_79049 : _123774) (y : type402 _123774) (z : type402 _123774) (x : type402 _123774) (h1 : term2269 _123774 y z x) : term2604 _123774 op _79047 _79048 _79049.
Proof. exact (@lem6220668 _123774 op _79047 _79048 _79049 y z x h1). Qed.
Lemma lem6220672 {_123774 : Type'} (_79047 : _123774) (_79048 : _123774) (_79049 : _123774) (op : type1400 _123774) (y : type402 _123774) (z : type402 _123774) (x : type402 _123774) (h1 : @monoidal _123774 op) (h2 : term2269 _123774 y z x) : (term2342 _123774 _79047 op _79048 _79049) = (term2348 _123774 op _79047 _79048 _79049).
Proof. exact (@lem6220669 _123774 op _79047 _79048 _79049 y z x h2 (@lem6220620 _123774 op h1)). Qed.
Lemma lem6220673 {_123774 : Type'} (_79047 : _123774) (_79048 : _123774) (_79049 : _123774) (op : type1400 _123774) (y : type402 _123774) (z : type402 _123774) (x : type402 _123774) (h1 : @monoidal _123774 op) (h2 : term2269 _123774 y z x) : (term2342 _123774 _79047 op _79048 _79049) = (term2348 _123774 op _79047 _79048 _79049).
Proof. exact (@lem6220672 _123774 _79047 _79048 _79049 op y z x h1 h2). Qed.
Lemma lem6220674 {_123774 : Type'} (m : nat) (_79041 : type399 _123774) (f : nat -> _123774) (n : nat) (op : type1400 _123774) (y : type402 _123774) (z : type402 _123774) (x : type402 _123774) (h1 : @monoidal _123774 op) (h2 : term2269 _123774 y z x) : (term2326 _123774 m _79041 op f n) = (term2318 _123774 m _79041 op f n).
Proof. exact (@lem6220673 _123774 (term2284 _123774 m n _79041 op f) (term2304 _123774 f n) (term2313 _123774 f n) op y z x h1 h2). Qed.
Lemma lem6220675 {_123774 : Type'} (m : nat) (_79041 : type399 _123774) (f : nat -> _123774) (n : nat) (op : type1400 _123774) (y : type402 _123774) (z : type402 _123774) (x : type402 _123774) (h1 : @monoidal _123774 op) (h2 : term2269 _123774 y z x) : term2605 _123774 m _79041 op f n.
Proof. exact (fun h0 : term2606 _123774 m _79041 op f n => @lem6220674 _123774 m _79041 f n op y z x h1 h2). Qed.
Lemma lem6220677 (p : Prop) : (term2595 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem6220678 {_123774 : Type'} (m : nat) (_79041 : type399 _123774) (op : type1400 _123774) (f : nat -> _123774) (n : nat) : (term2605 _123774 m _79041 op f n) = ((term2326 _123774 m _79041 op f n) = (term2318 _123774 m _79041 op f n)).
Proof. exact (@lem6220677 ((term2326 _123774 m _79041 op f n) = (term2318 _123774 m _79041 op f n))). Qed.
Lemma lem6220679 {_123774 : Type'} (m : nat) (_79041 : type399 _123774) (f : nat -> _123774) (n : nat) (op : type1400 _123774) (y : type402 _123774) (z : type402 _123774) (x : type402 _123774) (h1 : @monoidal _123774 op) (h2 : term2269 _123774 y z x) : (term2326 _123774 m _79041 op f n) = (term2318 _123774 m _79041 op f n).
Proof. exact (EQ_MP (@lem6220678 _123774 m _79041 op f n) (@lem6220675 _123774 m _79041 f n op y z x h1 h2)). Qed.
Lemma lem6220681 {_123774 : Type'} (x : _123774) : x = x.
Proof. exact (@lem21386 _123774 x). Qed.
Lemma lem6220682 {_123774 : Type'} (x : _123774) : x = x.
Proof. exact (@lem6220681 _123774 x). Qed.
Lemma lem6220683 {_123774 : Type'} (m : nat) (_79041 : type399 _123774) (op : type1400 _123774) (f : nat -> _123774) (n : nat) : (term2326 _123774 m _79041 op f n) = (term2326 _123774 m _79041 op f n).
Proof. exact (@lem6220682 _123774 (term2326 _123774 m _79041 op f n)). Qed.
Lemma lem6220684 {_123774 : Type'} (m : nat) (_79041 : type399 _123774) (op : type1400 _123774) (f : nat -> _123774) (n : nat) : term2607 _123774 m _79041 op f n.
Proof. exact (fun h0 : term2608 _123774 m _79041 op f n => @lem6220683 _123774 m _79041 op f n). Qed.
Lemma lem6220686 (p : Prop) : (term2595 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem6220687 {_123774 : Type'} (m : nat) (_79041 : type399 _123774) (op : type1400 _123774) (f : nat -> _123774) (n : nat) : (term2607 _123774 m _79041 op f n) = ((term2326 _123774 m _79041 op f n) = (term2326 _123774 m _79041 op f n)).
Proof. exact (@lem6220686 ((term2326 _123774 m _79041 op f n) = (term2326 _123774 m _79041 op f n))). Qed.
Lemma lem6220688 {_123774 : Type'} (m : nat) (_79041 : type399 _123774) (op : type1400 _123774) (f : nat -> _123774) (n : nat) : (term2326 _123774 m _79041 op f n) = (term2326 _123774 m _79041 op f n).
Proof. exact (EQ_MP (@lem6220687 _123774 m _79041 op f n) (@lem6220684 _123774 m _79041 op f n)). Qed.
Lemma lem6220706 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem6220707 {_123774 : Type'} (y : _123774) (x : _123774) (z : _123774) : (term2609 _123774 x y z) = (term2610 _123774 y x z).
Proof. exact (@lem6220706 (y = z) (term2611 _123774 x z)). Qed.
Lemma lem6220717 {_123774 : Type'} (x : _123774) (y : _123774) : (term2612 _123774 x y) = (term2612 _123774 x y).
Proof. exact (eq_refl (term2612 _123774 x y)). Qed.
Lemma lem6220718 {_123774 : Type'} (y : _123774) (x : _123774) (z : _123774) : (term2593 _123774 x y z) = (term2613 _123774 y x z).
Proof. exact (MK_COMB (@lem6220717 _123774 x y) (@lem6220707 _123774 y x z)). Qed.
Lemma lem6220722 (q : Prop) (p : Prop) (r : Prop) : (term2614 p q r) = (term2614 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem6220723 {_123774 : Type'} (y : _123774) (x : _123774) (z : _123774) : (term2613 _123774 y x z) = (term2615 _123774 y x z).
Proof. exact (@lem6220722 (y = z) (term2611 _123774 x y) (term2611 _123774 x z)). Qed.
Lemma lem6220745 {_123774 : Type'} (y : _123774) (x : _123774) (z : _123774) : (term2593 _123774 x y z) = (term2615 _123774 y x z).
Proof. exact (TRANS (@lem6220718 _123774 y x z) (@lem6220723 _123774 y x z)). Qed.
Lemma lem6220746 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6220747 {_123774 : Type'} (y : _123774) (x : _123774) (z : _123774) : (term2616 _123774 x y z) = (term2617 _123774 y x z).
Proof. exact (MK_COMB (@lem6220746) (@lem6220745 _123774 y x z)). Qed.
Lemma lem6220769 {_123774 : Type'} (y : _123774) (x : _123774) (z : _123774) : (term2615 _123774 y x z) = (term2615 _123774 y x z).
Proof. exact (eq_refl (term2615 _123774 y x z)). Qed.
Lemma lem6220770 {_123774 : Type'} (y : _123774) (x : _123774) (z : _123774) : ((term2593 _123774 x y z) = (term2615 _123774 y x z)) = ((term2615 _123774 y x z) = (term2615 _123774 y x z)).
Proof. exact (MK_COMB (@lem6220747 _123774 y x z) (@lem6220769 _123774 y x z)). Qed.
Lemma lem6220772 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem20665 A x) (@lem20664 A x)). Qed.
Lemma lem6220773 (x : Prop) : (x = x) = True.
Proof. exact (@lem6220772 Prop x). Qed.
Lemma lem6220774 {_123774 : Type'} (y : _123774) (x : _123774) (z : _123774) : ((term2615 _123774 y x z) = (term2615 _123774 y x z)) = True.
Proof. exact (@lem6220773 (term2615 _123774 y x z)). Qed.
Lemma lem6220775 {_123774 : Type'} (y : _123774) (x : _123774) (z : _123774) : ((term2593 _123774 x y z) = (term2615 _123774 y x z)) = True.
Proof. exact (TRANS (@lem6220770 _123774 y x z) (@lem6220774 _123774 y x z)). Qed.
Lemma lem6220776 {_123774 : Type'} (y : _123774) (x : _123774) (z : _123774) : True = ((term2593 _123774 x y z) = (term2615 _123774 y x z)).
Proof. exact (SYM (@lem6220775 _123774 y x z)). Qed.
Lemma lem6220777 {_123774 : Type'} (y : _123774) (x : _123774) (z : _123774) : (term2593 _123774 x y z) = (term2615 _123774 y x z).
Proof. exact (EQ_MP (@lem6220776 _123774 y x z) (@lem0)). Qed.
Lemma lem6220778 {_123774 : Type'} (y : _123774) (x : _123774) (z : _123774) : term2615 _123774 y x z.
Proof. exact (EQ_MP (@lem6220777 _123774 y x z) (@lem6220581 _123774 x y z)). Qed.
Lemma lem6220780 (b : Prop) (a : Prop) : (a \/ b) = (term2599 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem6220781 {_123774 : Type'} (x : _123774) (y : _123774) (z : _123774) : (term2615 _123774 y x z) = (term2618 _123774 x y z).
Proof. exact (@lem6220780 (term2619 _123774 y x z) (y = z)). Qed.
Lemma lem6220783 (a : Prop) (b : Prop) : (term2620 a b) = (term2621 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem6220784 {_123774 : Type'} (y : _123774) (x : _123774) (z : _123774) : (term2622 _123774 y x z) = (term2623 _123774 y x z).
Proof. exact (@lem6220783 (term2611 _123774 x y) (term2611 _123774 x z)). Qed.
Lemma lem6220786 (a : Prop) : (term113 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem6220787 {_123774 : Type'} (x : _123774) (y : _123774) : (term2624 _123774 x y) = (x = y).
Proof. exact (@lem6220786 (x = y)). Qed.
Lemma lem6220788 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6220789 {_123774 : Type'} (x : _123774) (y : _123774) : (term2625 _123774 x y) = (term2626 _123774 x y).
Proof. exact (MK_COMB (@lem6220788) (@lem6220787 _123774 x y)). Qed.
Lemma lem6220791 (a : Prop) : (term113 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem6220792 {_123774 : Type'} (x : _123774) (z : _123774) : (term2624 _123774 x z) = (x = z).
Proof. exact (@lem6220791 (x = z)). Qed.
Lemma lem6220793 {_123774 : Type'} (y : _123774) (x : _123774) (z : _123774) : (term2623 _123774 y x z) = (term2627 _123774 y x z).
Proof. exact (MK_COMB (@lem6220789 _123774 x y) (@lem6220792 _123774 x z)). Qed.
Lemma lem6220794 {_123774 : Type'} (y : _123774) (x : _123774) (z : _123774) : (term2622 _123774 y x z) = (term2627 _123774 y x z).
Proof. exact (TRANS (@lem6220784 _123774 y x z) (@lem6220793 _123774 y x z)). Qed.
Lemma lem6220795 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem6220796 {_123774 : Type'} (y : _123774) (x : _123774) (z : _123774) : (term2628 _123774 y x z) = (term2629 _123774 y x z).
Proof. exact (MK_COMB (@lem6220795) (@lem6220794 _123774 y x z)). Qed.
Lemma lem6220797 {_123774 : Type'} (y : _123774) (z : _123774) : (y = z) = (y = z).
Proof. exact (eq_refl (y = z)). Qed.
Lemma lem6220798 {_123774 : Type'} (x : _123774) (y : _123774) (z : _123774) : (term2618 _123774 x y z) = (term2630 _123774 x y z).
Proof. exact (MK_COMB (@lem6220796 _123774 y x z) (@lem6220797 _123774 y z)). Qed.
Lemma lem6220799 {_123774 : Type'} (x : _123774) (y : _123774) (z : _123774) : (term2615 _123774 y x z) = (term2630 _123774 x y z).
Proof. exact (TRANS (@lem6220781 _123774 x y z) (@lem6220798 _123774 x y z)). Qed.
Lemma lem6220801 {_123774 : Type'} (m : nat) (_79041 : type399 _123774) (f : nat -> _123774) (n : nat) (op : type1400 _123774) (y : type402 _123774) (z : type402 _123774) (x : type402 _123774) (h1 : @monoidal _123774 op) (h2 : term2269 _123774 y z x) : term2631 _123774 m _79041 op f n.
Proof. exact (conj (@lem6220679 _123774 m _79041 f n op y z x h1 h2) (@lem6220688 _123774 m _79041 op f n)). Qed.
Lemma lem6220803 {_123774 : Type'} (x : _123774) (y : _123774) (z : _123774) : term2630 _123774 x y z.
Proof. exact (EQ_MP (@lem6220799 _123774 x y z) (@lem6220778 _123774 y x z)). Qed.
Lemma lem6220804 {_123774 : Type'} (x : _123774) (y : _123774) (z : _123774) : term2630 _123774 x y z.
Proof. exact (@lem6220803 _123774 x y z). Qed.
Lemma lem6220805 {_123774 : Type'} (m : nat) (_79041 : type399 _123774) (op : type1400 _123774) (f : nat -> _123774) (n : nat) : term2632 _123774 m _79041 op f n.
Proof. exact (@lem6220804 _123774 (term2326 _123774 m _79041 op f n) (term2318 _123774 m _79041 op f n) (term2326 _123774 m _79041 op f n)). Qed.
Lemma lem6220808 {_123774 : Type'} (m : nat) (_79041 : type399 _123774) (f : nat -> _123774) (n : nat) (op : type1400 _123774) (y : type402 _123774) (z : type402 _123774) (x : type402 _123774) (h1 : @monoidal _123774 op) (h2 : term2269 _123774 y z x) : (term2318 _123774 m _79041 op f n) = (term2326 _123774 m _79041 op f n).
Proof. exact (@lem6220805 _123774 m _79041 op f n (@lem6220801 _123774 m _79041 f n op y z x h1 h2)). Qed.
Lemma lem6220809 {_123774 : Type'} (m : nat) (_79041 : type399 _123774) (f : nat -> _123774) (n : nat) (op : type1400 _123774) (y : type402 _123774) (z : type402 _123774) (x : type402 _123774) (h1 : @monoidal _123774 op) (h2 : term2269 _123774 y z x) : (term2318 _123774 m _79041 op f n) = (term2326 _123774 m _79041 op f n).
Proof. exact (@lem6220808 _123774 m _79041 f n op y z x h1 h2). Qed.
Lemma lem6220810 {_123774 : Type'} (m : nat) (_79041 : type399 _123774) (f : nat -> _123774) (n : nat) (op : type1400 _123774) (y : type402 _123774) (z : type402 _123774) (x : type402 _123774) (h1 : @monoidal _123774 op) (h2 : term2269 _123774 y z x) : term2633 _123774 m _79041 op f n.
Proof. exact (fun h0 : term2328 _123774 m _79041 op f n => @lem6220809 _123774 m _79041 f n op y z x h1 h2). Qed.
Lemma lem6220812 (p : Prop) : (term2595 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem6220813 {_123774 : Type'} (m : nat) (_79041 : type399 _123774) (op : type1400 _123774) (f : nat -> _123774) (n : nat) : (term2633 _123774 m _79041 op f n) = ((term2318 _123774 m _79041 op f n) = (term2326 _123774 m _79041 op f n)).
Proof. exact (@lem6220812 ((term2318 _123774 m _79041 op f n) = (term2326 _123774 m _79041 op f n))). Qed.
Lemma lem6220814 {_123774 : Type'} (m : nat) (_79041 : type399 _123774) (f : nat -> _123774) (n : nat) (op : type1400 _123774) (y : type402 _123774) (z : type402 _123774) (x : type402 _123774) (h1 : @monoidal _123774 op) (h2 : term2269 _123774 y z x) : (term2318 _123774 m _79041 op f n) = (term2326 _123774 m _79041 op f n).
Proof. exact (EQ_MP (@lem6220813 _123774 m _79041 op f n) (@lem6220810 _123774 m _79041 f n op y z x h1 h2)). Qed.
Lemma lem6220817 (p : Prop) : (~ p) = (p -> False).
Proof. exact (EQ_MP (@lem21021 p) (@lem0)). Qed.
Lemma lem6220819 {_123774 : Type'} (m : nat) (_79041 : type399 _123774) (op : type1400 _123774) (f : nat -> _123774) (n : nat) : (term2328 _123774 m _79041 op f n) = (term2634 _123774 m _79041 op f n).
Proof. exact (@lem6220817 ((term2318 _123774 m _79041 op f n) = (term2326 _123774 m _79041 op f n))). Qed.
Lemma lem6220822 {_123774 : Type'} (m : nat) (_79041 : type399 _123774) (op : type1400 _123774) (f : nat -> _123774) (n : nat) (h1 : term1826 _123774 m _79041 op f n) : term2634 _123774 m _79041 op f n.
Proof. exact (EQ_MP (@lem6220819 _123774 m _79041 op f n) (@lem6220314 _123774 m _79041 op f n h1)). Qed.
Lemma lem6220825 {_123774 : Type'} (m : nat) (_79041 : type399 _123774) (op : type1400 _123774) (f : nat -> _123774) (n : nat) (y : type402 _123774) (z : type402 _123774) (x : type402 _123774) (h1 : @monoidal _123774 op) (h2 : term1826 _123774 m _79041 op f n) (h3 : term2269 _123774 y z x) : False.
Proof. exact (@lem6220822 _123774 m _79041 op f n h2 (@lem6220814 _123774 m _79041 f n op y z x h1 h3)). Qed.
Lemma lem6220826 {_123774 : Type'} (m : nat) (_79041 : type399 _123774) (op : type1400 _123774) (f : nat -> _123774) (n : nat) (y : type402 _123774) (z : type402 _123774) (x : type402 _123774) (h1 : @monoidal _123774 op) (h2 : term1826 _123774 m _79041 op f n) (h3 : term2269 _123774 y z x) : term2635.
Proof. exact (fun h0 : ~ False => @lem6220825 _123774 m _79041 op f n y z x h1 h2 h3). Qed.
Lemma lem6220828 (p : Prop) : (term2595 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem6220829 : term2635 = False.
Proof. exact (@lem6220828 False). Qed.
Lemma lem6220830 {_123774 : Type'} (m : nat) (_79041 : type399 _123774) (op : type1400 _123774) (f : nat -> _123774) (n : nat) (y : type402 _123774) (z : type402 _123774) (x : type402 _123774) (h1 : @monoidal _123774 op) (h2 : term1826 _123774 m _79041 op f n) (h3 : term2269 _123774 y z x) : False.
Proof. exact (EQ_MP (@lem6220829) (@lem6220826 _123774 m _79041 op f n y z x h1 h2 h3)). Qed.
Lemma lem6220831 {_123774 : Type'} (y : type402 _123774) (x : type402 _123774) (m : nat) (_79041 : type399 _123774) (op : type1400 _123774) (f : nat -> _123774) (n : nat) (h1 : term2272 _123774 y x) (h2 : @monoidal _123774 op) (h3 : term1826 _123774 m _79041 op f n) : False.
Proof. exact (ex_elim (@lem6218574 _123774 y x h1) (fun z : type402 _123774 => fun h0 : term2271 _123774 y x z => @lem6220830 _123774 m _79041 op f n y z x h2 h3 h0)). Qed.
Lemma lem6220832 {_123774 : Type'} (x : type402 _123774) (m : nat) (_79041 : type399 _123774) (op : type1400 _123774) (f : nat -> _123774) (n : nat) (h1 : term2274 _123774 x) (h2 : @monoidal _123774 op) (h3 : term1826 _123774 m _79041 op f n) : False.
Proof. exact (ex_elim (@lem6218573 _123774 x h1) (fun y : type402 _123774 => fun h0 : term2273 _123774 x y => @lem6220831 _123774 y x m _79041 op f n h0 h2 h3)). Qed.
Lemma lem6220833 {_123774 : Type'} (m : nat) (_79041 : type399 _123774) (op : type1400 _123774) (f : nat -> _123774) (n : nat) (h1 : term1759 _123774) (h2 : @monoidal _123774 op) (h3 : term1826 _123774 m _79041 op f n) : False.
Proof. exact (ex_elim (@lem6218572 _123774 h1) (fun x : type402 _123774 => fun h0 : term2275 _123774 x => @lem6220832 _123774 x m _79041 op f n h0 h2 h3)). Qed.
Lemma lem6220834 {_123774 : Type'} (m : nat) (_79041 : type399 _123774) (op : type1400 _123774) (f : nat -> _123774) (n : nat) (h1 : term1759 _123774) (h2 : @monoidal _123774 op) (h3 : term1826 _123774 m _79041 op f n) : (term1826 _123774 m _79041 op f n) = False.
Proof. exact (prop_ext (fun h4 : term1826 _123774 m _79041 op f n => @lem6220833 _123774 m _79041 op f n h1 h2 h3) (fun h4 : False => @lem6217876 _123774 m _79041 op f n h3)). Qed.
Lemma lem6220835 {_123774 : Type'} (m : nat) (_79041 : type399 _123774) (op : type1400 _123774) (f : nat -> _123774) (n : nat) (h1 : term1759 _123774) (h2 : @monoidal _123774 op) (h3 : term1826 _123774 m _79041 op f n) : False.
Proof. exact (EQ_MP (@lem6220834 _123774 m _79041 op f n h1 h2 h3) (@lem6217876 _123774 m _79041 op f n h3)). Qed.
Lemma lem6220836 {_123774 : Type'} (m : nat) (_79041 : type399 _123774) (op : type1400 _123774) (f : nat -> _123774) (n : nat) (h1 : term1759 _123774) (h2 : @monoidal _123774 op) (h3 : term1826 _123774 m _79041 op f n) : (@monoidal _123774 op) = False.
Proof. exact (prop_ext (fun h4 : @monoidal _123774 op => @lem6220835 _123774 m _79041 op f n h1 h2 h3) (fun h4 : False => @lem6217858 _123774 op h2)). Qed.
Lemma lem6220837 {_123774 : Type'} (m : nat) (_79041 : type399 _123774) (op : type1400 _123774) (f : nat -> _123774) (n : nat) (h1 : term1759 _123774) (h2 : @monoidal _123774 op) (h3 : term1826 _123774 m _79041 op f n) : False.
Proof. exact (EQ_MP (@lem6220836 _123774 m _79041 op f n h1 h2 h3) (@lem6217858 _123774 op h2)). Qed.
Lemma lem6220838 {_123774 : Type'} (m : nat) (_79041 : type399 _123774) (op : type1400 _123774) (f : nat -> _123774) (n : nat) (h1 : @monoidal _123774 op) (h2 : term1826 _123774 m _79041 op f n) : term1764 _123774.
Proof. exact (fun h0 : term1759 _123774 => @lem6220837 _123774 m _79041 op f n h0 h1 h2). Qed.
Lemma lem6220839 {_123774 : Type'} : (term1764 _123774) = (term1765 _123774).
Proof. exact (@lem69 (term1759 _123774)). Qed.
Lemma lem6220840 {_123774 : Type'} (m : nat) (_79041 : type399 _123774) (op : type1400 _123774) (f : nat -> _123774) (n : nat) (h1 : @monoidal _123774 op) (h2 : term1826 _123774 m _79041 op f n) : term1765 _123774.
Proof. exact (EQ_MP (@lem6220839 _123774) (@lem6220838 _123774 m _79041 op f n h1 h2)). Qed.
Lemma lem6220841 {_123774 : Type'} (m : nat) (_79041 : type399 _123774) (f : nat -> _123774) (n : nat) (op : type1400 _123774) (h1 : @monoidal _123774 op) : term1828 _123774 m _79041 op f n.
Proof. exact (fun h0 : term1826 _123774 m _79041 op f n => @lem6220840 _123774 m _79041 op f n h1 h0). Qed.
Lemma lem6220842 {_123774 : Type'} (m : nat) (_79041 : type399 _123774) (f : nat -> _123774) (n : nat) (op : type1400 _123774) (h1 : @monoidal _123774 op) : term1829 _123774 m _79041 op f n.
Proof. exact (fun h0 : term376 m n => @lem6220841 _123774 m _79041 f n op h1). Qed.
Lemma lem6220843 {_123774 : Type'} (m : nat) (_79041 : type399 _123774) (f : nat -> _123774) (n : nat) (op : type1400 _123774) (h1 : @monoidal _123774 op) : term1832 _123774 m _79041 op f n.
Proof. exact (fun h0 : (term1393 _123774 op m n f) = (term1819 _123774 m n _79041 op f) => @lem6220842 _123774 m _79041 f n op h1). Qed.
Lemma lem6220844 {_123774 : Type'} (m : nat) (_79041 : type399 _123774) (op : type1400 _123774) (f : nat -> _123774) (n : nat) : term1833 _123774 m _79041 op f n.
Proof. exact (fun h0 : @monoidal _123774 op => @lem6220843 _123774 m _79041 f n op h0). Qed.
Lemma lem6220849 {_123774 : Type'} (_79041 : type399 _123774) (op : type1400 _123774) (f : nat -> _123774) (n : nat) : term1835 _123774 _79041 op f n.
Proof. exact (fun m : nat => @lem6220844 _123774 m _79041 op f n). Qed.
Lemma lem6220854 {_123774 : Type'} (_79041 : type399 _123774) (f : nat -> _123774) (n : nat) : term1837 _123774 _79041 f n.
Proof. exact (fun op : type1400 _123774 => @lem6220849 _123774 _79041 op f n). Qed.
Lemma lem6220859 {_123774 : Type'} (_79041 : type399 _123774) (n : nat) : term1839 _123774 _79041 n.
Proof. exact (fun f : nat -> _123774 => @lem6220854 _123774 _79041 f n). Qed.
Lemma lem6220864 {_123774 : Type'} (_79041 : type399 _123774) : term1841 _123774 _79041.
Proof. exact (fun n : nat => @lem6220859 _123774 _79041 n). Qed.
Lemma lem6220865 {_123774 : Type'} (_79041 : type399 _123774) : term1898 _123774 _79041.
Proof. exact (fun h0 : term1896 _123774 _79041 => @lem6220864 _123774 _79041). Qed.
Lemma lem6220870 {_123774 : Type'} : term1900 _123774.
Proof. exact (fun _79041 : type399 _123774 => @lem6220865 _123774 _79041). Qed.
Lemma lem6220871 {_123774 : Type'} : term1789 _123774.
Proof. exact (EQ_MP (@lem6217819 _123774) (@lem6220870 _123774)). Qed.
Lemma lem6220872 {_123774 : Type'} (n : nat) : term2636 _123774 n.
Proof. exact (@lem6220871 _123774 n). Qed.
Lemma lem6220873 {_123774 : Type'} (n : nat) : (term2636 _123774 n) = (term1785 _123774 n).
Proof. exact (eq_refl (term2636 _123774 n)). Qed.
Lemma lem6220874 {_123774 : Type'} (n : nat) : term1785 _123774 n.
Proof. exact (EQ_MP (@lem6220873 _123774 n) (@lem6220872 _123774 n)). Qed.
Lemma lem6220875 {_123774 : Type'} (n : nat) (f : nat -> _123774) : term2637 _123774 n f.
Proof. exact (@lem6220874 _123774 n f). Qed.
Lemma lem6220876 {_123774 : Type'} (f : nat -> _123774) (n : nat) : (term2637 _123774 n f) = (term1781 _123774 f n).
Proof. exact (eq_refl (term2637 _123774 n f)). Qed.
Lemma lem6220877 {_123774 : Type'} (f : nat -> _123774) (n : nat) : term1781 _123774 f n.
Proof. exact (EQ_MP (@lem6220876 _123774 f n) (@lem6220875 _123774 n f)). Qed.
Lemma lem6220878 {_123774 : Type'} (f : nat -> _123774) (n : nat) (op : type1400 _123774) : term2638 _123774 f n op.
Proof. exact (@lem6220877 _123774 f n op). Qed.
Lemma lem6220879 {_123774 : Type'} (op : type1400 _123774) (f : nat -> _123774) (n : nat) : (term2638 _123774 f n op) = (term1777 _123774 op f n).
Proof. exact (eq_refl (term2638 _123774 f n op)). Qed.
Lemma lem6220880 {_123774 : Type'} (op : type1400 _123774) (f : nat -> _123774) (n : nat) : term1777 _123774 op f n.
Proof. exact (EQ_MP (@lem6220879 _123774 op f n) (@lem6220878 _123774 f n op)). Qed.
Lemma lem6220881 {_123774 : Type'} (op : type1400 _123774) (f : nat -> _123774) (n : nat) (m : nat) : term2639 _123774 op f n m.
Proof. exact (@lem6220880 _123774 op f n m). Qed.
Lemma lem6220882 {_123774 : Type'} (m : nat) (op : type1400 _123774) (f : nat -> _123774) (n : nat) : (term2639 _123774 op f n m) = (term1760 _123774 m op f n).
Proof. exact (eq_refl (term2639 _123774 op f n m)). Qed.
Lemma lem6220883 {_123774 : Type'} (m : nat) (op : type1400 _123774) (f : nat -> _123774) (n : nat) : term1760 _123774 m op f n.
Proof. exact (EQ_MP (@lem6220882 _123774 m op f n) (@lem6220881 _123774 op f n m)). Qed.
Lemma lem6220885 {_123774 : Type'} (m : nat) (op : type1400 _123774) (f : nat -> _123774) (n : nat) : term1760 _123774 m op f n.
Proof. exact (@lem6217098 _123774 m op f n (@lem6220883 _123774 m op f n)). Qed.
Lemma lem6220886 {_123774 : Type'} (m : nat) (f : nat -> _123774) (n : nat) (op : type1400 _123774) (h1 : @monoidal _123774 op) : term1771 _123774 m op f n.
Proof. exact (@lem6220885 _123774 m op f n (@lem6213181 _123774 op h1)). Qed.
Lemma lem6220887 {_123774 : Type'} (m : nat) (n : nat) (op : type1400 _123774) (f : nat -> _123774) (h1 : @monoidal _123774 op) (h2 : (term1393 _123774 op m n f) = (term1394 _123774 m n op f)) : term1769 _123774 m op f n.
Proof. exact (@lem6220886 _123774 m f n op h1 (@lem6213205 _123774 m n op f h2)). Qed.
Lemma lem6220888 {_123774 : Type'} (m : nat) (n : nat) (op : type1400 _123774) (f : nat -> _123774) (h1 : @monoidal _123774 op) (h2 : term376 m n) (h3 : (term1393 _123774 op m n f) = (term1394 _123774 m n op f)) : term1767 _123774 m op f n.
Proof. exact (@lem6220887 _123774 m n op f h1 h3 (@lem6216976 m n h2)). Qed.
Lemma lem6220889 {_123774 : Type'} (m : nat) (n : nat) (op : type1400 _123774) (f : nat -> _123774) (h1 : @monoidal _123774 op) (h2 : term1758 _123774 m op f n) (h3 : term376 m n) (h4 : (term1393 _123774 op m n f) = (term1394 _123774 m n op f)) : term1764 _123774.
Proof. exact (@lem6220888 _123774 m n op f h1 h3 h4 (@lem6217080 _123774 m op f n h2)). Qed.
Lemma lem6220890 {_123774 : Type'} (m : nat) (n : nat) (op : type1400 _123774) (f : nat -> _123774) (h1 : @monoidal _123774 op) (h2 : term1758 _123774 m op f n) (h3 : term376 m n) (h4 : (term1393 _123774 op m n f) = (term1394 _123774 m n op f)) : False.
Proof. exact (@lem6220889 _123774 m n op f h1 h2 h3 h4 (@lem6217081 _123774)). Qed.
Lemma lem6220891 {_123774 : Type'} (m : nat) (n : nat) (op : type1400 _123774) (f : nat -> _123774) (h1 : @monoidal _123774 op) (h2 : term1758 _123774 m op f n) (h3 : term376 m n) (h4 : (term1393 _123774 op m n f) = (term1394 _123774 m n op f)) : (term1758 _123774 m op f n) = False.
Proof. exact (prop_ext (fun h5 : term1758 _123774 m op f n => @lem6220890 _123774 m n op f h1 h2 h3 h4) (fun h5 : False => @lem6217080 _123774 m op f n h2)). Qed.
Lemma lem6220892 {_123774 : Type'} (m : nat) (n : nat) (op : type1400 _123774) (f : nat -> _123774) (h1 : @monoidal _123774 op) (h2 : term1758 _123774 m op f n) (h3 : term376 m n) (h4 : (term1393 _123774 op m n f) = (term1394 _123774 m n op f)) : False.
Proof. exact (EQ_MP (@lem6220891 _123774 m n op f h1 h2 h3 h4) (@lem6217080 _123774 m op f n h2)). Qed.
Lemma lem6220893 {_123774 : Type'} (m : nat) (n : nat) (op : type1400 _123774) (f : nat -> _123774) (h1 : @monoidal _123774 op) (h2 : term376 m n) (h3 : (term1393 _123774 op m n f) = (term1394 _123774 m n op f)) : term1757 _123774 m op f n.
Proof. exact (fun h0 : term1758 _123774 m op f n => @lem6220892 _123774 m n op f h1 h0 h2 h3). Qed.
Lemma lem6220894 {_123774 : Type'} (m : nat) (n : nat) (op : type1400 _123774) (f : nat -> _123774) (h1 : @monoidal _123774 op) (h2 : term376 m n) (h3 : (term1393 _123774 op m n f) = (term1394 _123774 m n op f)) : (term1745 _123774 m op f n) = (term1755 _123774 m op f n).
Proof. exact (EQ_MP (@lem6217079 _123774 m op f n) (@lem6220893 _123774 m n op f h1 h2 h3)). Qed.
Lemma lem6220895 {_123774 : Type'} (m : nat) (n : nat) (op : type1400 _123774) (f : nat -> _123774) (h1 : @monoidal _123774 op) (h2 : term376 m n) (h3 : (term1393 _123774 op m n f) = (term1394 _123774 m n op f)) : (term1745 _123774 m op f n) = (term1690 _123774 m op f n).
Proof. exact (EQ_MP (@lem6217075 _123774 m op f n) (@lem6220894 _123774 m n op f h1 h2 h3)). Qed.
Lemma lem6220896 {_123774 : Type'} (m : nat) (n : nat) (op : type1400 _123774) (f : nat -> _123774) (h1 : @monoidal _123774 op) (h2 : term376 m n) (h3 : (term1393 _123774 op m n f) = (term1394 _123774 m n op f)) : (term1730 _123774 m op f n) = (term1731 _123774 m n op f).
Proof. exact (EQ_MP (@lem6217031 _123774 m n op f) (@lem6220895 _123774 m n op f h1 h2 h3)). Qed.
Lemma lem6220897 {_123774 : Type'} (op : type1400 _123774) (f : nat -> _123774) (m : nat) (n : nat) (h1 : term391 m n) : (term1702 _123774 m n op f) = (term1696 _123774 m n op f).
Proof. exact (EQ_MP (@lem6217007 _123774 op f m n h1) (@lem6217055 _123774 m n op f)). Qed.
Lemma lem6220898 {_123774 : Type'} (op : type1400 _123774) (f : nat -> _123774) (m : nat) (n : nat) (h1 : term391 m n) : (term391 m n) = ((term1702 _123774 m n op f) = (term1696 _123774 m n op f)).
Proof. exact (prop_ext (fun h2 : term391 m n => @lem6220897 _123774 op f m n h1) (fun h2 : (term1702 _123774 m n op f) = (term1696 _123774 m n op f) => @lem6216992 m n h1)). Qed.
Lemma lem6220899 {_123774 : Type'} (op : type1400 _123774) (f : nat -> _123774) (m : nat) (n : nat) (h1 : term391 m n) : (term1702 _123774 m n op f) = (term1696 _123774 m n op f).
Proof. exact (EQ_MP (@lem6220898 _123774 op f m n h1) (@lem6216992 m n h1)). Qed.
Lemma lem6220900 {_123774 : Type'} (m : nat) (n : nat) (op : type1400 _123774) (f : nat -> _123774) : term1717 _123774 m n op f.
Proof. exact (fun h0 : term391 m n => @lem6220899 _123774 op f m n h0). Qed.
Lemma lem6220901 {_123774 : Type'} (m : nat) (n : nat) (op : type1400 _123774) (f : nat -> _123774) (h1 : @monoidal _123774 op) (h2 : term376 m n) (h3 : (term1393 _123774 op m n f) = (term1394 _123774 m n op f)) : (term1704 _123774 m op f n) = (term1696 _123774 m n op f).
Proof. exact (EQ_MP (@lem6216991 _123774 op f m n h2) (@lem6220896 _123774 m n op f h1 h2 h3)). Qed.
Lemma lem6220902 {_123774 : Type'} (m : nat) (n : nat) (op : type1400 _123774) (f : nat -> _123774) (h1 : @monoidal _123774 op) (h2 : term376 m n) (h3 : (term1393 _123774 op m n f) = (term1394 _123774 m n op f)) : (term376 m n) = ((term1704 _123774 m op f n) = (term1696 _123774 m n op f)).
Proof. exact (prop_ext (fun h4 : term376 m n => @lem6220901 _123774 m n op f h1 h2 h3) (fun h4 : (term1704 _123774 m op f n) = (term1696 _123774 m n op f) => @lem6216976 m n h2)). Qed.
Lemma lem6220903 {_123774 : Type'} (m : nat) (n : nat) (op : type1400 _123774) (f : nat -> _123774) (h1 : @monoidal _123774 op) (h2 : term376 m n) (h3 : (term1393 _123774 op m n f) = (term1394 _123774 m n op f)) : (term1704 _123774 m op f n) = (term1696 _123774 m n op f).
Proof. exact (EQ_MP (@lem6220902 _123774 m n op f h1 h2 h3) (@lem6216976 m n h2)). Qed.
Lemma lem6220904 {_123774 : Type'} (m : nat) (n : nat) (op : type1400 _123774) (f : nat -> _123774) (h1 : @monoidal _123774 op) (h2 : (term1393 _123774 op m n f) = (term1394 _123774 m n op f)) : term1721 _123774 m n op f.
Proof. exact (fun h0 : term376 m n => @lem6220903 _123774 m n op f h1 h0 h2). Qed.
Lemma lem6220905 {_123774 : Type'} (m : nat) (n : nat) (op : type1400 _123774) (f : nat -> _123774) (h1 : @monoidal _123774 op) (h2 : (term1393 _123774 op m n f) = (term1394 _123774 m n op f)) : term1724 _123774 m n op f.
Proof. exact (conj (@lem6220904 _123774 m n op f h1 h2) (@lem6220900 _123774 m n op f)). Qed.
Lemma lem6220906 {_123774 : Type'} (m : nat) (n : nat) (op : type1400 _123774) (f : nat -> _123774) (h1 : @monoidal _123774 op) (h2 : (term1393 _123774 op m n f) = (term1394 _123774 m n op f)) : (term1707 _123774 m n op f) = (term1696 _123774 m n op f).
Proof. exact (EQ_MP (@lem6216975 _123774 m n op f) (@lem6220905 _123774 m n op f h1 h2)). Qed.
Lemma lem6220907 {_123774 : Type'} (m : nat) (n : nat) (op : type1400 _123774) (f : nat -> _123774) (h1 : @monoidal _123774 op) (h2 : (term1393 _123774 op m n f) = (term1394 _123774 m n op f)) : (term1671 _123774 m n op f) = (term1696 _123774 m n op f).
Proof. exact (EQ_MP (@lem6216957 _123774 m n op f) (@lem6220906 _123774 m n op f h1 h2)). Qed.
Lemma lem6220908 {_123774 : Type'} (m : nat) (n : nat) (op : type1400 _123774) (f : nat -> _123774) (h1 : @monoidal _123774 op) (h2 : (term1393 _123774 op m n f) = (term1394 _123774 m n op f)) : (term1624 _123774 op m n f) = (term1399 _123774 m n op f).
Proof. exact (EQ_MP (@lem6216922 _123774 m n op f h1 h2) (@lem6220907 _123774 m n op f h1 h2)). Qed.
Lemma lem6220910 {_123774 : Type'} (m : nat) (n : nat) (op : type1400 _123774) (f : nat -> _123774) (h1 : @monoidal _123774 op) (h2 : (term1393 _123774 op m n f) = (term1394 _123774 m n op f)) : (term1398 _123774 op m n f) = (term1399 _123774 m n op f).
Proof. exact (EQ_MP (@lem6215993 _123774 m n op f) (@lem6220908 _123774 m n op f h1 h2)). Qed.
Lemma lem6220911 {_123774 : Type'} (m : nat) (f : nat -> _123774) (op : type1400 _123774) (h1 : @monoidal _123774 op) : (term1388 _123774 op m f) = (term1389 _123774 m op f).
Proof. exact (EQ_MP (@lem6213229 _123774 m op f) (@lem6215976 _123774 m f op h1)). Qed.
Lemma lem6220912 {_123774 : Type'} (m : nat) (n : nat) (f : nat -> _123774) (op : type1400 _123774) (h1 : @monoidal _123774 op) : term1401 _123774 m n op f.
Proof. exact (fun h0 : (term1393 _123774 op m n f) = (term1394 _123774 m n op f) => @lem6220910 _123774 m n op f h1 h0). Qed.
Lemma lem6220917 {_123774 : Type'} (m : nat) (f : nat -> _123774) (op : type1400 _123774) (h1 : @monoidal _123774 op) : term1405 _123774 m op f.
Proof. exact (fun n : nat => @lem6220912 _123774 m n f op h1). Qed.
Lemma lem6220918 {_123774 : Type'} (m : nat) (f : nat -> _123774) (op : type1400 _123774) (h1 : @monoidal _123774 op) : term1407 _123774 m op f.
Proof. exact (conj (@lem6220911 _123774 m f op h1) (@lem6220917 _123774 m f op h1)). Qed.
Lemma lem6220919 {_123774 : Type'} (m : nat) (f : nat -> _123774) (op : type1400 _123774) (h1 : @monoidal _123774 op) : term1412 _123774 m op f.
Proof. exact (@lem6213204 _123774 m op f (@lem6220918 _123774 m f op h1)). Qed.
Lemma lem6220924 {_123774 : Type'} (f : nat -> _123774) (op : type1400 _123774) (h1 : @monoidal _123774 op) : term2640 _123774 op f.
Proof. exact (fun m : nat => @lem6220919 _123774 m f op h1). Qed.
Lemma lem6220929 {_123774 : Type'} (op : type1400 _123774) (h1 : @monoidal _123774 op) : term2641 _123774 op.
Proof. exact (fun f : nat -> _123774 => @lem6220924 _123774 f op h1). Qed.
Lemma lem6220930 {_123774 : Type'} (op : type1400 _123774) : term2642 _123774 op.
Proof. exact (fun h0 : @monoidal _123774 op => @lem6220929 _123774 op h0). Qed.
Lemma lem6220935 {_123774 : Type'} : term2643 _123774.
Proof. exact (fun op : type1400 _123774 => @lem6220930 _123774 op). Qed.
