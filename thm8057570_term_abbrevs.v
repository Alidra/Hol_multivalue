Require Import coq.
Require Import theory_hol.
Require Import hol_types.
Require Import hol_type_abbrevs.
Require Import hol_terms.
Definition term83 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') := fun y0 : type1248 a0 a1 a2 a3 => forall y1 : type1669, (forall y2 : a3, forall y3 : a2, (y0 y1 (@nil (prod (a1 -> a2) (a3 -> a1 -> a0))) y2 y3) = (@ε a0 (fun y4 : a0 => True))) /\ (forall y2 : type1644 a0 a1 a2 a3, forall y3 : type1633 a0 a1 a2 a3, forall y4 : a3, forall y5 : a2, (y0 y1 (@cons (prod (a1 -> a2) (a3 -> a1 -> a0)) y2 y3) y4 y5) = (@COND a0 (exists y6 : a1, (@fst (a1 -> a2) (a3 -> a1 -> a0) y2 y6) = y5) (@snd (a1 -> a2) (a3 -> a1 -> a0) y2 y4 (@ε a1 (fun y6 : a1 => (@fst (a1 -> a2) (a3 -> a1 -> a0) y2 y6) = y5))) (y0 y1 y3 y4 y5))).
Definition term49 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') (x0 : type1066 a0 a1 a2 a3) := forall y0 : type1644 a0 a1 a2 a3, forall y1 : type1633 a0 a1 a2 a3, (x0 (@cons (prod (a1 -> a2) (a3 -> a1 -> a0)) y0 y1)) = ((fun y2 : type1644 a0 a1 a2 a3 => fun y3 : type1633 a0 a1 a2 a3 => fun y4 : type1518 a0 a2 a3 => fun y5 : a3 => fun y6 : a2 => @COND a0 (exists y7 : a1, (@fst (a1 -> a2) (a3 -> a1 -> a0) y2 y7) = y6) (@snd (a1 -> a2) (a3 -> a1 -> a0) y2 y5 (@ε a1 (fun y7 : a1 => (@fst (a1 -> a2) (a3 -> a1 -> a0) y2 y7) = y6))) (y4 y5 y6)) y0 y1 (x0 y1)).
Definition term74 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') := @eq Prop (forall y0 : type1669, exists y1 : type1066 a0 a1 a2 a3, (forall y2 : a3, forall y3 : a2, (y1 (@nil (prod (a1 -> a2) (a3 -> a1 -> a0))) y2 y3) = (@ε a0 (fun y4 : a0 => True))) /\ (forall y2 : type1644 a0 a1 a2 a3, forall y3 : type1633 a0 a1 a2 a3, forall y4 : a3, forall y5 : a2, (y1 (@cons (prod (a1 -> a2) (a3 -> a1 -> a0)) y2 y3) y4 y5) = (@COND a0 (exists y6 : a1, (@fst (a1 -> a2) (a3 -> a1 -> a0) y2 y6) = y5) (@snd (a1 -> a2) (a3 -> a1 -> a0) y2 y4 (@ε a1 (fun y6 : a1 => (@fst (a1 -> a2) (a3 -> a1 -> a0) y2 y6) = y5))) (y1 y3 y4 y5)))).
Definition term73 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') := @eq Prop (forall y0 : type1669, exists y1 : type1066 a0 a1 a2 a3, (fun y2 : type1669 => fun y3 : type1066 a0 a1 a2 a3 => (forall y4 : a3, forall y5 : a2, (y3 (@nil (prod (a1 -> a2) (a3 -> a1 -> a0))) y4 y5) = (@ε a0 (fun y6 : a0 => True))) /\ (forall y4 : type1644 a0 a1 a2 a3, forall y5 : type1633 a0 a1 a2 a3, forall y6 : a3, forall y7 : a2, (y3 (@cons (prod (a1 -> a2) (a3 -> a1 -> a0)) y4 y5) y6 y7) = (@COND a0 (exists y8 : a1, (@fst (a1 -> a2) (a3 -> a1 -> a0) y4 y8) = y7) (@snd (a1 -> a2) (a3 -> a1 -> a0) y4 y6 (@ε a1 (fun y8 : a1 => (@fst (a1 -> a2) (a3 -> a1 -> a0) y4 y8) = y7))) (y3 y5 y6 y7)))) y0 y1).
Definition term47 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') (x0 : type1066 a0 a1 a2 a3) := fun y0 : type1644 a0 a1 a2 a3 => forall y1 : type1633 a0 a1 a2 a3, (x0 (@cons (prod (a1 -> a2) (a3 -> a1 -> a0)) y0 y1)) = ((fun y2 : type1644 a0 a1 a2 a3 => fun y3 : type1633 a0 a1 a2 a3 => fun y4 : type1518 a0 a2 a3 => fun y5 : a3 => fun y6 : a2 => @COND a0 (exists y7 : a1, (@fst (a1 -> a2) (a3 -> a1 -> a0) y2 y7) = y6) (@snd (a1 -> a2) (a3 -> a1 -> a0) y2 y5 (@ε a1 (fun y7 : a1 => (@fst (a1 -> a2) (a3 -> a1 -> a0) y2 y7) = y6))) (y4 y5 y6)) y0 y1 (x0 y1)).
Definition term43 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') (x0 : type1066 a0 a1 a2 a3) (x1 : type1644 a0 a1 a2 a3) (x2 : type1633 a0 a1 a2 a3) := @eq (a3 -> a2 -> a0) (x0 (@cons (prod (a1 -> a2) (a3 -> a1 -> a0)) x1 x2)).
Definition term25 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') (x0 : type1644 a0 a1 a2 a3) (x1 : type1066 a0 a1 a2 a3) := forall y0 : type1633 a0 a1 a2 a3, forall y1 : a3, forall y2 : a2, (x1 (@cons (prod (a1 -> a2) (a3 -> a1 -> a0)) x0 y0) y1 y2) = (@COND a0 (exists y3 : a1, (@fst (a1 -> a2) (a3 -> a1 -> a0) x0 y3) = y2) (@snd (a1 -> a2) (a3 -> a1 -> a0) x0 y1 (@ε a1 (fun y3 : a1 => (@fst (a1 -> a2) (a3 -> a1 -> a0) x0 y3) = y2))) (x1 y0 y1 y2)).
Definition term82 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') := fun y0 : type1248 a0 a1 a2 a3 => forall y1 : type1669, (fun y2 : type1669 => fun y3 : type1066 a0 a1 a2 a3 => (forall y4 : a3, forall y5 : a2, (y3 (@nil (prod (a1 -> a2) (a3 -> a1 -> a0))) y4 y5) = (@ε a0 (fun y6 : a0 => True))) /\ (forall y4 : type1644 a0 a1 a2 a3, forall y5 : type1633 a0 a1 a2 a3, forall y6 : a3, forall y7 : a2, (y3 (@cons (prod (a1 -> a2) (a3 -> a1 -> a0)) y4 y5) y6 y7) = (@COND a0 (exists y8 : a1, (@fst (a1 -> a2) (a3 -> a1 -> a0) y4 y8) = y7) (@snd (a1 -> a2) (a3 -> a1 -> a0) y4 y6 (@ε a1 (fun y8 : a1 => (@fst (a1 -> a2) (a3 -> a1 -> a0) y4 y8) = y7))) (y3 y5 y6 y7)))) y1 (y0 y1).
Definition term42 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') (x0 : type1644 a0 a1 a2 a3) (x1 : type1066 a0 a1 a2 a3) (x2 : type1633 a0 a1 a2 a3) := (fun y0 : type1518 a0 a2 a3 => fun y1 : a3 => fun y2 : a2 => @COND a0 (exists y3 : a1, (@fst (a1 -> a2) (a3 -> a1 -> a0) x0 y3) = y2) (@snd (a1 -> a2) (a3 -> a1 -> a0) x0 y1 (@ε a1 (fun y3 : a1 => (@fst (a1 -> a2) (a3 -> a1 -> a0) x0 y3) = y2))) (y0 y1 y2)) (x1 x2).
Definition term29 (a0 : Type') (a1 : Type') (x0 : a1) := (fun y0 : a1 => forall y1 : type1394 a0 a1, exists y2 : type1142 a0 a1, ((y2 (@nil a0)) = y0) /\ (forall y3 : a0, forall y4 : list a0, (y2 (@cons a0 y3 y4)) = (y1 y3 y4 (y2 y4)))) x0.
Definition term20 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') (x0 : type1644 a0 a1 a2 a3) (x1 : type1066 a0 a1 a2 a3) (x2 : type1633 a0 a1 a2 a3) (x3 : a3) (x4 : a2) := (fun y0 : a2 => @COND a0 (exists y1 : a1, (@fst (a1 -> a2) (a3 -> a1 -> a0) x0 y1) = y0) (@snd (a1 -> a2) (a3 -> a1 -> a0) x0 x3 (@ε a1 (fun y1 : a1 => (@fst (a1 -> a2) (a3 -> a1 -> a0) x0 y1) = y0))) (x1 x2 x3 y0)) x4.
Definition term45 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') (x0 : type1644 a0 a1 a2 a3) (x1 : type1066 a0 a1 a2 a3) := fun y0 : type1633 a0 a1 a2 a3 => (x1 (@cons (prod (a1 -> a2) (a3 -> a1 -> a0)) x0 y0)) = (fun y1 : a3 => fun y2 : a2 => @COND a0 (exists y3 : a1, (@fst (a1 -> a2) (a3 -> a1 -> a0) x0 y3) = y2) (@snd (a1 -> a2) (a3 -> a1 -> a0) x0 y1 (@ε a1 (fun y3 : a1 => (@fst (a1 -> a2) (a3 -> a1 -> a0) x0 y3) = y2))) (x1 y0 y1 y2)).
Definition term36 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') (x0 : type1644 a0 a1 a2 a3) := (fun y0 : type1644 a0 a1 a2 a3 => fun y1 : type1633 a0 a1 a2 a3 => fun y2 : type1518 a0 a2 a3 => fun y3 : a3 => fun y4 : a2 => @COND a0 (exists y5 : a1, (@fst (a1 -> a2) (a3 -> a1 -> a0) y0 y5) = y4) (@snd (a1 -> a2) (a3 -> a1 -> a0) y0 y3 (@ε a1 (fun y5 : a1 => (@fst (a1 -> a2) (a3 -> a1 -> a0) y0 y5) = y4))) (y2 y3 y4)) x0.
Definition term9 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') (x0 : type1066 a0 a1 a2 a3) := forall y0 : type1644 a0 a1 a2 a3, forall y1 : type1633 a0 a1 a2 a3, (x0 (@cons (prod (a1 -> a2) (a3 -> a1 -> a0)) y0 y1)) = (fun y2 : a3 => fun y3 : a2 => @COND a0 (exists y4 : a1, (@fst (a1 -> a2) (a3 -> a1 -> a0) y0 y4) = y3) (@snd (a1 -> a2) (a3 -> a1 -> a0) y0 y2 (@ε a1 (fun y4 : a1 => (@fst (a1 -> a2) (a3 -> a1 -> a0) y0 y4) = y3))) (x0 y1 y2 y3)).
Definition term65 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') := fun y0 : type1669 => fun y1 : type1066 a0 a1 a2 a3 => (forall y2 : a3, forall y3 : a2, (y1 (@nil (prod (a1 -> a2) (a3 -> a1 -> a0))) y2 y3) = (@ε a0 (fun y4 : a0 => True))) /\ (forall y2 : type1644 a0 a1 a2 a3, forall y3 : type1633 a0 a1 a2 a3, forall y4 : a3, forall y5 : a2, (y1 (@cons (prod (a1 -> a2) (a3 -> a1 -> a0)) y2 y3) y4 y5) = (@COND a0 (exists y6 : a1, (@fst (a1 -> a2) (a3 -> a1 -> a0) y2 y6) = y5) (@snd (a1 -> a2) (a3 -> a1 -> a0) y2 y4 (@ε a1 (fun y6 : a1 => (@fst (a1 -> a2) (a3 -> a1 -> a0) y2 y6) = y5))) (y1 y3 y4 y5))).
Definition term23 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') (x0 : type1644 a0 a1 a2 a3) (x1 : type1066 a0 a1 a2 a3) (x2 : type1633 a0 a1 a2 a3) (x3 : a3) := forall y0 : a2, (x1 (@cons (prod (a1 -> a2) (a3 -> a1 -> a0)) x0 x2) x3 y0) = (@COND a0 (exists y1 : a1, (@fst (a1 -> a2) (a3 -> a1 -> a0) x0 y1) = y0) (@snd (a1 -> a2) (a3 -> a1 -> a0) x0 x3 (@ε a1 (fun y1 : a1 => (@fst (a1 -> a2) (a3 -> a1 -> a0) x0 y1) = y0))) (x1 x2 x3 y0)).
Definition term31 (a0 : Type') (a1 : Type') (x0 : a1) (x1 : type1394 a0 a1) := (fun y0 : type1394 a0 a1 => exists y1 : type1142 a0 a1, ((y1 (@nil a0)) = x0) /\ (forall y2 : a0, forall y3 : list a0, (y1 (@cons a0 y2 y3)) = (y0 y2 y3 (y1 y3)))) x1.
Definition term18 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') (x0 : type1066 a0 a1 a2 a3) (x1 : type1644 a0 a1 a2 a3) (x2 : type1633 a0 a1 a2 a3) (x3 : a3) := @eq (a2 -> a0) (x0 (@cons (prod (a1 -> a2) (a3 -> a1 -> a0)) x1 x2) x3).
Definition term14 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') (x0 : type1644 a0 a1 a2 a3) (x1 : type1066 a0 a1 a2 a3) (x2 : type1633 a0 a1 a2 a3) := fun y0 : a3 => fun y1 : a2 => @COND a0 (exists y2 : a1, (@fst (a1 -> a2) (a3 -> a1 -> a0) x0 y2) = y1) (@snd (a1 -> a2) (a3 -> a1 -> a0) x0 y0 (@ε a1 (fun y2 : a1 => (@fst (a1 -> a2) (a3 -> a1 -> a0) x0 y2) = y1))) (x1 x2 y0 y1).
Definition term76 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') (x0 : type1248 a0 a1 a2 a3) (x1 : type1669) := (fun y0 : type1066 a0 a1 a2 a3 => (forall y1 : a3, forall y2 : a2, (y0 (@nil (prod (a1 -> a2) (a3 -> a1 -> a0))) y1 y2) = (@ε a0 (fun y3 : a0 => True))) /\ (forall y1 : type1644 a0 a1 a2 a3, forall y2 : type1633 a0 a1 a2 a3, forall y3 : a3, forall y4 : a2, (y0 (@cons (prod (a1 -> a2) (a3 -> a1 -> a0)) y1 y2) y3 y4) = (@COND a0 (exists y5 : a1, (@fst (a1 -> a2) (a3 -> a1 -> a0) y1 y5) = y4) (@snd (a1 -> a2) (a3 -> a1 -> a0) y1 y3 (@ε a1 (fun y5 : a1 => (@fst (a1 -> a2) (a3 -> a1 -> a0) y1 y5) = y4))) (y0 y2 y3 y4)))) (x0 x1).
Definition term56 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') := fun y0 : type1066 a0 a1 a2 a3 => (forall y1 : a3, forall y2 : a2, (y0 (@nil (prod (a1 -> a2) (a3 -> a1 -> a0))) y1 y2) = (@ε a0 (fun y3 : a0 => True))) /\ (forall y1 : type1644 a0 a1 a2 a3, forall y2 : type1633 a0 a1 a2 a3, forall y3 : a3, forall y4 : a2, (y0 (@cons (prod (a1 -> a2) (a3 -> a1 -> a0)) y1 y2) y3 y4) = (@COND a0 (exists y5 : a1, (@fst (a1 -> a2) (a3 -> a1 -> a0) y1 y5) = y4) (@snd (a1 -> a2) (a3 -> a1 -> a0) y1 y3 (@ε a1 (fun y5 : a1 => (@fst (a1 -> a2) (a3 -> a1 -> a0) y1 y5) = y4))) (y0 y2 y3 y4))).
Definition term88 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') := (fun y0 : type1248 a0 a1 a2 a3 => forall y1 : type1669, (forall y2 : a3, forall y3 : a2, (y0 y1 (@nil (prod (a1 -> a2) (a3 -> a1 -> a0))) y2 y3) = (@ε a0 (fun y4 : a0 => True))) /\ (forall y2 : type1644 a0 a1 a2 a3, forall y3 : type1633 a0 a1 a2 a3, forall y4 : a3, forall y5 : a2, (y0 y1 (@cons (prod (a1 -> a2) (a3 -> a1 -> a0)) y2 y3) y4 y5) = (@COND a0 (exists y6 : a1, (@fst (a1 -> a2) (a3 -> a1 -> a0) y2 y6) = y5) (@snd (a1 -> a2) (a3 -> a1 -> a0) y2 y4 (@ε a1 (fun y6 : a1 => (@fst (a1 -> a2) (a3 -> a1 -> a0) y2 y6) = y5))) (y0 y1 y3 y4 y5)))) (@ε ((prod nat (prod nat (prod nat (prod nat (prod nat (prod nat (prod nat nat))))))) -> (list (prod (a1 -> a2) (a3 -> a1 -> a0))) -> a3 -> a2 -> a0) (fun y0 : type1248 a0 a1 a2 a3 => forall y1 : type1669, (forall y2 : a3, forall y3 : a2, (y0 y1 (@nil (prod (a1 -> a2) (a3 -> a1 -> a0))) y2 y3) = (@ε a0 (fun y4 : a0 => True))) /\ (forall y2 : type1644 a0 a1 a2 a3, forall y3 : type1633 a0 a1 a2 a3, forall y4 : a3, forall y5 : a2, (y0 y1 (@cons (prod (a1 -> a2) (a3 -> a1 -> a0)) y2 y3) y4 y5) = (@COND a0 (exists y6 : a1, (@fst (a1 -> a2) (a3 -> a1 -> a0) y2 y6) = y5) (@snd (a1 -> a2) (a3 -> a1 -> a0) y2 y4 (@ε a1 (fun y6 : a1 => (@fst (a1 -> a2) (a3 -> a1 -> a0) y2 y6) = y5))) (y0 y1 y3 y4 y5))))).
Definition term4 (a0 : Type') (a1 : Type') (x0 : a1) := (fun y0 : a1 => @ε a0 (fun y1 : a0 => True)) x0.
Definition term5 (a0 : Type') := @ε a0 (fun y0 : a0 => True).
Definition term35 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') := fun y0 : type1644 a0 a1 a2 a3 => fun y1 : type1633 a0 a1 a2 a3 => fun y2 : type1518 a0 a2 a3 => fun y3 : a3 => fun y4 : a2 => @COND a0 (exists y5 : a1, (@fst (a1 -> a2) (a3 -> a1 -> a0) y0 y5) = y4) (@snd (a1 -> a2) (a3 -> a1 -> a0) y0 y3 (@ε a1 (fun y5 : a1 => (@fst (a1 -> a2) (a3 -> a1 -> a0) y0 y5) = y4))) (y2 y3 y4).
Definition term1 (a0 : Type') (a1 : Type') (a2 : Type') (x0 : a2) := (fun y0 : a2 => fun y1 : a1 => @ε a0 (fun y2 : a0 => True)) x0.
Definition term81 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') (x0 : type1248 a0 a1 a2 a3) := forall y0 : type1669, (forall y1 : a3, forall y2 : a2, (x0 y0 (@nil (prod (a1 -> a2) (a3 -> a1 -> a0))) y1 y2) = (@ε a0 (fun y3 : a0 => True))) /\ (forall y1 : type1644 a0 a1 a2 a3, forall y2 : type1633 a0 a1 a2 a3, forall y3 : a3, forall y4 : a2, (x0 y0 (@cons (prod (a1 -> a2) (a3 -> a1 -> a0)) y1 y2) y3 y4) = (@COND a0 (exists y5 : a1, (@fst (a1 -> a2) (a3 -> a1 -> a0) y1 y5) = y4) (@snd (a1 -> a2) (a3 -> a1 -> a0) y1 y3 (@ε a1 (fun y5 : a1 => (@fst (a1 -> a2) (a3 -> a1 -> a0) y1 y5) = y4))) (x0 y0 y2 y3 y4))).
Definition term55 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') := exists y0 : type1066 a0 a1 a2 a3, (forall y1 : a3, forall y2 : a2, (y0 (@nil (prod (a1 -> a2) (a3 -> a1 -> a0))) y1 y2) = (@ε a0 (fun y3 : a0 => True))) /\ (forall y1 : type1644 a0 a1 a2 a3, forall y2 : type1633 a0 a1 a2 a3, forall y3 : a3, forall y4 : a2, (y0 (@cons (prod (a1 -> a2) (a3 -> a1 -> a0)) y1 y2) y3 y4) = (@COND a0 (exists y5 : a1, (@fst (a1 -> a2) (a3 -> a1 -> a0) y1 y5) = y4) (@snd (a1 -> a2) (a3 -> a1 -> a0) y1 y3 (@ε a1 (fun y5 : a1 => (@fst (a1 -> a2) (a3 -> a1 -> a0) y1 y5) = y4))) (y0 y2 y3 y4))).
Definition term22 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') (x0 : type1066 a0 a1 a2 a3) (x1 : type1644 a0 a1 a2 a3) (x2 : type1633 a0 a1 a2 a3) (x3 : a3) (x4 : a2) := @eq a0 (x0 (@cons (prod (a1 -> a2) (a3 -> a1 -> a0)) x1 x2) x3 x4).
Definition term59 (a0 : Type') (a1 : Type') (x0 : type1413 a0 a1) := forall y0 : a0, exists y1 : a1, x0 y0 y1.
Definition term84 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') := exists y0 : type1248 a0 a1 a2 a3, forall y1 : type1669, (forall y2 : a3, forall y3 : a2, (y0 y1 (@nil (prod (a1 -> a2) (a3 -> a1 -> a0))) y2 y3) = (@ε a0 (fun y4 : a0 => True))) /\ (forall y2 : type1644 a0 a1 a2 a3, forall y3 : type1633 a0 a1 a2 a3, forall y4 : a3, forall y5 : a2, (y0 y1 (@cons (prod (a1 -> a2) (a3 -> a1 -> a0)) y2 y3) y4 y5) = (@COND a0 (exists y6 : a1, (@fst (a1 -> a2) (a3 -> a1 -> a0) y2 y6) = y5) (@snd (a1 -> a2) (a3 -> a1 -> a0) y2 y4 (@ε a1 (fun y6 : a1 => (@fst (a1 -> a2) (a3 -> a1 -> a0) y2 y6) = y5))) (y0 y1 y3 y4 y5))).
Definition term64 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') := exists y0 : type1248 a0 a1 a2 a3, forall y1 : type1669, (fun y2 : type1669 => fun y3 : type1066 a0 a1 a2 a3 => (forall y4 : a3, forall y5 : a2, (y3 (@nil (prod (a1 -> a2) (a3 -> a1 -> a0))) y4 y5) = (@ε a0 (fun y6 : a0 => True))) /\ (forall y4 : type1644 a0 a1 a2 a3, forall y5 : type1633 a0 a1 a2 a3, forall y6 : a3, forall y7 : a2, (y3 (@cons (prod (a1 -> a2) (a3 -> a1 -> a0)) y4 y5) y6 y7) = (@COND a0 (exists y8 : a1, (@fst (a1 -> a2) (a3 -> a1 -> a0) y4 y8) = y7) (@snd (a1 -> a2) (a3 -> a1 -> a0) y4 y6 (@ε a1 (fun y8 : a1 => (@fst (a1 -> a2) (a3 -> a1 -> a0) y4 y8) = y7))) (y3 y5 y6 y7)))) y1 (y0 y1).
Definition term62 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') (x0 : type1243 a0 a1 a2 a3) := exists y0 : type1248 a0 a1 a2 a3, forall y1 : type1669, x0 y1 (y0 y1).
Definition term80 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') (x0 : type1248 a0 a1 a2 a3) := forall y0 : type1669, (fun y1 : type1669 => fun y2 : type1066 a0 a1 a2 a3 => (forall y3 : a3, forall y4 : a2, (y2 (@nil (prod (a1 -> a2) (a3 -> a1 -> a0))) y3 y4) = (@ε a0 (fun y5 : a0 => True))) /\ (forall y3 : type1644 a0 a1 a2 a3, forall y4 : type1633 a0 a1 a2 a3, forall y5 : a3, forall y6 : a2, (y2 (@cons (prod (a1 -> a2) (a3 -> a1 -> a0)) y3 y4) y5 y6) = (@COND a0 (exists y7 : a1, (@fst (a1 -> a2) (a3 -> a1 -> a0) y3 y7) = y6) (@snd (a1 -> a2) (a3 -> a1 -> a0) y3 y5 (@ε a1 (fun y7 : a1 => (@fst (a1 -> a2) (a3 -> a1 -> a0) y3 y7) = y6))) (y2 y4 y5 y6)))) y0 (x0 y0).
Definition term86 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') := fun y0 : type340 a0 a1 a2 a3 => y0 (@ε ((prod nat (prod nat (prod nat (prod nat (prod nat (prod nat (prod nat nat))))))) -> (list (prod (a1 -> a2) (a3 -> a1 -> a0))) -> a3 -> a2 -> a0) y0).
Definition term0 (a0 : Type') (a1 : Type') (a2 : Type') := fun y0 : a2 => fun y1 : a1 => @ε a0 (fun y2 : a0 => True).
Definition term69 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') (x0 : type1669) := fun y0 : type1066 a0 a1 a2 a3 => (fun y1 : type1669 => fun y2 : type1066 a0 a1 a2 a3 => (forall y3 : a3, forall y4 : a2, (y2 (@nil (prod (a1 -> a2) (a3 -> a1 -> a0))) y3 y4) = (@ε a0 (fun y5 : a0 => True))) /\ (forall y3 : type1644 a0 a1 a2 a3, forall y4 : type1633 a0 a1 a2 a3, forall y5 : a3, forall y6 : a2, (y2 (@cons (prod (a1 -> a2) (a3 -> a1 -> a0)) y3 y4) y5 y6) = (@COND a0 (exists y7 : a1, (@fst (a1 -> a2) (a3 -> a1 -> a0) y3 y7) = y6) (@snd (a1 -> a2) (a3 -> a1 -> a0) y3 y5 (@ε a1 (fun y7 : a1 => (@fst (a1 -> a2) (a3 -> a1 -> a0) y3 y7) = y6))) (y2 y4 y5 y6)))) x0 y0.
Definition term41 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') (x0 : type1644 a0 a1 a2 a3) (x1 : type1066 a0 a1 a2 a3) (x2 : type1633 a0 a1 a2 a3) := (fun y0 : type1644 a0 a1 a2 a3 => fun y1 : type1633 a0 a1 a2 a3 => fun y2 : type1518 a0 a2 a3 => fun y3 : a3 => fun y4 : a2 => @COND a0 (exists y5 : a1, (@fst (a1 -> a2) (a3 -> a1 -> a0) y0 y5) = y4) (@snd (a1 -> a2) (a3 -> a1 -> a0) y0 y3 (@ε a1 (fun y5 : a1 => (@fst (a1 -> a2) (a3 -> a1 -> a0) y0 y5) = y4))) (y2 y3 y4)) x0 x2 (x1 x2).
Definition term19 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') (x0 : type1066 a0 a1 a2 a3) (x1 : type1644 a0 a1 a2 a3) (x2 : type1633 a0 a1 a2 a3) (x3 : a3) (x4 : a2) := x0 (@cons (prod (a1 -> a2) (a3 -> a1 -> a0)) x1 x2) x3 x4.
Definition term21 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') (x0 : type1644 a0 a1 a2 a3) (x1 : type1066 a0 a1 a2 a3) (x2 : type1633 a0 a1 a2 a3) (x3 : a3) (x4 : a2) := @COND a0 (exists y0 : a1, (@fst (a1 -> a2) (a3 -> a1 -> a0) x0 y0) = x4) (@snd (a1 -> a2) (a3 -> a1 -> a0) x0 x3 (@ε a1 (fun y0 : a1 => (@fst (a1 -> a2) (a3 -> a1 -> a0) x0 y0) = x4))) (x1 x2 x3 x4).
Definition term72 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') := fun y0 : type1669 => exists y1 : type1066 a0 a1 a2 a3, (forall y2 : a3, forall y3 : a2, (y1 (@nil (prod (a1 -> a2) (a3 -> a1 -> a0))) y2 y3) = (@ε a0 (fun y4 : a0 => True))) /\ (forall y2 : type1644 a0 a1 a2 a3, forall y3 : type1633 a0 a1 a2 a3, forall y4 : a3, forall y5 : a2, (y1 (@cons (prod (a1 -> a2) (a3 -> a1 -> a0)) y2 y3) y4 y5) = (@COND a0 (exists y6 : a1, (@fst (a1 -> a2) (a3 -> a1 -> a0) y2 y6) = y5) (@snd (a1 -> a2) (a3 -> a1 -> a0) y2 y4 (@ε a1 (fun y6 : a1 => (@fst (a1 -> a2) (a3 -> a1 -> a0) y2 y6) = y5))) (y1 y3 y4 y5))).
Definition term54 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') := exists y0 : type1066 a0 a1 a2 a3, ((y0 (@nil (prod (a1 -> a2) (a3 -> a1 -> a0)))) = (fun y1 : a3 => fun y2 : a2 => @ε a0 (fun y3 : a0 => True))) /\ (forall y1 : type1644 a0 a1 a2 a3, forall y2 : type1633 a0 a1 a2 a3, (y0 (@cons (prod (a1 -> a2) (a3 -> a1 -> a0)) y1 y2)) = (fun y3 : a3 => fun y4 : a2 => @COND a0 (exists y5 : a1, (@fst (a1 -> a2) (a3 -> a1 -> a0) y1 y5) = y4) (@snd (a1 -> a2) (a3 -> a1 -> a0) y1 y3 (@ε a1 (fun y5 : a1 => (@fst (a1 -> a2) (a3 -> a1 -> a0) y1 y5) = y4))) (y0 y2 y3 y4))).
Definition term34 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') := exists y0 : type1066 a0 a1 a2 a3, ((y0 (@nil (prod (a1 -> a2) (a3 -> a1 -> a0)))) = (fun y1 : a3 => fun y2 : a2 => @ε a0 (fun y3 : a0 => True))) /\ (forall y1 : type1644 a0 a1 a2 a3, forall y2 : type1633 a0 a1 a2 a3, (y0 (@cons (prod (a1 -> a2) (a3 -> a1 -> a0)) y1 y2)) = ((fun y3 : type1644 a0 a1 a2 a3 => fun y4 : type1633 a0 a1 a2 a3 => fun y5 : type1518 a0 a2 a3 => fun y6 : a3 => fun y7 : a2 => @COND a0 (exists y8 : a1, (@fst (a1 -> a2) (a3 -> a1 -> a0) y3 y8) = y7) (@snd (a1 -> a2) (a3 -> a1 -> a0) y3 y6 (@ε a1 (fun y8 : a1 => (@fst (a1 -> a2) (a3 -> a1 -> a0) y3 y8) = y7))) (y5 y6 y7)) y1 y2 (y0 y2))).
Definition term85 (a0 : Type') := fun y0 : a0 -> Prop => y0 (@ε a0 y0).
Definition term75 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') (x0 : type1248 a0 a1 a2 a3) (x1 : type1669) := (fun y0 : type1669 => fun y1 : type1066 a0 a1 a2 a3 => (forall y2 : a3, forall y3 : a2, (y1 (@nil (prod (a1 -> a2) (a3 -> a1 -> a0))) y2 y3) = (@ε a0 (fun y4 : a0 => True))) /\ (forall y2 : type1644 a0 a1 a2 a3, forall y3 : type1633 a0 a1 a2 a3, forall y4 : a3, forall y5 : a2, (y1 (@cons (prod (a1 -> a2) (a3 -> a1 -> a0)) y2 y3) y4 y5) = (@COND a0 (exists y6 : a1, (@fst (a1 -> a2) (a3 -> a1 -> a0) y2 y6) = y5) (@snd (a1 -> a2) (a3 -> a1 -> a0) y2 y4 (@ε a1 (fun y6 : a1 => (@fst (a1 -> a2) (a3 -> a1 -> a0) y2 y6) = y5))) (y1 y3 y4 y5)))) x1 (x0 x1).
Definition term26 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') (x0 : type1066 a0 a1 a2 a3) := forall y0 : type1644 a0 a1 a2 a3, forall y1 : type1633 a0 a1 a2 a3, forall y2 : a3, forall y3 : a2, (x0 (@cons (prod (a1 -> a2) (a3 -> a1 -> a0)) y0 y1) y2 y3) = (@COND a0 (exists y4 : a1, (@fst (a1 -> a2) (a3 -> a1 -> a0) y0 y4) = y3) (@snd (a1 -> a2) (a3 -> a1 -> a0) y0 y2 (@ε a1 (fun y4 : a1 => (@fst (a1 -> a2) (a3 -> a1 -> a0) y0 y4) = y3))) (x0 y1 y2 y3)).
Definition term39 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') (x0 : type1644 a0 a1 a2 a3) (x1 : type1633 a0 a1 a2 a3) := (fun y0 : type1633 a0 a1 a2 a3 => fun y1 : type1518 a0 a2 a3 => fun y2 : a3 => fun y3 : a2 => @COND a0 (exists y4 : a1, (@fst (a1 -> a2) (a3 -> a1 -> a0) x0 y4) = y3) (@snd (a1 -> a2) (a3 -> a1 -> a0) x0 y2 (@ε a1 (fun y4 : a1 => (@fst (a1 -> a2) (a3 -> a1 -> a0) x0 y4) = y3))) (y1 y2 y3)) x1.
Definition term87 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') := (fun y0 : type340 a0 a1 a2 a3 => y0 (@ε ((prod nat (prod nat (prod nat (prod nat (prod nat (prod nat (prod nat nat))))))) -> (list (prod (a1 -> a2) (a3 -> a1 -> a0))) -> a3 -> a2 -> a0) y0)) (fun y0 : type1248 a0 a1 a2 a3 => forall y1 : type1669, (forall y2 : a3, forall y3 : a2, (y0 y1 (@nil (prod (a1 -> a2) (a3 -> a1 -> a0))) y2 y3) = (@ε a0 (fun y4 : a0 => True))) /\ (forall y2 : type1644 a0 a1 a2 a3, forall y3 : type1633 a0 a1 a2 a3, forall y4 : a3, forall y5 : a2, (y0 y1 (@cons (prod (a1 -> a2) (a3 -> a1 -> a0)) y2 y3) y4 y5) = (@COND a0 (exists y6 : a1, (@fst (a1 -> a2) (a3 -> a1 -> a0) y2 y6) = y5) (@snd (a1 -> a2) (a3 -> a1 -> a0) y2 y4 (@ε a1 (fun y6 : a1 => (@fst (a1 -> a2) (a3 -> a1 -> a0) y2 y6) = y5))) (y0 y1 y3 y4 y5)))).
Definition term79 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') (x0 : type1248 a0 a1 a2 a3) := fun y0 : type1669 => (forall y1 : a3, forall y2 : a2, (x0 y0 (@nil (prod (a1 -> a2) (a3 -> a1 -> a0))) y1 y2) = (@ε a0 (fun y3 : a0 => True))) /\ (forall y1 : type1644 a0 a1 a2 a3, forall y2 : type1633 a0 a1 a2 a3, forall y3 : a3, forall y4 : a2, (x0 y0 (@cons (prod (a1 -> a2) (a3 -> a1 -> a0)) y1 y2) y3 y4) = (@COND a0 (exists y5 : a1, (@fst (a1 -> a2) (a3 -> a1 -> a0) y1 y5) = y4) (@snd (a1 -> a2) (a3 -> a1 -> a0) y1 y3 (@ε a1 (fun y5 : a1 => (@fst (a1 -> a2) (a3 -> a1 -> a0) y1 y5) = y4))) (x0 y0 y2 y3 y4))).
Definition term46 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') (x0 : type1644 a0 a1 a2 a3) (x1 : type1066 a0 a1 a2 a3) := forall y0 : type1633 a0 a1 a2 a3, (x1 (@cons (prod (a1 -> a2) (a3 -> a1 -> a0)) x0 y0)) = ((fun y1 : type1644 a0 a1 a2 a3 => fun y2 : type1633 a0 a1 a2 a3 => fun y3 : type1518 a0 a2 a3 => fun y4 : a3 => fun y5 : a2 => @COND a0 (exists y6 : a1, (@fst (a1 -> a2) (a3 -> a1 -> a0) y1 y6) = y5) (@snd (a1 -> a2) (a3 -> a1 -> a0) y1 y4 (@ε a1 (fun y6 : a1 => (@fst (a1 -> a2) (a3 -> a1 -> a0) y1 y6) = y5))) (y3 y4 y5)) x0 y0 (x1 y0)).
Definition term53 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') := fun y0 : type1066 a0 a1 a2 a3 => ((y0 (@nil (prod (a1 -> a2) (a3 -> a1 -> a0)))) = (fun y1 : a3 => fun y2 : a2 => @ε a0 (fun y3 : a0 => True))) /\ (forall y1 : type1644 a0 a1 a2 a3, forall y2 : type1633 a0 a1 a2 a3, (y0 (@cons (prod (a1 -> a2) (a3 -> a1 -> a0)) y1 y2)) = (fun y3 : a3 => fun y4 : a2 => @COND a0 (exists y5 : a1, (@fst (a1 -> a2) (a3 -> a1 -> a0) y1 y5) = y4) (@snd (a1 -> a2) (a3 -> a1 -> a0) y1 y3 (@ε a1 (fun y5 : a1 => (@fst (a1 -> a2) (a3 -> a1 -> a0) y1 y5) = y4))) (y0 y2 y3 y4))).
Definition term52 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') := fun y0 : type1066 a0 a1 a2 a3 => ((y0 (@nil (prod (a1 -> a2) (a3 -> a1 -> a0)))) = (fun y1 : a3 => fun y2 : a2 => @ε a0 (fun y3 : a0 => True))) /\ (forall y1 : type1644 a0 a1 a2 a3, forall y2 : type1633 a0 a1 a2 a3, (y0 (@cons (prod (a1 -> a2) (a3 -> a1 -> a0)) y1 y2)) = ((fun y3 : type1644 a0 a1 a2 a3 => fun y4 : type1633 a0 a1 a2 a3 => fun y5 : type1518 a0 a2 a3 => fun y6 : a3 => fun y7 : a2 => @COND a0 (exists y8 : a1, (@fst (a1 -> a2) (a3 -> a1 -> a0) y3 y8) = y7) (@snd (a1 -> a2) (a3 -> a1 -> a0) y3 y6 (@ε a1 (fun y8 : a1 => (@fst (a1 -> a2) (a3 -> a1 -> a0) y3 y8) = y7))) (y5 y6 y7)) y1 y2 (y0 y2))).
Definition term70 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') (x0 : type1669) := exists y0 : type1066 a0 a1 a2 a3, (fun y1 : type1669 => fun y2 : type1066 a0 a1 a2 a3 => (forall y3 : a3, forall y4 : a2, (y2 (@nil (prod (a1 -> a2) (a3 -> a1 -> a0))) y3 y4) = (@ε a0 (fun y5 : a0 => True))) /\ (forall y3 : type1644 a0 a1 a2 a3, forall y4 : type1633 a0 a1 a2 a3, forall y5 : a3, forall y6 : a2, (y2 (@cons (prod (a1 -> a2) (a3 -> a1 -> a0)) y3 y4) y5 y6) = (@COND a0 (exists y7 : a1, (@fst (a1 -> a2) (a3 -> a1 -> a0) y3 y7) = y6) (@snd (a1 -> a2) (a3 -> a1 -> a0) y3 y5 (@ε a1 (fun y7 : a1 => (@fst (a1 -> a2) (a3 -> a1 -> a0) y3 y7) = y6))) (y2 y4 y5 y6)))) x0 y0.
Definition term15 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') (x0 : type1066 a0 a1 a2 a3) (x1 : type1644 a0 a1 a2 a3) (x2 : type1633 a0 a1 a2 a3) (x3 : a3) := x0 (@cons (prod (a1 -> a2) (a3 -> a1 -> a0)) x1 x2) x3.
Definition term16 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') (x0 : type1644 a0 a1 a2 a3) (x1 : type1066 a0 a1 a2 a3) (x2 : type1633 a0 a1 a2 a3) (x3 : a3) := (fun y0 : a3 => fun y1 : a2 => @COND a0 (exists y2 : a1, (@fst (a1 -> a2) (a3 -> a1 -> a0) x0 y2) = y1) (@snd (a1 -> a2) (a3 -> a1 -> a0) x0 y0 (@ε a1 (fun y2 : a1 => (@fst (a1 -> a2) (a3 -> a1 -> a0) x0 y2) = y1))) (x1 x2 y0 y1)) x3.
Definition term12 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') (x0 : type1644 a0 a1 a2 a3) (x1 : type1066 a0 a1 a2 a3) (x2 : type1633 a0 a1 a2 a3) := (fun y0 : type1633 a0 a1 a2 a3 => (x1 (@cons (prod (a1 -> a2) (a3 -> a1 -> a0)) x0 y0)) = (fun y1 : a3 => fun y2 : a2 => @COND a0 (exists y3 : a1, (@fst (a1 -> a2) (a3 -> a1 -> a0) x0 y3) = y2) (@snd (a1 -> a2) (a3 -> a1 -> a0) x0 y1 (@ε a1 (fun y3 : a1 => (@fst (a1 -> a2) (a3 -> a1 -> a0) x0 y3) = y2))) (x1 y0 y1 y2))) x2.
Definition term78 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') (x0 : type1248 a0 a1 a2 a3) := fun y0 : type1669 => (fun y1 : type1669 => fun y2 : type1066 a0 a1 a2 a3 => (forall y3 : a3, forall y4 : a2, (y2 (@nil (prod (a1 -> a2) (a3 -> a1 -> a0))) y3 y4) = (@ε a0 (fun y5 : a0 => True))) /\ (forall y3 : type1644 a0 a1 a2 a3, forall y4 : type1633 a0 a1 a2 a3, forall y5 : a3, forall y6 : a2, (y2 (@cons (prod (a1 -> a2) (a3 -> a1 -> a0)) y3 y4) y5 y6) = (@COND a0 (exists y7 : a1, (@fst (a1 -> a2) (a3 -> a1 -> a0) y3 y7) = y6) (@snd (a1 -> a2) (a3 -> a1 -> a0) y3 y5 (@ε a1 (fun y7 : a1 => (@fst (a1 -> a2) (a3 -> a1 -> a0) y3 y7) = y6))) (y2 y4 y5 y6)))) y0 (x0 y0).
Definition term24 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') (x0 : type1644 a0 a1 a2 a3) (x1 : type1066 a0 a1 a2 a3) (x2 : type1633 a0 a1 a2 a3) := forall y0 : a3, forall y1 : a2, (x1 (@cons (prod (a1 -> a2) (a3 -> a1 -> a0)) x0 x2) y0 y1) = (@COND a0 (exists y2 : a1, (@fst (a1 -> a2) (a3 -> a1 -> a0) x0 y2) = y1) (@snd (a1 -> a2) (a3 -> a1 -> a0) x0 y0 (@ε a1 (fun y2 : a1 => (@fst (a1 -> a2) (a3 -> a1 -> a0) x0 y2) = y1))) (x1 x2 y0 y1)).
Definition term8 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') (x0 : type1066 a0 a1 a2 a3) := forall y0 : a3, forall y1 : a2, (x0 (@nil (prod (a1 -> a2) (a3 -> a1 -> a0))) y0 y1) = (@ε a0 (fun y2 : a0 => True)).
Definition term10 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') (x0 : type1066 a0 a1 a2 a3) (x1 : type1644 a0 a1 a2 a3) := (fun y0 : type1644 a0 a1 a2 a3 => forall y1 : type1633 a0 a1 a2 a3, (x0 (@cons (prod (a1 -> a2) (a3 -> a1 -> a0)) y0 y1)) = (fun y2 : a3 => fun y3 : a2 => @COND a0 (exists y4 : a1, (@fst (a1 -> a2) (a3 -> a1 -> a0) y0 y4) = y3) (@snd (a1 -> a2) (a3 -> a1 -> a0) y0 y2 (@ε a1 (fun y4 : a1 => (@fst (a1 -> a2) (a3 -> a1 -> a0) y0 y4) = y3))) (x0 y1 y2 y3))) x1.
Definition term44 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') (x0 : type1644 a0 a1 a2 a3) (x1 : type1066 a0 a1 a2 a3) := fun y0 : type1633 a0 a1 a2 a3 => (x1 (@cons (prod (a1 -> a2) (a3 -> a1 -> a0)) x0 y0)) = ((fun y1 : type1644 a0 a1 a2 a3 => fun y2 : type1633 a0 a1 a2 a3 => fun y3 : type1518 a0 a2 a3 => fun y4 : a3 => fun y5 : a2 => @COND a0 (exists y6 : a1, (@fst (a1 -> a2) (a3 -> a1 -> a0) y1 y6) = y5) (@snd (a1 -> a2) (a3 -> a1 -> a0) y1 y4 (@ε a1 (fun y6 : a1 => (@fst (a1 -> a2) (a3 -> a1 -> a0) y1 y6) = y5))) (y3 y4 y5)) x0 y0 (x1 y0)).
Definition term6 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') (x0 : type1066 a0 a1 a2 a3) (x1 : a3) (x2 : a2) := @eq a0 (x0 (@nil (prod (a1 -> a2) (a3 -> a1 -> a0))) x1 x2).
Definition term77 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') (x0 : type1248 a0 a1 a2 a3) (x1 : type1669) := (forall y0 : a3, forall y1 : a2, (x0 x1 (@nil (prod (a1 -> a2) (a3 -> a1 -> a0))) y0 y1) = (@ε a0 (fun y2 : a0 => True))) /\ (forall y0 : type1644 a0 a1 a2 a3, forall y1 : type1633 a0 a1 a2 a3, forall y2 : a3, forall y3 : a2, (x0 x1 (@cons (prod (a1 -> a2) (a3 -> a1 -> a0)) y0 y1) y2 y3) = (@COND a0 (exists y4 : a1, (@fst (a1 -> a2) (a3 -> a1 -> a0) y0 y4) = y3) (@snd (a1 -> a2) (a3 -> a1 -> a0) y0 y2 (@ε a1 (fun y4 : a1 => (@fst (a1 -> a2) (a3 -> a1 -> a0) y0 y4) = y3))) (x0 x1 y1 y2 y3))).
Definition term28 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') (x0 : type1066 a0 a1 a2 a3) := (forall y0 : a3, forall y1 : a2, (x0 (@nil (prod (a1 -> a2) (a3 -> a1 -> a0))) y0 y1) = (@ε a0 (fun y2 : a0 => True))) /\ (forall y0 : type1644 a0 a1 a2 a3, forall y1 : type1633 a0 a1 a2 a3, forall y2 : a3, forall y3 : a2, (x0 (@cons (prod (a1 -> a2) (a3 -> a1 -> a0)) y0 y1) y2 y3) = (@COND a0 (exists y4 : a1, (@fst (a1 -> a2) (a3 -> a1 -> a0) y0 y4) = y3) (@snd (a1 -> a2) (a3 -> a1 -> a0) y0 y2 (@ε a1 (fun y4 : a1 => (@fst (a1 -> a2) (a3 -> a1 -> a0) y0 y4) = y3))) (x0 y1 y2 y3))).
Definition term67 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') (x0 : type1669) (x1 : type1066 a0 a1 a2 a3) := (fun y0 : type1669 => fun y1 : type1066 a0 a1 a2 a3 => (forall y2 : a3, forall y3 : a2, (y1 (@nil (prod (a1 -> a2) (a3 -> a1 -> a0))) y2 y3) = (@ε a0 (fun y4 : a0 => True))) /\ (forall y2 : type1644 a0 a1 a2 a3, forall y3 : type1633 a0 a1 a2 a3, forall y4 : a3, forall y5 : a2, (y1 (@cons (prod (a1 -> a2) (a3 -> a1 -> a0)) y2 y3) y4 y5) = (@COND a0 (exists y6 : a1, (@fst (a1 -> a2) (a3 -> a1 -> a0) y2 y6) = y5) (@snd (a1 -> a2) (a3 -> a1 -> a0) y2 y4 (@ε a1 (fun y6 : a1 => (@fst (a1 -> a2) (a3 -> a1 -> a0) y2 y6) = y5))) (y1 y3 y4 y5)))) x0 x1.
Definition term68 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') (x0 : type1066 a0 a1 a2 a3) := (fun y0 : type1066 a0 a1 a2 a3 => (forall y1 : a3, forall y2 : a2, (y0 (@nil (prod (a1 -> a2) (a3 -> a1 -> a0))) y1 y2) = (@ε a0 (fun y3 : a0 => True))) /\ (forall y1 : type1644 a0 a1 a2 a3, forall y2 : type1633 a0 a1 a2 a3, forall y3 : a3, forall y4 : a2, (y0 (@cons (prod (a1 -> a2) (a3 -> a1 -> a0)) y1 y2) y3 y4) = (@COND a0 (exists y5 : a1, (@fst (a1 -> a2) (a3 -> a1 -> a0) y1 y5) = y4) (@snd (a1 -> a2) (a3 -> a1 -> a0) y1 y3 (@ε a1 (fun y5 : a1 => (@fst (a1 -> a2) (a3 -> a1 -> a0) y1 y5) = y4))) (y0 y2 y3 y4)))) x0.
Definition term13 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') (x0 : type1066 a0 a1 a2 a3) (x1 : type1644 a0 a1 a2 a3) (x2 : type1633 a0 a1 a2 a3) := x0 (@cons (prod (a1 -> a2) (a3 -> a1 -> a0)) x1 x2).
Definition term50 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') (x0 : type1066 a0 a1 a2 a3) := and ((x0 (@nil (prod (a1 -> a2) (a3 -> a1 -> a0)))) = (fun y0 : a3 => fun y1 : a2 => @ε a0 (fun y2 : a0 => True))).
Definition term11 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') (x0 : type1644 a0 a1 a2 a3) (x1 : type1066 a0 a1 a2 a3) := forall y0 : type1633 a0 a1 a2 a3, (x1 (@cons (prod (a1 -> a2) (a3 -> a1 -> a0)) x0 y0)) = (fun y1 : a3 => fun y2 : a2 => @COND a0 (exists y3 : a1, (@fst (a1 -> a2) (a3 -> a1 -> a0) x0 y3) = y2) (@snd (a1 -> a2) (a3 -> a1 -> a0) x0 y1 (@ε a1 (fun y3 : a1 => (@fst (a1 -> a2) (a3 -> a1 -> a0) x0 y3) = y2))) (x1 y0 y1 y2)).
Definition term30 (a0 : Type') (a1 : Type') (x0 : a1) := forall y0 : type1394 a0 a1, exists y1 : type1142 a0 a1, ((y1 (@nil a0)) = x0) /\ (forall y2 : a0, forall y3 : list a0, (y1 (@cons a0 y2 y3)) = (y0 y2 y3 (y1 y3))).
Definition term2 (a0 : Type') (a1 : Type') := fun y0 : a1 => @ε a0 (fun y1 : a0 => True).
Definition term58 (a0 : Type') (a1 : Type') (x0 : type1413 a0 a1) := (fun y0 : type1413 a0 a1 => (forall y1 : a0, exists y2 : a1, y0 y1 y2) = (exists y1 : a0 -> a1, forall y2 : a0, y0 y2 (y1 y2))) x0.
Definition term40 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') (x0 : type1644 a0 a1 a2 a3) := fun y0 : type1518 a0 a2 a3 => fun y1 : a3 => fun y2 : a2 => @COND a0 (exists y3 : a1, (@fst (a1 -> a2) (a3 -> a1 -> a0) x0 y3) = y2) (@snd (a1 -> a2) (a3 -> a1 -> a0) x0 y1 (@ε a1 (fun y3 : a1 => (@fst (a1 -> a2) (a3 -> a1 -> a0) x0 y3) = y2))) (y0 y1 y2).
Definition term37 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') (x0 : type1644 a0 a1 a2 a3) := fun y0 : type1633 a0 a1 a2 a3 => fun y1 : type1518 a0 a2 a3 => fun y2 : a3 => fun y3 : a2 => @COND a0 (exists y4 : a1, (@fst (a1 -> a2) (a3 -> a1 -> a0) x0 y4) = y3) (@snd (a1 -> a2) (a3 -> a1 -> a0) x0 y2 (@ε a1 (fun y4 : a1 => (@fst (a1 -> a2) (a3 -> a1 -> a0) x0 y4) = y3))) (y1 y2 y3).
Definition term66 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') (x0 : type1669) := (fun y0 : type1669 => fun y1 : type1066 a0 a1 a2 a3 => (forall y2 : a3, forall y3 : a2, (y1 (@nil (prod (a1 -> a2) (a3 -> a1 -> a0))) y2 y3) = (@ε a0 (fun y4 : a0 => True))) /\ (forall y2 : type1644 a0 a1 a2 a3, forall y3 : type1633 a0 a1 a2 a3, forall y4 : a3, forall y5 : a2, (y1 (@cons (prod (a1 -> a2) (a3 -> a1 -> a0)) y2 y3) y4 y5) = (@COND a0 (exists y6 : a1, (@fst (a1 -> a2) (a3 -> a1 -> a0) y2 y6) = y5) (@snd (a1 -> a2) (a3 -> a1 -> a0) y2 y4 (@ε a1 (fun y6 : a1 => (@fst (a1 -> a2) (a3 -> a1 -> a0) y2 y6) = y5))) (y1 y3 y4 y5)))) x0.
Definition term3 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') (x0 : type1066 a0 a1 a2 a3) (x1 : a3) := @eq (a2 -> a0) (x0 (@nil (prod (a1 -> a2) (a3 -> a1 -> a0))) x1).
Definition term60 (a0 : Type') (a1 : Type') (x0 : type1413 a0 a1) := exists y0 : a0 -> a1, forall y1 : a0, x0 y1 (y0 y1).
Definition term33 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') (x0 : type1518 a0 a2 a3) (x1 : type1172 a0 a1 a2 a3) := exists y0 : type1066 a0 a1 a2 a3, ((y0 (@nil (prod (a1 -> a2) (a3 -> a1 -> a0)))) = x0) /\ (forall y1 : type1644 a0 a1 a2 a3, forall y2 : type1633 a0 a1 a2 a3, (y0 (@cons (prod (a1 -> a2) (a3 -> a1 -> a0)) y1 y2)) = (x1 y1 y2 (y0 y2))).
Definition term32 (a0 : Type') (a1 : Type') (x0 : a1) (x1 : type1394 a0 a1) := exists y0 : type1142 a0 a1, ((y0 (@nil a0)) = x0) /\ (forall y1 : a0, forall y2 : list a0, (y0 (@cons a0 y1 y2)) = (x1 y1 y2 (y0 y2))).
Definition term7 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') (x0 : type1066 a0 a1 a2 a3) (x1 : a3) := forall y0 : a2, (x0 (@nil (prod (a1 -> a2) (a3 -> a1 -> a0))) x1 y0) = (@ε a0 (fun y1 : a0 => True)).
Definition term48 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') (x0 : type1066 a0 a1 a2 a3) := fun y0 : type1644 a0 a1 a2 a3 => forall y1 : type1633 a0 a1 a2 a3, (x0 (@cons (prod (a1 -> a2) (a3 -> a1 -> a0)) y0 y1)) = (fun y2 : a3 => fun y3 : a2 => @COND a0 (exists y4 : a1, (@fst (a1 -> a2) (a3 -> a1 -> a0) y0 y4) = y3) (@snd (a1 -> a2) (a3 -> a1 -> a0) y0 y2 (@ε a1 (fun y4 : a1 => (@fst (a1 -> a2) (a3 -> a1 -> a0) y0 y4) = y3))) (x0 y1 y2 y3)).
Definition term63 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') := forall y0 : type1669, exists y1 : type1066 a0 a1 a2 a3, (fun y2 : type1669 => fun y3 : type1066 a0 a1 a2 a3 => (forall y4 : a3, forall y5 : a2, (y3 (@nil (prod (a1 -> a2) (a3 -> a1 -> a0))) y4 y5) = (@ε a0 (fun y6 : a0 => True))) /\ (forall y4 : type1644 a0 a1 a2 a3, forall y5 : type1633 a0 a1 a2 a3, forall y6 : a3, forall y7 : a2, (y3 (@cons (prod (a1 -> a2) (a3 -> a1 -> a0)) y4 y5) y6 y7) = (@COND a0 (exists y8 : a1, (@fst (a1 -> a2) (a3 -> a1 -> a0) y4 y8) = y7) (@snd (a1 -> a2) (a3 -> a1 -> a0) y4 y6 (@ε a1 (fun y8 : a1 => (@fst (a1 -> a2) (a3 -> a1 -> a0) y4 y8) = y7))) (y3 y5 y6 y7)))) y0 y1.
Definition term61 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') (x0 : type1243 a0 a1 a2 a3) := forall y0 : type1669, exists y1 : type1066 a0 a1 a2 a3, x0 y0 y1.
Definition term17 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') (x0 : type1644 a0 a1 a2 a3) (x1 : type1066 a0 a1 a2 a3) (x2 : type1633 a0 a1 a2 a3) (x3 : a3) := fun y0 : a2 => @COND a0 (exists y1 : a1, (@fst (a1 -> a2) (a3 -> a1 -> a0) x0 y1) = y0) (@snd (a1 -> a2) (a3 -> a1 -> a0) x0 x3 (@ε a1 (fun y1 : a1 => (@fst (a1 -> a2) (a3 -> a1 -> a0) x0 y1) = y0))) (x1 x2 x3 y0).
Definition term57 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') := forall y0 : type1669, exists y1 : type1066 a0 a1 a2 a3, (forall y2 : a3, forall y3 : a2, (y1 (@nil (prod (a1 -> a2) (a3 -> a1 -> a0))) y2 y3) = (@ε a0 (fun y4 : a0 => True))) /\ (forall y2 : type1644 a0 a1 a2 a3, forall y3 : type1633 a0 a1 a2 a3, forall y4 : a3, forall y5 : a2, (y1 (@cons (prod (a1 -> a2) (a3 -> a1 -> a0)) y2 y3) y4 y5) = (@COND a0 (exists y6 : a1, (@fst (a1 -> a2) (a3 -> a1 -> a0) y2 y6) = y5) (@snd (a1 -> a2) (a3 -> a1 -> a0) y2 y4 (@ε a1 (fun y6 : a1 => (@fst (a1 -> a2) (a3 -> a1 -> a0) y2 y6) = y5))) (y1 y3 y4 y5))).
Definition term51 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') (x0 : type1066 a0 a1 a2 a3) := ((x0 (@nil (prod (a1 -> a2) (a3 -> a1 -> a0)))) = (fun y0 : a3 => fun y1 : a2 => @ε a0 (fun y2 : a0 => True))) /\ (forall y0 : type1644 a0 a1 a2 a3, forall y1 : type1633 a0 a1 a2 a3, (x0 (@cons (prod (a1 -> a2) (a3 -> a1 -> a0)) y0 y1)) = ((fun y2 : type1644 a0 a1 a2 a3 => fun y3 : type1633 a0 a1 a2 a3 => fun y4 : type1518 a0 a2 a3 => fun y5 : a3 => fun y6 : a2 => @COND a0 (exists y7 : a1, (@fst (a1 -> a2) (a3 -> a1 -> a0) y2 y7) = y6) (@snd (a1 -> a2) (a3 -> a1 -> a0) y2 y5 (@ε a1 (fun y7 : a1 => (@fst (a1 -> a2) (a3 -> a1 -> a0) y2 y7) = y6))) (y4 y5 y6)) y0 y1 (x0 y1))).
Definition term27 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') (x0 : type1066 a0 a1 a2 a3) := ((x0 (@nil (prod (a1 -> a2) (a3 -> a1 -> a0)))) = (fun y0 : a3 => fun y1 : a2 => @ε a0 (fun y2 : a0 => True))) /\ (forall y0 : type1644 a0 a1 a2 a3, forall y1 : type1633 a0 a1 a2 a3, (x0 (@cons (prod (a1 -> a2) (a3 -> a1 -> a0)) y0 y1)) = (fun y2 : a3 => fun y3 : a2 => @COND a0 (exists y4 : a1, (@fst (a1 -> a2) (a3 -> a1 -> a0) y0 y4) = y3) (@snd (a1 -> a2) (a3 -> a1 -> a0) y0 y2 (@ε a1 (fun y4 : a1 => (@fst (a1 -> a2) (a3 -> a1 -> a0) y0 y4) = y3))) (x0 y1 y2 y3))).
Definition term38 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') (x0 : type1644 a0 a1 a2 a3) (x1 : type1633 a0 a1 a2 a3) := (fun y0 : type1644 a0 a1 a2 a3 => fun y1 : type1633 a0 a1 a2 a3 => fun y2 : type1518 a0 a2 a3 => fun y3 : a3 => fun y4 : a2 => @COND a0 (exists y5 : a1, (@fst (a1 -> a2) (a3 -> a1 -> a0) y0 y5) = y4) (@snd (a1 -> a2) (a3 -> a1 -> a0) y0 y3 (@ε a1 (fun y5 : a1 => (@fst (a1 -> a2) (a3 -> a1 -> a0) y0 y5) = y4))) (y2 y3 y4)) x0 x1.
Definition term71 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') := fun y0 : type1669 => exists y1 : type1066 a0 a1 a2 a3, (fun y2 : type1669 => fun y3 : type1066 a0 a1 a2 a3 => (forall y4 : a3, forall y5 : a2, (y3 (@nil (prod (a1 -> a2) (a3 -> a1 -> a0))) y4 y5) = (@ε a0 (fun y6 : a0 => True))) /\ (forall y4 : type1644 a0 a1 a2 a3, forall y5 : type1633 a0 a1 a2 a3, forall y6 : a3, forall y7 : a2, (y3 (@cons (prod (a1 -> a2) (a3 -> a1 -> a0)) y4 y5) y6 y7) = (@COND a0 (exists y8 : a1, (@fst (a1 -> a2) (a3 -> a1 -> a0) y4 y8) = y7) (@snd (a1 -> a2) (a3 -> a1 -> a0) y4 y6 (@ε a1 (fun y8 : a1 => (@fst (a1 -> a2) (a3 -> a1 -> a0) y4 y8) = y7))) (y3 y5 y6 y7)))) y0 y1.
