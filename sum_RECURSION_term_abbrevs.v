Require Import coq.
Require Import theory_hol.
Require Import hol_types.
Require Import hol_type_abbrevs.
Require Import hol_terms.
Definition term104 (a0 : Type') (a1 : Type') (a2 : Type') (x0 : type9 a0 a1 a2) (x1 : a1 -> a2) := forall y0 : a1, (x0 (@inr a0 a1 y0)) = (x1 y0).
Definition term58 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a1) := @fst a0 a1 (@pair a0 a1 x0 x1).
Definition term68 (a0 : Type') (a1 : Type') (a2 : Type') (x0 : a0 -> a2) (x1 : a0) := (fun y0 : prod a0 a1 => fun y1 : type1612 a0 a1 => fun y2 : nat -> a2 => x0 (@fst a0 a1 y0)) (@pair a0 a1 x1 (@ε a1 (fun y0 : a1 => True))).
Definition term87 (a0 : Type') (a1 : Type') (a2 : Type') (x0 : type1203 a0 a1 a2) (x1 : type1588 a0 a1 a2) (x2 : nat) := @FCONS ((prod a0 a1) -> (nat -> recspace (prod a0 a1)) -> (nat -> a2) -> a2) x0 x1 (S x2).
Definition term113 (a0 : Type') (a1 : Type') (a2 : Type') (x0 : type1332 a0 a1 a2) (x1 : a0 -> a2) (x2 : a1 -> a2) (x3 : type9 a0 a1 a2) := (x3 = (fun y0 : Datatypes.sum a0 a1 => x0 (@_dest_sum a0 a1 y0))) -> (fun y0 : type9 a0 a1 a2 => (forall y1 : a0, (y0 (@inl a0 a1 y1)) = (x1 y1)) /\ (forall y1 : a1, (y0 (@inr a0 a1 y1)) = (x2 y1))) x3.
Definition term30 (a0 : Type') (a1 : Type') (a2 : Type') (x0 : type1333 a0 a1) (x1 : type1431 a0 a1) (x2 : type1479 a0 a1) (x3 : a0) (x4 : type9 a0 a1 a2) (x5 : type1332 a0 a1 a2) (x6 : a1) := (x0 = (fun y0 : type1677 a0 a1 => forall y1 : type1333 a0 a1, (forall y2 : type1677 a0 a1, ((exists y3 : a0, y2 = (x1 y3)) \/ (exists y3 : a1, y2 = (x2 y3))) -> y1 y2) -> y1 y0)) -> ((x4 (@inl a0 a1 x3)) = (x5 (@CONSTR (prod a0 a1) (NUMERAL 0) (@pair a0 a1 x3 (@ε a1 (fun y0 : a1 => True))) (fun y0 : nat => @BOTTOM (prod a0 a1))))) /\ ((x4 (@inr a0 a1 x6)) = (x5 (@CONSTR (prod a0 a1) (S (NUMERAL 0)) (@pair a0 a1 (@ε a0 (fun y0 : a0 => True)) x6) (fun y0 : nat => @BOTTOM (prod a0 a1))))).
Definition term89 (a0 : Type') (a1 : Type') (a2 : Type') (x0 : a1 -> a2) := @FCONS ((prod a0 a1) -> (nat -> recspace (prod a0 a1)) -> (nat -> a2) -> a2) (fun y0 : prod a0 a1 => fun y1 : type1612 a0 a1 => fun y2 : nat -> a2 => x0 (@snd a0 a1 y0)) (@FNIL ((prod a0 a1) -> (nat -> recspace (prod a0 a1)) -> (nat -> a2) -> a2)) (NUMERAL 0).
Definition term116 (a0 : Type') (a1 : Type') (a2 : Type') (x0 : a0 -> a2) (x1 : a1 -> a2) := fun y0 : type1332 a0 a1 a2 => forall y1 : nat, forall y2 : prod a0 a1, forall y3 : type1612 a0 a1, (y0 (@CONSTR (prod a0 a1) y1 y2 y3)) = (@FCONS ((prod a0 a1) -> (nat -> recspace (prod a0 a1)) -> (nat -> a2) -> a2) (fun y4 : prod a0 a1 => fun y5 : type1612 a0 a1 => fun y6 : nat -> a2 => x0 (@fst a0 a1 y4)) (@FCONS ((prod a0 a1) -> (nat -> recspace (prod a0 a1)) -> (nat -> a2) -> a2) (fun y4 : prod a0 a1 => fun y5 : type1612 a0 a1 => fun y6 : nat -> a2 => x1 (@snd a0 a1 y4)) (@FNIL ((prod a0 a1) -> (nat -> recspace (prod a0 a1)) -> (nat -> a2) -> a2))) y1 y2 y3 (fun y4 : nat => y0 (y3 y4))).
Definition term49 (a0 : Type') (a1 : Type') (a2 : Type') (x0 : type1332 a0 a1 a2) (x1 : nat) (x2 : prod a0 a1) (x3 : type1612 a0 a1) := x0 (@CONSTR (prod a0 a1) x1 x2 x3).
Definition term50 (a0 : Type') (a1 : Type') (a2 : Type') (x0 : a0 -> a2) (x1 : a1 -> a2) (x2 : nat) (x3 : prod a0 a1) (x4 : type1332 a0 a1 a2) (x5 : type1612 a0 a1) := @FCONS ((prod a0 a1) -> (nat -> recspace (prod a0 a1)) -> (nat -> a2) -> a2) (fun y0 : prod a0 a1 => fun y1 : type1612 a0 a1 => fun y2 : nat -> a2 => x0 (@fst a0 a1 y0)) (@FCONS ((prod a0 a1) -> (nat -> recspace (prod a0 a1)) -> (nat -> a2) -> a2) (fun y0 : prod a0 a1 => fun y1 : type1612 a0 a1 => fun y2 : nat -> a2 => x1 (@snd a0 a1 y0)) (@FNIL ((prod a0 a1) -> (nat -> recspace (prod a0 a1)) -> (nat -> a2) -> a2))) x2 x3 x5 (fun y0 : nat => x4 (x5 y0)).
Definition term114 (a0 : Type') (a1 : Type') (a2 : Type') (x0 : type1332 a0 a1 a2) (x1 : a0 -> a2) (x2 : a1 -> a2) := forall y0 : type9 a0 a1 a2, (y0 = (fun y1 : Datatypes.sum a0 a1 => x0 (@_dest_sum a0 a1 y1))) -> (fun y1 : type9 a0 a1 a2 => (forall y2 : a0, (y1 (@inl a0 a1 y2)) = (x1 y2)) /\ (forall y2 : a1, (y1 (@inr a0 a1 y2)) = (x2 y2))) y0.
Definition term8 (a0 : Type') (a1 : Type') (a2 : Type') (x0 : type1332 a0 a1 a2) (x1 : type1479 a0 a1) (x2 : a1) := x0 (@_dest_sum a0 a1 (@_mk_sum a0 a1 (x1 x2))).
Definition term7 (a0 : Type') (a1 : Type') (a2 : Type') (x0 : type1332 a0 a1 a2) (x1 : type1431 a0 a1) (x2 : a0) := x0 (@_dest_sum a0 a1 (@_mk_sum a0 a1 (x1 x2))).
Definition term118 (a0 : Type') (a1 : Type') (a2 : Type') := forall y0 : a0 -> a2, forall y1 : a1 -> a2, exists y2 : type9 a0 a1 a2, (forall y3 : a0, (y2 (@inl a0 a1 y3)) = (y0 y3)) /\ (forall y3 : a1, (y2 (@inr a0 a1 y3)) = (y1 y3)).
Definition term84 := S (NUMERAL 0).
Definition term14 (a0 : Type') (a1 : Type') (x0 : type1677 a0 a1) := @_dest_sum a0 a1 (@_mk_sum a0 a1 x0).
Definition term0 (a0 : Type') (a1 : Type') (a2 : Type') (x0 : type1332 a0 a1 a2) := fun y0 : Datatypes.sum a0 a1 => x0 (@_dest_sum a0 a1 y0).
Definition term20 (a0 : Type') (a1 : Type') (a2 : Type') (x0 : type1332 a0 a1 a2) (x1 : type1479 a0 a1) (x2 : a1) := x0 (x1 x2).
Definition term67 (a0 : Type') (a1 : Type') (a2 : Type') (x0 : a0 -> a2) (x1 : a1 -> a2) (x2 : a0) := @FCONS ((prod a0 a1) -> (nat -> recspace (prod a0 a1)) -> (nat -> a2) -> a2) (fun y0 : prod a0 a1 => fun y1 : type1612 a0 a1 => fun y2 : nat -> a2 => x0 (@fst a0 a1 y0)) (@FCONS ((prod a0 a1) -> (nat -> recspace (prod a0 a1)) -> (nat -> a2) -> a2) (fun y0 : prod a0 a1 => fun y1 : type1612 a0 a1 => fun y2 : nat -> a2 => x1 (@snd a0 a1 y0)) (@FNIL ((prod a0 a1) -> (nat -> recspace (prod a0 a1)) -> (nat -> a2) -> a2))) (NUMERAL 0) (@pair a0 a1 x2 (@ε a1 (fun y0 : a1 => True))).
Definition term105 (a0 : Type') (a1 : Type') (a2 : Type') (x0 : a0 -> a2) (x1 : type9 a0 a1 a2) (x2 : a1 -> a2) := (forall y0 : a0, (x1 (@inl a0 a1 y0)) = (x0 y0)) /\ (forall y0 : a1, (x1 (@inr a0 a1 y0)) = (x2 y0)).
Definition term61 (a0 : Type') (a1 : Type') := fun y0 : nat => @BOTTOM (prod a0 a1).
Definition term69 (a0 : Type') (a1 : Type') (a2 : Type') (x0 : a0 -> a2) (x1 : a1 -> a2) (x2 : a0) := @FCONS ((prod a0 a1) -> (nat -> recspace (prod a0 a1)) -> (nat -> a2) -> a2) (fun y0 : prod a0 a1 => fun y1 : type1612 a0 a1 => fun y2 : nat -> a2 => x0 (@fst a0 a1 y0)) (@FCONS ((prod a0 a1) -> (nat -> recspace (prod a0 a1)) -> (nat -> a2) -> a2) (fun y0 : prod a0 a1 => fun y1 : type1612 a0 a1 => fun y2 : nat -> a2 => x1 (@snd a0 a1 y0)) (@FNIL ((prod a0 a1) -> (nat -> recspace (prod a0 a1)) -> (nat -> a2) -> a2))) (NUMERAL 0) (@pair a0 a1 x2 (@ε a1 (fun y0 : a1 => True))) (fun y0 : nat => @BOTTOM (prod a0 a1)).
Definition term80 (a0 : Type') := @ε a0 (fun y0 : a0 => True).
Definition term51 (a0 : Type') (a1 : Type') (x0 : a0) := (fun y0 : a0 => forall y1 : a1, (@snd a0 a1 (@pair a0 a1 y0 y1)) = y1) x0.
Definition term115 (a0 : Type') (a1 : Type') (a2 : Type') (x0 : a0 -> a2) (x1 : a1 -> a2) := exists y0 : type9 a0 a1 a2, (forall y1 : a0, (y0 (@inl a0 a1 y1)) = (x0 y1)) /\ (forall y1 : a1, (y0 (@inr a0 a1 y1)) = (x1 y1)).
Definition term56 (a0 : Type') (a1 : Type') (x0 : a0) := forall y0 : a1, (@fst a0 a1 (@pair a0 a1 x0 y0)) = x0.
Definition term17 (a0 : Type') (a1 : Type') (x0 : type1333 a0 a1) (x1 : type1479 a0 a1) (x2 : a1) := x0 (x1 x2).
Definition term72 (a0 : Type') (a1 : Type') (a2 : Type') (x0 : a0 -> a2) (x1 : a0) (x2 : type1332 a0 a1 a2) := (fun y0 : prod a0 a1 => fun y1 : type1612 a0 a1 => fun y2 : nat -> a2 => x0 (@fst a0 a1 y0)) (@pair a0 a1 x1 (@ε a1 (fun y0 : a1 => True))) (fun y0 : nat => @BOTTOM (prod a0 a1)) (fun y0 : nat => x2 ((fun y1 : nat => @BOTTOM (prod a0 a1)) y0)).
Definition term1 (a0 : Type') (a1 : Type') := fun y0 : a0 => @CONSTR (prod a0 a1) (NUMERAL 0) (@pair a0 a1 y0 (@ε a1 (fun y1 : a1 => True))) (fun y1 : nat => @BOTTOM (prod a0 a1)).
Definition term62 (a0 : Type') (x0 : a0) (x1 : nat -> a0) := @FCONS a0 x0 x1 (NUMERAL 0).
Definition term22 (a0 : Type') (a1 : Type') (x0 : a0) := @CONSTR (prod a0 a1) (NUMERAL 0) (@pair a0 a1 x0 (@ε a1 (fun y0 : a1 => True))) (fun y0 : nat => @BOTTOM (prod a0 a1)).
Definition term100 (a0 : Type') (a1 : Type') (a2 : Type') (x0 : a1 -> a2) (x1 : a1) (x2 : type1332 a0 a1 a2) := (fun y0 : nat -> a2 => x0 (@snd a0 a1 (@pair a0 a1 (@ε a0 (fun y1 : a0 => True)) x1))) (fun y0 : nat => x2 ((fun y1 : nat => @BOTTOM (prod a0 a1)) y0)).
Definition term35 (a0 : Type') (a1 : Type') (a2 : Type') (x0 : type1333 a0 a1) (x1 : a0) (x2 : type9 a0 a1 a2) (x3 : type1332 a0 a1 a2) (x4 : a1) := ((fun y0 : a0 => @CONSTR (prod a0 a1) (NUMERAL 0) (@pair a0 a1 y0 (@ε a1 (fun y1 : a1 => True))) (fun y1 : nat => @BOTTOM (prod a0 a1))) = (fun y0 : a0 => @CONSTR (prod a0 a1) (NUMERAL 0) (@pair a0 a1 y0 (@ε a1 (fun y1 : a1 => True))) (fun y1 : nat => @BOTTOM (prod a0 a1)))) -> (x0 = (fun y0 : type1677 a0 a1 => forall y1 : type1333 a0 a1, (forall y2 : type1677 a0 a1, ((exists y3 : a0, y2 = ((fun y4 : a0 => @CONSTR (prod a0 a1) (NUMERAL 0) (@pair a0 a1 y4 (@ε a1 (fun y5 : a1 => True))) (fun y5 : nat => @BOTTOM (prod a0 a1))) y3)) \/ (exists y3 : a1, y2 = ((fun y4 : a1 => @CONSTR (prod a0 a1) (S (NUMERAL 0)) (@pair a0 a1 (@ε a0 (fun y5 : a0 => True)) y4) (fun y5 : nat => @BOTTOM (prod a0 a1))) y3))) -> y1 y2) -> y1 y0)) -> ((x2 (@inl a0 a1 x1)) = (x3 (@CONSTR (prod a0 a1) (NUMERAL 0) (@pair a0 a1 x1 (@ε a1 (fun y0 : a1 => True))) (fun y0 : nat => @BOTTOM (prod a0 a1))))) /\ ((x2 (@inr a0 a1 x4)) = (x3 (@CONSTR (prod a0 a1) (S (NUMERAL 0)) (@pair a0 a1 (@ε a0 (fun y0 : a0 => True)) x4) (fun y0 : nat => @BOTTOM (prod a0 a1))))).
Definition term32 (a0 : Type') (a1 : Type') (a2 : Type') (x0 : type1333 a0 a1) (x1 : type1431 a0 a1) (x2 : a0) (x3 : type9 a0 a1 a2) (x4 : type1332 a0 a1 a2) (x5 : a1) := ((fun y0 : a1 => @CONSTR (prod a0 a1) (S (NUMERAL 0)) (@pair a0 a1 (@ε a0 (fun y1 : a0 => True)) y0) (fun y1 : nat => @BOTTOM (prod a0 a1))) = (fun y0 : a1 => @CONSTR (prod a0 a1) (S (NUMERAL 0)) (@pair a0 a1 (@ε a0 (fun y1 : a0 => True)) y0) (fun y1 : nat => @BOTTOM (prod a0 a1)))) -> (x0 = (fun y0 : type1677 a0 a1 => forall y1 : type1333 a0 a1, (forall y2 : type1677 a0 a1, ((exists y3 : a0, y2 = (x1 y3)) \/ (exists y3 : a1, y2 = ((fun y4 : a1 => @CONSTR (prod a0 a1) (S (NUMERAL 0)) (@pair a0 a1 (@ε a0 (fun y5 : a0 => True)) y4) (fun y5 : nat => @BOTTOM (prod a0 a1))) y3))) -> y1 y2) -> y1 y0)) -> ((x3 (@inl a0 a1 x2)) = (x4 (@CONSTR (prod a0 a1) (NUMERAL 0) (@pair a0 a1 x2 (@ε a1 (fun y0 : a1 => True))) (fun y0 : nat => @BOTTOM (prod a0 a1))))) /\ ((x3 (@inr a0 a1 x5)) = (x4 (@CONSTR (prod a0 a1) (S (NUMERAL 0)) (@pair a0 a1 (@ε a0 (fun y0 : a0 => True)) x5) (fun y0 : nat => @BOTTOM (prod a0 a1))))).
Definition term33 (a0 : Type') (a1 : Type') (a2 : Type') (x0 : type1333 a0 a1) (x1 : type1431 a0 a1) (x2 : a0) (x3 : type9 a0 a1 a2) (x4 : type1332 a0 a1 a2) (x5 : a1) := (x0 = (fun y0 : type1677 a0 a1 => forall y1 : type1333 a0 a1, (forall y2 : type1677 a0 a1, ((exists y3 : a0, y2 = (x1 y3)) \/ (exists y3 : a1, y2 = ((fun y4 : a1 => @CONSTR (prod a0 a1) (S (NUMERAL 0)) (@pair a0 a1 (@ε a0 (fun y5 : a0 => True)) y4) (fun y5 : nat => @BOTTOM (prod a0 a1))) y3))) -> y1 y2) -> y1 y0)) -> ((x3 (@inl a0 a1 x2)) = (x4 (@CONSTR (prod a0 a1) (NUMERAL 0) (@pair a0 a1 x2 (@ε a1 (fun y0 : a1 => True))) (fun y0 : nat => @BOTTOM (prod a0 a1))))) /\ ((x3 (@inr a0 a1 x5)) = (x4 (@CONSTR (prod a0 a1) (S (NUMERAL 0)) (@pair a0 a1 (@ε a0 (fun y0 : a0 => True)) x5) (fun y0 : nat => @BOTTOM (prod a0 a1))))).
Definition term39 (a0 : Type') (a1 : Type') (a2 : Type') := forall y0 : type1588 a0 a1 a2, exists y1 : type1332 a0 a1 a2, forall y2 : nat, forall y3 : prod a0 a1, forall y4 : type1612 a0 a1, (y1 (@CONSTR (prod a0 a1) y2 y3 y4)) = (y0 y2 y3 y4 (fun y5 : nat => y1 (y4 y5))).
Definition term108 (a0 : Type') (a1 : Type') (a2 : Type') (x0 : a0 -> a2) (x1 : a1 -> a2) := (fun y0 : type50 a0 a1 a2 => forall y1 : type9 a0 a1 a2, (forall y2 : type9 a0 a1 a2, (y2 = y1) -> y0 y2) -> ex y0) (fun y0 : type9 a0 a1 a2 => (forall y1 : a0, (y0 (@inl a0 a1 y1)) = (x0 y1)) /\ (forall y1 : a1, (y0 (@inr a0 a1 y1)) = (x1 y1))).
Definition term11 (a0 : Type') (a1 : Type') (x0 : type1333 a0 a1) (x1 : type1431 a0 a1) := forall y0 : a0, x0 (x1 y0).
Definition term25 (a0 : Type') (a1 : Type') (x0 : a1) := (fun y0 : a1 => @CONSTR (prod a0 a1) (S (NUMERAL 0)) (@pair a0 a1 (@ε a0 (fun y1 : a0 => True)) y0) (fun y1 : nat => @BOTTOM (prod a0 a1))) x0.
Definition term55 (a0 : Type') (a1 : Type') (x0 : a0) := (fun y0 : a0 => forall y1 : a1, (@fst a0 a1 (@pair a0 a1 y0 y1)) = y0) x0.
Definition term41 (a0 : Type') (a1 : Type') (a2 : Type') (x0 : a0 -> a2) (x1 : a1 -> a2) := @FCONS ((prod a0 a1) -> (nat -> recspace (prod a0 a1)) -> (nat -> a2) -> a2) (fun y0 : prod a0 a1 => fun y1 : type1612 a0 a1 => fun y2 : nat -> a2 => x0 (@fst a0 a1 y0)) (@FCONS ((prod a0 a1) -> (nat -> recspace (prod a0 a1)) -> (nat -> a2) -> a2) (fun y0 : prod a0 a1 => fun y1 : type1612 a0 a1 => fun y2 : nat -> a2 => x1 (@snd a0 a1 y0)) (@FNIL ((prod a0 a1) -> (nat -> recspace (prod a0 a1)) -> (nat -> a2) -> a2))).
Definition term110 (a0 : Type') (a1 : Type') (a2 : Type') (x0 : a0 -> a2) (x1 : a1 -> a2) := forall y0 : type9 a0 a1 a2, (forall y1 : type9 a0 a1 a2, (y1 = y0) -> (fun y2 : type9 a0 a1 a2 => (forall y3 : a0, (y2 (@inl a0 a1 y3)) = (x0 y3)) /\ (forall y3 : a1, (y2 (@inr a0 a1 y3)) = (x1 y3))) y1) -> exists y1 : type9 a0 a1 a2, (forall y2 : a0, (y1 (@inl a0 a1 y2)) = (x0 y2)) /\ (forall y2 : a1, (y1 (@inr a0 a1 y2)) = (x1 y2)).
Definition term82 (a0 : Type') (a1 : Type') (a2 : Type') (x0 : type9 a0 a1 a2) (x1 : a0 -> a2) := forall y0 : a0, (x0 (@inl a0 a1 y0)) = (x1 y0).
Definition term73 (a0 : Type') (a1 : Type') (a2 : Type') (x0 : a0 -> a2) (x1 : a0) := fun y0 : type1612 a0 a1 => fun y1 : nat -> a2 => x0 (@fst a0 a1 (@pair a0 a1 x1 (@ε a1 (fun y2 : a1 => True)))).
Definition term26 (a0 : Type') (a1 : Type') (x0 : a1) := @CONSTR (prod a0 a1) (S (NUMERAL 0)) (@pair a0 a1 (@ε a0 (fun y0 : a0 => True)) x0) (fun y0 : nat => @BOTTOM (prod a0 a1)).
Definition term106 (a0 : Type') (a1 : Type') (a2 : Type') (x0 : a0 -> a2) (x1 : a1 -> a2) (x2 : type9 a0 a1 a2) := (fun y0 : type9 a0 a1 a2 => (forall y1 : a0, (y0 (@inl a0 a1 y1)) = (x0 y1)) /\ (forall y1 : a1, (y0 (@inr a0 a1 y1)) = (x1 y1))) x2.
Definition term31 (a0 : Type') (a1 : Type') (a2 : Type') (x0 : type1333 a0 a1) (x1 : type1431 a0 a1) (x2 : type1479 a0 a1) (x3 : a0) (x4 : type9 a0 a1 a2) (x5 : type1332 a0 a1 a2) (x6 : a1) := (x2 = (fun y0 : a1 => @CONSTR (prod a0 a1) (S (NUMERAL 0)) (@pair a0 a1 (@ε a0 (fun y1 : a0 => True)) y0) (fun y1 : nat => @BOTTOM (prod a0 a1)))) -> (x0 = (fun y0 : type1677 a0 a1 => forall y1 : type1333 a0 a1, (forall y2 : type1677 a0 a1, ((exists y3 : a0, y2 = (x1 y3)) \/ (exists y3 : a1, y2 = (x2 y3))) -> y1 y2) -> y1 y0)) -> ((x4 (@inl a0 a1 x3)) = (x5 (@CONSTR (prod a0 a1) (NUMERAL 0) (@pair a0 a1 x3 (@ε a1 (fun y0 : a1 => True))) (fun y0 : nat => @BOTTOM (prod a0 a1))))) /\ ((x4 (@inr a0 a1 x6)) = (x5 (@CONSTR (prod a0 a1) (S (NUMERAL 0)) (@pair a0 a1 (@ε a0 (fun y0 : a0 => True)) x6) (fun y0 : nat => @BOTTOM (prod a0 a1))))).
Definition term83 (a0 : Type') (a1 : Type') (a2 : Type') (x0 : a0 -> a2) (x1 : a1 -> a2) (x2 : a1) (x3 : type1332 a0 a1 a2) := @FCONS ((prod a0 a1) -> (nat -> recspace (prod a0 a1)) -> (nat -> a2) -> a2) (fun y0 : prod a0 a1 => fun y1 : type1612 a0 a1 => fun y2 : nat -> a2 => x0 (@fst a0 a1 y0)) (@FCONS ((prod a0 a1) -> (nat -> recspace (prod a0 a1)) -> (nat -> a2) -> a2) (fun y0 : prod a0 a1 => fun y1 : type1612 a0 a1 => fun y2 : nat -> a2 => x1 (@snd a0 a1 y0)) (@FNIL ((prod a0 a1) -> (nat -> recspace (prod a0 a1)) -> (nat -> a2) -> a2))) (S (NUMERAL 0)) (@pair a0 a1 (@ε a0 (fun y0 : a0 => True)) x2) (fun y0 : nat => @BOTTOM (prod a0 a1)) (fun y0 : nat => x3 ((fun y1 : nat => @BOTTOM (prod a0 a1)) y0)).
Definition term36 (a0 : Type') (a1 : Type') (a2 : Type') (x0 : type1333 a0 a1) (x1 : a0) (x2 : type9 a0 a1 a2) (x3 : type1332 a0 a1 a2) (x4 : a1) := (x0 = (fun y0 : type1677 a0 a1 => forall y1 : type1333 a0 a1, (forall y2 : type1677 a0 a1, ((exists y3 : a0, y2 = ((fun y4 : a0 => @CONSTR (prod a0 a1) (NUMERAL 0) (@pair a0 a1 y4 (@ε a1 (fun y5 : a1 => True))) (fun y5 : nat => @BOTTOM (prod a0 a1))) y3)) \/ (exists y3 : a1, y2 = ((fun y4 : a1 => @CONSTR (prod a0 a1) (S (NUMERAL 0)) (@pair a0 a1 (@ε a0 (fun y5 : a0 => True)) y4) (fun y5 : nat => @BOTTOM (prod a0 a1))) y3))) -> y1 y2) -> y1 y0)) -> ((x2 (@inl a0 a1 x1)) = (x3 (@CONSTR (prod a0 a1) (NUMERAL 0) (@pair a0 a1 x1 (@ε a1 (fun y0 : a1 => True))) (fun y0 : nat => @BOTTOM (prod a0 a1))))) /\ ((x2 (@inr a0 a1 x4)) = (x3 (@CONSTR (prod a0 a1) (S (NUMERAL 0)) (@pair a0 a1 (@ε a0 (fun y0 : a0 => True)) x4) (fun y0 : nat => @BOTTOM (prod a0 a1))))).
Definition term94 (a0 : Type') (a1 : Type') (a2 : Type') (x0 : a1 -> a2) (x1 : a1) := (fun y0 : prod a0 a1 => fun y1 : type1612 a0 a1 => fun y2 : nat -> a2 => x0 (@snd a0 a1 y0)) (@pair a0 a1 (@ε a0 (fun y0 : a0 => True)) x1) (fun y0 : nat => @BOTTOM (prod a0 a1)).
Definition term47 (a0 : Type') (a1 : Type') (a2 : Type') (x0 : a0 -> a2) (x1 : a1 -> a2) (x2 : nat) (x3 : prod a0 a1) (x4 : type1332 a0 a1 a2) := forall y0 : type1612 a0 a1, (x4 (@CONSTR (prod a0 a1) x2 x3 y0)) = (@FCONS ((prod a0 a1) -> (nat -> recspace (prod a0 a1)) -> (nat -> a2) -> a2) (fun y1 : prod a0 a1 => fun y2 : type1612 a0 a1 => fun y3 : nat -> a2 => x0 (@fst a0 a1 y1)) (@FCONS ((prod a0 a1) -> (nat -> recspace (prod a0 a1)) -> (nat -> a2) -> a2) (fun y1 : prod a0 a1 => fun y2 : type1612 a0 a1 => fun y3 : nat -> a2 => x1 (@snd a0 a1 y1)) (@FNIL ((prod a0 a1) -> (nat -> recspace (prod a0 a1)) -> (nat -> a2) -> a2))) x2 x3 y0 (fun y1 : nat => x4 (y0 y1))).
Definition term90 (a0 : Type') (a1 : Type') (a2 : Type') (x0 : a1 -> a2) := fun y0 : prod a0 a1 => fun y1 : type1612 a0 a1 => fun y2 : nat -> a2 => x0 (@snd a0 a1 y0).
Definition term65 (a0 : Type') (a1 : Type') (a2 : Type') (x0 : a0 -> a2) := fun y0 : prod a0 a1 => fun y1 : type1612 a0 a1 => fun y2 : nat -> a2 => x0 (@fst a0 a1 y0).
Definition term19 (a0 : Type') (a1 : Type') (a2 : Type') (x0 : type1332 a0 a1 a2) (x1 : type1431 a0 a1) (x2 : a0) := x0 (x1 x2).
Definition term12 (a0 : Type') (a1 : Type') (x0 : type1333 a0 a1) (x1 : type1431 a0 a1) (x2 : a0) := (fun y0 : a0 => x0 (x1 y0)) x2.
Definition term112 (a0 : Type') (a1 : Type') (a2 : Type') (x0 : type1332 a0 a1 a2) (x1 : a0 -> a2) (x2 : a1 -> a2) := (forall y0 : type9 a0 a1 a2, (y0 = (fun y1 : Datatypes.sum a0 a1 => x0 (@_dest_sum a0 a1 y1))) -> (fun y1 : type9 a0 a1 a2 => (forall y2 : a0, (y1 (@inl a0 a1 y2)) = (x1 y2)) /\ (forall y2 : a1, (y1 (@inr a0 a1 y2)) = (x2 y2))) y0) -> exists y0 : type9 a0 a1 a2, (forall y1 : a0, (y0 (@inl a0 a1 y1)) = (x1 y1)) /\ (forall y1 : a1, (y0 (@inr a0 a1 y1)) = (x2 y1)).
Definition term43 (a0 : Type') (a1 : Type') (a2 : Type') (x0 : a0 -> a2) (x1 : a1 -> a2) (x2 : type1332 a0 a1 a2) := forall y0 : nat, forall y1 : prod a0 a1, forall y2 : type1612 a0 a1, (x2 (@CONSTR (prod a0 a1) y0 y1 y2)) = (@FCONS ((prod a0 a1) -> (nat -> recspace (prod a0 a1)) -> (nat -> a2) -> a2) (fun y3 : prod a0 a1 => fun y4 : type1612 a0 a1 => fun y5 : nat -> a2 => x0 (@fst a0 a1 y3)) (@FCONS ((prod a0 a1) -> (nat -> recspace (prod a0 a1)) -> (nat -> a2) -> a2) (fun y3 : prod a0 a1 => fun y4 : type1612 a0 a1 => fun y5 : nat -> a2 => x1 (@snd a0 a1 y3)) (@FNIL ((prod a0 a1) -> (nat -> recspace (prod a0 a1)) -> (nat -> a2) -> a2))) y0 y1 y2 (fun y3 : nat => x2 (y2 y3))).
Definition term81 (a0 : Type') (a1 : Type') (a2 : Type') (x0 : type9 a0 a1 a2) (x1 : a0) := @eq a2 (x0 (@inl a0 a1 x1)).
Definition term16 (a0 : Type') (a1 : Type') (x0 : type1333 a0 a1) (x1 : type1479 a0 a1) (x2 : a1) := (fun y0 : a1 => x0 (x1 y0)) x2.
Definition term79 (a0 : Type') (a1 : Type') (x0 : a0) := @fst a0 a1 (@pair a0 a1 x0 (@ε a1 (fun y0 : a1 => True))).
Definition term91 (a0 : Type') (a1 : Type') (a2 : Type') (x0 : a0 -> a2) (x1 : a1 -> a2) (x2 : a1) := @FCONS ((prod a0 a1) -> (nat -> recspace (prod a0 a1)) -> (nat -> a2) -> a2) (fun y0 : prod a0 a1 => fun y1 : type1612 a0 a1 => fun y2 : nat -> a2 => x0 (@fst a0 a1 y0)) (@FCONS ((prod a0 a1) -> (nat -> recspace (prod a0 a1)) -> (nat -> a2) -> a2) (fun y0 : prod a0 a1 => fun y1 : type1612 a0 a1 => fun y2 : nat -> a2 => x1 (@snd a0 a1 y0)) (@FNIL ((prod a0 a1) -> (nat -> recspace (prod a0 a1)) -> (nat -> a2) -> a2))) (S (NUMERAL 0)) (@pair a0 a1 (@ε a0 (fun y0 : a0 => True)) x2).
Definition term111 (a0 : Type') (a1 : Type') (a2 : Type') (x0 : a0 -> a2) (x1 : a1 -> a2) (x2 : type1332 a0 a1 a2) := (fun y0 : type9 a0 a1 a2 => (forall y1 : type9 a0 a1 a2, (y1 = y0) -> (fun y2 : type9 a0 a1 a2 => (forall y3 : a0, (y2 (@inl a0 a1 y3)) = (x0 y3)) /\ (forall y3 : a1, (y2 (@inr a0 a1 y3)) = (x1 y3))) y1) -> exists y1 : type9 a0 a1 a2, (forall y2 : a0, (y1 (@inl a0 a1 y2)) = (x0 y2)) /\ (forall y2 : a1, (y1 (@inr a0 a1 y2)) = (x1 y2))) (fun y0 : Datatypes.sum a0 a1 => x2 (@_dest_sum a0 a1 y0)).
Definition term59 (a0 : Type') (a1 : Type') (a2 : Type') (x0 : a0 -> a2) (x1 : a1 -> a2) (x2 : a0) (x3 : type1332 a0 a1 a2) := @FCONS ((prod a0 a1) -> (nat -> recspace (prod a0 a1)) -> (nat -> a2) -> a2) (fun y0 : prod a0 a1 => fun y1 : type1612 a0 a1 => fun y2 : nat -> a2 => x0 (@fst a0 a1 y0)) (@FCONS ((prod a0 a1) -> (nat -> recspace (prod a0 a1)) -> (nat -> a2) -> a2) (fun y0 : prod a0 a1 => fun y1 : type1612 a0 a1 => fun y2 : nat -> a2 => x1 (@snd a0 a1 y0)) (@FNIL ((prod a0 a1) -> (nat -> recspace (prod a0 a1)) -> (nat -> a2) -> a2))) (NUMERAL 0) (@pair a0 a1 x2 (@ε a1 (fun y0 : a1 => True))) (fun y0 : nat => @BOTTOM (prod a0 a1)) (fun y0 : nat => x3 ((fun y1 : nat => @BOTTOM (prod a0 a1)) y0)).
Definition term63 (a0 : Type') (a1 : Type') (a2 : Type') (x0 : type1203 a0 a1 a2) (x1 : type1588 a0 a1 a2) := @FCONS ((prod a0 a1) -> (nat -> recspace (prod a0 a1)) -> (nat -> a2) -> a2) x0 x1 (NUMERAL 0).
Definition term98 (a0 : Type') (a1 : Type') (a2 : Type') (x0 : a1 -> a2) (x1 : a1) (x2 : type1332 a0 a1 a2) := (fun y0 : type1612 a0 a1 => fun y1 : nat -> a2 => x0 (@snd a0 a1 (@pair a0 a1 (@ε a0 (fun y2 : a0 => True)) x1))) (fun y0 : nat => @BOTTOM (prod a0 a1)) (fun y0 : nat => x2 ((fun y1 : nat => @BOTTOM (prod a0 a1)) y0)).
Definition term75 (a0 : Type') (a1 : Type') (a2 : Type') (x0 : a0 -> a2) (x1 : a0) (x2 : type1332 a0 a1 a2) := (fun y0 : type1612 a0 a1 => fun y1 : nat -> a2 => x0 (@fst a0 a1 (@pair a0 a1 x1 (@ε a1 (fun y2 : a1 => True))))) (fun y0 : nat => @BOTTOM (prod a0 a1)) (fun y0 : nat => x2 ((fun y1 : nat => @BOTTOM (prod a0 a1)) y0)).
Definition term101 (a0 : Type') (a1 : Type') (a2 : Type') (x0 : a1 -> a2) (x1 : a1) := x0 (@snd a0 a1 (@pair a0 a1 (@ε a0 (fun y0 : a0 => True)) x1)).
Definition term85 (a0 : Type') (a1 : Type') (x0 : a1) := @pair a0 a1 (@ε a0 (fun y0 : a0 => True)) x0.
Definition term18 (a0 : Type') (a1 : Type') (x0 : type1479 a0 a1) (x1 : a1) := @_dest_sum a0 a1 (@_mk_sum a0 a1 (x0 x1)).
Definition term2 (a0 : Type') (a1 : Type') (a2 : Type') (x0 : type9 a0 a1 a2) (x1 : a0) := x0 (@inl a0 a1 x1).
Definition term95 (a0 : Type') (a1 : Type') (a2 : Type') (x0 : a1 -> a2) (x1 : a1) (x2 : type1332 a0 a1 a2) := (fun y0 : prod a0 a1 => fun y1 : type1612 a0 a1 => fun y2 : nat -> a2 => x0 (@snd a0 a1 y0)) (@pair a0 a1 (@ε a0 (fun y0 : a0 => True)) x1) (fun y0 : nat => @BOTTOM (prod a0 a1)) (fun y0 : nat => x2 ((fun y1 : nat => @BOTTOM (prod a0 a1)) y0)).
Definition term78 (a0 : Type') (a1 : Type') (a2 : Type') (x0 : a0 -> a2) (x1 : a0) := x0 (@fst a0 a1 (@pair a0 a1 x1 (@ε a1 (fun y0 : a1 => True)))).
Definition term27 (a0 : Type') (a1 : Type') (x0 : type1479 a0 a1) (x1 : a1) := @eq (recspace (prod a0 a1)) (x0 x1).
Definition term66 (a0 : Type') (a1 : Type') (a2 : Type') (x0 : a1 -> a2) := @FCONS ((prod a0 a1) -> (nat -> recspace (prod a0 a1)) -> (nat -> a2) -> a2) (fun y0 : prod a0 a1 => fun y1 : type1612 a0 a1 => fun y2 : nat -> a2 => x0 (@snd a0 a1 y0)) (@FNIL ((prod a0 a1) -> (nat -> recspace (prod a0 a1)) -> (nat -> a2) -> a2)).
Definition term109 (a0 : Type') (a1 : Type') (a2 : Type') (x0 : a0 -> a2) (x1 : a1 -> a2) := fun y0 : type9 a0 a1 a2 => (forall y1 : a0, (y0 (@inl a0 a1 y1)) = (x0 y1)) /\ (forall y1 : a1, (y0 (@inr a0 a1 y1)) = (x1 y1)).
Definition term93 (a0 : Type') (a1 : Type') (a2 : Type') (x0 : a0 -> a2) (x1 : a1 -> a2) (x2 : a1) := @FCONS ((prod a0 a1) -> (nat -> recspace (prod a0 a1)) -> (nat -> a2) -> a2) (fun y0 : prod a0 a1 => fun y1 : type1612 a0 a1 => fun y2 : nat -> a2 => x0 (@fst a0 a1 y0)) (@FCONS ((prod a0 a1) -> (nat -> recspace (prod a0 a1)) -> (nat -> a2) -> a2) (fun y0 : prod a0 a1 => fun y1 : type1612 a0 a1 => fun y2 : nat -> a2 => x1 (@snd a0 a1 y0)) (@FNIL ((prod a0 a1) -> (nat -> recspace (prod a0 a1)) -> (nat -> a2) -> a2))) (S (NUMERAL 0)) (@pair a0 a1 (@ε a0 (fun y0 : a0 => True)) x2) (fun y0 : nat => @BOTTOM (prod a0 a1)).
Definition term13 (a0 : Type') (a1 : Type') (x0 : type1333 a0 a1) (x1 : type1431 a0 a1) (x2 : a0) := x0 (x1 x2).
Definition term102 (a0 : Type') (a1 : Type') (x0 : a1) := @snd a0 a1 (@pair a0 a1 (@ε a0 (fun y0 : a0 => True)) x0).
Definition term76 (a0 : Type') (a1 : Type') (a2 : Type') (x0 : a0 -> a2) (x1 : a0) := fun y0 : nat -> a2 => x0 (@fst a0 a1 (@pair a0 a1 x1 (@ε a1 (fun y1 : a1 => True)))).
Definition term52 (a0 : Type') (a1 : Type') (x0 : a0) := forall y0 : a1, (@snd a0 a1 (@pair a0 a1 x0 y0)) = y0.
Definition term96 (a0 : Type') (a1 : Type') (a2 : Type') (x0 : a1 -> a2) (x1 : a1) := fun y0 : type1612 a0 a1 => fun y1 : nat -> a2 => x0 (@snd a0 a1 (@pair a0 a1 (@ε a0 (fun y2 : a0 => True)) x1)).
Definition term107 (a0 : Type') (a1 : Type') (a2 : Type') := forall y0 : type50 a0 a1 a2, forall y1 : type9 a0 a1 a2, (forall y2 : type9 a0 a1 a2, (y2 = y1) -> y0 y2) -> ex y0.
Definition term21 (a0 : Type') (a1 : Type') (x0 : a0) := (fun y0 : a0 => @CONSTR (prod a0 a1) (NUMERAL 0) (@pair a0 a1 y0 (@ε a1 (fun y1 : a1 => True))) (fun y1 : nat => @BOTTOM (prod a0 a1))) x0.
Definition term5 (a0 : Type') (a1 : Type') (a2 : Type') (x0 : type9 a0 a1 a2) (x1 : a1) := x0 (@inr a0 a1 x1).
Definition term28 (a0 : Type') (a1 : Type') (a2 : Type') (x0 : type1332 a0 a1 a2) (x1 : a1) := x0 (@CONSTR (prod a0 a1) (S (NUMERAL 0)) (@pair a0 a1 (@ε a0 (fun y0 : a0 => True)) x1) (fun y0 : nat => @BOTTOM (prod a0 a1))).
Definition term97 (a0 : Type') (a1 : Type') (a2 : Type') (x0 : a1 -> a2) (x1 : a1) := (fun y0 : type1612 a0 a1 => fun y1 : nat -> a2 => x0 (@snd a0 a1 (@pair a0 a1 (@ε a0 (fun y2 : a0 => True)) x1))) (fun y0 : nat => @BOTTOM (prod a0 a1)).
Definition term74 (a0 : Type') (a1 : Type') (a2 : Type') (x0 : a0 -> a2) (x1 : a0) := (fun y0 : type1612 a0 a1 => fun y1 : nat -> a2 => x0 (@fst a0 a1 (@pair a0 a1 x1 (@ε a1 (fun y2 : a1 => True))))) (fun y0 : nat => @BOTTOM (prod a0 a1)).
Definition term53 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a1) := (fun y0 : a1 => (@snd a0 a1 (@pair a0 a1 x0 y0)) = y0) x1.
Definition term64 (a0 : Type') (a1 : Type') (a2 : Type') (x0 : a0 -> a2) (x1 : a1 -> a2) := @FCONS ((prod a0 a1) -> (nat -> recspace (prod a0 a1)) -> (nat -> a2) -> a2) (fun y0 : prod a0 a1 => fun y1 : type1612 a0 a1 => fun y2 : nat -> a2 => x0 (@fst a0 a1 y0)) (@FCONS ((prod a0 a1) -> (nat -> recspace (prod a0 a1)) -> (nat -> a2) -> a2) (fun y0 : prod a0 a1 => fun y1 : type1612 a0 a1 => fun y2 : nat -> a2 => x1 (@snd a0 a1 y0)) (@FNIL ((prod a0 a1) -> (nat -> recspace (prod a0 a1)) -> (nat -> a2) -> a2))) (NUMERAL 0).
Definition term15 (a0 : Type') (a1 : Type') (x0 : type1431 a0 a1) (x1 : a0) := @_dest_sum a0 a1 (@_mk_sum a0 a1 (x0 x1)).
Definition term40 (a0 : Type') (a1 : Type') (a2 : Type') (x0 : a0 -> a2) (x1 : a1 -> a2) := (fun y0 : type1588 a0 a1 a2 => exists y1 : type1332 a0 a1 a2, forall y2 : nat, forall y3 : prod a0 a1, forall y4 : type1612 a0 a1, (y1 (@CONSTR (prod a0 a1) y2 y3 y4)) = (y0 y2 y3 y4 (fun y5 : nat => y1 (y4 y5)))) (@FCONS ((prod a0 a1) -> (nat -> recspace (prod a0 a1)) -> (nat -> a2) -> a2) (fun y0 : prod a0 a1 => fun y1 : type1612 a0 a1 => fun y2 : nat -> a2 => x0 (@fst a0 a1 y0)) (@FCONS ((prod a0 a1) -> (nat -> recspace (prod a0 a1)) -> (nat -> a2) -> a2) (fun y0 : prod a0 a1 => fun y1 : type1612 a0 a1 => fun y2 : nat -> a2 => x1 (@snd a0 a1 y0)) (@FNIL ((prod a0 a1) -> (nat -> recspace (prod a0 a1)) -> (nat -> a2) -> a2)))).
Definition term44 (a0 : Type') (a1 : Type') (a2 : Type') (x0 : a0 -> a2) (x1 : a1 -> a2) (x2 : type1332 a0 a1 a2) (x3 : nat) := (fun y0 : nat => forall y1 : prod a0 a1, forall y2 : type1612 a0 a1, (x2 (@CONSTR (prod a0 a1) y0 y1 y2)) = (@FCONS ((prod a0 a1) -> (nat -> recspace (prod a0 a1)) -> (nat -> a2) -> a2) (fun y3 : prod a0 a1 => fun y4 : type1612 a0 a1 => fun y5 : nat -> a2 => x0 (@fst a0 a1 y3)) (@FCONS ((prod a0 a1) -> (nat -> recspace (prod a0 a1)) -> (nat -> a2) -> a2) (fun y3 : prod a0 a1 => fun y4 : type1612 a0 a1 => fun y5 : nat -> a2 => x1 (@snd a0 a1 y3)) (@FNIL ((prod a0 a1) -> (nat -> recspace (prod a0 a1)) -> (nat -> a2) -> a2))) y0 y1 y2 (fun y3 : nat => x2 (y2 y3)))) x3.
Definition term42 (a0 : Type') (a1 : Type') (a2 : Type') (x0 : a0 -> a2) (x1 : a1 -> a2) := exists y0 : type1332 a0 a1 a2, forall y1 : nat, forall y2 : prod a0 a1, forall y3 : type1612 a0 a1, (y0 (@CONSTR (prod a0 a1) y1 y2 y3)) = (@FCONS ((prod a0 a1) -> (nat -> recspace (prod a0 a1)) -> (nat -> a2) -> a2) (fun y4 : prod a0 a1 => fun y5 : type1612 a0 a1 => fun y6 : nat -> a2 => x0 (@fst a0 a1 y4)) (@FCONS ((prod a0 a1) -> (nat -> recspace (prod a0 a1)) -> (nat -> a2) -> a2) (fun y4 : prod a0 a1 => fun y5 : type1612 a0 a1 => fun y6 : nat -> a2 => x1 (@snd a0 a1 y4)) (@FNIL ((prod a0 a1) -> (nat -> recspace (prod a0 a1)) -> (nat -> a2) -> a2))) y1 y2 y3 (fun y4 : nat => y0 (y3 y4))).
Definition term88 (a0 : Type') (a1 : Type') (a2 : Type') (x0 : a0 -> a2) (x1 : a1 -> a2) := @FCONS ((prod a0 a1) -> (nat -> recspace (prod a0 a1)) -> (nat -> a2) -> a2) (fun y0 : prod a0 a1 => fun y1 : type1612 a0 a1 => fun y2 : nat -> a2 => x0 (@fst a0 a1 y0)) (@FCONS ((prod a0 a1) -> (nat -> recspace (prod a0 a1)) -> (nat -> a2) -> a2) (fun y0 : prod a0 a1 => fun y1 : type1612 a0 a1 => fun y2 : nat -> a2 => x1 (@snd a0 a1 y0)) (@FNIL ((prod a0 a1) -> (nat -> recspace (prod a0 a1)) -> (nat -> a2) -> a2))) (S (NUMERAL 0)).
Definition term70 (a0 : Type') (a1 : Type') (a2 : Type') (x0 : a0 -> a2) (x1 : a0) := (fun y0 : prod a0 a1 => fun y1 : type1612 a0 a1 => fun y2 : nat -> a2 => x0 (@fst a0 a1 y0)) (@pair a0 a1 x1 (@ε a1 (fun y0 : a1 => True))) (fun y0 : nat => @BOTTOM (prod a0 a1)).
Definition term38 (a0 : Type') (a1 : Type') (a2 : Type') (x0 : a0) (x1 : type9 a0 a1 a2) (x2 : type1332 a0 a1 a2) (x3 : a1) := ((fun y0 : type1677 a0 a1 => forall y1 : type1333 a0 a1, (forall y2 : type1677 a0 a1, ((exists y3 : a0, y2 = ((fun y4 : a0 => @CONSTR (prod a0 a1) (NUMERAL 0) (@pair a0 a1 y4 (@ε a1 (fun y5 : a1 => True))) (fun y5 : nat => @BOTTOM (prod a0 a1))) y3)) \/ (exists y3 : a1, y2 = ((fun y4 : a1 => @CONSTR (prod a0 a1) (S (NUMERAL 0)) (@pair a0 a1 (@ε a0 (fun y5 : a0 => True)) y4) (fun y5 : nat => @BOTTOM (prod a0 a1))) y3))) -> y1 y2) -> y1 y0) = (fun y0 : type1677 a0 a1 => forall y1 : type1333 a0 a1, (forall y2 : type1677 a0 a1, ((exists y3 : a0, y2 = ((fun y4 : a0 => @CONSTR (prod a0 a1) (NUMERAL 0) (@pair a0 a1 y4 (@ε a1 (fun y5 : a1 => True))) (fun y5 : nat => @BOTTOM (prod a0 a1))) y3)) \/ (exists y3 : a1, y2 = ((fun y4 : a1 => @CONSTR (prod a0 a1) (S (NUMERAL 0)) (@pair a0 a1 (@ε a0 (fun y5 : a0 => True)) y4) (fun y5 : nat => @BOTTOM (prod a0 a1))) y3))) -> y1 y2) -> y1 y0)) -> ((x1 (@inl a0 a1 x0)) = (x2 (@CONSTR (prod a0 a1) (NUMERAL 0) (@pair a0 a1 x0 (@ε a1 (fun y0 : a1 => True))) (fun y0 : nat => @BOTTOM (prod a0 a1))))) /\ ((x1 (@inr a0 a1 x3)) = (x2 (@CONSTR (prod a0 a1) (S (NUMERAL 0)) (@pair a0 a1 (@ε a0 (fun y0 : a0 => True)) x3) (fun y0 : nat => @BOTTOM (prod a0 a1))))).
Definition term23 (a0 : Type') (a1 : Type') (x0 : type1431 a0 a1) (x1 : a0) := @eq (recspace (prod a0 a1)) (x0 x1).
Definition term54 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a1) := @snd a0 a1 (@pair a0 a1 x0 x1).
Definition term37 (a0 : Type') (a1 : Type') := fun y0 : type1677 a0 a1 => forall y1 : type1333 a0 a1, (forall y2 : type1677 a0 a1, ((exists y3 : a0, y2 = ((fun y4 : a0 => @CONSTR (prod a0 a1) (NUMERAL 0) (@pair a0 a1 y4 (@ε a1 (fun y5 : a1 => True))) (fun y5 : nat => @BOTTOM (prod a0 a1))) y3)) \/ (exists y3 : a1, y2 = ((fun y4 : a1 => @CONSTR (prod a0 a1) (S (NUMERAL 0)) (@pair a0 a1 (@ε a0 (fun y5 : a0 => True)) y4) (fun y5 : nat => @BOTTOM (prod a0 a1))) y3))) -> y1 y2) -> y1 y0.
Definition term9 (a0 : Type') (a1 : Type') (x0 : type1431 a0 a1) (x1 : type1479 a0 a1) := fun y0 : type1677 a0 a1 => forall y1 : type1333 a0 a1, (forall y2 : type1677 a0 a1, ((exists y3 : a0, y2 = (x0 y3)) \/ (exists y3 : a1, y2 = (x1 y3))) -> y1 y2) -> y1 y0.
Definition term57 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a1) := (fun y0 : a1 => (@fst a0 a1 (@pair a0 a1 x0 y0)) = x0) x1.
Definition term4 (a0 : Type') (a1 : Type') := fun y0 : a1 => @CONSTR (prod a0 a1) (S (NUMERAL 0)) (@pair a0 a1 (@ε a0 (fun y1 : a0 => True)) y0) (fun y1 : nat => @BOTTOM (prod a0 a1)).
Definition term71 (a0 : Type') (a1 : Type') (a2 : Type') (x0 : type1332 a0 a1 a2) := fun y0 : nat => x0 ((fun y1 : nat => @BOTTOM (prod a0 a1)) y0).
Definition term24 (a0 : Type') (a1 : Type') (a2 : Type') (x0 : type1332 a0 a1 a2) (x1 : a0) := x0 (@CONSTR (prod a0 a1) (NUMERAL 0) (@pair a0 a1 x1 (@ε a1 (fun y0 : a1 => True))) (fun y0 : nat => @BOTTOM (prod a0 a1))).
Definition term117 (a0 : Type') (a1 : Type') (a2 : Type') (x0 : a0 -> a2) := forall y0 : a1 -> a2, exists y1 : type9 a0 a1 a2, (forall y2 : a0, (y1 (@inl a0 a1 y2)) = (x0 y2)) /\ (forall y2 : a1, (y1 (@inr a0 a1 y2)) = (y0 y2)).
Definition term45 (a0 : Type') (a1 : Type') (a2 : Type') (x0 : a0 -> a2) (x1 : a1 -> a2) (x2 : nat) (x3 : type1332 a0 a1 a2) := forall y0 : prod a0 a1, forall y1 : type1612 a0 a1, (x3 (@CONSTR (prod a0 a1) x2 y0 y1)) = (@FCONS ((prod a0 a1) -> (nat -> recspace (prod a0 a1)) -> (nat -> a2) -> a2) (fun y2 : prod a0 a1 => fun y3 : type1612 a0 a1 => fun y4 : nat -> a2 => x0 (@fst a0 a1 y2)) (@FCONS ((prod a0 a1) -> (nat -> recspace (prod a0 a1)) -> (nat -> a2) -> a2) (fun y2 : prod a0 a1 => fun y3 : type1612 a0 a1 => fun y4 : nat -> a2 => x1 (@snd a0 a1 y2)) (@FNIL ((prod a0 a1) -> (nat -> recspace (prod a0 a1)) -> (nat -> a2) -> a2))) x2 y0 y1 (fun y2 : nat => x3 (y1 y2))).
Definition term77 (a0 : Type') (a1 : Type') (a2 : Type') (x0 : a0 -> a2) (x1 : a0) (x2 : type1332 a0 a1 a2) := (fun y0 : nat -> a2 => x0 (@fst a0 a1 (@pair a0 a1 x1 (@ε a1 (fun y1 : a1 => True))))) (fun y0 : nat => x2 ((fun y1 : nat => @BOTTOM (prod a0 a1)) y0)).
Definition term48 (a0 : Type') (a1 : Type') (a2 : Type') (x0 : a0 -> a2) (x1 : a1 -> a2) (x2 : nat) (x3 : prod a0 a1) (x4 : type1332 a0 a1 a2) (x5 : type1612 a0 a1) := (fun y0 : type1612 a0 a1 => (x4 (@CONSTR (prod a0 a1) x2 x3 y0)) = (@FCONS ((prod a0 a1) -> (nat -> recspace (prod a0 a1)) -> (nat -> a2) -> a2) (fun y1 : prod a0 a1 => fun y2 : type1612 a0 a1 => fun y3 : nat -> a2 => x0 (@fst a0 a1 y1)) (@FCONS ((prod a0 a1) -> (nat -> recspace (prod a0 a1)) -> (nat -> a2) -> a2) (fun y1 : prod a0 a1 => fun y2 : type1612 a0 a1 => fun y3 : nat -> a2 => x1 (@snd a0 a1 y1)) (@FNIL ((prod a0 a1) -> (nat -> recspace (prod a0 a1)) -> (nat -> a2) -> a2))) x2 x3 y0 (fun y1 : nat => x4 (y0 y1)))) x5.
Definition term92 (a0 : Type') (a1 : Type') (a2 : Type') (x0 : a1 -> a2) (x1 : a1) := (fun y0 : prod a0 a1 => fun y1 : type1612 a0 a1 => fun y2 : nat -> a2 => x0 (@snd a0 a1 y0)) (@pair a0 a1 (@ε a0 (fun y0 : a0 => True)) x1).
Definition term46 (a0 : Type') (a1 : Type') (a2 : Type') (x0 : a0 -> a2) (x1 : a1 -> a2) (x2 : nat) (x3 : type1332 a0 a1 a2) (x4 : prod a0 a1) := (fun y0 : prod a0 a1 => forall y1 : type1612 a0 a1, (x3 (@CONSTR (prod a0 a1) x2 y0 y1)) = (@FCONS ((prod a0 a1) -> (nat -> recspace (prod a0 a1)) -> (nat -> a2) -> a2) (fun y2 : prod a0 a1 => fun y3 : type1612 a0 a1 => fun y4 : nat -> a2 => x0 (@fst a0 a1 y2)) (@FCONS ((prod a0 a1) -> (nat -> recspace (prod a0 a1)) -> (nat -> a2) -> a2) (fun y2 : prod a0 a1 => fun y3 : type1612 a0 a1 => fun y4 : nat -> a2 => x1 (@snd a0 a1 y2)) (@FNIL ((prod a0 a1) -> (nat -> recspace (prod a0 a1)) -> (nat -> a2) -> a2))) x2 y0 y1 (fun y2 : nat => x3 (y1 y2)))) x4.
Definition term60 (a0 : Type') (a1 : Type') (x0 : a0) := @pair a0 a1 x0 (@ε a1 (fun y0 : a1 => True)).
Definition term103 (a0 : Type') (a1 : Type') (a2 : Type') (x0 : type9 a0 a1 a2) (x1 : a1) := @eq a2 (x0 (@inr a0 a1 x1)).
Definition term6 (a0 : Type') (a1 : Type') (a2 : Type') (x0 : type1332 a0 a1 a2) (x1 : type1479 a0 a1) (x2 : a1) := (fun y0 : Datatypes.sum a0 a1 => x0 (@_dest_sum a0 a1 y0)) (@_mk_sum a0 a1 (x1 x2)).
Definition term3 (a0 : Type') (a1 : Type') (a2 : Type') (x0 : type1332 a0 a1 a2) (x1 : type1431 a0 a1) (x2 : a0) := (fun y0 : Datatypes.sum a0 a1 => x0 (@_dest_sum a0 a1 y0)) (@_mk_sum a0 a1 (x1 x2)).
Definition term29 (a0 : Type') (a1 : Type') (a2 : Type') (x0 : a0) (x1 : type9 a0 a1 a2) (x2 : type1332 a0 a1 a2) (x3 : a1) := ((x1 (@inl a0 a1 x0)) = (x2 (@CONSTR (prod a0 a1) (NUMERAL 0) (@pair a0 a1 x0 (@ε a1 (fun y0 : a1 => True))) (fun y0 : nat => @BOTTOM (prod a0 a1))))) /\ ((x1 (@inr a0 a1 x3)) = (x2 (@CONSTR (prod a0 a1) (S (NUMERAL 0)) (@pair a0 a1 (@ε a0 (fun y0 : a0 => True)) x3) (fun y0 : nat => @BOTTOM (prod a0 a1))))).
Definition term10 (a0 : Type') (a1 : Type') (x0 : type1333 a0 a1) (x1 : type1479 a0 a1) := forall y0 : a1, x0 (x1 y0).
Definition term86 (a0 : Type') (x0 : a0) (x1 : nat -> a0) (x2 : nat) := @FCONS a0 x0 x1 (S x2).
Definition term34 (a0 : Type') (a1 : Type') (a2 : Type') (x0 : type1333 a0 a1) (x1 : type1431 a0 a1) (x2 : a0) (x3 : type9 a0 a1 a2) (x4 : type1332 a0 a1 a2) (x5 : a1) := (x1 = (fun y0 : a0 => @CONSTR (prod a0 a1) (NUMERAL 0) (@pair a0 a1 y0 (@ε a1 (fun y1 : a1 => True))) (fun y1 : nat => @BOTTOM (prod a0 a1)))) -> (x0 = (fun y0 : type1677 a0 a1 => forall y1 : type1333 a0 a1, (forall y2 : type1677 a0 a1, ((exists y3 : a0, y2 = (x1 y3)) \/ (exists y3 : a1, y2 = ((fun y4 : a1 => @CONSTR (prod a0 a1) (S (NUMERAL 0)) (@pair a0 a1 (@ε a0 (fun y5 : a0 => True)) y4) (fun y5 : nat => @BOTTOM (prod a0 a1))) y3))) -> y1 y2) -> y1 y0)) -> ((x3 (@inl a0 a1 x2)) = (x4 (@CONSTR (prod a0 a1) (NUMERAL 0) (@pair a0 a1 x2 (@ε a1 (fun y0 : a1 => True))) (fun y0 : nat => @BOTTOM (prod a0 a1))))) /\ ((x3 (@inr a0 a1 x5)) = (x4 (@CONSTR (prod a0 a1) (S (NUMERAL 0)) (@pair a0 a1 (@ε a0 (fun y0 : a0 => True)) x5) (fun y0 : nat => @BOTTOM (prod a0 a1))))).
Definition term99 (a0 : Type') (a1 : Type') (a2 : Type') (x0 : a1 -> a2) (x1 : a1) := fun y0 : nat -> a2 => x0 (@snd a0 a1 (@pair a0 a1 (@ε a0 (fun y1 : a0 => True)) x1)).
