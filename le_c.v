Require Import coq.
Require Import theory_hol.
Require Import hol_types.
Require Import hol_terms.
Require Import hol_axioms.
Require Import hol_type_abbrevs.
Require Import le_c_term_abbrevs.
Lemma lem5120808 {_114929 _114934 : Type'} : (@le_c _114929 _114934) = (term0 _114929 _114934).
Proof. exact (@le_c_def _114929 _114934). Qed.
Lemma lem5120809 {_114934 : Type'} (_66841 : _114934 -> Prop) : _66841 = _66841.
Proof. exact (eq_refl _66841). Qed.
Lemma lem5120810 {_114929 _114934 : Type'} (_66841 : _114934 -> Prop) : (@le_c _114929 _114934 _66841) = (term1 _114929 _114934 _66841).
Proof. exact (MK_COMB (@lem5120808 _114929 _114934) (@lem5120809 _114934 _66841)). Qed.
Lemma lem5120811 {_114929 _114934 : Type'} (_66841 : _114934 -> Prop) : (term1 _114929 _114934 _66841) = (term2 _114929 _114934 _66841).
Proof. exact (eq_refl (term1 _114929 _114934 _66841)). Qed.
Lemma lem5120812 {_114929 _114934 : Type'} (_66841 : _114934 -> Prop) : (@le_c _114929 _114934 _66841) = (term2 _114929 _114934 _66841).
Proof. exact (TRANS (@lem5120810 _114929 _114934 _66841) (@lem5120811 _114929 _114934 _66841)). Qed.
Lemma lem5120813 {_114929 : Type'} (_66842 : _114929 -> Prop) : _66842 = _66842.
Proof. exact (eq_refl _66842). Qed.
Lemma lem5120814 {_114929 _114934 : Type'} (_66841 : _114934 -> Prop) (_66842 : _114929 -> Prop) : (@le_c _114929 _114934 _66841 _66842) = (term3 _114929 _114934 _66841 _66842).
Proof. exact (MK_COMB (@lem5120812 _114929 _114934 _66841) (@lem5120813 _114929 _66842)). Qed.
Lemma lem5120815 {_114929 _114934 : Type'} (_66842 : _114929 -> Prop) (_66841 : _114934 -> Prop) : (term3 _114929 _114934 _66841 _66842) = (term4 _114929 _114934 _66842 _66841).
Proof. exact (eq_refl (term3 _114929 _114934 _66841 _66842)). Qed.
Lemma lem5120816 {_114929 _114934 : Type'} (_66842 : _114929 -> Prop) (_66841 : _114934 -> Prop) : (@le_c _114929 _114934 _66841 _66842) = (term4 _114929 _114934 _66842 _66841).
Proof. exact (TRANS (@lem5120814 _114929 _114934 _66841 _66842) (@lem5120815 _114929 _114934 _66842 _66841)). Qed.
Lemma lem5120817 {_114929 _114934 : Type'} (_66841 : _114934 -> Prop) : term5 _114929 _114934 _66841.
Proof. exact (fun _66842 : _114929 -> Prop => @lem5120816 _114929 _114934 _66842 _66841). Qed.
Lemma lem5120818 {_114929 _114934 : Type'} : term6 _114929 _114934.
Proof. exact (fun _66841 : _114934 -> Prop => @lem5120817 _114929 _114934 _66841). Qed.
Lemma lem5120819 {_114929 _114934 : Type'} (_66841 : _114934 -> Prop) : term7 _114929 _114934 _66841.
Proof. exact (@lem5120818 _114929 _114934 _66841). Qed.
Lemma lem5120820 {_114929 _114934 : Type'} (_66841 : _114934 -> Prop) : (term7 _114929 _114934 _66841) = (term5 _114929 _114934 _66841).
Proof. exact (eq_refl (term7 _114929 _114934 _66841)). Qed.
Lemma lem5120821 {_114929 _114934 : Type'} (_66841 : _114934 -> Prop) : term5 _114929 _114934 _66841.
Proof. exact (EQ_MP (@lem5120820 _114929 _114934 _66841) (@lem5120819 _114929 _114934 _66841)). Qed.
Lemma lem5120822 {_114929 _114934 : Type'} (_66841 : _114934 -> Prop) (_66842 : _114929 -> Prop) : term8 _114929 _114934 _66841 _66842.
Proof. exact (@lem5120821 _114929 _114934 _66841 _66842). Qed.
Lemma lem5120823 {_114929 _114934 : Type'} (_66842 : _114929 -> Prop) (_66841 : _114934 -> Prop) : (term8 _114929 _114934 _66841 _66842) = ((@le_c _114929 _114934 _66841 _66842) = (term4 _114929 _114934 _66842 _66841)).
Proof. exact (eq_refl (term8 _114929 _114934 _66841 _66842)). Qed.
Lemma lem5120824 {_114929 _114934 : Type'} (_66842 : _114929 -> Prop) (_66841 : _114934 -> Prop) : (@le_c _114929 _114934 _66841 _66842) = (term4 _114929 _114934 _66842 _66841).
Proof. exact (EQ_MP (@lem5120823 _114929 _114934 _66842 _66841) (@lem5120822 _114929 _114934 _66841 _66842)). Qed.
Lemma lem5120867 {_114929 _114934 : Type'} (t : _114929 -> Prop) (s : _114934 -> Prop) : (@le_c _114929 _114934 s t) = (term4 _114929 _114934 t s).
Proof. exact (@lem5120824 _114929 _114934 t s). Qed.
Lemma lem5120868 {_114929 _114934 : Type'} (t : _114929 -> Prop) : term9 _114929 _114934 t.
Proof. exact (fun s : _114934 -> Prop => @lem5120867 _114929 _114934 t s). Qed.
Lemma lem5120869 {_114929 _114934 : Type'} : term10 _114929 _114934.
Proof. exact (fun t : _114929 -> Prop => @lem5120868 _114929 _114934 t). Qed.
