Require Import coq.
Require Import theory_hol.
Require Import hol_types.
Require Import hol_type_abbrevs.
Require Import hol_terms.
Definition term1 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') (x0 : type1644 a0 a1 a2 a3) := forall y0 : type1633 a0 a1 a2 a3, forall y1 : a3, forall y2 : a2, (@CASEWISE a0 a1 a2 a3 (@cons (prod (a1 -> a2) (a3 -> a1 -> a0)) x0 y0) y1 y2) = (@COND a0 (exists y3 : a1, (@fst (a1 -> a2) (a3 -> a1 -> a0) x0 y3) = y2) (@snd (a1 -> a2) (a3 -> a1 -> a0) x0 y1 (@ε a1 (fun y3 : a1 => (@fst (a1 -> a2) (a3 -> a1 -> a0) x0 y3) = y2))) (@CASEWISE a0 a1 a2 a3 y0 y1 y2)).
Definition term5 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') (x0 : type1644 a0 a1 a2 a3) (x1 : type1633 a0 a1 a2 a3) (x2 : a3) := forall y0 : a2, (@CASEWISE a0 a1 a2 a3 (@cons (prod (a1 -> a2) (a3 -> a1 -> a0)) x0 x1) x2 y0) = (@COND a0 (exists y1 : a1, (@fst (a1 -> a2) (a3 -> a1 -> a0) x0 y1) = y0) (@snd (a1 -> a2) (a3 -> a1 -> a0) x0 x2 (@ε a1 (fun y1 : a1 => (@fst (a1 -> a2) (a3 -> a1 -> a0) x0 y1) = y0))) (@CASEWISE a0 a1 a2 a3 x1 x2 y0)).
Definition term6 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') (x0 : type1644 a0 a1 a2 a3) (x1 : type1633 a0 a1 a2 a3) (x2 : a3) (x3 : a2) := (fun y0 : a2 => (@CASEWISE a0 a1 a2 a3 (@cons (prod (a1 -> a2) (a3 -> a1 -> a0)) x0 x1) x2 y0) = (@COND a0 (exists y1 : a1, (@fst (a1 -> a2) (a3 -> a1 -> a0) x0 y1) = y0) (@snd (a1 -> a2) (a3 -> a1 -> a0) x0 x2 (@ε a1 (fun y1 : a1 => (@fst (a1 -> a2) (a3 -> a1 -> a0) x0 y1) = y0))) (@CASEWISE a0 a1 a2 a3 x1 x2 y0))) x3.
Definition term4 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') (x0 : type1644 a0 a1 a2 a3) (x1 : type1633 a0 a1 a2 a3) (x2 : a3) := (fun y0 : a3 => forall y1 : a2, (@CASEWISE a0 a1 a2 a3 (@cons (prod (a1 -> a2) (a3 -> a1 -> a0)) x0 x1) y0 y1) = (@COND a0 (exists y2 : a1, (@fst (a1 -> a2) (a3 -> a1 -> a0) x0 y2) = y1) (@snd (a1 -> a2) (a3 -> a1 -> a0) x0 y0 (@ε a1 (fun y2 : a1 => (@fst (a1 -> a2) (a3 -> a1 -> a0) x0 y2) = y1))) (@CASEWISE a0 a1 a2 a3 x1 y0 y1))) x2.
Definition term0 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') (x0 : type1644 a0 a1 a2 a3) := (fun y0 : type1644 a0 a1 a2 a3 => forall y1 : type1633 a0 a1 a2 a3, forall y2 : a3, forall y3 : a2, (@CASEWISE a0 a1 a2 a3 (@cons (prod (a1 -> a2) (a3 -> a1 -> a0)) y0 y1) y2 y3) = (@COND a0 (exists y4 : a1, (@fst (a1 -> a2) (a3 -> a1 -> a0) y0 y4) = y3) (@snd (a1 -> a2) (a3 -> a1 -> a0) y0 y2 (@ε a1 (fun y4 : a1 => (@fst (a1 -> a2) (a3 -> a1 -> a0) y0 y4) = y3))) (@CASEWISE a0 a1 a2 a3 y1 y2 y3))) x0.
Definition term3 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') (x0 : type1644 a0 a1 a2 a3) (x1 : type1633 a0 a1 a2 a3) := forall y0 : a3, forall y1 : a2, (@CASEWISE a0 a1 a2 a3 (@cons (prod (a1 -> a2) (a3 -> a1 -> a0)) x0 x1) y0 y1) = (@COND a0 (exists y2 : a1, (@fst (a1 -> a2) (a3 -> a1 -> a0) x0 y2) = y1) (@snd (a1 -> a2) (a3 -> a1 -> a0) x0 y0 (@ε a1 (fun y2 : a1 => (@fst (a1 -> a2) (a3 -> a1 -> a0) x0 y2) = y1))) (@CASEWISE a0 a1 a2 a3 x1 y0 y1)).
Definition term2 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') (x0 : type1644 a0 a1 a2 a3) (x1 : type1633 a0 a1 a2 a3) := (fun y0 : type1633 a0 a1 a2 a3 => forall y1 : a3, forall y2 : a2, (@CASEWISE a0 a1 a2 a3 (@cons (prod (a1 -> a2) (a3 -> a1 -> a0)) x0 y0) y1 y2) = (@COND a0 (exists y3 : a1, (@fst (a1 -> a2) (a3 -> a1 -> a0) x0 y3) = y2) (@snd (a1 -> a2) (a3 -> a1 -> a0) x0 y1 (@ε a1 (fun y3 : a1 => (@fst (a1 -> a2) (a3 -> a1 -> a0) x0 y3) = y2))) (@CASEWISE a0 a1 a2 a3 y0 y1 y2))) x1.
