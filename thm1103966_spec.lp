require open hol-light.theory_hol;
require open hol-light.hol_types;
require open hol-light.hol_terms;
symbol lem1103966 [_25409 _25416] : Prf (= (@ALL2 _25409 _25416) ((@ε (fun (prod num (prod num (prod num num))) (fun (fun _25409 (fun _25416 bool)) (fun (list _25409) (fun (list _25416) bool))))) (λ ALL2' : El (fun (prod num (prod num (prod num num))) (fun (fun _25409 (fun _25416 bool)) (fun (list _25409) (fun (list _25416) bool)))), (∀ (λ _18003 : El (prod num (prod num (prod num num))), (∧ (∀ (λ P : El (fun _25409 (fun _25416 bool)), (∀ (λ l2 : El (list _25416), (= (ALL2' _18003 P (@NIL _25409) l2) (= l2 (@NIL _25416))))))) (∀ (λ h1' : El _25409, (∀ (λ P : El (fun _25409 (fun _25416 bool)), (∀ (λ t1 : El (list _25409), (∀ (λ l2 : El (list _25416), (= (ALL2' _18003 P ((@CONS _25409) h1' t1) l2) ((@COND bool) (= l2 (@NIL _25416)) F (∧ (P h1' ((@HD _25416) l2)) (ALL2' _18003 P t1 ((@TL _25416) l2))))))))))))))))) ((@̦‚ num (prod num (prod num num))) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num num)) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num num) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))) (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0))))))))))));
