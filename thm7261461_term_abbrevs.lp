require open hol-light.theory_hol;
require open hol-light.hol_types;
require open hol-light.hol_type_abbrevs;
require open hol-light.hol_terms;
symbol term0 (x0: El (fun num real)) ≔ ((λ y0 : El (fun num real), (∀ (λ y1 : El (fun num real), (∀ (λ y2 : El num, (∀ (λ y3 : El num, (⇒ (∀ (λ y4 : El num, (⇒ (∧ (<= y2 y4) (<= y4 y3)) (= (y0 y4) (y1 y4))))) (= ((@sum num) (… y2 y3) (λ y4 : El num, (y0 y4))) ((@sum num) (… y2 y3) y1)))))))))) x0);
symbol term1 (x0: El (fun num real)) ≔ (∀ (λ y0 : El (fun num real), (∀ (λ y1 : El num, (∀ (λ y2 : El num, (⇒ (∀ (λ y3 : El num, (⇒ (∧ (<= y1 y3) (<= y3 y2)) (= (x0 y3) (y0 y3))))) (= ((@sum num) (… y1 y2) (λ y3 : El num, (x0 y3))) ((@sum num) (… y1 y2) y0)))))))));
symbol term6 (x0: El (fun num real)) (x1: El num) (x2: El (fun num real)) (x3: El num) ≔ ((λ y0 : El num, (⇒ (∀ (λ y1 : El num, (⇒ (∧ (<= x1 y1) (<= y1 y0)) (= (x0 y1) (x2 y1))))) (= ((@sum num) (… x1 y0) (λ y1 : El num, (x0 y1))) ((@sum num) (… x1 y0) x2)))) x3);
symbol term3 (x0: El (fun num real)) (x1: El (fun num real)) ≔ (∀ (λ y0 : El num, (∀ (λ y1 : El num, (⇒ (∀ (λ y2 : El num, (⇒ (∧ (<= y0 y2) (<= y2 y1)) (= (x0 y2) (x1 y2))))) (= ((@sum num) (… y0 y1) (λ y2 : El num, (x0 y2))) ((@sum num) (… y0 y1) x1)))))));
symbol term4 (x0: El (fun num real)) (x1: El (fun num real)) (x2: El num) ≔ ((λ y0 : El num, (∀ (λ y1 : El num, (⇒ (∀ (λ y2 : El num, (⇒ (∧ (<= y0 y2) (<= y2 y1)) (= (x0 y2) (x1 y2))))) (= ((@sum num) (… y0 y1) (λ y2 : El num, (x0 y2))) ((@sum num) (… y0 y1) x1)))))) x2);
symbol term2 (x0: El (fun num real)) (x1: El (fun num real)) ≔ ((λ y0 : El (fun num real), (∀ (λ y1 : El num, (∀ (λ y2 : El num, (⇒ (∀ (λ y3 : El num, (⇒ (∧ (<= y1 y3) (<= y3 y2)) (= (x0 y3) (y0 y3))))) (= ((@sum num) (… y1 y2) (λ y3 : El num, (x0 y3))) ((@sum num) (… y1 y2) y0)))))))) x1);
symbol term5 (x0: El (fun num real)) (x1: El num) (x2: El (fun num real)) ≔ (∀ (λ y0 : El num, (⇒ (∀ (λ y1 : El num, (⇒ (∧ (<= x1 y1) (<= y1 y0)) (= (x0 y1) (x2 y1))))) (= ((@sum num) (… x1 y0) (λ y1 : El num, (x0 y1))) ((@sum num) (… x1 y0) x2)))));
