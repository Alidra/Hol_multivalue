require open hol-light.theory_hol;
require open hol-light.hol_types;
require open hol-light.hol_terms;
symbol lem8233240 [_144947 _144956 _144962 A B P] : Prf (∀ (λ << : El (fun A (fun _144947 bool)), (∀ (λ p : El (fun (fun A B) (fun P bool)), (∀ (λ s : El (fun P _144947), (∀ (λ h : El (fun (fun A B) (fun P (fun _144962 _144956))), (∀ (λ l : El (fun (fun A B) (fun P (list _144962))), (⇒ (∧ ((@admissible _144947 B A (list _144962) P) << p s l) ((@admissible _144947 B A _144956 (prod _144962 P)) << (λ f : El (fun A B), ((@GABS (fun (prod _144962 P) bool)) (λ f' : El (fun (prod _144962 P) bool), (∀ (λ y : El _144962, (∀ (λ x : El P, ((@GEQ bool) (f' ((@̦‚ _144962 P) y x)) (∧ (p f x) ((@MEM _144962) y (l f x))))))))))) ((@GABS (fun (prod _144962 P) _144947)) (λ f : El (fun (prod _144962 P) _144947), (∀ (λ y : El _144962, (∀ (λ x : El P, ((@GEQ _144947) (f ((@̦‚ _144962 P) y x)) (s x)))))))) (λ f : El (fun A B), ((@GABS (fun (prod _144962 P) _144956)) (λ f' : El (fun (prod _144962 P) _144956), (∀ (λ y : El _144962, (∀ (λ x : El P, ((@GEQ _144956) (f' ((@̦‚ _144962 P) y x)) (h f x y))))))))))) ((@admissible _144947 B A (list _144956) P) << p s (λ f : El (fun A B), (λ x : El P, ((@MAP _144962 _144956) (h f x) (l f x))))))))))))))));
