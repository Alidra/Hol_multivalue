require open hol-light.theory_hol;
require open hol-light.hol_types;
require open hol-light.hol_type_abbrevs;
require open hol-light.hol_terms;
symbol term0 (x0: El real) (x1: El real) (x2: El real) (x3: El real) (x4: El real) (x5: El real) (x6: El real) (x7: El num) (x8: El real) (x9: El real) (x10: El real) (x11: El num) ≔ (∧ (= (real_mul x1 x0) (real_mul x0 x1)) (∧ (= (real_mul x1 (real_mul x0 x2)) (real_mul (real_mul x1 x0) x2)) (∧ (= (real_mul x1 (real_mul x0 x2)) (real_mul x0 (real_mul x1 x2))) (∧ (= (real_add (real_add x4 x3) (real_add x5 x6)) (real_add (real_add x4 x5) (real_add x3 x6))) (∧ (= (real_add (real_add x4 x3) x5) (real_add x4 (real_add x3 x5))) (∧ (= (real_add x4 (real_add x5 x6)) (real_add x5 (real_add x4 x6))) (∧ (= (real_add (real_add x4 x3) x5) (real_add (real_add x4 x5) x3)) (∧ (= (real_add x4 x5) (real_add x5 x4)) (∧ (= (real_add x4 (real_add x5 x6)) (real_add (real_add x4 x5) x6)) (∧ (= (real_mul (real_pow x10 x7) (real_pow x10 x11)) (real_pow x10 (+ x7 x11))) (∧ (= (real_mul x10 (real_pow x10 x11)) (real_pow x10 (SUC x11))) (∧ (= (real_mul (real_pow x10 x11) x10) (real_pow x10 (SUC x11))) (∧ (= (real_mul x10 x10) (real_pow x10 (NUMERAL (BIT0 (BIT1 _0))))) (∧ (= (real_pow (real_mul x10 x8) x11) (real_mul (real_pow x10 x11) (real_pow x8 x11))) (∧ (= (real_pow (real_pow x10 x7) x11) (real_pow x10 (* x7 x11))) (∧ (= (real_pow x10 (NUMERAL _0)) (real_of_num (NUMERAL (BIT1 _0)))) (∧ (= (real_pow x10 (NUMERAL (BIT1 _0))) x10) (∧ (= (real_mul x10 (real_add x8 x9)) (real_add (real_mul x10 x8) (real_mul x10 x9))) (= (real_pow x10 (SUC x11)) (real_mul x10 (real_pow x10 x11)))))))))))))))))))));
