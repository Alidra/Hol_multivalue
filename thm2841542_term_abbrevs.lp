require open hol-light.theory_hol;
require open hol-light.hol_types;
require open hol-light.hol_type_abbrevs;
require open hol-light.hol_terms;
symbol term23 (x0: El int) (x1: El int) ≔ (∨ (int_lt x0 x1));
symbol term5 (x0: El int) ≔ (∀ (λ y0 : El int, (= (¬ (= x0 y0)) (∨ (int_lt x0 y0) (int_lt y0 x0)))));
symbol term19 (x0: El int) (x1: El int) ≔ (∧ (= (¬ (int_le x1 x0)) (int_le (int_add x0 (int_of_num (NUMERAL (BIT1 _0)))) x1)));
symbol term25 (x0: El int) (x1: El int) ≔ (∨ (int_le (int_add x1 (int_of_num (NUMERAL (BIT1 _0)))) x0) (int_le (int_add x0 (int_of_num (NUMERAL (BIT1 _0)))) x1));
symbol term13 (x0: El int) ≔ ((λ y0 : El int, (∀ (λ y1 : El int, (= (¬ (int_le y0 y1)) (int_lt y1 y0))))) x0);
symbol term9 (x0: El int) ≔ ((λ y0 : El int, (∀ (λ y1 : El int, (= (¬ (int_lt y0 y1)) (int_le y1 y0))))) x0);
symbol term4 (x0: El int) ≔ ((λ y0 : El int, (∀ (λ y1 : El int, (= (¬ (= y0 y1)) (∨ (int_lt y0 y1) (int_lt y1 y0)))))) x0);
symbol term0 (x0: El int) ≔ ((λ y0 : El int, (∀ (λ y1 : El int, (= (int_lt y0 y1) (int_le (int_add y0 (int_of_num (NUMERAL (BIT1 _0)))) y1))))) x0);
symbol term27 (x0: El int) (x1: El int) ≔ ((@= bool) (∨ (int_le (int_add x1 (int_of_num (NUMERAL (BIT1 _0)))) x0) (int_le (int_add x0 (int_of_num (NUMERAL (BIT1 _0)))) x1)));
symbol term20 (x0: El int) (x1: El int) ≔ ((@= bool) (¬ (int_lt x0 x1)));
symbol term29 (x0: El int) (x1: El int) ≔ ((@= bool) (int_lt x0 x1));
symbol term30 (x0: El int) (x1: El int) ≔ (∧ (= (¬ (= x0 x1)) (∨ (int_le (int_add x0 (int_of_num (NUMERAL (BIT1 _0)))) x1) (int_le (int_add x1 (int_of_num (NUMERAL (BIT1 _0)))) x0))) (= (int_lt x0 x1) (int_le (int_add x0 (int_of_num (NUMERAL (BIT1 _0)))) x1)));
symbol term16 (x0: El int) (x1: El int) ≔ (¬ (int_le x0 x1));
symbol term15 (x0: El int) (x1: El int) ≔ ((λ y0 : El int, (= (¬ (int_le x0 y0)) (int_lt y0 x0))) x1);
symbol term11 (x0: El int) (x1: El int) ≔ ((λ y0 : El int, (= (¬ (int_lt x0 y0)) (int_le y0 x0))) x1);
symbol term31 (x0: El int) (x1: El int) ≔ (∧ (= (¬ (int_lt x0 x1)) (int_le x1 x0)) (∧ (= (¬ (= x0 x1)) (∨ (int_le (int_add x0 (int_of_num (NUMERAL (BIT1 _0)))) x1) (int_le (int_add x1 (int_of_num (NUMERAL (BIT1 _0)))) x0))) (= (int_lt x0 x1) (int_le (int_add x0 (int_of_num (NUMERAL (BIT1 _0)))) x1))));
symbol term21 (x0: El int) (x1: El int) ≔ ((@= bool) (int_le x0 x1));
symbol term17 (x0: El int) (x1: El int) ≔ ((@= bool) (¬ (int_le x0 x1)));
symbol term6 (x0: El int) (x1: El int) ≔ ((λ y0 : El int, (= (¬ (= x0 y0)) (∨ (int_lt x0 y0) (int_lt y0 x0)))) x1);
symbol term3 (x0: El int) (x1: El int) ≔ (int_le (int_add x0 (int_of_num (NUMERAL (BIT1 _0)))) x1);
symbol term1 (x0: El int) ≔ (∀ (λ y0 : El int, (= (int_lt x0 y0) (int_le (int_add x0 (int_of_num (NUMERAL (BIT1 _0)))) y0))));
symbol term8 (x0: El int) (x1: El int) ≔ (∨ (int_lt x1 x0) (int_lt x0 x1));
symbol term32 (x0: El int) (x1: El int) ≔ (∧ (= (¬ (int_le x0 x1)) (int_le (int_add x1 (int_of_num (NUMERAL (BIT1 _0)))) x0)) (∧ (= (¬ (int_lt x0 x1)) (int_le x1 x0)) (∧ (= (¬ (= x0 x1)) (∨ (int_le (int_add x0 (int_of_num (NUMERAL (BIT1 _0)))) x1) (int_le (int_add x1 (int_of_num (NUMERAL (BIT1 _0)))) x0))) (= (int_lt x0 x1) (int_le (int_add x0 (int_of_num (NUMERAL (BIT1 _0)))) x1)))));
symbol term7 (x0: El int) (x1: El int) ≔ (¬ (= x0 x1));
symbol term14 (x0: El int) ≔ (∀ (λ y0 : El int, (= (¬ (int_le x0 y0)) (int_lt y0 x0))));
symbol term10 (x0: El int) ≔ (∀ (λ y0 : El int, (= (¬ (int_lt x0 y0)) (int_le y0 x0))));
symbol term22 (x0: El int) (x1: El int) ≔ (∧ (= (¬ (int_lt x1 x0)) (int_le x0 x1)));
symbol term2 (x0: El int) (x1: El int) ≔ ((λ y0 : El int, (= (int_lt x0 y0) (int_le (int_add x0 (int_of_num (NUMERAL (BIT1 _0)))) y0))) x1);
symbol term12 (x0: El int) (x1: El int) ≔ (¬ (int_lt x0 x1));
symbol term28 (x0: El int) (x1: El int) ≔ (∧ (= (¬ (= x1 x0)) (∨ (int_le (int_add x1 (int_of_num (NUMERAL (BIT1 _0)))) x0) (int_le (int_add x0 (int_of_num (NUMERAL (BIT1 _0)))) x1))));
symbol term26 (x0: El int) (x1: El int) ≔ ((@= bool) (¬ (= x0 x1)));
symbol term18 (x0: El int) (x1: El int) ≔ ((@= bool) (int_le (int_add x0 (int_of_num (NUMERAL (BIT1 _0)))) x1));
symbol term24 (x0: El int) (x1: El int) ≔ (∨ (int_le (int_add x0 (int_of_num (NUMERAL (BIT1 _0)))) x1));
