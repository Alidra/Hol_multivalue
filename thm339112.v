Require Import coq.
Require Import theory_hol.
Require Import hol_types.
Require Import hol_terms.
Require Import hol_axioms.
Require Import hol_type_abbrevs.
Require Import thm339112_term_abbrevs.
Require Import DISJ_ACI_spec.
Require Import thm0_spec.
Require Import thm10578_spec.
Require Import thm10597_spec.
Require Import thm16474_spec.
Require Import thm16506_spec.
Require Import thm16507_spec.
Require Import thm17045_spec.
Require Import thm17265_spec.
Require Import thm17362_spec.
Require Import thm17784_spec.
Require Import thm18392_spec.
Require Import thm18393_spec.
Require Import thm18394_spec.
Require Import thm18897_spec.
Require Import thm18898_spec.
Require Import thm18899_spec.
Require Import thm18904_spec.
Require Import thm18905_spec.
Require Import thm18910_spec.
Require Import thm18911_spec.
Require Import thm18922_spec.
Require Import thm18923_spec.
Require Import thm18928_spec.
Require Import thm18929_spec.
Require Import thm18940_spec.
Require Import thm18941_spec.
Require Import thm18952_spec.
Require Import thm18953_spec.
Require Import thm18958_spec.
Require Import thm18959_spec.
Require Import thm19006_spec.
Require Import thm19007_spec.
Require Import thm19012_spec.
Require Import thm19013_spec.
Require Import thm19018_spec.
Require Import thm19019_spec.
Require Import thm19024_spec.
Require Import thm19025_spec.
Require Import thm19490_spec.
Require Import thm19699_spec.
Require Import thm20661_spec.
Require Import thm20662_spec.
Require Import thm20664_spec.
Require Import thm20665_spec.
Require Import thm20668_spec.
Require Import thm20682_spec.
Require Import thm20764_spec.
Require Import thm20780_spec.
Require Import thm20789_spec.
Require Import thm20895_spec.
Require Import thm20904_spec.
Require Import thm21007_spec.
Require Import thm21021_spec.
Require Import thm21028_spec.
Require Import thm21107_spec.
Require Import thm21114_spec.
Require Import thm21182_spec.
Require Import thm21386_spec.
Require Import thm322846_spec.
Require Import thm322856_spec.
Require Import thm322857_spec.
Require Import thm69_spec.
Lemma lem322940 {A : Type'} (lt2 : type1402 A) (h1 : term0 A lt2) : term0 A lt2.
Proof. exact (h1). Qed.
Lemma lem322941 {A B : Type'} (lt2 : type1402 A) (S' : type1413 A B) (H : type549 A B) (h1 : term1 A B lt2 S' H) : term1 A B lt2 S' H.
Proof. exact (h1). Qed.
Lemma lem322942 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (R : type1413 A B) (h1 : term2 A B H lt2 R) : term2 A B H lt2 R.
Proof. exact (h1). Qed.
Lemma lem322943 {A B : Type'} (lt2 : type1402 A) (R : type1413 A B) (H : type549 A B) (h1 : term3 A B lt2 R H) : term3 A B lt2 R H.
Proof. exact (h1). Qed.
Lemma lem322944 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (R : type1413 A B) (h1 : term4 A B H lt2 R) : term4 A B H lt2 R.
Proof. exact (h1). Qed.
Lemma lem322945 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (R : type1413 A B) (h1 : term5 A B lt2 H R) : term5 A B lt2 H R.
Proof. exact (h1). Qed.
Lemma lem322946 {A B : Type'} (R : type1413 A B) (h1 : term6 A B R) : term6 A B R.
Proof. exact (h1). Qed.
Lemma lem322958 (p : Prop) : p = (term7 p).
Proof. exact (EQ_MP (@lem10578 p) (@lem10597 p)). Qed.
Lemma lem322959 {A B : Type'} (H : type549 A B) : (term8 A B H) = (term9 A B H).
Proof. exact (@lem322958 (term8 A B H)). Qed.
Lemma lem322960 {A B : Type'} (H : type549 A B) : (term9 A B H) = (term8 A B H).
Proof. exact (SYM (@lem322959 A B H)). Qed.
Lemma lem322961 {A B : Type'} (H : type549 A B) (h1 : term10 A B H) : term10 A B H.
Proof. exact (h1). Qed.
Lemma lem322964 {A B : Type'} (S' : type1413 A B) (lt2 : type1402 A) (H : type549 A B) (R : type1413 A B) (h1 : term11 A B S' lt2 H R) : term11 A B S' lt2 H R.
Proof. exact (h1). Qed.
Lemma lem322965 {A B : Type'} (S' : type1413 A B) (lt2 : type1402 A) (H : type549 A B) (R : type1413 A B) : term12 A B S' lt2 H R.
Proof. exact (fun h0 : term11 A B S' lt2 H R => @lem322964 A B S' lt2 H R h0). Qed.
Lemma lem322966 {A B : Type'} (S' : type1413 A B) (lt2 : type1402 A) (H : type549 A B) (R : type1413 A B) (h1 : term12 A B S' lt2 H R) : term12 A B S' lt2 H R.
Proof. exact (h1). Qed.
Lemma lem322967 {A B : Type'} (S' : type1413 A B) (lt2 : type1402 A) (H : type549 A B) (R : type1413 A B) (h1 : term11 A B S' lt2 H R) : term11 A B S' lt2 H R.
Proof. exact (h1). Qed.
Lemma lem322968 {A B : Type'} (S' : type1413 A B) (lt2 : type1402 A) (H : type549 A B) (R : type1413 A B) (h1 : term11 A B S' lt2 H R) (h2 : term12 A B S' lt2 H R) : term11 A B S' lt2 H R.
Proof. exact (@lem322966 A B S' lt2 H R h2 (@lem322967 A B S' lt2 H R h1)). Qed.
Lemma lem322969 {A B : Type'} (S' : type1413 A B) (lt2 : type1402 A) (H : type549 A B) (R : type1413 A B) (h1 : term11 A B S' lt2 H R) : term13 A B S' lt2 H R.
Proof. exact (fun h0 : term12 A B S' lt2 H R => @lem322968 A B S' lt2 H R h1 h0). Qed.
Lemma lem322970 {A B : Type'} (S' : type1413 A B) (lt2 : type1402 A) (H : type549 A B) (R : type1413 A B) (h1 : term12 A B S' lt2 H R) : term12 A B S' lt2 H R.
Proof. exact (h1). Qed.
Lemma lem322971 {A B : Type'} (S' : type1413 A B) (lt2 : type1402 A) (H : type549 A B) (R : type1413 A B) (h1 : term11 A B S' lt2 H R) (h2 : term12 A B S' lt2 H R) : term11 A B S' lt2 H R.
Proof. exact (@lem322969 A B S' lt2 H R h1 (@lem322970 A B S' lt2 H R h2)). Qed.
Lemma lem322972 {A B : Type'} (S' : type1413 A B) (lt2 : type1402 A) (H : type549 A B) (R : type1413 A B) (h1 : term12 A B S' lt2 H R) : term12 A B S' lt2 H R.
Proof. exact (fun h0 : term11 A B S' lt2 H R => @lem322971 A B S' lt2 H R h0 h1). Qed.
Lemma lem322973 {A B : Type'} (S' : type1413 A B) (lt2 : type1402 A) (H : type549 A B) (R : type1413 A B) : term14 A B S' lt2 H R.
Proof. exact (fun h0 : term12 A B S' lt2 H R => @lem322972 A B S' lt2 H R h0). Qed.
Lemma lem322976 {A B : Type'} (S' : type1413 A B) (lt2 : type1402 A) (H : type549 A B) (R : type1413 A B) : term12 A B S' lt2 H R.
Proof. exact (@lem322973 A B S' lt2 H R (@lem322965 A B S' lt2 H R)). Qed.
Lemma lem322977 {A B : Type'} (S' : type1413 A B) (lt2 : type1402 A) (H : type549 A B) (R : type1413 A B) : term12 A B S' lt2 H R.
Proof. exact (@lem322976 A B S' lt2 H R). Qed.
Lemma lem323173 (t : Prop) : (t -> False) = (~ t).
Proof. exact (proj2 (@lem16474 t)). Qed.
Lemma lem323174 {A B : Type'} (R : type1413 A B) : (term15 A B R) = (term16 A B R).
Proof. exact (@lem323173 (term6 A B R)). Qed.
Lemma lem323179 {A B : Type'} (H : type549 A B) : (term17 A B H) = (term17 A B H).
Proof. exact (eq_refl (term17 A B H)). Qed.
Lemma lem323180 {A B : Type'} (H : type549 A B) (R : type1413 A B) : (term18 A B H R) = (term19 A B H R).
Proof. exact (MK_COMB (@lem323179 A B H) (@lem323174 A B R)). Qed.
Lemma lem323183 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (R : type1413 A B) : (term20 A B H lt2 R) = (term20 A B H lt2 R).
Proof. exact (eq_refl (term20 A B H lt2 R)). Qed.
Lemma lem323184 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (R : type1413 A B) : (term21 A B lt2 H R) = (term22 A B lt2 H R).
Proof. exact (MK_COMB (@lem323183 A B H lt2 R) (@lem323180 A B H R)). Qed.
Lemma lem323187 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (R : type1413 A B) : (term23 A B lt2 H R) = (term23 A B lt2 H R).
Proof. exact (eq_refl (term23 A B lt2 H R)). Qed.
Lemma lem323188 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (R : type1413 A B) : (term24 A B lt2 H R) = (term25 A B lt2 H R).
Proof. exact (MK_COMB (@lem323187 A B lt2 H R) (@lem323184 A B lt2 H R)). Qed.
Lemma lem323191 {A B : Type'} (lt2 : type1402 A) (R : type1413 A B) (H : type549 A B) : (term26 A B lt2 R H) = (term26 A B lt2 R H).
Proof. exact (eq_refl (term26 A B lt2 R H)). Qed.
Lemma lem323192 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (R : type1413 A B) : (term27 A B lt2 H R) = (term28 A B lt2 H R).
Proof. exact (MK_COMB (@lem323191 A B lt2 R H) (@lem323188 A B lt2 H R)). Qed.
Lemma lem323195 {A B : Type'} (lt2 : type1402 A) (S' : type1413 A B) (H : type549 A B) : (term29 A B lt2 S' H) = (term29 A B lt2 S' H).
Proof. exact (eq_refl (term29 A B lt2 S' H)). Qed.
Lemma lem323196 {A B : Type'} (S' : type1413 A B) (lt2 : type1402 A) (H : type549 A B) (R : type1413 A B) : (term30 A B S' lt2 H R) = (term31 A B S' lt2 H R).
Proof. exact (MK_COMB (@lem323195 A B lt2 S' H) (@lem323192 A B lt2 H R)). Qed.
Lemma lem323199 {A : Type'} (lt2 : type1402 A) : (term32 A lt2) = (term32 A lt2).
Proof. exact (eq_refl (term32 A lt2)). Qed.
Lemma lem323200 {A B : Type'} (S' : type1413 A B) (lt2 : type1402 A) (H : type549 A B) (R : type1413 A B) : (term11 A B S' lt2 H R) = (term33 A B S' lt2 H R).
Proof. exact (MK_COMB (@lem323199 A lt2) (@lem323196 A B S' lt2 H R)). Qed.
Lemma lem323203 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (R : type1413 A B) : (term34 A B lt2 H R) = (term35 A B lt2 H R).
Proof. exact (fun_ext (fun S' : type1413 A B => @lem323200 A B S' lt2 H R)). Qed.
Lemma lem323204 {A B : Type'} : (@all (A -> B -> Prop)) = (@all (A -> B -> Prop)).
Proof. exact (eq_refl (@all (A -> B -> Prop))). Qed.
Lemma lem323205 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (R : type1413 A B) : (term36 A B lt2 H R) = (term37 A B lt2 H R).
Proof. exact (MK_COMB (@lem323204 A B) (@lem323203 A B lt2 H R)). Qed.
Lemma lem323210 {A B : Type'} (H : type549 A B) (R : type1413 A B) : (term38 A B H R) = (term39 A B H R).
Proof. exact (fun_ext (fun lt2 : type1402 A => @lem323205 A B lt2 H R)). Qed.
Lemma lem323211 {A : Type'} : (@all (A -> A -> Prop)) = (@all (A -> A -> Prop)).
Proof. exact (eq_refl (@all (A -> A -> Prop))). Qed.
Lemma lem323212 {A B : Type'} (H : type549 A B) (R : type1413 A B) : (term40 A B H R) = (term41 A B H R).
Proof. exact (MK_COMB (@lem323211 A) (@lem323210 A B H R)). Qed.
Lemma lem323217 {A B : Type'} (R : type1413 A B) : (term42 A B R) = (term43 A B R).
Proof. exact (fun_ext (fun H : type549 A B => @lem323212 A B H R)). Qed.
Lemma lem323218 {A B : Type'} : (@all ((A -> B) -> A -> B)) = (@all ((A -> B) -> A -> B)).
Proof. exact (eq_refl (@all ((A -> B) -> A -> B))). Qed.
Lemma lem323219 {A B : Type'} (R : type1413 A B) : (term44 A B R) = (term45 A B R).
Proof. exact (MK_COMB (@lem323218 A B) (@lem323217 A B R)). Qed.
Lemma lem323224 {A B : Type'} : (term46 A B) = (term47 A B).
Proof. exact (fun_ext (fun R : type1413 A B => @lem323219 A B R)). Qed.
Lemma lem323225 {A B : Type'} : (@all (A -> B -> Prop)) = (@all (A -> B -> Prop)).
Proof. exact (eq_refl (@all (A -> B -> Prop))). Qed.
Lemma lem323234 {A B : Type'} : (term48 A B) = (term49 A B).
Proof. exact (MK_COMB (@lem323225 A B) (@lem323224 A B)). Qed.
Lemma lem323235 {A B : Type'} (R : type1413 A B) (x : A) (y : B) : (R x y) = (R x y).
Proof. exact (eq_refl (R x y)). Qed.
Lemma lem323236 {A B : Type'} (R : type1413 A B) (x : A) : (term50 A B R x) = (term50 A B R x).
Proof. exact (fun_ext (fun y : B => @lem323235 A B R x y)). Qed.
Lemma lem323237 {B : Type'} : (@ex1 B) = (@ex1 B).
Proof. exact (eq_refl (@ex1 B)). Qed.
Lemma lem323238 {A B : Type'} (R : type1413 A B) (x : A) : (term51 A B R x) = (term51 A B R x).
Proof. exact (MK_COMB (@lem323237 B) (@lem323236 A B R x)). Qed.
Lemma lem323239 {A B : Type'} (R : type1413 A B) : (term52 A B R) = (term52 A B R).
Proof. exact (fun_ext (fun x : A => @lem323238 A B R x)). Qed.
Lemma lem323240 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem323241 {A B : Type'} (R : type1413 A B) : (term6 A B R) = (term6 A B R).
Proof. exact (MK_COMB (@lem323240 A) (@lem323239 A B R)). Qed.
Lemma lem323242 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem323243 {A B : Type'} (R : type1413 A B) : (term16 A B R) = (term16 A B R).
Proof. exact (MK_COMB (@lem323242) (@lem323241 A B R)). Qed.
Lemma lem323244 {A B : Type'} (H : type549 A B) (f : A -> B) (x : A) : ((f x) = (H f x)) = ((f x) = (H f x)).
Proof. exact (eq_refl ((f x) = (H f x))). Qed.
Lemma lem323245 {A B : Type'} (H : type549 A B) (f : A -> B) : (term53 A B H f) = (term53 A B H f).
Proof. exact (fun_ext (fun x : A => @lem323244 A B H f x)). Qed.
Lemma lem323246 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem323247 {A B : Type'} (H : type549 A B) (f : A -> B) : (term54 A B H f) = (term54 A B H f).
Proof. exact (MK_COMB (@lem323246 A) (@lem323245 A B H f)). Qed.
Lemma lem323248 {A B : Type'} (H : type549 A B) : (term55 A B H) = (term55 A B H).
Proof. exact (fun_ext (fun f : A -> B => @lem323247 A B H f)). Qed.
Lemma lem323249 {A B : Type'} : (@ex (A -> B)) = (@ex (A -> B)).
Proof. exact (eq_refl (@ex (A -> B))). Qed.
Lemma lem323250 {A B : Type'} (H : type549 A B) : (term8 A B H) = (term8 A B H).
Proof. exact (MK_COMB (@lem323249 A B) (@lem323248 A B H)). Qed.
Lemma lem323251 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem323252 {A B : Type'} (H : type549 A B) : (term10 A B H) = (term10 A B H).
Proof. exact (MK_COMB (@lem323251) (@lem323250 A B H)). Qed.
Lemma lem323253 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem323254 {A B : Type'} (H : type549 A B) : (term17 A B H) = (term17 A B H).
Proof. exact (MK_COMB (@lem323253) (@lem323252 A B H)). Qed.
Lemma lem323255 {A B : Type'} (H : type549 A B) (R : type1413 A B) : (term19 A B H R) = (term19 A B H R).
Proof. exact (MK_COMB (@lem323254 A B H) (@lem323243 A B R)). Qed.
Lemma lem323260 {A B : Type'} (lt2 : type1402 A) (a0 : A) (R : type1413 A B) (f : A -> B) (z : A) : (term56 A B lt2 a0 R f z) = (term56 A B lt2 a0 R f z).
Proof. exact (eq_refl (term56 A B lt2 a0 R f z)). Qed.
Lemma lem323261 {A B : Type'} (lt2 : type1402 A) (a0 : A) (R : type1413 A B) (f : A -> B) : (term57 A B lt2 a0 R f) = (term57 A B lt2 a0 R f).
Proof. exact (fun_ext (fun z : A => @lem323260 A B lt2 a0 R f z)). Qed.
Lemma lem323262 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem323263 {A B : Type'} (lt2 : type1402 A) (a0 : A) (R : type1413 A B) (f : A -> B) : (term58 A B lt2 a0 R f) = (term58 A B lt2 a0 R f).
Proof. exact (MK_COMB (@lem323262 A) (@lem323261 A B lt2 a0 R f)). Qed.
Lemma lem323266 {A B : Type'} (a1 : B) (H : type549 A B) (f : A -> B) (a0 : A) : (term59 A B a1 H f a0) = (term59 A B a1 H f a0).
Proof. exact (eq_refl (term59 A B a1 H f a0)). Qed.
Lemma lem323267 {A B : Type'} (a1 : B) (H : type549 A B) (lt2 : type1402 A) (a0 : A) (R : type1413 A B) (f : A -> B) : (term60 A B a1 H lt2 a0 R f) = (term60 A B a1 H lt2 a0 R f).
Proof. exact (MK_COMB (@lem323266 A B a1 H f a0) (@lem323263 A B lt2 a0 R f)). Qed.
Lemma lem323268 {A B : Type'} (a1 : B) (H : type549 A B) (lt2 : type1402 A) (a0 : A) (R : type1413 A B) : (term61 A B a1 H lt2 a0 R) = (term61 A B a1 H lt2 a0 R).
Proof. exact (fun_ext (fun f : A -> B => @lem323267 A B a1 H lt2 a0 R f)). Qed.
Lemma lem323269 {A B : Type'} : (@ex (A -> B)) = (@ex (A -> B)).
Proof. exact (eq_refl (@ex (A -> B))). Qed.
Lemma lem323270 {A B : Type'} (a1 : B) (H : type549 A B) (lt2 : type1402 A) (a0 : A) (R : type1413 A B) : (term62 A B a1 H lt2 a0 R) = (term62 A B a1 H lt2 a0 R).
Proof. exact (MK_COMB (@lem323269 A B) (@lem323268 A B a1 H lt2 a0 R)). Qed.
Lemma lem323273 {A B : Type'} (R : type1413 A B) (a0 : A) (a1 : B) : (term63 A B R a0 a1) = (term63 A B R a0 a1).
Proof. exact (eq_refl (term63 A B R a0 a1)). Qed.
Lemma lem323274 {A B : Type'} (a1 : B) (H : type549 A B) (lt2 : type1402 A) (a0 : A) (R : type1413 A B) : ((R a0 a1) = (term62 A B a1 H lt2 a0 R)) = ((R a0 a1) = (term62 A B a1 H lt2 a0 R)).
Proof. exact (MK_COMB (@lem323273 A B R a0 a1) (@lem323270 A B a1 H lt2 a0 R)). Qed.
Lemma lem323275 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (a0 : A) (R : type1413 A B) : (term64 A B H lt2 a0 R) = (term64 A B H lt2 a0 R).
Proof. exact (fun_ext (fun a1 : B => @lem323274 A B a1 H lt2 a0 R)). Qed.
Lemma lem323276 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem323277 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (a0 : A) (R : type1413 A B) : (term65 A B H lt2 a0 R) = (term65 A B H lt2 a0 R).
Proof. exact (MK_COMB (@lem323276 B) (@lem323275 A B H lt2 a0 R)). Qed.
Lemma lem323278 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (R : type1413 A B) : (term66 A B H lt2 R) = (term66 A B H lt2 R).
Proof. exact (fun_ext (fun a0 : A => @lem323277 A B H lt2 a0 R)). Qed.
Lemma lem323279 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem323280 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (R : type1413 A B) : (term4 A B H lt2 R) = (term4 A B H lt2 R).
Proof. exact (MK_COMB (@lem323279 A) (@lem323278 A B H lt2 R)). Qed.
Lemma lem323281 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem323282 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (R : type1413 A B) : (term20 A B H lt2 R) = (term20 A B H lt2 R).
Proof. exact (MK_COMB (@lem323281) (@lem323280 A B H lt2 R)). Qed.
Lemma lem323283 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (R : type1413 A B) : (term22 A B lt2 H R) = (term22 A B lt2 H R).
Proof. exact (MK_COMB (@lem323282 A B H lt2 R) (@lem323255 A B H R)). Qed.
Lemma lem323288 {A B : Type'} (R : type1413 A B) (R' : type1413 A B) (a0 : A) (a1 : B) : (term67 A B R R' a0 a1) = (term67 A B R R' a0 a1).
Proof. exact (eq_refl (term67 A B R R' a0 a1)). Qed.
Lemma lem323289 {A B : Type'} (R : type1413 A B) (R' : type1413 A B) (a0 : A) : (term68 A B R R' a0) = (term68 A B R R' a0).
Proof. exact (fun_ext (fun a1 : B => @lem323288 A B R R' a0 a1)). Qed.
Lemma lem323290 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem323291 {A B : Type'} (R : type1413 A B) (R' : type1413 A B) (a0 : A) : (term69 A B R R' a0) = (term69 A B R R' a0).
Proof. exact (MK_COMB (@lem323290 B) (@lem323289 A B R R' a0)). Qed.
Lemma lem323292 {A B : Type'} (R : type1413 A B) (R' : type1413 A B) : (term70 A B R R') = (term70 A B R R').
Proof. exact (fun_ext (fun a0 : A => @lem323291 A B R R' a0)). Qed.
Lemma lem323293 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem323294 {A B : Type'} (R : type1413 A B) (R' : type1413 A B) : (term71 A B R R') = (term71 A B R R').
Proof. exact (MK_COMB (@lem323293 A) (@lem323292 A B R R')). Qed.
Lemma lem323295 {A B : Type'} (R' : type1413 A B) (H : type549 A B) (f : A -> B) (x : A) : (term72 A B R' H f x) = (term72 A B R' H f x).
Proof. exact (eq_refl (term72 A B R' H f x)). Qed.
Lemma lem323300 {A B : Type'} (lt2 : type1402 A) (x : A) (R' : type1413 A B) (f : A -> B) (z : A) : (term56 A B lt2 x R' f z) = (term56 A B lt2 x R' f z).
Proof. exact (eq_refl (term56 A B lt2 x R' f z)). Qed.
Lemma lem323301 {A B : Type'} (lt2 : type1402 A) (x : A) (R' : type1413 A B) (f : A -> B) : (term57 A B lt2 x R' f) = (term57 A B lt2 x R' f).
Proof. exact (fun_ext (fun z : A => @lem323300 A B lt2 x R' f z)). Qed.
Lemma lem323302 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem323303 {A B : Type'} (lt2 : type1402 A) (x : A) (R' : type1413 A B) (f : A -> B) : (term58 A B lt2 x R' f) = (term58 A B lt2 x R' f).
Proof. exact (MK_COMB (@lem323302 A) (@lem323301 A B lt2 x R' f)). Qed.
Lemma lem323304 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem323305 {A B : Type'} (lt2 : type1402 A) (x : A) (R' : type1413 A B) (f : A -> B) : (term73 A B lt2 x R' f) = (term73 A B lt2 x R' f).
Proof. exact (MK_COMB (@lem323304) (@lem323303 A B lt2 x R' f)). Qed.
Lemma lem323306 {A B : Type'} (lt2 : type1402 A) (R' : type1413 A B) (H : type549 A B) (f : A -> B) (x : A) : (term74 A B lt2 R' H f x) = (term74 A B lt2 R' H f x).
Proof. exact (MK_COMB (@lem323305 A B lt2 x R' f) (@lem323295 A B R' H f x)). Qed.
Lemma lem323307 {A B : Type'} (lt2 : type1402 A) (R' : type1413 A B) (H : type549 A B) (f : A -> B) : (term75 A B lt2 R' H f) = (term75 A B lt2 R' H f).
Proof. exact (fun_ext (fun x : A => @lem323306 A B lt2 R' H f x)). Qed.
Lemma lem323308 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem323309 {A B : Type'} (lt2 : type1402 A) (R' : type1413 A B) (H : type549 A B) (f : A -> B) : (term76 A B lt2 R' H f) = (term76 A B lt2 R' H f).
Proof. exact (MK_COMB (@lem323308 A) (@lem323307 A B lt2 R' H f)). Qed.
Lemma lem323310 {A B : Type'} (lt2 : type1402 A) (R' : type1413 A B) (H : type549 A B) : (term77 A B lt2 R' H) = (term77 A B lt2 R' H).
Proof. exact (fun_ext (fun f : A -> B => @lem323309 A B lt2 R' H f)). Qed.
Lemma lem323311 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem323312 {A B : Type'} (lt2 : type1402 A) (R' : type1413 A B) (H : type549 A B) : (term3 A B lt2 R' H) = (term3 A B lt2 R' H).
Proof. exact (MK_COMB (@lem323311 A B) (@lem323310 A B lt2 R' H)). Qed.
Lemma lem323313 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem323314 {A B : Type'} (lt2 : type1402 A) (R' : type1413 A B) (H : type549 A B) : (term26 A B lt2 R' H) = (term26 A B lt2 R' H).
Proof. exact (MK_COMB (@lem323313) (@lem323312 A B lt2 R' H)). Qed.
Lemma lem323315 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (R : type1413 A B) (R' : type1413 A B) : (term78 A B lt2 H R R') = (term78 A B lt2 H R R').
Proof. exact (MK_COMB (@lem323314 A B lt2 R' H) (@lem323294 A B R R')). Qed.
Lemma lem323316 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (R : type1413 A B) : (term79 A B lt2 H R) = (term79 A B lt2 H R).
Proof. exact (fun_ext (fun R' : type1413 A B => @lem323315 A B lt2 H R R')). Qed.
Lemma lem323317 {A B : Type'} : (@all (A -> B -> Prop)) = (@all (A -> B -> Prop)).
Proof. exact (eq_refl (@all (A -> B -> Prop))). Qed.
Lemma lem323318 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (R : type1413 A B) : (term5 A B lt2 H R) = (term5 A B lt2 H R).
Proof. exact (MK_COMB (@lem323317 A B) (@lem323316 A B lt2 H R)). Qed.
Lemma lem323319 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem323320 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (R : type1413 A B) : (term23 A B lt2 H R) = (term23 A B lt2 H R).
Proof. exact (MK_COMB (@lem323319) (@lem323318 A B lt2 H R)). Qed.
Lemma lem323321 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (R : type1413 A B) : (term25 A B lt2 H R) = (term25 A B lt2 H R).
Proof. exact (MK_COMB (@lem323320 A B lt2 H R) (@lem323283 A B lt2 H R)). Qed.
Lemma lem323322 {A B : Type'} (R : type1413 A B) (H : type549 A B) (f : A -> B) (x : A) : (term72 A B R H f x) = (term72 A B R H f x).
Proof. exact (eq_refl (term72 A B R H f x)). Qed.
Lemma lem323327 {A B : Type'} (lt2 : type1402 A) (x : A) (R : type1413 A B) (f : A -> B) (z : A) : (term56 A B lt2 x R f z) = (term56 A B lt2 x R f z).
Proof. exact (eq_refl (term56 A B lt2 x R f z)). Qed.
Lemma lem323328 {A B : Type'} (lt2 : type1402 A) (x : A) (R : type1413 A B) (f : A -> B) : (term57 A B lt2 x R f) = (term57 A B lt2 x R f).
Proof. exact (fun_ext (fun z : A => @lem323327 A B lt2 x R f z)). Qed.
Lemma lem323329 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem323330 {A B : Type'} (lt2 : type1402 A) (x : A) (R : type1413 A B) (f : A -> B) : (term58 A B lt2 x R f) = (term58 A B lt2 x R f).
Proof. exact (MK_COMB (@lem323329 A) (@lem323328 A B lt2 x R f)). Qed.
Lemma lem323331 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem323332 {A B : Type'} (lt2 : type1402 A) (x : A) (R : type1413 A B) (f : A -> B) : (term73 A B lt2 x R f) = (term73 A B lt2 x R f).
Proof. exact (MK_COMB (@lem323331) (@lem323330 A B lt2 x R f)). Qed.
Lemma lem323333 {A B : Type'} (lt2 : type1402 A) (R : type1413 A B) (H : type549 A B) (f : A -> B) (x : A) : (term74 A B lt2 R H f x) = (term74 A B lt2 R H f x).
Proof. exact (MK_COMB (@lem323332 A B lt2 x R f) (@lem323322 A B R H f x)). Qed.
Lemma lem323334 {A B : Type'} (lt2 : type1402 A) (R : type1413 A B) (H : type549 A B) (f : A -> B) : (term75 A B lt2 R H f) = (term75 A B lt2 R H f).
Proof. exact (fun_ext (fun x : A => @lem323333 A B lt2 R H f x)). Qed.
Lemma lem323335 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem323336 {A B : Type'} (lt2 : type1402 A) (R : type1413 A B) (H : type549 A B) (f : A -> B) : (term76 A B lt2 R H f) = (term76 A B lt2 R H f).
Proof. exact (MK_COMB (@lem323335 A) (@lem323334 A B lt2 R H f)). Qed.
Lemma lem323337 {A B : Type'} (lt2 : type1402 A) (R : type1413 A B) (H : type549 A B) : (term77 A B lt2 R H) = (term77 A B lt2 R H).
Proof. exact (fun_ext (fun f : A -> B => @lem323336 A B lt2 R H f)). Qed.
Lemma lem323338 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem323339 {A B : Type'} (lt2 : type1402 A) (R : type1413 A B) (H : type549 A B) : (term3 A B lt2 R H) = (term3 A B lt2 R H).
Proof. exact (MK_COMB (@lem323338 A B) (@lem323337 A B lt2 R H)). Qed.
Lemma lem323340 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem323341 {A B : Type'} (lt2 : type1402 A) (R : type1413 A B) (H : type549 A B) : (term26 A B lt2 R H) = (term26 A B lt2 R H).
Proof. exact (MK_COMB (@lem323340) (@lem323339 A B lt2 R H)). Qed.
Lemma lem323342 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (R : type1413 A B) : (term28 A B lt2 H R) = (term28 A B lt2 H R).
Proof. exact (MK_COMB (@lem323341 A B lt2 R H) (@lem323321 A B lt2 H R)). Qed.
Lemma lem323347 {A B : Type'} (g : A -> B) (S' : type1413 A B) (H : type549 A B) (f : A -> B) (x : A) : (term80 A B g S' H f x) = (term80 A B g S' H f x).
Proof. exact (eq_refl (term80 A B g S' H f x)). Qed.
Lemma lem323356 {A B : Type'} (lt2 : type1402 A) (x : A) (g : A -> B) (S' : type1413 A B) (f : A -> B) (z : A) : (term81 A B lt2 x g S' f z) = (term81 A B lt2 x g S' f z).
Proof. exact (eq_refl (term81 A B lt2 x g S' f z)). Qed.
Lemma lem323357 {A B : Type'} (lt2 : type1402 A) (x : A) (g : A -> B) (S' : type1413 A B) (f : A -> B) : (term82 A B lt2 x g S' f) = (term82 A B lt2 x g S' f).
Proof. exact (fun_ext (fun z : A => @lem323356 A B lt2 x g S' f z)). Qed.
Lemma lem323358 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem323359 {A B : Type'} (lt2 : type1402 A) (x : A) (g : A -> B) (S' : type1413 A B) (f : A -> B) : (term83 A B lt2 x g S' f) = (term83 A B lt2 x g S' f).
Proof. exact (MK_COMB (@lem323358 A) (@lem323357 A B lt2 x g S' f)). Qed.
Lemma lem323360 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem323361 {A B : Type'} (lt2 : type1402 A) (x : A) (g : A -> B) (S' : type1413 A B) (f : A -> B) : (term84 A B lt2 x g S' f) = (term84 A B lt2 x g S' f).
Proof. exact (MK_COMB (@lem323360) (@lem323359 A B lt2 x g S' f)). Qed.
Lemma lem323362 {A B : Type'} (lt2 : type1402 A) (g : A -> B) (S' : type1413 A B) (H : type549 A B) (f : A -> B) (x : A) : (term85 A B lt2 g S' H f x) = (term85 A B lt2 g S' H f x).
Proof. exact (MK_COMB (@lem323361 A B lt2 x g S' f) (@lem323347 A B g S' H f x)). Qed.
Lemma lem323363 {A B : Type'} (lt2 : type1402 A) (g : A -> B) (S' : type1413 A B) (H : type549 A B) (f : A -> B) : (term86 A B lt2 g S' H f) = (term86 A B lt2 g S' H f).
Proof. exact (fun_ext (fun x : A => @lem323362 A B lt2 g S' H f x)). Qed.
Lemma lem323364 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem323365 {A B : Type'} (lt2 : type1402 A) (g : A -> B) (S' : type1413 A B) (H : type549 A B) (f : A -> B) : (term87 A B lt2 g S' H f) = (term87 A B lt2 g S' H f).
Proof. exact (MK_COMB (@lem323364 A) (@lem323363 A B lt2 g S' H f)). Qed.
Lemma lem323366 {A B : Type'} (lt2 : type1402 A) (S' : type1413 A B) (H : type549 A B) (f : A -> B) : (term88 A B lt2 S' H f) = (term88 A B lt2 S' H f).
Proof. exact (fun_ext (fun g : A -> B => @lem323365 A B lt2 g S' H f)). Qed.
Lemma lem323367 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem323368 {A B : Type'} (lt2 : type1402 A) (S' : type1413 A B) (H : type549 A B) (f : A -> B) : (term89 A B lt2 S' H f) = (term89 A B lt2 S' H f).
Proof. exact (MK_COMB (@lem323367 A B) (@lem323366 A B lt2 S' H f)). Qed.
Lemma lem323369 {A B : Type'} (lt2 : type1402 A) (S' : type1413 A B) (H : type549 A B) : (term90 A B lt2 S' H) = (term90 A B lt2 S' H).
Proof. exact (fun_ext (fun f : A -> B => @lem323368 A B lt2 S' H f)). Qed.
Lemma lem323370 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem323371 {A B : Type'} (lt2 : type1402 A) (S' : type1413 A B) (H : type549 A B) : (term1 A B lt2 S' H) = (term1 A B lt2 S' H).
Proof. exact (MK_COMB (@lem323370 A B) (@lem323369 A B lt2 S' H)). Qed.
Lemma lem323372 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem323373 {A B : Type'} (lt2 : type1402 A) (S' : type1413 A B) (H : type549 A B) : (term29 A B lt2 S' H) = (term29 A B lt2 S' H).
Proof. exact (MK_COMB (@lem323372) (@lem323371 A B lt2 S' H)). Qed.
Lemma lem323374 {A B : Type'} (S' : type1413 A B) (lt2 : type1402 A) (H : type549 A B) (R : type1413 A B) : (term31 A B S' lt2 H R) = (term31 A B S' lt2 H R).
Proof. exact (MK_COMB (@lem323373 A B lt2 S' H) (@lem323342 A B lt2 H R)). Qed.
Lemma lem323375 {A : Type'} (P : A -> Prop) (x : A) : (P x) = (P x).
Proof. exact (eq_refl (P x)). Qed.
Lemma lem323376 {A : Type'} (P : A -> Prop) : (term91 A P) = (term91 A P).
Proof. exact (fun_ext (fun x : A => @lem323375 A P x)). Qed.
Lemma lem323377 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem323378 {A : Type'} (P : A -> Prop) : (term92 A P) = (term92 A P).
Proof. exact (MK_COMB (@lem323377 A) (@lem323376 A P)). Qed.
Lemma lem323379 {A : Type'} (P : A -> Prop) (x : A) : (P x) = (P x).
Proof. exact (eq_refl (P x)). Qed.
Lemma lem323384 {A : Type'} (lt2 : type1402 A) (x : A) (P : A -> Prop) (y : A) : (term93 A lt2 x P y) = (term93 A lt2 x P y).
Proof. exact (eq_refl (term93 A lt2 x P y)). Qed.
Lemma lem323385 {A : Type'} (lt2 : type1402 A) (x : A) (P : A -> Prop) : (term94 A lt2 x P) = (term94 A lt2 x P).
Proof. exact (fun_ext (fun y : A => @lem323384 A lt2 x P y)). Qed.
Lemma lem323386 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem323387 {A : Type'} (lt2 : type1402 A) (x : A) (P : A -> Prop) : (term95 A lt2 x P) = (term95 A lt2 x P).
Proof. exact (MK_COMB (@lem323386 A) (@lem323385 A lt2 x P)). Qed.
Lemma lem323388 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem323389 {A : Type'} (lt2 : type1402 A) (x : A) (P : A -> Prop) : (term96 A lt2 x P) = (term96 A lt2 x P).
Proof. exact (MK_COMB (@lem323388) (@lem323387 A lt2 x P)). Qed.
Lemma lem323390 {A : Type'} (lt2 : type1402 A) (P : A -> Prop) (x : A) : (term97 A lt2 P x) = (term97 A lt2 P x).
Proof. exact (MK_COMB (@lem323389 A lt2 x P) (@lem323379 A P x)). Qed.
Lemma lem323391 {A : Type'} (lt2 : type1402 A) (P : A -> Prop) : (term98 A lt2 P) = (term98 A lt2 P).
Proof. exact (fun_ext (fun x : A => @lem323390 A lt2 P x)). Qed.
Lemma lem323392 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem323393 {A : Type'} (lt2 : type1402 A) (P : A -> Prop) : (term99 A lt2 P) = (term99 A lt2 P).
Proof. exact (MK_COMB (@lem323392 A) (@lem323391 A lt2 P)). Qed.
Lemma lem323394 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem323395 {A : Type'} (lt2 : type1402 A) (P : A -> Prop) : (term100 A lt2 P) = (term100 A lt2 P).
Proof. exact (MK_COMB (@lem323394) (@lem323393 A lt2 P)). Qed.
Lemma lem323396 {A : Type'} (lt2 : type1402 A) (P : A -> Prop) : (term101 A lt2 P) = (term101 A lt2 P).
Proof. exact (MK_COMB (@lem323395 A lt2 P) (@lem323378 A P)). Qed.
Lemma lem323397 {A : Type'} (lt2 : type1402 A) : (term102 A lt2) = (term102 A lt2).
Proof. exact (fun_ext (fun P : A -> Prop => @lem323396 A lt2 P)). Qed.
Lemma lem323398 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem323399 {A : Type'} (lt2 : type1402 A) : (term0 A lt2) = (term0 A lt2).
Proof. exact (MK_COMB (@lem323398 A) (@lem323397 A lt2)). Qed.
Lemma lem323400 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem323401 {A : Type'} (lt2 : type1402 A) : (term32 A lt2) = (term32 A lt2).
Proof. exact (MK_COMB (@lem323400) (@lem323399 A lt2)). Qed.
Lemma lem323402 {A B : Type'} (S' : type1413 A B) (lt2 : type1402 A) (H : type549 A B) (R : type1413 A B) : (term33 A B S' lt2 H R) = (term33 A B S' lt2 H R).
Proof. exact (MK_COMB (@lem323401 A lt2) (@lem323374 A B S' lt2 H R)). Qed.
Lemma lem323403 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (R : type1413 A B) : (term35 A B lt2 H R) = (term35 A B lt2 H R).
Proof. exact (fun_ext (fun S' : type1413 A B => @lem323402 A B S' lt2 H R)). Qed.
Lemma lem323404 {A B : Type'} : (@all (A -> B -> Prop)) = (@all (A -> B -> Prop)).
Proof. exact (eq_refl (@all (A -> B -> Prop))). Qed.
Lemma lem323405 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (R : type1413 A B) : (term37 A B lt2 H R) = (term37 A B lt2 H R).
Proof. exact (MK_COMB (@lem323404 A B) (@lem323403 A B lt2 H R)). Qed.
Lemma lem323406 {A B : Type'} (H : type549 A B) (R : type1413 A B) : (term39 A B H R) = (term39 A B H R).
Proof. exact (fun_ext (fun lt2 : type1402 A => @lem323405 A B lt2 H R)). Qed.
Lemma lem323407 {A : Type'} : (@all (A -> A -> Prop)) = (@all (A -> A -> Prop)).
Proof. exact (eq_refl (@all (A -> A -> Prop))). Qed.
Lemma lem323408 {A B : Type'} (H : type549 A B) (R : type1413 A B) : (term41 A B H R) = (term41 A B H R).
Proof. exact (MK_COMB (@lem323407 A) (@lem323406 A B H R)). Qed.
Lemma lem323409 {A B : Type'} (R : type1413 A B) : (term43 A B R) = (term43 A B R).
Proof. exact (fun_ext (fun H : type549 A B => @lem323408 A B H R)). Qed.
Lemma lem323410 {A B : Type'} : (@all ((A -> B) -> A -> B)) = (@all ((A -> B) -> A -> B)).
Proof. exact (eq_refl (@all ((A -> B) -> A -> B))). Qed.
Lemma lem323411 {A B : Type'} (R : type1413 A B) : (term45 A B R) = (term45 A B R).
Proof. exact (MK_COMB (@lem323410 A B) (@lem323409 A B R)). Qed.
Lemma lem323412 {A B : Type'} : (term47 A B) = (term47 A B).
Proof. exact (fun_ext (fun R : type1413 A B => @lem323411 A B R)). Qed.
Lemma lem323413 {A B : Type'} : (@all (A -> B -> Prop)) = (@all (A -> B -> Prop)).
Proof. exact (eq_refl (@all (A -> B -> Prop))). Qed.
Lemma lem323414 {A B : Type'} : (term49 A B) = (term49 A B).
Proof. exact (MK_COMB (@lem323413 A B) (@lem323412 A B)). Qed.
Lemma lem323627 {A B : Type'} : (term48 A B) = (term49 A B).
Proof. exact (TRANS (@lem323234 A B) (@lem323414 A B)). Qed.
Lemma lem323628 {A B : Type'} : (term49 A B) = (term48 A B).
Proof. exact (SYM (@lem323627 A B)). Qed.
Lemma lem323629 {A : Type'} (lt2 : type1402 A) (h1 : term0 A lt2) : term0 A lt2.
Proof. exact (h1). Qed.
Lemma lem323630 {A B : Type'} (lt2 : type1402 A) (S' : type1413 A B) (H : type549 A B) (h1 : term1 A B lt2 S' H) : term1 A B lt2 S' H.
Proof. exact (h1). Qed.
Lemma lem323631 {A B : Type'} (lt2 : type1402 A) (R : type1413 A B) (H : type549 A B) (h1 : term3 A B lt2 R H) : term3 A B lt2 R H.
Proof. exact (h1). Qed.
Lemma lem323632 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (R : type1413 A B) (h1 : term5 A B lt2 H R) : term5 A B lt2 H R.
Proof. exact (h1). Qed.
Lemma lem323633 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (R : type1413 A B) (h1 : term4 A B H lt2 R) : term4 A B H lt2 R.
Proof. exact (h1). Qed.
Lemma lem323634 {A B : Type'} (H : type549 A B) (h1 : term10 A B H) : term10 A B H.
Proof. exact (h1). Qed.
Lemma lem323635 {A B : Type'} (R : type1413 A B) (h1 : term6 A B R) : term6 A B R.
Proof. exact (h1). Qed.
Lemma lem323642 {A : Type'} (lt2 : type1402 A) (x : A) (P : A -> Prop) (y : A) : (term93 A lt2 x P y) = (term103 A lt2 x P y).
Proof. exact (@lem17265 (lt2 y x) (P y)). Qed.
Lemma lem323643 {A : Type'} (lt2 : type1402 A) (x : A) (P : A -> Prop) : (term94 A lt2 x P) = (term104 A lt2 x P).
Proof. exact (fun_ext (fun y : A => @lem323642 A lt2 x P y)). Qed.
Lemma lem323644 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem323645 {A : Type'} (lt2 : type1402 A) (x : A) (P : A -> Prop) : (term95 A lt2 x P) = (term105 A lt2 x P).
Proof. exact (MK_COMB (@lem323644 A) (@lem323643 A lt2 x P)). Qed.
Lemma lem323646 {A : Type'} (P : A -> Prop) (x : A) : (term106 A P x) = (term106 A P x).
Proof. exact (eq_refl (term106 A P x)). Qed.
Lemma lem323647 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem323648 {A : Type'} (lt2 : type1402 A) (x : A) (P : A -> Prop) : (term107 A lt2 x P) = (term108 A lt2 x P).
Proof. exact (MK_COMB (@lem323647) (@lem323645 A lt2 x P)). Qed.
Lemma lem323649 {A : Type'} (lt2 : type1402 A) (P : A -> Prop) (x : A) : (term109 A lt2 P x) = (term110 A lt2 P x).
Proof. exact (MK_COMB (@lem323648 A lt2 x P) (@lem323646 A P x)). Qed.
Lemma lem323650 {A : Type'} (lt2 : type1402 A) (P : A -> Prop) (x : A) : (term111 A lt2 P x) = (term109 A lt2 P x).
Proof. exact (@lem17362 (term95 A lt2 x P) (P x)). Qed.
Lemma lem323651 {A : Type'} (lt2 : type1402 A) (P : A -> Prop) (x : A) : (term111 A lt2 P x) = (term110 A lt2 P x).
Proof. exact (TRANS (@lem323650 A lt2 P x) (@lem323649 A lt2 P x)). Qed.
Lemma lem323652 {A : Type'} (P : A -> Prop) : (term112 A P) = (term113 A P).
Proof. exact (@lem18392 A P). Qed.
Lemma lem323653 {A : Type'} (lt2 : type1402 A) (P : A -> Prop) : (term114 A lt2 P) = (term115 A lt2 P).
Proof. exact (@lem323652 A (term98 A lt2 P)). Qed.
Lemma lem323654 {A : Type'} (lt2 : type1402 A) (P : A -> Prop) (x : A) : (term116 A lt2 P x) = (term97 A lt2 P x).
Proof. exact (eq_refl (term116 A lt2 P x)). Qed.
Lemma lem323655 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem323656 {A : Type'} (lt2 : type1402 A) (P : A -> Prop) (x : A) : (term117 A lt2 P x) = (term111 A lt2 P x).
Proof. exact (MK_COMB (@lem323655) (@lem323654 A lt2 P x)). Qed.
Lemma lem323657 {A : Type'} (lt2 : type1402 A) (P : A -> Prop) (x : A) : (term117 A lt2 P x) = (term110 A lt2 P x).
Proof. exact (TRANS (@lem323656 A lt2 P x) (@lem323651 A lt2 P x)). Qed.
Lemma lem323658 {A : Type'} (lt2 : type1402 A) (P : A -> Prop) : (term118 A lt2 P) = (term119 A lt2 P).
Proof. exact (fun_ext (fun x : A => @lem323657 A lt2 P x)). Qed.
Lemma lem323659 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem323660 {A : Type'} (lt2 : type1402 A) (P : A -> Prop) : (term115 A lt2 P) = (term120 A lt2 P).
Proof. exact (MK_COMB (@lem323659 A) (@lem323658 A lt2 P)). Qed.
Lemma lem323661 {A : Type'} (lt2 : type1402 A) (P : A -> Prop) : (term114 A lt2 P) = (term120 A lt2 P).
Proof. exact (TRANS (@lem323653 A lt2 P) (@lem323660 A lt2 P)). Qed.
Lemma lem323662 {A : Type'} (P : A -> Prop) (x : A) : (P x) = (P x).
Proof. exact (eq_refl (P x)). Qed.
Lemma lem323663 {A : Type'} (P : A -> Prop) : (term91 A P) = (term91 A P).
Proof. exact (fun_ext (fun x : A => @lem323662 A P x)). Qed.
Lemma lem323664 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem323665 {A : Type'} (P : A -> Prop) : (term92 A P) = (term92 A P).
Proof. exact (MK_COMB (@lem323664 A) (@lem323663 A P)). Qed.
Lemma lem323666 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem323667 {A : Type'} (lt2 : type1402 A) (P : A -> Prop) : (term121 A lt2 P) = (term122 A lt2 P).
Proof. exact (MK_COMB (@lem323666) (@lem323661 A lt2 P)). Qed.
Lemma lem323668 {A : Type'} (lt2 : type1402 A) (P : A -> Prop) : (term123 A lt2 P) = (term124 A lt2 P).
Proof. exact (MK_COMB (@lem323667 A lt2 P) (@lem323665 A P)). Qed.
Lemma lem323669 {A : Type'} (lt2 : type1402 A) (P : A -> Prop) : (term101 A lt2 P) = (term123 A lt2 P).
Proof. exact (@lem17265 (term99 A lt2 P) (term92 A P)). Qed.
Lemma lem323670 {A : Type'} (lt2 : type1402 A) (P : A -> Prop) : (term101 A lt2 P) = (term124 A lt2 P).
Proof. exact (TRANS (@lem323669 A lt2 P) (@lem323668 A lt2 P)). Qed.
Lemma lem323671 {A : Type'} (lt2 : type1402 A) : (term102 A lt2) = (term125 A lt2).
Proof. exact (fun_ext (fun P : A -> Prop => @lem323670 A lt2 P)). Qed.
Lemma lem323672 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem323673 {A : Type'} (lt2 : type1402 A) : (term0 A lt2) = (term126 A lt2).
Proof. exact (MK_COMB (@lem323672 A) (@lem323671 A lt2)). Qed.
Lemma lem323808 {A : Type'} (P : A -> Prop) (Q : Prop) : (term127 A P Q) = (term128 A P Q).
Proof. exact (EQ_MP (@lem18905 A P Q) (@lem18904 A P Q)). Qed.
Lemma lem323809 {A : Type'} (P : A -> Prop) (Q : Prop) : (term127 A P Q) = (term128 A P Q).
Proof. exact (@lem323808 A P Q). Qed.
Lemma lem323810 {A : Type'} (lt2 : type1402 A) (P : A -> Prop) : (term129 A lt2 P) = (term130 A lt2 P).
Proof. exact (@lem323809 A (term119 A lt2 P) (term92 A P)). Qed.
Lemma lem323811 {A : Type'} (lt2 : type1402 A) (P : A -> Prop) (x : A) : (term131 A lt2 P x) = (term110 A lt2 P x).
Proof. exact (eq_refl (term131 A lt2 P x)). Qed.
Lemma lem323812 {A : Type'} (lt2 : type1402 A) (P : A -> Prop) : (term132 A lt2 P) = (term119 A lt2 P).
Proof. exact (fun_ext (fun x : A => @lem323811 A lt2 P x)). Qed.
Lemma lem323813 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem323814 {A : Type'} (lt2 : type1402 A) (P : A -> Prop) : (term133 A lt2 P) = (term120 A lt2 P).
Proof. exact (MK_COMB (@lem323813 A) (@lem323812 A lt2 P)). Qed.
Lemma lem323815 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem323816 {A : Type'} (lt2 : type1402 A) (P : A -> Prop) : (term134 A lt2 P) = (term122 A lt2 P).
Proof. exact (MK_COMB (@lem323815) (@lem323814 A lt2 P)). Qed.
Lemma lem323817 {A : Type'} (P : A -> Prop) : (term92 A P) = (term92 A P).
Proof. exact (eq_refl (term92 A P)). Qed.
Lemma lem323818 {A : Type'} (lt2 : type1402 A) (P : A -> Prop) : (term129 A lt2 P) = (term124 A lt2 P).
Proof. exact (MK_COMB (@lem323816 A lt2 P) (@lem323817 A P)). Qed.
Lemma lem323819 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem323820 {A : Type'} (lt2 : type1402 A) (P : A -> Prop) : (term135 A lt2 P) = (term136 A lt2 P).
Proof. exact (MK_COMB (@lem323819) (@lem323818 A lt2 P)). Qed.
Lemma lem323821 {A : Type'} (lt2 : type1402 A) (P : A -> Prop) (x : A) : (term131 A lt2 P x) = (term110 A lt2 P x).
Proof. exact (eq_refl (term131 A lt2 P x)). Qed.
Lemma lem323822 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem323823 {A : Type'} (lt2 : type1402 A) (P : A -> Prop) (x : A) : (term137 A lt2 P x) = (term138 A lt2 P x).
Proof. exact (MK_COMB (@lem323822) (@lem323821 A lt2 P x)). Qed.
Lemma lem323824 {A : Type'} (P : A -> Prop) : (term92 A P) = (term92 A P).
Proof. exact (eq_refl (term92 A P)). Qed.
Lemma lem323825 {A : Type'} (lt2 : type1402 A) (x : A) (P : A -> Prop) : (term139 A lt2 x P) = (term140 A lt2 x P).
Proof. exact (MK_COMB (@lem323823 A lt2 P x) (@lem323824 A P)). Qed.
Lemma lem323826 {A : Type'} (lt2 : type1402 A) (P : A -> Prop) : (term141 A lt2 P) = (term142 A lt2 P).
Proof. exact (fun_ext (fun x : A => @lem323825 A lt2 x P)). Qed.
Lemma lem323827 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem323828 {A : Type'} (lt2 : type1402 A) (P : A -> Prop) : (term130 A lt2 P) = (term143 A lt2 P).
Proof. exact (MK_COMB (@lem323827 A) (@lem323826 A lt2 P)). Qed.
Lemma lem323829 {A : Type'} (lt2 : type1402 A) (P : A -> Prop) : ((term129 A lt2 P) = (term130 A lt2 P)) = ((term124 A lt2 P) = (term143 A lt2 P)).
Proof. exact (MK_COMB (@lem323820 A lt2 P) (@lem323828 A lt2 P)). Qed.
Lemma lem323830 {A : Type'} (lt2 : type1402 A) (P : A -> Prop) : (term124 A lt2 P) = (term143 A lt2 P).
Proof. exact (EQ_MP (@lem323829 A lt2 P) (@lem323810 A lt2 P)). Qed.
Lemma lem323831 {A : Type'} (lt2 : type1402 A) : (term125 A lt2) = (term144 A lt2).
Proof. exact (fun_ext (fun P : A -> Prop => @lem323830 A lt2 P)). Qed.
Lemma lem323832 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem323833 {A : Type'} (lt2 : type1402 A) : (term126 A lt2) = (term145 A lt2).
Proof. exact (MK_COMB (@lem323832 A) (@lem323831 A lt2)). Qed.
Lemma lem323835 {A B : Type'} (P : type1413 A B) : (term146 A B P) = (term147 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem323836 {A : Type'} (P : type672 A) : (term148 A P) = (term149 A P).
Proof. exact (@lem323835 (A -> Prop) A P). Qed.
Lemma lem323837 {A : Type'} (lt2 : type1402 A) : (term150 A lt2) = (term151 A lt2).
Proof. exact (@lem323836 A (term152 A lt2)). Qed.
Lemma lem323838 {A : Type'} (lt2 : type1402 A) (P : A -> Prop) : (term153 A lt2 P) = (term142 A lt2 P).
Proof. exact (eq_refl (term153 A lt2 P)). Qed.
Lemma lem323839 {A : Type'} (x : A) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem323840 {A : Type'} (lt2 : type1402 A) (P : A -> Prop) (x : A) : (term154 A lt2 P x) = (term155 A lt2 P x).
Proof. exact (MK_COMB (@lem323838 A lt2 P) (@lem323839 A x)). Qed.
Lemma lem323841 {A : Type'} (lt2 : type1402 A) (x : A) (P : A -> Prop) : (term155 A lt2 P x) = (term140 A lt2 x P).
Proof. exact (eq_refl (term155 A lt2 P x)). Qed.
Lemma lem323842 {A : Type'} (lt2 : type1402 A) (x : A) (P : A -> Prop) : (term154 A lt2 P x) = (term140 A lt2 x P).
Proof. exact (TRANS (@lem323840 A lt2 P x) (@lem323841 A lt2 x P)). Qed.
Lemma lem323843 {A : Type'} (lt2 : type1402 A) (P : A -> Prop) : (term156 A lt2 P) = (term142 A lt2 P).
Proof. exact (fun_ext (fun x : A => @lem323842 A lt2 x P)). Qed.
Lemma lem323844 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem323845 {A : Type'} (lt2 : type1402 A) (P : A -> Prop) : (term157 A lt2 P) = (term143 A lt2 P).
Proof. exact (MK_COMB (@lem323844 A) (@lem323843 A lt2 P)). Qed.
Lemma lem323846 {A : Type'} (lt2 : type1402 A) : (term158 A lt2) = (term144 A lt2).
Proof. exact (fun_ext (fun P : A -> Prop => @lem323845 A lt2 P)). Qed.
Lemma lem323847 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem323848 {A : Type'} (lt2 : type1402 A) : (term150 A lt2) = (term145 A lt2).
Proof. exact (MK_COMB (@lem323847 A) (@lem323846 A lt2)). Qed.
Lemma lem323849 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem323850 {A : Type'} (lt2 : type1402 A) : (term159 A lt2) = (term160 A lt2).
Proof. exact (MK_COMB (@lem323849) (@lem323848 A lt2)). Qed.
Lemma lem323851 {A : Type'} (lt2 : type1402 A) (P : A -> Prop) : (term153 A lt2 P) = (term142 A lt2 P).
Proof. exact (eq_refl (term153 A lt2 P)). Qed.
Lemma lem323852 {A : Type'} (x : type684 A) (P : A -> Prop) : (x P) = (x P).
Proof. exact (eq_refl (x P)). Qed.
Lemma lem323853 {A : Type'} (lt2 : type1402 A) (x : type684 A) (P : A -> Prop) : (term161 A lt2 x P) = (term162 A lt2 x P).
Proof. exact (MK_COMB (@lem323851 A lt2 P) (@lem323852 A x P)). Qed.
Lemma lem323854 {A : Type'} (lt2 : type1402 A) (x : type684 A) (P : A -> Prop) : (term162 A lt2 x P) = (term163 A lt2 x P).
Proof. exact (eq_refl (term162 A lt2 x P)). Qed.
Lemma lem323855 {A : Type'} (lt2 : type1402 A) (x : type684 A) (P : A -> Prop) : (term161 A lt2 x P) = (term163 A lt2 x P).
Proof. exact (TRANS (@lem323853 A lt2 x P) (@lem323854 A lt2 x P)). Qed.
Lemma lem323856 {A : Type'} (lt2 : type1402 A) (x : type684 A) : (term164 A lt2 x) = (term165 A lt2 x).
Proof. exact (fun_ext (fun P : A -> Prop => @lem323855 A lt2 x P)). Qed.
Lemma lem323857 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem323858 {A : Type'} (lt2 : type1402 A) (x : type684 A) : (term166 A lt2 x) = (term167 A lt2 x).
Proof. exact (MK_COMB (@lem323857 A) (@lem323856 A lt2 x)). Qed.
Lemma lem323859 {A : Type'} (lt2 : type1402 A) : (term168 A lt2) = (term169 A lt2).
Proof. exact (fun_ext (fun x : type684 A => @lem323858 A lt2 x)). Qed.
Lemma lem323860 {A : Type'} : (@ex ((A -> Prop) -> A)) = (@ex ((A -> Prop) -> A)).
Proof. exact (eq_refl (@ex ((A -> Prop) -> A))). Qed.
Lemma lem323861 {A : Type'} (lt2 : type1402 A) : (term151 A lt2) = (term170 A lt2).
Proof. exact (MK_COMB (@lem323860 A) (@lem323859 A lt2)). Qed.
Lemma lem323862 {A : Type'} (lt2 : type1402 A) : ((term150 A lt2) = (term151 A lt2)) = ((term145 A lt2) = (term170 A lt2)).
Proof. exact (MK_COMB (@lem323850 A lt2) (@lem323861 A lt2)). Qed.
Lemma lem323863 {A : Type'} (lt2 : type1402 A) : (term145 A lt2) = (term170 A lt2).
Proof. exact (EQ_MP (@lem323862 A lt2) (@lem323837 A lt2)). Qed.
Lemma lem323865 {A : Type'} (lt2 : type1402 A) : (term126 A lt2) = (term170 A lt2).
Proof. exact (TRANS (@lem323833 A lt2) (@lem323863 A lt2)). Qed.
Lemma lem323866 {A : Type'} (lt2 : type1402 A) : (term0 A lt2) = (term170 A lt2).
Proof. exact (TRANS (@lem323673 A lt2) (@lem323865 A lt2)). Qed.
Lemma lem323867 {A : Type'} (lt2 : type1402 A) (h1 : term0 A lt2) : term170 A lt2.
Proof. exact (EQ_MP (@lem323866 A lt2) (@lem323629 A lt2 h1)). Qed.
Lemma lem323875 {A B : Type'} (g : A -> B) (S' : type1413 A B) (f : A -> B) (z : A) : (term171 A B g S' f z) = (term172 A B g S' f z).
Proof. exact (@lem17045 ((f z) = (g z)) (term173 A B S' f z)). Qed.
Lemma lem323877 {A : Type'} (lt2 : type1402 A) (z : A) (x : A) : (term174 A lt2 z x) = (term174 A lt2 z x).
Proof. exact (eq_refl (term174 A lt2 z x)). Qed.
Lemma lem323878 {A B : Type'} (lt2 : type1402 A) (x : A) (g : A -> B) (S' : type1413 A B) (f : A -> B) (z : A) : (term175 A B lt2 x g S' f z) = (term176 A B lt2 x g S' f z).
Proof. exact (MK_COMB (@lem323877 A lt2 z x) (@lem323875 A B g S' f z)). Qed.
Lemma lem323879 {A B : Type'} (lt2 : type1402 A) (x : A) (g : A -> B) (S' : type1413 A B) (f : A -> B) (z : A) : (term177 A B lt2 x g S' f z) = (term175 A B lt2 x g S' f z).
Proof. exact (@lem17362 (lt2 z x) (term178 A B g S' f z)). Qed.
Lemma lem323880 {A B : Type'} (lt2 : type1402 A) (x : A) (g : A -> B) (S' : type1413 A B) (f : A -> B) (z : A) : (term177 A B lt2 x g S' f z) = (term176 A B lt2 x g S' f z).
Proof. exact (TRANS (@lem323879 A B lt2 x g S' f z) (@lem323878 A B lt2 x g S' f z)). Qed.
Lemma lem323881 {A : Type'} (P : A -> Prop) : (term112 A P) = (term113 A P).
Proof. exact (@lem18392 A P). Qed.
Lemma lem323882 {A B : Type'} (lt2 : type1402 A) (x : A) (g : A -> B) (S' : type1413 A B) (f : A -> B) : (term179 A B lt2 x g S' f) = (term180 A B lt2 x g S' f).
Proof. exact (@lem323881 A (term82 A B lt2 x g S' f)). Qed.
Lemma lem323883 {A B : Type'} (lt2 : type1402 A) (x : A) (g : A -> B) (S' : type1413 A B) (f : A -> B) (z : A) : (term181 A B lt2 x g S' f z) = (term81 A B lt2 x g S' f z).
Proof. exact (eq_refl (term181 A B lt2 x g S' f z)). Qed.
Lemma lem323884 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem323885 {A B : Type'} (lt2 : type1402 A) (x : A) (g : A -> B) (S' : type1413 A B) (f : A -> B) (z : A) : (term182 A B lt2 x g S' f z) = (term177 A B lt2 x g S' f z).
Proof. exact (MK_COMB (@lem323884) (@lem323883 A B lt2 x g S' f z)). Qed.
Lemma lem323886 {A B : Type'} (lt2 : type1402 A) (x : A) (g : A -> B) (S' : type1413 A B) (f : A -> B) (z : A) : (term182 A B lt2 x g S' f z) = (term176 A B lt2 x g S' f z).
Proof. exact (TRANS (@lem323885 A B lt2 x g S' f z) (@lem323880 A B lt2 x g S' f z)). Qed.
Lemma lem323887 {A B : Type'} (lt2 : type1402 A) (x : A) (g : A -> B) (S' : type1413 A B) (f : A -> B) : (term183 A B lt2 x g S' f) = (term184 A B lt2 x g S' f).
Proof. exact (fun_ext (fun z : A => @lem323886 A B lt2 x g S' f z)). Qed.
Lemma lem323888 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem323889 {A B : Type'} (lt2 : type1402 A) (x : A) (g : A -> B) (S' : type1413 A B) (f : A -> B) : (term180 A B lt2 x g S' f) = (term185 A B lt2 x g S' f).
Proof. exact (MK_COMB (@lem323888 A) (@lem323887 A B lt2 x g S' f)). Qed.
Lemma lem323890 {A B : Type'} (lt2 : type1402 A) (x : A) (g : A -> B) (S' : type1413 A B) (f : A -> B) : (term179 A B lt2 x g S' f) = (term185 A B lt2 x g S' f).
Proof. exact (TRANS (@lem323882 A B lt2 x g S' f) (@lem323889 A B lt2 x g S' f)). Qed.
Lemma lem323895 {A B : Type'} (g : A -> B) (S' : type1413 A B) (H : type549 A B) (f : A -> B) (x : A) : (term80 A B g S' H f x) = (term80 A B g S' H f x).
Proof. exact (eq_refl (term80 A B g S' H f x)). Qed.
Lemma lem323896 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem323897 {A B : Type'} (lt2 : type1402 A) (x : A) (g : A -> B) (S' : type1413 A B) (f : A -> B) : (term186 A B lt2 x g S' f) = (term187 A B lt2 x g S' f).
Proof. exact (MK_COMB (@lem323896) (@lem323890 A B lt2 x g S' f)). Qed.
Lemma lem323898 {A B : Type'} (lt2 : type1402 A) (g : A -> B) (S' : type1413 A B) (H : type549 A B) (f : A -> B) (x : A) : (term188 A B lt2 g S' H f x) = (term189 A B lt2 g S' H f x).
Proof. exact (MK_COMB (@lem323897 A B lt2 x g S' f) (@lem323895 A B g S' H f x)). Qed.
Lemma lem323899 {A B : Type'} (lt2 : type1402 A) (g : A -> B) (S' : type1413 A B) (H : type549 A B) (f : A -> B) (x : A) : (term85 A B lt2 g S' H f x) = (term188 A B lt2 g S' H f x).
Proof. exact (@lem17265 (term83 A B lt2 x g S' f) (term80 A B g S' H f x)). Qed.
Lemma lem323900 {A B : Type'} (lt2 : type1402 A) (g : A -> B) (S' : type1413 A B) (H : type549 A B) (f : A -> B) (x : A) : (term85 A B lt2 g S' H f x) = (term189 A B lt2 g S' H f x).
Proof. exact (TRANS (@lem323899 A B lt2 g S' H f x) (@lem323898 A B lt2 g S' H f x)). Qed.
Lemma lem323901 {A B : Type'} (lt2 : type1402 A) (g : A -> B) (S' : type1413 A B) (H : type549 A B) (f : A -> B) : (term86 A B lt2 g S' H f) = (term190 A B lt2 g S' H f).
Proof. exact (fun_ext (fun x : A => @lem323900 A B lt2 g S' H f x)). Qed.
Lemma lem323902 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem323903 {A B : Type'} (lt2 : type1402 A) (g : A -> B) (S' : type1413 A B) (H : type549 A B) (f : A -> B) : (term87 A B lt2 g S' H f) = (term191 A B lt2 g S' H f).
Proof. exact (MK_COMB (@lem323902 A) (@lem323901 A B lt2 g S' H f)). Qed.
Lemma lem323904 {A B : Type'} (lt2 : type1402 A) (S' : type1413 A B) (H : type549 A B) (f : A -> B) : (term88 A B lt2 S' H f) = (term192 A B lt2 S' H f).
Proof. exact (fun_ext (fun g : A -> B => @lem323903 A B lt2 g S' H f)). Qed.
Lemma lem323905 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem323906 {A B : Type'} (lt2 : type1402 A) (S' : type1413 A B) (H : type549 A B) (f : A -> B) : (term89 A B lt2 S' H f) = (term193 A B lt2 S' H f).
Proof. exact (MK_COMB (@lem323905 A B) (@lem323904 A B lt2 S' H f)). Qed.
Lemma lem323907 {A B : Type'} (lt2 : type1402 A) (S' : type1413 A B) (H : type549 A B) : (term90 A B lt2 S' H) = (term194 A B lt2 S' H).
Proof. exact (fun_ext (fun f : A -> B => @lem323906 A B lt2 S' H f)). Qed.
Lemma lem323908 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem323909 {A B : Type'} (lt2 : type1402 A) (S' : type1413 A B) (H : type549 A B) : (term1 A B lt2 S' H) = (term195 A B lt2 S' H).
Proof. exact (MK_COMB (@lem323908 A B) (@lem323907 A B lt2 S' H)). Qed.
Lemma lem324016 {A : Type'} (P : A -> Prop) (Q : Prop) : (term127 A P Q) = (term128 A P Q).
Proof. exact (EQ_MP (@lem18905 A P Q) (@lem18904 A P Q)). Qed.
Lemma lem324017 {A : Type'} (P : A -> Prop) (Q : Prop) : (term127 A P Q) = (term128 A P Q).
Proof. exact (@lem324016 A P Q). Qed.
Lemma lem324018 {A B : Type'} (lt2 : type1402 A) (g : A -> B) (S' : type1413 A B) (H : type549 A B) (f : A -> B) (x : A) : (term196 A B lt2 g S' H f x) = (term197 A B lt2 g S' H f x).
Proof. exact (@lem324017 A (term184 A B lt2 x g S' f) (term80 A B g S' H f x)). Qed.
Lemma lem324019 {A B : Type'} (lt2 : type1402 A) (x : A) (g : A -> B) (S' : type1413 A B) (f : A -> B) (z : A) : (term198 A B lt2 x g S' f z) = (term176 A B lt2 x g S' f z).
Proof. exact (eq_refl (term198 A B lt2 x g S' f z)). Qed.
Lemma lem324020 {A B : Type'} (lt2 : type1402 A) (x : A) (g : A -> B) (S' : type1413 A B) (f : A -> B) : (term199 A B lt2 x g S' f) = (term184 A B lt2 x g S' f).
Proof. exact (fun_ext (fun z : A => @lem324019 A B lt2 x g S' f z)). Qed.
Lemma lem324021 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem324022 {A B : Type'} (lt2 : type1402 A) (x : A) (g : A -> B) (S' : type1413 A B) (f : A -> B) : (term200 A B lt2 x g S' f) = (term185 A B lt2 x g S' f).
Proof. exact (MK_COMB (@lem324021 A) (@lem324020 A B lt2 x g S' f)). Qed.
Lemma lem324023 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem324024 {A B : Type'} (lt2 : type1402 A) (x : A) (g : A -> B) (S' : type1413 A B) (f : A -> B) : (term201 A B lt2 x g S' f) = (term187 A B lt2 x g S' f).
Proof. exact (MK_COMB (@lem324023) (@lem324022 A B lt2 x g S' f)). Qed.
Lemma lem324025 {A B : Type'} (g : A -> B) (S' : type1413 A B) (H : type549 A B) (f : A -> B) (x : A) : (term80 A B g S' H f x) = (term80 A B g S' H f x).
Proof. exact (eq_refl (term80 A B g S' H f x)). Qed.
Lemma lem324026 {A B : Type'} (lt2 : type1402 A) (g : A -> B) (S' : type1413 A B) (H : type549 A B) (f : A -> B) (x : A) : (term196 A B lt2 g S' H f x) = (term189 A B lt2 g S' H f x).
Proof. exact (MK_COMB (@lem324024 A B lt2 x g S' f) (@lem324025 A B g S' H f x)). Qed.
Lemma lem324027 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem324028 {A B : Type'} (lt2 : type1402 A) (g : A -> B) (S' : type1413 A B) (H : type549 A B) (f : A -> B) (x : A) : (term202 A B lt2 g S' H f x) = (term203 A B lt2 g S' H f x).
Proof. exact (MK_COMB (@lem324027) (@lem324026 A B lt2 g S' H f x)). Qed.
Lemma lem324029 {A B : Type'} (lt2 : type1402 A) (x : A) (g : A -> B) (S' : type1413 A B) (f : A -> B) (z : A) : (term198 A B lt2 x g S' f z) = (term176 A B lt2 x g S' f z).
Proof. exact (eq_refl (term198 A B lt2 x g S' f z)). Qed.
Lemma lem324030 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem324031 {A B : Type'} (lt2 : type1402 A) (x : A) (g : A -> B) (S' : type1413 A B) (f : A -> B) (z : A) : (term204 A B lt2 x g S' f z) = (term205 A B lt2 x g S' f z).
Proof. exact (MK_COMB (@lem324030) (@lem324029 A B lt2 x g S' f z)). Qed.
Lemma lem324032 {A B : Type'} (g : A -> B) (S' : type1413 A B) (H : type549 A B) (f : A -> B) (x : A) : (term80 A B g S' H f x) = (term80 A B g S' H f x).
Proof. exact (eq_refl (term80 A B g S' H f x)). Qed.
Lemma lem324033 {A B : Type'} (lt2 : type1402 A) (z : A) (g : A -> B) (S' : type1413 A B) (H : type549 A B) (f : A -> B) (x : A) : (term206 A B lt2 z g S' H f x) = (term207 A B lt2 z g S' H f x).
Proof. exact (MK_COMB (@lem324031 A B lt2 x g S' f z) (@lem324032 A B g S' H f x)). Qed.
Lemma lem324034 {A B : Type'} (lt2 : type1402 A) (g : A -> B) (S' : type1413 A B) (H : type549 A B) (f : A -> B) (x : A) : (term208 A B lt2 g S' H f x) = (term209 A B lt2 g S' H f x).
Proof. exact (fun_ext (fun z : A => @lem324033 A B lt2 z g S' H f x)). Qed.
Lemma lem324035 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem324036 {A B : Type'} (lt2 : type1402 A) (g : A -> B) (S' : type1413 A B) (H : type549 A B) (f : A -> B) (x : A) : (term197 A B lt2 g S' H f x) = (term210 A B lt2 g S' H f x).
Proof. exact (MK_COMB (@lem324035 A) (@lem324034 A B lt2 g S' H f x)). Qed.
Lemma lem324037 {A B : Type'} (lt2 : type1402 A) (g : A -> B) (S' : type1413 A B) (H : type549 A B) (f : A -> B) (x : A) : ((term196 A B lt2 g S' H f x) = (term197 A B lt2 g S' H f x)) = ((term189 A B lt2 g S' H f x) = (term210 A B lt2 g S' H f x)).
Proof. exact (MK_COMB (@lem324028 A B lt2 g S' H f x) (@lem324036 A B lt2 g S' H f x)). Qed.
Lemma lem324038 {A B : Type'} (lt2 : type1402 A) (g : A -> B) (S' : type1413 A B) (H : type549 A B) (f : A -> B) (x : A) : (term189 A B lt2 g S' H f x) = (term210 A B lt2 g S' H f x).
Proof. exact (EQ_MP (@lem324037 A B lt2 g S' H f x) (@lem324018 A B lt2 g S' H f x)). Qed.
Lemma lem324039 {A B : Type'} (lt2 : type1402 A) (g : A -> B) (S' : type1413 A B) (H : type549 A B) (f : A -> B) : (term190 A B lt2 g S' H f) = (term211 A B lt2 g S' H f).
Proof. exact (fun_ext (fun x : A => @lem324038 A B lt2 g S' H f x)). Qed.
Lemma lem324040 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem324041 {A B : Type'} (lt2 : type1402 A) (g : A -> B) (S' : type1413 A B) (H : type549 A B) (f : A -> B) : (term191 A B lt2 g S' H f) = (term212 A B lt2 g S' H f).
Proof. exact (MK_COMB (@lem324040 A) (@lem324039 A B lt2 g S' H f)). Qed.
Lemma lem324043 {A B : Type'} (P : type1413 A B) : (term146 A B P) = (term147 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem324044 {A : Type'} (P : type1402 A) : (term213 A P) = (term214 A P).
Proof. exact (@lem324043 A A P). Qed.
Lemma lem324045 {A B : Type'} (lt2 : type1402 A) (g : A -> B) (S' : type1413 A B) (H : type549 A B) (f : A -> B) : (term215 A B lt2 g S' H f) = (term216 A B lt2 g S' H f).
Proof. exact (@lem324044 A (term217 A B lt2 g S' H f)). Qed.
Lemma lem324046 {A B : Type'} (lt2 : type1402 A) (g : A -> B) (S' : type1413 A B) (H : type549 A B) (f : A -> B) (x : A) : (term218 A B lt2 g S' H f x) = (term209 A B lt2 g S' H f x).
Proof. exact (eq_refl (term218 A B lt2 g S' H f x)). Qed.
Lemma lem324047 {A : Type'} (z : A) : z = z.
Proof. exact (eq_refl z). Qed.
Lemma lem324048 {A B : Type'} (lt2 : type1402 A) (g : A -> B) (S' : type1413 A B) (H : type549 A B) (f : A -> B) (x : A) (z : A) : (term219 A B lt2 g S' H f x z) = (term220 A B lt2 g S' H f x z).
Proof. exact (MK_COMB (@lem324046 A B lt2 g S' H f x) (@lem324047 A z)). Qed.
Lemma lem324049 {A B : Type'} (lt2 : type1402 A) (z : A) (g : A -> B) (S' : type1413 A B) (H : type549 A B) (f : A -> B) (x : A) : (term220 A B lt2 g S' H f x z) = (term207 A B lt2 z g S' H f x).
Proof. exact (eq_refl (term220 A B lt2 g S' H f x z)). Qed.
Lemma lem324050 {A B : Type'} (lt2 : type1402 A) (z : A) (g : A -> B) (S' : type1413 A B) (H : type549 A B) (f : A -> B) (x : A) : (term219 A B lt2 g S' H f x z) = (term207 A B lt2 z g S' H f x).
Proof. exact (TRANS (@lem324048 A B lt2 g S' H f x z) (@lem324049 A B lt2 z g S' H f x)). Qed.
Lemma lem324051 {A B : Type'} (lt2 : type1402 A) (g : A -> B) (S' : type1413 A B) (H : type549 A B) (f : A -> B) (x : A) : (term221 A B lt2 g S' H f x) = (term209 A B lt2 g S' H f x).
Proof. exact (fun_ext (fun z : A => @lem324050 A B lt2 z g S' H f x)). Qed.
Lemma lem324052 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem324053 {A B : Type'} (lt2 : type1402 A) (g : A -> B) (S' : type1413 A B) (H : type549 A B) (f : A -> B) (x : A) : (term222 A B lt2 g S' H f x) = (term210 A B lt2 g S' H f x).
Proof. exact (MK_COMB (@lem324052 A) (@lem324051 A B lt2 g S' H f x)). Qed.
Lemma lem324054 {A B : Type'} (lt2 : type1402 A) (g : A -> B) (S' : type1413 A B) (H : type549 A B) (f : A -> B) : (term223 A B lt2 g S' H f) = (term211 A B lt2 g S' H f).
Proof. exact (fun_ext (fun x : A => @lem324053 A B lt2 g S' H f x)). Qed.
Lemma lem324055 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem324056 {A B : Type'} (lt2 : type1402 A) (g : A -> B) (S' : type1413 A B) (H : type549 A B) (f : A -> B) : (term215 A B lt2 g S' H f) = (term212 A B lt2 g S' H f).
Proof. exact (MK_COMB (@lem324055 A) (@lem324054 A B lt2 g S' H f)). Qed.
Lemma lem324057 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem324058 {A B : Type'} (lt2 : type1402 A) (g : A -> B) (S' : type1413 A B) (H : type549 A B) (f : A -> B) : (term224 A B lt2 g S' H f) = (term225 A B lt2 g S' H f).
Proof. exact (MK_COMB (@lem324057) (@lem324056 A B lt2 g S' H f)). Qed.
Lemma lem324059 {A B : Type'} (lt2 : type1402 A) (g : A -> B) (S' : type1413 A B) (H : type549 A B) (f : A -> B) (x : A) : (term218 A B lt2 g S' H f x) = (term209 A B lt2 g S' H f x).
Proof. exact (eq_refl (term218 A B lt2 g S' H f x)). Qed.
Lemma lem324060 {A : Type'} (z : A -> A) (x : A) : (z x) = (z x).
Proof. exact (eq_refl (z x)). Qed.
Lemma lem324061 {A B : Type'} (lt2 : type1402 A) (g : A -> B) (S' : type1413 A B) (H : type549 A B) (f : A -> B) (z : A -> A) (x : A) : (term226 A B lt2 g S' H f z x) = (term227 A B lt2 g S' H f z x).
Proof. exact (MK_COMB (@lem324059 A B lt2 g S' H f x) (@lem324060 A z x)). Qed.
Lemma lem324062 {A B : Type'} (lt2 : type1402 A) (z : A -> A) (g : A -> B) (S' : type1413 A B) (H : type549 A B) (f : A -> B) (x : A) : (term227 A B lt2 g S' H f z x) = (term228 A B lt2 z g S' H f x).
Proof. exact (eq_refl (term227 A B lt2 g S' H f z x)). Qed.
Lemma lem324063 {A B : Type'} (lt2 : type1402 A) (z : A -> A) (g : A -> B) (S' : type1413 A B) (H : type549 A B) (f : A -> B) (x : A) : (term226 A B lt2 g S' H f z x) = (term228 A B lt2 z g S' H f x).
Proof. exact (TRANS (@lem324061 A B lt2 g S' H f z x) (@lem324062 A B lt2 z g S' H f x)). Qed.
Lemma lem324064 {A B : Type'} (lt2 : type1402 A) (z : A -> A) (g : A -> B) (S' : type1413 A B) (H : type549 A B) (f : A -> B) : (term229 A B lt2 g S' H f z) = (term230 A B lt2 z g S' H f).
Proof. exact (fun_ext (fun x : A => @lem324063 A B lt2 z g S' H f x)). Qed.
Lemma lem324065 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem324066 {A B : Type'} (lt2 : type1402 A) (z : A -> A) (g : A -> B) (S' : type1413 A B) (H : type549 A B) (f : A -> B) : (term231 A B lt2 g S' H f z) = (term232 A B lt2 z g S' H f).
Proof. exact (MK_COMB (@lem324065 A) (@lem324064 A B lt2 z g S' H f)). Qed.
Lemma lem324067 {A B : Type'} (lt2 : type1402 A) (g : A -> B) (S' : type1413 A B) (H : type549 A B) (f : A -> B) : (term233 A B lt2 g S' H f) = (term234 A B lt2 g S' H f).
Proof. exact (fun_ext (fun z : A -> A => @lem324066 A B lt2 z g S' H f)). Qed.
Lemma lem324068 {A : Type'} : (@ex (A -> A)) = (@ex (A -> A)).
Proof. exact (eq_refl (@ex (A -> A))). Qed.
Lemma lem324069 {A B : Type'} (lt2 : type1402 A) (g : A -> B) (S' : type1413 A B) (H : type549 A B) (f : A -> B) : (term216 A B lt2 g S' H f) = (term235 A B lt2 g S' H f).
Proof. exact (MK_COMB (@lem324068 A) (@lem324067 A B lt2 g S' H f)). Qed.
Lemma lem324070 {A B : Type'} (lt2 : type1402 A) (g : A -> B) (S' : type1413 A B) (H : type549 A B) (f : A -> B) : ((term215 A B lt2 g S' H f) = (term216 A B lt2 g S' H f)) = ((term212 A B lt2 g S' H f) = (term235 A B lt2 g S' H f)).
Proof. exact (MK_COMB (@lem324058 A B lt2 g S' H f) (@lem324069 A B lt2 g S' H f)). Qed.
Lemma lem324071 {A B : Type'} (lt2 : type1402 A) (g : A -> B) (S' : type1413 A B) (H : type549 A B) (f : A -> B) : (term212 A B lt2 g S' H f) = (term235 A B lt2 g S' H f).
Proof. exact (EQ_MP (@lem324070 A B lt2 g S' H f) (@lem324045 A B lt2 g S' H f)). Qed.
Lemma lem324072 {A B : Type'} (lt2 : type1402 A) (g : A -> B) (S' : type1413 A B) (H : type549 A B) (f : A -> B) : (term191 A B lt2 g S' H f) = (term235 A B lt2 g S' H f).
Proof. exact (TRANS (@lem324041 A B lt2 g S' H f) (@lem324071 A B lt2 g S' H f)). Qed.
Lemma lem324073 {A B : Type'} (lt2 : type1402 A) (S' : type1413 A B) (H : type549 A B) (f : A -> B) : (term192 A B lt2 S' H f) = (term236 A B lt2 S' H f).
Proof. exact (fun_ext (fun g : A -> B => @lem324072 A B lt2 g S' H f)). Qed.
Lemma lem324074 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem324075 {A B : Type'} (lt2 : type1402 A) (S' : type1413 A B) (H : type549 A B) (f : A -> B) : (term193 A B lt2 S' H f) = (term237 A B lt2 S' H f).
Proof. exact (MK_COMB (@lem324074 A B) (@lem324073 A B lt2 S' H f)). Qed.
Lemma lem324077 {A B : Type'} (P : type1413 A B) : (term146 A B P) = (term147 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem324078 {A B : Type'} (P : type513 A B) : (term238 A B P) = (term239 A B P).
Proof. exact (@lem324077 (A -> B) (A -> A) P). Qed.
Lemma lem324079 {A B : Type'} (lt2 : type1402 A) (S' : type1413 A B) (H : type549 A B) (f : A -> B) : (term240 A B lt2 S' H f) = (term241 A B lt2 S' H f).
Proof. exact (@lem324078 A B (term242 A B lt2 S' H f)). Qed.
Lemma lem324080 {A B : Type'} (lt2 : type1402 A) (g : A -> B) (S' : type1413 A B) (H : type549 A B) (f : A -> B) : (term243 A B lt2 S' H f g) = (term234 A B lt2 g S' H f).
Proof. exact (eq_refl (term243 A B lt2 S' H f g)). Qed.
Lemma lem324081 {A : Type'} (z : A -> A) : z = z.
Proof. exact (eq_refl z). Qed.
Lemma lem324082 {A B : Type'} (lt2 : type1402 A) (g : A -> B) (S' : type1413 A B) (H : type549 A B) (f : A -> B) (z : A -> A) : (term244 A B lt2 S' H f g z) = (term245 A B lt2 g S' H f z).
Proof. exact (MK_COMB (@lem324080 A B lt2 g S' H f) (@lem324081 A z)). Qed.
Lemma lem324083 {A B : Type'} (lt2 : type1402 A) (z : A -> A) (g : A -> B) (S' : type1413 A B) (H : type549 A B) (f : A -> B) : (term245 A B lt2 g S' H f z) = (term232 A B lt2 z g S' H f).
Proof. exact (eq_refl (term245 A B lt2 g S' H f z)). Qed.
Lemma lem324084 {A B : Type'} (lt2 : type1402 A) (z : A -> A) (g : A -> B) (S' : type1413 A B) (H : type549 A B) (f : A -> B) : (term244 A B lt2 S' H f g z) = (term232 A B lt2 z g S' H f).
Proof. exact (TRANS (@lem324082 A B lt2 g S' H f z) (@lem324083 A B lt2 z g S' H f)). Qed.
Lemma lem324085 {A B : Type'} (lt2 : type1402 A) (g : A -> B) (S' : type1413 A B) (H : type549 A B) (f : A -> B) : (term246 A B lt2 S' H f g) = (term234 A B lt2 g S' H f).
Proof. exact (fun_ext (fun z : A -> A => @lem324084 A B lt2 z g S' H f)). Qed.
Lemma lem324086 {A : Type'} : (@ex (A -> A)) = (@ex (A -> A)).
Proof. exact (eq_refl (@ex (A -> A))). Qed.
Lemma lem324087 {A B : Type'} (lt2 : type1402 A) (g : A -> B) (S' : type1413 A B) (H : type549 A B) (f : A -> B) : (term247 A B lt2 S' H f g) = (term235 A B lt2 g S' H f).
Proof. exact (MK_COMB (@lem324086 A) (@lem324085 A B lt2 g S' H f)). Qed.
Lemma lem324088 {A B : Type'} (lt2 : type1402 A) (S' : type1413 A B) (H : type549 A B) (f : A -> B) : (term248 A B lt2 S' H f) = (term236 A B lt2 S' H f).
Proof. exact (fun_ext (fun g : A -> B => @lem324087 A B lt2 g S' H f)). Qed.
Lemma lem324089 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem324090 {A B : Type'} (lt2 : type1402 A) (S' : type1413 A B) (H : type549 A B) (f : A -> B) : (term240 A B lt2 S' H f) = (term237 A B lt2 S' H f).
Proof. exact (MK_COMB (@lem324089 A B) (@lem324088 A B lt2 S' H f)). Qed.
Lemma lem324091 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem324092 {A B : Type'} (lt2 : type1402 A) (S' : type1413 A B) (H : type549 A B) (f : A -> B) : (term249 A B lt2 S' H f) = (term250 A B lt2 S' H f).
Proof. exact (MK_COMB (@lem324091) (@lem324090 A B lt2 S' H f)). Qed.
Lemma lem324093 {A B : Type'} (lt2 : type1402 A) (g : A -> B) (S' : type1413 A B) (H : type549 A B) (f : A -> B) : (term243 A B lt2 S' H f g) = (term234 A B lt2 g S' H f).
Proof. exact (eq_refl (term243 A B lt2 S' H f g)). Qed.
Lemma lem324094 {A B : Type'} (z : type548 A B) (g : A -> B) : (z g) = (z g).
Proof. exact (eq_refl (z g)). Qed.
Lemma lem324095 {A B : Type'} (lt2 : type1402 A) (S' : type1413 A B) (H : type549 A B) (f : A -> B) (z : type548 A B) (g : A -> B) : (term251 A B lt2 S' H f z g) = (term252 A B lt2 S' H f z g).
Proof. exact (MK_COMB (@lem324093 A B lt2 g S' H f) (@lem324094 A B z g)). Qed.
Lemma lem324096 {A B : Type'} (lt2 : type1402 A) (z : type548 A B) (g : A -> B) (S' : type1413 A B) (H : type549 A B) (f : A -> B) : (term252 A B lt2 S' H f z g) = (term253 A B lt2 z g S' H f).
Proof. exact (eq_refl (term252 A B lt2 S' H f z g)). Qed.
Lemma lem324097 {A B : Type'} (lt2 : type1402 A) (z : type548 A B) (g : A -> B) (S' : type1413 A B) (H : type549 A B) (f : A -> B) : (term251 A B lt2 S' H f z g) = (term253 A B lt2 z g S' H f).
Proof. exact (TRANS (@lem324095 A B lt2 S' H f z g) (@lem324096 A B lt2 z g S' H f)). Qed.
Lemma lem324098 {A B : Type'} (lt2 : type1402 A) (z : type548 A B) (S' : type1413 A B) (H : type549 A B) (f : A -> B) : (term254 A B lt2 S' H f z) = (term255 A B lt2 z S' H f).
Proof. exact (fun_ext (fun g : A -> B => @lem324097 A B lt2 z g S' H f)). Qed.
Lemma lem324099 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem324100 {A B : Type'} (lt2 : type1402 A) (z : type548 A B) (S' : type1413 A B) (H : type549 A B) (f : A -> B) : (term256 A B lt2 S' H f z) = (term257 A B lt2 z S' H f).
Proof. exact (MK_COMB (@lem324099 A B) (@lem324098 A B lt2 z S' H f)). Qed.
Lemma lem324101 {A B : Type'} (lt2 : type1402 A) (S' : type1413 A B) (H : type549 A B) (f : A -> B) : (term258 A B lt2 S' H f) = (term259 A B lt2 S' H f).
Proof. exact (fun_ext (fun z : type548 A B => @lem324100 A B lt2 z S' H f)). Qed.
Lemma lem324102 {A B : Type'} : (@ex ((A -> B) -> A -> A)) = (@ex ((A -> B) -> A -> A)).
Proof. exact (eq_refl (@ex ((A -> B) -> A -> A))). Qed.
Lemma lem324103 {A B : Type'} (lt2 : type1402 A) (S' : type1413 A B) (H : type549 A B) (f : A -> B) : (term241 A B lt2 S' H f) = (term260 A B lt2 S' H f).
Proof. exact (MK_COMB (@lem324102 A B) (@lem324101 A B lt2 S' H f)). Qed.
Lemma lem324104 {A B : Type'} (lt2 : type1402 A) (S' : type1413 A B) (H : type549 A B) (f : A -> B) : ((term240 A B lt2 S' H f) = (term241 A B lt2 S' H f)) = ((term237 A B lt2 S' H f) = (term260 A B lt2 S' H f)).
Proof. exact (MK_COMB (@lem324092 A B lt2 S' H f) (@lem324103 A B lt2 S' H f)). Qed.
Lemma lem324105 {A B : Type'} (lt2 : type1402 A) (S' : type1413 A B) (H : type549 A B) (f : A -> B) : (term237 A B lt2 S' H f) = (term260 A B lt2 S' H f).
Proof. exact (EQ_MP (@lem324104 A B lt2 S' H f) (@lem324079 A B lt2 S' H f)). Qed.
Lemma lem324106 {A B : Type'} (lt2 : type1402 A) (S' : type1413 A B) (H : type549 A B) (f : A -> B) : (term193 A B lt2 S' H f) = (term260 A B lt2 S' H f).
Proof. exact (TRANS (@lem324075 A B lt2 S' H f) (@lem324105 A B lt2 S' H f)). Qed.
Lemma lem324107 {A B : Type'} (lt2 : type1402 A) (S' : type1413 A B) (H : type549 A B) : (term194 A B lt2 S' H) = (term261 A B lt2 S' H).
Proof. exact (fun_ext (fun f : A -> B => @lem324106 A B lt2 S' H f)). Qed.
Lemma lem324108 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem324109 {A B : Type'} (lt2 : type1402 A) (S' : type1413 A B) (H : type549 A B) : (term195 A B lt2 S' H) = (term262 A B lt2 S' H).
Proof. exact (MK_COMB (@lem324108 A B) (@lem324107 A B lt2 S' H)). Qed.
Lemma lem324111 {A B : Type'} (P : type1413 A B) : (term146 A B P) = (term147 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem324112 {A B : Type'} (P : type493 A B) : (term263 A B P) = (term264 A B P).
Proof. exact (@lem324111 (A -> B) (type548 A B) P). Qed.
Lemma lem324113 {A B : Type'} (lt2 : type1402 A) (S' : type1413 A B) (H : type549 A B) : (term265 A B lt2 S' H) = (term266 A B lt2 S' H).
Proof. exact (@lem324112 A B (term267 A B lt2 S' H)). Qed.
Lemma lem324114 {A B : Type'} (lt2 : type1402 A) (S' : type1413 A B) (H : type549 A B) (f : A -> B) : (term268 A B lt2 S' H f) = (term259 A B lt2 S' H f).
Proof. exact (eq_refl (term268 A B lt2 S' H f)). Qed.
Lemma lem324115 {A B : Type'} (z : type548 A B) : z = z.
Proof. exact (eq_refl z). Qed.
Lemma lem324116 {A B : Type'} (lt2 : type1402 A) (S' : type1413 A B) (H : type549 A B) (f : A -> B) (z : type548 A B) : (term269 A B lt2 S' H f z) = (term270 A B lt2 S' H f z).
Proof. exact (MK_COMB (@lem324114 A B lt2 S' H f) (@lem324115 A B z)). Qed.
Lemma lem324117 {A B : Type'} (lt2 : type1402 A) (z : type548 A B) (S' : type1413 A B) (H : type549 A B) (f : A -> B) : (term270 A B lt2 S' H f z) = (term257 A B lt2 z S' H f).
Proof. exact (eq_refl (term270 A B lt2 S' H f z)). Qed.
Lemma lem324118 {A B : Type'} (lt2 : type1402 A) (z : type548 A B) (S' : type1413 A B) (H : type549 A B) (f : A -> B) : (term269 A B lt2 S' H f z) = (term257 A B lt2 z S' H f).
Proof. exact (TRANS (@lem324116 A B lt2 S' H f z) (@lem324117 A B lt2 z S' H f)). Qed.
Lemma lem324119 {A B : Type'} (lt2 : type1402 A) (S' : type1413 A B) (H : type549 A B) (f : A -> B) : (term271 A B lt2 S' H f) = (term259 A B lt2 S' H f).
Proof. exact (fun_ext (fun z : type548 A B => @lem324118 A B lt2 z S' H f)). Qed.
Lemma lem324120 {A B : Type'} : (@ex ((A -> B) -> A -> A)) = (@ex ((A -> B) -> A -> A)).
Proof. exact (eq_refl (@ex ((A -> B) -> A -> A))). Qed.
Lemma lem324121 {A B : Type'} (lt2 : type1402 A) (S' : type1413 A B) (H : type549 A B) (f : A -> B) : (term272 A B lt2 S' H f) = (term260 A B lt2 S' H f).
Proof. exact (MK_COMB (@lem324120 A B) (@lem324119 A B lt2 S' H f)). Qed.
Lemma lem324122 {A B : Type'} (lt2 : type1402 A) (S' : type1413 A B) (H : type549 A B) : (term273 A B lt2 S' H) = (term261 A B lt2 S' H).
Proof. exact (fun_ext (fun f : A -> B => @lem324121 A B lt2 S' H f)). Qed.
Lemma lem324123 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem324124 {A B : Type'} (lt2 : type1402 A) (S' : type1413 A B) (H : type549 A B) : (term265 A B lt2 S' H) = (term262 A B lt2 S' H).
Proof. exact (MK_COMB (@lem324123 A B) (@lem324122 A B lt2 S' H)). Qed.
Lemma lem324125 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem324126 {A B : Type'} (lt2 : type1402 A) (S' : type1413 A B) (H : type549 A B) : (term274 A B lt2 S' H) = (term275 A B lt2 S' H).
Proof. exact (MK_COMB (@lem324125) (@lem324124 A B lt2 S' H)). Qed.
Lemma lem324127 {A B : Type'} (lt2 : type1402 A) (S' : type1413 A B) (H : type549 A B) (f : A -> B) : (term268 A B lt2 S' H f) = (term259 A B lt2 S' H f).
Proof. exact (eq_refl (term268 A B lt2 S' H f)). Qed.
Lemma lem324128 {A B : Type'} (z : type515 A B) (f : A -> B) : (z f) = (z f).
Proof. exact (eq_refl (z f)). Qed.
Lemma lem324129 {A B : Type'} (lt2 : type1402 A) (S' : type1413 A B) (H : type549 A B) (z : type515 A B) (f : A -> B) : (term276 A B lt2 S' H z f) = (term277 A B lt2 S' H z f).
Proof. exact (MK_COMB (@lem324127 A B lt2 S' H f) (@lem324128 A B z f)). Qed.
Lemma lem324130 {A B : Type'} (lt2 : type1402 A) (z : type515 A B) (S' : type1413 A B) (H : type549 A B) (f : A -> B) : (term277 A B lt2 S' H z f) = (term278 A B lt2 z S' H f).
Proof. exact (eq_refl (term277 A B lt2 S' H z f)). Qed.
Lemma lem324131 {A B : Type'} (lt2 : type1402 A) (z : type515 A B) (S' : type1413 A B) (H : type549 A B) (f : A -> B) : (term276 A B lt2 S' H z f) = (term278 A B lt2 z S' H f).
Proof. exact (TRANS (@lem324129 A B lt2 S' H z f) (@lem324130 A B lt2 z S' H f)). Qed.
Lemma lem324132 {A B : Type'} (lt2 : type1402 A) (z : type515 A B) (S' : type1413 A B) (H : type549 A B) : (term279 A B lt2 S' H z) = (term280 A B lt2 z S' H).
Proof. exact (fun_ext (fun f : A -> B => @lem324131 A B lt2 z S' H f)). Qed.
Lemma lem324133 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem324134 {A B : Type'} (lt2 : type1402 A) (z : type515 A B) (S' : type1413 A B) (H : type549 A B) : (term281 A B lt2 S' H z) = (term282 A B lt2 z S' H).
Proof. exact (MK_COMB (@lem324133 A B) (@lem324132 A B lt2 z S' H)). Qed.
Lemma lem324135 {A B : Type'} (lt2 : type1402 A) (S' : type1413 A B) (H : type549 A B) : (term283 A B lt2 S' H) = (term284 A B lt2 S' H).
Proof. exact (fun_ext (fun z : type515 A B => @lem324134 A B lt2 z S' H)). Qed.
Lemma lem324136 {A B : Type'} : (@ex ((A -> B) -> (A -> B) -> A -> A)) = (@ex ((A -> B) -> (A -> B) -> A -> A)).
Proof. exact (eq_refl (@ex ((A -> B) -> (A -> B) -> A -> A))). Qed.
Lemma lem324137 {A B : Type'} (lt2 : type1402 A) (S' : type1413 A B) (H : type549 A B) : (term266 A B lt2 S' H) = (term285 A B lt2 S' H).
Proof. exact (MK_COMB (@lem324136 A B) (@lem324135 A B lt2 S' H)). Qed.
Lemma lem324138 {A B : Type'} (lt2 : type1402 A) (S' : type1413 A B) (H : type549 A B) : ((term265 A B lt2 S' H) = (term266 A B lt2 S' H)) = ((term262 A B lt2 S' H) = (term285 A B lt2 S' H)).
Proof. exact (MK_COMB (@lem324126 A B lt2 S' H) (@lem324137 A B lt2 S' H)). Qed.
Lemma lem324139 {A B : Type'} (lt2 : type1402 A) (S' : type1413 A B) (H : type549 A B) : (term262 A B lt2 S' H) = (term285 A B lt2 S' H).
Proof. exact (EQ_MP (@lem324138 A B lt2 S' H) (@lem324113 A B lt2 S' H)). Qed.
Lemma lem324141 {A B : Type'} (lt2 : type1402 A) (S' : type1413 A B) (H : type549 A B) : (term195 A B lt2 S' H) = (term285 A B lt2 S' H).
Proof. exact (TRANS (@lem324109 A B lt2 S' H) (@lem324139 A B lt2 S' H)). Qed.
Lemma lem324142 {A B : Type'} (lt2 : type1402 A) (S' : type1413 A B) (H : type549 A B) : (term1 A B lt2 S' H) = (term285 A B lt2 S' H).
Proof. exact (TRANS (@lem323909 A B lt2 S' H) (@lem324141 A B lt2 S' H)). Qed.
Lemma lem324143 {A B : Type'} (lt2 : type1402 A) (S' : type1413 A B) (H : type549 A B) (h1 : term1 A B lt2 S' H) : term285 A B lt2 S' H.
Proof. exact (EQ_MP (@lem324142 A B lt2 S' H) (@lem323630 A B lt2 S' H h1)). Qed.
Lemma lem324150 {A B : Type'} (lt2 : type1402 A) (x : A) (R : type1413 A B) (f : A -> B) (z : A) : (term286 A B lt2 x R f z) = (term287 A B lt2 x R f z).
Proof. exact (@lem17362 (lt2 z x) (term173 A B R f z)). Qed.
Lemma lem324151 {A : Type'} (P : A -> Prop) : (term112 A P) = (term113 A P).
Proof. exact (@lem18392 A P). Qed.
Lemma lem324152 {A B : Type'} (lt2 : type1402 A) (x : A) (R : type1413 A B) (f : A -> B) : (term288 A B lt2 x R f) = (term289 A B lt2 x R f).
Proof. exact (@lem324151 A (term57 A B lt2 x R f)). Qed.
Lemma lem324153 {A B : Type'} (lt2 : type1402 A) (x : A) (R : type1413 A B) (f : A -> B) (z : A) : (term290 A B lt2 x R f z) = (term56 A B lt2 x R f z).
Proof. exact (eq_refl (term290 A B lt2 x R f z)). Qed.
Lemma lem324154 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem324155 {A B : Type'} (lt2 : type1402 A) (x : A) (R : type1413 A B) (f : A -> B) (z : A) : (term291 A B lt2 x R f z) = (term286 A B lt2 x R f z).
Proof. exact (MK_COMB (@lem324154) (@lem324153 A B lt2 x R f z)). Qed.
Lemma lem324156 {A B : Type'} (lt2 : type1402 A) (x : A) (R : type1413 A B) (f : A -> B) (z : A) : (term291 A B lt2 x R f z) = (term287 A B lt2 x R f z).
Proof. exact (TRANS (@lem324155 A B lt2 x R f z) (@lem324150 A B lt2 x R f z)). Qed.
Lemma lem324157 {A B : Type'} (lt2 : type1402 A) (x : A) (R : type1413 A B) (f : A -> B) : (term292 A B lt2 x R f) = (term293 A B lt2 x R f).
Proof. exact (fun_ext (fun z : A => @lem324156 A B lt2 x R f z)). Qed.
Lemma lem324158 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem324159 {A B : Type'} (lt2 : type1402 A) (x : A) (R : type1413 A B) (f : A -> B) : (term289 A B lt2 x R f) = (term294 A B lt2 x R f).
Proof. exact (MK_COMB (@lem324158 A) (@lem324157 A B lt2 x R f)). Qed.
Lemma lem324160 {A B : Type'} (lt2 : type1402 A) (x : A) (R : type1413 A B) (f : A -> B) : (term288 A B lt2 x R f) = (term294 A B lt2 x R f).
Proof. exact (TRANS (@lem324152 A B lt2 x R f) (@lem324159 A B lt2 x R f)). Qed.
Lemma lem324161 {A B : Type'} (R : type1413 A B) (H : type549 A B) (f : A -> B) (x : A) : (term72 A B R H f x) = (term72 A B R H f x).
Proof. exact (eq_refl (term72 A B R H f x)). Qed.
Lemma lem324162 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem324163 {A B : Type'} (lt2 : type1402 A) (x : A) (R : type1413 A B) (f : A -> B) : (term295 A B lt2 x R f) = (term296 A B lt2 x R f).
Proof. exact (MK_COMB (@lem324162) (@lem324160 A B lt2 x R f)). Qed.
Lemma lem324164 {A B : Type'} (lt2 : type1402 A) (R : type1413 A B) (H : type549 A B) (f : A -> B) (x : A) : (term297 A B lt2 R H f x) = (term298 A B lt2 R H f x).
Proof. exact (MK_COMB (@lem324163 A B lt2 x R f) (@lem324161 A B R H f x)). Qed.
Lemma lem324165 {A B : Type'} (lt2 : type1402 A) (R : type1413 A B) (H : type549 A B) (f : A -> B) (x : A) : (term74 A B lt2 R H f x) = (term297 A B lt2 R H f x).
Proof. exact (@lem17265 (term58 A B lt2 x R f) (term72 A B R H f x)). Qed.
Lemma lem324166 {A B : Type'} (lt2 : type1402 A) (R : type1413 A B) (H : type549 A B) (f : A -> B) (x : A) : (term74 A B lt2 R H f x) = (term298 A B lt2 R H f x).
Proof. exact (TRANS (@lem324165 A B lt2 R H f x) (@lem324164 A B lt2 R H f x)). Qed.
Lemma lem324167 {A B : Type'} (lt2 : type1402 A) (R : type1413 A B) (H : type549 A B) (f : A -> B) : (term75 A B lt2 R H f) = (term299 A B lt2 R H f).
Proof. exact (fun_ext (fun x : A => @lem324166 A B lt2 R H f x)). Qed.
Lemma lem324168 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem324169 {A B : Type'} (lt2 : type1402 A) (R : type1413 A B) (H : type549 A B) (f : A -> B) : (term76 A B lt2 R H f) = (term300 A B lt2 R H f).
Proof. exact (MK_COMB (@lem324168 A) (@lem324167 A B lt2 R H f)). Qed.
Lemma lem324170 {A B : Type'} (lt2 : type1402 A) (R : type1413 A B) (H : type549 A B) : (term77 A B lt2 R H) = (term301 A B lt2 R H).
Proof. exact (fun_ext (fun f : A -> B => @lem324169 A B lt2 R H f)). Qed.
Lemma lem324171 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem324172 {A B : Type'} (lt2 : type1402 A) (R : type1413 A B) (H : type549 A B) : (term3 A B lt2 R H) = (term302 A B lt2 R H).
Proof. exact (MK_COMB (@lem324171 A B) (@lem324170 A B lt2 R H)). Qed.
Lemma lem324275 {A : Type'} (P : A -> Prop) (Q : Prop) : (term127 A P Q) = (term128 A P Q).
Proof. exact (EQ_MP (@lem18905 A P Q) (@lem18904 A P Q)). Qed.
Lemma lem324276 {A : Type'} (P : A -> Prop) (Q : Prop) : (term127 A P Q) = (term128 A P Q).
Proof. exact (@lem324275 A P Q). Qed.
Lemma lem324277 {A B : Type'} (lt2 : type1402 A) (R : type1413 A B) (H : type549 A B) (f : A -> B) (x : A) : (term303 A B lt2 R H f x) = (term304 A B lt2 R H f x).
Proof. exact (@lem324276 A (term293 A B lt2 x R f) (term72 A B R H f x)). Qed.
Lemma lem324278 {A B : Type'} (lt2 : type1402 A) (x : A) (R : type1413 A B) (f : A -> B) (z : A) : (term305 A B lt2 x R f z) = (term287 A B lt2 x R f z).
Proof. exact (eq_refl (term305 A B lt2 x R f z)). Qed.
Lemma lem324279 {A B : Type'} (lt2 : type1402 A) (x : A) (R : type1413 A B) (f : A -> B) : (term306 A B lt2 x R f) = (term293 A B lt2 x R f).
Proof. exact (fun_ext (fun z : A => @lem324278 A B lt2 x R f z)). Qed.
Lemma lem324280 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem324281 {A B : Type'} (lt2 : type1402 A) (x : A) (R : type1413 A B) (f : A -> B) : (term307 A B lt2 x R f) = (term294 A B lt2 x R f).
Proof. exact (MK_COMB (@lem324280 A) (@lem324279 A B lt2 x R f)). Qed.
Lemma lem324282 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem324283 {A B : Type'} (lt2 : type1402 A) (x : A) (R : type1413 A B) (f : A -> B) : (term308 A B lt2 x R f) = (term296 A B lt2 x R f).
Proof. exact (MK_COMB (@lem324282) (@lem324281 A B lt2 x R f)). Qed.
Lemma lem324284 {A B : Type'} (R : type1413 A B) (H : type549 A B) (f : A -> B) (x : A) : (term72 A B R H f x) = (term72 A B R H f x).
Proof. exact (eq_refl (term72 A B R H f x)). Qed.
Lemma lem324285 {A B : Type'} (lt2 : type1402 A) (R : type1413 A B) (H : type549 A B) (f : A -> B) (x : A) : (term303 A B lt2 R H f x) = (term298 A B lt2 R H f x).
Proof. exact (MK_COMB (@lem324283 A B lt2 x R f) (@lem324284 A B R H f x)). Qed.
Lemma lem324286 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem324287 {A B : Type'} (lt2 : type1402 A) (R : type1413 A B) (H : type549 A B) (f : A -> B) (x : A) : (term309 A B lt2 R H f x) = (term310 A B lt2 R H f x).
Proof. exact (MK_COMB (@lem324286) (@lem324285 A B lt2 R H f x)). Qed.
Lemma lem324288 {A B : Type'} (lt2 : type1402 A) (x : A) (R : type1413 A B) (f : A -> B) (z : A) : (term305 A B lt2 x R f z) = (term287 A B lt2 x R f z).
Proof. exact (eq_refl (term305 A B lt2 x R f z)). Qed.
Lemma lem324289 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem324290 {A B : Type'} (lt2 : type1402 A) (x : A) (R : type1413 A B) (f : A -> B) (z : A) : (term311 A B lt2 x R f z) = (term312 A B lt2 x R f z).
Proof. exact (MK_COMB (@lem324289) (@lem324288 A B lt2 x R f z)). Qed.
Lemma lem324291 {A B : Type'} (R : type1413 A B) (H : type549 A B) (f : A -> B) (x : A) : (term72 A B R H f x) = (term72 A B R H f x).
Proof. exact (eq_refl (term72 A B R H f x)). Qed.
Lemma lem324292 {A B : Type'} (lt2 : type1402 A) (z : A) (R : type1413 A B) (H : type549 A B) (f : A -> B) (x : A) : (term313 A B lt2 z R H f x) = (term314 A B lt2 z R H f x).
Proof. exact (MK_COMB (@lem324290 A B lt2 x R f z) (@lem324291 A B R H f x)). Qed.
Lemma lem324293 {A B : Type'} (lt2 : type1402 A) (R : type1413 A B) (H : type549 A B) (f : A -> B) (x : A) : (term315 A B lt2 R H f x) = (term316 A B lt2 R H f x).
Proof. exact (fun_ext (fun z : A => @lem324292 A B lt2 z R H f x)). Qed.
Lemma lem324294 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem324295 {A B : Type'} (lt2 : type1402 A) (R : type1413 A B) (H : type549 A B) (f : A -> B) (x : A) : (term304 A B lt2 R H f x) = (term317 A B lt2 R H f x).
Proof. exact (MK_COMB (@lem324294 A) (@lem324293 A B lt2 R H f x)). Qed.
Lemma lem324296 {A B : Type'} (lt2 : type1402 A) (R : type1413 A B) (H : type549 A B) (f : A -> B) (x : A) : ((term303 A B lt2 R H f x) = (term304 A B lt2 R H f x)) = ((term298 A B lt2 R H f x) = (term317 A B lt2 R H f x)).
Proof. exact (MK_COMB (@lem324287 A B lt2 R H f x) (@lem324295 A B lt2 R H f x)). Qed.
Lemma lem324297 {A B : Type'} (lt2 : type1402 A) (R : type1413 A B) (H : type549 A B) (f : A -> B) (x : A) : (term298 A B lt2 R H f x) = (term317 A B lt2 R H f x).
Proof. exact (EQ_MP (@lem324296 A B lt2 R H f x) (@lem324277 A B lt2 R H f x)). Qed.
Lemma lem324298 {A B : Type'} (lt2 : type1402 A) (R : type1413 A B) (H : type549 A B) (f : A -> B) : (term299 A B lt2 R H f) = (term318 A B lt2 R H f).
Proof. exact (fun_ext (fun x : A => @lem324297 A B lt2 R H f x)). Qed.
Lemma lem324299 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem324300 {A B : Type'} (lt2 : type1402 A) (R : type1413 A B) (H : type549 A B) (f : A -> B) : (term300 A B lt2 R H f) = (term319 A B lt2 R H f).
Proof. exact (MK_COMB (@lem324299 A) (@lem324298 A B lt2 R H f)). Qed.
Lemma lem324302 {A B : Type'} (P : type1413 A B) : (term146 A B P) = (term147 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem324303 {A : Type'} (P : type1402 A) : (term213 A P) = (term214 A P).
Proof. exact (@lem324302 A A P). Qed.
Lemma lem324304 {A B : Type'} (lt2 : type1402 A) (R : type1413 A B) (H : type549 A B) (f : A -> B) : (term320 A B lt2 R H f) = (term321 A B lt2 R H f).
Proof. exact (@lem324303 A (term322 A B lt2 R H f)). Qed.
Lemma lem324305 {A B : Type'} (lt2 : type1402 A) (R : type1413 A B) (H : type549 A B) (f : A -> B) (x : A) : (term323 A B lt2 R H f x) = (term316 A B lt2 R H f x).
Proof. exact (eq_refl (term323 A B lt2 R H f x)). Qed.
Lemma lem324306 {A : Type'} (z : A) : z = z.
Proof. exact (eq_refl z). Qed.
Lemma lem324307 {A B : Type'} (lt2 : type1402 A) (R : type1413 A B) (H : type549 A B) (f : A -> B) (x : A) (z : A) : (term324 A B lt2 R H f x z) = (term325 A B lt2 R H f x z).
Proof. exact (MK_COMB (@lem324305 A B lt2 R H f x) (@lem324306 A z)). Qed.
Lemma lem324308 {A B : Type'} (lt2 : type1402 A) (z : A) (R : type1413 A B) (H : type549 A B) (f : A -> B) (x : A) : (term325 A B lt2 R H f x z) = (term314 A B lt2 z R H f x).
Proof. exact (eq_refl (term325 A B lt2 R H f x z)). Qed.
Lemma lem324309 {A B : Type'} (lt2 : type1402 A) (z : A) (R : type1413 A B) (H : type549 A B) (f : A -> B) (x : A) : (term324 A B lt2 R H f x z) = (term314 A B lt2 z R H f x).
Proof. exact (TRANS (@lem324307 A B lt2 R H f x z) (@lem324308 A B lt2 z R H f x)). Qed.
Lemma lem324310 {A B : Type'} (lt2 : type1402 A) (R : type1413 A B) (H : type549 A B) (f : A -> B) (x : A) : (term326 A B lt2 R H f x) = (term316 A B lt2 R H f x).
Proof. exact (fun_ext (fun z : A => @lem324309 A B lt2 z R H f x)). Qed.
Lemma lem324311 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem324312 {A B : Type'} (lt2 : type1402 A) (R : type1413 A B) (H : type549 A B) (f : A -> B) (x : A) : (term327 A B lt2 R H f x) = (term317 A B lt2 R H f x).
Proof. exact (MK_COMB (@lem324311 A) (@lem324310 A B lt2 R H f x)). Qed.
Lemma lem324313 {A B : Type'} (lt2 : type1402 A) (R : type1413 A B) (H : type549 A B) (f : A -> B) : (term328 A B lt2 R H f) = (term318 A B lt2 R H f).
Proof. exact (fun_ext (fun x : A => @lem324312 A B lt2 R H f x)). Qed.
Lemma lem324314 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem324315 {A B : Type'} (lt2 : type1402 A) (R : type1413 A B) (H : type549 A B) (f : A -> B) : (term320 A B lt2 R H f) = (term319 A B lt2 R H f).
Proof. exact (MK_COMB (@lem324314 A) (@lem324313 A B lt2 R H f)). Qed.
Lemma lem324316 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem324317 {A B : Type'} (lt2 : type1402 A) (R : type1413 A B) (H : type549 A B) (f : A -> B) : (term329 A B lt2 R H f) = (term330 A B lt2 R H f).
Proof. exact (MK_COMB (@lem324316) (@lem324315 A B lt2 R H f)). Qed.
Lemma lem324318 {A B : Type'} (lt2 : type1402 A) (R : type1413 A B) (H : type549 A B) (f : A -> B) (x : A) : (term323 A B lt2 R H f x) = (term316 A B lt2 R H f x).
Proof. exact (eq_refl (term323 A B lt2 R H f x)). Qed.
Lemma lem324319 {A : Type'} (z : A -> A) (x : A) : (z x) = (z x).
Proof. exact (eq_refl (z x)). Qed.
Lemma lem324320 {A B : Type'} (lt2 : type1402 A) (R : type1413 A B) (H : type549 A B) (f : A -> B) (z : A -> A) (x : A) : (term331 A B lt2 R H f z x) = (term332 A B lt2 R H f z x).
Proof. exact (MK_COMB (@lem324318 A B lt2 R H f x) (@lem324319 A z x)). Qed.
Lemma lem324321 {A B : Type'} (lt2 : type1402 A) (z : A -> A) (R : type1413 A B) (H : type549 A B) (f : A -> B) (x : A) : (term332 A B lt2 R H f z x) = (term333 A B lt2 z R H f x).
Proof. exact (eq_refl (term332 A B lt2 R H f z x)). Qed.
Lemma lem324322 {A B : Type'} (lt2 : type1402 A) (z : A -> A) (R : type1413 A B) (H : type549 A B) (f : A -> B) (x : A) : (term331 A B lt2 R H f z x) = (term333 A B lt2 z R H f x).
Proof. exact (TRANS (@lem324320 A B lt2 R H f z x) (@lem324321 A B lt2 z R H f x)). Qed.
Lemma lem324323 {A B : Type'} (lt2 : type1402 A) (z : A -> A) (R : type1413 A B) (H : type549 A B) (f : A -> B) : (term334 A B lt2 R H f z) = (term335 A B lt2 z R H f).
Proof. exact (fun_ext (fun x : A => @lem324322 A B lt2 z R H f x)). Qed.
Lemma lem324324 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem324325 {A B : Type'} (lt2 : type1402 A) (z : A -> A) (R : type1413 A B) (H : type549 A B) (f : A -> B) : (term336 A B lt2 R H f z) = (term337 A B lt2 z R H f).
Proof. exact (MK_COMB (@lem324324 A) (@lem324323 A B lt2 z R H f)). Qed.
Lemma lem324326 {A B : Type'} (lt2 : type1402 A) (R : type1413 A B) (H : type549 A B) (f : A -> B) : (term338 A B lt2 R H f) = (term339 A B lt2 R H f).
Proof. exact (fun_ext (fun z : A -> A => @lem324325 A B lt2 z R H f)). Qed.
Lemma lem324327 {A : Type'} : (@ex (A -> A)) = (@ex (A -> A)).
Proof. exact (eq_refl (@ex (A -> A))). Qed.
Lemma lem324328 {A B : Type'} (lt2 : type1402 A) (R : type1413 A B) (H : type549 A B) (f : A -> B) : (term321 A B lt2 R H f) = (term340 A B lt2 R H f).
Proof. exact (MK_COMB (@lem324327 A) (@lem324326 A B lt2 R H f)). Qed.
Lemma lem324329 {A B : Type'} (lt2 : type1402 A) (R : type1413 A B) (H : type549 A B) (f : A -> B) : ((term320 A B lt2 R H f) = (term321 A B lt2 R H f)) = ((term319 A B lt2 R H f) = (term340 A B lt2 R H f)).
Proof. exact (MK_COMB (@lem324317 A B lt2 R H f) (@lem324328 A B lt2 R H f)). Qed.
Lemma lem324330 {A B : Type'} (lt2 : type1402 A) (R : type1413 A B) (H : type549 A B) (f : A -> B) : (term319 A B lt2 R H f) = (term340 A B lt2 R H f).
Proof. exact (EQ_MP (@lem324329 A B lt2 R H f) (@lem324304 A B lt2 R H f)). Qed.
Lemma lem324331 {A B : Type'} (lt2 : type1402 A) (R : type1413 A B) (H : type549 A B) (f : A -> B) : (term300 A B lt2 R H f) = (term340 A B lt2 R H f).
Proof. exact (TRANS (@lem324300 A B lt2 R H f) (@lem324330 A B lt2 R H f)). Qed.
Lemma lem324332 {A B : Type'} (lt2 : type1402 A) (R : type1413 A B) (H : type549 A B) : (term301 A B lt2 R H) = (term341 A B lt2 R H).
Proof. exact (fun_ext (fun f : A -> B => @lem324331 A B lt2 R H f)). Qed.
Lemma lem324333 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem324334 {A B : Type'} (lt2 : type1402 A) (R : type1413 A B) (H : type549 A B) : (term302 A B lt2 R H) = (term342 A B lt2 R H).
Proof. exact (MK_COMB (@lem324333 A B) (@lem324332 A B lt2 R H)). Qed.
Lemma lem324336 {A B : Type'} (P : type1413 A B) : (term146 A B P) = (term147 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem324337 {A B : Type'} (P : type513 A B) : (term238 A B P) = (term239 A B P).
Proof. exact (@lem324336 (A -> B) (A -> A) P). Qed.
Lemma lem324338 {A B : Type'} (lt2 : type1402 A) (R : type1413 A B) (H : type549 A B) : (term343 A B lt2 R H) = (term344 A B lt2 R H).
Proof. exact (@lem324337 A B (term345 A B lt2 R H)). Qed.
Lemma lem324339 {A B : Type'} (lt2 : type1402 A) (R : type1413 A B) (H : type549 A B) (f : A -> B) : (term346 A B lt2 R H f) = (term339 A B lt2 R H f).
Proof. exact (eq_refl (term346 A B lt2 R H f)). Qed.
Lemma lem324340 {A : Type'} (z : A -> A) : z = z.
Proof. exact (eq_refl z). Qed.
Lemma lem324341 {A B : Type'} (lt2 : type1402 A) (R : type1413 A B) (H : type549 A B) (f : A -> B) (z : A -> A) : (term347 A B lt2 R H f z) = (term348 A B lt2 R H f z).
Proof. exact (MK_COMB (@lem324339 A B lt2 R H f) (@lem324340 A z)). Qed.
Lemma lem324342 {A B : Type'} (lt2 : type1402 A) (z : A -> A) (R : type1413 A B) (H : type549 A B) (f : A -> B) : (term348 A B lt2 R H f z) = (term337 A B lt2 z R H f).
Proof. exact (eq_refl (term348 A B lt2 R H f z)). Qed.
Lemma lem324343 {A B : Type'} (lt2 : type1402 A) (z : A -> A) (R : type1413 A B) (H : type549 A B) (f : A -> B) : (term347 A B lt2 R H f z) = (term337 A B lt2 z R H f).
Proof. exact (TRANS (@lem324341 A B lt2 R H f z) (@lem324342 A B lt2 z R H f)). Qed.
Lemma lem324344 {A B : Type'} (lt2 : type1402 A) (R : type1413 A B) (H : type549 A B) (f : A -> B) : (term349 A B lt2 R H f) = (term339 A B lt2 R H f).
Proof. exact (fun_ext (fun z : A -> A => @lem324343 A B lt2 z R H f)). Qed.
Lemma lem324345 {A : Type'} : (@ex (A -> A)) = (@ex (A -> A)).
Proof. exact (eq_refl (@ex (A -> A))). Qed.
Lemma lem324346 {A B : Type'} (lt2 : type1402 A) (R : type1413 A B) (H : type549 A B) (f : A -> B) : (term350 A B lt2 R H f) = (term340 A B lt2 R H f).
Proof. exact (MK_COMB (@lem324345 A) (@lem324344 A B lt2 R H f)). Qed.
Lemma lem324347 {A B : Type'} (lt2 : type1402 A) (R : type1413 A B) (H : type549 A B) : (term351 A B lt2 R H) = (term341 A B lt2 R H).
Proof. exact (fun_ext (fun f : A -> B => @lem324346 A B lt2 R H f)). Qed.
Lemma lem324348 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem324349 {A B : Type'} (lt2 : type1402 A) (R : type1413 A B) (H : type549 A B) : (term343 A B lt2 R H) = (term342 A B lt2 R H).
Proof. exact (MK_COMB (@lem324348 A B) (@lem324347 A B lt2 R H)). Qed.
Lemma lem324350 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem324351 {A B : Type'} (lt2 : type1402 A) (R : type1413 A B) (H : type549 A B) : (term352 A B lt2 R H) = (term353 A B lt2 R H).
Proof. exact (MK_COMB (@lem324350) (@lem324349 A B lt2 R H)). Qed.
Lemma lem324352 {A B : Type'} (lt2 : type1402 A) (R : type1413 A B) (H : type549 A B) (f : A -> B) : (term346 A B lt2 R H f) = (term339 A B lt2 R H f).
Proof. exact (eq_refl (term346 A B lt2 R H f)). Qed.
Lemma lem324353 {A B : Type'} (z : type548 A B) (f : A -> B) : (z f) = (z f).
Proof. exact (eq_refl (z f)). Qed.
Lemma lem324354 {A B : Type'} (lt2 : type1402 A) (R : type1413 A B) (H : type549 A B) (z : type548 A B) (f : A -> B) : (term354 A B lt2 R H z f) = (term355 A B lt2 R H z f).
Proof. exact (MK_COMB (@lem324352 A B lt2 R H f) (@lem324353 A B z f)). Qed.
Lemma lem324355 {A B : Type'} (lt2 : type1402 A) (z : type548 A B) (R : type1413 A B) (H : type549 A B) (f : A -> B) : (term355 A B lt2 R H z f) = (term356 A B lt2 z R H f).
Proof. exact (eq_refl (term355 A B lt2 R H z f)). Qed.
Lemma lem324356 {A B : Type'} (lt2 : type1402 A) (z : type548 A B) (R : type1413 A B) (H : type549 A B) (f : A -> B) : (term354 A B lt2 R H z f) = (term356 A B lt2 z R H f).
Proof. exact (TRANS (@lem324354 A B lt2 R H z f) (@lem324355 A B lt2 z R H f)). Qed.
Lemma lem324357 {A B : Type'} (lt2 : type1402 A) (z : type548 A B) (R : type1413 A B) (H : type549 A B) : (term357 A B lt2 R H z) = (term358 A B lt2 z R H).
Proof. exact (fun_ext (fun f : A -> B => @lem324356 A B lt2 z R H f)). Qed.
Lemma lem324358 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem324359 {A B : Type'} (lt2 : type1402 A) (z : type548 A B) (R : type1413 A B) (H : type549 A B) : (term359 A B lt2 R H z) = (term360 A B lt2 z R H).
Proof. exact (MK_COMB (@lem324358 A B) (@lem324357 A B lt2 z R H)). Qed.
Lemma lem324360 {A B : Type'} (lt2 : type1402 A) (R : type1413 A B) (H : type549 A B) : (term361 A B lt2 R H) = (term362 A B lt2 R H).
Proof. exact (fun_ext (fun z : type548 A B => @lem324359 A B lt2 z R H)). Qed.
Lemma lem324361 {A B : Type'} : (@ex ((A -> B) -> A -> A)) = (@ex ((A -> B) -> A -> A)).
Proof. exact (eq_refl (@ex ((A -> B) -> A -> A))). Qed.
Lemma lem324362 {A B : Type'} (lt2 : type1402 A) (R : type1413 A B) (H : type549 A B) : (term344 A B lt2 R H) = (term363 A B lt2 R H).
Proof. exact (MK_COMB (@lem324361 A B) (@lem324360 A B lt2 R H)). Qed.
Lemma lem324363 {A B : Type'} (lt2 : type1402 A) (R : type1413 A B) (H : type549 A B) : ((term343 A B lt2 R H) = (term344 A B lt2 R H)) = ((term342 A B lt2 R H) = (term363 A B lt2 R H)).
Proof. exact (MK_COMB (@lem324351 A B lt2 R H) (@lem324362 A B lt2 R H)). Qed.
Lemma lem324364 {A B : Type'} (lt2 : type1402 A) (R : type1413 A B) (H : type549 A B) : (term342 A B lt2 R H) = (term363 A B lt2 R H).
Proof. exact (EQ_MP (@lem324363 A B lt2 R H) (@lem324338 A B lt2 R H)). Qed.
Lemma lem324366 {A B : Type'} (lt2 : type1402 A) (R : type1413 A B) (H : type549 A B) : (term302 A B lt2 R H) = (term363 A B lt2 R H).
Proof. exact (TRANS (@lem324334 A B lt2 R H) (@lem324364 A B lt2 R H)). Qed.
Lemma lem324367 {A B : Type'} (lt2 : type1402 A) (R : type1413 A B) (H : type549 A B) : (term3 A B lt2 R H) = (term363 A B lt2 R H).
Proof. exact (TRANS (@lem324172 A B lt2 R H) (@lem324366 A B lt2 R H)). Qed.
Lemma lem324368 {A B : Type'} (lt2 : type1402 A) (R : type1413 A B) (H : type549 A B) (h1 : term3 A B lt2 R H) : term363 A B lt2 R H.
Proof. exact (EQ_MP (@lem324367 A B lt2 R H) (@lem323631 A B lt2 R H h1)). Qed.
Lemma lem324375 {A B : Type'} (lt2 : type1402 A) (x : A) (R' : type1413 A B) (f : A -> B) (z : A) : (term56 A B lt2 x R' f z) = (term364 A B lt2 x R' f z).
Proof. exact (@lem17265 (lt2 z x) (term173 A B R' f z)). Qed.
Lemma lem324376 {A B : Type'} (lt2 : type1402 A) (x : A) (R' : type1413 A B) (f : A -> B) : (term57 A B lt2 x R' f) = (term365 A B lt2 x R' f).
Proof. exact (fun_ext (fun z : A => @lem324375 A B lt2 x R' f z)). Qed.
Lemma lem324377 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem324378 {A B : Type'} (lt2 : type1402 A) (x : A) (R' : type1413 A B) (f : A -> B) : (term58 A B lt2 x R' f) = (term366 A B lt2 x R' f).
Proof. exact (MK_COMB (@lem324377 A) (@lem324376 A B lt2 x R' f)). Qed.
Lemma lem324379 {A B : Type'} (R' : type1413 A B) (H : type549 A B) (f : A -> B) (x : A) : (term367 A B R' H f x) = (term367 A B R' H f x).
Proof. exact (eq_refl (term367 A B R' H f x)). Qed.
Lemma lem324380 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem324381 {A B : Type'} (lt2 : type1402 A) (x : A) (R' : type1413 A B) (f : A -> B) : (term368 A B lt2 x R' f) = (term369 A B lt2 x R' f).
Proof. exact (MK_COMB (@lem324380) (@lem324378 A B lt2 x R' f)). Qed.
Lemma lem324382 {A B : Type'} (lt2 : type1402 A) (R' : type1413 A B) (H : type549 A B) (f : A -> B) (x : A) : (term370 A B lt2 R' H f x) = (term371 A B lt2 R' H f x).
Proof. exact (MK_COMB (@lem324381 A B lt2 x R' f) (@lem324379 A B R' H f x)). Qed.
Lemma lem324383 {A B : Type'} (lt2 : type1402 A) (R' : type1413 A B) (H : type549 A B) (f : A -> B) (x : A) : (term372 A B lt2 R' H f x) = (term370 A B lt2 R' H f x).
Proof. exact (@lem17362 (term58 A B lt2 x R' f) (term72 A B R' H f x)). Qed.
Lemma lem324384 {A B : Type'} (lt2 : type1402 A) (R' : type1413 A B) (H : type549 A B) (f : A -> B) (x : A) : (term372 A B lt2 R' H f x) = (term371 A B lt2 R' H f x).
Proof. exact (TRANS (@lem324383 A B lt2 R' H f x) (@lem324382 A B lt2 R' H f x)). Qed.
Lemma lem324385 {A : Type'} (P : A -> Prop) : (term112 A P) = (term113 A P).
Proof. exact (@lem18392 A P). Qed.
Lemma lem324386 {A B : Type'} (lt2 : type1402 A) (R' : type1413 A B) (H : type549 A B) (f : A -> B) : (term373 A B lt2 R' H f) = (term374 A B lt2 R' H f).
Proof. exact (@lem324385 A (term75 A B lt2 R' H f)). Qed.
Lemma lem324387 {A B : Type'} (lt2 : type1402 A) (R' : type1413 A B) (H : type549 A B) (f : A -> B) (x : A) : (term375 A B lt2 R' H f x) = (term74 A B lt2 R' H f x).
Proof. exact (eq_refl (term375 A B lt2 R' H f x)). Qed.
Lemma lem324388 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem324389 {A B : Type'} (lt2 : type1402 A) (R' : type1413 A B) (H : type549 A B) (f : A -> B) (x : A) : (term376 A B lt2 R' H f x) = (term372 A B lt2 R' H f x).
Proof. exact (MK_COMB (@lem324388) (@lem324387 A B lt2 R' H f x)). Qed.
Lemma lem324390 {A B : Type'} (lt2 : type1402 A) (R' : type1413 A B) (H : type549 A B) (f : A -> B) (x : A) : (term376 A B lt2 R' H f x) = (term371 A B lt2 R' H f x).
Proof. exact (TRANS (@lem324389 A B lt2 R' H f x) (@lem324384 A B lt2 R' H f x)). Qed.
Lemma lem324391 {A B : Type'} (lt2 : type1402 A) (R' : type1413 A B) (H : type549 A B) (f : A -> B) : (term377 A B lt2 R' H f) = (term378 A B lt2 R' H f).
Proof. exact (fun_ext (fun x : A => @lem324390 A B lt2 R' H f x)). Qed.
Lemma lem324392 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem324393 {A B : Type'} (lt2 : type1402 A) (R' : type1413 A B) (H : type549 A B) (f : A -> B) : (term374 A B lt2 R' H f) = (term379 A B lt2 R' H f).
Proof. exact (MK_COMB (@lem324392 A) (@lem324391 A B lt2 R' H f)). Qed.
Lemma lem324394 {A B : Type'} (lt2 : type1402 A) (R' : type1413 A B) (H : type549 A B) (f : A -> B) : (term373 A B lt2 R' H f) = (term379 A B lt2 R' H f).
Proof. exact (TRANS (@lem324386 A B lt2 R' H f) (@lem324393 A B lt2 R' H f)). Qed.
Lemma lem324395 {A B : Type'} (P : type572 A B) : (term380 A B P) = (term381 A B P).
Proof. exact (@lem18392 (A -> B) P). Qed.
Lemma lem324396 {A B : Type'} (lt2 : type1402 A) (R' : type1413 A B) (H : type549 A B) : (term382 A B lt2 R' H) = (term383 A B lt2 R' H).
Proof. exact (@lem324395 A B (term77 A B lt2 R' H)). Qed.
Lemma lem324397 {A B : Type'} (lt2 : type1402 A) (R' : type1413 A B) (H : type549 A B) (f : A -> B) : (term384 A B lt2 R' H f) = (term76 A B lt2 R' H f).
Proof. exact (eq_refl (term384 A B lt2 R' H f)). Qed.
Lemma lem324398 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem324399 {A B : Type'} (lt2 : type1402 A) (R' : type1413 A B) (H : type549 A B) (f : A -> B) : (term385 A B lt2 R' H f) = (term373 A B lt2 R' H f).
Proof. exact (MK_COMB (@lem324398) (@lem324397 A B lt2 R' H f)). Qed.
Lemma lem324400 {A B : Type'} (lt2 : type1402 A) (R' : type1413 A B) (H : type549 A B) (f : A -> B) : (term385 A B lt2 R' H f) = (term379 A B lt2 R' H f).
Proof. exact (TRANS (@lem324399 A B lt2 R' H f) (@lem324394 A B lt2 R' H f)). Qed.
Lemma lem324401 {A B : Type'} (lt2 : type1402 A) (R' : type1413 A B) (H : type549 A B) : (term386 A B lt2 R' H) = (term387 A B lt2 R' H).
Proof. exact (fun_ext (fun f : A -> B => @lem324400 A B lt2 R' H f)). Qed.
Lemma lem324402 {A B : Type'} : (@ex (A -> B)) = (@ex (A -> B)).
Proof. exact (eq_refl (@ex (A -> B))). Qed.
Lemma lem324403 {A B : Type'} (lt2 : type1402 A) (R' : type1413 A B) (H : type549 A B) : (term383 A B lt2 R' H) = (term388 A B lt2 R' H).
Proof. exact (MK_COMB (@lem324402 A B) (@lem324401 A B lt2 R' H)). Qed.
Lemma lem324404 {A B : Type'} (lt2 : type1402 A) (R' : type1413 A B) (H : type549 A B) : (term382 A B lt2 R' H) = (term388 A B lt2 R' H).
Proof. exact (TRANS (@lem324396 A B lt2 R' H) (@lem324403 A B lt2 R' H)). Qed.
Lemma lem324411 {A B : Type'} (R : type1413 A B) (R' : type1413 A B) (a0 : A) (a1 : B) : (term67 A B R R' a0 a1) = (term389 A B R R' a0 a1).
Proof. exact (@lem17265 (R a0 a1) (R' a0 a1)). Qed.
Lemma lem324412 {A B : Type'} (R : type1413 A B) (R' : type1413 A B) (a0 : A) : (term68 A B R R' a0) = (term390 A B R R' a0).
Proof. exact (fun_ext (fun a1 : B => @lem324411 A B R R' a0 a1)). Qed.
Lemma lem324413 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem324414 {A B : Type'} (R : type1413 A B) (R' : type1413 A B) (a0 : A) : (term69 A B R R' a0) = (term391 A B R R' a0).
Proof. exact (MK_COMB (@lem324413 B) (@lem324412 A B R R' a0)). Qed.
Lemma lem324415 {A B : Type'} (R : type1413 A B) (R' : type1413 A B) : (term70 A B R R') = (term392 A B R R').
Proof. exact (fun_ext (fun a0 : A => @lem324414 A B R R' a0)). Qed.
Lemma lem324416 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem324417 {A B : Type'} (R : type1413 A B) (R' : type1413 A B) : (term71 A B R R') = (term393 A B R R').
Proof. exact (MK_COMB (@lem324416 A) (@lem324415 A B R R')). Qed.
Lemma lem324418 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem324419 {A B : Type'} (lt2 : type1402 A) (R' : type1413 A B) (H : type549 A B) : (term394 A B lt2 R' H) = (term395 A B lt2 R' H).
Proof. exact (MK_COMB (@lem324418) (@lem324404 A B lt2 R' H)). Qed.
Lemma lem324420 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (R : type1413 A B) (R' : type1413 A B) : (term396 A B lt2 H R R') = (term397 A B lt2 H R R').
Proof. exact (MK_COMB (@lem324419 A B lt2 R' H) (@lem324417 A B R R')). Qed.
Lemma lem324421 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (R : type1413 A B) (R' : type1413 A B) : (term78 A B lt2 H R R') = (term396 A B lt2 H R R').
Proof. exact (@lem17265 (term3 A B lt2 R' H) (term71 A B R R')). Qed.
Lemma lem324422 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (R : type1413 A B) (R' : type1413 A B) : (term78 A B lt2 H R R') = (term397 A B lt2 H R R').
Proof. exact (TRANS (@lem324421 A B lt2 H R R') (@lem324420 A B lt2 H R R')). Qed.
Lemma lem324423 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (R : type1413 A B) : (term79 A B lt2 H R) = (term398 A B lt2 H R).
Proof. exact (fun_ext (fun R' : type1413 A B => @lem324422 A B lt2 H R R')). Qed.
Lemma lem324424 {A B : Type'} : (@all (A -> B -> Prop)) = (@all (A -> B -> Prop)).
Proof. exact (eq_refl (@all (A -> B -> Prop))). Qed.
Lemma lem324425 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (R : type1413 A B) : (term5 A B lt2 H R) = (term399 A B lt2 H R).
Proof. exact (MK_COMB (@lem324424 A B) (@lem324423 A B lt2 H R)). Qed.
Lemma lem324628 {A : Type'} (P : A -> Prop) (Q : Prop) : (term127 A P Q) = (term128 A P Q).
Proof. exact (EQ_MP (@lem18905 A P Q) (@lem18904 A P Q)). Qed.
Lemma lem324629 {A B : Type'} (P : type572 A B) (Q : Prop) : (term400 A B P Q) = (term401 A B P Q).
Proof. exact (@lem324628 (A -> B) P Q). Qed.
Lemma lem324630 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (R : type1413 A B) (R' : type1413 A B) : (term402 A B lt2 H R R') = (term403 A B lt2 H R R').
Proof. exact (@lem324629 A B (term387 A B lt2 R' H) (term393 A B R R')). Qed.
Lemma lem324631 {A B : Type'} (lt2 : type1402 A) (R' : type1413 A B) (H : type549 A B) (f : A -> B) : (term404 A B lt2 R' H f) = (term379 A B lt2 R' H f).
Proof. exact (eq_refl (term404 A B lt2 R' H f)). Qed.
Lemma lem324632 {A B : Type'} (lt2 : type1402 A) (R' : type1413 A B) (H : type549 A B) : (term405 A B lt2 R' H) = (term387 A B lt2 R' H).
Proof. exact (fun_ext (fun f : A -> B => @lem324631 A B lt2 R' H f)). Qed.
Lemma lem324633 {A B : Type'} : (@ex (A -> B)) = (@ex (A -> B)).
Proof. exact (eq_refl (@ex (A -> B))). Qed.
Lemma lem324634 {A B : Type'} (lt2 : type1402 A) (R' : type1413 A B) (H : type549 A B) : (term406 A B lt2 R' H) = (term388 A B lt2 R' H).
Proof. exact (MK_COMB (@lem324633 A B) (@lem324632 A B lt2 R' H)). Qed.
Lemma lem324635 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem324636 {A B : Type'} (lt2 : type1402 A) (R' : type1413 A B) (H : type549 A B) : (term407 A B lt2 R' H) = (term395 A B lt2 R' H).
Proof. exact (MK_COMB (@lem324635) (@lem324634 A B lt2 R' H)). Qed.
Lemma lem324637 {A B : Type'} (R : type1413 A B) (R' : type1413 A B) : (term393 A B R R') = (term393 A B R R').
Proof. exact (eq_refl (term393 A B R R')). Qed.
Lemma lem324638 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (R : type1413 A B) (R' : type1413 A B) : (term402 A B lt2 H R R') = (term397 A B lt2 H R R').
Proof. exact (MK_COMB (@lem324636 A B lt2 R' H) (@lem324637 A B R R')). Qed.
Lemma lem324639 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem324640 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (R : type1413 A B) (R' : type1413 A B) : (term408 A B lt2 H R R') = (term409 A B lt2 H R R').
Proof. exact (MK_COMB (@lem324639) (@lem324638 A B lt2 H R R')). Qed.
Lemma lem324641 {A B : Type'} (lt2 : type1402 A) (R' : type1413 A B) (H : type549 A B) (f : A -> B) : (term404 A B lt2 R' H f) = (term379 A B lt2 R' H f).
Proof. exact (eq_refl (term404 A B lt2 R' H f)). Qed.
Lemma lem324642 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem324643 {A B : Type'} (lt2 : type1402 A) (R' : type1413 A B) (H : type549 A B) (f : A -> B) : (term410 A B lt2 R' H f) = (term411 A B lt2 R' H f).
Proof. exact (MK_COMB (@lem324642) (@lem324641 A B lt2 R' H f)). Qed.
Lemma lem324644 {A B : Type'} (R : type1413 A B) (R' : type1413 A B) : (term393 A B R R') = (term393 A B R R').
Proof. exact (eq_refl (term393 A B R R')). Qed.
Lemma lem324645 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (f : A -> B) (R : type1413 A B) (R' : type1413 A B) : (term412 A B lt2 H f R R') = (term413 A B lt2 H f R R').
Proof. exact (MK_COMB (@lem324643 A B lt2 R' H f) (@lem324644 A B R R')). Qed.
Lemma lem324646 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (R : type1413 A B) (R' : type1413 A B) : (term414 A B lt2 H R R') = (term415 A B lt2 H R R').
Proof. exact (fun_ext (fun f : A -> B => @lem324645 A B lt2 H f R R')). Qed.
Lemma lem324647 {A B : Type'} : (@ex (A -> B)) = (@ex (A -> B)).
Proof. exact (eq_refl (@ex (A -> B))). Qed.
Lemma lem324648 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (R : type1413 A B) (R' : type1413 A B) : (term403 A B lt2 H R R') = (term416 A B lt2 H R R').
Proof. exact (MK_COMB (@lem324647 A B) (@lem324646 A B lt2 H R R')). Qed.
Lemma lem324649 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (R : type1413 A B) (R' : type1413 A B) : ((term402 A B lt2 H R R') = (term403 A B lt2 H R R')) = ((term397 A B lt2 H R R') = (term416 A B lt2 H R R')).
Proof. exact (MK_COMB (@lem324640 A B lt2 H R R') (@lem324648 A B lt2 H R R')). Qed.
Lemma lem324650 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (R : type1413 A B) (R' : type1413 A B) : (term397 A B lt2 H R R') = (term416 A B lt2 H R R').
Proof. exact (EQ_MP (@lem324649 A B lt2 H R R') (@lem324630 A B lt2 H R R')). Qed.
Lemma lem324652 {A : Type'} (P : A -> Prop) (Q : Prop) : (term127 A P Q) = (term128 A P Q).
Proof. exact (EQ_MP (@lem18905 A P Q) (@lem18904 A P Q)). Qed.
Lemma lem324653 {A : Type'} (P : A -> Prop) (Q : Prop) : (term127 A P Q) = (term128 A P Q).
Proof. exact (@lem324652 A P Q). Qed.
Lemma lem324654 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (f : A -> B) (R : type1413 A B) (R' : type1413 A B) : (term417 A B lt2 H f R R') = (term418 A B lt2 H f R R').
Proof. exact (@lem324653 A (term378 A B lt2 R' H f) (term393 A B R R')). Qed.
Lemma lem324655 {A B : Type'} (lt2 : type1402 A) (R' : type1413 A B) (H : type549 A B) (f : A -> B) (x : A) : (term419 A B lt2 R' H f x) = (term371 A B lt2 R' H f x).
Proof. exact (eq_refl (term419 A B lt2 R' H f x)). Qed.
Lemma lem324656 {A B : Type'} (lt2 : type1402 A) (R' : type1413 A B) (H : type549 A B) (f : A -> B) : (term420 A B lt2 R' H f) = (term378 A B lt2 R' H f).
Proof. exact (fun_ext (fun x : A => @lem324655 A B lt2 R' H f x)). Qed.
Lemma lem324657 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem324658 {A B : Type'} (lt2 : type1402 A) (R' : type1413 A B) (H : type549 A B) (f : A -> B) : (term421 A B lt2 R' H f) = (term379 A B lt2 R' H f).
Proof. exact (MK_COMB (@lem324657 A) (@lem324656 A B lt2 R' H f)). Qed.
Lemma lem324659 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem324660 {A B : Type'} (lt2 : type1402 A) (R' : type1413 A B) (H : type549 A B) (f : A -> B) : (term422 A B lt2 R' H f) = (term411 A B lt2 R' H f).
Proof. exact (MK_COMB (@lem324659) (@lem324658 A B lt2 R' H f)). Qed.
Lemma lem324661 {A B : Type'} (R : type1413 A B) (R' : type1413 A B) : (term393 A B R R') = (term393 A B R R').
Proof. exact (eq_refl (term393 A B R R')). Qed.
Lemma lem324662 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (f : A -> B) (R : type1413 A B) (R' : type1413 A B) : (term417 A B lt2 H f R R') = (term413 A B lt2 H f R R').
Proof. exact (MK_COMB (@lem324660 A B lt2 R' H f) (@lem324661 A B R R')). Qed.
Lemma lem324663 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem324664 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (f : A -> B) (R : type1413 A B) (R' : type1413 A B) : (term423 A B lt2 H f R R') = (term424 A B lt2 H f R R').
Proof. exact (MK_COMB (@lem324663) (@lem324662 A B lt2 H f R R')). Qed.
Lemma lem324665 {A B : Type'} (lt2 : type1402 A) (R' : type1413 A B) (H : type549 A B) (f : A -> B) (x : A) : (term419 A B lt2 R' H f x) = (term371 A B lt2 R' H f x).
Proof. exact (eq_refl (term419 A B lt2 R' H f x)). Qed.
Lemma lem324666 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem324667 {A B : Type'} (lt2 : type1402 A) (R' : type1413 A B) (H : type549 A B) (f : A -> B) (x : A) : (term425 A B lt2 R' H f x) = (term426 A B lt2 R' H f x).
Proof. exact (MK_COMB (@lem324666) (@lem324665 A B lt2 R' H f x)). Qed.
Lemma lem324668 {A B : Type'} (R : type1413 A B) (R' : type1413 A B) : (term393 A B R R') = (term393 A B R R').
Proof. exact (eq_refl (term393 A B R R')). Qed.
Lemma lem324669 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (f : A -> B) (x : A) (R : type1413 A B) (R' : type1413 A B) : (term427 A B lt2 H f x R R') = (term428 A B lt2 H f x R R').
Proof. exact (MK_COMB (@lem324667 A B lt2 R' H f x) (@lem324668 A B R R')). Qed.
Lemma lem324670 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (f : A -> B) (R : type1413 A B) (R' : type1413 A B) : (term429 A B lt2 H f R R') = (term430 A B lt2 H f R R').
Proof. exact (fun_ext (fun x : A => @lem324669 A B lt2 H f x R R')). Qed.
Lemma lem324671 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem324672 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (f : A -> B) (R : type1413 A B) (R' : type1413 A B) : (term418 A B lt2 H f R R') = (term431 A B lt2 H f R R').
Proof. exact (MK_COMB (@lem324671 A) (@lem324670 A B lt2 H f R R')). Qed.
Lemma lem324673 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (f : A -> B) (R : type1413 A B) (R' : type1413 A B) : ((term417 A B lt2 H f R R') = (term418 A B lt2 H f R R')) = ((term413 A B lt2 H f R R') = (term431 A B lt2 H f R R')).
Proof. exact (MK_COMB (@lem324664 A B lt2 H f R R') (@lem324672 A B lt2 H f R R')). Qed.
Lemma lem324674 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (f : A -> B) (R : type1413 A B) (R' : type1413 A B) : (term413 A B lt2 H f R R') = (term431 A B lt2 H f R R').
Proof. exact (EQ_MP (@lem324673 A B lt2 H f R R') (@lem324654 A B lt2 H f R R')). Qed.
Lemma lem324675 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (R : type1413 A B) (R' : type1413 A B) : (term415 A B lt2 H R R') = (term432 A B lt2 H R R').
Proof. exact (fun_ext (fun f : A -> B => @lem324674 A B lt2 H f R R')). Qed.
Lemma lem324676 {A B : Type'} : (@ex (A -> B)) = (@ex (A -> B)).
Proof. exact (eq_refl (@ex (A -> B))). Qed.
Lemma lem324677 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (R : type1413 A B) (R' : type1413 A B) : (term416 A B lt2 H R R') = (term433 A B lt2 H R R').
Proof. exact (MK_COMB (@lem324676 A B) (@lem324675 A B lt2 H R R')). Qed.
Lemma lem324678 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (R : type1413 A B) (R' : type1413 A B) : (term397 A B lt2 H R R') = (term433 A B lt2 H R R').
Proof. exact (TRANS (@lem324650 A B lt2 H R R') (@lem324677 A B lt2 H R R')). Qed.
Lemma lem324679 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (R : type1413 A B) : (term398 A B lt2 H R) = (term434 A B lt2 H R).
Proof. exact (fun_ext (fun R' : type1413 A B => @lem324678 A B lt2 H R R')). Qed.
Lemma lem324680 {A B : Type'} : (@all (A -> B -> Prop)) = (@all (A -> B -> Prop)).
Proof. exact (eq_refl (@all (A -> B -> Prop))). Qed.
Lemma lem324681 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (R : type1413 A B) : (term399 A B lt2 H R) = (term435 A B lt2 H R).
Proof. exact (MK_COMB (@lem324680 A B) (@lem324679 A B lt2 H R)). Qed.
Lemma lem324683 {A B : Type'} (P : type1413 A B) : (term146 A B P) = (term147 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem324684 {A B : Type'} (P : type454 A B) : (term436 A B P) = (term437 A B P).
Proof. exact (@lem324683 (type1413 A B) (A -> B) P). Qed.
Lemma lem324685 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (R : type1413 A B) : (term438 A B lt2 H R) = (term439 A B lt2 H R).
Proof. exact (@lem324684 A B (term440 A B lt2 H R)). Qed.
Lemma lem324686 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (R : type1413 A B) (R' : type1413 A B) : (term441 A B lt2 H R R') = (term432 A B lt2 H R R').
Proof. exact (eq_refl (term441 A B lt2 H R R')). Qed.
Lemma lem324687 {A B : Type'} (f : A -> B) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem324688 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (R : type1413 A B) (R' : type1413 A B) (f : A -> B) : (term442 A B lt2 H R R' f) = (term443 A B lt2 H R R' f).
Proof. exact (MK_COMB (@lem324686 A B lt2 H R R') (@lem324687 A B f)). Qed.
Lemma lem324689 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (f : A -> B) (R : type1413 A B) (R' : type1413 A B) : (term443 A B lt2 H R R' f) = (term431 A B lt2 H f R R').
Proof. exact (eq_refl (term443 A B lt2 H R R' f)). Qed.
Lemma lem324690 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (f : A -> B) (R : type1413 A B) (R' : type1413 A B) : (term442 A B lt2 H R R' f) = (term431 A B lt2 H f R R').
Proof. exact (TRANS (@lem324688 A B lt2 H R R' f) (@lem324689 A B lt2 H f R R')). Qed.
Lemma lem324691 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (R : type1413 A B) (R' : type1413 A B) : (term444 A B lt2 H R R') = (term432 A B lt2 H R R').
Proof. exact (fun_ext (fun f : A -> B => @lem324690 A B lt2 H f R R')). Qed.
Lemma lem324692 {A B : Type'} : (@ex (A -> B)) = (@ex (A -> B)).
Proof. exact (eq_refl (@ex (A -> B))). Qed.
Lemma lem324693 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (R : type1413 A B) (R' : type1413 A B) : (term445 A B lt2 H R R') = (term433 A B lt2 H R R').
Proof. exact (MK_COMB (@lem324692 A B) (@lem324691 A B lt2 H R R')). Qed.
Lemma lem324694 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (R : type1413 A B) : (term446 A B lt2 H R) = (term434 A B lt2 H R).
Proof. exact (fun_ext (fun R' : type1413 A B => @lem324693 A B lt2 H R R')). Qed.
Lemma lem324695 {A B : Type'} : (@all (A -> B -> Prop)) = (@all (A -> B -> Prop)).
Proof. exact (eq_refl (@all (A -> B -> Prop))). Qed.
Lemma lem324696 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (R : type1413 A B) : (term438 A B lt2 H R) = (term435 A B lt2 H R).
Proof. exact (MK_COMB (@lem324695 A B) (@lem324694 A B lt2 H R)). Qed.
Lemma lem324697 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem324698 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (R : type1413 A B) : (term447 A B lt2 H R) = (term448 A B lt2 H R).
Proof. exact (MK_COMB (@lem324697) (@lem324696 A B lt2 H R)). Qed.
Lemma lem324699 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (R : type1413 A B) (R' : type1413 A B) : (term441 A B lt2 H R R') = (term432 A B lt2 H R R').
Proof. exact (eq_refl (term441 A B lt2 H R R')). Qed.
Lemma lem324700 {A B : Type'} (f : type467 A B) (R' : type1413 A B) : (f R') = (f R').
Proof. exact (eq_refl (f R')). Qed.
Lemma lem324701 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (R : type1413 A B) (f : type467 A B) (R' : type1413 A B) : (term449 A B lt2 H R f R') = (term450 A B lt2 H R f R').
Proof. exact (MK_COMB (@lem324699 A B lt2 H R R') (@lem324700 A B f R')). Qed.
Lemma lem324702 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (f : type467 A B) (R : type1413 A B) (R' : type1413 A B) : (term450 A B lt2 H R f R') = (term451 A B lt2 H f R R').
Proof. exact (eq_refl (term450 A B lt2 H R f R')). Qed.
Lemma lem324703 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (f : type467 A B) (R : type1413 A B) (R' : type1413 A B) : (term449 A B lt2 H R f R') = (term451 A B lt2 H f R R').
Proof. exact (TRANS (@lem324701 A B lt2 H R f R') (@lem324702 A B lt2 H f R R')). Qed.
Lemma lem324704 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (f : type467 A B) (R : type1413 A B) : (term452 A B lt2 H R f) = (term453 A B lt2 H f R).
Proof. exact (fun_ext (fun R' : type1413 A B => @lem324703 A B lt2 H f R R')). Qed.
Lemma lem324705 {A B : Type'} : (@all (A -> B -> Prop)) = (@all (A -> B -> Prop)).
Proof. exact (eq_refl (@all (A -> B -> Prop))). Qed.
Lemma lem324706 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (f : type467 A B) (R : type1413 A B) : (term454 A B lt2 H R f) = (term455 A B lt2 H f R).
Proof. exact (MK_COMB (@lem324705 A B) (@lem324704 A B lt2 H f R)). Qed.
Lemma lem324707 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (R : type1413 A B) : (term456 A B lt2 H R) = (term457 A B lt2 H R).
Proof. exact (fun_ext (fun f : type467 A B => @lem324706 A B lt2 H f R)). Qed.
Lemma lem324708 {A B : Type'} : (@ex ((A -> B -> Prop) -> A -> B)) = (@ex ((A -> B -> Prop) -> A -> B)).
Proof. exact (eq_refl (@ex ((A -> B -> Prop) -> A -> B))). Qed.
Lemma lem324709 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (R : type1413 A B) : (term439 A B lt2 H R) = (term458 A B lt2 H R).
Proof. exact (MK_COMB (@lem324708 A B) (@lem324707 A B lt2 H R)). Qed.
Lemma lem324710 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (R : type1413 A B) : ((term438 A B lt2 H R) = (term439 A B lt2 H R)) = ((term435 A B lt2 H R) = (term458 A B lt2 H R)).
Proof. exact (MK_COMB (@lem324698 A B lt2 H R) (@lem324709 A B lt2 H R)). Qed.
Lemma lem324711 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (R : type1413 A B) : (term435 A B lt2 H R) = (term458 A B lt2 H R).
Proof. exact (EQ_MP (@lem324710 A B lt2 H R) (@lem324685 A B lt2 H R)). Qed.
Lemma lem324713 {A B : Type'} (P : type1413 A B) : (term146 A B P) = (term147 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem324714 {A B : Type'} (P : type468 A B) : (term459 A B P) = (term460 A B P).
Proof. exact (@lem324713 (type1413 A B) A P). Qed.
Lemma lem324715 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (f : type467 A B) (R : type1413 A B) : (term461 A B lt2 H f R) = (term462 A B lt2 H f R).
Proof. exact (@lem324714 A B (term463 A B lt2 H f R)). Qed.
Lemma lem324716 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (f : type467 A B) (R : type1413 A B) (R' : type1413 A B) : (term464 A B lt2 H f R R') = (term465 A B lt2 H f R R').
Proof. exact (eq_refl (term464 A B lt2 H f R R')). Qed.
Lemma lem324717 {A : Type'} (x : A) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem324718 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (f : type467 A B) (R : type1413 A B) (R' : type1413 A B) (x : A) : (term466 A B lt2 H f R R' x) = (term467 A B lt2 H f R R' x).
Proof. exact (MK_COMB (@lem324716 A B lt2 H f R R') (@lem324717 A x)). Qed.
Lemma lem324719 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (f : type467 A B) (x : A) (R : type1413 A B) (R' : type1413 A B) : (term467 A B lt2 H f R R' x) = (term468 A B lt2 H f x R R').
Proof. exact (eq_refl (term467 A B lt2 H f R R' x)). Qed.
Lemma lem324720 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (f : type467 A B) (x : A) (R : type1413 A B) (R' : type1413 A B) : (term466 A B lt2 H f R R' x) = (term468 A B lt2 H f x R R').
Proof. exact (TRANS (@lem324718 A B lt2 H f R R' x) (@lem324719 A B lt2 H f x R R')). Qed.
Lemma lem324721 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (f : type467 A B) (R : type1413 A B) (R' : type1413 A B) : (term469 A B lt2 H f R R') = (term465 A B lt2 H f R R').
Proof. exact (fun_ext (fun x : A => @lem324720 A B lt2 H f x R R')). Qed.
Lemma lem324722 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem324723 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (f : type467 A B) (R : type1413 A B) (R' : type1413 A B) : (term470 A B lt2 H f R R') = (term451 A B lt2 H f R R').
Proof. exact (MK_COMB (@lem324722 A) (@lem324721 A B lt2 H f R R')). Qed.
Lemma lem324724 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (f : type467 A B) (R : type1413 A B) : (term471 A B lt2 H f R) = (term453 A B lt2 H f R).
Proof. exact (fun_ext (fun R' : type1413 A B => @lem324723 A B lt2 H f R R')). Qed.
Lemma lem324725 {A B : Type'} : (@all (A -> B -> Prop)) = (@all (A -> B -> Prop)).
Proof. exact (eq_refl (@all (A -> B -> Prop))). Qed.
Lemma lem324726 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (f : type467 A B) (R : type1413 A B) : (term461 A B lt2 H f R) = (term455 A B lt2 H f R).
Proof. exact (MK_COMB (@lem324725 A B) (@lem324724 A B lt2 H f R)). Qed.
Lemma lem324727 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem324728 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (f : type467 A B) (R : type1413 A B) : (term472 A B lt2 H f R) = (term473 A B lt2 H f R).
Proof. exact (MK_COMB (@lem324727) (@lem324726 A B lt2 H f R)). Qed.
Lemma lem324729 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (f : type467 A B) (R : type1413 A B) (R' : type1413 A B) : (term464 A B lt2 H f R R') = (term465 A B lt2 H f R R').
Proof. exact (eq_refl (term464 A B lt2 H f R R')). Qed.
Lemma lem324730 {A B : Type'} (x : type473 A B) (R' : type1413 A B) : (x R') = (x R').
Proof. exact (eq_refl (x R')). Qed.
Lemma lem324731 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (f : type467 A B) (R : type1413 A B) (x : type473 A B) (R' : type1413 A B) : (term474 A B lt2 H f R x R') = (term475 A B lt2 H f R x R').
Proof. exact (MK_COMB (@lem324729 A B lt2 H f R R') (@lem324730 A B x R')). Qed.
Lemma lem324732 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (f : type467 A B) (x : type473 A B) (R : type1413 A B) (R' : type1413 A B) : (term475 A B lt2 H f R x R') = (term476 A B lt2 H f x R R').
Proof. exact (eq_refl (term475 A B lt2 H f R x R')). Qed.
Lemma lem324733 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (f : type467 A B) (x : type473 A B) (R : type1413 A B) (R' : type1413 A B) : (term474 A B lt2 H f R x R') = (term476 A B lt2 H f x R R').
Proof. exact (TRANS (@lem324731 A B lt2 H f R x R') (@lem324732 A B lt2 H f x R R')). Qed.
Lemma lem324734 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (f : type467 A B) (x : type473 A B) (R : type1413 A B) : (term477 A B lt2 H f R x) = (term478 A B lt2 H f x R).
Proof. exact (fun_ext (fun R' : type1413 A B => @lem324733 A B lt2 H f x R R')). Qed.
Lemma lem324735 {A B : Type'} : (@all (A -> B -> Prop)) = (@all (A -> B -> Prop)).
Proof. exact (eq_refl (@all (A -> B -> Prop))). Qed.
Lemma lem324736 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (f : type467 A B) (x : type473 A B) (R : type1413 A B) : (term479 A B lt2 H f R x) = (term480 A B lt2 H f x R).
Proof. exact (MK_COMB (@lem324735 A B) (@lem324734 A B lt2 H f x R)). Qed.
Lemma lem324737 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (f : type467 A B) (R : type1413 A B) : (term481 A B lt2 H f R) = (term482 A B lt2 H f R).
Proof. exact (fun_ext (fun x : type473 A B => @lem324736 A B lt2 H f x R)). Qed.
Lemma lem324738 {A B : Type'} : (@ex ((A -> B -> Prop) -> A)) = (@ex ((A -> B -> Prop) -> A)).
Proof. exact (eq_refl (@ex ((A -> B -> Prop) -> A))). Qed.
Lemma lem324739 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (f : type467 A B) (R : type1413 A B) : (term462 A B lt2 H f R) = (term483 A B lt2 H f R).
Proof. exact (MK_COMB (@lem324738 A B) (@lem324737 A B lt2 H f R)). Qed.
Lemma lem324740 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (f : type467 A B) (R : type1413 A B) : ((term461 A B lt2 H f R) = (term462 A B lt2 H f R)) = ((term455 A B lt2 H f R) = (term483 A B lt2 H f R)).
Proof. exact (MK_COMB (@lem324728 A B lt2 H f R) (@lem324739 A B lt2 H f R)). Qed.
Lemma lem324741 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (f : type467 A B) (R : type1413 A B) : (term455 A B lt2 H f R) = (term483 A B lt2 H f R).
Proof. exact (EQ_MP (@lem324740 A B lt2 H f R) (@lem324715 A B lt2 H f R)). Qed.
Lemma lem324742 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (R : type1413 A B) : (term457 A B lt2 H R) = (term484 A B lt2 H R).
Proof. exact (fun_ext (fun f : type467 A B => @lem324741 A B lt2 H f R)). Qed.
Lemma lem324743 {A B : Type'} : (@ex ((A -> B -> Prop) -> A -> B)) = (@ex ((A -> B -> Prop) -> A -> B)).
Proof. exact (eq_refl (@ex ((A -> B -> Prop) -> A -> B))). Qed.
Lemma lem324744 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (R : type1413 A B) : (term458 A B lt2 H R) = (term485 A B lt2 H R).
Proof. exact (MK_COMB (@lem324743 A B) (@lem324742 A B lt2 H R)). Qed.
Lemma lem324745 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (R : type1413 A B) : (term435 A B lt2 H R) = (term485 A B lt2 H R).
Proof. exact (TRANS (@lem324711 A B lt2 H R) (@lem324744 A B lt2 H R)). Qed.
Lemma lem324747 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (R : type1413 A B) : (term399 A B lt2 H R) = (term485 A B lt2 H R).
Proof. exact (TRANS (@lem324681 A B lt2 H R) (@lem324745 A B lt2 H R)). Qed.
Lemma lem324748 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (R : type1413 A B) : (term5 A B lt2 H R) = (term485 A B lt2 H R).
Proof. exact (TRANS (@lem324425 A B lt2 H R) (@lem324747 A B lt2 H R)). Qed.
Lemma lem324749 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (R : type1413 A B) (h1 : term5 A B lt2 H R) : term485 A B lt2 H R.
Proof. exact (EQ_MP (@lem324748 A B lt2 H R) (@lem323632 A B lt2 H R h1)). Qed.
Lemma lem324762 {A B : Type'} (lt2 : type1402 A) (a0 : A) (R : type1413 A B) (f : A -> B) (z : A) : (term286 A B lt2 a0 R f z) = (term287 A B lt2 a0 R f z).
Proof. exact (@lem17362 (lt2 z a0) (term173 A B R f z)). Qed.
Lemma lem324767 {A B : Type'} (lt2 : type1402 A) (a0 : A) (R : type1413 A B) (f : A -> B) (z : A) : (term56 A B lt2 a0 R f z) = (term364 A B lt2 a0 R f z).
Proof. exact (@lem17265 (lt2 z a0) (term173 A B R f z)). Qed.
Lemma lem324768 {A : Type'} (P : A -> Prop) : (term112 A P) = (term113 A P).
Proof. exact (@lem18392 A P). Qed.
Lemma lem324769 {A B : Type'} (lt2 : type1402 A) (a0 : A) (R : type1413 A B) (f : A -> B) : (term288 A B lt2 a0 R f) = (term289 A B lt2 a0 R f).
Proof. exact (@lem324768 A (term57 A B lt2 a0 R f)). Qed.
Lemma lem324770 {A B : Type'} (lt2 : type1402 A) (a0 : A) (R : type1413 A B) (f : A -> B) (z : A) : (term290 A B lt2 a0 R f z) = (term56 A B lt2 a0 R f z).
Proof. exact (eq_refl (term290 A B lt2 a0 R f z)). Qed.
Lemma lem324771 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem324772 {A B : Type'} (lt2 : type1402 A) (a0 : A) (R : type1413 A B) (f : A -> B) (z : A) : (term291 A B lt2 a0 R f z) = (term286 A B lt2 a0 R f z).
Proof. exact (MK_COMB (@lem324771) (@lem324770 A B lt2 a0 R f z)). Qed.
Lemma lem324773 {A B : Type'} (lt2 : type1402 A) (a0 : A) (R : type1413 A B) (f : A -> B) (z : A) : (term291 A B lt2 a0 R f z) = (term287 A B lt2 a0 R f z).
Proof. exact (TRANS (@lem324772 A B lt2 a0 R f z) (@lem324762 A B lt2 a0 R f z)). Qed.
Lemma lem324774 {A B : Type'} (lt2 : type1402 A) (a0 : A) (R : type1413 A B) (f : A -> B) : (term292 A B lt2 a0 R f) = (term293 A B lt2 a0 R f).
Proof. exact (fun_ext (fun z : A => @lem324773 A B lt2 a0 R f z)). Qed.
Lemma lem324775 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem324776 {A B : Type'} (lt2 : type1402 A) (a0 : A) (R : type1413 A B) (f : A -> B) : (term289 A B lt2 a0 R f) = (term294 A B lt2 a0 R f).
Proof. exact (MK_COMB (@lem324775 A) (@lem324774 A B lt2 a0 R f)). Qed.
Lemma lem324777 {A B : Type'} (lt2 : type1402 A) (a0 : A) (R : type1413 A B) (f : A -> B) : (term288 A B lt2 a0 R f) = (term294 A B lt2 a0 R f).
Proof. exact (TRANS (@lem324769 A B lt2 a0 R f) (@lem324776 A B lt2 a0 R f)). Qed.
Lemma lem324778 {A B : Type'} (lt2 : type1402 A) (a0 : A) (R : type1413 A B) (f : A -> B) : (term57 A B lt2 a0 R f) = (term365 A B lt2 a0 R f).
Proof. exact (fun_ext (fun z : A => @lem324767 A B lt2 a0 R f z)). Qed.
Lemma lem324779 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem324780 {A B : Type'} (lt2 : type1402 A) (a0 : A) (R : type1413 A B) (f : A -> B) : (term58 A B lt2 a0 R f) = (term366 A B lt2 a0 R f).
Proof. exact (MK_COMB (@lem324779 A) (@lem324778 A B lt2 a0 R f)). Qed.
Lemma lem324782 {A B : Type'} (a1 : B) (H : type549 A B) (f : A -> B) (a0 : A) : (term486 A B a1 H f a0) = (term486 A B a1 H f a0).
Proof. exact (eq_refl (term486 A B a1 H f a0)). Qed.
Lemma lem324783 {A B : Type'} (a1 : B) (H : type549 A B) (lt2 : type1402 A) (a0 : A) (R : type1413 A B) (f : A -> B) : (term487 A B a1 H lt2 a0 R f) = (term488 A B a1 H lt2 a0 R f).
Proof. exact (MK_COMB (@lem324782 A B a1 H f a0) (@lem324777 A B lt2 a0 R f)). Qed.
Lemma lem324784 {A B : Type'} (a1 : B) (H : type549 A B) (lt2 : type1402 A) (a0 : A) (R : type1413 A B) (f : A -> B) : (term489 A B a1 H lt2 a0 R f) = (term487 A B a1 H lt2 a0 R f).
Proof. exact (@lem17045 (a1 = (H f a0)) (term58 A B lt2 a0 R f)). Qed.
Lemma lem324785 {A B : Type'} (a1 : B) (H : type549 A B) (lt2 : type1402 A) (a0 : A) (R : type1413 A B) (f : A -> B) : (term489 A B a1 H lt2 a0 R f) = (term488 A B a1 H lt2 a0 R f).
Proof. exact (TRANS (@lem324784 A B a1 H lt2 a0 R f) (@lem324783 A B a1 H lt2 a0 R f)). Qed.
Lemma lem324787 {A B : Type'} (a1 : B) (H : type549 A B) (f : A -> B) (a0 : A) : (term59 A B a1 H f a0) = (term59 A B a1 H f a0).
Proof. exact (eq_refl (term59 A B a1 H f a0)). Qed.
Lemma lem324788 {A B : Type'} (a1 : B) (H : type549 A B) (lt2 : type1402 A) (a0 : A) (R : type1413 A B) (f : A -> B) : (term60 A B a1 H lt2 a0 R f) = (term490 A B a1 H lt2 a0 R f).
Proof. exact (MK_COMB (@lem324787 A B a1 H f a0) (@lem324780 A B lt2 a0 R f)). Qed.
Lemma lem324789 {A B : Type'} (P : type572 A B) : (term491 A B P) = (term492 A B P).
Proof. exact (@lem18394 (A -> B) P). Qed.
Lemma lem324790 {A B : Type'} (a1 : B) (H : type549 A B) (lt2 : type1402 A) (a0 : A) (R : type1413 A B) : (term493 A B a1 H lt2 a0 R) = (term494 A B a1 H lt2 a0 R).
Proof. exact (@lem324789 A B (term61 A B a1 H lt2 a0 R)). Qed.
Lemma lem324791 {A B : Type'} (a1 : B) (H : type549 A B) (lt2 : type1402 A) (a0 : A) (R : type1413 A B) (f : A -> B) : (term495 A B a1 H lt2 a0 R f) = (term60 A B a1 H lt2 a0 R f).
Proof. exact (eq_refl (term495 A B a1 H lt2 a0 R f)). Qed.
Lemma lem324792 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem324793 {A B : Type'} (a1 : B) (H : type549 A B) (lt2 : type1402 A) (a0 : A) (R : type1413 A B) (f : A -> B) : (term496 A B a1 H lt2 a0 R f) = (term489 A B a1 H lt2 a0 R f).
Proof. exact (MK_COMB (@lem324792) (@lem324791 A B a1 H lt2 a0 R f)). Qed.
Lemma lem324794 {A B : Type'} (a1 : B) (H : type549 A B) (lt2 : type1402 A) (a0 : A) (R : type1413 A B) (f : A -> B) : (term496 A B a1 H lt2 a0 R f) = (term488 A B a1 H lt2 a0 R f).
Proof. exact (TRANS (@lem324793 A B a1 H lt2 a0 R f) (@lem324785 A B a1 H lt2 a0 R f)). Qed.
Lemma lem324795 {A B : Type'} (a1 : B) (H : type549 A B) (lt2 : type1402 A) (a0 : A) (R : type1413 A B) : (term497 A B a1 H lt2 a0 R) = (term498 A B a1 H lt2 a0 R).
Proof. exact (fun_ext (fun f : A -> B => @lem324794 A B a1 H lt2 a0 R f)). Qed.
Lemma lem324796 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem324797 {A B : Type'} (a1 : B) (H : type549 A B) (lt2 : type1402 A) (a0 : A) (R : type1413 A B) : (term494 A B a1 H lt2 a0 R) = (term499 A B a1 H lt2 a0 R).
Proof. exact (MK_COMB (@lem324796 A B) (@lem324795 A B a1 H lt2 a0 R)). Qed.
Lemma lem324798 {A B : Type'} (a1 : B) (H : type549 A B) (lt2 : type1402 A) (a0 : A) (R : type1413 A B) : (term493 A B a1 H lt2 a0 R) = (term499 A B a1 H lt2 a0 R).
Proof. exact (TRANS (@lem324790 A B a1 H lt2 a0 R) (@lem324797 A B a1 H lt2 a0 R)). Qed.
Lemma lem324799 {A B : Type'} (a1 : B) (H : type549 A B) (lt2 : type1402 A) (a0 : A) (R : type1413 A B) : (term61 A B a1 H lt2 a0 R) = (term500 A B a1 H lt2 a0 R).
Proof. exact (fun_ext (fun f : A -> B => @lem324788 A B a1 H lt2 a0 R f)). Qed.
Lemma lem324800 {A B : Type'} : (@ex (A -> B)) = (@ex (A -> B)).
Proof. exact (eq_refl (@ex (A -> B))). Qed.
Lemma lem324801 {A B : Type'} (a1 : B) (H : type549 A B) (lt2 : type1402 A) (a0 : A) (R : type1413 A B) : (term62 A B a1 H lt2 a0 R) = (term501 A B a1 H lt2 a0 R).
Proof. exact (MK_COMB (@lem324800 A B) (@lem324799 A B a1 H lt2 a0 R)). Qed.
Lemma lem324803 {A B : Type'} (R : type1413 A B) (a0 : A) (a1 : B) : (term502 A B R a0 a1) = (term502 A B R a0 a1).
Proof. exact (eq_refl (term502 A B R a0 a1)). Qed.
Lemma lem324804 {A B : Type'} (a1 : B) (H : type549 A B) (lt2 : type1402 A) (a0 : A) (R : type1413 A B) : (term503 A B a1 H lt2 a0 R) = (term504 A B a1 H lt2 a0 R).
Proof. exact (MK_COMB (@lem324803 A B R a0 a1) (@lem324801 A B a1 H lt2 a0 R)). Qed.
Lemma lem324806 {A B : Type'} (R : type1413 A B) (a0 : A) (a1 : B) : (term505 A B R a0 a1) = (term505 A B R a0 a1).
Proof. exact (eq_refl (term505 A B R a0 a1)). Qed.
Lemma lem324807 {A B : Type'} (a1 : B) (H : type549 A B) (lt2 : type1402 A) (a0 : A) (R : type1413 A B) : (term506 A B a1 H lt2 a0 R) = (term507 A B a1 H lt2 a0 R).
Proof. exact (MK_COMB (@lem324806 A B R a0 a1) (@lem324798 A B a1 H lt2 a0 R)). Qed.
Lemma lem324808 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem324809 {A B : Type'} (a1 : B) (H : type549 A B) (lt2 : type1402 A) (a0 : A) (R : type1413 A B) : (term508 A B a1 H lt2 a0 R) = (term509 A B a1 H lt2 a0 R).
Proof. exact (MK_COMB (@lem324808) (@lem324807 A B a1 H lt2 a0 R)). Qed.
Lemma lem324810 {A B : Type'} (a1 : B) (H : type549 A B) (lt2 : type1402 A) (a0 : A) (R : type1413 A B) : (term510 A B a1 H lt2 a0 R) = (term511 A B a1 H lt2 a0 R).
Proof. exact (MK_COMB (@lem324809 A B a1 H lt2 a0 R) (@lem324804 A B a1 H lt2 a0 R)). Qed.
Lemma lem324811 {A B : Type'} (a1 : B) (H : type549 A B) (lt2 : type1402 A) (a0 : A) (R : type1413 A B) : ((R a0 a1) = (term62 A B a1 H lt2 a0 R)) = (term510 A B a1 H lt2 a0 R).
Proof. exact (@lem17784 (R a0 a1) (term62 A B a1 H lt2 a0 R)). Qed.
Lemma lem324812 {A B : Type'} (a1 : B) (H : type549 A B) (lt2 : type1402 A) (a0 : A) (R : type1413 A B) : ((R a0 a1) = (term62 A B a1 H lt2 a0 R)) = (term511 A B a1 H lt2 a0 R).
Proof. exact (TRANS (@lem324811 A B a1 H lt2 a0 R) (@lem324810 A B a1 H lt2 a0 R)). Qed.
Lemma lem324813 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (a0 : A) (R : type1413 A B) : (term64 A B H lt2 a0 R) = (term512 A B H lt2 a0 R).
Proof. exact (fun_ext (fun a1 : B => @lem324812 A B a1 H lt2 a0 R)). Qed.
Lemma lem324814 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem324815 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (a0 : A) (R : type1413 A B) : (term65 A B H lt2 a0 R) = (term513 A B H lt2 a0 R).
Proof. exact (MK_COMB (@lem324814 B) (@lem324813 A B H lt2 a0 R)). Qed.
Lemma lem324816 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (R : type1413 A B) : (term66 A B H lt2 R) = (term514 A B H lt2 R).
Proof. exact (fun_ext (fun a0 : A => @lem324815 A B H lt2 a0 R)). Qed.
Lemma lem324817 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem324818 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (R : type1413 A B) : (term4 A B H lt2 R) = (term515 A B H lt2 R).
Proof. exact (MK_COMB (@lem324817 A) (@lem324816 A B H lt2 R)). Qed.
Lemma lem324824 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term516 A P Q) = (term517 A P Q).
Proof. exact (EQ_MP (@lem18953 A P Q) (@lem18952 A P Q)). Qed.
Lemma lem324825 {B : Type'} (P : B -> Prop) (Q : B -> Prop) : (term516 B P Q) = (term517 B P Q).
Proof. exact (@lem324824 B P Q). Qed.
Lemma lem324826 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (a0 : A) (R : type1413 A B) : (term518 A B H lt2 a0 R) = (term519 A B H lt2 a0 R).
Proof. exact (@lem324825 B (term520 A B H lt2 a0 R) (term521 A B H lt2 a0 R)). Qed.
Lemma lem324827 {A B : Type'} (a1 : B) (H : type549 A B) (lt2 : type1402 A) (a0 : A) (R : type1413 A B) : (term522 A B H lt2 a0 R a1) = (term507 A B a1 H lt2 a0 R).
Proof. exact (eq_refl (term522 A B H lt2 a0 R a1)). Qed.
Lemma lem324828 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem324829 {A B : Type'} (a1 : B) (H : type549 A B) (lt2 : type1402 A) (a0 : A) (R : type1413 A B) : (term523 A B H lt2 a0 R a1) = (term509 A B a1 H lt2 a0 R).
Proof. exact (MK_COMB (@lem324828) (@lem324827 A B a1 H lt2 a0 R)). Qed.
Lemma lem324830 {A B : Type'} (a1 : B) (H : type549 A B) (lt2 : type1402 A) (a0 : A) (R : type1413 A B) : (term524 A B H lt2 a0 R a1) = (term504 A B a1 H lt2 a0 R).
Proof. exact (eq_refl (term524 A B H lt2 a0 R a1)). Qed.
Lemma lem324831 {A B : Type'} (a1 : B) (H : type549 A B) (lt2 : type1402 A) (a0 : A) (R : type1413 A B) : (term525 A B H lt2 a0 R a1) = (term511 A B a1 H lt2 a0 R).
Proof. exact (MK_COMB (@lem324829 A B a1 H lt2 a0 R) (@lem324830 A B a1 H lt2 a0 R)). Qed.
Lemma lem324832 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (a0 : A) (R : type1413 A B) : (term526 A B H lt2 a0 R) = (term512 A B H lt2 a0 R).
Proof. exact (fun_ext (fun a1 : B => @lem324831 A B a1 H lt2 a0 R)). Qed.
Lemma lem324833 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem324834 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (a0 : A) (R : type1413 A B) : (term518 A B H lt2 a0 R) = (term513 A B H lt2 a0 R).
Proof. exact (MK_COMB (@lem324833 B) (@lem324832 A B H lt2 a0 R)). Qed.
Lemma lem324835 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem324836 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (a0 : A) (R : type1413 A B) : (term527 A B H lt2 a0 R) = (term528 A B H lt2 a0 R).
Proof. exact (MK_COMB (@lem324835) (@lem324834 A B H lt2 a0 R)). Qed.
Lemma lem324837 {A B : Type'} (a1 : B) (H : type549 A B) (lt2 : type1402 A) (a0 : A) (R : type1413 A B) : (term522 A B H lt2 a0 R a1) = (term507 A B a1 H lt2 a0 R).
Proof. exact (eq_refl (term522 A B H lt2 a0 R a1)). Qed.
Lemma lem324838 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (a0 : A) (R : type1413 A B) : (term529 A B H lt2 a0 R) = (term520 A B H lt2 a0 R).
Proof. exact (fun_ext (fun a1 : B => @lem324837 A B a1 H lt2 a0 R)). Qed.
Lemma lem324839 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem324840 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (a0 : A) (R : type1413 A B) : (term530 A B H lt2 a0 R) = (term531 A B H lt2 a0 R).
Proof. exact (MK_COMB (@lem324839 B) (@lem324838 A B H lt2 a0 R)). Qed.
Lemma lem324841 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem324842 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (a0 : A) (R : type1413 A B) : (term532 A B H lt2 a0 R) = (term533 A B H lt2 a0 R).
Proof. exact (MK_COMB (@lem324841) (@lem324840 A B H lt2 a0 R)). Qed.
Lemma lem324843 {A B : Type'} (a1 : B) (H : type549 A B) (lt2 : type1402 A) (a0 : A) (R : type1413 A B) : (term524 A B H lt2 a0 R a1) = (term504 A B a1 H lt2 a0 R).
Proof. exact (eq_refl (term524 A B H lt2 a0 R a1)). Qed.
Lemma lem324844 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (a0 : A) (R : type1413 A B) : (term534 A B H lt2 a0 R) = (term521 A B H lt2 a0 R).
Proof. exact (fun_ext (fun a1 : B => @lem324843 A B a1 H lt2 a0 R)). Qed.
Lemma lem324845 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem324846 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (a0 : A) (R : type1413 A B) : (term535 A B H lt2 a0 R) = (term536 A B H lt2 a0 R).
Proof. exact (MK_COMB (@lem324845 B) (@lem324844 A B H lt2 a0 R)). Qed.
Lemma lem324847 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (a0 : A) (R : type1413 A B) : (term519 A B H lt2 a0 R) = (term537 A B H lt2 a0 R).
Proof. exact (MK_COMB (@lem324842 A B H lt2 a0 R) (@lem324846 A B H lt2 a0 R)). Qed.
Lemma lem324848 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (a0 : A) (R : type1413 A B) : ((term518 A B H lt2 a0 R) = (term519 A B H lt2 a0 R)) = ((term513 A B H lt2 a0 R) = (term537 A B H lt2 a0 R)).
Proof. exact (MK_COMB (@lem324836 A B H lt2 a0 R) (@lem324847 A B H lt2 a0 R)). Qed.
Lemma lem324849 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (a0 : A) (R : type1413 A B) : (term513 A B H lt2 a0 R) = (term537 A B H lt2 a0 R).
Proof. exact (EQ_MP (@lem324848 A B H lt2 a0 R) (@lem324826 A B H lt2 a0 R)). Qed.
Lemma lem325138 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (R : type1413 A B) : (term514 A B H lt2 R) = (term538 A B H lt2 R).
Proof. exact (fun_ext (fun a0 : A => @lem324849 A B H lt2 a0 R)). Qed.
Lemma lem325139 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem325140 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (R : type1413 A B) : (term515 A B H lt2 R) = (term539 A B H lt2 R).
Proof. exact (MK_COMB (@lem325139 A) (@lem325138 A B H lt2 R)). Qed.
Lemma lem325142 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term516 A P Q) = (term517 A P Q).
Proof. exact (EQ_MP (@lem18953 A P Q) (@lem18952 A P Q)). Qed.
Lemma lem325143 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term516 A P Q) = (term517 A P Q).
Proof. exact (@lem325142 A P Q). Qed.
Lemma lem325144 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (R : type1413 A B) : (term540 A B H lt2 R) = (term541 A B H lt2 R).
Proof. exact (@lem325143 A (term542 A B H lt2 R) (term543 A B H lt2 R)). Qed.
Lemma lem325145 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (a0 : A) (R : type1413 A B) : (term544 A B H lt2 R a0) = (term531 A B H lt2 a0 R).
Proof. exact (eq_refl (term544 A B H lt2 R a0)). Qed.
Lemma lem325146 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem325147 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (a0 : A) (R : type1413 A B) : (term545 A B H lt2 R a0) = (term533 A B H lt2 a0 R).
Proof. exact (MK_COMB (@lem325146) (@lem325145 A B H lt2 a0 R)). Qed.
Lemma lem325148 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (a0 : A) (R : type1413 A B) : (term546 A B H lt2 R a0) = (term536 A B H lt2 a0 R).
Proof. exact (eq_refl (term546 A B H lt2 R a0)). Qed.
Lemma lem325149 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (a0 : A) (R : type1413 A B) : (term547 A B H lt2 R a0) = (term537 A B H lt2 a0 R).
Proof. exact (MK_COMB (@lem325147 A B H lt2 a0 R) (@lem325148 A B H lt2 a0 R)). Qed.
Lemma lem325150 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (R : type1413 A B) : (term548 A B H lt2 R) = (term538 A B H lt2 R).
Proof. exact (fun_ext (fun a0 : A => @lem325149 A B H lt2 a0 R)). Qed.
Lemma lem325151 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem325152 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (R : type1413 A B) : (term540 A B H lt2 R) = (term539 A B H lt2 R).
Proof. exact (MK_COMB (@lem325151 A) (@lem325150 A B H lt2 R)). Qed.
Lemma lem325153 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem325154 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (R : type1413 A B) : (term549 A B H lt2 R) = (term550 A B H lt2 R).
Proof. exact (MK_COMB (@lem325153) (@lem325152 A B H lt2 R)). Qed.
Lemma lem325155 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (a0 : A) (R : type1413 A B) : (term544 A B H lt2 R a0) = (term531 A B H lt2 a0 R).
Proof. exact (eq_refl (term544 A B H lt2 R a0)). Qed.
Lemma lem325156 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (R : type1413 A B) : (term551 A B H lt2 R) = (term542 A B H lt2 R).
Proof. exact (fun_ext (fun a0 : A => @lem325155 A B H lt2 a0 R)). Qed.
Lemma lem325157 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem325158 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (R : type1413 A B) : (term552 A B H lt2 R) = (term553 A B H lt2 R).
Proof. exact (MK_COMB (@lem325157 A) (@lem325156 A B H lt2 R)). Qed.
Lemma lem325159 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem325160 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (R : type1413 A B) : (term554 A B H lt2 R) = (term555 A B H lt2 R).
Proof. exact (MK_COMB (@lem325159) (@lem325158 A B H lt2 R)). Qed.
Lemma lem325161 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (a0 : A) (R : type1413 A B) : (term546 A B H lt2 R a0) = (term536 A B H lt2 a0 R).
Proof. exact (eq_refl (term546 A B H lt2 R a0)). Qed.
Lemma lem325162 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (R : type1413 A B) : (term556 A B H lt2 R) = (term543 A B H lt2 R).
Proof. exact (fun_ext (fun a0 : A => @lem325161 A B H lt2 a0 R)). Qed.
Lemma lem325163 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem325164 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (R : type1413 A B) : (term557 A B H lt2 R) = (term558 A B H lt2 R).
Proof. exact (MK_COMB (@lem325163 A) (@lem325162 A B H lt2 R)). Qed.
Lemma lem325165 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (R : type1413 A B) : (term541 A B H lt2 R) = (term559 A B H lt2 R).
Proof. exact (MK_COMB (@lem325160 A B H lt2 R) (@lem325164 A B H lt2 R)). Qed.
Lemma lem325166 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (R : type1413 A B) : ((term540 A B H lt2 R) = (term541 A B H lt2 R)) = ((term539 A B H lt2 R) = (term559 A B H lt2 R)).
Proof. exact (MK_COMB (@lem325154 A B H lt2 R) (@lem325165 A B H lt2 R)). Qed.
Lemma lem325167 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (R : type1413 A B) : (term539 A B H lt2 R) = (term559 A B H lt2 R).
Proof. exact (EQ_MP (@lem325166 A B H lt2 R) (@lem325144 A B H lt2 R)). Qed.
Lemma lem325464 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (R : type1413 A B) : (term515 A B H lt2 R) = (term559 A B H lt2 R).
Proof. exact (TRANS (@lem325140 A B H lt2 R) (@lem325167 A B H lt2 R)). Qed.
Lemma lem325466 {A : Type'} (P : Prop) (Q : A -> Prop) : (term560 A P Q) = (term561 A P Q).
Proof. exact (EQ_MP (@lem18911 A P Q) (@lem18910 A P Q)). Qed.
Lemma lem325467 {A : Type'} (P : Prop) (Q : A -> Prop) : (term560 A P Q) = (term561 A P Q).
Proof. exact (@lem325466 A P Q). Qed.
Lemma lem325468 {A B : Type'} (a1 : B) (H : type549 A B) (lt2 : type1402 A) (a0 : A) (R : type1413 A B) (f : A -> B) : (term562 A B a1 H lt2 a0 R f) = (term563 A B a1 H lt2 a0 R f).
Proof. exact (@lem325467 A (term564 A B a1 H f a0) (term293 A B lt2 a0 R f)). Qed.
Lemma lem325469 {A B : Type'} (lt2 : type1402 A) (a0 : A) (R : type1413 A B) (f : A -> B) (z : A) : (term305 A B lt2 a0 R f z) = (term287 A B lt2 a0 R f z).
Proof. exact (eq_refl (term305 A B lt2 a0 R f z)). Qed.
Lemma lem325470 {A B : Type'} (lt2 : type1402 A) (a0 : A) (R : type1413 A B) (f : A -> B) : (term306 A B lt2 a0 R f) = (term293 A B lt2 a0 R f).
Proof. exact (fun_ext (fun z : A => @lem325469 A B lt2 a0 R f z)). Qed.
Lemma lem325471 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem325472 {A B : Type'} (lt2 : type1402 A) (a0 : A) (R : type1413 A B) (f : A -> B) : (term307 A B lt2 a0 R f) = (term294 A B lt2 a0 R f).
Proof. exact (MK_COMB (@lem325471 A) (@lem325470 A B lt2 a0 R f)). Qed.
Lemma lem325473 {A B : Type'} (a1 : B) (H : type549 A B) (f : A -> B) (a0 : A) : (term486 A B a1 H f a0) = (term486 A B a1 H f a0).
Proof. exact (eq_refl (term486 A B a1 H f a0)). Qed.
Lemma lem325474 {A B : Type'} (a1 : B) (H : type549 A B) (lt2 : type1402 A) (a0 : A) (R : type1413 A B) (f : A -> B) : (term562 A B a1 H lt2 a0 R f) = (term488 A B a1 H lt2 a0 R f).
Proof. exact (MK_COMB (@lem325473 A B a1 H f a0) (@lem325472 A B lt2 a0 R f)). Qed.
Lemma lem325475 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem325476 {A B : Type'} (a1 : B) (H : type549 A B) (lt2 : type1402 A) (a0 : A) (R : type1413 A B) (f : A -> B) : (term565 A B a1 H lt2 a0 R f) = (term566 A B a1 H lt2 a0 R f).
Proof. exact (MK_COMB (@lem325475) (@lem325474 A B a1 H lt2 a0 R f)). Qed.
Lemma lem325477 {A B : Type'} (lt2 : type1402 A) (a0 : A) (R : type1413 A B) (f : A -> B) (z : A) : (term305 A B lt2 a0 R f z) = (term287 A B lt2 a0 R f z).
Proof. exact (eq_refl (term305 A B lt2 a0 R f z)). Qed.
Lemma lem325478 {A B : Type'} (a1 : B) (H : type549 A B) (f : A -> B) (a0 : A) : (term486 A B a1 H f a0) = (term486 A B a1 H f a0).
Proof. exact (eq_refl (term486 A B a1 H f a0)). Qed.
Lemma lem325479 {A B : Type'} (a1 : B) (H : type549 A B) (lt2 : type1402 A) (a0 : A) (R : type1413 A B) (f : A -> B) (z : A) : (term567 A B a1 H lt2 a0 R f z) = (term568 A B a1 H lt2 a0 R f z).
Proof. exact (MK_COMB (@lem325478 A B a1 H f a0) (@lem325477 A B lt2 a0 R f z)). Qed.
Lemma lem325480 {A B : Type'} (a1 : B) (H : type549 A B) (lt2 : type1402 A) (a0 : A) (R : type1413 A B) (f : A -> B) : (term569 A B a1 H lt2 a0 R f) = (term570 A B a1 H lt2 a0 R f).
Proof. exact (fun_ext (fun z : A => @lem325479 A B a1 H lt2 a0 R f z)). Qed.
Lemma lem325481 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem325482 {A B : Type'} (a1 : B) (H : type549 A B) (lt2 : type1402 A) (a0 : A) (R : type1413 A B) (f : A -> B) : (term563 A B a1 H lt2 a0 R f) = (term571 A B a1 H lt2 a0 R f).
Proof. exact (MK_COMB (@lem325481 A) (@lem325480 A B a1 H lt2 a0 R f)). Qed.
Lemma lem325483 {A B : Type'} (a1 : B) (H : type549 A B) (lt2 : type1402 A) (a0 : A) (R : type1413 A B) (f : A -> B) : ((term562 A B a1 H lt2 a0 R f) = (term563 A B a1 H lt2 a0 R f)) = ((term488 A B a1 H lt2 a0 R f) = (term571 A B a1 H lt2 a0 R f)).
Proof. exact (MK_COMB (@lem325476 A B a1 H lt2 a0 R f) (@lem325482 A B a1 H lt2 a0 R f)). Qed.
Lemma lem325484 {A B : Type'} (a1 : B) (H : type549 A B) (lt2 : type1402 A) (a0 : A) (R : type1413 A B) (f : A -> B) : (term488 A B a1 H lt2 a0 R f) = (term571 A B a1 H lt2 a0 R f).
Proof. exact (EQ_MP (@lem325483 A B a1 H lt2 a0 R f) (@lem325468 A B a1 H lt2 a0 R f)). Qed.
Lemma lem325485 {A B : Type'} (a1 : B) (H : type549 A B) (lt2 : type1402 A) (a0 : A) (R : type1413 A B) : (term498 A B a1 H lt2 a0 R) = (term572 A B a1 H lt2 a0 R).
Proof. exact (fun_ext (fun f : A -> B => @lem325484 A B a1 H lt2 a0 R f)). Qed.
Lemma lem325486 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem325487 {A B : Type'} (a1 : B) (H : type549 A B) (lt2 : type1402 A) (a0 : A) (R : type1413 A B) : (term499 A B a1 H lt2 a0 R) = (term573 A B a1 H lt2 a0 R).
Proof. exact (MK_COMB (@lem325486 A B) (@lem325485 A B a1 H lt2 a0 R)). Qed.
Lemma lem325489 {A B : Type'} (P : type1413 A B) : (term146 A B P) = (term147 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem325490 {A B : Type'} (P : type551 A B) : (term574 A B P) = (term575 A B P).
Proof. exact (@lem325489 (A -> B) A P). Qed.
Lemma lem325491 {A B : Type'} (a1 : B) (H : type549 A B) (lt2 : type1402 A) (a0 : A) (R : type1413 A B) : (term576 A B a1 H lt2 a0 R) = (term577 A B a1 H lt2 a0 R).
Proof. exact (@lem325490 A B (term578 A B a1 H lt2 a0 R)). Qed.
Lemma lem325492 {A B : Type'} (a1 : B) (H : type549 A B) (lt2 : type1402 A) (a0 : A) (R : type1413 A B) (f : A -> B) : (term579 A B a1 H lt2 a0 R f) = (term570 A B a1 H lt2 a0 R f).
Proof. exact (eq_refl (term579 A B a1 H lt2 a0 R f)). Qed.
Lemma lem325493 {A : Type'} (z : A) : z = z.
Proof. exact (eq_refl z). Qed.
Lemma lem325494 {A B : Type'} (a1 : B) (H : type549 A B) (lt2 : type1402 A) (a0 : A) (R : type1413 A B) (f : A -> B) (z : A) : (term580 A B a1 H lt2 a0 R f z) = (term581 A B a1 H lt2 a0 R f z).
Proof. exact (MK_COMB (@lem325492 A B a1 H lt2 a0 R f) (@lem325493 A z)). Qed.
Lemma lem325495 {A B : Type'} (a1 : B) (H : type549 A B) (lt2 : type1402 A) (a0 : A) (R : type1413 A B) (f : A -> B) (z : A) : (term581 A B a1 H lt2 a0 R f z) = (term568 A B a1 H lt2 a0 R f z).
Proof. exact (eq_refl (term581 A B a1 H lt2 a0 R f z)). Qed.
Lemma lem325496 {A B : Type'} (a1 : B) (H : type549 A B) (lt2 : type1402 A) (a0 : A) (R : type1413 A B) (f : A -> B) (z : A) : (term580 A B a1 H lt2 a0 R f z) = (term568 A B a1 H lt2 a0 R f z).
Proof. exact (TRANS (@lem325494 A B a1 H lt2 a0 R f z) (@lem325495 A B a1 H lt2 a0 R f z)). Qed.
Lemma lem325497 {A B : Type'} (a1 : B) (H : type549 A B) (lt2 : type1402 A) (a0 : A) (R : type1413 A B) (f : A -> B) : (term582 A B a1 H lt2 a0 R f) = (term570 A B a1 H lt2 a0 R f).
Proof. exact (fun_ext (fun z : A => @lem325496 A B a1 H lt2 a0 R f z)). Qed.
Lemma lem325498 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem325499 {A B : Type'} (a1 : B) (H : type549 A B) (lt2 : type1402 A) (a0 : A) (R : type1413 A B) (f : A -> B) : (term583 A B a1 H lt2 a0 R f) = (term571 A B a1 H lt2 a0 R f).
Proof. exact (MK_COMB (@lem325498 A) (@lem325497 A B a1 H lt2 a0 R f)). Qed.
Lemma lem325500 {A B : Type'} (a1 : B) (H : type549 A B) (lt2 : type1402 A) (a0 : A) (R : type1413 A B) : (term584 A B a1 H lt2 a0 R) = (term572 A B a1 H lt2 a0 R).
Proof. exact (fun_ext (fun f : A -> B => @lem325499 A B a1 H lt2 a0 R f)). Qed.
Lemma lem325501 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem325502 {A B : Type'} (a1 : B) (H : type549 A B) (lt2 : type1402 A) (a0 : A) (R : type1413 A B) : (term576 A B a1 H lt2 a0 R) = (term573 A B a1 H lt2 a0 R).
Proof. exact (MK_COMB (@lem325501 A B) (@lem325500 A B a1 H lt2 a0 R)). Qed.
Lemma lem325503 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem325504 {A B : Type'} (a1 : B) (H : type549 A B) (lt2 : type1402 A) (a0 : A) (R : type1413 A B) : (term585 A B a1 H lt2 a0 R) = (term586 A B a1 H lt2 a0 R).
Proof. exact (MK_COMB (@lem325503) (@lem325502 A B a1 H lt2 a0 R)). Qed.
Lemma lem325505 {A B : Type'} (a1 : B) (H : type549 A B) (lt2 : type1402 A) (a0 : A) (R : type1413 A B) (f : A -> B) : (term579 A B a1 H lt2 a0 R f) = (term570 A B a1 H lt2 a0 R f).
Proof. exact (eq_refl (term579 A B a1 H lt2 a0 R f)). Qed.
Lemma lem325506 {A B : Type'} (z : type569 A B) (f : A -> B) : (z f) = (z f).
Proof. exact (eq_refl (z f)). Qed.
Lemma lem325507 {A B : Type'} (a1 : B) (H : type549 A B) (lt2 : type1402 A) (a0 : A) (R : type1413 A B) (z : type569 A B) (f : A -> B) : (term587 A B a1 H lt2 a0 R z f) = (term588 A B a1 H lt2 a0 R z f).
Proof. exact (MK_COMB (@lem325505 A B a1 H lt2 a0 R f) (@lem325506 A B z f)). Qed.
Lemma lem325508 {A B : Type'} (a1 : B) (H : type549 A B) (lt2 : type1402 A) (a0 : A) (R : type1413 A B) (z : type569 A B) (f : A -> B) : (term588 A B a1 H lt2 a0 R z f) = (term589 A B a1 H lt2 a0 R z f).
Proof. exact (eq_refl (term588 A B a1 H lt2 a0 R z f)). Qed.
Lemma lem325509 {A B : Type'} (a1 : B) (H : type549 A B) (lt2 : type1402 A) (a0 : A) (R : type1413 A B) (z : type569 A B) (f : A -> B) : (term587 A B a1 H lt2 a0 R z f) = (term589 A B a1 H lt2 a0 R z f).
Proof. exact (TRANS (@lem325507 A B a1 H lt2 a0 R z f) (@lem325508 A B a1 H lt2 a0 R z f)). Qed.
Lemma lem325510 {A B : Type'} (a1 : B) (H : type549 A B) (lt2 : type1402 A) (a0 : A) (R : type1413 A B) (z : type569 A B) : (term590 A B a1 H lt2 a0 R z) = (term591 A B a1 H lt2 a0 R z).
Proof. exact (fun_ext (fun f : A -> B => @lem325509 A B a1 H lt2 a0 R z f)). Qed.
Lemma lem325511 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem325512 {A B : Type'} (a1 : B) (H : type549 A B) (lt2 : type1402 A) (a0 : A) (R : type1413 A B) (z : type569 A B) : (term592 A B a1 H lt2 a0 R z) = (term593 A B a1 H lt2 a0 R z).
Proof. exact (MK_COMB (@lem325511 A B) (@lem325510 A B a1 H lt2 a0 R z)). Qed.
Lemma lem325513 {A B : Type'} (a1 : B) (H : type549 A B) (lt2 : type1402 A) (a0 : A) (R : type1413 A B) : (term594 A B a1 H lt2 a0 R) = (term595 A B a1 H lt2 a0 R).
Proof. exact (fun_ext (fun z : type569 A B => @lem325512 A B a1 H lt2 a0 R z)). Qed.
Lemma lem325514 {A B : Type'} : (@ex ((A -> B) -> A)) = (@ex ((A -> B) -> A)).
Proof. exact (eq_refl (@ex ((A -> B) -> A))). Qed.
Lemma lem325515 {A B : Type'} (a1 : B) (H : type549 A B) (lt2 : type1402 A) (a0 : A) (R : type1413 A B) : (term577 A B a1 H lt2 a0 R) = (term596 A B a1 H lt2 a0 R).
Proof. exact (MK_COMB (@lem325514 A B) (@lem325513 A B a1 H lt2 a0 R)). Qed.
Lemma lem325516 {A B : Type'} (a1 : B) (H : type549 A B) (lt2 : type1402 A) (a0 : A) (R : type1413 A B) : ((term576 A B a1 H lt2 a0 R) = (term577 A B a1 H lt2 a0 R)) = ((term573 A B a1 H lt2 a0 R) = (term596 A B a1 H lt2 a0 R)).
Proof. exact (MK_COMB (@lem325504 A B a1 H lt2 a0 R) (@lem325515 A B a1 H lt2 a0 R)). Qed.
Lemma lem325517 {A B : Type'} (a1 : B) (H : type549 A B) (lt2 : type1402 A) (a0 : A) (R : type1413 A B) : (term573 A B a1 H lt2 a0 R) = (term596 A B a1 H lt2 a0 R).
Proof. exact (EQ_MP (@lem325516 A B a1 H lt2 a0 R) (@lem325491 A B a1 H lt2 a0 R)). Qed.
Lemma lem325518 {A B : Type'} (a1 : B) (H : type549 A B) (lt2 : type1402 A) (a0 : A) (R : type1413 A B) : (term499 A B a1 H lt2 a0 R) = (term596 A B a1 H lt2 a0 R).
Proof. exact (TRANS (@lem325487 A B a1 H lt2 a0 R) (@lem325517 A B a1 H lt2 a0 R)). Qed.
Lemma lem325519 {A B : Type'} (R : type1413 A B) (a0 : A) (a1 : B) : (term505 A B R a0 a1) = (term505 A B R a0 a1).
Proof. exact (eq_refl (term505 A B R a0 a1)). Qed.
Lemma lem325520 {A B : Type'} (a1 : B) (H : type549 A B) (lt2 : type1402 A) (a0 : A) (R : type1413 A B) : (term507 A B a1 H lt2 a0 R) = (term597 A B a1 H lt2 a0 R).
Proof. exact (MK_COMB (@lem325519 A B R a0 a1) (@lem325518 A B a1 H lt2 a0 R)). Qed.
Lemma lem325522 {A : Type'} (P : Prop) (Q : A -> Prop) : (term560 A P Q) = (term561 A P Q).
Proof. exact (EQ_MP (@lem18911 A P Q) (@lem18910 A P Q)). Qed.
Lemma lem325523 {A B : Type'} (P : Prop) (Q : type118 A B) : (term598 A B P Q) = (term599 A B P Q).
Proof. exact (@lem325522 (type569 A B) P Q). Qed.
Lemma lem325524 {A B : Type'} (a1 : B) (H : type549 A B) (lt2 : type1402 A) (a0 : A) (R : type1413 A B) : (term600 A B a1 H lt2 a0 R) = (term601 A B a1 H lt2 a0 R).
Proof. exact (@lem325523 A B (R a0 a1) (term595 A B a1 H lt2 a0 R)). Qed.
Lemma lem325525 {A B : Type'} (a1 : B) (H : type549 A B) (lt2 : type1402 A) (a0 : A) (R : type1413 A B) (z : type569 A B) : (term602 A B a1 H lt2 a0 R z) = (term593 A B a1 H lt2 a0 R z).
Proof. exact (eq_refl (term602 A B a1 H lt2 a0 R z)). Qed.
Lemma lem325526 {A B : Type'} (a1 : B) (H : type549 A B) (lt2 : type1402 A) (a0 : A) (R : type1413 A B) : (term603 A B a1 H lt2 a0 R) = (term595 A B a1 H lt2 a0 R).
Proof. exact (fun_ext (fun z : type569 A B => @lem325525 A B a1 H lt2 a0 R z)). Qed.
Lemma lem325527 {A B : Type'} : (@ex ((A -> B) -> A)) = (@ex ((A -> B) -> A)).
Proof. exact (eq_refl (@ex ((A -> B) -> A))). Qed.
Lemma lem325528 {A B : Type'} (a1 : B) (H : type549 A B) (lt2 : type1402 A) (a0 : A) (R : type1413 A B) : (term604 A B a1 H lt2 a0 R) = (term596 A B a1 H lt2 a0 R).
Proof. exact (MK_COMB (@lem325527 A B) (@lem325526 A B a1 H lt2 a0 R)). Qed.
Lemma lem325529 {A B : Type'} (R : type1413 A B) (a0 : A) (a1 : B) : (term505 A B R a0 a1) = (term505 A B R a0 a1).
Proof. exact (eq_refl (term505 A B R a0 a1)). Qed.
Lemma lem325530 {A B : Type'} (a1 : B) (H : type549 A B) (lt2 : type1402 A) (a0 : A) (R : type1413 A B) : (term600 A B a1 H lt2 a0 R) = (term597 A B a1 H lt2 a0 R).
Proof. exact (MK_COMB (@lem325529 A B R a0 a1) (@lem325528 A B a1 H lt2 a0 R)). Qed.
Lemma lem325531 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem325532 {A B : Type'} (a1 : B) (H : type549 A B) (lt2 : type1402 A) (a0 : A) (R : type1413 A B) : (term605 A B a1 H lt2 a0 R) = (term606 A B a1 H lt2 a0 R).
Proof. exact (MK_COMB (@lem325531) (@lem325530 A B a1 H lt2 a0 R)). Qed.
Lemma lem325533 {A B : Type'} (a1 : B) (H : type549 A B) (lt2 : type1402 A) (a0 : A) (R : type1413 A B) (z : type569 A B) : (term602 A B a1 H lt2 a0 R z) = (term593 A B a1 H lt2 a0 R z).
Proof. exact (eq_refl (term602 A B a1 H lt2 a0 R z)). Qed.
Lemma lem325534 {A B : Type'} (R : type1413 A B) (a0 : A) (a1 : B) : (term505 A B R a0 a1) = (term505 A B R a0 a1).
Proof. exact (eq_refl (term505 A B R a0 a1)). Qed.
Lemma lem325535 {A B : Type'} (a1 : B) (H : type549 A B) (lt2 : type1402 A) (a0 : A) (R : type1413 A B) (z : type569 A B) : (term607 A B a1 H lt2 a0 R z) = (term608 A B a1 H lt2 a0 R z).
Proof. exact (MK_COMB (@lem325534 A B R a0 a1) (@lem325533 A B a1 H lt2 a0 R z)). Qed.
Lemma lem325536 {A B : Type'} (a1 : B) (H : type549 A B) (lt2 : type1402 A) (a0 : A) (R : type1413 A B) : (term609 A B a1 H lt2 a0 R) = (term610 A B a1 H lt2 a0 R).
Proof. exact (fun_ext (fun z : type569 A B => @lem325535 A B a1 H lt2 a0 R z)). Qed.
Lemma lem325537 {A B : Type'} : (@ex ((A -> B) -> A)) = (@ex ((A -> B) -> A)).
Proof. exact (eq_refl (@ex ((A -> B) -> A))). Qed.
Lemma lem325538 {A B : Type'} (a1 : B) (H : type549 A B) (lt2 : type1402 A) (a0 : A) (R : type1413 A B) : (term601 A B a1 H lt2 a0 R) = (term611 A B a1 H lt2 a0 R).
Proof. exact (MK_COMB (@lem325537 A B) (@lem325536 A B a1 H lt2 a0 R)). Qed.
Lemma lem325539 {A B : Type'} (a1 : B) (H : type549 A B) (lt2 : type1402 A) (a0 : A) (R : type1413 A B) : ((term600 A B a1 H lt2 a0 R) = (term601 A B a1 H lt2 a0 R)) = ((term597 A B a1 H lt2 a0 R) = (term611 A B a1 H lt2 a0 R)).
Proof. exact (MK_COMB (@lem325532 A B a1 H lt2 a0 R) (@lem325538 A B a1 H lt2 a0 R)). Qed.
Lemma lem325540 {A B : Type'} (a1 : B) (H : type549 A B) (lt2 : type1402 A) (a0 : A) (R : type1413 A B) : (term597 A B a1 H lt2 a0 R) = (term611 A B a1 H lt2 a0 R).
Proof. exact (EQ_MP (@lem325539 A B a1 H lt2 a0 R) (@lem325524 A B a1 H lt2 a0 R)). Qed.
Lemma lem325541 {A B : Type'} (a1 : B) (H : type549 A B) (lt2 : type1402 A) (a0 : A) (R : type1413 A B) : (term507 A B a1 H lt2 a0 R) = (term611 A B a1 H lt2 a0 R).
Proof. exact (TRANS (@lem325520 A B a1 H lt2 a0 R) (@lem325540 A B a1 H lt2 a0 R)). Qed.
Lemma lem325542 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (a0 : A) (R : type1413 A B) : (term520 A B H lt2 a0 R) = (term612 A B H lt2 a0 R).
Proof. exact (fun_ext (fun a1 : B => @lem325541 A B a1 H lt2 a0 R)). Qed.
Lemma lem325543 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem325544 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (a0 : A) (R : type1413 A B) : (term531 A B H lt2 a0 R) = (term613 A B H lt2 a0 R).
Proof. exact (MK_COMB (@lem325543 B) (@lem325542 A B H lt2 a0 R)). Qed.
Lemma lem325546 {A B : Type'} (P : type1413 A B) : (term146 A B P) = (term147 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem325547 {A B : Type'} (P : type1436 A B) : (term614 A B P) = (term615 A B P).
Proof. exact (@lem325546 B (type569 A B) P). Qed.
Lemma lem325548 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (a0 : A) (R : type1413 A B) : (term616 A B H lt2 a0 R) = (term617 A B H lt2 a0 R).
Proof. exact (@lem325547 A B (term618 A B H lt2 a0 R)). Qed.
Lemma lem325549 {A B : Type'} (a1 : B) (H : type549 A B) (lt2 : type1402 A) (a0 : A) (R : type1413 A B) : (term619 A B H lt2 a0 R a1) = (term610 A B a1 H lt2 a0 R).
Proof. exact (eq_refl (term619 A B H lt2 a0 R a1)). Qed.
Lemma lem325550 {A B : Type'} (z : type569 A B) : z = z.
Proof. exact (eq_refl z). Qed.
Lemma lem325551 {A B : Type'} (a1 : B) (H : type549 A B) (lt2 : type1402 A) (a0 : A) (R : type1413 A B) (z : type569 A B) : (term620 A B H lt2 a0 R a1 z) = (term621 A B a1 H lt2 a0 R z).
Proof. exact (MK_COMB (@lem325549 A B a1 H lt2 a0 R) (@lem325550 A B z)). Qed.
Lemma lem325552 {A B : Type'} (a1 : B) (H : type549 A B) (lt2 : type1402 A) (a0 : A) (R : type1413 A B) (z : type569 A B) : (term621 A B a1 H lt2 a0 R z) = (term608 A B a1 H lt2 a0 R z).
Proof. exact (eq_refl (term621 A B a1 H lt2 a0 R z)). Qed.
Lemma lem325553 {A B : Type'} (a1 : B) (H : type549 A B) (lt2 : type1402 A) (a0 : A) (R : type1413 A B) (z : type569 A B) : (term620 A B H lt2 a0 R a1 z) = (term608 A B a1 H lt2 a0 R z).
Proof. exact (TRANS (@lem325551 A B a1 H lt2 a0 R z) (@lem325552 A B a1 H lt2 a0 R z)). Qed.
Lemma lem325554 {A B : Type'} (a1 : B) (H : type549 A B) (lt2 : type1402 A) (a0 : A) (R : type1413 A B) : (term622 A B H lt2 a0 R a1) = (term610 A B a1 H lt2 a0 R).
Proof. exact (fun_ext (fun z : type569 A B => @lem325553 A B a1 H lt2 a0 R z)). Qed.
Lemma lem325555 {A B : Type'} : (@ex ((A -> B) -> A)) = (@ex ((A -> B) -> A)).
Proof. exact (eq_refl (@ex ((A -> B) -> A))). Qed.
Lemma lem325556 {A B : Type'} (a1 : B) (H : type549 A B) (lt2 : type1402 A) (a0 : A) (R : type1413 A B) : (term623 A B H lt2 a0 R a1) = (term611 A B a1 H lt2 a0 R).
Proof. exact (MK_COMB (@lem325555 A B) (@lem325554 A B a1 H lt2 a0 R)). Qed.
Lemma lem325557 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (a0 : A) (R : type1413 A B) : (term624 A B H lt2 a0 R) = (term612 A B H lt2 a0 R).
Proof. exact (fun_ext (fun a1 : B => @lem325556 A B a1 H lt2 a0 R)). Qed.
Lemma lem325558 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem325559 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (a0 : A) (R : type1413 A B) : (term616 A B H lt2 a0 R) = (term613 A B H lt2 a0 R).
Proof. exact (MK_COMB (@lem325558 B) (@lem325557 A B H lt2 a0 R)). Qed.
Lemma lem325560 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem325561 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (a0 : A) (R : type1413 A B) : (term625 A B H lt2 a0 R) = (term626 A B H lt2 a0 R).
Proof. exact (MK_COMB (@lem325560) (@lem325559 A B H lt2 a0 R)). Qed.
Lemma lem325562 {A B : Type'} (a1 : B) (H : type549 A B) (lt2 : type1402 A) (a0 : A) (R : type1413 A B) : (term619 A B H lt2 a0 R a1) = (term610 A B a1 H lt2 a0 R).
Proof. exact (eq_refl (term619 A B H lt2 a0 R a1)). Qed.
Lemma lem325563 {A B : Type'} (z : type1445 A B) (a1 : B) : (z a1) = (z a1).
Proof. exact (eq_refl (z a1)). Qed.
Lemma lem325564 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (a0 : A) (R : type1413 A B) (z : type1445 A B) (a1 : B) : (term627 A B H lt2 a0 R z a1) = (term628 A B H lt2 a0 R z a1).
Proof. exact (MK_COMB (@lem325562 A B a1 H lt2 a0 R) (@lem325563 A B z a1)). Qed.
Lemma lem325565 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (a0 : A) (R : type1413 A B) (z : type1445 A B) (a1 : B) : (term628 A B H lt2 a0 R z a1) = (term629 A B H lt2 a0 R z a1).
Proof. exact (eq_refl (term628 A B H lt2 a0 R z a1)). Qed.
Lemma lem325566 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (a0 : A) (R : type1413 A B) (z : type1445 A B) (a1 : B) : (term627 A B H lt2 a0 R z a1) = (term629 A B H lt2 a0 R z a1).
Proof. exact (TRANS (@lem325564 A B H lt2 a0 R z a1) (@lem325565 A B H lt2 a0 R z a1)). Qed.
Lemma lem325567 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (a0 : A) (R : type1413 A B) (z : type1445 A B) : (term630 A B H lt2 a0 R z) = (term631 A B H lt2 a0 R z).
Proof. exact (fun_ext (fun a1 : B => @lem325566 A B H lt2 a0 R z a1)). Qed.
Lemma lem325568 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem325569 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (a0 : A) (R : type1413 A B) (z : type1445 A B) : (term632 A B H lt2 a0 R z) = (term633 A B H lt2 a0 R z).
Proof. exact (MK_COMB (@lem325568 B) (@lem325567 A B H lt2 a0 R z)). Qed.
Lemma lem325570 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (a0 : A) (R : type1413 A B) : (term634 A B H lt2 a0 R) = (term635 A B H lt2 a0 R).
Proof. exact (fun_ext (fun z : type1445 A B => @lem325569 A B H lt2 a0 R z)). Qed.
Lemma lem325571 {A B : Type'} : (@ex (B -> (A -> B) -> A)) = (@ex (B -> (A -> B) -> A)).
Proof. exact (eq_refl (@ex (B -> (A -> B) -> A))). Qed.
Lemma lem325572 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (a0 : A) (R : type1413 A B) : (term617 A B H lt2 a0 R) = (term636 A B H lt2 a0 R).
Proof. exact (MK_COMB (@lem325571 A B) (@lem325570 A B H lt2 a0 R)). Qed.
Lemma lem325573 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (a0 : A) (R : type1413 A B) : ((term616 A B H lt2 a0 R) = (term617 A B H lt2 a0 R)) = ((term613 A B H lt2 a0 R) = (term636 A B H lt2 a0 R)).
Proof. exact (MK_COMB (@lem325561 A B H lt2 a0 R) (@lem325572 A B H lt2 a0 R)). Qed.
Lemma lem325574 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (a0 : A) (R : type1413 A B) : (term613 A B H lt2 a0 R) = (term636 A B H lt2 a0 R).
Proof. exact (EQ_MP (@lem325573 A B H lt2 a0 R) (@lem325548 A B H lt2 a0 R)). Qed.
Lemma lem325575 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (a0 : A) (R : type1413 A B) : (term531 A B H lt2 a0 R) = (term636 A B H lt2 a0 R).
Proof. exact (TRANS (@lem325544 A B H lt2 a0 R) (@lem325574 A B H lt2 a0 R)). Qed.
Lemma lem325576 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (R : type1413 A B) : (term542 A B H lt2 R) = (term637 A B H lt2 R).
Proof. exact (fun_ext (fun a0 : A => @lem325575 A B H lt2 a0 R)). Qed.
Lemma lem325577 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem325578 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (R : type1413 A B) : (term553 A B H lt2 R) = (term638 A B H lt2 R).
Proof. exact (MK_COMB (@lem325577 A) (@lem325576 A B H lt2 R)). Qed.
Lemma lem325580 {A B : Type'} (P : type1413 A B) : (term146 A B P) = (term147 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem325581 {A B : Type'} (P : type1368 A B) : (term639 A B P) = (term640 A B P).
Proof. exact (@lem325580 A (type1445 A B) P). Qed.
Lemma lem325582 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (R : type1413 A B) : (term641 A B H lt2 R) = (term642 A B H lt2 R).
Proof. exact (@lem325581 A B (term643 A B H lt2 R)). Qed.
Lemma lem325583 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (a0 : A) (R : type1413 A B) : (term644 A B H lt2 R a0) = (term635 A B H lt2 a0 R).
Proof. exact (eq_refl (term644 A B H lt2 R a0)). Qed.
Lemma lem325584 {A B : Type'} (z : type1445 A B) : z = z.
Proof. exact (eq_refl z). Qed.
Lemma lem325585 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (a0 : A) (R : type1413 A B) (z : type1445 A B) : (term645 A B H lt2 R a0 z) = (term646 A B H lt2 a0 R z).
Proof. exact (MK_COMB (@lem325583 A B H lt2 a0 R) (@lem325584 A B z)). Qed.
Lemma lem325586 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (a0 : A) (R : type1413 A B) (z : type1445 A B) : (term646 A B H lt2 a0 R z) = (term633 A B H lt2 a0 R z).
Proof. exact (eq_refl (term646 A B H lt2 a0 R z)). Qed.
Lemma lem325587 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (a0 : A) (R : type1413 A B) (z : type1445 A B) : (term645 A B H lt2 R a0 z) = (term633 A B H lt2 a0 R z).
Proof. exact (TRANS (@lem325585 A B H lt2 a0 R z) (@lem325586 A B H lt2 a0 R z)). Qed.
Lemma lem325588 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (a0 : A) (R : type1413 A B) : (term647 A B H lt2 R a0) = (term635 A B H lt2 a0 R).
Proof. exact (fun_ext (fun z : type1445 A B => @lem325587 A B H lt2 a0 R z)). Qed.
Lemma lem325589 {A B : Type'} : (@ex (B -> (A -> B) -> A)) = (@ex (B -> (A -> B) -> A)).
Proof. exact (eq_refl (@ex (B -> (A -> B) -> A))). Qed.
Lemma lem325590 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (a0 : A) (R : type1413 A B) : (term648 A B H lt2 R a0) = (term636 A B H lt2 a0 R).
Proof. exact (MK_COMB (@lem325589 A B) (@lem325588 A B H lt2 a0 R)). Qed.
Lemma lem325591 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (R : type1413 A B) : (term649 A B H lt2 R) = (term637 A B H lt2 R).
Proof. exact (fun_ext (fun a0 : A => @lem325590 A B H lt2 a0 R)). Qed.
Lemma lem325592 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem325593 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (R : type1413 A B) : (term641 A B H lt2 R) = (term638 A B H lt2 R).
Proof. exact (MK_COMB (@lem325592 A) (@lem325591 A B H lt2 R)). Qed.
Lemma lem325594 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem325595 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (R : type1413 A B) : (term650 A B H lt2 R) = (term651 A B H lt2 R).
Proof. exact (MK_COMB (@lem325594) (@lem325593 A B H lt2 R)). Qed.
Lemma lem325596 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (a0 : A) (R : type1413 A B) : (term644 A B H lt2 R a0) = (term635 A B H lt2 a0 R).
Proof. exact (eq_refl (term644 A B H lt2 R a0)). Qed.
Lemma lem325597 {A B : Type'} (z : type1404 A B) (a0 : A) : (z a0) = (z a0).
Proof. exact (eq_refl (z a0)). Qed.
Lemma lem325598 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (R : type1413 A B) (z : type1404 A B) (a0 : A) : (term652 A B H lt2 R z a0) = (term653 A B H lt2 R z a0).
Proof. exact (MK_COMB (@lem325596 A B H lt2 a0 R) (@lem325597 A B z a0)). Qed.
Lemma lem325599 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (R : type1413 A B) (z : type1404 A B) (a0 : A) : (term653 A B H lt2 R z a0) = (term654 A B H lt2 R z a0).
Proof. exact (eq_refl (term653 A B H lt2 R z a0)). Qed.
Lemma lem325600 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (R : type1413 A B) (z : type1404 A B) (a0 : A) : (term652 A B H lt2 R z a0) = (term654 A B H lt2 R z a0).
Proof. exact (TRANS (@lem325598 A B H lt2 R z a0) (@lem325599 A B H lt2 R z a0)). Qed.
Lemma lem325601 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (R : type1413 A B) (z : type1404 A B) : (term655 A B H lt2 R z) = (term656 A B H lt2 R z).
Proof. exact (fun_ext (fun a0 : A => @lem325600 A B H lt2 R z a0)). Qed.
Lemma lem325602 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem325603 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (R : type1413 A B) (z : type1404 A B) : (term657 A B H lt2 R z) = (term658 A B H lt2 R z).
Proof. exact (MK_COMB (@lem325602 A) (@lem325601 A B H lt2 R z)). Qed.
Lemma lem325604 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (R : type1413 A B) : (term659 A B H lt2 R) = (term660 A B H lt2 R).
Proof. exact (fun_ext (fun z : type1404 A B => @lem325603 A B H lt2 R z)). Qed.
Lemma lem325605 {A B : Type'} : (@ex (A -> B -> (A -> B) -> A)) = (@ex (A -> B -> (A -> B) -> A)).
Proof. exact (eq_refl (@ex (A -> B -> (A -> B) -> A))). Qed.
Lemma lem325606 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (R : type1413 A B) : (term642 A B H lt2 R) = (term661 A B H lt2 R).
Proof. exact (MK_COMB (@lem325605 A B) (@lem325604 A B H lt2 R)). Qed.
Lemma lem325607 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (R : type1413 A B) : ((term641 A B H lt2 R) = (term642 A B H lt2 R)) = ((term638 A B H lt2 R) = (term661 A B H lt2 R)).
Proof. exact (MK_COMB (@lem325595 A B H lt2 R) (@lem325606 A B H lt2 R)). Qed.
Lemma lem325608 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (R : type1413 A B) : (term638 A B H lt2 R) = (term661 A B H lt2 R).
Proof. exact (EQ_MP (@lem325607 A B H lt2 R) (@lem325582 A B H lt2 R)). Qed.
Lemma lem325609 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (R : type1413 A B) : (term553 A B H lt2 R) = (term661 A B H lt2 R).
Proof. exact (TRANS (@lem325578 A B H lt2 R) (@lem325608 A B H lt2 R)). Qed.
Lemma lem325610 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem325611 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (R : type1413 A B) : (term555 A B H lt2 R) = (term662 A B H lt2 R).
Proof. exact (MK_COMB (@lem325610) (@lem325609 A B H lt2 R)). Qed.
Lemma lem325613 {A : Type'} (P : Prop) (Q : A -> Prop) : (term560 A P Q) = (term561 A P Q).
Proof. exact (EQ_MP (@lem18911 A P Q) (@lem18910 A P Q)). Qed.
Lemma lem325614 {A B : Type'} (P : Prop) (Q : type572 A B) : (term663 A B P Q) = (term664 A B P Q).
Proof. exact (@lem325613 (A -> B) P Q). Qed.
Lemma lem325615 {A B : Type'} (a1 : B) (H : type549 A B) (lt2 : type1402 A) (a0 : A) (R : type1413 A B) : (term665 A B a1 H lt2 a0 R) = (term666 A B a1 H lt2 a0 R).
Proof. exact (@lem325614 A B (term667 A B R a0 a1) (term500 A B a1 H lt2 a0 R)). Qed.
Lemma lem325616 {A B : Type'} (a1 : B) (H : type549 A B) (lt2 : type1402 A) (a0 : A) (R : type1413 A B) (f : A -> B) : (term668 A B a1 H lt2 a0 R f) = (term490 A B a1 H lt2 a0 R f).
Proof. exact (eq_refl (term668 A B a1 H lt2 a0 R f)). Qed.
Lemma lem325617 {A B : Type'} (a1 : B) (H : type549 A B) (lt2 : type1402 A) (a0 : A) (R : type1413 A B) : (term669 A B a1 H lt2 a0 R) = (term500 A B a1 H lt2 a0 R).
Proof. exact (fun_ext (fun f : A -> B => @lem325616 A B a1 H lt2 a0 R f)). Qed.
Lemma lem325618 {A B : Type'} : (@ex (A -> B)) = (@ex (A -> B)).
Proof. exact (eq_refl (@ex (A -> B))). Qed.
Lemma lem325619 {A B : Type'} (a1 : B) (H : type549 A B) (lt2 : type1402 A) (a0 : A) (R : type1413 A B) : (term670 A B a1 H lt2 a0 R) = (term501 A B a1 H lt2 a0 R).
Proof. exact (MK_COMB (@lem325618 A B) (@lem325617 A B a1 H lt2 a0 R)). Qed.
Lemma lem325620 {A B : Type'} (R : type1413 A B) (a0 : A) (a1 : B) : (term502 A B R a0 a1) = (term502 A B R a0 a1).
Proof. exact (eq_refl (term502 A B R a0 a1)). Qed.
Lemma lem325621 {A B : Type'} (a1 : B) (H : type549 A B) (lt2 : type1402 A) (a0 : A) (R : type1413 A B) : (term665 A B a1 H lt2 a0 R) = (term504 A B a1 H lt2 a0 R).
Proof. exact (MK_COMB (@lem325620 A B R a0 a1) (@lem325619 A B a1 H lt2 a0 R)). Qed.
Lemma lem325622 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem325623 {A B : Type'} (a1 : B) (H : type549 A B) (lt2 : type1402 A) (a0 : A) (R : type1413 A B) : (term671 A B a1 H lt2 a0 R) = (term672 A B a1 H lt2 a0 R).
Proof. exact (MK_COMB (@lem325622) (@lem325621 A B a1 H lt2 a0 R)). Qed.
Lemma lem325624 {A B : Type'} (a1 : B) (H : type549 A B) (lt2 : type1402 A) (a0 : A) (R : type1413 A B) (f : A -> B) : (term668 A B a1 H lt2 a0 R f) = (term490 A B a1 H lt2 a0 R f).
Proof. exact (eq_refl (term668 A B a1 H lt2 a0 R f)). Qed.
Lemma lem325625 {A B : Type'} (R : type1413 A B) (a0 : A) (a1 : B) : (term502 A B R a0 a1) = (term502 A B R a0 a1).
Proof. exact (eq_refl (term502 A B R a0 a1)). Qed.
Lemma lem325626 {A B : Type'} (a1 : B) (H : type549 A B) (lt2 : type1402 A) (a0 : A) (R : type1413 A B) (f : A -> B) : (term673 A B a1 H lt2 a0 R f) = (term674 A B a1 H lt2 a0 R f).
Proof. exact (MK_COMB (@lem325625 A B R a0 a1) (@lem325624 A B a1 H lt2 a0 R f)). Qed.
Lemma lem325627 {A B : Type'} (a1 : B) (H : type549 A B) (lt2 : type1402 A) (a0 : A) (R : type1413 A B) : (term675 A B a1 H lt2 a0 R) = (term676 A B a1 H lt2 a0 R).
Proof. exact (fun_ext (fun f : A -> B => @lem325626 A B a1 H lt2 a0 R f)). Qed.
Lemma lem325628 {A B : Type'} : (@ex (A -> B)) = (@ex (A -> B)).
Proof. exact (eq_refl (@ex (A -> B))). Qed.
Lemma lem325629 {A B : Type'} (a1 : B) (H : type549 A B) (lt2 : type1402 A) (a0 : A) (R : type1413 A B) : (term666 A B a1 H lt2 a0 R) = (term677 A B a1 H lt2 a0 R).
Proof. exact (MK_COMB (@lem325628 A B) (@lem325627 A B a1 H lt2 a0 R)). Qed.
Lemma lem325630 {A B : Type'} (a1 : B) (H : type549 A B) (lt2 : type1402 A) (a0 : A) (R : type1413 A B) : ((term665 A B a1 H lt2 a0 R) = (term666 A B a1 H lt2 a0 R)) = ((term504 A B a1 H lt2 a0 R) = (term677 A B a1 H lt2 a0 R)).
Proof. exact (MK_COMB (@lem325623 A B a1 H lt2 a0 R) (@lem325629 A B a1 H lt2 a0 R)). Qed.
Lemma lem325631 {A B : Type'} (a1 : B) (H : type549 A B) (lt2 : type1402 A) (a0 : A) (R : type1413 A B) : (term504 A B a1 H lt2 a0 R) = (term677 A B a1 H lt2 a0 R).
Proof. exact (EQ_MP (@lem325630 A B a1 H lt2 a0 R) (@lem325615 A B a1 H lt2 a0 R)). Qed.
Lemma lem325632 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (a0 : A) (R : type1413 A B) : (term521 A B H lt2 a0 R) = (term678 A B H lt2 a0 R).
Proof. exact (fun_ext (fun a1 : B => @lem325631 A B a1 H lt2 a0 R)). Qed.
Lemma lem325633 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem325634 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (a0 : A) (R : type1413 A B) : (term536 A B H lt2 a0 R) = (term679 A B H lt2 a0 R).
Proof. exact (MK_COMB (@lem325633 B) (@lem325632 A B H lt2 a0 R)). Qed.
Lemma lem325636 {A B : Type'} (P : type1413 A B) : (term146 A B P) = (term147 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem325637 {A B : Type'} (P : type1446 A B) : (term680 A B P) = (term681 A B P).
Proof. exact (@lem325636 B (A -> B) P). Qed.
Lemma lem325638 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (a0 : A) (R : type1413 A B) : (term682 A B H lt2 a0 R) = (term683 A B H lt2 a0 R).
Proof. exact (@lem325637 A B (term684 A B H lt2 a0 R)). Qed.
Lemma lem325639 {A B : Type'} (a1 : B) (H : type549 A B) (lt2 : type1402 A) (a0 : A) (R : type1413 A B) : (term685 A B H lt2 a0 R a1) = (term676 A B a1 H lt2 a0 R).
Proof. exact (eq_refl (term685 A B H lt2 a0 R a1)). Qed.
Lemma lem325640 {A B : Type'} (f : A -> B) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem325641 {A B : Type'} (a1 : B) (H : type549 A B) (lt2 : type1402 A) (a0 : A) (R : type1413 A B) (f : A -> B) : (term686 A B H lt2 a0 R a1 f) = (term687 A B a1 H lt2 a0 R f).
Proof. exact (MK_COMB (@lem325639 A B a1 H lt2 a0 R) (@lem325640 A B f)). Qed.
Lemma lem325642 {A B : Type'} (a1 : B) (H : type549 A B) (lt2 : type1402 A) (a0 : A) (R : type1413 A B) (f : A -> B) : (term687 A B a1 H lt2 a0 R f) = (term674 A B a1 H lt2 a0 R f).
Proof. exact (eq_refl (term687 A B a1 H lt2 a0 R f)). Qed.
Lemma lem325643 {A B : Type'} (a1 : B) (H : type549 A B) (lt2 : type1402 A) (a0 : A) (R : type1413 A B) (f : A -> B) : (term686 A B H lt2 a0 R a1 f) = (term674 A B a1 H lt2 a0 R f).
Proof. exact (TRANS (@lem325641 A B a1 H lt2 a0 R f) (@lem325642 A B a1 H lt2 a0 R f)). Qed.
Lemma lem325644 {A B : Type'} (a1 : B) (H : type549 A B) (lt2 : type1402 A) (a0 : A) (R : type1413 A B) : (term688 A B H lt2 a0 R a1) = (term676 A B a1 H lt2 a0 R).
Proof. exact (fun_ext (fun f : A -> B => @lem325643 A B a1 H lt2 a0 R f)). Qed.
Lemma lem325645 {A B : Type'} : (@ex (A -> B)) = (@ex (A -> B)).
Proof. exact (eq_refl (@ex (A -> B))). Qed.
Lemma lem325646 {A B : Type'} (a1 : B) (H : type549 A B) (lt2 : type1402 A) (a0 : A) (R : type1413 A B) : (term689 A B H lt2 a0 R a1) = (term677 A B a1 H lt2 a0 R).
Proof. exact (MK_COMB (@lem325645 A B) (@lem325644 A B a1 H lt2 a0 R)). Qed.
Lemma lem325647 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (a0 : A) (R : type1413 A B) : (term690 A B H lt2 a0 R) = (term678 A B H lt2 a0 R).
Proof. exact (fun_ext (fun a1 : B => @lem325646 A B a1 H lt2 a0 R)). Qed.
Lemma lem325648 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem325649 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (a0 : A) (R : type1413 A B) : (term682 A B H lt2 a0 R) = (term679 A B H lt2 a0 R).
Proof. exact (MK_COMB (@lem325648 B) (@lem325647 A B H lt2 a0 R)). Qed.
Lemma lem325650 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem325651 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (a0 : A) (R : type1413 A B) : (term691 A B H lt2 a0 R) = (term692 A B H lt2 a0 R).
Proof. exact (MK_COMB (@lem325650) (@lem325649 A B H lt2 a0 R)). Qed.
Lemma lem325652 {A B : Type'} (a1 : B) (H : type549 A B) (lt2 : type1402 A) (a0 : A) (R : type1413 A B) : (term685 A B H lt2 a0 R a1) = (term676 A B a1 H lt2 a0 R).
Proof. exact (eq_refl (term685 A B H lt2 a0 R a1)). Qed.
Lemma lem325653 {A B : Type'} (f : type1468 A B) (a1 : B) : (f a1) = (f a1).
Proof. exact (eq_refl (f a1)). Qed.
Lemma lem325654 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (a0 : A) (R : type1413 A B) (f : type1468 A B) (a1 : B) : (term693 A B H lt2 a0 R f a1) = (term694 A B H lt2 a0 R f a1).
Proof. exact (MK_COMB (@lem325652 A B a1 H lt2 a0 R) (@lem325653 A B f a1)). Qed.
Lemma lem325655 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (a0 : A) (R : type1413 A B) (f : type1468 A B) (a1 : B) : (term694 A B H lt2 a0 R f a1) = (term695 A B H lt2 a0 R f a1).
Proof. exact (eq_refl (term694 A B H lt2 a0 R f a1)). Qed.
Lemma lem325656 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (a0 : A) (R : type1413 A B) (f : type1468 A B) (a1 : B) : (term693 A B H lt2 a0 R f a1) = (term695 A B H lt2 a0 R f a1).
Proof. exact (TRANS (@lem325654 A B H lt2 a0 R f a1) (@lem325655 A B H lt2 a0 R f a1)). Qed.
Lemma lem325657 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (a0 : A) (R : type1413 A B) (f : type1468 A B) : (term696 A B H lt2 a0 R f) = (term697 A B H lt2 a0 R f).
Proof. exact (fun_ext (fun a1 : B => @lem325656 A B H lt2 a0 R f a1)). Qed.
Lemma lem325658 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem325659 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (a0 : A) (R : type1413 A B) (f : type1468 A B) : (term698 A B H lt2 a0 R f) = (term699 A B H lt2 a0 R f).
Proof. exact (MK_COMB (@lem325658 B) (@lem325657 A B H lt2 a0 R f)). Qed.
Lemma lem325660 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (a0 : A) (R : type1413 A B) : (term700 A B H lt2 a0 R) = (term701 A B H lt2 a0 R).
Proof. exact (fun_ext (fun f : type1468 A B => @lem325659 A B H lt2 a0 R f)). Qed.
Lemma lem325661 {A B : Type'} : (@ex (B -> A -> B)) = (@ex (B -> A -> B)).
Proof. exact (eq_refl (@ex (B -> A -> B))). Qed.
Lemma lem325662 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (a0 : A) (R : type1413 A B) : (term683 A B H lt2 a0 R) = (term702 A B H lt2 a0 R).
Proof. exact (MK_COMB (@lem325661 A B) (@lem325660 A B H lt2 a0 R)). Qed.
Lemma lem325663 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (a0 : A) (R : type1413 A B) : ((term682 A B H lt2 a0 R) = (term683 A B H lt2 a0 R)) = ((term679 A B H lt2 a0 R) = (term702 A B H lt2 a0 R)).
Proof. exact (MK_COMB (@lem325651 A B H lt2 a0 R) (@lem325662 A B H lt2 a0 R)). Qed.
Lemma lem325664 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (a0 : A) (R : type1413 A B) : (term679 A B H lt2 a0 R) = (term702 A B H lt2 a0 R).
Proof. exact (EQ_MP (@lem325663 A B H lt2 a0 R) (@lem325638 A B H lt2 a0 R)). Qed.
Lemma lem325665 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (a0 : A) (R : type1413 A B) : (term536 A B H lt2 a0 R) = (term702 A B H lt2 a0 R).
Proof. exact (TRANS (@lem325634 A B H lt2 a0 R) (@lem325664 A B H lt2 a0 R)). Qed.
Lemma lem325666 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (R : type1413 A B) : (term543 A B H lt2 R) = (term703 A B H lt2 R).
Proof. exact (fun_ext (fun a0 : A => @lem325665 A B H lt2 a0 R)). Qed.
Lemma lem325667 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem325668 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (R : type1413 A B) : (term558 A B H lt2 R) = (term704 A B H lt2 R).
Proof. exact (MK_COMB (@lem325667 A) (@lem325666 A B H lt2 R)). Qed.
Lemma lem325670 {A B : Type'} (P : type1413 A B) : (term146 A B P) = (term147 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem325671 {A B : Type'} (P : type1369 A B) : (term705 A B P) = (term706 A B P).
Proof. exact (@lem325670 A (type1468 A B) P). Qed.
Lemma lem325672 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (R : type1413 A B) : (term707 A B H lt2 R) = (term708 A B H lt2 R).
Proof. exact (@lem325671 A B (term709 A B H lt2 R)). Qed.
Lemma lem325673 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (a0 : A) (R : type1413 A B) : (term710 A B H lt2 R a0) = (term701 A B H lt2 a0 R).
Proof. exact (eq_refl (term710 A B H lt2 R a0)). Qed.
Lemma lem325674 {A B : Type'} (f : type1468 A B) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem325675 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (a0 : A) (R : type1413 A B) (f : type1468 A B) : (term711 A B H lt2 R a0 f) = (term712 A B H lt2 a0 R f).
Proof. exact (MK_COMB (@lem325673 A B H lt2 a0 R) (@lem325674 A B f)). Qed.
Lemma lem325676 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (a0 : A) (R : type1413 A B) (f : type1468 A B) : (term712 A B H lt2 a0 R f) = (term699 A B H lt2 a0 R f).
Proof. exact (eq_refl (term712 A B H lt2 a0 R f)). Qed.
Lemma lem325677 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (a0 : A) (R : type1413 A B) (f : type1468 A B) : (term711 A B H lt2 R a0 f) = (term699 A B H lt2 a0 R f).
Proof. exact (TRANS (@lem325675 A B H lt2 a0 R f) (@lem325676 A B H lt2 a0 R f)). Qed.
Lemma lem325678 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (a0 : A) (R : type1413 A B) : (term713 A B H lt2 R a0) = (term701 A B H lt2 a0 R).
Proof. exact (fun_ext (fun f : type1468 A B => @lem325677 A B H lt2 a0 R f)). Qed.
Lemma lem325679 {A B : Type'} : (@ex (B -> A -> B)) = (@ex (B -> A -> B)).
Proof. exact (eq_refl (@ex (B -> A -> B))). Qed.
Lemma lem325680 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (a0 : A) (R : type1413 A B) : (term714 A B H lt2 R a0) = (term702 A B H lt2 a0 R).
Proof. exact (MK_COMB (@lem325679 A B) (@lem325678 A B H lt2 a0 R)). Qed.
Lemma lem325681 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (R : type1413 A B) : (term715 A B H lt2 R) = (term703 A B H lt2 R).
Proof. exact (fun_ext (fun a0 : A => @lem325680 A B H lt2 a0 R)). Qed.
Lemma lem325682 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem325683 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (R : type1413 A B) : (term707 A B H lt2 R) = (term704 A B H lt2 R).
Proof. exact (MK_COMB (@lem325682 A) (@lem325681 A B H lt2 R)). Qed.
Lemma lem325684 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem325685 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (R : type1413 A B) : (term716 A B H lt2 R) = (term717 A B H lt2 R).
Proof. exact (MK_COMB (@lem325684) (@lem325683 A B H lt2 R)). Qed.
Lemma lem325686 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (a0 : A) (R : type1413 A B) : (term710 A B H lt2 R a0) = (term701 A B H lt2 a0 R).
Proof. exact (eq_refl (term710 A B H lt2 R a0)). Qed.
Lemma lem325687 {A B : Type'} (f : type1405 A B) (a0 : A) : (f a0) = (f a0).
Proof. exact (eq_refl (f a0)). Qed.
Lemma lem325688 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (R : type1413 A B) (f : type1405 A B) (a0 : A) : (term718 A B H lt2 R f a0) = (term719 A B H lt2 R f a0).
Proof. exact (MK_COMB (@lem325686 A B H lt2 a0 R) (@lem325687 A B f a0)). Qed.
Lemma lem325689 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (R : type1413 A B) (f : type1405 A B) (a0 : A) : (term719 A B H lt2 R f a0) = (term720 A B H lt2 R f a0).
Proof. exact (eq_refl (term719 A B H lt2 R f a0)). Qed.
Lemma lem325690 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (R : type1413 A B) (f : type1405 A B) (a0 : A) : (term718 A B H lt2 R f a0) = (term720 A B H lt2 R f a0).
Proof. exact (TRANS (@lem325688 A B H lt2 R f a0) (@lem325689 A B H lt2 R f a0)). Qed.
Lemma lem325691 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (R : type1413 A B) (f : type1405 A B) : (term721 A B H lt2 R f) = (term722 A B H lt2 R f).
Proof. exact (fun_ext (fun a0 : A => @lem325690 A B H lt2 R f a0)). Qed.
Lemma lem325692 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem325693 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (R : type1413 A B) (f : type1405 A B) : (term723 A B H lt2 R f) = (term724 A B H lt2 R f).
Proof. exact (MK_COMB (@lem325692 A) (@lem325691 A B H lt2 R f)). Qed.
Lemma lem325694 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (R : type1413 A B) : (term725 A B H lt2 R) = (term726 A B H lt2 R).
Proof. exact (fun_ext (fun f : type1405 A B => @lem325693 A B H lt2 R f)). Qed.
Lemma lem325695 {A B : Type'} : (@ex (A -> B -> A -> B)) = (@ex (A -> B -> A -> B)).
Proof. exact (eq_refl (@ex (A -> B -> A -> B))). Qed.
Lemma lem325696 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (R : type1413 A B) : (term708 A B H lt2 R) = (term727 A B H lt2 R).
Proof. exact (MK_COMB (@lem325695 A B) (@lem325694 A B H lt2 R)). Qed.
Lemma lem325697 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (R : type1413 A B) : ((term707 A B H lt2 R) = (term708 A B H lt2 R)) = ((term704 A B H lt2 R) = (term727 A B H lt2 R)).
Proof. exact (MK_COMB (@lem325685 A B H lt2 R) (@lem325696 A B H lt2 R)). Qed.
Lemma lem325698 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (R : type1413 A B) : (term704 A B H lt2 R) = (term727 A B H lt2 R).
Proof. exact (EQ_MP (@lem325697 A B H lt2 R) (@lem325672 A B H lt2 R)). Qed.
Lemma lem325699 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (R : type1413 A B) : (term558 A B H lt2 R) = (term727 A B H lt2 R).
Proof. exact (TRANS (@lem325668 A B H lt2 R) (@lem325698 A B H lt2 R)). Qed.
Lemma lem325700 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (R : type1413 A B) : (term559 A B H lt2 R) = (term728 A B H lt2 R).
Proof. exact (MK_COMB (@lem325611 A B H lt2 R) (@lem325699 A B H lt2 R)). Qed.
Lemma lem325702 {A : Type'} (P : A -> Prop) (Q : Prop) : (term729 A P Q) = (term730 A P Q).
Proof. exact (EQ_MP (@lem18923 A P Q) (@lem18922 A P Q)). Qed.
Lemma lem325703 {A B : Type'} (P : type423 A B) (Q : Prop) : (term731 A B P Q) = (term732 A B P Q).
Proof. exact (@lem325702 (type1404 A B) P Q). Qed.
Lemma lem325704 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (R : type1413 A B) : (term733 A B H lt2 R) = (term734 A B H lt2 R).
Proof. exact (@lem325703 A B (term660 A B H lt2 R) (term727 A B H lt2 R)). Qed.
Lemma lem325705 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (R : type1413 A B) (z : type1404 A B) : (term735 A B H lt2 R z) = (term658 A B H lt2 R z).
Proof. exact (eq_refl (term735 A B H lt2 R z)). Qed.
Lemma lem325706 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (R : type1413 A B) : (term736 A B H lt2 R) = (term660 A B H lt2 R).
Proof. exact (fun_ext (fun z : type1404 A B => @lem325705 A B H lt2 R z)). Qed.
Lemma lem325707 {A B : Type'} : (@ex (A -> B -> (A -> B) -> A)) = (@ex (A -> B -> (A -> B) -> A)).
Proof. exact (eq_refl (@ex (A -> B -> (A -> B) -> A))). Qed.
Lemma lem325708 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (R : type1413 A B) : (term737 A B H lt2 R) = (term661 A B H lt2 R).
Proof. exact (MK_COMB (@lem325707 A B) (@lem325706 A B H lt2 R)). Qed.
Lemma lem325709 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem325710 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (R : type1413 A B) : (term738 A B H lt2 R) = (term662 A B H lt2 R).
Proof. exact (MK_COMB (@lem325709) (@lem325708 A B H lt2 R)). Qed.
Lemma lem325711 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (R : type1413 A B) : (term727 A B H lt2 R) = (term727 A B H lt2 R).
Proof. exact (eq_refl (term727 A B H lt2 R)). Qed.
Lemma lem325712 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (R : type1413 A B) : (term733 A B H lt2 R) = (term728 A B H lt2 R).
Proof. exact (MK_COMB (@lem325710 A B H lt2 R) (@lem325711 A B H lt2 R)). Qed.
Lemma lem325713 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem325714 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (R : type1413 A B) : (term739 A B H lt2 R) = (term740 A B H lt2 R).
Proof. exact (MK_COMB (@lem325713) (@lem325712 A B H lt2 R)). Qed.
Lemma lem325715 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (R : type1413 A B) (z : type1404 A B) : (term735 A B H lt2 R z) = (term658 A B H lt2 R z).
Proof. exact (eq_refl (term735 A B H lt2 R z)). Qed.
Lemma lem325716 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem325717 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (R : type1413 A B) (z : type1404 A B) : (term741 A B H lt2 R z) = (term742 A B H lt2 R z).
Proof. exact (MK_COMB (@lem325716) (@lem325715 A B H lt2 R z)). Qed.
Lemma lem325718 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (R : type1413 A B) : (term727 A B H lt2 R) = (term727 A B H lt2 R).
Proof. exact (eq_refl (term727 A B H lt2 R)). Qed.
Lemma lem325719 {A B : Type'} (z : type1404 A B) (H : type549 A B) (lt2 : type1402 A) (R : type1413 A B) : (term743 A B z H lt2 R) = (term744 A B z H lt2 R).
Proof. exact (MK_COMB (@lem325717 A B H lt2 R z) (@lem325718 A B H lt2 R)). Qed.
Lemma lem325720 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (R : type1413 A B) : (term745 A B H lt2 R) = (term746 A B H lt2 R).
Proof. exact (fun_ext (fun z : type1404 A B => @lem325719 A B z H lt2 R)). Qed.
Lemma lem325721 {A B : Type'} : (@ex (A -> B -> (A -> B) -> A)) = (@ex (A -> B -> (A -> B) -> A)).
Proof. exact (eq_refl (@ex (A -> B -> (A -> B) -> A))). Qed.
Lemma lem325722 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (R : type1413 A B) : (term734 A B H lt2 R) = (term747 A B H lt2 R).
Proof. exact (MK_COMB (@lem325721 A B) (@lem325720 A B H lt2 R)). Qed.
Lemma lem325723 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (R : type1413 A B) : ((term733 A B H lt2 R) = (term734 A B H lt2 R)) = ((term728 A B H lt2 R) = (term747 A B H lt2 R)).
Proof. exact (MK_COMB (@lem325714 A B H lt2 R) (@lem325722 A B H lt2 R)). Qed.
Lemma lem325724 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (R : type1413 A B) : (term728 A B H lt2 R) = (term747 A B H lt2 R).
Proof. exact (EQ_MP (@lem325723 A B H lt2 R) (@lem325704 A B H lt2 R)). Qed.
Lemma lem325726 {A : Type'} (P : Prop) (Q : A -> Prop) : (term748 A P Q) = (term749 A P Q).
Proof. exact (EQ_MP (@lem18929 A P Q) (@lem18928 A P Q)). Qed.
Lemma lem325727 {A B : Type'} (P : Prop) (Q : type424 A B) : (term750 A B P Q) = (term751 A B P Q).
Proof. exact (@lem325726 (type1405 A B) P Q). Qed.
Lemma lem325728 {A B : Type'} (z : type1404 A B) (H : type549 A B) (lt2 : type1402 A) (R : type1413 A B) : (term752 A B z H lt2 R) = (term753 A B z H lt2 R).
Proof. exact (@lem325727 A B (term658 A B H lt2 R z) (term726 A B H lt2 R)). Qed.
Lemma lem325729 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (R : type1413 A B) (f : type1405 A B) : (term754 A B H lt2 R f) = (term724 A B H lt2 R f).
Proof. exact (eq_refl (term754 A B H lt2 R f)). Qed.
Lemma lem325730 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (R : type1413 A B) : (term755 A B H lt2 R) = (term726 A B H lt2 R).
Proof. exact (fun_ext (fun f : type1405 A B => @lem325729 A B H lt2 R f)). Qed.
Lemma lem325731 {A B : Type'} : (@ex (A -> B -> A -> B)) = (@ex (A -> B -> A -> B)).
Proof. exact (eq_refl (@ex (A -> B -> A -> B))). Qed.
Lemma lem325732 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (R : type1413 A B) : (term756 A B H lt2 R) = (term727 A B H lt2 R).
Proof. exact (MK_COMB (@lem325731 A B) (@lem325730 A B H lt2 R)). Qed.
Lemma lem325733 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (R : type1413 A B) (z : type1404 A B) : (term742 A B H lt2 R z) = (term742 A B H lt2 R z).
Proof. exact (eq_refl (term742 A B H lt2 R z)). Qed.
Lemma lem325734 {A B : Type'} (z : type1404 A B) (H : type549 A B) (lt2 : type1402 A) (R : type1413 A B) : (term752 A B z H lt2 R) = (term744 A B z H lt2 R).
Proof. exact (MK_COMB (@lem325733 A B H lt2 R z) (@lem325732 A B H lt2 R)). Qed.
Lemma lem325735 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem325736 {A B : Type'} (z : type1404 A B) (H : type549 A B) (lt2 : type1402 A) (R : type1413 A B) : (term757 A B z H lt2 R) = (term758 A B z H lt2 R).
Proof. exact (MK_COMB (@lem325735) (@lem325734 A B z H lt2 R)). Qed.
Lemma lem325737 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (R : type1413 A B) (f : type1405 A B) : (term754 A B H lt2 R f) = (term724 A B H lt2 R f).
Proof. exact (eq_refl (term754 A B H lt2 R f)). Qed.
Lemma lem325738 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (R : type1413 A B) (z : type1404 A B) : (term742 A B H lt2 R z) = (term742 A B H lt2 R z).
Proof. exact (eq_refl (term742 A B H lt2 R z)). Qed.
Lemma lem325739 {A B : Type'} (z : type1404 A B) (H : type549 A B) (lt2 : type1402 A) (R : type1413 A B) (f : type1405 A B) : (term759 A B z H lt2 R f) = (term760 A B z H lt2 R f).
Proof. exact (MK_COMB (@lem325738 A B H lt2 R z) (@lem325737 A B H lt2 R f)). Qed.
Lemma lem325740 {A B : Type'} (z : type1404 A B) (H : type549 A B) (lt2 : type1402 A) (R : type1413 A B) : (term761 A B z H lt2 R) = (term762 A B z H lt2 R).
Proof. exact (fun_ext (fun f : type1405 A B => @lem325739 A B z H lt2 R f)). Qed.
Lemma lem325741 {A B : Type'} : (@ex (A -> B -> A -> B)) = (@ex (A -> B -> A -> B)).
Proof. exact (eq_refl (@ex (A -> B -> A -> B))). Qed.
Lemma lem325742 {A B : Type'} (z : type1404 A B) (H : type549 A B) (lt2 : type1402 A) (R : type1413 A B) : (term753 A B z H lt2 R) = (term763 A B z H lt2 R).
Proof. exact (MK_COMB (@lem325741 A B) (@lem325740 A B z H lt2 R)). Qed.
Lemma lem325743 {A B : Type'} (z : type1404 A B) (H : type549 A B) (lt2 : type1402 A) (R : type1413 A B) : ((term752 A B z H lt2 R) = (term753 A B z H lt2 R)) = ((term744 A B z H lt2 R) = (term763 A B z H lt2 R)).
Proof. exact (MK_COMB (@lem325736 A B z H lt2 R) (@lem325742 A B z H lt2 R)). Qed.
Lemma lem325744 {A B : Type'} (z : type1404 A B) (H : type549 A B) (lt2 : type1402 A) (R : type1413 A B) : (term744 A B z H lt2 R) = (term763 A B z H lt2 R).
Proof. exact (EQ_MP (@lem325743 A B z H lt2 R) (@lem325728 A B z H lt2 R)). Qed.
Lemma lem325745 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (R : type1413 A B) : (term746 A B H lt2 R) = (term764 A B H lt2 R).
Proof. exact (fun_ext (fun z : type1404 A B => @lem325744 A B z H lt2 R)). Qed.
Lemma lem325746 {A B : Type'} : (@ex (A -> B -> (A -> B) -> A)) = (@ex (A -> B -> (A -> B) -> A)).
Proof. exact (eq_refl (@ex (A -> B -> (A -> B) -> A))). Qed.
Lemma lem325747 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (R : type1413 A B) : (term747 A B H lt2 R) = (term765 A B H lt2 R).
Proof. exact (MK_COMB (@lem325746 A B) (@lem325745 A B H lt2 R)). Qed.
Lemma lem325748 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (R : type1413 A B) : (term728 A B H lt2 R) = (term765 A B H lt2 R).
Proof. exact (TRANS (@lem325724 A B H lt2 R) (@lem325747 A B H lt2 R)). Qed.
Lemma lem325749 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (R : type1413 A B) : (term559 A B H lt2 R) = (term765 A B H lt2 R).
Proof. exact (TRANS (@lem325700 A B H lt2 R) (@lem325748 A B H lt2 R)). Qed.
Lemma lem325750 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (R : type1413 A B) : (term515 A B H lt2 R) = (term765 A B H lt2 R).
Proof. exact (TRANS (@lem325464 A B H lt2 R) (@lem325749 A B H lt2 R)). Qed.
Lemma lem325751 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (R : type1413 A B) : (term4 A B H lt2 R) = (term765 A B H lt2 R).
Proof. exact (TRANS (@lem324818 A B H lt2 R) (@lem325750 A B H lt2 R)). Qed.
Lemma lem325752 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (R : type1413 A B) (h1 : term4 A B H lt2 R) : term765 A B H lt2 R.
Proof. exact (EQ_MP (@lem325751 A B H lt2 R) (@lem323633 A B H lt2 R h1)). Qed.
Lemma lem325754 {A : Type'} (P : A -> Prop) : (term112 A P) = (term113 A P).
Proof. exact (@lem18392 A P). Qed.
Lemma lem325755 {A B : Type'} (H : type549 A B) (f : A -> B) : (term766 A B H f) = (term767 A B H f).
Proof. exact (@lem325754 A (term53 A B H f)). Qed.
Lemma lem325756 {A B : Type'} (H : type549 A B) (f : A -> B) (x : A) : (term768 A B H f x) = ((f x) = (H f x)).
Proof. exact (eq_refl (term768 A B H f x)). Qed.
Lemma lem325757 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem325759 {A B : Type'} (H : type549 A B) (f : A -> B) (x : A) : (term769 A B H f x) = (term770 A B H f x).
Proof. exact (MK_COMB (@lem325757) (@lem325756 A B H f x)). Qed.
Lemma lem325760 {A B : Type'} (H : type549 A B) (f : A -> B) : (term771 A B H f) = (term772 A B H f).
Proof. exact (fun_ext (fun x : A => @lem325759 A B H f x)). Qed.
Lemma lem325761 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem325762 {A B : Type'} (H : type549 A B) (f : A -> B) : (term767 A B H f) = (term773 A B H f).
Proof. exact (MK_COMB (@lem325761 A) (@lem325760 A B H f)). Qed.
Lemma lem325763 {A B : Type'} (H : type549 A B) (f : A -> B) : (term766 A B H f) = (term773 A B H f).
Proof. exact (TRANS (@lem325755 A B H f) (@lem325762 A B H f)). Qed.
Lemma lem325764 {A B : Type'} (P : type572 A B) : (term491 A B P) = (term492 A B P).
Proof. exact (@lem18394 (A -> B) P). Qed.
Lemma lem325765 {A B : Type'} (H : type549 A B) : (term10 A B H) = (term774 A B H).
Proof. exact (@lem325764 A B (term55 A B H)). Qed.
Lemma lem325766 {A B : Type'} (H : type549 A B) (f : A -> B) : (term775 A B H f) = (term54 A B H f).
Proof. exact (eq_refl (term775 A B H f)). Qed.
Lemma lem325767 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem325768 {A B : Type'} (H : type549 A B) (f : A -> B) : (term776 A B H f) = (term766 A B H f).
Proof. exact (MK_COMB (@lem325767) (@lem325766 A B H f)). Qed.
Lemma lem325769 {A B : Type'} (H : type549 A B) (f : A -> B) : (term776 A B H f) = (term773 A B H f).
Proof. exact (TRANS (@lem325768 A B H f) (@lem325763 A B H f)). Qed.
Lemma lem325770 {A B : Type'} (H : type549 A B) : (term777 A B H) = (term778 A B H).
Proof. exact (fun_ext (fun f : A -> B => @lem325769 A B H f)). Qed.
Lemma lem325771 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem325772 {A B : Type'} (H : type549 A B) : (term774 A B H) = (term779 A B H).
Proof. exact (MK_COMB (@lem325771 A B) (@lem325770 A B H)). Qed.
Lemma lem325773 {A B : Type'} (H : type549 A B) : (term10 A B H) = (term779 A B H).
Proof. exact (TRANS (@lem325765 A B H) (@lem325772 A B H)). Qed.
Lemma lem325784 {A B : Type'} (P : type1413 A B) : (term146 A B P) = (term147 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem325785 {A B : Type'} (P : type551 A B) : (term574 A B P) = (term575 A B P).
Proof. exact (@lem325784 (A -> B) A P). Qed.
Lemma lem325786 {A B : Type'} (H : type549 A B) : (term780 A B H) = (term781 A B H).
Proof. exact (@lem325785 A B (term782 A B H)). Qed.
Lemma lem325787 {A B : Type'} (H : type549 A B) (f : A -> B) : (term783 A B H f) = (term772 A B H f).
Proof. exact (eq_refl (term783 A B H f)). Qed.
Lemma lem325788 {A : Type'} (x : A) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem325789 {A B : Type'} (H : type549 A B) (f : A -> B) (x : A) : (term784 A B H f x) = (term785 A B H f x).
Proof. exact (MK_COMB (@lem325787 A B H f) (@lem325788 A x)). Qed.
Lemma lem325790 {A B : Type'} (H : type549 A B) (f : A -> B) (x : A) : (term785 A B H f x) = (term770 A B H f x).
Proof. exact (eq_refl (term785 A B H f x)). Qed.
Lemma lem325791 {A B : Type'} (H : type549 A B) (f : A -> B) (x : A) : (term784 A B H f x) = (term770 A B H f x).
Proof. exact (TRANS (@lem325789 A B H f x) (@lem325790 A B H f x)). Qed.
Lemma lem325792 {A B : Type'} (H : type549 A B) (f : A -> B) : (term786 A B H f) = (term772 A B H f).
Proof. exact (fun_ext (fun x : A => @lem325791 A B H f x)). Qed.
Lemma lem325793 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem325794 {A B : Type'} (H : type549 A B) (f : A -> B) : (term787 A B H f) = (term773 A B H f).
Proof. exact (MK_COMB (@lem325793 A) (@lem325792 A B H f)). Qed.
Lemma lem325795 {A B : Type'} (H : type549 A B) : (term788 A B H) = (term778 A B H).
Proof. exact (fun_ext (fun f : A -> B => @lem325794 A B H f)). Qed.
Lemma lem325796 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem325797 {A B : Type'} (H : type549 A B) : (term780 A B H) = (term779 A B H).
Proof. exact (MK_COMB (@lem325796 A B) (@lem325795 A B H)). Qed.
Lemma lem325798 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem325799 {A B : Type'} (H : type549 A B) : (term789 A B H) = (term790 A B H).
Proof. exact (MK_COMB (@lem325798) (@lem325797 A B H)). Qed.
Lemma lem325800 {A B : Type'} (H : type549 A B) (f : A -> B) : (term783 A B H f) = (term772 A B H f).
Proof. exact (eq_refl (term783 A B H f)). Qed.
Lemma lem325801 {A B : Type'} (x : type569 A B) (f : A -> B) : (x f) = (x f).
Proof. exact (eq_refl (x f)). Qed.
Lemma lem325802 {A B : Type'} (H : type549 A B) (x : type569 A B) (f : A -> B) : (term791 A B H x f) = (term792 A B H x f).
Proof. exact (MK_COMB (@lem325800 A B H f) (@lem325801 A B x f)). Qed.
Lemma lem325803 {A B : Type'} (H : type549 A B) (x : type569 A B) (f : A -> B) : (term792 A B H x f) = (term793 A B H x f).
Proof. exact (eq_refl (term792 A B H x f)). Qed.
Lemma lem325804 {A B : Type'} (H : type549 A B) (x : type569 A B) (f : A -> B) : (term791 A B H x f) = (term793 A B H x f).
Proof. exact (TRANS (@lem325802 A B H x f) (@lem325803 A B H x f)). Qed.
Lemma lem325805 {A B : Type'} (H : type549 A B) (x : type569 A B) : (term794 A B H x) = (term795 A B H x).
Proof. exact (fun_ext (fun f : A -> B => @lem325804 A B H x f)). Qed.
Lemma lem325806 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem325807 {A B : Type'} (H : type549 A B) (x : type569 A B) : (term796 A B H x) = (term797 A B H x).
Proof. exact (MK_COMB (@lem325806 A B) (@lem325805 A B H x)). Qed.
Lemma lem325808 {A B : Type'} (H : type549 A B) : (term798 A B H) = (term799 A B H).
Proof. exact (fun_ext (fun x : type569 A B => @lem325807 A B H x)). Qed.
Lemma lem325809 {A B : Type'} : (@ex ((A -> B) -> A)) = (@ex ((A -> B) -> A)).
Proof. exact (eq_refl (@ex ((A -> B) -> A))). Qed.
Lemma lem325810 {A B : Type'} (H : type549 A B) : (term781 A B H) = (term800 A B H).
Proof. exact (MK_COMB (@lem325809 A B) (@lem325808 A B H)). Qed.
Lemma lem325811 {A B : Type'} (H : type549 A B) : ((term780 A B H) = (term781 A B H)) = ((term779 A B H) = (term800 A B H)).
Proof. exact (MK_COMB (@lem325799 A B H) (@lem325810 A B H)). Qed.
Lemma lem325813 {A B : Type'} (H : type549 A B) : (term779 A B H) = (term800 A B H).
Proof. exact (EQ_MP (@lem325811 A B H) (@lem325786 A B H)). Qed.
Lemma lem325814 {A B : Type'} (H : type549 A B) : (term10 A B H) = (term800 A B H).
Proof. exact (TRANS (@lem325773 A B H) (@lem325813 A B H)). Qed.
Lemma lem325815 {A B : Type'} (H : type549 A B) (h1 : term10 A B H) : term800 A B H.
Proof. exact (EQ_MP (@lem325814 A B H) (@lem323634 A B H h1)). Qed.
Lemma lem325816 {A B : Type'} (R : type1413 A B) (x : A) (y : B) : (term667 A B R x y) = (term667 A B R x y).
Proof. exact (eq_refl (term667 A B R x y)). Qed.
Lemma lem325819 {B : Type'} (y' : B) (y : B) : (y' = y) = (y' = y).
Proof. exact (eq_refl (y' = y)). Qed.
Lemma lem325820 {A B : Type'} (R : type1413 A B) (x : A) (y : B) : (term801 A B R x y) = (R x y).
Proof. exact (eq_refl (term801 A B R x y)). Qed.
Lemma lem325821 {A B : Type'} (R : type1413 A B) (x : A) (y' : B) : (term801 A B R x y') = (R x y').
Proof. exact (eq_refl (term801 A B R x y')). Qed.
Lemma lem325822 {A B : Type'} (R : type1413 A B) (x : A) (y' : B) : (term667 A B R x y') = (term667 A B R x y').
Proof. exact (@lem325816 A B R x y'). Qed.
Lemma lem325823 {B : Type'} (P : B -> Prop) : (@ex1 B P) = (term802 B P).
Proof. exact (@lem18897 B P). Qed.
Lemma lem325824 {A B : Type'} (R : type1413 A B) (x : A) : (term51 A B R x) = (term803 A B R x).
Proof. exact (@lem325823 B (term50 A B R x)). Qed.
Lemma lem325825 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem325826 {A B : Type'} (R : type1413 A B) (x : A) (y' : B) : (term804 A B R x y') = (term667 A B R x y').
Proof. exact (MK_COMB (@lem325825) (@lem325821 A B R x y')). Qed.
Lemma lem325827 {A B : Type'} (R : type1413 A B) (x : A) (y' : B) : (term804 A B R x y') = (term667 A B R x y').
Proof. exact (TRANS (@lem325826 A B R x y') (@lem325822 A B R x y')). Qed.
Lemma lem325828 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem325829 {A B : Type'} (R : type1413 A B) (x : A) (y' : B) : (term805 A B R x y') = (term502 A B R x y').
Proof. exact (MK_COMB (@lem325828) (@lem325827 A B R x y')). Qed.
Lemma lem325830 {A B : Type'} (R : type1413 A B) (x : A) (y' : B) (y : B) : (term806 A B R x y' y) = (term807 A B R x y' y).
Proof. exact (MK_COMB (@lem325829 A B R x y') (@lem325819 B y' y)). Qed.
Lemma lem325831 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem325833 {A B : Type'} (R : type1413 A B) (x : A) (y : B) : (term804 A B R x y) = (term667 A B R x y).
Proof. exact (MK_COMB (@lem325831) (@lem325820 A B R x y)). Qed.
Lemma lem325834 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem325835 {A B : Type'} (R : type1413 A B) (x : A) (y : B) : (term805 A B R x y) = (term502 A B R x y).
Proof. exact (MK_COMB (@lem325834) (@lem325833 A B R x y)). Qed.
Lemma lem325836 {A B : Type'} (R : type1413 A B) (x : A) (y' : B) (y : B) : (term808 A B R x y' y) = (term809 A B R x y' y).
Proof. exact (MK_COMB (@lem325835 A B R x y) (@lem325830 A B R x y' y)). Qed.
Lemma lem325837 {A B : Type'} (R : type1413 A B) (x : A) (y : B) : (term810 A B R x y) = (term811 A B R x y).
Proof. exact (fun_ext (fun y' : B => @lem325836 A B R x y' y)). Qed.
Lemma lem325838 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem325839 {A B : Type'} (R : type1413 A B) (x : A) (y : B) : (term812 A B R x y) = (term813 A B R x y).
Proof. exact (MK_COMB (@lem325838 B) (@lem325837 A B R x y)). Qed.
Lemma lem325840 {A B : Type'} (R : type1413 A B) (x : A) : (term814 A B R x) = (term815 A B R x).
Proof. exact (fun_ext (fun y : B => @lem325839 A B R x y)). Qed.
Lemma lem325841 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem325842 {A B : Type'} (R : type1413 A B) (x : A) : (term816 A B R x) = (term817 A B R x).
Proof. exact (MK_COMB (@lem325841 B) (@lem325840 A B R x)). Qed.
Lemma lem325843 {A B : Type'} (R : type1413 A B) (x : A) (y : B) : (term801 A B R x y) = (R x y).
Proof. exact (eq_refl (term801 A B R x y)). Qed.
Lemma lem325844 {A B : Type'} (R : type1413 A B) (x : A) : (term818 A B R x) = (term50 A B R x).
Proof. exact (fun_ext (fun y : B => @lem325843 A B R x y)). Qed.
Lemma lem325845 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem325846 {A B : Type'} (R : type1413 A B) (x : A) : (term819 A B R x) = (term820 A B R x).
Proof. exact (MK_COMB (@lem325845 B) (@lem325844 A B R x)). Qed.
Lemma lem325847 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem325848 {A B : Type'} (R : type1413 A B) (x : A) : (term821 A B R x) = (term822 A B R x).
Proof. exact (MK_COMB (@lem325847) (@lem325846 A B R x)). Qed.
Lemma lem325849 {A B : Type'} (R : type1413 A B) (x : A) : (term803 A B R x) = (term823 A B R x).
Proof. exact (MK_COMB (@lem325848 A B R x) (@lem325842 A B R x)). Qed.
Lemma lem325850 {A B : Type'} (R : type1413 A B) (x : A) : (term51 A B R x) = (term823 A B R x).
Proof. exact (TRANS (@lem325824 A B R x) (@lem325849 A B R x)). Qed.
Lemma lem325851 {A B : Type'} (R : type1413 A B) : (term52 A B R) = (term824 A B R).
Proof. exact (fun_ext (fun x : A => @lem325850 A B R x)). Qed.
Lemma lem325852 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem325853 {A B : Type'} (R : type1413 A B) : (term6 A B R) = (term825 A B R).
Proof. exact (MK_COMB (@lem325852 A) (@lem325851 A B R)). Qed.
Lemma lem325855 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term516 A P Q) = (term517 A P Q).
Proof. exact (EQ_MP (@lem18953 A P Q) (@lem18952 A P Q)). Qed.
Lemma lem325856 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term516 A P Q) = (term517 A P Q).
Proof. exact (@lem325855 A P Q). Qed.
Lemma lem325857 {A B : Type'} (R : type1413 A B) : (term826 A B R) = (term827 A B R).
Proof. exact (@lem325856 A (term828 A B R) (term829 A B R)). Qed.
Lemma lem325858 {A B : Type'} (R : type1413 A B) (x : A) : (term830 A B R x) = (term820 A B R x).
Proof. exact (eq_refl (term830 A B R x)). Qed.
Lemma lem325859 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem325860 {A B : Type'} (R : type1413 A B) (x : A) : (term831 A B R x) = (term822 A B R x).
Proof. exact (MK_COMB (@lem325859) (@lem325858 A B R x)). Qed.
Lemma lem325861 {A B : Type'} (R : type1413 A B) (x : A) : (term832 A B R x) = (term817 A B R x).
Proof. exact (eq_refl (term832 A B R x)). Qed.
Lemma lem325862 {A B : Type'} (R : type1413 A B) (x : A) : (term833 A B R x) = (term823 A B R x).
Proof. exact (MK_COMB (@lem325860 A B R x) (@lem325861 A B R x)). Qed.
Lemma lem325863 {A B : Type'} (R : type1413 A B) : (term834 A B R) = (term824 A B R).
Proof. exact (fun_ext (fun x : A => @lem325862 A B R x)). Qed.
Lemma lem325864 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem325865 {A B : Type'} (R : type1413 A B) : (term826 A B R) = (term825 A B R).
Proof. exact (MK_COMB (@lem325864 A) (@lem325863 A B R)). Qed.
Lemma lem325866 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem325867 {A B : Type'} (R : type1413 A B) : (term835 A B R) = (term836 A B R).
Proof. exact (MK_COMB (@lem325866) (@lem325865 A B R)). Qed.
Lemma lem325868 {A B : Type'} (R : type1413 A B) (x : A) : (term830 A B R x) = (term820 A B R x).
Proof. exact (eq_refl (term830 A B R x)). Qed.
Lemma lem325869 {A B : Type'} (R : type1413 A B) : (term837 A B R) = (term828 A B R).
Proof. exact (fun_ext (fun x : A => @lem325868 A B R x)). Qed.
Lemma lem325870 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem325871 {A B : Type'} (R : type1413 A B) : (term838 A B R) = (term146 A B R).
Proof. exact (MK_COMB (@lem325870 A) (@lem325869 A B R)). Qed.
Lemma lem325872 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem325873 {A B : Type'} (R : type1413 A B) : (term839 A B R) = (term840 A B R).
Proof. exact (MK_COMB (@lem325872) (@lem325871 A B R)). Qed.
Lemma lem325874 {A B : Type'} (R : type1413 A B) (x : A) : (term832 A B R x) = (term817 A B R x).
Proof. exact (eq_refl (term832 A B R x)). Qed.
Lemma lem325875 {A B : Type'} (R : type1413 A B) : (term841 A B R) = (term829 A B R).
Proof. exact (fun_ext (fun x : A => @lem325874 A B R x)). Qed.
Lemma lem325876 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem325877 {A B : Type'} (R : type1413 A B) : (term842 A B R) = (term843 A B R).
Proof. exact (MK_COMB (@lem325876 A) (@lem325875 A B R)). Qed.
Lemma lem325878 {A B : Type'} (R : type1413 A B) : (term827 A B R) = (term844 A B R).
Proof. exact (MK_COMB (@lem325873 A B R) (@lem325877 A B R)). Qed.
Lemma lem325879 {A B : Type'} (R : type1413 A B) : ((term826 A B R) = (term827 A B R)) = ((term825 A B R) = (term844 A B R)).
Proof. exact (MK_COMB (@lem325867 A B R) (@lem325878 A B R)). Qed.
Lemma lem325880 {A B : Type'} (R : type1413 A B) : (term825 A B R) = (term844 A B R).
Proof. exact (EQ_MP (@lem325879 A B R) (@lem325857 A B R)). Qed.
Lemma lem325898 {A : Type'} (P : Prop) (Q : A -> Prop) : (term845 A P Q) = (term846 A P Q).
Proof. exact (EQ_MP (@lem18941 A P Q) (@lem18940 A P Q)). Qed.
Lemma lem325899 {B : Type'} (P : Prop) (Q : B -> Prop) : (term845 B P Q) = (term846 B P Q).
Proof. exact (@lem325898 B P Q). Qed.
Lemma lem325900 {A B : Type'} (R : type1413 A B) (x : A) (y : B) : (term847 A B R x y) = (term848 A B R x y).
Proof. exact (@lem325899 B (term667 A B R x y) (term849 A B R x y)). Qed.
Lemma lem325901 {A B : Type'} (R : type1413 A B) (x : A) (y' : B) (y : B) : (term850 A B R x y y') = (term807 A B R x y' y).
Proof. exact (eq_refl (term850 A B R x y y')). Qed.
Lemma lem325902 {A B : Type'} (R : type1413 A B) (x : A) (y : B) : (term502 A B R x y) = (term502 A B R x y).
Proof. exact (eq_refl (term502 A B R x y)). Qed.
Lemma lem325903 {A B : Type'} (R : type1413 A B) (x : A) (y' : B) (y : B) : (term851 A B R x y y') = (term809 A B R x y' y).
Proof. exact (MK_COMB (@lem325902 A B R x y) (@lem325901 A B R x y' y)). Qed.
Lemma lem325904 {A B : Type'} (R : type1413 A B) (x : A) (y : B) : (term852 A B R x y) = (term811 A B R x y).
Proof. exact (fun_ext (fun y' : B => @lem325903 A B R x y' y)). Qed.
Lemma lem325905 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem325906 {A B : Type'} (R : type1413 A B) (x : A) (y : B) : (term847 A B R x y) = (term813 A B R x y).
Proof. exact (MK_COMB (@lem325905 B) (@lem325904 A B R x y)). Qed.
Lemma lem325907 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem325908 {A B : Type'} (R : type1413 A B) (x : A) (y : B) : (term853 A B R x y) = (term854 A B R x y).
Proof. exact (MK_COMB (@lem325907) (@lem325906 A B R x y)). Qed.
Lemma lem325909 {A B : Type'} (R : type1413 A B) (x : A) (y' : B) (y : B) : (term850 A B R x y y') = (term807 A B R x y' y).
Proof. exact (eq_refl (term850 A B R x y y')). Qed.
Lemma lem325910 {A B : Type'} (R : type1413 A B) (x : A) (y : B) : (term855 A B R x y) = (term849 A B R x y).
Proof. exact (fun_ext (fun y' : B => @lem325909 A B R x y' y)). Qed.
Lemma lem325911 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem325912 {A B : Type'} (R : type1413 A B) (x : A) (y : B) : (term856 A B R x y) = (term857 A B R x y).
Proof. exact (MK_COMB (@lem325911 B) (@lem325910 A B R x y)). Qed.
Lemma lem325913 {A B : Type'} (R : type1413 A B) (x : A) (y : B) : (term502 A B R x y) = (term502 A B R x y).
Proof. exact (eq_refl (term502 A B R x y)). Qed.
Lemma lem325914 {A B : Type'} (R : type1413 A B) (x : A) (y : B) : (term848 A B R x y) = (term858 A B R x y).
Proof. exact (MK_COMB (@lem325913 A B R x y) (@lem325912 A B R x y)). Qed.
Lemma lem325915 {A B : Type'} (R : type1413 A B) (x : A) (y : B) : ((term847 A B R x y) = (term848 A B R x y)) = ((term813 A B R x y) = (term858 A B R x y)).
Proof. exact (MK_COMB (@lem325908 A B R x y) (@lem325914 A B R x y)). Qed.
Lemma lem325916 {A B : Type'} (R : type1413 A B) (x : A) (y : B) : (term813 A B R x y) = (term858 A B R x y).
Proof. exact (EQ_MP (@lem325915 A B R x y) (@lem325900 A B R x y)). Qed.
Lemma lem325965 {A B : Type'} (R : type1413 A B) (x : A) : (term815 A B R x) = (term859 A B R x).
Proof. exact (fun_ext (fun y : B => @lem325916 A B R x y)). Qed.
Lemma lem325966 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem325967 {A B : Type'} (R : type1413 A B) (x : A) : (term817 A B R x) = (term860 A B R x).
Proof. exact (MK_COMB (@lem325966 B) (@lem325965 A B R x)). Qed.
Lemma lem326016 {A B : Type'} (R : type1413 A B) : (term829 A B R) = (term861 A B R).
Proof. exact (fun_ext (fun x : A => @lem325967 A B R x)). Qed.
Lemma lem326017 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem326018 {A B : Type'} (R : type1413 A B) : (term843 A B R) = (term862 A B R).
Proof. exact (MK_COMB (@lem326017 A) (@lem326016 A B R)). Qed.
Lemma lem326023 {A B : Type'} (R : type1413 A B) : (term840 A B R) = (term840 A B R).
Proof. exact (eq_refl (term840 A B R)). Qed.
Lemma lem326024 {A B : Type'} (R : type1413 A B) : (term844 A B R) = (term863 A B R).
Proof. exact (MK_COMB (@lem326023 A B R) (@lem326018 A B R)). Qed.
Lemma lem326025 {A B : Type'} (R : type1413 A B) : (term825 A B R) = (term863 A B R).
Proof. exact (TRANS (@lem325880 A B R) (@lem326024 A B R)). Qed.
Lemma lem326027 {A B : Type'} (P : type1413 A B) : (term146 A B P) = (term147 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem326028 {A B : Type'} (P : type1413 A B) : (term146 A B P) = (term147 A B P).
Proof. exact (@lem326027 A B P). Qed.
Lemma lem326029 {A B : Type'} (R : type1413 A B) : (term146 A B R) = (term147 A B R).
Proof. exact (@lem326028 A B R). Qed.
Lemma lem326030 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem326031 {A B : Type'} (R : type1413 A B) : (term840 A B R) = (term864 A B R).
Proof. exact (MK_COMB (@lem326030) (@lem326029 A B R)). Qed.
Lemma lem326032 {A B : Type'} (R : type1413 A B) : (term862 A B R) = (term862 A B R).
Proof. exact (eq_refl (term862 A B R)). Qed.
Lemma lem326033 {A B : Type'} (R : type1413 A B) : (term863 A B R) = (term865 A B R).
Proof. exact (MK_COMB (@lem326031 A B R) (@lem326032 A B R)). Qed.
Lemma lem326035 {A : Type'} (P : A -> Prop) (Q : Prop) : (term729 A P Q) = (term730 A P Q).
Proof. exact (EQ_MP (@lem18923 A P Q) (@lem18922 A P Q)). Qed.
Lemma lem326036 {A B : Type'} (P : type572 A B) (Q : Prop) : (term866 A B P Q) = (term867 A B P Q).
Proof. exact (@lem326035 (A -> B) P Q). Qed.
Lemma lem326037 {A B : Type'} (R : type1413 A B) : (term868 A B R) = (term869 A B R).
Proof. exact (@lem326036 A B (term870 A B R) (term862 A B R)). Qed.
Lemma lem326038 {A B : Type'} (R : type1413 A B) (y : A -> B) : (term871 A B R y) = (term872 A B R y).
Proof. exact (eq_refl (term871 A B R y)). Qed.
Lemma lem326039 {A B : Type'} (R : type1413 A B) : (term873 A B R) = (term870 A B R).
Proof. exact (fun_ext (fun y : A -> B => @lem326038 A B R y)). Qed.
Lemma lem326040 {A B : Type'} : (@ex (A -> B)) = (@ex (A -> B)).
Proof. exact (eq_refl (@ex (A -> B))). Qed.
Lemma lem326041 {A B : Type'} (R : type1413 A B) : (term874 A B R) = (term147 A B R).
Proof. exact (MK_COMB (@lem326040 A B) (@lem326039 A B R)). Qed.
Lemma lem326042 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem326043 {A B : Type'} (R : type1413 A B) : (term875 A B R) = (term864 A B R).
Proof. exact (MK_COMB (@lem326042) (@lem326041 A B R)). Qed.
Lemma lem326044 {A B : Type'} (R : type1413 A B) : (term862 A B R) = (term862 A B R).
Proof. exact (eq_refl (term862 A B R)). Qed.
Lemma lem326045 {A B : Type'} (R : type1413 A B) : (term868 A B R) = (term865 A B R).
Proof. exact (MK_COMB (@lem326043 A B R) (@lem326044 A B R)). Qed.
Lemma lem326046 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem326047 {A B : Type'} (R : type1413 A B) : (term876 A B R) = (term877 A B R).
Proof. exact (MK_COMB (@lem326046) (@lem326045 A B R)). Qed.
Lemma lem326048 {A B : Type'} (R : type1413 A B) (y : A -> B) : (term871 A B R y) = (term872 A B R y).
Proof. exact (eq_refl (term871 A B R y)). Qed.
Lemma lem326049 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem326050 {A B : Type'} (R : type1413 A B) (y : A -> B) : (term878 A B R y) = (term879 A B R y).
Proof. exact (MK_COMB (@lem326049) (@lem326048 A B R y)). Qed.
Lemma lem326051 {A B : Type'} (R : type1413 A B) : (term862 A B R) = (term862 A B R).
Proof. exact (eq_refl (term862 A B R)). Qed.
Lemma lem326052 {A B : Type'} (y : A -> B) (R : type1413 A B) : (term880 A B y R) = (term881 A B y R).
Proof. exact (MK_COMB (@lem326050 A B R y) (@lem326051 A B R)). Qed.
Lemma lem326053 {A B : Type'} (R : type1413 A B) : (term882 A B R) = (term883 A B R).
Proof. exact (fun_ext (fun y : A -> B => @lem326052 A B y R)). Qed.
Lemma lem326054 {A B : Type'} : (@ex (A -> B)) = (@ex (A -> B)).
Proof. exact (eq_refl (@ex (A -> B))). Qed.
Lemma lem326055 {A B : Type'} (R : type1413 A B) : (term869 A B R) = (term884 A B R).
Proof. exact (MK_COMB (@lem326054 A B) (@lem326053 A B R)). Qed.
Lemma lem326056 {A B : Type'} (R : type1413 A B) : ((term868 A B R) = (term869 A B R)) = ((term865 A B R) = (term884 A B R)).
Proof. exact (MK_COMB (@lem326047 A B R) (@lem326055 A B R)). Qed.
Lemma lem326057 {A B : Type'} (R : type1413 A B) : (term865 A B R) = (term884 A B R).
Proof. exact (EQ_MP (@lem326056 A B R) (@lem326037 A B R)). Qed.
Lemma lem326058 {A B : Type'} (R : type1413 A B) : (term863 A B R) = (term884 A B R).
Proof. exact (TRANS (@lem326033 A B R) (@lem326057 A B R)). Qed.
Lemma lem326059 {A B : Type'} (R : type1413 A B) : (term825 A B R) = (term884 A B R).
Proof. exact (TRANS (@lem326025 A B R) (@lem326058 A B R)). Qed.
Lemma lem326060 {A B : Type'} (R : type1413 A B) : (term6 A B R) = (term884 A B R).
Proof. exact (TRANS (@lem325853 A B R) (@lem326059 A B R)). Qed.
Lemma lem326061 {A B : Type'} (R : type1413 A B) (h1 : term6 A B R) : term884 A B R.
Proof. exact (EQ_MP (@lem326060 A B R) (@lem323635 A B R h1)). Qed.
Lemma lem326062 {A B : Type'} (y : A -> B) (R : type1413 A B) (h1 : term881 A B y R) : term881 A B y R.
Proof. exact (h1). Qed.
Lemma lem326063 {A B : Type'} (H : type549 A B) (x : type569 A B) (h1 : term797 A B H x) : term797 A B H x.
Proof. exact (h1). Qed.
Lemma lem326064 {A B : Type'} (z : type1404 A B) (H : type549 A B) (lt2 : type1402 A) (R : type1413 A B) (h1 : term763 A B z H lt2 R) : term763 A B z H lt2 R.
Proof. exact (h1). Qed.
Lemma lem326066 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (f' : type467 A B) (R : type1413 A B) (h1 : term483 A B lt2 H f' R) : term483 A B lt2 H f' R.
Proof. exact (h1). Qed.
Lemma lem326068 {A B : Type'} (lt2 : type1402 A) (z' : type548 A B) (R : type1413 A B) (H : type549 A B) (h1 : term360 A B lt2 z' R H) : term360 A B lt2 z' R H.
Proof. exact (h1). Qed.
Lemma lem326075 {B : Type'} (y' : B) (y : B) : (y' = y) = (y' = y).
Proof. exact (eq_refl (y' = y)). Qed.
Lemma lem326076 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem326083 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem326084 {A B : Type'} (f : type1413 A B) (x : A) : (f x) = (@I (A -> B -> Prop) f x).
Proof. exact (@lem326083 A (B -> Prop) f x). Qed.
Lemma lem326085 {A B : Type'} (R : type1413 A B) (x : A) : (R x) = (@I (A -> B -> Prop) R x).
Proof. exact (@lem326084 A B R x). Qed.
Lemma lem326086 {B : Type'} (y' : B) : y' = y'.
Proof. exact (eq_refl y'). Qed.
Lemma lem326087 {A B : Type'} (R : type1413 A B) (x : A) (y' : B) : (R x y') = (@I (A -> B -> Prop) R x y').
Proof. exact (MK_COMB (@lem326085 A B R x) (@lem326086 B y')). Qed.
Lemma lem326089 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem326090 {B : Type'} (f : B -> Prop) (x : B) : (f x) = (@I (B -> Prop) f x).
Proof. exact (@lem326089 B Prop f x). Qed.
Lemma lem326091 {A B : Type'} (R : type1413 A B) (x : A) (y' : B) : (@I (A -> B -> Prop) R x y') = (term885 A B R x y').
Proof. exact (@lem326090 B (@I (A -> B -> Prop) R x) y'). Qed.
Lemma lem326093 {A B : Type'} (R : type1413 A B) (x : A) (y' : B) : (R x y') = (term885 A B R x y').
Proof. exact (TRANS (@lem326087 A B R x y') (@lem326091 A B R x y')). Qed.
Lemma lem326094 {A B : Type'} (R : type1413 A B) (x : A) (y' : B) : (term667 A B R x y') = (term886 A B R x y').
Proof. exact (MK_COMB (@lem326076) (@lem326093 A B R x y')). Qed.
Lemma lem326095 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem326096 {A B : Type'} (R : type1413 A B) (x : A) (y' : B) : (term502 A B R x y') = (term887 A B R x y').
Proof. exact (MK_COMB (@lem326095) (@lem326094 A B R x y')). Qed.
Lemma lem326097 {A B : Type'} (R : type1413 A B) (x : A) (y' : B) (y : B) : (term807 A B R x y' y) = (term888 A B R x y' y).
Proof. exact (MK_COMB (@lem326096 A B R x y') (@lem326075 B y' y)). Qed.
Lemma lem326098 {A B : Type'} (R : type1413 A B) (x : A) (y : B) : (term849 A B R x y) = (term889 A B R x y).
Proof. exact (fun_ext (fun y' : B => @lem326097 A B R x y' y)). Qed.
Lemma lem326099 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem326100 {A B : Type'} (R : type1413 A B) (x : A) (y : B) : (term857 A B R x y) = (term890 A B R x y).
Proof. exact (MK_COMB (@lem326099 B) (@lem326098 A B R x y)). Qed.
Lemma lem326101 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem326108 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem326109 {A B : Type'} (f : type1413 A B) (x : A) : (f x) = (@I (A -> B -> Prop) f x).
Proof. exact (@lem326108 A (B -> Prop) f x). Qed.
Lemma lem326110 {A B : Type'} (R : type1413 A B) (x : A) : (R x) = (@I (A -> B -> Prop) R x).
Proof. exact (@lem326109 A B R x). Qed.
Lemma lem326111 {B : Type'} (y : B) : y = y.
Proof. exact (eq_refl y). Qed.
Lemma lem326112 {A B : Type'} (R : type1413 A B) (x : A) (y : B) : (R x y) = (@I (A -> B -> Prop) R x y).
Proof. exact (MK_COMB (@lem326110 A B R x) (@lem326111 B y)). Qed.
Lemma lem326114 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem326115 {B : Type'} (f : B -> Prop) (x : B) : (f x) = (@I (B -> Prop) f x).
Proof. exact (@lem326114 B Prop f x). Qed.
Lemma lem326116 {A B : Type'} (R : type1413 A B) (x : A) (y : B) : (@I (A -> B -> Prop) R x y) = (term885 A B R x y).
Proof. exact (@lem326115 B (@I (A -> B -> Prop) R x) y). Qed.
Lemma lem326118 {A B : Type'} (R : type1413 A B) (x : A) (y : B) : (R x y) = (term885 A B R x y).
Proof. exact (TRANS (@lem326112 A B R x y) (@lem326116 A B R x y)). Qed.
Lemma lem326119 {A B : Type'} (R : type1413 A B) (x : A) (y : B) : (term667 A B R x y) = (term886 A B R x y).
Proof. exact (MK_COMB (@lem326101) (@lem326118 A B R x y)). Qed.
Lemma lem326120 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem326121 {A B : Type'} (R : type1413 A B) (x : A) (y : B) : (term502 A B R x y) = (term887 A B R x y).
Proof. exact (MK_COMB (@lem326120) (@lem326119 A B R x y)). Qed.
Lemma lem326122 {A B : Type'} (R : type1413 A B) (x : A) (y : B) : (term858 A B R x y) = (term891 A B R x y).
Proof. exact (MK_COMB (@lem326121 A B R x y) (@lem326100 A B R x y)). Qed.
Lemma lem326123 {A B : Type'} (R : type1413 A B) (x : A) : (term859 A B R x) = (term892 A B R x).
Proof. exact (fun_ext (fun y : B => @lem326122 A B R x y)). Qed.
Lemma lem326124 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem326125 {A B : Type'} (R : type1413 A B) (x : A) : (term860 A B R x) = (term893 A B R x).
Proof. exact (MK_COMB (@lem326124 B) (@lem326123 A B R x)). Qed.
Lemma lem326126 {A B : Type'} (R : type1413 A B) : (term861 A B R) = (term894 A B R).
Proof. exact (fun_ext (fun x : A => @lem326125 A B R x)). Qed.
Lemma lem326127 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem326128 {A B : Type'} (R : type1413 A B) : (term862 A B R) = (term895 A B R).
Proof. exact (MK_COMB (@lem326127 A) (@lem326126 A B R)). Qed.
Lemma lem326135 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem326136 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (@lem326135 A B f x). Qed.
Lemma lem326138 {A B : Type'} (y : A -> B) (x : A) : (y x) = (@I (A -> B) y x).
Proof. exact (@lem326136 A B y x). Qed.
Lemma lem326139 {A B : Type'} (R : type1413 A B) (x : A) : (R x) = (R x).
Proof. exact (eq_refl (R x)). Qed.
Lemma lem326140 {A B : Type'} (R : type1413 A B) (y : A -> B) (x : A) : (term173 A B R y x) = (term896 A B R y x).
Proof. exact (MK_COMB (@lem326139 A B R x) (@lem326138 A B y x)). Qed.
Lemma lem326142 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem326143 {A B : Type'} (f : type1413 A B) (x : A) : (f x) = (@I (A -> B -> Prop) f x).
Proof. exact (@lem326142 A (B -> Prop) f x). Qed.
Lemma lem326144 {A B : Type'} (R : type1413 A B) (x : A) : (R x) = (@I (A -> B -> Prop) R x).
Proof. exact (@lem326143 A B R x). Qed.
Lemma lem326145 {A B : Type'} (y : A -> B) (x : A) : (@I (A -> B) y x) = (@I (A -> B) y x).
Proof. exact (eq_refl (@I (A -> B) y x)). Qed.
Lemma lem326146 {A B : Type'} (R : type1413 A B) (y : A -> B) (x : A) : (term896 A B R y x) = (term897 A B R y x).
Proof. exact (MK_COMB (@lem326144 A B R x) (@lem326145 A B y x)). Qed.
Lemma lem326148 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem326149 {B : Type'} (f : B -> Prop) (x : B) : (f x) = (@I (B -> Prop) f x).
Proof. exact (@lem326148 B Prop f x). Qed.
Lemma lem326150 {A B : Type'} (R : type1413 A B) (y : A -> B) (x : A) : (term897 A B R y x) = (term898 A B R y x).
Proof. exact (@lem326149 B (@I (A -> B -> Prop) R x) (@I (A -> B) y x)). Qed.
Lemma lem326151 {A B : Type'} (R : type1413 A B) (y : A -> B) (x : A) : (term896 A B R y x) = (term898 A B R y x).
Proof. exact (TRANS (@lem326146 A B R y x) (@lem326150 A B R y x)). Qed.
Lemma lem326152 {A B : Type'} (R : type1413 A B) (y : A -> B) (x : A) : (term173 A B R y x) = (term898 A B R y x).
Proof. exact (TRANS (@lem326140 A B R y x) (@lem326151 A B R y x)). Qed.
Lemma lem326153 {A B : Type'} (R : type1413 A B) (y : A -> B) : (term899 A B R y) = (term900 A B R y).
Proof. exact (fun_ext (fun x : A => @lem326152 A B R y x)). Qed.
Lemma lem326154 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem326155 {A B : Type'} (R : type1413 A B) (y : A -> B) : (term872 A B R y) = (term901 A B R y).
Proof. exact (MK_COMB (@lem326154 A) (@lem326153 A B R y)). Qed.
Lemma lem326156 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem326157 {A B : Type'} (R : type1413 A B) (y : A -> B) : (term879 A B R y) = (term902 A B R y).
Proof. exact (MK_COMB (@lem326156) (@lem326155 A B R y)). Qed.
Lemma lem326158 {A B : Type'} (y : A -> B) (R : type1413 A B) : (term881 A B y R) = (term903 A B y R).
Proof. exact (MK_COMB (@lem326157 A B R y) (@lem326128 A B R)). Qed.
Lemma lem326159 {A B : Type'} (y : A -> B) (R : type1413 A B) (h1 : term881 A B y R) : term903 A B y R.
Proof. exact (EQ_MP (@lem326158 A B y R) (@lem326062 A B y R h1)). Qed.
Lemma lem326160 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem326161 {B : Type'} : (@eq B) = (@eq B).
Proof. exact (eq_refl (@eq B)). Qed.
Lemma lem326162 {A B : Type'} (f : A -> B) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem326167 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem326168 {A B : Type'} (f : type569 A B) (x : A -> B) : (f x) = (@I ((A -> B) -> A) f x).
Proof. exact (@lem326167 (A -> B) A f x). Qed.
Lemma lem326170 {A B : Type'} (x : type569 A B) (f : A -> B) : (x f) = (@I ((A -> B) -> A) x f).
Proof. exact (@lem326168 A B x f). Qed.
Lemma lem326171 {A B : Type'} (x : type569 A B) (f : A -> B) : (term904 A B x f) = (term905 A B x f).
Proof. exact (MK_COMB (@lem326162 A B f) (@lem326170 A B x f)). Qed.
Lemma lem326173 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem326174 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (@lem326173 A B f x). Qed.
Lemma lem326175 {A B : Type'} (x : type569 A B) (f : A -> B) : (term905 A B x f) = (term906 A B x f).
Proof. exact (@lem326174 A B f (@I ((A -> B) -> A) x f)). Qed.
Lemma lem326176 {A B : Type'} (x : type569 A B) (f : A -> B) : (term904 A B x f) = (term906 A B x f).
Proof. exact (TRANS (@lem326171 A B x f) (@lem326175 A B x f)). Qed.
Lemma lem326183 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem326184 {A B : Type'} (f : type569 A B) (x : A -> B) : (f x) = (@I ((A -> B) -> A) f x).
Proof. exact (@lem326183 (A -> B) A f x). Qed.
Lemma lem326186 {A B : Type'} (x : type569 A B) (f : A -> B) : (x f) = (@I ((A -> B) -> A) x f).
Proof. exact (@lem326184 A B x f). Qed.
Lemma lem326187 {A B : Type'} (H : type549 A B) (f : A -> B) : (H f) = (H f).
Proof. exact (eq_refl (H f)). Qed.
Lemma lem326188 {A B : Type'} (H : type549 A B) (x : type569 A B) (f : A -> B) : (term907 A B H x f) = (term908 A B H x f).
Proof. exact (MK_COMB (@lem326187 A B H f) (@lem326186 A B x f)). Qed.
Lemma lem326190 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem326191 {A B : Type'} (f : type549 A B) (x : A -> B) : (f x) = (@I ((A -> B) -> A -> B) f x).
Proof. exact (@lem326190 (A -> B) (A -> B) f x). Qed.
Lemma lem326192 {A B : Type'} (H : type549 A B) (f : A -> B) : (H f) = (@I ((A -> B) -> A -> B) H f).
Proof. exact (@lem326191 A B H f). Qed.
Lemma lem326193 {A B : Type'} (x : type569 A B) (f : A -> B) : (@I ((A -> B) -> A) x f) = (@I ((A -> B) -> A) x f).
Proof. exact (eq_refl (@I ((A -> B) -> A) x f)). Qed.
Lemma lem326194 {A B : Type'} (H : type549 A B) (x : type569 A B) (f : A -> B) : (term908 A B H x f) = (term909 A B H x f).
Proof. exact (MK_COMB (@lem326192 A B H f) (@lem326193 A B x f)). Qed.
Lemma lem326196 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem326197 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (@lem326196 A B f x). Qed.
Lemma lem326198 {A B : Type'} (H : type549 A B) (x : type569 A B) (f : A -> B) : (term909 A B H x f) = (term910 A B H x f).
Proof. exact (@lem326197 A B (@I ((A -> B) -> A -> B) H f) (@I ((A -> B) -> A) x f)). Qed.
Lemma lem326199 {A B : Type'} (H : type549 A B) (x : type569 A B) (f : A -> B) : (term908 A B H x f) = (term910 A B H x f).
Proof. exact (TRANS (@lem326194 A B H x f) (@lem326198 A B H x f)). Qed.
Lemma lem326200 {A B : Type'} (H : type549 A B) (x : type569 A B) (f : A -> B) : (term907 A B H x f) = (term910 A B H x f).
Proof. exact (TRANS (@lem326188 A B H x f) (@lem326199 A B H x f)). Qed.
Lemma lem326201 {A B : Type'} (x : type569 A B) (f : A -> B) : (term911 A B x f) = (term912 A B x f).
Proof. exact (MK_COMB (@lem326161 B) (@lem326176 A B x f)). Qed.
Lemma lem326202 {A B : Type'} (H : type549 A B) (x : type569 A B) (f : A -> B) : ((term904 A B x f) = (term907 A B H x f)) = ((term906 A B x f) = (term910 A B H x f)).
Proof. exact (MK_COMB (@lem326201 A B x f) (@lem326200 A B H x f)). Qed.
Lemma lem326203 {A B : Type'} (H : type549 A B) (x : type569 A B) (f : A -> B) : (term793 A B H x f) = (term913 A B H x f).
Proof. exact (MK_COMB (@lem326160) (@lem326202 A B H x f)). Qed.
Lemma lem326204 {A B : Type'} (H : type549 A B) (x : type569 A B) : (term795 A B H x) = (term914 A B H x).
Proof. exact (fun_ext (fun f : A -> B => @lem326203 A B H x f)). Qed.
Lemma lem326205 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem326206 {A B : Type'} (H : type549 A B) (x : type569 A B) : (term797 A B H x) = (term915 A B H x).
Proof. exact (MK_COMB (@lem326205 A B) (@lem326204 A B H x)). Qed.
Lemma lem326207 {A B : Type'} (H : type549 A B) (x : type569 A B) (h1 : term797 A B H x) : term915 A B H x.
Proof. exact (EQ_MP (@lem326206 A B H x) (@lem326063 A B H x h1)). Qed.
Lemma lem326707 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem326708 {A B : Type'} (f : type549 A B) (x : A -> B) : (f x) = (@I ((A -> B) -> A -> B) f x).
Proof. exact (@lem326707 (A -> B) (A -> B) f x). Qed.
Lemma lem326709 {A B : Type'} (H : type549 A B) (f : A -> B) : (H f) = (@I ((A -> B) -> A -> B) H f).
Proof. exact (@lem326708 A B H f). Qed.
Lemma lem326710 {A : Type'} (x : A) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem326711 {A B : Type'} (H : type549 A B) (f : A -> B) (x : A) : (H f x) = (@I ((A -> B) -> A -> B) H f x).
Proof. exact (MK_COMB (@lem326709 A B H f) (@lem326710 A x)). Qed.
Lemma lem326713 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem326714 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (@lem326713 A B f x). Qed.
Lemma lem326715 {A B : Type'} (H : type549 A B) (f : A -> B) (x : A) : (@I ((A -> B) -> A -> B) H f x) = (term916 A B H f x).
Proof. exact (@lem326714 A B (@I ((A -> B) -> A -> B) H f) x). Qed.
Lemma lem326717 {A B : Type'} (H : type549 A B) (f : A -> B) (x : A) : (H f x) = (term916 A B H f x).
Proof. exact (TRANS (@lem326711 A B H f x) (@lem326715 A B H f x)). Qed.
Lemma lem326718 {A B : Type'} (R : type1413 A B) (x : A) : (R x) = (R x).
Proof. exact (eq_refl (R x)). Qed.
Lemma lem326719 {A B : Type'} (R : type1413 A B) (H : type549 A B) (f : A -> B) (x : A) : (term72 A B R H f x) = (term917 A B R H f x).
Proof. exact (MK_COMB (@lem326718 A B R x) (@lem326717 A B H f x)). Qed.
Lemma lem326721 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem326722 {A B : Type'} (f : type1413 A B) (x : A) : (f x) = (@I (A -> B -> Prop) f x).
Proof. exact (@lem326721 A (B -> Prop) f x). Qed.
Lemma lem326723 {A B : Type'} (R : type1413 A B) (x : A) : (R x) = (@I (A -> B -> Prop) R x).
Proof. exact (@lem326722 A B R x). Qed.
Lemma lem326724 {A B : Type'} (H : type549 A B) (f : A -> B) (x : A) : (term916 A B H f x) = (term916 A B H f x).
Proof. exact (eq_refl (term916 A B H f x)). Qed.
Lemma lem326725 {A B : Type'} (R : type1413 A B) (H : type549 A B) (f : A -> B) (x : A) : (term917 A B R H f x) = (term918 A B R H f x).
Proof. exact (MK_COMB (@lem326723 A B R x) (@lem326724 A B H f x)). Qed.
Lemma lem326727 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem326728 {B : Type'} (f : B -> Prop) (x : B) : (f x) = (@I (B -> Prop) f x).
Proof. exact (@lem326727 B Prop f x). Qed.
Lemma lem326729 {A B : Type'} (R : type1413 A B) (H : type549 A B) (f : A -> B) (x : A) : (term918 A B R H f x) = (term919 A B R H f x).
Proof. exact (@lem326728 B (@I (A -> B -> Prop) R x) (term916 A B H f x)). Qed.
Lemma lem326730 {A B : Type'} (R : type1413 A B) (H : type549 A B) (f : A -> B) (x : A) : (term917 A B R H f x) = (term919 A B R H f x).
Proof. exact (TRANS (@lem326725 A B R H f x) (@lem326729 A B R H f x)). Qed.
Lemma lem326731 {A B : Type'} (R : type1413 A B) (H : type549 A B) (f : A -> B) (x : A) : (term72 A B R H f x) = (term919 A B R H f x).
Proof. exact (TRANS (@lem326719 A B R H f x) (@lem326730 A B R H f x)). Qed.
Lemma lem326732 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem326733 {A B : Type'} (R : type1413 A B) : R = R.
Proof. exact (eq_refl R). Qed.
Lemma lem326740 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem326741 {A B : Type'} (f : type548 A B) (x : A -> B) : (f x) = (@I ((A -> B) -> A -> A) f x).
Proof. exact (@lem326740 (A -> B) (A -> A) f x). Qed.
Lemma lem326742 {A B : Type'} (z' : type548 A B) (f : A -> B) : (z' f) = (@I ((A -> B) -> A -> A) z' f).
Proof. exact (@lem326741 A B z' f). Qed.
Lemma lem326743 {A : Type'} (x : A) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem326744 {A B : Type'} (z' : type548 A B) (f : A -> B) (x : A) : (z' f x) = (@I ((A -> B) -> A -> A) z' f x).
Proof. exact (MK_COMB (@lem326742 A B z' f) (@lem326743 A x)). Qed.
Lemma lem326746 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem326747 {A : Type'} (f : A -> A) (x : A) : (f x) = (@I (A -> A) f x).
Proof. exact (@lem326746 A A f x). Qed.
Lemma lem326748 {A B : Type'} (z' : type548 A B) (f : A -> B) (x : A) : (@I ((A -> B) -> A -> A) z' f x) = (term920 A B z' f x).
Proof. exact (@lem326747 A (@I ((A -> B) -> A -> A) z' f) x). Qed.
Lemma lem326750 {A B : Type'} (z' : type548 A B) (f : A -> B) (x : A) : (z' f x) = (term920 A B z' f x).
Proof. exact (TRANS (@lem326744 A B z' f x) (@lem326748 A B z' f x)). Qed.
Lemma lem326751 {A B : Type'} (f : A -> B) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem326758 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem326759 {A B : Type'} (f : type548 A B) (x : A -> B) : (f x) = (@I ((A -> B) -> A -> A) f x).
Proof. exact (@lem326758 (A -> B) (A -> A) f x). Qed.
Lemma lem326760 {A B : Type'} (z' : type548 A B) (f : A -> B) : (z' f) = (@I ((A -> B) -> A -> A) z' f).
Proof. exact (@lem326759 A B z' f). Qed.
Lemma lem326761 {A : Type'} (x : A) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem326762 {A B : Type'} (z' : type548 A B) (f : A -> B) (x : A) : (z' f x) = (@I ((A -> B) -> A -> A) z' f x).
Proof. exact (MK_COMB (@lem326760 A B z' f) (@lem326761 A x)). Qed.
Lemma lem326764 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem326765 {A : Type'} (f : A -> A) (x : A) : (f x) = (@I (A -> A) f x).
Proof. exact (@lem326764 A A f x). Qed.
Lemma lem326766 {A B : Type'} (z' : type548 A B) (f : A -> B) (x : A) : (@I ((A -> B) -> A -> A) z' f x) = (term920 A B z' f x).
Proof. exact (@lem326765 A (@I ((A -> B) -> A -> A) z' f) x). Qed.
Lemma lem326768 {A B : Type'} (z' : type548 A B) (f : A -> B) (x : A) : (z' f x) = (term920 A B z' f x).
Proof. exact (TRANS (@lem326762 A B z' f x) (@lem326766 A B z' f x)). Qed.
Lemma lem326769 {A B : Type'} (z' : type548 A B) (f : A -> B) (x : A) : (term921 A B z' f x) = (term922 A B z' f x).
Proof. exact (MK_COMB (@lem326751 A B f) (@lem326768 A B z' f x)). Qed.
Lemma lem326771 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem326772 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (@lem326771 A B f x). Qed.
Lemma lem326773 {A B : Type'} (z' : type548 A B) (f : A -> B) (x : A) : (term922 A B z' f x) = (term923 A B z' f x).
Proof. exact (@lem326772 A B f (term920 A B z' f x)). Qed.
Lemma lem326774 {A B : Type'} (z' : type548 A B) (f : A -> B) (x : A) : (term921 A B z' f x) = (term923 A B z' f x).
Proof. exact (TRANS (@lem326769 A B z' f x) (@lem326773 A B z' f x)). Qed.
Lemma lem326775 {A B : Type'} (R : type1413 A B) (z' : type548 A B) (f : A -> B) (x : A) : (term924 A B R z' f x) = (term925 A B R z' f x).
Proof. exact (MK_COMB (@lem326733 A B R) (@lem326750 A B z' f x)). Qed.
Lemma lem326776 {A B : Type'} (R : type1413 A B) (z' : type548 A B) (f : A -> B) (x : A) : (term926 A B R z' f x) = (term927 A B R z' f x).
Proof. exact (MK_COMB (@lem326775 A B R z' f x) (@lem326774 A B z' f x)). Qed.
Lemma lem326778 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem326779 {A B : Type'} (f : type1413 A B) (x : A) : (f x) = (@I (A -> B -> Prop) f x).
Proof. exact (@lem326778 A (B -> Prop) f x). Qed.
Lemma lem326780 {A B : Type'} (R : type1413 A B) (z' : type548 A B) (f : A -> B) (x : A) : (term925 A B R z' f x) = (term928 A B R z' f x).
Proof. exact (@lem326779 A B R (term920 A B z' f x)). Qed.
Lemma lem326781 {A B : Type'} (z' : type548 A B) (f : A -> B) (x : A) : (term923 A B z' f x) = (term923 A B z' f x).
Proof. exact (eq_refl (term923 A B z' f x)). Qed.
Lemma lem326782 {A B : Type'} (R : type1413 A B) (z' : type548 A B) (f : A -> B) (x : A) : (term927 A B R z' f x) = (term929 A B R z' f x).
Proof. exact (MK_COMB (@lem326780 A B R z' f x) (@lem326781 A B z' f x)). Qed.
Lemma lem326784 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem326785 {B : Type'} (f : B -> Prop) (x : B) : (f x) = (@I (B -> Prop) f x).
Proof. exact (@lem326784 B Prop f x). Qed.
Lemma lem326786 {A B : Type'} (R : type1413 A B) (z' : type548 A B) (f : A -> B) (x : A) : (term929 A B R z' f x) = (term930 A B R z' f x).
Proof. exact (@lem326785 B (term928 A B R z' f x) (term923 A B z' f x)). Qed.
Lemma lem326787 {A B : Type'} (R : type1413 A B) (z' : type548 A B) (f : A -> B) (x : A) : (term927 A B R z' f x) = (term930 A B R z' f x).
Proof. exact (TRANS (@lem326782 A B R z' f x) (@lem326786 A B R z' f x)). Qed.
Lemma lem326788 {A B : Type'} (R : type1413 A B) (z' : type548 A B) (f : A -> B) (x : A) : (term926 A B R z' f x) = (term930 A B R z' f x).
Proof. exact (TRANS (@lem326776 A B R z' f x) (@lem326787 A B R z' f x)). Qed.
Lemma lem326789 {A B : Type'} (R : type1413 A B) (z' : type548 A B) (f : A -> B) (x : A) : (term931 A B R z' f x) = (term932 A B R z' f x).
Proof. exact (MK_COMB (@lem326732) (@lem326788 A B R z' f x)). Qed.
Lemma lem326790 {A : Type'} (lt2 : type1402 A) : lt2 = lt2.
Proof. exact (eq_refl lt2). Qed.
Lemma lem326797 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem326798 {A B : Type'} (f : type548 A B) (x : A -> B) : (f x) = (@I ((A -> B) -> A -> A) f x).
Proof. exact (@lem326797 (A -> B) (A -> A) f x). Qed.
Lemma lem326799 {A B : Type'} (z' : type548 A B) (f : A -> B) : (z' f) = (@I ((A -> B) -> A -> A) z' f).
Proof. exact (@lem326798 A B z' f). Qed.
Lemma lem326800 {A : Type'} (x : A) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem326801 {A B : Type'} (z' : type548 A B) (f : A -> B) (x : A) : (z' f x) = (@I ((A -> B) -> A -> A) z' f x).
Proof. exact (MK_COMB (@lem326799 A B z' f) (@lem326800 A x)). Qed.
Lemma lem326803 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem326804 {A : Type'} (f : A -> A) (x : A) : (f x) = (@I (A -> A) f x).
Proof. exact (@lem326803 A A f x). Qed.
Lemma lem326805 {A B : Type'} (z' : type548 A B) (f : A -> B) (x : A) : (@I ((A -> B) -> A -> A) z' f x) = (term920 A B z' f x).
Proof. exact (@lem326804 A (@I ((A -> B) -> A -> A) z' f) x). Qed.
Lemma lem326807 {A B : Type'} (z' : type548 A B) (f : A -> B) (x : A) : (z' f x) = (term920 A B z' f x).
Proof. exact (TRANS (@lem326801 A B z' f x) (@lem326805 A B z' f x)). Qed.
Lemma lem326808 {A : Type'} (x : A) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem326809 {A B : Type'} (lt2 : type1402 A) (z' : type548 A B) (f : A -> B) (x : A) : (term933 A B lt2 z' f x) = (term934 A B lt2 z' f x).
Proof. exact (MK_COMB (@lem326790 A lt2) (@lem326807 A B z' f x)). Qed.
Lemma lem326810 {A B : Type'} (lt2 : type1402 A) (z' : type548 A B) (f : A -> B) (x : A) : (term935 A B lt2 z' f x) = (term936 A B lt2 z' f x).
Proof. exact (MK_COMB (@lem326809 A B lt2 z' f x) (@lem326808 A x)). Qed.
Lemma lem326812 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem326813 {A : Type'} (f : type1402 A) (x : A) : (f x) = (@I (A -> A -> Prop) f x).
Proof. exact (@lem326812 A (A -> Prop) f x). Qed.
Lemma lem326814 {A B : Type'} (lt2 : type1402 A) (z' : type548 A B) (f : A -> B) (x : A) : (term934 A B lt2 z' f x) = (term937 A B lt2 z' f x).
Proof. exact (@lem326813 A lt2 (term920 A B z' f x)). Qed.
Lemma lem326815 {A : Type'} (x : A) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem326816 {A B : Type'} (lt2 : type1402 A) (z' : type548 A B) (f : A -> B) (x : A) : (term936 A B lt2 z' f x) = (term938 A B lt2 z' f x).
Proof. exact (MK_COMB (@lem326814 A B lt2 z' f x) (@lem326815 A x)). Qed.
Lemma lem326818 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem326819 {A : Type'} (f : A -> Prop) (x : A) : (f x) = (@I (A -> Prop) f x).
Proof. exact (@lem326818 A Prop f x). Qed.
Lemma lem326820 {A B : Type'} (lt2 : type1402 A) (z' : type548 A B) (f : A -> B) (x : A) : (term938 A B lt2 z' f x) = (term939 A B lt2 z' f x).
Proof. exact (@lem326819 A (term937 A B lt2 z' f x) x). Qed.
Lemma lem326821 {A B : Type'} (lt2 : type1402 A) (z' : type548 A B) (f : A -> B) (x : A) : (term936 A B lt2 z' f x) = (term939 A B lt2 z' f x).
Proof. exact (TRANS (@lem326816 A B lt2 z' f x) (@lem326820 A B lt2 z' f x)). Qed.
Lemma lem326822 {A B : Type'} (lt2 : type1402 A) (z' : type548 A B) (f : A -> B) (x : A) : (term935 A B lt2 z' f x) = (term939 A B lt2 z' f x).
Proof. exact (TRANS (@lem326810 A B lt2 z' f x) (@lem326821 A B lt2 z' f x)). Qed.
Lemma lem326823 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem326824 {A B : Type'} (lt2 : type1402 A) (z' : type548 A B) (f : A -> B) (x : A) : (term940 A B lt2 z' f x) = (term941 A B lt2 z' f x).
Proof. exact (MK_COMB (@lem326823) (@lem326822 A B lt2 z' f x)). Qed.
Lemma lem326825 {A B : Type'} (lt2 : type1402 A) (R : type1413 A B) (z' : type548 A B) (f : A -> B) (x : A) : (term942 A B lt2 R z' f x) = (term943 A B lt2 R z' f x).
Proof. exact (MK_COMB (@lem326824 A B lt2 z' f x) (@lem326789 A B R z' f x)). Qed.
Lemma lem326826 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem326827 {A B : Type'} (lt2 : type1402 A) (R : type1413 A B) (z' : type548 A B) (f : A -> B) (x : A) : (term944 A B lt2 R z' f x) = (term945 A B lt2 R z' f x).
Proof. exact (MK_COMB (@lem326826) (@lem326825 A B lt2 R z' f x)). Qed.
Lemma lem326828 {A B : Type'} (lt2 : type1402 A) (z' : type548 A B) (R : type1413 A B) (H : type549 A B) (f : A -> B) (x : A) : (term946 A B lt2 z' R H f x) = (term947 A B lt2 z' R H f x).
Proof. exact (MK_COMB (@lem326827 A B lt2 R z' f x) (@lem326731 A B R H f x)). Qed.
Lemma lem326829 {A B : Type'} (lt2 : type1402 A) (z' : type548 A B) (R : type1413 A B) (H : type549 A B) (f : A -> B) : (term948 A B lt2 z' R H f) = (term949 A B lt2 z' R H f).
Proof. exact (fun_ext (fun x : A => @lem326828 A B lt2 z' R H f x)). Qed.
Lemma lem326830 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem326831 {A B : Type'} (lt2 : type1402 A) (z' : type548 A B) (R : type1413 A B) (H : type549 A B) (f : A -> B) : (term356 A B lt2 z' R H f) = (term950 A B lt2 z' R H f).
Proof. exact (MK_COMB (@lem326830 A) (@lem326829 A B lt2 z' R H f)). Qed.
Lemma lem326832 {A B : Type'} (lt2 : type1402 A) (z' : type548 A B) (R : type1413 A B) (H : type549 A B) : (term358 A B lt2 z' R H) = (term951 A B lt2 z' R H).
Proof. exact (fun_ext (fun f : A -> B => @lem326831 A B lt2 z' R H f)). Qed.
Lemma lem326833 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem326834 {A B : Type'} (lt2 : type1402 A) (z' : type548 A B) (R : type1413 A B) (H : type549 A B) : (term360 A B lt2 z' R H) = (term952 A B lt2 z' R H).
Proof. exact (MK_COMB (@lem326833 A B) (@lem326832 A B lt2 z' R H)). Qed.
Lemma lem326835 {A B : Type'} (lt2 : type1402 A) (z' : type548 A B) (R : type1413 A B) (H : type549 A B) (h1 : term360 A B lt2 z' R H) : term952 A B lt2 z' R H.
Proof. exact (EQ_MP (@lem326834 A B lt2 z' R H) (@lem326068 A B lt2 z' R H h1)). Qed.
Lemma lem327197 {A B : Type'} (y : A -> B) (R : type1413 A B) (h1 : term881 A B y R) : term895 A B R.
Proof. exact (proj2 (@lem326159 A B y R h1)). Qed.
Lemma lem327198 {A B : Type'} (y : A -> B) (R : type1413 A B) (h1 : term881 A B y R) : term901 A B R y.
Proof. exact (proj1 (@lem326159 A B y R h1)). Qed.
Lemma lem327200 {A B : Type'} (H : type549 A B) (x : type569 A B) (f : A -> B) : (term913 A B H x f) = (term913 A B H x f).
Proof. exact (eq_refl (term913 A B H x f)). Qed.
Lemma lem327201 {A B : Type'} (H : type549 A B) (x : type569 A B) : (term914 A B H x) = (term914 A B H x).
Proof. exact (fun_ext (fun f : A -> B => @lem327200 A B H x f)). Qed.
Lemma lem327202 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem327204 {A B : Type'} (H : type549 A B) (x : type569 A B) : (term915 A B H x) = (term915 A B H x).
Proof. exact (MK_COMB (@lem327202 A B) (@lem327201 A B H x)). Qed.
Lemma lem327205 {A B : Type'} (H : type549 A B) (x : type569 A B) (h1 : term797 A B H x) : term915 A B H x.
Proof. exact (EQ_MP (@lem327204 A B H x) (@lem326207 A B H x h1)). Qed.
Lemma lem327370 {A B : Type'} (lt2 : type1402 A) (z' : type548 A B) (R : type1413 A B) (H : type549 A B) (f : A -> B) (x : A) : (term947 A B lt2 z' R H f x) = (term953 A B lt2 z' R H f x).
Proof. exact (@lem19699 (term939 A B lt2 z' f x) (term932 A B R z' f x) (term919 A B R H f x)). Qed.
Lemma lem327371 {A B : Type'} (lt2 : type1402 A) (z' : type548 A B) (R : type1413 A B) (H : type549 A B) (f : A -> B) : (term949 A B lt2 z' R H f) = (term954 A B lt2 z' R H f).
Proof. exact (fun_ext (fun x : A => @lem327370 A B lt2 z' R H f x)). Qed.
Lemma lem327372 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem327373 {A B : Type'} (lt2 : type1402 A) (z' : type548 A B) (R : type1413 A B) (H : type549 A B) (f : A -> B) : (term950 A B lt2 z' R H f) = (term955 A B lt2 z' R H f).
Proof. exact (MK_COMB (@lem327372 A) (@lem327371 A B lt2 z' R H f)). Qed.
Lemma lem327374 {A B : Type'} (lt2 : type1402 A) (z' : type548 A B) (R : type1413 A B) (H : type549 A B) : (term951 A B lt2 z' R H) = (term956 A B lt2 z' R H).
Proof. exact (fun_ext (fun f : A -> B => @lem327373 A B lt2 z' R H f)). Qed.
Lemma lem327375 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem327377 {A B : Type'} (lt2 : type1402 A) (z' : type548 A B) (R : type1413 A B) (H : type549 A B) : (term952 A B lt2 z' R H) = (term957 A B lt2 z' R H).
Proof. exact (MK_COMB (@lem327375 A B) (@lem327374 A B lt2 z' R H)). Qed.
Lemma lem327378 {A B : Type'} (lt2 : type1402 A) (z' : type548 A B) (R : type1413 A B) (H : type549 A B) (h1 : term360 A B lt2 z' R H) : term957 A B lt2 z' R H.
Proof. exact (EQ_MP (@lem327377 A B lt2 z' R H) (@lem326835 A B lt2 z' R H h1)). Qed.
Lemma lem327694 {A B : Type'} (R : type1413 A B) (y : A -> B) (x : A) : (term898 A B R y x) = (term898 A B R y x).
Proof. exact (eq_refl (term898 A B R y x)). Qed.
Lemma lem327695 {A B : Type'} (R : type1413 A B) (y : A -> B) : (term900 A B R y) = (term900 A B R y).
Proof. exact (fun_ext (fun x : A => @lem327694 A B R y x)). Qed.
Lemma lem327696 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem327698 {A B : Type'} (R : type1413 A B) (y : A -> B) : (term901 A B R y) = (term901 A B R y).
Proof. exact (MK_COMB (@lem327696 A) (@lem327695 A B R y)). Qed.
Lemma lem327699 {A B : Type'} (y : A -> B) (R : type1413 A B) (h1 : term881 A B y R) : term901 A B R y.
Proof. exact (EQ_MP (@lem327698 A B R y) (@lem327198 A B y R h1)). Qed.
Lemma lem327701 {A : Type'} (P : Prop) (Q : A -> Prop) : (term846 A P Q) = (term845 A P Q).
Proof. exact (EQ_MP (@lem19007 A P Q) (@lem19006 A P Q)). Qed.
Lemma lem327702 {B : Type'} (P : Prop) (Q : B -> Prop) : (term846 B P Q) = (term845 B P Q).
Proof. exact (@lem327701 B P Q). Qed.
Lemma lem327703 {A B : Type'} (R : type1413 A B) (x : A) (y : B) : (term958 A B R x y) = (term959 A B R x y).
Proof. exact (@lem327702 B (term886 A B R x y) (term889 A B R x y)). Qed.
Lemma lem327704 {A B : Type'} (R : type1413 A B) (x : A) (y' : B) (y : B) : (term960 A B R x y y') = (term888 A B R x y' y).
Proof. exact (eq_refl (term960 A B R x y y')). Qed.
Lemma lem327705 {A B : Type'} (R : type1413 A B) (x : A) (y : B) : (term961 A B R x y) = (term889 A B R x y).
Proof. exact (fun_ext (fun y' : B => @lem327704 A B R x y' y)). Qed.
Lemma lem327706 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem327707 {A B : Type'} (R : type1413 A B) (x : A) (y : B) : (term962 A B R x y) = (term890 A B R x y).
Proof. exact (MK_COMB (@lem327706 B) (@lem327705 A B R x y)). Qed.
Lemma lem327708 {A B : Type'} (R : type1413 A B) (x : A) (y : B) : (term887 A B R x y) = (term887 A B R x y).
Proof. exact (eq_refl (term887 A B R x y)). Qed.
Lemma lem327709 {A B : Type'} (R : type1413 A B) (x : A) (y : B) : (term958 A B R x y) = (term891 A B R x y).
Proof. exact (MK_COMB (@lem327708 A B R x y) (@lem327707 A B R x y)). Qed.
Lemma lem327710 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem327711 {A B : Type'} (R : type1413 A B) (x : A) (y : B) : (term963 A B R x y) = (term964 A B R x y).
Proof. exact (MK_COMB (@lem327710) (@lem327709 A B R x y)). Qed.
Lemma lem327712 {A B : Type'} (R : type1413 A B) (x : A) (y' : B) (y : B) : (term960 A B R x y y') = (term888 A B R x y' y).
Proof. exact (eq_refl (term960 A B R x y y')). Qed.
Lemma lem327713 {A B : Type'} (R : type1413 A B) (x : A) (y : B) : (term887 A B R x y) = (term887 A B R x y).
Proof. exact (eq_refl (term887 A B R x y)). Qed.
Lemma lem327714 {A B : Type'} (R : type1413 A B) (x : A) (y' : B) (y : B) : (term965 A B R x y y') = (term966 A B R x y' y).
Proof. exact (MK_COMB (@lem327713 A B R x y) (@lem327712 A B R x y' y)). Qed.
Lemma lem327715 {A B : Type'} (R : type1413 A B) (x : A) (y : B) : (term967 A B R x y) = (term968 A B R x y).
Proof. exact (fun_ext (fun y' : B => @lem327714 A B R x y' y)). Qed.
Lemma lem327716 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem327717 {A B : Type'} (R : type1413 A B) (x : A) (y : B) : (term959 A B R x y) = (term969 A B R x y).
Proof. exact (MK_COMB (@lem327716 B) (@lem327715 A B R x y)). Qed.
Lemma lem327718 {A B : Type'} (R : type1413 A B) (x : A) (y : B) : ((term958 A B R x y) = (term959 A B R x y)) = ((term891 A B R x y) = (term969 A B R x y)).
Proof. exact (MK_COMB (@lem327711 A B R x y) (@lem327717 A B R x y)). Qed.
Lemma lem327719 {A B : Type'} (R : type1413 A B) (x : A) (y : B) : (term891 A B R x y) = (term969 A B R x y).
Proof. exact (EQ_MP (@lem327718 A B R x y) (@lem327703 A B R x y)). Qed.
Lemma lem327720 {A B : Type'} (R : type1413 A B) (x : A) : (term892 A B R x) = (term970 A B R x).
Proof. exact (fun_ext (fun y : B => @lem327719 A B R x y)). Qed.
Lemma lem327721 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem327722 {A B : Type'} (R : type1413 A B) (x : A) : (term893 A B R x) = (term971 A B R x).
Proof. exact (MK_COMB (@lem327721 B) (@lem327720 A B R x)). Qed.
Lemma lem327723 {A B : Type'} (R : type1413 A B) : (term894 A B R) = (term972 A B R).
Proof. exact (fun_ext (fun x : A => @lem327722 A B R x)). Qed.
Lemma lem327724 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem327725 {A B : Type'} (R : type1413 A B) : (term895 A B R) = (term973 A B R).
Proof. exact (MK_COMB (@lem327724 A) (@lem327723 A B R)). Qed.
Lemma lem327738 {A B : Type'} (R : type1413 A B) (x : A) (y' : B) (y : B) : (term966 A B R x y' y) = (term966 A B R x y' y).
Proof. exact (eq_refl (term966 A B R x y' y)). Qed.
Lemma lem327739 {A B : Type'} (R : type1413 A B) (x : A) (y : B) : (term968 A B R x y) = (term968 A B R x y).
Proof. exact (fun_ext (fun y' : B => @lem327738 A B R x y' y)). Qed.
Lemma lem327740 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem327741 {A B : Type'} (R : type1413 A B) (x : A) (y : B) : (term969 A B R x y) = (term969 A B R x y).
Proof. exact (MK_COMB (@lem327740 B) (@lem327739 A B R x y)). Qed.
Lemma lem327742 {A B : Type'} (R : type1413 A B) (x : A) : (term970 A B R x) = (term970 A B R x).
Proof. exact (fun_ext (fun y : B => @lem327741 A B R x y)). Qed.
Lemma lem327743 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem327744 {A B : Type'} (R : type1413 A B) (x : A) : (term971 A B R x) = (term971 A B R x).
Proof. exact (MK_COMB (@lem327743 B) (@lem327742 A B R x)). Qed.
Lemma lem327745 {A B : Type'} (R : type1413 A B) : (term972 A B R) = (term972 A B R).
Proof. exact (fun_ext (fun x : A => @lem327744 A B R x)). Qed.
Lemma lem327746 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem327747 {A B : Type'} (R : type1413 A B) : (term973 A B R) = (term973 A B R).
Proof. exact (MK_COMB (@lem327746 A) (@lem327745 A B R)). Qed.
Lemma lem327748 {A B : Type'} (R : type1413 A B) : (term895 A B R) = (term973 A B R).
Proof. exact (TRANS (@lem327725 A B R) (@lem327747 A B R)). Qed.
Lemma lem327749 {A B : Type'} (y : A -> B) (R : type1413 A B) (h1 : term881 A B y R) : term973 A B R.
Proof. exact (EQ_MP (@lem327748 A B R) (@lem327197 A B y R h1)). Qed.
Lemma lem327750 {A B : Type'} (_7015 : A -> B) (H : type549 A B) (x : type569 A B) (h1 : term797 A B H x) : term974 A B H x _7015.
Proof. exact (@lem327205 A B H x h1 _7015). Qed.
Lemma lem327751 {A B : Type'} (H : type549 A B) (x : type569 A B) (_7015 : A -> B) : (term974 A B H x _7015) = (term913 A B H x _7015).
Proof. exact (eq_refl (term974 A B H x _7015)). Qed.
Lemma lem327765 {A B : Type'} (_7020 : A -> B) (lt2 : type1402 A) (z' : type548 A B) (R : type1413 A B) (H : type549 A B) (h1 : term360 A B lt2 z' R H) : term975 A B lt2 z' R H _7020.
Proof. exact (@lem327378 A B lt2 z' R H h1 _7020). Qed.
Lemma lem327766 {A B : Type'} (lt2 : type1402 A) (z' : type548 A B) (R : type1413 A B) (H : type549 A B) (_7020 : A -> B) : (term975 A B lt2 z' R H _7020) = (term955 A B lt2 z' R H _7020).
Proof. exact (eq_refl (term975 A B lt2 z' R H _7020)). Qed.
Lemma lem327767 {A B : Type'} (_7020 : A -> B) (lt2 : type1402 A) (z' : type548 A B) (R : type1413 A B) (H : type549 A B) (h1 : term360 A B lt2 z' R H) : term955 A B lt2 z' R H _7020.
Proof. exact (EQ_MP (@lem327766 A B lt2 z' R H _7020) (@lem327765 A B _7020 lt2 z' R H h1)). Qed.
Lemma lem327768 {A B : Type'} (_7020 : A -> B) (_7021 : A) (lt2 : type1402 A) (z' : type548 A B) (R : type1413 A B) (H : type549 A B) (h1 : term360 A B lt2 z' R H) : term976 A B lt2 z' R H _7020 _7021.
Proof. exact (@lem327767 A B _7020 lt2 z' R H h1 _7021). Qed.
Lemma lem327769 {A B : Type'} (lt2 : type1402 A) (z' : type548 A B) (R : type1413 A B) (H : type549 A B) (_7020 : A -> B) (_7021 : A) : (term976 A B lt2 z' R H _7020 _7021) = (term953 A B lt2 z' R H _7020 _7021).
Proof. exact (eq_refl (term976 A B lt2 z' R H _7020 _7021)). Qed.
Lemma lem327770 {A B : Type'} (_7020 : A -> B) (_7021 : A) (lt2 : type1402 A) (z' : type548 A B) (R : type1413 A B) (H : type549 A B) (h1 : term360 A B lt2 z' R H) : term953 A B lt2 z' R H _7020 _7021.
Proof. exact (EQ_MP (@lem327769 A B lt2 z' R H _7020 _7021) (@lem327768 A B _7020 _7021 lt2 z' R H h1)). Qed.
Lemma lem327807 {A B : Type'} (_7034 : A) (y : A -> B) (R : type1413 A B) (h1 : term881 A B y R) : term977 A B R y _7034.
Proof. exact (@lem327699 A B y R h1 _7034). Qed.
Lemma lem327808 {A B : Type'} (R : type1413 A B) (y : A -> B) (_7034 : A) : (term977 A B R y _7034) = (term898 A B R y _7034).
Proof. exact (eq_refl (term977 A B R y _7034)). Qed.
Lemma lem327810 {A B : Type'} (_7035 : A) (y : A -> B) (R : type1413 A B) (h1 : term881 A B y R) : term978 A B R _7035.
Proof. exact (@lem327749 A B y R h1 _7035). Qed.
Lemma lem327811 {A B : Type'} (R : type1413 A B) (_7035 : A) : (term978 A B R _7035) = (term971 A B R _7035).
Proof. exact (eq_refl (term978 A B R _7035)). Qed.
Lemma lem327812 {A B : Type'} (_7035 : A) (y : A -> B) (R : type1413 A B) (h1 : term881 A B y R) : term971 A B R _7035.
Proof. exact (EQ_MP (@lem327811 A B R _7035) (@lem327810 A B _7035 y R h1)). Qed.
Lemma lem327813 {A B : Type'} (_7035 : A) (_7036 : B) (y : A -> B) (R : type1413 A B) (h1 : term881 A B y R) : term979 A B R _7035 _7036.
Proof. exact (@lem327812 A B _7035 y R h1 _7036). Qed.
Lemma lem327814 {A B : Type'} (R : type1413 A B) (_7035 : A) (_7036 : B) : (term979 A B R _7035 _7036) = (term969 A B R _7035 _7036).
Proof. exact (eq_refl (term979 A B R _7035 _7036)). Qed.
Lemma lem327815 {A B : Type'} (_7035 : A) (_7036 : B) (y : A -> B) (R : type1413 A B) (h1 : term881 A B y R) : term969 A B R _7035 _7036.
Proof. exact (EQ_MP (@lem327814 A B R _7035 _7036) (@lem327813 A B _7035 _7036 y R h1)). Qed.
Lemma lem327816 {A B : Type'} (_7035 : A) (_7036 : B) (_7037 : B) (y : A -> B) (R : type1413 A B) (h1 : term881 A B y R) : term980 A B R _7035 _7036 _7037.
Proof. exact (@lem327815 A B _7035 _7036 y R h1 _7037). Qed.
Lemma lem327817 {A B : Type'} (R : type1413 A B) (_7035 : A) (_7037 : B) (_7036 : B) : (term980 A B R _7035 _7036 _7037) = (term966 A B R _7035 _7037 _7036).
Proof. exact (eq_refl (term980 A B R _7035 _7036 _7037)). Qed.
Lemma lem327836 {A B : Type'} (_7015 : A -> B) (H : type549 A B) (x : type569 A B) (h1 : term797 A B H x) : term913 A B H x _7015.
Proof. exact (EQ_MP (@lem327751 A B H x _7015) (@lem327750 A B _7015 H x h1)). Qed.
Lemma lem327848 {A B : Type'} (_7035 : A) (_7037 : B) (_7036 : B) (y : A -> B) (R : type1413 A B) (h1 : term881 A B y R) : term966 A B R _7035 _7037 _7036.
Proof. exact (EQ_MP (@lem327817 A B R _7035 _7037 _7036) (@lem327816 A B _7035 _7036 _7037 y R h1)). Qed.
Lemma lem327950 {A B : Type'} (_7020 : A -> B) (_7021 : A) (lt2 : type1402 A) (z' : type548 A B) (R : type1413 A B) (H : type549 A B) (h1 : term360 A B lt2 z' R H) : term981 A B z' R H _7020 _7021.
Proof. exact (proj2 (@lem327770 A B _7020 _7021 lt2 z' R H h1)). Qed.
Lemma lem328279 {A B : Type'} (_7034 : A) (y : A -> B) (R : type1413 A B) (h1 : term881 A B y R) : term898 A B R y _7034.
Proof. exact (EQ_MP (@lem327808 A B R y _7034) (@lem327807 A B _7034 y R h1)). Qed.
Lemma lem328280 {A B : Type'} (_7034 : A) (y : A -> B) (R : type1413 A B) (h1 : term881 A B y R) : term898 A B R y _7034.
Proof. exact (@lem328279 A B _7034 y R h1). Qed.
Lemma lem328281 {A B : Type'} (z' : type548 A B) (x : type569 A B) (y : A -> B) (R : type1413 A B) (h1 : term881 A B y R) : term982 A B R z' x y.
Proof. exact (@lem328280 A B (term983 A B z' x y) y R h1). Qed.
Lemma lem328282 {A B : Type'} (z' : type548 A B) (x : type569 A B) (y : A -> B) (R : type1413 A B) (h1 : term881 A B y R) : term984 A B R z' x y.
Proof. exact (fun h0 : term985 A B R z' x y => @lem328281 A B z' x y R h1). Qed.
Lemma lem328284 (p : Prop) : (term986 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem328285 {A B : Type'} (R : type1413 A B) (z' : type548 A B) (x : type569 A B) (y : A -> B) : (term984 A B R z' x y) = (term982 A B R z' x y).
Proof. exact (@lem328284 (term982 A B R z' x y)). Qed.
Lemma lem328286 {A B : Type'} (z' : type548 A B) (x : type569 A B) (y : A -> B) (R : type1413 A B) (h1 : term881 A B y R) : term982 A B R z' x y.
Proof. exact (EQ_MP (@lem328285 A B R z' x y) (@lem328282 A B z' x y R h1)). Qed.
Lemma lem328292 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem328293 {A B : Type'} (H : type549 A B) (R : type1413 A B) (z' : type548 A B) (_7020 : A -> B) (_7021 : A) : (term981 A B z' R H _7020 _7021) = (term987 A B H R z' _7020 _7021).
Proof. exact (@lem328292 (term919 A B R H _7020 _7021) (term932 A B R z' _7020 _7021)). Qed.
Lemma lem328299 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem328300 {A B : Type'} (H : type549 A B) (R : type1413 A B) (z' : type548 A B) (_7020 : A -> B) (_7021 : A) : (term988 A B z' R H _7020 _7021) = (term989 A B H R z' _7020 _7021).
Proof. exact (MK_COMB (@lem328299) (@lem328293 A B H R z' _7020 _7021)). Qed.
Lemma lem328306 {A B : Type'} (H : type549 A B) (R : type1413 A B) (z' : type548 A B) (_7020 : A -> B) (_7021 : A) : (term987 A B H R z' _7020 _7021) = (term987 A B H R z' _7020 _7021).
Proof. exact (eq_refl (term987 A B H R z' _7020 _7021)). Qed.
Lemma lem328307 {A B : Type'} (H : type549 A B) (R : type1413 A B) (z' : type548 A B) (_7020 : A -> B) (_7021 : A) : ((term981 A B z' R H _7020 _7021) = (term987 A B H R z' _7020 _7021)) = ((term987 A B H R z' _7020 _7021) = (term987 A B H R z' _7020 _7021)).
Proof. exact (MK_COMB (@lem328300 A B H R z' _7020 _7021) (@lem328306 A B H R z' _7020 _7021)). Qed.
Lemma lem328309 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem20665 A x) (@lem20664 A x)). Qed.
Lemma lem328310 (x : Prop) : (x = x) = True.
Proof. exact (@lem328309 Prop x). Qed.
Lemma lem328311 {A B : Type'} (H : type549 A B) (R : type1413 A B) (z' : type548 A B) (_7020 : A -> B) (_7021 : A) : ((term987 A B H R z' _7020 _7021) = (term987 A B H R z' _7020 _7021)) = True.
Proof. exact (@lem328310 (term987 A B H R z' _7020 _7021)). Qed.
Lemma lem328312 {A B : Type'} (H : type549 A B) (R : type1413 A B) (z' : type548 A B) (_7020 : A -> B) (_7021 : A) : ((term981 A B z' R H _7020 _7021) = (term987 A B H R z' _7020 _7021)) = True.
Proof. exact (TRANS (@lem328307 A B H R z' _7020 _7021) (@lem328311 A B H R z' _7020 _7021)). Qed.
Lemma lem328313 {A B : Type'} (H : type549 A B) (R : type1413 A B) (z' : type548 A B) (_7020 : A -> B) (_7021 : A) : True = ((term981 A B z' R H _7020 _7021) = (term987 A B H R z' _7020 _7021)).
Proof. exact (SYM (@lem328312 A B H R z' _7020 _7021)). Qed.
Lemma lem328314 {A B : Type'} (H : type549 A B) (R : type1413 A B) (z' : type548 A B) (_7020 : A -> B) (_7021 : A) : (term981 A B z' R H _7020 _7021) = (term987 A B H R z' _7020 _7021).
Proof. exact (EQ_MP (@lem328313 A B H R z' _7020 _7021) (@lem0)). Qed.
Lemma lem328315 {A B : Type'} (_7020 : A -> B) (_7021 : A) (lt2 : type1402 A) (z' : type548 A B) (R : type1413 A B) (H : type549 A B) (h1 : term360 A B lt2 z' R H) : term987 A B H R z' _7020 _7021.
Proof. exact (EQ_MP (@lem328314 A B H R z' _7020 _7021) (@lem327950 A B _7020 _7021 lt2 z' R H h1)). Qed.
Lemma lem328317 (b : Prop) (a : Prop) : (a \/ b) = (term990 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem328318 {A B : Type'} (z' : type548 A B) (R : type1413 A B) (H : type549 A B) (_7020 : A -> B) (_7021 : A) : (term987 A B H R z' _7020 _7021) = (term991 A B z' R H _7020 _7021).
Proof. exact (@lem328317 (term932 A B R z' _7020 _7021) (term919 A B R H _7020 _7021)). Qed.
Lemma lem328320 (a : Prop) : (term992 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem328321 {A B : Type'} (R : type1413 A B) (z' : type548 A B) (_7020 : A -> B) (_7021 : A) : (term993 A B R z' _7020 _7021) = (term930 A B R z' _7020 _7021).
Proof. exact (@lem328320 (term930 A B R z' _7020 _7021)). Qed.
Lemma lem328322 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem328323 {A B : Type'} (R : type1413 A B) (z' : type548 A B) (_7020 : A -> B) (_7021 : A) : (term994 A B R z' _7020 _7021) = (term995 A B R z' _7020 _7021).
Proof. exact (MK_COMB (@lem328322) (@lem328321 A B R z' _7020 _7021)). Qed.
Lemma lem328324 {A B : Type'} (R : type1413 A B) (H : type549 A B) (_7020 : A -> B) (_7021 : A) : (term919 A B R H _7020 _7021) = (term919 A B R H _7020 _7021).
Proof. exact (eq_refl (term919 A B R H _7020 _7021)). Qed.
Lemma lem328325 {A B : Type'} (z' : type548 A B) (R : type1413 A B) (H : type549 A B) (_7020 : A -> B) (_7021 : A) : (term991 A B z' R H _7020 _7021) = (term996 A B z' R H _7020 _7021).
Proof. exact (MK_COMB (@lem328323 A B R z' _7020 _7021) (@lem328324 A B R H _7020 _7021)). Qed.
Lemma lem328326 {A B : Type'} (z' : type548 A B) (R : type1413 A B) (H : type549 A B) (_7020 : A -> B) (_7021 : A) : (term987 A B H R z' _7020 _7021) = (term996 A B z' R H _7020 _7021).
Proof. exact (TRANS (@lem328318 A B z' R H _7020 _7021) (@lem328325 A B z' R H _7020 _7021)). Qed.
Lemma lem328329 {A B : Type'} (_7020 : A -> B) (_7021 : A) (lt2 : type1402 A) (z' : type548 A B) (R : type1413 A B) (H : type549 A B) (h1 : term360 A B lt2 z' R H) : term996 A B z' R H _7020 _7021.
Proof. exact (EQ_MP (@lem328326 A B z' R H _7020 _7021) (@lem328315 A B _7020 _7021 lt2 z' R H h1)). Qed.
Lemma lem328330 {A B : Type'} (_7020 : A -> B) (_7021 : A) (lt2 : type1402 A) (z' : type548 A B) (R : type1413 A B) (H : type549 A B) (h1 : term360 A B lt2 z' R H) : term996 A B z' R H _7020 _7021.
Proof. exact (@lem328329 A B _7020 _7021 lt2 z' R H h1). Qed.
Lemma lem328331 {A B : Type'} (x : type569 A B) (y : A -> B) (lt2 : type1402 A) (z' : type548 A B) (R : type1413 A B) (H : type549 A B) (h1 : term360 A B lt2 z' R H) : term997 A B z' R H x y.
Proof. exact (@lem328330 A B y (@I ((A -> B) -> A) x y) lt2 z' R H h1). Qed.
Lemma lem328334 {A B : Type'} (x : type569 A B) (lt2 : type1402 A) (z' : type548 A B) (H : type549 A B) (y : A -> B) (R : type1413 A B) (h1 : term360 A B lt2 z' R H) (h2 : term881 A B y R) : term998 A B R H x y.
Proof. exact (@lem328331 A B x y lt2 z' R H h1 (@lem328286 A B z' x y R h2)). Qed.
Lemma lem328335 {A B : Type'} (x : type569 A B) (lt2 : type1402 A) (z' : type548 A B) (H : type549 A B) (y : A -> B) (R : type1413 A B) (h1 : term360 A B lt2 z' R H) (h2 : term881 A B y R) : term998 A B R H x y.
Proof. exact (@lem328334 A B x lt2 z' H y R h1 h2). Qed.
Lemma lem328336 {A B : Type'} (x : type569 A B) (lt2 : type1402 A) (z' : type548 A B) (H : type549 A B) (y : A -> B) (R : type1413 A B) (h1 : term360 A B lt2 z' R H) (h2 : term881 A B y R) : term999 A B R H x y.
Proof. exact (fun h0 : term1000 A B R H x y => @lem328335 A B x lt2 z' H y R h1 h2). Qed.
Lemma lem328338 (p : Prop) : (term986 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem328339 {A B : Type'} (R : type1413 A B) (H : type549 A B) (x : type569 A B) (y : A -> B) : (term999 A B R H x y) = (term998 A B R H x y).
Proof. exact (@lem328338 (term998 A B R H x y)). Qed.
Lemma lem328340 {A B : Type'} (x : type569 A B) (lt2 : type1402 A) (z' : type548 A B) (H : type549 A B) (y : A -> B) (R : type1413 A B) (h1 : term360 A B lt2 z' R H) (h2 : term881 A B y R) : term998 A B R H x y.
Proof. exact (EQ_MP (@lem328339 A B R H x y) (@lem328336 A B x lt2 z' H y R h1 h2)). Qed.
Lemma lem328342 {A B : Type'} (_7034 : A) (y : A -> B) (R : type1413 A B) (h1 : term881 A B y R) : term898 A B R y _7034.
Proof. exact (EQ_MP (@lem327808 A B R y _7034) (@lem327807 A B _7034 y R h1)). Qed.
Lemma lem328343 {A B : Type'} (_7034 : A) (y : A -> B) (R : type1413 A B) (h1 : term881 A B y R) : term898 A B R y _7034.
Proof. exact (@lem328342 A B _7034 y R h1). Qed.
Lemma lem328344 {A B : Type'} (x : type569 A B) (y : A -> B) (R : type1413 A B) (h1 : term881 A B y R) : term1001 A B R x y.
Proof. exact (@lem328343 A B (@I ((A -> B) -> A) x y) y R h1). Qed.
Lemma lem328345 {A B : Type'} (x : type569 A B) (y : A -> B) (R : type1413 A B) (h1 : term881 A B y R) : term1002 A B R x y.
Proof. exact (fun h0 : term1003 A B R x y => @lem328344 A B x y R h1). Qed.
Lemma lem328347 (p : Prop) : (term986 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem328348 {A B : Type'} (R : type1413 A B) (x : type569 A B) (y : A -> B) : (term1002 A B R x y) = (term1001 A B R x y).
Proof. exact (@lem328347 (term1001 A B R x y)). Qed.
Lemma lem328349 {A B : Type'} (x : type569 A B) (y : A -> B) (R : type1413 A B) (h1 : term881 A B y R) : term1001 A B R x y.
Proof. exact (EQ_MP (@lem328348 A B R x y) (@lem328345 A B x y R h1)). Qed.
Lemma lem328365 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem328366 {A B : Type'} (_7036 : B) (R : type1413 A B) (_7035 : A) (_7037 : B) : (term888 A B R _7035 _7037 _7036) = (term1004 A B _7036 R _7035 _7037).
Proof. exact (@lem328365 (_7037 = _7036) (term886 A B R _7035 _7037)). Qed.
Lemma lem328374 {A B : Type'} (R : type1413 A B) (_7035 : A) (_7036 : B) : (term887 A B R _7035 _7036) = (term887 A B R _7035 _7036).
Proof. exact (eq_refl (term887 A B R _7035 _7036)). Qed.
Lemma lem328375 {A B : Type'} (_7036 : B) (R : type1413 A B) (_7035 : A) (_7037 : B) : (term966 A B R _7035 _7037 _7036) = (term1005 A B _7036 R _7035 _7037).
Proof. exact (MK_COMB (@lem328374 A B R _7035 _7036) (@lem328366 A B _7036 R _7035 _7037)). Qed.
Lemma lem328379 (q : Prop) (p : Prop) (r : Prop) : (term1006 p q r) = (term1006 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem328380 {A B : Type'} (_7036 : B) (R : type1413 A B) (_7035 : A) (_7037 : B) : (term1005 A B _7036 R _7035 _7037) = (term1007 A B _7036 R _7035 _7037).
Proof. exact (@lem328379 (_7037 = _7036) (term886 A B R _7035 _7036) (term886 A B R _7035 _7037)). Qed.
Lemma lem328398 {A B : Type'} (_7036 : B) (R : type1413 A B) (_7035 : A) (_7037 : B) : (term966 A B R _7035 _7037 _7036) = (term1007 A B _7036 R _7035 _7037).
Proof. exact (TRANS (@lem328375 A B _7036 R _7035 _7037) (@lem328380 A B _7036 R _7035 _7037)). Qed.
Lemma lem328399 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem328400 {A B : Type'} (_7036 : B) (R : type1413 A B) (_7035 : A) (_7037 : B) : (term1008 A B R _7035 _7037 _7036) = (term1009 A B _7036 R _7035 _7037).
Proof. exact (MK_COMB (@lem328399) (@lem328398 A B _7036 R _7035 _7037)). Qed.
Lemma lem328418 {A B : Type'} (_7036 : B) (R : type1413 A B) (_7035 : A) (_7037 : B) : (term1007 A B _7036 R _7035 _7037) = (term1007 A B _7036 R _7035 _7037).
Proof. exact (eq_refl (term1007 A B _7036 R _7035 _7037)). Qed.
Lemma lem328419 {A B : Type'} (_7036 : B) (R : type1413 A B) (_7035 : A) (_7037 : B) : ((term966 A B R _7035 _7037 _7036) = (term1007 A B _7036 R _7035 _7037)) = ((term1007 A B _7036 R _7035 _7037) = (term1007 A B _7036 R _7035 _7037)).
Proof. exact (MK_COMB (@lem328400 A B _7036 R _7035 _7037) (@lem328418 A B _7036 R _7035 _7037)). Qed.
Lemma lem328421 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem20665 A x) (@lem20664 A x)). Qed.
Lemma lem328422 (x : Prop) : (x = x) = True.
Proof. exact (@lem328421 Prop x). Qed.
Lemma lem328423 {A B : Type'} (_7036 : B) (R : type1413 A B) (_7035 : A) (_7037 : B) : ((term1007 A B _7036 R _7035 _7037) = (term1007 A B _7036 R _7035 _7037)) = True.
Proof. exact (@lem328422 (term1007 A B _7036 R _7035 _7037)). Qed.
Lemma lem328424 {A B : Type'} (_7036 : B) (R : type1413 A B) (_7035 : A) (_7037 : B) : ((term966 A B R _7035 _7037 _7036) = (term1007 A B _7036 R _7035 _7037)) = True.
Proof. exact (TRANS (@lem328419 A B _7036 R _7035 _7037) (@lem328423 A B _7036 R _7035 _7037)). Qed.
Lemma lem328425 {A B : Type'} (_7036 : B) (R : type1413 A B) (_7035 : A) (_7037 : B) : True = ((term966 A B R _7035 _7037 _7036) = (term1007 A B _7036 R _7035 _7037)).
Proof. exact (SYM (@lem328424 A B _7036 R _7035 _7037)). Qed.
Lemma lem328426 {A B : Type'} (_7036 : B) (R : type1413 A B) (_7035 : A) (_7037 : B) : (term966 A B R _7035 _7037 _7036) = (term1007 A B _7036 R _7035 _7037).
Proof. exact (EQ_MP (@lem328425 A B _7036 R _7035 _7037) (@lem0)). Qed.
Lemma lem328427 {A B : Type'} (_7036 : B) (_7035 : A) (_7037 : B) (y : A -> B) (R : type1413 A B) (h1 : term881 A B y R) : term1007 A B _7036 R _7035 _7037.
Proof. exact (EQ_MP (@lem328426 A B _7036 R _7035 _7037) (@lem327848 A B _7035 _7037 _7036 y R h1)). Qed.
Lemma lem328429 (b : Prop) (a : Prop) : (a \/ b) = (term990 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem328430 {A B : Type'} (R : type1413 A B) (_7035 : A) (_7037 : B) (_7036 : B) : (term1007 A B _7036 R _7035 _7037) = (term1010 A B R _7035 _7037 _7036).
Proof. exact (@lem328429 (term1011 A B _7036 R _7035 _7037) (_7037 = _7036)). Qed.
Lemma lem328432 (a : Prop) (b : Prop) : (term1012 a b) = (term1013 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem328433 {A B : Type'} (_7036 : B) (R : type1413 A B) (_7035 : A) (_7037 : B) : (term1014 A B _7036 R _7035 _7037) = (term1015 A B _7036 R _7035 _7037).
Proof. exact (@lem328432 (term886 A B R _7035 _7036) (term886 A B R _7035 _7037)). Qed.
Lemma lem328435 (a : Prop) : (term992 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem328436 {A B : Type'} (R : type1413 A B) (_7035 : A) (_7036 : B) : (term1016 A B R _7035 _7036) = (term885 A B R _7035 _7036).
Proof. exact (@lem328435 (term885 A B R _7035 _7036)). Qed.
Lemma lem328437 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem328438 {A B : Type'} (R : type1413 A B) (_7035 : A) (_7036 : B) : (term1017 A B R _7035 _7036) = (term1018 A B R _7035 _7036).
Proof. exact (MK_COMB (@lem328437) (@lem328436 A B R _7035 _7036)). Qed.
Lemma lem328440 (a : Prop) : (term992 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem328441 {A B : Type'} (R : type1413 A B) (_7035 : A) (_7037 : B) : (term1016 A B R _7035 _7037) = (term885 A B R _7035 _7037).
Proof. exact (@lem328440 (term885 A B R _7035 _7037)). Qed.
Lemma lem328442 {A B : Type'} (_7036 : B) (R : type1413 A B) (_7035 : A) (_7037 : B) : (term1015 A B _7036 R _7035 _7037) = (term1019 A B _7036 R _7035 _7037).
Proof. exact (MK_COMB (@lem328438 A B R _7035 _7036) (@lem328441 A B R _7035 _7037)). Qed.
Lemma lem328443 {A B : Type'} (_7036 : B) (R : type1413 A B) (_7035 : A) (_7037 : B) : (term1014 A B _7036 R _7035 _7037) = (term1019 A B _7036 R _7035 _7037).
Proof. exact (TRANS (@lem328433 A B _7036 R _7035 _7037) (@lem328442 A B _7036 R _7035 _7037)). Qed.
Lemma lem328444 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem328445 {A B : Type'} (_7036 : B) (R : type1413 A B) (_7035 : A) (_7037 : B) : (term1020 A B _7036 R _7035 _7037) = (term1021 A B _7036 R _7035 _7037).
Proof. exact (MK_COMB (@lem328444) (@lem328443 A B _7036 R _7035 _7037)). Qed.
Lemma lem328446 {B : Type'} (_7037 : B) (_7036 : B) : (_7037 = _7036) = (_7037 = _7036).
Proof. exact (eq_refl (_7037 = _7036)). Qed.
Lemma lem328447 {A B : Type'} (R : type1413 A B) (_7035 : A) (_7037 : B) (_7036 : B) : (term1010 A B R _7035 _7037 _7036) = (term1022 A B R _7035 _7037 _7036).
Proof. exact (MK_COMB (@lem328445 A B _7036 R _7035 _7037) (@lem328446 B _7037 _7036)). Qed.
Lemma lem328448 {A B : Type'} (R : type1413 A B) (_7035 : A) (_7037 : B) (_7036 : B) : (term1007 A B _7036 R _7035 _7037) = (term1022 A B R _7035 _7037 _7036).
Proof. exact (TRANS (@lem328430 A B R _7035 _7037 _7036) (@lem328447 A B R _7035 _7037 _7036)). Qed.
Lemma lem328450 {A B : Type'} (x : type569 A B) (lt2 : type1402 A) (z' : type548 A B) (H : type549 A B) (y : A -> B) (R : type1413 A B) (h1 : term360 A B lt2 z' R H) (h2 : term881 A B y R) : term1023 A B H R x y.
Proof. exact (conj (@lem328340 A B x lt2 z' H y R h1 h2) (@lem328349 A B x y R h2)). Qed.
Lemma lem328452 {A B : Type'} (_7035 : A) (_7037 : B) (_7036 : B) (y : A -> B) (R : type1413 A B) (h1 : term881 A B y R) : term1022 A B R _7035 _7037 _7036.
Proof. exact (EQ_MP (@lem328448 A B R _7035 _7037 _7036) (@lem328427 A B _7036 _7035 _7037 y R h1)). Qed.
Lemma lem328453 {A B : Type'} (_7035 : A) (_7037 : B) (_7036 : B) (y : A -> B) (R : type1413 A B) (h1 : term881 A B y R) : term1022 A B R _7035 _7037 _7036.
Proof. exact (@lem328452 A B _7035 _7037 _7036 y R h1). Qed.
Lemma lem328454 {A B : Type'} (H : type549 A B) (x : type569 A B) (y : A -> B) (R : type1413 A B) (h1 : term881 A B y R) : term1024 A B R H x y.
Proof. exact (@lem328453 A B (@I ((A -> B) -> A) x y) (term906 A B x y) (term910 A B H x y) y R h1). Qed.
Lemma lem328457 {A B : Type'} (x : type569 A B) (lt2 : type1402 A) (z' : type548 A B) (H : type549 A B) (y : A -> B) (R : type1413 A B) (h1 : term360 A B lt2 z' R H) (h2 : term881 A B y R) : (term906 A B x y) = (term910 A B H x y).
Proof. exact (@lem328454 A B H x y R h2 (@lem328450 A B x lt2 z' H y R h1 h2)). Qed.
Lemma lem328458 {A B : Type'} (x : type569 A B) (lt2 : type1402 A) (z' : type548 A B) (H : type549 A B) (y : A -> B) (R : type1413 A B) (h1 : term360 A B lt2 z' R H) (h2 : term881 A B y R) : (term906 A B x y) = (term910 A B H x y).
Proof. exact (@lem328457 A B x lt2 z' H y R h1 h2). Qed.
Lemma lem328459 {A B : Type'} (x : type569 A B) (lt2 : type1402 A) (z' : type548 A B) (H : type549 A B) (y : A -> B) (R : type1413 A B) (h1 : term360 A B lt2 z' R H) (h2 : term881 A B y R) : term1025 A B H x y.
Proof. exact (fun h0 : term913 A B H x y => @lem328458 A B x lt2 z' H y R h1 h2). Qed.
Lemma lem328461 (p : Prop) : (term986 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem328462 {A B : Type'} (H : type549 A B) (x : type569 A B) (y : A -> B) : (term1025 A B H x y) = ((term906 A B x y) = (term910 A B H x y)).
Proof. exact (@lem328461 ((term906 A B x y) = (term910 A B H x y))). Qed.
Lemma lem328463 {A B : Type'} (x : type569 A B) (lt2 : type1402 A) (z' : type548 A B) (H : type549 A B) (y : A -> B) (R : type1413 A B) (h1 : term360 A B lt2 z' R H) (h2 : term881 A B y R) : (term906 A B x y) = (term910 A B H x y).
Proof. exact (EQ_MP (@lem328462 A B H x y) (@lem328459 A B x lt2 z' H y R h1 h2)). Qed.
Lemma lem328466 (p : Prop) : (~ p) = (p -> False).
Proof. exact (EQ_MP (@lem21021 p) (@lem0)). Qed.
Lemma lem328468 {A B : Type'} (H : type549 A B) (x : type569 A B) (_7015 : A -> B) : (term913 A B H x _7015) = (term1026 A B H x _7015).
Proof. exact (@lem328466 ((term906 A B x _7015) = (term910 A B H x _7015))). Qed.
Lemma lem328471 {A B : Type'} (_7015 : A -> B) (H : type549 A B) (x : type569 A B) (h1 : term797 A B H x) : term1026 A B H x _7015.
Proof. exact (EQ_MP (@lem328468 A B H x _7015) (@lem327836 A B _7015 H x h1)). Qed.
Lemma lem328472 {A B : Type'} (_7015 : A -> B) (H : type549 A B) (x : type569 A B) (h1 : term797 A B H x) : term1026 A B H x _7015.
Proof. exact (@lem328471 A B _7015 H x h1). Qed.
Lemma lem328473 {A B : Type'} (y : A -> B) (H : type549 A B) (x : type569 A B) (h1 : term797 A B H x) : term1026 A B H x y.
Proof. exact (@lem328472 A B y H x h1). Qed.
Lemma lem328476 {A B : Type'} (lt2 : type1402 A) (z' : type548 A B) (H : type549 A B) (x : type569 A B) (y : A -> B) (R : type1413 A B) (h1 : term360 A B lt2 z' R H) (h2 : term797 A B H x) (h3 : term881 A B y R) : False.
Proof. exact (@lem328473 A B y H x h2 (@lem328463 A B x lt2 z' H y R h1 h3)). Qed.
Lemma lem328477 {A B : Type'} (lt2 : type1402 A) (z' : type548 A B) (H : type549 A B) (x : type569 A B) (y : A -> B) (R : type1413 A B) (h1 : term360 A B lt2 z' R H) (h2 : term797 A B H x) (h3 : term881 A B y R) : term1027.
Proof. exact (fun h0 : ~ False => @lem328476 A B lt2 z' H x y R h1 h2 h3). Qed.
Lemma lem328479 (p : Prop) : (term986 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem328480 : term1027 = False.
Proof. exact (@lem328479 False). Qed.
Lemma lem328481 {A B : Type'} (lt2 : type1402 A) (z' : type548 A B) (H : type549 A B) (x : type569 A B) (y : A -> B) (R : type1413 A B) (h1 : term360 A B lt2 z' R H) (h2 : term797 A B H x) (h3 : term881 A B y R) : False.
Proof. exact (EQ_MP (@lem328480) (@lem328477 A B lt2 z' H x y R h1 h2 h3)). Qed.
Lemma lem328482 {A B : Type'} (z' : type548 A B) (H : type549 A B) (x : type569 A B) (lt2 : type1402 A) (y : A -> B) (R : type1413 A B) (h1 : term360 A B lt2 z' R H) (h2 : term797 A B H x) (h3 : term0 A lt2) (h4 : term881 A B y R) : False.
Proof. exact (ex_elim (@lem323867 A lt2 h3) (fun x'' : type684 A => fun h0 : term169 A lt2 x'' => @lem328481 A B lt2 z' H x y R h1 h2 h4)). Qed.
Lemma lem328483 {A B : Type'} (z' : type548 A B) (S' : type1413 A B) (H : type549 A B) (x : type569 A B) (lt2 : type1402 A) (y : A -> B) (R : type1413 A B) (h1 : term360 A B lt2 z' R H) (h2 : term1 A B lt2 S' H) (h3 : term797 A B H x) (h4 : term0 A lt2) (h5 : term881 A B y R) : False.
Proof. exact (ex_elim (@lem324143 A B lt2 S' H h2) (fun z'' : type515 A B => fun h0 : term284 A B lt2 S' H z'' => @lem328482 A B z' H x lt2 y R h1 h3 h4 h5)). Qed.
Lemma lem328484 {A B : Type'} (S' : type1413 A B) (H : type549 A B) (x : type569 A B) (lt2 : type1402 A) (y : A -> B) (R : type1413 A B) (h1 : term3 A B lt2 R H) (h2 : term1 A B lt2 S' H) (h3 : term797 A B H x) (h4 : term0 A lt2) (h5 : term881 A B y R) : False.
Proof. exact (ex_elim (@lem324368 A B lt2 R H h1) (fun z' : type548 A B => fun h0 : term362 A B lt2 R H z' => @lem328483 A B z' S' H x lt2 y R h0 h2 h3 h4 h5)). Qed.
Lemma lem328485 {A B : Type'} (S' : type1413 A B) (x : type569 A B) (lt2 : type1402 A) (H : type549 A B) (f' : type467 A B) (y : A -> B) (R : type1413 A B) (h1 : term3 A B lt2 R H) (h2 : term1 A B lt2 S' H) (h3 : term797 A B H x) (h4 : term0 A lt2) (h5 : term483 A B lt2 H f' R) (h6 : term881 A B y R) : False.
Proof. exact (ex_elim (@lem326066 A B lt2 H f' R h5) (fun x' : type473 A B => fun h0 : term482 A B lt2 H f' R x' => @lem328484 A B S' H x lt2 y R h1 h2 h3 h4 h6)). Qed.
Lemma lem328486 {A B : Type'} (S' : type1413 A B) (x : type569 A B) (lt2 : type1402 A) (H : type549 A B) (y : A -> B) (R : type1413 A B) (h1 : term3 A B lt2 R H) (h2 : term1 A B lt2 S' H) (h3 : term797 A B H x) (h4 : term0 A lt2) (h5 : term5 A B lt2 H R) (h6 : term881 A B y R) : False.
Proof. exact (ex_elim (@lem324749 A B lt2 H R h5) (fun f' : type467 A B => fun h0 : term484 A B lt2 H R f' => @lem328485 A B S' x lt2 H f' y R h1 h2 h3 h4 h0 h6)). Qed.
Lemma lem328487 {A B : Type'} (S' : type1413 A B) (x : type569 A B) (z : type1404 A B) (H : type549 A B) (lt2 : type1402 A) (y : A -> B) (R : type1413 A B) (h1 : term3 A B lt2 R H) (h2 : term1 A B lt2 S' H) (h3 : term797 A B H x) (h4 : term0 A lt2) (h5 : term5 A B lt2 H R) (h6 : term763 A B z H lt2 R) (h7 : term881 A B y R) : False.
Proof. exact (ex_elim (@lem326064 A B z H lt2 R h6) (fun f : type1405 A B => fun h0 : term762 A B z H lt2 R f => @lem328486 A B S' x lt2 H y R h1 h2 h3 h4 h5 h7)). Qed.
Lemma lem328488 {A B : Type'} (S' : type1413 A B) (x : type569 A B) (lt2 : type1402 A) (H : type549 A B) (y : A -> B) (R : type1413 A B) (h1 : term4 A B H lt2 R) (h2 : term3 A B lt2 R H) (h3 : term1 A B lt2 S' H) (h4 : term797 A B H x) (h5 : term0 A lt2) (h6 : term5 A B lt2 H R) (h7 : term881 A B y R) : False.
Proof. exact (ex_elim (@lem325752 A B H lt2 R h1) (fun z : type1404 A B => fun h0 : term764 A B H lt2 R z => @lem328487 A B S' x z H lt2 y R h2 h3 h4 h5 h6 h0 h7)). Qed.
Lemma lem328489 {A B : Type'} (S' : type1413 A B) (lt2 : type1402 A) (H : type549 A B) (y : A -> B) (R : type1413 A B) (h1 : term4 A B H lt2 R) (h2 : term3 A B lt2 R H) (h3 : term1 A B lt2 S' H) (h4 : term0 A lt2) (h5 : term5 A B lt2 H R) (h6 : term10 A B H) (h7 : term881 A B y R) : False.
Proof. exact (ex_elim (@lem325815 A B H h6) (fun x : type569 A B => fun h0 : term799 A B H x => @lem328488 A B S' x lt2 H y R h1 h2 h3 h0 h4 h5 h7)). Qed.
Lemma lem328490 {A B : Type'} (S' : type1413 A B) (lt2 : type1402 A) (R : type1413 A B) (H : type549 A B) (h1 : term4 A B H lt2 R) (h2 : term6 A B R) (h3 : term3 A B lt2 R H) (h4 : term1 A B lt2 S' H) (h5 : term0 A lt2) (h6 : term5 A B lt2 H R) (h7 : term10 A B H) : False.
Proof. exact (ex_elim (@lem326061 A B R h2) (fun y : A -> B => fun h0 : term883 A B R y => @lem328489 A B S' lt2 H y R h1 h3 h4 h5 h6 h7 h0)). Qed.
Lemma lem328491 {A B : Type'} (S' : type1413 A B) (lt2 : type1402 A) (R : type1413 A B) (H : type549 A B) (h1 : term4 A B H lt2 R) (h2 : term3 A B lt2 R H) (h3 : term1 A B lt2 S' H) (h4 : term0 A lt2) (h5 : term5 A B lt2 H R) (h6 : term10 A B H) : term15 A B R.
Proof. exact (fun h0 : term6 A B R => @lem328490 A B S' lt2 R H h1 h0 h2 h3 h4 h5 h6). Qed.
Lemma lem328492 {A B : Type'} (R : type1413 A B) : (term15 A B R) = (term16 A B R).
Proof. exact (@lem69 (term6 A B R)). Qed.
Lemma lem328493 {A B : Type'} (S' : type1413 A B) (lt2 : type1402 A) (R : type1413 A B) (H : type549 A B) (h1 : term4 A B H lt2 R) (h2 : term3 A B lt2 R H) (h3 : term1 A B lt2 S' H) (h4 : term0 A lt2) (h5 : term5 A B lt2 H R) (h6 : term10 A B H) : term16 A B R.
Proof. exact (EQ_MP (@lem328492 A B R) (@lem328491 A B S' lt2 R H h1 h2 h3 h4 h5 h6)). Qed.
Lemma lem328494 {A B : Type'} (S' : type1413 A B) (lt2 : type1402 A) (H : type549 A B) (R : type1413 A B) (h1 : term4 A B H lt2 R) (h2 : term3 A B lt2 R H) (h3 : term1 A B lt2 S' H) (h4 : term0 A lt2) (h5 : term5 A B lt2 H R) : term19 A B H R.
Proof. exact (fun h0 : term10 A B H => @lem328493 A B S' lt2 R H h1 h2 h3 h4 h5 h0). Qed.
Lemma lem328495 {A B : Type'} (S' : type1413 A B) (lt2 : type1402 A) (H : type549 A B) (R : type1413 A B) (h1 : term3 A B lt2 R H) (h2 : term1 A B lt2 S' H) (h3 : term0 A lt2) (h4 : term5 A B lt2 H R) : term22 A B lt2 H R.
Proof. exact (fun h0 : term4 A B H lt2 R => @lem328494 A B S' lt2 H R h0 h1 h2 h3 h4). Qed.
Lemma lem328496 {A B : Type'} (R : type1413 A B) (S' : type1413 A B) (H : type549 A B) (lt2 : type1402 A) (h1 : term3 A B lt2 R H) (h2 : term1 A B lt2 S' H) (h3 : term0 A lt2) : term25 A B lt2 H R.
Proof. exact (fun h0 : term5 A B lt2 H R => @lem328495 A B S' lt2 H R h1 h2 h3 h0). Qed.
Lemma lem328497 {A B : Type'} (R : type1413 A B) (S' : type1413 A B) (H : type549 A B) (lt2 : type1402 A) (h1 : term1 A B lt2 S' H) (h2 : term0 A lt2) : term28 A B lt2 H R.
Proof. exact (fun h0 : term3 A B lt2 R H => @lem328496 A B R S' H lt2 h0 h1 h2). Qed.
Lemma lem328498 {A B : Type'} (S' : type1413 A B) (H : type549 A B) (R : type1413 A B) (lt2 : type1402 A) (h1 : term0 A lt2) : term31 A B S' lt2 H R.
Proof. exact (fun h0 : term1 A B lt2 S' H => @lem328497 A B R S' H lt2 h0 h1). Qed.
Lemma lem328499 {A B : Type'} (S' : type1413 A B) (lt2 : type1402 A) (H : type549 A B) (R : type1413 A B) : term33 A B S' lt2 H R.
Proof. exact (fun h0 : term0 A lt2 => @lem328498 A B S' H R lt2 h0). Qed.
Lemma lem328504 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (R : type1413 A B) : term37 A B lt2 H R.
Proof. exact (fun S' : type1413 A B => @lem328499 A B S' lt2 H R). Qed.
Lemma lem328509 {A B : Type'} (H : type549 A B) (R : type1413 A B) : term41 A B H R.
Proof. exact (fun lt2 : type1402 A => @lem328504 A B lt2 H R). Qed.
Lemma lem328514 {A B : Type'} (R : type1413 A B) : term45 A B R.
Proof. exact (fun H : type549 A B => @lem328509 A B H R). Qed.
Lemma lem328519 {A B : Type'} : term49 A B.
Proof. exact (fun R : type1413 A B => @lem328514 A B R). Qed.
Lemma lem328520 {A B : Type'} : term48 A B.
Proof. exact (EQ_MP (@lem323628 A B) (@lem328519 A B)). Qed.
Lemma lem328521 {A B : Type'} (R : type1413 A B) : term1028 A B R.
Proof. exact (@lem328520 A B R). Qed.
Lemma lem328522 {A B : Type'} (R : type1413 A B) : (term1028 A B R) = (term44 A B R).
Proof. exact (eq_refl (term1028 A B R)). Qed.
Lemma lem328523 {A B : Type'} (R : type1413 A B) : term44 A B R.
Proof. exact (EQ_MP (@lem328522 A B R) (@lem328521 A B R)). Qed.
Lemma lem328524 {A B : Type'} (R : type1413 A B) (H : type549 A B) : term1029 A B R H.
Proof. exact (@lem328523 A B R H). Qed.
Lemma lem328525 {A B : Type'} (H : type549 A B) (R : type1413 A B) : (term1029 A B R H) = (term40 A B H R).
Proof. exact (eq_refl (term1029 A B R H)). Qed.
Lemma lem328526 {A B : Type'} (H : type549 A B) (R : type1413 A B) : term40 A B H R.
Proof. exact (EQ_MP (@lem328525 A B H R) (@lem328524 A B R H)). Qed.
Lemma lem328527 {A B : Type'} (H : type549 A B) (R : type1413 A B) (lt2 : type1402 A) : term1030 A B H R lt2.
Proof. exact (@lem328526 A B H R lt2). Qed.
Lemma lem328528 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (R : type1413 A B) : (term1030 A B H R lt2) = (term36 A B lt2 H R).
Proof. exact (eq_refl (term1030 A B H R lt2)). Qed.
Lemma lem328529 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (R : type1413 A B) : term36 A B lt2 H R.
Proof. exact (EQ_MP (@lem328528 A B lt2 H R) (@lem328527 A B H R lt2)). Qed.
Lemma lem328530 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (R : type1413 A B) (S' : type1413 A B) : term1031 A B lt2 H R S'.
Proof. exact (@lem328529 A B lt2 H R S'). Qed.
Lemma lem328531 {A B : Type'} (S' : type1413 A B) (lt2 : type1402 A) (H : type549 A B) (R : type1413 A B) : (term1031 A B lt2 H R S') = (term11 A B S' lt2 H R).
Proof. exact (eq_refl (term1031 A B lt2 H R S')). Qed.
Lemma lem328532 {A B : Type'} (S' : type1413 A B) (lt2 : type1402 A) (H : type549 A B) (R : type1413 A B) : term11 A B S' lt2 H R.
Proof. exact (EQ_MP (@lem328531 A B S' lt2 H R) (@lem328530 A B lt2 H R S')). Qed.
Lemma lem328534 {A B : Type'} (S' : type1413 A B) (lt2 : type1402 A) (H : type549 A B) (R : type1413 A B) : term11 A B S' lt2 H R.
Proof. exact (@lem322977 A B S' lt2 H R (@lem328532 A B S' lt2 H R)). Qed.
Lemma lem328535 {A B : Type'} (S' : type1413 A B) (H : type549 A B) (R : type1413 A B) (lt2 : type1402 A) (h1 : term0 A lt2) : term30 A B S' lt2 H R.
Proof. exact (@lem328534 A B S' lt2 H R (@lem322940 A lt2 h1)). Qed.
Lemma lem328536 {A B : Type'} (R : type1413 A B) (S' : type1413 A B) (H : type549 A B) (lt2 : type1402 A) (h1 : term1 A B lt2 S' H) (h2 : term0 A lt2) : term27 A B lt2 H R.
Proof. exact (@lem328535 A B S' H R lt2 h2 (@lem322941 A B lt2 S' H h1)). Qed.
Lemma lem328537 {A B : Type'} (R : type1413 A B) (S' : type1413 A B) (H : type549 A B) (lt2 : type1402 A) (h1 : term3 A B lt2 R H) (h2 : term1 A B lt2 S' H) (h3 : term0 A lt2) : term24 A B lt2 H R.
Proof. exact (@lem328536 A B R S' H lt2 h2 h3 (@lem322943 A B lt2 R H h1)). Qed.
Lemma lem328538 {A B : Type'} (S' : type1413 A B) (lt2 : type1402 A) (H : type549 A B) (R : type1413 A B) (h1 : term3 A B lt2 R H) (h2 : term1 A B lt2 S' H) (h3 : term0 A lt2) (h4 : term5 A B lt2 H R) : term21 A B lt2 H R.
Proof. exact (@lem328537 A B R S' H lt2 h1 h2 h3 (@lem322945 A B lt2 H R h4)). Qed.
Lemma lem328539 {A B : Type'} (S' : type1413 A B) (lt2 : type1402 A) (H : type549 A B) (R : type1413 A B) (h1 : term4 A B H lt2 R) (h2 : term3 A B lt2 R H) (h3 : term1 A B lt2 S' H) (h4 : term0 A lt2) (h5 : term5 A B lt2 H R) : term18 A B H R.
Proof. exact (@lem328538 A B S' lt2 H R h2 h3 h4 h5 (@lem322944 A B H lt2 R h1)). Qed.
Lemma lem328540 {A B : Type'} (S' : type1413 A B) (lt2 : type1402 A) (R : type1413 A B) (H : type549 A B) (h1 : term4 A B H lt2 R) (h2 : term3 A B lt2 R H) (h3 : term1 A B lt2 S' H) (h4 : term0 A lt2) (h5 : term5 A B lt2 H R) (h6 : term10 A B H) : term15 A B R.
Proof. exact (@lem328539 A B S' lt2 H R h1 h2 h3 h4 h5 (@lem322961 A B H h6)). Qed.
Lemma lem328541 {A B : Type'} (S' : type1413 A B) (lt2 : type1402 A) (R : type1413 A B) (H : type549 A B) (h1 : term4 A B H lt2 R) (h2 : term6 A B R) (h3 : term3 A B lt2 R H) (h4 : term1 A B lt2 S' H) (h5 : term0 A lt2) (h6 : term5 A B lt2 H R) (h7 : term10 A B H) : False.
Proof. exact (@lem328540 A B S' lt2 R H h1 h3 h4 h5 h6 h7 (@lem322946 A B R h2)). Qed.
Lemma lem328542 {A B : Type'} (S' : type1413 A B) (lt2 : type1402 A) (R : type1413 A B) (H : type549 A B) (h1 : term4 A B H lt2 R) (h2 : term6 A B R) (h3 : term3 A B lt2 R H) (h4 : term1 A B lt2 S' H) (h5 : term0 A lt2) (h6 : term5 A B lt2 H R) (h7 : term10 A B H) : (term6 A B R) = False.
Proof. exact (prop_ext (fun h8 : term6 A B R => @lem328541 A B S' lt2 R H h1 h2 h3 h4 h5 h6 h7) (fun h8 : False => @lem322946 A B R h2)). Qed.
Lemma lem328543 {A B : Type'} (S' : type1413 A B) (lt2 : type1402 A) (R : type1413 A B) (H : type549 A B) (h1 : term4 A B H lt2 R) (h2 : term6 A B R) (h3 : term3 A B lt2 R H) (h4 : term1 A B lt2 S' H) (h5 : term0 A lt2) (h6 : term5 A B lt2 H R) (h7 : term10 A B H) : False.
Proof. exact (EQ_MP (@lem328542 A B S' lt2 R H h1 h2 h3 h4 h5 h6 h7) (@lem322946 A B R h2)). Qed.
Lemma lem328544 {A B : Type'} (S' : type1413 A B) (lt2 : type1402 A) (R : type1413 A B) (H : type549 A B) (h1 : term4 A B H lt2 R) (h2 : term6 A B R) (h3 : term3 A B lt2 R H) (h4 : term1 A B lt2 S' H) (h5 : term0 A lt2) (h6 : term5 A B lt2 H R) (h7 : term10 A B H) : (term10 A B H) = False.
Proof. exact (prop_ext (fun h8 : term10 A B H => @lem328543 A B S' lt2 R H h1 h2 h3 h4 h5 h6 h7) (fun h8 : False => @lem322961 A B H h7)). Qed.
Lemma lem328545 {A B : Type'} (S' : type1413 A B) (lt2 : type1402 A) (R : type1413 A B) (H : type549 A B) (h1 : term4 A B H lt2 R) (h2 : term6 A B R) (h3 : term3 A B lt2 R H) (h4 : term1 A B lt2 S' H) (h5 : term0 A lt2) (h6 : term5 A B lt2 H R) (h7 : term10 A B H) : False.
Proof. exact (EQ_MP (@lem328544 A B S' lt2 R H h1 h2 h3 h4 h5 h6 h7) (@lem322961 A B H h7)). Qed.
Lemma lem328546 {A B : Type'} (S' : type1413 A B) (lt2 : type1402 A) (H : type549 A B) (R : type1413 A B) (h1 : term4 A B H lt2 R) (h2 : term6 A B R) (h3 : term3 A B lt2 R H) (h4 : term1 A B lt2 S' H) (h5 : term0 A lt2) (h6 : term5 A B lt2 H R) : term9 A B H.
Proof. exact (fun h0 : term10 A B H => @lem328545 A B S' lt2 R H h1 h2 h3 h4 h5 h6 h0). Qed.
Lemma lem328547 {A B : Type'} (S' : type1413 A B) (lt2 : type1402 A) (H : type549 A B) (R : type1413 A B) (h1 : term4 A B H lt2 R) (h2 : term6 A B R) (h3 : term3 A B lt2 R H) (h4 : term1 A B lt2 S' H) (h5 : term0 A lt2) (h6 : term5 A B lt2 H R) : term8 A B H.
Proof. exact (EQ_MP (@lem322960 A B H) (@lem328546 A B S' lt2 H R h1 h2 h3 h4 h5 h6)). Qed.
Lemma lem328623 {A : Type'} (lt2 : type1402 A) (h1 : term0 A lt2) : term0 A lt2.
Proof. exact (h1). Qed.
Lemma lem328624 {A : Type'} (P : A -> Prop) (lt2 : type1402 A) (h1 : term0 A lt2) : term1032 A lt2 P.
Proof. exact (@lem328623 A lt2 h1 P). Qed.
Lemma lem328625 {A : Type'} (lt2 : type1402 A) (P : A -> Prop) : (term1032 A lt2 P) = (term101 A lt2 P).
Proof. exact (eq_refl (term1032 A lt2 P)). Qed.
Lemma lem328626 {A : Type'} (P : A -> Prop) (lt2 : type1402 A) (h1 : term0 A lt2) : term101 A lt2 P.
Proof. exact (EQ_MP (@lem328625 A lt2 P) (@lem328624 A P lt2 h1)). Qed.
Lemma lem328627 {A : Type'} (lt2 : type1402 A) (P : A -> Prop) (h1 : term99 A lt2 P) : term99 A lt2 P.
Proof. exact (h1). Qed.
Lemma lem328628 {A : Type'} (P : A -> Prop) (lt2 : type1402 A) (h1 : term99 A lt2 P) (h2 : term0 A lt2) : term92 A P.
Proof. exact (@lem328626 A P lt2 h2 (@lem328627 A lt2 P h1)). Qed.
Lemma lem328629 {A : Type'} (lt2 : type1402 A) (P : A -> Prop) (h1 : term99 A lt2 P) : term1033 A lt2 P.
Proof. exact (fun h0 : term0 A lt2 => @lem328628 A P lt2 h1 h0). Qed.
Lemma lem328630 {A : Type'} (lt2 : type1402 A) (h1 : term0 A lt2) : term0 A lt2.
Proof. exact (h1). Qed.
Lemma lem328631 {A : Type'} (P : A -> Prop) (lt2 : type1402 A) (h1 : term99 A lt2 P) (h2 : term0 A lt2) : term92 A P.
Proof. exact (@lem328629 A lt2 P h1 (@lem328630 A lt2 h2)). Qed.
Lemma lem328632 {A : Type'} (P : A -> Prop) (lt2 : type1402 A) (h1 : term0 A lt2) : term101 A lt2 P.
Proof. exact (fun h0 : term99 A lt2 P => @lem328631 A P lt2 h0 h1). Qed.
Lemma lem328633 {A : Type'} (lt2 : type1402 A) (h1 : term0 A lt2) : term0 A lt2.
Proof. exact (fun P : A -> Prop => @lem328632 A P lt2 h1). Qed.
Lemma lem328634 {A : Type'} (lt2 : type1402 A) : term1034 A lt2.
Proof. exact (fun h0 : term0 A lt2 => @lem328633 A lt2 h0). Qed.
Lemma lem328635 {A : Type'} (lt2 : type1402 A) (h1 : term0 A lt2) : term0 A lt2.
Proof. exact (@lem328634 A lt2 (@lem322940 A lt2 h1)). Qed.
Lemma lem328636 {A : Type'} (P : A -> Prop) (lt2 : type1402 A) (h1 : term0 A lt2) : term1032 A lt2 P.
Proof. exact (@lem328635 A lt2 h1 P). Qed.
Lemma lem328637 {A : Type'} (lt2 : type1402 A) (P : A -> Prop) : (term1032 A lt2 P) = (term101 A lt2 P).
Proof. exact (eq_refl (term1032 A lt2 P)). Qed.
Lemma lem328640 {A : Type'} (P : A -> Prop) (lt2 : type1402 A) (h1 : term0 A lt2) : term101 A lt2 P.
Proof. exact (EQ_MP (@lem328637 A lt2 P) (@lem328636 A P lt2 h1)). Qed.
Lemma lem328641 {A : Type'} (P : A -> Prop) (lt2 : type1402 A) (h1 : term0 A lt2) : term101 A lt2 P.
Proof. exact (@lem328640 A P lt2 h1). Qed.
Lemma lem328642 {A B : Type'} (R : type1413 A B) (lt2 : type1402 A) (h1 : term0 A lt2) : term1035 A B lt2 R.
Proof. exact (@lem328641 A (term52 A B R) lt2 h1). Qed.
Lemma lem328643 {A B : Type'} (R : type1413 A B) (y : A) : (term1036 A B R y) = (term51 A B R y).
Proof. exact (eq_refl (term1036 A B R y)). Qed.
Lemma lem328644 {A : Type'} (lt2 : type1402 A) (y : A) (x : A) : (term1037 A lt2 y x) = (term1037 A lt2 y x).
Proof. exact (eq_refl (term1037 A lt2 y x)). Qed.
Lemma lem328645 {A B : Type'} (lt2 : type1402 A) (x : A) (R : type1413 A B) (y : A) : (term1038 A B lt2 x R y) = (term1039 A B lt2 x R y).
Proof. exact (MK_COMB (@lem328644 A lt2 y x) (@lem328643 A B R y)). Qed.
Lemma lem328646 {A B : Type'} (lt2 : type1402 A) (x : A) (R : type1413 A B) : (term1040 A B lt2 x R) = (term1041 A B lt2 x R).
Proof. exact (fun_ext (fun y : A => @lem328645 A B lt2 x R y)). Qed.
Lemma lem328647 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem328648 {A B : Type'} (lt2 : type1402 A) (x : A) (R : type1413 A B) : (term1042 A B lt2 x R) = (term1043 A B lt2 x R).
Proof. exact (MK_COMB (@lem328647 A) (@lem328646 A B lt2 x R)). Qed.
Lemma lem328649 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem328650 {A B : Type'} (lt2 : type1402 A) (x : A) (R : type1413 A B) : (term1044 A B lt2 x R) = (term1045 A B lt2 x R).
Proof. exact (MK_COMB (@lem328649) (@lem328648 A B lt2 x R)). Qed.
Lemma lem328651 {A B : Type'} (R : type1413 A B) (x : A) : (term1036 A B R x) = (term51 A B R x).
Proof. exact (eq_refl (term1036 A B R x)). Qed.
Lemma lem328652 {A B : Type'} (lt2 : type1402 A) (R : type1413 A B) (x : A) : (term1046 A B lt2 R x) = (term1047 A B lt2 R x).
Proof. exact (MK_COMB (@lem328650 A B lt2 x R) (@lem328651 A B R x)). Qed.
Lemma lem328653 {A B : Type'} (lt2 : type1402 A) (R : type1413 A B) : (term1048 A B lt2 R) = (term1049 A B lt2 R).
Proof. exact (fun_ext (fun x : A => @lem328652 A B lt2 R x)). Qed.
Lemma lem328654 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem328655 {A B : Type'} (lt2 : type1402 A) (R : type1413 A B) : (term1050 A B lt2 R) = (term1051 A B lt2 R).
Proof. exact (MK_COMB (@lem328654 A) (@lem328653 A B lt2 R)). Qed.
Lemma lem328656 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem328657 {A B : Type'} (lt2 : type1402 A) (R : type1413 A B) : (term1052 A B lt2 R) = (term1053 A B lt2 R).
Proof. exact (MK_COMB (@lem328656) (@lem328655 A B lt2 R)). Qed.
Lemma lem328658 {A B : Type'} (R : type1413 A B) (x : A) : (term1036 A B R x) = (term51 A B R x).
Proof. exact (eq_refl (term1036 A B R x)). Qed.
Lemma lem328659 {A B : Type'} (R : type1413 A B) : (term1054 A B R) = (term52 A B R).
Proof. exact (fun_ext (fun x : A => @lem328658 A B R x)). Qed.
Lemma lem328660 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem328661 {A B : Type'} (R : type1413 A B) : (term1055 A B R) = (term6 A B R).
Proof. exact (MK_COMB (@lem328660 A) (@lem328659 A B R)). Qed.
Lemma lem328662 {A B : Type'} (lt2 : type1402 A) (R : type1413 A B) : (term1035 A B lt2 R) = (term1056 A B lt2 R).
Proof. exact (MK_COMB (@lem328657 A B lt2 R) (@lem328661 A B R)). Qed.
Lemma lem328663 {A B : Type'} (R : type1413 A B) (lt2 : type1402 A) (h1 : term0 A lt2) : term1056 A B lt2 R.
Proof. exact (EQ_MP (@lem328662 A B lt2 R) (@lem328642 A B R lt2 h1)). Qed.
Lemma lem328664 {A B : Type'} (lt2 : type1402 A) (x : A) (R : type1413 A B) (h1 : term1043 A B lt2 x R) : term1043 A B lt2 x R.
Proof. exact (h1). Qed.
Lemma lem328670 {A B : Type'} (a0 : A) (H : type549 A B) (lt2 : type1402 A) (R : type1413 A B) (h1 : term4 A B H lt2 R) : term1057 A B H lt2 R a0.
Proof. exact (@lem322944 A B H lt2 R h1 a0). Qed.
Lemma lem328671 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (a0 : A) (R : type1413 A B) : (term1057 A B H lt2 R a0) = (term65 A B H lt2 a0 R).
Proof. exact (eq_refl (term1057 A B H lt2 R a0)). Qed.
Lemma lem328672 {A B : Type'} (a0 : A) (H : type549 A B) (lt2 : type1402 A) (R : type1413 A B) (h1 : term4 A B H lt2 R) : term65 A B H lt2 a0 R.
Proof. exact (EQ_MP (@lem328671 A B H lt2 a0 R) (@lem328670 A B a0 H lt2 R h1)). Qed.
Lemma lem328673 {A B : Type'} (a0 : A) (a1 : B) (H : type549 A B) (lt2 : type1402 A) (R : type1413 A B) (h1 : term4 A B H lt2 R) : term1058 A B H lt2 a0 R a1.
Proof. exact (@lem328672 A B a0 H lt2 R h1 a1). Qed.
Lemma lem328674 {A B : Type'} (a1 : B) (H : type549 A B) (lt2 : type1402 A) (a0 : A) (R : type1413 A B) : (term1058 A B H lt2 a0 R a1) = ((R a0 a1) = (term62 A B a1 H lt2 a0 R)).
Proof. exact (eq_refl (term1058 A B H lt2 a0 R a1)). Qed.
Lemma lem328677 {A B : Type'} (a1 : B) (a0 : A) (H : type549 A B) (lt2 : type1402 A) (R : type1413 A B) (h1 : term4 A B H lt2 R) : (R a0 a1) = (term62 A B a1 H lt2 a0 R).
Proof. exact (EQ_MP (@lem328674 A B a1 H lt2 a0 R) (@lem328673 A B a0 a1 H lt2 R h1)). Qed.
Lemma lem328678 {A B : Type'} (a1 : B) (a0 : A) (H : type549 A B) (lt2 : type1402 A) (R : type1413 A B) (h1 : term4 A B H lt2 R) : (R a0 a1) = (term62 A B a1 H lt2 a0 R).
Proof. exact (@lem328677 A B a1 a0 H lt2 R h1). Qed.
Lemma lem328679 {A B : Type'} (y : B) (x : A) (H : type549 A B) (lt2 : type1402 A) (R : type1413 A B) (h1 : term4 A B H lt2 R) : (R x y) = (term62 A B y H lt2 x R).
Proof. exact (@lem328678 A B y x H lt2 R h1). Qed.
Lemma lem328680 {A B : Type'} (x : A) (H : type549 A B) (lt2 : type1402 A) (R : type1413 A B) (h1 : term4 A B H lt2 R) : (term50 A B R x) = (term1059 A B H lt2 x R).
Proof. exact (fun_ext (fun y : B => @lem328679 A B y x H lt2 R h1)). Qed.
Lemma lem328681 {B : Type'} : (@ex1 B) = (@ex1 B).
Proof. exact (eq_refl (@ex1 B)). Qed.
Lemma lem328682 {A B : Type'} (x : A) (H : type549 A B) (lt2 : type1402 A) (R : type1413 A B) (h1 : term4 A B H lt2 R) : (term51 A B R x) = (term1060 A B H lt2 x R).
Proof. exact (MK_COMB (@lem328681 B) (@lem328680 A B x H lt2 R h1)). Qed.
Lemma lem328683 {A B : Type'} (x : A) (H : type549 A B) (lt2 : type1402 A) (R : type1413 A B) (h1 : term4 A B H lt2 R) : (term1060 A B H lt2 x R) = (term51 A B R x).
Proof. exact (SYM (@lem328682 A B x H lt2 R h1)). Qed.
Lemma lem328684 {A B : Type'} (R : type1413 A B) (S' : type1413 A B) (h1 : term71 A B R S') : term71 A B R S'.
Proof. exact (h1). Qed.
Lemma lem328686 (p : Prop) : p = (term7 p).
Proof. exact (EQ_MP (@lem10578 p) (@lem10597 p)). Qed.
Lemma lem328687 {A B : Type'} (R : type1413 A B) (S' : type1413 A B) : (term71 A B R S') = (term1061 A B R S').
Proof. exact (@lem328686 (term71 A B R S')). Qed.
Lemma lem328688 {A B : Type'} (R : type1413 A B) (S' : type1413 A B) : (term1061 A B R S') = (term71 A B R S').
Proof. exact (SYM (@lem328687 A B R S')). Qed.
Lemma lem328689 {A B : Type'} (R : type1413 A B) (S' : type1413 A B) (h1 : term1062 A B R S') : term1062 A B R S'.
Proof. exact (h1). Qed.
Lemma lem328692 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (S' : type1413 A B) (h1 : term1063 A B H lt2 x R S') : term1063 A B H lt2 x R S'.
Proof. exact (h1). Qed.
Lemma lem328693 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (S' : type1413 A B) : term1064 A B H lt2 x R S'.
Proof. exact (fun h0 : term1063 A B H lt2 x R S' => @lem328692 A B H lt2 x R S' h0). Qed.
Lemma lem328694 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (S' : type1413 A B) (h1 : term1064 A B H lt2 x R S') : term1064 A B H lt2 x R S'.
Proof. exact (h1). Qed.
Lemma lem328695 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (S' : type1413 A B) (h1 : term1063 A B H lt2 x R S') : term1063 A B H lt2 x R S'.
Proof. exact (h1). Qed.
Lemma lem328696 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (S' : type1413 A B) (h1 : term1063 A B H lt2 x R S') (h2 : term1064 A B H lt2 x R S') : term1063 A B H lt2 x R S'.
Proof. exact (@lem328694 A B H lt2 x R S' h2 (@lem328695 A B H lt2 x R S' h1)). Qed.
Lemma lem328697 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (S' : type1413 A B) (h1 : term1063 A B H lt2 x R S') : term1065 A B H lt2 x R S'.
Proof. exact (fun h0 : term1064 A B H lt2 x R S' => @lem328696 A B H lt2 x R S' h1 h0). Qed.
Lemma lem328698 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (S' : type1413 A B) (h1 : term1064 A B H lt2 x R S') : term1064 A B H lt2 x R S'.
Proof. exact (h1). Qed.
Lemma lem328699 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (S' : type1413 A B) (h1 : term1063 A B H lt2 x R S') (h2 : term1064 A B H lt2 x R S') : term1063 A B H lt2 x R S'.
Proof. exact (@lem328697 A B H lt2 x R S' h1 (@lem328698 A B H lt2 x R S' h2)). Qed.
Lemma lem328700 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (S' : type1413 A B) (h1 : term1064 A B H lt2 x R S') : term1064 A B H lt2 x R S'.
Proof. exact (fun h0 : term1063 A B H lt2 x R S' => @lem328699 A B H lt2 x R S' h0 h1). Qed.
Lemma lem328701 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (S' : type1413 A B) : term1066 A B H lt2 x R S'.
Proof. exact (fun h0 : term1064 A B H lt2 x R S' => @lem328700 A B H lt2 x R S' h0). Qed.
Lemma lem328704 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (S' : type1413 A B) : term1064 A B H lt2 x R S'.
Proof. exact (@lem328701 A B H lt2 x R S' (@lem328693 A B H lt2 x R S')). Qed.
Lemma lem328705 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (S' : type1413 A B) : term1064 A B H lt2 x R S'.
Proof. exact (@lem328704 A B H lt2 x R S'). Qed.
Lemma lem328813 (t : Prop) : (t -> False) = (~ t).
Proof. exact (proj2 (@lem16474 t)). Qed.
Lemma lem328814 {A B : Type'} (R : type1413 A B) (S' : type1413 A B) : (term1061 A B R S') = (term1067 A B R S').
Proof. exact (@lem328813 (term1062 A B R S')). Qed.
Lemma lem328816 (t : Prop) : (term992 t) = t.
Proof. exact (EQ_MP (@lem16507 t) (@lem16506 t)). Qed.
Lemma lem328817 {A B : Type'} (R : type1413 A B) (S' : type1413 A B) : (term1067 A B R S') = (term71 A B R S').
Proof. exact (@lem328816 (term71 A B R S')). Qed.
Lemma lem328822 {A B : Type'} (R : type1413 A B) (S' : type1413 A B) : (term1061 A B R S') = (term71 A B R S').
Proof. exact (TRANS (@lem328814 A B R S') (@lem328817 A B R S')). Qed.
Lemma lem328829 {A B : Type'} (lt2 : type1402 A) (x : A) (R : type1413 A B) : (term1045 A B lt2 x R) = (term1045 A B lt2 x R).
Proof. exact (eq_refl (term1045 A B lt2 x R)). Qed.
Lemma lem328830 {A B : Type'} (lt2 : type1402 A) (x : A) (R : type1413 A B) (S' : type1413 A B) : (term1068 A B lt2 x R S') = (term1069 A B lt2 x R S').
Proof. exact (MK_COMB (@lem328829 A B lt2 x R) (@lem328822 A B R S')). Qed.
Lemma lem328833 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (R : type1413 A B) : (term23 A B lt2 H R) = (term23 A B lt2 H R).
Proof. exact (eq_refl (term23 A B lt2 H R)). Qed.
Lemma lem328834 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (S' : type1413 A B) : (term1070 A B H lt2 x R S') = (term1071 A B H lt2 x R S').
Proof. exact (MK_COMB (@lem328833 A B lt2 H R) (@lem328830 A B lt2 x R S')). Qed.
Lemma lem328837 {A B : Type'} (lt2 : type1402 A) (R : type1413 A B) (H : type549 A B) : (term26 A B lt2 R H) = (term26 A B lt2 R H).
Proof. exact (eq_refl (term26 A B lt2 R H)). Qed.
Lemma lem328838 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (S' : type1413 A B) : (term1072 A B H lt2 x R S') = (term1073 A B H lt2 x R S').
Proof. exact (MK_COMB (@lem328837 A B lt2 R H) (@lem328834 A B H lt2 x R S')). Qed.
Lemma lem328841 {A B : Type'} (lt2 : type1402 A) (S' : type1413 A B) (H : type549 A B) : (term29 A B lt2 S' H) = (term29 A B lt2 S' H).
Proof. exact (eq_refl (term29 A B lt2 S' H)). Qed.
Lemma lem328842 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (S' : type1413 A B) : (term1063 A B H lt2 x R S') = (term1074 A B H lt2 x R S').
Proof. exact (MK_COMB (@lem328841 A B lt2 S' H) (@lem328838 A B H lt2 x R S')). Qed.
Lemma lem328845 {A B : Type'} (lt2 : type1402 A) (x : A) (R : type1413 A B) (S' : type1413 A B) : (term1075 A B lt2 x R S') = (term1076 A B lt2 x R S').
Proof. exact (fun_ext (fun H : type549 A B => @lem328842 A B H lt2 x R S')). Qed.
Lemma lem328846 {A B : Type'} : (@all ((A -> B) -> A -> B)) = (@all ((A -> B) -> A -> B)).
Proof. exact (eq_refl (@all ((A -> B) -> A -> B))). Qed.
Lemma lem328847 {A B : Type'} (lt2 : type1402 A) (x : A) (R : type1413 A B) (S' : type1413 A B) : (term1077 A B lt2 x R S') = (term1078 A B lt2 x R S').
Proof. exact (MK_COMB (@lem328846 A B) (@lem328845 A B lt2 x R S')). Qed.
Lemma lem328852 {A B : Type'} (x : A) (R : type1413 A B) (S' : type1413 A B) : (term1079 A B x R S') = (term1080 A B x R S').
Proof. exact (fun_ext (fun lt2 : type1402 A => @lem328847 A B lt2 x R S')). Qed.
Lemma lem328853 {A : Type'} : (@all (A -> A -> Prop)) = (@all (A -> A -> Prop)).
Proof. exact (eq_refl (@all (A -> A -> Prop))). Qed.
Lemma lem328854 {A B : Type'} (x : A) (R : type1413 A B) (S' : type1413 A B) : (term1081 A B x R S') = (term1082 A B x R S').
Proof. exact (MK_COMB (@lem328853 A) (@lem328852 A B x R S')). Qed.
Lemma lem328859 {A B : Type'} (R : type1413 A B) (S' : type1413 A B) : (term1083 A B R S') = (term1084 A B R S').
Proof. exact (fun_ext (fun x : A => @lem328854 A B x R S')). Qed.
Lemma lem328860 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem328861 {A B : Type'} (R : type1413 A B) (S' : type1413 A B) : (term1085 A B R S') = (term1086 A B R S').
Proof. exact (MK_COMB (@lem328860 A) (@lem328859 A B R S')). Qed.
Lemma lem328866 {A B : Type'} (S' : type1413 A B) : (term1087 A B S') = (term1088 A B S').
Proof. exact (fun_ext (fun R : type1413 A B => @lem328861 A B R S')). Qed.
Lemma lem328867 {A B : Type'} : (@all (A -> B -> Prop)) = (@all (A -> B -> Prop)).
Proof. exact (eq_refl (@all (A -> B -> Prop))). Qed.
Lemma lem328868 {A B : Type'} (S' : type1413 A B) : (term1089 A B S') = (term1090 A B S').
Proof. exact (MK_COMB (@lem328867 A B) (@lem328866 A B S')). Qed.
Lemma lem328873 {A B : Type'} : (term1091 A B) = (term1092 A B).
Proof. exact (fun_ext (fun S' : type1413 A B => @lem328868 A B S')). Qed.
Lemma lem328874 {A B : Type'} : (@all (A -> B -> Prop)) = (@all (A -> B -> Prop)).
Proof. exact (eq_refl (@all (A -> B -> Prop))). Qed.
Lemma lem328883 {A B : Type'} : (term1093 A B) = (term1094 A B).
Proof. exact (MK_COMB (@lem328874 A B) (@lem328873 A B)). Qed.
Lemma lem328888 {A B : Type'} (R : type1413 A B) (S' : type1413 A B) (x : A) (y : B) : (term67 A B R S' x y) = (term67 A B R S' x y).
Proof. exact (eq_refl (term67 A B R S' x y)). Qed.
Lemma lem328889 {A B : Type'} (R : type1413 A B) (S' : type1413 A B) (x : A) : (term68 A B R S' x) = (term68 A B R S' x).
Proof. exact (fun_ext (fun y : B => @lem328888 A B R S' x y)). Qed.
Lemma lem328890 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem328891 {A B : Type'} (R : type1413 A B) (S' : type1413 A B) (x : A) : (term69 A B R S' x) = (term69 A B R S' x).
Proof. exact (MK_COMB (@lem328890 B) (@lem328889 A B R S' x)). Qed.
Lemma lem328892 {A B : Type'} (R : type1413 A B) (S' : type1413 A B) : (term70 A B R S') = (term70 A B R S').
Proof. exact (fun_ext (fun x : A => @lem328891 A B R S' x)). Qed.
Lemma lem328893 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem328894 {A B : Type'} (R : type1413 A B) (S' : type1413 A B) : (term71 A B R S') = (term71 A B R S').
Proof. exact (MK_COMB (@lem328893 A) (@lem328892 A B R S')). Qed.
Lemma lem328895 {A B : Type'} (R : type1413 A B) (y : A) (y' : B) : (R y y') = (R y y').
Proof. exact (eq_refl (R y y')). Qed.
Lemma lem328896 {A B : Type'} (R : type1413 A B) (y : A) : (term50 A B R y) = (term50 A B R y).
Proof. exact (fun_ext (fun y' : B => @lem328895 A B R y y')). Qed.
Lemma lem328897 {B : Type'} : (@ex1 B) = (@ex1 B).
Proof. exact (eq_refl (@ex1 B)). Qed.
Lemma lem328898 {A B : Type'} (R : type1413 A B) (y : A) : (term51 A B R y) = (term51 A B R y).
Proof. exact (MK_COMB (@lem328897 B) (@lem328896 A B R y)). Qed.
Lemma lem328901 {A : Type'} (lt2 : type1402 A) (y : A) (x : A) : (term1037 A lt2 y x) = (term1037 A lt2 y x).
Proof. exact (eq_refl (term1037 A lt2 y x)). Qed.
Lemma lem328902 {A B : Type'} (lt2 : type1402 A) (x : A) (R : type1413 A B) (y : A) : (term1039 A B lt2 x R y) = (term1039 A B lt2 x R y).
Proof. exact (MK_COMB (@lem328901 A lt2 y x) (@lem328898 A B R y)). Qed.
Lemma lem328903 {A B : Type'} (lt2 : type1402 A) (x : A) (R : type1413 A B) : (term1041 A B lt2 x R) = (term1041 A B lt2 x R).
Proof. exact (fun_ext (fun y : A => @lem328902 A B lt2 x R y)). Qed.
Lemma lem328904 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem328905 {A B : Type'} (lt2 : type1402 A) (x : A) (R : type1413 A B) : (term1043 A B lt2 x R) = (term1043 A B lt2 x R).
Proof. exact (MK_COMB (@lem328904 A) (@lem328903 A B lt2 x R)). Qed.
Lemma lem328906 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem328907 {A B : Type'} (lt2 : type1402 A) (x : A) (R : type1413 A B) : (term1045 A B lt2 x R) = (term1045 A B lt2 x R).
Proof. exact (MK_COMB (@lem328906) (@lem328905 A B lt2 x R)). Qed.
Lemma lem328908 {A B : Type'} (lt2 : type1402 A) (x : A) (R : type1413 A B) (S' : type1413 A B) : (term1069 A B lt2 x R S') = (term1069 A B lt2 x R S').
Proof. exact (MK_COMB (@lem328907 A B lt2 x R) (@lem328894 A B R S')). Qed.
Lemma lem328913 {A B : Type'} (R : type1413 A B) (R' : type1413 A B) (a0 : A) (a1 : B) : (term67 A B R R' a0 a1) = (term67 A B R R' a0 a1).
Proof. exact (eq_refl (term67 A B R R' a0 a1)). Qed.
Lemma lem328914 {A B : Type'} (R : type1413 A B) (R' : type1413 A B) (a0 : A) : (term68 A B R R' a0) = (term68 A B R R' a0).
Proof. exact (fun_ext (fun a1 : B => @lem328913 A B R R' a0 a1)). Qed.
Lemma lem328915 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem328916 {A B : Type'} (R : type1413 A B) (R' : type1413 A B) (a0 : A) : (term69 A B R R' a0) = (term69 A B R R' a0).
Proof. exact (MK_COMB (@lem328915 B) (@lem328914 A B R R' a0)). Qed.
Lemma lem328917 {A B : Type'} (R : type1413 A B) (R' : type1413 A B) : (term70 A B R R') = (term70 A B R R').
Proof. exact (fun_ext (fun a0 : A => @lem328916 A B R R' a0)). Qed.
Lemma lem328918 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem328919 {A B : Type'} (R : type1413 A B) (R' : type1413 A B) : (term71 A B R R') = (term71 A B R R').
Proof. exact (MK_COMB (@lem328918 A) (@lem328917 A B R R')). Qed.
Lemma lem328920 {A B : Type'} (R' : type1413 A B) (H : type549 A B) (f : A -> B) (x : A) : (term72 A B R' H f x) = (term72 A B R' H f x).
Proof. exact (eq_refl (term72 A B R' H f x)). Qed.
Lemma lem328925 {A B : Type'} (lt2 : type1402 A) (x : A) (R' : type1413 A B) (f : A -> B) (z : A) : (term56 A B lt2 x R' f z) = (term56 A B lt2 x R' f z).
Proof. exact (eq_refl (term56 A B lt2 x R' f z)). Qed.
Lemma lem328926 {A B : Type'} (lt2 : type1402 A) (x : A) (R' : type1413 A B) (f : A -> B) : (term57 A B lt2 x R' f) = (term57 A B lt2 x R' f).
Proof. exact (fun_ext (fun z : A => @lem328925 A B lt2 x R' f z)). Qed.
Lemma lem328927 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem328928 {A B : Type'} (lt2 : type1402 A) (x : A) (R' : type1413 A B) (f : A -> B) : (term58 A B lt2 x R' f) = (term58 A B lt2 x R' f).
Proof. exact (MK_COMB (@lem328927 A) (@lem328926 A B lt2 x R' f)). Qed.
Lemma lem328929 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem328930 {A B : Type'} (lt2 : type1402 A) (x : A) (R' : type1413 A B) (f : A -> B) : (term73 A B lt2 x R' f) = (term73 A B lt2 x R' f).
Proof. exact (MK_COMB (@lem328929) (@lem328928 A B lt2 x R' f)). Qed.
Lemma lem328931 {A B : Type'} (lt2 : type1402 A) (R' : type1413 A B) (H : type549 A B) (f : A -> B) (x : A) : (term74 A B lt2 R' H f x) = (term74 A B lt2 R' H f x).
Proof. exact (MK_COMB (@lem328930 A B lt2 x R' f) (@lem328920 A B R' H f x)). Qed.
Lemma lem328932 {A B : Type'} (lt2 : type1402 A) (R' : type1413 A B) (H : type549 A B) (f : A -> B) : (term75 A B lt2 R' H f) = (term75 A B lt2 R' H f).
Proof. exact (fun_ext (fun x : A => @lem328931 A B lt2 R' H f x)). Qed.
Lemma lem328933 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem328934 {A B : Type'} (lt2 : type1402 A) (R' : type1413 A B) (H : type549 A B) (f : A -> B) : (term76 A B lt2 R' H f) = (term76 A B lt2 R' H f).
Proof. exact (MK_COMB (@lem328933 A) (@lem328932 A B lt2 R' H f)). Qed.
Lemma lem328935 {A B : Type'} (lt2 : type1402 A) (R' : type1413 A B) (H : type549 A B) : (term77 A B lt2 R' H) = (term77 A B lt2 R' H).
Proof. exact (fun_ext (fun f : A -> B => @lem328934 A B lt2 R' H f)). Qed.
Lemma lem328936 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem328937 {A B : Type'} (lt2 : type1402 A) (R' : type1413 A B) (H : type549 A B) : (term3 A B lt2 R' H) = (term3 A B lt2 R' H).
Proof. exact (MK_COMB (@lem328936 A B) (@lem328935 A B lt2 R' H)). Qed.
Lemma lem328938 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem328939 {A B : Type'} (lt2 : type1402 A) (R' : type1413 A B) (H : type549 A B) : (term26 A B lt2 R' H) = (term26 A B lt2 R' H).
Proof. exact (MK_COMB (@lem328938) (@lem328937 A B lt2 R' H)). Qed.
Lemma lem328940 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (R : type1413 A B) (R' : type1413 A B) : (term78 A B lt2 H R R') = (term78 A B lt2 H R R').
Proof. exact (MK_COMB (@lem328939 A B lt2 R' H) (@lem328919 A B R R')). Qed.
Lemma lem328941 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (R : type1413 A B) : (term79 A B lt2 H R) = (term79 A B lt2 H R).
Proof. exact (fun_ext (fun R' : type1413 A B => @lem328940 A B lt2 H R R')). Qed.
Lemma lem328942 {A B : Type'} : (@all (A -> B -> Prop)) = (@all (A -> B -> Prop)).
Proof. exact (eq_refl (@all (A -> B -> Prop))). Qed.
Lemma lem328943 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (R : type1413 A B) : (term5 A B lt2 H R) = (term5 A B lt2 H R).
Proof. exact (MK_COMB (@lem328942 A B) (@lem328941 A B lt2 H R)). Qed.
Lemma lem328944 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem328945 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (R : type1413 A B) : (term23 A B lt2 H R) = (term23 A B lt2 H R).
Proof. exact (MK_COMB (@lem328944) (@lem328943 A B lt2 H R)). Qed.
Lemma lem328946 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (S' : type1413 A B) : (term1071 A B H lt2 x R S') = (term1071 A B H lt2 x R S').
Proof. exact (MK_COMB (@lem328945 A B lt2 H R) (@lem328908 A B lt2 x R S')). Qed.
Lemma lem328947 {A B : Type'} (R : type1413 A B) (H : type549 A B) (f : A -> B) (x : A) : (term72 A B R H f x) = (term72 A B R H f x).
Proof. exact (eq_refl (term72 A B R H f x)). Qed.
Lemma lem328952 {A B : Type'} (lt2 : type1402 A) (x : A) (R : type1413 A B) (f : A -> B) (z : A) : (term56 A B lt2 x R f z) = (term56 A B lt2 x R f z).
Proof. exact (eq_refl (term56 A B lt2 x R f z)). Qed.
Lemma lem328953 {A B : Type'} (lt2 : type1402 A) (x : A) (R : type1413 A B) (f : A -> B) : (term57 A B lt2 x R f) = (term57 A B lt2 x R f).
Proof. exact (fun_ext (fun z : A => @lem328952 A B lt2 x R f z)). Qed.
Lemma lem328954 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem328955 {A B : Type'} (lt2 : type1402 A) (x : A) (R : type1413 A B) (f : A -> B) : (term58 A B lt2 x R f) = (term58 A B lt2 x R f).
Proof. exact (MK_COMB (@lem328954 A) (@lem328953 A B lt2 x R f)). Qed.
Lemma lem328956 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem328957 {A B : Type'} (lt2 : type1402 A) (x : A) (R : type1413 A B) (f : A -> B) : (term73 A B lt2 x R f) = (term73 A B lt2 x R f).
Proof. exact (MK_COMB (@lem328956) (@lem328955 A B lt2 x R f)). Qed.
Lemma lem328958 {A B : Type'} (lt2 : type1402 A) (R : type1413 A B) (H : type549 A B) (f : A -> B) (x : A) : (term74 A B lt2 R H f x) = (term74 A B lt2 R H f x).
Proof. exact (MK_COMB (@lem328957 A B lt2 x R f) (@lem328947 A B R H f x)). Qed.
Lemma lem328959 {A B : Type'} (lt2 : type1402 A) (R : type1413 A B) (H : type549 A B) (f : A -> B) : (term75 A B lt2 R H f) = (term75 A B lt2 R H f).
Proof. exact (fun_ext (fun x : A => @lem328958 A B lt2 R H f x)). Qed.
Lemma lem328960 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem328961 {A B : Type'} (lt2 : type1402 A) (R : type1413 A B) (H : type549 A B) (f : A -> B) : (term76 A B lt2 R H f) = (term76 A B lt2 R H f).
Proof. exact (MK_COMB (@lem328960 A) (@lem328959 A B lt2 R H f)). Qed.
Lemma lem328962 {A B : Type'} (lt2 : type1402 A) (R : type1413 A B) (H : type549 A B) : (term77 A B lt2 R H) = (term77 A B lt2 R H).
Proof. exact (fun_ext (fun f : A -> B => @lem328961 A B lt2 R H f)). Qed.
Lemma lem328963 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem328964 {A B : Type'} (lt2 : type1402 A) (R : type1413 A B) (H : type549 A B) : (term3 A B lt2 R H) = (term3 A B lt2 R H).
Proof. exact (MK_COMB (@lem328963 A B) (@lem328962 A B lt2 R H)). Qed.
Lemma lem328965 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem328966 {A B : Type'} (lt2 : type1402 A) (R : type1413 A B) (H : type549 A B) : (term26 A B lt2 R H) = (term26 A B lt2 R H).
Proof. exact (MK_COMB (@lem328965) (@lem328964 A B lt2 R H)). Qed.
Lemma lem328967 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (S' : type1413 A B) : (term1073 A B H lt2 x R S') = (term1073 A B H lt2 x R S').
Proof. exact (MK_COMB (@lem328966 A B lt2 R H) (@lem328946 A B H lt2 x R S')). Qed.
Lemma lem328972 {A B : Type'} (g : A -> B) (S' : type1413 A B) (H : type549 A B) (f : A -> B) (x : A) : (term80 A B g S' H f x) = (term80 A B g S' H f x).
Proof. exact (eq_refl (term80 A B g S' H f x)). Qed.
Lemma lem328981 {A B : Type'} (lt2 : type1402 A) (x : A) (g : A -> B) (S' : type1413 A B) (f : A -> B) (z : A) : (term81 A B lt2 x g S' f z) = (term81 A B lt2 x g S' f z).
Proof. exact (eq_refl (term81 A B lt2 x g S' f z)). Qed.
Lemma lem328982 {A B : Type'} (lt2 : type1402 A) (x : A) (g : A -> B) (S' : type1413 A B) (f : A -> B) : (term82 A B lt2 x g S' f) = (term82 A B lt2 x g S' f).
Proof. exact (fun_ext (fun z : A => @lem328981 A B lt2 x g S' f z)). Qed.
Lemma lem328983 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem328984 {A B : Type'} (lt2 : type1402 A) (x : A) (g : A -> B) (S' : type1413 A B) (f : A -> B) : (term83 A B lt2 x g S' f) = (term83 A B lt2 x g S' f).
Proof. exact (MK_COMB (@lem328983 A) (@lem328982 A B lt2 x g S' f)). Qed.
Lemma lem328985 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem328986 {A B : Type'} (lt2 : type1402 A) (x : A) (g : A -> B) (S' : type1413 A B) (f : A -> B) : (term84 A B lt2 x g S' f) = (term84 A B lt2 x g S' f).
Proof. exact (MK_COMB (@lem328985) (@lem328984 A B lt2 x g S' f)). Qed.
Lemma lem328987 {A B : Type'} (lt2 : type1402 A) (g : A -> B) (S' : type1413 A B) (H : type549 A B) (f : A -> B) (x : A) : (term85 A B lt2 g S' H f x) = (term85 A B lt2 g S' H f x).
Proof. exact (MK_COMB (@lem328986 A B lt2 x g S' f) (@lem328972 A B g S' H f x)). Qed.
Lemma lem328988 {A B : Type'} (lt2 : type1402 A) (g : A -> B) (S' : type1413 A B) (H : type549 A B) (f : A -> B) : (term86 A B lt2 g S' H f) = (term86 A B lt2 g S' H f).
Proof. exact (fun_ext (fun x : A => @lem328987 A B lt2 g S' H f x)). Qed.
Lemma lem328989 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem328990 {A B : Type'} (lt2 : type1402 A) (g : A -> B) (S' : type1413 A B) (H : type549 A B) (f : A -> B) : (term87 A B lt2 g S' H f) = (term87 A B lt2 g S' H f).
Proof. exact (MK_COMB (@lem328989 A) (@lem328988 A B lt2 g S' H f)). Qed.
Lemma lem328991 {A B : Type'} (lt2 : type1402 A) (S' : type1413 A B) (H : type549 A B) (f : A -> B) : (term88 A B lt2 S' H f) = (term88 A B lt2 S' H f).
Proof. exact (fun_ext (fun g : A -> B => @lem328990 A B lt2 g S' H f)). Qed.
Lemma lem328992 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem328993 {A B : Type'} (lt2 : type1402 A) (S' : type1413 A B) (H : type549 A B) (f : A -> B) : (term89 A B lt2 S' H f) = (term89 A B lt2 S' H f).
Proof. exact (MK_COMB (@lem328992 A B) (@lem328991 A B lt2 S' H f)). Qed.
Lemma lem328994 {A B : Type'} (lt2 : type1402 A) (S' : type1413 A B) (H : type549 A B) : (term90 A B lt2 S' H) = (term90 A B lt2 S' H).
Proof. exact (fun_ext (fun f : A -> B => @lem328993 A B lt2 S' H f)). Qed.
Lemma lem328995 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem328996 {A B : Type'} (lt2 : type1402 A) (S' : type1413 A B) (H : type549 A B) : (term1 A B lt2 S' H) = (term1 A B lt2 S' H).
Proof. exact (MK_COMB (@lem328995 A B) (@lem328994 A B lt2 S' H)). Qed.
Lemma lem328997 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem328998 {A B : Type'} (lt2 : type1402 A) (S' : type1413 A B) (H : type549 A B) : (term29 A B lt2 S' H) = (term29 A B lt2 S' H).
Proof. exact (MK_COMB (@lem328997) (@lem328996 A B lt2 S' H)). Qed.
Lemma lem328999 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (S' : type1413 A B) : (term1074 A B H lt2 x R S') = (term1074 A B H lt2 x R S').
Proof. exact (MK_COMB (@lem328998 A B lt2 S' H) (@lem328967 A B H lt2 x R S')). Qed.
Lemma lem329000 {A B : Type'} (lt2 : type1402 A) (x : A) (R : type1413 A B) (S' : type1413 A B) : (term1076 A B lt2 x R S') = (term1076 A B lt2 x R S').
Proof. exact (fun_ext (fun H : type549 A B => @lem328999 A B H lt2 x R S')). Qed.
Lemma lem329001 {A B : Type'} : (@all ((A -> B) -> A -> B)) = (@all ((A -> B) -> A -> B)).
Proof. exact (eq_refl (@all ((A -> B) -> A -> B))). Qed.
Lemma lem329002 {A B : Type'} (lt2 : type1402 A) (x : A) (R : type1413 A B) (S' : type1413 A B) : (term1078 A B lt2 x R S') = (term1078 A B lt2 x R S').
Proof. exact (MK_COMB (@lem329001 A B) (@lem329000 A B lt2 x R S')). Qed.
Lemma lem329003 {A B : Type'} (x : A) (R : type1413 A B) (S' : type1413 A B) : (term1080 A B x R S') = (term1080 A B x R S').
Proof. exact (fun_ext (fun lt2 : type1402 A => @lem329002 A B lt2 x R S')). Qed.
Lemma lem329004 {A : Type'} : (@all (A -> A -> Prop)) = (@all (A -> A -> Prop)).
Proof. exact (eq_refl (@all (A -> A -> Prop))). Qed.
Lemma lem329005 {A B : Type'} (x : A) (R : type1413 A B) (S' : type1413 A B) : (term1082 A B x R S') = (term1082 A B x R S').
Proof. exact (MK_COMB (@lem329004 A) (@lem329003 A B x R S')). Qed.
Lemma lem329006 {A B : Type'} (R : type1413 A B) (S' : type1413 A B) : (term1084 A B R S') = (term1084 A B R S').
Proof. exact (fun_ext (fun x : A => @lem329005 A B x R S')). Qed.
Lemma lem329007 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem329008 {A B : Type'} (R : type1413 A B) (S' : type1413 A B) : (term1086 A B R S') = (term1086 A B R S').
Proof. exact (MK_COMB (@lem329007 A) (@lem329006 A B R S')). Qed.
Lemma lem329009 {A B : Type'} (S' : type1413 A B) : (term1088 A B S') = (term1088 A B S').
Proof. exact (fun_ext (fun R : type1413 A B => @lem329008 A B R S')). Qed.
Lemma lem329010 {A B : Type'} : (@all (A -> B -> Prop)) = (@all (A -> B -> Prop)).
Proof. exact (eq_refl (@all (A -> B -> Prop))). Qed.
Lemma lem329011 {A B : Type'} (S' : type1413 A B) : (term1090 A B S') = (term1090 A B S').
Proof. exact (MK_COMB (@lem329010 A B) (@lem329009 A B S')). Qed.
Lemma lem329012 {A B : Type'} : (term1092 A B) = (term1092 A B).
Proof. exact (fun_ext (fun S' : type1413 A B => @lem329011 A B S')). Qed.
Lemma lem329013 {A B : Type'} : (@all (A -> B -> Prop)) = (@all (A -> B -> Prop)).
Proof. exact (eq_refl (@all (A -> B -> Prop))). Qed.
Lemma lem329014 {A B : Type'} : (term1094 A B) = (term1094 A B).
Proof. exact (MK_COMB (@lem329013 A B) (@lem329012 A B)). Qed.
Lemma lem329175 {A B : Type'} : (term1093 A B) = (term1094 A B).
Proof. exact (TRANS (@lem328883 A B) (@lem329014 A B)). Qed.
Lemma lem329176 {A B : Type'} : (term1094 A B) = (term1093 A B).
Proof. exact (SYM (@lem329175 A B)). Qed.
Lemma lem329177 {A B : Type'} (lt2 : type1402 A) (S' : type1413 A B) (H : type549 A B) (h1 : term1 A B lt2 S' H) : term1 A B lt2 S' H.
Proof. exact (h1). Qed.
Lemma lem329178 {A B : Type'} (lt2 : type1402 A) (R : type1413 A B) (H : type549 A B) (h1 : term3 A B lt2 R H) : term3 A B lt2 R H.
Proof. exact (h1). Qed.
Lemma lem329179 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (R : type1413 A B) (h1 : term5 A B lt2 H R) : term5 A B lt2 H R.
Proof. exact (h1). Qed.
Lemma lem329180 {A B : Type'} (lt2 : type1402 A) (x : A) (R : type1413 A B) (h1 : term1043 A B lt2 x R) : term1043 A B lt2 x R.
Proof. exact (h1). Qed.
Lemma lem329183 (p : Prop) : p = (term7 p).
Proof. exact (EQ_MP (@lem10578 p) (@lem10597 p)). Qed.
Lemma lem329184 {A B : Type'} (S' : type1413 A B) (x' : A) (y : B) : (S' x' y) = (term1095 A B S' x' y).
Proof. exact (@lem329183 (S' x' y)). Qed.
Lemma lem329185 {A B : Type'} (S' : type1413 A B) (x' : A) (y : B) : (term1095 A B S' x' y) = (S' x' y).
Proof. exact (SYM (@lem329184 A B S' x' y)). Qed.
Lemma lem329186 {A B : Type'} (S' : type1413 A B) (x' : A) (y : B) (h1 : term667 A B S' x' y) : term667 A B S' x' y.
Proof. exact (h1). Qed.
Lemma lem329194 {A B : Type'} (g : A -> B) (S' : type1413 A B) (f : A -> B) (z : A) : (term171 A B g S' f z) = (term172 A B g S' f z).
Proof. exact (@lem17045 ((f z) = (g z)) (term173 A B S' f z)). Qed.
Lemma lem329196 {A : Type'} (lt2 : type1402 A) (z : A) (x : A) : (term174 A lt2 z x) = (term174 A lt2 z x).
Proof. exact (eq_refl (term174 A lt2 z x)). Qed.
Lemma lem329197 {A B : Type'} (lt2 : type1402 A) (x : A) (g : A -> B) (S' : type1413 A B) (f : A -> B) (z : A) : (term175 A B lt2 x g S' f z) = (term176 A B lt2 x g S' f z).
Proof. exact (MK_COMB (@lem329196 A lt2 z x) (@lem329194 A B g S' f z)). Qed.
Lemma lem329198 {A B : Type'} (lt2 : type1402 A) (x : A) (g : A -> B) (S' : type1413 A B) (f : A -> B) (z : A) : (term177 A B lt2 x g S' f z) = (term175 A B lt2 x g S' f z).
Proof. exact (@lem17362 (lt2 z x) (term178 A B g S' f z)). Qed.
Lemma lem329199 {A B : Type'} (lt2 : type1402 A) (x : A) (g : A -> B) (S' : type1413 A B) (f : A -> B) (z : A) : (term177 A B lt2 x g S' f z) = (term176 A B lt2 x g S' f z).
Proof. exact (TRANS (@lem329198 A B lt2 x g S' f z) (@lem329197 A B lt2 x g S' f z)). Qed.
Lemma lem329200 {A : Type'} (P : A -> Prop) : (term112 A P) = (term113 A P).
Proof. exact (@lem18392 A P). Qed.
Lemma lem329201 {A B : Type'} (lt2 : type1402 A) (x : A) (g : A -> B) (S' : type1413 A B) (f : A -> B) : (term179 A B lt2 x g S' f) = (term180 A B lt2 x g S' f).
Proof. exact (@lem329200 A (term82 A B lt2 x g S' f)). Qed.
Lemma lem329202 {A B : Type'} (lt2 : type1402 A) (x : A) (g : A -> B) (S' : type1413 A B) (f : A -> B) (z : A) : (term181 A B lt2 x g S' f z) = (term81 A B lt2 x g S' f z).
Proof. exact (eq_refl (term181 A B lt2 x g S' f z)). Qed.
Lemma lem329203 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem329204 {A B : Type'} (lt2 : type1402 A) (x : A) (g : A -> B) (S' : type1413 A B) (f : A -> B) (z : A) : (term182 A B lt2 x g S' f z) = (term177 A B lt2 x g S' f z).
Proof. exact (MK_COMB (@lem329203) (@lem329202 A B lt2 x g S' f z)). Qed.
Lemma lem329205 {A B : Type'} (lt2 : type1402 A) (x : A) (g : A -> B) (S' : type1413 A B) (f : A -> B) (z : A) : (term182 A B lt2 x g S' f z) = (term176 A B lt2 x g S' f z).
Proof. exact (TRANS (@lem329204 A B lt2 x g S' f z) (@lem329199 A B lt2 x g S' f z)). Qed.
Lemma lem329206 {A B : Type'} (lt2 : type1402 A) (x : A) (g : A -> B) (S' : type1413 A B) (f : A -> B) : (term183 A B lt2 x g S' f) = (term184 A B lt2 x g S' f).
Proof. exact (fun_ext (fun z : A => @lem329205 A B lt2 x g S' f z)). Qed.
Lemma lem329207 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem329208 {A B : Type'} (lt2 : type1402 A) (x : A) (g : A -> B) (S' : type1413 A B) (f : A -> B) : (term180 A B lt2 x g S' f) = (term185 A B lt2 x g S' f).
Proof. exact (MK_COMB (@lem329207 A) (@lem329206 A B lt2 x g S' f)). Qed.
Lemma lem329209 {A B : Type'} (lt2 : type1402 A) (x : A) (g : A -> B) (S' : type1413 A B) (f : A -> B) : (term179 A B lt2 x g S' f) = (term185 A B lt2 x g S' f).
Proof. exact (TRANS (@lem329201 A B lt2 x g S' f) (@lem329208 A B lt2 x g S' f)). Qed.
Lemma lem329214 {A B : Type'} (g : A -> B) (S' : type1413 A B) (H : type549 A B) (f : A -> B) (x : A) : (term80 A B g S' H f x) = (term80 A B g S' H f x).
Proof. exact (eq_refl (term80 A B g S' H f x)). Qed.
Lemma lem329215 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem329216 {A B : Type'} (lt2 : type1402 A) (x : A) (g : A -> B) (S' : type1413 A B) (f : A -> B) : (term186 A B lt2 x g S' f) = (term187 A B lt2 x g S' f).
Proof. exact (MK_COMB (@lem329215) (@lem329209 A B lt2 x g S' f)). Qed.
Lemma lem329217 {A B : Type'} (lt2 : type1402 A) (g : A -> B) (S' : type1413 A B) (H : type549 A B) (f : A -> B) (x : A) : (term188 A B lt2 g S' H f x) = (term189 A B lt2 g S' H f x).
Proof. exact (MK_COMB (@lem329216 A B lt2 x g S' f) (@lem329214 A B g S' H f x)). Qed.
Lemma lem329218 {A B : Type'} (lt2 : type1402 A) (g : A -> B) (S' : type1413 A B) (H : type549 A B) (f : A -> B) (x : A) : (term85 A B lt2 g S' H f x) = (term188 A B lt2 g S' H f x).
Proof. exact (@lem17265 (term83 A B lt2 x g S' f) (term80 A B g S' H f x)). Qed.
Lemma lem329219 {A B : Type'} (lt2 : type1402 A) (g : A -> B) (S' : type1413 A B) (H : type549 A B) (f : A -> B) (x : A) : (term85 A B lt2 g S' H f x) = (term189 A B lt2 g S' H f x).
Proof. exact (TRANS (@lem329218 A B lt2 g S' H f x) (@lem329217 A B lt2 g S' H f x)). Qed.
Lemma lem329220 {A B : Type'} (lt2 : type1402 A) (g : A -> B) (S' : type1413 A B) (H : type549 A B) (f : A -> B) : (term86 A B lt2 g S' H f) = (term190 A B lt2 g S' H f).
Proof. exact (fun_ext (fun x : A => @lem329219 A B lt2 g S' H f x)). Qed.
Lemma lem329221 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem329222 {A B : Type'} (lt2 : type1402 A) (g : A -> B) (S' : type1413 A B) (H : type549 A B) (f : A -> B) : (term87 A B lt2 g S' H f) = (term191 A B lt2 g S' H f).
Proof. exact (MK_COMB (@lem329221 A) (@lem329220 A B lt2 g S' H f)). Qed.
Lemma lem329223 {A B : Type'} (lt2 : type1402 A) (S' : type1413 A B) (H : type549 A B) (f : A -> B) : (term88 A B lt2 S' H f) = (term192 A B lt2 S' H f).
Proof. exact (fun_ext (fun g : A -> B => @lem329222 A B lt2 g S' H f)). Qed.
Lemma lem329224 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem329225 {A B : Type'} (lt2 : type1402 A) (S' : type1413 A B) (H : type549 A B) (f : A -> B) : (term89 A B lt2 S' H f) = (term193 A B lt2 S' H f).
Proof. exact (MK_COMB (@lem329224 A B) (@lem329223 A B lt2 S' H f)). Qed.
Lemma lem329226 {A B : Type'} (lt2 : type1402 A) (S' : type1413 A B) (H : type549 A B) : (term90 A B lt2 S' H) = (term194 A B lt2 S' H).
Proof. exact (fun_ext (fun f : A -> B => @lem329225 A B lt2 S' H f)). Qed.
Lemma lem329227 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem329228 {A B : Type'} (lt2 : type1402 A) (S' : type1413 A B) (H : type549 A B) : (term1 A B lt2 S' H) = (term195 A B lt2 S' H).
Proof. exact (MK_COMB (@lem329227 A B) (@lem329226 A B lt2 S' H)). Qed.
Lemma lem329335 {A : Type'} (P : A -> Prop) (Q : Prop) : (term127 A P Q) = (term128 A P Q).
Proof. exact (EQ_MP (@lem18905 A P Q) (@lem18904 A P Q)). Qed.
Lemma lem329336 {A : Type'} (P : A -> Prop) (Q : Prop) : (term127 A P Q) = (term128 A P Q).
Proof. exact (@lem329335 A P Q). Qed.
Lemma lem329337 {A B : Type'} (lt2 : type1402 A) (g : A -> B) (S' : type1413 A B) (H : type549 A B) (f : A -> B) (x : A) : (term196 A B lt2 g S' H f x) = (term197 A B lt2 g S' H f x).
Proof. exact (@lem329336 A (term184 A B lt2 x g S' f) (term80 A B g S' H f x)). Qed.
Lemma lem329338 {A B : Type'} (lt2 : type1402 A) (x : A) (g : A -> B) (S' : type1413 A B) (f : A -> B) (z : A) : (term198 A B lt2 x g S' f z) = (term176 A B lt2 x g S' f z).
Proof. exact (eq_refl (term198 A B lt2 x g S' f z)). Qed.
Lemma lem329339 {A B : Type'} (lt2 : type1402 A) (x : A) (g : A -> B) (S' : type1413 A B) (f : A -> B) : (term199 A B lt2 x g S' f) = (term184 A B lt2 x g S' f).
Proof. exact (fun_ext (fun z : A => @lem329338 A B lt2 x g S' f z)). Qed.
Lemma lem329340 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem329341 {A B : Type'} (lt2 : type1402 A) (x : A) (g : A -> B) (S' : type1413 A B) (f : A -> B) : (term200 A B lt2 x g S' f) = (term185 A B lt2 x g S' f).
Proof. exact (MK_COMB (@lem329340 A) (@lem329339 A B lt2 x g S' f)). Qed.
Lemma lem329342 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem329343 {A B : Type'} (lt2 : type1402 A) (x : A) (g : A -> B) (S' : type1413 A B) (f : A -> B) : (term201 A B lt2 x g S' f) = (term187 A B lt2 x g S' f).
Proof. exact (MK_COMB (@lem329342) (@lem329341 A B lt2 x g S' f)). Qed.
Lemma lem329344 {A B : Type'} (g : A -> B) (S' : type1413 A B) (H : type549 A B) (f : A -> B) (x : A) : (term80 A B g S' H f x) = (term80 A B g S' H f x).
Proof. exact (eq_refl (term80 A B g S' H f x)). Qed.
Lemma lem329345 {A B : Type'} (lt2 : type1402 A) (g : A -> B) (S' : type1413 A B) (H : type549 A B) (f : A -> B) (x : A) : (term196 A B lt2 g S' H f x) = (term189 A B lt2 g S' H f x).
Proof. exact (MK_COMB (@lem329343 A B lt2 x g S' f) (@lem329344 A B g S' H f x)). Qed.
Lemma lem329346 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem329347 {A B : Type'} (lt2 : type1402 A) (g : A -> B) (S' : type1413 A B) (H : type549 A B) (f : A -> B) (x : A) : (term202 A B lt2 g S' H f x) = (term203 A B lt2 g S' H f x).
Proof. exact (MK_COMB (@lem329346) (@lem329345 A B lt2 g S' H f x)). Qed.
Lemma lem329348 {A B : Type'} (lt2 : type1402 A) (x : A) (g : A -> B) (S' : type1413 A B) (f : A -> B) (z : A) : (term198 A B lt2 x g S' f z) = (term176 A B lt2 x g S' f z).
Proof. exact (eq_refl (term198 A B lt2 x g S' f z)). Qed.
Lemma lem329349 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem329350 {A B : Type'} (lt2 : type1402 A) (x : A) (g : A -> B) (S' : type1413 A B) (f : A -> B) (z : A) : (term204 A B lt2 x g S' f z) = (term205 A B lt2 x g S' f z).
Proof. exact (MK_COMB (@lem329349) (@lem329348 A B lt2 x g S' f z)). Qed.
Lemma lem329351 {A B : Type'} (g : A -> B) (S' : type1413 A B) (H : type549 A B) (f : A -> B) (x : A) : (term80 A B g S' H f x) = (term80 A B g S' H f x).
Proof. exact (eq_refl (term80 A B g S' H f x)). Qed.
Lemma lem329352 {A B : Type'} (lt2 : type1402 A) (z : A) (g : A -> B) (S' : type1413 A B) (H : type549 A B) (f : A -> B) (x : A) : (term206 A B lt2 z g S' H f x) = (term207 A B lt2 z g S' H f x).
Proof. exact (MK_COMB (@lem329350 A B lt2 x g S' f z) (@lem329351 A B g S' H f x)). Qed.
Lemma lem329353 {A B : Type'} (lt2 : type1402 A) (g : A -> B) (S' : type1413 A B) (H : type549 A B) (f : A -> B) (x : A) : (term208 A B lt2 g S' H f x) = (term209 A B lt2 g S' H f x).
Proof. exact (fun_ext (fun z : A => @lem329352 A B lt2 z g S' H f x)). Qed.
Lemma lem329354 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem329355 {A B : Type'} (lt2 : type1402 A) (g : A -> B) (S' : type1413 A B) (H : type549 A B) (f : A -> B) (x : A) : (term197 A B lt2 g S' H f x) = (term210 A B lt2 g S' H f x).
Proof. exact (MK_COMB (@lem329354 A) (@lem329353 A B lt2 g S' H f x)). Qed.
Lemma lem329356 {A B : Type'} (lt2 : type1402 A) (g : A -> B) (S' : type1413 A B) (H : type549 A B) (f : A -> B) (x : A) : ((term196 A B lt2 g S' H f x) = (term197 A B lt2 g S' H f x)) = ((term189 A B lt2 g S' H f x) = (term210 A B lt2 g S' H f x)).
Proof. exact (MK_COMB (@lem329347 A B lt2 g S' H f x) (@lem329355 A B lt2 g S' H f x)). Qed.
Lemma lem329357 {A B : Type'} (lt2 : type1402 A) (g : A -> B) (S' : type1413 A B) (H : type549 A B) (f : A -> B) (x : A) : (term189 A B lt2 g S' H f x) = (term210 A B lt2 g S' H f x).
Proof. exact (EQ_MP (@lem329356 A B lt2 g S' H f x) (@lem329337 A B lt2 g S' H f x)). Qed.
Lemma lem329358 {A B : Type'} (lt2 : type1402 A) (g : A -> B) (S' : type1413 A B) (H : type549 A B) (f : A -> B) : (term190 A B lt2 g S' H f) = (term211 A B lt2 g S' H f).
Proof. exact (fun_ext (fun x : A => @lem329357 A B lt2 g S' H f x)). Qed.
Lemma lem329359 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem329360 {A B : Type'} (lt2 : type1402 A) (g : A -> B) (S' : type1413 A B) (H : type549 A B) (f : A -> B) : (term191 A B lt2 g S' H f) = (term212 A B lt2 g S' H f).
Proof. exact (MK_COMB (@lem329359 A) (@lem329358 A B lt2 g S' H f)). Qed.
Lemma lem329362 {A B : Type'} (P : type1413 A B) : (term146 A B P) = (term147 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem329363 {A : Type'} (P : type1402 A) : (term213 A P) = (term214 A P).
Proof. exact (@lem329362 A A P). Qed.
Lemma lem329364 {A B : Type'} (lt2 : type1402 A) (g : A -> B) (S' : type1413 A B) (H : type549 A B) (f : A -> B) : (term215 A B lt2 g S' H f) = (term216 A B lt2 g S' H f).
Proof. exact (@lem329363 A (term217 A B lt2 g S' H f)). Qed.
Lemma lem329365 {A B : Type'} (lt2 : type1402 A) (g : A -> B) (S' : type1413 A B) (H : type549 A B) (f : A -> B) (x : A) : (term218 A B lt2 g S' H f x) = (term209 A B lt2 g S' H f x).
Proof. exact (eq_refl (term218 A B lt2 g S' H f x)). Qed.
Lemma lem329366 {A : Type'} (z : A) : z = z.
Proof. exact (eq_refl z). Qed.
Lemma lem329367 {A B : Type'} (lt2 : type1402 A) (g : A -> B) (S' : type1413 A B) (H : type549 A B) (f : A -> B) (x : A) (z : A) : (term219 A B lt2 g S' H f x z) = (term220 A B lt2 g S' H f x z).
Proof. exact (MK_COMB (@lem329365 A B lt2 g S' H f x) (@lem329366 A z)). Qed.
Lemma lem329368 {A B : Type'} (lt2 : type1402 A) (z : A) (g : A -> B) (S' : type1413 A B) (H : type549 A B) (f : A -> B) (x : A) : (term220 A B lt2 g S' H f x z) = (term207 A B lt2 z g S' H f x).
Proof. exact (eq_refl (term220 A B lt2 g S' H f x z)). Qed.
Lemma lem329369 {A B : Type'} (lt2 : type1402 A) (z : A) (g : A -> B) (S' : type1413 A B) (H : type549 A B) (f : A -> B) (x : A) : (term219 A B lt2 g S' H f x z) = (term207 A B lt2 z g S' H f x).
Proof. exact (TRANS (@lem329367 A B lt2 g S' H f x z) (@lem329368 A B lt2 z g S' H f x)). Qed.
Lemma lem329370 {A B : Type'} (lt2 : type1402 A) (g : A -> B) (S' : type1413 A B) (H : type549 A B) (f : A -> B) (x : A) : (term221 A B lt2 g S' H f x) = (term209 A B lt2 g S' H f x).
Proof. exact (fun_ext (fun z : A => @lem329369 A B lt2 z g S' H f x)). Qed.
Lemma lem329371 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem329372 {A B : Type'} (lt2 : type1402 A) (g : A -> B) (S' : type1413 A B) (H : type549 A B) (f : A -> B) (x : A) : (term222 A B lt2 g S' H f x) = (term210 A B lt2 g S' H f x).
Proof. exact (MK_COMB (@lem329371 A) (@lem329370 A B lt2 g S' H f x)). Qed.
Lemma lem329373 {A B : Type'} (lt2 : type1402 A) (g : A -> B) (S' : type1413 A B) (H : type549 A B) (f : A -> B) : (term223 A B lt2 g S' H f) = (term211 A B lt2 g S' H f).
Proof. exact (fun_ext (fun x : A => @lem329372 A B lt2 g S' H f x)). Qed.
Lemma lem329374 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem329375 {A B : Type'} (lt2 : type1402 A) (g : A -> B) (S' : type1413 A B) (H : type549 A B) (f : A -> B) : (term215 A B lt2 g S' H f) = (term212 A B lt2 g S' H f).
Proof. exact (MK_COMB (@lem329374 A) (@lem329373 A B lt2 g S' H f)). Qed.
Lemma lem329376 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem329377 {A B : Type'} (lt2 : type1402 A) (g : A -> B) (S' : type1413 A B) (H : type549 A B) (f : A -> B) : (term224 A B lt2 g S' H f) = (term225 A B lt2 g S' H f).
Proof. exact (MK_COMB (@lem329376) (@lem329375 A B lt2 g S' H f)). Qed.
Lemma lem329378 {A B : Type'} (lt2 : type1402 A) (g : A -> B) (S' : type1413 A B) (H : type549 A B) (f : A -> B) (x : A) : (term218 A B lt2 g S' H f x) = (term209 A B lt2 g S' H f x).
Proof. exact (eq_refl (term218 A B lt2 g S' H f x)). Qed.
Lemma lem329379 {A : Type'} (z : A -> A) (x : A) : (z x) = (z x).
Proof. exact (eq_refl (z x)). Qed.
Lemma lem329380 {A B : Type'} (lt2 : type1402 A) (g : A -> B) (S' : type1413 A B) (H : type549 A B) (f : A -> B) (z : A -> A) (x : A) : (term226 A B lt2 g S' H f z x) = (term227 A B lt2 g S' H f z x).
Proof. exact (MK_COMB (@lem329378 A B lt2 g S' H f x) (@lem329379 A z x)). Qed.
Lemma lem329381 {A B : Type'} (lt2 : type1402 A) (z : A -> A) (g : A -> B) (S' : type1413 A B) (H : type549 A B) (f : A -> B) (x : A) : (term227 A B lt2 g S' H f z x) = (term228 A B lt2 z g S' H f x).
Proof. exact (eq_refl (term227 A B lt2 g S' H f z x)). Qed.
Lemma lem329382 {A B : Type'} (lt2 : type1402 A) (z : A -> A) (g : A -> B) (S' : type1413 A B) (H : type549 A B) (f : A -> B) (x : A) : (term226 A B lt2 g S' H f z x) = (term228 A B lt2 z g S' H f x).
Proof. exact (TRANS (@lem329380 A B lt2 g S' H f z x) (@lem329381 A B lt2 z g S' H f x)). Qed.
Lemma lem329383 {A B : Type'} (lt2 : type1402 A) (z : A -> A) (g : A -> B) (S' : type1413 A B) (H : type549 A B) (f : A -> B) : (term229 A B lt2 g S' H f z) = (term230 A B lt2 z g S' H f).
Proof. exact (fun_ext (fun x : A => @lem329382 A B lt2 z g S' H f x)). Qed.
Lemma lem329384 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem329385 {A B : Type'} (lt2 : type1402 A) (z : A -> A) (g : A -> B) (S' : type1413 A B) (H : type549 A B) (f : A -> B) : (term231 A B lt2 g S' H f z) = (term232 A B lt2 z g S' H f).
Proof. exact (MK_COMB (@lem329384 A) (@lem329383 A B lt2 z g S' H f)). Qed.
Lemma lem329386 {A B : Type'} (lt2 : type1402 A) (g : A -> B) (S' : type1413 A B) (H : type549 A B) (f : A -> B) : (term233 A B lt2 g S' H f) = (term234 A B lt2 g S' H f).
Proof. exact (fun_ext (fun z : A -> A => @lem329385 A B lt2 z g S' H f)). Qed.
Lemma lem329387 {A : Type'} : (@ex (A -> A)) = (@ex (A -> A)).
Proof. exact (eq_refl (@ex (A -> A))). Qed.
Lemma lem329388 {A B : Type'} (lt2 : type1402 A) (g : A -> B) (S' : type1413 A B) (H : type549 A B) (f : A -> B) : (term216 A B lt2 g S' H f) = (term235 A B lt2 g S' H f).
Proof. exact (MK_COMB (@lem329387 A) (@lem329386 A B lt2 g S' H f)). Qed.
Lemma lem329389 {A B : Type'} (lt2 : type1402 A) (g : A -> B) (S' : type1413 A B) (H : type549 A B) (f : A -> B) : ((term215 A B lt2 g S' H f) = (term216 A B lt2 g S' H f)) = ((term212 A B lt2 g S' H f) = (term235 A B lt2 g S' H f)).
Proof. exact (MK_COMB (@lem329377 A B lt2 g S' H f) (@lem329388 A B lt2 g S' H f)). Qed.
Lemma lem329390 {A B : Type'} (lt2 : type1402 A) (g : A -> B) (S' : type1413 A B) (H : type549 A B) (f : A -> B) : (term212 A B lt2 g S' H f) = (term235 A B lt2 g S' H f).
Proof. exact (EQ_MP (@lem329389 A B lt2 g S' H f) (@lem329364 A B lt2 g S' H f)). Qed.
Lemma lem329391 {A B : Type'} (lt2 : type1402 A) (g : A -> B) (S' : type1413 A B) (H : type549 A B) (f : A -> B) : (term191 A B lt2 g S' H f) = (term235 A B lt2 g S' H f).
Proof. exact (TRANS (@lem329360 A B lt2 g S' H f) (@lem329390 A B lt2 g S' H f)). Qed.
Lemma lem329392 {A B : Type'} (lt2 : type1402 A) (S' : type1413 A B) (H : type549 A B) (f : A -> B) : (term192 A B lt2 S' H f) = (term236 A B lt2 S' H f).
Proof. exact (fun_ext (fun g : A -> B => @lem329391 A B lt2 g S' H f)). Qed.
Lemma lem329393 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem329394 {A B : Type'} (lt2 : type1402 A) (S' : type1413 A B) (H : type549 A B) (f : A -> B) : (term193 A B lt2 S' H f) = (term237 A B lt2 S' H f).
Proof. exact (MK_COMB (@lem329393 A B) (@lem329392 A B lt2 S' H f)). Qed.
Lemma lem329396 {A B : Type'} (P : type1413 A B) : (term146 A B P) = (term147 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem329397 {A B : Type'} (P : type513 A B) : (term238 A B P) = (term239 A B P).
Proof. exact (@lem329396 (A -> B) (A -> A) P). Qed.
Lemma lem329398 {A B : Type'} (lt2 : type1402 A) (S' : type1413 A B) (H : type549 A B) (f : A -> B) : (term240 A B lt2 S' H f) = (term241 A B lt2 S' H f).
Proof. exact (@lem329397 A B (term242 A B lt2 S' H f)). Qed.
Lemma lem329399 {A B : Type'} (lt2 : type1402 A) (g : A -> B) (S' : type1413 A B) (H : type549 A B) (f : A -> B) : (term243 A B lt2 S' H f g) = (term234 A B lt2 g S' H f).
Proof. exact (eq_refl (term243 A B lt2 S' H f g)). Qed.
Lemma lem329400 {A : Type'} (z : A -> A) : z = z.
Proof. exact (eq_refl z). Qed.
Lemma lem329401 {A B : Type'} (lt2 : type1402 A) (g : A -> B) (S' : type1413 A B) (H : type549 A B) (f : A -> B) (z : A -> A) : (term244 A B lt2 S' H f g z) = (term245 A B lt2 g S' H f z).
Proof. exact (MK_COMB (@lem329399 A B lt2 g S' H f) (@lem329400 A z)). Qed.
Lemma lem329402 {A B : Type'} (lt2 : type1402 A) (z : A -> A) (g : A -> B) (S' : type1413 A B) (H : type549 A B) (f : A -> B) : (term245 A B lt2 g S' H f z) = (term232 A B lt2 z g S' H f).
Proof. exact (eq_refl (term245 A B lt2 g S' H f z)). Qed.
Lemma lem329403 {A B : Type'} (lt2 : type1402 A) (z : A -> A) (g : A -> B) (S' : type1413 A B) (H : type549 A B) (f : A -> B) : (term244 A B lt2 S' H f g z) = (term232 A B lt2 z g S' H f).
Proof. exact (TRANS (@lem329401 A B lt2 g S' H f z) (@lem329402 A B lt2 z g S' H f)). Qed.
Lemma lem329404 {A B : Type'} (lt2 : type1402 A) (g : A -> B) (S' : type1413 A B) (H : type549 A B) (f : A -> B) : (term246 A B lt2 S' H f g) = (term234 A B lt2 g S' H f).
Proof. exact (fun_ext (fun z : A -> A => @lem329403 A B lt2 z g S' H f)). Qed.
Lemma lem329405 {A : Type'} : (@ex (A -> A)) = (@ex (A -> A)).
Proof. exact (eq_refl (@ex (A -> A))). Qed.
Lemma lem329406 {A B : Type'} (lt2 : type1402 A) (g : A -> B) (S' : type1413 A B) (H : type549 A B) (f : A -> B) : (term247 A B lt2 S' H f g) = (term235 A B lt2 g S' H f).
Proof. exact (MK_COMB (@lem329405 A) (@lem329404 A B lt2 g S' H f)). Qed.
Lemma lem329407 {A B : Type'} (lt2 : type1402 A) (S' : type1413 A B) (H : type549 A B) (f : A -> B) : (term248 A B lt2 S' H f) = (term236 A B lt2 S' H f).
Proof. exact (fun_ext (fun g : A -> B => @lem329406 A B lt2 g S' H f)). Qed.
Lemma lem329408 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem329409 {A B : Type'} (lt2 : type1402 A) (S' : type1413 A B) (H : type549 A B) (f : A -> B) : (term240 A B lt2 S' H f) = (term237 A B lt2 S' H f).
Proof. exact (MK_COMB (@lem329408 A B) (@lem329407 A B lt2 S' H f)). Qed.
Lemma lem329410 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem329411 {A B : Type'} (lt2 : type1402 A) (S' : type1413 A B) (H : type549 A B) (f : A -> B) : (term249 A B lt2 S' H f) = (term250 A B lt2 S' H f).
Proof. exact (MK_COMB (@lem329410) (@lem329409 A B lt2 S' H f)). Qed.
Lemma lem329412 {A B : Type'} (lt2 : type1402 A) (g : A -> B) (S' : type1413 A B) (H : type549 A B) (f : A -> B) : (term243 A B lt2 S' H f g) = (term234 A B lt2 g S' H f).
Proof. exact (eq_refl (term243 A B lt2 S' H f g)). Qed.
Lemma lem329413 {A B : Type'} (z : type548 A B) (g : A -> B) : (z g) = (z g).
Proof. exact (eq_refl (z g)). Qed.
Lemma lem329414 {A B : Type'} (lt2 : type1402 A) (S' : type1413 A B) (H : type549 A B) (f : A -> B) (z : type548 A B) (g : A -> B) : (term251 A B lt2 S' H f z g) = (term252 A B lt2 S' H f z g).
Proof. exact (MK_COMB (@lem329412 A B lt2 g S' H f) (@lem329413 A B z g)). Qed.
Lemma lem329415 {A B : Type'} (lt2 : type1402 A) (z : type548 A B) (g : A -> B) (S' : type1413 A B) (H : type549 A B) (f : A -> B) : (term252 A B lt2 S' H f z g) = (term253 A B lt2 z g S' H f).
Proof. exact (eq_refl (term252 A B lt2 S' H f z g)). Qed.
Lemma lem329416 {A B : Type'} (lt2 : type1402 A) (z : type548 A B) (g : A -> B) (S' : type1413 A B) (H : type549 A B) (f : A -> B) : (term251 A B lt2 S' H f z g) = (term253 A B lt2 z g S' H f).
Proof. exact (TRANS (@lem329414 A B lt2 S' H f z g) (@lem329415 A B lt2 z g S' H f)). Qed.
Lemma lem329417 {A B : Type'} (lt2 : type1402 A) (z : type548 A B) (S' : type1413 A B) (H : type549 A B) (f : A -> B) : (term254 A B lt2 S' H f z) = (term255 A B lt2 z S' H f).
Proof. exact (fun_ext (fun g : A -> B => @lem329416 A B lt2 z g S' H f)). Qed.
Lemma lem329418 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem329419 {A B : Type'} (lt2 : type1402 A) (z : type548 A B) (S' : type1413 A B) (H : type549 A B) (f : A -> B) : (term256 A B lt2 S' H f z) = (term257 A B lt2 z S' H f).
Proof. exact (MK_COMB (@lem329418 A B) (@lem329417 A B lt2 z S' H f)). Qed.
Lemma lem329420 {A B : Type'} (lt2 : type1402 A) (S' : type1413 A B) (H : type549 A B) (f : A -> B) : (term258 A B lt2 S' H f) = (term259 A B lt2 S' H f).
Proof. exact (fun_ext (fun z : type548 A B => @lem329419 A B lt2 z S' H f)). Qed.
Lemma lem329421 {A B : Type'} : (@ex ((A -> B) -> A -> A)) = (@ex ((A -> B) -> A -> A)).
Proof. exact (eq_refl (@ex ((A -> B) -> A -> A))). Qed.
Lemma lem329422 {A B : Type'} (lt2 : type1402 A) (S' : type1413 A B) (H : type549 A B) (f : A -> B) : (term241 A B lt2 S' H f) = (term260 A B lt2 S' H f).
Proof. exact (MK_COMB (@lem329421 A B) (@lem329420 A B lt2 S' H f)). Qed.
Lemma lem329423 {A B : Type'} (lt2 : type1402 A) (S' : type1413 A B) (H : type549 A B) (f : A -> B) : ((term240 A B lt2 S' H f) = (term241 A B lt2 S' H f)) = ((term237 A B lt2 S' H f) = (term260 A B lt2 S' H f)).
Proof. exact (MK_COMB (@lem329411 A B lt2 S' H f) (@lem329422 A B lt2 S' H f)). Qed.
Lemma lem329424 {A B : Type'} (lt2 : type1402 A) (S' : type1413 A B) (H : type549 A B) (f : A -> B) : (term237 A B lt2 S' H f) = (term260 A B lt2 S' H f).
Proof. exact (EQ_MP (@lem329423 A B lt2 S' H f) (@lem329398 A B lt2 S' H f)). Qed.
Lemma lem329425 {A B : Type'} (lt2 : type1402 A) (S' : type1413 A B) (H : type549 A B) (f : A -> B) : (term193 A B lt2 S' H f) = (term260 A B lt2 S' H f).
Proof. exact (TRANS (@lem329394 A B lt2 S' H f) (@lem329424 A B lt2 S' H f)). Qed.
Lemma lem329426 {A B : Type'} (lt2 : type1402 A) (S' : type1413 A B) (H : type549 A B) : (term194 A B lt2 S' H) = (term261 A B lt2 S' H).
Proof. exact (fun_ext (fun f : A -> B => @lem329425 A B lt2 S' H f)). Qed.
Lemma lem329427 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem329428 {A B : Type'} (lt2 : type1402 A) (S' : type1413 A B) (H : type549 A B) : (term195 A B lt2 S' H) = (term262 A B lt2 S' H).
Proof. exact (MK_COMB (@lem329427 A B) (@lem329426 A B lt2 S' H)). Qed.
Lemma lem329430 {A B : Type'} (P : type1413 A B) : (term146 A B P) = (term147 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem329431 {A B : Type'} (P : type493 A B) : (term263 A B P) = (term264 A B P).
Proof. exact (@lem329430 (A -> B) (type548 A B) P). Qed.
Lemma lem329432 {A B : Type'} (lt2 : type1402 A) (S' : type1413 A B) (H : type549 A B) : (term265 A B lt2 S' H) = (term266 A B lt2 S' H).
Proof. exact (@lem329431 A B (term267 A B lt2 S' H)). Qed.
Lemma lem329433 {A B : Type'} (lt2 : type1402 A) (S' : type1413 A B) (H : type549 A B) (f : A -> B) : (term268 A B lt2 S' H f) = (term259 A B lt2 S' H f).
Proof. exact (eq_refl (term268 A B lt2 S' H f)). Qed.
Lemma lem329434 {A B : Type'} (z : type548 A B) : z = z.
Proof. exact (eq_refl z). Qed.
Lemma lem329435 {A B : Type'} (lt2 : type1402 A) (S' : type1413 A B) (H : type549 A B) (f : A -> B) (z : type548 A B) : (term269 A B lt2 S' H f z) = (term270 A B lt2 S' H f z).
Proof. exact (MK_COMB (@lem329433 A B lt2 S' H f) (@lem329434 A B z)). Qed.
Lemma lem329436 {A B : Type'} (lt2 : type1402 A) (z : type548 A B) (S' : type1413 A B) (H : type549 A B) (f : A -> B) : (term270 A B lt2 S' H f z) = (term257 A B lt2 z S' H f).
Proof. exact (eq_refl (term270 A B lt2 S' H f z)). Qed.
Lemma lem329437 {A B : Type'} (lt2 : type1402 A) (z : type548 A B) (S' : type1413 A B) (H : type549 A B) (f : A -> B) : (term269 A B lt2 S' H f z) = (term257 A B lt2 z S' H f).
Proof. exact (TRANS (@lem329435 A B lt2 S' H f z) (@lem329436 A B lt2 z S' H f)). Qed.
Lemma lem329438 {A B : Type'} (lt2 : type1402 A) (S' : type1413 A B) (H : type549 A B) (f : A -> B) : (term271 A B lt2 S' H f) = (term259 A B lt2 S' H f).
Proof. exact (fun_ext (fun z : type548 A B => @lem329437 A B lt2 z S' H f)). Qed.
Lemma lem329439 {A B : Type'} : (@ex ((A -> B) -> A -> A)) = (@ex ((A -> B) -> A -> A)).
Proof. exact (eq_refl (@ex ((A -> B) -> A -> A))). Qed.
Lemma lem329440 {A B : Type'} (lt2 : type1402 A) (S' : type1413 A B) (H : type549 A B) (f : A -> B) : (term272 A B lt2 S' H f) = (term260 A B lt2 S' H f).
Proof. exact (MK_COMB (@lem329439 A B) (@lem329438 A B lt2 S' H f)). Qed.
Lemma lem329441 {A B : Type'} (lt2 : type1402 A) (S' : type1413 A B) (H : type549 A B) : (term273 A B lt2 S' H) = (term261 A B lt2 S' H).
Proof. exact (fun_ext (fun f : A -> B => @lem329440 A B lt2 S' H f)). Qed.
Lemma lem329442 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem329443 {A B : Type'} (lt2 : type1402 A) (S' : type1413 A B) (H : type549 A B) : (term265 A B lt2 S' H) = (term262 A B lt2 S' H).
Proof. exact (MK_COMB (@lem329442 A B) (@lem329441 A B lt2 S' H)). Qed.
Lemma lem329444 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem329445 {A B : Type'} (lt2 : type1402 A) (S' : type1413 A B) (H : type549 A B) : (term274 A B lt2 S' H) = (term275 A B lt2 S' H).
Proof. exact (MK_COMB (@lem329444) (@lem329443 A B lt2 S' H)). Qed.
Lemma lem329446 {A B : Type'} (lt2 : type1402 A) (S' : type1413 A B) (H : type549 A B) (f : A -> B) : (term268 A B lt2 S' H f) = (term259 A B lt2 S' H f).
Proof. exact (eq_refl (term268 A B lt2 S' H f)). Qed.
Lemma lem329447 {A B : Type'} (z : type515 A B) (f : A -> B) : (z f) = (z f).
Proof. exact (eq_refl (z f)). Qed.
Lemma lem329448 {A B : Type'} (lt2 : type1402 A) (S' : type1413 A B) (H : type549 A B) (z : type515 A B) (f : A -> B) : (term276 A B lt2 S' H z f) = (term277 A B lt2 S' H z f).
Proof. exact (MK_COMB (@lem329446 A B lt2 S' H f) (@lem329447 A B z f)). Qed.
Lemma lem329449 {A B : Type'} (lt2 : type1402 A) (z : type515 A B) (S' : type1413 A B) (H : type549 A B) (f : A -> B) : (term277 A B lt2 S' H z f) = (term278 A B lt2 z S' H f).
Proof. exact (eq_refl (term277 A B lt2 S' H z f)). Qed.
Lemma lem329450 {A B : Type'} (lt2 : type1402 A) (z : type515 A B) (S' : type1413 A B) (H : type549 A B) (f : A -> B) : (term276 A B lt2 S' H z f) = (term278 A B lt2 z S' H f).
Proof. exact (TRANS (@lem329448 A B lt2 S' H z f) (@lem329449 A B lt2 z S' H f)). Qed.
Lemma lem329451 {A B : Type'} (lt2 : type1402 A) (z : type515 A B) (S' : type1413 A B) (H : type549 A B) : (term279 A B lt2 S' H z) = (term280 A B lt2 z S' H).
Proof. exact (fun_ext (fun f : A -> B => @lem329450 A B lt2 z S' H f)). Qed.
Lemma lem329452 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem329453 {A B : Type'} (lt2 : type1402 A) (z : type515 A B) (S' : type1413 A B) (H : type549 A B) : (term281 A B lt2 S' H z) = (term282 A B lt2 z S' H).
Proof. exact (MK_COMB (@lem329452 A B) (@lem329451 A B lt2 z S' H)). Qed.
Lemma lem329454 {A B : Type'} (lt2 : type1402 A) (S' : type1413 A B) (H : type549 A B) : (term283 A B lt2 S' H) = (term284 A B lt2 S' H).
Proof. exact (fun_ext (fun z : type515 A B => @lem329453 A B lt2 z S' H)). Qed.
Lemma lem329455 {A B : Type'} : (@ex ((A -> B) -> (A -> B) -> A -> A)) = (@ex ((A -> B) -> (A -> B) -> A -> A)).
Proof. exact (eq_refl (@ex ((A -> B) -> (A -> B) -> A -> A))). Qed.
Lemma lem329456 {A B : Type'} (lt2 : type1402 A) (S' : type1413 A B) (H : type549 A B) : (term266 A B lt2 S' H) = (term285 A B lt2 S' H).
Proof. exact (MK_COMB (@lem329455 A B) (@lem329454 A B lt2 S' H)). Qed.
Lemma lem329457 {A B : Type'} (lt2 : type1402 A) (S' : type1413 A B) (H : type549 A B) : ((term265 A B lt2 S' H) = (term266 A B lt2 S' H)) = ((term262 A B lt2 S' H) = (term285 A B lt2 S' H)).
Proof. exact (MK_COMB (@lem329445 A B lt2 S' H) (@lem329456 A B lt2 S' H)). Qed.
Lemma lem329458 {A B : Type'} (lt2 : type1402 A) (S' : type1413 A B) (H : type549 A B) : (term262 A B lt2 S' H) = (term285 A B lt2 S' H).
Proof. exact (EQ_MP (@lem329457 A B lt2 S' H) (@lem329432 A B lt2 S' H)). Qed.
Lemma lem329460 {A B : Type'} (lt2 : type1402 A) (S' : type1413 A B) (H : type549 A B) : (term195 A B lt2 S' H) = (term285 A B lt2 S' H).
Proof. exact (TRANS (@lem329428 A B lt2 S' H) (@lem329458 A B lt2 S' H)). Qed.
Lemma lem329461 {A B : Type'} (lt2 : type1402 A) (S' : type1413 A B) (H : type549 A B) : (term1 A B lt2 S' H) = (term285 A B lt2 S' H).
Proof. exact (TRANS (@lem329228 A B lt2 S' H) (@lem329460 A B lt2 S' H)). Qed.
Lemma lem329462 {A B : Type'} (lt2 : type1402 A) (S' : type1413 A B) (H : type549 A B) (h1 : term1 A B lt2 S' H) : term285 A B lt2 S' H.
Proof. exact (EQ_MP (@lem329461 A B lt2 S' H) (@lem329177 A B lt2 S' H h1)). Qed.
Lemma lem329469 {A B : Type'} (lt2 : type1402 A) (x : A) (R : type1413 A B) (f : A -> B) (z : A) : (term286 A B lt2 x R f z) = (term287 A B lt2 x R f z).
Proof. exact (@lem17362 (lt2 z x) (term173 A B R f z)). Qed.
Lemma lem329470 {A : Type'} (P : A -> Prop) : (term112 A P) = (term113 A P).
Proof. exact (@lem18392 A P). Qed.
Lemma lem329471 {A B : Type'} (lt2 : type1402 A) (x : A) (R : type1413 A B) (f : A -> B) : (term288 A B lt2 x R f) = (term289 A B lt2 x R f).
Proof. exact (@lem329470 A (term57 A B lt2 x R f)). Qed.
Lemma lem329472 {A B : Type'} (lt2 : type1402 A) (x : A) (R : type1413 A B) (f : A -> B) (z : A) : (term290 A B lt2 x R f z) = (term56 A B lt2 x R f z).
Proof. exact (eq_refl (term290 A B lt2 x R f z)). Qed.
Lemma lem329473 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem329474 {A B : Type'} (lt2 : type1402 A) (x : A) (R : type1413 A B) (f : A -> B) (z : A) : (term291 A B lt2 x R f z) = (term286 A B lt2 x R f z).
Proof. exact (MK_COMB (@lem329473) (@lem329472 A B lt2 x R f z)). Qed.
Lemma lem329475 {A B : Type'} (lt2 : type1402 A) (x : A) (R : type1413 A B) (f : A -> B) (z : A) : (term291 A B lt2 x R f z) = (term287 A B lt2 x R f z).
Proof. exact (TRANS (@lem329474 A B lt2 x R f z) (@lem329469 A B lt2 x R f z)). Qed.
Lemma lem329476 {A B : Type'} (lt2 : type1402 A) (x : A) (R : type1413 A B) (f : A -> B) : (term292 A B lt2 x R f) = (term293 A B lt2 x R f).
Proof. exact (fun_ext (fun z : A => @lem329475 A B lt2 x R f z)). Qed.
Lemma lem329477 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem329478 {A B : Type'} (lt2 : type1402 A) (x : A) (R : type1413 A B) (f : A -> B) : (term289 A B lt2 x R f) = (term294 A B lt2 x R f).
Proof. exact (MK_COMB (@lem329477 A) (@lem329476 A B lt2 x R f)). Qed.
Lemma lem329479 {A B : Type'} (lt2 : type1402 A) (x : A) (R : type1413 A B) (f : A -> B) : (term288 A B lt2 x R f) = (term294 A B lt2 x R f).
Proof. exact (TRANS (@lem329471 A B lt2 x R f) (@lem329478 A B lt2 x R f)). Qed.
Lemma lem329480 {A B : Type'} (R : type1413 A B) (H : type549 A B) (f : A -> B) (x : A) : (term72 A B R H f x) = (term72 A B R H f x).
Proof. exact (eq_refl (term72 A B R H f x)). Qed.
Lemma lem329481 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem329482 {A B : Type'} (lt2 : type1402 A) (x : A) (R : type1413 A B) (f : A -> B) : (term295 A B lt2 x R f) = (term296 A B lt2 x R f).
Proof. exact (MK_COMB (@lem329481) (@lem329479 A B lt2 x R f)). Qed.
Lemma lem329483 {A B : Type'} (lt2 : type1402 A) (R : type1413 A B) (H : type549 A B) (f : A -> B) (x : A) : (term297 A B lt2 R H f x) = (term298 A B lt2 R H f x).
Proof. exact (MK_COMB (@lem329482 A B lt2 x R f) (@lem329480 A B R H f x)). Qed.
Lemma lem329484 {A B : Type'} (lt2 : type1402 A) (R : type1413 A B) (H : type549 A B) (f : A -> B) (x : A) : (term74 A B lt2 R H f x) = (term297 A B lt2 R H f x).
Proof. exact (@lem17265 (term58 A B lt2 x R f) (term72 A B R H f x)). Qed.
Lemma lem329485 {A B : Type'} (lt2 : type1402 A) (R : type1413 A B) (H : type549 A B) (f : A -> B) (x : A) : (term74 A B lt2 R H f x) = (term298 A B lt2 R H f x).
Proof. exact (TRANS (@lem329484 A B lt2 R H f x) (@lem329483 A B lt2 R H f x)). Qed.
Lemma lem329486 {A B : Type'} (lt2 : type1402 A) (R : type1413 A B) (H : type549 A B) (f : A -> B) : (term75 A B lt2 R H f) = (term299 A B lt2 R H f).
Proof. exact (fun_ext (fun x : A => @lem329485 A B lt2 R H f x)). Qed.
Lemma lem329487 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem329488 {A B : Type'} (lt2 : type1402 A) (R : type1413 A B) (H : type549 A B) (f : A -> B) : (term76 A B lt2 R H f) = (term300 A B lt2 R H f).
Proof. exact (MK_COMB (@lem329487 A) (@lem329486 A B lt2 R H f)). Qed.
Lemma lem329489 {A B : Type'} (lt2 : type1402 A) (R : type1413 A B) (H : type549 A B) : (term77 A B lt2 R H) = (term301 A B lt2 R H).
Proof. exact (fun_ext (fun f : A -> B => @lem329488 A B lt2 R H f)). Qed.
Lemma lem329490 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem329491 {A B : Type'} (lt2 : type1402 A) (R : type1413 A B) (H : type549 A B) : (term3 A B lt2 R H) = (term302 A B lt2 R H).
Proof. exact (MK_COMB (@lem329490 A B) (@lem329489 A B lt2 R H)). Qed.
Lemma lem329594 {A : Type'} (P : A -> Prop) (Q : Prop) : (term127 A P Q) = (term128 A P Q).
Proof. exact (EQ_MP (@lem18905 A P Q) (@lem18904 A P Q)). Qed.
Lemma lem329595 {A : Type'} (P : A -> Prop) (Q : Prop) : (term127 A P Q) = (term128 A P Q).
Proof. exact (@lem329594 A P Q). Qed.
Lemma lem329596 {A B : Type'} (lt2 : type1402 A) (R : type1413 A B) (H : type549 A B) (f : A -> B) (x : A) : (term303 A B lt2 R H f x) = (term304 A B lt2 R H f x).
Proof. exact (@lem329595 A (term293 A B lt2 x R f) (term72 A B R H f x)). Qed.
Lemma lem329597 {A B : Type'} (lt2 : type1402 A) (x : A) (R : type1413 A B) (f : A -> B) (z : A) : (term305 A B lt2 x R f z) = (term287 A B lt2 x R f z).
Proof. exact (eq_refl (term305 A B lt2 x R f z)). Qed.
Lemma lem329598 {A B : Type'} (lt2 : type1402 A) (x : A) (R : type1413 A B) (f : A -> B) : (term306 A B lt2 x R f) = (term293 A B lt2 x R f).
Proof. exact (fun_ext (fun z : A => @lem329597 A B lt2 x R f z)). Qed.
Lemma lem329599 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem329600 {A B : Type'} (lt2 : type1402 A) (x : A) (R : type1413 A B) (f : A -> B) : (term307 A B lt2 x R f) = (term294 A B lt2 x R f).
Proof. exact (MK_COMB (@lem329599 A) (@lem329598 A B lt2 x R f)). Qed.
Lemma lem329601 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem329602 {A B : Type'} (lt2 : type1402 A) (x : A) (R : type1413 A B) (f : A -> B) : (term308 A B lt2 x R f) = (term296 A B lt2 x R f).
Proof. exact (MK_COMB (@lem329601) (@lem329600 A B lt2 x R f)). Qed.
Lemma lem329603 {A B : Type'} (R : type1413 A B) (H : type549 A B) (f : A -> B) (x : A) : (term72 A B R H f x) = (term72 A B R H f x).
Proof. exact (eq_refl (term72 A B R H f x)). Qed.
Lemma lem329604 {A B : Type'} (lt2 : type1402 A) (R : type1413 A B) (H : type549 A B) (f : A -> B) (x : A) : (term303 A B lt2 R H f x) = (term298 A B lt2 R H f x).
Proof. exact (MK_COMB (@lem329602 A B lt2 x R f) (@lem329603 A B R H f x)). Qed.
Lemma lem329605 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem329606 {A B : Type'} (lt2 : type1402 A) (R : type1413 A B) (H : type549 A B) (f : A -> B) (x : A) : (term309 A B lt2 R H f x) = (term310 A B lt2 R H f x).
Proof. exact (MK_COMB (@lem329605) (@lem329604 A B lt2 R H f x)). Qed.
Lemma lem329607 {A B : Type'} (lt2 : type1402 A) (x : A) (R : type1413 A B) (f : A -> B) (z : A) : (term305 A B lt2 x R f z) = (term287 A B lt2 x R f z).
Proof. exact (eq_refl (term305 A B lt2 x R f z)). Qed.
Lemma lem329608 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem329609 {A B : Type'} (lt2 : type1402 A) (x : A) (R : type1413 A B) (f : A -> B) (z : A) : (term311 A B lt2 x R f z) = (term312 A B lt2 x R f z).
Proof. exact (MK_COMB (@lem329608) (@lem329607 A B lt2 x R f z)). Qed.
Lemma lem329610 {A B : Type'} (R : type1413 A B) (H : type549 A B) (f : A -> B) (x : A) : (term72 A B R H f x) = (term72 A B R H f x).
Proof. exact (eq_refl (term72 A B R H f x)). Qed.
Lemma lem329611 {A B : Type'} (lt2 : type1402 A) (z : A) (R : type1413 A B) (H : type549 A B) (f : A -> B) (x : A) : (term313 A B lt2 z R H f x) = (term314 A B lt2 z R H f x).
Proof. exact (MK_COMB (@lem329609 A B lt2 x R f z) (@lem329610 A B R H f x)). Qed.
Lemma lem329612 {A B : Type'} (lt2 : type1402 A) (R : type1413 A B) (H : type549 A B) (f : A -> B) (x : A) : (term315 A B lt2 R H f x) = (term316 A B lt2 R H f x).
Proof. exact (fun_ext (fun z : A => @lem329611 A B lt2 z R H f x)). Qed.
Lemma lem329613 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem329614 {A B : Type'} (lt2 : type1402 A) (R : type1413 A B) (H : type549 A B) (f : A -> B) (x : A) : (term304 A B lt2 R H f x) = (term317 A B lt2 R H f x).
Proof. exact (MK_COMB (@lem329613 A) (@lem329612 A B lt2 R H f x)). Qed.
Lemma lem329615 {A B : Type'} (lt2 : type1402 A) (R : type1413 A B) (H : type549 A B) (f : A -> B) (x : A) : ((term303 A B lt2 R H f x) = (term304 A B lt2 R H f x)) = ((term298 A B lt2 R H f x) = (term317 A B lt2 R H f x)).
Proof. exact (MK_COMB (@lem329606 A B lt2 R H f x) (@lem329614 A B lt2 R H f x)). Qed.
Lemma lem329616 {A B : Type'} (lt2 : type1402 A) (R : type1413 A B) (H : type549 A B) (f : A -> B) (x : A) : (term298 A B lt2 R H f x) = (term317 A B lt2 R H f x).
Proof. exact (EQ_MP (@lem329615 A B lt2 R H f x) (@lem329596 A B lt2 R H f x)). Qed.
Lemma lem329617 {A B : Type'} (lt2 : type1402 A) (R : type1413 A B) (H : type549 A B) (f : A -> B) : (term299 A B lt2 R H f) = (term318 A B lt2 R H f).
Proof. exact (fun_ext (fun x : A => @lem329616 A B lt2 R H f x)). Qed.
Lemma lem329618 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem329619 {A B : Type'} (lt2 : type1402 A) (R : type1413 A B) (H : type549 A B) (f : A -> B) : (term300 A B lt2 R H f) = (term319 A B lt2 R H f).
Proof. exact (MK_COMB (@lem329618 A) (@lem329617 A B lt2 R H f)). Qed.
Lemma lem329621 {A B : Type'} (P : type1413 A B) : (term146 A B P) = (term147 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem329622 {A : Type'} (P : type1402 A) : (term213 A P) = (term214 A P).
Proof. exact (@lem329621 A A P). Qed.
Lemma lem329623 {A B : Type'} (lt2 : type1402 A) (R : type1413 A B) (H : type549 A B) (f : A -> B) : (term320 A B lt2 R H f) = (term321 A B lt2 R H f).
Proof. exact (@lem329622 A (term322 A B lt2 R H f)). Qed.
Lemma lem329624 {A B : Type'} (lt2 : type1402 A) (R : type1413 A B) (H : type549 A B) (f : A -> B) (x : A) : (term323 A B lt2 R H f x) = (term316 A B lt2 R H f x).
Proof. exact (eq_refl (term323 A B lt2 R H f x)). Qed.
Lemma lem329625 {A : Type'} (z : A) : z = z.
Proof. exact (eq_refl z). Qed.
Lemma lem329626 {A B : Type'} (lt2 : type1402 A) (R : type1413 A B) (H : type549 A B) (f : A -> B) (x : A) (z : A) : (term324 A B lt2 R H f x z) = (term325 A B lt2 R H f x z).
Proof. exact (MK_COMB (@lem329624 A B lt2 R H f x) (@lem329625 A z)). Qed.
Lemma lem329627 {A B : Type'} (lt2 : type1402 A) (z : A) (R : type1413 A B) (H : type549 A B) (f : A -> B) (x : A) : (term325 A B lt2 R H f x z) = (term314 A B lt2 z R H f x).
Proof. exact (eq_refl (term325 A B lt2 R H f x z)). Qed.
Lemma lem329628 {A B : Type'} (lt2 : type1402 A) (z : A) (R : type1413 A B) (H : type549 A B) (f : A -> B) (x : A) : (term324 A B lt2 R H f x z) = (term314 A B lt2 z R H f x).
Proof. exact (TRANS (@lem329626 A B lt2 R H f x z) (@lem329627 A B lt2 z R H f x)). Qed.
Lemma lem329629 {A B : Type'} (lt2 : type1402 A) (R : type1413 A B) (H : type549 A B) (f : A -> B) (x : A) : (term326 A B lt2 R H f x) = (term316 A B lt2 R H f x).
Proof. exact (fun_ext (fun z : A => @lem329628 A B lt2 z R H f x)). Qed.
Lemma lem329630 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem329631 {A B : Type'} (lt2 : type1402 A) (R : type1413 A B) (H : type549 A B) (f : A -> B) (x : A) : (term327 A B lt2 R H f x) = (term317 A B lt2 R H f x).
Proof. exact (MK_COMB (@lem329630 A) (@lem329629 A B lt2 R H f x)). Qed.
Lemma lem329632 {A B : Type'} (lt2 : type1402 A) (R : type1413 A B) (H : type549 A B) (f : A -> B) : (term328 A B lt2 R H f) = (term318 A B lt2 R H f).
Proof. exact (fun_ext (fun x : A => @lem329631 A B lt2 R H f x)). Qed.
Lemma lem329633 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem329634 {A B : Type'} (lt2 : type1402 A) (R : type1413 A B) (H : type549 A B) (f : A -> B) : (term320 A B lt2 R H f) = (term319 A B lt2 R H f).
Proof. exact (MK_COMB (@lem329633 A) (@lem329632 A B lt2 R H f)). Qed.
Lemma lem329635 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem329636 {A B : Type'} (lt2 : type1402 A) (R : type1413 A B) (H : type549 A B) (f : A -> B) : (term329 A B lt2 R H f) = (term330 A B lt2 R H f).
Proof. exact (MK_COMB (@lem329635) (@lem329634 A B lt2 R H f)). Qed.
Lemma lem329637 {A B : Type'} (lt2 : type1402 A) (R : type1413 A B) (H : type549 A B) (f : A -> B) (x : A) : (term323 A B lt2 R H f x) = (term316 A B lt2 R H f x).
Proof. exact (eq_refl (term323 A B lt2 R H f x)). Qed.
Lemma lem329638 {A : Type'} (z : A -> A) (x : A) : (z x) = (z x).
Proof. exact (eq_refl (z x)). Qed.
Lemma lem329639 {A B : Type'} (lt2 : type1402 A) (R : type1413 A B) (H : type549 A B) (f : A -> B) (z : A -> A) (x : A) : (term331 A B lt2 R H f z x) = (term332 A B lt2 R H f z x).
Proof. exact (MK_COMB (@lem329637 A B lt2 R H f x) (@lem329638 A z x)). Qed.
Lemma lem329640 {A B : Type'} (lt2 : type1402 A) (z : A -> A) (R : type1413 A B) (H : type549 A B) (f : A -> B) (x : A) : (term332 A B lt2 R H f z x) = (term333 A B lt2 z R H f x).
Proof. exact (eq_refl (term332 A B lt2 R H f z x)). Qed.
Lemma lem329641 {A B : Type'} (lt2 : type1402 A) (z : A -> A) (R : type1413 A B) (H : type549 A B) (f : A -> B) (x : A) : (term331 A B lt2 R H f z x) = (term333 A B lt2 z R H f x).
Proof. exact (TRANS (@lem329639 A B lt2 R H f z x) (@lem329640 A B lt2 z R H f x)). Qed.
Lemma lem329642 {A B : Type'} (lt2 : type1402 A) (z : A -> A) (R : type1413 A B) (H : type549 A B) (f : A -> B) : (term334 A B lt2 R H f z) = (term335 A B lt2 z R H f).
Proof. exact (fun_ext (fun x : A => @lem329641 A B lt2 z R H f x)). Qed.
Lemma lem329643 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem329644 {A B : Type'} (lt2 : type1402 A) (z : A -> A) (R : type1413 A B) (H : type549 A B) (f : A -> B) : (term336 A B lt2 R H f z) = (term337 A B lt2 z R H f).
Proof. exact (MK_COMB (@lem329643 A) (@lem329642 A B lt2 z R H f)). Qed.
Lemma lem329645 {A B : Type'} (lt2 : type1402 A) (R : type1413 A B) (H : type549 A B) (f : A -> B) : (term338 A B lt2 R H f) = (term339 A B lt2 R H f).
Proof. exact (fun_ext (fun z : A -> A => @lem329644 A B lt2 z R H f)). Qed.
Lemma lem329646 {A : Type'} : (@ex (A -> A)) = (@ex (A -> A)).
Proof. exact (eq_refl (@ex (A -> A))). Qed.
Lemma lem329647 {A B : Type'} (lt2 : type1402 A) (R : type1413 A B) (H : type549 A B) (f : A -> B) : (term321 A B lt2 R H f) = (term340 A B lt2 R H f).
Proof. exact (MK_COMB (@lem329646 A) (@lem329645 A B lt2 R H f)). Qed.
Lemma lem329648 {A B : Type'} (lt2 : type1402 A) (R : type1413 A B) (H : type549 A B) (f : A -> B) : ((term320 A B lt2 R H f) = (term321 A B lt2 R H f)) = ((term319 A B lt2 R H f) = (term340 A B lt2 R H f)).
Proof. exact (MK_COMB (@lem329636 A B lt2 R H f) (@lem329647 A B lt2 R H f)). Qed.
Lemma lem329649 {A B : Type'} (lt2 : type1402 A) (R : type1413 A B) (H : type549 A B) (f : A -> B) : (term319 A B lt2 R H f) = (term340 A B lt2 R H f).
Proof. exact (EQ_MP (@lem329648 A B lt2 R H f) (@lem329623 A B lt2 R H f)). Qed.
Lemma lem329650 {A B : Type'} (lt2 : type1402 A) (R : type1413 A B) (H : type549 A B) (f : A -> B) : (term300 A B lt2 R H f) = (term340 A B lt2 R H f).
Proof. exact (TRANS (@lem329619 A B lt2 R H f) (@lem329649 A B lt2 R H f)). Qed.
Lemma lem329651 {A B : Type'} (lt2 : type1402 A) (R : type1413 A B) (H : type549 A B) : (term301 A B lt2 R H) = (term341 A B lt2 R H).
Proof. exact (fun_ext (fun f : A -> B => @lem329650 A B lt2 R H f)). Qed.
Lemma lem329652 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem329653 {A B : Type'} (lt2 : type1402 A) (R : type1413 A B) (H : type549 A B) : (term302 A B lt2 R H) = (term342 A B lt2 R H).
Proof. exact (MK_COMB (@lem329652 A B) (@lem329651 A B lt2 R H)). Qed.
Lemma lem329655 {A B : Type'} (P : type1413 A B) : (term146 A B P) = (term147 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem329656 {A B : Type'} (P : type513 A B) : (term238 A B P) = (term239 A B P).
Proof. exact (@lem329655 (A -> B) (A -> A) P). Qed.
Lemma lem329657 {A B : Type'} (lt2 : type1402 A) (R : type1413 A B) (H : type549 A B) : (term343 A B lt2 R H) = (term344 A B lt2 R H).
Proof. exact (@lem329656 A B (term345 A B lt2 R H)). Qed.
Lemma lem329658 {A B : Type'} (lt2 : type1402 A) (R : type1413 A B) (H : type549 A B) (f : A -> B) : (term346 A B lt2 R H f) = (term339 A B lt2 R H f).
Proof. exact (eq_refl (term346 A B lt2 R H f)). Qed.
Lemma lem329659 {A : Type'} (z : A -> A) : z = z.
Proof. exact (eq_refl z). Qed.
Lemma lem329660 {A B : Type'} (lt2 : type1402 A) (R : type1413 A B) (H : type549 A B) (f : A -> B) (z : A -> A) : (term347 A B lt2 R H f z) = (term348 A B lt2 R H f z).
Proof. exact (MK_COMB (@lem329658 A B lt2 R H f) (@lem329659 A z)). Qed.
Lemma lem329661 {A B : Type'} (lt2 : type1402 A) (z : A -> A) (R : type1413 A B) (H : type549 A B) (f : A -> B) : (term348 A B lt2 R H f z) = (term337 A B lt2 z R H f).
Proof. exact (eq_refl (term348 A B lt2 R H f z)). Qed.
Lemma lem329662 {A B : Type'} (lt2 : type1402 A) (z : A -> A) (R : type1413 A B) (H : type549 A B) (f : A -> B) : (term347 A B lt2 R H f z) = (term337 A B lt2 z R H f).
Proof. exact (TRANS (@lem329660 A B lt2 R H f z) (@lem329661 A B lt2 z R H f)). Qed.
Lemma lem329663 {A B : Type'} (lt2 : type1402 A) (R : type1413 A B) (H : type549 A B) (f : A -> B) : (term349 A B lt2 R H f) = (term339 A B lt2 R H f).
Proof. exact (fun_ext (fun z : A -> A => @lem329662 A B lt2 z R H f)). Qed.
Lemma lem329664 {A : Type'} : (@ex (A -> A)) = (@ex (A -> A)).
Proof. exact (eq_refl (@ex (A -> A))). Qed.
Lemma lem329665 {A B : Type'} (lt2 : type1402 A) (R : type1413 A B) (H : type549 A B) (f : A -> B) : (term350 A B lt2 R H f) = (term340 A B lt2 R H f).
Proof. exact (MK_COMB (@lem329664 A) (@lem329663 A B lt2 R H f)). Qed.
Lemma lem329666 {A B : Type'} (lt2 : type1402 A) (R : type1413 A B) (H : type549 A B) : (term351 A B lt2 R H) = (term341 A B lt2 R H).
Proof. exact (fun_ext (fun f : A -> B => @lem329665 A B lt2 R H f)). Qed.
Lemma lem329667 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem329668 {A B : Type'} (lt2 : type1402 A) (R : type1413 A B) (H : type549 A B) : (term343 A B lt2 R H) = (term342 A B lt2 R H).
Proof. exact (MK_COMB (@lem329667 A B) (@lem329666 A B lt2 R H)). Qed.
Lemma lem329669 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem329670 {A B : Type'} (lt2 : type1402 A) (R : type1413 A B) (H : type549 A B) : (term352 A B lt2 R H) = (term353 A B lt2 R H).
Proof. exact (MK_COMB (@lem329669) (@lem329668 A B lt2 R H)). Qed.
Lemma lem329671 {A B : Type'} (lt2 : type1402 A) (R : type1413 A B) (H : type549 A B) (f : A -> B) : (term346 A B lt2 R H f) = (term339 A B lt2 R H f).
Proof. exact (eq_refl (term346 A B lt2 R H f)). Qed.
Lemma lem329672 {A B : Type'} (z : type548 A B) (f : A -> B) : (z f) = (z f).
Proof. exact (eq_refl (z f)). Qed.
Lemma lem329673 {A B : Type'} (lt2 : type1402 A) (R : type1413 A B) (H : type549 A B) (z : type548 A B) (f : A -> B) : (term354 A B lt2 R H z f) = (term355 A B lt2 R H z f).
Proof. exact (MK_COMB (@lem329671 A B lt2 R H f) (@lem329672 A B z f)). Qed.
Lemma lem329674 {A B : Type'} (lt2 : type1402 A) (z : type548 A B) (R : type1413 A B) (H : type549 A B) (f : A -> B) : (term355 A B lt2 R H z f) = (term356 A B lt2 z R H f).
Proof. exact (eq_refl (term355 A B lt2 R H z f)). Qed.
Lemma lem329675 {A B : Type'} (lt2 : type1402 A) (z : type548 A B) (R : type1413 A B) (H : type549 A B) (f : A -> B) : (term354 A B lt2 R H z f) = (term356 A B lt2 z R H f).
Proof. exact (TRANS (@lem329673 A B lt2 R H z f) (@lem329674 A B lt2 z R H f)). Qed.
Lemma lem329676 {A B : Type'} (lt2 : type1402 A) (z : type548 A B) (R : type1413 A B) (H : type549 A B) : (term357 A B lt2 R H z) = (term358 A B lt2 z R H).
Proof. exact (fun_ext (fun f : A -> B => @lem329675 A B lt2 z R H f)). Qed.
Lemma lem329677 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem329678 {A B : Type'} (lt2 : type1402 A) (z : type548 A B) (R : type1413 A B) (H : type549 A B) : (term359 A B lt2 R H z) = (term360 A B lt2 z R H).
Proof. exact (MK_COMB (@lem329677 A B) (@lem329676 A B lt2 z R H)). Qed.
Lemma lem329679 {A B : Type'} (lt2 : type1402 A) (R : type1413 A B) (H : type549 A B) : (term361 A B lt2 R H) = (term362 A B lt2 R H).
Proof. exact (fun_ext (fun z : type548 A B => @lem329678 A B lt2 z R H)). Qed.
Lemma lem329680 {A B : Type'} : (@ex ((A -> B) -> A -> A)) = (@ex ((A -> B) -> A -> A)).
Proof. exact (eq_refl (@ex ((A -> B) -> A -> A))). Qed.
Lemma lem329681 {A B : Type'} (lt2 : type1402 A) (R : type1413 A B) (H : type549 A B) : (term344 A B lt2 R H) = (term363 A B lt2 R H).
Proof. exact (MK_COMB (@lem329680 A B) (@lem329679 A B lt2 R H)). Qed.
Lemma lem329682 {A B : Type'} (lt2 : type1402 A) (R : type1413 A B) (H : type549 A B) : ((term343 A B lt2 R H) = (term344 A B lt2 R H)) = ((term342 A B lt2 R H) = (term363 A B lt2 R H)).
Proof. exact (MK_COMB (@lem329670 A B lt2 R H) (@lem329681 A B lt2 R H)). Qed.
Lemma lem329683 {A B : Type'} (lt2 : type1402 A) (R : type1413 A B) (H : type549 A B) : (term342 A B lt2 R H) = (term363 A B lt2 R H).
Proof. exact (EQ_MP (@lem329682 A B lt2 R H) (@lem329657 A B lt2 R H)). Qed.
Lemma lem329685 {A B : Type'} (lt2 : type1402 A) (R : type1413 A B) (H : type549 A B) : (term302 A B lt2 R H) = (term363 A B lt2 R H).
Proof. exact (TRANS (@lem329653 A B lt2 R H) (@lem329683 A B lt2 R H)). Qed.
Lemma lem329686 {A B : Type'} (lt2 : type1402 A) (R : type1413 A B) (H : type549 A B) : (term3 A B lt2 R H) = (term363 A B lt2 R H).
Proof. exact (TRANS (@lem329491 A B lt2 R H) (@lem329685 A B lt2 R H)). Qed.
Lemma lem329687 {A B : Type'} (lt2 : type1402 A) (R : type1413 A B) (H : type549 A B) (h1 : term3 A B lt2 R H) : term363 A B lt2 R H.
Proof. exact (EQ_MP (@lem329686 A B lt2 R H) (@lem329178 A B lt2 R H h1)). Qed.
Lemma lem329694 {A B : Type'} (lt2 : type1402 A) (x : A) (R' : type1413 A B) (f : A -> B) (z : A) : (term56 A B lt2 x R' f z) = (term364 A B lt2 x R' f z).
Proof. exact (@lem17265 (lt2 z x) (term173 A B R' f z)). Qed.
Lemma lem329695 {A B : Type'} (lt2 : type1402 A) (x : A) (R' : type1413 A B) (f : A -> B) : (term57 A B lt2 x R' f) = (term365 A B lt2 x R' f).
Proof. exact (fun_ext (fun z : A => @lem329694 A B lt2 x R' f z)). Qed.
Lemma lem329696 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem329697 {A B : Type'} (lt2 : type1402 A) (x : A) (R' : type1413 A B) (f : A -> B) : (term58 A B lt2 x R' f) = (term366 A B lt2 x R' f).
Proof. exact (MK_COMB (@lem329696 A) (@lem329695 A B lt2 x R' f)). Qed.
Lemma lem329698 {A B : Type'} (R' : type1413 A B) (H : type549 A B) (f : A -> B) (x : A) : (term367 A B R' H f x) = (term367 A B R' H f x).
Proof. exact (eq_refl (term367 A B R' H f x)). Qed.
Lemma lem329699 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem329700 {A B : Type'} (lt2 : type1402 A) (x : A) (R' : type1413 A B) (f : A -> B) : (term368 A B lt2 x R' f) = (term369 A B lt2 x R' f).
Proof. exact (MK_COMB (@lem329699) (@lem329697 A B lt2 x R' f)). Qed.
Lemma lem329701 {A B : Type'} (lt2 : type1402 A) (R' : type1413 A B) (H : type549 A B) (f : A -> B) (x : A) : (term370 A B lt2 R' H f x) = (term371 A B lt2 R' H f x).
Proof. exact (MK_COMB (@lem329700 A B lt2 x R' f) (@lem329698 A B R' H f x)). Qed.
Lemma lem329702 {A B : Type'} (lt2 : type1402 A) (R' : type1413 A B) (H : type549 A B) (f : A -> B) (x : A) : (term372 A B lt2 R' H f x) = (term370 A B lt2 R' H f x).
Proof. exact (@lem17362 (term58 A B lt2 x R' f) (term72 A B R' H f x)). Qed.
Lemma lem329703 {A B : Type'} (lt2 : type1402 A) (R' : type1413 A B) (H : type549 A B) (f : A -> B) (x : A) : (term372 A B lt2 R' H f x) = (term371 A B lt2 R' H f x).
Proof. exact (TRANS (@lem329702 A B lt2 R' H f x) (@lem329701 A B lt2 R' H f x)). Qed.
Lemma lem329704 {A : Type'} (P : A -> Prop) : (term112 A P) = (term113 A P).
Proof. exact (@lem18392 A P). Qed.
Lemma lem329705 {A B : Type'} (lt2 : type1402 A) (R' : type1413 A B) (H : type549 A B) (f : A -> B) : (term373 A B lt2 R' H f) = (term374 A B lt2 R' H f).
Proof. exact (@lem329704 A (term75 A B lt2 R' H f)). Qed.
Lemma lem329706 {A B : Type'} (lt2 : type1402 A) (R' : type1413 A B) (H : type549 A B) (f : A -> B) (x : A) : (term375 A B lt2 R' H f x) = (term74 A B lt2 R' H f x).
Proof. exact (eq_refl (term375 A B lt2 R' H f x)). Qed.
Lemma lem329707 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem329708 {A B : Type'} (lt2 : type1402 A) (R' : type1413 A B) (H : type549 A B) (f : A -> B) (x : A) : (term376 A B lt2 R' H f x) = (term372 A B lt2 R' H f x).
Proof. exact (MK_COMB (@lem329707) (@lem329706 A B lt2 R' H f x)). Qed.
Lemma lem329709 {A B : Type'} (lt2 : type1402 A) (R' : type1413 A B) (H : type549 A B) (f : A -> B) (x : A) : (term376 A B lt2 R' H f x) = (term371 A B lt2 R' H f x).
Proof. exact (TRANS (@lem329708 A B lt2 R' H f x) (@lem329703 A B lt2 R' H f x)). Qed.
Lemma lem329710 {A B : Type'} (lt2 : type1402 A) (R' : type1413 A B) (H : type549 A B) (f : A -> B) : (term377 A B lt2 R' H f) = (term378 A B lt2 R' H f).
Proof. exact (fun_ext (fun x : A => @lem329709 A B lt2 R' H f x)). Qed.
Lemma lem329711 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem329712 {A B : Type'} (lt2 : type1402 A) (R' : type1413 A B) (H : type549 A B) (f : A -> B) : (term374 A B lt2 R' H f) = (term379 A B lt2 R' H f).
Proof. exact (MK_COMB (@lem329711 A) (@lem329710 A B lt2 R' H f)). Qed.
Lemma lem329713 {A B : Type'} (lt2 : type1402 A) (R' : type1413 A B) (H : type549 A B) (f : A -> B) : (term373 A B lt2 R' H f) = (term379 A B lt2 R' H f).
Proof. exact (TRANS (@lem329705 A B lt2 R' H f) (@lem329712 A B lt2 R' H f)). Qed.
Lemma lem329714 {A B : Type'} (P : type572 A B) : (term380 A B P) = (term381 A B P).
Proof. exact (@lem18392 (A -> B) P). Qed.
Lemma lem329715 {A B : Type'} (lt2 : type1402 A) (R' : type1413 A B) (H : type549 A B) : (term382 A B lt2 R' H) = (term383 A B lt2 R' H).
Proof. exact (@lem329714 A B (term77 A B lt2 R' H)). Qed.
Lemma lem329716 {A B : Type'} (lt2 : type1402 A) (R' : type1413 A B) (H : type549 A B) (f : A -> B) : (term384 A B lt2 R' H f) = (term76 A B lt2 R' H f).
Proof. exact (eq_refl (term384 A B lt2 R' H f)). Qed.
Lemma lem329717 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem329718 {A B : Type'} (lt2 : type1402 A) (R' : type1413 A B) (H : type549 A B) (f : A -> B) : (term385 A B lt2 R' H f) = (term373 A B lt2 R' H f).
Proof. exact (MK_COMB (@lem329717) (@lem329716 A B lt2 R' H f)). Qed.
Lemma lem329719 {A B : Type'} (lt2 : type1402 A) (R' : type1413 A B) (H : type549 A B) (f : A -> B) : (term385 A B lt2 R' H f) = (term379 A B lt2 R' H f).
Proof. exact (TRANS (@lem329718 A B lt2 R' H f) (@lem329713 A B lt2 R' H f)). Qed.
Lemma lem329720 {A B : Type'} (lt2 : type1402 A) (R' : type1413 A B) (H : type549 A B) : (term386 A B lt2 R' H) = (term387 A B lt2 R' H).
Proof. exact (fun_ext (fun f : A -> B => @lem329719 A B lt2 R' H f)). Qed.
Lemma lem329721 {A B : Type'} : (@ex (A -> B)) = (@ex (A -> B)).
Proof. exact (eq_refl (@ex (A -> B))). Qed.
Lemma lem329722 {A B : Type'} (lt2 : type1402 A) (R' : type1413 A B) (H : type549 A B) : (term383 A B lt2 R' H) = (term388 A B lt2 R' H).
Proof. exact (MK_COMB (@lem329721 A B) (@lem329720 A B lt2 R' H)). Qed.
Lemma lem329723 {A B : Type'} (lt2 : type1402 A) (R' : type1413 A B) (H : type549 A B) : (term382 A B lt2 R' H) = (term388 A B lt2 R' H).
Proof. exact (TRANS (@lem329715 A B lt2 R' H) (@lem329722 A B lt2 R' H)). Qed.
Lemma lem329730 {A B : Type'} (R : type1413 A B) (R' : type1413 A B) (a0 : A) (a1 : B) : (term67 A B R R' a0 a1) = (term389 A B R R' a0 a1).
Proof. exact (@lem17265 (R a0 a1) (R' a0 a1)). Qed.
Lemma lem329731 {A B : Type'} (R : type1413 A B) (R' : type1413 A B) (a0 : A) : (term68 A B R R' a0) = (term390 A B R R' a0).
Proof. exact (fun_ext (fun a1 : B => @lem329730 A B R R' a0 a1)). Qed.
Lemma lem329732 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem329733 {A B : Type'} (R : type1413 A B) (R' : type1413 A B) (a0 : A) : (term69 A B R R' a0) = (term391 A B R R' a0).
Proof. exact (MK_COMB (@lem329732 B) (@lem329731 A B R R' a0)). Qed.
Lemma lem329734 {A B : Type'} (R : type1413 A B) (R' : type1413 A B) : (term70 A B R R') = (term392 A B R R').
Proof. exact (fun_ext (fun a0 : A => @lem329733 A B R R' a0)). Qed.
Lemma lem329735 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem329736 {A B : Type'} (R : type1413 A B) (R' : type1413 A B) : (term71 A B R R') = (term393 A B R R').
Proof. exact (MK_COMB (@lem329735 A) (@lem329734 A B R R')). Qed.
Lemma lem329737 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem329738 {A B : Type'} (lt2 : type1402 A) (R' : type1413 A B) (H : type549 A B) : (term394 A B lt2 R' H) = (term395 A B lt2 R' H).
Proof. exact (MK_COMB (@lem329737) (@lem329723 A B lt2 R' H)). Qed.
Lemma lem329739 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (R : type1413 A B) (R' : type1413 A B) : (term396 A B lt2 H R R') = (term397 A B lt2 H R R').
Proof. exact (MK_COMB (@lem329738 A B lt2 R' H) (@lem329736 A B R R')). Qed.
Lemma lem329740 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (R : type1413 A B) (R' : type1413 A B) : (term78 A B lt2 H R R') = (term396 A B lt2 H R R').
Proof. exact (@lem17265 (term3 A B lt2 R' H) (term71 A B R R')). Qed.
Lemma lem329741 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (R : type1413 A B) (R' : type1413 A B) : (term78 A B lt2 H R R') = (term397 A B lt2 H R R').
Proof. exact (TRANS (@lem329740 A B lt2 H R R') (@lem329739 A B lt2 H R R')). Qed.
Lemma lem329742 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (R : type1413 A B) : (term79 A B lt2 H R) = (term398 A B lt2 H R).
Proof. exact (fun_ext (fun R' : type1413 A B => @lem329741 A B lt2 H R R')). Qed.
Lemma lem329743 {A B : Type'} : (@all (A -> B -> Prop)) = (@all (A -> B -> Prop)).
Proof. exact (eq_refl (@all (A -> B -> Prop))). Qed.
Lemma lem329744 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (R : type1413 A B) : (term5 A B lt2 H R) = (term399 A B lt2 H R).
Proof. exact (MK_COMB (@lem329743 A B) (@lem329742 A B lt2 H R)). Qed.
Lemma lem329947 {A : Type'} (P : A -> Prop) (Q : Prop) : (term127 A P Q) = (term128 A P Q).
Proof. exact (EQ_MP (@lem18905 A P Q) (@lem18904 A P Q)). Qed.
Lemma lem329948 {A B : Type'} (P : type572 A B) (Q : Prop) : (term400 A B P Q) = (term401 A B P Q).
Proof. exact (@lem329947 (A -> B) P Q). Qed.
Lemma lem329949 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (R : type1413 A B) (R' : type1413 A B) : (term402 A B lt2 H R R') = (term403 A B lt2 H R R').
Proof. exact (@lem329948 A B (term387 A B lt2 R' H) (term393 A B R R')). Qed.
Lemma lem329950 {A B : Type'} (lt2 : type1402 A) (R' : type1413 A B) (H : type549 A B) (f : A -> B) : (term404 A B lt2 R' H f) = (term379 A B lt2 R' H f).
Proof. exact (eq_refl (term404 A B lt2 R' H f)). Qed.
Lemma lem329951 {A B : Type'} (lt2 : type1402 A) (R' : type1413 A B) (H : type549 A B) : (term405 A B lt2 R' H) = (term387 A B lt2 R' H).
Proof. exact (fun_ext (fun f : A -> B => @lem329950 A B lt2 R' H f)). Qed.
Lemma lem329952 {A B : Type'} : (@ex (A -> B)) = (@ex (A -> B)).
Proof. exact (eq_refl (@ex (A -> B))). Qed.
Lemma lem329953 {A B : Type'} (lt2 : type1402 A) (R' : type1413 A B) (H : type549 A B) : (term406 A B lt2 R' H) = (term388 A B lt2 R' H).
Proof. exact (MK_COMB (@lem329952 A B) (@lem329951 A B lt2 R' H)). Qed.
Lemma lem329954 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem329955 {A B : Type'} (lt2 : type1402 A) (R' : type1413 A B) (H : type549 A B) : (term407 A B lt2 R' H) = (term395 A B lt2 R' H).
Proof. exact (MK_COMB (@lem329954) (@lem329953 A B lt2 R' H)). Qed.
Lemma lem329956 {A B : Type'} (R : type1413 A B) (R' : type1413 A B) : (term393 A B R R') = (term393 A B R R').
Proof. exact (eq_refl (term393 A B R R')). Qed.
Lemma lem329957 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (R : type1413 A B) (R' : type1413 A B) : (term402 A B lt2 H R R') = (term397 A B lt2 H R R').
Proof. exact (MK_COMB (@lem329955 A B lt2 R' H) (@lem329956 A B R R')). Qed.
Lemma lem329958 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem329959 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (R : type1413 A B) (R' : type1413 A B) : (term408 A B lt2 H R R') = (term409 A B lt2 H R R').
Proof. exact (MK_COMB (@lem329958) (@lem329957 A B lt2 H R R')). Qed.
Lemma lem329960 {A B : Type'} (lt2 : type1402 A) (R' : type1413 A B) (H : type549 A B) (f : A -> B) : (term404 A B lt2 R' H f) = (term379 A B lt2 R' H f).
Proof. exact (eq_refl (term404 A B lt2 R' H f)). Qed.
Lemma lem329961 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem329962 {A B : Type'} (lt2 : type1402 A) (R' : type1413 A B) (H : type549 A B) (f : A -> B) : (term410 A B lt2 R' H f) = (term411 A B lt2 R' H f).
Proof. exact (MK_COMB (@lem329961) (@lem329960 A B lt2 R' H f)). Qed.
Lemma lem329963 {A B : Type'} (R : type1413 A B) (R' : type1413 A B) : (term393 A B R R') = (term393 A B R R').
Proof. exact (eq_refl (term393 A B R R')). Qed.
Lemma lem329964 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (f : A -> B) (R : type1413 A B) (R' : type1413 A B) : (term412 A B lt2 H f R R') = (term413 A B lt2 H f R R').
Proof. exact (MK_COMB (@lem329962 A B lt2 R' H f) (@lem329963 A B R R')). Qed.
Lemma lem329965 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (R : type1413 A B) (R' : type1413 A B) : (term414 A B lt2 H R R') = (term415 A B lt2 H R R').
Proof. exact (fun_ext (fun f : A -> B => @lem329964 A B lt2 H f R R')). Qed.
Lemma lem329966 {A B : Type'} : (@ex (A -> B)) = (@ex (A -> B)).
Proof. exact (eq_refl (@ex (A -> B))). Qed.
Lemma lem329967 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (R : type1413 A B) (R' : type1413 A B) : (term403 A B lt2 H R R') = (term416 A B lt2 H R R').
Proof. exact (MK_COMB (@lem329966 A B) (@lem329965 A B lt2 H R R')). Qed.
Lemma lem329968 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (R : type1413 A B) (R' : type1413 A B) : ((term402 A B lt2 H R R') = (term403 A B lt2 H R R')) = ((term397 A B lt2 H R R') = (term416 A B lt2 H R R')).
Proof. exact (MK_COMB (@lem329959 A B lt2 H R R') (@lem329967 A B lt2 H R R')). Qed.
Lemma lem329969 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (R : type1413 A B) (R' : type1413 A B) : (term397 A B lt2 H R R') = (term416 A B lt2 H R R').
Proof. exact (EQ_MP (@lem329968 A B lt2 H R R') (@lem329949 A B lt2 H R R')). Qed.
Lemma lem329971 {A : Type'} (P : A -> Prop) (Q : Prop) : (term127 A P Q) = (term128 A P Q).
Proof. exact (EQ_MP (@lem18905 A P Q) (@lem18904 A P Q)). Qed.
Lemma lem329972 {A : Type'} (P : A -> Prop) (Q : Prop) : (term127 A P Q) = (term128 A P Q).
Proof. exact (@lem329971 A P Q). Qed.
Lemma lem329973 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (f : A -> B) (R : type1413 A B) (R' : type1413 A B) : (term417 A B lt2 H f R R') = (term418 A B lt2 H f R R').
Proof. exact (@lem329972 A (term378 A B lt2 R' H f) (term393 A B R R')). Qed.
Lemma lem329974 {A B : Type'} (lt2 : type1402 A) (R' : type1413 A B) (H : type549 A B) (f : A -> B) (x : A) : (term419 A B lt2 R' H f x) = (term371 A B lt2 R' H f x).
Proof. exact (eq_refl (term419 A B lt2 R' H f x)). Qed.
Lemma lem329975 {A B : Type'} (lt2 : type1402 A) (R' : type1413 A B) (H : type549 A B) (f : A -> B) : (term420 A B lt2 R' H f) = (term378 A B lt2 R' H f).
Proof. exact (fun_ext (fun x : A => @lem329974 A B lt2 R' H f x)). Qed.
Lemma lem329976 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem329977 {A B : Type'} (lt2 : type1402 A) (R' : type1413 A B) (H : type549 A B) (f : A -> B) : (term421 A B lt2 R' H f) = (term379 A B lt2 R' H f).
Proof. exact (MK_COMB (@lem329976 A) (@lem329975 A B lt2 R' H f)). Qed.
Lemma lem329978 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem329979 {A B : Type'} (lt2 : type1402 A) (R' : type1413 A B) (H : type549 A B) (f : A -> B) : (term422 A B lt2 R' H f) = (term411 A B lt2 R' H f).
Proof. exact (MK_COMB (@lem329978) (@lem329977 A B lt2 R' H f)). Qed.
Lemma lem329980 {A B : Type'} (R : type1413 A B) (R' : type1413 A B) : (term393 A B R R') = (term393 A B R R').
Proof. exact (eq_refl (term393 A B R R')). Qed.
Lemma lem329981 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (f : A -> B) (R : type1413 A B) (R' : type1413 A B) : (term417 A B lt2 H f R R') = (term413 A B lt2 H f R R').
Proof. exact (MK_COMB (@lem329979 A B lt2 R' H f) (@lem329980 A B R R')). Qed.
Lemma lem329982 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem329983 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (f : A -> B) (R : type1413 A B) (R' : type1413 A B) : (term423 A B lt2 H f R R') = (term424 A B lt2 H f R R').
Proof. exact (MK_COMB (@lem329982) (@lem329981 A B lt2 H f R R')). Qed.
Lemma lem329984 {A B : Type'} (lt2 : type1402 A) (R' : type1413 A B) (H : type549 A B) (f : A -> B) (x : A) : (term419 A B lt2 R' H f x) = (term371 A B lt2 R' H f x).
Proof. exact (eq_refl (term419 A B lt2 R' H f x)). Qed.
Lemma lem329985 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem329986 {A B : Type'} (lt2 : type1402 A) (R' : type1413 A B) (H : type549 A B) (f : A -> B) (x : A) : (term425 A B lt2 R' H f x) = (term426 A B lt2 R' H f x).
Proof. exact (MK_COMB (@lem329985) (@lem329984 A B lt2 R' H f x)). Qed.
Lemma lem329987 {A B : Type'} (R : type1413 A B) (R' : type1413 A B) : (term393 A B R R') = (term393 A B R R').
Proof. exact (eq_refl (term393 A B R R')). Qed.
Lemma lem329988 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (f : A -> B) (x : A) (R : type1413 A B) (R' : type1413 A B) : (term427 A B lt2 H f x R R') = (term428 A B lt2 H f x R R').
Proof. exact (MK_COMB (@lem329986 A B lt2 R' H f x) (@lem329987 A B R R')). Qed.
Lemma lem329989 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (f : A -> B) (R : type1413 A B) (R' : type1413 A B) : (term429 A B lt2 H f R R') = (term430 A B lt2 H f R R').
Proof. exact (fun_ext (fun x : A => @lem329988 A B lt2 H f x R R')). Qed.
Lemma lem329990 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem329991 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (f : A -> B) (R : type1413 A B) (R' : type1413 A B) : (term418 A B lt2 H f R R') = (term431 A B lt2 H f R R').
Proof. exact (MK_COMB (@lem329990 A) (@lem329989 A B lt2 H f R R')). Qed.
Lemma lem329992 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (f : A -> B) (R : type1413 A B) (R' : type1413 A B) : ((term417 A B lt2 H f R R') = (term418 A B lt2 H f R R')) = ((term413 A B lt2 H f R R') = (term431 A B lt2 H f R R')).
Proof. exact (MK_COMB (@lem329983 A B lt2 H f R R') (@lem329991 A B lt2 H f R R')). Qed.
Lemma lem329993 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (f : A -> B) (R : type1413 A B) (R' : type1413 A B) : (term413 A B lt2 H f R R') = (term431 A B lt2 H f R R').
Proof. exact (EQ_MP (@lem329992 A B lt2 H f R R') (@lem329973 A B lt2 H f R R')). Qed.
Lemma lem329994 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (R : type1413 A B) (R' : type1413 A B) : (term415 A B lt2 H R R') = (term432 A B lt2 H R R').
Proof. exact (fun_ext (fun f : A -> B => @lem329993 A B lt2 H f R R')). Qed.
Lemma lem329995 {A B : Type'} : (@ex (A -> B)) = (@ex (A -> B)).
Proof. exact (eq_refl (@ex (A -> B))). Qed.
Lemma lem329996 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (R : type1413 A B) (R' : type1413 A B) : (term416 A B lt2 H R R') = (term433 A B lt2 H R R').
Proof. exact (MK_COMB (@lem329995 A B) (@lem329994 A B lt2 H R R')). Qed.
Lemma lem329997 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (R : type1413 A B) (R' : type1413 A B) : (term397 A B lt2 H R R') = (term433 A B lt2 H R R').
Proof. exact (TRANS (@lem329969 A B lt2 H R R') (@lem329996 A B lt2 H R R')). Qed.
Lemma lem329998 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (R : type1413 A B) : (term398 A B lt2 H R) = (term434 A B lt2 H R).
Proof. exact (fun_ext (fun R' : type1413 A B => @lem329997 A B lt2 H R R')). Qed.
Lemma lem329999 {A B : Type'} : (@all (A -> B -> Prop)) = (@all (A -> B -> Prop)).
Proof. exact (eq_refl (@all (A -> B -> Prop))). Qed.
Lemma lem330000 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (R : type1413 A B) : (term399 A B lt2 H R) = (term435 A B lt2 H R).
Proof. exact (MK_COMB (@lem329999 A B) (@lem329998 A B lt2 H R)). Qed.
Lemma lem330002 {A B : Type'} (P : type1413 A B) : (term146 A B P) = (term147 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem330003 {A B : Type'} (P : type454 A B) : (term436 A B P) = (term437 A B P).
Proof. exact (@lem330002 (type1413 A B) (A -> B) P). Qed.
Lemma lem330004 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (R : type1413 A B) : (term438 A B lt2 H R) = (term439 A B lt2 H R).
Proof. exact (@lem330003 A B (term440 A B lt2 H R)). Qed.
Lemma lem330005 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (R : type1413 A B) (R' : type1413 A B) : (term441 A B lt2 H R R') = (term432 A B lt2 H R R').
Proof. exact (eq_refl (term441 A B lt2 H R R')). Qed.
Lemma lem330006 {A B : Type'} (f : A -> B) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem330007 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (R : type1413 A B) (R' : type1413 A B) (f : A -> B) : (term442 A B lt2 H R R' f) = (term443 A B lt2 H R R' f).
Proof. exact (MK_COMB (@lem330005 A B lt2 H R R') (@lem330006 A B f)). Qed.
Lemma lem330008 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (f : A -> B) (R : type1413 A B) (R' : type1413 A B) : (term443 A B lt2 H R R' f) = (term431 A B lt2 H f R R').
Proof. exact (eq_refl (term443 A B lt2 H R R' f)). Qed.
Lemma lem330009 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (f : A -> B) (R : type1413 A B) (R' : type1413 A B) : (term442 A B lt2 H R R' f) = (term431 A B lt2 H f R R').
Proof. exact (TRANS (@lem330007 A B lt2 H R R' f) (@lem330008 A B lt2 H f R R')). Qed.
Lemma lem330010 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (R : type1413 A B) (R' : type1413 A B) : (term444 A B lt2 H R R') = (term432 A B lt2 H R R').
Proof. exact (fun_ext (fun f : A -> B => @lem330009 A B lt2 H f R R')). Qed.
Lemma lem330011 {A B : Type'} : (@ex (A -> B)) = (@ex (A -> B)).
Proof. exact (eq_refl (@ex (A -> B))). Qed.
Lemma lem330012 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (R : type1413 A B) (R' : type1413 A B) : (term445 A B lt2 H R R') = (term433 A B lt2 H R R').
Proof. exact (MK_COMB (@lem330011 A B) (@lem330010 A B lt2 H R R')). Qed.
Lemma lem330013 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (R : type1413 A B) : (term446 A B lt2 H R) = (term434 A B lt2 H R).
Proof. exact (fun_ext (fun R' : type1413 A B => @lem330012 A B lt2 H R R')). Qed.
Lemma lem330014 {A B : Type'} : (@all (A -> B -> Prop)) = (@all (A -> B -> Prop)).
Proof. exact (eq_refl (@all (A -> B -> Prop))). Qed.
Lemma lem330015 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (R : type1413 A B) : (term438 A B lt2 H R) = (term435 A B lt2 H R).
Proof. exact (MK_COMB (@lem330014 A B) (@lem330013 A B lt2 H R)). Qed.
Lemma lem330016 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem330017 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (R : type1413 A B) : (term447 A B lt2 H R) = (term448 A B lt2 H R).
Proof. exact (MK_COMB (@lem330016) (@lem330015 A B lt2 H R)). Qed.
Lemma lem330018 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (R : type1413 A B) (R' : type1413 A B) : (term441 A B lt2 H R R') = (term432 A B lt2 H R R').
Proof. exact (eq_refl (term441 A B lt2 H R R')). Qed.
Lemma lem330019 {A B : Type'} (f : type467 A B) (R' : type1413 A B) : (f R') = (f R').
Proof. exact (eq_refl (f R')). Qed.
Lemma lem330020 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (R : type1413 A B) (f : type467 A B) (R' : type1413 A B) : (term449 A B lt2 H R f R') = (term450 A B lt2 H R f R').
Proof. exact (MK_COMB (@lem330018 A B lt2 H R R') (@lem330019 A B f R')). Qed.
Lemma lem330021 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (f : type467 A B) (R : type1413 A B) (R' : type1413 A B) : (term450 A B lt2 H R f R') = (term451 A B lt2 H f R R').
Proof. exact (eq_refl (term450 A B lt2 H R f R')). Qed.
Lemma lem330022 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (f : type467 A B) (R : type1413 A B) (R' : type1413 A B) : (term449 A B lt2 H R f R') = (term451 A B lt2 H f R R').
Proof. exact (TRANS (@lem330020 A B lt2 H R f R') (@lem330021 A B lt2 H f R R')). Qed.
Lemma lem330023 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (f : type467 A B) (R : type1413 A B) : (term452 A B lt2 H R f) = (term453 A B lt2 H f R).
Proof. exact (fun_ext (fun R' : type1413 A B => @lem330022 A B lt2 H f R R')). Qed.
Lemma lem330024 {A B : Type'} : (@all (A -> B -> Prop)) = (@all (A -> B -> Prop)).
Proof. exact (eq_refl (@all (A -> B -> Prop))). Qed.
Lemma lem330025 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (f : type467 A B) (R : type1413 A B) : (term454 A B lt2 H R f) = (term455 A B lt2 H f R).
Proof. exact (MK_COMB (@lem330024 A B) (@lem330023 A B lt2 H f R)). Qed.
Lemma lem330026 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (R : type1413 A B) : (term456 A B lt2 H R) = (term457 A B lt2 H R).
Proof. exact (fun_ext (fun f : type467 A B => @lem330025 A B lt2 H f R)). Qed.
Lemma lem330027 {A B : Type'} : (@ex ((A -> B -> Prop) -> A -> B)) = (@ex ((A -> B -> Prop) -> A -> B)).
Proof. exact (eq_refl (@ex ((A -> B -> Prop) -> A -> B))). Qed.
Lemma lem330028 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (R : type1413 A B) : (term439 A B lt2 H R) = (term458 A B lt2 H R).
Proof. exact (MK_COMB (@lem330027 A B) (@lem330026 A B lt2 H R)). Qed.
Lemma lem330029 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (R : type1413 A B) : ((term438 A B lt2 H R) = (term439 A B lt2 H R)) = ((term435 A B lt2 H R) = (term458 A B lt2 H R)).
Proof. exact (MK_COMB (@lem330017 A B lt2 H R) (@lem330028 A B lt2 H R)). Qed.
Lemma lem330030 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (R : type1413 A B) : (term435 A B lt2 H R) = (term458 A B lt2 H R).
Proof. exact (EQ_MP (@lem330029 A B lt2 H R) (@lem330004 A B lt2 H R)). Qed.
Lemma lem330032 {A B : Type'} (P : type1413 A B) : (term146 A B P) = (term147 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem330033 {A B : Type'} (P : type468 A B) : (term459 A B P) = (term460 A B P).
Proof. exact (@lem330032 (type1413 A B) A P). Qed.
Lemma lem330034 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (f : type467 A B) (R : type1413 A B) : (term461 A B lt2 H f R) = (term462 A B lt2 H f R).
Proof. exact (@lem330033 A B (term463 A B lt2 H f R)). Qed.
Lemma lem330035 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (f : type467 A B) (R : type1413 A B) (R' : type1413 A B) : (term464 A B lt2 H f R R') = (term465 A B lt2 H f R R').
Proof. exact (eq_refl (term464 A B lt2 H f R R')). Qed.
Lemma lem330036 {A : Type'} (x : A) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem330037 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (f : type467 A B) (R : type1413 A B) (R' : type1413 A B) (x : A) : (term466 A B lt2 H f R R' x) = (term467 A B lt2 H f R R' x).
Proof. exact (MK_COMB (@lem330035 A B lt2 H f R R') (@lem330036 A x)). Qed.
Lemma lem330038 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (f : type467 A B) (x : A) (R : type1413 A B) (R' : type1413 A B) : (term467 A B lt2 H f R R' x) = (term468 A B lt2 H f x R R').
Proof. exact (eq_refl (term467 A B lt2 H f R R' x)). Qed.
Lemma lem330039 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (f : type467 A B) (x : A) (R : type1413 A B) (R' : type1413 A B) : (term466 A B lt2 H f R R' x) = (term468 A B lt2 H f x R R').
Proof. exact (TRANS (@lem330037 A B lt2 H f R R' x) (@lem330038 A B lt2 H f x R R')). Qed.
Lemma lem330040 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (f : type467 A B) (R : type1413 A B) (R' : type1413 A B) : (term469 A B lt2 H f R R') = (term465 A B lt2 H f R R').
Proof. exact (fun_ext (fun x : A => @lem330039 A B lt2 H f x R R')). Qed.
Lemma lem330041 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem330042 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (f : type467 A B) (R : type1413 A B) (R' : type1413 A B) : (term470 A B lt2 H f R R') = (term451 A B lt2 H f R R').
Proof. exact (MK_COMB (@lem330041 A) (@lem330040 A B lt2 H f R R')). Qed.
Lemma lem330043 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (f : type467 A B) (R : type1413 A B) : (term471 A B lt2 H f R) = (term453 A B lt2 H f R).
Proof. exact (fun_ext (fun R' : type1413 A B => @lem330042 A B lt2 H f R R')). Qed.
Lemma lem330044 {A B : Type'} : (@all (A -> B -> Prop)) = (@all (A -> B -> Prop)).
Proof. exact (eq_refl (@all (A -> B -> Prop))). Qed.
Lemma lem330045 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (f : type467 A B) (R : type1413 A B) : (term461 A B lt2 H f R) = (term455 A B lt2 H f R).
Proof. exact (MK_COMB (@lem330044 A B) (@lem330043 A B lt2 H f R)). Qed.
Lemma lem330046 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem330047 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (f : type467 A B) (R : type1413 A B) : (term472 A B lt2 H f R) = (term473 A B lt2 H f R).
Proof. exact (MK_COMB (@lem330046) (@lem330045 A B lt2 H f R)). Qed.
Lemma lem330048 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (f : type467 A B) (R : type1413 A B) (R' : type1413 A B) : (term464 A B lt2 H f R R') = (term465 A B lt2 H f R R').
Proof. exact (eq_refl (term464 A B lt2 H f R R')). Qed.
Lemma lem330049 {A B : Type'} (x : type473 A B) (R' : type1413 A B) : (x R') = (x R').
Proof. exact (eq_refl (x R')). Qed.
Lemma lem330050 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (f : type467 A B) (R : type1413 A B) (x : type473 A B) (R' : type1413 A B) : (term474 A B lt2 H f R x R') = (term475 A B lt2 H f R x R').
Proof. exact (MK_COMB (@lem330048 A B lt2 H f R R') (@lem330049 A B x R')). Qed.
Lemma lem330051 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (f : type467 A B) (x : type473 A B) (R : type1413 A B) (R' : type1413 A B) : (term475 A B lt2 H f R x R') = (term476 A B lt2 H f x R R').
Proof. exact (eq_refl (term475 A B lt2 H f R x R')). Qed.
Lemma lem330052 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (f : type467 A B) (x : type473 A B) (R : type1413 A B) (R' : type1413 A B) : (term474 A B lt2 H f R x R') = (term476 A B lt2 H f x R R').
Proof. exact (TRANS (@lem330050 A B lt2 H f R x R') (@lem330051 A B lt2 H f x R R')). Qed.
Lemma lem330053 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (f : type467 A B) (x : type473 A B) (R : type1413 A B) : (term477 A B lt2 H f R x) = (term478 A B lt2 H f x R).
Proof. exact (fun_ext (fun R' : type1413 A B => @lem330052 A B lt2 H f x R R')). Qed.
Lemma lem330054 {A B : Type'} : (@all (A -> B -> Prop)) = (@all (A -> B -> Prop)).
Proof. exact (eq_refl (@all (A -> B -> Prop))). Qed.
Lemma lem330055 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (f : type467 A B) (x : type473 A B) (R : type1413 A B) : (term479 A B lt2 H f R x) = (term480 A B lt2 H f x R).
Proof. exact (MK_COMB (@lem330054 A B) (@lem330053 A B lt2 H f x R)). Qed.
Lemma lem330056 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (f : type467 A B) (R : type1413 A B) : (term481 A B lt2 H f R) = (term482 A B lt2 H f R).
Proof. exact (fun_ext (fun x : type473 A B => @lem330055 A B lt2 H f x R)). Qed.
Lemma lem330057 {A B : Type'} : (@ex ((A -> B -> Prop) -> A)) = (@ex ((A -> B -> Prop) -> A)).
Proof. exact (eq_refl (@ex ((A -> B -> Prop) -> A))). Qed.
Lemma lem330058 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (f : type467 A B) (R : type1413 A B) : (term462 A B lt2 H f R) = (term483 A B lt2 H f R).
Proof. exact (MK_COMB (@lem330057 A B) (@lem330056 A B lt2 H f R)). Qed.
Lemma lem330059 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (f : type467 A B) (R : type1413 A B) : ((term461 A B lt2 H f R) = (term462 A B lt2 H f R)) = ((term455 A B lt2 H f R) = (term483 A B lt2 H f R)).
Proof. exact (MK_COMB (@lem330047 A B lt2 H f R) (@lem330058 A B lt2 H f R)). Qed.
Lemma lem330060 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (f : type467 A B) (R : type1413 A B) : (term455 A B lt2 H f R) = (term483 A B lt2 H f R).
Proof. exact (EQ_MP (@lem330059 A B lt2 H f R) (@lem330034 A B lt2 H f R)). Qed.
Lemma lem330061 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (R : type1413 A B) : (term457 A B lt2 H R) = (term484 A B lt2 H R).
Proof. exact (fun_ext (fun f : type467 A B => @lem330060 A B lt2 H f R)). Qed.
Lemma lem330062 {A B : Type'} : (@ex ((A -> B -> Prop) -> A -> B)) = (@ex ((A -> B -> Prop) -> A -> B)).
Proof. exact (eq_refl (@ex ((A -> B -> Prop) -> A -> B))). Qed.
Lemma lem330063 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (R : type1413 A B) : (term458 A B lt2 H R) = (term485 A B lt2 H R).
Proof. exact (MK_COMB (@lem330062 A B) (@lem330061 A B lt2 H R)). Qed.
Lemma lem330064 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (R : type1413 A B) : (term435 A B lt2 H R) = (term485 A B lt2 H R).
Proof. exact (TRANS (@lem330030 A B lt2 H R) (@lem330063 A B lt2 H R)). Qed.
Lemma lem330066 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (R : type1413 A B) : (term399 A B lt2 H R) = (term485 A B lt2 H R).
Proof. exact (TRANS (@lem330000 A B lt2 H R) (@lem330064 A B lt2 H R)). Qed.
Lemma lem330067 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (R : type1413 A B) : (term5 A B lt2 H R) = (term485 A B lt2 H R).
Proof. exact (TRANS (@lem329744 A B lt2 H R) (@lem330066 A B lt2 H R)). Qed.
Lemma lem330068 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (R : type1413 A B) (h1 : term5 A B lt2 H R) : term485 A B lt2 H R.
Proof. exact (EQ_MP (@lem330067 A B lt2 H R) (@lem329179 A B lt2 H R h1)). Qed.
Lemma lem330070 {A B : Type'} (R : type1413 A B) (y : A) (y' : B) : (term667 A B R y y') = (term667 A B R y y').
Proof. exact (eq_refl (term667 A B R y y')). Qed.
Lemma lem330073 {B : Type'} (y' : B) (y : B) : (y' = y) = (y' = y).
Proof. exact (eq_refl (y' = y)). Qed.
Lemma lem330074 {A B : Type'} (R : type1413 A B) (y : A) (y' : B) : (term801 A B R y y') = (R y y').
Proof. exact (eq_refl (term801 A B R y y')). Qed.
Lemma lem330075 {A B : Type'} (R : type1413 A B) (y : A) (y' : B) : (term801 A B R y y') = (R y y').
Proof. exact (eq_refl (term801 A B R y y')). Qed.
Lemma lem330076 {A B : Type'} (R : type1413 A B) (y : A) (y' : B) : (term667 A B R y y') = (term667 A B R y y').
Proof. exact (@lem330070 A B R y y'). Qed.
Lemma lem330077 {B : Type'} (P : B -> Prop) : (@ex1 B P) = (term802 B P).
Proof. exact (@lem18897 B P). Qed.
Lemma lem330078 {A B : Type'} (R : type1413 A B) (y : A) : (term51 A B R y) = (term803 A B R y).
Proof. exact (@lem330077 B (term50 A B R y)). Qed.
Lemma lem330079 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem330080 {A B : Type'} (R : type1413 A B) (y : A) (y' : B) : (term804 A B R y y') = (term667 A B R y y').
Proof. exact (MK_COMB (@lem330079) (@lem330075 A B R y y')). Qed.
Lemma lem330081 {A B : Type'} (R : type1413 A B) (y : A) (y' : B) : (term804 A B R y y') = (term667 A B R y y').
Proof. exact (TRANS (@lem330080 A B R y y') (@lem330076 A B R y y')). Qed.
Lemma lem330082 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem330083 {A B : Type'} (R : type1413 A B) (y : A) (y' : B) : (term805 A B R y y') = (term502 A B R y y').
Proof. exact (MK_COMB (@lem330082) (@lem330081 A B R y y')). Qed.
Lemma lem330084 {A B : Type'} (R : type1413 A B) (y : A) (y' : B) (y'' : B) : (term806 A B R y y' y'') = (term807 A B R y y' y'').
Proof. exact (MK_COMB (@lem330083 A B R y y') (@lem330073 B y' y'')). Qed.
Lemma lem330085 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem330087 {A B : Type'} (R : type1413 A B) (y : A) (y' : B) : (term804 A B R y y') = (term667 A B R y y').
Proof. exact (MK_COMB (@lem330085) (@lem330074 A B R y y')). Qed.
Lemma lem330088 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem330089 {A B : Type'} (R : type1413 A B) (y : A) (y' : B) : (term805 A B R y y') = (term502 A B R y y').
Proof. exact (MK_COMB (@lem330088) (@lem330087 A B R y y')). Qed.
Lemma lem330090 {A B : Type'} (R : type1413 A B) (y : A) (y' : B) (y'' : B) : (term808 A B R y y' y'') = (term809 A B R y y' y'').
Proof. exact (MK_COMB (@lem330089 A B R y y'') (@lem330084 A B R y y' y'')). Qed.
Lemma lem330091 {A B : Type'} (R : type1413 A B) (y : A) (y' : B) : (term810 A B R y y') = (term811 A B R y y').
Proof. exact (fun_ext (fun y'' : B => @lem330090 A B R y y'' y')). Qed.
Lemma lem330092 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem330093 {A B : Type'} (R : type1413 A B) (y : A) (y' : B) : (term812 A B R y y') = (term813 A B R y y').
Proof. exact (MK_COMB (@lem330092 B) (@lem330091 A B R y y')). Qed.
Lemma lem330094 {A B : Type'} (R : type1413 A B) (y : A) : (term814 A B R y) = (term815 A B R y).
Proof. exact (fun_ext (fun y' : B => @lem330093 A B R y y')). Qed.
Lemma lem330095 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem330096 {A B : Type'} (R : type1413 A B) (y : A) : (term816 A B R y) = (term817 A B R y).
Proof. exact (MK_COMB (@lem330095 B) (@lem330094 A B R y)). Qed.
Lemma lem330097 {A B : Type'} (R : type1413 A B) (y : A) (y' : B) : (term801 A B R y y') = (R y y').
Proof. exact (eq_refl (term801 A B R y y')). Qed.
Lemma lem330098 {A B : Type'} (R : type1413 A B) (y : A) : (term818 A B R y) = (term50 A B R y).
Proof. exact (fun_ext (fun y' : B => @lem330097 A B R y y')). Qed.
Lemma lem330099 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem330100 {A B : Type'} (R : type1413 A B) (y : A) : (term819 A B R y) = (term820 A B R y).
Proof. exact (MK_COMB (@lem330099 B) (@lem330098 A B R y)). Qed.
Lemma lem330101 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem330102 {A B : Type'} (R : type1413 A B) (y : A) : (term821 A B R y) = (term822 A B R y).
Proof. exact (MK_COMB (@lem330101) (@lem330100 A B R y)). Qed.
Lemma lem330103 {A B : Type'} (R : type1413 A B) (y : A) : (term803 A B R y) = (term823 A B R y).
Proof. exact (MK_COMB (@lem330102 A B R y) (@lem330096 A B R y)). Qed.
Lemma lem330104 {A B : Type'} (R : type1413 A B) (y : A) : (term51 A B R y) = (term823 A B R y).
Proof. exact (TRANS (@lem330078 A B R y) (@lem330103 A B R y)). Qed.
Lemma lem330106 {A : Type'} (lt2 : type1402 A) (y : A) (x : A) : (term1096 A lt2 y x) = (term1096 A lt2 y x).
Proof. exact (eq_refl (term1096 A lt2 y x)). Qed.
Lemma lem330107 {A B : Type'} (lt2 : type1402 A) (x : A) (R : type1413 A B) (y : A) : (term1097 A B lt2 x R y) = (term1098 A B lt2 x R y).
Proof. exact (MK_COMB (@lem330106 A lt2 y x) (@lem330104 A B R y)). Qed.
Lemma lem330108 {A B : Type'} (lt2 : type1402 A) (x : A) (R : type1413 A B) (y : A) : (term1039 A B lt2 x R y) = (term1097 A B lt2 x R y).
Proof. exact (@lem17265 (lt2 y x) (term51 A B R y)). Qed.
Lemma lem330109 {A B : Type'} (lt2 : type1402 A) (x : A) (R : type1413 A B) (y : A) : (term1039 A B lt2 x R y) = (term1098 A B lt2 x R y).
Proof. exact (TRANS (@lem330108 A B lt2 x R y) (@lem330107 A B lt2 x R y)). Qed.
Lemma lem330110 {A B : Type'} (lt2 : type1402 A) (x : A) (R : type1413 A B) : (term1041 A B lt2 x R) = (term1099 A B lt2 x R).
Proof. exact (fun_ext (fun y : A => @lem330109 A B lt2 x R y)). Qed.
Lemma lem330111 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem330112 {A B : Type'} (lt2 : type1402 A) (x : A) (R : type1413 A B) : (term1043 A B lt2 x R) = (term1100 A B lt2 x R).
Proof. exact (MK_COMB (@lem330111 A) (@lem330110 A B lt2 x R)). Qed.
Lemma lem330170 {A : Type'} (P : Prop) (Q : A -> Prop) : (term845 A P Q) = (term846 A P Q).
Proof. exact (EQ_MP (@lem18941 A P Q) (@lem18940 A P Q)). Qed.
Lemma lem330171 {B : Type'} (P : Prop) (Q : B -> Prop) : (term845 B P Q) = (term846 B P Q).
Proof. exact (@lem330170 B P Q). Qed.
Lemma lem330172 {A B : Type'} (R : type1413 A B) (y : A) (y' : B) : (term847 A B R y y') = (term848 A B R y y').
Proof. exact (@lem330171 B (term667 A B R y y') (term849 A B R y y')). Qed.
Lemma lem330173 {A B : Type'} (R : type1413 A B) (y : A) (y' : B) (y'' : B) : (term850 A B R y y'' y') = (term807 A B R y y' y'').
Proof. exact (eq_refl (term850 A B R y y'' y')). Qed.
Lemma lem330174 {A B : Type'} (R : type1413 A B) (y : A) (y' : B) : (term502 A B R y y') = (term502 A B R y y').
Proof. exact (eq_refl (term502 A B R y y')). Qed.
Lemma lem330175 {A B : Type'} (R : type1413 A B) (y : A) (y' : B) (y'' : B) : (term851 A B R y y'' y') = (term809 A B R y y' y'').
Proof. exact (MK_COMB (@lem330174 A B R y y'') (@lem330173 A B R y y' y'')). Qed.
Lemma lem330176 {A B : Type'} (R : type1413 A B) (y : A) (y' : B) : (term852 A B R y y') = (term811 A B R y y').
Proof. exact (fun_ext (fun y'' : B => @lem330175 A B R y y'' y')). Qed.
Lemma lem330177 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem330178 {A B : Type'} (R : type1413 A B) (y : A) (y' : B) : (term847 A B R y y') = (term813 A B R y y').
Proof. exact (MK_COMB (@lem330177 B) (@lem330176 A B R y y')). Qed.
Lemma lem330179 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem330180 {A B : Type'} (R : type1413 A B) (y : A) (y' : B) : (term853 A B R y y') = (term854 A B R y y').
Proof. exact (MK_COMB (@lem330179) (@lem330178 A B R y y')). Qed.
Lemma lem330181 {A B : Type'} (R : type1413 A B) (y : A) (y' : B) (y'' : B) : (term850 A B R y y'' y') = (term807 A B R y y' y'').
Proof. exact (eq_refl (term850 A B R y y'' y')). Qed.
Lemma lem330182 {A B : Type'} (R : type1413 A B) (y : A) (y' : B) : (term855 A B R y y') = (term849 A B R y y').
Proof. exact (fun_ext (fun y'' : B => @lem330181 A B R y y'' y')). Qed.
Lemma lem330183 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem330184 {A B : Type'} (R : type1413 A B) (y : A) (y' : B) : (term856 A B R y y') = (term857 A B R y y').
Proof. exact (MK_COMB (@lem330183 B) (@lem330182 A B R y y')). Qed.
Lemma lem330185 {A B : Type'} (R : type1413 A B) (y : A) (y' : B) : (term502 A B R y y') = (term502 A B R y y').
Proof. exact (eq_refl (term502 A B R y y')). Qed.
Lemma lem330186 {A B : Type'} (R : type1413 A B) (y : A) (y' : B) : (term848 A B R y y') = (term858 A B R y y').
Proof. exact (MK_COMB (@lem330185 A B R y y') (@lem330184 A B R y y')). Qed.
Lemma lem330187 {A B : Type'} (R : type1413 A B) (y : A) (y' : B) : ((term847 A B R y y') = (term848 A B R y y')) = ((term813 A B R y y') = (term858 A B R y y')).
Proof. exact (MK_COMB (@lem330180 A B R y y') (@lem330186 A B R y y')). Qed.
Lemma lem330188 {A B : Type'} (R : type1413 A B) (y : A) (y' : B) : (term813 A B R y y') = (term858 A B R y y').
Proof. exact (EQ_MP (@lem330187 A B R y y') (@lem330172 A B R y y')). Qed.
Lemma lem330237 {A B : Type'} (R : type1413 A B) (y : A) : (term815 A B R y) = (term859 A B R y).
Proof. exact (fun_ext (fun y' : B => @lem330188 A B R y y')). Qed.
Lemma lem330238 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem330239 {A B : Type'} (R : type1413 A B) (y : A) : (term817 A B R y) = (term860 A B R y).
Proof. exact (MK_COMB (@lem330238 B) (@lem330237 A B R y)). Qed.
Lemma lem330288 {A B : Type'} (R : type1413 A B) (y : A) : (term822 A B R y) = (term822 A B R y).
Proof. exact (eq_refl (term822 A B R y)). Qed.
Lemma lem330289 {A B : Type'} (R : type1413 A B) (y : A) : (term823 A B R y) = (term1101 A B R y).
Proof. exact (MK_COMB (@lem330288 A B R y) (@lem330239 A B R y)). Qed.
Lemma lem330290 {A : Type'} (lt2 : type1402 A) (y : A) (x : A) : (term1096 A lt2 y x) = (term1096 A lt2 y x).
Proof. exact (eq_refl (term1096 A lt2 y x)). Qed.
Lemma lem330291 {A B : Type'} (lt2 : type1402 A) (x : A) (R : type1413 A B) (y : A) : (term1098 A B lt2 x R y) = (term1102 A B lt2 x R y).
Proof. exact (MK_COMB (@lem330290 A lt2 y x) (@lem330289 A B R y)). Qed.
Lemma lem330292 {A B : Type'} (lt2 : type1402 A) (x : A) (R : type1413 A B) : (term1099 A B lt2 x R) = (term1103 A B lt2 x R).
Proof. exact (fun_ext (fun y : A => @lem330291 A B lt2 x R y)). Qed.
Lemma lem330293 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem330294 {A B : Type'} (lt2 : type1402 A) (x : A) (R : type1413 A B) : (term1100 A B lt2 x R) = (term1104 A B lt2 x R).
Proof. exact (MK_COMB (@lem330293 A) (@lem330292 A B lt2 x R)). Qed.
Lemma lem330344 {A : Type'} (P : A -> Prop) (Q : Prop) : (term729 A P Q) = (term730 A P Q).
Proof. exact (EQ_MP (@lem18923 A P Q) (@lem18922 A P Q)). Qed.
Lemma lem330345 {B : Type'} (P : B -> Prop) (Q : Prop) : (term729 B P Q) = (term730 B P Q).
Proof. exact (@lem330344 B P Q). Qed.
Lemma lem330346 {A B : Type'} (R : type1413 A B) (y : A) : (term1105 A B R y) = (term1106 A B R y).
Proof. exact (@lem330345 B (term50 A B R y) (term860 A B R y)). Qed.
Lemma lem330347 {A B : Type'} (R : type1413 A B) (y : A) (y' : B) : (term801 A B R y y') = (R y y').
Proof. exact (eq_refl (term801 A B R y y')). Qed.
Lemma lem330348 {A B : Type'} (R : type1413 A B) (y : A) : (term818 A B R y) = (term50 A B R y).
Proof. exact (fun_ext (fun y' : B => @lem330347 A B R y y')). Qed.
Lemma lem330349 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem330350 {A B : Type'} (R : type1413 A B) (y : A) : (term819 A B R y) = (term820 A B R y).
Proof. exact (MK_COMB (@lem330349 B) (@lem330348 A B R y)). Qed.
Lemma lem330351 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem330352 {A B : Type'} (R : type1413 A B) (y : A) : (term821 A B R y) = (term822 A B R y).
Proof. exact (MK_COMB (@lem330351) (@lem330350 A B R y)). Qed.
Lemma lem330353 {A B : Type'} (R : type1413 A B) (y : A) : (term860 A B R y) = (term860 A B R y).
Proof. exact (eq_refl (term860 A B R y)). Qed.
Lemma lem330354 {A B : Type'} (R : type1413 A B) (y : A) : (term1105 A B R y) = (term1101 A B R y).
Proof. exact (MK_COMB (@lem330352 A B R y) (@lem330353 A B R y)). Qed.
Lemma lem330355 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem330356 {A B : Type'} (R : type1413 A B) (y : A) : (term1107 A B R y) = (term1108 A B R y).
Proof. exact (MK_COMB (@lem330355) (@lem330354 A B R y)). Qed.
Lemma lem330357 {A B : Type'} (R : type1413 A B) (y : A) (y' : B) : (term801 A B R y y') = (R y y').
Proof. exact (eq_refl (term801 A B R y y')). Qed.
Lemma lem330358 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem330359 {A B : Type'} (R : type1413 A B) (y : A) (y' : B) : (term1109 A B R y y') = (term1110 A B R y y').
Proof. exact (MK_COMB (@lem330358) (@lem330357 A B R y y')). Qed.
Lemma lem330360 {A B : Type'} (R : type1413 A B) (y : A) : (term860 A B R y) = (term860 A B R y).
Proof. exact (eq_refl (term860 A B R y)). Qed.
Lemma lem330361 {A B : Type'} (y : B) (R : type1413 A B) (y' : A) : (term1111 A B y R y') = (term1112 A B y R y').
Proof. exact (MK_COMB (@lem330359 A B R y' y) (@lem330360 A B R y')). Qed.
Lemma lem330362 {A B : Type'} (R : type1413 A B) (y : A) : (term1113 A B R y) = (term1114 A B R y).
Proof. exact (fun_ext (fun y' : B => @lem330361 A B y' R y)). Qed.
Lemma lem330363 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem330364 {A B : Type'} (R : type1413 A B) (y : A) : (term1106 A B R y) = (term1115 A B R y).
Proof. exact (MK_COMB (@lem330363 B) (@lem330362 A B R y)). Qed.
Lemma lem330365 {A B : Type'} (R : type1413 A B) (y : A) : ((term1105 A B R y) = (term1106 A B R y)) = ((term1101 A B R y) = (term1115 A B R y)).
Proof. exact (MK_COMB (@lem330356 A B R y) (@lem330364 A B R y)). Qed.
Lemma lem330366 {A B : Type'} (R : type1413 A B) (y : A) : (term1101 A B R y) = (term1115 A B R y).
Proof. exact (EQ_MP (@lem330365 A B R y) (@lem330346 A B R y)). Qed.
Lemma lem330367 {A : Type'} (lt2 : type1402 A) (y : A) (x : A) : (term1096 A lt2 y x) = (term1096 A lt2 y x).
Proof. exact (eq_refl (term1096 A lt2 y x)). Qed.
Lemma lem330368 {A B : Type'} (lt2 : type1402 A) (x : A) (R : type1413 A B) (y : A) : (term1102 A B lt2 x R y) = (term1116 A B lt2 x R y).
Proof. exact (MK_COMB (@lem330367 A lt2 y x) (@lem330366 A B R y)). Qed.
Lemma lem330370 {A : Type'} (P : Prop) (Q : A -> Prop) : (term560 A P Q) = (term561 A P Q).
Proof. exact (EQ_MP (@lem18911 A P Q) (@lem18910 A P Q)). Qed.
Lemma lem330371 {B : Type'} (P : Prop) (Q : B -> Prop) : (term560 B P Q) = (term561 B P Q).
Proof. exact (@lem330370 B P Q). Qed.
Lemma lem330372 {A B : Type'} (lt2 : type1402 A) (x : A) (R : type1413 A B) (y : A) : (term1117 A B lt2 x R y) = (term1118 A B lt2 x R y).
Proof. exact (@lem330371 B (term1119 A lt2 y x) (term1114 A B R y)). Qed.
Lemma lem330373 {A B : Type'} (y : B) (R : type1413 A B) (y' : A) : (term1120 A B R y' y) = (term1112 A B y R y').
Proof. exact (eq_refl (term1120 A B R y' y)). Qed.
Lemma lem330374 {A B : Type'} (R : type1413 A B) (y : A) : (term1121 A B R y) = (term1114 A B R y).
Proof. exact (fun_ext (fun y' : B => @lem330373 A B y' R y)). Qed.
Lemma lem330375 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem330376 {A B : Type'} (R : type1413 A B) (y : A) : (term1122 A B R y) = (term1115 A B R y).
Proof. exact (MK_COMB (@lem330375 B) (@lem330374 A B R y)). Qed.
Lemma lem330377 {A : Type'} (lt2 : type1402 A) (y : A) (x : A) : (term1096 A lt2 y x) = (term1096 A lt2 y x).
Proof. exact (eq_refl (term1096 A lt2 y x)). Qed.
Lemma lem330378 {A B : Type'} (lt2 : type1402 A) (x : A) (R : type1413 A B) (y : A) : (term1117 A B lt2 x R y) = (term1116 A B lt2 x R y).
Proof. exact (MK_COMB (@lem330377 A lt2 y x) (@lem330376 A B R y)). Qed.
Lemma lem330379 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem330380 {A B : Type'} (lt2 : type1402 A) (x : A) (R : type1413 A B) (y : A) : (term1123 A B lt2 x R y) = (term1124 A B lt2 x R y).
Proof. exact (MK_COMB (@lem330379) (@lem330378 A B lt2 x R y)). Qed.
Lemma lem330381 {A B : Type'} (y : B) (R : type1413 A B) (y' : A) : (term1120 A B R y' y) = (term1112 A B y R y').
Proof. exact (eq_refl (term1120 A B R y' y)). Qed.
Lemma lem330382 {A : Type'} (lt2 : type1402 A) (y : A) (x : A) : (term1096 A lt2 y x) = (term1096 A lt2 y x).
Proof. exact (eq_refl (term1096 A lt2 y x)). Qed.
Lemma lem330383 {A B : Type'} (lt2 : type1402 A) (x : A) (y : B) (R : type1413 A B) (y' : A) : (term1125 A B lt2 x R y' y) = (term1126 A B lt2 x y R y').
Proof. exact (MK_COMB (@lem330382 A lt2 y' x) (@lem330381 A B y R y')). Qed.
Lemma lem330384 {A B : Type'} (lt2 : type1402 A) (x : A) (R : type1413 A B) (y : A) : (term1127 A B lt2 x R y) = (term1128 A B lt2 x R y).
Proof. exact (fun_ext (fun y' : B => @lem330383 A B lt2 x y' R y)). Qed.
Lemma lem330385 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem330386 {A B : Type'} (lt2 : type1402 A) (x : A) (R : type1413 A B) (y : A) : (term1118 A B lt2 x R y) = (term1129 A B lt2 x R y).
Proof. exact (MK_COMB (@lem330385 B) (@lem330384 A B lt2 x R y)). Qed.
Lemma lem330387 {A B : Type'} (lt2 : type1402 A) (x : A) (R : type1413 A B) (y : A) : ((term1117 A B lt2 x R y) = (term1118 A B lt2 x R y)) = ((term1116 A B lt2 x R y) = (term1129 A B lt2 x R y)).
Proof. exact (MK_COMB (@lem330380 A B lt2 x R y) (@lem330386 A B lt2 x R y)). Qed.
Lemma lem330388 {A B : Type'} (lt2 : type1402 A) (x : A) (R : type1413 A B) (y : A) : (term1116 A B lt2 x R y) = (term1129 A B lt2 x R y).
Proof. exact (EQ_MP (@lem330387 A B lt2 x R y) (@lem330372 A B lt2 x R y)). Qed.
Lemma lem330389 {A B : Type'} (lt2 : type1402 A) (x : A) (R : type1413 A B) (y : A) : (term1102 A B lt2 x R y) = (term1129 A B lt2 x R y).
Proof. exact (TRANS (@lem330368 A B lt2 x R y) (@lem330388 A B lt2 x R y)). Qed.
Lemma lem330390 {A B : Type'} (lt2 : type1402 A) (x : A) (R : type1413 A B) : (term1103 A B lt2 x R) = (term1130 A B lt2 x R).
Proof. exact (fun_ext (fun y : A => @lem330389 A B lt2 x R y)). Qed.
Lemma lem330391 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem330392 {A B : Type'} (lt2 : type1402 A) (x : A) (R : type1413 A B) : (term1104 A B lt2 x R) = (term1131 A B lt2 x R).
Proof. exact (MK_COMB (@lem330391 A) (@lem330390 A B lt2 x R)). Qed.
Lemma lem330394 {A B : Type'} (P : type1413 A B) : (term146 A B P) = (term147 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem330395 {A B : Type'} (P : type1413 A B) : (term146 A B P) = (term147 A B P).
Proof. exact (@lem330394 A B P). Qed.
Lemma lem330396 {A B : Type'} (lt2 : type1402 A) (x : A) (R : type1413 A B) : (term1132 A B lt2 x R) = (term1133 A B lt2 x R).
Proof. exact (@lem330395 A B (term1134 A B lt2 x R)). Qed.
Lemma lem330397 {A B : Type'} (lt2 : type1402 A) (x : A) (R : type1413 A B) (y : A) : (term1135 A B lt2 x R y) = (term1128 A B lt2 x R y).
Proof. exact (eq_refl (term1135 A B lt2 x R y)). Qed.
Lemma lem330398 {B : Type'} (y : B) : y = y.
Proof. exact (eq_refl y). Qed.
Lemma lem330399 {A B : Type'} (lt2 : type1402 A) (x : A) (R : type1413 A B) (y : A) (y' : B) : (term1136 A B lt2 x R y y') = (term1137 A B lt2 x R y y').
Proof. exact (MK_COMB (@lem330397 A B lt2 x R y) (@lem330398 B y')). Qed.
Lemma lem330400 {A B : Type'} (lt2 : type1402 A) (x : A) (y : B) (R : type1413 A B) (y' : A) : (term1137 A B lt2 x R y' y) = (term1126 A B lt2 x y R y').
Proof. exact (eq_refl (term1137 A B lt2 x R y' y)). Qed.
Lemma lem330401 {A B : Type'} (lt2 : type1402 A) (x : A) (y : B) (R : type1413 A B) (y' : A) : (term1136 A B lt2 x R y' y) = (term1126 A B lt2 x y R y').
Proof. exact (TRANS (@lem330399 A B lt2 x R y' y) (@lem330400 A B lt2 x y R y')). Qed.
Lemma lem330402 {A B : Type'} (lt2 : type1402 A) (x : A) (R : type1413 A B) (y : A) : (term1138 A B lt2 x R y) = (term1128 A B lt2 x R y).
Proof. exact (fun_ext (fun y' : B => @lem330401 A B lt2 x y' R y)). Qed.
Lemma lem330403 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem330404 {A B : Type'} (lt2 : type1402 A) (x : A) (R : type1413 A B) (y : A) : (term1139 A B lt2 x R y) = (term1129 A B lt2 x R y).
Proof. exact (MK_COMB (@lem330403 B) (@lem330402 A B lt2 x R y)). Qed.
Lemma lem330405 {A B : Type'} (lt2 : type1402 A) (x : A) (R : type1413 A B) : (term1140 A B lt2 x R) = (term1130 A B lt2 x R).
Proof. exact (fun_ext (fun y : A => @lem330404 A B lt2 x R y)). Qed.
Lemma lem330406 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem330407 {A B : Type'} (lt2 : type1402 A) (x : A) (R : type1413 A B) : (term1132 A B lt2 x R) = (term1131 A B lt2 x R).
Proof. exact (MK_COMB (@lem330406 A) (@lem330405 A B lt2 x R)). Qed.
Lemma lem330408 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem330409 {A B : Type'} (lt2 : type1402 A) (x : A) (R : type1413 A B) : (term1141 A B lt2 x R) = (term1142 A B lt2 x R).
Proof. exact (MK_COMB (@lem330408) (@lem330407 A B lt2 x R)). Qed.
Lemma lem330410 {A B : Type'} (lt2 : type1402 A) (x : A) (R : type1413 A B) (y : A) : (term1135 A B lt2 x R y) = (term1128 A B lt2 x R y).
Proof. exact (eq_refl (term1135 A B lt2 x R y)). Qed.
Lemma lem330411 {A B : Type'} (y : A -> B) (y' : A) : (y y') = (y y').
Proof. exact (eq_refl (y y')). Qed.
Lemma lem330412 {A B : Type'} (lt2 : type1402 A) (x : A) (R : type1413 A B) (y : A -> B) (y' : A) : (term1143 A B lt2 x R y y') = (term1144 A B lt2 x R y y').
Proof. exact (MK_COMB (@lem330410 A B lt2 x R y') (@lem330411 A B y y')). Qed.
Lemma lem330413 {A B : Type'} (lt2 : type1402 A) (x : A) (y : A -> B) (R : type1413 A B) (y' : A) : (term1144 A B lt2 x R y y') = (term1145 A B lt2 x y R y').
Proof. exact (eq_refl (term1144 A B lt2 x R y y')). Qed.
Lemma lem330414 {A B : Type'} (lt2 : type1402 A) (x : A) (y : A -> B) (R : type1413 A B) (y' : A) : (term1143 A B lt2 x R y y') = (term1145 A B lt2 x y R y').
Proof. exact (TRANS (@lem330412 A B lt2 x R y y') (@lem330413 A B lt2 x y R y')). Qed.
Lemma lem330415 {A B : Type'} (lt2 : type1402 A) (x : A) (y : A -> B) (R : type1413 A B) : (term1146 A B lt2 x R y) = (term1147 A B lt2 x y R).
Proof. exact (fun_ext (fun y' : A => @lem330414 A B lt2 x y R y')). Qed.
Lemma lem330416 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem330417 {A B : Type'} (lt2 : type1402 A) (x : A) (y : A -> B) (R : type1413 A B) : (term1148 A B lt2 x R y) = (term1149 A B lt2 x y R).
Proof. exact (MK_COMB (@lem330416 A) (@lem330415 A B lt2 x y R)). Qed.
Lemma lem330418 {A B : Type'} (lt2 : type1402 A) (x : A) (R : type1413 A B) : (term1150 A B lt2 x R) = (term1151 A B lt2 x R).
Proof. exact (fun_ext (fun y : A -> B => @lem330417 A B lt2 x y R)). Qed.
Lemma lem330419 {A B : Type'} : (@ex (A -> B)) = (@ex (A -> B)).
Proof. exact (eq_refl (@ex (A -> B))). Qed.
Lemma lem330420 {A B : Type'} (lt2 : type1402 A) (x : A) (R : type1413 A B) : (term1133 A B lt2 x R) = (term1152 A B lt2 x R).
Proof. exact (MK_COMB (@lem330419 A B) (@lem330418 A B lt2 x R)). Qed.
Lemma lem330421 {A B : Type'} (lt2 : type1402 A) (x : A) (R : type1413 A B) : ((term1132 A B lt2 x R) = (term1133 A B lt2 x R)) = ((term1131 A B lt2 x R) = (term1152 A B lt2 x R)).
Proof. exact (MK_COMB (@lem330409 A B lt2 x R) (@lem330420 A B lt2 x R)). Qed.
Lemma lem330422 {A B : Type'} (lt2 : type1402 A) (x : A) (R : type1413 A B) : (term1131 A B lt2 x R) = (term1152 A B lt2 x R).
Proof. exact (EQ_MP (@lem330421 A B lt2 x R) (@lem330396 A B lt2 x R)). Qed.
Lemma lem330423 {A B : Type'} (lt2 : type1402 A) (x : A) (R : type1413 A B) : (term1104 A B lt2 x R) = (term1152 A B lt2 x R).
Proof. exact (TRANS (@lem330392 A B lt2 x R) (@lem330422 A B lt2 x R)). Qed.
Lemma lem330424 {A B : Type'} (lt2 : type1402 A) (x : A) (R : type1413 A B) : (term1100 A B lt2 x R) = (term1152 A B lt2 x R).
Proof. exact (TRANS (@lem330294 A B lt2 x R) (@lem330423 A B lt2 x R)). Qed.
Lemma lem330425 {A B : Type'} (lt2 : type1402 A) (x : A) (R : type1413 A B) : (term1043 A B lt2 x R) = (term1152 A B lt2 x R).
Proof. exact (TRANS (@lem330112 A B lt2 x R) (@lem330424 A B lt2 x R)). Qed.
Lemma lem330426 {A B : Type'} (lt2 : type1402 A) (x : A) (R : type1413 A B) (h1 : term1043 A B lt2 x R) : term1152 A B lt2 x R.
Proof. exact (EQ_MP (@lem330425 A B lt2 x R) (@lem329180 A B lt2 x R h1)). Qed.
Lemma lem330432 {A B : Type'} (R : type1413 A B) (x' : A) (y : B) (h1 : R x' y) : R x' y.
Proof. exact (h1). Qed.
Lemma lem330438 {A B : Type'} (S' : type1413 A B) (x' : A) (y : B) (h1 : term667 A B S' x' y) : term667 A B S' x' y.
Proof. exact (h1). Qed.
Lemma lem330440 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (f : type467 A B) (R : type1413 A B) (h1 : term483 A B lt2 H f R) : term483 A B lt2 H f R.
Proof. exact (h1). Qed.
Lemma lem330441 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (f : type467 A B) (x'' : type473 A B) (R : type1413 A B) (h1 : term480 A B lt2 H f x'' R) : term480 A B lt2 H f x'' R.
Proof. exact (h1). Qed.
Lemma lem330443 {A B : Type'} (lt2 : type1402 A) (z' : type515 A B) (S' : type1413 A B) (H : type549 A B) (h1 : term282 A B lt2 z' S' H) : term282 A B lt2 z' S' H.
Proof. exact (h1). Qed.
Lemma lem330450 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem330451 {A B : Type'} (f : type1413 A B) (x : A) : (f x) = (@I (A -> B -> Prop) f x).
Proof. exact (@lem330450 A (B -> Prop) f x). Qed.
Lemma lem330452 {A B : Type'} (R : type1413 A B) (x' : A) : (R x') = (@I (A -> B -> Prop) R x').
Proof. exact (@lem330451 A B R x'). Qed.
Lemma lem330453 {B : Type'} (y : B) : y = y.
Proof. exact (eq_refl y). Qed.
Lemma lem330454 {A B : Type'} (R : type1413 A B) (x' : A) (y : B) : (R x' y) = (@I (A -> B -> Prop) R x' y).
Proof. exact (MK_COMB (@lem330452 A B R x') (@lem330453 B y)). Qed.
Lemma lem330456 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem330457 {B : Type'} (f : B -> Prop) (x : B) : (f x) = (@I (B -> Prop) f x).
Proof. exact (@lem330456 B Prop f x). Qed.
Lemma lem330458 {A B : Type'} (R : type1413 A B) (x' : A) (y : B) : (@I (A -> B -> Prop) R x' y) = (term885 A B R x' y).
Proof. exact (@lem330457 B (@I (A -> B -> Prop) R x') y). Qed.
Lemma lem330460 {A B : Type'} (R : type1413 A B) (x' : A) (y : B) : (R x' y) = (term885 A B R x' y).
Proof. exact (TRANS (@lem330454 A B R x' y) (@lem330458 A B R x' y)). Qed.
Lemma lem330462 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem330469 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem330470 {A B : Type'} (f : type1413 A B) (x : A) : (f x) = (@I (A -> B -> Prop) f x).
Proof. exact (@lem330469 A (B -> Prop) f x). Qed.
Lemma lem330471 {A B : Type'} (S' : type1413 A B) (x' : A) : (S' x') = (@I (A -> B -> Prop) S' x').
Proof. exact (@lem330470 A B S' x'). Qed.
Lemma lem330472 {B : Type'} (y : B) : y = y.
Proof. exact (eq_refl y). Qed.
Lemma lem330473 {A B : Type'} (S' : type1413 A B) (x' : A) (y : B) : (S' x' y) = (@I (A -> B -> Prop) S' x' y).
Proof. exact (MK_COMB (@lem330471 A B S' x') (@lem330472 B y)). Qed.
Lemma lem330475 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem330476 {B : Type'} (f : B -> Prop) (x : B) : (f x) = (@I (B -> Prop) f x).
Proof. exact (@lem330475 B Prop f x). Qed.
Lemma lem330477 {A B : Type'} (S' : type1413 A B) (x' : A) (y : B) : (@I (A -> B -> Prop) S' x' y) = (term885 A B S' x' y).
Proof. exact (@lem330476 B (@I (A -> B -> Prop) S' x') y). Qed.
Lemma lem330479 {A B : Type'} (S' : type1413 A B) (x' : A) (y : B) : (S' x' y) = (term885 A B S' x' y).
Proof. exact (TRANS (@lem330473 A B S' x' y) (@lem330477 A B S' x' y)). Qed.
Lemma lem330480 {A B : Type'} (S' : type1413 A B) (x' : A) (y : B) : (term667 A B S' x' y) = (term886 A B S' x' y).
Proof. exact (MK_COMB (@lem330462) (@lem330479 A B S' x' y)). Qed.
Lemma lem330596 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem330597 {A B : Type'} (f : type1413 A B) (x : A) : (f x) = (@I (A -> B -> Prop) f x).
Proof. exact (@lem330596 A (B -> Prop) f x). Qed.
Lemma lem330598 {A B : Type'} (R' : type1413 A B) (a0 : A) : (R' a0) = (@I (A -> B -> Prop) R' a0).
Proof. exact (@lem330597 A B R' a0). Qed.
Lemma lem330599 {B : Type'} (a1 : B) : a1 = a1.
Proof. exact (eq_refl a1). Qed.
Lemma lem330600 {A B : Type'} (R' : type1413 A B) (a0 : A) (a1 : B) : (R' a0 a1) = (@I (A -> B -> Prop) R' a0 a1).
Proof. exact (MK_COMB (@lem330598 A B R' a0) (@lem330599 B a1)). Qed.
Lemma lem330602 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem330603 {B : Type'} (f : B -> Prop) (x : B) : (f x) = (@I (B -> Prop) f x).
Proof. exact (@lem330602 B Prop f x). Qed.
Lemma lem330604 {A B : Type'} (R' : type1413 A B) (a0 : A) (a1 : B) : (@I (A -> B -> Prop) R' a0 a1) = (term885 A B R' a0 a1).
Proof. exact (@lem330603 B (@I (A -> B -> Prop) R' a0) a1). Qed.
Lemma lem330606 {A B : Type'} (R' : type1413 A B) (a0 : A) (a1 : B) : (R' a0 a1) = (term885 A B R' a0 a1).
Proof. exact (TRANS (@lem330600 A B R' a0 a1) (@lem330604 A B R' a0 a1)). Qed.
Lemma lem330607 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem330614 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem330615 {A B : Type'} (f : type1413 A B) (x : A) : (f x) = (@I (A -> B -> Prop) f x).
Proof. exact (@lem330614 A (B -> Prop) f x). Qed.
Lemma lem330616 {A B : Type'} (R : type1413 A B) (a0 : A) : (R a0) = (@I (A -> B -> Prop) R a0).
Proof. exact (@lem330615 A B R a0). Qed.
Lemma lem330617 {B : Type'} (a1 : B) : a1 = a1.
Proof. exact (eq_refl a1). Qed.
Lemma lem330618 {A B : Type'} (R : type1413 A B) (a0 : A) (a1 : B) : (R a0 a1) = (@I (A -> B -> Prop) R a0 a1).
Proof. exact (MK_COMB (@lem330616 A B R a0) (@lem330617 B a1)). Qed.
Lemma lem330620 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem330621 {B : Type'} (f : B -> Prop) (x : B) : (f x) = (@I (B -> Prop) f x).
Proof. exact (@lem330620 B Prop f x). Qed.
Lemma lem330622 {A B : Type'} (R : type1413 A B) (a0 : A) (a1 : B) : (@I (A -> B -> Prop) R a0 a1) = (term885 A B R a0 a1).
Proof. exact (@lem330621 B (@I (A -> B -> Prop) R a0) a1). Qed.
Lemma lem330624 {A B : Type'} (R : type1413 A B) (a0 : A) (a1 : B) : (R a0 a1) = (term885 A B R a0 a1).
Proof. exact (TRANS (@lem330618 A B R a0 a1) (@lem330622 A B R a0 a1)). Qed.
Lemma lem330625 {A B : Type'} (R : type1413 A B) (a0 : A) (a1 : B) : (term667 A B R a0 a1) = (term886 A B R a0 a1).
Proof. exact (MK_COMB (@lem330607) (@lem330624 A B R a0 a1)). Qed.
Lemma lem330626 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem330627 {A B : Type'} (R : type1413 A B) (a0 : A) (a1 : B) : (term502 A B R a0 a1) = (term887 A B R a0 a1).
Proof. exact (MK_COMB (@lem330626) (@lem330625 A B R a0 a1)). Qed.
Lemma lem330628 {A B : Type'} (R : type1413 A B) (R' : type1413 A B) (a0 : A) (a1 : B) : (term389 A B R R' a0 a1) = (term1153 A B R R' a0 a1).
Proof. exact (MK_COMB (@lem330627 A B R a0 a1) (@lem330606 A B R' a0 a1)). Qed.
Lemma lem330629 {A B : Type'} (R : type1413 A B) (R' : type1413 A B) (a0 : A) : (term390 A B R R' a0) = (term1154 A B R R' a0).
Proof. exact (fun_ext (fun a1 : B => @lem330628 A B R R' a0 a1)). Qed.
Lemma lem330630 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem330631 {A B : Type'} (R : type1413 A B) (R' : type1413 A B) (a0 : A) : (term391 A B R R' a0) = (term1155 A B R R' a0).
Proof. exact (MK_COMB (@lem330630 B) (@lem330629 A B R R' a0)). Qed.
Lemma lem330632 {A B : Type'} (R : type1413 A B) (R' : type1413 A B) : (term392 A B R R') = (term1156 A B R R').
Proof. exact (fun_ext (fun a0 : A => @lem330631 A B R R' a0)). Qed.
Lemma lem330633 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem330634 {A B : Type'} (R : type1413 A B) (R' : type1413 A B) : (term393 A B R R') = (term1157 A B R R').
Proof. exact (MK_COMB (@lem330633 A) (@lem330632 A B R R')). Qed.
Lemma lem330635 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem330636 {A B : Type'} (R' : type1413 A B) : R' = R'.
Proof. exact (eq_refl R'). Qed.
Lemma lem330641 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem330642 {A B : Type'} (f : type473 A B) (x : type1413 A B) : (f x) = (@I ((A -> B -> Prop) -> A) f x).
Proof. exact (@lem330641 (type1413 A B) A f x). Qed.
Lemma lem330644 {A B : Type'} (x'' : type473 A B) (R' : type1413 A B) : (x'' R') = (@I ((A -> B -> Prop) -> A) x'' R').
Proof. exact (@lem330642 A B x'' R'). Qed.
Lemma lem330645 {A B : Type'} (H : type549 A B) : H = H.
Proof. exact (eq_refl H). Qed.
Lemma lem330650 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem330651 {A B : Type'} (f : type467 A B) (x : type1413 A B) : (f x) = (@I ((A -> B -> Prop) -> A -> B) f x).
Proof. exact (@lem330650 (type1413 A B) (A -> B) f x). Qed.
Lemma lem330653 {A B : Type'} (f : type467 A B) (R' : type1413 A B) : (f R') = (@I ((A -> B -> Prop) -> A -> B) f R').
Proof. exact (@lem330651 A B f R'). Qed.
Lemma lem330658 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem330659 {A B : Type'} (f : type473 A B) (x : type1413 A B) : (f x) = (@I ((A -> B -> Prop) -> A) f x).
Proof. exact (@lem330658 (type1413 A B) A f x). Qed.
Lemma lem330661 {A B : Type'} (x'' : type473 A B) (R' : type1413 A B) : (x'' R') = (@I ((A -> B -> Prop) -> A) x'' R').
Proof. exact (@lem330659 A B x'' R'). Qed.
Lemma lem330662 {A B : Type'} (H : type549 A B) (f : type467 A B) (R' : type1413 A B) : (term1158 A B H f R') = (term1159 A B H f R').
Proof. exact (MK_COMB (@lem330645 A B H) (@lem330653 A B f R')). Qed.
Lemma lem330663 {A B : Type'} (H : type549 A B) (f : type467 A B) (x'' : type473 A B) (R' : type1413 A B) : (term1160 A B H f x'' R') = (term1161 A B H f x'' R').
Proof. exact (MK_COMB (@lem330662 A B H f R') (@lem330661 A B x'' R')). Qed.
Lemma lem330665 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem330666 {A B : Type'} (f : type549 A B) (x : A -> B) : (f x) = (@I ((A -> B) -> A -> B) f x).
Proof. exact (@lem330665 (A -> B) (A -> B) f x). Qed.
Lemma lem330667 {A B : Type'} (H : type549 A B) (f : type467 A B) (R' : type1413 A B) : (term1159 A B H f R') = (term1162 A B H f R').
Proof. exact (@lem330666 A B H (@I ((A -> B -> Prop) -> A -> B) f R')). Qed.
Lemma lem330668 {A B : Type'} (x'' : type473 A B) (R' : type1413 A B) : (@I ((A -> B -> Prop) -> A) x'' R') = (@I ((A -> B -> Prop) -> A) x'' R').
Proof. exact (eq_refl (@I ((A -> B -> Prop) -> A) x'' R')). Qed.
Lemma lem330669 {A B : Type'} (H : type549 A B) (f : type467 A B) (x'' : type473 A B) (R' : type1413 A B) : (term1161 A B H f x'' R') = (term1163 A B H f x'' R').
Proof. exact (MK_COMB (@lem330667 A B H f R') (@lem330668 A B x'' R')). Qed.
Lemma lem330671 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem330672 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (@lem330671 A B f x). Qed.
Lemma lem330673 {A B : Type'} (H : type549 A B) (f : type467 A B) (x'' : type473 A B) (R' : type1413 A B) : (term1163 A B H f x'' R') = (term1164 A B H f x'' R').
Proof. exact (@lem330672 A B (term1162 A B H f R') (@I ((A -> B -> Prop) -> A) x'' R')). Qed.
Lemma lem330674 {A B : Type'} (H : type549 A B) (f : type467 A B) (x'' : type473 A B) (R' : type1413 A B) : (term1161 A B H f x'' R') = (term1164 A B H f x'' R').
Proof. exact (TRANS (@lem330669 A B H f x'' R') (@lem330673 A B H f x'' R')). Qed.
Lemma lem330675 {A B : Type'} (H : type549 A B) (f : type467 A B) (x'' : type473 A B) (R' : type1413 A B) : (term1160 A B H f x'' R') = (term1164 A B H f x'' R').
Proof. exact (TRANS (@lem330663 A B H f x'' R') (@lem330674 A B H f x'' R')). Qed.
Lemma lem330676 {A B : Type'} (x'' : type473 A B) (R' : type1413 A B) : (term1165 A B x'' R') = (term1166 A B x'' R').
Proof. exact (MK_COMB (@lem330636 A B R') (@lem330644 A B x'' R')). Qed.
Lemma lem330677 {A B : Type'} (H : type549 A B) (f : type467 A B) (x'' : type473 A B) (R' : type1413 A B) : (term1167 A B H f x'' R') = (term1168 A B H f x'' R').
Proof. exact (MK_COMB (@lem330676 A B x'' R') (@lem330675 A B H f x'' R')). Qed.
Lemma lem330679 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem330680 {A B : Type'} (f : type1413 A B) (x : A) : (f x) = (@I (A -> B -> Prop) f x).
Proof. exact (@lem330679 A (B -> Prop) f x). Qed.
Lemma lem330681 {A B : Type'} (x'' : type473 A B) (R' : type1413 A B) : (term1166 A B x'' R') = (term1169 A B x'' R').
Proof. exact (@lem330680 A B R' (@I ((A -> B -> Prop) -> A) x'' R')). Qed.
Lemma lem330682 {A B : Type'} (H : type549 A B) (f : type467 A B) (x'' : type473 A B) (R' : type1413 A B) : (term1164 A B H f x'' R') = (term1164 A B H f x'' R').
Proof. exact (eq_refl (term1164 A B H f x'' R')). Qed.
Lemma lem330683 {A B : Type'} (H : type549 A B) (f : type467 A B) (x'' : type473 A B) (R' : type1413 A B) : (term1168 A B H f x'' R') = (term1170 A B H f x'' R').
Proof. exact (MK_COMB (@lem330681 A B x'' R') (@lem330682 A B H f x'' R')). Qed.
Lemma lem330685 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem330686 {B : Type'} (f : B -> Prop) (x : B) : (f x) = (@I (B -> Prop) f x).
Proof. exact (@lem330685 B Prop f x). Qed.
Lemma lem330687 {A B : Type'} (H : type549 A B) (f : type467 A B) (x'' : type473 A B) (R' : type1413 A B) : (term1170 A B H f x'' R') = (term1171 A B H f x'' R').
Proof. exact (@lem330686 B (term1169 A B x'' R') (term1164 A B H f x'' R')). Qed.
Lemma lem330688 {A B : Type'} (H : type549 A B) (f : type467 A B) (x'' : type473 A B) (R' : type1413 A B) : (term1168 A B H f x'' R') = (term1171 A B H f x'' R').
Proof. exact (TRANS (@lem330683 A B H f x'' R') (@lem330687 A B H f x'' R')). Qed.
Lemma lem330689 {A B : Type'} (H : type549 A B) (f : type467 A B) (x'' : type473 A B) (R' : type1413 A B) : (term1167 A B H f x'' R') = (term1171 A B H f x'' R').
Proof. exact (TRANS (@lem330677 A B H f x'' R') (@lem330688 A B H f x'' R')). Qed.
Lemma lem330690 {A B : Type'} (H : type549 A B) (f : type467 A B) (x'' : type473 A B) (R' : type1413 A B) : (term1172 A B H f x'' R') = (term1173 A B H f x'' R').
Proof. exact (MK_COMB (@lem330635) (@lem330689 A B H f x'' R')). Qed.
Lemma lem330699 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem330700 {A B : Type'} (f : type467 A B) (x : type1413 A B) : (f x) = (@I ((A -> B -> Prop) -> A -> B) f x).
Proof. exact (@lem330699 (type1413 A B) (A -> B) f x). Qed.
Lemma lem330701 {A B : Type'} (f : type467 A B) (R' : type1413 A B) : (f R') = (@I ((A -> B -> Prop) -> A -> B) f R').
Proof. exact (@lem330700 A B f R'). Qed.
Lemma lem330702 {A : Type'} (z : A) : z = z.
Proof. exact (eq_refl z). Qed.
Lemma lem330703 {A B : Type'} (f : type467 A B) (R' : type1413 A B) (z : A) : (f R' z) = (@I ((A -> B -> Prop) -> A -> B) f R' z).
Proof. exact (MK_COMB (@lem330701 A B f R') (@lem330702 A z)). Qed.
Lemma lem330705 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem330706 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (@lem330705 A B f x). Qed.
Lemma lem330707 {A B : Type'} (f : type467 A B) (R' : type1413 A B) (z : A) : (@I ((A -> B -> Prop) -> A -> B) f R' z) = (term1174 A B f R' z).
Proof. exact (@lem330706 A B (@I ((A -> B -> Prop) -> A -> B) f R') z). Qed.
Lemma lem330709 {A B : Type'} (f : type467 A B) (R' : type1413 A B) (z : A) : (f R' z) = (term1174 A B f R' z).
Proof. exact (TRANS (@lem330703 A B f R' z) (@lem330707 A B f R' z)). Qed.
Lemma lem330710 {A B : Type'} (R' : type1413 A B) (z : A) : (R' z) = (R' z).
Proof. exact (eq_refl (R' z)). Qed.
Lemma lem330711 {A B : Type'} (f : type467 A B) (R' : type1413 A B) (z : A) : (term1175 A B f R' z) = (term1176 A B f R' z).
Proof. exact (MK_COMB (@lem330710 A B R' z) (@lem330709 A B f R' z)). Qed.
Lemma lem330713 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem330714 {A B : Type'} (f : type1413 A B) (x : A) : (f x) = (@I (A -> B -> Prop) f x).
Proof. exact (@lem330713 A (B -> Prop) f x). Qed.
Lemma lem330715 {A B : Type'} (R' : type1413 A B) (z : A) : (R' z) = (@I (A -> B -> Prop) R' z).
Proof. exact (@lem330714 A B R' z). Qed.
Lemma lem330716 {A B : Type'} (f : type467 A B) (R' : type1413 A B) (z : A) : (term1174 A B f R' z) = (term1174 A B f R' z).
Proof. exact (eq_refl (term1174 A B f R' z)). Qed.
Lemma lem330717 {A B : Type'} (f : type467 A B) (R' : type1413 A B) (z : A) : (term1176 A B f R' z) = (term1177 A B f R' z).
Proof. exact (MK_COMB (@lem330715 A B R' z) (@lem330716 A B f R' z)). Qed.
Lemma lem330719 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem330720 {B : Type'} (f : B -> Prop) (x : B) : (f x) = (@I (B -> Prop) f x).
Proof. exact (@lem330719 B Prop f x). Qed.
Lemma lem330721 {A B : Type'} (f : type467 A B) (R' : type1413 A B) (z : A) : (term1177 A B f R' z) = (term1178 A B f R' z).
Proof. exact (@lem330720 B (@I (A -> B -> Prop) R' z) (term1174 A B f R' z)). Qed.
Lemma lem330722 {A B : Type'} (f : type467 A B) (R' : type1413 A B) (z : A) : (term1176 A B f R' z) = (term1178 A B f R' z).
Proof. exact (TRANS (@lem330717 A B f R' z) (@lem330721 A B f R' z)). Qed.
Lemma lem330723 {A B : Type'} (f : type467 A B) (R' : type1413 A B) (z : A) : (term1175 A B f R' z) = (term1178 A B f R' z).
Proof. exact (TRANS (@lem330711 A B f R' z) (@lem330722 A B f R' z)). Qed.
Lemma lem330724 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem330731 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem330732 {A B : Type'} (f : type473 A B) (x : type1413 A B) : (f x) = (@I ((A -> B -> Prop) -> A) f x).
Proof. exact (@lem330731 (type1413 A B) A f x). Qed.
Lemma lem330734 {A B : Type'} (x'' : type473 A B) (R' : type1413 A B) : (x'' R') = (@I ((A -> B -> Prop) -> A) x'' R').
Proof. exact (@lem330732 A B x'' R'). Qed.
Lemma lem330735 {A : Type'} (lt2 : type1402 A) (z : A) : (lt2 z) = (lt2 z).
Proof. exact (eq_refl (lt2 z)). Qed.
Lemma lem330736 {A B : Type'} (lt2 : type1402 A) (z : A) (x'' : type473 A B) (R' : type1413 A B) : (term1179 A B lt2 z x'' R') = (term1180 A B lt2 z x'' R').
Proof. exact (MK_COMB (@lem330735 A lt2 z) (@lem330734 A B x'' R')). Qed.
Lemma lem330738 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem330739 {A : Type'} (f : type1402 A) (x : A) : (f x) = (@I (A -> A -> Prop) f x).
Proof. exact (@lem330738 A (A -> Prop) f x). Qed.
Lemma lem330740 {A : Type'} (lt2 : type1402 A) (z : A) : (lt2 z) = (@I (A -> A -> Prop) lt2 z).
Proof. exact (@lem330739 A lt2 z). Qed.
Lemma lem330741 {A B : Type'} (x'' : type473 A B) (R' : type1413 A B) : (@I ((A -> B -> Prop) -> A) x'' R') = (@I ((A -> B -> Prop) -> A) x'' R').
Proof. exact (eq_refl (@I ((A -> B -> Prop) -> A) x'' R')). Qed.
Lemma lem330742 {A B : Type'} (lt2 : type1402 A) (z : A) (x'' : type473 A B) (R' : type1413 A B) : (term1180 A B lt2 z x'' R') = (term1181 A B lt2 z x'' R').
Proof. exact (MK_COMB (@lem330740 A lt2 z) (@lem330741 A B x'' R')). Qed.
Lemma lem330744 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem330745 {A : Type'} (f : A -> Prop) (x : A) : (f x) = (@I (A -> Prop) f x).
Proof. exact (@lem330744 A Prop f x). Qed.
Lemma lem330746 {A B : Type'} (lt2 : type1402 A) (z : A) (x'' : type473 A B) (R' : type1413 A B) : (term1181 A B lt2 z x'' R') = (term1182 A B lt2 z x'' R').
Proof. exact (@lem330745 A (@I (A -> A -> Prop) lt2 z) (@I ((A -> B -> Prop) -> A) x'' R')). Qed.
Lemma lem330747 {A B : Type'} (lt2 : type1402 A) (z : A) (x'' : type473 A B) (R' : type1413 A B) : (term1180 A B lt2 z x'' R') = (term1182 A B lt2 z x'' R').
Proof. exact (TRANS (@lem330742 A B lt2 z x'' R') (@lem330746 A B lt2 z x'' R')). Qed.
Lemma lem330748 {A B : Type'} (lt2 : type1402 A) (z : A) (x'' : type473 A B) (R' : type1413 A B) : (term1179 A B lt2 z x'' R') = (term1182 A B lt2 z x'' R').
Proof. exact (TRANS (@lem330736 A B lt2 z x'' R') (@lem330747 A B lt2 z x'' R')). Qed.
Lemma lem330749 {A B : Type'} (lt2 : type1402 A) (z : A) (x'' : type473 A B) (R' : type1413 A B) : (term1183 A B lt2 z x'' R') = (term1184 A B lt2 z x'' R').
Proof. exact (MK_COMB (@lem330724) (@lem330748 A B lt2 z x'' R')). Qed.
Lemma lem330750 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem330751 {A B : Type'} (lt2 : type1402 A) (z : A) (x'' : type473 A B) (R' : type1413 A B) : (term1185 A B lt2 z x'' R') = (term1186 A B lt2 z x'' R').
Proof. exact (MK_COMB (@lem330750) (@lem330749 A B lt2 z x'' R')). Qed.
Lemma lem330752 {A B : Type'} (lt2 : type1402 A) (x'' : type473 A B) (f : type467 A B) (R' : type1413 A B) (z : A) : (term1187 A B lt2 x'' f R' z) = (term1188 A B lt2 x'' f R' z).
Proof. exact (MK_COMB (@lem330751 A B lt2 z x'' R') (@lem330723 A B f R' z)). Qed.
Lemma lem330753 {A B : Type'} (lt2 : type1402 A) (x'' : type473 A B) (f : type467 A B) (R' : type1413 A B) : (term1189 A B lt2 x'' f R') = (term1190 A B lt2 x'' f R').
Proof. exact (fun_ext (fun z : A => @lem330752 A B lt2 x'' f R' z)). Qed.
Lemma lem330754 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem330755 {A B : Type'} (lt2 : type1402 A) (x'' : type473 A B) (f : type467 A B) (R' : type1413 A B) : (term1191 A B lt2 x'' f R') = (term1192 A B lt2 x'' f R').
Proof. exact (MK_COMB (@lem330754 A) (@lem330753 A B lt2 x'' f R')). Qed.
Lemma lem330756 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem330757 {A B : Type'} (lt2 : type1402 A) (x'' : type473 A B) (f : type467 A B) (R' : type1413 A B) : (term1193 A B lt2 x'' f R') = (term1194 A B lt2 x'' f R').
Proof. exact (MK_COMB (@lem330756) (@lem330755 A B lt2 x'' f R')). Qed.
Lemma lem330758 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (f : type467 A B) (x'' : type473 A B) (R' : type1413 A B) : (term1195 A B lt2 H f x'' R') = (term1196 A B lt2 H f x'' R').
Proof. exact (MK_COMB (@lem330757 A B lt2 x'' f R') (@lem330690 A B H f x'' R')). Qed.
Lemma lem330759 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem330760 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (f : type467 A B) (x'' : type473 A B) (R' : type1413 A B) : (term1197 A B lt2 H f x'' R') = (term1198 A B lt2 H f x'' R').
Proof. exact (MK_COMB (@lem330759) (@lem330758 A B lt2 H f x'' R')). Qed.
Lemma lem330761 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (f : type467 A B) (x'' : type473 A B) (R : type1413 A B) (R' : type1413 A B) : (term476 A B lt2 H f x'' R R') = (term1199 A B lt2 H f x'' R R').
Proof. exact (MK_COMB (@lem330760 A B lt2 H f x'' R') (@lem330634 A B R R')). Qed.
Lemma lem330762 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (f : type467 A B) (x'' : type473 A B) (R : type1413 A B) : (term478 A B lt2 H f x'' R) = (term1200 A B lt2 H f x'' R).
Proof. exact (fun_ext (fun R' : type1413 A B => @lem330761 A B lt2 H f x'' R R')). Qed.
Lemma lem330763 {A B : Type'} : (@all (A -> B -> Prop)) = (@all (A -> B -> Prop)).
Proof. exact (eq_refl (@all (A -> B -> Prop))). Qed.
Lemma lem330764 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (f : type467 A B) (x'' : type473 A B) (R : type1413 A B) : (term480 A B lt2 H f x'' R) = (term1201 A B lt2 H f x'' R).
Proof. exact (MK_COMB (@lem330763 A B) (@lem330762 A B lt2 H f x'' R)). Qed.
Lemma lem330765 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (f : type467 A B) (x'' : type473 A B) (R : type1413 A B) (h1 : term480 A B lt2 H f x'' R) : term1201 A B lt2 H f x'' R.
Proof. exact (EQ_MP (@lem330764 A B lt2 H f x'' R) (@lem330441 A B lt2 H f x'' R h1)). Qed.
Lemma lem330911 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem330912 {A B : Type'} (f : type549 A B) (x : A -> B) : (f x) = (@I ((A -> B) -> A -> B) f x).
Proof. exact (@lem330911 (A -> B) (A -> B) f x). Qed.
Lemma lem330913 {A B : Type'} (H : type549 A B) (f : A -> B) : (H f) = (@I ((A -> B) -> A -> B) H f).
Proof. exact (@lem330912 A B H f). Qed.
Lemma lem330914 {A : Type'} (x : A) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem330915 {A B : Type'} (H : type549 A B) (f : A -> B) (x : A) : (H f x) = (@I ((A -> B) -> A -> B) H f x).
Proof. exact (MK_COMB (@lem330913 A B H f) (@lem330914 A x)). Qed.
Lemma lem330917 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem330918 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (@lem330917 A B f x). Qed.
Lemma lem330919 {A B : Type'} (H : type549 A B) (f : A -> B) (x : A) : (@I ((A -> B) -> A -> B) H f x) = (term916 A B H f x).
Proof. exact (@lem330918 A B (@I ((A -> B) -> A -> B) H f) x). Qed.
Lemma lem330921 {A B : Type'} (H : type549 A B) (f : A -> B) (x : A) : (H f x) = (term916 A B H f x).
Proof. exact (TRANS (@lem330915 A B H f x) (@lem330919 A B H f x)). Qed.
Lemma lem330922 {A B : Type'} (S' : type1413 A B) (x : A) : (S' x) = (S' x).
Proof. exact (eq_refl (S' x)). Qed.
Lemma lem330923 {A B : Type'} (S' : type1413 A B) (H : type549 A B) (f : A -> B) (x : A) : (term72 A B S' H f x) = (term917 A B S' H f x).
Proof. exact (MK_COMB (@lem330922 A B S' x) (@lem330921 A B H f x)). Qed.
Lemma lem330925 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem330926 {A B : Type'} (f : type1413 A B) (x : A) : (f x) = (@I (A -> B -> Prop) f x).
Proof. exact (@lem330925 A (B -> Prop) f x). Qed.
Lemma lem330927 {A B : Type'} (S' : type1413 A B) (x : A) : (S' x) = (@I (A -> B -> Prop) S' x).
Proof. exact (@lem330926 A B S' x). Qed.
Lemma lem330928 {A B : Type'} (H : type549 A B) (f : A -> B) (x : A) : (term916 A B H f x) = (term916 A B H f x).
Proof. exact (eq_refl (term916 A B H f x)). Qed.
Lemma lem330929 {A B : Type'} (S' : type1413 A B) (H : type549 A B) (f : A -> B) (x : A) : (term917 A B S' H f x) = (term918 A B S' H f x).
Proof. exact (MK_COMB (@lem330927 A B S' x) (@lem330928 A B H f x)). Qed.
Lemma lem330931 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem330932 {B : Type'} (f : B -> Prop) (x : B) : (f x) = (@I (B -> Prop) f x).
Proof. exact (@lem330931 B Prop f x). Qed.
Lemma lem330933 {A B : Type'} (S' : type1413 A B) (H : type549 A B) (f : A -> B) (x : A) : (term918 A B S' H f x) = (term919 A B S' H f x).
Proof. exact (@lem330932 B (@I (A -> B -> Prop) S' x) (term916 A B H f x)). Qed.
Lemma lem330934 {A B : Type'} (S' : type1413 A B) (H : type549 A B) (f : A -> B) (x : A) : (term917 A B S' H f x) = (term919 A B S' H f x).
Proof. exact (TRANS (@lem330929 A B S' H f x) (@lem330933 A B S' H f x)). Qed.
Lemma lem330935 {A B : Type'} (S' : type1413 A B) (H : type549 A B) (f : A -> B) (x : A) : (term72 A B S' H f x) = (term919 A B S' H f x).
Proof. exact (TRANS (@lem330923 A B S' H f x) (@lem330934 A B S' H f x)). Qed.
Lemma lem330936 {B : Type'} : (@eq B) = (@eq B).
Proof. exact (eq_refl (@eq B)). Qed.
Lemma lem330943 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem330944 {A B : Type'} (f : type549 A B) (x : A -> B) : (f x) = (@I ((A -> B) -> A -> B) f x).
Proof. exact (@lem330943 (A -> B) (A -> B) f x). Qed.
Lemma lem330945 {A B : Type'} (H : type549 A B) (f : A -> B) : (H f) = (@I ((A -> B) -> A -> B) H f).
Proof. exact (@lem330944 A B H f). Qed.
Lemma lem330946 {A : Type'} (x : A) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem330947 {A B : Type'} (H : type549 A B) (f : A -> B) (x : A) : (H f x) = (@I ((A -> B) -> A -> B) H f x).
Proof. exact (MK_COMB (@lem330945 A B H f) (@lem330946 A x)). Qed.
Lemma lem330949 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem330950 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (@lem330949 A B f x). Qed.
Lemma lem330951 {A B : Type'} (H : type549 A B) (f : A -> B) (x : A) : (@I ((A -> B) -> A -> B) H f x) = (term916 A B H f x).
Proof. exact (@lem330950 A B (@I ((A -> B) -> A -> B) H f) x). Qed.
Lemma lem330953 {A B : Type'} (H : type549 A B) (f : A -> B) (x : A) : (H f x) = (term916 A B H f x).
Proof. exact (TRANS (@lem330947 A B H f x) (@lem330951 A B H f x)). Qed.
Lemma lem330960 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem330961 {A B : Type'} (f : type549 A B) (x : A -> B) : (f x) = (@I ((A -> B) -> A -> B) f x).
Proof. exact (@lem330960 (A -> B) (A -> B) f x). Qed.
Lemma lem330962 {A B : Type'} (H : type549 A B) (g : A -> B) : (H g) = (@I ((A -> B) -> A -> B) H g).
Proof. exact (@lem330961 A B H g). Qed.
Lemma lem330963 {A : Type'} (x : A) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem330964 {A B : Type'} (H : type549 A B) (g : A -> B) (x : A) : (H g x) = (@I ((A -> B) -> A -> B) H g x).
Proof. exact (MK_COMB (@lem330962 A B H g) (@lem330963 A x)). Qed.
Lemma lem330966 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem330967 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (@lem330966 A B f x). Qed.
Lemma lem330968 {A B : Type'} (H : type549 A B) (g : A -> B) (x : A) : (@I ((A -> B) -> A -> B) H g x) = (term916 A B H g x).
Proof. exact (@lem330967 A B (@I ((A -> B) -> A -> B) H g) x). Qed.
Lemma lem330970 {A B : Type'} (H : type549 A B) (g : A -> B) (x : A) : (H g x) = (term916 A B H g x).
Proof. exact (TRANS (@lem330964 A B H g x) (@lem330968 A B H g x)). Qed.
Lemma lem330971 {A B : Type'} (H : type549 A B) (f : A -> B) (x : A) : (term1202 A B H f x) = (term1203 A B H f x).
Proof. exact (MK_COMB (@lem330936 B) (@lem330953 A B H f x)). Qed.
Lemma lem330972 {A B : Type'} (f : A -> B) (H : type549 A B) (g : A -> B) (x : A) : ((H f x) = (H g x)) = ((term916 A B H f x) = (term916 A B H g x)).
Proof. exact (MK_COMB (@lem330971 A B H f x) (@lem330970 A B H g x)). Qed.
Lemma lem330973 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem330974 {A B : Type'} (f : A -> B) (H : type549 A B) (g : A -> B) (x : A) : (term1204 A B f H g x) = (term1205 A B f H g x).
Proof. exact (MK_COMB (@lem330973) (@lem330972 A B f H g x)). Qed.
Lemma lem330975 {A B : Type'} (g : A -> B) (S' : type1413 A B) (H : type549 A B) (f : A -> B) (x : A) : (term80 A B g S' H f x) = (term1206 A B g S' H f x).
Proof. exact (MK_COMB (@lem330974 A B f H g x) (@lem330935 A B S' H f x)). Qed.
Lemma lem330976 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem330977 {A B : Type'} (S' : type1413 A B) : S' = S'.
Proof. exact (eq_refl S'). Qed.
Lemma lem330986 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem330987 {A B : Type'} (f : type515 A B) (x : A -> B) : (f x) = (@I ((A -> B) -> (A -> B) -> A -> A) f x).
Proof. exact (@lem330986 (A -> B) (type548 A B) f x). Qed.
Lemma lem330988 {A B : Type'} (z' : type515 A B) (f : A -> B) : (z' f) = (@I ((A -> B) -> (A -> B) -> A -> A) z' f).
Proof. exact (@lem330987 A B z' f). Qed.
Lemma lem330989 {A B : Type'} (g : A -> B) : g = g.
Proof. exact (eq_refl g). Qed.
Lemma lem330990 {A B : Type'} (z' : type515 A B) (f : A -> B) (g : A -> B) : (z' f g) = (@I ((A -> B) -> (A -> B) -> A -> A) z' f g).
Proof. exact (MK_COMB (@lem330988 A B z' f) (@lem330989 A B g)). Qed.
Lemma lem330992 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem330993 {A B : Type'} (f : type548 A B) (x : A -> B) : (f x) = (@I ((A -> B) -> A -> A) f x).
Proof. exact (@lem330992 (A -> B) (A -> A) f x). Qed.
Lemma lem330994 {A B : Type'} (z' : type515 A B) (f : A -> B) (g : A -> B) : (@I ((A -> B) -> (A -> B) -> A -> A) z' f g) = (term1207 A B z' f g).
Proof. exact (@lem330993 A B (@I ((A -> B) -> (A -> B) -> A -> A) z' f) g). Qed.
Lemma lem330995 {A B : Type'} (z' : type515 A B) (f : A -> B) (g : A -> B) : (z' f g) = (term1207 A B z' f g).
Proof. exact (TRANS (@lem330990 A B z' f g) (@lem330994 A B z' f g)). Qed.
Lemma lem330996 {A : Type'} (x : A) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem330997 {A B : Type'} (z' : type515 A B) (f : A -> B) (g : A -> B) (x : A) : (z' f g x) = (term1208 A B z' f g x).
Proof. exact (MK_COMB (@lem330995 A B z' f g) (@lem330996 A x)). Qed.
Lemma lem330999 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem331000 {A : Type'} (f : A -> A) (x : A) : (f x) = (@I (A -> A) f x).
Proof. exact (@lem330999 A A f x). Qed.
Lemma lem331001 {A B : Type'} (z' : type515 A B) (f : A -> B) (g : A -> B) (x : A) : (term1208 A B z' f g x) = (term1209 A B z' f g x).
Proof. exact (@lem331000 A (term1207 A B z' f g) x). Qed.
Lemma lem331003 {A B : Type'} (z' : type515 A B) (f : A -> B) (g : A -> B) (x : A) : (z' f g x) = (term1209 A B z' f g x).
Proof. exact (TRANS (@lem330997 A B z' f g x) (@lem331001 A B z' f g x)). Qed.
Lemma lem331004 {A B : Type'} (f : A -> B) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem331013 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem331014 {A B : Type'} (f : type515 A B) (x : A -> B) : (f x) = (@I ((A -> B) -> (A -> B) -> A -> A) f x).
Proof. exact (@lem331013 (A -> B) (type548 A B) f x). Qed.
Lemma lem331015 {A B : Type'} (z' : type515 A B) (f : A -> B) : (z' f) = (@I ((A -> B) -> (A -> B) -> A -> A) z' f).
Proof. exact (@lem331014 A B z' f). Qed.
Lemma lem331016 {A B : Type'} (g : A -> B) : g = g.
Proof. exact (eq_refl g). Qed.
Lemma lem331017 {A B : Type'} (z' : type515 A B) (f : A -> B) (g : A -> B) : (z' f g) = (@I ((A -> B) -> (A -> B) -> A -> A) z' f g).
Proof. exact (MK_COMB (@lem331015 A B z' f) (@lem331016 A B g)). Qed.
Lemma lem331019 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem331020 {A B : Type'} (f : type548 A B) (x : A -> B) : (f x) = (@I ((A -> B) -> A -> A) f x).
Proof. exact (@lem331019 (A -> B) (A -> A) f x). Qed.
Lemma lem331021 {A B : Type'} (z' : type515 A B) (f : A -> B) (g : A -> B) : (@I ((A -> B) -> (A -> B) -> A -> A) z' f g) = (term1207 A B z' f g).
Proof. exact (@lem331020 A B (@I ((A -> B) -> (A -> B) -> A -> A) z' f) g). Qed.
Lemma lem331022 {A B : Type'} (z' : type515 A B) (f : A -> B) (g : A -> B) : (z' f g) = (term1207 A B z' f g).
Proof. exact (TRANS (@lem331017 A B z' f g) (@lem331021 A B z' f g)). Qed.
Lemma lem331023 {A : Type'} (x : A) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem331024 {A B : Type'} (z' : type515 A B) (f : A -> B) (g : A -> B) (x : A) : (z' f g x) = (term1208 A B z' f g x).
Proof. exact (MK_COMB (@lem331022 A B z' f g) (@lem331023 A x)). Qed.
Lemma lem331026 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem331027 {A : Type'} (f : A -> A) (x : A) : (f x) = (@I (A -> A) f x).
Proof. exact (@lem331026 A A f x). Qed.
Lemma lem331028 {A B : Type'} (z' : type515 A B) (f : A -> B) (g : A -> B) (x : A) : (term1208 A B z' f g x) = (term1209 A B z' f g x).
Proof. exact (@lem331027 A (term1207 A B z' f g) x). Qed.
Lemma lem331030 {A B : Type'} (z' : type515 A B) (f : A -> B) (g : A -> B) (x : A) : (z' f g x) = (term1209 A B z' f g x).
Proof. exact (TRANS (@lem331024 A B z' f g x) (@lem331028 A B z' f g x)). Qed.
Lemma lem331031 {A B : Type'} (z' : type515 A B) (f : A -> B) (g : A -> B) (x : A) : (term1210 A B z' f g x) = (term1211 A B z' f g x).
Proof. exact (MK_COMB (@lem331004 A B f) (@lem331030 A B z' f g x)). Qed.
Lemma lem331033 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem331034 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (@lem331033 A B f x). Qed.
Lemma lem331035 {A B : Type'} (z' : type515 A B) (f : A -> B) (g : A -> B) (x : A) : (term1211 A B z' f g x) = (term1212 A B z' f g x).
Proof. exact (@lem331034 A B f (term1209 A B z' f g x)). Qed.
Lemma lem331036 {A B : Type'} (z' : type515 A B) (f : A -> B) (g : A -> B) (x : A) : (term1210 A B z' f g x) = (term1212 A B z' f g x).
Proof. exact (TRANS (@lem331031 A B z' f g x) (@lem331035 A B z' f g x)). Qed.
Lemma lem331037 {A B : Type'} (S' : type1413 A B) (z' : type515 A B) (f : A -> B) (g : A -> B) (x : A) : (term1213 A B S' z' f g x) = (term1214 A B S' z' f g x).
Proof. exact (MK_COMB (@lem330977 A B S') (@lem331003 A B z' f g x)). Qed.
Lemma lem331038 {A B : Type'} (S' : type1413 A B) (z' : type515 A B) (f : A -> B) (g : A -> B) (x : A) : (term1215 A B S' z' f g x) = (term1216 A B S' z' f g x).
Proof. exact (MK_COMB (@lem331037 A B S' z' f g x) (@lem331036 A B z' f g x)). Qed.
Lemma lem331040 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem331041 {A B : Type'} (f : type1413 A B) (x : A) : (f x) = (@I (A -> B -> Prop) f x).
Proof. exact (@lem331040 A (B -> Prop) f x). Qed.
Lemma lem331042 {A B : Type'} (S' : type1413 A B) (z' : type515 A B) (f : A -> B) (g : A -> B) (x : A) : (term1214 A B S' z' f g x) = (term1217 A B S' z' f g x).
Proof. exact (@lem331041 A B S' (term1209 A B z' f g x)). Qed.
Lemma lem331043 {A B : Type'} (z' : type515 A B) (f : A -> B) (g : A -> B) (x : A) : (term1212 A B z' f g x) = (term1212 A B z' f g x).
Proof. exact (eq_refl (term1212 A B z' f g x)). Qed.
Lemma lem331044 {A B : Type'} (S' : type1413 A B) (z' : type515 A B) (f : A -> B) (g : A -> B) (x : A) : (term1216 A B S' z' f g x) = (term1218 A B S' z' f g x).
Proof. exact (MK_COMB (@lem331042 A B S' z' f g x) (@lem331043 A B z' f g x)). Qed.
Lemma lem331046 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem331047 {B : Type'} (f : B -> Prop) (x : B) : (f x) = (@I (B -> Prop) f x).
Proof. exact (@lem331046 B Prop f x). Qed.
Lemma lem331048 {A B : Type'} (S' : type1413 A B) (z' : type515 A B) (f : A -> B) (g : A -> B) (x : A) : (term1218 A B S' z' f g x) = (term1219 A B S' z' f g x).
Proof. exact (@lem331047 B (term1217 A B S' z' f g x) (term1212 A B z' f g x)). Qed.
Lemma lem331049 {A B : Type'} (S' : type1413 A B) (z' : type515 A B) (f : A -> B) (g : A -> B) (x : A) : (term1216 A B S' z' f g x) = (term1219 A B S' z' f g x).
Proof. exact (TRANS (@lem331044 A B S' z' f g x) (@lem331048 A B S' z' f g x)). Qed.
Lemma lem331050 {A B : Type'} (S' : type1413 A B) (z' : type515 A B) (f : A -> B) (g : A -> B) (x : A) : (term1215 A B S' z' f g x) = (term1219 A B S' z' f g x).
Proof. exact (TRANS (@lem331038 A B S' z' f g x) (@lem331049 A B S' z' f g x)). Qed.
Lemma lem331051 {A B : Type'} (S' : type1413 A B) (z' : type515 A B) (f : A -> B) (g : A -> B) (x : A) : (term1220 A B S' z' f g x) = (term1221 A B S' z' f g x).
Proof. exact (MK_COMB (@lem330976) (@lem331050 A B S' z' f g x)). Qed.
Lemma lem331052 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem331053 {B : Type'} : (@eq B) = (@eq B).
Proof. exact (eq_refl (@eq B)). Qed.
Lemma lem331054 {A B : Type'} (f : A -> B) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem331063 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem331064 {A B : Type'} (f : type515 A B) (x : A -> B) : (f x) = (@I ((A -> B) -> (A -> B) -> A -> A) f x).
Proof. exact (@lem331063 (A -> B) (type548 A B) f x). Qed.
Lemma lem331065 {A B : Type'} (z' : type515 A B) (f : A -> B) : (z' f) = (@I ((A -> B) -> (A -> B) -> A -> A) z' f).
Proof. exact (@lem331064 A B z' f). Qed.
Lemma lem331066 {A B : Type'} (g : A -> B) : g = g.
Proof. exact (eq_refl g). Qed.
Lemma lem331067 {A B : Type'} (z' : type515 A B) (f : A -> B) (g : A -> B) : (z' f g) = (@I ((A -> B) -> (A -> B) -> A -> A) z' f g).
Proof. exact (MK_COMB (@lem331065 A B z' f) (@lem331066 A B g)). Qed.
Lemma lem331069 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem331070 {A B : Type'} (f : type548 A B) (x : A -> B) : (f x) = (@I ((A -> B) -> A -> A) f x).
Proof. exact (@lem331069 (A -> B) (A -> A) f x). Qed.
Lemma lem331071 {A B : Type'} (z' : type515 A B) (f : A -> B) (g : A -> B) : (@I ((A -> B) -> (A -> B) -> A -> A) z' f g) = (term1207 A B z' f g).
Proof. exact (@lem331070 A B (@I ((A -> B) -> (A -> B) -> A -> A) z' f) g). Qed.
Lemma lem331072 {A B : Type'} (z' : type515 A B) (f : A -> B) (g : A -> B) : (z' f g) = (term1207 A B z' f g).
Proof. exact (TRANS (@lem331067 A B z' f g) (@lem331071 A B z' f g)). Qed.
Lemma lem331073 {A : Type'} (x : A) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem331074 {A B : Type'} (z' : type515 A B) (f : A -> B) (g : A -> B) (x : A) : (z' f g x) = (term1208 A B z' f g x).
Proof. exact (MK_COMB (@lem331072 A B z' f g) (@lem331073 A x)). Qed.
Lemma lem331076 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem331077 {A : Type'} (f : A -> A) (x : A) : (f x) = (@I (A -> A) f x).
Proof. exact (@lem331076 A A f x). Qed.
Lemma lem331078 {A B : Type'} (z' : type515 A B) (f : A -> B) (g : A -> B) (x : A) : (term1208 A B z' f g x) = (term1209 A B z' f g x).
Proof. exact (@lem331077 A (term1207 A B z' f g) x). Qed.
Lemma lem331080 {A B : Type'} (z' : type515 A B) (f : A -> B) (g : A -> B) (x : A) : (z' f g x) = (term1209 A B z' f g x).
Proof. exact (TRANS (@lem331074 A B z' f g x) (@lem331078 A B z' f g x)). Qed.
Lemma lem331081 {A B : Type'} (z' : type515 A B) (f : A -> B) (g : A -> B) (x : A) : (term1210 A B z' f g x) = (term1211 A B z' f g x).
Proof. exact (MK_COMB (@lem331054 A B f) (@lem331080 A B z' f g x)). Qed.
Lemma lem331083 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem331084 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (@lem331083 A B f x). Qed.
Lemma lem331085 {A B : Type'} (z' : type515 A B) (f : A -> B) (g : A -> B) (x : A) : (term1211 A B z' f g x) = (term1212 A B z' f g x).
Proof. exact (@lem331084 A B f (term1209 A B z' f g x)). Qed.
Lemma lem331086 {A B : Type'} (z' : type515 A B) (f : A -> B) (g : A -> B) (x : A) : (term1210 A B z' f g x) = (term1212 A B z' f g x).
Proof. exact (TRANS (@lem331081 A B z' f g x) (@lem331085 A B z' f g x)). Qed.
Lemma lem331087 {A B : Type'} (g : A -> B) : g = g.
Proof. exact (eq_refl g). Qed.
Lemma lem331096 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem331097 {A B : Type'} (f : type515 A B) (x : A -> B) : (f x) = (@I ((A -> B) -> (A -> B) -> A -> A) f x).
Proof. exact (@lem331096 (A -> B) (type548 A B) f x). Qed.
Lemma lem331098 {A B : Type'} (z' : type515 A B) (f : A -> B) : (z' f) = (@I ((A -> B) -> (A -> B) -> A -> A) z' f).
Proof. exact (@lem331097 A B z' f). Qed.
Lemma lem331099 {A B : Type'} (g : A -> B) : g = g.
Proof. exact (eq_refl g). Qed.
Lemma lem331100 {A B : Type'} (z' : type515 A B) (f : A -> B) (g : A -> B) : (z' f g) = (@I ((A -> B) -> (A -> B) -> A -> A) z' f g).
Proof. exact (MK_COMB (@lem331098 A B z' f) (@lem331099 A B g)). Qed.
Lemma lem331102 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem331103 {A B : Type'} (f : type548 A B) (x : A -> B) : (f x) = (@I ((A -> B) -> A -> A) f x).
Proof. exact (@lem331102 (A -> B) (A -> A) f x). Qed.
Lemma lem331104 {A B : Type'} (z' : type515 A B) (f : A -> B) (g : A -> B) : (@I ((A -> B) -> (A -> B) -> A -> A) z' f g) = (term1207 A B z' f g).
Proof. exact (@lem331103 A B (@I ((A -> B) -> (A -> B) -> A -> A) z' f) g). Qed.
Lemma lem331105 {A B : Type'} (z' : type515 A B) (f : A -> B) (g : A -> B) : (z' f g) = (term1207 A B z' f g).
Proof. exact (TRANS (@lem331100 A B z' f g) (@lem331104 A B z' f g)). Qed.
Lemma lem331106 {A : Type'} (x : A) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem331107 {A B : Type'} (z' : type515 A B) (f : A -> B) (g : A -> B) (x : A) : (z' f g x) = (term1208 A B z' f g x).
Proof. exact (MK_COMB (@lem331105 A B z' f g) (@lem331106 A x)). Qed.
Lemma lem331109 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem331110 {A : Type'} (f : A -> A) (x : A) : (f x) = (@I (A -> A) f x).
Proof. exact (@lem331109 A A f x). Qed.
Lemma lem331111 {A B : Type'} (z' : type515 A B) (f : A -> B) (g : A -> B) (x : A) : (term1208 A B z' f g x) = (term1209 A B z' f g x).
Proof. exact (@lem331110 A (term1207 A B z' f g) x). Qed.
Lemma lem331113 {A B : Type'} (z' : type515 A B) (f : A -> B) (g : A -> B) (x : A) : (z' f g x) = (term1209 A B z' f g x).
Proof. exact (TRANS (@lem331107 A B z' f g x) (@lem331111 A B z' f g x)). Qed.
Lemma lem331114 {A B : Type'} (z' : type515 A B) (f : A -> B) (g : A -> B) (x : A) : (term1222 A B z' f g x) = (term1223 A B z' f g x).
Proof. exact (MK_COMB (@lem331087 A B g) (@lem331113 A B z' f g x)). Qed.
Lemma lem331116 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem331117 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (@lem331116 A B f x). Qed.
Lemma lem331118 {A B : Type'} (z' : type515 A B) (f : A -> B) (g : A -> B) (x : A) : (term1223 A B z' f g x) = (term1224 A B z' f g x).
Proof. exact (@lem331117 A B g (term1209 A B z' f g x)). Qed.
Lemma lem331119 {A B : Type'} (z' : type515 A B) (f : A -> B) (g : A -> B) (x : A) : (term1222 A B z' f g x) = (term1224 A B z' f g x).
Proof. exact (TRANS (@lem331114 A B z' f g x) (@lem331118 A B z' f g x)). Qed.
Lemma lem331120 {A B : Type'} (z' : type515 A B) (f : A -> B) (g : A -> B) (x : A) : (term1225 A B z' f g x) = (term1226 A B z' f g x).
Proof. exact (MK_COMB (@lem331053 B) (@lem331086 A B z' f g x)). Qed.
Lemma lem331121 {A B : Type'} (z' : type515 A B) (f : A -> B) (g : A -> B) (x : A) : ((term1210 A B z' f g x) = (term1222 A B z' f g x)) = ((term1212 A B z' f g x) = (term1224 A B z' f g x)).
Proof. exact (MK_COMB (@lem331120 A B z' f g x) (@lem331119 A B z' f g x)). Qed.
Lemma lem331122 {A B : Type'} (z' : type515 A B) (f : A -> B) (g : A -> B) (x : A) : (term1227 A B z' f g x) = (term1228 A B z' f g x).
Proof. exact (MK_COMB (@lem331052) (@lem331121 A B z' f g x)). Qed.
Lemma lem331123 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem331124 {A B : Type'} (z' : type515 A B) (f : A -> B) (g : A -> B) (x : A) : (term1229 A B z' f g x) = (term1230 A B z' f g x).
Proof. exact (MK_COMB (@lem331123) (@lem331122 A B z' f g x)). Qed.
Lemma lem331125 {A B : Type'} (S' : type1413 A B) (z' : type515 A B) (f : A -> B) (g : A -> B) (x : A) : (term1231 A B S' z' f g x) = (term1232 A B S' z' f g x).
Proof. exact (MK_COMB (@lem331124 A B z' f g x) (@lem331051 A B S' z' f g x)). Qed.
Lemma lem331126 {A : Type'} (lt2 : type1402 A) : lt2 = lt2.
Proof. exact (eq_refl lt2). Qed.
Lemma lem331135 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem331136 {A B : Type'} (f : type515 A B) (x : A -> B) : (f x) = (@I ((A -> B) -> (A -> B) -> A -> A) f x).
Proof. exact (@lem331135 (A -> B) (type548 A B) f x). Qed.
Lemma lem331137 {A B : Type'} (z' : type515 A B) (f : A -> B) : (z' f) = (@I ((A -> B) -> (A -> B) -> A -> A) z' f).
Proof. exact (@lem331136 A B z' f). Qed.
Lemma lem331138 {A B : Type'} (g : A -> B) : g = g.
Proof. exact (eq_refl g). Qed.
Lemma lem331139 {A B : Type'} (z' : type515 A B) (f : A -> B) (g : A -> B) : (z' f g) = (@I ((A -> B) -> (A -> B) -> A -> A) z' f g).
Proof. exact (MK_COMB (@lem331137 A B z' f) (@lem331138 A B g)). Qed.
Lemma lem331141 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem331142 {A B : Type'} (f : type548 A B) (x : A -> B) : (f x) = (@I ((A -> B) -> A -> A) f x).
Proof. exact (@lem331141 (A -> B) (A -> A) f x). Qed.
Lemma lem331143 {A B : Type'} (z' : type515 A B) (f : A -> B) (g : A -> B) : (@I ((A -> B) -> (A -> B) -> A -> A) z' f g) = (term1207 A B z' f g).
Proof. exact (@lem331142 A B (@I ((A -> B) -> (A -> B) -> A -> A) z' f) g). Qed.
Lemma lem331144 {A B : Type'} (z' : type515 A B) (f : A -> B) (g : A -> B) : (z' f g) = (term1207 A B z' f g).
Proof. exact (TRANS (@lem331139 A B z' f g) (@lem331143 A B z' f g)). Qed.
Lemma lem331145 {A : Type'} (x : A) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem331146 {A B : Type'} (z' : type515 A B) (f : A -> B) (g : A -> B) (x : A) : (z' f g x) = (term1208 A B z' f g x).
Proof. exact (MK_COMB (@lem331144 A B z' f g) (@lem331145 A x)). Qed.
Lemma lem331148 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem331149 {A : Type'} (f : A -> A) (x : A) : (f x) = (@I (A -> A) f x).
Proof. exact (@lem331148 A A f x). Qed.
Lemma lem331150 {A B : Type'} (z' : type515 A B) (f : A -> B) (g : A -> B) (x : A) : (term1208 A B z' f g x) = (term1209 A B z' f g x).
Proof. exact (@lem331149 A (term1207 A B z' f g) x). Qed.
Lemma lem331152 {A B : Type'} (z' : type515 A B) (f : A -> B) (g : A -> B) (x : A) : (z' f g x) = (term1209 A B z' f g x).
Proof. exact (TRANS (@lem331146 A B z' f g x) (@lem331150 A B z' f g x)). Qed.
Lemma lem331153 {A : Type'} (x : A) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem331154 {A B : Type'} (lt2 : type1402 A) (z' : type515 A B) (f : A -> B) (g : A -> B) (x : A) : (term1233 A B lt2 z' f g x) = (term1234 A B lt2 z' f g x).
Proof. exact (MK_COMB (@lem331126 A lt2) (@lem331152 A B z' f g x)). Qed.
Lemma lem331155 {A B : Type'} (lt2 : type1402 A) (z' : type515 A B) (f : A -> B) (g : A -> B) (x : A) : (term1235 A B lt2 z' f g x) = (term1236 A B lt2 z' f g x).
Proof. exact (MK_COMB (@lem331154 A B lt2 z' f g x) (@lem331153 A x)). Qed.
Lemma lem331157 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem331158 {A : Type'} (f : type1402 A) (x : A) : (f x) = (@I (A -> A -> Prop) f x).
Proof. exact (@lem331157 A (A -> Prop) f x). Qed.
Lemma lem331159 {A B : Type'} (lt2 : type1402 A) (z' : type515 A B) (f : A -> B) (g : A -> B) (x : A) : (term1234 A B lt2 z' f g x) = (term1237 A B lt2 z' f g x).
Proof. exact (@lem331158 A lt2 (term1209 A B z' f g x)). Qed.
Lemma lem331160 {A : Type'} (x : A) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem331161 {A B : Type'} (lt2 : type1402 A) (z' : type515 A B) (f : A -> B) (g : A -> B) (x : A) : (term1236 A B lt2 z' f g x) = (term1238 A B lt2 z' f g x).
Proof. exact (MK_COMB (@lem331159 A B lt2 z' f g x) (@lem331160 A x)). Qed.
Lemma lem331163 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem331164 {A : Type'} (f : A -> Prop) (x : A) : (f x) = (@I (A -> Prop) f x).
Proof. exact (@lem331163 A Prop f x). Qed.
Lemma lem331165 {A B : Type'} (lt2 : type1402 A) (z' : type515 A B) (f : A -> B) (g : A -> B) (x : A) : (term1238 A B lt2 z' f g x) = (term1239 A B lt2 z' f g x).
Proof. exact (@lem331164 A (term1237 A B lt2 z' f g x) x). Qed.
Lemma lem331166 {A B : Type'} (lt2 : type1402 A) (z' : type515 A B) (f : A -> B) (g : A -> B) (x : A) : (term1236 A B lt2 z' f g x) = (term1239 A B lt2 z' f g x).
Proof. exact (TRANS (@lem331161 A B lt2 z' f g x) (@lem331165 A B lt2 z' f g x)). Qed.
Lemma lem331167 {A B : Type'} (lt2 : type1402 A) (z' : type515 A B) (f : A -> B) (g : A -> B) (x : A) : (term1235 A B lt2 z' f g x) = (term1239 A B lt2 z' f g x).
Proof. exact (TRANS (@lem331155 A B lt2 z' f g x) (@lem331166 A B lt2 z' f g x)). Qed.
Lemma lem331168 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem331169 {A B : Type'} (lt2 : type1402 A) (z' : type515 A B) (f : A -> B) (g : A -> B) (x : A) : (term1240 A B lt2 z' f g x) = (term1241 A B lt2 z' f g x).
Proof. exact (MK_COMB (@lem331168) (@lem331167 A B lt2 z' f g x)). Qed.
Lemma lem331170 {A B : Type'} (lt2 : type1402 A) (S' : type1413 A B) (z' : type515 A B) (f : A -> B) (g : A -> B) (x : A) : (term1242 A B lt2 S' z' f g x) = (term1243 A B lt2 S' z' f g x).
Proof. exact (MK_COMB (@lem331169 A B lt2 z' f g x) (@lem331125 A B S' z' f g x)). Qed.
Lemma lem331171 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem331172 {A B : Type'} (lt2 : type1402 A) (S' : type1413 A B) (z' : type515 A B) (f : A -> B) (g : A -> B) (x : A) : (term1244 A B lt2 S' z' f g x) = (term1245 A B lt2 S' z' f g x).
Proof. exact (MK_COMB (@lem331171) (@lem331170 A B lt2 S' z' f g x)). Qed.
Lemma lem331173 {A B : Type'} (lt2 : type1402 A) (z' : type515 A B) (g : A -> B) (S' : type1413 A B) (H : type549 A B) (f : A -> B) (x : A) : (term1246 A B lt2 z' g S' H f x) = (term1247 A B lt2 z' g S' H f x).
Proof. exact (MK_COMB (@lem331172 A B lt2 S' z' f g x) (@lem330975 A B g S' H f x)). Qed.
Lemma lem331174 {A B : Type'} (lt2 : type1402 A) (z' : type515 A B) (g : A -> B) (S' : type1413 A B) (H : type549 A B) (f : A -> B) : (term1248 A B lt2 z' g S' H f) = (term1249 A B lt2 z' g S' H f).
Proof. exact (fun_ext (fun x : A => @lem331173 A B lt2 z' g S' H f x)). Qed.
Lemma lem331175 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem331176 {A B : Type'} (lt2 : type1402 A) (z' : type515 A B) (g : A -> B) (S' : type1413 A B) (H : type549 A B) (f : A -> B) : (term1250 A B lt2 z' g S' H f) = (term1251 A B lt2 z' g S' H f).
Proof. exact (MK_COMB (@lem331175 A) (@lem331174 A B lt2 z' g S' H f)). Qed.
Lemma lem331177 {A B : Type'} (lt2 : type1402 A) (z' : type515 A B) (S' : type1413 A B) (H : type549 A B) (f : A -> B) : (term1252 A B lt2 z' S' H f) = (term1253 A B lt2 z' S' H f).
Proof. exact (fun_ext (fun g : A -> B => @lem331176 A B lt2 z' g S' H f)). Qed.
Lemma lem331178 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem331179 {A B : Type'} (lt2 : type1402 A) (z' : type515 A B) (S' : type1413 A B) (H : type549 A B) (f : A -> B) : (term278 A B lt2 z' S' H f) = (term1254 A B lt2 z' S' H f).
Proof. exact (MK_COMB (@lem331178 A B) (@lem331177 A B lt2 z' S' H f)). Qed.
Lemma lem331180 {A B : Type'} (lt2 : type1402 A) (z' : type515 A B) (S' : type1413 A B) (H : type549 A B) : (term280 A B lt2 z' S' H) = (term1255 A B lt2 z' S' H).
Proof. exact (fun_ext (fun f : A -> B => @lem331179 A B lt2 z' S' H f)). Qed.
Lemma lem331181 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem331182 {A B : Type'} (lt2 : type1402 A) (z' : type515 A B) (S' : type1413 A B) (H : type549 A B) : (term282 A B lt2 z' S' H) = (term1256 A B lt2 z' S' H).
Proof. exact (MK_COMB (@lem331181 A B) (@lem331180 A B lt2 z' S' H)). Qed.
Lemma lem331183 {A B : Type'} (lt2 : type1402 A) (z' : type515 A B) (S' : type1413 A B) (H : type549 A B) (h1 : term282 A B lt2 z' S' H) : term1256 A B lt2 z' S' H.
Proof. exact (EQ_MP (@lem331182 A B lt2 z' S' H) (@lem330443 A B lt2 z' S' H h1)). Qed.
Lemma lem331353 {A : Type'} (P : A -> Prop) (Q : Prop) : (term1257 A P Q) = (term1258 A P Q).
Proof. exact (EQ_MP (@lem19025 A P Q) (@lem19024 A P Q)). Qed.
Lemma lem331354 {A : Type'} (P : A -> Prop) (Q : Prop) : (term1257 A P Q) = (term1258 A P Q).
Proof. exact (@lem331353 A P Q). Qed.
Lemma lem331355 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (f : type467 A B) (x'' : type473 A B) (R' : type1413 A B) : (term1259 A B lt2 H f x'' R') = (term1260 A B lt2 H f x'' R').
Proof. exact (@lem331354 A (term1190 A B lt2 x'' f R') (term1173 A B H f x'' R')). Qed.
Lemma lem331356 {A B : Type'} (lt2 : type1402 A) (x'' : type473 A B) (f : type467 A B) (R' : type1413 A B) (z : A) : (term1261 A B lt2 x'' f R' z) = (term1188 A B lt2 x'' f R' z).
Proof. exact (eq_refl (term1261 A B lt2 x'' f R' z)). Qed.
Lemma lem331357 {A B : Type'} (lt2 : type1402 A) (x'' : type473 A B) (f : type467 A B) (R' : type1413 A B) : (term1262 A B lt2 x'' f R') = (term1190 A B lt2 x'' f R').
Proof. exact (fun_ext (fun z : A => @lem331356 A B lt2 x'' f R' z)). Qed.
Lemma lem331358 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem331359 {A B : Type'} (lt2 : type1402 A) (x'' : type473 A B) (f : type467 A B) (R' : type1413 A B) : (term1263 A B lt2 x'' f R') = (term1192 A B lt2 x'' f R').
Proof. exact (MK_COMB (@lem331358 A) (@lem331357 A B lt2 x'' f R')). Qed.
Lemma lem331360 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem331361 {A B : Type'} (lt2 : type1402 A) (x'' : type473 A B) (f : type467 A B) (R' : type1413 A B) : (term1264 A B lt2 x'' f R') = (term1194 A B lt2 x'' f R').
Proof. exact (MK_COMB (@lem331360) (@lem331359 A B lt2 x'' f R')). Qed.
Lemma lem331362 {A B : Type'} (H : type549 A B) (f : type467 A B) (x'' : type473 A B) (R' : type1413 A B) : (term1173 A B H f x'' R') = (term1173 A B H f x'' R').
Proof. exact (eq_refl (term1173 A B H f x'' R')). Qed.
Lemma lem331363 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (f : type467 A B) (x'' : type473 A B) (R' : type1413 A B) : (term1259 A B lt2 H f x'' R') = (term1196 A B lt2 H f x'' R').
Proof. exact (MK_COMB (@lem331361 A B lt2 x'' f R') (@lem331362 A B H f x'' R')). Qed.
Lemma lem331364 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem331365 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (f : type467 A B) (x'' : type473 A B) (R' : type1413 A B) : (term1265 A B lt2 H f x'' R') = (term1266 A B lt2 H f x'' R').
Proof. exact (MK_COMB (@lem331364) (@lem331363 A B lt2 H f x'' R')). Qed.
Lemma lem331366 {A B : Type'} (lt2 : type1402 A) (x'' : type473 A B) (f : type467 A B) (R' : type1413 A B) (z : A) : (term1261 A B lt2 x'' f R' z) = (term1188 A B lt2 x'' f R' z).
Proof. exact (eq_refl (term1261 A B lt2 x'' f R' z)). Qed.
Lemma lem331367 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem331368 {A B : Type'} (lt2 : type1402 A) (x'' : type473 A B) (f : type467 A B) (R' : type1413 A B) (z : A) : (term1267 A B lt2 x'' f R' z) = (term1268 A B lt2 x'' f R' z).
Proof. exact (MK_COMB (@lem331367) (@lem331366 A B lt2 x'' f R' z)). Qed.
Lemma lem331369 {A B : Type'} (H : type549 A B) (f : type467 A B) (x'' : type473 A B) (R' : type1413 A B) : (term1173 A B H f x'' R') = (term1173 A B H f x'' R').
Proof. exact (eq_refl (term1173 A B H f x'' R')). Qed.
Lemma lem331370 {A B : Type'} (lt2 : type1402 A) (z : A) (H : type549 A B) (f : type467 A B) (x'' : type473 A B) (R' : type1413 A B) : (term1269 A B lt2 z H f x'' R') = (term1270 A B lt2 z H f x'' R').
Proof. exact (MK_COMB (@lem331368 A B lt2 x'' f R' z) (@lem331369 A B H f x'' R')). Qed.
Lemma lem331371 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (f : type467 A B) (x'' : type473 A B) (R' : type1413 A B) : (term1271 A B lt2 H f x'' R') = (term1272 A B lt2 H f x'' R').
Proof. exact (fun_ext (fun z : A => @lem331370 A B lt2 z H f x'' R')). Qed.
Lemma lem331372 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem331373 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (f : type467 A B) (x'' : type473 A B) (R' : type1413 A B) : (term1260 A B lt2 H f x'' R') = (term1273 A B lt2 H f x'' R').
Proof. exact (MK_COMB (@lem331372 A) (@lem331371 A B lt2 H f x'' R')). Qed.
Lemma lem331374 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (f : type467 A B) (x'' : type473 A B) (R' : type1413 A B) : ((term1259 A B lt2 H f x'' R') = (term1260 A B lt2 H f x'' R')) = ((term1196 A B lt2 H f x'' R') = (term1273 A B lt2 H f x'' R')).
Proof. exact (MK_COMB (@lem331365 A B lt2 H f x'' R') (@lem331373 A B lt2 H f x'' R')). Qed.
Lemma lem331375 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (f : type467 A B) (x'' : type473 A B) (R' : type1413 A B) : (term1196 A B lt2 H f x'' R') = (term1273 A B lt2 H f x'' R').
Proof. exact (EQ_MP (@lem331374 A B lt2 H f x'' R') (@lem331355 A B lt2 H f x'' R')). Qed.
Lemma lem331376 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem331377 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (f : type467 A B) (x'' : type473 A B) (R' : type1413 A B) : (term1198 A B lt2 H f x'' R') = (term1274 A B lt2 H f x'' R').
Proof. exact (MK_COMB (@lem331376) (@lem331375 A B lt2 H f x'' R')). Qed.
Lemma lem331378 {A B : Type'} (R : type1413 A B) (R' : type1413 A B) : (term1157 A B R R') = (term1157 A B R R').
Proof. exact (eq_refl (term1157 A B R R')). Qed.
Lemma lem331379 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (f : type467 A B) (x'' : type473 A B) (R : type1413 A B) (R' : type1413 A B) : (term1199 A B lt2 H f x'' R R') = (term1275 A B lt2 H f x'' R R').
Proof. exact (MK_COMB (@lem331377 A B lt2 H f x'' R') (@lem331378 A B R R')). Qed.
Lemma lem331381 {A : Type'} (P : A -> Prop) (Q : Prop) : (term1276 A P Q) = (term1277 A P Q).
Proof. exact (EQ_MP (@lem19013 A P Q) (@lem19012 A P Q)). Qed.
Lemma lem331382 {A : Type'} (P : A -> Prop) (Q : Prop) : (term1276 A P Q) = (term1277 A P Q).
Proof. exact (@lem331381 A P Q). Qed.
Lemma lem331383 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (f : type467 A B) (x'' : type473 A B) (R : type1413 A B) (R' : type1413 A B) : (term1278 A B lt2 H f x'' R R') = (term1279 A B lt2 H f x'' R R').
Proof. exact (@lem331382 A (term1272 A B lt2 H f x'' R') (term1157 A B R R')). Qed.
Lemma lem331384 {A B : Type'} (lt2 : type1402 A) (z : A) (H : type549 A B) (f : type467 A B) (x'' : type473 A B) (R' : type1413 A B) : (term1280 A B lt2 H f x'' R' z) = (term1270 A B lt2 z H f x'' R').
Proof. exact (eq_refl (term1280 A B lt2 H f x'' R' z)). Qed.
Lemma lem331385 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (f : type467 A B) (x'' : type473 A B) (R' : type1413 A B) : (term1281 A B lt2 H f x'' R') = (term1272 A B lt2 H f x'' R').
Proof. exact (fun_ext (fun z : A => @lem331384 A B lt2 z H f x'' R')). Qed.
Lemma lem331386 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem331387 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (f : type467 A B) (x'' : type473 A B) (R' : type1413 A B) : (term1282 A B lt2 H f x'' R') = (term1273 A B lt2 H f x'' R').
Proof. exact (MK_COMB (@lem331386 A) (@lem331385 A B lt2 H f x'' R')). Qed.
Lemma lem331388 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem331389 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (f : type467 A B) (x'' : type473 A B) (R' : type1413 A B) : (term1283 A B lt2 H f x'' R') = (term1274 A B lt2 H f x'' R').
Proof. exact (MK_COMB (@lem331388) (@lem331387 A B lt2 H f x'' R')). Qed.
Lemma lem331390 {A B : Type'} (R : type1413 A B) (R' : type1413 A B) : (term1157 A B R R') = (term1157 A B R R').
Proof. exact (eq_refl (term1157 A B R R')). Qed.
Lemma lem331391 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (f : type467 A B) (x'' : type473 A B) (R : type1413 A B) (R' : type1413 A B) : (term1278 A B lt2 H f x'' R R') = (term1275 A B lt2 H f x'' R R').
Proof. exact (MK_COMB (@lem331389 A B lt2 H f x'' R') (@lem331390 A B R R')). Qed.
Lemma lem331392 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem331393 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (f : type467 A B) (x'' : type473 A B) (R : type1413 A B) (R' : type1413 A B) : (term1284 A B lt2 H f x'' R R') = (term1285 A B lt2 H f x'' R R').
Proof. exact (MK_COMB (@lem331392) (@lem331391 A B lt2 H f x'' R R')). Qed.
Lemma lem331394 {A B : Type'} (lt2 : type1402 A) (z : A) (H : type549 A B) (f : type467 A B) (x'' : type473 A B) (R' : type1413 A B) : (term1280 A B lt2 H f x'' R' z) = (term1270 A B lt2 z H f x'' R').
Proof. exact (eq_refl (term1280 A B lt2 H f x'' R' z)). Qed.
Lemma lem331395 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem331396 {A B : Type'} (lt2 : type1402 A) (z : A) (H : type549 A B) (f : type467 A B) (x'' : type473 A B) (R' : type1413 A B) : (term1286 A B lt2 H f x'' R' z) = (term1287 A B lt2 z H f x'' R').
Proof. exact (MK_COMB (@lem331395) (@lem331394 A B lt2 z H f x'' R')). Qed.
Lemma lem331397 {A B : Type'} (R : type1413 A B) (R' : type1413 A B) : (term1157 A B R R') = (term1157 A B R R').
Proof. exact (eq_refl (term1157 A B R R')). Qed.
Lemma lem331398 {A B : Type'} (lt2 : type1402 A) (z : A) (H : type549 A B) (f : type467 A B) (x'' : type473 A B) (R : type1413 A B) (R' : type1413 A B) : (term1288 A B lt2 H f x'' z R R') = (term1289 A B lt2 z H f x'' R R').
Proof. exact (MK_COMB (@lem331396 A B lt2 z H f x'' R') (@lem331397 A B R R')). Qed.
Lemma lem331399 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (f : type467 A B) (x'' : type473 A B) (R : type1413 A B) (R' : type1413 A B) : (term1290 A B lt2 H f x'' R R') = (term1291 A B lt2 H f x'' R R').
Proof. exact (fun_ext (fun z : A => @lem331398 A B lt2 z H f x'' R R')). Qed.
Lemma lem331400 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem331401 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (f : type467 A B) (x'' : type473 A B) (R : type1413 A B) (R' : type1413 A B) : (term1279 A B lt2 H f x'' R R') = (term1292 A B lt2 H f x'' R R').
Proof. exact (MK_COMB (@lem331400 A) (@lem331399 A B lt2 H f x'' R R')). Qed.
Lemma lem331402 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (f : type467 A B) (x'' : type473 A B) (R : type1413 A B) (R' : type1413 A B) : ((term1278 A B lt2 H f x'' R R') = (term1279 A B lt2 H f x'' R R')) = ((term1275 A B lt2 H f x'' R R') = (term1292 A B lt2 H f x'' R R')).
Proof. exact (MK_COMB (@lem331393 A B lt2 H f x'' R R') (@lem331401 A B lt2 H f x'' R R')). Qed.
Lemma lem331403 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (f : type467 A B) (x'' : type473 A B) (R : type1413 A B) (R' : type1413 A B) : (term1275 A B lt2 H f x'' R R') = (term1292 A B lt2 H f x'' R R').
Proof. exact (EQ_MP (@lem331402 A B lt2 H f x'' R R') (@lem331383 A B lt2 H f x'' R R')). Qed.
Lemma lem331405 {A : Type'} (P : Prop) (Q : A -> Prop) : (term846 A P Q) = (term845 A P Q).
Proof. exact (EQ_MP (@lem19007 A P Q) (@lem19006 A P Q)). Qed.
Lemma lem331406 {A : Type'} (P : Prop) (Q : A -> Prop) : (term846 A P Q) = (term845 A P Q).
Proof. exact (@lem331405 A P Q). Qed.
Lemma lem331407 {A B : Type'} (lt2 : type1402 A) (z : A) (H : type549 A B) (f : type467 A B) (x'' : type473 A B) (R : type1413 A B) (R' : type1413 A B) : (term1293 A B lt2 z H f x'' R R') = (term1294 A B lt2 z H f x'' R R').
Proof. exact (@lem331406 A (term1270 A B lt2 z H f x'' R') (term1156 A B R R')). Qed.
Lemma lem331408 {A B : Type'} (R : type1413 A B) (R' : type1413 A B) (a0 : A) : (term1295 A B R R' a0) = (term1155 A B R R' a0).
Proof. exact (eq_refl (term1295 A B R R' a0)). Qed.
Lemma lem331409 {A B : Type'} (R : type1413 A B) (R' : type1413 A B) : (term1296 A B R R') = (term1156 A B R R').
Proof. exact (fun_ext (fun a0 : A => @lem331408 A B R R' a0)). Qed.
Lemma lem331410 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem331411 {A B : Type'} (R : type1413 A B) (R' : type1413 A B) : (term1297 A B R R') = (term1157 A B R R').
Proof. exact (MK_COMB (@lem331410 A) (@lem331409 A B R R')). Qed.
Lemma lem331412 {A B : Type'} (lt2 : type1402 A) (z : A) (H : type549 A B) (f : type467 A B) (x'' : type473 A B) (R' : type1413 A B) : (term1287 A B lt2 z H f x'' R') = (term1287 A B lt2 z H f x'' R').
Proof. exact (eq_refl (term1287 A B lt2 z H f x'' R')). Qed.
Lemma lem331413 {A B : Type'} (lt2 : type1402 A) (z : A) (H : type549 A B) (f : type467 A B) (x'' : type473 A B) (R : type1413 A B) (R' : type1413 A B) : (term1293 A B lt2 z H f x'' R R') = (term1289 A B lt2 z H f x'' R R').
Proof. exact (MK_COMB (@lem331412 A B lt2 z H f x'' R') (@lem331411 A B R R')). Qed.
Lemma lem331414 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem331415 {A B : Type'} (lt2 : type1402 A) (z : A) (H : type549 A B) (f : type467 A B) (x'' : type473 A B) (R : type1413 A B) (R' : type1413 A B) : (term1298 A B lt2 z H f x'' R R') = (term1299 A B lt2 z H f x'' R R').
Proof. exact (MK_COMB (@lem331414) (@lem331413 A B lt2 z H f x'' R R')). Qed.
Lemma lem331416 {A B : Type'} (R : type1413 A B) (R' : type1413 A B) (a0 : A) : (term1295 A B R R' a0) = (term1155 A B R R' a0).
Proof. exact (eq_refl (term1295 A B R R' a0)). Qed.
Lemma lem331417 {A B : Type'} (lt2 : type1402 A) (z : A) (H : type549 A B) (f : type467 A B) (x'' : type473 A B) (R' : type1413 A B) : (term1287 A B lt2 z H f x'' R') = (term1287 A B lt2 z H f x'' R').
Proof. exact (eq_refl (term1287 A B lt2 z H f x'' R')). Qed.
Lemma lem331418 {A B : Type'} (lt2 : type1402 A) (z : A) (H : type549 A B) (f : type467 A B) (x'' : type473 A B) (R : type1413 A B) (R' : type1413 A B) (a0 : A) : (term1300 A B lt2 z H f x'' R R' a0) = (term1301 A B lt2 z H f x'' R R' a0).
Proof. exact (MK_COMB (@lem331417 A B lt2 z H f x'' R') (@lem331416 A B R R' a0)). Qed.
Lemma lem331419 {A B : Type'} (lt2 : type1402 A) (z : A) (H : type549 A B) (f : type467 A B) (x'' : type473 A B) (R : type1413 A B) (R' : type1413 A B) : (term1302 A B lt2 z H f x'' R R') = (term1303 A B lt2 z H f x'' R R').
Proof. exact (fun_ext (fun a0 : A => @lem331418 A B lt2 z H f x'' R R' a0)). Qed.
Lemma lem331420 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem331421 {A B : Type'} (lt2 : type1402 A) (z : A) (H : type549 A B) (f : type467 A B) (x'' : type473 A B) (R : type1413 A B) (R' : type1413 A B) : (term1294 A B lt2 z H f x'' R R') = (term1304 A B lt2 z H f x'' R R').
Proof. exact (MK_COMB (@lem331420 A) (@lem331419 A B lt2 z H f x'' R R')). Qed.
Lemma lem331422 {A B : Type'} (lt2 : type1402 A) (z : A) (H : type549 A B) (f : type467 A B) (x'' : type473 A B) (R : type1413 A B) (R' : type1413 A B) : ((term1293 A B lt2 z H f x'' R R') = (term1294 A B lt2 z H f x'' R R')) = ((term1289 A B lt2 z H f x'' R R') = (term1304 A B lt2 z H f x'' R R')).
Proof. exact (MK_COMB (@lem331415 A B lt2 z H f x'' R R') (@lem331421 A B lt2 z H f x'' R R')). Qed.
Lemma lem331423 {A B : Type'} (lt2 : type1402 A) (z : A) (H : type549 A B) (f : type467 A B) (x'' : type473 A B) (R : type1413 A B) (R' : type1413 A B) : (term1289 A B lt2 z H f x'' R R') = (term1304 A B lt2 z H f x'' R R').
Proof. exact (EQ_MP (@lem331422 A B lt2 z H f x'' R R') (@lem331407 A B lt2 z H f x'' R R')). Qed.
Lemma lem331425 {A : Type'} (P : Prop) (Q : A -> Prop) : (term846 A P Q) = (term845 A P Q).
Proof. exact (EQ_MP (@lem19007 A P Q) (@lem19006 A P Q)). Qed.
Lemma lem331426 {B : Type'} (P : Prop) (Q : B -> Prop) : (term846 B P Q) = (term845 B P Q).
Proof. exact (@lem331425 B P Q). Qed.
Lemma lem331427 {A B : Type'} (lt2 : type1402 A) (z : A) (H : type549 A B) (f : type467 A B) (x'' : type473 A B) (R : type1413 A B) (R' : type1413 A B) (a0 : A) : (term1305 A B lt2 z H f x'' R R' a0) = (term1306 A B lt2 z H f x'' R R' a0).
Proof. exact (@lem331426 B (term1270 A B lt2 z H f x'' R') (term1154 A B R R' a0)). Qed.
Lemma lem331428 {A B : Type'} (R : type1413 A B) (R' : type1413 A B) (a0 : A) (a1 : B) : (term1307 A B R R' a0 a1) = (term1153 A B R R' a0 a1).
Proof. exact (eq_refl (term1307 A B R R' a0 a1)). Qed.
Lemma lem331429 {A B : Type'} (R : type1413 A B) (R' : type1413 A B) (a0 : A) : (term1308 A B R R' a0) = (term1154 A B R R' a0).
Proof. exact (fun_ext (fun a1 : B => @lem331428 A B R R' a0 a1)). Qed.
Lemma lem331430 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem331431 {A B : Type'} (R : type1413 A B) (R' : type1413 A B) (a0 : A) : (term1309 A B R R' a0) = (term1155 A B R R' a0).
Proof. exact (MK_COMB (@lem331430 B) (@lem331429 A B R R' a0)). Qed.
Lemma lem331432 {A B : Type'} (lt2 : type1402 A) (z : A) (H : type549 A B) (f : type467 A B) (x'' : type473 A B) (R' : type1413 A B) : (term1287 A B lt2 z H f x'' R') = (term1287 A B lt2 z H f x'' R').
Proof. exact (eq_refl (term1287 A B lt2 z H f x'' R')). Qed.
Lemma lem331433 {A B : Type'} (lt2 : type1402 A) (z : A) (H : type549 A B) (f : type467 A B) (x'' : type473 A B) (R : type1413 A B) (R' : type1413 A B) (a0 : A) : (term1305 A B lt2 z H f x'' R R' a0) = (term1301 A B lt2 z H f x'' R R' a0).
Proof. exact (MK_COMB (@lem331432 A B lt2 z H f x'' R') (@lem331431 A B R R' a0)). Qed.
Lemma lem331434 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem331435 {A B : Type'} (lt2 : type1402 A) (z : A) (H : type549 A B) (f : type467 A B) (x'' : type473 A B) (R : type1413 A B) (R' : type1413 A B) (a0 : A) : (term1310 A B lt2 z H f x'' R R' a0) = (term1311 A B lt2 z H f x'' R R' a0).
Proof. exact (MK_COMB (@lem331434) (@lem331433 A B lt2 z H f x'' R R' a0)). Qed.
Lemma lem331436 {A B : Type'} (R : type1413 A B) (R' : type1413 A B) (a0 : A) (a1 : B) : (term1307 A B R R' a0 a1) = (term1153 A B R R' a0 a1).
Proof. exact (eq_refl (term1307 A B R R' a0 a1)). Qed.
Lemma lem331437 {A B : Type'} (lt2 : type1402 A) (z : A) (H : type549 A B) (f : type467 A B) (x'' : type473 A B) (R' : type1413 A B) : (term1287 A B lt2 z H f x'' R') = (term1287 A B lt2 z H f x'' R').
Proof. exact (eq_refl (term1287 A B lt2 z H f x'' R')). Qed.
Lemma lem331438 {A B : Type'} (lt2 : type1402 A) (z : A) (H : type549 A B) (f : type467 A B) (x'' : type473 A B) (R : type1413 A B) (R' : type1413 A B) (a0 : A) (a1 : B) : (term1312 A B lt2 z H f x'' R R' a0 a1) = (term1313 A B lt2 z H f x'' R R' a0 a1).
Proof. exact (MK_COMB (@lem331437 A B lt2 z H f x'' R') (@lem331436 A B R R' a0 a1)). Qed.
Lemma lem331439 {A B : Type'} (lt2 : type1402 A) (z : A) (H : type549 A B) (f : type467 A B) (x'' : type473 A B) (R : type1413 A B) (R' : type1413 A B) (a0 : A) : (term1314 A B lt2 z H f x'' R R' a0) = (term1315 A B lt2 z H f x'' R R' a0).
Proof. exact (fun_ext (fun a1 : B => @lem331438 A B lt2 z H f x'' R R' a0 a1)). Qed.
Lemma lem331440 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem331441 {A B : Type'} (lt2 : type1402 A) (z : A) (H : type549 A B) (f : type467 A B) (x'' : type473 A B) (R : type1413 A B) (R' : type1413 A B) (a0 : A) : (term1306 A B lt2 z H f x'' R R' a0) = (term1316 A B lt2 z H f x'' R R' a0).
Proof. exact (MK_COMB (@lem331440 B) (@lem331439 A B lt2 z H f x'' R R' a0)). Qed.
Lemma lem331442 {A B : Type'} (lt2 : type1402 A) (z : A) (H : type549 A B) (f : type467 A B) (x'' : type473 A B) (R : type1413 A B) (R' : type1413 A B) (a0 : A) : ((term1305 A B lt2 z H f x'' R R' a0) = (term1306 A B lt2 z H f x'' R R' a0)) = ((term1301 A B lt2 z H f x'' R R' a0) = (term1316 A B lt2 z H f x'' R R' a0)).
Proof. exact (MK_COMB (@lem331435 A B lt2 z H f x'' R R' a0) (@lem331441 A B lt2 z H f x'' R R' a0)). Qed.
Lemma lem331443 {A B : Type'} (lt2 : type1402 A) (z : A) (H : type549 A B) (f : type467 A B) (x'' : type473 A B) (R : type1413 A B) (R' : type1413 A B) (a0 : A) : (term1301 A B lt2 z H f x'' R R' a0) = (term1316 A B lt2 z H f x'' R R' a0).
Proof. exact (EQ_MP (@lem331442 A B lt2 z H f x'' R R' a0) (@lem331427 A B lt2 z H f x'' R R' a0)). Qed.
Lemma lem331444 {A B : Type'} (lt2 : type1402 A) (z : A) (H : type549 A B) (f : type467 A B) (x'' : type473 A B) (R : type1413 A B) (R' : type1413 A B) : (term1303 A B lt2 z H f x'' R R') = (term1317 A B lt2 z H f x'' R R').
Proof. exact (fun_ext (fun a0 : A => @lem331443 A B lt2 z H f x'' R R' a0)). Qed.
Lemma lem331445 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem331446 {A B : Type'} (lt2 : type1402 A) (z : A) (H : type549 A B) (f : type467 A B) (x'' : type473 A B) (R : type1413 A B) (R' : type1413 A B) : (term1304 A B lt2 z H f x'' R R') = (term1318 A B lt2 z H f x'' R R').
Proof. exact (MK_COMB (@lem331445 A) (@lem331444 A B lt2 z H f x'' R R')). Qed.
Lemma lem331447 {A B : Type'} (lt2 : type1402 A) (z : A) (H : type549 A B) (f : type467 A B) (x'' : type473 A B) (R : type1413 A B) (R' : type1413 A B) : (term1289 A B lt2 z H f x'' R R') = (term1318 A B lt2 z H f x'' R R').
Proof. exact (TRANS (@lem331423 A B lt2 z H f x'' R R') (@lem331446 A B lt2 z H f x'' R R')). Qed.
Lemma lem331448 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (f : type467 A B) (x'' : type473 A B) (R : type1413 A B) (R' : type1413 A B) : (term1291 A B lt2 H f x'' R R') = (term1319 A B lt2 H f x'' R R').
Proof. exact (fun_ext (fun z : A => @lem331447 A B lt2 z H f x'' R R')). Qed.
Lemma lem331449 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem331450 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (f : type467 A B) (x'' : type473 A B) (R : type1413 A B) (R' : type1413 A B) : (term1292 A B lt2 H f x'' R R') = (term1320 A B lt2 H f x'' R R').
Proof. exact (MK_COMB (@lem331449 A) (@lem331448 A B lt2 H f x'' R R')). Qed.
Lemma lem331451 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (f : type467 A B) (x'' : type473 A B) (R : type1413 A B) (R' : type1413 A B) : (term1275 A B lt2 H f x'' R R') = (term1320 A B lt2 H f x'' R R').
Proof. exact (TRANS (@lem331403 A B lt2 H f x'' R R') (@lem331450 A B lt2 H f x'' R R')). Qed.
Lemma lem331452 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (f : type467 A B) (x'' : type473 A B) (R : type1413 A B) (R' : type1413 A B) : (term1199 A B lt2 H f x'' R R') = (term1320 A B lt2 H f x'' R R').
Proof. exact (TRANS (@lem331379 A B lt2 H f x'' R R') (@lem331451 A B lt2 H f x'' R R')). Qed.
Lemma lem331453 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (f : type467 A B) (x'' : type473 A B) (R : type1413 A B) : (term1200 A B lt2 H f x'' R) = (term1321 A B lt2 H f x'' R).
Proof. exact (fun_ext (fun R' : type1413 A B => @lem331452 A B lt2 H f x'' R R')). Qed.
Lemma lem331454 {A B : Type'} : (@all (A -> B -> Prop)) = (@all (A -> B -> Prop)).
Proof. exact (eq_refl (@all (A -> B -> Prop))). Qed.
Lemma lem331455 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (f : type467 A B) (x'' : type473 A B) (R : type1413 A B) : (term1201 A B lt2 H f x'' R) = (term1322 A B lt2 H f x'' R).
Proof. exact (MK_COMB (@lem331454 A B) (@lem331453 A B lt2 H f x'' R)). Qed.
Lemma lem331484 {A B : Type'} (lt2 : type1402 A) (z : A) (H : type549 A B) (f : type467 A B) (x'' : type473 A B) (R : type1413 A B) (R' : type1413 A B) (a0 : A) (a1 : B) : (term1313 A B lt2 z H f x'' R R' a0 a1) = (term1323 A B lt2 z H f x'' R R' a0 a1).
Proof. exact (@lem19699 (term1188 A B lt2 x'' f R' z) (term1173 A B H f x'' R') (term1153 A B R R' a0 a1)). Qed.
Lemma lem331485 {A B : Type'} (lt2 : type1402 A) (z : A) (H : type549 A B) (f : type467 A B) (x'' : type473 A B) (R : type1413 A B) (R' : type1413 A B) (a0 : A) : (term1315 A B lt2 z H f x'' R R' a0) = (term1324 A B lt2 z H f x'' R R' a0).
Proof. exact (fun_ext (fun a1 : B => @lem331484 A B lt2 z H f x'' R R' a0 a1)). Qed.
Lemma lem331486 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem331487 {A B : Type'} (lt2 : type1402 A) (z : A) (H : type549 A B) (f : type467 A B) (x'' : type473 A B) (R : type1413 A B) (R' : type1413 A B) (a0 : A) : (term1316 A B lt2 z H f x'' R R' a0) = (term1325 A B lt2 z H f x'' R R' a0).
Proof. exact (MK_COMB (@lem331486 B) (@lem331485 A B lt2 z H f x'' R R' a0)). Qed.
Lemma lem331488 {A B : Type'} (lt2 : type1402 A) (z : A) (H : type549 A B) (f : type467 A B) (x'' : type473 A B) (R : type1413 A B) (R' : type1413 A B) : (term1317 A B lt2 z H f x'' R R') = (term1326 A B lt2 z H f x'' R R').
Proof. exact (fun_ext (fun a0 : A => @lem331487 A B lt2 z H f x'' R R' a0)). Qed.
Lemma lem331489 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem331490 {A B : Type'} (lt2 : type1402 A) (z : A) (H : type549 A B) (f : type467 A B) (x'' : type473 A B) (R : type1413 A B) (R' : type1413 A B) : (term1318 A B lt2 z H f x'' R R') = (term1327 A B lt2 z H f x'' R R').
Proof. exact (MK_COMB (@lem331489 A) (@lem331488 A B lt2 z H f x'' R R')). Qed.
Lemma lem331491 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (f : type467 A B) (x'' : type473 A B) (R : type1413 A B) (R' : type1413 A B) : (term1319 A B lt2 H f x'' R R') = (term1328 A B lt2 H f x'' R R').
Proof. exact (fun_ext (fun z : A => @lem331490 A B lt2 z H f x'' R R')). Qed.
Lemma lem331492 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem331493 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (f : type467 A B) (x'' : type473 A B) (R : type1413 A B) (R' : type1413 A B) : (term1320 A B lt2 H f x'' R R') = (term1329 A B lt2 H f x'' R R').
Proof. exact (MK_COMB (@lem331492 A) (@lem331491 A B lt2 H f x'' R R')). Qed.
Lemma lem331494 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (f : type467 A B) (x'' : type473 A B) (R : type1413 A B) : (term1321 A B lt2 H f x'' R) = (term1330 A B lt2 H f x'' R).
Proof. exact (fun_ext (fun R' : type1413 A B => @lem331493 A B lt2 H f x'' R R')). Qed.
Lemma lem331495 {A B : Type'} : (@all (A -> B -> Prop)) = (@all (A -> B -> Prop)).
Proof. exact (eq_refl (@all (A -> B -> Prop))). Qed.
Lemma lem331496 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (f : type467 A B) (x'' : type473 A B) (R : type1413 A B) : (term1322 A B lt2 H f x'' R) = (term1331 A B lt2 H f x'' R).
Proof. exact (MK_COMB (@lem331495 A B) (@lem331494 A B lt2 H f x'' R)). Qed.
Lemma lem331497 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (f : type467 A B) (x'' : type473 A B) (R : type1413 A B) : (term1201 A B lt2 H f x'' R) = (term1331 A B lt2 H f x'' R).
Proof. exact (TRANS (@lem331455 A B lt2 H f x'' R) (@lem331496 A B lt2 H f x'' R)). Qed.
Lemma lem331498 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (f : type467 A B) (x'' : type473 A B) (R : type1413 A B) (h1 : term480 A B lt2 H f x'' R) : term1331 A B lt2 H f x'' R.
Proof. exact (EQ_MP (@lem331497 A B lt2 H f x'' R) (@lem330765 A B lt2 H f x'' R h1)). Qed.
Lemma lem331545 {A B : Type'} (lt2 : type1402 A) (z' : type515 A B) (g : A -> B) (S' : type1413 A B) (H : type549 A B) (f : A -> B) (x : A) : (term1247 A B lt2 z' g S' H f x) = (term1332 A B lt2 z' g S' H f x).
Proof. exact (@lem19490 ((term916 A B H f x) = (term916 A B H g x)) (term1243 A B lt2 S' z' f g x) (term919 A B S' H f x)). Qed.
Lemma lem331552 {A B : Type'} (lt2 : type1402 A) (z' : type515 A B) (g : A -> B) (S' : type1413 A B) (H : type549 A B) (f : A -> B) (x : A) : (term1333 A B lt2 z' g S' H f x) = (term1334 A B lt2 z' g S' H f x).
Proof. exact (@lem19699 (term1239 A B lt2 z' f g x) (term1232 A B S' z' f g x) (term919 A B S' H f x)). Qed.
Lemma lem331559 {A B : Type'} (lt2 : type1402 A) (S' : type1413 A B) (z' : type515 A B) (f : A -> B) (H : type549 A B) (g : A -> B) (x : A) : (term1335 A B lt2 S' z' f H g x) = (term1336 A B lt2 S' z' f H g x).
Proof. exact (@lem19699 (term1239 A B lt2 z' f g x) (term1232 A B S' z' f g x) ((term916 A B H f x) = (term916 A B H g x))). Qed.
Lemma lem331560 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem331561 {A B : Type'} (lt2 : type1402 A) (S' : type1413 A B) (z' : type515 A B) (f : A -> B) (H : type549 A B) (g : A -> B) (x : A) : (term1337 A B lt2 S' z' f H g x) = (term1338 A B lt2 S' z' f H g x).
Proof. exact (MK_COMB (@lem331560) (@lem331559 A B lt2 S' z' f H g x)). Qed.
Lemma lem331562 {A B : Type'} (lt2 : type1402 A) (z' : type515 A B) (g : A -> B) (S' : type1413 A B) (H : type549 A B) (f : A -> B) (x : A) : (term1332 A B lt2 z' g S' H f x) = (term1339 A B lt2 z' g S' H f x).
Proof. exact (MK_COMB (@lem331561 A B lt2 S' z' f H g x) (@lem331552 A B lt2 z' g S' H f x)). Qed.
Lemma lem331564 {A B : Type'} (lt2 : type1402 A) (z' : type515 A B) (g : A -> B) (S' : type1413 A B) (H : type549 A B) (f : A -> B) (x : A) : (term1247 A B lt2 z' g S' H f x) = (term1339 A B lt2 z' g S' H f x).
Proof. exact (TRANS (@lem331545 A B lt2 z' g S' H f x) (@lem331562 A B lt2 z' g S' H f x)). Qed.
Lemma lem331565 {A B : Type'} (lt2 : type1402 A) (z' : type515 A B) (g : A -> B) (S' : type1413 A B) (H : type549 A B) (f : A -> B) : (term1249 A B lt2 z' g S' H f) = (term1340 A B lt2 z' g S' H f).
Proof. exact (fun_ext (fun x : A => @lem331564 A B lt2 z' g S' H f x)). Qed.
Lemma lem331566 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem331567 {A B : Type'} (lt2 : type1402 A) (z' : type515 A B) (g : A -> B) (S' : type1413 A B) (H : type549 A B) (f : A -> B) : (term1251 A B lt2 z' g S' H f) = (term1341 A B lt2 z' g S' H f).
Proof. exact (MK_COMB (@lem331566 A) (@lem331565 A B lt2 z' g S' H f)). Qed.
Lemma lem331568 {A B : Type'} (lt2 : type1402 A) (z' : type515 A B) (S' : type1413 A B) (H : type549 A B) (f : A -> B) : (term1253 A B lt2 z' S' H f) = (term1342 A B lt2 z' S' H f).
Proof. exact (fun_ext (fun g : A -> B => @lem331567 A B lt2 z' g S' H f)). Qed.
Lemma lem331569 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem331570 {A B : Type'} (lt2 : type1402 A) (z' : type515 A B) (S' : type1413 A B) (H : type549 A B) (f : A -> B) : (term1254 A B lt2 z' S' H f) = (term1343 A B lt2 z' S' H f).
Proof. exact (MK_COMB (@lem331569 A B) (@lem331568 A B lt2 z' S' H f)). Qed.
Lemma lem331571 {A B : Type'} (lt2 : type1402 A) (z' : type515 A B) (S' : type1413 A B) (H : type549 A B) : (term1255 A B lt2 z' S' H) = (term1344 A B lt2 z' S' H).
Proof. exact (fun_ext (fun f : A -> B => @lem331570 A B lt2 z' S' H f)). Qed.
Lemma lem331572 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem331574 {A B : Type'} (lt2 : type1402 A) (z' : type515 A B) (S' : type1413 A B) (H : type549 A B) : (term1256 A B lt2 z' S' H) = (term1345 A B lt2 z' S' H).
Proof. exact (MK_COMB (@lem331572 A B) (@lem331571 A B lt2 z' S' H)). Qed.
Lemma lem331575 {A B : Type'} (lt2 : type1402 A) (z' : type515 A B) (S' : type1413 A B) (H : type549 A B) (h1 : term282 A B lt2 z' S' H) : term1345 A B lt2 z' S' H.
Proof. exact (EQ_MP (@lem331574 A B lt2 z' S' H) (@lem331183 A B lt2 z' S' H h1)). Qed.
Lemma lem331585 {A B : Type'} (_7109 : type1413 A B) (lt2 : type1402 A) (H : type549 A B) (f : type467 A B) (x'' : type473 A B) (R : type1413 A B) (h1 : term480 A B lt2 H f x'' R) : term1346 A B lt2 H f x'' R _7109.
Proof. exact (@lem331498 A B lt2 H f x'' R h1 _7109). Qed.
Lemma lem331586 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (f : type467 A B) (x'' : type473 A B) (R : type1413 A B) (_7109 : type1413 A B) : (term1346 A B lt2 H f x'' R _7109) = (term1329 A B lt2 H f x'' R _7109).
Proof. exact (eq_refl (term1346 A B lt2 H f x'' R _7109)). Qed.
Lemma lem331587 {A B : Type'} (_7109 : type1413 A B) (lt2 : type1402 A) (H : type549 A B) (f : type467 A B) (x'' : type473 A B) (R : type1413 A B) (h1 : term480 A B lt2 H f x'' R) : term1329 A B lt2 H f x'' R _7109.
Proof. exact (EQ_MP (@lem331586 A B lt2 H f x'' R _7109) (@lem331585 A B _7109 lt2 H f x'' R h1)). Qed.
Lemma lem331588 {A B : Type'} (_7109 : type1413 A B) (_7110 : A) (lt2 : type1402 A) (H : type549 A B) (f : type467 A B) (x'' : type473 A B) (R : type1413 A B) (h1 : term480 A B lt2 H f x'' R) : term1347 A B lt2 H f x'' R _7109 _7110.
Proof. exact (@lem331587 A B _7109 lt2 H f x'' R h1 _7110). Qed.
Lemma lem331589 {A B : Type'} (lt2 : type1402 A) (_7110 : A) (H : type549 A B) (f : type467 A B) (x'' : type473 A B) (R : type1413 A B) (_7109 : type1413 A B) : (term1347 A B lt2 H f x'' R _7109 _7110) = (term1327 A B lt2 _7110 H f x'' R _7109).
Proof. exact (eq_refl (term1347 A B lt2 H f x'' R _7109 _7110)). Qed.
Lemma lem331590 {A B : Type'} (_7110 : A) (_7109 : type1413 A B) (lt2 : type1402 A) (H : type549 A B) (f : type467 A B) (x'' : type473 A B) (R : type1413 A B) (h1 : term480 A B lt2 H f x'' R) : term1327 A B lt2 _7110 H f x'' R _7109.
Proof. exact (EQ_MP (@lem331589 A B lt2 _7110 H f x'' R _7109) (@lem331588 A B _7109 _7110 lt2 H f x'' R h1)). Qed.
Lemma lem331591 {A B : Type'} (_7110 : A) (_7109 : type1413 A B) (_7111 : A) (lt2 : type1402 A) (H : type549 A B) (f : type467 A B) (x'' : type473 A B) (R : type1413 A B) (h1 : term480 A B lt2 H f x'' R) : term1348 A B lt2 _7110 H f x'' R _7109 _7111.
Proof. exact (@lem331590 A B _7110 _7109 lt2 H f x'' R h1 _7111). Qed.
Lemma lem331592 {A B : Type'} (lt2 : type1402 A) (_7110 : A) (H : type549 A B) (f : type467 A B) (x'' : type473 A B) (R : type1413 A B) (_7109 : type1413 A B) (_7111 : A) : (term1348 A B lt2 _7110 H f x'' R _7109 _7111) = (term1325 A B lt2 _7110 H f x'' R _7109 _7111).
Proof. exact (eq_refl (term1348 A B lt2 _7110 H f x'' R _7109 _7111)). Qed.
Lemma lem331593 {A B : Type'} (_7110 : A) (_7109 : type1413 A B) (_7111 : A) (lt2 : type1402 A) (H : type549 A B) (f : type467 A B) (x'' : type473 A B) (R : type1413 A B) (h1 : term480 A B lt2 H f x'' R) : term1325 A B lt2 _7110 H f x'' R _7109 _7111.
Proof. exact (EQ_MP (@lem331592 A B lt2 _7110 H f x'' R _7109 _7111) (@lem331591 A B _7110 _7109 _7111 lt2 H f x'' R h1)). Qed.
Lemma lem331594 {A B : Type'} (_7110 : A) (_7109 : type1413 A B) (_7111 : A) (_7112 : B) (lt2 : type1402 A) (H : type549 A B) (f : type467 A B) (x'' : type473 A B) (R : type1413 A B) (h1 : term480 A B lt2 H f x'' R) : term1349 A B lt2 _7110 H f x'' R _7109 _7111 _7112.
Proof. exact (@lem331593 A B _7110 _7109 _7111 lt2 H f x'' R h1 _7112). Qed.
Lemma lem331595 {A B : Type'} (lt2 : type1402 A) (_7110 : A) (H : type549 A B) (f : type467 A B) (x'' : type473 A B) (R : type1413 A B) (_7109 : type1413 A B) (_7111 : A) (_7112 : B) : (term1349 A B lt2 _7110 H f x'' R _7109 _7111 _7112) = (term1323 A B lt2 _7110 H f x'' R _7109 _7111 _7112).
Proof. exact (eq_refl (term1349 A B lt2 _7110 H f x'' R _7109 _7111 _7112)). Qed.
Lemma lem331596 {A B : Type'} (_7110 : A) (_7109 : type1413 A B) (_7111 : A) (_7112 : B) (lt2 : type1402 A) (H : type549 A B) (f : type467 A B) (x'' : type473 A B) (R : type1413 A B) (h1 : term480 A B lt2 H f x'' R) : term1323 A B lt2 _7110 H f x'' R _7109 _7111 _7112.
Proof. exact (EQ_MP (@lem331595 A B lt2 _7110 H f x'' R _7109 _7111 _7112) (@lem331594 A B _7110 _7109 _7111 _7112 lt2 H f x'' R h1)). Qed.
Lemma lem331603 {A B : Type'} (_7115 : A -> B) (lt2 : type1402 A) (z' : type515 A B) (S' : type1413 A B) (H : type549 A B) (h1 : term282 A B lt2 z' S' H) : term1350 A B lt2 z' S' H _7115.
Proof. exact (@lem331575 A B lt2 z' S' H h1 _7115). Qed.
Lemma lem331604 {A B : Type'} (lt2 : type1402 A) (z' : type515 A B) (S' : type1413 A B) (H : type549 A B) (_7115 : A -> B) : (term1350 A B lt2 z' S' H _7115) = (term1343 A B lt2 z' S' H _7115).
Proof. exact (eq_refl (term1350 A B lt2 z' S' H _7115)). Qed.
Lemma lem331605 {A B : Type'} (_7115 : A -> B) (lt2 : type1402 A) (z' : type515 A B) (S' : type1413 A B) (H : type549 A B) (h1 : term282 A B lt2 z' S' H) : term1343 A B lt2 z' S' H _7115.
Proof. exact (EQ_MP (@lem331604 A B lt2 z' S' H _7115) (@lem331603 A B _7115 lt2 z' S' H h1)). Qed.
Lemma lem331606 {A B : Type'} (_7115 : A -> B) (_7116 : A -> B) (lt2 : type1402 A) (z' : type515 A B) (S' : type1413 A B) (H : type549 A B) (h1 : term282 A B lt2 z' S' H) : term1351 A B lt2 z' S' H _7115 _7116.
Proof. exact (@lem331605 A B _7115 lt2 z' S' H h1 _7116). Qed.
Lemma lem331607 {A B : Type'} (lt2 : type1402 A) (z' : type515 A B) (_7116 : A -> B) (S' : type1413 A B) (H : type549 A B) (_7115 : A -> B) : (term1351 A B lt2 z' S' H _7115 _7116) = (term1341 A B lt2 z' _7116 S' H _7115).
Proof. exact (eq_refl (term1351 A B lt2 z' S' H _7115 _7116)). Qed.
Lemma lem331608 {A B : Type'} (_7116 : A -> B) (_7115 : A -> B) (lt2 : type1402 A) (z' : type515 A B) (S' : type1413 A B) (H : type549 A B) (h1 : term282 A B lt2 z' S' H) : term1341 A B lt2 z' _7116 S' H _7115.
Proof. exact (EQ_MP (@lem331607 A B lt2 z' _7116 S' H _7115) (@lem331606 A B _7115 _7116 lt2 z' S' H h1)). Qed.
Lemma lem331609 {A B : Type'} (_7116 : A -> B) (_7115 : A -> B) (_7117 : A) (lt2 : type1402 A) (z' : type515 A B) (S' : type1413 A B) (H : type549 A B) (h1 : term282 A B lt2 z' S' H) : term1352 A B lt2 z' _7116 S' H _7115 _7117.
Proof. exact (@lem331608 A B _7116 _7115 lt2 z' S' H h1 _7117). Qed.
Lemma lem331610 {A B : Type'} (lt2 : type1402 A) (z' : type515 A B) (_7116 : A -> B) (S' : type1413 A B) (H : type549 A B) (_7115 : A -> B) (_7117 : A) : (term1352 A B lt2 z' _7116 S' H _7115 _7117) = (term1339 A B lt2 z' _7116 S' H _7115 _7117).
Proof. exact (eq_refl (term1352 A B lt2 z' _7116 S' H _7115 _7117)). Qed.
Lemma lem331611 {A B : Type'} (_7116 : A -> B) (_7115 : A -> B) (_7117 : A) (lt2 : type1402 A) (z' : type515 A B) (S' : type1413 A B) (H : type549 A B) (h1 : term282 A B lt2 z' S' H) : term1339 A B lt2 z' _7116 S' H _7115 _7117.
Proof. exact (EQ_MP (@lem331610 A B lt2 z' _7116 S' H _7115 _7117) (@lem331609 A B _7116 _7115 _7117 lt2 z' S' H h1)). Qed.
Lemma lem331612 {A B : Type'} (_7116 : A -> B) (_7115 : A -> B) (_7117 : A) (lt2 : type1402 A) (z' : type515 A B) (S' : type1413 A B) (H : type549 A B) (h1 : term282 A B lt2 z' S' H) : term1334 A B lt2 z' _7116 S' H _7115 _7117.
Proof. exact (proj2 (@lem331611 A B _7116 _7115 _7117 lt2 z' S' H h1)). Qed.
Lemma lem331614 {A B : Type'} (_7116 : A -> B) (_7115 : A -> B) (_7117 : A) (lt2 : type1402 A) (z' : type515 A B) (S' : type1413 A B) (H : type549 A B) (h1 : term282 A B lt2 z' S' H) : term1353 A B z' _7116 S' H _7115 _7117.
Proof. exact (proj2 (@lem331612 A B _7116 _7115 _7117 lt2 z' S' H h1)). Qed.
Lemma lem331621 {A B : Type'} (_7110 : A) (_7109 : type1413 A B) (_7111 : A) (_7112 : B) (lt2 : type1402 A) (H : type549 A B) (f : type467 A B) (x'' : type473 A B) (R : type1413 A B) (h1 : term480 A B lt2 H f x'' R) : term1354 A B lt2 x'' f _7110 R _7109 _7111 _7112.
Proof. exact (proj1 (@lem331596 A B _7110 _7109 _7111 _7112 lt2 H f x'' R h1)). Qed.
Lemma lem331627 {A B : Type'} (S' : type1413 A B) (x' : A) (y : B) (h1 : term667 A B S' x' y) : term886 A B S' x' y.
Proof. exact (EQ_MP (@lem330480 A B S' x' y) (@lem330438 A B S' x' y h1)). Qed.
Lemma lem331633 {A B : Type'} (_7116 : A -> B) (_7115 : A -> B) (_7117 : A) (lt2 : type1402 A) (z' : type515 A B) (S' : type1413 A B) (H : type549 A B) (h1 : term282 A B lt2 z' S' H) : term1355 A B lt2 z' _7116 S' H _7115 _7117.
Proof. exact (proj1 (@lem331612 A B _7116 _7115 _7117 lt2 z' S' H h1)). Qed.
Lemma lem331644 {A B : Type'} (z' : type515 A B) (_7116 : A -> B) (S' : type1413 A B) (H : type549 A B) (_7115 : A -> B) (_7117 : A) : (term1353 A B z' _7116 S' H _7115 _7117) = (term1356 A B z' _7116 S' H _7115 _7117).
Proof. exact (@lem322856 (term1228 A B z' _7115 _7116 _7117) (term1221 A B S' z' _7115 _7116 _7117) (term919 A B S' H _7115 _7117)). Qed.
Lemma lem331645 {A B : Type'} (_7116 : A -> B) (_7115 : A -> B) (_7117 : A) (lt2 : type1402 A) (z' : type515 A B) (S' : type1413 A B) (H : type549 A B) (h1 : term282 A B lt2 z' S' H) : term1356 A B z' _7116 S' H _7115 _7117.
Proof. exact (EQ_MP (@lem331644 A B z' _7116 S' H _7115 _7117) (@lem331614 A B _7116 _7115 _7117 lt2 z' S' H h1)). Qed.
Lemma lem331690 {A B : Type'} (lt2 : type1402 A) (x'' : type473 A B) (f : type467 A B) (_7110 : A) (R : type1413 A B) (_7109 : type1413 A B) (_7111 : A) (_7112 : B) : (term1354 A B lt2 x'' f _7110 R _7109 _7111 _7112) = (term1357 A B lt2 x'' f _7110 R _7109 _7111 _7112).
Proof. exact (@lem322856 (term1184 A B lt2 _7110 x'' _7109) (term1178 A B f _7109 _7110) (term1153 A B R _7109 _7111 _7112)). Qed.
Lemma lem331691 {A B : Type'} (_7110 : A) (_7109 : type1413 A B) (_7111 : A) (_7112 : B) (lt2 : type1402 A) (H : type549 A B) (f : type467 A B) (x'' : type473 A B) (R : type1413 A B) (h1 : term480 A B lt2 H f x'' R) : term1357 A B lt2 x'' f _7110 R _7109 _7111 _7112.
Proof. exact (EQ_MP (@lem331690 A B lt2 x'' f _7110 R _7109 _7111 _7112) (@lem331621 A B _7110 _7109 _7111 _7112 lt2 H f x'' R h1)). Qed.
Lemma lem331701 {A B : Type'} (_7109 : type1413 A B) (_7111 : A) (_7112 : B) (lt2 : type1402 A) (H : type549 A B) (f : type467 A B) (x'' : type473 A B) (R : type1413 A B) (h1 : term480 A B lt2 H f x'' R) : term1358 A B H f x'' R _7109 _7111 _7112.
Proof. exact (proj2 (@lem331596 A B (@el A) _7109 _7111 _7112 lt2 H f x'' R h1)). Qed.
Lemma lem331922 {B : Type'} (x : B) : x = x.
Proof. exact (@lem21386 B x). Qed.
Lemma lem331923 {B : Type'} (x : B) : x = x.
Proof. exact (@lem331922 B x). Qed.
Lemma lem331924 {A B : Type'} (z' : type515 A B) (f : type467 A B) (x'' : type473 A B) (S' : type1413 A B) : (term1359 A B z' f x'' S') = (term1359 A B z' f x'' S').
Proof. exact (@lem331923 B (term1359 A B z' f x'' S')). Qed.
Lemma lem331925 {A B : Type'} (z' : type515 A B) (f : type467 A B) (x'' : type473 A B) (S' : type1413 A B) : term1360 A B z' f x'' S'.
Proof. exact (fun h0 : term1361 A B z' f x'' S' => @lem331924 A B z' f x'' S'). Qed.
Lemma lem331927 (p : Prop) : (term986 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem331928 {A B : Type'} (z' : type515 A B) (f : type467 A B) (x'' : type473 A B) (S' : type1413 A B) : (term1360 A B z' f x'' S') = ((term1359 A B z' f x'' S') = (term1359 A B z' f x'' S')).
Proof. exact (@lem331927 ((term1359 A B z' f x'' S') = (term1359 A B z' f x'' S'))). Qed.
Lemma lem331929 {A B : Type'} (z' : type515 A B) (f : type467 A B) (x'' : type473 A B) (S' : type1413 A B) : (term1359 A B z' f x'' S') = (term1359 A B z' f x'' S').
Proof. exact (EQ_MP (@lem331928 A B z' f x'' S') (@lem331925 A B z' f x'' S')). Qed.
Lemma lem331932 {A B : Type'} (H : type549 A B) (f : type467 A B) (x'' : type473 A B) (S' : type1413 A B) (h1 : term1173 A B H f x'' S') : term1173 A B H f x'' S'.
Proof. exact (h1). Qed.
Lemma lem331933 {A B : Type'} (H : type549 A B) (f : type467 A B) (x'' : type473 A B) (S' : type1413 A B) (h1 : term1173 A B H f x'' S') : term1362 A B H f x'' S'.
Proof. exact (fun h0 : term1171 A B H f x'' S' => @lem331932 A B H f x'' S' h1). Qed.
Lemma lem331935 (p : Prop) : (term1363 p) = (~ p).
Proof. exact (EQ_MP (@lem21028 p) (@lem21107 p)). Qed.
Lemma lem331936 {A B : Type'} (H : type549 A B) (f : type467 A B) (x'' : type473 A B) (S' : type1413 A B) : (term1362 A B H f x'' S') = (term1173 A B H f x'' S').
Proof. exact (@lem331935 (term1171 A B H f x'' S')). Qed.
Lemma lem331937 {A B : Type'} (H : type549 A B) (f : type467 A B) (x'' : type473 A B) (S' : type1413 A B) (h1 : term1173 A B H f x'' S') : term1173 A B H f x'' S'.
Proof. exact (EQ_MP (@lem331936 A B H f x'' S') (@lem331933 A B H f x'' S' h1)). Qed.
Lemma lem331955 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem331956 {A B : Type'} (H : type549 A B) (S' : type1413 A B) (z' : type515 A B) (_7115 : A -> B) (_7116 : A -> B) (_7117 : A) : (term1364 A B z' _7116 S' H _7115 _7117) = (term1365 A B H S' z' _7115 _7116 _7117).
Proof. exact (@lem331955 (term919 A B S' H _7115 _7117) (term1221 A B S' z' _7115 _7116 _7117)). Qed.
Lemma lem331962 {A B : Type'} (z' : type515 A B) (_7115 : A -> B) (_7116 : A -> B) (_7117 : A) : (term1230 A B z' _7115 _7116 _7117) = (term1230 A B z' _7115 _7116 _7117).
Proof. exact (eq_refl (term1230 A B z' _7115 _7116 _7117)). Qed.
Lemma lem331963 {A B : Type'} (H : type549 A B) (S' : type1413 A B) (z' : type515 A B) (_7115 : A -> B) (_7116 : A -> B) (_7117 : A) : (term1356 A B z' _7116 S' H _7115 _7117) = (term1366 A B H S' z' _7115 _7116 _7117).
Proof. exact (MK_COMB (@lem331962 A B z' _7115 _7116 _7117) (@lem331956 A B H S' z' _7115 _7116 _7117)). Qed.
Lemma lem331967 (q : Prop) (p : Prop) (r : Prop) : (term1006 p q r) = (term1006 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem331968 {A B : Type'} (H : type549 A B) (S' : type1413 A B) (z' : type515 A B) (_7115 : A -> B) (_7116 : A -> B) (_7117 : A) : (term1366 A B H S' z' _7115 _7116 _7117) = (term1367 A B H S' z' _7115 _7116 _7117).
Proof. exact (@lem331967 (term919 A B S' H _7115 _7117) (term1228 A B z' _7115 _7116 _7117) (term1221 A B S' z' _7115 _7116 _7117)). Qed.
Lemma lem331986 {A B : Type'} (H : type549 A B) (S' : type1413 A B) (z' : type515 A B) (_7115 : A -> B) (_7116 : A -> B) (_7117 : A) : (term1356 A B z' _7116 S' H _7115 _7117) = (term1367 A B H S' z' _7115 _7116 _7117).
Proof. exact (TRANS (@lem331963 A B H S' z' _7115 _7116 _7117) (@lem331968 A B H S' z' _7115 _7116 _7117)). Qed.
Lemma lem331987 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem331988 {A B : Type'} (H : type549 A B) (S' : type1413 A B) (z' : type515 A B) (_7115 : A -> B) (_7116 : A -> B) (_7117 : A) : (term1368 A B z' _7116 S' H _7115 _7117) = (term1369 A B H S' z' _7115 _7116 _7117).
Proof. exact (MK_COMB (@lem331987) (@lem331986 A B H S' z' _7115 _7116 _7117)). Qed.
Lemma lem331992 (q : Prop) (p : Prop) (r : Prop) : (term1006 p q r) = (term1006 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem331993 {A B : Type'} (z' : type515 A B) (_7116 : A -> B) (S' : type1413 A B) (H : type549 A B) (_7115 : A -> B) (_7117 : A) : (term1370 A B z' _7116 S' H _7115 _7117) = (term1356 A B z' _7116 S' H _7115 _7117).
Proof. exact (@lem331992 (term1228 A B z' _7115 _7116 _7117) (term1221 A B S' z' _7115 _7116 _7117) (term919 A B S' H _7115 _7117)). Qed.
Lemma lem332009 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem332010 {A B : Type'} (H : type549 A B) (S' : type1413 A B) (z' : type515 A B) (_7115 : A -> B) (_7116 : A -> B) (_7117 : A) : (term1364 A B z' _7116 S' H _7115 _7117) = (term1365 A B H S' z' _7115 _7116 _7117).
Proof. exact (@lem332009 (term919 A B S' H _7115 _7117) (term1221 A B S' z' _7115 _7116 _7117)). Qed.
Lemma lem332016 {A B : Type'} (z' : type515 A B) (_7115 : A -> B) (_7116 : A -> B) (_7117 : A) : (term1230 A B z' _7115 _7116 _7117) = (term1230 A B z' _7115 _7116 _7117).
Proof. exact (eq_refl (term1230 A B z' _7115 _7116 _7117)). Qed.
Lemma lem332017 {A B : Type'} (H : type549 A B) (S' : type1413 A B) (z' : type515 A B) (_7115 : A -> B) (_7116 : A -> B) (_7117 : A) : (term1356 A B z' _7116 S' H _7115 _7117) = (term1366 A B H S' z' _7115 _7116 _7117).
Proof. exact (MK_COMB (@lem332016 A B z' _7115 _7116 _7117) (@lem332010 A B H S' z' _7115 _7116 _7117)). Qed.
Lemma lem332021 (q : Prop) (p : Prop) (r : Prop) : (term1006 p q r) = (term1006 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem332022 {A B : Type'} (H : type549 A B) (S' : type1413 A B) (z' : type515 A B) (_7115 : A -> B) (_7116 : A -> B) (_7117 : A) : (term1366 A B H S' z' _7115 _7116 _7117) = (term1367 A B H S' z' _7115 _7116 _7117).
Proof. exact (@lem332021 (term919 A B S' H _7115 _7117) (term1228 A B z' _7115 _7116 _7117) (term1221 A B S' z' _7115 _7116 _7117)). Qed.
Lemma lem332040 {A B : Type'} (H : type549 A B) (S' : type1413 A B) (z' : type515 A B) (_7115 : A -> B) (_7116 : A -> B) (_7117 : A) : (term1356 A B z' _7116 S' H _7115 _7117) = (term1367 A B H S' z' _7115 _7116 _7117).
Proof. exact (TRANS (@lem332017 A B H S' z' _7115 _7116 _7117) (@lem332022 A B H S' z' _7115 _7116 _7117)). Qed.
Lemma lem332041 {A B : Type'} (H : type549 A B) (S' : type1413 A B) (z' : type515 A B) (_7115 : A -> B) (_7116 : A -> B) (_7117 : A) : (term1370 A B z' _7116 S' H _7115 _7117) = (term1367 A B H S' z' _7115 _7116 _7117).
Proof. exact (TRANS (@lem331993 A B z' _7116 S' H _7115 _7117) (@lem332040 A B H S' z' _7115 _7116 _7117)). Qed.
Lemma lem332042 {A B : Type'} (H : type549 A B) (S' : type1413 A B) (z' : type515 A B) (_7115 : A -> B) (_7116 : A -> B) (_7117 : A) : ((term1356 A B z' _7116 S' H _7115 _7117) = (term1370 A B z' _7116 S' H _7115 _7117)) = ((term1367 A B H S' z' _7115 _7116 _7117) = (term1367 A B H S' z' _7115 _7116 _7117)).
Proof. exact (MK_COMB (@lem331988 A B H S' z' _7115 _7116 _7117) (@lem332041 A B H S' z' _7115 _7116 _7117)). Qed.
Lemma lem332044 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem20665 A x) (@lem20664 A x)). Qed.
Lemma lem332045 (x : Prop) : (x = x) = True.
Proof. exact (@lem332044 Prop x). Qed.
Lemma lem332046 {A B : Type'} (H : type549 A B) (S' : type1413 A B) (z' : type515 A B) (_7115 : A -> B) (_7116 : A -> B) (_7117 : A) : ((term1367 A B H S' z' _7115 _7116 _7117) = (term1367 A B H S' z' _7115 _7116 _7117)) = True.
Proof. exact (@lem332045 (term1367 A B H S' z' _7115 _7116 _7117)). Qed.
Lemma lem332047 {A B : Type'} (z' : type515 A B) (_7116 : A -> B) (S' : type1413 A B) (H : type549 A B) (_7115 : A -> B) (_7117 : A) : ((term1356 A B z' _7116 S' H _7115 _7117) = (term1370 A B z' _7116 S' H _7115 _7117)) = True.
Proof. exact (TRANS (@lem332042 A B H S' z' _7115 _7116 _7117) (@lem332046 A B H S' z' _7115 _7116 _7117)). Qed.
Lemma lem332048 {A B : Type'} (z' : type515 A B) (_7116 : A -> B) (S' : type1413 A B) (H : type549 A B) (_7115 : A -> B) (_7117 : A) : True = ((term1356 A B z' _7116 S' H _7115 _7117) = (term1370 A B z' _7116 S' H _7115 _7117)).
Proof. exact (SYM (@lem332047 A B z' _7116 S' H _7115 _7117)). Qed.
Lemma lem332049 {A B : Type'} (z' : type515 A B) (_7116 : A -> B) (S' : type1413 A B) (H : type549 A B) (_7115 : A -> B) (_7117 : A) : (term1356 A B z' _7116 S' H _7115 _7117) = (term1370 A B z' _7116 S' H _7115 _7117).
Proof. exact (EQ_MP (@lem332048 A B z' _7116 S' H _7115 _7117) (@lem0)). Qed.
Lemma lem332050 {A B : Type'} (_7116 : A -> B) (_7115 : A -> B) (_7117 : A) (lt2 : type1402 A) (z' : type515 A B) (S' : type1413 A B) (H : type549 A B) (h1 : term282 A B lt2 z' S' H) : term1370 A B z' _7116 S' H _7115 _7117.
Proof. exact (EQ_MP (@lem332049 A B z' _7116 S' H _7115 _7117) (@lem331645 A B _7116 _7115 _7117 lt2 z' S' H h1)). Qed.
Lemma lem332052 (b : Prop) (a : Prop) : (a \/ b) = (term990 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem332053 {A B : Type'} (H : type549 A B) (S' : type1413 A B) (z' : type515 A B) (_7115 : A -> B) (_7116 : A -> B) (_7117 : A) : (term1370 A B z' _7116 S' H _7115 _7117) = (term1371 A B H S' z' _7115 _7116 _7117).
Proof. exact (@lem332052 (term1372 A B z' _7116 S' H _7115 _7117) (term1221 A B S' z' _7115 _7116 _7117)). Qed.
Lemma lem332055 (a : Prop) (b : Prop) : (term1012 a b) = (term1013 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem332056 {A B : Type'} (z' : type515 A B) (_7116 : A -> B) (S' : type1413 A B) (H : type549 A B) (_7115 : A -> B) (_7117 : A) : (term1373 A B z' _7116 S' H _7115 _7117) = (term1374 A B z' _7116 S' H _7115 _7117).
Proof. exact (@lem332055 (term1228 A B z' _7115 _7116 _7117) (term919 A B S' H _7115 _7117)). Qed.
Lemma lem332058 (a : Prop) : (term992 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem332059 {A B : Type'} (z' : type515 A B) (_7115 : A -> B) (_7116 : A -> B) (_7117 : A) : (term1375 A B z' _7115 _7116 _7117) = ((term1212 A B z' _7115 _7116 _7117) = (term1224 A B z' _7115 _7116 _7117)).
Proof. exact (@lem332058 ((term1212 A B z' _7115 _7116 _7117) = (term1224 A B z' _7115 _7116 _7117))). Qed.
Lemma lem332060 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem332061 {A B : Type'} (z' : type515 A B) (_7115 : A -> B) (_7116 : A -> B) (_7117 : A) : (term1376 A B z' _7115 _7116 _7117) = (term1377 A B z' _7115 _7116 _7117).
Proof. exact (MK_COMB (@lem332060) (@lem332059 A B z' _7115 _7116 _7117)). Qed.
Lemma lem332062 {A B : Type'} (S' : type1413 A B) (H : type549 A B) (_7115 : A -> B) (_7117 : A) : (term1378 A B S' H _7115 _7117) = (term1378 A B S' H _7115 _7117).
Proof. exact (eq_refl (term1378 A B S' H _7115 _7117)). Qed.
Lemma lem332063 {A B : Type'} (z' : type515 A B) (_7116 : A -> B) (S' : type1413 A B) (H : type549 A B) (_7115 : A -> B) (_7117 : A) : (term1374 A B z' _7116 S' H _7115 _7117) = (term1379 A B z' _7116 S' H _7115 _7117).
Proof. exact (MK_COMB (@lem332061 A B z' _7115 _7116 _7117) (@lem332062 A B S' H _7115 _7117)). Qed.
Lemma lem332064 {A B : Type'} (z' : type515 A B) (_7116 : A -> B) (S' : type1413 A B) (H : type549 A B) (_7115 : A -> B) (_7117 : A) : (term1373 A B z' _7116 S' H _7115 _7117) = (term1379 A B z' _7116 S' H _7115 _7117).
Proof. exact (TRANS (@lem332056 A B z' _7116 S' H _7115 _7117) (@lem332063 A B z' _7116 S' H _7115 _7117)). Qed.
Lemma lem332065 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem332066 {A B : Type'} (z' : type515 A B) (_7116 : A -> B) (S' : type1413 A B) (H : type549 A B) (_7115 : A -> B) (_7117 : A) : (term1380 A B z' _7116 S' H _7115 _7117) = (term1381 A B z' _7116 S' H _7115 _7117).
Proof. exact (MK_COMB (@lem332065) (@lem332064 A B z' _7116 S' H _7115 _7117)). Qed.
Lemma lem332067 {A B : Type'} (S' : type1413 A B) (z' : type515 A B) (_7115 : A -> B) (_7116 : A -> B) (_7117 : A) : (term1221 A B S' z' _7115 _7116 _7117) = (term1221 A B S' z' _7115 _7116 _7117).
Proof. exact (eq_refl (term1221 A B S' z' _7115 _7116 _7117)). Qed.
Lemma lem332068 {A B : Type'} (H : type549 A B) (S' : type1413 A B) (z' : type515 A B) (_7115 : A -> B) (_7116 : A -> B) (_7117 : A) : (term1371 A B H S' z' _7115 _7116 _7117) = (term1382 A B H S' z' _7115 _7116 _7117).
Proof. exact (MK_COMB (@lem332066 A B z' _7116 S' H _7115 _7117) (@lem332067 A B S' z' _7115 _7116 _7117)). Qed.
Lemma lem332069 {A B : Type'} (H : type549 A B) (S' : type1413 A B) (z' : type515 A B) (_7115 : A -> B) (_7116 : A -> B) (_7117 : A) : (term1370 A B z' _7116 S' H _7115 _7117) = (term1382 A B H S' z' _7115 _7116 _7117).
Proof. exact (TRANS (@lem332053 A B H S' z' _7115 _7116 _7117) (@lem332068 A B H S' z' _7115 _7116 _7117)). Qed.
Lemma lem332071 {A B : Type'} (z' : type515 A B) (H : type549 A B) (f : type467 A B) (x'' : type473 A B) (S' : type1413 A B) (h1 : term1173 A B H f x'' S') : term1383 A B z' H f x'' S'.
Proof. exact (conj (@lem331929 A B z' f x'' S') (@lem331937 A B H f x'' S' h1)). Qed.
Lemma lem332073 {A B : Type'} (_7115 : A -> B) (_7116 : A -> B) (_7117 : A) (lt2 : type1402 A) (z' : type515 A B) (S' : type1413 A B) (H : type549 A B) (h1 : term282 A B lt2 z' S' H) : term1382 A B H S' z' _7115 _7116 _7117.
Proof. exact (EQ_MP (@lem332069 A B H S' z' _7115 _7116 _7117) (@lem332050 A B _7116 _7115 _7117 lt2 z' S' H h1)). Qed.
Lemma lem332074 {A B : Type'} (_7115 : A -> B) (_7116 : A -> B) (_7117 : A) (lt2 : type1402 A) (z' : type515 A B) (S' : type1413 A B) (H : type549 A B) (h1 : term282 A B lt2 z' S' H) : term1382 A B H S' z' _7115 _7116 _7117.
Proof. exact (@lem332073 A B _7115 _7116 _7117 lt2 z' S' H h1). Qed.
Lemma lem332075 {A B : Type'} (f : type467 A B) (x'' : type473 A B) (lt2 : type1402 A) (z' : type515 A B) (S' : type1413 A B) (H : type549 A B) (h1 : term282 A B lt2 z' S' H) : term1384 A B H z' f x'' S'.
Proof. exact (@lem332074 A B (@I ((A -> B -> Prop) -> A -> B) f S') (@I ((A -> B -> Prop) -> A -> B) f S') (@I ((A -> B -> Prop) -> A) x'' S') lt2 z' S' H h1). Qed.
Lemma lem332078 {A B : Type'} (lt2 : type1402 A) (z' : type515 A B) (H : type549 A B) (f : type467 A B) (x'' : type473 A B) (S' : type1413 A B) (h1 : term282 A B lt2 z' S' H) (h2 : term1173 A B H f x'' S') : term1385 A B z' f x'' S'.
Proof. exact (@lem332075 A B f x'' lt2 z' S' H h1 (@lem332071 A B z' H f x'' S' h2)). Qed.
Lemma lem332079 {A B : Type'} (lt2 : type1402 A) (z' : type515 A B) (H : type549 A B) (f : type467 A B) (x'' : type473 A B) (S' : type1413 A B) (h1 : term282 A B lt2 z' S' H) (h2 : term1173 A B H f x'' S') : term1386 A B z' f x'' S'.
Proof. exact (fun h0 : term1387 A B z' f x'' S' => @lem332078 A B lt2 z' H f x'' S' h1 h2). Qed.
Lemma lem332081 (p : Prop) : (term1363 p) = (~ p).
Proof. exact (EQ_MP (@lem21028 p) (@lem21107 p)). Qed.
Lemma lem332082 {A B : Type'} (z' : type515 A B) (f : type467 A B) (x'' : type473 A B) (S' : type1413 A B) : (term1386 A B z' f x'' S') = (term1385 A B z' f x'' S').
Proof. exact (@lem332081 (term1387 A B z' f x'' S')). Qed.
Lemma lem332083 {A B : Type'} (lt2 : type1402 A) (z' : type515 A B) (H : type549 A B) (f : type467 A B) (x'' : type473 A B) (S' : type1413 A B) (h1 : term282 A B lt2 z' S' H) (h2 : term1173 A B H f x'' S') : term1385 A B z' f x'' S'.
Proof. exact (EQ_MP (@lem332082 A B z' f x'' S') (@lem332079 A B lt2 z' H f x'' S' h1 h2)). Qed.
Lemma lem332085 {A B : Type'} (R : type1413 A B) (x' : A) (y : B) (h1 : R x' y) : term885 A B R x' y.
Proof. exact (EQ_MP (@lem330460 A B R x' y) (@lem330432 A B R x' y h1)). Qed.
Lemma lem332086 {A B : Type'} (R : type1413 A B) (x' : A) (y : B) (h1 : R x' y) : term1388 A B R x' y.
Proof. exact (fun h0 : term886 A B R x' y => @lem332085 A B R x' y h1). Qed.
Lemma lem332088 (p : Prop) : (term986 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem332089 {A B : Type'} (R : type1413 A B) (x' : A) (y : B) : (term1388 A B R x' y) = (term885 A B R x' y).
Proof. exact (@lem332088 (term885 A B R x' y)). Qed.
Lemma lem332090 {A B : Type'} (R : type1413 A B) (x' : A) (y : B) (h1 : R x' y) : term885 A B R x' y.
Proof. exact (EQ_MP (@lem332089 A B R x' y) (@lem332086 A B R x' y h1)). Qed.
Lemma lem332093 {A B : Type'} (S' : type1413 A B) (x' : A) (y : B) (h1 : term886 A B S' x' y) : term886 A B S' x' y.
Proof. exact (h1). Qed.
Lemma lem332094 {A B : Type'} (S' : type1413 A B) (x' : A) (y : B) (h1 : term886 A B S' x' y) : term1389 A B S' x' y.
Proof. exact (fun h0 : term885 A B S' x' y => @lem332093 A B S' x' y h1). Qed.
Lemma lem332096 (p : Prop) : (term1363 p) = (~ p).
Proof. exact (EQ_MP (@lem21028 p) (@lem21107 p)). Qed.
Lemma lem332097 {A B : Type'} (S' : type1413 A B) (x' : A) (y : B) : (term1389 A B S' x' y) = (term886 A B S' x' y).
Proof. exact (@lem332096 (term885 A B S' x' y)). Qed.
Lemma lem332098 {A B : Type'} (S' : type1413 A B) (x' : A) (y : B) (h1 : term886 A B S' x' y) : term886 A B S' x' y.
Proof. exact (EQ_MP (@lem332097 A B S' x' y) (@lem332094 A B S' x' y h1)). Qed.
Lemma lem332100 (b : Prop) (a : Prop) : (a \/ b) = (term990 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem332101 {A B : Type'} (f : type467 A B) (R : type1413 A B) (_7111 : A) (_7112 : B) (lt2 : type1402 A) (_7110 : A) (x'' : type473 A B) (_7109 : type1413 A B) : (term1357 A B lt2 x'' f _7110 R _7109 _7111 _7112) = (term1390 A B f R _7111 _7112 lt2 _7110 x'' _7109).
Proof. exact (@lem332100 (term1391 A B f _7110 R _7109 _7111 _7112) (term1184 A B lt2 _7110 x'' _7109)). Qed.
Lemma lem332103 (a : Prop) (b : Prop) : (term1012 a b) = (term1013 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem332104 {A B : Type'} (f : type467 A B) (_7110 : A) (R : type1413 A B) (_7109 : type1413 A B) (_7111 : A) (_7112 : B) : (term1392 A B f _7110 R _7109 _7111 _7112) = (term1393 A B f _7110 R _7109 _7111 _7112).
Proof. exact (@lem332103 (term1178 A B f _7109 _7110) (term1153 A B R _7109 _7111 _7112)). Qed.
Lemma lem332106 (a : Prop) (b : Prop) : (term1012 a b) = (term1013 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem332107 {A B : Type'} (R : type1413 A B) (_7109 : type1413 A B) (_7111 : A) (_7112 : B) : (term1394 A B R _7109 _7111 _7112) = (term1395 A B R _7109 _7111 _7112).
Proof. exact (@lem332106 (term886 A B R _7111 _7112) (term885 A B _7109 _7111 _7112)). Qed.
Lemma lem332109 (a : Prop) : (term992 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem332110 {A B : Type'} (R : type1413 A B) (_7111 : A) (_7112 : B) : (term1016 A B R _7111 _7112) = (term885 A B R _7111 _7112).
Proof. exact (@lem332109 (term885 A B R _7111 _7112)). Qed.
Lemma lem332111 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem332112 {A B : Type'} (R : type1413 A B) (_7111 : A) (_7112 : B) : (term1017 A B R _7111 _7112) = (term1018 A B R _7111 _7112).
Proof. exact (MK_COMB (@lem332111) (@lem332110 A B R _7111 _7112)). Qed.
Lemma lem332113 {A B : Type'} (_7109 : type1413 A B) (_7111 : A) (_7112 : B) : (term886 A B _7109 _7111 _7112) = (term886 A B _7109 _7111 _7112).
Proof. exact (eq_refl (term886 A B _7109 _7111 _7112)). Qed.
Lemma lem332114 {A B : Type'} (R : type1413 A B) (_7109 : type1413 A B) (_7111 : A) (_7112 : B) : (term1395 A B R _7109 _7111 _7112) = (term1396 A B R _7109 _7111 _7112).
Proof. exact (MK_COMB (@lem332112 A B R _7111 _7112) (@lem332113 A B _7109 _7111 _7112)). Qed.
Lemma lem332115 {A B : Type'} (R : type1413 A B) (_7109 : type1413 A B) (_7111 : A) (_7112 : B) : (term1394 A B R _7109 _7111 _7112) = (term1396 A B R _7109 _7111 _7112).
Proof. exact (TRANS (@lem332107 A B R _7109 _7111 _7112) (@lem332114 A B R _7109 _7111 _7112)). Qed.
Lemma lem332116 {A B : Type'} (f : type467 A B) (_7109 : type1413 A B) (_7110 : A) : (term1397 A B f _7109 _7110) = (term1397 A B f _7109 _7110).
Proof. exact (eq_refl (term1397 A B f _7109 _7110)). Qed.
Lemma lem332117 {A B : Type'} (f : type467 A B) (_7110 : A) (R : type1413 A B) (_7109 : type1413 A B) (_7111 : A) (_7112 : B) : (term1393 A B f _7110 R _7109 _7111 _7112) = (term1398 A B f _7110 R _7109 _7111 _7112).
Proof. exact (MK_COMB (@lem332116 A B f _7109 _7110) (@lem332115 A B R _7109 _7111 _7112)). Qed.
Lemma lem332118 {A B : Type'} (f : type467 A B) (_7110 : A) (R : type1413 A B) (_7109 : type1413 A B) (_7111 : A) (_7112 : B) : (term1392 A B f _7110 R _7109 _7111 _7112) = (term1398 A B f _7110 R _7109 _7111 _7112).
Proof. exact (TRANS (@lem332104 A B f _7110 R _7109 _7111 _7112) (@lem332117 A B f _7110 R _7109 _7111 _7112)). Qed.
Lemma lem332119 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem332120 {A B : Type'} (f : type467 A B) (_7110 : A) (R : type1413 A B) (_7109 : type1413 A B) (_7111 : A) (_7112 : B) : (term1399 A B f _7110 R _7109 _7111 _7112) = (term1400 A B f _7110 R _7109 _7111 _7112).
Proof. exact (MK_COMB (@lem332119) (@lem332118 A B f _7110 R _7109 _7111 _7112)). Qed.
Lemma lem332121 {A B : Type'} (lt2 : type1402 A) (_7110 : A) (x'' : type473 A B) (_7109 : type1413 A B) : (term1184 A B lt2 _7110 x'' _7109) = (term1184 A B lt2 _7110 x'' _7109).
Proof. exact (eq_refl (term1184 A B lt2 _7110 x'' _7109)). Qed.
Lemma lem332122 {A B : Type'} (f : type467 A B) (R : type1413 A B) (_7111 : A) (_7112 : B) (lt2 : type1402 A) (_7110 : A) (x'' : type473 A B) (_7109 : type1413 A B) : (term1390 A B f R _7111 _7112 lt2 _7110 x'' _7109) = (term1401 A B f R _7111 _7112 lt2 _7110 x'' _7109).
Proof. exact (MK_COMB (@lem332120 A B f _7110 R _7109 _7111 _7112) (@lem332121 A B lt2 _7110 x'' _7109)). Qed.
Lemma lem332123 {A B : Type'} (f : type467 A B) (R : type1413 A B) (_7111 : A) (_7112 : B) (lt2 : type1402 A) (_7110 : A) (x'' : type473 A B) (_7109 : type1413 A B) : (term1357 A B lt2 x'' f _7110 R _7109 _7111 _7112) = (term1401 A B f R _7111 _7112 lt2 _7110 x'' _7109).
Proof. exact (TRANS (@lem332101 A B f R _7111 _7112 lt2 _7110 x'' _7109) (@lem332122 A B f R _7111 _7112 lt2 _7110 x'' _7109)). Qed.
Lemma lem332125 {A B : Type'} (S' : type1413 A B) (R : type1413 A B) (x' : A) (y : B) (h1 : term886 A B S' x' y) (h2 : R x' y) : term1396 A B R S' x' y.
Proof. exact (conj (@lem332090 A B R x' y h2) (@lem332098 A B S' x' y h1)). Qed.
Lemma lem332126 {A B : Type'} (lt2 : type1402 A) (z' : type515 A B) (H : type549 A B) (f : type467 A B) (x'' : type473 A B) (S' : type1413 A B) (R : type1413 A B) (x' : A) (y : B) (h1 : term282 A B lt2 z' S' H) (h2 : term886 A B S' x' y) (h3 : term1173 A B H f x'' S') (h4 : R x' y) : term1402 A B z' f x'' R S' x' y.
Proof. exact (conj (@lem332083 A B lt2 z' H f x'' S' h1 h3) (@lem332125 A B S' R x' y h2 h4)). Qed.
Lemma lem332128 {A B : Type'} (_7111 : A) (_7112 : B) (_7110 : A) (_7109 : type1413 A B) (lt2 : type1402 A) (H : type549 A B) (f : type467 A B) (x'' : type473 A B) (R : type1413 A B) (h1 : term480 A B lt2 H f x'' R) : term1401 A B f R _7111 _7112 lt2 _7110 x'' _7109.
Proof. exact (EQ_MP (@lem332123 A B f R _7111 _7112 lt2 _7110 x'' _7109) (@lem331691 A B _7110 _7109 _7111 _7112 lt2 H f x'' R h1)). Qed.
Lemma lem332129 {A B : Type'} (_7111 : A) (_7112 : B) (_7110 : A) (_7109 : type1413 A B) (lt2 : type1402 A) (H : type549 A B) (f : type467 A B) (x'' : type473 A B) (R : type1413 A B) (h1 : term480 A B lt2 H f x'' R) : term1401 A B f R _7111 _7112 lt2 _7110 x'' _7109.
Proof. exact (@lem332128 A B _7111 _7112 _7110 _7109 lt2 H f x'' R h1). Qed.
Lemma lem332130 {A B : Type'} (x' : A) (y : B) (z' : type515 A B) (S' : type1413 A B) (lt2 : type1402 A) (H : type549 A B) (f : type467 A B) (x'' : type473 A B) (R : type1413 A B) (h1 : term480 A B lt2 H f x'' R) : term1403 A B R x' y lt2 z' f x'' S'.
Proof. exact (@lem332129 A B x' y (term1404 A B z' f x'' S') S' lt2 H f x'' R h1). Qed.
Lemma lem332133 {A B : Type'} (z' : type515 A B) (lt2 : type1402 A) (H : type549 A B) (f : type467 A B) (x'' : type473 A B) (S' : type1413 A B) (R : type1413 A B) (x' : A) (y : B) (h1 : term282 A B lt2 z' S' H) (h2 : term480 A B lt2 H f x'' R) (h3 : term886 A B S' x' y) (h4 : term1173 A B H f x'' S') (h5 : R x' y) : term1405 A B lt2 z' f x'' S'.
Proof. exact (@lem332130 A B x' y z' S' lt2 H f x'' R h2 (@lem332126 A B lt2 z' H f x'' S' R x' y h1 h3 h4 h5)). Qed.
Lemma lem332134 {A B : Type'} (z' : type515 A B) (lt2 : type1402 A) (H : type549 A B) (f : type467 A B) (x'' : type473 A B) (S' : type1413 A B) (R : type1413 A B) (x' : A) (y : B) (h1 : term282 A B lt2 z' S' H) (h2 : term480 A B lt2 H f x'' R) (h3 : term886 A B S' x' y) (h4 : term1173 A B H f x'' S') (h5 : R x' y) : term1406 A B lt2 z' f x'' S'.
Proof. exact (fun h0 : term1407 A B lt2 z' f x'' S' => @lem332133 A B z' lt2 H f x'' S' R x' y h1 h2 h3 h4 h5). Qed.
Lemma lem332136 (p : Prop) : (term1363 p) = (~ p).
Proof. exact (EQ_MP (@lem21028 p) (@lem21107 p)). Qed.
Lemma lem332137 {A B : Type'} (lt2 : type1402 A) (z' : type515 A B) (f : type467 A B) (x'' : type473 A B) (S' : type1413 A B) : (term1406 A B lt2 z' f x'' S') = (term1405 A B lt2 z' f x'' S').
Proof. exact (@lem332136 (term1407 A B lt2 z' f x'' S')). Qed.
Lemma lem332138 {A B : Type'} (z' : type515 A B) (lt2 : type1402 A) (H : type549 A B) (f : type467 A B) (x'' : type473 A B) (S' : type1413 A B) (R : type1413 A B) (x' : A) (y : B) (h1 : term282 A B lt2 z' S' H) (h2 : term480 A B lt2 H f x'' R) (h3 : term886 A B S' x' y) (h4 : term1173 A B H f x'' S') (h5 : R x' y) : term1405 A B lt2 z' f x'' S'.
Proof. exact (EQ_MP (@lem332137 A B lt2 z' f x'' S') (@lem332134 A B z' lt2 H f x'' S' R x' y h1 h2 h3 h4 h5)). Qed.
Lemma lem332149 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem332150 {A B : Type'} (lt2 : type1402 A) (z' : type515 A B) (_7116 : A -> B) (S' : type1413 A B) (H : type549 A B) (_7115 : A -> B) (_7117 : A) : (term1408 A B S' H lt2 z' _7115 _7116 _7117) = (term1355 A B lt2 z' _7116 S' H _7115 _7117).
Proof. exact (@lem332149 (term1239 A B lt2 z' _7115 _7116 _7117) (term919 A B S' H _7115 _7117)). Qed.
Lemma lem332156 {A B : Type'} (lt2 : type1402 A) (z' : type515 A B) (_7116 : A -> B) (S' : type1413 A B) (H : type549 A B) (_7115 : A -> B) (_7117 : A) : (term1409 A B lt2 z' _7116 S' H _7115 _7117) = (term1409 A B lt2 z' _7116 S' H _7115 _7117).
Proof. exact (eq_refl (term1409 A B lt2 z' _7116 S' H _7115 _7117)). Qed.
Lemma lem332157 {A B : Type'} (lt2 : type1402 A) (z' : type515 A B) (_7116 : A -> B) (S' : type1413 A B) (H : type549 A B) (_7115 : A -> B) (_7117 : A) : ((term1355 A B lt2 z' _7116 S' H _7115 _7117) = (term1408 A B S' H lt2 z' _7115 _7116 _7117)) = ((term1355 A B lt2 z' _7116 S' H _7115 _7117) = (term1355 A B lt2 z' _7116 S' H _7115 _7117)).
Proof. exact (MK_COMB (@lem332156 A B lt2 z' _7116 S' H _7115 _7117) (@lem332150 A B lt2 z' _7116 S' H _7115 _7117)). Qed.
Lemma lem332159 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem20665 A x) (@lem20664 A x)). Qed.
Lemma lem332160 (x : Prop) : (x = x) = True.
Proof. exact (@lem332159 Prop x). Qed.
Lemma lem332161 {A B : Type'} (lt2 : type1402 A) (z' : type515 A B) (_7116 : A -> B) (S' : type1413 A B) (H : type549 A B) (_7115 : A -> B) (_7117 : A) : ((term1355 A B lt2 z' _7116 S' H _7115 _7117) = (term1355 A B lt2 z' _7116 S' H _7115 _7117)) = True.
Proof. exact (@lem332160 (term1355 A B lt2 z' _7116 S' H _7115 _7117)). Qed.
Lemma lem332162 {A B : Type'} (S' : type1413 A B) (H : type549 A B) (lt2 : type1402 A) (z' : type515 A B) (_7115 : A -> B) (_7116 : A -> B) (_7117 : A) : ((term1355 A B lt2 z' _7116 S' H _7115 _7117) = (term1408 A B S' H lt2 z' _7115 _7116 _7117)) = True.
Proof. exact (TRANS (@lem332157 A B lt2 z' _7116 S' H _7115 _7117) (@lem332161 A B lt2 z' _7116 S' H _7115 _7117)). Qed.
Lemma lem332163 {A B : Type'} (S' : type1413 A B) (H : type549 A B) (lt2 : type1402 A) (z' : type515 A B) (_7115 : A -> B) (_7116 : A -> B) (_7117 : A) : True = ((term1355 A B lt2 z' _7116 S' H _7115 _7117) = (term1408 A B S' H lt2 z' _7115 _7116 _7117)).
Proof. exact (SYM (@lem332162 A B S' H lt2 z' _7115 _7116 _7117)). Qed.
Lemma lem332164 {A B : Type'} (S' : type1413 A B) (H : type549 A B) (lt2 : type1402 A) (z' : type515 A B) (_7115 : A -> B) (_7116 : A -> B) (_7117 : A) : (term1355 A B lt2 z' _7116 S' H _7115 _7117) = (term1408 A B S' H lt2 z' _7115 _7116 _7117).
Proof. exact (EQ_MP (@lem332163 A B S' H lt2 z' _7115 _7116 _7117) (@lem0)). Qed.
Lemma lem332165 {A B : Type'} (_7115 : A -> B) (_7116 : A -> B) (_7117 : A) (lt2 : type1402 A) (z' : type515 A B) (S' : type1413 A B) (H : type549 A B) (h1 : term282 A B lt2 z' S' H) : term1408 A B S' H lt2 z' _7115 _7116 _7117.
Proof. exact (EQ_MP (@lem332164 A B S' H lt2 z' _7115 _7116 _7117) (@lem331633 A B _7116 _7115 _7117 lt2 z' S' H h1)). Qed.
Lemma lem332167 (b : Prop) (a : Prop) : (a \/ b) = (term990 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem332170 {A B : Type'} (lt2 : type1402 A) (z' : type515 A B) (_7116 : A -> B) (S' : type1413 A B) (H : type549 A B) (_7115 : A -> B) (_7117 : A) : (term1408 A B S' H lt2 z' _7115 _7116 _7117) = (term1410 A B lt2 z' _7116 S' H _7115 _7117).
Proof. exact (@lem332167 (term1239 A B lt2 z' _7115 _7116 _7117) (term919 A B S' H _7115 _7117)). Qed.
Lemma lem332173 {A B : Type'} (_7116 : A -> B) (_7115 : A -> B) (_7117 : A) (lt2 : type1402 A) (z' : type515 A B) (S' : type1413 A B) (H : type549 A B) (h1 : term282 A B lt2 z' S' H) : term1410 A B lt2 z' _7116 S' H _7115 _7117.
Proof. exact (EQ_MP (@lem332170 A B lt2 z' _7116 S' H _7115 _7117) (@lem332165 A B _7115 _7116 _7117 lt2 z' S' H h1)). Qed.
Lemma lem332174 {A B : Type'} (_7116 : A -> B) (_7115 : A -> B) (_7117 : A) (lt2 : type1402 A) (z' : type515 A B) (S' : type1413 A B) (H : type549 A B) (h1 : term282 A B lt2 z' S' H) : term1410 A B lt2 z' _7116 S' H _7115 _7117.
Proof. exact (@lem332173 A B _7116 _7115 _7117 lt2 z' S' H h1). Qed.
Lemma lem332175 {A B : Type'} (f : type467 A B) (x'' : type473 A B) (lt2 : type1402 A) (z' : type515 A B) (S' : type1413 A B) (H : type549 A B) (h1 : term282 A B lt2 z' S' H) : term1411 A B lt2 z' H f x'' S'.
Proof. exact (@lem332174 A B (@I ((A -> B -> Prop) -> A -> B) f S') (@I ((A -> B -> Prop) -> A -> B) f S') (@I ((A -> B -> Prop) -> A) x'' S') lt2 z' S' H h1). Qed.
Lemma lem332178 {A B : Type'} (z' : type515 A B) (lt2 : type1402 A) (H : type549 A B) (f : type467 A B) (x'' : type473 A B) (S' : type1413 A B) (R : type1413 A B) (x' : A) (y : B) (h1 : term282 A B lt2 z' S' H) (h2 : term480 A B lt2 H f x'' R) (h3 : term886 A B S' x' y) (h4 : term1173 A B H f x'' S') (h5 : R x' y) : term1171 A B H f x'' S'.
Proof. exact (@lem332175 A B f x'' lt2 z' S' H h1 (@lem332138 A B z' lt2 H f x'' S' R x' y h1 h2 h3 h4 h5)). Qed.
Lemma lem332179 {A B : Type'} (z' : type515 A B) (lt2 : type1402 A) (H : type549 A B) (f : type467 A B) (x'' : type473 A B) (S' : type1413 A B) (R : type1413 A B) (x' : A) (y : B) (h1 : term282 A B lt2 z' S' H) (h2 : term480 A B lt2 H f x'' R) (h3 : term886 A B S' x' y) (h4 : R x' y) : term1412 A B H f x'' S'.
Proof. exact (fun h0 : term1173 A B H f x'' S' => @lem332178 A B z' lt2 H f x'' S' R x' y h1 h2 h3 h0 h4). Qed.
Lemma lem332181 (p : Prop) : (term986 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem332182 {A B : Type'} (H : type549 A B) (f : type467 A B) (x'' : type473 A B) (S' : type1413 A B) : (term1412 A B H f x'' S') = (term1171 A B H f x'' S').
Proof. exact (@lem332181 (term1171 A B H f x'' S')). Qed.
Lemma lem332183 {A B : Type'} (z' : type515 A B) (lt2 : type1402 A) (H : type549 A B) (f : type467 A B) (x'' : type473 A B) (S' : type1413 A B) (R : type1413 A B) (x' : A) (y : B) (h1 : term282 A B lt2 z' S' H) (h2 : term480 A B lt2 H f x'' R) (h3 : term886 A B S' x' y) (h4 : R x' y) : term1171 A B H f x'' S'.
Proof. exact (EQ_MP (@lem332182 A B H f x'' S') (@lem332179 A B z' lt2 H f x'' S' R x' y h1 h2 h3 h4)). Qed.
Lemma lem332185 {A B : Type'} (R : type1413 A B) (x' : A) (y : B) (h1 : R x' y) : term885 A B R x' y.
Proof. exact (EQ_MP (@lem330460 A B R x' y) (@lem330432 A B R x' y h1)). Qed.
Lemma lem332186 {A B : Type'} (R : type1413 A B) (x' : A) (y : B) (h1 : R x' y) : term1388 A B R x' y.
Proof. exact (fun h0 : term886 A B R x' y => @lem332185 A B R x' y h1). Qed.
Lemma lem332188 (p : Prop) : (term986 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem332189 {A B : Type'} (R : type1413 A B) (x' : A) (y : B) : (term1388 A B R x' y) = (term885 A B R x' y).
Proof. exact (@lem332188 (term885 A B R x' y)). Qed.
Lemma lem332190 {A B : Type'} (R : type1413 A B) (x' : A) (y : B) (h1 : R x' y) : term885 A B R x' y.
Proof. exact (EQ_MP (@lem332189 A B R x' y) (@lem332186 A B R x' y h1)). Qed.
Lemma lem332196 (q : Prop) (p : Prop) (r : Prop) : (term1006 p q r) = (term1006 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem332197 {A B : Type'} (R : type1413 A B) (H : type549 A B) (f : type467 A B) (x'' : type473 A B) (_7109 : type1413 A B) (_7111 : A) (_7112 : B) : (term1358 A B H f x'' R _7109 _7111 _7112) = (term1413 A B R H f x'' _7109 _7111 _7112).
Proof. exact (@lem332196 (term886 A B R _7111 _7112) (term1173 A B H f x'' _7109) (term885 A B _7109 _7111 _7112)). Qed.
Lemma lem332211 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem332212 {A B : Type'} (_7111 : A) (_7112 : B) (H : type549 A B) (f : type467 A B) (x'' : type473 A B) (_7109 : type1413 A B) : (term1414 A B H f x'' _7109 _7111 _7112) = (term1415 A B _7111 _7112 H f x'' _7109).
Proof. exact (@lem332211 (term885 A B _7109 _7111 _7112) (term1173 A B H f x'' _7109)). Qed.
Lemma lem332218 {A B : Type'} (R : type1413 A B) (_7111 : A) (_7112 : B) : (term887 A B R _7111 _7112) = (term887 A B R _7111 _7112).
Proof. exact (eq_refl (term887 A B R _7111 _7112)). Qed.
Lemma lem332219 {A B : Type'} (R : type1413 A B) (_7111 : A) (_7112 : B) (H : type549 A B) (f : type467 A B) (x'' : type473 A B) (_7109 : type1413 A B) : (term1413 A B R H f x'' _7109 _7111 _7112) = (term1416 A B R _7111 _7112 H f x'' _7109).
Proof. exact (MK_COMB (@lem332218 A B R _7111 _7112) (@lem332212 A B _7111 _7112 H f x'' _7109)). Qed.
Lemma lem332223 (q : Prop) (p : Prop) (r : Prop) : (term1006 p q r) = (term1006 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem332224 {A B : Type'} (R : type1413 A B) (_7111 : A) (_7112 : B) (H : type549 A B) (f : type467 A B) (x'' : type473 A B) (_7109 : type1413 A B) : (term1416 A B R _7111 _7112 H f x'' _7109) = (term1417 A B R _7111 _7112 H f x'' _7109).
Proof. exact (@lem332223 (term885 A B _7109 _7111 _7112) (term886 A B R _7111 _7112) (term1173 A B H f x'' _7109)). Qed.
Lemma lem332240 {A B : Type'} (R : type1413 A B) (_7111 : A) (_7112 : B) (H : type549 A B) (f : type467 A B) (x'' : type473 A B) (_7109 : type1413 A B) : (term1413 A B R H f x'' _7109 _7111 _7112) = (term1417 A B R _7111 _7112 H f x'' _7109).
Proof. exact (TRANS (@lem332219 A B R _7111 _7112 H f x'' _7109) (@lem332224 A B R _7111 _7112 H f x'' _7109)). Qed.
Lemma lem332241 {A B : Type'} (R : type1413 A B) (_7111 : A) (_7112 : B) (H : type549 A B) (f : type467 A B) (x'' : type473 A B) (_7109 : type1413 A B) : (term1358 A B H f x'' R _7109 _7111 _7112) = (term1417 A B R _7111 _7112 H f x'' _7109).
Proof. exact (TRANS (@lem332197 A B R H f x'' _7109 _7111 _7112) (@lem332240 A B R _7111 _7112 H f x'' _7109)). Qed.
Lemma lem332242 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem332243 {A B : Type'} (R : type1413 A B) (_7111 : A) (_7112 : B) (H : type549 A B) (f : type467 A B) (x'' : type473 A B) (_7109 : type1413 A B) : (term1418 A B H f x'' R _7109 _7111 _7112) = (term1419 A B R _7111 _7112 H f x'' _7109).
Proof. exact (MK_COMB (@lem332242) (@lem332241 A B R _7111 _7112 H f x'' _7109)). Qed.
Lemma lem332257 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem332258 {A B : Type'} (R : type1413 A B) (_7111 : A) (_7112 : B) (H : type549 A B) (f : type467 A B) (x'' : type473 A B) (_7109 : type1413 A B) : (term1420 A B H f x'' _7109 R _7111 _7112) = (term1421 A B R _7111 _7112 H f x'' _7109).
Proof. exact (@lem332257 (term886 A B R _7111 _7112) (term1173 A B H f x'' _7109)). Qed.
Lemma lem332264 {A B : Type'} (_7109 : type1413 A B) (_7111 : A) (_7112 : B) : (term1422 A B _7109 _7111 _7112) = (term1422 A B _7109 _7111 _7112).
Proof. exact (eq_refl (term1422 A B _7109 _7111 _7112)). Qed.
Lemma lem332265 {A B : Type'} (R : type1413 A B) (_7111 : A) (_7112 : B) (H : type549 A B) (f : type467 A B) (x'' : type473 A B) (_7109 : type1413 A B) : (term1423 A B H f x'' _7109 R _7111 _7112) = (term1417 A B R _7111 _7112 H f x'' _7109).
Proof. exact (MK_COMB (@lem332264 A B _7109 _7111 _7112) (@lem332258 A B R _7111 _7112 H f x'' _7109)). Qed.
Lemma lem332276 {A B : Type'} (R : type1413 A B) (_7111 : A) (_7112 : B) (H : type549 A B) (f : type467 A B) (x'' : type473 A B) (_7109 : type1413 A B) : ((term1358 A B H f x'' R _7109 _7111 _7112) = (term1423 A B H f x'' _7109 R _7111 _7112)) = ((term1417 A B R _7111 _7112 H f x'' _7109) = (term1417 A B R _7111 _7112 H f x'' _7109)).
Proof. exact (MK_COMB (@lem332243 A B R _7111 _7112 H f x'' _7109) (@lem332265 A B R _7111 _7112 H f x'' _7109)). Qed.
Lemma lem332278 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem20665 A x) (@lem20664 A x)). Qed.
Lemma lem332279 (x : Prop) : (x = x) = True.
Proof. exact (@lem332278 Prop x). Qed.
Lemma lem332280 {A B : Type'} (R : type1413 A B) (_7111 : A) (_7112 : B) (H : type549 A B) (f : type467 A B) (x'' : type473 A B) (_7109 : type1413 A B) : ((term1417 A B R _7111 _7112 H f x'' _7109) = (term1417 A B R _7111 _7112 H f x'' _7109)) = True.
Proof. exact (@lem332279 (term1417 A B R _7111 _7112 H f x'' _7109)). Qed.
Lemma lem332281 {A B : Type'} (H : type549 A B) (f : type467 A B) (x'' : type473 A B) (_7109 : type1413 A B) (R : type1413 A B) (_7111 : A) (_7112 : B) : ((term1358 A B H f x'' R _7109 _7111 _7112) = (term1423 A B H f x'' _7109 R _7111 _7112)) = True.
Proof. exact (TRANS (@lem332276 A B R _7111 _7112 H f x'' _7109) (@lem332280 A B R _7111 _7112 H f x'' _7109)). Qed.
Lemma lem332282 {A B : Type'} (H : type549 A B) (f : type467 A B) (x'' : type473 A B) (_7109 : type1413 A B) (R : type1413 A B) (_7111 : A) (_7112 : B) : True = ((term1358 A B H f x'' R _7109 _7111 _7112) = (term1423 A B H f x'' _7109 R _7111 _7112)).
Proof. exact (SYM (@lem332281 A B H f x'' _7109 R _7111 _7112)). Qed.
Lemma lem332283 {A B : Type'} (H : type549 A B) (f : type467 A B) (x'' : type473 A B) (_7109 : type1413 A B) (R : type1413 A B) (_7111 : A) (_7112 : B) : (term1358 A B H f x'' R _7109 _7111 _7112) = (term1423 A B H f x'' _7109 R _7111 _7112).
Proof. exact (EQ_MP (@lem332282 A B H f x'' _7109 R _7111 _7112) (@lem0)). Qed.
Lemma lem332284 {A B : Type'} (_7109 : type1413 A B) (_7111 : A) (_7112 : B) (lt2 : type1402 A) (H : type549 A B) (f : type467 A B) (x'' : type473 A B) (R : type1413 A B) (h1 : term480 A B lt2 H f x'' R) : term1423 A B H f x'' _7109 R _7111 _7112.
Proof. exact (EQ_MP (@lem332283 A B H f x'' _7109 R _7111 _7112) (@lem331701 A B _7109 _7111 _7112 lt2 H f x'' R h1)). Qed.
Lemma lem332286 (b : Prop) (a : Prop) : (a \/ b) = (term990 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem332287 {A B : Type'} (H : type549 A B) (f : type467 A B) (x'' : type473 A B) (R : type1413 A B) (_7109 : type1413 A B) (_7111 : A) (_7112 : B) : (term1423 A B H f x'' _7109 R _7111 _7112) = (term1424 A B H f x'' R _7109 _7111 _7112).
Proof. exact (@lem332286 (term1420 A B H f x'' _7109 R _7111 _7112) (term885 A B _7109 _7111 _7112)). Qed.
Lemma lem332289 (a : Prop) (b : Prop) : (term1012 a b) = (term1013 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem332290 {A B : Type'} (H : type549 A B) (f : type467 A B) (x'' : type473 A B) (_7109 : type1413 A B) (R : type1413 A B) (_7111 : A) (_7112 : B) : (term1425 A B H f x'' _7109 R _7111 _7112) = (term1426 A B H f x'' _7109 R _7111 _7112).
Proof. exact (@lem332289 (term1173 A B H f x'' _7109) (term886 A B R _7111 _7112)). Qed.
Lemma lem332292 (a : Prop) : (term992 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem332293 {A B : Type'} (H : type549 A B) (f : type467 A B) (x'' : type473 A B) (_7109 : type1413 A B) : (term1427 A B H f x'' _7109) = (term1171 A B H f x'' _7109).
Proof. exact (@lem332292 (term1171 A B H f x'' _7109)). Qed.
Lemma lem332294 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem332295 {A B : Type'} (H : type549 A B) (f : type467 A B) (x'' : type473 A B) (_7109 : type1413 A B) : (term1428 A B H f x'' _7109) = (term1429 A B H f x'' _7109).
Proof. exact (MK_COMB (@lem332294) (@lem332293 A B H f x'' _7109)). Qed.
Lemma lem332297 (a : Prop) : (term992 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem332298 {A B : Type'} (R : type1413 A B) (_7111 : A) (_7112 : B) : (term1016 A B R _7111 _7112) = (term885 A B R _7111 _7112).
Proof. exact (@lem332297 (term885 A B R _7111 _7112)). Qed.
Lemma lem332299 {A B : Type'} (H : type549 A B) (f : type467 A B) (x'' : type473 A B) (_7109 : type1413 A B) (R : type1413 A B) (_7111 : A) (_7112 : B) : (term1426 A B H f x'' _7109 R _7111 _7112) = (term1430 A B H f x'' _7109 R _7111 _7112).
Proof. exact (MK_COMB (@lem332295 A B H f x'' _7109) (@lem332298 A B R _7111 _7112)). Qed.
Lemma lem332300 {A B : Type'} (H : type549 A B) (f : type467 A B) (x'' : type473 A B) (_7109 : type1413 A B) (R : type1413 A B) (_7111 : A) (_7112 : B) : (term1425 A B H f x'' _7109 R _7111 _7112) = (term1430 A B H f x'' _7109 R _7111 _7112).
Proof. exact (TRANS (@lem332290 A B H f x'' _7109 R _7111 _7112) (@lem332299 A B H f x'' _7109 R _7111 _7112)). Qed.
Lemma lem332301 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem332302 {A B : Type'} (H : type549 A B) (f : type467 A B) (x'' : type473 A B) (_7109 : type1413 A B) (R : type1413 A B) (_7111 : A) (_7112 : B) : (term1431 A B H f x'' _7109 R _7111 _7112) = (term1432 A B H f x'' _7109 R _7111 _7112).
Proof. exact (MK_COMB (@lem332301) (@lem332300 A B H f x'' _7109 R _7111 _7112)). Qed.
Lemma lem332303 {A B : Type'} (_7109 : type1413 A B) (_7111 : A) (_7112 : B) : (term885 A B _7109 _7111 _7112) = (term885 A B _7109 _7111 _7112).
Proof. exact (eq_refl (term885 A B _7109 _7111 _7112)). Qed.
Lemma lem332304 {A B : Type'} (H : type549 A B) (f : type467 A B) (x'' : type473 A B) (R : type1413 A B) (_7109 : type1413 A B) (_7111 : A) (_7112 : B) : (term1424 A B H f x'' R _7109 _7111 _7112) = (term1433 A B H f x'' R _7109 _7111 _7112).
Proof. exact (MK_COMB (@lem332302 A B H f x'' _7109 R _7111 _7112) (@lem332303 A B _7109 _7111 _7112)). Qed.
Lemma lem332305 {A B : Type'} (H : type549 A B) (f : type467 A B) (x'' : type473 A B) (R : type1413 A B) (_7109 : type1413 A B) (_7111 : A) (_7112 : B) : (term1423 A B H f x'' _7109 R _7111 _7112) = (term1433 A B H f x'' R _7109 _7111 _7112).
Proof. exact (TRANS (@lem332287 A B H f x'' R _7109 _7111 _7112) (@lem332304 A B H f x'' R _7109 _7111 _7112)). Qed.
Lemma lem332307 {A B : Type'} (z' : type515 A B) (lt2 : type1402 A) (H : type549 A B) (f : type467 A B) (x'' : type473 A B) (S' : type1413 A B) (R : type1413 A B) (x' : A) (y : B) (h1 : term282 A B lt2 z' S' H) (h2 : term480 A B lt2 H f x'' R) (h3 : term886 A B S' x' y) (h4 : R x' y) : term1430 A B H f x'' S' R x' y.
Proof. exact (conj (@lem332183 A B z' lt2 H f x'' S' R x' y h1 h2 h3 h4) (@lem332190 A B R x' y h4)). Qed.
Lemma lem332309 {A B : Type'} (_7109 : type1413 A B) (_7111 : A) (_7112 : B) (lt2 : type1402 A) (H : type549 A B) (f : type467 A B) (x'' : type473 A B) (R : type1413 A B) (h1 : term480 A B lt2 H f x'' R) : term1433 A B H f x'' R _7109 _7111 _7112.
Proof. exact (EQ_MP (@lem332305 A B H f x'' R _7109 _7111 _7112) (@lem332284 A B _7109 _7111 _7112 lt2 H f x'' R h1)). Qed.
Lemma lem332310 {A B : Type'} (_7109 : type1413 A B) (_7111 : A) (_7112 : B) (lt2 : type1402 A) (H : type549 A B) (f : type467 A B) (x'' : type473 A B) (R : type1413 A B) (h1 : term480 A B lt2 H f x'' R) : term1433 A B H f x'' R _7109 _7111 _7112.
Proof. exact (@lem332309 A B _7109 _7111 _7112 lt2 H f x'' R h1). Qed.
Lemma lem332311 {A B : Type'} (S' : type1413 A B) (x' : A) (y : B) (lt2 : type1402 A) (H : type549 A B) (f : type467 A B) (x'' : type473 A B) (R : type1413 A B) (h1 : term480 A B lt2 H f x'' R) : term1433 A B H f x'' R S' x' y.
Proof. exact (@lem332310 A B S' x' y lt2 H f x'' R h1). Qed.
Lemma lem332314 {A B : Type'} (z' : type515 A B) (lt2 : type1402 A) (H : type549 A B) (f : type467 A B) (x'' : type473 A B) (S' : type1413 A B) (R : type1413 A B) (x' : A) (y : B) (h1 : term282 A B lt2 z' S' H) (h2 : term480 A B lt2 H f x'' R) (h3 : term886 A B S' x' y) (h4 : R x' y) : term885 A B S' x' y.
Proof. exact (@lem332311 A B S' x' y lt2 H f x'' R h2 (@lem332307 A B z' lt2 H f x'' S' R x' y h1 h2 h3 h4)). Qed.
Lemma lem332315 {A B : Type'} (z' : type515 A B) (S' : type1413 A B) (lt2 : type1402 A) (H : type549 A B) (f : type467 A B) (x'' : type473 A B) (R : type1413 A B) (x' : A) (y : B) (h1 : term282 A B lt2 z' S' H) (h2 : term480 A B lt2 H f x'' R) (h3 : R x' y) : term1388 A B S' x' y.
Proof. exact (fun h0 : term886 A B S' x' y => @lem332314 A B z' lt2 H f x'' S' R x' y h1 h2 h0 h3). Qed.
Lemma lem332317 (p : Prop) : (term986 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem332318 {A B : Type'} (S' : type1413 A B) (x' : A) (y : B) : (term1388 A B S' x' y) = (term885 A B S' x' y).
Proof. exact (@lem332317 (term885 A B S' x' y)). Qed.
Lemma lem332319 {A B : Type'} (z' : type515 A B) (S' : type1413 A B) (lt2 : type1402 A) (H : type549 A B) (f : type467 A B) (x'' : type473 A B) (R : type1413 A B) (x' : A) (y : B) (h1 : term282 A B lt2 z' S' H) (h2 : term480 A B lt2 H f x'' R) (h3 : R x' y) : term885 A B S' x' y.
Proof. exact (EQ_MP (@lem332318 A B S' x' y) (@lem332315 A B z' S' lt2 H f x'' R x' y h1 h2 h3)). Qed.
Lemma lem332322 (p : Prop) : (~ p) = (p -> False).
Proof. exact (EQ_MP (@lem21021 p) (@lem0)). Qed.
Lemma lem332324 {A B : Type'} (S' : type1413 A B) (x' : A) (y : B) : (term886 A B S' x' y) = (term1434 A B S' x' y).
Proof. exact (@lem332322 (term885 A B S' x' y)). Qed.
Lemma lem332327 {A B : Type'} (S' : type1413 A B) (x' : A) (y : B) (h1 : term667 A B S' x' y) : term1434 A B S' x' y.
Proof. exact (EQ_MP (@lem332324 A B S' x' y) (@lem331627 A B S' x' y h1)). Qed.
Lemma lem332330 {A B : Type'} (z' : type515 A B) (lt2 : type1402 A) (H : type549 A B) (f : type467 A B) (x'' : type473 A B) (S' : type1413 A B) (R : type1413 A B) (x' : A) (y : B) (h1 : term282 A B lt2 z' S' H) (h2 : term480 A B lt2 H f x'' R) (h3 : term667 A B S' x' y) (h4 : R x' y) : False.
Proof. exact (@lem332327 A B S' x' y h3 (@lem332319 A B z' S' lt2 H f x'' R x' y h1 h2 h4)). Qed.
Lemma lem332331 {A B : Type'} (z' : type515 A B) (lt2 : type1402 A) (H : type549 A B) (f : type467 A B) (x'' : type473 A B) (S' : type1413 A B) (R : type1413 A B) (x' : A) (y : B) (h1 : term282 A B lt2 z' S' H) (h2 : term480 A B lt2 H f x'' R) (h3 : term667 A B S' x' y) (h4 : R x' y) : term1027.
Proof. exact (fun h0 : ~ False => @lem332330 A B z' lt2 H f x'' S' R x' y h1 h2 h3 h4). Qed.
Lemma lem332333 (p : Prop) : (term986 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem332334 : term1027 = False.
Proof. exact (@lem332333 False). Qed.
Lemma lem332335 {A B : Type'} (z' : type515 A B) (lt2 : type1402 A) (H : type549 A B) (f : type467 A B) (x'' : type473 A B) (S' : type1413 A B) (R : type1413 A B) (x' : A) (y : B) (h1 : term282 A B lt2 z' S' H) (h2 : term480 A B lt2 H f x'' R) (h3 : term667 A B S' x' y) (h4 : R x' y) : False.
Proof. exact (EQ_MP (@lem332334) (@lem332331 A B z' lt2 H f x'' S' R x' y h1 h2 h3 h4)). Qed.
Lemma lem332336 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (f : type467 A B) (x'' : type473 A B) (S' : type1413 A B) (R : type1413 A B) (x' : A) (y : B) (h1 : term1 A B lt2 S' H) (h2 : term480 A B lt2 H f x'' R) (h3 : term667 A B S' x' y) (h4 : R x' y) : False.
Proof. exact (ex_elim (@lem329462 A B lt2 S' H h1) (fun z' : type515 A B => fun h0 : term284 A B lt2 S' H z' => @lem332335 A B z' lt2 H f x'' S' R x' y h0 h2 h3 h4)). Qed.
Lemma lem332337 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (f : type467 A B) (x'' : type473 A B) (S' : type1413 A B) (R : type1413 A B) (x' : A) (y : B) (h1 : term3 A B lt2 R H) (h2 : term1 A B lt2 S' H) (h3 : term480 A B lt2 H f x'' R) (h4 : term667 A B S' x' y) (h5 : R x' y) : False.
Proof. exact (ex_elim (@lem329687 A B lt2 R H h1) (fun z : type548 A B => fun h0 : term362 A B lt2 R H z => @lem332336 A B lt2 H f x'' S' R x' y h2 h3 h4 h5)). Qed.
Lemma lem332338 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (f : type467 A B) (S' : type1413 A B) (R : type1413 A B) (x' : A) (y : B) (h1 : term3 A B lt2 R H) (h2 : term1 A B lt2 S' H) (h3 : term483 A B lt2 H f R) (h4 : term667 A B S' x' y) (h5 : R x' y) : False.
Proof. exact (ex_elim (@lem330440 A B lt2 H f R h3) (fun x'' : type473 A B => fun h0 : term482 A B lt2 H f R x'' => @lem332337 A B lt2 H f x'' S' R x' y h1 h2 h0 h4 h5)). Qed.
Lemma lem332339 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (S' : type1413 A B) (R : type1413 A B) (x' : A) (y : B) (h1 : term3 A B lt2 R H) (h2 : term1 A B lt2 S' H) (h3 : term5 A B lt2 H R) (h4 : term667 A B S' x' y) (h5 : R x' y) : False.
Proof. exact (ex_elim (@lem330068 A B lt2 H R h3) (fun f : type467 A B => fun h0 : term484 A B lt2 H R f => @lem332338 A B lt2 H f S' R x' y h1 h2 h0 h4 h5)). Qed.
Lemma lem332340 {A B : Type'} (x : A) (lt2 : type1402 A) (H : type549 A B) (S' : type1413 A B) (R : type1413 A B) (x' : A) (y : B) (h1 : term1043 A B lt2 x R) (h2 : term3 A B lt2 R H) (h3 : term1 A B lt2 S' H) (h4 : term5 A B lt2 H R) (h5 : term667 A B S' x' y) (h6 : R x' y) : False.
Proof. exact (ex_elim (@lem330426 A B lt2 x R h1) (fun y' : A -> B => fun h0 : term1151 A B lt2 x R y' => @lem332339 A B lt2 H S' R x' y h2 h3 h4 h5 h6)). Qed.
Lemma lem332341 {A B : Type'} (x : A) (lt2 : type1402 A) (H : type549 A B) (S' : type1413 A B) (R : type1413 A B) (x' : A) (y : B) (h1 : term1043 A B lt2 x R) (h2 : term3 A B lt2 R H) (h3 : term1 A B lt2 S' H) (h4 : term5 A B lt2 H R) (h5 : term667 A B S' x' y) (h6 : R x' y) : (term667 A B S' x' y) = False.
Proof. exact (prop_ext (fun h7 : term667 A B S' x' y => @lem332340 A B x lt2 H S' R x' y h1 h2 h3 h4 h5 h6) (fun h7 : False => @lem330438 A B S' x' y h5)). Qed.
Lemma lem332342 {A B : Type'} (x : A) (lt2 : type1402 A) (H : type549 A B) (S' : type1413 A B) (R : type1413 A B) (x' : A) (y : B) (h1 : term1043 A B lt2 x R) (h2 : term3 A B lt2 R H) (h3 : term1 A B lt2 S' H) (h4 : term5 A B lt2 H R) (h5 : term667 A B S' x' y) (h6 : R x' y) : False.
Proof. exact (EQ_MP (@lem332341 A B x lt2 H S' R x' y h1 h2 h3 h4 h5 h6) (@lem330438 A B S' x' y h5)). Qed.
Lemma lem332343 {A B : Type'} (x : A) (lt2 : type1402 A) (H : type549 A B) (S' : type1413 A B) (R : type1413 A B) (x' : A) (y : B) (h1 : term1043 A B lt2 x R) (h2 : term3 A B lt2 R H) (h3 : term1 A B lt2 S' H) (h4 : term5 A B lt2 H R) (h5 : term667 A B S' x' y) (h6 : R x' y) : (R x' y) = False.
Proof. exact (prop_ext (fun h7 : R x' y => @lem332342 A B x lt2 H S' R x' y h1 h2 h3 h4 h5 h6) (fun h7 : False => @lem330432 A B R x' y h6)). Qed.
Lemma lem332344 {A B : Type'} (x : A) (lt2 : type1402 A) (H : type549 A B) (S' : type1413 A B) (R : type1413 A B) (x' : A) (y : B) (h1 : term1043 A B lt2 x R) (h2 : term3 A B lt2 R H) (h3 : term1 A B lt2 S' H) (h4 : term5 A B lt2 H R) (h5 : term667 A B S' x' y) (h6 : R x' y) : False.
Proof. exact (EQ_MP (@lem332343 A B x lt2 H S' R x' y h1 h2 h3 h4 h5 h6) (@lem330432 A B R x' y h6)). Qed.
Lemma lem332345 {A B : Type'} (x : A) (lt2 : type1402 A) (H : type549 A B) (S' : type1413 A B) (R : type1413 A B) (x' : A) (y : B) (h1 : term1043 A B lt2 x R) (h2 : term3 A B lt2 R H) (h3 : term1 A B lt2 S' H) (h4 : term5 A B lt2 H R) (h5 : term667 A B S' x' y) (h6 : R x' y) : (term667 A B S' x' y) = False.
Proof. exact (prop_ext (fun h7 : term667 A B S' x' y => @lem332344 A B x lt2 H S' R x' y h1 h2 h3 h4 h5 h6) (fun h7 : False => @lem329186 A B S' x' y h5)). Qed.
Lemma lem332346 {A B : Type'} (x : A) (lt2 : type1402 A) (H : type549 A B) (S' : type1413 A B) (R : type1413 A B) (x' : A) (y : B) (h1 : term1043 A B lt2 x R) (h2 : term3 A B lt2 R H) (h3 : term1 A B lt2 S' H) (h4 : term5 A B lt2 H R) (h5 : term667 A B S' x' y) (h6 : R x' y) : False.
Proof. exact (EQ_MP (@lem332345 A B x lt2 H S' R x' y h1 h2 h3 h4 h5 h6) (@lem329186 A B S' x' y h5)). Qed.
Lemma lem332347 {A B : Type'} (x : A) (S' : type1413 A B) (lt2 : type1402 A) (H : type549 A B) (R : type1413 A B) (x' : A) (y : B) (h1 : term1043 A B lt2 x R) (h2 : term3 A B lt2 R H) (h3 : term1 A B lt2 S' H) (h4 : term5 A B lt2 H R) (h5 : R x' y) : term1095 A B S' x' y.
Proof. exact (fun h0 : term667 A B S' x' y => @lem332346 A B x lt2 H S' R x' y h1 h2 h3 h4 h0 h5). Qed.
Lemma lem332348 {A B : Type'} (x : A) (S' : type1413 A B) (lt2 : type1402 A) (H : type549 A B) (R : type1413 A B) (x' : A) (y : B) (h1 : term1043 A B lt2 x R) (h2 : term3 A B lt2 R H) (h3 : term1 A B lt2 S' H) (h4 : term5 A B lt2 H R) (h5 : R x' y) : S' x' y.
Proof. exact (EQ_MP (@lem329185 A B S' x' y) (@lem332347 A B x S' lt2 H R x' y h1 h2 h3 h4 h5)). Qed.
Lemma lem332349 {A B : Type'} (x' : A) (y : B) (x : A) (S' : type1413 A B) (lt2 : type1402 A) (H : type549 A B) (R : type1413 A B) (h1 : term1043 A B lt2 x R) (h2 : term3 A B lt2 R H) (h3 : term1 A B lt2 S' H) (h4 : term5 A B lt2 H R) : term67 A B R S' x' y.
Proof. exact (fun h0 : R x' y => @lem332348 A B x S' lt2 H R x' y h1 h2 h3 h4 h0). Qed.
Lemma lem332354 {A B : Type'} (x' : A) (x : A) (S' : type1413 A B) (lt2 : type1402 A) (H : type549 A B) (R : type1413 A B) (h1 : term1043 A B lt2 x R) (h2 : term3 A B lt2 R H) (h3 : term1 A B lt2 S' H) (h4 : term5 A B lt2 H R) : term69 A B R S' x'.
Proof. exact (fun y : B => @lem332349 A B x' y x S' lt2 H R h1 h2 h3 h4). Qed.
Lemma lem332359 {A B : Type'} (x : A) (S' : type1413 A B) (lt2 : type1402 A) (H : type549 A B) (R : type1413 A B) (h1 : term1043 A B lt2 x R) (h2 : term3 A B lt2 R H) (h3 : term1 A B lt2 S' H) (h4 : term5 A B lt2 H R) : term71 A B R S'.
Proof. exact (fun x' : A => @lem332354 A B x' x S' lt2 H R h1 h2 h3 h4). Qed.
Lemma lem332360 {A B : Type'} (x : A) (S' : type1413 A B) (lt2 : type1402 A) (H : type549 A B) (R : type1413 A B) (h1 : term3 A B lt2 R H) (h2 : term1 A B lt2 S' H) (h3 : term5 A B lt2 H R) : term1069 A B lt2 x R S'.
Proof. exact (fun h0 : term1043 A B lt2 x R => @lem332359 A B x S' lt2 H R h0 h1 h2 h3). Qed.
Lemma lem332361 {A B : Type'} (x : A) (R : type1413 A B) (lt2 : type1402 A) (S' : type1413 A B) (H : type549 A B) (h1 : term3 A B lt2 R H) (h2 : term1 A B lt2 S' H) : term1071 A B H lt2 x R S'.
Proof. exact (fun h0 : term5 A B lt2 H R => @lem332360 A B x S' lt2 H R h1 h2 h0). Qed.
Lemma lem332362 {A B : Type'} (x : A) (R : type1413 A B) (lt2 : type1402 A) (S' : type1413 A B) (H : type549 A B) (h1 : term1 A B lt2 S' H) : term1073 A B H lt2 x R S'.
Proof. exact (fun h0 : term3 A B lt2 R H => @lem332361 A B x R lt2 S' H h0 h1). Qed.
Lemma lem332363 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (S' : type1413 A B) : term1074 A B H lt2 x R S'.
Proof. exact (fun h0 : term1 A B lt2 S' H => @lem332362 A B x R lt2 S' H h0). Qed.
Lemma lem332368 {A B : Type'} (lt2 : type1402 A) (x : A) (R : type1413 A B) (S' : type1413 A B) : term1078 A B lt2 x R S'.
Proof. exact (fun H : type549 A B => @lem332363 A B H lt2 x R S'). Qed.
Lemma lem332373 {A B : Type'} (x : A) (R : type1413 A B) (S' : type1413 A B) : term1082 A B x R S'.
Proof. exact (fun lt2 : type1402 A => @lem332368 A B lt2 x R S'). Qed.
Lemma lem332378 {A B : Type'} (R : type1413 A B) (S' : type1413 A B) : term1086 A B R S'.
Proof. exact (fun x : A => @lem332373 A B x R S'). Qed.
Lemma lem332383 {A B : Type'} (S' : type1413 A B) : term1090 A B S'.
Proof. exact (fun R : type1413 A B => @lem332378 A B R S'). Qed.
Lemma lem332388 {A B : Type'} : term1094 A B.
Proof. exact (fun S' : type1413 A B => @lem332383 A B S'). Qed.
Lemma lem332389 {A B : Type'} : term1093 A B.
Proof. exact (EQ_MP (@lem329176 A B) (@lem332388 A B)). Qed.
Lemma lem332390 {A B : Type'} (S' : type1413 A B) : term1435 A B S'.
Proof. exact (@lem332389 A B S'). Qed.
Lemma lem332391 {A B : Type'} (S' : type1413 A B) : (term1435 A B S') = (term1089 A B S').
Proof. exact (eq_refl (term1435 A B S')). Qed.
Lemma lem332392 {A B : Type'} (S' : type1413 A B) : term1089 A B S'.
Proof. exact (EQ_MP (@lem332391 A B S') (@lem332390 A B S')). Qed.
Lemma lem332393 {A B : Type'} (S' : type1413 A B) (R : type1413 A B) : term1436 A B S' R.
Proof. exact (@lem332392 A B S' R). Qed.
Lemma lem332394 {A B : Type'} (R : type1413 A B) (S' : type1413 A B) : (term1436 A B S' R) = (term1085 A B R S').
Proof. exact (eq_refl (term1436 A B S' R)). Qed.
Lemma lem332395 {A B : Type'} (R : type1413 A B) (S' : type1413 A B) : term1085 A B R S'.
Proof. exact (EQ_MP (@lem332394 A B R S') (@lem332393 A B S' R)). Qed.
Lemma lem332396 {A B : Type'} (R : type1413 A B) (S' : type1413 A B) (x : A) : term1437 A B R S' x.
Proof. exact (@lem332395 A B R S' x). Qed.
Lemma lem332397 {A B : Type'} (x : A) (R : type1413 A B) (S' : type1413 A B) : (term1437 A B R S' x) = (term1081 A B x R S').
Proof. exact (eq_refl (term1437 A B R S' x)). Qed.
Lemma lem332398 {A B : Type'} (x : A) (R : type1413 A B) (S' : type1413 A B) : term1081 A B x R S'.
Proof. exact (EQ_MP (@lem332397 A B x R S') (@lem332396 A B R S' x)). Qed.
Lemma lem332399 {A B : Type'} (x : A) (R : type1413 A B) (S' : type1413 A B) (lt2 : type1402 A) : term1438 A B x R S' lt2.
Proof. exact (@lem332398 A B x R S' lt2). Qed.
Lemma lem332400 {A B : Type'} (lt2 : type1402 A) (x : A) (R : type1413 A B) (S' : type1413 A B) : (term1438 A B x R S' lt2) = (term1077 A B lt2 x R S').
Proof. exact (eq_refl (term1438 A B x R S' lt2)). Qed.
Lemma lem332401 {A B : Type'} (lt2 : type1402 A) (x : A) (R : type1413 A B) (S' : type1413 A B) : term1077 A B lt2 x R S'.
Proof. exact (EQ_MP (@lem332400 A B lt2 x R S') (@lem332399 A B x R S' lt2)). Qed.
Lemma lem332402 {A B : Type'} (lt2 : type1402 A) (x : A) (R : type1413 A B) (S' : type1413 A B) (H : type549 A B) : term1439 A B lt2 x R S' H.
Proof. exact (@lem332401 A B lt2 x R S' H). Qed.
Lemma lem332403 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (S' : type1413 A B) : (term1439 A B lt2 x R S' H) = (term1063 A B H lt2 x R S').
Proof. exact (eq_refl (term1439 A B lt2 x R S' H)). Qed.
Lemma lem332404 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (S' : type1413 A B) : term1063 A B H lt2 x R S'.
Proof. exact (EQ_MP (@lem332403 A B H lt2 x R S') (@lem332402 A B lt2 x R S' H)). Qed.
Lemma lem332406 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (S' : type1413 A B) : term1063 A B H lt2 x R S'.
Proof. exact (@lem328705 A B H lt2 x R S' (@lem332404 A B H lt2 x R S')). Qed.
Lemma lem332407 {A B : Type'} (x : A) (R : type1413 A B) (lt2 : type1402 A) (S' : type1413 A B) (H : type549 A B) (h1 : term1 A B lt2 S' H) : term1072 A B H lt2 x R S'.
Proof. exact (@lem332406 A B H lt2 x R S' (@lem322941 A B lt2 S' H h1)). Qed.
Lemma lem332408 {A B : Type'} (x : A) (R : type1413 A B) (lt2 : type1402 A) (S' : type1413 A B) (H : type549 A B) (h1 : term3 A B lt2 R H) (h2 : term1 A B lt2 S' H) : term1070 A B H lt2 x R S'.
Proof. exact (@lem332407 A B x R lt2 S' H h2 (@lem322943 A B lt2 R H h1)). Qed.
Lemma lem332409 {A B : Type'} (x : A) (S' : type1413 A B) (lt2 : type1402 A) (H : type549 A B) (R : type1413 A B) (h1 : term3 A B lt2 R H) (h2 : term1 A B lt2 S' H) (h3 : term5 A B lt2 H R) : term1068 A B lt2 x R S'.
Proof. exact (@lem332408 A B x R lt2 S' H h1 h2 (@lem322945 A B lt2 H R h3)). Qed.
Lemma lem332410 {A B : Type'} (x : A) (S' : type1413 A B) (lt2 : type1402 A) (H : type549 A B) (R : type1413 A B) (h1 : term1043 A B lt2 x R) (h2 : term3 A B lt2 R H) (h3 : term1 A B lt2 S' H) (h4 : term5 A B lt2 H R) : term1061 A B R S'.
Proof. exact (@lem332409 A B x S' lt2 H R h2 h3 h4 (@lem328664 A B lt2 x R h1)). Qed.
Lemma lem332411 {A B : Type'} (x : A) (lt2 : type1402 A) (H : type549 A B) (R : type1413 A B) (S' : type1413 A B) (h1 : term1043 A B lt2 x R) (h2 : term3 A B lt2 R H) (h3 : term1 A B lt2 S' H) (h4 : term5 A B lt2 H R) (h5 : term1062 A B R S') : False.
Proof. exact (@lem332410 A B x S' lt2 H R h1 h2 h3 h4 (@lem328689 A B R S' h5)). Qed.
Lemma lem332412 {A B : Type'} (x : A) (lt2 : type1402 A) (H : type549 A B) (R : type1413 A B) (S' : type1413 A B) (h1 : term1043 A B lt2 x R) (h2 : term3 A B lt2 R H) (h3 : term1 A B lt2 S' H) (h4 : term5 A B lt2 H R) (h5 : term1062 A B R S') : (term1062 A B R S') = False.
Proof. exact (prop_ext (fun h6 : term1062 A B R S' => @lem332411 A B x lt2 H R S' h1 h2 h3 h4 h5) (fun h6 : False => @lem328689 A B R S' h5)). Qed.
Lemma lem332413 {A B : Type'} (x : A) (lt2 : type1402 A) (H : type549 A B) (R : type1413 A B) (S' : type1413 A B) (h1 : term1043 A B lt2 x R) (h2 : term3 A B lt2 R H) (h3 : term1 A B lt2 S' H) (h4 : term5 A B lt2 H R) (h5 : term1062 A B R S') : False.
Proof. exact (EQ_MP (@lem332412 A B x lt2 H R S' h1 h2 h3 h4 h5) (@lem328689 A B R S' h5)). Qed.
Lemma lem332414 {A B : Type'} (x : A) (S' : type1413 A B) (lt2 : type1402 A) (H : type549 A B) (R : type1413 A B) (h1 : term1043 A B lt2 x R) (h2 : term3 A B lt2 R H) (h3 : term1 A B lt2 S' H) (h4 : term5 A B lt2 H R) : term1061 A B R S'.
Proof. exact (fun h0 : term1062 A B R S' => @lem332413 A B x lt2 H R S' h1 h2 h3 h4 h0). Qed.
Lemma lem332415 {A B : Type'} (x : A) (S' : type1413 A B) (lt2 : type1402 A) (H : type549 A B) (R : type1413 A B) (h1 : term1043 A B lt2 x R) (h2 : term3 A B lt2 R H) (h3 : term1 A B lt2 S' H) (h4 : term5 A B lt2 H R) : term71 A B R S'.
Proof. exact (EQ_MP (@lem328688 A B R S') (@lem332414 A B x S' lt2 H R h1 h2 h3 h4)). Qed.
Lemma lem332417 (p : Prop) : p = (term7 p).
Proof. exact (EQ_MP (@lem10578 p) (@lem10597 p)). Qed.
Lemma lem332418 {A B : Type'} (S' : type1413 A B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) : (term1440 A B S' H lt2 x R) = (term1441 A B S' H lt2 x R).
Proof. exact (@lem332417 (term1440 A B S' H lt2 x R)). Qed.
Lemma lem332419 {A B : Type'} (S' : type1413 A B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) : (term1441 A B S' H lt2 x R) = (term1440 A B S' H lt2 x R).
Proof. exact (SYM (@lem332418 A B S' H lt2 x R)). Qed.
Lemma lem332420 {A B : Type'} (S' : type1413 A B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (h1 : term1442 A B S' H lt2 x R) : term1442 A B S' H lt2 x R.
Proof. exact (h1). Qed.
Lemma lem332423 {A B : Type'} (S' : type1413 A B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (h1 : term1443 A B S' H lt2 x R) : term1443 A B S' H lt2 x R.
Proof. exact (h1). Qed.
Lemma lem332424 {A B : Type'} (S' : type1413 A B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) : term1444 A B S' H lt2 x R.
Proof. exact (fun h0 : term1443 A B S' H lt2 x R => @lem332423 A B S' H lt2 x R h0). Qed.
Lemma lem332425 {A B : Type'} (S' : type1413 A B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (h1 : term1444 A B S' H lt2 x R) : term1444 A B S' H lt2 x R.
Proof. exact (h1). Qed.
Lemma lem332426 {A B : Type'} (S' : type1413 A B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (h1 : term1443 A B S' H lt2 x R) : term1443 A B S' H lt2 x R.
Proof. exact (h1). Qed.
Lemma lem332427 {A B : Type'} (S' : type1413 A B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (h1 : term1443 A B S' H lt2 x R) (h2 : term1444 A B S' H lt2 x R) : term1443 A B S' H lt2 x R.
Proof. exact (@lem332425 A B S' H lt2 x R h2 (@lem332426 A B S' H lt2 x R h1)). Qed.
Lemma lem332428 {A B : Type'} (S' : type1413 A B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (h1 : term1443 A B S' H lt2 x R) : term1445 A B S' H lt2 x R.
Proof. exact (fun h0 : term1444 A B S' H lt2 x R => @lem332427 A B S' H lt2 x R h1 h0). Qed.
Lemma lem332429 {A B : Type'} (S' : type1413 A B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (h1 : term1444 A B S' H lt2 x R) : term1444 A B S' H lt2 x R.
Proof. exact (h1). Qed.
Lemma lem332430 {A B : Type'} (S' : type1413 A B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (h1 : term1443 A B S' H lt2 x R) (h2 : term1444 A B S' H lt2 x R) : term1443 A B S' H lt2 x R.
Proof. exact (@lem332428 A B S' H lt2 x R h1 (@lem332429 A B S' H lt2 x R h2)). Qed.
Lemma lem332431 {A B : Type'} (S' : type1413 A B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (h1 : term1444 A B S' H lt2 x R) : term1444 A B S' H lt2 x R.
Proof. exact (fun h0 : term1443 A B S' H lt2 x R => @lem332430 A B S' H lt2 x R h0 h1). Qed.
Lemma lem332432 {A B : Type'} (S' : type1413 A B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) : term1446 A B S' H lt2 x R.
Proof. exact (fun h0 : term1444 A B S' H lt2 x R => @lem332431 A B S' H lt2 x R h0). Qed.
Lemma lem332435 {A B : Type'} (S' : type1413 A B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) : term1444 A B S' H lt2 x R.
Proof. exact (@lem332432 A B S' H lt2 x R (@lem332424 A B S' H lt2 x R)). Qed.
Lemma lem332436 {A B : Type'} (S' : type1413 A B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) : term1444 A B S' H lt2 x R.
Proof. exact (@lem332435 A B S' H lt2 x R). Qed.
Lemma lem332544 (t : Prop) : (t -> False) = (~ t).
Proof. exact (proj2 (@lem16474 t)). Qed.
Lemma lem332545 {A B : Type'} (S' : type1413 A B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) : (term1441 A B S' H lt2 x R) = (term1447 A B S' H lt2 x R).
Proof. exact (@lem332544 (term1442 A B S' H lt2 x R)). Qed.
Lemma lem332547 (t : Prop) : (term992 t) = t.
Proof. exact (EQ_MP (@lem16507 t) (@lem16506 t)). Qed.
Lemma lem332548 {A B : Type'} (S' : type1413 A B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) : (term1447 A B S' H lt2 x R) = (term1440 A B S' H lt2 x R).
Proof. exact (@lem332547 (term1440 A B S' H lt2 x R)). Qed.
Lemma lem332551 {A B : Type'} (S' : type1413 A B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) : (term1441 A B S' H lt2 x R) = (term1440 A B S' H lt2 x R).
Proof. exact (TRANS (@lem332545 A B S' H lt2 x R) (@lem332548 A B S' H lt2 x R)). Qed.
Lemma lem332618 {A B : Type'} (lt2 : type1402 A) (x : A) (R : type1413 A B) : (term1045 A B lt2 x R) = (term1045 A B lt2 x R).
Proof. exact (eq_refl (term1045 A B lt2 x R)). Qed.
Lemma lem332619 {A B : Type'} (S' : type1413 A B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) : (term1448 A B S' H lt2 x R) = (term1449 A B S' H lt2 x R).
Proof. exact (MK_COMB (@lem332618 A B lt2 x R) (@lem332551 A B S' H lt2 x R)). Qed.
Lemma lem332622 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (R : type1413 A B) : (term23 A B lt2 H R) = (term23 A B lt2 H R).
Proof. exact (eq_refl (term23 A B lt2 H R)). Qed.
Lemma lem332623 {A B : Type'} (S' : type1413 A B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) : (term1450 A B S' H lt2 x R) = (term1451 A B S' H lt2 x R).
Proof. exact (MK_COMB (@lem332622 A B lt2 H R) (@lem332619 A B S' H lt2 x R)). Qed.
Lemma lem332626 {A B : Type'} (lt2 : type1402 A) (R : type1413 A B) (H : type549 A B) : (term26 A B lt2 R H) = (term26 A B lt2 R H).
Proof. exact (eq_refl (term26 A B lt2 R H)). Qed.
Lemma lem332627 {A B : Type'} (S' : type1413 A B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) : (term1452 A B S' H lt2 x R) = (term1453 A B S' H lt2 x R).
Proof. exact (MK_COMB (@lem332626 A B lt2 R H) (@lem332623 A B S' H lt2 x R)). Qed.
Lemma lem332630 {A B : Type'} (lt2 : type1402 A) (S' : type1413 A B) (H : type549 A B) : (term29 A B lt2 S' H) = (term29 A B lt2 S' H).
Proof. exact (eq_refl (term29 A B lt2 S' H)). Qed.
Lemma lem332631 {A B : Type'} (S' : type1413 A B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) : (term1443 A B S' H lt2 x R) = (term1454 A B S' H lt2 x R).
Proof. exact (MK_COMB (@lem332630 A B lt2 S' H) (@lem332627 A B S' H lt2 x R)). Qed.
Lemma lem332634 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) : (term1455 A B H lt2 x R) = (term1456 A B H lt2 x R).
Proof. exact (fun_ext (fun S' : type1413 A B => @lem332631 A B S' H lt2 x R)). Qed.
Lemma lem332635 {A B : Type'} : (@all (A -> B -> Prop)) = (@all (A -> B -> Prop)).
Proof. exact (eq_refl (@all (A -> B -> Prop))). Qed.
Lemma lem332636 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) : (term1457 A B H lt2 x R) = (term1458 A B H lt2 x R).
Proof. exact (MK_COMB (@lem332635 A B) (@lem332634 A B H lt2 x R)). Qed.
Lemma lem332641 {A B : Type'} (lt2 : type1402 A) (x : A) (R : type1413 A B) : (term1459 A B lt2 x R) = (term1460 A B lt2 x R).
Proof. exact (fun_ext (fun H : type549 A B => @lem332636 A B H lt2 x R)). Qed.
Lemma lem332642 {A B : Type'} : (@all ((A -> B) -> A -> B)) = (@all ((A -> B) -> A -> B)).
Proof. exact (eq_refl (@all ((A -> B) -> A -> B))). Qed.
Lemma lem332643 {A B : Type'} (lt2 : type1402 A) (x : A) (R : type1413 A B) : (term1461 A B lt2 x R) = (term1462 A B lt2 x R).
Proof. exact (MK_COMB (@lem332642 A B) (@lem332641 A B lt2 x R)). Qed.
Lemma lem332648 {A B : Type'} (x : A) (R : type1413 A B) : (term1463 A B x R) = (term1464 A B x R).
Proof. exact (fun_ext (fun lt2 : type1402 A => @lem332643 A B lt2 x R)). Qed.
Lemma lem332649 {A : Type'} : (@all (A -> A -> Prop)) = (@all (A -> A -> Prop)).
Proof. exact (eq_refl (@all (A -> A -> Prop))). Qed.
Lemma lem332650 {A B : Type'} (x : A) (R : type1413 A B) : (term1465 A B x R) = (term1466 A B x R).
Proof. exact (MK_COMB (@lem332649 A) (@lem332648 A B x R)). Qed.
Lemma lem332655 {A B : Type'} (R : type1413 A B) : (term1467 A B R) = (term1468 A B R).
Proof. exact (fun_ext (fun x : A => @lem332650 A B x R)). Qed.
Lemma lem332656 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem332657 {A B : Type'} (R : type1413 A B) : (term1469 A B R) = (term1470 A B R).
Proof. exact (MK_COMB (@lem332656 A) (@lem332655 A B R)). Qed.
Lemma lem332662 {A B : Type'} : (term1471 A B) = (term1472 A B).
Proof. exact (fun_ext (fun R : type1413 A B => @lem332657 A B R)). Qed.
Lemma lem332663 {A B : Type'} : (@all (A -> B -> Prop)) = (@all (A -> B -> Prop)).
Proof. exact (eq_refl (@all (A -> B -> Prop))). Qed.
Lemma lem332672 {A B : Type'} : (term1473 A B) = (term1474 A B).
Proof. exact (MK_COMB (@lem332663 A B) (@lem332662 A B)). Qed.
Lemma lem332677 {A B : Type'} (lt2 : type1402 A) (x : A) (R : type1413 A B) (f : A -> B) (z : A) : (term56 A B lt2 x R f z) = (term56 A B lt2 x R f z).
Proof. exact (eq_refl (term56 A B lt2 x R f z)). Qed.
Lemma lem332678 {A B : Type'} (lt2 : type1402 A) (x : A) (R : type1413 A B) (f : A -> B) : (term57 A B lt2 x R f) = (term57 A B lt2 x R f).
Proof. exact (fun_ext (fun z : A => @lem332677 A B lt2 x R f z)). Qed.
Lemma lem332679 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem332680 {A B : Type'} (lt2 : type1402 A) (x : A) (R : type1413 A B) (f : A -> B) : (term58 A B lt2 x R f) = (term58 A B lt2 x R f).
Proof. exact (MK_COMB (@lem332679 A) (@lem332678 A B lt2 x R f)). Qed.
Lemma lem332683 {A B : Type'} (y : B) (H : type549 A B) (f : A -> B) (x : A) : (term59 A B y H f x) = (term59 A B y H f x).
Proof. exact (eq_refl (term59 A B y H f x)). Qed.
Lemma lem332684 {A B : Type'} (y : B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (f : A -> B) : (term60 A B y H lt2 x R f) = (term60 A B y H lt2 x R f).
Proof. exact (MK_COMB (@lem332683 A B y H f x) (@lem332680 A B lt2 x R f)). Qed.
Lemma lem332685 {A B : Type'} (y : B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) : (term61 A B y H lt2 x R) = (term61 A B y H lt2 x R).
Proof. exact (fun_ext (fun f : A -> B => @lem332684 A B y H lt2 x R f)). Qed.
Lemma lem332686 {A B : Type'} : (@ex (A -> B)) = (@ex (A -> B)).
Proof. exact (eq_refl (@ex (A -> B))). Qed.
Lemma lem332687 {A B : Type'} (y : B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) : (term62 A B y H lt2 x R) = (term62 A B y H lt2 x R).
Proof. exact (MK_COMB (@lem332686 A B) (@lem332685 A B y H lt2 x R)). Qed.
Lemma lem332688 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) : (term1059 A B H lt2 x R) = (term1059 A B H lt2 x R).
Proof. exact (fun_ext (fun y : B => @lem332687 A B y H lt2 x R)). Qed.
Lemma lem332689 {B : Type'} : (@ex1 B) = (@ex1 B).
Proof. exact (eq_refl (@ex1 B)). Qed.
Lemma lem332690 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) : (term1060 A B H lt2 x R) = (term1060 A B H lt2 x R).
Proof. exact (MK_COMB (@lem332689 B) (@lem332688 A B H lt2 x R)). Qed.
Lemma lem332695 {A B : Type'} (R : type1413 A B) (S' : type1413 A B) (x : A) (y : B) : (term67 A B R S' x y) = (term67 A B R S' x y).
Proof. exact (eq_refl (term67 A B R S' x y)). Qed.
Lemma lem332696 {A B : Type'} (R : type1413 A B) (S' : type1413 A B) (x : A) : (term68 A B R S' x) = (term68 A B R S' x).
Proof. exact (fun_ext (fun y : B => @lem332695 A B R S' x y)). Qed.
Lemma lem332697 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem332698 {A B : Type'} (R : type1413 A B) (S' : type1413 A B) (x : A) : (term69 A B R S' x) = (term69 A B R S' x).
Proof. exact (MK_COMB (@lem332697 B) (@lem332696 A B R S' x)). Qed.
Lemma lem332699 {A B : Type'} (R : type1413 A B) (S' : type1413 A B) : (term70 A B R S') = (term70 A B R S').
Proof. exact (fun_ext (fun x : A => @lem332698 A B R S' x)). Qed.
Lemma lem332700 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem332701 {A B : Type'} (R : type1413 A B) (S' : type1413 A B) : (term71 A B R S') = (term71 A B R S').
Proof. exact (MK_COMB (@lem332700 A) (@lem332699 A B R S')). Qed.
Lemma lem332702 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem332703 {A B : Type'} (R : type1413 A B) (S' : type1413 A B) : (term1475 A B R S') = (term1475 A B R S').
Proof. exact (MK_COMB (@lem332702) (@lem332701 A B R S')). Qed.
Lemma lem332704 {A B : Type'} (S' : type1413 A B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) : (term1440 A B S' H lt2 x R) = (term1440 A B S' H lt2 x R).
Proof. exact (MK_COMB (@lem332703 A B R S') (@lem332690 A B H lt2 x R)). Qed.
Lemma lem332705 {A B : Type'} (R : type1413 A B) (y : A) (y' : B) : (R y y') = (R y y').
Proof. exact (eq_refl (R y y')). Qed.
Lemma lem332706 {A B : Type'} (R : type1413 A B) (y : A) : (term50 A B R y) = (term50 A B R y).
Proof. exact (fun_ext (fun y' : B => @lem332705 A B R y y')). Qed.
Lemma lem332707 {B : Type'} : (@ex1 B) = (@ex1 B).
Proof. exact (eq_refl (@ex1 B)). Qed.
Lemma lem332708 {A B : Type'} (R : type1413 A B) (y : A) : (term51 A B R y) = (term51 A B R y).
Proof. exact (MK_COMB (@lem332707 B) (@lem332706 A B R y)). Qed.
Lemma lem332711 {A : Type'} (lt2 : type1402 A) (y : A) (x : A) : (term1037 A lt2 y x) = (term1037 A lt2 y x).
Proof. exact (eq_refl (term1037 A lt2 y x)). Qed.
Lemma lem332712 {A B : Type'} (lt2 : type1402 A) (x : A) (R : type1413 A B) (y : A) : (term1039 A B lt2 x R y) = (term1039 A B lt2 x R y).
Proof. exact (MK_COMB (@lem332711 A lt2 y x) (@lem332708 A B R y)). Qed.
Lemma lem332713 {A B : Type'} (lt2 : type1402 A) (x : A) (R : type1413 A B) : (term1041 A B lt2 x R) = (term1041 A B lt2 x R).
Proof. exact (fun_ext (fun y : A => @lem332712 A B lt2 x R y)). Qed.
Lemma lem332714 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem332715 {A B : Type'} (lt2 : type1402 A) (x : A) (R : type1413 A B) : (term1043 A B lt2 x R) = (term1043 A B lt2 x R).
Proof. exact (MK_COMB (@lem332714 A) (@lem332713 A B lt2 x R)). Qed.
Lemma lem332716 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem332717 {A B : Type'} (lt2 : type1402 A) (x : A) (R : type1413 A B) : (term1045 A B lt2 x R) = (term1045 A B lt2 x R).
Proof. exact (MK_COMB (@lem332716) (@lem332715 A B lt2 x R)). Qed.
Lemma lem332718 {A B : Type'} (S' : type1413 A B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) : (term1449 A B S' H lt2 x R) = (term1449 A B S' H lt2 x R).
Proof. exact (MK_COMB (@lem332717 A B lt2 x R) (@lem332704 A B S' H lt2 x R)). Qed.
Lemma lem332723 {A B : Type'} (R : type1413 A B) (R' : type1413 A B) (a0 : A) (a1 : B) : (term67 A B R R' a0 a1) = (term67 A B R R' a0 a1).
Proof. exact (eq_refl (term67 A B R R' a0 a1)). Qed.
Lemma lem332724 {A B : Type'} (R : type1413 A B) (R' : type1413 A B) (a0 : A) : (term68 A B R R' a0) = (term68 A B R R' a0).
Proof. exact (fun_ext (fun a1 : B => @lem332723 A B R R' a0 a1)). Qed.
Lemma lem332725 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem332726 {A B : Type'} (R : type1413 A B) (R' : type1413 A B) (a0 : A) : (term69 A B R R' a0) = (term69 A B R R' a0).
Proof. exact (MK_COMB (@lem332725 B) (@lem332724 A B R R' a0)). Qed.
Lemma lem332727 {A B : Type'} (R : type1413 A B) (R' : type1413 A B) : (term70 A B R R') = (term70 A B R R').
Proof. exact (fun_ext (fun a0 : A => @lem332726 A B R R' a0)). Qed.
Lemma lem332728 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem332729 {A B : Type'} (R : type1413 A B) (R' : type1413 A B) : (term71 A B R R') = (term71 A B R R').
Proof. exact (MK_COMB (@lem332728 A) (@lem332727 A B R R')). Qed.
Lemma lem332730 {A B : Type'} (R' : type1413 A B) (H : type549 A B) (f : A -> B) (x : A) : (term72 A B R' H f x) = (term72 A B R' H f x).
Proof. exact (eq_refl (term72 A B R' H f x)). Qed.
Lemma lem332735 {A B : Type'} (lt2 : type1402 A) (x : A) (R' : type1413 A B) (f : A -> B) (z : A) : (term56 A B lt2 x R' f z) = (term56 A B lt2 x R' f z).
Proof. exact (eq_refl (term56 A B lt2 x R' f z)). Qed.
Lemma lem332736 {A B : Type'} (lt2 : type1402 A) (x : A) (R' : type1413 A B) (f : A -> B) : (term57 A B lt2 x R' f) = (term57 A B lt2 x R' f).
Proof. exact (fun_ext (fun z : A => @lem332735 A B lt2 x R' f z)). Qed.
Lemma lem332737 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem332738 {A B : Type'} (lt2 : type1402 A) (x : A) (R' : type1413 A B) (f : A -> B) : (term58 A B lt2 x R' f) = (term58 A B lt2 x R' f).
Proof. exact (MK_COMB (@lem332737 A) (@lem332736 A B lt2 x R' f)). Qed.
Lemma lem332739 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem332740 {A B : Type'} (lt2 : type1402 A) (x : A) (R' : type1413 A B) (f : A -> B) : (term73 A B lt2 x R' f) = (term73 A B lt2 x R' f).
Proof. exact (MK_COMB (@lem332739) (@lem332738 A B lt2 x R' f)). Qed.
Lemma lem332741 {A B : Type'} (lt2 : type1402 A) (R' : type1413 A B) (H : type549 A B) (f : A -> B) (x : A) : (term74 A B lt2 R' H f x) = (term74 A B lt2 R' H f x).
Proof. exact (MK_COMB (@lem332740 A B lt2 x R' f) (@lem332730 A B R' H f x)). Qed.
Lemma lem332742 {A B : Type'} (lt2 : type1402 A) (R' : type1413 A B) (H : type549 A B) (f : A -> B) : (term75 A B lt2 R' H f) = (term75 A B lt2 R' H f).
Proof. exact (fun_ext (fun x : A => @lem332741 A B lt2 R' H f x)). Qed.
Lemma lem332743 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem332744 {A B : Type'} (lt2 : type1402 A) (R' : type1413 A B) (H : type549 A B) (f : A -> B) : (term76 A B lt2 R' H f) = (term76 A B lt2 R' H f).
Proof. exact (MK_COMB (@lem332743 A) (@lem332742 A B lt2 R' H f)). Qed.
Lemma lem332745 {A B : Type'} (lt2 : type1402 A) (R' : type1413 A B) (H : type549 A B) : (term77 A B lt2 R' H) = (term77 A B lt2 R' H).
Proof. exact (fun_ext (fun f : A -> B => @lem332744 A B lt2 R' H f)). Qed.
Lemma lem332746 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem332747 {A B : Type'} (lt2 : type1402 A) (R' : type1413 A B) (H : type549 A B) : (term3 A B lt2 R' H) = (term3 A B lt2 R' H).
Proof. exact (MK_COMB (@lem332746 A B) (@lem332745 A B lt2 R' H)). Qed.
Lemma lem332748 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem332749 {A B : Type'} (lt2 : type1402 A) (R' : type1413 A B) (H : type549 A B) : (term26 A B lt2 R' H) = (term26 A B lt2 R' H).
Proof. exact (MK_COMB (@lem332748) (@lem332747 A B lt2 R' H)). Qed.
Lemma lem332750 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (R : type1413 A B) (R' : type1413 A B) : (term78 A B lt2 H R R') = (term78 A B lt2 H R R').
Proof. exact (MK_COMB (@lem332749 A B lt2 R' H) (@lem332729 A B R R')). Qed.
Lemma lem332751 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (R : type1413 A B) : (term79 A B lt2 H R) = (term79 A B lt2 H R).
Proof. exact (fun_ext (fun R' : type1413 A B => @lem332750 A B lt2 H R R')). Qed.
Lemma lem332752 {A B : Type'} : (@all (A -> B -> Prop)) = (@all (A -> B -> Prop)).
Proof. exact (eq_refl (@all (A -> B -> Prop))). Qed.
Lemma lem332753 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (R : type1413 A B) : (term5 A B lt2 H R) = (term5 A B lt2 H R).
Proof. exact (MK_COMB (@lem332752 A B) (@lem332751 A B lt2 H R)). Qed.
Lemma lem332754 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem332755 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (R : type1413 A B) : (term23 A B lt2 H R) = (term23 A B lt2 H R).
Proof. exact (MK_COMB (@lem332754) (@lem332753 A B lt2 H R)). Qed.
Lemma lem332756 {A B : Type'} (S' : type1413 A B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) : (term1451 A B S' H lt2 x R) = (term1451 A B S' H lt2 x R).
Proof. exact (MK_COMB (@lem332755 A B lt2 H R) (@lem332718 A B S' H lt2 x R)). Qed.
Lemma lem332757 {A B : Type'} (R : type1413 A B) (H : type549 A B) (f : A -> B) (x : A) : (term72 A B R H f x) = (term72 A B R H f x).
Proof. exact (eq_refl (term72 A B R H f x)). Qed.
Lemma lem332762 {A B : Type'} (lt2 : type1402 A) (x : A) (R : type1413 A B) (f : A -> B) (z : A) : (term56 A B lt2 x R f z) = (term56 A B lt2 x R f z).
Proof. exact (eq_refl (term56 A B lt2 x R f z)). Qed.
Lemma lem332763 {A B : Type'} (lt2 : type1402 A) (x : A) (R : type1413 A B) (f : A -> B) : (term57 A B lt2 x R f) = (term57 A B lt2 x R f).
Proof. exact (fun_ext (fun z : A => @lem332762 A B lt2 x R f z)). Qed.
Lemma lem332764 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem332765 {A B : Type'} (lt2 : type1402 A) (x : A) (R : type1413 A B) (f : A -> B) : (term58 A B lt2 x R f) = (term58 A B lt2 x R f).
Proof. exact (MK_COMB (@lem332764 A) (@lem332763 A B lt2 x R f)). Qed.
Lemma lem332766 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem332767 {A B : Type'} (lt2 : type1402 A) (x : A) (R : type1413 A B) (f : A -> B) : (term73 A B lt2 x R f) = (term73 A B lt2 x R f).
Proof. exact (MK_COMB (@lem332766) (@lem332765 A B lt2 x R f)). Qed.
Lemma lem332768 {A B : Type'} (lt2 : type1402 A) (R : type1413 A B) (H : type549 A B) (f : A -> B) (x : A) : (term74 A B lt2 R H f x) = (term74 A B lt2 R H f x).
Proof. exact (MK_COMB (@lem332767 A B lt2 x R f) (@lem332757 A B R H f x)). Qed.
Lemma lem332769 {A B : Type'} (lt2 : type1402 A) (R : type1413 A B) (H : type549 A B) (f : A -> B) : (term75 A B lt2 R H f) = (term75 A B lt2 R H f).
Proof. exact (fun_ext (fun x : A => @lem332768 A B lt2 R H f x)). Qed.
Lemma lem332770 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem332771 {A B : Type'} (lt2 : type1402 A) (R : type1413 A B) (H : type549 A B) (f : A -> B) : (term76 A B lt2 R H f) = (term76 A B lt2 R H f).
Proof. exact (MK_COMB (@lem332770 A) (@lem332769 A B lt2 R H f)). Qed.
Lemma lem332772 {A B : Type'} (lt2 : type1402 A) (R : type1413 A B) (H : type549 A B) : (term77 A B lt2 R H) = (term77 A B lt2 R H).
Proof. exact (fun_ext (fun f : A -> B => @lem332771 A B lt2 R H f)). Qed.
Lemma lem332773 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem332774 {A B : Type'} (lt2 : type1402 A) (R : type1413 A B) (H : type549 A B) : (term3 A B lt2 R H) = (term3 A B lt2 R H).
Proof. exact (MK_COMB (@lem332773 A B) (@lem332772 A B lt2 R H)). Qed.
Lemma lem332775 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem332776 {A B : Type'} (lt2 : type1402 A) (R : type1413 A B) (H : type549 A B) : (term26 A B lt2 R H) = (term26 A B lt2 R H).
Proof. exact (MK_COMB (@lem332775) (@lem332774 A B lt2 R H)). Qed.
Lemma lem332777 {A B : Type'} (S' : type1413 A B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) : (term1453 A B S' H lt2 x R) = (term1453 A B S' H lt2 x R).
Proof. exact (MK_COMB (@lem332776 A B lt2 R H) (@lem332756 A B S' H lt2 x R)). Qed.
Lemma lem332782 {A B : Type'} (g : A -> B) (S' : type1413 A B) (H : type549 A B) (f : A -> B) (x : A) : (term80 A B g S' H f x) = (term80 A B g S' H f x).
Proof. exact (eq_refl (term80 A B g S' H f x)). Qed.
Lemma lem332791 {A B : Type'} (lt2 : type1402 A) (x : A) (g : A -> B) (S' : type1413 A B) (f : A -> B) (z : A) : (term81 A B lt2 x g S' f z) = (term81 A B lt2 x g S' f z).
Proof. exact (eq_refl (term81 A B lt2 x g S' f z)). Qed.
Lemma lem332792 {A B : Type'} (lt2 : type1402 A) (x : A) (g : A -> B) (S' : type1413 A B) (f : A -> B) : (term82 A B lt2 x g S' f) = (term82 A B lt2 x g S' f).
Proof. exact (fun_ext (fun z : A => @lem332791 A B lt2 x g S' f z)). Qed.
Lemma lem332793 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem332794 {A B : Type'} (lt2 : type1402 A) (x : A) (g : A -> B) (S' : type1413 A B) (f : A -> B) : (term83 A B lt2 x g S' f) = (term83 A B lt2 x g S' f).
Proof. exact (MK_COMB (@lem332793 A) (@lem332792 A B lt2 x g S' f)). Qed.
Lemma lem332795 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem332796 {A B : Type'} (lt2 : type1402 A) (x : A) (g : A -> B) (S' : type1413 A B) (f : A -> B) : (term84 A B lt2 x g S' f) = (term84 A B lt2 x g S' f).
Proof. exact (MK_COMB (@lem332795) (@lem332794 A B lt2 x g S' f)). Qed.
Lemma lem332797 {A B : Type'} (lt2 : type1402 A) (g : A -> B) (S' : type1413 A B) (H : type549 A B) (f : A -> B) (x : A) : (term85 A B lt2 g S' H f x) = (term85 A B lt2 g S' H f x).
Proof. exact (MK_COMB (@lem332796 A B lt2 x g S' f) (@lem332782 A B g S' H f x)). Qed.
Lemma lem332798 {A B : Type'} (lt2 : type1402 A) (g : A -> B) (S' : type1413 A B) (H : type549 A B) (f : A -> B) : (term86 A B lt2 g S' H f) = (term86 A B lt2 g S' H f).
Proof. exact (fun_ext (fun x : A => @lem332797 A B lt2 g S' H f x)). Qed.
Lemma lem332799 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem332800 {A B : Type'} (lt2 : type1402 A) (g : A -> B) (S' : type1413 A B) (H : type549 A B) (f : A -> B) : (term87 A B lt2 g S' H f) = (term87 A B lt2 g S' H f).
Proof. exact (MK_COMB (@lem332799 A) (@lem332798 A B lt2 g S' H f)). Qed.
Lemma lem332801 {A B : Type'} (lt2 : type1402 A) (S' : type1413 A B) (H : type549 A B) (f : A -> B) : (term88 A B lt2 S' H f) = (term88 A B lt2 S' H f).
Proof. exact (fun_ext (fun g : A -> B => @lem332800 A B lt2 g S' H f)). Qed.
Lemma lem332802 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem332803 {A B : Type'} (lt2 : type1402 A) (S' : type1413 A B) (H : type549 A B) (f : A -> B) : (term89 A B lt2 S' H f) = (term89 A B lt2 S' H f).
Proof. exact (MK_COMB (@lem332802 A B) (@lem332801 A B lt2 S' H f)). Qed.
Lemma lem332804 {A B : Type'} (lt2 : type1402 A) (S' : type1413 A B) (H : type549 A B) : (term90 A B lt2 S' H) = (term90 A B lt2 S' H).
Proof. exact (fun_ext (fun f : A -> B => @lem332803 A B lt2 S' H f)). Qed.
Lemma lem332805 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem332806 {A B : Type'} (lt2 : type1402 A) (S' : type1413 A B) (H : type549 A B) : (term1 A B lt2 S' H) = (term1 A B lt2 S' H).
Proof. exact (MK_COMB (@lem332805 A B) (@lem332804 A B lt2 S' H)). Qed.
Lemma lem332807 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem332808 {A B : Type'} (lt2 : type1402 A) (S' : type1413 A B) (H : type549 A B) : (term29 A B lt2 S' H) = (term29 A B lt2 S' H).
Proof. exact (MK_COMB (@lem332807) (@lem332806 A B lt2 S' H)). Qed.
Lemma lem332809 {A B : Type'} (S' : type1413 A B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) : (term1454 A B S' H lt2 x R) = (term1454 A B S' H lt2 x R).
Proof. exact (MK_COMB (@lem332808 A B lt2 S' H) (@lem332777 A B S' H lt2 x R)). Qed.
Lemma lem332810 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) : (term1456 A B H lt2 x R) = (term1456 A B H lt2 x R).
Proof. exact (fun_ext (fun S' : type1413 A B => @lem332809 A B S' H lt2 x R)). Qed.
Lemma lem332811 {A B : Type'} : (@all (A -> B -> Prop)) = (@all (A -> B -> Prop)).
Proof. exact (eq_refl (@all (A -> B -> Prop))). Qed.
Lemma lem332812 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) : (term1458 A B H lt2 x R) = (term1458 A B H lt2 x R).
Proof. exact (MK_COMB (@lem332811 A B) (@lem332810 A B H lt2 x R)). Qed.
Lemma lem332813 {A B : Type'} (lt2 : type1402 A) (x : A) (R : type1413 A B) : (term1460 A B lt2 x R) = (term1460 A B lt2 x R).
Proof. exact (fun_ext (fun H : type549 A B => @lem332812 A B H lt2 x R)). Qed.
Lemma lem332814 {A B : Type'} : (@all ((A -> B) -> A -> B)) = (@all ((A -> B) -> A -> B)).
Proof. exact (eq_refl (@all ((A -> B) -> A -> B))). Qed.
Lemma lem332815 {A B : Type'} (lt2 : type1402 A) (x : A) (R : type1413 A B) : (term1462 A B lt2 x R) = (term1462 A B lt2 x R).
Proof. exact (MK_COMB (@lem332814 A B) (@lem332813 A B lt2 x R)). Qed.
Lemma lem332816 {A B : Type'} (x : A) (R : type1413 A B) : (term1464 A B x R) = (term1464 A B x R).
Proof. exact (fun_ext (fun lt2 : type1402 A => @lem332815 A B lt2 x R)). Qed.
Lemma lem332817 {A : Type'} : (@all (A -> A -> Prop)) = (@all (A -> A -> Prop)).
Proof. exact (eq_refl (@all (A -> A -> Prop))). Qed.
Lemma lem332818 {A B : Type'} (x : A) (R : type1413 A B) : (term1466 A B x R) = (term1466 A B x R).
Proof. exact (MK_COMB (@lem332817 A) (@lem332816 A B x R)). Qed.
Lemma lem332819 {A B : Type'} (R : type1413 A B) : (term1468 A B R) = (term1468 A B R).
Proof. exact (fun_ext (fun x : A => @lem332818 A B x R)). Qed.
Lemma lem332820 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem332821 {A B : Type'} (R : type1413 A B) : (term1470 A B R) = (term1470 A B R).
Proof. exact (MK_COMB (@lem332820 A) (@lem332819 A B R)). Qed.
Lemma lem332822 {A B : Type'} : (term1472 A B) = (term1472 A B).
Proof. exact (fun_ext (fun R : type1413 A B => @lem332821 A B R)). Qed.
Lemma lem332823 {A B : Type'} : (@all (A -> B -> Prop)) = (@all (A -> B -> Prop)).
Proof. exact (eq_refl (@all (A -> B -> Prop))). Qed.
Lemma lem332824 {A B : Type'} : (term1474 A B) = (term1474 A B).
Proof. exact (MK_COMB (@lem332823 A B) (@lem332822 A B)). Qed.
Lemma lem333003 {A B : Type'} : (term1473 A B) = (term1474 A B).
Proof. exact (TRANS (@lem332672 A B) (@lem332824 A B)). Qed.
Lemma lem333004 {A B : Type'} : (term1474 A B) = (term1473 A B).
Proof. exact (SYM (@lem333003 A B)). Qed.
Lemma lem333005 {A B : Type'} (lt2 : type1402 A) (S' : type1413 A B) (H : type549 A B) (h1 : term1 A B lt2 S' H) : term1 A B lt2 S' H.
Proof. exact (h1). Qed.
Lemma lem333006 {A B : Type'} (lt2 : type1402 A) (R : type1413 A B) (H : type549 A B) (h1 : term3 A B lt2 R H) : term3 A B lt2 R H.
Proof. exact (h1). Qed.
Lemma lem333007 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (R : type1413 A B) (h1 : term5 A B lt2 H R) : term5 A B lt2 H R.
Proof. exact (h1). Qed.
Lemma lem333008 {A B : Type'} (lt2 : type1402 A) (x : A) (R : type1413 A B) (h1 : term1043 A B lt2 x R) : term1043 A B lt2 x R.
Proof. exact (h1). Qed.
Lemma lem333009 {A B : Type'} (R : type1413 A B) (S' : type1413 A B) (h1 : term71 A B R S') : term71 A B R S'.
Proof. exact (h1). Qed.
Lemma lem333011 (p : Prop) : p = (term7 p).
Proof. exact (EQ_MP (@lem10578 p) (@lem10597 p)). Qed.
Lemma lem333012 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) : (term1060 A B H lt2 x R) = (term1476 A B H lt2 x R).
Proof. exact (@lem333011 (term1060 A B H lt2 x R)). Qed.
Lemma lem333013 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) : (term1476 A B H lt2 x R) = (term1060 A B H lt2 x R).
Proof. exact (SYM (@lem333012 A B H lt2 x R)). Qed.
Lemma lem333014 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (h1 : term1477 A B H lt2 x R) : term1477 A B H lt2 x R.
Proof. exact (h1). Qed.
Lemma lem333022 {A B : Type'} (g : A -> B) (S' : type1413 A B) (f : A -> B) (z : A) : (term171 A B g S' f z) = (term172 A B g S' f z).
Proof. exact (@lem17045 ((f z) = (g z)) (term173 A B S' f z)). Qed.
Lemma lem333024 {A : Type'} (lt2 : type1402 A) (z : A) (x : A) : (term174 A lt2 z x) = (term174 A lt2 z x).
Proof. exact (eq_refl (term174 A lt2 z x)). Qed.
Lemma lem333025 {A B : Type'} (lt2 : type1402 A) (x : A) (g : A -> B) (S' : type1413 A B) (f : A -> B) (z : A) : (term175 A B lt2 x g S' f z) = (term176 A B lt2 x g S' f z).
Proof. exact (MK_COMB (@lem333024 A lt2 z x) (@lem333022 A B g S' f z)). Qed.
Lemma lem333026 {A B : Type'} (lt2 : type1402 A) (x : A) (g : A -> B) (S' : type1413 A B) (f : A -> B) (z : A) : (term177 A B lt2 x g S' f z) = (term175 A B lt2 x g S' f z).
Proof. exact (@lem17362 (lt2 z x) (term178 A B g S' f z)). Qed.
Lemma lem333027 {A B : Type'} (lt2 : type1402 A) (x : A) (g : A -> B) (S' : type1413 A B) (f : A -> B) (z : A) : (term177 A B lt2 x g S' f z) = (term176 A B lt2 x g S' f z).
Proof. exact (TRANS (@lem333026 A B lt2 x g S' f z) (@lem333025 A B lt2 x g S' f z)). Qed.
Lemma lem333028 {A : Type'} (P : A -> Prop) : (term112 A P) = (term113 A P).
Proof. exact (@lem18392 A P). Qed.
Lemma lem333029 {A B : Type'} (lt2 : type1402 A) (x : A) (g : A -> B) (S' : type1413 A B) (f : A -> B) : (term179 A B lt2 x g S' f) = (term180 A B lt2 x g S' f).
Proof. exact (@lem333028 A (term82 A B lt2 x g S' f)). Qed.
Lemma lem333030 {A B : Type'} (lt2 : type1402 A) (x : A) (g : A -> B) (S' : type1413 A B) (f : A -> B) (z : A) : (term181 A B lt2 x g S' f z) = (term81 A B lt2 x g S' f z).
Proof. exact (eq_refl (term181 A B lt2 x g S' f z)). Qed.
Lemma lem333031 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem333032 {A B : Type'} (lt2 : type1402 A) (x : A) (g : A -> B) (S' : type1413 A B) (f : A -> B) (z : A) : (term182 A B lt2 x g S' f z) = (term177 A B lt2 x g S' f z).
Proof. exact (MK_COMB (@lem333031) (@lem333030 A B lt2 x g S' f z)). Qed.
Lemma lem333033 {A B : Type'} (lt2 : type1402 A) (x : A) (g : A -> B) (S' : type1413 A B) (f : A -> B) (z : A) : (term182 A B lt2 x g S' f z) = (term176 A B lt2 x g S' f z).
Proof. exact (TRANS (@lem333032 A B lt2 x g S' f z) (@lem333027 A B lt2 x g S' f z)). Qed.
Lemma lem333034 {A B : Type'} (lt2 : type1402 A) (x : A) (g : A -> B) (S' : type1413 A B) (f : A -> B) : (term183 A B lt2 x g S' f) = (term184 A B lt2 x g S' f).
Proof. exact (fun_ext (fun z : A => @lem333033 A B lt2 x g S' f z)). Qed.
Lemma lem333035 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem333036 {A B : Type'} (lt2 : type1402 A) (x : A) (g : A -> B) (S' : type1413 A B) (f : A -> B) : (term180 A B lt2 x g S' f) = (term185 A B lt2 x g S' f).
Proof. exact (MK_COMB (@lem333035 A) (@lem333034 A B lt2 x g S' f)). Qed.
Lemma lem333037 {A B : Type'} (lt2 : type1402 A) (x : A) (g : A -> B) (S' : type1413 A B) (f : A -> B) : (term179 A B lt2 x g S' f) = (term185 A B lt2 x g S' f).
Proof. exact (TRANS (@lem333029 A B lt2 x g S' f) (@lem333036 A B lt2 x g S' f)). Qed.
Lemma lem333042 {A B : Type'} (g : A -> B) (S' : type1413 A B) (H : type549 A B) (f : A -> B) (x : A) : (term80 A B g S' H f x) = (term80 A B g S' H f x).
Proof. exact (eq_refl (term80 A B g S' H f x)). Qed.
Lemma lem333043 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem333044 {A B : Type'} (lt2 : type1402 A) (x : A) (g : A -> B) (S' : type1413 A B) (f : A -> B) : (term186 A B lt2 x g S' f) = (term187 A B lt2 x g S' f).
Proof. exact (MK_COMB (@lem333043) (@lem333037 A B lt2 x g S' f)). Qed.
Lemma lem333045 {A B : Type'} (lt2 : type1402 A) (g : A -> B) (S' : type1413 A B) (H : type549 A B) (f : A -> B) (x : A) : (term188 A B lt2 g S' H f x) = (term189 A B lt2 g S' H f x).
Proof. exact (MK_COMB (@lem333044 A B lt2 x g S' f) (@lem333042 A B g S' H f x)). Qed.
Lemma lem333046 {A B : Type'} (lt2 : type1402 A) (g : A -> B) (S' : type1413 A B) (H : type549 A B) (f : A -> B) (x : A) : (term85 A B lt2 g S' H f x) = (term188 A B lt2 g S' H f x).
Proof. exact (@lem17265 (term83 A B lt2 x g S' f) (term80 A B g S' H f x)). Qed.
Lemma lem333047 {A B : Type'} (lt2 : type1402 A) (g : A -> B) (S' : type1413 A B) (H : type549 A B) (f : A -> B) (x : A) : (term85 A B lt2 g S' H f x) = (term189 A B lt2 g S' H f x).
Proof. exact (TRANS (@lem333046 A B lt2 g S' H f x) (@lem333045 A B lt2 g S' H f x)). Qed.
Lemma lem333048 {A B : Type'} (lt2 : type1402 A) (g : A -> B) (S' : type1413 A B) (H : type549 A B) (f : A -> B) : (term86 A B lt2 g S' H f) = (term190 A B lt2 g S' H f).
Proof. exact (fun_ext (fun x : A => @lem333047 A B lt2 g S' H f x)). Qed.
Lemma lem333049 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem333050 {A B : Type'} (lt2 : type1402 A) (g : A -> B) (S' : type1413 A B) (H : type549 A B) (f : A -> B) : (term87 A B lt2 g S' H f) = (term191 A B lt2 g S' H f).
Proof. exact (MK_COMB (@lem333049 A) (@lem333048 A B lt2 g S' H f)). Qed.
Lemma lem333051 {A B : Type'} (lt2 : type1402 A) (S' : type1413 A B) (H : type549 A B) (f : A -> B) : (term88 A B lt2 S' H f) = (term192 A B lt2 S' H f).
Proof. exact (fun_ext (fun g : A -> B => @lem333050 A B lt2 g S' H f)). Qed.
Lemma lem333052 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem333053 {A B : Type'} (lt2 : type1402 A) (S' : type1413 A B) (H : type549 A B) (f : A -> B) : (term89 A B lt2 S' H f) = (term193 A B lt2 S' H f).
Proof. exact (MK_COMB (@lem333052 A B) (@lem333051 A B lt2 S' H f)). Qed.
Lemma lem333054 {A B : Type'} (lt2 : type1402 A) (S' : type1413 A B) (H : type549 A B) : (term90 A B lt2 S' H) = (term194 A B lt2 S' H).
Proof. exact (fun_ext (fun f : A -> B => @lem333053 A B lt2 S' H f)). Qed.
Lemma lem333055 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem333056 {A B : Type'} (lt2 : type1402 A) (S' : type1413 A B) (H : type549 A B) : (term1 A B lt2 S' H) = (term195 A B lt2 S' H).
Proof. exact (MK_COMB (@lem333055 A B) (@lem333054 A B lt2 S' H)). Qed.
Lemma lem333163 {A : Type'} (P : A -> Prop) (Q : Prop) : (term127 A P Q) = (term128 A P Q).
Proof. exact (EQ_MP (@lem18905 A P Q) (@lem18904 A P Q)). Qed.
Lemma lem333164 {A : Type'} (P : A -> Prop) (Q : Prop) : (term127 A P Q) = (term128 A P Q).
Proof. exact (@lem333163 A P Q). Qed.
Lemma lem333165 {A B : Type'} (lt2 : type1402 A) (g : A -> B) (S' : type1413 A B) (H : type549 A B) (f : A -> B) (x : A) : (term196 A B lt2 g S' H f x) = (term197 A B lt2 g S' H f x).
Proof. exact (@lem333164 A (term184 A B lt2 x g S' f) (term80 A B g S' H f x)). Qed.
Lemma lem333166 {A B : Type'} (lt2 : type1402 A) (x : A) (g : A -> B) (S' : type1413 A B) (f : A -> B) (z : A) : (term198 A B lt2 x g S' f z) = (term176 A B lt2 x g S' f z).
Proof. exact (eq_refl (term198 A B lt2 x g S' f z)). Qed.
Lemma lem333167 {A B : Type'} (lt2 : type1402 A) (x : A) (g : A -> B) (S' : type1413 A B) (f : A -> B) : (term199 A B lt2 x g S' f) = (term184 A B lt2 x g S' f).
Proof. exact (fun_ext (fun z : A => @lem333166 A B lt2 x g S' f z)). Qed.
Lemma lem333168 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem333169 {A B : Type'} (lt2 : type1402 A) (x : A) (g : A -> B) (S' : type1413 A B) (f : A -> B) : (term200 A B lt2 x g S' f) = (term185 A B lt2 x g S' f).
Proof. exact (MK_COMB (@lem333168 A) (@lem333167 A B lt2 x g S' f)). Qed.
Lemma lem333170 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem333171 {A B : Type'} (lt2 : type1402 A) (x : A) (g : A -> B) (S' : type1413 A B) (f : A -> B) : (term201 A B lt2 x g S' f) = (term187 A B lt2 x g S' f).
Proof. exact (MK_COMB (@lem333170) (@lem333169 A B lt2 x g S' f)). Qed.
Lemma lem333172 {A B : Type'} (g : A -> B) (S' : type1413 A B) (H : type549 A B) (f : A -> B) (x : A) : (term80 A B g S' H f x) = (term80 A B g S' H f x).
Proof. exact (eq_refl (term80 A B g S' H f x)). Qed.
Lemma lem333173 {A B : Type'} (lt2 : type1402 A) (g : A -> B) (S' : type1413 A B) (H : type549 A B) (f : A -> B) (x : A) : (term196 A B lt2 g S' H f x) = (term189 A B lt2 g S' H f x).
Proof. exact (MK_COMB (@lem333171 A B lt2 x g S' f) (@lem333172 A B g S' H f x)). Qed.
Lemma lem333174 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem333175 {A B : Type'} (lt2 : type1402 A) (g : A -> B) (S' : type1413 A B) (H : type549 A B) (f : A -> B) (x : A) : (term202 A B lt2 g S' H f x) = (term203 A B lt2 g S' H f x).
Proof. exact (MK_COMB (@lem333174) (@lem333173 A B lt2 g S' H f x)). Qed.
Lemma lem333176 {A B : Type'} (lt2 : type1402 A) (x : A) (g : A -> B) (S' : type1413 A B) (f : A -> B) (z : A) : (term198 A B lt2 x g S' f z) = (term176 A B lt2 x g S' f z).
Proof. exact (eq_refl (term198 A B lt2 x g S' f z)). Qed.
Lemma lem333177 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem333178 {A B : Type'} (lt2 : type1402 A) (x : A) (g : A -> B) (S' : type1413 A B) (f : A -> B) (z : A) : (term204 A B lt2 x g S' f z) = (term205 A B lt2 x g S' f z).
Proof. exact (MK_COMB (@lem333177) (@lem333176 A B lt2 x g S' f z)). Qed.
Lemma lem333179 {A B : Type'} (g : A -> B) (S' : type1413 A B) (H : type549 A B) (f : A -> B) (x : A) : (term80 A B g S' H f x) = (term80 A B g S' H f x).
Proof. exact (eq_refl (term80 A B g S' H f x)). Qed.
Lemma lem333180 {A B : Type'} (lt2 : type1402 A) (z : A) (g : A -> B) (S' : type1413 A B) (H : type549 A B) (f : A -> B) (x : A) : (term206 A B lt2 z g S' H f x) = (term207 A B lt2 z g S' H f x).
Proof. exact (MK_COMB (@lem333178 A B lt2 x g S' f z) (@lem333179 A B g S' H f x)). Qed.
Lemma lem333181 {A B : Type'} (lt2 : type1402 A) (g : A -> B) (S' : type1413 A B) (H : type549 A B) (f : A -> B) (x : A) : (term208 A B lt2 g S' H f x) = (term209 A B lt2 g S' H f x).
Proof. exact (fun_ext (fun z : A => @lem333180 A B lt2 z g S' H f x)). Qed.
Lemma lem333182 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem333183 {A B : Type'} (lt2 : type1402 A) (g : A -> B) (S' : type1413 A B) (H : type549 A B) (f : A -> B) (x : A) : (term197 A B lt2 g S' H f x) = (term210 A B lt2 g S' H f x).
Proof. exact (MK_COMB (@lem333182 A) (@lem333181 A B lt2 g S' H f x)). Qed.
Lemma lem333184 {A B : Type'} (lt2 : type1402 A) (g : A -> B) (S' : type1413 A B) (H : type549 A B) (f : A -> B) (x : A) : ((term196 A B lt2 g S' H f x) = (term197 A B lt2 g S' H f x)) = ((term189 A B lt2 g S' H f x) = (term210 A B lt2 g S' H f x)).
Proof. exact (MK_COMB (@lem333175 A B lt2 g S' H f x) (@lem333183 A B lt2 g S' H f x)). Qed.
Lemma lem333185 {A B : Type'} (lt2 : type1402 A) (g : A -> B) (S' : type1413 A B) (H : type549 A B) (f : A -> B) (x : A) : (term189 A B lt2 g S' H f x) = (term210 A B lt2 g S' H f x).
Proof. exact (EQ_MP (@lem333184 A B lt2 g S' H f x) (@lem333165 A B lt2 g S' H f x)). Qed.
Lemma lem333186 {A B : Type'} (lt2 : type1402 A) (g : A -> B) (S' : type1413 A B) (H : type549 A B) (f : A -> B) : (term190 A B lt2 g S' H f) = (term211 A B lt2 g S' H f).
Proof. exact (fun_ext (fun x : A => @lem333185 A B lt2 g S' H f x)). Qed.
Lemma lem333187 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem333188 {A B : Type'} (lt2 : type1402 A) (g : A -> B) (S' : type1413 A B) (H : type549 A B) (f : A -> B) : (term191 A B lt2 g S' H f) = (term212 A B lt2 g S' H f).
Proof. exact (MK_COMB (@lem333187 A) (@lem333186 A B lt2 g S' H f)). Qed.
Lemma lem333190 {A B : Type'} (P : type1413 A B) : (term146 A B P) = (term147 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem333191 {A : Type'} (P : type1402 A) : (term213 A P) = (term214 A P).
Proof. exact (@lem333190 A A P). Qed.
Lemma lem333192 {A B : Type'} (lt2 : type1402 A) (g : A -> B) (S' : type1413 A B) (H : type549 A B) (f : A -> B) : (term215 A B lt2 g S' H f) = (term216 A B lt2 g S' H f).
Proof. exact (@lem333191 A (term217 A B lt2 g S' H f)). Qed.
Lemma lem333193 {A B : Type'} (lt2 : type1402 A) (g : A -> B) (S' : type1413 A B) (H : type549 A B) (f : A -> B) (x : A) : (term218 A B lt2 g S' H f x) = (term209 A B lt2 g S' H f x).
Proof. exact (eq_refl (term218 A B lt2 g S' H f x)). Qed.
Lemma lem333194 {A : Type'} (z : A) : z = z.
Proof. exact (eq_refl z). Qed.
Lemma lem333195 {A B : Type'} (lt2 : type1402 A) (g : A -> B) (S' : type1413 A B) (H : type549 A B) (f : A -> B) (x : A) (z : A) : (term219 A B lt2 g S' H f x z) = (term220 A B lt2 g S' H f x z).
Proof. exact (MK_COMB (@lem333193 A B lt2 g S' H f x) (@lem333194 A z)). Qed.
Lemma lem333196 {A B : Type'} (lt2 : type1402 A) (z : A) (g : A -> B) (S' : type1413 A B) (H : type549 A B) (f : A -> B) (x : A) : (term220 A B lt2 g S' H f x z) = (term207 A B lt2 z g S' H f x).
Proof. exact (eq_refl (term220 A B lt2 g S' H f x z)). Qed.
Lemma lem333197 {A B : Type'} (lt2 : type1402 A) (z : A) (g : A -> B) (S' : type1413 A B) (H : type549 A B) (f : A -> B) (x : A) : (term219 A B lt2 g S' H f x z) = (term207 A B lt2 z g S' H f x).
Proof. exact (TRANS (@lem333195 A B lt2 g S' H f x z) (@lem333196 A B lt2 z g S' H f x)). Qed.
Lemma lem333198 {A B : Type'} (lt2 : type1402 A) (g : A -> B) (S' : type1413 A B) (H : type549 A B) (f : A -> B) (x : A) : (term221 A B lt2 g S' H f x) = (term209 A B lt2 g S' H f x).
Proof. exact (fun_ext (fun z : A => @lem333197 A B lt2 z g S' H f x)). Qed.
Lemma lem333199 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem333200 {A B : Type'} (lt2 : type1402 A) (g : A -> B) (S' : type1413 A B) (H : type549 A B) (f : A -> B) (x : A) : (term222 A B lt2 g S' H f x) = (term210 A B lt2 g S' H f x).
Proof. exact (MK_COMB (@lem333199 A) (@lem333198 A B lt2 g S' H f x)). Qed.
Lemma lem333201 {A B : Type'} (lt2 : type1402 A) (g : A -> B) (S' : type1413 A B) (H : type549 A B) (f : A -> B) : (term223 A B lt2 g S' H f) = (term211 A B lt2 g S' H f).
Proof. exact (fun_ext (fun x : A => @lem333200 A B lt2 g S' H f x)). Qed.
Lemma lem333202 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem333203 {A B : Type'} (lt2 : type1402 A) (g : A -> B) (S' : type1413 A B) (H : type549 A B) (f : A -> B) : (term215 A B lt2 g S' H f) = (term212 A B lt2 g S' H f).
Proof. exact (MK_COMB (@lem333202 A) (@lem333201 A B lt2 g S' H f)). Qed.
Lemma lem333204 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem333205 {A B : Type'} (lt2 : type1402 A) (g : A -> B) (S' : type1413 A B) (H : type549 A B) (f : A -> B) : (term224 A B lt2 g S' H f) = (term225 A B lt2 g S' H f).
Proof. exact (MK_COMB (@lem333204) (@lem333203 A B lt2 g S' H f)). Qed.
Lemma lem333206 {A B : Type'} (lt2 : type1402 A) (g : A -> B) (S' : type1413 A B) (H : type549 A B) (f : A -> B) (x : A) : (term218 A B lt2 g S' H f x) = (term209 A B lt2 g S' H f x).
Proof. exact (eq_refl (term218 A B lt2 g S' H f x)). Qed.
Lemma lem333207 {A : Type'} (z : A -> A) (x : A) : (z x) = (z x).
Proof. exact (eq_refl (z x)). Qed.
Lemma lem333208 {A B : Type'} (lt2 : type1402 A) (g : A -> B) (S' : type1413 A B) (H : type549 A B) (f : A -> B) (z : A -> A) (x : A) : (term226 A B lt2 g S' H f z x) = (term227 A B lt2 g S' H f z x).
Proof. exact (MK_COMB (@lem333206 A B lt2 g S' H f x) (@lem333207 A z x)). Qed.
Lemma lem333209 {A B : Type'} (lt2 : type1402 A) (z : A -> A) (g : A -> B) (S' : type1413 A B) (H : type549 A B) (f : A -> B) (x : A) : (term227 A B lt2 g S' H f z x) = (term228 A B lt2 z g S' H f x).
Proof. exact (eq_refl (term227 A B lt2 g S' H f z x)). Qed.
Lemma lem333210 {A B : Type'} (lt2 : type1402 A) (z : A -> A) (g : A -> B) (S' : type1413 A B) (H : type549 A B) (f : A -> B) (x : A) : (term226 A B lt2 g S' H f z x) = (term228 A B lt2 z g S' H f x).
Proof. exact (TRANS (@lem333208 A B lt2 g S' H f z x) (@lem333209 A B lt2 z g S' H f x)). Qed.
Lemma lem333211 {A B : Type'} (lt2 : type1402 A) (z : A -> A) (g : A -> B) (S' : type1413 A B) (H : type549 A B) (f : A -> B) : (term229 A B lt2 g S' H f z) = (term230 A B lt2 z g S' H f).
Proof. exact (fun_ext (fun x : A => @lem333210 A B lt2 z g S' H f x)). Qed.
Lemma lem333212 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem333213 {A B : Type'} (lt2 : type1402 A) (z : A -> A) (g : A -> B) (S' : type1413 A B) (H : type549 A B) (f : A -> B) : (term231 A B lt2 g S' H f z) = (term232 A B lt2 z g S' H f).
Proof. exact (MK_COMB (@lem333212 A) (@lem333211 A B lt2 z g S' H f)). Qed.
Lemma lem333214 {A B : Type'} (lt2 : type1402 A) (g : A -> B) (S' : type1413 A B) (H : type549 A B) (f : A -> B) : (term233 A B lt2 g S' H f) = (term234 A B lt2 g S' H f).
Proof. exact (fun_ext (fun z : A -> A => @lem333213 A B lt2 z g S' H f)). Qed.
Lemma lem333215 {A : Type'} : (@ex (A -> A)) = (@ex (A -> A)).
Proof. exact (eq_refl (@ex (A -> A))). Qed.
Lemma lem333216 {A B : Type'} (lt2 : type1402 A) (g : A -> B) (S' : type1413 A B) (H : type549 A B) (f : A -> B) : (term216 A B lt2 g S' H f) = (term235 A B lt2 g S' H f).
Proof. exact (MK_COMB (@lem333215 A) (@lem333214 A B lt2 g S' H f)). Qed.
Lemma lem333217 {A B : Type'} (lt2 : type1402 A) (g : A -> B) (S' : type1413 A B) (H : type549 A B) (f : A -> B) : ((term215 A B lt2 g S' H f) = (term216 A B lt2 g S' H f)) = ((term212 A B lt2 g S' H f) = (term235 A B lt2 g S' H f)).
Proof. exact (MK_COMB (@lem333205 A B lt2 g S' H f) (@lem333216 A B lt2 g S' H f)). Qed.
Lemma lem333218 {A B : Type'} (lt2 : type1402 A) (g : A -> B) (S' : type1413 A B) (H : type549 A B) (f : A -> B) : (term212 A B lt2 g S' H f) = (term235 A B lt2 g S' H f).
Proof. exact (EQ_MP (@lem333217 A B lt2 g S' H f) (@lem333192 A B lt2 g S' H f)). Qed.
Lemma lem333219 {A B : Type'} (lt2 : type1402 A) (g : A -> B) (S' : type1413 A B) (H : type549 A B) (f : A -> B) : (term191 A B lt2 g S' H f) = (term235 A B lt2 g S' H f).
Proof. exact (TRANS (@lem333188 A B lt2 g S' H f) (@lem333218 A B lt2 g S' H f)). Qed.
Lemma lem333220 {A B : Type'} (lt2 : type1402 A) (S' : type1413 A B) (H : type549 A B) (f : A -> B) : (term192 A B lt2 S' H f) = (term236 A B lt2 S' H f).
Proof. exact (fun_ext (fun g : A -> B => @lem333219 A B lt2 g S' H f)). Qed.
Lemma lem333221 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem333222 {A B : Type'} (lt2 : type1402 A) (S' : type1413 A B) (H : type549 A B) (f : A -> B) : (term193 A B lt2 S' H f) = (term237 A B lt2 S' H f).
Proof. exact (MK_COMB (@lem333221 A B) (@lem333220 A B lt2 S' H f)). Qed.
Lemma lem333224 {A B : Type'} (P : type1413 A B) : (term146 A B P) = (term147 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem333225 {A B : Type'} (P : type513 A B) : (term238 A B P) = (term239 A B P).
Proof. exact (@lem333224 (A -> B) (A -> A) P). Qed.
Lemma lem333226 {A B : Type'} (lt2 : type1402 A) (S' : type1413 A B) (H : type549 A B) (f : A -> B) : (term240 A B lt2 S' H f) = (term241 A B lt2 S' H f).
Proof. exact (@lem333225 A B (term242 A B lt2 S' H f)). Qed.
Lemma lem333227 {A B : Type'} (lt2 : type1402 A) (g : A -> B) (S' : type1413 A B) (H : type549 A B) (f : A -> B) : (term243 A B lt2 S' H f g) = (term234 A B lt2 g S' H f).
Proof. exact (eq_refl (term243 A B lt2 S' H f g)). Qed.
Lemma lem333228 {A : Type'} (z : A -> A) : z = z.
Proof. exact (eq_refl z). Qed.
Lemma lem333229 {A B : Type'} (lt2 : type1402 A) (g : A -> B) (S' : type1413 A B) (H : type549 A B) (f : A -> B) (z : A -> A) : (term244 A B lt2 S' H f g z) = (term245 A B lt2 g S' H f z).
Proof. exact (MK_COMB (@lem333227 A B lt2 g S' H f) (@lem333228 A z)). Qed.
Lemma lem333230 {A B : Type'} (lt2 : type1402 A) (z : A -> A) (g : A -> B) (S' : type1413 A B) (H : type549 A B) (f : A -> B) : (term245 A B lt2 g S' H f z) = (term232 A B lt2 z g S' H f).
Proof. exact (eq_refl (term245 A B lt2 g S' H f z)). Qed.
Lemma lem333231 {A B : Type'} (lt2 : type1402 A) (z : A -> A) (g : A -> B) (S' : type1413 A B) (H : type549 A B) (f : A -> B) : (term244 A B lt2 S' H f g z) = (term232 A B lt2 z g S' H f).
Proof. exact (TRANS (@lem333229 A B lt2 g S' H f z) (@lem333230 A B lt2 z g S' H f)). Qed.
Lemma lem333232 {A B : Type'} (lt2 : type1402 A) (g : A -> B) (S' : type1413 A B) (H : type549 A B) (f : A -> B) : (term246 A B lt2 S' H f g) = (term234 A B lt2 g S' H f).
Proof. exact (fun_ext (fun z : A -> A => @lem333231 A B lt2 z g S' H f)). Qed.
Lemma lem333233 {A : Type'} : (@ex (A -> A)) = (@ex (A -> A)).
Proof. exact (eq_refl (@ex (A -> A))). Qed.
Lemma lem333234 {A B : Type'} (lt2 : type1402 A) (g : A -> B) (S' : type1413 A B) (H : type549 A B) (f : A -> B) : (term247 A B lt2 S' H f g) = (term235 A B lt2 g S' H f).
Proof. exact (MK_COMB (@lem333233 A) (@lem333232 A B lt2 g S' H f)). Qed.
Lemma lem333235 {A B : Type'} (lt2 : type1402 A) (S' : type1413 A B) (H : type549 A B) (f : A -> B) : (term248 A B lt2 S' H f) = (term236 A B lt2 S' H f).
Proof. exact (fun_ext (fun g : A -> B => @lem333234 A B lt2 g S' H f)). Qed.
Lemma lem333236 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem333237 {A B : Type'} (lt2 : type1402 A) (S' : type1413 A B) (H : type549 A B) (f : A -> B) : (term240 A B lt2 S' H f) = (term237 A B lt2 S' H f).
Proof. exact (MK_COMB (@lem333236 A B) (@lem333235 A B lt2 S' H f)). Qed.
Lemma lem333238 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem333239 {A B : Type'} (lt2 : type1402 A) (S' : type1413 A B) (H : type549 A B) (f : A -> B) : (term249 A B lt2 S' H f) = (term250 A B lt2 S' H f).
Proof. exact (MK_COMB (@lem333238) (@lem333237 A B lt2 S' H f)). Qed.
Lemma lem333240 {A B : Type'} (lt2 : type1402 A) (g : A -> B) (S' : type1413 A B) (H : type549 A B) (f : A -> B) : (term243 A B lt2 S' H f g) = (term234 A B lt2 g S' H f).
Proof. exact (eq_refl (term243 A B lt2 S' H f g)). Qed.
Lemma lem333241 {A B : Type'} (z : type548 A B) (g : A -> B) : (z g) = (z g).
Proof. exact (eq_refl (z g)). Qed.
Lemma lem333242 {A B : Type'} (lt2 : type1402 A) (S' : type1413 A B) (H : type549 A B) (f : A -> B) (z : type548 A B) (g : A -> B) : (term251 A B lt2 S' H f z g) = (term252 A B lt2 S' H f z g).
Proof. exact (MK_COMB (@lem333240 A B lt2 g S' H f) (@lem333241 A B z g)). Qed.
Lemma lem333243 {A B : Type'} (lt2 : type1402 A) (z : type548 A B) (g : A -> B) (S' : type1413 A B) (H : type549 A B) (f : A -> B) : (term252 A B lt2 S' H f z g) = (term253 A B lt2 z g S' H f).
Proof. exact (eq_refl (term252 A B lt2 S' H f z g)). Qed.
Lemma lem333244 {A B : Type'} (lt2 : type1402 A) (z : type548 A B) (g : A -> B) (S' : type1413 A B) (H : type549 A B) (f : A -> B) : (term251 A B lt2 S' H f z g) = (term253 A B lt2 z g S' H f).
Proof. exact (TRANS (@lem333242 A B lt2 S' H f z g) (@lem333243 A B lt2 z g S' H f)). Qed.
Lemma lem333245 {A B : Type'} (lt2 : type1402 A) (z : type548 A B) (S' : type1413 A B) (H : type549 A B) (f : A -> B) : (term254 A B lt2 S' H f z) = (term255 A B lt2 z S' H f).
Proof. exact (fun_ext (fun g : A -> B => @lem333244 A B lt2 z g S' H f)). Qed.
Lemma lem333246 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem333247 {A B : Type'} (lt2 : type1402 A) (z : type548 A B) (S' : type1413 A B) (H : type549 A B) (f : A -> B) : (term256 A B lt2 S' H f z) = (term257 A B lt2 z S' H f).
Proof. exact (MK_COMB (@lem333246 A B) (@lem333245 A B lt2 z S' H f)). Qed.
Lemma lem333248 {A B : Type'} (lt2 : type1402 A) (S' : type1413 A B) (H : type549 A B) (f : A -> B) : (term258 A B lt2 S' H f) = (term259 A B lt2 S' H f).
Proof. exact (fun_ext (fun z : type548 A B => @lem333247 A B lt2 z S' H f)). Qed.
Lemma lem333249 {A B : Type'} : (@ex ((A -> B) -> A -> A)) = (@ex ((A -> B) -> A -> A)).
Proof. exact (eq_refl (@ex ((A -> B) -> A -> A))). Qed.
Lemma lem333250 {A B : Type'} (lt2 : type1402 A) (S' : type1413 A B) (H : type549 A B) (f : A -> B) : (term241 A B lt2 S' H f) = (term260 A B lt2 S' H f).
Proof. exact (MK_COMB (@lem333249 A B) (@lem333248 A B lt2 S' H f)). Qed.
Lemma lem333251 {A B : Type'} (lt2 : type1402 A) (S' : type1413 A B) (H : type549 A B) (f : A -> B) : ((term240 A B lt2 S' H f) = (term241 A B lt2 S' H f)) = ((term237 A B lt2 S' H f) = (term260 A B lt2 S' H f)).
Proof. exact (MK_COMB (@lem333239 A B lt2 S' H f) (@lem333250 A B lt2 S' H f)). Qed.
Lemma lem333252 {A B : Type'} (lt2 : type1402 A) (S' : type1413 A B) (H : type549 A B) (f : A -> B) : (term237 A B lt2 S' H f) = (term260 A B lt2 S' H f).
Proof. exact (EQ_MP (@lem333251 A B lt2 S' H f) (@lem333226 A B lt2 S' H f)). Qed.
Lemma lem333253 {A B : Type'} (lt2 : type1402 A) (S' : type1413 A B) (H : type549 A B) (f : A -> B) : (term193 A B lt2 S' H f) = (term260 A B lt2 S' H f).
Proof. exact (TRANS (@lem333222 A B lt2 S' H f) (@lem333252 A B lt2 S' H f)). Qed.
Lemma lem333254 {A B : Type'} (lt2 : type1402 A) (S' : type1413 A B) (H : type549 A B) : (term194 A B lt2 S' H) = (term261 A B lt2 S' H).
Proof. exact (fun_ext (fun f : A -> B => @lem333253 A B lt2 S' H f)). Qed.
Lemma lem333255 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem333256 {A B : Type'} (lt2 : type1402 A) (S' : type1413 A B) (H : type549 A B) : (term195 A B lt2 S' H) = (term262 A B lt2 S' H).
Proof. exact (MK_COMB (@lem333255 A B) (@lem333254 A B lt2 S' H)). Qed.
Lemma lem333258 {A B : Type'} (P : type1413 A B) : (term146 A B P) = (term147 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem333259 {A B : Type'} (P : type493 A B) : (term263 A B P) = (term264 A B P).
Proof. exact (@lem333258 (A -> B) (type548 A B) P). Qed.
Lemma lem333260 {A B : Type'} (lt2 : type1402 A) (S' : type1413 A B) (H : type549 A B) : (term265 A B lt2 S' H) = (term266 A B lt2 S' H).
Proof. exact (@lem333259 A B (term267 A B lt2 S' H)). Qed.
Lemma lem333261 {A B : Type'} (lt2 : type1402 A) (S' : type1413 A B) (H : type549 A B) (f : A -> B) : (term268 A B lt2 S' H f) = (term259 A B lt2 S' H f).
Proof. exact (eq_refl (term268 A B lt2 S' H f)). Qed.
Lemma lem333262 {A B : Type'} (z : type548 A B) : z = z.
Proof. exact (eq_refl z). Qed.
Lemma lem333263 {A B : Type'} (lt2 : type1402 A) (S' : type1413 A B) (H : type549 A B) (f : A -> B) (z : type548 A B) : (term269 A B lt2 S' H f z) = (term270 A B lt2 S' H f z).
Proof. exact (MK_COMB (@lem333261 A B lt2 S' H f) (@lem333262 A B z)). Qed.
Lemma lem333264 {A B : Type'} (lt2 : type1402 A) (z : type548 A B) (S' : type1413 A B) (H : type549 A B) (f : A -> B) : (term270 A B lt2 S' H f z) = (term257 A B lt2 z S' H f).
Proof. exact (eq_refl (term270 A B lt2 S' H f z)). Qed.
Lemma lem333265 {A B : Type'} (lt2 : type1402 A) (z : type548 A B) (S' : type1413 A B) (H : type549 A B) (f : A -> B) : (term269 A B lt2 S' H f z) = (term257 A B lt2 z S' H f).
Proof. exact (TRANS (@lem333263 A B lt2 S' H f z) (@lem333264 A B lt2 z S' H f)). Qed.
Lemma lem333266 {A B : Type'} (lt2 : type1402 A) (S' : type1413 A B) (H : type549 A B) (f : A -> B) : (term271 A B lt2 S' H f) = (term259 A B lt2 S' H f).
Proof. exact (fun_ext (fun z : type548 A B => @lem333265 A B lt2 z S' H f)). Qed.
Lemma lem333267 {A B : Type'} : (@ex ((A -> B) -> A -> A)) = (@ex ((A -> B) -> A -> A)).
Proof. exact (eq_refl (@ex ((A -> B) -> A -> A))). Qed.
Lemma lem333268 {A B : Type'} (lt2 : type1402 A) (S' : type1413 A B) (H : type549 A B) (f : A -> B) : (term272 A B lt2 S' H f) = (term260 A B lt2 S' H f).
Proof. exact (MK_COMB (@lem333267 A B) (@lem333266 A B lt2 S' H f)). Qed.
Lemma lem333269 {A B : Type'} (lt2 : type1402 A) (S' : type1413 A B) (H : type549 A B) : (term273 A B lt2 S' H) = (term261 A B lt2 S' H).
Proof. exact (fun_ext (fun f : A -> B => @lem333268 A B lt2 S' H f)). Qed.
Lemma lem333270 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem333271 {A B : Type'} (lt2 : type1402 A) (S' : type1413 A B) (H : type549 A B) : (term265 A B lt2 S' H) = (term262 A B lt2 S' H).
Proof. exact (MK_COMB (@lem333270 A B) (@lem333269 A B lt2 S' H)). Qed.
Lemma lem333272 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem333273 {A B : Type'} (lt2 : type1402 A) (S' : type1413 A B) (H : type549 A B) : (term274 A B lt2 S' H) = (term275 A B lt2 S' H).
Proof. exact (MK_COMB (@lem333272) (@lem333271 A B lt2 S' H)). Qed.
Lemma lem333274 {A B : Type'} (lt2 : type1402 A) (S' : type1413 A B) (H : type549 A B) (f : A -> B) : (term268 A B lt2 S' H f) = (term259 A B lt2 S' H f).
Proof. exact (eq_refl (term268 A B lt2 S' H f)). Qed.
Lemma lem333275 {A B : Type'} (z : type515 A B) (f : A -> B) : (z f) = (z f).
Proof. exact (eq_refl (z f)). Qed.
Lemma lem333276 {A B : Type'} (lt2 : type1402 A) (S' : type1413 A B) (H : type549 A B) (z : type515 A B) (f : A -> B) : (term276 A B lt2 S' H z f) = (term277 A B lt2 S' H z f).
Proof. exact (MK_COMB (@lem333274 A B lt2 S' H f) (@lem333275 A B z f)). Qed.
Lemma lem333277 {A B : Type'} (lt2 : type1402 A) (z : type515 A B) (S' : type1413 A B) (H : type549 A B) (f : A -> B) : (term277 A B lt2 S' H z f) = (term278 A B lt2 z S' H f).
Proof. exact (eq_refl (term277 A B lt2 S' H z f)). Qed.
Lemma lem333278 {A B : Type'} (lt2 : type1402 A) (z : type515 A B) (S' : type1413 A B) (H : type549 A B) (f : A -> B) : (term276 A B lt2 S' H z f) = (term278 A B lt2 z S' H f).
Proof. exact (TRANS (@lem333276 A B lt2 S' H z f) (@lem333277 A B lt2 z S' H f)). Qed.
Lemma lem333279 {A B : Type'} (lt2 : type1402 A) (z : type515 A B) (S' : type1413 A B) (H : type549 A B) : (term279 A B lt2 S' H z) = (term280 A B lt2 z S' H).
Proof. exact (fun_ext (fun f : A -> B => @lem333278 A B lt2 z S' H f)). Qed.
Lemma lem333280 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem333281 {A B : Type'} (lt2 : type1402 A) (z : type515 A B) (S' : type1413 A B) (H : type549 A B) : (term281 A B lt2 S' H z) = (term282 A B lt2 z S' H).
Proof. exact (MK_COMB (@lem333280 A B) (@lem333279 A B lt2 z S' H)). Qed.
Lemma lem333282 {A B : Type'} (lt2 : type1402 A) (S' : type1413 A B) (H : type549 A B) : (term283 A B lt2 S' H) = (term284 A B lt2 S' H).
Proof. exact (fun_ext (fun z : type515 A B => @lem333281 A B lt2 z S' H)). Qed.
Lemma lem333283 {A B : Type'} : (@ex ((A -> B) -> (A -> B) -> A -> A)) = (@ex ((A -> B) -> (A -> B) -> A -> A)).
Proof. exact (eq_refl (@ex ((A -> B) -> (A -> B) -> A -> A))). Qed.
Lemma lem333284 {A B : Type'} (lt2 : type1402 A) (S' : type1413 A B) (H : type549 A B) : (term266 A B lt2 S' H) = (term285 A B lt2 S' H).
Proof. exact (MK_COMB (@lem333283 A B) (@lem333282 A B lt2 S' H)). Qed.
Lemma lem333285 {A B : Type'} (lt2 : type1402 A) (S' : type1413 A B) (H : type549 A B) : ((term265 A B lt2 S' H) = (term266 A B lt2 S' H)) = ((term262 A B lt2 S' H) = (term285 A B lt2 S' H)).
Proof. exact (MK_COMB (@lem333273 A B lt2 S' H) (@lem333284 A B lt2 S' H)). Qed.
Lemma lem333286 {A B : Type'} (lt2 : type1402 A) (S' : type1413 A B) (H : type549 A B) : (term262 A B lt2 S' H) = (term285 A B lt2 S' H).
Proof. exact (EQ_MP (@lem333285 A B lt2 S' H) (@lem333260 A B lt2 S' H)). Qed.
Lemma lem333288 {A B : Type'} (lt2 : type1402 A) (S' : type1413 A B) (H : type549 A B) : (term195 A B lt2 S' H) = (term285 A B lt2 S' H).
Proof. exact (TRANS (@lem333256 A B lt2 S' H) (@lem333286 A B lt2 S' H)). Qed.
Lemma lem333289 {A B : Type'} (lt2 : type1402 A) (S' : type1413 A B) (H : type549 A B) : (term1 A B lt2 S' H) = (term285 A B lt2 S' H).
Proof. exact (TRANS (@lem333056 A B lt2 S' H) (@lem333288 A B lt2 S' H)). Qed.
Lemma lem333290 {A B : Type'} (lt2 : type1402 A) (S' : type1413 A B) (H : type549 A B) (h1 : term1 A B lt2 S' H) : term285 A B lt2 S' H.
Proof. exact (EQ_MP (@lem333289 A B lt2 S' H) (@lem333005 A B lt2 S' H h1)). Qed.
Lemma lem333297 {A B : Type'} (lt2 : type1402 A) (x : A) (R : type1413 A B) (f : A -> B) (z : A) : (term286 A B lt2 x R f z) = (term287 A B lt2 x R f z).
Proof. exact (@lem17362 (lt2 z x) (term173 A B R f z)). Qed.
Lemma lem333298 {A : Type'} (P : A -> Prop) : (term112 A P) = (term113 A P).
Proof. exact (@lem18392 A P). Qed.
Lemma lem333299 {A B : Type'} (lt2 : type1402 A) (x : A) (R : type1413 A B) (f : A -> B) : (term288 A B lt2 x R f) = (term289 A B lt2 x R f).
Proof. exact (@lem333298 A (term57 A B lt2 x R f)). Qed.
Lemma lem333300 {A B : Type'} (lt2 : type1402 A) (x : A) (R : type1413 A B) (f : A -> B) (z : A) : (term290 A B lt2 x R f z) = (term56 A B lt2 x R f z).
Proof. exact (eq_refl (term290 A B lt2 x R f z)). Qed.
Lemma lem333301 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem333302 {A B : Type'} (lt2 : type1402 A) (x : A) (R : type1413 A B) (f : A -> B) (z : A) : (term291 A B lt2 x R f z) = (term286 A B lt2 x R f z).
Proof. exact (MK_COMB (@lem333301) (@lem333300 A B lt2 x R f z)). Qed.
Lemma lem333303 {A B : Type'} (lt2 : type1402 A) (x : A) (R : type1413 A B) (f : A -> B) (z : A) : (term291 A B lt2 x R f z) = (term287 A B lt2 x R f z).
Proof. exact (TRANS (@lem333302 A B lt2 x R f z) (@lem333297 A B lt2 x R f z)). Qed.
Lemma lem333304 {A B : Type'} (lt2 : type1402 A) (x : A) (R : type1413 A B) (f : A -> B) : (term292 A B lt2 x R f) = (term293 A B lt2 x R f).
Proof. exact (fun_ext (fun z : A => @lem333303 A B lt2 x R f z)). Qed.
Lemma lem333305 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem333306 {A B : Type'} (lt2 : type1402 A) (x : A) (R : type1413 A B) (f : A -> B) : (term289 A B lt2 x R f) = (term294 A B lt2 x R f).
Proof. exact (MK_COMB (@lem333305 A) (@lem333304 A B lt2 x R f)). Qed.
Lemma lem333307 {A B : Type'} (lt2 : type1402 A) (x : A) (R : type1413 A B) (f : A -> B) : (term288 A B lt2 x R f) = (term294 A B lt2 x R f).
Proof. exact (TRANS (@lem333299 A B lt2 x R f) (@lem333306 A B lt2 x R f)). Qed.
Lemma lem333308 {A B : Type'} (R : type1413 A B) (H : type549 A B) (f : A -> B) (x : A) : (term72 A B R H f x) = (term72 A B R H f x).
Proof. exact (eq_refl (term72 A B R H f x)). Qed.
Lemma lem333309 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem333310 {A B : Type'} (lt2 : type1402 A) (x : A) (R : type1413 A B) (f : A -> B) : (term295 A B lt2 x R f) = (term296 A B lt2 x R f).
Proof. exact (MK_COMB (@lem333309) (@lem333307 A B lt2 x R f)). Qed.
Lemma lem333311 {A B : Type'} (lt2 : type1402 A) (R : type1413 A B) (H : type549 A B) (f : A -> B) (x : A) : (term297 A B lt2 R H f x) = (term298 A B lt2 R H f x).
Proof. exact (MK_COMB (@lem333310 A B lt2 x R f) (@lem333308 A B R H f x)). Qed.
Lemma lem333312 {A B : Type'} (lt2 : type1402 A) (R : type1413 A B) (H : type549 A B) (f : A -> B) (x : A) : (term74 A B lt2 R H f x) = (term297 A B lt2 R H f x).
Proof. exact (@lem17265 (term58 A B lt2 x R f) (term72 A B R H f x)). Qed.
Lemma lem333313 {A B : Type'} (lt2 : type1402 A) (R : type1413 A B) (H : type549 A B) (f : A -> B) (x : A) : (term74 A B lt2 R H f x) = (term298 A B lt2 R H f x).
Proof. exact (TRANS (@lem333312 A B lt2 R H f x) (@lem333311 A B lt2 R H f x)). Qed.
Lemma lem333314 {A B : Type'} (lt2 : type1402 A) (R : type1413 A B) (H : type549 A B) (f : A -> B) : (term75 A B lt2 R H f) = (term299 A B lt2 R H f).
Proof. exact (fun_ext (fun x : A => @lem333313 A B lt2 R H f x)). Qed.
Lemma lem333315 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem333316 {A B : Type'} (lt2 : type1402 A) (R : type1413 A B) (H : type549 A B) (f : A -> B) : (term76 A B lt2 R H f) = (term300 A B lt2 R H f).
Proof. exact (MK_COMB (@lem333315 A) (@lem333314 A B lt2 R H f)). Qed.
Lemma lem333317 {A B : Type'} (lt2 : type1402 A) (R : type1413 A B) (H : type549 A B) : (term77 A B lt2 R H) = (term301 A B lt2 R H).
Proof. exact (fun_ext (fun f : A -> B => @lem333316 A B lt2 R H f)). Qed.
Lemma lem333318 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem333319 {A B : Type'} (lt2 : type1402 A) (R : type1413 A B) (H : type549 A B) : (term3 A B lt2 R H) = (term302 A B lt2 R H).
Proof. exact (MK_COMB (@lem333318 A B) (@lem333317 A B lt2 R H)). Qed.
Lemma lem333422 {A : Type'} (P : A -> Prop) (Q : Prop) : (term127 A P Q) = (term128 A P Q).
Proof. exact (EQ_MP (@lem18905 A P Q) (@lem18904 A P Q)). Qed.
Lemma lem333423 {A : Type'} (P : A -> Prop) (Q : Prop) : (term127 A P Q) = (term128 A P Q).
Proof. exact (@lem333422 A P Q). Qed.
Lemma lem333424 {A B : Type'} (lt2 : type1402 A) (R : type1413 A B) (H : type549 A B) (f : A -> B) (x : A) : (term303 A B lt2 R H f x) = (term304 A B lt2 R H f x).
Proof. exact (@lem333423 A (term293 A B lt2 x R f) (term72 A B R H f x)). Qed.
Lemma lem333425 {A B : Type'} (lt2 : type1402 A) (x : A) (R : type1413 A B) (f : A -> B) (z : A) : (term305 A B lt2 x R f z) = (term287 A B lt2 x R f z).
Proof. exact (eq_refl (term305 A B lt2 x R f z)). Qed.
Lemma lem333426 {A B : Type'} (lt2 : type1402 A) (x : A) (R : type1413 A B) (f : A -> B) : (term306 A B lt2 x R f) = (term293 A B lt2 x R f).
Proof. exact (fun_ext (fun z : A => @lem333425 A B lt2 x R f z)). Qed.
Lemma lem333427 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem333428 {A B : Type'} (lt2 : type1402 A) (x : A) (R : type1413 A B) (f : A -> B) : (term307 A B lt2 x R f) = (term294 A B lt2 x R f).
Proof. exact (MK_COMB (@lem333427 A) (@lem333426 A B lt2 x R f)). Qed.
Lemma lem333429 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem333430 {A B : Type'} (lt2 : type1402 A) (x : A) (R : type1413 A B) (f : A -> B) : (term308 A B lt2 x R f) = (term296 A B lt2 x R f).
Proof. exact (MK_COMB (@lem333429) (@lem333428 A B lt2 x R f)). Qed.
Lemma lem333431 {A B : Type'} (R : type1413 A B) (H : type549 A B) (f : A -> B) (x : A) : (term72 A B R H f x) = (term72 A B R H f x).
Proof. exact (eq_refl (term72 A B R H f x)). Qed.
Lemma lem333432 {A B : Type'} (lt2 : type1402 A) (R : type1413 A B) (H : type549 A B) (f : A -> B) (x : A) : (term303 A B lt2 R H f x) = (term298 A B lt2 R H f x).
Proof. exact (MK_COMB (@lem333430 A B lt2 x R f) (@lem333431 A B R H f x)). Qed.
Lemma lem333433 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem333434 {A B : Type'} (lt2 : type1402 A) (R : type1413 A B) (H : type549 A B) (f : A -> B) (x : A) : (term309 A B lt2 R H f x) = (term310 A B lt2 R H f x).
Proof. exact (MK_COMB (@lem333433) (@lem333432 A B lt2 R H f x)). Qed.
Lemma lem333435 {A B : Type'} (lt2 : type1402 A) (x : A) (R : type1413 A B) (f : A -> B) (z : A) : (term305 A B lt2 x R f z) = (term287 A B lt2 x R f z).
Proof. exact (eq_refl (term305 A B lt2 x R f z)). Qed.
Lemma lem333436 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem333437 {A B : Type'} (lt2 : type1402 A) (x : A) (R : type1413 A B) (f : A -> B) (z : A) : (term311 A B lt2 x R f z) = (term312 A B lt2 x R f z).
Proof. exact (MK_COMB (@lem333436) (@lem333435 A B lt2 x R f z)). Qed.
Lemma lem333438 {A B : Type'} (R : type1413 A B) (H : type549 A B) (f : A -> B) (x : A) : (term72 A B R H f x) = (term72 A B R H f x).
Proof. exact (eq_refl (term72 A B R H f x)). Qed.
Lemma lem333439 {A B : Type'} (lt2 : type1402 A) (z : A) (R : type1413 A B) (H : type549 A B) (f : A -> B) (x : A) : (term313 A B lt2 z R H f x) = (term314 A B lt2 z R H f x).
Proof. exact (MK_COMB (@lem333437 A B lt2 x R f z) (@lem333438 A B R H f x)). Qed.
Lemma lem333440 {A B : Type'} (lt2 : type1402 A) (R : type1413 A B) (H : type549 A B) (f : A -> B) (x : A) : (term315 A B lt2 R H f x) = (term316 A B lt2 R H f x).
Proof. exact (fun_ext (fun z : A => @lem333439 A B lt2 z R H f x)). Qed.
Lemma lem333441 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem333442 {A B : Type'} (lt2 : type1402 A) (R : type1413 A B) (H : type549 A B) (f : A -> B) (x : A) : (term304 A B lt2 R H f x) = (term317 A B lt2 R H f x).
Proof. exact (MK_COMB (@lem333441 A) (@lem333440 A B lt2 R H f x)). Qed.
Lemma lem333443 {A B : Type'} (lt2 : type1402 A) (R : type1413 A B) (H : type549 A B) (f : A -> B) (x : A) : ((term303 A B lt2 R H f x) = (term304 A B lt2 R H f x)) = ((term298 A B lt2 R H f x) = (term317 A B lt2 R H f x)).
Proof. exact (MK_COMB (@lem333434 A B lt2 R H f x) (@lem333442 A B lt2 R H f x)). Qed.
Lemma lem333444 {A B : Type'} (lt2 : type1402 A) (R : type1413 A B) (H : type549 A B) (f : A -> B) (x : A) : (term298 A B lt2 R H f x) = (term317 A B lt2 R H f x).
Proof. exact (EQ_MP (@lem333443 A B lt2 R H f x) (@lem333424 A B lt2 R H f x)). Qed.
Lemma lem333445 {A B : Type'} (lt2 : type1402 A) (R : type1413 A B) (H : type549 A B) (f : A -> B) : (term299 A B lt2 R H f) = (term318 A B lt2 R H f).
Proof. exact (fun_ext (fun x : A => @lem333444 A B lt2 R H f x)). Qed.
Lemma lem333446 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem333447 {A B : Type'} (lt2 : type1402 A) (R : type1413 A B) (H : type549 A B) (f : A -> B) : (term300 A B lt2 R H f) = (term319 A B lt2 R H f).
Proof. exact (MK_COMB (@lem333446 A) (@lem333445 A B lt2 R H f)). Qed.
Lemma lem333449 {A B : Type'} (P : type1413 A B) : (term146 A B P) = (term147 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem333450 {A : Type'} (P : type1402 A) : (term213 A P) = (term214 A P).
Proof. exact (@lem333449 A A P). Qed.
Lemma lem333451 {A B : Type'} (lt2 : type1402 A) (R : type1413 A B) (H : type549 A B) (f : A -> B) : (term320 A B lt2 R H f) = (term321 A B lt2 R H f).
Proof. exact (@lem333450 A (term322 A B lt2 R H f)). Qed.
Lemma lem333452 {A B : Type'} (lt2 : type1402 A) (R : type1413 A B) (H : type549 A B) (f : A -> B) (x : A) : (term323 A B lt2 R H f x) = (term316 A B lt2 R H f x).
Proof. exact (eq_refl (term323 A B lt2 R H f x)). Qed.
Lemma lem333453 {A : Type'} (z : A) : z = z.
Proof. exact (eq_refl z). Qed.
Lemma lem333454 {A B : Type'} (lt2 : type1402 A) (R : type1413 A B) (H : type549 A B) (f : A -> B) (x : A) (z : A) : (term324 A B lt2 R H f x z) = (term325 A B lt2 R H f x z).
Proof. exact (MK_COMB (@lem333452 A B lt2 R H f x) (@lem333453 A z)). Qed.
Lemma lem333455 {A B : Type'} (lt2 : type1402 A) (z : A) (R : type1413 A B) (H : type549 A B) (f : A -> B) (x : A) : (term325 A B lt2 R H f x z) = (term314 A B lt2 z R H f x).
Proof. exact (eq_refl (term325 A B lt2 R H f x z)). Qed.
Lemma lem333456 {A B : Type'} (lt2 : type1402 A) (z : A) (R : type1413 A B) (H : type549 A B) (f : A -> B) (x : A) : (term324 A B lt2 R H f x z) = (term314 A B lt2 z R H f x).
Proof. exact (TRANS (@lem333454 A B lt2 R H f x z) (@lem333455 A B lt2 z R H f x)). Qed.
Lemma lem333457 {A B : Type'} (lt2 : type1402 A) (R : type1413 A B) (H : type549 A B) (f : A -> B) (x : A) : (term326 A B lt2 R H f x) = (term316 A B lt2 R H f x).
Proof. exact (fun_ext (fun z : A => @lem333456 A B lt2 z R H f x)). Qed.
Lemma lem333458 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem333459 {A B : Type'} (lt2 : type1402 A) (R : type1413 A B) (H : type549 A B) (f : A -> B) (x : A) : (term327 A B lt2 R H f x) = (term317 A B lt2 R H f x).
Proof. exact (MK_COMB (@lem333458 A) (@lem333457 A B lt2 R H f x)). Qed.
Lemma lem333460 {A B : Type'} (lt2 : type1402 A) (R : type1413 A B) (H : type549 A B) (f : A -> B) : (term328 A B lt2 R H f) = (term318 A B lt2 R H f).
Proof. exact (fun_ext (fun x : A => @lem333459 A B lt2 R H f x)). Qed.
Lemma lem333461 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem333462 {A B : Type'} (lt2 : type1402 A) (R : type1413 A B) (H : type549 A B) (f : A -> B) : (term320 A B lt2 R H f) = (term319 A B lt2 R H f).
Proof. exact (MK_COMB (@lem333461 A) (@lem333460 A B lt2 R H f)). Qed.
Lemma lem333463 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem333464 {A B : Type'} (lt2 : type1402 A) (R : type1413 A B) (H : type549 A B) (f : A -> B) : (term329 A B lt2 R H f) = (term330 A B lt2 R H f).
Proof. exact (MK_COMB (@lem333463) (@lem333462 A B lt2 R H f)). Qed.
Lemma lem333465 {A B : Type'} (lt2 : type1402 A) (R : type1413 A B) (H : type549 A B) (f : A -> B) (x : A) : (term323 A B lt2 R H f x) = (term316 A B lt2 R H f x).
Proof. exact (eq_refl (term323 A B lt2 R H f x)). Qed.
Lemma lem333466 {A : Type'} (z : A -> A) (x : A) : (z x) = (z x).
Proof. exact (eq_refl (z x)). Qed.
Lemma lem333467 {A B : Type'} (lt2 : type1402 A) (R : type1413 A B) (H : type549 A B) (f : A -> B) (z : A -> A) (x : A) : (term331 A B lt2 R H f z x) = (term332 A B lt2 R H f z x).
Proof. exact (MK_COMB (@lem333465 A B lt2 R H f x) (@lem333466 A z x)). Qed.
Lemma lem333468 {A B : Type'} (lt2 : type1402 A) (z : A -> A) (R : type1413 A B) (H : type549 A B) (f : A -> B) (x : A) : (term332 A B lt2 R H f z x) = (term333 A B lt2 z R H f x).
Proof. exact (eq_refl (term332 A B lt2 R H f z x)). Qed.
Lemma lem333469 {A B : Type'} (lt2 : type1402 A) (z : A -> A) (R : type1413 A B) (H : type549 A B) (f : A -> B) (x : A) : (term331 A B lt2 R H f z x) = (term333 A B lt2 z R H f x).
Proof. exact (TRANS (@lem333467 A B lt2 R H f z x) (@lem333468 A B lt2 z R H f x)). Qed.
Lemma lem333470 {A B : Type'} (lt2 : type1402 A) (z : A -> A) (R : type1413 A B) (H : type549 A B) (f : A -> B) : (term334 A B lt2 R H f z) = (term335 A B lt2 z R H f).
Proof. exact (fun_ext (fun x : A => @lem333469 A B lt2 z R H f x)). Qed.
Lemma lem333471 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem333472 {A B : Type'} (lt2 : type1402 A) (z : A -> A) (R : type1413 A B) (H : type549 A B) (f : A -> B) : (term336 A B lt2 R H f z) = (term337 A B lt2 z R H f).
Proof. exact (MK_COMB (@lem333471 A) (@lem333470 A B lt2 z R H f)). Qed.
Lemma lem333473 {A B : Type'} (lt2 : type1402 A) (R : type1413 A B) (H : type549 A B) (f : A -> B) : (term338 A B lt2 R H f) = (term339 A B lt2 R H f).
Proof. exact (fun_ext (fun z : A -> A => @lem333472 A B lt2 z R H f)). Qed.
Lemma lem333474 {A : Type'} : (@ex (A -> A)) = (@ex (A -> A)).
Proof. exact (eq_refl (@ex (A -> A))). Qed.
Lemma lem333475 {A B : Type'} (lt2 : type1402 A) (R : type1413 A B) (H : type549 A B) (f : A -> B) : (term321 A B lt2 R H f) = (term340 A B lt2 R H f).
Proof. exact (MK_COMB (@lem333474 A) (@lem333473 A B lt2 R H f)). Qed.
Lemma lem333476 {A B : Type'} (lt2 : type1402 A) (R : type1413 A B) (H : type549 A B) (f : A -> B) : ((term320 A B lt2 R H f) = (term321 A B lt2 R H f)) = ((term319 A B lt2 R H f) = (term340 A B lt2 R H f)).
Proof. exact (MK_COMB (@lem333464 A B lt2 R H f) (@lem333475 A B lt2 R H f)). Qed.
Lemma lem333477 {A B : Type'} (lt2 : type1402 A) (R : type1413 A B) (H : type549 A B) (f : A -> B) : (term319 A B lt2 R H f) = (term340 A B lt2 R H f).
Proof. exact (EQ_MP (@lem333476 A B lt2 R H f) (@lem333451 A B lt2 R H f)). Qed.
Lemma lem333478 {A B : Type'} (lt2 : type1402 A) (R : type1413 A B) (H : type549 A B) (f : A -> B) : (term300 A B lt2 R H f) = (term340 A B lt2 R H f).
Proof. exact (TRANS (@lem333447 A B lt2 R H f) (@lem333477 A B lt2 R H f)). Qed.
Lemma lem333479 {A B : Type'} (lt2 : type1402 A) (R : type1413 A B) (H : type549 A B) : (term301 A B lt2 R H) = (term341 A B lt2 R H).
Proof. exact (fun_ext (fun f : A -> B => @lem333478 A B lt2 R H f)). Qed.
Lemma lem333480 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem333481 {A B : Type'} (lt2 : type1402 A) (R : type1413 A B) (H : type549 A B) : (term302 A B lt2 R H) = (term342 A B lt2 R H).
Proof. exact (MK_COMB (@lem333480 A B) (@lem333479 A B lt2 R H)). Qed.
Lemma lem333483 {A B : Type'} (P : type1413 A B) : (term146 A B P) = (term147 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem333484 {A B : Type'} (P : type513 A B) : (term238 A B P) = (term239 A B P).
Proof. exact (@lem333483 (A -> B) (A -> A) P). Qed.
Lemma lem333485 {A B : Type'} (lt2 : type1402 A) (R : type1413 A B) (H : type549 A B) : (term343 A B lt2 R H) = (term344 A B lt2 R H).
Proof. exact (@lem333484 A B (term345 A B lt2 R H)). Qed.
Lemma lem333486 {A B : Type'} (lt2 : type1402 A) (R : type1413 A B) (H : type549 A B) (f : A -> B) : (term346 A B lt2 R H f) = (term339 A B lt2 R H f).
Proof. exact (eq_refl (term346 A B lt2 R H f)). Qed.
Lemma lem333487 {A : Type'} (z : A -> A) : z = z.
Proof. exact (eq_refl z). Qed.
Lemma lem333488 {A B : Type'} (lt2 : type1402 A) (R : type1413 A B) (H : type549 A B) (f : A -> B) (z : A -> A) : (term347 A B lt2 R H f z) = (term348 A B lt2 R H f z).
Proof. exact (MK_COMB (@lem333486 A B lt2 R H f) (@lem333487 A z)). Qed.
Lemma lem333489 {A B : Type'} (lt2 : type1402 A) (z : A -> A) (R : type1413 A B) (H : type549 A B) (f : A -> B) : (term348 A B lt2 R H f z) = (term337 A B lt2 z R H f).
Proof. exact (eq_refl (term348 A B lt2 R H f z)). Qed.
Lemma lem333490 {A B : Type'} (lt2 : type1402 A) (z : A -> A) (R : type1413 A B) (H : type549 A B) (f : A -> B) : (term347 A B lt2 R H f z) = (term337 A B lt2 z R H f).
Proof. exact (TRANS (@lem333488 A B lt2 R H f z) (@lem333489 A B lt2 z R H f)). Qed.
Lemma lem333491 {A B : Type'} (lt2 : type1402 A) (R : type1413 A B) (H : type549 A B) (f : A -> B) : (term349 A B lt2 R H f) = (term339 A B lt2 R H f).
Proof. exact (fun_ext (fun z : A -> A => @lem333490 A B lt2 z R H f)). Qed.
Lemma lem333492 {A : Type'} : (@ex (A -> A)) = (@ex (A -> A)).
Proof. exact (eq_refl (@ex (A -> A))). Qed.
Lemma lem333493 {A B : Type'} (lt2 : type1402 A) (R : type1413 A B) (H : type549 A B) (f : A -> B) : (term350 A B lt2 R H f) = (term340 A B lt2 R H f).
Proof. exact (MK_COMB (@lem333492 A) (@lem333491 A B lt2 R H f)). Qed.
Lemma lem333494 {A B : Type'} (lt2 : type1402 A) (R : type1413 A B) (H : type549 A B) : (term351 A B lt2 R H) = (term341 A B lt2 R H).
Proof. exact (fun_ext (fun f : A -> B => @lem333493 A B lt2 R H f)). Qed.
Lemma lem333495 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem333496 {A B : Type'} (lt2 : type1402 A) (R : type1413 A B) (H : type549 A B) : (term343 A B lt2 R H) = (term342 A B lt2 R H).
Proof. exact (MK_COMB (@lem333495 A B) (@lem333494 A B lt2 R H)). Qed.
Lemma lem333497 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem333498 {A B : Type'} (lt2 : type1402 A) (R : type1413 A B) (H : type549 A B) : (term352 A B lt2 R H) = (term353 A B lt2 R H).
Proof. exact (MK_COMB (@lem333497) (@lem333496 A B lt2 R H)). Qed.
Lemma lem333499 {A B : Type'} (lt2 : type1402 A) (R : type1413 A B) (H : type549 A B) (f : A -> B) : (term346 A B lt2 R H f) = (term339 A B lt2 R H f).
Proof. exact (eq_refl (term346 A B lt2 R H f)). Qed.
Lemma lem333500 {A B : Type'} (z : type548 A B) (f : A -> B) : (z f) = (z f).
Proof. exact (eq_refl (z f)). Qed.
Lemma lem333501 {A B : Type'} (lt2 : type1402 A) (R : type1413 A B) (H : type549 A B) (z : type548 A B) (f : A -> B) : (term354 A B lt2 R H z f) = (term355 A B lt2 R H z f).
Proof. exact (MK_COMB (@lem333499 A B lt2 R H f) (@lem333500 A B z f)). Qed.
Lemma lem333502 {A B : Type'} (lt2 : type1402 A) (z : type548 A B) (R : type1413 A B) (H : type549 A B) (f : A -> B) : (term355 A B lt2 R H z f) = (term356 A B lt2 z R H f).
Proof. exact (eq_refl (term355 A B lt2 R H z f)). Qed.
Lemma lem333503 {A B : Type'} (lt2 : type1402 A) (z : type548 A B) (R : type1413 A B) (H : type549 A B) (f : A -> B) : (term354 A B lt2 R H z f) = (term356 A B lt2 z R H f).
Proof. exact (TRANS (@lem333501 A B lt2 R H z f) (@lem333502 A B lt2 z R H f)). Qed.
Lemma lem333504 {A B : Type'} (lt2 : type1402 A) (z : type548 A B) (R : type1413 A B) (H : type549 A B) : (term357 A B lt2 R H z) = (term358 A B lt2 z R H).
Proof. exact (fun_ext (fun f : A -> B => @lem333503 A B lt2 z R H f)). Qed.
Lemma lem333505 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem333506 {A B : Type'} (lt2 : type1402 A) (z : type548 A B) (R : type1413 A B) (H : type549 A B) : (term359 A B lt2 R H z) = (term360 A B lt2 z R H).
Proof. exact (MK_COMB (@lem333505 A B) (@lem333504 A B lt2 z R H)). Qed.
Lemma lem333507 {A B : Type'} (lt2 : type1402 A) (R : type1413 A B) (H : type549 A B) : (term361 A B lt2 R H) = (term362 A B lt2 R H).
Proof. exact (fun_ext (fun z : type548 A B => @lem333506 A B lt2 z R H)). Qed.
Lemma lem333508 {A B : Type'} : (@ex ((A -> B) -> A -> A)) = (@ex ((A -> B) -> A -> A)).
Proof. exact (eq_refl (@ex ((A -> B) -> A -> A))). Qed.
Lemma lem333509 {A B : Type'} (lt2 : type1402 A) (R : type1413 A B) (H : type549 A B) : (term344 A B lt2 R H) = (term363 A B lt2 R H).
Proof. exact (MK_COMB (@lem333508 A B) (@lem333507 A B lt2 R H)). Qed.
Lemma lem333510 {A B : Type'} (lt2 : type1402 A) (R : type1413 A B) (H : type549 A B) : ((term343 A B lt2 R H) = (term344 A B lt2 R H)) = ((term342 A B lt2 R H) = (term363 A B lt2 R H)).
Proof. exact (MK_COMB (@lem333498 A B lt2 R H) (@lem333509 A B lt2 R H)). Qed.
Lemma lem333511 {A B : Type'} (lt2 : type1402 A) (R : type1413 A B) (H : type549 A B) : (term342 A B lt2 R H) = (term363 A B lt2 R H).
Proof. exact (EQ_MP (@lem333510 A B lt2 R H) (@lem333485 A B lt2 R H)). Qed.
Lemma lem333513 {A B : Type'} (lt2 : type1402 A) (R : type1413 A B) (H : type549 A B) : (term302 A B lt2 R H) = (term363 A B lt2 R H).
Proof. exact (TRANS (@lem333481 A B lt2 R H) (@lem333511 A B lt2 R H)). Qed.
Lemma lem333514 {A B : Type'} (lt2 : type1402 A) (R : type1413 A B) (H : type549 A B) : (term3 A B lt2 R H) = (term363 A B lt2 R H).
Proof. exact (TRANS (@lem333319 A B lt2 R H) (@lem333513 A B lt2 R H)). Qed.
Lemma lem333515 {A B : Type'} (lt2 : type1402 A) (R : type1413 A B) (H : type549 A B) (h1 : term3 A B lt2 R H) : term363 A B lt2 R H.
Proof. exact (EQ_MP (@lem333514 A B lt2 R H) (@lem333006 A B lt2 R H h1)). Qed.
Lemma lem333522 {A B : Type'} (lt2 : type1402 A) (x : A) (R' : type1413 A B) (f : A -> B) (z : A) : (term56 A B lt2 x R' f z) = (term364 A B lt2 x R' f z).
Proof. exact (@lem17265 (lt2 z x) (term173 A B R' f z)). Qed.
Lemma lem333523 {A B : Type'} (lt2 : type1402 A) (x : A) (R' : type1413 A B) (f : A -> B) : (term57 A B lt2 x R' f) = (term365 A B lt2 x R' f).
Proof. exact (fun_ext (fun z : A => @lem333522 A B lt2 x R' f z)). Qed.
Lemma lem333524 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem333525 {A B : Type'} (lt2 : type1402 A) (x : A) (R' : type1413 A B) (f : A -> B) : (term58 A B lt2 x R' f) = (term366 A B lt2 x R' f).
Proof. exact (MK_COMB (@lem333524 A) (@lem333523 A B lt2 x R' f)). Qed.
Lemma lem333526 {A B : Type'} (R' : type1413 A B) (H : type549 A B) (f : A -> B) (x : A) : (term367 A B R' H f x) = (term367 A B R' H f x).
Proof. exact (eq_refl (term367 A B R' H f x)). Qed.
Lemma lem333527 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem333528 {A B : Type'} (lt2 : type1402 A) (x : A) (R' : type1413 A B) (f : A -> B) : (term368 A B lt2 x R' f) = (term369 A B lt2 x R' f).
Proof. exact (MK_COMB (@lem333527) (@lem333525 A B lt2 x R' f)). Qed.
Lemma lem333529 {A B : Type'} (lt2 : type1402 A) (R' : type1413 A B) (H : type549 A B) (f : A -> B) (x : A) : (term370 A B lt2 R' H f x) = (term371 A B lt2 R' H f x).
Proof. exact (MK_COMB (@lem333528 A B lt2 x R' f) (@lem333526 A B R' H f x)). Qed.
Lemma lem333530 {A B : Type'} (lt2 : type1402 A) (R' : type1413 A B) (H : type549 A B) (f : A -> B) (x : A) : (term372 A B lt2 R' H f x) = (term370 A B lt2 R' H f x).
Proof. exact (@lem17362 (term58 A B lt2 x R' f) (term72 A B R' H f x)). Qed.
Lemma lem333531 {A B : Type'} (lt2 : type1402 A) (R' : type1413 A B) (H : type549 A B) (f : A -> B) (x : A) : (term372 A B lt2 R' H f x) = (term371 A B lt2 R' H f x).
Proof. exact (TRANS (@lem333530 A B lt2 R' H f x) (@lem333529 A B lt2 R' H f x)). Qed.
Lemma lem333532 {A : Type'} (P : A -> Prop) : (term112 A P) = (term113 A P).
Proof. exact (@lem18392 A P). Qed.
Lemma lem333533 {A B : Type'} (lt2 : type1402 A) (R' : type1413 A B) (H : type549 A B) (f : A -> B) : (term373 A B lt2 R' H f) = (term374 A B lt2 R' H f).
Proof. exact (@lem333532 A (term75 A B lt2 R' H f)). Qed.
Lemma lem333534 {A B : Type'} (lt2 : type1402 A) (R' : type1413 A B) (H : type549 A B) (f : A -> B) (x : A) : (term375 A B lt2 R' H f x) = (term74 A B lt2 R' H f x).
Proof. exact (eq_refl (term375 A B lt2 R' H f x)). Qed.
Lemma lem333535 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem333536 {A B : Type'} (lt2 : type1402 A) (R' : type1413 A B) (H : type549 A B) (f : A -> B) (x : A) : (term376 A B lt2 R' H f x) = (term372 A B lt2 R' H f x).
Proof. exact (MK_COMB (@lem333535) (@lem333534 A B lt2 R' H f x)). Qed.
Lemma lem333537 {A B : Type'} (lt2 : type1402 A) (R' : type1413 A B) (H : type549 A B) (f : A -> B) (x : A) : (term376 A B lt2 R' H f x) = (term371 A B lt2 R' H f x).
Proof. exact (TRANS (@lem333536 A B lt2 R' H f x) (@lem333531 A B lt2 R' H f x)). Qed.
Lemma lem333538 {A B : Type'} (lt2 : type1402 A) (R' : type1413 A B) (H : type549 A B) (f : A -> B) : (term377 A B lt2 R' H f) = (term378 A B lt2 R' H f).
Proof. exact (fun_ext (fun x : A => @lem333537 A B lt2 R' H f x)). Qed.
Lemma lem333539 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem333540 {A B : Type'} (lt2 : type1402 A) (R' : type1413 A B) (H : type549 A B) (f : A -> B) : (term374 A B lt2 R' H f) = (term379 A B lt2 R' H f).
Proof. exact (MK_COMB (@lem333539 A) (@lem333538 A B lt2 R' H f)). Qed.
Lemma lem333541 {A B : Type'} (lt2 : type1402 A) (R' : type1413 A B) (H : type549 A B) (f : A -> B) : (term373 A B lt2 R' H f) = (term379 A B lt2 R' H f).
Proof. exact (TRANS (@lem333533 A B lt2 R' H f) (@lem333540 A B lt2 R' H f)). Qed.
Lemma lem333542 {A B : Type'} (P : type572 A B) : (term380 A B P) = (term381 A B P).
Proof. exact (@lem18392 (A -> B) P). Qed.
Lemma lem333543 {A B : Type'} (lt2 : type1402 A) (R' : type1413 A B) (H : type549 A B) : (term382 A B lt2 R' H) = (term383 A B lt2 R' H).
Proof. exact (@lem333542 A B (term77 A B lt2 R' H)). Qed.
Lemma lem333544 {A B : Type'} (lt2 : type1402 A) (R' : type1413 A B) (H : type549 A B) (f : A -> B) : (term384 A B lt2 R' H f) = (term76 A B lt2 R' H f).
Proof. exact (eq_refl (term384 A B lt2 R' H f)). Qed.
Lemma lem333545 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem333546 {A B : Type'} (lt2 : type1402 A) (R' : type1413 A B) (H : type549 A B) (f : A -> B) : (term385 A B lt2 R' H f) = (term373 A B lt2 R' H f).
Proof. exact (MK_COMB (@lem333545) (@lem333544 A B lt2 R' H f)). Qed.
Lemma lem333547 {A B : Type'} (lt2 : type1402 A) (R' : type1413 A B) (H : type549 A B) (f : A -> B) : (term385 A B lt2 R' H f) = (term379 A B lt2 R' H f).
Proof. exact (TRANS (@lem333546 A B lt2 R' H f) (@lem333541 A B lt2 R' H f)). Qed.
Lemma lem333548 {A B : Type'} (lt2 : type1402 A) (R' : type1413 A B) (H : type549 A B) : (term386 A B lt2 R' H) = (term387 A B lt2 R' H).
Proof. exact (fun_ext (fun f : A -> B => @lem333547 A B lt2 R' H f)). Qed.
Lemma lem333549 {A B : Type'} : (@ex (A -> B)) = (@ex (A -> B)).
Proof. exact (eq_refl (@ex (A -> B))). Qed.
Lemma lem333550 {A B : Type'} (lt2 : type1402 A) (R' : type1413 A B) (H : type549 A B) : (term383 A B lt2 R' H) = (term388 A B lt2 R' H).
Proof. exact (MK_COMB (@lem333549 A B) (@lem333548 A B lt2 R' H)). Qed.
Lemma lem333551 {A B : Type'} (lt2 : type1402 A) (R' : type1413 A B) (H : type549 A B) : (term382 A B lt2 R' H) = (term388 A B lt2 R' H).
Proof. exact (TRANS (@lem333543 A B lt2 R' H) (@lem333550 A B lt2 R' H)). Qed.
Lemma lem333558 {A B : Type'} (R : type1413 A B) (R' : type1413 A B) (a0 : A) (a1 : B) : (term67 A B R R' a0 a1) = (term389 A B R R' a0 a1).
Proof. exact (@lem17265 (R a0 a1) (R' a0 a1)). Qed.
Lemma lem333559 {A B : Type'} (R : type1413 A B) (R' : type1413 A B) (a0 : A) : (term68 A B R R' a0) = (term390 A B R R' a0).
Proof. exact (fun_ext (fun a1 : B => @lem333558 A B R R' a0 a1)). Qed.
Lemma lem333560 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem333561 {A B : Type'} (R : type1413 A B) (R' : type1413 A B) (a0 : A) : (term69 A B R R' a0) = (term391 A B R R' a0).
Proof. exact (MK_COMB (@lem333560 B) (@lem333559 A B R R' a0)). Qed.
Lemma lem333562 {A B : Type'} (R : type1413 A B) (R' : type1413 A B) : (term70 A B R R') = (term392 A B R R').
Proof. exact (fun_ext (fun a0 : A => @lem333561 A B R R' a0)). Qed.
Lemma lem333563 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem333564 {A B : Type'} (R : type1413 A B) (R' : type1413 A B) : (term71 A B R R') = (term393 A B R R').
Proof. exact (MK_COMB (@lem333563 A) (@lem333562 A B R R')). Qed.
Lemma lem333565 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem333566 {A B : Type'} (lt2 : type1402 A) (R' : type1413 A B) (H : type549 A B) : (term394 A B lt2 R' H) = (term395 A B lt2 R' H).
Proof. exact (MK_COMB (@lem333565) (@lem333551 A B lt2 R' H)). Qed.
Lemma lem333567 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (R : type1413 A B) (R' : type1413 A B) : (term396 A B lt2 H R R') = (term397 A B lt2 H R R').
Proof. exact (MK_COMB (@lem333566 A B lt2 R' H) (@lem333564 A B R R')). Qed.
Lemma lem333568 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (R : type1413 A B) (R' : type1413 A B) : (term78 A B lt2 H R R') = (term396 A B lt2 H R R').
Proof. exact (@lem17265 (term3 A B lt2 R' H) (term71 A B R R')). Qed.
Lemma lem333569 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (R : type1413 A B) (R' : type1413 A B) : (term78 A B lt2 H R R') = (term397 A B lt2 H R R').
Proof. exact (TRANS (@lem333568 A B lt2 H R R') (@lem333567 A B lt2 H R R')). Qed.
Lemma lem333570 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (R : type1413 A B) : (term79 A B lt2 H R) = (term398 A B lt2 H R).
Proof. exact (fun_ext (fun R' : type1413 A B => @lem333569 A B lt2 H R R')). Qed.
Lemma lem333571 {A B : Type'} : (@all (A -> B -> Prop)) = (@all (A -> B -> Prop)).
Proof. exact (eq_refl (@all (A -> B -> Prop))). Qed.
Lemma lem333572 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (R : type1413 A B) : (term5 A B lt2 H R) = (term399 A B lt2 H R).
Proof. exact (MK_COMB (@lem333571 A B) (@lem333570 A B lt2 H R)). Qed.
Lemma lem333775 {A : Type'} (P : A -> Prop) (Q : Prop) : (term127 A P Q) = (term128 A P Q).
Proof. exact (EQ_MP (@lem18905 A P Q) (@lem18904 A P Q)). Qed.
Lemma lem333776 {A B : Type'} (P : type572 A B) (Q : Prop) : (term400 A B P Q) = (term401 A B P Q).
Proof. exact (@lem333775 (A -> B) P Q). Qed.
Lemma lem333777 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (R : type1413 A B) (R' : type1413 A B) : (term402 A B lt2 H R R') = (term403 A B lt2 H R R').
Proof. exact (@lem333776 A B (term387 A B lt2 R' H) (term393 A B R R')). Qed.
Lemma lem333778 {A B : Type'} (lt2 : type1402 A) (R' : type1413 A B) (H : type549 A B) (f : A -> B) : (term404 A B lt2 R' H f) = (term379 A B lt2 R' H f).
Proof. exact (eq_refl (term404 A B lt2 R' H f)). Qed.
Lemma lem333779 {A B : Type'} (lt2 : type1402 A) (R' : type1413 A B) (H : type549 A B) : (term405 A B lt2 R' H) = (term387 A B lt2 R' H).
Proof. exact (fun_ext (fun f : A -> B => @lem333778 A B lt2 R' H f)). Qed.
Lemma lem333780 {A B : Type'} : (@ex (A -> B)) = (@ex (A -> B)).
Proof. exact (eq_refl (@ex (A -> B))). Qed.
Lemma lem333781 {A B : Type'} (lt2 : type1402 A) (R' : type1413 A B) (H : type549 A B) : (term406 A B lt2 R' H) = (term388 A B lt2 R' H).
Proof. exact (MK_COMB (@lem333780 A B) (@lem333779 A B lt2 R' H)). Qed.
Lemma lem333782 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem333783 {A B : Type'} (lt2 : type1402 A) (R' : type1413 A B) (H : type549 A B) : (term407 A B lt2 R' H) = (term395 A B lt2 R' H).
Proof. exact (MK_COMB (@lem333782) (@lem333781 A B lt2 R' H)). Qed.
Lemma lem333784 {A B : Type'} (R : type1413 A B) (R' : type1413 A B) : (term393 A B R R') = (term393 A B R R').
Proof. exact (eq_refl (term393 A B R R')). Qed.
Lemma lem333785 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (R : type1413 A B) (R' : type1413 A B) : (term402 A B lt2 H R R') = (term397 A B lt2 H R R').
Proof. exact (MK_COMB (@lem333783 A B lt2 R' H) (@lem333784 A B R R')). Qed.
Lemma lem333786 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem333787 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (R : type1413 A B) (R' : type1413 A B) : (term408 A B lt2 H R R') = (term409 A B lt2 H R R').
Proof. exact (MK_COMB (@lem333786) (@lem333785 A B lt2 H R R')). Qed.
Lemma lem333788 {A B : Type'} (lt2 : type1402 A) (R' : type1413 A B) (H : type549 A B) (f : A -> B) : (term404 A B lt2 R' H f) = (term379 A B lt2 R' H f).
Proof. exact (eq_refl (term404 A B lt2 R' H f)). Qed.
Lemma lem333789 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem333790 {A B : Type'} (lt2 : type1402 A) (R' : type1413 A B) (H : type549 A B) (f : A -> B) : (term410 A B lt2 R' H f) = (term411 A B lt2 R' H f).
Proof. exact (MK_COMB (@lem333789) (@lem333788 A B lt2 R' H f)). Qed.
Lemma lem333791 {A B : Type'} (R : type1413 A B) (R' : type1413 A B) : (term393 A B R R') = (term393 A B R R').
Proof. exact (eq_refl (term393 A B R R')). Qed.
Lemma lem333792 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (f : A -> B) (R : type1413 A B) (R' : type1413 A B) : (term412 A B lt2 H f R R') = (term413 A B lt2 H f R R').
Proof. exact (MK_COMB (@lem333790 A B lt2 R' H f) (@lem333791 A B R R')). Qed.
Lemma lem333793 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (R : type1413 A B) (R' : type1413 A B) : (term414 A B lt2 H R R') = (term415 A B lt2 H R R').
Proof. exact (fun_ext (fun f : A -> B => @lem333792 A B lt2 H f R R')). Qed.
Lemma lem333794 {A B : Type'} : (@ex (A -> B)) = (@ex (A -> B)).
Proof. exact (eq_refl (@ex (A -> B))). Qed.
Lemma lem333795 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (R : type1413 A B) (R' : type1413 A B) : (term403 A B lt2 H R R') = (term416 A B lt2 H R R').
Proof. exact (MK_COMB (@lem333794 A B) (@lem333793 A B lt2 H R R')). Qed.
Lemma lem333796 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (R : type1413 A B) (R' : type1413 A B) : ((term402 A B lt2 H R R') = (term403 A B lt2 H R R')) = ((term397 A B lt2 H R R') = (term416 A B lt2 H R R')).
Proof. exact (MK_COMB (@lem333787 A B lt2 H R R') (@lem333795 A B lt2 H R R')). Qed.
Lemma lem333797 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (R : type1413 A B) (R' : type1413 A B) : (term397 A B lt2 H R R') = (term416 A B lt2 H R R').
Proof. exact (EQ_MP (@lem333796 A B lt2 H R R') (@lem333777 A B lt2 H R R')). Qed.
Lemma lem333799 {A : Type'} (P : A -> Prop) (Q : Prop) : (term127 A P Q) = (term128 A P Q).
Proof. exact (EQ_MP (@lem18905 A P Q) (@lem18904 A P Q)). Qed.
Lemma lem333800 {A : Type'} (P : A -> Prop) (Q : Prop) : (term127 A P Q) = (term128 A P Q).
Proof. exact (@lem333799 A P Q). Qed.
Lemma lem333801 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (f : A -> B) (R : type1413 A B) (R' : type1413 A B) : (term417 A B lt2 H f R R') = (term418 A B lt2 H f R R').
Proof. exact (@lem333800 A (term378 A B lt2 R' H f) (term393 A B R R')). Qed.
Lemma lem333802 {A B : Type'} (lt2 : type1402 A) (R' : type1413 A B) (H : type549 A B) (f : A -> B) (x : A) : (term419 A B lt2 R' H f x) = (term371 A B lt2 R' H f x).
Proof. exact (eq_refl (term419 A B lt2 R' H f x)). Qed.
Lemma lem333803 {A B : Type'} (lt2 : type1402 A) (R' : type1413 A B) (H : type549 A B) (f : A -> B) : (term420 A B lt2 R' H f) = (term378 A B lt2 R' H f).
Proof. exact (fun_ext (fun x : A => @lem333802 A B lt2 R' H f x)). Qed.
Lemma lem333804 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem333805 {A B : Type'} (lt2 : type1402 A) (R' : type1413 A B) (H : type549 A B) (f : A -> B) : (term421 A B lt2 R' H f) = (term379 A B lt2 R' H f).
Proof. exact (MK_COMB (@lem333804 A) (@lem333803 A B lt2 R' H f)). Qed.
Lemma lem333806 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem333807 {A B : Type'} (lt2 : type1402 A) (R' : type1413 A B) (H : type549 A B) (f : A -> B) : (term422 A B lt2 R' H f) = (term411 A B lt2 R' H f).
Proof. exact (MK_COMB (@lem333806) (@lem333805 A B lt2 R' H f)). Qed.
Lemma lem333808 {A B : Type'} (R : type1413 A B) (R' : type1413 A B) : (term393 A B R R') = (term393 A B R R').
Proof. exact (eq_refl (term393 A B R R')). Qed.
Lemma lem333809 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (f : A -> B) (R : type1413 A B) (R' : type1413 A B) : (term417 A B lt2 H f R R') = (term413 A B lt2 H f R R').
Proof. exact (MK_COMB (@lem333807 A B lt2 R' H f) (@lem333808 A B R R')). Qed.
Lemma lem333810 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem333811 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (f : A -> B) (R : type1413 A B) (R' : type1413 A B) : (term423 A B lt2 H f R R') = (term424 A B lt2 H f R R').
Proof. exact (MK_COMB (@lem333810) (@lem333809 A B lt2 H f R R')). Qed.
Lemma lem333812 {A B : Type'} (lt2 : type1402 A) (R' : type1413 A B) (H : type549 A B) (f : A -> B) (x : A) : (term419 A B lt2 R' H f x) = (term371 A B lt2 R' H f x).
Proof. exact (eq_refl (term419 A B lt2 R' H f x)). Qed.
Lemma lem333813 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem333814 {A B : Type'} (lt2 : type1402 A) (R' : type1413 A B) (H : type549 A B) (f : A -> B) (x : A) : (term425 A B lt2 R' H f x) = (term426 A B lt2 R' H f x).
Proof. exact (MK_COMB (@lem333813) (@lem333812 A B lt2 R' H f x)). Qed.
Lemma lem333815 {A B : Type'} (R : type1413 A B) (R' : type1413 A B) : (term393 A B R R') = (term393 A B R R').
Proof. exact (eq_refl (term393 A B R R')). Qed.
Lemma lem333816 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (f : A -> B) (x : A) (R : type1413 A B) (R' : type1413 A B) : (term427 A B lt2 H f x R R') = (term428 A B lt2 H f x R R').
Proof. exact (MK_COMB (@lem333814 A B lt2 R' H f x) (@lem333815 A B R R')). Qed.
Lemma lem333817 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (f : A -> B) (R : type1413 A B) (R' : type1413 A B) : (term429 A B lt2 H f R R') = (term430 A B lt2 H f R R').
Proof. exact (fun_ext (fun x : A => @lem333816 A B lt2 H f x R R')). Qed.
Lemma lem333818 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem333819 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (f : A -> B) (R : type1413 A B) (R' : type1413 A B) : (term418 A B lt2 H f R R') = (term431 A B lt2 H f R R').
Proof. exact (MK_COMB (@lem333818 A) (@lem333817 A B lt2 H f R R')). Qed.
Lemma lem333820 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (f : A -> B) (R : type1413 A B) (R' : type1413 A B) : ((term417 A B lt2 H f R R') = (term418 A B lt2 H f R R')) = ((term413 A B lt2 H f R R') = (term431 A B lt2 H f R R')).
Proof. exact (MK_COMB (@lem333811 A B lt2 H f R R') (@lem333819 A B lt2 H f R R')). Qed.
Lemma lem333821 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (f : A -> B) (R : type1413 A B) (R' : type1413 A B) : (term413 A B lt2 H f R R') = (term431 A B lt2 H f R R').
Proof. exact (EQ_MP (@lem333820 A B lt2 H f R R') (@lem333801 A B lt2 H f R R')). Qed.
Lemma lem333822 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (R : type1413 A B) (R' : type1413 A B) : (term415 A B lt2 H R R') = (term432 A B lt2 H R R').
Proof. exact (fun_ext (fun f : A -> B => @lem333821 A B lt2 H f R R')). Qed.
Lemma lem333823 {A B : Type'} : (@ex (A -> B)) = (@ex (A -> B)).
Proof. exact (eq_refl (@ex (A -> B))). Qed.
Lemma lem333824 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (R : type1413 A B) (R' : type1413 A B) : (term416 A B lt2 H R R') = (term433 A B lt2 H R R').
Proof. exact (MK_COMB (@lem333823 A B) (@lem333822 A B lt2 H R R')). Qed.
Lemma lem333825 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (R : type1413 A B) (R' : type1413 A B) : (term397 A B lt2 H R R') = (term433 A B lt2 H R R').
Proof. exact (TRANS (@lem333797 A B lt2 H R R') (@lem333824 A B lt2 H R R')). Qed.
Lemma lem333826 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (R : type1413 A B) : (term398 A B lt2 H R) = (term434 A B lt2 H R).
Proof. exact (fun_ext (fun R' : type1413 A B => @lem333825 A B lt2 H R R')). Qed.
Lemma lem333827 {A B : Type'} : (@all (A -> B -> Prop)) = (@all (A -> B -> Prop)).
Proof. exact (eq_refl (@all (A -> B -> Prop))). Qed.
Lemma lem333828 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (R : type1413 A B) : (term399 A B lt2 H R) = (term435 A B lt2 H R).
Proof. exact (MK_COMB (@lem333827 A B) (@lem333826 A B lt2 H R)). Qed.
Lemma lem333830 {A B : Type'} (P : type1413 A B) : (term146 A B P) = (term147 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem333831 {A B : Type'} (P : type454 A B) : (term436 A B P) = (term437 A B P).
Proof. exact (@lem333830 (type1413 A B) (A -> B) P). Qed.
Lemma lem333832 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (R : type1413 A B) : (term438 A B lt2 H R) = (term439 A B lt2 H R).
Proof. exact (@lem333831 A B (term440 A B lt2 H R)). Qed.
Lemma lem333833 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (R : type1413 A B) (R' : type1413 A B) : (term441 A B lt2 H R R') = (term432 A B lt2 H R R').
Proof. exact (eq_refl (term441 A B lt2 H R R')). Qed.
Lemma lem333834 {A B : Type'} (f : A -> B) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem333835 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (R : type1413 A B) (R' : type1413 A B) (f : A -> B) : (term442 A B lt2 H R R' f) = (term443 A B lt2 H R R' f).
Proof. exact (MK_COMB (@lem333833 A B lt2 H R R') (@lem333834 A B f)). Qed.
Lemma lem333836 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (f : A -> B) (R : type1413 A B) (R' : type1413 A B) : (term443 A B lt2 H R R' f) = (term431 A B lt2 H f R R').
Proof. exact (eq_refl (term443 A B lt2 H R R' f)). Qed.
Lemma lem333837 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (f : A -> B) (R : type1413 A B) (R' : type1413 A B) : (term442 A B lt2 H R R' f) = (term431 A B lt2 H f R R').
Proof. exact (TRANS (@lem333835 A B lt2 H R R' f) (@lem333836 A B lt2 H f R R')). Qed.
Lemma lem333838 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (R : type1413 A B) (R' : type1413 A B) : (term444 A B lt2 H R R') = (term432 A B lt2 H R R').
Proof. exact (fun_ext (fun f : A -> B => @lem333837 A B lt2 H f R R')). Qed.
Lemma lem333839 {A B : Type'} : (@ex (A -> B)) = (@ex (A -> B)).
Proof. exact (eq_refl (@ex (A -> B))). Qed.
Lemma lem333840 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (R : type1413 A B) (R' : type1413 A B) : (term445 A B lt2 H R R') = (term433 A B lt2 H R R').
Proof. exact (MK_COMB (@lem333839 A B) (@lem333838 A B lt2 H R R')). Qed.
Lemma lem333841 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (R : type1413 A B) : (term446 A B lt2 H R) = (term434 A B lt2 H R).
Proof. exact (fun_ext (fun R' : type1413 A B => @lem333840 A B lt2 H R R')). Qed.
Lemma lem333842 {A B : Type'} : (@all (A -> B -> Prop)) = (@all (A -> B -> Prop)).
Proof. exact (eq_refl (@all (A -> B -> Prop))). Qed.
Lemma lem333843 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (R : type1413 A B) : (term438 A B lt2 H R) = (term435 A B lt2 H R).
Proof. exact (MK_COMB (@lem333842 A B) (@lem333841 A B lt2 H R)). Qed.
Lemma lem333844 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem333845 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (R : type1413 A B) : (term447 A B lt2 H R) = (term448 A B lt2 H R).
Proof. exact (MK_COMB (@lem333844) (@lem333843 A B lt2 H R)). Qed.
Lemma lem333846 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (R : type1413 A B) (R' : type1413 A B) : (term441 A B lt2 H R R') = (term432 A B lt2 H R R').
Proof. exact (eq_refl (term441 A B lt2 H R R')). Qed.
Lemma lem333847 {A B : Type'} (f : type467 A B) (R' : type1413 A B) : (f R') = (f R').
Proof. exact (eq_refl (f R')). Qed.
Lemma lem333848 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (R : type1413 A B) (f : type467 A B) (R' : type1413 A B) : (term449 A B lt2 H R f R') = (term450 A B lt2 H R f R').
Proof. exact (MK_COMB (@lem333846 A B lt2 H R R') (@lem333847 A B f R')). Qed.
Lemma lem333849 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (f : type467 A B) (R : type1413 A B) (R' : type1413 A B) : (term450 A B lt2 H R f R') = (term451 A B lt2 H f R R').
Proof. exact (eq_refl (term450 A B lt2 H R f R')). Qed.
Lemma lem333850 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (f : type467 A B) (R : type1413 A B) (R' : type1413 A B) : (term449 A B lt2 H R f R') = (term451 A B lt2 H f R R').
Proof. exact (TRANS (@lem333848 A B lt2 H R f R') (@lem333849 A B lt2 H f R R')). Qed.
Lemma lem333851 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (f : type467 A B) (R : type1413 A B) : (term452 A B lt2 H R f) = (term453 A B lt2 H f R).
Proof. exact (fun_ext (fun R' : type1413 A B => @lem333850 A B lt2 H f R R')). Qed.
Lemma lem333852 {A B : Type'} : (@all (A -> B -> Prop)) = (@all (A -> B -> Prop)).
Proof. exact (eq_refl (@all (A -> B -> Prop))). Qed.
Lemma lem333853 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (f : type467 A B) (R : type1413 A B) : (term454 A B lt2 H R f) = (term455 A B lt2 H f R).
Proof. exact (MK_COMB (@lem333852 A B) (@lem333851 A B lt2 H f R)). Qed.
Lemma lem333854 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (R : type1413 A B) : (term456 A B lt2 H R) = (term457 A B lt2 H R).
Proof. exact (fun_ext (fun f : type467 A B => @lem333853 A B lt2 H f R)). Qed.
Lemma lem333855 {A B : Type'} : (@ex ((A -> B -> Prop) -> A -> B)) = (@ex ((A -> B -> Prop) -> A -> B)).
Proof. exact (eq_refl (@ex ((A -> B -> Prop) -> A -> B))). Qed.
Lemma lem333856 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (R : type1413 A B) : (term439 A B lt2 H R) = (term458 A B lt2 H R).
Proof. exact (MK_COMB (@lem333855 A B) (@lem333854 A B lt2 H R)). Qed.
Lemma lem333857 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (R : type1413 A B) : ((term438 A B lt2 H R) = (term439 A B lt2 H R)) = ((term435 A B lt2 H R) = (term458 A B lt2 H R)).
Proof. exact (MK_COMB (@lem333845 A B lt2 H R) (@lem333856 A B lt2 H R)). Qed.
Lemma lem333858 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (R : type1413 A B) : (term435 A B lt2 H R) = (term458 A B lt2 H R).
Proof. exact (EQ_MP (@lem333857 A B lt2 H R) (@lem333832 A B lt2 H R)). Qed.
Lemma lem333860 {A B : Type'} (P : type1413 A B) : (term146 A B P) = (term147 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem333861 {A B : Type'} (P : type468 A B) : (term459 A B P) = (term460 A B P).
Proof. exact (@lem333860 (type1413 A B) A P). Qed.
Lemma lem333862 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (f : type467 A B) (R : type1413 A B) : (term461 A B lt2 H f R) = (term462 A B lt2 H f R).
Proof. exact (@lem333861 A B (term463 A B lt2 H f R)). Qed.
Lemma lem333863 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (f : type467 A B) (R : type1413 A B) (R' : type1413 A B) : (term464 A B lt2 H f R R') = (term465 A B lt2 H f R R').
Proof. exact (eq_refl (term464 A B lt2 H f R R')). Qed.
Lemma lem333864 {A : Type'} (x : A) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem333865 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (f : type467 A B) (R : type1413 A B) (R' : type1413 A B) (x : A) : (term466 A B lt2 H f R R' x) = (term467 A B lt2 H f R R' x).
Proof. exact (MK_COMB (@lem333863 A B lt2 H f R R') (@lem333864 A x)). Qed.
Lemma lem333866 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (f : type467 A B) (x : A) (R : type1413 A B) (R' : type1413 A B) : (term467 A B lt2 H f R R' x) = (term468 A B lt2 H f x R R').
Proof. exact (eq_refl (term467 A B lt2 H f R R' x)). Qed.
Lemma lem333867 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (f : type467 A B) (x : A) (R : type1413 A B) (R' : type1413 A B) : (term466 A B lt2 H f R R' x) = (term468 A B lt2 H f x R R').
Proof. exact (TRANS (@lem333865 A B lt2 H f R R' x) (@lem333866 A B lt2 H f x R R')). Qed.
Lemma lem333868 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (f : type467 A B) (R : type1413 A B) (R' : type1413 A B) : (term469 A B lt2 H f R R') = (term465 A B lt2 H f R R').
Proof. exact (fun_ext (fun x : A => @lem333867 A B lt2 H f x R R')). Qed.
Lemma lem333869 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem333870 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (f : type467 A B) (R : type1413 A B) (R' : type1413 A B) : (term470 A B lt2 H f R R') = (term451 A B lt2 H f R R').
Proof. exact (MK_COMB (@lem333869 A) (@lem333868 A B lt2 H f R R')). Qed.
Lemma lem333871 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (f : type467 A B) (R : type1413 A B) : (term471 A B lt2 H f R) = (term453 A B lt2 H f R).
Proof. exact (fun_ext (fun R' : type1413 A B => @lem333870 A B lt2 H f R R')). Qed.
Lemma lem333872 {A B : Type'} : (@all (A -> B -> Prop)) = (@all (A -> B -> Prop)).
Proof. exact (eq_refl (@all (A -> B -> Prop))). Qed.
Lemma lem333873 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (f : type467 A B) (R : type1413 A B) : (term461 A B lt2 H f R) = (term455 A B lt2 H f R).
Proof. exact (MK_COMB (@lem333872 A B) (@lem333871 A B lt2 H f R)). Qed.
Lemma lem333874 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem333875 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (f : type467 A B) (R : type1413 A B) : (term472 A B lt2 H f R) = (term473 A B lt2 H f R).
Proof. exact (MK_COMB (@lem333874) (@lem333873 A B lt2 H f R)). Qed.
Lemma lem333876 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (f : type467 A B) (R : type1413 A B) (R' : type1413 A B) : (term464 A B lt2 H f R R') = (term465 A B lt2 H f R R').
Proof. exact (eq_refl (term464 A B lt2 H f R R')). Qed.
Lemma lem333877 {A B : Type'} (x : type473 A B) (R' : type1413 A B) : (x R') = (x R').
Proof. exact (eq_refl (x R')). Qed.
Lemma lem333878 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (f : type467 A B) (R : type1413 A B) (x : type473 A B) (R' : type1413 A B) : (term474 A B lt2 H f R x R') = (term475 A B lt2 H f R x R').
Proof. exact (MK_COMB (@lem333876 A B lt2 H f R R') (@lem333877 A B x R')). Qed.
Lemma lem333879 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (f : type467 A B) (x : type473 A B) (R : type1413 A B) (R' : type1413 A B) : (term475 A B lt2 H f R x R') = (term476 A B lt2 H f x R R').
Proof. exact (eq_refl (term475 A B lt2 H f R x R')). Qed.
Lemma lem333880 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (f : type467 A B) (x : type473 A B) (R : type1413 A B) (R' : type1413 A B) : (term474 A B lt2 H f R x R') = (term476 A B lt2 H f x R R').
Proof. exact (TRANS (@lem333878 A B lt2 H f R x R') (@lem333879 A B lt2 H f x R R')). Qed.
Lemma lem333881 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (f : type467 A B) (x : type473 A B) (R : type1413 A B) : (term477 A B lt2 H f R x) = (term478 A B lt2 H f x R).
Proof. exact (fun_ext (fun R' : type1413 A B => @lem333880 A B lt2 H f x R R')). Qed.
Lemma lem333882 {A B : Type'} : (@all (A -> B -> Prop)) = (@all (A -> B -> Prop)).
Proof. exact (eq_refl (@all (A -> B -> Prop))). Qed.
Lemma lem333883 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (f : type467 A B) (x : type473 A B) (R : type1413 A B) : (term479 A B lt2 H f R x) = (term480 A B lt2 H f x R).
Proof. exact (MK_COMB (@lem333882 A B) (@lem333881 A B lt2 H f x R)). Qed.
Lemma lem333884 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (f : type467 A B) (R : type1413 A B) : (term481 A B lt2 H f R) = (term482 A B lt2 H f R).
Proof. exact (fun_ext (fun x : type473 A B => @lem333883 A B lt2 H f x R)). Qed.
Lemma lem333885 {A B : Type'} : (@ex ((A -> B -> Prop) -> A)) = (@ex ((A -> B -> Prop) -> A)).
Proof. exact (eq_refl (@ex ((A -> B -> Prop) -> A))). Qed.
Lemma lem333886 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (f : type467 A B) (R : type1413 A B) : (term462 A B lt2 H f R) = (term483 A B lt2 H f R).
Proof. exact (MK_COMB (@lem333885 A B) (@lem333884 A B lt2 H f R)). Qed.
Lemma lem333887 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (f : type467 A B) (R : type1413 A B) : ((term461 A B lt2 H f R) = (term462 A B lt2 H f R)) = ((term455 A B lt2 H f R) = (term483 A B lt2 H f R)).
Proof. exact (MK_COMB (@lem333875 A B lt2 H f R) (@lem333886 A B lt2 H f R)). Qed.
Lemma lem333888 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (f : type467 A B) (R : type1413 A B) : (term455 A B lt2 H f R) = (term483 A B lt2 H f R).
Proof. exact (EQ_MP (@lem333887 A B lt2 H f R) (@lem333862 A B lt2 H f R)). Qed.
Lemma lem333889 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (R : type1413 A B) : (term457 A B lt2 H R) = (term484 A B lt2 H R).
Proof. exact (fun_ext (fun f : type467 A B => @lem333888 A B lt2 H f R)). Qed.
Lemma lem333890 {A B : Type'} : (@ex ((A -> B -> Prop) -> A -> B)) = (@ex ((A -> B -> Prop) -> A -> B)).
Proof. exact (eq_refl (@ex ((A -> B -> Prop) -> A -> B))). Qed.
Lemma lem333891 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (R : type1413 A B) : (term458 A B lt2 H R) = (term485 A B lt2 H R).
Proof. exact (MK_COMB (@lem333890 A B) (@lem333889 A B lt2 H R)). Qed.
Lemma lem333892 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (R : type1413 A B) : (term435 A B lt2 H R) = (term485 A B lt2 H R).
Proof. exact (TRANS (@lem333858 A B lt2 H R) (@lem333891 A B lt2 H R)). Qed.
Lemma lem333894 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (R : type1413 A B) : (term399 A B lt2 H R) = (term485 A B lt2 H R).
Proof. exact (TRANS (@lem333828 A B lt2 H R) (@lem333892 A B lt2 H R)). Qed.
Lemma lem333895 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (R : type1413 A B) : (term5 A B lt2 H R) = (term485 A B lt2 H R).
Proof. exact (TRANS (@lem333572 A B lt2 H R) (@lem333894 A B lt2 H R)). Qed.
Lemma lem333896 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (R : type1413 A B) (h1 : term5 A B lt2 H R) : term485 A B lt2 H R.
Proof. exact (EQ_MP (@lem333895 A B lt2 H R) (@lem333007 A B lt2 H R h1)). Qed.
Lemma lem333898 {A B : Type'} (R : type1413 A B) (y : A) (y' : B) : (term667 A B R y y') = (term667 A B R y y').
Proof. exact (eq_refl (term667 A B R y y')). Qed.
Lemma lem333901 {B : Type'} (y' : B) (y : B) : (y' = y) = (y' = y).
Proof. exact (eq_refl (y' = y)). Qed.
Lemma lem333902 {A B : Type'} (R : type1413 A B) (y : A) (y' : B) : (term801 A B R y y') = (R y y').
Proof. exact (eq_refl (term801 A B R y y')). Qed.
Lemma lem333903 {A B : Type'} (R : type1413 A B) (y : A) (y' : B) : (term801 A B R y y') = (R y y').
Proof. exact (eq_refl (term801 A B R y y')). Qed.
Lemma lem333904 {A B : Type'} (R : type1413 A B) (y : A) (y' : B) : (term667 A B R y y') = (term667 A B R y y').
Proof. exact (@lem333898 A B R y y'). Qed.
Lemma lem333905 {B : Type'} (P : B -> Prop) : (@ex1 B P) = (term802 B P).
Proof. exact (@lem18897 B P). Qed.
Lemma lem333906 {A B : Type'} (R : type1413 A B) (y : A) : (term51 A B R y) = (term803 A B R y).
Proof. exact (@lem333905 B (term50 A B R y)). Qed.
Lemma lem333907 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem333908 {A B : Type'} (R : type1413 A B) (y : A) (y' : B) : (term804 A B R y y') = (term667 A B R y y').
Proof. exact (MK_COMB (@lem333907) (@lem333903 A B R y y')). Qed.
Lemma lem333909 {A B : Type'} (R : type1413 A B) (y : A) (y' : B) : (term804 A B R y y') = (term667 A B R y y').
Proof. exact (TRANS (@lem333908 A B R y y') (@lem333904 A B R y y')). Qed.
Lemma lem333910 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem333911 {A B : Type'} (R : type1413 A B) (y : A) (y' : B) : (term805 A B R y y') = (term502 A B R y y').
Proof. exact (MK_COMB (@lem333910) (@lem333909 A B R y y')). Qed.
Lemma lem333912 {A B : Type'} (R : type1413 A B) (y : A) (y' : B) (y'' : B) : (term806 A B R y y' y'') = (term807 A B R y y' y'').
Proof. exact (MK_COMB (@lem333911 A B R y y') (@lem333901 B y' y'')). Qed.
Lemma lem333913 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem333915 {A B : Type'} (R : type1413 A B) (y : A) (y' : B) : (term804 A B R y y') = (term667 A B R y y').
Proof. exact (MK_COMB (@lem333913) (@lem333902 A B R y y')). Qed.
Lemma lem333916 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem333917 {A B : Type'} (R : type1413 A B) (y : A) (y' : B) : (term805 A B R y y') = (term502 A B R y y').
Proof. exact (MK_COMB (@lem333916) (@lem333915 A B R y y')). Qed.
Lemma lem333918 {A B : Type'} (R : type1413 A B) (y : A) (y' : B) (y'' : B) : (term808 A B R y y' y'') = (term809 A B R y y' y'').
Proof. exact (MK_COMB (@lem333917 A B R y y'') (@lem333912 A B R y y' y'')). Qed.
Lemma lem333919 {A B : Type'} (R : type1413 A B) (y : A) (y' : B) : (term810 A B R y y') = (term811 A B R y y').
Proof. exact (fun_ext (fun y'' : B => @lem333918 A B R y y'' y')). Qed.
Lemma lem333920 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem333921 {A B : Type'} (R : type1413 A B) (y : A) (y' : B) : (term812 A B R y y') = (term813 A B R y y').
Proof. exact (MK_COMB (@lem333920 B) (@lem333919 A B R y y')). Qed.
Lemma lem333922 {A B : Type'} (R : type1413 A B) (y : A) : (term814 A B R y) = (term815 A B R y).
Proof. exact (fun_ext (fun y' : B => @lem333921 A B R y y')). Qed.
Lemma lem333923 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem333924 {A B : Type'} (R : type1413 A B) (y : A) : (term816 A B R y) = (term817 A B R y).
Proof. exact (MK_COMB (@lem333923 B) (@lem333922 A B R y)). Qed.
Lemma lem333925 {A B : Type'} (R : type1413 A B) (y : A) (y' : B) : (term801 A B R y y') = (R y y').
Proof. exact (eq_refl (term801 A B R y y')). Qed.
Lemma lem333926 {A B : Type'} (R : type1413 A B) (y : A) : (term818 A B R y) = (term50 A B R y).
Proof. exact (fun_ext (fun y' : B => @lem333925 A B R y y')). Qed.
Lemma lem333927 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem333928 {A B : Type'} (R : type1413 A B) (y : A) : (term819 A B R y) = (term820 A B R y).
Proof. exact (MK_COMB (@lem333927 B) (@lem333926 A B R y)). Qed.
Lemma lem333929 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem333930 {A B : Type'} (R : type1413 A B) (y : A) : (term821 A B R y) = (term822 A B R y).
Proof. exact (MK_COMB (@lem333929) (@lem333928 A B R y)). Qed.
Lemma lem333931 {A B : Type'} (R : type1413 A B) (y : A) : (term803 A B R y) = (term823 A B R y).
Proof. exact (MK_COMB (@lem333930 A B R y) (@lem333924 A B R y)). Qed.
Lemma lem333932 {A B : Type'} (R : type1413 A B) (y : A) : (term51 A B R y) = (term823 A B R y).
Proof. exact (TRANS (@lem333906 A B R y) (@lem333931 A B R y)). Qed.
Lemma lem333934 {A : Type'} (lt2 : type1402 A) (y : A) (x : A) : (term1096 A lt2 y x) = (term1096 A lt2 y x).
Proof. exact (eq_refl (term1096 A lt2 y x)). Qed.
Lemma lem333935 {A B : Type'} (lt2 : type1402 A) (x : A) (R : type1413 A B) (y : A) : (term1097 A B lt2 x R y) = (term1098 A B lt2 x R y).
Proof. exact (MK_COMB (@lem333934 A lt2 y x) (@lem333932 A B R y)). Qed.
Lemma lem333936 {A B : Type'} (lt2 : type1402 A) (x : A) (R : type1413 A B) (y : A) : (term1039 A B lt2 x R y) = (term1097 A B lt2 x R y).
Proof. exact (@lem17265 (lt2 y x) (term51 A B R y)). Qed.
Lemma lem333937 {A B : Type'} (lt2 : type1402 A) (x : A) (R : type1413 A B) (y : A) : (term1039 A B lt2 x R y) = (term1098 A B lt2 x R y).
Proof. exact (TRANS (@lem333936 A B lt2 x R y) (@lem333935 A B lt2 x R y)). Qed.
Lemma lem333938 {A B : Type'} (lt2 : type1402 A) (x : A) (R : type1413 A B) : (term1041 A B lt2 x R) = (term1099 A B lt2 x R).
Proof. exact (fun_ext (fun y : A => @lem333937 A B lt2 x R y)). Qed.
Lemma lem333939 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem333940 {A B : Type'} (lt2 : type1402 A) (x : A) (R : type1413 A B) : (term1043 A B lt2 x R) = (term1100 A B lt2 x R).
Proof. exact (MK_COMB (@lem333939 A) (@lem333938 A B lt2 x R)). Qed.
Lemma lem333998 {A : Type'} (P : Prop) (Q : A -> Prop) : (term845 A P Q) = (term846 A P Q).
Proof. exact (EQ_MP (@lem18941 A P Q) (@lem18940 A P Q)). Qed.
Lemma lem333999 {B : Type'} (P : Prop) (Q : B -> Prop) : (term845 B P Q) = (term846 B P Q).
Proof. exact (@lem333998 B P Q). Qed.
Lemma lem334000 {A B : Type'} (R : type1413 A B) (y : A) (y' : B) : (term847 A B R y y') = (term848 A B R y y').
Proof. exact (@lem333999 B (term667 A B R y y') (term849 A B R y y')). Qed.
Lemma lem334001 {A B : Type'} (R : type1413 A B) (y : A) (y' : B) (y'' : B) : (term850 A B R y y'' y') = (term807 A B R y y' y'').
Proof. exact (eq_refl (term850 A B R y y'' y')). Qed.
Lemma lem334002 {A B : Type'} (R : type1413 A B) (y : A) (y' : B) : (term502 A B R y y') = (term502 A B R y y').
Proof. exact (eq_refl (term502 A B R y y')). Qed.
Lemma lem334003 {A B : Type'} (R : type1413 A B) (y : A) (y' : B) (y'' : B) : (term851 A B R y y'' y') = (term809 A B R y y' y'').
Proof. exact (MK_COMB (@lem334002 A B R y y'') (@lem334001 A B R y y' y'')). Qed.
Lemma lem334004 {A B : Type'} (R : type1413 A B) (y : A) (y' : B) : (term852 A B R y y') = (term811 A B R y y').
Proof. exact (fun_ext (fun y'' : B => @lem334003 A B R y y'' y')). Qed.
Lemma lem334005 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem334006 {A B : Type'} (R : type1413 A B) (y : A) (y' : B) : (term847 A B R y y') = (term813 A B R y y').
Proof. exact (MK_COMB (@lem334005 B) (@lem334004 A B R y y')). Qed.
Lemma lem334007 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem334008 {A B : Type'} (R : type1413 A B) (y : A) (y' : B) : (term853 A B R y y') = (term854 A B R y y').
Proof. exact (MK_COMB (@lem334007) (@lem334006 A B R y y')). Qed.
Lemma lem334009 {A B : Type'} (R : type1413 A B) (y : A) (y' : B) (y'' : B) : (term850 A B R y y'' y') = (term807 A B R y y' y'').
Proof. exact (eq_refl (term850 A B R y y'' y')). Qed.
Lemma lem334010 {A B : Type'} (R : type1413 A B) (y : A) (y' : B) : (term855 A B R y y') = (term849 A B R y y').
Proof. exact (fun_ext (fun y'' : B => @lem334009 A B R y y'' y')). Qed.
Lemma lem334011 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem334012 {A B : Type'} (R : type1413 A B) (y : A) (y' : B) : (term856 A B R y y') = (term857 A B R y y').
Proof. exact (MK_COMB (@lem334011 B) (@lem334010 A B R y y')). Qed.
Lemma lem334013 {A B : Type'} (R : type1413 A B) (y : A) (y' : B) : (term502 A B R y y') = (term502 A B R y y').
Proof. exact (eq_refl (term502 A B R y y')). Qed.
Lemma lem334014 {A B : Type'} (R : type1413 A B) (y : A) (y' : B) : (term848 A B R y y') = (term858 A B R y y').
Proof. exact (MK_COMB (@lem334013 A B R y y') (@lem334012 A B R y y')). Qed.
Lemma lem334015 {A B : Type'} (R : type1413 A B) (y : A) (y' : B) : ((term847 A B R y y') = (term848 A B R y y')) = ((term813 A B R y y') = (term858 A B R y y')).
Proof. exact (MK_COMB (@lem334008 A B R y y') (@lem334014 A B R y y')). Qed.
Lemma lem334016 {A B : Type'} (R : type1413 A B) (y : A) (y' : B) : (term813 A B R y y') = (term858 A B R y y').
Proof. exact (EQ_MP (@lem334015 A B R y y') (@lem334000 A B R y y')). Qed.
Lemma lem334065 {A B : Type'} (R : type1413 A B) (y : A) : (term815 A B R y) = (term859 A B R y).
Proof. exact (fun_ext (fun y' : B => @lem334016 A B R y y')). Qed.
Lemma lem334066 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem334067 {A B : Type'} (R : type1413 A B) (y : A) : (term817 A B R y) = (term860 A B R y).
Proof. exact (MK_COMB (@lem334066 B) (@lem334065 A B R y)). Qed.
Lemma lem334116 {A B : Type'} (R : type1413 A B) (y : A) : (term822 A B R y) = (term822 A B R y).
Proof. exact (eq_refl (term822 A B R y)). Qed.
Lemma lem334117 {A B : Type'} (R : type1413 A B) (y : A) : (term823 A B R y) = (term1101 A B R y).
Proof. exact (MK_COMB (@lem334116 A B R y) (@lem334067 A B R y)). Qed.
Lemma lem334118 {A : Type'} (lt2 : type1402 A) (y : A) (x : A) : (term1096 A lt2 y x) = (term1096 A lt2 y x).
Proof. exact (eq_refl (term1096 A lt2 y x)). Qed.
Lemma lem334119 {A B : Type'} (lt2 : type1402 A) (x : A) (R : type1413 A B) (y : A) : (term1098 A B lt2 x R y) = (term1102 A B lt2 x R y).
Proof. exact (MK_COMB (@lem334118 A lt2 y x) (@lem334117 A B R y)). Qed.
Lemma lem334120 {A B : Type'} (lt2 : type1402 A) (x : A) (R : type1413 A B) : (term1099 A B lt2 x R) = (term1103 A B lt2 x R).
Proof. exact (fun_ext (fun y : A => @lem334119 A B lt2 x R y)). Qed.
Lemma lem334121 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem334122 {A B : Type'} (lt2 : type1402 A) (x : A) (R : type1413 A B) : (term1100 A B lt2 x R) = (term1104 A B lt2 x R).
Proof. exact (MK_COMB (@lem334121 A) (@lem334120 A B lt2 x R)). Qed.
Lemma lem334172 {A : Type'} (P : A -> Prop) (Q : Prop) : (term729 A P Q) = (term730 A P Q).
Proof. exact (EQ_MP (@lem18923 A P Q) (@lem18922 A P Q)). Qed.
Lemma lem334173 {B : Type'} (P : B -> Prop) (Q : Prop) : (term729 B P Q) = (term730 B P Q).
Proof. exact (@lem334172 B P Q). Qed.
Lemma lem334174 {A B : Type'} (R : type1413 A B) (y : A) : (term1105 A B R y) = (term1106 A B R y).
Proof. exact (@lem334173 B (term50 A B R y) (term860 A B R y)). Qed.
Lemma lem334175 {A B : Type'} (R : type1413 A B) (y : A) (y' : B) : (term801 A B R y y') = (R y y').
Proof. exact (eq_refl (term801 A B R y y')). Qed.
Lemma lem334176 {A B : Type'} (R : type1413 A B) (y : A) : (term818 A B R y) = (term50 A B R y).
Proof. exact (fun_ext (fun y' : B => @lem334175 A B R y y')). Qed.
Lemma lem334177 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem334178 {A B : Type'} (R : type1413 A B) (y : A) : (term819 A B R y) = (term820 A B R y).
Proof. exact (MK_COMB (@lem334177 B) (@lem334176 A B R y)). Qed.
Lemma lem334179 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem334180 {A B : Type'} (R : type1413 A B) (y : A) : (term821 A B R y) = (term822 A B R y).
Proof. exact (MK_COMB (@lem334179) (@lem334178 A B R y)). Qed.
Lemma lem334181 {A B : Type'} (R : type1413 A B) (y : A) : (term860 A B R y) = (term860 A B R y).
Proof. exact (eq_refl (term860 A B R y)). Qed.
Lemma lem334182 {A B : Type'} (R : type1413 A B) (y : A) : (term1105 A B R y) = (term1101 A B R y).
Proof. exact (MK_COMB (@lem334180 A B R y) (@lem334181 A B R y)). Qed.
Lemma lem334183 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem334184 {A B : Type'} (R : type1413 A B) (y : A) : (term1107 A B R y) = (term1108 A B R y).
Proof. exact (MK_COMB (@lem334183) (@lem334182 A B R y)). Qed.
Lemma lem334185 {A B : Type'} (R : type1413 A B) (y : A) (y' : B) : (term801 A B R y y') = (R y y').
Proof. exact (eq_refl (term801 A B R y y')). Qed.
Lemma lem334186 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem334187 {A B : Type'} (R : type1413 A B) (y : A) (y' : B) : (term1109 A B R y y') = (term1110 A B R y y').
Proof. exact (MK_COMB (@lem334186) (@lem334185 A B R y y')). Qed.
Lemma lem334188 {A B : Type'} (R : type1413 A B) (y : A) : (term860 A B R y) = (term860 A B R y).
Proof. exact (eq_refl (term860 A B R y)). Qed.
Lemma lem334189 {A B : Type'} (y : B) (R : type1413 A B) (y' : A) : (term1111 A B y R y') = (term1112 A B y R y').
Proof. exact (MK_COMB (@lem334187 A B R y' y) (@lem334188 A B R y')). Qed.
Lemma lem334190 {A B : Type'} (R : type1413 A B) (y : A) : (term1113 A B R y) = (term1114 A B R y).
Proof. exact (fun_ext (fun y' : B => @lem334189 A B y' R y)). Qed.
Lemma lem334191 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem334192 {A B : Type'} (R : type1413 A B) (y : A) : (term1106 A B R y) = (term1115 A B R y).
Proof. exact (MK_COMB (@lem334191 B) (@lem334190 A B R y)). Qed.
Lemma lem334193 {A B : Type'} (R : type1413 A B) (y : A) : ((term1105 A B R y) = (term1106 A B R y)) = ((term1101 A B R y) = (term1115 A B R y)).
Proof. exact (MK_COMB (@lem334184 A B R y) (@lem334192 A B R y)). Qed.
Lemma lem334194 {A B : Type'} (R : type1413 A B) (y : A) : (term1101 A B R y) = (term1115 A B R y).
Proof. exact (EQ_MP (@lem334193 A B R y) (@lem334174 A B R y)). Qed.
Lemma lem334195 {A : Type'} (lt2 : type1402 A) (y : A) (x : A) : (term1096 A lt2 y x) = (term1096 A lt2 y x).
Proof. exact (eq_refl (term1096 A lt2 y x)). Qed.
Lemma lem334196 {A B : Type'} (lt2 : type1402 A) (x : A) (R : type1413 A B) (y : A) : (term1102 A B lt2 x R y) = (term1116 A B lt2 x R y).
Proof. exact (MK_COMB (@lem334195 A lt2 y x) (@lem334194 A B R y)). Qed.
Lemma lem334198 {A : Type'} (P : Prop) (Q : A -> Prop) : (term560 A P Q) = (term561 A P Q).
Proof. exact (EQ_MP (@lem18911 A P Q) (@lem18910 A P Q)). Qed.
Lemma lem334199 {B : Type'} (P : Prop) (Q : B -> Prop) : (term560 B P Q) = (term561 B P Q).
Proof. exact (@lem334198 B P Q). Qed.
Lemma lem334200 {A B : Type'} (lt2 : type1402 A) (x : A) (R : type1413 A B) (y : A) : (term1117 A B lt2 x R y) = (term1118 A B lt2 x R y).
Proof. exact (@lem334199 B (term1119 A lt2 y x) (term1114 A B R y)). Qed.
Lemma lem334201 {A B : Type'} (y : B) (R : type1413 A B) (y' : A) : (term1120 A B R y' y) = (term1112 A B y R y').
Proof. exact (eq_refl (term1120 A B R y' y)). Qed.
Lemma lem334202 {A B : Type'} (R : type1413 A B) (y : A) : (term1121 A B R y) = (term1114 A B R y).
Proof. exact (fun_ext (fun y' : B => @lem334201 A B y' R y)). Qed.
Lemma lem334203 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem334204 {A B : Type'} (R : type1413 A B) (y : A) : (term1122 A B R y) = (term1115 A B R y).
Proof. exact (MK_COMB (@lem334203 B) (@lem334202 A B R y)). Qed.
Lemma lem334205 {A : Type'} (lt2 : type1402 A) (y : A) (x : A) : (term1096 A lt2 y x) = (term1096 A lt2 y x).
Proof. exact (eq_refl (term1096 A lt2 y x)). Qed.
Lemma lem334206 {A B : Type'} (lt2 : type1402 A) (x : A) (R : type1413 A B) (y : A) : (term1117 A B lt2 x R y) = (term1116 A B lt2 x R y).
Proof. exact (MK_COMB (@lem334205 A lt2 y x) (@lem334204 A B R y)). Qed.
Lemma lem334207 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem334208 {A B : Type'} (lt2 : type1402 A) (x : A) (R : type1413 A B) (y : A) : (term1123 A B lt2 x R y) = (term1124 A B lt2 x R y).
Proof. exact (MK_COMB (@lem334207) (@lem334206 A B lt2 x R y)). Qed.
Lemma lem334209 {A B : Type'} (y : B) (R : type1413 A B) (y' : A) : (term1120 A B R y' y) = (term1112 A B y R y').
Proof. exact (eq_refl (term1120 A B R y' y)). Qed.
Lemma lem334210 {A : Type'} (lt2 : type1402 A) (y : A) (x : A) : (term1096 A lt2 y x) = (term1096 A lt2 y x).
Proof. exact (eq_refl (term1096 A lt2 y x)). Qed.
Lemma lem334211 {A B : Type'} (lt2 : type1402 A) (x : A) (y : B) (R : type1413 A B) (y' : A) : (term1125 A B lt2 x R y' y) = (term1126 A B lt2 x y R y').
Proof. exact (MK_COMB (@lem334210 A lt2 y' x) (@lem334209 A B y R y')). Qed.
Lemma lem334212 {A B : Type'} (lt2 : type1402 A) (x : A) (R : type1413 A B) (y : A) : (term1127 A B lt2 x R y) = (term1128 A B lt2 x R y).
Proof. exact (fun_ext (fun y' : B => @lem334211 A B lt2 x y' R y)). Qed.
Lemma lem334213 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem334214 {A B : Type'} (lt2 : type1402 A) (x : A) (R : type1413 A B) (y : A) : (term1118 A B lt2 x R y) = (term1129 A B lt2 x R y).
Proof. exact (MK_COMB (@lem334213 B) (@lem334212 A B lt2 x R y)). Qed.
Lemma lem334215 {A B : Type'} (lt2 : type1402 A) (x : A) (R : type1413 A B) (y : A) : ((term1117 A B lt2 x R y) = (term1118 A B lt2 x R y)) = ((term1116 A B lt2 x R y) = (term1129 A B lt2 x R y)).
Proof. exact (MK_COMB (@lem334208 A B lt2 x R y) (@lem334214 A B lt2 x R y)). Qed.
Lemma lem334216 {A B : Type'} (lt2 : type1402 A) (x : A) (R : type1413 A B) (y : A) : (term1116 A B lt2 x R y) = (term1129 A B lt2 x R y).
Proof. exact (EQ_MP (@lem334215 A B lt2 x R y) (@lem334200 A B lt2 x R y)). Qed.
Lemma lem334217 {A B : Type'} (lt2 : type1402 A) (x : A) (R : type1413 A B) (y : A) : (term1102 A B lt2 x R y) = (term1129 A B lt2 x R y).
Proof. exact (TRANS (@lem334196 A B lt2 x R y) (@lem334216 A B lt2 x R y)). Qed.
Lemma lem334218 {A B : Type'} (lt2 : type1402 A) (x : A) (R : type1413 A B) : (term1103 A B lt2 x R) = (term1130 A B lt2 x R).
Proof. exact (fun_ext (fun y : A => @lem334217 A B lt2 x R y)). Qed.
Lemma lem334219 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem334220 {A B : Type'} (lt2 : type1402 A) (x : A) (R : type1413 A B) : (term1104 A B lt2 x R) = (term1131 A B lt2 x R).
Proof. exact (MK_COMB (@lem334219 A) (@lem334218 A B lt2 x R)). Qed.
Lemma lem334222 {A B : Type'} (P : type1413 A B) : (term146 A B P) = (term147 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem334223 {A B : Type'} (P : type1413 A B) : (term146 A B P) = (term147 A B P).
Proof. exact (@lem334222 A B P). Qed.
Lemma lem334224 {A B : Type'} (lt2 : type1402 A) (x : A) (R : type1413 A B) : (term1132 A B lt2 x R) = (term1133 A B lt2 x R).
Proof. exact (@lem334223 A B (term1134 A B lt2 x R)). Qed.
Lemma lem334225 {A B : Type'} (lt2 : type1402 A) (x : A) (R : type1413 A B) (y : A) : (term1135 A B lt2 x R y) = (term1128 A B lt2 x R y).
Proof. exact (eq_refl (term1135 A B lt2 x R y)). Qed.
Lemma lem334226 {B : Type'} (y : B) : y = y.
Proof. exact (eq_refl y). Qed.
Lemma lem334227 {A B : Type'} (lt2 : type1402 A) (x : A) (R : type1413 A B) (y : A) (y' : B) : (term1136 A B lt2 x R y y') = (term1137 A B lt2 x R y y').
Proof. exact (MK_COMB (@lem334225 A B lt2 x R y) (@lem334226 B y')). Qed.
Lemma lem334228 {A B : Type'} (lt2 : type1402 A) (x : A) (y : B) (R : type1413 A B) (y' : A) : (term1137 A B lt2 x R y' y) = (term1126 A B lt2 x y R y').
Proof. exact (eq_refl (term1137 A B lt2 x R y' y)). Qed.
Lemma lem334229 {A B : Type'} (lt2 : type1402 A) (x : A) (y : B) (R : type1413 A B) (y' : A) : (term1136 A B lt2 x R y' y) = (term1126 A B lt2 x y R y').
Proof. exact (TRANS (@lem334227 A B lt2 x R y' y) (@lem334228 A B lt2 x y R y')). Qed.
Lemma lem334230 {A B : Type'} (lt2 : type1402 A) (x : A) (R : type1413 A B) (y : A) : (term1138 A B lt2 x R y) = (term1128 A B lt2 x R y).
Proof. exact (fun_ext (fun y' : B => @lem334229 A B lt2 x y' R y)). Qed.
Lemma lem334231 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem334232 {A B : Type'} (lt2 : type1402 A) (x : A) (R : type1413 A B) (y : A) : (term1139 A B lt2 x R y) = (term1129 A B lt2 x R y).
Proof. exact (MK_COMB (@lem334231 B) (@lem334230 A B lt2 x R y)). Qed.
Lemma lem334233 {A B : Type'} (lt2 : type1402 A) (x : A) (R : type1413 A B) : (term1140 A B lt2 x R) = (term1130 A B lt2 x R).
Proof. exact (fun_ext (fun y : A => @lem334232 A B lt2 x R y)). Qed.
Lemma lem334234 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem334235 {A B : Type'} (lt2 : type1402 A) (x : A) (R : type1413 A B) : (term1132 A B lt2 x R) = (term1131 A B lt2 x R).
Proof. exact (MK_COMB (@lem334234 A) (@lem334233 A B lt2 x R)). Qed.
Lemma lem334236 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem334237 {A B : Type'} (lt2 : type1402 A) (x : A) (R : type1413 A B) : (term1141 A B lt2 x R) = (term1142 A B lt2 x R).
Proof. exact (MK_COMB (@lem334236) (@lem334235 A B lt2 x R)). Qed.
Lemma lem334238 {A B : Type'} (lt2 : type1402 A) (x : A) (R : type1413 A B) (y : A) : (term1135 A B lt2 x R y) = (term1128 A B lt2 x R y).
Proof. exact (eq_refl (term1135 A B lt2 x R y)). Qed.
Lemma lem334239 {A B : Type'} (y : A -> B) (y' : A) : (y y') = (y y').
Proof. exact (eq_refl (y y')). Qed.
Lemma lem334240 {A B : Type'} (lt2 : type1402 A) (x : A) (R : type1413 A B) (y : A -> B) (y' : A) : (term1143 A B lt2 x R y y') = (term1144 A B lt2 x R y y').
Proof. exact (MK_COMB (@lem334238 A B lt2 x R y') (@lem334239 A B y y')). Qed.
Lemma lem334241 {A B : Type'} (lt2 : type1402 A) (x : A) (y : A -> B) (R : type1413 A B) (y' : A) : (term1144 A B lt2 x R y y') = (term1145 A B lt2 x y R y').
Proof. exact (eq_refl (term1144 A B lt2 x R y y')). Qed.
Lemma lem334242 {A B : Type'} (lt2 : type1402 A) (x : A) (y : A -> B) (R : type1413 A B) (y' : A) : (term1143 A B lt2 x R y y') = (term1145 A B lt2 x y R y').
Proof. exact (TRANS (@lem334240 A B lt2 x R y y') (@lem334241 A B lt2 x y R y')). Qed.
Lemma lem334243 {A B : Type'} (lt2 : type1402 A) (x : A) (y : A -> B) (R : type1413 A B) : (term1146 A B lt2 x R y) = (term1147 A B lt2 x y R).
Proof. exact (fun_ext (fun y' : A => @lem334242 A B lt2 x y R y')). Qed.
Lemma lem334244 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem334245 {A B : Type'} (lt2 : type1402 A) (x : A) (y : A -> B) (R : type1413 A B) : (term1148 A B lt2 x R y) = (term1149 A B lt2 x y R).
Proof. exact (MK_COMB (@lem334244 A) (@lem334243 A B lt2 x y R)). Qed.
Lemma lem334246 {A B : Type'} (lt2 : type1402 A) (x : A) (R : type1413 A B) : (term1150 A B lt2 x R) = (term1151 A B lt2 x R).
Proof. exact (fun_ext (fun y : A -> B => @lem334245 A B lt2 x y R)). Qed.
Lemma lem334247 {A B : Type'} : (@ex (A -> B)) = (@ex (A -> B)).
Proof. exact (eq_refl (@ex (A -> B))). Qed.
Lemma lem334248 {A B : Type'} (lt2 : type1402 A) (x : A) (R : type1413 A B) : (term1133 A B lt2 x R) = (term1152 A B lt2 x R).
Proof. exact (MK_COMB (@lem334247 A B) (@lem334246 A B lt2 x R)). Qed.
Lemma lem334249 {A B : Type'} (lt2 : type1402 A) (x : A) (R : type1413 A B) : ((term1132 A B lt2 x R) = (term1133 A B lt2 x R)) = ((term1131 A B lt2 x R) = (term1152 A B lt2 x R)).
Proof. exact (MK_COMB (@lem334237 A B lt2 x R) (@lem334248 A B lt2 x R)). Qed.
Lemma lem334250 {A B : Type'} (lt2 : type1402 A) (x : A) (R : type1413 A B) : (term1131 A B lt2 x R) = (term1152 A B lt2 x R).
Proof. exact (EQ_MP (@lem334249 A B lt2 x R) (@lem334224 A B lt2 x R)). Qed.
Lemma lem334251 {A B : Type'} (lt2 : type1402 A) (x : A) (R : type1413 A B) : (term1104 A B lt2 x R) = (term1152 A B lt2 x R).
Proof. exact (TRANS (@lem334220 A B lt2 x R) (@lem334250 A B lt2 x R)). Qed.
Lemma lem334252 {A B : Type'} (lt2 : type1402 A) (x : A) (R : type1413 A B) : (term1100 A B lt2 x R) = (term1152 A B lt2 x R).
Proof. exact (TRANS (@lem334122 A B lt2 x R) (@lem334251 A B lt2 x R)). Qed.
Lemma lem334253 {A B : Type'} (lt2 : type1402 A) (x : A) (R : type1413 A B) : (term1043 A B lt2 x R) = (term1152 A B lt2 x R).
Proof. exact (TRANS (@lem333940 A B lt2 x R) (@lem334252 A B lt2 x R)). Qed.
Lemma lem334254 {A B : Type'} (lt2 : type1402 A) (x : A) (R : type1413 A B) (h1 : term1043 A B lt2 x R) : term1152 A B lt2 x R.
Proof. exact (EQ_MP (@lem334253 A B lt2 x R) (@lem333008 A B lt2 x R h1)). Qed.
Lemma lem334261 {A B : Type'} (R : type1413 A B) (S' : type1413 A B) (x : A) (y : B) : (term67 A B R S' x y) = (term389 A B R S' x y).
Proof. exact (@lem17265 (R x y) (S' x y)). Qed.
Lemma lem334262 {A B : Type'} (R : type1413 A B) (S' : type1413 A B) (x : A) : (term68 A B R S' x) = (term390 A B R S' x).
Proof. exact (fun_ext (fun y : B => @lem334261 A B R S' x y)). Qed.
Lemma lem334263 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem334264 {A B : Type'} (R : type1413 A B) (S' : type1413 A B) (x : A) : (term69 A B R S' x) = (term391 A B R S' x).
Proof. exact (MK_COMB (@lem334263 B) (@lem334262 A B R S' x)). Qed.
Lemma lem334265 {A B : Type'} (R : type1413 A B) (S' : type1413 A B) : (term70 A B R S') = (term392 A B R S').
Proof. exact (fun_ext (fun x : A => @lem334264 A B R S' x)). Qed.
Lemma lem334266 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem334323 {A B : Type'} (R : type1413 A B) (S' : type1413 A B) : (term71 A B R S') = (term393 A B R S').
Proof. exact (MK_COMB (@lem334266 A) (@lem334265 A B R S')). Qed.
Lemma lem334324 {A B : Type'} (R : type1413 A B) (S' : type1413 A B) (h1 : term71 A B R S') : term393 A B R S'.
Proof. exact (EQ_MP (@lem334323 A B R S') (@lem333009 A B R S' h1)). Qed.
Lemma lem334335 {A B : Type'} (lt2 : type1402 A) (x : A) (R : type1413 A B) (f : A -> B) (z : A) : (term286 A B lt2 x R f z) = (term287 A B lt2 x R f z).
Proof. exact (@lem17362 (lt2 z x) (term173 A B R f z)). Qed.
Lemma lem334340 {A B : Type'} (lt2 : type1402 A) (x : A) (R : type1413 A B) (f : A -> B) (z : A) : (term56 A B lt2 x R f z) = (term364 A B lt2 x R f z).
Proof. exact (@lem17265 (lt2 z x) (term173 A B R f z)). Qed.
Lemma lem334341 {A : Type'} (P : A -> Prop) : (term112 A P) = (term113 A P).
Proof. exact (@lem18392 A P). Qed.
Lemma lem334342 {A B : Type'} (lt2 : type1402 A) (x : A) (R : type1413 A B) (f : A -> B) : (term288 A B lt2 x R f) = (term289 A B lt2 x R f).
Proof. exact (@lem334341 A (term57 A B lt2 x R f)). Qed.
Lemma lem334343 {A B : Type'} (lt2 : type1402 A) (x : A) (R : type1413 A B) (f : A -> B) (z : A) : (term290 A B lt2 x R f z) = (term56 A B lt2 x R f z).
Proof. exact (eq_refl (term290 A B lt2 x R f z)). Qed.
Lemma lem334344 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem334345 {A B : Type'} (lt2 : type1402 A) (x : A) (R : type1413 A B) (f : A -> B) (z : A) : (term291 A B lt2 x R f z) = (term286 A B lt2 x R f z).
Proof. exact (MK_COMB (@lem334344) (@lem334343 A B lt2 x R f z)). Qed.
Lemma lem334346 {A B : Type'} (lt2 : type1402 A) (x : A) (R : type1413 A B) (f : A -> B) (z : A) : (term291 A B lt2 x R f z) = (term287 A B lt2 x R f z).
Proof. exact (TRANS (@lem334345 A B lt2 x R f z) (@lem334335 A B lt2 x R f z)). Qed.
Lemma lem334347 {A B : Type'} (lt2 : type1402 A) (x : A) (R : type1413 A B) (f : A -> B) : (term292 A B lt2 x R f) = (term293 A B lt2 x R f).
Proof. exact (fun_ext (fun z : A => @lem334346 A B lt2 x R f z)). Qed.
Lemma lem334348 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem334349 {A B : Type'} (lt2 : type1402 A) (x : A) (R : type1413 A B) (f : A -> B) : (term289 A B lt2 x R f) = (term294 A B lt2 x R f).
Proof. exact (MK_COMB (@lem334348 A) (@lem334347 A B lt2 x R f)). Qed.
Lemma lem334350 {A B : Type'} (lt2 : type1402 A) (x : A) (R : type1413 A B) (f : A -> B) : (term288 A B lt2 x R f) = (term294 A B lt2 x R f).
Proof. exact (TRANS (@lem334342 A B lt2 x R f) (@lem334349 A B lt2 x R f)). Qed.
Lemma lem334351 {A B : Type'} (lt2 : type1402 A) (x : A) (R : type1413 A B) (f : A -> B) : (term57 A B lt2 x R f) = (term365 A B lt2 x R f).
Proof. exact (fun_ext (fun z : A => @lem334340 A B lt2 x R f z)). Qed.
Lemma lem334352 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem334353 {A B : Type'} (lt2 : type1402 A) (x : A) (R : type1413 A B) (f : A -> B) : (term58 A B lt2 x R f) = (term366 A B lt2 x R f).
Proof. exact (MK_COMB (@lem334352 A) (@lem334351 A B lt2 x R f)). Qed.
Lemma lem334355 {A B : Type'} (y : B) (H : type549 A B) (f : A -> B) (x : A) : (term486 A B y H f x) = (term486 A B y H f x).
Proof. exact (eq_refl (term486 A B y H f x)). Qed.
Lemma lem334356 {A B : Type'} (y : B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (f : A -> B) : (term487 A B y H lt2 x R f) = (term488 A B y H lt2 x R f).
Proof. exact (MK_COMB (@lem334355 A B y H f x) (@lem334350 A B lt2 x R f)). Qed.
Lemma lem334357 {A B : Type'} (y : B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (f : A -> B) : (term489 A B y H lt2 x R f) = (term487 A B y H lt2 x R f).
Proof. exact (@lem17045 (y = (H f x)) (term58 A B lt2 x R f)). Qed.
Lemma lem334358 {A B : Type'} (y : B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (f : A -> B) : (term489 A B y H lt2 x R f) = (term488 A B y H lt2 x R f).
Proof. exact (TRANS (@lem334357 A B y H lt2 x R f) (@lem334356 A B y H lt2 x R f)). Qed.
Lemma lem334360 {A B : Type'} (y : B) (H : type549 A B) (f : A -> B) (x : A) : (term59 A B y H f x) = (term59 A B y H f x).
Proof. exact (eq_refl (term59 A B y H f x)). Qed.
Lemma lem334361 {A B : Type'} (y : B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (f : A -> B) : (term60 A B y H lt2 x R f) = (term490 A B y H lt2 x R f).
Proof. exact (MK_COMB (@lem334360 A B y H f x) (@lem334353 A B lt2 x R f)). Qed.
Lemma lem334362 {A B : Type'} (P : type572 A B) : (term491 A B P) = (term492 A B P).
Proof. exact (@lem18394 (A -> B) P). Qed.
Lemma lem334363 {A B : Type'} (y : B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) : (term493 A B y H lt2 x R) = (term494 A B y H lt2 x R).
Proof. exact (@lem334362 A B (term61 A B y H lt2 x R)). Qed.
Lemma lem334364 {A B : Type'} (y : B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (f : A -> B) : (term495 A B y H lt2 x R f) = (term60 A B y H lt2 x R f).
Proof. exact (eq_refl (term495 A B y H lt2 x R f)). Qed.
Lemma lem334365 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem334366 {A B : Type'} (y : B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (f : A -> B) : (term496 A B y H lt2 x R f) = (term489 A B y H lt2 x R f).
Proof. exact (MK_COMB (@lem334365) (@lem334364 A B y H lt2 x R f)). Qed.
Lemma lem334367 {A B : Type'} (y : B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (f : A -> B) : (term496 A B y H lt2 x R f) = (term488 A B y H lt2 x R f).
Proof. exact (TRANS (@lem334366 A B y H lt2 x R f) (@lem334358 A B y H lt2 x R f)). Qed.
Lemma lem334368 {A B : Type'} (y : B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) : (term497 A B y H lt2 x R) = (term498 A B y H lt2 x R).
Proof. exact (fun_ext (fun f : A -> B => @lem334367 A B y H lt2 x R f)). Qed.
Lemma lem334369 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem334370 {A B : Type'} (y : B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) : (term494 A B y H lt2 x R) = (term499 A B y H lt2 x R).
Proof. exact (MK_COMB (@lem334369 A B) (@lem334368 A B y H lt2 x R)). Qed.
Lemma lem334371 {A B : Type'} (y : B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) : (term493 A B y H lt2 x R) = (term499 A B y H lt2 x R).
Proof. exact (TRANS (@lem334363 A B y H lt2 x R) (@lem334370 A B y H lt2 x R)). Qed.
Lemma lem334372 {A B : Type'} (y : B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) : (term61 A B y H lt2 x R) = (term500 A B y H lt2 x R).
Proof. exact (fun_ext (fun f : A -> B => @lem334361 A B y H lt2 x R f)). Qed.
Lemma lem334373 {A B : Type'} : (@ex (A -> B)) = (@ex (A -> B)).
Proof. exact (eq_refl (@ex (A -> B))). Qed.
Lemma lem334374 {A B : Type'} (y : B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) : (term62 A B y H lt2 x R) = (term501 A B y H lt2 x R).
Proof. exact (MK_COMB (@lem334373 A B) (@lem334372 A B y H lt2 x R)). Qed.
Lemma lem334375 {B : Type'} (y' : B) (y : B) : (term1478 B y' y) = (term1478 B y' y).
Proof. exact (eq_refl (term1478 B y' y)). Qed.
Lemma lem334377 {A B : Type'} (y : B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) : (term1479 A B H lt2 x R y) = (term62 A B y H lt2 x R).
Proof. exact (eq_refl (term1479 A B H lt2 x R y)). Qed.
Lemma lem334378 {A B : Type'} (y' : B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) : (term1479 A B H lt2 x R y') = (term62 A B y' H lt2 x R).
Proof. exact (eq_refl (term1479 A B H lt2 x R y')). Qed.
Lemma lem334379 {A B : Type'} (y' : B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) : (term62 A B y' H lt2 x R) = (term501 A B y' H lt2 x R).
Proof. exact (@lem334374 A B y' H lt2 x R). Qed.
Lemma lem334380 {B : Type'} (P : B -> Prop) : (term1480 B P) = (term1481 B P).
Proof. exact (@lem18393 B P). Qed.
Lemma lem334381 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) : (term1477 A B H lt2 x R) = (term1482 A B H lt2 x R).
Proof. exact (@lem334380 B (term1059 A B H lt2 x R)). Qed.
Lemma lem334382 {A B : Type'} (y' : B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) : (term1479 A B H lt2 x R y') = (term501 A B y' H lt2 x R).
Proof. exact (TRANS (@lem334378 A B y' H lt2 x R) (@lem334379 A B y' H lt2 x R)). Qed.
Lemma lem334383 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem334384 {A B : Type'} (y' : B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) : (term1483 A B H lt2 x R y') = (term1484 A B y' H lt2 x R).
Proof. exact (MK_COMB (@lem334383) (@lem334382 A B y' H lt2 x R)). Qed.
Lemma lem334385 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (y' : B) (y : B) : (term1485 A B H lt2 x R y' y) = (term1486 A B H lt2 x R y' y).
Proof. exact (MK_COMB (@lem334384 A B y' H lt2 x R) (@lem334375 B y' y)). Qed.
Lemma lem334386 {A B : Type'} (y : B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) : (term1479 A B H lt2 x R y) = (term501 A B y H lt2 x R).
Proof. exact (TRANS (@lem334377 A B y H lt2 x R) (@lem334374 A B y H lt2 x R)). Qed.
Lemma lem334387 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem334388 {A B : Type'} (y : B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) : (term1483 A B H lt2 x R y) = (term1484 A B y H lt2 x R).
Proof. exact (MK_COMB (@lem334387) (@lem334386 A B y H lt2 x R)). Qed.
Lemma lem334389 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (y' : B) (y : B) : (term1487 A B H lt2 x R y' y) = (term1488 A B H lt2 x R y' y).
Proof. exact (MK_COMB (@lem334388 A B y H lt2 x R) (@lem334385 A B H lt2 x R y' y)). Qed.
Lemma lem334390 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (y : B) : (term1489 A B H lt2 x R y) = (term1490 A B H lt2 x R y).
Proof. exact (fun_ext (fun y' : B => @lem334389 A B H lt2 x R y' y)). Qed.
Lemma lem334391 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem334392 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (y : B) : (term1491 A B H lt2 x R y) = (term1492 A B H lt2 x R y).
Proof. exact (MK_COMB (@lem334391 B) (@lem334390 A B H lt2 x R y)). Qed.
Lemma lem334393 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) : (term1493 A B H lt2 x R) = (term1494 A B H lt2 x R).
Proof. exact (fun_ext (fun y : B => @lem334392 A B H lt2 x R y)). Qed.
Lemma lem334394 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem334395 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) : (term1495 A B H lt2 x R) = (term1496 A B H lt2 x R).
Proof. exact (MK_COMB (@lem334394 B) (@lem334393 A B H lt2 x R)). Qed.
Lemma lem334396 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem334397 {A B : Type'} (y : B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) : (term1497 A B H lt2 x R y) = (term493 A B y H lt2 x R).
Proof. exact (MK_COMB (@lem334396) (@lem334377 A B y H lt2 x R)). Qed.
Lemma lem334398 {A B : Type'} (y : B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) : (term1497 A B H lt2 x R y) = (term499 A B y H lt2 x R).
Proof. exact (TRANS (@lem334397 A B y H lt2 x R) (@lem334371 A B y H lt2 x R)). Qed.
Lemma lem334399 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) : (term1498 A B H lt2 x R) = (term1499 A B H lt2 x R).
Proof. exact (fun_ext (fun y : B => @lem334398 A B y H lt2 x R)). Qed.
Lemma lem334400 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem334401 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) : (term1500 A B H lt2 x R) = (term1501 A B H lt2 x R).
Proof. exact (MK_COMB (@lem334400 B) (@lem334399 A B H lt2 x R)). Qed.
Lemma lem334402 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem334403 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) : (term1502 A B H lt2 x R) = (term1503 A B H lt2 x R).
Proof. exact (MK_COMB (@lem334402) (@lem334401 A B H lt2 x R)). Qed.
Lemma lem334404 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) : (term1482 A B H lt2 x R) = (term1504 A B H lt2 x R).
Proof. exact (MK_COMB (@lem334403 A B H lt2 x R) (@lem334395 A B H lt2 x R)). Qed.
Lemma lem334405 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) : (term1477 A B H lt2 x R) = (term1504 A B H lt2 x R).
Proof. exact (TRANS (@lem334381 A B H lt2 x R) (@lem334404 A B H lt2 x R)). Qed.
Lemma lem334511 {A : Type'} (P : Prop) (Q : A -> Prop) : (term749 A P Q) = (term748 A P Q).
Proof. exact (EQ_MP (@lem18959 A P Q) (@lem18958 A P Q)). Qed.
Lemma lem334512 {B : Type'} (P : Prop) (Q : B -> Prop) : (term749 B P Q) = (term748 B P Q).
Proof. exact (@lem334511 B P Q). Qed.
Lemma lem334513 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (y : B) : (term1505 A B H lt2 x R y) = (term1506 A B H lt2 x R y).
Proof. exact (@lem334512 B (term501 A B y H lt2 x R) (term1507 A B H lt2 x R y)). Qed.
Lemma lem334514 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (y' : B) (y : B) : (term1508 A B H lt2 x R y y') = (term1486 A B H lt2 x R y' y).
Proof. exact (eq_refl (term1508 A B H lt2 x R y y')). Qed.
Lemma lem334515 {A B : Type'} (y : B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) : (term1484 A B y H lt2 x R) = (term1484 A B y H lt2 x R).
Proof. exact (eq_refl (term1484 A B y H lt2 x R)). Qed.
Lemma lem334516 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (y' : B) (y : B) : (term1509 A B H lt2 x R y y') = (term1488 A B H lt2 x R y' y).
Proof. exact (MK_COMB (@lem334515 A B y H lt2 x R) (@lem334514 A B H lt2 x R y' y)). Qed.
Lemma lem334517 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (y : B) : (term1510 A B H lt2 x R y) = (term1490 A B H lt2 x R y).
Proof. exact (fun_ext (fun y' : B => @lem334516 A B H lt2 x R y' y)). Qed.
Lemma lem334518 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem334519 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (y : B) : (term1505 A B H lt2 x R y) = (term1492 A B H lt2 x R y).
Proof. exact (MK_COMB (@lem334518 B) (@lem334517 A B H lt2 x R y)). Qed.
Lemma lem334520 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem334521 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (y : B) : (term1511 A B H lt2 x R y) = (term1512 A B H lt2 x R y).
Proof. exact (MK_COMB (@lem334520) (@lem334519 A B H lt2 x R y)). Qed.
Lemma lem334522 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (y' : B) (y : B) : (term1508 A B H lt2 x R y y') = (term1486 A B H lt2 x R y' y).
Proof. exact (eq_refl (term1508 A B H lt2 x R y y')). Qed.
Lemma lem334523 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (y : B) : (term1513 A B H lt2 x R y) = (term1507 A B H lt2 x R y).
Proof. exact (fun_ext (fun y' : B => @lem334522 A B H lt2 x R y' y)). Qed.
Lemma lem334524 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem334525 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (y : B) : (term1514 A B H lt2 x R y) = (term1515 A B H lt2 x R y).
Proof. exact (MK_COMB (@lem334524 B) (@lem334523 A B H lt2 x R y)). Qed.
Lemma lem334526 {A B : Type'} (y : B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) : (term1484 A B y H lt2 x R) = (term1484 A B y H lt2 x R).
Proof. exact (eq_refl (term1484 A B y H lt2 x R)). Qed.
Lemma lem334527 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (y : B) : (term1506 A B H lt2 x R y) = (term1516 A B H lt2 x R y).
Proof. exact (MK_COMB (@lem334526 A B y H lt2 x R) (@lem334525 A B H lt2 x R y)). Qed.
Lemma lem334528 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (y : B) : ((term1505 A B H lt2 x R y) = (term1506 A B H lt2 x R y)) = ((term1492 A B H lt2 x R y) = (term1516 A B H lt2 x R y)).
Proof. exact (MK_COMB (@lem334521 A B H lt2 x R y) (@lem334527 A B H lt2 x R y)). Qed.
Lemma lem334529 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (y : B) : (term1492 A B H lt2 x R y) = (term1516 A B H lt2 x R y).
Proof. exact (EQ_MP (@lem334528 A B H lt2 x R y) (@lem334513 A B H lt2 x R y)). Qed.
Lemma lem334770 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) : (term1494 A B H lt2 x R) = (term1517 A B H lt2 x R).
Proof. exact (fun_ext (fun y : B => @lem334529 A B H lt2 x R y)). Qed.
Lemma lem334771 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem334772 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) : (term1496 A B H lt2 x R) = (term1518 A B H lt2 x R).
Proof. exact (MK_COMB (@lem334771 B) (@lem334770 A B H lt2 x R)). Qed.
Lemma lem334821 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) : (term1503 A B H lt2 x R) = (term1503 A B H lt2 x R).
Proof. exact (eq_refl (term1503 A B H lt2 x R)). Qed.
Lemma lem334822 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) : (term1504 A B H lt2 x R) = (term1519 A B H lt2 x R).
Proof. exact (MK_COMB (@lem334821 A B H lt2 x R) (@lem334772 A B H lt2 x R)). Qed.
Lemma lem334824 {A : Type'} (P : Prop) (Q : A -> Prop) : (term560 A P Q) = (term561 A P Q).
Proof. exact (EQ_MP (@lem18911 A P Q) (@lem18910 A P Q)). Qed.
Lemma lem334825 {A : Type'} (P : Prop) (Q : A -> Prop) : (term560 A P Q) = (term561 A P Q).
Proof. exact (@lem334824 A P Q). Qed.
Lemma lem334826 {A B : Type'} (y : B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (f : A -> B) : (term562 A B y H lt2 x R f) = (term563 A B y H lt2 x R f).
Proof. exact (@lem334825 A (term564 A B y H f x) (term293 A B lt2 x R f)). Qed.
Lemma lem334827 {A B : Type'} (lt2 : type1402 A) (x : A) (R : type1413 A B) (f : A -> B) (z : A) : (term305 A B lt2 x R f z) = (term287 A B lt2 x R f z).
Proof. exact (eq_refl (term305 A B lt2 x R f z)). Qed.
Lemma lem334828 {A B : Type'} (lt2 : type1402 A) (x : A) (R : type1413 A B) (f : A -> B) : (term306 A B lt2 x R f) = (term293 A B lt2 x R f).
Proof. exact (fun_ext (fun z : A => @lem334827 A B lt2 x R f z)). Qed.
Lemma lem334829 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem334830 {A B : Type'} (lt2 : type1402 A) (x : A) (R : type1413 A B) (f : A -> B) : (term307 A B lt2 x R f) = (term294 A B lt2 x R f).
Proof. exact (MK_COMB (@lem334829 A) (@lem334828 A B lt2 x R f)). Qed.
Lemma lem334831 {A B : Type'} (y : B) (H : type549 A B) (f : A -> B) (x : A) : (term486 A B y H f x) = (term486 A B y H f x).
Proof. exact (eq_refl (term486 A B y H f x)). Qed.
Lemma lem334832 {A B : Type'} (y : B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (f : A -> B) : (term562 A B y H lt2 x R f) = (term488 A B y H lt2 x R f).
Proof. exact (MK_COMB (@lem334831 A B y H f x) (@lem334830 A B lt2 x R f)). Qed.
Lemma lem334833 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem334834 {A B : Type'} (y : B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (f : A -> B) : (term565 A B y H lt2 x R f) = (term566 A B y H lt2 x R f).
Proof. exact (MK_COMB (@lem334833) (@lem334832 A B y H lt2 x R f)). Qed.
Lemma lem334835 {A B : Type'} (lt2 : type1402 A) (x : A) (R : type1413 A B) (f : A -> B) (z : A) : (term305 A B lt2 x R f z) = (term287 A B lt2 x R f z).
Proof. exact (eq_refl (term305 A B lt2 x R f z)). Qed.
Lemma lem334836 {A B : Type'} (y : B) (H : type549 A B) (f : A -> B) (x : A) : (term486 A B y H f x) = (term486 A B y H f x).
Proof. exact (eq_refl (term486 A B y H f x)). Qed.
Lemma lem334837 {A B : Type'} (y : B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (f : A -> B) (z : A) : (term567 A B y H lt2 x R f z) = (term568 A B y H lt2 x R f z).
Proof. exact (MK_COMB (@lem334836 A B y H f x) (@lem334835 A B lt2 x R f z)). Qed.
Lemma lem334838 {A B : Type'} (y : B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (f : A -> B) : (term569 A B y H lt2 x R f) = (term570 A B y H lt2 x R f).
Proof. exact (fun_ext (fun z : A => @lem334837 A B y H lt2 x R f z)). Qed.
Lemma lem334839 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem334840 {A B : Type'} (y : B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (f : A -> B) : (term563 A B y H lt2 x R f) = (term571 A B y H lt2 x R f).
Proof. exact (MK_COMB (@lem334839 A) (@lem334838 A B y H lt2 x R f)). Qed.
Lemma lem334841 {A B : Type'} (y : B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (f : A -> B) : ((term562 A B y H lt2 x R f) = (term563 A B y H lt2 x R f)) = ((term488 A B y H lt2 x R f) = (term571 A B y H lt2 x R f)).
Proof. exact (MK_COMB (@lem334834 A B y H lt2 x R f) (@lem334840 A B y H lt2 x R f)). Qed.
Lemma lem334842 {A B : Type'} (y : B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (f : A -> B) : (term488 A B y H lt2 x R f) = (term571 A B y H lt2 x R f).
Proof. exact (EQ_MP (@lem334841 A B y H lt2 x R f) (@lem334826 A B y H lt2 x R f)). Qed.
Lemma lem334843 {A B : Type'} (y : B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) : (term498 A B y H lt2 x R) = (term572 A B y H lt2 x R).
Proof. exact (fun_ext (fun f : A -> B => @lem334842 A B y H lt2 x R f)). Qed.
Lemma lem334844 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem334845 {A B : Type'} (y : B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) : (term499 A B y H lt2 x R) = (term573 A B y H lt2 x R).
Proof. exact (MK_COMB (@lem334844 A B) (@lem334843 A B y H lt2 x R)). Qed.
Lemma lem334847 {A B : Type'} (P : type1413 A B) : (term146 A B P) = (term147 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem334848 {A B : Type'} (P : type551 A B) : (term574 A B P) = (term575 A B P).
Proof. exact (@lem334847 (A -> B) A P). Qed.
Lemma lem334849 {A B : Type'} (y : B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) : (term576 A B y H lt2 x R) = (term577 A B y H lt2 x R).
Proof. exact (@lem334848 A B (term578 A B y H lt2 x R)). Qed.
Lemma lem334850 {A B : Type'} (y : B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (f : A -> B) : (term579 A B y H lt2 x R f) = (term570 A B y H lt2 x R f).
Proof. exact (eq_refl (term579 A B y H lt2 x R f)). Qed.
Lemma lem334851 {A : Type'} (z : A) : z = z.
Proof. exact (eq_refl z). Qed.
Lemma lem334852 {A B : Type'} (y : B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (f : A -> B) (z : A) : (term580 A B y H lt2 x R f z) = (term581 A B y H lt2 x R f z).
Proof. exact (MK_COMB (@lem334850 A B y H lt2 x R f) (@lem334851 A z)). Qed.
Lemma lem334853 {A B : Type'} (y : B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (f : A -> B) (z : A) : (term581 A B y H lt2 x R f z) = (term568 A B y H lt2 x R f z).
Proof. exact (eq_refl (term581 A B y H lt2 x R f z)). Qed.
Lemma lem334854 {A B : Type'} (y : B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (f : A -> B) (z : A) : (term580 A B y H lt2 x R f z) = (term568 A B y H lt2 x R f z).
Proof. exact (TRANS (@lem334852 A B y H lt2 x R f z) (@lem334853 A B y H lt2 x R f z)). Qed.
Lemma lem334855 {A B : Type'} (y : B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (f : A -> B) : (term582 A B y H lt2 x R f) = (term570 A B y H lt2 x R f).
Proof. exact (fun_ext (fun z : A => @lem334854 A B y H lt2 x R f z)). Qed.
Lemma lem334856 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem334857 {A B : Type'} (y : B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (f : A -> B) : (term583 A B y H lt2 x R f) = (term571 A B y H lt2 x R f).
Proof. exact (MK_COMB (@lem334856 A) (@lem334855 A B y H lt2 x R f)). Qed.
Lemma lem334858 {A B : Type'} (y : B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) : (term584 A B y H lt2 x R) = (term572 A B y H lt2 x R).
Proof. exact (fun_ext (fun f : A -> B => @lem334857 A B y H lt2 x R f)). Qed.
Lemma lem334859 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem334860 {A B : Type'} (y : B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) : (term576 A B y H lt2 x R) = (term573 A B y H lt2 x R).
Proof. exact (MK_COMB (@lem334859 A B) (@lem334858 A B y H lt2 x R)). Qed.
Lemma lem334861 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem334862 {A B : Type'} (y : B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) : (term585 A B y H lt2 x R) = (term586 A B y H lt2 x R).
Proof. exact (MK_COMB (@lem334861) (@lem334860 A B y H lt2 x R)). Qed.
Lemma lem334863 {A B : Type'} (y : B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (f : A -> B) : (term579 A B y H lt2 x R f) = (term570 A B y H lt2 x R f).
Proof. exact (eq_refl (term579 A B y H lt2 x R f)). Qed.
Lemma lem334864 {A B : Type'} (z : type569 A B) (f : A -> B) : (z f) = (z f).
Proof. exact (eq_refl (z f)). Qed.
Lemma lem334865 {A B : Type'} (y : B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (z : type569 A B) (f : A -> B) : (term587 A B y H lt2 x R z f) = (term588 A B y H lt2 x R z f).
Proof. exact (MK_COMB (@lem334863 A B y H lt2 x R f) (@lem334864 A B z f)). Qed.
Lemma lem334866 {A B : Type'} (y : B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (z : type569 A B) (f : A -> B) : (term588 A B y H lt2 x R z f) = (term589 A B y H lt2 x R z f).
Proof. exact (eq_refl (term588 A B y H lt2 x R z f)). Qed.
Lemma lem334867 {A B : Type'} (y : B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (z : type569 A B) (f : A -> B) : (term587 A B y H lt2 x R z f) = (term589 A B y H lt2 x R z f).
Proof. exact (TRANS (@lem334865 A B y H lt2 x R z f) (@lem334866 A B y H lt2 x R z f)). Qed.
Lemma lem334868 {A B : Type'} (y : B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (z : type569 A B) : (term590 A B y H lt2 x R z) = (term591 A B y H lt2 x R z).
Proof. exact (fun_ext (fun f : A -> B => @lem334867 A B y H lt2 x R z f)). Qed.
Lemma lem334869 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem334870 {A B : Type'} (y : B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (z : type569 A B) : (term592 A B y H lt2 x R z) = (term593 A B y H lt2 x R z).
Proof. exact (MK_COMB (@lem334869 A B) (@lem334868 A B y H lt2 x R z)). Qed.
Lemma lem334871 {A B : Type'} (y : B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) : (term594 A B y H lt2 x R) = (term595 A B y H lt2 x R).
Proof. exact (fun_ext (fun z : type569 A B => @lem334870 A B y H lt2 x R z)). Qed.
Lemma lem334872 {A B : Type'} : (@ex ((A -> B) -> A)) = (@ex ((A -> B) -> A)).
Proof. exact (eq_refl (@ex ((A -> B) -> A))). Qed.
Lemma lem334873 {A B : Type'} (y : B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) : (term577 A B y H lt2 x R) = (term596 A B y H lt2 x R).
Proof. exact (MK_COMB (@lem334872 A B) (@lem334871 A B y H lt2 x R)). Qed.
Lemma lem334874 {A B : Type'} (y : B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) : ((term576 A B y H lt2 x R) = (term577 A B y H lt2 x R)) = ((term573 A B y H lt2 x R) = (term596 A B y H lt2 x R)).
Proof. exact (MK_COMB (@lem334862 A B y H lt2 x R) (@lem334873 A B y H lt2 x R)). Qed.
Lemma lem334875 {A B : Type'} (y : B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) : (term573 A B y H lt2 x R) = (term596 A B y H lt2 x R).
Proof. exact (EQ_MP (@lem334874 A B y H lt2 x R) (@lem334849 A B y H lt2 x R)). Qed.
Lemma lem334876 {A B : Type'} (y : B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) : (term499 A B y H lt2 x R) = (term596 A B y H lt2 x R).
Proof. exact (TRANS (@lem334845 A B y H lt2 x R) (@lem334875 A B y H lt2 x R)). Qed.
Lemma lem334877 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) : (term1499 A B H lt2 x R) = (term1520 A B H lt2 x R).
Proof. exact (fun_ext (fun y : B => @lem334876 A B y H lt2 x R)). Qed.
Lemma lem334878 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem334879 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) : (term1501 A B H lt2 x R) = (term1521 A B H lt2 x R).
Proof. exact (MK_COMB (@lem334878 B) (@lem334877 A B H lt2 x R)). Qed.
Lemma lem334881 {A B : Type'} (P : type1413 A B) : (term146 A B P) = (term147 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem334882 {A B : Type'} (P : type1436 A B) : (term614 A B P) = (term615 A B P).
Proof. exact (@lem334881 B (type569 A B) P). Qed.
Lemma lem334883 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) : (term1522 A B H lt2 x R) = (term1523 A B H lt2 x R).
Proof. exact (@lem334882 A B (term1524 A B H lt2 x R)). Qed.
Lemma lem334884 {A B : Type'} (y : B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) : (term1525 A B H lt2 x R y) = (term595 A B y H lt2 x R).
Proof. exact (eq_refl (term1525 A B H lt2 x R y)). Qed.
Lemma lem334885 {A B : Type'} (z : type569 A B) : z = z.
Proof. exact (eq_refl z). Qed.
Lemma lem334886 {A B : Type'} (y : B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (z : type569 A B) : (term1526 A B H lt2 x R y z) = (term602 A B y H lt2 x R z).
Proof. exact (MK_COMB (@lem334884 A B y H lt2 x R) (@lem334885 A B z)). Qed.
Lemma lem334887 {A B : Type'} (y : B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (z : type569 A B) : (term602 A B y H lt2 x R z) = (term593 A B y H lt2 x R z).
Proof. exact (eq_refl (term602 A B y H lt2 x R z)). Qed.
Lemma lem334888 {A B : Type'} (y : B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (z : type569 A B) : (term1526 A B H lt2 x R y z) = (term593 A B y H lt2 x R z).
Proof. exact (TRANS (@lem334886 A B y H lt2 x R z) (@lem334887 A B y H lt2 x R z)). Qed.
Lemma lem334889 {A B : Type'} (y : B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) : (term1527 A B H lt2 x R y) = (term595 A B y H lt2 x R).
Proof. exact (fun_ext (fun z : type569 A B => @lem334888 A B y H lt2 x R z)). Qed.
Lemma lem334890 {A B : Type'} : (@ex ((A -> B) -> A)) = (@ex ((A -> B) -> A)).
Proof. exact (eq_refl (@ex ((A -> B) -> A))). Qed.
Lemma lem334891 {A B : Type'} (y : B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) : (term1528 A B H lt2 x R y) = (term596 A B y H lt2 x R).
Proof. exact (MK_COMB (@lem334890 A B) (@lem334889 A B y H lt2 x R)). Qed.
Lemma lem334892 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) : (term1529 A B H lt2 x R) = (term1520 A B H lt2 x R).
Proof. exact (fun_ext (fun y : B => @lem334891 A B y H lt2 x R)). Qed.
Lemma lem334893 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem334894 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) : (term1522 A B H lt2 x R) = (term1521 A B H lt2 x R).
Proof. exact (MK_COMB (@lem334893 B) (@lem334892 A B H lt2 x R)). Qed.
Lemma lem334895 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem334896 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) : (term1530 A B H lt2 x R) = (term1531 A B H lt2 x R).
Proof. exact (MK_COMB (@lem334895) (@lem334894 A B H lt2 x R)). Qed.
Lemma lem334897 {A B : Type'} (y : B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) : (term1525 A B H lt2 x R y) = (term595 A B y H lt2 x R).
Proof. exact (eq_refl (term1525 A B H lt2 x R y)). Qed.
Lemma lem334898 {A B : Type'} (z : type1445 A B) (y : B) : (z y) = (z y).
Proof. exact (eq_refl (z y)). Qed.
Lemma lem334899 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (z : type1445 A B) (y : B) : (term1532 A B H lt2 x R z y) = (term1533 A B H lt2 x R z y).
Proof. exact (MK_COMB (@lem334897 A B y H lt2 x R) (@lem334898 A B z y)). Qed.
Lemma lem334900 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (z : type1445 A B) (y : B) : (term1533 A B H lt2 x R z y) = (term1534 A B H lt2 x R z y).
Proof. exact (eq_refl (term1533 A B H lt2 x R z y)). Qed.
Lemma lem334901 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (z : type1445 A B) (y : B) : (term1532 A B H lt2 x R z y) = (term1534 A B H lt2 x R z y).
Proof. exact (TRANS (@lem334899 A B H lt2 x R z y) (@lem334900 A B H lt2 x R z y)). Qed.
Lemma lem334902 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (z : type1445 A B) : (term1535 A B H lt2 x R z) = (term1536 A B H lt2 x R z).
Proof. exact (fun_ext (fun y : B => @lem334901 A B H lt2 x R z y)). Qed.
Lemma lem334903 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem334904 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (z : type1445 A B) : (term1537 A B H lt2 x R z) = (term1538 A B H lt2 x R z).
Proof. exact (MK_COMB (@lem334903 B) (@lem334902 A B H lt2 x R z)). Qed.
Lemma lem334905 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) : (term1539 A B H lt2 x R) = (term1540 A B H lt2 x R).
Proof. exact (fun_ext (fun z : type1445 A B => @lem334904 A B H lt2 x R z)). Qed.
Lemma lem334906 {A B : Type'} : (@ex (B -> (A -> B) -> A)) = (@ex (B -> (A -> B) -> A)).
Proof. exact (eq_refl (@ex (B -> (A -> B) -> A))). Qed.
Lemma lem334907 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) : (term1523 A B H lt2 x R) = (term1541 A B H lt2 x R).
Proof. exact (MK_COMB (@lem334906 A B) (@lem334905 A B H lt2 x R)). Qed.
Lemma lem334908 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) : ((term1522 A B H lt2 x R) = (term1523 A B H lt2 x R)) = ((term1521 A B H lt2 x R) = (term1541 A B H lt2 x R)).
Proof. exact (MK_COMB (@lem334896 A B H lt2 x R) (@lem334907 A B H lt2 x R)). Qed.
Lemma lem334909 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) : (term1521 A B H lt2 x R) = (term1541 A B H lt2 x R).
Proof. exact (EQ_MP (@lem334908 A B H lt2 x R) (@lem334883 A B H lt2 x R)). Qed.
Lemma lem334910 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) : (term1501 A B H lt2 x R) = (term1541 A B H lt2 x R).
Proof. exact (TRANS (@lem334879 A B H lt2 x R) (@lem334909 A B H lt2 x R)). Qed.
Lemma lem334911 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem334912 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) : (term1503 A B H lt2 x R) = (term1542 A B H lt2 x R).
Proof. exact (MK_COMB (@lem334911) (@lem334910 A B H lt2 x R)). Qed.
Lemma lem334914 {A : Type'} (P : A -> Prop) (Q : Prop) : (term729 A P Q) = (term730 A P Q).
Proof. exact (EQ_MP (@lem18923 A P Q) (@lem18922 A P Q)). Qed.
Lemma lem334915 {A B : Type'} (P : type572 A B) (Q : Prop) : (term866 A B P Q) = (term867 A B P Q).
Proof. exact (@lem334914 (A -> B) P Q). Qed.
Lemma lem334916 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (y' : B) (y : B) : (term1543 A B H lt2 x R y' y) = (term1544 A B H lt2 x R y' y).
Proof. exact (@lem334915 A B (term500 A B y' H lt2 x R) (term1478 B y' y)). Qed.
Lemma lem334917 {A B : Type'} (y' : B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (f : A -> B) : (term668 A B y' H lt2 x R f) = (term490 A B y' H lt2 x R f).
Proof. exact (eq_refl (term668 A B y' H lt2 x R f)). Qed.
Lemma lem334918 {A B : Type'} (y' : B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) : (term669 A B y' H lt2 x R) = (term500 A B y' H lt2 x R).
Proof. exact (fun_ext (fun f : A -> B => @lem334917 A B y' H lt2 x R f)). Qed.
Lemma lem334919 {A B : Type'} : (@ex (A -> B)) = (@ex (A -> B)).
Proof. exact (eq_refl (@ex (A -> B))). Qed.
Lemma lem334920 {A B : Type'} (y' : B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) : (term670 A B y' H lt2 x R) = (term501 A B y' H lt2 x R).
Proof. exact (MK_COMB (@lem334919 A B) (@lem334918 A B y' H lt2 x R)). Qed.
Lemma lem334921 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem334922 {A B : Type'} (y' : B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) : (term1545 A B y' H lt2 x R) = (term1484 A B y' H lt2 x R).
Proof. exact (MK_COMB (@lem334921) (@lem334920 A B y' H lt2 x R)). Qed.
Lemma lem334923 {B : Type'} (y' : B) (y : B) : (term1478 B y' y) = (term1478 B y' y).
Proof. exact (eq_refl (term1478 B y' y)). Qed.
Lemma lem334924 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (y' : B) (y : B) : (term1543 A B H lt2 x R y' y) = (term1486 A B H lt2 x R y' y).
Proof. exact (MK_COMB (@lem334922 A B y' H lt2 x R) (@lem334923 B y' y)). Qed.
Lemma lem334925 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem334926 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (y' : B) (y : B) : (term1546 A B H lt2 x R y' y) = (term1547 A B H lt2 x R y' y).
Proof. exact (MK_COMB (@lem334925) (@lem334924 A B H lt2 x R y' y)). Qed.
Lemma lem334927 {A B : Type'} (y' : B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (f : A -> B) : (term668 A B y' H lt2 x R f) = (term490 A B y' H lt2 x R f).
Proof. exact (eq_refl (term668 A B y' H lt2 x R f)). Qed.
Lemma lem334928 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem334929 {A B : Type'} (y' : B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (f : A -> B) : (term1548 A B y' H lt2 x R f) = (term1549 A B y' H lt2 x R f).
Proof. exact (MK_COMB (@lem334928) (@lem334927 A B y' H lt2 x R f)). Qed.
Lemma lem334930 {B : Type'} (y' : B) (y : B) : (term1478 B y' y) = (term1478 B y' y).
Proof. exact (eq_refl (term1478 B y' y)). Qed.
Lemma lem334931 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (f : A -> B) (y' : B) (y : B) : (term1550 A B H lt2 x R f y' y) = (term1551 A B H lt2 x R f y' y).
Proof. exact (MK_COMB (@lem334929 A B y' H lt2 x R f) (@lem334930 B y' y)). Qed.
Lemma lem334932 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (y' : B) (y : B) : (term1552 A B H lt2 x R y' y) = (term1553 A B H lt2 x R y' y).
Proof. exact (fun_ext (fun f : A -> B => @lem334931 A B H lt2 x R f y' y)). Qed.
Lemma lem334933 {A B : Type'} : (@ex (A -> B)) = (@ex (A -> B)).
Proof. exact (eq_refl (@ex (A -> B))). Qed.
Lemma lem334934 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (y' : B) (y : B) : (term1544 A B H lt2 x R y' y) = (term1554 A B H lt2 x R y' y).
Proof. exact (MK_COMB (@lem334933 A B) (@lem334932 A B H lt2 x R y' y)). Qed.
Lemma lem334935 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (y' : B) (y : B) : ((term1543 A B H lt2 x R y' y) = (term1544 A B H lt2 x R y' y)) = ((term1486 A B H lt2 x R y' y) = (term1554 A B H lt2 x R y' y)).
Proof. exact (MK_COMB (@lem334926 A B H lt2 x R y' y) (@lem334934 A B H lt2 x R y' y)). Qed.
Lemma lem334936 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (y' : B) (y : B) : (term1486 A B H lt2 x R y' y) = (term1554 A B H lt2 x R y' y).
Proof. exact (EQ_MP (@lem334935 A B H lt2 x R y' y) (@lem334916 A B H lt2 x R y' y)). Qed.
Lemma lem334937 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (y : B) : (term1507 A B H lt2 x R y) = (term1555 A B H lt2 x R y).
Proof. exact (fun_ext (fun y' : B => @lem334936 A B H lt2 x R y' y)). Qed.
Lemma lem334938 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem334939 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (y : B) : (term1515 A B H lt2 x R y) = (term1556 A B H lt2 x R y).
Proof. exact (MK_COMB (@lem334938 B) (@lem334937 A B H lt2 x R y)). Qed.
Lemma lem334940 {A B : Type'} (y : B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) : (term1484 A B y H lt2 x R) = (term1484 A B y H lt2 x R).
Proof. exact (eq_refl (term1484 A B y H lt2 x R)). Qed.
Lemma lem334941 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (y : B) : (term1516 A B H lt2 x R y) = (term1557 A B H lt2 x R y).
Proof. exact (MK_COMB (@lem334940 A B y H lt2 x R) (@lem334939 A B H lt2 x R y)). Qed.
Lemma lem334943 {A : Type'} (P : A -> Prop) (Q : Prop) : (term729 A P Q) = (term730 A P Q).
Proof. exact (EQ_MP (@lem18923 A P Q) (@lem18922 A P Q)). Qed.
Lemma lem334944 {A B : Type'} (P : type572 A B) (Q : Prop) : (term866 A B P Q) = (term867 A B P Q).
Proof. exact (@lem334943 (A -> B) P Q). Qed.
Lemma lem334945 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (y : B) : (term1558 A B H lt2 x R y) = (term1559 A B H lt2 x R y).
Proof. exact (@lem334944 A B (term500 A B y H lt2 x R) (term1556 A B H lt2 x R y)). Qed.
Lemma lem334946 {A B : Type'} (y : B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (f : A -> B) : (term668 A B y H lt2 x R f) = (term490 A B y H lt2 x R f).
Proof. exact (eq_refl (term668 A B y H lt2 x R f)). Qed.
Lemma lem334947 {A B : Type'} (y : B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) : (term669 A B y H lt2 x R) = (term500 A B y H lt2 x R).
Proof. exact (fun_ext (fun f : A -> B => @lem334946 A B y H lt2 x R f)). Qed.
Lemma lem334948 {A B : Type'} : (@ex (A -> B)) = (@ex (A -> B)).
Proof. exact (eq_refl (@ex (A -> B))). Qed.
Lemma lem334949 {A B : Type'} (y : B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) : (term670 A B y H lt2 x R) = (term501 A B y H lt2 x R).
Proof. exact (MK_COMB (@lem334948 A B) (@lem334947 A B y H lt2 x R)). Qed.
Lemma lem334950 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem334951 {A B : Type'} (y : B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) : (term1545 A B y H lt2 x R) = (term1484 A B y H lt2 x R).
Proof. exact (MK_COMB (@lem334950) (@lem334949 A B y H lt2 x R)). Qed.
Lemma lem334952 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (y : B) : (term1556 A B H lt2 x R y) = (term1556 A B H lt2 x R y).
Proof. exact (eq_refl (term1556 A B H lt2 x R y)). Qed.
Lemma lem334953 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (y : B) : (term1558 A B H lt2 x R y) = (term1557 A B H lt2 x R y).
Proof. exact (MK_COMB (@lem334951 A B y H lt2 x R) (@lem334952 A B H lt2 x R y)). Qed.
Lemma lem334954 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem334955 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (y : B) : (term1560 A B H lt2 x R y) = (term1561 A B H lt2 x R y).
Proof. exact (MK_COMB (@lem334954) (@lem334953 A B H lt2 x R y)). Qed.
Lemma lem334956 {A B : Type'} (y : B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (f : A -> B) : (term668 A B y H lt2 x R f) = (term490 A B y H lt2 x R f).
Proof. exact (eq_refl (term668 A B y H lt2 x R f)). Qed.
Lemma lem334957 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem334958 {A B : Type'} (y : B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (f : A -> B) : (term1548 A B y H lt2 x R f) = (term1549 A B y H lt2 x R f).
Proof. exact (MK_COMB (@lem334957) (@lem334956 A B y H lt2 x R f)). Qed.
Lemma lem334959 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (y : B) : (term1556 A B H lt2 x R y) = (term1556 A B H lt2 x R y).
Proof. exact (eq_refl (term1556 A B H lt2 x R y)). Qed.
Lemma lem334960 {A B : Type'} (f : A -> B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (y : B) : (term1562 A B f H lt2 x R y) = (term1563 A B f H lt2 x R y).
Proof. exact (MK_COMB (@lem334958 A B y H lt2 x R f) (@lem334959 A B H lt2 x R y)). Qed.
Lemma lem334961 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (y : B) : (term1564 A B H lt2 x R y) = (term1565 A B H lt2 x R y).
Proof. exact (fun_ext (fun f : A -> B => @lem334960 A B f H lt2 x R y)). Qed.
Lemma lem334962 {A B : Type'} : (@ex (A -> B)) = (@ex (A -> B)).
Proof. exact (eq_refl (@ex (A -> B))). Qed.
Lemma lem334963 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (y : B) : (term1559 A B H lt2 x R y) = (term1566 A B H lt2 x R y).
Proof. exact (MK_COMB (@lem334962 A B) (@lem334961 A B H lt2 x R y)). Qed.
Lemma lem334964 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (y : B) : ((term1558 A B H lt2 x R y) = (term1559 A B H lt2 x R y)) = ((term1557 A B H lt2 x R y) = (term1566 A B H lt2 x R y)).
Proof. exact (MK_COMB (@lem334955 A B H lt2 x R y) (@lem334963 A B H lt2 x R y)). Qed.
Lemma lem334965 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (y : B) : (term1557 A B H lt2 x R y) = (term1566 A B H lt2 x R y).
Proof. exact (EQ_MP (@lem334964 A B H lt2 x R y) (@lem334945 A B H lt2 x R y)). Qed.
Lemma lem334967 {A : Type'} (P : Prop) (Q : A -> Prop) : (term748 A P Q) = (term749 A P Q).
Proof. exact (EQ_MP (@lem18929 A P Q) (@lem18928 A P Q)). Qed.
Lemma lem334968 {B : Type'} (P : Prop) (Q : B -> Prop) : (term748 B P Q) = (term749 B P Q).
Proof. exact (@lem334967 B P Q). Qed.
Lemma lem334969 {A B : Type'} (f : A -> B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (y : B) : (term1567 A B f H lt2 x R y) = (term1568 A B f H lt2 x R y).
Proof. exact (@lem334968 B (term490 A B y H lt2 x R f) (term1555 A B H lt2 x R y)). Qed.
Lemma lem334970 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (y' : B) (y : B) : (term1569 A B H lt2 x R y y') = (term1554 A B H lt2 x R y' y).
Proof. exact (eq_refl (term1569 A B H lt2 x R y y')). Qed.
Lemma lem334971 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (y : B) : (term1570 A B H lt2 x R y) = (term1555 A B H lt2 x R y).
Proof. exact (fun_ext (fun y' : B => @lem334970 A B H lt2 x R y' y)). Qed.
Lemma lem334972 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem334973 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (y : B) : (term1571 A B H lt2 x R y) = (term1556 A B H lt2 x R y).
Proof. exact (MK_COMB (@lem334972 B) (@lem334971 A B H lt2 x R y)). Qed.
Lemma lem334974 {A B : Type'} (y : B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (f : A -> B) : (term1549 A B y H lt2 x R f) = (term1549 A B y H lt2 x R f).
Proof. exact (eq_refl (term1549 A B y H lt2 x R f)). Qed.
Lemma lem334975 {A B : Type'} (f : A -> B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (y : B) : (term1567 A B f H lt2 x R y) = (term1563 A B f H lt2 x R y).
Proof. exact (MK_COMB (@lem334974 A B y H lt2 x R f) (@lem334973 A B H lt2 x R y)). Qed.
Lemma lem334976 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem334977 {A B : Type'} (f : A -> B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (y : B) : (term1572 A B f H lt2 x R y) = (term1573 A B f H lt2 x R y).
Proof. exact (MK_COMB (@lem334976) (@lem334975 A B f H lt2 x R y)). Qed.
Lemma lem334978 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (y' : B) (y : B) : (term1569 A B H lt2 x R y y') = (term1554 A B H lt2 x R y' y).
Proof. exact (eq_refl (term1569 A B H lt2 x R y y')). Qed.
Lemma lem334979 {A B : Type'} (y : B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (f : A -> B) : (term1549 A B y H lt2 x R f) = (term1549 A B y H lt2 x R f).
Proof. exact (eq_refl (term1549 A B y H lt2 x R f)). Qed.
Lemma lem334980 {A B : Type'} (f : A -> B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (y' : B) (y : B) : (term1574 A B f H lt2 x R y y') = (term1575 A B f H lt2 x R y' y).
Proof. exact (MK_COMB (@lem334979 A B y H lt2 x R f) (@lem334978 A B H lt2 x R y' y)). Qed.
Lemma lem334981 {A B : Type'} (f : A -> B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (y : B) : (term1576 A B f H lt2 x R y) = (term1577 A B f H lt2 x R y).
Proof. exact (fun_ext (fun y' : B => @lem334980 A B f H lt2 x R y' y)). Qed.
Lemma lem334982 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem334983 {A B : Type'} (f : A -> B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (y : B) : (term1568 A B f H lt2 x R y) = (term1578 A B f H lt2 x R y).
Proof. exact (MK_COMB (@lem334982 B) (@lem334981 A B f H lt2 x R y)). Qed.
Lemma lem334984 {A B : Type'} (f : A -> B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (y : B) : ((term1567 A B f H lt2 x R y) = (term1568 A B f H lt2 x R y)) = ((term1563 A B f H lt2 x R y) = (term1578 A B f H lt2 x R y)).
Proof. exact (MK_COMB (@lem334977 A B f H lt2 x R y) (@lem334983 A B f H lt2 x R y)). Qed.
Lemma lem334985 {A B : Type'} (f : A -> B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (y : B) : (term1563 A B f H lt2 x R y) = (term1578 A B f H lt2 x R y).
Proof. exact (EQ_MP (@lem334984 A B f H lt2 x R y) (@lem334969 A B f H lt2 x R y)). Qed.
Lemma lem334987 {A : Type'} (P : Prop) (Q : A -> Prop) : (term748 A P Q) = (term749 A P Q).
Proof. exact (EQ_MP (@lem18929 A P Q) (@lem18928 A P Q)). Qed.
Lemma lem334988 {A B : Type'} (P : Prop) (Q : type572 A B) : (term1579 A B P Q) = (term1580 A B P Q).
Proof. exact (@lem334987 (A -> B) P Q). Qed.
Lemma lem334989 {A B : Type'} (f : A -> B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (y' : B) (y : B) : (term1581 A B f H lt2 x R y' y) = (term1582 A B f H lt2 x R y' y).
Proof. exact (@lem334988 A B (term490 A B y H lt2 x R f) (term1553 A B H lt2 x R y' y)). Qed.
Lemma lem334990 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (f : A -> B) (y' : B) (y : B) : (term1583 A B H lt2 x R y' y f) = (term1551 A B H lt2 x R f y' y).
Proof. exact (eq_refl (term1583 A B H lt2 x R y' y f)). Qed.
Lemma lem334991 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (y' : B) (y : B) : (term1584 A B H lt2 x R y' y) = (term1553 A B H lt2 x R y' y).
Proof. exact (fun_ext (fun f : A -> B => @lem334990 A B H lt2 x R f y' y)). Qed.
Lemma lem334992 {A B : Type'} : (@ex (A -> B)) = (@ex (A -> B)).
Proof. exact (eq_refl (@ex (A -> B))). Qed.
Lemma lem334993 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (y' : B) (y : B) : (term1585 A B H lt2 x R y' y) = (term1554 A B H lt2 x R y' y).
Proof. exact (MK_COMB (@lem334992 A B) (@lem334991 A B H lt2 x R y' y)). Qed.
Lemma lem334994 {A B : Type'} (y : B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (f : A -> B) : (term1549 A B y H lt2 x R f) = (term1549 A B y H lt2 x R f).
Proof. exact (eq_refl (term1549 A B y H lt2 x R f)). Qed.
Lemma lem334995 {A B : Type'} (f : A -> B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (y' : B) (y : B) : (term1581 A B f H lt2 x R y' y) = (term1575 A B f H lt2 x R y' y).
Proof. exact (MK_COMB (@lem334994 A B y H lt2 x R f) (@lem334993 A B H lt2 x R y' y)). Qed.
Lemma lem334996 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem334997 {A B : Type'} (f : A -> B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (y' : B) (y : B) : (term1586 A B f H lt2 x R y' y) = (term1587 A B f H lt2 x R y' y).
Proof. exact (MK_COMB (@lem334996) (@lem334995 A B f H lt2 x R y' y)). Qed.
Lemma lem334998 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (f' : A -> B) (y' : B) (y : B) : (term1583 A B H lt2 x R y' y f') = (term1551 A B H lt2 x R f' y' y).
Proof. exact (eq_refl (term1583 A B H lt2 x R y' y f')). Qed.
Lemma lem334999 {A B : Type'} (y : B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (f : A -> B) : (term1549 A B y H lt2 x R f) = (term1549 A B y H lt2 x R f).
Proof. exact (eq_refl (term1549 A B y H lt2 x R f)). Qed.
Lemma lem335000 {A B : Type'} (f : A -> B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (f' : A -> B) (y' : B) (y : B) : (term1588 A B f H lt2 x R y' y f') = (term1589 A B f H lt2 x R f' y' y).
Proof. exact (MK_COMB (@lem334999 A B y H lt2 x R f) (@lem334998 A B H lt2 x R f' y' y)). Qed.
Lemma lem335001 {A B : Type'} (f : A -> B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (y' : B) (y : B) : (term1590 A B f H lt2 x R y' y) = (term1591 A B f H lt2 x R y' y).
Proof. exact (fun_ext (fun f' : A -> B => @lem335000 A B f H lt2 x R f' y' y)). Qed.
Lemma lem335002 {A B : Type'} : (@ex (A -> B)) = (@ex (A -> B)).
Proof. exact (eq_refl (@ex (A -> B))). Qed.
Lemma lem335003 {A B : Type'} (f : A -> B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (y' : B) (y : B) : (term1582 A B f H lt2 x R y' y) = (term1592 A B f H lt2 x R y' y).
Proof. exact (MK_COMB (@lem335002 A B) (@lem335001 A B f H lt2 x R y' y)). Qed.
Lemma lem335004 {A B : Type'} (f : A -> B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (y' : B) (y : B) : ((term1581 A B f H lt2 x R y' y) = (term1582 A B f H lt2 x R y' y)) = ((term1575 A B f H lt2 x R y' y) = (term1592 A B f H lt2 x R y' y)).
Proof. exact (MK_COMB (@lem334997 A B f H lt2 x R y' y) (@lem335003 A B f H lt2 x R y' y)). Qed.
Lemma lem335005 {A B : Type'} (f : A -> B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (y' : B) (y : B) : (term1575 A B f H lt2 x R y' y) = (term1592 A B f H lt2 x R y' y).
Proof. exact (EQ_MP (@lem335004 A B f H lt2 x R y' y) (@lem334989 A B f H lt2 x R y' y)). Qed.
Lemma lem335006 {A B : Type'} (f : A -> B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (y : B) : (term1577 A B f H lt2 x R y) = (term1593 A B f H lt2 x R y).
Proof. exact (fun_ext (fun y' : B => @lem335005 A B f H lt2 x R y' y)). Qed.
Lemma lem335007 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem335008 {A B : Type'} (f : A -> B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (y : B) : (term1578 A B f H lt2 x R y) = (term1594 A B f H lt2 x R y).
Proof. exact (MK_COMB (@lem335007 B) (@lem335006 A B f H lt2 x R y)). Qed.
Lemma lem335009 {A B : Type'} (f : A -> B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (y : B) : (term1563 A B f H lt2 x R y) = (term1594 A B f H lt2 x R y).
Proof. exact (TRANS (@lem334985 A B f H lt2 x R y) (@lem335008 A B f H lt2 x R y)). Qed.
Lemma lem335010 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (y : B) : (term1565 A B H lt2 x R y) = (term1595 A B H lt2 x R y).
Proof. exact (fun_ext (fun f : A -> B => @lem335009 A B f H lt2 x R y)). Qed.
Lemma lem335011 {A B : Type'} : (@ex (A -> B)) = (@ex (A -> B)).
Proof. exact (eq_refl (@ex (A -> B))). Qed.
Lemma lem335012 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (y : B) : (term1566 A B H lt2 x R y) = (term1596 A B H lt2 x R y).
Proof. exact (MK_COMB (@lem335011 A B) (@lem335010 A B H lt2 x R y)). Qed.
Lemma lem335013 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (y : B) : (term1557 A B H lt2 x R y) = (term1596 A B H lt2 x R y).
Proof. exact (TRANS (@lem334965 A B H lt2 x R y) (@lem335012 A B H lt2 x R y)). Qed.
Lemma lem335014 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (y : B) : (term1516 A B H lt2 x R y) = (term1596 A B H lt2 x R y).
Proof. exact (TRANS (@lem334941 A B H lt2 x R y) (@lem335013 A B H lt2 x R y)). Qed.
Lemma lem335015 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) : (term1517 A B H lt2 x R) = (term1597 A B H lt2 x R).
Proof. exact (fun_ext (fun y : B => @lem335014 A B H lt2 x R y)). Qed.
Lemma lem335016 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem335017 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) : (term1518 A B H lt2 x R) = (term1598 A B H lt2 x R).
Proof. exact (MK_COMB (@lem335016 B) (@lem335015 A B H lt2 x R)). Qed.
Lemma lem335018 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) : (term1519 A B H lt2 x R) = (term1599 A B H lt2 x R).
Proof. exact (MK_COMB (@lem334912 A B H lt2 x R) (@lem335017 A B H lt2 x R)). Qed.
Lemma lem335022 {A : Type'} (P : A -> Prop) (Q : Prop) : (term127 A P Q) = (term128 A P Q).
Proof. exact (EQ_MP (@lem18905 A P Q) (@lem18904 A P Q)). Qed.
Lemma lem335023 {A B : Type'} (P : type718 A B) (Q : Prop) : (term1600 A B P Q) = (term1601 A B P Q).
Proof. exact (@lem335022 (type1445 A B) P Q). Qed.
Lemma lem335024 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) : (term1602 A B H lt2 x R) = (term1603 A B H lt2 x R).
Proof. exact (@lem335023 A B (term1540 A B H lt2 x R) (term1598 A B H lt2 x R)). Qed.
Lemma lem335025 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (z : type1445 A B) : (term1604 A B H lt2 x R z) = (term1538 A B H lt2 x R z).
Proof. exact (eq_refl (term1604 A B H lt2 x R z)). Qed.
Lemma lem335026 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) : (term1605 A B H lt2 x R) = (term1540 A B H lt2 x R).
Proof. exact (fun_ext (fun z : type1445 A B => @lem335025 A B H lt2 x R z)). Qed.
Lemma lem335027 {A B : Type'} : (@ex (B -> (A -> B) -> A)) = (@ex (B -> (A -> B) -> A)).
Proof. exact (eq_refl (@ex (B -> (A -> B) -> A))). Qed.
Lemma lem335028 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) : (term1606 A B H lt2 x R) = (term1541 A B H lt2 x R).
Proof. exact (MK_COMB (@lem335027 A B) (@lem335026 A B H lt2 x R)). Qed.
Lemma lem335029 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem335030 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) : (term1607 A B H lt2 x R) = (term1542 A B H lt2 x R).
Proof. exact (MK_COMB (@lem335029) (@lem335028 A B H lt2 x R)). Qed.
Lemma lem335031 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) : (term1598 A B H lt2 x R) = (term1598 A B H lt2 x R).
Proof. exact (eq_refl (term1598 A B H lt2 x R)). Qed.
Lemma lem335032 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) : (term1602 A B H lt2 x R) = (term1599 A B H lt2 x R).
Proof. exact (MK_COMB (@lem335030 A B H lt2 x R) (@lem335031 A B H lt2 x R)). Qed.
Lemma lem335033 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem335034 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) : (term1608 A B H lt2 x R) = (term1609 A B H lt2 x R).
Proof. exact (MK_COMB (@lem335033) (@lem335032 A B H lt2 x R)). Qed.
Lemma lem335035 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (z : type1445 A B) : (term1604 A B H lt2 x R z) = (term1538 A B H lt2 x R z).
Proof. exact (eq_refl (term1604 A B H lt2 x R z)). Qed.
Lemma lem335036 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem335037 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (z : type1445 A B) : (term1610 A B H lt2 x R z) = (term1611 A B H lt2 x R z).
Proof. exact (MK_COMB (@lem335036) (@lem335035 A B H lt2 x R z)). Qed.
Lemma lem335038 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) : (term1598 A B H lt2 x R) = (term1598 A B H lt2 x R).
Proof. exact (eq_refl (term1598 A B H lt2 x R)). Qed.
Lemma lem335039 {A B : Type'} (z : type1445 A B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) : (term1612 A B z H lt2 x R) = (term1613 A B z H lt2 x R).
Proof. exact (MK_COMB (@lem335037 A B H lt2 x R z) (@lem335038 A B H lt2 x R)). Qed.
Lemma lem335040 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) : (term1614 A B H lt2 x R) = (term1615 A B H lt2 x R).
Proof. exact (fun_ext (fun z : type1445 A B => @lem335039 A B z H lt2 x R)). Qed.
Lemma lem335041 {A B : Type'} : (@ex (B -> (A -> B) -> A)) = (@ex (B -> (A -> B) -> A)).
Proof. exact (eq_refl (@ex (B -> (A -> B) -> A))). Qed.
Lemma lem335042 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) : (term1603 A B H lt2 x R) = (term1616 A B H lt2 x R).
Proof. exact (MK_COMB (@lem335041 A B) (@lem335040 A B H lt2 x R)). Qed.
Lemma lem335043 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) : ((term1602 A B H lt2 x R) = (term1603 A B H lt2 x R)) = ((term1599 A B H lt2 x R) = (term1616 A B H lt2 x R)).
Proof. exact (MK_COMB (@lem335034 A B H lt2 x R) (@lem335042 A B H lt2 x R)). Qed.
Lemma lem335044 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) : (term1599 A B H lt2 x R) = (term1616 A B H lt2 x R).
Proof. exact (EQ_MP (@lem335043 A B H lt2 x R) (@lem335024 A B H lt2 x R)). Qed.
Lemma lem335046 {A : Type'} (P : Prop) (Q : A -> Prop) : (term560 A P Q) = (term561 A P Q).
Proof. exact (EQ_MP (@lem18911 A P Q) (@lem18910 A P Q)). Qed.
Lemma lem335047 {B : Type'} (P : Prop) (Q : B -> Prop) : (term560 B P Q) = (term561 B P Q).
Proof. exact (@lem335046 B P Q). Qed.
Lemma lem335048 {A B : Type'} (z : type1445 A B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) : (term1617 A B z H lt2 x R) = (term1618 A B z H lt2 x R).
Proof. exact (@lem335047 B (term1538 A B H lt2 x R z) (term1597 A B H lt2 x R)). Qed.
Lemma lem335049 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (y : B) : (term1619 A B H lt2 x R y) = (term1596 A B H lt2 x R y).
Proof. exact (eq_refl (term1619 A B H lt2 x R y)). Qed.
Lemma lem335050 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) : (term1620 A B H lt2 x R) = (term1597 A B H lt2 x R).
Proof. exact (fun_ext (fun y : B => @lem335049 A B H lt2 x R y)). Qed.
Lemma lem335051 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem335052 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) : (term1621 A B H lt2 x R) = (term1598 A B H lt2 x R).
Proof. exact (MK_COMB (@lem335051 B) (@lem335050 A B H lt2 x R)). Qed.
Lemma lem335053 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (z : type1445 A B) : (term1611 A B H lt2 x R z) = (term1611 A B H lt2 x R z).
Proof. exact (eq_refl (term1611 A B H lt2 x R z)). Qed.
Lemma lem335054 {A B : Type'} (z : type1445 A B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) : (term1617 A B z H lt2 x R) = (term1613 A B z H lt2 x R).
Proof. exact (MK_COMB (@lem335053 A B H lt2 x R z) (@lem335052 A B H lt2 x R)). Qed.
Lemma lem335055 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem335056 {A B : Type'} (z : type1445 A B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) : (term1622 A B z H lt2 x R) = (term1623 A B z H lt2 x R).
Proof. exact (MK_COMB (@lem335055) (@lem335054 A B z H lt2 x R)). Qed.
Lemma lem335057 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (y : B) : (term1619 A B H lt2 x R y) = (term1596 A B H lt2 x R y).
Proof. exact (eq_refl (term1619 A B H lt2 x R y)). Qed.
Lemma lem335058 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (z : type1445 A B) : (term1611 A B H lt2 x R z) = (term1611 A B H lt2 x R z).
Proof. exact (eq_refl (term1611 A B H lt2 x R z)). Qed.
Lemma lem335059 {A B : Type'} (z : type1445 A B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (y : B) : (term1624 A B z H lt2 x R y) = (term1625 A B z H lt2 x R y).
Proof. exact (MK_COMB (@lem335058 A B H lt2 x R z) (@lem335057 A B H lt2 x R y)). Qed.
Lemma lem335060 {A B : Type'} (z : type1445 A B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) : (term1626 A B z H lt2 x R) = (term1627 A B z H lt2 x R).
Proof. exact (fun_ext (fun y : B => @lem335059 A B z H lt2 x R y)). Qed.
Lemma lem335061 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem335062 {A B : Type'} (z : type1445 A B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) : (term1618 A B z H lt2 x R) = (term1628 A B z H lt2 x R).
Proof. exact (MK_COMB (@lem335061 B) (@lem335060 A B z H lt2 x R)). Qed.
Lemma lem335063 {A B : Type'} (z : type1445 A B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) : ((term1617 A B z H lt2 x R) = (term1618 A B z H lt2 x R)) = ((term1613 A B z H lt2 x R) = (term1628 A B z H lt2 x R)).
Proof. exact (MK_COMB (@lem335056 A B z H lt2 x R) (@lem335062 A B z H lt2 x R)). Qed.
Lemma lem335064 {A B : Type'} (z : type1445 A B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) : (term1613 A B z H lt2 x R) = (term1628 A B z H lt2 x R).
Proof. exact (EQ_MP (@lem335063 A B z H lt2 x R) (@lem335048 A B z H lt2 x R)). Qed.
Lemma lem335066 {A : Type'} (P : Prop) (Q : A -> Prop) : (term560 A P Q) = (term561 A P Q).
Proof. exact (EQ_MP (@lem18911 A P Q) (@lem18910 A P Q)). Qed.
Lemma lem335067 {A B : Type'} (P : Prop) (Q : type572 A B) : (term663 A B P Q) = (term664 A B P Q).
Proof. exact (@lem335066 (A -> B) P Q). Qed.
Lemma lem335068 {A B : Type'} (z : type1445 A B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (y : B) : (term1629 A B z H lt2 x R y) = (term1630 A B z H lt2 x R y).
Proof. exact (@lem335067 A B (term1538 A B H lt2 x R z) (term1595 A B H lt2 x R y)). Qed.
Lemma lem335069 {A B : Type'} (f : A -> B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (y : B) : (term1631 A B H lt2 x R y f) = (term1594 A B f H lt2 x R y).
Proof. exact (eq_refl (term1631 A B H lt2 x R y f)). Qed.
Lemma lem335070 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (y : B) : (term1632 A B H lt2 x R y) = (term1595 A B H lt2 x R y).
Proof. exact (fun_ext (fun f : A -> B => @lem335069 A B f H lt2 x R y)). Qed.
Lemma lem335071 {A B : Type'} : (@ex (A -> B)) = (@ex (A -> B)).
Proof. exact (eq_refl (@ex (A -> B))). Qed.
Lemma lem335072 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (y : B) : (term1633 A B H lt2 x R y) = (term1596 A B H lt2 x R y).
Proof. exact (MK_COMB (@lem335071 A B) (@lem335070 A B H lt2 x R y)). Qed.
Lemma lem335073 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (z : type1445 A B) : (term1611 A B H lt2 x R z) = (term1611 A B H lt2 x R z).
Proof. exact (eq_refl (term1611 A B H lt2 x R z)). Qed.
Lemma lem335074 {A B : Type'} (z : type1445 A B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (y : B) : (term1629 A B z H lt2 x R y) = (term1625 A B z H lt2 x R y).
Proof. exact (MK_COMB (@lem335073 A B H lt2 x R z) (@lem335072 A B H lt2 x R y)). Qed.
Lemma lem335075 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem335076 {A B : Type'} (z : type1445 A B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (y : B) : (term1634 A B z H lt2 x R y) = (term1635 A B z H lt2 x R y).
Proof. exact (MK_COMB (@lem335075) (@lem335074 A B z H lt2 x R y)). Qed.
Lemma lem335077 {A B : Type'} (f : A -> B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (y : B) : (term1631 A B H lt2 x R y f) = (term1594 A B f H lt2 x R y).
Proof. exact (eq_refl (term1631 A B H lt2 x R y f)). Qed.
Lemma lem335078 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (z : type1445 A B) : (term1611 A B H lt2 x R z) = (term1611 A B H lt2 x R z).
Proof. exact (eq_refl (term1611 A B H lt2 x R z)). Qed.
Lemma lem335079 {A B : Type'} (z : type1445 A B) (f : A -> B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (y : B) : (term1636 A B z H lt2 x R y f) = (term1637 A B z f H lt2 x R y).
Proof. exact (MK_COMB (@lem335078 A B H lt2 x R z) (@lem335077 A B f H lt2 x R y)). Qed.
Lemma lem335080 {A B : Type'} (z : type1445 A B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (y : B) : (term1638 A B z H lt2 x R y) = (term1639 A B z H lt2 x R y).
Proof. exact (fun_ext (fun f : A -> B => @lem335079 A B z f H lt2 x R y)). Qed.
Lemma lem335081 {A B : Type'} : (@ex (A -> B)) = (@ex (A -> B)).
Proof. exact (eq_refl (@ex (A -> B))). Qed.
Lemma lem335082 {A B : Type'} (z : type1445 A B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (y : B) : (term1630 A B z H lt2 x R y) = (term1640 A B z H lt2 x R y).
Proof. exact (MK_COMB (@lem335081 A B) (@lem335080 A B z H lt2 x R y)). Qed.
Lemma lem335083 {A B : Type'} (z : type1445 A B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (y : B) : ((term1629 A B z H lt2 x R y) = (term1630 A B z H lt2 x R y)) = ((term1625 A B z H lt2 x R y) = (term1640 A B z H lt2 x R y)).
Proof. exact (MK_COMB (@lem335076 A B z H lt2 x R y) (@lem335082 A B z H lt2 x R y)). Qed.
Lemma lem335084 {A B : Type'} (z : type1445 A B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (y : B) : (term1625 A B z H lt2 x R y) = (term1640 A B z H lt2 x R y).
Proof. exact (EQ_MP (@lem335083 A B z H lt2 x R y) (@lem335068 A B z H lt2 x R y)). Qed.
Lemma lem335086 {A : Type'} (P : Prop) (Q : A -> Prop) : (term560 A P Q) = (term561 A P Q).
Proof. exact (EQ_MP (@lem18911 A P Q) (@lem18910 A P Q)). Qed.
Lemma lem335087 {B : Type'} (P : Prop) (Q : B -> Prop) : (term560 B P Q) = (term561 B P Q).
Proof. exact (@lem335086 B P Q). Qed.
Lemma lem335088 {A B : Type'} (z : type1445 A B) (f : A -> B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (y : B) : (term1641 A B z f H lt2 x R y) = (term1642 A B z f H lt2 x R y).
Proof. exact (@lem335087 B (term1538 A B H lt2 x R z) (term1593 A B f H lt2 x R y)). Qed.
Lemma lem335089 {A B : Type'} (f : A -> B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (y' : B) (y : B) : (term1643 A B f H lt2 x R y y') = (term1592 A B f H lt2 x R y' y).
Proof. exact (eq_refl (term1643 A B f H lt2 x R y y')). Qed.
Lemma lem335090 {A B : Type'} (f : A -> B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (y : B) : (term1644 A B f H lt2 x R y) = (term1593 A B f H lt2 x R y).
Proof. exact (fun_ext (fun y' : B => @lem335089 A B f H lt2 x R y' y)). Qed.
Lemma lem335091 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem335092 {A B : Type'} (f : A -> B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (y : B) : (term1645 A B f H lt2 x R y) = (term1594 A B f H lt2 x R y).
Proof. exact (MK_COMB (@lem335091 B) (@lem335090 A B f H lt2 x R y)). Qed.
Lemma lem335093 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (z : type1445 A B) : (term1611 A B H lt2 x R z) = (term1611 A B H lt2 x R z).
Proof. exact (eq_refl (term1611 A B H lt2 x R z)). Qed.
Lemma lem335094 {A B : Type'} (z : type1445 A B) (f : A -> B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (y : B) : (term1641 A B z f H lt2 x R y) = (term1637 A B z f H lt2 x R y).
Proof. exact (MK_COMB (@lem335093 A B H lt2 x R z) (@lem335092 A B f H lt2 x R y)). Qed.
Lemma lem335095 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem335096 {A B : Type'} (z : type1445 A B) (f : A -> B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (y : B) : (term1646 A B z f H lt2 x R y) = (term1647 A B z f H lt2 x R y).
Proof. exact (MK_COMB (@lem335095) (@lem335094 A B z f H lt2 x R y)). Qed.
Lemma lem335097 {A B : Type'} (f : A -> B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (y' : B) (y : B) : (term1643 A B f H lt2 x R y y') = (term1592 A B f H lt2 x R y' y).
Proof. exact (eq_refl (term1643 A B f H lt2 x R y y')). Qed.
Lemma lem335098 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (z : type1445 A B) : (term1611 A B H lt2 x R z) = (term1611 A B H lt2 x R z).
Proof. exact (eq_refl (term1611 A B H lt2 x R z)). Qed.
Lemma lem335099 {A B : Type'} (z : type1445 A B) (f : A -> B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (y' : B) (y : B) : (term1648 A B z f H lt2 x R y y') = (term1649 A B z f H lt2 x R y' y).
Proof. exact (MK_COMB (@lem335098 A B H lt2 x R z) (@lem335097 A B f H lt2 x R y' y)). Qed.
Lemma lem335100 {A B : Type'} (z : type1445 A B) (f : A -> B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (y : B) : (term1650 A B z f H lt2 x R y) = (term1651 A B z f H lt2 x R y).
Proof. exact (fun_ext (fun y' : B => @lem335099 A B z f H lt2 x R y' y)). Qed.
Lemma lem335101 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem335102 {A B : Type'} (z : type1445 A B) (f : A -> B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (y : B) : (term1642 A B z f H lt2 x R y) = (term1652 A B z f H lt2 x R y).
Proof. exact (MK_COMB (@lem335101 B) (@lem335100 A B z f H lt2 x R y)). Qed.
Lemma lem335103 {A B : Type'} (z : type1445 A B) (f : A -> B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (y : B) : ((term1641 A B z f H lt2 x R y) = (term1642 A B z f H lt2 x R y)) = ((term1637 A B z f H lt2 x R y) = (term1652 A B z f H lt2 x R y)).
Proof. exact (MK_COMB (@lem335096 A B z f H lt2 x R y) (@lem335102 A B z f H lt2 x R y)). Qed.
Lemma lem335104 {A B : Type'} (z : type1445 A B) (f : A -> B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (y : B) : (term1637 A B z f H lt2 x R y) = (term1652 A B z f H lt2 x R y).
Proof. exact (EQ_MP (@lem335103 A B z f H lt2 x R y) (@lem335088 A B z f H lt2 x R y)). Qed.
Lemma lem335106 {A : Type'} (P : Prop) (Q : A -> Prop) : (term560 A P Q) = (term561 A P Q).
Proof. exact (EQ_MP (@lem18911 A P Q) (@lem18910 A P Q)). Qed.
Lemma lem335107 {A B : Type'} (P : Prop) (Q : type572 A B) : (term663 A B P Q) = (term664 A B P Q).
Proof. exact (@lem335106 (A -> B) P Q). Qed.
Lemma lem335108 {A B : Type'} (z : type1445 A B) (f : A -> B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (y' : B) (y : B) : (term1653 A B z f H lt2 x R y' y) = (term1654 A B z f H lt2 x R y' y).
Proof. exact (@lem335107 A B (term1538 A B H lt2 x R z) (term1591 A B f H lt2 x R y' y)). Qed.
Lemma lem335109 {A B : Type'} (f : A -> B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (f' : A -> B) (y' : B) (y : B) : (term1655 A B f H lt2 x R y' y f') = (term1589 A B f H lt2 x R f' y' y).
Proof. exact (eq_refl (term1655 A B f H lt2 x R y' y f')). Qed.
Lemma lem335110 {A B : Type'} (f : A -> B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (y' : B) (y : B) : (term1656 A B f H lt2 x R y' y) = (term1591 A B f H lt2 x R y' y).
Proof. exact (fun_ext (fun f' : A -> B => @lem335109 A B f H lt2 x R f' y' y)). Qed.
Lemma lem335111 {A B : Type'} : (@ex (A -> B)) = (@ex (A -> B)).
Proof. exact (eq_refl (@ex (A -> B))). Qed.
Lemma lem335112 {A B : Type'} (f : A -> B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (y' : B) (y : B) : (term1657 A B f H lt2 x R y' y) = (term1592 A B f H lt2 x R y' y).
Proof. exact (MK_COMB (@lem335111 A B) (@lem335110 A B f H lt2 x R y' y)). Qed.
Lemma lem335113 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (z : type1445 A B) : (term1611 A B H lt2 x R z) = (term1611 A B H lt2 x R z).
Proof. exact (eq_refl (term1611 A B H lt2 x R z)). Qed.
Lemma lem335114 {A B : Type'} (z : type1445 A B) (f : A -> B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (y' : B) (y : B) : (term1653 A B z f H lt2 x R y' y) = (term1649 A B z f H lt2 x R y' y).
Proof. exact (MK_COMB (@lem335113 A B H lt2 x R z) (@lem335112 A B f H lt2 x R y' y)). Qed.
Lemma lem335115 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem335116 {A B : Type'} (z : type1445 A B) (f : A -> B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (y' : B) (y : B) : (term1658 A B z f H lt2 x R y' y) = (term1659 A B z f H lt2 x R y' y).
Proof. exact (MK_COMB (@lem335115) (@lem335114 A B z f H lt2 x R y' y)). Qed.
Lemma lem335117 {A B : Type'} (f : A -> B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (f' : A -> B) (y' : B) (y : B) : (term1655 A B f H lt2 x R y' y f') = (term1589 A B f H lt2 x R f' y' y).
Proof. exact (eq_refl (term1655 A B f H lt2 x R y' y f')). Qed.
Lemma lem335118 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (z : type1445 A B) : (term1611 A B H lt2 x R z) = (term1611 A B H lt2 x R z).
Proof. exact (eq_refl (term1611 A B H lt2 x R z)). Qed.
Lemma lem335119 {A B : Type'} (z : type1445 A B) (f : A -> B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (f' : A -> B) (y' : B) (y : B) : (term1660 A B z f H lt2 x R y' y f') = (term1661 A B z f H lt2 x R f' y' y).
Proof. exact (MK_COMB (@lem335118 A B H lt2 x R z) (@lem335117 A B f H lt2 x R f' y' y)). Qed.
Lemma lem335120 {A B : Type'} (z : type1445 A B) (f : A -> B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (y' : B) (y : B) : (term1662 A B z f H lt2 x R y' y) = (term1663 A B z f H lt2 x R y' y).
Proof. exact (fun_ext (fun f' : A -> B => @lem335119 A B z f H lt2 x R f' y' y)). Qed.
Lemma lem335121 {A B : Type'} : (@ex (A -> B)) = (@ex (A -> B)).
Proof. exact (eq_refl (@ex (A -> B))). Qed.
Lemma lem335122 {A B : Type'} (z : type1445 A B) (f : A -> B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (y' : B) (y : B) : (term1654 A B z f H lt2 x R y' y) = (term1664 A B z f H lt2 x R y' y).
Proof. exact (MK_COMB (@lem335121 A B) (@lem335120 A B z f H lt2 x R y' y)). Qed.
Lemma lem335123 {A B : Type'} (z : type1445 A B) (f : A -> B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (y' : B) (y : B) : ((term1653 A B z f H lt2 x R y' y) = (term1654 A B z f H lt2 x R y' y)) = ((term1649 A B z f H lt2 x R y' y) = (term1664 A B z f H lt2 x R y' y)).
Proof. exact (MK_COMB (@lem335116 A B z f H lt2 x R y' y) (@lem335122 A B z f H lt2 x R y' y)). Qed.
Lemma lem335124 {A B : Type'} (z : type1445 A B) (f : A -> B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (y' : B) (y : B) : (term1649 A B z f H lt2 x R y' y) = (term1664 A B z f H lt2 x R y' y).
Proof. exact (EQ_MP (@lem335123 A B z f H lt2 x R y' y) (@lem335108 A B z f H lt2 x R y' y)). Qed.
Lemma lem335125 {A B : Type'} (z : type1445 A B) (f : A -> B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (y : B) : (term1651 A B z f H lt2 x R y) = (term1665 A B z f H lt2 x R y).
Proof. exact (fun_ext (fun y' : B => @lem335124 A B z f H lt2 x R y' y)). Qed.
Lemma lem335126 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem335127 {A B : Type'} (z : type1445 A B) (f : A -> B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (y : B) : (term1652 A B z f H lt2 x R y) = (term1666 A B z f H lt2 x R y).
Proof. exact (MK_COMB (@lem335126 B) (@lem335125 A B z f H lt2 x R y)). Qed.
Lemma lem335128 {A B : Type'} (z : type1445 A B) (f : A -> B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (y : B) : (term1637 A B z f H lt2 x R y) = (term1666 A B z f H lt2 x R y).
Proof. exact (TRANS (@lem335104 A B z f H lt2 x R y) (@lem335127 A B z f H lt2 x R y)). Qed.
Lemma lem335129 {A B : Type'} (z : type1445 A B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (y : B) : (term1639 A B z H lt2 x R y) = (term1667 A B z H lt2 x R y).
Proof. exact (fun_ext (fun f : A -> B => @lem335128 A B z f H lt2 x R y)). Qed.
Lemma lem335130 {A B : Type'} : (@ex (A -> B)) = (@ex (A -> B)).
Proof. exact (eq_refl (@ex (A -> B))). Qed.
Lemma lem335131 {A B : Type'} (z : type1445 A B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (y : B) : (term1640 A B z H lt2 x R y) = (term1668 A B z H lt2 x R y).
Proof. exact (MK_COMB (@lem335130 A B) (@lem335129 A B z H lt2 x R y)). Qed.
Lemma lem335132 {A B : Type'} (z : type1445 A B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (y : B) : (term1625 A B z H lt2 x R y) = (term1668 A B z H lt2 x R y).
Proof. exact (TRANS (@lem335084 A B z H lt2 x R y) (@lem335131 A B z H lt2 x R y)). Qed.
Lemma lem335133 {A B : Type'} (z : type1445 A B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) : (term1627 A B z H lt2 x R) = (term1669 A B z H lt2 x R).
Proof. exact (fun_ext (fun y : B => @lem335132 A B z H lt2 x R y)). Qed.
Lemma lem335134 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem335135 {A B : Type'} (z : type1445 A B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) : (term1628 A B z H lt2 x R) = (term1670 A B z H lt2 x R).
Proof. exact (MK_COMB (@lem335134 B) (@lem335133 A B z H lt2 x R)). Qed.
Lemma lem335136 {A B : Type'} (z : type1445 A B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) : (term1613 A B z H lt2 x R) = (term1670 A B z H lt2 x R).
Proof. exact (TRANS (@lem335064 A B z H lt2 x R) (@lem335135 A B z H lt2 x R)). Qed.
Lemma lem335137 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) : (term1615 A B H lt2 x R) = (term1671 A B H lt2 x R).
Proof. exact (fun_ext (fun z : type1445 A B => @lem335136 A B z H lt2 x R)). Qed.
Lemma lem335138 {A B : Type'} : (@ex (B -> (A -> B) -> A)) = (@ex (B -> (A -> B) -> A)).
Proof. exact (eq_refl (@ex (B -> (A -> B) -> A))). Qed.
Lemma lem335139 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) : (term1616 A B H lt2 x R) = (term1672 A B H lt2 x R).
Proof. exact (MK_COMB (@lem335138 A B) (@lem335137 A B H lt2 x R)). Qed.
Lemma lem335140 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) : (term1599 A B H lt2 x R) = (term1672 A B H lt2 x R).
Proof. exact (TRANS (@lem335044 A B H lt2 x R) (@lem335139 A B H lt2 x R)). Qed.
Lemma lem335141 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) : (term1519 A B H lt2 x R) = (term1672 A B H lt2 x R).
Proof. exact (TRANS (@lem335018 A B H lt2 x R) (@lem335140 A B H lt2 x R)). Qed.
Lemma lem335142 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) : (term1504 A B H lt2 x R) = (term1672 A B H lt2 x R).
Proof. exact (TRANS (@lem334822 A B H lt2 x R) (@lem335141 A B H lt2 x R)). Qed.
Lemma lem335143 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) : (term1477 A B H lt2 x R) = (term1672 A B H lt2 x R).
Proof. exact (TRANS (@lem334405 A B H lt2 x R) (@lem335142 A B H lt2 x R)). Qed.
Lemma lem335144 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (h1 : term1477 A B H lt2 x R) : term1672 A B H lt2 x R.
Proof. exact (EQ_MP (@lem335143 A B H lt2 x R) (@lem333014 A B H lt2 x R h1)). Qed.
Lemma lem335145 {A B : Type'} (z : type1445 A B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (h1 : term1670 A B z H lt2 x R) : term1670 A B z H lt2 x R.
Proof. exact (h1). Qed.
Lemma lem335146 {A B : Type'} (z : type1445 A B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (y : B) (h1 : term1668 A B z H lt2 x R y) : term1668 A B z H lt2 x R y.
Proof. exact (h1). Qed.
Lemma lem335147 {A B : Type'} (z : type1445 A B) (f : A -> B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (y : B) (h1 : term1666 A B z f H lt2 x R y) : term1666 A B z f H lt2 x R y.
Proof. exact (h1). Qed.
Lemma lem335148 {A B : Type'} (z : type1445 A B) (f : A -> B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (y' : B) (y : B) (h1 : term1664 A B z f H lt2 x R y' y) : term1664 A B z f H lt2 x R y' y.
Proof. exact (h1). Qed.
Lemma lem335149 {A B : Type'} (z : type1445 A B) (f : A -> B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (f' : A -> B) (y' : B) (y : B) (h1 : term1661 A B z f H lt2 x R f' y' y) : term1661 A B z f H lt2 x R f' y' y.
Proof. exact (h1). Qed.
Lemma lem335150 {A B : Type'} (lt2 : type1402 A) (x : A) (y'' : A -> B) (R : type1413 A B) (h1 : term1149 A B lt2 x y'' R) : term1149 A B lt2 x y'' R.
Proof. exact (h1). Qed.
Lemma lem335151 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (f'' : type467 A B) (R : type1413 A B) (h1 : term483 A B lt2 H f'' R) : term483 A B lt2 H f'' R.
Proof. exact (h1). Qed.
Lemma lem335154 {A B : Type'} (lt2 : type1402 A) (z'' : type515 A B) (S' : type1413 A B) (H : type549 A B) (h1 : term282 A B lt2 z'' S' H) : term282 A B lt2 z'' S' H.
Proof. exact (h1). Qed.
Lemma lem335161 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem335162 {A B : Type'} (f : type1413 A B) (x : A) : (f x) = (@I (A -> B -> Prop) f x).
Proof. exact (@lem335161 A (B -> Prop) f x). Qed.
Lemma lem335163 {A B : Type'} (S' : type1413 A B) (x : A) : (S' x) = (@I (A -> B -> Prop) S' x).
Proof. exact (@lem335162 A B S' x). Qed.
Lemma lem335164 {B : Type'} (y : B) : y = y.
Proof. exact (eq_refl y). Qed.
Lemma lem335165 {A B : Type'} (S' : type1413 A B) (x : A) (y : B) : (S' x y) = (@I (A -> B -> Prop) S' x y).
Proof. exact (MK_COMB (@lem335163 A B S' x) (@lem335164 B y)). Qed.
Lemma lem335167 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem335168 {B : Type'} (f : B -> Prop) (x : B) : (f x) = (@I (B -> Prop) f x).
Proof. exact (@lem335167 B Prop f x). Qed.
Lemma lem335169 {A B : Type'} (S' : type1413 A B) (x : A) (y : B) : (@I (A -> B -> Prop) S' x y) = (term885 A B S' x y).
Proof. exact (@lem335168 B (@I (A -> B -> Prop) S' x) y). Qed.
Lemma lem335171 {A B : Type'} (S' : type1413 A B) (x : A) (y : B) : (S' x y) = (term885 A B S' x y).
Proof. exact (TRANS (@lem335165 A B S' x y) (@lem335169 A B S' x y)). Qed.
Lemma lem335172 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem335179 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem335180 {A B : Type'} (f : type1413 A B) (x : A) : (f x) = (@I (A -> B -> Prop) f x).
Proof. exact (@lem335179 A (B -> Prop) f x). Qed.
Lemma lem335181 {A B : Type'} (R : type1413 A B) (x : A) : (R x) = (@I (A -> B -> Prop) R x).
Proof. exact (@lem335180 A B R x). Qed.
Lemma lem335182 {B : Type'} (y : B) : y = y.
Proof. exact (eq_refl y). Qed.
Lemma lem335183 {A B : Type'} (R : type1413 A B) (x : A) (y : B) : (R x y) = (@I (A -> B -> Prop) R x y).
Proof. exact (MK_COMB (@lem335181 A B R x) (@lem335182 B y)). Qed.
Lemma lem335185 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem335186 {B : Type'} (f : B -> Prop) (x : B) : (f x) = (@I (B -> Prop) f x).
Proof. exact (@lem335185 B Prop f x). Qed.
Lemma lem335187 {A B : Type'} (R : type1413 A B) (x : A) (y : B) : (@I (A -> B -> Prop) R x y) = (term885 A B R x y).
Proof. exact (@lem335186 B (@I (A -> B -> Prop) R x) y). Qed.
Lemma lem335189 {A B : Type'} (R : type1413 A B) (x : A) (y : B) : (R x y) = (term885 A B R x y).
Proof. exact (TRANS (@lem335183 A B R x y) (@lem335187 A B R x y)). Qed.
Lemma lem335190 {A B : Type'} (R : type1413 A B) (x : A) (y : B) : (term667 A B R x y) = (term886 A B R x y).
Proof. exact (MK_COMB (@lem335172) (@lem335189 A B R x y)). Qed.
Lemma lem335191 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem335192 {A B : Type'} (R : type1413 A B) (x : A) (y : B) : (term502 A B R x y) = (term887 A B R x y).
Proof. exact (MK_COMB (@lem335191) (@lem335190 A B R x y)). Qed.
Lemma lem335193 {A B : Type'} (R : type1413 A B) (S' : type1413 A B) (x : A) (y : B) : (term389 A B R S' x y) = (term1153 A B R S' x y).
Proof. exact (MK_COMB (@lem335192 A B R x y) (@lem335171 A B S' x y)). Qed.
Lemma lem335194 {A B : Type'} (R : type1413 A B) (S' : type1413 A B) (x : A) : (term390 A B R S' x) = (term1154 A B R S' x).
Proof. exact (fun_ext (fun y : B => @lem335193 A B R S' x y)). Qed.
Lemma lem335195 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem335196 {A B : Type'} (R : type1413 A B) (S' : type1413 A B) (x : A) : (term391 A B R S' x) = (term1155 A B R S' x).
Proof. exact (MK_COMB (@lem335195 B) (@lem335194 A B R S' x)). Qed.
Lemma lem335197 {A B : Type'} (R : type1413 A B) (S' : type1413 A B) : (term392 A B R S') = (term1156 A B R S').
Proof. exact (fun_ext (fun x : A => @lem335196 A B R S' x)). Qed.
Lemma lem335198 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem335199 {A B : Type'} (R : type1413 A B) (S' : type1413 A B) : (term393 A B R S') = (term1157 A B R S').
Proof. exact (MK_COMB (@lem335198 A) (@lem335197 A B R S')). Qed.
Lemma lem335200 {A B : Type'} (R : type1413 A B) (S' : type1413 A B) (h1 : term71 A B R S') : term1157 A B R S'.
Proof. exact (EQ_MP (@lem335199 A B R S') (@lem334324 A B R S' h1)). Qed.
Lemma lem335207 {B : Type'} (y' : B) (y : B) : (term1478 B y' y) = (term1478 B y' y).
Proof. exact (eq_refl (term1478 B y' y)). Qed.
Lemma lem335214 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem335215 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (@lem335214 A B f x). Qed.
Lemma lem335217 {A B : Type'} (f' : A -> B) (z : A) : (f' z) = (@I (A -> B) f' z).
Proof. exact (@lem335215 A B f' z). Qed.
Lemma lem335218 {A B : Type'} (R : type1413 A B) (z : A) : (R z) = (R z).
Proof. exact (eq_refl (R z)). Qed.
Lemma lem335219 {A B : Type'} (R : type1413 A B) (f' : A -> B) (z : A) : (term173 A B R f' z) = (term896 A B R f' z).
Proof. exact (MK_COMB (@lem335218 A B R z) (@lem335217 A B f' z)). Qed.
Lemma lem335221 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem335222 {A B : Type'} (f : type1413 A B) (x : A) : (f x) = (@I (A -> B -> Prop) f x).
Proof. exact (@lem335221 A (B -> Prop) f x). Qed.
Lemma lem335223 {A B : Type'} (R : type1413 A B) (z : A) : (R z) = (@I (A -> B -> Prop) R z).
Proof. exact (@lem335222 A B R z). Qed.
Lemma lem335224 {A B : Type'} (f' : A -> B) (z : A) : (@I (A -> B) f' z) = (@I (A -> B) f' z).
Proof. exact (eq_refl (@I (A -> B) f' z)). Qed.
Lemma lem335225 {A B : Type'} (R : type1413 A B) (f' : A -> B) (z : A) : (term896 A B R f' z) = (term897 A B R f' z).
Proof. exact (MK_COMB (@lem335223 A B R z) (@lem335224 A B f' z)). Qed.
Lemma lem335227 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem335228 {B : Type'} (f : B -> Prop) (x : B) : (f x) = (@I (B -> Prop) f x).
Proof. exact (@lem335227 B Prop f x). Qed.
Lemma lem335229 {A B : Type'} (R : type1413 A B) (f' : A -> B) (z : A) : (term897 A B R f' z) = (term898 A B R f' z).
Proof. exact (@lem335228 B (@I (A -> B -> Prop) R z) (@I (A -> B) f' z)). Qed.
Lemma lem335230 {A B : Type'} (R : type1413 A B) (f' : A -> B) (z : A) : (term896 A B R f' z) = (term898 A B R f' z).
Proof. exact (TRANS (@lem335225 A B R f' z) (@lem335229 A B R f' z)). Qed.
Lemma lem335231 {A B : Type'} (R : type1413 A B) (f' : A -> B) (z : A) : (term173 A B R f' z) = (term898 A B R f' z).
Proof. exact (TRANS (@lem335219 A B R f' z) (@lem335230 A B R f' z)). Qed.
Lemma lem335232 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem335239 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem335240 {A : Type'} (f : type1402 A) (x : A) : (f x) = (@I (A -> A -> Prop) f x).
Proof. exact (@lem335239 A (A -> Prop) f x). Qed.
Lemma lem335241 {A : Type'} (lt2 : type1402 A) (z : A) : (lt2 z) = (@I (A -> A -> Prop) lt2 z).
Proof. exact (@lem335240 A lt2 z). Qed.
Lemma lem335242 {A : Type'} (x : A) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem335243 {A : Type'} (lt2 : type1402 A) (z : A) (x : A) : (lt2 z x) = (@I (A -> A -> Prop) lt2 z x).
Proof. exact (MK_COMB (@lem335241 A lt2 z) (@lem335242 A x)). Qed.
Lemma lem335245 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem335246 {A : Type'} (f : A -> Prop) (x : A) : (f x) = (@I (A -> Prop) f x).
Proof. exact (@lem335245 A Prop f x). Qed.
Lemma lem335247 {A : Type'} (lt2 : type1402 A) (z : A) (x : A) : (@I (A -> A -> Prop) lt2 z x) = (term1673 A lt2 z x).
Proof. exact (@lem335246 A (@I (A -> A -> Prop) lt2 z) x). Qed.
Lemma lem335249 {A : Type'} (lt2 : type1402 A) (z : A) (x : A) : (lt2 z x) = (term1673 A lt2 z x).
Proof. exact (TRANS (@lem335243 A lt2 z x) (@lem335247 A lt2 z x)). Qed.
Lemma lem335250 {A : Type'} (lt2 : type1402 A) (z : A) (x : A) : (term1119 A lt2 z x) = (term1674 A lt2 z x).
Proof. exact (MK_COMB (@lem335232) (@lem335249 A lt2 z x)). Qed.
Lemma lem335251 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem335252 {A : Type'} (lt2 : type1402 A) (z : A) (x : A) : (term1096 A lt2 z x) = (term1675 A lt2 z x).
Proof. exact (MK_COMB (@lem335251) (@lem335250 A lt2 z x)). Qed.
Lemma lem335253 {A B : Type'} (lt2 : type1402 A) (x : A) (R : type1413 A B) (f' : A -> B) (z : A) : (term364 A B lt2 x R f' z) = (term1676 A B lt2 x R f' z).
Proof. exact (MK_COMB (@lem335252 A lt2 z x) (@lem335231 A B R f' z)). Qed.
Lemma lem335254 {A B : Type'} (lt2 : type1402 A) (x : A) (R : type1413 A B) (f' : A -> B) : (term365 A B lt2 x R f') = (term1677 A B lt2 x R f').
Proof. exact (fun_ext (fun z : A => @lem335253 A B lt2 x R f' z)). Qed.
Lemma lem335255 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem335256 {A B : Type'} (lt2 : type1402 A) (x : A) (R : type1413 A B) (f' : A -> B) : (term366 A B lt2 x R f') = (term1678 A B lt2 x R f').
Proof. exact (MK_COMB (@lem335255 A) (@lem335254 A B lt2 x R f')). Qed.
Lemma lem335265 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem335266 {A B : Type'} (f : type549 A B) (x : A -> B) : (f x) = (@I ((A -> B) -> A -> B) f x).
Proof. exact (@lem335265 (A -> B) (A -> B) f x). Qed.
Lemma lem335267 {A B : Type'} (H : type549 A B) (f' : A -> B) : (H f') = (@I ((A -> B) -> A -> B) H f').
Proof. exact (@lem335266 A B H f'). Qed.
Lemma lem335268 {A : Type'} (x : A) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem335269 {A B : Type'} (H : type549 A B) (f' : A -> B) (x : A) : (H f' x) = (@I ((A -> B) -> A -> B) H f' x).
Proof. exact (MK_COMB (@lem335267 A B H f') (@lem335268 A x)). Qed.
Lemma lem335271 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem335272 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (@lem335271 A B f x). Qed.
Lemma lem335273 {A B : Type'} (H : type549 A B) (f' : A -> B) (x : A) : (@I ((A -> B) -> A -> B) H f' x) = (term916 A B H f' x).
Proof. exact (@lem335272 A B (@I ((A -> B) -> A -> B) H f') x). Qed.
Lemma lem335275 {A B : Type'} (H : type549 A B) (f' : A -> B) (x : A) : (H f' x) = (term916 A B H f' x).
Proof. exact (TRANS (@lem335269 A B H f' x) (@lem335273 A B H f' x)). Qed.
Lemma lem335276 {B : Type'} (y' : B) : (@eq B y') = (@eq B y').
Proof. exact (eq_refl (@eq B y')). Qed.
Lemma lem335277 {A B : Type'} (y' : B) (H : type549 A B) (f' : A -> B) (x : A) : (y' = (H f' x)) = (y' = (term916 A B H f' x)).
Proof. exact (MK_COMB (@lem335276 B y') (@lem335275 A B H f' x)). Qed.
Lemma lem335278 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem335279 {A B : Type'} (y' : B) (H : type549 A B) (f' : A -> B) (x : A) : (term59 A B y' H f' x) = (term1679 A B y' H f' x).
Proof. exact (MK_COMB (@lem335278) (@lem335277 A B y' H f' x)). Qed.
Lemma lem335280 {A B : Type'} (y' : B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (f' : A -> B) : (term490 A B y' H lt2 x R f') = (term1680 A B y' H lt2 x R f').
Proof. exact (MK_COMB (@lem335279 A B y' H f' x) (@lem335256 A B lt2 x R f')). Qed.
Lemma lem335281 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem335282 {A B : Type'} (y' : B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (f' : A -> B) : (term1549 A B y' H lt2 x R f') = (term1681 A B y' H lt2 x R f').
Proof. exact (MK_COMB (@lem335281) (@lem335280 A B y' H lt2 x R f')). Qed.
Lemma lem335283 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (f' : A -> B) (y' : B) (y : B) : (term1551 A B H lt2 x R f' y' y) = (term1682 A B H lt2 x R f' y' y).
Proof. exact (MK_COMB (@lem335282 A B y' H lt2 x R f') (@lem335207 B y' y)). Qed.
Lemma lem335290 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem335291 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (@lem335290 A B f x). Qed.
Lemma lem335293 {A B : Type'} (f : A -> B) (z : A) : (f z) = (@I (A -> B) f z).
Proof. exact (@lem335291 A B f z). Qed.
Lemma lem335294 {A B : Type'} (R : type1413 A B) (z : A) : (R z) = (R z).
Proof. exact (eq_refl (R z)). Qed.
Lemma lem335295 {A B : Type'} (R : type1413 A B) (f : A -> B) (z : A) : (term173 A B R f z) = (term896 A B R f z).
Proof. exact (MK_COMB (@lem335294 A B R z) (@lem335293 A B f z)). Qed.
Lemma lem335297 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem335298 {A B : Type'} (f : type1413 A B) (x : A) : (f x) = (@I (A -> B -> Prop) f x).
Proof. exact (@lem335297 A (B -> Prop) f x). Qed.
Lemma lem335299 {A B : Type'} (R : type1413 A B) (z : A) : (R z) = (@I (A -> B -> Prop) R z).
Proof. exact (@lem335298 A B R z). Qed.
Lemma lem335300 {A B : Type'} (f : A -> B) (z : A) : (@I (A -> B) f z) = (@I (A -> B) f z).
Proof. exact (eq_refl (@I (A -> B) f z)). Qed.
Lemma lem335301 {A B : Type'} (R : type1413 A B) (f : A -> B) (z : A) : (term896 A B R f z) = (term897 A B R f z).
Proof. exact (MK_COMB (@lem335299 A B R z) (@lem335300 A B f z)). Qed.
Lemma lem335303 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem335304 {B : Type'} (f : B -> Prop) (x : B) : (f x) = (@I (B -> Prop) f x).
Proof. exact (@lem335303 B Prop f x). Qed.
Lemma lem335305 {A B : Type'} (R : type1413 A B) (f : A -> B) (z : A) : (term897 A B R f z) = (term898 A B R f z).
Proof. exact (@lem335304 B (@I (A -> B -> Prop) R z) (@I (A -> B) f z)). Qed.
Lemma lem335306 {A B : Type'} (R : type1413 A B) (f : A -> B) (z : A) : (term896 A B R f z) = (term898 A B R f z).
Proof. exact (TRANS (@lem335301 A B R f z) (@lem335305 A B R f z)). Qed.
Lemma lem335307 {A B : Type'} (R : type1413 A B) (f : A -> B) (z : A) : (term173 A B R f z) = (term898 A B R f z).
Proof. exact (TRANS (@lem335295 A B R f z) (@lem335306 A B R f z)). Qed.
Lemma lem335308 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem335315 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem335316 {A : Type'} (f : type1402 A) (x : A) : (f x) = (@I (A -> A -> Prop) f x).
Proof. exact (@lem335315 A (A -> Prop) f x). Qed.
Lemma lem335317 {A : Type'} (lt2 : type1402 A) (z : A) : (lt2 z) = (@I (A -> A -> Prop) lt2 z).
Proof. exact (@lem335316 A lt2 z). Qed.
Lemma lem335318 {A : Type'} (x : A) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem335319 {A : Type'} (lt2 : type1402 A) (z : A) (x : A) : (lt2 z x) = (@I (A -> A -> Prop) lt2 z x).
Proof. exact (MK_COMB (@lem335317 A lt2 z) (@lem335318 A x)). Qed.
Lemma lem335321 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem335322 {A : Type'} (f : A -> Prop) (x : A) : (f x) = (@I (A -> Prop) f x).
Proof. exact (@lem335321 A Prop f x). Qed.
Lemma lem335323 {A : Type'} (lt2 : type1402 A) (z : A) (x : A) : (@I (A -> A -> Prop) lt2 z x) = (term1673 A lt2 z x).
Proof. exact (@lem335322 A (@I (A -> A -> Prop) lt2 z) x). Qed.
Lemma lem335325 {A : Type'} (lt2 : type1402 A) (z : A) (x : A) : (lt2 z x) = (term1673 A lt2 z x).
Proof. exact (TRANS (@lem335319 A lt2 z x) (@lem335323 A lt2 z x)). Qed.
Lemma lem335326 {A : Type'} (lt2 : type1402 A) (z : A) (x : A) : (term1119 A lt2 z x) = (term1674 A lt2 z x).
Proof. exact (MK_COMB (@lem335308) (@lem335325 A lt2 z x)). Qed.
Lemma lem335327 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem335328 {A : Type'} (lt2 : type1402 A) (z : A) (x : A) : (term1096 A lt2 z x) = (term1675 A lt2 z x).
Proof. exact (MK_COMB (@lem335327) (@lem335326 A lt2 z x)). Qed.
Lemma lem335329 {A B : Type'} (lt2 : type1402 A) (x : A) (R : type1413 A B) (f : A -> B) (z : A) : (term364 A B lt2 x R f z) = (term1676 A B lt2 x R f z).
Proof. exact (MK_COMB (@lem335328 A lt2 z x) (@lem335307 A B R f z)). Qed.
Lemma lem335330 {A B : Type'} (lt2 : type1402 A) (x : A) (R : type1413 A B) (f : A -> B) : (term365 A B lt2 x R f) = (term1677 A B lt2 x R f).
Proof. exact (fun_ext (fun z : A => @lem335329 A B lt2 x R f z)). Qed.
Lemma lem335331 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem335332 {A B : Type'} (lt2 : type1402 A) (x : A) (R : type1413 A B) (f : A -> B) : (term366 A B lt2 x R f) = (term1678 A B lt2 x R f).
Proof. exact (MK_COMB (@lem335331 A) (@lem335330 A B lt2 x R f)). Qed.
Lemma lem335341 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem335342 {A B : Type'} (f : type549 A B) (x : A -> B) : (f x) = (@I ((A -> B) -> A -> B) f x).
Proof. exact (@lem335341 (A -> B) (A -> B) f x). Qed.
Lemma lem335343 {A B : Type'} (H : type549 A B) (f : A -> B) : (H f) = (@I ((A -> B) -> A -> B) H f).
Proof. exact (@lem335342 A B H f). Qed.
Lemma lem335344 {A : Type'} (x : A) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem335345 {A B : Type'} (H : type549 A B) (f : A -> B) (x : A) : (H f x) = (@I ((A -> B) -> A -> B) H f x).
Proof. exact (MK_COMB (@lem335343 A B H f) (@lem335344 A x)). Qed.
Lemma lem335347 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem335348 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (@lem335347 A B f x). Qed.
Lemma lem335349 {A B : Type'} (H : type549 A B) (f : A -> B) (x : A) : (@I ((A -> B) -> A -> B) H f x) = (term916 A B H f x).
Proof. exact (@lem335348 A B (@I ((A -> B) -> A -> B) H f) x). Qed.
Lemma lem335351 {A B : Type'} (H : type549 A B) (f : A -> B) (x : A) : (H f x) = (term916 A B H f x).
Proof. exact (TRANS (@lem335345 A B H f x) (@lem335349 A B H f x)). Qed.
Lemma lem335352 {B : Type'} (y : B) : (@eq B y) = (@eq B y).
Proof. exact (eq_refl (@eq B y)). Qed.
Lemma lem335353 {A B : Type'} (y : B) (H : type549 A B) (f : A -> B) (x : A) : (y = (H f x)) = (y = (term916 A B H f x)).
Proof. exact (MK_COMB (@lem335352 B y) (@lem335351 A B H f x)). Qed.
Lemma lem335354 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem335355 {A B : Type'} (y : B) (H : type549 A B) (f : A -> B) (x : A) : (term59 A B y H f x) = (term1679 A B y H f x).
Proof. exact (MK_COMB (@lem335354) (@lem335353 A B y H f x)). Qed.
Lemma lem335356 {A B : Type'} (y : B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (f : A -> B) : (term490 A B y H lt2 x R f) = (term1680 A B y H lt2 x R f).
Proof. exact (MK_COMB (@lem335355 A B y H f x) (@lem335332 A B lt2 x R f)). Qed.
Lemma lem335357 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem335358 {A B : Type'} (y : B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (f : A -> B) : (term1549 A B y H lt2 x R f) = (term1681 A B y H lt2 x R f).
Proof. exact (MK_COMB (@lem335357) (@lem335356 A B y H lt2 x R f)). Qed.
Lemma lem335359 {A B : Type'} (f : A -> B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (f' : A -> B) (y' : B) (y : B) : (term1589 A B f H lt2 x R f' y' y) = (term1683 A B f H lt2 x R f' y' y).
Proof. exact (MK_COMB (@lem335358 A B y H lt2 x R f) (@lem335283 A B H lt2 x R f' y' y)). Qed.
Lemma lem335360 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem335361 {A B : Type'} (R : type1413 A B) : R = R.
Proof. exact (eq_refl R). Qed.
Lemma lem335368 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem335369 {A B : Type'} (f : type1445 A B) (x : B) : (f x) = (@I (B -> (A -> B) -> A) f x).
Proof. exact (@lem335368 B (type569 A B) f x). Qed.
Lemma lem335370 {A B : Type'} (z : type1445 A B) (y : B) : (z y) = (@I (B -> (A -> B) -> A) z y).
Proof. exact (@lem335369 A B z y). Qed.
Lemma lem335371 {A B : Type'} (f : A -> B) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem335372 {A B : Type'} (z : type1445 A B) (y : B) (f : A -> B) : (z y f) = (@I (B -> (A -> B) -> A) z y f).
Proof. exact (MK_COMB (@lem335370 A B z y) (@lem335371 A B f)). Qed.
Lemma lem335374 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem335375 {A B : Type'} (f : type569 A B) (x : A -> B) : (f x) = (@I ((A -> B) -> A) f x).
Proof. exact (@lem335374 (A -> B) A f x). Qed.
Lemma lem335376 {A B : Type'} (z : type1445 A B) (y : B) (f : A -> B) : (@I (B -> (A -> B) -> A) z y f) = (term1684 A B z y f).
Proof. exact (@lem335375 A B (@I (B -> (A -> B) -> A) z y) f). Qed.
Lemma lem335378 {A B : Type'} (z : type1445 A B) (y : B) (f : A -> B) : (z y f) = (term1684 A B z y f).
Proof. exact (TRANS (@lem335372 A B z y f) (@lem335376 A B z y f)). Qed.
Lemma lem335379 {A B : Type'} (f : A -> B) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem335386 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem335387 {A B : Type'} (f : type1445 A B) (x : B) : (f x) = (@I (B -> (A -> B) -> A) f x).
Proof. exact (@lem335386 B (type569 A B) f x). Qed.
Lemma lem335388 {A B : Type'} (z : type1445 A B) (y : B) : (z y) = (@I (B -> (A -> B) -> A) z y).
Proof. exact (@lem335387 A B z y). Qed.
Lemma lem335389 {A B : Type'} (f : A -> B) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem335390 {A B : Type'} (z : type1445 A B) (y : B) (f : A -> B) : (z y f) = (@I (B -> (A -> B) -> A) z y f).
Proof. exact (MK_COMB (@lem335388 A B z y) (@lem335389 A B f)). Qed.
Lemma lem335392 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem335393 {A B : Type'} (f : type569 A B) (x : A -> B) : (f x) = (@I ((A -> B) -> A) f x).
Proof. exact (@lem335392 (A -> B) A f x). Qed.
Lemma lem335394 {A B : Type'} (z : type1445 A B) (y : B) (f : A -> B) : (@I (B -> (A -> B) -> A) z y f) = (term1684 A B z y f).
Proof. exact (@lem335393 A B (@I (B -> (A -> B) -> A) z y) f). Qed.
Lemma lem335396 {A B : Type'} (z : type1445 A B) (y : B) (f : A -> B) : (z y f) = (term1684 A B z y f).
Proof. exact (TRANS (@lem335390 A B z y f) (@lem335394 A B z y f)). Qed.
Lemma lem335397 {A B : Type'} (z : type1445 A B) (y : B) (f : A -> B) : (term1685 A B z y f) = (term1686 A B z y f).
Proof. exact (MK_COMB (@lem335379 A B f) (@lem335396 A B z y f)). Qed.
Lemma lem335399 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem335400 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (@lem335399 A B f x). Qed.
Lemma lem335401 {A B : Type'} (z : type1445 A B) (y : B) (f : A -> B) : (term1686 A B z y f) = (term1687 A B z y f).
Proof. exact (@lem335400 A B f (term1684 A B z y f)). Qed.
Lemma lem335402 {A B : Type'} (z : type1445 A B) (y : B) (f : A -> B) : (term1685 A B z y f) = (term1687 A B z y f).
Proof. exact (TRANS (@lem335397 A B z y f) (@lem335401 A B z y f)). Qed.
Lemma lem335403 {A B : Type'} (R : type1413 A B) (z : type1445 A B) (y : B) (f : A -> B) : (term1688 A B R z y f) = (term1689 A B R z y f).
Proof. exact (MK_COMB (@lem335361 A B R) (@lem335378 A B z y f)). Qed.
Lemma lem335404 {A B : Type'} (R : type1413 A B) (z : type1445 A B) (y : B) (f : A -> B) : (term1690 A B R z y f) = (term1691 A B R z y f).
Proof. exact (MK_COMB (@lem335403 A B R z y f) (@lem335402 A B z y f)). Qed.
Lemma lem335406 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem335407 {A B : Type'} (f : type1413 A B) (x : A) : (f x) = (@I (A -> B -> Prop) f x).
Proof. exact (@lem335406 A (B -> Prop) f x). Qed.
Lemma lem335408 {A B : Type'} (R : type1413 A B) (z : type1445 A B) (y : B) (f : A -> B) : (term1689 A B R z y f) = (term1692 A B R z y f).
Proof. exact (@lem335407 A B R (term1684 A B z y f)). Qed.
Lemma lem335409 {A B : Type'} (z : type1445 A B) (y : B) (f : A -> B) : (term1687 A B z y f) = (term1687 A B z y f).
Proof. exact (eq_refl (term1687 A B z y f)). Qed.
Lemma lem335410 {A B : Type'} (R : type1413 A B) (z : type1445 A B) (y : B) (f : A -> B) : (term1691 A B R z y f) = (term1693 A B R z y f).
Proof. exact (MK_COMB (@lem335408 A B R z y f) (@lem335409 A B z y f)). Qed.
Lemma lem335412 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem335413 {B : Type'} (f : B -> Prop) (x : B) : (f x) = (@I (B -> Prop) f x).
Proof. exact (@lem335412 B Prop f x). Qed.
Lemma lem335414 {A B : Type'} (R : type1413 A B) (z : type1445 A B) (y : B) (f : A -> B) : (term1693 A B R z y f) = (term1694 A B R z y f).
Proof. exact (@lem335413 B (term1692 A B R z y f) (term1687 A B z y f)). Qed.
Lemma lem335415 {A B : Type'} (R : type1413 A B) (z : type1445 A B) (y : B) (f : A -> B) : (term1691 A B R z y f) = (term1694 A B R z y f).
Proof. exact (TRANS (@lem335410 A B R z y f) (@lem335414 A B R z y f)). Qed.
Lemma lem335416 {A B : Type'} (R : type1413 A B) (z : type1445 A B) (y : B) (f : A -> B) : (term1690 A B R z y f) = (term1694 A B R z y f).
Proof. exact (TRANS (@lem335404 A B R z y f) (@lem335415 A B R z y f)). Qed.
Lemma lem335417 {A B : Type'} (R : type1413 A B) (z : type1445 A B) (y : B) (f : A -> B) : (term1695 A B R z y f) = (term1696 A B R z y f).
Proof. exact (MK_COMB (@lem335360) (@lem335416 A B R z y f)). Qed.
Lemma lem335418 {A : Type'} (lt2 : type1402 A) : lt2 = lt2.
Proof. exact (eq_refl lt2). Qed.
Lemma lem335425 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem335426 {A B : Type'} (f : type1445 A B) (x : B) : (f x) = (@I (B -> (A -> B) -> A) f x).
Proof. exact (@lem335425 B (type569 A B) f x). Qed.
Lemma lem335427 {A B : Type'} (z : type1445 A B) (y : B) : (z y) = (@I (B -> (A -> B) -> A) z y).
Proof. exact (@lem335426 A B z y). Qed.
Lemma lem335428 {A B : Type'} (f : A -> B) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem335429 {A B : Type'} (z : type1445 A B) (y : B) (f : A -> B) : (z y f) = (@I (B -> (A -> B) -> A) z y f).
Proof. exact (MK_COMB (@lem335427 A B z y) (@lem335428 A B f)). Qed.
Lemma lem335431 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem335432 {A B : Type'} (f : type569 A B) (x : A -> B) : (f x) = (@I ((A -> B) -> A) f x).
Proof. exact (@lem335431 (A -> B) A f x). Qed.
Lemma lem335433 {A B : Type'} (z : type1445 A B) (y : B) (f : A -> B) : (@I (B -> (A -> B) -> A) z y f) = (term1684 A B z y f).
Proof. exact (@lem335432 A B (@I (B -> (A -> B) -> A) z y) f). Qed.
Lemma lem335435 {A B : Type'} (z : type1445 A B) (y : B) (f : A -> B) : (z y f) = (term1684 A B z y f).
Proof. exact (TRANS (@lem335429 A B z y f) (@lem335433 A B z y f)). Qed.
Lemma lem335436 {A : Type'} (x : A) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem335437 {A B : Type'} (lt2 : type1402 A) (z : type1445 A B) (y : B) (f : A -> B) : (term1697 A B lt2 z y f) = (term1698 A B lt2 z y f).
Proof. exact (MK_COMB (@lem335418 A lt2) (@lem335435 A B z y f)). Qed.
Lemma lem335438 {A B : Type'} (lt2 : type1402 A) (z : type1445 A B) (y : B) (f : A -> B) (x : A) : (term1699 A B lt2 z y f x) = (term1700 A B lt2 z y f x).
Proof. exact (MK_COMB (@lem335437 A B lt2 z y f) (@lem335436 A x)). Qed.
Lemma lem335440 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem335441 {A : Type'} (f : type1402 A) (x : A) : (f x) = (@I (A -> A -> Prop) f x).
Proof. exact (@lem335440 A (A -> Prop) f x). Qed.
Lemma lem335442 {A B : Type'} (lt2 : type1402 A) (z : type1445 A B) (y : B) (f : A -> B) : (term1698 A B lt2 z y f) = (term1701 A B lt2 z y f).
Proof. exact (@lem335441 A lt2 (term1684 A B z y f)). Qed.
Lemma lem335443 {A : Type'} (x : A) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem335444 {A B : Type'} (lt2 : type1402 A) (z : type1445 A B) (y : B) (f : A -> B) (x : A) : (term1700 A B lt2 z y f x) = (term1702 A B lt2 z y f x).
Proof. exact (MK_COMB (@lem335442 A B lt2 z y f) (@lem335443 A x)). Qed.
Lemma lem335446 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem335447 {A : Type'} (f : A -> Prop) (x : A) : (f x) = (@I (A -> Prop) f x).
Proof. exact (@lem335446 A Prop f x). Qed.
Lemma lem335448 {A B : Type'} (lt2 : type1402 A) (z : type1445 A B) (y : B) (f : A -> B) (x : A) : (term1702 A B lt2 z y f x) = (term1703 A B lt2 z y f x).
Proof. exact (@lem335447 A (term1701 A B lt2 z y f) x). Qed.
Lemma lem335449 {A B : Type'} (lt2 : type1402 A) (z : type1445 A B) (y : B) (f : A -> B) (x : A) : (term1700 A B lt2 z y f x) = (term1703 A B lt2 z y f x).
Proof. exact (TRANS (@lem335444 A B lt2 z y f x) (@lem335448 A B lt2 z y f x)). Qed.
Lemma lem335450 {A B : Type'} (lt2 : type1402 A) (z : type1445 A B) (y : B) (f : A -> B) (x : A) : (term1699 A B lt2 z y f x) = (term1703 A B lt2 z y f x).
Proof. exact (TRANS (@lem335438 A B lt2 z y f x) (@lem335449 A B lt2 z y f x)). Qed.
Lemma lem335451 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem335452 {A B : Type'} (lt2 : type1402 A) (z : type1445 A B) (y : B) (f : A -> B) (x : A) : (term1704 A B lt2 z y f x) = (term1705 A B lt2 z y f x).
Proof. exact (MK_COMB (@lem335451) (@lem335450 A B lt2 z y f x)). Qed.
Lemma lem335453 {A B : Type'} (lt2 : type1402 A) (x : A) (R : type1413 A B) (z : type1445 A B) (y : B) (f : A -> B) : (term1706 A B lt2 x R z y f) = (term1707 A B lt2 x R z y f).
Proof. exact (MK_COMB (@lem335452 A B lt2 z y f x) (@lem335417 A B R z y f)). Qed.
Lemma lem335454 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem335463 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem335464 {A B : Type'} (f : type549 A B) (x : A -> B) : (f x) = (@I ((A -> B) -> A -> B) f x).
Proof. exact (@lem335463 (A -> B) (A -> B) f x). Qed.
Lemma lem335465 {A B : Type'} (H : type549 A B) (f : A -> B) : (H f) = (@I ((A -> B) -> A -> B) H f).
Proof. exact (@lem335464 A B H f). Qed.
Lemma lem335466 {A : Type'} (x : A) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem335467 {A B : Type'} (H : type549 A B) (f : A -> B) (x : A) : (H f x) = (@I ((A -> B) -> A -> B) H f x).
Proof. exact (MK_COMB (@lem335465 A B H f) (@lem335466 A x)). Qed.
Lemma lem335469 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem335470 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (@lem335469 A B f x). Qed.
Lemma lem335471 {A B : Type'} (H : type549 A B) (f : A -> B) (x : A) : (@I ((A -> B) -> A -> B) H f x) = (term916 A B H f x).
Proof. exact (@lem335470 A B (@I ((A -> B) -> A -> B) H f) x). Qed.
Lemma lem335473 {A B : Type'} (H : type549 A B) (f : A -> B) (x : A) : (H f x) = (term916 A B H f x).
Proof. exact (TRANS (@lem335467 A B H f x) (@lem335471 A B H f x)). Qed.
Lemma lem335474 {B : Type'} (y : B) : (@eq B y) = (@eq B y).
Proof. exact (eq_refl (@eq B y)). Qed.
Lemma lem335475 {A B : Type'} (y : B) (H : type549 A B) (f : A -> B) (x : A) : (y = (H f x)) = (y = (term916 A B H f x)).
Proof. exact (MK_COMB (@lem335474 B y) (@lem335473 A B H f x)). Qed.
Lemma lem335476 {A B : Type'} (y : B) (H : type549 A B) (f : A -> B) (x : A) : (term564 A B y H f x) = (term1708 A B y H f x).
Proof. exact (MK_COMB (@lem335454) (@lem335475 A B y H f x)). Qed.
Lemma lem335477 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem335478 {A B : Type'} (y : B) (H : type549 A B) (f : A -> B) (x : A) : (term486 A B y H f x) = (term1709 A B y H f x).
Proof. exact (MK_COMB (@lem335477) (@lem335476 A B y H f x)). Qed.
Lemma lem335479 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (z : type1445 A B) (y : B) (f : A -> B) : (term1710 A B H lt2 x R z y f) = (term1711 A B H lt2 x R z y f).
Proof. exact (MK_COMB (@lem335478 A B y H f x) (@lem335453 A B lt2 x R z y f)). Qed.
Lemma lem335480 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (z : type1445 A B) (y : B) : (term1712 A B H lt2 x R z y) = (term1713 A B H lt2 x R z y).
Proof. exact (fun_ext (fun f : A -> B => @lem335479 A B H lt2 x R z y f)). Qed.
Lemma lem335481 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem335482 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (z : type1445 A B) (y : B) : (term1534 A B H lt2 x R z y) = (term1714 A B H lt2 x R z y).
Proof. exact (MK_COMB (@lem335481 A B) (@lem335480 A B H lt2 x R z y)). Qed.
Lemma lem335483 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (z : type1445 A B) : (term1536 A B H lt2 x R z) = (term1715 A B H lt2 x R z).
Proof. exact (fun_ext (fun y : B => @lem335482 A B H lt2 x R z y)). Qed.
Lemma lem335484 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem335485 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (z : type1445 A B) : (term1538 A B H lt2 x R z) = (term1716 A B H lt2 x R z).
Proof. exact (MK_COMB (@lem335484 B) (@lem335483 A B H lt2 x R z)). Qed.
Lemma lem335486 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem335487 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (z : type1445 A B) : (term1611 A B H lt2 x R z) = (term1717 A B H lt2 x R z).
Proof. exact (MK_COMB (@lem335486) (@lem335485 A B H lt2 x R z)). Qed.
Lemma lem335488 {A B : Type'} (z : type1445 A B) (f : A -> B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (f' : A -> B) (y' : B) (y : B) : (term1661 A B z f H lt2 x R f' y' y) = (term1718 A B z f H lt2 x R f' y' y).
Proof. exact (MK_COMB (@lem335487 A B H lt2 x R z) (@lem335359 A B f H lt2 x R f' y' y)). Qed.
Lemma lem335489 {A B : Type'} (z : type1445 A B) (f : A -> B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (f' : A -> B) (y' : B) (y : B) (h1 : term1661 A B z f H lt2 x R f' y' y) : term1718 A B z f H lt2 x R f' y' y.
Proof. exact (EQ_MP (@lem335488 A B z f H lt2 x R f' y' y) (@lem335149 A B z f H lt2 x R f' y' y h1)). Qed.
Lemma lem335494 {B : Type'} (y' : B) (y : B) : (y' = y) = (y' = y).
Proof. exact (eq_refl (y' = y)). Qed.
Lemma lem335495 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem335502 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem335503 {A B : Type'} (f : type1413 A B) (x : A) : (f x) = (@I (A -> B -> Prop) f x).
Proof. exact (@lem335502 A (B -> Prop) f x). Qed.
Lemma lem335504 {A B : Type'} (R : type1413 A B) (y : A) : (R y) = (@I (A -> B -> Prop) R y).
Proof. exact (@lem335503 A B R y). Qed.
Lemma lem335505 {B : Type'} (y' : B) : y' = y'.
Proof. exact (eq_refl y'). Qed.
Lemma lem335506 {A B : Type'} (R : type1413 A B) (y : A) (y' : B) : (R y y') = (@I (A -> B -> Prop) R y y').
Proof. exact (MK_COMB (@lem335504 A B R y) (@lem335505 B y')). Qed.
Lemma lem335508 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem335509 {B : Type'} (f : B -> Prop) (x : B) : (f x) = (@I (B -> Prop) f x).
Proof. exact (@lem335508 B Prop f x). Qed.
Lemma lem335510 {A B : Type'} (R : type1413 A B) (y : A) (y' : B) : (@I (A -> B -> Prop) R y y') = (term885 A B R y y').
Proof. exact (@lem335509 B (@I (A -> B -> Prop) R y) y'). Qed.
Lemma lem335512 {A B : Type'} (R : type1413 A B) (y : A) (y' : B) : (R y y') = (term885 A B R y y').
Proof. exact (TRANS (@lem335506 A B R y y') (@lem335510 A B R y y')). Qed.
Lemma lem335513 {A B : Type'} (R : type1413 A B) (y : A) (y' : B) : (term667 A B R y y') = (term886 A B R y y').
Proof. exact (MK_COMB (@lem335495) (@lem335512 A B R y y')). Qed.
Lemma lem335514 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem335515 {A B : Type'} (R : type1413 A B) (y : A) (y' : B) : (term502 A B R y y') = (term887 A B R y y').
Proof. exact (MK_COMB (@lem335514) (@lem335513 A B R y y')). Qed.
Lemma lem335516 {A B : Type'} (R : type1413 A B) (y : A) (y' : B) (y'' : B) : (term807 A B R y y' y'') = (term888 A B R y y' y'').
Proof. exact (MK_COMB (@lem335515 A B R y y') (@lem335494 B y' y'')). Qed.
Lemma lem335517 {A B : Type'} (R : type1413 A B) (y : A) (y' : B) : (term849 A B R y y') = (term889 A B R y y').
Proof. exact (fun_ext (fun y'' : B => @lem335516 A B R y y'' y')). Qed.
Lemma lem335518 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem335519 {A B : Type'} (R : type1413 A B) (y : A) (y' : B) : (term857 A B R y y') = (term890 A B R y y').
Proof. exact (MK_COMB (@lem335518 B) (@lem335517 A B R y y')). Qed.
Lemma lem335520 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem335527 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem335528 {A B : Type'} (f : type1413 A B) (x : A) : (f x) = (@I (A -> B -> Prop) f x).
Proof. exact (@lem335527 A (B -> Prop) f x). Qed.
Lemma lem335529 {A B : Type'} (R : type1413 A B) (y : A) : (R y) = (@I (A -> B -> Prop) R y).
Proof. exact (@lem335528 A B R y). Qed.
Lemma lem335530 {B : Type'} (y : B) : y = y.
Proof. exact (eq_refl y). Qed.
Lemma lem335531 {A B : Type'} (R : type1413 A B) (y : A) (y' : B) : (R y y') = (@I (A -> B -> Prop) R y y').
Proof. exact (MK_COMB (@lem335529 A B R y) (@lem335530 B y')). Qed.
Lemma lem335533 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem335534 {B : Type'} (f : B -> Prop) (x : B) : (f x) = (@I (B -> Prop) f x).
Proof. exact (@lem335533 B Prop f x). Qed.
Lemma lem335535 {A B : Type'} (R : type1413 A B) (y : A) (y' : B) : (@I (A -> B -> Prop) R y y') = (term885 A B R y y').
Proof. exact (@lem335534 B (@I (A -> B -> Prop) R y) y'). Qed.
Lemma lem335537 {A B : Type'} (R : type1413 A B) (y : A) (y' : B) : (R y y') = (term885 A B R y y').
Proof. exact (TRANS (@lem335531 A B R y y') (@lem335535 A B R y y')). Qed.
Lemma lem335538 {A B : Type'} (R : type1413 A B) (y : A) (y' : B) : (term667 A B R y y') = (term886 A B R y y').
Proof. exact (MK_COMB (@lem335520) (@lem335537 A B R y y')). Qed.
Lemma lem335539 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem335540 {A B : Type'} (R : type1413 A B) (y : A) (y' : B) : (term502 A B R y y') = (term887 A B R y y').
Proof. exact (MK_COMB (@lem335539) (@lem335538 A B R y y')). Qed.
Lemma lem335541 {A B : Type'} (R : type1413 A B) (y : A) (y' : B) : (term858 A B R y y') = (term891 A B R y y').
Proof. exact (MK_COMB (@lem335540 A B R y y') (@lem335519 A B R y y')). Qed.
Lemma lem335542 {A B : Type'} (R : type1413 A B) (y : A) : (term859 A B R y) = (term892 A B R y).
Proof. exact (fun_ext (fun y' : B => @lem335541 A B R y y')). Qed.
Lemma lem335543 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem335544 {A B : Type'} (R : type1413 A B) (y : A) : (term860 A B R y) = (term893 A B R y).
Proof. exact (MK_COMB (@lem335543 B) (@lem335542 A B R y)). Qed.
Lemma lem335551 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem335552 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (@lem335551 A B f x). Qed.
Lemma lem335554 {A B : Type'} (y'' : A -> B) (y : A) : (y'' y) = (@I (A -> B) y'' y).
Proof. exact (@lem335552 A B y'' y). Qed.
Lemma lem335555 {A B : Type'} (R : type1413 A B) (y : A) : (R y) = (R y).
Proof. exact (eq_refl (R y)). Qed.
Lemma lem335556 {A B : Type'} (R : type1413 A B) (y'' : A -> B) (y : A) : (term173 A B R y'' y) = (term896 A B R y'' y).
Proof. exact (MK_COMB (@lem335555 A B R y) (@lem335554 A B y'' y)). Qed.
Lemma lem335558 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem335559 {A B : Type'} (f : type1413 A B) (x : A) : (f x) = (@I (A -> B -> Prop) f x).
Proof. exact (@lem335558 A (B -> Prop) f x). Qed.
Lemma lem335560 {A B : Type'} (R : type1413 A B) (y : A) : (R y) = (@I (A -> B -> Prop) R y).
Proof. exact (@lem335559 A B R y). Qed.
Lemma lem335561 {A B : Type'} (y'' : A -> B) (y : A) : (@I (A -> B) y'' y) = (@I (A -> B) y'' y).
Proof. exact (eq_refl (@I (A -> B) y'' y)). Qed.
Lemma lem335562 {A B : Type'} (R : type1413 A B) (y'' : A -> B) (y : A) : (term896 A B R y'' y) = (term897 A B R y'' y).
Proof. exact (MK_COMB (@lem335560 A B R y) (@lem335561 A B y'' y)). Qed.
Lemma lem335564 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem335565 {B : Type'} (f : B -> Prop) (x : B) : (f x) = (@I (B -> Prop) f x).
Proof. exact (@lem335564 B Prop f x). Qed.
Lemma lem335566 {A B : Type'} (R : type1413 A B) (y'' : A -> B) (y : A) : (term897 A B R y'' y) = (term898 A B R y'' y).
Proof. exact (@lem335565 B (@I (A -> B -> Prop) R y) (@I (A -> B) y'' y)). Qed.
Lemma lem335567 {A B : Type'} (R : type1413 A B) (y'' : A -> B) (y : A) : (term896 A B R y'' y) = (term898 A B R y'' y).
Proof. exact (TRANS (@lem335562 A B R y'' y) (@lem335566 A B R y'' y)). Qed.
Lemma lem335568 {A B : Type'} (R : type1413 A B) (y'' : A -> B) (y : A) : (term173 A B R y'' y) = (term898 A B R y'' y).
Proof. exact (TRANS (@lem335556 A B R y'' y) (@lem335567 A B R y'' y)). Qed.
Lemma lem335569 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem335570 {A B : Type'} (R : type1413 A B) (y'' : A -> B) (y : A) : (term1719 A B R y'' y) = (term1720 A B R y'' y).
Proof. exact (MK_COMB (@lem335569) (@lem335568 A B R y'' y)). Qed.
Lemma lem335571 {A B : Type'} (y'' : A -> B) (R : type1413 A B) (y : A) : (term1721 A B y'' R y) = (term1722 A B y'' R y).
Proof. exact (MK_COMB (@lem335570 A B R y'' y) (@lem335544 A B R y)). Qed.
Lemma lem335572 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem335579 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem335580 {A : Type'} (f : type1402 A) (x : A) : (f x) = (@I (A -> A -> Prop) f x).
Proof. exact (@lem335579 A (A -> Prop) f x). Qed.
Lemma lem335581 {A : Type'} (lt2 : type1402 A) (y : A) : (lt2 y) = (@I (A -> A -> Prop) lt2 y).
Proof. exact (@lem335580 A lt2 y). Qed.
Lemma lem335582 {A : Type'} (x : A) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem335583 {A : Type'} (lt2 : type1402 A) (y : A) (x : A) : (lt2 y x) = (@I (A -> A -> Prop) lt2 y x).
Proof. exact (MK_COMB (@lem335581 A lt2 y) (@lem335582 A x)). Qed.
Lemma lem335585 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem335586 {A : Type'} (f : A -> Prop) (x : A) : (f x) = (@I (A -> Prop) f x).
Proof. exact (@lem335585 A Prop f x). Qed.
Lemma lem335587 {A : Type'} (lt2 : type1402 A) (y : A) (x : A) : (@I (A -> A -> Prop) lt2 y x) = (term1673 A lt2 y x).
Proof. exact (@lem335586 A (@I (A -> A -> Prop) lt2 y) x). Qed.
Lemma lem335589 {A : Type'} (lt2 : type1402 A) (y : A) (x : A) : (lt2 y x) = (term1673 A lt2 y x).
Proof. exact (TRANS (@lem335583 A lt2 y x) (@lem335587 A lt2 y x)). Qed.
Lemma lem335590 {A : Type'} (lt2 : type1402 A) (y : A) (x : A) : (term1119 A lt2 y x) = (term1674 A lt2 y x).
Proof. exact (MK_COMB (@lem335572) (@lem335589 A lt2 y x)). Qed.
Lemma lem335591 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem335592 {A : Type'} (lt2 : type1402 A) (y : A) (x : A) : (term1096 A lt2 y x) = (term1675 A lt2 y x).
Proof. exact (MK_COMB (@lem335591) (@lem335590 A lt2 y x)). Qed.
Lemma lem335593 {A B : Type'} (lt2 : type1402 A) (x : A) (y'' : A -> B) (R : type1413 A B) (y : A) : (term1145 A B lt2 x y'' R y) = (term1723 A B lt2 x y'' R y).
Proof. exact (MK_COMB (@lem335592 A lt2 y x) (@lem335571 A B y'' R y)). Qed.
Lemma lem335594 {A B : Type'} (lt2 : type1402 A) (x : A) (y'' : A -> B) (R : type1413 A B) : (term1147 A B lt2 x y'' R) = (term1724 A B lt2 x y'' R).
Proof. exact (fun_ext (fun y : A => @lem335593 A B lt2 x y'' R y)). Qed.
Lemma lem335595 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem335596 {A B : Type'} (lt2 : type1402 A) (x : A) (y'' : A -> B) (R : type1413 A B) : (term1149 A B lt2 x y'' R) = (term1725 A B lt2 x y'' R).
Proof. exact (MK_COMB (@lem335595 A) (@lem335594 A B lt2 x y'' R)). Qed.
Lemma lem335597 {A B : Type'} (lt2 : type1402 A) (x : A) (y'' : A -> B) (R : type1413 A B) (h1 : term1149 A B lt2 x y'' R) : term1725 A B lt2 x y'' R.
Proof. exact (EQ_MP (@lem335596 A B lt2 x y'' R) (@lem335150 A B lt2 x y'' R h1)). Qed.
Lemma lem335919 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem335920 {A B : Type'} (f : type549 A B) (x : A -> B) : (f x) = (@I ((A -> B) -> A -> B) f x).
Proof. exact (@lem335919 (A -> B) (A -> B) f x). Qed.
Lemma lem335921 {A B : Type'} (H : type549 A B) (f : A -> B) : (H f) = (@I ((A -> B) -> A -> B) H f).
Proof. exact (@lem335920 A B H f). Qed.
Lemma lem335922 {A : Type'} (x : A) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem335923 {A B : Type'} (H : type549 A B) (f : A -> B) (x : A) : (H f x) = (@I ((A -> B) -> A -> B) H f x).
Proof. exact (MK_COMB (@lem335921 A B H f) (@lem335922 A x)). Qed.
Lemma lem335925 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem335926 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (@lem335925 A B f x). Qed.
Lemma lem335927 {A B : Type'} (H : type549 A B) (f : A -> B) (x : A) : (@I ((A -> B) -> A -> B) H f x) = (term916 A B H f x).
Proof. exact (@lem335926 A B (@I ((A -> B) -> A -> B) H f) x). Qed.
Lemma lem335929 {A B : Type'} (H : type549 A B) (f : A -> B) (x : A) : (H f x) = (term916 A B H f x).
Proof. exact (TRANS (@lem335923 A B H f x) (@lem335927 A B H f x)). Qed.
Lemma lem335930 {A B : Type'} (S' : type1413 A B) (x : A) : (S' x) = (S' x).
Proof. exact (eq_refl (S' x)). Qed.
Lemma lem335931 {A B : Type'} (S' : type1413 A B) (H : type549 A B) (f : A -> B) (x : A) : (term72 A B S' H f x) = (term917 A B S' H f x).
Proof. exact (MK_COMB (@lem335930 A B S' x) (@lem335929 A B H f x)). Qed.
Lemma lem335933 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem335934 {A B : Type'} (f : type1413 A B) (x : A) : (f x) = (@I (A -> B -> Prop) f x).
Proof. exact (@lem335933 A (B -> Prop) f x). Qed.
Lemma lem335935 {A B : Type'} (S' : type1413 A B) (x : A) : (S' x) = (@I (A -> B -> Prop) S' x).
Proof. exact (@lem335934 A B S' x). Qed.
Lemma lem335936 {A B : Type'} (H : type549 A B) (f : A -> B) (x : A) : (term916 A B H f x) = (term916 A B H f x).
Proof. exact (eq_refl (term916 A B H f x)). Qed.
Lemma lem335937 {A B : Type'} (S' : type1413 A B) (H : type549 A B) (f : A -> B) (x : A) : (term917 A B S' H f x) = (term918 A B S' H f x).
Proof. exact (MK_COMB (@lem335935 A B S' x) (@lem335936 A B H f x)). Qed.
Lemma lem335939 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem335940 {B : Type'} (f : B -> Prop) (x : B) : (f x) = (@I (B -> Prop) f x).
Proof. exact (@lem335939 B Prop f x). Qed.
Lemma lem335941 {A B : Type'} (S' : type1413 A B) (H : type549 A B) (f : A -> B) (x : A) : (term918 A B S' H f x) = (term919 A B S' H f x).
Proof. exact (@lem335940 B (@I (A -> B -> Prop) S' x) (term916 A B H f x)). Qed.
Lemma lem335942 {A B : Type'} (S' : type1413 A B) (H : type549 A B) (f : A -> B) (x : A) : (term917 A B S' H f x) = (term919 A B S' H f x).
Proof. exact (TRANS (@lem335937 A B S' H f x) (@lem335941 A B S' H f x)). Qed.
Lemma lem335943 {A B : Type'} (S' : type1413 A B) (H : type549 A B) (f : A -> B) (x : A) : (term72 A B S' H f x) = (term919 A B S' H f x).
Proof. exact (TRANS (@lem335931 A B S' H f x) (@lem335942 A B S' H f x)). Qed.
Lemma lem335944 {B : Type'} : (@eq B) = (@eq B).
Proof. exact (eq_refl (@eq B)). Qed.
Lemma lem335951 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem335952 {A B : Type'} (f : type549 A B) (x : A -> B) : (f x) = (@I ((A -> B) -> A -> B) f x).
Proof. exact (@lem335951 (A -> B) (A -> B) f x). Qed.
Lemma lem335953 {A B : Type'} (H : type549 A B) (f : A -> B) : (H f) = (@I ((A -> B) -> A -> B) H f).
Proof. exact (@lem335952 A B H f). Qed.
Lemma lem335954 {A : Type'} (x : A) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem335955 {A B : Type'} (H : type549 A B) (f : A -> B) (x : A) : (H f x) = (@I ((A -> B) -> A -> B) H f x).
Proof. exact (MK_COMB (@lem335953 A B H f) (@lem335954 A x)). Qed.
Lemma lem335957 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem335958 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (@lem335957 A B f x). Qed.
Lemma lem335959 {A B : Type'} (H : type549 A B) (f : A -> B) (x : A) : (@I ((A -> B) -> A -> B) H f x) = (term916 A B H f x).
Proof. exact (@lem335958 A B (@I ((A -> B) -> A -> B) H f) x). Qed.
Lemma lem335961 {A B : Type'} (H : type549 A B) (f : A -> B) (x : A) : (H f x) = (term916 A B H f x).
Proof. exact (TRANS (@lem335955 A B H f x) (@lem335959 A B H f x)). Qed.
Lemma lem335968 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem335969 {A B : Type'} (f : type549 A B) (x : A -> B) : (f x) = (@I ((A -> B) -> A -> B) f x).
Proof. exact (@lem335968 (A -> B) (A -> B) f x). Qed.
Lemma lem335970 {A B : Type'} (H : type549 A B) (g : A -> B) : (H g) = (@I ((A -> B) -> A -> B) H g).
Proof. exact (@lem335969 A B H g). Qed.
Lemma lem335971 {A : Type'} (x : A) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem335972 {A B : Type'} (H : type549 A B) (g : A -> B) (x : A) : (H g x) = (@I ((A -> B) -> A -> B) H g x).
Proof. exact (MK_COMB (@lem335970 A B H g) (@lem335971 A x)). Qed.
Lemma lem335974 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem335975 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (@lem335974 A B f x). Qed.
Lemma lem335976 {A B : Type'} (H : type549 A B) (g : A -> B) (x : A) : (@I ((A -> B) -> A -> B) H g x) = (term916 A B H g x).
Proof. exact (@lem335975 A B (@I ((A -> B) -> A -> B) H g) x). Qed.
Lemma lem335978 {A B : Type'} (H : type549 A B) (g : A -> B) (x : A) : (H g x) = (term916 A B H g x).
Proof. exact (TRANS (@lem335972 A B H g x) (@lem335976 A B H g x)). Qed.
Lemma lem335979 {A B : Type'} (H : type549 A B) (f : A -> B) (x : A) : (term1202 A B H f x) = (term1203 A B H f x).
Proof. exact (MK_COMB (@lem335944 B) (@lem335961 A B H f x)). Qed.
Lemma lem335980 {A B : Type'} (f : A -> B) (H : type549 A B) (g : A -> B) (x : A) : ((H f x) = (H g x)) = ((term916 A B H f x) = (term916 A B H g x)).
Proof. exact (MK_COMB (@lem335979 A B H f x) (@lem335978 A B H g x)). Qed.
Lemma lem335981 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem335982 {A B : Type'} (f : A -> B) (H : type549 A B) (g : A -> B) (x : A) : (term1204 A B f H g x) = (term1205 A B f H g x).
Proof. exact (MK_COMB (@lem335981) (@lem335980 A B f H g x)). Qed.
Lemma lem335983 {A B : Type'} (g : A -> B) (S' : type1413 A B) (H : type549 A B) (f : A -> B) (x : A) : (term80 A B g S' H f x) = (term1206 A B g S' H f x).
Proof. exact (MK_COMB (@lem335982 A B f H g x) (@lem335943 A B S' H f x)). Qed.
Lemma lem335984 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem335985 {A B : Type'} (S' : type1413 A B) : S' = S'.
Proof. exact (eq_refl S'). Qed.
Lemma lem335994 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem335995 {A B : Type'} (f : type515 A B) (x : A -> B) : (f x) = (@I ((A -> B) -> (A -> B) -> A -> A) f x).
Proof. exact (@lem335994 (A -> B) (type548 A B) f x). Qed.
Lemma lem335996 {A B : Type'} (z'' : type515 A B) (f : A -> B) : (z'' f) = (@I ((A -> B) -> (A -> B) -> A -> A) z'' f).
Proof. exact (@lem335995 A B z'' f). Qed.
Lemma lem335997 {A B : Type'} (g : A -> B) : g = g.
Proof. exact (eq_refl g). Qed.
Lemma lem335998 {A B : Type'} (z'' : type515 A B) (f : A -> B) (g : A -> B) : (z'' f g) = (@I ((A -> B) -> (A -> B) -> A -> A) z'' f g).
Proof. exact (MK_COMB (@lem335996 A B z'' f) (@lem335997 A B g)). Qed.
Lemma lem336000 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem336001 {A B : Type'} (f : type548 A B) (x : A -> B) : (f x) = (@I ((A -> B) -> A -> A) f x).
Proof. exact (@lem336000 (A -> B) (A -> A) f x). Qed.
Lemma lem336002 {A B : Type'} (z'' : type515 A B) (f : A -> B) (g : A -> B) : (@I ((A -> B) -> (A -> B) -> A -> A) z'' f g) = (term1207 A B z'' f g).
Proof. exact (@lem336001 A B (@I ((A -> B) -> (A -> B) -> A -> A) z'' f) g). Qed.
Lemma lem336003 {A B : Type'} (z'' : type515 A B) (f : A -> B) (g : A -> B) : (z'' f g) = (term1207 A B z'' f g).
Proof. exact (TRANS (@lem335998 A B z'' f g) (@lem336002 A B z'' f g)). Qed.
Lemma lem336004 {A : Type'} (x : A) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem336005 {A B : Type'} (z'' : type515 A B) (f : A -> B) (g : A -> B) (x : A) : (z'' f g x) = (term1208 A B z'' f g x).
Proof. exact (MK_COMB (@lem336003 A B z'' f g) (@lem336004 A x)). Qed.
Lemma lem336007 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem336008 {A : Type'} (f : A -> A) (x : A) : (f x) = (@I (A -> A) f x).
Proof. exact (@lem336007 A A f x). Qed.
Lemma lem336009 {A B : Type'} (z'' : type515 A B) (f : A -> B) (g : A -> B) (x : A) : (term1208 A B z'' f g x) = (term1209 A B z'' f g x).
Proof. exact (@lem336008 A (term1207 A B z'' f g) x). Qed.
Lemma lem336011 {A B : Type'} (z'' : type515 A B) (f : A -> B) (g : A -> B) (x : A) : (z'' f g x) = (term1209 A B z'' f g x).
Proof. exact (TRANS (@lem336005 A B z'' f g x) (@lem336009 A B z'' f g x)). Qed.
Lemma lem336012 {A B : Type'} (f : A -> B) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem336021 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem336022 {A B : Type'} (f : type515 A B) (x : A -> B) : (f x) = (@I ((A -> B) -> (A -> B) -> A -> A) f x).
Proof. exact (@lem336021 (A -> B) (type548 A B) f x). Qed.
Lemma lem336023 {A B : Type'} (z'' : type515 A B) (f : A -> B) : (z'' f) = (@I ((A -> B) -> (A -> B) -> A -> A) z'' f).
Proof. exact (@lem336022 A B z'' f). Qed.
Lemma lem336024 {A B : Type'} (g : A -> B) : g = g.
Proof. exact (eq_refl g). Qed.
Lemma lem336025 {A B : Type'} (z'' : type515 A B) (f : A -> B) (g : A -> B) : (z'' f g) = (@I ((A -> B) -> (A -> B) -> A -> A) z'' f g).
Proof. exact (MK_COMB (@lem336023 A B z'' f) (@lem336024 A B g)). Qed.
Lemma lem336027 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem336028 {A B : Type'} (f : type548 A B) (x : A -> B) : (f x) = (@I ((A -> B) -> A -> A) f x).
Proof. exact (@lem336027 (A -> B) (A -> A) f x). Qed.
Lemma lem336029 {A B : Type'} (z'' : type515 A B) (f : A -> B) (g : A -> B) : (@I ((A -> B) -> (A -> B) -> A -> A) z'' f g) = (term1207 A B z'' f g).
Proof. exact (@lem336028 A B (@I ((A -> B) -> (A -> B) -> A -> A) z'' f) g). Qed.
Lemma lem336030 {A B : Type'} (z'' : type515 A B) (f : A -> B) (g : A -> B) : (z'' f g) = (term1207 A B z'' f g).
Proof. exact (TRANS (@lem336025 A B z'' f g) (@lem336029 A B z'' f g)). Qed.
Lemma lem336031 {A : Type'} (x : A) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem336032 {A B : Type'} (z'' : type515 A B) (f : A -> B) (g : A -> B) (x : A) : (z'' f g x) = (term1208 A B z'' f g x).
Proof. exact (MK_COMB (@lem336030 A B z'' f g) (@lem336031 A x)). Qed.
Lemma lem336034 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem336035 {A : Type'} (f : A -> A) (x : A) : (f x) = (@I (A -> A) f x).
Proof. exact (@lem336034 A A f x). Qed.
Lemma lem336036 {A B : Type'} (z'' : type515 A B) (f : A -> B) (g : A -> B) (x : A) : (term1208 A B z'' f g x) = (term1209 A B z'' f g x).
Proof. exact (@lem336035 A (term1207 A B z'' f g) x). Qed.
Lemma lem336038 {A B : Type'} (z'' : type515 A B) (f : A -> B) (g : A -> B) (x : A) : (z'' f g x) = (term1209 A B z'' f g x).
Proof. exact (TRANS (@lem336032 A B z'' f g x) (@lem336036 A B z'' f g x)). Qed.
Lemma lem336039 {A B : Type'} (z'' : type515 A B) (f : A -> B) (g : A -> B) (x : A) : (term1210 A B z'' f g x) = (term1211 A B z'' f g x).
Proof. exact (MK_COMB (@lem336012 A B f) (@lem336038 A B z'' f g x)). Qed.
Lemma lem336041 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem336042 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (@lem336041 A B f x). Qed.
Lemma lem336043 {A B : Type'} (z'' : type515 A B) (f : A -> B) (g : A -> B) (x : A) : (term1211 A B z'' f g x) = (term1212 A B z'' f g x).
Proof. exact (@lem336042 A B f (term1209 A B z'' f g x)). Qed.
Lemma lem336044 {A B : Type'} (z'' : type515 A B) (f : A -> B) (g : A -> B) (x : A) : (term1210 A B z'' f g x) = (term1212 A B z'' f g x).
Proof. exact (TRANS (@lem336039 A B z'' f g x) (@lem336043 A B z'' f g x)). Qed.
Lemma lem336045 {A B : Type'} (S' : type1413 A B) (z'' : type515 A B) (f : A -> B) (g : A -> B) (x : A) : (term1213 A B S' z'' f g x) = (term1214 A B S' z'' f g x).
Proof. exact (MK_COMB (@lem335985 A B S') (@lem336011 A B z'' f g x)). Qed.
Lemma lem336046 {A B : Type'} (S' : type1413 A B) (z'' : type515 A B) (f : A -> B) (g : A -> B) (x : A) : (term1215 A B S' z'' f g x) = (term1216 A B S' z'' f g x).
Proof. exact (MK_COMB (@lem336045 A B S' z'' f g x) (@lem336044 A B z'' f g x)). Qed.
Lemma lem336048 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem336049 {A B : Type'} (f : type1413 A B) (x : A) : (f x) = (@I (A -> B -> Prop) f x).
Proof. exact (@lem336048 A (B -> Prop) f x). Qed.
Lemma lem336050 {A B : Type'} (S' : type1413 A B) (z'' : type515 A B) (f : A -> B) (g : A -> B) (x : A) : (term1214 A B S' z'' f g x) = (term1217 A B S' z'' f g x).
Proof. exact (@lem336049 A B S' (term1209 A B z'' f g x)). Qed.
Lemma lem336051 {A B : Type'} (z'' : type515 A B) (f : A -> B) (g : A -> B) (x : A) : (term1212 A B z'' f g x) = (term1212 A B z'' f g x).
Proof. exact (eq_refl (term1212 A B z'' f g x)). Qed.
Lemma lem336052 {A B : Type'} (S' : type1413 A B) (z'' : type515 A B) (f : A -> B) (g : A -> B) (x : A) : (term1216 A B S' z'' f g x) = (term1218 A B S' z'' f g x).
Proof. exact (MK_COMB (@lem336050 A B S' z'' f g x) (@lem336051 A B z'' f g x)). Qed.
Lemma lem336054 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem336055 {B : Type'} (f : B -> Prop) (x : B) : (f x) = (@I (B -> Prop) f x).
Proof. exact (@lem336054 B Prop f x). Qed.
Lemma lem336056 {A B : Type'} (S' : type1413 A B) (z'' : type515 A B) (f : A -> B) (g : A -> B) (x : A) : (term1218 A B S' z'' f g x) = (term1219 A B S' z'' f g x).
Proof. exact (@lem336055 B (term1217 A B S' z'' f g x) (term1212 A B z'' f g x)). Qed.
Lemma lem336057 {A B : Type'} (S' : type1413 A B) (z'' : type515 A B) (f : A -> B) (g : A -> B) (x : A) : (term1216 A B S' z'' f g x) = (term1219 A B S' z'' f g x).
Proof. exact (TRANS (@lem336052 A B S' z'' f g x) (@lem336056 A B S' z'' f g x)). Qed.
Lemma lem336058 {A B : Type'} (S' : type1413 A B) (z'' : type515 A B) (f : A -> B) (g : A -> B) (x : A) : (term1215 A B S' z'' f g x) = (term1219 A B S' z'' f g x).
Proof. exact (TRANS (@lem336046 A B S' z'' f g x) (@lem336057 A B S' z'' f g x)). Qed.
Lemma lem336059 {A B : Type'} (S' : type1413 A B) (z'' : type515 A B) (f : A -> B) (g : A -> B) (x : A) : (term1220 A B S' z'' f g x) = (term1221 A B S' z'' f g x).
Proof. exact (MK_COMB (@lem335984) (@lem336058 A B S' z'' f g x)). Qed.
Lemma lem336060 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem336061 {B : Type'} : (@eq B) = (@eq B).
Proof. exact (eq_refl (@eq B)). Qed.
Lemma lem336062 {A B : Type'} (f : A -> B) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem336071 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem336072 {A B : Type'} (f : type515 A B) (x : A -> B) : (f x) = (@I ((A -> B) -> (A -> B) -> A -> A) f x).
Proof. exact (@lem336071 (A -> B) (type548 A B) f x). Qed.
Lemma lem336073 {A B : Type'} (z'' : type515 A B) (f : A -> B) : (z'' f) = (@I ((A -> B) -> (A -> B) -> A -> A) z'' f).
Proof. exact (@lem336072 A B z'' f). Qed.
Lemma lem336074 {A B : Type'} (g : A -> B) : g = g.
Proof. exact (eq_refl g). Qed.
Lemma lem336075 {A B : Type'} (z'' : type515 A B) (f : A -> B) (g : A -> B) : (z'' f g) = (@I ((A -> B) -> (A -> B) -> A -> A) z'' f g).
Proof. exact (MK_COMB (@lem336073 A B z'' f) (@lem336074 A B g)). Qed.
Lemma lem336077 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem336078 {A B : Type'} (f : type548 A B) (x : A -> B) : (f x) = (@I ((A -> B) -> A -> A) f x).
Proof. exact (@lem336077 (A -> B) (A -> A) f x). Qed.
Lemma lem336079 {A B : Type'} (z'' : type515 A B) (f : A -> B) (g : A -> B) : (@I ((A -> B) -> (A -> B) -> A -> A) z'' f g) = (term1207 A B z'' f g).
Proof. exact (@lem336078 A B (@I ((A -> B) -> (A -> B) -> A -> A) z'' f) g). Qed.
Lemma lem336080 {A B : Type'} (z'' : type515 A B) (f : A -> B) (g : A -> B) : (z'' f g) = (term1207 A B z'' f g).
Proof. exact (TRANS (@lem336075 A B z'' f g) (@lem336079 A B z'' f g)). Qed.
Lemma lem336081 {A : Type'} (x : A) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem336082 {A B : Type'} (z'' : type515 A B) (f : A -> B) (g : A -> B) (x : A) : (z'' f g x) = (term1208 A B z'' f g x).
Proof. exact (MK_COMB (@lem336080 A B z'' f g) (@lem336081 A x)). Qed.
Lemma lem336084 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem336085 {A : Type'} (f : A -> A) (x : A) : (f x) = (@I (A -> A) f x).
Proof. exact (@lem336084 A A f x). Qed.
Lemma lem336086 {A B : Type'} (z'' : type515 A B) (f : A -> B) (g : A -> B) (x : A) : (term1208 A B z'' f g x) = (term1209 A B z'' f g x).
Proof. exact (@lem336085 A (term1207 A B z'' f g) x). Qed.
Lemma lem336088 {A B : Type'} (z'' : type515 A B) (f : A -> B) (g : A -> B) (x : A) : (z'' f g x) = (term1209 A B z'' f g x).
Proof. exact (TRANS (@lem336082 A B z'' f g x) (@lem336086 A B z'' f g x)). Qed.
Lemma lem336089 {A B : Type'} (z'' : type515 A B) (f : A -> B) (g : A -> B) (x : A) : (term1210 A B z'' f g x) = (term1211 A B z'' f g x).
Proof. exact (MK_COMB (@lem336062 A B f) (@lem336088 A B z'' f g x)). Qed.
Lemma lem336091 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem336092 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (@lem336091 A B f x). Qed.
Lemma lem336093 {A B : Type'} (z'' : type515 A B) (f : A -> B) (g : A -> B) (x : A) : (term1211 A B z'' f g x) = (term1212 A B z'' f g x).
Proof. exact (@lem336092 A B f (term1209 A B z'' f g x)). Qed.
Lemma lem336094 {A B : Type'} (z'' : type515 A B) (f : A -> B) (g : A -> B) (x : A) : (term1210 A B z'' f g x) = (term1212 A B z'' f g x).
Proof. exact (TRANS (@lem336089 A B z'' f g x) (@lem336093 A B z'' f g x)). Qed.
Lemma lem336095 {A B : Type'} (g : A -> B) : g = g.
Proof. exact (eq_refl g). Qed.
Lemma lem336104 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem336105 {A B : Type'} (f : type515 A B) (x : A -> B) : (f x) = (@I ((A -> B) -> (A -> B) -> A -> A) f x).
Proof. exact (@lem336104 (A -> B) (type548 A B) f x). Qed.
Lemma lem336106 {A B : Type'} (z'' : type515 A B) (f : A -> B) : (z'' f) = (@I ((A -> B) -> (A -> B) -> A -> A) z'' f).
Proof. exact (@lem336105 A B z'' f). Qed.
Lemma lem336107 {A B : Type'} (g : A -> B) : g = g.
Proof. exact (eq_refl g). Qed.
Lemma lem336108 {A B : Type'} (z'' : type515 A B) (f : A -> B) (g : A -> B) : (z'' f g) = (@I ((A -> B) -> (A -> B) -> A -> A) z'' f g).
Proof. exact (MK_COMB (@lem336106 A B z'' f) (@lem336107 A B g)). Qed.
Lemma lem336110 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem336111 {A B : Type'} (f : type548 A B) (x : A -> B) : (f x) = (@I ((A -> B) -> A -> A) f x).
Proof. exact (@lem336110 (A -> B) (A -> A) f x). Qed.
Lemma lem336112 {A B : Type'} (z'' : type515 A B) (f : A -> B) (g : A -> B) : (@I ((A -> B) -> (A -> B) -> A -> A) z'' f g) = (term1207 A B z'' f g).
Proof. exact (@lem336111 A B (@I ((A -> B) -> (A -> B) -> A -> A) z'' f) g). Qed.
Lemma lem336113 {A B : Type'} (z'' : type515 A B) (f : A -> B) (g : A -> B) : (z'' f g) = (term1207 A B z'' f g).
Proof. exact (TRANS (@lem336108 A B z'' f g) (@lem336112 A B z'' f g)). Qed.
Lemma lem336114 {A : Type'} (x : A) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem336115 {A B : Type'} (z'' : type515 A B) (f : A -> B) (g : A -> B) (x : A) : (z'' f g x) = (term1208 A B z'' f g x).
Proof. exact (MK_COMB (@lem336113 A B z'' f g) (@lem336114 A x)). Qed.
Lemma lem336117 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem336118 {A : Type'} (f : A -> A) (x : A) : (f x) = (@I (A -> A) f x).
Proof. exact (@lem336117 A A f x). Qed.
Lemma lem336119 {A B : Type'} (z'' : type515 A B) (f : A -> B) (g : A -> B) (x : A) : (term1208 A B z'' f g x) = (term1209 A B z'' f g x).
Proof. exact (@lem336118 A (term1207 A B z'' f g) x). Qed.
Lemma lem336121 {A B : Type'} (z'' : type515 A B) (f : A -> B) (g : A -> B) (x : A) : (z'' f g x) = (term1209 A B z'' f g x).
Proof. exact (TRANS (@lem336115 A B z'' f g x) (@lem336119 A B z'' f g x)). Qed.
Lemma lem336122 {A B : Type'} (z'' : type515 A B) (f : A -> B) (g : A -> B) (x : A) : (term1222 A B z'' f g x) = (term1223 A B z'' f g x).
Proof. exact (MK_COMB (@lem336095 A B g) (@lem336121 A B z'' f g x)). Qed.
Lemma lem336124 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem336125 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (@lem336124 A B f x). Qed.
Lemma lem336126 {A B : Type'} (z'' : type515 A B) (f : A -> B) (g : A -> B) (x : A) : (term1223 A B z'' f g x) = (term1224 A B z'' f g x).
Proof. exact (@lem336125 A B g (term1209 A B z'' f g x)). Qed.
Lemma lem336127 {A B : Type'} (z'' : type515 A B) (f : A -> B) (g : A -> B) (x : A) : (term1222 A B z'' f g x) = (term1224 A B z'' f g x).
Proof. exact (TRANS (@lem336122 A B z'' f g x) (@lem336126 A B z'' f g x)). Qed.
Lemma lem336128 {A B : Type'} (z'' : type515 A B) (f : A -> B) (g : A -> B) (x : A) : (term1225 A B z'' f g x) = (term1226 A B z'' f g x).
Proof. exact (MK_COMB (@lem336061 B) (@lem336094 A B z'' f g x)). Qed.
Lemma lem336129 {A B : Type'} (z'' : type515 A B) (f : A -> B) (g : A -> B) (x : A) : ((term1210 A B z'' f g x) = (term1222 A B z'' f g x)) = ((term1212 A B z'' f g x) = (term1224 A B z'' f g x)).
Proof. exact (MK_COMB (@lem336128 A B z'' f g x) (@lem336127 A B z'' f g x)). Qed.
Lemma lem336130 {A B : Type'} (z'' : type515 A B) (f : A -> B) (g : A -> B) (x : A) : (term1227 A B z'' f g x) = (term1228 A B z'' f g x).
Proof. exact (MK_COMB (@lem336060) (@lem336129 A B z'' f g x)). Qed.
Lemma lem336131 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem336132 {A B : Type'} (z'' : type515 A B) (f : A -> B) (g : A -> B) (x : A) : (term1229 A B z'' f g x) = (term1230 A B z'' f g x).
Proof. exact (MK_COMB (@lem336131) (@lem336130 A B z'' f g x)). Qed.
Lemma lem336133 {A B : Type'} (S' : type1413 A B) (z'' : type515 A B) (f : A -> B) (g : A -> B) (x : A) : (term1231 A B S' z'' f g x) = (term1232 A B S' z'' f g x).
Proof. exact (MK_COMB (@lem336132 A B z'' f g x) (@lem336059 A B S' z'' f g x)). Qed.
Lemma lem336134 {A : Type'} (lt2 : type1402 A) : lt2 = lt2.
Proof. exact (eq_refl lt2). Qed.
Lemma lem336143 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem336144 {A B : Type'} (f : type515 A B) (x : A -> B) : (f x) = (@I ((A -> B) -> (A -> B) -> A -> A) f x).
Proof. exact (@lem336143 (A -> B) (type548 A B) f x). Qed.
Lemma lem336145 {A B : Type'} (z'' : type515 A B) (f : A -> B) : (z'' f) = (@I ((A -> B) -> (A -> B) -> A -> A) z'' f).
Proof. exact (@lem336144 A B z'' f). Qed.
Lemma lem336146 {A B : Type'} (g : A -> B) : g = g.
Proof. exact (eq_refl g). Qed.
Lemma lem336147 {A B : Type'} (z'' : type515 A B) (f : A -> B) (g : A -> B) : (z'' f g) = (@I ((A -> B) -> (A -> B) -> A -> A) z'' f g).
Proof. exact (MK_COMB (@lem336145 A B z'' f) (@lem336146 A B g)). Qed.
Lemma lem336149 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem336150 {A B : Type'} (f : type548 A B) (x : A -> B) : (f x) = (@I ((A -> B) -> A -> A) f x).
Proof. exact (@lem336149 (A -> B) (A -> A) f x). Qed.
Lemma lem336151 {A B : Type'} (z'' : type515 A B) (f : A -> B) (g : A -> B) : (@I ((A -> B) -> (A -> B) -> A -> A) z'' f g) = (term1207 A B z'' f g).
Proof. exact (@lem336150 A B (@I ((A -> B) -> (A -> B) -> A -> A) z'' f) g). Qed.
Lemma lem336152 {A B : Type'} (z'' : type515 A B) (f : A -> B) (g : A -> B) : (z'' f g) = (term1207 A B z'' f g).
Proof. exact (TRANS (@lem336147 A B z'' f g) (@lem336151 A B z'' f g)). Qed.
Lemma lem336153 {A : Type'} (x : A) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem336154 {A B : Type'} (z'' : type515 A B) (f : A -> B) (g : A -> B) (x : A) : (z'' f g x) = (term1208 A B z'' f g x).
Proof. exact (MK_COMB (@lem336152 A B z'' f g) (@lem336153 A x)). Qed.
Lemma lem336156 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem336157 {A : Type'} (f : A -> A) (x : A) : (f x) = (@I (A -> A) f x).
Proof. exact (@lem336156 A A f x). Qed.
Lemma lem336158 {A B : Type'} (z'' : type515 A B) (f : A -> B) (g : A -> B) (x : A) : (term1208 A B z'' f g x) = (term1209 A B z'' f g x).
Proof. exact (@lem336157 A (term1207 A B z'' f g) x). Qed.
Lemma lem336160 {A B : Type'} (z'' : type515 A B) (f : A -> B) (g : A -> B) (x : A) : (z'' f g x) = (term1209 A B z'' f g x).
Proof. exact (TRANS (@lem336154 A B z'' f g x) (@lem336158 A B z'' f g x)). Qed.
Lemma lem336161 {A : Type'} (x : A) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem336162 {A B : Type'} (lt2 : type1402 A) (z'' : type515 A B) (f : A -> B) (g : A -> B) (x : A) : (term1233 A B lt2 z'' f g x) = (term1234 A B lt2 z'' f g x).
Proof. exact (MK_COMB (@lem336134 A lt2) (@lem336160 A B z'' f g x)). Qed.
Lemma lem336163 {A B : Type'} (lt2 : type1402 A) (z'' : type515 A B) (f : A -> B) (g : A -> B) (x : A) : (term1235 A B lt2 z'' f g x) = (term1236 A B lt2 z'' f g x).
Proof. exact (MK_COMB (@lem336162 A B lt2 z'' f g x) (@lem336161 A x)). Qed.
Lemma lem336165 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem336166 {A : Type'} (f : type1402 A) (x : A) : (f x) = (@I (A -> A -> Prop) f x).
Proof. exact (@lem336165 A (A -> Prop) f x). Qed.
Lemma lem336167 {A B : Type'} (lt2 : type1402 A) (z'' : type515 A B) (f : A -> B) (g : A -> B) (x : A) : (term1234 A B lt2 z'' f g x) = (term1237 A B lt2 z'' f g x).
Proof. exact (@lem336166 A lt2 (term1209 A B z'' f g x)). Qed.
Lemma lem336168 {A : Type'} (x : A) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem336169 {A B : Type'} (lt2 : type1402 A) (z'' : type515 A B) (f : A -> B) (g : A -> B) (x : A) : (term1236 A B lt2 z'' f g x) = (term1238 A B lt2 z'' f g x).
Proof. exact (MK_COMB (@lem336167 A B lt2 z'' f g x) (@lem336168 A x)). Qed.
Lemma lem336171 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem336172 {A : Type'} (f : A -> Prop) (x : A) : (f x) = (@I (A -> Prop) f x).
Proof. exact (@lem336171 A Prop f x). Qed.
Lemma lem336173 {A B : Type'} (lt2 : type1402 A) (z'' : type515 A B) (f : A -> B) (g : A -> B) (x : A) : (term1238 A B lt2 z'' f g x) = (term1239 A B lt2 z'' f g x).
Proof. exact (@lem336172 A (term1237 A B lt2 z'' f g x) x). Qed.
Lemma lem336174 {A B : Type'} (lt2 : type1402 A) (z'' : type515 A B) (f : A -> B) (g : A -> B) (x : A) : (term1236 A B lt2 z'' f g x) = (term1239 A B lt2 z'' f g x).
Proof. exact (TRANS (@lem336169 A B lt2 z'' f g x) (@lem336173 A B lt2 z'' f g x)). Qed.
Lemma lem336175 {A B : Type'} (lt2 : type1402 A) (z'' : type515 A B) (f : A -> B) (g : A -> B) (x : A) : (term1235 A B lt2 z'' f g x) = (term1239 A B lt2 z'' f g x).
Proof. exact (TRANS (@lem336163 A B lt2 z'' f g x) (@lem336174 A B lt2 z'' f g x)). Qed.
Lemma lem336176 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem336177 {A B : Type'} (lt2 : type1402 A) (z'' : type515 A B) (f : A -> B) (g : A -> B) (x : A) : (term1240 A B lt2 z'' f g x) = (term1241 A B lt2 z'' f g x).
Proof. exact (MK_COMB (@lem336176) (@lem336175 A B lt2 z'' f g x)). Qed.
Lemma lem336178 {A B : Type'} (lt2 : type1402 A) (S' : type1413 A B) (z'' : type515 A B) (f : A -> B) (g : A -> B) (x : A) : (term1242 A B lt2 S' z'' f g x) = (term1243 A B lt2 S' z'' f g x).
Proof. exact (MK_COMB (@lem336177 A B lt2 z'' f g x) (@lem336133 A B S' z'' f g x)). Qed.
Lemma lem336179 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem336180 {A B : Type'} (lt2 : type1402 A) (S' : type1413 A B) (z'' : type515 A B) (f : A -> B) (g : A -> B) (x : A) : (term1244 A B lt2 S' z'' f g x) = (term1245 A B lt2 S' z'' f g x).
Proof. exact (MK_COMB (@lem336179) (@lem336178 A B lt2 S' z'' f g x)). Qed.
Lemma lem336181 {A B : Type'} (lt2 : type1402 A) (z'' : type515 A B) (g : A -> B) (S' : type1413 A B) (H : type549 A B) (f : A -> B) (x : A) : (term1246 A B lt2 z'' g S' H f x) = (term1247 A B lt2 z'' g S' H f x).
Proof. exact (MK_COMB (@lem336180 A B lt2 S' z'' f g x) (@lem335983 A B g S' H f x)). Qed.
Lemma lem336182 {A B : Type'} (lt2 : type1402 A) (z'' : type515 A B) (g : A -> B) (S' : type1413 A B) (H : type549 A B) (f : A -> B) : (term1248 A B lt2 z'' g S' H f) = (term1249 A B lt2 z'' g S' H f).
Proof. exact (fun_ext (fun x : A => @lem336181 A B lt2 z'' g S' H f x)). Qed.
Lemma lem336183 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem336184 {A B : Type'} (lt2 : type1402 A) (z'' : type515 A B) (g : A -> B) (S' : type1413 A B) (H : type549 A B) (f : A -> B) : (term1250 A B lt2 z'' g S' H f) = (term1251 A B lt2 z'' g S' H f).
Proof. exact (MK_COMB (@lem336183 A) (@lem336182 A B lt2 z'' g S' H f)). Qed.
Lemma lem336185 {A B : Type'} (lt2 : type1402 A) (z'' : type515 A B) (S' : type1413 A B) (H : type549 A B) (f : A -> B) : (term1252 A B lt2 z'' S' H f) = (term1253 A B lt2 z'' S' H f).
Proof. exact (fun_ext (fun g : A -> B => @lem336184 A B lt2 z'' g S' H f)). Qed.
Lemma lem336186 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem336187 {A B : Type'} (lt2 : type1402 A) (z'' : type515 A B) (S' : type1413 A B) (H : type549 A B) (f : A -> B) : (term278 A B lt2 z'' S' H f) = (term1254 A B lt2 z'' S' H f).
Proof. exact (MK_COMB (@lem336186 A B) (@lem336185 A B lt2 z'' S' H f)). Qed.
Lemma lem336188 {A B : Type'} (lt2 : type1402 A) (z'' : type515 A B) (S' : type1413 A B) (H : type549 A B) : (term280 A B lt2 z'' S' H) = (term1255 A B lt2 z'' S' H).
Proof. exact (fun_ext (fun f : A -> B => @lem336187 A B lt2 z'' S' H f)). Qed.
Lemma lem336189 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem336190 {A B : Type'} (lt2 : type1402 A) (z'' : type515 A B) (S' : type1413 A B) (H : type549 A B) : (term282 A B lt2 z'' S' H) = (term1256 A B lt2 z'' S' H).
Proof. exact (MK_COMB (@lem336189 A B) (@lem336188 A B lt2 z'' S' H)). Qed.
Lemma lem336191 {A B : Type'} (lt2 : type1402 A) (z'' : type515 A B) (S' : type1413 A B) (H : type549 A B) (h1 : term282 A B lt2 z'' S' H) : term1256 A B lt2 z'' S' H.
Proof. exact (EQ_MP (@lem336190 A B lt2 z'' S' H) (@lem335154 A B lt2 z'' S' H h1)). Qed.
Lemma lem336192 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (z : type1445 A B) (h1 : term1716 A B H lt2 x R z) : term1716 A B H lt2 x R z.
Proof. exact (h1). Qed.
Lemma lem336193 {A B : Type'} (f : A -> B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (f' : A -> B) (y' : B) (y : B) (h1 : term1683 A B f H lt2 x R f' y' y) : term1683 A B f H lt2 x R f' y' y.
Proof. exact (h1). Qed.
Lemma lem336194 {A B : Type'} (f : A -> B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (f' : A -> B) (y' : B) (y : B) (h1 : term1683 A B f H lt2 x R f' y' y) : term1682 A B H lt2 x R f' y' y.
Proof. exact (proj2 (@lem336193 A B f H lt2 x R f' y' y h1)). Qed.
Lemma lem336195 {A B : Type'} (f : A -> B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (f' : A -> B) (y' : B) (y : B) (h1 : term1683 A B f H lt2 x R f' y' y) : term1680 A B y H lt2 x R f.
Proof. exact (proj1 (@lem336193 A B f H lt2 x R f' y' y h1)). Qed.
Lemma lem336197 {A B : Type'} (f : A -> B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (f' : A -> B) (y' : B) (y : B) (h1 : term1683 A B f H lt2 x R f' y' y) : term1680 A B y' H lt2 x R f'.
Proof. exact (proj1 (@lem336194 A B f H lt2 x R f' y' y h1)). Qed.
Lemma lem336198 {A B : Type'} (f : A -> B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (f' : A -> B) (y' : B) (y : B) (h1 : term1683 A B f H lt2 x R f' y' y) : term1678 A B lt2 x R f'.
Proof. exact (proj2 (@lem336197 A B f H lt2 x R f' y' y h1)). Qed.
Lemma lem336200 {A B : Type'} (f : A -> B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (f' : A -> B) (y' : B) (y : B) (h1 : term1683 A B f H lt2 x R f' y' y) : term1678 A B lt2 x R f.
Proof. exact (proj2 (@lem336195 A B f H lt2 x R f' y' y h1)). Qed.
Lemma lem336219 {A : Type'} (P : Prop) (Q : A -> Prop) : (term846 A P Q) = (term845 A P Q).
Proof. exact (EQ_MP (@lem19007 A P Q) (@lem19006 A P Q)). Qed.
Lemma lem336220 {B : Type'} (P : Prop) (Q : B -> Prop) : (term846 B P Q) = (term845 B P Q).
Proof. exact (@lem336219 B P Q). Qed.
Lemma lem336221 {A B : Type'} (R : type1413 A B) (y : A) (y' : B) : (term958 A B R y y') = (term959 A B R y y').
Proof. exact (@lem336220 B (term886 A B R y y') (term889 A B R y y')). Qed.
Lemma lem336222 {A B : Type'} (R : type1413 A B) (y : A) (y' : B) (y'' : B) : (term960 A B R y y'' y') = (term888 A B R y y' y'').
Proof. exact (eq_refl (term960 A B R y y'' y')). Qed.
Lemma lem336223 {A B : Type'} (R : type1413 A B) (y : A) (y' : B) : (term961 A B R y y') = (term889 A B R y y').
Proof. exact (fun_ext (fun y'' : B => @lem336222 A B R y y'' y')). Qed.
Lemma lem336224 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem336225 {A B : Type'} (R : type1413 A B) (y : A) (y' : B) : (term962 A B R y y') = (term890 A B R y y').
Proof. exact (MK_COMB (@lem336224 B) (@lem336223 A B R y y')). Qed.
Lemma lem336226 {A B : Type'} (R : type1413 A B) (y : A) (y' : B) : (term887 A B R y y') = (term887 A B R y y').
Proof. exact (eq_refl (term887 A B R y y')). Qed.
Lemma lem336227 {A B : Type'} (R : type1413 A B) (y : A) (y' : B) : (term958 A B R y y') = (term891 A B R y y').
Proof. exact (MK_COMB (@lem336226 A B R y y') (@lem336225 A B R y y')). Qed.
Lemma lem336228 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem336229 {A B : Type'} (R : type1413 A B) (y : A) (y' : B) : (term963 A B R y y') = (term964 A B R y y').
Proof. exact (MK_COMB (@lem336228) (@lem336227 A B R y y')). Qed.
Lemma lem336230 {A B : Type'} (R : type1413 A B) (y : A) (y' : B) (y'' : B) : (term960 A B R y y'' y') = (term888 A B R y y' y'').
Proof. exact (eq_refl (term960 A B R y y'' y')). Qed.
Lemma lem336231 {A B : Type'} (R : type1413 A B) (y : A) (y' : B) : (term887 A B R y y') = (term887 A B R y y').
Proof. exact (eq_refl (term887 A B R y y')). Qed.
Lemma lem336232 {A B : Type'} (R : type1413 A B) (y : A) (y' : B) (y'' : B) : (term965 A B R y y'' y') = (term966 A B R y y' y'').
Proof. exact (MK_COMB (@lem336231 A B R y y'') (@lem336230 A B R y y' y'')). Qed.
Lemma lem336233 {A B : Type'} (R : type1413 A B) (y : A) (y' : B) : (term967 A B R y y') = (term968 A B R y y').
Proof. exact (fun_ext (fun y'' : B => @lem336232 A B R y y'' y')). Qed.
Lemma lem336234 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem336235 {A B : Type'} (R : type1413 A B) (y : A) (y' : B) : (term959 A B R y y') = (term969 A B R y y').
Proof. exact (MK_COMB (@lem336234 B) (@lem336233 A B R y y')). Qed.
Lemma lem336236 {A B : Type'} (R : type1413 A B) (y : A) (y' : B) : ((term958 A B R y y') = (term959 A B R y y')) = ((term891 A B R y y') = (term969 A B R y y')).
Proof. exact (MK_COMB (@lem336229 A B R y y') (@lem336235 A B R y y')). Qed.
Lemma lem336237 {A B : Type'} (R : type1413 A B) (y : A) (y' : B) : (term891 A B R y y') = (term969 A B R y y').
Proof. exact (EQ_MP (@lem336236 A B R y y') (@lem336221 A B R y y')). Qed.
Lemma lem336238 {A B : Type'} (R : type1413 A B) (y : A) : (term892 A B R y) = (term970 A B R y).
Proof. exact (fun_ext (fun y' : B => @lem336237 A B R y y')). Qed.
Lemma lem336239 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem336240 {A B : Type'} (R : type1413 A B) (y : A) : (term893 A B R y) = (term971 A B R y).
Proof. exact (MK_COMB (@lem336239 B) (@lem336238 A B R y)). Qed.
Lemma lem336241 {A B : Type'} (R : type1413 A B) (y'' : A -> B) (y : A) : (term1720 A B R y'' y) = (term1720 A B R y'' y).
Proof. exact (eq_refl (term1720 A B R y'' y)). Qed.
Lemma lem336242 {A B : Type'} (y'' : A -> B) (R : type1413 A B) (y : A) : (term1722 A B y'' R y) = (term1726 A B y'' R y).
Proof. exact (MK_COMB (@lem336241 A B R y'' y) (@lem336240 A B R y)). Qed.
Lemma lem336244 {A : Type'} (P : Prop) (Q : A -> Prop) : (term1727 A P Q) = (term1728 A P Q).
Proof. exact (EQ_MP (@lem19019 A P Q) (@lem19018 A P Q)). Qed.
Lemma lem336245 {B : Type'} (P : Prop) (Q : B -> Prop) : (term1727 B P Q) = (term1728 B P Q).
Proof. exact (@lem336244 B P Q). Qed.
Lemma lem336246 {A B : Type'} (y'' : A -> B) (R : type1413 A B) (y : A) : (term1729 A B y'' R y) = (term1730 A B y'' R y).
Proof. exact (@lem336245 B (term898 A B R y'' y) (term970 A B R y)). Qed.
Lemma lem336247 {A B : Type'} (R : type1413 A B) (y : A) (y' : B) : (term979 A B R y y') = (term969 A B R y y').
Proof. exact (eq_refl (term979 A B R y y')). Qed.
Lemma lem336248 {A B : Type'} (R : type1413 A B) (y : A) : (term1731 A B R y) = (term970 A B R y).
Proof. exact (fun_ext (fun y' : B => @lem336247 A B R y y')). Qed.
Lemma lem336249 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem336250 {A B : Type'} (R : type1413 A B) (y : A) : (term1732 A B R y) = (term971 A B R y).
Proof. exact (MK_COMB (@lem336249 B) (@lem336248 A B R y)). Qed.
Lemma lem336251 {A B : Type'} (R : type1413 A B) (y'' : A -> B) (y : A) : (term1720 A B R y'' y) = (term1720 A B R y'' y).
Proof. exact (eq_refl (term1720 A B R y'' y)). Qed.
Lemma lem336252 {A B : Type'} (y'' : A -> B) (R : type1413 A B) (y : A) : (term1729 A B y'' R y) = (term1726 A B y'' R y).
Proof. exact (MK_COMB (@lem336251 A B R y'' y) (@lem336250 A B R y)). Qed.
Lemma lem336253 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem336254 {A B : Type'} (y'' : A -> B) (R : type1413 A B) (y : A) : (term1733 A B y'' R y) = (term1734 A B y'' R y).
Proof. exact (MK_COMB (@lem336253) (@lem336252 A B y'' R y)). Qed.
Lemma lem336255 {A B : Type'} (R : type1413 A B) (y : A) (y' : B) : (term979 A B R y y') = (term969 A B R y y').
Proof. exact (eq_refl (term979 A B R y y')). Qed.
Lemma lem336256 {A B : Type'} (R : type1413 A B) (y'' : A -> B) (y : A) : (term1720 A B R y'' y) = (term1720 A B R y'' y).
Proof. exact (eq_refl (term1720 A B R y'' y)). Qed.
Lemma lem336257 {A B : Type'} (y'' : A -> B) (R : type1413 A B) (y : A) (y' : B) : (term1735 A B y'' R y y') = (term1736 A B y'' R y y').
Proof. exact (MK_COMB (@lem336256 A B R y'' y) (@lem336255 A B R y y')). Qed.
Lemma lem336258 {A B : Type'} (y'' : A -> B) (R : type1413 A B) (y : A) : (term1737 A B y'' R y) = (term1738 A B y'' R y).
Proof. exact (fun_ext (fun y' : B => @lem336257 A B y'' R y y')). Qed.
Lemma lem336259 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem336260 {A B : Type'} (y'' : A -> B) (R : type1413 A B) (y : A) : (term1730 A B y'' R y) = (term1739 A B y'' R y).
Proof. exact (MK_COMB (@lem336259 B) (@lem336258 A B y'' R y)). Qed.
Lemma lem336261 {A B : Type'} (y'' : A -> B) (R : type1413 A B) (y : A) : ((term1729 A B y'' R y) = (term1730 A B y'' R y)) = ((term1726 A B y'' R y) = (term1739 A B y'' R y)).
Proof. exact (MK_COMB (@lem336254 A B y'' R y) (@lem336260 A B y'' R y)). Qed.
Lemma lem336262 {A B : Type'} (y'' : A -> B) (R : type1413 A B) (y : A) : (term1726 A B y'' R y) = (term1739 A B y'' R y).
Proof. exact (EQ_MP (@lem336261 A B y'' R y) (@lem336246 A B y'' R y)). Qed.
Lemma lem336264 {A : Type'} (P : Prop) (Q : A -> Prop) : (term1727 A P Q) = (term1728 A P Q).
Proof. exact (EQ_MP (@lem19019 A P Q) (@lem19018 A P Q)). Qed.
Lemma lem336265 {B : Type'} (P : Prop) (Q : B -> Prop) : (term1727 B P Q) = (term1728 B P Q).
Proof. exact (@lem336264 B P Q). Qed.
Lemma lem336266 {A B : Type'} (y'' : A -> B) (R : type1413 A B) (y : A) (y' : B) : (term1740 A B y'' R y y') = (term1741 A B y'' R y y').
Proof. exact (@lem336265 B (term898 A B R y'' y) (term968 A B R y y')). Qed.
Lemma lem336267 {A B : Type'} (R : type1413 A B) (y : A) (y' : B) (y'' : B) : (term980 A B R y y'' y') = (term966 A B R y y' y'').
Proof. exact (eq_refl (term980 A B R y y'' y')). Qed.
Lemma lem336268 {A B : Type'} (R : type1413 A B) (y : A) (y' : B) : (term1742 A B R y y') = (term968 A B R y y').
Proof. exact (fun_ext (fun y'' : B => @lem336267 A B R y y'' y')). Qed.
Lemma lem336269 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem336270 {A B : Type'} (R : type1413 A B) (y : A) (y' : B) : (term1743 A B R y y') = (term969 A B R y y').
Proof. exact (MK_COMB (@lem336269 B) (@lem336268 A B R y y')). Qed.
Lemma lem336271 {A B : Type'} (R : type1413 A B) (y'' : A -> B) (y : A) : (term1720 A B R y'' y) = (term1720 A B R y'' y).
Proof. exact (eq_refl (term1720 A B R y'' y)). Qed.
Lemma lem336272 {A B : Type'} (y'' : A -> B) (R : type1413 A B) (y : A) (y' : B) : (term1740 A B y'' R y y') = (term1736 A B y'' R y y').
Proof. exact (MK_COMB (@lem336271 A B R y'' y) (@lem336270 A B R y y')). Qed.
Lemma lem336273 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem336274 {A B : Type'} (y'' : A -> B) (R : type1413 A B) (y : A) (y' : B) : (term1744 A B y'' R y y') = (term1745 A B y'' R y y').
Proof. exact (MK_COMB (@lem336273) (@lem336272 A B y'' R y y')). Qed.
Lemma lem336275 {A B : Type'} (R : type1413 A B) (y : A) (y' : B) (y'' : B) : (term980 A B R y y'' y') = (term966 A B R y y' y'').
Proof. exact (eq_refl (term980 A B R y y'' y')). Qed.
Lemma lem336276 {A B : Type'} (R : type1413 A B) (y'' : A -> B) (y : A) : (term1720 A B R y'' y) = (term1720 A B R y'' y).
Proof. exact (eq_refl (term1720 A B R y'' y)). Qed.
Lemma lem336277 {A B : Type'} (y'' : A -> B) (R : type1413 A B) (y : A) (y' : B) (y''' : B) : (term1746 A B y'' R y y''' y') = (term1747 A B y'' R y y' y''').
Proof. exact (MK_COMB (@lem336276 A B R y'' y) (@lem336275 A B R y y' y''')). Qed.
Lemma lem336278 {A B : Type'} (y'' : A -> B) (R : type1413 A B) (y : A) (y' : B) : (term1748 A B y'' R y y') = (term1749 A B y'' R y y').
Proof. exact (fun_ext (fun y''' : B => @lem336277 A B y'' R y y''' y')). Qed.
Lemma lem336279 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem336280 {A B : Type'} (y'' : A -> B) (R : type1413 A B) (y : A) (y' : B) : (term1741 A B y'' R y y') = (term1750 A B y'' R y y').
Proof. exact (MK_COMB (@lem336279 B) (@lem336278 A B y'' R y y')). Qed.
Lemma lem336281 {A B : Type'} (y'' : A -> B) (R : type1413 A B) (y : A) (y' : B) : ((term1740 A B y'' R y y') = (term1741 A B y'' R y y')) = ((term1736 A B y'' R y y') = (term1750 A B y'' R y y')).
Proof. exact (MK_COMB (@lem336274 A B y'' R y y') (@lem336280 A B y'' R y y')). Qed.
Lemma lem336282 {A B : Type'} (y'' : A -> B) (R : type1413 A B) (y : A) (y' : B) : (term1736 A B y'' R y y') = (term1750 A B y'' R y y').
Proof. exact (EQ_MP (@lem336281 A B y'' R y y') (@lem336266 A B y'' R y y')). Qed.
Lemma lem336283 {A B : Type'} (y'' : A -> B) (R : type1413 A B) (y : A) : (term1738 A B y'' R y) = (term1751 A B y'' R y).
Proof. exact (fun_ext (fun y' : B => @lem336282 A B y'' R y y')). Qed.
Lemma lem336284 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem336285 {A B : Type'} (y'' : A -> B) (R : type1413 A B) (y : A) : (term1739 A B y'' R y) = (term1752 A B y'' R y).
Proof. exact (MK_COMB (@lem336284 B) (@lem336283 A B y'' R y)). Qed.
Lemma lem336286 {A B : Type'} (y'' : A -> B) (R : type1413 A B) (y : A) : (term1726 A B y'' R y) = (term1752 A B y'' R y).
Proof. exact (TRANS (@lem336262 A B y'' R y) (@lem336285 A B y'' R y)). Qed.
Lemma lem336287 {A B : Type'} (y'' : A -> B) (R : type1413 A B) (y : A) : (term1722 A B y'' R y) = (term1752 A B y'' R y).
Proof. exact (TRANS (@lem336242 A B y'' R y) (@lem336286 A B y'' R y)). Qed.
Lemma lem336288 {A : Type'} (lt2 : type1402 A) (y : A) (x : A) : (term1675 A lt2 y x) = (term1675 A lt2 y x).
Proof. exact (eq_refl (term1675 A lt2 y x)). Qed.
Lemma lem336289 {A B : Type'} (lt2 : type1402 A) (x : A) (y'' : A -> B) (R : type1413 A B) (y : A) : (term1723 A B lt2 x y'' R y) = (term1753 A B lt2 x y'' R y).
Proof. exact (MK_COMB (@lem336288 A lt2 y x) (@lem336287 A B y'' R y)). Qed.
Lemma lem336291 {A : Type'} (P : Prop) (Q : A -> Prop) : (term846 A P Q) = (term845 A P Q).
Proof. exact (EQ_MP (@lem19007 A P Q) (@lem19006 A P Q)). Qed.
Lemma lem336292 {B : Type'} (P : Prop) (Q : B -> Prop) : (term846 B P Q) = (term845 B P Q).
Proof. exact (@lem336291 B P Q). Qed.
Lemma lem336293 {A B : Type'} (lt2 : type1402 A) (x : A) (y'' : A -> B) (R : type1413 A B) (y : A) : (term1754 A B lt2 x y'' R y) = (term1755 A B lt2 x y'' R y).
Proof. exact (@lem336292 B (term1674 A lt2 y x) (term1751 A B y'' R y)). Qed.
Lemma lem336294 {A B : Type'} (y'' : A -> B) (R : type1413 A B) (y : A) (y' : B) : (term1756 A B y'' R y y') = (term1750 A B y'' R y y').
Proof. exact (eq_refl (term1756 A B y'' R y y')). Qed.
Lemma lem336295 {A B : Type'} (y'' : A -> B) (R : type1413 A B) (y : A) : (term1757 A B y'' R y) = (term1751 A B y'' R y).
Proof. exact (fun_ext (fun y' : B => @lem336294 A B y'' R y y')). Qed.
Lemma lem336296 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem336297 {A B : Type'} (y'' : A -> B) (R : type1413 A B) (y : A) : (term1758 A B y'' R y) = (term1752 A B y'' R y).
Proof. exact (MK_COMB (@lem336296 B) (@lem336295 A B y'' R y)). Qed.
Lemma lem336298 {A : Type'} (lt2 : type1402 A) (y : A) (x : A) : (term1675 A lt2 y x) = (term1675 A lt2 y x).
Proof. exact (eq_refl (term1675 A lt2 y x)). Qed.
Lemma lem336299 {A B : Type'} (lt2 : type1402 A) (x : A) (y'' : A -> B) (R : type1413 A B) (y : A) : (term1754 A B lt2 x y'' R y) = (term1753 A B lt2 x y'' R y).
Proof. exact (MK_COMB (@lem336298 A lt2 y x) (@lem336297 A B y'' R y)). Qed.
Lemma lem336300 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem336301 {A B : Type'} (lt2 : type1402 A) (x : A) (y'' : A -> B) (R : type1413 A B) (y : A) : (term1759 A B lt2 x y'' R y) = (term1760 A B lt2 x y'' R y).
Proof. exact (MK_COMB (@lem336300) (@lem336299 A B lt2 x y'' R y)). Qed.
Lemma lem336302 {A B : Type'} (y'' : A -> B) (R : type1413 A B) (y : A) (y' : B) : (term1756 A B y'' R y y') = (term1750 A B y'' R y y').
Proof. exact (eq_refl (term1756 A B y'' R y y')). Qed.
Lemma lem336303 {A : Type'} (lt2 : type1402 A) (y : A) (x : A) : (term1675 A lt2 y x) = (term1675 A lt2 y x).
Proof. exact (eq_refl (term1675 A lt2 y x)). Qed.
Lemma lem336304 {A B : Type'} (lt2 : type1402 A) (x : A) (y'' : A -> B) (R : type1413 A B) (y : A) (y' : B) : (term1761 A B lt2 x y'' R y y') = (term1762 A B lt2 x y'' R y y').
Proof. exact (MK_COMB (@lem336303 A lt2 y x) (@lem336302 A B y'' R y y')). Qed.
Lemma lem336305 {A B : Type'} (lt2 : type1402 A) (x : A) (y'' : A -> B) (R : type1413 A B) (y : A) : (term1763 A B lt2 x y'' R y) = (term1764 A B lt2 x y'' R y).
Proof. exact (fun_ext (fun y' : B => @lem336304 A B lt2 x y'' R y y')). Qed.
Lemma lem336306 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem336307 {A B : Type'} (lt2 : type1402 A) (x : A) (y'' : A -> B) (R : type1413 A B) (y : A) : (term1755 A B lt2 x y'' R y) = (term1765 A B lt2 x y'' R y).
Proof. exact (MK_COMB (@lem336306 B) (@lem336305 A B lt2 x y'' R y)). Qed.
Lemma lem336308 {A B : Type'} (lt2 : type1402 A) (x : A) (y'' : A -> B) (R : type1413 A B) (y : A) : ((term1754 A B lt2 x y'' R y) = (term1755 A B lt2 x y'' R y)) = ((term1753 A B lt2 x y'' R y) = (term1765 A B lt2 x y'' R y)).
Proof. exact (MK_COMB (@lem336301 A B lt2 x y'' R y) (@lem336307 A B lt2 x y'' R y)). Qed.
Lemma lem336309 {A B : Type'} (lt2 : type1402 A) (x : A) (y'' : A -> B) (R : type1413 A B) (y : A) : (term1753 A B lt2 x y'' R y) = (term1765 A B lt2 x y'' R y).
Proof. exact (EQ_MP (@lem336308 A B lt2 x y'' R y) (@lem336293 A B lt2 x y'' R y)). Qed.
Lemma lem336311 {A : Type'} (P : Prop) (Q : A -> Prop) : (term846 A P Q) = (term845 A P Q).
Proof. exact (EQ_MP (@lem19007 A P Q) (@lem19006 A P Q)). Qed.
Lemma lem336312 {B : Type'} (P : Prop) (Q : B -> Prop) : (term846 B P Q) = (term845 B P Q).
Proof. exact (@lem336311 B P Q). Qed.
Lemma lem336313 {A B : Type'} (lt2 : type1402 A) (x : A) (y'' : A -> B) (R : type1413 A B) (y : A) (y' : B) : (term1766 A B lt2 x y'' R y y') = (term1767 A B lt2 x y'' R y y').
Proof. exact (@lem336312 B (term1674 A lt2 y x) (term1749 A B y'' R y y')). Qed.
Lemma lem336314 {A B : Type'} (y'' : A -> B) (R : type1413 A B) (y : A) (y' : B) (y''' : B) : (term1768 A B y'' R y y''' y') = (term1747 A B y'' R y y' y''').
Proof. exact (eq_refl (term1768 A B y'' R y y''' y')). Qed.
Lemma lem336315 {A B : Type'} (y'' : A -> B) (R : type1413 A B) (y : A) (y' : B) : (term1769 A B y'' R y y') = (term1749 A B y'' R y y').
Proof. exact (fun_ext (fun y''' : B => @lem336314 A B y'' R y y''' y')). Qed.
Lemma lem336316 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem336317 {A B : Type'} (y'' : A -> B) (R : type1413 A B) (y : A) (y' : B) : (term1770 A B y'' R y y') = (term1750 A B y'' R y y').
Proof. exact (MK_COMB (@lem336316 B) (@lem336315 A B y'' R y y')). Qed.
Lemma lem336318 {A : Type'} (lt2 : type1402 A) (y : A) (x : A) : (term1675 A lt2 y x) = (term1675 A lt2 y x).
Proof. exact (eq_refl (term1675 A lt2 y x)). Qed.
Lemma lem336319 {A B : Type'} (lt2 : type1402 A) (x : A) (y'' : A -> B) (R : type1413 A B) (y : A) (y' : B) : (term1766 A B lt2 x y'' R y y') = (term1762 A B lt2 x y'' R y y').
Proof. exact (MK_COMB (@lem336318 A lt2 y x) (@lem336317 A B y'' R y y')). Qed.
Lemma lem336320 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem336321 {A B : Type'} (lt2 : type1402 A) (x : A) (y'' : A -> B) (R : type1413 A B) (y : A) (y' : B) : (term1771 A B lt2 x y'' R y y') = (term1772 A B lt2 x y'' R y y').
Proof. exact (MK_COMB (@lem336320) (@lem336319 A B lt2 x y'' R y y')). Qed.
Lemma lem336322 {A B : Type'} (y'' : A -> B) (R : type1413 A B) (y : A) (y' : B) (y''' : B) : (term1768 A B y'' R y y''' y') = (term1747 A B y'' R y y' y''').
Proof. exact (eq_refl (term1768 A B y'' R y y''' y')). Qed.
Lemma lem336323 {A : Type'} (lt2 : type1402 A) (y : A) (x : A) : (term1675 A lt2 y x) = (term1675 A lt2 y x).
Proof. exact (eq_refl (term1675 A lt2 y x)). Qed.
Lemma lem336324 {A B : Type'} (lt2 : type1402 A) (x : A) (y'' : A -> B) (R : type1413 A B) (y : A) (y' : B) (y''' : B) : (term1773 A B lt2 x y'' R y y''' y') = (term1774 A B lt2 x y'' R y y' y''').
Proof. exact (MK_COMB (@lem336323 A lt2 y x) (@lem336322 A B y'' R y y' y''')). Qed.
Lemma lem336325 {A B : Type'} (lt2 : type1402 A) (x : A) (y'' : A -> B) (R : type1413 A B) (y : A) (y' : B) : (term1775 A B lt2 x y'' R y y') = (term1776 A B lt2 x y'' R y y').
Proof. exact (fun_ext (fun y''' : B => @lem336324 A B lt2 x y'' R y y''' y')). Qed.
Lemma lem336326 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem336327 {A B : Type'} (lt2 : type1402 A) (x : A) (y'' : A -> B) (R : type1413 A B) (y : A) (y' : B) : (term1767 A B lt2 x y'' R y y') = (term1777 A B lt2 x y'' R y y').
Proof. exact (MK_COMB (@lem336326 B) (@lem336325 A B lt2 x y'' R y y')). Qed.
Lemma lem336328 {A B : Type'} (lt2 : type1402 A) (x : A) (y'' : A -> B) (R : type1413 A B) (y : A) (y' : B) : ((term1766 A B lt2 x y'' R y y') = (term1767 A B lt2 x y'' R y y')) = ((term1762 A B lt2 x y'' R y y') = (term1777 A B lt2 x y'' R y y')).
Proof. exact (MK_COMB (@lem336321 A B lt2 x y'' R y y') (@lem336327 A B lt2 x y'' R y y')). Qed.
Lemma lem336329 {A B : Type'} (lt2 : type1402 A) (x : A) (y'' : A -> B) (R : type1413 A B) (y : A) (y' : B) : (term1762 A B lt2 x y'' R y y') = (term1777 A B lt2 x y'' R y y').
Proof. exact (EQ_MP (@lem336328 A B lt2 x y'' R y y') (@lem336313 A B lt2 x y'' R y y')). Qed.
Lemma lem336330 {A B : Type'} (lt2 : type1402 A) (x : A) (y'' : A -> B) (R : type1413 A B) (y : A) : (term1764 A B lt2 x y'' R y) = (term1778 A B lt2 x y'' R y).
Proof. exact (fun_ext (fun y' : B => @lem336329 A B lt2 x y'' R y y')). Qed.
Lemma lem336331 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem336332 {A B : Type'} (lt2 : type1402 A) (x : A) (y'' : A -> B) (R : type1413 A B) (y : A) : (term1765 A B lt2 x y'' R y) = (term1779 A B lt2 x y'' R y).
Proof. exact (MK_COMB (@lem336331 B) (@lem336330 A B lt2 x y'' R y)). Qed.
Lemma lem336333 {A B : Type'} (lt2 : type1402 A) (x : A) (y'' : A -> B) (R : type1413 A B) (y : A) : (term1753 A B lt2 x y'' R y) = (term1779 A B lt2 x y'' R y).
Proof. exact (TRANS (@lem336309 A B lt2 x y'' R y) (@lem336332 A B lt2 x y'' R y)). Qed.
Lemma lem336334 {A B : Type'} (lt2 : type1402 A) (x : A) (y'' : A -> B) (R : type1413 A B) (y : A) : (term1723 A B lt2 x y'' R y) = (term1779 A B lt2 x y'' R y).
Proof. exact (TRANS (@lem336289 A B lt2 x y'' R y) (@lem336333 A B lt2 x y'' R y)). Qed.
Lemma lem336335 {A B : Type'} (lt2 : type1402 A) (x : A) (y'' : A -> B) (R : type1413 A B) : (term1724 A B lt2 x y'' R) = (term1780 A B lt2 x y'' R).
Proof. exact (fun_ext (fun y : A => @lem336334 A B lt2 x y'' R y)). Qed.
Lemma lem336336 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem336337 {A B : Type'} (lt2 : type1402 A) (x : A) (y'' : A -> B) (R : type1413 A B) : (term1725 A B lt2 x y'' R) = (term1781 A B lt2 x y'' R).
Proof. exact (MK_COMB (@lem336336 A) (@lem336335 A B lt2 x y'' R)). Qed.
Lemma lem336366 {A B : Type'} (y'' : A -> B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (y : A) (y' : B) (y''' : B) : (term1774 A B lt2 x y'' R y y' y''') = (term1782 A B y'' lt2 x R y y' y''').
Proof. exact (@lem19490 (term898 A B R y'' y) (term1674 A lt2 y x) (term966 A B R y y' y''')). Qed.
Lemma lem336367 {A B : Type'} (y'' : A -> B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (y : A) (y' : B) : (term1776 A B lt2 x y'' R y y') = (term1783 A B y'' lt2 x R y y').
Proof. exact (fun_ext (fun y''' : B => @lem336366 A B y'' lt2 x R y y''' y')). Qed.
Lemma lem336368 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem336369 {A B : Type'} (y'' : A -> B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (y : A) (y' : B) : (term1777 A B lt2 x y'' R y y') = (term1784 A B y'' lt2 x R y y').
Proof. exact (MK_COMB (@lem336368 B) (@lem336367 A B y'' lt2 x R y y')). Qed.
Lemma lem336370 {A B : Type'} (y'' : A -> B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (y : A) : (term1778 A B lt2 x y'' R y) = (term1785 A B y'' lt2 x R y).
Proof. exact (fun_ext (fun y' : B => @lem336369 A B y'' lt2 x R y y')). Qed.
Lemma lem336371 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem336372 {A B : Type'} (y'' : A -> B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (y : A) : (term1779 A B lt2 x y'' R y) = (term1786 A B y'' lt2 x R y).
Proof. exact (MK_COMB (@lem336371 B) (@lem336370 A B y'' lt2 x R y)). Qed.
Lemma lem336373 {A B : Type'} (y'' : A -> B) (lt2 : type1402 A) (x : A) (R : type1413 A B) : (term1780 A B lt2 x y'' R) = (term1787 A B y'' lt2 x R).
Proof. exact (fun_ext (fun y : A => @lem336372 A B y'' lt2 x R y)). Qed.
Lemma lem336374 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem336375 {A B : Type'} (y'' : A -> B) (lt2 : type1402 A) (x : A) (R : type1413 A B) : (term1781 A B lt2 x y'' R) = (term1788 A B y'' lt2 x R).
Proof. exact (MK_COMB (@lem336374 A) (@lem336373 A B y'' lt2 x R)). Qed.
Lemma lem336376 {A B : Type'} (y'' : A -> B) (lt2 : type1402 A) (x : A) (R : type1413 A B) : (term1725 A B lt2 x y'' R) = (term1788 A B y'' lt2 x R).
Proof. exact (TRANS (@lem336337 A B lt2 x y'' R) (@lem336375 A B y'' lt2 x R)). Qed.
Lemma lem336377 {A B : Type'} (lt2 : type1402 A) (x : A) (y'' : A -> B) (R : type1413 A B) (h1 : term1149 A B lt2 x y'' R) : term1788 A B y'' lt2 x R.
Proof. exact (EQ_MP (@lem336376 A B y'' lt2 x R) (@lem335597 A B lt2 x y'' R h1)). Qed.
Lemma lem336619 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (x : A) (R : type1413 A B) (z : type1445 A B) (y : B) (f : A -> B) : (term1711 A B H lt2 x R z y f) = (term1789 A B lt2 H x R z y f).
Proof. exact (@lem19490 (term1703 A B lt2 z y f x) (term1708 A B y H f x) (term1696 A B R z y f)). Qed.
Lemma lem336620 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (x : A) (R : type1413 A B) (z : type1445 A B) (y : B) : (term1713 A B H lt2 x R z y) = (term1790 A B lt2 H x R z y).
Proof. exact (fun_ext (fun f : A -> B => @lem336619 A B lt2 H x R z y f)). Qed.
Lemma lem336621 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem336622 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (x : A) (R : type1413 A B) (z : type1445 A B) (y : B) : (term1714 A B H lt2 x R z y) = (term1791 A B lt2 H x R z y).
Proof. exact (MK_COMB (@lem336621 A B) (@lem336620 A B lt2 H x R z y)). Qed.
Lemma lem336623 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (x : A) (R : type1413 A B) (z : type1445 A B) : (term1715 A B H lt2 x R z) = (term1792 A B lt2 H x R z).
Proof. exact (fun_ext (fun y : B => @lem336622 A B lt2 H x R z y)). Qed.
Lemma lem336624 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem336626 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (x : A) (R : type1413 A B) (z : type1445 A B) : (term1716 A B H lt2 x R z) = (term1793 A B lt2 H x R z).
Proof. exact (MK_COMB (@lem336624 B) (@lem336623 A B lt2 H x R z)). Qed.
Lemma lem336627 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (z : type1445 A B) (h1 : term1716 A B H lt2 x R z) : term1793 A B lt2 H x R z.
Proof. exact (EQ_MP (@lem336626 A B lt2 H x R z) (@lem336192 A B H lt2 x R z h1)). Qed.
Lemma lem336635 {A B : Type'} (R : type1413 A B) (S' : type1413 A B) (x : A) (y : B) : (term1153 A B R S' x y) = (term1153 A B R S' x y).
Proof. exact (eq_refl (term1153 A B R S' x y)). Qed.
Lemma lem336636 {A B : Type'} (R : type1413 A B) (S' : type1413 A B) (x : A) : (term1154 A B R S' x) = (term1154 A B R S' x).
Proof. exact (fun_ext (fun y : B => @lem336635 A B R S' x y)). Qed.
Lemma lem336637 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem336638 {A B : Type'} (R : type1413 A B) (S' : type1413 A B) (x : A) : (term1155 A B R S' x) = (term1155 A B R S' x).
Proof. exact (MK_COMB (@lem336637 B) (@lem336636 A B R S' x)). Qed.
Lemma lem336639 {A B : Type'} (R : type1413 A B) (S' : type1413 A B) : (term1156 A B R S') = (term1156 A B R S').
Proof. exact (fun_ext (fun x : A => @lem336638 A B R S' x)). Qed.
Lemma lem336640 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem336642 {A B : Type'} (R : type1413 A B) (S' : type1413 A B) : (term1157 A B R S') = (term1157 A B R S').
Proof. exact (MK_COMB (@lem336640 A) (@lem336639 A B R S')). Qed.
Lemma lem336643 {A B : Type'} (R : type1413 A B) (S' : type1413 A B) (h1 : term71 A B R S') : term1157 A B R S'.
Proof. exact (EQ_MP (@lem336642 A B R S') (@lem335200 A B R S' h1)). Qed.
Lemma lem336645 {A : Type'} (P : Prop) (Q : A -> Prop) : (term846 A P Q) = (term845 A P Q).
Proof. exact (EQ_MP (@lem19007 A P Q) (@lem19006 A P Q)). Qed.
Lemma lem336646 {B : Type'} (P : Prop) (Q : B -> Prop) : (term846 B P Q) = (term845 B P Q).
Proof. exact (@lem336645 B P Q). Qed.
Lemma lem336647 {A B : Type'} (R : type1413 A B) (y : A) (y' : B) : (term958 A B R y y') = (term959 A B R y y').
Proof. exact (@lem336646 B (term886 A B R y y') (term889 A B R y y')). Qed.
Lemma lem336648 {A B : Type'} (R : type1413 A B) (y : A) (y' : B) (y'' : B) : (term960 A B R y y'' y') = (term888 A B R y y' y'').
Proof. exact (eq_refl (term960 A B R y y'' y')). Qed.
Lemma lem336649 {A B : Type'} (R : type1413 A B) (y : A) (y' : B) : (term961 A B R y y') = (term889 A B R y y').
Proof. exact (fun_ext (fun y'' : B => @lem336648 A B R y y'' y')). Qed.
Lemma lem336650 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem336651 {A B : Type'} (R : type1413 A B) (y : A) (y' : B) : (term962 A B R y y') = (term890 A B R y y').
Proof. exact (MK_COMB (@lem336650 B) (@lem336649 A B R y y')). Qed.
Lemma lem336652 {A B : Type'} (R : type1413 A B) (y : A) (y' : B) : (term887 A B R y y') = (term887 A B R y y').
Proof. exact (eq_refl (term887 A B R y y')). Qed.
Lemma lem336653 {A B : Type'} (R : type1413 A B) (y : A) (y' : B) : (term958 A B R y y') = (term891 A B R y y').
Proof. exact (MK_COMB (@lem336652 A B R y y') (@lem336651 A B R y y')). Qed.
Lemma lem336654 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem336655 {A B : Type'} (R : type1413 A B) (y : A) (y' : B) : (term963 A B R y y') = (term964 A B R y y').
Proof. exact (MK_COMB (@lem336654) (@lem336653 A B R y y')). Qed.
Lemma lem336656 {A B : Type'} (R : type1413 A B) (y : A) (y' : B) (y'' : B) : (term960 A B R y y'' y') = (term888 A B R y y' y'').
Proof. exact (eq_refl (term960 A B R y y'' y')). Qed.
Lemma lem336657 {A B : Type'} (R : type1413 A B) (y : A) (y' : B) : (term887 A B R y y') = (term887 A B R y y').
Proof. exact (eq_refl (term887 A B R y y')). Qed.
Lemma lem336658 {A B : Type'} (R : type1413 A B) (y : A) (y' : B) (y'' : B) : (term965 A B R y y'' y') = (term966 A B R y y' y'').
Proof. exact (MK_COMB (@lem336657 A B R y y'') (@lem336656 A B R y y' y'')). Qed.
Lemma lem336659 {A B : Type'} (R : type1413 A B) (y : A) (y' : B) : (term967 A B R y y') = (term968 A B R y y').
Proof. exact (fun_ext (fun y'' : B => @lem336658 A B R y y'' y')). Qed.
Lemma lem336660 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem336661 {A B : Type'} (R : type1413 A B) (y : A) (y' : B) : (term959 A B R y y') = (term969 A B R y y').
Proof. exact (MK_COMB (@lem336660 B) (@lem336659 A B R y y')). Qed.
Lemma lem336662 {A B : Type'} (R : type1413 A B) (y : A) (y' : B) : ((term958 A B R y y') = (term959 A B R y y')) = ((term891 A B R y y') = (term969 A B R y y')).
Proof. exact (MK_COMB (@lem336655 A B R y y') (@lem336661 A B R y y')). Qed.
Lemma lem336663 {A B : Type'} (R : type1413 A B) (y : A) (y' : B) : (term891 A B R y y') = (term969 A B R y y').
Proof. exact (EQ_MP (@lem336662 A B R y y') (@lem336647 A B R y y')). Qed.
Lemma lem336664 {A B : Type'} (R : type1413 A B) (y : A) : (term892 A B R y) = (term970 A B R y).
Proof. exact (fun_ext (fun y' : B => @lem336663 A B R y y')). Qed.
Lemma lem336665 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem336666 {A B : Type'} (R : type1413 A B) (y : A) : (term893 A B R y) = (term971 A B R y).
Proof. exact (MK_COMB (@lem336665 B) (@lem336664 A B R y)). Qed.
Lemma lem336667 {A B : Type'} (R : type1413 A B) (y'' : A -> B) (y : A) : (term1720 A B R y'' y) = (term1720 A B R y'' y).
Proof. exact (eq_refl (term1720 A B R y'' y)). Qed.
Lemma lem336668 {A B : Type'} (y'' : A -> B) (R : type1413 A B) (y : A) : (term1722 A B y'' R y) = (term1726 A B y'' R y).
Proof. exact (MK_COMB (@lem336667 A B R y'' y) (@lem336666 A B R y)). Qed.
Lemma lem336670 {A : Type'} (P : Prop) (Q : A -> Prop) : (term1727 A P Q) = (term1728 A P Q).
Proof. exact (EQ_MP (@lem19019 A P Q) (@lem19018 A P Q)). Qed.
Lemma lem336671 {B : Type'} (P : Prop) (Q : B -> Prop) : (term1727 B P Q) = (term1728 B P Q).
Proof. exact (@lem336670 B P Q). Qed.
Lemma lem336672 {A B : Type'} (y'' : A -> B) (R : type1413 A B) (y : A) : (term1729 A B y'' R y) = (term1730 A B y'' R y).
Proof. exact (@lem336671 B (term898 A B R y'' y) (term970 A B R y)). Qed.
Lemma lem336673 {A B : Type'} (R : type1413 A B) (y : A) (y' : B) : (term979 A B R y y') = (term969 A B R y y').
Proof. exact (eq_refl (term979 A B R y y')). Qed.
Lemma lem336674 {A B : Type'} (R : type1413 A B) (y : A) : (term1731 A B R y) = (term970 A B R y).
Proof. exact (fun_ext (fun y' : B => @lem336673 A B R y y')). Qed.
Lemma lem336675 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem336676 {A B : Type'} (R : type1413 A B) (y : A) : (term1732 A B R y) = (term971 A B R y).
Proof. exact (MK_COMB (@lem336675 B) (@lem336674 A B R y)). Qed.
Lemma lem336677 {A B : Type'} (R : type1413 A B) (y'' : A -> B) (y : A) : (term1720 A B R y'' y) = (term1720 A B R y'' y).
Proof. exact (eq_refl (term1720 A B R y'' y)). Qed.
Lemma lem336678 {A B : Type'} (y'' : A -> B) (R : type1413 A B) (y : A) : (term1729 A B y'' R y) = (term1726 A B y'' R y).
Proof. exact (MK_COMB (@lem336677 A B R y'' y) (@lem336676 A B R y)). Qed.
Lemma lem336679 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem336680 {A B : Type'} (y'' : A -> B) (R : type1413 A B) (y : A) : (term1733 A B y'' R y) = (term1734 A B y'' R y).
Proof. exact (MK_COMB (@lem336679) (@lem336678 A B y'' R y)). Qed.
Lemma lem336681 {A B : Type'} (R : type1413 A B) (y : A) (y' : B) : (term979 A B R y y') = (term969 A B R y y').
Proof. exact (eq_refl (term979 A B R y y')). Qed.
Lemma lem336682 {A B : Type'} (R : type1413 A B) (y'' : A -> B) (y : A) : (term1720 A B R y'' y) = (term1720 A B R y'' y).
Proof. exact (eq_refl (term1720 A B R y'' y)). Qed.
Lemma lem336683 {A B : Type'} (y'' : A -> B) (R : type1413 A B) (y : A) (y' : B) : (term1735 A B y'' R y y') = (term1736 A B y'' R y y').
Proof. exact (MK_COMB (@lem336682 A B R y'' y) (@lem336681 A B R y y')). Qed.
Lemma lem336684 {A B : Type'} (y'' : A -> B) (R : type1413 A B) (y : A) : (term1737 A B y'' R y) = (term1738 A B y'' R y).
Proof. exact (fun_ext (fun y' : B => @lem336683 A B y'' R y y')). Qed.
Lemma lem336685 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem336686 {A B : Type'} (y'' : A -> B) (R : type1413 A B) (y : A) : (term1730 A B y'' R y) = (term1739 A B y'' R y).
Proof. exact (MK_COMB (@lem336685 B) (@lem336684 A B y'' R y)). Qed.
Lemma lem336687 {A B : Type'} (y'' : A -> B) (R : type1413 A B) (y : A) : ((term1729 A B y'' R y) = (term1730 A B y'' R y)) = ((term1726 A B y'' R y) = (term1739 A B y'' R y)).
Proof. exact (MK_COMB (@lem336680 A B y'' R y) (@lem336686 A B y'' R y)). Qed.
Lemma lem336688 {A B : Type'} (y'' : A -> B) (R : type1413 A B) (y : A) : (term1726 A B y'' R y) = (term1739 A B y'' R y).
Proof. exact (EQ_MP (@lem336687 A B y'' R y) (@lem336672 A B y'' R y)). Qed.
Lemma lem336690 {A : Type'} (P : Prop) (Q : A -> Prop) : (term1727 A P Q) = (term1728 A P Q).
Proof. exact (EQ_MP (@lem19019 A P Q) (@lem19018 A P Q)). Qed.
Lemma lem336691 {B : Type'} (P : Prop) (Q : B -> Prop) : (term1727 B P Q) = (term1728 B P Q).
Proof. exact (@lem336690 B P Q). Qed.
Lemma lem336692 {A B : Type'} (y'' : A -> B) (R : type1413 A B) (y : A) (y' : B) : (term1740 A B y'' R y y') = (term1741 A B y'' R y y').
Proof. exact (@lem336691 B (term898 A B R y'' y) (term968 A B R y y')). Qed.
Lemma lem336693 {A B : Type'} (R : type1413 A B) (y : A) (y' : B) (y'' : B) : (term980 A B R y y'' y') = (term966 A B R y y' y'').
Proof. exact (eq_refl (term980 A B R y y'' y')). Qed.
Lemma lem336694 {A B : Type'} (R : type1413 A B) (y : A) (y' : B) : (term1742 A B R y y') = (term968 A B R y y').
Proof. exact (fun_ext (fun y'' : B => @lem336693 A B R y y'' y')). Qed.
Lemma lem336695 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem336696 {A B : Type'} (R : type1413 A B) (y : A) (y' : B) : (term1743 A B R y y') = (term969 A B R y y').
Proof. exact (MK_COMB (@lem336695 B) (@lem336694 A B R y y')). Qed.
Lemma lem336697 {A B : Type'} (R : type1413 A B) (y'' : A -> B) (y : A) : (term1720 A B R y'' y) = (term1720 A B R y'' y).
Proof. exact (eq_refl (term1720 A B R y'' y)). Qed.
Lemma lem336698 {A B : Type'} (y'' : A -> B) (R : type1413 A B) (y : A) (y' : B) : (term1740 A B y'' R y y') = (term1736 A B y'' R y y').
Proof. exact (MK_COMB (@lem336697 A B R y'' y) (@lem336696 A B R y y')). Qed.
Lemma lem336699 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem336700 {A B : Type'} (y'' : A -> B) (R : type1413 A B) (y : A) (y' : B) : (term1744 A B y'' R y y') = (term1745 A B y'' R y y').
Proof. exact (MK_COMB (@lem336699) (@lem336698 A B y'' R y y')). Qed.
Lemma lem336701 {A B : Type'} (R : type1413 A B) (y : A) (y' : B) (y'' : B) : (term980 A B R y y'' y') = (term966 A B R y y' y'').
Proof. exact (eq_refl (term980 A B R y y'' y')). Qed.
Lemma lem336702 {A B : Type'} (R : type1413 A B) (y'' : A -> B) (y : A) : (term1720 A B R y'' y) = (term1720 A B R y'' y).
Proof. exact (eq_refl (term1720 A B R y'' y)). Qed.
Lemma lem336703 {A B : Type'} (y'' : A -> B) (R : type1413 A B) (y : A) (y' : B) (y''' : B) : (term1746 A B y'' R y y''' y') = (term1747 A B y'' R y y' y''').
Proof. exact (MK_COMB (@lem336702 A B R y'' y) (@lem336701 A B R y y' y''')). Qed.
Lemma lem336704 {A B : Type'} (y'' : A -> B) (R : type1413 A B) (y : A) (y' : B) : (term1748 A B y'' R y y') = (term1749 A B y'' R y y').
Proof. exact (fun_ext (fun y''' : B => @lem336703 A B y'' R y y''' y')). Qed.
Lemma lem336705 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem336706 {A B : Type'} (y'' : A -> B) (R : type1413 A B) (y : A) (y' : B) : (term1741 A B y'' R y y') = (term1750 A B y'' R y y').
Proof. exact (MK_COMB (@lem336705 B) (@lem336704 A B y'' R y y')). Qed.
Lemma lem336707 {A B : Type'} (y'' : A -> B) (R : type1413 A B) (y : A) (y' : B) : ((term1740 A B y'' R y y') = (term1741 A B y'' R y y')) = ((term1736 A B y'' R y y') = (term1750 A B y'' R y y')).
Proof. exact (MK_COMB (@lem336700 A B y'' R y y') (@lem336706 A B y'' R y y')). Qed.
Lemma lem336708 {A B : Type'} (y'' : A -> B) (R : type1413 A B) (y : A) (y' : B) : (term1736 A B y'' R y y') = (term1750 A B y'' R y y').
Proof. exact (EQ_MP (@lem336707 A B y'' R y y') (@lem336692 A B y'' R y y')). Qed.
Lemma lem336709 {A B : Type'} (y'' : A -> B) (R : type1413 A B) (y : A) : (term1738 A B y'' R y) = (term1751 A B y'' R y).
Proof. exact (fun_ext (fun y' : B => @lem336708 A B y'' R y y')). Qed.
Lemma lem336710 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem336711 {A B : Type'} (y'' : A -> B) (R : type1413 A B) (y : A) : (term1739 A B y'' R y) = (term1752 A B y'' R y).
Proof. exact (MK_COMB (@lem336710 B) (@lem336709 A B y'' R y)). Qed.
Lemma lem336712 {A B : Type'} (y'' : A -> B) (R : type1413 A B) (y : A) : (term1726 A B y'' R y) = (term1752 A B y'' R y).
Proof. exact (TRANS (@lem336688 A B y'' R y) (@lem336711 A B y'' R y)). Qed.
Lemma lem336713 {A B : Type'} (y'' : A -> B) (R : type1413 A B) (y : A) : (term1722 A B y'' R y) = (term1752 A B y'' R y).
Proof. exact (TRANS (@lem336668 A B y'' R y) (@lem336712 A B y'' R y)). Qed.
Lemma lem336714 {A : Type'} (lt2 : type1402 A) (y : A) (x : A) : (term1675 A lt2 y x) = (term1675 A lt2 y x).
Proof. exact (eq_refl (term1675 A lt2 y x)). Qed.
Lemma lem336715 {A B : Type'} (lt2 : type1402 A) (x : A) (y'' : A -> B) (R : type1413 A B) (y : A) : (term1723 A B lt2 x y'' R y) = (term1753 A B lt2 x y'' R y).
Proof. exact (MK_COMB (@lem336714 A lt2 y x) (@lem336713 A B y'' R y)). Qed.
Lemma lem336717 {A : Type'} (P : Prop) (Q : A -> Prop) : (term846 A P Q) = (term845 A P Q).
Proof. exact (EQ_MP (@lem19007 A P Q) (@lem19006 A P Q)). Qed.
Lemma lem336718 {B : Type'} (P : Prop) (Q : B -> Prop) : (term846 B P Q) = (term845 B P Q).
Proof. exact (@lem336717 B P Q). Qed.
Lemma lem336719 {A B : Type'} (lt2 : type1402 A) (x : A) (y'' : A -> B) (R : type1413 A B) (y : A) : (term1754 A B lt2 x y'' R y) = (term1755 A B lt2 x y'' R y).
Proof. exact (@lem336718 B (term1674 A lt2 y x) (term1751 A B y'' R y)). Qed.
Lemma lem336720 {A B : Type'} (y'' : A -> B) (R : type1413 A B) (y : A) (y' : B) : (term1756 A B y'' R y y') = (term1750 A B y'' R y y').
Proof. exact (eq_refl (term1756 A B y'' R y y')). Qed.
Lemma lem336721 {A B : Type'} (y'' : A -> B) (R : type1413 A B) (y : A) : (term1757 A B y'' R y) = (term1751 A B y'' R y).
Proof. exact (fun_ext (fun y' : B => @lem336720 A B y'' R y y')). Qed.
Lemma lem336722 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem336723 {A B : Type'} (y'' : A -> B) (R : type1413 A B) (y : A) : (term1758 A B y'' R y) = (term1752 A B y'' R y).
Proof. exact (MK_COMB (@lem336722 B) (@lem336721 A B y'' R y)). Qed.
Lemma lem336724 {A : Type'} (lt2 : type1402 A) (y : A) (x : A) : (term1675 A lt2 y x) = (term1675 A lt2 y x).
Proof. exact (eq_refl (term1675 A lt2 y x)). Qed.
Lemma lem336725 {A B : Type'} (lt2 : type1402 A) (x : A) (y'' : A -> B) (R : type1413 A B) (y : A) : (term1754 A B lt2 x y'' R y) = (term1753 A B lt2 x y'' R y).
Proof. exact (MK_COMB (@lem336724 A lt2 y x) (@lem336723 A B y'' R y)). Qed.
Lemma lem336726 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem336727 {A B : Type'} (lt2 : type1402 A) (x : A) (y'' : A -> B) (R : type1413 A B) (y : A) : (term1759 A B lt2 x y'' R y) = (term1760 A B lt2 x y'' R y).
Proof. exact (MK_COMB (@lem336726) (@lem336725 A B lt2 x y'' R y)). Qed.
Lemma lem336728 {A B : Type'} (y'' : A -> B) (R : type1413 A B) (y : A) (y' : B) : (term1756 A B y'' R y y') = (term1750 A B y'' R y y').
Proof. exact (eq_refl (term1756 A B y'' R y y')). Qed.
Lemma lem336729 {A : Type'} (lt2 : type1402 A) (y : A) (x : A) : (term1675 A lt2 y x) = (term1675 A lt2 y x).
Proof. exact (eq_refl (term1675 A lt2 y x)). Qed.
Lemma lem336730 {A B : Type'} (lt2 : type1402 A) (x : A) (y'' : A -> B) (R : type1413 A B) (y : A) (y' : B) : (term1761 A B lt2 x y'' R y y') = (term1762 A B lt2 x y'' R y y').
Proof. exact (MK_COMB (@lem336729 A lt2 y x) (@lem336728 A B y'' R y y')). Qed.
Lemma lem336731 {A B : Type'} (lt2 : type1402 A) (x : A) (y'' : A -> B) (R : type1413 A B) (y : A) : (term1763 A B lt2 x y'' R y) = (term1764 A B lt2 x y'' R y).
Proof. exact (fun_ext (fun y' : B => @lem336730 A B lt2 x y'' R y y')). Qed.
Lemma lem336732 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem336733 {A B : Type'} (lt2 : type1402 A) (x : A) (y'' : A -> B) (R : type1413 A B) (y : A) : (term1755 A B lt2 x y'' R y) = (term1765 A B lt2 x y'' R y).
Proof. exact (MK_COMB (@lem336732 B) (@lem336731 A B lt2 x y'' R y)). Qed.
Lemma lem336734 {A B : Type'} (lt2 : type1402 A) (x : A) (y'' : A -> B) (R : type1413 A B) (y : A) : ((term1754 A B lt2 x y'' R y) = (term1755 A B lt2 x y'' R y)) = ((term1753 A B lt2 x y'' R y) = (term1765 A B lt2 x y'' R y)).
Proof. exact (MK_COMB (@lem336727 A B lt2 x y'' R y) (@lem336733 A B lt2 x y'' R y)). Qed.
Lemma lem336735 {A B : Type'} (lt2 : type1402 A) (x : A) (y'' : A -> B) (R : type1413 A B) (y : A) : (term1753 A B lt2 x y'' R y) = (term1765 A B lt2 x y'' R y).
Proof. exact (EQ_MP (@lem336734 A B lt2 x y'' R y) (@lem336719 A B lt2 x y'' R y)). Qed.
Lemma lem336737 {A : Type'} (P : Prop) (Q : A -> Prop) : (term846 A P Q) = (term845 A P Q).
Proof. exact (EQ_MP (@lem19007 A P Q) (@lem19006 A P Q)). Qed.
Lemma lem336738 {B : Type'} (P : Prop) (Q : B -> Prop) : (term846 B P Q) = (term845 B P Q).
Proof. exact (@lem336737 B P Q). Qed.
Lemma lem336739 {A B : Type'} (lt2 : type1402 A) (x : A) (y'' : A -> B) (R : type1413 A B) (y : A) (y' : B) : (term1766 A B lt2 x y'' R y y') = (term1767 A B lt2 x y'' R y y').
Proof. exact (@lem336738 B (term1674 A lt2 y x) (term1749 A B y'' R y y')). Qed.
Lemma lem336740 {A B : Type'} (y'' : A -> B) (R : type1413 A B) (y : A) (y' : B) (y''' : B) : (term1768 A B y'' R y y''' y') = (term1747 A B y'' R y y' y''').
Proof. exact (eq_refl (term1768 A B y'' R y y''' y')). Qed.
Lemma lem336741 {A B : Type'} (y'' : A -> B) (R : type1413 A B) (y : A) (y' : B) : (term1769 A B y'' R y y') = (term1749 A B y'' R y y').
Proof. exact (fun_ext (fun y''' : B => @lem336740 A B y'' R y y''' y')). Qed.
Lemma lem336742 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem336743 {A B : Type'} (y'' : A -> B) (R : type1413 A B) (y : A) (y' : B) : (term1770 A B y'' R y y') = (term1750 A B y'' R y y').
Proof. exact (MK_COMB (@lem336742 B) (@lem336741 A B y'' R y y')). Qed.
Lemma lem336744 {A : Type'} (lt2 : type1402 A) (y : A) (x : A) : (term1675 A lt2 y x) = (term1675 A lt2 y x).
Proof. exact (eq_refl (term1675 A lt2 y x)). Qed.
Lemma lem336745 {A B : Type'} (lt2 : type1402 A) (x : A) (y'' : A -> B) (R : type1413 A B) (y : A) (y' : B) : (term1766 A B lt2 x y'' R y y') = (term1762 A B lt2 x y'' R y y').
Proof. exact (MK_COMB (@lem336744 A lt2 y x) (@lem336743 A B y'' R y y')). Qed.
Lemma lem336746 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem336747 {A B : Type'} (lt2 : type1402 A) (x : A) (y'' : A -> B) (R : type1413 A B) (y : A) (y' : B) : (term1771 A B lt2 x y'' R y y') = (term1772 A B lt2 x y'' R y y').
Proof. exact (MK_COMB (@lem336746) (@lem336745 A B lt2 x y'' R y y')). Qed.
Lemma lem336748 {A B : Type'} (y'' : A -> B) (R : type1413 A B) (y : A) (y' : B) (y''' : B) : (term1768 A B y'' R y y''' y') = (term1747 A B y'' R y y' y''').
Proof. exact (eq_refl (term1768 A B y'' R y y''' y')). Qed.
Lemma lem336749 {A : Type'} (lt2 : type1402 A) (y : A) (x : A) : (term1675 A lt2 y x) = (term1675 A lt2 y x).
Proof. exact (eq_refl (term1675 A lt2 y x)). Qed.
Lemma lem336750 {A B : Type'} (lt2 : type1402 A) (x : A) (y'' : A -> B) (R : type1413 A B) (y : A) (y' : B) (y''' : B) : (term1773 A B lt2 x y'' R y y''' y') = (term1774 A B lt2 x y'' R y y' y''').
Proof. exact (MK_COMB (@lem336749 A lt2 y x) (@lem336748 A B y'' R y y' y''')). Qed.
Lemma lem336751 {A B : Type'} (lt2 : type1402 A) (x : A) (y'' : A -> B) (R : type1413 A B) (y : A) (y' : B) : (term1775 A B lt2 x y'' R y y') = (term1776 A B lt2 x y'' R y y').
Proof. exact (fun_ext (fun y''' : B => @lem336750 A B lt2 x y'' R y y''' y')). Qed.
Lemma lem336752 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem336753 {A B : Type'} (lt2 : type1402 A) (x : A) (y'' : A -> B) (R : type1413 A B) (y : A) (y' : B) : (term1767 A B lt2 x y'' R y y') = (term1777 A B lt2 x y'' R y y').
Proof. exact (MK_COMB (@lem336752 B) (@lem336751 A B lt2 x y'' R y y')). Qed.
Lemma lem336754 {A B : Type'} (lt2 : type1402 A) (x : A) (y'' : A -> B) (R : type1413 A B) (y : A) (y' : B) : ((term1766 A B lt2 x y'' R y y') = (term1767 A B lt2 x y'' R y y')) = ((term1762 A B lt2 x y'' R y y') = (term1777 A B lt2 x y'' R y y')).
Proof. exact (MK_COMB (@lem336747 A B lt2 x y'' R y y') (@lem336753 A B lt2 x y'' R y y')). Qed.
Lemma lem336755 {A B : Type'} (lt2 : type1402 A) (x : A) (y'' : A -> B) (R : type1413 A B) (y : A) (y' : B) : (term1762 A B lt2 x y'' R y y') = (term1777 A B lt2 x y'' R y y').
Proof. exact (EQ_MP (@lem336754 A B lt2 x y'' R y y') (@lem336739 A B lt2 x y'' R y y')). Qed.
Lemma lem336756 {A B : Type'} (lt2 : type1402 A) (x : A) (y'' : A -> B) (R : type1413 A B) (y : A) : (term1764 A B lt2 x y'' R y) = (term1778 A B lt2 x y'' R y).
Proof. exact (fun_ext (fun y' : B => @lem336755 A B lt2 x y'' R y y')). Qed.
Lemma lem336757 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem336758 {A B : Type'} (lt2 : type1402 A) (x : A) (y'' : A -> B) (R : type1413 A B) (y : A) : (term1765 A B lt2 x y'' R y) = (term1779 A B lt2 x y'' R y).
Proof. exact (MK_COMB (@lem336757 B) (@lem336756 A B lt2 x y'' R y)). Qed.
Lemma lem336759 {A B : Type'} (lt2 : type1402 A) (x : A) (y'' : A -> B) (R : type1413 A B) (y : A) : (term1753 A B lt2 x y'' R y) = (term1779 A B lt2 x y'' R y).
Proof. exact (TRANS (@lem336735 A B lt2 x y'' R y) (@lem336758 A B lt2 x y'' R y)). Qed.
Lemma lem336760 {A B : Type'} (lt2 : type1402 A) (x : A) (y'' : A -> B) (R : type1413 A B) (y : A) : (term1723 A B lt2 x y'' R y) = (term1779 A B lt2 x y'' R y).
Proof. exact (TRANS (@lem336715 A B lt2 x y'' R y) (@lem336759 A B lt2 x y'' R y)). Qed.
Lemma lem336761 {A B : Type'} (lt2 : type1402 A) (x : A) (y'' : A -> B) (R : type1413 A B) : (term1724 A B lt2 x y'' R) = (term1780 A B lt2 x y'' R).
Proof. exact (fun_ext (fun y : A => @lem336760 A B lt2 x y'' R y)). Qed.
Lemma lem336762 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem336763 {A B : Type'} (lt2 : type1402 A) (x : A) (y'' : A -> B) (R : type1413 A B) : (term1725 A B lt2 x y'' R) = (term1781 A B lt2 x y'' R).
Proof. exact (MK_COMB (@lem336762 A) (@lem336761 A B lt2 x y'' R)). Qed.
Lemma lem336792 {A B : Type'} (y'' : A -> B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (y : A) (y' : B) (y''' : B) : (term1774 A B lt2 x y'' R y y' y''') = (term1782 A B y'' lt2 x R y y' y''').
Proof. exact (@lem19490 (term898 A B R y'' y) (term1674 A lt2 y x) (term966 A B R y y' y''')). Qed.
Lemma lem336793 {A B : Type'} (y'' : A -> B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (y : A) (y' : B) : (term1776 A B lt2 x y'' R y y') = (term1783 A B y'' lt2 x R y y').
Proof. exact (fun_ext (fun y''' : B => @lem336792 A B y'' lt2 x R y y''' y')). Qed.
Lemma lem336794 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem336795 {A B : Type'} (y'' : A -> B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (y : A) (y' : B) : (term1777 A B lt2 x y'' R y y') = (term1784 A B y'' lt2 x R y y').
Proof. exact (MK_COMB (@lem336794 B) (@lem336793 A B y'' lt2 x R y y')). Qed.
Lemma lem336796 {A B : Type'} (y'' : A -> B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (y : A) : (term1778 A B lt2 x y'' R y) = (term1785 A B y'' lt2 x R y).
Proof. exact (fun_ext (fun y' : B => @lem336795 A B y'' lt2 x R y y')). Qed.
Lemma lem336797 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem336798 {A B : Type'} (y'' : A -> B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (y : A) : (term1779 A B lt2 x y'' R y) = (term1786 A B y'' lt2 x R y).
Proof. exact (MK_COMB (@lem336797 B) (@lem336796 A B y'' lt2 x R y)). Qed.
Lemma lem336799 {A B : Type'} (y'' : A -> B) (lt2 : type1402 A) (x : A) (R : type1413 A B) : (term1780 A B lt2 x y'' R) = (term1787 A B y'' lt2 x R).
Proof. exact (fun_ext (fun y : A => @lem336798 A B y'' lt2 x R y)). Qed.
Lemma lem336800 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem336801 {A B : Type'} (y'' : A -> B) (lt2 : type1402 A) (x : A) (R : type1413 A B) : (term1781 A B lt2 x y'' R) = (term1788 A B y'' lt2 x R).
Proof. exact (MK_COMB (@lem336800 A) (@lem336799 A B y'' lt2 x R)). Qed.
Lemma lem336802 {A B : Type'} (y'' : A -> B) (lt2 : type1402 A) (x : A) (R : type1413 A B) : (term1725 A B lt2 x y'' R) = (term1788 A B y'' lt2 x R).
Proof. exact (TRANS (@lem336763 A B lt2 x y'' R) (@lem336801 A B y'' lt2 x R)). Qed.
Lemma lem336803 {A B : Type'} (lt2 : type1402 A) (x : A) (y'' : A -> B) (R : type1413 A B) (h1 : term1149 A B lt2 x y'' R) : term1788 A B y'' lt2 x R.
Proof. exact (EQ_MP (@lem336802 A B y'' lt2 x R) (@lem335597 A B lt2 x y'' R h1)). Qed.
Lemma lem336997 {A B : Type'} (lt2 : type1402 A) (z'' : type515 A B) (g : A -> B) (S' : type1413 A B) (H : type549 A B) (f : A -> B) (x : A) : (term1247 A B lt2 z'' g S' H f x) = (term1332 A B lt2 z'' g S' H f x).
Proof. exact (@lem19490 ((term916 A B H f x) = (term916 A B H g x)) (term1243 A B lt2 S' z'' f g x) (term919 A B S' H f x)). Qed.
Lemma lem337004 {A B : Type'} (lt2 : type1402 A) (z'' : type515 A B) (g : A -> B) (S' : type1413 A B) (H : type549 A B) (f : A -> B) (x : A) : (term1333 A B lt2 z'' g S' H f x) = (term1334 A B lt2 z'' g S' H f x).
Proof. exact (@lem19699 (term1239 A B lt2 z'' f g x) (term1232 A B S' z'' f g x) (term919 A B S' H f x)). Qed.
Lemma lem337011 {A B : Type'} (lt2 : type1402 A) (S' : type1413 A B) (z'' : type515 A B) (f : A -> B) (H : type549 A B) (g : A -> B) (x : A) : (term1335 A B lt2 S' z'' f H g x) = (term1336 A B lt2 S' z'' f H g x).
Proof. exact (@lem19699 (term1239 A B lt2 z'' f g x) (term1232 A B S' z'' f g x) ((term916 A B H f x) = (term916 A B H g x))). Qed.
Lemma lem337012 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem337013 {A B : Type'} (lt2 : type1402 A) (S' : type1413 A B) (z'' : type515 A B) (f : A -> B) (H : type549 A B) (g : A -> B) (x : A) : (term1337 A B lt2 S' z'' f H g x) = (term1338 A B lt2 S' z'' f H g x).
Proof. exact (MK_COMB (@lem337012) (@lem337011 A B lt2 S' z'' f H g x)). Qed.
Lemma lem337014 {A B : Type'} (lt2 : type1402 A) (z'' : type515 A B) (g : A -> B) (S' : type1413 A B) (H : type549 A B) (f : A -> B) (x : A) : (term1332 A B lt2 z'' g S' H f x) = (term1339 A B lt2 z'' g S' H f x).
Proof. exact (MK_COMB (@lem337013 A B lt2 S' z'' f H g x) (@lem337004 A B lt2 z'' g S' H f x)). Qed.
Lemma lem337016 {A B : Type'} (lt2 : type1402 A) (z'' : type515 A B) (g : A -> B) (S' : type1413 A B) (H : type549 A B) (f : A -> B) (x : A) : (term1247 A B lt2 z'' g S' H f x) = (term1339 A B lt2 z'' g S' H f x).
Proof. exact (TRANS (@lem336997 A B lt2 z'' g S' H f x) (@lem337014 A B lt2 z'' g S' H f x)). Qed.
Lemma lem337017 {A B : Type'} (lt2 : type1402 A) (z'' : type515 A B) (g : A -> B) (S' : type1413 A B) (H : type549 A B) (f : A -> B) : (term1249 A B lt2 z'' g S' H f) = (term1340 A B lt2 z'' g S' H f).
Proof. exact (fun_ext (fun x : A => @lem337016 A B lt2 z'' g S' H f x)). Qed.
Lemma lem337018 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem337019 {A B : Type'} (lt2 : type1402 A) (z'' : type515 A B) (g : A -> B) (S' : type1413 A B) (H : type549 A B) (f : A -> B) : (term1251 A B lt2 z'' g S' H f) = (term1341 A B lt2 z'' g S' H f).
Proof. exact (MK_COMB (@lem337018 A) (@lem337017 A B lt2 z'' g S' H f)). Qed.
Lemma lem337020 {A B : Type'} (lt2 : type1402 A) (z'' : type515 A B) (S' : type1413 A B) (H : type549 A B) (f : A -> B) : (term1253 A B lt2 z'' S' H f) = (term1342 A B lt2 z'' S' H f).
Proof. exact (fun_ext (fun g : A -> B => @lem337019 A B lt2 z'' g S' H f)). Qed.
Lemma lem337021 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem337022 {A B : Type'} (lt2 : type1402 A) (z'' : type515 A B) (S' : type1413 A B) (H : type549 A B) (f : A -> B) : (term1254 A B lt2 z'' S' H f) = (term1343 A B lt2 z'' S' H f).
Proof. exact (MK_COMB (@lem337021 A B) (@lem337020 A B lt2 z'' S' H f)). Qed.
Lemma lem337023 {A B : Type'} (lt2 : type1402 A) (z'' : type515 A B) (S' : type1413 A B) (H : type549 A B) : (term1255 A B lt2 z'' S' H) = (term1344 A B lt2 z'' S' H).
Proof. exact (fun_ext (fun f : A -> B => @lem337022 A B lt2 z'' S' H f)). Qed.
Lemma lem337024 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem337026 {A B : Type'} (lt2 : type1402 A) (z'' : type515 A B) (S' : type1413 A B) (H : type549 A B) : (term1256 A B lt2 z'' S' H) = (term1345 A B lt2 z'' S' H).
Proof. exact (MK_COMB (@lem337024 A B) (@lem337023 A B lt2 z'' S' H)). Qed.
Lemma lem337027 {A B : Type'} (lt2 : type1402 A) (z'' : type515 A B) (S' : type1413 A B) (H : type549 A B) (h1 : term282 A B lt2 z'' S' H) : term1345 A B lt2 z'' S' H.
Proof. exact (EQ_MP (@lem337026 A B lt2 z'' S' H) (@lem336191 A B lt2 z'' S' H h1)). Qed.
Lemma lem337043 {A B : Type'} (lt2 : type1402 A) (x : A) (R : type1413 A B) (f' : A -> B) (z : A) : (term1676 A B lt2 x R f' z) = (term1676 A B lt2 x R f' z).
Proof. exact (eq_refl (term1676 A B lt2 x R f' z)). Qed.
Lemma lem337044 {A B : Type'} (lt2 : type1402 A) (x : A) (R : type1413 A B) (f' : A -> B) : (term1677 A B lt2 x R f') = (term1677 A B lt2 x R f').
Proof. exact (fun_ext (fun z : A => @lem337043 A B lt2 x R f' z)). Qed.
Lemma lem337045 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem337047 {A B : Type'} (lt2 : type1402 A) (x : A) (R : type1413 A B) (f' : A -> B) : (term1678 A B lt2 x R f') = (term1678 A B lt2 x R f').
Proof. exact (MK_COMB (@lem337045 A) (@lem337044 A B lt2 x R f')). Qed.
Lemma lem337048 {A B : Type'} (f : A -> B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (f' : A -> B) (y' : B) (y : B) (h1 : term1683 A B f H lt2 x R f' y' y) : term1678 A B lt2 x R f'.
Proof. exact (EQ_MP (@lem337047 A B lt2 x R f') (@lem336198 A B f H lt2 x R f' y' y h1)). Qed.
Lemma lem337060 {A B : Type'} (lt2 : type1402 A) (x : A) (R : type1413 A B) (f : A -> B) (z : A) : (term1676 A B lt2 x R f z) = (term1676 A B lt2 x R f z).
Proof. exact (eq_refl (term1676 A B lt2 x R f z)). Qed.
Lemma lem337061 {A B : Type'} (lt2 : type1402 A) (x : A) (R : type1413 A B) (f : A -> B) : (term1677 A B lt2 x R f) = (term1677 A B lt2 x R f).
Proof. exact (fun_ext (fun z : A => @lem337060 A B lt2 x R f z)). Qed.
Lemma lem337062 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem337064 {A B : Type'} (lt2 : type1402 A) (x : A) (R : type1413 A B) (f : A -> B) : (term1678 A B lt2 x R f) = (term1678 A B lt2 x R f).
Proof. exact (MK_COMB (@lem337062 A) (@lem337061 A B lt2 x R f)). Qed.
Lemma lem337065 {A B : Type'} (f : A -> B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (f' : A -> B) (y' : B) (y : B) (h1 : term1683 A B f H lt2 x R f' y' y) : term1678 A B lt2 x R f.
Proof. exact (EQ_MP (@lem337064 A B lt2 x R f) (@lem336200 A B f H lt2 x R f' y' y h1)). Qed.
Lemma lem337072 {A B : Type'} (_7164 : A) (lt2 : type1402 A) (x : A) (y'' : A -> B) (R : type1413 A B) (h1 : term1149 A B lt2 x y'' R) : term1794 A B y'' lt2 x R _7164.
Proof. exact (@lem336377 A B lt2 x y'' R h1 _7164). Qed.
Lemma lem337073 {A B : Type'} (y'' : A -> B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (_7164 : A) : (term1794 A B y'' lt2 x R _7164) = (term1786 A B y'' lt2 x R _7164).
Proof. exact (eq_refl (term1794 A B y'' lt2 x R _7164)). Qed.
Lemma lem337074 {A B : Type'} (_7164 : A) (lt2 : type1402 A) (x : A) (y'' : A -> B) (R : type1413 A B) (h1 : term1149 A B lt2 x y'' R) : term1786 A B y'' lt2 x R _7164.
Proof. exact (EQ_MP (@lem337073 A B y'' lt2 x R _7164) (@lem337072 A B _7164 lt2 x y'' R h1)). Qed.
Lemma lem337075 {A B : Type'} (_7164 : A) (_7165 : B) (lt2 : type1402 A) (x : A) (y'' : A -> B) (R : type1413 A B) (h1 : term1149 A B lt2 x y'' R) : term1795 A B y'' lt2 x R _7164 _7165.
Proof. exact (@lem337074 A B _7164 lt2 x y'' R h1 _7165). Qed.
Lemma lem337076 {A B : Type'} (y'' : A -> B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (_7164 : A) (_7165 : B) : (term1795 A B y'' lt2 x R _7164 _7165) = (term1784 A B y'' lt2 x R _7164 _7165).
Proof. exact (eq_refl (term1795 A B y'' lt2 x R _7164 _7165)). Qed.
Lemma lem337077 {A B : Type'} (_7164 : A) (_7165 : B) (lt2 : type1402 A) (x : A) (y'' : A -> B) (R : type1413 A B) (h1 : term1149 A B lt2 x y'' R) : term1784 A B y'' lt2 x R _7164 _7165.
Proof. exact (EQ_MP (@lem337076 A B y'' lt2 x R _7164 _7165) (@lem337075 A B _7164 _7165 lt2 x y'' R h1)). Qed.
Lemma lem337078 {A B : Type'} (_7164 : A) (_7165 : B) (_7166 : B) (lt2 : type1402 A) (x : A) (y'' : A -> B) (R : type1413 A B) (h1 : term1149 A B lt2 x y'' R) : term1796 A B y'' lt2 x R _7164 _7165 _7166.
Proof. exact (@lem337077 A B _7164 _7165 lt2 x y'' R h1 _7166). Qed.
Lemma lem337079 {A B : Type'} (y'' : A -> B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (_7164 : A) (_7166 : B) (_7165 : B) : (term1796 A B y'' lt2 x R _7164 _7165 _7166) = (term1782 A B y'' lt2 x R _7164 _7166 _7165).
Proof. exact (eq_refl (term1796 A B y'' lt2 x R _7164 _7165 _7166)). Qed.
Lemma lem337080 {A B : Type'} (_7164 : A) (_7166 : B) (_7165 : B) (lt2 : type1402 A) (x : A) (y'' : A -> B) (R : type1413 A B) (h1 : term1149 A B lt2 x y'' R) : term1782 A B y'' lt2 x R _7164 _7166 _7165.
Proof. exact (EQ_MP (@lem337079 A B y'' lt2 x R _7164 _7166 _7165) (@lem337078 A B _7164 _7165 _7166 lt2 x y'' R h1)). Qed.
Lemma lem337108 {A B : Type'} (_7176 : B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (z : type1445 A B) (h1 : term1716 A B H lt2 x R z) : term1797 A B lt2 H x R z _7176.
Proof. exact (@lem336627 A B H lt2 x R z h1 _7176). Qed.
Lemma lem337109 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (x : A) (R : type1413 A B) (z : type1445 A B) (_7176 : B) : (term1797 A B lt2 H x R z _7176) = (term1791 A B lt2 H x R z _7176).
Proof. exact (eq_refl (term1797 A B lt2 H x R z _7176)). Qed.
Lemma lem337110 {A B : Type'} (_7176 : B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (z : type1445 A B) (h1 : term1716 A B H lt2 x R z) : term1791 A B lt2 H x R z _7176.
Proof. exact (EQ_MP (@lem337109 A B lt2 H x R z _7176) (@lem337108 A B _7176 H lt2 x R z h1)). Qed.
Lemma lem337111 {A B : Type'} (_7176 : B) (_7177 : A -> B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (z : type1445 A B) (h1 : term1716 A B H lt2 x R z) : term1798 A B lt2 H x R z _7176 _7177.
Proof. exact (@lem337110 A B _7176 H lt2 x R z h1 _7177). Qed.
Lemma lem337112 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) (x : A) (R : type1413 A B) (z : type1445 A B) (_7176 : B) (_7177 : A -> B) : (term1798 A B lt2 H x R z _7176 _7177) = (term1789 A B lt2 H x R z _7176 _7177).
Proof. exact (eq_refl (term1798 A B lt2 H x R z _7176 _7177)). Qed.
Lemma lem337113 {A B : Type'} (_7176 : B) (_7177 : A -> B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (z : type1445 A B) (h1 : term1716 A B H lt2 x R z) : term1789 A B lt2 H x R z _7176 _7177.
Proof. exact (EQ_MP (@lem337112 A B lt2 H x R z _7176 _7177) (@lem337111 A B _7176 _7177 H lt2 x R z h1)). Qed.
Lemma lem337114 {A B : Type'} (_7178 : A) (R : type1413 A B) (S' : type1413 A B) (h1 : term71 A B R S') : term1295 A B R S' _7178.
Proof. exact (@lem336643 A B R S' h1 _7178). Qed.
Lemma lem337115 {A B : Type'} (R : type1413 A B) (S' : type1413 A B) (_7178 : A) : (term1295 A B R S' _7178) = (term1155 A B R S' _7178).
Proof. exact (eq_refl (term1295 A B R S' _7178)). Qed.
Lemma lem337116 {A B : Type'} (_7178 : A) (R : type1413 A B) (S' : type1413 A B) (h1 : term71 A B R S') : term1155 A B R S' _7178.
Proof. exact (EQ_MP (@lem337115 A B R S' _7178) (@lem337114 A B _7178 R S' h1)). Qed.
Lemma lem337117 {A B : Type'} (_7178 : A) (_7179 : B) (R : type1413 A B) (S' : type1413 A B) (h1 : term71 A B R S') : term1307 A B R S' _7178 _7179.
Proof. exact (@lem337116 A B _7178 R S' h1 _7179). Qed.
Lemma lem337118 {A B : Type'} (R : type1413 A B) (S' : type1413 A B) (_7178 : A) (_7179 : B) : (term1307 A B R S' _7178 _7179) = (term1153 A B R S' _7178 _7179).
Proof. exact (eq_refl (term1307 A B R S' _7178 _7179)). Qed.
Lemma lem337120 {A B : Type'} (_7180 : A) (lt2 : type1402 A) (x : A) (y'' : A -> B) (R : type1413 A B) (h1 : term1149 A B lt2 x y'' R) : term1794 A B y'' lt2 x R _7180.
Proof. exact (@lem336803 A B lt2 x y'' R h1 _7180). Qed.
Lemma lem337121 {A B : Type'} (y'' : A -> B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (_7180 : A) : (term1794 A B y'' lt2 x R _7180) = (term1786 A B y'' lt2 x R _7180).
Proof. exact (eq_refl (term1794 A B y'' lt2 x R _7180)). Qed.
Lemma lem337122 {A B : Type'} (_7180 : A) (lt2 : type1402 A) (x : A) (y'' : A -> B) (R : type1413 A B) (h1 : term1149 A B lt2 x y'' R) : term1786 A B y'' lt2 x R _7180.
Proof. exact (EQ_MP (@lem337121 A B y'' lt2 x R _7180) (@lem337120 A B _7180 lt2 x y'' R h1)). Qed.
Lemma lem337123 {A B : Type'} (_7180 : A) (_7181 : B) (lt2 : type1402 A) (x : A) (y'' : A -> B) (R : type1413 A B) (h1 : term1149 A B lt2 x y'' R) : term1795 A B y'' lt2 x R _7180 _7181.
Proof. exact (@lem337122 A B _7180 lt2 x y'' R h1 _7181). Qed.
Lemma lem337124 {A B : Type'} (y'' : A -> B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (_7180 : A) (_7181 : B) : (term1795 A B y'' lt2 x R _7180 _7181) = (term1784 A B y'' lt2 x R _7180 _7181).
Proof. exact (eq_refl (term1795 A B y'' lt2 x R _7180 _7181)). Qed.
Lemma lem337125 {A B : Type'} (_7180 : A) (_7181 : B) (lt2 : type1402 A) (x : A) (y'' : A -> B) (R : type1413 A B) (h1 : term1149 A B lt2 x y'' R) : term1784 A B y'' lt2 x R _7180 _7181.
Proof. exact (EQ_MP (@lem337124 A B y'' lt2 x R _7180 _7181) (@lem337123 A B _7180 _7181 lt2 x y'' R h1)). Qed.
Lemma lem337126 {A B : Type'} (_7180 : A) (_7181 : B) (_7182 : B) (lt2 : type1402 A) (x : A) (y'' : A -> B) (R : type1413 A B) (h1 : term1149 A B lt2 x y'' R) : term1796 A B y'' lt2 x R _7180 _7181 _7182.
Proof. exact (@lem337125 A B _7180 _7181 lt2 x y'' R h1 _7182). Qed.
Lemma lem337127 {A B : Type'} (y'' : A -> B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (_7180 : A) (_7182 : B) (_7181 : B) : (term1796 A B y'' lt2 x R _7180 _7181 _7182) = (term1782 A B y'' lt2 x R _7180 _7182 _7181).
Proof. exact (eq_refl (term1796 A B y'' lt2 x R _7180 _7181 _7182)). Qed.
Lemma lem337128 {A B : Type'} (_7180 : A) (_7182 : B) (_7181 : B) (lt2 : type1402 A) (x : A) (y'' : A -> B) (R : type1413 A B) (h1 : term1149 A B lt2 x y'' R) : term1782 A B y'' lt2 x R _7180 _7182 _7181.
Proof. exact (EQ_MP (@lem337127 A B y'' lt2 x R _7180 _7182 _7181) (@lem337126 A B _7180 _7181 _7182 lt2 x y'' R h1)). Qed.
Lemma lem337147 {A B : Type'} (_7189 : A -> B) (lt2 : type1402 A) (z'' : type515 A B) (S' : type1413 A B) (H : type549 A B) (h1 : term282 A B lt2 z'' S' H) : term1350 A B lt2 z'' S' H _7189.
Proof. exact (@lem337027 A B lt2 z'' S' H h1 _7189). Qed.
Lemma lem337148 {A B : Type'} (lt2 : type1402 A) (z'' : type515 A B) (S' : type1413 A B) (H : type549 A B) (_7189 : A -> B) : (term1350 A B lt2 z'' S' H _7189) = (term1343 A B lt2 z'' S' H _7189).
Proof. exact (eq_refl (term1350 A B lt2 z'' S' H _7189)). Qed.
Lemma lem337149 {A B : Type'} (_7189 : A -> B) (lt2 : type1402 A) (z'' : type515 A B) (S' : type1413 A B) (H : type549 A B) (h1 : term282 A B lt2 z'' S' H) : term1343 A B lt2 z'' S' H _7189.
Proof. exact (EQ_MP (@lem337148 A B lt2 z'' S' H _7189) (@lem337147 A B _7189 lt2 z'' S' H h1)). Qed.
Lemma lem337150 {A B : Type'} (_7189 : A -> B) (_7190 : A -> B) (lt2 : type1402 A) (z'' : type515 A B) (S' : type1413 A B) (H : type549 A B) (h1 : term282 A B lt2 z'' S' H) : term1351 A B lt2 z'' S' H _7189 _7190.
Proof. exact (@lem337149 A B _7189 lt2 z'' S' H h1 _7190). Qed.
Lemma lem337151 {A B : Type'} (lt2 : type1402 A) (z'' : type515 A B) (_7190 : A -> B) (S' : type1413 A B) (H : type549 A B) (_7189 : A -> B) : (term1351 A B lt2 z'' S' H _7189 _7190) = (term1341 A B lt2 z'' _7190 S' H _7189).
Proof. exact (eq_refl (term1351 A B lt2 z'' S' H _7189 _7190)). Qed.
Lemma lem337152 {A B : Type'} (_7190 : A -> B) (_7189 : A -> B) (lt2 : type1402 A) (z'' : type515 A B) (S' : type1413 A B) (H : type549 A B) (h1 : term282 A B lt2 z'' S' H) : term1341 A B lt2 z'' _7190 S' H _7189.
Proof. exact (EQ_MP (@lem337151 A B lt2 z'' _7190 S' H _7189) (@lem337150 A B _7189 _7190 lt2 z'' S' H h1)). Qed.
Lemma lem337153 {A B : Type'} (_7190 : A -> B) (_7189 : A -> B) (_7191 : A) (lt2 : type1402 A) (z'' : type515 A B) (S' : type1413 A B) (H : type549 A B) (h1 : term282 A B lt2 z'' S' H) : term1352 A B lt2 z'' _7190 S' H _7189 _7191.
Proof. exact (@lem337152 A B _7190 _7189 lt2 z'' S' H h1 _7191). Qed.
Lemma lem337154 {A B : Type'} (lt2 : type1402 A) (z'' : type515 A B) (_7190 : A -> B) (S' : type1413 A B) (H : type549 A B) (_7189 : A -> B) (_7191 : A) : (term1352 A B lt2 z'' _7190 S' H _7189 _7191) = (term1339 A B lt2 z'' _7190 S' H _7189 _7191).
Proof. exact (eq_refl (term1352 A B lt2 z'' _7190 S' H _7189 _7191)). Qed.
Lemma lem337155 {A B : Type'} (_7190 : A -> B) (_7189 : A -> B) (_7191 : A) (lt2 : type1402 A) (z'' : type515 A B) (S' : type1413 A B) (H : type549 A B) (h1 : term282 A B lt2 z'' S' H) : term1339 A B lt2 z'' _7190 S' H _7189 _7191.
Proof. exact (EQ_MP (@lem337154 A B lt2 z'' _7190 S' H _7189 _7191) (@lem337153 A B _7190 _7189 _7191 lt2 z'' S' H h1)). Qed.
Lemma lem337156 {A B : Type'} (_7192 : A) (f : A -> B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (f' : A -> B) (y' : B) (y : B) (h1 : term1683 A B f H lt2 x R f' y' y) : term1799 A B lt2 x R f' _7192.
Proof. exact (@lem337048 A B f H lt2 x R f' y' y h1 _7192). Qed.
Lemma lem337157 {A B : Type'} (lt2 : type1402 A) (x : A) (R : type1413 A B) (f' : A -> B) (_7192 : A) : (term1799 A B lt2 x R f' _7192) = (term1676 A B lt2 x R f' _7192).
Proof. exact (eq_refl (term1799 A B lt2 x R f' _7192)). Qed.
Lemma lem337159 {A B : Type'} (_7193 : A) (f : A -> B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (f' : A -> B) (y' : B) (y : B) (h1 : term1683 A B f H lt2 x R f' y' y) : term1799 A B lt2 x R f _7193.
Proof. exact (@lem337065 A B f H lt2 x R f' y' y h1 _7193). Qed.
Lemma lem337160 {A B : Type'} (lt2 : type1402 A) (x : A) (R : type1413 A B) (f : A -> B) (_7193 : A) : (term1799 A B lt2 x R f _7193) = (term1676 A B lt2 x R f _7193).
Proof. exact (eq_refl (term1799 A B lt2 x R f _7193)). Qed.
Lemma lem337177 {A B : Type'} (_7189 : A -> B) (_7190 : A -> B) (_7191 : A) (lt2 : type1402 A) (z'' : type515 A B) (S' : type1413 A B) (H : type549 A B) (h1 : term282 A B lt2 z'' S' H) : term1336 A B lt2 S' z'' _7189 H _7190 _7191.
Proof. exact (proj1 (@lem337155 A B _7190 _7189 _7191 lt2 z'' S' H h1)). Qed.
Lemma lem337180 {A B : Type'} (_7189 : A -> B) (_7190 : A -> B) (_7191 : A) (lt2 : type1402 A) (z'' : type515 A B) (S' : type1413 A B) (H : type549 A B) (h1 : term282 A B lt2 z'' S' H) : term1800 A B S' z'' _7189 H _7190 _7191.
Proof. exact (proj2 (@lem337177 A B _7189 _7190 _7191 lt2 z'' S' H h1)). Qed.
Lemma lem337199 {A B : Type'} (_7176 : B) (_7177 : A -> B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (z : type1445 A B) (h1 : term1716 A B H lt2 x R z) : term1801 A B H lt2 z _7176 _7177 x.
Proof. exact (proj1 (@lem337113 A B _7176 _7177 H lt2 x R z h1)). Qed.
Lemma lem337205 {A B : Type'} (_7176 : B) (_7177 : A -> B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (z : type1445 A B) (h1 : term1716 A B H lt2 x R z) : term1802 A B H x R z _7176 _7177.
Proof. exact (proj2 (@lem337113 A B _7176 _7177 H lt2 x R z h1)). Qed.
Lemma lem337285 {A B : Type'} (_7164 : A) (lt2 : type1402 A) (x : A) (y'' : A -> B) (R : type1413 A B) (h1 : term1149 A B lt2 x y'' R) : term1676 A B lt2 x R y'' _7164.
Proof. exact (proj1 (@lem337080 A B _7164 (@el B) (@el B) lt2 x y'' R h1)). Qed.
Lemma lem337307 {A B : Type'} (f : A -> B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (f' : A -> B) (y' : B) (y : B) (h1 : term1683 A B f H lt2 x R f' y' y) : term1478 B y' y.
Proof. exact (proj2 (@lem336194 A B f H lt2 x R f' y' y h1)). Qed.
Lemma lem337317 {A B : Type'} (f : A -> B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (f' : A -> B) (y' : B) (y : B) (h1 : term1683 A B f H lt2 x R f' y' y) : y = (term916 A B H f x).
Proof. exact (proj1 (@lem336195 A B f H lt2 x R f' y' y h1)). Qed.
Lemma lem337358 {A B : Type'} (S' : type1413 A B) (z'' : type515 A B) (_7189 : A -> B) (H : type549 A B) (_7190 : A -> B) (_7191 : A) : (term1800 A B S' z'' _7189 H _7190 _7191) = (term1803 A B S' z'' _7189 H _7190 _7191).
Proof. exact (@lem322856 (term1228 A B z'' _7189 _7190 _7191) (term1221 A B S' z'' _7189 _7190 _7191) ((term916 A B H _7189 _7191) = (term916 A B H _7190 _7191))). Qed.
Lemma lem337446 {B : Type'} (y' : B) : (term1804 B y') = (term1804 B y').
Proof. exact (eq_refl (term1804 B y')). Qed.
Lemma lem337447 {A B : Type'} (f : A -> B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (f' : A -> B) (y' : B) (y : B) (h1 : term1683 A B f H lt2 x R f' y' y) : (term1805 B y' y) = (term1806 A B y' H f x).
Proof. exact (MK_COMB (@lem337446 B y') (@lem337317 A B f H lt2 x R f' y' y h1)). Qed.
Lemma lem337448 {A B : Type'} (y' : B) (H : type549 A B) (f : A -> B) (x : A) : (term1806 A B y' H f x) = (term1708 A B y' H f x).
Proof. exact (eq_refl (term1806 A B y' H f x)). Qed.
Lemma lem337449 {B : Type'} (y' : B) (y : B) : (term1807 B y' y) = (term1807 B y' y).
Proof. exact (eq_refl (term1807 B y' y)). Qed.
Lemma lem337450 {A B : Type'} (y : B) (y' : B) (H : type549 A B) (f : A -> B) (x : A) : ((term1805 B y' y) = (term1806 A B y' H f x)) = ((term1805 B y' y) = (term1708 A B y' H f x)).
Proof. exact (MK_COMB (@lem337449 B y' y) (@lem337448 A B y' H f x)). Qed.
Lemma lem337451 {B : Type'} (y' : B) (y : B) : (term1805 B y' y) = (term1478 B y' y).
Proof. exact (eq_refl (term1805 B y' y)). Qed.
Lemma lem337452 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem337453 {B : Type'} (y' : B) (y : B) : (term1807 B y' y) = (term1808 B y' y).
Proof. exact (MK_COMB (@lem337452) (@lem337451 B y' y)). Qed.
Lemma lem337454 {A B : Type'} (y' : B) (H : type549 A B) (f : A -> B) (x : A) : (term1708 A B y' H f x) = (term1708 A B y' H f x).
Proof. exact (eq_refl (term1708 A B y' H f x)). Qed.
Lemma lem337455 {A B : Type'} (y : B) (y' : B) (H : type549 A B) (f : A -> B) (x : A) : ((term1805 B y' y) = (term1708 A B y' H f x)) = ((term1478 B y' y) = (term1708 A B y' H f x)).
Proof. exact (MK_COMB (@lem337453 B y' y) (@lem337454 A B y' H f x)). Qed.
Lemma lem337456 {A B : Type'} (y : B) (y' : B) (H : type549 A B) (f : A -> B) (x : A) : ((term1805 B y' y) = (term1806 A B y' H f x)) = ((term1478 B y' y) = (term1708 A B y' H f x)).
Proof. exact (TRANS (@lem337450 A B y y' H f x) (@lem337455 A B y y' H f x)). Qed.
Lemma lem337457 {A B : Type'} (f : A -> B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (f' : A -> B) (y' : B) (y : B) (h1 : term1683 A B f H lt2 x R f' y' y) : (term1478 B y' y) = (term1708 A B y' H f x).
Proof. exact (EQ_MP (@lem337456 A B y y' H f x) (@lem337447 A B f H lt2 x R f' y' y h1)). Qed.
Lemma lem337458 {A B : Type'} (f : A -> B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (f' : A -> B) (y' : B) (y : B) (h1 : term1683 A B f H lt2 x R f' y' y) : term1708 A B y' H f x.
Proof. exact (EQ_MP (@lem337457 A B f H lt2 x R f' y' y h1) (@lem337307 A B f H lt2 x R f' y' y h1)). Qed.
Lemma lem337472 {A B : Type'} (f : A -> B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (f' : A -> B) (y' : B) (y : B) (h1 : term1683 A B f H lt2 x R f' y' y) : y' = (term916 A B H f' x).
Proof. exact (proj1 (@lem336197 A B f H lt2 x R f' y' y h1)). Qed.
Lemma lem337668 {A B : Type'} (_7178 : A) (_7179 : B) (R : type1413 A B) (S' : type1413 A B) (h1 : term71 A B R S') : term1153 A B R S' _7178 _7179.
Proof. exact (EQ_MP (@lem337118 A B R S' _7178 _7179) (@lem337117 A B _7178 _7179 R S' h1)). Qed.
Lemma lem337669 {A B : Type'} (H : type549 A B) (f : A -> B) (x : A) : (term1809 A B H f x) = (term1809 A B H f x).
Proof. exact (eq_refl (term1809 A B H f x)). Qed.
Lemma lem337670 {A B : Type'} (f : A -> B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (f' : A -> B) (y' : B) (y : B) (h1 : term1683 A B f H lt2 x R f' y' y) : (term1810 A B H f x y') = (term1811 A B f H f' x).
Proof. exact (MK_COMB (@lem337669 A B H f x) (@lem337472 A B f H lt2 x R f' y' y h1)). Qed.
Lemma lem337671 {A B : Type'} (f' : A -> B) (H : type549 A B) (f : A -> B) (x : A) : (term1811 A B f H f' x) = (term1812 A B f' H f x).
Proof. exact (eq_refl (term1811 A B f H f' x)). Qed.
Lemma lem337672 {A B : Type'} (H : type549 A B) (f : A -> B) (x : A) (y' : B) : (term1813 A B H f x y') = (term1813 A B H f x y').
Proof. exact (eq_refl (term1813 A B H f x y')). Qed.
Lemma lem337673 {A B : Type'} (y' : B) (f' : A -> B) (H : type549 A B) (f : A -> B) (x : A) : ((term1810 A B H f x y') = (term1811 A B f H f' x)) = ((term1810 A B H f x y') = (term1812 A B f' H f x)).
Proof. exact (MK_COMB (@lem337672 A B H f x y') (@lem337671 A B f' H f x)). Qed.
Lemma lem337674 {A B : Type'} (y' : B) (H : type549 A B) (f : A -> B) (x : A) : (term1810 A B H f x y') = (term1708 A B y' H f x).
Proof. exact (eq_refl (term1810 A B H f x y')). Qed.
Lemma lem337675 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem337676 {A B : Type'} (y' : B) (H : type549 A B) (f : A -> B) (x : A) : (term1813 A B H f x y') = (term1814 A B y' H f x).
Proof. exact (MK_COMB (@lem337675) (@lem337674 A B y' H f x)). Qed.
Lemma lem337677 {A B : Type'} (f' : A -> B) (H : type549 A B) (f : A -> B) (x : A) : (term1812 A B f' H f x) = (term1812 A B f' H f x).
Proof. exact (eq_refl (term1812 A B f' H f x)). Qed.
Lemma lem337678 {A B : Type'} (y' : B) (f' : A -> B) (H : type549 A B) (f : A -> B) (x : A) : ((term1810 A B H f x y') = (term1812 A B f' H f x)) = ((term1708 A B y' H f x) = (term1812 A B f' H f x)).
Proof. exact (MK_COMB (@lem337676 A B y' H f x) (@lem337677 A B f' H f x)). Qed.
Lemma lem337679 {A B : Type'} (y' : B) (f' : A -> B) (H : type549 A B) (f : A -> B) (x : A) : ((term1810 A B H f x y') = (term1811 A B f H f' x)) = ((term1708 A B y' H f x) = (term1812 A B f' H f x)).
Proof. exact (TRANS (@lem337673 A B y' f' H f x) (@lem337678 A B y' f' H f x)). Qed.
Lemma lem337680 {A B : Type'} (f : A -> B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (f' : A -> B) (y' : B) (y : B) (h1 : term1683 A B f H lt2 x R f' y' y) : (term1708 A B y' H f x) = (term1812 A B f' H f x).
Proof. exact (EQ_MP (@lem337679 A B y' f' H f x) (@lem337670 A B f H lt2 x R f' y' y h1)). Qed.
Lemma lem337681 {A B : Type'} (f : A -> B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (f' : A -> B) (y' : B) (y : B) (h1 : term1683 A B f H lt2 x R f' y' y) : term1812 A B f' H f x.
Proof. exact (EQ_MP (@lem337680 A B f H lt2 x R f' y' y h1) (@lem337458 A B f H lt2 x R f' y' y h1)). Qed.
Lemma lem337695 {A B : Type'} (_7192 : A) (f : A -> B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (f' : A -> B) (y' : B) (y : B) (h1 : term1683 A B f H lt2 x R f' y' y) : term1676 A B lt2 x R f' _7192.
Proof. exact (EQ_MP (@lem337157 A B lt2 x R f' _7192) (@lem337156 A B _7192 f H lt2 x R f' y' y h1)). Qed.
Lemma lem337709 {A B : Type'} (_7193 : A) (f : A -> B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (f' : A -> B) (y' : B) (y : B) (h1 : term1683 A B f H lt2 x R f' y' y) : term1676 A B lt2 x R f _7193.
Proof. exact (EQ_MP (@lem337160 A B lt2 x R f _7193) (@lem337159 A B _7193 f H lt2 x R f' y' y h1)). Qed.
Lemma lem337751 {A B : Type'} (_7189 : A -> B) (_7190 : A -> B) (_7191 : A) (lt2 : type1402 A) (z'' : type515 A B) (S' : type1413 A B) (H : type549 A B) (h1 : term282 A B lt2 z'' S' H) : term1815 A B lt2 z'' _7189 H _7190 _7191.
Proof. exact (proj1 (@lem337177 A B _7189 _7190 _7191 lt2 z'' S' H h1)). Qed.
Lemma lem337765 {A B : Type'} (_7189 : A -> B) (_7190 : A -> B) (_7191 : A) (lt2 : type1402 A) (z'' : type515 A B) (S' : type1413 A B) (H : type549 A B) (h1 : term282 A B lt2 z'' S' H) : term1803 A B S' z'' _7189 H _7190 _7191.
Proof. exact (EQ_MP (@lem337358 A B S' z'' _7189 H _7190 _7191) (@lem337180 A B _7189 _7190 _7191 lt2 z'' S' H h1)). Qed.
Lemma lem337849 {A B : Type'} (_7180 : A) (_7182 : B) (_7181 : B) (lt2 : type1402 A) (x : A) (y'' : A -> B) (R : type1413 A B) (h1 : term1149 A B lt2 x y'' R) : term1816 A B lt2 x R _7180 _7182 _7181.
Proof. exact (proj2 (@lem337128 A B _7180 _7182 _7181 lt2 x y'' R h1)). Qed.
Lemma lem338084 {B : Type'} (x : B) : x = x.
Proof. exact (@lem21386 B x). Qed.
Lemma lem338085 {B : Type'} (x : B) : x = x.
Proof. exact (@lem338084 B x). Qed.
Lemma lem338086 {A B : Type'} (H : type549 A B) (y'' : A -> B) (x : A) : (term916 A B H y'' x) = (term916 A B H y'' x).
Proof. exact (@lem338085 B (term916 A B H y'' x)). Qed.
Lemma lem338087 {A B : Type'} (H : type549 A B) (y'' : A -> B) (x : A) : term1817 A B H y'' x.
Proof. exact (fun h0 : term1818 A B H y'' x => @lem338086 A B H y'' x). Qed.
Lemma lem338089 (p : Prop) : (term986 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem338090 {A B : Type'} (H : type549 A B) (y'' : A -> B) (x : A) : (term1817 A B H y'' x) = ((term916 A B H y'' x) = (term916 A B H y'' x)).
Proof. exact (@lem338089 ((term916 A B H y'' x) = (term916 A B H y'' x))). Qed.
Lemma lem338091 {A B : Type'} (H : type549 A B) (y'' : A -> B) (x : A) : (term916 A B H y'' x) = (term916 A B H y'' x).
Proof. exact (EQ_MP (@lem338090 A B H y'' x) (@lem338087 A B H y'' x)). Qed.
Lemma lem338093 {B : Type'} (x : B) : x = x.
Proof. exact (@lem21386 B x). Qed.
Lemma lem338094 {B : Type'} (x : B) : x = x.
Proof. exact (@lem338093 B x). Qed.
Lemma lem338095 {A B : Type'} (H : type549 A B) (y'' : A -> B) (x : A) : (term916 A B H y'' x) = (term916 A B H y'' x).
Proof. exact (@lem338094 B (term916 A B H y'' x)). Qed.
Lemma lem338096 {A B : Type'} (H : type549 A B) (y'' : A -> B) (x : A) : term1817 A B H y'' x.
Proof. exact (fun h0 : term1818 A B H y'' x => @lem338095 A B H y'' x). Qed.
Lemma lem338098 (p : Prop) : (term986 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem338099 {A B : Type'} (H : type549 A B) (y'' : A -> B) (x : A) : (term1817 A B H y'' x) = ((term916 A B H y'' x) = (term916 A B H y'' x)).
Proof. exact (@lem338098 ((term916 A B H y'' x) = (term916 A B H y'' x))). Qed.
Lemma lem338100 {A B : Type'} (H : type549 A B) (y'' : A -> B) (x : A) : (term916 A B H y'' x) = (term916 A B H y'' x).
Proof. exact (EQ_MP (@lem338099 A B H y'' x) (@lem338096 A B H y'' x)). Qed.
Lemma lem338106 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem338107 {A B : Type'} (lt2 : type1402 A) (z : type1445 A B) (_7176 : B) (H : type549 A B) (_7177 : A -> B) (x : A) : (term1801 A B H lt2 z _7176 _7177 x) = (term1819 A B lt2 z _7176 H _7177 x).
Proof. exact (@lem338106 (term1703 A B lt2 z _7176 _7177 x) (term1708 A B _7176 H _7177 x)). Qed.
Lemma lem338115 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem338116 {A B : Type'} (lt2 : type1402 A) (z : type1445 A B) (_7176 : B) (H : type549 A B) (_7177 : A -> B) (x : A) : (term1820 A B H lt2 z _7176 _7177 x) = (term1821 A B lt2 z _7176 H _7177 x).
Proof. exact (MK_COMB (@lem338115) (@lem338107 A B lt2 z _7176 H _7177 x)). Qed.
Lemma lem338124 {A B : Type'} (lt2 : type1402 A) (z : type1445 A B) (_7176 : B) (H : type549 A B) (_7177 : A -> B) (x : A) : (term1819 A B lt2 z _7176 H _7177 x) = (term1819 A B lt2 z _7176 H _7177 x).
Proof. exact (eq_refl (term1819 A B lt2 z _7176 H _7177 x)). Qed.
Lemma lem338125 {A B : Type'} (lt2 : type1402 A) (z : type1445 A B) (_7176 : B) (H : type549 A B) (_7177 : A -> B) (x : A) : ((term1801 A B H lt2 z _7176 _7177 x) = (term1819 A B lt2 z _7176 H _7177 x)) = ((term1819 A B lt2 z _7176 H _7177 x) = (term1819 A B lt2 z _7176 H _7177 x)).
Proof. exact (MK_COMB (@lem338116 A B lt2 z _7176 H _7177 x) (@lem338124 A B lt2 z _7176 H _7177 x)). Qed.
Lemma lem338127 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem20665 A x) (@lem20664 A x)). Qed.
Lemma lem338128 (x : Prop) : (x = x) = True.
Proof. exact (@lem338127 Prop x). Qed.
Lemma lem338129 {A B : Type'} (lt2 : type1402 A) (z : type1445 A B) (_7176 : B) (H : type549 A B) (_7177 : A -> B) (x : A) : ((term1819 A B lt2 z _7176 H _7177 x) = (term1819 A B lt2 z _7176 H _7177 x)) = True.
Proof. exact (@lem338128 (term1819 A B lt2 z _7176 H _7177 x)). Qed.
Lemma lem338130 {A B : Type'} (lt2 : type1402 A) (z : type1445 A B) (_7176 : B) (H : type549 A B) (_7177 : A -> B) (x : A) : ((term1801 A B H lt2 z _7176 _7177 x) = (term1819 A B lt2 z _7176 H _7177 x)) = True.
Proof. exact (TRANS (@lem338125 A B lt2 z _7176 H _7177 x) (@lem338129 A B lt2 z _7176 H _7177 x)). Qed.
Lemma lem338131 {A B : Type'} (lt2 : type1402 A) (z : type1445 A B) (_7176 : B) (H : type549 A B) (_7177 : A -> B) (x : A) : True = ((term1801 A B H lt2 z _7176 _7177 x) = (term1819 A B lt2 z _7176 H _7177 x)).
Proof. exact (SYM (@lem338130 A B lt2 z _7176 H _7177 x)). Qed.
Lemma lem338132 {A B : Type'} (lt2 : type1402 A) (z : type1445 A B) (_7176 : B) (H : type549 A B) (_7177 : A -> B) (x : A) : (term1801 A B H lt2 z _7176 _7177 x) = (term1819 A B lt2 z _7176 H _7177 x).
Proof. exact (EQ_MP (@lem338131 A B lt2 z _7176 H _7177 x) (@lem0)). Qed.
Lemma lem338133 {A B : Type'} (_7176 : B) (_7177 : A -> B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (z : type1445 A B) (h1 : term1716 A B H lt2 x R z) : term1819 A B lt2 z _7176 H _7177 x.
Proof. exact (EQ_MP (@lem338132 A B lt2 z _7176 H _7177 x) (@lem337199 A B _7176 _7177 H lt2 x R z h1)). Qed.
Lemma lem338135 (b : Prop) (a : Prop) : (a \/ b) = (term990 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem338136 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (z : type1445 A B) (_7176 : B) (_7177 : A -> B) (x : A) : (term1819 A B lt2 z _7176 H _7177 x) = (term1822 A B H lt2 z _7176 _7177 x).
Proof. exact (@lem338135 (term1708 A B _7176 H _7177 x) (term1703 A B lt2 z _7176 _7177 x)). Qed.
Lemma lem338138 (a : Prop) : (term992 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem338139 {A B : Type'} (_7176 : B) (H : type549 A B) (_7177 : A -> B) (x : A) : (term1823 A B _7176 H _7177 x) = (_7176 = (term916 A B H _7177 x)).
Proof. exact (@lem338138 (_7176 = (term916 A B H _7177 x))). Qed.
Lemma lem338140 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem338141 {A B : Type'} (_7176 : B) (H : type549 A B) (_7177 : A -> B) (x : A) : (term1824 A B _7176 H _7177 x) = (term1825 A B _7176 H _7177 x).
Proof. exact (MK_COMB (@lem338140) (@lem338139 A B _7176 H _7177 x)). Qed.
Lemma lem338142 {A B : Type'} (lt2 : type1402 A) (z : type1445 A B) (_7176 : B) (_7177 : A -> B) (x : A) : (term1703 A B lt2 z _7176 _7177 x) = (term1703 A B lt2 z _7176 _7177 x).
Proof. exact (eq_refl (term1703 A B lt2 z _7176 _7177 x)). Qed.
Lemma lem338143 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (z : type1445 A B) (_7176 : B) (_7177 : A -> B) (x : A) : (term1822 A B H lt2 z _7176 _7177 x) = (term1826 A B H lt2 z _7176 _7177 x).
Proof. exact (MK_COMB (@lem338141 A B _7176 H _7177 x) (@lem338142 A B lt2 z _7176 _7177 x)). Qed.
Lemma lem338144 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (z : type1445 A B) (_7176 : B) (_7177 : A -> B) (x : A) : (term1819 A B lt2 z _7176 H _7177 x) = (term1826 A B H lt2 z _7176 _7177 x).
Proof. exact (TRANS (@lem338136 A B H lt2 z _7176 _7177 x) (@lem338143 A B H lt2 z _7176 _7177 x)). Qed.
Lemma lem338147 {A B : Type'} (_7176 : B) (_7177 : A -> B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (z : type1445 A B) (h1 : term1716 A B H lt2 x R z) : term1826 A B H lt2 z _7176 _7177 x.
Proof. exact (EQ_MP (@lem338144 A B H lt2 z _7176 _7177 x) (@lem338133 A B _7176 _7177 H lt2 x R z h1)). Qed.
Lemma lem338148 {A B : Type'} (_7176 : B) (_7177 : A -> B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (z : type1445 A B) (h1 : term1716 A B H lt2 x R z) : term1826 A B H lt2 z _7176 _7177 x.
Proof. exact (@lem338147 A B _7176 _7177 H lt2 x R z h1). Qed.
Lemma lem338149 {A B : Type'} (y'' : A -> B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (z : type1445 A B) (h1 : term1716 A B H lt2 x R z) : term1827 A B lt2 z H y'' x.
Proof. exact (@lem338148 A B (term916 A B H y'' x) y'' H lt2 x R z h1). Qed.
Lemma lem338152 {A B : Type'} (y'' : A -> B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (z : type1445 A B) (h1 : term1716 A B H lt2 x R z) : term1828 A B lt2 z H y'' x.
Proof. exact (@lem338149 A B y'' H lt2 x R z h1 (@lem338100 A B H y'' x)). Qed.
Lemma lem338153 {A B : Type'} (y'' : A -> B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (z : type1445 A B) (h1 : term1716 A B H lt2 x R z) : term1828 A B lt2 z H y'' x.
Proof. exact (@lem338152 A B y'' H lt2 x R z h1). Qed.
Lemma lem338154 {A B : Type'} (y'' : A -> B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (z : type1445 A B) (h1 : term1716 A B H lt2 x R z) : term1829 A B lt2 z H y'' x.
Proof. exact (fun h0 : term1830 A B lt2 z H y'' x => @lem338153 A B y'' H lt2 x R z h1). Qed.
Lemma lem338156 (p : Prop) : (term986 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem338157 {A B : Type'} (lt2 : type1402 A) (z : type1445 A B) (H : type549 A B) (y'' : A -> B) (x : A) : (term1829 A B lt2 z H y'' x) = (term1828 A B lt2 z H y'' x).
Proof. exact (@lem338156 (term1828 A B lt2 z H y'' x)). Qed.
Lemma lem338158 {A B : Type'} (y'' : A -> B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (z : type1445 A B) (h1 : term1716 A B H lt2 x R z) : term1828 A B lt2 z H y'' x.
Proof. exact (EQ_MP (@lem338157 A B lt2 z H y'' x) (@lem338154 A B y'' H lt2 x R z h1)). Qed.
Lemma lem338164 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem338165 {A B : Type'} (R : type1413 A B) (y'' : A -> B) (lt2 : type1402 A) (_7164 : A) (x : A) : (term1676 A B lt2 x R y'' _7164) = (term1831 A B R y'' lt2 _7164 x).
Proof. exact (@lem338164 (term898 A B R y'' _7164) (term1674 A lt2 _7164 x)). Qed.
Lemma lem338171 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem338172 {A B : Type'} (R : type1413 A B) (y'' : A -> B) (lt2 : type1402 A) (_7164 : A) (x : A) : (term1832 A B lt2 x R y'' _7164) = (term1833 A B R y'' lt2 _7164 x).
Proof. exact (MK_COMB (@lem338171) (@lem338165 A B R y'' lt2 _7164 x)). Qed.
Lemma lem338178 {A B : Type'} (R : type1413 A B) (y'' : A -> B) (lt2 : type1402 A) (_7164 : A) (x : A) : (term1831 A B R y'' lt2 _7164 x) = (term1831 A B R y'' lt2 _7164 x).
Proof. exact (eq_refl (term1831 A B R y'' lt2 _7164 x)). Qed.
Lemma lem338179 {A B : Type'} (R : type1413 A B) (y'' : A -> B) (lt2 : type1402 A) (_7164 : A) (x : A) : ((term1676 A B lt2 x R y'' _7164) = (term1831 A B R y'' lt2 _7164 x)) = ((term1831 A B R y'' lt2 _7164 x) = (term1831 A B R y'' lt2 _7164 x)).
Proof. exact (MK_COMB (@lem338172 A B R y'' lt2 _7164 x) (@lem338178 A B R y'' lt2 _7164 x)). Qed.
Lemma lem338181 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem20665 A x) (@lem20664 A x)). Qed.
Lemma lem338182 (x : Prop) : (x = x) = True.
Proof. exact (@lem338181 Prop x). Qed.
Lemma lem338183 {A B : Type'} (R : type1413 A B) (y'' : A -> B) (lt2 : type1402 A) (_7164 : A) (x : A) : ((term1831 A B R y'' lt2 _7164 x) = (term1831 A B R y'' lt2 _7164 x)) = True.
Proof. exact (@lem338182 (term1831 A B R y'' lt2 _7164 x)). Qed.
Lemma lem338184 {A B : Type'} (R : type1413 A B) (y'' : A -> B) (lt2 : type1402 A) (_7164 : A) (x : A) : ((term1676 A B lt2 x R y'' _7164) = (term1831 A B R y'' lt2 _7164 x)) = True.
Proof. exact (TRANS (@lem338179 A B R y'' lt2 _7164 x) (@lem338183 A B R y'' lt2 _7164 x)). Qed.
Lemma lem338185 {A B : Type'} (R : type1413 A B) (y'' : A -> B) (lt2 : type1402 A) (_7164 : A) (x : A) : True = ((term1676 A B lt2 x R y'' _7164) = (term1831 A B R y'' lt2 _7164 x)).
Proof. exact (SYM (@lem338184 A B R y'' lt2 _7164 x)). Qed.
Lemma lem338186 {A B : Type'} (R : type1413 A B) (y'' : A -> B) (lt2 : type1402 A) (_7164 : A) (x : A) : (term1676 A B lt2 x R y'' _7164) = (term1831 A B R y'' lt2 _7164 x).
Proof. exact (EQ_MP (@lem338185 A B R y'' lt2 _7164 x) (@lem0)). Qed.
Lemma lem338187 {A B : Type'} (_7164 : A) (lt2 : type1402 A) (x : A) (y'' : A -> B) (R : type1413 A B) (h1 : term1149 A B lt2 x y'' R) : term1831 A B R y'' lt2 _7164 x.
Proof. exact (EQ_MP (@lem338186 A B R y'' lt2 _7164 x) (@lem337285 A B _7164 lt2 x y'' R h1)). Qed.
Lemma lem338189 (b : Prop) (a : Prop) : (a \/ b) = (term990 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem338190 {A B : Type'} (lt2 : type1402 A) (x : A) (R : type1413 A B) (y'' : A -> B) (_7164 : A) : (term1831 A B R y'' lt2 _7164 x) = (term1834 A B lt2 x R y'' _7164).
Proof. exact (@lem338189 (term1674 A lt2 _7164 x) (term898 A B R y'' _7164)). Qed.
Lemma lem338192 (a : Prop) : (term992 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem338193 {A : Type'} (lt2 : type1402 A) (_7164 : A) (x : A) : (term1835 A lt2 _7164 x) = (term1673 A lt2 _7164 x).
Proof. exact (@lem338192 (term1673 A lt2 _7164 x)). Qed.
Lemma lem338194 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem338195 {A : Type'} (lt2 : type1402 A) (_7164 : A) (x : A) : (term1836 A lt2 _7164 x) = (term1837 A lt2 _7164 x).
Proof. exact (MK_COMB (@lem338194) (@lem338193 A lt2 _7164 x)). Qed.
Lemma lem338196 {A B : Type'} (R : type1413 A B) (y'' : A -> B) (_7164 : A) : (term898 A B R y'' _7164) = (term898 A B R y'' _7164).
Proof. exact (eq_refl (term898 A B R y'' _7164)). Qed.
Lemma lem338197 {A B : Type'} (lt2 : type1402 A) (x : A) (R : type1413 A B) (y'' : A -> B) (_7164 : A) : (term1834 A B lt2 x R y'' _7164) = (term1838 A B lt2 x R y'' _7164).
Proof. exact (MK_COMB (@lem338195 A lt2 _7164 x) (@lem338196 A B R y'' _7164)). Qed.
Lemma lem338198 {A B : Type'} (lt2 : type1402 A) (x : A) (R : type1413 A B) (y'' : A -> B) (_7164 : A) : (term1831 A B R y'' lt2 _7164 x) = (term1838 A B lt2 x R y'' _7164).
Proof. exact (TRANS (@lem338190 A B lt2 x R y'' _7164) (@lem338197 A B lt2 x R y'' _7164)). Qed.
Lemma lem338201 {A B : Type'} (_7164 : A) (lt2 : type1402 A) (x : A) (y'' : A -> B) (R : type1413 A B) (h1 : term1149 A B lt2 x y'' R) : term1838 A B lt2 x R y'' _7164.
Proof. exact (EQ_MP (@lem338198 A B lt2 x R y'' _7164) (@lem338187 A B _7164 lt2 x y'' R h1)). Qed.
Lemma lem338202 {A B : Type'} (_7164 : A) (lt2 : type1402 A) (x : A) (y'' : A -> B) (R : type1413 A B) (h1 : term1149 A B lt2 x y'' R) : term1838 A B lt2 x R y'' _7164.
Proof. exact (@lem338201 A B _7164 lt2 x y'' R h1). Qed.
Lemma lem338203 {A B : Type'} (z : type1445 A B) (H : type549 A B) (lt2 : type1402 A) (x : A) (y'' : A -> B) (R : type1413 A B) (h1 : term1149 A B lt2 x y'' R) : term1839 A B lt2 R z H x y''.
Proof. exact (@lem338202 A B (term1840 A B z H x y'') lt2 x y'' R h1). Qed.
Lemma lem338206 {A B : Type'} (y'' : A -> B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (z : type1445 A B) (h1 : term1149 A B lt2 x y'' R) (h2 : term1716 A B H lt2 x R z) : term1841 A B R z H x y''.
Proof. exact (@lem338203 A B z H lt2 x y'' R h1 (@lem338158 A B y'' H lt2 x R z h2)). Qed.
Lemma lem338207 {A B : Type'} (y'' : A -> B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (z : type1445 A B) (h1 : term1149 A B lt2 x y'' R) (h2 : term1716 A B H lt2 x R z) : term1842 A B R z H x y''.
Proof. exact (fun h0 : term1843 A B R z H x y'' => @lem338206 A B y'' H lt2 x R z h1 h2). Qed.
Lemma lem338209 (p : Prop) : (term986 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem338210 {A B : Type'} (R : type1413 A B) (z : type1445 A B) (H : type549 A B) (x : A) (y'' : A -> B) : (term1842 A B R z H x y'') = (term1841 A B R z H x y'').
Proof. exact (@lem338209 (term1841 A B R z H x y'')). Qed.
Lemma lem338211 {A B : Type'} (y'' : A -> B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (z : type1445 A B) (h1 : term1149 A B lt2 x y'' R) (h2 : term1716 A B H lt2 x R z) : term1841 A B R z H x y''.
Proof. exact (EQ_MP (@lem338210 A B R z H x y'') (@lem338207 A B y'' H lt2 x R z h1 h2)). Qed.
Lemma lem338213 (a : Prop) (b : Prop) : (term1844 a b) = (term1845 a b).
Proof. exact (EQ_MP (@lem20904 a b) (@lem21007 a b)). Qed.
Lemma lem338214 {A B : Type'} (H : type549 A B) (x : A) (R : type1413 A B) (z : type1445 A B) (_7176 : B) (_7177 : A -> B) : (term1802 A B H x R z _7176 _7177) = (term1846 A B H x R z _7176 _7177).
Proof. exact (@lem338213 (_7176 = (term916 A B H _7177 x)) (term1694 A B R z _7176 _7177)). Qed.
Lemma lem338216 (p : Prop) : (~ p) = (p -> False).
Proof. exact (EQ_MP (@lem21021 p) (@lem0)). Qed.
Lemma lem338217 {A B : Type'} (H : type549 A B) (x : A) (R : type1413 A B) (z : type1445 A B) (_7176 : B) (_7177 : A -> B) : (term1846 A B H x R z _7176 _7177) = (term1847 A B H x R z _7176 _7177).
Proof. exact (@lem338216 (term1848 A B H x R z _7176 _7177)). Qed.
Lemma lem338218 {A B : Type'} (H : type549 A B) (x : A) (R : type1413 A B) (z : type1445 A B) (_7176 : B) (_7177 : A -> B) : (term1802 A B H x R z _7176 _7177) = (term1847 A B H x R z _7176 _7177).
Proof. exact (TRANS (@lem338214 A B H x R z _7176 _7177) (@lem338217 A B H x R z _7176 _7177)). Qed.
Lemma lem338220 {A B : Type'} (y'' : A -> B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (z : type1445 A B) (h1 : term1149 A B lt2 x y'' R) (h2 : term1716 A B H lt2 x R z) : term1849 A B R z H x y''.
Proof. exact (conj (@lem338091 A B H y'' x) (@lem338211 A B y'' H lt2 x R z h1 h2)). Qed.
Lemma lem338222 {A B : Type'} (_7176 : B) (_7177 : A -> B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (z : type1445 A B) (h1 : term1716 A B H lt2 x R z) : term1847 A B H x R z _7176 _7177.
Proof. exact (EQ_MP (@lem338218 A B H x R z _7176 _7177) (@lem337205 A B _7176 _7177 H lt2 x R z h1)). Qed.
Lemma lem338223 {A B : Type'} (_7176 : B) (_7177 : A -> B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (z : type1445 A B) (h1 : term1716 A B H lt2 x R z) : term1847 A B H x R z _7176 _7177.
Proof. exact (@lem338222 A B _7176 _7177 H lt2 x R z h1). Qed.
Lemma lem338224 {A B : Type'} (y'' : A -> B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (z : type1445 A B) (h1 : term1716 A B H lt2 x R z) : term1850 A B R z H x y''.
Proof. exact (@lem338223 A B (term916 A B H y'' x) y'' H lt2 x R z h1). Qed.
Lemma lem338227 {A B : Type'} (y'' : A -> B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (z : type1445 A B) (h1 : term1149 A B lt2 x y'' R) (h2 : term1716 A B H lt2 x R z) : False.
Proof. exact (@lem338224 A B y'' H lt2 x R z h2 (@lem338220 A B y'' H lt2 x R z h1 h2)). Qed.
Lemma lem338228 {A B : Type'} (y'' : A -> B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (z : type1445 A B) (h1 : term1149 A B lt2 x y'' R) (h2 : term1716 A B H lt2 x R z) : term1027.
Proof. exact (fun h0 : ~ False => @lem338227 A B y'' H lt2 x R z h1 h2). Qed.
Lemma lem338230 (p : Prop) : (term986 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem338231 : term1027 = False.
Proof. exact (@lem338230 False). Qed.
Lemma lem338232 {A B : Type'} (y'' : A -> B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (z : type1445 A B) (h1 : term1149 A B lt2 x y'' R) (h2 : term1716 A B H lt2 x R z) : False.
Proof. exact (EQ_MP (@lem338231) (@lem338228 A B y'' H lt2 x R z h1 h2)). Qed.
Lemma lem338434 {A B : Type'} (f' : A -> B) (H : type549 A B) (f : A -> B) (x : A) (h1 : term1812 A B f' H f x) : term1812 A B f' H f x.
Proof. exact (h1). Qed.
Lemma lem338435 {A B : Type'} (f' : A -> B) (H : type549 A B) (f : A -> B) (x : A) (h1 : term1812 A B f' H f x) : term1851 A B f' H f x.
Proof. exact (fun h0 : (term916 A B H f' x) = (term916 A B H f x) => @lem338434 A B f' H f x h1). Qed.
Lemma lem338437 (p : Prop) : (term1363 p) = (~ p).
Proof. exact (EQ_MP (@lem21028 p) (@lem21107 p)). Qed.
Lemma lem338438 {A B : Type'} (f' : A -> B) (H : type549 A B) (f : A -> B) (x : A) : (term1851 A B f' H f x) = (term1812 A B f' H f x).
Proof. exact (@lem338437 ((term916 A B H f' x) = (term916 A B H f x))). Qed.
Lemma lem338439 {A B : Type'} (f' : A -> B) (H : type549 A B) (f : A -> B) (x : A) (h1 : term1812 A B f' H f x) : term1812 A B f' H f x.
Proof. exact (EQ_MP (@lem338438 A B f' H f x) (@lem338435 A B f' H f x h1)). Qed.
Lemma lem338441 (b : Prop) (a : Prop) : (a \/ b) = (term990 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem338444 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (z'' : type515 A B) (_7189 : A -> B) (_7190 : A -> B) (_7191 : A) : (term1815 A B lt2 z'' _7189 H _7190 _7191) = (term1852 A B H lt2 z'' _7189 _7190 _7191).
Proof. exact (@lem338441 ((term916 A B H _7189 _7191) = (term916 A B H _7190 _7191)) (term1239 A B lt2 z'' _7189 _7190 _7191)). Qed.
Lemma lem338447 {A B : Type'} (_7189 : A -> B) (_7190 : A -> B) (_7191 : A) (lt2 : type1402 A) (z'' : type515 A B) (S' : type1413 A B) (H : type549 A B) (h1 : term282 A B lt2 z'' S' H) : term1852 A B H lt2 z'' _7189 _7190 _7191.
Proof. exact (EQ_MP (@lem338444 A B H lt2 z'' _7189 _7190 _7191) (@lem337751 A B _7189 _7190 _7191 lt2 z'' S' H h1)). Qed.
Lemma lem338448 {A B : Type'} (_7189 : A -> B) (_7190 : A -> B) (_7191 : A) (lt2 : type1402 A) (z'' : type515 A B) (S' : type1413 A B) (H : type549 A B) (h1 : term282 A B lt2 z'' S' H) : term1852 A B H lt2 z'' _7189 _7190 _7191.
Proof. exact (@lem338447 A B _7189 _7190 _7191 lt2 z'' S' H h1). Qed.
Lemma lem338449 {A B : Type'} (f' : A -> B) (f : A -> B) (x : A) (lt2 : type1402 A) (z'' : type515 A B) (S' : type1413 A B) (H : type549 A B) (h1 : term282 A B lt2 z'' S' H) : term1852 A B H lt2 z'' f' f x.
Proof. exact (@lem338448 A B f' f x lt2 z'' S' H h1). Qed.
Lemma lem338452 {A B : Type'} (lt2 : type1402 A) (z'' : type515 A B) (S' : type1413 A B) (f' : A -> B) (H : type549 A B) (f : A -> B) (x : A) (h1 : term282 A B lt2 z'' S' H) (h2 : term1812 A B f' H f x) : term1239 A B lt2 z'' f' f x.
Proof. exact (@lem338449 A B f' f x lt2 z'' S' H h1 (@lem338439 A B f' H f x h2)). Qed.
Lemma lem338453 {A B : Type'} (lt2 : type1402 A) (z'' : type515 A B) (S' : type1413 A B) (f' : A -> B) (H : type549 A B) (f : A -> B) (x : A) (h1 : term282 A B lt2 z'' S' H) (h2 : term1812 A B f' H f x) : term1853 A B lt2 z'' f' f x.
Proof. exact (fun h0 : term1854 A B lt2 z'' f' f x => @lem338452 A B lt2 z'' S' f' H f x h1 h2). Qed.
Lemma lem338455 (p : Prop) : (term986 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem338456 {A B : Type'} (lt2 : type1402 A) (z'' : type515 A B) (f' : A -> B) (f : A -> B) (x : A) : (term1853 A B lt2 z'' f' f x) = (term1239 A B lt2 z'' f' f x).
Proof. exact (@lem338455 (term1239 A B lt2 z'' f' f x)). Qed.
Lemma lem338457 {A B : Type'} (lt2 : type1402 A) (z'' : type515 A B) (S' : type1413 A B) (f' : A -> B) (H : type549 A B) (f : A -> B) (x : A) (h1 : term282 A B lt2 z'' S' H) (h2 : term1812 A B f' H f x) : term1239 A B lt2 z'' f' f x.
Proof. exact (EQ_MP (@lem338456 A B lt2 z'' f' f x) (@lem338453 A B lt2 z'' S' f' H f x h1 h2)). Qed.
Lemma lem338460 {A B : Type'} (f' : A -> B) (H : type549 A B) (f : A -> B) (x : A) (h1 : term1812 A B f' H f x) : term1812 A B f' H f x.
Proof. exact (h1). Qed.
Lemma lem338461 {A B : Type'} (f' : A -> B) (H : type549 A B) (f : A -> B) (x : A) (h1 : term1812 A B f' H f x) : term1851 A B f' H f x.
Proof. exact (fun h0 : (term916 A B H f' x) = (term916 A B H f x) => @lem338460 A B f' H f x h1). Qed.
Lemma lem338463 (p : Prop) : (term1363 p) = (~ p).
Proof. exact (EQ_MP (@lem21028 p) (@lem21107 p)). Qed.
Lemma lem338464 {A B : Type'} (f' : A -> B) (H : type549 A B) (f : A -> B) (x : A) : (term1851 A B f' H f x) = (term1812 A B f' H f x).
Proof. exact (@lem338463 ((term916 A B H f' x) = (term916 A B H f x))). Qed.
Lemma lem338465 {A B : Type'} (f' : A -> B) (H : type549 A B) (f : A -> B) (x : A) (h1 : term1812 A B f' H f x) : term1812 A B f' H f x.
Proof. exact (EQ_MP (@lem338464 A B f' H f x) (@lem338461 A B f' H f x h1)). Qed.
Lemma lem338467 {A B : Type'} (_7189 : A -> B) (_7190 : A -> B) (_7191 : A) (lt2 : type1402 A) (z'' : type515 A B) (S' : type1413 A B) (H : type549 A B) (h1 : term282 A B lt2 z'' S' H) : term1852 A B H lt2 z'' _7189 _7190 _7191.
Proof. exact (EQ_MP (@lem338444 A B H lt2 z'' _7189 _7190 _7191) (@lem337751 A B _7189 _7190 _7191 lt2 z'' S' H h1)). Qed.
Lemma lem338468 {A B : Type'} (_7189 : A -> B) (_7190 : A -> B) (_7191 : A) (lt2 : type1402 A) (z'' : type515 A B) (S' : type1413 A B) (H : type549 A B) (h1 : term282 A B lt2 z'' S' H) : term1852 A B H lt2 z'' _7189 _7190 _7191.
Proof. exact (@lem338467 A B _7189 _7190 _7191 lt2 z'' S' H h1). Qed.
Lemma lem338469 {A B : Type'} (f' : A -> B) (f : A -> B) (x : A) (lt2 : type1402 A) (z'' : type515 A B) (S' : type1413 A B) (H : type549 A B) (h1 : term282 A B lt2 z'' S' H) : term1852 A B H lt2 z'' f' f x.
Proof. exact (@lem338468 A B f' f x lt2 z'' S' H h1). Qed.
Lemma lem338472 {A B : Type'} (lt2 : type1402 A) (z'' : type515 A B) (S' : type1413 A B) (f' : A -> B) (H : type549 A B) (f : A -> B) (x : A) (h1 : term282 A B lt2 z'' S' H) (h2 : term1812 A B f' H f x) : term1239 A B lt2 z'' f' f x.
Proof. exact (@lem338469 A B f' f x lt2 z'' S' H h1 (@lem338465 A B f' H f x h2)). Qed.
Lemma lem338473 {A B : Type'} (lt2 : type1402 A) (z'' : type515 A B) (S' : type1413 A B) (f' : A -> B) (H : type549 A B) (f : A -> B) (x : A) (h1 : term282 A B lt2 z'' S' H) (h2 : term1812 A B f' H f x) : term1853 A B lt2 z'' f' f x.
Proof. exact (fun h0 : term1854 A B lt2 z'' f' f x => @lem338472 A B lt2 z'' S' f' H f x h1 h2). Qed.
Lemma lem338475 (p : Prop) : (term986 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem338476 {A B : Type'} (lt2 : type1402 A) (z'' : type515 A B) (f' : A -> B) (f : A -> B) (x : A) : (term1853 A B lt2 z'' f' f x) = (term1239 A B lt2 z'' f' f x).
Proof. exact (@lem338475 (term1239 A B lt2 z'' f' f x)). Qed.
Lemma lem338477 {A B : Type'} (lt2 : type1402 A) (z'' : type515 A B) (S' : type1413 A B) (f' : A -> B) (H : type549 A B) (f : A -> B) (x : A) (h1 : term282 A B lt2 z'' S' H) (h2 : term1812 A B f' H f x) : term1239 A B lt2 z'' f' f x.
Proof. exact (EQ_MP (@lem338476 A B lt2 z'' f' f x) (@lem338473 A B lt2 z'' S' f' H f x h1 h2)). Qed.
Lemma lem338483 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem338484 {A B : Type'} (R : type1413 A B) (f' : A -> B) (lt2 : type1402 A) (_7192 : A) (x : A) : (term1676 A B lt2 x R f' _7192) = (term1831 A B R f' lt2 _7192 x).
Proof. exact (@lem338483 (term898 A B R f' _7192) (term1674 A lt2 _7192 x)). Qed.
Lemma lem338490 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem338491 {A B : Type'} (R : type1413 A B) (f' : A -> B) (lt2 : type1402 A) (_7192 : A) (x : A) : (term1832 A B lt2 x R f' _7192) = (term1833 A B R f' lt2 _7192 x).
Proof. exact (MK_COMB (@lem338490) (@lem338484 A B R f' lt2 _7192 x)). Qed.
Lemma lem338497 {A B : Type'} (R : type1413 A B) (f' : A -> B) (lt2 : type1402 A) (_7192 : A) (x : A) : (term1831 A B R f' lt2 _7192 x) = (term1831 A B R f' lt2 _7192 x).
Proof. exact (eq_refl (term1831 A B R f' lt2 _7192 x)). Qed.
Lemma lem338498 {A B : Type'} (R : type1413 A B) (f' : A -> B) (lt2 : type1402 A) (_7192 : A) (x : A) : ((term1676 A B lt2 x R f' _7192) = (term1831 A B R f' lt2 _7192 x)) = ((term1831 A B R f' lt2 _7192 x) = (term1831 A B R f' lt2 _7192 x)).
Proof. exact (MK_COMB (@lem338491 A B R f' lt2 _7192 x) (@lem338497 A B R f' lt2 _7192 x)). Qed.
Lemma lem338500 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem20665 A x) (@lem20664 A x)). Qed.
Lemma lem338501 (x : Prop) : (x = x) = True.
Proof. exact (@lem338500 Prop x). Qed.
Lemma lem338502 {A B : Type'} (R : type1413 A B) (f' : A -> B) (lt2 : type1402 A) (_7192 : A) (x : A) : ((term1831 A B R f' lt2 _7192 x) = (term1831 A B R f' lt2 _7192 x)) = True.
Proof. exact (@lem338501 (term1831 A B R f' lt2 _7192 x)). Qed.
Lemma lem338503 {A B : Type'} (R : type1413 A B) (f' : A -> B) (lt2 : type1402 A) (_7192 : A) (x : A) : ((term1676 A B lt2 x R f' _7192) = (term1831 A B R f' lt2 _7192 x)) = True.
Proof. exact (TRANS (@lem338498 A B R f' lt2 _7192 x) (@lem338502 A B R f' lt2 _7192 x)). Qed.
Lemma lem338504 {A B : Type'} (R : type1413 A B) (f' : A -> B) (lt2 : type1402 A) (_7192 : A) (x : A) : True = ((term1676 A B lt2 x R f' _7192) = (term1831 A B R f' lt2 _7192 x)).
Proof. exact (SYM (@lem338503 A B R f' lt2 _7192 x)). Qed.
Lemma lem338505 {A B : Type'} (R : type1413 A B) (f' : A -> B) (lt2 : type1402 A) (_7192 : A) (x : A) : (term1676 A B lt2 x R f' _7192) = (term1831 A B R f' lt2 _7192 x).
Proof. exact (EQ_MP (@lem338504 A B R f' lt2 _7192 x) (@lem0)). Qed.
Lemma lem338506 {A B : Type'} (_7192 : A) (f : A -> B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (f' : A -> B) (y' : B) (y : B) (h1 : term1683 A B f H lt2 x R f' y' y) : term1831 A B R f' lt2 _7192 x.
Proof. exact (EQ_MP (@lem338505 A B R f' lt2 _7192 x) (@lem337695 A B _7192 f H lt2 x R f' y' y h1)). Qed.
Lemma lem338508 (b : Prop) (a : Prop) : (a \/ b) = (term990 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem338509 {A B : Type'} (lt2 : type1402 A) (x : A) (R : type1413 A B) (f' : A -> B) (_7192 : A) : (term1831 A B R f' lt2 _7192 x) = (term1834 A B lt2 x R f' _7192).
Proof. exact (@lem338508 (term1674 A lt2 _7192 x) (term898 A B R f' _7192)). Qed.
Lemma lem338511 (a : Prop) : (term992 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem338512 {A : Type'} (lt2 : type1402 A) (_7192 : A) (x : A) : (term1835 A lt2 _7192 x) = (term1673 A lt2 _7192 x).
Proof. exact (@lem338511 (term1673 A lt2 _7192 x)). Qed.
Lemma lem338513 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem338514 {A : Type'} (lt2 : type1402 A) (_7192 : A) (x : A) : (term1836 A lt2 _7192 x) = (term1837 A lt2 _7192 x).
Proof. exact (MK_COMB (@lem338513) (@lem338512 A lt2 _7192 x)). Qed.
Lemma lem338515 {A B : Type'} (R : type1413 A B) (f' : A -> B) (_7192 : A) : (term898 A B R f' _7192) = (term898 A B R f' _7192).
Proof. exact (eq_refl (term898 A B R f' _7192)). Qed.
Lemma lem338516 {A B : Type'} (lt2 : type1402 A) (x : A) (R : type1413 A B) (f' : A -> B) (_7192 : A) : (term1834 A B lt2 x R f' _7192) = (term1838 A B lt2 x R f' _7192).
Proof. exact (MK_COMB (@lem338514 A lt2 _7192 x) (@lem338515 A B R f' _7192)). Qed.
Lemma lem338517 {A B : Type'} (lt2 : type1402 A) (x : A) (R : type1413 A B) (f' : A -> B) (_7192 : A) : (term1831 A B R f' lt2 _7192 x) = (term1838 A B lt2 x R f' _7192).
Proof. exact (TRANS (@lem338509 A B lt2 x R f' _7192) (@lem338516 A B lt2 x R f' _7192)). Qed.
Lemma lem338520 {A B : Type'} (_7192 : A) (f : A -> B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (f' : A -> B) (y' : B) (y : B) (h1 : term1683 A B f H lt2 x R f' y' y) : term1838 A B lt2 x R f' _7192.
Proof. exact (EQ_MP (@lem338517 A B lt2 x R f' _7192) (@lem338506 A B _7192 f H lt2 x R f' y' y h1)). Qed.
Lemma lem338521 {A B : Type'} (_7192 : A) (f : A -> B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (f' : A -> B) (y' : B) (y : B) (h1 : term1683 A B f H lt2 x R f' y' y) : term1838 A B lt2 x R f' _7192.
Proof. exact (@lem338520 A B _7192 f H lt2 x R f' y' y h1). Qed.
Lemma lem338522 {A B : Type'} (z'' : type515 A B) (f : A -> B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (f' : A -> B) (y' : B) (y : B) (h1 : term1683 A B f H lt2 x R f' y' y) : term1855 A B lt2 R z'' f' f x.
Proof. exact (@lem338521 A B (term1209 A B z'' f' f x) f H lt2 x R f' y' y h1). Qed.
Lemma lem338525 {A B : Type'} (z'' : type515 A B) (S' : type1413 A B) (f : A -> B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (f' : A -> B) (y' : B) (y : B) (h1 : term282 A B lt2 z'' S' H) (h2 : term1812 A B f' H f x) (h3 : term1683 A B f H lt2 x R f' y' y) : term1219 A B R z'' f' f x.
Proof. exact (@lem338522 A B z'' f H lt2 x R f' y' y h3 (@lem338477 A B lt2 z'' S' f' H f x h1 h2)). Qed.
Lemma lem338526 {A B : Type'} (z'' : type515 A B) (S' : type1413 A B) (f : A -> B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (f' : A -> B) (y' : B) (y : B) (h1 : term282 A B lt2 z'' S' H) (h2 : term1812 A B f' H f x) (h3 : term1683 A B f H lt2 x R f' y' y) : term1856 A B R z'' f' f x.
Proof. exact (fun h0 : term1221 A B R z'' f' f x => @lem338525 A B z'' S' f H lt2 x R f' y' y h1 h2 h3). Qed.
Lemma lem338528 (p : Prop) : (term986 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem338529 {A B : Type'} (R : type1413 A B) (z'' : type515 A B) (f' : A -> B) (f : A -> B) (x : A) : (term1856 A B R z'' f' f x) = (term1219 A B R z'' f' f x).
Proof. exact (@lem338528 (term1219 A B R z'' f' f x)). Qed.
Lemma lem338530 {A B : Type'} (z'' : type515 A B) (S' : type1413 A B) (f : A -> B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (f' : A -> B) (y' : B) (y : B) (h1 : term282 A B lt2 z'' S' H) (h2 : term1812 A B f' H f x) (h3 : term1683 A B f H lt2 x R f' y' y) : term1219 A B R z'' f' f x.
Proof. exact (EQ_MP (@lem338529 A B R z'' f' f x) (@lem338526 A B z'' S' f H lt2 x R f' y' y h1 h2 h3)). Qed.
Lemma lem338533 {A B : Type'} (f' : A -> B) (H : type549 A B) (f : A -> B) (x : A) (h1 : term1812 A B f' H f x) : term1812 A B f' H f x.
Proof. exact (h1). Qed.
Lemma lem338534 {A B : Type'} (f' : A -> B) (H : type549 A B) (f : A -> B) (x : A) (h1 : term1812 A B f' H f x) : term1851 A B f' H f x.
Proof. exact (fun h0 : (term916 A B H f' x) = (term916 A B H f x) => @lem338533 A B f' H f x h1). Qed.
Lemma lem338536 (p : Prop) : (term1363 p) = (~ p).
Proof. exact (EQ_MP (@lem21028 p) (@lem21107 p)). Qed.
Lemma lem338537 {A B : Type'} (f' : A -> B) (H : type549 A B) (f : A -> B) (x : A) : (term1851 A B f' H f x) = (term1812 A B f' H f x).
Proof. exact (@lem338536 ((term916 A B H f' x) = (term916 A B H f x))). Qed.
Lemma lem338538 {A B : Type'} (f' : A -> B) (H : type549 A B) (f : A -> B) (x : A) (h1 : term1812 A B f' H f x) : term1812 A B f' H f x.
Proof. exact (EQ_MP (@lem338537 A B f' H f x) (@lem338534 A B f' H f x h1)). Qed.
Lemma lem338540 {A B : Type'} (_7189 : A -> B) (_7190 : A -> B) (_7191 : A) (lt2 : type1402 A) (z'' : type515 A B) (S' : type1413 A B) (H : type549 A B) (h1 : term282 A B lt2 z'' S' H) : term1852 A B H lt2 z'' _7189 _7190 _7191.
Proof. exact (EQ_MP (@lem338444 A B H lt2 z'' _7189 _7190 _7191) (@lem337751 A B _7189 _7190 _7191 lt2 z'' S' H h1)). Qed.
Lemma lem338541 {A B : Type'} (_7189 : A -> B) (_7190 : A -> B) (_7191 : A) (lt2 : type1402 A) (z'' : type515 A B) (S' : type1413 A B) (H : type549 A B) (h1 : term282 A B lt2 z'' S' H) : term1852 A B H lt2 z'' _7189 _7190 _7191.
Proof. exact (@lem338540 A B _7189 _7190 _7191 lt2 z'' S' H h1). Qed.
Lemma lem338542 {A B : Type'} (f' : A -> B) (f : A -> B) (x : A) (lt2 : type1402 A) (z'' : type515 A B) (S' : type1413 A B) (H : type549 A B) (h1 : term282 A B lt2 z'' S' H) : term1852 A B H lt2 z'' f' f x.
Proof. exact (@lem338541 A B f' f x lt2 z'' S' H h1). Qed.
Lemma lem338545 {A B : Type'} (lt2 : type1402 A) (z'' : type515 A B) (S' : type1413 A B) (f' : A -> B) (H : type549 A B) (f : A -> B) (x : A) (h1 : term282 A B lt2 z'' S' H) (h2 : term1812 A B f' H f x) : term1239 A B lt2 z'' f' f x.
Proof. exact (@lem338542 A B f' f x lt2 z'' S' H h1 (@lem338538 A B f' H f x h2)). Qed.
Lemma lem338546 {A B : Type'} (lt2 : type1402 A) (z'' : type515 A B) (S' : type1413 A B) (f' : A -> B) (H : type549 A B) (f : A -> B) (x : A) (h1 : term282 A B lt2 z'' S' H) (h2 : term1812 A B f' H f x) : term1853 A B lt2 z'' f' f x.
Proof. exact (fun h0 : term1854 A B lt2 z'' f' f x => @lem338545 A B lt2 z'' S' f' H f x h1 h2). Qed.
Lemma lem338548 (p : Prop) : (term986 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem338549 {A B : Type'} (lt2 : type1402 A) (z'' : type515 A B) (f' : A -> B) (f : A -> B) (x : A) : (term1853 A B lt2 z'' f' f x) = (term1239 A B lt2 z'' f' f x).
Proof. exact (@lem338548 (term1239 A B lt2 z'' f' f x)). Qed.
Lemma lem338550 {A B : Type'} (lt2 : type1402 A) (z'' : type515 A B) (S' : type1413 A B) (f' : A -> B) (H : type549 A B) (f : A -> B) (x : A) (h1 : term282 A B lt2 z'' S' H) (h2 : term1812 A B f' H f x) : term1239 A B lt2 z'' f' f x.
Proof. exact (EQ_MP (@lem338549 A B lt2 z'' f' f x) (@lem338546 A B lt2 z'' S' f' H f x h1 h2)). Qed.
Lemma lem338552 {A B : Type'} (_7192 : A) (f : A -> B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (f' : A -> B) (y' : B) (y : B) (h1 : term1683 A B f H lt2 x R f' y' y) : term1838 A B lt2 x R f' _7192.
Proof. exact (EQ_MP (@lem338517 A B lt2 x R f' _7192) (@lem338506 A B _7192 f H lt2 x R f' y' y h1)). Qed.
Lemma lem338553 {A B : Type'} (_7192 : A) (f : A -> B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (f' : A -> B) (y' : B) (y : B) (h1 : term1683 A B f H lt2 x R f' y' y) : term1838 A B lt2 x R f' _7192.
Proof. exact (@lem338552 A B _7192 f H lt2 x R f' y' y h1). Qed.
Lemma lem338554 {A B : Type'} (z'' : type515 A B) (f : A -> B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (f' : A -> B) (y' : B) (y : B) (h1 : term1683 A B f H lt2 x R f' y' y) : term1855 A B lt2 R z'' f' f x.
Proof. exact (@lem338553 A B (term1209 A B z'' f' f x) f H lt2 x R f' y' y h1). Qed.
Lemma lem338557 {A B : Type'} (z'' : type515 A B) (S' : type1413 A B) (f : A -> B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (f' : A -> B) (y' : B) (y : B) (h1 : term282 A B lt2 z'' S' H) (h2 : term1812 A B f' H f x) (h3 : term1683 A B f H lt2 x R f' y' y) : term1219 A B R z'' f' f x.
Proof. exact (@lem338554 A B z'' f H lt2 x R f' y' y h3 (@lem338550 A B lt2 z'' S' f' H f x h1 h2)). Qed.
Lemma lem338558 {A B : Type'} (z'' : type515 A B) (S' : type1413 A B) (f : A -> B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (f' : A -> B) (y' : B) (y : B) (h1 : term282 A B lt2 z'' S' H) (h2 : term1812 A B f' H f x) (h3 : term1683 A B f H lt2 x R f' y' y) : term1856 A B R z'' f' f x.
Proof. exact (fun h0 : term1221 A B R z'' f' f x => @lem338557 A B z'' S' f H lt2 x R f' y' y h1 h2 h3). Qed.
Lemma lem338560 (p : Prop) : (term986 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem338561 {A B : Type'} (R : type1413 A B) (z'' : type515 A B) (f' : A -> B) (f : A -> B) (x : A) : (term1856 A B R z'' f' f x) = (term1219 A B R z'' f' f x).
Proof. exact (@lem338560 (term1219 A B R z'' f' f x)). Qed.
Lemma lem338562 {A B : Type'} (z'' : type515 A B) (S' : type1413 A B) (f : A -> B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (f' : A -> B) (y' : B) (y : B) (h1 : term282 A B lt2 z'' S' H) (h2 : term1812 A B f' H f x) (h3 : term1683 A B f H lt2 x R f' y' y) : term1219 A B R z'' f' f x.
Proof. exact (EQ_MP (@lem338561 A B R z'' f' f x) (@lem338558 A B z'' S' f H lt2 x R f' y' y h1 h2 h3)). Qed.
Lemma lem338568 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem338569 {A B : Type'} (S' : type1413 A B) (R : type1413 A B) (_7178 : A) (_7179 : B) : (term1153 A B R S' _7178 _7179) = (term1857 A B S' R _7178 _7179).
Proof. exact (@lem338568 (term885 A B S' _7178 _7179) (term886 A B R _7178 _7179)). Qed.
Lemma lem338575 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem338576 {A B : Type'} (S' : type1413 A B) (R : type1413 A B) (_7178 : A) (_7179 : B) : (term1858 A B R S' _7178 _7179) = (term1859 A B S' R _7178 _7179).
Proof. exact (MK_COMB (@lem338575) (@lem338569 A B S' R _7178 _7179)). Qed.
Lemma lem338582 {A B : Type'} (S' : type1413 A B) (R : type1413 A B) (_7178 : A) (_7179 : B) : (term1857 A B S' R _7178 _7179) = (term1857 A B S' R _7178 _7179).
Proof. exact (eq_refl (term1857 A B S' R _7178 _7179)). Qed.
Lemma lem338583 {A B : Type'} (S' : type1413 A B) (R : type1413 A B) (_7178 : A) (_7179 : B) : ((term1153 A B R S' _7178 _7179) = (term1857 A B S' R _7178 _7179)) = ((term1857 A B S' R _7178 _7179) = (term1857 A B S' R _7178 _7179)).
Proof. exact (MK_COMB (@lem338576 A B S' R _7178 _7179) (@lem338582 A B S' R _7178 _7179)). Qed.
Lemma lem338585 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem20665 A x) (@lem20664 A x)). Qed.
Lemma lem338586 (x : Prop) : (x = x) = True.
Proof. exact (@lem338585 Prop x). Qed.
Lemma lem338587 {A B : Type'} (S' : type1413 A B) (R : type1413 A B) (_7178 : A) (_7179 : B) : ((term1857 A B S' R _7178 _7179) = (term1857 A B S' R _7178 _7179)) = True.
Proof. exact (@lem338586 (term1857 A B S' R _7178 _7179)). Qed.
Lemma lem338588 {A B : Type'} (S' : type1413 A B) (R : type1413 A B) (_7178 : A) (_7179 : B) : ((term1153 A B R S' _7178 _7179) = (term1857 A B S' R _7178 _7179)) = True.
Proof. exact (TRANS (@lem338583 A B S' R _7178 _7179) (@lem338587 A B S' R _7178 _7179)). Qed.
Lemma lem338589 {A B : Type'} (S' : type1413 A B) (R : type1413 A B) (_7178 : A) (_7179 : B) : True = ((term1153 A B R S' _7178 _7179) = (term1857 A B S' R _7178 _7179)).
Proof. exact (SYM (@lem338588 A B S' R _7178 _7179)). Qed.
Lemma lem338590 {A B : Type'} (S' : type1413 A B) (R : type1413 A B) (_7178 : A) (_7179 : B) : (term1153 A B R S' _7178 _7179) = (term1857 A B S' R _7178 _7179).
Proof. exact (EQ_MP (@lem338589 A B S' R _7178 _7179) (@lem0)). Qed.
Lemma lem338591 {A B : Type'} (_7178 : A) (_7179 : B) (R : type1413 A B) (S' : type1413 A B) (h1 : term71 A B R S') : term1857 A B S' R _7178 _7179.
Proof. exact (EQ_MP (@lem338590 A B S' R _7178 _7179) (@lem337668 A B _7178 _7179 R S' h1)). Qed.
Lemma lem338593 (b : Prop) (a : Prop) : (a \/ b) = (term990 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem338594 {A B : Type'} (R : type1413 A B) (S' : type1413 A B) (_7178 : A) (_7179 : B) : (term1857 A B S' R _7178 _7179) = (term1860 A B R S' _7178 _7179).
Proof. exact (@lem338593 (term886 A B R _7178 _7179) (term885 A B S' _7178 _7179)). Qed.
Lemma lem338596 (a : Prop) : (term992 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem338597 {A B : Type'} (R : type1413 A B) (_7178 : A) (_7179 : B) : (term1016 A B R _7178 _7179) = (term885 A B R _7178 _7179).
Proof. exact (@lem338596 (term885 A B R _7178 _7179)). Qed.
Lemma lem338598 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem338599 {A B : Type'} (R : type1413 A B) (_7178 : A) (_7179 : B) : (term1861 A B R _7178 _7179) = (term1862 A B R _7178 _7179).
Proof. exact (MK_COMB (@lem338598) (@lem338597 A B R _7178 _7179)). Qed.
Lemma lem338600 {A B : Type'} (S' : type1413 A B) (_7178 : A) (_7179 : B) : (term885 A B S' _7178 _7179) = (term885 A B S' _7178 _7179).
Proof. exact (eq_refl (term885 A B S' _7178 _7179)). Qed.
Lemma lem338601 {A B : Type'} (R : type1413 A B) (S' : type1413 A B) (_7178 : A) (_7179 : B) : (term1860 A B R S' _7178 _7179) = (term1863 A B R S' _7178 _7179).
Proof. exact (MK_COMB (@lem338599 A B R _7178 _7179) (@lem338600 A B S' _7178 _7179)). Qed.
Lemma lem338602 {A B : Type'} (R : type1413 A B) (S' : type1413 A B) (_7178 : A) (_7179 : B) : (term1857 A B S' R _7178 _7179) = (term1863 A B R S' _7178 _7179).
Proof. exact (TRANS (@lem338594 A B R S' _7178 _7179) (@lem338601 A B R S' _7178 _7179)). Qed.
Lemma lem338605 {A B : Type'} (_7178 : A) (_7179 : B) (R : type1413 A B) (S' : type1413 A B) (h1 : term71 A B R S') : term1863 A B R S' _7178 _7179.
Proof. exact (EQ_MP (@lem338602 A B R S' _7178 _7179) (@lem338591 A B _7178 _7179 R S' h1)). Qed.
Lemma lem338606 {A B : Type'} (_7178 : A) (_7179 : B) (R : type1413 A B) (S' : type1413 A B) (h1 : term71 A B R S') : term1863 A B R S' _7178 _7179.
Proof. exact (@lem338605 A B _7178 _7179 R S' h1). Qed.
Lemma lem338607 {A B : Type'} (z'' : type515 A B) (f' : A -> B) (f : A -> B) (x : A) (R : type1413 A B) (S' : type1413 A B) (h1 : term71 A B R S') : term1864 A B R S' z'' f' f x.
Proof. exact (@lem338606 A B (term1209 A B z'' f' f x) (term1212 A B z'' f' f x) R S' h1). Qed.
Lemma lem338610 {A B : Type'} (z'' : type515 A B) (S' : type1413 A B) (f : A -> B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (f' : A -> B) (y' : B) (y : B) (h1 : term71 A B R S') (h2 : term282 A B lt2 z'' S' H) (h3 : term1812 A B f' H f x) (h4 : term1683 A B f H lt2 x R f' y' y) : term1219 A B S' z'' f' f x.
Proof. exact (@lem338607 A B z'' f' f x R S' h1 (@lem338562 A B z'' S' f H lt2 x R f' y' y h2 h3 h4)). Qed.
Lemma lem338611 {A B : Type'} (z'' : type515 A B) (S' : type1413 A B) (f : A -> B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (f' : A -> B) (y' : B) (y : B) (h1 : term71 A B R S') (h2 : term282 A B lt2 z'' S' H) (h3 : term1812 A B f' H f x) (h4 : term1683 A B f H lt2 x R f' y' y) : term1856 A B S' z'' f' f x.
Proof. exact (fun h0 : term1221 A B S' z'' f' f x => @lem338610 A B z'' S' f H lt2 x R f' y' y h1 h2 h3 h4). Qed.
Lemma lem338613 (p : Prop) : (term986 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem338614 {A B : Type'} (S' : type1413 A B) (z'' : type515 A B) (f' : A -> B) (f : A -> B) (x : A) : (term1856 A B S' z'' f' f x) = (term1219 A B S' z'' f' f x).
Proof. exact (@lem338613 (term1219 A B S' z'' f' f x)). Qed.
Lemma lem338615 {A B : Type'} (z'' : type515 A B) (S' : type1413 A B) (f : A -> B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (f' : A -> B) (y' : B) (y : B) (h1 : term71 A B R S') (h2 : term282 A B lt2 z'' S' H) (h3 : term1812 A B f' H f x) (h4 : term1683 A B f H lt2 x R f' y' y) : term1219 A B S' z'' f' f x.
Proof. exact (EQ_MP (@lem338614 A B S' z'' f' f x) (@lem338611 A B z'' S' f H lt2 x R f' y' y h1 h2 h3 h4)). Qed.
Lemma lem338618 {A B : Type'} (f' : A -> B) (H : type549 A B) (f : A -> B) (x : A) (h1 : term1812 A B f' H f x) : term1812 A B f' H f x.
Proof. exact (h1). Qed.
Lemma lem338619 {A B : Type'} (f' : A -> B) (H : type549 A B) (f : A -> B) (x : A) (h1 : term1812 A B f' H f x) : term1851 A B f' H f x.
Proof. exact (fun h0 : (term916 A B H f' x) = (term916 A B H f x) => @lem338618 A B f' H f x h1). Qed.
Lemma lem338621 (p : Prop) : (term1363 p) = (~ p).
Proof. exact (EQ_MP (@lem21028 p) (@lem21107 p)). Qed.
Lemma lem338622 {A B : Type'} (f' : A -> B) (H : type549 A B) (f : A -> B) (x : A) : (term1851 A B f' H f x) = (term1812 A B f' H f x).
Proof. exact (@lem338621 ((term916 A B H f' x) = (term916 A B H f x))). Qed.
Lemma lem338623 {A B : Type'} (f' : A -> B) (H : type549 A B) (f : A -> B) (x : A) (h1 : term1812 A B f' H f x) : term1812 A B f' H f x.
Proof. exact (EQ_MP (@lem338622 A B f' H f x) (@lem338619 A B f' H f x h1)). Qed.
Lemma lem338625 (b : Prop) (a : Prop) : (a \/ b) = (term990 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem338626 {A B : Type'} (S' : type1413 A B) (H : type549 A B) (z'' : type515 A B) (_7189 : A -> B) (_7190 : A -> B) (_7191 : A) : (term1803 A B S' z'' _7189 H _7190 _7191) = (term1865 A B S' H z'' _7189 _7190 _7191).
Proof. exact (@lem338625 (term1866 A B S' z'' _7189 H _7190 _7191) (term1228 A B z'' _7189 _7190 _7191)). Qed.
Lemma lem338628 (a : Prop) (b : Prop) : (term1012 a b) = (term1013 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem338629 {A B : Type'} (S' : type1413 A B) (z'' : type515 A B) (_7189 : A -> B) (H : type549 A B) (_7190 : A -> B) (_7191 : A) : (term1867 A B S' z'' _7189 H _7190 _7191) = (term1868 A B S' z'' _7189 H _7190 _7191).
Proof. exact (@lem338628 (term1221 A B S' z'' _7189 _7190 _7191) ((term916 A B H _7189 _7191) = (term916 A B H _7190 _7191))). Qed.
Lemma lem338631 (a : Prop) : (term992 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem338632 {A B : Type'} (S' : type1413 A B) (z'' : type515 A B) (_7189 : A -> B) (_7190 : A -> B) (_7191 : A) : (term1869 A B S' z'' _7189 _7190 _7191) = (term1219 A B S' z'' _7189 _7190 _7191).
Proof. exact (@lem338631 (term1219 A B S' z'' _7189 _7190 _7191)). Qed.
Lemma lem338633 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem338634 {A B : Type'} (S' : type1413 A B) (z'' : type515 A B) (_7189 : A -> B) (_7190 : A -> B) (_7191 : A) : (term1870 A B S' z'' _7189 _7190 _7191) = (term1871 A B S' z'' _7189 _7190 _7191).
Proof. exact (MK_COMB (@lem338633) (@lem338632 A B S' z'' _7189 _7190 _7191)). Qed.
Lemma lem338635 {A B : Type'} (_7189 : A -> B) (H : type549 A B) (_7190 : A -> B) (_7191 : A) : (term1812 A B _7189 H _7190 _7191) = (term1812 A B _7189 H _7190 _7191).
Proof. exact (eq_refl (term1812 A B _7189 H _7190 _7191)). Qed.
Lemma lem338636 {A B : Type'} (S' : type1413 A B) (z'' : type515 A B) (_7189 : A -> B) (H : type549 A B) (_7190 : A -> B) (_7191 : A) : (term1868 A B S' z'' _7189 H _7190 _7191) = (term1872 A B S' z'' _7189 H _7190 _7191).
Proof. exact (MK_COMB (@lem338634 A B S' z'' _7189 _7190 _7191) (@lem338635 A B _7189 H _7190 _7191)). Qed.
Lemma lem338637 {A B : Type'} (S' : type1413 A B) (z'' : type515 A B) (_7189 : A -> B) (H : type549 A B) (_7190 : A -> B) (_7191 : A) : (term1867 A B S' z'' _7189 H _7190 _7191) = (term1872 A B S' z'' _7189 H _7190 _7191).
Proof. exact (TRANS (@lem338629 A B S' z'' _7189 H _7190 _7191) (@lem338636 A B S' z'' _7189 H _7190 _7191)). Qed.
Lemma lem338638 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem338639 {A B : Type'} (S' : type1413 A B) (z'' : type515 A B) (_7189 : A -> B) (H : type549 A B) (_7190 : A -> B) (_7191 : A) : (term1873 A B S' z'' _7189 H _7190 _7191) = (term1874 A B S' z'' _7189 H _7190 _7191).
Proof. exact (MK_COMB (@lem338638) (@lem338637 A B S' z'' _7189 H _7190 _7191)). Qed.
Lemma lem338640 {A B : Type'} (z'' : type515 A B) (_7189 : A -> B) (_7190 : A -> B) (_7191 : A) : (term1228 A B z'' _7189 _7190 _7191) = (term1228 A B z'' _7189 _7190 _7191).
Proof. exact (eq_refl (term1228 A B z'' _7189 _7190 _7191)). Qed.
Lemma lem338641 {A B : Type'} (S' : type1413 A B) (H : type549 A B) (z'' : type515 A B) (_7189 : A -> B) (_7190 : A -> B) (_7191 : A) : (term1865 A B S' H z'' _7189 _7190 _7191) = (term1875 A B S' H z'' _7189 _7190 _7191).
Proof. exact (MK_COMB (@lem338639 A B S' z'' _7189 H _7190 _7191) (@lem338640 A B z'' _7189 _7190 _7191)). Qed.
Lemma lem338642 {A B : Type'} (S' : type1413 A B) (H : type549 A B) (z'' : type515 A B) (_7189 : A -> B) (_7190 : A -> B) (_7191 : A) : (term1803 A B S' z'' _7189 H _7190 _7191) = (term1875 A B S' H z'' _7189 _7190 _7191).
Proof. exact (TRANS (@lem338626 A B S' H z'' _7189 _7190 _7191) (@lem338641 A B S' H z'' _7189 _7190 _7191)). Qed.
Lemma lem338644 {A B : Type'} (z'' : type515 A B) (S' : type1413 A B) (f : A -> B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (f' : A -> B) (y' : B) (y : B) (h1 : term71 A B R S') (h2 : term282 A B lt2 z'' S' H) (h3 : term1812 A B f' H f x) (h4 : term1683 A B f H lt2 x R f' y' y) : term1872 A B S' z'' f' H f x.
Proof. exact (conj (@lem338615 A B z'' S' f H lt2 x R f' y' y h1 h2 h3 h4) (@lem338623 A B f' H f x h3)). Qed.
Lemma lem338646 {A B : Type'} (_7189 : A -> B) (_7190 : A -> B) (_7191 : A) (lt2 : type1402 A) (z'' : type515 A B) (S' : type1413 A B) (H : type549 A B) (h1 : term282 A B lt2 z'' S' H) : term1875 A B S' H z'' _7189 _7190 _7191.
Proof. exact (EQ_MP (@lem338642 A B S' H z'' _7189 _7190 _7191) (@lem337765 A B _7189 _7190 _7191 lt2 z'' S' H h1)). Qed.
Lemma lem338647 {A B : Type'} (_7189 : A -> B) (_7190 : A -> B) (_7191 : A) (lt2 : type1402 A) (z'' : type515 A B) (S' : type1413 A B) (H : type549 A B) (h1 : term282 A B lt2 z'' S' H) : term1875 A B S' H z'' _7189 _7190 _7191.
Proof. exact (@lem338646 A B _7189 _7190 _7191 lt2 z'' S' H h1). Qed.
Lemma lem338648 {A B : Type'} (f' : A -> B) (f : A -> B) (x : A) (lt2 : type1402 A) (z'' : type515 A B) (S' : type1413 A B) (H : type549 A B) (h1 : term282 A B lt2 z'' S' H) : term1875 A B S' H z'' f' f x.
Proof. exact (@lem338647 A B f' f x lt2 z'' S' H h1). Qed.
Lemma lem338651 {A B : Type'} (z'' : type515 A B) (S' : type1413 A B) (f : A -> B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (f' : A -> B) (y' : B) (y : B) (h1 : term71 A B R S') (h2 : term282 A B lt2 z'' S' H) (h3 : term1812 A B f' H f x) (h4 : term1683 A B f H lt2 x R f' y' y) : term1228 A B z'' f' f x.
Proof. exact (@lem338648 A B f' f x lt2 z'' S' H h2 (@lem338644 A B z'' S' f H lt2 x R f' y' y h1 h2 h3 h4)). Qed.
Lemma lem338652 {A B : Type'} (z'' : type515 A B) (S' : type1413 A B) (f : A -> B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (f' : A -> B) (y' : B) (y : B) (h1 : term71 A B R S') (h2 : term282 A B lt2 z'' S' H) (h3 : term1812 A B f' H f x) (h4 : term1683 A B f H lt2 x R f' y' y) : term1876 A B z'' f' f x.
Proof. exact (fun h0 : (term1212 A B z'' f' f x) = (term1224 A B z'' f' f x) => @lem338651 A B z'' S' f H lt2 x R f' y' y h1 h2 h3 h4). Qed.
Lemma lem338654 (p : Prop) : (term1363 p) = (~ p).
Proof. exact (EQ_MP (@lem21028 p) (@lem21107 p)). Qed.
Lemma lem338655 {A B : Type'} (z'' : type515 A B) (f' : A -> B) (f : A -> B) (x : A) : (term1876 A B z'' f' f x) = (term1228 A B z'' f' f x).
Proof. exact (@lem338654 ((term1212 A B z'' f' f x) = (term1224 A B z'' f' f x))). Qed.
Lemma lem338656 {A B : Type'} (z'' : type515 A B) (S' : type1413 A B) (f : A -> B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (f' : A -> B) (y' : B) (y : B) (h1 : term71 A B R S') (h2 : term282 A B lt2 z'' S' H) (h3 : term1812 A B f' H f x) (h4 : term1683 A B f H lt2 x R f' y' y) : term1228 A B z'' f' f x.
Proof. exact (EQ_MP (@lem338655 A B z'' f' f x) (@lem338652 A B z'' S' f H lt2 x R f' y' y h1 h2 h3 h4)). Qed.
Lemma lem338682 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem338683 {A B : Type'} (_7181 : B) (R : type1413 A B) (_7180 : A) (_7182 : B) : (term888 A B R _7180 _7182 _7181) = (term1004 A B _7181 R _7180 _7182).
Proof. exact (@lem338682 (_7182 = _7181) (term886 A B R _7180 _7182)). Qed.
Lemma lem338691 {A B : Type'} (R : type1413 A B) (_7180 : A) (_7181 : B) : (term887 A B R _7180 _7181) = (term887 A B R _7180 _7181).
Proof. exact (eq_refl (term887 A B R _7180 _7181)). Qed.
Lemma lem338692 {A B : Type'} (_7181 : B) (R : type1413 A B) (_7180 : A) (_7182 : B) : (term966 A B R _7180 _7182 _7181) = (term1005 A B _7181 R _7180 _7182).
Proof. exact (MK_COMB (@lem338691 A B R _7180 _7181) (@lem338683 A B _7181 R _7180 _7182)). Qed.
Lemma lem338696 (q : Prop) (p : Prop) (r : Prop) : (term1006 p q r) = (term1006 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem338697 {A B : Type'} (_7181 : B) (R : type1413 A B) (_7180 : A) (_7182 : B) : (term1005 A B _7181 R _7180 _7182) = (term1007 A B _7181 R _7180 _7182).
Proof. exact (@lem338696 (_7182 = _7181) (term886 A B R _7180 _7181) (term886 A B R _7180 _7182)). Qed.
Lemma lem338715 {A B : Type'} (_7181 : B) (R : type1413 A B) (_7180 : A) (_7182 : B) : (term966 A B R _7180 _7182 _7181) = (term1007 A B _7181 R _7180 _7182).
Proof. exact (TRANS (@lem338692 A B _7181 R _7180 _7182) (@lem338697 A B _7181 R _7180 _7182)). Qed.
Lemma lem338716 {A : Type'} (lt2 : type1402 A) (_7180 : A) (x : A) : (term1675 A lt2 _7180 x) = (term1675 A lt2 _7180 x).
Proof. exact (eq_refl (term1675 A lt2 _7180 x)). Qed.
Lemma lem338717 {A B : Type'} (lt2 : type1402 A) (x : A) (_7181 : B) (R : type1413 A B) (_7180 : A) (_7182 : B) : (term1816 A B lt2 x R _7180 _7182 _7181) = (term1877 A B lt2 x _7181 R _7180 _7182).
Proof. exact (MK_COMB (@lem338716 A lt2 _7180 x) (@lem338715 A B _7181 R _7180 _7182)). Qed.
Lemma lem338721 (q : Prop) (p : Prop) (r : Prop) : (term1006 p q r) = (term1006 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem338722 {A B : Type'} (lt2 : type1402 A) (x : A) (_7181 : B) (R : type1413 A B) (_7180 : A) (_7182 : B) : (term1877 A B lt2 x _7181 R _7180 _7182) = (term1878 A B lt2 x _7181 R _7180 _7182).
Proof. exact (@lem338721 (_7182 = _7181) (term1674 A lt2 _7180 x) (term1011 A B _7181 R _7180 _7182)). Qed.
Lemma lem338750 {A B : Type'} (lt2 : type1402 A) (x : A) (_7181 : B) (R : type1413 A B) (_7180 : A) (_7182 : B) : (term1816 A B lt2 x R _7180 _7182 _7181) = (term1878 A B lt2 x _7181 R _7180 _7182).
Proof. exact (TRANS (@lem338717 A B lt2 x _7181 R _7180 _7182) (@lem338722 A B lt2 x _7181 R _7180 _7182)). Qed.
Lemma lem338751 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem338752 {A B : Type'} (lt2 : type1402 A) (x : A) (_7181 : B) (R : type1413 A B) (_7180 : A) (_7182 : B) : (term1879 A B lt2 x R _7180 _7182 _7181) = (term1880 A B lt2 x _7181 R _7180 _7182).
Proof. exact (MK_COMB (@lem338751) (@lem338750 A B lt2 x _7181 R _7180 _7182)). Qed.
Lemma lem338756 (q : Prop) (p : Prop) (r : Prop) : (term1006 p q r) = (term1006 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem338757 {A B : Type'} (lt2 : type1402 A) (x : A) (R : type1413 A B) (_7180 : A) (_7182 : B) (_7181 : B) : (term1881 A B lt2 x R _7180 _7182 _7181) = (term1816 A B lt2 x R _7180 _7182 _7181).
Proof. exact (@lem338756 (term1674 A lt2 _7180 x) (term886 A B R _7180 _7181) (term888 A B R _7180 _7182 _7181)). Qed.
Lemma lem338781 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem338782 {A B : Type'} (_7181 : B) (R : type1413 A B) (_7180 : A) (_7182 : B) : (term888 A B R _7180 _7182 _7181) = (term1004 A B _7181 R _7180 _7182).
Proof. exact (@lem338781 (_7182 = _7181) (term886 A B R _7180 _7182)). Qed.
Lemma lem338790 {A B : Type'} (R : type1413 A B) (_7180 : A) (_7181 : B) : (term887 A B R _7180 _7181) = (term887 A B R _7180 _7181).
Proof. exact (eq_refl (term887 A B R _7180 _7181)). Qed.
Lemma lem338791 {A B : Type'} (_7181 : B) (R : type1413 A B) (_7180 : A) (_7182 : B) : (term966 A B R _7180 _7182 _7181) = (term1005 A B _7181 R _7180 _7182).
Proof. exact (MK_COMB (@lem338790 A B R _7180 _7181) (@lem338782 A B _7181 R _7180 _7182)). Qed.
Lemma lem338795 (q : Prop) (p : Prop) (r : Prop) : (term1006 p q r) = (term1006 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem338796 {A B : Type'} (_7181 : B) (R : type1413 A B) (_7180 : A) (_7182 : B) : (term1005 A B _7181 R _7180 _7182) = (term1007 A B _7181 R _7180 _7182).
Proof. exact (@lem338795 (_7182 = _7181) (term886 A B R _7180 _7181) (term886 A B R _7180 _7182)). Qed.
Lemma lem338814 {A B : Type'} (_7181 : B) (R : type1413 A B) (_7180 : A) (_7182 : B) : (term966 A B R _7180 _7182 _7181) = (term1007 A B _7181 R _7180 _7182).
Proof. exact (TRANS (@lem338791 A B _7181 R _7180 _7182) (@lem338796 A B _7181 R _7180 _7182)). Qed.
Lemma lem338815 {A : Type'} (lt2 : type1402 A) (_7180 : A) (x : A) : (term1675 A lt2 _7180 x) = (term1675 A lt2 _7180 x).
Proof. exact (eq_refl (term1675 A lt2 _7180 x)). Qed.
Lemma lem338816 {A B : Type'} (lt2 : type1402 A) (x : A) (_7181 : B) (R : type1413 A B) (_7180 : A) (_7182 : B) : (term1816 A B lt2 x R _7180 _7182 _7181) = (term1877 A B lt2 x _7181 R _7180 _7182).
Proof. exact (MK_COMB (@lem338815 A lt2 _7180 x) (@lem338814 A B _7181 R _7180 _7182)). Qed.
Lemma lem338820 (q : Prop) (p : Prop) (r : Prop) : (term1006 p q r) = (term1006 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem338821 {A B : Type'} (lt2 : type1402 A) (x : A) (_7181 : B) (R : type1413 A B) (_7180 : A) (_7182 : B) : (term1877 A B lt2 x _7181 R _7180 _7182) = (term1878 A B lt2 x _7181 R _7180 _7182).
Proof. exact (@lem338820 (_7182 = _7181) (term1674 A lt2 _7180 x) (term1011 A B _7181 R _7180 _7182)). Qed.
Lemma lem338849 {A B : Type'} (lt2 : type1402 A) (x : A) (_7181 : B) (R : type1413 A B) (_7180 : A) (_7182 : B) : (term1816 A B lt2 x R _7180 _7182 _7181) = (term1878 A B lt2 x _7181 R _7180 _7182).
Proof. exact (TRANS (@lem338816 A B lt2 x _7181 R _7180 _7182) (@lem338821 A B lt2 x _7181 R _7180 _7182)). Qed.
Lemma lem338850 {A B : Type'} (lt2 : type1402 A) (x : A) (_7181 : B) (R : type1413 A B) (_7180 : A) (_7182 : B) : (term1881 A B lt2 x R _7180 _7182 _7181) = (term1878 A B lt2 x _7181 R _7180 _7182).
Proof. exact (TRANS (@lem338757 A B lt2 x R _7180 _7182 _7181) (@lem338849 A B lt2 x _7181 R _7180 _7182)). Qed.
Lemma lem338851 {A B : Type'} (lt2 : type1402 A) (x : A) (_7181 : B) (R : type1413 A B) (_7180 : A) (_7182 : B) : ((term1816 A B lt2 x R _7180 _7182 _7181) = (term1881 A B lt2 x R _7180 _7182 _7181)) = ((term1878 A B lt2 x _7181 R _7180 _7182) = (term1878 A B lt2 x _7181 R _7180 _7182)).
Proof. exact (MK_COMB (@lem338752 A B lt2 x _7181 R _7180 _7182) (@lem338850 A B lt2 x _7181 R _7180 _7182)). Qed.
Lemma lem338853 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem20665 A x) (@lem20664 A x)). Qed.
Lemma lem338854 (x : Prop) : (x = x) = True.
Proof. exact (@lem338853 Prop x). Qed.
Lemma lem338855 {A B : Type'} (lt2 : type1402 A) (x : A) (_7181 : B) (R : type1413 A B) (_7180 : A) (_7182 : B) : ((term1878 A B lt2 x _7181 R _7180 _7182) = (term1878 A B lt2 x _7181 R _7180 _7182)) = True.
Proof. exact (@lem338854 (term1878 A B lt2 x _7181 R _7180 _7182)). Qed.
Lemma lem338856 {A B : Type'} (lt2 : type1402 A) (x : A) (R : type1413 A B) (_7180 : A) (_7182 : B) (_7181 : B) : ((term1816 A B lt2 x R _7180 _7182 _7181) = (term1881 A B lt2 x R _7180 _7182 _7181)) = True.
Proof. exact (TRANS (@lem338851 A B lt2 x _7181 R _7180 _7182) (@lem338855 A B lt2 x _7181 R _7180 _7182)). Qed.
Lemma lem338857 {A B : Type'} (lt2 : type1402 A) (x : A) (R : type1413 A B) (_7180 : A) (_7182 : B) (_7181 : B) : True = ((term1816 A B lt2 x R _7180 _7182 _7181) = (term1881 A B lt2 x R _7180 _7182 _7181)).
Proof. exact (SYM (@lem338856 A B lt2 x R _7180 _7182 _7181)). Qed.
Lemma lem338858 {A B : Type'} (lt2 : type1402 A) (x : A) (R : type1413 A B) (_7180 : A) (_7182 : B) (_7181 : B) : (term1816 A B lt2 x R _7180 _7182 _7181) = (term1881 A B lt2 x R _7180 _7182 _7181).
Proof. exact (EQ_MP (@lem338857 A B lt2 x R _7180 _7182 _7181) (@lem0)). Qed.
Lemma lem338859 {A B : Type'} (_7180 : A) (_7182 : B) (_7181 : B) (lt2 : type1402 A) (x : A) (y'' : A -> B) (R : type1413 A B) (h1 : term1149 A B lt2 x y'' R) : term1881 A B lt2 x R _7180 _7182 _7181.
Proof. exact (EQ_MP (@lem338858 A B lt2 x R _7180 _7182 _7181) (@lem337849 A B _7180 _7182 _7181 lt2 x y'' R h1)). Qed.
Lemma lem338861 (b : Prop) (a : Prop) : (a \/ b) = (term990 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem338862 {A B : Type'} (lt2 : type1402 A) (x : A) (_7182 : B) (R : type1413 A B) (_7180 : A) (_7181 : B) : (term1881 A B lt2 x R _7180 _7182 _7181) = (term1882 A B lt2 x _7182 R _7180 _7181).
Proof. exact (@lem338861 (term1883 A B lt2 x R _7180 _7182 _7181) (term886 A B R _7180 _7181)). Qed.
Lemma lem338864 (a : Prop) (b : Prop) : (term1012 a b) = (term1013 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem338865 {A B : Type'} (lt2 : type1402 A) (x : A) (R : type1413 A B) (_7180 : A) (_7182 : B) (_7181 : B) : (term1884 A B lt2 x R _7180 _7182 _7181) = (term1885 A B lt2 x R _7180 _7182 _7181).
Proof. exact (@lem338864 (term1674 A lt2 _7180 x) (term888 A B R _7180 _7182 _7181)). Qed.
Lemma lem338867 (a : Prop) : (term992 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem338868 {A : Type'} (lt2 : type1402 A) (_7180 : A) (x : A) : (term1835 A lt2 _7180 x) = (term1673 A lt2 _7180 x).
Proof. exact (@lem338867 (term1673 A lt2 _7180 x)). Qed.
Lemma lem338869 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem338870 {A : Type'} (lt2 : type1402 A) (_7180 : A) (x : A) : (term1886 A lt2 _7180 x) = (term1887 A lt2 _7180 x).
Proof. exact (MK_COMB (@lem338869) (@lem338868 A lt2 _7180 x)). Qed.
Lemma lem338872 (a : Prop) (b : Prop) : (term1012 a b) = (term1013 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem338873 {A B : Type'} (R : type1413 A B) (_7180 : A) (_7182 : B) (_7181 : B) : (term1888 A B R _7180 _7182 _7181) = (term1889 A B R _7180 _7182 _7181).
Proof. exact (@lem338872 (term886 A B R _7180 _7182) (_7182 = _7181)). Qed.
Lemma lem338875 (a : Prop) : (term992 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem338876 {A B : Type'} (R : type1413 A B) (_7180 : A) (_7182 : B) : (term1016 A B R _7180 _7182) = (term885 A B R _7180 _7182).
Proof. exact (@lem338875 (term885 A B R _7180 _7182)). Qed.
Lemma lem338877 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem338878 {A B : Type'} (R : type1413 A B) (_7180 : A) (_7182 : B) : (term1017 A B R _7180 _7182) = (term1018 A B R _7180 _7182).
Proof. exact (MK_COMB (@lem338877) (@lem338876 A B R _7180 _7182)). Qed.
Lemma lem338879 {B : Type'} (_7182 : B) (_7181 : B) : (term1478 B _7182 _7181) = (term1478 B _7182 _7181).
Proof. exact (eq_refl (term1478 B _7182 _7181)). Qed.
Lemma lem338880 {A B : Type'} (R : type1413 A B) (_7180 : A) (_7182 : B) (_7181 : B) : (term1889 A B R _7180 _7182 _7181) = (term1890 A B R _7180 _7182 _7181).
Proof. exact (MK_COMB (@lem338878 A B R _7180 _7182) (@lem338879 B _7182 _7181)). Qed.
Lemma lem338881 {A B : Type'} (R : type1413 A B) (_7180 : A) (_7182 : B) (_7181 : B) : (term1888 A B R _7180 _7182 _7181) = (term1890 A B R _7180 _7182 _7181).
Proof. exact (TRANS (@lem338873 A B R _7180 _7182 _7181) (@lem338880 A B R _7180 _7182 _7181)). Qed.
Lemma lem338882 {A B : Type'} (lt2 : type1402 A) (x : A) (R : type1413 A B) (_7180 : A) (_7182 : B) (_7181 : B) : (term1885 A B lt2 x R _7180 _7182 _7181) = (term1891 A B lt2 x R _7180 _7182 _7181).
Proof. exact (MK_COMB (@lem338870 A lt2 _7180 x) (@lem338881 A B R _7180 _7182 _7181)). Qed.
Lemma lem338883 {A B : Type'} (lt2 : type1402 A) (x : A) (R : type1413 A B) (_7180 : A) (_7182 : B) (_7181 : B) : (term1884 A B lt2 x R _7180 _7182 _7181) = (term1891 A B lt2 x R _7180 _7182 _7181).
Proof. exact (TRANS (@lem338865 A B lt2 x R _7180 _7182 _7181) (@lem338882 A B lt2 x R _7180 _7182 _7181)). Qed.
Lemma lem338884 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem338885 {A B : Type'} (lt2 : type1402 A) (x : A) (R : type1413 A B) (_7180 : A) (_7182 : B) (_7181 : B) : (term1892 A B lt2 x R _7180 _7182 _7181) = (term1893 A B lt2 x R _7180 _7182 _7181).
Proof. exact (MK_COMB (@lem338884) (@lem338883 A B lt2 x R _7180 _7182 _7181)). Qed.
Lemma lem338886 {A B : Type'} (R : type1413 A B) (_7180 : A) (_7181 : B) : (term886 A B R _7180 _7181) = (term886 A B R _7180 _7181).
Proof. exact (eq_refl (term886 A B R _7180 _7181)). Qed.
Lemma lem338887 {A B : Type'} (lt2 : type1402 A) (x : A) (_7182 : B) (R : type1413 A B) (_7180 : A) (_7181 : B) : (term1882 A B lt2 x _7182 R _7180 _7181) = (term1894 A B lt2 x _7182 R _7180 _7181).
Proof. exact (MK_COMB (@lem338885 A B lt2 x R _7180 _7182 _7181) (@lem338886 A B R _7180 _7181)). Qed.
Lemma lem338888 {A B : Type'} (lt2 : type1402 A) (x : A) (_7182 : B) (R : type1413 A B) (_7180 : A) (_7181 : B) : (term1881 A B lt2 x R _7180 _7182 _7181) = (term1894 A B lt2 x _7182 R _7180 _7181).
Proof. exact (TRANS (@lem338862 A B lt2 x _7182 R _7180 _7181) (@lem338887 A B lt2 x _7182 R _7180 _7181)). Qed.
Lemma lem338890 {A B : Type'} (z'' : type515 A B) (S' : type1413 A B) (f : A -> B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (f' : A -> B) (y' : B) (y : B) (h1 : term71 A B R S') (h2 : term282 A B lt2 z'' S' H) (h3 : term1812 A B f' H f x) (h4 : term1683 A B f H lt2 x R f' y' y) : term1895 A B R z'' f' f x.
Proof. exact (conj (@lem338530 A B z'' S' f H lt2 x R f' y' y h2 h3 h4) (@lem338656 A B z'' S' f H lt2 x R f' y' y h1 h2 h3 h4)). Qed.
Lemma lem338891 {A B : Type'} (z'' : type515 A B) (S' : type1413 A B) (f : A -> B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (f' : A -> B) (y' : B) (y : B) (h1 : term71 A B R S') (h2 : term282 A B lt2 z'' S' H) (h3 : term1812 A B f' H f x) (h4 : term1683 A B f H lt2 x R f' y' y) : term1896 A B lt2 R z'' f' f x.
Proof. exact (conj (@lem338457 A B lt2 z'' S' f' H f x h2 h3) (@lem338890 A B z'' S' f H lt2 x R f' y' y h1 h2 h3 h4)). Qed.
Lemma lem338893 {A B : Type'} (_7182 : B) (_7180 : A) (_7181 : B) (lt2 : type1402 A) (x : A) (y'' : A -> B) (R : type1413 A B) (h1 : term1149 A B lt2 x y'' R) : term1894 A B lt2 x _7182 R _7180 _7181.
Proof. exact (EQ_MP (@lem338888 A B lt2 x _7182 R _7180 _7181) (@lem338859 A B _7180 _7182 _7181 lt2 x y'' R h1)). Qed.
Lemma lem338894 {A B : Type'} (_7182 : B) (_7180 : A) (_7181 : B) (lt2 : type1402 A) (x : A) (y'' : A -> B) (R : type1413 A B) (h1 : term1149 A B lt2 x y'' R) : term1894 A B lt2 x _7182 R _7180 _7181.
Proof. exact (@lem338893 A B _7182 _7180 _7181 lt2 x y'' R h1). Qed.
Lemma lem338895 {A B : Type'} (z'' : type515 A B) (f' : A -> B) (f : A -> B) (lt2 : type1402 A) (x : A) (y'' : A -> B) (R : type1413 A B) (h1 : term1149 A B lt2 x y'' R) : term1897 A B lt2 R z'' f' f x.
Proof. exact (@lem338894 A B (term1212 A B z'' f' f x) (term1209 A B z'' f' f x) (term1224 A B z'' f' f x) lt2 x y'' R h1). Qed.
Lemma lem338898 {A B : Type'} (y'' : A -> B) (z'' : type515 A B) (S' : type1413 A B) (f : A -> B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (f' : A -> B) (y' : B) (y : B) (h1 : term71 A B R S') (h2 : term1149 A B lt2 x y'' R) (h3 : term282 A B lt2 z'' S' H) (h4 : term1812 A B f' H f x) (h5 : term1683 A B f H lt2 x R f' y' y) : term1898 A B R z'' f' f x.
Proof. exact (@lem338895 A B z'' f' f lt2 x y'' R h2 (@lem338891 A B z'' S' f H lt2 x R f' y' y h1 h3 h4 h5)). Qed.
Lemma lem338899 {A B : Type'} (y'' : A -> B) (z'' : type515 A B) (S' : type1413 A B) (f : A -> B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (f' : A -> B) (y' : B) (y : B) (h1 : term71 A B R S') (h2 : term1149 A B lt2 x y'' R) (h3 : term282 A B lt2 z'' S' H) (h4 : term1812 A B f' H f x) (h5 : term1683 A B f H lt2 x R f' y' y) : term1899 A B R z'' f' f x.
Proof. exact (fun h0 : term1900 A B R z'' f' f x => @lem338898 A B y'' z'' S' f H lt2 x R f' y' y h1 h2 h3 h4 h5). Qed.
Lemma lem338901 (p : Prop) : (term1363 p) = (~ p).
Proof. exact (EQ_MP (@lem21028 p) (@lem21107 p)). Qed.
Lemma lem338902 {A B : Type'} (R : type1413 A B) (z'' : type515 A B) (f' : A -> B) (f : A -> B) (x : A) : (term1899 A B R z'' f' f x) = (term1898 A B R z'' f' f x).
Proof. exact (@lem338901 (term1900 A B R z'' f' f x)). Qed.
Lemma lem338903 {A B : Type'} (y'' : A -> B) (z'' : type515 A B) (S' : type1413 A B) (f : A -> B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (f' : A -> B) (y' : B) (y : B) (h1 : term71 A B R S') (h2 : term1149 A B lt2 x y'' R) (h3 : term282 A B lt2 z'' S' H) (h4 : term1812 A B f' H f x) (h5 : term1683 A B f H lt2 x R f' y' y) : term1898 A B R z'' f' f x.
Proof. exact (EQ_MP (@lem338902 A B R z'' f' f x) (@lem338899 A B y'' z'' S' f H lt2 x R f' y' y h1 h2 h3 h4 h5)). Qed.
Lemma lem338905 (b : Prop) (a : Prop) : (a \/ b) = (term990 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem338908 {A B : Type'} (R : type1413 A B) (f : A -> B) (lt2 : type1402 A) (_7193 : A) (x : A) : (term1676 A B lt2 x R f _7193) = (term1901 A B R f lt2 _7193 x).
Proof. exact (@lem338905 (term898 A B R f _7193) (term1674 A lt2 _7193 x)). Qed.
Lemma lem338911 {A B : Type'} (_7193 : A) (f : A -> B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (f' : A -> B) (y' : B) (y : B) (h1 : term1683 A B f H lt2 x R f' y' y) : term1901 A B R f lt2 _7193 x.
Proof. exact (EQ_MP (@lem338908 A B R f lt2 _7193 x) (@lem337709 A B _7193 f H lt2 x R f' y' y h1)). Qed.
Lemma lem338912 {A B : Type'} (_7193 : A) (f : A -> B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (f' : A -> B) (y' : B) (y : B) (h1 : term1683 A B f H lt2 x R f' y' y) : term1901 A B R f lt2 _7193 x.
Proof. exact (@lem338911 A B _7193 f H lt2 x R f' y' y h1). Qed.
Lemma lem338913 {A B : Type'} (z'' : type515 A B) (f : A -> B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (f' : A -> B) (y' : B) (y : B) (h1 : term1683 A B f H lt2 x R f' y' y) : term1902 A B R lt2 z'' f' f x.
Proof. exact (@lem338912 A B (term1209 A B z'' f' f x) f H lt2 x R f' y' y h1). Qed.
Lemma lem338916 {A B : Type'} (y'' : A -> B) (z'' : type515 A B) (S' : type1413 A B) (f : A -> B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (f' : A -> B) (y' : B) (y : B) (h1 : term71 A B R S') (h2 : term1149 A B lt2 x y'' R) (h3 : term282 A B lt2 z'' S' H) (h4 : term1812 A B f' H f x) (h5 : term1683 A B f H lt2 x R f' y' y) : term1854 A B lt2 z'' f' f x.
Proof. exact (@lem338913 A B z'' f H lt2 x R f' y' y h5 (@lem338903 A B y'' z'' S' f H lt2 x R f' y' y h1 h2 h3 h4 h5)). Qed.
Lemma lem338917 {A B : Type'} (y'' : A -> B) (z'' : type515 A B) (S' : type1413 A B) (f : A -> B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (f' : A -> B) (y' : B) (y : B) (h1 : term71 A B R S') (h2 : term1149 A B lt2 x y'' R) (h3 : term282 A B lt2 z'' S' H) (h4 : term1812 A B f' H f x) (h5 : term1683 A B f H lt2 x R f' y' y) : term1903 A B lt2 z'' f' f x.
Proof. exact (fun h0 : term1239 A B lt2 z'' f' f x => @lem338916 A B y'' z'' S' f H lt2 x R f' y' y h1 h2 h3 h4 h5). Qed.
Lemma lem338919 (p : Prop) : (term1363 p) = (~ p).
Proof. exact (EQ_MP (@lem21028 p) (@lem21107 p)). Qed.
Lemma lem338920 {A B : Type'} (lt2 : type1402 A) (z'' : type515 A B) (f' : A -> B) (f : A -> B) (x : A) : (term1903 A B lt2 z'' f' f x) = (term1854 A B lt2 z'' f' f x).
Proof. exact (@lem338919 (term1239 A B lt2 z'' f' f x)). Qed.
Lemma lem338921 {A B : Type'} (y'' : A -> B) (z'' : type515 A B) (S' : type1413 A B) (f : A -> B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (f' : A -> B) (y' : B) (y : B) (h1 : term71 A B R S') (h2 : term1149 A B lt2 x y'' R) (h3 : term282 A B lt2 z'' S' H) (h4 : term1812 A B f' H f x) (h5 : term1683 A B f H lt2 x R f' y' y) : term1854 A B lt2 z'' f' f x.
Proof. exact (EQ_MP (@lem338920 A B lt2 z'' f' f x) (@lem338917 A B y'' z'' S' f H lt2 x R f' y' y h1 h2 h3 h4 h5)). Qed.
Lemma lem338927 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem338928 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (z'' : type515 A B) (_7189 : A -> B) (_7190 : A -> B) (_7191 : A) : (term1815 A B lt2 z'' _7189 H _7190 _7191) = (term1904 A B H lt2 z'' _7189 _7190 _7191).
Proof. exact (@lem338927 ((term916 A B H _7189 _7191) = (term916 A B H _7190 _7191)) (term1239 A B lt2 z'' _7189 _7190 _7191)). Qed.
Lemma lem338936 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem338937 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (z'' : type515 A B) (_7189 : A -> B) (_7190 : A -> B) (_7191 : A) : (term1905 A B lt2 z'' _7189 H _7190 _7191) = (term1906 A B H lt2 z'' _7189 _7190 _7191).
Proof. exact (MK_COMB (@lem338936) (@lem338928 A B H lt2 z'' _7189 _7190 _7191)). Qed.
Lemma lem338945 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (z'' : type515 A B) (_7189 : A -> B) (_7190 : A -> B) (_7191 : A) : (term1904 A B H lt2 z'' _7189 _7190 _7191) = (term1904 A B H lt2 z'' _7189 _7190 _7191).
Proof. exact (eq_refl (term1904 A B H lt2 z'' _7189 _7190 _7191)). Qed.
Lemma lem338946 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (z'' : type515 A B) (_7189 : A -> B) (_7190 : A -> B) (_7191 : A) : ((term1815 A B lt2 z'' _7189 H _7190 _7191) = (term1904 A B H lt2 z'' _7189 _7190 _7191)) = ((term1904 A B H lt2 z'' _7189 _7190 _7191) = (term1904 A B H lt2 z'' _7189 _7190 _7191)).
Proof. exact (MK_COMB (@lem338937 A B H lt2 z'' _7189 _7190 _7191) (@lem338945 A B H lt2 z'' _7189 _7190 _7191)). Qed.
Lemma lem338948 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem20665 A x) (@lem20664 A x)). Qed.
Lemma lem338949 (x : Prop) : (x = x) = True.
Proof. exact (@lem338948 Prop x). Qed.
Lemma lem338950 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (z'' : type515 A B) (_7189 : A -> B) (_7190 : A -> B) (_7191 : A) : ((term1904 A B H lt2 z'' _7189 _7190 _7191) = (term1904 A B H lt2 z'' _7189 _7190 _7191)) = True.
Proof. exact (@lem338949 (term1904 A B H lt2 z'' _7189 _7190 _7191)). Qed.
Lemma lem338951 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (z'' : type515 A B) (_7189 : A -> B) (_7190 : A -> B) (_7191 : A) : ((term1815 A B lt2 z'' _7189 H _7190 _7191) = (term1904 A B H lt2 z'' _7189 _7190 _7191)) = True.
Proof. exact (TRANS (@lem338946 A B H lt2 z'' _7189 _7190 _7191) (@lem338950 A B H lt2 z'' _7189 _7190 _7191)). Qed.
Lemma lem338952 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (z'' : type515 A B) (_7189 : A -> B) (_7190 : A -> B) (_7191 : A) : True = ((term1815 A B lt2 z'' _7189 H _7190 _7191) = (term1904 A B H lt2 z'' _7189 _7190 _7191)).
Proof. exact (SYM (@lem338951 A B H lt2 z'' _7189 _7190 _7191)). Qed.
Lemma lem338953 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (z'' : type515 A B) (_7189 : A -> B) (_7190 : A -> B) (_7191 : A) : (term1815 A B lt2 z'' _7189 H _7190 _7191) = (term1904 A B H lt2 z'' _7189 _7190 _7191).
Proof. exact (EQ_MP (@lem338952 A B H lt2 z'' _7189 _7190 _7191) (@lem0)). Qed.
Lemma lem338954 {A B : Type'} (_7189 : A -> B) (_7190 : A -> B) (_7191 : A) (lt2 : type1402 A) (z'' : type515 A B) (S' : type1413 A B) (H : type549 A B) (h1 : term282 A B lt2 z'' S' H) : term1904 A B H lt2 z'' _7189 _7190 _7191.
Proof. exact (EQ_MP (@lem338953 A B H lt2 z'' _7189 _7190 _7191) (@lem337751 A B _7189 _7190 _7191 lt2 z'' S' H h1)). Qed.
Lemma lem338956 (b : Prop) (a : Prop) : (a \/ b) = (term990 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem338959 {A B : Type'} (lt2 : type1402 A) (z'' : type515 A B) (_7189 : A -> B) (H : type549 A B) (_7190 : A -> B) (_7191 : A) : (term1904 A B H lt2 z'' _7189 _7190 _7191) = (term1907 A B lt2 z'' _7189 H _7190 _7191).
Proof. exact (@lem338956 (term1239 A B lt2 z'' _7189 _7190 _7191) ((term916 A B H _7189 _7191) = (term916 A B H _7190 _7191))). Qed.
Lemma lem338962 {A B : Type'} (_7189 : A -> B) (_7190 : A -> B) (_7191 : A) (lt2 : type1402 A) (z'' : type515 A B) (S' : type1413 A B) (H : type549 A B) (h1 : term282 A B lt2 z'' S' H) : term1907 A B lt2 z'' _7189 H _7190 _7191.
Proof. exact (EQ_MP (@lem338959 A B lt2 z'' _7189 H _7190 _7191) (@lem338954 A B _7189 _7190 _7191 lt2 z'' S' H h1)). Qed.
Lemma lem338963 {A B : Type'} (_7189 : A -> B) (_7190 : A -> B) (_7191 : A) (lt2 : type1402 A) (z'' : type515 A B) (S' : type1413 A B) (H : type549 A B) (h1 : term282 A B lt2 z'' S' H) : term1907 A B lt2 z'' _7189 H _7190 _7191.
Proof. exact (@lem338962 A B _7189 _7190 _7191 lt2 z'' S' H h1). Qed.
Lemma lem338964 {A B : Type'} (f' : A -> B) (f : A -> B) (x : A) (lt2 : type1402 A) (z'' : type515 A B) (S' : type1413 A B) (H : type549 A B) (h1 : term282 A B lt2 z'' S' H) : term1907 A B lt2 z'' f' H f x.
Proof. exact (@lem338963 A B f' f x lt2 z'' S' H h1). Qed.
Lemma lem338967 {A B : Type'} (y'' : A -> B) (z'' : type515 A B) (S' : type1413 A B) (f : A -> B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (f' : A -> B) (y' : B) (y : B) (h1 : term71 A B R S') (h2 : term1149 A B lt2 x y'' R) (h3 : term282 A B lt2 z'' S' H) (h4 : term1812 A B f' H f x) (h5 : term1683 A B f H lt2 x R f' y' y) : (term916 A B H f' x) = (term916 A B H f x).
Proof. exact (@lem338964 A B f' f x lt2 z'' S' H h3 (@lem338921 A B y'' z'' S' f H lt2 x R f' y' y h1 h2 h3 h4 h5)). Qed.
Lemma lem338968 {A B : Type'} (y'' : A -> B) (z'' : type515 A B) (S' : type1413 A B) (f : A -> B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (f' : A -> B) (y' : B) (y : B) (h1 : term71 A B R S') (h2 : term1149 A B lt2 x y'' R) (h3 : term282 A B lt2 z'' S' H) (h4 : term1683 A B f H lt2 x R f' y' y) : term1908 A B f' H f x.
Proof. exact (fun h0 : term1812 A B f' H f x => @lem338967 A B y'' z'' S' f H lt2 x R f' y' y h1 h2 h3 h0 h4). Qed.
Lemma lem338970 (p : Prop) : (term986 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem338971 {A B : Type'} (f' : A -> B) (H : type549 A B) (f : A -> B) (x : A) : (term1908 A B f' H f x) = ((term916 A B H f' x) = (term916 A B H f x)).
Proof. exact (@lem338970 ((term916 A B H f' x) = (term916 A B H f x))). Qed.
Lemma lem338972 {A B : Type'} (y'' : A -> B) (z'' : type515 A B) (S' : type1413 A B) (f : A -> B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (f' : A -> B) (y' : B) (y : B) (h1 : term71 A B R S') (h2 : term1149 A B lt2 x y'' R) (h3 : term282 A B lt2 z'' S' H) (h4 : term1683 A B f H lt2 x R f' y' y) : (term916 A B H f' x) = (term916 A B H f x).
Proof. exact (EQ_MP (@lem338971 A B f' H f x) (@lem338968 A B y'' z'' S' f H lt2 x R f' y' y h1 h2 h3 h4)). Qed.
Lemma lem338975 (p : Prop) : (~ p) = (p -> False).
Proof. exact (EQ_MP (@lem21021 p) (@lem0)). Qed.
Lemma lem338977 {A B : Type'} (f' : A -> B) (H : type549 A B) (f : A -> B) (x : A) : (term1812 A B f' H f x) = (term1909 A B f' H f x).
Proof. exact (@lem338975 ((term916 A B H f' x) = (term916 A B H f x))). Qed.
Lemma lem338980 {A B : Type'} (f : A -> B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (f' : A -> B) (y' : B) (y : B) (h1 : term1683 A B f H lt2 x R f' y' y) : term1909 A B f' H f x.
Proof. exact (EQ_MP (@lem338977 A B f' H f x) (@lem337681 A B f H lt2 x R f' y' y h1)). Qed.
Lemma lem338983 {A B : Type'} (y'' : A -> B) (z'' : type515 A B) (S' : type1413 A B) (f : A -> B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (f' : A -> B) (y' : B) (y : B) (h1 : term71 A B R S') (h2 : term1149 A B lt2 x y'' R) (h3 : term282 A B lt2 z'' S' H) (h4 : term1683 A B f H lt2 x R f' y' y) : False.
Proof. exact (@lem338980 A B f H lt2 x R f' y' y h4 (@lem338972 A B y'' z'' S' f H lt2 x R f' y' y h1 h2 h3 h4)). Qed.
Lemma lem338984 {A B : Type'} (y'' : A -> B) (z'' : type515 A B) (S' : type1413 A B) (f : A -> B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (f' : A -> B) (y' : B) (y : B) (h1 : term71 A B R S') (h2 : term1149 A B lt2 x y'' R) (h3 : term282 A B lt2 z'' S' H) (h4 : term1683 A B f H lt2 x R f' y' y) : term1027.
Proof. exact (fun h0 : ~ False => @lem338983 A B y'' z'' S' f H lt2 x R f' y' y h1 h2 h3 h4). Qed.
Lemma lem338986 (p : Prop) : (term986 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem338987 : term1027 = False.
Proof. exact (@lem338986 False). Qed.
Lemma lem338990 {A B : Type'} (y'' : A -> B) (z'' : type515 A B) (S' : type1413 A B) (f : A -> B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (f' : A -> B) (y' : B) (y : B) (h1 : term71 A B R S') (h2 : term1149 A B lt2 x y'' R) (h3 : term282 A B lt2 z'' S' H) (h4 : term1683 A B f H lt2 x R f' y' y) : False.
Proof. exact (EQ_MP (@lem338987) (@lem338984 A B y'' z'' S' f H lt2 x R f' y' y h1 h2 h3 h4)). Qed.
Lemma lem338991 {A B : Type'} (y'' : A -> B) (z'' : type515 A B) (S' : type1413 A B) (z : type1445 A B) (f : A -> B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (f' : A -> B) (y' : B) (y : B) (h1 : term71 A B R S') (h2 : term1149 A B lt2 x y'' R) (h3 : term282 A B lt2 z'' S' H) (h4 : term1661 A B z f H lt2 x R f' y' y) : False.
Proof. exact (or_elim (@lem335489 A B z f H lt2 x R f' y' y h4) (fun h0 : term1716 A B H lt2 x R z => @lem338232 A B y'' H lt2 x R z h2 h0) (fun h0 : term1683 A B f H lt2 x R f' y' y => @lem338990 A B y'' z'' S' f H lt2 x R f' y' y h1 h2 h3 h0)). Qed.
Lemma lem338992 {A B : Type'} (y'' : A -> B) (S' : type1413 A B) (z : type1445 A B) (f : A -> B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (f' : A -> B) (y' : B) (y : B) (h1 : term71 A B R S') (h2 : term1149 A B lt2 x y'' R) (h3 : term1 A B lt2 S' H) (h4 : term1661 A B z f H lt2 x R f' y' y) : False.
Proof. exact (ex_elim (@lem333290 A B lt2 S' H h3) (fun z'' : type515 A B => fun h0 : term284 A B lt2 S' H z'' => @lem338991 A B y'' z'' S' z f H lt2 x R f' y' y h1 h2 h0 h4)). Qed.
Lemma lem338993 {A B : Type'} (y'' : A -> B) (S' : type1413 A B) (z : type1445 A B) (f : A -> B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (f' : A -> B) (y' : B) (y : B) (h1 : term71 A B R S') (h2 : term1149 A B lt2 x y'' R) (h3 : term3 A B lt2 R H) (h4 : term1 A B lt2 S' H) (h5 : term1661 A B z f H lt2 x R f' y' y) : False.
Proof. exact (ex_elim (@lem333515 A B lt2 R H h3) (fun z' : type548 A B => fun h0 : term362 A B lt2 R H z' => @lem338992 A B y'' S' z f H lt2 x R f' y' y h1 h2 h4 h5)). Qed.
Lemma lem338994 {A B : Type'} (y'' : A -> B) (S' : type1413 A B) (f'' : type467 A B) (z : type1445 A B) (f : A -> B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (f' : A -> B) (y' : B) (y : B) (h1 : term71 A B R S') (h2 : term1149 A B lt2 x y'' R) (h3 : term3 A B lt2 R H) (h4 : term1 A B lt2 S' H) (h5 : term483 A B lt2 H f'' R) (h6 : term1661 A B z f H lt2 x R f' y' y) : False.
Proof. exact (ex_elim (@lem335151 A B lt2 H f'' R h5) (fun x' : type473 A B => fun h0 : term482 A B lt2 H f'' R x' => @lem338993 A B y'' S' z f H lt2 x R f' y' y h1 h2 h3 h4 h6)). Qed.
Lemma lem338995 {A B : Type'} (y'' : A -> B) (S' : type1413 A B) (z : type1445 A B) (f : A -> B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (f' : A -> B) (y' : B) (y : B) (h1 : term71 A B R S') (h2 : term1149 A B lt2 x y'' R) (h3 : term3 A B lt2 R H) (h4 : term1 A B lt2 S' H) (h5 : term5 A B lt2 H R) (h6 : term1661 A B z f H lt2 x R f' y' y) : False.
Proof. exact (ex_elim (@lem333896 A B lt2 H R h5) (fun f'' : type467 A B => fun h0 : term484 A B lt2 H R f'' => @lem338994 A B y'' S' f'' z f H lt2 x R f' y' y h1 h2 h3 h4 h0 h6)). Qed.
Lemma lem338996 {A B : Type'} (S' : type1413 A B) (z : type1445 A B) (f : A -> B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (f' : A -> B) (y' : B) (y : B) (h1 : term71 A B R S') (h2 : term1043 A B lt2 x R) (h3 : term3 A B lt2 R H) (h4 : term1 A B lt2 S' H) (h5 : term5 A B lt2 H R) (h6 : term1661 A B z f H lt2 x R f' y' y) : False.
Proof. exact (ex_elim (@lem334254 A B lt2 x R h2) (fun y'' : A -> B => fun h0 : term1151 A B lt2 x R y'' => @lem338995 A B y'' S' z f H lt2 x R f' y' y h1 h0 h3 h4 h5 h6)). Qed.
Lemma lem338997 {A B : Type'} (S' : type1413 A B) (z : type1445 A B) (f : A -> B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (y' : B) (y : B) (h1 : term71 A B R S') (h2 : term1043 A B lt2 x R) (h3 : term3 A B lt2 R H) (h4 : term1 A B lt2 S' H) (h5 : term5 A B lt2 H R) (h6 : term1664 A B z f H lt2 x R y' y) : False.
Proof. exact (ex_elim (@lem335148 A B z f H lt2 x R y' y h6) (fun f' : A -> B => fun h0 : term1663 A B z f H lt2 x R y' y f' => @lem338996 A B S' z f H lt2 x R f' y' y h1 h2 h3 h4 h5 h0)). Qed.
Lemma lem338998 {A B : Type'} (S' : type1413 A B) (z : type1445 A B) (f : A -> B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (y : B) (h1 : term71 A B R S') (h2 : term1043 A B lt2 x R) (h3 : term3 A B lt2 R H) (h4 : term1 A B lt2 S' H) (h5 : term5 A B lt2 H R) (h6 : term1666 A B z f H lt2 x R y) : False.
Proof. exact (ex_elim (@lem335147 A B z f H lt2 x R y h6) (fun y' : B => fun h0 : term1665 A B z f H lt2 x R y y' => @lem338997 A B S' z f H lt2 x R y' y h1 h2 h3 h4 h5 h0)). Qed.
Lemma lem338999 {A B : Type'} (S' : type1413 A B) (z : type1445 A B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (y : B) (h1 : term71 A B R S') (h2 : term1043 A B lt2 x R) (h3 : term3 A B lt2 R H) (h4 : term1 A B lt2 S' H) (h5 : term5 A B lt2 H R) (h6 : term1668 A B z H lt2 x R y) : False.
Proof. exact (ex_elim (@lem335146 A B z H lt2 x R y h6) (fun f : A -> B => fun h0 : term1667 A B z H lt2 x R y f => @lem338998 A B S' z f H lt2 x R y h1 h2 h3 h4 h5 h0)). Qed.
Lemma lem339000 {A B : Type'} (S' : type1413 A B) (z : type1445 A B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (h1 : term71 A B R S') (h2 : term1043 A B lt2 x R) (h3 : term3 A B lt2 R H) (h4 : term1 A B lt2 S' H) (h5 : term5 A B lt2 H R) (h6 : term1670 A B z H lt2 x R) : False.
Proof. exact (ex_elim (@lem335145 A B z H lt2 x R h6) (fun y : B => fun h0 : term1669 A B z H lt2 x R y => @lem338999 A B S' z H lt2 x R y h1 h2 h3 h4 h5 h0)). Qed.
Lemma lem339001 {A B : Type'} (S' : type1413 A B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (h1 : term71 A B R S') (h2 : term1043 A B lt2 x R) (h3 : term3 A B lt2 R H) (h4 : term1 A B lt2 S' H) (h5 : term5 A B lt2 H R) (h6 : term1477 A B H lt2 x R) : False.
Proof. exact (ex_elim (@lem335144 A B H lt2 x R h6) (fun z : type1445 A B => fun h0 : term1671 A B H lt2 x R z => @lem339000 A B S' z H lt2 x R h1 h2 h3 h4 h5 h0)). Qed.
Lemma lem339002 {A B : Type'} (S' : type1413 A B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (h1 : term71 A B R S') (h2 : term1043 A B lt2 x R) (h3 : term3 A B lt2 R H) (h4 : term1 A B lt2 S' H) (h5 : term5 A B lt2 H R) (h6 : term1477 A B H lt2 x R) : (term1477 A B H lt2 x R) = False.
Proof. exact (prop_ext (fun h7 : term1477 A B H lt2 x R => @lem339001 A B S' H lt2 x R h1 h2 h3 h4 h5 h6) (fun h7 : False => @lem333014 A B H lt2 x R h6)). Qed.
Lemma lem339003 {A B : Type'} (S' : type1413 A B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (h1 : term71 A B R S') (h2 : term1043 A B lt2 x R) (h3 : term3 A B lt2 R H) (h4 : term1 A B lt2 S' H) (h5 : term5 A B lt2 H R) (h6 : term1477 A B H lt2 x R) : False.
Proof. exact (EQ_MP (@lem339002 A B S' H lt2 x R h1 h2 h3 h4 h5 h6) (@lem333014 A B H lt2 x R h6)). Qed.
Lemma lem339004 {A B : Type'} (x : A) (S' : type1413 A B) (lt2 : type1402 A) (H : type549 A B) (R : type1413 A B) (h1 : term71 A B R S') (h2 : term1043 A B lt2 x R) (h3 : term3 A B lt2 R H) (h4 : term1 A B lt2 S' H) (h5 : term5 A B lt2 H R) : term1476 A B H lt2 x R.
Proof. exact (fun h0 : term1477 A B H lt2 x R => @lem339003 A B S' H lt2 x R h1 h2 h3 h4 h5 h0). Qed.
Lemma lem339005 {A B : Type'} (x : A) (S' : type1413 A B) (lt2 : type1402 A) (H : type549 A B) (R : type1413 A B) (h1 : term71 A B R S') (h2 : term1043 A B lt2 x R) (h3 : term3 A B lt2 R H) (h4 : term1 A B lt2 S' H) (h5 : term5 A B lt2 H R) : term1060 A B H lt2 x R.
Proof. exact (EQ_MP (@lem333013 A B H lt2 x R) (@lem339004 A B x S' lt2 H R h1 h2 h3 h4 h5)). Qed.
Lemma lem339006 {A B : Type'} (x : A) (S' : type1413 A B) (lt2 : type1402 A) (H : type549 A B) (R : type1413 A B) (h1 : term1043 A B lt2 x R) (h2 : term3 A B lt2 R H) (h3 : term1 A B lt2 S' H) (h4 : term5 A B lt2 H R) : term1440 A B S' H lt2 x R.
Proof. exact (fun h0 : term71 A B R S' => @lem339005 A B x S' lt2 H R h0 h1 h2 h3 h4). Qed.
Lemma lem339007 {A B : Type'} (x : A) (S' : type1413 A B) (lt2 : type1402 A) (H : type549 A B) (R : type1413 A B) (h1 : term3 A B lt2 R H) (h2 : term1 A B lt2 S' H) (h3 : term5 A B lt2 H R) : term1449 A B S' H lt2 x R.
Proof. exact (fun h0 : term1043 A B lt2 x R => @lem339006 A B x S' lt2 H R h0 h1 h2 h3). Qed.
Lemma lem339008 {A B : Type'} (x : A) (R : type1413 A B) (lt2 : type1402 A) (S' : type1413 A B) (H : type549 A B) (h1 : term3 A B lt2 R H) (h2 : term1 A B lt2 S' H) : term1451 A B S' H lt2 x R.
Proof. exact (fun h0 : term5 A B lt2 H R => @lem339007 A B x S' lt2 H R h1 h2 h0). Qed.
Lemma lem339009 {A B : Type'} (x : A) (R : type1413 A B) (lt2 : type1402 A) (S' : type1413 A B) (H : type549 A B) (h1 : term1 A B lt2 S' H) : term1453 A B S' H lt2 x R.
Proof. exact (fun h0 : term3 A B lt2 R H => @lem339008 A B x R lt2 S' H h0 h1). Qed.
Lemma lem339010 {A B : Type'} (S' : type1413 A B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) : term1454 A B S' H lt2 x R.
Proof. exact (fun h0 : term1 A B lt2 S' H => @lem339009 A B x R lt2 S' H h0). Qed.
Lemma lem339015 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) : term1458 A B H lt2 x R.
Proof. exact (fun S' : type1413 A B => @lem339010 A B S' H lt2 x R). Qed.
Lemma lem339020 {A B : Type'} (lt2 : type1402 A) (x : A) (R : type1413 A B) : term1462 A B lt2 x R.
Proof. exact (fun H : type549 A B => @lem339015 A B H lt2 x R). Qed.
Lemma lem339025 {A B : Type'} (x : A) (R : type1413 A B) : term1466 A B x R.
Proof. exact (fun lt2 : type1402 A => @lem339020 A B lt2 x R). Qed.
Lemma lem339030 {A B : Type'} (R : type1413 A B) : term1470 A B R.
Proof. exact (fun x : A => @lem339025 A B x R). Qed.
Lemma lem339035 {A B : Type'} : term1474 A B.
Proof. exact (fun R : type1413 A B => @lem339030 A B R). Qed.
Lemma lem339036 {A B : Type'} : term1473 A B.
Proof. exact (EQ_MP (@lem333004 A B) (@lem339035 A B)). Qed.
Lemma lem339037 {A B : Type'} (R : type1413 A B) : term1910 A B R.
Proof. exact (@lem339036 A B R). Qed.
Lemma lem339038 {A B : Type'} (R : type1413 A B) : (term1910 A B R) = (term1469 A B R).
Proof. exact (eq_refl (term1910 A B R)). Qed.
Lemma lem339039 {A B : Type'} (R : type1413 A B) : term1469 A B R.
Proof. exact (EQ_MP (@lem339038 A B R) (@lem339037 A B R)). Qed.
Lemma lem339040 {A B : Type'} (R : type1413 A B) (x : A) : term1911 A B R x.
Proof. exact (@lem339039 A B R x). Qed.
Lemma lem339041 {A B : Type'} (x : A) (R : type1413 A B) : (term1911 A B R x) = (term1465 A B x R).
Proof. exact (eq_refl (term1911 A B R x)). Qed.
Lemma lem339042 {A B : Type'} (x : A) (R : type1413 A B) : term1465 A B x R.
Proof. exact (EQ_MP (@lem339041 A B x R) (@lem339040 A B R x)). Qed.
Lemma lem339043 {A B : Type'} (x : A) (R : type1413 A B) (lt2 : type1402 A) : term1912 A B x R lt2.
Proof. exact (@lem339042 A B x R lt2). Qed.
Lemma lem339044 {A B : Type'} (lt2 : type1402 A) (x : A) (R : type1413 A B) : (term1912 A B x R lt2) = (term1461 A B lt2 x R).
Proof. exact (eq_refl (term1912 A B x R lt2)). Qed.
Lemma lem339045 {A B : Type'} (lt2 : type1402 A) (x : A) (R : type1413 A B) : term1461 A B lt2 x R.
Proof. exact (EQ_MP (@lem339044 A B lt2 x R) (@lem339043 A B x R lt2)). Qed.
Lemma lem339046 {A B : Type'} (lt2 : type1402 A) (x : A) (R : type1413 A B) (H : type549 A B) : term1913 A B lt2 x R H.
Proof. exact (@lem339045 A B lt2 x R H). Qed.
Lemma lem339047 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) : (term1913 A B lt2 x R H) = (term1457 A B H lt2 x R).
Proof. exact (eq_refl (term1913 A B lt2 x R H)). Qed.
Lemma lem339048 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) : term1457 A B H lt2 x R.
Proof. exact (EQ_MP (@lem339047 A B H lt2 x R) (@lem339046 A B lt2 x R H)). Qed.
Lemma lem339049 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (S' : type1413 A B) : term1914 A B H lt2 x R S'.
Proof. exact (@lem339048 A B H lt2 x R S'). Qed.
Lemma lem339050 {A B : Type'} (S' : type1413 A B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) : (term1914 A B H lt2 x R S') = (term1443 A B S' H lt2 x R).
Proof. exact (eq_refl (term1914 A B H lt2 x R S')). Qed.
Lemma lem339051 {A B : Type'} (S' : type1413 A B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) : term1443 A B S' H lt2 x R.
Proof. exact (EQ_MP (@lem339050 A B S' H lt2 x R) (@lem339049 A B H lt2 x R S')). Qed.
Lemma lem339053 {A B : Type'} (S' : type1413 A B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) : term1443 A B S' H lt2 x R.
Proof. exact (@lem332436 A B S' H lt2 x R (@lem339051 A B S' H lt2 x R)). Qed.
Lemma lem339054 {A B : Type'} (x : A) (R : type1413 A B) (lt2 : type1402 A) (S' : type1413 A B) (H : type549 A B) (h1 : term1 A B lt2 S' H) : term1452 A B S' H lt2 x R.
Proof. exact (@lem339053 A B S' H lt2 x R (@lem322941 A B lt2 S' H h1)). Qed.
Lemma lem339055 {A B : Type'} (x : A) (R : type1413 A B) (lt2 : type1402 A) (S' : type1413 A B) (H : type549 A B) (h1 : term3 A B lt2 R H) (h2 : term1 A B lt2 S' H) : term1450 A B S' H lt2 x R.
Proof. exact (@lem339054 A B x R lt2 S' H h2 (@lem322943 A B lt2 R H h1)). Qed.
Lemma lem339056 {A B : Type'} (x : A) (S' : type1413 A B) (lt2 : type1402 A) (H : type549 A B) (R : type1413 A B) (h1 : term3 A B lt2 R H) (h2 : term1 A B lt2 S' H) (h3 : term5 A B lt2 H R) : term1448 A B S' H lt2 x R.
Proof. exact (@lem339055 A B x R lt2 S' H h1 h2 (@lem322945 A B lt2 H R h3)). Qed.
Lemma lem339057 {A B : Type'} (x : A) (S' : type1413 A B) (lt2 : type1402 A) (H : type549 A B) (R : type1413 A B) (h1 : term1043 A B lt2 x R) (h2 : term3 A B lt2 R H) (h3 : term1 A B lt2 S' H) (h4 : term5 A B lt2 H R) : term1441 A B S' H lt2 x R.
Proof. exact (@lem339056 A B x S' lt2 H R h2 h3 h4 (@lem328664 A B lt2 x R h1)). Qed.
Lemma lem339058 {A B : Type'} (S' : type1413 A B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (h1 : term1043 A B lt2 x R) (h2 : term3 A B lt2 R H) (h3 : term1 A B lt2 S' H) (h4 : term5 A B lt2 H R) (h5 : term1442 A B S' H lt2 x R) : False.
Proof. exact (@lem339057 A B x S' lt2 H R h1 h2 h3 h4 (@lem332420 A B S' H lt2 x R h5)). Qed.
Lemma lem339059 {A B : Type'} (S' : type1413 A B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (h1 : term1043 A B lt2 x R) (h2 : term3 A B lt2 R H) (h3 : term1 A B lt2 S' H) (h4 : term5 A B lt2 H R) (h5 : term1442 A B S' H lt2 x R) : (term1442 A B S' H lt2 x R) = False.
Proof. exact (prop_ext (fun h6 : term1442 A B S' H lt2 x R => @lem339058 A B S' H lt2 x R h1 h2 h3 h4 h5) (fun h6 : False => @lem332420 A B S' H lt2 x R h5)). Qed.
Lemma lem339060 {A B : Type'} (S' : type1413 A B) (H : type549 A B) (lt2 : type1402 A) (x : A) (R : type1413 A B) (h1 : term1043 A B lt2 x R) (h2 : term3 A B lt2 R H) (h3 : term1 A B lt2 S' H) (h4 : term5 A B lt2 H R) (h5 : term1442 A B S' H lt2 x R) : False.
Proof. exact (EQ_MP (@lem339059 A B S' H lt2 x R h1 h2 h3 h4 h5) (@lem332420 A B S' H lt2 x R h5)). Qed.
Lemma lem339061 {A B : Type'} (x : A) (S' : type1413 A B) (lt2 : type1402 A) (H : type549 A B) (R : type1413 A B) (h1 : term1043 A B lt2 x R) (h2 : term3 A B lt2 R H) (h3 : term1 A B lt2 S' H) (h4 : term5 A B lt2 H R) : term1441 A B S' H lt2 x R.
Proof. exact (fun h0 : term1442 A B S' H lt2 x R => @lem339060 A B S' H lt2 x R h1 h2 h3 h4 h0). Qed.
Lemma lem339062 {A B : Type'} (x : A) (S' : type1413 A B) (lt2 : type1402 A) (H : type549 A B) (R : type1413 A B) (h1 : term1043 A B lt2 x R) (h2 : term3 A B lt2 R H) (h3 : term1 A B lt2 S' H) (h4 : term5 A B lt2 H R) : term1440 A B S' H lt2 x R.
Proof. exact (EQ_MP (@lem332419 A B S' H lt2 x R) (@lem339061 A B x S' lt2 H R h1 h2 h3 h4)). Qed.
Lemma lem339063 {A B : Type'} (x : A) (S' : type1413 A B) (lt2 : type1402 A) (H : type549 A B) (R : type1413 A B) (h1 : term71 A B R S') (h2 : term1043 A B lt2 x R) (h3 : term3 A B lt2 R H) (h4 : term1 A B lt2 S' H) (h5 : term5 A B lt2 H R) : term1060 A B H lt2 x R.
Proof. exact (@lem339062 A B x S' lt2 H R h2 h3 h4 h5 (@lem328684 A B R S' h1)). Qed.
Lemma lem339064 {A B : Type'} (x : A) (S' : type1413 A B) (lt2 : type1402 A) (H : type549 A B) (R : type1413 A B) (h1 : term1043 A B lt2 x R) (h2 : term3 A B lt2 R H) (h3 : term1 A B lt2 S' H) (h4 : term5 A B lt2 H R) : (term71 A B R S') = (term1060 A B H lt2 x R).
Proof. exact (prop_ext (fun h5 : term71 A B R S' => @lem339063 A B x S' lt2 H R h5 h1 h2 h3 h4) (fun h5 : term1060 A B H lt2 x R => @lem332415 A B x S' lt2 H R h1 h2 h3 h4)). Qed.
Lemma lem339065 {A B : Type'} (x : A) (S' : type1413 A B) (lt2 : type1402 A) (H : type549 A B) (R : type1413 A B) (h1 : term1043 A B lt2 x R) (h2 : term3 A B lt2 R H) (h3 : term1 A B lt2 S' H) (h4 : term5 A B lt2 H R) : term1060 A B H lt2 x R.
Proof. exact (EQ_MP (@lem339064 A B x S' lt2 H R h1 h2 h3 h4) (@lem332415 A B x S' lt2 H R h1 h2 h3 h4)). Qed.
Lemma lem339066 {A B : Type'} (x : A) (S' : type1413 A B) (lt2 : type1402 A) (H : type549 A B) (R : type1413 A B) (h1 : term4 A B H lt2 R) (h2 : term1043 A B lt2 x R) (h3 : term3 A B lt2 R H) (h4 : term1 A B lt2 S' H) (h5 : term5 A B lt2 H R) : term51 A B R x.
Proof. exact (EQ_MP (@lem328683 A B x H lt2 R h1) (@lem339065 A B x S' lt2 H R h2 h3 h4 h5)). Qed.
Lemma lem339067 {A B : Type'} (x : A) (S' : type1413 A B) (lt2 : type1402 A) (H : type549 A B) (R : type1413 A B) (h1 : term4 A B H lt2 R) (h2 : term1043 A B lt2 x R) (h3 : term3 A B lt2 R H) (h4 : term1 A B lt2 S' H) (h5 : term5 A B lt2 H R) : (term1043 A B lt2 x R) = (term51 A B R x).
Proof. exact (prop_ext (fun h6 : term1043 A B lt2 x R => @lem339066 A B x S' lt2 H R h1 h2 h3 h4 h5) (fun h6 : term51 A B R x => @lem328664 A B lt2 x R h2)). Qed.
Lemma lem339068 {A B : Type'} (x : A) (S' : type1413 A B) (lt2 : type1402 A) (H : type549 A B) (R : type1413 A B) (h1 : term4 A B H lt2 R) (h2 : term1043 A B lt2 x R) (h3 : term3 A B lt2 R H) (h4 : term1 A B lt2 S' H) (h5 : term5 A B lt2 H R) : term51 A B R x.
Proof. exact (EQ_MP (@lem339067 A B x S' lt2 H R h1 h2 h3 h4 h5) (@lem328664 A B lt2 x R h2)). Qed.
Lemma lem339069 {A B : Type'} (x : A) (S' : type1413 A B) (lt2 : type1402 A) (H : type549 A B) (R : type1413 A B) (h1 : term4 A B H lt2 R) (h2 : term3 A B lt2 R H) (h3 : term1 A B lt2 S' H) (h4 : term5 A B lt2 H R) : term1047 A B lt2 R x.
Proof. exact (fun h0 : term1043 A B lt2 x R => @lem339068 A B x S' lt2 H R h1 h0 h2 h3 h4). Qed.
Lemma lem339074 {A B : Type'} (S' : type1413 A B) (lt2 : type1402 A) (H : type549 A B) (R : type1413 A B) (h1 : term4 A B H lt2 R) (h2 : term3 A B lt2 R H) (h3 : term1 A B lt2 S' H) (h4 : term5 A B lt2 H R) : term1051 A B lt2 R.
Proof. exact (fun x : A => @lem339069 A B x S' lt2 H R h1 h2 h3 h4). Qed.
Lemma lem339075 {A B : Type'} (S' : type1413 A B) (lt2 : type1402 A) (H : type549 A B) (R : type1413 A B) (h1 : term4 A B H lt2 R) (h2 : term3 A B lt2 R H) (h3 : term1 A B lt2 S' H) (h4 : term0 A lt2) (h5 : term5 A B lt2 H R) : term6 A B R.
Proof. exact (@lem328663 A B R lt2 h4 (@lem339074 A B S' lt2 H R h1 h2 h3 h5)). Qed.
Lemma lem339076 {A B : Type'} (S' : type1413 A B) (lt2 : type1402 A) (H : type549 A B) (R : type1413 A B) (h1 : term4 A B H lt2 R) (h2 : term3 A B lt2 R H) (h3 : term1 A B lt2 S' H) (h4 : term0 A lt2) (h5 : term5 A B lt2 H R) : (term6 A B R) = (term8 A B H).
Proof. exact (prop_ext (fun h6 : term6 A B R => @lem328547 A B S' lt2 H R h1 h6 h2 h3 h4 h5) (fun h6 : term8 A B H => @lem339075 A B S' lt2 H R h1 h2 h3 h4 h5)). Qed.
Lemma lem339077 {A B : Type'} (S' : type1413 A B) (lt2 : type1402 A) (H : type549 A B) (R : type1413 A B) (h1 : term4 A B H lt2 R) (h2 : term3 A B lt2 R H) (h3 : term1 A B lt2 S' H) (h4 : term0 A lt2) (h5 : term5 A B lt2 H R) : term8 A B H.
Proof. exact (EQ_MP (@lem339076 A B S' lt2 H R h1 h2 h3 h4 h5) (@lem339075 A B S' lt2 H R h1 h2 h3 h4 h5)). Qed.
Lemma lem339078 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (R : type1413 A B) (h1 : term1915 A B H lt2 R) : term2 A B H lt2 R.
Proof. exact (proj2 (@lem322857 A B H lt2 R h1)). Qed.
Lemma lem339079 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (R : type1413 A B) (h1 : term1915 A B H lt2 R) : term3 A B lt2 R H.
Proof. exact (proj1 (@lem322857 A B H lt2 R h1)). Qed.
Lemma lem339080 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (R : type1413 A B) (h1 : term2 A B H lt2 R) : term4 A B H lt2 R.
Proof. exact (proj2 (@lem322942 A B H lt2 R h1)). Qed.
Lemma lem339081 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (R : type1413 A B) (h1 : term2 A B H lt2 R) : term5 A B lt2 H R.
Proof. exact (proj1 (@lem322942 A B H lt2 R h1)). Qed.
Lemma lem339082 {A B : Type'} (S' : type1413 A B) (lt2 : type1402 A) (H : type549 A B) (R : type1413 A B) (h1 : term4 A B H lt2 R) (h2 : term3 A B lt2 R H) (h3 : term1 A B lt2 S' H) (h4 : term0 A lt2) (h5 : term5 A B lt2 H R) : (term4 A B H lt2 R) = (term8 A B H).
Proof. exact (prop_ext (fun h6 : term4 A B H lt2 R => @lem339077 A B S' lt2 H R h1 h2 h3 h4 h5) (fun h6 : term8 A B H => @lem322944 A B H lt2 R h1)). Qed.
Lemma lem339083 {A B : Type'} (S' : type1413 A B) (lt2 : type1402 A) (H : type549 A B) (R : type1413 A B) (h1 : term4 A B H lt2 R) (h2 : term3 A B lt2 R H) (h3 : term1 A B lt2 S' H) (h4 : term0 A lt2) (h5 : term5 A B lt2 H R) : term8 A B H.
Proof. exact (EQ_MP (@lem339082 A B S' lt2 H R h1 h2 h3 h4 h5) (@lem322944 A B H lt2 R h1)). Qed.
Lemma lem339084 {A B : Type'} (S' : type1413 A B) (lt2 : type1402 A) (H : type549 A B) (R : type1413 A B) (h1 : term4 A B H lt2 R) (h2 : term3 A B lt2 R H) (h3 : term1 A B lt2 S' H) (h4 : term0 A lt2) (h5 : term5 A B lt2 H R) : (term5 A B lt2 H R) = (term8 A B H).
Proof. exact (prop_ext (fun h6 : term5 A B lt2 H R => @lem339083 A B S' lt2 H R h1 h2 h3 h4 h5) (fun h6 : term8 A B H => @lem322945 A B lt2 H R h5)). Qed.
Lemma lem339085 {A B : Type'} (S' : type1413 A B) (lt2 : type1402 A) (H : type549 A B) (R : type1413 A B) (h1 : term4 A B H lt2 R) (h2 : term3 A B lt2 R H) (h3 : term1 A B lt2 S' H) (h4 : term0 A lt2) (h5 : term5 A B lt2 H R) : term8 A B H.
Proof. exact (EQ_MP (@lem339084 A B S' lt2 H R h1 h2 h3 h4 h5) (@lem322945 A B lt2 H R h5)). Qed.
Lemma lem339086 {A B : Type'} (S' : type1413 A B) (H : type549 A B) (lt2 : type1402 A) (R : type1413 A B) (h1 : term3 A B lt2 R H) (h2 : term1 A B lt2 S' H) (h3 : term0 A lt2) (h4 : term5 A B lt2 H R) (h5 : term2 A B H lt2 R) : (term4 A B H lt2 R) = (term8 A B H).
Proof. exact (prop_ext (fun h6 : term4 A B H lt2 R => @lem339085 A B S' lt2 H R h6 h1 h2 h3 h4) (fun h6 : term8 A B H => @lem339080 A B H lt2 R h5)). Qed.
Lemma lem339087 {A B : Type'} (S' : type1413 A B) (H : type549 A B) (lt2 : type1402 A) (R : type1413 A B) (h1 : term3 A B lt2 R H) (h2 : term1 A B lt2 S' H) (h3 : term0 A lt2) (h4 : term5 A B lt2 H R) (h5 : term2 A B H lt2 R) : term8 A B H.
Proof. exact (EQ_MP (@lem339086 A B S' H lt2 R h1 h2 h3 h4 h5) (@lem339080 A B H lt2 R h5)). Qed.
Lemma lem339088 {A B : Type'} (S' : type1413 A B) (H : type549 A B) (lt2 : type1402 A) (R : type1413 A B) (h1 : term3 A B lt2 R H) (h2 : term1 A B lt2 S' H) (h3 : term0 A lt2) (h4 : term2 A B H lt2 R) : (term5 A B lt2 H R) = (term8 A B H).
Proof. exact (prop_ext (fun h5 : term5 A B lt2 H R => @lem339087 A B S' H lt2 R h1 h2 h3 h5 h4) (fun h5 : term8 A B H => @lem339081 A B H lt2 R h4)). Qed.
Lemma lem339089 {A B : Type'} (S' : type1413 A B) (H : type549 A B) (lt2 : type1402 A) (R : type1413 A B) (h1 : term3 A B lt2 R H) (h2 : term1 A B lt2 S' H) (h3 : term0 A lt2) (h4 : term2 A B H lt2 R) : term8 A B H.
Proof. exact (EQ_MP (@lem339088 A B S' H lt2 R h1 h2 h3 h4) (@lem339081 A B H lt2 R h4)). Qed.
Lemma lem339090 {A B : Type'} (S' : type1413 A B) (H : type549 A B) (lt2 : type1402 A) (R : type1413 A B) (h1 : term3 A B lt2 R H) (h2 : term1 A B lt2 S' H) (h3 : term0 A lt2) (h4 : term2 A B H lt2 R) : (term3 A B lt2 R H) = (term8 A B H).
Proof. exact (prop_ext (fun h5 : term3 A B lt2 R H => @lem339089 A B S' H lt2 R h1 h2 h3 h4) (fun h5 : term8 A B H => @lem322943 A B lt2 R H h1)). Qed.
Lemma lem339091 {A B : Type'} (S' : type1413 A B) (H : type549 A B) (lt2 : type1402 A) (R : type1413 A B) (h1 : term3 A B lt2 R H) (h2 : term1 A B lt2 S' H) (h3 : term0 A lt2) (h4 : term2 A B H lt2 R) : term8 A B H.
Proof. exact (EQ_MP (@lem339090 A B S' H lt2 R h1 h2 h3 h4) (@lem322943 A B lt2 R H h1)). Qed.
Lemma lem339092 {A B : Type'} (S' : type1413 A B) (H : type549 A B) (lt2 : type1402 A) (R : type1413 A B) (h1 : term3 A B lt2 R H) (h2 : term1 A B lt2 S' H) (h3 : term0 A lt2) (h4 : term1915 A B H lt2 R) : (term2 A B H lt2 R) = (term8 A B H).
Proof. exact (prop_ext (fun h5 : term2 A B H lt2 R => @lem339091 A B S' H lt2 R h1 h2 h3 h5) (fun h5 : term8 A B H => @lem339078 A B H lt2 R h4)). Qed.
Lemma lem339093 {A B : Type'} (S' : type1413 A B) (H : type549 A B) (lt2 : type1402 A) (R : type1413 A B) (h1 : term3 A B lt2 R H) (h2 : term1 A B lt2 S' H) (h3 : term0 A lt2) (h4 : term1915 A B H lt2 R) : term8 A B H.
Proof. exact (EQ_MP (@lem339092 A B S' H lt2 R h1 h2 h3 h4) (@lem339078 A B H lt2 R h4)). Qed.
Lemma lem339094 {A B : Type'} (S' : type1413 A B) (H : type549 A B) (lt2 : type1402 A) (R : type1413 A B) (h1 : term1 A B lt2 S' H) (h2 : term0 A lt2) (h3 : term1915 A B H lt2 R) : (term3 A B lt2 R H) = (term8 A B H).
Proof. exact (prop_ext (fun h4 : term3 A B lt2 R H => @lem339093 A B S' H lt2 R h4 h1 h2 h3) (fun h4 : term8 A B H => @lem339079 A B H lt2 R h3)). Qed.
Lemma lem339095 {A B : Type'} (S' : type1413 A B) (H : type549 A B) (lt2 : type1402 A) (R : type1413 A B) (h1 : term1 A B lt2 S' H) (h2 : term0 A lt2) (h3 : term1915 A B H lt2 R) : term8 A B H.
Proof. exact (EQ_MP (@lem339094 A B S' H lt2 R h1 h2 h3) (@lem339079 A B H lt2 R h3)). Qed.
Lemma lem339096 {A B : Type'} (S' : type1413 A B) (H : type549 A B) (lt2 : type1402 A) (h1 : term1 A B lt2 S' H) (h2 : term0 A lt2) : term8 A B H.
Proof. exact (ex_elim (@lem322846 A B H lt2) (fun R : type1413 A B => fun h0 : term1916 A B H lt2 R => @lem339095 A B S' H lt2 R h1 h2 h0)). Qed.
Lemma lem339097 {A B : Type'} (S' : type1413 A B) (H : type549 A B) (lt2 : type1402 A) (h1 : term1 A B lt2 S' H) (h2 : term0 A lt2) : (term1 A B lt2 S' H) = (term8 A B H).
Proof. exact (prop_ext (fun h3 : term1 A B lt2 S' H => @lem339096 A B S' H lt2 h1 h2) (fun h3 : term8 A B H => @lem322941 A B lt2 S' H h1)). Qed.
Lemma lem339098 {A B : Type'} (S' : type1413 A B) (H : type549 A B) (lt2 : type1402 A) (h1 : term1 A B lt2 S' H) (h2 : term0 A lt2) : term8 A B H.
Proof. exact (EQ_MP (@lem339097 A B S' H lt2 h1 h2) (@lem322941 A B lt2 S' H h1)). Qed.
Lemma lem339099 {A B : Type'} (S' : type1413 A B) (H : type549 A B) (lt2 : type1402 A) (h1 : term0 A lt2) : term1917 A B lt2 S' H.
Proof. exact (fun h0 : term1 A B lt2 S' H => @lem339098 A B S' H lt2 h0 h1). Qed.
Lemma lem339104 {A B : Type'} (H : type549 A B) (lt2 : type1402 A) (h1 : term0 A lt2) : term1918 A B lt2 H.
Proof. exact (fun S' : type1413 A B => @lem339099 A B S' H lt2 h1). Qed.
Lemma lem339109 {A B : Type'} (lt2 : type1402 A) (h1 : term0 A lt2) : term1919 A B lt2.
Proof. exact (fun H : type549 A B => @lem339104 A B H lt2 h1). Qed.
Lemma lem339110 {A B : Type'} (lt2 : type1402 A) (h1 : term0 A lt2) : (term0 A lt2) = (term1919 A B lt2).
Proof. exact (prop_ext (fun h2 : term0 A lt2 => @lem339109 A B lt2 h1) (fun h2 : term1919 A B lt2 => @lem322940 A lt2 h1)). Qed.
Lemma lem339111 {A B : Type'} (lt2 : type1402 A) (h1 : term0 A lt2) : term1919 A B lt2.
Proof. exact (EQ_MP (@lem339110 A B lt2 h1) (@lem322940 A lt2 h1)). Qed.
Lemma lem339112 {A B : Type'} (lt2 : type1402 A) : term1920 A B lt2.
Proof. exact (fun h0 : term0 A lt2 => @lem339111 A B lt2 h0). Qed.
