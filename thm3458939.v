Require Import coq.
Require Import theory_hol.
Require Import hol_types.
Require Import hol_terms.
Require Import hol_axioms.
Require Import hol_type_abbrevs.
Require Import thm3458939_term_abbrevs.
Require Import thm0_spec.
Require Import thm10578_spec.
Require Import thm10597_spec.
Require Import thm16474_spec.
Require Import thm16506_spec.
Require Import thm16507_spec.
Require Import thm17045_spec.
Require Import thm17646_spec.
Require Import thm18394_spec.
Require Import thm18904_spec.
Require Import thm18905_spec.
Require Import thm18916_spec.
Require Import thm18917_spec.
Require Import thm18922_spec.
Require Import thm18923_spec.
Require Import thm18928_spec.
Require Import thm18929_spec.
Require Import thm19012_spec.
Require Import thm19013_spec.
Require Import thm20904_spec.
Require Import thm21007_spec.
Require Import thm21021_spec.
Require Import thm21114_spec.
Require Import thm21182_spec.
Require Import thm21386_spec.
Require Import thm3453857_spec.
Require Import thm3454374_spec.
Lemma lem3457133 (p : Prop) : p = (term0 p).
Proof. exact (EQ_MP (@lem10578 p) (@lem10597 p)). Qed.
Lemma lem3457134 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (f : type1524 _89646 _89670 _89671 _89672) : (term1 _89646 _89670 _89671 _89672 P f) = (term2 _89646 _89670 _89671 _89672 P f).
Proof. exact (@lem3457133 (term1 _89646 _89670 _89671 _89672 P f)). Qed.
Lemma lem3457135 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (f : type1524 _89646 _89670 _89671 _89672) : (term2 _89646 _89670 _89671 _89672 P f) = (term1 _89646 _89670 _89671 _89672 P f).
Proof. exact (SYM (@lem3457134 _89646 _89670 _89671 _89672 P f)). Qed.
Lemma lem3457136 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (f : type1524 _89646 _89670 _89671 _89672) (h1 : term3 _89646 _89670 _89671 _89672 P f) : term3 _89646 _89670 _89671 _89672 P f.
Proof. exact (h1). Qed.
Lemma lem3457139 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (f : type1524 _89646 _89670 _89671 _89672) (h1 : term2 _89646 _89670 _89671 _89672 P f) : term2 _89646 _89670 _89671 _89672 P f.
Proof. exact (h1). Qed.
Lemma lem3457140 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (f : type1524 _89646 _89670 _89671 _89672) : term4 _89646 _89670 _89671 _89672 P f.
Proof. exact (fun h0 : term2 _89646 _89670 _89671 _89672 P f => @lem3457139 _89646 _89670 _89671 _89672 P f h0). Qed.
Lemma lem3457141 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (f : type1524 _89646 _89670 _89671 _89672) (h1 : term4 _89646 _89670 _89671 _89672 P f) : term4 _89646 _89670 _89671 _89672 P f.
Proof. exact (h1). Qed.
Lemma lem3457142 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (f : type1524 _89646 _89670 _89671 _89672) (h1 : term2 _89646 _89670 _89671 _89672 P f) : term2 _89646 _89670 _89671 _89672 P f.
Proof. exact (h1). Qed.
Lemma lem3457143 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (f : type1524 _89646 _89670 _89671 _89672) (h1 : term2 _89646 _89670 _89671 _89672 P f) (h2 : term4 _89646 _89670 _89671 _89672 P f) : term2 _89646 _89670 _89671 _89672 P f.
Proof. exact (@lem3457141 _89646 _89670 _89671 _89672 P f h2 (@lem3457142 _89646 _89670 _89671 _89672 P f h1)). Qed.
Lemma lem3457144 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (f : type1524 _89646 _89670 _89671 _89672) (h1 : term2 _89646 _89670 _89671 _89672 P f) : term5 _89646 _89670 _89671 _89672 P f.
Proof. exact (fun h0 : term4 _89646 _89670 _89671 _89672 P f => @lem3457143 _89646 _89670 _89671 _89672 P f h1 h0). Qed.
Lemma lem3457145 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (f : type1524 _89646 _89670 _89671 _89672) (h1 : term4 _89646 _89670 _89671 _89672 P f) : term4 _89646 _89670 _89671 _89672 P f.
Proof. exact (h1). Qed.
Lemma lem3457146 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (f : type1524 _89646 _89670 _89671 _89672) (h1 : term2 _89646 _89670 _89671 _89672 P f) (h2 : term4 _89646 _89670 _89671 _89672 P f) : term2 _89646 _89670 _89671 _89672 P f.
Proof. exact (@lem3457144 _89646 _89670 _89671 _89672 P f h1 (@lem3457145 _89646 _89670 _89671 _89672 P f h2)). Qed.
Lemma lem3457147 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (f : type1524 _89646 _89670 _89671 _89672) (h1 : term4 _89646 _89670 _89671 _89672 P f) : term4 _89646 _89670 _89671 _89672 P f.
Proof. exact (fun h0 : term2 _89646 _89670 _89671 _89672 P f => @lem3457146 _89646 _89670 _89671 _89672 P f h0 h1). Qed.
Lemma lem3457148 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (f : type1524 _89646 _89670 _89671 _89672) : term6 _89646 _89670 _89671 _89672 P f.
Proof. exact (fun h0 : term4 _89646 _89670 _89671 _89672 P f => @lem3457147 _89646 _89670 _89671 _89672 P f h0). Qed.
Lemma lem3457151 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (f : type1524 _89646 _89670 _89671 _89672) : term4 _89646 _89670 _89671 _89672 P f.
Proof. exact (@lem3457148 _89646 _89670 _89671 _89672 P f (@lem3457140 _89646 _89670 _89671 _89672 P f)). Qed.
Lemma lem3457152 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (f : type1524 _89646 _89670 _89671 _89672) : term4 _89646 _89670 _89671 _89672 P f.
Proof. exact (@lem3457151 _89646 _89670 _89671 _89672 P f). Qed.
Lemma lem3457162 (t : Prop) : (t -> False) = (~ t).
Proof. exact (proj2 (@lem16474 t)). Qed.
Lemma lem3457163 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (f : type1524 _89646 _89670 _89671 _89672) : (term2 _89646 _89670 _89671 _89672 P f) = (term7 _89646 _89670 _89671 _89672 P f).
Proof. exact (@lem3457162 (term3 _89646 _89670 _89671 _89672 P f)). Qed.
Lemma lem3457165 (t : Prop) : (term8 t) = t.
Proof. exact (EQ_MP (@lem16507 t) (@lem16506 t)). Qed.
Lemma lem3457166 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (f : type1524 _89646 _89670 _89671 _89672) : (term7 _89646 _89670 _89671 _89672 P f) = (term1 _89646 _89670 _89671 _89672 P f).
Proof. exact (@lem3457165 (term1 _89646 _89670 _89671 _89672 P f)). Qed.
Lemma lem3457171 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (f : type1524 _89646 _89670 _89671 _89672) : (term2 _89646 _89670 _89671 _89672 P f) = (term1 _89646 _89670 _89671 _89672 P f).
Proof. exact (TRANS (@lem3457163 _89646 _89670 _89671 _89672 P f) (@lem3457166 _89646 _89670 _89671 _89672 P f)). Qed.
Lemma lem3457338 {_89646 _89670 _89671 _89672 : Type'} (f : type1524 _89646 _89670 _89671 _89672) : (term9 _89646 _89670 _89671 _89672 f) = (term10 _89646 _89670 _89671 _89672 f).
Proof. exact (fun_ext (fun P : type1517 _89670 _89671 _89672 => @lem3457171 _89646 _89670 _89671 _89672 P f)). Qed.
Lemma lem3457339 {_89670 _89671 _89672 : Type'} : (@all (_89672 -> _89671 -> _89670 -> Prop)) = (@all (_89672 -> _89671 -> _89670 -> Prop)).
Proof. exact (eq_refl (@all (_89672 -> _89671 -> _89670 -> Prop))). Qed.
Lemma lem3457340 {_89646 _89670 _89671 _89672 : Type'} (f : type1524 _89646 _89670 _89671 _89672) : (term11 _89646 _89670 _89671 _89672 f) = (term12 _89646 _89670 _89671 _89672 f).
Proof. exact (MK_COMB (@lem3457339 _89670 _89671 _89672) (@lem3457338 _89646 _89670 _89671 _89672 f)). Qed.
Lemma lem3457345 {_89646 _89670 _89671 _89672 : Type'} : (term13 _89646 _89670 _89671 _89672) = (term14 _89646 _89670 _89671 _89672).
Proof. exact (fun_ext (fun f : type1524 _89646 _89670 _89671 _89672 => @lem3457340 _89646 _89670 _89671 _89672 f)). Qed.
Lemma lem3457346 {_89646 _89670 _89671 _89672 : Type'} : (@all (_89672 -> _89671 -> _89670 -> _89646 -> Prop)) = (@all (_89672 -> _89671 -> _89670 -> _89646 -> Prop)).
Proof. exact (eq_refl (@all (_89672 -> _89671 -> _89670 -> _89646 -> Prop))). Qed.
Lemma lem3457355 {_89646 _89670 _89671 _89672 : Type'} : (term15 _89646 _89670 _89671 _89672) = (term16 _89646 _89670 _89671 _89672).
Proof. exact (MK_COMB (@lem3457346 _89646 _89670 _89671 _89672) (@lem3457345 _89646 _89670 _89671 _89672)). Qed.
Lemma lem3457360 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) (x' : _89672) (y : _89671) (z : _89670) : (term17 _89646 _89670 _89671 _89672 P x f x' y z) = (term17 _89646 _89670 _89671 _89672 P x f x' y z).
Proof. exact (eq_refl (term17 _89646 _89670 _89671 _89672 P x f x' y z)). Qed.
Lemma lem3457361 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) (x' : _89672) (y : _89671) : (term18 _89646 _89670 _89671 _89672 P x f x' y) = (term18 _89646 _89670 _89671 _89672 P x f x' y).
Proof. exact (fun_ext (fun z : _89670 => @lem3457360 _89646 _89670 _89671 _89672 P x f x' y z)). Qed.
Lemma lem3457362 {_89670 : Type'} : (@ex _89670) = (@ex _89670).
Proof. exact (eq_refl (@ex _89670)). Qed.
Lemma lem3457363 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) (x' : _89672) (y : _89671) : (term19 _89646 _89670 _89671 _89672 P x f x' y) = (term19 _89646 _89670 _89671 _89672 P x f x' y).
Proof. exact (MK_COMB (@lem3457362 _89670) (@lem3457361 _89646 _89670 _89671 _89672 P x f x' y)). Qed.
Lemma lem3457364 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) (x' : _89672) : (term20 _89646 _89670 _89671 _89672 P x f x') = (term20 _89646 _89670 _89671 _89672 P x f x').
Proof. exact (fun_ext (fun y : _89671 => @lem3457363 _89646 _89670 _89671 _89672 P x f x' y)). Qed.
Lemma lem3457365 {_89671 : Type'} : (@ex _89671) = (@ex _89671).
Proof. exact (eq_refl (@ex _89671)). Qed.
Lemma lem3457366 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) (x' : _89672) : (term21 _89646 _89670 _89671 _89672 P x f x') = (term21 _89646 _89670 _89671 _89672 P x f x').
Proof. exact (MK_COMB (@lem3457365 _89671) (@lem3457364 _89646 _89670 _89671 _89672 P x f x')). Qed.
Lemma lem3457367 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) : (term22 _89646 _89670 _89671 _89672 P x f) = (term22 _89646 _89670 _89671 _89672 P x f).
Proof. exact (fun_ext (fun x' : _89672 => @lem3457366 _89646 _89670 _89671 _89672 P x f x')). Qed.
Lemma lem3457368 {_89672 : Type'} : (@ex _89672) = (@ex _89672).
Proof. exact (eq_refl (@ex _89672)). Qed.
Lemma lem3457369 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) : (term23 _89646 _89670 _89671 _89672 P x f) = (term23 _89646 _89670 _89671 _89672 P x f).
Proof. exact (MK_COMB (@lem3457368 _89672) (@lem3457367 _89646 _89670 _89671 _89672 P x f)). Qed.
Lemma lem3457370 {_89646 : Type'} (x : _89646) (t : _89646 -> Prop) : (@IN _89646 x t) = (@IN _89646 x t).
Proof. exact (eq_refl (@IN _89646 x t)). Qed.
Lemma lem3457375 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (t : _89646 -> Prop) (f : type1524 _89646 _89670 _89671 _89672) (x : _89672) (y : _89671) (z : _89670) : (term24 _89646 _89670 _89671 _89672 P t f x y z) = (term24 _89646 _89670 _89671 _89672 P t f x y z).
Proof. exact (eq_refl (term24 _89646 _89670 _89671 _89672 P t f x y z)). Qed.
Lemma lem3457376 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (t : _89646 -> Prop) (f : type1524 _89646 _89670 _89671 _89672) (x : _89672) (y : _89671) : (term25 _89646 _89670 _89671 _89672 P t f x y) = (term25 _89646 _89670 _89671 _89672 P t f x y).
Proof. exact (fun_ext (fun z : _89670 => @lem3457375 _89646 _89670 _89671 _89672 P t f x y z)). Qed.
Lemma lem3457377 {_89670 : Type'} : (@ex _89670) = (@ex _89670).
Proof. exact (eq_refl (@ex _89670)). Qed.
Lemma lem3457378 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (t : _89646 -> Prop) (f : type1524 _89646 _89670 _89671 _89672) (x : _89672) (y : _89671) : (term26 _89646 _89670 _89671 _89672 P t f x y) = (term26 _89646 _89670 _89671 _89672 P t f x y).
Proof. exact (MK_COMB (@lem3457377 _89670) (@lem3457376 _89646 _89670 _89671 _89672 P t f x y)). Qed.
Lemma lem3457379 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (t : _89646 -> Prop) (f : type1524 _89646 _89670 _89671 _89672) (x : _89672) : (term27 _89646 _89670 _89671 _89672 P t f x) = (term27 _89646 _89670 _89671 _89672 P t f x).
Proof. exact (fun_ext (fun y : _89671 => @lem3457378 _89646 _89670 _89671 _89672 P t f x y)). Qed.
Lemma lem3457380 {_89671 : Type'} : (@ex _89671) = (@ex _89671).
Proof. exact (eq_refl (@ex _89671)). Qed.
Lemma lem3457381 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (t : _89646 -> Prop) (f : type1524 _89646 _89670 _89671 _89672) (x : _89672) : (term28 _89646 _89670 _89671 _89672 P t f x) = (term28 _89646 _89670 _89671 _89672 P t f x).
Proof. exact (MK_COMB (@lem3457380 _89671) (@lem3457379 _89646 _89670 _89671 _89672 P t f x)). Qed.
Lemma lem3457382 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (t : _89646 -> Prop) (f : type1524 _89646 _89670 _89671 _89672) : (term29 _89646 _89670 _89671 _89672 P t f) = (term29 _89646 _89670 _89671 _89672 P t f).
Proof. exact (fun_ext (fun x : _89672 => @lem3457381 _89646 _89670 _89671 _89672 P t f x)). Qed.
Lemma lem3457383 {_89672 : Type'} : (@ex _89672) = (@ex _89672).
Proof. exact (eq_refl (@ex _89672)). Qed.
Lemma lem3457384 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (t : _89646 -> Prop) (f : type1524 _89646 _89670 _89671 _89672) : (term30 _89646 _89670 _89671 _89672 P t f) = (term30 _89646 _89670 _89671 _89672 P t f).
Proof. exact (MK_COMB (@lem3457383 _89672) (@lem3457382 _89646 _89670 _89671 _89672 P t f)). Qed.
Lemma lem3457385 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3457386 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (t : _89646 -> Prop) (f : type1524 _89646 _89670 _89671 _89672) : (term31 _89646 _89670 _89671 _89672 P t f) = (term31 _89646 _89670 _89671 _89672 P t f).
Proof. exact (MK_COMB (@lem3457385) (@lem3457384 _89646 _89670 _89671 _89672 P t f)). Qed.
Lemma lem3457387 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (f : type1524 _89646 _89670 _89671 _89672) (x : _89646) (t : _89646 -> Prop) : (term32 _89646 _89670 _89671 _89672 P f x t) = (term32 _89646 _89670 _89671 _89672 P f x t).
Proof. exact (MK_COMB (@lem3457386 _89646 _89670 _89671 _89672 P t f) (@lem3457370 _89646 x t)). Qed.
Lemma lem3457388 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (f : type1524 _89646 _89670 _89671 _89672) (x : _89646) : (term33 _89646 _89670 _89671 _89672 P f x) = (term33 _89646 _89670 _89671 _89672 P f x).
Proof. exact (fun_ext (fun t : _89646 -> Prop => @lem3457387 _89646 _89670 _89671 _89672 P f x t)). Qed.
Lemma lem3457389 {_89646 : Type'} : (@ex (_89646 -> Prop)) = (@ex (_89646 -> Prop)).
Proof. exact (eq_refl (@ex (_89646 -> Prop))). Qed.
Lemma lem3457390 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (f : type1524 _89646 _89670 _89671 _89672) (x : _89646) : (term34 _89646 _89670 _89671 _89672 P f x) = (term34 _89646 _89670 _89671 _89672 P f x).
Proof. exact (MK_COMB (@lem3457389 _89646) (@lem3457388 _89646 _89670 _89671 _89672 P f x)). Qed.
Lemma lem3457391 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3457392 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (f : type1524 _89646 _89670 _89671 _89672) (x : _89646) : (term35 _89646 _89670 _89671 _89672 P f x) = (term35 _89646 _89670 _89671 _89672 P f x).
Proof. exact (MK_COMB (@lem3457391) (@lem3457390 _89646 _89670 _89671 _89672 P f x)). Qed.
Lemma lem3457393 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) : ((term34 _89646 _89670 _89671 _89672 P f x) = (term23 _89646 _89670 _89671 _89672 P x f)) = ((term34 _89646 _89670 _89671 _89672 P f x) = (term23 _89646 _89670 _89671 _89672 P x f)).
Proof. exact (MK_COMB (@lem3457392 _89646 _89670 _89671 _89672 P f x) (@lem3457369 _89646 _89670 _89671 _89672 P x f)). Qed.
Lemma lem3457394 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (f : type1524 _89646 _89670 _89671 _89672) : (term36 _89646 _89670 _89671 _89672 P f) = (term36 _89646 _89670 _89671 _89672 P f).
Proof. exact (fun_ext (fun x : _89646 => @lem3457393 _89646 _89670 _89671 _89672 P x f)). Qed.
Lemma lem3457395 {_89646 : Type'} : (@all _89646) = (@all _89646).
Proof. exact (eq_refl (@all _89646)). Qed.
Lemma lem3457396 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (f : type1524 _89646 _89670 _89671 _89672) : (term1 _89646 _89670 _89671 _89672 P f) = (term1 _89646 _89670 _89671 _89672 P f).
Proof. exact (MK_COMB (@lem3457395 _89646) (@lem3457394 _89646 _89670 _89671 _89672 P f)). Qed.
Lemma lem3457397 {_89646 _89670 _89671 _89672 : Type'} (f : type1524 _89646 _89670 _89671 _89672) : (term10 _89646 _89670 _89671 _89672 f) = (term10 _89646 _89670 _89671 _89672 f).
Proof. exact (fun_ext (fun P : type1517 _89670 _89671 _89672 => @lem3457396 _89646 _89670 _89671 _89672 P f)). Qed.
Lemma lem3457398 {_89670 _89671 _89672 : Type'} : (@all (_89672 -> _89671 -> _89670 -> Prop)) = (@all (_89672 -> _89671 -> _89670 -> Prop)).
Proof. exact (eq_refl (@all (_89672 -> _89671 -> _89670 -> Prop))). Qed.
Lemma lem3457399 {_89646 _89670 _89671 _89672 : Type'} (f : type1524 _89646 _89670 _89671 _89672) : (term12 _89646 _89670 _89671 _89672 f) = (term12 _89646 _89670 _89671 _89672 f).
Proof. exact (MK_COMB (@lem3457398 _89670 _89671 _89672) (@lem3457397 _89646 _89670 _89671 _89672 f)). Qed.
Lemma lem3457400 {_89646 _89670 _89671 _89672 : Type'} : (term14 _89646 _89670 _89671 _89672) = (term14 _89646 _89670 _89671 _89672).
Proof. exact (fun_ext (fun f : type1524 _89646 _89670 _89671 _89672 => @lem3457399 _89646 _89670 _89671 _89672 f)). Qed.
Lemma lem3457401 {_89646 _89670 _89671 _89672 : Type'} : (@all (_89672 -> _89671 -> _89670 -> _89646 -> Prop)) = (@all (_89672 -> _89671 -> _89670 -> _89646 -> Prop)).
Proof. exact (eq_refl (@all (_89672 -> _89671 -> _89670 -> _89646 -> Prop))). Qed.
Lemma lem3457402 {_89646 _89670 _89671 _89672 : Type'} : (term16 _89646 _89670 _89671 _89672) = (term16 _89646 _89670 _89671 _89672).
Proof. exact (MK_COMB (@lem3457401 _89646 _89670 _89671 _89672) (@lem3457400 _89646 _89670 _89671 _89672)). Qed.
Lemma lem3457471 {_89646 _89670 _89671 _89672 : Type'} : (term15 _89646 _89670 _89671 _89672) = (term16 _89646 _89670 _89671 _89672).
Proof. exact (TRANS (@lem3457355 _89646 _89670 _89671 _89672) (@lem3457402 _89646 _89670 _89671 _89672)). Qed.
Lemma lem3457472 {_89646 _89670 _89671 _89672 : Type'} : (term16 _89646 _89670 _89671 _89672) = (term15 _89646 _89670 _89671 _89672).
Proof. exact (SYM (@lem3457471 _89646 _89670 _89671 _89672)). Qed.
Lemma lem3457474 (p : Prop) : p = (term0 p).
Proof. exact (EQ_MP (@lem10578 p) (@lem10597 p)). Qed.
Lemma lem3457475 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) : ((term34 _89646 _89670 _89671 _89672 P f x) = (term23 _89646 _89670 _89671 _89672 P x f)) = (term37 _89646 _89670 _89671 _89672 P x f).
Proof. exact (@lem3457474 ((term34 _89646 _89670 _89671 _89672 P f x) = (term23 _89646 _89670 _89671 _89672 P x f))). Qed.
Lemma lem3457476 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) : (term37 _89646 _89670 _89671 _89672 P x f) = ((term34 _89646 _89670 _89671 _89672 P f x) = (term23 _89646 _89670 _89671 _89672 P x f)).
Proof. exact (SYM (@lem3457475 _89646 _89670 _89671 _89672 P x f)). Qed.
Lemma lem3457477 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) (h1 : term38 _89646 _89670 _89671 _89672 P x f) : term38 _89646 _89670 _89671 _89672 P x f.
Proof. exact (h1). Qed.
Lemma lem3457486 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (t : _89646 -> Prop) (f : type1524 _89646 _89670 _89671 _89672) (x : _89672) (y : _89671) (z : _89670) : (term39 _89646 _89670 _89671 _89672 P t f x y z) = (term40 _89646 _89670 _89671 _89672 P t f x y z).
Proof. exact (@lem17045 (P x y z) (t = (f x y z))). Qed.
Lemma lem3457489 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (t : _89646 -> Prop) (f : type1524 _89646 _89670 _89671 _89672) (x : _89672) (y : _89671) (z : _89670) : (term24 _89646 _89670 _89671 _89672 P t f x y z) = (term24 _89646 _89670 _89671 _89672 P t f x y z).
Proof. exact (eq_refl (term24 _89646 _89670 _89671 _89672 P t f x y z)). Qed.
Lemma lem3457490 {_89670 : Type'} (P : _89670 -> Prop) : (term41 _89670 P) = (term42 _89670 P).
Proof. exact (@lem18394 _89670 P). Qed.
Lemma lem3457491 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (t : _89646 -> Prop) (f : type1524 _89646 _89670 _89671 _89672) (x : _89672) (y : _89671) : (term43 _89646 _89670 _89671 _89672 P t f x y) = (term44 _89646 _89670 _89671 _89672 P t f x y).
Proof. exact (@lem3457490 _89670 (term25 _89646 _89670 _89671 _89672 P t f x y)). Qed.
Lemma lem3457492 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (t : _89646 -> Prop) (f : type1524 _89646 _89670 _89671 _89672) (x : _89672) (y : _89671) (z : _89670) : (term45 _89646 _89670 _89671 _89672 P t f x y z) = (term24 _89646 _89670 _89671 _89672 P t f x y z).
Proof. exact (eq_refl (term45 _89646 _89670 _89671 _89672 P t f x y z)). Qed.
Lemma lem3457493 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem3457494 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (t : _89646 -> Prop) (f : type1524 _89646 _89670 _89671 _89672) (x : _89672) (y : _89671) (z : _89670) : (term46 _89646 _89670 _89671 _89672 P t f x y z) = (term39 _89646 _89670 _89671 _89672 P t f x y z).
Proof. exact (MK_COMB (@lem3457493) (@lem3457492 _89646 _89670 _89671 _89672 P t f x y z)). Qed.
Lemma lem3457495 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (t : _89646 -> Prop) (f : type1524 _89646 _89670 _89671 _89672) (x : _89672) (y : _89671) (z : _89670) : (term46 _89646 _89670 _89671 _89672 P t f x y z) = (term40 _89646 _89670 _89671 _89672 P t f x y z).
Proof. exact (TRANS (@lem3457494 _89646 _89670 _89671 _89672 P t f x y z) (@lem3457486 _89646 _89670 _89671 _89672 P t f x y z)). Qed.
Lemma lem3457496 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (t : _89646 -> Prop) (f : type1524 _89646 _89670 _89671 _89672) (x : _89672) (y : _89671) : (term47 _89646 _89670 _89671 _89672 P t f x y) = (term48 _89646 _89670 _89671 _89672 P t f x y).
Proof. exact (fun_ext (fun z : _89670 => @lem3457495 _89646 _89670 _89671 _89672 P t f x y z)). Qed.
Lemma lem3457497 {_89670 : Type'} : (@all _89670) = (@all _89670).
Proof. exact (eq_refl (@all _89670)). Qed.
Lemma lem3457498 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (t : _89646 -> Prop) (f : type1524 _89646 _89670 _89671 _89672) (x : _89672) (y : _89671) : (term44 _89646 _89670 _89671 _89672 P t f x y) = (term49 _89646 _89670 _89671 _89672 P t f x y).
Proof. exact (MK_COMB (@lem3457497 _89670) (@lem3457496 _89646 _89670 _89671 _89672 P t f x y)). Qed.
Lemma lem3457499 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (t : _89646 -> Prop) (f : type1524 _89646 _89670 _89671 _89672) (x : _89672) (y : _89671) : (term43 _89646 _89670 _89671 _89672 P t f x y) = (term49 _89646 _89670 _89671 _89672 P t f x y).
Proof. exact (TRANS (@lem3457491 _89646 _89670 _89671 _89672 P t f x y) (@lem3457498 _89646 _89670 _89671 _89672 P t f x y)). Qed.
Lemma lem3457500 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (t : _89646 -> Prop) (f : type1524 _89646 _89670 _89671 _89672) (x : _89672) (y : _89671) : (term25 _89646 _89670 _89671 _89672 P t f x y) = (term25 _89646 _89670 _89671 _89672 P t f x y).
Proof. exact (fun_ext (fun z : _89670 => @lem3457489 _89646 _89670 _89671 _89672 P t f x y z)). Qed.
Lemma lem3457501 {_89670 : Type'} : (@ex _89670) = (@ex _89670).
Proof. exact (eq_refl (@ex _89670)). Qed.
Lemma lem3457502 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (t : _89646 -> Prop) (f : type1524 _89646 _89670 _89671 _89672) (x : _89672) (y : _89671) : (term26 _89646 _89670 _89671 _89672 P t f x y) = (term26 _89646 _89670 _89671 _89672 P t f x y).
Proof. exact (MK_COMB (@lem3457501 _89670) (@lem3457500 _89646 _89670 _89671 _89672 P t f x y)). Qed.
Lemma lem3457503 {_89671 : Type'} (P : _89671 -> Prop) : (term41 _89671 P) = (term42 _89671 P).
Proof. exact (@lem18394 _89671 P). Qed.
Lemma lem3457504 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (t : _89646 -> Prop) (f : type1524 _89646 _89670 _89671 _89672) (x : _89672) : (term50 _89646 _89670 _89671 _89672 P t f x) = (term51 _89646 _89670 _89671 _89672 P t f x).
Proof. exact (@lem3457503 _89671 (term27 _89646 _89670 _89671 _89672 P t f x)). Qed.
Lemma lem3457505 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (t : _89646 -> Prop) (f : type1524 _89646 _89670 _89671 _89672) (x : _89672) (y : _89671) : (term52 _89646 _89670 _89671 _89672 P t f x y) = (term26 _89646 _89670 _89671 _89672 P t f x y).
Proof. exact (eq_refl (term52 _89646 _89670 _89671 _89672 P t f x y)). Qed.
Lemma lem3457506 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem3457507 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (t : _89646 -> Prop) (f : type1524 _89646 _89670 _89671 _89672) (x : _89672) (y : _89671) : (term53 _89646 _89670 _89671 _89672 P t f x y) = (term43 _89646 _89670 _89671 _89672 P t f x y).
Proof. exact (MK_COMB (@lem3457506) (@lem3457505 _89646 _89670 _89671 _89672 P t f x y)). Qed.
Lemma lem3457508 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (t : _89646 -> Prop) (f : type1524 _89646 _89670 _89671 _89672) (x : _89672) (y : _89671) : (term53 _89646 _89670 _89671 _89672 P t f x y) = (term49 _89646 _89670 _89671 _89672 P t f x y).
Proof. exact (TRANS (@lem3457507 _89646 _89670 _89671 _89672 P t f x y) (@lem3457499 _89646 _89670 _89671 _89672 P t f x y)). Qed.
Lemma lem3457509 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (t : _89646 -> Prop) (f : type1524 _89646 _89670 _89671 _89672) (x : _89672) : (term54 _89646 _89670 _89671 _89672 P t f x) = (term55 _89646 _89670 _89671 _89672 P t f x).
Proof. exact (fun_ext (fun y : _89671 => @lem3457508 _89646 _89670 _89671 _89672 P t f x y)). Qed.
Lemma lem3457510 {_89671 : Type'} : (@all _89671) = (@all _89671).
Proof. exact (eq_refl (@all _89671)). Qed.
Lemma lem3457511 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (t : _89646 -> Prop) (f : type1524 _89646 _89670 _89671 _89672) (x : _89672) : (term51 _89646 _89670 _89671 _89672 P t f x) = (term56 _89646 _89670 _89671 _89672 P t f x).
Proof. exact (MK_COMB (@lem3457510 _89671) (@lem3457509 _89646 _89670 _89671 _89672 P t f x)). Qed.
Lemma lem3457512 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (t : _89646 -> Prop) (f : type1524 _89646 _89670 _89671 _89672) (x : _89672) : (term50 _89646 _89670 _89671 _89672 P t f x) = (term56 _89646 _89670 _89671 _89672 P t f x).
Proof. exact (TRANS (@lem3457504 _89646 _89670 _89671 _89672 P t f x) (@lem3457511 _89646 _89670 _89671 _89672 P t f x)). Qed.
Lemma lem3457513 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (t : _89646 -> Prop) (f : type1524 _89646 _89670 _89671 _89672) (x : _89672) : (term27 _89646 _89670 _89671 _89672 P t f x) = (term27 _89646 _89670 _89671 _89672 P t f x).
Proof. exact (fun_ext (fun y : _89671 => @lem3457502 _89646 _89670 _89671 _89672 P t f x y)). Qed.
Lemma lem3457514 {_89671 : Type'} : (@ex _89671) = (@ex _89671).
Proof. exact (eq_refl (@ex _89671)). Qed.
Lemma lem3457515 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (t : _89646 -> Prop) (f : type1524 _89646 _89670 _89671 _89672) (x : _89672) : (term28 _89646 _89670 _89671 _89672 P t f x) = (term28 _89646 _89670 _89671 _89672 P t f x).
Proof. exact (MK_COMB (@lem3457514 _89671) (@lem3457513 _89646 _89670 _89671 _89672 P t f x)). Qed.
Lemma lem3457516 {_89672 : Type'} (P : _89672 -> Prop) : (term41 _89672 P) = (term42 _89672 P).
Proof. exact (@lem18394 _89672 P). Qed.
Lemma lem3457517 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (t : _89646 -> Prop) (f : type1524 _89646 _89670 _89671 _89672) : (term57 _89646 _89670 _89671 _89672 P t f) = (term58 _89646 _89670 _89671 _89672 P t f).
Proof. exact (@lem3457516 _89672 (term29 _89646 _89670 _89671 _89672 P t f)). Qed.
Lemma lem3457518 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (t : _89646 -> Prop) (f : type1524 _89646 _89670 _89671 _89672) (x : _89672) : (term59 _89646 _89670 _89671 _89672 P t f x) = (term28 _89646 _89670 _89671 _89672 P t f x).
Proof. exact (eq_refl (term59 _89646 _89670 _89671 _89672 P t f x)). Qed.
Lemma lem3457519 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem3457520 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (t : _89646 -> Prop) (f : type1524 _89646 _89670 _89671 _89672) (x : _89672) : (term60 _89646 _89670 _89671 _89672 P t f x) = (term50 _89646 _89670 _89671 _89672 P t f x).
Proof. exact (MK_COMB (@lem3457519) (@lem3457518 _89646 _89670 _89671 _89672 P t f x)). Qed.
Lemma lem3457521 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (t : _89646 -> Prop) (f : type1524 _89646 _89670 _89671 _89672) (x : _89672) : (term60 _89646 _89670 _89671 _89672 P t f x) = (term56 _89646 _89670 _89671 _89672 P t f x).
Proof. exact (TRANS (@lem3457520 _89646 _89670 _89671 _89672 P t f x) (@lem3457512 _89646 _89670 _89671 _89672 P t f x)). Qed.
Lemma lem3457522 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (t : _89646 -> Prop) (f : type1524 _89646 _89670 _89671 _89672) : (term61 _89646 _89670 _89671 _89672 P t f) = (term62 _89646 _89670 _89671 _89672 P t f).
Proof. exact (fun_ext (fun x : _89672 => @lem3457521 _89646 _89670 _89671 _89672 P t f x)). Qed.
Lemma lem3457523 {_89672 : Type'} : (@all _89672) = (@all _89672).
Proof. exact (eq_refl (@all _89672)). Qed.
Lemma lem3457524 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (t : _89646 -> Prop) (f : type1524 _89646 _89670 _89671 _89672) : (term58 _89646 _89670 _89671 _89672 P t f) = (term63 _89646 _89670 _89671 _89672 P t f).
Proof. exact (MK_COMB (@lem3457523 _89672) (@lem3457522 _89646 _89670 _89671 _89672 P t f)). Qed.
Lemma lem3457525 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (t : _89646 -> Prop) (f : type1524 _89646 _89670 _89671 _89672) : (term57 _89646 _89670 _89671 _89672 P t f) = (term63 _89646 _89670 _89671 _89672 P t f).
Proof. exact (TRANS (@lem3457517 _89646 _89670 _89671 _89672 P t f) (@lem3457524 _89646 _89670 _89671 _89672 P t f)). Qed.
Lemma lem3457526 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (t : _89646 -> Prop) (f : type1524 _89646 _89670 _89671 _89672) : (term29 _89646 _89670 _89671 _89672 P t f) = (term29 _89646 _89670 _89671 _89672 P t f).
Proof. exact (fun_ext (fun x : _89672 => @lem3457515 _89646 _89670 _89671 _89672 P t f x)). Qed.
Lemma lem3457527 {_89672 : Type'} : (@ex _89672) = (@ex _89672).
Proof. exact (eq_refl (@ex _89672)). Qed.
Lemma lem3457528 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (t : _89646 -> Prop) (f : type1524 _89646 _89670 _89671 _89672) : (term30 _89646 _89670 _89671 _89672 P t f) = (term30 _89646 _89670 _89671 _89672 P t f).
Proof. exact (MK_COMB (@lem3457527 _89672) (@lem3457526 _89646 _89670 _89671 _89672 P t f)). Qed.
Lemma lem3457529 {_89646 : Type'} (x : _89646) (t : _89646 -> Prop) : (term64 _89646 x t) = (term64 _89646 x t).
Proof. exact (eq_refl (term64 _89646 x t)). Qed.
Lemma lem3457530 {_89646 : Type'} (x : _89646) (t : _89646 -> Prop) : (@IN _89646 x t) = (@IN _89646 x t).
Proof. exact (eq_refl (@IN _89646 x t)). Qed.
Lemma lem3457531 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem3457532 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (t : _89646 -> Prop) (f : type1524 _89646 _89670 _89671 _89672) : (term65 _89646 _89670 _89671 _89672 P t f) = (term66 _89646 _89670 _89671 _89672 P t f).
Proof. exact (MK_COMB (@lem3457531) (@lem3457525 _89646 _89670 _89671 _89672 P t f)). Qed.
Lemma lem3457533 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (f : type1524 _89646 _89670 _89671 _89672) (x : _89646) (t : _89646 -> Prop) : (term67 _89646 _89670 _89671 _89672 P f x t) = (term68 _89646 _89670 _89671 _89672 P f x t).
Proof. exact (MK_COMB (@lem3457532 _89646 _89670 _89671 _89672 P t f) (@lem3457529 _89646 x t)). Qed.
Lemma lem3457534 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (f : type1524 _89646 _89670 _89671 _89672) (x : _89646) (t : _89646 -> Prop) : (term69 _89646 _89670 _89671 _89672 P f x t) = (term67 _89646 _89670 _89671 _89672 P f x t).
Proof. exact (@lem17045 (term30 _89646 _89670 _89671 _89672 P t f) (@IN _89646 x t)). Qed.
Lemma lem3457535 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (f : type1524 _89646 _89670 _89671 _89672) (x : _89646) (t : _89646 -> Prop) : (term69 _89646 _89670 _89671 _89672 P f x t) = (term68 _89646 _89670 _89671 _89672 P f x t).
Proof. exact (TRANS (@lem3457534 _89646 _89670 _89671 _89672 P f x t) (@lem3457533 _89646 _89670 _89671 _89672 P f x t)). Qed.
Lemma lem3457536 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3457537 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (t : _89646 -> Prop) (f : type1524 _89646 _89670 _89671 _89672) : (term31 _89646 _89670 _89671 _89672 P t f) = (term31 _89646 _89670 _89671 _89672 P t f).
Proof. exact (MK_COMB (@lem3457536) (@lem3457528 _89646 _89670 _89671 _89672 P t f)). Qed.
Lemma lem3457538 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (f : type1524 _89646 _89670 _89671 _89672) (x : _89646) (t : _89646 -> Prop) : (term32 _89646 _89670 _89671 _89672 P f x t) = (term32 _89646 _89670 _89671 _89672 P f x t).
Proof. exact (MK_COMB (@lem3457537 _89646 _89670 _89671 _89672 P t f) (@lem3457530 _89646 x t)). Qed.
Lemma lem3457539 {_89646 : Type'} (P : type686 _89646) : (term70 _89646 P) = (term71 _89646 P).
Proof. exact (@lem18394 (_89646 -> Prop) P). Qed.
Lemma lem3457540 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (f : type1524 _89646 _89670 _89671 _89672) (x : _89646) : (term72 _89646 _89670 _89671 _89672 P f x) = (term73 _89646 _89670 _89671 _89672 P f x).
Proof. exact (@lem3457539 _89646 (term33 _89646 _89670 _89671 _89672 P f x)). Qed.
Lemma lem3457541 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (f : type1524 _89646 _89670 _89671 _89672) (x : _89646) (t : _89646 -> Prop) : (term74 _89646 _89670 _89671 _89672 P f x t) = (term32 _89646 _89670 _89671 _89672 P f x t).
Proof. exact (eq_refl (term74 _89646 _89670 _89671 _89672 P f x t)). Qed.
Lemma lem3457542 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem3457543 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (f : type1524 _89646 _89670 _89671 _89672) (x : _89646) (t : _89646 -> Prop) : (term75 _89646 _89670 _89671 _89672 P f x t) = (term69 _89646 _89670 _89671 _89672 P f x t).
Proof. exact (MK_COMB (@lem3457542) (@lem3457541 _89646 _89670 _89671 _89672 P f x t)). Qed.
Lemma lem3457544 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (f : type1524 _89646 _89670 _89671 _89672) (x : _89646) (t : _89646 -> Prop) : (term75 _89646 _89670 _89671 _89672 P f x t) = (term68 _89646 _89670 _89671 _89672 P f x t).
Proof. exact (TRANS (@lem3457543 _89646 _89670 _89671 _89672 P f x t) (@lem3457535 _89646 _89670 _89671 _89672 P f x t)). Qed.
Lemma lem3457545 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (f : type1524 _89646 _89670 _89671 _89672) (x : _89646) : (term76 _89646 _89670 _89671 _89672 P f x) = (term77 _89646 _89670 _89671 _89672 P f x).
Proof. exact (fun_ext (fun t : _89646 -> Prop => @lem3457544 _89646 _89670 _89671 _89672 P f x t)). Qed.
Lemma lem3457546 {_89646 : Type'} : (@all (_89646 -> Prop)) = (@all (_89646 -> Prop)).
Proof. exact (eq_refl (@all (_89646 -> Prop))). Qed.
Lemma lem3457547 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (f : type1524 _89646 _89670 _89671 _89672) (x : _89646) : (term73 _89646 _89670 _89671 _89672 P f x) = (term78 _89646 _89670 _89671 _89672 P f x).
Proof. exact (MK_COMB (@lem3457546 _89646) (@lem3457545 _89646 _89670 _89671 _89672 P f x)). Qed.
Lemma lem3457548 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (f : type1524 _89646 _89670 _89671 _89672) (x : _89646) : (term72 _89646 _89670 _89671 _89672 P f x) = (term78 _89646 _89670 _89671 _89672 P f x).
Proof. exact (TRANS (@lem3457540 _89646 _89670 _89671 _89672 P f x) (@lem3457547 _89646 _89670 _89671 _89672 P f x)). Qed.
Lemma lem3457549 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (f : type1524 _89646 _89670 _89671 _89672) (x : _89646) : (term33 _89646 _89670 _89671 _89672 P f x) = (term33 _89646 _89670 _89671 _89672 P f x).
Proof. exact (fun_ext (fun t : _89646 -> Prop => @lem3457538 _89646 _89670 _89671 _89672 P f x t)). Qed.
Lemma lem3457550 {_89646 : Type'} : (@ex (_89646 -> Prop)) = (@ex (_89646 -> Prop)).
Proof. exact (eq_refl (@ex (_89646 -> Prop))). Qed.
Lemma lem3457551 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (f : type1524 _89646 _89670 _89671 _89672) (x : _89646) : (term34 _89646 _89670 _89671 _89672 P f x) = (term34 _89646 _89670 _89671 _89672 P f x).
Proof. exact (MK_COMB (@lem3457550 _89646) (@lem3457549 _89646 _89670 _89671 _89672 P f x)). Qed.
Lemma lem3457560 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) (x' : _89672) (y : _89671) (z : _89670) : (term79 _89646 _89670 _89671 _89672 P x f x' y z) = (term80 _89646 _89670 _89671 _89672 P x f x' y z).
Proof. exact (@lem17045 (P x' y z) (term81 _89646 _89670 _89671 _89672 x f x' y z)). Qed.
Lemma lem3457563 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) (x' : _89672) (y : _89671) (z : _89670) : (term17 _89646 _89670 _89671 _89672 P x f x' y z) = (term17 _89646 _89670 _89671 _89672 P x f x' y z).
Proof. exact (eq_refl (term17 _89646 _89670 _89671 _89672 P x f x' y z)). Qed.
Lemma lem3457564 {_89670 : Type'} (P : _89670 -> Prop) : (term41 _89670 P) = (term42 _89670 P).
Proof. exact (@lem18394 _89670 P). Qed.
Lemma lem3457565 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) (x' : _89672) (y : _89671) : (term82 _89646 _89670 _89671 _89672 P x f x' y) = (term83 _89646 _89670 _89671 _89672 P x f x' y).
Proof. exact (@lem3457564 _89670 (term18 _89646 _89670 _89671 _89672 P x f x' y)). Qed.
Lemma lem3457566 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) (x' : _89672) (y : _89671) (z : _89670) : (term84 _89646 _89670 _89671 _89672 P x f x' y z) = (term17 _89646 _89670 _89671 _89672 P x f x' y z).
Proof. exact (eq_refl (term84 _89646 _89670 _89671 _89672 P x f x' y z)). Qed.
Lemma lem3457567 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem3457568 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) (x' : _89672) (y : _89671) (z : _89670) : (term85 _89646 _89670 _89671 _89672 P x f x' y z) = (term79 _89646 _89670 _89671 _89672 P x f x' y z).
Proof. exact (MK_COMB (@lem3457567) (@lem3457566 _89646 _89670 _89671 _89672 P x f x' y z)). Qed.
Lemma lem3457569 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) (x' : _89672) (y : _89671) (z : _89670) : (term85 _89646 _89670 _89671 _89672 P x f x' y z) = (term80 _89646 _89670 _89671 _89672 P x f x' y z).
Proof. exact (TRANS (@lem3457568 _89646 _89670 _89671 _89672 P x f x' y z) (@lem3457560 _89646 _89670 _89671 _89672 P x f x' y z)). Qed.
Lemma lem3457570 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) (x' : _89672) (y : _89671) : (term86 _89646 _89670 _89671 _89672 P x f x' y) = (term87 _89646 _89670 _89671 _89672 P x f x' y).
Proof. exact (fun_ext (fun z : _89670 => @lem3457569 _89646 _89670 _89671 _89672 P x f x' y z)). Qed.
Lemma lem3457571 {_89670 : Type'} : (@all _89670) = (@all _89670).
Proof. exact (eq_refl (@all _89670)). Qed.
Lemma lem3457572 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) (x' : _89672) (y : _89671) : (term83 _89646 _89670 _89671 _89672 P x f x' y) = (term88 _89646 _89670 _89671 _89672 P x f x' y).
Proof. exact (MK_COMB (@lem3457571 _89670) (@lem3457570 _89646 _89670 _89671 _89672 P x f x' y)). Qed.
Lemma lem3457573 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) (x' : _89672) (y : _89671) : (term82 _89646 _89670 _89671 _89672 P x f x' y) = (term88 _89646 _89670 _89671 _89672 P x f x' y).
Proof. exact (TRANS (@lem3457565 _89646 _89670 _89671 _89672 P x f x' y) (@lem3457572 _89646 _89670 _89671 _89672 P x f x' y)). Qed.
Lemma lem3457574 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) (x' : _89672) (y : _89671) : (term18 _89646 _89670 _89671 _89672 P x f x' y) = (term18 _89646 _89670 _89671 _89672 P x f x' y).
Proof. exact (fun_ext (fun z : _89670 => @lem3457563 _89646 _89670 _89671 _89672 P x f x' y z)). Qed.
Lemma lem3457575 {_89670 : Type'} : (@ex _89670) = (@ex _89670).
Proof. exact (eq_refl (@ex _89670)). Qed.
Lemma lem3457576 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) (x' : _89672) (y : _89671) : (term19 _89646 _89670 _89671 _89672 P x f x' y) = (term19 _89646 _89670 _89671 _89672 P x f x' y).
Proof. exact (MK_COMB (@lem3457575 _89670) (@lem3457574 _89646 _89670 _89671 _89672 P x f x' y)). Qed.
Lemma lem3457577 {_89671 : Type'} (P : _89671 -> Prop) : (term41 _89671 P) = (term42 _89671 P).
Proof. exact (@lem18394 _89671 P). Qed.
Lemma lem3457578 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) (x' : _89672) : (term89 _89646 _89670 _89671 _89672 P x f x') = (term90 _89646 _89670 _89671 _89672 P x f x').
Proof. exact (@lem3457577 _89671 (term20 _89646 _89670 _89671 _89672 P x f x')). Qed.
Lemma lem3457579 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) (x' : _89672) (y : _89671) : (term91 _89646 _89670 _89671 _89672 P x f x' y) = (term19 _89646 _89670 _89671 _89672 P x f x' y).
Proof. exact (eq_refl (term91 _89646 _89670 _89671 _89672 P x f x' y)). Qed.
Lemma lem3457580 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem3457581 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) (x' : _89672) (y : _89671) : (term92 _89646 _89670 _89671 _89672 P x f x' y) = (term82 _89646 _89670 _89671 _89672 P x f x' y).
Proof. exact (MK_COMB (@lem3457580) (@lem3457579 _89646 _89670 _89671 _89672 P x f x' y)). Qed.
Lemma lem3457582 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) (x' : _89672) (y : _89671) : (term92 _89646 _89670 _89671 _89672 P x f x' y) = (term88 _89646 _89670 _89671 _89672 P x f x' y).
Proof. exact (TRANS (@lem3457581 _89646 _89670 _89671 _89672 P x f x' y) (@lem3457573 _89646 _89670 _89671 _89672 P x f x' y)). Qed.
Lemma lem3457583 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) (x' : _89672) : (term93 _89646 _89670 _89671 _89672 P x f x') = (term94 _89646 _89670 _89671 _89672 P x f x').
Proof. exact (fun_ext (fun y : _89671 => @lem3457582 _89646 _89670 _89671 _89672 P x f x' y)). Qed.
Lemma lem3457584 {_89671 : Type'} : (@all _89671) = (@all _89671).
Proof. exact (eq_refl (@all _89671)). Qed.
Lemma lem3457585 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) (x' : _89672) : (term90 _89646 _89670 _89671 _89672 P x f x') = (term95 _89646 _89670 _89671 _89672 P x f x').
Proof. exact (MK_COMB (@lem3457584 _89671) (@lem3457583 _89646 _89670 _89671 _89672 P x f x')). Qed.
Lemma lem3457586 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) (x' : _89672) : (term89 _89646 _89670 _89671 _89672 P x f x') = (term95 _89646 _89670 _89671 _89672 P x f x').
Proof. exact (TRANS (@lem3457578 _89646 _89670 _89671 _89672 P x f x') (@lem3457585 _89646 _89670 _89671 _89672 P x f x')). Qed.
Lemma lem3457587 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) (x' : _89672) : (term20 _89646 _89670 _89671 _89672 P x f x') = (term20 _89646 _89670 _89671 _89672 P x f x').
Proof. exact (fun_ext (fun y : _89671 => @lem3457576 _89646 _89670 _89671 _89672 P x f x' y)). Qed.
Lemma lem3457588 {_89671 : Type'} : (@ex _89671) = (@ex _89671).
Proof. exact (eq_refl (@ex _89671)). Qed.
Lemma lem3457589 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) (x' : _89672) : (term21 _89646 _89670 _89671 _89672 P x f x') = (term21 _89646 _89670 _89671 _89672 P x f x').
Proof. exact (MK_COMB (@lem3457588 _89671) (@lem3457587 _89646 _89670 _89671 _89672 P x f x')). Qed.
Lemma lem3457590 {_89672 : Type'} (P : _89672 -> Prop) : (term41 _89672 P) = (term42 _89672 P).
Proof. exact (@lem18394 _89672 P). Qed.
Lemma lem3457591 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) : (term96 _89646 _89670 _89671 _89672 P x f) = (term97 _89646 _89670 _89671 _89672 P x f).
Proof. exact (@lem3457590 _89672 (term22 _89646 _89670 _89671 _89672 P x f)). Qed.
Lemma lem3457592 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) (x' : _89672) : (term98 _89646 _89670 _89671 _89672 P x f x') = (term21 _89646 _89670 _89671 _89672 P x f x').
Proof. exact (eq_refl (term98 _89646 _89670 _89671 _89672 P x f x')). Qed.
Lemma lem3457593 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem3457594 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) (x' : _89672) : (term99 _89646 _89670 _89671 _89672 P x f x') = (term89 _89646 _89670 _89671 _89672 P x f x').
Proof. exact (MK_COMB (@lem3457593) (@lem3457592 _89646 _89670 _89671 _89672 P x f x')). Qed.
Lemma lem3457595 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) (x' : _89672) : (term99 _89646 _89670 _89671 _89672 P x f x') = (term95 _89646 _89670 _89671 _89672 P x f x').
Proof. exact (TRANS (@lem3457594 _89646 _89670 _89671 _89672 P x f x') (@lem3457586 _89646 _89670 _89671 _89672 P x f x')). Qed.
Lemma lem3457596 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) : (term100 _89646 _89670 _89671 _89672 P x f) = (term101 _89646 _89670 _89671 _89672 P x f).
Proof. exact (fun_ext (fun x' : _89672 => @lem3457595 _89646 _89670 _89671 _89672 P x f x')). Qed.
Lemma lem3457597 {_89672 : Type'} : (@all _89672) = (@all _89672).
Proof. exact (eq_refl (@all _89672)). Qed.
Lemma lem3457598 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) : (term97 _89646 _89670 _89671 _89672 P x f) = (term102 _89646 _89670 _89671 _89672 P x f).
Proof. exact (MK_COMB (@lem3457597 _89672) (@lem3457596 _89646 _89670 _89671 _89672 P x f)). Qed.
Lemma lem3457599 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) : (term96 _89646 _89670 _89671 _89672 P x f) = (term102 _89646 _89670 _89671 _89672 P x f).
Proof. exact (TRANS (@lem3457591 _89646 _89670 _89671 _89672 P x f) (@lem3457598 _89646 _89670 _89671 _89672 P x f)). Qed.
Lemma lem3457600 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) : (term22 _89646 _89670 _89671 _89672 P x f) = (term22 _89646 _89670 _89671 _89672 P x f).
Proof. exact (fun_ext (fun x' : _89672 => @lem3457589 _89646 _89670 _89671 _89672 P x f x')). Qed.
Lemma lem3457601 {_89672 : Type'} : (@ex _89672) = (@ex _89672).
Proof. exact (eq_refl (@ex _89672)). Qed.
Lemma lem3457602 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) : (term23 _89646 _89670 _89671 _89672 P x f) = (term23 _89646 _89670 _89671 _89672 P x f).
Proof. exact (MK_COMB (@lem3457601 _89672) (@lem3457600 _89646 _89670 _89671 _89672 P x f)). Qed.
Lemma lem3457603 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3457604 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (f : type1524 _89646 _89670 _89671 _89672) (x : _89646) : (term103 _89646 _89670 _89671 _89672 P f x) = (term104 _89646 _89670 _89671 _89672 P f x).
Proof. exact (MK_COMB (@lem3457603) (@lem3457548 _89646 _89670 _89671 _89672 P f x)). Qed.
Lemma lem3457605 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) : (term105 _89646 _89670 _89671 _89672 P x f) = (term106 _89646 _89670 _89671 _89672 P x f).
Proof. exact (MK_COMB (@lem3457604 _89646 _89670 _89671 _89672 P f x) (@lem3457602 _89646 _89670 _89671 _89672 P x f)). Qed.
Lemma lem3457606 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3457607 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (f : type1524 _89646 _89670 _89671 _89672) (x : _89646) : (term107 _89646 _89670 _89671 _89672 P f x) = (term107 _89646 _89670 _89671 _89672 P f x).
Proof. exact (MK_COMB (@lem3457606) (@lem3457551 _89646 _89670 _89671 _89672 P f x)). Qed.
Lemma lem3457608 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) : (term108 _89646 _89670 _89671 _89672 P x f) = (term109 _89646 _89670 _89671 _89672 P x f).
Proof. exact (MK_COMB (@lem3457607 _89646 _89670 _89671 _89672 P f x) (@lem3457599 _89646 _89670 _89671 _89672 P x f)). Qed.
Lemma lem3457609 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem3457610 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) : (term110 _89646 _89670 _89671 _89672 P x f) = (term111 _89646 _89670 _89671 _89672 P x f).
Proof. exact (MK_COMB (@lem3457609) (@lem3457608 _89646 _89670 _89671 _89672 P x f)). Qed.
Lemma lem3457611 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) : (term112 _89646 _89670 _89671 _89672 P x f) = (term113 _89646 _89670 _89671 _89672 P x f).
Proof. exact (MK_COMB (@lem3457610 _89646 _89670 _89671 _89672 P x f) (@lem3457605 _89646 _89670 _89671 _89672 P x f)). Qed.
Lemma lem3457612 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) : (term38 _89646 _89670 _89671 _89672 P x f) = (term112 _89646 _89670 _89671 _89672 P x f).
Proof. exact (@lem17646 (term34 _89646 _89670 _89671 _89672 P f x) (term23 _89646 _89670 _89671 _89672 P x f)). Qed.
Lemma lem3457613 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) : (term38 _89646 _89670 _89671 _89672 P x f) = (term113 _89646 _89670 _89671 _89672 P x f).
Proof. exact (TRANS (@lem3457612 _89646 _89670 _89671 _89672 P x f) (@lem3457611 _89646 _89670 _89671 _89672 P x f)). Qed.
Lemma lem3457936 {A : Type'} (P : A -> Prop) (Q : Prop) : (term114 A P Q) = (term115 A P Q).
Proof. exact (EQ_MP (@lem18923 A P Q) (@lem18922 A P Q)). Qed.
Lemma lem3457937 {_89672 : Type'} (P : _89672 -> Prop) (Q : Prop) : (term114 _89672 P Q) = (term115 _89672 P Q).
Proof. exact (@lem3457936 _89672 P Q). Qed.
Lemma lem3457938 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (f : type1524 _89646 _89670 _89671 _89672) (x : _89646) (t : _89646 -> Prop) : (term116 _89646 _89670 _89671 _89672 P f x t) = (term117 _89646 _89670 _89671 _89672 P f x t).
Proof. exact (@lem3457937 _89672 (term29 _89646 _89670 _89671 _89672 P t f) (@IN _89646 x t)). Qed.
Lemma lem3457939 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (t : _89646 -> Prop) (f : type1524 _89646 _89670 _89671 _89672) (x : _89672) : (term59 _89646 _89670 _89671 _89672 P t f x) = (term28 _89646 _89670 _89671 _89672 P t f x).
Proof. exact (eq_refl (term59 _89646 _89670 _89671 _89672 P t f x)). Qed.
Lemma lem3457940 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (t : _89646 -> Prop) (f : type1524 _89646 _89670 _89671 _89672) : (term118 _89646 _89670 _89671 _89672 P t f) = (term29 _89646 _89670 _89671 _89672 P t f).
Proof. exact (fun_ext (fun x : _89672 => @lem3457939 _89646 _89670 _89671 _89672 P t f x)). Qed.
Lemma lem3457941 {_89672 : Type'} : (@ex _89672) = (@ex _89672).
Proof. exact (eq_refl (@ex _89672)). Qed.
Lemma lem3457942 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (t : _89646 -> Prop) (f : type1524 _89646 _89670 _89671 _89672) : (term119 _89646 _89670 _89671 _89672 P t f) = (term30 _89646 _89670 _89671 _89672 P t f).
Proof. exact (MK_COMB (@lem3457941 _89672) (@lem3457940 _89646 _89670 _89671 _89672 P t f)). Qed.
Lemma lem3457943 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3457944 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (t : _89646 -> Prop) (f : type1524 _89646 _89670 _89671 _89672) : (term120 _89646 _89670 _89671 _89672 P t f) = (term31 _89646 _89670 _89671 _89672 P t f).
Proof. exact (MK_COMB (@lem3457943) (@lem3457942 _89646 _89670 _89671 _89672 P t f)). Qed.
Lemma lem3457945 {_89646 : Type'} (x : _89646) (t : _89646 -> Prop) : (@IN _89646 x t) = (@IN _89646 x t).
Proof. exact (eq_refl (@IN _89646 x t)). Qed.
Lemma lem3457946 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (f : type1524 _89646 _89670 _89671 _89672) (x : _89646) (t : _89646 -> Prop) : (term116 _89646 _89670 _89671 _89672 P f x t) = (term32 _89646 _89670 _89671 _89672 P f x t).
Proof. exact (MK_COMB (@lem3457944 _89646 _89670 _89671 _89672 P t f) (@lem3457945 _89646 x t)). Qed.
Lemma lem3457947 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3457948 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (f : type1524 _89646 _89670 _89671 _89672) (x : _89646) (t : _89646 -> Prop) : (term121 _89646 _89670 _89671 _89672 P f x t) = (term122 _89646 _89670 _89671 _89672 P f x t).
Proof. exact (MK_COMB (@lem3457947) (@lem3457946 _89646 _89670 _89671 _89672 P f x t)). Qed.
Lemma lem3457949 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (t : _89646 -> Prop) (f : type1524 _89646 _89670 _89671 _89672) (x : _89672) : (term59 _89646 _89670 _89671 _89672 P t f x) = (term28 _89646 _89670 _89671 _89672 P t f x).
Proof. exact (eq_refl (term59 _89646 _89670 _89671 _89672 P t f x)). Qed.
Lemma lem3457950 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3457951 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (t : _89646 -> Prop) (f : type1524 _89646 _89670 _89671 _89672) (x : _89672) : (term123 _89646 _89670 _89671 _89672 P t f x) = (term124 _89646 _89670 _89671 _89672 P t f x).
Proof. exact (MK_COMB (@lem3457950) (@lem3457949 _89646 _89670 _89671 _89672 P t f x)). Qed.
Lemma lem3457952 {_89646 : Type'} (x : _89646) (t : _89646 -> Prop) : (@IN _89646 x t) = (@IN _89646 x t).
Proof. exact (eq_refl (@IN _89646 x t)). Qed.
Lemma lem3457953 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (f : type1524 _89646 _89670 _89671 _89672) (x : _89672) (x' : _89646) (t : _89646 -> Prop) : (term125 _89646 _89670 _89671 _89672 P f x x' t) = (term126 _89646 _89670 _89671 _89672 P f x x' t).
Proof. exact (MK_COMB (@lem3457951 _89646 _89670 _89671 _89672 P t f x) (@lem3457952 _89646 x' t)). Qed.
Lemma lem3457954 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (f : type1524 _89646 _89670 _89671 _89672) (x : _89646) (t : _89646 -> Prop) : (term127 _89646 _89670 _89671 _89672 P f x t) = (term128 _89646 _89670 _89671 _89672 P f x t).
Proof. exact (fun_ext (fun x' : _89672 => @lem3457953 _89646 _89670 _89671 _89672 P f x' x t)). Qed.
Lemma lem3457955 {_89672 : Type'} : (@ex _89672) = (@ex _89672).
Proof. exact (eq_refl (@ex _89672)). Qed.
Lemma lem3457956 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (f : type1524 _89646 _89670 _89671 _89672) (x : _89646) (t : _89646 -> Prop) : (term117 _89646 _89670 _89671 _89672 P f x t) = (term129 _89646 _89670 _89671 _89672 P f x t).
Proof. exact (MK_COMB (@lem3457955 _89672) (@lem3457954 _89646 _89670 _89671 _89672 P f x t)). Qed.
Lemma lem3457957 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (f : type1524 _89646 _89670 _89671 _89672) (x : _89646) (t : _89646 -> Prop) : ((term116 _89646 _89670 _89671 _89672 P f x t) = (term117 _89646 _89670 _89671 _89672 P f x t)) = ((term32 _89646 _89670 _89671 _89672 P f x t) = (term129 _89646 _89670 _89671 _89672 P f x t)).
Proof. exact (MK_COMB (@lem3457948 _89646 _89670 _89671 _89672 P f x t) (@lem3457956 _89646 _89670 _89671 _89672 P f x t)). Qed.
Lemma lem3457958 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (f : type1524 _89646 _89670 _89671 _89672) (x : _89646) (t : _89646 -> Prop) : (term32 _89646 _89670 _89671 _89672 P f x t) = (term129 _89646 _89670 _89671 _89672 P f x t).
Proof. exact (EQ_MP (@lem3457957 _89646 _89670 _89671 _89672 P f x t) (@lem3457938 _89646 _89670 _89671 _89672 P f x t)). Qed.
Lemma lem3457960 {A : Type'} (P : A -> Prop) (Q : Prop) : (term114 A P Q) = (term115 A P Q).
Proof. exact (EQ_MP (@lem18923 A P Q) (@lem18922 A P Q)). Qed.
Lemma lem3457961 {_89671 : Type'} (P : _89671 -> Prop) (Q : Prop) : (term114 _89671 P Q) = (term115 _89671 P Q).
Proof. exact (@lem3457960 _89671 P Q). Qed.
Lemma lem3457962 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (f : type1524 _89646 _89670 _89671 _89672) (x : _89672) (x' : _89646) (t : _89646 -> Prop) : (term130 _89646 _89670 _89671 _89672 P f x x' t) = (term131 _89646 _89670 _89671 _89672 P f x x' t).
Proof. exact (@lem3457961 _89671 (term27 _89646 _89670 _89671 _89672 P t f x) (@IN _89646 x' t)). Qed.
Lemma lem3457963 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (t : _89646 -> Prop) (f : type1524 _89646 _89670 _89671 _89672) (x : _89672) (y : _89671) : (term52 _89646 _89670 _89671 _89672 P t f x y) = (term26 _89646 _89670 _89671 _89672 P t f x y).
Proof. exact (eq_refl (term52 _89646 _89670 _89671 _89672 P t f x y)). Qed.
Lemma lem3457964 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (t : _89646 -> Prop) (f : type1524 _89646 _89670 _89671 _89672) (x : _89672) : (term132 _89646 _89670 _89671 _89672 P t f x) = (term27 _89646 _89670 _89671 _89672 P t f x).
Proof. exact (fun_ext (fun y : _89671 => @lem3457963 _89646 _89670 _89671 _89672 P t f x y)). Qed.
Lemma lem3457965 {_89671 : Type'} : (@ex _89671) = (@ex _89671).
Proof. exact (eq_refl (@ex _89671)). Qed.
Lemma lem3457966 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (t : _89646 -> Prop) (f : type1524 _89646 _89670 _89671 _89672) (x : _89672) : (term133 _89646 _89670 _89671 _89672 P t f x) = (term28 _89646 _89670 _89671 _89672 P t f x).
Proof. exact (MK_COMB (@lem3457965 _89671) (@lem3457964 _89646 _89670 _89671 _89672 P t f x)). Qed.
Lemma lem3457967 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3457968 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (t : _89646 -> Prop) (f : type1524 _89646 _89670 _89671 _89672) (x : _89672) : (term134 _89646 _89670 _89671 _89672 P t f x) = (term124 _89646 _89670 _89671 _89672 P t f x).
Proof. exact (MK_COMB (@lem3457967) (@lem3457966 _89646 _89670 _89671 _89672 P t f x)). Qed.
Lemma lem3457969 {_89646 : Type'} (x : _89646) (t : _89646 -> Prop) : (@IN _89646 x t) = (@IN _89646 x t).
Proof. exact (eq_refl (@IN _89646 x t)). Qed.
Lemma lem3457970 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (f : type1524 _89646 _89670 _89671 _89672) (x : _89672) (x' : _89646) (t : _89646 -> Prop) : (term130 _89646 _89670 _89671 _89672 P f x x' t) = (term126 _89646 _89670 _89671 _89672 P f x x' t).
Proof. exact (MK_COMB (@lem3457968 _89646 _89670 _89671 _89672 P t f x) (@lem3457969 _89646 x' t)). Qed.
Lemma lem3457971 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3457972 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (f : type1524 _89646 _89670 _89671 _89672) (x : _89672) (x' : _89646) (t : _89646 -> Prop) : (term135 _89646 _89670 _89671 _89672 P f x x' t) = (term136 _89646 _89670 _89671 _89672 P f x x' t).
Proof. exact (MK_COMB (@lem3457971) (@lem3457970 _89646 _89670 _89671 _89672 P f x x' t)). Qed.
Lemma lem3457973 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (t : _89646 -> Prop) (f : type1524 _89646 _89670 _89671 _89672) (x : _89672) (y : _89671) : (term52 _89646 _89670 _89671 _89672 P t f x y) = (term26 _89646 _89670 _89671 _89672 P t f x y).
Proof. exact (eq_refl (term52 _89646 _89670 _89671 _89672 P t f x y)). Qed.
Lemma lem3457974 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3457975 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (t : _89646 -> Prop) (f : type1524 _89646 _89670 _89671 _89672) (x : _89672) (y : _89671) : (term137 _89646 _89670 _89671 _89672 P t f x y) = (term138 _89646 _89670 _89671 _89672 P t f x y).
Proof. exact (MK_COMB (@lem3457974) (@lem3457973 _89646 _89670 _89671 _89672 P t f x y)). Qed.
Lemma lem3457976 {_89646 : Type'} (x : _89646) (t : _89646 -> Prop) : (@IN _89646 x t) = (@IN _89646 x t).
Proof. exact (eq_refl (@IN _89646 x t)). Qed.
Lemma lem3457977 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (f : type1524 _89646 _89670 _89671 _89672) (x : _89672) (y : _89671) (x' : _89646) (t : _89646 -> Prop) : (term139 _89646 _89670 _89671 _89672 P f x y x' t) = (term140 _89646 _89670 _89671 _89672 P f x y x' t).
Proof. exact (MK_COMB (@lem3457975 _89646 _89670 _89671 _89672 P t f x y) (@lem3457976 _89646 x' t)). Qed.
Lemma lem3457978 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (f : type1524 _89646 _89670 _89671 _89672) (x : _89672) (x' : _89646) (t : _89646 -> Prop) : (term141 _89646 _89670 _89671 _89672 P f x x' t) = (term142 _89646 _89670 _89671 _89672 P f x x' t).
Proof. exact (fun_ext (fun y : _89671 => @lem3457977 _89646 _89670 _89671 _89672 P f x y x' t)). Qed.
Lemma lem3457979 {_89671 : Type'} : (@ex _89671) = (@ex _89671).
Proof. exact (eq_refl (@ex _89671)). Qed.
Lemma lem3457980 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (f : type1524 _89646 _89670 _89671 _89672) (x : _89672) (x' : _89646) (t : _89646 -> Prop) : (term131 _89646 _89670 _89671 _89672 P f x x' t) = (term143 _89646 _89670 _89671 _89672 P f x x' t).
Proof. exact (MK_COMB (@lem3457979 _89671) (@lem3457978 _89646 _89670 _89671 _89672 P f x x' t)). Qed.
Lemma lem3457981 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (f : type1524 _89646 _89670 _89671 _89672) (x : _89672) (x' : _89646) (t : _89646 -> Prop) : ((term130 _89646 _89670 _89671 _89672 P f x x' t) = (term131 _89646 _89670 _89671 _89672 P f x x' t)) = ((term126 _89646 _89670 _89671 _89672 P f x x' t) = (term143 _89646 _89670 _89671 _89672 P f x x' t)).
Proof. exact (MK_COMB (@lem3457972 _89646 _89670 _89671 _89672 P f x x' t) (@lem3457980 _89646 _89670 _89671 _89672 P f x x' t)). Qed.
Lemma lem3457982 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (f : type1524 _89646 _89670 _89671 _89672) (x : _89672) (x' : _89646) (t : _89646 -> Prop) : (term126 _89646 _89670 _89671 _89672 P f x x' t) = (term143 _89646 _89670 _89671 _89672 P f x x' t).
Proof. exact (EQ_MP (@lem3457981 _89646 _89670 _89671 _89672 P f x x' t) (@lem3457962 _89646 _89670 _89671 _89672 P f x x' t)). Qed.
Lemma lem3457984 {A : Type'} (P : A -> Prop) (Q : Prop) : (term114 A P Q) = (term115 A P Q).
Proof. exact (EQ_MP (@lem18923 A P Q) (@lem18922 A P Q)). Qed.
Lemma lem3457985 {_89670 : Type'} (P : _89670 -> Prop) (Q : Prop) : (term114 _89670 P Q) = (term115 _89670 P Q).
Proof. exact (@lem3457984 _89670 P Q). Qed.
Lemma lem3457986 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (f : type1524 _89646 _89670 _89671 _89672) (x : _89672) (y : _89671) (x' : _89646) (t : _89646 -> Prop) : (term144 _89646 _89670 _89671 _89672 P f x y x' t) = (term145 _89646 _89670 _89671 _89672 P f x y x' t).
Proof. exact (@lem3457985 _89670 (term25 _89646 _89670 _89671 _89672 P t f x y) (@IN _89646 x' t)). Qed.
Lemma lem3457987 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (t : _89646 -> Prop) (f : type1524 _89646 _89670 _89671 _89672) (x : _89672) (y : _89671) (z : _89670) : (term45 _89646 _89670 _89671 _89672 P t f x y z) = (term24 _89646 _89670 _89671 _89672 P t f x y z).
Proof. exact (eq_refl (term45 _89646 _89670 _89671 _89672 P t f x y z)). Qed.
Lemma lem3457988 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (t : _89646 -> Prop) (f : type1524 _89646 _89670 _89671 _89672) (x : _89672) (y : _89671) : (term146 _89646 _89670 _89671 _89672 P t f x y) = (term25 _89646 _89670 _89671 _89672 P t f x y).
Proof. exact (fun_ext (fun z : _89670 => @lem3457987 _89646 _89670 _89671 _89672 P t f x y z)). Qed.
Lemma lem3457989 {_89670 : Type'} : (@ex _89670) = (@ex _89670).
Proof. exact (eq_refl (@ex _89670)). Qed.
Lemma lem3457990 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (t : _89646 -> Prop) (f : type1524 _89646 _89670 _89671 _89672) (x : _89672) (y : _89671) : (term147 _89646 _89670 _89671 _89672 P t f x y) = (term26 _89646 _89670 _89671 _89672 P t f x y).
Proof. exact (MK_COMB (@lem3457989 _89670) (@lem3457988 _89646 _89670 _89671 _89672 P t f x y)). Qed.
Lemma lem3457991 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3457992 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (t : _89646 -> Prop) (f : type1524 _89646 _89670 _89671 _89672) (x : _89672) (y : _89671) : (term148 _89646 _89670 _89671 _89672 P t f x y) = (term138 _89646 _89670 _89671 _89672 P t f x y).
Proof. exact (MK_COMB (@lem3457991) (@lem3457990 _89646 _89670 _89671 _89672 P t f x y)). Qed.
Lemma lem3457993 {_89646 : Type'} (x : _89646) (t : _89646 -> Prop) : (@IN _89646 x t) = (@IN _89646 x t).
Proof. exact (eq_refl (@IN _89646 x t)). Qed.
Lemma lem3457994 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (f : type1524 _89646 _89670 _89671 _89672) (x : _89672) (y : _89671) (x' : _89646) (t : _89646 -> Prop) : (term144 _89646 _89670 _89671 _89672 P f x y x' t) = (term140 _89646 _89670 _89671 _89672 P f x y x' t).
Proof. exact (MK_COMB (@lem3457992 _89646 _89670 _89671 _89672 P t f x y) (@lem3457993 _89646 x' t)). Qed.
Lemma lem3457995 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3457996 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (f : type1524 _89646 _89670 _89671 _89672) (x : _89672) (y : _89671) (x' : _89646) (t : _89646 -> Prop) : (term149 _89646 _89670 _89671 _89672 P f x y x' t) = (term150 _89646 _89670 _89671 _89672 P f x y x' t).
Proof. exact (MK_COMB (@lem3457995) (@lem3457994 _89646 _89670 _89671 _89672 P f x y x' t)). Qed.
Lemma lem3457997 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (t : _89646 -> Prop) (f : type1524 _89646 _89670 _89671 _89672) (x : _89672) (y : _89671) (z : _89670) : (term45 _89646 _89670 _89671 _89672 P t f x y z) = (term24 _89646 _89670 _89671 _89672 P t f x y z).
Proof. exact (eq_refl (term45 _89646 _89670 _89671 _89672 P t f x y z)). Qed.
Lemma lem3457998 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3457999 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (t : _89646 -> Prop) (f : type1524 _89646 _89670 _89671 _89672) (x : _89672) (y : _89671) (z : _89670) : (term151 _89646 _89670 _89671 _89672 P t f x y z) = (term152 _89646 _89670 _89671 _89672 P t f x y z).
Proof. exact (MK_COMB (@lem3457998) (@lem3457997 _89646 _89670 _89671 _89672 P t f x y z)). Qed.
Lemma lem3458000 {_89646 : Type'} (x : _89646) (t : _89646 -> Prop) : (@IN _89646 x t) = (@IN _89646 x t).
Proof. exact (eq_refl (@IN _89646 x t)). Qed.
Lemma lem3458001 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (f : type1524 _89646 _89670 _89671 _89672) (x : _89672) (y : _89671) (z : _89670) (x' : _89646) (t : _89646 -> Prop) : (term153 _89646 _89670 _89671 _89672 P f x y z x' t) = (term154 _89646 _89670 _89671 _89672 P f x y z x' t).
Proof. exact (MK_COMB (@lem3457999 _89646 _89670 _89671 _89672 P t f x y z) (@lem3458000 _89646 x' t)). Qed.
Lemma lem3458002 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (f : type1524 _89646 _89670 _89671 _89672) (x : _89672) (y : _89671) (x' : _89646) (t : _89646 -> Prop) : (term155 _89646 _89670 _89671 _89672 P f x y x' t) = (term156 _89646 _89670 _89671 _89672 P f x y x' t).
Proof. exact (fun_ext (fun z : _89670 => @lem3458001 _89646 _89670 _89671 _89672 P f x y z x' t)). Qed.
Lemma lem3458003 {_89670 : Type'} : (@ex _89670) = (@ex _89670).
Proof. exact (eq_refl (@ex _89670)). Qed.
Lemma lem3458004 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (f : type1524 _89646 _89670 _89671 _89672) (x : _89672) (y : _89671) (x' : _89646) (t : _89646 -> Prop) : (term145 _89646 _89670 _89671 _89672 P f x y x' t) = (term157 _89646 _89670 _89671 _89672 P f x y x' t).
Proof. exact (MK_COMB (@lem3458003 _89670) (@lem3458002 _89646 _89670 _89671 _89672 P f x y x' t)). Qed.
Lemma lem3458005 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (f : type1524 _89646 _89670 _89671 _89672) (x : _89672) (y : _89671) (x' : _89646) (t : _89646 -> Prop) : ((term144 _89646 _89670 _89671 _89672 P f x y x' t) = (term145 _89646 _89670 _89671 _89672 P f x y x' t)) = ((term140 _89646 _89670 _89671 _89672 P f x y x' t) = (term157 _89646 _89670 _89671 _89672 P f x y x' t)).
Proof. exact (MK_COMB (@lem3457996 _89646 _89670 _89671 _89672 P f x y x' t) (@lem3458004 _89646 _89670 _89671 _89672 P f x y x' t)). Qed.
Lemma lem3458006 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (f : type1524 _89646 _89670 _89671 _89672) (x : _89672) (y : _89671) (x' : _89646) (t : _89646 -> Prop) : (term140 _89646 _89670 _89671 _89672 P f x y x' t) = (term157 _89646 _89670 _89671 _89672 P f x y x' t).
Proof. exact (EQ_MP (@lem3458005 _89646 _89670 _89671 _89672 P f x y x' t) (@lem3457986 _89646 _89670 _89671 _89672 P f x y x' t)). Qed.
Lemma lem3458007 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (f : type1524 _89646 _89670 _89671 _89672) (x : _89672) (x' : _89646) (t : _89646 -> Prop) : (term142 _89646 _89670 _89671 _89672 P f x x' t) = (term158 _89646 _89670 _89671 _89672 P f x x' t).
Proof. exact (fun_ext (fun y : _89671 => @lem3458006 _89646 _89670 _89671 _89672 P f x y x' t)). Qed.
Lemma lem3458008 {_89671 : Type'} : (@ex _89671) = (@ex _89671).
Proof. exact (eq_refl (@ex _89671)). Qed.
Lemma lem3458009 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (f : type1524 _89646 _89670 _89671 _89672) (x : _89672) (x' : _89646) (t : _89646 -> Prop) : (term143 _89646 _89670 _89671 _89672 P f x x' t) = (term159 _89646 _89670 _89671 _89672 P f x x' t).
Proof. exact (MK_COMB (@lem3458008 _89671) (@lem3458007 _89646 _89670 _89671 _89672 P f x x' t)). Qed.
Lemma lem3458010 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (f : type1524 _89646 _89670 _89671 _89672) (x : _89672) (x' : _89646) (t : _89646 -> Prop) : (term126 _89646 _89670 _89671 _89672 P f x x' t) = (term159 _89646 _89670 _89671 _89672 P f x x' t).
Proof. exact (TRANS (@lem3457982 _89646 _89670 _89671 _89672 P f x x' t) (@lem3458009 _89646 _89670 _89671 _89672 P f x x' t)). Qed.
Lemma lem3458011 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (f : type1524 _89646 _89670 _89671 _89672) (x : _89646) (t : _89646 -> Prop) : (term128 _89646 _89670 _89671 _89672 P f x t) = (term160 _89646 _89670 _89671 _89672 P f x t).
Proof. exact (fun_ext (fun x' : _89672 => @lem3458010 _89646 _89670 _89671 _89672 P f x' x t)). Qed.
Lemma lem3458012 {_89672 : Type'} : (@ex _89672) = (@ex _89672).
Proof. exact (eq_refl (@ex _89672)). Qed.
Lemma lem3458013 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (f : type1524 _89646 _89670 _89671 _89672) (x : _89646) (t : _89646 -> Prop) : (term129 _89646 _89670 _89671 _89672 P f x t) = (term161 _89646 _89670 _89671 _89672 P f x t).
Proof. exact (MK_COMB (@lem3458012 _89672) (@lem3458011 _89646 _89670 _89671 _89672 P f x t)). Qed.
Lemma lem3458014 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (f : type1524 _89646 _89670 _89671 _89672) (x : _89646) (t : _89646 -> Prop) : (term32 _89646 _89670 _89671 _89672 P f x t) = (term161 _89646 _89670 _89671 _89672 P f x t).
Proof. exact (TRANS (@lem3457958 _89646 _89670 _89671 _89672 P f x t) (@lem3458013 _89646 _89670 _89671 _89672 P f x t)). Qed.
Lemma lem3458015 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (f : type1524 _89646 _89670 _89671 _89672) (x : _89646) : (term33 _89646 _89670 _89671 _89672 P f x) = (term162 _89646 _89670 _89671 _89672 P f x).
Proof. exact (fun_ext (fun t : _89646 -> Prop => @lem3458014 _89646 _89670 _89671 _89672 P f x t)). Qed.
Lemma lem3458016 {_89646 : Type'} : (@ex (_89646 -> Prop)) = (@ex (_89646 -> Prop)).
Proof. exact (eq_refl (@ex (_89646 -> Prop))). Qed.
Lemma lem3458017 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (f : type1524 _89646 _89670 _89671 _89672) (x : _89646) : (term34 _89646 _89670 _89671 _89672 P f x) = (term163 _89646 _89670 _89671 _89672 P f x).
Proof. exact (MK_COMB (@lem3458016 _89646) (@lem3458015 _89646 _89670 _89671 _89672 P f x)). Qed.
Lemma lem3458018 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3458019 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (f : type1524 _89646 _89670 _89671 _89672) (x : _89646) : (term107 _89646 _89670 _89671 _89672 P f x) = (term164 _89646 _89670 _89671 _89672 P f x).
Proof. exact (MK_COMB (@lem3458018) (@lem3458017 _89646 _89670 _89671 _89672 P f x)). Qed.
Lemma lem3458020 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) : (term102 _89646 _89670 _89671 _89672 P x f) = (term102 _89646 _89670 _89671 _89672 P x f).
Proof. exact (eq_refl (term102 _89646 _89670 _89671 _89672 P x f)). Qed.
Lemma lem3458021 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) : (term109 _89646 _89670 _89671 _89672 P x f) = (term165 _89646 _89670 _89671 _89672 P x f).
Proof. exact (MK_COMB (@lem3458019 _89646 _89670 _89671 _89672 P f x) (@lem3458020 _89646 _89670 _89671 _89672 P x f)). Qed.
Lemma lem3458023 {A : Type'} (P : A -> Prop) (Q : Prop) : (term114 A P Q) = (term115 A P Q).
Proof. exact (EQ_MP (@lem18923 A P Q) (@lem18922 A P Q)). Qed.
Lemma lem3458024 {_89646 : Type'} (P : type686 _89646) (Q : Prop) : (term166 _89646 P Q) = (term167 _89646 P Q).
Proof. exact (@lem3458023 (_89646 -> Prop) P Q). Qed.
Lemma lem3458025 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) : (term168 _89646 _89670 _89671 _89672 P x f) = (term169 _89646 _89670 _89671 _89672 P x f).
Proof. exact (@lem3458024 _89646 (term162 _89646 _89670 _89671 _89672 P f x) (term102 _89646 _89670 _89671 _89672 P x f)). Qed.
Lemma lem3458026 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (f : type1524 _89646 _89670 _89671 _89672) (x : _89646) (t : _89646 -> Prop) : (term170 _89646 _89670 _89671 _89672 P f x t) = (term161 _89646 _89670 _89671 _89672 P f x t).
Proof. exact (eq_refl (term170 _89646 _89670 _89671 _89672 P f x t)). Qed.
Lemma lem3458027 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (f : type1524 _89646 _89670 _89671 _89672) (x : _89646) : (term171 _89646 _89670 _89671 _89672 P f x) = (term162 _89646 _89670 _89671 _89672 P f x).
Proof. exact (fun_ext (fun t : _89646 -> Prop => @lem3458026 _89646 _89670 _89671 _89672 P f x t)). Qed.
Lemma lem3458028 {_89646 : Type'} : (@ex (_89646 -> Prop)) = (@ex (_89646 -> Prop)).
Proof. exact (eq_refl (@ex (_89646 -> Prop))). Qed.
Lemma lem3458029 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (f : type1524 _89646 _89670 _89671 _89672) (x : _89646) : (term172 _89646 _89670 _89671 _89672 P f x) = (term163 _89646 _89670 _89671 _89672 P f x).
Proof. exact (MK_COMB (@lem3458028 _89646) (@lem3458027 _89646 _89670 _89671 _89672 P f x)). Qed.
Lemma lem3458030 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3458031 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (f : type1524 _89646 _89670 _89671 _89672) (x : _89646) : (term173 _89646 _89670 _89671 _89672 P f x) = (term164 _89646 _89670 _89671 _89672 P f x).
Proof. exact (MK_COMB (@lem3458030) (@lem3458029 _89646 _89670 _89671 _89672 P f x)). Qed.
Lemma lem3458032 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) : (term102 _89646 _89670 _89671 _89672 P x f) = (term102 _89646 _89670 _89671 _89672 P x f).
Proof. exact (eq_refl (term102 _89646 _89670 _89671 _89672 P x f)). Qed.
Lemma lem3458033 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) : (term168 _89646 _89670 _89671 _89672 P x f) = (term165 _89646 _89670 _89671 _89672 P x f).
Proof. exact (MK_COMB (@lem3458031 _89646 _89670 _89671 _89672 P f x) (@lem3458032 _89646 _89670 _89671 _89672 P x f)). Qed.
Lemma lem3458034 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3458035 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) : (term174 _89646 _89670 _89671 _89672 P x f) = (term175 _89646 _89670 _89671 _89672 P x f).
Proof. exact (MK_COMB (@lem3458034) (@lem3458033 _89646 _89670 _89671 _89672 P x f)). Qed.
Lemma lem3458036 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (f : type1524 _89646 _89670 _89671 _89672) (x : _89646) (t : _89646 -> Prop) : (term170 _89646 _89670 _89671 _89672 P f x t) = (term161 _89646 _89670 _89671 _89672 P f x t).
Proof. exact (eq_refl (term170 _89646 _89670 _89671 _89672 P f x t)). Qed.
Lemma lem3458037 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3458038 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (f : type1524 _89646 _89670 _89671 _89672) (x : _89646) (t : _89646 -> Prop) : (term176 _89646 _89670 _89671 _89672 P f x t) = (term177 _89646 _89670 _89671 _89672 P f x t).
Proof. exact (MK_COMB (@lem3458037) (@lem3458036 _89646 _89670 _89671 _89672 P f x t)). Qed.
Lemma lem3458039 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) : (term102 _89646 _89670 _89671 _89672 P x f) = (term102 _89646 _89670 _89671 _89672 P x f).
Proof. exact (eq_refl (term102 _89646 _89670 _89671 _89672 P x f)). Qed.
Lemma lem3458040 {_89646 _89670 _89671 _89672 : Type'} (t : _89646 -> Prop) (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) : (term178 _89646 _89670 _89671 _89672 t P x f) = (term179 _89646 _89670 _89671 _89672 t P x f).
Proof. exact (MK_COMB (@lem3458038 _89646 _89670 _89671 _89672 P f x t) (@lem3458039 _89646 _89670 _89671 _89672 P x f)). Qed.
Lemma lem3458041 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) : (term180 _89646 _89670 _89671 _89672 P x f) = (term181 _89646 _89670 _89671 _89672 P x f).
Proof. exact (fun_ext (fun t : _89646 -> Prop => @lem3458040 _89646 _89670 _89671 _89672 t P x f)). Qed.
Lemma lem3458042 {_89646 : Type'} : (@ex (_89646 -> Prop)) = (@ex (_89646 -> Prop)).
Proof. exact (eq_refl (@ex (_89646 -> Prop))). Qed.
Lemma lem3458043 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) : (term169 _89646 _89670 _89671 _89672 P x f) = (term182 _89646 _89670 _89671 _89672 P x f).
Proof. exact (MK_COMB (@lem3458042 _89646) (@lem3458041 _89646 _89670 _89671 _89672 P x f)). Qed.
Lemma lem3458044 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) : ((term168 _89646 _89670 _89671 _89672 P x f) = (term169 _89646 _89670 _89671 _89672 P x f)) = ((term165 _89646 _89670 _89671 _89672 P x f) = (term182 _89646 _89670 _89671 _89672 P x f)).
Proof. exact (MK_COMB (@lem3458035 _89646 _89670 _89671 _89672 P x f) (@lem3458043 _89646 _89670 _89671 _89672 P x f)). Qed.
Lemma lem3458045 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) : (term165 _89646 _89670 _89671 _89672 P x f) = (term182 _89646 _89670 _89671 _89672 P x f).
Proof. exact (EQ_MP (@lem3458044 _89646 _89670 _89671 _89672 P x f) (@lem3458025 _89646 _89670 _89671 _89672 P x f)). Qed.
Lemma lem3458047 {A : Type'} (P : A -> Prop) (Q : Prop) : (term114 A P Q) = (term115 A P Q).
Proof. exact (EQ_MP (@lem18923 A P Q) (@lem18922 A P Q)). Qed.
Lemma lem3458048 {_89672 : Type'} (P : _89672 -> Prop) (Q : Prop) : (term114 _89672 P Q) = (term115 _89672 P Q).
Proof. exact (@lem3458047 _89672 P Q). Qed.
Lemma lem3458049 {_89646 _89670 _89671 _89672 : Type'} (t : _89646 -> Prop) (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) : (term183 _89646 _89670 _89671 _89672 t P x f) = (term184 _89646 _89670 _89671 _89672 t P x f).
Proof. exact (@lem3458048 _89672 (term160 _89646 _89670 _89671 _89672 P f x t) (term102 _89646 _89670 _89671 _89672 P x f)). Qed.
Lemma lem3458050 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (f : type1524 _89646 _89670 _89671 _89672) (x : _89672) (x' : _89646) (t : _89646 -> Prop) : (term185 _89646 _89670 _89671 _89672 P f x' t x) = (term159 _89646 _89670 _89671 _89672 P f x x' t).
Proof. exact (eq_refl (term185 _89646 _89670 _89671 _89672 P f x' t x)). Qed.
Lemma lem3458051 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (f : type1524 _89646 _89670 _89671 _89672) (x : _89646) (t : _89646 -> Prop) : (term186 _89646 _89670 _89671 _89672 P f x t) = (term160 _89646 _89670 _89671 _89672 P f x t).
Proof. exact (fun_ext (fun x' : _89672 => @lem3458050 _89646 _89670 _89671 _89672 P f x' x t)). Qed.
Lemma lem3458052 {_89672 : Type'} : (@ex _89672) = (@ex _89672).
Proof. exact (eq_refl (@ex _89672)). Qed.
Lemma lem3458053 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (f : type1524 _89646 _89670 _89671 _89672) (x : _89646) (t : _89646 -> Prop) : (term187 _89646 _89670 _89671 _89672 P f x t) = (term161 _89646 _89670 _89671 _89672 P f x t).
Proof. exact (MK_COMB (@lem3458052 _89672) (@lem3458051 _89646 _89670 _89671 _89672 P f x t)). Qed.
Lemma lem3458054 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3458055 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (f : type1524 _89646 _89670 _89671 _89672) (x : _89646) (t : _89646 -> Prop) : (term188 _89646 _89670 _89671 _89672 P f x t) = (term177 _89646 _89670 _89671 _89672 P f x t).
Proof. exact (MK_COMB (@lem3458054) (@lem3458053 _89646 _89670 _89671 _89672 P f x t)). Qed.
Lemma lem3458056 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) : (term102 _89646 _89670 _89671 _89672 P x f) = (term102 _89646 _89670 _89671 _89672 P x f).
Proof. exact (eq_refl (term102 _89646 _89670 _89671 _89672 P x f)). Qed.
Lemma lem3458057 {_89646 _89670 _89671 _89672 : Type'} (t : _89646 -> Prop) (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) : (term183 _89646 _89670 _89671 _89672 t P x f) = (term179 _89646 _89670 _89671 _89672 t P x f).
Proof. exact (MK_COMB (@lem3458055 _89646 _89670 _89671 _89672 P f x t) (@lem3458056 _89646 _89670 _89671 _89672 P x f)). Qed.
Lemma lem3458058 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3458059 {_89646 _89670 _89671 _89672 : Type'} (t : _89646 -> Prop) (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) : (term189 _89646 _89670 _89671 _89672 t P x f) = (term190 _89646 _89670 _89671 _89672 t P x f).
Proof. exact (MK_COMB (@lem3458058) (@lem3458057 _89646 _89670 _89671 _89672 t P x f)). Qed.
Lemma lem3458060 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (f : type1524 _89646 _89670 _89671 _89672) (x : _89672) (x' : _89646) (t : _89646 -> Prop) : (term185 _89646 _89670 _89671 _89672 P f x' t x) = (term159 _89646 _89670 _89671 _89672 P f x x' t).
Proof. exact (eq_refl (term185 _89646 _89670 _89671 _89672 P f x' t x)). Qed.
Lemma lem3458061 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3458062 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (f : type1524 _89646 _89670 _89671 _89672) (x : _89672) (x' : _89646) (t : _89646 -> Prop) : (term191 _89646 _89670 _89671 _89672 P f x' t x) = (term192 _89646 _89670 _89671 _89672 P f x x' t).
Proof. exact (MK_COMB (@lem3458061) (@lem3458060 _89646 _89670 _89671 _89672 P f x x' t)). Qed.
Lemma lem3458063 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) : (term102 _89646 _89670 _89671 _89672 P x f) = (term102 _89646 _89670 _89671 _89672 P x f).
Proof. exact (eq_refl (term102 _89646 _89670 _89671 _89672 P x f)). Qed.
Lemma lem3458064 {_89646 _89670 _89671 _89672 : Type'} (x : _89672) (t : _89646 -> Prop) (P : type1517 _89670 _89671 _89672) (x' : _89646) (f : type1524 _89646 _89670 _89671 _89672) : (term193 _89646 _89670 _89671 _89672 t x P x' f) = (term194 _89646 _89670 _89671 _89672 x t P x' f).
Proof. exact (MK_COMB (@lem3458062 _89646 _89670 _89671 _89672 P f x x' t) (@lem3458063 _89646 _89670 _89671 _89672 P x' f)). Qed.
Lemma lem3458065 {_89646 _89670 _89671 _89672 : Type'} (t : _89646 -> Prop) (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) : (term195 _89646 _89670 _89671 _89672 t P x f) = (term196 _89646 _89670 _89671 _89672 t P x f).
Proof. exact (fun_ext (fun x' : _89672 => @lem3458064 _89646 _89670 _89671 _89672 x' t P x f)). Qed.
Lemma lem3458066 {_89672 : Type'} : (@ex _89672) = (@ex _89672).
Proof. exact (eq_refl (@ex _89672)). Qed.
Lemma lem3458067 {_89646 _89670 _89671 _89672 : Type'} (t : _89646 -> Prop) (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) : (term184 _89646 _89670 _89671 _89672 t P x f) = (term197 _89646 _89670 _89671 _89672 t P x f).
Proof. exact (MK_COMB (@lem3458066 _89672) (@lem3458065 _89646 _89670 _89671 _89672 t P x f)). Qed.
Lemma lem3458068 {_89646 _89670 _89671 _89672 : Type'} (t : _89646 -> Prop) (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) : ((term183 _89646 _89670 _89671 _89672 t P x f) = (term184 _89646 _89670 _89671 _89672 t P x f)) = ((term179 _89646 _89670 _89671 _89672 t P x f) = (term197 _89646 _89670 _89671 _89672 t P x f)).
Proof. exact (MK_COMB (@lem3458059 _89646 _89670 _89671 _89672 t P x f) (@lem3458067 _89646 _89670 _89671 _89672 t P x f)). Qed.
Lemma lem3458069 {_89646 _89670 _89671 _89672 : Type'} (t : _89646 -> Prop) (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) : (term179 _89646 _89670 _89671 _89672 t P x f) = (term197 _89646 _89670 _89671 _89672 t P x f).
Proof. exact (EQ_MP (@lem3458068 _89646 _89670 _89671 _89672 t P x f) (@lem3458049 _89646 _89670 _89671 _89672 t P x f)). Qed.
Lemma lem3458071 {A : Type'} (P : A -> Prop) (Q : Prop) : (term114 A P Q) = (term115 A P Q).
Proof. exact (EQ_MP (@lem18923 A P Q) (@lem18922 A P Q)). Qed.
Lemma lem3458072 {_89671 : Type'} (P : _89671 -> Prop) (Q : Prop) : (term114 _89671 P Q) = (term115 _89671 P Q).
Proof. exact (@lem3458071 _89671 P Q). Qed.
Lemma lem3458073 {_89646 _89670 _89671 _89672 : Type'} (x : _89672) (t : _89646 -> Prop) (P : type1517 _89670 _89671 _89672) (x' : _89646) (f : type1524 _89646 _89670 _89671 _89672) : (term198 _89646 _89670 _89671 _89672 x t P x' f) = (term199 _89646 _89670 _89671 _89672 x t P x' f).
Proof. exact (@lem3458072 _89671 (term158 _89646 _89670 _89671 _89672 P f x x' t) (term102 _89646 _89670 _89671 _89672 P x' f)). Qed.
Lemma lem3458074 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (f : type1524 _89646 _89670 _89671 _89672) (x : _89672) (y : _89671) (x' : _89646) (t : _89646 -> Prop) : (term200 _89646 _89670 _89671 _89672 P f x x' t y) = (term157 _89646 _89670 _89671 _89672 P f x y x' t).
Proof. exact (eq_refl (term200 _89646 _89670 _89671 _89672 P f x x' t y)). Qed.
Lemma lem3458075 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (f : type1524 _89646 _89670 _89671 _89672) (x : _89672) (x' : _89646) (t : _89646 -> Prop) : (term201 _89646 _89670 _89671 _89672 P f x x' t) = (term158 _89646 _89670 _89671 _89672 P f x x' t).
Proof. exact (fun_ext (fun y : _89671 => @lem3458074 _89646 _89670 _89671 _89672 P f x y x' t)). Qed.
Lemma lem3458076 {_89671 : Type'} : (@ex _89671) = (@ex _89671).
Proof. exact (eq_refl (@ex _89671)). Qed.
Lemma lem3458077 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (f : type1524 _89646 _89670 _89671 _89672) (x : _89672) (x' : _89646) (t : _89646 -> Prop) : (term202 _89646 _89670 _89671 _89672 P f x x' t) = (term159 _89646 _89670 _89671 _89672 P f x x' t).
Proof. exact (MK_COMB (@lem3458076 _89671) (@lem3458075 _89646 _89670 _89671 _89672 P f x x' t)). Qed.
Lemma lem3458078 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3458079 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (f : type1524 _89646 _89670 _89671 _89672) (x : _89672) (x' : _89646) (t : _89646 -> Prop) : (term203 _89646 _89670 _89671 _89672 P f x x' t) = (term192 _89646 _89670 _89671 _89672 P f x x' t).
Proof. exact (MK_COMB (@lem3458078) (@lem3458077 _89646 _89670 _89671 _89672 P f x x' t)). Qed.
Lemma lem3458080 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) : (term102 _89646 _89670 _89671 _89672 P x f) = (term102 _89646 _89670 _89671 _89672 P x f).
Proof. exact (eq_refl (term102 _89646 _89670 _89671 _89672 P x f)). Qed.
Lemma lem3458081 {_89646 _89670 _89671 _89672 : Type'} (x : _89672) (t : _89646 -> Prop) (P : type1517 _89670 _89671 _89672) (x' : _89646) (f : type1524 _89646 _89670 _89671 _89672) : (term198 _89646 _89670 _89671 _89672 x t P x' f) = (term194 _89646 _89670 _89671 _89672 x t P x' f).
Proof. exact (MK_COMB (@lem3458079 _89646 _89670 _89671 _89672 P f x x' t) (@lem3458080 _89646 _89670 _89671 _89672 P x' f)). Qed.
Lemma lem3458082 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3458083 {_89646 _89670 _89671 _89672 : Type'} (x : _89672) (t : _89646 -> Prop) (P : type1517 _89670 _89671 _89672) (x' : _89646) (f : type1524 _89646 _89670 _89671 _89672) : (term204 _89646 _89670 _89671 _89672 x t P x' f) = (term205 _89646 _89670 _89671 _89672 x t P x' f).
Proof. exact (MK_COMB (@lem3458082) (@lem3458081 _89646 _89670 _89671 _89672 x t P x' f)). Qed.
Lemma lem3458084 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (f : type1524 _89646 _89670 _89671 _89672) (x : _89672) (y : _89671) (x' : _89646) (t : _89646 -> Prop) : (term200 _89646 _89670 _89671 _89672 P f x x' t y) = (term157 _89646 _89670 _89671 _89672 P f x y x' t).
Proof. exact (eq_refl (term200 _89646 _89670 _89671 _89672 P f x x' t y)). Qed.
Lemma lem3458085 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3458086 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (f : type1524 _89646 _89670 _89671 _89672) (x : _89672) (y : _89671) (x' : _89646) (t : _89646 -> Prop) : (term206 _89646 _89670 _89671 _89672 P f x x' t y) = (term207 _89646 _89670 _89671 _89672 P f x y x' t).
Proof. exact (MK_COMB (@lem3458085) (@lem3458084 _89646 _89670 _89671 _89672 P f x y x' t)). Qed.
Lemma lem3458087 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) : (term102 _89646 _89670 _89671 _89672 P x f) = (term102 _89646 _89670 _89671 _89672 P x f).
Proof. exact (eq_refl (term102 _89646 _89670 _89671 _89672 P x f)). Qed.
Lemma lem3458088 {_89646 _89670 _89671 _89672 : Type'} (x : _89672) (y : _89671) (t : _89646 -> Prop) (P : type1517 _89670 _89671 _89672) (x' : _89646) (f : type1524 _89646 _89670 _89671 _89672) : (term208 _89646 _89670 _89671 _89672 x t y P x' f) = (term209 _89646 _89670 _89671 _89672 x y t P x' f).
Proof. exact (MK_COMB (@lem3458086 _89646 _89670 _89671 _89672 P f x y x' t) (@lem3458087 _89646 _89670 _89671 _89672 P x' f)). Qed.
Lemma lem3458089 {_89646 _89670 _89671 _89672 : Type'} (x : _89672) (t : _89646 -> Prop) (P : type1517 _89670 _89671 _89672) (x' : _89646) (f : type1524 _89646 _89670 _89671 _89672) : (term210 _89646 _89670 _89671 _89672 x t P x' f) = (term211 _89646 _89670 _89671 _89672 x t P x' f).
Proof. exact (fun_ext (fun y : _89671 => @lem3458088 _89646 _89670 _89671 _89672 x y t P x' f)). Qed.
Lemma lem3458090 {_89671 : Type'} : (@ex _89671) = (@ex _89671).
Proof. exact (eq_refl (@ex _89671)). Qed.
Lemma lem3458091 {_89646 _89670 _89671 _89672 : Type'} (x : _89672) (t : _89646 -> Prop) (P : type1517 _89670 _89671 _89672) (x' : _89646) (f : type1524 _89646 _89670 _89671 _89672) : (term199 _89646 _89670 _89671 _89672 x t P x' f) = (term212 _89646 _89670 _89671 _89672 x t P x' f).
Proof. exact (MK_COMB (@lem3458090 _89671) (@lem3458089 _89646 _89670 _89671 _89672 x t P x' f)). Qed.
Lemma lem3458092 {_89646 _89670 _89671 _89672 : Type'} (x : _89672) (t : _89646 -> Prop) (P : type1517 _89670 _89671 _89672) (x' : _89646) (f : type1524 _89646 _89670 _89671 _89672) : ((term198 _89646 _89670 _89671 _89672 x t P x' f) = (term199 _89646 _89670 _89671 _89672 x t P x' f)) = ((term194 _89646 _89670 _89671 _89672 x t P x' f) = (term212 _89646 _89670 _89671 _89672 x t P x' f)).
Proof. exact (MK_COMB (@lem3458083 _89646 _89670 _89671 _89672 x t P x' f) (@lem3458091 _89646 _89670 _89671 _89672 x t P x' f)). Qed.
Lemma lem3458093 {_89646 _89670 _89671 _89672 : Type'} (x : _89672) (t : _89646 -> Prop) (P : type1517 _89670 _89671 _89672) (x' : _89646) (f : type1524 _89646 _89670 _89671 _89672) : (term194 _89646 _89670 _89671 _89672 x t P x' f) = (term212 _89646 _89670 _89671 _89672 x t P x' f).
Proof. exact (EQ_MP (@lem3458092 _89646 _89670 _89671 _89672 x t P x' f) (@lem3458073 _89646 _89670 _89671 _89672 x t P x' f)). Qed.
Lemma lem3458095 {A : Type'} (P : A -> Prop) (Q : Prop) : (term114 A P Q) = (term115 A P Q).
Proof. exact (EQ_MP (@lem18923 A P Q) (@lem18922 A P Q)). Qed.
Lemma lem3458096 {_89670 : Type'} (P : _89670 -> Prop) (Q : Prop) : (term114 _89670 P Q) = (term115 _89670 P Q).
Proof. exact (@lem3458095 _89670 P Q). Qed.
Lemma lem3458097 {_89646 _89670 _89671 _89672 : Type'} (x : _89672) (y : _89671) (t : _89646 -> Prop) (P : type1517 _89670 _89671 _89672) (x' : _89646) (f : type1524 _89646 _89670 _89671 _89672) : (term213 _89646 _89670 _89671 _89672 x y t P x' f) = (term214 _89646 _89670 _89671 _89672 x y t P x' f).
Proof. exact (@lem3458096 _89670 (term156 _89646 _89670 _89671 _89672 P f x y x' t) (term102 _89646 _89670 _89671 _89672 P x' f)). Qed.
Lemma lem3458098 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (f : type1524 _89646 _89670 _89671 _89672) (x : _89672) (y : _89671) (z : _89670) (x' : _89646) (t : _89646 -> Prop) : (term215 _89646 _89670 _89671 _89672 P f x y x' t z) = (term154 _89646 _89670 _89671 _89672 P f x y z x' t).
Proof. exact (eq_refl (term215 _89646 _89670 _89671 _89672 P f x y x' t z)). Qed.
Lemma lem3458099 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (f : type1524 _89646 _89670 _89671 _89672) (x : _89672) (y : _89671) (x' : _89646) (t : _89646 -> Prop) : (term216 _89646 _89670 _89671 _89672 P f x y x' t) = (term156 _89646 _89670 _89671 _89672 P f x y x' t).
Proof. exact (fun_ext (fun z : _89670 => @lem3458098 _89646 _89670 _89671 _89672 P f x y z x' t)). Qed.
Lemma lem3458100 {_89670 : Type'} : (@ex _89670) = (@ex _89670).
Proof. exact (eq_refl (@ex _89670)). Qed.
Lemma lem3458101 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (f : type1524 _89646 _89670 _89671 _89672) (x : _89672) (y : _89671) (x' : _89646) (t : _89646 -> Prop) : (term217 _89646 _89670 _89671 _89672 P f x y x' t) = (term157 _89646 _89670 _89671 _89672 P f x y x' t).
Proof. exact (MK_COMB (@lem3458100 _89670) (@lem3458099 _89646 _89670 _89671 _89672 P f x y x' t)). Qed.
Lemma lem3458102 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3458103 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (f : type1524 _89646 _89670 _89671 _89672) (x : _89672) (y : _89671) (x' : _89646) (t : _89646 -> Prop) : (term218 _89646 _89670 _89671 _89672 P f x y x' t) = (term207 _89646 _89670 _89671 _89672 P f x y x' t).
Proof. exact (MK_COMB (@lem3458102) (@lem3458101 _89646 _89670 _89671 _89672 P f x y x' t)). Qed.
Lemma lem3458104 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) : (term102 _89646 _89670 _89671 _89672 P x f) = (term102 _89646 _89670 _89671 _89672 P x f).
Proof. exact (eq_refl (term102 _89646 _89670 _89671 _89672 P x f)). Qed.
Lemma lem3458105 {_89646 _89670 _89671 _89672 : Type'} (x : _89672) (y : _89671) (t : _89646 -> Prop) (P : type1517 _89670 _89671 _89672) (x' : _89646) (f : type1524 _89646 _89670 _89671 _89672) : (term213 _89646 _89670 _89671 _89672 x y t P x' f) = (term209 _89646 _89670 _89671 _89672 x y t P x' f).
Proof. exact (MK_COMB (@lem3458103 _89646 _89670 _89671 _89672 P f x y x' t) (@lem3458104 _89646 _89670 _89671 _89672 P x' f)). Qed.
Lemma lem3458106 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3458107 {_89646 _89670 _89671 _89672 : Type'} (x : _89672) (y : _89671) (t : _89646 -> Prop) (P : type1517 _89670 _89671 _89672) (x' : _89646) (f : type1524 _89646 _89670 _89671 _89672) : (term219 _89646 _89670 _89671 _89672 x y t P x' f) = (term220 _89646 _89670 _89671 _89672 x y t P x' f).
Proof. exact (MK_COMB (@lem3458106) (@lem3458105 _89646 _89670 _89671 _89672 x y t P x' f)). Qed.
Lemma lem3458108 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (f : type1524 _89646 _89670 _89671 _89672) (x : _89672) (y : _89671) (z : _89670) (x' : _89646) (t : _89646 -> Prop) : (term215 _89646 _89670 _89671 _89672 P f x y x' t z) = (term154 _89646 _89670 _89671 _89672 P f x y z x' t).
Proof. exact (eq_refl (term215 _89646 _89670 _89671 _89672 P f x y x' t z)). Qed.
Lemma lem3458109 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3458110 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (f : type1524 _89646 _89670 _89671 _89672) (x : _89672) (y : _89671) (z : _89670) (x' : _89646) (t : _89646 -> Prop) : (term221 _89646 _89670 _89671 _89672 P f x y x' t z) = (term222 _89646 _89670 _89671 _89672 P f x y z x' t).
Proof. exact (MK_COMB (@lem3458109) (@lem3458108 _89646 _89670 _89671 _89672 P f x y z x' t)). Qed.
Lemma lem3458111 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) : (term102 _89646 _89670 _89671 _89672 P x f) = (term102 _89646 _89670 _89671 _89672 P x f).
Proof. exact (eq_refl (term102 _89646 _89670 _89671 _89672 P x f)). Qed.
Lemma lem3458112 {_89646 _89670 _89671 _89672 : Type'} (x : _89672) (y : _89671) (z : _89670) (t : _89646 -> Prop) (P : type1517 _89670 _89671 _89672) (x' : _89646) (f : type1524 _89646 _89670 _89671 _89672) : (term223 _89646 _89670 _89671 _89672 x y t z P x' f) = (term224 _89646 _89670 _89671 _89672 x y z t P x' f).
Proof. exact (MK_COMB (@lem3458110 _89646 _89670 _89671 _89672 P f x y z x' t) (@lem3458111 _89646 _89670 _89671 _89672 P x' f)). Qed.
Lemma lem3458113 {_89646 _89670 _89671 _89672 : Type'} (x : _89672) (y : _89671) (t : _89646 -> Prop) (P : type1517 _89670 _89671 _89672) (x' : _89646) (f : type1524 _89646 _89670 _89671 _89672) : (term225 _89646 _89670 _89671 _89672 x y t P x' f) = (term226 _89646 _89670 _89671 _89672 x y t P x' f).
Proof. exact (fun_ext (fun z : _89670 => @lem3458112 _89646 _89670 _89671 _89672 x y z t P x' f)). Qed.
Lemma lem3458114 {_89670 : Type'} : (@ex _89670) = (@ex _89670).
Proof. exact (eq_refl (@ex _89670)). Qed.
Lemma lem3458115 {_89646 _89670 _89671 _89672 : Type'} (x : _89672) (y : _89671) (t : _89646 -> Prop) (P : type1517 _89670 _89671 _89672) (x' : _89646) (f : type1524 _89646 _89670 _89671 _89672) : (term214 _89646 _89670 _89671 _89672 x y t P x' f) = (term227 _89646 _89670 _89671 _89672 x y t P x' f).
Proof. exact (MK_COMB (@lem3458114 _89670) (@lem3458113 _89646 _89670 _89671 _89672 x y t P x' f)). Qed.
Lemma lem3458116 {_89646 _89670 _89671 _89672 : Type'} (x : _89672) (y : _89671) (t : _89646 -> Prop) (P : type1517 _89670 _89671 _89672) (x' : _89646) (f : type1524 _89646 _89670 _89671 _89672) : ((term213 _89646 _89670 _89671 _89672 x y t P x' f) = (term214 _89646 _89670 _89671 _89672 x y t P x' f)) = ((term209 _89646 _89670 _89671 _89672 x y t P x' f) = (term227 _89646 _89670 _89671 _89672 x y t P x' f)).
Proof. exact (MK_COMB (@lem3458107 _89646 _89670 _89671 _89672 x y t P x' f) (@lem3458115 _89646 _89670 _89671 _89672 x y t P x' f)). Qed.
Lemma lem3458117 {_89646 _89670 _89671 _89672 : Type'} (x : _89672) (y : _89671) (t : _89646 -> Prop) (P : type1517 _89670 _89671 _89672) (x' : _89646) (f : type1524 _89646 _89670 _89671 _89672) : (term209 _89646 _89670 _89671 _89672 x y t P x' f) = (term227 _89646 _89670 _89671 _89672 x y t P x' f).
Proof. exact (EQ_MP (@lem3458116 _89646 _89670 _89671 _89672 x y t P x' f) (@lem3458097 _89646 _89670 _89671 _89672 x y t P x' f)). Qed.
Lemma lem3458118 {_89646 _89670 _89671 _89672 : Type'} (x : _89672) (t : _89646 -> Prop) (P : type1517 _89670 _89671 _89672) (x' : _89646) (f : type1524 _89646 _89670 _89671 _89672) : (term211 _89646 _89670 _89671 _89672 x t P x' f) = (term228 _89646 _89670 _89671 _89672 x t P x' f).
Proof. exact (fun_ext (fun y : _89671 => @lem3458117 _89646 _89670 _89671 _89672 x y t P x' f)). Qed.
Lemma lem3458119 {_89671 : Type'} : (@ex _89671) = (@ex _89671).
Proof. exact (eq_refl (@ex _89671)). Qed.
Lemma lem3458120 {_89646 _89670 _89671 _89672 : Type'} (x : _89672) (t : _89646 -> Prop) (P : type1517 _89670 _89671 _89672) (x' : _89646) (f : type1524 _89646 _89670 _89671 _89672) : (term212 _89646 _89670 _89671 _89672 x t P x' f) = (term229 _89646 _89670 _89671 _89672 x t P x' f).
Proof. exact (MK_COMB (@lem3458119 _89671) (@lem3458118 _89646 _89670 _89671 _89672 x t P x' f)). Qed.
Lemma lem3458121 {_89646 _89670 _89671 _89672 : Type'} (x : _89672) (t : _89646 -> Prop) (P : type1517 _89670 _89671 _89672) (x' : _89646) (f : type1524 _89646 _89670 _89671 _89672) : (term194 _89646 _89670 _89671 _89672 x t P x' f) = (term229 _89646 _89670 _89671 _89672 x t P x' f).
Proof. exact (TRANS (@lem3458093 _89646 _89670 _89671 _89672 x t P x' f) (@lem3458120 _89646 _89670 _89671 _89672 x t P x' f)). Qed.
Lemma lem3458122 {_89646 _89670 _89671 _89672 : Type'} (t : _89646 -> Prop) (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) : (term196 _89646 _89670 _89671 _89672 t P x f) = (term230 _89646 _89670 _89671 _89672 t P x f).
Proof. exact (fun_ext (fun x' : _89672 => @lem3458121 _89646 _89670 _89671 _89672 x' t P x f)). Qed.
Lemma lem3458123 {_89672 : Type'} : (@ex _89672) = (@ex _89672).
Proof. exact (eq_refl (@ex _89672)). Qed.
Lemma lem3458124 {_89646 _89670 _89671 _89672 : Type'} (t : _89646 -> Prop) (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) : (term197 _89646 _89670 _89671 _89672 t P x f) = (term231 _89646 _89670 _89671 _89672 t P x f).
Proof. exact (MK_COMB (@lem3458123 _89672) (@lem3458122 _89646 _89670 _89671 _89672 t P x f)). Qed.
Lemma lem3458125 {_89646 _89670 _89671 _89672 : Type'} (t : _89646 -> Prop) (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) : (term179 _89646 _89670 _89671 _89672 t P x f) = (term231 _89646 _89670 _89671 _89672 t P x f).
Proof. exact (TRANS (@lem3458069 _89646 _89670 _89671 _89672 t P x f) (@lem3458124 _89646 _89670 _89671 _89672 t P x f)). Qed.
Lemma lem3458126 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) : (term181 _89646 _89670 _89671 _89672 P x f) = (term232 _89646 _89670 _89671 _89672 P x f).
Proof. exact (fun_ext (fun t : _89646 -> Prop => @lem3458125 _89646 _89670 _89671 _89672 t P x f)). Qed.
Lemma lem3458127 {_89646 : Type'} : (@ex (_89646 -> Prop)) = (@ex (_89646 -> Prop)).
Proof. exact (eq_refl (@ex (_89646 -> Prop))). Qed.
Lemma lem3458128 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) : (term182 _89646 _89670 _89671 _89672 P x f) = (term233 _89646 _89670 _89671 _89672 P x f).
Proof. exact (MK_COMB (@lem3458127 _89646) (@lem3458126 _89646 _89670 _89671 _89672 P x f)). Qed.
Lemma lem3458129 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) : (term165 _89646 _89670 _89671 _89672 P x f) = (term233 _89646 _89670 _89671 _89672 P x f).
Proof. exact (TRANS (@lem3458045 _89646 _89670 _89671 _89672 P x f) (@lem3458128 _89646 _89670 _89671 _89672 P x f)). Qed.
Lemma lem3458130 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) : (term109 _89646 _89670 _89671 _89672 P x f) = (term233 _89646 _89670 _89671 _89672 P x f).
Proof. exact (TRANS (@lem3458021 _89646 _89670 _89671 _89672 P x f) (@lem3458129 _89646 _89670 _89671 _89672 P x f)). Qed.
Lemma lem3458131 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem3458132 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) : (term111 _89646 _89670 _89671 _89672 P x f) = (term234 _89646 _89670 _89671 _89672 P x f).
Proof. exact (MK_COMB (@lem3458131) (@lem3458130 _89646 _89670 _89671 _89672 P x f)). Qed.
Lemma lem3458134 {A : Type'} (P : Prop) (Q : A -> Prop) : (term235 A P Q) = (term236 A P Q).
Proof. exact (EQ_MP (@lem18929 A P Q) (@lem18928 A P Q)). Qed.
Lemma lem3458135 {_89672 : Type'} (P : Prop) (Q : _89672 -> Prop) : (term235 _89672 P Q) = (term236 _89672 P Q).
Proof. exact (@lem3458134 _89672 P Q). Qed.
Lemma lem3458136 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) : (term237 _89646 _89670 _89671 _89672 P x f) = (term238 _89646 _89670 _89671 _89672 P x f).
Proof. exact (@lem3458135 _89672 (term78 _89646 _89670 _89671 _89672 P f x) (term22 _89646 _89670 _89671 _89672 P x f)). Qed.
Lemma lem3458137 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) (x' : _89672) : (term98 _89646 _89670 _89671 _89672 P x f x') = (term21 _89646 _89670 _89671 _89672 P x f x').
Proof. exact (eq_refl (term98 _89646 _89670 _89671 _89672 P x f x')). Qed.
Lemma lem3458138 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) : (term239 _89646 _89670 _89671 _89672 P x f) = (term22 _89646 _89670 _89671 _89672 P x f).
Proof. exact (fun_ext (fun x' : _89672 => @lem3458137 _89646 _89670 _89671 _89672 P x f x')). Qed.
Lemma lem3458139 {_89672 : Type'} : (@ex _89672) = (@ex _89672).
Proof. exact (eq_refl (@ex _89672)). Qed.
Lemma lem3458140 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) : (term240 _89646 _89670 _89671 _89672 P x f) = (term23 _89646 _89670 _89671 _89672 P x f).
Proof. exact (MK_COMB (@lem3458139 _89672) (@lem3458138 _89646 _89670 _89671 _89672 P x f)). Qed.
Lemma lem3458141 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (f : type1524 _89646 _89670 _89671 _89672) (x : _89646) : (term104 _89646 _89670 _89671 _89672 P f x) = (term104 _89646 _89670 _89671 _89672 P f x).
Proof. exact (eq_refl (term104 _89646 _89670 _89671 _89672 P f x)). Qed.
Lemma lem3458142 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) : (term237 _89646 _89670 _89671 _89672 P x f) = (term106 _89646 _89670 _89671 _89672 P x f).
Proof. exact (MK_COMB (@lem3458141 _89646 _89670 _89671 _89672 P f x) (@lem3458140 _89646 _89670 _89671 _89672 P x f)). Qed.
Lemma lem3458143 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3458144 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) : (term241 _89646 _89670 _89671 _89672 P x f) = (term242 _89646 _89670 _89671 _89672 P x f).
Proof. exact (MK_COMB (@lem3458143) (@lem3458142 _89646 _89670 _89671 _89672 P x f)). Qed.
Lemma lem3458145 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) (x' : _89672) : (term98 _89646 _89670 _89671 _89672 P x f x') = (term21 _89646 _89670 _89671 _89672 P x f x').
Proof. exact (eq_refl (term98 _89646 _89670 _89671 _89672 P x f x')). Qed.
Lemma lem3458146 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (f : type1524 _89646 _89670 _89671 _89672) (x : _89646) : (term104 _89646 _89670 _89671 _89672 P f x) = (term104 _89646 _89670 _89671 _89672 P f x).
Proof. exact (eq_refl (term104 _89646 _89670 _89671 _89672 P f x)). Qed.
Lemma lem3458147 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) (x' : _89672) : (term243 _89646 _89670 _89671 _89672 P x f x') = (term244 _89646 _89670 _89671 _89672 P x f x').
Proof. exact (MK_COMB (@lem3458146 _89646 _89670 _89671 _89672 P f x) (@lem3458145 _89646 _89670 _89671 _89672 P x f x')). Qed.
Lemma lem3458148 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) : (term245 _89646 _89670 _89671 _89672 P x f) = (term246 _89646 _89670 _89671 _89672 P x f).
Proof. exact (fun_ext (fun x' : _89672 => @lem3458147 _89646 _89670 _89671 _89672 P x f x')). Qed.
Lemma lem3458149 {_89672 : Type'} : (@ex _89672) = (@ex _89672).
Proof. exact (eq_refl (@ex _89672)). Qed.
Lemma lem3458150 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) : (term238 _89646 _89670 _89671 _89672 P x f) = (term247 _89646 _89670 _89671 _89672 P x f).
Proof. exact (MK_COMB (@lem3458149 _89672) (@lem3458148 _89646 _89670 _89671 _89672 P x f)). Qed.
Lemma lem3458151 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) : ((term237 _89646 _89670 _89671 _89672 P x f) = (term238 _89646 _89670 _89671 _89672 P x f)) = ((term106 _89646 _89670 _89671 _89672 P x f) = (term247 _89646 _89670 _89671 _89672 P x f)).
Proof. exact (MK_COMB (@lem3458144 _89646 _89670 _89671 _89672 P x f) (@lem3458150 _89646 _89670 _89671 _89672 P x f)). Qed.
Lemma lem3458152 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) : (term106 _89646 _89670 _89671 _89672 P x f) = (term247 _89646 _89670 _89671 _89672 P x f).
Proof. exact (EQ_MP (@lem3458151 _89646 _89670 _89671 _89672 P x f) (@lem3458136 _89646 _89670 _89671 _89672 P x f)). Qed.
Lemma lem3458154 {A : Type'} (P : Prop) (Q : A -> Prop) : (term235 A P Q) = (term236 A P Q).
Proof. exact (EQ_MP (@lem18929 A P Q) (@lem18928 A P Q)). Qed.
Lemma lem3458155 {_89671 : Type'} (P : Prop) (Q : _89671 -> Prop) : (term235 _89671 P Q) = (term236 _89671 P Q).
Proof. exact (@lem3458154 _89671 P Q). Qed.
Lemma lem3458156 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) (x' : _89672) : (term248 _89646 _89670 _89671 _89672 P x f x') = (term249 _89646 _89670 _89671 _89672 P x f x').
Proof. exact (@lem3458155 _89671 (term78 _89646 _89670 _89671 _89672 P f x) (term20 _89646 _89670 _89671 _89672 P x f x')). Qed.
Lemma lem3458157 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) (x' : _89672) (y : _89671) : (term91 _89646 _89670 _89671 _89672 P x f x' y) = (term19 _89646 _89670 _89671 _89672 P x f x' y).
Proof. exact (eq_refl (term91 _89646 _89670 _89671 _89672 P x f x' y)). Qed.
Lemma lem3458158 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) (x' : _89672) : (term250 _89646 _89670 _89671 _89672 P x f x') = (term20 _89646 _89670 _89671 _89672 P x f x').
Proof. exact (fun_ext (fun y : _89671 => @lem3458157 _89646 _89670 _89671 _89672 P x f x' y)). Qed.
Lemma lem3458159 {_89671 : Type'} : (@ex _89671) = (@ex _89671).
Proof. exact (eq_refl (@ex _89671)). Qed.
Lemma lem3458160 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) (x' : _89672) : (term251 _89646 _89670 _89671 _89672 P x f x') = (term21 _89646 _89670 _89671 _89672 P x f x').
Proof. exact (MK_COMB (@lem3458159 _89671) (@lem3458158 _89646 _89670 _89671 _89672 P x f x')). Qed.
Lemma lem3458161 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (f : type1524 _89646 _89670 _89671 _89672) (x : _89646) : (term104 _89646 _89670 _89671 _89672 P f x) = (term104 _89646 _89670 _89671 _89672 P f x).
Proof. exact (eq_refl (term104 _89646 _89670 _89671 _89672 P f x)). Qed.
Lemma lem3458162 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) (x' : _89672) : (term248 _89646 _89670 _89671 _89672 P x f x') = (term244 _89646 _89670 _89671 _89672 P x f x').
Proof. exact (MK_COMB (@lem3458161 _89646 _89670 _89671 _89672 P f x) (@lem3458160 _89646 _89670 _89671 _89672 P x f x')). Qed.
Lemma lem3458163 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3458164 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) (x' : _89672) : (term252 _89646 _89670 _89671 _89672 P x f x') = (term253 _89646 _89670 _89671 _89672 P x f x').
Proof. exact (MK_COMB (@lem3458163) (@lem3458162 _89646 _89670 _89671 _89672 P x f x')). Qed.
Lemma lem3458165 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) (x' : _89672) (y : _89671) : (term91 _89646 _89670 _89671 _89672 P x f x' y) = (term19 _89646 _89670 _89671 _89672 P x f x' y).
Proof. exact (eq_refl (term91 _89646 _89670 _89671 _89672 P x f x' y)). Qed.
Lemma lem3458166 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (f : type1524 _89646 _89670 _89671 _89672) (x : _89646) : (term104 _89646 _89670 _89671 _89672 P f x) = (term104 _89646 _89670 _89671 _89672 P f x).
Proof. exact (eq_refl (term104 _89646 _89670 _89671 _89672 P f x)). Qed.
Lemma lem3458167 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) (x' : _89672) (y : _89671) : (term254 _89646 _89670 _89671 _89672 P x f x' y) = (term255 _89646 _89670 _89671 _89672 P x f x' y).
Proof. exact (MK_COMB (@lem3458166 _89646 _89670 _89671 _89672 P f x) (@lem3458165 _89646 _89670 _89671 _89672 P x f x' y)). Qed.
Lemma lem3458168 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) (x' : _89672) : (term256 _89646 _89670 _89671 _89672 P x f x') = (term257 _89646 _89670 _89671 _89672 P x f x').
Proof. exact (fun_ext (fun y : _89671 => @lem3458167 _89646 _89670 _89671 _89672 P x f x' y)). Qed.
Lemma lem3458169 {_89671 : Type'} : (@ex _89671) = (@ex _89671).
Proof. exact (eq_refl (@ex _89671)). Qed.
Lemma lem3458170 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) (x' : _89672) : (term249 _89646 _89670 _89671 _89672 P x f x') = (term258 _89646 _89670 _89671 _89672 P x f x').
Proof. exact (MK_COMB (@lem3458169 _89671) (@lem3458168 _89646 _89670 _89671 _89672 P x f x')). Qed.
Lemma lem3458171 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) (x' : _89672) : ((term248 _89646 _89670 _89671 _89672 P x f x') = (term249 _89646 _89670 _89671 _89672 P x f x')) = ((term244 _89646 _89670 _89671 _89672 P x f x') = (term258 _89646 _89670 _89671 _89672 P x f x')).
Proof. exact (MK_COMB (@lem3458164 _89646 _89670 _89671 _89672 P x f x') (@lem3458170 _89646 _89670 _89671 _89672 P x f x')). Qed.
Lemma lem3458172 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) (x' : _89672) : (term244 _89646 _89670 _89671 _89672 P x f x') = (term258 _89646 _89670 _89671 _89672 P x f x').
Proof. exact (EQ_MP (@lem3458171 _89646 _89670 _89671 _89672 P x f x') (@lem3458156 _89646 _89670 _89671 _89672 P x f x')). Qed.
Lemma lem3458174 {A : Type'} (P : Prop) (Q : A -> Prop) : (term235 A P Q) = (term236 A P Q).
Proof. exact (EQ_MP (@lem18929 A P Q) (@lem18928 A P Q)). Qed.
Lemma lem3458175 {_89670 : Type'} (P : Prop) (Q : _89670 -> Prop) : (term235 _89670 P Q) = (term236 _89670 P Q).
Proof. exact (@lem3458174 _89670 P Q). Qed.
Lemma lem3458176 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) (x' : _89672) (y : _89671) : (term259 _89646 _89670 _89671 _89672 P x f x' y) = (term260 _89646 _89670 _89671 _89672 P x f x' y).
Proof. exact (@lem3458175 _89670 (term78 _89646 _89670 _89671 _89672 P f x) (term18 _89646 _89670 _89671 _89672 P x f x' y)). Qed.
Lemma lem3458177 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) (x' : _89672) (y : _89671) (z : _89670) : (term84 _89646 _89670 _89671 _89672 P x f x' y z) = (term17 _89646 _89670 _89671 _89672 P x f x' y z).
Proof. exact (eq_refl (term84 _89646 _89670 _89671 _89672 P x f x' y z)). Qed.
Lemma lem3458178 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) (x' : _89672) (y : _89671) : (term261 _89646 _89670 _89671 _89672 P x f x' y) = (term18 _89646 _89670 _89671 _89672 P x f x' y).
Proof. exact (fun_ext (fun z : _89670 => @lem3458177 _89646 _89670 _89671 _89672 P x f x' y z)). Qed.
Lemma lem3458179 {_89670 : Type'} : (@ex _89670) = (@ex _89670).
Proof. exact (eq_refl (@ex _89670)). Qed.
Lemma lem3458180 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) (x' : _89672) (y : _89671) : (term262 _89646 _89670 _89671 _89672 P x f x' y) = (term19 _89646 _89670 _89671 _89672 P x f x' y).
Proof. exact (MK_COMB (@lem3458179 _89670) (@lem3458178 _89646 _89670 _89671 _89672 P x f x' y)). Qed.
Lemma lem3458181 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (f : type1524 _89646 _89670 _89671 _89672) (x : _89646) : (term104 _89646 _89670 _89671 _89672 P f x) = (term104 _89646 _89670 _89671 _89672 P f x).
Proof. exact (eq_refl (term104 _89646 _89670 _89671 _89672 P f x)). Qed.
Lemma lem3458182 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) (x' : _89672) (y : _89671) : (term259 _89646 _89670 _89671 _89672 P x f x' y) = (term255 _89646 _89670 _89671 _89672 P x f x' y).
Proof. exact (MK_COMB (@lem3458181 _89646 _89670 _89671 _89672 P f x) (@lem3458180 _89646 _89670 _89671 _89672 P x f x' y)). Qed.
Lemma lem3458183 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3458184 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) (x' : _89672) (y : _89671) : (term263 _89646 _89670 _89671 _89672 P x f x' y) = (term264 _89646 _89670 _89671 _89672 P x f x' y).
Proof. exact (MK_COMB (@lem3458183) (@lem3458182 _89646 _89670 _89671 _89672 P x f x' y)). Qed.
Lemma lem3458185 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) (x' : _89672) (y : _89671) (z : _89670) : (term84 _89646 _89670 _89671 _89672 P x f x' y z) = (term17 _89646 _89670 _89671 _89672 P x f x' y z).
Proof. exact (eq_refl (term84 _89646 _89670 _89671 _89672 P x f x' y z)). Qed.
Lemma lem3458186 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (f : type1524 _89646 _89670 _89671 _89672) (x : _89646) : (term104 _89646 _89670 _89671 _89672 P f x) = (term104 _89646 _89670 _89671 _89672 P f x).
Proof. exact (eq_refl (term104 _89646 _89670 _89671 _89672 P f x)). Qed.
Lemma lem3458187 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) (x' : _89672) (y : _89671) (z : _89670) : (term265 _89646 _89670 _89671 _89672 P x f x' y z) = (term266 _89646 _89670 _89671 _89672 P x f x' y z).
Proof. exact (MK_COMB (@lem3458186 _89646 _89670 _89671 _89672 P f x) (@lem3458185 _89646 _89670 _89671 _89672 P x f x' y z)). Qed.
Lemma lem3458188 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) (x' : _89672) (y : _89671) : (term267 _89646 _89670 _89671 _89672 P x f x' y) = (term268 _89646 _89670 _89671 _89672 P x f x' y).
Proof. exact (fun_ext (fun z : _89670 => @lem3458187 _89646 _89670 _89671 _89672 P x f x' y z)). Qed.
Lemma lem3458189 {_89670 : Type'} : (@ex _89670) = (@ex _89670).
Proof. exact (eq_refl (@ex _89670)). Qed.
Lemma lem3458190 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) (x' : _89672) (y : _89671) : (term260 _89646 _89670 _89671 _89672 P x f x' y) = (term269 _89646 _89670 _89671 _89672 P x f x' y).
Proof. exact (MK_COMB (@lem3458189 _89670) (@lem3458188 _89646 _89670 _89671 _89672 P x f x' y)). Qed.
Lemma lem3458191 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) (x' : _89672) (y : _89671) : ((term259 _89646 _89670 _89671 _89672 P x f x' y) = (term260 _89646 _89670 _89671 _89672 P x f x' y)) = ((term255 _89646 _89670 _89671 _89672 P x f x' y) = (term269 _89646 _89670 _89671 _89672 P x f x' y)).
Proof. exact (MK_COMB (@lem3458184 _89646 _89670 _89671 _89672 P x f x' y) (@lem3458190 _89646 _89670 _89671 _89672 P x f x' y)). Qed.
Lemma lem3458192 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) (x' : _89672) (y : _89671) : (term255 _89646 _89670 _89671 _89672 P x f x' y) = (term269 _89646 _89670 _89671 _89672 P x f x' y).
Proof. exact (EQ_MP (@lem3458191 _89646 _89670 _89671 _89672 P x f x' y) (@lem3458176 _89646 _89670 _89671 _89672 P x f x' y)). Qed.
Lemma lem3458193 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) (x' : _89672) : (term257 _89646 _89670 _89671 _89672 P x f x') = (term270 _89646 _89670 _89671 _89672 P x f x').
Proof. exact (fun_ext (fun y : _89671 => @lem3458192 _89646 _89670 _89671 _89672 P x f x' y)). Qed.
Lemma lem3458194 {_89671 : Type'} : (@ex _89671) = (@ex _89671).
Proof. exact (eq_refl (@ex _89671)). Qed.
Lemma lem3458195 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) (x' : _89672) : (term258 _89646 _89670 _89671 _89672 P x f x') = (term271 _89646 _89670 _89671 _89672 P x f x').
Proof. exact (MK_COMB (@lem3458194 _89671) (@lem3458193 _89646 _89670 _89671 _89672 P x f x')). Qed.
Lemma lem3458196 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) (x' : _89672) : (term244 _89646 _89670 _89671 _89672 P x f x') = (term271 _89646 _89670 _89671 _89672 P x f x').
Proof. exact (TRANS (@lem3458172 _89646 _89670 _89671 _89672 P x f x') (@lem3458195 _89646 _89670 _89671 _89672 P x f x')). Qed.
Lemma lem3458197 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) : (term246 _89646 _89670 _89671 _89672 P x f) = (term272 _89646 _89670 _89671 _89672 P x f).
Proof. exact (fun_ext (fun x' : _89672 => @lem3458196 _89646 _89670 _89671 _89672 P x f x')). Qed.
Lemma lem3458198 {_89672 : Type'} : (@ex _89672) = (@ex _89672).
Proof. exact (eq_refl (@ex _89672)). Qed.
Lemma lem3458199 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) : (term247 _89646 _89670 _89671 _89672 P x f) = (term273 _89646 _89670 _89671 _89672 P x f).
Proof. exact (MK_COMB (@lem3458198 _89672) (@lem3458197 _89646 _89670 _89671 _89672 P x f)). Qed.
Lemma lem3458200 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) : (term106 _89646 _89670 _89671 _89672 P x f) = (term273 _89646 _89670 _89671 _89672 P x f).
Proof. exact (TRANS (@lem3458152 _89646 _89670 _89671 _89672 P x f) (@lem3458199 _89646 _89670 _89671 _89672 P x f)). Qed.
Lemma lem3458201 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) : (term113 _89646 _89670 _89671 _89672 P x f) = (term274 _89646 _89670 _89671 _89672 P x f).
Proof. exact (MK_COMB (@lem3458132 _89646 _89670 _89671 _89672 P x f) (@lem3458200 _89646 _89670 _89671 _89672 P x f)). Qed.
Lemma lem3458205 {A : Type'} (P : A -> Prop) (Q : Prop) : (term275 A P Q) = (term276 A P Q).
Proof. exact (EQ_MP (@lem18905 A P Q) (@lem18904 A P Q)). Qed.
Lemma lem3458206 {_89646 : Type'} (P : type686 _89646) (Q : Prop) : (term277 _89646 P Q) = (term278 _89646 P Q).
Proof. exact (@lem3458205 (_89646 -> Prop) P Q). Qed.
Lemma lem3458207 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) : (term279 _89646 _89670 _89671 _89672 P x f) = (term280 _89646 _89670 _89671 _89672 P x f).
Proof. exact (@lem3458206 _89646 (term232 _89646 _89670 _89671 _89672 P x f) (term273 _89646 _89670 _89671 _89672 P x f)). Qed.
Lemma lem3458208 {_89646 _89670 _89671 _89672 : Type'} (t : _89646 -> Prop) (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) : (term281 _89646 _89670 _89671 _89672 P x f t) = (term231 _89646 _89670 _89671 _89672 t P x f).
Proof. exact (eq_refl (term281 _89646 _89670 _89671 _89672 P x f t)). Qed.
Lemma lem3458209 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) : (term282 _89646 _89670 _89671 _89672 P x f) = (term232 _89646 _89670 _89671 _89672 P x f).
Proof. exact (fun_ext (fun t : _89646 -> Prop => @lem3458208 _89646 _89670 _89671 _89672 t P x f)). Qed.
Lemma lem3458210 {_89646 : Type'} : (@ex (_89646 -> Prop)) = (@ex (_89646 -> Prop)).
Proof. exact (eq_refl (@ex (_89646 -> Prop))). Qed.
Lemma lem3458211 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) : (term283 _89646 _89670 _89671 _89672 P x f) = (term233 _89646 _89670 _89671 _89672 P x f).
Proof. exact (MK_COMB (@lem3458210 _89646) (@lem3458209 _89646 _89670 _89671 _89672 P x f)). Qed.
Lemma lem3458212 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem3458213 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) : (term284 _89646 _89670 _89671 _89672 P x f) = (term234 _89646 _89670 _89671 _89672 P x f).
Proof. exact (MK_COMB (@lem3458212) (@lem3458211 _89646 _89670 _89671 _89672 P x f)). Qed.
Lemma lem3458214 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) : (term273 _89646 _89670 _89671 _89672 P x f) = (term273 _89646 _89670 _89671 _89672 P x f).
Proof. exact (eq_refl (term273 _89646 _89670 _89671 _89672 P x f)). Qed.
Lemma lem3458215 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) : (term279 _89646 _89670 _89671 _89672 P x f) = (term274 _89646 _89670 _89671 _89672 P x f).
Proof. exact (MK_COMB (@lem3458213 _89646 _89670 _89671 _89672 P x f) (@lem3458214 _89646 _89670 _89671 _89672 P x f)). Qed.
Lemma lem3458216 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3458217 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) : (term285 _89646 _89670 _89671 _89672 P x f) = (term286 _89646 _89670 _89671 _89672 P x f).
Proof. exact (MK_COMB (@lem3458216) (@lem3458215 _89646 _89670 _89671 _89672 P x f)). Qed.
Lemma lem3458218 {_89646 _89670 _89671 _89672 : Type'} (t : _89646 -> Prop) (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) : (term281 _89646 _89670 _89671 _89672 P x f t) = (term231 _89646 _89670 _89671 _89672 t P x f).
Proof. exact (eq_refl (term281 _89646 _89670 _89671 _89672 P x f t)). Qed.
Lemma lem3458219 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem3458220 {_89646 _89670 _89671 _89672 : Type'} (t : _89646 -> Prop) (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) : (term287 _89646 _89670 _89671 _89672 P x f t) = (term288 _89646 _89670 _89671 _89672 t P x f).
Proof. exact (MK_COMB (@lem3458219) (@lem3458218 _89646 _89670 _89671 _89672 t P x f)). Qed.
Lemma lem3458221 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) : (term273 _89646 _89670 _89671 _89672 P x f) = (term273 _89646 _89670 _89671 _89672 P x f).
Proof. exact (eq_refl (term273 _89646 _89670 _89671 _89672 P x f)). Qed.
Lemma lem3458222 {_89646 _89670 _89671 _89672 : Type'} (t : _89646 -> Prop) (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) : (term289 _89646 _89670 _89671 _89672 t P x f) = (term290 _89646 _89670 _89671 _89672 t P x f).
Proof. exact (MK_COMB (@lem3458220 _89646 _89670 _89671 _89672 t P x f) (@lem3458221 _89646 _89670 _89671 _89672 P x f)). Qed.
Lemma lem3458223 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) : (term291 _89646 _89670 _89671 _89672 P x f) = (term292 _89646 _89670 _89671 _89672 P x f).
Proof. exact (fun_ext (fun t : _89646 -> Prop => @lem3458222 _89646 _89670 _89671 _89672 t P x f)). Qed.
Lemma lem3458224 {_89646 : Type'} : (@ex (_89646 -> Prop)) = (@ex (_89646 -> Prop)).
Proof. exact (eq_refl (@ex (_89646 -> Prop))). Qed.
Lemma lem3458225 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) : (term280 _89646 _89670 _89671 _89672 P x f) = (term293 _89646 _89670 _89671 _89672 P x f).
Proof. exact (MK_COMB (@lem3458224 _89646) (@lem3458223 _89646 _89670 _89671 _89672 P x f)). Qed.
Lemma lem3458226 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) : ((term279 _89646 _89670 _89671 _89672 P x f) = (term280 _89646 _89670 _89671 _89672 P x f)) = ((term274 _89646 _89670 _89671 _89672 P x f) = (term293 _89646 _89670 _89671 _89672 P x f)).
Proof. exact (MK_COMB (@lem3458217 _89646 _89670 _89671 _89672 P x f) (@lem3458225 _89646 _89670 _89671 _89672 P x f)). Qed.
Lemma lem3458227 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) : (term274 _89646 _89670 _89671 _89672 P x f) = (term293 _89646 _89670 _89671 _89672 P x f).
Proof. exact (EQ_MP (@lem3458226 _89646 _89670 _89671 _89672 P x f) (@lem3458207 _89646 _89670 _89671 _89672 P x f)). Qed.
Lemma lem3458229 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term294 A P Q) = (term295 A P Q).
Proof. exact (EQ_MP (@lem18917 A P Q) (@lem18916 A P Q)). Qed.
Lemma lem3458230 {_89672 : Type'} (P : _89672 -> Prop) (Q : _89672 -> Prop) : (term294 _89672 P Q) = (term295 _89672 P Q).
Proof. exact (@lem3458229 _89672 P Q). Qed.
Lemma lem3458231 {_89646 _89670 _89671 _89672 : Type'} (t : _89646 -> Prop) (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) : (term296 _89646 _89670 _89671 _89672 t P x f) = (term297 _89646 _89670 _89671 _89672 t P x f).
Proof. exact (@lem3458230 _89672 (term230 _89646 _89670 _89671 _89672 t P x f) (term272 _89646 _89670 _89671 _89672 P x f)). Qed.
Lemma lem3458232 {_89646 _89670 _89671 _89672 : Type'} (x : _89672) (t : _89646 -> Prop) (P : type1517 _89670 _89671 _89672) (x' : _89646) (f : type1524 _89646 _89670 _89671 _89672) : (term298 _89646 _89670 _89671 _89672 t P x' f x) = (term229 _89646 _89670 _89671 _89672 x t P x' f).
Proof. exact (eq_refl (term298 _89646 _89670 _89671 _89672 t P x' f x)). Qed.
Lemma lem3458233 {_89646 _89670 _89671 _89672 : Type'} (t : _89646 -> Prop) (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) : (term299 _89646 _89670 _89671 _89672 t P x f) = (term230 _89646 _89670 _89671 _89672 t P x f).
Proof. exact (fun_ext (fun x' : _89672 => @lem3458232 _89646 _89670 _89671 _89672 x' t P x f)). Qed.
Lemma lem3458234 {_89672 : Type'} : (@ex _89672) = (@ex _89672).
Proof. exact (eq_refl (@ex _89672)). Qed.
Lemma lem3458235 {_89646 _89670 _89671 _89672 : Type'} (t : _89646 -> Prop) (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) : (term300 _89646 _89670 _89671 _89672 t P x f) = (term231 _89646 _89670 _89671 _89672 t P x f).
Proof. exact (MK_COMB (@lem3458234 _89672) (@lem3458233 _89646 _89670 _89671 _89672 t P x f)). Qed.
Lemma lem3458236 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem3458237 {_89646 _89670 _89671 _89672 : Type'} (t : _89646 -> Prop) (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) : (term301 _89646 _89670 _89671 _89672 t P x f) = (term288 _89646 _89670 _89671 _89672 t P x f).
Proof. exact (MK_COMB (@lem3458236) (@lem3458235 _89646 _89670 _89671 _89672 t P x f)). Qed.
Lemma lem3458238 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) (x' : _89672) : (term302 _89646 _89670 _89671 _89672 P x f x') = (term271 _89646 _89670 _89671 _89672 P x f x').
Proof. exact (eq_refl (term302 _89646 _89670 _89671 _89672 P x f x')). Qed.
Lemma lem3458239 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) : (term303 _89646 _89670 _89671 _89672 P x f) = (term272 _89646 _89670 _89671 _89672 P x f).
Proof. exact (fun_ext (fun x' : _89672 => @lem3458238 _89646 _89670 _89671 _89672 P x f x')). Qed.
Lemma lem3458240 {_89672 : Type'} : (@ex _89672) = (@ex _89672).
Proof. exact (eq_refl (@ex _89672)). Qed.
Lemma lem3458241 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) : (term304 _89646 _89670 _89671 _89672 P x f) = (term273 _89646 _89670 _89671 _89672 P x f).
Proof. exact (MK_COMB (@lem3458240 _89672) (@lem3458239 _89646 _89670 _89671 _89672 P x f)). Qed.
Lemma lem3458242 {_89646 _89670 _89671 _89672 : Type'} (t : _89646 -> Prop) (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) : (term296 _89646 _89670 _89671 _89672 t P x f) = (term290 _89646 _89670 _89671 _89672 t P x f).
Proof. exact (MK_COMB (@lem3458237 _89646 _89670 _89671 _89672 t P x f) (@lem3458241 _89646 _89670 _89671 _89672 P x f)). Qed.
Lemma lem3458243 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3458244 {_89646 _89670 _89671 _89672 : Type'} (t : _89646 -> Prop) (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) : (term305 _89646 _89670 _89671 _89672 t P x f) = (term306 _89646 _89670 _89671 _89672 t P x f).
Proof. exact (MK_COMB (@lem3458243) (@lem3458242 _89646 _89670 _89671 _89672 t P x f)). Qed.
Lemma lem3458245 {_89646 _89670 _89671 _89672 : Type'} (x : _89672) (t : _89646 -> Prop) (P : type1517 _89670 _89671 _89672) (x' : _89646) (f : type1524 _89646 _89670 _89671 _89672) : (term298 _89646 _89670 _89671 _89672 t P x' f x) = (term229 _89646 _89670 _89671 _89672 x t P x' f).
Proof. exact (eq_refl (term298 _89646 _89670 _89671 _89672 t P x' f x)). Qed.
Lemma lem3458246 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem3458247 {_89646 _89670 _89671 _89672 : Type'} (x : _89672) (t : _89646 -> Prop) (P : type1517 _89670 _89671 _89672) (x' : _89646) (f : type1524 _89646 _89670 _89671 _89672) : (term307 _89646 _89670 _89671 _89672 t P x' f x) = (term308 _89646 _89670 _89671 _89672 x t P x' f).
Proof. exact (MK_COMB (@lem3458246) (@lem3458245 _89646 _89670 _89671 _89672 x t P x' f)). Qed.
Lemma lem3458248 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) (x' : _89672) : (term302 _89646 _89670 _89671 _89672 P x f x') = (term271 _89646 _89670 _89671 _89672 P x f x').
Proof. exact (eq_refl (term302 _89646 _89670 _89671 _89672 P x f x')). Qed.
Lemma lem3458249 {_89646 _89670 _89671 _89672 : Type'} (t : _89646 -> Prop) (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) (x' : _89672) : (term309 _89646 _89670 _89671 _89672 t P x f x') = (term310 _89646 _89670 _89671 _89672 t P x f x').
Proof. exact (MK_COMB (@lem3458247 _89646 _89670 _89671 _89672 x' t P x f) (@lem3458248 _89646 _89670 _89671 _89672 P x f x')). Qed.
Lemma lem3458250 {_89646 _89670 _89671 _89672 : Type'} (t : _89646 -> Prop) (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) : (term311 _89646 _89670 _89671 _89672 t P x f) = (term312 _89646 _89670 _89671 _89672 t P x f).
Proof. exact (fun_ext (fun x' : _89672 => @lem3458249 _89646 _89670 _89671 _89672 t P x f x')). Qed.
Lemma lem3458251 {_89672 : Type'} : (@ex _89672) = (@ex _89672).
Proof. exact (eq_refl (@ex _89672)). Qed.
Lemma lem3458252 {_89646 _89670 _89671 _89672 : Type'} (t : _89646 -> Prop) (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) : (term297 _89646 _89670 _89671 _89672 t P x f) = (term313 _89646 _89670 _89671 _89672 t P x f).
Proof. exact (MK_COMB (@lem3458251 _89672) (@lem3458250 _89646 _89670 _89671 _89672 t P x f)). Qed.
Lemma lem3458253 {_89646 _89670 _89671 _89672 : Type'} (t : _89646 -> Prop) (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) : ((term296 _89646 _89670 _89671 _89672 t P x f) = (term297 _89646 _89670 _89671 _89672 t P x f)) = ((term290 _89646 _89670 _89671 _89672 t P x f) = (term313 _89646 _89670 _89671 _89672 t P x f)).
Proof. exact (MK_COMB (@lem3458244 _89646 _89670 _89671 _89672 t P x f) (@lem3458252 _89646 _89670 _89671 _89672 t P x f)). Qed.
Lemma lem3458254 {_89646 _89670 _89671 _89672 : Type'} (t : _89646 -> Prop) (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) : (term290 _89646 _89670 _89671 _89672 t P x f) = (term313 _89646 _89670 _89671 _89672 t P x f).
Proof. exact (EQ_MP (@lem3458253 _89646 _89670 _89671 _89672 t P x f) (@lem3458231 _89646 _89670 _89671 _89672 t P x f)). Qed.
Lemma lem3458256 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term294 A P Q) = (term295 A P Q).
Proof. exact (EQ_MP (@lem18917 A P Q) (@lem18916 A P Q)). Qed.
Lemma lem3458257 {_89671 : Type'} (P : _89671 -> Prop) (Q : _89671 -> Prop) : (term294 _89671 P Q) = (term295 _89671 P Q).
Proof. exact (@lem3458256 _89671 P Q). Qed.
Lemma lem3458258 {_89646 _89670 _89671 _89672 : Type'} (t : _89646 -> Prop) (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) (x' : _89672) : (term314 _89646 _89670 _89671 _89672 t P x f x') = (term315 _89646 _89670 _89671 _89672 t P x f x').
Proof. exact (@lem3458257 _89671 (term228 _89646 _89670 _89671 _89672 x' t P x f) (term270 _89646 _89670 _89671 _89672 P x f x')). Qed.
Lemma lem3458259 {_89646 _89670 _89671 _89672 : Type'} (x : _89672) (y : _89671) (t : _89646 -> Prop) (P : type1517 _89670 _89671 _89672) (x' : _89646) (f : type1524 _89646 _89670 _89671 _89672) : (term316 _89646 _89670 _89671 _89672 x t P x' f y) = (term227 _89646 _89670 _89671 _89672 x y t P x' f).
Proof. exact (eq_refl (term316 _89646 _89670 _89671 _89672 x t P x' f y)). Qed.
Lemma lem3458260 {_89646 _89670 _89671 _89672 : Type'} (x : _89672) (t : _89646 -> Prop) (P : type1517 _89670 _89671 _89672) (x' : _89646) (f : type1524 _89646 _89670 _89671 _89672) : (term317 _89646 _89670 _89671 _89672 x t P x' f) = (term228 _89646 _89670 _89671 _89672 x t P x' f).
Proof. exact (fun_ext (fun y : _89671 => @lem3458259 _89646 _89670 _89671 _89672 x y t P x' f)). Qed.
Lemma lem3458261 {_89671 : Type'} : (@ex _89671) = (@ex _89671).
Proof. exact (eq_refl (@ex _89671)). Qed.
Lemma lem3458262 {_89646 _89670 _89671 _89672 : Type'} (x : _89672) (t : _89646 -> Prop) (P : type1517 _89670 _89671 _89672) (x' : _89646) (f : type1524 _89646 _89670 _89671 _89672) : (term318 _89646 _89670 _89671 _89672 x t P x' f) = (term229 _89646 _89670 _89671 _89672 x t P x' f).
Proof. exact (MK_COMB (@lem3458261 _89671) (@lem3458260 _89646 _89670 _89671 _89672 x t P x' f)). Qed.
Lemma lem3458263 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem3458264 {_89646 _89670 _89671 _89672 : Type'} (x : _89672) (t : _89646 -> Prop) (P : type1517 _89670 _89671 _89672) (x' : _89646) (f : type1524 _89646 _89670 _89671 _89672) : (term319 _89646 _89670 _89671 _89672 x t P x' f) = (term308 _89646 _89670 _89671 _89672 x t P x' f).
Proof. exact (MK_COMB (@lem3458263) (@lem3458262 _89646 _89670 _89671 _89672 x t P x' f)). Qed.
Lemma lem3458265 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) (x' : _89672) (y : _89671) : (term320 _89646 _89670 _89671 _89672 P x f x' y) = (term269 _89646 _89670 _89671 _89672 P x f x' y).
Proof. exact (eq_refl (term320 _89646 _89670 _89671 _89672 P x f x' y)). Qed.
Lemma lem3458266 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) (x' : _89672) : (term321 _89646 _89670 _89671 _89672 P x f x') = (term270 _89646 _89670 _89671 _89672 P x f x').
Proof. exact (fun_ext (fun y : _89671 => @lem3458265 _89646 _89670 _89671 _89672 P x f x' y)). Qed.
Lemma lem3458267 {_89671 : Type'} : (@ex _89671) = (@ex _89671).
Proof. exact (eq_refl (@ex _89671)). Qed.
Lemma lem3458268 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) (x' : _89672) : (term322 _89646 _89670 _89671 _89672 P x f x') = (term271 _89646 _89670 _89671 _89672 P x f x').
Proof. exact (MK_COMB (@lem3458267 _89671) (@lem3458266 _89646 _89670 _89671 _89672 P x f x')). Qed.
Lemma lem3458269 {_89646 _89670 _89671 _89672 : Type'} (t : _89646 -> Prop) (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) (x' : _89672) : (term314 _89646 _89670 _89671 _89672 t P x f x') = (term310 _89646 _89670 _89671 _89672 t P x f x').
Proof. exact (MK_COMB (@lem3458264 _89646 _89670 _89671 _89672 x' t P x f) (@lem3458268 _89646 _89670 _89671 _89672 P x f x')). Qed.
Lemma lem3458270 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3458271 {_89646 _89670 _89671 _89672 : Type'} (t : _89646 -> Prop) (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) (x' : _89672) : (term323 _89646 _89670 _89671 _89672 t P x f x') = (term324 _89646 _89670 _89671 _89672 t P x f x').
Proof. exact (MK_COMB (@lem3458270) (@lem3458269 _89646 _89670 _89671 _89672 t P x f x')). Qed.
Lemma lem3458272 {_89646 _89670 _89671 _89672 : Type'} (x : _89672) (y : _89671) (t : _89646 -> Prop) (P : type1517 _89670 _89671 _89672) (x' : _89646) (f : type1524 _89646 _89670 _89671 _89672) : (term316 _89646 _89670 _89671 _89672 x t P x' f y) = (term227 _89646 _89670 _89671 _89672 x y t P x' f).
Proof. exact (eq_refl (term316 _89646 _89670 _89671 _89672 x t P x' f y)). Qed.
Lemma lem3458273 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem3458274 {_89646 _89670 _89671 _89672 : Type'} (x : _89672) (y : _89671) (t : _89646 -> Prop) (P : type1517 _89670 _89671 _89672) (x' : _89646) (f : type1524 _89646 _89670 _89671 _89672) : (term325 _89646 _89670 _89671 _89672 x t P x' f y) = (term326 _89646 _89670 _89671 _89672 x y t P x' f).
Proof. exact (MK_COMB (@lem3458273) (@lem3458272 _89646 _89670 _89671 _89672 x y t P x' f)). Qed.
Lemma lem3458275 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) (x' : _89672) (y : _89671) : (term320 _89646 _89670 _89671 _89672 P x f x' y) = (term269 _89646 _89670 _89671 _89672 P x f x' y).
Proof. exact (eq_refl (term320 _89646 _89670 _89671 _89672 P x f x' y)). Qed.
Lemma lem3458276 {_89646 _89670 _89671 _89672 : Type'} (t : _89646 -> Prop) (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) (x' : _89672) (y : _89671) : (term327 _89646 _89670 _89671 _89672 t P x f x' y) = (term328 _89646 _89670 _89671 _89672 t P x f x' y).
Proof. exact (MK_COMB (@lem3458274 _89646 _89670 _89671 _89672 x' y t P x f) (@lem3458275 _89646 _89670 _89671 _89672 P x f x' y)). Qed.
Lemma lem3458277 {_89646 _89670 _89671 _89672 : Type'} (t : _89646 -> Prop) (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) (x' : _89672) : (term329 _89646 _89670 _89671 _89672 t P x f x') = (term330 _89646 _89670 _89671 _89672 t P x f x').
Proof. exact (fun_ext (fun y : _89671 => @lem3458276 _89646 _89670 _89671 _89672 t P x f x' y)). Qed.
Lemma lem3458278 {_89671 : Type'} : (@ex _89671) = (@ex _89671).
Proof. exact (eq_refl (@ex _89671)). Qed.
Lemma lem3458279 {_89646 _89670 _89671 _89672 : Type'} (t : _89646 -> Prop) (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) (x' : _89672) : (term315 _89646 _89670 _89671 _89672 t P x f x') = (term331 _89646 _89670 _89671 _89672 t P x f x').
Proof. exact (MK_COMB (@lem3458278 _89671) (@lem3458277 _89646 _89670 _89671 _89672 t P x f x')). Qed.
Lemma lem3458280 {_89646 _89670 _89671 _89672 : Type'} (t : _89646 -> Prop) (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) (x' : _89672) : ((term314 _89646 _89670 _89671 _89672 t P x f x') = (term315 _89646 _89670 _89671 _89672 t P x f x')) = ((term310 _89646 _89670 _89671 _89672 t P x f x') = (term331 _89646 _89670 _89671 _89672 t P x f x')).
Proof. exact (MK_COMB (@lem3458271 _89646 _89670 _89671 _89672 t P x f x') (@lem3458279 _89646 _89670 _89671 _89672 t P x f x')). Qed.
Lemma lem3458281 {_89646 _89670 _89671 _89672 : Type'} (t : _89646 -> Prop) (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) (x' : _89672) : (term310 _89646 _89670 _89671 _89672 t P x f x') = (term331 _89646 _89670 _89671 _89672 t P x f x').
Proof. exact (EQ_MP (@lem3458280 _89646 _89670 _89671 _89672 t P x f x') (@lem3458258 _89646 _89670 _89671 _89672 t P x f x')). Qed.
Lemma lem3458283 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term294 A P Q) = (term295 A P Q).
Proof. exact (EQ_MP (@lem18917 A P Q) (@lem18916 A P Q)). Qed.
Lemma lem3458284 {_89670 : Type'} (P : _89670 -> Prop) (Q : _89670 -> Prop) : (term294 _89670 P Q) = (term295 _89670 P Q).
Proof. exact (@lem3458283 _89670 P Q). Qed.
Lemma lem3458285 {_89646 _89670 _89671 _89672 : Type'} (t : _89646 -> Prop) (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) (x' : _89672) (y : _89671) : (term332 _89646 _89670 _89671 _89672 t P x f x' y) = (term333 _89646 _89670 _89671 _89672 t P x f x' y).
Proof. exact (@lem3458284 _89670 (term226 _89646 _89670 _89671 _89672 x' y t P x f) (term268 _89646 _89670 _89671 _89672 P x f x' y)). Qed.
Lemma lem3458286 {_89646 _89670 _89671 _89672 : Type'} (x : _89672) (y : _89671) (z : _89670) (t : _89646 -> Prop) (P : type1517 _89670 _89671 _89672) (x' : _89646) (f : type1524 _89646 _89670 _89671 _89672) : (term334 _89646 _89670 _89671 _89672 x y t P x' f z) = (term224 _89646 _89670 _89671 _89672 x y z t P x' f).
Proof. exact (eq_refl (term334 _89646 _89670 _89671 _89672 x y t P x' f z)). Qed.
Lemma lem3458287 {_89646 _89670 _89671 _89672 : Type'} (x : _89672) (y : _89671) (t : _89646 -> Prop) (P : type1517 _89670 _89671 _89672) (x' : _89646) (f : type1524 _89646 _89670 _89671 _89672) : (term335 _89646 _89670 _89671 _89672 x y t P x' f) = (term226 _89646 _89670 _89671 _89672 x y t P x' f).
Proof. exact (fun_ext (fun z : _89670 => @lem3458286 _89646 _89670 _89671 _89672 x y z t P x' f)). Qed.
Lemma lem3458288 {_89670 : Type'} : (@ex _89670) = (@ex _89670).
Proof. exact (eq_refl (@ex _89670)). Qed.
Lemma lem3458289 {_89646 _89670 _89671 _89672 : Type'} (x : _89672) (y : _89671) (t : _89646 -> Prop) (P : type1517 _89670 _89671 _89672) (x' : _89646) (f : type1524 _89646 _89670 _89671 _89672) : (term336 _89646 _89670 _89671 _89672 x y t P x' f) = (term227 _89646 _89670 _89671 _89672 x y t P x' f).
Proof. exact (MK_COMB (@lem3458288 _89670) (@lem3458287 _89646 _89670 _89671 _89672 x y t P x' f)). Qed.
Lemma lem3458290 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem3458291 {_89646 _89670 _89671 _89672 : Type'} (x : _89672) (y : _89671) (t : _89646 -> Prop) (P : type1517 _89670 _89671 _89672) (x' : _89646) (f : type1524 _89646 _89670 _89671 _89672) : (term337 _89646 _89670 _89671 _89672 x y t P x' f) = (term326 _89646 _89670 _89671 _89672 x y t P x' f).
Proof. exact (MK_COMB (@lem3458290) (@lem3458289 _89646 _89670 _89671 _89672 x y t P x' f)). Qed.
Lemma lem3458292 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) (x' : _89672) (y : _89671) (z : _89670) : (term338 _89646 _89670 _89671 _89672 P x f x' y z) = (term266 _89646 _89670 _89671 _89672 P x f x' y z).
Proof. exact (eq_refl (term338 _89646 _89670 _89671 _89672 P x f x' y z)). Qed.
Lemma lem3458293 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) (x' : _89672) (y : _89671) : (term339 _89646 _89670 _89671 _89672 P x f x' y) = (term268 _89646 _89670 _89671 _89672 P x f x' y).
Proof. exact (fun_ext (fun z : _89670 => @lem3458292 _89646 _89670 _89671 _89672 P x f x' y z)). Qed.
Lemma lem3458294 {_89670 : Type'} : (@ex _89670) = (@ex _89670).
Proof. exact (eq_refl (@ex _89670)). Qed.
Lemma lem3458295 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) (x' : _89672) (y : _89671) : (term340 _89646 _89670 _89671 _89672 P x f x' y) = (term269 _89646 _89670 _89671 _89672 P x f x' y).
Proof. exact (MK_COMB (@lem3458294 _89670) (@lem3458293 _89646 _89670 _89671 _89672 P x f x' y)). Qed.
Lemma lem3458296 {_89646 _89670 _89671 _89672 : Type'} (t : _89646 -> Prop) (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) (x' : _89672) (y : _89671) : (term332 _89646 _89670 _89671 _89672 t P x f x' y) = (term328 _89646 _89670 _89671 _89672 t P x f x' y).
Proof. exact (MK_COMB (@lem3458291 _89646 _89670 _89671 _89672 x' y t P x f) (@lem3458295 _89646 _89670 _89671 _89672 P x f x' y)). Qed.
Lemma lem3458297 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3458298 {_89646 _89670 _89671 _89672 : Type'} (t : _89646 -> Prop) (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) (x' : _89672) (y : _89671) : (term341 _89646 _89670 _89671 _89672 t P x f x' y) = (term342 _89646 _89670 _89671 _89672 t P x f x' y).
Proof. exact (MK_COMB (@lem3458297) (@lem3458296 _89646 _89670 _89671 _89672 t P x f x' y)). Qed.
Lemma lem3458299 {_89646 _89670 _89671 _89672 : Type'} (x : _89672) (y : _89671) (z : _89670) (t : _89646 -> Prop) (P : type1517 _89670 _89671 _89672) (x' : _89646) (f : type1524 _89646 _89670 _89671 _89672) : (term334 _89646 _89670 _89671 _89672 x y t P x' f z) = (term224 _89646 _89670 _89671 _89672 x y z t P x' f).
Proof. exact (eq_refl (term334 _89646 _89670 _89671 _89672 x y t P x' f z)). Qed.
Lemma lem3458300 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem3458301 {_89646 _89670 _89671 _89672 : Type'} (x : _89672) (y : _89671) (z : _89670) (t : _89646 -> Prop) (P : type1517 _89670 _89671 _89672) (x' : _89646) (f : type1524 _89646 _89670 _89671 _89672) : (term343 _89646 _89670 _89671 _89672 x y t P x' f z) = (term344 _89646 _89670 _89671 _89672 x y z t P x' f).
Proof. exact (MK_COMB (@lem3458300) (@lem3458299 _89646 _89670 _89671 _89672 x y z t P x' f)). Qed.
Lemma lem3458302 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) (x' : _89672) (y : _89671) (z : _89670) : (term338 _89646 _89670 _89671 _89672 P x f x' y z) = (term266 _89646 _89670 _89671 _89672 P x f x' y z).
Proof. exact (eq_refl (term338 _89646 _89670 _89671 _89672 P x f x' y z)). Qed.
Lemma lem3458303 {_89646 _89670 _89671 _89672 : Type'} (t : _89646 -> Prop) (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) (x' : _89672) (y : _89671) (z : _89670) : (term345 _89646 _89670 _89671 _89672 t P x f x' y z) = (term346 _89646 _89670 _89671 _89672 t P x f x' y z).
Proof. exact (MK_COMB (@lem3458301 _89646 _89670 _89671 _89672 x' y z t P x f) (@lem3458302 _89646 _89670 _89671 _89672 P x f x' y z)). Qed.
Lemma lem3458304 {_89646 _89670 _89671 _89672 : Type'} (t : _89646 -> Prop) (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) (x' : _89672) (y : _89671) : (term347 _89646 _89670 _89671 _89672 t P x f x' y) = (term348 _89646 _89670 _89671 _89672 t P x f x' y).
Proof. exact (fun_ext (fun z : _89670 => @lem3458303 _89646 _89670 _89671 _89672 t P x f x' y z)). Qed.
Lemma lem3458305 {_89670 : Type'} : (@ex _89670) = (@ex _89670).
Proof. exact (eq_refl (@ex _89670)). Qed.
Lemma lem3458306 {_89646 _89670 _89671 _89672 : Type'} (t : _89646 -> Prop) (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) (x' : _89672) (y : _89671) : (term333 _89646 _89670 _89671 _89672 t P x f x' y) = (term349 _89646 _89670 _89671 _89672 t P x f x' y).
Proof. exact (MK_COMB (@lem3458305 _89670) (@lem3458304 _89646 _89670 _89671 _89672 t P x f x' y)). Qed.
Lemma lem3458307 {_89646 _89670 _89671 _89672 : Type'} (t : _89646 -> Prop) (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) (x' : _89672) (y : _89671) : ((term332 _89646 _89670 _89671 _89672 t P x f x' y) = (term333 _89646 _89670 _89671 _89672 t P x f x' y)) = ((term328 _89646 _89670 _89671 _89672 t P x f x' y) = (term349 _89646 _89670 _89671 _89672 t P x f x' y)).
Proof. exact (MK_COMB (@lem3458298 _89646 _89670 _89671 _89672 t P x f x' y) (@lem3458306 _89646 _89670 _89671 _89672 t P x f x' y)). Qed.
Lemma lem3458308 {_89646 _89670 _89671 _89672 : Type'} (t : _89646 -> Prop) (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) (x' : _89672) (y : _89671) : (term328 _89646 _89670 _89671 _89672 t P x f x' y) = (term349 _89646 _89670 _89671 _89672 t P x f x' y).
Proof. exact (EQ_MP (@lem3458307 _89646 _89670 _89671 _89672 t P x f x' y) (@lem3458285 _89646 _89670 _89671 _89672 t P x f x' y)). Qed.
Lemma lem3458309 {_89646 _89670 _89671 _89672 : Type'} (t : _89646 -> Prop) (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) (x' : _89672) : (term330 _89646 _89670 _89671 _89672 t P x f x') = (term350 _89646 _89670 _89671 _89672 t P x f x').
Proof. exact (fun_ext (fun y : _89671 => @lem3458308 _89646 _89670 _89671 _89672 t P x f x' y)). Qed.
Lemma lem3458310 {_89671 : Type'} : (@ex _89671) = (@ex _89671).
Proof. exact (eq_refl (@ex _89671)). Qed.
Lemma lem3458311 {_89646 _89670 _89671 _89672 : Type'} (t : _89646 -> Prop) (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) (x' : _89672) : (term331 _89646 _89670 _89671 _89672 t P x f x') = (term351 _89646 _89670 _89671 _89672 t P x f x').
Proof. exact (MK_COMB (@lem3458310 _89671) (@lem3458309 _89646 _89670 _89671 _89672 t P x f x')). Qed.
Lemma lem3458312 {_89646 _89670 _89671 _89672 : Type'} (t : _89646 -> Prop) (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) (x' : _89672) : (term310 _89646 _89670 _89671 _89672 t P x f x') = (term351 _89646 _89670 _89671 _89672 t P x f x').
Proof. exact (TRANS (@lem3458281 _89646 _89670 _89671 _89672 t P x f x') (@lem3458311 _89646 _89670 _89671 _89672 t P x f x')). Qed.
Lemma lem3458313 {_89646 _89670 _89671 _89672 : Type'} (t : _89646 -> Prop) (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) : (term312 _89646 _89670 _89671 _89672 t P x f) = (term352 _89646 _89670 _89671 _89672 t P x f).
Proof. exact (fun_ext (fun x' : _89672 => @lem3458312 _89646 _89670 _89671 _89672 t P x f x')). Qed.
Lemma lem3458314 {_89672 : Type'} : (@ex _89672) = (@ex _89672).
Proof. exact (eq_refl (@ex _89672)). Qed.
Lemma lem3458315 {_89646 _89670 _89671 _89672 : Type'} (t : _89646 -> Prop) (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) : (term313 _89646 _89670 _89671 _89672 t P x f) = (term353 _89646 _89670 _89671 _89672 t P x f).
Proof. exact (MK_COMB (@lem3458314 _89672) (@lem3458313 _89646 _89670 _89671 _89672 t P x f)). Qed.
Lemma lem3458316 {_89646 _89670 _89671 _89672 : Type'} (t : _89646 -> Prop) (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) : (term290 _89646 _89670 _89671 _89672 t P x f) = (term353 _89646 _89670 _89671 _89672 t P x f).
Proof. exact (TRANS (@lem3458254 _89646 _89670 _89671 _89672 t P x f) (@lem3458315 _89646 _89670 _89671 _89672 t P x f)). Qed.
Lemma lem3458317 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) : (term292 _89646 _89670 _89671 _89672 P x f) = (term354 _89646 _89670 _89671 _89672 P x f).
Proof. exact (fun_ext (fun t : _89646 -> Prop => @lem3458316 _89646 _89670 _89671 _89672 t P x f)). Qed.
Lemma lem3458318 {_89646 : Type'} : (@ex (_89646 -> Prop)) = (@ex (_89646 -> Prop)).
Proof. exact (eq_refl (@ex (_89646 -> Prop))). Qed.
Lemma lem3458319 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) : (term293 _89646 _89670 _89671 _89672 P x f) = (term355 _89646 _89670 _89671 _89672 P x f).
Proof. exact (MK_COMB (@lem3458318 _89646) (@lem3458317 _89646 _89670 _89671 _89672 P x f)). Qed.
Lemma lem3458320 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) : (term274 _89646 _89670 _89671 _89672 P x f) = (term355 _89646 _89670 _89671 _89672 P x f).
Proof. exact (TRANS (@lem3458227 _89646 _89670 _89671 _89672 P x f) (@lem3458319 _89646 _89670 _89671 _89672 P x f)). Qed.
Lemma lem3458322 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) : (term113 _89646 _89670 _89671 _89672 P x f) = (term355 _89646 _89670 _89671 _89672 P x f).
Proof. exact (TRANS (@lem3458201 _89646 _89670 _89671 _89672 P x f) (@lem3458320 _89646 _89670 _89671 _89672 P x f)). Qed.
Lemma lem3458323 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) : (term38 _89646 _89670 _89671 _89672 P x f) = (term355 _89646 _89670 _89671 _89672 P x f).
Proof. exact (TRANS (@lem3457613 _89646 _89670 _89671 _89672 P x f) (@lem3458322 _89646 _89670 _89671 _89672 P x f)). Qed.
Lemma lem3458324 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) (h1 : term38 _89646 _89670 _89671 _89672 P x f) : term355 _89646 _89670 _89671 _89672 P x f.
Proof. exact (EQ_MP (@lem3458323 _89646 _89670 _89671 _89672 P x f) (@lem3457477 _89646 _89670 _89671 _89672 P x f h1)). Qed.
Lemma lem3458325 {_89646 _89670 _89671 _89672 : Type'} (t : _89646 -> Prop) (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) (h1 : term353 _89646 _89670 _89671 _89672 t P x f) : term353 _89646 _89670 _89671 _89672 t P x f.
Proof. exact (h1). Qed.
Lemma lem3458326 {_89646 _89670 _89671 _89672 : Type'} (t : _89646 -> Prop) (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) (x' : _89672) (h1 : term351 _89646 _89670 _89671 _89672 t P x f x') : term351 _89646 _89670 _89671 _89672 t P x f x'.
Proof. exact (h1). Qed.
Lemma lem3458327 {_89646 _89670 _89671 _89672 : Type'} (t : _89646 -> Prop) (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) (x' : _89672) (y : _89671) (h1 : term349 _89646 _89670 _89671 _89672 t P x f x' y) : term349 _89646 _89670 _89671 _89672 t P x f x' y.
Proof. exact (h1). Qed.
Lemma lem3458328 {_89646 _89670 _89671 _89672 : Type'} (t : _89646 -> Prop) (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) (x' : _89672) (y : _89671) (z : _89670) (h1 : term346 _89646 _89670 _89671 _89672 t P x f x' y z) : term346 _89646 _89670 _89671 _89672 t P x f x' y z.
Proof. exact (h1). Qed.
Lemma lem3458349 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) (x' : _89672) (y : _89671) (z : _89670) : (term17 _89646 _89670 _89671 _89672 P x f x' y z) = (term17 _89646 _89670 _89671 _89672 P x f x' y z).
Proof. exact (eq_refl (term17 _89646 _89670 _89671 _89672 P x f x' y z)). Qed.
Lemma lem3458356 {_89646 : Type'} (x : _89646) (t : _89646 -> Prop) : (term64 _89646 x t) = (term64 _89646 x t).
Proof. exact (eq_refl (term64 _89646 x t)). Qed.
Lemma lem3458381 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (t : _89646 -> Prop) (f : type1524 _89646 _89670 _89671 _89672) (x : _89672) (y : _89671) (z : _89670) : (term40 _89646 _89670 _89671 _89672 P t f x y z) = (term40 _89646 _89670 _89671 _89672 P t f x y z).
Proof. exact (eq_refl (term40 _89646 _89670 _89671 _89672 P t f x y z)). Qed.
Lemma lem3458382 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (t : _89646 -> Prop) (f : type1524 _89646 _89670 _89671 _89672) (x : _89672) (y : _89671) : (term48 _89646 _89670 _89671 _89672 P t f x y) = (term48 _89646 _89670 _89671 _89672 P t f x y).
Proof. exact (fun_ext (fun z : _89670 => @lem3458381 _89646 _89670 _89671 _89672 P t f x y z)). Qed.
Lemma lem3458383 {_89670 : Type'} : (@all _89670) = (@all _89670).
Proof. exact (eq_refl (@all _89670)). Qed.
Lemma lem3458384 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (t : _89646 -> Prop) (f : type1524 _89646 _89670 _89671 _89672) (x : _89672) (y : _89671) : (term49 _89646 _89670 _89671 _89672 P t f x y) = (term49 _89646 _89670 _89671 _89672 P t f x y).
Proof. exact (MK_COMB (@lem3458383 _89670) (@lem3458382 _89646 _89670 _89671 _89672 P t f x y)). Qed.
Lemma lem3458385 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (t : _89646 -> Prop) (f : type1524 _89646 _89670 _89671 _89672) (x : _89672) : (term55 _89646 _89670 _89671 _89672 P t f x) = (term55 _89646 _89670 _89671 _89672 P t f x).
Proof. exact (fun_ext (fun y : _89671 => @lem3458384 _89646 _89670 _89671 _89672 P t f x y)). Qed.
Lemma lem3458386 {_89671 : Type'} : (@all _89671) = (@all _89671).
Proof. exact (eq_refl (@all _89671)). Qed.
Lemma lem3458387 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (t : _89646 -> Prop) (f : type1524 _89646 _89670 _89671 _89672) (x : _89672) : (term56 _89646 _89670 _89671 _89672 P t f x) = (term56 _89646 _89670 _89671 _89672 P t f x).
Proof. exact (MK_COMB (@lem3458386 _89671) (@lem3458385 _89646 _89670 _89671 _89672 P t f x)). Qed.
Lemma lem3458388 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (t : _89646 -> Prop) (f : type1524 _89646 _89670 _89671 _89672) : (term62 _89646 _89670 _89671 _89672 P t f) = (term62 _89646 _89670 _89671 _89672 P t f).
Proof. exact (fun_ext (fun x : _89672 => @lem3458387 _89646 _89670 _89671 _89672 P t f x)). Qed.
Lemma lem3458389 {_89672 : Type'} : (@all _89672) = (@all _89672).
Proof. exact (eq_refl (@all _89672)). Qed.
Lemma lem3458390 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (t : _89646 -> Prop) (f : type1524 _89646 _89670 _89671 _89672) : (term63 _89646 _89670 _89671 _89672 P t f) = (term63 _89646 _89670 _89671 _89672 P t f).
Proof. exact (MK_COMB (@lem3458389 _89672) (@lem3458388 _89646 _89670 _89671 _89672 P t f)). Qed.
Lemma lem3458391 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem3458392 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (t : _89646 -> Prop) (f : type1524 _89646 _89670 _89671 _89672) : (term66 _89646 _89670 _89671 _89672 P t f) = (term66 _89646 _89670 _89671 _89672 P t f).
Proof. exact (MK_COMB (@lem3458391) (@lem3458390 _89646 _89670 _89671 _89672 P t f)). Qed.
Lemma lem3458393 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (f : type1524 _89646 _89670 _89671 _89672) (x : _89646) (t : _89646 -> Prop) : (term68 _89646 _89670 _89671 _89672 P f x t) = (term68 _89646 _89670 _89671 _89672 P f x t).
Proof. exact (MK_COMB (@lem3458392 _89646 _89670 _89671 _89672 P t f) (@lem3458356 _89646 x t)). Qed.
Lemma lem3458394 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (f : type1524 _89646 _89670 _89671 _89672) (x : _89646) : (term77 _89646 _89670 _89671 _89672 P f x) = (term77 _89646 _89670 _89671 _89672 P f x).
Proof. exact (fun_ext (fun t : _89646 -> Prop => @lem3458393 _89646 _89670 _89671 _89672 P f x t)). Qed.
Lemma lem3458395 {_89646 : Type'} : (@all (_89646 -> Prop)) = (@all (_89646 -> Prop)).
Proof. exact (eq_refl (@all (_89646 -> Prop))). Qed.
Lemma lem3458396 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (f : type1524 _89646 _89670 _89671 _89672) (x : _89646) : (term78 _89646 _89670 _89671 _89672 P f x) = (term78 _89646 _89670 _89671 _89672 P f x).
Proof. exact (MK_COMB (@lem3458395 _89646) (@lem3458394 _89646 _89670 _89671 _89672 P f x)). Qed.
Lemma lem3458397 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3458398 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (f : type1524 _89646 _89670 _89671 _89672) (x : _89646) : (term104 _89646 _89670 _89671 _89672 P f x) = (term104 _89646 _89670 _89671 _89672 P f x).
Proof. exact (MK_COMB (@lem3458397) (@lem3458396 _89646 _89670 _89671 _89672 P f x)). Qed.
Lemma lem3458399 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) (x' : _89672) (y : _89671) (z : _89670) : (term266 _89646 _89670 _89671 _89672 P x f x' y z) = (term266 _89646 _89670 _89671 _89672 P x f x' y z).
Proof. exact (MK_COMB (@lem3458398 _89646 _89670 _89671 _89672 P f x) (@lem3458349 _89646 _89670 _89671 _89672 P x f x' y z)). Qed.
Lemma lem3458424 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) (x' : _89672) (y : _89671) (z : _89670) : (term80 _89646 _89670 _89671 _89672 P x f x' y z) = (term80 _89646 _89670 _89671 _89672 P x f x' y z).
Proof. exact (eq_refl (term80 _89646 _89670 _89671 _89672 P x f x' y z)). Qed.
Lemma lem3458425 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) (x' : _89672) (y : _89671) : (term87 _89646 _89670 _89671 _89672 P x f x' y) = (term87 _89646 _89670 _89671 _89672 P x f x' y).
Proof. exact (fun_ext (fun z : _89670 => @lem3458424 _89646 _89670 _89671 _89672 P x f x' y z)). Qed.
Lemma lem3458426 {_89670 : Type'} : (@all _89670) = (@all _89670).
Proof. exact (eq_refl (@all _89670)). Qed.
Lemma lem3458427 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) (x' : _89672) (y : _89671) : (term88 _89646 _89670 _89671 _89672 P x f x' y) = (term88 _89646 _89670 _89671 _89672 P x f x' y).
Proof. exact (MK_COMB (@lem3458426 _89670) (@lem3458425 _89646 _89670 _89671 _89672 P x f x' y)). Qed.
Lemma lem3458428 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) (x' : _89672) : (term94 _89646 _89670 _89671 _89672 P x f x') = (term94 _89646 _89670 _89671 _89672 P x f x').
Proof. exact (fun_ext (fun y : _89671 => @lem3458427 _89646 _89670 _89671 _89672 P x f x' y)). Qed.
Lemma lem3458429 {_89671 : Type'} : (@all _89671) = (@all _89671).
Proof. exact (eq_refl (@all _89671)). Qed.
Lemma lem3458430 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) (x' : _89672) : (term95 _89646 _89670 _89671 _89672 P x f x') = (term95 _89646 _89670 _89671 _89672 P x f x').
Proof. exact (MK_COMB (@lem3458429 _89671) (@lem3458428 _89646 _89670 _89671 _89672 P x f x')). Qed.
Lemma lem3458431 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) : (term101 _89646 _89670 _89671 _89672 P x f) = (term101 _89646 _89670 _89671 _89672 P x f).
Proof. exact (fun_ext (fun x' : _89672 => @lem3458430 _89646 _89670 _89671 _89672 P x f x')). Qed.
Lemma lem3458432 {_89672 : Type'} : (@all _89672) = (@all _89672).
Proof. exact (eq_refl (@all _89672)). Qed.
Lemma lem3458433 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) : (term102 _89646 _89670 _89671 _89672 P x f) = (term102 _89646 _89670 _89671 _89672 P x f).
Proof. exact (MK_COMB (@lem3458432 _89672) (@lem3458431 _89646 _89670 _89671 _89672 P x f)). Qed.
Lemma lem3458464 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (f : type1524 _89646 _89670 _89671 _89672) (x' : _89672) (y : _89671) (z : _89670) (x : _89646) (t : _89646 -> Prop) : (term222 _89646 _89670 _89671 _89672 P f x' y z x t) = (term222 _89646 _89670 _89671 _89672 P f x' y z x t).
Proof. exact (eq_refl (term222 _89646 _89670 _89671 _89672 P f x' y z x t)). Qed.
Lemma lem3458465 {_89646 _89670 _89671 _89672 : Type'} (x' : _89672) (y : _89671) (z : _89670) (t : _89646 -> Prop) (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) : (term224 _89646 _89670 _89671 _89672 x' y z t P x f) = (term224 _89646 _89670 _89671 _89672 x' y z t P x f).
Proof. exact (MK_COMB (@lem3458464 _89646 _89670 _89671 _89672 P f x' y z x t) (@lem3458433 _89646 _89670 _89671 _89672 P x f)). Qed.
Lemma lem3458466 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem3458467 {_89646 _89670 _89671 _89672 : Type'} (x' : _89672) (y : _89671) (z : _89670) (t : _89646 -> Prop) (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) : (term344 _89646 _89670 _89671 _89672 x' y z t P x f) = (term344 _89646 _89670 _89671 _89672 x' y z t P x f).
Proof. exact (MK_COMB (@lem3458466) (@lem3458465 _89646 _89670 _89671 _89672 x' y z t P x f)). Qed.
Lemma lem3458468 {_89646 _89670 _89671 _89672 : Type'} (t : _89646 -> Prop) (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) (x' : _89672) (y : _89671) (z : _89670) : (term346 _89646 _89670 _89671 _89672 t P x f x' y z) = (term346 _89646 _89670 _89671 _89672 t P x f x' y z).
Proof. exact (MK_COMB (@lem3458467 _89646 _89670 _89671 _89672 x' y z t P x f) (@lem3458399 _89646 _89670 _89671 _89672 P x f x' y z)). Qed.
Lemma lem3458469 {_89646 _89670 _89671 _89672 : Type'} (t : _89646 -> Prop) (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) (x' : _89672) (y : _89671) (z : _89670) (h1 : term346 _89646 _89670 _89671 _89672 t P x f x' y z) : term346 _89646 _89670 _89671 _89672 t P x f x' y z.
Proof. exact (EQ_MP (@lem3458468 _89646 _89670 _89671 _89672 t P x f x' y z) (@lem3458328 _89646 _89670 _89671 _89672 t P x f x' y z h1)). Qed.
Lemma lem3458470 {_89646 _89670 _89671 _89672 : Type'} (x' : _89672) (y : _89671) (z : _89670) (t : _89646 -> Prop) (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) (h1 : term224 _89646 _89670 _89671 _89672 x' y z t P x f) : term224 _89646 _89670 _89671 _89672 x' y z t P x f.
Proof. exact (h1). Qed.
Lemma lem3458471 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) (x' : _89672) (y : _89671) (z : _89670) (h1 : term266 _89646 _89670 _89671 _89672 P x f x' y z) : term266 _89646 _89670 _89671 _89672 P x f x' y z.
Proof. exact (h1). Qed.
Lemma lem3458472 {_89646 _89670 _89671 _89672 : Type'} (x' : _89672) (y : _89671) (z : _89670) (t : _89646 -> Prop) (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) (h1 : term224 _89646 _89670 _89671 _89672 x' y z t P x f) : term102 _89646 _89670 _89671 _89672 P x f.
Proof. exact (proj2 (@lem3458470 _89646 _89670 _89671 _89672 x' y z t P x f h1)). Qed.
Lemma lem3458473 {_89646 _89670 _89671 _89672 : Type'} (x' : _89672) (y : _89671) (z : _89670) (t : _89646 -> Prop) (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) (h1 : term224 _89646 _89670 _89671 _89672 x' y z t P x f) : term154 _89646 _89670 _89671 _89672 P f x' y z x t.
Proof. exact (proj1 (@lem3458470 _89646 _89670 _89671 _89672 x' y z t P x f h1)). Qed.
Lemma lem3458475 {_89646 _89670 _89671 _89672 : Type'} (x' : _89672) (y : _89671) (z : _89670) (t : _89646 -> Prop) (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) (h1 : term224 _89646 _89670 _89671 _89672 x' y z t P x f) : term24 _89646 _89670 _89671 _89672 P t f x' y z.
Proof. exact (proj1 (@lem3458473 _89646 _89670 _89671 _89672 x' y z t P x f h1)). Qed.
Lemma lem3458478 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) (x' : _89672) (y : _89671) (z : _89670) (h1 : term266 _89646 _89670 _89671 _89672 P x f x' y z) : term17 _89646 _89670 _89671 _89672 P x f x' y z.
Proof. exact (proj2 (@lem3458471 _89646 _89670 _89671 _89672 P x f x' y z h1)). Qed.
Lemma lem3458479 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) (x' : _89672) (y : _89671) (z : _89670) (h1 : term266 _89646 _89670 _89671 _89672 P x f x' y z) : term78 _89646 _89670 _89671 _89672 P f x.
Proof. exact (proj1 (@lem3458471 _89646 _89670 _89671 _89672 P x f x' y z h1)). Qed.
Lemma lem3458489 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) (x' : _89672) (y : _89671) (z : _89670) : (term80 _89646 _89670 _89671 _89672 P x f x' y z) = (term80 _89646 _89670 _89671 _89672 P x f x' y z).
Proof. exact (eq_refl (term80 _89646 _89670 _89671 _89672 P x f x' y z)). Qed.
Lemma lem3458490 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) (x' : _89672) (y : _89671) : (term87 _89646 _89670 _89671 _89672 P x f x' y) = (term87 _89646 _89670 _89671 _89672 P x f x' y).
Proof. exact (fun_ext (fun z : _89670 => @lem3458489 _89646 _89670 _89671 _89672 P x f x' y z)). Qed.
Lemma lem3458491 {_89670 : Type'} : (@all _89670) = (@all _89670).
Proof. exact (eq_refl (@all _89670)). Qed.
Lemma lem3458492 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) (x' : _89672) (y : _89671) : (term88 _89646 _89670 _89671 _89672 P x f x' y) = (term88 _89646 _89670 _89671 _89672 P x f x' y).
Proof. exact (MK_COMB (@lem3458491 _89670) (@lem3458490 _89646 _89670 _89671 _89672 P x f x' y)). Qed.
Lemma lem3458493 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) (x' : _89672) : (term94 _89646 _89670 _89671 _89672 P x f x') = (term94 _89646 _89670 _89671 _89672 P x f x').
Proof. exact (fun_ext (fun y : _89671 => @lem3458492 _89646 _89670 _89671 _89672 P x f x' y)). Qed.
Lemma lem3458494 {_89671 : Type'} : (@all _89671) = (@all _89671).
Proof. exact (eq_refl (@all _89671)). Qed.
Lemma lem3458495 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) (x' : _89672) : (term95 _89646 _89670 _89671 _89672 P x f x') = (term95 _89646 _89670 _89671 _89672 P x f x').
Proof. exact (MK_COMB (@lem3458494 _89671) (@lem3458493 _89646 _89670 _89671 _89672 P x f x')). Qed.
Lemma lem3458496 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) : (term101 _89646 _89670 _89671 _89672 P x f) = (term101 _89646 _89670 _89671 _89672 P x f).
Proof. exact (fun_ext (fun x' : _89672 => @lem3458495 _89646 _89670 _89671 _89672 P x f x')). Qed.
Lemma lem3458497 {_89672 : Type'} : (@all _89672) = (@all _89672).
Proof. exact (eq_refl (@all _89672)). Qed.
Lemma lem3458499 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) : (term102 _89646 _89670 _89671 _89672 P x f) = (term102 _89646 _89670 _89671 _89672 P x f).
Proof. exact (MK_COMB (@lem3458497 _89672) (@lem3458496 _89646 _89670 _89671 _89672 P x f)). Qed.
Lemma lem3458500 {_89646 _89670 _89671 _89672 : Type'} (x' : _89672) (y : _89671) (z : _89670) (t : _89646 -> Prop) (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) (h1 : term224 _89646 _89670 _89671 _89672 x' y z t P x f) : term102 _89646 _89670 _89671 _89672 P x f.
Proof. exact (EQ_MP (@lem3458499 _89646 _89670 _89671 _89672 P x f) (@lem3458472 _89646 _89670 _89671 _89672 x' y z t P x f h1)). Qed.
Lemma lem3458514 {A : Type'} (P : A -> Prop) (Q : Prop) : (term356 A P Q) = (term357 A P Q).
Proof. exact (EQ_MP (@lem19013 A P Q) (@lem19012 A P Q)). Qed.
Lemma lem3458515 {_89672 : Type'} (P : _89672 -> Prop) (Q : Prop) : (term356 _89672 P Q) = (term357 _89672 P Q).
Proof. exact (@lem3458514 _89672 P Q). Qed.
Lemma lem3458516 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (f : type1524 _89646 _89670 _89671 _89672) (x : _89646) (t : _89646 -> Prop) : (term358 _89646 _89670 _89671 _89672 P f x t) = (term359 _89646 _89670 _89671 _89672 P f x t).
Proof. exact (@lem3458515 _89672 (term62 _89646 _89670 _89671 _89672 P t f) (term64 _89646 x t)). Qed.
Lemma lem3458517 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (t : _89646 -> Prop) (f : type1524 _89646 _89670 _89671 _89672) (x : _89672) : (term360 _89646 _89670 _89671 _89672 P t f x) = (term56 _89646 _89670 _89671 _89672 P t f x).
Proof. exact (eq_refl (term360 _89646 _89670 _89671 _89672 P t f x)). Qed.
Lemma lem3458518 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (t : _89646 -> Prop) (f : type1524 _89646 _89670 _89671 _89672) : (term361 _89646 _89670 _89671 _89672 P t f) = (term62 _89646 _89670 _89671 _89672 P t f).
Proof. exact (fun_ext (fun x : _89672 => @lem3458517 _89646 _89670 _89671 _89672 P t f x)). Qed.
Lemma lem3458519 {_89672 : Type'} : (@all _89672) = (@all _89672).
Proof. exact (eq_refl (@all _89672)). Qed.
Lemma lem3458520 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (t : _89646 -> Prop) (f : type1524 _89646 _89670 _89671 _89672) : (term362 _89646 _89670 _89671 _89672 P t f) = (term63 _89646 _89670 _89671 _89672 P t f).
Proof. exact (MK_COMB (@lem3458519 _89672) (@lem3458518 _89646 _89670 _89671 _89672 P t f)). Qed.
Lemma lem3458521 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem3458522 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (t : _89646 -> Prop) (f : type1524 _89646 _89670 _89671 _89672) : (term363 _89646 _89670 _89671 _89672 P t f) = (term66 _89646 _89670 _89671 _89672 P t f).
Proof. exact (MK_COMB (@lem3458521) (@lem3458520 _89646 _89670 _89671 _89672 P t f)). Qed.
Lemma lem3458523 {_89646 : Type'} (x : _89646) (t : _89646 -> Prop) : (term64 _89646 x t) = (term64 _89646 x t).
Proof. exact (eq_refl (term64 _89646 x t)). Qed.
Lemma lem3458524 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (f : type1524 _89646 _89670 _89671 _89672) (x : _89646) (t : _89646 -> Prop) : (term358 _89646 _89670 _89671 _89672 P f x t) = (term68 _89646 _89670 _89671 _89672 P f x t).
Proof. exact (MK_COMB (@lem3458522 _89646 _89670 _89671 _89672 P t f) (@lem3458523 _89646 x t)). Qed.
Lemma lem3458525 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3458526 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (f : type1524 _89646 _89670 _89671 _89672) (x : _89646) (t : _89646 -> Prop) : (term364 _89646 _89670 _89671 _89672 P f x t) = (term365 _89646 _89670 _89671 _89672 P f x t).
Proof. exact (MK_COMB (@lem3458525) (@lem3458524 _89646 _89670 _89671 _89672 P f x t)). Qed.
Lemma lem3458527 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (t : _89646 -> Prop) (f : type1524 _89646 _89670 _89671 _89672) (x : _89672) : (term360 _89646 _89670 _89671 _89672 P t f x) = (term56 _89646 _89670 _89671 _89672 P t f x).
Proof. exact (eq_refl (term360 _89646 _89670 _89671 _89672 P t f x)). Qed.
Lemma lem3458528 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem3458529 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (t : _89646 -> Prop) (f : type1524 _89646 _89670 _89671 _89672) (x : _89672) : (term366 _89646 _89670 _89671 _89672 P t f x) = (term367 _89646 _89670 _89671 _89672 P t f x).
Proof. exact (MK_COMB (@lem3458528) (@lem3458527 _89646 _89670 _89671 _89672 P t f x)). Qed.
Lemma lem3458530 {_89646 : Type'} (x : _89646) (t : _89646 -> Prop) : (term64 _89646 x t) = (term64 _89646 x t).
Proof. exact (eq_refl (term64 _89646 x t)). Qed.
Lemma lem3458531 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (f : type1524 _89646 _89670 _89671 _89672) (x : _89672) (x' : _89646) (t : _89646 -> Prop) : (term368 _89646 _89670 _89671 _89672 P f x x' t) = (term369 _89646 _89670 _89671 _89672 P f x x' t).
Proof. exact (MK_COMB (@lem3458529 _89646 _89670 _89671 _89672 P t f x) (@lem3458530 _89646 x' t)). Qed.
Lemma lem3458532 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (f : type1524 _89646 _89670 _89671 _89672) (x : _89646) (t : _89646 -> Prop) : (term370 _89646 _89670 _89671 _89672 P f x t) = (term371 _89646 _89670 _89671 _89672 P f x t).
Proof. exact (fun_ext (fun x' : _89672 => @lem3458531 _89646 _89670 _89671 _89672 P f x' x t)). Qed.
Lemma lem3458533 {_89672 : Type'} : (@all _89672) = (@all _89672).
Proof. exact (eq_refl (@all _89672)). Qed.
Lemma lem3458534 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (f : type1524 _89646 _89670 _89671 _89672) (x : _89646) (t : _89646 -> Prop) : (term359 _89646 _89670 _89671 _89672 P f x t) = (term372 _89646 _89670 _89671 _89672 P f x t).
Proof. exact (MK_COMB (@lem3458533 _89672) (@lem3458532 _89646 _89670 _89671 _89672 P f x t)). Qed.
Lemma lem3458535 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (f : type1524 _89646 _89670 _89671 _89672) (x : _89646) (t : _89646 -> Prop) : ((term358 _89646 _89670 _89671 _89672 P f x t) = (term359 _89646 _89670 _89671 _89672 P f x t)) = ((term68 _89646 _89670 _89671 _89672 P f x t) = (term372 _89646 _89670 _89671 _89672 P f x t)).
Proof. exact (MK_COMB (@lem3458526 _89646 _89670 _89671 _89672 P f x t) (@lem3458534 _89646 _89670 _89671 _89672 P f x t)). Qed.
Lemma lem3458536 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (f : type1524 _89646 _89670 _89671 _89672) (x : _89646) (t : _89646 -> Prop) : (term68 _89646 _89670 _89671 _89672 P f x t) = (term372 _89646 _89670 _89671 _89672 P f x t).
Proof. exact (EQ_MP (@lem3458535 _89646 _89670 _89671 _89672 P f x t) (@lem3458516 _89646 _89670 _89671 _89672 P f x t)). Qed.
Lemma lem3458538 {A : Type'} (P : A -> Prop) (Q : Prop) : (term356 A P Q) = (term357 A P Q).
Proof. exact (EQ_MP (@lem19013 A P Q) (@lem19012 A P Q)). Qed.
Lemma lem3458539 {_89671 : Type'} (P : _89671 -> Prop) (Q : Prop) : (term356 _89671 P Q) = (term357 _89671 P Q).
Proof. exact (@lem3458538 _89671 P Q). Qed.
Lemma lem3458540 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (f : type1524 _89646 _89670 _89671 _89672) (x : _89672) (x' : _89646) (t : _89646 -> Prop) : (term373 _89646 _89670 _89671 _89672 P f x x' t) = (term374 _89646 _89670 _89671 _89672 P f x x' t).
Proof. exact (@lem3458539 _89671 (term55 _89646 _89670 _89671 _89672 P t f x) (term64 _89646 x' t)). Qed.
Lemma lem3458541 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (t : _89646 -> Prop) (f : type1524 _89646 _89670 _89671 _89672) (x : _89672) (y : _89671) : (term375 _89646 _89670 _89671 _89672 P t f x y) = (term49 _89646 _89670 _89671 _89672 P t f x y).
Proof. exact (eq_refl (term375 _89646 _89670 _89671 _89672 P t f x y)). Qed.
Lemma lem3458542 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (t : _89646 -> Prop) (f : type1524 _89646 _89670 _89671 _89672) (x : _89672) : (term376 _89646 _89670 _89671 _89672 P t f x) = (term55 _89646 _89670 _89671 _89672 P t f x).
Proof. exact (fun_ext (fun y : _89671 => @lem3458541 _89646 _89670 _89671 _89672 P t f x y)). Qed.
Lemma lem3458543 {_89671 : Type'} : (@all _89671) = (@all _89671).
Proof. exact (eq_refl (@all _89671)). Qed.
Lemma lem3458544 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (t : _89646 -> Prop) (f : type1524 _89646 _89670 _89671 _89672) (x : _89672) : (term377 _89646 _89670 _89671 _89672 P t f x) = (term56 _89646 _89670 _89671 _89672 P t f x).
Proof. exact (MK_COMB (@lem3458543 _89671) (@lem3458542 _89646 _89670 _89671 _89672 P t f x)). Qed.
Lemma lem3458545 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem3458546 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (t : _89646 -> Prop) (f : type1524 _89646 _89670 _89671 _89672) (x : _89672) : (term378 _89646 _89670 _89671 _89672 P t f x) = (term367 _89646 _89670 _89671 _89672 P t f x).
Proof. exact (MK_COMB (@lem3458545) (@lem3458544 _89646 _89670 _89671 _89672 P t f x)). Qed.
Lemma lem3458547 {_89646 : Type'} (x : _89646) (t : _89646 -> Prop) : (term64 _89646 x t) = (term64 _89646 x t).
Proof. exact (eq_refl (term64 _89646 x t)). Qed.
Lemma lem3458548 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (f : type1524 _89646 _89670 _89671 _89672) (x : _89672) (x' : _89646) (t : _89646 -> Prop) : (term373 _89646 _89670 _89671 _89672 P f x x' t) = (term369 _89646 _89670 _89671 _89672 P f x x' t).
Proof. exact (MK_COMB (@lem3458546 _89646 _89670 _89671 _89672 P t f x) (@lem3458547 _89646 x' t)). Qed.
Lemma lem3458549 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3458550 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (f : type1524 _89646 _89670 _89671 _89672) (x : _89672) (x' : _89646) (t : _89646 -> Prop) : (term379 _89646 _89670 _89671 _89672 P f x x' t) = (term380 _89646 _89670 _89671 _89672 P f x x' t).
Proof. exact (MK_COMB (@lem3458549) (@lem3458548 _89646 _89670 _89671 _89672 P f x x' t)). Qed.
Lemma lem3458551 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (t : _89646 -> Prop) (f : type1524 _89646 _89670 _89671 _89672) (x : _89672) (y : _89671) : (term375 _89646 _89670 _89671 _89672 P t f x y) = (term49 _89646 _89670 _89671 _89672 P t f x y).
Proof. exact (eq_refl (term375 _89646 _89670 _89671 _89672 P t f x y)). Qed.
Lemma lem3458552 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem3458553 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (t : _89646 -> Prop) (f : type1524 _89646 _89670 _89671 _89672) (x : _89672) (y : _89671) : (term381 _89646 _89670 _89671 _89672 P t f x y) = (term382 _89646 _89670 _89671 _89672 P t f x y).
Proof. exact (MK_COMB (@lem3458552) (@lem3458551 _89646 _89670 _89671 _89672 P t f x y)). Qed.
Lemma lem3458554 {_89646 : Type'} (x : _89646) (t : _89646 -> Prop) : (term64 _89646 x t) = (term64 _89646 x t).
Proof. exact (eq_refl (term64 _89646 x t)). Qed.
Lemma lem3458555 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (f : type1524 _89646 _89670 _89671 _89672) (x : _89672) (y : _89671) (x' : _89646) (t : _89646 -> Prop) : (term383 _89646 _89670 _89671 _89672 P f x y x' t) = (term384 _89646 _89670 _89671 _89672 P f x y x' t).
Proof. exact (MK_COMB (@lem3458553 _89646 _89670 _89671 _89672 P t f x y) (@lem3458554 _89646 x' t)). Qed.
Lemma lem3458556 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (f : type1524 _89646 _89670 _89671 _89672) (x : _89672) (x' : _89646) (t : _89646 -> Prop) : (term385 _89646 _89670 _89671 _89672 P f x x' t) = (term386 _89646 _89670 _89671 _89672 P f x x' t).
Proof. exact (fun_ext (fun y : _89671 => @lem3458555 _89646 _89670 _89671 _89672 P f x y x' t)). Qed.
Lemma lem3458557 {_89671 : Type'} : (@all _89671) = (@all _89671).
Proof. exact (eq_refl (@all _89671)). Qed.
Lemma lem3458558 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (f : type1524 _89646 _89670 _89671 _89672) (x : _89672) (x' : _89646) (t : _89646 -> Prop) : (term374 _89646 _89670 _89671 _89672 P f x x' t) = (term387 _89646 _89670 _89671 _89672 P f x x' t).
Proof. exact (MK_COMB (@lem3458557 _89671) (@lem3458556 _89646 _89670 _89671 _89672 P f x x' t)). Qed.
Lemma lem3458559 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (f : type1524 _89646 _89670 _89671 _89672) (x : _89672) (x' : _89646) (t : _89646 -> Prop) : ((term373 _89646 _89670 _89671 _89672 P f x x' t) = (term374 _89646 _89670 _89671 _89672 P f x x' t)) = ((term369 _89646 _89670 _89671 _89672 P f x x' t) = (term387 _89646 _89670 _89671 _89672 P f x x' t)).
Proof. exact (MK_COMB (@lem3458550 _89646 _89670 _89671 _89672 P f x x' t) (@lem3458558 _89646 _89670 _89671 _89672 P f x x' t)). Qed.
Lemma lem3458560 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (f : type1524 _89646 _89670 _89671 _89672) (x : _89672) (x' : _89646) (t : _89646 -> Prop) : (term369 _89646 _89670 _89671 _89672 P f x x' t) = (term387 _89646 _89670 _89671 _89672 P f x x' t).
Proof. exact (EQ_MP (@lem3458559 _89646 _89670 _89671 _89672 P f x x' t) (@lem3458540 _89646 _89670 _89671 _89672 P f x x' t)). Qed.
Lemma lem3458562 {A : Type'} (P : A -> Prop) (Q : Prop) : (term356 A P Q) = (term357 A P Q).
Proof. exact (EQ_MP (@lem19013 A P Q) (@lem19012 A P Q)). Qed.
Lemma lem3458563 {_89670 : Type'} (P : _89670 -> Prop) (Q : Prop) : (term356 _89670 P Q) = (term357 _89670 P Q).
Proof. exact (@lem3458562 _89670 P Q). Qed.
Lemma lem3458564 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (f : type1524 _89646 _89670 _89671 _89672) (x : _89672) (y : _89671) (x' : _89646) (t : _89646 -> Prop) : (term388 _89646 _89670 _89671 _89672 P f x y x' t) = (term389 _89646 _89670 _89671 _89672 P f x y x' t).
Proof. exact (@lem3458563 _89670 (term48 _89646 _89670 _89671 _89672 P t f x y) (term64 _89646 x' t)). Qed.
Lemma lem3458565 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (t : _89646 -> Prop) (f : type1524 _89646 _89670 _89671 _89672) (x : _89672) (y : _89671) (z : _89670) : (term390 _89646 _89670 _89671 _89672 P t f x y z) = (term40 _89646 _89670 _89671 _89672 P t f x y z).
Proof. exact (eq_refl (term390 _89646 _89670 _89671 _89672 P t f x y z)). Qed.
Lemma lem3458566 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (t : _89646 -> Prop) (f : type1524 _89646 _89670 _89671 _89672) (x : _89672) (y : _89671) : (term391 _89646 _89670 _89671 _89672 P t f x y) = (term48 _89646 _89670 _89671 _89672 P t f x y).
Proof. exact (fun_ext (fun z : _89670 => @lem3458565 _89646 _89670 _89671 _89672 P t f x y z)). Qed.
Lemma lem3458567 {_89670 : Type'} : (@all _89670) = (@all _89670).
Proof. exact (eq_refl (@all _89670)). Qed.
Lemma lem3458568 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (t : _89646 -> Prop) (f : type1524 _89646 _89670 _89671 _89672) (x : _89672) (y : _89671) : (term392 _89646 _89670 _89671 _89672 P t f x y) = (term49 _89646 _89670 _89671 _89672 P t f x y).
Proof. exact (MK_COMB (@lem3458567 _89670) (@lem3458566 _89646 _89670 _89671 _89672 P t f x y)). Qed.
Lemma lem3458569 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem3458570 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (t : _89646 -> Prop) (f : type1524 _89646 _89670 _89671 _89672) (x : _89672) (y : _89671) : (term393 _89646 _89670 _89671 _89672 P t f x y) = (term382 _89646 _89670 _89671 _89672 P t f x y).
Proof. exact (MK_COMB (@lem3458569) (@lem3458568 _89646 _89670 _89671 _89672 P t f x y)). Qed.
Lemma lem3458571 {_89646 : Type'} (x : _89646) (t : _89646 -> Prop) : (term64 _89646 x t) = (term64 _89646 x t).
Proof. exact (eq_refl (term64 _89646 x t)). Qed.
Lemma lem3458572 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (f : type1524 _89646 _89670 _89671 _89672) (x : _89672) (y : _89671) (x' : _89646) (t : _89646 -> Prop) : (term388 _89646 _89670 _89671 _89672 P f x y x' t) = (term384 _89646 _89670 _89671 _89672 P f x y x' t).
Proof. exact (MK_COMB (@lem3458570 _89646 _89670 _89671 _89672 P t f x y) (@lem3458571 _89646 x' t)). Qed.
Lemma lem3458573 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3458574 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (f : type1524 _89646 _89670 _89671 _89672) (x : _89672) (y : _89671) (x' : _89646) (t : _89646 -> Prop) : (term394 _89646 _89670 _89671 _89672 P f x y x' t) = (term395 _89646 _89670 _89671 _89672 P f x y x' t).
Proof. exact (MK_COMB (@lem3458573) (@lem3458572 _89646 _89670 _89671 _89672 P f x y x' t)). Qed.
Lemma lem3458575 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (t : _89646 -> Prop) (f : type1524 _89646 _89670 _89671 _89672) (x : _89672) (y : _89671) (z : _89670) : (term390 _89646 _89670 _89671 _89672 P t f x y z) = (term40 _89646 _89670 _89671 _89672 P t f x y z).
Proof. exact (eq_refl (term390 _89646 _89670 _89671 _89672 P t f x y z)). Qed.
Lemma lem3458576 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem3458577 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (t : _89646 -> Prop) (f : type1524 _89646 _89670 _89671 _89672) (x : _89672) (y : _89671) (z : _89670) : (term396 _89646 _89670 _89671 _89672 P t f x y z) = (term397 _89646 _89670 _89671 _89672 P t f x y z).
Proof. exact (MK_COMB (@lem3458576) (@lem3458575 _89646 _89670 _89671 _89672 P t f x y z)). Qed.
Lemma lem3458578 {_89646 : Type'} (x : _89646) (t : _89646 -> Prop) : (term64 _89646 x t) = (term64 _89646 x t).
Proof. exact (eq_refl (term64 _89646 x t)). Qed.
Lemma lem3458579 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (f : type1524 _89646 _89670 _89671 _89672) (x : _89672) (y : _89671) (z : _89670) (x' : _89646) (t : _89646 -> Prop) : (term398 _89646 _89670 _89671 _89672 P f x y z x' t) = (term399 _89646 _89670 _89671 _89672 P f x y z x' t).
Proof. exact (MK_COMB (@lem3458577 _89646 _89670 _89671 _89672 P t f x y z) (@lem3458578 _89646 x' t)). Qed.
Lemma lem3458580 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (f : type1524 _89646 _89670 _89671 _89672) (x : _89672) (y : _89671) (x' : _89646) (t : _89646 -> Prop) : (term400 _89646 _89670 _89671 _89672 P f x y x' t) = (term401 _89646 _89670 _89671 _89672 P f x y x' t).
Proof. exact (fun_ext (fun z : _89670 => @lem3458579 _89646 _89670 _89671 _89672 P f x y z x' t)). Qed.
Lemma lem3458581 {_89670 : Type'} : (@all _89670) = (@all _89670).
Proof. exact (eq_refl (@all _89670)). Qed.
Lemma lem3458582 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (f : type1524 _89646 _89670 _89671 _89672) (x : _89672) (y : _89671) (x' : _89646) (t : _89646 -> Prop) : (term389 _89646 _89670 _89671 _89672 P f x y x' t) = (term402 _89646 _89670 _89671 _89672 P f x y x' t).
Proof. exact (MK_COMB (@lem3458581 _89670) (@lem3458580 _89646 _89670 _89671 _89672 P f x y x' t)). Qed.
Lemma lem3458583 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (f : type1524 _89646 _89670 _89671 _89672) (x : _89672) (y : _89671) (x' : _89646) (t : _89646 -> Prop) : ((term388 _89646 _89670 _89671 _89672 P f x y x' t) = (term389 _89646 _89670 _89671 _89672 P f x y x' t)) = ((term384 _89646 _89670 _89671 _89672 P f x y x' t) = (term402 _89646 _89670 _89671 _89672 P f x y x' t)).
Proof. exact (MK_COMB (@lem3458574 _89646 _89670 _89671 _89672 P f x y x' t) (@lem3458582 _89646 _89670 _89671 _89672 P f x y x' t)). Qed.
Lemma lem3458584 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (f : type1524 _89646 _89670 _89671 _89672) (x : _89672) (y : _89671) (x' : _89646) (t : _89646 -> Prop) : (term384 _89646 _89670 _89671 _89672 P f x y x' t) = (term402 _89646 _89670 _89671 _89672 P f x y x' t).
Proof. exact (EQ_MP (@lem3458583 _89646 _89670 _89671 _89672 P f x y x' t) (@lem3458564 _89646 _89670 _89671 _89672 P f x y x' t)). Qed.
Lemma lem3458585 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (f : type1524 _89646 _89670 _89671 _89672) (x : _89672) (x' : _89646) (t : _89646 -> Prop) : (term386 _89646 _89670 _89671 _89672 P f x x' t) = (term403 _89646 _89670 _89671 _89672 P f x x' t).
Proof. exact (fun_ext (fun y : _89671 => @lem3458584 _89646 _89670 _89671 _89672 P f x y x' t)). Qed.
Lemma lem3458586 {_89671 : Type'} : (@all _89671) = (@all _89671).
Proof. exact (eq_refl (@all _89671)). Qed.
Lemma lem3458587 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (f : type1524 _89646 _89670 _89671 _89672) (x : _89672) (x' : _89646) (t : _89646 -> Prop) : (term387 _89646 _89670 _89671 _89672 P f x x' t) = (term404 _89646 _89670 _89671 _89672 P f x x' t).
Proof. exact (MK_COMB (@lem3458586 _89671) (@lem3458585 _89646 _89670 _89671 _89672 P f x x' t)). Qed.
Lemma lem3458588 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (f : type1524 _89646 _89670 _89671 _89672) (x : _89672) (x' : _89646) (t : _89646 -> Prop) : (term369 _89646 _89670 _89671 _89672 P f x x' t) = (term404 _89646 _89670 _89671 _89672 P f x x' t).
Proof. exact (TRANS (@lem3458560 _89646 _89670 _89671 _89672 P f x x' t) (@lem3458587 _89646 _89670 _89671 _89672 P f x x' t)). Qed.
Lemma lem3458589 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (f : type1524 _89646 _89670 _89671 _89672) (x : _89646) (t : _89646 -> Prop) : (term371 _89646 _89670 _89671 _89672 P f x t) = (term405 _89646 _89670 _89671 _89672 P f x t).
Proof. exact (fun_ext (fun x' : _89672 => @lem3458588 _89646 _89670 _89671 _89672 P f x' x t)). Qed.
Lemma lem3458590 {_89672 : Type'} : (@all _89672) = (@all _89672).
Proof. exact (eq_refl (@all _89672)). Qed.
Lemma lem3458591 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (f : type1524 _89646 _89670 _89671 _89672) (x : _89646) (t : _89646 -> Prop) : (term372 _89646 _89670 _89671 _89672 P f x t) = (term406 _89646 _89670 _89671 _89672 P f x t).
Proof. exact (MK_COMB (@lem3458590 _89672) (@lem3458589 _89646 _89670 _89671 _89672 P f x t)). Qed.
Lemma lem3458592 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (f : type1524 _89646 _89670 _89671 _89672) (x : _89646) (t : _89646 -> Prop) : (term68 _89646 _89670 _89671 _89672 P f x t) = (term406 _89646 _89670 _89671 _89672 P f x t).
Proof. exact (TRANS (@lem3458536 _89646 _89670 _89671 _89672 P f x t) (@lem3458591 _89646 _89670 _89671 _89672 P f x t)). Qed.
Lemma lem3458593 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (f : type1524 _89646 _89670 _89671 _89672) (x : _89646) : (term77 _89646 _89670 _89671 _89672 P f x) = (term407 _89646 _89670 _89671 _89672 P f x).
Proof. exact (fun_ext (fun t : _89646 -> Prop => @lem3458592 _89646 _89670 _89671 _89672 P f x t)). Qed.
Lemma lem3458594 {_89646 : Type'} : (@all (_89646 -> Prop)) = (@all (_89646 -> Prop)).
Proof. exact (eq_refl (@all (_89646 -> Prop))). Qed.
Lemma lem3458595 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (f : type1524 _89646 _89670 _89671 _89672) (x : _89646) : (term78 _89646 _89670 _89671 _89672 P f x) = (term408 _89646 _89670 _89671 _89672 P f x).
Proof. exact (MK_COMB (@lem3458594 _89646) (@lem3458593 _89646 _89670 _89671 _89672 P f x)). Qed.
Lemma lem3458608 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (f : type1524 _89646 _89670 _89671 _89672) (x : _89672) (y : _89671) (z : _89670) (x' : _89646) (t : _89646 -> Prop) : (term399 _89646 _89670 _89671 _89672 P f x y z x' t) = (term399 _89646 _89670 _89671 _89672 P f x y z x' t).
Proof. exact (eq_refl (term399 _89646 _89670 _89671 _89672 P f x y z x' t)). Qed.
Lemma lem3458609 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (f : type1524 _89646 _89670 _89671 _89672) (x : _89672) (y : _89671) (x' : _89646) (t : _89646 -> Prop) : (term401 _89646 _89670 _89671 _89672 P f x y x' t) = (term401 _89646 _89670 _89671 _89672 P f x y x' t).
Proof. exact (fun_ext (fun z : _89670 => @lem3458608 _89646 _89670 _89671 _89672 P f x y z x' t)). Qed.
Lemma lem3458610 {_89670 : Type'} : (@all _89670) = (@all _89670).
Proof. exact (eq_refl (@all _89670)). Qed.
Lemma lem3458611 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (f : type1524 _89646 _89670 _89671 _89672) (x : _89672) (y : _89671) (x' : _89646) (t : _89646 -> Prop) : (term402 _89646 _89670 _89671 _89672 P f x y x' t) = (term402 _89646 _89670 _89671 _89672 P f x y x' t).
Proof. exact (MK_COMB (@lem3458610 _89670) (@lem3458609 _89646 _89670 _89671 _89672 P f x y x' t)). Qed.
Lemma lem3458612 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (f : type1524 _89646 _89670 _89671 _89672) (x : _89672) (x' : _89646) (t : _89646 -> Prop) : (term403 _89646 _89670 _89671 _89672 P f x x' t) = (term403 _89646 _89670 _89671 _89672 P f x x' t).
Proof. exact (fun_ext (fun y : _89671 => @lem3458611 _89646 _89670 _89671 _89672 P f x y x' t)). Qed.
Lemma lem3458613 {_89671 : Type'} : (@all _89671) = (@all _89671).
Proof. exact (eq_refl (@all _89671)). Qed.
Lemma lem3458614 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (f : type1524 _89646 _89670 _89671 _89672) (x : _89672) (x' : _89646) (t : _89646 -> Prop) : (term404 _89646 _89670 _89671 _89672 P f x x' t) = (term404 _89646 _89670 _89671 _89672 P f x x' t).
Proof. exact (MK_COMB (@lem3458613 _89671) (@lem3458612 _89646 _89670 _89671 _89672 P f x x' t)). Qed.
Lemma lem3458615 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (f : type1524 _89646 _89670 _89671 _89672) (x : _89646) (t : _89646 -> Prop) : (term405 _89646 _89670 _89671 _89672 P f x t) = (term405 _89646 _89670 _89671 _89672 P f x t).
Proof. exact (fun_ext (fun x' : _89672 => @lem3458614 _89646 _89670 _89671 _89672 P f x' x t)). Qed.
Lemma lem3458616 {_89672 : Type'} : (@all _89672) = (@all _89672).
Proof. exact (eq_refl (@all _89672)). Qed.
Lemma lem3458617 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (f : type1524 _89646 _89670 _89671 _89672) (x : _89646) (t : _89646 -> Prop) : (term406 _89646 _89670 _89671 _89672 P f x t) = (term406 _89646 _89670 _89671 _89672 P f x t).
Proof. exact (MK_COMB (@lem3458616 _89672) (@lem3458615 _89646 _89670 _89671 _89672 P f x t)). Qed.
Lemma lem3458618 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (f : type1524 _89646 _89670 _89671 _89672) (x : _89646) : (term407 _89646 _89670 _89671 _89672 P f x) = (term407 _89646 _89670 _89671 _89672 P f x).
Proof. exact (fun_ext (fun t : _89646 -> Prop => @lem3458617 _89646 _89670 _89671 _89672 P f x t)). Qed.
Lemma lem3458619 {_89646 : Type'} : (@all (_89646 -> Prop)) = (@all (_89646 -> Prop)).
Proof. exact (eq_refl (@all (_89646 -> Prop))). Qed.
Lemma lem3458620 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (f : type1524 _89646 _89670 _89671 _89672) (x : _89646) : (term408 _89646 _89670 _89671 _89672 P f x) = (term408 _89646 _89670 _89671 _89672 P f x).
Proof. exact (MK_COMB (@lem3458619 _89646) (@lem3458618 _89646 _89670 _89671 _89672 P f x)). Qed.
Lemma lem3458621 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (f : type1524 _89646 _89670 _89671 _89672) (x : _89646) : (term78 _89646 _89670 _89671 _89672 P f x) = (term408 _89646 _89670 _89671 _89672 P f x).
Proof. exact (TRANS (@lem3458595 _89646 _89670 _89671 _89672 P f x) (@lem3458620 _89646 _89670 _89671 _89672 P f x)). Qed.
Lemma lem3458622 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) (x' : _89672) (y : _89671) (z : _89670) (h1 : term266 _89646 _89670 _89671 _89672 P x f x' y z) : term408 _89646 _89670 _89671 _89672 P f x.
Proof. exact (EQ_MP (@lem3458621 _89646 _89670 _89671 _89672 P f x) (@lem3458479 _89646 _89670 _89671 _89672 P x f x' y z h1)). Qed.
Lemma lem3458631 {_89646 _89670 _89671 _89672 : Type'} (_36483 : _89672) (x' : _89672) (y : _89671) (z : _89670) (t : _89646 -> Prop) (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) (h1 : term224 _89646 _89670 _89671 _89672 x' y z t P x f) : term409 _89646 _89670 _89671 _89672 P x f _36483.
Proof. exact (@lem3458500 _89646 _89670 _89671 _89672 x' y z t P x f h1 _36483). Qed.
Lemma lem3458632 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) (_36483 : _89672) : (term409 _89646 _89670 _89671 _89672 P x f _36483) = (term95 _89646 _89670 _89671 _89672 P x f _36483).
Proof. exact (eq_refl (term409 _89646 _89670 _89671 _89672 P x f _36483)). Qed.
Lemma lem3458633 {_89646 _89670 _89671 _89672 : Type'} (_36483 : _89672) (x' : _89672) (y : _89671) (z : _89670) (t : _89646 -> Prop) (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) (h1 : term224 _89646 _89670 _89671 _89672 x' y z t P x f) : term95 _89646 _89670 _89671 _89672 P x f _36483.
Proof. exact (EQ_MP (@lem3458632 _89646 _89670 _89671 _89672 P x f _36483) (@lem3458631 _89646 _89670 _89671 _89672 _36483 x' y z t P x f h1)). Qed.
Lemma lem3458634 {_89646 _89670 _89671 _89672 : Type'} (_36483 : _89672) (_36484 : _89671) (x' : _89672) (y : _89671) (z : _89670) (t : _89646 -> Prop) (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) (h1 : term224 _89646 _89670 _89671 _89672 x' y z t P x f) : term410 _89646 _89670 _89671 _89672 P x f _36483 _36484.
Proof. exact (@lem3458633 _89646 _89670 _89671 _89672 _36483 x' y z t P x f h1 _36484). Qed.
Lemma lem3458635 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) (_36483 : _89672) (_36484 : _89671) : (term410 _89646 _89670 _89671 _89672 P x f _36483 _36484) = (term88 _89646 _89670 _89671 _89672 P x f _36483 _36484).
Proof. exact (eq_refl (term410 _89646 _89670 _89671 _89672 P x f _36483 _36484)). Qed.
Lemma lem3458636 {_89646 _89670 _89671 _89672 : Type'} (_36483 : _89672) (_36484 : _89671) (x' : _89672) (y : _89671) (z : _89670) (t : _89646 -> Prop) (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) (h1 : term224 _89646 _89670 _89671 _89672 x' y z t P x f) : term88 _89646 _89670 _89671 _89672 P x f _36483 _36484.
Proof. exact (EQ_MP (@lem3458635 _89646 _89670 _89671 _89672 P x f _36483 _36484) (@lem3458634 _89646 _89670 _89671 _89672 _36483 _36484 x' y z t P x f h1)). Qed.
Lemma lem3458637 {_89646 _89670 _89671 _89672 : Type'} (_36483 : _89672) (_36484 : _89671) (_36485 : _89670) (x' : _89672) (y : _89671) (z : _89670) (t : _89646 -> Prop) (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) (h1 : term224 _89646 _89670 _89671 _89672 x' y z t P x f) : term411 _89646 _89670 _89671 _89672 P x f _36483 _36484 _36485.
Proof. exact (@lem3458636 _89646 _89670 _89671 _89672 _36483 _36484 x' y z t P x f h1 _36485). Qed.
Lemma lem3458638 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) (_36483 : _89672) (_36484 : _89671) (_36485 : _89670) : (term411 _89646 _89670 _89671 _89672 P x f _36483 _36484 _36485) = (term80 _89646 _89670 _89671 _89672 P x f _36483 _36484 _36485).
Proof. exact (eq_refl (term411 _89646 _89670 _89671 _89672 P x f _36483 _36484 _36485)). Qed.
Lemma lem3458640 {_89646 _89670 _89671 _89672 : Type'} (_36486 : _89646 -> Prop) (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) (x' : _89672) (y : _89671) (z : _89670) (h1 : term266 _89646 _89670 _89671 _89672 P x f x' y z) : term412 _89646 _89670 _89671 _89672 P f x _36486.
Proof. exact (@lem3458622 _89646 _89670 _89671 _89672 P x f x' y z h1 _36486). Qed.
Lemma lem3458641 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (f : type1524 _89646 _89670 _89671 _89672) (x : _89646) (_36486 : _89646 -> Prop) : (term412 _89646 _89670 _89671 _89672 P f x _36486) = (term406 _89646 _89670 _89671 _89672 P f x _36486).
Proof. exact (eq_refl (term412 _89646 _89670 _89671 _89672 P f x _36486)). Qed.
Lemma lem3458642 {_89646 _89670 _89671 _89672 : Type'} (_36486 : _89646 -> Prop) (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) (x' : _89672) (y : _89671) (z : _89670) (h1 : term266 _89646 _89670 _89671 _89672 P x f x' y z) : term406 _89646 _89670 _89671 _89672 P f x _36486.
Proof. exact (EQ_MP (@lem3458641 _89646 _89670 _89671 _89672 P f x _36486) (@lem3458640 _89646 _89670 _89671 _89672 _36486 P x f x' y z h1)). Qed.
Lemma lem3458643 {_89646 _89670 _89671 _89672 : Type'} (_36486 : _89646 -> Prop) (_36487 : _89672) (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) (x' : _89672) (y : _89671) (z : _89670) (h1 : term266 _89646 _89670 _89671 _89672 P x f x' y z) : term413 _89646 _89670 _89671 _89672 P f x _36486 _36487.
Proof. exact (@lem3458642 _89646 _89670 _89671 _89672 _36486 P x f x' y z h1 _36487). Qed.
Lemma lem3458644 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (f : type1524 _89646 _89670 _89671 _89672) (_36487 : _89672) (x : _89646) (_36486 : _89646 -> Prop) : (term413 _89646 _89670 _89671 _89672 P f x _36486 _36487) = (term404 _89646 _89670 _89671 _89672 P f _36487 x _36486).
Proof. exact (eq_refl (term413 _89646 _89670 _89671 _89672 P f x _36486 _36487)). Qed.
Lemma lem3458645 {_89646 _89670 _89671 _89672 : Type'} (_36487 : _89672) (_36486 : _89646 -> Prop) (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) (x' : _89672) (y : _89671) (z : _89670) (h1 : term266 _89646 _89670 _89671 _89672 P x f x' y z) : term404 _89646 _89670 _89671 _89672 P f _36487 x _36486.
Proof. exact (EQ_MP (@lem3458644 _89646 _89670 _89671 _89672 P f _36487 x _36486) (@lem3458643 _89646 _89670 _89671 _89672 _36486 _36487 P x f x' y z h1)). Qed.
Lemma lem3458646 {_89646 _89670 _89671 _89672 : Type'} (_36487 : _89672) (_36486 : _89646 -> Prop) (_36488 : _89671) (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) (x' : _89672) (y : _89671) (z : _89670) (h1 : term266 _89646 _89670 _89671 _89672 P x f x' y z) : term414 _89646 _89670 _89671 _89672 P f _36487 x _36486 _36488.
Proof. exact (@lem3458645 _89646 _89670 _89671 _89672 _36487 _36486 P x f x' y z h1 _36488). Qed.
Lemma lem3458647 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (f : type1524 _89646 _89670 _89671 _89672) (_36487 : _89672) (_36488 : _89671) (x : _89646) (_36486 : _89646 -> Prop) : (term414 _89646 _89670 _89671 _89672 P f _36487 x _36486 _36488) = (term402 _89646 _89670 _89671 _89672 P f _36487 _36488 x _36486).
Proof. exact (eq_refl (term414 _89646 _89670 _89671 _89672 P f _36487 x _36486 _36488)). Qed.
Lemma lem3458648 {_89646 _89670 _89671 _89672 : Type'} (_36487 : _89672) (_36488 : _89671) (_36486 : _89646 -> Prop) (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) (x' : _89672) (y : _89671) (z : _89670) (h1 : term266 _89646 _89670 _89671 _89672 P x f x' y z) : term402 _89646 _89670 _89671 _89672 P f _36487 _36488 x _36486.
Proof. exact (EQ_MP (@lem3458647 _89646 _89670 _89671 _89672 P f _36487 _36488 x _36486) (@lem3458646 _89646 _89670 _89671 _89672 _36487 _36486 _36488 P x f x' y z h1)). Qed.
Lemma lem3458649 {_89646 _89670 _89671 _89672 : Type'} (_36487 : _89672) (_36488 : _89671) (_36486 : _89646 -> Prop) (_36489 : _89670) (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) (x' : _89672) (y : _89671) (z : _89670) (h1 : term266 _89646 _89670 _89671 _89672 P x f x' y z) : term415 _89646 _89670 _89671 _89672 P f _36487 _36488 x _36486 _36489.
Proof. exact (@lem3458648 _89646 _89670 _89671 _89672 _36487 _36488 _36486 P x f x' y z h1 _36489). Qed.
Lemma lem3458650 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (f : type1524 _89646 _89670 _89671 _89672) (_36487 : _89672) (_36488 : _89671) (_36489 : _89670) (x : _89646) (_36486 : _89646 -> Prop) : (term415 _89646 _89670 _89671 _89672 P f _36487 _36488 x _36486 _36489) = (term399 _89646 _89670 _89671 _89672 P f _36487 _36488 _36489 x _36486).
Proof. exact (eq_refl (term415 _89646 _89670 _89671 _89672 P f _36487 _36488 x _36486 _36489)). Qed.
Lemma lem3458651 {_89646 _89670 _89671 _89672 : Type'} (_36487 : _89672) (_36488 : _89671) (_36489 : _89670) (_36486 : _89646 -> Prop) (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) (x' : _89672) (y : _89671) (z : _89670) (h1 : term266 _89646 _89670 _89671 _89672 P x f x' y z) : term399 _89646 _89670 _89671 _89672 P f _36487 _36488 _36489 x _36486.
Proof. exact (EQ_MP (@lem3458650 _89646 _89670 _89671 _89672 P f _36487 _36488 _36489 x _36486) (@lem3458649 _89646 _89670 _89671 _89672 _36487 _36488 _36486 _36489 P x f x' y z h1)). Qed.
Lemma lem3458659 {_89646 _89670 _89671 _89672 : Type'} (x' : _89672) (y : _89671) (z : _89670) (t : _89646 -> Prop) (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) (h1 : term224 _89646 _89670 _89671 _89672 x' y z t P x f) : @IN _89646 x t.
Proof. exact (proj2 (@lem3458473 _89646 _89670 _89671 _89672 x' y z t P x f h1)). Qed.
Lemma lem3458663 {_89646 _89670 _89671 _89672 : Type'} (x' : _89672) (y : _89671) (z : _89670) (t : _89646 -> Prop) (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) (h1 : term224 _89646 _89670 _89671 _89672 x' y z t P x f) : t = (f x' y z).
Proof. exact (proj2 (@lem3458475 _89646 _89670 _89671 _89672 x' y z t P x f h1)). Qed.
Lemma lem3458674 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (f : type1524 _89646 _89670 _89671 _89672) (_36487 : _89672) (_36488 : _89671) (_36489 : _89670) (x : _89646) (_36486 : _89646 -> Prop) : (term399 _89646 _89670 _89671 _89672 P f _36487 _36488 _36489 x _36486) = (term416 _89646 _89670 _89671 _89672 P f _36487 _36488 _36489 x _36486).
Proof. exact (@lem3453857 (term417 _89670 _89671 _89672 P _36487 _36488 _36489) (term418 _89646 _89670 _89671 _89672 _36486 f _36487 _36488 _36489) (term64 _89646 x _36486)). Qed.
Lemma lem3458675 {_89646 _89670 _89671 _89672 : Type'} (_36487 : _89672) (_36488 : _89671) (_36489 : _89670) (_36486 : _89646 -> Prop) (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) (x' : _89672) (y : _89671) (z : _89670) (h1 : term266 _89646 _89670 _89671 _89672 P x f x' y z) : term416 _89646 _89670 _89671 _89672 P f _36487 _36488 _36489 x _36486.
Proof. exact (EQ_MP (@lem3458674 _89646 _89670 _89671 _89672 P f _36487 _36488 _36489 x _36486) (@lem3458651 _89646 _89670 _89671 _89672 _36487 _36488 _36489 _36486 P x f x' y z h1)). Qed.
Lemma lem3458707 {_89646 _89670 _89671 _89672 : Type'} (_36483 : _89672) (_36484 : _89671) (_36485 : _89670) (x' : _89672) (y : _89671) (z : _89670) (t : _89646 -> Prop) (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) (h1 : term224 _89646 _89670 _89671 _89672 x' y z t P x f) : term80 _89646 _89670 _89671 _89672 P x f _36483 _36484 _36485.
Proof. exact (EQ_MP (@lem3458638 _89646 _89670 _89671 _89672 P x f _36483 _36484 _36485) (@lem3458637 _89646 _89670 _89671 _89672 _36483 _36484 _36485 x' y z t P x f h1)). Qed.
Lemma lem3458708 {_89646 : Type'} (x : _89646) : (term419 _89646 x) = (term419 _89646 x).
Proof. exact (eq_refl (term419 _89646 x)). Qed.
Lemma lem3458709 {_89646 _89670 _89671 _89672 : Type'} (x' : _89672) (y : _89671) (z : _89670) (t : _89646 -> Prop) (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) (h1 : term224 _89646 _89670 _89671 _89672 x' y z t P x f) : (term420 _89646 x t) = (term421 _89646 _89670 _89671 _89672 x f x' y z).
Proof. exact (MK_COMB (@lem3458708 _89646 x) (@lem3458663 _89646 _89670 _89671 _89672 x' y z t P x f h1)). Qed.
Lemma lem3458710 {_89646 _89670 _89671 _89672 : Type'} (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) (x' : _89672) (y : _89671) (z : _89670) : (term421 _89646 _89670 _89671 _89672 x f x' y z) = (term81 _89646 _89670 _89671 _89672 x f x' y z).
Proof. exact (eq_refl (term421 _89646 _89670 _89671 _89672 x f x' y z)). Qed.
Lemma lem3458711 {_89646 : Type'} (x : _89646) (t : _89646 -> Prop) : (term422 _89646 x t) = (term422 _89646 x t).
Proof. exact (eq_refl (term422 _89646 x t)). Qed.
Lemma lem3458712 {_89646 _89670 _89671 _89672 : Type'} (t : _89646 -> Prop) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) (x' : _89672) (y : _89671) (z : _89670) : ((term420 _89646 x t) = (term421 _89646 _89670 _89671 _89672 x f x' y z)) = ((term420 _89646 x t) = (term81 _89646 _89670 _89671 _89672 x f x' y z)).
Proof. exact (MK_COMB (@lem3458711 _89646 x t) (@lem3458710 _89646 _89670 _89671 _89672 x f x' y z)). Qed.
Lemma lem3458713 {_89646 : Type'} (x : _89646) (t : _89646 -> Prop) : (term420 _89646 x t) = (@IN _89646 x t).
Proof. exact (eq_refl (term420 _89646 x t)). Qed.
Lemma lem3458714 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3458715 {_89646 : Type'} (x : _89646) (t : _89646 -> Prop) : (term422 _89646 x t) = (term423 _89646 x t).
Proof. exact (MK_COMB (@lem3458714) (@lem3458713 _89646 x t)). Qed.
Lemma lem3458716 {_89646 _89670 _89671 _89672 : Type'} (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) (x' : _89672) (y : _89671) (z : _89670) : (term81 _89646 _89670 _89671 _89672 x f x' y z) = (term81 _89646 _89670 _89671 _89672 x f x' y z).
Proof. exact (eq_refl (term81 _89646 _89670 _89671 _89672 x f x' y z)). Qed.
Lemma lem3458717 {_89646 _89670 _89671 _89672 : Type'} (t : _89646 -> Prop) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) (x' : _89672) (y : _89671) (z : _89670) : ((term420 _89646 x t) = (term81 _89646 _89670 _89671 _89672 x f x' y z)) = ((@IN _89646 x t) = (term81 _89646 _89670 _89671 _89672 x f x' y z)).
Proof. exact (MK_COMB (@lem3458715 _89646 x t) (@lem3458716 _89646 _89670 _89671 _89672 x f x' y z)). Qed.
Lemma lem3458718 {_89646 _89670 _89671 _89672 : Type'} (t : _89646 -> Prop) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) (x' : _89672) (y : _89671) (z : _89670) : ((term420 _89646 x t) = (term421 _89646 _89670 _89671 _89672 x f x' y z)) = ((@IN _89646 x t) = (term81 _89646 _89670 _89671 _89672 x f x' y z)).
Proof. exact (TRANS (@lem3458712 _89646 _89670 _89671 _89672 t x f x' y z) (@lem3458717 _89646 _89670 _89671 _89672 t x f x' y z)). Qed.
Lemma lem3458719 {_89646 _89670 _89671 _89672 : Type'} (x' : _89672) (y : _89671) (z : _89670) (t : _89646 -> Prop) (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) (h1 : term224 _89646 _89670 _89671 _89672 x' y z t P x f) : (@IN _89646 x t) = (term81 _89646 _89670 _89671 _89672 x f x' y z).
Proof. exact (EQ_MP (@lem3458718 _89646 _89670 _89671 _89672 t x f x' y z) (@lem3458709 _89646 _89670 _89671 _89672 x' y z t P x f h1)). Qed.
Lemma lem3458736 {_89646 _89670 _89671 _89672 : Type'} (x' : _89672) (y : _89671) (z : _89670) (t : _89646 -> Prop) (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) (h1 : term224 _89646 _89670 _89671 _89672 x' y z t P x f) : P x' y z.
Proof. exact (proj1 (@lem3458475 _89646 _89670 _89671 _89672 x' y z t P x f h1)). Qed.
Lemma lem3458737 {_89646 _89670 _89671 _89672 : Type'} (x' : _89672) (y : _89671) (z : _89670) (t : _89646 -> Prop) (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) (h1 : term224 _89646 _89670 _89671 _89672 x' y z t P x f) : term424 _89670 _89671 _89672 P x' y z.
Proof. exact (fun h0 : term417 _89670 _89671 _89672 P x' y z => @lem3458736 _89646 _89670 _89671 _89672 x' y z t P x f h1). Qed.
Lemma lem3458739 (p : Prop) : (term425 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem3458740 {_89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (x' : _89672) (y : _89671) (z : _89670) : (term424 _89670 _89671 _89672 P x' y z) = (P x' y z).
Proof. exact (@lem3458739 (P x' y z)). Qed.
Lemma lem3458741 {_89646 _89670 _89671 _89672 : Type'} (x' : _89672) (y : _89671) (z : _89670) (t : _89646 -> Prop) (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) (h1 : term224 _89646 _89670 _89671 _89672 x' y z t P x f) : P x' y z.
Proof. exact (EQ_MP (@lem3458740 _89670 _89671 _89672 P x' y z) (@lem3458737 _89646 _89670 _89671 _89672 x' y z t P x f h1)). Qed.
Lemma lem3458743 {_89646 _89670 _89671 _89672 : Type'} (x' : _89672) (y : _89671) (z : _89670) (t : _89646 -> Prop) (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) (h1 : term224 _89646 _89670 _89671 _89672 x' y z t P x f) : term81 _89646 _89670 _89671 _89672 x f x' y z.
Proof. exact (EQ_MP (@lem3458719 _89646 _89670 _89671 _89672 x' y z t P x f h1) (@lem3458659 _89646 _89670 _89671 _89672 x' y z t P x f h1)). Qed.
Lemma lem3458744 {_89646 _89670 _89671 _89672 : Type'} (x' : _89672) (y : _89671) (z : _89670) (t : _89646 -> Prop) (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) (h1 : term224 _89646 _89670 _89671 _89672 x' y z t P x f) : term426 _89646 _89670 _89671 _89672 x f x' y z.
Proof. exact (fun h0 : term427 _89646 _89670 _89671 _89672 x f x' y z => @lem3458743 _89646 _89670 _89671 _89672 x' y z t P x f h1). Qed.
Lemma lem3458746 (p : Prop) : (term425 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem3458747 {_89646 _89670 _89671 _89672 : Type'} (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) (x' : _89672) (y : _89671) (z : _89670) : (term426 _89646 _89670 _89671 _89672 x f x' y z) = (term81 _89646 _89670 _89671 _89672 x f x' y z).
Proof. exact (@lem3458746 (term81 _89646 _89670 _89671 _89672 x f x' y z)). Qed.
Lemma lem3458748 {_89646 _89670 _89671 _89672 : Type'} (x' : _89672) (y : _89671) (z : _89670) (t : _89646 -> Prop) (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) (h1 : term224 _89646 _89670 _89671 _89672 x' y z t P x f) : term81 _89646 _89670 _89671 _89672 x f x' y z.
Proof. exact (EQ_MP (@lem3458747 _89646 _89670 _89671 _89672 x f x' y z) (@lem3458744 _89646 _89670 _89671 _89672 x' y z t P x f h1)). Qed.
Lemma lem3458750 (a : Prop) (b : Prop) : (term428 a b) = (term429 a b).
Proof. exact (EQ_MP (@lem20904 a b) (@lem21007 a b)). Qed.
Lemma lem3458751 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) (_36483 : _89672) (_36484 : _89671) (_36485 : _89670) : (term80 _89646 _89670 _89671 _89672 P x f _36483 _36484 _36485) = (term79 _89646 _89670 _89671 _89672 P x f _36483 _36484 _36485).
Proof. exact (@lem3458750 (P _36483 _36484 _36485) (term81 _89646 _89670 _89671 _89672 x f _36483 _36484 _36485)). Qed.
Lemma lem3458753 (p : Prop) : (~ p) = (p -> False).
Proof. exact (EQ_MP (@lem21021 p) (@lem0)). Qed.
Lemma lem3458754 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) (_36483 : _89672) (_36484 : _89671) (_36485 : _89670) : (term79 _89646 _89670 _89671 _89672 P x f _36483 _36484 _36485) = (term430 _89646 _89670 _89671 _89672 P x f _36483 _36484 _36485).
Proof. exact (@lem3458753 (term17 _89646 _89670 _89671 _89672 P x f _36483 _36484 _36485)). Qed.
Lemma lem3458755 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) (_36483 : _89672) (_36484 : _89671) (_36485 : _89670) : (term80 _89646 _89670 _89671 _89672 P x f _36483 _36484 _36485) = (term430 _89646 _89670 _89671 _89672 P x f _36483 _36484 _36485).
Proof. exact (TRANS (@lem3458751 _89646 _89670 _89671 _89672 P x f _36483 _36484 _36485) (@lem3458754 _89646 _89670 _89671 _89672 P x f _36483 _36484 _36485)). Qed.
Lemma lem3458757 {_89646 _89670 _89671 _89672 : Type'} (x' : _89672) (y : _89671) (z : _89670) (t : _89646 -> Prop) (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) (h1 : term224 _89646 _89670 _89671 _89672 x' y z t P x f) : term17 _89646 _89670 _89671 _89672 P x f x' y z.
Proof. exact (conj (@lem3458741 _89646 _89670 _89671 _89672 x' y z t P x f h1) (@lem3458748 _89646 _89670 _89671 _89672 x' y z t P x f h1)). Qed.
Lemma lem3458759 {_89646 _89670 _89671 _89672 : Type'} (_36483 : _89672) (_36484 : _89671) (_36485 : _89670) (x' : _89672) (y : _89671) (z : _89670) (t : _89646 -> Prop) (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) (h1 : term224 _89646 _89670 _89671 _89672 x' y z t P x f) : term430 _89646 _89670 _89671 _89672 P x f _36483 _36484 _36485.
Proof. exact (EQ_MP (@lem3458755 _89646 _89670 _89671 _89672 P x f _36483 _36484 _36485) (@lem3458707 _89646 _89670 _89671 _89672 _36483 _36484 _36485 x' y z t P x f h1)). Qed.
Lemma lem3458760 {_89646 _89670 _89671 _89672 : Type'} (_36483 : _89672) (_36484 : _89671) (_36485 : _89670) (x' : _89672) (y : _89671) (z : _89670) (t : _89646 -> Prop) (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) (h1 : term224 _89646 _89670 _89671 _89672 x' y z t P x f) : term430 _89646 _89670 _89671 _89672 P x f _36483 _36484 _36485.
Proof. exact (@lem3458759 _89646 _89670 _89671 _89672 _36483 _36484 _36485 x' y z t P x f h1). Qed.
Lemma lem3458761 {_89646 _89670 _89671 _89672 : Type'} (x' : _89672) (y : _89671) (z : _89670) (t : _89646 -> Prop) (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) (h1 : term224 _89646 _89670 _89671 _89672 x' y z t P x f) : term430 _89646 _89670 _89671 _89672 P x f x' y z.
Proof. exact (@lem3458760 _89646 _89670 _89671 _89672 x' y z x' y z t P x f h1). Qed.
Lemma lem3458764 {_89646 _89670 _89671 _89672 : Type'} (x' : _89672) (y : _89671) (z : _89670) (t : _89646 -> Prop) (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) (h1 : term224 _89646 _89670 _89671 _89672 x' y z t P x f) : False.
Proof. exact (@lem3458761 _89646 _89670 _89671 _89672 x' y z t P x f h1 (@lem3458757 _89646 _89670 _89671 _89672 x' y z t P x f h1)). Qed.
Lemma lem3458765 {_89646 _89670 _89671 _89672 : Type'} (x' : _89672) (y : _89671) (z : _89670) (t : _89646 -> Prop) (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) (h1 : term224 _89646 _89670 _89671 _89672 x' y z t P x f) : term431.
Proof. exact (fun h0 : ~ False => @lem3458764 _89646 _89670 _89671 _89672 x' y z t P x f h1). Qed.
Lemma lem3458767 (p : Prop) : (term425 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem3458768 : term431 = False.
Proof. exact (@lem3458767 False). Qed.
Lemma lem3458848 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) (x' : _89672) (y : _89671) (z : _89670) (h1 : term266 _89646 _89670 _89671 _89672 P x f x' y z) : P x' y z.
Proof. exact (proj1 (@lem3458478 _89646 _89670 _89671 _89672 P x f x' y z h1)). Qed.
Lemma lem3458849 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) (x' : _89672) (y : _89671) (z : _89670) (h1 : term266 _89646 _89670 _89671 _89672 P x f x' y z) : term424 _89670 _89671 _89672 P x' y z.
Proof. exact (fun h0 : term417 _89670 _89671 _89672 P x' y z => @lem3458848 _89646 _89670 _89671 _89672 P x f x' y z h1). Qed.
Lemma lem3458851 (p : Prop) : (term425 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem3458852 {_89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (x' : _89672) (y : _89671) (z : _89670) : (term424 _89670 _89671 _89672 P x' y z) = (P x' y z).
Proof. exact (@lem3458851 (P x' y z)). Qed.
Lemma lem3458853 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) (x' : _89672) (y : _89671) (z : _89670) (h1 : term266 _89646 _89670 _89671 _89672 P x f x' y z) : P x' y z.
Proof. exact (EQ_MP (@lem3458852 _89670 _89671 _89672 P x' y z) (@lem3458849 _89646 _89670 _89671 _89672 P x f x' y z h1)). Qed.
Lemma lem3458855 {_89646 : Type'} (x : _89646 -> Prop) : x = x.
Proof. exact (@lem21386 (_89646 -> Prop) x). Qed.
Lemma lem3458856 {_89646 : Type'} (x : _89646 -> Prop) : x = x.
Proof. exact (@lem3458855 _89646 x). Qed.
Lemma lem3458857 {_89646 _89670 _89671 _89672 : Type'} (f : type1524 _89646 _89670 _89671 _89672) (x' : _89672) (y : _89671) (z : _89670) : (f x' y z) = (f x' y z).
Proof. exact (@lem3458856 _89646 (f x' y z)). Qed.
Lemma lem3458858 {_89646 _89670 _89671 _89672 : Type'} (f : type1524 _89646 _89670 _89671 _89672) (x' : _89672) (y : _89671) (z : _89670) : term432 _89646 _89670 _89671 _89672 f x' y z.
Proof. exact (fun h0 : term433 _89646 _89670 _89671 _89672 f x' y z => @lem3458857 _89646 _89670 _89671 _89672 f x' y z). Qed.
Lemma lem3458860 (p : Prop) : (term425 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem3458861 {_89646 _89670 _89671 _89672 : Type'} (f : type1524 _89646 _89670 _89671 _89672) (x' : _89672) (y : _89671) (z : _89670) : (term432 _89646 _89670 _89671 _89672 f x' y z) = ((f x' y z) = (f x' y z)).
Proof. exact (@lem3458860 ((f x' y z) = (f x' y z))). Qed.
Lemma lem3458862 {_89646 _89670 _89671 _89672 : Type'} (f : type1524 _89646 _89670 _89671 _89672) (x' : _89672) (y : _89671) (z : _89670) : (f x' y z) = (f x' y z).
Proof. exact (EQ_MP (@lem3458861 _89646 _89670 _89671 _89672 f x' y z) (@lem3458858 _89646 _89670 _89671 _89672 f x' y z)). Qed.
Lemma lem3458864 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) (x' : _89672) (y : _89671) (z : _89670) (h1 : term266 _89646 _89670 _89671 _89672 P x f x' y z) : term81 _89646 _89670 _89671 _89672 x f x' y z.
Proof. exact (proj2 (@lem3458478 _89646 _89670 _89671 _89672 P x f x' y z h1)). Qed.
Lemma lem3458865 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) (x' : _89672) (y : _89671) (z : _89670) (h1 : term266 _89646 _89670 _89671 _89672 P x f x' y z) : term426 _89646 _89670 _89671 _89672 x f x' y z.
Proof. exact (fun h0 : term427 _89646 _89670 _89671 _89672 x f x' y z => @lem3458864 _89646 _89670 _89671 _89672 P x f x' y z h1). Qed.
Lemma lem3458867 (p : Prop) : (term425 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem3458868 {_89646 _89670 _89671 _89672 : Type'} (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) (x' : _89672) (y : _89671) (z : _89670) : (term426 _89646 _89670 _89671 _89672 x f x' y z) = (term81 _89646 _89670 _89671 _89672 x f x' y z).
Proof. exact (@lem3458867 (term81 _89646 _89670 _89671 _89672 x f x' y z)). Qed.
Lemma lem3458869 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) (x' : _89672) (y : _89671) (z : _89670) (h1 : term266 _89646 _89670 _89671 _89672 P x f x' y z) : term81 _89646 _89670 _89671 _89672 x f x' y z.
Proof. exact (EQ_MP (@lem3458868 _89646 _89670 _89671 _89672 x f x' y z) (@lem3458865 _89646 _89670 _89671 _89672 P x f x' y z h1)). Qed.
Lemma lem3458871 (a : Prop) (b : Prop) : (term428 a b) = (term429 a b).
Proof. exact (EQ_MP (@lem20904 a b) (@lem21007 a b)). Qed.
Lemma lem3458872 {_89646 _89670 _89671 _89672 : Type'} (f : type1524 _89646 _89670 _89671 _89672) (_36487 : _89672) (_36488 : _89671) (_36489 : _89670) (x : _89646) (_36486 : _89646 -> Prop) : (term434 _89646 _89670 _89671 _89672 f _36487 _36488 _36489 x _36486) = (term435 _89646 _89670 _89671 _89672 f _36487 _36488 _36489 x _36486).
Proof. exact (@lem3458871 (_36486 = (f _36487 _36488 _36489)) (@IN _89646 x _36486)). Qed.
Lemma lem3458873 {_89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (_36487 : _89672) (_36488 : _89671) (_36489 : _89670) : (term436 _89670 _89671 _89672 P _36487 _36488 _36489) = (term436 _89670 _89671 _89672 P _36487 _36488 _36489).
Proof. exact (eq_refl (term436 _89670 _89671 _89672 P _36487 _36488 _36489)). Qed.
Lemma lem3458874 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (f : type1524 _89646 _89670 _89671 _89672) (_36487 : _89672) (_36488 : _89671) (_36489 : _89670) (x : _89646) (_36486 : _89646 -> Prop) : (term416 _89646 _89670 _89671 _89672 P f _36487 _36488 _36489 x _36486) = (term437 _89646 _89670 _89671 _89672 P f _36487 _36488 _36489 x _36486).
Proof. exact (MK_COMB (@lem3458873 _89670 _89671 _89672 P _36487 _36488 _36489) (@lem3458872 _89646 _89670 _89671 _89672 f _36487 _36488 _36489 x _36486)). Qed.
Lemma lem3458876 (a : Prop) (b : Prop) : (term428 a b) = (term429 a b).
Proof. exact (EQ_MP (@lem20904 a b) (@lem21007 a b)). Qed.
Lemma lem3458877 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (f : type1524 _89646 _89670 _89671 _89672) (_36487 : _89672) (_36488 : _89671) (_36489 : _89670) (x : _89646) (_36486 : _89646 -> Prop) : (term437 _89646 _89670 _89671 _89672 P f _36487 _36488 _36489 x _36486) = (term438 _89646 _89670 _89671 _89672 P f _36487 _36488 _36489 x _36486).
Proof. exact (@lem3458876 (P _36487 _36488 _36489) (term439 _89646 _89670 _89671 _89672 f _36487 _36488 _36489 x _36486)). Qed.
Lemma lem3458878 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (f : type1524 _89646 _89670 _89671 _89672) (_36487 : _89672) (_36488 : _89671) (_36489 : _89670) (x : _89646) (_36486 : _89646 -> Prop) : (term416 _89646 _89670 _89671 _89672 P f _36487 _36488 _36489 x _36486) = (term438 _89646 _89670 _89671 _89672 P f _36487 _36488 _36489 x _36486).
Proof. exact (TRANS (@lem3458874 _89646 _89670 _89671 _89672 P f _36487 _36488 _36489 x _36486) (@lem3458877 _89646 _89670 _89671 _89672 P f _36487 _36488 _36489 x _36486)). Qed.
Lemma lem3458880 (p : Prop) : (~ p) = (p -> False).
Proof. exact (EQ_MP (@lem21021 p) (@lem0)). Qed.
Lemma lem3458881 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (f : type1524 _89646 _89670 _89671 _89672) (_36487 : _89672) (_36488 : _89671) (_36489 : _89670) (x : _89646) (_36486 : _89646 -> Prop) : (term438 _89646 _89670 _89671 _89672 P f _36487 _36488 _36489 x _36486) = (term440 _89646 _89670 _89671 _89672 P f _36487 _36488 _36489 x _36486).
Proof. exact (@lem3458880 (term441 _89646 _89670 _89671 _89672 P f _36487 _36488 _36489 x _36486)). Qed.
Lemma lem3458882 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (f : type1524 _89646 _89670 _89671 _89672) (_36487 : _89672) (_36488 : _89671) (_36489 : _89670) (x : _89646) (_36486 : _89646 -> Prop) : (term416 _89646 _89670 _89671 _89672 P f _36487 _36488 _36489 x _36486) = (term440 _89646 _89670 _89671 _89672 P f _36487 _36488 _36489 x _36486).
Proof. exact (TRANS (@lem3458878 _89646 _89670 _89671 _89672 P f _36487 _36488 _36489 x _36486) (@lem3458881 _89646 _89670 _89671 _89672 P f _36487 _36488 _36489 x _36486)). Qed.
Lemma lem3458884 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) (x' : _89672) (y : _89671) (z : _89670) (h1 : term266 _89646 _89670 _89671 _89672 P x f x' y z) : term442 _89646 _89670 _89671 _89672 x f x' y z.
Proof. exact (conj (@lem3458862 _89646 _89670 _89671 _89672 f x' y z) (@lem3458869 _89646 _89670 _89671 _89672 P x f x' y z h1)). Qed.
Lemma lem3458885 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) (x' : _89672) (y : _89671) (z : _89670) (h1 : term266 _89646 _89670 _89671 _89672 P x f x' y z) : term443 _89646 _89670 _89671 _89672 P x f x' y z.
Proof. exact (conj (@lem3458853 _89646 _89670 _89671 _89672 P x f x' y z h1) (@lem3458884 _89646 _89670 _89671 _89672 P x f x' y z h1)). Qed.
Lemma lem3458887 {_89646 _89670 _89671 _89672 : Type'} (_36487 : _89672) (_36488 : _89671) (_36489 : _89670) (_36486 : _89646 -> Prop) (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) (x' : _89672) (y : _89671) (z : _89670) (h1 : term266 _89646 _89670 _89671 _89672 P x f x' y z) : term440 _89646 _89670 _89671 _89672 P f _36487 _36488 _36489 x _36486.
Proof. exact (EQ_MP (@lem3458882 _89646 _89670 _89671 _89672 P f _36487 _36488 _36489 x _36486) (@lem3458675 _89646 _89670 _89671 _89672 _36487 _36488 _36489 _36486 P x f x' y z h1)). Qed.
Lemma lem3458888 {_89646 _89670 _89671 _89672 : Type'} (_36487 : _89672) (_36488 : _89671) (_36489 : _89670) (_36486 : _89646 -> Prop) (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) (x' : _89672) (y : _89671) (z : _89670) (h1 : term266 _89646 _89670 _89671 _89672 P x f x' y z) : term440 _89646 _89670 _89671 _89672 P f _36487 _36488 _36489 x _36486.
Proof. exact (@lem3458887 _89646 _89670 _89671 _89672 _36487 _36488 _36489 _36486 P x f x' y z h1). Qed.
Lemma lem3458889 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) (x' : _89672) (y : _89671) (z : _89670) (h1 : term266 _89646 _89670 _89671 _89672 P x f x' y z) : term444 _89646 _89670 _89671 _89672 P x f x' y z.
Proof. exact (@lem3458888 _89646 _89670 _89671 _89672 x' y z (f x' y z) P x f x' y z h1). Qed.
Lemma lem3458892 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) (x' : _89672) (y : _89671) (z : _89670) (h1 : term266 _89646 _89670 _89671 _89672 P x f x' y z) : False.
Proof. exact (@lem3458889 _89646 _89670 _89671 _89672 P x f x' y z h1 (@lem3458885 _89646 _89670 _89671 _89672 P x f x' y z h1)). Qed.
Lemma lem3458893 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) (x' : _89672) (y : _89671) (z : _89670) (h1 : term266 _89646 _89670 _89671 _89672 P x f x' y z) : term431.
Proof. exact (fun h0 : ~ False => @lem3458892 _89646 _89670 _89671 _89672 P x f x' y z h1). Qed.
Lemma lem3458895 (p : Prop) : (term425 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem3458896 : term431 = False.
Proof. exact (@lem3458895 False). Qed.
Lemma lem3458897 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) (x' : _89672) (y : _89671) (z : _89670) (h1 : term266 _89646 _89670 _89671 _89672 P x f x' y z) : False.
Proof. exact (EQ_MP (@lem3458896) (@lem3458893 _89646 _89670 _89671 _89672 P x f x' y z h1)). Qed.
Lemma lem3458898 {_89646 _89670 _89671 _89672 : Type'} (x' : _89672) (y : _89671) (z : _89670) (t : _89646 -> Prop) (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) (h1 : term224 _89646 _89670 _89671 _89672 x' y z t P x f) : False.
Proof. exact (EQ_MP (@lem3458768) (@lem3458765 _89646 _89670 _89671 _89672 x' y z t P x f h1)). Qed.
Lemma lem3458899 {_89646 _89670 _89671 _89672 : Type'} (t : _89646 -> Prop) (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) (x' : _89672) (y : _89671) (z : _89670) (h1 : term346 _89646 _89670 _89671 _89672 t P x f x' y z) : False.
Proof. exact (or_elim (@lem3458469 _89646 _89670 _89671 _89672 t P x f x' y z h1) (fun h0 : term224 _89646 _89670 _89671 _89672 x' y z t P x f => @lem3458898 _89646 _89670 _89671 _89672 x' y z t P x f h0) (fun h0 : term266 _89646 _89670 _89671 _89672 P x f x' y z => @lem3458897 _89646 _89670 _89671 _89672 P x f x' y z h0)). Qed.
Lemma lem3458900 {_89646 _89670 _89671 _89672 : Type'} (t : _89646 -> Prop) (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) (x' : _89672) (y : _89671) (z : _89670) (h1 : term346 _89646 _89670 _89671 _89672 t P x f x' y z) : (term346 _89646 _89670 _89671 _89672 t P x f x' y z) = False.
Proof. exact (prop_ext (fun h2 : term346 _89646 _89670 _89671 _89672 t P x f x' y z => @lem3458899 _89646 _89670 _89671 _89672 t P x f x' y z h1) (fun h2 : False => @lem3458469 _89646 _89670 _89671 _89672 t P x f x' y z h1)). Qed.
Lemma lem3458901 {_89646 _89670 _89671 _89672 : Type'} (t : _89646 -> Prop) (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) (x' : _89672) (y : _89671) (z : _89670) (h1 : term346 _89646 _89670 _89671 _89672 t P x f x' y z) : False.
Proof. exact (EQ_MP (@lem3458900 _89646 _89670 _89671 _89672 t P x f x' y z h1) (@lem3458469 _89646 _89670 _89671 _89672 t P x f x' y z h1)). Qed.
Lemma lem3458902 {_89646 _89670 _89671 _89672 : Type'} (t : _89646 -> Prop) (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) (x' : _89672) (y : _89671) (h1 : term349 _89646 _89670 _89671 _89672 t P x f x' y) : False.
Proof. exact (ex_elim (@lem3458327 _89646 _89670 _89671 _89672 t P x f x' y h1) (fun z : _89670 => fun h0 : term348 _89646 _89670 _89671 _89672 t P x f x' y z => @lem3458901 _89646 _89670 _89671 _89672 t P x f x' y z h0)). Qed.
Lemma lem3458903 {_89646 _89670 _89671 _89672 : Type'} (t : _89646 -> Prop) (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) (x' : _89672) (h1 : term351 _89646 _89670 _89671 _89672 t P x f x') : False.
Proof. exact (ex_elim (@lem3458326 _89646 _89670 _89671 _89672 t P x f x' h1) (fun y : _89671 => fun h0 : term350 _89646 _89670 _89671 _89672 t P x f x' y => @lem3458902 _89646 _89670 _89671 _89672 t P x f x' y h0)). Qed.
Lemma lem3458904 {_89646 _89670 _89671 _89672 : Type'} (t : _89646 -> Prop) (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) (h1 : term353 _89646 _89670 _89671 _89672 t P x f) : False.
Proof. exact (ex_elim (@lem3458325 _89646 _89670 _89671 _89672 t P x f h1) (fun x' : _89672 => fun h0 : term352 _89646 _89670 _89671 _89672 t P x f x' => @lem3458903 _89646 _89670 _89671 _89672 t P x f x' h0)). Qed.
Lemma lem3458905 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) (h1 : term38 _89646 _89670 _89671 _89672 P x f) : False.
Proof. exact (ex_elim (@lem3458324 _89646 _89670 _89671 _89672 P x f h1) (fun t : _89646 -> Prop => fun h0 : term354 _89646 _89670 _89671 _89672 P x f t => @lem3458904 _89646 _89670 _89671 _89672 t P x f h0)). Qed.
Lemma lem3458906 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) (h1 : term38 _89646 _89670 _89671 _89672 P x f) : (term38 _89646 _89670 _89671 _89672 P x f) = False.
Proof. exact (prop_ext (fun h2 : term38 _89646 _89670 _89671 _89672 P x f => @lem3458905 _89646 _89670 _89671 _89672 P x f h1) (fun h2 : False => @lem3457477 _89646 _89670 _89671 _89672 P x f h1)). Qed.
Lemma lem3458907 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) (h1 : term38 _89646 _89670 _89671 _89672 P x f) : False.
Proof. exact (EQ_MP (@lem3458906 _89646 _89670 _89671 _89672 P x f h1) (@lem3457477 _89646 _89670 _89671 _89672 P x f h1)). Qed.
Lemma lem3458908 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) : term37 _89646 _89670 _89671 _89672 P x f.
Proof. exact (fun h0 : term38 _89646 _89670 _89671 _89672 P x f => @lem3458907 _89646 _89670 _89671 _89672 P x f h0). Qed.
Lemma lem3458909 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) : (term34 _89646 _89670 _89671 _89672 P f x) = (term23 _89646 _89670 _89671 _89672 P x f).
Proof. exact (EQ_MP (@lem3457476 _89646 _89670 _89671 _89672 P x f) (@lem3458908 _89646 _89670 _89671 _89672 P x f)). Qed.
Lemma lem3458914 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (f : type1524 _89646 _89670 _89671 _89672) : term1 _89646 _89670 _89671 _89672 P f.
Proof. exact (fun x : _89646 => @lem3458909 _89646 _89670 _89671 _89672 P x f). Qed.
Lemma lem3458919 {_89646 _89670 _89671 _89672 : Type'} (f : type1524 _89646 _89670 _89671 _89672) : term12 _89646 _89670 _89671 _89672 f.
Proof. exact (fun P : type1517 _89670 _89671 _89672 => @lem3458914 _89646 _89670 _89671 _89672 P f). Qed.
Lemma lem3458924 {_89646 _89670 _89671 _89672 : Type'} : term16 _89646 _89670 _89671 _89672.
Proof. exact (fun f : type1524 _89646 _89670 _89671 _89672 => @lem3458919 _89646 _89670 _89671 _89672 f). Qed.
Lemma lem3458925 {_89646 _89670 _89671 _89672 : Type'} : term15 _89646 _89670 _89671 _89672.
Proof. exact (EQ_MP (@lem3457472 _89646 _89670 _89671 _89672) (@lem3458924 _89646 _89670 _89671 _89672)). Qed.
Lemma lem3458926 {_89646 _89670 _89671 _89672 : Type'} (f : type1524 _89646 _89670 _89671 _89672) : term445 _89646 _89670 _89671 _89672 f.
Proof. exact (@lem3458925 _89646 _89670 _89671 _89672 f). Qed.
Lemma lem3458927 {_89646 _89670 _89671 _89672 : Type'} (f : type1524 _89646 _89670 _89671 _89672) : (term445 _89646 _89670 _89671 _89672 f) = (term11 _89646 _89670 _89671 _89672 f).
Proof. exact (eq_refl (term445 _89646 _89670 _89671 _89672 f)). Qed.
Lemma lem3458928 {_89646 _89670 _89671 _89672 : Type'} (f : type1524 _89646 _89670 _89671 _89672) : term11 _89646 _89670 _89671 _89672 f.
Proof. exact (EQ_MP (@lem3458927 _89646 _89670 _89671 _89672 f) (@lem3458926 _89646 _89670 _89671 _89672 f)). Qed.
Lemma lem3458929 {_89646 _89670 _89671 _89672 : Type'} (f : type1524 _89646 _89670 _89671 _89672) (P : type1517 _89670 _89671 _89672) : term446 _89646 _89670 _89671 _89672 f P.
Proof. exact (@lem3458928 _89646 _89670 _89671 _89672 f P). Qed.
Lemma lem3458930 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (f : type1524 _89646 _89670 _89671 _89672) : (term446 _89646 _89670 _89671 _89672 f P) = (term2 _89646 _89670 _89671 _89672 P f).
Proof. exact (eq_refl (term446 _89646 _89670 _89671 _89672 f P)). Qed.
Lemma lem3458931 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (f : type1524 _89646 _89670 _89671 _89672) : term2 _89646 _89670 _89671 _89672 P f.
Proof. exact (EQ_MP (@lem3458930 _89646 _89670 _89671 _89672 P f) (@lem3458929 _89646 _89670 _89671 _89672 f P)). Qed.
Lemma lem3458933 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (f : type1524 _89646 _89670 _89671 _89672) : term2 _89646 _89670 _89671 _89672 P f.
Proof. exact (@lem3457152 _89646 _89670 _89671 _89672 P f (@lem3458931 _89646 _89670 _89671 _89672 P f)). Qed.
Lemma lem3458934 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (f : type1524 _89646 _89670 _89671 _89672) (h1 : term3 _89646 _89670 _89671 _89672 P f) : False.
Proof. exact (@lem3458933 _89646 _89670 _89671 _89672 P f (@lem3457136 _89646 _89670 _89671 _89672 P f h1)). Qed.
Lemma lem3458935 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (f : type1524 _89646 _89670 _89671 _89672) (h1 : term3 _89646 _89670 _89671 _89672 P f) : (term3 _89646 _89670 _89671 _89672 P f) = False.
Proof. exact (prop_ext (fun h2 : term3 _89646 _89670 _89671 _89672 P f => @lem3458934 _89646 _89670 _89671 _89672 P f h1) (fun h2 : False => @lem3457136 _89646 _89670 _89671 _89672 P f h1)). Qed.
Lemma lem3458936 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (f : type1524 _89646 _89670 _89671 _89672) (h1 : term3 _89646 _89670 _89671 _89672 P f) : False.
Proof. exact (EQ_MP (@lem3458935 _89646 _89670 _89671 _89672 P f h1) (@lem3457136 _89646 _89670 _89671 _89672 P f h1)). Qed.
Lemma lem3458937 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (f : type1524 _89646 _89670 _89671 _89672) : term2 _89646 _89670 _89671 _89672 P f.
Proof. exact (fun h0 : term3 _89646 _89670 _89671 _89672 P f => @lem3458936 _89646 _89670 _89671 _89672 P f h0). Qed.
Lemma lem3458938 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (f : type1524 _89646 _89670 _89671 _89672) : term1 _89646 _89670 _89671 _89672 P f.
Proof. exact (EQ_MP (@lem3457135 _89646 _89670 _89671 _89672 P f) (@lem3458937 _89646 _89670 _89671 _89672 P f)). Qed.
Lemma lem3458939 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (f : type1524 _89646 _89670 _89671 _89672) : term447 _89646 _89670 _89671 _89672 P f.
Proof. exact (EQ_MP (@lem3454374 _89646 _89670 _89671 _89672 P f) (@lem3458938 _89646 _89670 _89671 _89672 P f)). Qed.
