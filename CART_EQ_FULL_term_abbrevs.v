Require Import coq.
Require Import theory_hol.
Require Import hol_types.
Require Import hol_type_abbrevs.
Require Import hol_terms.
Definition term30 (a0 : Type') (a1 : Type') (x0 : cart a0 a1) (x1 : cart a0 a1) (x2 : Prop) := ((forall y0 : nat, (@dollar a0 a1 x0 y0) = (@dollar a0 a1 x1 y0)) = (forall y0 : nat, (@dollar a0 a1 x0 y0) = (@dollar a0 a1 x1 y0))) -> ((forall y0 : nat, (@dollar a0 a1 x0 y0) = (@dollar a0 a1 x1 y0)) -> (x0 = x1) = x2) -> ((forall y0 : nat, (@dollar a0 a1 x0 y0) = (@dollar a0 a1 x1 y0)) -> x0 = x1) = ((forall y0 : nat, (@dollar a0 a1 x0 y0) = (@dollar a0 a1 x1 y0)) -> x2).
Definition term50 (a0 : Type') (a1 : Type') (x0 : cart a0 a1) (x1 : cart a0 a1) := ((x0 = x1) -> forall y0 : nat, (@dollar a0 a1 x0 y0) = (@dollar a0 a1 x1 y0)) /\ ((forall y0 : nat, (@dollar a0 a1 x0 y0) = (@dollar a0 a1 x1 y0)) -> x0 = x1).
Definition term24 (a0 : Type') (a1 : Type') (x0 : cart a0 a1) (x1 : cart a0 a1) := (x0 = x1) -> True.
Definition term19 (a0 : Type') (x0 : Prop) := forall y0 : a0, x0.
Definition term47 (a0 : Type') (a1 : Type') (x0 : cart a0 a1) (x1 : cart a0 a1) := ((forall y0 : nat, (@dollar a0 a1 x0 y0) = (@dollar a0 a1 x1 y0)) -> (x0 = x1) = True) -> ((forall y0 : nat, (@dollar a0 a1 x0 y0) = (@dollar a0 a1 x1 y0)) -> x0 = x1) = ((forall y0 : nat, (@dollar a0 a1 x0 y0) = (@dollar a0 a1 x1 y0)) -> True).
Definition term2 (a0 : Type') (a1 : Type') (x0 : cart a0 a1) (x1 : cart a0 a1) := (fun y0 : cart a0 a1 => (x0 = y0) = (forall y1 : nat, ((Peano.le (NUMERAL (BIT1 0)) y1) /\ (Peano.le y1 (@dimindex a1 (@UNIV a1)))) -> (@dollar a0 a1 x0 y1) = (@dollar a0 a1 y0 y1))) x1.
Definition term51 (a0 : Type') (a1 : Type') (x0 : cart a0 a1) := forall y0 : cart a0 a1, (x0 = y0) = (forall y1 : nat, (@dollar a0 a1 x0 y1) = (@dollar a0 a1 y0 y1)).
Definition term1 (a0 : Type') (a1 : Type') (x0 : cart a0 a1) := forall y0 : cart a0 a1, (x0 = y0) = (forall y1 : nat, ((Peano.le (NUMERAL (BIT1 0)) y1) /\ (Peano.le y1 (@dimindex a1 (@UNIV a1)))) -> (@dollar a0 a1 x0 y1) = (@dollar a0 a1 y0 y1)).
Definition term39 (a0 : Type') (a1 : Type') (x0 : cart a0 a1) (x1 : cart a0 a1) (x2 : nat) (x3 : Prop) := (((Peano.le (NUMERAL (BIT1 0)) x2) /\ (Peano.le x2 (@dimindex a1 (@UNIV a1)))) = ((Peano.le (NUMERAL (BIT1 0)) x2) /\ (Peano.le x2 (@dimindex a1 (@UNIV a1))))) -> (((Peano.le (NUMERAL (BIT1 0)) x2) /\ (Peano.le x2 (@dimindex a1 (@UNIV a1)))) -> ((@dollar a0 a1 x0 x2) = (@dollar a0 a1 x1 x2)) = x3) -> (((Peano.le (NUMERAL (BIT1 0)) x2) /\ (Peano.le x2 (@dimindex a1 (@UNIV a1)))) -> (@dollar a0 a1 x0 x2) = (@dollar a0 a1 x1 x2)) = (((Peano.le (NUMERAL (BIT1 0)) x2) /\ (Peano.le x2 (@dimindex a1 (@UNIV a1)))) -> x3).
Definition term14 (a0 : Type') (a1 : Type') (x0 : cart a0 a1) (x1 : cart a0 a1) (x2 : Prop) := ((x0 = x1) -> (forall y0 : nat, (@dollar a0 a1 x0 y0) = (@dollar a0 a1 x1 y0)) = x2) -> ((x0 = x1) -> forall y0 : nat, (@dollar a0 a1 x0 y0) = (@dollar a0 a1 x1 y0)) = ((x0 = x1) -> x2).
Definition term40 (a0 : Type') (a1 : Type') (x0 : cart a0 a1) (x1 : cart a0 a1) (x2 : nat) (x3 : Prop) := (((Peano.le (NUMERAL (BIT1 0)) x2) /\ (Peano.le x2 (@dimindex a1 (@UNIV a1)))) -> ((@dollar a0 a1 x0 x2) = (@dollar a0 a1 x1 x2)) = x3) -> (((Peano.le (NUMERAL (BIT1 0)) x2) /\ (Peano.le x2 (@dimindex a1 (@UNIV a1)))) -> (@dollar a0 a1 x0 x2) = (@dollar a0 a1 x1 x2)) = (((Peano.le (NUMERAL (BIT1 0)) x2) /\ (Peano.le x2 (@dimindex a1 (@UNIV a1)))) -> x3).
Definition term23 (a0 : Type') (a1 : Type') (x0 : cart a0 a1) (x1 : cart a0 a1) := (x0 = x1) -> forall y0 : nat, (@dollar a0 a1 x0 y0) = (@dollar a0 a1 x1 y0).
Definition term48 (a0 : Type') (a1 : Type') (x0 : cart a0 a1) (x1 : cart a0 a1) := (forall y0 : nat, (@dollar a0 a1 x0 y0) = (@dollar a0 a1 x1 y0)) -> x0 = x1.
Definition term35 (a0 : Type') (a1 : Type') (x0 : cart a0 a1) (x1 : cart a0 a1) (x2 : nat) (x3 : Prop) := (fun y0 : Prop => forall y1 : Prop, (((Peano.le (NUMERAL (BIT1 0)) x2) /\ (Peano.le x2 (@dimindex a1 (@UNIV a1)))) = y0) -> (y0 -> ((@dollar a0 a1 x0 x2) = (@dollar a0 a1 x1 x2)) = y1) -> (((Peano.le (NUMERAL (BIT1 0)) x2) /\ (Peano.le x2 (@dimindex a1 (@UNIV a1)))) -> (@dollar a0 a1 x0 x2) = (@dollar a0 a1 x1 x2)) = (y0 -> y1)) x3.
Definition term52 (a0 : Type') (a1 : Type') := forall y0 : cart a0 a1, forall y1 : cart a0 a1, (y0 = y1) = (forall y2 : nat, (@dollar a0 a1 y0 y2) = (@dollar a0 a1 y1 y2)).
Definition term32 (a0 : Type') (a1 : Type') (x0 : cart a0 a1) (x1 : cart a0 a1) (x2 : nat) := (fun y0 : nat => (@dollar a0 a1 x0 y0) = (@dollar a0 a1 x1 y0)) x2.
Definition term21 (a0 : Type') (a1 : Type') (x0 : cart a0 a1) (x1 : cart a0 a1) := (x0 = x1) -> (forall y0 : nat, (@dollar a0 a1 x0 y0) = (@dollar a0 a1 x1 y0)) = True.
Definition term4 (x0 : Prop) (x1 : Prop) (x2 : Prop) (x3 : Prop) := (x0 = x2) -> (x2 -> x1 = x3) -> (x0 -> x1) = (x2 -> x3).
Definition term49 (a0 : Type') (a1 : Type') (x0 : cart a0 a1) (x1 : cart a0 a1) := (forall y0 : nat, (@dollar a0 a1 x0 y0) = (@dollar a0 a1 x1 y0)) -> True.
Definition term8 (a0 : Type') (a1 : Type') (x0 : cart a0 a1) (x1 : cart a0 a1) := forall y0 : nat, (@dollar a0 a1 x0 y0) = (@dollar a0 a1 x1 y0).
Definition term38 (a0 : Type') (a1 : Type') (x0 : cart a0 a1) (x1 : cart a0 a1) (x2 : nat) (x3 : Prop) (x4 : Prop) := (((Peano.le (NUMERAL (BIT1 0)) x2) /\ (Peano.le x2 (@dimindex a1 (@UNIV a1)))) = x3) -> (x3 -> ((@dollar a0 a1 x0 x2) = (@dollar a0 a1 x1 x2)) = x4) -> (((Peano.le (NUMERAL (BIT1 0)) x2) /\ (Peano.le x2 (@dimindex a1 (@UNIV a1)))) -> (@dollar a0 a1 x0 x2) = (@dollar a0 a1 x1 x2)) = (x3 -> x4).
Definition term42 (a0 : Type') (a1 : Type') (x0 : cart a0 a1) (x1 : cart a0 a1) (x2 : nat) := (((Peano.le (NUMERAL (BIT1 0)) x2) /\ (Peano.le x2 (@dimindex a1 (@UNIV a1)))) -> ((@dollar a0 a1 x0 x2) = (@dollar a0 a1 x1 x2)) = True) -> (((Peano.le (NUMERAL (BIT1 0)) x2) /\ (Peano.le x2 (@dimindex a1 (@UNIV a1)))) -> (@dollar a0 a1 x0 x2) = (@dollar a0 a1 x1 x2)) = (((Peano.le (NUMERAL (BIT1 0)) x2) /\ (Peano.le x2 (@dimindex a1 (@UNIV a1)))) -> True).
Definition term46 (a0 : Type') (a1 : Type') (x0 : cart a0 a1) (x1 : cart a0 a1) := (forall y0 : nat, (@dollar a0 a1 x0 y0) = (@dollar a0 a1 x1 y0)) -> (x0 = x1) = True.
Definition term28 (a0 : Type') (a1 : Type') (x0 : cart a0 a1) (x1 : cart a0 a1) (x2 : Prop) (x3 : Prop) := (fun y0 : Prop => ((forall y1 : nat, (@dollar a0 a1 x0 y1) = (@dollar a0 a1 x1 y1)) = x2) -> (x2 -> (x0 = x1) = y0) -> ((forall y1 : nat, (@dollar a0 a1 x0 y1) = (@dollar a0 a1 x1 y1)) -> x0 = x1) = (x2 -> y0)) x3.
Definition term11 (a0 : Type') (a1 : Type') (x0 : cart a0 a1) (x1 : cart a0 a1) (x2 : Prop) (x3 : Prop) := (fun y0 : Prop => ((x0 = x1) = x2) -> (x2 -> (forall y1 : nat, (@dollar a0 a1 x0 y1) = (@dollar a0 a1 x1 y1)) = y0) -> ((x0 = x1) -> forall y1 : nat, (@dollar a0 a1 x0 y1) = (@dollar a0 a1 x1 y1)) = (x2 -> y0)) x3.
Definition term12 (a0 : Type') (a1 : Type') (x0 : cart a0 a1) (x1 : cart a0 a1) (x2 : Prop) (x3 : Prop) := ((x0 = x1) = x2) -> (x2 -> (forall y0 : nat, (@dollar a0 a1 x0 y0) = (@dollar a0 a1 x1 y0)) = x3) -> ((x0 = x1) -> forall y0 : nat, (@dollar a0 a1 x0 y0) = (@dollar a0 a1 x1 y0)) = (x2 -> x3).
Definition term18 := forall y0 : nat, True.
Definition term45 (a0 : Type') (a1 : Type') (x0 : cart a0 a1) (x1 : cart a0 a1) := fun y0 : nat => ((Peano.le (NUMERAL (BIT1 0)) y0) /\ (Peano.le y0 (@dimindex a1 (@UNIV a1)))) -> (@dollar a0 a1 x0 y0) = (@dollar a0 a1 x1 y0).
Definition term16 (a0 : Type') (a1 : Type') (x0 : cart a0 a1) (x1 : cart a0 a1) := fun y0 : nat => (@dollar a0 a1 x0 y0) = (@dollar a0 a1 x1 y0).
Definition term17 := fun y0 : nat => True.
Definition term34 (a0 : Type') (x0 : nat) := (Peano.le (NUMERAL (BIT1 0)) x0) /\ (Peano.le x0 (@dimindex a0 (@UNIV a0))).
Definition term36 (a0 : Type') (a1 : Type') (x0 : cart a0 a1) (x1 : cart a0 a1) (x2 : nat) (x3 : Prop) := forall y0 : Prop, (((Peano.le (NUMERAL (BIT1 0)) x2) /\ (Peano.le x2 (@dimindex a1 (@UNIV a1)))) = x3) -> (x3 -> ((@dollar a0 a1 x0 x2) = (@dollar a0 a1 x1 x2)) = y0) -> (((Peano.le (NUMERAL (BIT1 0)) x2) /\ (Peano.le x2 (@dimindex a1 (@UNIV a1)))) -> (@dollar a0 a1 x0 x2) = (@dollar a0 a1 x1 x2)) = (x3 -> y0).
Definition term27 (a0 : Type') (a1 : Type') (x0 : cart a0 a1) (x1 : cart a0 a1) (x2 : Prop) := forall y0 : Prop, ((forall y1 : nat, (@dollar a0 a1 x0 y1) = (@dollar a0 a1 x1 y1)) = x2) -> (x2 -> (x0 = x1) = y0) -> ((forall y1 : nat, (@dollar a0 a1 x0 y1) = (@dollar a0 a1 x1 y1)) -> x0 = x1) = (x2 -> y0).
Definition term10 (a0 : Type') (a1 : Type') (x0 : cart a0 a1) (x1 : cart a0 a1) (x2 : Prop) := forall y0 : Prop, ((x0 = x1) = x2) -> (x2 -> (forall y1 : nat, (@dollar a0 a1 x0 y1) = (@dollar a0 a1 x1 y1)) = y0) -> ((x0 = x1) -> forall y1 : nat, (@dollar a0 a1 x0 y1) = (@dollar a0 a1 x1 y1)) = (x2 -> y0).
Definition term5 (x0 : Prop) (x1 : Prop) (x2 : Prop) := forall y0 : Prop, (x0 = x2) -> (x2 -> x1 = y0) -> (x0 -> x1) = (x2 -> y0).
Definition term33 (a0 : Type') (a1 : Type') (x0 : cart a0 a1) (x1 : cart a0 a1) (x2 : nat) := forall y0 : Prop, forall y1 : Prop, (((Peano.le (NUMERAL (BIT1 0)) x2) /\ (Peano.le x2 (@dimindex a1 (@UNIV a1)))) = y0) -> (y0 -> ((@dollar a0 a1 x0 x2) = (@dollar a0 a1 x1 x2)) = y1) -> (((Peano.le (NUMERAL (BIT1 0)) x2) /\ (Peano.le x2 (@dimindex a1 (@UNIV a1)))) -> (@dollar a0 a1 x0 x2) = (@dollar a0 a1 x1 x2)) = (y0 -> y1).
Definition term25 (a0 : Type') (a1 : Type') (x0 : cart a0 a1) (x1 : cart a0 a1) := forall y0 : Prop, forall y1 : Prop, ((forall y2 : nat, (@dollar a0 a1 x0 y2) = (@dollar a0 a1 x1 y2)) = y0) -> (y0 -> (x0 = x1) = y1) -> ((forall y2 : nat, (@dollar a0 a1 x0 y2) = (@dollar a0 a1 x1 y2)) -> x0 = x1) = (y0 -> y1).
Definition term7 (a0 : Type') (a1 : Type') (x0 : cart a0 a1) (x1 : cart a0 a1) := forall y0 : Prop, forall y1 : Prop, ((x0 = x1) = y0) -> (y0 -> (forall y2 : nat, (@dollar a0 a1 x0 y2) = (@dollar a0 a1 x1 y2)) = y1) -> ((x0 = x1) -> forall y2 : nat, (@dollar a0 a1 x0 y2) = (@dollar a0 a1 x1 y2)) = (y0 -> y1).
Definition term6 (x0 : Prop) (x1 : Prop) := forall y0 : Prop, forall y1 : Prop, (x0 = y0) -> (y0 -> x1 = y1) -> (x0 -> x1) = (y0 -> y1).
Definition term0 (a0 : Type') (a1 : Type') (x0 : cart a0 a1) := (fun y0 : cart a0 a1 => forall y1 : cart a0 a1, (y0 = y1) = (forall y2 : nat, ((Peano.le (NUMERAL (BIT1 0)) y2) /\ (Peano.le y2 (@dimindex a1 (@UNIV a1)))) -> (@dollar a0 a1 y0 y2) = (@dollar a0 a1 y1 y2))) x0.
Definition term13 (a0 : Type') (a1 : Type') (x0 : cart a0 a1) (x1 : cart a0 a1) (x2 : Prop) := ((x0 = x1) = (x0 = x1)) -> ((x0 = x1) -> (forall y0 : nat, (@dollar a0 a1 x0 y0) = (@dollar a0 a1 x1 y0)) = x2) -> ((x0 = x1) -> forall y0 : nat, (@dollar a0 a1 x0 y0) = (@dollar a0 a1 x1 y0)) = ((x0 = x1) -> x2).
Definition term22 (a0 : Type') (a1 : Type') (x0 : cart a0 a1) (x1 : cart a0 a1) := ((x0 = x1) -> (forall y0 : nat, (@dollar a0 a1 x0 y0) = (@dollar a0 a1 x1 y0)) = True) -> ((x0 = x1) -> forall y0 : nat, (@dollar a0 a1 x0 y0) = (@dollar a0 a1 x1 y0)) = ((x0 = x1) -> True).
Definition term37 (a0 : Type') (a1 : Type') (x0 : cart a0 a1) (x1 : cart a0 a1) (x2 : nat) (x3 : Prop) (x4 : Prop) := (fun y0 : Prop => (((Peano.le (NUMERAL (BIT1 0)) x2) /\ (Peano.le x2 (@dimindex a1 (@UNIV a1)))) = x3) -> (x3 -> ((@dollar a0 a1 x0 x2) = (@dollar a0 a1 x1 x2)) = y0) -> (((Peano.le (NUMERAL (BIT1 0)) x2) /\ (Peano.le x2 (@dimindex a1 (@UNIV a1)))) -> (@dollar a0 a1 x0 x2) = (@dollar a0 a1 x1 x2)) = (x3 -> y0)) x4.
Definition term41 (a0 : Type') (a1 : Type') (x0 : cart a0 a1) (x1 : cart a0 a1) (x2 : nat) := ((Peano.le (NUMERAL (BIT1 0)) x2) /\ (Peano.le x2 (@dimindex a1 (@UNIV a1)))) -> ((@dollar a0 a1 x0 x2) = (@dollar a0 a1 x1 x2)) = True.
Definition term3 (a0 : Type') (a1 : Type') (x0 : cart a0 a1) (x1 : cart a0 a1) := forall y0 : nat, ((Peano.le (NUMERAL (BIT1 0)) y0) /\ (Peano.le y0 (@dimindex a1 (@UNIV a1)))) -> (@dollar a0 a1 x0 y0) = (@dollar a0 a1 x1 y0).
Definition term20 (x0 : Prop) := forall y0 : nat, x0.
Definition term31 (a0 : Type') (a1 : Type') (x0 : cart a0 a1) (x1 : cart a0 a1) (x2 : Prop) := ((forall y0 : nat, (@dollar a0 a1 x0 y0) = (@dollar a0 a1 x1 y0)) -> (x0 = x1) = x2) -> ((forall y0 : nat, (@dollar a0 a1 x0 y0) = (@dollar a0 a1 x1 y0)) -> x0 = x1) = ((forall y0 : nat, (@dollar a0 a1 x0 y0) = (@dollar a0 a1 x1 y0)) -> x2).
Definition term44 (a0 : Type') (x0 : nat) := ((Peano.le (NUMERAL (BIT1 0)) x0) /\ (Peano.le x0 (@dimindex a0 (@UNIV a0)))) -> True.
Definition term26 (a0 : Type') (a1 : Type') (x0 : cart a0 a1) (x1 : cart a0 a1) (x2 : Prop) := (fun y0 : Prop => forall y1 : Prop, ((forall y2 : nat, (@dollar a0 a1 x0 y2) = (@dollar a0 a1 x1 y2)) = y0) -> (y0 -> (x0 = x1) = y1) -> ((forall y2 : nat, (@dollar a0 a1 x0 y2) = (@dollar a0 a1 x1 y2)) -> x0 = x1) = (y0 -> y1)) x2.
Definition term9 (a0 : Type') (a1 : Type') (x0 : cart a0 a1) (x1 : cart a0 a1) (x2 : Prop) := (fun y0 : Prop => forall y1 : Prop, ((x0 = x1) = y0) -> (y0 -> (forall y2 : nat, (@dollar a0 a1 x0 y2) = (@dollar a0 a1 x1 y2)) = y1) -> ((x0 = x1) -> forall y2 : nat, (@dollar a0 a1 x0 y2) = (@dollar a0 a1 x1 y2)) = (y0 -> y1)) x2.
Definition term15 (a0 : Type') (a1 : Type') (x0 : cart a0 a1) (x1 : nat) := @eq a0 (@dollar a0 a1 x0 x1).
Definition term43 (a0 : Type') (a1 : Type') (x0 : cart a0 a1) (x1 : cart a0 a1) (x2 : nat) := ((Peano.le (NUMERAL (BIT1 0)) x2) /\ (Peano.le x2 (@dimindex a1 (@UNIV a1)))) -> (@dollar a0 a1 x0 x2) = (@dollar a0 a1 x1 x2).
Definition term29 (a0 : Type') (a1 : Type') (x0 : cart a0 a1) (x1 : cart a0 a1) (x2 : Prop) (x3 : Prop) := ((forall y0 : nat, (@dollar a0 a1 x0 y0) = (@dollar a0 a1 x1 y0)) = x2) -> (x2 -> (x0 = x1) = x3) -> ((forall y0 : nat, (@dollar a0 a1 x0 y0) = (@dollar a0 a1 x1 y0)) -> x0 = x1) = (x2 -> x3).
