Require Import coq.
Require Import theory_hol.
Require Import hol_types.
Require Import hol_type_abbrevs.
Require Import hol_terms.
Definition term5 := (forall y0 : prod hreal hreal, treal_eq y0 y0) /\ ((forall y0 : prod hreal hreal, forall y1 : prod hreal hreal, (treal_eq y0 y1) = (treal_eq y1 y0)) /\ ((forall y0 : prod hreal hreal, forall y1 : prod hreal hreal, forall y2 : prod hreal hreal, ((treal_eq y0 y1) /\ (treal_eq y1 y2)) -> treal_eq y0 y2) /\ ((forall y0 : real, (mk_real (dest_real y0)) = y0) /\ (forall y0 : type1233, (exists y1 : prod hreal hreal, y0 = (treal_eq y1)) = ((dest_real (mk_real y0)) = y0))))).
Definition term9 := ((forall y0 : prod hreal hreal, treal_eq y0 y0) /\ ((forall y0 : prod hreal hreal, forall y1 : prod hreal hreal, (treal_eq y0 y1) = (treal_eq y1 y0)) /\ ((forall y0 : prod hreal hreal, forall y1 : prod hreal hreal, forall y2 : prod hreal hreal, ((treal_eq y0 y1) /\ (treal_eq y1 y2)) -> treal_eq y0 y2) /\ ((forall y0 : real, (mk_real (dest_real y0)) = y0) /\ (forall y0 : type1233, (exists y1 : prod hreal hreal, y0 = (treal_eq y1)) = ((dest_real (mk_real y0)) = y0)))))) -> (forall y0 : prod hreal hreal, forall y1 : prod hreal hreal, (treal_eq y0 y1) = ((mk_real (treal_eq y0)) = (mk_real (treal_eq y1)))) /\ ((forall y0 : real -> Prop, (forall y1 : prod hreal hreal, y0 (mk_real (treal_eq y1))) = (forall y1 : real, y0 y1)) /\ ((forall y0 : real -> Prop, (exists y1 : prod hreal hreal, y0 (mk_real (treal_eq y1))) = (exists y1 : real, y0 y1)) /\ (forall y0 : real, (mk_real (treal_eq (@ε (prod hreal hreal) (dest_real y0)))) = y0))).
Definition term8 (x0 : type334) (x1 : type1232) (x2 : type1619) := ((forall y0 : prod hreal hreal, x1 y0 y0) /\ ((forall y0 : prod hreal hreal, forall y1 : prod hreal hreal, (x1 y0 y1) = (x1 y1 y0)) /\ ((forall y0 : prod hreal hreal, forall y1 : prod hreal hreal, forall y2 : prod hreal hreal, ((x1 y0 y1) /\ (x1 y1 y2)) -> x1 y0 y2) /\ ((forall y0 : real, (x0 (x2 y0)) = y0) /\ (forall y0 : type1233, (exists y1 : prod hreal hreal, y0 = (x1 y1)) = ((x2 (x0 y0)) = y0)))))) -> (forall y0 : prod hreal hreal, forall y1 : prod hreal hreal, (x1 y0 y1) = ((x0 (x1 y0)) = (x0 (x1 y1)))) /\ ((forall y0 : real -> Prop, (forall y1 : prod hreal hreal, y0 (x0 (x1 y1))) = (forall y1 : real, y0 y1)) /\ ((forall y0 : real -> Prop, (exists y1 : prod hreal hreal, y0 (x0 (x1 y1))) = (exists y1 : real, y0 y1)) /\ (forall y0 : real, (x0 (x1 (@ε (prod hreal hreal) (x2 y0)))) = y0))).
Definition term6 (a0 : Type') (a1 : Type') (x0 : type862 a0 a1) (x1 : type1402 a1) (x2 : type1413 a0 a1) := ((forall y0 : a1, x1 y0 y0) /\ ((forall y0 : a1, forall y1 : a1, (x1 y0 y1) = (x1 y1 y0)) /\ ((forall y0 : a1, forall y1 : a1, forall y2 : a1, ((x1 y0 y1) /\ (x1 y1 y2)) -> x1 y0 y2) /\ ((forall y0 : a0, (x0 (x2 y0)) = y0) /\ (forall y0 : a1 -> Prop, (exists y1 : a1, y0 = (x1 y1)) = ((x2 (x0 y0)) = y0)))))) -> (forall y0 : a1, forall y1 : a1, (x1 y0 y1) = ((x0 (x1 y0)) = (x0 (x1 y1)))) /\ ((forall y0 : a0 -> Prop, (forall y1 : a1, y0 (x0 (x1 y1))) = (forall y1 : a0, y0 y1)) /\ ((forall y0 : a0 -> Prop, (exists y1 : a1, y0 (x0 (x1 y1))) = (exists y1 : a0, y0 y1)) /\ (forall y0 : a0, (x0 (x1 (@ε a1 (x2 y0)))) = y0))).
Definition term7 (a0 : Type') (a1 : Type') (x0 : type1402 a1) (x1 : type1413 a0 a1) (x2 : type862 a0 a1) := (forall y0 : a1, x0 y0 y0) /\ ((forall y0 : a1, forall y1 : a1, (x0 y0 y1) = (x0 y1 y0)) /\ ((forall y0 : a1, forall y1 : a1, forall y2 : a1, ((x0 y0 y1) /\ (x0 y1 y2)) -> x0 y0 y2) /\ ((forall y0 : a0, (x2 (x1 y0)) = y0) /\ (forall y0 : a1 -> Prop, (exists y1 : a1, y0 = (x0 y1)) = ((x1 (x2 y0)) = y0))))).
Definition term0 := forall y0 : real, (mk_real (dest_real y0)) = y0.
Definition term10 := (forall y0 : prod hreal hreal, forall y1 : prod hreal hreal, (treal_eq y0 y1) = ((mk_real (treal_eq y0)) = (mk_real (treal_eq y1)))) /\ ((forall y0 : real -> Prop, (forall y1 : prod hreal hreal, y0 (mk_real (treal_eq y1))) = (forall y1 : real, y0 y1)) /\ ((forall y0 : real -> Prop, (exists y1 : prod hreal hreal, y0 (mk_real (treal_eq y1))) = (exists y1 : real, y0 y1)) /\ (forall y0 : real, (mk_real (treal_eq (@ε (prod hreal hreal) (dest_real y0)))) = y0))).
Definition term4 := (forall y0 : prod hreal hreal, forall y1 : prod hreal hreal, (treal_eq y0 y1) = (treal_eq y1 y0)) /\ ((forall y0 : prod hreal hreal, forall y1 : prod hreal hreal, forall y2 : prod hreal hreal, ((treal_eq y0 y1) /\ (treal_eq y1 y2)) -> treal_eq y0 y2) /\ ((forall y0 : real, (mk_real (dest_real y0)) = y0) /\ (forall y0 : type1233, (exists y1 : prod hreal hreal, y0 = (treal_eq y1)) = ((dest_real (mk_real y0)) = y0)))).
Definition term3 := (forall y0 : prod hreal hreal, forall y1 : prod hreal hreal, forall y2 : prod hreal hreal, ((treal_eq y0 y1) /\ (treal_eq y1 y2)) -> treal_eq y0 y2) /\ ((forall y0 : real, (mk_real (dest_real y0)) = y0) /\ (forall y0 : type1233, (exists y1 : prod hreal hreal, y0 = (treal_eq y1)) = ((dest_real (mk_real y0)) = y0))).
Definition term2 := (forall y0 : real, (mk_real (dest_real y0)) = y0) /\ (forall y0 : type1233, (exists y1 : prod hreal hreal, y0 = (treal_eq y1)) = ((dest_real (mk_real y0)) = y0)).
Definition term1 := forall y0 : type1233, (exists y1 : prod hreal hreal, y0 = (treal_eq y1)) = ((dest_real (mk_real y0)) = y0).
