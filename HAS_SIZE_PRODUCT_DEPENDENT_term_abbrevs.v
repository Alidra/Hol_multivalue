Require Import coq.
Require Import theory_hol.
Require Import hol_types.
Require Import hol_type_abbrevs.
Require Import hol_terms.
Definition term474 (a0 : Type') (a1 : Type') (x0 : type1470 a0 a1) (x1 : a1) (x2 : a0) := ((@pair a1 a0 x1 x2) = (@pair a1 a0 x1 x2)) /\ (x0 x1 x2).
Definition term1024 (a0 : Type') (a1 : Type') (x0 : type1413 a0 a1) (x1 : a0) (x2 : nat) := @eq Prop (forall y0 : a0, (y0 = x1) -> @HAS_SIZE a1 (x0 x1) x2).
Definition term1023 (a0 : Type') (a1 : Type') (x0 : type1413 a0 a1) (x1 : a0) (x2 : nat) := @eq Prop (forall y0 : a0, ((fun y1 : a0 => y1 = x1) y0) -> @HAS_SIZE a1 (x0 x1) x2).
Definition term2090 (a0 : Type') (x0 : a0 -> Prop) (x1 : type686 a0) (x2 : type686 a0) (x3 : a0 -> Prop) := (x3 = x0) /\ ((x2 = x1) /\ (@I ((a0 -> Prop) -> Prop) x2 x3)).
Definition term673 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) := forall y0 : nat, (@FINITE a0 x0) -> (fun y1 : nat => ((@CARD a0 x0) = y1) -> forall y2 : type1413 a0 a1, forall y3 : nat, (forall y4 : a0, (@IN a0 y4 x0) -> @HAS_SIZE a1 (y2 y4) y3) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y4 : prod a0 a1 => exists y5 : a0, exists y6 : a1, @SETSPEC (prod a0 a1) y4 ((@IN a0 y5 x0) /\ (@IN a1 y6 (y2 y5))) (@pair a0 a1 y5 y6))) (Nat.mul y1 y3)) y0.
Definition term614 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : type1413 a0 a1) (x2 : nat) := forall y0 : nat, (@FINITE a0 x0) -> (fun y1 : nat => ((@CARD a0 x0) = x2) -> (forall y2 : a0, (@IN a0 y2 x0) -> @HAS_SIZE a1 (x1 y2) y1) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y2 : prod a0 a1 => exists y3 : a0, exists y4 : a1, @SETSPEC (prod a0 a1) y2 ((@IN a0 y3 x0) /\ (@IN a1 y4 (x1 y3))) (@pair a0 a1 y3 y4))) (Nat.mul x2 y1)) y0.
Definition term302 (a0 : Type') (a1 : Type') (x0 : a1) (x1 : a1 -> Prop) (x2 : prod a1 a0) (x3 : type1470 a0 a1) (x4 : a1) := @eq Prop ((exists y0 : a0, (((x0 = x4) \/ (x1 x0)) /\ (x3 x0 y0)) /\ (x2 = (@pair a1 a0 x0 y0))) /\ ((forall y0 : a1, forall y1 : a0, ((~ (x1 y0)) \/ (~ (x3 y0 y1))) \/ (~ (x2 = (@pair a1 a0 y0 y1)))) /\ (forall y0 : a0, (~ (x2 = (@pair a1 a0 x4 y0))) \/ (~ (x3 x4 y0))))).
Definition term301 (a0 : Type') (a1 : Type') (x0 : a1) (x1 : a1 -> Prop) (x2 : prod a1 a0) (x3 : type1470 a0 a1) (x4 : a1) := @eq Prop ((exists y0 : a0, (fun y1 : a0 => (((x0 = x4) \/ (x1 x0)) /\ (x3 x0 y1)) /\ (x2 = (@pair a1 a0 x0 y1))) y0) /\ ((forall y0 : a1, forall y1 : a0, ((~ (x1 y0)) \/ (~ (x3 y0 y1))) \/ (~ (x2 = (@pair a1 a0 y0 y1)))) /\ (forall y0 : a0, (~ (x2 = (@pair a1 a0 x4 y0))) \/ (~ (x3 x4 y0))))).
Definition term288 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : prod a1 a0) (x2 : type1470 a0 a1) (x3 : a1) := @eq Prop ((exists y0 : a1, exists y1 : a0, (((y0 = x3) \/ (x0 y0)) /\ (x2 y0 y1)) /\ (x1 = (@pair a1 a0 y0 y1))) /\ ((forall y0 : a1, forall y1 : a0, ((~ (x0 y0)) \/ (~ (x2 y0 y1))) \/ (~ (x1 = (@pair a1 a0 y0 y1)))) /\ (forall y0 : a0, (~ (x1 = (@pair a1 a0 x3 y0))) \/ (~ (x2 x3 y0))))).
Definition term287 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : prod a1 a0) (x2 : type1470 a0 a1) (x3 : a1) := @eq Prop ((exists y0 : a1, (fun y1 : a1 => exists y2 : a0, (((y1 = x3) \/ (x0 y1)) /\ (x2 y1 y2)) /\ (x1 = (@pair a1 a0 y1 y2))) y0) /\ ((forall y0 : a1, forall y1 : a0, ((~ (x0 y0)) \/ (~ (x2 y0 y1))) \/ (~ (x1 = (@pair a1 a0 y0 y1)))) /\ (forall y0 : a0, (~ (x1 = (@pair a1 a0 x3 y0))) \/ (~ (x2 x3 y0))))).
Definition term1624 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : a0 -> Prop) := fun y0 : type1413 a0 a1 => exists y1 : type1207 a0 a1, exists y2 : type1208 a0 a1, forall y3 : prod a0 a1, (~ (x0 x1 y0 y3)) \/ (@SETSPEC (prod a0 a1) y3 ((@IN a0 (y1 y3) x1) /\ (@IN a1 (y2 y3) (y0 (y1 y3)))) (@pair a0 a1 (y1 y3) (y2 y3))).
Definition term176 (a0 : Type') (a1 : Type') (x0 : prod a1 a0) (x1 : type1470 a0 a1) (x2 : a1) := fun y0 : a0 => (x0 = (@pair a1 a0 x2 y0)) /\ (x1 x2 y0).
Definition term1 (a0 : Type') (x0 : a0) := ~ (@IN a0 x0 (@EMPTY a0)).
Definition term1789 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : type1413 a0 a1) (x2 : a0 -> Prop) (x3 : nat) := fun y0 : a0 => ((fun y1 : a0 => (@IN a0 y1 x2) /\ (~ (@HAS_SIZE a1 (x1 y1) x3))) y0) \/ (@HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (x0 x2 x1)) (Nat.mul (@CARD a0 x2) x3)).
Definition term1560 (a0 : Type') (a1 : Type') (x0 : prod a0 a1) (x1 : a0 -> Prop) (x2 : type1413 a0 a1) (x3 : a0) := exists y0 : a1, (fun y1 : a1 => @SETSPEC (prod a0 a1) x0 ((@IN a0 x3 x1) /\ (@IN a1 y1 (x2 x3))) (@pair a0 a1 x3 y1)) y0.
Definition term364 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : prod a1 a0) (x2 : type1470 a0 a1) (x3 : a1) := fun y0 : a1 => (forall y1 : a1, forall y2 : a0, (((~ (y1 = x3)) /\ (~ (x0 y1))) \/ (~ (x2 y1 y2))) \/ (~ (x1 = (@pair a1 a0 y1 y2)))) /\ ((fun y1 : a1 => exists y2 : a0, (((x0 y1) /\ (x2 y1 y2)) /\ (x1 = (@pair a1 a0 y1 y2))) \/ ((x1 = (@pair a1 a0 x3 y2)) /\ (x2 x3 y2))) y0).
Definition term838 (a0 : Type') (x0 : a0 -> Prop) := @eq nat (S (@CARD a0 x0)).
Definition term453 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : type1470 a0 a1) (x2 : a1) (x3 : a0) := fun y0 : prod a1 a0 => (~ (x0 x2)) \/ ((~ (x1 x2 x3)) \/ (~ (y0 = (@pair a1 a0 x2 x3)))).
Definition term310 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : prod a1 a0) (x2 : type1470 a0 a1) (x3 : a1) := fun y0 : a1 => exists y1 : a0, ((((y0 = x3) \/ (x0 y0)) /\ (x2 y0 y1)) /\ (x1 = (@pair a1 a0 y0 y1))) /\ ((forall y2 : a1, forall y3 : a0, ((~ (x0 y2)) \/ (~ (x2 y2 y3))) \/ (~ (x1 = (@pair a1 a0 y2 y3)))) /\ (forall y2 : a0, (~ (x1 = (@pair a1 a0 x3 y2))) \/ (~ (x2 x3 y2)))).
Definition term459 (a0 : Type') (a1 : Type') (x0 : a1) (x1 : type1470 a0 a1) (x2 : a1) (x3 : a0) := fun y0 : prod a1 a0 => (~ (x2 = x0)) \/ ((~ (x1 x2 x3)) \/ (~ (y0 = (@pair a1 a0 x2 x3)))).
Definition term537 (x0 : Prop) := (fun y0 : Prop => y0 = (y0 /\ (x0 -> y0))) False.
Definition term1611 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : a0 -> Prop) (x2 : type1413 a0 a1) (x3 : type1207 a0 a1) := @eq Prop (forall y0 : prod a0 a1, exists y1 : a1, (~ (x0 x1 x2 y0)) \/ (@SETSPEC (prod a0 a1) y0 ((@IN a0 (x3 y0) x1) /\ (@IN a1 y1 (x2 (x3 y0)))) (@pair a0 a1 (x3 y0) y1))).
Definition term1610 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : a0 -> Prop) (x2 : type1413 a0 a1) (x3 : type1207 a0 a1) := @eq Prop (forall y0 : prod a0 a1, exists y1 : a1, (fun y2 : prod a0 a1 => fun y3 : a1 => (~ (x0 x1 x2 y2)) \/ (@SETSPEC (prod a0 a1) y2 ((@IN a0 (x3 y2) x1) /\ (@IN a1 y3 (x2 (x3 y2)))) (@pair a0 a1 (x3 y2) y3))) y0 y1).
Definition term1586 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : a0 -> Prop) (x2 : type1413 a0 a1) := @eq Prop (forall y0 : prod a0 a1, exists y1 : a0, exists y2 : a1, (~ (x0 x1 x2 y0)) \/ (@SETSPEC (prod a0 a1) y0 ((@IN a0 y1 x1) /\ (@IN a1 y2 (x2 y1))) (@pair a0 a1 y1 y2))).
Definition term1585 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : a0 -> Prop) (x2 : type1413 a0 a1) := @eq Prop (forall y0 : prod a0 a1, exists y1 : a0, (fun y2 : prod a0 a1 => fun y3 : a0 => exists y4 : a1, (~ (x0 x1 x2 y2)) \/ (@SETSPEC (prod a0 a1) y2 ((@IN a0 y3 x1) /\ (@IN a1 y4 (x2 y3))) (@pair a0 a1 y3 y4))) y0 y1).
Definition term729 (a0 : Type') (a1 : Type') (x0 : nat) (x1 : Prop) (x2 : Prop) := (((@CARD a0 (@EMPTY a0)) = x0) = x1) -> (x1 -> (forall y0 : type1413 a0 a1, forall y1 : nat, (forall y2 : a0, (@IN a0 y2 (@EMPTY a0)) -> @HAS_SIZE a1 (y0 y2) y1) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y2 : prod a0 a1 => exists y3 : a0, exists y4 : a1, @SETSPEC (prod a0 a1) y2 ((@IN a0 y3 (@EMPTY a0)) /\ (@IN a1 y4 (y0 y3))) (@pair a0 a1 y3 y4))) (Nat.mul x0 y1)) = x2) -> (((@CARD a0 (@EMPTY a0)) = x0) -> forall y0 : type1413 a0 a1, forall y1 : nat, (forall y2 : a0, (@IN a0 y2 (@EMPTY a0)) -> @HAS_SIZE a1 (y0 y2) y1) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y2 : prod a0 a1 => exists y3 : a0, exists y4 : a1, @SETSPEC (prod a0 a1) y2 ((@IN a0 y3 (@EMPTY a0)) /\ (@IN a1 y4 (y0 y3))) (@pair a0 a1 y3 y4))) (Nat.mul x0 y1)) = (x1 -> x2).
Definition term827 (a0 : Type') (x0 : a0) (x1 : a0 -> Prop) (x2 : Prop) (x3 : nat) (x4 : nat) := (fun y0 : nat => ((@IN a0 x0 x1) = x2) -> (x2 -> (@CARD a0 x1) = x3) -> ((~ x2) -> (S (@CARD a0 x1)) = y0) -> (@COND nat (@IN a0 x0 x1) (@CARD a0 x1) (S (@CARD a0 x1))) = (@COND nat x2 x3 y0)) x4.
Definition term1377 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) := forall y0 : a0, forall y1 : type1413 a0 a1, forall y2 : a1, forall y3 : prod a0 a1, forall y4 : a1, forall y5 : a0, forall y6 : a0 -> Prop, forall y7 : nat, forall y8 : nat, (~ (@IN a0 y0 y6)) -> (@FINITE a0 y6) -> (y8 = (S (@CARD a0 y6))) -> (@HAS_SIZE a1 (y1 y0) y7) -> (forall y9 : a0, (@IN a0 y9 y6) -> @HAS_SIZE a1 (y1 y9) y7) -> (forall y9 : type1413 a0 a1, forall y10 : nat, (forall y11 : a0, (@IN a0 y11 y6) -> @HAS_SIZE a1 (y9 y11) y10) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (x0 y6 y9)) (Nat.mul (@CARD a0 y6) y10)) -> (@IN a0 y5 y6) -> (@IN a1 y4 (y1 y5)) -> (y3 = (@pair a0 a1 y5 y4)) -> (y3 = (@pair a0 a1 y0 y2)) -> (@IN a1 y2 (y1 y0)) -> (forall y9 : a0, forall y10 : a1, forall y11 : a0, forall y12 : a1, ((@pair a0 a1 y9 y10) = (@pair a0 a1 y11 y12)) = ((y9 = y11) /\ (y10 = y12))) -> (forall y9 : a0, forall y10 : nat, forall y11 : a0, forall y12 : nat, ((@pair a0 nat y9 y10) = (@pair a0 nat y11 y12)) = ((y9 = y11) /\ (y10 = y12))) -> (forall y9 : a0, forall y10 : prod a0 a1, forall y11 : a0, forall y12 : prod a0 a1, ((@pair a0 (prod a0 a1) y9 y10) = (@pair a0 (prod a0 a1) y11 y12)) = ((y9 = y11) /\ (y10 = y12))) -> (forall y9 : nat, forall y10 : a1, forall y11 : nat, forall y12 : a1, ((@pair nat a1 y9 y10) = (@pair nat a1 y11 y12)) = ((y9 = y11) /\ (y10 = y12))) -> ~ (forall y9 : prod a0 a1, forall y10 : a1, forall y11 : prod a0 a1, forall y12 : a1, ((@pair (prod a0 a1) a1 y9 y10) = (@pair (prod a0 a1) a1 y11 y12)) = ((y9 = y11) /\ (y10 = y12))).
Definition term1367 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : a1) (x2 : prod a0 a1) (x3 : a1) (x4 : type1413 a0 a1) (x5 : a0) := forall y0 : a0, forall y1 : a0 -> Prop, forall y2 : nat, forall y3 : nat, (~ (@IN a0 x5 y1)) -> (@FINITE a0 y1) -> (y3 = (S (@CARD a0 y1))) -> (@HAS_SIZE a1 (x4 x5) y2) -> (forall y4 : a0, (@IN a0 y4 y1) -> @HAS_SIZE a1 (x4 y4) y2) -> (forall y4 : type1413 a0 a1, forall y5 : nat, (forall y6 : a0, (@IN a0 y6 y1) -> @HAS_SIZE a1 (y4 y6) y5) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (x0 y1 y4)) (Nat.mul (@CARD a0 y1) y5)) -> (@IN a0 y0 y1) -> (@IN a1 x1 (x4 y0)) -> (x2 = (@pair a0 a1 y0 x1)) -> (x2 = (@pair a0 a1 x5 x3)) -> (@IN a1 x3 (x4 x5)) -> (forall y4 : a0, forall y5 : a1, forall y6 : a0, forall y7 : a1, ((@pair a0 a1 y4 y5) = (@pair a0 a1 y6 y7)) = ((y4 = y6) /\ (y5 = y7))) -> (forall y4 : a0, forall y5 : nat, forall y6 : a0, forall y7 : nat, ((@pair a0 nat y4 y5) = (@pair a0 nat y6 y7)) = ((y4 = y6) /\ (y5 = y7))) -> (forall y4 : a0, forall y5 : prod a0 a1, forall y6 : a0, forall y7 : prod a0 a1, ((@pair a0 (prod a0 a1) y4 y5) = (@pair a0 (prod a0 a1) y6 y7)) = ((y4 = y6) /\ (y5 = y7))) -> (forall y4 : nat, forall y5 : a1, forall y6 : nat, forall y7 : a1, ((@pair nat a1 y4 y5) = (@pair nat a1 y6 y7)) = ((y4 = y6) /\ (y5 = y7))) -> ~ (forall y4 : prod a0 a1, forall y5 : a1, forall y6 : prod a0 a1, forall y7 : a1, ((@pair (prod a0 a1) a1 y4 y5) = (@pair (prod a0 a1) a1 y6 y7)) = ((y4 = y6) /\ (y5 = y7))).
Definition term1320 (a0 : Type') (x0 : nat) := forall y0 : a0, forall y1 : nat, forall y2 : a0, ((@pair nat a0 x0 y0) = (@pair nat a0 y1 y2)) = ((x0 = y1) /\ (y0 = y2)).
Definition term1299 (a0 : Type') (a1 : Type') := forall y0 : a0, forall y1 : type1413 a0 a1, forall y2 : a1, forall y3 : prod a0 a1, forall y4 : a1, forall y5 : a0, forall y6 : a0 -> Prop, forall y7 : nat, forall y8 : nat, (~ (@IN a0 y0 y6)) -> (@FINITE a0 y6) -> (y8 = (S (@CARD a0 y6))) -> (@HAS_SIZE a1 (y1 y0) y7) -> (forall y9 : a0, (@IN a0 y9 y6) -> @HAS_SIZE a1 (y1 y9) y7) -> (forall y9 : type1413 a0 a1, forall y10 : nat, (forall y11 : a0, (@IN a0 y11 y6) -> @HAS_SIZE a1 (y9 y11) y10) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y11 : prod a0 a1 => exists y12 : a0, exists y13 : a1, @SETSPEC (prod a0 a1) y11 ((@IN a0 y12 y6) /\ (@IN a1 y13 (y9 y12))) (@pair a0 a1 y12 y13))) (Nat.mul (@CARD a0 y6) y10)) -> (@IN a0 y5 y6) -> (@IN a1 y4 (y1 y5)) -> (y3 = (@pair a0 a1 y5 y4)) -> (y3 = (@pair a0 a1 y0 y2)) -> (@IN a1 y2 (y1 y0)) -> (forall y9 : a0, forall y10 : a1, forall y11 : a0, forall y12 : a1, ((@pair a0 a1 y9 y10) = (@pair a0 a1 y11 y12)) = ((y9 = y11) /\ (y10 = y12))) -> (forall y9 : a0, forall y10 : nat, forall y11 : a0, forall y12 : nat, ((@pair a0 nat y9 y10) = (@pair a0 nat y11 y12)) = ((y9 = y11) /\ (y10 = y12))) -> (forall y9 : a0, forall y10 : prod a0 a1, forall y11 : a0, forall y12 : prod a0 a1, ((@pair a0 (prod a0 a1) y9 y10) = (@pair a0 (prod a0 a1) y11 y12)) = ((y9 = y11) /\ (y10 = y12))) -> (forall y9 : nat, forall y10 : a1, forall y11 : nat, forall y12 : a1, ((@pair nat a1 y9 y10) = (@pair nat a1 y11 y12)) = ((y9 = y11) /\ (y10 = y12))) -> ~ (forall y9 : prod a0 a1, forall y10 : a1, forall y11 : prod a0 a1, forall y12 : a1, ((@pair (prod a0 a1) a1 y9 y10) = (@pair (prod a0 a1) a1 y11 y12)) = ((y9 = y11) /\ (y10 = y12))).
Definition term1298 (a0 : Type') (a1 : Type') := forall y0 : a0, forall y1 : type1413 a0 a1, forall y2 : a1, forall y3 : prod a0 a1, forall y4 : a1, forall y5 : a0, forall y6 : a0 -> Prop, forall y7 : nat, forall y8 : nat, (~ (@IN a0 y0 y6)) -> (@FINITE a0 y6) -> (y8 = (S (@CARD a0 y6))) -> (@HAS_SIZE a1 (y1 y0) y7) -> (forall y9 : a0, (@IN a0 y9 y6) -> @HAS_SIZE a1 (y1 y9) y7) -> (forall y9 : type1413 a0 a1, forall y10 : nat, (forall y11 : a0, (@IN a0 y11 y6) -> @HAS_SIZE a1 (y9 y11) y10) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y11 : prod a0 a1 => exists y12 : a0, exists y13 : a1, @SETSPEC (prod a0 a1) y11 ((@IN a0 y12 y6) /\ (@IN a1 y13 (y9 y12))) (@pair a0 a1 y12 y13))) (Nat.mul (@CARD a0 y6) y10)) -> (@IN a0 y5 y6) -> (@IN a1 y4 (y1 y5)) -> (y3 = (@pair a0 a1 y5 y4)) -> (y3 = (@pair a0 a1 y0 y2)) -> (@IN a1 y2 (y1 y0)) -> (forall y9 : a0, forall y10 : a1, forall y11 : a0, forall y12 : a1, ((@pair a0 a1 y9 y10) = (@pair a0 a1 y11 y12)) = ((y9 = y11) /\ (y10 = y12))) -> (forall y9 : a0, forall y10 : nat, forall y11 : a0, forall y12 : nat, ((@pair a0 nat y9 y10) = (@pair a0 nat y11 y12)) = ((y9 = y11) /\ (y10 = y12))) -> (forall y9 : a0, forall y10 : prod a0 a1, forall y11 : a0, forall y12 : prod a0 a1, ((@pair a0 (prod a0 a1) y9 y10) = (@pair a0 (prod a0 a1) y11 y12)) = ((y9 = y11) /\ (y10 = y12))) -> (forall y9 : nat, forall y10 : a1, forall y11 : nat, forall y12 : a1, ((@pair nat a1 y9 y10) = (@pair nat a1 y11 y12)) = ((y9 = y11) /\ (y10 = y12))) -> (forall y9 : prod a0 a1, forall y10 : a1, forall y11 : prod a0 a1, forall y12 : a1, ((@pair (prod a0 a1) a1 y9 y10) = (@pair (prod a0 a1) a1 y11 y12)) = ((y9 = y11) /\ (y10 = y12))) -> False.
Definition term1279 (a0 : Type') (a1 : Type') (x0 : a1) (x1 : prod a0 a1) (x2 : a1) (x3 : type1413 a0 a1) (x4 : a0) := forall y0 : a0, forall y1 : a0 -> Prop, forall y2 : nat, forall y3 : nat, (~ (@IN a0 x4 y1)) -> (@FINITE a0 y1) -> (y3 = (S (@CARD a0 y1))) -> (@HAS_SIZE a1 (x3 x4) y2) -> (forall y4 : a0, (@IN a0 y4 y1) -> @HAS_SIZE a1 (x3 y4) y2) -> (forall y4 : type1413 a0 a1, forall y5 : nat, (forall y6 : a0, (@IN a0 y6 y1) -> @HAS_SIZE a1 (y4 y6) y5) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y6 : prod a0 a1 => exists y7 : a0, exists y8 : a1, @SETSPEC (prod a0 a1) y6 ((@IN a0 y7 y1) /\ (@IN a1 y8 (y4 y7))) (@pair a0 a1 y7 y8))) (Nat.mul (@CARD a0 y1) y5)) -> (@IN a0 y0 y1) -> (@IN a1 x0 (x3 y0)) -> (x1 = (@pair a0 a1 y0 x0)) -> (x1 = (@pair a0 a1 x4 x2)) -> (@IN a1 x2 (x3 x4)) -> (forall y4 : a0, forall y5 : a1, forall y6 : a0, forall y7 : a1, ((@pair a0 a1 y4 y5) = (@pair a0 a1 y6 y7)) = ((y4 = y6) /\ (y5 = y7))) -> (forall y4 : a0, forall y5 : nat, forall y6 : a0, forall y7 : nat, ((@pair a0 nat y4 y5) = (@pair a0 nat y6 y7)) = ((y4 = y6) /\ (y5 = y7))) -> (forall y4 : a0, forall y5 : prod a0 a1, forall y6 : a0, forall y7 : prod a0 a1, ((@pair a0 (prod a0 a1) y4 y5) = (@pair a0 (prod a0 a1) y6 y7)) = ((y4 = y6) /\ (y5 = y7))) -> (forall y4 : nat, forall y5 : a1, forall y6 : nat, forall y7 : a1, ((@pair nat a1 y4 y5) = (@pair nat a1 y6 y7)) = ((y4 = y6) /\ (y5 = y7))) -> ~ (forall y4 : prod a0 a1, forall y5 : a1, forall y6 : prod a0 a1, forall y7 : a1, ((@pair (prod a0 a1) a1 y4 y5) = (@pair (prod a0 a1) a1 y6 y7)) = ((y4 = y6) /\ (y5 = y7))).
Definition term1278 (a0 : Type') (a1 : Type') (x0 : a1) (x1 : prod a0 a1) (x2 : a1) (x3 : type1413 a0 a1) (x4 : a0) := forall y0 : a0, forall y1 : a0 -> Prop, forall y2 : nat, forall y3 : nat, (~ (@IN a0 x4 y1)) -> (@FINITE a0 y1) -> (y3 = (S (@CARD a0 y1))) -> (@HAS_SIZE a1 (x3 x4) y2) -> (forall y4 : a0, (@IN a0 y4 y1) -> @HAS_SIZE a1 (x3 y4) y2) -> (forall y4 : type1413 a0 a1, forall y5 : nat, (forall y6 : a0, (@IN a0 y6 y1) -> @HAS_SIZE a1 (y4 y6) y5) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y6 : prod a0 a1 => exists y7 : a0, exists y8 : a1, @SETSPEC (prod a0 a1) y6 ((@IN a0 y7 y1) /\ (@IN a1 y8 (y4 y7))) (@pair a0 a1 y7 y8))) (Nat.mul (@CARD a0 y1) y5)) -> (@IN a0 y0 y1) -> (@IN a1 x0 (x3 y0)) -> (x1 = (@pair a0 a1 y0 x0)) -> (x1 = (@pair a0 a1 x4 x2)) -> (@IN a1 x2 (x3 x4)) -> (forall y4 : a0, forall y5 : a1, forall y6 : a0, forall y7 : a1, ((@pair a0 a1 y4 y5) = (@pair a0 a1 y6 y7)) = ((y4 = y6) /\ (y5 = y7))) -> (forall y4 : a0, forall y5 : nat, forall y6 : a0, forall y7 : nat, ((@pair a0 nat y4 y5) = (@pair a0 nat y6 y7)) = ((y4 = y6) /\ (y5 = y7))) -> (forall y4 : a0, forall y5 : prod a0 a1, forall y6 : a0, forall y7 : prod a0 a1, ((@pair a0 (prod a0 a1) y4 y5) = (@pair a0 (prod a0 a1) y6 y7)) = ((y4 = y6) /\ (y5 = y7))) -> (forall y4 : nat, forall y5 : a1, forall y6 : nat, forall y7 : a1, ((@pair nat a1 y4 y5) = (@pair nat a1 y6 y7)) = ((y4 = y6) /\ (y5 = y7))) -> (forall y4 : prod a0 a1, forall y5 : a1, forall y6 : prod a0 a1, forall y7 : a1, ((@pair (prod a0 a1) a1 y4 y5) = (@pair (prod a0 a1) a1 y6 y7)) = ((y4 = y6) /\ (y5 = y7))) -> False.
Definition term1217 (a0 : Type') (a1 : Type') := forall y0 : a0, forall y1 : prod a0 a1, forall y2 : a0, forall y3 : prod a0 a1, ((@pair a0 (prod a0 a1) y0 y1) = (@pair a0 (prod a0 a1) y2 y3)) = ((y0 = y2) /\ (y1 = y3)).
Definition term1216 (a0 : Type') := forall y0 : a0, forall y1 : nat, forall y2 : a0, forall y3 : nat, ((@pair a0 nat y0 y1) = (@pair a0 nat y2 y3)) = ((y0 = y2) /\ (y1 = y3)).
Definition term1880 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a1) := fun y0 : a0 => (forall y1 : a1, ((@pair a0 a1 x0 x1) = (@pair a0 a1 y0 y1)) \/ ((~ (x0 = y0)) \/ (~ (x1 = y1)))) /\ (forall y1 : a1, (~ ((@pair a0 a1 x0 x1) = (@pair a0 a1 y0 y1))) \/ ((x0 = y0) /\ (x1 = y1))).
Definition term840 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a0 -> Prop) (x2 : nat) (x3 : Prop) := (((S (@CARD a0 x1)) = x2) -> (forall y0 : type1413 a0 a1, forall y1 : nat, (forall y2 : a0, (@IN a0 y2 (@INSERT a0 x0 x1)) -> @HAS_SIZE a1 (y0 y2) y1) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y2 : prod a0 a1 => exists y3 : a0, exists y4 : a1, @SETSPEC (prod a0 a1) y2 ((@IN a0 y3 (@INSERT a0 x0 x1)) /\ (@IN a1 y4 (y0 y3))) (@pair a0 a1 y3 y4))) (Nat.mul x2 y1)) = x3) -> (((@CARD a0 (@INSERT a0 x0 x1)) = x2) -> forall y0 : type1413 a0 a1, forall y1 : nat, (forall y2 : a0, (@IN a0 y2 (@INSERT a0 x0 x1)) -> @HAS_SIZE a1 (y0 y2) y1) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y2 : prod a0 a1 => exists y3 : a0, exists y4 : a1, @SETSPEC (prod a0 a1) y2 ((@IN a0 y3 (@INSERT a0 x0 x1)) /\ (@IN a1 y4 (y0 y3))) (@pair a0 a1 y3 y4))) (Nat.mul x2 y1)) = (((S (@CARD a0 x1)) = x2) -> x3).
Definition term2091 (a0 : Type') (x0 : a0 -> Prop) (x1 : type686 a0) (x2 : type686 a0) (x3 : a0 -> Prop) := imp (~ ((~ (x3 = x0)) \/ ((~ (x2 = x1)) \/ (~ (@I ((a0 -> Prop) -> Prop) x2 x3))))).
Definition term1875 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a0) (x2 : a1) := and (forall y0 : a1, ((@pair a0 a1 x0 x2) = (@pair a0 a1 x1 y0)) \/ ((~ (x0 = x1)) \/ (~ (x2 = y0)))).
Definition term1333 (a0 : Type') (x0 : a0) (x1 : nat) := fun y0 : a0 => forall y1 : nat, ((@pair a0 nat x0 x1) = (@pair a0 nat y0 y1)) = ((x0 = y0) /\ (x1 = y1)).
Definition term904 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a0 -> Prop) := ((forall y0 : nat, ((@CARD a0 x1) = y0) -> forall y1 : type1413 a0 a1, forall y2 : nat, (forall y3 : a0, (@IN a0 y3 x1) -> @HAS_SIZE a1 (y1 y3) y2) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y3 : prod a0 a1 => exists y4 : a0, exists y5 : a1, @SETSPEC (prod a0 a1) y3 ((@IN a0 y4 x1) /\ (@IN a1 y5 (y1 y4))) (@pair a0 a1 y4 y5))) (Nat.mul y0 y2)) /\ ((~ (@IN a0 x0 x1)) /\ (@FINITE a0 x1))) -> (forall y0 : nat, ((@CARD a0 (@INSERT a0 x0 x1)) = y0) -> forall y1 : type1413 a0 a1, forall y2 : nat, (forall y3 : a0, (@IN a0 y3 (@INSERT a0 x0 x1)) -> @HAS_SIZE a1 (y1 y3) y2) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y3 : prod a0 a1 => exists y4 : a0, exists y5 : a1, @SETSPEC (prod a0 a1) y3 ((@IN a0 y4 (@INSERT a0 x0 x1)) /\ (@IN a1 y5 (y1 y4))) (@pair a0 a1 y4 y5))) (Nat.mul y0 y2)) = (forall y0 : nat, ((S (@CARD a0 x1)) = y0) -> forall y1 : type1413 a0 a1, forall y2 : nat, (forall y3 : a0, ((y3 = x0) \/ (@IN a0 y3 x1)) -> @HAS_SIZE a1 (y1 y3) y2) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y3 : prod a0 a1 => exists y4 : a0, exists y5 : a1, @SETSPEC (prod a0 a1) y3 (((y4 = x0) \/ (@IN a0 y4 x1)) /\ (@IN a1 y5 (y1 y4))) (@pair a0 a1 y4 y5))) (Nat.mul y0 y2)).
Definition term1991 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a1) (x2 : prod a0 a1) := @eq Prop ((fun y0 : prod a0 a1 => y0 = (@I (a1 -> prod a0 a1) (@I (a0 -> a1 -> prod a0 a1) (@pair a0 a1) x0) x1)) x2).
Definition term1344 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : a0 -> Prop) (x2 : type1413 a0 a1) := @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (x0 x1 x2)).
Definition term916 (a0 : Type') (a1 : Type') (x0 : nat) := @eq Prop ((fun y0 : nat => forall y1 : nat, @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y2 : prod a0 a1 => exists y3 : a0, exists y4 : a1, @SETSPEC (prod a0 a1) y2 False (@pair a0 a1 y3 y4))) (Nat.mul y0 y1)) x0).
Definition term305 (a0 : Type') (a1 : Type') (x0 : a1) (x1 : a0) (x2 : a1 -> Prop) (x3 : prod a1 a0) (x4 : type1470 a0 a1) (x5 : a1) := ((fun y0 : a0 => (((x0 = x5) \/ (x2 x0)) /\ (x4 x0 y0)) /\ (x3 = (@pair a1 a0 x0 y0))) x1) /\ ((forall y0 : a1, forall y1 : a0, ((~ (x2 y0)) \/ (~ (x4 y0 y1))) \/ (~ (x3 = (@pair a1 a0 y0 y1)))) /\ (forall y0 : a0, (~ (x3 = (@pair a1 a0 x5 y0))) \/ (~ (x4 x5 y0)))).
Definition term758 (a0 : Type') (a1 : Type') (x0 : type1413 a0 a1) (x1 : nat) (x2 : nat) (x3 : Prop) := (True -> (@HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y0 : prod a0 a1 => exists y1 : a0, exists y2 : a1, @SETSPEC (prod a0 a1) y0 ((@IN a0 y1 (@EMPTY a0)) /\ (@IN a1 y2 (x0 y1))) (@pair a0 a1 y1 y2))) (Nat.mul x1 x2)) = x3) -> ((forall y0 : a0, (@IN a0 y0 (@EMPTY a0)) -> @HAS_SIZE a1 (x0 y0) x2) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y0 : prod a0 a1 => exists y1 : a0, exists y2 : a1, @SETSPEC (prod a0 a1) y0 ((@IN a0 y1 (@EMPTY a0)) /\ (@IN a1 y2 (x0 y1))) (@pair a0 a1 y1 y2))) (Nat.mul x1 x2)) = (True -> x3).
Definition term1179 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : type1413 a0 a1) (x2 : prod a0 a1) (x3 : a0) (x4 : a1) := (fun y0 : prod a0 a1 => (fun y1 : prod a0 a1 => ((@IN a0 x3 x0) /\ (@IN a1 x4 (x1 x3))) /\ (x2 = y1)) y0) (@pair a0 a1 x3 x4).
Definition term1305 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : a0 -> Prop) (x2 : type1413 a0 a1) := @eq ((prod a0 a1) -> Prop) (x0 x1 x2).
Definition term1120 (a0 : Type') (a1 : Type') (x0 : type1413 a0 a1) (x1 : a0) (x2 : a1) (x3 : a1) (x4 : Prop) (x5 : Prop) := (((@IN a1 x2 (x0 x1)) /\ ((@IN a1 x3 (x0 x1)) /\ (((fun y0 : a1 => @pair a0 a1 x1 y0) x2) = ((fun y0 : a1 => @pair a0 a1 x1 y0) x3)))) = x4) -> (x4 -> (x2 = x3) = x5) -> (((@IN a1 x2 (x0 x1)) /\ ((@IN a1 x3 (x0 x1)) /\ (((fun y0 : a1 => @pair a0 a1 x1 y0) x2) = ((fun y0 : a1 => @pair a0 a1 x1 y0) x3)))) -> x2 = x3) = (x4 -> x5).
Definition term1515 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : a0 -> Prop) := fun y0 : type1413 a0 a1 => (fun y1 : type1413 a0 a1 => forall y2 : prod a0 a1, (~ (x0 x1 y1 y2)) \/ (exists y3 : a0, exists y4 : a1, @SETSPEC (prod a0 a1) y2 ((@IN a0 y3 x1) /\ (@IN a1 y4 (y1 y3))) (@pair a0 a1 y3 y4))) y0.
Definition term1510 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : a0 -> Prop) := fun y0 : type1413 a0 a1 => (fun y1 : type1413 a0 a1 => forall y2 : prod a0 a1, (x0 x1 y1 y2) \/ (forall y3 : a0, forall y4 : a1, ~ (@SETSPEC (prod a0 a1) y2 ((@IN a0 y3 x1) /\ (@IN a1 y4 (y1 y3))) (@pair a0 a1 y3 y4)))) y0.
Definition term666 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : nat) := fun y0 : type1413 a0 a1 => (fun y1 : type1413 a0 a1 => forall y2 : nat, (forall y3 : a0, (@IN a0 y3 x0) -> @HAS_SIZE a1 (y1 y3) y2) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y3 : prod a0 a1 => exists y4 : a0, exists y5 : a1, @SETSPEC (prod a0 a1) y3 ((@IN a0 y4 x0) /\ (@IN a1 y5 (y1 y4))) (@pair a0 a1 y4 y5))) (Nat.mul x1 y2)) y0.
Definition term476 := (~ False) -> False.
Definition term606 (x0 : Prop) (x1 : Prop) (x2 : Prop) := x0 -> x1 -> x2.
Definition term1131 (a0 : Type') (a1 : Type') (x0 : a1) (x1 : type1413 a0 a1) (x2 : a0) := and (@IN a1 x0 (x1 x2)).
Definition term1936 (a0 : Type') (a1 : Type') := @eq Prop (forall y0 : a0, (forall y1 : a1, forall y2 : a0, forall y3 : a1, ((@pair a0 a1 y0 y1) = (@pair a0 a1 y2 y3)) \/ ((~ (y0 = y2)) \/ (~ (y1 = y3)))) /\ (forall y1 : a1, forall y2 : a0, forall y3 : a1, (~ ((@pair a0 a1 y0 y1) = (@pair a0 a1 y2 y3))) \/ ((y0 = y2) /\ (y1 = y3)))).
Definition term1892 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a1) := @eq Prop (forall y0 : a0, (forall y1 : a1, ((@pair a0 a1 x0 x1) = (@pair a0 a1 y0 y1)) \/ ((~ (x0 = y0)) \/ (~ (x1 = y1)))) /\ (forall y1 : a1, (~ ((@pair a0 a1 x0 x1) = (@pair a0 a1 y0 y1))) \/ ((x0 = y0) /\ (x1 = y1)))).
Definition term272 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : prod a1 a0) (x2 : type1470 a0 a1) (x3 : a1) := (forall y0 : a1, forall y1 : a0, (((~ (y0 = x3)) /\ (~ (x0 y0))) \/ (~ (x2 y0 y1))) \/ (~ (x1 = (@pair a1 a0 y0 y1)))) /\ ((exists y0 : a1, exists y1 : a0, ((x0 y0) /\ (x2 y0 y1)) /\ (x1 = (@pair a1 a0 y0 y1))) \/ (exists y0 : a0, (x1 = (@pair a1 a0 x3 y0)) /\ (x2 x3 y0))).
Definition term1356 (a0 : Type') (a1 : Type') (x0 : nat) (x1 : type621 a0 a1) (x2 : a0 -> Prop) (x3 : a0) (x4 : a1) (x5 : prod a0 a1) (x6 : a1) (x7 : type1413 a0 a1) (x8 : a0) := (@HAS_SIZE a1 (x7 x8) x0) -> (forall y0 : a0, (@IN a0 y0 x2) -> @HAS_SIZE a1 (x7 y0) x0) -> (forall y0 : type1413 a0 a1, forall y1 : nat, (forall y2 : a0, (@IN a0 y2 x2) -> @HAS_SIZE a1 (y0 y2) y1) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (x1 x2 y0)) (Nat.mul (@CARD a0 x2) y1)) -> (@IN a0 x3 x2) -> (@IN a1 x4 (x7 x3)) -> (x5 = (@pair a0 a1 x3 x4)) -> (x5 = (@pair a0 a1 x8 x6)) -> (@IN a1 x6 (x7 x8)) -> (forall y0 : a0, forall y1 : a1, forall y2 : a0, forall y3 : a1, ((@pair a0 a1 y0 y1) = (@pair a0 a1 y2 y3)) = ((y0 = y2) /\ (y1 = y3))) -> (forall y0 : a0, forall y1 : nat, forall y2 : a0, forall y3 : nat, ((@pair a0 nat y0 y1) = (@pair a0 nat y2 y3)) = ((y0 = y2) /\ (y1 = y3))) -> (forall y0 : a0, forall y1 : prod a0 a1, forall y2 : a0, forall y3 : prod a0 a1, ((@pair a0 (prod a0 a1) y0 y1) = (@pair a0 (prod a0 a1) y2 y3)) = ((y0 = y2) /\ (y1 = y3))) -> (forall y0 : nat, forall y1 : a1, forall y2 : nat, forall y3 : a1, ((@pair nat a1 y0 y1) = (@pair nat a1 y2 y3)) = ((y0 = y2) /\ (y1 = y3))) -> ~ (forall y0 : prod a0 a1, forall y1 : a1, forall y2 : prod a0 a1, forall y3 : a1, ((@pair (prod a0 a1) a1 y0 y1) = (@pair (prod a0 a1) a1 y2 y3)) = ((y0 = y2) /\ (y1 = y3))).
Definition term1256 (a0 : Type') (a1 : Type') (x0 : nat) (x1 : a0 -> Prop) (x2 : a0) (x3 : a1) (x4 : prod a0 a1) (x5 : a1) (x6 : type1413 a0 a1) (x7 : a0) := (@HAS_SIZE a1 (x6 x7) x0) -> (forall y0 : a0, (@IN a0 y0 x1) -> @HAS_SIZE a1 (x6 y0) x0) -> (forall y0 : type1413 a0 a1, forall y1 : nat, (forall y2 : a0, (@IN a0 y2 x1) -> @HAS_SIZE a1 (y0 y2) y1) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y2 : prod a0 a1 => exists y3 : a0, exists y4 : a1, @SETSPEC (prod a0 a1) y2 ((@IN a0 y3 x1) /\ (@IN a1 y4 (y0 y3))) (@pair a0 a1 y3 y4))) (Nat.mul (@CARD a0 x1) y1)) -> (@IN a0 x2 x1) -> (@IN a1 x3 (x6 x2)) -> (x4 = (@pair a0 a1 x2 x3)) -> (x4 = (@pair a0 a1 x7 x5)) -> (@IN a1 x5 (x6 x7)) -> (forall y0 : a0, forall y1 : a1, forall y2 : a0, forall y3 : a1, ((@pair a0 a1 y0 y1) = (@pair a0 a1 y2 y3)) = ((y0 = y2) /\ (y1 = y3))) -> (forall y0 : a0, forall y1 : nat, forall y2 : a0, forall y3 : nat, ((@pair a0 nat y0 y1) = (@pair a0 nat y2 y3)) = ((y0 = y2) /\ (y1 = y3))) -> (forall y0 : a0, forall y1 : prod a0 a1, forall y2 : a0, forall y3 : prod a0 a1, ((@pair a0 (prod a0 a1) y0 y1) = (@pair a0 (prod a0 a1) y2 y3)) = ((y0 = y2) /\ (y1 = y3))) -> (forall y0 : nat, forall y1 : a1, forall y2 : nat, forall y3 : a1, ((@pair nat a1 y0 y1) = (@pair nat a1 y2 y3)) = ((y0 = y2) /\ (y1 = y3))) -> ~ (forall y0 : prod a0 a1, forall y1 : a1, forall y2 : prod a0 a1, forall y3 : a1, ((@pair (prod a0 a1) a1 y0 y1) = (@pair (prod a0 a1) a1 y2 y3)) = ((y0 = y2) /\ (y1 = y3))).
Definition term1255 (a0 : Type') (a1 : Type') (x0 : nat) (x1 : a0 -> Prop) (x2 : a0) (x3 : a1) (x4 : prod a0 a1) (x5 : a1) (x6 : type1413 a0 a1) (x7 : a0) := (@HAS_SIZE a1 (x6 x7) x0) -> (forall y0 : a0, (@IN a0 y0 x1) -> @HAS_SIZE a1 (x6 y0) x0) -> (forall y0 : type1413 a0 a1, forall y1 : nat, (forall y2 : a0, (@IN a0 y2 x1) -> @HAS_SIZE a1 (y0 y2) y1) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y2 : prod a0 a1 => exists y3 : a0, exists y4 : a1, @SETSPEC (prod a0 a1) y2 ((@IN a0 y3 x1) /\ (@IN a1 y4 (y0 y3))) (@pair a0 a1 y3 y4))) (Nat.mul (@CARD a0 x1) y1)) -> (@IN a0 x2 x1) -> (@IN a1 x3 (x6 x2)) -> (x4 = (@pair a0 a1 x2 x3)) -> (x4 = (@pair a0 a1 x7 x5)) -> (@IN a1 x5 (x6 x7)) -> (forall y0 : a0, forall y1 : a1, forall y2 : a0, forall y3 : a1, ((@pair a0 a1 y0 y1) = (@pair a0 a1 y2 y3)) = ((y0 = y2) /\ (y1 = y3))) -> (forall y0 : a0, forall y1 : nat, forall y2 : a0, forall y3 : nat, ((@pair a0 nat y0 y1) = (@pair a0 nat y2 y3)) = ((y0 = y2) /\ (y1 = y3))) -> (forall y0 : a0, forall y1 : prod a0 a1, forall y2 : a0, forall y3 : prod a0 a1, ((@pair a0 (prod a0 a1) y0 y1) = (@pair a0 (prod a0 a1) y2 y3)) = ((y0 = y2) /\ (y1 = y3))) -> (forall y0 : nat, forall y1 : a1, forall y2 : nat, forall y3 : a1, ((@pair nat a1 y0 y1) = (@pair nat a1 y2 y3)) = ((y0 = y2) /\ (y1 = y3))) -> (forall y0 : prod a0 a1, forall y1 : a1, forall y2 : prod a0 a1, forall y3 : a1, ((@pair (prod a0 a1) a1 y0 y1) = (@pair (prod a0 a1) a1 y2 y3)) = ((y0 = y2) /\ (y1 = y3))) -> False.
Definition term406 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : a1) (x2 : prod a1 a0) (x3 : type1470 a0 a1) (x4 : a1) (x5 : a0) := (fun y0 : a0 => (forall y1 : a1, forall y2 : a0, (((~ (y1 = x4)) /\ (~ (x0 y1))) \/ (~ (x3 y1 y2))) \/ (~ (x2 = (@pair a1 a0 y1 y2)))) /\ ((((x0 x1) /\ (x3 x1 y0)) /\ (x2 = (@pair a1 a0 x1 y0))) \/ ((x2 = (@pair a1 a0 x4 y0)) /\ (x3 x4 y0)))) x5.
Definition term1449 (a0 : Type') (a1 : Type') (x0 : prod a0 a1) (x1 : a0 -> Prop) (x2 : type1413 a0 a1) (x3 : a0) := fun y0 : a1 => ~ (@SETSPEC (prod a0 a1) x0 ((@IN a0 x3 x1) /\ (@IN a1 y0 (x2 x3))) (@pair a0 a1 x3 y0)).
Definition term911 (a0 : Type') (a1 : Type') := (forall y0 : nat, ((NUMERAL 0) = y0) -> forall y1 : nat, @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y2 : prod a0 a1 => exists y3 : a0, exists y4 : a1, @SETSPEC (prod a0 a1) y2 False (@pair a0 a1 y3 y4))) (Nat.mul y0 y1)) /\ (forall y0 : a0, forall y1 : a0 -> Prop, ((forall y2 : nat, ((@CARD a0 y1) = y2) -> forall y3 : type1413 a0 a1, forall y4 : nat, (forall y5 : a0, (@IN a0 y5 y1) -> @HAS_SIZE a1 (y3 y5) y4) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y5 : prod a0 a1 => exists y6 : a0, exists y7 : a1, @SETSPEC (prod a0 a1) y5 ((@IN a0 y6 y1) /\ (@IN a1 y7 (y3 y6))) (@pair a0 a1 y6 y7))) (Nat.mul y2 y4)) /\ ((~ (@IN a0 y0 y1)) /\ (@FINITE a0 y1))) -> forall y2 : nat, ((S (@CARD a0 y1)) = y2) -> forall y3 : type1413 a0 a1, forall y4 : nat, (forall y5 : a0, ((y5 = y0) \/ (@IN a0 y5 y1)) -> @HAS_SIZE a1 (y3 y5) y4) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y5 : prod a0 a1 => exists y6 : a0, exists y7 : a1, @SETSPEC (prod a0 a1) y5 (((y6 = y0) \/ (@IN a0 y6 y1)) /\ (@IN a1 y7 (y3 y6))) (@pair a0 a1 y6 y7))) (Nat.mul y2 y4)).
Definition term714 (a0 : Type') (a1 : Type') := (forall y0 : nat, ((@CARD a0 (@EMPTY a0)) = y0) -> forall y1 : type1413 a0 a1, forall y2 : nat, (forall y3 : a0, (@IN a0 y3 (@EMPTY a0)) -> @HAS_SIZE a1 (y1 y3) y2) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y3 : prod a0 a1 => exists y4 : a0, exists y5 : a1, @SETSPEC (prod a0 a1) y3 ((@IN a0 y4 (@EMPTY a0)) /\ (@IN a1 y5 (y1 y4))) (@pair a0 a1 y4 y5))) (Nat.mul y0 y2)) /\ (forall y0 : a0, forall y1 : a0 -> Prop, ((forall y2 : nat, ((@CARD a0 y1) = y2) -> forall y3 : type1413 a0 a1, forall y4 : nat, (forall y5 : a0, (@IN a0 y5 y1) -> @HAS_SIZE a1 (y3 y5) y4) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y5 : prod a0 a1 => exists y6 : a0, exists y7 : a1, @SETSPEC (prod a0 a1) y5 ((@IN a0 y6 y1) /\ (@IN a1 y7 (y3 y6))) (@pair a0 a1 y6 y7))) (Nat.mul y2 y4)) /\ ((~ (@IN a0 y0 y1)) /\ (@FINITE a0 y1))) -> forall y2 : nat, ((@CARD a0 (@INSERT a0 y0 y1)) = y2) -> forall y3 : type1413 a0 a1, forall y4 : nat, (forall y5 : a0, (@IN a0 y5 (@INSERT a0 y0 y1)) -> @HAS_SIZE a1 (y3 y5) y4) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y5 : prod a0 a1 => exists y6 : a0, exists y7 : a1, @SETSPEC (prod a0 a1) y5 ((@IN a0 y6 (@INSERT a0 y0 y1)) /\ (@IN a1 y7 (y3 y6))) (@pair a0 a1 y6 y7))) (Nat.mul y2 y4)).
Definition term1409 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) := fun y0 : a0 -> Prop => (x0 y0) = (fun y1 : type1413 a0 a1 => fun y2 : prod a0 a1 => exists y3 : a0, exists y4 : a1, @SETSPEC (prod a0 a1) y2 ((@IN a0 y3 y0) /\ (@IN a1 y4 (y1 y3))) (@pair a0 a1 y3 y4)).
Definition term1323 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a0) (x2 : prod a0 a1) := fun y0 : prod a0 a1 => ((@pair a0 (prod a0 a1) x0 x2) = (@pair a0 (prod a0 a1) x1 y0)) = ((x0 = x1) /\ (x2 = y0)).
Definition term2097 (a0 : Type') (x0 : a0) (x1 : a0 -> Prop) := (@I ((a0 -> Prop) -> Prop) (@I (a0 -> (a0 -> Prop) -> Prop) (@IN a0) x0) x1) -> False.
Definition term1125 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a1) := @eq (prod a0 a1) ((fun y0 : a1 => (fun y1 : a1 => @pair a0 a1 x0 y1) y0) x1).
Definition term1480 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : a0 -> Prop) (x2 : type1413 a0 a1) (x3 : prod a0 a1) := and ((fun y0 : prod a0 a1 => (x0 x1 x2 y0) \/ (forall y1 : a0, forall y2 : a1, ~ (@SETSPEC (prod a0 a1) y0 ((@IN a0 y1 x1) /\ (@IN a1 y2 (x2 y1))) (@pair a0 a1 y1 y2)))) x3).
Definition term2012 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a1) (x2 : a0) (x3 : a1) := @eq Prop ((x0 = x2) \/ (~ ((@I (a1 -> prod a0 a1) (@I (a0 -> a1 -> prod a0 a1) (@pair a0 a1) x0) x1) = (@I (a1 -> prod a0 a1) (@I (a0 -> a1 -> prod a0 a1) (@pair a0 a1) x2) x3)))).
Definition term759 (a0 : Type') (x0 : a0) := and (@IN a0 x0 (@EMPTY a0)).
Definition term1848 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a0) (x2 : a1) (x3 : a1) := and (((@pair a0 a1 x0 x2) = (@pair a0 a1 x1 x3)) \/ (~ ((x0 = x1) /\ (x2 = x3)))).
Definition term497 (a0 : Type') (a1 : Type') (x0 : type1470 a0 a1) (x1 : a1) (x2 : a0) := ((x1 = x1) /\ ((x0 x1 x2) /\ ((@pair a1 a0 x1 x2) = (@pair a1 a0 x1 x2)))) -> False.
Definition term494 (a0 : Type') (a1 : Type') (x0 : type1470 a0 a1) (x1 : a1) (x2 : a0) (x3 : a1) (x4 : a0) := ((x3 = x1) /\ ((x0 x3 x4) /\ ((@pair a1 a0 x1 x2) = (@pair a1 a0 x3 x4)))) -> False.
Definition term1154 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : type1413 a0 a1) (x2 : a0) := forall y0 : prod a0 a1, (@IN (prod a0 a1) y0 (@INTER (prod a0 a1) (@GSPEC (prod a0 a1) (fun y1 : prod a0 a1 => exists y2 : a0, exists y3 : a1, @SETSPEC (prod a0 a1) y1 ((@IN a0 y2 x0) /\ (@IN a1 y3 (x1 y2))) (@pair a0 a1 y2 y3))) (@IMAGE a1 (prod a0 a1) (fun y1 : a1 => @pair a0 a1 x2 y1) (x1 x2)))) = (@IN (prod a0 a1) y0 (@EMPTY (prod a0 a1))).
Definition term926 (a0 : Type') (a1 : Type') := forall y0 : prod a0 a1, (@IN (prod a0 a1) y0 (@GSPEC (prod a0 a1) (fun y1 : prod a0 a1 => exists y2 : a0, exists y3 : a1, @SETSPEC (prod a0 a1) y1 False (@pair a0 a1 y2 y3)))) = (@IN (prod a0 a1) y0 (@EMPTY (prod a0 a1))).
Definition term720 (a0 : Type') (a1 : Type') := ((forall y0 : nat, ((@CARD a0 (@EMPTY a0)) = y0) -> forall y1 : type1413 a0 a1, forall y2 : nat, (forall y3 : a0, (@IN a0 y3 (@EMPTY a0)) -> @HAS_SIZE a1 (y1 y3) y2) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y3 : prod a0 a1 => exists y4 : a0, exists y5 : a1, @SETSPEC (prod a0 a1) y3 ((@IN a0 y4 (@EMPTY a0)) /\ (@IN a1 y5 (y1 y4))) (@pair a0 a1 y4 y5))) (Nat.mul y0 y2)) /\ (forall y0 : a0, forall y1 : a0 -> Prop, ((forall y2 : nat, ((@CARD a0 y1) = y2) -> forall y3 : type1413 a0 a1, forall y4 : nat, (forall y5 : a0, (@IN a0 y5 y1) -> @HAS_SIZE a1 (y3 y5) y4) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y5 : prod a0 a1 => exists y6 : a0, exists y7 : a1, @SETSPEC (prod a0 a1) y5 ((@IN a0 y6 y1) /\ (@IN a1 y7 (y3 y6))) (@pair a0 a1 y6 y7))) (Nat.mul y2 y4)) /\ ((~ (@IN a0 y0 y1)) /\ (@FINITE a0 y1))) -> forall y2 : nat, ((@CARD a0 (@INSERT a0 y0 y1)) = y2) -> forall y3 : type1413 a0 a1, forall y4 : nat, (forall y5 : a0, (@IN a0 y5 (@INSERT a0 y0 y1)) -> @HAS_SIZE a1 (y3 y5) y4) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y5 : prod a0 a1 => exists y6 : a0, exists y7 : a1, @SETSPEC (prod a0 a1) y5 ((@IN a0 y6 (@INSERT a0 y0 y1)) /\ (@IN a1 y7 (y3 y6))) (@pair a0 a1 y6 y7))) (Nat.mul y2 y4))) -> forall y0 : a0 -> Prop, (@FINITE a0 y0) -> forall y1 : nat, ((@CARD a0 y0) = y1) -> forall y2 : type1413 a0 a1, forall y3 : nat, (forall y4 : a0, (@IN a0 y4 y0) -> @HAS_SIZE a1 (y2 y4) y3) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y4 : prod a0 a1 => exists y5 : a0, exists y6 : a1, @SETSPEC (prod a0 a1) y4 ((@IN a0 y5 y0) /\ (@IN a1 y6 (y2 y5))) (@pair a0 a1 y5 y6))) (Nat.mul y1 y3).
Definition term110 (a0 : Type') (x0 : a0 -> Prop) (x1 : a0) (x2 : a0 -> Prop) := (@IN a0 x1 x0) \/ (@IN a0 x1 x2).
Definition term746 (a0 : Type') (a1 : Type') (x0 : type1413 a0 a1) (x1 : a0) (x2 : nat) (x3 : Prop) (x4 : Prop) := ((@IN a0 x1 (@EMPTY a0)) = x3) -> (x3 -> (@HAS_SIZE a1 (x0 x1) x2) = x4) -> ((@IN a0 x1 (@EMPTY a0)) -> @HAS_SIZE a1 (x0 x1) x2) = (x3 -> x4).
Definition term1502 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : a0 -> Prop) := fun y0 : type1413 a0 a1 => forall y1 : prod a0 a1, (~ (x0 x1 y0 y1)) \/ (exists y2 : a0, exists y3 : a1, @SETSPEC (prod a0 a1) y1 ((@IN a0 y2 x1) /\ (@IN a1 y3 (y0 y2))) (@pair a0 a1 y2 y3)).
Definition term1501 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : a0 -> Prop) := fun y0 : type1413 a0 a1 => forall y1 : prod a0 a1, (x0 x1 y0 y1) \/ (forall y2 : a0, forall y3 : a1, ~ (@SETSPEC (prod a0 a1) y1 ((@IN a0 y2 x1) /\ (@IN a1 y3 (y0 y2))) (@pair a0 a1 y2 y3))).
Definition term1431 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : a0 -> Prop) := fun y0 : type1413 a0 a1 => forall y1 : prod a0 a1, (x0 x1 y0 y1) = (exists y2 : a0, exists y3 : a1, @SETSPEC (prod a0 a1) y1 ((@IN a0 y2 x1) /\ (@IN a1 y3 (y0 y2))) (@pair a0 a1 y2 y3)).
Definition term2004 (a0 : Type') (x0 : type1364 a0) (x1 : a0) (x2 : type1364 a0) (x3 : a0) := (x1 = x3) -> (~ (x0 = x2)) \/ ((@I (a0 -> (a0 -> Prop) -> Prop) x0 x1) = (@I (a0 -> (a0 -> Prop) -> Prop) x2 x3)).
Definition term274 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : prod a1 a0) (x2 : type1470 a0 a1) (x3 : a1) := (exists y0 : a1, exists y1 : a0, (((y0 = x3) \/ (x0 y0)) /\ (x2 y0 y1)) /\ (x1 = (@pair a1 a0 y0 y1))) /\ (~ ((exists y0 : a1, exists y1 : a0, ((x0 y0) /\ (x2 y0 y1)) /\ (x1 = (@pair a1 a0 y0 y1))) \/ (exists y0 : a0, (x1 = (@pair a1 a0 x3 y0)) /\ (x2 x3 y0)))).
Definition term629 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : type1413 a0 a1) (x2 : nat) := ((@CARD a0 x0) = x2) -> forall y0 : nat, (fun y1 : nat => (forall y2 : a0, (@IN a0 y2 x0) -> @HAS_SIZE a1 (x1 y2) y1) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y2 : prod a0 a1 => exists y3 : a0, exists y4 : a1, @SETSPEC (prod a0 a1) y2 ((@IN a0 y3 x0) /\ (@IN a1 y4 (x1 y3))) (@pair a0 a1 y3 y4))) (Nat.mul x2 y1)) y0.
Definition term552 (a0 : Type') (x0 : a0) (x1 : a0) := (fun y0 : a0 => forall y1 : a0 -> Prop, (@IN a0 x0 (@INSERT a0 y0 y1)) = ((x0 = y0) \/ (@IN a0 x0 y1))) x1.
Definition term480 (a0 : Type') (x0 : a0 -> Prop) (x1 : a0) := or (~ (x0 x1)).
Definition term297 (a0 : Type') (a1 : Type') (x0 : a1) (x1 : a1 -> Prop) (x2 : prod a1 a0) (x3 : type1470 a0 a1) (x4 : a1) := exists y0 : a0, ((fun y1 : a0 => (((x0 = x4) \/ (x1 x0)) /\ (x3 x0 y1)) /\ (x2 = (@pair a1 a0 x0 y1))) y0) /\ ((forall y1 : a1, forall y2 : a0, ((~ (x1 y1)) \/ (~ (x3 y1 y2))) \/ (~ (x2 = (@pair a1 a0 y1 y2)))) /\ (forall y1 : a0, (~ (x2 = (@pair a1 a0 x4 y1))) \/ (~ (x3 x4 y1)))).
Definition term1110 (a0 : Type') (a1 : Type') (x0 : type1413 a0 a1) (x1 : a0 -> Prop) (x2 : nat) := and (@HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y0 : prod a0 a1 => exists y1 : a0, exists y2 : a1, @SETSPEC (prod a0 a1) y0 ((@IN a0 y1 x1) /\ (@IN a1 y2 (x0 y1))) (@pair a0 a1 y1 y2))) (Nat.mul (@CARD a0 x1) x2)).
Definition term1708 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : type619 a0 a1) (x2 : a0 -> Prop) (x3 : type465 a0 a1) := (fun y0 : a0 -> Prop => fun y1 : type465 a0 a1 => forall y2 : type1413 a0 a1, forall y3 : prod a0 a1, (~ (x0 y0 y2 y3)) \/ (@SETSPEC (prod a0 a1) y3 ((@IN a0 (x1 y0 y2 y3) y0) /\ (@IN a1 (y1 y2 y3) (y2 (x1 y0 y2 y3)))) (@pair a0 a1 (x1 y0 y2 y3) (y1 y2 y3)))) x2 x3.
Definition term1996 (a0 : Type') (x0 : type686 a0) (x1 : a0 -> Prop) (x2 : type686 a0) (x3 : a0 -> Prop) := (@I ((a0 -> Prop) -> Prop) x0 x1) \/ (~ (@I ((a0 -> Prop) -> Prop) x2 x3)).
Definition term1228 (a0 : Type') (a1 : Type') := (forall y0 : a0, forall y1 : prod a0 a1, forall y2 : a0, forall y3 : prod a0 a1, ((@pair a0 (prod a0 a1) y0 y1) = (@pair a0 (prod a0 a1) y2 y3)) = ((y0 = y2) /\ (y1 = y3))) -> (forall y0 : nat, forall y1 : a1, forall y2 : nat, forall y3 : a1, ((@pair nat a1 y0 y1) = (@pair nat a1 y2 y3)) = ((y0 = y2) /\ (y1 = y3))) -> (forall y0 : prod a0 a1, forall y1 : a1, forall y2 : prod a0 a1, forall y3 : a1, ((@pair (prod a0 a1) a1 y0 y1) = (@pair (prod a0 a1) a1 y2 y3)) = ((y0 = y2) /\ (y1 = y3))) -> False.
Definition term11 (a0 : Type') (x0 : a0 -> Prop) (x1 : a0 -> Prop) (x2 : a0) := (fun y0 : a0 => (@IN a0 y0 (@INTER a0 x0 x1)) = ((@IN a0 y0 x0) /\ (@IN a0 y0 x1))) x2.
Definition term619 (a0 : Type') (x0 : a0 -> Prop) := imp (@FINITE a0 x0).
Definition term370 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : a1) (x2 : prod a1 a0) (x3 : type1470 a0 a1) (x4 : a1) := fun y0 : a0 => (fun y1 : a0 => (((x0 x1) /\ (x3 x1 y1)) /\ (x2 = (@pair a1 a0 x1 y1))) \/ ((x2 = (@pair a1 a0 x4 y1)) /\ (x3 x4 y1))) y0.
Definition term1997 (a0 : Type') (x0 : type686 a0) (x1 : a0 -> Prop) (x2 : type686 a0) (x3 : a0 -> Prop) := (x2 = x0) -> (@I ((a0 -> Prop) -> Prop) x0 x1) \/ (~ (@I ((a0 -> Prop) -> Prop) x2 x3)).
Definition term1454 (a0 : Type') (a1 : Type') (x0 : prod a0 a1) (x1 : a0 -> Prop) (x2 : type1413 a0 a1) (x3 : a0) := ~ ((fun y0 : a0 => exists y1 : a1, @SETSPEC (prod a0 a1) x0 ((@IN a0 y0 x1) /\ (@IN a1 y1 (x2 y0))) (@pair a0 a1 y0 y1)) x3).
Definition term307 (a0 : Type') (a1 : Type') (x0 : a1) (x1 : a1 -> Prop) (x2 : prod a1 a0) (x3 : type1470 a0 a1) (x4 : a1) := fun y0 : a0 => ((fun y1 : a0 => (((x0 = x4) \/ (x1 x0)) /\ (x3 x0 y1)) /\ (x2 = (@pair a1 a0 x0 y1))) y0) /\ ((forall y1 : a1, forall y2 : a0, ((~ (x1 y1)) \/ (~ (x3 y1 y2))) \/ (~ (x2 = (@pair a1 a0 y1 y2)))) /\ (forall y1 : a0, (~ (x2 = (@pair a1 a0 x4 y1))) \/ (~ (x3 x4 y1)))).
Definition term1138 (a0 : Type') (a1 : Type') (x0 : type1413 a0 a1) (x1 : a0) (x2 : a1) (x3 : a1) := (((@IN a1 x2 (x0 x1)) /\ ((@IN a1 x3 (x0 x1)) /\ (x2 = x3))) -> (x2 = x3) = True) -> (((@IN a1 x2 (x0 x1)) /\ ((@IN a1 x3 (x0 x1)) /\ (((fun y0 : a1 => @pair a0 a1 x1 y0) x2) = ((fun y0 : a1 => @pair a0 a1 x1 y0) x3)))) -> x2 = x3) = (((@IN a1 x2 (x0 x1)) /\ ((@IN a1 x3 (x0 x1)) /\ (x2 = x3))) -> True).
Definition term1758 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) := exists y0 : type619 a0 a1, exists y1 : type620 a0 a1, (forall y2 : a0 -> Prop, forall y3 : type1413 a0 a1, forall y4 : prod a0 a1, (x0 y2 y3 y4) \/ (forall y5 : a0, forall y6 : a1, ~ (@SETSPEC (prod a0 a1) y4 ((@IN a0 y5 y2) /\ (@IN a1 y6 (y3 y5))) (@pair a0 a1 y5 y6)))) /\ (forall y2 : a0 -> Prop, forall y3 : type1413 a0 a1, forall y4 : prod a0 a1, (~ (x0 y2 y3 y4)) \/ (@SETSPEC (prod a0 a1) y4 ((@IN a0 (y0 y2 y3 y4) y2) /\ (@IN a1 (y1 y2 y3 y4) (y3 (y0 y2 y3 y4)))) (@pair a0 a1 (y0 y2 y3 y4) (y1 y2 y3 y4)))).
Definition term782 (a0 : Type') (a1 : Type') (x0 : type1413 a0 a1) (x1 : nat) (x2 : nat) := (True -> (@HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y0 : prod a0 a1 => exists y1 : a0, exists y2 : a1, @SETSPEC (prod a0 a1) y0 ((@IN a0 y1 (@EMPTY a0)) /\ (@IN a1 y2 (x0 y1))) (@pair a0 a1 y1 y2))) (Nat.mul x1 x2)) = (@HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y0 : prod a0 a1 => exists y1 : a0, exists y2 : a1, @SETSPEC (prod a0 a1) y0 False (@pair a0 a1 y1 y2))) (Nat.mul x1 x2))) -> ((forall y0 : a0, (@IN a0 y0 (@EMPTY a0)) -> @HAS_SIZE a1 (x0 y0) x2) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y0 : prod a0 a1 => exists y1 : a0, exists y2 : a1, @SETSPEC (prod a0 a1) y0 ((@IN a0 y1 (@EMPTY a0)) /\ (@IN a1 y2 (x0 y1))) (@pair a0 a1 y1 y2))) (Nat.mul x1 x2)) = (True -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y0 : prod a0 a1 => exists y1 : a0, exists y2 : a1, @SETSPEC (prod a0 a1) y0 False (@pair a0 a1 y1 y2))) (Nat.mul x1 x2)).
Definition term731 := @eq nat (NUMERAL 0).
Definition term1243 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a1) (x2 : prod a0 a1) (x3 : a1) (x4 : type1413 a0 a1) (x5 : a0) := (x2 = (@pair a0 a1 x0 x1)) -> (x2 = (@pair a0 a1 x5 x3)) -> (@IN a1 x3 (x4 x5)) -> (forall y0 : a0, forall y1 : a1, forall y2 : a0, forall y3 : a1, ((@pair a0 a1 y0 y1) = (@pair a0 a1 y2 y3)) = ((y0 = y2) /\ (y1 = y3))) -> (forall y0 : a0, forall y1 : nat, forall y2 : a0, forall y3 : nat, ((@pair a0 nat y0 y1) = (@pair a0 nat y2 y3)) = ((y0 = y2) /\ (y1 = y3))) -> (forall y0 : a0, forall y1 : prod a0 a1, forall y2 : a0, forall y3 : prod a0 a1, ((@pair a0 (prod a0 a1) y0 y1) = (@pair a0 (prod a0 a1) y2 y3)) = ((y0 = y2) /\ (y1 = y3))) -> (forall y0 : nat, forall y1 : a1, forall y2 : nat, forall y3 : a1, ((@pair nat a1 y0 y1) = (@pair nat a1 y2 y3)) = ((y0 = y2) /\ (y1 = y3))) -> ~ (forall y0 : prod a0 a1, forall y1 : a1, forall y2 : prod a0 a1, forall y3 : a1, ((@pair (prod a0 a1) a1 y0 y1) = (@pair (prod a0 a1) a1 y2 y3)) = ((y0 = y2) /\ (y1 = y3))).
Definition term1242 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a1) (x2 : prod a0 a1) (x3 : a1) (x4 : type1413 a0 a1) (x5 : a0) := (x2 = (@pair a0 a1 x0 x1)) -> (x2 = (@pair a0 a1 x5 x3)) -> (@IN a1 x3 (x4 x5)) -> (forall y0 : a0, forall y1 : a1, forall y2 : a0, forall y3 : a1, ((@pair a0 a1 y0 y1) = (@pair a0 a1 y2 y3)) = ((y0 = y2) /\ (y1 = y3))) -> (forall y0 : a0, forall y1 : nat, forall y2 : a0, forall y3 : nat, ((@pair a0 nat y0 y1) = (@pair a0 nat y2 y3)) = ((y0 = y2) /\ (y1 = y3))) -> (forall y0 : a0, forall y1 : prod a0 a1, forall y2 : a0, forall y3 : prod a0 a1, ((@pair a0 (prod a0 a1) y0 y1) = (@pair a0 (prod a0 a1) y2 y3)) = ((y0 = y2) /\ (y1 = y3))) -> (forall y0 : nat, forall y1 : a1, forall y2 : nat, forall y3 : a1, ((@pair nat a1 y0 y1) = (@pair nat a1 y2 y3)) = ((y0 = y2) /\ (y1 = y3))) -> (forall y0 : prod a0 a1, forall y1 : a1, forall y2 : prod a0 a1, forall y3 : a1, ((@pair (prod a0 a1) a1 y0 y1) = (@pair (prod a0 a1) a1 y2 y3)) = ((y0 = y2) /\ (y1 = y3))) -> False.
Definition term1194 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : type1413 a0 a1) (x2 : prod a0 a1) := and (exists y0 : a0, exists y1 : a1, ((@IN a0 y0 x0) /\ (@IN a1 y1 (x1 y0))) /\ (x2 = (@pair a0 a1 y0 y1))).
Definition term1985 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a1) := (fun y0 : a1 => forall y1 : a0, forall y2 : a1, ((~ ((@I (a1 -> prod a0 a1) (@I (a0 -> a1 -> prod a0 a1) (@pair a0 a1) x0) y0) = (@I (a1 -> prod a0 a1) (@I (a0 -> a1 -> prod a0 a1) (@pair a0 a1) y1) y2))) \/ (x0 = y1)) /\ ((~ ((@I (a1 -> prod a0 a1) (@I (a0 -> a1 -> prod a0 a1) (@pair a0 a1) x0) y0) = (@I (a1 -> prod a0 a1) (@I (a0 -> a1 -> prod a0 a1) (@pair a0 a1) y1) y2))) \/ (y0 = y2))) x1.
Definition term1910 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a1) := (fun y0 : a1 => forall y1 : a0, forall y2 : a1, (~ ((@pair a0 a1 x0 y0) = (@pair a0 a1 y1 y2))) \/ ((x0 = y1) /\ (y0 = y2))) x1.
Definition term1908 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a1) := (fun y0 : a1 => forall y1 : a0, forall y2 : a1, ((@pair a0 a1 x0 y0) = (@pair a0 a1 y1 y2)) \/ ((~ (x0 = y1)) \/ (~ (y0 = y2)))) x1.
Definition term1080 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a1) := (fun y0 : a1 => forall y1 : a0, forall y2 : a1, ((@pair a0 a1 x0 y0) = (@pair a0 a1 y1 y2)) = ((x0 = y1) /\ (y0 = y2))) x1.
Definition term826 (a0 : Type') (x0 : a0) (x1 : a0 -> Prop) (x2 : Prop) (x3 : nat) := forall y0 : nat, ((@IN a0 x0 x1) = x2) -> (x2 -> (@CARD a0 x1) = x3) -> ((~ x2) -> (S (@CARD a0 x1)) = y0) -> (@COND nat (@IN a0 x0 x1) (@CARD a0 x1) (S (@CARD a0 x1))) = (@COND nat x2 x3 y0).
Definition term626 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : type1413 a0 a1) (x2 : nat) := forall y0 : nat, ((@CARD a0 x0) = x2) -> (forall y1 : a0, (@IN a0 y1 x0) -> @HAS_SIZE a1 (x1 y1) y0) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y1 : prod a0 a1 => exists y2 : a0, exists y3 : a1, @SETSPEC (prod a0 a1) y1 ((@IN a0 y2 x0) /\ (@IN a1 y3 (x1 y2))) (@pair a0 a1 y2 y3))) (Nat.mul x2 y0).
Definition term939 (a0 : Type') (a1 : Type') (x0 : type1532 a0 a1) (x1 : Prop) := (fun y0 : Prop => x0 y0) x1.
Definition term69 (a0 : Type') (a1 : Type') (x0 : type1534 a0 a1) (x1 : Prop) := (fun y0 : Prop => x0 y0) x1.
Definition term1050 := (forall y0 : nat, (Nat.mul (NUMERAL (BIT1 0)) y0) = y0) /\ ((forall y0 : nat, (Nat.mul y0 (NUMERAL (BIT1 0))) = y0) /\ ((forall y0 : nat, forall y1 : nat, (Nat.mul (S y0) y1) = (Nat.add (Nat.mul y0 y1) y1)) /\ (forall y0 : nat, forall y1 : nat, (Nat.mul y0 (S y1)) = (Nat.add y0 (Nat.mul y0 y1))))).
Definition term348 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : a1) (x2 : prod a1 a0) (x3 : type1470 a0 a1) (x4 : a1) := @eq Prop ((fun y0 : Prop => y0 = (exists y1 : a0, (((x0 x1) /\ (x3 x1 y1)) /\ (x2 = (@pair a1 a0 x1 y1))) \/ ((x2 = (@pair a1 a0 x4 y1)) /\ (x3 x4 y1)))) ((exists y0 : a0, ((x0 x1) /\ (x3 x1 y0)) /\ (x2 = (@pair a1 a0 x1 y0))) \/ (exists y0 : a0, (x2 = (@pair a1 a0 x4 y0)) /\ (x3 x4 y0)))).
Definition term674 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) := (@FINITE a0 x0) -> forall y0 : nat, (fun y1 : nat => ((@CARD a0 x0) = y1) -> forall y2 : type1413 a0 a1, forall y3 : nat, (forall y4 : a0, (@IN a0 y4 x0) -> @HAS_SIZE a1 (y2 y4) y3) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y4 : prod a0 a1 => exists y5 : a0, exists y6 : a1, @SETSPEC (prod a0 a1) y4 ((@IN a0 y5 x0) /\ (@IN a1 y6 (y2 y5))) (@pair a0 a1 y5 y6))) (Nat.mul y1 y3)) y0.
Definition term615 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : type1413 a0 a1) (x2 : nat) := (@FINITE a0 x0) -> forall y0 : nat, (fun y1 : nat => ((@CARD a0 x0) = x2) -> (forall y2 : a0, (@IN a0 y2 x0) -> @HAS_SIZE a1 (x1 y2) y1) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y2 : prod a0 a1 => exists y3 : a0, exists y4 : a1, @SETSPEC (prod a0 a1) y2 ((@IN a0 y3 x0) /\ (@IN a1 y4 (x1 y3))) (@pair a0 a1 y3 y4))) (Nat.mul x2 y1)) y0.
Definition term547 := forall y0 : nat, (Nat.mul (NUMERAL 0) y0) = (NUMERAL 0).
Definition term1864 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a0) (x2 : a1) (x3 : a1) := (fun y0 : a1 => ((@pair a0 a1 x0 x2) = (@pair a0 a1 x1 y0)) \/ ((~ (x0 = x1)) \/ (~ (x2 = y0)))) x3.
Definition term451 (a0 : Type') (a1 : Type') (x0 : type1470 a0 a1) (x1 : a1) (x2 : a0) (x3 : prod a1 a0) := @eq Prop ((fun y0 : prod a1 a0 => (~ (y0 = (@pair a1 a0 x1 x2))) \/ (~ (x0 x1 x2))) x3).
Definition term923 (a0 : Type') (a1 : Type') := forall y0 : nat, (@GSPEC (prod a0 a1) (fun y1 : prod a0 a1 => exists y2 : a0, exists y3 : a1, @SETSPEC (prod a0 a1) y1 False (@pair a0 a1 y2 y3))) = (@EMPTY (prod a0 a1)).
Definition term415 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : a1) (x2 : prod a1 a0) (x3 : type1470 a0 a1) (x4 : a1) := fun y0 : a0 => ((fun y1 : a0 => ((((x1 = x4) \/ (x0 x1)) /\ (x3 x1 y1)) /\ (x2 = (@pair a1 a0 x1 y1))) /\ ((forall y2 : a1, forall y3 : a0, ((~ (x0 y2)) \/ (~ (x3 y2 y3))) \/ (~ (x2 = (@pair a1 a0 y2 y3)))) /\ (forall y2 : a0, (~ (x2 = (@pair a1 a0 x4 y2))) \/ (~ (x3 x4 y2))))) y0) \/ ((fun y1 : a0 => (forall y2 : a1, forall y3 : a0, (((~ (y2 = x4)) /\ (~ (x0 y2))) \/ (~ (x3 y2 y3))) \/ (~ (x2 = (@pair a1 a0 y2 y3)))) /\ ((((x0 x1) /\ (x3 x1 y1)) /\ (x2 = (@pair a1 a0 x1 y1))) \/ ((x2 = (@pair a1 a0 x4 y1)) /\ (x3 x4 y1)))) y0).
Definition term344 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : a1) (x2 : prod a1 a0) (x3 : type1470 a0 a1) (x4 : a1) := fun y0 : a0 => ((fun y1 : a0 => ((x0 x1) /\ (x3 x1 y1)) /\ (x2 = (@pair a1 a0 x1 y1))) y0) \/ ((fun y1 : a0 => (x2 = (@pair a1 a0 x4 y1)) /\ (x3 x4 y1)) y0).
Definition term542 (x0 : Prop) (x1 : Prop) := @eq Prop (x0 -> x1).
Definition term189 (x0 : Prop) := ~ (~ x0).
Definition term1229 (a0 : Type') (a1 : Type') := (forall y0 : a0, forall y1 : prod a0 a1, forall y2 : a0, forall y3 : prod a0 a1, ((@pair a0 (prod a0 a1) y0 y1) = (@pair a0 (prod a0 a1) y2 y3)) = ((y0 = y2) /\ (y1 = y3))) -> (forall y0 : nat, forall y1 : a1, forall y2 : nat, forall y3 : a1, ((@pair nat a1 y0 y1) = (@pair nat a1 y2 y3)) = ((y0 = y2) /\ (y1 = y3))) -> ~ (forall y0 : prod a0 a1, forall y1 : a1, forall y2 : prod a0 a1, forall y3 : a1, ((@pair (prod a0 a1) a1 y0 y1) = (@pair (prod a0 a1) a1 y2 y3)) = ((y0 = y2) /\ (y1 = y3))).
Definition term837 (a0 : Type') (x0 : a0) (x1 : a0 -> Prop) := @eq nat (@CARD a0 (@INSERT a0 x0 x1)).
Definition term23 (a0 : Type') (a1 : Type') (x0 : a1) (x1 : a0 -> Prop) := forall y0 : a0 -> a1, (@IN a1 x0 (@IMAGE a0 a1 y0 x1)) = (exists y1 : a0, (x0 = (y0 y1)) /\ (@IN a0 y1 x1)).
Definition term526 (x0 : Prop) (x1 : Prop) := (False -> x1) /\ (x0 -> x1).
Definition term1348 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : type1413 a0 a1) (x2 : a0 -> Prop) := fun y0 : nat => (forall y1 : a0, (@IN a0 y1 x2) -> @HAS_SIZE a1 (x1 y1) y0) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (x0 x2 x1)) (Nat.mul (@CARD a0 x2) y0).
Definition term1201 (a0 : Type') (a1 : Type') (x0 : prod a0 a1) (x1 : a1) (x2 : type1413 a0 a1) (x3 : a0) := (x0 = ((fun y0 : a1 => @pair a0 a1 x3 y0) x1)) /\ (@IN a1 x1 (x2 x3)).
Definition term173 (a0 : Type') (a1 : Type') (x0 : prod a1 a0) (x1 : a0) (x2 : type1470 a0 a1) (x3 : a1) := (x0 = ((fun y0 : a0 => @pair a1 a0 x3 y0) x1)) /\ (@IN a0 x1 (x2 x3)).
Definition term1123 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a1) := (fun y0 : a1 => @pair a0 a1 x0 y0) x1.
Definition term988 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : type1413 a0 a1) (x2 : nat) (x3 : a0) := (fun y0 : a0 => (@IN a0 y0 x0) -> @HAS_SIZE a1 (x1 y0) x2) x3.
Definition term414 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : a1) (x2 : prod a1 a0) (x3 : type1470 a0 a1) (x4 : a1) (x5 : a0) := (((((x1 = x4) \/ (x0 x1)) /\ (x3 x1 x5)) /\ (x2 = (@pair a1 a0 x1 x5))) /\ ((forall y0 : a1, forall y1 : a0, ((~ (x0 y0)) \/ (~ (x3 y0 y1))) \/ (~ (x2 = (@pair a1 a0 y0 y1)))) /\ (forall y0 : a0, (~ (x2 = (@pair a1 a0 x4 y0))) \/ (~ (x3 x4 y0))))) \/ ((forall y0 : a1, forall y1 : a0, (((~ (y0 = x4)) /\ (~ (x0 y0))) \/ (~ (x3 y0 y1))) \/ (~ (x2 = (@pair a1 a0 y0 y1)))) /\ ((((x0 x1) /\ (x3 x1 x5)) /\ (x2 = (@pair a1 a0 x1 x5))) \/ ((x2 = (@pair a1 a0 x4 x5)) /\ (x3 x4 x5)))).
Definition term1616 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : a0 -> Prop) (x2 : type1413 a0 a1) (x3 : type1207 a0 a1) (x4 : type1208 a0 a1) := fun y0 : prod a0 a1 => (~ (x0 x1 x2 y0)) \/ (@SETSPEC (prod a0 a1) y0 ((@IN a0 (x3 y0) x1) /\ (@IN a1 (x4 y0) (x2 (x3 y0)))) (@pair a0 a1 (x3 y0) (x4 y0))).
Definition term1178 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : type1413 a0 a1) (x2 : prod a0 a1) (x3 : a0) (x4 : a1) := (fun y0 : prod a0 a1 => ((@IN a0 x3 x0) /\ (@IN a1 x4 (x1 x3))) /\ (x2 = y0)) (@pair a0 a1 x3 x4).
Definition term584 (a0 : Type') (a1 : Type') (x0 : nat) (x1 : a0 -> Prop) (x2 : type1413 a0 a1) (x3 : nat) := imp ((@HAS_SIZE a0 x1 x0) /\ (forall y0 : a0, (@IN a0 y0 x1) -> @HAS_SIZE a1 (x2 y0) x3)).
Definition term830 (a0 : Type') (x0 : a0) (x1 : a0 -> Prop) (x2 : nat) (x3 : nat) := (False -> (@CARD a0 x1) = x2) -> ((~ False) -> (S (@CARD a0 x1)) = x3) -> (@COND nat (@IN a0 x0 x1) (@CARD a0 x1) (S (@CARD a0 x1))) = (@COND nat False x2 x3).
Definition term333 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : type1470 a0 a1) (x2 : prod a1 a0) (x3 : a1) := fun y0 : a0 => (fun y1 : a0 => ((x0 x3) /\ (x1 x3 y1)) /\ (x2 = (@pair a1 a0 x3 y1))) y0.
Definition term1106 (a0 : Type') (a1 : Type') (x0 : type1413 a0 a1) (x1 : nat) (x2 : a0) (x3 : a0 -> Prop) (x4 : Prop) := ((@IN a0 x2 x3) -> (@HAS_SIZE a1 (x0 x2) x1) = x4) -> ((@IN a0 x2 x3) -> @HAS_SIZE a1 (x0 x2) x1) = ((@IN a0 x2 x3) -> x4).
Definition term1008 (a0 : Type') (a1 : Type') (x0 : type1413 a0 a1) (x1 : nat) (x2 : a0) (x3 : a0) (x4 : Prop) := ((x2 = x3) -> (@HAS_SIZE a1 (x0 x2) x1) = x4) -> ((x2 = x3) -> @HAS_SIZE a1 (x0 x2) x1) = ((x2 = x3) -> x4).
Definition term273 (a0 : Type') (a1 : Type') (x0 : a1) (x1 : a1 -> Prop) (x2 : type1470 a0 a1) (x3 : prod a1 a0) := and (exists y0 : a1, exists y1 : a0, (((y0 = x0) \/ (x1 y0)) /\ (x2 y0 y1)) /\ (x3 = (@pair a1 a0 y0 y1))).
Definition term255 (a0 : Type') (a1 : Type') (x0 : prod a1 a0) (x1 : type1470 a0 a1) (x2 : a1) (x3 : a0) := ~ ((x0 = (@pair a1 a0 x2 x3)) /\ (x1 x2 x3)).
Definition term1691 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : type619 a0 a1) (x2 : a0 -> Prop) := (fun y0 : a0 -> Prop => fun y1 : type464 a0 a1 => exists y2 : type465 a0 a1, forall y3 : type1413 a0 a1, forall y4 : prod a0 a1, (~ (x0 y0 y3 y4)) \/ (@SETSPEC (prod a0 a1) y4 ((@IN a0 (y1 y3 y4) y0) /\ (@IN a1 (y2 y3 y4) (y3 (y1 y3 y4)))) (@pair a0 a1 (y1 y3 y4) (y2 y3 y4)))) x2 (x1 x2).
Definition term1791 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : type1413 a0 a1) (x2 : a0 -> Prop) (x3 : nat) := exists y0 : a0, ((@IN a0 y0 x2) /\ (~ (@HAS_SIZE a1 (x1 y0) x3))) \/ (@HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (x0 x2 x1)) (Nat.mul (@CARD a0 x2) x3)).
Definition term346 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : a1) (x2 : prod a1 a0) (x3 : type1470 a0 a1) (x4 : a1) := exists y0 : a0, (((x0 x1) /\ (x3 x1 y0)) /\ (x2 = (@pair a1 a0 x1 y0))) \/ ((x2 = (@pair a1 a0 x4 y0)) /\ (x3 x4 y0)).
Definition term1342 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : a0 -> Prop) (x2 : type1413 a0 a1) := @GSPEC (prod a0 a1) (x0 x1 x2).
Definition term984 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : type1413 a0 a1) (x2 : nat) (x3 : a0) := (fun y0 : a0 => (y0 = x0) -> @HAS_SIZE a1 (x1 y0) x2) x3.
Definition term705 (a0 : Type') (a1 : Type') (x0 : a0) := fun y0 : a0 -> Prop => (((fun y1 : a0 -> Prop => forall y2 : nat, ((@CARD a0 y1) = y2) -> forall y3 : type1413 a0 a1, forall y4 : nat, (forall y5 : a0, (@IN a0 y5 y1) -> @HAS_SIZE a1 (y3 y5) y4) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y5 : prod a0 a1 => exists y6 : a0, exists y7 : a1, @SETSPEC (prod a0 a1) y5 ((@IN a0 y6 y1) /\ (@IN a1 y7 (y3 y6))) (@pair a0 a1 y6 y7))) (Nat.mul y2 y4)) y0) /\ ((~ (@IN a0 x0 y0)) /\ (@FINITE a0 y0))) -> (fun y1 : a0 -> Prop => forall y2 : nat, ((@CARD a0 y1) = y2) -> forall y3 : type1413 a0 a1, forall y4 : nat, (forall y5 : a0, (@IN a0 y5 y1) -> @HAS_SIZE a1 (y3 y5) y4) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y5 : prod a0 a1 => exists y6 : a0, exists y7 : a1, @SETSPEC (prod a0 a1) y5 ((@IN a0 y6 y1) /\ (@IN a1 y7 (y3 y6))) (@pair a0 a1 y6 y7))) (Nat.mul y2 y4)) (@INSERT a0 x0 y0).
Definition term1029 (a0 : Type') (a1 : Type') (x0 : type1413 a0 a1) (x1 : a0) (x2 : nat) := (exists y0 : a0, y0 = x1) -> @HAS_SIZE a1 (x0 x1) x2.
Definition term1834 (a0 : Type') (a1 : Type') (x0 : type471 a0 a1) (x1 : type621 a0 a1) (x2 : type1413 a0 a1) (x3 : a0 -> Prop) := forall y0 : nat, ((@IN a0 (x0 x2 y0) x3) /\ (~ (@HAS_SIZE a1 (x2 (x0 x2 y0)) y0))) \/ (@HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (x1 x3 x2)) (Nat.mul (@CARD a0 x3) y0)).
Definition term1813 (a0 : Type') (a1 : Type') (x0 : nat -> a0) (x1 : type621 a0 a1) (x2 : type1413 a0 a1) (x3 : a0 -> Prop) := forall y0 : nat, ((@IN a0 (x0 y0) x3) /\ (~ (@HAS_SIZE a1 (x2 (x0 y0)) y0))) \/ (@HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (x1 x3 x2)) (Nat.mul (@CARD a0 x3) y0)).
Definition term99 (a0 : Type') (a1 : Type') (x0 : a1) (x1 : a1 -> Prop) (x2 : type1470 a0 a1) (x3 : prod a1 a0) (x4 : a1) (x5 : a0) := @eq Prop ((fun y0 : prod a1 a0 => (((x4 = x0) \/ (x1 x4)) /\ (x2 x4 x5)) /\ (x3 = y0)) (@pair a1 a0 x4 x5)).
Definition term1557 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : prod a0 a1) (x2 : a0 -> Prop) (x3 : type1413 a0 a1) (x4 : a0) := (~ (x0 x2 x3 x1)) \/ (exists y0 : a1, (fun y1 : a1 => @SETSPEC (prod a0 a1) x1 ((@IN a0 x4 x2) /\ (@IN a1 y1 (x3 x4))) (@pair a0 a1 x4 y1)) y0).
Definition term793 (a0 : Type') (a1 : Type') (x0 : nat) := ((NUMERAL 0) = x0) -> (forall y0 : type1413 a0 a1, forall y1 : nat, (forall y2 : a0, (@IN a0 y2 (@EMPTY a0)) -> @HAS_SIZE a1 (y0 y2) y1) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y2 : prod a0 a1 => exists y3 : a0, exists y4 : a1, @SETSPEC (prod a0 a1) y2 ((@IN a0 y3 (@EMPTY a0)) /\ (@IN a1 y4 (y0 y3))) (@pair a0 a1 y3 y4))) (Nat.mul x0 y1)) = (forall y0 : nat, @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y1 : prod a0 a1 => exists y2 : a0, exists y3 : a1, @SETSPEC (prod a0 a1) y1 False (@pair a0 a1 y2 y3))) (Nat.mul x0 y0)).
Definition term1796 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : type1413 a0 a1) (x2 : a0 -> Prop) := forall y0 : nat, exists y1 : a0, (fun y2 : nat => fun y3 : a0 => ((@IN a0 y3 x2) /\ (~ (@HAS_SIZE a1 (x1 y3) y2))) \/ (@HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (x0 x2 x1)) (Nat.mul (@CARD a0 x2) y2))) y0 y1.
Definition term1794 (a0 : Type') (x0 : type1597 a0) := forall y0 : nat, exists y1 : a0, x0 y0 y1.
Definition term1793 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : type1413 a0 a1) (x2 : a0 -> Prop) := forall y0 : nat, exists y1 : a0, ((@IN a0 y1 x2) /\ (~ (@HAS_SIZE a1 (x1 y1) y0))) \/ (@HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (x0 x2 x1)) (Nat.mul (@CARD a0 x2) y0)).
Definition term2019 (a0 : Type') (x0 : a0) (x1 : a0) := (~ (x0 = x1)) -> x0 = x1.
Definition term545 (a0 : Type') (x0 : a0 -> Prop) := (fun y0 : a0 -> Prop => (@HAS_SIZE a0 y0 (NUMERAL 0)) = (y0 = (@EMPTY a0))) x0.
Definition term833 (a0 : Type') (x0 : a0) (x1 : a0 -> Prop) (x2 : nat) := ((~ False) -> (S (@CARD a0 x1)) = x2) -> (@COND nat (@IN a0 x0 x1) (@CARD a0 x1) (S (@CARD a0 x1))) = (@COND nat False (@CARD a0 x1) x2).
Definition term733 (a0 : Type') (a1 : Type') (x0 : nat) (x1 : Prop) := (((NUMERAL 0) = x0) -> (forall y0 : type1413 a0 a1, forall y1 : nat, (forall y2 : a0, (@IN a0 y2 (@EMPTY a0)) -> @HAS_SIZE a1 (y0 y2) y1) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y2 : prod a0 a1 => exists y3 : a0, exists y4 : a1, @SETSPEC (prod a0 a1) y2 ((@IN a0 y3 (@EMPTY a0)) /\ (@IN a1 y4 (y0 y3))) (@pair a0 a1 y3 y4))) (Nat.mul x0 y1)) = x1) -> (((@CARD a0 (@EMPTY a0)) = x0) -> forall y0 : type1413 a0 a1, forall y1 : nat, (forall y2 : a0, (@IN a0 y2 (@EMPTY a0)) -> @HAS_SIZE a1 (y0 y2) y1) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y2 : prod a0 a1 => exists y3 : a0, exists y4 : a1, @SETSPEC (prod a0 a1) y2 ((@IN a0 y3 (@EMPTY a0)) /\ (@IN a1 y4 (y0 y3))) (@pair a0 a1 y3 y4))) (Nat.mul x0 y1)) = (((NUMERAL 0) = x0) -> x1).
Definition term823 (a0 : Type') (x0 : a0) (x1 : a0 -> Prop) (x2 : Prop) := (fun y0 : Prop => forall y1 : nat, forall y2 : nat, ((@IN a0 x0 x1) = y0) -> (y0 -> (@CARD a0 x1) = y1) -> ((~ y0) -> (S (@CARD a0 x1)) = y2) -> (@COND nat (@IN a0 x0 x1) (@CARD a0 x1) (S (@CARD a0 x1))) = (@COND nat y0 y1 y2)) x2.
Definition term610 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : type1413 a0 a1) (x2 : nat) := fun y0 : nat => (@FINITE a0 x0) -> ((@CARD a0 x0) = x2) -> (forall y1 : a0, (@IN a0 y1 x0) -> @HAS_SIZE a1 (x1 y1) y0) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y1 : prod a0 a1 => exists y2 : a0, exists y3 : a1, @SETSPEC (prod a0 a1) y1 ((@IN a0 y2 x0) /\ (@IN a1 y3 (x1 y2))) (@pair a0 a1 y2 y3))) (Nat.mul x2 y0).
Definition term506 (a0 : Type') (x0 : a0 -> Prop) (x1 : Prop) := forall y0 : a0, (x0 y0) -> x1.
Definition term1934 (a0 : Type') (a1 : Type') := fun y0 : a0 => ((fun y1 : a0 => forall y2 : a1, forall y3 : a0, forall y4 : a1, ((@pair a0 a1 y1 y2) = (@pair a0 a1 y3 y4)) \/ ((~ (y1 = y3)) \/ (~ (y2 = y4)))) y0) /\ ((fun y1 : a0 => forall y2 : a1, forall y3 : a0, forall y4 : a1, (~ ((@pair a0 a1 y1 y2) = (@pair a0 a1 y3 y4))) \/ ((y1 = y3) /\ (y2 = y4))) y0).
Definition term1890 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a1) := fun y0 : a0 => ((fun y1 : a0 => forall y2 : a1, ((@pair a0 a1 x0 x1) = (@pair a0 a1 y1 y2)) \/ ((~ (x0 = y1)) \/ (~ (x1 = y2)))) y0) /\ ((fun y1 : a0 => forall y2 : a1, (~ ((@pair a0 a1 x0 x1) = (@pair a0 a1 y1 y2))) \/ ((x0 = y1) /\ (x1 = y2))) y0).
Definition term82 (a0 : Type') (x0 : a0) (x1 : a0 -> Prop) (x2 : a0) := (x2 = x0) \/ (x1 x2).
Definition term243 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : type1470 a0 a1) (x2 : prod a1 a0) (x3 : a1) (x4 : a0) := (fun y0 : a0 => ((x0 x3) /\ (x1 x3 y0)) /\ (x2 = (@pair a1 a0 x3 y0))) x4.
Definition term1014 (a0 : Type') (a1 : Type') (x0 : type1413 a0 a1) (x1 : a0) (x2 : nat) := forall y0 : a0, (y0 = x1) -> @HAS_SIZE a1 (x0 x1) x2.
Definition term996 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : type1413 a0 a1) (x2 : nat) := forall y0 : a0, (y0 = x0) -> @HAS_SIZE a1 (x1 y0) x2.
Definition term581 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : type1413 a0 a1) (x2 : nat) := forall y0 : a0, (@IN a0 y0 x0) -> @HAS_SIZE a1 (x1 y0) x2.
Definition term609 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : type1413 a0 a1) (x2 : nat) (x3 : nat) := (forall y0 : a0, (@IN a0 y0 x0) -> @HAS_SIZE a1 (x1 y0) x3) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y0 : prod a0 a1 => exists y1 : a0, exists y2 : a1, @SETSPEC (prod a0 a1) y0 ((@IN a0 y1 x0) /\ (@IN a1 y2 (x1 y1))) (@pair a0 a1 y1 y2))) (Nat.mul x2 x3).
Definition term397 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : prod a1 a0) (x2 : type1470 a0 a1) (x3 : a1) := fun y0 : a1 => ((fun y1 : a1 => exists y2 : a0, ((((y1 = x3) \/ (x0 y1)) /\ (x2 y1 y2)) /\ (x1 = (@pair a1 a0 y1 y2))) /\ ((forall y3 : a1, forall y4 : a0, ((~ (x0 y3)) \/ (~ (x2 y3 y4))) \/ (~ (x1 = (@pair a1 a0 y3 y4)))) /\ (forall y3 : a0, (~ (x1 = (@pair a1 a0 x3 y3))) \/ (~ (x2 x3 y3))))) y0) \/ ((fun y1 : a1 => exists y2 : a0, (forall y3 : a1, forall y4 : a0, (((~ (y3 = x3)) /\ (~ (x0 y3))) \/ (~ (x2 y3 y4))) \/ (~ (x1 = (@pair a1 a0 y3 y4)))) /\ ((((x0 y1) /\ (x2 y1 y2)) /\ (x1 = (@pair a1 a0 y1 y2))) \/ ((x1 = (@pair a1 a0 x3 y2)) /\ (x2 x3 y2)))) y0).
Definition term1555 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : prod a0 a1) (x2 : a0 -> Prop) (x3 : type1413 a0 a1) := fun y0 : a0 => (~ (x0 x2 x3 x1)) \/ (exists y1 : a1, @SETSPEC (prod a0 a1) x1 ((@IN a0 y0 x2) /\ (@IN a1 y1 (x3 y0))) (@pair a0 a1 y0 y1)).
Definition term315 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : prod a1 a0) (x2 : type1470 a0 a1) (x3 : a1) := (exists y0 : a1, (fun y1 : a1 => exists y2 : a0, ((x0 y1) /\ (x2 y1 y2)) /\ (x1 = (@pair a1 a0 y1 y2))) y0) \/ (exists y0 : a0, (x1 = (@pair a1 a0 x3 y0)) /\ (x2 x3 y0)).
Definition term456 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : type1470 a0 a1) (x2 : a1) (x3 : a0) (x4 : a1) (x5 : a0) := (~ (x0 x4)) \/ ((~ (x1 x4 x5)) \/ (~ ((@pair a1 a0 x2 x3) = (@pair a1 a0 x4 x5)))).
Definition term2033 (a0 : Type') (x0 : a0) (x1 : a0) (x2 : type1364 a0) (x3 : type1364 a0) := (~ (~ (x0 = x1))) /\ (~ (~ (x2 = x3))).
Definition term1954 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a0) (x2 : a1) (x3 : a1) := (~ ((@I (a1 -> prod a0 a1) (@I (a0 -> a1 -> prod a0 a1) (@pair a0 a1) x0) x2) = (@I (a1 -> prod a0 a1) (@I (a0 -> a1 -> prod a0 a1) (@pair a0 a1) x1) x3))) \/ ((x0 = x1) /\ (x2 = x3)).
Definition term1844 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a0) (x2 : a1) (x3 : a1) := (~ ((@pair a0 a1 x0 x2) = (@pair a0 a1 x1 x3))) \/ ((x0 = x1) /\ (x2 = x3)).
Definition term2075 (a0 : Type') (x0 : a0 -> Prop) (x1 : a0 -> Prop) := ~ (x0 = x1).
Definition term2050 (a0 : Type') (x0 : type686 a0) (x1 : type686 a0) := ~ (x0 = x1).
Definition term2023 (a0 : Type') (x0 : type1364 a0) (x1 : type1364 a0) := ~ (x0 = x1).
Definition term1164 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : type1413 a0 a1) := fun y0 : prod a0 a1 => (fun y1 : type1532 a0 a1 => exists y2 : a0, exists y3 : a1, y1 ((@IN a0 y2 x0) /\ (@IN a1 y3 (x1 y2))) (@pair a0 a1 y2 y3)) (@SETSPEC (prod a0 a1) y0).
Definition term933 (a0 : Type') (a1 : Type') := fun y0 : prod a0 a1 => (fun y1 : type1532 a0 a1 => exists y2 : a0, exists y3 : a1, y1 False (@pair a0 a1 y2 y3)) (@SETSPEC (prod a0 a1) y0).
Definition term1817 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : a0 -> Prop) := fun y0 : type1413 a0 a1 => exists y1 : nat -> a0, forall y2 : nat, ((@IN a0 (y1 y2) x1) /\ (~ (@HAS_SIZE a1 (y0 (y1 y2)) y2))) \/ (@HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (x0 x1 y0)) (Nat.mul (@CARD a0 x1) y2)).
Definition term1643 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : a0 -> Prop) (x2 : type464 a0 a1) := fun y0 : type1413 a0 a1 => exists y1 : type1208 a0 a1, forall y2 : prod a0 a1, (~ (x0 x1 y0 y2)) \/ (@SETSPEC (prod a0 a1) y2 ((@IN a0 (x2 y0 y2) x1) /\ (@IN a1 (y1 y2) (y0 (x2 y0 y2)))) (@pair a0 a1 (x2 y0 y2) (y1 y2))).
Definition term269 (a0 : Type') (a1 : Type') (x0 : a1) (x1 : a1 -> Prop) (x2 : type1470 a0 a1) (x3 : prod a1 a0) := and (~ (exists y0 : a1, exists y1 : a0, (((y0 = x0) \/ (x1 y0)) /\ (x2 y0 y1)) /\ (x3 = (@pair a1 a0 y0 y1)))).
Definition term264 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : type1470 a0 a1) (x2 : prod a1 a0) := and (~ (exists y0 : a1, exists y1 : a0, ((x0 y0) /\ (x1 y0 y1)) /\ (x2 = (@pair a1 a0 y0 y1)))).
Definition term15 (a0 : Type') (x0 : type919 a0) := (fun y0 : type919 a0 => forall y1 : a0, (@IN a0 y1 (@GSPEC a0 (fun y2 : a0 => y0 (@SETSPEC a0 y2)))) = (y0 (fun y2 : Prop => fun y3 : a0 => y2 /\ (y1 = y3)))) x0.
Definition term81 (a0 : Type') (x0 : a0) (x1 : a0) (x2 : a0 -> Prop) := (x1 = x0) \/ (@IN a0 x1 x2).
Definition term767 (a0 : Type') (a1 : Type') (x0 : prod a0 a1) (x1 : a0) := fun y0 : a1 => @SETSPEC (prod a0 a1) x0 False (@pair a0 a1 x1 y0).
Definition term1984 (a0 : Type') (a1 : Type') (x0 : a0) := (fun y0 : a0 => forall y1 : a1, forall y2 : a0, forall y3 : a1, ((~ ((@I (a1 -> prod a0 a1) (@I (a0 -> a1 -> prod a0 a1) (@pair a0 a1) y0) y1) = (@I (a1 -> prod a0 a1) (@I (a0 -> a1 -> prod a0 a1) (@pair a0 a1) y2) y3))) \/ (y0 = y2)) /\ ((~ ((@I (a1 -> prod a0 a1) (@I (a0 -> a1 -> prod a0 a1) (@pair a0 a1) y0) y1) = (@I (a1 -> prod a0 a1) (@I (a0 -> a1 -> prod a0 a1) (@pair a0 a1) y2) y3))) \/ (y1 = y3))) x0.
Definition term1932 (a0 : Type') (a1 : Type') (x0 : a0) := (fun y0 : a0 => forall y1 : a1, forall y2 : a0, forall y3 : a1, (~ ((@pair a0 a1 y0 y1) = (@pair a0 a1 y2 y3))) \/ ((y0 = y2) /\ (y1 = y3))) x0.
Definition term1930 (a0 : Type') (a1 : Type') (x0 : a0) := (fun y0 : a0 => forall y1 : a1, forall y2 : a0, forall y3 : a1, ((@pair a0 a1 y0 y1) = (@pair a0 a1 y2 y3)) \/ ((~ (y0 = y2)) \/ (~ (y1 = y3)))) x0.
Definition term1078 (a0 : Type') (a1 : Type') (x0 : a0) := (fun y0 : a0 => forall y1 : a1, forall y2 : a0, forall y3 : a1, ((@pair a0 a1 y0 y1) = (@pair a0 a1 y2 y3)) = ((y0 = y2) /\ (y1 = y3))) x0.
Definition term2087 (a0 : Type') (x0 : type686 a0) (x1 : type686 a0) (x2 : a0 -> Prop) := (~ (~ (x1 = x0))) /\ (~ (~ (@I ((a0 -> Prop) -> Prop) x1 x2))).
Definition term2059 (a0 : Type') (x0 : type686 a0) (x1 : type686 a0) (x2 : type686 a0) := (~ (~ (x1 = x0))) /\ (~ (~ (x1 = x2))).
Definition term2027 (a0 : Type') (x0 : a0) (x1 : a0) (x2 : type1364 a0) (x3 : type1364 a0) := @eq Prop (((@I (a0 -> (a0 -> Prop) -> Prop) x2 x0) = (@I (a0 -> (a0 -> Prop) -> Prop) x3 x1)) \/ ((~ (x0 = x1)) \/ (~ (x2 = x3)))).
Definition term2096 (a0 : Type') (x0 : a0) (x1 : a0) (x2 : a0 -> Prop) := ((x2 = x2) /\ (((@I (a0 -> (a0 -> Prop) -> Prop) (@IN a0) x0) = (@I (a0 -> (a0 -> Prop) -> Prop) (@IN a0) x1)) /\ (@I ((a0 -> Prop) -> Prop) (@I (a0 -> (a0 -> Prop) -> Prop) (@IN a0) x0) x2))) -> @I ((a0 -> Prop) -> Prop) (@I (a0 -> (a0 -> Prop) -> Prop) (@IN a0) x1) x2.
Definition term2043 (a0 : Type') (x0 : a0) (x1 : a0) := ((x0 = x1) /\ ((@IN a0) = (@IN a0))) -> (@I (a0 -> (a0 -> Prop) -> Prop) (@IN a0) x0) = (@I (a0 -> (a0 -> Prop) -> Prop) (@IN a0) x1).
Definition term1114 (a0 : Type') (a1 : Type') (x0 : a0) := fun y0 : a1 => @pair a0 a1 x0 y0.
Definition term211 (a0 : Type') (a1 : Type') (x0 : a1) (x1 : a1 -> Prop) (x2 : type1470 a0 a1) (x3 : a1) (x4 : a0) := ~ (((x3 = x0) \/ (x1 x3)) /\ (x2 x3 x4)).
Definition term1443 (a0 : Type') (a1 : Type') (x0 : prod a0 a1) (x1 : a0 -> Prop) (x2 : type1413 a0 a1) (x3 : a0) := ~ (exists y0 : a1, @SETSPEC (prod a0 a1) x0 ((@IN a0 x3 x1) /\ (@IN a1 y0 (x2 x3))) (@pair a0 a1 x3 y0)).
Definition term756 (a0 : Type') (x0 : Prop) := forall y0 : a0, x0.
Definition term852 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a0 -> Prop) (x2 : type1413 a0 a1) (x3 : a0) (x4 : nat) (x5 : Prop) (x6 : Prop) := ((@IN a0 x3 (@INSERT a0 x0 x1)) = x5) -> (x5 -> (@HAS_SIZE a1 (x2 x3) x4) = x6) -> ((@IN a0 x3 (@INSERT a0 x0 x1)) -> @HAS_SIZE a1 (x2 x3) x4) = (x5 -> x6).
Definition term2045 (a0 : Type') (x0 : a0) (x1 : a0) := ~ ((@I (a0 -> (a0 -> Prop) -> Prop) (@IN a0) x0) = (@I (a0 -> (a0 -> Prop) -> Prop) (@IN a0) x1)).
Definition term329 (a0 : Type') (x0 : a0 -> Prop) (x1 : a0 -> Prop) := (exists y0 : a0, x0 y0) \/ (exists y0 : a0, x1 y0).
Definition term1465 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : prod a0 a1) (x2 : a0 -> Prop) (x3 : type1413 a0 a1) := ((x0 x2 x3 x1) \/ (~ (exists y0 : a0, exists y1 : a1, @SETSPEC (prod a0 a1) x1 ((@IN a0 y0 x2) /\ (@IN a1 y1 (x3 y0))) (@pair a0 a1 y0 y1)))) /\ ((~ (x0 x2 x3 x1)) \/ (exists y0 : a0, exists y1 : a1, @SETSPEC (prod a0 a1) x1 ((@IN a0 y0 x2) /\ (@IN a1 y1 (x3 y0))) (@pair a0 a1 y0 y1))).
Definition term1199 (a0 : Type') (a1 : Type') (x0 : prod a0 a1) (x1 : a0) (x2 : a1) := and (x0 = ((fun y0 : a1 => @pair a0 a1 x1 y0) x2)).
Definition term171 (a0 : Type') (a1 : Type') (x0 : prod a1 a0) (x1 : a1) (x2 : a0) := and (x0 = ((fun y0 : a0 => @pair a1 a0 x1 y0) x2)).
Definition term663 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : nat) := fun y0 : type1413 a0 a1 => ((@CARD a0 x0) = x1) -> (fun y1 : type1413 a0 a1 => forall y2 : nat, (forall y3 : a0, (@IN a0 y3 x0) -> @HAS_SIZE a1 (y1 y3) y2) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y3 : prod a0 a1 => exists y4 : a0, exists y5 : a1, @SETSPEC (prod a0 a1) y3 ((@IN a0 y4 x0) /\ (@IN a1 y5 (y1 y4))) (@pair a0 a1 y4 y5))) (Nat.mul x1 y2)) y0.
Definition term1343 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : type1413 a0 a1) := @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y0 : prod a0 a1 => exists y1 : a0, exists y2 : a1, @SETSPEC (prod a0 a1) y0 ((@IN a0 y1 x0) /\ (@IN a1 y2 (x1 y1))) (@pair a0 a1 y1 y2))).
Definition term884 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a0 -> Prop) (x2 : type1413 a0 a1) := @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y0 : prod a0 a1 => exists y1 : a0, exists y2 : a1, @SETSPEC (prod a0 a1) y0 (((y1 = x0) \/ (@IN a0 y1 x1)) /\ (@IN a1 y2 (x2 y1))) (@pair a0 a1 y1 y2))).
Definition term883 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a0 -> Prop) (x2 : type1413 a0 a1) := @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y0 : prod a0 a1 => exists y1 : a0, exists y2 : a1, @SETSPEC (prod a0 a1) y0 ((@IN a0 y1 (@INSERT a0 x0 x1)) /\ (@IN a1 y2 (x2 y1))) (@pair a0 a1 y1 y2))).
Definition term779 (a0 : Type') (a1 : Type') := @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y0 : prod a0 a1 => exists y1 : a0, exists y2 : a1, @SETSPEC (prod a0 a1) y0 False (@pair a0 a1 y1 y2))).
Definition term778 (a0 : Type') (a1 : Type') (x0 : type1413 a0 a1) := @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y0 : prod a0 a1 => exists y1 : a0, exists y2 : a1, @SETSPEC (prod a0 a1) y0 ((@IN a0 y1 (@EMPTY a0)) /\ (@IN a1 y2 (x0 y1))) (@pair a0 a1 y1 y2))).
Definition term487 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : type1470 a0 a1) (x2 : a1) (x3 : a0) := (x0 x2) /\ ((x1 x2 x3) /\ ((@pair a1 a0 x2 x3) = (@pair a1 a0 x2 x3))).
Definition term1355 (a0 : Type') (a1 : Type') (x0 : nat) (x1 : type621 a0 a1) (x2 : a0 -> Prop) (x3 : a0) (x4 : a1) (x5 : prod a0 a1) (x6 : a1) (x7 : type1413 a0 a1) (x8 : a0) := (forall y0 : a0, (@IN a0 y0 x2) -> @HAS_SIZE a1 (x7 y0) x0) -> (forall y0 : type1413 a0 a1, forall y1 : nat, (forall y2 : a0, (@IN a0 y2 x2) -> @HAS_SIZE a1 (y0 y2) y1) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (x1 x2 y0)) (Nat.mul (@CARD a0 x2) y1)) -> (@IN a0 x3 x2) -> (@IN a1 x4 (x7 x3)) -> (x5 = (@pair a0 a1 x3 x4)) -> (x5 = (@pair a0 a1 x8 x6)) -> (@IN a1 x6 (x7 x8)) -> (forall y0 : a0, forall y1 : a1, forall y2 : a0, forall y3 : a1, ((@pair a0 a1 y0 y1) = (@pair a0 a1 y2 y3)) = ((y0 = y2) /\ (y1 = y3))) -> (forall y0 : a0, forall y1 : nat, forall y2 : a0, forall y3 : nat, ((@pair a0 nat y0 y1) = (@pair a0 nat y2 y3)) = ((y0 = y2) /\ (y1 = y3))) -> (forall y0 : a0, forall y1 : prod a0 a1, forall y2 : a0, forall y3 : prod a0 a1, ((@pair a0 (prod a0 a1) y0 y1) = (@pair a0 (prod a0 a1) y2 y3)) = ((y0 = y2) /\ (y1 = y3))) -> (forall y0 : nat, forall y1 : a1, forall y2 : nat, forall y3 : a1, ((@pair nat a1 y0 y1) = (@pair nat a1 y2 y3)) = ((y0 = y2) /\ (y1 = y3))) -> ~ (forall y0 : prod a0 a1, forall y1 : a1, forall y2 : prod a0 a1, forall y3 : a1, ((@pair (prod a0 a1) a1 y0 y1) = (@pair (prod a0 a1) a1 y2 y3)) = ((y0 = y2) /\ (y1 = y3))).
Definition term1253 (a0 : Type') (a1 : Type') (x0 : nat) (x1 : a0 -> Prop) (x2 : a0) (x3 : a1) (x4 : prod a0 a1) (x5 : a1) (x6 : type1413 a0 a1) (x7 : a0) := (forall y0 : a0, (@IN a0 y0 x1) -> @HAS_SIZE a1 (x6 y0) x0) -> (forall y0 : type1413 a0 a1, forall y1 : nat, (forall y2 : a0, (@IN a0 y2 x1) -> @HAS_SIZE a1 (y0 y2) y1) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y2 : prod a0 a1 => exists y3 : a0, exists y4 : a1, @SETSPEC (prod a0 a1) y2 ((@IN a0 y3 x1) /\ (@IN a1 y4 (y0 y3))) (@pair a0 a1 y3 y4))) (Nat.mul (@CARD a0 x1) y1)) -> (@IN a0 x2 x1) -> (@IN a1 x3 (x6 x2)) -> (x4 = (@pair a0 a1 x2 x3)) -> (x4 = (@pair a0 a1 x7 x5)) -> (@IN a1 x5 (x6 x7)) -> (forall y0 : a0, forall y1 : a1, forall y2 : a0, forall y3 : a1, ((@pair a0 a1 y0 y1) = (@pair a0 a1 y2 y3)) = ((y0 = y2) /\ (y1 = y3))) -> (forall y0 : a0, forall y1 : nat, forall y2 : a0, forall y3 : nat, ((@pair a0 nat y0 y1) = (@pair a0 nat y2 y3)) = ((y0 = y2) /\ (y1 = y3))) -> (forall y0 : a0, forall y1 : prod a0 a1, forall y2 : a0, forall y3 : prod a0 a1, ((@pair a0 (prod a0 a1) y0 y1) = (@pair a0 (prod a0 a1) y2 y3)) = ((y0 = y2) /\ (y1 = y3))) -> (forall y0 : nat, forall y1 : a1, forall y2 : nat, forall y3 : a1, ((@pair nat a1 y0 y1) = (@pair nat a1 y2 y3)) = ((y0 = y2) /\ (y1 = y3))) -> ~ (forall y0 : prod a0 a1, forall y1 : a1, forall y2 : prod a0 a1, forall y3 : a1, ((@pair (prod a0 a1) a1 y0 y1) = (@pair (prod a0 a1) a1 y2 y3)) = ((y0 = y2) /\ (y1 = y3))).
Definition term1252 (a0 : Type') (a1 : Type') (x0 : nat) (x1 : a0 -> Prop) (x2 : a0) (x3 : a1) (x4 : prod a0 a1) (x5 : a1) (x6 : type1413 a0 a1) (x7 : a0) := (forall y0 : a0, (@IN a0 y0 x1) -> @HAS_SIZE a1 (x6 y0) x0) -> (forall y0 : type1413 a0 a1, forall y1 : nat, (forall y2 : a0, (@IN a0 y2 x1) -> @HAS_SIZE a1 (y0 y2) y1) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y2 : prod a0 a1 => exists y3 : a0, exists y4 : a1, @SETSPEC (prod a0 a1) y2 ((@IN a0 y3 x1) /\ (@IN a1 y4 (y0 y3))) (@pair a0 a1 y3 y4))) (Nat.mul (@CARD a0 x1) y1)) -> (@IN a0 x2 x1) -> (@IN a1 x3 (x6 x2)) -> (x4 = (@pair a0 a1 x2 x3)) -> (x4 = (@pair a0 a1 x7 x5)) -> (@IN a1 x5 (x6 x7)) -> (forall y0 : a0, forall y1 : a1, forall y2 : a0, forall y3 : a1, ((@pair a0 a1 y0 y1) = (@pair a0 a1 y2 y3)) = ((y0 = y2) /\ (y1 = y3))) -> (forall y0 : a0, forall y1 : nat, forall y2 : a0, forall y3 : nat, ((@pair a0 nat y0 y1) = (@pair a0 nat y2 y3)) = ((y0 = y2) /\ (y1 = y3))) -> (forall y0 : a0, forall y1 : prod a0 a1, forall y2 : a0, forall y3 : prod a0 a1, ((@pair a0 (prod a0 a1) y0 y1) = (@pair a0 (prod a0 a1) y2 y3)) = ((y0 = y2) /\ (y1 = y3))) -> (forall y0 : nat, forall y1 : a1, forall y2 : nat, forall y3 : a1, ((@pair nat a1 y0 y1) = (@pair nat a1 y2 y3)) = ((y0 = y2) /\ (y1 = y3))) -> (forall y0 : prod a0 a1, forall y1 : a1, forall y2 : prod a0 a1, forall y3 : a1, ((@pair (prod a0 a1) a1 y0 y1) = (@pair (prod a0 a1) a1 y2 y3)) = ((y0 = y2) /\ (y1 = y3))) -> False.
Definition term2079 (a0 : Type') (x0 : type686 a0) (x1 : a0 -> Prop) (x2 : type686 a0) (x3 : a0 -> Prop) := (~ ((~ (x1 = x3)) \/ ((~ (x0 = x2)) \/ (~ (@I ((a0 -> Prop) -> Prop) x0 x1))))) -> @I ((a0 -> Prop) -> Prop) x2 x3.
Definition term247 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : type1470 a0 a1) (x2 : prod a1 a0) (x3 : a1) := forall y0 : a0, ((~ (x0 x3)) \/ (~ (x1 x3 y0))) \/ (~ (x2 = (@pair a1 a0 x3 y0))).
Definition term226 (a0 : Type') (a1 : Type') (x0 : a1) (x1 : a1 -> Prop) (x2 : type1470 a0 a1) (x3 : prod a1 a0) (x4 : a1) := forall y0 : a0, (((~ (x4 = x0)) /\ (~ (x1 x4))) \/ (~ (x2 x4 y0))) \/ (~ (x3 = (@pair a1 a0 x4 y0))).
Definition term1395 (a0 : Type') (a1 : Type') := fun y0 : type621 a0 a1 => (y0 = (fun y1 : a0 -> Prop => fun y2 : type1413 a0 a1 => fun y3 : prod a0 a1 => exists y4 : a0, exists y5 : a1, @SETSPEC (prod a0 a1) y3 ((@IN a0 y4 y1) /\ (@IN a1 y5 (y2 y4))) (@pair a0 a1 y4 y5))) -> (fun y1 : type621 a0 a1 => forall y2 : a0, forall y3 : type1413 a0 a1, forall y4 : a1, forall y5 : prod a0 a1, forall y6 : a1, forall y7 : a0, forall y8 : a0 -> Prop, forall y9 : nat, forall y10 : nat, (~ (@IN a0 y2 y8)) -> (@FINITE a0 y8) -> (y10 = (S (@CARD a0 y8))) -> (@HAS_SIZE a1 (y3 y2) y9) -> (forall y11 : a0, (@IN a0 y11 y8) -> @HAS_SIZE a1 (y3 y11) y9) -> (forall y11 : type1413 a0 a1, forall y12 : nat, (forall y13 : a0, (@IN a0 y13 y8) -> @HAS_SIZE a1 (y11 y13) y12) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (y1 y8 y11)) (Nat.mul (@CARD a0 y8) y12)) -> (@IN a0 y7 y8) -> (@IN a1 y6 (y3 y7)) -> (y5 = (@pair a0 a1 y7 y6)) -> (y5 = (@pair a0 a1 y2 y4)) -> (@IN a1 y4 (y3 y2)) -> (forall y11 : a0, forall y12 : a1, forall y13 : a0, forall y14 : a1, ((@pair a0 a1 y11 y12) = (@pair a0 a1 y13 y14)) = ((y11 = y13) /\ (y12 = y14))) -> (forall y11 : a0, forall y12 : nat, forall y13 : a0, forall y14 : nat, ((@pair a0 nat y11 y12) = (@pair a0 nat y13 y14)) = ((y11 = y13) /\ (y12 = y14))) -> (forall y11 : a0, forall y12 : prod a0 a1, forall y13 : a0, forall y14 : prod a0 a1, ((@pair a0 (prod a0 a1) y11 y12) = (@pair a0 (prod a0 a1) y13 y14)) = ((y11 = y13) /\ (y12 = y14))) -> (forall y11 : nat, forall y12 : a1, forall y13 : nat, forall y14 : a1, ((@pair nat a1 y11 y12) = (@pair nat a1 y13 y14)) = ((y11 = y13) /\ (y12 = y14))) -> ~ (forall y11 : prod a0 a1, forall y12 : a1, forall y13 : prod a0 a1, forall y14 : a1, ((@pair (prod a0 a1) a1 y11 y12) = (@pair (prod a0 a1) a1 y13 y14)) = ((y11 = y13) /\ (y12 = y14)))) y0.
Definition term806 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a0 -> Prop) (x2 : Prop) := (((forall y0 : nat, ((@CARD a0 x1) = y0) -> forall y1 : type1413 a0 a1, forall y2 : nat, (forall y3 : a0, (@IN a0 y3 x1) -> @HAS_SIZE a1 (y1 y3) y2) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y3 : prod a0 a1 => exists y4 : a0, exists y5 : a1, @SETSPEC (prod a0 a1) y3 ((@IN a0 y4 x1) /\ (@IN a1 y5 (y1 y4))) (@pair a0 a1 y4 y5))) (Nat.mul y0 y2)) /\ ((~ (@IN a0 x0 x1)) /\ (@FINITE a0 x1))) = ((forall y0 : nat, ((@CARD a0 x1) = y0) -> forall y1 : type1413 a0 a1, forall y2 : nat, (forall y3 : a0, (@IN a0 y3 x1) -> @HAS_SIZE a1 (y1 y3) y2) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y3 : prod a0 a1 => exists y4 : a0, exists y5 : a1, @SETSPEC (prod a0 a1) y3 ((@IN a0 y4 x1) /\ (@IN a1 y5 (y1 y4))) (@pair a0 a1 y4 y5))) (Nat.mul y0 y2)) /\ ((~ (@IN a0 x0 x1)) /\ (@FINITE a0 x1)))) -> (((forall y0 : nat, ((@CARD a0 x1) = y0) -> forall y1 : type1413 a0 a1, forall y2 : nat, (forall y3 : a0, (@IN a0 y3 x1) -> @HAS_SIZE a1 (y1 y3) y2) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y3 : prod a0 a1 => exists y4 : a0, exists y5 : a1, @SETSPEC (prod a0 a1) y3 ((@IN a0 y4 x1) /\ (@IN a1 y5 (y1 y4))) (@pair a0 a1 y4 y5))) (Nat.mul y0 y2)) /\ ((~ (@IN a0 x0 x1)) /\ (@FINITE a0 x1))) -> (forall y0 : nat, ((@CARD a0 (@INSERT a0 x0 x1)) = y0) -> forall y1 : type1413 a0 a1, forall y2 : nat, (forall y3 : a0, (@IN a0 y3 (@INSERT a0 x0 x1)) -> @HAS_SIZE a1 (y1 y3) y2) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y3 : prod a0 a1 => exists y4 : a0, exists y5 : a1, @SETSPEC (prod a0 a1) y3 ((@IN a0 y4 (@INSERT a0 x0 x1)) /\ (@IN a1 y5 (y1 y4))) (@pair a0 a1 y4 y5))) (Nat.mul y0 y2)) = x2) -> (((forall y0 : nat, ((@CARD a0 x1) = y0) -> forall y1 : type1413 a0 a1, forall y2 : nat, (forall y3 : a0, (@IN a0 y3 x1) -> @HAS_SIZE a1 (y1 y3) y2) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y3 : prod a0 a1 => exists y4 : a0, exists y5 : a1, @SETSPEC (prod a0 a1) y3 ((@IN a0 y4 x1) /\ (@IN a1 y5 (y1 y4))) (@pair a0 a1 y4 y5))) (Nat.mul y0 y2)) /\ ((~ (@IN a0 x0 x1)) /\ (@FINITE a0 x1))) -> forall y0 : nat, ((@CARD a0 (@INSERT a0 x0 x1)) = y0) -> forall y1 : type1413 a0 a1, forall y2 : nat, (forall y3 : a0, (@IN a0 y3 (@INSERT a0 x0 x1)) -> @HAS_SIZE a1 (y1 y3) y2) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y3 : prod a0 a1 => exists y4 : a0, exists y5 : a1, @SETSPEC (prod a0 a1) y3 ((@IN a0 y4 (@INSERT a0 x0 x1)) /\ (@IN a1 y5 (y1 y4))) (@pair a0 a1 y4 y5))) (Nat.mul y0 y2)) = (((forall y0 : nat, ((@CARD a0 x1) = y0) -> forall y1 : type1413 a0 a1, forall y2 : nat, (forall y3 : a0, (@IN a0 y3 x1) -> @HAS_SIZE a1 (y1 y3) y2) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y3 : prod a0 a1 => exists y4 : a0, exists y5 : a1, @SETSPEC (prod a0 a1) y3 ((@IN a0 y4 x1) /\ (@IN a1 y5 (y1 y4))) (@pair a0 a1 y4 y5))) (Nat.mul y0 y2)) /\ ((~ (@IN a0 x0 x1)) /\ (@FINITE a0 x1))) -> x2).
Definition term1397 (a0 : Type') (a1 : Type') := forall y0 : type621 a0 a1, (y0 = (fun y1 : a0 -> Prop => fun y2 : type1413 a0 a1 => fun y3 : prod a0 a1 => exists y4 : a0, exists y5 : a1, @SETSPEC (prod a0 a1) y3 ((@IN a0 y4 y1) /\ (@IN a1 y5 (y2 y4))) (@pair a0 a1 y4 y5))) -> (fun y1 : type621 a0 a1 => forall y2 : a0, forall y3 : type1413 a0 a1, forall y4 : a1, forall y5 : prod a0 a1, forall y6 : a1, forall y7 : a0, forall y8 : a0 -> Prop, forall y9 : nat, forall y10 : nat, (~ (@IN a0 y2 y8)) -> (@FINITE a0 y8) -> (y10 = (S (@CARD a0 y8))) -> (@HAS_SIZE a1 (y3 y2) y9) -> (forall y11 : a0, (@IN a0 y11 y8) -> @HAS_SIZE a1 (y3 y11) y9) -> (forall y11 : type1413 a0 a1, forall y12 : nat, (forall y13 : a0, (@IN a0 y13 y8) -> @HAS_SIZE a1 (y11 y13) y12) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (y1 y8 y11)) (Nat.mul (@CARD a0 y8) y12)) -> (@IN a0 y7 y8) -> (@IN a1 y6 (y3 y7)) -> (y5 = (@pair a0 a1 y7 y6)) -> (y5 = (@pair a0 a1 y2 y4)) -> (@IN a1 y4 (y3 y2)) -> (forall y11 : a0, forall y12 : a1, forall y13 : a0, forall y14 : a1, ((@pair a0 a1 y11 y12) = (@pair a0 a1 y13 y14)) = ((y11 = y13) /\ (y12 = y14))) -> (forall y11 : a0, forall y12 : nat, forall y13 : a0, forall y14 : nat, ((@pair a0 nat y11 y12) = (@pair a0 nat y13 y14)) = ((y11 = y13) /\ (y12 = y14))) -> (forall y11 : a0, forall y12 : prod a0 a1, forall y13 : a0, forall y14 : prod a0 a1, ((@pair a0 (prod a0 a1) y11 y12) = (@pair a0 (prod a0 a1) y13 y14)) = ((y11 = y13) /\ (y12 = y14))) -> (forall y11 : nat, forall y12 : a1, forall y13 : nat, forall y14 : a1, ((@pair nat a1 y11 y12) = (@pair nat a1 y13 y14)) = ((y11 = y13) /\ (y12 = y14))) -> ~ (forall y11 : prod a0 a1, forall y12 : a1, forall y13 : prod a0 a1, forall y14 : a1, ((@pair (prod a0 a1) a1 y11 y12) = (@pair (prod a0 a1) a1 y13 y14)) = ((y11 = y13) /\ (y12 = y14)))) y0.
Definition term174 (a0 : Type') (a1 : Type') (x0 : prod a1 a0) (x1 : type1470 a0 a1) (x2 : a1) (x3 : a0) := (x0 = (@pair a1 a0 x2 x3)) /\ (x1 x2 x3).
Definition term2011 (a0 : Type') (a1 : Type') (x0 : a1) (x1 : a1) (x2 : a0) (x3 : a0) := @eq Prop ((~ ((@I (a1 -> prod a0 a1) (@I (a0 -> a1 -> prod a0 a1) (@pair a0 a1) x2) x0) = (@I (a1 -> prod a0 a1) (@I (a0 -> a1 -> prod a0 a1) (@pair a0 a1) x3) x1))) \/ (x2 = x3)).
Definition term2107 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : prod a0 a1) (x2 : type1413 a0 a1) (x3 : a0) := ((exists y0 : a0, exists y1 : a1, ((@IN a0 y0 x0) /\ (@IN a1 y1 (x2 y0))) /\ (x1 = (@pair a0 a1 y0 y1))) /\ (exists y0 : a1, (x1 = (@pair a0 a1 x3 y0)) /\ (@IN a1 y0 (x2 x3)))) -> False.
Definition term252 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : type1470 a0 a1) (x2 : prod a1 a0) := fun y0 : a1 => ~ ((fun y1 : a1 => exists y2 : a0, ((x0 y1) /\ (x1 y1 y2)) /\ (x2 = (@pair a1 a0 y1 y2))) y0).
Definition term231 (a0 : Type') (a1 : Type') (x0 : a1) (x1 : a1 -> Prop) (x2 : type1470 a0 a1) (x3 : prod a1 a0) := fun y0 : a1 => ~ ((fun y1 : a1 => exists y2 : a0, (((y1 = x0) \/ (x1 y1)) /\ (x2 y1 y2)) /\ (x3 = (@pair a1 a0 y1 y2))) y0).
Definition term422 (a0 : Type') (x0 : a0 -> Prop) (x1 : a0) := ~ (x0 x1).
Definition term1699 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) := fun y0 : type619 a0 a1 => forall y1 : a0 -> Prop, exists y2 : type465 a0 a1, forall y3 : type1413 a0 a1, forall y4 : prod a0 a1, (~ (x0 y1 y3 y4)) \/ (@SETSPEC (prod a0 a1) y4 ((@IN a0 (y0 y1 y3 y4) y1) /\ (@IN a1 (y2 y3 y4) (y3 (y0 y1 y3 y4)))) (@pair a0 a1 (y0 y1 y3 y4) (y2 y3 y4))).
Definition term1647 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : a0 -> Prop) := fun y0 : type464 a0 a1 => forall y1 : type1413 a0 a1, exists y2 : type1208 a0 a1, forall y3 : prod a0 a1, (~ (x0 x1 y1 y3)) \/ (@SETSPEC (prod a0 a1) y3 ((@IN a0 (y0 y1 y3) x1) /\ (@IN a1 (y2 y3) (y1 (y0 y1 y3)))) (@pair a0 a1 (y0 y1 y3) (y2 y3))).
Definition term443 (a0 : Type') (a1 : Type') (x0 : type1470 a0 a1) (x1 : a0) := fun y0 : a1 => x0 y0 x1.
Definition term1262 (a0 : Type') (x0 : a0) (x1 : a0 -> Prop) := imp (~ (@IN a0 x0 x1)).
Definition term463 (a0 : Type') (a1 : Type') (x0 : a1) (x1 : type1470 a0 a1) (x2 : a1) (x3 : a0) (x4 : prod a1 a0) := @eq Prop ((fun y0 : prod a1 a0 => (~ (x2 = x0)) \/ ((~ (x1 x2 x3)) \/ (~ (y0 = (@pair a1 a0 x2 x3))))) x4).
Definition term457 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : type1470 a0 a1) (x2 : a1) (x3 : a0) (x4 : prod a1 a0) := @eq Prop ((fun y0 : prod a1 a0 => (~ (x0 x2)) \/ ((~ (x1 x2 x3)) \/ (~ (y0 = (@pair a1 a0 x2 x3))))) x4).
Definition term1442 (a0 : Type') (a1 : Type') (x0 : prod a0 a1) (x1 : a0 -> Prop) (x2 : type1413 a0 a1) := fun y0 : a0 => exists y1 : a1, @SETSPEC (prod a0 a1) x0 ((@IN a0 y0 x1) /\ (@IN a1 y1 (x2 y0))) (@pair a0 a1 y0 y1).
Definition term876 (a0 : Type') (a1 : Type') (x0 : prod a0 a1) (x1 : a0) (x2 : a0 -> Prop) (x3 : type1413 a0 a1) := fun y0 : a0 => exists y1 : a1, @SETSPEC (prod a0 a1) x0 (((y0 = x1) \/ (@IN a0 y0 x2)) /\ (@IN a1 y1 (x3 y0))) (@pair a0 a1 y0 y1).
Definition term875 (a0 : Type') (a1 : Type') (x0 : prod a0 a1) (x1 : a0) (x2 : a0 -> Prop) (x3 : type1413 a0 a1) := fun y0 : a0 => exists y1 : a1, @SETSPEC (prod a0 a1) x0 ((@IN a0 y0 (@INSERT a0 x1 x2)) /\ (@IN a1 y1 (x3 y0))) (@pair a0 a1 y0 y1).
Definition term770 (a0 : Type') (a1 : Type') (x0 : prod a0 a1) (x1 : type1413 a0 a1) := fun y0 : a0 => exists y1 : a1, @SETSPEC (prod a0 a1) x0 ((@IN a0 y0 (@EMPTY a0)) /\ (@IN a1 y1 (x1 y0))) (@pair a0 a1 y0 y1).
Definition term277 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : prod a1 a0) (x2 : type1470 a0 a1) (x3 : a1) := or ((exists y0 : a1, exists y1 : a0, (((y0 = x3) \/ (x0 y0)) /\ (x2 y0 y1)) /\ (x1 = (@pair a1 a0 y0 y1))) /\ ((forall y0 : a1, forall y1 : a0, ((~ (x0 y0)) \/ (~ (x2 y0 y1))) \/ (~ (x1 = (@pair a1 a0 y0 y1)))) /\ (forall y0 : a0, (~ (x1 = (@pair a1 a0 x3 y0))) \/ (~ (x2 x3 y0))))).
Definition term732 (a0 : Type') (a1 : Type') (x0 : nat) (x1 : Prop) := (((@CARD a0 (@EMPTY a0)) = x0) = ((NUMERAL 0) = x0)) -> (((NUMERAL 0) = x0) -> (forall y0 : type1413 a0 a1, forall y1 : nat, (forall y2 : a0, (@IN a0 y2 (@EMPTY a0)) -> @HAS_SIZE a1 (y0 y2) y1) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y2 : prod a0 a1 => exists y3 : a0, exists y4 : a1, @SETSPEC (prod a0 a1) y2 ((@IN a0 y3 (@EMPTY a0)) /\ (@IN a1 y4 (y0 y3))) (@pair a0 a1 y3 y4))) (Nat.mul x0 y1)) = x1) -> (((@CARD a0 (@EMPTY a0)) = x0) -> forall y0 : type1413 a0 a1, forall y1 : nat, (forall y2 : a0, (@IN a0 y2 (@EMPTY a0)) -> @HAS_SIZE a1 (y0 y2) y1) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y2 : prod a0 a1 => exists y3 : a0, exists y4 : a1, @SETSPEC (prod a0 a1) y2 ((@IN a0 y3 (@EMPTY a0)) /\ (@IN a1 y4 (y0 y3))) (@pair a0 a1 y3 y4))) (Nat.mul x0 y1)) = (((NUMERAL 0) = x0) -> x1).
Definition term218 (a0 : Type') (x0 : a0 -> Prop) := ~ (ex x0).
Definition term1761 (a0 : Type') (x0 : a0 -> Prop) := ~ (all x0).
Definition term2038 (a0 : Type') (x0 : a0) (x1 : a0) (x2 : type1364 a0) (x3 : type1364 a0) := (x0 = x1) /\ (x2 = x3).
Definition term948 (a0 : Type') (a1 : Type') (x0 : prod a0 a1) := fun y0 : prod a0 a1 => False /\ (x0 = y0).
Definition term156 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : type1470 a0 a1) (x2 : prod a1 a0) := fun y0 : a1 => exists y1 : a0, ((x0 y0) /\ (x1 y0 y1)) /\ (x2 = (@pair a1 a0 y0 y1)).
Definition term106 (a0 : Type') (a1 : Type') (x0 : a1) (x1 : a1 -> Prop) (x2 : type1470 a0 a1) (x3 : prod a1 a0) := fun y0 : a1 => exists y1 : a0, (((y0 = x0) \/ (x1 y0)) /\ (x2 y0 y1)) /\ (x3 = (@pair a1 a0 y0 y1)).
Definition term2067 (a0 : Type') (x0 : a0) (x1 : a0) := ((@I (a0 -> (a0 -> Prop) -> Prop) (@IN a0) x1) = (@I (a0 -> (a0 -> Prop) -> Prop) (@IN a0) x0)) /\ ((@I (a0 -> (a0 -> Prop) -> Prop) (@IN a0) x1) = (@I (a0 -> (a0 -> Prop) -> Prop) (@IN a0) x1)).
Definition term628 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : type1413 a0 a1) (x2 : nat) := forall y0 : nat, ((@CARD a0 x0) = x2) -> (fun y1 : nat => (forall y2 : a0, (@IN a0 y2 x0) -> @HAS_SIZE a1 (x1 y2) y1) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y2 : prod a0 a1 => exists y3 : a0, exists y4 : a1, @SETSPEC (prod a0 a1) y2 ((@IN a0 y3 x0) /\ (@IN a1 y4 (x1 y3))) (@pair a0 a1 y3 y4))) (Nat.mul x2 y1)) y0.
Definition term561 (a0 : Type') (x0 : a0) (x1 : a0 -> Prop) := @CARD a0 (@INSERT a0 x0 x1).
Definition term1545 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : prod a0 a1) (x2 : a0 -> Prop) (x3 : type1413 a0 a1) := (~ (x0 x2 x3 x1)) \/ (exists y0 : a0, (fun y1 : a0 => exists y2 : a1, @SETSPEC (prod a0 a1) x1 ((@IN a0 y1 x2) /\ (@IN a1 y2 (x3 y1))) (@pair a0 a1 y1 y2)) y0).
Definition term763 (a0 : Type') (a1 : Type') (x0 : prod a0 a1) (x1 : a1) (x2 : type1413 a0 a1) (x3 : a0) := @SETSPEC (prod a0 a1) x0 ((@IN a0 x3 (@EMPTY a0)) /\ (@IN a1 x1 (x2 x3))).
Definition term993 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a0 -> Prop) (x2 : type1413 a0 a1) (x3 : nat) := @eq Prop (forall y0 : a0, ((y0 = x0) -> @HAS_SIZE a1 (x2 y0) x3) /\ ((@IN a0 y0 x1) -> @HAS_SIZE a1 (x2 y0) x3)).
Definition term46 (x0 : Prop) (x1 : Prop) := forall y0 : Prop, (x0 \/ (x1 \/ y0)) = ((x0 \/ x1) \/ y0).
Definition term1940 (a0 : Type') (a1 : Type') := and (forall y0 : a0, (fun y1 : a0 => forall y2 : a1, forall y3 : a0, forall y4 : a1, ((@pair a0 a1 y1 y2) = (@pair a0 a1 y3 y4)) \/ ((~ (y1 = y3)) \/ (~ (y2 = y4)))) y0).
Definition term1896 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a1) := and (forall y0 : a0, (fun y1 : a0 => forall y2 : a1, ((@pair a0 a1 x0 x1) = (@pair a0 a1 y1 y2)) \/ ((~ (x0 = y1)) \/ (~ (x1 = y2)))) y0).
Definition term997 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : type1413 a0 a1) (x2 : nat) := and (forall y0 : a0, (fun y1 : a0 => (y1 = x0) -> @HAS_SIZE a1 (x1 y1) x2) y0).
Definition term1722 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : type619 a0 a1) (x2 : type620 a0 a1) := forall y0 : a0 -> Prop, forall y1 : type1413 a0 a1, forall y2 : prod a0 a1, (~ (x0 y0 y1 y2)) \/ (@SETSPEC (prod a0 a1) y2 ((@IN a0 (x1 y0 y1 y2) y0) /\ (@IN a1 (x2 y0 y1 y2) (y1 (x1 y0 y1 y2)))) (@pair a0 a1 (x1 y0 y1 y2) (x2 y0 y1 y2))).
Definition term1541 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) := forall y0 : a0 -> Prop, forall y1 : type1413 a0 a1, forall y2 : prod a0 a1, (~ (x0 y0 y1 y2)) \/ (exists y3 : a0, exists y4 : a1, @SETSPEC (prod a0 a1) y2 ((@IN a0 y3 y0) /\ (@IN a1 y4 (y1 y3))) (@pair a0 a1 y3 y4)).
Definition term1536 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) := forall y0 : a0 -> Prop, forall y1 : type1413 a0 a1, forall y2 : prod a0 a1, (x0 y0 y1 y2) \/ (forall y3 : a0, forall y4 : a1, ~ (@SETSPEC (prod a0 a1) y2 ((@IN a0 y3 y0) /\ (@IN a1 y4 (y1 y3))) (@pair a0 a1 y3 y4))).
Definition term1472 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) := forall y0 : a0 -> Prop, forall y1 : type1413 a0 a1, forall y2 : prod a0 a1, ((x0 y0 y1 y2) \/ (forall y3 : a0, forall y4 : a1, ~ (@SETSPEC (prod a0 a1) y2 ((@IN a0 y3 y0) /\ (@IN a1 y4 (y1 y3))) (@pair a0 a1 y3 y4)))) /\ ((~ (x0 y0 y1 y2)) \/ (exists y3 : a0, exists y4 : a1, @SETSPEC (prod a0 a1) y2 ((@IN a0 y3 y0) /\ (@IN a1 y4 (y1 y3))) (@pair a0 a1 y3 y4))).
Definition term1434 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) := forall y0 : a0 -> Prop, forall y1 : type1413 a0 a1, forall y2 : prod a0 a1, (x0 y0 y1 y2) = (exists y3 : a0, exists y4 : a1, @SETSPEC (prod a0 a1) y2 ((@IN a0 y3 y0) /\ (@IN a1 y4 (y1 y3))) (@pair a0 a1 y3 y4)).
Definition term1365 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : a0) (x2 : a1) (x3 : prod a0 a1) (x4 : a1) (x5 : type1413 a0 a1) (x6 : a0) := forall y0 : a0 -> Prop, forall y1 : nat, forall y2 : nat, (~ (@IN a0 x6 y0)) -> (@FINITE a0 y0) -> (y2 = (S (@CARD a0 y0))) -> (@HAS_SIZE a1 (x5 x6) y1) -> (forall y3 : a0, (@IN a0 y3 y0) -> @HAS_SIZE a1 (x5 y3) y1) -> (forall y3 : type1413 a0 a1, forall y4 : nat, (forall y5 : a0, (@IN a0 y5 y0) -> @HAS_SIZE a1 (y3 y5) y4) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (x0 y0 y3)) (Nat.mul (@CARD a0 y0) y4)) -> (@IN a0 x1 y0) -> (@IN a1 x2 (x5 x1)) -> (x3 = (@pair a0 a1 x1 x2)) -> (x3 = (@pair a0 a1 x6 x4)) -> (@IN a1 x4 (x5 x6)) -> (forall y3 : a0, forall y4 : a1, forall y5 : a0, forall y6 : a1, ((@pair a0 a1 y3 y4) = (@pair a0 a1 y5 y6)) = ((y3 = y5) /\ (y4 = y6))) -> (forall y3 : a0, forall y4 : nat, forall y5 : a0, forall y6 : nat, ((@pair a0 nat y3 y4) = (@pair a0 nat y5 y6)) = ((y3 = y5) /\ (y4 = y6))) -> (forall y3 : a0, forall y4 : prod a0 a1, forall y5 : a0, forall y6 : prod a0 a1, ((@pair a0 (prod a0 a1) y3 y4) = (@pair a0 (prod a0 a1) y5 y6)) = ((y3 = y5) /\ (y4 = y6))) -> (forall y3 : nat, forall y4 : a1, forall y5 : nat, forall y6 : a1, ((@pair nat a1 y3 y4) = (@pair nat a1 y5 y6)) = ((y3 = y5) /\ (y4 = y6))) -> ~ (forall y3 : prod a0 a1, forall y4 : a1, forall y5 : prod a0 a1, forall y6 : a1, ((@pair (prod a0 a1) a1 y3 y4) = (@pair (prod a0 a1) a1 y5 y6)) = ((y3 = y5) /\ (y4 = y6))).
Definition term1275 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a1) (x2 : prod a0 a1) (x3 : a1) (x4 : type1413 a0 a1) (x5 : a0) := forall y0 : a0 -> Prop, forall y1 : nat, forall y2 : nat, (~ (@IN a0 x5 y0)) -> (@FINITE a0 y0) -> (y2 = (S (@CARD a0 y0))) -> (@HAS_SIZE a1 (x4 x5) y1) -> (forall y3 : a0, (@IN a0 y3 y0) -> @HAS_SIZE a1 (x4 y3) y1) -> (forall y3 : type1413 a0 a1, forall y4 : nat, (forall y5 : a0, (@IN a0 y5 y0) -> @HAS_SIZE a1 (y3 y5) y4) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y5 : prod a0 a1 => exists y6 : a0, exists y7 : a1, @SETSPEC (prod a0 a1) y5 ((@IN a0 y6 y0) /\ (@IN a1 y7 (y3 y6))) (@pair a0 a1 y6 y7))) (Nat.mul (@CARD a0 y0) y4)) -> (@IN a0 x0 y0) -> (@IN a1 x1 (x4 x0)) -> (x2 = (@pair a0 a1 x0 x1)) -> (x2 = (@pair a0 a1 x5 x3)) -> (@IN a1 x3 (x4 x5)) -> (forall y3 : a0, forall y4 : a1, forall y5 : a0, forall y6 : a1, ((@pair a0 a1 y3 y4) = (@pair a0 a1 y5 y6)) = ((y3 = y5) /\ (y4 = y6))) -> (forall y3 : a0, forall y4 : nat, forall y5 : a0, forall y6 : nat, ((@pair a0 nat y3 y4) = (@pair a0 nat y5 y6)) = ((y3 = y5) /\ (y4 = y6))) -> (forall y3 : a0, forall y4 : prod a0 a1, forall y5 : a0, forall y6 : prod a0 a1, ((@pair a0 (prod a0 a1) y3 y4) = (@pair a0 (prod a0 a1) y5 y6)) = ((y3 = y5) /\ (y4 = y6))) -> (forall y3 : nat, forall y4 : a1, forall y5 : nat, forall y6 : a1, ((@pair nat a1 y3 y4) = (@pair nat a1 y5 y6)) = ((y3 = y5) /\ (y4 = y6))) -> ~ (forall y3 : prod a0 a1, forall y4 : a1, forall y5 : prod a0 a1, forall y6 : a1, ((@pair (prod a0 a1) a1 y3 y4) = (@pair (prod a0 a1) a1 y5 y6)) = ((y3 = y5) /\ (y4 = y6))).
Definition term1274 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a1) (x2 : prod a0 a1) (x3 : a1) (x4 : type1413 a0 a1) (x5 : a0) := forall y0 : a0 -> Prop, forall y1 : nat, forall y2 : nat, (~ (@IN a0 x5 y0)) -> (@FINITE a0 y0) -> (y2 = (S (@CARD a0 y0))) -> (@HAS_SIZE a1 (x4 x5) y1) -> (forall y3 : a0, (@IN a0 y3 y0) -> @HAS_SIZE a1 (x4 y3) y1) -> (forall y3 : type1413 a0 a1, forall y4 : nat, (forall y5 : a0, (@IN a0 y5 y0) -> @HAS_SIZE a1 (y3 y5) y4) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y5 : prod a0 a1 => exists y6 : a0, exists y7 : a1, @SETSPEC (prod a0 a1) y5 ((@IN a0 y6 y0) /\ (@IN a1 y7 (y3 y6))) (@pair a0 a1 y6 y7))) (Nat.mul (@CARD a0 y0) y4)) -> (@IN a0 x0 y0) -> (@IN a1 x1 (x4 x0)) -> (x2 = (@pair a0 a1 x0 x1)) -> (x2 = (@pair a0 a1 x5 x3)) -> (@IN a1 x3 (x4 x5)) -> (forall y3 : a0, forall y4 : a1, forall y5 : a0, forall y6 : a1, ((@pair a0 a1 y3 y4) = (@pair a0 a1 y5 y6)) = ((y3 = y5) /\ (y4 = y6))) -> (forall y3 : a0, forall y4 : nat, forall y5 : a0, forall y6 : nat, ((@pair a0 nat y3 y4) = (@pair a0 nat y5 y6)) = ((y3 = y5) /\ (y4 = y6))) -> (forall y3 : a0, forall y4 : prod a0 a1, forall y5 : a0, forall y6 : prod a0 a1, ((@pair a0 (prod a0 a1) y3 y4) = (@pair a0 (prod a0 a1) y5 y6)) = ((y3 = y5) /\ (y4 = y6))) -> (forall y3 : nat, forall y4 : a1, forall y5 : nat, forall y6 : a1, ((@pair nat a1 y3 y4) = (@pair nat a1 y5 y6)) = ((y3 = y5) /\ (y4 = y6))) -> (forall y3 : prod a0 a1, forall y4 : a1, forall y5 : prod a0 a1, forall y6 : a1, ((@pair (prod a0 a1) a1 y3 y4) = (@pair (prod a0 a1) a1 y5 y6)) = ((y3 = y5) /\ (y4 = y6))) -> False.
Definition term604 (a0 : Type') (a1 : Type') := forall y0 : a0 -> Prop, forall y1 : nat, forall y2 : type1413 a0 a1, forall y3 : nat, (((@FINITE a0 y0) /\ ((@CARD a0 y0) = y1)) /\ (forall y4 : a0, (@IN a0 y4 y0) -> @HAS_SIZE a1 (y2 y4) y3)) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y4 : prod a0 a1 => exists y5 : a0, exists y6 : a1, @SETSPEC (prod a0 a1) y4 ((@IN a0 y5 y0) /\ (@IN a1 y6 (y2 y5))) (@pair a0 a1 y5 y6))) (Nat.mul y1 y3).
Definition term603 (a0 : Type') (a1 : Type') := forall y0 : a0 -> Prop, forall y1 : nat, forall y2 : type1413 a0 a1, forall y3 : nat, ((@HAS_SIZE a0 y0 y1) /\ (forall y4 : a0, (@IN a0 y4 y0) -> @HAS_SIZE a1 (y2 y4) y3)) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y4 : prod a0 a1 => exists y5 : a0, exists y6 : a1, @SETSPEC (prod a0 a1) y4 ((@IN a0 y5 y0) /\ (@IN a1 y6 (y2 y5))) (@pair a0 a1 y5 y6))) (Nat.mul y1 y3).
Definition term197 (a0 : Type') (a1 : Type') (x0 : a1) := forall y0 : type1470 a0 a1, forall y1 : a1 -> Prop, forall y2 : prod a1 a0, (exists y3 : a1, exists y4 : a0, (((y3 = x0) \/ (y1 y3)) /\ (y0 y3 y4)) /\ (y2 = (@pair a1 a0 y3 y4))) = ((exists y3 : a1, exists y4 : a0, ((y1 y3) /\ (y0 y3 y4)) /\ (y2 = (@pair a1 a0 y3 y4))) \/ (exists y3 : a0, (y2 = (@pair a1 a0 x0 y3)) /\ (y0 x0 y3))).
Definition term32 (a0 : Type') (x0 : a0 -> Prop) := forall y0 : a0 -> Prop, forall y1 : nat, forall y2 : nat, ((@HAS_SIZE a0 x0 y1) /\ ((@HAS_SIZE a0 y0 y2) /\ (@DISJOINT a0 x0 y0))) -> @HAS_SIZE a0 (@UNION a0 x0 y0) (Nat.add y1 y2).
Definition term30 (a0 : Type') := forall y0 : a0 -> Prop, forall y1 : a0 -> Prop, forall y2 : nat, forall y3 : nat, ((@HAS_SIZE a0 y0 y2) /\ ((@HAS_SIZE a0 y1 y3) /\ (@DISJOINT a0 y0 y1))) -> @HAS_SIZE a0 (@UNION a0 y0 y1) (Nat.add y2 y3).
Definition term93 (a0 : Type') (a1 : Type') (x0 : a1) (x1 : a1 -> Prop) (x2 : type1470 a0 a1) (x3 : prod a1 a0) (x4 : a1) (x5 : a0) := (fun y0 : prod a1 a0 => (((x4 = x0) \/ (x1 x4)) /\ (x2 x4 x5)) /\ (x3 = y0)) (@pair a1 a0 x4 x5).
Definition term859 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a0 -> Prop) (x2 : type1413 a0 a1) (x3 : nat) := fun y0 : a0 => (@IN a0 y0 (@INSERT a0 x0 x1)) -> @HAS_SIZE a1 (x2 y0) x3.
Definition term555 (a0 : Type') (x0 : a0) (x1 : a0) (x2 : a0 -> Prop) := @IN a0 x0 (@INSERT a0 x1 x2).
Definition term991 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a0 -> Prop) (x2 : type1413 a0 a1) (x3 : nat) := fun y0 : a0 => ((fun y1 : a0 => (y1 = x0) -> @HAS_SIZE a1 (x2 y1) x3) y0) /\ ((fun y1 : a0 => (@IN a0 y1 x1) -> @HAS_SIZE a1 (x2 y1) x3) y0).
Definition term303 (a0 : Type') (a1 : Type') (x0 : a1) (x1 : a1 -> Prop) (x2 : type1470 a0 a1) (x3 : prod a1 a0) (x4 : a1) (x5 : a0) := and ((fun y0 : a0 => (((x4 = x0) \/ (x1 x4)) /\ (x2 x4 y0)) /\ (x3 = (@pair a1 a0 x4 y0))) x5).
Definition term1602 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : a0 -> Prop) (x2 : type1413 a0 a1) (x3 : type1207 a0 a1) (x4 : prod a0 a1) := (fun y0 : prod a0 a1 => fun y1 : a1 => (~ (x0 x1 x2 y0)) \/ (@SETSPEC (prod a0 a1) y0 ((@IN a0 (x3 y0) x1) /\ (@IN a1 y1 (x2 (x3 y0)))) (@pair a0 a1 (x3 y0) y1))) x4.
Definition term788 (a0 : Type') (a1 : Type') (x0 : nat) := forall y0 : nat, @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y1 : prod a0 a1 => exists y2 : a0, exists y3 : a1, @SETSPEC (prod a0 a1) y1 False (@pair a0 a1 y2 y3))) (Nat.mul x0 y0).
Definition term1520 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) := forall y0 : a0 -> Prop, (forall y1 : type1413 a0 a1, forall y2 : prod a0 a1, (x0 y0 y1 y2) \/ (forall y3 : a0, forall y4 : a1, ~ (@SETSPEC (prod a0 a1) y2 ((@IN a0 y3 y0) /\ (@IN a1 y4 (y1 y3))) (@pair a0 a1 y3 y4)))) /\ (forall y1 : type1413 a0 a1, forall y2 : prod a0 a1, (~ (x0 y0 y1 y2)) \/ (exists y3 : a0, exists y4 : a1, @SETSPEC (prod a0 a1) y2 ((@IN a0 y3 y0) /\ (@IN a1 y4 (y1 y3))) (@pair a0 a1 y3 y4))).
Definition term1496 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : a0 -> Prop) := forall y0 : type1413 a0 a1, (forall y1 : prod a0 a1, (x0 x1 y0 y1) \/ (forall y2 : a0, forall y3 : a1, ~ (@SETSPEC (prod a0 a1) y1 ((@IN a0 y2 x1) /\ (@IN a1 y3 (y0 y2))) (@pair a0 a1 y2 y3)))) /\ (forall y1 : prod a0 a1, (~ (x0 x1 y0 y1)) \/ (exists y2 : a0, exists y3 : a1, @SETSPEC (prod a0 a1) y1 ((@IN a0 y2 x1) /\ (@IN a1 y3 (y0 y2))) (@pair a0 a1 y2 y3))).
Definition term170 (a0 : Type') (a1 : Type') (x0 : a1) (x1 : a0) := @eq (prod a1 a0) ((fun y0 : a0 => @pair a1 a0 x0 y0) x1).
Definition term493 (a0 : Type') (a1 : Type') (x0 : type1470 a0 a1) (x1 : a1) (x2 : a0) (x3 : a1) (x4 : a0) := ~ ((x3 = x1) /\ ((x0 x3 x4) /\ ((@pair a1 a0 x1 x2) = (@pair a1 a0 x3 x4)))).
Definition term1236 (a0 : Type') (a1 : Type') (x0 : a1) (x1 : type1413 a0 a1) (x2 : a0) := imp (@IN a1 x0 (x1 x2)).
Definition term588 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : type1413 a0 a1) (x2 : nat) (x3 : nat) := (((@FINITE a0 x0) /\ ((@CARD a0 x0) = x2)) /\ (forall y0 : a0, (@IN a0 y0 x0) -> @HAS_SIZE a1 (x1 y0) x3)) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y0 : prod a0 a1 => exists y1 : a0, exists y2 : a1, @SETSPEC (prod a0 a1) y0 ((@IN a0 y1 x0) /\ (@IN a1 y2 (x1 y1))) (@pair a0 a1 y1 y2))) (Nat.mul x2 x3).
Definition term9 (a0 : Type') (x0 : a0 -> Prop) (x1 : a0 -> Prop) := (fun y0 : a0 -> Prop => forall y1 : a0, (@IN a0 y1 (@INTER a0 x0 y0)) = ((@IN a0 y1 x0) /\ (@IN a0 y1 y0))) x1.
Definition term2024 (a0 : Type') (x0 : a0) (x1 : a0) (x2 : type1364 a0) (x3 : type1364 a0) := (~ (x0 = x1)) \/ (((@I (a0 -> (a0 -> Prop) -> Prop) x2 x0) = (@I (a0 -> (a0 -> Prop) -> Prop) x3 x1)) \/ (~ (x2 = x3))).
Definition term354 (a0 : Type') (x0 : Prop) (x1 : a0 -> Prop) := exists y0 : a0, x0 /\ (x1 y0).
Definition term1193 (a0 : Type') (a1 : Type') (x0 : prod a0 a1) (x1 : a0 -> Prop) (x2 : type1413 a0 a1) := and (@IN (prod a0 a1) x0 (@GSPEC (prod a0 a1) (fun y0 : prod a0 a1 => exists y1 : a0, exists y2 : a1, @SETSPEC (prod a0 a1) y0 ((@IN a0 y1 x1) /\ (@IN a1 y2 (x2 y1))) (@pair a0 a1 y1 y2)))).
Definition term1257 (a0 : Type') (x0 : nat) (x1 : a0 -> Prop) := imp (x0 = (S (@CARD a0 x1))).
Definition term182 (x0 : Prop) := (~ x0) -> False.
Definition term1931 (a0 : Type') (a1 : Type') (x0 : a0) := and ((fun y0 : a0 => forall y1 : a1, forall y2 : a0, forall y3 : a1, ((@pair a0 a1 y0 y1) = (@pair a0 a1 y2 y3)) \/ ((~ (y0 = y2)) \/ (~ (y1 = y3)))) x0).
Definition term1853 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a0) (x2 : a1) := forall y0 : a1, (((@pair a0 a1 x0 x2) = (@pair a0 a1 x1 y0)) \/ ((~ (x0 = x1)) \/ (~ (x2 = y0)))) /\ ((~ ((@pair a0 a1 x0 x2) = (@pair a0 a1 x1 y0))) \/ ((x0 = x1) /\ (x2 = y0))).
Definition term1052 := (forall y0 : nat, forall y1 : nat, (Nat.mul (S y0) y1) = (Nat.add (Nat.mul y0 y1) y1)) /\ (forall y0 : nat, forall y1 : nat, (Nat.mul y0 (S y1)) = (Nat.add y0 (Nat.mul y0 y1))).
Definition term1630 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : a0 -> Prop) := fun y0 : type1413 a0 a1 => fun y1 : type1207 a0 a1 => exists y2 : type1208 a0 a1, forall y3 : prod a0 a1, (~ (x0 x1 y0 y3)) \/ (@SETSPEC (prod a0 a1) y3 ((@IN a0 (y1 y3) x1) /\ (@IN a1 (y2 y3) (y0 (y1 y3)))) (@pair a0 a1 (y1 y3) (y2 y3))).
Definition term313 (a0 : Type') (x0 : a0 -> Prop) (x1 : Prop) := (exists y0 : a0, x0 y0) \/ x1.
Definition term2064 (a0 : Type') (x0 : type686 a0) (x1 : type686 a0) (x2 : type686 a0) := imp (~ ((~ (x1 = x0)) \/ (~ (x1 = x2)))).
Definition term2039 (a0 : Type') (x0 : a0) (x1 : a0) (x2 : type1364 a0) (x3 : type1364 a0) := imp (~ ((~ (x0 = x1)) \/ (~ (x2 = x3)))).
Definition term1911 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a1) := ((fun y0 : a1 => forall y1 : a0, forall y2 : a1, ((@pair a0 a1 x0 y0) = (@pair a0 a1 y1 y2)) \/ ((~ (x0 = y1)) \/ (~ (y0 = y2)))) x1) /\ ((fun y0 : a1 => forall y1 : a0, forall y2 : a1, (~ ((@pair a0 a1 x0 y0) = (@pair a0 a1 y1 y2))) \/ ((x0 = y1) /\ (y0 = y2))) x1).
Definition term452 (a0 : Type') (a1 : Type') (x0 : prod a1 a0) (x1 : type1470 a0 a1) (x2 : a1) (x3 : a0) := @eq Prop ((~ (x0 = (@pair a1 a0 x2 x3))) \/ (~ (x1 x2 x3))).
Definition term1200 (a0 : Type') (a1 : Type') (x0 : prod a0 a1) (x1 : a0) (x2 : a1) := and (x0 = (@pair a0 a1 x1 x2)).
Definition term172 (a0 : Type') (a1 : Type') (x0 : prod a1 a0) (x1 : a1) (x2 : a0) := and (x0 = (@pair a1 a0 x1 x2)).
Definition term146 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : type1470 a0 a1) (x2 : a1) (x3 : a0) (x4 : prod a1 a0) (x5 : prod a1 a0) := (fun y0 : prod a1 a0 => ((x0 x2) /\ (x1 x2 x3)) /\ (x4 = y0)) x5.
Definition term531 (x0 : Prop) := fun y0 : Prop => y0 = (y0 /\ (x0 -> y0)).
Definition term1176 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : a1) (x2 : type1413 a0 a1) (x3 : a0) (x4 : prod a0 a1) := fun y0 : prod a0 a1 => ((@IN a0 x3 x0) /\ (@IN a1 x1 (x2 x3))) /\ (x4 = y0).
Definition term1924 (a0 : Type') (a1 : Type') := fun y0 : a0 => (forall y1 : a1, forall y2 : a0, forall y3 : a1, ((@pair a0 a1 y0 y1) = (@pair a0 a1 y2 y3)) \/ ((~ (y0 = y2)) \/ (~ (y1 = y3)))) /\ (forall y1 : a1, forall y2 : a0, forall y3 : a1, (~ ((@pair a0 a1 y0 y1) = (@pair a0 a1 y2 y3))) \/ ((y0 = y2) /\ (y1 = y3))).
Definition term379 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : prod a1 a0) (x2 : type1470 a0 a1) (x3 : a1) := fun y0 : a1 => exists y1 : a0, (forall y2 : a1, forall y3 : a0, (((~ (y2 = x3)) /\ (~ (x0 y2))) \/ (~ (x2 y2 y3))) \/ (~ (x1 = (@pair a1 a0 y2 y3)))) /\ ((((x0 y0) /\ (x2 y0 y1)) /\ (x1 = (@pair a1 a0 y0 y1))) \/ ((x1 = (@pair a1 a0 x3 y1)) /\ (x2 x3 y1))).
Definition term295 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : prod a1 a0) (x2 : type1470 a0 a1) (x3 : a1) := exists y0 : a1, (exists y1 : a0, (((y0 = x3) \/ (x0 y0)) /\ (x2 y0 y1)) /\ (x1 = (@pair a1 a0 y0 y1))) /\ ((forall y1 : a1, forall y2 : a0, ((~ (x0 y1)) \/ (~ (x2 y1 y2))) \/ (~ (x1 = (@pair a1 a0 y1 y2)))) /\ (forall y1 : a0, (~ (x1 = (@pair a1 a0 x3 y1))) \/ (~ (x2 x3 y1)))).
Definition term202 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : prod a1 a0) (x2 : type1470 a0 a1) (x3 : a1) := (~ ((exists y0 : a1, exists y1 : a0, (((y0 = x3) \/ (x0 y0)) /\ (x2 y0 y1)) /\ (x1 = (@pair a1 a0 y0 y1))) = ((exists y0 : a1, exists y1 : a0, ((x0 y0) /\ (x2 y0 y1)) /\ (x1 = (@pair a1 a0 y0 y1))) \/ (exists y0 : a0, (x1 = (@pair a1 a0 x3 y0)) /\ (x2 x3 y0))))) -> False.
Definition term1579 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : a0 -> Prop) (x2 : type1413 a0 a1) (x3 : prod a0 a1) := (fun y0 : prod a0 a1 => fun y1 : a0 => exists y2 : a1, (~ (x0 x1 x2 y0)) \/ (@SETSPEC (prod a0 a1) y0 ((@IN a0 y1 x1) /\ (@IN a1 y2 (x2 y1))) (@pair a0 a1 y1 y2))) x3.
Definition term1815 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : type1413 a0 a1) (x2 : a0 -> Prop) := fun y0 : nat -> a0 => forall y1 : nat, ((@IN a0 (y0 y1) x2) /\ (~ (@HAS_SIZE a1 (x1 (y0 y1)) y1))) \/ (@HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (x0 x2 x1)) (Nat.mul (@CARD a0 x2) y1)).
Definition term1814 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : type1413 a0 a1) (x2 : a0 -> Prop) := fun y0 : nat -> a0 => forall y1 : nat, (fun y2 : nat => fun y3 : a0 => ((@IN a0 y3 x2) /\ (~ (@HAS_SIZE a1 (x1 y3) y2))) \/ (@HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (x0 x2 x1)) (Nat.mul (@CARD a0 x2) y2))) y1 (y0 y1).
Definition term1039 (a0 : Type') (a1 : Type') (x0 : type1413 a0 a1) (x1 : a0) (x2 : nat) := True -> @HAS_SIZE a1 (x0 x1) x2.
Definition term1015 (a0 : Type') (a1 : Type') (x0 : type1413 a0 a1) (x1 : a0) (x2 : nat) := forall y0 : a0, ((fun y1 : a0 => y1 = x1) y0) -> @HAS_SIZE a1 (x0 x1) x2.
Definition term424 (a0 : Type') (a1 : Type') (x0 : a1) (x1 : a1 -> Prop) (x2 : type1470 a0 a1) (x3 : prod a1 a0) (x4 : a1) (x5 : a0) := (((~ (x4 = x0)) \/ (~ (x2 x4 x5))) /\ ((~ (x1 x4)) \/ (~ (x2 x4 x5)))) \/ (~ (x3 = (@pair a1 a0 x4 x5))).
Definition term1068 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a0 -> Prop) (x2 : type1413 a0 a1) (x3 : nat) (x4 : nat) := (((@CARD a0 x1) = (@CARD a0 x1)) -> forall y0 : type1413 a0 a1, forall y1 : nat, (forall y2 : a0, (@IN a0 y2 x1) -> @HAS_SIZE a1 (y0 y2) y1) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y2 : prod a0 a1 => exists y3 : a0, exists y4 : a1, @SETSPEC (prod a0 a1) y2 ((@IN a0 y3 x1) /\ (@IN a1 y4 (y0 y3))) (@pair a0 a1 y3 y4))) (Nat.mul (@CARD a0 x1) y1)) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y0 : prod a0 a1 => exists y1 : a0, exists y2 : a1, @SETSPEC (prod a0 a1) y0 (((y1 = x0) \/ (@IN a0 y1 x1)) /\ (@IN a1 y2 (x2 y1))) (@pair a0 a1 y1 y2))) (Nat.mul x3 x4).
Definition term676 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : nat) := (fun y0 : nat => ((@CARD a0 x0) = y0) -> forall y1 : type1413 a0 a1, forall y2 : nat, (forall y3 : a0, (@IN a0 y3 x0) -> @HAS_SIZE a1 (y1 y3) y2) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y3 : prod a0 a1 => exists y4 : a0, exists y5 : a1, @SETSPEC (prod a0 a1) y3 ((@IN a0 y4 x0) /\ (@IN a1 y5 (y1 y4))) (@pair a0 a1 y4 y5))) (Nat.mul y0 y2)) x1.
Definition term2070 (a0 : Type') (x0 : a0 -> Prop) (x1 : type686 a0) (x2 : type686 a0) (x3 : a0 -> Prop) := (@I ((a0 -> Prop) -> Prop) x1 x0) \/ ((~ (x2 = x1)) \/ (~ (@I ((a0 -> Prop) -> Prop) x2 x3))).
Definition term1108 (a0 : Type') (a1 : Type') (x0 : type1413 a0 a1) (x1 : nat) (x2 : a0) (x3 : a0 -> Prop) := ((@IN a0 x2 x3) -> (@HAS_SIZE a1 (x0 x2) x1) = True) -> ((@IN a0 x2 x3) -> @HAS_SIZE a1 (x0 x2) x1) = ((@IN a0 x2 x3) -> True).
Definition term382 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : prod a1 a0) (x2 : type1470 a0 a1) (x3 : a1) := (exists y0 : a1, (fun y1 : a1 => exists y2 : a0, ((((y1 = x3) \/ (x0 y1)) /\ (x2 y1 y2)) /\ (x1 = (@pair a1 a0 y1 y2))) /\ ((forall y3 : a1, forall y4 : a0, ((~ (x0 y3)) \/ (~ (x2 y3 y4))) \/ (~ (x1 = (@pair a1 a0 y3 y4)))) /\ (forall y3 : a0, (~ (x1 = (@pair a1 a0 x3 y3))) \/ (~ (x2 x3 y3))))) y0) \/ (exists y0 : a1, (fun y1 : a1 => exists y2 : a0, (forall y3 : a1, forall y4 : a0, (((~ (y3 = x3)) /\ (~ (x0 y3))) \/ (~ (x2 y3 y4))) \/ (~ (x1 = (@pair a1 a0 y3 y4)))) /\ ((((x0 y1) /\ (x2 y1 y2)) /\ (x1 = (@pair a1 a0 y1 y2))) \/ ((x1 = (@pair a1 a0 x3 y2)) /\ (x2 x3 y2)))) y0).
Definition term1089 (a0 : Type') (a1 : Type') (x0 : a0 -> a1) (x1 : a0 -> Prop) := forall y0 : nat, ((forall y1 : a0, forall y2 : a0, ((@IN a0 y1 x1) /\ ((@IN a0 y2 x1) /\ ((x0 y1) = (x0 y2)))) -> y1 = y2) /\ (@HAS_SIZE a0 x1 y0)) -> @HAS_SIZE a1 (@IMAGE a0 a1 x0 x1) y0.
Definition term973 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a0 -> Prop) (x2 : type1413 a0 a1) (x3 : nat) := imp (forall y0 : a0, ((y0 = x0) -> @HAS_SIZE a1 (x2 y0) x3) /\ ((@IN a0 y0 x1) -> @HAS_SIZE a1 (x2 y0) x3)).
Definition term1152 (a0 : Type') (a1 : Type') (x0 : nat) (x1 : a0 -> Prop) (x2 : type1413 a0 a1) (x3 : a0) := (@HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y0 : prod a0 a1 => exists y1 : a0, exists y2 : a1, @SETSPEC (prod a0 a1) y0 ((@IN a0 y1 x1) /\ (@IN a1 y2 (x2 y1))) (@pair a0 a1 y1 y2))) (Nat.mul (@CARD a0 x1) x0)) /\ ((@HAS_SIZE (prod a0 a1) (@IMAGE a1 (prod a0 a1) (fun y0 : a1 => @pair a0 a1 x3 y0) (x2 x3)) x0) /\ (@DISJOINT (prod a0 a1) (@GSPEC (prod a0 a1) (fun y0 : prod a0 a1 => exists y1 : a0, exists y2 : a1, @SETSPEC (prod a0 a1) y0 ((@IN a0 y1 x1) /\ (@IN a1 y2 (x2 y1))) (@pair a0 a1 y1 y2))) (@IMAGE a1 (prod a0 a1) (fun y0 : a1 => @pair a0 a1 x3 y0) (x2 x3)))).
Definition term1664 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : a0 -> Prop) (x2 : type464 a0 a1) (x3 : type465 a0 a1) (x4 : type1413 a0 a1) := (fun y0 : type1413 a0 a1 => fun y1 : type1208 a0 a1 => forall y2 : prod a0 a1, (~ (x0 x1 y0 y2)) \/ (@SETSPEC (prod a0 a1) y2 ((@IN a0 (x2 y0 y2) x1) /\ (@IN a1 (y1 y2) (y0 (x2 y0 y2)))) (@pair a0 a1 (x2 y0 y2) (y1 y2)))) x4 (x3 x4).
Definition term2099 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : type1413 a0 a1) := (fun y0 : type1413 a0 a1 => forall y1 : a1, forall y2 : prod a0 a1, forall y3 : a1, forall y4 : a0, forall y5 : a0 -> Prop, forall y6 : nat, forall y7 : nat, (~ (@IN a0 x0 y5)) -> (@FINITE a0 y5) -> (y7 = (S (@CARD a0 y5))) -> (@HAS_SIZE a1 (y0 x0) y6) -> (forall y8 : a0, (@IN a0 y8 y5) -> @HAS_SIZE a1 (y0 y8) y6) -> (forall y8 : type1413 a0 a1, forall y9 : nat, (forall y10 : a0, (@IN a0 y10 y5) -> @HAS_SIZE a1 (y8 y10) y9) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y10 : prod a0 a1 => exists y11 : a0, exists y12 : a1, @SETSPEC (prod a0 a1) y10 ((@IN a0 y11 y5) /\ (@IN a1 y12 (y8 y11))) (@pair a0 a1 y11 y12))) (Nat.mul (@CARD a0 y5) y9)) -> (@IN a0 y4 y5) -> (@IN a1 y3 (y0 y4)) -> (y2 = (@pair a0 a1 y4 y3)) -> (y2 = (@pair a0 a1 x0 y1)) -> (@IN a1 y1 (y0 x0)) -> (forall y8 : a0, forall y9 : a1, forall y10 : a0, forall y11 : a1, ((@pair a0 a1 y8 y9) = (@pair a0 a1 y10 y11)) = ((y8 = y10) /\ (y9 = y11))) -> (forall y8 : a0, forall y9 : nat, forall y10 : a0, forall y11 : nat, ((@pair a0 nat y8 y9) = (@pair a0 nat y10 y11)) = ((y8 = y10) /\ (y9 = y11))) -> (forall y8 : a0, forall y9 : prod a0 a1, forall y10 : a0, forall y11 : prod a0 a1, ((@pair a0 (prod a0 a1) y8 y9) = (@pair a0 (prod a0 a1) y10 y11)) = ((y8 = y10) /\ (y9 = y11))) -> (forall y8 : nat, forall y9 : a1, forall y10 : nat, forall y11 : a1, ((@pair nat a1 y8 y9) = (@pair nat a1 y10 y11)) = ((y8 = y10) /\ (y9 = y11))) -> (forall y8 : prod a0 a1, forall y9 : a1, forall y10 : prod a0 a1, forall y11 : a1, ((@pair (prod a0 a1) a1 y8 y9) = (@pair (prod a0 a1) a1 y10 y11)) = ((y8 = y10) /\ (y9 = y11))) -> False) x1.
Definition term1357 (a0 : Type') (a1 : Type') (x0 : nat) (x1 : nat) (x2 : type621 a0 a1) (x3 : a0 -> Prop) (x4 : a0) (x5 : a1) (x6 : prod a0 a1) (x7 : a1) (x8 : type1413 a0 a1) (x9 : a0) := (x0 = (S (@CARD a0 x3))) -> (@HAS_SIZE a1 (x8 x9) x1) -> (forall y0 : a0, (@IN a0 y0 x3) -> @HAS_SIZE a1 (x8 y0) x1) -> (forall y0 : type1413 a0 a1, forall y1 : nat, (forall y2 : a0, (@IN a0 y2 x3) -> @HAS_SIZE a1 (y0 y2) y1) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (x2 x3 y0)) (Nat.mul (@CARD a0 x3) y1)) -> (@IN a0 x4 x3) -> (@IN a1 x5 (x8 x4)) -> (x6 = (@pair a0 a1 x4 x5)) -> (x6 = (@pair a0 a1 x9 x7)) -> (@IN a1 x7 (x8 x9)) -> (forall y0 : a0, forall y1 : a1, forall y2 : a0, forall y3 : a1, ((@pair a0 a1 y0 y1) = (@pair a0 a1 y2 y3)) = ((y0 = y2) /\ (y1 = y3))) -> (forall y0 : a0, forall y1 : nat, forall y2 : a0, forall y3 : nat, ((@pair a0 nat y0 y1) = (@pair a0 nat y2 y3)) = ((y0 = y2) /\ (y1 = y3))) -> (forall y0 : a0, forall y1 : prod a0 a1, forall y2 : a0, forall y3 : prod a0 a1, ((@pair a0 (prod a0 a1) y0 y1) = (@pair a0 (prod a0 a1) y2 y3)) = ((y0 = y2) /\ (y1 = y3))) -> (forall y0 : nat, forall y1 : a1, forall y2 : nat, forall y3 : a1, ((@pair nat a1 y0 y1) = (@pair nat a1 y2 y3)) = ((y0 = y2) /\ (y1 = y3))) -> ~ (forall y0 : prod a0 a1, forall y1 : a1, forall y2 : prod a0 a1, forall y3 : a1, ((@pair (prod a0 a1) a1 y0 y1) = (@pair (prod a0 a1) a1 y2 y3)) = ((y0 = y2) /\ (y1 = y3))).
Definition term1259 (a0 : Type') (a1 : Type') (x0 : nat) (x1 : nat) (x2 : a0 -> Prop) (x3 : a0) (x4 : a1) (x5 : prod a0 a1) (x6 : a1) (x7 : type1413 a0 a1) (x8 : a0) := (x0 = (S (@CARD a0 x2))) -> (@HAS_SIZE a1 (x7 x8) x1) -> (forall y0 : a0, (@IN a0 y0 x2) -> @HAS_SIZE a1 (x7 y0) x1) -> (forall y0 : type1413 a0 a1, forall y1 : nat, (forall y2 : a0, (@IN a0 y2 x2) -> @HAS_SIZE a1 (y0 y2) y1) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y2 : prod a0 a1 => exists y3 : a0, exists y4 : a1, @SETSPEC (prod a0 a1) y2 ((@IN a0 y3 x2) /\ (@IN a1 y4 (y0 y3))) (@pair a0 a1 y3 y4))) (Nat.mul (@CARD a0 x2) y1)) -> (@IN a0 x3 x2) -> (@IN a1 x4 (x7 x3)) -> (x5 = (@pair a0 a1 x3 x4)) -> (x5 = (@pair a0 a1 x8 x6)) -> (@IN a1 x6 (x7 x8)) -> (forall y0 : a0, forall y1 : a1, forall y2 : a0, forall y3 : a1, ((@pair a0 a1 y0 y1) = (@pair a0 a1 y2 y3)) = ((y0 = y2) /\ (y1 = y3))) -> (forall y0 : a0, forall y1 : nat, forall y2 : a0, forall y3 : nat, ((@pair a0 nat y0 y1) = (@pair a0 nat y2 y3)) = ((y0 = y2) /\ (y1 = y3))) -> (forall y0 : a0, forall y1 : prod a0 a1, forall y2 : a0, forall y3 : prod a0 a1, ((@pair a0 (prod a0 a1) y0 y1) = (@pair a0 (prod a0 a1) y2 y3)) = ((y0 = y2) /\ (y1 = y3))) -> (forall y0 : nat, forall y1 : a1, forall y2 : nat, forall y3 : a1, ((@pair nat a1 y0 y1) = (@pair nat a1 y2 y3)) = ((y0 = y2) /\ (y1 = y3))) -> ~ (forall y0 : prod a0 a1, forall y1 : a1, forall y2 : prod a0 a1, forall y3 : a1, ((@pair (prod a0 a1) a1 y0 y1) = (@pair (prod a0 a1) a1 y2 y3)) = ((y0 = y2) /\ (y1 = y3))).
Definition term1258 (a0 : Type') (a1 : Type') (x0 : nat) (x1 : nat) (x2 : a0 -> Prop) (x3 : a0) (x4 : a1) (x5 : prod a0 a1) (x6 : a1) (x7 : type1413 a0 a1) (x8 : a0) := (x0 = (S (@CARD a0 x2))) -> (@HAS_SIZE a1 (x7 x8) x1) -> (forall y0 : a0, (@IN a0 y0 x2) -> @HAS_SIZE a1 (x7 y0) x1) -> (forall y0 : type1413 a0 a1, forall y1 : nat, (forall y2 : a0, (@IN a0 y2 x2) -> @HAS_SIZE a1 (y0 y2) y1) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y2 : prod a0 a1 => exists y3 : a0, exists y4 : a1, @SETSPEC (prod a0 a1) y2 ((@IN a0 y3 x2) /\ (@IN a1 y4 (y0 y3))) (@pair a0 a1 y3 y4))) (Nat.mul (@CARD a0 x2) y1)) -> (@IN a0 x3 x2) -> (@IN a1 x4 (x7 x3)) -> (x5 = (@pair a0 a1 x3 x4)) -> (x5 = (@pair a0 a1 x8 x6)) -> (@IN a1 x6 (x7 x8)) -> (forall y0 : a0, forall y1 : a1, forall y2 : a0, forall y3 : a1, ((@pair a0 a1 y0 y1) = (@pair a0 a1 y2 y3)) = ((y0 = y2) /\ (y1 = y3))) -> (forall y0 : a0, forall y1 : nat, forall y2 : a0, forall y3 : nat, ((@pair a0 nat y0 y1) = (@pair a0 nat y2 y3)) = ((y0 = y2) /\ (y1 = y3))) -> (forall y0 : a0, forall y1 : prod a0 a1, forall y2 : a0, forall y3 : prod a0 a1, ((@pair a0 (prod a0 a1) y0 y1) = (@pair a0 (prod a0 a1) y2 y3)) = ((y0 = y2) /\ (y1 = y3))) -> (forall y0 : nat, forall y1 : a1, forall y2 : nat, forall y3 : a1, ((@pair nat a1 y0 y1) = (@pair nat a1 y2 y3)) = ((y0 = y2) /\ (y1 = y3))) -> (forall y0 : prod a0 a1, forall y1 : a1, forall y2 : prod a0 a1, forall y3 : a1, ((@pair (prod a0 a1) a1 y0 y1) = (@pair (prod a0 a1) a1 y2 y3)) = ((y0 = y2) /\ (y1 = y3))) -> False.
Definition term445 (a0 : Type') (a1 : Type') (x0 : type1470 a0 a1) (x1 : a0) (x2 : a1) := @eq Prop ((fun y0 : a1 => x0 y0 x1) x2).
Definition term1056 (x0 : nat) (x1 : nat) := (fun y0 : nat => (Nat.mul (S x0) y0) = (Nat.add (Nat.mul x0 y0) y0)) x1.
Definition term1790 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : type1413 a0 a1) (x2 : a0 -> Prop) (x3 : nat) := fun y0 : a0 => ((@IN a0 y0 x2) /\ (~ (@HAS_SIZE a1 (x1 y0) x3))) \/ (@HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (x0 x2 x1)) (Nat.mul (@CARD a0 x2) x3)).
Definition term1191 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : type1413 a0 a1) (x2 : prod a0 a1) := fun y0 : a0 => exists y1 : a1, ((@IN a0 y0 x0) /\ (@IN a1 y1 (x1 y0))) /\ (x2 = (@pair a0 a1 y0 y1)).
Definition term607 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : type1413 a0 a1) (x2 : nat) (x3 : nat) := ((@FINITE a0 x0) /\ ((@CARD a0 x0) = x2)) -> (forall y0 : a0, (@IN a0 y0 x0) -> @HAS_SIZE a1 (x1 y0) x3) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y0 : prod a0 a1 => exists y1 : a0, exists y2 : a1, @SETSPEC (prod a0 a1) y0 ((@IN a0 y1 x0) /\ (@IN a1 y2 (x1 y1))) (@pair a0 a1 y1 y2))) (Nat.mul x2 x3).
Definition term548 (x0 : nat) := (fun y0 : nat => (Nat.mul (NUMERAL 0) y0) = (NUMERAL 0)) x0.
Definition term1876 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a0) (x2 : a1) := fun y0 : a1 => (fun y1 : a1 => (~ ((@pair a0 a1 x0 x2) = (@pair a0 a1 x1 y1))) \/ ((x0 = x1) /\ (x2 = y1))) y0.
Definition term968 (a0 : Type') (a1 : Type') (x0 : Prop) := forall y0 : prod a0 a1, x0.
Definition term1837 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : a0 -> Prop) (x2 : type471 a0 a1) := forall y0 : type1413 a0 a1, (fun y1 : type1413 a0 a1 => fun y2 : nat -> a0 => forall y3 : nat, ((@IN a0 (y2 y3) x1) /\ (~ (@HAS_SIZE a1 (y1 (y2 y3)) y3))) \/ (@HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (x0 x1 y1)) (Nat.mul (@CARD a0 x1) y3))) y0 (x2 y0).
Definition term1721 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : type619 a0 a1) (x2 : type620 a0 a1) := forall y0 : a0 -> Prop, (fun y1 : a0 -> Prop => fun y2 : type465 a0 a1 => forall y3 : type1413 a0 a1, forall y4 : prod a0 a1, (~ (x0 y1 y3 y4)) \/ (@SETSPEC (prod a0 a1) y4 ((@IN a0 (x1 y1 y3 y4) y1) /\ (@IN a1 (y2 y3 y4) (y3 (x1 y1 y3 y4)))) (@pair a0 a1 (x1 y1 y3 y4) (y2 y3 y4)))) y0 (x2 y0).
Definition term1644 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : a0 -> Prop) (x2 : type464 a0 a1) := forall y0 : type1413 a0 a1, (fun y1 : type1413 a0 a1 => fun y2 : type1207 a0 a1 => exists y3 : type1208 a0 a1, forall y4 : prod a0 a1, (~ (x0 x1 y1 y4)) \/ (@SETSPEC (prod a0 a1) y4 ((@IN a0 (y2 y4) x1) /\ (@IN a1 (y3 y4) (y1 (y2 y4)))) (@pair a0 a1 (y2 y4) (y3 y4)))) y0 (x2 y0).
Definition term1160 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : type1413 a0 a1) (x2 : prod a0 a1) := (fun y0 : type1532 a0 a1 => exists y1 : a0, exists y2 : a1, y0 ((@IN a0 y1 x0) /\ (@IN a1 y2 (x1 y1))) (@pair a0 a1 y1 y2)) (fun y0 : Prop => fun y1 : prod a0 a1 => y0 /\ (x2 = y1)).
Definition term930 (a0 : Type') (a1 : Type') (x0 : prod a0 a1) := (fun y0 : type1532 a0 a1 => exists y1 : a0, exists y2 : a1, y0 False (@pair a0 a1 y1 y2)) (fun y0 : Prop => fun y1 : prod a0 a1 => y0 /\ (x0 = y1)).
Definition term118 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : type1470 a0 a1) (x2 : prod a1 a0) := (fun y0 : type1534 a0 a1 => exists y1 : a1, exists y2 : a0, y0 ((@IN a1 y1 x0) /\ (@IN a0 y2 (x1 y1))) (@pair a1 a0 y1 y2)) (fun y0 : Prop => fun y1 : prod a1 a0 => y0 /\ (x2 = y1)).
Definition term57 (a0 : Type') (a1 : Type') (x0 : a1) (x1 : a1 -> Prop) (x2 : type1470 a0 a1) (x3 : prod a1 a0) := (fun y0 : type1534 a0 a1 => exists y1 : a1, exists y2 : a0, y0 (((y1 = x0) \/ (@IN a1 y1 x1)) /\ (@IN a0 y2 (x2 y1))) (@pair a1 a0 y1 y2)) (fun y0 : Prop => fun y1 : prod a1 a0 => y0 /\ (x3 = y1)).
Definition term468 (a0 : Type') (a1 : Type') (x0 : type1470 a0 a1) (x1 : a1) (x2 : a0) := (~ (x0 x1 x2)) -> x0 x1 x2.
Definition term966 (a0 : Type') (a1 : Type') := fun y0 : prod a0 a1 => True.
Definition term278 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : prod a1 a0) (x2 : type1470 a0 a1) (x3 : a1) := ((exists y0 : a1, exists y1 : a0, (((y0 = x3) \/ (x0 y0)) /\ (x2 y0 y1)) /\ (x1 = (@pair a1 a0 y0 y1))) /\ (~ ((exists y0 : a1, exists y1 : a0, ((x0 y0) /\ (x2 y0 y1)) /\ (x1 = (@pair a1 a0 y0 y1))) \/ (exists y0 : a0, (x1 = (@pair a1 a0 x3 y0)) /\ (x2 x3 y0))))) \/ ((~ (exists y0 : a1, exists y1 : a0, (((y0 = x3) \/ (x0 y0)) /\ (x2 y0 y1)) /\ (x1 = (@pair a1 a0 y0 y1)))) /\ ((exists y0 : a1, exists y1 : a0, ((x0 y0) /\ (x2 y0 y1)) /\ (x1 = (@pair a1 a0 y0 y1))) \/ (exists y0 : a0, (x1 = (@pair a1 a0 x3 y0)) /\ (x2 x3 y0)))).
Definition term1073 (a0 : Type') (a1 : Type') (x0 : type1210 a0 a1) (x1 : type1210 a0 a1) (x2 : nat) (x3 : nat) := ((@HAS_SIZE (prod a0 a1) x0 x2) /\ ((@HAS_SIZE (prod a0 a1) x1 x3) /\ (@DISJOINT (prod a0 a1) x0 x1))) -> @HAS_SIZE (prod a0 a1) (@UNION (prod a0 a1) x0 x1) (Nat.add x2 x3).
Definition term38 (a0 : Type') (x0 : a0 -> Prop) (x1 : a0 -> Prop) (x2 : nat) (x3 : nat) := ((@HAS_SIZE a0 x0 x2) /\ ((@HAS_SIZE a0 x1 x3) /\ (@DISJOINT a0 x0 x1))) -> @HAS_SIZE a0 (@UNION a0 x0 x1) (Nat.add x2 x3).
Definition term559 (a0 : Type') (x0 : a0) (x1 : a0 -> Prop) := (fun y0 : a0 -> Prop => (@FINITE a0 y0) -> (@CARD a0 (@INSERT a0 x0 y0)) = (@COND nat (@IN a0 x0 y0) (@CARD a0 y0) (S (@CARD a0 y0)))) x1.
Definition term1539 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) := fun y0 : a0 -> Prop => (fun y1 : a0 -> Prop => forall y2 : type1413 a0 a1, forall y3 : prod a0 a1, (~ (x0 y1 y2 y3)) \/ (exists y4 : a0, exists y5 : a1, @SETSPEC (prod a0 a1) y3 ((@IN a0 y4 y1) /\ (@IN a1 y5 (y2 y4))) (@pair a0 a1 y4 y5))) y0.
Definition term1534 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) := fun y0 : a0 -> Prop => (fun y1 : a0 -> Prop => forall y2 : type1413 a0 a1, forall y3 : prod a0 a1, (x0 y1 y2 y3) \/ (forall y4 : a0, forall y5 : a1, ~ (@SETSPEC (prod a0 a1) y3 ((@IN a0 y4 y1) /\ (@IN a1 y5 (y2 y4))) (@pair a0 a1 y4 y5)))) y0.
Definition term1451 (a0 : Type') (a1 : Type') (x0 : prod a0 a1) (x1 : a0 -> Prop) (x2 : type1413 a0 a1) := ~ (exists y0 : a0, exists y1 : a1, @SETSPEC (prod a0 a1) x0 ((@IN a0 y0 x1) /\ (@IN a1 y1 (x2 y0))) (@pair a0 a1 y0 y1)).
Definition term374 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : a1) (x2 : prod a1 a0) (x3 : type1470 a0 a1) (x4 : a1) (x5 : a0) := (forall y0 : a1, forall y1 : a0, (((~ (y0 = x4)) /\ (~ (x0 y0))) \/ (~ (x3 y0 y1))) \/ (~ (x2 = (@pair a1 a0 y0 y1)))) /\ ((fun y0 : a0 => (((x0 x1) /\ (x3 x1 y0)) /\ (x2 = (@pair a1 a0 x1 y0))) \/ ((x2 = (@pair a1 a0 x4 y0)) /\ (x3 x4 y0))) x5).
Definition term1782 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : type1413 a0 a1) (x2 : nat) := or (exists y0 : a0, (fun y1 : a0 => (@IN a0 y1 x0) /\ (~ (@HAS_SIZE a1 (x1 y1) x2))) y0).
Definition term405 (a0 : Type') (a1 : Type') (x0 : a1) (x1 : a1 -> Prop) (x2 : prod a1 a0) (x3 : type1470 a0 a1) (x4 : a1) := or (exists y0 : a0, (fun y1 : a0 => ((((x0 = x4) \/ (x1 x0)) /\ (x3 x0 y1)) /\ (x2 = (@pair a1 a0 x0 y1))) /\ ((forall y2 : a1, forall y3 : a0, ((~ (x1 y2)) \/ (~ (x3 y2 y3))) \/ (~ (x2 = (@pair a1 a0 y2 y3)))) /\ (forall y2 : a0, (~ (x2 = (@pair a1 a0 x4 y2))) \/ (~ (x3 x4 y2))))) y0).
Definition term335 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : type1470 a0 a1) (x2 : prod a1 a0) (x3 : a1) := or (exists y0 : a0, (fun y1 : a0 => ((x0 x3) /\ (x1 x3 y1)) /\ (x2 = (@pair a1 a0 x3 y1))) y0).
Definition term755 (a0 : Type') := forall y0 : a0, True.
Definition term1248 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : a0) (x2 : a1) (x3 : prod a0 a1) (x4 : a1) (x5 : type1413 a0 a1) (x6 : a0) := (@IN a0 x1 x0) -> (@IN a1 x2 (x5 x1)) -> (x3 = (@pair a0 a1 x1 x2)) -> (x3 = (@pair a0 a1 x6 x4)) -> (@IN a1 x4 (x5 x6)) -> (forall y0 : a0, forall y1 : a1, forall y2 : a0, forall y3 : a1, ((@pair a0 a1 y0 y1) = (@pair a0 a1 y2 y3)) = ((y0 = y2) /\ (y1 = y3))) -> (forall y0 : a0, forall y1 : nat, forall y2 : a0, forall y3 : nat, ((@pair a0 nat y0 y1) = (@pair a0 nat y2 y3)) = ((y0 = y2) /\ (y1 = y3))) -> (forall y0 : a0, forall y1 : prod a0 a1, forall y2 : a0, forall y3 : prod a0 a1, ((@pair a0 (prod a0 a1) y0 y1) = (@pair a0 (prod a0 a1) y2 y3)) = ((y0 = y2) /\ (y1 = y3))) -> (forall y0 : nat, forall y1 : a1, forall y2 : nat, forall y3 : a1, ((@pair nat a1 y0 y1) = (@pair nat a1 y2 y3)) = ((y0 = y2) /\ (y1 = y3))) -> ~ (forall y0 : prod a0 a1, forall y1 : a1, forall y2 : prod a0 a1, forall y3 : a1, ((@pair (prod a0 a1) a1 y0 y1) = (@pair (prod a0 a1) a1 y2 y3)) = ((y0 = y2) /\ (y1 = y3))).
Definition term1247 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : a0) (x2 : a1) (x3 : prod a0 a1) (x4 : a1) (x5 : type1413 a0 a1) (x6 : a0) := (@IN a0 x1 x0) -> (@IN a1 x2 (x5 x1)) -> (x3 = (@pair a0 a1 x1 x2)) -> (x3 = (@pair a0 a1 x6 x4)) -> (@IN a1 x4 (x5 x6)) -> (forall y0 : a0, forall y1 : a1, forall y2 : a0, forall y3 : a1, ((@pair a0 a1 y0 y1) = (@pair a0 a1 y2 y3)) = ((y0 = y2) /\ (y1 = y3))) -> (forall y0 : a0, forall y1 : nat, forall y2 : a0, forall y3 : nat, ((@pair a0 nat y0 y1) = (@pair a0 nat y2 y3)) = ((y0 = y2) /\ (y1 = y3))) -> (forall y0 : a0, forall y1 : prod a0 a1, forall y2 : a0, forall y3 : prod a0 a1, ((@pair a0 (prod a0 a1) y0 y1) = (@pair a0 (prod a0 a1) y2 y3)) = ((y0 = y2) /\ (y1 = y3))) -> (forall y0 : nat, forall y1 : a1, forall y2 : nat, forall y3 : a1, ((@pair nat a1 y0 y1) = (@pair nat a1 y2 y3)) = ((y0 = y2) /\ (y1 = y3))) -> (forall y0 : prod a0 a1, forall y1 : a1, forall y2 : prod a0 a1, forall y3 : a1, ((@pair (prod a0 a1) a1 y0 y1) = (@pair (prod a0 a1) a1 y2 y3)) = ((y0 = y2) /\ (y1 = y3))) -> False.
Definition term347 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : a1) (x2 : prod a1 a0) (x3 : type1470 a0 a1) (x4 : a1) := (fun y0 : Prop => y0 = (exists y1 : a0, (((x0 x1) /\ (x3 x1 y1)) /\ (x2 = (@pair a1 a0 x1 y1))) \/ ((x2 = (@pair a1 a0 x4 y1)) /\ (x3 x4 y1)))) ((exists y0 : a0, ((x0 x1) /\ (x3 x1 y0)) /\ (x2 = (@pair a1 a0 x1 y0))) \/ (exists y0 : a0, (x2 = (@pair a1 a0 x4 y0)) /\ (x3 x4 y0))).
Definition term1812 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : type1413 a0 a1) (x2 : a0 -> Prop) (x3 : nat -> a0) := forall y0 : nat, (fun y1 : nat => fun y2 : a0 => ((@IN a0 y2 x2) /\ (~ (@HAS_SIZE a1 (x1 y2) y1))) \/ (@HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (x0 x2 x1)) (Nat.mul (@CARD a0 x2) y1))) y0 (x3 y0).
Definition term113 (a0 : Type') (a1 : Type') (x0 : prod a1 a0) (x1 : a1 -> Prop) (x2 : type1470 a0 a1) (x3 : a1) := @IN (prod a1 a0) x0 (@UNION (prod a1 a0) (@GSPEC (prod a1 a0) (fun y0 : prod a1 a0 => exists y1 : a1, exists y2 : a0, @SETSPEC (prod a1 a0) y0 ((@IN a1 y1 x1) /\ (@IN a0 y2 (x2 y1))) (@pair a1 a0 y1 y2))) (@IMAGE a0 (prod a1 a0) (fun y0 : a0 => @pair a1 a0 x3 y0) (x2 x3))).
Definition term2105 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : a0) (x2 : a1) (x3 : prod a0 a1) (x4 : a1) (x5 : type1413 a0 a1) (x6 : a0) (x7 : nat) := (fun y0 : nat => forall y1 : nat, (~ (@IN a0 x6 x0)) -> (@FINITE a0 x0) -> (y1 = (S (@CARD a0 x0))) -> (@HAS_SIZE a1 (x5 x6) y0) -> (forall y2 : a0, (@IN a0 y2 x0) -> @HAS_SIZE a1 (x5 y2) y0) -> (forall y2 : type1413 a0 a1, forall y3 : nat, (forall y4 : a0, (@IN a0 y4 x0) -> @HAS_SIZE a1 (y2 y4) y3) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y4 : prod a0 a1 => exists y5 : a0, exists y6 : a1, @SETSPEC (prod a0 a1) y4 ((@IN a0 y5 x0) /\ (@IN a1 y6 (y2 y5))) (@pair a0 a1 y5 y6))) (Nat.mul (@CARD a0 x0) y3)) -> (@IN a0 x1 x0) -> (@IN a1 x2 (x5 x1)) -> (x3 = (@pair a0 a1 x1 x2)) -> (x3 = (@pair a0 a1 x6 x4)) -> (@IN a1 x4 (x5 x6)) -> (forall y2 : a0, forall y3 : a1, forall y4 : a0, forall y5 : a1, ((@pair a0 a1 y2 y3) = (@pair a0 a1 y4 y5)) = ((y2 = y4) /\ (y3 = y5))) -> (forall y2 : a0, forall y3 : nat, forall y4 : a0, forall y5 : nat, ((@pair a0 nat y2 y3) = (@pair a0 nat y4 y5)) = ((y2 = y4) /\ (y3 = y5))) -> (forall y2 : a0, forall y3 : prod a0 a1, forall y4 : a0, forall y5 : prod a0 a1, ((@pair a0 (prod a0 a1) y2 y3) = (@pair a0 (prod a0 a1) y4 y5)) = ((y2 = y4) /\ (y3 = y5))) -> (forall y2 : nat, forall y3 : a1, forall y4 : nat, forall y5 : a1, ((@pair nat a1 y2 y3) = (@pair nat a1 y4 y5)) = ((y2 = y4) /\ (y3 = y5))) -> (forall y2 : prod a0 a1, forall y3 : a1, forall y4 : prod a0 a1, forall y5 : a1, ((@pair (prod a0 a1) a1 y2 y3) = (@pair (prod a0 a1) a1 y4 y5)) = ((y2 = y4) /\ (y3 = y5))) -> False) x7.
Definition term31 (a0 : Type') (x0 : a0 -> Prop) := (fun y0 : a0 -> Prop => forall y1 : a0 -> Prop, forall y2 : nat, forall y3 : nat, ((@HAS_SIZE a0 y0 y2) /\ ((@HAS_SIZE a0 y1 y3) /\ (@DISJOINT a0 y0 y1))) -> @HAS_SIZE a0 (@UNION a0 y0 y1) (Nat.add y2 y3)) x0.
Definition term7 (a0 : Type') (x0 : a0 -> Prop) := (fun y0 : a0 -> Prop => forall y1 : a0 -> Prop, forall y2 : a0, (@IN a0 y2 (@INTER a0 y0 y1)) = ((@IN a0 y2 y0) /\ (@IN a0 y2 y1))) x0.
Definition term1757 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) := fun y0 : type619 a0 a1 => exists y1 : type620 a0 a1, (forall y2 : a0 -> Prop, forall y3 : type1413 a0 a1, forall y4 : prod a0 a1, (x0 y2 y3 y4) \/ (forall y5 : a0, forall y6 : a1, ~ (@SETSPEC (prod a0 a1) y4 ((@IN a0 y5 y2) /\ (@IN a1 y6 (y3 y5))) (@pair a0 a1 y5 y6)))) /\ (forall y2 : a0 -> Prop, forall y3 : type1413 a0 a1, forall y4 : prod a0 a1, (~ (x0 y2 y3 y4)) \/ (@SETSPEC (prod a0 a1) y4 ((@IN a0 (y0 y2 y3 y4) y2) /\ (@IN a1 (y1 y2 y3 y4) (y3 (y0 y2 y3 y4)))) (@pair a0 a1 (y0 y2 y3 y4) (y1 y2 y3 y4)))).
Definition term1564 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : prod a0 a1) (x2 : a0 -> Prop) (x3 : type1413 a0 a1) (x4 : a0) (x5 : a1) := (~ (x0 x2 x3 x1)) \/ (@SETSPEC (prod a0 a1) x1 ((@IN a0 x4 x2) /\ (@IN a1 x5 (x3 x4))) (@pair a0 a1 x4 x5)).
Definition term682 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) := forall y0 : nat, (fun y1 : nat => ((@CARD a0 x0) = y1) -> forall y2 : type1413 a0 a1, forall y3 : nat, (forall y4 : a0, (@IN a0 y4 x0) -> @HAS_SIZE a1 (y2 y4) y3) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y4 : prod a0 a1 => exists y5 : a0, exists y6 : a1, @SETSPEC (prod a0 a1) y4 ((@IN a0 y5 x0) /\ (@IN a1 y6 (y2 y5))) (@pair a0 a1 y5 y6))) (Nat.mul y1 y3)) y0.
Definition term638 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : type1413 a0 a1) (x2 : nat) := forall y0 : nat, (fun y1 : nat => (forall y2 : a0, (@IN a0 y2 x0) -> @HAS_SIZE a1 (x1 y2) y1) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y2 : prod a0 a1 => exists y3 : a0, exists y4 : a1, @SETSPEC (prod a0 a1) y2 ((@IN a0 y3 x0) /\ (@IN a1 y4 (x1 y3))) (@pair a0 a1 y3 y4))) (Nat.mul x2 y1)) y0.
Definition term625 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : type1413 a0 a1) (x2 : nat) := forall y0 : nat, (fun y1 : nat => ((@CARD a0 x0) = x2) -> (forall y2 : a0, (@IN a0 y2 x0) -> @HAS_SIZE a1 (x1 y2) y1) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y2 : prod a0 a1 => exists y3 : a0, exists y4 : a1, @SETSPEC (prod a0 a1) y2 ((@IN a0 y3 x0) /\ (@IN a1 y4 (x1 y3))) (@pair a0 a1 y3 y4))) (Nat.mul x2 y1)) y0.
Definition term1588 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : a0 -> Prop) (x2 : type1413 a0 a1) (x3 : type1207 a0 a1) (x4 : prod a0 a1) := (fun y0 : a0 => exists y1 : a1, (~ (x0 x1 x2 x4)) \/ (@SETSPEC (prod a0 a1) x4 ((@IN a0 y0 x1) /\ (@IN a1 y1 (x2 y0))) (@pair a0 a1 y0 y1))) (x3 x4).
Definition term645 (a0 : Type') (a1 : Type') (x0 : Prop) (x1 : type475 a0 a1) := x0 -> forall y0 : type1413 a0 a1, x1 y0.
Definition term1778 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : type1413 a0 a1) (x2 : a0 -> Prop) (x3 : nat) := exists y0 : a0, ((fun y1 : a0 => (@IN a0 y1 x2) /\ (~ (@HAS_SIZE a1 (x1 y1) x3))) y0) \/ (@HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (x0 x2 x1)) (Nat.mul (@CARD a0 x2) x3)).
Definition term1687 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : a0 -> Prop) := exists y0 : type464 a0 a1, (fun y1 : a0 -> Prop => fun y2 : type464 a0 a1 => exists y3 : type465 a0 a1, forall y4 : type1413 a0 a1, forall y5 : prod a0 a1, (~ (x0 y1 y4 y5)) \/ (@SETSPEC (prod a0 a1) y5 ((@IN a0 (y2 y4 y5) y1) /\ (@IN a1 (y3 y4 y5) (y4 (y2 y4 y5)))) (@pair a0 a1 (y2 y4 y5) (y3 y4 y5)))) x1 y0.
Definition term897 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a0 -> Prop) (x2 : nat) := ((S (@CARD a0 x1)) = x2) -> (forall y0 : type1413 a0 a1, forall y1 : nat, (forall y2 : a0, (@IN a0 y2 (@INSERT a0 x0 x1)) -> @HAS_SIZE a1 (y0 y2) y1) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y2 : prod a0 a1 => exists y3 : a0, exists y4 : a1, @SETSPEC (prod a0 a1) y2 ((@IN a0 y3 (@INSERT a0 x0 x1)) /\ (@IN a1 y4 (y0 y3))) (@pair a0 a1 y3 y4))) (Nat.mul x2 y1)) = (forall y0 : type1413 a0 a1, forall y1 : nat, (forall y2 : a0, ((y2 = x0) \/ (@IN a0 y2 x1)) -> @HAS_SIZE a1 (y0 y2) y1) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y2 : prod a0 a1 => exists y3 : a0, exists y4 : a1, @SETSPEC (prod a0 a1) y2 (((y3 = x0) \/ (@IN a0 y3 x1)) /\ (@IN a1 y4 (y0 y3))) (@pair a0 a1 y3 y4))) (Nat.mul x2 y1)).
Definition term473 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : type1470 a0 a1) (x2 : a1) (x3 : a0) := ((@pair a1 a0 x2 x0) = (@pair a1 a0 x2 x3)) /\ (x1 x2 x3).
Definition term964 (a0 : Type') (a1 : Type') (x0 : prod a0 a1) := fun y0 : a0 => exists y1 : a1, (fun y2 : Prop => fun y3 : prod a0 a1 => y2 /\ (x0 = y3)) False (@pair a0 a1 y0 y1).
Definition term378 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : a1) (x2 : prod a1 a0) (x3 : type1470 a0 a1) (x4 : a1) := exists y0 : a0, (forall y1 : a1, forall y2 : a0, (((~ (y1 = x4)) /\ (~ (x0 y1))) \/ (~ (x3 y1 y2))) \/ (~ (x2 = (@pair a1 a0 y1 y2)))) /\ ((((x0 x1) /\ (x3 x1 y0)) /\ (x2 = (@pair a1 a0 x1 y0))) \/ ((x2 = (@pair a1 a0 x4 y0)) /\ (x3 x4 y0))).
Definition term1743 (a0 : Type') (a1 : Type') (x0 : Prop) (x1 : type129 a0 a1) := x0 /\ (exists y0 : type620 a0 a1, x1 y0).
Definition term1729 (a0 : Type') (a1 : Type') (x0 : Prop) (x1 : type128 a0 a1) := x0 /\ (exists y0 : type619 a0 a1, x1 y0).
Definition term1713 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : type619 a0 a1) := fun y0 : a0 -> Prop => exists y1 : type465 a0 a1, (fun y2 : a0 -> Prop => fun y3 : type465 a0 a1 => forall y4 : type1413 a0 a1, forall y5 : prod a0 a1, (~ (x0 y2 y4 y5)) \/ (@SETSPEC (prod a0 a1) y5 ((@IN a0 (x1 y2 y4 y5) y2) /\ (@IN a1 (y3 y4 y5) (y4 (x1 y2 y4 y5)))) (@pair a0 a1 (x1 y2 y4 y5) (y3 y4 y5)))) y0 y1.
Definition term1688 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) := fun y0 : a0 -> Prop => exists y1 : type464 a0 a1, (fun y2 : a0 -> Prop => fun y3 : type464 a0 a1 => exists y4 : type465 a0 a1, forall y5 : type1413 a0 a1, forall y6 : prod a0 a1, (~ (x0 y2 y5 y6)) \/ (@SETSPEC (prod a0 a1) y6 ((@IN a0 (y3 y5 y6) y2) /\ (@IN a1 (y4 y5 y6) (y5 (y3 y5 y6)))) (@pair a0 a1 (y3 y5 y6) (y4 y5 y6)))) y0 y1.
Definition term686 (a0 : Type') (a1 : Type') := forall y0 : a0 -> Prop, (@FINITE a0 y0) -> forall y1 : nat, ((@CARD a0 y0) = y1) -> forall y2 : type1413 a0 a1, forall y3 : nat, (forall y4 : a0, (@IN a0 y4 y0) -> @HAS_SIZE a1 (y2 y4) y3) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y4 : prod a0 a1 => exists y5 : a0, exists y6 : a1, @SETSPEC (prod a0 a1) y4 ((@IN a0 y5 y0) /\ (@IN a1 y6 (y2 y5))) (@pair a0 a1 y5 y6))) (Nat.mul y1 y3).
Definition term2005 (a0 : Type') (x0 : type1364 a0) (x1 : a0) (x2 : type1364 a0) (x3 : a0) := (~ (x1 = x3)) \/ ((~ (x0 = x2)) \/ ((@I (a0 -> (a0 -> Prop) -> Prop) x0 x1) = (@I (a0 -> (a0 -> Prop) -> Prop) x2 x3))).
Definition term817 (a0 : Type') (x0 : Prop) (x1 : a0) (x2 : a0) (x3 : Prop) (x4 : a0) := forall y0 : a0, (x0 = x3) -> (x3 -> x1 = x4) -> ((~ x3) -> x2 = y0) -> (@COND a0 x0 x1 x2) = (@COND a0 x3 x4 y0).
Definition term522 (x0 : Prop) (x1 : Prop) (x2 : Prop) := (x0 -> x2) /\ (x1 -> x2).
Definition term1569 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : prod a0 a1) (x2 : a0 -> Prop) (x3 : type1413 a0 a1) := exists y0 : a0, exists y1 : a1, (~ (x0 x2 x3 x1)) \/ (@SETSPEC (prod a0 a1) x1 ((@IN a0 y0 x2) /\ (@IN a1 y1 (x3 y0))) (@pair a0 a1 y0 y1)).
Definition term1192 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : type1413 a0 a1) (x2 : prod a0 a1) := exists y0 : a0, exists y1 : a1, ((@IN a0 y0 x0) /\ (@IN a1 y1 (x1 y0))) /\ (x2 = (@pair a0 a1 y0 y1)).
Definition term1170 (a0 : Type') (a1 : Type') (x0 : prod a0 a1) (x1 : a0 -> Prop) (x2 : type1413 a0 a1) := exists y0 : a0, exists y1 : a1, (fun y2 : Prop => fun y3 : prod a0 a1 => y2 /\ (x0 = y3)) ((@IN a0 y0 x1) /\ (@IN a1 y1 (x2 y0))) (@pair a0 a1 y0 y1).
Definition term1163 (a0 : Type') (a1 : Type') (x0 : prod a0 a1) (x1 : a0 -> Prop) (x2 : type1413 a0 a1) := exists y0 : a0, exists y1 : a1, @SETSPEC (prod a0 a1) x0 ((@IN a0 y0 x1) /\ (@IN a1 y1 (x2 y0))) (@pair a0 a1 y0 y1).
Definition term938 (a0 : Type') (a1 : Type') (x0 : prod a0 a1) := exists y0 : a0, exists y1 : a1, (fun y2 : Prop => fun y3 : prod a0 a1 => y2 /\ (x0 = y3)) False (@pair a0 a1 y0 y1).
Definition term878 (a0 : Type') (a1 : Type') (x0 : prod a0 a1) (x1 : a0) (x2 : a0 -> Prop) (x3 : type1413 a0 a1) := exists y0 : a0, exists y1 : a1, @SETSPEC (prod a0 a1) x0 (((y0 = x1) \/ (@IN a0 y0 x2)) /\ (@IN a1 y1 (x3 y0))) (@pair a0 a1 y0 y1).
Definition term877 (a0 : Type') (a1 : Type') (x0 : prod a0 a1) (x1 : a0) (x2 : a0 -> Prop) (x3 : type1413 a0 a1) := exists y0 : a0, exists y1 : a1, @SETSPEC (prod a0 a1) x0 ((@IN a0 y0 (@INSERT a0 x1 x2)) /\ (@IN a1 y1 (x3 y0))) (@pair a0 a1 y0 y1).
Definition term773 (a0 : Type') (a1 : Type') (x0 : prod a0 a1) := exists y0 : a0, exists y1 : a1, @SETSPEC (prod a0 a1) x0 False (@pair a0 a1 y0 y1).
Definition term772 (a0 : Type') (a1 : Type') (x0 : prod a0 a1) (x1 : type1413 a0 a1) := exists y0 : a0, exists y1 : a1, @SETSPEC (prod a0 a1) x0 ((@IN a0 y0 (@EMPTY a0)) /\ (@IN a1 y1 (x1 y0))) (@pair a0 a1 y0 y1).
Definition term1324 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a0) (x2 : prod a0 a1) := forall y0 : prod a0 a1, ((@pair a0 (prod a0 a1) x0 x2) = (@pair a0 (prod a0 a1) x1 y0)) = ((x0 = x1) /\ (x2 = y0)).
Definition term1558 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : prod a0 a1) (x2 : a0 -> Prop) (x3 : type1413 a0 a1) (x4 : a0) := exists y0 : a1, (~ (x0 x2 x3 x1)) \/ ((fun y1 : a1 => @SETSPEC (prod a0 a1) x1 ((@IN a0 x4 x2) /\ (@IN a1 y1 (x3 x4))) (@pair a0 a1 x4 y1)) y0).
Definition term147 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : type1470 a0 a1) (x2 : a1) (x3 : a0) (x4 : prod a1 a0) := fun y0 : prod a1 a0 => (fun y1 : prod a1 a0 => ((x0 x2) /\ (x1 x2 x3)) /\ (x4 = y1)) y0.
Definition term97 (a0 : Type') (a1 : Type') (x0 : a1) (x1 : a1 -> Prop) (x2 : type1470 a0 a1) (x3 : a1) (x4 : a0) (x5 : prod a1 a0) := fun y0 : prod a1 a0 => (fun y1 : prod a1 a0 => (((x3 = x0) \/ (x1 x3)) /\ (x2 x3 x4)) /\ (x5 = y1)) y0.
Definition term225 (a0 : Type') (a1 : Type') (x0 : a1) (x1 : a1 -> Prop) (x2 : type1470 a0 a1) (x3 : prod a1 a0) (x4 : a1) := fun y0 : a0 => (((~ (x4 = x0)) /\ (~ (x1 x4))) \/ (~ (x2 x4 y0))) \/ (~ (x3 = (@pair a1 a0 x4 y0))).
Definition term1109 (a0 : Type') (x0 : a0) (x1 : a0 -> Prop) := (@IN a0 x0 x1) -> True.
Definition term1000 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : type1413 a0 a1) (x2 : nat) := forall y0 : a0, (fun y1 : a0 => (@IN a0 y1 x0) -> @HAS_SIZE a1 (x1 y1) x2) y0.
Definition term995 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : type1413 a0 a1) (x2 : nat) := forall y0 : a0, (fun y1 : a0 => (y1 = x0) -> @HAS_SIZE a1 (x1 y1) x2) y0.
Definition term1143 (a0 : Type') (a1 : Type') (x0 : type1413 a0 a1) (x1 : a0) := fun y0 : a1 => forall y1 : a1, ((@IN a1 y0 (x0 x1)) /\ ((@IN a1 y1 (x0 x1)) /\ (((fun y2 : a1 => @pair a0 a1 x1 y2) y0) = ((fun y2 : a1 => @pair a0 a1 x1 y2) y1)))) -> y0 = y1.
Definition term1491 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : a0 -> Prop) (x2 : type1413 a0 a1) := fun y0 : prod a0 a1 => (fun y1 : prod a0 a1 => (~ (x0 x1 x2 y1)) \/ (exists y2 : a0, exists y3 : a1, @SETSPEC (prod a0 a1) y1 ((@IN a0 y2 x1) /\ (@IN a1 y3 (x2 y2))) (@pair a0 a1 y2 y3))) y0.
Definition term1486 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : a0 -> Prop) (x2 : type1413 a0 a1) := fun y0 : prod a0 a1 => (fun y1 : prod a0 a1 => (x0 x1 x2 y1) \/ (forall y2 : a0, forall y3 : a1, ~ (@SETSPEC (prod a0 a1) y1 ((@IN a0 y2 x1) /\ (@IN a1 y3 (x2 y2))) (@pair a0 a1 y2 y3)))) y0.
Definition term1183 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : type1413 a0 a1) (x2 : prod a0 a1) (x3 : a0) (x4 : a1) := @eq Prop ((fun y0 : prod a0 a1 => (fun y1 : prod a0 a1 => ((@IN a0 x3 x0) /\ (@IN a1 x4 (x1 x3))) /\ (x2 = y1)) y0) (@pair a0 a1 x3 x4)).
Definition term148 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : type1470 a0 a1) (x2 : prod a1 a0) (x3 : a1) (x4 : a0) := @eq Prop ((fun y0 : prod a1 a0 => (fun y1 : prod a1 a0 => ((x0 x3) /\ (x1 x3 x4)) /\ (x2 = y1)) y0) (@pair a1 a0 x3 x4)).
Definition term222 (a0 : Type') (a1 : Type') (x0 : a1) (x1 : a1 -> Prop) (x2 : type1470 a0 a1) (x3 : prod a1 a0) (x4 : a1) (x5 : a0) := (fun y0 : a0 => (((x4 = x0) \/ (x1 x4)) /\ (x2 x4 y0)) /\ (x3 = (@pair a1 a0 x4 y0))) x5.
Definition term632 (a0 : Type') (x0 : a0 -> Prop) (x1 : nat) := imp ((@CARD a0 x0) = x1).
Definition term437 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : type1470 a0 a1) (x2 : prod a1 a0) (x3 : a1) (x4 : a0) := (~ (x0 x3)) \/ ((~ (x1 x3 x4)) \/ (~ (x2 = (@pair a1 a0 x3 x4)))).
Definition term986 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : type1413 a0 a1) (x2 : nat) (x3 : a0) := and ((fun y0 : a0 => (y0 = x0) -> @HAS_SIZE a1 (x1 y0) x2) x3).
Definition term1951 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a1) (x2 : a0) (x3 : a1) := ~ ((@I (a1 -> prod a0 a1) (@I (a0 -> a1 -> prod a0 a1) (@pair a0 a1) x0) x1) = (@I (a1 -> prod a0 a1) (@I (a0 -> a1 -> prod a0 a1) (@pair a0 a1) x2) x3)).
Definition term792 (a0 : Type') (a1 : Type') (x0 : Prop) := forall y0 : type1413 a0 a1, x0.
Definition term703 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a0 -> Prop) := (((fun y0 : a0 -> Prop => forall y1 : nat, ((@CARD a0 y0) = y1) -> forall y2 : type1413 a0 a1, forall y3 : nat, (forall y4 : a0, (@IN a0 y4 y0) -> @HAS_SIZE a1 (y2 y4) y3) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y4 : prod a0 a1 => exists y5 : a0, exists y6 : a1, @SETSPEC (prod a0 a1) y4 ((@IN a0 y5 y0) /\ (@IN a1 y6 (y2 y5))) (@pair a0 a1 y5 y6))) (Nat.mul y1 y3)) x1) /\ ((~ (@IN a0 x0 x1)) /\ (@FINITE a0 x1))) -> (fun y0 : a0 -> Prop => forall y1 : nat, ((@CARD a0 y0) = y1) -> forall y2 : type1413 a0 a1, forall y3 : nat, (forall y4 : a0, (@IN a0 y4 y0) -> @HAS_SIZE a1 (y2 y4) y3) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y4 : prod a0 a1 => exists y5 : a0, exists y6 : a1, @SETSPEC (prod a0 a1) y4 ((@IN a0 y5 y0) /\ (@IN a1 y6 (y2 y5))) (@pair a0 a1 y5 y6))) (Nat.mul y1 y3)) (@INSERT a0 x0 x1).
Definition term2013 (x0 : Prop) (x1 : Prop) := (~ x0) -> x1.
Definition term560 (a0 : Type') (x0 : a0) (x1 : a0 -> Prop) := (@FINITE a0 x1) -> (@CARD a0 (@INSERT a0 x0 x1)) = (@COND nat (@IN a0 x0 x1) (@CARD a0 x1) (S (@CARD a0 x1))).
Definition term1376 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) := fun y0 : a0 => forall y1 : type1413 a0 a1, forall y2 : a1, forall y3 : prod a0 a1, forall y4 : a1, forall y5 : a0, forall y6 : a0 -> Prop, forall y7 : nat, forall y8 : nat, (~ (@IN a0 y0 y6)) -> (@FINITE a0 y6) -> (y8 = (S (@CARD a0 y6))) -> (@HAS_SIZE a1 (y1 y0) y7) -> (forall y9 : a0, (@IN a0 y9 y6) -> @HAS_SIZE a1 (y1 y9) y7) -> (forall y9 : type1413 a0 a1, forall y10 : nat, (forall y11 : a0, (@IN a0 y11 y6) -> @HAS_SIZE a1 (y9 y11) y10) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (x0 y6 y9)) (Nat.mul (@CARD a0 y6) y10)) -> (@IN a0 y5 y6) -> (@IN a1 y4 (y1 y5)) -> (y3 = (@pair a0 a1 y5 y4)) -> (y3 = (@pair a0 a1 y0 y2)) -> (@IN a1 y2 (y1 y0)) -> (forall y9 : a0, forall y10 : a1, forall y11 : a0, forall y12 : a1, ((@pair a0 a1 y9 y10) = (@pair a0 a1 y11 y12)) = ((y9 = y11) /\ (y10 = y12))) -> (forall y9 : a0, forall y10 : nat, forall y11 : a0, forall y12 : nat, ((@pair a0 nat y9 y10) = (@pair a0 nat y11 y12)) = ((y9 = y11) /\ (y10 = y12))) -> (forall y9 : a0, forall y10 : prod a0 a1, forall y11 : a0, forall y12 : prod a0 a1, ((@pair a0 (prod a0 a1) y9 y10) = (@pair a0 (prod a0 a1) y11 y12)) = ((y9 = y11) /\ (y10 = y12))) -> (forall y9 : nat, forall y10 : a1, forall y11 : nat, forall y12 : a1, ((@pair nat a1 y9 y10) = (@pair nat a1 y11 y12)) = ((y9 = y11) /\ (y10 = y12))) -> ~ (forall y9 : prod a0 a1, forall y10 : a1, forall y11 : prod a0 a1, forall y12 : a1, ((@pair (prod a0 a1) a1 y9 y10) = (@pair (prod a0 a1) a1 y11 y12)) = ((y9 = y11) /\ (y10 = y12))).
Definition term1366 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : a1) (x2 : prod a0 a1) (x3 : a1) (x4 : type1413 a0 a1) (x5 : a0) := fun y0 : a0 => forall y1 : a0 -> Prop, forall y2 : nat, forall y3 : nat, (~ (@IN a0 x5 y1)) -> (@FINITE a0 y1) -> (y3 = (S (@CARD a0 y1))) -> (@HAS_SIZE a1 (x4 x5) y2) -> (forall y4 : a0, (@IN a0 y4 y1) -> @HAS_SIZE a1 (x4 y4) y2) -> (forall y4 : type1413 a0 a1, forall y5 : nat, (forall y6 : a0, (@IN a0 y6 y1) -> @HAS_SIZE a1 (y4 y6) y5) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (x0 y1 y4)) (Nat.mul (@CARD a0 y1) y5)) -> (@IN a0 y0 y1) -> (@IN a1 x1 (x4 y0)) -> (x2 = (@pair a0 a1 y0 x1)) -> (x2 = (@pair a0 a1 x5 x3)) -> (@IN a1 x3 (x4 x5)) -> (forall y4 : a0, forall y5 : a1, forall y6 : a0, forall y7 : a1, ((@pair a0 a1 y4 y5) = (@pair a0 a1 y6 y7)) = ((y4 = y6) /\ (y5 = y7))) -> (forall y4 : a0, forall y5 : nat, forall y6 : a0, forall y7 : nat, ((@pair a0 nat y4 y5) = (@pair a0 nat y6 y7)) = ((y4 = y6) /\ (y5 = y7))) -> (forall y4 : a0, forall y5 : prod a0 a1, forall y6 : a0, forall y7 : prod a0 a1, ((@pair a0 (prod a0 a1) y4 y5) = (@pair a0 (prod a0 a1) y6 y7)) = ((y4 = y6) /\ (y5 = y7))) -> (forall y4 : nat, forall y5 : a1, forall y6 : nat, forall y7 : a1, ((@pair nat a1 y4 y5) = (@pair nat a1 y6 y7)) = ((y4 = y6) /\ (y5 = y7))) -> ~ (forall y4 : prod a0 a1, forall y5 : a1, forall y6 : prod a0 a1, forall y7 : a1, ((@pair (prod a0 a1) a1 y4 y5) = (@pair (prod a0 a1) a1 y6 y7)) = ((y4 = y6) /\ (y5 = y7))).
Definition term1297 (a0 : Type') (a1 : Type') := fun y0 : a0 => forall y1 : type1413 a0 a1, forall y2 : a1, forall y3 : prod a0 a1, forall y4 : a1, forall y5 : a0, forall y6 : a0 -> Prop, forall y7 : nat, forall y8 : nat, (~ (@IN a0 y0 y6)) -> (@FINITE a0 y6) -> (y8 = (S (@CARD a0 y6))) -> (@HAS_SIZE a1 (y1 y0) y7) -> (forall y9 : a0, (@IN a0 y9 y6) -> @HAS_SIZE a1 (y1 y9) y7) -> (forall y9 : type1413 a0 a1, forall y10 : nat, (forall y11 : a0, (@IN a0 y11 y6) -> @HAS_SIZE a1 (y9 y11) y10) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y11 : prod a0 a1 => exists y12 : a0, exists y13 : a1, @SETSPEC (prod a0 a1) y11 ((@IN a0 y12 y6) /\ (@IN a1 y13 (y9 y12))) (@pair a0 a1 y12 y13))) (Nat.mul (@CARD a0 y6) y10)) -> (@IN a0 y5 y6) -> (@IN a1 y4 (y1 y5)) -> (y3 = (@pair a0 a1 y5 y4)) -> (y3 = (@pair a0 a1 y0 y2)) -> (@IN a1 y2 (y1 y0)) -> (forall y9 : a0, forall y10 : a1, forall y11 : a0, forall y12 : a1, ((@pair a0 a1 y9 y10) = (@pair a0 a1 y11 y12)) = ((y9 = y11) /\ (y10 = y12))) -> (forall y9 : a0, forall y10 : nat, forall y11 : a0, forall y12 : nat, ((@pair a0 nat y9 y10) = (@pair a0 nat y11 y12)) = ((y9 = y11) /\ (y10 = y12))) -> (forall y9 : a0, forall y10 : prod a0 a1, forall y11 : a0, forall y12 : prod a0 a1, ((@pair a0 (prod a0 a1) y9 y10) = (@pair a0 (prod a0 a1) y11 y12)) = ((y9 = y11) /\ (y10 = y12))) -> (forall y9 : nat, forall y10 : a1, forall y11 : nat, forall y12 : a1, ((@pair nat a1 y9 y10) = (@pair nat a1 y11 y12)) = ((y9 = y11) /\ (y10 = y12))) -> ~ (forall y9 : prod a0 a1, forall y10 : a1, forall y11 : prod a0 a1, forall y12 : a1, ((@pair (prod a0 a1) a1 y9 y10) = (@pair (prod a0 a1) a1 y11 y12)) = ((y9 = y11) /\ (y10 = y12))).
Definition term1296 (a0 : Type') (a1 : Type') := fun y0 : a0 => forall y1 : type1413 a0 a1, forall y2 : a1, forall y3 : prod a0 a1, forall y4 : a1, forall y5 : a0, forall y6 : a0 -> Prop, forall y7 : nat, forall y8 : nat, (~ (@IN a0 y0 y6)) -> (@FINITE a0 y6) -> (y8 = (S (@CARD a0 y6))) -> (@HAS_SIZE a1 (y1 y0) y7) -> (forall y9 : a0, (@IN a0 y9 y6) -> @HAS_SIZE a1 (y1 y9) y7) -> (forall y9 : type1413 a0 a1, forall y10 : nat, (forall y11 : a0, (@IN a0 y11 y6) -> @HAS_SIZE a1 (y9 y11) y10) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y11 : prod a0 a1 => exists y12 : a0, exists y13 : a1, @SETSPEC (prod a0 a1) y11 ((@IN a0 y12 y6) /\ (@IN a1 y13 (y9 y12))) (@pair a0 a1 y12 y13))) (Nat.mul (@CARD a0 y6) y10)) -> (@IN a0 y5 y6) -> (@IN a1 y4 (y1 y5)) -> (y3 = (@pair a0 a1 y5 y4)) -> (y3 = (@pair a0 a1 y0 y2)) -> (@IN a1 y2 (y1 y0)) -> (forall y9 : a0, forall y10 : a1, forall y11 : a0, forall y12 : a1, ((@pair a0 a1 y9 y10) = (@pair a0 a1 y11 y12)) = ((y9 = y11) /\ (y10 = y12))) -> (forall y9 : a0, forall y10 : nat, forall y11 : a0, forall y12 : nat, ((@pair a0 nat y9 y10) = (@pair a0 nat y11 y12)) = ((y9 = y11) /\ (y10 = y12))) -> (forall y9 : a0, forall y10 : prod a0 a1, forall y11 : a0, forall y12 : prod a0 a1, ((@pair a0 (prod a0 a1) y9 y10) = (@pair a0 (prod a0 a1) y11 y12)) = ((y9 = y11) /\ (y10 = y12))) -> (forall y9 : nat, forall y10 : a1, forall y11 : nat, forall y12 : a1, ((@pair nat a1 y9 y10) = (@pair nat a1 y11 y12)) = ((y9 = y11) /\ (y10 = y12))) -> (forall y9 : prod a0 a1, forall y10 : a1, forall y11 : prod a0 a1, forall y12 : a1, ((@pair (prod a0 a1) a1 y9 y10) = (@pair (prod a0 a1) a1 y11 y12)) = ((y9 = y11) /\ (y10 = y12))) -> False.
Definition term1277 (a0 : Type') (a1 : Type') (x0 : a1) (x1 : prod a0 a1) (x2 : a1) (x3 : type1413 a0 a1) (x4 : a0) := fun y0 : a0 => forall y1 : a0 -> Prop, forall y2 : nat, forall y3 : nat, (~ (@IN a0 x4 y1)) -> (@FINITE a0 y1) -> (y3 = (S (@CARD a0 y1))) -> (@HAS_SIZE a1 (x3 x4) y2) -> (forall y4 : a0, (@IN a0 y4 y1) -> @HAS_SIZE a1 (x3 y4) y2) -> (forall y4 : type1413 a0 a1, forall y5 : nat, (forall y6 : a0, (@IN a0 y6 y1) -> @HAS_SIZE a1 (y4 y6) y5) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y6 : prod a0 a1 => exists y7 : a0, exists y8 : a1, @SETSPEC (prod a0 a1) y6 ((@IN a0 y7 y1) /\ (@IN a1 y8 (y4 y7))) (@pair a0 a1 y7 y8))) (Nat.mul (@CARD a0 y1) y5)) -> (@IN a0 y0 y1) -> (@IN a1 x0 (x3 y0)) -> (x1 = (@pair a0 a1 y0 x0)) -> (x1 = (@pair a0 a1 x4 x2)) -> (@IN a1 x2 (x3 x4)) -> (forall y4 : a0, forall y5 : a1, forall y6 : a0, forall y7 : a1, ((@pair a0 a1 y4 y5) = (@pair a0 a1 y6 y7)) = ((y4 = y6) /\ (y5 = y7))) -> (forall y4 : a0, forall y5 : nat, forall y6 : a0, forall y7 : nat, ((@pair a0 nat y4 y5) = (@pair a0 nat y6 y7)) = ((y4 = y6) /\ (y5 = y7))) -> (forall y4 : a0, forall y5 : prod a0 a1, forall y6 : a0, forall y7 : prod a0 a1, ((@pair a0 (prod a0 a1) y4 y5) = (@pair a0 (prod a0 a1) y6 y7)) = ((y4 = y6) /\ (y5 = y7))) -> (forall y4 : nat, forall y5 : a1, forall y6 : nat, forall y7 : a1, ((@pair nat a1 y4 y5) = (@pair nat a1 y6 y7)) = ((y4 = y6) /\ (y5 = y7))) -> ~ (forall y4 : prod a0 a1, forall y5 : a1, forall y6 : prod a0 a1, forall y7 : a1, ((@pair (prod a0 a1) a1 y4 y5) = (@pair (prod a0 a1) a1 y6 y7)) = ((y4 = y6) /\ (y5 = y7))).
Definition term1276 (a0 : Type') (a1 : Type') (x0 : a1) (x1 : prod a0 a1) (x2 : a1) (x3 : type1413 a0 a1) (x4 : a0) := fun y0 : a0 => forall y1 : a0 -> Prop, forall y2 : nat, forall y3 : nat, (~ (@IN a0 x4 y1)) -> (@FINITE a0 y1) -> (y3 = (S (@CARD a0 y1))) -> (@HAS_SIZE a1 (x3 x4) y2) -> (forall y4 : a0, (@IN a0 y4 y1) -> @HAS_SIZE a1 (x3 y4) y2) -> (forall y4 : type1413 a0 a1, forall y5 : nat, (forall y6 : a0, (@IN a0 y6 y1) -> @HAS_SIZE a1 (y4 y6) y5) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y6 : prod a0 a1 => exists y7 : a0, exists y8 : a1, @SETSPEC (prod a0 a1) y6 ((@IN a0 y7 y1) /\ (@IN a1 y8 (y4 y7))) (@pair a0 a1 y7 y8))) (Nat.mul (@CARD a0 y1) y5)) -> (@IN a0 y0 y1) -> (@IN a1 x0 (x3 y0)) -> (x1 = (@pair a0 a1 y0 x0)) -> (x1 = (@pair a0 a1 x4 x2)) -> (@IN a1 x2 (x3 x4)) -> (forall y4 : a0, forall y5 : a1, forall y6 : a0, forall y7 : a1, ((@pair a0 a1 y4 y5) = (@pair a0 a1 y6 y7)) = ((y4 = y6) /\ (y5 = y7))) -> (forall y4 : a0, forall y5 : nat, forall y6 : a0, forall y7 : nat, ((@pair a0 nat y4 y5) = (@pair a0 nat y6 y7)) = ((y4 = y6) /\ (y5 = y7))) -> (forall y4 : a0, forall y5 : prod a0 a1, forall y6 : a0, forall y7 : prod a0 a1, ((@pair a0 (prod a0 a1) y4 y5) = (@pair a0 (prod a0 a1) y6 y7)) = ((y4 = y6) /\ (y5 = y7))) -> (forall y4 : nat, forall y5 : a1, forall y6 : nat, forall y7 : a1, ((@pair nat a1 y4 y5) = (@pair nat a1 y6 y7)) = ((y4 = y6) /\ (y5 = y7))) -> (forall y4 : prod a0 a1, forall y5 : a1, forall y6 : prod a0 a1, forall y7 : a1, ((@pair (prod a0 a1) a1 y4 y5) = (@pair (prod a0 a1) a1 y6 y7)) = ((y4 = y6) /\ (y5 = y7))) -> False.
Definition term208 (a0 : Type') (x0 : a0) (x1 : a0 -> Prop) (x2 : a0) := or ((~ (x2 = x0)) /\ (~ (x1 x2))).
Definition term1423 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : a0 -> Prop) (x2 : type1413 a0 a1) := forall y0 : prod a0 a1, (x0 x1 x2 y0) = ((fun y1 : prod a0 a1 => exists y2 : a0, exists y3 : a1, @SETSPEC (prod a0 a1) y1 ((@IN a0 y2 x1) /\ (@IN a1 y3 (x2 y2))) (@pair a0 a1 y2 y3)) y0).
Definition term2078 (a0 : Type') (x0 : a0 -> Prop) (x1 : type686 a0) (x2 : type686 a0) (x3 : a0 -> Prop) := @eq Prop ((@I ((a0 -> Prop) -> Prop) x1 x0) \/ ((~ (x3 = x0)) \/ ((~ (x2 = x1)) \/ (~ (@I ((a0 -> Prop) -> Prop) x2 x3))))).
Definition term1903 (a0 : Type') (a1 : Type') (x0 : a0) := forall y0 : a1, (forall y1 : a0, forall y2 : a1, ((@pair a0 a1 x0 y0) = (@pair a0 a1 y1 y2)) \/ ((~ (x0 = y1)) \/ (~ (y0 = y2)))) /\ (forall y1 : a0, forall y2 : a1, (~ ((@pair a0 a1 x0 y0) = (@pair a0 a1 y1 y2))) \/ ((x0 = y1) /\ (y0 = y2))).
Definition term498 (a0 : Type') (a1 : Type') (x0 : a1) := (fun y0 : a1 => forall y1 : type1470 a0 a1, forall y2 : a1 -> Prop, (~ (forall y3 : prod a1 a0, (exists y4 : a1, exists y5 : a0, (((y4 = y0) \/ (y2 y4)) /\ (y1 y4 y5)) /\ (y3 = (@pair a1 a0 y4 y5))) = ((exists y4 : a1, exists y5 : a0, ((y2 y4) /\ (y1 y4 y5)) /\ (y3 = (@pair a1 a0 y4 y5))) \/ (exists y4 : a0, (y3 = (@pair a1 a0 y0 y4)) /\ (y1 y0 y4))))) -> False) x0.
Definition term20 (a0 : Type') (a1 : Type') (x0 : a1) := (fun y0 : a1 => forall y1 : a0 -> Prop, forall y2 : a0 -> a1, (@IN a1 y0 (@IMAGE a0 a1 y2 y1)) = (exists y3 : a0, (y0 = (y2 y3)) /\ (@IN a0 y3 y1))) x0.
Definition term492 (a0 : Type') (a1 : Type') (x0 : type1470 a0 a1) (x1 : a1) (x2 : a0) (x3 : a1) (x4 : a0) := (~ (x3 = x1)) \/ (~ ((x0 x3 x4) /\ ((@pair a1 a0 x1 x2) = (@pair a1 a0 x3 x4)))).
Definition term908 (a0 : Type') (a1 : Type') (x0 : a0) := forall y0 : a0 -> Prop, ((forall y1 : nat, ((@CARD a0 y0) = y1) -> forall y2 : type1413 a0 a1, forall y3 : nat, (forall y4 : a0, (@IN a0 y4 y0) -> @HAS_SIZE a1 (y2 y4) y3) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y4 : prod a0 a1 => exists y5 : a0, exists y6 : a1, @SETSPEC (prod a0 a1) y4 ((@IN a0 y5 y0) /\ (@IN a1 y6 (y2 y5))) (@pair a0 a1 y5 y6))) (Nat.mul y1 y3)) /\ ((~ (@IN a0 x0 y0)) /\ (@FINITE a0 y0))) -> forall y1 : nat, ((S (@CARD a0 y0)) = y1) -> forall y2 : type1413 a0 a1, forall y3 : nat, (forall y4 : a0, ((y4 = x0) \/ (@IN a0 y4 y0)) -> @HAS_SIZE a1 (y2 y4) y3) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y4 : prod a0 a1 => exists y5 : a0, exists y6 : a1, @SETSPEC (prod a0 a1) y4 (((y5 = x0) \/ (@IN a0 y5 y0)) /\ (@IN a1 y6 (y2 y5))) (@pair a0 a1 y5 y6))) (Nat.mul y1 y3).
Definition term708 (a0 : Type') (a1 : Type') (x0 : a0) := forall y0 : a0 -> Prop, ((forall y1 : nat, ((@CARD a0 y0) = y1) -> forall y2 : type1413 a0 a1, forall y3 : nat, (forall y4 : a0, (@IN a0 y4 y0) -> @HAS_SIZE a1 (y2 y4) y3) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y4 : prod a0 a1 => exists y5 : a0, exists y6 : a1, @SETSPEC (prod a0 a1) y4 ((@IN a0 y5 y0) /\ (@IN a1 y6 (y2 y5))) (@pair a0 a1 y5 y6))) (Nat.mul y1 y3)) /\ ((~ (@IN a0 x0 y0)) /\ (@FINITE a0 y0))) -> forall y1 : nat, ((@CARD a0 (@INSERT a0 x0 y0)) = y1) -> forall y2 : type1413 a0 a1, forall y3 : nat, (forall y4 : a0, (@IN a0 y4 (@INSERT a0 x0 y0)) -> @HAS_SIZE a1 (y2 y4) y3) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y4 : prod a0 a1 => exists y5 : a0, exists y6 : a1, @SETSPEC (prod a0 a1) y4 ((@IN a0 y5 (@INSERT a0 x0 y0)) /\ (@IN a1 y6 (y2 y5))) (@pair a0 a1 y5 y6))) (Nat.mul y1 y3).
Definition term927 (a0 : Type') (a1 : Type') (x0 : prod a0 a1) (x1 : type914 a0 a1) := @IN (prod a0 a1) x0 (@GSPEC (prod a0 a1) (fun y0 : prod a0 a1 => x1 (@SETSPEC (prod a0 a1) y0))).
Definition term54 (a0 : Type') (a1 : Type') (x0 : prod a1 a0) (x1 : type916 a0 a1) := @IN (prod a1 a0) x0 (@GSPEC (prod a1 a0) (fun y0 : prod a1 a0 => x1 (@SETSPEC (prod a1 a0) y0))).
Definition term1490 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : a0 -> Prop) (x2 : type1413 a0 a1) := and (forall y0 : prod a0 a1, (x0 x1 x2 y0) \/ (forall y1 : a0, forall y2 : a1, ~ (@SETSPEC (prod a0 a1) y0 ((@IN a0 y1 x1) /\ (@IN a1 y2 (x2 y1))) (@pair a0 a1 y1 y2)))).
Definition term1186 (a0 : Type') (a1 : Type') (x0 : prod a0 a1) (x1 : a0 -> Prop) (x2 : type1413 a0 a1) (x3 : a0) := fun y0 : a1 => (fun y1 : Prop => fun y2 : prod a0 a1 => y1 /\ (x0 = y2)) ((@IN a0 x3 x1) /\ (@IN a1 y0 (x2 x3))) (@pair a0 a1 x3 y0).
Definition term1388 (a0 : Type') (a1 : Type') := fun y0 : type621 a0 a1 => (y0 = (fun y1 : a0 -> Prop => fun y2 : type1413 a0 a1 => fun y3 : prod a0 a1 => exists y4 : a0, exists y5 : a1, @SETSPEC (prod a0 a1) y3 ((@IN a0 y4 y1) /\ (@IN a1 y5 (y2 y4))) (@pair a0 a1 y4 y5))) -> (forall y1 : a0, forall y2 : type1413 a0 a1, forall y3 : a1, forall y4 : prod a0 a1, forall y5 : a1, forall y6 : a0, forall y7 : a0 -> Prop, forall y8 : nat, forall y9 : nat, (~ (@IN a0 y1 y7)) -> (@FINITE a0 y7) -> (y9 = (S (@CARD a0 y7))) -> (@HAS_SIZE a1 (y2 y1) y8) -> (forall y10 : a0, (@IN a0 y10 y7) -> @HAS_SIZE a1 (y2 y10) y8) -> (forall y10 : type1413 a0 a1, forall y11 : nat, (forall y12 : a0, (@IN a0 y12 y7) -> @HAS_SIZE a1 (y10 y12) y11) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y12 : prod a0 a1 => exists y13 : a0, exists y14 : a1, @SETSPEC (prod a0 a1) y12 ((@IN a0 y13 y7) /\ (@IN a1 y14 (y10 y13))) (@pair a0 a1 y13 y14))) (Nat.mul (@CARD a0 y7) y11)) -> (@IN a0 y6 y7) -> (@IN a1 y5 (y2 y6)) -> (y4 = (@pair a0 a1 y6 y5)) -> (y4 = (@pair a0 a1 y1 y3)) -> (@IN a1 y3 (y2 y1)) -> (forall y10 : a0, forall y11 : a1, forall y12 : a0, forall y13 : a1, ((@pair a0 a1 y10 y11) = (@pair a0 a1 y12 y13)) = ((y10 = y12) /\ (y11 = y13))) -> (forall y10 : a0, forall y11 : nat, forall y12 : a0, forall y13 : nat, ((@pair a0 nat y10 y11) = (@pair a0 nat y12 y13)) = ((y10 = y12) /\ (y11 = y13))) -> (forall y10 : a0, forall y11 : prod a0 a1, forall y12 : a0, forall y13 : prod a0 a1, ((@pair a0 (prod a0 a1) y10 y11) = (@pair a0 (prod a0 a1) y12 y13)) = ((y10 = y12) /\ (y11 = y13))) -> (forall y10 : nat, forall y11 : a1, forall y12 : nat, forall y13 : a1, ((@pair nat a1 y10 y11) = (@pair nat a1 y12 y13)) = ((y10 = y12) /\ (y11 = y13))) -> ~ (forall y10 : prod a0 a1, forall y11 : a1, forall y12 : prod a0 a1, forall y13 : a1, ((@pair (prod a0 a1) a1 y10 y11) = (@pair (prod a0 a1) a1 y12 y13)) = ((y10 = y12) /\ (y11 = y13)))) = ((fun y1 : type621 a0 a1 => forall y2 : a0, forall y3 : type1413 a0 a1, forall y4 : a1, forall y5 : prod a0 a1, forall y6 : a1, forall y7 : a0, forall y8 : a0 -> Prop, forall y9 : nat, forall y10 : nat, (~ (@IN a0 y2 y8)) -> (@FINITE a0 y8) -> (y10 = (S (@CARD a0 y8))) -> (@HAS_SIZE a1 (y3 y2) y9) -> (forall y11 : a0, (@IN a0 y11 y8) -> @HAS_SIZE a1 (y3 y11) y9) -> (forall y11 : type1413 a0 a1, forall y12 : nat, (forall y13 : a0, (@IN a0 y13 y8) -> @HAS_SIZE a1 (y11 y13) y12) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (y1 y8 y11)) (Nat.mul (@CARD a0 y8) y12)) -> (@IN a0 y7 y8) -> (@IN a1 y6 (y3 y7)) -> (y5 = (@pair a0 a1 y7 y6)) -> (y5 = (@pair a0 a1 y2 y4)) -> (@IN a1 y4 (y3 y2)) -> (forall y11 : a0, forall y12 : a1, forall y13 : a0, forall y14 : a1, ((@pair a0 a1 y11 y12) = (@pair a0 a1 y13 y14)) = ((y11 = y13) /\ (y12 = y14))) -> (forall y11 : a0, forall y12 : nat, forall y13 : a0, forall y14 : nat, ((@pair a0 nat y11 y12) = (@pair a0 nat y13 y14)) = ((y11 = y13) /\ (y12 = y14))) -> (forall y11 : a0, forall y12 : prod a0 a1, forall y13 : a0, forall y14 : prod a0 a1, ((@pair a0 (prod a0 a1) y11 y12) = (@pair a0 (prod a0 a1) y13 y14)) = ((y11 = y13) /\ (y12 = y14))) -> (forall y11 : nat, forall y12 : a1, forall y13 : nat, forall y14 : a1, ((@pair nat a1 y11 y12) = (@pair nat a1 y13 y14)) = ((y11 = y13) /\ (y12 = y14))) -> ~ (forall y11 : prod a0 a1, forall y12 : a1, forall y13 : prod a0 a1, forall y14 : a1, ((@pair (prod a0 a1) a1 y11 y12) = (@pair (prod a0 a1) a1 y13 y14)) = ((y11 = y13) /\ (y12 = y14)))) y0).
Definition term479 (a0 : Type') (a1 : Type') (x0 : type1470 a0 a1) (x1 : a1) (x2 : a0) (x3 : a1) (x4 : a0) := ~ ((x0 x3 x4) /\ ((@pair a1 a0 x1 x2) = (@pair a1 a0 x3 x4))).
Definition term1570 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : a0 -> Prop) (x2 : type1413 a0 a1) := fun y0 : prod a0 a1 => exists y1 : a0, exists y2 : a1, (~ (x0 x1 x2 y0)) \/ (@SETSPEC (prod a0 a1) y0 ((@IN a0 y1 x1) /\ (@IN a1 y2 (x2 y1))) (@pair a0 a1 y1 y2)).
Definition term1165 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : type1413 a0 a1) := fun y0 : prod a0 a1 => exists y1 : a0, exists y2 : a1, @SETSPEC (prod a0 a1) y0 ((@IN a0 y1 x0) /\ (@IN a1 y2 (x1 y1))) (@pair a0 a1 y1 y2).
Definition term880 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a0 -> Prop) (x2 : type1413 a0 a1) := fun y0 : prod a0 a1 => exists y1 : a0, exists y2 : a1, @SETSPEC (prod a0 a1) y0 (((y1 = x0) \/ (@IN a0 y1 x1)) /\ (@IN a1 y2 (x2 y1))) (@pair a0 a1 y1 y2).
Definition term879 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a0 -> Prop) (x2 : type1413 a0 a1) := fun y0 : prod a0 a1 => exists y1 : a0, exists y2 : a1, @SETSPEC (prod a0 a1) y0 ((@IN a0 y1 (@INSERT a0 x0 x1)) /\ (@IN a1 y2 (x2 y1))) (@pair a0 a1 y1 y2).
Definition term775 (a0 : Type') (a1 : Type') := fun y0 : prod a0 a1 => exists y1 : a0, exists y2 : a1, @SETSPEC (prod a0 a1) y0 False (@pair a0 a1 y1 y2).
Definition term774 (a0 : Type') (a1 : Type') (x0 : type1413 a0 a1) := fun y0 : prod a0 a1 => exists y1 : a0, exists y2 : a1, @SETSPEC (prod a0 a1) y0 ((@IN a0 y1 (@EMPTY a0)) /\ (@IN a1 y2 (x0 y1))) (@pair a0 a1 y1 y2).
Definition term1756 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : type619 a0 a1) := exists y0 : type620 a0 a1, (forall y1 : a0 -> Prop, forall y2 : type1413 a0 a1, forall y3 : prod a0 a1, (x0 y1 y2 y3) \/ (forall y4 : a0, forall y5 : a1, ~ (@SETSPEC (prod a0 a1) y3 ((@IN a0 y4 y1) /\ (@IN a1 y5 (y2 y4))) (@pair a0 a1 y4 y5)))) /\ (forall y1 : a0 -> Prop, forall y2 : type1413 a0 a1, forall y3 : prod a0 a1, (~ (x0 y1 y2 y3)) \/ (@SETSPEC (prod a0 a1) y3 ((@IN a0 (x1 y1 y2 y3) y1) /\ (@IN a1 (y0 y1 y2 y3) (y2 (x1 y1 y2 y3)))) (@pair a0 a1 (x1 y1 y2 y3) (y0 y1 y2 y3)))).
Definition term390 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : prod a1 a0) (x2 : type1470 a0 a1) (x3 : a1) := exists y0 : a1, (fun y1 : a1 => exists y2 : a0, (forall y3 : a1, forall y4 : a0, (((~ (y3 = x3)) /\ (~ (x0 y3))) \/ (~ (x2 y3 y4))) \/ (~ (x1 = (@pair a1 a0 y3 y4)))) /\ ((((x0 y1) /\ (x2 y1 y2)) /\ (x1 = (@pair a1 a0 y1 y2))) \/ ((x1 = (@pair a1 a0 x3 y2)) /\ (x2 x3 y2)))) y0.
Definition term386 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : prod a1 a0) (x2 : type1470 a0 a1) (x3 : a1) := exists y0 : a1, (fun y1 : a1 => exists y2 : a0, ((((y1 = x3) \/ (x0 y1)) /\ (x2 y1 y2)) /\ (x1 = (@pair a1 a0 y1 y2))) /\ ((forall y3 : a1, forall y4 : a0, ((~ (x0 y3)) \/ (~ (x2 y3 y4))) \/ (~ (x1 = (@pair a1 a0 y3 y4)))) /\ (forall y3 : a0, (~ (x1 = (@pair a1 a0 x3 y3))) \/ (~ (x2 x3 y3))))) y0.
Definition term359 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : prod a1 a0) (x2 : type1470 a0 a1) (x3 : a1) := exists y0 : a1, (fun y1 : a1 => exists y2 : a0, (((x0 y1) /\ (x2 y1 y2)) /\ (x1 = (@pair a1 a0 y1 y2))) \/ ((x1 = (@pair a1 a0 x3 y2)) /\ (x2 x3 y2))) y0.
Definition term318 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : type1470 a0 a1) (x2 : prod a1 a0) := exists y0 : a1, (fun y1 : a1 => exists y2 : a0, ((x0 y1) /\ (x1 y1 y2)) /\ (x2 = (@pair a1 a0 y1 y2))) y0.
Definition term285 (a0 : Type') (a1 : Type') (x0 : a1) (x1 : a1 -> Prop) (x2 : type1470 a0 a1) (x3 : prod a1 a0) := exists y0 : a1, (fun y1 : a1 => exists y2 : a0, (((y1 = x0) \/ (x1 y1)) /\ (x2 y1 y2)) /\ (x3 = (@pair a1 a0 y1 y2))) y0.
Definition term747 (a0 : Type') (a1 : Type') (x0 : type1413 a0 a1) (x1 : a0) (x2 : nat) (x3 : Prop) := ((@IN a0 x1 (@EMPTY a0)) = False) -> (False -> (@HAS_SIZE a1 (x0 x1) x2) = x3) -> ((@IN a0 x1 (@EMPTY a0)) -> @HAS_SIZE a1 (x0 x1) x2) = (False -> x3).
Definition term73 (a0 : Type') (a1 : Type') (x0 : a1) (x1 : a1 -> Prop) (x2 : a0) (x3 : type1470 a0 a1) (x4 : a1) := ((x4 = x0) \/ (@IN a1 x4 x1)) /\ (@IN a0 x2 (x3 x4)).
Definition term1091 (a0 : Type') (a1 : Type') (x0 : a0 -> a1) (x1 : a0 -> Prop) (x2 : nat) := ((forall y0 : a0, forall y1 : a0, ((@IN a0 y0 x1) /\ ((@IN a0 y1 x1) /\ ((x0 y0) = (x0 y1)))) -> y0 = y1) /\ (@HAS_SIZE a0 x1 x2)) -> @HAS_SIZE a1 (@IMAGE a0 a1 x0 x1) x2.
Definition term325 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : a1) (x2 : prod a1 a0) (x3 : type1470 a0 a1) (x4 : a1) := (exists y0 : a0, ((x0 x1) /\ (x3 x1 y0)) /\ (x2 = (@pair a1 a0 x1 y0))) \/ (exists y0 : a0, (x2 = (@pair a1 a0 x4 y0)) /\ (x3 x4 y0)).
Definition term1752 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : type619 a0 a1) (x2 : type620 a0 a1) := (forall y0 : a0 -> Prop, forall y1 : type1413 a0 a1, forall y2 : prod a0 a1, (x0 y0 y1 y2) \/ (forall y3 : a0, forall y4 : a1, ~ (@SETSPEC (prod a0 a1) y2 ((@IN a0 y3 y0) /\ (@IN a1 y4 (y1 y3))) (@pair a0 a1 y3 y4)))) /\ ((fun y0 : type620 a0 a1 => forall y1 : a0 -> Prop, forall y2 : type1413 a0 a1, forall y3 : prod a0 a1, (~ (x0 y1 y2 y3)) \/ (@SETSPEC (prod a0 a1) y3 ((@IN a0 (x1 y1 y2 y3) y1) /\ (@IN a1 (y0 y1 y2 y3) (y2 (x1 y1 y2 y3)))) (@pair a0 a1 (x1 y1 y2 y3) (y0 y1 y2 y3)))) x2).
Definition term286 (a0 : Type') (a1 : Type') (x0 : a1) (x1 : a1 -> Prop) (x2 : type1470 a0 a1) (x3 : prod a1 a0) := and (exists y0 : a1, (fun y1 : a1 => exists y2 : a0, (((y1 = x0) \/ (x1 y1)) /\ (x2 y1 y2)) /\ (x3 = (@pair a1 a0 y1 y2))) y0).
Definition term1389 (a0 : Type') (a1 : Type') := fun y0 : type621 a0 a1 => (y0 = (fun y1 : a0 -> Prop => fun y2 : type1413 a0 a1 => fun y3 : prod a0 a1 => exists y4 : a0, exists y5 : a1, @SETSPEC (prod a0 a1) y3 ((@IN a0 y4 y1) /\ (@IN a1 y5 (y2 y4))) (@pair a0 a1 y4 y5))) -> (forall y1 : a0, forall y2 : type1413 a0 a1, forall y3 : a1, forall y4 : prod a0 a1, forall y5 : a1, forall y6 : a0, forall y7 : a0 -> Prop, forall y8 : nat, forall y9 : nat, (~ (@IN a0 y1 y7)) -> (@FINITE a0 y7) -> (y9 = (S (@CARD a0 y7))) -> (@HAS_SIZE a1 (y2 y1) y8) -> (forall y10 : a0, (@IN a0 y10 y7) -> @HAS_SIZE a1 (y2 y10) y8) -> (forall y10 : type1413 a0 a1, forall y11 : nat, (forall y12 : a0, (@IN a0 y12 y7) -> @HAS_SIZE a1 (y10 y12) y11) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y12 : prod a0 a1 => exists y13 : a0, exists y14 : a1, @SETSPEC (prod a0 a1) y12 ((@IN a0 y13 y7) /\ (@IN a1 y14 (y10 y13))) (@pair a0 a1 y13 y14))) (Nat.mul (@CARD a0 y7) y11)) -> (@IN a0 y6 y7) -> (@IN a1 y5 (y2 y6)) -> (y4 = (@pair a0 a1 y6 y5)) -> (y4 = (@pair a0 a1 y1 y3)) -> (@IN a1 y3 (y2 y1)) -> (forall y10 : a0, forall y11 : a1, forall y12 : a0, forall y13 : a1, ((@pair a0 a1 y10 y11) = (@pair a0 a1 y12 y13)) = ((y10 = y12) /\ (y11 = y13))) -> (forall y10 : a0, forall y11 : nat, forall y12 : a0, forall y13 : nat, ((@pair a0 nat y10 y11) = (@pair a0 nat y12 y13)) = ((y10 = y12) /\ (y11 = y13))) -> (forall y10 : a0, forall y11 : prod a0 a1, forall y12 : a0, forall y13 : prod a0 a1, ((@pair a0 (prod a0 a1) y10 y11) = (@pair a0 (prod a0 a1) y12 y13)) = ((y10 = y12) /\ (y11 = y13))) -> (forall y10 : nat, forall y11 : a1, forall y12 : nat, forall y13 : a1, ((@pair nat a1 y10 y11) = (@pair nat a1 y12 y13)) = ((y10 = y12) /\ (y11 = y13))) -> ~ (forall y10 : prod a0 a1, forall y11 : a1, forall y12 : prod a0 a1, forall y13 : a1, ((@pair (prod a0 a1) a1 y10 y11) = (@pair (prod a0 a1) a1 y12 y13)) = ((y10 = y12) /\ (y11 = y13)))) = (forall y1 : a0, forall y2 : type1413 a0 a1, forall y3 : a1, forall y4 : prod a0 a1, forall y5 : a1, forall y6 : a0, forall y7 : a0 -> Prop, forall y8 : nat, forall y9 : nat, (~ (@IN a0 y1 y7)) -> (@FINITE a0 y7) -> (y9 = (S (@CARD a0 y7))) -> (@HAS_SIZE a1 (y2 y1) y8) -> (forall y10 : a0, (@IN a0 y10 y7) -> @HAS_SIZE a1 (y2 y10) y8) -> (forall y10 : type1413 a0 a1, forall y11 : nat, (forall y12 : a0, (@IN a0 y12 y7) -> @HAS_SIZE a1 (y10 y12) y11) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (y0 y7 y10)) (Nat.mul (@CARD a0 y7) y11)) -> (@IN a0 y6 y7) -> (@IN a1 y5 (y2 y6)) -> (y4 = (@pair a0 a1 y6 y5)) -> (y4 = (@pair a0 a1 y1 y3)) -> (@IN a1 y3 (y2 y1)) -> (forall y10 : a0, forall y11 : a1, forall y12 : a0, forall y13 : a1, ((@pair a0 a1 y10 y11) = (@pair a0 a1 y12 y13)) = ((y10 = y12) /\ (y11 = y13))) -> (forall y10 : a0, forall y11 : nat, forall y12 : a0, forall y13 : nat, ((@pair a0 nat y10 y11) = (@pair a0 nat y12 y13)) = ((y10 = y12) /\ (y11 = y13))) -> (forall y10 : a0, forall y11 : prod a0 a1, forall y12 : a0, forall y13 : prod a0 a1, ((@pair a0 (prod a0 a1) y10 y11) = (@pair a0 (prod a0 a1) y12 y13)) = ((y10 = y12) /\ (y11 = y13))) -> (forall y10 : nat, forall y11 : a1, forall y12 : nat, forall y13 : a1, ((@pair nat a1 y10 y11) = (@pair nat a1 y12 y13)) = ((y10 = y12) /\ (y11 = y13))) -> ~ (forall y10 : prod a0 a1, forall y11 : a1, forall y12 : prod a0 a1, forall y13 : a1, ((@pair (prod a0 a1) a1 y10 y11) = (@pair (prod a0 a1) a1 y12 y13)) = ((y10 = y12) /\ (y11 = y13)))).
Definition term1435 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) := imp (forall y0 : a0 -> Prop, forall y1 : type1413 a0 a1, forall y2 : prod a0 a1, (x0 y0 y1 y2) = (exists y3 : a0, exists y4 : a1, @SETSPEC (prod a0 a1) y2 ((@IN a0 y3 y0) /\ (@IN a1 y4 (y1 y3))) (@pair a0 a1 y3 y4))).
Definition term1353 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : a0 -> Prop) := imp (forall y0 : type1413 a0 a1, forall y1 : nat, (forall y2 : a0, (@IN a0 y2 x1) -> @HAS_SIZE a1 (y0 y2) y1) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (x0 x1 y0)) (Nat.mul (@CARD a0 x1) y1)).
Definition term1063 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) := imp (forall y0 : type1413 a0 a1, forall y1 : nat, (forall y2 : a0, (@IN a0 y2 x0) -> @HAS_SIZE a1 (y0 y2) y1) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y2 : prod a0 a1 => exists y3 : a0, exists y4 : a1, @SETSPEC (prod a0 a1) y2 ((@IN a0 y3 x0) /\ (@IN a1 y4 (y0 y3))) (@pair a0 a1 y3 y4))) (Nat.mul (@CARD a0 x0) y1)).
Definition term1779 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : type1413 a0 a1) (x2 : nat) (x3 : a0) := (fun y0 : a0 => (@IN a0 y0 x0) /\ (~ (@HAS_SIZE a1 (x1 y0) x2))) x3.
Definition term59 (a0 : Type') (a1 : Type') (x0 : a1) (x1 : a1 -> Prop) (x2 : type1470 a0 a1) (x3 : prod a1 a0) := (fun y0 : type1534 a0 a1 => exists y1 : a1, exists y2 : a0, y0 (((y1 = x0) \/ (@IN a1 y1 x1)) /\ (@IN a0 y2 (x2 y1))) (@pair a1 a0 y1 y2)) (@SETSPEC (prod a1 a0) x3).
Definition term1975 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a0) (x2 : a1) (x3 : a1) := ((~ ((@I (a1 -> prod a0 a1) (@I (a0 -> a1 -> prod a0 a1) (@pair a0 a1) x0) x2) = (@I (a1 -> prod a0 a1) (@I (a0 -> a1 -> prod a0 a1) (@pair a0 a1) x1) x3))) \/ (x0 = x1)) /\ ((~ ((@I (a1 -> prod a0 a1) (@I (a0 -> a1 -> prod a0 a1) (@pair a0 a1) x0) x2) = (@I (a1 -> prod a0 a1) (@I (a0 -> a1 -> prod a0 a1) (@pair a0 a1) x1) x3))) \/ (x2 = x3)).
Definition term543 (x0 : Prop) := and (False -> x0).
Definition term1466 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : prod a0 a1) (x2 : a0 -> Prop) (x3 : type1413 a0 a1) := ((x0 x2 x3 x1) \/ (forall y0 : a0, forall y1 : a1, ~ (@SETSPEC (prod a0 a1) x1 ((@IN a0 y0 x2) /\ (@IN a1 y1 (x3 y0))) (@pair a0 a1 y0 y1)))) /\ ((~ (x0 x2 x3 x1)) \/ (exists y0 : a0, exists y1 : a1, @SETSPEC (prod a0 a1) x1 ((@IN a0 y0 x2) /\ (@IN a1 y1 (x3 y0))) (@pair a0 a1 y0 y1))).
Definition term653 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : nat) := @eq Prop (forall y0 : type1413 a0 a1, (@FINITE a0 x0) -> ((@CARD a0 x0) = x1) -> forall y1 : nat, (forall y2 : a0, (@IN a0 y2 x0) -> @HAS_SIZE a1 (y0 y2) y1) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y2 : prod a0 a1 => exists y3 : a0, exists y4 : a1, @SETSPEC (prod a0 a1) y2 ((@IN a0 y3 x0) /\ (@IN a1 y4 (y0 y3))) (@pair a0 a1 y3 y4))) (Nat.mul x1 y1)).
Definition term550 (a0 : Type') (x0 : a0) := (fun y0 : a0 => forall y1 : a0, forall y2 : a0 -> Prop, (@IN a0 y0 (@INSERT a0 y1 y2)) = ((y0 = y1) \/ (@IN a0 y0 y2))) x0.
Definition term921 (a0 : Type') (a1 : Type') := fun y0 : nat => @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y1 : prod a0 a1 => exists y2 : a0, exists y3 : a1, @SETSPEC (prod a0 a1) y1 False (@pair a0 a1 y2 y3))) (Nat.mul (NUMERAL 0) y0).
Definition term352 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : prod a1 a0) (x2 : type1470 a0 a1) (x3 : a1) := (forall y0 : a1, forall y1 : a0, (((~ (y0 = x3)) /\ (~ (x0 y0))) \/ (~ (x2 y0 y1))) \/ (~ (x1 = (@pair a1 a0 y0 y1)))) /\ (exists y0 : a1, exists y1 : a0, (((x0 y0) /\ (x2 y0 y1)) /\ (x1 = (@pair a1 a0 y0 y1))) \/ ((x1 = (@pair a1 a0 x3 y1)) /\ (x2 x3 y1))).
Definition term1727 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) := exists y0 : type619 a0 a1, exists y1 : type620 a0 a1, forall y2 : a0 -> Prop, forall y3 : type1413 a0 a1, forall y4 : prod a0 a1, (~ (x0 y2 y3 y4)) \/ (@SETSPEC (prod a0 a1) y4 ((@IN a0 (y0 y2 y3 y4) y2) /\ (@IN a1 (y1 y2 y3 y4) (y3 (y0 y2 y3 y4)))) (@pair a0 a1 (y0 y2 y3 y4) (y1 y2 y3 y4))).
Definition term1675 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : a0 -> Prop) := exists y0 : type464 a0 a1, exists y1 : type465 a0 a1, forall y2 : type1413 a0 a1, forall y3 : prod a0 a1, (~ (x0 x1 y2 y3)) \/ (@SETSPEC (prod a0 a1) y3 ((@IN a0 (y0 y2 y3) x1) /\ (@IN a1 (y1 y2 y3) (y2 (y0 y2 y3)))) (@pair a0 a1 (y0 y2 y3) (y1 y2 y3))).
Definition term1623 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : a0 -> Prop) (x2 : type1413 a0 a1) := exists y0 : type1207 a0 a1, exists y1 : type1208 a0 a1, forall y2 : prod a0 a1, (~ (x0 x1 x2 y2)) \/ (@SETSPEC (prod a0 a1) y2 ((@IN a0 (y0 y2) x1) /\ (@IN a1 (y1 y2) (x2 (y0 y2)))) (@pair a0 a1 (y0 y2) (y1 y2))).
Definition term1133 (a0 : Type') (a1 : Type') (x0 : type1413 a0 a1) (x1 : a0) (x2 : a1) (x3 : a1) := (@IN a1 x3 (x0 x1)) /\ (x2 = x3).
Definition term906 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a0 -> Prop) := ((forall y0 : nat, ((@CARD a0 x1) = y0) -> forall y1 : type1413 a0 a1, forall y2 : nat, (forall y3 : a0, (@IN a0 y3 x1) -> @HAS_SIZE a1 (y1 y3) y2) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y3 : prod a0 a1 => exists y4 : a0, exists y5 : a1, @SETSPEC (prod a0 a1) y3 ((@IN a0 y4 x1) /\ (@IN a1 y5 (y1 y4))) (@pair a0 a1 y4 y5))) (Nat.mul y0 y2)) /\ ((~ (@IN a0 x0 x1)) /\ (@FINITE a0 x1))) -> forall y0 : nat, ((S (@CARD a0 x1)) = y0) -> forall y1 : type1413 a0 a1, forall y2 : nat, (forall y3 : a0, ((y3 = x0) \/ (@IN a0 y3 x1)) -> @HAS_SIZE a1 (y1 y3) y2) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y3 : prod a0 a1 => exists y4 : a0, exists y5 : a1, @SETSPEC (prod a0 a1) y3 (((y4 = x0) \/ (@IN a0 y4 x1)) /\ (@IN a1 y5 (y1 y4))) (@pair a0 a1 y4 y5))) (Nat.mul y0 y2).
Definition term704 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a0 -> Prop) := ((forall y0 : nat, ((@CARD a0 x1) = y0) -> forall y1 : type1413 a0 a1, forall y2 : nat, (forall y3 : a0, (@IN a0 y3 x1) -> @HAS_SIZE a1 (y1 y3) y2) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y3 : prod a0 a1 => exists y4 : a0, exists y5 : a1, @SETSPEC (prod a0 a1) y3 ((@IN a0 y4 x1) /\ (@IN a1 y5 (y1 y4))) (@pair a0 a1 y4 y5))) (Nat.mul y0 y2)) /\ ((~ (@IN a0 x0 x1)) /\ (@FINITE a0 x1))) -> forall y0 : nat, ((@CARD a0 (@INSERT a0 x0 x1)) = y0) -> forall y1 : type1413 a0 a1, forall y2 : nat, (forall y3 : a0, (@IN a0 y3 (@INSERT a0 x0 x1)) -> @HAS_SIZE a1 (y1 y3) y2) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y3 : prod a0 a1 => exists y4 : a0, exists y5 : a1, @SETSPEC (prod a0 a1) y3 ((@IN a0 y4 (@INSERT a0 x0 x1)) /\ (@IN a1 y5 (y1 y4))) (@pair a0 a1 y4 y5))) (Nat.mul y0 y2).
Definition term83 (a0 : Type') (x0 : a0) (x1 : a0) (x2 : a0 -> Prop) := and ((x1 = x0) \/ (@IN a0 x1 x2)).
Definition term1912 (a0 : Type') (a1 : Type') (x0 : a0) := fun y0 : a1 => ((fun y1 : a1 => forall y2 : a0, forall y3 : a1, ((@pair a0 a1 x0 y1) = (@pair a0 a1 y2 y3)) \/ ((~ (x0 = y2)) \/ (~ (y1 = y3)))) y0) /\ ((fun y1 : a1 => forall y2 : a0, forall y3 : a1, (~ ((@pair a0 a1 x0 y1) = (@pair a0 a1 y2 y3))) \/ ((x0 = y2) /\ (y1 = y3))) y0).
Definition term42 (a0 : Type') := (forall y0 : a0 -> Prop, forall y1 : a0 -> Prop, forall y2 : nat, forall y3 : nat, ((@HAS_SIZE a0 y0 y2) /\ ((@HAS_SIZE a0 y1 y3) /\ (@DISJOINT a0 y0 y1))) -> @HAS_SIZE a0 (@UNION a0 y0 y1) (Nat.add y2 y3)) -> forall y0 : a0 -> Prop, forall y1 : a0 -> Prop, forall y2 : nat, forall y3 : nat, ((@HAS_SIZE a0 y0 y2) /\ ((@HAS_SIZE a0 y1 y3) /\ (@DISJOINT a0 y0 y1))) -> @HAS_SIZE a0 (@UNION a0 y0 y1) (Nat.add y2 y3).
Definition term1594 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : a0 -> Prop) (x2 : type1413 a0 a1) := fun y0 : type1207 a0 a1 => forall y1 : prod a0 a1, (fun y2 : prod a0 a1 => fun y3 : a0 => exists y4 : a1, (~ (x0 x1 x2 y2)) \/ (@SETSPEC (prod a0 a1) y2 ((@IN a0 y3 x1) /\ (@IN a1 y4 (x2 y3))) (@pair a0 a1 y3 y4))) y1 (y0 y1).
Definition term1354 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : a0 -> Prop) (x2 : a0) (x3 : a1) (x4 : prod a0 a1) (x5 : a1) (x6 : type1413 a0 a1) (x7 : a0) := (forall y0 : type1413 a0 a1, forall y1 : nat, (forall y2 : a0, (@IN a0 y2 x1) -> @HAS_SIZE a1 (y0 y2) y1) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (x0 x1 y0)) (Nat.mul (@CARD a0 x1) y1)) -> (@IN a0 x2 x1) -> (@IN a1 x3 (x6 x2)) -> (x4 = (@pair a0 a1 x2 x3)) -> (x4 = (@pair a0 a1 x7 x5)) -> (@IN a1 x5 (x6 x7)) -> (forall y0 : a0, forall y1 : a1, forall y2 : a0, forall y3 : a1, ((@pair a0 a1 y0 y1) = (@pair a0 a1 y2 y3)) = ((y0 = y2) /\ (y1 = y3))) -> (forall y0 : a0, forall y1 : nat, forall y2 : a0, forall y3 : nat, ((@pair a0 nat y0 y1) = (@pair a0 nat y2 y3)) = ((y0 = y2) /\ (y1 = y3))) -> (forall y0 : a0, forall y1 : prod a0 a1, forall y2 : a0, forall y3 : prod a0 a1, ((@pair a0 (prod a0 a1) y0 y1) = (@pair a0 (prod a0 a1) y2 y3)) = ((y0 = y2) /\ (y1 = y3))) -> (forall y0 : nat, forall y1 : a1, forall y2 : nat, forall y3 : a1, ((@pair nat a1 y0 y1) = (@pair nat a1 y2 y3)) = ((y0 = y2) /\ (y1 = y3))) -> ~ (forall y0 : prod a0 a1, forall y1 : a1, forall y2 : prod a0 a1, forall y3 : a1, ((@pair (prod a0 a1) a1 y0 y1) = (@pair (prod a0 a1) a1 y2 y3)) = ((y0 = y2) /\ (y1 = y3))).
Definition term353 (a0 : Type') (x0 : Prop) (x1 : a0 -> Prop) := x0 /\ (exists y0 : a0, x1 y0).
Definition term769 (a0 : Type') (a1 : Type') (x0 : prod a0 a1) (x1 : a0) := exists y0 : a1, @SETSPEC (prod a0 a1) x0 False (@pair a0 a1 x1 y0).
Definition term1774 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : type1413 a0 a1) (x2 : a0 -> Prop) := forall y0 : nat, (exists y1 : a0, (@IN a0 y1 x2) /\ (~ (@HAS_SIZE a1 (x1 y1) y0))) \/ (@HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (x0 x2 x1)) (Nat.mul (@CARD a0 x2) y0)).
Definition term647 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : nat) := (@FINITE a0 x0) -> forall y0 : type1413 a0 a1, (fun y1 : type1413 a0 a1 => ((@CARD a0 x0) = x1) -> forall y2 : nat, (forall y3 : a0, (@IN a0 y3 x0) -> @HAS_SIZE a1 (y1 y3) y2) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y3 : prod a0 a1 => exists y4 : a0, exists y5 : a1, @SETSPEC (prod a0 a1) y3 ((@IN a0 y4 x0) /\ (@IN a1 y5 (y1 y4))) (@pair a0 a1 y4 y5))) (Nat.mul x1 y2)) y0.
Definition term572 (a0 : Type') (x0 : Prop) (x1 : a0 -> Prop) := (fun y0 : a0 -> Prop => (forall y1 : a0, x0 -> y0 y1) = (x0 -> forall y1 : a0, y0 y1)) x1.
Definition term123 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : type1470 a0 a1) := fun y0 : prod a1 a0 => exists y1 : a1, exists y2 : a0, @SETSPEC (prod a1 a0) y0 ((@IN a1 y1 x0) /\ (@IN a0 y2 (x1 y1))) (@pair a1 a0 y1 y2).
Definition term62 (a0 : Type') (a1 : Type') (x0 : a1) (x1 : a1 -> Prop) (x2 : type1470 a0 a1) := fun y0 : prod a1 a0 => exists y1 : a1, exists y2 : a0, @SETSPEC (prod a1 a0) y0 (((y1 = x0) \/ (@IN a1 y1 x1)) /\ (@IN a0 y2 (x2 y1))) (@pair a1 a0 y1 y2).
Definition term435 (a0 : Type') (a1 : Type') (x0 : a1) (x1 : a1 -> Prop) (x2 : type1470 a0 a1) (x3 : prod a1 a0) (x4 : a1) (x5 : a0) := (fun y0 : a0 => (((~ (x4 = x0)) \/ (~ (x2 x4 y0))) \/ (~ (x3 = (@pair a1 a0 x4 y0)))) /\ (((~ (x1 x4)) \/ (~ (x2 x4 y0))) \/ (~ (x3 = (@pair a1 a0 x4 y0))))) x5.
Definition term482 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : type1470 a0 a1) (x2 : a1) (x3 : a0) (x4 : a1) (x5 : a0) := ~ ((x0 x4) /\ ((x1 x4 x5) /\ ((@pair a1 a0 x2 x3) = (@pair a1 a0 x4 x5)))).
Definition term203 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : prod a1 a0) (x2 : type1470 a0 a1) (x3 : a1) := ~ ((exists y0 : a1, exists y1 : a0, (((y0 = x3) \/ (x0 y0)) /\ (x2 y0 y1)) /\ (x1 = (@pair a1 a0 y0 y1))) = ((exists y0 : a1, exists y1 : a0, ((x0 y0) /\ (x2 y0 y1)) /\ (x1 = (@pair a1 a0 y0 y1))) \/ (exists y0 : a0, (x1 = (@pair a1 a0 x3 y0)) /\ (x2 x3 y0)))).
Definition term959 (a0 : Type') (a1 : Type') (x0 : prod a0 a1) (x1 : a0) := fun y0 : a1 => (fun y1 : Prop => fun y2 : prod a0 a1 => y1 /\ (x0 = y2)) False (@pair a0 a1 x1 y0).
Definition term1254 (a0 : Type') (a1 : Type') (x0 : type1413 a0 a1) (x1 : a0) (x2 : nat) := imp (@HAS_SIZE a1 (x0 x1) x2).
Definition term1104 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : type1413 a0 a1) (x2 : a0) (x3 : nat) (x4 : Prop) (x5 : Prop) := ((@IN a0 x2 x0) = x4) -> (x4 -> (@HAS_SIZE a1 (x1 x2) x3) = x5) -> ((@IN a0 x2 x0) -> @HAS_SIZE a1 (x1 x2) x3) = (x4 -> x5).
Definition term1006 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : type1413 a0 a1) (x2 : a0) (x3 : nat) (x4 : Prop) (x5 : Prop) := ((x2 = x0) = x4) -> (x4 -> (@HAS_SIZE a1 (x1 x2) x3) = x5) -> ((x2 = x0) -> @HAS_SIZE a1 (x1 x2) x3) = (x4 -> x5).
Definition term1553 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : prod a0 a1) (x2 : a0 -> Prop) (x3 : type1413 a0 a1) (x4 : a0) := (~ (x0 x2 x3 x1)) \/ (exists y0 : a1, @SETSPEC (prod a0 a1) x1 ((@IN a0 x4 x2) /\ (@IN a1 y0 (x3 x4))) (@pair a0 a1 x4 y0)).
Definition term2018 (a0 : Type') (a1 : Type') (x0 : a1) (x1 : a1) (x2 : a0) (x3 : a0) := ((@I (a1 -> prod a0 a1) (@I (a0 -> a1 -> prod a0 a1) (@pair a0 a1) x2) x0) = (@I (a1 -> prod a0 a1) (@I (a0 -> a1 -> prod a0 a1) (@pair a0 a1) x3) x1)) -> x2 = x3.
Definition term709 (a0 : Type') (a1 : Type') := fun y0 : a0 => forall y1 : a0 -> Prop, (((fun y2 : a0 -> Prop => forall y3 : nat, ((@CARD a0 y2) = y3) -> forall y4 : type1413 a0 a1, forall y5 : nat, (forall y6 : a0, (@IN a0 y6 y2) -> @HAS_SIZE a1 (y4 y6) y5) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y6 : prod a0 a1 => exists y7 : a0, exists y8 : a1, @SETSPEC (prod a0 a1) y6 ((@IN a0 y7 y2) /\ (@IN a1 y8 (y4 y7))) (@pair a0 a1 y7 y8))) (Nat.mul y3 y5)) y1) /\ ((~ (@IN a0 y0 y1)) /\ (@FINITE a0 y1))) -> (fun y2 : a0 -> Prop => forall y3 : nat, ((@CARD a0 y2) = y3) -> forall y4 : type1413 a0 a1, forall y5 : nat, (forall y6 : a0, (@IN a0 y6 y2) -> @HAS_SIZE a1 (y4 y6) y5) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y6 : prod a0 a1 => exists y7 : a0, exists y8 : a1, @SETSPEC (prod a0 a1) y6 ((@IN a0 y7 y2) /\ (@IN a1 y8 (y4 y7))) (@pair a0 a1 y7 y8))) (Nat.mul y3 y5)) (@INSERT a0 y0 y1).
Definition term808 (a0 : Type') (x0 : a0) (x1 : a0 -> Prop) := ~ (@IN a0 x0 x1).
Definition term6 (a0 : Type') (x0 : a0 -> Prop) (x1 : a0 -> Prop) := forall y0 : a0, (@IN a0 y0 x0) = (@IN a0 y0 x1).
Definition term209 (a0 : Type') (a1 : Type') (x0 : a1) (x1 : a1 -> Prop) (x2 : type1470 a0 a1) (x3 : a1) (x4 : a0) := (~ ((x3 = x0) \/ (x1 x3))) \/ (~ (x2 x3 x4)).
Definition term1421 (a0 : Type') (a1 : Type') (x0 : type1210 a0 a1) (x1 : type1210 a0 a1) := forall y0 : prod a0 a1, (x0 y0) = (x1 y0).
Definition term469 (x0 : Prop) (x1 : Prop) := (~ x0) \/ (~ x1).
Definition term467 (x0 : Prop) := (~ x0) -> x0.
Definition term1043 (a0 : Type') (a1 : Type') (x0 : nat) (x1 : a0) (x2 : a0 -> Prop) (x3 : type1413 a0 a1) (x4 : nat) (x5 : Prop) := (((@HAS_SIZE a1 (x3 x1) x4) /\ (forall y0 : a0, (@IN a0 y0 x2) -> @HAS_SIZE a1 (x3 y0) x4)) -> (@HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y0 : prod a0 a1 => exists y1 : a0, exists y2 : a1, @SETSPEC (prod a0 a1) y0 (((y1 = x1) \/ (@IN a0 y1 x2)) /\ (@IN a1 y2 (x3 y1))) (@pair a0 a1 y1 y2))) (Nat.mul x0 x4)) = x5) -> ((forall y0 : a0, ((y0 = x1) -> @HAS_SIZE a1 (x3 y0) x4) /\ ((@IN a0 y0 x2) -> @HAS_SIZE a1 (x3 y0) x4)) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y0 : prod a0 a1 => exists y1 : a0, exists y2 : a1, @SETSPEC (prod a0 a1) y0 (((y1 = x1) \/ (@IN a0 y1 x2)) /\ (@IN a1 y2 (x3 y1))) (@pair a0 a1 y1 y2))) (Nat.mul x0 x4)) = (((@HAS_SIZE a1 (x3 x1) x4) /\ (forall y0 : a0, (@IN a0 y0 x2) -> @HAS_SIZE a1 (x3 y0) x4)) -> x5).
Definition term2063 (a0 : Type') (x0 : type686 a0) (x1 : type686 a0) (x2 : type686 a0) := (x1 = x0) /\ (x1 = x2).
Definition term215 (a0 : Type') (a1 : Type') (x0 : a1) (x1 : a1 -> Prop) (x2 : type1470 a0 a1) (x3 : prod a1 a0) (x4 : a1) (x5 : a0) := (~ (((x4 = x0) \/ (x1 x4)) /\ (x2 x4 x5))) \/ (~ (x3 = (@pair a1 a0 x4 x5))).
Definition term1001 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a0 -> Prop) (x2 : type1413 a0 a1) (x3 : nat) := (forall y0 : a0, (y0 = x0) -> @HAS_SIZE a1 (x2 y0) x3) /\ (forall y0 : a0, (@IN a0 y0 x1) -> @HAS_SIZE a1 (x2 y0) x3).
Definition term400 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : a1) (x2 : prod a1 a0) (x3 : type1470 a0 a1) (x4 : a1) := (exists y0 : a0, (fun y1 : a0 => ((((x1 = x4) \/ (x0 x1)) /\ (x3 x1 y1)) /\ (x2 = (@pair a1 a0 x1 y1))) /\ ((forall y2 : a1, forall y3 : a0, ((~ (x0 y2)) \/ (~ (x3 y2 y3))) \/ (~ (x2 = (@pair a1 a0 y2 y3)))) /\ (forall y2 : a0, (~ (x2 = (@pair a1 a0 x4 y2))) \/ (~ (x3 x4 y2))))) y0) \/ (exists y0 : a0, (fun y1 : a0 => (forall y2 : a1, forall y3 : a0, (((~ (y2 = x4)) /\ (~ (x0 y2))) \/ (~ (x3 y2 y3))) \/ (~ (x2 = (@pair a1 a0 y2 y3)))) /\ ((((x0 x1) /\ (x3 x1 y1)) /\ (x2 = (@pair a1 a0 x1 y1))) \/ ((x2 = (@pair a1 a0 x4 y1)) /\ (x3 x4 y1)))) y0).
Definition term331 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : a1) (x2 : prod a1 a0) (x3 : type1470 a0 a1) (x4 : a1) := (exists y0 : a0, (fun y1 : a0 => ((x0 x1) /\ (x3 x1 y1)) /\ (x2 = (@pair a1 a0 x1 y1))) y0) \/ (exists y0 : a0, (fun y1 : a0 => (x2 = (@pair a1 a0 x4 y1)) /\ (x3 x4 y1)) y0).
Definition term2048 (a0 : Type') (x0 : type686 a0) (x1 : type686 a0) (x2 : type686 a0) := (~ (x0 = x2)) \/ (x1 = x2).
Definition term853 (a0 : Type') (a1 : Type') (x0 : type1413 a0 a1) (x1 : nat) (x2 : a0) (x3 : a0) (x4 : a0 -> Prop) (x5 : Prop) := ((@IN a0 x3 (@INSERT a0 x2 x4)) = ((x3 = x2) \/ (@IN a0 x3 x4))) -> (((x3 = x2) \/ (@IN a0 x3 x4)) -> (@HAS_SIZE a1 (x0 x3) x1) = x5) -> ((@IN a0 x3 (@INSERT a0 x2 x4)) -> @HAS_SIZE a1 (x0 x3) x1) = (((x3 = x2) \/ (@IN a0 x3 x4)) -> x5).
Definition term533 (x0 : Prop) := (fun y0 : Prop => y0 = (y0 /\ (x0 -> y0))) True.
Definition term1112 (a0 : Type') (a1 : Type') (x0 : type1478 a0 a1) (x1 : a1 -> Prop) (x2 : nat) := ((forall y0 : a1, forall y1 : a1, ((@IN a1 y0 x1) /\ ((@IN a1 y1 x1) /\ ((x0 y0) = (x0 y1)))) -> y0 = y1) /\ (@HAS_SIZE a1 x1 x2)) -> (@HAS_SIZE (prod a0 a1) (@IMAGE a1 (prod a0 a1) x0 x1) x2) = True.
Definition term1111 (a0 : Type') (a1 : Type') (x0 : a0 -> a1) (x1 : a0 -> Prop) (x2 : nat) := ((forall y0 : a0, forall y1 : a0, ((@IN a0 y0 x1) /\ ((@IN a0 y1 x1) /\ ((x0 y0) = (x0 y1)))) -> y0 = y1) /\ (@HAS_SIZE a0 x1 x2)) -> (@HAS_SIZE a1 (@IMAGE a0 a1 x0 x1) x2) = True.
Definition term1180 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : a1) (x2 : type1413 a0 a1) (x3 : a0) (x4 : prod a0 a1) (x5 : prod a0 a1) := (fun y0 : prod a0 a1 => ((@IN a0 x3 x0) /\ (@IN a1 x1 (x2 x3))) /\ (x4 = y0)) x5.
Definition term1086 (a0 : Type') (a1 : Type') (x0 : a0 -> a1) := (fun y0 : a0 -> a1 => forall y1 : a0 -> Prop, forall y2 : nat, ((forall y3 : a0, forall y4 : a0, ((@IN a0 y3 y1) /\ ((@IN a0 y4 y1) /\ ((y0 y3) = (y0 y4)))) -> y3 = y4) /\ (@HAS_SIZE a0 y1 y2)) -> @HAS_SIZE a1 (@IMAGE a0 a1 y0 y1) y2) x0.
Definition term1364 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : a0) (x2 : a1) (x3 : prod a0 a1) (x4 : a1) (x5 : type1413 a0 a1) (x6 : a0) := fun y0 : a0 -> Prop => forall y1 : nat, forall y2 : nat, (~ (@IN a0 x6 y0)) -> (@FINITE a0 y0) -> (y2 = (S (@CARD a0 y0))) -> (@HAS_SIZE a1 (x5 x6) y1) -> (forall y3 : a0, (@IN a0 y3 y0) -> @HAS_SIZE a1 (x5 y3) y1) -> (forall y3 : type1413 a0 a1, forall y4 : nat, (forall y5 : a0, (@IN a0 y5 y0) -> @HAS_SIZE a1 (y3 y5) y4) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (x0 y0 y3)) (Nat.mul (@CARD a0 y0) y4)) -> (@IN a0 x1 y0) -> (@IN a1 x2 (x5 x1)) -> (x3 = (@pair a0 a1 x1 x2)) -> (x3 = (@pair a0 a1 x6 x4)) -> (@IN a1 x4 (x5 x6)) -> (forall y3 : a0, forall y4 : a1, forall y5 : a0, forall y6 : a1, ((@pair a0 a1 y3 y4) = (@pair a0 a1 y5 y6)) = ((y3 = y5) /\ (y4 = y6))) -> (forall y3 : a0, forall y4 : nat, forall y5 : a0, forall y6 : nat, ((@pair a0 nat y3 y4) = (@pair a0 nat y5 y6)) = ((y3 = y5) /\ (y4 = y6))) -> (forall y3 : a0, forall y4 : prod a0 a1, forall y5 : a0, forall y6 : prod a0 a1, ((@pair a0 (prod a0 a1) y3 y4) = (@pair a0 (prod a0 a1) y5 y6)) = ((y3 = y5) /\ (y4 = y6))) -> (forall y3 : nat, forall y4 : a1, forall y5 : nat, forall y6 : a1, ((@pair nat a1 y3 y4) = (@pair nat a1 y5 y6)) = ((y3 = y5) /\ (y4 = y6))) -> ~ (forall y3 : prod a0 a1, forall y4 : a1, forall y5 : prod a0 a1, forall y6 : a1, ((@pair (prod a0 a1) a1 y3 y4) = (@pair (prod a0 a1) a1 y5 y6)) = ((y3 = y5) /\ (y4 = y6))).
Definition term1273 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a1) (x2 : prod a0 a1) (x3 : a1) (x4 : type1413 a0 a1) (x5 : a0) := fun y0 : a0 -> Prop => forall y1 : nat, forall y2 : nat, (~ (@IN a0 x5 y0)) -> (@FINITE a0 y0) -> (y2 = (S (@CARD a0 y0))) -> (@HAS_SIZE a1 (x4 x5) y1) -> (forall y3 : a0, (@IN a0 y3 y0) -> @HAS_SIZE a1 (x4 y3) y1) -> (forall y3 : type1413 a0 a1, forall y4 : nat, (forall y5 : a0, (@IN a0 y5 y0) -> @HAS_SIZE a1 (y3 y5) y4) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y5 : prod a0 a1 => exists y6 : a0, exists y7 : a1, @SETSPEC (prod a0 a1) y5 ((@IN a0 y6 y0) /\ (@IN a1 y7 (y3 y6))) (@pair a0 a1 y6 y7))) (Nat.mul (@CARD a0 y0) y4)) -> (@IN a0 x0 y0) -> (@IN a1 x1 (x4 x0)) -> (x2 = (@pair a0 a1 x0 x1)) -> (x2 = (@pair a0 a1 x5 x3)) -> (@IN a1 x3 (x4 x5)) -> (forall y3 : a0, forall y4 : a1, forall y5 : a0, forall y6 : a1, ((@pair a0 a1 y3 y4) = (@pair a0 a1 y5 y6)) = ((y3 = y5) /\ (y4 = y6))) -> (forall y3 : a0, forall y4 : nat, forall y5 : a0, forall y6 : nat, ((@pair a0 nat y3 y4) = (@pair a0 nat y5 y6)) = ((y3 = y5) /\ (y4 = y6))) -> (forall y3 : a0, forall y4 : prod a0 a1, forall y5 : a0, forall y6 : prod a0 a1, ((@pair a0 (prod a0 a1) y3 y4) = (@pair a0 (prod a0 a1) y5 y6)) = ((y3 = y5) /\ (y4 = y6))) -> (forall y3 : nat, forall y4 : a1, forall y5 : nat, forall y6 : a1, ((@pair nat a1 y3 y4) = (@pair nat a1 y5 y6)) = ((y3 = y5) /\ (y4 = y6))) -> ~ (forall y3 : prod a0 a1, forall y4 : a1, forall y5 : prod a0 a1, forall y6 : a1, ((@pair (prod a0 a1) a1 y3 y4) = (@pair (prod a0 a1) a1 y5 y6)) = ((y3 = y5) /\ (y4 = y6))).
Definition term1272 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a1) (x2 : prod a0 a1) (x3 : a1) (x4 : type1413 a0 a1) (x5 : a0) := fun y0 : a0 -> Prop => forall y1 : nat, forall y2 : nat, (~ (@IN a0 x5 y0)) -> (@FINITE a0 y0) -> (y2 = (S (@CARD a0 y0))) -> (@HAS_SIZE a1 (x4 x5) y1) -> (forall y3 : a0, (@IN a0 y3 y0) -> @HAS_SIZE a1 (x4 y3) y1) -> (forall y3 : type1413 a0 a1, forall y4 : nat, (forall y5 : a0, (@IN a0 y5 y0) -> @HAS_SIZE a1 (y3 y5) y4) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y5 : prod a0 a1 => exists y6 : a0, exists y7 : a1, @SETSPEC (prod a0 a1) y5 ((@IN a0 y6 y0) /\ (@IN a1 y7 (y3 y6))) (@pair a0 a1 y6 y7))) (Nat.mul (@CARD a0 y0) y4)) -> (@IN a0 x0 y0) -> (@IN a1 x1 (x4 x0)) -> (x2 = (@pair a0 a1 x0 x1)) -> (x2 = (@pair a0 a1 x5 x3)) -> (@IN a1 x3 (x4 x5)) -> (forall y3 : a0, forall y4 : a1, forall y5 : a0, forall y6 : a1, ((@pair a0 a1 y3 y4) = (@pair a0 a1 y5 y6)) = ((y3 = y5) /\ (y4 = y6))) -> (forall y3 : a0, forall y4 : nat, forall y5 : a0, forall y6 : nat, ((@pair a0 nat y3 y4) = (@pair a0 nat y5 y6)) = ((y3 = y5) /\ (y4 = y6))) -> (forall y3 : a0, forall y4 : prod a0 a1, forall y5 : a0, forall y6 : prod a0 a1, ((@pair a0 (prod a0 a1) y3 y4) = (@pair a0 (prod a0 a1) y5 y6)) = ((y3 = y5) /\ (y4 = y6))) -> (forall y3 : nat, forall y4 : a1, forall y5 : nat, forall y6 : a1, ((@pair nat a1 y3 y4) = (@pair nat a1 y5 y6)) = ((y3 = y5) /\ (y4 = y6))) -> (forall y3 : prod a0 a1, forall y4 : a1, forall y5 : prod a0 a1, forall y6 : a1, ((@pair (prod a0 a1) a1 y3 y4) = (@pair (prod a0 a1) a1 y5 y6)) = ((y3 = y5) /\ (y4 = y6))) -> False.
Definition term602 (a0 : Type') (a1 : Type') := fun y0 : a0 -> Prop => forall y1 : nat, forall y2 : type1413 a0 a1, forall y3 : nat, (((@FINITE a0 y0) /\ ((@CARD a0 y0) = y1)) /\ (forall y4 : a0, (@IN a0 y4 y0) -> @HAS_SIZE a1 (y2 y4) y3)) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y4 : prod a0 a1 => exists y5 : a0, exists y6 : a1, @SETSPEC (prod a0 a1) y4 ((@IN a0 y5 y0) /\ (@IN a1 y6 (y2 y5))) (@pair a0 a1 y5 y6))) (Nat.mul y1 y3).
Definition term601 (a0 : Type') (a1 : Type') := fun y0 : a0 -> Prop => forall y1 : nat, forall y2 : type1413 a0 a1, forall y3 : nat, ((@HAS_SIZE a0 y0 y1) /\ (forall y4 : a0, (@IN a0 y4 y0) -> @HAS_SIZE a1 (y2 y4) y3)) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y4 : prod a0 a1 => exists y5 : a0, exists y6 : a1, @SETSPEC (prod a0 a1) y4 ((@IN a0 y5 y0) /\ (@IN a1 y6 (y2 y5))) (@pair a0 a1 y5 y6))) (Nat.mul y1 y3).
Definition term94 (a0 : Type') (a1 : Type') (x0 : type1223 a0 a1) (x1 : prod a1 a0) := (fun y0 : prod a1 a0 => x0 y0) x1.
Definition term1595 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : a0 -> Prop) (x2 : type1413 a0 a1) := fun y0 : type1207 a0 a1 => forall y1 : prod a0 a1, exists y2 : a1, (~ (x0 x1 x2 y1)) \/ (@SETSPEC (prod a0 a1) y1 ((@IN a0 (y0 y1) x1) /\ (@IN a1 y2 (x2 (y0 y1)))) (@pair a0 a1 (y0 y1) y2)).
Definition term250 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : type1470 a0 a1) (x2 : prod a1 a0) (x3 : a1) := (fun y0 : a1 => exists y1 : a0, ((x0 y0) /\ (x1 y0 y1)) /\ (x2 = (@pair a1 a0 y0 y1))) x3.
Definition term903 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a0 -> Prop) := forall y0 : nat, ((S (@CARD a0 x1)) = y0) -> forall y1 : type1413 a0 a1, forall y2 : nat, (forall y3 : a0, ((y3 = x0) \/ (@IN a0 y3 x1)) -> @HAS_SIZE a1 (y1 y3) y2) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y3 : prod a0 a1 => exists y4 : a0, exists y5 : a1, @SETSPEC (prod a0 a1) y3 (((y4 = x0) \/ (@IN a0 y4 x1)) /\ (@IN a1 y5 (y1 y4))) (@pair a0 a1 y4 y5))) (Nat.mul y0 y2).
Definition term799 (a0 : Type') (a1 : Type') := forall y0 : nat, ((NUMERAL 0) = y0) -> forall y1 : nat, @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y2 : prod a0 a1 => exists y3 : a0, exists y4 : a1, @SETSPEC (prod a0 a1) y2 False (@pair a0 a1 y3 y4))) (Nat.mul y0 y1).
Definition term702 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a0 -> Prop) := forall y0 : nat, ((@CARD a0 (@INSERT a0 x0 x1)) = y0) -> forall y1 : type1413 a0 a1, forall y2 : nat, (forall y3 : a0, (@IN a0 y3 (@INSERT a0 x0 x1)) -> @HAS_SIZE a1 (y1 y3) y2) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y3 : prod a0 a1 => exists y4 : a0, exists y5 : a1, @SETSPEC (prod a0 a1) y3 ((@IN a0 y4 (@INSERT a0 x0 x1)) /\ (@IN a1 y5 (y1 y4))) (@pair a0 a1 y4 y5))) (Nat.mul y0 y2).
Definition term690 (a0 : Type') (a1 : Type') := forall y0 : nat, ((@CARD a0 (@EMPTY a0)) = y0) -> forall y1 : type1413 a0 a1, forall y2 : nat, (forall y3 : a0, (@IN a0 y3 (@EMPTY a0)) -> @HAS_SIZE a1 (y1 y3) y2) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y3 : prod a0 a1 => exists y4 : a0, exists y5 : a1, @SETSPEC (prod a0 a1) y3 ((@IN a0 y4 (@EMPTY a0)) /\ (@IN a1 y5 (y1 y4))) (@pair a0 a1 y4 y5))) (Nat.mul y0 y2).
Definition term683 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) := forall y0 : nat, ((@CARD a0 x0) = y0) -> forall y1 : type1413 a0 a1, forall y2 : nat, (forall y3 : a0, (@IN a0 y3 x0) -> @HAS_SIZE a1 (y1 y3) y2) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y3 : prod a0 a1 => exists y4 : a0, exists y5 : a1, @SETSPEC (prod a0 a1) y3 ((@IN a0 y4 x0) /\ (@IN a1 y5 (y1 y4))) (@pair a0 a1 y4 y5))) (Nat.mul y0 y2).
Definition term501 (a0 : Type') (x0 : a0) := (fun y0 : a0 => exists y1 : a0, y1 = y0) x0.
Definition term835 (a0 : Type') (x0 : a0) (x1 : a0 -> Prop) := ((~ False) -> (S (@CARD a0 x1)) = (S (@CARD a0 x1))) -> (@COND nat (@IN a0 x0 x1) (@CARD a0 x1) (S (@CARD a0 x1))) = (@COND nat False (@CARD a0 x1) (S (@CARD a0 x1))).
Definition term1335 (a0 : Type') (x0 : a0) := fun y0 : nat => forall y1 : a0, forall y2 : nat, ((@pair a0 nat x0 y0) = (@pair a0 nat y1 y2)) = ((x0 = y1) /\ (y0 = y2)).
Definition term1321 (a0 : Type') := fun y0 : nat => forall y1 : a0, forall y2 : nat, forall y3 : a0, ((@pair nat a0 y0 y1) = (@pair nat a0 y2 y3)) = ((y0 = y2) /\ (y1 = y3)).
Definition term1754 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : type619 a0 a1) := fun y0 : type620 a0 a1 => (forall y1 : a0 -> Prop, forall y2 : type1413 a0 a1, forall y3 : prod a0 a1, (x0 y1 y2 y3) \/ (forall y4 : a0, forall y5 : a1, ~ (@SETSPEC (prod a0 a1) y3 ((@IN a0 y4 y1) /\ (@IN a1 y5 (y2 y4))) (@pair a0 a1 y4 y5)))) /\ ((fun y1 : type620 a0 a1 => forall y2 : a0 -> Prop, forall y3 : type1413 a0 a1, forall y4 : prod a0 a1, (~ (x0 y2 y3 y4)) \/ (@SETSPEC (prod a0 a1) y4 ((@IN a0 (x1 y2 y3 y4) y2) /\ (@IN a1 (y1 y2 y3 y4) (y3 (x1 y2 y3 y4)))) (@pair a0 a1 (x1 y2 y3 y4) (y1 y2 y3 y4)))) y0).
Definition term1740 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) := fun y0 : type619 a0 a1 => (forall y1 : a0 -> Prop, forall y2 : type1413 a0 a1, forall y3 : prod a0 a1, (x0 y1 y2 y3) \/ (forall y4 : a0, forall y5 : a1, ~ (@SETSPEC (prod a0 a1) y3 ((@IN a0 y4 y1) /\ (@IN a1 y5 (y2 y4))) (@pair a0 a1 y4 y5)))) /\ ((fun y1 : type619 a0 a1 => exists y2 : type620 a0 a1, forall y3 : a0 -> Prop, forall y4 : type1413 a0 a1, forall y5 : prod a0 a1, (~ (x0 y3 y4 y5)) \/ (@SETSPEC (prod a0 a1) y5 ((@IN a0 (y1 y3 y4 y5) y3) /\ (@IN a1 (y2 y3 y4 y5) (y4 (y1 y3 y4 y5)))) (@pair a0 a1 (y1 y3 y4 y5) (y2 y3 y4 y5)))) y0).
Definition term2085 (a0 : Type') (x0 : a0 -> Prop) (x1 : a0 -> Prop) := and (x0 = x1).
Definition term2062 (a0 : Type') (x0 : type686 a0) (x1 : type686 a0) := and (x0 = x1).
Definition term483 (a0 : Type') (a1 : Type') (x0 : type1470 a0 a1) (x1 : a1) (x2 : a0) (x3 : a1) (x4 : a0) := (x0 x3 x4) /\ ((@pair a1 a0 x1 x2) = (@pair a1 a0 x3 x4)).
Definition term1847 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a0) (x2 : a1) (x3 : a1) := ((@pair a0 a1 x0 x2) = (@pair a0 a1 x1 x3)) \/ ((~ (x0 = x1)) \/ (~ (x2 = x3))).
Definition term1127 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a1) := @eq (prod a0 a1) (@pair a0 a1 x0 x1).
Definition term1870 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a0) (x2 : a1) := @eq Prop (forall y0 : a1, (((@pair a0 a1 x0 x2) = (@pair a0 a1 x1 y0)) \/ ((~ (x0 = x1)) \/ (~ (x2 = y0)))) /\ ((~ ((@pair a0 a1 x0 x2) = (@pair a0 a1 x1 y0))) \/ ((x0 = x1) /\ (x2 = y0)))).
Definition term2057 (a0 : Type') (x0 : type686 a0) (x1 : type686 a0) (x2 : type686 a0) := (~ (x1 = x0)) \/ (~ (x1 = x2)).
Definition term1097 (a0 : Type') (a1 : Type') (x0 : type1413 a0 a1) (x1 : a0 -> Prop) (x2 : nat) := (forall y0 : a0, (@IN a0 y0 x1) -> @HAS_SIZE a1 (x0 y0) x2) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y0 : prod a0 a1 => exists y1 : a0, exists y2 : a1, @SETSPEC (prod a0 a1) y0 ((@IN a0 y1 x1) /\ (@IN a1 y2 (x0 y1))) (@pair a0 a1 y1 y2))) (Nat.mul (@CARD a0 x1) x2).
Definition term151 (a0 : Type') (a1 : Type') (x0 : prod a1 a0) (x1 : a1 -> Prop) (x2 : type1470 a0 a1) (x3 : a1) := fun y0 : a0 => (fun y1 : Prop => fun y2 : prod a1 a0 => y1 /\ (x0 = y2)) ((@IN a1 x3 x1) /\ (@IN a0 y0 (x2 x3))) (@pair a1 a0 x3 y0).
Definition term1044 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a0 -> Prop) (x2 : type1413 a0 a1) (x3 : nat) (x4 : nat) := ((@HAS_SIZE a1 (x2 x0) x4) /\ (forall y0 : a0, (@IN a0 y0 x1) -> @HAS_SIZE a1 (x2 y0) x4)) -> (@HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y0 : prod a0 a1 => exists y1 : a0, exists y2 : a1, @SETSPEC (prod a0 a1) y0 (((y1 = x0) \/ (@IN a0 y1 x1)) /\ (@IN a1 y2 (x2 y1))) (@pair a0 a1 y1 y2))) (Nat.mul x3 x4)) = (@HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y0 : prod a0 a1 => exists y1 : a0, exists y2 : a1, @SETSPEC (prod a0 a1) y0 (((y1 = x0) \/ (@IN a0 y1 x1)) /\ (@IN a1 y2 (x2 y1))) (@pair a0 a1 y1 y2))) (Nat.mul x3 x4)).
Definition term79 (a0 : Type') (a1 : Type') (x0 : a1) (x1 : a1 -> Prop) (x2 : a0) (x3 : type1470 a0 a1) (x4 : a1) (x5 : prod a1 a0) := fun y0 : prod a1 a0 => (((x4 = x0) \/ (@IN a1 x4 x1)) /\ (@IN a0 x2 (x3 x4))) /\ (x5 = y0).
Definition term429 (a0 : Type') (a1 : Type') (x0 : a1) (x1 : a1 -> Prop) (x2 : type1470 a0 a1) (x3 : prod a1 a0) := fun y0 : a1 => forall y1 : a0, (((~ (y0 = x0)) \/ (~ (x2 y0 y1))) \/ (~ (x3 = (@pair a1 a0 y0 y1)))) /\ (((~ (x1 y0)) \/ (~ (x2 y0 y1))) \/ (~ (x3 = (@pair a1 a0 y0 y1)))).
Definition term940 (a0 : Type') (a1 : Type') (x0 : prod a0 a1) := (fun y0 : Prop => (fun y1 : Prop => fun y2 : prod a0 a1 => y1 /\ (x0 = y2)) y0) False.
Definition term144 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : type1470 a0 a1) (x2 : prod a1 a0) (x3 : a1) (x4 : a0) := (fun y0 : prod a1 a0 => ((x0 x3) /\ (x1 x3 x4)) /\ (x2 = y0)) (@pair a1 a0 x3 x4).
Definition term697 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a0 -> Prop) := ((fun y0 : a0 -> Prop => forall y1 : nat, ((@CARD a0 y0) = y1) -> forall y2 : type1413 a0 a1, forall y3 : nat, (forall y4 : a0, (@IN a0 y4 y0) -> @HAS_SIZE a1 (y2 y4) y3) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y4 : prod a0 a1 => exists y5 : a0, exists y6 : a1, @SETSPEC (prod a0 a1) y4 ((@IN a0 y5 y0) /\ (@IN a1 y6 (y2 y5))) (@pair a0 a1 y5 y6))) (Nat.mul y1 y3)) x1) /\ ((~ (@IN a0 x0 x1)) /\ (@FINITE a0 x1)).
Definition term238 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : type1470 a0 a1) (x2 : prod a1 a0) (x3 : a1) (x4 : a0) := (~ ((x0 x3) /\ (x1 x3 x4))) \/ (~ (x2 = (@pair a1 a0 x3 x4))).
Definition term1826 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : type1413 a0 a1) (x2 : a0 -> Prop) (x3 : nat -> a0) := (fun y0 : nat -> a0 => forall y1 : nat, ((@IN a0 (y0 y1) x2) /\ (~ (@HAS_SIZE a1 (x1 (y0 y1)) y1))) \/ (@HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (x0 x2 x1)) (Nat.mul (@CARD a0 x2) y1))) x3.
Definition term1506 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : a0 -> Prop) (x2 : type1413 a0 a1) := ((fun y0 : type1413 a0 a1 => forall y1 : prod a0 a1, (x0 x1 y0 y1) \/ (forall y2 : a0, forall y3 : a1, ~ (@SETSPEC (prod a0 a1) y1 ((@IN a0 y2 x1) /\ (@IN a1 y3 (y0 y2))) (@pair a0 a1 y2 y3)))) x2) /\ ((fun y0 : type1413 a0 a1 => forall y1 : prod a0 a1, (~ (x0 x1 y0 y1)) \/ (exists y2 : a0, exists y3 : a1, @SETSPEC (prod a0 a1) y1 ((@IN a0 y2 x1) /\ (@IN a1 y3 (y0 y2))) (@pair a0 a1 y2 y3))) x2).
Definition term1407 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) := @eq Prop (x0 = (fun y0 : a0 -> Prop => fun y1 : type1413 a0 a1 => fun y2 : prod a0 a1 => exists y3 : a0, exists y4 : a1, @SETSPEC (prod a0 a1) y2 ((@IN a0 y3 y0) /\ (@IN a1 y4 (y1 y3))) (@pair a0 a1 y3 y4))).
Definition term210 (a0 : Type') (a1 : Type') (x0 : a1) (x1 : a1 -> Prop) (x2 : type1470 a0 a1) (x3 : a1) (x4 : a0) := ((~ (x3 = x0)) /\ (~ (x1 x3))) \/ (~ (x2 x3 x4)).
Definition term2031 (x0 : Prop) (x1 : Prop) := (~ x0) /\ (~ x1).
Definition term1562 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : prod a0 a1) (x2 : a0 -> Prop) (x3 : type1413 a0 a1) (x4 : a0) := @eq Prop ((~ (x0 x2 x3 x1)) \/ (exists y0 : a1, @SETSPEC (prod a0 a1) x1 ((@IN a0 x4 x2) /\ (@IN a1 y0 (x3 x4))) (@pair a0 a1 x4 y0))).
Definition term1561 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : prod a0 a1) (x2 : a0 -> Prop) (x3 : type1413 a0 a1) (x4 : a0) := @eq Prop ((~ (x0 x2 x3 x1)) \/ (exists y0 : a1, (fun y1 : a1 => @SETSPEC (prod a0 a1) x1 ((@IN a0 x4 x2) /\ (@IN a1 y1 (x3 x4))) (@pair a0 a1 x4 y1)) y0)).
Definition term1551 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : prod a0 a1) (x2 : a0 -> Prop) (x3 : type1413 a0 a1) := @eq Prop ((~ (x0 x2 x3 x1)) \/ (exists y0 : a0, exists y1 : a1, @SETSPEC (prod a0 a1) x1 ((@IN a0 y0 x2) /\ (@IN a1 y1 (x3 y0))) (@pair a0 a1 y0 y1))).
Definition term1550 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : prod a0 a1) (x2 : a0 -> Prop) (x3 : type1413 a0 a1) := @eq Prop ((~ (x0 x2 x3 x1)) \/ (exists y0 : a0, (fun y1 : a0 => exists y2 : a1, @SETSPEC (prod a0 a1) x1 ((@IN a0 y1 x2) /\ (@IN a1 y2 (x3 y1))) (@pair a0 a1 y1 y2)) y0)).
Definition term1021 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : type1413 a0 a1) (x2 : a0) (x3 : nat) := ((fun y0 : a0 => y0 = x2) x0) -> @HAS_SIZE a1 (x1 x2) x3.
Definition term1360 (a0 : Type') (a1 : Type') (x0 : nat) (x1 : type621 a0 a1) (x2 : a0 -> Prop) (x3 : a0) (x4 : a1) (x5 : prod a0 a1) (x6 : a1) (x7 : type1413 a0 a1) (x8 : a0) := fun y0 : nat => (~ (@IN a0 x8 x2)) -> (@FINITE a0 x2) -> (y0 = (S (@CARD a0 x2))) -> (@HAS_SIZE a1 (x7 x8) x0) -> (forall y1 : a0, (@IN a0 y1 x2) -> @HAS_SIZE a1 (x7 y1) x0) -> (forall y1 : type1413 a0 a1, forall y2 : nat, (forall y3 : a0, (@IN a0 y3 x2) -> @HAS_SIZE a1 (y1 y3) y2) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (x1 x2 y1)) (Nat.mul (@CARD a0 x2) y2)) -> (@IN a0 x3 x2) -> (@IN a1 x4 (x7 x3)) -> (x5 = (@pair a0 a1 x3 x4)) -> (x5 = (@pair a0 a1 x8 x6)) -> (@IN a1 x6 (x7 x8)) -> (forall y1 : a0, forall y2 : a1, forall y3 : a0, forall y4 : a1, ((@pair a0 a1 y1 y2) = (@pair a0 a1 y3 y4)) = ((y1 = y3) /\ (y2 = y4))) -> (forall y1 : a0, forall y2 : nat, forall y3 : a0, forall y4 : nat, ((@pair a0 nat y1 y2) = (@pair a0 nat y3 y4)) = ((y1 = y3) /\ (y2 = y4))) -> (forall y1 : a0, forall y2 : prod a0 a1, forall y3 : a0, forall y4 : prod a0 a1, ((@pair a0 (prod a0 a1) y1 y2) = (@pair a0 (prod a0 a1) y3 y4)) = ((y1 = y3) /\ (y2 = y4))) -> (forall y1 : nat, forall y2 : a1, forall y3 : nat, forall y4 : a1, ((@pair nat a1 y1 y2) = (@pair nat a1 y3 y4)) = ((y1 = y3) /\ (y2 = y4))) -> ~ (forall y1 : prod a0 a1, forall y2 : a1, forall y3 : prod a0 a1, forall y4 : a1, ((@pair (prod a0 a1) a1 y1 y2) = (@pair (prod a0 a1) a1 y3 y4)) = ((y1 = y3) /\ (y2 = y4))).
Definition term557 (a0 : Type') (x0 : a0) := (fun y0 : a0 => forall y1 : a0 -> Prop, (@FINITE a0 y1) -> (@CARD a0 (@INSERT a0 y0 y1)) = (@COND nat (@IN a0 y0 y1) (@CARD a0 y1) (S (@CARD a0 y1)))) x0.
Definition term394 (a0 : Type') (a1 : Type') (x0 : a1) (x1 : a1 -> Prop) (x2 : prod a1 a0) (x3 : type1470 a0 a1) (x4 : a1) := or (exists y0 : a0, ((((x0 = x4) \/ (x1 x0)) /\ (x3 x0 y0)) /\ (x2 = (@pair a1 a0 x0 y0))) /\ ((forall y1 : a1, forall y2 : a0, ((~ (x1 y1)) \/ (~ (x3 y1 y2))) \/ (~ (x2 = (@pair a1 a0 y1 y2)))) /\ (forall y1 : a0, (~ (x2 = (@pair a1 a0 x4 y1))) \/ (~ (x3 x4 y1))))).
Definition term323 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : type1470 a0 a1) (x2 : prod a1 a0) (x3 : a1) := or (exists y0 : a0, ((x0 x3) /\ (x1 x3 y0)) /\ (x2 = (@pair a1 a0 x3 y0))).
Definition term387 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : prod a1 a0) (x2 : type1470 a0 a1) (x3 : a1) := or (exists y0 : a1, (fun y1 : a1 => exists y2 : a0, ((((y1 = x3) \/ (x0 y1)) /\ (x2 y1 y2)) /\ (x1 = (@pair a1 a0 y1 y2))) /\ ((forall y3 : a1, forall y4 : a0, ((~ (x0 y3)) \/ (~ (x2 y3 y4))) \/ (~ (x1 = (@pair a1 a0 y3 y4)))) /\ (forall y3 : a0, (~ (x1 = (@pair a1 a0 x3 y3))) \/ (~ (x2 x3 y3))))) y0).
Definition term319 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : type1470 a0 a1) (x2 : prod a1 a0) := or (exists y0 : a1, (fun y1 : a1 => exists y2 : a0, ((x0 y1) /\ (x1 y1 y2)) /\ (x2 = (@pair a1 a0 y1 y2))) y0).
Definition term580 (a0 : Type') (x0 : a0 -> Prop) (x1 : nat) := and ((@FINITE a0 x0) /\ ((@CARD a0 x0) = x1)).
Definition term1207 (a0 : Type') (a1 : Type') (x0 : prod a0 a1) (x1 : a0 -> Prop) (x2 : type1413 a0 a1) (x3 : a0) := @eq Prop (@IN (prod a0 a1) x0 (@INTER (prod a0 a1) (@GSPEC (prod a0 a1) (fun y0 : prod a0 a1 => exists y1 : a0, exists y2 : a1, @SETSPEC (prod a0 a1) y0 ((@IN a0 y1 x1) /\ (@IN a1 y2 (x2 y1))) (@pair a0 a1 y1 y2))) (@IMAGE a1 (prod a0 a1) (fun y0 : a1 => @pair a0 a1 x3 y0) (x2 x3)))).
Definition term1733 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : type619 a0 a1) := (fun y0 : type619 a0 a1 => exists y1 : type620 a0 a1, forall y2 : a0 -> Prop, forall y3 : type1413 a0 a1, forall y4 : prod a0 a1, (~ (x0 y2 y3 y4)) \/ (@SETSPEC (prod a0 a1) y4 ((@IN a0 (y0 y2 y3 y4) y2) /\ (@IN a1 (y1 y2 y3 y4) (y3 (y0 y2 y3 y4)))) (@pair a0 a1 (y0 y2 y3 y4) (y1 y2 y3 y4)))) x1.
Definition term1413 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) := fun y0 : type1413 a0 a1 => (fun y1 : type1413 a0 a1 => fun y2 : prod a0 a1 => exists y3 : a0, exists y4 : a1, @SETSPEC (prod a0 a1) y2 ((@IN a0 y3 x0) /\ (@IN a1 y4 (y1 y3))) (@pair a0 a1 y3 y4)) y0.
Definition term322 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : type1470 a0 a1) (x2 : prod a1 a0) (x3 : a1) := or ((fun y0 : a1 => exists y1 : a0, ((x0 y0) /\ (x1 y0 y1)) /\ (x2 = (@pair a1 a0 y0 y1))) x3).
Definition term1463 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : prod a0 a1) (x2 : a0 -> Prop) (x3 : type1413 a0 a1) := and ((x0 x2 x3 x1) \/ (~ (exists y0 : a0, exists y1 : a1, @SETSPEC (prod a0 a1) x1 ((@IN a0 y0 x2) /\ (@IN a1 y1 (x3 y0))) (@pair a0 a1 y0 y1)))).
Definition term1572 (a0 : Type') (a1 : Type') (x0 : type1413 a0 a1) := forall y0 : a0, exists y1 : a1, x0 y0 y1.
Definition term1090 (a0 : Type') (a1 : Type') (x0 : a0 -> a1) (x1 : a0 -> Prop) (x2 : nat) := (fun y0 : nat => ((forall y1 : a0, forall y2 : a0, ((@IN a0 y1 x1) /\ ((@IN a0 y2 x1) /\ ((x0 y1) = (x0 y2)))) -> y1 = y2) /\ (@HAS_SIZE a0 x1 y0)) -> @HAS_SIZE a1 (@IMAGE a0 a1 x0 x1) y0) x2.
Definition term1424 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : type1413 a0 a1) (x2 : prod a0 a1) := (fun y0 : prod a0 a1 => exists y1 : a0, exists y2 : a1, @SETSPEC (prod a0 a1) y0 ((@IN a0 y1 x0) /\ (@IN a1 y2 (x1 y1))) (@pair a0 a1 y1 y2)) x2.
Definition term760 (a0 : Type') (a1 : Type') (x0 : a1) (x1 : type1413 a0 a1) (x2 : a0) := @IN a1 x0 (x1 x2).
Definition term2054 (a0 : Type') (x0 : type686 a0) (x1 : type686 a0) (x2 : type686 a0) := @eq Prop ((~ (x0 = x1)) \/ ((~ (x0 = x2)) \/ (x1 = x2))).
Definition term1013 (a0 : Type') (a1 : Type') (x0 : type1413 a0 a1) (x1 : a0) (x2 : nat) := fun y0 : a0 => (y0 = x1) -> @HAS_SIZE a1 (x0 x1) x2.
Definition term648 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : nat) := fun y0 : type1413 a0 a1 => ((@CARD a0 x0) = x1) -> forall y1 : nat, (forall y2 : a0, (@IN a0 y2 x0) -> @HAS_SIZE a1 (y0 y2) y1) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y2 : prod a0 a1 => exists y3 : a0, exists y4 : a1, @SETSPEC (prod a0 a1) y2 ((@IN a0 y3 x0) /\ (@IN a1 y4 (y0 y3))) (@pair a0 a1 y3 y4))) (Nat.mul x1 y1).
Definition term85 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : type1470 a0 a1) (x2 : a1) := @IN a0 x0 (x1 x2).
Definition term1482 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : a0 -> Prop) (x2 : type1413 a0 a1) (x3 : prod a0 a1) := ((fun y0 : prod a0 a1 => (x0 x1 x2 y0) \/ (forall y1 : a0, forall y2 : a1, ~ (@SETSPEC (prod a0 a1) y0 ((@IN a0 y1 x1) /\ (@IN a1 y2 (x2 y1))) (@pair a0 a1 y1 y2)))) x3) /\ ((fun y0 : prod a0 a1 => (~ (x0 x1 x2 y0)) \/ (exists y1 : a0, exists y2 : a1, @SETSPEC (prod a0 a1) y0 ((@IN a0 y1 x1) /\ (@IN a1 y2 (x2 y1))) (@pair a0 a1 y1 y2))) x3).
Definition term1378 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) := (x0 = (fun y0 : a0 -> Prop => fun y1 : type1413 a0 a1 => fun y2 : prod a0 a1 => exists y3 : a0, exists y4 : a1, @SETSPEC (prod a0 a1) y2 ((@IN a0 y3 y0) /\ (@IN a1 y4 (y1 y3))) (@pair a0 a1 y3 y4))) -> (forall y0 : a0, forall y1 : type1413 a0 a1, forall y2 : a1, forall y3 : prod a0 a1, forall y4 : a1, forall y5 : a0, forall y6 : a0 -> Prop, forall y7 : nat, forall y8 : nat, (~ (@IN a0 y0 y6)) -> (@FINITE a0 y6) -> (y8 = (S (@CARD a0 y6))) -> (@HAS_SIZE a1 (y1 y0) y7) -> (forall y9 : a0, (@IN a0 y9 y6) -> @HAS_SIZE a1 (y1 y9) y7) -> (forall y9 : type1413 a0 a1, forall y10 : nat, (forall y11 : a0, (@IN a0 y11 y6) -> @HAS_SIZE a1 (y9 y11) y10) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y11 : prod a0 a1 => exists y12 : a0, exists y13 : a1, @SETSPEC (prod a0 a1) y11 ((@IN a0 y12 y6) /\ (@IN a1 y13 (y9 y12))) (@pair a0 a1 y12 y13))) (Nat.mul (@CARD a0 y6) y10)) -> (@IN a0 y5 y6) -> (@IN a1 y4 (y1 y5)) -> (y3 = (@pair a0 a1 y5 y4)) -> (y3 = (@pair a0 a1 y0 y2)) -> (@IN a1 y2 (y1 y0)) -> (forall y9 : a0, forall y10 : a1, forall y11 : a0, forall y12 : a1, ((@pair a0 a1 y9 y10) = (@pair a0 a1 y11 y12)) = ((y9 = y11) /\ (y10 = y12))) -> (forall y9 : a0, forall y10 : nat, forall y11 : a0, forall y12 : nat, ((@pair a0 nat y9 y10) = (@pair a0 nat y11 y12)) = ((y9 = y11) /\ (y10 = y12))) -> (forall y9 : a0, forall y10 : prod a0 a1, forall y11 : a0, forall y12 : prod a0 a1, ((@pair a0 (prod a0 a1) y9 y10) = (@pair a0 (prod a0 a1) y11 y12)) = ((y9 = y11) /\ (y10 = y12))) -> (forall y9 : nat, forall y10 : a1, forall y11 : nat, forall y12 : a1, ((@pair nat a1 y9 y10) = (@pair nat a1 y11 y12)) = ((y9 = y11) /\ (y10 = y12))) -> ~ (forall y9 : prod a0 a1, forall y10 : a1, forall y11 : prod a0 a1, forall y12 : a1, ((@pair (prod a0 a1) a1 y9 y10) = (@pair (prod a0 a1) a1 y11 y12)) = ((y9 = y11) /\ (y10 = y12)))) = (forall y0 : a0, forall y1 : type1413 a0 a1, forall y2 : a1, forall y3 : prod a0 a1, forall y4 : a1, forall y5 : a0, forall y6 : a0 -> Prop, forall y7 : nat, forall y8 : nat, (~ (@IN a0 y0 y6)) -> (@FINITE a0 y6) -> (y8 = (S (@CARD a0 y6))) -> (@HAS_SIZE a1 (y1 y0) y7) -> (forall y9 : a0, (@IN a0 y9 y6) -> @HAS_SIZE a1 (y1 y9) y7) -> (forall y9 : type1413 a0 a1, forall y10 : nat, (forall y11 : a0, (@IN a0 y11 y6) -> @HAS_SIZE a1 (y9 y11) y10) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (x0 y6 y9)) (Nat.mul (@CARD a0 y6) y10)) -> (@IN a0 y5 y6) -> (@IN a1 y4 (y1 y5)) -> (y3 = (@pair a0 a1 y5 y4)) -> (y3 = (@pair a0 a1 y0 y2)) -> (@IN a1 y2 (y1 y0)) -> (forall y9 : a0, forall y10 : a1, forall y11 : a0, forall y12 : a1, ((@pair a0 a1 y9 y10) = (@pair a0 a1 y11 y12)) = ((y9 = y11) /\ (y10 = y12))) -> (forall y9 : a0, forall y10 : nat, forall y11 : a0, forall y12 : nat, ((@pair a0 nat y9 y10) = (@pair a0 nat y11 y12)) = ((y9 = y11) /\ (y10 = y12))) -> (forall y9 : a0, forall y10 : prod a0 a1, forall y11 : a0, forall y12 : prod a0 a1, ((@pair a0 (prod a0 a1) y9 y10) = (@pair a0 (prod a0 a1) y11 y12)) = ((y9 = y11) /\ (y10 = y12))) -> (forall y9 : nat, forall y10 : a1, forall y11 : nat, forall y12 : a1, ((@pair nat a1 y9 y10) = (@pair nat a1 y11 y12)) = ((y9 = y11) /\ (y10 = y12))) -> ~ (forall y9 : prod a0 a1, forall y10 : a1, forall y11 : prod a0 a1, forall y12 : a1, ((@pair (prod a0 a1) a1 y9 y10) = (@pair (prod a0 a1) a1 y11 y12)) = ((y9 = y11) /\ (y10 = y12)))).
Definition term29 (a0 : Type') (x0 : a0 -> Prop) (x1 : a0 -> Prop) := (fun y0 : a0 -> Prop => (@DISJOINT a0 x0 y0) = ((@INTER a0 x0 y0) = (@EMPTY a0))) x1.
Definition term177 (a0 : Type') (a1 : Type') (x0 : prod a1 a0) (x1 : type1470 a0 a1) (x2 : a1) := exists y0 : a0, (x0 = (@pair a1 a0 x2 y0)) /\ (x1 x2 y0).
Definition term72 (a0 : Type') (a1 : Type') (x0 : prod a1 a0) := fun y0 : Prop => fun y1 : prod a1 a0 => y0 /\ (x0 = y1).
Definition term491 (a0 : Type') (x0 : a0) (x1 : a0) := or (~ (x0 = x1)).
Definition term470 (x0 : Prop) (x1 : Prop) := ~ (x0 /\ x1).
Definition term1811 (a0 : Type') (a1 : Type') (x0 : nat -> a0) (x1 : type621 a0 a1) (x2 : type1413 a0 a1) (x3 : a0 -> Prop) := fun y0 : nat => ((@IN a0 (x0 y0) x3) /\ (~ (@HAS_SIZE a1 (x2 (x0 y0)) y0))) \/ (@HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (x1 x3 x2)) (Nat.mul (@CARD a0 x3) y0)).
Definition term1447 (a0 : Type') (a1 : Type') (x0 : prod a0 a1) (x1 : a0 -> Prop) (x2 : type1413 a0 a1) (x3 : a0) (x4 : a1) := ~ (@SETSPEC (prod a0 a1) x0 ((@IN a0 x3 x1) /\ (@IN a1 x4 (x2 x3))) (@pair a0 a1 x3 x4)).
Definition term1769 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : type1413 a0 a1) (x2 : nat) := or (~ (forall y0 : a0, (@IN a0 y0 x0) -> @HAS_SIZE a1 (x1 y0) x2)).
Definition term138 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : a0) (x2 : type1470 a0 a1) (x3 : a1) := and ((@IN a1 x3 x0) /\ (@IN a0 x1 (x2 x3))).
Definition term2104 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a1) (x2 : prod a0 a1) (x3 : a1) (x4 : type1413 a0 a1) (x5 : a0) (x6 : a0 -> Prop) := (fun y0 : a0 -> Prop => forall y1 : nat, forall y2 : nat, (~ (@IN a0 x5 y0)) -> (@FINITE a0 y0) -> (y2 = (S (@CARD a0 y0))) -> (@HAS_SIZE a1 (x4 x5) y1) -> (forall y3 : a0, (@IN a0 y3 y0) -> @HAS_SIZE a1 (x4 y3) y1) -> (forall y3 : type1413 a0 a1, forall y4 : nat, (forall y5 : a0, (@IN a0 y5 y0) -> @HAS_SIZE a1 (y3 y5) y4) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y5 : prod a0 a1 => exists y6 : a0, exists y7 : a1, @SETSPEC (prod a0 a1) y5 ((@IN a0 y6 y0) /\ (@IN a1 y7 (y3 y6))) (@pair a0 a1 y6 y7))) (Nat.mul (@CARD a0 y0) y4)) -> (@IN a0 x0 y0) -> (@IN a1 x1 (x4 x0)) -> (x2 = (@pair a0 a1 x0 x1)) -> (x2 = (@pair a0 a1 x5 x3)) -> (@IN a1 x3 (x4 x5)) -> (forall y3 : a0, forall y4 : a1, forall y5 : a0, forall y6 : a1, ((@pair a0 a1 y3 y4) = (@pair a0 a1 y5 y6)) = ((y3 = y5) /\ (y4 = y6))) -> (forall y3 : a0, forall y4 : nat, forall y5 : a0, forall y6 : nat, ((@pair a0 nat y3 y4) = (@pair a0 nat y5 y6)) = ((y3 = y5) /\ (y4 = y6))) -> (forall y3 : a0, forall y4 : prod a0 a1, forall y5 : a0, forall y6 : prod a0 a1, ((@pair a0 (prod a0 a1) y3 y4) = (@pair a0 (prod a0 a1) y5 y6)) = ((y3 = y5) /\ (y4 = y6))) -> (forall y3 : nat, forall y4 : a1, forall y5 : nat, forall y6 : a1, ((@pair nat a1 y3 y4) = (@pair nat a1 y5 y6)) = ((y3 = y5) /\ (y4 = y6))) -> (forall y3 : prod a0 a1, forall y4 : a1, forall y5 : prod a0 a1, forall y6 : a1, ((@pair (prod a0 a1) a1 y3 y4) = (@pair (prod a0 a1) a1 y5 y6)) = ((y3 = y5) /\ (y4 = y6))) -> False) x6.
Definition term517 (x0 : Prop) (x1 : Prop) := (fun y0 : Prop => ((y0 \/ x0) -> x1) = ((y0 -> x1) /\ (x0 -> x1))) True.
Definition term917 (a0 : Type') (a1 : Type') (x0 : nat) := @eq Prop (forall y0 : nat, @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y1 : prod a0 a1 => exists y2 : a0, exists y3 : a1, @SETSPEC (prod a0 a1) y1 False (@pair a0 a1 y2 y3))) (Nat.mul x0 y0)).
Definition term680 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) := @eq Prop (forall y0 : nat, (@FINITE a0 x0) -> ((@CARD a0 x0) = y0) -> forall y1 : type1413 a0 a1, forall y2 : nat, (forall y3 : a0, (@IN a0 y3 x0) -> @HAS_SIZE a1 (y1 y3) y2) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y3 : prod a0 a1 => exists y4 : a0, exists y5 : a1, @SETSPEC (prod a0 a1) y3 ((@IN a0 y4 x0) /\ (@IN a1 y5 (y1 y4))) (@pair a0 a1 y4 y5))) (Nat.mul y0 y2)).
Definition term679 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) := @eq Prop (forall y0 : nat, (@FINITE a0 x0) -> (fun y1 : nat => ((@CARD a0 x0) = y1) -> forall y2 : type1413 a0 a1, forall y3 : nat, (forall y4 : a0, (@IN a0 y4 x0) -> @HAS_SIZE a1 (y2 y4) y3) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y4 : prod a0 a1 => exists y5 : a0, exists y6 : a1, @SETSPEC (prod a0 a1) y4 ((@IN a0 y5 x0) /\ (@IN a1 y6 (y2 y5))) (@pair a0 a1 y5 y6))) (Nat.mul y1 y3)) y0).
Definition term636 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : type1413 a0 a1) (x2 : nat) := @eq Prop (forall y0 : nat, ((@CARD a0 x0) = x2) -> (forall y1 : a0, (@IN a0 y1 x0) -> @HAS_SIZE a1 (x1 y1) y0) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y1 : prod a0 a1 => exists y2 : a0, exists y3 : a1, @SETSPEC (prod a0 a1) y1 ((@IN a0 y2 x0) /\ (@IN a1 y3 (x1 y2))) (@pair a0 a1 y2 y3))) (Nat.mul x2 y0)).
Definition term635 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : type1413 a0 a1) (x2 : nat) := @eq Prop (forall y0 : nat, ((@CARD a0 x0) = x2) -> (fun y1 : nat => (forall y2 : a0, (@IN a0 y2 x0) -> @HAS_SIZE a1 (x1 y2) y1) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y2 : prod a0 a1 => exists y3 : a0, exists y4 : a1, @SETSPEC (prod a0 a1) y2 ((@IN a0 y3 x0) /\ (@IN a1 y4 (x1 y3))) (@pair a0 a1 y3 y4))) (Nat.mul x2 y1)) y0).
Definition term623 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : type1413 a0 a1) (x2 : nat) := @eq Prop (forall y0 : nat, (@FINITE a0 x0) -> ((@CARD a0 x0) = x2) -> (forall y1 : a0, (@IN a0 y1 x0) -> @HAS_SIZE a1 (x1 y1) y0) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y1 : prod a0 a1 => exists y2 : a0, exists y3 : a1, @SETSPEC (prod a0 a1) y1 ((@IN a0 y2 x0) /\ (@IN a1 y3 (x1 y2))) (@pair a0 a1 y2 y3))) (Nat.mul x2 y0)).
Definition term622 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : type1413 a0 a1) (x2 : nat) := @eq Prop (forall y0 : nat, (@FINITE a0 x0) -> (fun y1 : nat => ((@CARD a0 x0) = x2) -> (forall y2 : a0, (@IN a0 y2 x0) -> @HAS_SIZE a1 (x1 y2) y1) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y2 : prod a0 a1 => exists y3 : a0, exists y4 : a1, @SETSPEC (prod a0 a1) y2 ((@IN a0 y3 x0) /\ (@IN a1 y4 (x1 y3))) (@pair a0 a1 y3 y4))) (Nat.mul x2 y1)) y0).
Definition term659 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : nat) := ((@CARD a0 x0) = x1) -> forall y0 : type1413 a0 a1, (fun y1 : type1413 a0 a1 => forall y2 : nat, (forall y3 : a0, (@IN a0 y3 x0) -> @HAS_SIZE a1 (y1 y3) y2) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y3 : prod a0 a1 => exists y4 : a0, exists y5 : a1, @SETSPEC (prod a0 a1) y3 ((@IN a0 y4 x0) /\ (@IN a1 y5 (y1 y4))) (@pair a0 a1 y4 y5))) (Nat.mul x1 y2)) y0.
Definition term1843 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a0) (x2 : a1) (x3 : a1) := (~ (x0 = x1)) \/ (~ (x2 = x3)).
Definition term1130 (a0 : Type') (x0 : a0) (x1 : a0) := True /\ (x0 = x1).
Definition term75 (a0 : Type') (a1 : Type') (x0 : Prop) (x1 : prod a1 a0) := fun y0 : prod a1 a0 => x0 /\ (x1 = y0).
Definition term396 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : a1) (x2 : prod a1 a0) (x3 : type1470 a0 a1) (x4 : a1) := (exists y0 : a0, ((((x1 = x4) \/ (x0 x1)) /\ (x3 x1 y0)) /\ (x2 = (@pair a1 a0 x1 y0))) /\ ((forall y1 : a1, forall y2 : a0, ((~ (x0 y1)) \/ (~ (x3 y1 y2))) \/ (~ (x2 = (@pair a1 a0 y1 y2)))) /\ (forall y1 : a0, (~ (x2 = (@pair a1 a0 x4 y1))) \/ (~ (x3 x4 y1))))) \/ (exists y0 : a0, (forall y1 : a1, forall y2 : a0, (((~ (y1 = x4)) /\ (~ (x0 y1))) \/ (~ (x3 y1 y2))) \/ (~ (x2 = (@pair a1 a0 y1 y2)))) /\ ((((x0 x1) /\ (x3 x1 y0)) /\ (x2 = (@pair a1 a0 x1 y0))) \/ ((x2 = (@pair a1 a0 x4 y0)) /\ (x3 x4 y0)))).
Definition term1640 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : a0 -> Prop) (x2 : type464 a0 a1) (x3 : type1413 a0 a1) := (fun y0 : type1207 a0 a1 => exists y1 : type1208 a0 a1, forall y2 : prod a0 a1, (~ (x0 x1 x3 y2)) \/ (@SETSPEC (prod a0 a1) y2 ((@IN a0 (y0 y2) x1) /\ (@IN a1 (y1 y2) (x3 (y0 y2)))) (@pair a0 a1 (y0 y2) (y1 y2)))) (x2 x3).
Definition term12 (a0 : Type') (x0 : a0) (x1 : a0 -> Prop) (x2 : a0 -> Prop) := @IN a0 x0 (@INTER a0 x1 x2).
Definition term2055 (a0 : Type') (x0 : type686 a0) (x1 : type686 a0) (x2 : type686 a0) := @eq Prop ((x0 = x2) \/ ((~ (x1 = x0)) \/ (~ (x1 = x2)))).
Definition term1822 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : a0 -> Prop) := exists y0 : type471 a0 a1, forall y1 : type1413 a0 a1, (fun y2 : type1413 a0 a1 => fun y3 : nat -> a0 => forall y4 : nat, ((@IN a0 (y3 y4) x1) /\ (~ (@HAS_SIZE a1 (y2 (y3 y4)) y4))) \/ (@HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (x0 x1 y2)) (Nat.mul (@CARD a0 x1) y4))) y1 (y0 y1).
Definition term1820 (a0 : Type') (a1 : Type') (x0 : type461 a0 a1) := exists y0 : type471 a0 a1, forall y1 : type1413 a0 a1, x0 y1 (y0 y1).
Definition term1816 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : type1413 a0 a1) (x2 : a0 -> Prop) := exists y0 : nat -> a0, forall y1 : nat, ((@IN a0 (y0 y1) x2) /\ (~ (@HAS_SIZE a1 (x1 (y0 y1)) y1))) \/ (@HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (x0 x2 x1)) (Nat.mul (@CARD a0 x2) y1)).
Definition term1797 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : type1413 a0 a1) (x2 : a0 -> Prop) := exists y0 : nat -> a0, forall y1 : nat, (fun y2 : nat => fun y3 : a0 => ((@IN a0 y3 x2) /\ (~ (@HAS_SIZE a1 (x1 y3) y2))) \/ (@HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (x0 x2 x1)) (Nat.mul (@CARD a0 x2) y2))) y1 (y0 y1).
Definition term1795 (a0 : Type') (x0 : type1597 a0) := exists y0 : nat -> a0, forall y1 : nat, x0 y1 (y0 y1).
Definition term1704 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : type619 a0 a1) := exists y0 : type620 a0 a1, forall y1 : a0 -> Prop, (fun y2 : a0 -> Prop => fun y3 : type465 a0 a1 => forall y4 : type1413 a0 a1, forall y5 : prod a0 a1, (~ (x0 y2 y4 y5)) \/ (@SETSPEC (prod a0 a1) y5 ((@IN a0 (x1 y2 y4 y5) y2) /\ (@IN a1 (y3 y4 y5) (y4 (x1 y2 y4 y5)))) (@pair a0 a1 (x1 y2 y4 y5) (y3 y4 y5)))) y1 (y0 y1).
Definition term1702 (a0 : Type') (a1 : Type') (x0 : type585 a0 a1) := exists y0 : type620 a0 a1, forall y1 : a0 -> Prop, x0 y1 (y0 y1).
Definition term1681 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) := exists y0 : type619 a0 a1, forall y1 : a0 -> Prop, (fun y2 : a0 -> Prop => fun y3 : type464 a0 a1 => exists y4 : type465 a0 a1, forall y5 : type1413 a0 a1, forall y6 : prod a0 a1, (~ (x0 y2 y5 y6)) \/ (@SETSPEC (prod a0 a1) y6 ((@IN a0 (y3 y5 y6) y2) /\ (@IN a1 (y4 y5 y6) (y5 (y3 y5 y6)))) (@pair a0 a1 (y3 y5 y6) (y4 y5 y6)))) y1 (y0 y1).
Definition term1679 (a0 : Type') (a1 : Type') (x0 : type584 a0 a1) := exists y0 : type619 a0 a1, forall y1 : a0 -> Prop, x0 y1 (y0 y1).
Definition term1652 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : a0 -> Prop) (x2 : type464 a0 a1) := exists y0 : type465 a0 a1, forall y1 : type1413 a0 a1, (fun y2 : type1413 a0 a1 => fun y3 : type1208 a0 a1 => forall y4 : prod a0 a1, (~ (x0 x1 y2 y4)) \/ (@SETSPEC (prod a0 a1) y4 ((@IN a0 (x2 y2 y4) x1) /\ (@IN a1 (y3 y4) (y2 (x2 y2 y4)))) (@pair a0 a1 (x2 y2 y4) (y3 y4)))) y1 (y0 y1).
Definition term1650 (a0 : Type') (a1 : Type') (x0 : type451 a0 a1) := exists y0 : type465 a0 a1, forall y1 : type1413 a0 a1, x0 y1 (y0 y1).
Definition term1641 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : a0 -> Prop) (x2 : type464 a0 a1) (x3 : type1413 a0 a1) := exists y0 : type1208 a0 a1, forall y1 : prod a0 a1, (~ (x0 x1 x3 y1)) \/ (@SETSPEC (prod a0 a1) y1 ((@IN a0 (x2 x3 y1) x1) /\ (@IN a1 (y0 y1) (x3 (x2 x3 y1)))) (@pair a0 a1 (x2 x3 y1) (y0 y1))).
Definition term1629 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : a0 -> Prop) := exists y0 : type464 a0 a1, forall y1 : type1413 a0 a1, (fun y2 : type1413 a0 a1 => fun y3 : type1207 a0 a1 => exists y4 : type1208 a0 a1, forall y5 : prod a0 a1, (~ (x0 x1 y2 y5)) \/ (@SETSPEC (prod a0 a1) y5 ((@IN a0 (y3 y5) x1) /\ (@IN a1 (y4 y5) (y2 (y3 y5)))) (@pair a0 a1 (y3 y5) (y4 y5)))) y1 (y0 y1).
Definition term1627 (a0 : Type') (a1 : Type') (x0 : type450 a0 a1) := exists y0 : type464 a0 a1, forall y1 : type1413 a0 a1, x0 y1 (y0 y1).
Definition term1621 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : a0 -> Prop) (x2 : type1413 a0 a1) (x3 : type1207 a0 a1) := exists y0 : type1208 a0 a1, forall y1 : prod a0 a1, (~ (x0 x1 x2 y1)) \/ (@SETSPEC (prod a0 a1) y1 ((@IN a0 (x3 y1) x1) /\ (@IN a1 (y0 y1) (x2 (x3 y1)))) (@pair a0 a1 (x3 y1) (y0 y1))).
Definition term1600 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : a0 -> Prop) (x2 : type1413 a0 a1) (x3 : type1207 a0 a1) := exists y0 : type1208 a0 a1, forall y1 : prod a0 a1, (fun y2 : prod a0 a1 => fun y3 : a1 => (~ (x0 x1 x2 y2)) \/ (@SETSPEC (prod a0 a1) y2 ((@IN a0 (x3 y2) x1) /\ (@IN a1 y3 (x2 (x3 y2)))) (@pair a0 a1 (x3 y2) y3))) y1 (y0 y1).
Definition term1598 (a0 : Type') (a1 : Type') (x0 : type1206 a0 a1) := exists y0 : type1208 a0 a1, forall y1 : prod a0 a1, x0 y1 (y0 y1).
Definition term1577 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : a0 -> Prop) (x2 : type1413 a0 a1) := exists y0 : type1207 a0 a1, forall y1 : prod a0 a1, (fun y2 : prod a0 a1 => fun y3 : a0 => exists y4 : a1, (~ (x0 x1 x2 y2)) \/ (@SETSPEC (prod a0 a1) y2 ((@IN a0 y3 x1) /\ (@IN a1 y4 (x2 y3))) (@pair a0 a1 y3 y4))) y1 (y0 y1).
Definition term1575 (a0 : Type') (a1 : Type') (x0 : type1205 a0 a1) := exists y0 : type1207 a0 a1, forall y1 : prod a0 a1, x0 y1 (y0 y1).
Definition term932 (a0 : Type') (a1 : Type') (x0 : prod a0 a1) := (fun y0 : type1532 a0 a1 => exists y1 : a0, exists y2 : a1, y0 False (@pair a0 a1 y1 y2)) (@SETSPEC (prod a0 a1) x0).
Definition term579 (a0 : Type') (x0 : a0 -> Prop) (x1 : nat) := and (@HAS_SIZE a0 x0 x1).
Definition term28 (a0 : Type') (x0 : a0 -> Prop) := forall y0 : a0 -> Prop, (@DISJOINT a0 x0 y0) = ((@INTER a0 x0 y0) = (@EMPTY a0)).
Definition term2093 (a0 : Type') (x0 : type686 a0) (x1 : a0 -> Prop) (x2 : type686 a0) (x3 : a0 -> Prop) := ((x1 = x3) /\ ((x0 = x2) /\ (@I ((a0 -> Prop) -> Prop) x0 x1))) -> @I ((a0 -> Prop) -> Prop) x2 x3.
Definition term1031 (a0 : Type') (a1 : Type') (x0 : type1413 a0 a1) (x1 : a0) (x2 : nat) (x3 : Prop) := (fun y0 : Prop => forall y1 : Prop, ((exists y2 : a0, y2 = x1) = y0) -> (y0 -> (@HAS_SIZE a1 (x0 x1) x2) = y1) -> ((exists y2 : a0, y2 = x1) -> @HAS_SIZE a1 (x0 x1) x2) = (y0 -> y1)) x3.
Definition term812 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a0 -> Prop) (x2 : nat) (x3 : Prop) := (fun y0 : Prop => forall y1 : Prop, (((@CARD a0 (@INSERT a0 x0 x1)) = x2) = y0) -> (y0 -> (forall y2 : type1413 a0 a1, forall y3 : nat, (forall y4 : a0, (@IN a0 y4 (@INSERT a0 x0 x1)) -> @HAS_SIZE a1 (y2 y4) y3) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y4 : prod a0 a1 => exists y5 : a0, exists y6 : a1, @SETSPEC (prod a0 a1) y4 ((@IN a0 y5 (@INSERT a0 x0 x1)) /\ (@IN a1 y6 (y2 y5))) (@pair a0 a1 y5 y6))) (Nat.mul x2 y3)) = y1) -> (((@CARD a0 (@INSERT a0 x0 x1)) = x2) -> forall y2 : type1413 a0 a1, forall y3 : nat, (forall y4 : a0, (@IN a0 y4 (@INSERT a0 x0 x1)) -> @HAS_SIZE a1 (y2 y4) y3) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y4 : prod a0 a1 => exists y5 : a0, exists y6 : a1, @SETSPEC (prod a0 a1) y4 ((@IN a0 y5 (@INSERT a0 x0 x1)) /\ (@IN a1 y6 (y2 y5))) (@pair a0 a1 y5 y6))) (Nat.mul x2 y3)) = (y0 -> y1)) x3.
Definition term743 (a0 : Type') (a1 : Type') (x0 : type1413 a0 a1) (x1 : a0) (x2 : nat) (x3 : Prop) := (fun y0 : Prop => forall y1 : Prop, ((@IN a0 x1 (@EMPTY a0)) = y0) -> (y0 -> (@HAS_SIZE a1 (x0 x1) x2) = y1) -> ((@IN a0 x1 (@EMPTY a0)) -> @HAS_SIZE a1 (x0 x1) x2) = (y0 -> y1)) x3.
Definition term737 (a0 : Type') (a1 : Type') (x0 : type1413 a0 a1) (x1 : nat) (x2 : nat) (x3 : Prop) := (fun y0 : Prop => forall y1 : Prop, ((forall y2 : a0, (@IN a0 y2 (@EMPTY a0)) -> @HAS_SIZE a1 (x0 y2) x2) = y0) -> (y0 -> (@HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y2 : prod a0 a1 => exists y3 : a0, exists y4 : a1, @SETSPEC (prod a0 a1) y2 ((@IN a0 y3 (@EMPTY a0)) /\ (@IN a1 y4 (x0 y3))) (@pair a0 a1 y3 y4))) (Nat.mul x1 x2)) = y1) -> ((forall y2 : a0, (@IN a0 y2 (@EMPTY a0)) -> @HAS_SIZE a1 (x0 y2) x2) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y2 : prod a0 a1 => exists y3 : a0, exists y4 : a1, @SETSPEC (prod a0 a1) y2 ((@IN a0 y3 (@EMPTY a0)) /\ (@IN a1 y4 (x0 y3))) (@pair a0 a1 y3 y4))) (Nat.mul x1 x2)) = (y0 -> y1)) x3.
Definition term1694 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : type619 a0 a1) := fun y0 : a0 -> Prop => (fun y1 : a0 -> Prop => fun y2 : type464 a0 a1 => exists y3 : type465 a0 a1, forall y4 : type1413 a0 a1, forall y5 : prod a0 a1, (~ (x0 y1 y4 y5)) \/ (@SETSPEC (prod a0 a1) y5 ((@IN a0 (y2 y4 y5) y1) /\ (@IN a1 (y3 y4 y5) (y4 (y2 y4 y5)))) (@pair a0 a1 (y2 y4 y5) (y3 y4 y5)))) y0 (x1 y0).
Definition term1787 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : type621 a0 a1) (x2 : type1413 a0 a1) (x3 : a0 -> Prop) (x4 : nat) := ((fun y0 : a0 => (@IN a0 y0 x3) /\ (~ (@HAS_SIZE a1 (x2 y0) x4))) x0) \/ (@HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (x1 x3 x2)) (Nat.mul (@CARD a0 x3) x4)).
Definition term1460 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : a0 -> Prop) (x2 : type1413 a0 a1) (x3 : prod a0 a1) := or (x0 x1 x2 x3).
Definition term861 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a0 -> Prop) (x2 : type1413 a0 a1) (x3 : nat) := forall y0 : a0, ((y0 = x0) \/ (@IN a0 y0 x1)) -> @HAS_SIZE a1 (x2 y0) x3.
Definition term842 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a0 -> Prop) (x2 : type1413 a0 a1) (x3 : nat) := forall y0 : a0, (@IN a0 y0 (@INSERT a0 x0 x1)) -> @HAS_SIZE a1 (x2 y0) x3.
Definition term1921 (a0 : Type') (a1 : Type') (x0 : a0) := forall y0 : a1, (fun y1 : a1 => forall y2 : a0, forall y3 : a1, (~ ((@pair a0 a1 x0 y1) = (@pair a0 a1 y2 y3))) \/ ((x0 = y2) /\ (y1 = y3))) y0.
Definition term1916 (a0 : Type') (a1 : Type') (x0 : a0) := forall y0 : a1, (fun y1 : a1 => forall y2 : a0, forall y3 : a1, ((@pair a0 a1 x0 y1) = (@pair a0 a1 y2 y3)) \/ ((~ (x0 = y2)) \/ (~ (y1 = y3)))) y0.
Definition term1155 (a0 : Type') (a1 : Type') (x0 : prod a0 a1) (x1 : type1210 a0 a1) (x2 : type1210 a0 a1) := @IN (prod a0 a1) x0 (@INTER (prod a0 a1) x1 x2).
Definition term670 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : nat) := (@FINITE a0 x0) -> ((@CARD a0 x0) = x1) -> forall y0 : type1413 a0 a1, forall y1 : nat, (forall y2 : a0, (@IN a0 y2 x0) -> @HAS_SIZE a1 (y0 y2) y1) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y2 : prod a0 a1 => exists y3 : a0, exists y4 : a1, @SETSPEC (prod a0 a1) y2 ((@IN a0 y3 x0) /\ (@IN a1 y4 (y0 y3))) (@pair a0 a1 y3 y4))) (Nat.mul x1 y1).
Definition term512 (a0 : Type') (x0 : a0 -> Prop) (x1 : a0 -> Prop) := (forall y0 : a0, x0 y0) /\ (forall y0 : a0, x1 y0).
Definition term864 (a0 : Type') (x0 : a0) (x1 : a0) (x2 : a0 -> Prop) := and (@IN a0 x0 (@INSERT a0 x1 x2)).
Definition term1225 (a0 : Type') (a1 : Type') := (forall y0 : nat, forall y1 : a1, forall y2 : nat, forall y3 : a1, ((@pair nat a1 y0 y1) = (@pair nat a1 y2 y3)) = ((y0 = y2) /\ (y1 = y3))) -> (forall y0 : prod a0 a1, forall y1 : a1, forall y2 : prod a0 a1, forall y3 : a1, ((@pair (prod a0 a1) a1 y0 y1) = (@pair (prod a0 a1) a1 y2 y3)) = ((y0 = y2) /\ (y1 = y3))) -> False.
Definition term460 (a0 : Type') (a1 : Type') (x0 : a1) (x1 : type1470 a0 a1) (x2 : a1) (x3 : a0) (x4 : prod a1 a0) := (fun y0 : prod a1 a0 => (~ (x2 = x0)) \/ ((~ (x1 x2 x3)) \/ (~ (y0 = (@pair a1 a0 x2 x3))))) x4.
Definition term454 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : type1470 a0 a1) (x2 : a1) (x3 : a0) (x4 : prod a1 a0) := (fun y0 : prod a1 a0 => (~ (x0 x2)) \/ ((~ (x1 x2 x3)) \/ (~ (y0 = (@pair a1 a0 x2 x3))))) x4.
Definition term1241 (a0 : Type') (a1 : Type') (x0 : prod a0 a1) (x1 : a1) (x2 : type1413 a0 a1) (x3 : a0) := (x0 = (@pair a0 a1 x3 x1)) -> (@IN a1 x1 (x2 x3)) -> (forall y0 : a0, forall y1 : a1, forall y2 : a0, forall y3 : a1, ((@pair a0 a1 y0 y1) = (@pair a0 a1 y2 y3)) = ((y0 = y2) /\ (y1 = y3))) -> (forall y0 : a0, forall y1 : nat, forall y2 : a0, forall y3 : nat, ((@pair a0 nat y0 y1) = (@pair a0 nat y2 y3)) = ((y0 = y2) /\ (y1 = y3))) -> (forall y0 : a0, forall y1 : prod a0 a1, forall y2 : a0, forall y3 : prod a0 a1, ((@pair a0 (prod a0 a1) y0 y1) = (@pair a0 (prod a0 a1) y2 y3)) = ((y0 = y2) /\ (y1 = y3))) -> (forall y0 : nat, forall y1 : a1, forall y2 : nat, forall y3 : a1, ((@pair nat a1 y0 y1) = (@pair nat a1 y2 y3)) = ((y0 = y2) /\ (y1 = y3))) -> ~ (forall y0 : prod a0 a1, forall y1 : a1, forall y2 : prod a0 a1, forall y3 : a1, ((@pair (prod a0 a1) a1 y0 y1) = (@pair (prod a0 a1) a1 y2 y3)) = ((y0 = y2) /\ (y1 = y3))).
Definition term1240 (a0 : Type') (a1 : Type') (x0 : prod a0 a1) (x1 : a1) (x2 : type1413 a0 a1) (x3 : a0) := (x0 = (@pair a0 a1 x3 x1)) -> (@IN a1 x1 (x2 x3)) -> (forall y0 : a0, forall y1 : a1, forall y2 : a0, forall y3 : a1, ((@pair a0 a1 y0 y1) = (@pair a0 a1 y2 y3)) = ((y0 = y2) /\ (y1 = y3))) -> (forall y0 : a0, forall y1 : nat, forall y2 : a0, forall y3 : nat, ((@pair a0 nat y0 y1) = (@pair a0 nat y2 y3)) = ((y0 = y2) /\ (y1 = y3))) -> (forall y0 : a0, forall y1 : prod a0 a1, forall y2 : a0, forall y3 : prod a0 a1, ((@pair a0 (prod a0 a1) y0 y1) = (@pair a0 (prod a0 a1) y2 y3)) = ((y0 = y2) /\ (y1 = y3))) -> (forall y0 : nat, forall y1 : a1, forall y2 : nat, forall y3 : a1, ((@pair nat a1 y0 y1) = (@pair nat a1 y2 y3)) = ((y0 = y2) /\ (y1 = y3))) -> (forall y0 : prod a0 a1, forall y1 : a1, forall y2 : prod a0 a1, forall y3 : a1, ((@pair (prod a0 a1) a1 y0 y1) = (@pair (prod a0 a1) a1 y2 y3)) = ((y0 = y2) /\ (y1 = y3))) -> False.
Definition term1974 (a0 : Type') (a1 : Type') := (forall y0 : a0, forall y1 : a1, forall y2 : a0, forall y3 : a1, ((@I (a1 -> prod a0 a1) (@I (a0 -> a1 -> prod a0 a1) (@pair a0 a1) y0) y1) = (@I (a1 -> prod a0 a1) (@I (a0 -> a1 -> prod a0 a1) (@pair a0 a1) y2) y3)) \/ ((~ (y0 = y2)) \/ (~ (y1 = y3)))) /\ (forall y0 : a0, forall y1 : a1, forall y2 : a0, forall y3 : a1, (~ ((@I (a1 -> prod a0 a1) (@I (a0 -> a1 -> prod a0 a1) (@pair a0 a1) y0) y1) = (@I (a1 -> prod a0 a1) (@I (a0 -> a1 -> prod a0 a1) (@pair a0 a1) y2) y3))) \/ ((y0 = y2) /\ (y1 = y3))).
Definition term1945 (a0 : Type') (a1 : Type') := (forall y0 : a0, forall y1 : a1, forall y2 : a0, forall y3 : a1, ((@pair a0 a1 y0 y1) = (@pair a0 a1 y2 y3)) \/ ((~ (y0 = y2)) \/ (~ (y1 = y3)))) /\ (forall y0 : a0, forall y1 : a1, forall y2 : a0, forall y3 : a1, (~ ((@pair a0 a1 y0 y1) = (@pair a0 a1 y2 y3))) \/ ((y0 = y2) /\ (y1 = y3))).
Definition term1901 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a1) := (forall y0 : a0, forall y1 : a1, ((@pair a0 a1 x0 x1) = (@pair a0 a1 y0 y1)) \/ ((~ (x0 = y0)) \/ (~ (x1 = y1)))) /\ (forall y0 : a0, forall y1 : a1, (~ ((@pair a0 a1 x0 x1) = (@pair a0 a1 y0 y1))) \/ ((x0 = y0) /\ (x1 = y1))).
Definition term634 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : type1413 a0 a1) (x2 : nat) := fun y0 : nat => ((@CARD a0 x0) = x2) -> (fun y1 : nat => (forall y2 : a0, (@IN a0 y2 x0) -> @HAS_SIZE a1 (x1 y2) y1) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y2 : prod a0 a1 => exists y3 : a0, exists y4 : a1, @SETSPEC (prod a0 a1) y2 ((@IN a0 y3 x0) /\ (@IN a1 y4 (x1 y3))) (@pair a0 a1 y3 y4))) (Nat.mul x2 y1)) y0.
Definition term1084 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a0) (x2 : a1) (x3 : a1) := (fun y0 : a1 => ((@pair a0 a1 x0 x2) = (@pair a0 a1 x1 y0)) = ((x0 = x1) /\ (x2 = y0))) x3.
Definition term587 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : type1413 a0 a1) (x2 : nat) (x3 : nat) := ((@HAS_SIZE a0 x0 x2) /\ (forall y0 : a0, (@IN a0 y0 x0) -> @HAS_SIZE a1 (x1 y0) x3)) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y0 : prod a0 a1 => exists y1 : a0, exists y2 : a1, @SETSPEC (prod a0 a1) y0 ((@IN a0 y1 x0) /\ (@IN a1 y2 (x1 y1))) (@pair a0 a1 y1 y2))) (Nat.mul x2 x3).
Definition term14 (a0 : Type') := forall y0 : type919 a0, forall y1 : a0, (@IN a0 y1 (@GSPEC a0 (fun y2 : a0 => y0 (@SETSPEC a0 y2)))) = (y0 (fun y2 : Prop => fun y3 : a0 => y2 /\ (y1 = y3))).
Definition term2000 (a0 : Type') (x0 : type686 a0) (x1 : a0 -> Prop) (x2 : type686 a0) (x3 : a0 -> Prop) := (x3 = x1) -> (~ (x2 = x0)) \/ ((@I ((a0 -> Prop) -> Prop) x0 x1) \/ (~ (@I ((a0 -> Prop) -> Prop) x2 x3))).
Definition term2028 (a0 : Type') (x0 : type1364 a0) (x1 : a0) (x2 : type1364 a0) (x3 : a0) := (~ ((~ (x1 = x3)) \/ (~ (x0 = x2)))) -> (@I (a0 -> (a0 -> Prop) -> Prop) x0 x1) = (@I (a0 -> (a0 -> Prop) -> Prop) x2 x3).
Definition term1450 (a0 : Type') (a1 : Type') (x0 : prod a0 a1) (x1 : a0 -> Prop) (x2 : type1413 a0 a1) (x3 : a0) := forall y0 : a1, ~ (@SETSPEC (prod a0 a1) x0 ((@IN a0 x3 x1) /\ (@IN a1 y0 (x2 x3))) (@pair a0 a1 x3 y0)).
Definition term962 (a0 : Type') := exists y0 : a0, False.
Definition term349 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : a1) (x2 : prod a1 a0) (x3 : type1470 a0 a1) (x4 : a1) := @eq Prop (((exists y0 : a0, ((x0 x1) /\ (x3 x1 y0)) /\ (x2 = (@pair a1 a0 x1 y0))) \/ (exists y0 : a0, (x2 = (@pair a1 a0 x4 y0)) /\ (x3 x4 y0))) = (exists y0 : a0, (((x0 x1) /\ (x3 x1 y0)) /\ (x2 = (@pair a1 a0 x1 y0))) \/ ((x2 = (@pair a1 a0 x4 y0)) /\ (x3 x4 y0)))).
Definition term1742 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) := exists y0 : type619 a0 a1, (forall y1 : a0 -> Prop, forall y2 : type1413 a0 a1, forall y3 : prod a0 a1, (x0 y1 y2 y3) \/ (forall y4 : a0, forall y5 : a1, ~ (@SETSPEC (prod a0 a1) y3 ((@IN a0 y4 y1) /\ (@IN a1 y5 (y2 y4))) (@pair a0 a1 y4 y5)))) /\ (exists y1 : type620 a0 a1, forall y2 : a0 -> Prop, forall y3 : type1413 a0 a1, forall y4 : prod a0 a1, (~ (x0 y2 y3 y4)) \/ (@SETSPEC (prod a0 a1) y4 ((@IN a0 (y0 y2 y3 y4) y2) /\ (@IN a1 (y1 y2 y3 y4) (y3 (y0 y2 y3 y4)))) (@pair a0 a1 (y0 y2 y3 y4) (y1 y2 y3 y4)))).
Definition term1105 (a0 : Type') (a1 : Type') (x0 : type1413 a0 a1) (x1 : nat) (x2 : a0) (x3 : a0 -> Prop) (x4 : Prop) := ((@IN a0 x2 x3) = (@IN a0 x2 x3)) -> ((@IN a0 x2 x3) -> (@HAS_SIZE a1 (x0 x2) x1) = x4) -> ((@IN a0 x2 x3) -> @HAS_SIZE a1 (x0 x2) x1) = ((@IN a0 x2 x3) -> x4).
Definition term1261 (a0 : Type') (a1 : Type') (x0 : nat) (x1 : nat) (x2 : a0 -> Prop) (x3 : a0) (x4 : a1) (x5 : prod a0 a1) (x6 : a1) (x7 : type1413 a0 a1) (x8 : a0) := (@FINITE a0 x2) -> (x0 = (S (@CARD a0 x2))) -> (@HAS_SIZE a1 (x7 x8) x1) -> (forall y0 : a0, (@IN a0 y0 x2) -> @HAS_SIZE a1 (x7 y0) x1) -> (forall y0 : type1413 a0 a1, forall y1 : nat, (forall y2 : a0, (@IN a0 y2 x2) -> @HAS_SIZE a1 (y0 y2) y1) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y2 : prod a0 a1 => exists y3 : a0, exists y4 : a1, @SETSPEC (prod a0 a1) y2 ((@IN a0 y3 x2) /\ (@IN a1 y4 (y0 y3))) (@pair a0 a1 y3 y4))) (Nat.mul (@CARD a0 x2) y1)) -> (@IN a0 x3 x2) -> (@IN a1 x4 (x7 x3)) -> (x5 = (@pair a0 a1 x3 x4)) -> (x5 = (@pair a0 a1 x8 x6)) -> (@IN a1 x6 (x7 x8)) -> (forall y0 : a0, forall y1 : a1, forall y2 : a0, forall y3 : a1, ((@pair a0 a1 y0 y1) = (@pair a0 a1 y2 y3)) = ((y0 = y2) /\ (y1 = y3))) -> (forall y0 : a0, forall y1 : nat, forall y2 : a0, forall y3 : nat, ((@pair a0 nat y0 y1) = (@pair a0 nat y2 y3)) = ((y0 = y2) /\ (y1 = y3))) -> (forall y0 : a0, forall y1 : prod a0 a1, forall y2 : a0, forall y3 : prod a0 a1, ((@pair a0 (prod a0 a1) y0 y1) = (@pair a0 (prod a0 a1) y2 y3)) = ((y0 = y2) /\ (y1 = y3))) -> (forall y0 : nat, forall y1 : a1, forall y2 : nat, forall y3 : a1, ((@pair nat a1 y0 y1) = (@pair nat a1 y2 y3)) = ((y0 = y2) /\ (y1 = y3))) -> ~ (forall y0 : prod a0 a1, forall y1 : a1, forall y2 : prod a0 a1, forall y3 : a1, ((@pair (prod a0 a1) a1 y0 y1) = (@pair (prod a0 a1) a1 y2 y3)) = ((y0 = y2) /\ (y1 = y3))).
Definition term1260 (a0 : Type') (a1 : Type') (x0 : nat) (x1 : nat) (x2 : a0 -> Prop) (x3 : a0) (x4 : a1) (x5 : prod a0 a1) (x6 : a1) (x7 : type1413 a0 a1) (x8 : a0) := (@FINITE a0 x2) -> (x0 = (S (@CARD a0 x2))) -> (@HAS_SIZE a1 (x7 x8) x1) -> (forall y0 : a0, (@IN a0 y0 x2) -> @HAS_SIZE a1 (x7 y0) x1) -> (forall y0 : type1413 a0 a1, forall y1 : nat, (forall y2 : a0, (@IN a0 y2 x2) -> @HAS_SIZE a1 (y0 y2) y1) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y2 : prod a0 a1 => exists y3 : a0, exists y4 : a1, @SETSPEC (prod a0 a1) y2 ((@IN a0 y3 x2) /\ (@IN a1 y4 (y0 y3))) (@pair a0 a1 y3 y4))) (Nat.mul (@CARD a0 x2) y1)) -> (@IN a0 x3 x2) -> (@IN a1 x4 (x7 x3)) -> (x5 = (@pair a0 a1 x3 x4)) -> (x5 = (@pair a0 a1 x8 x6)) -> (@IN a1 x6 (x7 x8)) -> (forall y0 : a0, forall y1 : a1, forall y2 : a0, forall y3 : a1, ((@pair a0 a1 y0 y1) = (@pair a0 a1 y2 y3)) = ((y0 = y2) /\ (y1 = y3))) -> (forall y0 : a0, forall y1 : nat, forall y2 : a0, forall y3 : nat, ((@pair a0 nat y0 y1) = (@pair a0 nat y2 y3)) = ((y0 = y2) /\ (y1 = y3))) -> (forall y0 : a0, forall y1 : prod a0 a1, forall y2 : a0, forall y3 : prod a0 a1, ((@pair a0 (prod a0 a1) y0 y1) = (@pair a0 (prod a0 a1) y2 y3)) = ((y0 = y2) /\ (y1 = y3))) -> (forall y0 : nat, forall y1 : a1, forall y2 : nat, forall y3 : a1, ((@pair nat a1 y0 y1) = (@pair nat a1 y2 y3)) = ((y0 = y2) /\ (y1 = y3))) -> (forall y0 : prod a0 a1, forall y1 : a1, forall y2 : prod a0 a1, forall y3 : a1, ((@pair (prod a0 a1) a1 y0 y1) = (@pair (prod a0 a1) a1 y2 y3)) = ((y0 = y2) /\ (y1 = y3))) -> False.
Definition term1475 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : a0 -> Prop) (x2 : type1413 a0 a1) := forall y0 : prod a0 a1, ((fun y1 : prod a0 a1 => (x0 x1 x2 y1) \/ (forall y2 : a0, forall y3 : a1, ~ (@SETSPEC (prod a0 a1) y1 ((@IN a0 y2 x1) /\ (@IN a1 y3 (x2 y2))) (@pair a0 a1 y2 y3)))) y0) /\ ((fun y1 : prod a0 a1 => (~ (x0 x1 x2 y1)) \/ (exists y2 : a0, exists y3 : a1, @SETSPEC (prod a0 a1) y1 ((@IN a0 y2 x1) /\ (@IN a1 y3 (x2 y2))) (@pair a0 a1 y2 y3))) y0).
Definition term2088 (a0 : Type') (x0 : type686 a0) (x1 : a0 -> Prop) := ~ (~ (@I ((a0 -> Prop) -> Prop) x0 x1)).
Definition term1302 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) := fun y0 : type1413 a0 a1 => fun y1 : prod a0 a1 => exists y2 : a0, exists y3 : a1, @SETSPEC (prod a0 a1) y1 ((@IN a0 y2 x0) /\ (@IN a1 y3 (y0 y2))) (@pair a0 a1 y2 y3).
Definition term1166 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : type1413 a0 a1) := @GSPEC (prod a0 a1) (fun y0 : prod a0 a1 => (fun y1 : type1532 a0 a1 => exists y2 : a0, exists y3 : a1, y1 ((@IN a0 y2 x0) /\ (@IN a1 y3 (x1 y2))) (@pair a0 a1 y2 y3)) (@SETSPEC (prod a0 a1) y0)).
Definition term934 (a0 : Type') (a1 : Type') := @GSPEC (prod a0 a1) (fun y0 : prod a0 a1 => (fun y1 : type1532 a0 a1 => exists y2 : a0, exists y3 : a1, y1 False (@pair a0 a1 y2 y3)) (@SETSPEC (prod a0 a1) y0)).
Definition term124 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : type1470 a0 a1) := @GSPEC (prod a1 a0) (fun y0 : prod a1 a0 => (fun y1 : type1534 a0 a1 => exists y2 : a1, exists y3 : a0, y1 ((@IN a1 y2 x0) /\ (@IN a0 y3 (x1 y2))) (@pair a1 a0 y2 y3)) (@SETSPEC (prod a1 a0) y0)).
Definition term63 (a0 : Type') (a1 : Type') (x0 : a1) (x1 : a1 -> Prop) (x2 : type1470 a0 a1) := @GSPEC (prod a1 a0) (fun y0 : prod a1 a0 => (fun y1 : type1534 a0 a1 => exists y2 : a1, exists y3 : a0, y1 (((y2 = x0) \/ (@IN a1 y2 x1)) /\ (@IN a0 y3 (x2 y2))) (@pair a1 a0 y2 y3)) (@SETSPEC (prod a1 a0) y0)).
Definition term1477 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : a0 -> Prop) (x2 : type1413 a0 a1) := fun y0 : prod a0 a1 => (x0 x1 x2 y0) \/ (forall y1 : a0, forall y2 : a1, ~ (@SETSPEC (prod a0 a1) y0 ((@IN a0 y1 x1) /\ (@IN a1 y2 (x2 y1))) (@pair a0 a1 y1 y2))).
Definition term48 (x0 : Prop) (x1 : Prop) (x2 : Prop) := x0 \/ (x1 \/ x2).
Definition term116 (a0 : Type') (a1 : Type') (x0 : type1470 a0 a1) (x1 : a1) := @IMAGE a0 (prod a1 a0) (fun y0 : a0 => @pair a1 a0 x1 y0) (x0 x1).
Definition term111 (a0 : Type') (a1 : Type') (x0 : prod a1 a0) (x1 : type1223 a0 a1) (x2 : type1223 a0 a1) := @IN (prod a1 a0) x0 (@UNION (prod a1 a0) x1 x2).
Definition term1309 (a0 : Type') (a1 : Type') (x0 : prod a0 a1) (x1 : a1) := fun y0 : prod a0 a1 => forall y1 : a1, ((@pair (prod a0 a1) a1 x0 x1) = (@pair (prod a0 a1) a1 y0 y1)) = ((x0 = y0) /\ (x1 = y1)).
Definition term369 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : a1) (x2 : prod a1 a0) (x3 : type1470 a0 a1) (x4 : a1) (x5 : a0) := (fun y0 : a0 => (((x0 x1) /\ (x3 x1 y0)) /\ (x2 = (@pair a1 a0 x1 y0))) \/ ((x2 = (@pair a1 a0 x4 y0)) /\ (x3 x4 y0))) x5.
Definition term1622 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : a0 -> Prop) (x2 : type1413 a0 a1) := fun y0 : type1207 a0 a1 => exists y1 : type1208 a0 a1, forall y2 : prod a0 a1, (~ (x0 x1 x2 y2)) \/ (@SETSPEC (prod a0 a1) y2 ((@IN a0 (y0 y2) x1) /\ (@IN a1 (y1 y2) (x2 (y0 y2)))) (@pair a0 a1 (y0 y2) (y1 y2))).
Definition term1094 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : type1413 a0 a1) := (fun y0 : type1413 a0 a1 => forall y1 : nat, (forall y2 : a0, (@IN a0 y2 x0) -> @HAS_SIZE a1 (y0 y2) y1) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y2 : prod a0 a1 => exists y3 : a0, exists y4 : a1, @SETSPEC (prod a0 a1) y2 ((@IN a0 y3 x0) /\ (@IN a1 y4 (y0 y3))) (@pair a0 a1 y3 y4))) (Nat.mul (@CARD a0 x0) y1)) x1.
Definition term1088 (a0 : Type') (a1 : Type') (x0 : a0 -> a1) (x1 : a0 -> Prop) := (fun y0 : a0 -> Prop => forall y1 : nat, ((forall y2 : a0, forall y3 : a0, ((@IN a0 y2 y0) /\ ((@IN a0 y3 y0) /\ ((x0 y2) = (x0 y3)))) -> y2 = y3) /\ (@HAS_SIZE a0 y0 y1)) -> @HAS_SIZE a1 (@IMAGE a0 a1 x0 y0) y1) x1.
Definition term22 (a0 : Type') (a1 : Type') (x0 : a1) (x1 : a0 -> Prop) := (fun y0 : a0 -> Prop => forall y1 : a0 -> a1, (@IN a1 x0 (@IMAGE a0 a1 y1 y0)) = (exists y2 : a0, (x0 = (y1 y2)) /\ (@IN a0 y2 y0))) x1.
Definition term1828 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : a0 -> Prop) (x2 : type1413 a0 a1) := exists y0 : nat -> a0, (fun y1 : type1413 a0 a1 => fun y2 : nat -> a0 => forall y3 : nat, ((@IN a0 (y2 y3) x1) /\ (~ (@HAS_SIZE a1 (y1 (y2 y3)) y3))) \/ (@HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (x0 x1 y1)) (Nat.mul (@CARD a0 x1) y3))) x2 y0.
Definition term1712 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : type619 a0 a1) (x2 : a0 -> Prop) := exists y0 : type465 a0 a1, (fun y1 : a0 -> Prop => fun y2 : type465 a0 a1 => forall y3 : type1413 a0 a1, forall y4 : prod a0 a1, (~ (x0 y1 y3 y4)) \/ (@SETSPEC (prod a0 a1) y4 ((@IN a0 (x1 y1 y3 y4) y1) /\ (@IN a1 (y2 y3 y4) (y3 (x1 y1 y3 y4)))) (@pair a0 a1 (x1 y1 y3 y4) (y2 y3 y4)))) x2 y0.
Definition term1635 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : a0 -> Prop) (x2 : type1413 a0 a1) := exists y0 : type1207 a0 a1, (fun y1 : type1413 a0 a1 => fun y2 : type1207 a0 a1 => exists y3 : type1208 a0 a1, forall y4 : prod a0 a1, (~ (x0 x1 y1 y4)) \/ (@SETSPEC (prod a0 a1) y4 ((@IN a0 (y2 y4) x1) /\ (@IN a1 (y3 y4) (y1 (y2 y4)))) (@pair a0 a1 (y2 y4) (y3 y4)))) x2 y0.
Definition term1753 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : type619 a0 a1) (x2 : type620 a0 a1) := (forall y0 : a0 -> Prop, forall y1 : type1413 a0 a1, forall y2 : prod a0 a1, (x0 y0 y1 y2) \/ (forall y3 : a0, forall y4 : a1, ~ (@SETSPEC (prod a0 a1) y2 ((@IN a0 y3 y0) /\ (@IN a1 y4 (y1 y3))) (@pair a0 a1 y3 y4)))) /\ (forall y0 : a0 -> Prop, forall y1 : type1413 a0 a1, forall y2 : prod a0 a1, (~ (x0 y0 y1 y2)) \/ (@SETSPEC (prod a0 a1) y2 ((@IN a0 (x1 y0 y1 y2) y0) /\ (@IN a1 (x2 y0 y1 y2) (y1 (x1 y0 y1 y2)))) (@pair a0 a1 (x1 y0 y1 y2) (x2 y0 y1 y2)))).
Definition term1542 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) := (forall y0 : a0 -> Prop, forall y1 : type1413 a0 a1, forall y2 : prod a0 a1, (x0 y0 y1 y2) \/ (forall y3 : a0, forall y4 : a1, ~ (@SETSPEC (prod a0 a1) y2 ((@IN a0 y3 y0) /\ (@IN a1 y4 (y1 y3))) (@pair a0 a1 y3 y4)))) /\ (forall y0 : a0 -> Prop, forall y1 : type1413 a0 a1, forall y2 : prod a0 a1, (~ (x0 y0 y1 y2)) \/ (exists y3 : a0, exists y4 : a1, @SETSPEC (prod a0 a1) y2 ((@IN a0 y3 y0) /\ (@IN a1 y4 (y1 y3))) (@pair a0 a1 y3 y4))).
Definition term1518 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : a0 -> Prop) := (forall y0 : type1413 a0 a1, forall y1 : prod a0 a1, (x0 x1 y0 y1) \/ (forall y2 : a0, forall y3 : a1, ~ (@SETSPEC (prod a0 a1) y1 ((@IN a0 y2 x1) /\ (@IN a1 y3 (y0 y2))) (@pair a0 a1 y2 y3)))) /\ (forall y0 : type1413 a0 a1, forall y1 : prod a0 a1, (~ (x0 x1 y0 y1)) \/ (exists y2 : a0, exists y3 : a1, @SETSPEC (prod a0 a1) y1 ((@IN a0 y2 x1) /\ (@IN a1 y3 (y0 y2))) (@pair a0 a1 y2 y3))).
Definition term505 (a0 : Type') (x0 : a0 -> Prop) (x1 : Prop) := (fun y0 : Prop => (forall y1 : a0, (x0 y1) -> y0) = ((exists y1 : a0, x0 y1) -> y0)) x1.
Definition term1057 (x0 : nat) (x1 : nat) := Nat.mul (S x0) x1.
Definition term1325 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : prod a0 a1) := fun y0 : a0 => forall y1 : prod a0 a1, ((@pair a0 (prod a0 a1) x0 x1) = (@pair a0 (prod a0 a1) y0 y1)) = ((x0 = y0) /\ (x1 = y1)).
Definition term786 (a0 : Type') (a1 : Type') (x0 : nat) := fun y0 : nat => @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y1 : prod a0 a1 => exists y2 : a0, exists y3 : a1, @SETSPEC (prod a0 a1) y1 False (@pair a0 a1 y2 y3))) (Nat.mul x0 y0).
Definition term1877 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a0) (x2 : a1) := forall y0 : a1, (fun y1 : a1 => (~ ((@pair a0 a1 x0 x2) = (@pair a0 a1 x1 y1))) \/ ((x0 = x1) /\ (x2 = y1))) y0.
Definition term1872 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a0) (x2 : a1) := forall y0 : a1, (fun y1 : a1 => ((@pair a0 a1 x0 x2) = (@pair a0 a1 x1 y1)) \/ ((~ (x0 = x1)) \/ (~ (x2 = y1)))) y0.
Definition term1845 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a1) (x2 : a0) (x3 : a1) := or ((@pair a0 a1 x0 x1) = (@pair a0 a1 x2 x3)).
Definition term989 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : type1413 a0 a1) (x2 : a0) (x3 : nat) := (@IN a0 x2 x0) -> @HAS_SIZE a1 (x1 x2) x3.
Definition term95 (a0 : Type') (a1 : Type') (x0 : a1) (x1 : a1 -> Prop) (x2 : type1470 a0 a1) (x3 : prod a1 a0) (x4 : a1) (x5 : a0) := (fun y0 : prod a1 a0 => (fun y1 : prod a1 a0 => (((x4 = x0) \/ (x1 x4)) /\ (x2 x4 x5)) /\ (x3 = y1)) y0) (@pair a1 a0 x4 x5).
Definition term1034 (a0 : Type') (a1 : Type') (x0 : type1413 a0 a1) (x1 : a0) (x2 : nat) (x3 : Prop) (x4 : Prop) := ((exists y0 : a0, y0 = x1) = x3) -> (x3 -> (@HAS_SIZE a1 (x0 x1) x2) = x4) -> ((exists y0 : a0, y0 = x1) -> @HAS_SIZE a1 (x0 x1) x2) = (x3 -> x4).
Definition term740 (a0 : Type') (a1 : Type') (x0 : type1413 a0 a1) (x1 : nat) (x2 : nat) (x3 : Prop) (x4 : Prop) := ((forall y0 : a0, (@IN a0 y0 (@EMPTY a0)) -> @HAS_SIZE a1 (x0 y0) x2) = x3) -> (x3 -> (@HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y0 : prod a0 a1 => exists y1 : a0, exists y2 : a1, @SETSPEC (prod a0 a1) y0 ((@IN a0 y1 (@EMPTY a0)) /\ (@IN a1 y2 (x0 y1))) (@pair a0 a1 y1 y2))) (Nat.mul x1 x2)) = x4) -> ((forall y0 : a0, (@IN a0 y0 (@EMPTY a0)) -> @HAS_SIZE a1 (x0 y0) x2) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y0 : prod a0 a1 => exists y1 : a0, exists y2 : a1, @SETSPEC (prod a0 a1) y0 ((@IN a0 y1 (@EMPTY a0)) /\ (@IN a1 y2 (x0 y1))) (@pair a0 a1 y1 y2))) (Nat.mul x1 x2)) = (x3 -> x4).
Definition term1416 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : a0 -> Prop) := @eq Prop ((x0 x1) = (fun y0 : type1413 a0 a1 => fun y1 : prod a0 a1 => exists y2 : a0, exists y3 : a1, @SETSPEC (prod a0 a1) y1 ((@IN a0 y2 x1) /\ (@IN a1 y3 (y0 y2))) (@pair a0 a1 y2 y3))).
Definition term1686 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : a0 -> Prop) := fun y0 : type464 a0 a1 => (fun y1 : a0 -> Prop => fun y2 : type464 a0 a1 => exists y3 : type465 a0 a1, forall y4 : type1413 a0 a1, forall y5 : prod a0 a1, (~ (x0 y1 y4 y5)) \/ (@SETSPEC (prod a0 a1) y5 ((@IN a0 (y2 y4 y5) y1) /\ (@IN a1 (y3 y4 y5) (y4 (y2 y4 y5)))) (@pair a0 a1 (y2 y4 y5) (y3 y4 y5)))) x1 y0.
Definition term1169 (a0 : Type') (a1 : Type') (x0 : prod a0 a1) (x1 : a0 -> Prop) (x2 : type1413 a0 a1) := @eq Prop (@IN (prod a0 a1) x0 (@GSPEC (prod a0 a1) (fun y0 : prod a0 a1 => exists y1 : a0, exists y2 : a1, @SETSPEC (prod a0 a1) y0 ((@IN a0 y1 x1) /\ (@IN a1 y2 (x2 y1))) (@pair a0 a1 y1 y2)))).
Definition term1168 (a0 : Type') (a1 : Type') (x0 : prod a0 a1) (x1 : a0 -> Prop) (x2 : type1413 a0 a1) := @eq Prop (@IN (prod a0 a1) x0 (@GSPEC (prod a0 a1) (fun y0 : prod a0 a1 => (fun y1 : type1532 a0 a1 => exists y2 : a0, exists y3 : a1, y1 ((@IN a0 y2 x1) /\ (@IN a1 y3 (x2 y2))) (@pair a0 a1 y2 y3)) (@SETSPEC (prod a0 a1) y0)))).
Definition term937 (a0 : Type') (a1 : Type') (x0 : prod a0 a1) := @eq Prop (@IN (prod a0 a1) x0 (@GSPEC (prod a0 a1) (fun y0 : prod a0 a1 => exists y1 : a0, exists y2 : a1, @SETSPEC (prod a0 a1) y0 False (@pair a0 a1 y1 y2)))).
Definition term936 (a0 : Type') (a1 : Type') (x0 : prod a0 a1) := @eq Prop (@IN (prod a0 a1) x0 (@GSPEC (prod a0 a1) (fun y0 : prod a0 a1 => (fun y1 : type1532 a0 a1 => exists y2 : a0, exists y3 : a1, y1 False (@pair a0 a1 y2 y3)) (@SETSPEC (prod a0 a1) y0)))).
Definition term127 (a0 : Type') (a1 : Type') (x0 : prod a1 a0) (x1 : a1 -> Prop) (x2 : type1470 a0 a1) := @eq Prop (@IN (prod a1 a0) x0 (@GSPEC (prod a1 a0) (fun y0 : prod a1 a0 => exists y1 : a1, exists y2 : a0, @SETSPEC (prod a1 a0) y0 ((@IN a1 y1 x1) /\ (@IN a0 y2 (x2 y1))) (@pair a1 a0 y1 y2)))).
Definition term126 (a0 : Type') (a1 : Type') (x0 : prod a1 a0) (x1 : a1 -> Prop) (x2 : type1470 a0 a1) := @eq Prop (@IN (prod a1 a0) x0 (@GSPEC (prod a1 a0) (fun y0 : prod a1 a0 => (fun y1 : type1534 a0 a1 => exists y2 : a1, exists y3 : a0, y1 ((@IN a1 y2 x1) /\ (@IN a0 y3 (x2 y2))) (@pair a1 a0 y2 y3)) (@SETSPEC (prod a1 a0) y0)))).
Definition term66 (a0 : Type') (a1 : Type') (x0 : prod a1 a0) (x1 : a1) (x2 : a1 -> Prop) (x3 : type1470 a0 a1) := @eq Prop (@IN (prod a1 a0) x0 (@GSPEC (prod a1 a0) (fun y0 : prod a1 a0 => exists y1 : a1, exists y2 : a0, @SETSPEC (prod a1 a0) y0 (((y1 = x1) \/ (@IN a1 y1 x2)) /\ (@IN a0 y2 (x3 y1))) (@pair a1 a0 y1 y2)))).
Definition term65 (a0 : Type') (a1 : Type') (x0 : prod a1 a0) (x1 : a1) (x2 : a1 -> Prop) (x3 : type1470 a0 a1) := @eq Prop (@IN (prod a1 a0) x0 (@GSPEC (prod a1 a0) (fun y0 : prod a1 a0 => (fun y1 : type1534 a0 a1 => exists y2 : a1, exists y3 : a0, y1 (((y2 = x1) \/ (@IN a1 y2 x2)) /\ (@IN a0 y3 (x3 y2))) (@pair a1 a0 y2 y3)) (@SETSPEC (prod a1 a0) y0)))).
Definition term1619 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : a0 -> Prop) (x2 : type1413 a0 a1) (x3 : type1207 a0 a1) := fun y0 : type1208 a0 a1 => forall y1 : prod a0 a1, (fun y2 : prod a0 a1 => fun y3 : a1 => (~ (x0 x1 x2 y2)) \/ (@SETSPEC (prod a0 a1) y2 ((@IN a0 (x3 y2) x1) /\ (@IN a1 y3 (x2 (x3 y2)))) (@pair a0 a1 (x3 y2) y3))) y1 (y0 y1).
Definition term509 (a0 : Type') (x0 : a0 -> Prop) := forall y0 : a0 -> Prop, (forall y1 : a0, (x0 y1) /\ (y0 y1)) = ((forall y1 : a0, x0 y1) /\ (forall y1 : a0, y0 y1)).
Definition term86 (a0 : Type') (a1 : Type') (x0 : a1) (x1 : a1 -> Prop) (x2 : type1470 a0 a1) (x3 : a1) (x4 : a0) := ((x3 = x0) \/ (x1 x3)) /\ (x2 x3 x4).
Definition term1744 (a0 : Type') (a1 : Type') (x0 : Prop) (x1 : type129 a0 a1) := exists y0 : type620 a0 a1, x0 /\ (x1 y0).
Definition term1730 (a0 : Type') (a1 : Type') (x0 : Prop) (x1 : type128 a0 a1) := exists y0 : type619 a0 a1, x0 /\ (x1 y0).
Definition term1601 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : a0 -> Prop) (x2 : type1413 a0 a1) (x3 : type1207 a0 a1) := fun y0 : prod a0 a1 => fun y1 : a1 => (~ (x0 x1 x2 y0)) \/ (@SETSPEC (prod a0 a1) y0 ((@IN a0 (x3 y0) x1) /\ (@IN a1 y1 (x2 (x3 y0)))) (@pair a0 a1 (x3 y0) y1)).
Definition term518 (x0 : Prop) (x1 : Prop) := (True \/ x0) -> x1.
Definition term1835 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : a0 -> Prop) (x2 : type471 a0 a1) := fun y0 : type1413 a0 a1 => (fun y1 : type1413 a0 a1 => fun y2 : nat -> a0 => forall y3 : nat, ((@IN a0 (y2 y3) x1) /\ (~ (@HAS_SIZE a1 (y1 (y2 y3)) y3))) \/ (@HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (x0 x1 y1)) (Nat.mul (@CARD a0 x1) y3))) y0 (x2 y0).
Definition term1719 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : type619 a0 a1) (x2 : type620 a0 a1) := fun y0 : a0 -> Prop => (fun y1 : a0 -> Prop => fun y2 : type465 a0 a1 => forall y3 : type1413 a0 a1, forall y4 : prod a0 a1, (~ (x0 y1 y3 y4)) \/ (@SETSPEC (prod a0 a1) y4 ((@IN a0 (x1 y1 y3 y4) y1) /\ (@IN a1 (y2 y3 y4) (y3 (x1 y1 y3 y4)))) (@pair a0 a1 (x1 y1 y3 y4) (y2 y3 y4)))) y0 (x2 y0).
Definition term1642 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : a0 -> Prop) (x2 : type464 a0 a1) := fun y0 : type1413 a0 a1 => (fun y1 : type1413 a0 a1 => fun y2 : type1207 a0 a1 => exists y3 : type1208 a0 a1, forall y4 : prod a0 a1, (~ (x0 x1 y1 y4)) \/ (@SETSPEC (prod a0 a1) y4 ((@IN a0 (y2 y4) x1) /\ (@IN a1 (y3 y4) (y1 (y2 y4)))) (@pair a0 a1 (y2 y4) (y3 y4)))) y0 (x2 y0).
Definition term341 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : type1470 a0 a1) (x2 : prod a1 a0) (x3 : a1) (x4 : a0) := or (((x0 x3) /\ (x1 x3 x4)) /\ (x2 = (@pair a1 a0 x3 x4))).
Definition term109 (a0 : Type') (x0 : a0) (x1 : a0 -> Prop) (x2 : a0 -> Prop) := @IN a0 x0 (@UNION a0 x1 x2).
Definition term573 (a0 : Type') (x0 : Prop) (x1 : a0 -> Prop) := forall y0 : a0, x0 -> x1 y0.
Definition term1134 (a0 : Type') (a1 : Type') (x0 : type1413 a0 a1) (x1 : a0) (x2 : a1) (x3 : a1) := (@IN a1 x2 (x0 x1)) /\ ((@IN a1 x3 (x0 x1)) /\ (x2 = x3)).
Definition term1739 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : type619 a0 a1) := (forall y0 : a0 -> Prop, forall y1 : type1413 a0 a1, forall y2 : prod a0 a1, (x0 y0 y1 y2) \/ (forall y3 : a0, forall y4 : a1, ~ (@SETSPEC (prod a0 a1) y2 ((@IN a0 y3 y0) /\ (@IN a1 y4 (y1 y3))) (@pair a0 a1 y3 y4)))) /\ (exists y0 : type620 a0 a1, forall y1 : a0 -> Prop, forall y2 : type1413 a0 a1, forall y3 : prod a0 a1, (~ (x0 y1 y2 y3)) \/ (@SETSPEC (prod a0 a1) y3 ((@IN a0 (x1 y1 y2 y3) y1) /\ (@IN a1 (y0 y1 y2 y3) (y2 (x1 y1 y2 y3)))) (@pair a0 a1 (x1 y1 y2 y3) (y0 y1 y2 y3)))).
Definition term1660 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : a0 -> Prop) (x2 : type464 a0 a1) (x3 : type1413 a0 a1) := exists y0 : type1208 a0 a1, (fun y1 : type1413 a0 a1 => fun y2 : type1208 a0 a1 => forall y3 : prod a0 a1, (~ (x0 x1 y1 y3)) \/ (@SETSPEC (prod a0 a1) y3 ((@IN a0 (x2 y1 y3) x1) /\ (@IN a1 (y2 y3) (y1 (x2 y1 y3)))) (@pair a0 a1 (x2 y1 y3) (y2 y3)))) x3 y0.
Definition term912 (a0 : Type') (a1 : Type') := fun y0 : nat => forall y1 : nat, @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y2 : prod a0 a1 => exists y3 : a0, exists y4 : a1, @SETSPEC (prod a0 a1) y2 False (@pair a0 a1 y3 y4))) (Nat.mul y0 y1).
Definition term570 (a0 : Type') (x0 : Prop) := (fun y0 : Prop => forall y1 : a0 -> Prop, (forall y2 : a0, y0 -> y1 y2) = (y0 -> forall y2 : a0, y1 y2)) x0.
Definition term1948 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a1) := @I (a1 -> prod a0 a1) (@I (a0 -> a1 -> prod a0 a1) (@pair a0 a1) x0) x1.
Definition term217 (a0 : Type') (a1 : Type') (x0 : a1) (x1 : a1 -> Prop) (x2 : type1470 a0 a1) (x3 : prod a1 a0) (x4 : a1) (x5 : a0) := ~ ((((x4 = x0) \/ (x1 x4)) /\ (x2 x4 x5)) /\ (x3 = (@pair a1 a0 x4 x5))).
Definition term343 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : a1) (x2 : prod a1 a0) (x3 : type1470 a0 a1) (x4 : a1) (x5 : a0) := (((x0 x1) /\ (x3 x1 x5)) /\ (x2 = (@pair a1 a0 x1 x5))) \/ ((x2 = (@pair a1 a0 x4 x5)) /\ (x3 x4 x5)).
Definition term1045 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a0 -> Prop) (x2 : type1413 a0 a1) (x3 : nat) (x4 : nat) := (((@HAS_SIZE a1 (x2 x0) x4) /\ (forall y0 : a0, (@IN a0 y0 x1) -> @HAS_SIZE a1 (x2 y0) x4)) -> (@HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y0 : prod a0 a1 => exists y1 : a0, exists y2 : a1, @SETSPEC (prod a0 a1) y0 (((y1 = x0) \/ (@IN a0 y1 x1)) /\ (@IN a1 y2 (x2 y1))) (@pair a0 a1 y1 y2))) (Nat.mul x3 x4)) = (@HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y0 : prod a0 a1 => exists y1 : a0, exists y2 : a1, @SETSPEC (prod a0 a1) y0 (((y1 = x0) \/ (@IN a0 y1 x1)) /\ (@IN a1 y2 (x2 y1))) (@pair a0 a1 y1 y2))) (Nat.mul x3 x4))) -> ((forall y0 : a0, ((y0 = x0) -> @HAS_SIZE a1 (x2 y0) x4) /\ ((@IN a0 y0 x1) -> @HAS_SIZE a1 (x2 y0) x4)) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y0 : prod a0 a1 => exists y1 : a0, exists y2 : a1, @SETSPEC (prod a0 a1) y0 (((y1 = x0) \/ (@IN a0 y1 x1)) /\ (@IN a1 y2 (x2 y1))) (@pair a0 a1 y1 y2))) (Nat.mul x3 x4)) = (((@HAS_SIZE a1 (x2 x0) x4) /\ (forall y0 : a0, (@IN a0 y0 x1) -> @HAS_SIZE a1 (x2 y0) x4)) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y0 : prod a0 a1 => exists y1 : a0, exists y2 : a1, @SETSPEC (prod a0 a1) y0 (((y1 = x0) \/ (@IN a0 y1 x1)) /\ (@IN a1 y2 (x2 y1))) (@pair a0 a1 y1 y2))) (Nat.mul x3 x4)).
Definition term1926 (a0 : Type') (a1 : Type') := forall y0 : a0, ((fun y1 : a0 => forall y2 : a1, forall y3 : a0, forall y4 : a1, ((@pair a0 a1 y1 y2) = (@pair a0 a1 y3 y4)) \/ ((~ (y1 = y3)) \/ (~ (y2 = y4)))) y0) /\ ((fun y1 : a0 => forall y2 : a1, forall y3 : a0, forall y4 : a1, (~ ((@pair a0 a1 y1 y2) = (@pair a0 a1 y3 y4))) \/ ((y1 = y3) /\ (y2 = y4))) y0).
Definition term1882 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a1) := forall y0 : a0, ((fun y1 : a0 => forall y2 : a1, ((@pair a0 a1 x0 x1) = (@pair a0 a1 y1 y2)) \/ ((~ (x0 = y1)) \/ (~ (x1 = y2)))) y0) /\ ((fun y1 : a0 => forall y2 : a1, (~ ((@pair a0 a1 x0 x1) = (@pair a0 a1 y1 y2))) \/ ((x0 = y1) /\ (x1 = y2))) y0).
Definition term980 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a0 -> Prop) (x2 : type1413 a0 a1) (x3 : nat) := forall y0 : a0, ((fun y1 : a0 => (y1 = x0) -> @HAS_SIZE a1 (x2 y1) x3) y0) /\ ((fun y1 : a0 => (@IN a0 y1 x1) -> @HAS_SIZE a1 (x2 y1) x3) y0).
Definition term985 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : type1413 a0 a1) (x2 : a0) (x3 : nat) := (x2 = x0) -> @HAS_SIZE a1 (x1 x2) x3.
Definition term999 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : type1413 a0 a1) (x2 : nat) := fun y0 : a0 => (fun y1 : a0 => (@IN a0 y1 x0) -> @HAS_SIZE a1 (x1 y1) x2) y0.
Definition term994 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : type1413 a0 a1) (x2 : nat) := fun y0 : a0 => (fun y1 : a0 => (y1 = x0) -> @HAS_SIZE a1 (x1 y1) x2) y0.
Definition term1549 (a0 : Type') (a1 : Type') (x0 : prod a0 a1) (x1 : a0 -> Prop) (x2 : type1413 a0 a1) := exists y0 : a0, (fun y1 : a0 => exists y2 : a1, @SETSPEC (prod a0 a1) x0 ((@IN a0 y1 x1) /\ (@IN a1 y2 (x2 y1))) (@pair a0 a1 y1 y2)) y0.
Definition term684 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) := (@FINITE a0 x0) -> forall y0 : nat, ((@CARD a0 x0) = y0) -> forall y1 : type1413 a0 a1, forall y2 : nat, (forall y3 : a0, (@IN a0 y3 x0) -> @HAS_SIZE a1 (y1 y3) y2) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y3 : prod a0 a1 => exists y4 : a0, exists y5 : a1, @SETSPEC (prod a0 a1) y3 ((@IN a0 y4 x0) /\ (@IN a1 y5 (y1 y4))) (@pair a0 a1 y4 y5))) (Nat.mul y0 y2).
Definition term627 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : type1413 a0 a1) (x2 : nat) := (@FINITE a0 x0) -> forall y0 : nat, ((@CARD a0 x0) = x2) -> (forall y1 : a0, (@IN a0 y1 x0) -> @HAS_SIZE a1 (x1 y1) y0) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y1 : prod a0 a1 => exists y2 : a0, exists y3 : a1, @SETSPEC (prod a0 a1) y1 ((@IN a0 y2 x0) /\ (@IN a1 y3 (x1 y2))) (@pair a0 a1 y2 y3))) (Nat.mul x2 y0).
Definition term1070 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : type1413 a0 a1) (x2 : a0) := @UNION (prod a0 a1) (@GSPEC (prod a0 a1) (fun y0 : prod a0 a1 => exists y1 : a0, exists y2 : a1, @SETSPEC (prod a0 a1) y0 ((@IN a0 y1 x0) /\ (@IN a1 y2 (x1 y1))) (@pair a0 a1 y1 y2))) (@IMAGE a1 (prod a0 a1) (fun y0 : a1 => @pair a0 a1 x2 y0) (x1 x2)).
Definition term52 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : type1470 a0 a1) (x2 : a1) := @UNION (prod a1 a0) (@GSPEC (prod a1 a0) (fun y0 : prod a1 a0 => exists y1 : a1, exists y2 : a0, @SETSPEC (prod a1 a0) y0 ((@IN a1 y1 x0) /\ (@IN a0 y2 (x1 y1))) (@pair a1 a0 y1 y2))) (@IMAGE a0 (prod a1 a0) (fun y0 : a0 => @pair a1 a0 x2 y0) (x1 x2)).
Definition term2092 (a0 : Type') (x0 : a0 -> Prop) (x1 : type686 a0) (x2 : type686 a0) (x3 : a0 -> Prop) := imp ((x3 = x0) /\ ((x2 = x1) /\ (@I ((a0 -> Prop) -> Prop) x2 x3))).
Definition term1990 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a1) (x2 : a0) (x3 : a1) := (fun y0 : prod a0 a1 => y0 = (@I (a1 -> prod a0 a1) (@I (a0 -> a1 -> prod a0 a1) (@pair a0 a1) x0) x1)) (@I (a1 -> prod a0 a1) (@I (a0 -> a1 -> prod a0 a1) (@pair a0 a1) x2) x3).
Definition term598 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) := fun y0 : nat => forall y1 : type1413 a0 a1, forall y2 : nat, (((@FINITE a0 x0) /\ ((@CARD a0 x0) = y0)) /\ (forall y3 : a0, (@IN a0 y3 x0) -> @HAS_SIZE a1 (y1 y3) y2)) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y3 : prod a0 a1 => exists y4 : a0, exists y5 : a1, @SETSPEC (prod a0 a1) y3 ((@IN a0 y4 x0) /\ (@IN a1 y5 (y1 y4))) (@pair a0 a1 y4 y5))) (Nat.mul y0 y2).
Definition term597 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) := fun y0 : nat => forall y1 : type1413 a0 a1, forall y2 : nat, ((@HAS_SIZE a0 x0 y0) /\ (forall y3 : a0, (@IN a0 y3 x0) -> @HAS_SIZE a1 (y1 y3) y2)) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y3 : prod a0 a1 => exists y4 : a0, exists y5 : a1, @SETSPEC (prod a0 a1) y3 ((@IN a0 y4 x0) /\ (@IN a1 y5 (y1 y4))) (@pair a0 a1 y4 y5))) (Nat.mul y0 y2).
Definition term534 (x0 : Prop) := True /\ (x0 -> True).
Definition term1947 (a0 : Type') (x0 : a0) (x1 : a0 -> Prop) := ~ (@I ((a0 -> Prop) -> Prop) (@I (a0 -> (a0 -> Prop) -> Prop) (@IN a0) x0) x1).
Definition term1436 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) := (forall y0 : a0 -> Prop, forall y1 : type1413 a0 a1, forall y2 : prod a0 a1, (x0 y0 y1 y2) = (exists y3 : a0, exists y4 : a1, @SETSPEC (prod a0 a1) y2 ((@IN a0 y3 y0) /\ (@IN a1 y4 (y1 y3))) (@pair a0 a1 y3 y4))) -> forall y0 : a0, forall y1 : type1413 a0 a1, forall y2 : a1, forall y3 : prod a0 a1, forall y4 : a1, forall y5 : a0, forall y6 : a0 -> Prop, forall y7 : nat, forall y8 : nat, (~ (@IN a0 y0 y6)) -> (@FINITE a0 y6) -> (y8 = (S (@CARD a0 y6))) -> (@HAS_SIZE a1 (y1 y0) y7) -> (forall y9 : a0, (@IN a0 y9 y6) -> @HAS_SIZE a1 (y1 y9) y7) -> (forall y9 : type1413 a0 a1, forall y10 : nat, (forall y11 : a0, (@IN a0 y11 y6) -> @HAS_SIZE a1 (y9 y11) y10) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (x0 y6 y9)) (Nat.mul (@CARD a0 y6) y10)) -> (@IN a0 y5 y6) -> (@IN a1 y4 (y1 y5)) -> (y3 = (@pair a0 a1 y5 y4)) -> (y3 = (@pair a0 a1 y0 y2)) -> (@IN a1 y2 (y1 y0)) -> (forall y9 : a0, forall y10 : a1, forall y11 : a0, forall y12 : a1, ((@pair a0 a1 y9 y10) = (@pair a0 a1 y11 y12)) = ((y9 = y11) /\ (y10 = y12))) -> (forall y9 : a0, forall y10 : nat, forall y11 : a0, forall y12 : nat, ((@pair a0 nat y9 y10) = (@pair a0 nat y11 y12)) = ((y9 = y11) /\ (y10 = y12))) -> (forall y9 : a0, forall y10 : prod a0 a1, forall y11 : a0, forall y12 : prod a0 a1, ((@pair a0 (prod a0 a1) y9 y10) = (@pair a0 (prod a0 a1) y11 y12)) = ((y9 = y11) /\ (y10 = y12))) -> (forall y9 : nat, forall y10 : a1, forall y11 : nat, forall y12 : a1, ((@pair nat a1 y9 y10) = (@pair nat a1 y11 y12)) = ((y9 = y11) /\ (y10 = y12))) -> ~ (forall y9 : prod a0 a1, forall y10 : a1, forall y11 : prod a0 a1, forall y12 : a1, ((@pair (prod a0 a1) a1 y9 y10) = (@pair (prod a0 a1) a1 y11 y12)) = ((y9 = y11) /\ (y10 = y12))).
Definition term620 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : type1413 a0 a1) (x2 : nat) (x3 : nat) := (@FINITE a0 x0) -> (fun y0 : nat => ((@CARD a0 x0) = x2) -> (forall y1 : a0, (@IN a0 y1 x0) -> @HAS_SIZE a1 (x1 y1) y0) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y1 : prod a0 a1 => exists y2 : a0, exists y3 : a1, @SETSPEC (prod a0 a1) y1 ((@IN a0 y2 x0) /\ (@IN a1 y3 (x1 y2))) (@pair a0 a1 y2 y3))) (Nat.mul x2 y0)) x3.
Definition term204 (a0 : Type') (x0 : a0) (x1 : a0 -> Prop) (x2 : a0) := ~ ((x2 = x0) \/ (x1 x2)).
Definition term536 (x0 : Prop) (x1 : Prop) := @eq Prop (x1 = (x1 /\ (x0 -> x1))).
Definition term1584 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : a0 -> Prop) (x2 : type1413 a0 a1) := fun y0 : prod a0 a1 => exists y1 : a0, (fun y2 : prod a0 a1 => fun y3 : a0 => exists y4 : a1, (~ (x0 x1 x2 y2)) \/ (@SETSPEC (prod a0 a1) y2 ((@IN a0 y3 x1) /\ (@IN a1 y4 (x2 y3))) (@pair a0 a1 y3 y4))) y0 y1.
Definition term540 (x0 : Prop) := imp (False \/ x0).
Definition term571 (a0 : Type') (x0 : Prop) := forall y0 : a0 -> Prop, (forall y1 : a0, x0 -> y0 y1) = (x0 -> forall y1 : a0, y0 y1).
Definition term1781 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : type1413 a0 a1) (x2 : nat) := exists y0 : a0, (fun y1 : a0 => (@IN a0 y1 x0) /\ (~ (@HAS_SIZE a1 (x1 y1) x2))) y0.
Definition term408 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : a1) (x2 : prod a1 a0) (x3 : type1470 a0 a1) (x4 : a1) := exists y0 : a0, (fun y1 : a0 => (forall y2 : a1, forall y3 : a0, (((~ (y2 = x4)) /\ (~ (x0 y2))) \/ (~ (x3 y2 y3))) \/ (~ (x2 = (@pair a1 a0 y2 y3)))) /\ ((((x0 x1) /\ (x3 x1 y1)) /\ (x2 = (@pair a1 a0 x1 y1))) \/ ((x2 = (@pair a1 a0 x4 y1)) /\ (x3 x4 y1)))) y0.
Definition term404 (a0 : Type') (a1 : Type') (x0 : a1) (x1 : a1 -> Prop) (x2 : prod a1 a0) (x3 : type1470 a0 a1) (x4 : a1) := exists y0 : a0, (fun y1 : a0 => ((((x0 = x4) \/ (x1 x0)) /\ (x3 x0 y1)) /\ (x2 = (@pair a1 a0 x0 y1))) /\ ((forall y2 : a1, forall y3 : a0, ((~ (x1 y2)) \/ (~ (x3 y2 y3))) \/ (~ (x2 = (@pair a1 a0 y2 y3)))) /\ (forall y2 : a0, (~ (x2 = (@pair a1 a0 x4 y2))) \/ (~ (x3 x4 y2))))) y0.
Definition term371 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : a1) (x2 : prod a1 a0) (x3 : type1470 a0 a1) (x4 : a1) := exists y0 : a0, (fun y1 : a0 => (((x0 x1) /\ (x3 x1 y1)) /\ (x2 = (@pair a1 a0 x1 y1))) \/ ((x2 = (@pair a1 a0 x4 y1)) /\ (x3 x4 y1))) y0.
Definition term337 (a0 : Type') (a1 : Type') (x0 : prod a1 a0) (x1 : type1470 a0 a1) (x2 : a1) := exists y0 : a0, (fun y1 : a0 => (x0 = (@pair a1 a0 x2 y1)) /\ (x1 x2 y1)) y0.
Definition term334 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : type1470 a0 a1) (x2 : prod a1 a0) (x3 : a1) := exists y0 : a0, (fun y1 : a0 => ((x0 x3) /\ (x1 x3 y1)) /\ (x2 = (@pair a1 a0 x3 y1))) y0.
Definition term299 (a0 : Type') (a1 : Type') (x0 : a1) (x1 : a1 -> Prop) (x2 : type1470 a0 a1) (x3 : prod a1 a0) (x4 : a1) := exists y0 : a0, (fun y1 : a0 => (((x4 = x0) \/ (x1 x4)) /\ (x2 x4 y1)) /\ (x3 = (@pair a1 a0 x4 y1))) y0.
Definition term1107 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : type1413 a0 a1) (x2 : a0) (x3 : nat) := (@IN a0 x2 x0) -> (@HAS_SIZE a1 (x1 x2) x3) = True.
Definition term527 (x0 : Prop) := imp (True \/ x0).
Definition term398 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : prod a1 a0) (x2 : type1470 a0 a1) (x3 : a1) := fun y0 : a1 => (exists y1 : a0, ((((y0 = x3) \/ (x0 y0)) /\ (x2 y0 y1)) /\ (x1 = (@pair a1 a0 y0 y1))) /\ ((forall y2 : a1, forall y3 : a0, ((~ (x0 y2)) \/ (~ (x2 y2 y3))) \/ (~ (x1 = (@pair a1 a0 y2 y3)))) /\ (forall y2 : a0, (~ (x1 = (@pair a1 a0 x3 y2))) \/ (~ (x2 x3 y2))))) \/ (exists y1 : a0, (forall y2 : a1, forall y3 : a0, (((~ (y2 = x3)) /\ (~ (x0 y2))) \/ (~ (x2 y2 y3))) \/ (~ (x1 = (@pair a1 a0 y2 y3)))) /\ ((((x0 y0) /\ (x2 y0 y1)) /\ (x1 = (@pair a1 a0 y0 y1))) \/ ((x1 = (@pair a1 a0 x3 y1)) /\ (x2 x3 y1)))).
Definition term327 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : prod a1 a0) (x2 : type1470 a0 a1) (x3 : a1) := fun y0 : a1 => (exists y1 : a0, ((x0 y0) /\ (x2 y0 y1)) /\ (x1 = (@pair a1 a0 y0 y1))) \/ (exists y1 : a0, (x1 = (@pair a1 a0 x3 y1)) /\ (x2 x3 y1)).
Definition term1772 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : type1413 a0 a1) (x2 : a0 -> Prop) (x3 : nat) := (exists y0 : a0, (@IN a0 y0 x2) /\ (~ (@HAS_SIZE a1 (x1 y0) x3))) \/ (@HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (x0 x2 x1)) (Nat.mul (@CARD a0 x2) x3)).
Definition term728 (a0 : Type') (a1 : Type') (x0 : nat) (x1 : Prop) (x2 : Prop) := (fun y0 : Prop => (((@CARD a0 (@EMPTY a0)) = x0) = x1) -> (x1 -> (forall y1 : type1413 a0 a1, forall y2 : nat, (forall y3 : a0, (@IN a0 y3 (@EMPTY a0)) -> @HAS_SIZE a1 (y1 y3) y2) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y3 : prod a0 a1 => exists y4 : a0, exists y5 : a1, @SETSPEC (prod a0 a1) y3 ((@IN a0 y4 (@EMPTY a0)) /\ (@IN a1 y5 (y1 y4))) (@pair a0 a1 y4 y5))) (Nat.mul x0 y2)) = y0) -> (((@CARD a0 (@EMPTY a0)) = x0) -> forall y1 : type1413 a0 a1, forall y2 : nat, (forall y3 : a0, (@IN a0 y3 (@EMPTY a0)) -> @HAS_SIZE a1 (y1 y3) y2) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y3 : prod a0 a1 => exists y4 : a0, exists y5 : a1, @SETSPEC (prod a0 a1) y3 ((@IN a0 y4 (@EMPTY a0)) /\ (@IN a1 y5 (y1 y4))) (@pair a0 a1 y4 y5))) (Nat.mul x0 y2)) = (x1 -> y0)) x2.
Definition term1766 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : type1413 a0 a1) (x2 : nat) := fun y0 : a0 => ~ ((fun y1 : a0 => (@IN a0 y1 x0) -> @HAS_SIZE a1 (x1 y1) x2) y0).
Definition term261 (a0 : Type') (a1 : Type') (x0 : prod a1 a0) (x1 : type1470 a0 a1) (x2 : a1) := fun y0 : a0 => ~ ((fun y1 : a0 => (x0 = (@pair a1 a0 x2 y1)) /\ (x1 x2 y1)) y0).
Definition term245 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : type1470 a0 a1) (x2 : prod a1 a0) (x3 : a1) := fun y0 : a0 => ~ ((fun y1 : a0 => ((x0 x3) /\ (x1 x3 y1)) /\ (x2 = (@pair a1 a0 x3 y1))) y0).
Definition term224 (a0 : Type') (a1 : Type') (x0 : a1) (x1 : a1 -> Prop) (x2 : type1470 a0 a1) (x3 : prod a1 a0) (x4 : a1) := fun y0 : a0 => ~ ((fun y1 : a0 => (((x4 = x0) \/ (x1 x4)) /\ (x2 x4 y1)) /\ (x3 = (@pair a1 a0 x4 y1))) y0).
Definition term677 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : nat) := (@FINITE a0 x0) -> (fun y0 : nat => ((@CARD a0 x0) = y0) -> forall y1 : type1413 a0 a1, forall y2 : nat, (forall y3 : a0, (@IN a0 y3 x0) -> @HAS_SIZE a1 (y1 y3) y2) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y3 : prod a0 a1 => exists y4 : a0, exists y5 : a1, @SETSPEC (prod a0 a1) y3 ((@IN a0 y4 x0) /\ (@IN a1 y5 (y1 y4))) (@pair a0 a1 y4 y5))) (Nat.mul y0 y2)) x1.
Definition term1159 (a0 : Type') (a1 : Type') (x0 : prod a0 a1) (x1 : a0 -> Prop) (x2 : type1413 a0 a1) := @IN (prod a0 a1) x0 (@GSPEC (prod a0 a1) (fun y0 : prod a0 a1 => (fun y1 : type1532 a0 a1 => exists y2 : a0, exists y3 : a1, y1 ((@IN a0 y2 x1) /\ (@IN a1 y3 (x2 y2))) (@pair a0 a1 y2 y3)) (@SETSPEC (prod a0 a1) y0))).
Definition term929 (a0 : Type') (a1 : Type') (x0 : prod a0 a1) := @IN (prod a0 a1) x0 (@GSPEC (prod a0 a1) (fun y0 : prod a0 a1 => (fun y1 : type1532 a0 a1 => exists y2 : a0, exists y3 : a1, y1 False (@pair a0 a1 y2 y3)) (@SETSPEC (prod a0 a1) y0))).
Definition term117 (a0 : Type') (a1 : Type') (x0 : prod a1 a0) (x1 : a1 -> Prop) (x2 : type1470 a0 a1) := @IN (prod a1 a0) x0 (@GSPEC (prod a1 a0) (fun y0 : prod a1 a0 => (fun y1 : type1534 a0 a1 => exists y2 : a1, exists y3 : a0, y1 ((@IN a1 y2 x1) /\ (@IN a0 y3 (x2 y2))) (@pair a1 a0 y2 y3)) (@SETSPEC (prod a1 a0) y0))).
Definition term56 (a0 : Type') (a1 : Type') (x0 : prod a1 a0) (x1 : a1) (x2 : a1 -> Prop) (x3 : type1470 a0 a1) := @IN (prod a1 a0) x0 (@GSPEC (prod a1 a0) (fun y0 : prod a1 a0 => (fun y1 : type1534 a0 a1 => exists y2 : a1, exists y3 : a0, y1 (((y2 = x1) \/ (@IN a1 y2 x2)) /\ (@IN a0 y3 (x3 y2))) (@pair a1 a0 y2 y3)) (@SETSPEC (prod a1 a0) y0))).
Definition term416 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : a1) (x2 : prod a1 a0) (x3 : type1470 a0 a1) (x4 : a1) := fun y0 : a0 => (((((x1 = x4) \/ (x0 x1)) /\ (x3 x1 y0)) /\ (x2 = (@pair a1 a0 x1 y0))) /\ ((forall y1 : a1, forall y2 : a0, ((~ (x0 y1)) \/ (~ (x3 y1 y2))) \/ (~ (x2 = (@pair a1 a0 y1 y2)))) /\ (forall y1 : a0, (~ (x2 = (@pair a1 a0 x4 y1))) \/ (~ (x3 x4 y1))))) \/ ((forall y1 : a1, forall y2 : a0, (((~ (y1 = x4)) /\ (~ (x0 y1))) \/ (~ (x3 y1 y2))) \/ (~ (x2 = (@pair a1 a0 y1 y2)))) /\ ((((x0 x1) /\ (x3 x1 y0)) /\ (x2 = (@pair a1 a0 x1 y0))) \/ ((x2 = (@pair a1 a0 x4 y0)) /\ (x3 x4 y0)))).
Definition term108 (a0 : Type') (a1 : Type') (x0 : a1) (x1 : a1 -> Prop) (x2 : type1470 a0 a1) (x3 : prod a1 a0) := @eq Prop (exists y0 : a1, exists y1 : a0, (((y0 = x0) \/ (x1 y0)) /\ (x2 y0 y1)) /\ (x3 = (@pair a1 a0 y0 y1))).
Definition term53 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : type1470 a0 a1) (x2 : a1) := forall y0 : prod a1 a0, (@IN (prod a1 a0) y0 (@GSPEC (prod a1 a0) (fun y1 : prod a1 a0 => exists y2 : a1, exists y3 : a0, @SETSPEC (prod a1 a0) y1 (((y2 = x2) \/ (@IN a1 y2 x0)) /\ (@IN a0 y3 (x1 y2))) (@pair a1 a0 y2 y3)))) = (@IN (prod a1 a0) y0 (@UNION (prod a1 a0) (@GSPEC (prod a1 a0) (fun y1 : prod a1 a0 => exists y2 : a1, exists y3 : a0, @SETSPEC (prod a1 a0) y1 ((@IN a1 y2 x0) /\ (@IN a0 y3 (x1 y2))) (@pair a1 a0 y2 y3))) (@IMAGE a0 (prod a1 a0) (fun y1 : a0 => @pair a1 a0 x2 y1) (x1 x2)))).
Definition term978 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a0 -> Prop) (x2 : type1413 a0 a1) (x3 : nat) (x4 : nat) (x5 : Prop) (x6 : Prop) := (fun y0 : Prop => ((forall y1 : a0, ((y1 = x0) -> @HAS_SIZE a1 (x2 y1) x4) /\ ((@IN a0 y1 x1) -> @HAS_SIZE a1 (x2 y1) x4)) = x5) -> (x5 -> (@HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y1 : prod a0 a1 => exists y2 : a0, exists y3 : a1, @SETSPEC (prod a0 a1) y1 (((y2 = x0) \/ (@IN a0 y2 x1)) /\ (@IN a1 y3 (x2 y2))) (@pair a0 a1 y2 y3))) (Nat.mul x3 x4)) = y0) -> ((forall y1 : a0, ((y1 = x0) -> @HAS_SIZE a1 (x2 y1) x4) /\ ((@IN a0 y1 x1) -> @HAS_SIZE a1 (x2 y1) x4)) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y1 : prod a0 a1 => exists y2 : a0, exists y3 : a1, @SETSPEC (prod a0 a1) y1 (((y2 = x0) \/ (@IN a0 y2 x1)) /\ (@IN a1 y3 (x2 y2))) (@pair a0 a1 y2 y3))) (Nat.mul x3 x4)) = (x5 -> y0)) x6.
Definition term851 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a0 -> Prop) (x2 : type1413 a0 a1) (x3 : a0) (x4 : nat) (x5 : Prop) (x6 : Prop) := (fun y0 : Prop => ((@IN a0 x3 (@INSERT a0 x0 x1)) = x5) -> (x5 -> (@HAS_SIZE a1 (x2 x3) x4) = y0) -> ((@IN a0 x3 (@INSERT a0 x0 x1)) -> @HAS_SIZE a1 (x2 x3) x4) = (x5 -> y0)) x6.
Definition term846 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a0 -> Prop) (x2 : type1413 a0 a1) (x3 : nat) (x4 : nat) (x5 : Prop) (x6 : Prop) := (fun y0 : Prop => ((forall y1 : a0, (@IN a0 y1 (@INSERT a0 x0 x1)) -> @HAS_SIZE a1 (x2 y1) x4) = x5) -> (x5 -> (@HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y1 : prod a0 a1 => exists y2 : a0, exists y3 : a1, @SETSPEC (prod a0 a1) y1 ((@IN a0 y2 (@INSERT a0 x0 x1)) /\ (@IN a1 y3 (x2 y2))) (@pair a0 a1 y2 y3))) (Nat.mul x3 x4)) = y0) -> ((forall y1 : a0, (@IN a0 y1 (@INSERT a0 x0 x1)) -> @HAS_SIZE a1 (x2 y1) x4) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y1 : prod a0 a1 => exists y2 : a0, exists y3 : a1, @SETSPEC (prod a0 a1) y1 ((@IN a0 y2 (@INSERT a0 x0 x1)) /\ (@IN a1 y3 (x2 y2))) (@pair a0 a1 y2 y3))) (Nat.mul x3 x4)) = (x5 -> y0)) x6.
Definition term753 (a0 : Type') (a1 : Type') (x0 : type1413 a0 a1) (x1 : nat) := fun y0 : a0 => (@IN a0 y0 (@EMPTY a0)) -> @HAS_SIZE a1 (x0 y0) x1.
Definition term1339 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a1) := fun y0 : a0 => forall y1 : a1, ((@pair a0 a1 x0 x1) = (@pair a0 a1 y0 y1)) = ((x0 = y0) /\ (x1 = y1)).
Definition term1393 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) := (x0 = (fun y0 : a0 -> Prop => fun y1 : type1413 a0 a1 => fun y2 : prod a0 a1 => exists y3 : a0, exists y4 : a1, @SETSPEC (prod a0 a1) y2 ((@IN a0 y3 y0) /\ (@IN a1 y4 (y1 y3))) (@pair a0 a1 y3 y4))) -> (fun y0 : type621 a0 a1 => forall y1 : a0, forall y2 : type1413 a0 a1, forall y3 : a1, forall y4 : prod a0 a1, forall y5 : a1, forall y6 : a0, forall y7 : a0 -> Prop, forall y8 : nat, forall y9 : nat, (~ (@IN a0 y1 y7)) -> (@FINITE a0 y7) -> (y9 = (S (@CARD a0 y7))) -> (@HAS_SIZE a1 (y2 y1) y8) -> (forall y10 : a0, (@IN a0 y10 y7) -> @HAS_SIZE a1 (y2 y10) y8) -> (forall y10 : type1413 a0 a1, forall y11 : nat, (forall y12 : a0, (@IN a0 y12 y7) -> @HAS_SIZE a1 (y10 y12) y11) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (y0 y7 y10)) (Nat.mul (@CARD a0 y7) y11)) -> (@IN a0 y6 y7) -> (@IN a1 y5 (y2 y6)) -> (y4 = (@pair a0 a1 y6 y5)) -> (y4 = (@pair a0 a1 y1 y3)) -> (@IN a1 y3 (y2 y1)) -> (forall y10 : a0, forall y11 : a1, forall y12 : a0, forall y13 : a1, ((@pair a0 a1 y10 y11) = (@pair a0 a1 y12 y13)) = ((y10 = y12) /\ (y11 = y13))) -> (forall y10 : a0, forall y11 : nat, forall y12 : a0, forall y13 : nat, ((@pair a0 nat y10 y11) = (@pair a0 nat y12 y13)) = ((y10 = y12) /\ (y11 = y13))) -> (forall y10 : a0, forall y11 : prod a0 a1, forall y12 : a0, forall y13 : prod a0 a1, ((@pair a0 (prod a0 a1) y10 y11) = (@pair a0 (prod a0 a1) y12 y13)) = ((y10 = y12) /\ (y11 = y13))) -> (forall y10 : nat, forall y11 : a1, forall y12 : nat, forall y13 : a1, ((@pair nat a1 y10 y11) = (@pair nat a1 y12 y13)) = ((y10 = y12) /\ (y11 = y13))) -> ~ (forall y10 : prod a0 a1, forall y11 : a1, forall y12 : prod a0 a1, forall y13 : a1, ((@pair (prod a0 a1) a1 y10 y11) = (@pair (prod a0 a1) a1 y12 y13)) = ((y10 = y12) /\ (y11 = y13)))) x0.
Definition term1632 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : a0 -> Prop) (x2 : type1413 a0 a1) (x3 : type1207 a0 a1) := (fun y0 : type1413 a0 a1 => fun y1 : type1207 a0 a1 => exists y2 : type1208 a0 a1, forall y3 : prod a0 a1, (~ (x0 x1 y0 y3)) \/ (@SETSPEC (prod a0 a1) y3 ((@IN a0 (y1 y3) x1) /\ (@IN a1 (y2 y3) (y0 (y1 y3)))) (@pair a0 a1 (y1 y3) (y2 y3)))) x2 x3.
Definition term425 (a0 : Type') (a1 : Type') (x0 : a1) (x1 : a1 -> Prop) (x2 : type1470 a0 a1) (x3 : prod a1 a0) (x4 : a1) (x5 : a0) := (((~ (x4 = x0)) \/ (~ (x2 x4 x5))) \/ (~ (x3 = (@pair a1 a0 x4 x5)))) /\ (((~ (x1 x4)) \/ (~ (x2 x4 x5))) \/ (~ (x3 = (@pair a1 a0 x4 x5)))).
Definition term1505 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : a0 -> Prop) (x2 : type1413 a0 a1) := (fun y0 : type1413 a0 a1 => forall y1 : prod a0 a1, (~ (x0 x1 y0 y1)) \/ (exists y2 : a0, exists y3 : a1, @SETSPEC (prod a0 a1) y1 ((@IN a0 y2 x1) /\ (@IN a1 y3 (y0 y2))) (@pair a0 a1 y2 y3))) x2.
Definition term1503 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : a0 -> Prop) (x2 : type1413 a0 a1) := (fun y0 : type1413 a0 a1 => forall y1 : prod a0 a1, (x0 x1 y0 y1) \/ (forall y2 : a0, forall y3 : a1, ~ (@SETSPEC (prod a0 a1) y1 ((@IN a0 y2 x1) /\ (@IN a1 y3 (y0 y2))) (@pair a0 a1 y2 y3)))) x2.
Definition term661 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : nat) (x2 : type1413 a0 a1) := (fun y0 : type1413 a0 a1 => forall y1 : nat, (forall y2 : a0, (@IN a0 y2 x0) -> @HAS_SIZE a1 (y0 y2) y1) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y2 : prod a0 a1 => exists y3 : a0, exists y4 : a1, @SETSPEC (prod a0 a1) y2 ((@IN a0 y3 x0) /\ (@IN a1 y4 (y0 y3))) (@pair a0 a1 y3 y4))) (Nat.mul x1 y1)) x2.
Definition term1800 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : type1413 a0 a1) (x2 : a0 -> Prop) (x3 : nat) (x4 : a0) := (fun y0 : nat => fun y1 : a0 => ((@IN a0 y1 x2) /\ (~ (@HAS_SIZE a1 (x1 y1) y0))) \/ (@HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (x0 x2 x1)) (Nat.mul (@CARD a0 x2) y0))) x3 x4.
Definition term678 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) := fun y0 : nat => (@FINITE a0 x0) -> (fun y1 : nat => ((@CARD a0 x0) = y1) -> forall y2 : type1413 a0 a1, forall y3 : nat, (forall y4 : a0, (@IN a0 y4 x0) -> @HAS_SIZE a1 (y2 y4) y3) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y4 : prod a0 a1 => exists y5 : a0, exists y6 : a1, @SETSPEC (prod a0 a1) y4 ((@IN a0 y5 x0) /\ (@IN a1 y6 (y2 y5))) (@pair a0 a1 y5 y6))) (Nat.mul y1 y3)) y0.
Definition term621 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : type1413 a0 a1) (x2 : nat) := fun y0 : nat => (@FINITE a0 x0) -> (fun y1 : nat => ((@CARD a0 x0) = x2) -> (forall y2 : a0, (@IN a0 y2 x0) -> @HAS_SIZE a1 (x1 y2) y1) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y2 : prod a0 a1 => exists y3 : a0, exists y4 : a1, @SETSPEC (prod a0 a1) y2 ((@IN a0 y3 x0) /\ (@IN a1 y4 (x1 y3))) (@pair a0 a1 y3 y4))) (Nat.mul x2 y1)) y0.
Definition term365 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : prod a1 a0) (x2 : type1470 a0 a1) (x3 : a1) := fun y0 : a1 => (forall y1 : a1, forall y2 : a0, (((~ (y1 = x3)) /\ (~ (x0 y1))) \/ (~ (x2 y1 y2))) \/ (~ (x1 = (@pair a1 a0 y1 y2)))) /\ (exists y1 : a0, (((x0 y0) /\ (x2 y0 y1)) /\ (x1 = (@pair a1 a0 y0 y1))) \/ ((x1 = (@pair a1 a0 x3 y1)) /\ (x2 x3 y1))).
Definition term419 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : prod a1 a0) (x2 : type1470 a0 a1) (x3 : a1) := exists y0 : a1, exists y1 : a0, (((((y0 = x3) \/ (x0 y0)) /\ (x2 y0 y1)) /\ (x1 = (@pair a1 a0 y0 y1))) /\ ((forall y2 : a1, forall y3 : a0, ((~ (x0 y2)) \/ (~ (x2 y2 y3))) \/ (~ (x1 = (@pair a1 a0 y2 y3)))) /\ (forall y2 : a0, (~ (x1 = (@pair a1 a0 x3 y2))) \/ (~ (x2 x3 y2))))) \/ ((forall y2 : a1, forall y3 : a0, (((~ (y2 = x3)) /\ (~ (x0 y2))) \/ (~ (x2 y2 y3))) \/ (~ (x1 = (@pair a1 a0 y2 y3)))) /\ ((((x0 y0) /\ (x2 y0 y1)) /\ (x1 = (@pair a1 a0 y0 y1))) \/ ((x1 = (@pair a1 a0 x3 y1)) /\ (x2 x3 y1)))).
Definition term380 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : prod a1 a0) (x2 : type1470 a0 a1) (x3 : a1) := exists y0 : a1, exists y1 : a0, (forall y2 : a1, forall y3 : a0, (((~ (y2 = x3)) /\ (~ (x0 y2))) \/ (~ (x2 y2 y3))) \/ (~ (x1 = (@pair a1 a0 y2 y3)))) /\ ((((x0 y0) /\ (x2 y0 y1)) /\ (x1 = (@pair a1 a0 y0 y1))) \/ ((x1 = (@pair a1 a0 x3 y1)) /\ (x2 x3 y1))).
Definition term351 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : prod a1 a0) (x2 : type1470 a0 a1) (x3 : a1) := exists y0 : a1, exists y1 : a0, (((x0 y0) /\ (x2 y0 y1)) /\ (x1 = (@pair a1 a0 y0 y1))) \/ ((x1 = (@pair a1 a0 x3 y1)) /\ (x2 x3 y1)).
Definition term311 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : prod a1 a0) (x2 : type1470 a0 a1) (x3 : a1) := exists y0 : a1, exists y1 : a0, ((((y0 = x3) \/ (x0 y0)) /\ (x2 y0 y1)) /\ (x1 = (@pair a1 a0 y0 y1))) /\ ((forall y2 : a1, forall y3 : a0, ((~ (x0 y2)) \/ (~ (x2 y2 y3))) \/ (~ (x1 = (@pair a1 a0 y2 y3)))) /\ (forall y2 : a0, (~ (x1 = (@pair a1 a0 x3 y2))) \/ (~ (x2 x3 y2)))).
Definition term157 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : type1470 a0 a1) (x2 : prod a1 a0) := exists y0 : a1, exists y1 : a0, ((x0 y0) /\ (x1 y0 y1)) /\ (x2 = (@pair a1 a0 y0 y1)).
Definition term128 (a0 : Type') (a1 : Type') (x0 : prod a1 a0) (x1 : a1 -> Prop) (x2 : type1470 a0 a1) := exists y0 : a1, exists y1 : a0, (fun y2 : Prop => fun y3 : prod a1 a0 => y2 /\ (x0 = y3)) ((@IN a1 y0 x1) /\ (@IN a0 y1 (x2 y0))) (@pair a1 a0 y0 y1).
Definition term121 (a0 : Type') (a1 : Type') (x0 : prod a1 a0) (x1 : a1 -> Prop) (x2 : type1470 a0 a1) := exists y0 : a1, exists y1 : a0, @SETSPEC (prod a1 a0) x0 ((@IN a1 y0 x1) /\ (@IN a0 y1 (x2 y0))) (@pair a1 a0 y0 y1).
Definition term107 (a0 : Type') (a1 : Type') (x0 : a1) (x1 : a1 -> Prop) (x2 : type1470 a0 a1) (x3 : prod a1 a0) := exists y0 : a1, exists y1 : a0, (((y0 = x0) \/ (x1 y0)) /\ (x2 y0 y1)) /\ (x3 = (@pair a1 a0 y0 y1)).
Definition term67 (a0 : Type') (a1 : Type') (x0 : prod a1 a0) (x1 : a1) (x2 : a1 -> Prop) (x3 : type1470 a0 a1) := exists y0 : a1, exists y1 : a0, (fun y2 : Prop => fun y3 : prod a1 a0 => y2 /\ (x0 = y3)) (((y0 = x1) \/ (@IN a1 y0 x2)) /\ (@IN a0 y1 (x3 y0))) (@pair a1 a0 y0 y1).
Definition term60 (a0 : Type') (a1 : Type') (x0 : prod a1 a0) (x1 : a1) (x2 : a1 -> Prop) (x3 : type1470 a0 a1) := exists y0 : a1, exists y1 : a0, @SETSPEC (prod a1 a0) x0 (((y0 = x1) \/ (@IN a1 y0 x2)) /\ (@IN a0 y1 (x3 y0))) (@pair a1 a0 y0 y1).
Definition term427 (a0 : Type') (a1 : Type') (x0 : a1) (x1 : a1 -> Prop) (x2 : type1470 a0 a1) (x3 : prod a1 a0) (x4 : a1) := fun y0 : a0 => (((~ (x4 = x0)) \/ (~ (x2 x4 y0))) \/ (~ (x3 = (@pair a1 a0 x4 y0)))) /\ (((~ (x1 x4)) \/ (~ (x2 x4 y0))) \/ (~ (x3 = (@pair a1 a0 x4 y0)))).
Definition term721 (x0 : Prop) (x1 : Prop) (x2 : Prop) (x3 : Prop) := (x0 = x2) -> (x2 -> x1 = x3) -> (x0 -> x1) = (x2 -> x3).
Definition term765 (a0 : Type') (a1 : Type') (x0 : prod a0 a1) (x1 : a0) (x2 : a1) := @SETSPEC (prod a0 a1) x0 False (@pair a0 a1 x1 x2).
Definition term2006 (a0 : Type') (x0 : type686 a0) (x1 : type686 a0) (x2 : type686 a0) := (~ (x0 = x1)) \/ ((~ (x0 = x2)) \/ (x1 = x2)).
Definition term1445 (a0 : Type') (a1 : Type') (x0 : prod a0 a1) (x1 : a0 -> Prop) (x2 : type1413 a0 a1) (x3 : a0) (x4 : a1) := (fun y0 : a1 => @SETSPEC (prod a0 a1) x0 ((@IN a0 x3 x1) /\ (@IN a1 y0 (x2 x3))) (@pair a0 a1 x3 y0)) x4.
Definition term1093 (a0 : Type') (a1 : Type') (x0 : a0 -> a1) (x1 : a0 -> Prop) (x2 : nat) := @HAS_SIZE a1 (@IMAGE a0 a1 x0 x1) x2.
Definition term25 (a0 : Type') (a1 : Type') (x0 : a1) (x1 : a0 -> a1) (x2 : a0 -> Prop) := @IN a1 x0 (@IMAGE a0 a1 x1 x2).
Definition term822 (a0 : Type') (x0 : a0 -> Prop) := S (@CARD a0 x0).
Definition term698 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a0 -> Prop) := (forall y0 : nat, ((@CARD a0 x1) = y0) -> forall y1 : type1413 a0 a1, forall y2 : nat, (forall y3 : a0, (@IN a0 y3 x1) -> @HAS_SIZE a1 (y1 y3) y2) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y3 : prod a0 a1 => exists y4 : a0, exists y5 : a1, @SETSPEC (prod a0 a1) y3 ((@IN a0 y4 x1) /\ (@IN a1 y5 (y1 y4))) (@pair a0 a1 y4 y5))) (Nat.mul y0 y2)) /\ ((~ (@IN a0 x0 x1)) /\ (@FINITE a0 x1)).
Definition term1132 (a0 : Type') (a1 : Type') (x0 : type1413 a0 a1) (x1 : a1) (x2 : a0) (x3 : a1) := (@IN a1 x3 (x0 x2)) /\ (((fun y0 : a1 => @pair a0 a1 x2 y0) x1) = ((fun y0 : a1 => @pair a0 a1 x2 y0) x3)).
Definition term234 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : type1470 a0 a1) (x2 : a1) (x3 : a0) := ~ ((x0 x2) /\ (x1 x2 x3)).
Definition term687 (a0 : Type') (a1 : Type') := (((fun y0 : a0 -> Prop => forall y1 : nat, ((@CARD a0 y0) = y1) -> forall y2 : type1413 a0 a1, forall y3 : nat, (forall y4 : a0, (@IN a0 y4 y0) -> @HAS_SIZE a1 (y2 y4) y3) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y4 : prod a0 a1 => exists y5 : a0, exists y6 : a1, @SETSPEC (prod a0 a1) y4 ((@IN a0 y5 y0) /\ (@IN a1 y6 (y2 y5))) (@pair a0 a1 y5 y6))) (Nat.mul y1 y3)) (@EMPTY a0)) /\ (forall y0 : a0, forall y1 : a0 -> Prop, (((fun y2 : a0 -> Prop => forall y3 : nat, ((@CARD a0 y2) = y3) -> forall y4 : type1413 a0 a1, forall y5 : nat, (forall y6 : a0, (@IN a0 y6 y2) -> @HAS_SIZE a1 (y4 y6) y5) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y6 : prod a0 a1 => exists y7 : a0, exists y8 : a1, @SETSPEC (prod a0 a1) y6 ((@IN a0 y7 y2) /\ (@IN a1 y8 (y4 y7))) (@pair a0 a1 y7 y8))) (Nat.mul y3 y5)) y1) /\ ((~ (@IN a0 y0 y1)) /\ (@FINITE a0 y1))) -> (fun y2 : a0 -> Prop => forall y3 : nat, ((@CARD a0 y2) = y3) -> forall y4 : type1413 a0 a1, forall y5 : nat, (forall y6 : a0, (@IN a0 y6 y2) -> @HAS_SIZE a1 (y4 y6) y5) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y6 : prod a0 a1 => exists y7 : a0, exists y8 : a1, @SETSPEC (prod a0 a1) y6 ((@IN a0 y7 y2) /\ (@IN a1 y8 (y4 y7))) (@pair a0 a1 y7 y8))) (Nat.mul y3 y5)) (@INSERT a0 y0 y1))) -> forall y0 : a0 -> Prop, (@FINITE a0 y0) -> (fun y1 : a0 -> Prop => forall y2 : nat, ((@CARD a0 y1) = y2) -> forall y3 : type1413 a0 a1, forall y4 : nat, (forall y5 : a0, (@IN a0 y5 y1) -> @HAS_SIZE a1 (y3 y5) y4) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y5 : prod a0 a1 => exists y6 : a0, exists y7 : a1, @SETSPEC (prod a0 a1) y5 ((@IN a0 y6 y1) /\ (@IN a1 y7 (y3 y6))) (@pair a0 a1 y6 y7))) (Nat.mul y2 y4)) y0.
Definition term1427 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : a0 -> Prop) (x2 : type1413 a0 a1) (x3 : prod a0 a1) := @eq Prop (x0 x1 x2 x3).
Definition term1591 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : a0 -> Prop) (x2 : type1413 a0 a1) (x3 : type1207 a0 a1) := fun y0 : prod a0 a1 => exists y1 : a1, (~ (x0 x1 x2 y0)) \/ (@SETSPEC (prod a0 a1) y0 ((@IN a0 (x3 y0) x1) /\ (@IN a1 y1 (x2 (x3 y0)))) (@pair a0 a1 (x3 y0) y1)).
Definition term96 (a0 : Type') (a1 : Type') (x0 : a1) (x1 : a1 -> Prop) (x2 : type1470 a0 a1) (x3 : a1) (x4 : a0) (x5 : prod a1 a0) (x6 : prod a1 a0) := (fun y0 : prod a1 a0 => (((x3 = x0) \/ (x1 x3)) /\ (x2 x3 x4)) /\ (x5 = y0)) x6.
Definition term184 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : type1470 a0 a1) (x2 : a1) := ~ (forall y0 : prod a1 a0, (exists y1 : a1, exists y2 : a0, (((y1 = x2) \/ (x0 y1)) /\ (x1 y1 y2)) /\ (y0 = (@pair a1 a0 y1 y2))) = ((exists y1 : a1, exists y2 : a0, ((x0 y1) /\ (x1 y1 y2)) /\ (y0 = (@pair a1 a0 y1 y2))) \/ (exists y1 : a0, (y0 = (@pair a1 a0 x2 y1)) /\ (x1 x2 y1)))).
Definition term1446 (a0 : Type') (a1 : Type') (x0 : prod a0 a1) (x1 : a0 -> Prop) (x2 : type1413 a0 a1) (x3 : a0) (x4 : a1) := ~ ((fun y0 : a1 => @SETSPEC (prod a0 a1) x0 ((@IN a0 x3 x1) /\ (@IN a1 y0 (x2 x3))) (@pair a0 a1 x3 y0)) x4).
Definition term1850 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a0) (x2 : a1) (x3 : a1) := (((@pair a0 a1 x0 x2) = (@pair a0 a1 x1 x3)) \/ (~ ((x0 = x1) /\ (x2 = x3)))) /\ ((~ ((@pair a0 a1 x0 x2) = (@pair a0 a1 x1 x3))) \/ ((x0 = x1) /\ (x2 = x3))).
Definition term1914 (a0 : Type') (a1 : Type') (x0 : a0) := @eq Prop (forall y0 : a1, (forall y1 : a0, forall y2 : a1, ((@pair a0 a1 x0 y0) = (@pair a0 a1 y1 y2)) \/ ((~ (x0 = y1)) \/ (~ (y0 = y2)))) /\ (forall y1 : a0, forall y2 : a1, (~ ((@pair a0 a1 x0 y0) = (@pair a0 a1 y1 y2))) \/ ((x0 = y1) /\ (y0 = y2)))).
Definition term153 (a0 : Type') (a1 : Type') (x0 : prod a1 a0) (x1 : a1 -> Prop) (x2 : type1470 a0 a1) (x3 : a1) := exists y0 : a0, (fun y1 : Prop => fun y2 : prod a1 a0 => y1 /\ (x0 = y2)) ((@IN a1 x3 x1) /\ (@IN a0 y0 (x2 x3))) (@pair a1 a0 x3 y0).
Definition term103 (a0 : Type') (a1 : Type') (x0 : prod a1 a0) (x1 : a1) (x2 : a1 -> Prop) (x3 : type1470 a0 a1) (x4 : a1) := exists y0 : a0, (fun y1 : Prop => fun y2 : prod a1 a0 => y1 /\ (x0 = y2)) (((x4 = x1) \/ (@IN a1 x4 x2)) /\ (@IN a0 y0 (x3 x4))) (@pair a1 a0 x4 y0).
Definition term1957 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a1) := fun y0 : a0 => forall y1 : a1, (~ ((@I (a1 -> prod a0 a1) (@I (a0 -> a1 -> prod a0 a1) (@pair a0 a1) x0) x1) = (@I (a1 -> prod a0 a1) (@I (a0 -> a1 -> prod a0 a1) (@pair a0 a1) y0) y1))) \/ ((x0 = y0) /\ (x1 = y1)).
Definition term1885 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a1) := fun y0 : a0 => forall y1 : a1, (~ ((@pair a0 a1 x0 x1) = (@pair a0 a1 y0 y1))) \/ ((x0 = y0) /\ (x1 = y1)).
Definition term423 (a0 : Type') (a1 : Type') (x0 : a1) (x1 : a1 -> Prop) (x2 : type1470 a0 a1) (x3 : a1) (x4 : a0) := or (((~ (x3 = x0)) \/ (~ (x2 x3 x4))) /\ ((~ (x1 x3)) \/ (~ (x2 x3 x4)))).
Definition term164 (a0 : Type') (a1 : Type') (x0 : a1) := fun y0 : a0 => @pair a1 a0 x0 y0.
Definition term309 (a0 : Type') (a1 : Type') (x0 : a1) (x1 : a1 -> Prop) (x2 : prod a1 a0) (x3 : type1470 a0 a1) (x4 : a1) := exists y0 : a0, ((((x0 = x4) \/ (x1 x0)) /\ (x3 x0 y0)) /\ (x2 = (@pair a1 a0 x0 y0))) /\ ((forall y1 : a1, forall y2 : a0, ((~ (x1 y1)) \/ (~ (x3 y1 y2))) \/ (~ (x2 = (@pair a1 a0 y1 y2)))) /\ (forall y1 : a0, (~ (x2 = (@pair a1 a0 x4 y1))) \/ (~ (x3 x4 y1)))).
Definition term316 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : prod a1 a0) (x2 : type1470 a0 a1) (x3 : a1) := exists y0 : a1, ((fun y1 : a1 => exists y2 : a0, ((x0 y1) /\ (x2 y1 y2)) /\ (x1 = (@pair a1 a0 y1 y2))) y0) \/ (exists y1 : a0, (x1 = (@pair a1 a0 x3 y1)) /\ (x2 x3 y1)).
Definition term1964 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a0) (x2 : a1) (x3 : a1) := ((@I (a1 -> prod a0 a1) (@I (a0 -> a1 -> prod a0 a1) (@pair a0 a1) x0) x2) = (@I (a1 -> prod a0 a1) (@I (a0 -> a1 -> prod a0 a1) (@pair a0 a1) x1) x3)) \/ ((~ (x0 = x1)) \/ (~ (x2 = x3))).
Definition term1059 (a0 : Type') (x0 : a0) (x1 : Prop) := (x0 = x0) -> x1.
Definition term925 (a0 : Type') (a1 : Type') (x0 : type1210 a0 a1) (x1 : type1210 a0 a1) := forall y0 : prod a0 a1, (@IN (prod a0 a1) y0 x0) = (@IN (prod a0 a1) y0 x1).
Definition term50 (a0 : Type') (a1 : Type') (x0 : type1223 a0 a1) (x1 : type1223 a0 a1) := forall y0 : prod a1 a0, (@IN (prod a1 a0) y0 x0) = (@IN (prod a1 a0) y0 x1).
Definition term1759 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : type1413 a0 a1) (x2 : a0) (x3 : nat) := ~ ((@IN a0 x2 x0) -> @HAS_SIZE a1 (x1 x2) x3).
Definition term815 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a0 -> Prop) (x2 : nat) (x3 : Prop) (x4 : Prop) := (((@CARD a0 (@INSERT a0 x0 x1)) = x2) = x3) -> (x3 -> (forall y0 : type1413 a0 a1, forall y1 : nat, (forall y2 : a0, (@IN a0 y2 (@INSERT a0 x0 x1)) -> @HAS_SIZE a1 (y0 y2) y1) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y2 : prod a0 a1 => exists y3 : a0, exists y4 : a1, @SETSPEC (prod a0 a1) y2 ((@IN a0 y3 (@INSERT a0 x0 x1)) /\ (@IN a1 y4 (y0 y3))) (@pair a0 a1 y3 y4))) (Nat.mul x2 y1)) = x4) -> (((@CARD a0 (@INSERT a0 x0 x1)) = x2) -> forall y0 : type1413 a0 a1, forall y1 : nat, (forall y2 : a0, (@IN a0 y2 (@INSERT a0 x0 x1)) -> @HAS_SIZE a1 (y0 y2) y1) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y2 : prod a0 a1 => exists y3 : a0, exists y4 : a1, @SETSPEC (prod a0 a1) y2 ((@IN a0 y3 (@INSERT a0 x0 x1)) /\ (@IN a1 y4 (y0 y3))) (@pair a0 a1 y3 y4))) (Nat.mul x2 y1)) = (x3 -> x4).
Definition term1773 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : type1413 a0 a1) (x2 : a0 -> Prop) := fun y0 : nat => (exists y1 : a0, (@IN a0 y1 x2) /\ (~ (@HAS_SIZE a1 (x1 y1) y0))) \/ (@HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (x0 x2 x1)) (Nat.mul (@CARD a0 x2) y0)).
Definition term1696 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : type619 a0 a1) := forall y0 : a0 -> Prop, (fun y1 : a0 -> Prop => fun y2 : type464 a0 a1 => exists y3 : type465 a0 a1, forall y4 : type1413 a0 a1, forall y5 : prod a0 a1, (~ (x0 y1 y4 y5)) \/ (@SETSPEC (prod a0 a1) y5 ((@IN a0 (y2 y4 y5) y1) /\ (@IN a1 (y3 y4 y5) (y4 (y2 y4 y5)))) (@pair a0 a1 (y2 y4 y5) (y3 y4 y5)))) y0 (x1 y0).
Definition term1479 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : a0 -> Prop) (x2 : type1413 a0 a1) (x3 : prod a0 a1) := (fun y0 : prod a0 a1 => (x0 x1 x2 y0) \/ (forall y1 : a0, forall y2 : a1, ~ (@SETSPEC (prod a0 a1) y0 ((@IN a0 y1 x1) /\ (@IN a1 y2 (x2 y1))) (@pair a0 a1 y1 y2)))) x3.
Definition term490 (a0 : Type') (x0 : a0) := ~ (x0 = x0).
Definition term1836 (a0 : Type') (a1 : Type') (x0 : type471 a0 a1) (x1 : type621 a0 a1) (x2 : a0 -> Prop) := fun y0 : type1413 a0 a1 => forall y1 : nat, ((@IN a0 (x0 y0 y1) x2) /\ (~ (@HAS_SIZE a1 (y0 (x0 y0 y1)) y1))) \/ (@HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (x1 x2 y0)) (Nat.mul (@CARD a0 x2) y1)).
Definition term1775 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : a0 -> Prop) := fun y0 : type1413 a0 a1 => forall y1 : nat, (exists y2 : a0, (@IN a0 y2 x1) /\ (~ (@HAS_SIZE a1 (y0 y2) y1))) \/ (@HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (x0 x1 y0)) (Nat.mul (@CARD a0 x1) y1)).
Definition term1351 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : a0 -> Prop) := fun y0 : type1413 a0 a1 => forall y1 : nat, (forall y2 : a0, (@IN a0 y2 x1) -> @HAS_SIZE a1 (y0 y2) y1) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (x0 x1 y0)) (Nat.mul (@CARD a0 x1) y1).
Definition term1350 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) := fun y0 : type1413 a0 a1 => forall y1 : nat, (forall y2 : a0, (@IN a0 y2 x0) -> @HAS_SIZE a1 (y0 y2) y1) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y2 : prod a0 a1 => exists y3 : a0, exists y4 : a1, @SETSPEC (prod a0 a1) y2 ((@IN a0 y3 x0) /\ (@IN a1 y4 (y0 y3))) (@pair a0 a1 y3 y4))) (Nat.mul (@CARD a0 x0) y1).
Definition term895 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a0 -> Prop) (x2 : nat) := fun y0 : type1413 a0 a1 => forall y1 : nat, (forall y2 : a0, ((y2 = x0) \/ (@IN a0 y2 x1)) -> @HAS_SIZE a1 (y0 y2) y1) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y2 : prod a0 a1 => exists y3 : a0, exists y4 : a1, @SETSPEC (prod a0 a1) y2 (((y3 = x0) \/ (@IN a0 y3 x1)) /\ (@IN a1 y4 (y0 y3))) (@pair a0 a1 y3 y4))) (Nat.mul x2 y1).
Definition term894 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a0 -> Prop) (x2 : nat) := fun y0 : type1413 a0 a1 => forall y1 : nat, (forall y2 : a0, (@IN a0 y2 (@INSERT a0 x0 x1)) -> @HAS_SIZE a1 (y0 y2) y1) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y2 : prod a0 a1 => exists y3 : a0, exists y4 : a1, @SETSPEC (prod a0 a1) y2 ((@IN a0 y3 (@INSERT a0 x0 x1)) /\ (@IN a1 y4 (y0 y3))) (@pair a0 a1 y3 y4))) (Nat.mul x2 y1).
Definition term789 (a0 : Type') (a1 : Type') (x0 : nat) := fun y0 : type1413 a0 a1 => forall y1 : nat, (forall y2 : a0, (@IN a0 y2 (@EMPTY a0)) -> @HAS_SIZE a1 (y0 y2) y1) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y2 : prod a0 a1 => exists y3 : a0, exists y4 : a1, @SETSPEC (prod a0 a1) y2 ((@IN a0 y3 (@EMPTY a0)) /\ (@IN a1 y4 (y0 y3))) (@pair a0 a1 y3 y4))) (Nat.mul x0 y1).
Definition term660 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : nat) := fun y0 : type1413 a0 a1 => forall y1 : nat, (forall y2 : a0, (@IN a0 y2 x0) -> @HAS_SIZE a1 (y0 y2) y1) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y2 : prod a0 a1 => exists y3 : a0, exists y4 : a1, @SETSPEC (prod a0 a1) y2 ((@IN a0 y3 x0) /\ (@IN a1 y4 (y0 y3))) (@pair a0 a1 y3 y4))) (Nat.mul x1 y1).
Definition term594 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : nat) := fun y0 : type1413 a0 a1 => forall y1 : nat, (((@FINITE a0 x0) /\ ((@CARD a0 x0) = x1)) /\ (forall y2 : a0, (@IN a0 y2 x0) -> @HAS_SIZE a1 (y0 y2) y1)) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y2 : prod a0 a1 => exists y3 : a0, exists y4 : a1, @SETSPEC (prod a0 a1) y2 ((@IN a0 y3 x0) /\ (@IN a1 y4 (y0 y3))) (@pair a0 a1 y3 y4))) (Nat.mul x1 y1).
Definition term593 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : nat) := fun y0 : type1413 a0 a1 => forall y1 : nat, ((@HAS_SIZE a0 x0 x1) /\ (forall y2 : a0, (@IN a0 y2 x0) -> @HAS_SIZE a1 (y0 y2) y1)) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y2 : prod a0 a1 => exists y3 : a0, exists y4 : a1, @SETSPEC (prod a0 a1) y2 ((@IN a0 y3 x0) /\ (@IN a1 y4 (y0 y3))) (@pair a0 a1 y3 y4))) (Nat.mul x1 y1).
Definition term1208 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : prod a0 a1) (x2 : type1413 a0 a1) (x3 : a0) := @eq Prop ((exists y0 : a0, exists y1 : a1, ((@IN a0 y0 x0) /\ (@IN a1 y1 (x2 y0))) /\ (x1 = (@pair a0 a1 y0 y1))) /\ (exists y0 : a1, (x1 = (@pair a0 a1 x3 y0)) /\ (@IN a1 y0 (x2 x3)))).
Definition term1669 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : a0 -> Prop) (x2 : type464 a0 a1) (x3 : type465 a0 a1) := forall y0 : type1413 a0 a1, (fun y1 : type1413 a0 a1 => fun y2 : type1208 a0 a1 => forall y3 : prod a0 a1, (~ (x0 x1 y1 y3)) \/ (@SETSPEC (prod a0 a1) y3 ((@IN a0 (x2 y1 y3) x1) /\ (@IN a1 (y2 y3) (y1 (x2 y1 y3)))) (@pair a0 a1 (x2 y1 y3) (y2 y3)))) y0 (x3 y0).
Definition term135 (a0 : Type') (x0 : a0) (x1 : a0 -> Prop) := and (@IN a0 x0 x1).
Definition term355 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : prod a1 a0) (x2 : type1470 a0 a1) (x3 : a1) := (forall y0 : a1, forall y1 : a0, (((~ (y0 = x3)) /\ (~ (x0 y0))) \/ (~ (x2 y0 y1))) \/ (~ (x1 = (@pair a1 a0 y0 y1)))) /\ (exists y0 : a1, (fun y1 : a1 => exists y2 : a0, (((x0 y1) /\ (x2 y1 y2)) /\ (x1 = (@pair a1 a0 y1 y2))) \/ ((x1 = (@pair a1 a0 x3 y2)) /\ (x2 x3 y2))) y0).
Definition term1300 (a0 : Type') (a1 : Type') := fun y0 : a0 -> Prop => fun y1 : type1413 a0 a1 => fun y2 : prod a0 a1 => exists y3 : a0, exists y4 : a1, @SETSPEC (prod a0 a1) y2 ((@IN a0 y3 y0) /\ (@IN a1 y4 (y1 y3))) (@pair a0 a1 y3 y4).
Definition term947 (a0 : Type') (a1 : Type') (x0 : prod a0 a1) := @eq ((prod a0 a1) -> Prop) ((fun y0 : Prop => fun y1 : prod a0 a1 => y0 /\ (x0 = y1)) False).
Definition term1222 (a0 : Type') (a1 : Type') := (forall y0 : prod a0 a1, forall y1 : a1, forall y2 : prod a0 a1, forall y3 : a1, ((@pair (prod a0 a1) a1 y0 y1) = (@pair (prod a0 a1) a1 y2 y3)) = ((y0 = y2) /\ (y1 = y3))) -> False.
Definition term1146 (a0 : Type') (a1 : Type') (x0 : type1413 a0 a1) (x1 : a0) (x2 : nat) := (forall y0 : a1, forall y1 : a1, ((@IN a1 y0 (x0 x1)) /\ ((@IN a1 y1 (x0 x1)) /\ (((fun y2 : a1 => @pair a0 a1 x1 y2) y0) = ((fun y2 : a1 => @pair a0 a1 x1 y2) y1)))) -> y0 = y1) /\ (@HAS_SIZE a1 (x0 x1) x2).
Definition term982 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : type1413 a0 a1) (x2 : nat) := fun y0 : a0 => (y0 = x0) -> @HAS_SIZE a1 (x1 y0) x2.
Definition term256 (a0 : Type') (a1 : Type') (x0 : prod a1 a0) (x1 : type1470 a0 a1) (x2 : a1) (x3 : a0) := (~ (x0 = (@pair a1 a0 x2 x3))) \/ (~ (x1 x2 x3)).
Definition term1825 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : a0 -> Prop) (x2 : type1413 a0 a1) (x3 : nat -> a0) := (fun y0 : type1413 a0 a1 => fun y1 : nat -> a0 => forall y2 : nat, ((@IN a0 (y1 y2) x1) /\ (~ (@HAS_SIZE a1 (y0 (y1 y2)) y2))) \/ (@HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (x0 x1 y0)) (Nat.mul (@CARD a0 x1) y2))) x2 x3.
Definition term1426 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : a0 -> Prop) (x2 : type1413 a0 a1) := @eq Prop ((x0 x1 x2) = (fun y0 : prod a0 a1 => exists y1 : a0, exists y2 : a1, @SETSPEC (prod a0 a1) y0 ((@IN a0 y1 x1) /\ (@IN a1 y2 (x2 y1))) (@pair a0 a1 y1 y2))).
Definition term262 (a0 : Type') (a1 : Type') (x0 : prod a1 a0) (x1 : type1470 a0 a1) (x2 : a1) := fun y0 : a0 => (~ (x0 = (@pair a1 a0 x2 y0))) \/ (~ (x1 x2 y0)).
Definition term641 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : type1413 a0 a1) (x2 : nat) := (@FINITE a0 x0) -> ((@CARD a0 x0) = x2) -> forall y0 : nat, (forall y1 : a0, (@IN a0 y1 x0) -> @HAS_SIZE a1 (x1 y1) y0) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y1 : prod a0 a1 => exists y2 : a0, exists y3 : a1, @SETSPEC (prod a0 a1) y1 ((@IN a0 y2 x0) /\ (@IN a1 y3 (x1 y2))) (@pair a0 a1 y2 y3))) (Nat.mul x2 y0).
Definition term1380 (a0 : Type') (x0 : Prop) (x1 : a0) (x2 : a0 -> Prop) := (forall y0 : a0, (y0 = x1) -> x0 = (x2 y0)) -> x0 = (forall y0 : a0, (y0 = x1) -> x2 y0).
Definition term1854 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a1) := fun y0 : a0 => forall y1 : a1, (((@pair a0 a1 x0 x1) = (@pair a0 a1 y0 y1)) \/ ((~ (x0 = y0)) \/ (~ (x1 = y1)))) /\ ((~ ((@pair a0 a1 x0 x1) = (@pair a0 a1 y0 y1))) \/ ((x0 = y0) /\ (x1 = y1))).
Definition term1468 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : a0 -> Prop) (x2 : type1413 a0 a1) := forall y0 : prod a0 a1, ((x0 x1 x2 y0) \/ (forall y1 : a0, forall y2 : a1, ~ (@SETSPEC (prod a0 a1) y0 ((@IN a0 y1 x1) /\ (@IN a1 y2 (x2 y1))) (@pair a0 a1 y1 y2)))) /\ ((~ (x0 x1 x2 y0)) \/ (exists y1 : a0, exists y2 : a1, @SETSPEC (prod a0 a1) y0 ((@IN a0 y1 x1) /\ (@IN a1 y2 (x2 y1))) (@pair a0 a1 y1 y2))).
Definition term713 (a0 : Type') (a1 : Type') := ((fun y0 : a0 -> Prop => forall y1 : nat, ((@CARD a0 y0) = y1) -> forall y2 : type1413 a0 a1, forall y3 : nat, (forall y4 : a0, (@IN a0 y4 y0) -> @HAS_SIZE a1 (y2 y4) y3) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y4 : prod a0 a1 => exists y5 : a0, exists y6 : a1, @SETSPEC (prod a0 a1) y4 ((@IN a0 y5 y0) /\ (@IN a1 y6 (y2 y5))) (@pair a0 a1 y5 y6))) (Nat.mul y1 y3)) (@EMPTY a0)) /\ (forall y0 : a0, forall y1 : a0 -> Prop, (((fun y2 : a0 -> Prop => forall y3 : nat, ((@CARD a0 y2) = y3) -> forall y4 : type1413 a0 a1, forall y5 : nat, (forall y6 : a0, (@IN a0 y6 y2) -> @HAS_SIZE a1 (y4 y6) y5) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y6 : prod a0 a1 => exists y7 : a0, exists y8 : a1, @SETSPEC (prod a0 a1) y6 ((@IN a0 y7 y2) /\ (@IN a1 y8 (y4 y7))) (@pair a0 a1 y7 y8))) (Nat.mul y3 y5)) y1) /\ ((~ (@IN a0 y0 y1)) /\ (@FINITE a0 y1))) -> (fun y2 : a0 -> Prop => forall y3 : nat, ((@CARD a0 y2) = y3) -> forall y4 : type1413 a0 a1, forall y5 : nat, (forall y6 : a0, (@IN a0 y6 y2) -> @HAS_SIZE a1 (y4 y6) y5) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y6 : prod a0 a1 => exists y7 : a0, exists y8 : a1, @SETSPEC (prod a0 a1) y6 ((@IN a0 y7 y2) /\ (@IN a1 y8 (y4 y7))) (@pair a0 a1 y7 y8))) (Nat.mul y3 y5)) (@INSERT a0 y0 y1)).
Definition term1071 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : type1413 a0 a1) (x2 : a0) := @HAS_SIZE (prod a0 a1) (@UNION (prod a0 a1) (@GSPEC (prod a0 a1) (fun y0 : prod a0 a1 => exists y1 : a0, exists y2 : a1, @SETSPEC (prod a0 a1) y0 ((@IN a0 y1 x0) /\ (@IN a1 y2 (x1 y1))) (@pair a0 a1 y1 y2))) (@IMAGE a1 (prod a0 a1) (fun y0 : a1 => @pair a0 a1 x2 y0) (x1 x2))).
Definition term700 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a0 -> Prop) := imp ((forall y0 : nat, ((@CARD a0 x1) = y0) -> forall y1 : type1413 a0 a1, forall y2 : nat, (forall y3 : a0, (@IN a0 y3 x1) -> @HAS_SIZE a1 (y1 y3) y2) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y3 : prod a0 a1 => exists y4 : a0, exists y5 : a1, @SETSPEC (prod a0 a1) y3 ((@IN a0 y4 x1) /\ (@IN a1 y5 (y1 y4))) (@pair a0 a1 y4 y5))) (Nat.mul y0 y2)) /\ ((~ (@IN a0 x0 x1)) /\ (@FINITE a0 x1))).
Definition term155 (a0 : Type') (a1 : Type') (x0 : prod a1 a0) (x1 : a1 -> Prop) (x2 : type1470 a0 a1) := fun y0 : a1 => exists y1 : a0, (fun y2 : Prop => fun y3 : prod a1 a0 => y2 /\ (x0 = y3)) ((@IN a1 y0 x1) /\ (@IN a0 y1 (x2 y0))) (@pair a1 a0 y0 y1).
Definition term105 (a0 : Type') (a1 : Type') (x0 : prod a1 a0) (x1 : a1) (x2 : a1 -> Prop) (x3 : type1470 a0 a1) := fun y0 : a1 => exists y1 : a0, (fun y2 : Prop => fun y3 : prod a1 a0 => y2 /\ (x0 = y3)) (((y0 = x1) \/ (@IN a1 y0 x2)) /\ (@IN a0 y1 (x3 y0))) (@pair a1 a0 y0 y1).
Definition term1157 (a0 : Type') (a1 : Type') (x0 : prod a0 a1) (x1 : a0 -> Prop) (x2 : type1413 a0 a1) (x3 : a0) := @IN (prod a0 a1) x0 (@INTER (prod a0 a1) (@GSPEC (prod a0 a1) (fun y0 : prod a0 a1 => exists y1 : a0, exists y2 : a1, @SETSPEC (prod a0 a1) y0 ((@IN a0 y1 x1) /\ (@IN a1 y2 (x2 y1))) (@pair a0 a1 y1 y2))) (@IMAGE a1 (prod a0 a1) (fun y0 : a1 => @pair a0 a1 x3 y0) (x2 x3))).
Definition term515 (x0 : Prop) (x1 : Prop) := fun y0 : Prop => ((y0 \/ x0) -> x1) = ((y0 -> x1) /\ (x0 -> x1)).
Definition term1418 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : a0 -> Prop) := fun y0 : type1413 a0 a1 => (x0 x1 y0) = (fun y1 : prod a0 a1 => exists y2 : a0, exists y3 : a1, @SETSPEC (prod a0 a1) y1 ((@IN a0 y2 x1) /\ (@IN a1 y3 (y0 y2))) (@pair a0 a1 y2 y3)).
Definition term971 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a0 -> Prop) (x2 : type1413 a0 a1) (x3 : nat) := forall y0 : a0, ((y0 = x0) -> @HAS_SIZE a1 (x2 y0) x3) /\ ((@IN a0 y0 x1) -> @HAS_SIZE a1 (x2 y0) x3).
Definition term539 (x0 : Prop) := ~ (False /\ (x0 -> False)).
Definition term1749 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : type619 a0 a1) := exists y0 : type620 a0 a1, (fun y1 : type620 a0 a1 => forall y2 : a0 -> Prop, forall y3 : type1413 a0 a1, forall y4 : prod a0 a1, (~ (x0 y2 y3 y4)) \/ (@SETSPEC (prod a0 a1) y4 ((@IN a0 (x1 y2 y3 y4) y2) /\ (@IN a1 (y1 y2 y3 y4) (y3 (x1 y2 y3 y4)))) (@pair a0 a1 (x1 y2 y3 y4) (y1 y2 y3 y4)))) y0.
Definition term1735 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) := exists y0 : type619 a0 a1, (fun y1 : type619 a0 a1 => exists y2 : type620 a0 a1, forall y3 : a0 -> Prop, forall y4 : type1413 a0 a1, forall y5 : prod a0 a1, (~ (x0 y3 y4 y5)) \/ (@SETSPEC (prod a0 a1) y5 ((@IN a0 (y1 y3 y4 y5) y3) /\ (@IN a1 (y2 y3 y4 y5) (y4 (y1 y3 y4 y5)))) (@pair a0 a1 (y1 y3 y4 y5) (y2 y3 y4 y5)))) y0.
Definition term1361 (a0 : Type') (a1 : Type') (x0 : nat) (x1 : type621 a0 a1) (x2 : a0 -> Prop) (x3 : a0) (x4 : a1) (x5 : prod a0 a1) (x6 : a1) (x7 : type1413 a0 a1) (x8 : a0) := forall y0 : nat, (~ (@IN a0 x8 x2)) -> (@FINITE a0 x2) -> (y0 = (S (@CARD a0 x2))) -> (@HAS_SIZE a1 (x7 x8) x0) -> (forall y1 : a0, (@IN a0 y1 x2) -> @HAS_SIZE a1 (x7 y1) x0) -> (forall y1 : type1413 a0 a1, forall y2 : nat, (forall y3 : a0, (@IN a0 y3 x2) -> @HAS_SIZE a1 (y1 y3) y2) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (x1 x2 y1)) (Nat.mul (@CARD a0 x2) y2)) -> (@IN a0 x3 x2) -> (@IN a1 x4 (x7 x3)) -> (x5 = (@pair a0 a1 x3 x4)) -> (x5 = (@pair a0 a1 x8 x6)) -> (@IN a1 x6 (x7 x8)) -> (forall y1 : a0, forall y2 : a1, forall y3 : a0, forall y4 : a1, ((@pair a0 a1 y1 y2) = (@pair a0 a1 y3 y4)) = ((y1 = y3) /\ (y2 = y4))) -> (forall y1 : a0, forall y2 : nat, forall y3 : a0, forall y4 : nat, ((@pair a0 nat y1 y2) = (@pair a0 nat y3 y4)) = ((y1 = y3) /\ (y2 = y4))) -> (forall y1 : a0, forall y2 : prod a0 a1, forall y3 : a0, forall y4 : prod a0 a1, ((@pair a0 (prod a0 a1) y1 y2) = (@pair a0 (prod a0 a1) y3 y4)) = ((y1 = y3) /\ (y2 = y4))) -> (forall y1 : nat, forall y2 : a1, forall y3 : nat, forall y4 : a1, ((@pair nat a1 y1 y2) = (@pair nat a1 y3 y4)) = ((y1 = y3) /\ (y2 = y4))) -> ~ (forall y1 : prod a0 a1, forall y2 : a1, forall y3 : prod a0 a1, forall y4 : a1, ((@pair (prod a0 a1) a1 y1 y2) = (@pair (prod a0 a1) a1 y3 y4)) = ((y1 = y3) /\ (y2 = y4))).
Definition term1267 (a0 : Type') (a1 : Type') (x0 : nat) (x1 : a0 -> Prop) (x2 : a0) (x3 : a1) (x4 : prod a0 a1) (x5 : a1) (x6 : type1413 a0 a1) (x7 : a0) := forall y0 : nat, (~ (@IN a0 x7 x1)) -> (@FINITE a0 x1) -> (y0 = (S (@CARD a0 x1))) -> (@HAS_SIZE a1 (x6 x7) x0) -> (forall y1 : a0, (@IN a0 y1 x1) -> @HAS_SIZE a1 (x6 y1) x0) -> (forall y1 : type1413 a0 a1, forall y2 : nat, (forall y3 : a0, (@IN a0 y3 x1) -> @HAS_SIZE a1 (y1 y3) y2) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y3 : prod a0 a1 => exists y4 : a0, exists y5 : a1, @SETSPEC (prod a0 a1) y3 ((@IN a0 y4 x1) /\ (@IN a1 y5 (y1 y4))) (@pair a0 a1 y4 y5))) (Nat.mul (@CARD a0 x1) y2)) -> (@IN a0 x2 x1) -> (@IN a1 x3 (x6 x2)) -> (x4 = (@pair a0 a1 x2 x3)) -> (x4 = (@pair a0 a1 x7 x5)) -> (@IN a1 x5 (x6 x7)) -> (forall y1 : a0, forall y2 : a1, forall y3 : a0, forall y4 : a1, ((@pair a0 a1 y1 y2) = (@pair a0 a1 y3 y4)) = ((y1 = y3) /\ (y2 = y4))) -> (forall y1 : a0, forall y2 : nat, forall y3 : a0, forall y4 : nat, ((@pair a0 nat y1 y2) = (@pair a0 nat y3 y4)) = ((y1 = y3) /\ (y2 = y4))) -> (forall y1 : a0, forall y2 : prod a0 a1, forall y3 : a0, forall y4 : prod a0 a1, ((@pair a0 (prod a0 a1) y1 y2) = (@pair a0 (prod a0 a1) y3 y4)) = ((y1 = y3) /\ (y2 = y4))) -> (forall y1 : nat, forall y2 : a1, forall y3 : nat, forall y4 : a1, ((@pair nat a1 y1 y2) = (@pair nat a1 y3 y4)) = ((y1 = y3) /\ (y2 = y4))) -> ~ (forall y1 : prod a0 a1, forall y2 : a1, forall y3 : prod a0 a1, forall y4 : a1, ((@pair (prod a0 a1) a1 y1 y2) = (@pair (prod a0 a1) a1 y3 y4)) = ((y1 = y3) /\ (y2 = y4))).
Definition term1266 (a0 : Type') (a1 : Type') (x0 : nat) (x1 : a0 -> Prop) (x2 : a0) (x3 : a1) (x4 : prod a0 a1) (x5 : a1) (x6 : type1413 a0 a1) (x7 : a0) := forall y0 : nat, (~ (@IN a0 x7 x1)) -> (@FINITE a0 x1) -> (y0 = (S (@CARD a0 x1))) -> (@HAS_SIZE a1 (x6 x7) x0) -> (forall y1 : a0, (@IN a0 y1 x1) -> @HAS_SIZE a1 (x6 y1) x0) -> (forall y1 : type1413 a0 a1, forall y2 : nat, (forall y3 : a0, (@IN a0 y3 x1) -> @HAS_SIZE a1 (y1 y3) y2) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y3 : prod a0 a1 => exists y4 : a0, exists y5 : a1, @SETSPEC (prod a0 a1) y3 ((@IN a0 y4 x1) /\ (@IN a1 y5 (y1 y4))) (@pair a0 a1 y4 y5))) (Nat.mul (@CARD a0 x1) y2)) -> (@IN a0 x2 x1) -> (@IN a1 x3 (x6 x2)) -> (x4 = (@pair a0 a1 x2 x3)) -> (x4 = (@pair a0 a1 x7 x5)) -> (@IN a1 x5 (x6 x7)) -> (forall y1 : a0, forall y2 : a1, forall y3 : a0, forall y4 : a1, ((@pair a0 a1 y1 y2) = (@pair a0 a1 y3 y4)) = ((y1 = y3) /\ (y2 = y4))) -> (forall y1 : a0, forall y2 : nat, forall y3 : a0, forall y4 : nat, ((@pair a0 nat y1 y2) = (@pair a0 nat y3 y4)) = ((y1 = y3) /\ (y2 = y4))) -> (forall y1 : a0, forall y2 : prod a0 a1, forall y3 : a0, forall y4 : prod a0 a1, ((@pair a0 (prod a0 a1) y1 y2) = (@pair a0 (prod a0 a1) y3 y4)) = ((y1 = y3) /\ (y2 = y4))) -> (forall y1 : nat, forall y2 : a1, forall y3 : nat, forall y4 : a1, ((@pair nat a1 y1 y2) = (@pair nat a1 y3 y4)) = ((y1 = y3) /\ (y2 = y4))) -> (forall y1 : prod a0 a1, forall y2 : a1, forall y3 : prod a0 a1, forall y4 : a1, ((@pair (prod a0 a1) a1 y1 y2) = (@pair (prod a0 a1) a1 y3 y4)) = ((y1 = y3) /\ (y2 = y4))) -> False.
Definition term1066 (a0 : Type') (x0 : a0 -> Prop) (x1 : nat) := Nat.add (Nat.mul (@CARD a0 x0) x1) x1.
Definition term205 (a0 : Type') (x0 : a0) (x1 : a0 -> Prop) (x2 : a0) := (~ (x2 = x0)) /\ (~ (x1 x2)).
Definition term2047 (a0 : Type') (x0 : a0) := ~ ((@I (a0 -> (a0 -> Prop) -> Prop) (@IN a0) x0) = (@I (a0 -> (a0 -> Prop) -> Prop) (@IN a0) x0)).
Definition term418 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : prod a1 a0) (x2 : type1470 a0 a1) (x3 : a1) := fun y0 : a1 => exists y1 : a0, (((((y0 = x3) \/ (x0 y0)) /\ (x2 y0 y1)) /\ (x1 = (@pair a1 a0 y0 y1))) /\ ((forall y2 : a1, forall y3 : a0, ((~ (x0 y2)) \/ (~ (x2 y2 y3))) \/ (~ (x1 = (@pair a1 a0 y2 y3)))) /\ (forall y2 : a0, (~ (x1 = (@pair a1 a0 x3 y2))) \/ (~ (x2 x3 y2))))) \/ ((forall y2 : a1, forall y3 : a0, (((~ (y2 = x3)) /\ (~ (x0 y2))) \/ (~ (x2 y2 y3))) \/ (~ (x1 = (@pair a1 a0 y2 y3)))) /\ ((((x0 y0) /\ (x2 y0 y1)) /\ (x1 = (@pair a1 a0 y0 y1))) \/ ((x1 = (@pair a1 a0 x3 y1)) /\ (x2 x3 y1)))).
Definition term1711 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : type619 a0 a1) (x2 : a0 -> Prop) := fun y0 : type465 a0 a1 => (fun y1 : a0 -> Prop => fun y2 : type465 a0 a1 => forall y3 : type1413 a0 a1, forall y4 : prod a0 a1, (~ (x0 y1 y3 y4)) \/ (@SETSPEC (prod a0 a1) y4 ((@IN a0 (x1 y1 y3 y4) y1) /\ (@IN a1 (y2 y3 y4) (y3 (x1 y1 y3 y4)))) (@pair a0 a1 (x1 y1 y3 y4) (y2 y3 y4)))) x2 y0.
Definition term1806 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : type1413 a0 a1) (x2 : a0 -> Prop) := @eq Prop (forall y0 : nat, exists y1 : a0, ((@IN a0 y1 x2) /\ (~ (@HAS_SIZE a1 (x1 y1) y0))) \/ (@HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (x0 x2 x1)) (Nat.mul (@CARD a0 x2) y0))).
Definition term1805 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : type1413 a0 a1) (x2 : a0 -> Prop) := @eq Prop (forall y0 : nat, exists y1 : a0, (fun y2 : nat => fun y3 : a0 => ((@IN a0 y3 x2) /\ (~ (@HAS_SIZE a1 (x1 y3) y2))) \/ (@HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (x0 x2 x1)) (Nat.mul (@CARD a0 x2) y2))) y0 y1).
Definition term829 (a0 : Type') (x0 : a0) (x1 : a0 -> Prop) (x2 : nat) (x3 : nat) := ((@IN a0 x0 x1) = False) -> (False -> (@CARD a0 x1) = x2) -> ((~ False) -> (S (@CARD a0 x1)) = x3) -> (@COND nat (@IN a0 x0 x1) (@CARD a0 x1) (S (@CARD a0 x1))) = (@COND nat False x2 x3).
Definition term495 (a0 : Type') (a1 : Type') (x0 : type1470 a0 a1) (x1 : a1) (x2 : a0) (x3 : a1) (x4 : a0) := (x3 = x1) /\ ((x0 x3 x4) /\ ((@pair a1 a0 x1 x2) = (@pair a1 a0 x3 x4))).
Definition term1221 (a0 : Type') (a1 : Type') (x0 : nat) (x1 : nat) (x2 : a0 -> Prop) (x3 : a0) (x4 : a1) (x5 : prod a0 a1) (x6 : a1) (x7 : type1413 a0 a1) (x8 : a0) := (((~ (@IN a0 x8 x2)) -> (@FINITE a0 x2) -> (x0 = (S (@CARD a0 x2))) -> (@HAS_SIZE a1 (x7 x8) x1) -> (forall y0 : a0, (@IN a0 y0 x2) -> @HAS_SIZE a1 (x7 y0) x1) -> (forall y0 : type1413 a0 a1, forall y1 : nat, (forall y2 : a0, (@IN a0 y2 x2) -> @HAS_SIZE a1 (y0 y2) y1) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y2 : prod a0 a1 => exists y3 : a0, exists y4 : a1, @SETSPEC (prod a0 a1) y2 ((@IN a0 y3 x2) /\ (@IN a1 y4 (y0 y3))) (@pair a0 a1 y3 y4))) (Nat.mul (@CARD a0 x2) y1)) -> (@IN a0 x3 x2) -> (@IN a1 x4 (x7 x3)) -> (x5 = (@pair a0 a1 x3 x4)) -> (x5 = (@pair a0 a1 x8 x6)) -> (@IN a1 x6 (x7 x8)) -> (forall y0 : a0, forall y1 : a1, forall y2 : a0, forall y3 : a1, ((@pair a0 a1 y0 y1) = (@pair a0 a1 y2 y3)) = ((y0 = y2) /\ (y1 = y3))) -> (forall y0 : a0, forall y1 : nat, forall y2 : a0, forall y3 : nat, ((@pair a0 nat y0 y1) = (@pair a0 nat y2 y3)) = ((y0 = y2) /\ (y1 = y3))) -> (forall y0 : a0, forall y1 : prod a0 a1, forall y2 : a0, forall y3 : prod a0 a1, ((@pair a0 (prod a0 a1) y0 y1) = (@pair a0 (prod a0 a1) y2 y3)) = ((y0 = y2) /\ (y1 = y3))) -> (forall y0 : nat, forall y1 : a1, forall y2 : nat, forall y3 : a1, ((@pair nat a1 y0 y1) = (@pair nat a1 y2 y3)) = ((y0 = y2) /\ (y1 = y3))) -> (forall y0 : prod a0 a1, forall y1 : a1, forall y2 : prod a0 a1, forall y3 : a1, ((@pair (prod a0 a1) a1 y0 y1) = (@pair (prod a0 a1) a1 y2 y3)) = ((y0 = y2) /\ (y1 = y3))) -> False) -> (~ (@IN a0 x8 x2)) -> (@FINITE a0 x2) -> (x0 = (S (@CARD a0 x2))) -> (@HAS_SIZE a1 (x7 x8) x1) -> (forall y0 : a0, (@IN a0 y0 x2) -> @HAS_SIZE a1 (x7 y0) x1) -> (forall y0 : type1413 a0 a1, forall y1 : nat, (forall y2 : a0, (@IN a0 y2 x2) -> @HAS_SIZE a1 (y0 y2) y1) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y2 : prod a0 a1 => exists y3 : a0, exists y4 : a1, @SETSPEC (prod a0 a1) y2 ((@IN a0 y3 x2) /\ (@IN a1 y4 (y0 y3))) (@pair a0 a1 y3 y4))) (Nat.mul (@CARD a0 x2) y1)) -> (@IN a0 x3 x2) -> (@IN a1 x4 (x7 x3)) -> (x5 = (@pair a0 a1 x3 x4)) -> (x5 = (@pair a0 a1 x8 x6)) -> (@IN a1 x6 (x7 x8)) -> (forall y0 : a0, forall y1 : a1, forall y2 : a0, forall y3 : a1, ((@pair a0 a1 y0 y1) = (@pair a0 a1 y2 y3)) = ((y0 = y2) /\ (y1 = y3))) -> (forall y0 : a0, forall y1 : nat, forall y2 : a0, forall y3 : nat, ((@pair a0 nat y0 y1) = (@pair a0 nat y2 y3)) = ((y0 = y2) /\ (y1 = y3))) -> (forall y0 : a0, forall y1 : prod a0 a1, forall y2 : a0, forall y3 : prod a0 a1, ((@pair a0 (prod a0 a1) y0 y1) = (@pair a0 (prod a0 a1) y2 y3)) = ((y0 = y2) /\ (y1 = y3))) -> (forall y0 : nat, forall y1 : a1, forall y2 : nat, forall y3 : a1, ((@pair nat a1 y0 y1) = (@pair nat a1 y2 y3)) = ((y0 = y2) /\ (y1 = y3))) -> (forall y0 : prod a0 a1, forall y1 : a1, forall y2 : prod a0 a1, forall y3 : a1, ((@pair (prod a0 a1) a1 y0 y1) = (@pair (prod a0 a1) a1 y2 y3)) = ((y0 = y2) /\ (y1 = y3))) -> False) -> ((~ (@IN a0 x8 x2)) -> (@FINITE a0 x2) -> (x0 = (S (@CARD a0 x2))) -> (@HAS_SIZE a1 (x7 x8) x1) -> (forall y0 : a0, (@IN a0 y0 x2) -> @HAS_SIZE a1 (x7 y0) x1) -> (forall y0 : type1413 a0 a1, forall y1 : nat, (forall y2 : a0, (@IN a0 y2 x2) -> @HAS_SIZE a1 (y0 y2) y1) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y2 : prod a0 a1 => exists y3 : a0, exists y4 : a1, @SETSPEC (prod a0 a1) y2 ((@IN a0 y3 x2) /\ (@IN a1 y4 (y0 y3))) (@pair a0 a1 y3 y4))) (Nat.mul (@CARD a0 x2) y1)) -> (@IN a0 x3 x2) -> (@IN a1 x4 (x7 x3)) -> (x5 = (@pair a0 a1 x3 x4)) -> (x5 = (@pair a0 a1 x8 x6)) -> (@IN a1 x6 (x7 x8)) -> (forall y0 : a0, forall y1 : a1, forall y2 : a0, forall y3 : a1, ((@pair a0 a1 y0 y1) = (@pair a0 a1 y2 y3)) = ((y0 = y2) /\ (y1 = y3))) -> (forall y0 : a0, forall y1 : nat, forall y2 : a0, forall y3 : nat, ((@pair a0 nat y0 y1) = (@pair a0 nat y2 y3)) = ((y0 = y2) /\ (y1 = y3))) -> (forall y0 : a0, forall y1 : prod a0 a1, forall y2 : a0, forall y3 : prod a0 a1, ((@pair a0 (prod a0 a1) y0 y1) = (@pair a0 (prod a0 a1) y2 y3)) = ((y0 = y2) /\ (y1 = y3))) -> (forall y0 : nat, forall y1 : a1, forall y2 : nat, forall y3 : a1, ((@pair nat a1 y0 y1) = (@pair nat a1 y2 y3)) = ((y0 = y2) /\ (y1 = y3))) -> (forall y0 : prod a0 a1, forall y1 : a1, forall y2 : prod a0 a1, forall y3 : a1, ((@pair (prod a0 a1) a1 y0 y1) = (@pair (prod a0 a1) a1 y2 y3)) = ((y0 = y2) /\ (y1 = y3))) -> False) -> (~ (@IN a0 x8 x2)) -> (@FINITE a0 x2) -> (x0 = (S (@CARD a0 x2))) -> (@HAS_SIZE a1 (x7 x8) x1) -> (forall y0 : a0, (@IN a0 y0 x2) -> @HAS_SIZE a1 (x7 y0) x1) -> (forall y0 : type1413 a0 a1, forall y1 : nat, (forall y2 : a0, (@IN a0 y2 x2) -> @HAS_SIZE a1 (y0 y2) y1) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y2 : prod a0 a1 => exists y3 : a0, exists y4 : a1, @SETSPEC (prod a0 a1) y2 ((@IN a0 y3 x2) /\ (@IN a1 y4 (y0 y3))) (@pair a0 a1 y3 y4))) (Nat.mul (@CARD a0 x2) y1)) -> (@IN a0 x3 x2) -> (@IN a1 x4 (x7 x3)) -> (x5 = (@pair a0 a1 x3 x4)) -> (x5 = (@pair a0 a1 x8 x6)) -> (@IN a1 x6 (x7 x8)) -> (forall y0 : a0, forall y1 : a1, forall y2 : a0, forall y3 : a1, ((@pair a0 a1 y0 y1) = (@pair a0 a1 y2 y3)) = ((y0 = y2) /\ (y1 = y3))) -> (forall y0 : a0, forall y1 : nat, forall y2 : a0, forall y3 : nat, ((@pair a0 nat y0 y1) = (@pair a0 nat y2 y3)) = ((y0 = y2) /\ (y1 = y3))) -> (forall y0 : a0, forall y1 : prod a0 a1, forall y2 : a0, forall y3 : prod a0 a1, ((@pair a0 (prod a0 a1) y0 y1) = (@pair a0 (prod a0 a1) y2 y3)) = ((y0 = y2) /\ (y1 = y3))) -> (forall y0 : nat, forall y1 : a1, forall y2 : nat, forall y3 : a1, ((@pair nat a1 y0 y1) = (@pair nat a1 y2 y3)) = ((y0 = y2) /\ (y1 = y3))) -> (forall y0 : prod a0 a1, forall y1 : a1, forall y2 : prod a0 a1, forall y3 : a1, ((@pair (prod a0 a1) a1 y0 y1) = (@pair (prod a0 a1) a1 y2 y3)) = ((y0 = y2) /\ (y1 = y3))) -> False.
Definition term1631 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : a0 -> Prop) (x2 : type1413 a0 a1) := (fun y0 : type1413 a0 a1 => fun y1 : type1207 a0 a1 => exists y2 : type1208 a0 a1, forall y3 : prod a0 a1, (~ (x0 x1 y0 y3)) \/ (@SETSPEC (prod a0 a1) y3 ((@IN a0 (y1 y3) x1) /\ (@IN a1 (y2 y3) (y0 (y1 y3)))) (@pair a0 a1 (y1 y3) (y2 y3)))) x2.
Definition term1792 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : type1413 a0 a1) (x2 : a0 -> Prop) := fun y0 : nat => exists y1 : a0, ((@IN a0 y1 x2) /\ (~ (@HAS_SIZE a1 (x1 y1) y0))) \/ (@HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (x0 x2 x1)) (Nat.mul (@CARD a0 x2) y0)).
Definition term444 (a0 : Type') (a1 : Type') (x0 : type1470 a0 a1) (x1 : a0) (x2 : a1) := (fun y0 : a1 => x0 y0 x1) x2.
Definition term90 (a0 : Type') (a1 : Type') (x0 : a1) (x1 : a1 -> Prop) (x2 : type1470 a0 a1) (x3 : a1) (x4 : a0) (x5 : prod a1 a0) (x6 : prod a1 a0) := (((x3 = x0) \/ (x1 x3)) /\ (x2 x3 x4)) /\ (x5 = x6).
Definition term169 (a0 : Type') (a1 : Type') (x0 : a1) (x1 : a0) := @eq (prod a1 a0) ((fun y0 : a0 => (fun y1 : a0 => @pair a1 a0 x0 y1) y0) x1).
Definition term800 (a0 : Type') (a1 : Type') := and (forall y0 : nat, ((NUMERAL 0) = y0) -> forall y1 : nat, @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y2 : prod a0 a1 => exists y3 : a0, exists y4 : a1, @SETSPEC (prod a0 a1) y2 False (@pair a0 a1 y3 y4))) (Nat.mul y0 y1)).
Definition term695 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) := and (forall y0 : nat, ((@CARD a0 x0) = y0) -> forall y1 : type1413 a0 a1, forall y2 : nat, (forall y3 : a0, (@IN a0 y3 x0) -> @HAS_SIZE a1 (y1 y3) y2) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y3 : prod a0 a1 => exists y4 : a0, exists y5 : a1, @SETSPEC (prod a0 a1) y3 ((@IN a0 y4 x0) /\ (@IN a1 y5 (y1 y4))) (@pair a0 a1 y4 y5))) (Nat.mul y0 y2)).
Definition term692 (a0 : Type') (a1 : Type') := and (forall y0 : nat, ((@CARD a0 (@EMPTY a0)) = y0) -> forall y1 : type1413 a0 a1, forall y2 : nat, (forall y3 : a0, (@IN a0 y3 (@EMPTY a0)) -> @HAS_SIZE a1 (y1 y3) y2) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y3 : prod a0 a1 => exists y4 : a0, exists y5 : a1, @SETSPEC (prod a0 a1) y3 ((@IN a0 y4 (@EMPTY a0)) /\ (@IN a1 y5 (y1 y4))) (@pair a0 a1 y4 y5))) (Nat.mul y0 y2)).
Definition term481 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : type1470 a0 a1) (x2 : a1) (x3 : a0) (x4 : a1) (x5 : a0) := (~ (x0 x4)) \/ (~ ((x1 x4 x5) /\ ((@pair a1 a0 x2 x3) = (@pair a1 a0 x4 x5)))).
Definition term1829 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : a0 -> Prop) := fun y0 : type1413 a0 a1 => exists y1 : nat -> a0, (fun y2 : type1413 a0 a1 => fun y3 : nat -> a0 => forall y4 : nat, ((@IN a0 (y3 y4) x1) /\ (~ (@HAS_SIZE a1 (y2 (y3 y4)) y4))) \/ (@HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (x0 x1 y2)) (Nat.mul (@CARD a0 x1) y4))) y0 y1.
Definition term1661 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : a0 -> Prop) (x2 : type464 a0 a1) := fun y0 : type1413 a0 a1 => exists y1 : type1208 a0 a1, (fun y2 : type1413 a0 a1 => fun y3 : type1208 a0 a1 => forall y4 : prod a0 a1, (~ (x0 x1 y2 y4)) \/ (@SETSPEC (prod a0 a1) y4 ((@IN a0 (x2 y2 y4) x1) /\ (@IN a1 (y3 y4) (y2 (x2 y2 y4)))) (@pair a0 a1 (x2 y2 y4) (y3 y4)))) y0 y1.
Definition term1636 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : a0 -> Prop) := fun y0 : type1413 a0 a1 => exists y1 : type1207 a0 a1, (fun y2 : type1413 a0 a1 => fun y3 : type1207 a0 a1 => exists y4 : type1208 a0 a1, forall y5 : prod a0 a1, (~ (x0 x1 y2 y5)) \/ (@SETSPEC (prod a0 a1) y5 ((@IN a0 (y3 y5) x1) /\ (@IN a1 (y4 y5) (y2 (y3 y5)))) (@pair a0 a1 (y3 y5) (y4 y5)))) y0 y1.
Definition term1315 (a0 : Type') (x0 : nat) (x1 : nat) (x2 : a0) := fun y0 : a0 => ((@pair nat a0 x0 x2) = (@pair nat a0 x1 y0)) = ((x0 = x1) /\ (x2 = y0)).
Definition term78 (a0 : Type') (a1 : Type') (x0 : prod a1 a0) (x1 : a1) (x2 : a1 -> Prop) (x3 : a0) (x4 : type1470 a0 a1) (x5 : a1) := @eq ((prod a1 a0) -> Prop) ((fun y0 : Prop => fun y1 : prod a1 a0 => y0 /\ (x0 = y1)) (((x5 = x1) \/ (@IN a1 x5 x2)) /\ (@IN a0 x3 (x4 x5)))).
Definition term1484 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : a0 -> Prop) (x2 : type1413 a0 a1) := @eq Prop (forall y0 : prod a0 a1, ((fun y1 : prod a0 a1 => (x0 x1 x2 y1) \/ (forall y2 : a0, forall y3 : a1, ~ (@SETSPEC (prod a0 a1) y1 ((@IN a0 y2 x1) /\ (@IN a1 y3 (x2 y2))) (@pair a0 a1 y2 y3)))) y0) /\ ((fun y1 : prod a0 a1 => (~ (x0 x1 x2 y1)) \/ (exists y2 : a0, exists y3 : a1, @SETSPEC (prod a0 a1) y1 ((@IN a0 y2 x1) /\ (@IN a1 y3 (x2 y2))) (@pair a0 a1 y2 y3))) y0)).
Definition term631 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : type1413 a0 a1) (x2 : nat) (x3 : nat) := (fun y0 : nat => (forall y1 : a0, (@IN a0 y1 x0) -> @HAS_SIZE a1 (x1 y1) y0) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y1 : prod a0 a1 => exists y2 : a0, exists y3 : a1, @SETSPEC (prod a0 a1) y1 ((@IN a0 y2 x0) /\ (@IN a1 y3 (x1 y2))) (@pair a0 a1 y2 y3))) (Nat.mul x2 y0)) x3.
Definition term2021 (a0 : Type') := ~ ((@IN a0) = (@IN a0)).
Definition term2020 (a0 : Type') := (~ ((@IN a0) = (@IN a0))) -> (@IN a0) = (@IN a0).
Definition term1400 (a0 : Type') (a1 : Type') (x0 : a1 -> a0) := fun y0 : a1 => x0 y0.
Definition term1581 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : prod a0 a1) (x2 : a0 -> Prop) (x3 : type1413 a0 a1) (x4 : a0) := (fun y0 : a0 => exists y1 : a1, (~ (x0 x2 x3 x1)) \/ (@SETSPEC (prod a0 a1) x1 ((@IN a0 y0 x2) /\ (@IN a1 y1 (x3 y0))) (@pair a0 a1 y0 y1))) x4.
Definition term1879 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a0) (x2 : a1) := (forall y0 : a1, ((@pair a0 a1 x0 x2) = (@pair a0 a1 x1 y0)) \/ ((~ (x0 = x1)) \/ (~ (x2 = y0)))) /\ (forall y0 : a1, (~ ((@pair a0 a1 x0 x2) = (@pair a0 a1 x1 y0))) \/ ((x0 = x1) /\ (x2 = y0))).
Definition term914 (a0 : Type') (a1 : Type') := (fun y0 : nat => forall y1 : nat, @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y2 : prod a0 a1 => exists y3 : a0, exists y4 : a1, @SETSPEC (prod a0 a1) y2 False (@pair a0 a1 y3 y4))) (Nat.mul y0 y1)) (NUMERAL 0).
Definition term1529 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : a0 -> Prop) := (fun y0 : a0 -> Prop => forall y1 : type1413 a0 a1, forall y2 : prod a0 a1, (~ (x0 y0 y1 y2)) \/ (exists y3 : a0, exists y4 : a1, @SETSPEC (prod a0 a1) y2 ((@IN a0 y3 y0) /\ (@IN a1 y4 (y1 y3))) (@pair a0 a1 y3 y4))) x1.
Definition term1527 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : a0 -> Prop) := (fun y0 : a0 -> Prop => forall y1 : type1413 a0 a1, forall y2 : prod a0 a1, (x0 y0 y1 y2) \/ (forall y3 : a0, forall y4 : a1, ~ (@SETSPEC (prod a0 a1) y2 ((@IN a0 y3 y0) /\ (@IN a1 y4 (y1 y3))) (@pair a0 a1 y3 y4)))) x1.
Definition term33 (a0 : Type') (x0 : a0 -> Prop) (x1 : a0 -> Prop) := (fun y0 : a0 -> Prop => forall y1 : nat, forall y2 : nat, ((@HAS_SIZE a0 x0 y1) /\ ((@HAS_SIZE a0 y0 y2) /\ (@DISJOINT a0 x0 y0))) -> @HAS_SIZE a0 (@UNION a0 x0 y0) (Nat.add y1 y2)) x1.
Definition term642 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : nat) := fun y0 : type1413 a0 a1 => (@FINITE a0 x0) -> ((@CARD a0 x0) = x1) -> forall y1 : nat, (forall y2 : a0, (@IN a0 y2 x0) -> @HAS_SIZE a1 (y0 y2) y1) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y2 : prod a0 a1 => exists y3 : a0, exists y4 : a1, @SETSPEC (prod a0 a1) y2 ((@IN a0 y3 x0) /\ (@IN a1 y4 (y0 y3))) (@pair a0 a1 y3 y4))) (Nat.mul x1 y1).
Definition term1173 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : a1) (x2 : type1413 a0 a1) (x3 : a0) := (@IN a0 x3 x0) /\ (@IN a1 x1 (x2 x3)).
Definition term131 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : a0) (x2 : type1470 a0 a1) (x3 : a1) := (@IN a1 x3 x0) /\ (@IN a0 x1 (x2 x3)).
Definition term1096 (a0 : Type') (a1 : Type') (x0 : type1413 a0 a1) (x1 : a0 -> Prop) (x2 : nat) := (fun y0 : nat => (forall y1 : a0, (@IN a0 y1 x1) -> @HAS_SIZE a1 (x0 y1) y0) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y1 : prod a0 a1 => exists y2 : a0, exists y3 : a1, @SETSPEC (prod a0 a1) y1 ((@IN a0 y2 x1) /\ (@IN a1 y3 (x0 y2))) (@pair a0 a1 y2 y3))) (Nat.mul (@CARD a0 x1) y0)) x2.
Definition term590 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : type1413 a0 a1) (x2 : nat) := fun y0 : nat => (((@FINITE a0 x0) /\ ((@CARD a0 x0) = x2)) /\ (forall y1 : a0, (@IN a0 y1 x0) -> @HAS_SIZE a1 (x1 y1) y0)) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y1 : prod a0 a1 => exists y2 : a0, exists y3 : a1, @SETSPEC (prod a0 a1) y1 ((@IN a0 y2 x0) /\ (@IN a1 y3 (x1 y2))) (@pair a0 a1 y2 y3))) (Nat.mul x2 y0).
Definition term1950 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a1) (x2 : a0) (x3 : a1) := ~ ((@pair a0 a1 x0 x1) = (@pair a0 a1 x2 x3)).
Definition term2016 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a1) (x2 : a0) (x3 : a1) := imp (~ (~ ((@I (a1 -> prod a0 a1) (@I (a0 -> a1 -> prod a0 a1) (@pair a0 a1) x0) x1) = (@I (a1 -> prod a0 a1) (@I (a0 -> a1 -> prod a0 a1) (@pair a0 a1) x2) x3)))).
Definition term574 (a0 : Type') (x0 : Prop) (x1 : a0 -> Prop) := x0 -> forall y0 : a0, x1 y0.
Definition term685 (a0 : Type') (a1 : Type') := fun y0 : a0 -> Prop => (@FINITE a0 y0) -> forall y1 : nat, ((@CARD a0 y0) = y1) -> forall y2 : type1413 a0 a1, forall y3 : nat, (forall y4 : a0, (@IN a0 y4 y0) -> @HAS_SIZE a1 (y2 y4) y3) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y4 : prod a0 a1 => exists y5 : a0, exists y6 : a1, @SETSPEC (prod a0 a1) y4 ((@IN a0 y5 y0) /\ (@IN a1 y6 (y2 y5))) (@pair a0 a1 y5 y6))) (Nat.mul y1 y3).
Definition term1831 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : a0 -> Prop) := @eq Prop (forall y0 : type1413 a0 a1, exists y1 : nat -> a0, forall y2 : nat, ((@IN a0 (y1 y2) x1) /\ (~ (@HAS_SIZE a1 (y0 (y1 y2)) y2))) \/ (@HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (x0 x1 y0)) (Nat.mul (@CARD a0 x1) y2))).
Definition term1830 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : a0 -> Prop) := @eq Prop (forall y0 : type1413 a0 a1, exists y1 : nat -> a0, (fun y2 : type1413 a0 a1 => fun y3 : nat -> a0 => forall y4 : nat, ((@IN a0 (y3 y4) x1) /\ (~ (@HAS_SIZE a1 (y2 (y3 y4)) y4))) \/ (@HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (x0 x1 y2)) (Nat.mul (@CARD a0 x1) y4))) y0 y1).
Definition term1715 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : type619 a0 a1) := @eq Prop (forall y0 : a0 -> Prop, exists y1 : type465 a0 a1, forall y2 : type1413 a0 a1, forall y3 : prod a0 a1, (~ (x0 y0 y2 y3)) \/ (@SETSPEC (prod a0 a1) y3 ((@IN a0 (x1 y0 y2 y3) y0) /\ (@IN a1 (y1 y2 y3) (y2 (x1 y0 y2 y3)))) (@pair a0 a1 (x1 y0 y2 y3) (y1 y2 y3)))).
Definition term1714 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : type619 a0 a1) := @eq Prop (forall y0 : a0 -> Prop, exists y1 : type465 a0 a1, (fun y2 : a0 -> Prop => fun y3 : type465 a0 a1 => forall y4 : type1413 a0 a1, forall y5 : prod a0 a1, (~ (x0 y2 y4 y5)) \/ (@SETSPEC (prod a0 a1) y5 ((@IN a0 (x1 y2 y4 y5) y2) /\ (@IN a1 (y3 y4 y5) (y4 (x1 y2 y4 y5)))) (@pair a0 a1 (x1 y2 y4 y5) (y3 y4 y5)))) y0 y1).
Definition term1690 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) := @eq Prop (forall y0 : a0 -> Prop, exists y1 : type464 a0 a1, exists y2 : type465 a0 a1, forall y3 : type1413 a0 a1, forall y4 : prod a0 a1, (~ (x0 y0 y3 y4)) \/ (@SETSPEC (prod a0 a1) y4 ((@IN a0 (y1 y3 y4) y0) /\ (@IN a1 (y2 y3 y4) (y3 (y1 y3 y4)))) (@pair a0 a1 (y1 y3 y4) (y2 y3 y4)))).
Definition term1689 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) := @eq Prop (forall y0 : a0 -> Prop, exists y1 : type464 a0 a1, (fun y2 : a0 -> Prop => fun y3 : type464 a0 a1 => exists y4 : type465 a0 a1, forall y5 : type1413 a0 a1, forall y6 : prod a0 a1, (~ (x0 y2 y5 y6)) \/ (@SETSPEC (prod a0 a1) y6 ((@IN a0 (y3 y5 y6) y2) /\ (@IN a1 (y4 y5 y6) (y5 (y3 y5 y6)))) (@pair a0 a1 (y3 y5 y6) (y4 y5 y6)))) y0 y1).
Definition term1663 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : a0 -> Prop) (x2 : type464 a0 a1) := @eq Prop (forall y0 : type1413 a0 a1, exists y1 : type1208 a0 a1, forall y2 : prod a0 a1, (~ (x0 x1 y0 y2)) \/ (@SETSPEC (prod a0 a1) y2 ((@IN a0 (x2 y0 y2) x1) /\ (@IN a1 (y1 y2) (y0 (x2 y0 y2)))) (@pair a0 a1 (x2 y0 y2) (y1 y2)))).
Definition term1662 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : a0 -> Prop) (x2 : type464 a0 a1) := @eq Prop (forall y0 : type1413 a0 a1, exists y1 : type1208 a0 a1, (fun y2 : type1413 a0 a1 => fun y3 : type1208 a0 a1 => forall y4 : prod a0 a1, (~ (x0 x1 y2 y4)) \/ (@SETSPEC (prod a0 a1) y4 ((@IN a0 (x2 y2 y4) x1) /\ (@IN a1 (y3 y4) (y2 (x2 y2 y4)))) (@pair a0 a1 (x2 y2 y4) (y3 y4)))) y0 y1).
Definition term1638 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : a0 -> Prop) := @eq Prop (forall y0 : type1413 a0 a1, exists y1 : type1207 a0 a1, exists y2 : type1208 a0 a1, forall y3 : prod a0 a1, (~ (x0 x1 y0 y3)) \/ (@SETSPEC (prod a0 a1) y3 ((@IN a0 (y1 y3) x1) /\ (@IN a1 (y2 y3) (y0 (y1 y3)))) (@pair a0 a1 (y1 y3) (y2 y3)))).
Definition term1637 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : a0 -> Prop) := @eq Prop (forall y0 : type1413 a0 a1, exists y1 : type1207 a0 a1, (fun y2 : type1413 a0 a1 => fun y3 : type1207 a0 a1 => exists y4 : type1208 a0 a1, forall y5 : prod a0 a1, (~ (x0 x1 y2 y5)) \/ (@SETSPEC (prod a0 a1) y5 ((@IN a0 (y3 y5) x1) /\ (@IN a1 (y4 y5) (y2 (y3 y5)))) (@pair a0 a1 (y3 y5) (y4 y5)))) y0 y1).
Definition term43 (x0 : Prop) := (fun y0 : Prop => forall y1 : Prop, forall y2 : Prop, (y0 \/ (y1 \/ y2)) = ((y0 \/ y1) \/ y2)) x0.
Definition term475 (a0 : Type') (a1 : Type') (x0 : type1470 a0 a1) (x1 : a1) (x2 : a0) := (((@pair a1 a0 x1 x2) = (@pair a1 a0 x1 x2)) /\ (x0 x1 x2)) -> False.
Definition term219 (a0 : Type') (x0 : a0 -> Prop) := forall y0 : a0, ~ (x0 y0).
Definition term637 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : type1413 a0 a1) (x2 : nat) := fun y0 : nat => (fun y1 : nat => (forall y2 : a0, (@IN a0 y2 x0) -> @HAS_SIZE a1 (x1 y2) y1) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y2 : prod a0 a1 => exists y3 : a0, exists y4 : a1, @SETSPEC (prod a0 a1) y2 ((@IN a0 y3 x0) /\ (@IN a1 y4 (x1 y3))) (@pair a0 a1 y3 y4))) (Nat.mul x2 y1)) y0.
Definition term624 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : type1413 a0 a1) (x2 : nat) := fun y0 : nat => (fun y1 : nat => ((@CARD a0 x0) = x2) -> (forall y2 : a0, (@IN a0 y2 x0) -> @HAS_SIZE a1 (x1 y2) y1) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y2 : prod a0 a1 => exists y3 : a0, exists y4 : a1, @SETSPEC (prod a0 a1) y2 ((@IN a0 y3 x0) /\ (@IN a1 y4 (x1 y3))) (@pair a0 a1 y3 y4))) (Nat.mul x2 y1)) y0.
Definition term1659 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : a0 -> Prop) (x2 : type464 a0 a1) (x3 : type1413 a0 a1) := fun y0 : type1208 a0 a1 => (fun y1 : type1413 a0 a1 => fun y2 : type1208 a0 a1 => forall y3 : prod a0 a1, (~ (x0 x1 y1 y3)) \/ (@SETSPEC (prod a0 a1) y3 ((@IN a0 (x2 y1 y3) x1) /\ (@IN a1 (y2 y3) (y1 (x2 y1 y3)))) (@pair a0 a1 (x2 y1 y3) (y2 y3)))) x3 y0.
Definition term367 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : a1) (x2 : prod a1 a0) (x3 : type1470 a0 a1) (x4 : a1) := (forall y0 : a1, forall y1 : a0, (((~ (y0 = x4)) /\ (~ (x0 y0))) \/ (~ (x3 y0 y1))) \/ (~ (x2 = (@pair a1 a0 y0 y1)))) /\ (exists y0 : a0, (fun y1 : a0 => (((x0 x1) /\ (x3 x1 y1)) /\ (x2 = (@pair a1 a0 x1 y1))) \/ ((x2 = (@pair a1 a0 x4 y1)) /\ (x3 x4 y1))) y0).
Definition term185 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : type1470 a0 a1) (x2 : a1) := ((~ (forall y0 : prod a1 a0, (exists y1 : a1, exists y2 : a0, (((y1 = x2) \/ (x0 y1)) /\ (x1 y1 y2)) /\ (y0 = (@pair a1 a0 y1 y2))) = ((exists y1 : a1, exists y2 : a0, ((x0 y1) /\ (x1 y1 y2)) /\ (y0 = (@pair a1 a0 y1 y2))) \/ (exists y1 : a0, (y0 = (@pair a1 a0 x2 y1)) /\ (x1 x2 y1))))) -> False) -> (~ (forall y0 : prod a1 a0, (exists y1 : a1, exists y2 : a0, (((y1 = x2) \/ (x0 y1)) /\ (x1 y1 y2)) /\ (y0 = (@pair a1 a0 y1 y2))) = ((exists y1 : a1, exists y2 : a0, ((x0 y1) /\ (x1 y1 y2)) /\ (y0 = (@pair a1 a0 y1 y2))) \/ (exists y1 : a0, (y0 = (@pair a1 a0 x2 y1)) /\ (x1 x2 y1))))) -> False.
Definition term101 (a0 : Type') (a1 : Type') (x0 : prod a1 a0) (x1 : a1) (x2 : a1 -> Prop) (x3 : type1470 a0 a1) (x4 : a1) := fun y0 : a0 => (fun y1 : Prop => fun y2 : prod a1 a0 => y1 /\ (x0 = y2)) (((x4 = x1) \/ (@IN a1 x4 x2)) /\ (@IN a0 y0 (x3 x4))) (@pair a1 a0 x4 y0).
Definition term1995 (a0 : Type') (x0 : type686 a0) (x1 : a0 -> Prop) (x2 : type686 a0) (x3 : a0 -> Prop) := ((@I ((a0 -> Prop) -> Prop) x2 x3) = (@I ((a0 -> Prop) -> Prop) x0 x1)) -> (@I ((a0 -> Prop) -> Prop) x0 x1) \/ (~ (@I ((a0 -> Prop) -> Prop) x2 x3)).
Definition term40 (a0 : Type') (x0 : a0 -> Prop) (x1 : a0 -> Prop) (x2 : nat) (x3 : nat) := @HAS_SIZE a0 (@UNION a0 x0 x1) (Nat.add x2 x3).
Definition term1455 (a0 : Type') (a1 : Type') (x0 : prod a0 a1) (x1 : a0 -> Prop) (x2 : type1413 a0 a1) := fun y0 : a0 => ~ ((fun y1 : a0 => exists y2 : a1, @SETSPEC (prod a0 a1) x0 ((@IN a0 y1 x1) /\ (@IN a1 y2 (x2 y1))) (@pair a0 a1 y1 y2)) y0).
Definition term1187 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : type1413 a0 a1) (x2 : prod a0 a1) (x3 : a0) := fun y0 : a1 => ((@IN a0 x3 x0) /\ (@IN a1 y0 (x1 x3))) /\ (x2 = (@pair a0 a1 x3 y0)).
Definition term839 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a0 -> Prop) (x2 : nat) (x3 : Prop) := (((@CARD a0 (@INSERT a0 x0 x1)) = x2) = ((S (@CARD a0 x1)) = x2)) -> (((S (@CARD a0 x1)) = x2) -> (forall y0 : type1413 a0 a1, forall y1 : nat, (forall y2 : a0, (@IN a0 y2 (@INSERT a0 x0 x1)) -> @HAS_SIZE a1 (y0 y2) y1) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y2 : prod a0 a1 => exists y3 : a0, exists y4 : a1, @SETSPEC (prod a0 a1) y2 ((@IN a0 y3 (@INSERT a0 x0 x1)) /\ (@IN a1 y4 (y0 y3))) (@pair a0 a1 y3 y4))) (Nat.mul x2 y1)) = x3) -> (((@CARD a0 (@INSERT a0 x0 x1)) = x2) -> forall y0 : type1413 a0 a1, forall y1 : nat, (forall y2 : a0, (@IN a0 y2 (@INSERT a0 x0 x1)) -> @HAS_SIZE a1 (y0 y2) y1) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y2 : prod a0 a1 => exists y3 : a0, exists y4 : a1, @SETSPEC (prod a0 a1) y2 ((@IN a0 y3 (@INSERT a0 x0 x1)) /\ (@IN a1 y4 (y0 y3))) (@pair a0 a1 y3 y4))) (Nat.mul x2 y1)) = (((S (@CARD a0 x1)) = x2) -> x3).
Definition term100 (a0 : Type') (a1 : Type') (x0 : a1) (x1 : a1 -> Prop) (x2 : type1470 a0 a1) (x3 : prod a1 a0) (x4 : a1) (x5 : a0) := (((x4 = x0) \/ (x1 x4)) /\ (x2 x4 x5)) /\ (x3 = (@pair a1 a0 x4 x5)).
Definition term1824 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : a0 -> Prop) (x2 : type1413 a0 a1) := (fun y0 : type1413 a0 a1 => fun y1 : nat -> a0 => forall y2 : nat, ((@IN a0 (y1 y2) x1) /\ (~ (@HAS_SIZE a1 (y0 (y1 y2)) y2))) \/ (@HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (x0 x1 y0)) (Nat.mul (@CARD a0 x1) y2))) x2.
Definition term1706 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : type619 a0 a1) (x2 : a0 -> Prop) := (fun y0 : a0 -> Prop => fun y1 : type465 a0 a1 => forall y2 : type1413 a0 a1, forall y3 : prod a0 a1, (~ (x0 y0 y2 y3)) \/ (@SETSPEC (prod a0 a1) y3 ((@IN a0 (x1 y0 y2 y3) y0) /\ (@IN a1 (y1 y2 y3) (y2 (x1 y0 y2 y3)))) (@pair a0 a1 (x1 y0 y2 y3) (y1 y2 y3)))) x2.
Definition term1406 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) := @eq Prop (x0 = (fun y0 : a0 -> Prop => (fun y1 : a0 -> Prop => fun y2 : type1413 a0 a1 => fun y3 : prod a0 a1 => exists y4 : a0, exists y5 : a1, @SETSPEC (prod a0 a1) y3 ((@IN a0 y4 y1) /\ (@IN a1 y5 (y2 y4))) (@pair a0 a1 y4 y5)) y0)).
Definition term577 (a0 : Type') (x0 : a0 -> Prop) (x1 : nat) := (fun y0 : nat => (@HAS_SIZE a0 x0 y0) = ((@FINITE a0 x0) /\ ((@CARD a0 x0) = y0))) x1.
Definition term716 (a0 : Type') (a1 : Type') := imp ((forall y0 : nat, ((@CARD a0 (@EMPTY a0)) = y0) -> forall y1 : type1413 a0 a1, forall y2 : nat, (forall y3 : a0, (@IN a0 y3 (@EMPTY a0)) -> @HAS_SIZE a1 (y1 y3) y2) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y3 : prod a0 a1 => exists y4 : a0, exists y5 : a1, @SETSPEC (prod a0 a1) y3 ((@IN a0 y4 (@EMPTY a0)) /\ (@IN a1 y5 (y1 y4))) (@pair a0 a1 y4 y5))) (Nat.mul y0 y2)) /\ (forall y0 : a0, forall y1 : a0 -> Prop, ((forall y2 : nat, ((@CARD a0 y1) = y2) -> forall y3 : type1413 a0 a1, forall y4 : nat, (forall y5 : a0, (@IN a0 y5 y1) -> @HAS_SIZE a1 (y3 y5) y4) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y5 : prod a0 a1 => exists y6 : a0, exists y7 : a1, @SETSPEC (prod a0 a1) y5 ((@IN a0 y6 y1) /\ (@IN a1 y7 (y3 y6))) (@pair a0 a1 y6 y7))) (Nat.mul y2 y4)) /\ ((~ (@IN a0 y0 y1)) /\ (@FINITE a0 y1))) -> forall y2 : nat, ((@CARD a0 (@INSERT a0 y0 y1)) = y2) -> forall y3 : type1413 a0 a1, forall y4 : nat, (forall y5 : a0, (@IN a0 y5 (@INSERT a0 y0 y1)) -> @HAS_SIZE a1 (y3 y5) y4) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y5 : prod a0 a1 => exists y6 : a0, exists y7 : a1, @SETSPEC (prod a0 a1) y5 ((@IN a0 y6 (@INSERT a0 y0 y1)) /\ (@IN a1 y7 (y3 y6))) (@pair a0 a1 y6 y7))) (Nat.mul y2 y4))).
Definition term2095 (a0 : Type') (x0 : a0) (x1 : a0) (x2 : a0 -> Prop) := (x2 = x2) /\ (((@I (a0 -> (a0 -> Prop) -> Prop) (@IN a0) x1) = (@I (a0 -> (a0 -> Prop) -> Prop) (@IN a0) x0)) /\ (@I ((a0 -> Prop) -> Prop) (@I (a0 -> (a0 -> Prop) -> Prop) (@IN a0) x1) x2)).
Definition term1022 (a0 : Type') (a1 : Type') (x0 : type1413 a0 a1) (x1 : a0) (x2 : nat) := fun y0 : a0 => ((fun y1 : a0 => y1 = x1) y0) -> @HAS_SIZE a1 (x0 x1) x2.
Definition term1327 (a0 : Type') (a1 : Type') (x0 : a0) := fun y0 : prod a0 a1 => forall y1 : a0, forall y2 : prod a0 a1, ((@pair a0 (prod a0 a1) x0 y0) = (@pair a0 (prod a0 a1) y1 y2)) = ((x0 = y1) /\ (y0 = y2)).
Definition term976 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a0 -> Prop) (x2 : type1413 a0 a1) (x3 : nat) (x4 : nat) (x5 : Prop) := (fun y0 : Prop => forall y1 : Prop, ((forall y2 : a0, ((y2 = x0) -> @HAS_SIZE a1 (x2 y2) x4) /\ ((@IN a0 y2 x1) -> @HAS_SIZE a1 (x2 y2) x4)) = y0) -> (y0 -> (@HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y2 : prod a0 a1 => exists y3 : a0, exists y4 : a1, @SETSPEC (prod a0 a1) y2 (((y3 = x0) \/ (@IN a0 y3 x1)) /\ (@IN a1 y4 (x2 y3))) (@pair a0 a1 y3 y4))) (Nat.mul x3 x4)) = y1) -> ((forall y2 : a0, ((y2 = x0) -> @HAS_SIZE a1 (x2 y2) x4) /\ ((@IN a0 y2 x1) -> @HAS_SIZE a1 (x2 y2) x4)) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y2 : prod a0 a1 => exists y3 : a0, exists y4 : a1, @SETSPEC (prod a0 a1) y2 (((y3 = x0) \/ (@IN a0 y3 x1)) /\ (@IN a1 y4 (x2 y3))) (@pair a0 a1 y3 y4))) (Nat.mul x3 x4)) = (y0 -> y1)) x5.
Definition term849 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a0 -> Prop) (x2 : type1413 a0 a1) (x3 : a0) (x4 : nat) (x5 : Prop) := (fun y0 : Prop => forall y1 : Prop, ((@IN a0 x3 (@INSERT a0 x0 x1)) = y0) -> (y0 -> (@HAS_SIZE a1 (x2 x3) x4) = y1) -> ((@IN a0 x3 (@INSERT a0 x0 x1)) -> @HAS_SIZE a1 (x2 x3) x4) = (y0 -> y1)) x5.
Definition term844 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a0 -> Prop) (x2 : type1413 a0 a1) (x3 : nat) (x4 : nat) (x5 : Prop) := (fun y0 : Prop => forall y1 : Prop, ((forall y2 : a0, (@IN a0 y2 (@INSERT a0 x0 x1)) -> @HAS_SIZE a1 (x2 y2) x4) = y0) -> (y0 -> (@HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y2 : prod a0 a1 => exists y3 : a0, exists y4 : a1, @SETSPEC (prod a0 a1) y2 ((@IN a0 y3 (@INSERT a0 x0 x1)) /\ (@IN a1 y4 (x2 y3))) (@pair a0 a1 y3 y4))) (Nat.mul x3 x4)) = y1) -> ((forall y2 : a0, (@IN a0 y2 (@INSERT a0 x0 x1)) -> @HAS_SIZE a1 (x2 y2) x4) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y2 : prod a0 a1 => exists y3 : a0, exists y4 : a1, @SETSPEC (prod a0 a1) y2 ((@IN a0 y3 (@INSERT a0 x0 x1)) /\ (@IN a1 y4 (x2 y3))) (@pair a0 a1 y3 y4))) (Nat.mul x3 x4)) = (y0 -> y1)) x5.
Definition term1012 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : type1413 a0 a1) (x2 : a0) (x3 : nat) := (x0 = x2) -> @HAS_SIZE a1 (x1 x2) x3.
Definition term983 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : type1413 a0 a1) (x2 : nat) := fun y0 : a0 => (@IN a0 y0 x0) -> @HAS_SIZE a1 (x1 y0) x2.
Definition term1540 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) := forall y0 : a0 -> Prop, (fun y1 : a0 -> Prop => forall y2 : type1413 a0 a1, forall y3 : prod a0 a1, (~ (x0 y1 y2 y3)) \/ (exists y4 : a0, exists y5 : a1, @SETSPEC (prod a0 a1) y3 ((@IN a0 y4 y1) /\ (@IN a1 y5 (y2 y4))) (@pair a0 a1 y4 y5))) y0.
Definition term1535 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) := forall y0 : a0 -> Prop, (fun y1 : a0 -> Prop => forall y2 : type1413 a0 a1, forall y3 : prod a0 a1, (x0 y1 y2 y3) \/ (forall y4 : a0, forall y5 : a1, ~ (@SETSPEC (prod a0 a1) y3 ((@IN a0 y4 y1) /\ (@IN a1 y5 (y2 y4))) (@pair a0 a1 y4 y5)))) y0.
Definition term1516 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : a0 -> Prop) := forall y0 : type1413 a0 a1, (fun y1 : type1413 a0 a1 => forall y2 : prod a0 a1, (~ (x0 x1 y1 y2)) \/ (exists y3 : a0, exists y4 : a1, @SETSPEC (prod a0 a1) y2 ((@IN a0 y3 x1) /\ (@IN a1 y4 (y1 y3))) (@pair a0 a1 y3 y4))) y0.
Definition term1511 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : a0 -> Prop) := forall y0 : type1413 a0 a1, (fun y1 : type1413 a0 a1 => forall y2 : prod a0 a1, (x0 x1 y1 y2) \/ (forall y3 : a0, forall y4 : a1, ~ (@SETSPEC (prod a0 a1) y2 ((@IN a0 y3 x1) /\ (@IN a1 y4 (y1 y3))) (@pair a0 a1 y3 y4)))) y0.
Definition term667 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : nat) := forall y0 : type1413 a0 a1, (fun y1 : type1413 a0 a1 => forall y2 : nat, (forall y3 : a0, (@IN a0 y3 x0) -> @HAS_SIZE a1 (y1 y3) y2) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y3 : prod a0 a1 => exists y4 : a0, exists y5 : a1, @SETSPEC (prod a0 a1) y3 ((@IN a0 y4 x0) /\ (@IN a1 y5 (y1 y4))) (@pair a0 a1 y4 y5))) (Nat.mul x1 y2)) y0.
Definition term1538 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) := and (forall y0 : a0 -> Prop, forall y1 : type1413 a0 a1, forall y2 : prod a0 a1, (x0 y0 y1 y2) \/ (forall y3 : a0, forall y4 : a1, ~ (@SETSPEC (prod a0 a1) y2 ((@IN a0 y3 y0) /\ (@IN a1 y4 (y1 y3))) (@pair a0 a1 y3 y4)))).
Definition term1514 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : a0 -> Prop) := and (forall y0 : type1413 a0 a1, forall y1 : prod a0 a1, (x0 x1 y0 y1) \/ (forall y2 : a0, forall y3 : a1, ~ (@SETSPEC (prod a0 a1) y1 ((@IN a0 y2 x1) /\ (@IN a1 y3 (y0 y2))) (@pair a0 a1 y2 y3)))).
Definition term195 (a0 : Type') (a1 : Type') (x0 : a1) := fun y0 : type1470 a0 a1 => forall y1 : a1 -> Prop, forall y2 : prod a1 a0, (exists y3 : a1, exists y4 : a0, (((y3 = x0) \/ (y1 y3)) /\ (y0 y3 y4)) /\ (y2 = (@pair a1 a0 y3 y4))) = ((exists y3 : a1, exists y4 : a0, ((y1 y3) /\ (y0 y3 y4)) /\ (y2 = (@pair a1 a0 y3 y4))) \/ (exists y3 : a0, (y2 = (@pair a1 a0 x0 y3)) /\ (y0 x0 y3))).
Definition term1544 (a0 : Type') (x0 : Prop) (x1 : a0 -> Prop) := exists y0 : a0, x0 \/ (x1 y0).
Definition term2041 (a0 : Type') (x0 : type1364 a0) (x1 : a0) (x2 : type1364 a0) (x3 : a0) := ((x1 = x3) /\ (x0 = x2)) -> (@I (a0 -> (a0 -> Prop) -> Prop) x0 x1) = (@I (a0 -> (a0 -> Prop) -> Prop) x2 x3).
Definition term1909 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a1) := and ((fun y0 : a1 => forall y1 : a0, forall y2 : a1, ((@pair a0 a1 x0 y0) = (@pair a0 a1 y1 y2)) \/ ((~ (x0 = y1)) \/ (~ (y0 = y2)))) x1).
Definition term1963 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a1) (x2 : a0) (x3 : a1) := or ((@I (a1 -> prod a0 a1) (@I (a0 -> a1 -> prod a0 a1) (@pair a0 a1) x0) x1) = (@I (a1 -> prod a0 a1) (@I (a0 -> a1 -> prod a0 a1) (@pair a0 a1) x2) x3)).
Definition term68 (a0 : Type') (a1 : Type') (x0 : a0 -> a1) (x1 : a0) := (fun y0 : a0 => x0 y0) x1.
Definition term825 (a0 : Type') (x0 : a0) (x1 : a0 -> Prop) (x2 : Prop) (x3 : nat) := (fun y0 : nat => forall y1 : nat, ((@IN a0 x0 x1) = x2) -> (x2 -> (@CARD a0 x1) = y0) -> ((~ x2) -> (S (@CARD a0 x1)) = y1) -> (@COND nat (@IN a0 x0 x1) (@CARD a0 x1) (S (@CARD a0 x1))) = (@COND nat x2 y0 y1)) x3.
Definition term1408 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) := fun y0 : a0 -> Prop => (x0 y0) = ((fun y1 : a0 -> Prop => fun y2 : type1413 a0 a1 => fun y3 : prod a0 a1 => exists y4 : a0, exists y5 : a1, @SETSPEC (prod a0 a1) y3 ((@IN a0 y4 y1) /\ (@IN a1 y5 (y2 y4))) (@pair a0 a1 y4 y5)) y0).
Definition term1605 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : a0 -> Prop) (x2 : type1413 a0 a1) (x3 : type1207 a0 a1) (x4 : prod a0 a1) (x5 : a1) := (fun y0 : a1 => (~ (x0 x1 x2 x4)) \/ (@SETSPEC (prod a0 a1) x4 ((@IN a0 (x3 x4) x1) /\ (@IN a1 y0 (x2 (x3 x4)))) (@pair a0 a1 (x3 x4) y0))) x5.
Definition term558 (a0 : Type') (x0 : a0) := forall y0 : a0 -> Prop, (@FINITE a0 y0) -> (@CARD a0 (@INSERT a0 x0 y0)) = (@COND nat (@IN a0 x0 y0) (@CARD a0 y0) (S (@CARD a0 y0))).
Definition term809 (a0 : Type') (x0 : a0) (x1 : a0 -> Prop) := (~ (@IN a0 x0 x1)) -> (@IN a0 x0 x1) = False.
Definition term1871 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a0) (x2 : a1) := fun y0 : a1 => (fun y1 : a1 => ((@pair a0 a1 x0 x2) = (@pair a0 a1 x1 y1)) \/ ((~ (x0 = x1)) \/ (~ (x2 = y1)))) y0.
Definition term448 (a0 : Type') (a1 : Type') (x0 : type1470 a0 a1) (x1 : a1) (x2 : a0) (x3 : prod a1 a0) := (fun y0 : prod a1 a0 => (~ (y0 = (@pair a1 a0 x1 x2))) \/ (~ (x0 x1 x2))) x3.
Definition term1028 (a0 : Type') (x0 : a0) := imp (exists y0 : a0, y0 = x0).
Definition term611 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : type1413 a0 a1) (x2 : nat) := forall y0 : nat, (@FINITE a0 x0) -> ((@CARD a0 x0) = x2) -> (forall y1 : a0, (@IN a0 y1 x0) -> @HAS_SIZE a1 (x1 y1) y0) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y1 : prod a0 a1 => exists y2 : a0, exists y3 : a1, @SETSPEC (prod a0 a1) y1 ((@IN a0 y2 x0) /\ (@IN a1 y3 (x1 y2))) (@pair a0 a1 y2 y3))) (Nat.mul x2 y0).
Definition term1026 (a0 : Type') (x0 : a0) := exists y0 : a0, (fun y1 : a0 => y1 = x0) y0.
Definition term393 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : prod a1 a0) (x2 : type1470 a0 a1) (x3 : a1) (x4 : a1) := or ((fun y0 : a1 => exists y1 : a0, ((((y0 = x3) \/ (x0 y0)) /\ (x2 y0 y1)) /\ (x1 = (@pair a1 a0 y0 y1))) /\ ((forall y2 : a1, forall y3 : a0, ((~ (x0 y2)) \/ (~ (x2 y2 y3))) \/ (~ (x1 = (@pair a1 a0 y2 y3)))) /\ (forall y2 : a0, (~ (x1 = (@pair a1 a0 x3 y2))) \/ (~ (x2 x3 y2))))) x4).
Definition term465 (a0 : Type') (a1 : Type') (x0 : a1) (x1 : a0) := (~ ((@pair a1 a0 x0 x1) = (@pair a1 a0 x0 x1))) -> (@pair a1 a0 x0 x1) = (@pair a1 a0 x0 x1).
Definition term413 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : a1) (x2 : prod a1 a0) (x3 : type1470 a0 a1) (x4 : a1) (x5 : a0) := ((fun y0 : a0 => ((((x1 = x4) \/ (x0 x1)) /\ (x3 x1 y0)) /\ (x2 = (@pair a1 a0 x1 y0))) /\ ((forall y1 : a1, forall y2 : a0, ((~ (x0 y1)) \/ (~ (x3 y1 y2))) \/ (~ (x2 = (@pair a1 a0 y1 y2)))) /\ (forall y1 : a0, (~ (x2 = (@pair a1 a0 x4 y1))) \/ (~ (x3 x4 y1))))) x5) \/ ((fun y0 : a0 => (forall y1 : a1, forall y2 : a0, (((~ (y1 = x4)) /\ (~ (x0 y1))) \/ (~ (x3 y1 y2))) \/ (~ (x2 = (@pair a1 a0 y1 y2)))) /\ ((((x0 x1) /\ (x3 x1 y0)) /\ (x2 = (@pair a1 a0 x1 y0))) \/ ((x2 = (@pair a1 a0 x4 y0)) /\ (x3 x4 y0)))) x5).
Definition term2030 (x0 : Prop) (x1 : Prop) := ~ (x0 \/ x1).
Definition term1762 (a0 : Type') (x0 : a0 -> Prop) := exists y0 : a0, ~ (x0 y0).
Definition term650 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : nat) (x2 : type1413 a0 a1) := (@FINITE a0 x0) -> (fun y0 : type1413 a0 a1 => ((@CARD a0 x0) = x1) -> forall y1 : nat, (forall y2 : a0, (@IN a0 y2 x0) -> @HAS_SIZE a1 (y0 y2) y1) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y2 : prod a0 a1 => exists y3 : a0, exists y4 : a1, @SETSPEC (prod a0 a1) y2 ((@IN a0 y3 x0) /\ (@IN a1 y4 (y0 y3))) (@pair a0 a1 y3 y4))) (Nat.mul x1 y1)) x2.
Definition term1441 (a0 : Type') (a1 : Type') (x0 : prod a0 a1) (x1 : a0 -> Prop) (x2 : type1413 a0 a1) (x3 : a0) := exists y0 : a1, @SETSPEC (prod a0 a1) x0 ((@IN a0 x3 x1) /\ (@IN a1 y0 (x2 x3))) (@pair a0 a1 x3 y0).
Definition term874 (a0 : Type') (a1 : Type') (x0 : prod a0 a1) (x1 : a0) (x2 : a0 -> Prop) (x3 : type1413 a0 a1) (x4 : a0) := exists y0 : a1, @SETSPEC (prod a0 a1) x0 (((x4 = x1) \/ (@IN a0 x4 x2)) /\ (@IN a1 y0 (x3 x4))) (@pair a0 a1 x4 y0).
Definition term873 (a0 : Type') (a1 : Type') (x0 : prod a0 a1) (x1 : a0) (x2 : a0 -> Prop) (x3 : type1413 a0 a1) (x4 : a0) := exists y0 : a1, @SETSPEC (prod a0 a1) x0 ((@IN a0 x4 (@INSERT a0 x1 x2)) /\ (@IN a1 y0 (x3 x4))) (@pair a0 a1 x4 y0).
Definition term768 (a0 : Type') (a1 : Type') (x0 : prod a0 a1) (x1 : type1413 a0 a1) (x2 : a0) := exists y0 : a1, @SETSPEC (prod a0 a1) x0 ((@IN a0 x2 (@EMPTY a0)) /\ (@IN a1 y0 (x1 x2))) (@pair a0 a1 x2 y0).
Definition term2002 (a0 : Type') (x0 : type1364 a0) (x1 : a0) (x2 : type1364 a0) (x3 : a0) := (x0 = x2) -> (@I (a0 -> (a0 -> Prop) -> Prop) x0 x1) = (@I (a0 -> (a0 -> Prop) -> Prop) x2 x3).
Definition term199 (a0 : Type') (a1 : Type') := fun y0 : a1 => forall y1 : type1470 a0 a1, forall y2 : a1 -> Prop, forall y3 : prod a1 a0, (exists y4 : a1, exists y5 : a0, (((y4 = y0) \/ (y2 y4)) /\ (y1 y4 y5)) /\ (y3 = (@pair a1 a0 y4 y5))) = ((exists y4 : a1, exists y5 : a0, ((y2 y4) /\ (y1 y4 y5)) /\ (y3 = (@pair a1 a0 y4 y5))) \/ (exists y4 : a0, (y3 = (@pair a1 a0 y0 y4)) /\ (y1 y0 y4))).
Definition term198 (a0 : Type') (a1 : Type') := fun y0 : a1 => forall y1 : type1470 a0 a1, forall y2 : a1 -> Prop, (~ (forall y3 : prod a1 a0, (exists y4 : a1, exists y5 : a0, (((y4 = y0) \/ (y2 y4)) /\ (y1 y4 y5)) /\ (y3 = (@pair a1 a0 y4 y5))) = ((exists y4 : a1, exists y5 : a0, ((y2 y4) /\ (y1 y4 y5)) /\ (y3 = (@pair a1 a0 y4 y5))) \/ (exists y4 : a0, (y3 = (@pair a1 a0 y0 y4)) /\ (y1 y0 y4))))) -> False.
Definition term499 (a0 : Type') (a1 : Type') (x0 : a1) (x1 : type1470 a0 a1) := (fun y0 : type1470 a0 a1 => forall y1 : a1 -> Prop, (~ (forall y2 : prod a1 a0, (exists y3 : a1, exists y4 : a0, (((y3 = x0) \/ (y1 y3)) /\ (y0 y3 y4)) /\ (y2 = (@pair a1 a0 y3 y4))) = ((exists y3 : a1, exists y4 : a0, ((y1 y3) /\ (y0 y3 y4)) /\ (y2 = (@pair a1 a0 y3 y4))) \/ (exists y3 : a0, (y2 = (@pair a1 a0 x0 y3)) /\ (y0 x0 y3))))) -> False) x1.
Definition term1150 (a0 : Type') (a1 : Type') (x0 : nat) (x1 : a0 -> Prop) (x2 : type1413 a0 a1) (x3 : a0) := (@HAS_SIZE (prod a0 a1) (@IMAGE a1 (prod a0 a1) (fun y0 : a1 => @pair a0 a1 x3 y0) (x2 x3)) x0) /\ (@DISJOINT (prod a0 a1) (@GSPEC (prod a0 a1) (fun y0 : prod a0 a1 => exists y1 : a0, exists y2 : a1, @SETSPEC (prod a0 a1) y0 ((@IN a0 y1 x1) /\ (@IN a1 y2 (x2 y1))) (@pair a0 a1 y1 y2))) (@IMAGE a1 (prod a0 a1) (fun y0 : a1 => @pair a0 a1 x3 y0) (x2 x3))).
Definition term1363 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : a0 -> Prop) (x2 : a0) (x3 : a1) (x4 : prod a0 a1) (x5 : a1) (x6 : type1413 a0 a1) (x7 : a0) := forall y0 : nat, forall y1 : nat, (~ (@IN a0 x7 x1)) -> (@FINITE a0 x1) -> (y1 = (S (@CARD a0 x1))) -> (@HAS_SIZE a1 (x6 x7) y0) -> (forall y2 : a0, (@IN a0 y2 x1) -> @HAS_SIZE a1 (x6 y2) y0) -> (forall y2 : type1413 a0 a1, forall y3 : nat, (forall y4 : a0, (@IN a0 y4 x1) -> @HAS_SIZE a1 (y2 y4) y3) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (x0 x1 y2)) (Nat.mul (@CARD a0 x1) y3)) -> (@IN a0 x2 x1) -> (@IN a1 x3 (x6 x2)) -> (x4 = (@pair a0 a1 x2 x3)) -> (x4 = (@pair a0 a1 x7 x5)) -> (@IN a1 x5 (x6 x7)) -> (forall y2 : a0, forall y3 : a1, forall y4 : a0, forall y5 : a1, ((@pair a0 a1 y2 y3) = (@pair a0 a1 y4 y5)) = ((y2 = y4) /\ (y3 = y5))) -> (forall y2 : a0, forall y3 : nat, forall y4 : a0, forall y5 : nat, ((@pair a0 nat y2 y3) = (@pair a0 nat y4 y5)) = ((y2 = y4) /\ (y3 = y5))) -> (forall y2 : a0, forall y3 : prod a0 a1, forall y4 : a0, forall y5 : prod a0 a1, ((@pair a0 (prod a0 a1) y2 y3) = (@pair a0 (prod a0 a1) y4 y5)) = ((y2 = y4) /\ (y3 = y5))) -> (forall y2 : nat, forall y3 : a1, forall y4 : nat, forall y5 : a1, ((@pair nat a1 y2 y3) = (@pair nat a1 y4 y5)) = ((y2 = y4) /\ (y3 = y5))) -> ~ (forall y2 : prod a0 a1, forall y3 : a1, forall y4 : prod a0 a1, forall y5 : a1, ((@pair (prod a0 a1) a1 y2 y3) = (@pair (prod a0 a1) a1 y4 y5)) = ((y2 = y4) /\ (y3 = y5))).
Definition term1336 (a0 : Type') (x0 : a0) := forall y0 : nat, forall y1 : a0, forall y2 : nat, ((@pair a0 nat x0 y0) = (@pair a0 nat y1 y2)) = ((x0 = y1) /\ (y0 = y2)).
Definition term1318 (a0 : Type') (x0 : nat) (x1 : a0) := forall y0 : nat, forall y1 : a0, ((@pair nat a0 x0 x1) = (@pair nat a0 y0 y1)) = ((x0 = y0) /\ (x1 = y1)).
Definition term1271 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : a0) (x2 : a1) (x3 : prod a0 a1) (x4 : a1) (x5 : type1413 a0 a1) (x6 : a0) := forall y0 : nat, forall y1 : nat, (~ (@IN a0 x6 x0)) -> (@FINITE a0 x0) -> (y1 = (S (@CARD a0 x0))) -> (@HAS_SIZE a1 (x5 x6) y0) -> (forall y2 : a0, (@IN a0 y2 x0) -> @HAS_SIZE a1 (x5 y2) y0) -> (forall y2 : type1413 a0 a1, forall y3 : nat, (forall y4 : a0, (@IN a0 y4 x0) -> @HAS_SIZE a1 (y2 y4) y3) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y4 : prod a0 a1 => exists y5 : a0, exists y6 : a1, @SETSPEC (prod a0 a1) y4 ((@IN a0 y5 x0) /\ (@IN a1 y6 (y2 y5))) (@pair a0 a1 y5 y6))) (Nat.mul (@CARD a0 x0) y3)) -> (@IN a0 x1 x0) -> (@IN a1 x2 (x5 x1)) -> (x3 = (@pair a0 a1 x1 x2)) -> (x3 = (@pair a0 a1 x6 x4)) -> (@IN a1 x4 (x5 x6)) -> (forall y2 : a0, forall y3 : a1, forall y4 : a0, forall y5 : a1, ((@pair a0 a1 y2 y3) = (@pair a0 a1 y4 y5)) = ((y2 = y4) /\ (y3 = y5))) -> (forall y2 : a0, forall y3 : nat, forall y4 : a0, forall y5 : nat, ((@pair a0 nat y2 y3) = (@pair a0 nat y4 y5)) = ((y2 = y4) /\ (y3 = y5))) -> (forall y2 : a0, forall y3 : prod a0 a1, forall y4 : a0, forall y5 : prod a0 a1, ((@pair a0 (prod a0 a1) y2 y3) = (@pair a0 (prod a0 a1) y4 y5)) = ((y2 = y4) /\ (y3 = y5))) -> (forall y2 : nat, forall y3 : a1, forall y4 : nat, forall y5 : a1, ((@pair nat a1 y2 y3) = (@pair nat a1 y4 y5)) = ((y2 = y4) /\ (y3 = y5))) -> ~ (forall y2 : prod a0 a1, forall y3 : a1, forall y4 : prod a0 a1, forall y5 : a1, ((@pair (prod a0 a1) a1 y2 y3) = (@pair (prod a0 a1) a1 y4 y5)) = ((y2 = y4) /\ (y3 = y5))).
Definition term1270 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : a0) (x2 : a1) (x3 : prod a0 a1) (x4 : a1) (x5 : type1413 a0 a1) (x6 : a0) := forall y0 : nat, forall y1 : nat, (~ (@IN a0 x6 x0)) -> (@FINITE a0 x0) -> (y1 = (S (@CARD a0 x0))) -> (@HAS_SIZE a1 (x5 x6) y0) -> (forall y2 : a0, (@IN a0 y2 x0) -> @HAS_SIZE a1 (x5 y2) y0) -> (forall y2 : type1413 a0 a1, forall y3 : nat, (forall y4 : a0, (@IN a0 y4 x0) -> @HAS_SIZE a1 (y2 y4) y3) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y4 : prod a0 a1 => exists y5 : a0, exists y6 : a1, @SETSPEC (prod a0 a1) y4 ((@IN a0 y5 x0) /\ (@IN a1 y6 (y2 y5))) (@pair a0 a1 y5 y6))) (Nat.mul (@CARD a0 x0) y3)) -> (@IN a0 x1 x0) -> (@IN a1 x2 (x5 x1)) -> (x3 = (@pair a0 a1 x1 x2)) -> (x3 = (@pair a0 a1 x6 x4)) -> (@IN a1 x4 (x5 x6)) -> (forall y2 : a0, forall y3 : a1, forall y4 : a0, forall y5 : a1, ((@pair a0 a1 y2 y3) = (@pair a0 a1 y4 y5)) = ((y2 = y4) /\ (y3 = y5))) -> (forall y2 : a0, forall y3 : nat, forall y4 : a0, forall y5 : nat, ((@pair a0 nat y2 y3) = (@pair a0 nat y4 y5)) = ((y2 = y4) /\ (y3 = y5))) -> (forall y2 : a0, forall y3 : prod a0 a1, forall y4 : a0, forall y5 : prod a0 a1, ((@pair a0 (prod a0 a1) y2 y3) = (@pair a0 (prod a0 a1) y4 y5)) = ((y2 = y4) /\ (y3 = y5))) -> (forall y2 : nat, forall y3 : a1, forall y4 : nat, forall y5 : a1, ((@pair nat a1 y2 y3) = (@pair nat a1 y4 y5)) = ((y2 = y4) /\ (y3 = y5))) -> (forall y2 : prod a0 a1, forall y3 : a1, forall y4 : prod a0 a1, forall y5 : a1, ((@pair (prod a0 a1) a1 y2 y3) = (@pair (prod a0 a1) a1 y4 y5)) = ((y2 = y4) /\ (y3 = y5))) -> False.
Definition term1214 (a0 : Type') := forall y0 : nat, forall y1 : a0, forall y2 : nat, forall y3 : a0, ((@pair nat a0 y0 y1) = (@pair nat a0 y2 y3)) = ((y0 = y2) /\ (y1 = y3)).
Definition term1053 := forall y0 : nat, forall y1 : nat, (Nat.mul (S y0) y1) = (Nat.add (Nat.mul y0 y1) y1).
Definition term824 (a0 : Type') (x0 : a0) (x1 : a0 -> Prop) (x2 : Prop) := forall y0 : nat, forall y1 : nat, ((@IN a0 x0 x1) = x2) -> (x2 -> (@CARD a0 x1) = y0) -> ((~ x2) -> (S (@CARD a0 x1)) = y1) -> (@COND nat (@IN a0 x0 x1) (@CARD a0 x1) (S (@CARD a0 x1))) = (@COND nat x2 y0 y1).
Definition term600 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) := forall y0 : nat, forall y1 : type1413 a0 a1, forall y2 : nat, (((@FINITE a0 x0) /\ ((@CARD a0 x0) = y0)) /\ (forall y3 : a0, (@IN a0 y3 x0) -> @HAS_SIZE a1 (y1 y3) y2)) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y3 : prod a0 a1 => exists y4 : a0, exists y5 : a1, @SETSPEC (prod a0 a1) y3 ((@IN a0 y4 x0) /\ (@IN a1 y5 (y1 y4))) (@pair a0 a1 y4 y5))) (Nat.mul y0 y2).
Definition term599 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) := forall y0 : nat, forall y1 : type1413 a0 a1, forall y2 : nat, ((@HAS_SIZE a0 x0 y0) /\ (forall y3 : a0, (@IN a0 y3 x0) -> @HAS_SIZE a1 (y1 y3) y2)) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y3 : prod a0 a1 => exists y4 : a0, exists y5 : a1, @SETSPEC (prod a0 a1) y3 ((@IN a0 y4 x0) /\ (@IN a1 y5 (y1 y4))) (@pair a0 a1 y4 y5))) (Nat.mul y0 y2).
Definition term34 (a0 : Type') (x0 : a0 -> Prop) (x1 : a0 -> Prop) := forall y0 : nat, forall y1 : nat, ((@HAS_SIZE a0 x0 y0) /\ ((@HAS_SIZE a0 x1 y1) /\ (@DISJOINT a0 x0 x1))) -> @HAS_SIZE a0 (@UNION a0 x0 x1) (Nat.add y0 y1).
Definition term70 (a0 : Type') (a1 : Type') (x0 : prod a1 a0) (x1 : a1) (x2 : a1 -> Prop) (x3 : a0) (x4 : type1470 a0 a1) (x5 : a1) := (fun y0 : Prop => (fun y1 : Prop => fun y2 : prod a1 a0 => y1 /\ (x0 = y2)) y0) (((x5 = x1) \/ (@IN a1 x5 x2)) /\ (@IN a0 x3 (x4 x5))).
Definition term440 (a0 : Type') (a1 : Type') (x0 : prod a1 a0) (x1 : a0) (x2 : a1) := (fun y0 : a1 => x0 = (@pair a1 a0 y0 x1)) x2.
Definition term458 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : type1470 a0 a1) (x2 : prod a1 a0) (x3 : a1) (x4 : a0) := @eq Prop ((~ (x0 x3)) \/ ((~ (x1 x3 x4)) \/ (~ (x2 = (@pair a1 a0 x3 x4))))).
Definition term196 (a0 : Type') (a1 : Type') (x0 : a1) := forall y0 : type1470 a0 a1, forall y1 : a1 -> Prop, (~ (forall y2 : prod a1 a0, (exists y3 : a1, exists y4 : a0, (((y3 = x0) \/ (y1 y3)) /\ (y0 y3 y4)) /\ (y2 = (@pair a1 a0 y3 y4))) = ((exists y3 : a1, exists y4 : a0, ((y1 y3) /\ (y0 y3 y4)) /\ (y2 = (@pair a1 a0 y3 y4))) \/ (exists y3 : a0, (y2 = (@pair a1 a0 x0 y3)) /\ (y0 x0 y3))))) -> False.
Definition term1195 (a0 : Type') (a1 : Type') (x0 : prod a0 a1) (x1 : type1478 a0 a1) (x2 : a1 -> Prop) := @IN (prod a0 a1) x0 (@IMAGE a1 (prod a0 a1) x1 x2).
Definition term160 (a0 : Type') (a1 : Type') (x0 : prod a1 a0) (x1 : type1429 a0 a1) (x2 : a0 -> Prop) := @IN (prod a1 a0) x0 (@IMAGE a0 (prod a1 a0) x1 x2).
Definition term1955 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a0) (x2 : a1) := fun y0 : a1 => (~ ((@I (a1 -> prod a0 a1) (@I (a0 -> a1 -> prod a0 a1) (@pair a0 a1) x0) x2) = (@I (a1 -> prod a0 a1) (@I (a0 -> a1 -> prod a0 a1) (@pair a0 a1) x1) y0))) \/ ((x0 = x1) /\ (x2 = y0)).
Definition term1863 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a0) (x2 : a1) := fun y0 : a1 => (~ ((@pair a0 a1 x0 x2) = (@pair a0 a1 x1 y0))) \/ ((x0 = x1) /\ (x2 = y0)).
Definition term655 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : nat) := forall y0 : type1413 a0 a1, (fun y1 : type1413 a0 a1 => ((@CARD a0 x0) = x1) -> forall y2 : nat, (forall y3 : a0, (@IN a0 y3 x0) -> @HAS_SIZE a1 (y1 y3) y2) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y3 : prod a0 a1 => exists y4 : a0, exists y5 : a1, @SETSPEC (prod a0 a1) y3 ((@IN a0 y4 x0) /\ (@IN a1 y5 (y1 y4))) (@pair a0 a1 y4 y5))) (Nat.mul x1 y2)) y0.
Definition term754 (a0 : Type') := fun y0 : a0 => True.
Definition term165 (a0 : Type') (a1 : Type') (x0 : type1429 a0 a1) (x1 : a0) := (fun y0 : a0 => x0 y0) x1.
Definition term1543 (a0 : Type') (x0 : Prop) (x1 : a0 -> Prop) := x0 \/ (exists y0 : a0, x1 y0).
Definition term538 (x0 : Prop) := False /\ (x0 -> False).
Definition term375 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : a1) (x2 : prod a1 a0) (x3 : type1470 a0 a1) (x4 : a1) (x5 : a0) := (forall y0 : a1, forall y1 : a0, (((~ (y0 = x4)) /\ (~ (x0 y0))) \/ (~ (x3 y0 y1))) \/ (~ (x2 = (@pair a1 a0 y0 y1)))) /\ ((((x0 x1) /\ (x3 x1 x5)) /\ (x2 = (@pair a1 a0 x1 x5))) \/ ((x2 = (@pair a1 a0 x4 x5)) /\ (x3 x4 x5))).
Definition term150 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : type1470 a0 a1) (x2 : prod a1 a0) (x3 : a1) (x4 : a0) := ((x0 x3) /\ (x1 x3 x4)) /\ (x2 = (@pair a1 a0 x3 x4)).
Definition term1807 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : type1413 a0 a1) (x2 : a0 -> Prop) (x3 : nat -> a0) (x4 : nat) := (fun y0 : nat => fun y1 : a0 => ((@IN a0 y1 x2) /\ (~ (@HAS_SIZE a1 (x1 y1) y0))) \/ (@HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (x0 x2 x1)) (Nat.mul (@CARD a0 x2) y0))) x4 (x3 x4).
Definition term2101 (a0 : Type') (a1 : Type') (x0 : a1) (x1 : type1413 a0 a1) (x2 : a0) (x3 : prod a0 a1) := (fun y0 : prod a0 a1 => forall y1 : a1, forall y2 : a0, forall y3 : a0 -> Prop, forall y4 : nat, forall y5 : nat, (~ (@IN a0 x2 y3)) -> (@FINITE a0 y3) -> (y5 = (S (@CARD a0 y3))) -> (@HAS_SIZE a1 (x1 x2) y4) -> (forall y6 : a0, (@IN a0 y6 y3) -> @HAS_SIZE a1 (x1 y6) y4) -> (forall y6 : type1413 a0 a1, forall y7 : nat, (forall y8 : a0, (@IN a0 y8 y3) -> @HAS_SIZE a1 (y6 y8) y7) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y8 : prod a0 a1 => exists y9 : a0, exists y10 : a1, @SETSPEC (prod a0 a1) y8 ((@IN a0 y9 y3) /\ (@IN a1 y10 (y6 y9))) (@pair a0 a1 y9 y10))) (Nat.mul (@CARD a0 y3) y7)) -> (@IN a0 y2 y3) -> (@IN a1 y1 (x1 y2)) -> (y0 = (@pair a0 a1 y2 y1)) -> (y0 = (@pair a0 a1 x2 x0)) -> (@IN a1 x0 (x1 x2)) -> (forall y6 : a0, forall y7 : a1, forall y8 : a0, forall y9 : a1, ((@pair a0 a1 y6 y7) = (@pair a0 a1 y8 y9)) = ((y6 = y8) /\ (y7 = y9))) -> (forall y6 : a0, forall y7 : nat, forall y8 : a0, forall y9 : nat, ((@pair a0 nat y6 y7) = (@pair a0 nat y8 y9)) = ((y6 = y8) /\ (y7 = y9))) -> (forall y6 : a0, forall y7 : prod a0 a1, forall y8 : a0, forall y9 : prod a0 a1, ((@pair a0 (prod a0 a1) y6 y7) = (@pair a0 (prod a0 a1) y8 y9)) = ((y6 = y8) /\ (y7 = y9))) -> (forall y6 : nat, forall y7 : a1, forall y8 : nat, forall y9 : a1, ((@pair nat a1 y6 y7) = (@pair nat a1 y8 y9)) = ((y6 = y8) /\ (y7 = y9))) -> (forall y6 : prod a0 a1, forall y7 : a1, forall y8 : prod a0 a1, forall y9 : a1, ((@pair (prod a0 a1) a1 y6 y7) = (@pair (prod a0 a1) a1 y8 y9)) = ((y6 = y8) /\ (y7 = y9))) -> False) x3.
Definition term1976 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a0) (x2 : a1) := fun y0 : a1 => ((~ ((@I (a1 -> prod a0 a1) (@I (a0 -> a1 -> prod a0 a1) (@pair a0 a1) x0) x2) = (@I (a1 -> prod a0 a1) (@I (a0 -> a1 -> prod a0 a1) (@pair a0 a1) x1) y0))) \/ (x0 = x1)) /\ ((~ ((@I (a1 -> prod a0 a1) (@I (a0 -> a1 -> prod a0 a1) (@pair a0 a1) x0) x2) = (@I (a1 -> prod a0 a1) (@I (a0 -> a1 -> prod a0 a1) (@pair a0 a1) x1) y0))) \/ (x2 = y0)).
Definition term1913 (a0 : Type') (a1 : Type') (x0 : a0) := @eq Prop (forall y0 : a1, ((fun y1 : a1 => forall y2 : a0, forall y3 : a1, ((@pair a0 a1 x0 y1) = (@pair a0 a1 y2 y3)) \/ ((~ (x0 = y2)) \/ (~ (y1 = y3)))) y0) /\ ((fun y1 : a1 => forall y2 : a0, forall y3 : a1, (~ ((@pair a0 a1 x0 y1) = (@pair a0 a1 y2 y3))) \/ ((x0 = y2) /\ (y1 = y3))) y0)).
Definition term1869 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a0) (x2 : a1) := @eq Prop (forall y0 : a1, ((fun y1 : a1 => ((@pair a0 a1 x0 x2) = (@pair a0 a1 x1 y1)) \/ ((~ (x0 = x1)) \/ (~ (x2 = y1)))) y0) /\ ((fun y1 : a1 => (~ ((@pair a0 a1 x0 x2) = (@pair a0 a1 x1 y1))) \/ ((x0 = x1) /\ (x2 = y1))) y0)).
Definition term1485 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : a0 -> Prop) (x2 : type1413 a0 a1) := @eq Prop (forall y0 : prod a0 a1, ((x0 x1 x2 y0) \/ (forall y1 : a0, forall y2 : a1, ~ (@SETSPEC (prod a0 a1) y0 ((@IN a0 y1 x1) /\ (@IN a1 y2 (x2 y1))) (@pair a0 a1 y1 y2)))) /\ ((~ (x0 x1 x2 y0)) \/ (exists y1 : a0, exists y2 : a1, @SETSPEC (prod a0 a1) y0 ((@IN a0 y1 x1) /\ (@IN a1 y2 (x2 y1))) (@pair a0 a1 y1 y2)))).
Definition term657 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : nat) := (@FINITE a0 x0) -> forall y0 : type1413 a0 a1, ((@CARD a0 x0) = x1) -> forall y1 : nat, (forall y2 : a0, (@IN a0 y2 x0) -> @HAS_SIZE a1 (y0 y2) y1) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y2 : prod a0 a1 => exists y3 : a0, exists y4 : a1, @SETSPEC (prod a0 a1) y2 ((@IN a0 y3 x0) /\ (@IN a1 y4 (y0 y3))) (@pair a0 a1 y3 y4))) (Nat.mul x1 y1).
Definition term688 (a0 : Type') (a1 : Type') := fun y0 : a0 -> Prop => forall y1 : nat, ((@CARD a0 y0) = y1) -> forall y2 : type1413 a0 a1, forall y3 : nat, (forall y4 : a0, (@IN a0 y4 y0) -> @HAS_SIZE a1 (y2 y4) y3) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y4 : prod a0 a1 => exists y5 : a0, exists y6 : a1, @SETSPEC (prod a0 a1) y4 ((@IN a0 y5 y0) /\ (@IN a1 y6 (y2 y5))) (@pair a0 a1 y5 y6))) (Nat.mul y1 y3).
Definition term281 (a0 : Type') (x0 : a0 -> Prop) (x1 : Prop) := exists y0 : a0, (x0 y0) /\ x1.
Definition term1804 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : type1413 a0 a1) (x2 : a0 -> Prop) := fun y0 : nat => exists y1 : a0, (fun y2 : nat => fun y3 : a0 => ((@IN a0 y3 x2) /\ (~ (@HAS_SIZE a1 (x1 y3) y2))) \/ (@HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (x0 x2 x1)) (Nat.mul (@CARD a0 x2) y2))) y0 y1.
Definition term2010 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a1) (x2 : a0) (x3 : a1) := (x0 = x2) \/ (~ ((@I (a1 -> prod a0 a1) (@I (a0 -> a1 -> prod a0 a1) (@pair a0 a1) x0) x1) = (@I (a1 -> prod a0 a1) (@I (a0 -> a1 -> prod a0 a1) (@pair a0 a1) x2) x3))).
Definition term2009 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a1) (x2 : a0) (x3 : a1) := (~ ((@I (a1 -> prod a0 a1) (@I (a0 -> a1 -> prod a0 a1) (@pair a0 a1) x0) x1) = (@I (a1 -> prod a0 a1) (@I (a0 -> a1 -> prod a0 a1) (@pair a0 a1) x2) x3))) -> (@I (a1 -> prod a0 a1) (@I (a0 -> a1 -> prod a0 a1) (@pair a0 a1) x0) x1) = (@I (a1 -> prod a0 a1) (@I (a0 -> a1 -> prod a0 a1) (@pair a0 a1) x2) x3).
Definition term658 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : nat) := forall y0 : type1413 a0 a1, ((@CARD a0 x0) = x1) -> (fun y1 : type1413 a0 a1 => forall y2 : nat, (forall y3 : a0, (@IN a0 y3 x0) -> @HAS_SIZE a1 (y1 y3) y2) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y3 : prod a0 a1 => exists y4 : a0, exists y5 : a1, @SETSPEC (prod a0 a1) y3 ((@IN a0 y4 x0) /\ (@IN a1 y5 (y1 y4))) (@pair a0 a1 y4 y5))) (Nat.mul x1 y2)) y0.
Definition term589 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : type1413 a0 a1) (x2 : nat) := fun y0 : nat => ((@HAS_SIZE a0 x0 x2) /\ (forall y1 : a0, (@IN a0 y1 x0) -> @HAS_SIZE a1 (x1 y1) y0)) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y1 : prod a0 a1 => exists y2 : a0, exists y3 : a1, @SETSPEC (prod a0 a1) y1 ((@IN a0 y2 x0) /\ (@IN a1 y3 (x1 y2))) (@pair a0 a1 y2 y3))) (Nat.mul x2 y0).
Definition term446 (a0 : Type') (a1 : Type') (x0 : type1470 a0 a1) (x1 : a1) (x2 : a0) := @eq Prop (x0 x1 x2).
Definition term1676 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) := fun y0 : a0 -> Prop => exists y1 : type464 a0 a1, exists y2 : type465 a0 a1, forall y3 : type1413 a0 a1, forall y4 : prod a0 a1, (~ (x0 y0 y3 y4)) \/ (@SETSPEC (prod a0 a1) y4 ((@IN a0 (y1 y3 y4) y0) /\ (@IN a1 (y2 y3 y4) (y3 (y1 y3 y4)))) (@pair a0 a1 (y1 y3 y4) (y2 y3 y4))).
Definition term1833 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : a0 -> Prop) (x2 : type471 a0 a1) (x3 : type1413 a0 a1) := (fun y0 : nat -> a0 => forall y1 : nat, ((@IN a0 (y0 y1) x1) /\ (~ (@HAS_SIZE a1 (x3 (y0 y1)) y1))) \/ (@HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (x0 x1 x3)) (Nat.mul (@CARD a0 x1) y1))) (x2 x3).
Definition term257 (a0 : Type') (a1 : Type') (x0 : prod a1 a0) (x1 : type1470 a0 a1) (x2 : a1) := ~ (exists y0 : a0, (x0 = (@pair a1 a0 x2 y0)) /\ (x1 x2 y0)).
Definition term292 (a0 : Type') (a1 : Type') (x0 : a1) (x1 : a1 -> Prop) (x2 : prod a1 a0) (x3 : type1470 a0 a1) (x4 : a1) := (exists y0 : a0, (((x0 = x4) \/ (x1 x0)) /\ (x3 x0 y0)) /\ (x2 = (@pair a1 a0 x0 y0))) /\ ((forall y0 : a1, forall y1 : a0, ((~ (x1 y0)) \/ (~ (x3 y0 y1))) \/ (~ (x2 = (@pair a1 a0 y0 y1)))) /\ (forall y0 : a0, (~ (x2 = (@pair a1 a0 x4 y0))) \/ (~ (x3 x4 y0)))).
Definition term783 (a0 : Type') (a1 : Type') (x0 : type1413 a0 a1) (x1 : nat) (x2 : nat) := (forall y0 : a0, (@IN a0 y0 (@EMPTY a0)) -> @HAS_SIZE a1 (x0 y0) x2) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y0 : prod a0 a1 => exists y1 : a0, exists y2 : a1, @SETSPEC (prod a0 a1) y0 ((@IN a0 y1 (@EMPTY a0)) /\ (@IN a1 y2 (x0 y1))) (@pair a0 a1 y1 y2))) (Nat.mul x1 x2).
Definition term35 (a0 : Type') (x0 : a0 -> Prop) (x1 : a0 -> Prop) (x2 : nat) := (fun y0 : nat => forall y1 : nat, ((@HAS_SIZE a0 x0 y0) /\ ((@HAS_SIZE a0 x1 y1) /\ (@DISJOINT a0 x0 x1))) -> @HAS_SIZE a0 (@UNION a0 x0 x1) (Nat.add y0 y1)) x2.
Definition term136 (a0 : Type') (x0 : a0 -> Prop) (x1 : a0) := and (x0 x1).
Definition term2008 (a0 : Type') (x0 : a0 -> Prop) := ~ (x0 = x0).
Definition term417 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : a1) (x2 : prod a1 a0) (x3 : type1470 a0 a1) (x4 : a1) := exists y0 : a0, (((((x1 = x4) \/ (x0 x1)) /\ (x3 x1 y0)) /\ (x2 = (@pair a1 a0 x1 y0))) /\ ((forall y1 : a1, forall y2 : a0, ((~ (x0 y1)) \/ (~ (x3 y1 y2))) \/ (~ (x2 = (@pair a1 a0 y1 y2)))) /\ (forall y1 : a0, (~ (x2 = (@pair a1 a0 x4 y1))) \/ (~ (x3 x4 y1))))) \/ ((forall y1 : a1, forall y2 : a0, (((~ (y1 = x4)) /\ (~ (x0 y1))) \/ (~ (x3 y1 y2))) \/ (~ (x2 = (@pair a1 a0 y1 y2)))) /\ ((((x0 x1) /\ (x3 x1 y0)) /\ (x2 = (@pair a1 a0 x1 y0))) \/ ((x2 = (@pair a1 a0 x4 y0)) /\ (x3 x4 y0)))).
Definition term771 (a0 : Type') (a1 : Type') (x0 : prod a0 a1) := fun y0 : a0 => exists y1 : a1, @SETSPEC (prod a0 a1) x0 False (@pair a0 a1 y0 y1).
Definition term412 (a0 : Type') (a1 : Type') (x0 : a1) (x1 : a0) (x2 : a1 -> Prop) (x3 : prod a1 a0) (x4 : type1470 a0 a1) (x5 : a1) := or (((((x0 = x5) \/ (x2 x0)) /\ (x4 x0 x1)) /\ (x3 = (@pair a1 a0 x0 x1))) /\ ((forall y0 : a1, forall y1 : a0, ((~ (x2 y0)) \/ (~ (x4 y0 y1))) \/ (~ (x3 = (@pair a1 a0 y0 y1)))) /\ (forall y0 : a0, (~ (x3 = (@pair a1 a0 x5 y0))) \/ (~ (x4 x5 y0))))).
Definition term854 (a0 : Type') (a1 : Type') (x0 : type1413 a0 a1) (x1 : nat) (x2 : a0) (x3 : a0) (x4 : a0 -> Prop) (x5 : Prop) := (((x3 = x2) \/ (@IN a0 x3 x4)) -> (@HAS_SIZE a1 (x0 x3) x1) = x5) -> ((@IN a0 x3 (@INSERT a0 x2 x4)) -> @HAS_SIZE a1 (x0 x3) x1) = (((x3 = x2) \/ (@IN a0 x3 x4)) -> x5).
Definition term214 (a0 : Type') (a1 : Type') (x0 : a1) (x1 : a1 -> Prop) (x2 : type1470 a0 a1) (x3 : a1) (x4 : a0) := or (((~ (x3 = x0)) /\ (~ (x1 x3))) \/ (~ (x2 x3 x4))).
Definition term376 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : a1) (x2 : prod a1 a0) (x3 : type1470 a0 a1) (x4 : a1) := fun y0 : a0 => (forall y1 : a1, forall y2 : a0, (((~ (y1 = x4)) /\ (~ (x0 y1))) \/ (~ (x3 y1 y2))) \/ (~ (x2 = (@pair a1 a0 y1 y2)))) /\ ((fun y1 : a0 => (((x0 x1) /\ (x3 x1 y1)) /\ (x2 = (@pair a1 a0 x1 y1))) \/ ((x2 = (@pair a1 a0 x4 y1)) /\ (x3 x4 y1))) y0).
Definition term804 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a0 -> Prop) (x2 : Prop) (x3 : Prop) := (fun y0 : Prop => (((forall y1 : nat, ((@CARD a0 x1) = y1) -> forall y2 : type1413 a0 a1, forall y3 : nat, (forall y4 : a0, (@IN a0 y4 x1) -> @HAS_SIZE a1 (y2 y4) y3) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y4 : prod a0 a1 => exists y5 : a0, exists y6 : a1, @SETSPEC (prod a0 a1) y4 ((@IN a0 y5 x1) /\ (@IN a1 y6 (y2 y5))) (@pair a0 a1 y5 y6))) (Nat.mul y1 y3)) /\ ((~ (@IN a0 x0 x1)) /\ (@FINITE a0 x1))) = x2) -> (x2 -> (forall y1 : nat, ((@CARD a0 (@INSERT a0 x0 x1)) = y1) -> forall y2 : type1413 a0 a1, forall y3 : nat, (forall y4 : a0, (@IN a0 y4 (@INSERT a0 x0 x1)) -> @HAS_SIZE a1 (y2 y4) y3) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y4 : prod a0 a1 => exists y5 : a0, exists y6 : a1, @SETSPEC (prod a0 a1) y4 ((@IN a0 y5 (@INSERT a0 x0 x1)) /\ (@IN a1 y6 (y2 y5))) (@pair a0 a1 y5 y6))) (Nat.mul y1 y3)) = y0) -> (((forall y1 : nat, ((@CARD a0 x1) = y1) -> forall y2 : type1413 a0 a1, forall y3 : nat, (forall y4 : a0, (@IN a0 y4 x1) -> @HAS_SIZE a1 (y2 y4) y3) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y4 : prod a0 a1 => exists y5 : a0, exists y6 : a1, @SETSPEC (prod a0 a1) y4 ((@IN a0 y5 x1) /\ (@IN a1 y6 (y2 y5))) (@pair a0 a1 y5 y6))) (Nat.mul y1 y3)) /\ ((~ (@IN a0 x0 x1)) /\ (@FINITE a0 x1))) -> forall y1 : nat, ((@CARD a0 (@INSERT a0 x0 x1)) = y1) -> forall y2 : type1413 a0 a1, forall y3 : nat, (forall y4 : a0, (@IN a0 y4 (@INSERT a0 x0 x1)) -> @HAS_SIZE a1 (y2 y4) y3) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y4 : prod a0 a1 => exists y5 : a0, exists y6 : a1, @SETSPEC (prod a0 a1) y4 ((@IN a0 y5 (@INSERT a0 x0 x1)) /\ (@IN a1 y6 (y2 y5))) (@pair a0 a1 y5 y6))) (Nat.mul y1 y3)) = (x2 -> y0)) x3.
Definition term143 (a0 : Type') (a1 : Type') (x0 : prod a1 a0) (x1 : a1 -> Prop) (x2 : type1470 a0 a1) (x3 : a1) (x4 : a0) := (fun y0 : Prop => fun y1 : prod a1 a0 => y0 /\ (x0 = y1)) ((@IN a1 x3 x1) /\ (@IN a0 x4 (x2 x3))) (@pair a1 a0 x3 x4).
Definition term928 (a0 : Type') (a1 : Type') (x0 : type914 a0 a1) (x1 : prod a0 a1) := x0 (fun y0 : Prop => fun y1 : prod a0 a1 => y0 /\ (x1 = y1)).
Definition term55 (a0 : Type') (a1 : Type') (x0 : type916 a0 a1) (x1 : prod a1 a0) := x0 (fun y0 : Prop => fun y1 : prod a1 a0 => y0 /\ (x1 = y1)).
Definition term2026 (a0 : Type') (x0 : type1364 a0) (x1 : a0) (x2 : type1364 a0) (x3 : a0) := @eq Prop ((~ (x1 = x3)) \/ ((~ (x0 = x2)) \/ ((@I (a0 -> (a0 -> Prop) -> Prop) x0 x1) = (@I (a0 -> (a0 -> Prop) -> Prop) x2 x3)))).
Definition term1898 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a1) := fun y0 : a0 => (fun y1 : a0 => forall y2 : a1, (~ ((@pair a0 a1 x0 x1) = (@pair a0 a1 y1 y2))) \/ ((x0 = y1) /\ (x1 = y2))) y0.
Definition term1893 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a1) := fun y0 : a0 => (fun y1 : a0 => forall y2 : a1, ((@pair a0 a1 x0 x1) = (@pair a0 a1 y1 y2)) \/ ((~ (x0 = y1)) \/ (~ (x1 = y2)))) y0.
Definition term168 (a0 : Type') (a1 : Type') (x0 : a1) := fun y0 : a0 => (fun y1 : a0 => @pair a1 a0 x0 y1) y0.
Definition term764 (a0 : Type') (a1 : Type') (x0 : prod a0 a1) (x1 : type1413 a0 a1) (x2 : a0) (x3 : a1) := @SETSPEC (prod a0 a1) x0 ((@IN a0 x2 (@EMPTY a0)) /\ (@IN a1 x3 (x1 x2))) (@pair a0 a1 x2 x3).
Definition term922 (a0 : Type') (a1 : Type') := fun y0 : nat => (@GSPEC (prod a0 a1) (fun y1 : prod a0 a1 => exists y2 : a0, exists y3 : a1, @SETSPEC (prod a0 a1) y1 False (@pair a0 a1 y2 y3))) = (@EMPTY (prod a0 a1)).
Definition term1330 (a0 : Type') (x0 : a0) (x1 : a0) (x2 : nat) (x3 : nat) := (x0 = x1) /\ (x2 = x3).
Definition term1129 (a0 : Type') (x0 : a0) := and (x0 = x0).
Definition term1196 (a0 : Type') (a1 : Type') (x0 : prod a0 a1) (x1 : type1478 a0 a1) (x2 : a1 -> Prop) := exists y0 : a1, (x0 = (x1 y0)) /\ (@IN a1 y0 x2).
Definition term1942 (a0 : Type') (a1 : Type') := fun y0 : a0 => (fun y1 : a0 => forall y2 : a1, forall y3 : a0, forall y4 : a1, (~ ((@pair a0 a1 y1 y2) = (@pair a0 a1 y3 y4))) \/ ((y1 = y3) /\ (y2 = y4))) y0.
Definition term1937 (a0 : Type') (a1 : Type') := fun y0 : a0 => (fun y1 : a0 => forall y2 : a1, forall y3 : a0, forall y4 : a1, ((@pair a0 a1 y1 y2) = (@pair a0 a1 y3 y4)) \/ ((~ (y1 = y3)) \/ (~ (y2 = y4)))) y0.
Definition term1478 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : a0 -> Prop) (x2 : type1413 a0 a1) := fun y0 : prod a0 a1 => (~ (x0 x1 x2 y0)) \/ (exists y1 : a0, exists y2 : a1, @SETSPEC (prod a0 a1) y0 ((@IN a0 y1 x1) /\ (@IN a1 y2 (x2 y1))) (@pair a0 a1 y1 y2)).
Definition term691 (a0 : Type') (a1 : Type') := and ((fun y0 : a0 -> Prop => forall y1 : nat, ((@CARD a0 y0) = y1) -> forall y2 : type1413 a0 a1, forall y3 : nat, (forall y4 : a0, (@IN a0 y4 y0) -> @HAS_SIZE a1 (y2 y4) y3) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y4 : prod a0 a1 => exists y5 : a0, exists y6 : a1, @SETSPEC (prod a0 a1) y4 ((@IN a0 y5 y0) /\ (@IN a1 y6 (y2 y5))) (@pair a0 a1 y5 y6))) (Nat.mul y1 y3)) (@EMPTY a0)).
Definition term1809 (a0 : Type') (a1 : Type') (x0 : nat -> a0) (x1 : type621 a0 a1) (x2 : type1413 a0 a1) (x3 : a0 -> Prop) (x4 : nat) := ((@IN a0 (x0 x4) x3) /\ (~ (@HAS_SIZE a1 (x2 (x0 x4)) x4))) \/ (@HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (x1 x3 x2)) (Nat.mul (@CARD a0 x3) x4)).
Definition term1788 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : type621 a0 a1) (x2 : type1413 a0 a1) (x3 : a0 -> Prop) (x4 : nat) := ((@IN a0 x0 x3) /\ (~ (@HAS_SIZE a1 (x2 x0) x4))) \/ (@HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (x1 x3 x2)) (Nat.mul (@CARD a0 x3) x4)).
Definition term1760 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : type1413 a0 a1) (x2 : a0) (x3 : nat) := (@IN a0 x2 x0) /\ (~ (@HAS_SIZE a1 (x1 x2) x3)).
Definition term1457 (a0 : Type') (a1 : Type') (x0 : prod a0 a1) (x1 : a0 -> Prop) (x2 : type1413 a0 a1) := forall y0 : a0, forall y1 : a1, ~ (@SETSPEC (prod a0 a1) x0 ((@IN a0 y0 x1) /\ (@IN a1 y1 (x2 y0))) (@pair a0 a1 y0 y1)).
Definition term1233 (a0 : Type') (a1 : Type') := imp (forall y0 : a0, forall y1 : a1, forall y2 : a0, forall y3 : a1, ((@pair a0 a1 y0 y1) = (@pair a0 a1 y2 y3)) = ((y0 = y2) /\ (y1 = y3))).
Definition term1230 (a0 : Type') := imp (forall y0 : a0, forall y1 : nat, forall y2 : a0, forall y3 : nat, ((@pair a0 nat y0 y1) = (@pair a0 nat y2 y3)) = ((y0 = y2) /\ (y1 = y3))).
Definition term1227 (a0 : Type') (a1 : Type') := imp (forall y0 : a0, forall y1 : prod a0 a1, forall y2 : a0, forall y3 : prod a0 a1, ((@pair a0 (prod a0 a1) y0 y1) = (@pair a0 (prod a0 a1) y2 y3)) = ((y0 = y2) /\ (y1 = y3))).
Definition term951 (a0 : Type') (a1 : Type') (x0 : prod a0 a1) (x1 : a0) (x2 : a1) := (fun y0 : Prop => fun y1 : prod a0 a1 => y0 /\ (x0 = y1)) False (@pair a0 a1 x1 x2).
Definition term694 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) := and ((fun y0 : a0 -> Prop => forall y1 : nat, ((@CARD a0 y0) = y1) -> forall y2 : type1413 a0 a1, forall y3 : nat, (forall y4 : a0, (@IN a0 y4 y0) -> @HAS_SIZE a1 (y2 y4) y3) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y4 : prod a0 a1 => exists y5 : a0, exists y6 : a1, @SETSPEC (prod a0 a1) y4 ((@IN a0 y5 y0) /\ (@IN a1 y6 (y2 y5))) (@pair a0 a1 y5 y6))) (Nat.mul y1 y3)) x0).
Definition term1410 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) := forall y0 : a0 -> Prop, (x0 y0) = (fun y1 : type1413 a0 a1 => fun y2 : prod a0 a1 => exists y3 : a0, exists y4 : a1, @SETSPEC (prod a0 a1) y2 ((@IN a0 y3 y0) /\ (@IN a1 y4 (y1 y3))) (@pair a0 a1 y3 y4)).
Definition term306 (a0 : Type') (a1 : Type') (x0 : a1) (x1 : a0) (x2 : a1 -> Prop) (x3 : prod a1 a0) (x4 : type1470 a0 a1) (x5 : a1) := ((((x0 = x5) \/ (x2 x0)) /\ (x4 x0 x1)) /\ (x3 = (@pair a1 a0 x0 x1))) /\ ((forall y0 : a1, forall y1 : a0, ((~ (x2 y0)) \/ (~ (x4 y0 y1))) \/ (~ (x3 = (@pair a1 a0 y0 y1)))) /\ (forall y0 : a0, (~ (x3 = (@pair a1 a0 x5 y0))) \/ (~ (x4 x5 y0)))).
Definition term1956 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a0) (x2 : a1) := forall y0 : a1, (~ ((@I (a1 -> prod a0 a1) (@I (a0 -> a1 -> prod a0 a1) (@pair a0 a1) x0) x2) = (@I (a1 -> prod a0 a1) (@I (a0 -> a1 -> prod a0 a1) (@pair a0 a1) x1) y0))) \/ ((x0 = x1) /\ (x2 = y0)).
Definition term1878 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a0) (x2 : a1) := forall y0 : a1, (~ ((@pair a0 a1 x0 x2) = (@pair a0 a1 x1 y0))) \/ ((x0 = x1) /\ (x2 = y0)).
Definition term441 (a0 : Type') (a1 : Type') (x0 : prod a1 a0) (x1 : a0) (x2 : a1) := @eq Prop ((fun y0 : a1 => x0 = (@pair a1 a0 y0 x1)) x2).
Definition term1185 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : type1413 a0 a1) (x2 : prod a0 a1) (x3 : a0) (x4 : a1) := ((@IN a0 x3 x0) /\ (@IN a1 x4 (x1 x3))) /\ (x2 = (@pair a0 a1 x3 x4)).
Definition term1161 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : type1413 a0 a1) := fun y0 : type1532 a0 a1 => exists y1 : a0, exists y2 : a1, y0 ((@IN a0 y1 x0) /\ (@IN a1 y2 (x1 y1))) (@pair a0 a1 y1 y2).
Definition term931 (a0 : Type') (a1 : Type') := fun y0 : type1532 a0 a1 => exists y1 : a0, exists y2 : a1, y0 False (@pair a0 a1 y1 y2).
Definition term98 (a0 : Type') (a1 : Type') (x0 : a1) (x1 : a1 -> Prop) (x2 : type1470 a0 a1) (x3 : prod a1 a0) (x4 : a1) (x5 : a0) := @eq Prop ((fun y0 : prod a1 a0 => (fun y1 : prod a1 a0 => (((x4 = x0) \/ (x1 x4)) /\ (x2 x4 x5)) /\ (x3 = y1)) y0) (@pair a1 a0 x4 x5)).
Definition term1025 (a0 : Type') (x0 : a0) := fun y0 : a0 => (fun y1 : a0 => y1 = x0) y0.
Definition term1184 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : type1413 a0 a1) (x2 : prod a0 a1) (x3 : a0) (x4 : a1) := @eq Prop ((fun y0 : prod a0 a1 => ((@IN a0 x3 x0) /\ (@IN a1 x4 (x1 x3))) /\ (x2 = y0)) (@pair a0 a1 x3 x4)).
Definition term149 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : type1470 a0 a1) (x2 : prod a1 a0) (x3 : a1) (x4 : a0) := @eq Prop ((fun y0 : prod a1 a0 => ((x0 x3) /\ (x1 x3 x4)) /\ (x2 = y0)) (@pair a1 a0 x3 x4)).
Definition term179 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : type1470 a0 a1) (x2 : a1) := fun y0 : prod a1 a0 => (@IN (prod a1 a0) y0 (@GSPEC (prod a1 a0) (fun y1 : prod a1 a0 => exists y2 : a1, exists y3 : a0, @SETSPEC (prod a1 a0) y1 (((y2 = x2) \/ (@IN a1 y2 x0)) /\ (@IN a0 y3 (x1 y2))) (@pair a1 a0 y2 y3)))) = (@IN (prod a1 a0) y0 (@UNION (prod a1 a0) (@GSPEC (prod a1 a0) (fun y1 : prod a1 a0 => exists y2 : a1, exists y3 : a0, @SETSPEC (prod a1 a0) y1 ((@IN a1 y2 x0) /\ (@IN a0 y3 (x1 y2))) (@pair a1 a0 y2 y3))) (@IMAGE a0 (prod a1 a0) (fun y1 : a0 => @pair a1 a0 x2 y1) (x1 x2)))).
Definition term16 (a0 : Type') (x0 : type919 a0) := forall y0 : a0, (@IN a0 y0 (@GSPEC a0 (fun y1 : a0 => x0 (@SETSPEC a0 y1)))) = (x0 (fun y1 : Prop => fun y2 : a0 => y1 /\ (y0 = y2))).
Definition term1046 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a0 -> Prop) (x2 : type1413 a0 a1) (x3 : nat) (x4 : nat) := ((@HAS_SIZE a1 (x2 x0) x4) /\ (forall y0 : a0, (@IN a0 y0 x1) -> @HAS_SIZE a1 (x2 y0) x4)) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y0 : prod a0 a1 => exists y1 : a0, exists y2 : a1, @SETSPEC (prod a0 a1) y0 (((y1 = x0) \/ (@IN a0 y1 x1)) /\ (@IN a1 y2 (x2 y1))) (@pair a0 a1 y1 y2))) (Nat.mul x3 x4).
Definition term583 (a0 : Type') (a1 : Type') (x0 : nat) (x1 : a0 -> Prop) (x2 : type1413 a0 a1) (x3 : nat) := ((@FINITE a0 x1) /\ ((@CARD a0 x1) = x0)) /\ (forall y0 : a0, (@IN a0 y0 x1) -> @HAS_SIZE a1 (x2 y0) x3).
Definition term1983 (a0 : Type') (a1 : Type') := forall y0 : a0, forall y1 : a1, forall y2 : a0, forall y3 : a1, ((~ ((@I (a1 -> prod a0 a1) (@I (a0 -> a1 -> prod a0 a1) (@pair a0 a1) y0) y1) = (@I (a1 -> prod a0 a1) (@I (a0 -> a1 -> prod a0 a1) (@pair a0 a1) y2) y3))) \/ (y0 = y2)) /\ ((~ ((@I (a1 -> prod a0 a1) (@I (a0 -> a1 -> prod a0 a1) (@pair a0 a1) y0) y1) = (@I (a1 -> prod a0 a1) (@I (a0 -> a1 -> prod a0 a1) (@pair a0 a1) y2) y3))) \/ (y1 = y3)).
Definition term1972 (a0 : Type') (a1 : Type') := forall y0 : a0, forall y1 : a1, forall y2 : a0, forall y3 : a1, ((@I (a1 -> prod a0 a1) (@I (a0 -> a1 -> prod a0 a1) (@pair a0 a1) y0) y1) = (@I (a1 -> prod a0 a1) (@I (a0 -> a1 -> prod a0 a1) (@pair a0 a1) y2) y3)) \/ ((~ (y0 = y2)) \/ (~ (y1 = y3))).
Definition term1962 (a0 : Type') (a1 : Type') := forall y0 : a0, forall y1 : a1, forall y2 : a0, forall y3 : a1, (~ ((@I (a1 -> prod a0 a1) (@I (a0 -> a1 -> prod a0 a1) (@pair a0 a1) y0) y1) = (@I (a1 -> prod a0 a1) (@I (a0 -> a1 -> prod a0 a1) (@pair a0 a1) y2) y3))) \/ ((y0 = y2) /\ (y1 = y3)).
Definition term1944 (a0 : Type') (a1 : Type') := forall y0 : a0, forall y1 : a1, forall y2 : a0, forall y3 : a1, (~ ((@pair a0 a1 y0 y1) = (@pair a0 a1 y2 y3))) \/ ((y0 = y2) /\ (y1 = y3)).
Definition term1939 (a0 : Type') (a1 : Type') := forall y0 : a0, forall y1 : a1, forall y2 : a0, forall y3 : a1, ((@pair a0 a1 y0 y1) = (@pair a0 a1 y2 y3)) \/ ((~ (y0 = y2)) \/ (~ (y1 = y3))).
Definition term1859 (a0 : Type') (a1 : Type') := forall y0 : a0, forall y1 : a1, forall y2 : a0, forall y3 : a1, (((@pair a0 a1 y0 y1) = (@pair a0 a1 y2 y3)) \/ ((~ (y0 = y2)) \/ (~ (y1 = y3)))) /\ ((~ ((@pair a0 a1 y0 y1) = (@pair a0 a1 y2 y3))) \/ ((y0 = y2) /\ (y1 = y3))).
Definition term1213 (a0 : Type') (a1 : Type') := forall y0 : a0, forall y1 : a1, forall y2 : a0, forall y3 : a1, ((@pair a0 a1 y0 y1) = (@pair a0 a1 y2 y3)) = ((y0 = y2) /\ (y1 = y3)).
Definition term1566 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : prod a0 a1) (x2 : a0 -> Prop) (x3 : type1413 a0 a1) (x4 : a0) := fun y0 : a1 => (~ (x0 x2 x3 x1)) \/ (@SETSPEC (prod a0 a1) x1 ((@IN a0 x4 x2) /\ (@IN a1 y0 (x3 x4))) (@pair a0 a1 x4 y0)).
Definition term952 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a1) := (fun y0 : prod a0 a1 => False) (@pair a0 a1 x0 x1).
Definition term471 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : type1470 a0 a1) (x2 : a1) (x3 : a0) := ~ (((@pair a1 a0 x2 x0) = (@pair a1 a0 x2 x3)) /\ (x1 x2 x3)).
Definition term1473 (a0 : Type') (a1 : Type') (x0 : type1210 a0 a1) (x1 : type1210 a0 a1) := forall y0 : prod a0 a1, (x0 y0) /\ (x1 y0).
Definition term562 (a0 : Type') (x0 : a0) (x1 : a0 -> Prop) := @COND nat (@IN a0 x0 x1) (@CARD a0 x1) (S (@CARD a0 x1)).
Definition term163 (a0 : Type') (a1 : Type') (x0 : prod a1 a0) (x1 : type1470 a0 a1) (x2 : a1) := exists y0 : a0, (x0 = ((fun y1 : a0 => @pair a1 a0 x2 y1) y0)) /\ (@IN a0 y0 (x1 x2)).
Definition term1980 (a0 : Type') (a1 : Type') (x0 : a0) := fun y0 : a1 => forall y1 : a0, forall y2 : a1, ((~ ((@I (a1 -> prod a0 a1) (@I (a0 -> a1 -> prod a0 a1) (@pair a0 a1) x0) y0) = (@I (a1 -> prod a0 a1) (@I (a0 -> a1 -> prod a0 a1) (@pair a0 a1) y1) y2))) \/ (x0 = y1)) /\ ((~ ((@I (a1 -> prod a0 a1) (@I (a0 -> a1 -> prod a0 a1) (@pair a0 a1) x0) y0) = (@I (a1 -> prod a0 a1) (@I (a0 -> a1 -> prod a0 a1) (@pair a0 a1) y1) y2))) \/ (y0 = y2)).
Definition term1969 (a0 : Type') (a1 : Type') (x0 : a0) := fun y0 : a1 => forall y1 : a0, forall y2 : a1, ((@I (a1 -> prod a0 a1) (@I (a0 -> a1 -> prod a0 a1) (@pair a0 a1) x0) y0) = (@I (a1 -> prod a0 a1) (@I (a0 -> a1 -> prod a0 a1) (@pair a0 a1) y1) y2)) \/ ((~ (x0 = y1)) \/ (~ (y0 = y2))).
Definition term1959 (a0 : Type') (a1 : Type') (x0 : a0) := fun y0 : a1 => forall y1 : a0, forall y2 : a1, (~ ((@I (a1 -> prod a0 a1) (@I (a0 -> a1 -> prod a0 a1) (@pair a0 a1) x0) y0) = (@I (a1 -> prod a0 a1) (@I (a0 -> a1 -> prod a0 a1) (@pair a0 a1) y1) y2))) \/ ((x0 = y1) /\ (y0 = y2)).
Definition term1907 (a0 : Type') (a1 : Type') (x0 : a0) := fun y0 : a1 => forall y1 : a0, forall y2 : a1, (~ ((@pair a0 a1 x0 y0) = (@pair a0 a1 y1 y2))) \/ ((x0 = y1) /\ (y0 = y2)).
Definition term1906 (a0 : Type') (a1 : Type') (x0 : a0) := fun y0 : a1 => forall y1 : a0, forall y2 : a1, ((@pair a0 a1 x0 y0) = (@pair a0 a1 y1 y2)) \/ ((~ (x0 = y1)) \/ (~ (y0 = y2))).
Definition term1856 (a0 : Type') (a1 : Type') (x0 : a0) := fun y0 : a1 => forall y1 : a0, forall y2 : a1, (((@pair a0 a1 x0 y0) = (@pair a0 a1 y1 y2)) \/ ((~ (x0 = y1)) \/ (~ (y0 = y2)))) /\ ((~ ((@pair a0 a1 x0 y0) = (@pair a0 a1 y1 y2))) \/ ((x0 = y1) /\ (y0 = y2))).
Definition term1368 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : prod a0 a1) (x2 : a1) (x3 : type1413 a0 a1) (x4 : a0) := fun y0 : a1 => forall y1 : a0, forall y2 : a0 -> Prop, forall y3 : nat, forall y4 : nat, (~ (@IN a0 x4 y2)) -> (@FINITE a0 y2) -> (y4 = (S (@CARD a0 y2))) -> (@HAS_SIZE a1 (x3 x4) y3) -> (forall y5 : a0, (@IN a0 y5 y2) -> @HAS_SIZE a1 (x3 y5) y3) -> (forall y5 : type1413 a0 a1, forall y6 : nat, (forall y7 : a0, (@IN a0 y7 y2) -> @HAS_SIZE a1 (y5 y7) y6) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (x0 y2 y5)) (Nat.mul (@CARD a0 y2) y6)) -> (@IN a0 y1 y2) -> (@IN a1 y0 (x3 y1)) -> (x1 = (@pair a0 a1 y1 y0)) -> (x1 = (@pair a0 a1 x4 x2)) -> (@IN a1 x2 (x3 x4)) -> (forall y5 : a0, forall y6 : a1, forall y7 : a0, forall y8 : a1, ((@pair a0 a1 y5 y6) = (@pair a0 a1 y7 y8)) = ((y5 = y7) /\ (y6 = y8))) -> (forall y5 : a0, forall y6 : nat, forall y7 : a0, forall y8 : nat, ((@pair a0 nat y5 y6) = (@pair a0 nat y7 y8)) = ((y5 = y7) /\ (y6 = y8))) -> (forall y5 : a0, forall y6 : prod a0 a1, forall y7 : a0, forall y8 : prod a0 a1, ((@pair a0 (prod a0 a1) y5 y6) = (@pair a0 (prod a0 a1) y7 y8)) = ((y5 = y7) /\ (y6 = y8))) -> (forall y5 : nat, forall y6 : a1, forall y7 : nat, forall y8 : a1, ((@pair nat a1 y5 y6) = (@pair nat a1 y7 y8)) = ((y5 = y7) /\ (y6 = y8))) -> ~ (forall y5 : prod a0 a1, forall y6 : a1, forall y7 : prod a0 a1, forall y8 : a1, ((@pair (prod a0 a1) a1 y5 y6) = (@pair (prod a0 a1) a1 y7 y8)) = ((y5 = y7) /\ (y6 = y8))).
Definition term1340 (a0 : Type') (a1 : Type') (x0 : a0) := fun y0 : a1 => forall y1 : a0, forall y2 : a1, ((@pair a0 a1 x0 y0) = (@pair a0 a1 y1 y2)) = ((x0 = y1) /\ (y0 = y2)).
Definition term1281 (a0 : Type') (a1 : Type') (x0 : prod a0 a1) (x1 : a1) (x2 : type1413 a0 a1) (x3 : a0) := fun y0 : a1 => forall y1 : a0, forall y2 : a0 -> Prop, forall y3 : nat, forall y4 : nat, (~ (@IN a0 x3 y2)) -> (@FINITE a0 y2) -> (y4 = (S (@CARD a0 y2))) -> (@HAS_SIZE a1 (x2 x3) y3) -> (forall y5 : a0, (@IN a0 y5 y2) -> @HAS_SIZE a1 (x2 y5) y3) -> (forall y5 : type1413 a0 a1, forall y6 : nat, (forall y7 : a0, (@IN a0 y7 y2) -> @HAS_SIZE a1 (y5 y7) y6) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y7 : prod a0 a1 => exists y8 : a0, exists y9 : a1, @SETSPEC (prod a0 a1) y7 ((@IN a0 y8 y2) /\ (@IN a1 y9 (y5 y8))) (@pair a0 a1 y8 y9))) (Nat.mul (@CARD a0 y2) y6)) -> (@IN a0 y1 y2) -> (@IN a1 y0 (x2 y1)) -> (x0 = (@pair a0 a1 y1 y0)) -> (x0 = (@pair a0 a1 x3 x1)) -> (@IN a1 x1 (x2 x3)) -> (forall y5 : a0, forall y6 : a1, forall y7 : a0, forall y8 : a1, ((@pair a0 a1 y5 y6) = (@pair a0 a1 y7 y8)) = ((y5 = y7) /\ (y6 = y8))) -> (forall y5 : a0, forall y6 : nat, forall y7 : a0, forall y8 : nat, ((@pair a0 nat y5 y6) = (@pair a0 nat y7 y8)) = ((y5 = y7) /\ (y6 = y8))) -> (forall y5 : a0, forall y6 : prod a0 a1, forall y7 : a0, forall y8 : prod a0 a1, ((@pair a0 (prod a0 a1) y5 y6) = (@pair a0 (prod a0 a1) y7 y8)) = ((y5 = y7) /\ (y6 = y8))) -> (forall y5 : nat, forall y6 : a1, forall y7 : nat, forall y8 : a1, ((@pair nat a1 y5 y6) = (@pair nat a1 y7 y8)) = ((y5 = y7) /\ (y6 = y8))) -> ~ (forall y5 : prod a0 a1, forall y6 : a1, forall y7 : prod a0 a1, forall y8 : a1, ((@pair (prod a0 a1) a1 y5 y6) = (@pair (prod a0 a1) a1 y7 y8)) = ((y5 = y7) /\ (y6 = y8))).
Definition term1280 (a0 : Type') (a1 : Type') (x0 : prod a0 a1) (x1 : a1) (x2 : type1413 a0 a1) (x3 : a0) := fun y0 : a1 => forall y1 : a0, forall y2 : a0 -> Prop, forall y3 : nat, forall y4 : nat, (~ (@IN a0 x3 y2)) -> (@FINITE a0 y2) -> (y4 = (S (@CARD a0 y2))) -> (@HAS_SIZE a1 (x2 x3) y3) -> (forall y5 : a0, (@IN a0 y5 y2) -> @HAS_SIZE a1 (x2 y5) y3) -> (forall y5 : type1413 a0 a1, forall y6 : nat, (forall y7 : a0, (@IN a0 y7 y2) -> @HAS_SIZE a1 (y5 y7) y6) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y7 : prod a0 a1 => exists y8 : a0, exists y9 : a1, @SETSPEC (prod a0 a1) y7 ((@IN a0 y8 y2) /\ (@IN a1 y9 (y5 y8))) (@pair a0 a1 y8 y9))) (Nat.mul (@CARD a0 y2) y6)) -> (@IN a0 y1 y2) -> (@IN a1 y0 (x2 y1)) -> (x0 = (@pair a0 a1 y1 y0)) -> (x0 = (@pair a0 a1 x3 x1)) -> (@IN a1 x1 (x2 x3)) -> (forall y5 : a0, forall y6 : a1, forall y7 : a0, forall y8 : a1, ((@pair a0 a1 y5 y6) = (@pair a0 a1 y7 y8)) = ((y5 = y7) /\ (y6 = y8))) -> (forall y5 : a0, forall y6 : nat, forall y7 : a0, forall y8 : nat, ((@pair a0 nat y5 y6) = (@pair a0 nat y7 y8)) = ((y5 = y7) /\ (y6 = y8))) -> (forall y5 : a0, forall y6 : prod a0 a1, forall y7 : a0, forall y8 : prod a0 a1, ((@pair a0 (prod a0 a1) y5 y6) = (@pair a0 (prod a0 a1) y7 y8)) = ((y5 = y7) /\ (y6 = y8))) -> (forall y5 : nat, forall y6 : a1, forall y7 : nat, forall y8 : a1, ((@pair nat a1 y5 y6) = (@pair nat a1 y7 y8)) = ((y5 = y7) /\ (y6 = y8))) -> (forall y5 : prod a0 a1, forall y6 : a1, forall y7 : prod a0 a1, forall y8 : a1, ((@pair (prod a0 a1) a1 y5 y6) = (@pair (prod a0 a1) a1 y7 y8)) = ((y5 = y7) /\ (y6 = y8))) -> False.
Definition term1476 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : a0 -> Prop) (x2 : type1413 a0 a1) := (forall y0 : prod a0 a1, (fun y1 : prod a0 a1 => (x0 x1 x2 y1) \/ (forall y2 : a0, forall y3 : a1, ~ (@SETSPEC (prod a0 a1) y1 ((@IN a0 y2 x1) /\ (@IN a1 y3 (x2 y2))) (@pair a0 a1 y2 y3)))) y0) /\ (forall y0 : prod a0 a1, (fun y1 : prod a0 a1 => (~ (x0 x1 x2 y1)) \/ (exists y2 : a0, exists y3 : a1, @SETSPEC (prod a0 a1) y1 ((@IN a0 y2 x1) /\ (@IN a1 y3 (x2 y2))) (@pair a0 a1 y2 y3))) y0).
Definition term1404 (a0 : Type') (a1 : Type') := fun y0 : a0 -> Prop => (fun y1 : a0 -> Prop => fun y2 : type1413 a0 a1 => fun y3 : prod a0 a1 => exists y4 : a0, exists y5 : a1, @SETSPEC (prod a0 a1) y3 ((@IN a0 y4 y1) /\ (@IN a1 y5 (y2 y4))) (@pair a0 a1 y4 y5)) y0.
Definition term867 (a0 : Type') (a1 : Type') (x0 : prod a0 a1) (x1 : a0) (x2 : a0 -> Prop) (x3 : a1) (x4 : type1413 a0 a1) (x5 : a0) := @SETSPEC (prod a0 a1) x0 ((@IN a0 x5 (@INSERT a0 x1 x2)) /\ (@IN a1 x3 (x4 x5))).
Definition term1617 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : a0 -> Prop) (x2 : type1413 a0 a1) (x3 : type1207 a0 a1) (x4 : type1208 a0 a1) := forall y0 : prod a0 a1, (fun y1 : prod a0 a1 => fun y2 : a1 => (~ (x0 x1 x2 y1)) \/ (@SETSPEC (prod a0 a1) y1 ((@IN a0 (x3 y1) x1) /\ (@IN a1 y2 (x2 (x3 y1)))) (@pair a0 a1 (x3 y1) y2))) y0 (x4 y0).
Definition term363 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : a1) (x2 : prod a1 a0) (x3 : type1470 a0 a1) (x4 : a1) := (forall y0 : a1, forall y1 : a0, (((~ (y0 = x4)) /\ (~ (x0 y0))) \/ (~ (x3 y0 y1))) \/ (~ (x2 = (@pair a1 a0 y0 y1)))) /\ (exists y0 : a0, (((x0 x1) /\ (x3 x1 y0)) /\ (x2 = (@pair a1 a0 x1 y0))) \/ ((x2 = (@pair a1 a0 x4 y0)) /\ (x3 x4 y0))).
Definition term1504 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : a0 -> Prop) (x2 : type1413 a0 a1) := and ((fun y0 : type1413 a0 a1 => forall y1 : prod a0 a1, (x0 x1 y0 y1) \/ (forall y2 : a0, forall y3 : a1, ~ (@SETSPEC (prod a0 a1) y1 ((@IN a0 y2 x1) /\ (@IN a1 y3 (y0 y2))) (@pair a0 a1 y2 y3)))) x2).
Definition term1392 (a0 : Type') (a1 : Type') := imp (forall y0 : type621 a0 a1, (y0 = (fun y1 : a0 -> Prop => fun y2 : type1413 a0 a1 => fun y3 : prod a0 a1 => exists y4 : a0, exists y5 : a1, @SETSPEC (prod a0 a1) y3 ((@IN a0 y4 y1) /\ (@IN a1 y5 (y2 y4))) (@pair a0 a1 y4 y5))) -> (forall y1 : a0, forall y2 : type1413 a0 a1, forall y3 : a1, forall y4 : prod a0 a1, forall y5 : a1, forall y6 : a0, forall y7 : a0 -> Prop, forall y8 : nat, forall y9 : nat, (~ (@IN a0 y1 y7)) -> (@FINITE a0 y7) -> (y9 = (S (@CARD a0 y7))) -> (@HAS_SIZE a1 (y2 y1) y8) -> (forall y10 : a0, (@IN a0 y10 y7) -> @HAS_SIZE a1 (y2 y10) y8) -> (forall y10 : type1413 a0 a1, forall y11 : nat, (forall y12 : a0, (@IN a0 y12 y7) -> @HAS_SIZE a1 (y10 y12) y11) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y12 : prod a0 a1 => exists y13 : a0, exists y14 : a1, @SETSPEC (prod a0 a1) y12 ((@IN a0 y13 y7) /\ (@IN a1 y14 (y10 y13))) (@pair a0 a1 y13 y14))) (Nat.mul (@CARD a0 y7) y11)) -> (@IN a0 y6 y7) -> (@IN a1 y5 (y2 y6)) -> (y4 = (@pair a0 a1 y6 y5)) -> (y4 = (@pair a0 a1 y1 y3)) -> (@IN a1 y3 (y2 y1)) -> (forall y10 : a0, forall y11 : a1, forall y12 : a0, forall y13 : a1, ((@pair a0 a1 y10 y11) = (@pair a0 a1 y12 y13)) = ((y10 = y12) /\ (y11 = y13))) -> (forall y10 : a0, forall y11 : nat, forall y12 : a0, forall y13 : nat, ((@pair a0 nat y10 y11) = (@pair a0 nat y12 y13)) = ((y10 = y12) /\ (y11 = y13))) -> (forall y10 : a0, forall y11 : prod a0 a1, forall y12 : a0, forall y13 : prod a0 a1, ((@pair a0 (prod a0 a1) y10 y11) = (@pair a0 (prod a0 a1) y12 y13)) = ((y10 = y12) /\ (y11 = y13))) -> (forall y10 : nat, forall y11 : a1, forall y12 : nat, forall y13 : a1, ((@pair nat a1 y10 y11) = (@pair nat a1 y12 y13)) = ((y10 = y12) /\ (y11 = y13))) -> ~ (forall y10 : prod a0 a1, forall y11 : a1, forall y12 : prod a0 a1, forall y13 : a1, ((@pair (prod a0 a1) a1 y10 y11) = (@pair (prod a0 a1) a1 y12 y13)) = ((y10 = y12) /\ (y11 = y13)))) = (forall y1 : a0, forall y2 : type1413 a0 a1, forall y3 : a1, forall y4 : prod a0 a1, forall y5 : a1, forall y6 : a0, forall y7 : a0 -> Prop, forall y8 : nat, forall y9 : nat, (~ (@IN a0 y1 y7)) -> (@FINITE a0 y7) -> (y9 = (S (@CARD a0 y7))) -> (@HAS_SIZE a1 (y2 y1) y8) -> (forall y10 : a0, (@IN a0 y10 y7) -> @HAS_SIZE a1 (y2 y10) y8) -> (forall y10 : type1413 a0 a1, forall y11 : nat, (forall y12 : a0, (@IN a0 y12 y7) -> @HAS_SIZE a1 (y10 y12) y11) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (y0 y7 y10)) (Nat.mul (@CARD a0 y7) y11)) -> (@IN a0 y6 y7) -> (@IN a1 y5 (y2 y6)) -> (y4 = (@pair a0 a1 y6 y5)) -> (y4 = (@pair a0 a1 y1 y3)) -> (@IN a1 y3 (y2 y1)) -> (forall y10 : a0, forall y11 : a1, forall y12 : a0, forall y13 : a1, ((@pair a0 a1 y10 y11) = (@pair a0 a1 y12 y13)) = ((y10 = y12) /\ (y11 = y13))) -> (forall y10 : a0, forall y11 : nat, forall y12 : a0, forall y13 : nat, ((@pair a0 nat y10 y11) = (@pair a0 nat y12 y13)) = ((y10 = y12) /\ (y11 = y13))) -> (forall y10 : a0, forall y11 : prod a0 a1, forall y12 : a0, forall y13 : prod a0 a1, ((@pair a0 (prod a0 a1) y10 y11) = (@pair a0 (prod a0 a1) y12 y13)) = ((y10 = y12) /\ (y11 = y13))) -> (forall y10 : nat, forall y11 : a1, forall y12 : nat, forall y13 : a1, ((@pair nat a1 y10 y11) = (@pair nat a1 y12 y13)) = ((y10 = y12) /\ (y11 = y13))) -> ~ (forall y10 : prod a0 a1, forall y11 : a1, forall y12 : prod a0 a1, forall y13 : a1, ((@pair (prod a0 a1) a1 y10 y11) = (@pair (prod a0 a1) a1 y12 y13)) = ((y10 = y12) /\ (y11 = y13))))).
Definition term1391 (a0 : Type') (a1 : Type') := imp (forall y0 : type621 a0 a1, (y0 = (fun y1 : a0 -> Prop => fun y2 : type1413 a0 a1 => fun y3 : prod a0 a1 => exists y4 : a0, exists y5 : a1, @SETSPEC (prod a0 a1) y3 ((@IN a0 y4 y1) /\ (@IN a1 y5 (y2 y4))) (@pair a0 a1 y4 y5))) -> (forall y1 : a0, forall y2 : type1413 a0 a1, forall y3 : a1, forall y4 : prod a0 a1, forall y5 : a1, forall y6 : a0, forall y7 : a0 -> Prop, forall y8 : nat, forall y9 : nat, (~ (@IN a0 y1 y7)) -> (@FINITE a0 y7) -> (y9 = (S (@CARD a0 y7))) -> (@HAS_SIZE a1 (y2 y1) y8) -> (forall y10 : a0, (@IN a0 y10 y7) -> @HAS_SIZE a1 (y2 y10) y8) -> (forall y10 : type1413 a0 a1, forall y11 : nat, (forall y12 : a0, (@IN a0 y12 y7) -> @HAS_SIZE a1 (y10 y12) y11) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y12 : prod a0 a1 => exists y13 : a0, exists y14 : a1, @SETSPEC (prod a0 a1) y12 ((@IN a0 y13 y7) /\ (@IN a1 y14 (y10 y13))) (@pair a0 a1 y13 y14))) (Nat.mul (@CARD a0 y7) y11)) -> (@IN a0 y6 y7) -> (@IN a1 y5 (y2 y6)) -> (y4 = (@pair a0 a1 y6 y5)) -> (y4 = (@pair a0 a1 y1 y3)) -> (@IN a1 y3 (y2 y1)) -> (forall y10 : a0, forall y11 : a1, forall y12 : a0, forall y13 : a1, ((@pair a0 a1 y10 y11) = (@pair a0 a1 y12 y13)) = ((y10 = y12) /\ (y11 = y13))) -> (forall y10 : a0, forall y11 : nat, forall y12 : a0, forall y13 : nat, ((@pair a0 nat y10 y11) = (@pair a0 nat y12 y13)) = ((y10 = y12) /\ (y11 = y13))) -> (forall y10 : a0, forall y11 : prod a0 a1, forall y12 : a0, forall y13 : prod a0 a1, ((@pair a0 (prod a0 a1) y10 y11) = (@pair a0 (prod a0 a1) y12 y13)) = ((y10 = y12) /\ (y11 = y13))) -> (forall y10 : nat, forall y11 : a1, forall y12 : nat, forall y13 : a1, ((@pair nat a1 y10 y11) = (@pair nat a1 y12 y13)) = ((y10 = y12) /\ (y11 = y13))) -> ~ (forall y10 : prod a0 a1, forall y11 : a1, forall y12 : prod a0 a1, forall y13 : a1, ((@pair (prod a0 a1) a1 y10 y11) = (@pair (prod a0 a1) a1 y12 y13)) = ((y10 = y12) /\ (y11 = y13)))) = ((fun y1 : type621 a0 a1 => forall y2 : a0, forall y3 : type1413 a0 a1, forall y4 : a1, forall y5 : prod a0 a1, forall y6 : a1, forall y7 : a0, forall y8 : a0 -> Prop, forall y9 : nat, forall y10 : nat, (~ (@IN a0 y2 y8)) -> (@FINITE a0 y8) -> (y10 = (S (@CARD a0 y8))) -> (@HAS_SIZE a1 (y3 y2) y9) -> (forall y11 : a0, (@IN a0 y11 y8) -> @HAS_SIZE a1 (y3 y11) y9) -> (forall y11 : type1413 a0 a1, forall y12 : nat, (forall y13 : a0, (@IN a0 y13 y8) -> @HAS_SIZE a1 (y11 y13) y12) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (y1 y8 y11)) (Nat.mul (@CARD a0 y8) y12)) -> (@IN a0 y7 y8) -> (@IN a1 y6 (y3 y7)) -> (y5 = (@pair a0 a1 y7 y6)) -> (y5 = (@pair a0 a1 y2 y4)) -> (@IN a1 y4 (y3 y2)) -> (forall y11 : a0, forall y12 : a1, forall y13 : a0, forall y14 : a1, ((@pair a0 a1 y11 y12) = (@pair a0 a1 y13 y14)) = ((y11 = y13) /\ (y12 = y14))) -> (forall y11 : a0, forall y12 : nat, forall y13 : a0, forall y14 : nat, ((@pair a0 nat y11 y12) = (@pair a0 nat y13 y14)) = ((y11 = y13) /\ (y12 = y14))) -> (forall y11 : a0, forall y12 : prod a0 a1, forall y13 : a0, forall y14 : prod a0 a1, ((@pair a0 (prod a0 a1) y11 y12) = (@pair a0 (prod a0 a1) y13 y14)) = ((y11 = y13) /\ (y12 = y14))) -> (forall y11 : nat, forall y12 : a1, forall y13 : nat, forall y14 : a1, ((@pair nat a1 y11 y12) = (@pair nat a1 y13 y14)) = ((y11 = y13) /\ (y12 = y14))) -> ~ (forall y11 : prod a0 a1, forall y12 : a1, forall y13 : prod a0 a1, forall y14 : a1, ((@pair (prod a0 a1) a1 y11 y12) = (@pair (prod a0 a1) a1 y13 y14)) = ((y11 = y13) /\ (y12 = y14)))) y0)).
Definition term49 (x0 : Prop) (x1 : Prop) (x2 : Prop) := (x0 \/ x1) \/ x2.
Definition term1016 (a0 : Type') (a1 : Type') (x0 : type1413 a0 a1) (x1 : a0) (x2 : nat) := (exists y0 : a0, (fun y1 : a0 => y1 = x1) y0) -> @HAS_SIZE a1 (x0 x1) x2.
Definition term1667 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : a0 -> Prop) (x2 : type464 a0 a1) (x3 : type465 a0 a1) := fun y0 : type1413 a0 a1 => (fun y1 : type1413 a0 a1 => fun y2 : type1208 a0 a1 => forall y3 : prod a0 a1, (~ (x0 x1 y1 y3)) \/ (@SETSPEC (prod a0 a1) y3 ((@IN a0 (x2 y1 y3) x1) /\ (@IN a1 (y2 y3) (y1 (x2 y1 y3)))) (@pair a0 a1 (x2 y1 y3) (y2 y3)))) y0 (x3 y0).
Definition term1211 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : type1413 a0 a1) (x2 : a0) := fun y0 : prod a0 a1 => ~ ((exists y1 : a0, exists y2 : a1, ((@IN a0 y1 x0) /\ (@IN a1 y2 (x1 y1))) /\ (y0 = (@pair a0 a1 y1 y2))) /\ (exists y1 : a1, (y0 = (@pair a0 a1 x2 y1)) /\ (@IN a1 y1 (x1 x2)))).
Definition term350 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : prod a1 a0) (x2 : type1470 a0 a1) (x3 : a1) := fun y0 : a1 => exists y1 : a0, (((x0 y0) /\ (x2 y0 y1)) /\ (x1 = (@pair a1 a0 y0 y1))) \/ ((x1 = (@pair a1 a0 x3 y1)) /\ (x2 x3 y1)).
Definition term1428 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : a0 -> Prop) (x2 : type1413 a0 a1) := fun y0 : prod a0 a1 => (x0 x1 x2 y0) = ((fun y1 : prod a0 a1 => exists y2 : a0, exists y3 : a1, @SETSPEC (prod a0 a1) y1 ((@IN a0 y2 x1) /\ (@IN a1 y3 (x2 y2))) (@pair a0 a1 y2 y3)) y0).
Definition term1402 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) := fun y0 : a0 -> Prop => x0 y0.
Definition term500 (a0 : Type') (a1 : Type') (x0 : type1470 a0 a1) (x1 : a1) (x2 : a1 -> Prop) := (fun y0 : a1 -> Prop => (~ (forall y1 : prod a1 a0, (exists y2 : a1, exists y3 : a0, (((y2 = x1) \/ (y0 y2)) /\ (x0 y2 y3)) /\ (y1 = (@pair a1 a0 y2 y3))) = ((exists y2 : a1, exists y3 : a0, ((y0 y2) /\ (x0 y2 y3)) /\ (y1 = (@pair a1 a0 y2 y3))) \/ (exists y2 : a0, (y1 = (@pair a1 a0 x1 y2)) /\ (x0 x1 y2))))) -> False) x2.
Definition term1316 (a0 : Type') (x0 : nat) (x1 : nat) (x2 : a0) := forall y0 : a0, ((@pair nat a0 x0 x2) = (@pair nat a0 x1 y0)) = ((x0 = x1) /\ (x2 = y0)).
Definition term10 (a0 : Type') (x0 : a0 -> Prop) (x1 : a0 -> Prop) := forall y0 : a0, (@IN a0 y0 (@INTER a0 x0 x1)) = ((@IN a0 y0 x0) /\ (@IN a0 y0 x1)).
Definition term1401 (a0 : Type') (a1 : Type') (x0 : a1 -> a0) (x1 : a1 -> a0) := forall y0 : a1, (x0 y0) = (x1 y0).
Definition term523 (x0 : Prop) (x1 : Prop) (x2 : Prop) := @eq Prop (((x0 \/ x1) -> x2) = ((x0 -> x2) /\ (x1 -> x2))).
Definition term1338 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a0) (x2 : a1) := fun y0 : a1 => ((@pair a0 a1 x0 x2) = (@pair a0 a1 x1 y0)) = ((x0 = x1) /\ (x2 = y0)).
Definition term1307 (a0 : Type') (a1 : Type') (x0 : prod a0 a1) (x1 : prod a0 a1) (x2 : a1) := fun y0 : a1 => ((@pair (prod a0 a1) a1 x0 x2) = (@pair (prod a0 a1) a1 x1 y0)) = ((x0 = x1) /\ (x2 = y0)).
Definition term1099 (a0 : Type') (a1 : Type') (x0 : type1413 a0 a1) (x1 : a0 -> Prop) (x2 : nat) := (forall y0 : a0, (@IN a0 y0 x1) -> @HAS_SIZE a1 (x0 y0) x2) -> (@HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y0 : prod a0 a1 => exists y1 : a0, exists y2 : a1, @SETSPEC (prod a0 a1) y0 ((@IN a0 y1 x1) /\ (@IN a1 y2 (x0 y1))) (@pair a0 a1 y1 y2))) (Nat.mul (@CARD a0 x1) x2)) = True.
Definition term617 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : type1413 a0 a1) (x2 : nat) (x3 : nat) := (fun y0 : nat => ((@CARD a0 x0) = x2) -> (forall y1 : a0, (@IN a0 y1 x0) -> @HAS_SIZE a1 (x1 y1) y0) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y1 : prod a0 a1 => exists y2 : a0, exists y3 : a1, @SETSPEC (prod a0 a1) y1 ((@IN a0 y2 x0) /\ (@IN a1 y3 (x1 y2))) (@pair a0 a1 y2 y3))) (Nat.mul x2 y0)) x3.
Definition term293 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : prod a1 a0) (x2 : type1470 a0 a1) (x3 : a1) := fun y0 : a1 => ((fun y1 : a1 => exists y2 : a0, (((y1 = x3) \/ (x0 y1)) /\ (x2 y1 y2)) /\ (x1 = (@pair a1 a0 y1 y2))) y0) /\ ((forall y1 : a1, forall y2 : a0, ((~ (x0 y1)) \/ (~ (x2 y1 y2))) \/ (~ (x1 = (@pair a1 a0 y1 y2)))) /\ (forall y1 : a0, (~ (x1 = (@pair a1 a0 x3 y1))) \/ (~ (x2 x3 y1)))).
Definition term1347 (a0 : Type') (a1 : Type') (x0 : type1413 a0 a1) (x1 : a0 -> Prop) := fun y0 : nat => (forall y1 : a0, (@IN a0 y1 x1) -> @HAS_SIZE a1 (x0 y1) y0) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y1 : prod a0 a1 => exists y2 : a0, exists y3 : a1, @SETSPEC (prod a0 a1) y1 ((@IN a0 y2 x1) /\ (@IN a1 y3 (x0 y2))) (@pair a0 a1 y2 y3))) (Nat.mul (@CARD a0 x1) y0).
Definition term795 (a0 : Type') (a1 : Type') (x0 : nat) := ((@CARD a0 (@EMPTY a0)) = x0) -> forall y0 : type1413 a0 a1, forall y1 : nat, (forall y2 : a0, (@IN a0 y2 (@EMPTY a0)) -> @HAS_SIZE a1 (y0 y2) y1) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y2 : prod a0 a1 => exists y3 : a0, exists y4 : a1, @SETSPEC (prod a0 a1) y2 ((@IN a0 y3 (@EMPTY a0)) /\ (@IN a1 y4 (y0 y3))) (@pair a0 a1 y3 y4))) (Nat.mul x0 y1).
Definition term230 (a0 : Type') (a1 : Type') (x0 : a1) (x1 : a1 -> Prop) (x2 : type1470 a0 a1) (x3 : prod a1 a0) (x4 : a1) := ~ ((fun y0 : a1 => exists y1 : a0, (((y0 = x0) \/ (x1 y0)) /\ (x2 y0 y1)) /\ (x3 = (@pair a1 a0 y0 y1))) x4).
Definition term314 (a0 : Type') (x0 : a0 -> Prop) (x1 : Prop) := exists y0 : a0, (x0 y0) \/ x1.
Definition term431 (a0 : Type') (a1 : Type') (x0 : prod a1 a0) (x1 : type1470 a0 a1) (x2 : a1) (x3 : a0) := (fun y0 : a0 => (~ (x0 = (@pair a1 a0 x2 y0))) \/ (~ (x1 x2 y0))) x3.
Definition term730 (a0 : Type') := @eq nat (@CARD a0 (@EMPTY a0)).
Definition term1904 (a0 : Type') (a1 : Type') (x0 : a0) := forall y0 : a1, ((fun y1 : a1 => forall y2 : a0, forall y3 : a1, ((@pair a0 a1 x0 y1) = (@pair a0 a1 y2 y3)) \/ ((~ (x0 = y2)) \/ (~ (y1 = y3)))) y0) /\ ((fun y1 : a1 => forall y2 : a0, forall y3 : a1, (~ ((@pair a0 a1 x0 y1) = (@pair a0 a1 y2 y3))) \/ ((x0 = y2) /\ (y1 = y3))) y0).
Definition term1860 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a0) (x2 : a1) := forall y0 : a1, ((fun y1 : a1 => ((@pair a0 a1 x0 x2) = (@pair a0 a1 x1 y1)) \/ ((~ (x0 = x1)) \/ (~ (x2 = y1)))) y0) /\ ((fun y1 : a1 => (~ ((@pair a0 a1 x0 x2) = (@pair a0 a1 x1 y1))) \/ ((x0 = x1) /\ (x2 = y1))) y0).
Definition term693 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) := (fun y0 : a0 -> Prop => forall y1 : nat, ((@CARD a0 y0) = y1) -> forall y2 : type1413 a0 a1, forall y3 : nat, (forall y4 : a0, (@IN a0 y4 y0) -> @HAS_SIZE a1 (y2 y4) y3) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y4 : prod a0 a1 => exists y5 : a0, exists y6 : a1, @SETSPEC (prod a0 a1) y4 ((@IN a0 y5 y0) /\ (@IN a1 y6 (y2 y5))) (@pair a0 a1 y5 y6))) (Nat.mul y1 y3)) x0.
Definition term575 (a0 : Type') (x0 : a0 -> Prop) := (fun y0 : a0 -> Prop => forall y1 : nat, (@HAS_SIZE a0 y0 y1) = ((@FINITE a0 y0) /\ ((@CARD a0 y0) = y1))) x0.
Definition term508 (a0 : Type') (x0 : a0 -> Prop) := (fun y0 : a0 -> Prop => forall y1 : a0 -> Prop, (forall y2 : a0, (y0 y2) /\ (y1 y2)) = ((forall y2 : a0, y0 y2) /\ (forall y2 : a0, y1 y2))) x0.
Definition term503 (a0 : Type') (x0 : a0 -> Prop) := (fun y0 : a0 -> Prop => forall y1 : Prop, (forall y2 : a0, (y0 y2) -> y1) = ((exists y2 : a0, y0 y2) -> y1)) x0.
Definition term27 (a0 : Type') (x0 : a0 -> Prop) := (fun y0 : a0 -> Prop => forall y1 : a0 -> Prop, (@DISJOINT a0 y0 y1) = ((@INTER a0 y0 y1) = (@EMPTY a0))) x0.
Definition term3 (a0 : Type') (x0 : a0 -> Prop) := (fun y0 : a0 -> Prop => forall y1 : a0 -> Prop, (y0 = y1) = (forall y2 : a0, (@IN a0 y2 y0) = (@IN a0 y2 y1))) x0.
Definition term235 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : type1470 a0 a1) (x2 : a1) (x3 : a0) := (~ (x0 x2)) \/ (~ (x1 x2 x3)).
Definition term1381 (a0 : Type') (a1 : Type') (x0 : Prop) (x1 : type621 a0 a1) (x2 : type130 a0 a1) := (forall y0 : type621 a0 a1, (y0 = x1) -> x0 = (x2 y0)) -> x0 = (forall y0 : type621 a0 a1, (y0 = x1) -> x2 y0).
Definition term1399 (a0 : Type') (a1 : Type') := (forall y0 : type621 a0 a1, (y0 = (fun y1 : a0 -> Prop => fun y2 : type1413 a0 a1 => fun y3 : prod a0 a1 => exists y4 : a0, exists y5 : a1, @SETSPEC (prod a0 a1) y3 ((@IN a0 y4 y1) /\ (@IN a1 y5 (y2 y4))) (@pair a0 a1 y4 y5))) -> (forall y1 : a0, forall y2 : type1413 a0 a1, forall y3 : a1, forall y4 : prod a0 a1, forall y5 : a1, forall y6 : a0, forall y7 : a0 -> Prop, forall y8 : nat, forall y9 : nat, (~ (@IN a0 y1 y7)) -> (@FINITE a0 y7) -> (y9 = (S (@CARD a0 y7))) -> (@HAS_SIZE a1 (y2 y1) y8) -> (forall y10 : a0, (@IN a0 y10 y7) -> @HAS_SIZE a1 (y2 y10) y8) -> (forall y10 : type1413 a0 a1, forall y11 : nat, (forall y12 : a0, (@IN a0 y12 y7) -> @HAS_SIZE a1 (y10 y12) y11) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y12 : prod a0 a1 => exists y13 : a0, exists y14 : a1, @SETSPEC (prod a0 a1) y12 ((@IN a0 y13 y7) /\ (@IN a1 y14 (y10 y13))) (@pair a0 a1 y13 y14))) (Nat.mul (@CARD a0 y7) y11)) -> (@IN a0 y6 y7) -> (@IN a1 y5 (y2 y6)) -> (y4 = (@pair a0 a1 y6 y5)) -> (y4 = (@pair a0 a1 y1 y3)) -> (@IN a1 y3 (y2 y1)) -> (forall y10 : a0, forall y11 : a1, forall y12 : a0, forall y13 : a1, ((@pair a0 a1 y10 y11) = (@pair a0 a1 y12 y13)) = ((y10 = y12) /\ (y11 = y13))) -> (forall y10 : a0, forall y11 : nat, forall y12 : a0, forall y13 : nat, ((@pair a0 nat y10 y11) = (@pair a0 nat y12 y13)) = ((y10 = y12) /\ (y11 = y13))) -> (forall y10 : a0, forall y11 : prod a0 a1, forall y12 : a0, forall y13 : prod a0 a1, ((@pair a0 (prod a0 a1) y10 y11) = (@pair a0 (prod a0 a1) y12 y13)) = ((y10 = y12) /\ (y11 = y13))) -> (forall y10 : nat, forall y11 : a1, forall y12 : nat, forall y13 : a1, ((@pair nat a1 y10 y11) = (@pair nat a1 y12 y13)) = ((y10 = y12) /\ (y11 = y13))) -> ~ (forall y10 : prod a0 a1, forall y11 : a1, forall y12 : prod a0 a1, forall y13 : a1, ((@pair (prod a0 a1) a1 y10 y11) = (@pair (prod a0 a1) a1 y12 y13)) = ((y10 = y12) /\ (y11 = y13)))) = (forall y1 : a0, forall y2 : type1413 a0 a1, forall y3 : a1, forall y4 : prod a0 a1, forall y5 : a1, forall y6 : a0, forall y7 : a0 -> Prop, forall y8 : nat, forall y9 : nat, (~ (@IN a0 y1 y7)) -> (@FINITE a0 y7) -> (y9 = (S (@CARD a0 y7))) -> (@HAS_SIZE a1 (y2 y1) y8) -> (forall y10 : a0, (@IN a0 y10 y7) -> @HAS_SIZE a1 (y2 y10) y8) -> (forall y10 : type1413 a0 a1, forall y11 : nat, (forall y12 : a0, (@IN a0 y12 y7) -> @HAS_SIZE a1 (y10 y12) y11) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (y0 y7 y10)) (Nat.mul (@CARD a0 y7) y11)) -> (@IN a0 y6 y7) -> (@IN a1 y5 (y2 y6)) -> (y4 = (@pair a0 a1 y6 y5)) -> (y4 = (@pair a0 a1 y1 y3)) -> (@IN a1 y3 (y2 y1)) -> (forall y10 : a0, forall y11 : a1, forall y12 : a0, forall y13 : a1, ((@pair a0 a1 y10 y11) = (@pair a0 a1 y12 y13)) = ((y10 = y12) /\ (y11 = y13))) -> (forall y10 : a0, forall y11 : nat, forall y12 : a0, forall y13 : nat, ((@pair a0 nat y10 y11) = (@pair a0 nat y12 y13)) = ((y10 = y12) /\ (y11 = y13))) -> (forall y10 : a0, forall y11 : prod a0 a1, forall y12 : a0, forall y13 : prod a0 a1, ((@pair a0 (prod a0 a1) y10 y11) = (@pair a0 (prod a0 a1) y12 y13)) = ((y10 = y12) /\ (y11 = y13))) -> (forall y10 : nat, forall y11 : a1, forall y12 : nat, forall y13 : a1, ((@pair nat a1 y10 y11) = (@pair nat a1 y12 y13)) = ((y10 = y12) /\ (y11 = y13))) -> ~ (forall y10 : prod a0 a1, forall y11 : a1, forall y12 : prod a0 a1, forall y13 : a1, ((@pair (prod a0 a1) a1 y10 y11) = (@pair (prod a0 a1) a1 y12 y13)) = ((y10 = y12) /\ (y11 = y13))))) -> (forall y0 : a0, forall y1 : type1413 a0 a1, forall y2 : a1, forall y3 : prod a0 a1, forall y4 : a1, forall y5 : a0, forall y6 : a0 -> Prop, forall y7 : nat, forall y8 : nat, (~ (@IN a0 y0 y6)) -> (@FINITE a0 y6) -> (y8 = (S (@CARD a0 y6))) -> (@HAS_SIZE a1 (y1 y0) y7) -> (forall y9 : a0, (@IN a0 y9 y6) -> @HAS_SIZE a1 (y1 y9) y7) -> (forall y9 : type1413 a0 a1, forall y10 : nat, (forall y11 : a0, (@IN a0 y11 y6) -> @HAS_SIZE a1 (y9 y11) y10) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y11 : prod a0 a1 => exists y12 : a0, exists y13 : a1, @SETSPEC (prod a0 a1) y11 ((@IN a0 y12 y6) /\ (@IN a1 y13 (y9 y12))) (@pair a0 a1 y12 y13))) (Nat.mul (@CARD a0 y6) y10)) -> (@IN a0 y5 y6) -> (@IN a1 y4 (y1 y5)) -> (y3 = (@pair a0 a1 y5 y4)) -> (y3 = (@pair a0 a1 y0 y2)) -> (@IN a1 y2 (y1 y0)) -> (forall y9 : a0, forall y10 : a1, forall y11 : a0, forall y12 : a1, ((@pair a0 a1 y9 y10) = (@pair a0 a1 y11 y12)) = ((y9 = y11) /\ (y10 = y12))) -> (forall y9 : a0, forall y10 : nat, forall y11 : a0, forall y12 : nat, ((@pair a0 nat y9 y10) = (@pair a0 nat y11 y12)) = ((y9 = y11) /\ (y10 = y12))) -> (forall y9 : a0, forall y10 : prod a0 a1, forall y11 : a0, forall y12 : prod a0 a1, ((@pair a0 (prod a0 a1) y9 y10) = (@pair a0 (prod a0 a1) y11 y12)) = ((y9 = y11) /\ (y10 = y12))) -> (forall y9 : nat, forall y10 : a1, forall y11 : nat, forall y12 : a1, ((@pair nat a1 y9 y10) = (@pair nat a1 y11 y12)) = ((y9 = y11) /\ (y10 = y12))) -> ~ (forall y9 : prod a0 a1, forall y10 : a1, forall y11 : prod a0 a1, forall y12 : a1, ((@pair (prod a0 a1) a1 y9 y10) = (@pair (prod a0 a1) a1 y11 y12)) = ((y9 = y11) /\ (y10 = y12)))) = (forall y0 : type621 a0 a1, (y0 = (fun y1 : a0 -> Prop => fun y2 : type1413 a0 a1 => fun y3 : prod a0 a1 => exists y4 : a0, exists y5 : a1, @SETSPEC (prod a0 a1) y3 ((@IN a0 y4 y1) /\ (@IN a1 y5 (y2 y4))) (@pair a0 a1 y4 y5))) -> forall y1 : a0, forall y2 : type1413 a0 a1, forall y3 : a1, forall y4 : prod a0 a1, forall y5 : a1, forall y6 : a0, forall y7 : a0 -> Prop, forall y8 : nat, forall y9 : nat, (~ (@IN a0 y1 y7)) -> (@FINITE a0 y7) -> (y9 = (S (@CARD a0 y7))) -> (@HAS_SIZE a1 (y2 y1) y8) -> (forall y10 : a0, (@IN a0 y10 y7) -> @HAS_SIZE a1 (y2 y10) y8) -> (forall y10 : type1413 a0 a1, forall y11 : nat, (forall y12 : a0, (@IN a0 y12 y7) -> @HAS_SIZE a1 (y10 y12) y11) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (y0 y7 y10)) (Nat.mul (@CARD a0 y7) y11)) -> (@IN a0 y6 y7) -> (@IN a1 y5 (y2 y6)) -> (y4 = (@pair a0 a1 y6 y5)) -> (y4 = (@pair a0 a1 y1 y3)) -> (@IN a1 y3 (y2 y1)) -> (forall y10 : a0, forall y11 : a1, forall y12 : a0, forall y13 : a1, ((@pair a0 a1 y10 y11) = (@pair a0 a1 y12 y13)) = ((y10 = y12) /\ (y11 = y13))) -> (forall y10 : a0, forall y11 : nat, forall y12 : a0, forall y13 : nat, ((@pair a0 nat y10 y11) = (@pair a0 nat y12 y13)) = ((y10 = y12) /\ (y11 = y13))) -> (forall y10 : a0, forall y11 : prod a0 a1, forall y12 : a0, forall y13 : prod a0 a1, ((@pair a0 (prod a0 a1) y10 y11) = (@pair a0 (prod a0 a1) y12 y13)) = ((y10 = y12) /\ (y11 = y13))) -> (forall y10 : nat, forall y11 : a1, forall y12 : nat, forall y13 : a1, ((@pair nat a1 y10 y11) = (@pair nat a1 y12 y13)) = ((y10 = y12) /\ (y11 = y13))) -> ~ (forall y10 : prod a0 a1, forall y11 : a1, forall y12 : prod a0 a1, forall y13 : a1, ((@pair (prod a0 a1) a1 y10 y11) = (@pair (prod a0 a1) a1 y12 y13)) = ((y10 = y12) /\ (y11 = y13)))).
Definition term1382 (a0 : Type') (a1 : Type') := (forall y0 : type621 a0 a1, (y0 = (fun y1 : a0 -> Prop => fun y2 : type1413 a0 a1 => fun y3 : prod a0 a1 => exists y4 : a0, exists y5 : a1, @SETSPEC (prod a0 a1) y3 ((@IN a0 y4 y1) /\ (@IN a1 y5 (y2 y4))) (@pair a0 a1 y4 y5))) -> (forall y1 : a0, forall y2 : type1413 a0 a1, forall y3 : a1, forall y4 : prod a0 a1, forall y5 : a1, forall y6 : a0, forall y7 : a0 -> Prop, forall y8 : nat, forall y9 : nat, (~ (@IN a0 y1 y7)) -> (@FINITE a0 y7) -> (y9 = (S (@CARD a0 y7))) -> (@HAS_SIZE a1 (y2 y1) y8) -> (forall y10 : a0, (@IN a0 y10 y7) -> @HAS_SIZE a1 (y2 y10) y8) -> (forall y10 : type1413 a0 a1, forall y11 : nat, (forall y12 : a0, (@IN a0 y12 y7) -> @HAS_SIZE a1 (y10 y12) y11) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y12 : prod a0 a1 => exists y13 : a0, exists y14 : a1, @SETSPEC (prod a0 a1) y12 ((@IN a0 y13 y7) /\ (@IN a1 y14 (y10 y13))) (@pair a0 a1 y13 y14))) (Nat.mul (@CARD a0 y7) y11)) -> (@IN a0 y6 y7) -> (@IN a1 y5 (y2 y6)) -> (y4 = (@pair a0 a1 y6 y5)) -> (y4 = (@pair a0 a1 y1 y3)) -> (@IN a1 y3 (y2 y1)) -> (forall y10 : a0, forall y11 : a1, forall y12 : a0, forall y13 : a1, ((@pair a0 a1 y10 y11) = (@pair a0 a1 y12 y13)) = ((y10 = y12) /\ (y11 = y13))) -> (forall y10 : a0, forall y11 : nat, forall y12 : a0, forall y13 : nat, ((@pair a0 nat y10 y11) = (@pair a0 nat y12 y13)) = ((y10 = y12) /\ (y11 = y13))) -> (forall y10 : a0, forall y11 : prod a0 a1, forall y12 : a0, forall y13 : prod a0 a1, ((@pair a0 (prod a0 a1) y10 y11) = (@pair a0 (prod a0 a1) y12 y13)) = ((y10 = y12) /\ (y11 = y13))) -> (forall y10 : nat, forall y11 : a1, forall y12 : nat, forall y13 : a1, ((@pair nat a1 y10 y11) = (@pair nat a1 y12 y13)) = ((y10 = y12) /\ (y11 = y13))) -> ~ (forall y10 : prod a0 a1, forall y11 : a1, forall y12 : prod a0 a1, forall y13 : a1, ((@pair (prod a0 a1) a1 y10 y11) = (@pair (prod a0 a1) a1 y12 y13)) = ((y10 = y12) /\ (y11 = y13)))) = ((fun y1 : type621 a0 a1 => forall y2 : a0, forall y3 : type1413 a0 a1, forall y4 : a1, forall y5 : prod a0 a1, forall y6 : a1, forall y7 : a0, forall y8 : a0 -> Prop, forall y9 : nat, forall y10 : nat, (~ (@IN a0 y2 y8)) -> (@FINITE a0 y8) -> (y10 = (S (@CARD a0 y8))) -> (@HAS_SIZE a1 (y3 y2) y9) -> (forall y11 : a0, (@IN a0 y11 y8) -> @HAS_SIZE a1 (y3 y11) y9) -> (forall y11 : type1413 a0 a1, forall y12 : nat, (forall y13 : a0, (@IN a0 y13 y8) -> @HAS_SIZE a1 (y11 y13) y12) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (y1 y8 y11)) (Nat.mul (@CARD a0 y8) y12)) -> (@IN a0 y7 y8) -> (@IN a1 y6 (y3 y7)) -> (y5 = (@pair a0 a1 y7 y6)) -> (y5 = (@pair a0 a1 y2 y4)) -> (@IN a1 y4 (y3 y2)) -> (forall y11 : a0, forall y12 : a1, forall y13 : a0, forall y14 : a1, ((@pair a0 a1 y11 y12) = (@pair a0 a1 y13 y14)) = ((y11 = y13) /\ (y12 = y14))) -> (forall y11 : a0, forall y12 : nat, forall y13 : a0, forall y14 : nat, ((@pair a0 nat y11 y12) = (@pair a0 nat y13 y14)) = ((y11 = y13) /\ (y12 = y14))) -> (forall y11 : a0, forall y12 : prod a0 a1, forall y13 : a0, forall y14 : prod a0 a1, ((@pair a0 (prod a0 a1) y11 y12) = (@pair a0 (prod a0 a1) y13 y14)) = ((y11 = y13) /\ (y12 = y14))) -> (forall y11 : nat, forall y12 : a1, forall y13 : nat, forall y14 : a1, ((@pair nat a1 y11 y12) = (@pair nat a1 y13 y14)) = ((y11 = y13) /\ (y12 = y14))) -> ~ (forall y11 : prod a0 a1, forall y12 : a1, forall y13 : prod a0 a1, forall y14 : a1, ((@pair (prod a0 a1) a1 y11 y12) = (@pair (prod a0 a1) a1 y13 y14)) = ((y11 = y13) /\ (y12 = y14)))) y0)) -> (forall y0 : a0, forall y1 : type1413 a0 a1, forall y2 : a1, forall y3 : prod a0 a1, forall y4 : a1, forall y5 : a0, forall y6 : a0 -> Prop, forall y7 : nat, forall y8 : nat, (~ (@IN a0 y0 y6)) -> (@FINITE a0 y6) -> (y8 = (S (@CARD a0 y6))) -> (@HAS_SIZE a1 (y1 y0) y7) -> (forall y9 : a0, (@IN a0 y9 y6) -> @HAS_SIZE a1 (y1 y9) y7) -> (forall y9 : type1413 a0 a1, forall y10 : nat, (forall y11 : a0, (@IN a0 y11 y6) -> @HAS_SIZE a1 (y9 y11) y10) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y11 : prod a0 a1 => exists y12 : a0, exists y13 : a1, @SETSPEC (prod a0 a1) y11 ((@IN a0 y12 y6) /\ (@IN a1 y13 (y9 y12))) (@pair a0 a1 y12 y13))) (Nat.mul (@CARD a0 y6) y10)) -> (@IN a0 y5 y6) -> (@IN a1 y4 (y1 y5)) -> (y3 = (@pair a0 a1 y5 y4)) -> (y3 = (@pair a0 a1 y0 y2)) -> (@IN a1 y2 (y1 y0)) -> (forall y9 : a0, forall y10 : a1, forall y11 : a0, forall y12 : a1, ((@pair a0 a1 y9 y10) = (@pair a0 a1 y11 y12)) = ((y9 = y11) /\ (y10 = y12))) -> (forall y9 : a0, forall y10 : nat, forall y11 : a0, forall y12 : nat, ((@pair a0 nat y9 y10) = (@pair a0 nat y11 y12)) = ((y9 = y11) /\ (y10 = y12))) -> (forall y9 : a0, forall y10 : prod a0 a1, forall y11 : a0, forall y12 : prod a0 a1, ((@pair a0 (prod a0 a1) y9 y10) = (@pair a0 (prod a0 a1) y11 y12)) = ((y9 = y11) /\ (y10 = y12))) -> (forall y9 : nat, forall y10 : a1, forall y11 : nat, forall y12 : a1, ((@pair nat a1 y9 y10) = (@pair nat a1 y11 y12)) = ((y9 = y11) /\ (y10 = y12))) -> ~ (forall y9 : prod a0 a1, forall y10 : a1, forall y11 : prod a0 a1, forall y12 : a1, ((@pair (prod a0 a1) a1 y9 y10) = (@pair (prod a0 a1) a1 y11 y12)) = ((y9 = y11) /\ (y10 = y12)))) = (forall y0 : type621 a0 a1, (y0 = (fun y1 : a0 -> Prop => fun y2 : type1413 a0 a1 => fun y3 : prod a0 a1 => exists y4 : a0, exists y5 : a1, @SETSPEC (prod a0 a1) y3 ((@IN a0 y4 y1) /\ (@IN a1 y5 (y2 y4))) (@pair a0 a1 y4 y5))) -> (fun y1 : type621 a0 a1 => forall y2 : a0, forall y3 : type1413 a0 a1, forall y4 : a1, forall y5 : prod a0 a1, forall y6 : a1, forall y7 : a0, forall y8 : a0 -> Prop, forall y9 : nat, forall y10 : nat, (~ (@IN a0 y2 y8)) -> (@FINITE a0 y8) -> (y10 = (S (@CARD a0 y8))) -> (@HAS_SIZE a1 (y3 y2) y9) -> (forall y11 : a0, (@IN a0 y11 y8) -> @HAS_SIZE a1 (y3 y11) y9) -> (forall y11 : type1413 a0 a1, forall y12 : nat, (forall y13 : a0, (@IN a0 y13 y8) -> @HAS_SIZE a1 (y11 y13) y12) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (y1 y8 y11)) (Nat.mul (@CARD a0 y8) y12)) -> (@IN a0 y7 y8) -> (@IN a1 y6 (y3 y7)) -> (y5 = (@pair a0 a1 y7 y6)) -> (y5 = (@pair a0 a1 y2 y4)) -> (@IN a1 y4 (y3 y2)) -> (forall y11 : a0, forall y12 : a1, forall y13 : a0, forall y14 : a1, ((@pair a0 a1 y11 y12) = (@pair a0 a1 y13 y14)) = ((y11 = y13) /\ (y12 = y14))) -> (forall y11 : a0, forall y12 : nat, forall y13 : a0, forall y14 : nat, ((@pair a0 nat y11 y12) = (@pair a0 nat y13 y14)) = ((y11 = y13) /\ (y12 = y14))) -> (forall y11 : a0, forall y12 : prod a0 a1, forall y13 : a0, forall y14 : prod a0 a1, ((@pair a0 (prod a0 a1) y11 y12) = (@pair a0 (prod a0 a1) y13 y14)) = ((y11 = y13) /\ (y12 = y14))) -> (forall y11 : nat, forall y12 : a1, forall y13 : nat, forall y14 : a1, ((@pair nat a1 y11 y12) = (@pair nat a1 y13 y14)) = ((y11 = y13) /\ (y12 = y14))) -> ~ (forall y11 : prod a0 a1, forall y12 : a1, forall y13 : prod a0 a1, forall y14 : a1, ((@pair (prod a0 a1) a1 y11 y12) = (@pair (prod a0 a1) a1 y13 y14)) = ((y11 = y13) /\ (y12 = y14)))) y0).
Definition term1920 (a0 : Type') (a1 : Type') (x0 : a0) := fun y0 : a1 => (fun y1 : a1 => forall y2 : a0, forall y3 : a1, (~ ((@pair a0 a1 x0 y1) = (@pair a0 a1 y2 y3))) \/ ((x0 = y2) /\ (y1 = y3))) y0.
Definition term1915 (a0 : Type') (a1 : Type') (x0 : a0) := fun y0 : a1 => (fun y1 : a1 => forall y2 : a0, forall y3 : a1, ((@pair a0 a1 x0 y1) = (@pair a0 a1 y2 y3)) \/ ((~ (x0 = y2)) \/ (~ (y1 = y3)))) y0.
Definition term1614 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : a0 -> Prop) (x2 : type1413 a0 a1) (x3 : type1207 a0 a1) (x4 : type1208 a0 a1) (x5 : prod a0 a1) := (~ (x0 x1 x2 x5)) \/ (@SETSPEC (prod a0 a1) x5 ((@IN a0 (x3 x5) x1) /\ (@IN a1 (x4 x5) (x2 (x3 x5)))) (@pair a0 a1 (x3 x5) (x4 x5))).
Definition term1379 (a0 : Type') (a1 : Type') := forall y0 : type621 a0 a1, (y0 = (fun y1 : a0 -> Prop => fun y2 : type1413 a0 a1 => fun y3 : prod a0 a1 => exists y4 : a0, exists y5 : a1, @SETSPEC (prod a0 a1) y3 ((@IN a0 y4 y1) /\ (@IN a1 y5 (y2 y4))) (@pair a0 a1 y4 y5))) -> (forall y1 : a0, forall y2 : type1413 a0 a1, forall y3 : a1, forall y4 : prod a0 a1, forall y5 : a1, forall y6 : a0, forall y7 : a0 -> Prop, forall y8 : nat, forall y9 : nat, (~ (@IN a0 y1 y7)) -> (@FINITE a0 y7) -> (y9 = (S (@CARD a0 y7))) -> (@HAS_SIZE a1 (y2 y1) y8) -> (forall y10 : a0, (@IN a0 y10 y7) -> @HAS_SIZE a1 (y2 y10) y8) -> (forall y10 : type1413 a0 a1, forall y11 : nat, (forall y12 : a0, (@IN a0 y12 y7) -> @HAS_SIZE a1 (y10 y12) y11) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y12 : prod a0 a1 => exists y13 : a0, exists y14 : a1, @SETSPEC (prod a0 a1) y12 ((@IN a0 y13 y7) /\ (@IN a1 y14 (y10 y13))) (@pair a0 a1 y13 y14))) (Nat.mul (@CARD a0 y7) y11)) -> (@IN a0 y6 y7) -> (@IN a1 y5 (y2 y6)) -> (y4 = (@pair a0 a1 y6 y5)) -> (y4 = (@pair a0 a1 y1 y3)) -> (@IN a1 y3 (y2 y1)) -> (forall y10 : a0, forall y11 : a1, forall y12 : a0, forall y13 : a1, ((@pair a0 a1 y10 y11) = (@pair a0 a1 y12 y13)) = ((y10 = y12) /\ (y11 = y13))) -> (forall y10 : a0, forall y11 : nat, forall y12 : a0, forall y13 : nat, ((@pair a0 nat y10 y11) = (@pair a0 nat y12 y13)) = ((y10 = y12) /\ (y11 = y13))) -> (forall y10 : a0, forall y11 : prod a0 a1, forall y12 : a0, forall y13 : prod a0 a1, ((@pair a0 (prod a0 a1) y10 y11) = (@pair a0 (prod a0 a1) y12 y13)) = ((y10 = y12) /\ (y11 = y13))) -> (forall y10 : nat, forall y11 : a1, forall y12 : nat, forall y13 : a1, ((@pair nat a1 y10 y11) = (@pair nat a1 y12 y13)) = ((y10 = y12) /\ (y11 = y13))) -> ~ (forall y10 : prod a0 a1, forall y11 : a1, forall y12 : prod a0 a1, forall y13 : a1, ((@pair (prod a0 a1) a1 y10 y11) = (@pair (prod a0 a1) a1 y12 y13)) = ((y10 = y12) /\ (y11 = y13)))) = (forall y1 : a0, forall y2 : type1413 a0 a1, forall y3 : a1, forall y4 : prod a0 a1, forall y5 : a1, forall y6 : a0, forall y7 : a0 -> Prop, forall y8 : nat, forall y9 : nat, (~ (@IN a0 y1 y7)) -> (@FINITE a0 y7) -> (y9 = (S (@CARD a0 y7))) -> (@HAS_SIZE a1 (y2 y1) y8) -> (forall y10 : a0, (@IN a0 y10 y7) -> @HAS_SIZE a1 (y2 y10) y8) -> (forall y10 : type1413 a0 a1, forall y11 : nat, (forall y12 : a0, (@IN a0 y12 y7) -> @HAS_SIZE a1 (y10 y12) y11) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (y0 y7 y10)) (Nat.mul (@CARD a0 y7) y11)) -> (@IN a0 y6 y7) -> (@IN a1 y5 (y2 y6)) -> (y4 = (@pair a0 a1 y6 y5)) -> (y4 = (@pair a0 a1 y1 y3)) -> (@IN a1 y3 (y2 y1)) -> (forall y10 : a0, forall y11 : a1, forall y12 : a0, forall y13 : a1, ((@pair a0 a1 y10 y11) = (@pair a0 a1 y12 y13)) = ((y10 = y12) /\ (y11 = y13))) -> (forall y10 : a0, forall y11 : nat, forall y12 : a0, forall y13 : nat, ((@pair a0 nat y10 y11) = (@pair a0 nat y12 y13)) = ((y10 = y12) /\ (y11 = y13))) -> (forall y10 : a0, forall y11 : prod a0 a1, forall y12 : a0, forall y13 : prod a0 a1, ((@pair a0 (prod a0 a1) y10 y11) = (@pair a0 (prod a0 a1) y12 y13)) = ((y10 = y12) /\ (y11 = y13))) -> (forall y10 : nat, forall y11 : a1, forall y12 : nat, forall y13 : a1, ((@pair nat a1 y10 y11) = (@pair nat a1 y12 y13)) = ((y10 = y12) /\ (y11 = y13))) -> ~ (forall y10 : prod a0 a1, forall y11 : a1, forall y12 : prod a0 a1, forall y13 : a1, ((@pair (prod a0 a1) a1 y10 y11) = (@pair (prod a0 a1) a1 y12 y13)) = ((y10 = y12) /\ (y11 = y13)))).
Definition term336 (a0 : Type') (a1 : Type') (x0 : prod a1 a0) (x1 : type1470 a0 a1) (x2 : a1) := fun y0 : a0 => (fun y1 : a0 => (x0 = (@pair a1 a0 x2 y1)) /\ (x1 x2 y1)) y0.
Definition term1492 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : a0 -> Prop) (x2 : type1413 a0 a1) := forall y0 : prod a0 a1, (fun y1 : prod a0 a1 => (~ (x0 x1 x2 y1)) \/ (exists y2 : a0, exists y3 : a1, @SETSPEC (prod a0 a1) y1 ((@IN a0 y2 x1) /\ (@IN a1 y3 (x2 y2))) (@pair a0 a1 y2 y3))) y0.
Definition term1487 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : a0 -> Prop) (x2 : type1413 a0 a1) := forall y0 : prod a0 a1, (fun y1 : prod a0 a1 => (x0 x1 x2 y1) \/ (forall y2 : a0, forall y3 : a1, ~ (@SETSPEC (prod a0 a1) y1 ((@IN a0 y2 x1) /\ (@IN a1 y3 (x2 y2))) (@pair a0 a1 y2 y3)))) y0.
Definition term368 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : a1) (x2 : prod a1 a0) (x3 : type1470 a0 a1) (x4 : a1) := exists y0 : a0, (forall y1 : a1, forall y2 : a0, (((~ (y1 = x4)) /\ (~ (x0 y1))) \/ (~ (x3 y1 y2))) \/ (~ (x2 = (@pair a1 a0 y1 y2)))) /\ ((fun y1 : a0 => (((x0 x1) /\ (x3 x1 y1)) /\ (x2 = (@pair a1 a0 x1 y1))) \/ ((x2 = (@pair a1 a0 x4 y1)) /\ (x3 x4 y1))) y0).
Definition term681 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) := fun y0 : nat => (fun y1 : nat => ((@CARD a0 x0) = y1) -> forall y2 : type1413 a0 a1, forall y3 : nat, (forall y4 : a0, (@IN a0 y4 x0) -> @HAS_SIZE a1 (y2 y4) y3) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y4 : prod a0 a1 => exists y5 : a0, exists y6 : a1, @SETSPEC (prod a0 a1) y4 ((@IN a0 y5 x0) /\ (@IN a1 y6 (y2 y5))) (@pair a0 a1 y5 y6))) (Nat.mul y1 y3)) y0.
Definition term1231 (a0 : Type') (a1 : Type') := (forall y0 : a0, forall y1 : nat, forall y2 : a0, forall y3 : nat, ((@pair a0 nat y0 y1) = (@pair a0 nat y2 y3)) = ((y0 = y2) /\ (y1 = y3))) -> (forall y0 : a0, forall y1 : prod a0 a1, forall y2 : a0, forall y3 : prod a0 a1, ((@pair a0 (prod a0 a1) y0 y1) = (@pair a0 (prod a0 a1) y2 y3)) = ((y0 = y2) /\ (y1 = y3))) -> (forall y0 : nat, forall y1 : a1, forall y2 : nat, forall y3 : a1, ((@pair nat a1 y0 y1) = (@pair nat a1 y2 y3)) = ((y0 = y2) /\ (y1 = y3))) -> (forall y0 : prod a0 a1, forall y1 : a1, forall y2 : prod a0 a1, forall y3 : a1, ((@pair (prod a0 a1) a1 y0 y1) = (@pair (prod a0 a1) a1 y2 y3)) = ((y0 = y2) /\ (y1 = y3))) -> False.
Definition term464 (a0 : Type') (a1 : Type') (x0 : a1) (x1 : type1470 a0 a1) (x2 : prod a1 a0) (x3 : a1) (x4 : a0) := @eq Prop ((~ (x3 = x0)) \/ ((~ (x1 x3 x4)) \/ (~ (x2 = (@pair a1 a0 x3 x4))))).
Definition term1055 (x0 : nat) := forall y0 : nat, (Nat.mul (S x0) y0) = (Nat.add (Nat.mul x0 y0) y0).
Definition term1799 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : type1413 a0 a1) (x2 : a0 -> Prop) (x3 : nat) := (fun y0 : nat => fun y1 : a0 => ((@IN a0 y1 x2) /\ (~ (@HAS_SIZE a1 (x1 y1) y0))) \/ (@HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (x0 x2 x1)) (Nat.mul (@CARD a0 x2) y0))) x3.
Definition term2081 (a0 : Type') (x0 : a0 -> Prop) (x1 : type686 a0) (x2 : type686 a0) (x3 : a0 -> Prop) := ~ ((~ (x3 = x0)) \/ ((~ (x2 = x1)) \/ (~ (@I ((a0 -> Prop) -> Prop) x2 x3)))).
Definition term565 (a0 : Type') (x0 : type686 a0) := ((x0 (@EMPTY a0)) /\ (forall y0 : a0, forall y1 : a0 -> Prop, ((x0 y1) /\ ((~ (@IN a0 y0 y1)) /\ (@FINITE a0 y1))) -> x0 (@INSERT a0 y0 y1))) -> forall y0 : a0 -> Prop, (@FINITE a0 y0) -> x0 y0.
Definition term1027 (a0 : Type') (x0 : a0) := imp (exists y0 : a0, (fun y1 : a0 => y1 = x0) y0).
Definition term1332 (a0 : Type') (x0 : a0) (x1 : a0) (x2 : nat) := forall y0 : nat, ((@pair a0 nat x0 x2) = (@pair a0 nat x1 y0)) = ((x0 = x1) /\ (x2 = y0)).
Definition term1489 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : a0 -> Prop) (x2 : type1413 a0 a1) := and (forall y0 : prod a0 a1, (fun y1 : prod a0 a1 => (x0 x1 x2 y1) \/ (forall y2 : a0, forall y3 : a1, ~ (@SETSPEC (prod a0 a1) y1 ((@IN a0 y2 x1) /\ (@IN a1 y3 (x2 y2))) (@pair a0 a1 y2 y3)))) y0).
Definition term326 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : prod a1 a0) (x2 : type1470 a0 a1) (x3 : a1) := fun y0 : a1 => ((fun y1 : a1 => exists y2 : a0, ((x0 y1) /\ (x2 y1 y2)) /\ (x1 = (@pair a1 a0 y1 y2))) y0) \/ (exists y1 : a0, (x1 = (@pair a1 a0 x3 y1)) /\ (x2 x3 y1)).
Definition term1076 (a0 : Type') (a1 : Type') (x0 : type1413 a0 a1) (x1 : a0) := @IMAGE a1 (prod a0 a1) (fun y0 : a1 => @pair a0 a1 x1 y0) (x0 x1).
Definition term188 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : type1470 a0 a1) (x2 : a1) := ~ (~ (forall y0 : prod a1 a0, (exists y1 : a1, exists y2 : a0, (((y1 = x2) \/ (x0 y1)) /\ (x1 y1 y2)) /\ (y0 = (@pair a1 a0 y1 y2))) = ((exists y1 : a1, exists y2 : a0, ((x0 y1) /\ (x1 y1 y2)) /\ (y0 = (@pair a1 a0 y1 y2))) \/ (exists y1 : a0, (y0 = (@pair a1 a0 x2 y1)) /\ (x1 x2 y1))))).
Definition term1158 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : prod a0 a1) (x2 : type1413 a0 a1) (x3 : a0) := (@IN (prod a0 a1) x1 (@GSPEC (prod a0 a1) (fun y0 : prod a0 a1 => exists y1 : a0, exists y2 : a1, @SETSPEC (prod a0 a1) y0 ((@IN a0 y1 x0) /\ (@IN a1 y2 (x2 y1))) (@pair a0 a1 y1 y2)))) /\ (@IN (prod a0 a1) x1 (@IMAGE a1 (prod a0 a1) (fun y0 : a1 => @pair a0 a1 x3 y0) (x2 x3))).
Definition term945 (a0 : Type') (a1 : Type') (x0 : prod a0 a1) := fun y0 : Prop => (fun y1 : Prop => fun y2 : prod a0 a1 => y1 /\ (x0 = y2)) y0.
Definition term76 (a0 : Type') (a1 : Type') (x0 : prod a1 a0) := fun y0 : Prop => (fun y1 : Prop => fun y2 : prod a1 a0 => y1 /\ (x0 = y2)) y0.
Definition term535 (x0 : Prop) (x1 : Prop) := @eq Prop ((fun y0 : Prop => y0 = (y0 /\ (x0 -> y0))) x1).
Definition term1372 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : type1413 a0 a1) (x2 : a0) := fun y0 : a1 => forall y1 : prod a0 a1, forall y2 : a1, forall y3 : a0, forall y4 : a0 -> Prop, forall y5 : nat, forall y6 : nat, (~ (@IN a0 x2 y4)) -> (@FINITE a0 y4) -> (y6 = (S (@CARD a0 y4))) -> (@HAS_SIZE a1 (x1 x2) y5) -> (forall y7 : a0, (@IN a0 y7 y4) -> @HAS_SIZE a1 (x1 y7) y5) -> (forall y7 : type1413 a0 a1, forall y8 : nat, (forall y9 : a0, (@IN a0 y9 y4) -> @HAS_SIZE a1 (y7 y9) y8) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (x0 y4 y7)) (Nat.mul (@CARD a0 y4) y8)) -> (@IN a0 y3 y4) -> (@IN a1 y2 (x1 y3)) -> (y1 = (@pair a0 a1 y3 y2)) -> (y1 = (@pair a0 a1 x2 y0)) -> (@IN a1 y0 (x1 x2)) -> (forall y7 : a0, forall y8 : a1, forall y9 : a0, forall y10 : a1, ((@pair a0 a1 y7 y8) = (@pair a0 a1 y9 y10)) = ((y7 = y9) /\ (y8 = y10))) -> (forall y7 : a0, forall y8 : nat, forall y9 : a0, forall y10 : nat, ((@pair a0 nat y7 y8) = (@pair a0 nat y9 y10)) = ((y7 = y9) /\ (y8 = y10))) -> (forall y7 : a0, forall y8 : prod a0 a1, forall y9 : a0, forall y10 : prod a0 a1, ((@pair a0 (prod a0 a1) y7 y8) = (@pair a0 (prod a0 a1) y9 y10)) = ((y7 = y9) /\ (y8 = y10))) -> (forall y7 : nat, forall y8 : a1, forall y9 : nat, forall y10 : a1, ((@pair nat a1 y7 y8) = (@pair nat a1 y9 y10)) = ((y7 = y9) /\ (y8 = y10))) -> ~ (forall y7 : prod a0 a1, forall y8 : a1, forall y9 : prod a0 a1, forall y10 : a1, ((@pair (prod a0 a1) a1 y7 y8) = (@pair (prod a0 a1) a1 y9 y10)) = ((y7 = y9) /\ (y8 = y10))).
Definition term1311 (a0 : Type') (a1 : Type') (x0 : prod a0 a1) := fun y0 : a1 => forall y1 : prod a0 a1, forall y2 : a1, ((@pair (prod a0 a1) a1 x0 y0) = (@pair (prod a0 a1) a1 y1 y2)) = ((x0 = y1) /\ (y0 = y2)).
Definition term1289 (a0 : Type') (a1 : Type') (x0 : type1413 a0 a1) (x1 : a0) := fun y0 : a1 => forall y1 : prod a0 a1, forall y2 : a1, forall y3 : a0, forall y4 : a0 -> Prop, forall y5 : nat, forall y6 : nat, (~ (@IN a0 x1 y4)) -> (@FINITE a0 y4) -> (y6 = (S (@CARD a0 y4))) -> (@HAS_SIZE a1 (x0 x1) y5) -> (forall y7 : a0, (@IN a0 y7 y4) -> @HAS_SIZE a1 (x0 y7) y5) -> (forall y7 : type1413 a0 a1, forall y8 : nat, (forall y9 : a0, (@IN a0 y9 y4) -> @HAS_SIZE a1 (y7 y9) y8) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y9 : prod a0 a1 => exists y10 : a0, exists y11 : a1, @SETSPEC (prod a0 a1) y9 ((@IN a0 y10 y4) /\ (@IN a1 y11 (y7 y10))) (@pair a0 a1 y10 y11))) (Nat.mul (@CARD a0 y4) y8)) -> (@IN a0 y3 y4) -> (@IN a1 y2 (x0 y3)) -> (y1 = (@pair a0 a1 y3 y2)) -> (y1 = (@pair a0 a1 x1 y0)) -> (@IN a1 y0 (x0 x1)) -> (forall y7 : a0, forall y8 : a1, forall y9 : a0, forall y10 : a1, ((@pair a0 a1 y7 y8) = (@pair a0 a1 y9 y10)) = ((y7 = y9) /\ (y8 = y10))) -> (forall y7 : a0, forall y8 : nat, forall y9 : a0, forall y10 : nat, ((@pair a0 nat y7 y8) = (@pair a0 nat y9 y10)) = ((y7 = y9) /\ (y8 = y10))) -> (forall y7 : a0, forall y8 : prod a0 a1, forall y9 : a0, forall y10 : prod a0 a1, ((@pair a0 (prod a0 a1) y7 y8) = (@pair a0 (prod a0 a1) y9 y10)) = ((y7 = y9) /\ (y8 = y10))) -> (forall y7 : nat, forall y8 : a1, forall y9 : nat, forall y10 : a1, ((@pair nat a1 y7 y8) = (@pair nat a1 y9 y10)) = ((y7 = y9) /\ (y8 = y10))) -> ~ (forall y7 : prod a0 a1, forall y8 : a1, forall y9 : prod a0 a1, forall y10 : a1, ((@pair (prod a0 a1) a1 y7 y8) = (@pair (prod a0 a1) a1 y9 y10)) = ((y7 = y9) /\ (y8 = y10))).
Definition term1288 (a0 : Type') (a1 : Type') (x0 : type1413 a0 a1) (x1 : a0) := fun y0 : a1 => forall y1 : prod a0 a1, forall y2 : a1, forall y3 : a0, forall y4 : a0 -> Prop, forall y5 : nat, forall y6 : nat, (~ (@IN a0 x1 y4)) -> (@FINITE a0 y4) -> (y6 = (S (@CARD a0 y4))) -> (@HAS_SIZE a1 (x0 x1) y5) -> (forall y7 : a0, (@IN a0 y7 y4) -> @HAS_SIZE a1 (x0 y7) y5) -> (forall y7 : type1413 a0 a1, forall y8 : nat, (forall y9 : a0, (@IN a0 y9 y4) -> @HAS_SIZE a1 (y7 y9) y8) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y9 : prod a0 a1 => exists y10 : a0, exists y11 : a1, @SETSPEC (prod a0 a1) y9 ((@IN a0 y10 y4) /\ (@IN a1 y11 (y7 y10))) (@pair a0 a1 y10 y11))) (Nat.mul (@CARD a0 y4) y8)) -> (@IN a0 y3 y4) -> (@IN a1 y2 (x0 y3)) -> (y1 = (@pair a0 a1 y3 y2)) -> (y1 = (@pair a0 a1 x1 y0)) -> (@IN a1 y0 (x0 x1)) -> (forall y7 : a0, forall y8 : a1, forall y9 : a0, forall y10 : a1, ((@pair a0 a1 y7 y8) = (@pair a0 a1 y9 y10)) = ((y7 = y9) /\ (y8 = y10))) -> (forall y7 : a0, forall y8 : nat, forall y9 : a0, forall y10 : nat, ((@pair a0 nat y7 y8) = (@pair a0 nat y9 y10)) = ((y7 = y9) /\ (y8 = y10))) -> (forall y7 : a0, forall y8 : prod a0 a1, forall y9 : a0, forall y10 : prod a0 a1, ((@pair a0 (prod a0 a1) y7 y8) = (@pair a0 (prod a0 a1) y9 y10)) = ((y7 = y9) /\ (y8 = y10))) -> (forall y7 : nat, forall y8 : a1, forall y9 : nat, forall y10 : a1, ((@pair nat a1 y7 y8) = (@pair nat a1 y9 y10)) = ((y7 = y9) /\ (y8 = y10))) -> (forall y7 : prod a0 a1, forall y8 : a1, forall y9 : prod a0 a1, forall y10 : a1, ((@pair (prod a0 a1) a1 y7 y8) = (@pair (prod a0 a1) a1 y9 y10)) = ((y7 = y9) /\ (y8 = y10))) -> False.
Definition term872 (a0 : Type') (a1 : Type') (x0 : prod a0 a1) (x1 : a0) (x2 : a0 -> Prop) (x3 : type1413 a0 a1) (x4 : a0) := fun y0 : a1 => @SETSPEC (prod a0 a1) x0 (((x4 = x1) \/ (@IN a0 x4 x2)) /\ (@IN a1 y0 (x3 x4))) (@pair a0 a1 x4 y0).
Definition term871 (a0 : Type') (a1 : Type') (x0 : prod a0 a1) (x1 : a0) (x2 : a0 -> Prop) (x3 : type1413 a0 a1) (x4 : a0) := fun y0 : a1 => @SETSPEC (prod a0 a1) x0 ((@IN a0 x4 (@INSERT a0 x1 x2)) /\ (@IN a1 y0 (x3 x4))) (@pair a0 a1 x4 y0).
Definition term1523 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) := forall y0 : a0 -> Prop, ((fun y1 : a0 -> Prop => forall y2 : type1413 a0 a1, forall y3 : prod a0 a1, (x0 y1 y2 y3) \/ (forall y4 : a0, forall y5 : a1, ~ (@SETSPEC (prod a0 a1) y3 ((@IN a0 y4 y1) /\ (@IN a1 y5 (y2 y4))) (@pair a0 a1 y4 y5)))) y0) /\ ((fun y1 : a0 -> Prop => forall y2 : type1413 a0 a1, forall y3 : prod a0 a1, (~ (x0 y1 y2 y3)) \/ (exists y4 : a0, exists y5 : a1, @SETSPEC (prod a0 a1) y3 ((@IN a0 y4 y1) /\ (@IN a1 y5 (y2 y4))) (@pair a0 a1 y4 y5))) y0).
Definition term1499 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : a0 -> Prop) := forall y0 : type1413 a0 a1, ((fun y1 : type1413 a0 a1 => forall y2 : prod a0 a1, (x0 x1 y1 y2) \/ (forall y3 : a0, forall y4 : a1, ~ (@SETSPEC (prod a0 a1) y2 ((@IN a0 y3 x1) /\ (@IN a1 y4 (y1 y3))) (@pair a0 a1 y3 y4)))) y0) /\ ((fun y1 : type1413 a0 a1 => forall y2 : prod a0 a1, (~ (x0 x1 y1 y2)) \/ (exists y3 : a0, exists y4 : a1, @SETSPEC (prod a0 a1) y2 ((@IN a0 y3 x1) /\ (@IN a1 y4 (y1 y3))) (@pair a0 a1 y3 y4))) y0).
Definition term718 (a0 : Type') (a1 : Type') := fun y0 : a0 -> Prop => (@FINITE a0 y0) -> (fun y1 : a0 -> Prop => forall y2 : nat, ((@CARD a0 y1) = y2) -> forall y3 : type1413 a0 a1, forall y4 : nat, (forall y5 : a0, (@IN a0 y5 y1) -> @HAS_SIZE a1 (y3 y5) y4) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y5 : prod a0 a1 => exists y6 : a0, exists y7 : a1, @SETSPEC (prod a0 a1) y5 ((@IN a0 y6 y1) /\ (@IN a1 y7 (y3 y6))) (@pair a0 a1 y6 y7))) (Nat.mul y2 y4)) y0.
Definition term2014 (a0 : Type') (a1 : Type') (x0 : a1) (x1 : a1) (x2 : a0) (x3 : a0) := (~ (~ ((@I (a1 -> prod a0 a1) (@I (a0 -> a1 -> prod a0 a1) (@pair a0 a1) x2) x0) = (@I (a1 -> prod a0 a1) (@I (a0 -> a1 -> prod a0 a1) (@pair a0 a1) x3) x1)))) -> x2 = x3.
Definition term902 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a0 -> Prop) := fun y0 : nat => ((S (@CARD a0 x1)) = y0) -> forall y1 : type1413 a0 a1, forall y2 : nat, (forall y3 : a0, ((y3 = x0) \/ (@IN a0 y3 x1)) -> @HAS_SIZE a1 (y1 y3) y2) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y3 : prod a0 a1 => exists y4 : a0, exists y5 : a1, @SETSPEC (prod a0 a1) y3 (((y4 = x0) \/ (@IN a0 y4 x1)) /\ (@IN a1 y5 (y1 y4))) (@pair a0 a1 y4 y5))) (Nat.mul y0 y2).
Definition term901 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a0 -> Prop) := fun y0 : nat => ((@CARD a0 (@INSERT a0 x0 x1)) = y0) -> forall y1 : type1413 a0 a1, forall y2 : nat, (forall y3 : a0, (@IN a0 y3 (@INSERT a0 x0 x1)) -> @HAS_SIZE a1 (y1 y3) y2) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y3 : prod a0 a1 => exists y4 : a0, exists y5 : a1, @SETSPEC (prod a0 a1) y3 ((@IN a0 y4 (@INSERT a0 x0 x1)) /\ (@IN a1 y5 (y1 y4))) (@pair a0 a1 y4 y5))) (Nat.mul y0 y2).
Definition term797 (a0 : Type') (a1 : Type') := fun y0 : nat => ((@CARD a0 (@EMPTY a0)) = y0) -> forall y1 : type1413 a0 a1, forall y2 : nat, (forall y3 : a0, (@IN a0 y3 (@EMPTY a0)) -> @HAS_SIZE a1 (y1 y3) y2) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y3 : prod a0 a1 => exists y4 : a0, exists y5 : a1, @SETSPEC (prod a0 a1) y3 ((@IN a0 y4 (@EMPTY a0)) /\ (@IN a1 y5 (y1 y4))) (@pair a0 a1 y4 y5))) (Nat.mul y0 y2).
Definition term675 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) := fun y0 : nat => ((@CARD a0 x0) = y0) -> forall y1 : type1413 a0 a1, forall y2 : nat, (forall y3 : a0, (@IN a0 y3 x0) -> @HAS_SIZE a1 (y1 y3) y2) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y3 : prod a0 a1 => exists y4 : a0, exists y5 : a1, @SETSPEC (prod a0 a1) y3 ((@IN a0 y4 x0) /\ (@IN a1 y5 (y1 y4))) (@pair a0 a1 y4 y5))) (Nat.mul y0 y2).
Definition term1189 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : type1413 a0 a1) (x2 : prod a0 a1) (x3 : a0) := exists y0 : a1, ((@IN a0 x3 x0) /\ (@IN a1 y0 (x1 x3))) /\ (x2 = (@pair a0 a1 x3 y0)).
Definition term1064 (a0 : Type') (x0 : a0 -> Prop) := Nat.mul (S (@CARD a0 x0)).
Definition term920 (a0 : Type') (a1 : Type') (x0 : type1210 a0 a1) := @HAS_SIZE (prod a0 a1) x0 (NUMERAL 0).
Definition term1552 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : prod a0 a1) (x2 : a0 -> Prop) (x3 : type1413 a0 a1) (x4 : a0) := (~ (x0 x2 x3 x1)) \/ ((fun y0 : a0 => exists y1 : a1, @SETSPEC (prod a0 a1) x1 ((@IN a0 y0 x2) /\ (@IN a1 y1 (x3 y0))) (@pair a0 a1 y0 y1)) x4).
Definition term183 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : type1470 a0 a1) (x2 : a1) := (~ (forall y0 : prod a1 a0, (exists y1 : a1, exists y2 : a0, (((y1 = x2) \/ (x0 y1)) /\ (x1 y1 y2)) /\ (y0 = (@pair a1 a0 y1 y2))) = ((exists y1 : a1, exists y2 : a0, ((x0 y1) /\ (x1 y1 y2)) /\ (y0 = (@pair a1 a0 y1 y2))) \/ (exists y1 : a0, (y0 = (@pair a1 a0 x2 y1)) /\ (x1 x2 y1))))) -> False.
Definition term1709 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : type619 a0 a1) (x2 : a0 -> Prop) (x3 : type465 a0 a1) := (fun y0 : type465 a0 a1 => forall y1 : type1413 a0 a1, forall y2 : prod a0 a1, (~ (x0 x2 y1 y2)) \/ (@SETSPEC (prod a0 a1) y2 ((@IN a0 (x1 x2 y1 y2) x2) /\ (@IN a1 (y0 y1 y2) (y1 (x1 x2 y1 y2)))) (@pair a0 a1 (x1 x2 y1 y2) (y0 y1 y2)))) x3.
Definition term1085 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a0) (x2 : a1) (x3 : a1) := (x0 = x1) /\ (x2 = x3).
Definition term411 (a0 : Type') (a1 : Type') (x0 : a1) (x1 : a1 -> Prop) (x2 : prod a1 a0) (x3 : type1470 a0 a1) (x4 : a1) (x5 : a0) := or ((fun y0 : a0 => ((((x0 = x4) \/ (x1 x0)) /\ (x3 x0 y0)) /\ (x2 = (@pair a1 a0 x0 y0))) /\ ((forall y1 : a1, forall y2 : a0, ((~ (x1 y1)) \/ (~ (x3 y1 y2))) \/ (~ (x2 = (@pair a1 a0 y1 y2)))) /\ (forall y1 : a0, (~ (x2 = (@pair a1 a0 x4 y1))) \/ (~ (x3 x4 y1))))) x5).
Definition term478 (a0 : Type') (a1 : Type') (x0 : type1470 a0 a1) (x1 : a1) (x2 : a0) (x3 : a1) (x4 : a0) := (~ (x0 x3 x4)) \/ (~ ((@pair a1 a0 x1 x2) = (@pair a1 a0 x3 x4))).
Definition term1532 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) := @eq Prop (forall y0 : a0 -> Prop, ((fun y1 : a0 -> Prop => forall y2 : type1413 a0 a1, forall y3 : prod a0 a1, (x0 y1 y2 y3) \/ (forall y4 : a0, forall y5 : a1, ~ (@SETSPEC (prod a0 a1) y3 ((@IN a0 y4 y1) /\ (@IN a1 y5 (y2 y4))) (@pair a0 a1 y4 y5)))) y0) /\ ((fun y1 : a0 -> Prop => forall y2 : type1413 a0 a1, forall y3 : prod a0 a1, (~ (x0 y1 y2 y3)) \/ (exists y4 : a0, exists y5 : a1, @SETSPEC (prod a0 a1) y3 ((@IN a0 y4 y1) /\ (@IN a1 y5 (y2 y4))) (@pair a0 a1 y4 y5))) y0)).
Definition term1508 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : a0 -> Prop) := @eq Prop (forall y0 : type1413 a0 a1, ((fun y1 : type1413 a0 a1 => forall y2 : prod a0 a1, (x0 x1 y1 y2) \/ (forall y3 : a0, forall y4 : a1, ~ (@SETSPEC (prod a0 a1) y2 ((@IN a0 y3 x1) /\ (@IN a1 y4 (y1 y3))) (@pair a0 a1 y3 y4)))) y0) /\ ((fun y1 : type1413 a0 a1 => forall y2 : prod a0 a1, (~ (x0 x1 y1 y2)) \/ (exists y3 : a0, exists y4 : a1, @SETSPEC (prod a0 a1) y2 ((@IN a0 y3 x1) /\ (@IN a1 y4 (y1 y3))) (@pair a0 a1 y3 y4))) y0)).
Definition term664 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : nat) := @eq Prop (forall y0 : type1413 a0 a1, ((@CARD a0 x0) = x1) -> (fun y1 : type1413 a0 a1 => forall y2 : nat, (forall y3 : a0, (@IN a0 y3 x0) -> @HAS_SIZE a1 (y1 y3) y2) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y3 : prod a0 a1 => exists y4 : a0, exists y5 : a1, @SETSPEC (prod a0 a1) y3 ((@IN a0 y4 x0) /\ (@IN a1 y5 (y1 y4))) (@pair a0 a1 y4 y5))) (Nat.mul x1 y2)) y0).
Definition term652 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : nat) := @eq Prop (forall y0 : type1413 a0 a1, (@FINITE a0 x0) -> (fun y1 : type1413 a0 a1 => ((@CARD a0 x0) = x1) -> forall y2 : nat, (forall y3 : a0, (@IN a0 y3 x0) -> @HAS_SIZE a1 (y1 y3) y2) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y3 : prod a0 a1 => exists y4 : a0, exists y5 : a1, @SETSPEC (prod a0 a1) y3 ((@IN a0 y4 x0) /\ (@IN a1 y5 (y1 y4))) (@pair a0 a1 y4 y5))) (Nat.mul x1 y2)) y0).
Definition term699 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a0 -> Prop) := imp (((fun y0 : a0 -> Prop => forall y1 : nat, ((@CARD a0 y0) = y1) -> forall y2 : type1413 a0 a1, forall y3 : nat, (forall y4 : a0, (@IN a0 y4 y0) -> @HAS_SIZE a1 (y2 y4) y3) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y4 : prod a0 a1 => exists y5 : a0, exists y6 : a1, @SETSPEC (prod a0 a1) y4 ((@IN a0 y5 y0) /\ (@IN a1 y6 (y2 y5))) (@pair a0 a1 y5 y6))) (Nat.mul y1 y3)) x1) /\ ((~ (@IN a0 x0 x1)) /\ (@FINITE a0 x1))).
Definition term1582 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : a0 -> Prop) (x2 : type1413 a0 a1) (x3 : prod a0 a1) := fun y0 : a0 => (fun y1 : prod a0 a1 => fun y2 : a0 => exists y3 : a1, (~ (x0 x1 x2 y1)) \/ (@SETSPEC (prod a0 a1) y1 ((@IN a0 y2 x1) /\ (@IN a1 y3 (x2 y2))) (@pair a0 a1 y2 y3))) x3 y0.
Definition term1973 (a0 : Type') (a1 : Type') := and (forall y0 : a0, forall y1 : a1, forall y2 : a0, forall y3 : a1, ((@I (a1 -> prod a0 a1) (@I (a0 -> a1 -> prod a0 a1) (@pair a0 a1) y0) y1) = (@I (a1 -> prod a0 a1) (@I (a0 -> a1 -> prod a0 a1) (@pair a0 a1) y2) y3)) \/ ((~ (y0 = y2)) \/ (~ (y1 = y3)))).
Definition term1941 (a0 : Type') (a1 : Type') := and (forall y0 : a0, forall y1 : a1, forall y2 : a0, forall y3 : a1, ((@pair a0 a1 y0 y1) = (@pair a0 a1 y2 y3)) \/ ((~ (y0 = y2)) \/ (~ (y1 = y3)))).
Definition term1897 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a1) := and (forall y0 : a0, forall y1 : a1, ((@pair a0 a1 x0 x1) = (@pair a0 a1 y0 y1)) \/ ((~ (x0 = y0)) \/ (~ (x1 = y1)))).
Definition term1784 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : type1413 a0 a1) (x2 : a0 -> Prop) (x3 : nat) := @eq Prop ((exists y0 : a0, (@IN a0 y0 x2) /\ (~ (@HAS_SIZE a1 (x1 y0) x3))) \/ (@HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (x0 x2 x1)) (Nat.mul (@CARD a0 x2) x3))).
Definition term1783 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : type1413 a0 a1) (x2 : a0 -> Prop) (x3 : nat) := @eq Prop ((exists y0 : a0, (fun y1 : a0 => (@IN a0 y1 x2) /\ (~ (@HAS_SIZE a1 (x1 y1) x3))) y0) \/ (@HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (x0 x2 x1)) (Nat.mul (@CARD a0 x2) x3))).
Definition term2094 (a0 : Type') (x0 : a0) (x1 : a0) (x2 : a0 -> Prop) := ((@I (a0 -> (a0 -> Prop) -> Prop) (@IN a0) x1) = (@I (a0 -> (a0 -> Prop) -> Prop) (@IN a0) x0)) /\ (@I ((a0 -> Prop) -> Prop) (@I (a0 -> (a0 -> Prop) -> Prop) (@IN a0) x1) x2).
Definition term190 (a0 : Type') (a1 : Type') (x0 : type1470 a0 a1) (x1 : a1) := fun y0 : a1 -> Prop => (~ (forall y1 : prod a1 a0, (exists y2 : a1, exists y3 : a0, (((y2 = x1) \/ (y0 y2)) /\ (x0 y2 y3)) /\ (y1 = (@pair a1 a0 y2 y3))) = ((exists y2 : a1, exists y3 : a0, ((y0 y2) /\ (x0 y2 y3)) /\ (y1 = (@pair a1 a0 y2 y3))) \/ (exists y2 : a0, (y1 = (@pair a1 a0 x1 y2)) /\ (x0 x1 y2))))) -> False.
Definition term455 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : type1470 a0 a1) (x2 : a1) (x3 : a0) (x4 : a1) (x5 : a0) := (fun y0 : prod a1 a0 => (~ (x0 x2)) \/ ((~ (x1 x2 x3)) \/ (~ (y0 = (@pair a1 a0 x2 x3))))) (@pair a1 a0 x4 x5).
Definition term862 (a0 : Type') (a1 : Type') (x0 : nat) (x1 : a0) (x2 : a0 -> Prop) (x3 : type1413 a0 a1) (x4 : nat) (x5 : Prop) := ((forall y0 : a0, (@IN a0 y0 (@INSERT a0 x1 x2)) -> @HAS_SIZE a1 (x3 y0) x4) = (forall y0 : a0, ((y0 = x1) \/ (@IN a0 y0 x2)) -> @HAS_SIZE a1 (x3 y0) x4)) -> ((forall y0 : a0, ((y0 = x1) \/ (@IN a0 y0 x2)) -> @HAS_SIZE a1 (x3 y0) x4) -> (@HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y0 : prod a0 a1 => exists y1 : a0, exists y2 : a1, @SETSPEC (prod a0 a1) y0 ((@IN a0 y1 (@INSERT a0 x1 x2)) /\ (@IN a1 y2 (x3 y1))) (@pair a0 a1 y1 y2))) (Nat.mul x0 x4)) = x5) -> ((forall y0 : a0, (@IN a0 y0 (@INSERT a0 x1 x2)) -> @HAS_SIZE a1 (x3 y0) x4) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y0 : prod a0 a1 => exists y1 : a0, exists y2 : a1, @SETSPEC (prod a0 a1) y0 ((@IN a0 y1 (@INSERT a0 x1 x2)) /\ (@IN a1 y2 (x3 y1))) (@pair a0 a1 y1 y2))) (Nat.mul x0 x4)) = ((forall y0 : a0, ((y0 = x1) \/ (@IN a0 y0 x2)) -> @HAS_SIZE a1 (x3 y0) x4) -> x5).
Definition term2003 (a0 : Type') (x0 : type1364 a0) (x1 : a0) (x2 : type1364 a0) (x3 : a0) := (~ (x0 = x2)) \/ ((@I (a0 -> (a0 -> Prop) -> Prop) x0 x1) = (@I (a0 -> (a0 -> Prop) -> Prop) x2 x3)).
Definition term145 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : type1470 a0 a1) (x2 : prod a1 a0) (x3 : a1) (x4 : a0) := (fun y0 : prod a1 a0 => (fun y1 : prod a1 a0 => ((x0 x3) /\ (x1 x3 x4)) /\ (x2 = y1)) y0) (@pair a1 a0 x3 x4).
Definition term1116 (a0 : Type') (a1 : Type') (x0 : type1413 a0 a1) (x1 : a1) (x2 : a0) (x3 : a1) := (@IN a1 x1 (x0 x2)) /\ ((@IN a1 x3 (x0 x2)) /\ (((fun y0 : a1 => @pair a0 a1 x2 y0) x1) = ((fun y0 : a1 => @pair a0 a1 x2 y0) x3))).
Definition term244 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : type1470 a0 a1) (x2 : prod a1 a0) (x3 : a1) (x4 : a0) := ~ ((fun y0 : a0 => ((x0 x3) /\ (x1 x3 y0)) /\ (x2 = (@pair a1 a0 x3 y0))) x4).
Definition term1481 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : a0 -> Prop) (x2 : type1413 a0 a1) (x3 : prod a0 a1) := (fun y0 : prod a0 a1 => (~ (x0 x1 x2 y0)) \/ (exists y1 : a0, exists y2 : a1, @SETSPEC (prod a0 a1) y0 ((@IN a0 y1 x1) /\ (@IN a1 y2 (x2 y1))) (@pair a0 a1 y1 y2))) x3.
Definition term472 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : type1470 a0 a1) (x2 : a1) (x3 : a0) := (((@pair a1 a0 x2 x0) = (@pair a1 a0 x2 x3)) /\ (x1 x2 x3)) -> False.
Definition term1205 (a0 : Type') (a1 : Type') (x0 : prod a0 a1) (x1 : type1413 a0 a1) (x2 : a0) := exists y0 : a1, (x0 = (@pair a0 a1 x2 y0)) /\ (@IN a1 y0 (x1 x2)).
Definition term1198 (a0 : Type') (a1 : Type') (x0 : prod a0 a1) (x1 : type1413 a0 a1) (x2 : a0) := exists y0 : a1, (x0 = ((fun y1 : a1 => @pair a0 a1 x2 y1) y0)) /\ (@IN a1 y0 (x1 x2)).
Definition term449 (a0 : Type') (a1 : Type') (x0 : type1470 a0 a1) (x1 : a0) (x2 : a1) (x3 : a0) := (fun y0 : prod a1 a0 => (~ (y0 = (@pair a1 a0 x2 x1))) \/ (~ (x0 x2 x1))) (@pair a1 a0 x2 x3).
Definition term267 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : prod a1 a0) (x2 : type1470 a0 a1) (x3 : a1) := (forall y0 : a1, forall y1 : a0, ((~ (x0 y0)) \/ (~ (x2 y0 y1))) \/ (~ (x1 = (@pair a1 a0 y0 y1)))) /\ (forall y0 : a0, (~ (x1 = (@pair a1 a0 x3 y0))) \/ (~ (x2 x3 y0))).
Definition term1153 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : type1413 a0 a1) (x2 : a0) := @INTER (prod a0 a1) (@GSPEC (prod a0 a1) (fun y0 : prod a0 a1 => exists y1 : a0, exists y2 : a1, @SETSPEC (prod a0 a1) y0 ((@IN a0 y1 x0) /\ (@IN a1 y2 (x1 y1))) (@pair a0 a1 y1 y2))) (@IMAGE a1 (prod a0 a1) (fun y0 : a1 => @pair a0 a1 x2 y0) (x1 x2)).
Definition term388 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : prod a1 a0) (x2 : type1470 a0 a1) (x3 : a1) (x4 : a1) := (fun y0 : a1 => exists y1 : a0, (forall y2 : a1, forall y3 : a0, (((~ (y2 = x3)) /\ (~ (x0 y2))) \/ (~ (x2 y2 y3))) \/ (~ (x1 = (@pair a1 a0 y2 y3)))) /\ ((((x0 y0) /\ (x2 y0 y1)) /\ (x1 = (@pair a1 a0 y0 y1))) \/ ((x1 = (@pair a1 a0 x3 y1)) /\ (x2 x3 y1)))) x4.
Definition term384 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : prod a1 a0) (x2 : type1470 a0 a1) (x3 : a1) (x4 : a1) := (fun y0 : a1 => exists y1 : a0, ((((y0 = x3) \/ (x0 y0)) /\ (x2 y0 y1)) /\ (x1 = (@pair a1 a0 y0 y1))) /\ ((forall y2 : a1, forall y3 : a0, ((~ (x0 y2)) \/ (~ (x2 y2 y3))) \/ (~ (x1 = (@pair a1 a0 y2 y3)))) /\ (forall y2 : a0, (~ (x1 = (@pair a1 a0 x3 y2))) \/ (~ (x2 x3 y2))))) x4.
Definition term357 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : prod a1 a0) (x2 : type1470 a0 a1) (x3 : a1) (x4 : a1) := (fun y0 : a1 => exists y1 : a0, (((x0 y0) /\ (x2 y0 y1)) /\ (x1 = (@pair a1 a0 y0 y1))) \/ ((x1 = (@pair a1 a0 x3 y1)) /\ (x2 x3 y1))) x4.
Definition term229 (a0 : Type') (a1 : Type') (x0 : a1) (x1 : a1 -> Prop) (x2 : type1470 a0 a1) (x3 : prod a1 a0) (x4 : a1) := (fun y0 : a1 => exists y1 : a0, (((y0 = x0) \/ (x1 y0)) /\ (x2 y0 y1)) /\ (x3 = (@pair a1 a0 y0 y1))) x4.
Definition term1832 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : a0 -> Prop) (x2 : type471 a0 a1) (x3 : type1413 a0 a1) := (fun y0 : type1413 a0 a1 => fun y1 : nat -> a0 => forall y2 : nat, ((@IN a0 (y1 y2) x1) /\ (~ (@HAS_SIZE a1 (y0 (y1 y2)) y2))) \/ (@HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (x0 x1 y0)) (Nat.mul (@CARD a0 x1) y2))) x3 (x2 x3).
Definition term1716 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : type619 a0 a1) (x2 : type620 a0 a1) (x3 : a0 -> Prop) := (fun y0 : a0 -> Prop => fun y1 : type465 a0 a1 => forall y2 : type1413 a0 a1, forall y3 : prod a0 a1, (~ (x0 y0 y2 y3)) \/ (@SETSPEC (prod a0 a1) y3 ((@IN a0 (x1 y0 y2 y3) y0) /\ (@IN a1 (y1 y2 y3) (y2 (x1 y0 y2 y3)))) (@pair a0 a1 (x1 y0 y2 y3) (y1 y2 y3)))) x3 (x2 x3).
Definition term1639 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : a0 -> Prop) (x2 : type464 a0 a1) (x3 : type1413 a0 a1) := (fun y0 : type1413 a0 a1 => fun y1 : type1207 a0 a1 => exists y2 : type1208 a0 a1, forall y3 : prod a0 a1, (~ (x0 x1 y0 y3)) \/ (@SETSPEC (prod a0 a1) y3 ((@IN a0 (y1 y3) x1) /\ (@IN a1 (y2 y3) (y0 (y1 y3)))) (@pair a0 a1 (y1 y3) (y2 y3)))) x3 (x2 x3).
Definition term1118 (a0 : Type') (a1 : Type') (x0 : type1413 a0 a1) (x1 : a0) (x2 : a1) (x3 : a1) (x4 : Prop) := forall y0 : Prop, (((@IN a1 x2 (x0 x1)) /\ ((@IN a1 x3 (x0 x1)) /\ (((fun y1 : a1 => @pair a0 a1 x1 y1) x2) = ((fun y1 : a1 => @pair a0 a1 x1 y1) x3)))) = x4) -> (x4 -> (x2 = x3) = y0) -> (((@IN a1 x2 (x0 x1)) /\ ((@IN a1 x3 (x0 x1)) /\ (((fun y1 : a1 => @pair a0 a1 x1 y1) x2) = ((fun y1 : a1 => @pair a0 a1 x1 y1) x3)))) -> x2 = x3) = (x4 -> y0).
Definition term1102 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : type1413 a0 a1) (x2 : a0) (x3 : nat) (x4 : Prop) := forall y0 : Prop, ((@IN a0 x2 x0) = x4) -> (x4 -> (@HAS_SIZE a1 (x1 x2) x3) = y0) -> ((@IN a0 x2 x0) -> @HAS_SIZE a1 (x1 x2) x3) = (x4 -> y0).
Definition term1032 (a0 : Type') (a1 : Type') (x0 : type1413 a0 a1) (x1 : a0) (x2 : nat) (x3 : Prop) := forall y0 : Prop, ((exists y1 : a0, y1 = x1) = x3) -> (x3 -> (@HAS_SIZE a1 (x0 x1) x2) = y0) -> ((exists y1 : a0, y1 = x1) -> @HAS_SIZE a1 (x0 x1) x2) = (x3 -> y0).
Definition term1004 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : type1413 a0 a1) (x2 : a0) (x3 : nat) (x4 : Prop) := forall y0 : Prop, ((x2 = x0) = x4) -> (x4 -> (@HAS_SIZE a1 (x1 x2) x3) = y0) -> ((x2 = x0) -> @HAS_SIZE a1 (x1 x2) x3) = (x4 -> y0).
Definition term977 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a0 -> Prop) (x2 : type1413 a0 a1) (x3 : nat) (x4 : nat) (x5 : Prop) := forall y0 : Prop, ((forall y1 : a0, ((y1 = x0) -> @HAS_SIZE a1 (x2 y1) x4) /\ ((@IN a0 y1 x1) -> @HAS_SIZE a1 (x2 y1) x4)) = x5) -> (x5 -> (@HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y1 : prod a0 a1 => exists y2 : a0, exists y3 : a1, @SETSPEC (prod a0 a1) y1 (((y2 = x0) \/ (@IN a0 y2 x1)) /\ (@IN a1 y3 (x2 y2))) (@pair a0 a1 y2 y3))) (Nat.mul x3 x4)) = y0) -> ((forall y1 : a0, ((y1 = x0) -> @HAS_SIZE a1 (x2 y1) x4) /\ ((@IN a0 y1 x1) -> @HAS_SIZE a1 (x2 y1) x4)) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y1 : prod a0 a1 => exists y2 : a0, exists y3 : a1, @SETSPEC (prod a0 a1) y1 (((y2 = x0) \/ (@IN a0 y2 x1)) /\ (@IN a1 y3 (x2 y2))) (@pair a0 a1 y2 y3))) (Nat.mul x3 x4)) = (x5 -> y0).
Definition term850 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a0 -> Prop) (x2 : type1413 a0 a1) (x3 : a0) (x4 : nat) (x5 : Prop) := forall y0 : Prop, ((@IN a0 x3 (@INSERT a0 x0 x1)) = x5) -> (x5 -> (@HAS_SIZE a1 (x2 x3) x4) = y0) -> ((@IN a0 x3 (@INSERT a0 x0 x1)) -> @HAS_SIZE a1 (x2 x3) x4) = (x5 -> y0).
Definition term845 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a0 -> Prop) (x2 : type1413 a0 a1) (x3 : nat) (x4 : nat) (x5 : Prop) := forall y0 : Prop, ((forall y1 : a0, (@IN a0 y1 (@INSERT a0 x0 x1)) -> @HAS_SIZE a1 (x2 y1) x4) = x5) -> (x5 -> (@HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y1 : prod a0 a1 => exists y2 : a0, exists y3 : a1, @SETSPEC (prod a0 a1) y1 ((@IN a0 y2 (@INSERT a0 x0 x1)) /\ (@IN a1 y3 (x2 y2))) (@pair a0 a1 y2 y3))) (Nat.mul x3 x4)) = y0) -> ((forall y1 : a0, (@IN a0 y1 (@INSERT a0 x0 x1)) -> @HAS_SIZE a1 (x2 y1) x4) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y1 : prod a0 a1 => exists y2 : a0, exists y3 : a1, @SETSPEC (prod a0 a1) y1 ((@IN a0 y2 (@INSERT a0 x0 x1)) /\ (@IN a1 y3 (x2 y2))) (@pair a0 a1 y2 y3))) (Nat.mul x3 x4)) = (x5 -> y0).
Definition term813 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a0 -> Prop) (x2 : nat) (x3 : Prop) := forall y0 : Prop, (((@CARD a0 (@INSERT a0 x0 x1)) = x2) = x3) -> (x3 -> (forall y1 : type1413 a0 a1, forall y2 : nat, (forall y3 : a0, (@IN a0 y3 (@INSERT a0 x0 x1)) -> @HAS_SIZE a1 (y1 y3) y2) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y3 : prod a0 a1 => exists y4 : a0, exists y5 : a1, @SETSPEC (prod a0 a1) y3 ((@IN a0 y4 (@INSERT a0 x0 x1)) /\ (@IN a1 y5 (y1 y4))) (@pair a0 a1 y4 y5))) (Nat.mul x2 y2)) = y0) -> (((@CARD a0 (@INSERT a0 x0 x1)) = x2) -> forall y1 : type1413 a0 a1, forall y2 : nat, (forall y3 : a0, (@IN a0 y3 (@INSERT a0 x0 x1)) -> @HAS_SIZE a1 (y1 y3) y2) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y3 : prod a0 a1 => exists y4 : a0, exists y5 : a1, @SETSPEC (prod a0 a1) y3 ((@IN a0 y4 (@INSERT a0 x0 x1)) /\ (@IN a1 y5 (y1 y4))) (@pair a0 a1 y4 y5))) (Nat.mul x2 y2)) = (x3 -> y0).
Definition term803 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a0 -> Prop) (x2 : Prop) := forall y0 : Prop, (((forall y1 : nat, ((@CARD a0 x1) = y1) -> forall y2 : type1413 a0 a1, forall y3 : nat, (forall y4 : a0, (@IN a0 y4 x1) -> @HAS_SIZE a1 (y2 y4) y3) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y4 : prod a0 a1 => exists y5 : a0, exists y6 : a1, @SETSPEC (prod a0 a1) y4 ((@IN a0 y5 x1) /\ (@IN a1 y6 (y2 y5))) (@pair a0 a1 y5 y6))) (Nat.mul y1 y3)) /\ ((~ (@IN a0 x0 x1)) /\ (@FINITE a0 x1))) = x2) -> (x2 -> (forall y1 : nat, ((@CARD a0 (@INSERT a0 x0 x1)) = y1) -> forall y2 : type1413 a0 a1, forall y3 : nat, (forall y4 : a0, (@IN a0 y4 (@INSERT a0 x0 x1)) -> @HAS_SIZE a1 (y2 y4) y3) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y4 : prod a0 a1 => exists y5 : a0, exists y6 : a1, @SETSPEC (prod a0 a1) y4 ((@IN a0 y5 (@INSERT a0 x0 x1)) /\ (@IN a1 y6 (y2 y5))) (@pair a0 a1 y5 y6))) (Nat.mul y1 y3)) = y0) -> (((forall y1 : nat, ((@CARD a0 x1) = y1) -> forall y2 : type1413 a0 a1, forall y3 : nat, (forall y4 : a0, (@IN a0 y4 x1) -> @HAS_SIZE a1 (y2 y4) y3) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y4 : prod a0 a1 => exists y5 : a0, exists y6 : a1, @SETSPEC (prod a0 a1) y4 ((@IN a0 y5 x1) /\ (@IN a1 y6 (y2 y5))) (@pair a0 a1 y5 y6))) (Nat.mul y1 y3)) /\ ((~ (@IN a0 x0 x1)) /\ (@FINITE a0 x1))) -> forall y1 : nat, ((@CARD a0 (@INSERT a0 x0 x1)) = y1) -> forall y2 : type1413 a0 a1, forall y3 : nat, (forall y4 : a0, (@IN a0 y4 (@INSERT a0 x0 x1)) -> @HAS_SIZE a1 (y2 y4) y3) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y4 : prod a0 a1 => exists y5 : a0, exists y6 : a1, @SETSPEC (prod a0 a1) y4 ((@IN a0 y5 (@INSERT a0 x0 x1)) /\ (@IN a1 y6 (y2 y5))) (@pair a0 a1 y5 y6))) (Nat.mul y1 y3)) = (x2 -> y0).
Definition term744 (a0 : Type') (a1 : Type') (x0 : type1413 a0 a1) (x1 : a0) (x2 : nat) (x3 : Prop) := forall y0 : Prop, ((@IN a0 x1 (@EMPTY a0)) = x3) -> (x3 -> (@HAS_SIZE a1 (x0 x1) x2) = y0) -> ((@IN a0 x1 (@EMPTY a0)) -> @HAS_SIZE a1 (x0 x1) x2) = (x3 -> y0).
Definition term738 (a0 : Type') (a1 : Type') (x0 : type1413 a0 a1) (x1 : nat) (x2 : nat) (x3 : Prop) := forall y0 : Prop, ((forall y1 : a0, (@IN a0 y1 (@EMPTY a0)) -> @HAS_SIZE a1 (x0 y1) x2) = x3) -> (x3 -> (@HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y1 : prod a0 a1 => exists y2 : a0, exists y3 : a1, @SETSPEC (prod a0 a1) y1 ((@IN a0 y2 (@EMPTY a0)) /\ (@IN a1 y3 (x0 y2))) (@pair a0 a1 y2 y3))) (Nat.mul x1 x2)) = y0) -> ((forall y1 : a0, (@IN a0 y1 (@EMPTY a0)) -> @HAS_SIZE a1 (x0 y1) x2) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y1 : prod a0 a1 => exists y2 : a0, exists y3 : a1, @SETSPEC (prod a0 a1) y1 ((@IN a0 y2 (@EMPTY a0)) /\ (@IN a1 y3 (x0 y2))) (@pair a0 a1 y2 y3))) (Nat.mul x1 x2)) = (x3 -> y0).
Definition term727 (a0 : Type') (a1 : Type') (x0 : nat) (x1 : Prop) := forall y0 : Prop, (((@CARD a0 (@EMPTY a0)) = x0) = x1) -> (x1 -> (forall y1 : type1413 a0 a1, forall y2 : nat, (forall y3 : a0, (@IN a0 y3 (@EMPTY a0)) -> @HAS_SIZE a1 (y1 y3) y2) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y3 : prod a0 a1 => exists y4 : a0, exists y5 : a1, @SETSPEC (prod a0 a1) y3 ((@IN a0 y4 (@EMPTY a0)) /\ (@IN a1 y5 (y1 y4))) (@pair a0 a1 y4 y5))) (Nat.mul x0 y2)) = y0) -> (((@CARD a0 (@EMPTY a0)) = x0) -> forall y1 : type1413 a0 a1, forall y2 : nat, (forall y3 : a0, (@IN a0 y3 (@EMPTY a0)) -> @HAS_SIZE a1 (y1 y3) y2) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y3 : prod a0 a1 => exists y4 : a0, exists y5 : a1, @SETSPEC (prod a0 a1) y3 ((@IN a0 y4 (@EMPTY a0)) /\ (@IN a1 y5 (y1 y4))) (@pair a0 a1 y4 y5))) (Nat.mul x0 y2)) = (x1 -> y0).
Definition term722 (x0 : Prop) (x1 : Prop) (x2 : Prop) := forall y0 : Prop, (x0 = x2) -> (x2 -> x1 = y0) -> (x0 -> x1) = (x2 -> y0).
Definition term749 (a0 : Type') (a1 : Type') (x0 : type1413 a0 a1) (x1 : a0) (x2 : nat) := False -> (@HAS_SIZE a1 (x0 x1) x2) = (@HAS_SIZE a1 (x0 x1) x2).
Definition term502 (a0 : Type') (x0 : a0) := exists y0 : a0, y0 = x0.
Definition term956 (a0 : Type') (a1 : Type') := fun y0 : prod a0 a1 => (fun y1 : prod a0 a1 => False) y0.
Definition term1174 (a0 : Type') (a1 : Type') (x0 : prod a0 a1) (x1 : a0 -> Prop) (x2 : a1) (x3 : type1413 a0 a1) (x4 : a0) := @eq ((prod a0 a1) -> Prop) ((fun y0 : Prop => (fun y1 : Prop => fun y2 : prod a0 a1 => y1 /\ (x0 = y2)) y0) ((@IN a0 x4 x1) /\ (@IN a1 x2 (x3 x4)))).
Definition term132 (a0 : Type') (a1 : Type') (x0 : prod a1 a0) (x1 : a1 -> Prop) (x2 : a0) (x3 : type1470 a0 a1) (x4 : a1) := @eq ((prod a1 a0) -> Prop) ((fun y0 : Prop => (fun y1 : Prop => fun y2 : prod a1 a0 => y1 /\ (x0 = y2)) y0) ((@IN a1 x4 x1) /\ (@IN a0 x2 (x3 x4)))).
Definition term1765 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : type1413 a0 a1) (x2 : nat) (x3 : a0) := ~ ((fun y0 : a0 => (@IN a0 y0 x0) -> @HAS_SIZE a1 (x1 y0) x2) x3).
Definition term260 (a0 : Type') (a1 : Type') (x0 : prod a1 a0) (x1 : type1470 a0 a1) (x2 : a1) (x3 : a0) := ~ ((fun y0 : a0 => (x0 = (@pair a1 a0 x2 y0)) /\ (x1 x2 y0)) x3).
Definition term1415 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : a0 -> Prop) := @eq Prop ((x0 x1) = (fun y0 : type1413 a0 a1 => (fun y1 : type1413 a0 a1 => fun y2 : prod a0 a1 => exists y3 : a0, exists y4 : a1, @SETSPEC (prod a0 a1) y2 ((@IN a0 y3 x1) /\ (@IN a1 y4 (y1 y3))) (@pair a0 a1 y3 y4)) y0)).
Definition term1608 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : a0 -> Prop) (x2 : type1413 a0 a1) (x3 : type1207 a0 a1) (x4 : prod a0 a1) := exists y0 : a1, (fun y1 : prod a0 a1 => fun y2 : a1 => (~ (x0 x1 x2 y1)) \/ (@SETSPEC (prod a0 a1) y1 ((@IN a0 (x3 y1) x1) /\ (@IN a1 y2 (x2 (x3 y1)))) (@pair a0 a1 (x3 y1) y2))) x4 y0.
Definition term1464 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : prod a0 a1) (x2 : a0 -> Prop) (x3 : type1413 a0 a1) := and ((x0 x2 x3 x1) \/ (forall y0 : a0, forall y1 : a1, ~ (@SETSPEC (prod a0 a1) x1 ((@IN a0 y0 x2) /\ (@IN a1 y1 (x3 y0))) (@pair a0 a1 y0 y1)))).
Definition term488 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : type1470 a0 a1) (x2 : a1) (x3 : a0) := ((x0 x2) /\ ((x1 x2 x3) /\ ((@pair a1 a0 x2 x3) = (@pair a1 a0 x2 x3)))) -> False.
Definition term484 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : type1470 a0 a1) (x2 : a1) (x3 : a0) (x4 : a1) (x5 : a0) := ((x0 x4) /\ ((x1 x4 x5) /\ ((@pair a1 a0 x2 x3) = (@pair a1 a0 x4 x5)))) -> False.
Definition term1069 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : type1413 a0 a1) (x2 : a0 -> Prop) (x3 : nat) := (forall y0 : type1413 a0 a1, forall y1 : nat, (forall y2 : a0, (@IN a0 y2 x2) -> @HAS_SIZE a1 (y0 y2) y1) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y2 : prod a0 a1 => exists y3 : a0, exists y4 : a1, @SETSPEC (prod a0 a1) y2 ((@IN a0 y3 x2) /\ (@IN a1 y4 (y0 y3))) (@pair a0 a1 y3 y4))) (Nat.mul (@CARD a0 x2) y1)) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y0 : prod a0 a1 => exists y1 : a0, exists y2 : a1, @SETSPEC (prod a0 a1) y0 (((y1 = x0) \/ (@IN a0 y1 x2)) /\ (@IN a1 y2 (x1 y1))) (@pair a0 a1 y1 y2))) (Nat.add (Nat.mul (@CARD a0 x2) x3) x3).
Definition term1238 (a0 : Type') (a1 : Type') (x0 : a1) (x1 : type1413 a0 a1) (x2 : a0) := (@IN a1 x0 (x1 x2)) -> (forall y0 : a0, forall y1 : a1, forall y2 : a0, forall y3 : a1, ((@pair a0 a1 y0 y1) = (@pair a0 a1 y2 y3)) = ((y0 = y2) /\ (y1 = y3))) -> (forall y0 : a0, forall y1 : nat, forall y2 : a0, forall y3 : nat, ((@pair a0 nat y0 y1) = (@pair a0 nat y2 y3)) = ((y0 = y2) /\ (y1 = y3))) -> (forall y0 : a0, forall y1 : prod a0 a1, forall y2 : a0, forall y3 : prod a0 a1, ((@pair a0 (prod a0 a1) y0 y1) = (@pair a0 (prod a0 a1) y2 y3)) = ((y0 = y2) /\ (y1 = y3))) -> (forall y0 : nat, forall y1 : a1, forall y2 : nat, forall y3 : a1, ((@pair nat a1 y0 y1) = (@pair nat a1 y2 y3)) = ((y0 = y2) /\ (y1 = y3))) -> ~ (forall y0 : prod a0 a1, forall y1 : a1, forall y2 : prod a0 a1, forall y3 : a1, ((@pair (prod a0 a1) a1 y0 y1) = (@pair (prod a0 a1) a1 y2 y3)) = ((y0 = y2) /\ (y1 = y3))).
Definition term1237 (a0 : Type') (a1 : Type') (x0 : a1) (x1 : type1413 a0 a1) (x2 : a0) := (@IN a1 x0 (x1 x2)) -> (forall y0 : a0, forall y1 : a1, forall y2 : a0, forall y3 : a1, ((@pair a0 a1 y0 y1) = (@pair a0 a1 y2 y3)) = ((y0 = y2) /\ (y1 = y3))) -> (forall y0 : a0, forall y1 : nat, forall y2 : a0, forall y3 : nat, ((@pair a0 nat y0 y1) = (@pair a0 nat y2 y3)) = ((y0 = y2) /\ (y1 = y3))) -> (forall y0 : a0, forall y1 : prod a0 a1, forall y2 : a0, forall y3 : prod a0 a1, ((@pair a0 (prod a0 a1) y0 y1) = (@pair a0 (prod a0 a1) y2 y3)) = ((y0 = y2) /\ (y1 = y3))) -> (forall y0 : nat, forall y1 : a1, forall y2 : nat, forall y3 : a1, ((@pair nat a1 y0 y1) = (@pair nat a1 y2 y3)) = ((y0 = y2) /\ (y1 = y3))) -> (forall y0 : prod a0 a1, forall y1 : a1, forall y2 : prod a0 a1, forall y3 : a1, ((@pair (prod a0 a1) a1 y0 y1) = (@pair (prod a0 a1) a1 y2 y3)) = ((y0 = y2) /\ (y1 = y3))) -> False.
Definition term585 (a0 : Type') (a1 : Type') (x0 : nat) (x1 : a0 -> Prop) (x2 : type1413 a0 a1) (x3 : nat) := imp (((@FINITE a0 x1) /\ ((@CARD a0 x1) = x0)) /\ (forall y0 : a0, (@IN a0 y0 x1) -> @HAS_SIZE a1 (x2 y0) x3)).
Definition term2036 (a0 : Type') (x0 : a0) (x1 : a0) := and (x0 = x1).
Definition term1019 (a0 : Type') (x0 : a0) (x1 : a0) := imp ((fun y0 : a0 => y0 = x0) x1).
Definition term1251 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : type1413 a0 a1) (x2 : nat) := imp (forall y0 : a0, (@IN a0 y0 x0) -> @HAS_SIZE a1 (x1 y0) x2).
Definition term972 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a0 -> Prop) (x2 : type1413 a0 a1) (x3 : nat) := imp (forall y0 : a0, ((y0 = x0) \/ (@IN a0 y0 x1)) -> @HAS_SIZE a1 (x2 y0) x3).
Definition term271 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : prod a1 a0) (x2 : type1470 a0 a1) (x3 : a1) := (~ (exists y0 : a1, exists y1 : a0, (((y0 = x3) \/ (x0 y0)) /\ (x2 y0 y1)) /\ (x1 = (@pair a1 a0 y0 y1)))) /\ ((exists y0 : a1, exists y1 : a0, ((x0 y0) /\ (x2 y0 y1)) /\ (x1 = (@pair a1 a0 y0 y1))) \/ (exists y0 : a0, (x1 = (@pair a1 a0 x3 y0)) /\ (x2 x3 y0))).
Definition term1202 (a0 : Type') (a1 : Type') (x0 : prod a0 a1) (x1 : a1) (x2 : type1413 a0 a1) (x3 : a0) := (x0 = (@pair a0 a1 x3 x1)) /\ (@IN a1 x1 (x2 x3)).
Definition term166 (a0 : Type') (a1 : Type') (x0 : a1) (x1 : a0) := (fun y0 : a0 => (fun y1 : a0 => @pair a1 a0 x0 y1) y0) x1.
Definition term953 (a0 : Type') (a1 : Type') (x0 : type1210 a0 a1) (x1 : prod a0 a1) := (fun y0 : prod a0 a1 => x0 y0) x1.
Definition term1802 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : type1413 a0 a1) (x2 : a0 -> Prop) (x3 : nat) := fun y0 : a0 => (fun y1 : nat => fun y2 : a0 => ((@IN a0 y2 x2) /\ (~ (@HAS_SIZE a1 (x1 y2) y1))) \/ (@HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (x0 x2 x1)) (Nat.mul (@CARD a0 x2) y1))) x3 y0.
Definition term554 (a0 : Type') (x0 : a0) (x1 : a0) (x2 : a0 -> Prop) := (fun y0 : a0 -> Prop => (@IN a0 x1 (@INSERT a0 x0 y0)) = ((x1 = x0) \/ (@IN a0 x1 y0))) x2.
Definition term1785 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : type1413 a0 a1) (x2 : nat) (x3 : a0) := or ((fun y0 : a0 => (@IN a0 y0 x0) /\ (~ (@HAS_SIZE a1 (x1 y0) x2))) x3).
Definition term752 (a0 : Type') (a1 : Type') (x0 : type1413 a0 a1) (x1 : a0) (x2 : nat) := False -> @HAS_SIZE a1 (x0 x1) x2.
Definition term1048 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) := ((@CARD a0 x0) = (@CARD a0 x0)) -> forall y0 : type1413 a0 a1, forall y1 : nat, (forall y2 : a0, (@IN a0 y2 x0) -> @HAS_SIZE a1 (y0 y2) y1) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y2 : prod a0 a1 => exists y3 : a0, exists y4 : a1, @SETSPEC (prod a0 a1) y2 ((@IN a0 y3 x0) /\ (@IN a1 y4 (y0 y3))) (@pair a0 a1 y3 y4))) (Nat.mul (@CARD a0 x0) y1).
Definition term707 (a0 : Type') (a1 : Type') (x0 : a0) := forall y0 : a0 -> Prop, (((fun y1 : a0 -> Prop => forall y2 : nat, ((@CARD a0 y1) = y2) -> forall y3 : type1413 a0 a1, forall y4 : nat, (forall y5 : a0, (@IN a0 y5 y1) -> @HAS_SIZE a1 (y3 y5) y4) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y5 : prod a0 a1 => exists y6 : a0, exists y7 : a1, @SETSPEC (prod a0 a1) y5 ((@IN a0 y6 y1) /\ (@IN a1 y7 (y3 y6))) (@pair a0 a1 y6 y7))) (Nat.mul y2 y4)) y0) /\ ((~ (@IN a0 x0 y0)) /\ (@FINITE a0 y0))) -> (fun y1 : a0 -> Prop => forall y2 : nat, ((@CARD a0 y1) = y2) -> forall y3 : type1413 a0 a1, forall y4 : nat, (forall y5 : a0, (@IN a0 y5 y1) -> @HAS_SIZE a1 (y3 y5) y4) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y5 : prod a0 a1 => exists y6 : a0, exists y7 : a1, @SETSPEC (prod a0 a1) y5 ((@IN a0 y6 y1) /\ (@IN a1 y7 (y3 y6))) (@pair a0 a1 y6 y7))) (Nat.mul y2 y4)) (@INSERT a0 x0 y0).
Definition term2052 (a0 : Type') (x0 : type686 a0) (x1 : type686 a0) (x2 : type686 a0) := (~ (x1 = x0)) \/ ((x0 = x2) \/ (~ (x1 = x2))).
Definition term2029 (a0 : Type') (x0 : a0) (x1 : a0) (x2 : type1364 a0) (x3 : type1364 a0) := (~ (x0 = x1)) \/ (~ (x2 = x3)).
Definition term2053 (a0 : Type') (x0 : type686 a0) (x1 : type686 a0) (x2 : type686 a0) := (x0 = x2) \/ ((~ (x1 = x0)) \/ (~ (x1 = x2))).
Definition term1580 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : a0 -> Prop) (x2 : type1413 a0 a1) (x3 : prod a0 a1) (x4 : a0) := (fun y0 : prod a0 a1 => fun y1 : a0 => exists y2 : a1, (~ (x0 x1 x2 y0)) \/ (@SETSPEC (prod a0 a1) y0 ((@IN a0 y1 x1) /\ (@IN a1 y2 (x2 y1))) (@pair a0 a1 y1 y2))) x3 x4.
Definition term447 (a0 : Type') (a1 : Type') (x0 : type1470 a0 a1) (x1 : a1) (x2 : a0) := fun y0 : prod a1 a0 => (~ (y0 = (@pair a1 a0 x1 x2))) \/ (~ (x0 x1 x2)).
Definition term1036 (a0 : Type') (a1 : Type') (x0 : type1413 a0 a1) (x1 : a0) (x2 : nat) (x3 : Prop) := (True -> (@HAS_SIZE a1 (x0 x1) x2) = x3) -> ((exists y0 : a0, y0 = x1) -> @HAS_SIZE a1 (x0 x1) x2) = (True -> x3).
Definition term426 (a0 : Type') (a1 : Type') (x0 : a1) (x1 : type1470 a0 a1) (x2 : a1) (x3 : a0) := (~ (x2 = x0)) \/ (~ (x1 x2 x3)).
Definition term312 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : prod a1 a0) (x2 : type1470 a0 a1) (x3 : a1) := or (exists y0 : a1, exists y1 : a0, ((((y0 = x3) \/ (x0 y0)) /\ (x2 y0 y1)) /\ (x1 = (@pair a1 a0 y0 y1))) /\ ((forall y2 : a1, forall y3 : a0, ((~ (x0 y2)) \/ (~ (x2 y2 y3))) \/ (~ (x1 = (@pair a1 a0 y2 y3)))) /\ (forall y2 : a0, (~ (x1 = (@pair a1 a0 x3 y2))) \/ (~ (x2 x3 y2))))).
Definition term159 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : type1470 a0 a1) (x2 : prod a1 a0) := or (exists y0 : a1, exists y1 : a0, ((x0 y0) /\ (x1 y0 y1)) /\ (x2 = (@pair a1 a0 y0 y1))).
Definition term1546 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : prod a0 a1) (x2 : a0 -> Prop) (x3 : type1413 a0 a1) := exists y0 : a0, (~ (x0 x2 x3 x1)) \/ ((fun y1 : a0 => exists y2 : a1, @SETSPEC (prod a0 a1) x1 ((@IN a0 y1 x2) /\ (@IN a1 y2 (x3 y1))) (@pair a0 a1 y1 y2)) y0).
Definition term1181 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : a1) (x2 : type1413 a0 a1) (x3 : a0) (x4 : prod a0 a1) (x5 : prod a0 a1) := ((@IN a0 x3 x0) /\ (@IN a1 x1 (x2 x3))) /\ (x4 = x5).
Definition term140 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : a0) (x2 : type1470 a0 a1) (x3 : a1) (x4 : prod a1 a0) (x5 : prod a1 a0) := ((@IN a1 x3 x0) /\ (@IN a0 x1 (x2 x3))) /\ (x4 = x5).
Definition term1768 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : type1413 a0 a1) (x2 : nat) := exists y0 : a0, (@IN a0 y0 x0) /\ (~ (@HAS_SIZE a1 (x1 y0) x2)).
Definition term1210 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : type1413 a0 a1) (x2 : a0) := fun y0 : prod a0 a1 => (@IN (prod a0 a1) y0 (@INTER (prod a0 a1) (@GSPEC (prod a0 a1) (fun y1 : prod a0 a1 => exists y2 : a0, exists y3 : a1, @SETSPEC (prod a0 a1) y1 ((@IN a0 y2 x0) /\ (@IN a1 y3 (x1 y2))) (@pair a0 a1 y2 y3))) (@IMAGE a1 (prod a0 a1) (fun y1 : a1 => @pair a0 a1 x2 y1) (x1 x2)))) = (@IN (prod a0 a1) y0 (@EMPTY (prod a0 a1))).
Definition term191 (a0 : Type') (a1 : Type') (x0 : type1470 a0 a1) (x1 : a1) := fun y0 : a1 -> Prop => forall y1 : prod a1 a0, (exists y2 : a1, exists y3 : a0, (((y2 = x1) \/ (y0 y2)) /\ (x0 y2 y3)) /\ (y1 = (@pair a1 a0 y2 y3))) = ((exists y2 : a1, exists y3 : a0, ((y0 y2) /\ (x0 y2 y3)) /\ (y1 = (@pair a1 a0 y2 y3))) \/ (exists y2 : a0, (y1 = (@pair a1 a0 x1 y2)) /\ (x0 x1 y2))).
Definition term586 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : type1413 a0 a1) (x2 : nat) (x3 : nat) := @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y0 : prod a0 a1 => exists y1 : a0, exists y2 : a1, @SETSPEC (prod a0 a1) y0 ((@IN a0 y1 x0) /\ (@IN a1 y2 (x1 y1))) (@pair a0 a1 y1 y2))) (Nat.mul x2 x3).
Definition term1607 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : a0 -> Prop) (x2 : type1413 a0 a1) (x3 : type1207 a0 a1) (x4 : prod a0 a1) := fun y0 : a1 => (fun y1 : prod a0 a1 => fun y2 : a1 => (~ (x0 x1 x2 y1)) \/ (@SETSPEC (prod a0 a1) y1 ((@IN a0 (x3 y1) x1) /\ (@IN a1 y2 (x2 (x3 y1)))) (@pair a0 a1 (x3 y1) y2))) x4 y0.
Definition term1654 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : a0 -> Prop) (x2 : type464 a0 a1) (x3 : type1413 a0 a1) := (fun y0 : type1413 a0 a1 => fun y1 : type1208 a0 a1 => forall y2 : prod a0 a1, (~ (x0 x1 y0 y2)) \/ (@SETSPEC (prod a0 a1) y2 ((@IN a0 (x2 y0 y2) x1) /\ (@IN a1 (y1 y2) (y0 (x2 y0 y2)))) (@pair a0 a1 (x2 y0 y2) (y1 y2)))) x3.
Definition term186 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : type1470 a0 a1) (x2 : a1) := (((~ (forall y0 : prod a1 a0, (exists y1 : a1, exists y2 : a0, (((y1 = x2) \/ (x0 y1)) /\ (x1 y1 y2)) /\ (y0 = (@pair a1 a0 y1 y2))) = ((exists y1 : a1, exists y2 : a0, ((x0 y1) /\ (x1 y1 y2)) /\ (y0 = (@pair a1 a0 y1 y2))) \/ (exists y1 : a0, (y0 = (@pair a1 a0 x2 y1)) /\ (x1 x2 y1))))) -> False) -> (~ (forall y0 : prod a1 a0, (exists y1 : a1, exists y2 : a0, (((y1 = x2) \/ (x0 y1)) /\ (x1 y1 y2)) /\ (y0 = (@pair a1 a0 y1 y2))) = ((exists y1 : a1, exists y2 : a0, ((x0 y1) /\ (x1 y1 y2)) /\ (y0 = (@pair a1 a0 y1 y2))) \/ (exists y1 : a0, (y0 = (@pair a1 a0 x2 y1)) /\ (x1 x2 y1))))) -> False) -> (~ (forall y0 : prod a1 a0, (exists y1 : a1, exists y2 : a0, (((y1 = x2) \/ (x0 y1)) /\ (x1 y1 y2)) /\ (y0 = (@pair a1 a0 y1 y2))) = ((exists y1 : a1, exists y2 : a0, ((x0 y1) /\ (x1 y1 y2)) /\ (y0 = (@pair a1 a0 y1 y2))) \/ (exists y1 : a0, (y0 = (@pair a1 a0 x2 y1)) /\ (x1 x2 y1))))) -> False.
Definition term514 (x0 : Prop) := (x0 = True) \/ (x0 = False).
Definition term192 (a0 : Type') (a1 : Type') (x0 : type1470 a0 a1) (x1 : a1) := forall y0 : a1 -> Prop, (~ (forall y1 : prod a1 a0, (exists y2 : a1, exists y3 : a0, (((y2 = x1) \/ (y0 y2)) /\ (x0 y2 y3)) /\ (y1 = (@pair a1 a0 y2 y3))) = ((exists y2 : a1, exists y3 : a0, ((y0 y2) /\ (x0 y2 y3)) /\ (y1 = (@pair a1 a0 y2 y3))) \/ (exists y2 : a0, (y1 = (@pair a1 a0 x1 y2)) /\ (x0 x1 y2))))) -> False.
Definition term1405 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) := forall y0 : a0 -> Prop, (x0 y0) = ((fun y1 : a0 -> Prop => fun y2 : type1413 a0 a1 => fun y3 : prod a0 a1 => exists y4 : a0, exists y5 : a1, @SETSPEC (prod a0 a1) y3 ((@IN a0 y4 y1) /\ (@IN a1 y5 (y2 y4))) (@pair a0 a1 y4 y5)) y0).
Definition term207 (a0 : Type') (x0 : a0) (x1 : a0 -> Prop) (x2 : a0) := or (~ ((x2 = x0) \/ (x1 x2))).
Definition term1943 (a0 : Type') (a1 : Type') := forall y0 : a0, (fun y1 : a0 => forall y2 : a1, forall y3 : a0, forall y4 : a1, (~ ((@pair a0 a1 y1 y2) = (@pair a0 a1 y3 y4))) \/ ((y1 = y3) /\ (y2 = y4))) y0.
Definition term1938 (a0 : Type') (a1 : Type') := forall y0 : a0, (fun y1 : a0 => forall y2 : a1, forall y3 : a0, forall y4 : a1, ((@pair a0 a1 y1 y2) = (@pair a0 a1 y3 y4)) \/ ((~ (y1 = y3)) \/ (~ (y2 = y4)))) y0.
Definition term1899 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a1) := forall y0 : a0, (fun y1 : a0 => forall y2 : a1, (~ ((@pair a0 a1 x0 x1) = (@pair a0 a1 y1 y2))) \/ ((x0 = y1) /\ (x1 = y2))) y0.
Definition term1894 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a1) := forall y0 : a0, (fun y1 : a0 => forall y2 : a1, ((@pair a0 a1 x0 x1) = (@pair a0 a1 y1 y2)) \/ ((~ (x0 = y1)) \/ (~ (x1 = y2)))) y0.
Definition term91 (a0 : Type') (a1 : Type') (x0 : a1) (x1 : a1 -> Prop) (x2 : type1470 a0 a1) (x3 : a1) (x4 : a0) (x5 : prod a1 a0) := fun y0 : prod a1 a0 => (((x3 = x0) \/ (x1 x3)) /\ (x2 x3 x4)) /\ (x5 = y0).
Definition term605 (x0 : Prop) (x1 : Prop) (x2 : Prop) := (x0 /\ x1) -> x2.
Definition term1151 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : type1413 a0 a1) (x2 : a0) := True /\ (@DISJOINT (prod a0 a1) (@GSPEC (prod a0 a1) (fun y0 : prod a0 a1 => exists y1 : a0, exists y2 : a1, @SETSPEC (prod a0 a1) y0 ((@IN a0 y1 x0) /\ (@IN a1 y2 (x1 y1))) (@pair a0 a1 y1 y2))) (@IMAGE a1 (prod a0 a1) (fun y0 : a1 => @pair a0 a1 x2 y0) (x1 x2))).
Definition term578 (a0 : Type') (x0 : a0 -> Prop) (x1 : nat) := (@FINITE a0 x0) /\ ((@CARD a0 x0) = x1).
Definition term1115 (a0 : Type') (a1 : Type') (x0 : type1413 a0 a1) (x1 : a0) (x2 : a1) (x3 : a1) := forall y0 : Prop, forall y1 : Prop, (((@IN a1 x2 (x0 x1)) /\ ((@IN a1 x3 (x0 x1)) /\ (((fun y2 : a1 => @pair a0 a1 x1 y2) x2) = ((fun y2 : a1 => @pair a0 a1 x1 y2) x3)))) = y0) -> (y0 -> (x2 = x3) = y1) -> (((@IN a1 x2 (x0 x1)) /\ ((@IN a1 x3 (x0 x1)) /\ (((fun y2 : a1 => @pair a0 a1 x1 y2) x2) = ((fun y2 : a1 => @pair a0 a1 x1 y2) x3)))) -> x2 = x3) = (y0 -> y1).
Definition term1100 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : type1413 a0 a1) (x2 : a0) (x3 : nat) := forall y0 : Prop, forall y1 : Prop, ((@IN a0 x2 x0) = y0) -> (y0 -> (@HAS_SIZE a1 (x1 x2) x3) = y1) -> ((@IN a0 x2 x0) -> @HAS_SIZE a1 (x1 x2) x3) = (y0 -> y1).
Definition term1030 (a0 : Type') (a1 : Type') (x0 : type1413 a0 a1) (x1 : a0) (x2 : nat) := forall y0 : Prop, forall y1 : Prop, ((exists y2 : a0, y2 = x1) = y0) -> (y0 -> (@HAS_SIZE a1 (x0 x1) x2) = y1) -> ((exists y2 : a0, y2 = x1) -> @HAS_SIZE a1 (x0 x1) x2) = (y0 -> y1).
Definition term1002 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : type1413 a0 a1) (x2 : a0) (x3 : nat) := forall y0 : Prop, forall y1 : Prop, ((x2 = x0) = y0) -> (y0 -> (@HAS_SIZE a1 (x1 x2) x3) = y1) -> ((x2 = x0) -> @HAS_SIZE a1 (x1 x2) x3) = (y0 -> y1).
Definition term975 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a0 -> Prop) (x2 : type1413 a0 a1) (x3 : nat) (x4 : nat) := forall y0 : Prop, forall y1 : Prop, ((forall y2 : a0, ((y2 = x0) -> @HAS_SIZE a1 (x2 y2) x4) /\ ((@IN a0 y2 x1) -> @HAS_SIZE a1 (x2 y2) x4)) = y0) -> (y0 -> (@HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y2 : prod a0 a1 => exists y3 : a0, exists y4 : a1, @SETSPEC (prod a0 a1) y2 (((y3 = x0) \/ (@IN a0 y3 x1)) /\ (@IN a1 y4 (x2 y3))) (@pair a0 a1 y3 y4))) (Nat.mul x3 x4)) = y1) -> ((forall y2 : a0, ((y2 = x0) -> @HAS_SIZE a1 (x2 y2) x4) /\ ((@IN a0 y2 x1) -> @HAS_SIZE a1 (x2 y2) x4)) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y2 : prod a0 a1 => exists y3 : a0, exists y4 : a1, @SETSPEC (prod a0 a1) y2 (((y3 = x0) \/ (@IN a0 y3 x1)) /\ (@IN a1 y4 (x2 y3))) (@pair a0 a1 y3 y4))) (Nat.mul x3 x4)) = (y0 -> y1).
Definition term848 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a0 -> Prop) (x2 : type1413 a0 a1) (x3 : a0) (x4 : nat) := forall y0 : Prop, forall y1 : Prop, ((@IN a0 x3 (@INSERT a0 x0 x1)) = y0) -> (y0 -> (@HAS_SIZE a1 (x2 x3) x4) = y1) -> ((@IN a0 x3 (@INSERT a0 x0 x1)) -> @HAS_SIZE a1 (x2 x3) x4) = (y0 -> y1).
Definition term841 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a0 -> Prop) (x2 : type1413 a0 a1) (x3 : nat) (x4 : nat) := forall y0 : Prop, forall y1 : Prop, ((forall y2 : a0, (@IN a0 y2 (@INSERT a0 x0 x1)) -> @HAS_SIZE a1 (x2 y2) x4) = y0) -> (y0 -> (@HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y2 : prod a0 a1 => exists y3 : a0, exists y4 : a1, @SETSPEC (prod a0 a1) y2 ((@IN a0 y3 (@INSERT a0 x0 x1)) /\ (@IN a1 y4 (x2 y3))) (@pair a0 a1 y3 y4))) (Nat.mul x3 x4)) = y1) -> ((forall y2 : a0, (@IN a0 y2 (@INSERT a0 x0 x1)) -> @HAS_SIZE a1 (x2 y2) x4) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y2 : prod a0 a1 => exists y3 : a0, exists y4 : a1, @SETSPEC (prod a0 a1) y2 ((@IN a0 y3 (@INSERT a0 x0 x1)) /\ (@IN a1 y4 (x2 y3))) (@pair a0 a1 y3 y4))) (Nat.mul x3 x4)) = (y0 -> y1).
Definition term821 (a0 : Type') (x0 : a0) (x1 : a0 -> Prop) := forall y0 : Prop, forall y1 : nat, forall y2 : nat, ((@IN a0 x0 x1) = y0) -> (y0 -> (@CARD a0 x1) = y1) -> ((~ y0) -> (S (@CARD a0 x1)) = y2) -> (@COND nat (@IN a0 x0 x1) (@CARD a0 x1) (S (@CARD a0 x1))) = (@COND nat y0 y1 y2).
Definition term820 (x0 : Prop) (x1 : nat) (x2 : nat) := forall y0 : Prop, forall y1 : nat, forall y2 : nat, (x0 = y0) -> (y0 -> x1 = y1) -> ((~ y0) -> x2 = y2) -> (@COND nat x0 x1 x2) = (@COND nat y0 y1 y2).
Definition term819 (a0 : Type') (x0 : Prop) (x1 : a0) (x2 : a0) := forall y0 : Prop, forall y1 : a0, forall y2 : a0, (x0 = y0) -> (y0 -> x1 = y1) -> ((~ y0) -> x2 = y2) -> (@COND a0 x0 x1 x2) = (@COND a0 y0 y1 y2).
Definition term810 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a0 -> Prop) (x2 : nat) := forall y0 : Prop, forall y1 : Prop, (((@CARD a0 (@INSERT a0 x0 x1)) = x2) = y0) -> (y0 -> (forall y2 : type1413 a0 a1, forall y3 : nat, (forall y4 : a0, (@IN a0 y4 (@INSERT a0 x0 x1)) -> @HAS_SIZE a1 (y2 y4) y3) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y4 : prod a0 a1 => exists y5 : a0, exists y6 : a1, @SETSPEC (prod a0 a1) y4 ((@IN a0 y5 (@INSERT a0 x0 x1)) /\ (@IN a1 y6 (y2 y5))) (@pair a0 a1 y5 y6))) (Nat.mul x2 y3)) = y1) -> (((@CARD a0 (@INSERT a0 x0 x1)) = x2) -> forall y2 : type1413 a0 a1, forall y3 : nat, (forall y4 : a0, (@IN a0 y4 (@INSERT a0 x0 x1)) -> @HAS_SIZE a1 (y2 y4) y3) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y4 : prod a0 a1 => exists y5 : a0, exists y6 : a1, @SETSPEC (prod a0 a1) y4 ((@IN a0 y5 (@INSERT a0 x0 x1)) /\ (@IN a1 y6 (y2 y5))) (@pair a0 a1 y5 y6))) (Nat.mul x2 y3)) = (y0 -> y1).
Definition term801 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a0 -> Prop) := forall y0 : Prop, forall y1 : Prop, (((forall y2 : nat, ((@CARD a0 x1) = y2) -> forall y3 : type1413 a0 a1, forall y4 : nat, (forall y5 : a0, (@IN a0 y5 x1) -> @HAS_SIZE a1 (y3 y5) y4) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y5 : prod a0 a1 => exists y6 : a0, exists y7 : a1, @SETSPEC (prod a0 a1) y5 ((@IN a0 y6 x1) /\ (@IN a1 y7 (y3 y6))) (@pair a0 a1 y6 y7))) (Nat.mul y2 y4)) /\ ((~ (@IN a0 x0 x1)) /\ (@FINITE a0 x1))) = y0) -> (y0 -> (forall y2 : nat, ((@CARD a0 (@INSERT a0 x0 x1)) = y2) -> forall y3 : type1413 a0 a1, forall y4 : nat, (forall y5 : a0, (@IN a0 y5 (@INSERT a0 x0 x1)) -> @HAS_SIZE a1 (y3 y5) y4) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y5 : prod a0 a1 => exists y6 : a0, exists y7 : a1, @SETSPEC (prod a0 a1) y5 ((@IN a0 y6 (@INSERT a0 x0 x1)) /\ (@IN a1 y7 (y3 y6))) (@pair a0 a1 y6 y7))) (Nat.mul y2 y4)) = y1) -> (((forall y2 : nat, ((@CARD a0 x1) = y2) -> forall y3 : type1413 a0 a1, forall y4 : nat, (forall y5 : a0, (@IN a0 y5 x1) -> @HAS_SIZE a1 (y3 y5) y4) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y5 : prod a0 a1 => exists y6 : a0, exists y7 : a1, @SETSPEC (prod a0 a1) y5 ((@IN a0 y6 x1) /\ (@IN a1 y7 (y3 y6))) (@pair a0 a1 y6 y7))) (Nat.mul y2 y4)) /\ ((~ (@IN a0 x0 x1)) /\ (@FINITE a0 x1))) -> forall y2 : nat, ((@CARD a0 (@INSERT a0 x0 x1)) = y2) -> forall y3 : type1413 a0 a1, forall y4 : nat, (forall y5 : a0, (@IN a0 y5 (@INSERT a0 x0 x1)) -> @HAS_SIZE a1 (y3 y5) y4) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y5 : prod a0 a1 => exists y6 : a0, exists y7 : a1, @SETSPEC (prod a0 a1) y5 ((@IN a0 y6 (@INSERT a0 x0 x1)) /\ (@IN a1 y7 (y3 y6))) (@pair a0 a1 y6 y7))) (Nat.mul y2 y4)) = (y0 -> y1).
Definition term741 (a0 : Type') (a1 : Type') (x0 : type1413 a0 a1) (x1 : a0) (x2 : nat) := forall y0 : Prop, forall y1 : Prop, ((@IN a0 x1 (@EMPTY a0)) = y0) -> (y0 -> (@HAS_SIZE a1 (x0 x1) x2) = y1) -> ((@IN a0 x1 (@EMPTY a0)) -> @HAS_SIZE a1 (x0 x1) x2) = (y0 -> y1).
Definition term734 (a0 : Type') (a1 : Type') (x0 : type1413 a0 a1) (x1 : nat) (x2 : nat) := forall y0 : Prop, forall y1 : Prop, ((forall y2 : a0, (@IN a0 y2 (@EMPTY a0)) -> @HAS_SIZE a1 (x0 y2) x2) = y0) -> (y0 -> (@HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y2 : prod a0 a1 => exists y3 : a0, exists y4 : a1, @SETSPEC (prod a0 a1) y2 ((@IN a0 y3 (@EMPTY a0)) /\ (@IN a1 y4 (x0 y3))) (@pair a0 a1 y3 y4))) (Nat.mul x1 x2)) = y1) -> ((forall y2 : a0, (@IN a0 y2 (@EMPTY a0)) -> @HAS_SIZE a1 (x0 y2) x2) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y2 : prod a0 a1 => exists y3 : a0, exists y4 : a1, @SETSPEC (prod a0 a1) y2 ((@IN a0 y3 (@EMPTY a0)) /\ (@IN a1 y4 (x0 y3))) (@pair a0 a1 y3 y4))) (Nat.mul x1 x2)) = (y0 -> y1).
Definition term724 (a0 : Type') (a1 : Type') (x0 : nat) := forall y0 : Prop, forall y1 : Prop, (((@CARD a0 (@EMPTY a0)) = x0) = y0) -> (y0 -> (forall y2 : type1413 a0 a1, forall y3 : nat, (forall y4 : a0, (@IN a0 y4 (@EMPTY a0)) -> @HAS_SIZE a1 (y2 y4) y3) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y4 : prod a0 a1 => exists y5 : a0, exists y6 : a1, @SETSPEC (prod a0 a1) y4 ((@IN a0 y5 (@EMPTY a0)) /\ (@IN a1 y6 (y2 y5))) (@pair a0 a1 y5 y6))) (Nat.mul x0 y3)) = y1) -> (((@CARD a0 (@EMPTY a0)) = x0) -> forall y2 : type1413 a0 a1, forall y3 : nat, (forall y4 : a0, (@IN a0 y4 (@EMPTY a0)) -> @HAS_SIZE a1 (y2 y4) y3) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y4 : prod a0 a1 => exists y5 : a0, exists y6 : a1, @SETSPEC (prod a0 a1) y4 ((@IN a0 y5 (@EMPTY a0)) /\ (@IN a1 y6 (y2 y5))) (@pair a0 a1 y5 y6))) (Nat.mul x0 y3)) = (y0 -> y1).
Definition term723 (x0 : Prop) (x1 : Prop) := forall y0 : Prop, forall y1 : Prop, (x0 = y0) -> (y0 -> x1 = y1) -> (x0 -> x1) = (y0 -> y1).
Definition term44 (x0 : Prop) := forall y0 : Prop, forall y1 : Prop, (x0 \/ (y0 \/ y1)) = ((x0 \/ y0) \/ y1).
Definition term1359 (a0 : Type') (a1 : Type') (x0 : nat) (x1 : nat) (x2 : type621 a0 a1) (x3 : a0 -> Prop) (x4 : a0) (x5 : a1) (x6 : prod a0 a1) (x7 : a1) (x8 : type1413 a0 a1) (x9 : a0) := (~ (@IN a0 x9 x3)) -> (@FINITE a0 x3) -> (x0 = (S (@CARD a0 x3))) -> (@HAS_SIZE a1 (x8 x9) x1) -> (forall y0 : a0, (@IN a0 y0 x3) -> @HAS_SIZE a1 (x8 y0) x1) -> (forall y0 : type1413 a0 a1, forall y1 : nat, (forall y2 : a0, (@IN a0 y2 x3) -> @HAS_SIZE a1 (y0 y2) y1) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (x2 x3 y0)) (Nat.mul (@CARD a0 x3) y1)) -> (@IN a0 x4 x3) -> (@IN a1 x5 (x8 x4)) -> (x6 = (@pair a0 a1 x4 x5)) -> (x6 = (@pair a0 a1 x9 x7)) -> (@IN a1 x7 (x8 x9)) -> (forall y0 : a0, forall y1 : a1, forall y2 : a0, forall y3 : a1, ((@pair a0 a1 y0 y1) = (@pair a0 a1 y2 y3)) = ((y0 = y2) /\ (y1 = y3))) -> (forall y0 : a0, forall y1 : nat, forall y2 : a0, forall y3 : nat, ((@pair a0 nat y0 y1) = (@pair a0 nat y2 y3)) = ((y0 = y2) /\ (y1 = y3))) -> (forall y0 : a0, forall y1 : prod a0 a1, forall y2 : a0, forall y3 : prod a0 a1, ((@pair a0 (prod a0 a1) y0 y1) = (@pair a0 (prod a0 a1) y2 y3)) = ((y0 = y2) /\ (y1 = y3))) -> (forall y0 : nat, forall y1 : a1, forall y2 : nat, forall y3 : a1, ((@pair nat a1 y0 y1) = (@pair nat a1 y2 y3)) = ((y0 = y2) /\ (y1 = y3))) -> ~ (forall y0 : prod a0 a1, forall y1 : a1, forall y2 : prod a0 a1, forall y3 : a1, ((@pair (prod a0 a1) a1 y0 y1) = (@pair (prod a0 a1) a1 y2 y3)) = ((y0 = y2) /\ (y1 = y3))).
Definition term907 (a0 : Type') (a1 : Type') (x0 : a0) := fun y0 : a0 -> Prop => ((forall y1 : nat, ((@CARD a0 y0) = y1) -> forall y2 : type1413 a0 a1, forall y3 : nat, (forall y4 : a0, (@IN a0 y4 y0) -> @HAS_SIZE a1 (y2 y4) y3) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y4 : prod a0 a1 => exists y5 : a0, exists y6 : a1, @SETSPEC (prod a0 a1) y4 ((@IN a0 y5 y0) /\ (@IN a1 y6 (y2 y5))) (@pair a0 a1 y5 y6))) (Nat.mul y1 y3)) /\ ((~ (@IN a0 x0 y0)) /\ (@FINITE a0 y0))) -> forall y1 : nat, ((S (@CARD a0 y0)) = y1) -> forall y2 : type1413 a0 a1, forall y3 : nat, (forall y4 : a0, ((y4 = x0) \/ (@IN a0 y4 y0)) -> @HAS_SIZE a1 (y2 y4) y3) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y4 : prod a0 a1 => exists y5 : a0, exists y6 : a1, @SETSPEC (prod a0 a1) y4 (((y5 = x0) \/ (@IN a0 y5 y0)) /\ (@IN a1 y6 (y2 y5))) (@pair a0 a1 y5 y6))) (Nat.mul y1 y3).
Definition term706 (a0 : Type') (a1 : Type') (x0 : a0) := fun y0 : a0 -> Prop => ((forall y1 : nat, ((@CARD a0 y0) = y1) -> forall y2 : type1413 a0 a1, forall y3 : nat, (forall y4 : a0, (@IN a0 y4 y0) -> @HAS_SIZE a1 (y2 y4) y3) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y4 : prod a0 a1 => exists y5 : a0, exists y6 : a1, @SETSPEC (prod a0 a1) y4 ((@IN a0 y5 y0) /\ (@IN a1 y6 (y2 y5))) (@pair a0 a1 y5 y6))) (Nat.mul y1 y3)) /\ ((~ (@IN a0 x0 y0)) /\ (@FINITE a0 y0))) -> forall y1 : nat, ((@CARD a0 (@INSERT a0 x0 y0)) = y1) -> forall y2 : type1413 a0 a1, forall y3 : nat, (forall y4 : a0, (@IN a0 y4 (@INSERT a0 x0 y0)) -> @HAS_SIZE a1 (y2 y4) y3) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y4 : prod a0 a1 => exists y5 : a0, exists y6 : a1, @SETSPEC (prod a0 a1) y4 ((@IN a0 y5 (@INSERT a0 x0 y0)) /\ (@IN a1 y6 (y2 y5))) (@pair a0 a1 y5 y6))) (Nat.mul y1 y3).
Definition term1612 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : a0 -> Prop) (x2 : type1413 a0 a1) (x3 : type1207 a0 a1) (x4 : type1208 a0 a1) (x5 : prod a0 a1) := (fun y0 : prod a0 a1 => fun y1 : a1 => (~ (x0 x1 x2 y0)) \/ (@SETSPEC (prod a0 a1) y0 ((@IN a0 (x3 y0) x1) /\ (@IN a1 y1 (x2 (x3 y0)))) (@pair a0 a1 (x3 y0) y1))) x5 (x4 x5).
Definition term87 (a0 : Type') (a1 : Type') (x0 : a1) (x1 : a1 -> Prop) (x2 : a0) (x3 : type1470 a0 a1) (x4 : a1) := and (((x4 = x0) \/ (@IN a1 x4 x1)) /\ (@IN a0 x2 (x3 x4))).
Definition term167 (a0 : Type') (a1 : Type') (x0 : a1) (x1 : a0) := (fun y0 : a0 => @pair a1 a0 x0 y0) x1.
Definition term1017 (a0 : Type') (x0 : a0) := fun y0 : a0 => y0 = x0.
Definition term1246 (a0 : Type') (x0 : a0) (x1 : a0 -> Prop) := imp (@IN a0 x0 x1).
Definition term1037 (a0 : Type') (a1 : Type') (x0 : type1413 a0 a1) (x1 : a0) (x2 : nat) := True -> (@HAS_SIZE a1 (x0 x1) x2) = (@HAS_SIZE a1 (x0 x1) x2).
Definition term213 (a0 : Type') (a1 : Type') (x0 : a1) (x1 : a1 -> Prop) (x2 : type1470 a0 a1) (x3 : a1) (x4 : a0) := or (~ (((x3 = x0) \/ (x1 x3)) /\ (x2 x3 x4))).
Definition term961 (a0 : Type') (a1 : Type') (x0 : prod a0 a1) (x1 : a0) := exists y0 : a1, (fun y1 : Prop => fun y2 : prod a0 a1 => y1 /\ (x0 = y2)) False (@pair a0 a1 x1 y0).
Definition term1172 (a0 : Type') (a1 : Type') (x0 : prod a0 a1) (x1 : a0 -> Prop) (x2 : a1) (x3 : type1413 a0 a1) (x4 : a0) := (fun y0 : Prop => fun y1 : prod a0 a1 => y0 /\ (x0 = y1)) ((@IN a0 x4 x1) /\ (@IN a1 x2 (x3 x4))).
Definition term130 (a0 : Type') (a1 : Type') (x0 : prod a1 a0) (x1 : a1 -> Prop) (x2 : a0) (x3 : type1470 a0 a1) (x4 : a1) := (fun y0 : Prop => fun y1 : prod a1 a0 => y0 /\ (x0 = y1)) ((@IN a1 x4 x1) /\ (@IN a0 x2 (x3 x4))).
Definition term943 (a0 : Type') (a1 : Type') (x0 : prod a0 a1) (x1 : Prop) := (fun y0 : Prop => fun y1 : prod a0 a1 => y0 /\ (x0 = y1)) x1.
Definition term74 (a0 : Type') (a1 : Type') (x0 : prod a1 a0) (x1 : Prop) := (fun y0 : Prop => fun y1 : prod a1 a0 => y0 /\ (x0 = y1)) x1.
Definition term2084 (a0 : Type') (x0 : a0 -> Prop) (x1 : a0 -> Prop) := and (~ (~ (x0 = x1))).
Definition term2061 (a0 : Type') (x0 : type686 a0) (x1 : type686 a0) := and (~ (~ (x0 = x1))).
Definition term2035 (a0 : Type') (x0 : a0) (x1 : a0) := and (~ (~ (x0 = x1))).
Definition term1746 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : type619 a0 a1) := exists y0 : type620 a0 a1, (forall y1 : a0 -> Prop, forall y2 : type1413 a0 a1, forall y3 : prod a0 a1, (x0 y1 y2 y3) \/ (forall y4 : a0, forall y5 : a1, ~ (@SETSPEC (prod a0 a1) y3 ((@IN a0 y4 y1) /\ (@IN a1 y5 (y2 y4))) (@pair a0 a1 y4 y5)))) /\ ((fun y1 : type620 a0 a1 => forall y2 : a0 -> Prop, forall y3 : type1413 a0 a1, forall y4 : prod a0 a1, (~ (x0 y2 y3 y4)) \/ (@SETSPEC (prod a0 a1) y4 ((@IN a0 (x1 y2 y3 y4) y2) /\ (@IN a1 (y1 y2 y3 y4) (y3 (x1 y2 y3 y4)))) (@pair a0 a1 (x1 y2 y3 y4) (y1 y2 y3 y4)))) y0).
Definition term1732 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) := exists y0 : type619 a0 a1, (forall y1 : a0 -> Prop, forall y2 : type1413 a0 a1, forall y3 : prod a0 a1, (x0 y1 y2 y3) \/ (forall y4 : a0, forall y5 : a1, ~ (@SETSPEC (prod a0 a1) y3 ((@IN a0 y4 y1) /\ (@IN a1 y5 (y2 y4))) (@pair a0 a1 y4 y5)))) /\ ((fun y1 : type619 a0 a1 => exists y2 : type620 a0 a1, forall y3 : a0 -> Prop, forall y4 : type1413 a0 a1, forall y5 : prod a0 a1, (~ (x0 y3 y4 y5)) \/ (@SETSPEC (prod a0 a1) y5 ((@IN a0 (y1 y3 y4 y5) y3) /\ (@IN a1 (y2 y3 y4 y5) (y4 (y1 y3 y4 y5)))) (@pair a0 a1 (y1 y3 y4 y5) (y2 y3 y4 y5)))) y0).
Definition term963 (a0 : Type') (x0 : Prop) := exists y0 : a0, x0.
Definition term421 (a0 : Type') (x0 : a0) (x1 : a0) := ~ (x0 = x1).
Definition term1077 (a0 : Type') (x0 : a0 -> Prop) (x1 : nat) := Nat.mul (@CARD a0 x0) x1.
Definition term1051 := (forall y0 : nat, (Nat.mul y0 (NUMERAL (BIT1 0))) = y0) /\ ((forall y0 : nat, forall y1 : nat, (Nat.mul (S y0) y1) = (Nat.add (Nat.mul y0 y1) y1)) /\ (forall y0 : nat, forall y1 : nat, (Nat.mul y0 (S y1)) = (Nat.add y0 (Nat.mul y0 y1)))).
Definition term80 (a0 : Type') (x0 : a0) (x1 : a0) := or (x0 = x1).
Definition term1459 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : prod a0 a1) (x2 : a0 -> Prop) (x3 : type1413 a0 a1) := (~ (x0 x2 x3 x1)) \/ (exists y0 : a0, exists y1 : a1, @SETSPEC (prod a0 a1) x1 ((@IN a0 y0 x2) /\ (@IN a1 y1 (x3 y0))) (@pair a0 a1 y0 y1)).
Definition term563 (a0 : Type') := forall y0 : type686 a0, ((y0 (@EMPTY a0)) /\ (forall y1 : a0, forall y2 : a0 -> Prop, ((y0 y2) /\ ((~ (@IN a0 y1 y2)) /\ (@FINITE a0 y2))) -> y0 (@INSERT a0 y1 y2))) -> forall y1 : a0 -> Prop, (@FINITE a0 y1) -> y0 y1.
Definition term1462 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : prod a0 a1) (x2 : a0 -> Prop) (x3 : type1413 a0 a1) := (x0 x2 x3 x1) \/ (forall y0 : a0, forall y1 : a1, ~ (@SETSPEC (prod a0 a1) x1 ((@IN a0 y0 x2) /\ (@IN a1 y1 (x3 y0))) (@pair a0 a1 y0 y1))).
Definition term2102 (a0 : Type') (a1 : Type') (x0 : prod a0 a1) (x1 : a1) (x2 : type1413 a0 a1) (x3 : a0) (x4 : a1) := (fun y0 : a1 => forall y1 : a0, forall y2 : a0 -> Prop, forall y3 : nat, forall y4 : nat, (~ (@IN a0 x3 y2)) -> (@FINITE a0 y2) -> (y4 = (S (@CARD a0 y2))) -> (@HAS_SIZE a1 (x2 x3) y3) -> (forall y5 : a0, (@IN a0 y5 y2) -> @HAS_SIZE a1 (x2 y5) y3) -> (forall y5 : type1413 a0 a1, forall y6 : nat, (forall y7 : a0, (@IN a0 y7 y2) -> @HAS_SIZE a1 (y5 y7) y6) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y7 : prod a0 a1 => exists y8 : a0, exists y9 : a1, @SETSPEC (prod a0 a1) y7 ((@IN a0 y8 y2) /\ (@IN a1 y9 (y5 y8))) (@pair a0 a1 y8 y9))) (Nat.mul (@CARD a0 y2) y6)) -> (@IN a0 y1 y2) -> (@IN a1 y0 (x2 y1)) -> (x0 = (@pair a0 a1 y1 y0)) -> (x0 = (@pair a0 a1 x3 x1)) -> (@IN a1 x1 (x2 x3)) -> (forall y5 : a0, forall y6 : a1, forall y7 : a0, forall y8 : a1, ((@pair a0 a1 y5 y6) = (@pair a0 a1 y7 y8)) = ((y5 = y7) /\ (y6 = y8))) -> (forall y5 : a0, forall y6 : nat, forall y7 : a0, forall y8 : nat, ((@pair a0 nat y5 y6) = (@pair a0 nat y7 y8)) = ((y5 = y7) /\ (y6 = y8))) -> (forall y5 : a0, forall y6 : prod a0 a1, forall y7 : a0, forall y8 : prod a0 a1, ((@pair a0 (prod a0 a1) y5 y6) = (@pair a0 (prod a0 a1) y7 y8)) = ((y5 = y7) /\ (y6 = y8))) -> (forall y5 : nat, forall y6 : a1, forall y7 : nat, forall y8 : a1, ((@pair nat a1 y5 y6) = (@pair nat a1 y7 y8)) = ((y5 = y7) /\ (y6 = y8))) -> (forall y5 : prod a0 a1, forall y6 : a1, forall y7 : prod a0 a1, forall y8 : a1, ((@pair (prod a0 a1) a1 y5 y6) = (@pair (prod a0 a1) a1 y7 y8)) = ((y5 = y7) /\ (y6 = y8))) -> False) x4.
Definition term1695 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : type619 a0 a1) := fun y0 : a0 -> Prop => exists y1 : type465 a0 a1, forall y2 : type1413 a0 a1, forall y3 : prod a0 a1, (~ (x0 y0 y2 y3)) \/ (@SETSPEC (prod a0 a1) y3 ((@IN a0 (x1 y0 y2 y3) y0) /\ (@IN a1 (y1 y2 y3) (y2 (x1 y0 y2 y3)))) (@pair a0 a1 (x1 y0 y2 y3) (y1 y2 y3))).
Definition term263 (a0 : Type') (a1 : Type') (x0 : prod a1 a0) (x1 : type1470 a0 a1) (x2 : a1) := forall y0 : a0, (~ (x0 = (@pair a1 a0 x2 y0))) \/ (~ (x1 x2 y0)).
Definition term1902 (a0 : Type') (a1 : Type') (x0 : a0) := fun y0 : a1 => (forall y1 : a0, forall y2 : a1, ((@pair a0 a1 x0 y0) = (@pair a0 a1 y1 y2)) \/ ((~ (x0 = y1)) \/ (~ (y0 = y2)))) /\ (forall y1 : a0, forall y2 : a1, (~ ((@pair a0 a1 x0 y0) = (@pair a0 a1 y1 y2))) \/ ((x0 = y1) /\ (y0 = y2))).
Definition term289 (a0 : Type') (a1 : Type') (x0 : a1) (x1 : a1 -> Prop) (x2 : type1470 a0 a1) (x3 : prod a1 a0) (x4 : a1) := and ((fun y0 : a1 => exists y1 : a0, (((y0 = x0) \/ (x1 y0)) /\ (x2 y0 y1)) /\ (x3 = (@pair a1 a0 y0 y1))) x4).
Definition term283 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : prod a1 a0) (x2 : type1470 a0 a1) (x3 : a1) := exists y0 : a1, ((fun y1 : a1 => exists y2 : a0, (((y1 = x3) \/ (x0 y1)) /\ (x2 y1 y2)) /\ (x1 = (@pair a1 a0 y1 y2))) y0) /\ ((forall y1 : a1, forall y2 : a0, ((~ (x0 y1)) \/ (~ (x2 y1 y2))) \/ (~ (x1 = (@pair a1 a0 y1 y2)))) /\ (forall y1 : a0, (~ (x1 = (@pair a1 a0 x3 y1))) \/ (~ (x2 x3 y1)))).
Definition term1838 (a0 : Type') (a1 : Type') (x0 : type471 a0 a1) (x1 : type621 a0 a1) (x2 : a0 -> Prop) := forall y0 : type1413 a0 a1, forall y1 : nat, ((@IN a0 (x0 y0 y1) x2) /\ (~ (@HAS_SIZE a1 (y0 (x0 y0 y1)) y1))) \/ (@HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (x1 x2 y0)) (Nat.mul (@CARD a0 x2) y1)).
Definition term1776 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : a0 -> Prop) := forall y0 : type1413 a0 a1, forall y1 : nat, (exists y2 : a0, (@IN a0 y2 x1) /\ (~ (@HAS_SIZE a1 (y0 y2) y1))) \/ (@HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (x0 x1 y0)) (Nat.mul (@CARD a0 x1) y1)).
Definition term1718 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : type619 a0 a1) (x2 : type620 a0 a1) (x3 : a0 -> Prop) := forall y0 : type1413 a0 a1, forall y1 : prod a0 a1, (~ (x0 x3 y0 y1)) \/ (@SETSPEC (prod a0 a1) y1 ((@IN a0 (x1 x3 y0 y1) x3) /\ (@IN a1 (x2 x3 y0 y1) (y0 (x1 x3 y0 y1)))) (@pair a0 a1 (x1 x3 y0 y1) (x2 x3 y0 y1))).
Definition term1710 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : type619 a0 a1) (x2 : a0 -> Prop) (x3 : type465 a0 a1) := forall y0 : type1413 a0 a1, forall y1 : prod a0 a1, (~ (x0 x2 y0 y1)) \/ (@SETSPEC (prod a0 a1) y1 ((@IN a0 (x1 x2 y0 y1) x2) /\ (@IN a1 (x3 y0 y1) (y0 (x1 x2 y0 y1)))) (@pair a0 a1 (x1 x2 y0 y1) (x3 y0 y1))).
Definition term1670 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : a0 -> Prop) (x2 : type464 a0 a1) (x3 : type465 a0 a1) := forall y0 : type1413 a0 a1, forall y1 : prod a0 a1, (~ (x0 x1 y0 y1)) \/ (@SETSPEC (prod a0 a1) y1 ((@IN a0 (x2 y0 y1) x1) /\ (@IN a1 (x3 y0 y1) (y0 (x2 y0 y1)))) (@pair a0 a1 (x2 y0 y1) (x3 y0 y1))).
Definition term1517 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : a0 -> Prop) := forall y0 : type1413 a0 a1, forall y1 : prod a0 a1, (~ (x0 x1 y0 y1)) \/ (exists y2 : a0, exists y3 : a1, @SETSPEC (prod a0 a1) y1 ((@IN a0 y2 x1) /\ (@IN a1 y3 (y0 y2))) (@pair a0 a1 y2 y3)).
Definition term1512 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : a0 -> Prop) := forall y0 : type1413 a0 a1, forall y1 : prod a0 a1, (x0 x1 y0 y1) \/ (forall y2 : a0, forall y3 : a1, ~ (@SETSPEC (prod a0 a1) y1 ((@IN a0 y2 x1) /\ (@IN a1 y3 (y0 y2))) (@pair a0 a1 y2 y3))).
Definition term1470 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : a0 -> Prop) := forall y0 : type1413 a0 a1, forall y1 : prod a0 a1, ((x0 x1 y0 y1) \/ (forall y2 : a0, forall y3 : a1, ~ (@SETSPEC (prod a0 a1) y1 ((@IN a0 y2 x1) /\ (@IN a1 y3 (y0 y2))) (@pair a0 a1 y2 y3)))) /\ ((~ (x0 x1 y0 y1)) \/ (exists y2 : a0, exists y3 : a1, @SETSPEC (prod a0 a1) y1 ((@IN a0 y2 x1) /\ (@IN a1 y3 (y0 y2))) (@pair a0 a1 y2 y3))).
Definition term1432 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : a0 -> Prop) := forall y0 : type1413 a0 a1, forall y1 : prod a0 a1, (x0 x1 y0 y1) = (exists y2 : a0, exists y3 : a1, @SETSPEC (prod a0 a1) y1 ((@IN a0 y2 x1) /\ (@IN a1 y3 (y0 y2))) (@pair a0 a1 y2 y3)).
Definition term1352 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : a0 -> Prop) := forall y0 : type1413 a0 a1, forall y1 : nat, (forall y2 : a0, (@IN a0 y2 x1) -> @HAS_SIZE a1 (y0 y2) y1) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (x0 x1 y0)) (Nat.mul (@CARD a0 x1) y1).
Definition term1087 (a0 : Type') (a1 : Type') (x0 : a0 -> a1) := forall y0 : a0 -> Prop, forall y1 : nat, ((forall y2 : a0, forall y3 : a0, ((@IN a0 y2 y0) /\ ((@IN a0 y3 y0) /\ ((x0 y2) = (x0 y3)))) -> y2 = y3) /\ (@HAS_SIZE a0 y0 y1)) -> @HAS_SIZE a1 (@IMAGE a0 a1 x0 y0) y1.
Definition term1061 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) := forall y0 : type1413 a0 a1, forall y1 : nat, (forall y2 : a0, (@IN a0 y2 x0) -> @HAS_SIZE a1 (y0 y2) y1) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y2 : prod a0 a1 => exists y3 : a0, exists y4 : a1, @SETSPEC (prod a0 a1) y2 ((@IN a0 y3 x0) /\ (@IN a1 y4 (y0 y3))) (@pair a0 a1 y3 y4))) (Nat.mul (@CARD a0 x0) y1).
Definition term896 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a0 -> Prop) (x2 : nat) := forall y0 : type1413 a0 a1, forall y1 : nat, (forall y2 : a0, ((y2 = x0) \/ (@IN a0 y2 x1)) -> @HAS_SIZE a1 (y0 y2) y1) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y2 : prod a0 a1 => exists y3 : a0, exists y4 : a1, @SETSPEC (prod a0 a1) y2 (((y3 = x0) \/ (@IN a0 y3 x1)) /\ (@IN a1 y4 (y0 y3))) (@pair a0 a1 y3 y4))) (Nat.mul x2 y1).
Definition term811 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a0 -> Prop) (x2 : nat) := forall y0 : type1413 a0 a1, forall y1 : nat, (forall y2 : a0, (@IN a0 y2 (@INSERT a0 x0 x1)) -> @HAS_SIZE a1 (y0 y2) y1) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y2 : prod a0 a1 => exists y3 : a0, exists y4 : a1, @SETSPEC (prod a0 a1) y2 ((@IN a0 y3 (@INSERT a0 x0 x1)) /\ (@IN a1 y4 (y0 y3))) (@pair a0 a1 y3 y4))) (Nat.mul x2 y1).
Definition term791 (a0 : Type') (a1 : Type') (x0 : nat) := forall y0 : type1413 a0 a1, forall y1 : nat, @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y2 : prod a0 a1 => exists y3 : a0, exists y4 : a1, @SETSPEC (prod a0 a1) y2 False (@pair a0 a1 y3 y4))) (Nat.mul x0 y1).
Definition term725 (a0 : Type') (a1 : Type') (x0 : nat) := forall y0 : type1413 a0 a1, forall y1 : nat, (forall y2 : a0, (@IN a0 y2 (@EMPTY a0)) -> @HAS_SIZE a1 (y0 y2) y1) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y2 : prod a0 a1 => exists y3 : a0, exists y4 : a1, @SETSPEC (prod a0 a1) y2 ((@IN a0 y3 (@EMPTY a0)) /\ (@IN a1 y4 (y0 y3))) (@pair a0 a1 y3 y4))) (Nat.mul x0 y1).
Definition term668 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : nat) := forall y0 : type1413 a0 a1, forall y1 : nat, (forall y2 : a0, (@IN a0 y2 x0) -> @HAS_SIZE a1 (y0 y2) y1) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y2 : prod a0 a1 => exists y3 : a0, exists y4 : a1, @SETSPEC (prod a0 a1) y2 ((@IN a0 y3 x0) /\ (@IN a1 y4 (y0 y3))) (@pair a0 a1 y3 y4))) (Nat.mul x1 y1).
Definition term596 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : nat) := forall y0 : type1413 a0 a1, forall y1 : nat, (((@FINITE a0 x0) /\ ((@CARD a0 x0) = x1)) /\ (forall y2 : a0, (@IN a0 y2 x0) -> @HAS_SIZE a1 (y0 y2) y1)) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y2 : prod a0 a1 => exists y3 : a0, exists y4 : a1, @SETSPEC (prod a0 a1) y2 ((@IN a0 y3 x0) /\ (@IN a1 y4 (y0 y3))) (@pair a0 a1 y3 y4))) (Nat.mul x1 y1).
Definition term595 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : nat) := forall y0 : type1413 a0 a1, forall y1 : nat, ((@HAS_SIZE a0 x0 x1) /\ (forall y2 : a0, (@IN a0 y2 x0) -> @HAS_SIZE a1 (y0 y2) y1)) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y2 : prod a0 a1 => exists y3 : a0, exists y4 : a1, @SETSPEC (prod a0 a1) y2 ((@IN a0 y3 x0) /\ (@IN a1 y4 (y0 y3))) (@pair a0 a1 y3 y4))) (Nat.mul x1 y1).
Definition term193 (a0 : Type') (a1 : Type') (x0 : type1470 a0 a1) (x1 : a1) := forall y0 : a1 -> Prop, forall y1 : prod a1 a0, (exists y2 : a1, exists y3 : a0, (((y2 = x1) \/ (y0 y2)) /\ (x0 y2 y3)) /\ (y1 = (@pair a1 a0 y2 y3))) = ((exists y2 : a1, exists y3 : a0, ((y0 y2) /\ (x0 y2 y3)) /\ (y1 = (@pair a1 a0 y2 y3))) \/ (exists y2 : a0, (y1 = (@pair a1 a0 x1 y2)) /\ (x0 x1 y2))).
Definition term21 (a0 : Type') (a1 : Type') (x0 : a1) := forall y0 : a0 -> Prop, forall y1 : a0 -> a1, (@IN a1 x0 (@IMAGE a0 a1 y1 y0)) = (exists y2 : a0, (x0 = (y1 y2)) /\ (@IN a0 y2 y0)).
Definition term37 (a0 : Type') (x0 : a0 -> Prop) (x1 : a0 -> Prop) (x2 : nat) (x3 : nat) := (fun y0 : nat => ((@HAS_SIZE a0 x0 x2) /\ ((@HAS_SIZE a0 x1 y0) /\ (@DISJOINT a0 x0 x1))) -> @HAS_SIZE a0 (@UNION a0 x0 x1) (Nat.add x2 y0)) x3.
Definition term863 (a0 : Type') (a1 : Type') (x0 : nat) (x1 : a0) (x2 : a0 -> Prop) (x3 : type1413 a0 a1) (x4 : nat) (x5 : Prop) := ((forall y0 : a0, ((y0 = x1) \/ (@IN a0 y0 x2)) -> @HAS_SIZE a1 (x3 y0) x4) -> (@HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y0 : prod a0 a1 => exists y1 : a0, exists y2 : a1, @SETSPEC (prod a0 a1) y0 ((@IN a0 y1 (@INSERT a0 x1 x2)) /\ (@IN a1 y2 (x3 y1))) (@pair a0 a1 y1 y2))) (Nat.mul x0 x4)) = x5) -> ((forall y0 : a0, (@IN a0 y0 (@INSERT a0 x1 x2)) -> @HAS_SIZE a1 (x3 y0) x4) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y0 : prod a0 a1 => exists y1 : a0, exists y2 : a1, @SETSPEC (prod a0 a1) y0 ((@IN a0 y1 (@INSERT a0 x1 x2)) /\ (@IN a1 y2 (x3 y1))) (@pair a0 a1 y1 y2))) (Nat.mul x0 x4)) = ((forall y0 : a0, ((y0 = x1) \/ (@IN a0 y0 x2)) -> @HAS_SIZE a1 (x3 y0) x4) -> x5).
Definition term858 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a0 -> Prop) (x2 : type1413 a0 a1) (x3 : a0) (x4 : nat) := ((x3 = x0) \/ (@IN a0 x3 x1)) -> @HAS_SIZE a1 (x2 x3) x4.
Definition term1842 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a0) (x2 : a1) (x3 : a1) := ~ ((x0 = x1) /\ (x2 = x3)).
Definition term1952 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a1) (x2 : a0) (x3 : a1) := or (~ ((@pair a0 a1 x0 x1) = (@pair a0 a1 x2 x3))).
Definition term1371 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : a1) (x2 : type1413 a0 a1) (x3 : a0) := forall y0 : prod a0 a1, forall y1 : a1, forall y2 : a0, forall y3 : a0 -> Prop, forall y4 : nat, forall y5 : nat, (~ (@IN a0 x3 y3)) -> (@FINITE a0 y3) -> (y5 = (S (@CARD a0 y3))) -> (@HAS_SIZE a1 (x2 x3) y4) -> (forall y6 : a0, (@IN a0 y6 y3) -> @HAS_SIZE a1 (x2 y6) y4) -> (forall y6 : type1413 a0 a1, forall y7 : nat, (forall y8 : a0, (@IN a0 y8 y3) -> @HAS_SIZE a1 (y6 y8) y7) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (x0 y3 y6)) (Nat.mul (@CARD a0 y3) y7)) -> (@IN a0 y2 y3) -> (@IN a1 y1 (x2 y2)) -> (y0 = (@pair a0 a1 y2 y1)) -> (y0 = (@pair a0 a1 x3 x1)) -> (@IN a1 x1 (x2 x3)) -> (forall y6 : a0, forall y7 : a1, forall y8 : a0, forall y9 : a1, ((@pair a0 a1 y6 y7) = (@pair a0 a1 y8 y9)) = ((y6 = y8) /\ (y7 = y9))) -> (forall y6 : a0, forall y7 : nat, forall y8 : a0, forall y9 : nat, ((@pair a0 nat y6 y7) = (@pair a0 nat y8 y9)) = ((y6 = y8) /\ (y7 = y9))) -> (forall y6 : a0, forall y7 : prod a0 a1, forall y8 : a0, forall y9 : prod a0 a1, ((@pair a0 (prod a0 a1) y6 y7) = (@pair a0 (prod a0 a1) y8 y9)) = ((y6 = y8) /\ (y7 = y9))) -> (forall y6 : nat, forall y7 : a1, forall y8 : nat, forall y9 : a1, ((@pair nat a1 y6 y7) = (@pair nat a1 y8 y9)) = ((y6 = y8) /\ (y7 = y9))) -> ~ (forall y6 : prod a0 a1, forall y7 : a1, forall y8 : prod a0 a1, forall y9 : a1, ((@pair (prod a0 a1) a1 y6 y7) = (@pair (prod a0 a1) a1 y8 y9)) = ((y6 = y8) /\ (y7 = y9))).
Definition term1328 (a0 : Type') (a1 : Type') (x0 : a0) := forall y0 : prod a0 a1, forall y1 : a0, forall y2 : prod a0 a1, ((@pair a0 (prod a0 a1) x0 y0) = (@pair a0 (prod a0 a1) y1 y2)) = ((x0 = y1) /\ (y0 = y2)).
Definition term1287 (a0 : Type') (a1 : Type') (x0 : a1) (x1 : type1413 a0 a1) (x2 : a0) := forall y0 : prod a0 a1, forall y1 : a1, forall y2 : a0, forall y3 : a0 -> Prop, forall y4 : nat, forall y5 : nat, (~ (@IN a0 x2 y3)) -> (@FINITE a0 y3) -> (y5 = (S (@CARD a0 y3))) -> (@HAS_SIZE a1 (x1 x2) y4) -> (forall y6 : a0, (@IN a0 y6 y3) -> @HAS_SIZE a1 (x1 y6) y4) -> (forall y6 : type1413 a0 a1, forall y7 : nat, (forall y8 : a0, (@IN a0 y8 y3) -> @HAS_SIZE a1 (y6 y8) y7) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y8 : prod a0 a1 => exists y9 : a0, exists y10 : a1, @SETSPEC (prod a0 a1) y8 ((@IN a0 y9 y3) /\ (@IN a1 y10 (y6 y9))) (@pair a0 a1 y9 y10))) (Nat.mul (@CARD a0 y3) y7)) -> (@IN a0 y2 y3) -> (@IN a1 y1 (x1 y2)) -> (y0 = (@pair a0 a1 y2 y1)) -> (y0 = (@pair a0 a1 x2 x0)) -> (@IN a1 x0 (x1 x2)) -> (forall y6 : a0, forall y7 : a1, forall y8 : a0, forall y9 : a1, ((@pair a0 a1 y6 y7) = (@pair a0 a1 y8 y9)) = ((y6 = y8) /\ (y7 = y9))) -> (forall y6 : a0, forall y7 : nat, forall y8 : a0, forall y9 : nat, ((@pair a0 nat y6 y7) = (@pair a0 nat y8 y9)) = ((y6 = y8) /\ (y7 = y9))) -> (forall y6 : a0, forall y7 : prod a0 a1, forall y8 : a0, forall y9 : prod a0 a1, ((@pair a0 (prod a0 a1) y6 y7) = (@pair a0 (prod a0 a1) y8 y9)) = ((y6 = y8) /\ (y7 = y9))) -> (forall y6 : nat, forall y7 : a1, forall y8 : nat, forall y9 : a1, ((@pair nat a1 y6 y7) = (@pair nat a1 y8 y9)) = ((y6 = y8) /\ (y7 = y9))) -> ~ (forall y6 : prod a0 a1, forall y7 : a1, forall y8 : prod a0 a1, forall y9 : a1, ((@pair (prod a0 a1) a1 y6 y7) = (@pair (prod a0 a1) a1 y8 y9)) = ((y6 = y8) /\ (y7 = y9))).
Definition term1286 (a0 : Type') (a1 : Type') (x0 : a1) (x1 : type1413 a0 a1) (x2 : a0) := forall y0 : prod a0 a1, forall y1 : a1, forall y2 : a0, forall y3 : a0 -> Prop, forall y4 : nat, forall y5 : nat, (~ (@IN a0 x2 y3)) -> (@FINITE a0 y3) -> (y5 = (S (@CARD a0 y3))) -> (@HAS_SIZE a1 (x1 x2) y4) -> (forall y6 : a0, (@IN a0 y6 y3) -> @HAS_SIZE a1 (x1 y6) y4) -> (forall y6 : type1413 a0 a1, forall y7 : nat, (forall y8 : a0, (@IN a0 y8 y3) -> @HAS_SIZE a1 (y6 y8) y7) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y8 : prod a0 a1 => exists y9 : a0, exists y10 : a1, @SETSPEC (prod a0 a1) y8 ((@IN a0 y9 y3) /\ (@IN a1 y10 (y6 y9))) (@pair a0 a1 y9 y10))) (Nat.mul (@CARD a0 y3) y7)) -> (@IN a0 y2 y3) -> (@IN a1 y1 (x1 y2)) -> (y0 = (@pair a0 a1 y2 y1)) -> (y0 = (@pair a0 a1 x2 x0)) -> (@IN a1 x0 (x1 x2)) -> (forall y6 : a0, forall y7 : a1, forall y8 : a0, forall y9 : a1, ((@pair a0 a1 y6 y7) = (@pair a0 a1 y8 y9)) = ((y6 = y8) /\ (y7 = y9))) -> (forall y6 : a0, forall y7 : nat, forall y8 : a0, forall y9 : nat, ((@pair a0 nat y6 y7) = (@pair a0 nat y8 y9)) = ((y6 = y8) /\ (y7 = y9))) -> (forall y6 : a0, forall y7 : prod a0 a1, forall y8 : a0, forall y9 : prod a0 a1, ((@pair a0 (prod a0 a1) y6 y7) = (@pair a0 (prod a0 a1) y8 y9)) = ((y6 = y8) /\ (y7 = y9))) -> (forall y6 : nat, forall y7 : a1, forall y8 : nat, forall y9 : a1, ((@pair nat a1 y6 y7) = (@pair nat a1 y8 y9)) = ((y6 = y8) /\ (y7 = y9))) -> (forall y6 : prod a0 a1, forall y7 : a1, forall y8 : prod a0 a1, forall y9 : a1, ((@pair (prod a0 a1) a1 y6 y7) = (@pair (prod a0 a1) a1 y8 y9)) = ((y6 = y8) /\ (y7 = y9))) -> False.
Definition term1215 (a0 : Type') (a1 : Type') := forall y0 : prod a0 a1, forall y1 : a1, forall y2 : prod a0 a1, forall y3 : a1, ((@pair (prod a0 a1) a1 y0 y1) = (@pair (prod a0 a1) a1 y2 y3)) = ((y0 = y2) /\ (y1 = y3)).
Definition term1373 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : type1413 a0 a1) (x2 : a0) := forall y0 : a1, forall y1 : prod a0 a1, forall y2 : a1, forall y3 : a0, forall y4 : a0 -> Prop, forall y5 : nat, forall y6 : nat, (~ (@IN a0 x2 y4)) -> (@FINITE a0 y4) -> (y6 = (S (@CARD a0 y4))) -> (@HAS_SIZE a1 (x1 x2) y5) -> (forall y7 : a0, (@IN a0 y7 y4) -> @HAS_SIZE a1 (x1 y7) y5) -> (forall y7 : type1413 a0 a1, forall y8 : nat, (forall y9 : a0, (@IN a0 y9 y4) -> @HAS_SIZE a1 (y7 y9) y8) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (x0 y4 y7)) (Nat.mul (@CARD a0 y4) y8)) -> (@IN a0 y3 y4) -> (@IN a1 y2 (x1 y3)) -> (y1 = (@pair a0 a1 y3 y2)) -> (y1 = (@pair a0 a1 x2 y0)) -> (@IN a1 y0 (x1 x2)) -> (forall y7 : a0, forall y8 : a1, forall y9 : a0, forall y10 : a1, ((@pair a0 a1 y7 y8) = (@pair a0 a1 y9 y10)) = ((y7 = y9) /\ (y8 = y10))) -> (forall y7 : a0, forall y8 : nat, forall y9 : a0, forall y10 : nat, ((@pair a0 nat y7 y8) = (@pair a0 nat y9 y10)) = ((y7 = y9) /\ (y8 = y10))) -> (forall y7 : a0, forall y8 : prod a0 a1, forall y9 : a0, forall y10 : prod a0 a1, ((@pair a0 (prod a0 a1) y7 y8) = (@pair a0 (prod a0 a1) y9 y10)) = ((y7 = y9) /\ (y8 = y10))) -> (forall y7 : nat, forall y8 : a1, forall y9 : nat, forall y10 : a1, ((@pair nat a1 y7 y8) = (@pair nat a1 y9 y10)) = ((y7 = y9) /\ (y8 = y10))) -> ~ (forall y7 : prod a0 a1, forall y8 : a1, forall y9 : prod a0 a1, forall y10 : a1, ((@pair (prod a0 a1) a1 y7 y8) = (@pair (prod a0 a1) a1 y9 y10)) = ((y7 = y9) /\ (y8 = y10))).
Definition term1312 (a0 : Type') (a1 : Type') (x0 : prod a0 a1) := forall y0 : a1, forall y1 : prod a0 a1, forall y2 : a1, ((@pair (prod a0 a1) a1 x0 y0) = (@pair (prod a0 a1) a1 y1 y2)) = ((x0 = y1) /\ (y0 = y2)).
Definition term1291 (a0 : Type') (a1 : Type') (x0 : type1413 a0 a1) (x1 : a0) := forall y0 : a1, forall y1 : prod a0 a1, forall y2 : a1, forall y3 : a0, forall y4 : a0 -> Prop, forall y5 : nat, forall y6 : nat, (~ (@IN a0 x1 y4)) -> (@FINITE a0 y4) -> (y6 = (S (@CARD a0 y4))) -> (@HAS_SIZE a1 (x0 x1) y5) -> (forall y7 : a0, (@IN a0 y7 y4) -> @HAS_SIZE a1 (x0 y7) y5) -> (forall y7 : type1413 a0 a1, forall y8 : nat, (forall y9 : a0, (@IN a0 y9 y4) -> @HAS_SIZE a1 (y7 y9) y8) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y9 : prod a0 a1 => exists y10 : a0, exists y11 : a1, @SETSPEC (prod a0 a1) y9 ((@IN a0 y10 y4) /\ (@IN a1 y11 (y7 y10))) (@pair a0 a1 y10 y11))) (Nat.mul (@CARD a0 y4) y8)) -> (@IN a0 y3 y4) -> (@IN a1 y2 (x0 y3)) -> (y1 = (@pair a0 a1 y3 y2)) -> (y1 = (@pair a0 a1 x1 y0)) -> (@IN a1 y0 (x0 x1)) -> (forall y7 : a0, forall y8 : a1, forall y9 : a0, forall y10 : a1, ((@pair a0 a1 y7 y8) = (@pair a0 a1 y9 y10)) = ((y7 = y9) /\ (y8 = y10))) -> (forall y7 : a0, forall y8 : nat, forall y9 : a0, forall y10 : nat, ((@pair a0 nat y7 y8) = (@pair a0 nat y9 y10)) = ((y7 = y9) /\ (y8 = y10))) -> (forall y7 : a0, forall y8 : prod a0 a1, forall y9 : a0, forall y10 : prod a0 a1, ((@pair a0 (prod a0 a1) y7 y8) = (@pair a0 (prod a0 a1) y9 y10)) = ((y7 = y9) /\ (y8 = y10))) -> (forall y7 : nat, forall y8 : a1, forall y9 : nat, forall y10 : a1, ((@pair nat a1 y7 y8) = (@pair nat a1 y9 y10)) = ((y7 = y9) /\ (y8 = y10))) -> ~ (forall y7 : prod a0 a1, forall y8 : a1, forall y9 : prod a0 a1, forall y10 : a1, ((@pair (prod a0 a1) a1 y7 y8) = (@pair (prod a0 a1) a1 y9 y10)) = ((y7 = y9) /\ (y8 = y10))).
Definition term1290 (a0 : Type') (a1 : Type') (x0 : type1413 a0 a1) (x1 : a0) := forall y0 : a1, forall y1 : prod a0 a1, forall y2 : a1, forall y3 : a0, forall y4 : a0 -> Prop, forall y5 : nat, forall y6 : nat, (~ (@IN a0 x1 y4)) -> (@FINITE a0 y4) -> (y6 = (S (@CARD a0 y4))) -> (@HAS_SIZE a1 (x0 x1) y5) -> (forall y7 : a0, (@IN a0 y7 y4) -> @HAS_SIZE a1 (x0 y7) y5) -> (forall y7 : type1413 a0 a1, forall y8 : nat, (forall y9 : a0, (@IN a0 y9 y4) -> @HAS_SIZE a1 (y7 y9) y8) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y9 : prod a0 a1 => exists y10 : a0, exists y11 : a1, @SETSPEC (prod a0 a1) y9 ((@IN a0 y10 y4) /\ (@IN a1 y11 (y7 y10))) (@pair a0 a1 y10 y11))) (Nat.mul (@CARD a0 y4) y8)) -> (@IN a0 y3 y4) -> (@IN a1 y2 (x0 y3)) -> (y1 = (@pair a0 a1 y3 y2)) -> (y1 = (@pair a0 a1 x1 y0)) -> (@IN a1 y0 (x0 x1)) -> (forall y7 : a0, forall y8 : a1, forall y9 : a0, forall y10 : a1, ((@pair a0 a1 y7 y8) = (@pair a0 a1 y9 y10)) = ((y7 = y9) /\ (y8 = y10))) -> (forall y7 : a0, forall y8 : nat, forall y9 : a0, forall y10 : nat, ((@pair a0 nat y7 y8) = (@pair a0 nat y9 y10)) = ((y7 = y9) /\ (y8 = y10))) -> (forall y7 : a0, forall y8 : prod a0 a1, forall y9 : a0, forall y10 : prod a0 a1, ((@pair a0 (prod a0 a1) y7 y8) = (@pair a0 (prod a0 a1) y9 y10)) = ((y7 = y9) /\ (y8 = y10))) -> (forall y7 : nat, forall y8 : a1, forall y9 : nat, forall y10 : a1, ((@pair nat a1 y7 y8) = (@pair nat a1 y9 y10)) = ((y7 = y9) /\ (y8 = y10))) -> (forall y7 : prod a0 a1, forall y8 : a1, forall y9 : prod a0 a1, forall y10 : a1, ((@pair (prod a0 a1) a1 y7 y8) = (@pair (prod a0 a1) a1 y9 y10)) = ((y7 = y9) /\ (y8 = y10))) -> False.
Definition term201 (a0 : Type') (a1 : Type') := forall y0 : a1, forall y1 : type1470 a0 a1, forall y2 : a1 -> Prop, forall y3 : prod a1 a0, (exists y4 : a1, exists y5 : a0, (((y4 = y0) \/ (y2 y4)) /\ (y1 y4 y5)) /\ (y3 = (@pair a1 a0 y4 y5))) = ((exists y4 : a1, exists y5 : a0, ((y2 y4) /\ (y1 y4 y5)) /\ (y3 = (@pair a1 a0 y4 y5))) \/ (exists y4 : a0, (y3 = (@pair a1 a0 y0 y4)) /\ (y1 y0 y4))).
Definition term200 (a0 : Type') (a1 : Type') := forall y0 : a1, forall y1 : type1470 a0 a1, forall y2 : a1 -> Prop, (~ (forall y3 : prod a1 a0, (exists y4 : a1, exists y5 : a0, (((y4 = y0) \/ (y2 y4)) /\ (y1 y4 y5)) /\ (y3 = (@pair a1 a0 y4 y5))) = ((exists y4 : a1, exists y5 : a0, ((y2 y4) /\ (y1 y4 y5)) /\ (y3 = (@pair a1 a0 y4 y5))) \/ (exists y4 : a0, (y3 = (@pair a1 a0 y0 y4)) /\ (y1 y0 y4))))) -> False.
Definition term1385 (a0 : Type') (a1 : Type') := @eq Prop (forall y0 : a0, forall y1 : type1413 a0 a1, forall y2 : a1, forall y3 : prod a0 a1, forall y4 : a1, forall y5 : a0, forall y6 : a0 -> Prop, forall y7 : nat, forall y8 : nat, (~ (@IN a0 y0 y6)) -> (@FINITE a0 y6) -> (y8 = (S (@CARD a0 y6))) -> (@HAS_SIZE a1 (y1 y0) y7) -> (forall y9 : a0, (@IN a0 y9 y6) -> @HAS_SIZE a1 (y1 y9) y7) -> (forall y9 : type1413 a0 a1, forall y10 : nat, (forall y11 : a0, (@IN a0 y11 y6) -> @HAS_SIZE a1 (y9 y11) y10) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y11 : prod a0 a1 => exists y12 : a0, exists y13 : a1, @SETSPEC (prod a0 a1) y11 ((@IN a0 y12 y6) /\ (@IN a1 y13 (y9 y12))) (@pair a0 a1 y12 y13))) (Nat.mul (@CARD a0 y6) y10)) -> (@IN a0 y5 y6) -> (@IN a1 y4 (y1 y5)) -> (y3 = (@pair a0 a1 y5 y4)) -> (y3 = (@pair a0 a1 y0 y2)) -> (@IN a1 y2 (y1 y0)) -> (forall y9 : a0, forall y10 : a1, forall y11 : a0, forall y12 : a1, ((@pair a0 a1 y9 y10) = (@pair a0 a1 y11 y12)) = ((y9 = y11) /\ (y10 = y12))) -> (forall y9 : a0, forall y10 : nat, forall y11 : a0, forall y12 : nat, ((@pair a0 nat y9 y10) = (@pair a0 nat y11 y12)) = ((y9 = y11) /\ (y10 = y12))) -> (forall y9 : a0, forall y10 : prod a0 a1, forall y11 : a0, forall y12 : prod a0 a1, ((@pair a0 (prod a0 a1) y9 y10) = (@pair a0 (prod a0 a1) y11 y12)) = ((y9 = y11) /\ (y10 = y12))) -> (forall y9 : nat, forall y10 : a1, forall y11 : nat, forall y12 : a1, ((@pair nat a1 y9 y10) = (@pair nat a1 y11 y12)) = ((y9 = y11) /\ (y10 = y12))) -> ~ (forall y9 : prod a0 a1, forall y10 : a1, forall y11 : prod a0 a1, forall y12 : a1, ((@pair (prod a0 a1) a1 y9 y10) = (@pair (prod a0 a1) a1 y11 y12)) = ((y9 = y11) /\ (y10 = y12)))).
Definition term949 (a0 : Type') (a1 : Type') (x0 : prod a0 a1) (x1 : prod a0 a1) := False /\ (x0 = x1).
Definition term608 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : type1413 a0 a1) (x2 : nat) (x3 : nat) := (@FINITE a0 x0) -> ((@CARD a0 x0) = x2) -> (forall y0 : a0, (@IN a0 y0 x0) -> @HAS_SIZE a1 (x1 y0) x3) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y0 : prod a0 a1 => exists y1 : a0, exists y2 : a1, @SETSPEC (prod a0 a1) y0 ((@IN a0 y1 x0) /\ (@IN a1 y2 (x1 y1))) (@pair a0 a1 y1 y2))) (Nat.mul x2 x3).
Definition term1370 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : a1) (x2 : type1413 a0 a1) (x3 : a0) := fun y0 : prod a0 a1 => forall y1 : a1, forall y2 : a0, forall y3 : a0 -> Prop, forall y4 : nat, forall y5 : nat, (~ (@IN a0 x3 y3)) -> (@FINITE a0 y3) -> (y5 = (S (@CARD a0 y3))) -> (@HAS_SIZE a1 (x2 x3) y4) -> (forall y6 : a0, (@IN a0 y6 y3) -> @HAS_SIZE a1 (x2 y6) y4) -> (forall y6 : type1413 a0 a1, forall y7 : nat, (forall y8 : a0, (@IN a0 y8 y3) -> @HAS_SIZE a1 (y6 y8) y7) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (x0 y3 y6)) (Nat.mul (@CARD a0 y3) y7)) -> (@IN a0 y2 y3) -> (@IN a1 y1 (x2 y2)) -> (y0 = (@pair a0 a1 y2 y1)) -> (y0 = (@pair a0 a1 x3 x1)) -> (@IN a1 x1 (x2 x3)) -> (forall y6 : a0, forall y7 : a1, forall y8 : a0, forall y9 : a1, ((@pair a0 a1 y6 y7) = (@pair a0 a1 y8 y9)) = ((y6 = y8) /\ (y7 = y9))) -> (forall y6 : a0, forall y7 : nat, forall y8 : a0, forall y9 : nat, ((@pair a0 nat y6 y7) = (@pair a0 nat y8 y9)) = ((y6 = y8) /\ (y7 = y9))) -> (forall y6 : a0, forall y7 : prod a0 a1, forall y8 : a0, forall y9 : prod a0 a1, ((@pair a0 (prod a0 a1) y6 y7) = (@pair a0 (prod a0 a1) y8 y9)) = ((y6 = y8) /\ (y7 = y9))) -> (forall y6 : nat, forall y7 : a1, forall y8 : nat, forall y9 : a1, ((@pair nat a1 y6 y7) = (@pair nat a1 y8 y9)) = ((y6 = y8) /\ (y7 = y9))) -> ~ (forall y6 : prod a0 a1, forall y7 : a1, forall y8 : prod a0 a1, forall y9 : a1, ((@pair (prod a0 a1) a1 y6 y7) = (@pair (prod a0 a1) a1 y8 y9)) = ((y6 = y8) /\ (y7 = y9))).
Definition term1313 (a0 : Type') (a1 : Type') := fun y0 : prod a0 a1 => forall y1 : a1, forall y2 : prod a0 a1, forall y3 : a1, ((@pair (prod a0 a1) a1 y0 y1) = (@pair (prod a0 a1) a1 y2 y3)) = ((y0 = y2) /\ (y1 = y3)).
Definition term1285 (a0 : Type') (a1 : Type') (x0 : a1) (x1 : type1413 a0 a1) (x2 : a0) := fun y0 : prod a0 a1 => forall y1 : a1, forall y2 : a0, forall y3 : a0 -> Prop, forall y4 : nat, forall y5 : nat, (~ (@IN a0 x2 y3)) -> (@FINITE a0 y3) -> (y5 = (S (@CARD a0 y3))) -> (@HAS_SIZE a1 (x1 x2) y4) -> (forall y6 : a0, (@IN a0 y6 y3) -> @HAS_SIZE a1 (x1 y6) y4) -> (forall y6 : type1413 a0 a1, forall y7 : nat, (forall y8 : a0, (@IN a0 y8 y3) -> @HAS_SIZE a1 (y6 y8) y7) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y8 : prod a0 a1 => exists y9 : a0, exists y10 : a1, @SETSPEC (prod a0 a1) y8 ((@IN a0 y9 y3) /\ (@IN a1 y10 (y6 y9))) (@pair a0 a1 y9 y10))) (Nat.mul (@CARD a0 y3) y7)) -> (@IN a0 y2 y3) -> (@IN a1 y1 (x1 y2)) -> (y0 = (@pair a0 a1 y2 y1)) -> (y0 = (@pair a0 a1 x2 x0)) -> (@IN a1 x0 (x1 x2)) -> (forall y6 : a0, forall y7 : a1, forall y8 : a0, forall y9 : a1, ((@pair a0 a1 y6 y7) = (@pair a0 a1 y8 y9)) = ((y6 = y8) /\ (y7 = y9))) -> (forall y6 : a0, forall y7 : nat, forall y8 : a0, forall y9 : nat, ((@pair a0 nat y6 y7) = (@pair a0 nat y8 y9)) = ((y6 = y8) /\ (y7 = y9))) -> (forall y6 : a0, forall y7 : prod a0 a1, forall y8 : a0, forall y9 : prod a0 a1, ((@pair a0 (prod a0 a1) y6 y7) = (@pair a0 (prod a0 a1) y8 y9)) = ((y6 = y8) /\ (y7 = y9))) -> (forall y6 : nat, forall y7 : a1, forall y8 : nat, forall y9 : a1, ((@pair nat a1 y6 y7) = (@pair nat a1 y8 y9)) = ((y6 = y8) /\ (y7 = y9))) -> ~ (forall y6 : prod a0 a1, forall y7 : a1, forall y8 : prod a0 a1, forall y9 : a1, ((@pair (prod a0 a1) a1 y6 y7) = (@pair (prod a0 a1) a1 y8 y9)) = ((y6 = y8) /\ (y7 = y9))).
Definition term1284 (a0 : Type') (a1 : Type') (x0 : a1) (x1 : type1413 a0 a1) (x2 : a0) := fun y0 : prod a0 a1 => forall y1 : a1, forall y2 : a0, forall y3 : a0 -> Prop, forall y4 : nat, forall y5 : nat, (~ (@IN a0 x2 y3)) -> (@FINITE a0 y3) -> (y5 = (S (@CARD a0 y3))) -> (@HAS_SIZE a1 (x1 x2) y4) -> (forall y6 : a0, (@IN a0 y6 y3) -> @HAS_SIZE a1 (x1 y6) y4) -> (forall y6 : type1413 a0 a1, forall y7 : nat, (forall y8 : a0, (@IN a0 y8 y3) -> @HAS_SIZE a1 (y6 y8) y7) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y8 : prod a0 a1 => exists y9 : a0, exists y10 : a1, @SETSPEC (prod a0 a1) y8 ((@IN a0 y9 y3) /\ (@IN a1 y10 (y6 y9))) (@pair a0 a1 y9 y10))) (Nat.mul (@CARD a0 y3) y7)) -> (@IN a0 y2 y3) -> (@IN a1 y1 (x1 y2)) -> (y0 = (@pair a0 a1 y2 y1)) -> (y0 = (@pair a0 a1 x2 x0)) -> (@IN a1 x0 (x1 x2)) -> (forall y6 : a0, forall y7 : a1, forall y8 : a0, forall y9 : a1, ((@pair a0 a1 y6 y7) = (@pair a0 a1 y8 y9)) = ((y6 = y8) /\ (y7 = y9))) -> (forall y6 : a0, forall y7 : nat, forall y8 : a0, forall y9 : nat, ((@pair a0 nat y6 y7) = (@pair a0 nat y8 y9)) = ((y6 = y8) /\ (y7 = y9))) -> (forall y6 : a0, forall y7 : prod a0 a1, forall y8 : a0, forall y9 : prod a0 a1, ((@pair a0 (prod a0 a1) y6 y7) = (@pair a0 (prod a0 a1) y8 y9)) = ((y6 = y8) /\ (y7 = y9))) -> (forall y6 : nat, forall y7 : a1, forall y8 : nat, forall y9 : a1, ((@pair nat a1 y6 y7) = (@pair nat a1 y8 y9)) = ((y6 = y8) /\ (y7 = y9))) -> (forall y6 : prod a0 a1, forall y7 : a1, forall y8 : prod a0 a1, forall y9 : a1, ((@pair (prod a0 a1) a1 y6 y7) = (@pair (prod a0 a1) a1 y8 y9)) = ((y6 = y8) /\ (y7 = y9))) -> False.
Definition term909 (a0 : Type') (a1 : Type') := fun y0 : a0 => forall y1 : a0 -> Prop, ((forall y2 : nat, ((@CARD a0 y1) = y2) -> forall y3 : type1413 a0 a1, forall y4 : nat, (forall y5 : a0, (@IN a0 y5 y1) -> @HAS_SIZE a1 (y3 y5) y4) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y5 : prod a0 a1 => exists y6 : a0, exists y7 : a1, @SETSPEC (prod a0 a1) y5 ((@IN a0 y6 y1) /\ (@IN a1 y7 (y3 y6))) (@pair a0 a1 y6 y7))) (Nat.mul y2 y4)) /\ ((~ (@IN a0 y0 y1)) /\ (@FINITE a0 y1))) -> forall y2 : nat, ((S (@CARD a0 y1)) = y2) -> forall y3 : type1413 a0 a1, forall y4 : nat, (forall y5 : a0, ((y5 = y0) \/ (@IN a0 y5 y1)) -> @HAS_SIZE a1 (y3 y5) y4) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y5 : prod a0 a1 => exists y6 : a0, exists y7 : a1, @SETSPEC (prod a0 a1) y5 (((y6 = y0) \/ (@IN a0 y6 y1)) /\ (@IN a1 y7 (y3 y6))) (@pair a0 a1 y6 y7))) (Nat.mul y2 y4).
Definition term710 (a0 : Type') (a1 : Type') := fun y0 : a0 => forall y1 : a0 -> Prop, ((forall y2 : nat, ((@CARD a0 y1) = y2) -> forall y3 : type1413 a0 a1, forall y4 : nat, (forall y5 : a0, (@IN a0 y5 y1) -> @HAS_SIZE a1 (y3 y5) y4) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y5 : prod a0 a1 => exists y6 : a0, exists y7 : a1, @SETSPEC (prod a0 a1) y5 ((@IN a0 y6 y1) /\ (@IN a1 y7 (y3 y6))) (@pair a0 a1 y6 y7))) (Nat.mul y2 y4)) /\ ((~ (@IN a0 y0 y1)) /\ (@FINITE a0 y1))) -> forall y2 : nat, ((@CARD a0 (@INSERT a0 y0 y1)) = y2) -> forall y3 : type1413 a0 a1, forall y4 : nat, (forall y5 : a0, (@IN a0 y5 (@INSERT a0 y0 y1)) -> @HAS_SIZE a1 (y3 y5) y4) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y5 : prod a0 a1 => exists y6 : a0, exists y7 : a1, @SETSPEC (prod a0 a1) y5 ((@IN a0 y6 (@INSERT a0 y0 y1)) /\ (@IN a1 y7 (y3 y6))) (@pair a0 a1 y6 y7))) (Nat.mul y2 y4).
Definition term516 (x0 : Prop) (x1 : Prop) (x2 : Prop) := (fun y0 : Prop => ((y0 \/ x0) -> x1) = ((y0 -> x1) /\ (x0 -> x1))) x2.
Definition term671 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) := fun y0 : nat => (@FINITE a0 x0) -> ((@CARD a0 x0) = y0) -> forall y1 : type1413 a0 a1, forall y2 : nat, (forall y3 : a0, (@IN a0 y3 x0) -> @HAS_SIZE a1 (y1 y3) y2) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y3 : prod a0 a1 => exists y4 : a0, exists y5 : a1, @SETSPEC (prod a0 a1) y3 ((@IN a0 y4 x0) /\ (@IN a1 y5 (y1 y4))) (@pair a0 a1 y4 y5))) (Nat.mul y0 y2).
Definition term1303 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : a0 -> Prop) := @eq ((a0 -> a1 -> Prop) -> (prod a0 a1) -> Prop) (x0 x1).
Definition term308 (a0 : Type') (a1 : Type') (x0 : a1) (x1 : a1 -> Prop) (x2 : prod a1 a0) (x3 : type1470 a0 a1) (x4 : a1) := fun y0 : a0 => ((((x0 = x4) \/ (x1 x0)) /\ (x3 x0 y0)) /\ (x2 = (@pair a1 a0 x0 y0))) /\ ((forall y1 : a1, forall y2 : a0, ((~ (x1 y1)) \/ (~ (x3 y1 y2))) \/ (~ (x2 = (@pair a1 a0 y1 y2)))) /\ (forall y1 : a0, (~ (x2 = (@pair a1 a0 x4 y1))) \/ (~ (x3 x4 y1)))).
Definition term969 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a0 -> Prop) (x2 : type1413 a0 a1) (x3 : a0) (x4 : nat) := ((x3 = x0) -> @HAS_SIZE a1 (x2 x3) x4) /\ ((@IN a0 x3 x1) -> @HAS_SIZE a1 (x2 x3) x4).
Definition term2056 (a0 : Type') (x0 : type686 a0) (x1 : type686 a0) (x2 : type686 a0) := (~ ((~ (x0 = x1)) \/ (~ (x0 = x2)))) -> x1 = x2.
Definition term915 (a0 : Type') (a1 : Type') := forall y0 : nat, @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y1 : prod a0 a1 => exists y2 : a0, exists y3 : a1, @SETSPEC (prod a0 a1) y1 False (@pair a0 a1 y2 y3))) (Nat.mul (NUMERAL 0) y0).
Definition term970 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a0 -> Prop) (x2 : type1413 a0 a1) (x3 : nat) := fun y0 : a0 => ((y0 = x0) -> @HAS_SIZE a1 (x2 y0) x3) /\ ((@IN a0 y0 x1) -> @HAS_SIZE a1 (x2 y0) x3).
Definition term1203 (a0 : Type') (a1 : Type') (x0 : prod a0 a1) (x1 : type1413 a0 a1) (x2 : a0) := fun y0 : a1 => (x0 = ((fun y1 : a1 => @pair a0 a1 x2 y1) y0)) /\ (@IN a1 y0 (x1 x2)).
Definition term246 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : type1470 a0 a1) (x2 : prod a1 a0) (x3 : a1) := fun y0 : a0 => ((~ (x0 x3)) \/ (~ (x1 x3 y0))) \/ (~ (x2 = (@pair a1 a0 x3 y0))).
Definition term905 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a0 -> Prop) := (((forall y0 : nat, ((@CARD a0 x1) = y0) -> forall y1 : type1413 a0 a1, forall y2 : nat, (forall y3 : a0, (@IN a0 y3 x1) -> @HAS_SIZE a1 (y1 y3) y2) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y3 : prod a0 a1 => exists y4 : a0, exists y5 : a1, @SETSPEC (prod a0 a1) y3 ((@IN a0 y4 x1) /\ (@IN a1 y5 (y1 y4))) (@pair a0 a1 y4 y5))) (Nat.mul y0 y2)) /\ ((~ (@IN a0 x0 x1)) /\ (@FINITE a0 x1))) -> (forall y0 : nat, ((@CARD a0 (@INSERT a0 x0 x1)) = y0) -> forall y1 : type1413 a0 a1, forall y2 : nat, (forall y3 : a0, (@IN a0 y3 (@INSERT a0 x0 x1)) -> @HAS_SIZE a1 (y1 y3) y2) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y3 : prod a0 a1 => exists y4 : a0, exists y5 : a1, @SETSPEC (prod a0 a1) y3 ((@IN a0 y4 (@INSERT a0 x0 x1)) /\ (@IN a1 y5 (y1 y4))) (@pair a0 a1 y4 y5))) (Nat.mul y0 y2)) = (forall y0 : nat, ((S (@CARD a0 x1)) = y0) -> forall y1 : type1413 a0 a1, forall y2 : nat, (forall y3 : a0, ((y3 = x0) \/ (@IN a0 y3 x1)) -> @HAS_SIZE a1 (y1 y3) y2) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y3 : prod a0 a1 => exists y4 : a0, exists y5 : a1, @SETSPEC (prod a0 a1) y3 (((y4 = x0) \/ (@IN a0 y4 x1)) /\ (@IN a1 y5 (y1 y4))) (@pair a0 a1 y4 y5))) (Nat.mul y0 y2))) -> (((forall y0 : nat, ((@CARD a0 x1) = y0) -> forall y1 : type1413 a0 a1, forall y2 : nat, (forall y3 : a0, (@IN a0 y3 x1) -> @HAS_SIZE a1 (y1 y3) y2) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y3 : prod a0 a1 => exists y4 : a0, exists y5 : a1, @SETSPEC (prod a0 a1) y3 ((@IN a0 y4 x1) /\ (@IN a1 y5 (y1 y4))) (@pair a0 a1 y4 y5))) (Nat.mul y0 y2)) /\ ((~ (@IN a0 x0 x1)) /\ (@FINITE a0 x1))) -> forall y0 : nat, ((@CARD a0 (@INSERT a0 x0 x1)) = y0) -> forall y1 : type1413 a0 a1, forall y2 : nat, (forall y3 : a0, (@IN a0 y3 (@INSERT a0 x0 x1)) -> @HAS_SIZE a1 (y1 y3) y2) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y3 : prod a0 a1 => exists y4 : a0, exists y5 : a1, @SETSPEC (prod a0 a1) y3 ((@IN a0 y4 (@INSERT a0 x0 x1)) /\ (@IN a1 y5 (y1 y4))) (@pair a0 a1 y4 y5))) (Nat.mul y0 y2)) = (((forall y0 : nat, ((@CARD a0 x1) = y0) -> forall y1 : type1413 a0 a1, forall y2 : nat, (forall y3 : a0, (@IN a0 y3 x1) -> @HAS_SIZE a1 (y1 y3) y2) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y3 : prod a0 a1 => exists y4 : a0, exists y5 : a1, @SETSPEC (prod a0 a1) y3 ((@IN a0 y4 x1) /\ (@IN a1 y5 (y1 y4))) (@pair a0 a1 y4 y5))) (Nat.mul y0 y2)) /\ ((~ (@IN a0 x0 x1)) /\ (@FINITE a0 x1))) -> forall y0 : nat, ((S (@CARD a0 x1)) = y0) -> forall y1 : type1413 a0 a1, forall y2 : nat, (forall y3 : a0, ((y3 = x0) \/ (@IN a0 y3 x1)) -> @HAS_SIZE a1 (y1 y3) y2) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y3 : prod a0 a1 => exists y4 : a0, exists y5 : a1, @SETSPEC (prod a0 a1) y3 (((y4 = x0) \/ (@IN a0 y4 x1)) /\ (@IN a1 y5 (y1 y4))) (@pair a0 a1 y4 y5))) (Nat.mul y0 y2)).
Definition term1777 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : type1413 a0 a1) (x2 : a0 -> Prop) (x3 : nat) := (exists y0 : a0, (fun y1 : a0 => (@IN a0 y1 x2) /\ (~ (@HAS_SIZE a1 (x1 y1) x3))) y0) \/ (@HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (x0 x2 x1)) (Nat.mul (@CARD a0 x2) x3)).
Definition term1126 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a1) := @eq (prod a0 a1) ((fun y0 : a1 => @pair a0 a1 x0 y0) x1).
Definition term1668 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : a0 -> Prop) (x2 : type464 a0 a1) (x3 : type465 a0 a1) := fun y0 : type1413 a0 a1 => forall y1 : prod a0 a1, (~ (x0 x1 y0 y1)) \/ (@SETSPEC (prod a0 a1) y1 ((@IN a0 (x2 y0 y1) x1) /\ (@IN a1 (x3 y0 y1) (y0 (x2 y0 y1)))) (@pair a0 a1 (x2 y0 y1) (x3 y0 y1))).
Definition term1469 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : a0 -> Prop) := fun y0 : type1413 a0 a1 => forall y1 : prod a0 a1, ((x0 x1 y0 y1) \/ (forall y2 : a0, forall y3 : a1, ~ (@SETSPEC (prod a0 a1) y1 ((@IN a0 y2 x1) /\ (@IN a1 y3 (y0 y2))) (@pair a0 a1 y2 y3)))) /\ ((~ (x0 x1 y0 y1)) \/ (exists y2 : a0, exists y3 : a1, @SETSPEC (prod a0 a1) y1 ((@IN a0 y2 x1) /\ (@IN a1 y3 (y0 y2))) (@pair a0 a1 y2 y3))).
Definition term1554 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : prod a0 a1) (x2 : a0 -> Prop) (x3 : type1413 a0 a1) := fun y0 : a0 => (~ (x0 x2 x3 x1)) \/ ((fun y1 : a0 => exists y2 : a1, @SETSPEC (prod a0 a1) x1 ((@IN a0 y1 x2) /\ (@IN a1 y2 (x3 y1))) (@pair a0 a1 y1 y2)) y0).
Definition term462 (a0 : Type') (a1 : Type') (x0 : type1470 a0 a1) (x1 : a1) (x2 : a0) (x3 : a1) (x4 : a0) := (~ (x3 = x1)) \/ ((~ (x0 x3 x4)) \/ (~ ((@pair a1 a0 x1 x2) = (@pair a1 a0 x3 x4)))).
Definition term178 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : prod a1 a0) (x2 : type1470 a0 a1) (x3 : a1) := (exists y0 : a1, exists y1 : a0, ((x0 y0) /\ (x2 y0 y1)) /\ (x1 = (@pair a1 a0 y0 y1))) \/ (exists y0 : a0, (x1 = (@pair a1 a0 x3 y0)) /\ (x2 x3 y0)).
Definition term2073 (a0 : Type') (x0 : a0 -> Prop) (x1 : type686 a0) (x2 : type686 a0) (x3 : a0 -> Prop) := (~ (x3 = x0)) \/ ((@I ((a0 -> Prop) -> Prop) x1 x0) \/ ((~ (x2 = x1)) \/ (~ (@I ((a0 -> Prop) -> Prop) x2 x3)))).
Definition term276 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : prod a1 a0) (x2 : type1470 a0 a1) (x3 : a1) := or ((exists y0 : a1, exists y1 : a0, (((y0 = x3) \/ (x0 y0)) /\ (x2 y0 y1)) /\ (x1 = (@pair a1 a0 y0 y1))) /\ (~ ((exists y0 : a1, exists y1 : a0, ((x0 y0) /\ (x2 y0 y1)) /\ (x1 = (@pair a1 a0 y0 y1))) \/ (exists y0 : a0, (x1 = (@pair a1 a0 x3 y0)) /\ (x2 x3 y0))))).
Definition term1978 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a1) := fun y0 : a0 => forall y1 : a1, ((~ ((@I (a1 -> prod a0 a1) (@I (a0 -> a1 -> prod a0 a1) (@pair a0 a1) x0) x1) = (@I (a1 -> prod a0 a1) (@I (a0 -> a1 -> prod a0 a1) (@pair a0 a1) y0) y1))) \/ (x0 = y0)) /\ ((~ ((@I (a1 -> prod a0 a1) (@I (a0 -> a1 -> prod a0 a1) (@pair a0 a1) x0) x1) = (@I (a1 -> prod a0 a1) (@I (a0 -> a1 -> prod a0 a1) (@pair a0 a1) y0) y1))) \/ (x1 = y1)).
Definition term1994 (x0 : Prop) (x1 : Prop) := (x1 = x0) -> x0 \/ (~ x1).
Definition term180 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : type1470 a0 a1) (x2 : a1) := fun y0 : prod a1 a0 => (exists y1 : a1, exists y2 : a0, (((y1 = x2) \/ (x0 y1)) /\ (x1 y1 y2)) /\ (y0 = (@pair a1 a0 y1 y2))) = ((exists y1 : a1, exists y2 : a0, ((x0 y1) /\ (x1 y1 y2)) /\ (y0 = (@pair a1 a0 y1 y2))) \/ (exists y1 : a0, (y0 = (@pair a1 a0 x2 y1)) /\ (x1 x2 y1))).
Definition term1033 (a0 : Type') (a1 : Type') (x0 : type1413 a0 a1) (x1 : a0) (x2 : nat) (x3 : Prop) (x4 : Prop) := (fun y0 : Prop => ((exists y1 : a0, y1 = x1) = x3) -> (x3 -> (@HAS_SIZE a1 (x0 x1) x2) = y0) -> ((exists y1 : a0, y1 = x1) -> @HAS_SIZE a1 (x0 x1) x2) = (x3 -> y0)) x4.
Definition term814 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a0 -> Prop) (x2 : nat) (x3 : Prop) (x4 : Prop) := (fun y0 : Prop => (((@CARD a0 (@INSERT a0 x0 x1)) = x2) = x3) -> (x3 -> (forall y1 : type1413 a0 a1, forall y2 : nat, (forall y3 : a0, (@IN a0 y3 (@INSERT a0 x0 x1)) -> @HAS_SIZE a1 (y1 y3) y2) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y3 : prod a0 a1 => exists y4 : a0, exists y5 : a1, @SETSPEC (prod a0 a1) y3 ((@IN a0 y4 (@INSERT a0 x0 x1)) /\ (@IN a1 y5 (y1 y4))) (@pair a0 a1 y4 y5))) (Nat.mul x2 y2)) = y0) -> (((@CARD a0 (@INSERT a0 x0 x1)) = x2) -> forall y1 : type1413 a0 a1, forall y2 : nat, (forall y3 : a0, (@IN a0 y3 (@INSERT a0 x0 x1)) -> @HAS_SIZE a1 (y1 y3) y2) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y3 : prod a0 a1 => exists y4 : a0, exists y5 : a1, @SETSPEC (prod a0 a1) y3 ((@IN a0 y4 (@INSERT a0 x0 x1)) /\ (@IN a1 y5 (y1 y4))) (@pair a0 a1 y4 y5))) (Nat.mul x2 y2)) = (x3 -> y0)) x4.
Definition term745 (a0 : Type') (a1 : Type') (x0 : type1413 a0 a1) (x1 : a0) (x2 : nat) (x3 : Prop) (x4 : Prop) := (fun y0 : Prop => ((@IN a0 x1 (@EMPTY a0)) = x3) -> (x3 -> (@HAS_SIZE a1 (x0 x1) x2) = y0) -> ((@IN a0 x1 (@EMPTY a0)) -> @HAS_SIZE a1 (x0 x1) x2) = (x3 -> y0)) x4.
Definition term739 (a0 : Type') (a1 : Type') (x0 : type1413 a0 a1) (x1 : nat) (x2 : nat) (x3 : Prop) (x4 : Prop) := (fun y0 : Prop => ((forall y1 : a0, (@IN a0 y1 (@EMPTY a0)) -> @HAS_SIZE a1 (x0 y1) x2) = x3) -> (x3 -> (@HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y1 : prod a0 a1 => exists y2 : a0, exists y3 : a1, @SETSPEC (prod a0 a1) y1 ((@IN a0 y2 (@EMPTY a0)) /\ (@IN a1 y3 (x0 y2))) (@pair a0 a1 y2 y3))) (Nat.mul x1 x2)) = y0) -> ((forall y1 : a0, (@IN a0 y1 (@EMPTY a0)) -> @HAS_SIZE a1 (x0 y1) x2) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y1 : prod a0 a1 => exists y2 : a0, exists y3 : a1, @SETSPEC (prod a0 a1) y1 ((@IN a0 y2 (@EMPTY a0)) /\ (@IN a1 y3 (x0 y2))) (@pair a0 a1 y2 y3))) (Nat.mul x1 x2)) = (x3 -> y0)) x4.
Definition term1988 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a1) := fun y0 : prod a0 a1 => y0 = (@I (a1 -> prod a0 a1) (@I (a0 -> a1 -> prod a0 a1) (@pair a0 a1) x0) x1).
Definition term1306 (a0 : Type') (a1 : Type') (x0 : prod a0 a1) (x1 : prod a0 a1) (x2 : a1) (x3 : a1) := (x0 = x1) /\ (x2 = x3).
Definition term1020 (a0 : Type') (x0 : a0) (x1 : a0) := imp (x0 = x1).
Definition term860 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a0 -> Prop) (x2 : type1413 a0 a1) (x3 : nat) := fun y0 : a0 => ((y0 = x0) \/ (@IN a0 y0 x1)) -> @HAS_SIZE a1 (x2 y0) x3.
Definition term856 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a0 -> Prop) (x2 : type1413 a0 a1) (x3 : a0) (x4 : nat) := (((x3 = x0) \/ (@IN a0 x3 x1)) -> (@HAS_SIZE a1 (x2 x3) x4) = (@HAS_SIZE a1 (x2 x3) x4)) -> ((@IN a0 x3 (@INSERT a0 x0 x1)) -> @HAS_SIZE a1 (x2 x3) x4) = (((x3 = x0) \/ (@IN a0 x3 x1)) -> @HAS_SIZE a1 (x2 x3) x4).
Definition term158 (a0 : Type') (a1 : Type') (x0 : prod a1 a0) (x1 : a1 -> Prop) (x2 : type1470 a0 a1) := or (@IN (prod a1 a0) x0 (@GSPEC (prod a1 a0) (fun y0 : prod a1 a0 => exists y1 : a1, exists y2 : a0, @SETSPEC (prod a1 a0) y0 ((@IN a1 y1 x1) /\ (@IN a0 y2 (x2 y1))) (@pair a1 a0 y1 y2)))).
Definition term1182 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : a1) (x2 : type1413 a0 a1) (x3 : a0) (x4 : prod a0 a1) := fun y0 : prod a0 a1 => (fun y1 : prod a0 a1 => ((@IN a0 x3 x0) /\ (@IN a1 x1 (x2 x3))) /\ (x4 = y1)) y0.
Definition term613 (x0 : Prop) (x1 : nat -> Prop) := x0 -> forall y0 : nat, x1 y0.
Definition term112 (a0 : Type') (a1 : Type') (x0 : type1223 a0 a1) (x1 : prod a1 a0) (x2 : type1223 a0 a1) := (@IN (prod a1 a0) x1 x0) \/ (@IN (prod a1 a0) x1 x2).
Definition term1823 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : a0 -> Prop) := fun y0 : type1413 a0 a1 => fun y1 : nat -> a0 => forall y2 : nat, ((@IN a0 (y1 y2) x1) /\ (~ (@HAS_SIZE a1 (y0 (y1 y2)) y2))) \/ (@HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (x0 x1 y0)) (Nat.mul (@CARD a0 x1) y2)).
Definition term1653 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : a0 -> Prop) (x2 : type464 a0 a1) := fun y0 : type1413 a0 a1 => fun y1 : type1208 a0 a1 => forall y2 : prod a0 a1, (~ (x0 x1 y0 y2)) \/ (@SETSPEC (prod a0 a1) y2 ((@IN a0 (x2 y0 y2) x1) /\ (@IN a1 (y1 y2) (y0 (x2 y0 y2)))) (@pair a0 a1 (x2 y0 y2) (y1 y2))).
Definition term194 (a0 : Type') (a1 : Type') (x0 : a1) := fun y0 : type1470 a0 a1 => forall y1 : a1 -> Prop, (~ (forall y2 : prod a1 a0, (exists y3 : a1, exists y4 : a0, (((y3 = x0) \/ (y1 y3)) /\ (y0 y3 y4)) /\ (y2 = (@pair a1 a0 y3 y4))) = ((exists y3 : a1, exists y4 : a0, ((y1 y3) /\ (y0 y3 y4)) /\ (y2 = (@pair a1 a0 y3 y4))) \/ (exists y3 : a0, (y2 = (@pair a1 a0 x0 y3)) /\ (y0 x0 y3))))) -> False.
Definition term383 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : prod a1 a0) (x2 : type1470 a0 a1) (x3 : a1) := exists y0 : a1, ((fun y1 : a1 => exists y2 : a0, ((((y1 = x3) \/ (x0 y1)) /\ (x2 y1 y2)) /\ (x1 = (@pair a1 a0 y1 y2))) /\ ((forall y3 : a1, forall y4 : a0, ((~ (x0 y3)) \/ (~ (x2 y3 y4))) \/ (~ (x1 = (@pair a1 a0 y3 y4)))) /\ (forall y3 : a0, (~ (x1 = (@pair a1 a0 x3 y3))) \/ (~ (x2 x3 y3))))) y0) \/ ((fun y1 : a1 => exists y2 : a0, (forall y3 : a1, forall y4 : a0, (((~ (y3 = x3)) /\ (~ (x0 y3))) \/ (~ (x2 y3 y4))) \/ (~ (x1 = (@pair a1 a0 y3 y4)))) /\ ((((x0 y1) /\ (x2 y1 y2)) /\ (x1 = (@pair a1 a0 y1 y2))) \/ ((x1 = (@pair a1 a0 x3 y2)) /\ (x2 x3 y2)))) y0).
Definition term998 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : type1413 a0 a1) (x2 : nat) := and (forall y0 : a0, (y0 = x0) -> @HAS_SIZE a1 (x1 y0) x2).
Definition term1223 (a0 : Type') (a1 : Type') := ~ (forall y0 : prod a0 a1, forall y1 : a1, forall y2 : prod a0 a1, forall y3 : a1, ((@pair (prod a0 a1) a1 y0 y1) = (@pair (prod a0 a1) a1 y2 y3)) = ((y0 = y2) /\ (y1 = y3))).
Definition term1590 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : a0 -> Prop) (x2 : type1413 a0 a1) (x3 : type1207 a0 a1) := fun y0 : prod a0 a1 => (fun y1 : prod a0 a1 => fun y2 : a0 => exists y3 : a1, (~ (x0 x1 x2 y1)) \/ (@SETSPEC (prod a0 a1) y1 ((@IN a0 y2 x1) /\ (@IN a1 y3 (x2 y2))) (@pair a0 a1 y2 y3))) y0 (x3 y0).
Definition term1212 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : type1413 a0 a1) (x2 : a0) := forall y0 : prod a0 a1, ~ ((exists y1 : a0, exists y2 : a1, ((@IN a0 y1 x0) /\ (@IN a1 y2 (x1 y1))) /\ (y0 = (@pair a0 a1 y1 y2))) /\ (exists y1 : a1, (y0 = (@pair a0 a1 x2 y1)) /\ (@IN a1 y1 (x1 x2)))).
Definition term216 (a0 : Type') (a1 : Type') (x0 : a1) (x1 : a1 -> Prop) (x2 : type1470 a0 a1) (x3 : prod a1 a0) (x4 : a1) (x5 : a0) := (((~ (x4 = x0)) /\ (~ (x1 x4))) \/ (~ (x2 x4 x5))) \/ (~ (x3 = (@pair a1 a0 x4 x5))).
Definition term236 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : type1470 a0 a1) (x2 : a1) (x3 : a0) := or (~ ((x0 x2) /\ (x1 x2 x3))).
Definition term1119 (a0 : Type') (a1 : Type') (x0 : type1413 a0 a1) (x1 : a0) (x2 : a1) (x3 : a1) (x4 : Prop) (x5 : Prop) := (fun y0 : Prop => (((@IN a1 x2 (x0 x1)) /\ ((@IN a1 x3 (x0 x1)) /\ (((fun y1 : a1 => @pair a0 a1 x1 y1) x2) = ((fun y1 : a1 => @pair a0 a1 x1 y1) x3)))) = x4) -> (x4 -> (x2 = x3) = y0) -> (((@IN a1 x2 (x0 x1)) /\ ((@IN a1 x3 (x0 x1)) /\ (((fun y1 : a1 => @pair a0 a1 x1 y1) x2) = ((fun y1 : a1 => @pair a0 a1 x1 y1) x3)))) -> x2 = x3) = (x4 -> y0)) x5.
Definition term1103 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : type1413 a0 a1) (x2 : a0) (x3 : nat) (x4 : Prop) (x5 : Prop) := (fun y0 : Prop => ((@IN a0 x2 x0) = x4) -> (x4 -> (@HAS_SIZE a1 (x1 x2) x3) = y0) -> ((@IN a0 x2 x0) -> @HAS_SIZE a1 (x1 x2) x3) = (x4 -> y0)) x5.
Definition term1005 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : type1413 a0 a1) (x2 : a0) (x3 : nat) (x4 : Prop) (x5 : Prop) := (fun y0 : Prop => ((x2 = x0) = x4) -> (x4 -> (@HAS_SIZE a1 (x1 x2) x3) = y0) -> ((x2 = x0) -> @HAS_SIZE a1 (x1 x2) x3) = (x4 -> y0)) x5.
Definition term955 (a0 : Type') (a1 : Type') (x0 : prod a0 a1) := (fun y0 : prod a0 a1 => False) x0.
Definition term1206 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : prod a0 a1) (x2 : type1413 a0 a1) (x3 : a0) := (exists y0 : a0, exists y1 : a1, ((@IN a0 y0 x0) /\ (@IN a1 y1 (x2 y0))) /\ (x1 = (@pair a0 a1 y0 y1))) /\ (exists y0 : a1, (x1 = (@pair a0 a1 x3 y0)) /\ (@IN a1 y0 (x2 x3))).
Definition term855 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a0 -> Prop) (x2 : type1413 a0 a1) (x3 : a0) (x4 : nat) := ((x3 = x0) \/ (@IN a0 x3 x1)) -> (@HAS_SIZE a1 (x2 x3) x4) = (@HAS_SIZE a1 (x2 x3) x4).
Definition term223 (a0 : Type') (a1 : Type') (x0 : a1) (x1 : a1 -> Prop) (x2 : type1470 a0 a1) (x3 : prod a1 a0) (x4 : a1) (x5 : a0) := ~ ((fun y0 : a0 => (((x4 = x0) \/ (x1 x4)) /\ (x2 x4 y0)) /\ (x3 = (@pair a1 a0 x4 y0))) x5).
Definition term1062 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) := imp (((@CARD a0 x0) = (@CARD a0 x0)) -> forall y0 : type1413 a0 a1, forall y1 : nat, (forall y2 : a0, (@IN a0 y2 x0) -> @HAS_SIZE a1 (y0 y2) y1) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y2 : prod a0 a1 => exists y3 : a0, exists y4 : a1, @SETSPEC (prod a0 a1) y2 ((@IN a0 y3 x0) /\ (@IN a1 y4 (y0 y3))) (@pair a0 a1 y3 y4))) (Nat.mul (@CARD a0 x0) y1)).
Definition term39 (a0 : Type') (x0 : nat) (x1 : nat) (x2 : a0 -> Prop) (x3 : a0 -> Prop) := (@HAS_SIZE a0 x2 x0) /\ ((@HAS_SIZE a0 x3 x1) /\ (@DISJOINT a0 x2 x3)).
Definition term891 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a0 -> Prop) (x2 : type1413 a0 a1) (x3 : nat) := fun y0 : nat => (forall y1 : a0, ((y1 = x0) \/ (@IN a0 y1 x1)) -> @HAS_SIZE a1 (x2 y1) y0) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y1 : prod a0 a1 => exists y2 : a0, exists y3 : a1, @SETSPEC (prod a0 a1) y1 (((y2 = x0) \/ (@IN a0 y2 x1)) /\ (@IN a1 y3 (x2 y2))) (@pair a0 a1 y2 y3))) (Nat.mul x3 y0).
Definition term890 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a0 -> Prop) (x2 : type1413 a0 a1) (x3 : nat) := fun y0 : nat => (forall y1 : a0, (@IN a0 y1 (@INSERT a0 x0 x1)) -> @HAS_SIZE a1 (x2 y1) y0) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y1 : prod a0 a1 => exists y2 : a0, exists y3 : a1, @SETSPEC (prod a0 a1) y1 ((@IN a0 y2 (@INSERT a0 x0 x1)) /\ (@IN a1 y3 (x2 y2))) (@pair a0 a1 y2 y3))) (Nat.mul x3 y0).
Definition term785 (a0 : Type') (a1 : Type') (x0 : type1413 a0 a1) (x1 : nat) := fun y0 : nat => (forall y1 : a0, (@IN a0 y1 (@EMPTY a0)) -> @HAS_SIZE a1 (x0 y1) y0) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y1 : prod a0 a1 => exists y2 : a0, exists y3 : a1, @SETSPEC (prod a0 a1) y1 ((@IN a0 y2 (@EMPTY a0)) /\ (@IN a1 y3 (x0 y2))) (@pair a0 a1 y2 y3))) (Nat.mul x1 y0).
Definition term630 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : type1413 a0 a1) (x2 : nat) := fun y0 : nat => (forall y1 : a0, (@IN a0 y1 x0) -> @HAS_SIZE a1 (x1 y1) y0) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y1 : prod a0 a1 => exists y2 : a0, exists y3 : a1, @SETSPEC (prod a0 a1) y1 ((@IN a0 y2 x0) /\ (@IN a1 y3 (x1 y2))) (@pair a0 a1 y2 y3))) (Nat.mul x2 y0).
Definition term1862 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a0) (x2 : a1) := fun y0 : a1 => ((@pair a0 a1 x0 x2) = (@pair a0 a1 x1 y0)) \/ ((~ (x0 = x1)) \/ (~ (x2 = y0))).
Definition term1304 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : type1413 a0 a1) := (fun y0 : type1413 a0 a1 => fun y1 : prod a0 a1 => exists y2 : a0, exists y3 : a1, @SETSPEC (prod a0 a1) y1 ((@IN a0 y2 x0) /\ (@IN a1 y3 (y0 y2))) (@pair a0 a1 y2 y3)) x1.
Definition term1390 (a0 : Type') (a1 : Type') := forall y0 : type621 a0 a1, (y0 = (fun y1 : a0 -> Prop => fun y2 : type1413 a0 a1 => fun y3 : prod a0 a1 => exists y4 : a0, exists y5 : a1, @SETSPEC (prod a0 a1) y3 ((@IN a0 y4 y1) /\ (@IN a1 y5 (y2 y4))) (@pair a0 a1 y4 y5))) -> (forall y1 : a0, forall y2 : type1413 a0 a1, forall y3 : a1, forall y4 : prod a0 a1, forall y5 : a1, forall y6 : a0, forall y7 : a0 -> Prop, forall y8 : nat, forall y9 : nat, (~ (@IN a0 y1 y7)) -> (@FINITE a0 y7) -> (y9 = (S (@CARD a0 y7))) -> (@HAS_SIZE a1 (y2 y1) y8) -> (forall y10 : a0, (@IN a0 y10 y7) -> @HAS_SIZE a1 (y2 y10) y8) -> (forall y10 : type1413 a0 a1, forall y11 : nat, (forall y12 : a0, (@IN a0 y12 y7) -> @HAS_SIZE a1 (y10 y12) y11) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y12 : prod a0 a1 => exists y13 : a0, exists y14 : a1, @SETSPEC (prod a0 a1) y12 ((@IN a0 y13 y7) /\ (@IN a1 y14 (y10 y13))) (@pair a0 a1 y13 y14))) (Nat.mul (@CARD a0 y7) y11)) -> (@IN a0 y6 y7) -> (@IN a1 y5 (y2 y6)) -> (y4 = (@pair a0 a1 y6 y5)) -> (y4 = (@pair a0 a1 y1 y3)) -> (@IN a1 y3 (y2 y1)) -> (forall y10 : a0, forall y11 : a1, forall y12 : a0, forall y13 : a1, ((@pair a0 a1 y10 y11) = (@pair a0 a1 y12 y13)) = ((y10 = y12) /\ (y11 = y13))) -> (forall y10 : a0, forall y11 : nat, forall y12 : a0, forall y13 : nat, ((@pair a0 nat y10 y11) = (@pair a0 nat y12 y13)) = ((y10 = y12) /\ (y11 = y13))) -> (forall y10 : a0, forall y11 : prod a0 a1, forall y12 : a0, forall y13 : prod a0 a1, ((@pair a0 (prod a0 a1) y10 y11) = (@pair a0 (prod a0 a1) y12 y13)) = ((y10 = y12) /\ (y11 = y13))) -> (forall y10 : nat, forall y11 : a1, forall y12 : nat, forall y13 : a1, ((@pair nat a1 y10 y11) = (@pair nat a1 y12 y13)) = ((y10 = y12) /\ (y11 = y13))) -> ~ (forall y10 : prod a0 a1, forall y11 : a1, forall y12 : prod a0 a1, forall y13 : a1, ((@pair (prod a0 a1) a1 y10 y11) = (@pair (prod a0 a1) a1 y12 y13)) = ((y10 = y12) /\ (y11 = y13)))) = ((fun y1 : type621 a0 a1 => forall y2 : a0, forall y3 : type1413 a0 a1, forall y4 : a1, forall y5 : prod a0 a1, forall y6 : a1, forall y7 : a0, forall y8 : a0 -> Prop, forall y9 : nat, forall y10 : nat, (~ (@IN a0 y2 y8)) -> (@FINITE a0 y8) -> (y10 = (S (@CARD a0 y8))) -> (@HAS_SIZE a1 (y3 y2) y9) -> (forall y11 : a0, (@IN a0 y11 y8) -> @HAS_SIZE a1 (y3 y11) y9) -> (forall y11 : type1413 a0 a1, forall y12 : nat, (forall y13 : a0, (@IN a0 y13 y8) -> @HAS_SIZE a1 (y11 y13) y12) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (y1 y8 y11)) (Nat.mul (@CARD a0 y8) y12)) -> (@IN a0 y7 y8) -> (@IN a1 y6 (y3 y7)) -> (y5 = (@pair a0 a1 y7 y6)) -> (y5 = (@pair a0 a1 y2 y4)) -> (@IN a1 y4 (y3 y2)) -> (forall y11 : a0, forall y12 : a1, forall y13 : a0, forall y14 : a1, ((@pair a0 a1 y11 y12) = (@pair a0 a1 y13 y14)) = ((y11 = y13) /\ (y12 = y14))) -> (forall y11 : a0, forall y12 : nat, forall y13 : a0, forall y14 : nat, ((@pair a0 nat y11 y12) = (@pair a0 nat y13 y14)) = ((y11 = y13) /\ (y12 = y14))) -> (forall y11 : a0, forall y12 : prod a0 a1, forall y13 : a0, forall y14 : prod a0 a1, ((@pair a0 (prod a0 a1) y11 y12) = (@pair a0 (prod a0 a1) y13 y14)) = ((y11 = y13) /\ (y12 = y14))) -> (forall y11 : nat, forall y12 : a1, forall y13 : nat, forall y14 : a1, ((@pair nat a1 y11 y12) = (@pair nat a1 y13 y14)) = ((y11 = y13) /\ (y12 = y14))) -> ~ (forall y11 : prod a0 a1, forall y12 : a1, forall y13 : prod a0 a1, forall y14 : a1, ((@pair (prod a0 a1) a1 y11 y12) = (@pair (prod a0 a1) a1 y13 y14)) = ((y11 = y13) /\ (y12 = y14)))) y0).
Definition term2022 (a0 : Type') (x0 : a0) (x1 : a0) (x2 : type1364 a0) (x3 : type1364 a0) := ((@I (a0 -> (a0 -> Prop) -> Prop) x2 x0) = (@I (a0 -> (a0 -> Prop) -> Prop) x3 x1)) \/ (~ (x2 = x3)).
Definition term618 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : type1413 a0 a1) (x2 : nat) (x3 : nat) := ((@CARD a0 x0) = x2) -> (forall y0 : a0, (@IN a0 y0 x0) -> @HAS_SIZE a1 (x1 y0) x3) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y0 : prod a0 a1 => exists y1 : a0, exists y2 : a1, @SETSPEC (prod a0 a1) y0 ((@IN a0 y1 x0) /\ (@IN a1 y2 (x1 y1))) (@pair a0 a1 y1 y2))) (Nat.mul x2 x3).
Definition term324 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : a1) (x2 : prod a1 a0) (x3 : type1470 a0 a1) (x4 : a1) := ((fun y0 : a1 => exists y1 : a0, ((x0 y0) /\ (x3 y0 y1)) /\ (x2 = (@pair a1 a0 y0 y1))) x1) \/ (exists y0 : a0, (x2 = (@pair a1 a0 x4 y0)) /\ (x3 x4 y0)).
Definition term1162 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : type1413 a0 a1) (x2 : prod a0 a1) := (fun y0 : type1532 a0 a1 => exists y1 : a0, exists y2 : a1, y0 ((@IN a0 y1 x0) /\ (@IN a1 y2 (x1 y1))) (@pair a0 a1 y1 y2)) (@SETSPEC (prod a0 a1) x2).
Definition term120 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : type1470 a0 a1) (x2 : prod a1 a0) := (fun y0 : type1534 a0 a1 => exists y1 : a1, exists y2 : a0, y0 ((@IN a1 y1 x0) /\ (@IN a0 y2 (x1 y1))) (@pair a1 a0 y1 y2)) (@SETSPEC (prod a1 a0) x2).
Definition term1887 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a1) (x2 : a0) := and ((fun y0 : a0 => forall y1 : a1, ((@pair a0 a1 x0 x1) = (@pair a0 a1 y0 y1)) \/ ((~ (x0 = y0)) \/ (~ (x1 = y1)))) x2).
Definition term1171 (a0 : Type') (a1 : Type') (x0 : prod a0 a1) (x1 : a0 -> Prop) (x2 : a1) (x3 : type1413 a0 a1) (x4 : a0) := (fun y0 : Prop => (fun y1 : Prop => fun y2 : prod a0 a1 => y1 /\ (x0 = y2)) y0) ((@IN a0 x4 x1) /\ (@IN a1 x2 (x3 x4))).
Definition term129 (a0 : Type') (a1 : Type') (x0 : prod a1 a0) (x1 : a1 -> Prop) (x2 : a0) (x3 : type1470 a0 a1) (x4 : a1) := (fun y0 : Prop => (fun y1 : Prop => fun y2 : prod a1 a0 => y1 /\ (x0 = y2)) y0) ((@IN a1 x4 x1) /\ (@IN a0 x2 (x3 x4))).
Definition term1310 (a0 : Type') (a1 : Type') (x0 : prod a0 a1) (x1 : a1) := forall y0 : prod a0 a1, forall y1 : a1, ((@pair (prod a0 a1) a1 x0 x1) = (@pair (prod a0 a1) a1 y0 y1)) = ((x0 = y0) /\ (x1 = y1)).
Definition term1067 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : type1413 a0 a1) (x2 : a0 -> Prop) (x3 : nat) := @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y0 : prod a0 a1 => exists y1 : a0, exists y2 : a1, @SETSPEC (prod a0 a1) y0 (((y1 = x0) \/ (@IN a0 y1 x2)) /\ (@IN a1 y2 (x1 y1))) (@pair a0 a1 y1 y2))) (Nat.add (Nat.mul (@CARD a0 x2) x3) x3).
Definition term1633 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : a0 -> Prop) (x2 : type1413 a0 a1) (x3 : type1207 a0 a1) := (fun y0 : type1207 a0 a1 => exists y1 : type1208 a0 a1, forall y2 : prod a0 a1, (~ (x0 x1 x2 y2)) \/ (@SETSPEC (prod a0 a1) y2 ((@IN a0 (y0 y2) x1) /\ (@IN a1 (y1 y2) (x2 (y0 y2)))) (@pair a0 a1 (y0 y2) (y1 y2)))) x3.
Definition term1818 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : a0 -> Prop) := forall y0 : type1413 a0 a1, exists y1 : nat -> a0, forall y2 : nat, ((@IN a0 (y1 y2) x1) /\ (~ (@HAS_SIZE a1 (y0 (y1 y2)) y2))) \/ (@HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (x0 x1 y0)) (Nat.mul (@CARD a0 x1) y2)).
Definition term1697 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : type619 a0 a1) := forall y0 : a0 -> Prop, exists y1 : type465 a0 a1, forall y2 : type1413 a0 a1, forall y3 : prod a0 a1, (~ (x0 y0 y2 y3)) \/ (@SETSPEC (prod a0 a1) y3 ((@IN a0 (x1 y0 y2 y3) y0) /\ (@IN a1 (y1 y2 y3) (y2 (x1 y0 y2 y3)))) (@pair a0 a1 (x1 y0 y2 y3) (y1 y2 y3))).
Definition term1677 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) := forall y0 : a0 -> Prop, exists y1 : type464 a0 a1, exists y2 : type465 a0 a1, forall y3 : type1413 a0 a1, forall y4 : prod a0 a1, (~ (x0 y0 y3 y4)) \/ (@SETSPEC (prod a0 a1) y4 ((@IN a0 (y1 y3 y4) y0) /\ (@IN a1 (y2 y3 y4) (y3 (y1 y3 y4)))) (@pair a0 a1 (y1 y3 y4) (y2 y3 y4))).
Definition term1645 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : a0 -> Prop) (x2 : type464 a0 a1) := forall y0 : type1413 a0 a1, exists y1 : type1208 a0 a1, forall y2 : prod a0 a1, (~ (x0 x1 y0 y2)) \/ (@SETSPEC (prod a0 a1) y2 ((@IN a0 (x2 y0 y2) x1) /\ (@IN a1 (y1 y2) (y0 (x2 y0 y2)))) (@pair a0 a1 (x2 y0 y2) (y1 y2))).
Definition term1625 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : a0 -> Prop) := forall y0 : type1413 a0 a1, exists y1 : type1207 a0 a1, exists y2 : type1208 a0 a1, forall y3 : prod a0 a1, (~ (x0 x1 y0 y3)) \/ (@SETSPEC (prod a0 a1) y3 ((@IN a0 (y1 y3) x1) /\ (@IN a1 (y2 y3) (y0 (y1 y3)))) (@pair a0 a1 (y1 y3) (y2 y3))).
Definition term1868 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a0) (x2 : a1) := fun y0 : a1 => ((fun y1 : a1 => ((@pair a0 a1 x0 x2) = (@pair a0 a1 x1 y1)) \/ ((~ (x0 = x1)) \/ (~ (x2 = y1)))) y0) /\ ((fun y1 : a1 => (~ ((@pair a0 a1 x0 x2) = (@pair a0 a1 x1 y1))) \/ ((x0 = x1) /\ (x2 = y1))) y0).
Definition term436 (a0 : Type') (a1 : Type') (x0 : a1) (x1 : type1470 a0 a1) (x2 : prod a1 a0) (x3 : a1) (x4 : a0) := ((~ (x3 = x0)) \/ (~ (x1 x3 x4))) \/ (~ (x2 = (@pair a1 a0 x3 x4))).
Definition term239 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : type1470 a0 a1) (x2 : prod a1 a0) (x3 : a1) (x4 : a0) := ((~ (x0 x3)) \/ (~ (x1 x3 x4))) \/ (~ (x2 = (@pair a1 a0 x3 x4))).
Definition term950 (a0 : Type') (a1 : Type') := fun y0 : prod a0 a1 => False.
Definition term1461 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : prod a0 a1) (x2 : a0 -> Prop) (x3 : type1413 a0 a1) := (x0 x2 x3 x1) \/ (~ (exists y0 : a0, exists y1 : a1, @SETSPEC (prod a0 a1) x1 ((@IN a0 y0 x2) /\ (@IN a1 y1 (x3 y0))) (@pair a0 a1 y0 y1))).
Definition term420 (a0 : Type') (a1 : Type') (x0 : a1) (x1 : a1 -> Prop) (x2 : type1470 a0 a1) (x3 : a1) (x4 : a0) := ((~ (x3 = x0)) \/ (~ (x2 x3 x4))) /\ ((~ (x1 x3)) \/ (~ (x2 x3 x4))).
Definition term18 (a0 : Type') (x0 : a0) (x1 : type919 a0) := @IN a0 x0 (@GSPEC a0 (fun y0 : a0 => x1 (@SETSPEC a0 y0))).
Definition term2089 (a0 : Type') (x0 : type686 a0) (x1 : type686 a0) (x2 : a0 -> Prop) := (x1 = x0) /\ (@I ((a0 -> Prop) -> Prop) x1 x2).
Definition term1349 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : type1413 a0 a1) (x2 : a0 -> Prop) := forall y0 : nat, (forall y1 : a0, (@IN a0 y1 x2) -> @HAS_SIZE a1 (x1 y1) y0) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (x0 x2 x1)) (Nat.mul (@CARD a0 x2) y0).
Definition term1095 (a0 : Type') (a1 : Type') (x0 : type1413 a0 a1) (x1 : a0 -> Prop) := forall y0 : nat, (forall y1 : a0, (@IN a0 y1 x1) -> @HAS_SIZE a1 (x0 y1) y0) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y1 : prod a0 a1 => exists y2 : a0, exists y3 : a1, @SETSPEC (prod a0 a1) y1 ((@IN a0 y2 x1) /\ (@IN a1 y3 (x0 y2))) (@pair a0 a1 y2 y3))) (Nat.mul (@CARD a0 x1) y0).
Definition term893 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a0 -> Prop) (x2 : type1413 a0 a1) (x3 : nat) := forall y0 : nat, (forall y1 : a0, ((y1 = x0) \/ (@IN a0 y1 x1)) -> @HAS_SIZE a1 (x2 y1) y0) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y1 : prod a0 a1 => exists y2 : a0, exists y3 : a1, @SETSPEC (prod a0 a1) y1 (((y2 = x0) \/ (@IN a0 y2 x1)) /\ (@IN a1 y3 (x2 y2))) (@pair a0 a1 y2 y3))) (Nat.mul x3 y0).
Definition term892 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a0 -> Prop) (x2 : type1413 a0 a1) (x3 : nat) := forall y0 : nat, (forall y1 : a0, (@IN a0 y1 (@INSERT a0 x0 x1)) -> @HAS_SIZE a1 (x2 y1) y0) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y1 : prod a0 a1 => exists y2 : a0, exists y3 : a1, @SETSPEC (prod a0 a1) y1 ((@IN a0 y2 (@INSERT a0 x0 x1)) /\ (@IN a1 y3 (x2 y2))) (@pair a0 a1 y2 y3))) (Nat.mul x3 y0).
Definition term787 (a0 : Type') (a1 : Type') (x0 : type1413 a0 a1) (x1 : nat) := forall y0 : nat, (forall y1 : a0, (@IN a0 y1 (@EMPTY a0)) -> @HAS_SIZE a1 (x0 y1) y0) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y1 : prod a0 a1 => exists y2 : a0, exists y3 : a1, @SETSPEC (prod a0 a1) y1 ((@IN a0 y2 (@EMPTY a0)) /\ (@IN a1 y3 (x0 y2))) (@pair a0 a1 y2 y3))) (Nat.mul x1 y0).
Definition term639 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : type1413 a0 a1) (x2 : nat) := forall y0 : nat, (forall y1 : a0, (@IN a0 y1 x0) -> @HAS_SIZE a1 (x1 y1) y0) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y1 : prod a0 a1 => exists y2 : a0, exists y3 : a1, @SETSPEC (prod a0 a1) y1 ((@IN a0 y2 x0) /\ (@IN a1 y3 (x1 y2))) (@pair a0 a1 y2 y3))) (Nat.mul x2 y0).
Definition term1634 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : a0 -> Prop) (x2 : type1413 a0 a1) := fun y0 : type1207 a0 a1 => (fun y1 : type1413 a0 a1 => fun y2 : type1207 a0 a1 => exists y3 : type1208 a0 a1, forall y4 : prod a0 a1, (~ (x0 x1 y1 y4)) \/ (@SETSPEC (prod a0 a1) y4 ((@IN a0 (y2 y4) x1) /\ (@IN a1 (y3 y4) (y1 (y2 y4)))) (@pair a0 a1 (y2 y4) (y3 y4)))) x2 y0.
Definition term541 (x0 : Prop) (x1 : Prop) := @eq Prop ((False \/ x0) -> x1).
Definition term528 (x0 : Prop) (x1 : Prop) := @eq Prop ((True \/ x0) -> x1).
Definition term1040 (a0 : Type') (a1 : Type') (x0 : type1413 a0 a1) (x1 : a0) (x2 : nat) := and (@HAS_SIZE a1 (x0 x1) x2).
Definition term886 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a0 -> Prop) (x2 : type1413 a0 a1) (x3 : nat) (x4 : nat) := (forall y0 : a0, ((y0 = x0) \/ (@IN a0 y0 x1)) -> @HAS_SIZE a1 (x2 y0) x4) -> (@HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y0 : prod a0 a1 => exists y1 : a0, exists y2 : a1, @SETSPEC (prod a0 a1) y0 ((@IN a0 y1 (@INSERT a0 x0 x1)) /\ (@IN a1 y2 (x2 y1))) (@pair a0 a1 y1 y2))) (Nat.mul x3 x4)) = (@HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y0 : prod a0 a1 => exists y1 : a0, exists y2 : a1, @SETSPEC (prod a0 a1) y0 (((y1 = x0) \/ (@IN a0 y1 x1)) /\ (@IN a1 y2 (x2 y1))) (@pair a0 a1 y1 y2))) (Nat.mul x3 x4)).
Definition term1918 (a0 : Type') (a1 : Type') (x0 : a0) := and (forall y0 : a1, (fun y1 : a1 => forall y2 : a0, forall y3 : a1, ((@pair a0 a1 x0 y1) = (@pair a0 a1 y2 y3)) \/ ((~ (x0 = y2)) \/ (~ (y1 = y3)))) y0).
Definition term1874 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a0) (x2 : a1) := and (forall y0 : a1, (fun y1 : a1 => ((@pair a0 a1 x0 x2) = (@pair a0 a1 x1 y1)) \/ ((~ (x0 = x1)) \/ (~ (x2 = y1)))) y0).
Definition term92 (a0 : Type') (a1 : Type') (x0 : prod a1 a0) (x1 : a1) (x2 : a1 -> Prop) (x3 : type1470 a0 a1) (x4 : a1) (x5 : a0) := (fun y0 : Prop => fun y1 : prod a1 a0 => y0 /\ (x0 = y1)) (((x4 = x1) \/ (@IN a1 x4 x2)) /\ (@IN a0 x5 (x3 x4))) (@pair a1 a0 x4 x5).
Definition term13 (a0 : Type') (x0 : a0 -> Prop) (x1 : a0) (x2 : a0 -> Prop) := (@IN a0 x1 x0) /\ (@IN a0 x1 x2).
Definition term564 (a0 : Type') (x0 : type686 a0) := (fun y0 : type686 a0 => ((y0 (@EMPTY a0)) /\ (forall y1 : a0, forall y2 : a0 -> Prop, ((y0 y2) /\ ((~ (@IN a0 y1 y2)) /\ (@FINITE a0 y2))) -> y0 (@INSERT a0 y1 y2))) -> forall y1 : a0 -> Prop, (@FINITE a0 y1) -> y0 y1) x0.
Definition term1603 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : a0 -> Prop) (x2 : type1413 a0 a1) (x3 : type1207 a0 a1) (x4 : prod a0 a1) := fun y0 : a1 => (~ (x0 x1 x2 x4)) \/ (@SETSPEC (prod a0 a1) x4 ((@IN a0 (x3 x4) x1) /\ (@IN a1 y0 (x2 (x3 x4)))) (@pair a0 a1 (x3 x4) y0)).
Definition term122 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : type1470 a0 a1) := fun y0 : prod a1 a0 => (fun y1 : type1534 a0 a1 => exists y2 : a1, exists y3 : a0, y1 ((@IN a1 y2 x0) /\ (@IN a0 y3 (x1 y2))) (@pair a1 a0 y2 y3)) (@SETSPEC (prod a1 a0) y0).
Definition term61 (a0 : Type') (a1 : Type') (x0 : a1) (x1 : a1 -> Prop) (x2 : type1470 a0 a1) := fun y0 : prod a1 a0 => (fun y1 : type1534 a0 a1 => exists y2 : a1, exists y3 : a0, y1 (((y2 = x0) \/ (@IN a1 y2 x1)) /\ (@IN a0 y3 (x2 y2))) (@pair a1 a0 y2 y3)) (@SETSPEC (prod a1 a0) y0).
Definition term381 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : prod a1 a0) (x2 : type1470 a0 a1) (x3 : a1) := (exists y0 : a1, exists y1 : a0, ((((y0 = x3) \/ (x0 y0)) /\ (x2 y0 y1)) /\ (x1 = (@pair a1 a0 y0 y1))) /\ ((forall y2 : a1, forall y3 : a0, ((~ (x0 y2)) \/ (~ (x2 y2 y3))) \/ (~ (x1 = (@pair a1 a0 y2 y3)))) /\ (forall y2 : a0, (~ (x1 = (@pair a1 a0 x3 y2))) \/ (~ (x2 x3 y2))))) \/ (exists y0 : a1, exists y1 : a0, (forall y2 : a1, forall y3 : a0, (((~ (y2 = x3)) /\ (~ (x0 y2))) \/ (~ (x2 y2 y3))) \/ (~ (x1 = (@pair a1 a0 y2 y3)))) /\ ((((x0 y0) /\ (x2 y0 y1)) /\ (x1 = (@pair a1 a0 y0 y1))) \/ ((x1 = (@pair a1 a0 x3 y1)) /\ (x2 x3 y1)))).
Definition term253 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : type1470 a0 a1) (x2 : prod a1 a0) := fun y0 : a1 => forall y1 : a0, ((~ (x0 y0)) \/ (~ (x1 y0 y1))) \/ (~ (x2 = (@pair a1 a0 y0 y1))).
Definition term232 (a0 : Type') (a1 : Type') (x0 : a1) (x1 : a1 -> Prop) (x2 : type1470 a0 a1) (x3 : prod a1 a0) := fun y0 : a1 => forall y1 : a0, (((~ (y0 = x0)) /\ (~ (x1 y0))) \/ (~ (x2 y0 y1))) \/ (~ (x3 = (@pair a1 a0 y0 y1))).
Definition term175 (a0 : Type') (a1 : Type') (x0 : prod a1 a0) (x1 : type1470 a0 a1) (x2 : a1) := fun y0 : a0 => (x0 = ((fun y1 : a0 => @pair a1 a0 x2 y1) y0)) /\ (@IN a0 y0 (x1 x2)).
Definition term304 (a0 : Type') (a1 : Type') (x0 : a1) (x1 : a1 -> Prop) (x2 : type1470 a0 a1) (x3 : prod a1 a0) (x4 : a1) (x5 : a0) := and ((((x4 = x0) \/ (x1 x4)) /\ (x2 x4 x5)) /\ (x3 = (@pair a1 a0 x4 x5))).
Definition term2074 (a0 : Type') (x0 : a0 -> Prop) (x1 : type686 a0) (x2 : type686 a0) (x3 : a0 -> Prop) := (@I ((a0 -> Prop) -> Prop) x1 x0) \/ ((~ (x3 = x0)) \/ ((~ (x2 = x1)) \/ (~ (@I ((a0 -> Prop) -> Prop) x2 x3)))).
Definition term1411 (a0 : Type') (a1 : Type') (x0 : type466 a0 a1) := fun y0 : type1413 a0 a1 => x0 y0.
Definition term649 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : nat) (x2 : type1413 a0 a1) := (fun y0 : type1413 a0 a1 => ((@CARD a0 x0) = x1) -> forall y1 : nat, (forall y2 : a0, (@IN a0 y2 x0) -> @HAS_SIZE a1 (y0 y2) y1) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y2 : prod a0 a1 => exists y3 : a0, exists y4 : a1, @SETSPEC (prod a0 a1) y2 ((@IN a0 y3 x0) /\ (@IN a1 y4 (y0 y3))) (@pair a0 a1 y3 y4))) (Nat.mul x1 y1)) x2.
Definition term1923 (a0 : Type') (a1 : Type') (x0 : a0) := (forall y0 : a1, forall y1 : a0, forall y2 : a1, ((@pair a0 a1 x0 y0) = (@pair a0 a1 y1 y2)) \/ ((~ (x0 = y1)) \/ (~ (y0 = y2)))) /\ (forall y0 : a1, forall y1 : a0, forall y2 : a1, (~ ((@pair a0 a1 x0 y0) = (@pair a0 a1 y1 y2))) \/ ((x0 = y1) /\ (y0 = y2))).
Definition term857 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a0 -> Prop) (x2 : type1413 a0 a1) (x3 : a0) (x4 : nat) := (@IN a0 x3 (@INSERT a0 x0 x1)) -> @HAS_SIZE a1 (x2 x3) x4.
Definition term644 (a0 : Type') (a1 : Type') (x0 : Prop) (x1 : type475 a0 a1) := forall y0 : type1413 a0 a1, x0 -> x1 y0.
Definition term1414 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : a0 -> Prop) := forall y0 : type1413 a0 a1, (x0 x1 y0) = ((fun y1 : type1413 a0 a1 => fun y2 : prod a0 a1 => exists y3 : a0, exists y4 : a1, @SETSPEC (prod a0 a1) y2 ((@IN a0 y3 x1) /\ (@IN a1 y4 (y1 y3))) (@pair a0 a1 y3 y4)) y0).
Definition term1593 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : a0 -> Prop) (x2 : type1413 a0 a1) (x3 : type1207 a0 a1) := forall y0 : prod a0 a1, exists y1 : a1, (~ (x0 x1 x2 y0)) \/ (@SETSPEC (prod a0 a1) y0 ((@IN a0 (x3 y0) x1) /\ (@IN a1 y1 (x2 (x3 y0)))) (@pair a0 a1 (x3 y0) y1)).
Definition term1613 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : a0 -> Prop) (x2 : type1413 a0 a1) (x3 : type1207 a0 a1) (x4 : type1208 a0 a1) (x5 : prod a0 a1) := (fun y0 : a1 => (~ (x0 x1 x2 x5)) \/ (@SETSPEC (prod a0 a1) x5 ((@IN a0 (x3 x5) x1) /\ (@IN a1 y0 (x2 (x3 x5)))) (@pair a0 a1 (x3 x5) y0))) (x4 x5).
Definition term1925 (a0 : Type') (a1 : Type') := forall y0 : a0, (forall y1 : a1, forall y2 : a0, forall y3 : a1, ((@pair a0 a1 y0 y1) = (@pair a0 a1 y2 y3)) \/ ((~ (y0 = y2)) \/ (~ (y1 = y3)))) /\ (forall y1 : a1, forall y2 : a0, forall y3 : a1, (~ ((@pair a0 a1 y0 y1) = (@pair a0 a1 y2 y3))) \/ ((y0 = y2) /\ (y1 = y3))).
Definition term1881 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a1) := forall y0 : a0, (forall y1 : a1, ((@pair a0 a1 x0 x1) = (@pair a0 a1 y0 y1)) \/ ((~ (x0 = y0)) \/ (~ (x1 = y1)))) /\ (forall y1 : a1, (~ ((@pair a0 a1 x0 x1) = (@pair a0 a1 y0 y1))) \/ ((x0 = y0) /\ (x1 = y1))).
Definition term1599 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : a0 -> Prop) (x2 : type1413 a0 a1) (x3 : type1207 a0 a1) := forall y0 : prod a0 a1, exists y1 : a1, (fun y2 : prod a0 a1 => fun y3 : a1 => (~ (x0 x1 x2 y2)) \/ (@SETSPEC (prod a0 a1) y2 ((@IN a0 (x3 y2) x1) /\ (@IN a1 y3 (x2 (x3 y2)))) (@pair a0 a1 (x3 y2) y3))) y0 y1.
Definition term1597 (a0 : Type') (a1 : Type') (x0 : type1206 a0 a1) := forall y0 : prod a0 a1, exists y1 : a1, x0 y0 y1.
Definition term1576 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : a0 -> Prop) (x2 : type1413 a0 a1) := forall y0 : prod a0 a1, exists y1 : a0, (fun y2 : prod a0 a1 => fun y3 : a0 => exists y4 : a1, (~ (x0 x1 x2 y2)) \/ (@SETSPEC (prod a0 a1) y2 ((@IN a0 y3 x1) /\ (@IN a1 y4 (x2 y3))) (@pair a0 a1 y3 y4))) y0 y1.
Definition term1574 (a0 : Type') (a1 : Type') (x0 : type1205 a0 a1) := forall y0 : prod a0 a1, exists y1 : a0, x0 y0 y1.
Definition term1386 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) := imp (x0 = (fun y0 : a0 -> Prop => fun y1 : type1413 a0 a1 => fun y2 : prod a0 a1 => exists y3 : a0, exists y4 : a1, @SETSPEC (prod a0 a1) y2 ((@IN a0 y3 y0) /\ (@IN a1 y4 (y1 y3))) (@pair a0 a1 y3 y4))).
Definition term1122 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a1) := (fun y0 : a1 => (fun y1 : a1 => @pair a0 a1 x0 y1) y0) x1.
Definition term1054 (x0 : nat) := (fun y0 : nat => forall y1 : nat, (Nat.mul (S y0) y1) = (Nat.add (Nat.mul y0 y1) y1)) x0.
Definition term913 (a0 : Type') (a1 : Type') (x0 : nat) := (fun y0 : nat => forall y1 : nat, @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y2 : prod a0 a1 => exists y3 : a0, exists y4 : a1, @SETSPEC (prod a0 a1) y2 False (@pair a0 a1 y3 y4))) (Nat.mul y0 y1)) x0.
Definition term240 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : type1470 a0 a1) (x2 : prod a1 a0) (x3 : a1) (x4 : a0) := ~ (((x0 x3) /\ (x1 x3 x4)) /\ (x2 = (@pair a1 a0 x3 x4))).
Definition term1383 (a0 : Type') (a1 : Type') := fun y0 : type621 a0 a1 => forall y1 : a0, forall y2 : type1413 a0 a1, forall y3 : a1, forall y4 : prod a0 a1, forall y5 : a1, forall y6 : a0, forall y7 : a0 -> Prop, forall y8 : nat, forall y9 : nat, (~ (@IN a0 y1 y7)) -> (@FINITE a0 y7) -> (y9 = (S (@CARD a0 y7))) -> (@HAS_SIZE a1 (y2 y1) y8) -> (forall y10 : a0, (@IN a0 y10 y7) -> @HAS_SIZE a1 (y2 y10) y8) -> (forall y10 : type1413 a0 a1, forall y11 : nat, (forall y12 : a0, (@IN a0 y12 y7) -> @HAS_SIZE a1 (y10 y12) y11) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (y0 y7 y10)) (Nat.mul (@CARD a0 y7) y11)) -> (@IN a0 y6 y7) -> (@IN a1 y5 (y2 y6)) -> (y4 = (@pair a0 a1 y6 y5)) -> (y4 = (@pair a0 a1 y1 y3)) -> (@IN a1 y3 (y2 y1)) -> (forall y10 : a0, forall y11 : a1, forall y12 : a0, forall y13 : a1, ((@pair a0 a1 y10 y11) = (@pair a0 a1 y12 y13)) = ((y10 = y12) /\ (y11 = y13))) -> (forall y10 : a0, forall y11 : nat, forall y12 : a0, forall y13 : nat, ((@pair a0 nat y10 y11) = (@pair a0 nat y12 y13)) = ((y10 = y12) /\ (y11 = y13))) -> (forall y10 : a0, forall y11 : prod a0 a1, forall y12 : a0, forall y13 : prod a0 a1, ((@pair a0 (prod a0 a1) y10 y11) = (@pair a0 (prod a0 a1) y12 y13)) = ((y10 = y12) /\ (y11 = y13))) -> (forall y10 : nat, forall y11 : a1, forall y12 : nat, forall y13 : a1, ((@pair nat a1 y10 y11) = (@pair nat a1 y12 y13)) = ((y10 = y12) /\ (y11 = y13))) -> ~ (forall y10 : prod a0 a1, forall y11 : a1, forall y12 : prod a0 a1, forall y13 : a1, ((@pair (prod a0 a1) a1 y10 y11) = (@pair (prod a0 a1) a1 y12 y13)) = ((y10 = y12) /\ (y11 = y13))).
Definition term640 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : type1413 a0 a1) (x2 : nat) := ((@CARD a0 x0) = x2) -> forall y0 : nat, (forall y1 : a0, (@IN a0 y1 x0) -> @HAS_SIZE a1 (x1 y1) y0) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y1 : prod a0 a1 => exists y2 : a0, exists y3 : a1, @SETSPEC (prod a0 a1) y1 ((@IN a0 y2 x0) /\ (@IN a1 y3 (x1 y2))) (@pair a0 a1 y2 y3))) (Nat.mul x2 y0).
Definition term1764 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : type1413 a0 a1) (x2 : nat) := exists y0 : a0, ~ ((fun y1 : a0 => (@IN a0 y1 x0) -> @HAS_SIZE a1 (x1 y1) x2) y0).
Definition term24 (a0 : Type') (a1 : Type') (x0 : a1) (x1 : a0 -> Prop) (x2 : a0 -> a1) := (fun y0 : a0 -> a1 => (@IN a1 x0 (@IMAGE a0 a1 y0 x1)) = (exists y1 : a0, (x0 = (y0 y1)) /\ (@IN a0 y1 x1))) x2.
Definition term438 (a0 : Type') (a1 : Type') (x0 : a1) (x1 : type1470 a0 a1) (x2 : prod a1 a0) (x3 : a1) (x4 : a0) := (~ (x3 = x0)) \/ ((~ (x1 x3 x4)) \/ (~ (x2 = (@pair a1 a0 x3 x4)))).
Definition term212 (a0 : Type') (a1 : Type') (x0 : prod a1 a0) (x1 : a1) (x2 : a0) := ~ (x0 = (@pair a1 a0 x1 x2)).
Definition term1519 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) := fun y0 : a0 -> Prop => (forall y1 : type1413 a0 a1, forall y2 : prod a0 a1, (x0 y0 y1 y2) \/ (forall y3 : a0, forall y4 : a1, ~ (@SETSPEC (prod a0 a1) y2 ((@IN a0 y3 y0) /\ (@IN a1 y4 (y1 y3))) (@pair a0 a1 y3 y4)))) /\ (forall y1 : type1413 a0 a1, forall y2 : prod a0 a1, (~ (x0 y0 y1 y2)) \/ (exists y3 : a0, exists y4 : a1, @SETSPEC (prod a0 a1) y2 ((@IN a0 y3 y0) /\ (@IN a1 y4 (y1 y3))) (@pair a0 a1 y3 y4))).
Definition term1495 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : a0 -> Prop) := fun y0 : type1413 a0 a1 => (forall y1 : prod a0 a1, (x0 x1 y0 y1) \/ (forall y2 : a0, forall y3 : a1, ~ (@SETSPEC (prod a0 a1) y1 ((@IN a0 y2 x1) /\ (@IN a1 y3 (y0 y2))) (@pair a0 a1 y2 y3)))) /\ (forall y1 : prod a0 a1, (~ (x0 x1 y0 y1)) \/ (exists y2 : a0, exists y3 : a1, @SETSPEC (prod a0 a1) y1 ((@IN a0 y2 x1) /\ (@IN a1 y3 (y0 y2))) (@pair a0 a1 y2 y3))).
Definition term1521 (a0 : Type') (x0 : type686 a0) (x1 : type686 a0) := forall y0 : a0 -> Prop, (x0 y0) /\ (x1 y0).
Definition term1497 (a0 : Type') (a1 : Type') (x0 : type475 a0 a1) (x1 : type475 a0 a1) := forall y0 : type1413 a0 a1, (x0 y0) /\ (x1 y0).
Definition term958 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a1) := @eq Prop ((fun y0 : prod a0 a1 => False) (@pair a0 a1 x0 x1)).
Definition term1137 (a0 : Type') (a1 : Type') (x0 : type1413 a0 a1) (x1 : a0) (x2 : a1) (x3 : a1) := ((@IN a1 x2 (x0 x1)) /\ ((@IN a1 x3 (x0 x1)) /\ (x2 = x3))) -> (x2 = x3) = True.
Definition term2042 (a0 : Type') (x0 : a0) (x1 : a0) := (x0 = x1) /\ ((@IN a0) = (@IN a0)).
Definition term1747 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : type619 a0 a1) (x2 : type620 a0 a1) := (fun y0 : type620 a0 a1 => forall y1 : a0 -> Prop, forall y2 : type1413 a0 a1, forall y3 : prod a0 a1, (~ (x0 y1 y2 y3)) \/ (@SETSPEC (prod a0 a1) y3 ((@IN a0 (x1 y1 y2 y3) y1) /\ (@IN a1 (y0 y1 y2 y3) (y2 (x1 y1 y2 y3)))) (@pair a0 a1 (x1 y1 y2 y3) (y0 y1 y2 y3)))) x2.
Definition term1889 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a1) (x2 : a0) := ((fun y0 : a0 => forall y1 : a1, ((@pair a0 a1 x0 x1) = (@pair a0 a1 y0 y1)) \/ ((~ (x0 = y0)) \/ (~ (x1 = y1)))) x2) /\ ((fun y0 : a0 => forall y1 : a1, (~ ((@pair a0 a1 x0 x1) = (@pair a0 a1 y0 y1))) \/ ((x0 = y0) /\ (x1 = y1))) x2).
Definition term1398 (a0 : Type') (a1 : Type') := forall y0 : type621 a0 a1, (y0 = (fun y1 : a0 -> Prop => fun y2 : type1413 a0 a1 => fun y3 : prod a0 a1 => exists y4 : a0, exists y5 : a1, @SETSPEC (prod a0 a1) y3 ((@IN a0 y4 y1) /\ (@IN a1 y5 (y2 y4))) (@pair a0 a1 y4 y5))) -> forall y1 : a0, forall y2 : type1413 a0 a1, forall y3 : a1, forall y4 : prod a0 a1, forall y5 : a1, forall y6 : a0, forall y7 : a0 -> Prop, forall y8 : nat, forall y9 : nat, (~ (@IN a0 y1 y7)) -> (@FINITE a0 y7) -> (y9 = (S (@CARD a0 y7))) -> (@HAS_SIZE a1 (y2 y1) y8) -> (forall y10 : a0, (@IN a0 y10 y7) -> @HAS_SIZE a1 (y2 y10) y8) -> (forall y10 : type1413 a0 a1, forall y11 : nat, (forall y12 : a0, (@IN a0 y12 y7) -> @HAS_SIZE a1 (y10 y12) y11) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (y0 y7 y10)) (Nat.mul (@CARD a0 y7) y11)) -> (@IN a0 y6 y7) -> (@IN a1 y5 (y2 y6)) -> (y4 = (@pair a0 a1 y6 y5)) -> (y4 = (@pair a0 a1 y1 y3)) -> (@IN a1 y3 (y2 y1)) -> (forall y10 : a0, forall y11 : a1, forall y12 : a0, forall y13 : a1, ((@pair a0 a1 y10 y11) = (@pair a0 a1 y12 y13)) = ((y10 = y12) /\ (y11 = y13))) -> (forall y10 : a0, forall y11 : nat, forall y12 : a0, forall y13 : nat, ((@pair a0 nat y10 y11) = (@pair a0 nat y12 y13)) = ((y10 = y12) /\ (y11 = y13))) -> (forall y10 : a0, forall y11 : prod a0 a1, forall y12 : a0, forall y13 : prod a0 a1, ((@pair a0 (prod a0 a1) y10 y11) = (@pair a0 (prod a0 a1) y12 y13)) = ((y10 = y12) /\ (y11 = y13))) -> (forall y10 : nat, forall y11 : a1, forall y12 : nat, forall y13 : a1, ((@pair nat a1 y10 y11) = (@pair nat a1 y12 y13)) = ((y10 = y12) /\ (y11 = y13))) -> ~ (forall y10 : prod a0 a1, forall y11 : a1, forall y12 : prod a0 a1, forall y13 : a1, ((@pair (prod a0 a1) a1 y10 y11) = (@pair (prod a0 a1) a1 y12 y13)) = ((y10 = y12) /\ (y11 = y13))).
Definition term1745 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : type619 a0 a1) := (forall y0 : a0 -> Prop, forall y1 : type1413 a0 a1, forall y2 : prod a0 a1, (x0 y0 y1 y2) \/ (forall y3 : a0, forall y4 : a1, ~ (@SETSPEC (prod a0 a1) y2 ((@IN a0 y3 y0) /\ (@IN a1 y4 (y1 y3))) (@pair a0 a1 y3 y4)))) /\ (exists y0 : type620 a0 a1, (fun y1 : type620 a0 a1 => forall y2 : a0 -> Prop, forall y3 : type1413 a0 a1, forall y4 : prod a0 a1, (~ (x0 y2 y3 y4)) \/ (@SETSPEC (prod a0 a1) y4 ((@IN a0 (x1 y2 y3 y4) y2) /\ (@IN a1 (y1 y2 y3 y4) (y3 (x1 y2 y3 y4)))) (@pair a0 a1 (x1 y2 y3 y4) (y1 y2 y3 y4)))) y0).
Definition term1731 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) := (forall y0 : a0 -> Prop, forall y1 : type1413 a0 a1, forall y2 : prod a0 a1, (x0 y0 y1 y2) \/ (forall y3 : a0, forall y4 : a1, ~ (@SETSPEC (prod a0 a1) y2 ((@IN a0 y3 y0) /\ (@IN a1 y4 (y1 y3))) (@pair a0 a1 y3 y4)))) /\ (exists y0 : type619 a0 a1, (fun y1 : type619 a0 a1 => exists y2 : type620 a0 a1, forall y3 : a0 -> Prop, forall y4 : type1413 a0 a1, forall y5 : prod a0 a1, (~ (x0 y3 y4 y5)) \/ (@SETSPEC (prod a0 a1) y5 ((@IN a0 (y1 y3 y4 y5) y3) /\ (@IN a1 (y2 y3 y4 y5) (y4 (y1 y3 y4 y5)))) (@pair a0 a1 (y1 y3 y4 y5) (y2 y3 y4 y5)))) y0).
Definition term1827 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : a0 -> Prop) (x2 : type1413 a0 a1) := fun y0 : nat -> a0 => (fun y1 : type1413 a0 a1 => fun y2 : nat -> a0 => forall y3 : nat, ((@IN a0 (y2 y3) x1) /\ (~ (@HAS_SIZE a1 (y1 (y2 y3)) y3))) \/ (@HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (x0 x1 y1)) (Nat.mul (@CARD a0 x1) y3))) x2 y0.
Definition term1358 (a0 : Type') (a1 : Type') (x0 : nat) (x1 : nat) (x2 : type621 a0 a1) (x3 : a0 -> Prop) (x4 : a0) (x5 : a1) (x6 : prod a0 a1) (x7 : a1) (x8 : type1413 a0 a1) (x9 : a0) := (@FINITE a0 x3) -> (x0 = (S (@CARD a0 x3))) -> (@HAS_SIZE a1 (x8 x9) x1) -> (forall y0 : a0, (@IN a0 y0 x3) -> @HAS_SIZE a1 (x8 y0) x1) -> (forall y0 : type1413 a0 a1, forall y1 : nat, (forall y2 : a0, (@IN a0 y2 x3) -> @HAS_SIZE a1 (y0 y2) y1) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (x2 x3 y0)) (Nat.mul (@CARD a0 x3) y1)) -> (@IN a0 x4 x3) -> (@IN a1 x5 (x8 x4)) -> (x6 = (@pair a0 a1 x4 x5)) -> (x6 = (@pair a0 a1 x9 x7)) -> (@IN a1 x7 (x8 x9)) -> (forall y0 : a0, forall y1 : a1, forall y2 : a0, forall y3 : a1, ((@pair a0 a1 y0 y1) = (@pair a0 a1 y2 y3)) = ((y0 = y2) /\ (y1 = y3))) -> (forall y0 : a0, forall y1 : nat, forall y2 : a0, forall y3 : nat, ((@pair a0 nat y0 y1) = (@pair a0 nat y2 y3)) = ((y0 = y2) /\ (y1 = y3))) -> (forall y0 : a0, forall y1 : prod a0 a1, forall y2 : a0, forall y3 : prod a0 a1, ((@pair a0 (prod a0 a1) y0 y1) = (@pair a0 (prod a0 a1) y2 y3)) = ((y0 = y2) /\ (y1 = y3))) -> (forall y0 : nat, forall y1 : a1, forall y2 : nat, forall y3 : a1, ((@pair nat a1 y0 y1) = (@pair nat a1 y2 y3)) = ((y0 = y2) /\ (y1 = y3))) -> ~ (forall y0 : prod a0 a1, forall y1 : a1, forall y2 : prod a0 a1, forall y3 : a1, ((@pair (prod a0 a1) a1 y0 y1) = (@pair (prod a0 a1) a1 y2 y3)) = ((y0 = y2) /\ (y1 = y3))).
Definition term362 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : prod a1 a0) (x2 : type1470 a0 a1) (x3 : a1) (x4 : a1) := (forall y0 : a1, forall y1 : a0, (((~ (y0 = x3)) /\ (~ (x0 y0))) \/ (~ (x2 y0 y1))) \/ (~ (x1 = (@pair a1 a0 y0 y1)))) /\ ((fun y0 : a1 => exists y1 : a0, (((x0 y0) /\ (x2 y0 y1)) /\ (x1 = (@pair a1 a0 y0 y1))) \/ ((x1 = (@pair a1 a0 x3 y1)) /\ (x2 x3 y1))) x4).
Definition term946 (a0 : Type') (a1 : Type') (x0 : prod a0 a1) := @eq ((prod a0 a1) -> Prop) ((fun y0 : Prop => (fun y1 : Prop => fun y2 : prod a0 a1 => y1 /\ (x0 = y2)) y0) False).
Definition term1493 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : a0 -> Prop) (x2 : type1413 a0 a1) := forall y0 : prod a0 a1, (~ (x0 x1 x2 y0)) \/ (exists y1 : a0, exists y2 : a1, @SETSPEC (prod a0 a1) y0 ((@IN a0 y1 x1) /\ (@IN a1 y2 (x2 y1))) (@pair a0 a1 y1 y2)).
Definition term898 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a0 -> Prop) (x2 : nat) := (((S (@CARD a0 x1)) = x2) -> (forall y0 : type1413 a0 a1, forall y1 : nat, (forall y2 : a0, (@IN a0 y2 (@INSERT a0 x0 x1)) -> @HAS_SIZE a1 (y0 y2) y1) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y2 : prod a0 a1 => exists y3 : a0, exists y4 : a1, @SETSPEC (prod a0 a1) y2 ((@IN a0 y3 (@INSERT a0 x0 x1)) /\ (@IN a1 y4 (y0 y3))) (@pair a0 a1 y3 y4))) (Nat.mul x2 y1)) = (forall y0 : type1413 a0 a1, forall y1 : nat, (forall y2 : a0, ((y2 = x0) \/ (@IN a0 y2 x1)) -> @HAS_SIZE a1 (y0 y2) y1) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y2 : prod a0 a1 => exists y3 : a0, exists y4 : a1, @SETSPEC (prod a0 a1) y2 (((y3 = x0) \/ (@IN a0 y3 x1)) /\ (@IN a1 y4 (y0 y3))) (@pair a0 a1 y3 y4))) (Nat.mul x2 y1))) -> (((@CARD a0 (@INSERT a0 x0 x1)) = x2) -> forall y0 : type1413 a0 a1, forall y1 : nat, (forall y2 : a0, (@IN a0 y2 (@INSERT a0 x0 x1)) -> @HAS_SIZE a1 (y0 y2) y1) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y2 : prod a0 a1 => exists y3 : a0, exists y4 : a1, @SETSPEC (prod a0 a1) y2 ((@IN a0 y3 (@INSERT a0 x0 x1)) /\ (@IN a1 y4 (y0 y3))) (@pair a0 a1 y3 y4))) (Nat.mul x2 y1)) = (((S (@CARD a0 x1)) = x2) -> forall y0 : type1413 a0 a1, forall y1 : nat, (forall y2 : a0, ((y2 = x0) \/ (@IN a0 y2 x1)) -> @HAS_SIZE a1 (y0 y2) y1) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y2 : prod a0 a1 => exists y3 : a0, exists y4 : a1, @SETSPEC (prod a0 a1) y2 (((y3 = x0) \/ (@IN a0 y3 x1)) /\ (@IN a1 y4 (y0 y3))) (@pair a0 a1 y3 y4))) (Nat.mul x2 y1)).
Definition term794 (a0 : Type') (a1 : Type') (x0 : nat) := (((NUMERAL 0) = x0) -> (forall y0 : type1413 a0 a1, forall y1 : nat, (forall y2 : a0, (@IN a0 y2 (@EMPTY a0)) -> @HAS_SIZE a1 (y0 y2) y1) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y2 : prod a0 a1 => exists y3 : a0, exists y4 : a1, @SETSPEC (prod a0 a1) y2 ((@IN a0 y3 (@EMPTY a0)) /\ (@IN a1 y4 (y0 y3))) (@pair a0 a1 y3 y4))) (Nat.mul x0 y1)) = (forall y0 : nat, @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y1 : prod a0 a1 => exists y2 : a0, exists y3 : a1, @SETSPEC (prod a0 a1) y1 False (@pair a0 a1 y2 y3))) (Nat.mul x0 y0))) -> (((@CARD a0 (@EMPTY a0)) = x0) -> forall y0 : type1413 a0 a1, forall y1 : nat, (forall y2 : a0, (@IN a0 y2 (@EMPTY a0)) -> @HAS_SIZE a1 (y0 y2) y1) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y2 : prod a0 a1 => exists y3 : a0, exists y4 : a1, @SETSPEC (prod a0 a1) y2 ((@IN a0 y3 (@EMPTY a0)) /\ (@IN a1 y4 (y0 y3))) (@pair a0 a1 y3 y4))) (Nat.mul x0 y1)) = (((NUMERAL 0) = x0) -> forall y0 : nat, @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y1 : prod a0 a1 => exists y2 : a0, exists y3 : a1, @SETSPEC (prod a0 a1) y1 False (@pair a0 a1 y2 y3))) (Nat.mul x0 y0)).
Definition term979 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a0 -> Prop) (x2 : type1413 a0 a1) (x3 : nat) (x4 : nat) (x5 : Prop) (x6 : Prop) := ((forall y0 : a0, ((y0 = x0) -> @HAS_SIZE a1 (x2 y0) x4) /\ ((@IN a0 y0 x1) -> @HAS_SIZE a1 (x2 y0) x4)) = x5) -> (x5 -> (@HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y0 : prod a0 a1 => exists y1 : a0, exists y2 : a1, @SETSPEC (prod a0 a1) y0 (((y1 = x0) \/ (@IN a0 y1 x1)) /\ (@IN a1 y2 (x2 y1))) (@pair a0 a1 y1 y2))) (Nat.mul x3 x4)) = x6) -> ((forall y0 : a0, ((y0 = x0) -> @HAS_SIZE a1 (x2 y0) x4) /\ ((@IN a0 y0 x1) -> @HAS_SIZE a1 (x2 y0) x4)) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y0 : prod a0 a1 => exists y1 : a0, exists y2 : a1, @SETSPEC (prod a0 a1) y0 (((y1 = x0) \/ (@IN a0 y1 x1)) /\ (@IN a1 y2 (x2 y1))) (@pair a0 a1 y1 y2))) (Nat.mul x3 x4)) = (x5 -> x6).
Definition term847 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a0 -> Prop) (x2 : type1413 a0 a1) (x3 : nat) (x4 : nat) (x5 : Prop) (x6 : Prop) := ((forall y0 : a0, (@IN a0 y0 (@INSERT a0 x0 x1)) -> @HAS_SIZE a1 (x2 y0) x4) = x5) -> (x5 -> (@HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y0 : prod a0 a1 => exists y1 : a0, exists y2 : a1, @SETSPEC (prod a0 a1) y0 ((@IN a0 y1 (@INSERT a0 x0 x1)) /\ (@IN a1 y2 (x2 y1))) (@pair a0 a1 y1 y2))) (Nat.mul x3 x4)) = x6) -> ((forall y0 : a0, (@IN a0 y0 (@INSERT a0 x0 x1)) -> @HAS_SIZE a1 (x2 y0) x4) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y0 : prod a0 a1 => exists y1 : a0, exists y2 : a1, @SETSPEC (prod a0 a1) y0 ((@IN a0 y1 (@INSERT a0 x0 x1)) /\ (@IN a1 y2 (x2 y1))) (@pair a0 a1 y1 y2))) (Nat.mul x3 x4)) = (x5 -> x6).
Definition term689 (a0 : Type') (a1 : Type') := (fun y0 : a0 -> Prop => forall y1 : nat, ((@CARD a0 y0) = y1) -> forall y2 : type1413 a0 a1, forall y3 : nat, (forall y4 : a0, (@IN a0 y4 y0) -> @HAS_SIZE a1 (y2 y4) y3) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y4 : prod a0 a1 => exists y5 : a0, exists y6 : a1, @SETSPEC (prod a0 a1) y4 ((@IN a0 y5 y0) /\ (@IN a1 y6 (y2 y5))) (@pair a0 a1 y5 y6))) (Nat.mul y1 y3)) (@EMPTY a0).
Definition term784 (a0 : Type') (a1 : Type') (x0 : nat) (x1 : nat) := True -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y0 : prod a0 a1 => exists y1 : a0, exists y2 : a1, @SETSPEC (prod a0 a1) y0 False (@pair a0 a1 y1 y2))) (Nat.mul x0 x1).
Definition term88 (a0 : Type') (a1 : Type') (x0 : a1) (x1 : a1 -> Prop) (x2 : type1470 a0 a1) (x3 : a1) (x4 : a0) := and (((x3 = x0) \/ (x1 x3)) /\ (x2 x3 x4)).
Definition term432 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : type1470 a0 a1) (x2 : prod a1 a0) (x3 : a1) := (fun y0 : a1 => forall y1 : a0, ((~ (x0 y0)) \/ (~ (x1 y0 y1))) \/ (~ (x2 = (@pair a1 a0 y0 y1)))) x3.
Definition term2068 (a0 : Type') (x0 : a0) (x1 : a0) := (((@I (a0 -> (a0 -> Prop) -> Prop) (@IN a0) x1) = (@I (a0 -> (a0 -> Prop) -> Prop) (@IN a0) x0)) /\ ((@I (a0 -> (a0 -> Prop) -> Prop) (@IN a0) x1) = (@I (a0 -> (a0 -> Prop) -> Prop) (@IN a0) x1))) -> (@I (a0 -> (a0 -> Prop) -> Prop) (@IN a0) x0) = (@I (a0 -> (a0 -> Prop) -> Prop) (@IN a0) x1).
Definition term1041 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a0 -> Prop) (x2 : type1413 a0 a1) (x3 : nat) := (@HAS_SIZE a1 (x2 x0) x3) /\ (forall y0 : a0, (@IN a0 y0 x1) -> @HAS_SIZE a1 (x2 y0) x3).
Definition term592 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : type1413 a0 a1) (x2 : nat) := forall y0 : nat, (((@FINITE a0 x0) /\ ((@CARD a0 x0) = x2)) /\ (forall y1 : a0, (@IN a0 y1 x0) -> @HAS_SIZE a1 (x1 y1) y0)) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y1 : prod a0 a1 => exists y2 : a0, exists y3 : a1, @SETSPEC (prod a0 a1) y1 ((@IN a0 y2 x0) /\ (@IN a1 y3 (x1 y2))) (@pair a0 a1 y2 y3))) (Nat.mul x2 y0).
Definition term591 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : type1413 a0 a1) (x2 : nat) := forall y0 : nat, ((@HAS_SIZE a0 x0 x2) /\ (forall y1 : a0, (@IN a0 y1 x0) -> @HAS_SIZE a1 (x1 y1) y0)) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y1 : prod a0 a1 => exists y2 : a0, exists y3 : a1, @SETSPEC (prod a0 a1) y1 ((@IN a0 y2 x0) /\ (@IN a1 y3 (x1 y2))) (@pair a0 a1 y2 y3))) (Nat.mul x2 y0).
Definition term36 (a0 : Type') (x0 : a0 -> Prop) (x1 : a0 -> Prop) (x2 : nat) := forall y0 : nat, ((@HAS_SIZE a0 x0 x2) /\ ((@HAS_SIZE a0 x1 y0) /\ (@DISJOINT a0 x0 x1))) -> @HAS_SIZE a0 (@UNION a0 x0 x1) (Nat.add x2 y0).
Definition term2015 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a1) (x2 : a0) (x3 : a1) := ~ (~ ((@I (a1 -> prod a0 a1) (@I (a0 -> a1 -> prod a0 a1) (@pair a0 a1) x0) x1) = (@I (a1 -> prod a0 a1) (@I (a0 -> a1 -> prod a0 a1) (@pair a0 a1) x2) x3))).
Definition term268 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : prod a1 a0) (x2 : type1470 a0 a1) (x3 : a1) := ~ ((exists y0 : a1, exists y1 : a0, ((x0 y0) /\ (x2 y0 y1)) /\ (x1 = (@pair a1 a0 y0 y1))) \/ (exists y0 : a0, (x1 = (@pair a1 a0 x3 y0)) /\ (x2 x3 y0))).
Definition term1987 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a0) (x2 : a1) (x3 : a1) := (fun y0 : a1 => ((~ ((@I (a1 -> prod a0 a1) (@I (a0 -> a1 -> prod a0 a1) (@pair a0 a1) x0) x2) = (@I (a1 -> prod a0 a1) (@I (a0 -> a1 -> prod a0 a1) (@pair a0 a1) x1) y0))) \/ (x0 = x1)) /\ ((~ ((@I (a1 -> prod a0 a1) (@I (a0 -> a1 -> prod a0 a1) (@pair a0 a1) x0) x2) = (@I (a1 -> prod a0 a1) (@I (a0 -> a1 -> prod a0 a1) (@pair a0 a1) x1) y0))) \/ (x2 = y0))) x3.
Definition term1010 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : type1413 a0 a1) (x2 : a0) (x3 : nat) := (x0 = x2) -> (@HAS_SIZE a1 (x1 x0) x3) = (@HAS_SIZE a1 (x1 x2) x3).
Definition term389 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : prod a1 a0) (x2 : type1470 a0 a1) (x3 : a1) := fun y0 : a1 => (fun y1 : a1 => exists y2 : a0, (forall y3 : a1, forall y4 : a0, (((~ (y3 = x3)) /\ (~ (x0 y3))) \/ (~ (x2 y3 y4))) \/ (~ (x1 = (@pair a1 a0 y3 y4)))) /\ ((((x0 y1) /\ (x2 y1 y2)) /\ (x1 = (@pair a1 a0 y1 y2))) \/ ((x1 = (@pair a1 a0 x3 y2)) /\ (x2 x3 y2)))) y0.
Definition term385 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : prod a1 a0) (x2 : type1470 a0 a1) (x3 : a1) := fun y0 : a1 => (fun y1 : a1 => exists y2 : a0, ((((y1 = x3) \/ (x0 y1)) /\ (x2 y1 y2)) /\ (x1 = (@pair a1 a0 y1 y2))) /\ ((forall y3 : a1, forall y4 : a0, ((~ (x0 y3)) \/ (~ (x2 y3 y4))) \/ (~ (x1 = (@pair a1 a0 y3 y4)))) /\ (forall y3 : a0, (~ (x1 = (@pair a1 a0 x3 y3))) \/ (~ (x2 x3 y3))))) y0.
Definition term358 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : prod a1 a0) (x2 : type1470 a0 a1) (x3 : a1) := fun y0 : a1 => (fun y1 : a1 => exists y2 : a0, (((x0 y1) /\ (x2 y1 y2)) /\ (x1 = (@pair a1 a0 y1 y2))) \/ ((x1 = (@pair a1 a0 x3 y2)) /\ (x2 x3 y2))) y0.
Definition term317 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : type1470 a0 a1) (x2 : prod a1 a0) := fun y0 : a1 => (fun y1 : a1 => exists y2 : a0, ((x0 y1) /\ (x1 y1 y2)) /\ (x2 = (@pair a1 a0 y1 y2))) y0.
Definition term284 (a0 : Type') (a1 : Type') (x0 : a1) (x1 : a1 -> Prop) (x2 : type1470 a0 a1) (x3 : prod a1 a0) := fun y0 : a1 => (fun y1 : a1 => exists y2 : a0, (((y1 = x0) \/ (x1 y1)) /\ (x2 y1 y2)) /\ (x3 = (@pair a1 a0 y1 y2))) y0.
Definition term1075 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : type1413 a0 a1) := @GSPEC (prod a0 a1) (fun y0 : prod a0 a1 => exists y1 : a0, exists y2 : a1, @SETSPEC (prod a0 a1) y0 ((@IN a0 y1 x0) /\ (@IN a1 y2 (x1 y1))) (@pair a0 a1 y1 y2)).
Definition term882 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a0 -> Prop) (x2 : type1413 a0 a1) := @GSPEC (prod a0 a1) (fun y0 : prod a0 a1 => exists y1 : a0, exists y2 : a1, @SETSPEC (prod a0 a1) y0 (((y1 = x0) \/ (@IN a0 y1 x1)) /\ (@IN a1 y2 (x2 y1))) (@pair a0 a1 y1 y2)).
Definition term881 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a0 -> Prop) (x2 : type1413 a0 a1) := @GSPEC (prod a0 a1) (fun y0 : prod a0 a1 => exists y1 : a0, exists y2 : a1, @SETSPEC (prod a0 a1) y0 ((@IN a0 y1 (@INSERT a0 x0 x1)) /\ (@IN a1 y2 (x2 y1))) (@pair a0 a1 y1 y2)).
Definition term777 (a0 : Type') (a1 : Type') := @GSPEC (prod a0 a1) (fun y0 : prod a0 a1 => exists y1 : a0, exists y2 : a1, @SETSPEC (prod a0 a1) y0 False (@pair a0 a1 y1 y2)).
Definition term776 (a0 : Type') (a1 : Type') (x0 : type1413 a0 a1) := @GSPEC (prod a0 a1) (fun y0 : prod a0 a1 => exists y1 : a0, exists y2 : a1, @SETSPEC (prod a0 a1) y0 ((@IN a0 y1 (@EMPTY a0)) /\ (@IN a1 y2 (x0 y1))) (@pair a0 a1 y1 y2)).
Definition term115 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : type1470 a0 a1) := @GSPEC (prod a1 a0) (fun y0 : prod a1 a0 => exists y1 : a1, exists y2 : a0, @SETSPEC (prod a1 a0) y0 ((@IN a1 y1 x0) /\ (@IN a0 y2 (x1 y1))) (@pair a1 a0 y1 y2)).
Definition term51 (a0 : Type') (a1 : Type') (x0 : a1) (x1 : a1 -> Prop) (x2 : type1470 a0 a1) := @GSPEC (prod a1 a0) (fun y0 : prod a1 a0 => exists y1 : a1, exists y2 : a0, @SETSPEC (prod a1 a0) y0 (((y1 = x0) \/ (@IN a1 y1 x1)) /\ (@IN a0 y2 (x2 y1))) (@pair a1 a0 y1 y2)).
Definition term529 (x0 : Prop) := and (True -> x0).
Definition term1058 (x0 : nat) (x1 : nat) := Nat.add (Nat.mul x0 x1) x1.
Definition term1167 (a0 : Type') (a1 : Type') (x0 : prod a0 a1) (x1 : a0 -> Prop) (x2 : type1413 a0 a1) := @IN (prod a0 a1) x0 (@GSPEC (prod a0 a1) (fun y0 : prod a0 a1 => exists y1 : a0, exists y2 : a1, @SETSPEC (prod a0 a1) y0 ((@IN a0 y1 x1) /\ (@IN a1 y2 (x2 y1))) (@pair a0 a1 y1 y2))).
Definition term935 (a0 : Type') (a1 : Type') (x0 : prod a0 a1) := @IN (prod a0 a1) x0 (@GSPEC (prod a0 a1) (fun y0 : prod a0 a1 => exists y1 : a0, exists y2 : a1, @SETSPEC (prod a0 a1) y0 False (@pair a0 a1 y1 y2))).
Definition term125 (a0 : Type') (a1 : Type') (x0 : prod a1 a0) (x1 : a1 -> Prop) (x2 : type1470 a0 a1) := @IN (prod a1 a0) x0 (@GSPEC (prod a1 a0) (fun y0 : prod a1 a0 => exists y1 : a1, exists y2 : a0, @SETSPEC (prod a1 a0) y0 ((@IN a1 y1 x1) /\ (@IN a0 y2 (x2 y1))) (@pair a1 a0 y1 y2))).
Definition term64 (a0 : Type') (a1 : Type') (x0 : prod a1 a0) (x1 : a1) (x2 : a1 -> Prop) (x3 : type1470 a0 a1) := @IN (prod a1 a0) x0 (@GSPEC (prod a1 a0) (fun y0 : prod a1 a0 => exists y1 : a1, exists y2 : a0, @SETSPEC (prod a1 a0) y0 (((y1 = x1) \/ (@IN a1 y1 x2)) /\ (@IN a0 y2 (x3 y1))) (@pair a1 a0 y1 y2))).
Definition term834 (a0 : Type') (x0 : a0 -> Prop) := (~ False) -> (S (@CARD a0 x0)) = (S (@CARD a0 x0)).
Definition term1531 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) := fun y0 : a0 -> Prop => ((fun y1 : a0 -> Prop => forall y2 : type1413 a0 a1, forall y3 : prod a0 a1, (x0 y1 y2 y3) \/ (forall y4 : a0, forall y5 : a1, ~ (@SETSPEC (prod a0 a1) y3 ((@IN a0 y4 y1) /\ (@IN a1 y5 (y2 y4))) (@pair a0 a1 y4 y5)))) y0) /\ ((fun y1 : a0 -> Prop => forall y2 : type1413 a0 a1, forall y3 : prod a0 a1, (~ (x0 y1 y2 y3)) \/ (exists y4 : a0, exists y5 : a1, @SETSPEC (prod a0 a1) y3 ((@IN a0 y4 y1) /\ (@IN a1 y5 (y2 y4))) (@pair a0 a1 y4 y5))) y0).
Definition term1507 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : a0 -> Prop) := fun y0 : type1413 a0 a1 => ((fun y1 : type1413 a0 a1 => forall y2 : prod a0 a1, (x0 x1 y1 y2) \/ (forall y3 : a0, forall y4 : a1, ~ (@SETSPEC (prod a0 a1) y2 ((@IN a0 y3 x1) /\ (@IN a1 y4 (y1 y3))) (@pair a0 a1 y3 y4)))) y0) /\ ((fun y1 : type1413 a0 a1 => forall y2 : prod a0 a1, (~ (x0 x1 y1 y2)) \/ (exists y3 : a0, exists y4 : a1, @SETSPEC (prod a0 a1) y2 ((@IN a0 y3 x1) /\ (@IN a1 y4 (y1 y3))) (@pair a0 a1 y3 y4))) y0).
Definition term1981 (a0 : Type') (a1 : Type') (x0 : a0) := forall y0 : a1, forall y1 : a0, forall y2 : a1, ((~ ((@I (a1 -> prod a0 a1) (@I (a0 -> a1 -> prod a0 a1) (@pair a0 a1) x0) y0) = (@I (a1 -> prod a0 a1) (@I (a0 -> a1 -> prod a0 a1) (@pair a0 a1) y1) y2))) \/ (x0 = y1)) /\ ((~ ((@I (a1 -> prod a0 a1) (@I (a0 -> a1 -> prod a0 a1) (@pair a0 a1) x0) y0) = (@I (a1 -> prod a0 a1) (@I (a0 -> a1 -> prod a0 a1) (@pair a0 a1) y1) y2))) \/ (y0 = y2)).
Definition term1970 (a0 : Type') (a1 : Type') (x0 : a0) := forall y0 : a1, forall y1 : a0, forall y2 : a1, ((@I (a1 -> prod a0 a1) (@I (a0 -> a1 -> prod a0 a1) (@pair a0 a1) x0) y0) = (@I (a1 -> prod a0 a1) (@I (a0 -> a1 -> prod a0 a1) (@pair a0 a1) y1) y2)) \/ ((~ (x0 = y1)) \/ (~ (y0 = y2))).
Definition term1960 (a0 : Type') (a1 : Type') (x0 : a0) := forall y0 : a1, forall y1 : a0, forall y2 : a1, (~ ((@I (a1 -> prod a0 a1) (@I (a0 -> a1 -> prod a0 a1) (@pair a0 a1) x0) y0) = (@I (a1 -> prod a0 a1) (@I (a0 -> a1 -> prod a0 a1) (@pair a0 a1) y1) y2))) \/ ((x0 = y1) /\ (y0 = y2)).
Definition term1922 (a0 : Type') (a1 : Type') (x0 : a0) := forall y0 : a1, forall y1 : a0, forall y2 : a1, (~ ((@pair a0 a1 x0 y0) = (@pair a0 a1 y1 y2))) \/ ((x0 = y1) /\ (y0 = y2)).
Definition term1917 (a0 : Type') (a1 : Type') (x0 : a0) := forall y0 : a1, forall y1 : a0, forall y2 : a1, ((@pair a0 a1 x0 y0) = (@pair a0 a1 y1 y2)) \/ ((~ (x0 = y1)) \/ (~ (y0 = y2))).
Definition term1857 (a0 : Type') (a1 : Type') (x0 : a0) := forall y0 : a1, forall y1 : a0, forall y2 : a1, (((@pair a0 a1 x0 y0) = (@pair a0 a1 y1 y2)) \/ ((~ (x0 = y1)) \/ (~ (y0 = y2)))) /\ ((~ ((@pair a0 a1 x0 y0) = (@pair a0 a1 y1 y2))) \/ ((x0 = y1) /\ (y0 = y2))).
Definition term1369 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : prod a0 a1) (x2 : a1) (x3 : type1413 a0 a1) (x4 : a0) := forall y0 : a1, forall y1 : a0, forall y2 : a0 -> Prop, forall y3 : nat, forall y4 : nat, (~ (@IN a0 x4 y2)) -> (@FINITE a0 y2) -> (y4 = (S (@CARD a0 y2))) -> (@HAS_SIZE a1 (x3 x4) y3) -> (forall y5 : a0, (@IN a0 y5 y2) -> @HAS_SIZE a1 (x3 y5) y3) -> (forall y5 : type1413 a0 a1, forall y6 : nat, (forall y7 : a0, (@IN a0 y7 y2) -> @HAS_SIZE a1 (y5 y7) y6) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (x0 y2 y5)) (Nat.mul (@CARD a0 y2) y6)) -> (@IN a0 y1 y2) -> (@IN a1 y0 (x3 y1)) -> (x1 = (@pair a0 a1 y1 y0)) -> (x1 = (@pair a0 a1 x4 x2)) -> (@IN a1 x2 (x3 x4)) -> (forall y5 : a0, forall y6 : a1, forall y7 : a0, forall y8 : a1, ((@pair a0 a1 y5 y6) = (@pair a0 a1 y7 y8)) = ((y5 = y7) /\ (y6 = y8))) -> (forall y5 : a0, forall y6 : nat, forall y7 : a0, forall y8 : nat, ((@pair a0 nat y5 y6) = (@pair a0 nat y7 y8)) = ((y5 = y7) /\ (y6 = y8))) -> (forall y5 : a0, forall y6 : prod a0 a1, forall y7 : a0, forall y8 : prod a0 a1, ((@pair a0 (prod a0 a1) y5 y6) = (@pair a0 (prod a0 a1) y7 y8)) = ((y5 = y7) /\ (y6 = y8))) -> (forall y5 : nat, forall y6 : a1, forall y7 : nat, forall y8 : a1, ((@pair nat a1 y5 y6) = (@pair nat a1 y7 y8)) = ((y5 = y7) /\ (y6 = y8))) -> ~ (forall y5 : prod a0 a1, forall y6 : a1, forall y7 : prod a0 a1, forall y8 : a1, ((@pair (prod a0 a1) a1 y5 y6) = (@pair (prod a0 a1) a1 y7 y8)) = ((y5 = y7) /\ (y6 = y8))).
Definition term1283 (a0 : Type') (a1 : Type') (x0 : prod a0 a1) (x1 : a1) (x2 : type1413 a0 a1) (x3 : a0) := forall y0 : a1, forall y1 : a0, forall y2 : a0 -> Prop, forall y3 : nat, forall y4 : nat, (~ (@IN a0 x3 y2)) -> (@FINITE a0 y2) -> (y4 = (S (@CARD a0 y2))) -> (@HAS_SIZE a1 (x2 x3) y3) -> (forall y5 : a0, (@IN a0 y5 y2) -> @HAS_SIZE a1 (x2 y5) y3) -> (forall y5 : type1413 a0 a1, forall y6 : nat, (forall y7 : a0, (@IN a0 y7 y2) -> @HAS_SIZE a1 (y5 y7) y6) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y7 : prod a0 a1 => exists y8 : a0, exists y9 : a1, @SETSPEC (prod a0 a1) y7 ((@IN a0 y8 y2) /\ (@IN a1 y9 (y5 y8))) (@pair a0 a1 y8 y9))) (Nat.mul (@CARD a0 y2) y6)) -> (@IN a0 y1 y2) -> (@IN a1 y0 (x2 y1)) -> (x0 = (@pair a0 a1 y1 y0)) -> (x0 = (@pair a0 a1 x3 x1)) -> (@IN a1 x1 (x2 x3)) -> (forall y5 : a0, forall y6 : a1, forall y7 : a0, forall y8 : a1, ((@pair a0 a1 y5 y6) = (@pair a0 a1 y7 y8)) = ((y5 = y7) /\ (y6 = y8))) -> (forall y5 : a0, forall y6 : nat, forall y7 : a0, forall y8 : nat, ((@pair a0 nat y5 y6) = (@pair a0 nat y7 y8)) = ((y5 = y7) /\ (y6 = y8))) -> (forall y5 : a0, forall y6 : prod a0 a1, forall y7 : a0, forall y8 : prod a0 a1, ((@pair a0 (prod a0 a1) y5 y6) = (@pair a0 (prod a0 a1) y7 y8)) = ((y5 = y7) /\ (y6 = y8))) -> (forall y5 : nat, forall y6 : a1, forall y7 : nat, forall y8 : a1, ((@pair nat a1 y5 y6) = (@pair nat a1 y7 y8)) = ((y5 = y7) /\ (y6 = y8))) -> ~ (forall y5 : prod a0 a1, forall y6 : a1, forall y7 : prod a0 a1, forall y8 : a1, ((@pair (prod a0 a1) a1 y5 y6) = (@pair (prod a0 a1) a1 y7 y8)) = ((y5 = y7) /\ (y6 = y8))).
Definition term1282 (a0 : Type') (a1 : Type') (x0 : prod a0 a1) (x1 : a1) (x2 : type1413 a0 a1) (x3 : a0) := forall y0 : a1, forall y1 : a0, forall y2 : a0 -> Prop, forall y3 : nat, forall y4 : nat, (~ (@IN a0 x3 y2)) -> (@FINITE a0 y2) -> (y4 = (S (@CARD a0 y2))) -> (@HAS_SIZE a1 (x2 x3) y3) -> (forall y5 : a0, (@IN a0 y5 y2) -> @HAS_SIZE a1 (x2 y5) y3) -> (forall y5 : type1413 a0 a1, forall y6 : nat, (forall y7 : a0, (@IN a0 y7 y2) -> @HAS_SIZE a1 (y5 y7) y6) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y7 : prod a0 a1 => exists y8 : a0, exists y9 : a1, @SETSPEC (prod a0 a1) y7 ((@IN a0 y8 y2) /\ (@IN a1 y9 (y5 y8))) (@pair a0 a1 y8 y9))) (Nat.mul (@CARD a0 y2) y6)) -> (@IN a0 y1 y2) -> (@IN a1 y0 (x2 y1)) -> (x0 = (@pair a0 a1 y1 y0)) -> (x0 = (@pair a0 a1 x3 x1)) -> (@IN a1 x1 (x2 x3)) -> (forall y5 : a0, forall y6 : a1, forall y7 : a0, forall y8 : a1, ((@pair a0 a1 y5 y6) = (@pair a0 a1 y7 y8)) = ((y5 = y7) /\ (y6 = y8))) -> (forall y5 : a0, forall y6 : nat, forall y7 : a0, forall y8 : nat, ((@pair a0 nat y5 y6) = (@pair a0 nat y7 y8)) = ((y5 = y7) /\ (y6 = y8))) -> (forall y5 : a0, forall y6 : prod a0 a1, forall y7 : a0, forall y8 : prod a0 a1, ((@pair a0 (prod a0 a1) y5 y6) = (@pair a0 (prod a0 a1) y7 y8)) = ((y5 = y7) /\ (y6 = y8))) -> (forall y5 : nat, forall y6 : a1, forall y7 : nat, forall y8 : a1, ((@pair nat a1 y5 y6) = (@pair nat a1 y7 y8)) = ((y5 = y7) /\ (y6 = y8))) -> (forall y5 : prod a0 a1, forall y6 : a1, forall y7 : prod a0 a1, forall y8 : a1, ((@pair (prod a0 a1) a1 y5 y6) = (@pair (prod a0 a1) a1 y7 y8)) = ((y5 = y7) /\ (y6 = y8))) -> False.
Definition term1079 (a0 : Type') (a1 : Type') (x0 : a0) := forall y0 : a1, forall y1 : a0, forall y2 : a1, ((@pair a0 a1 x0 y0) = (@pair a0 a1 y1 y2)) = ((x0 = y1) /\ (y0 = y2)).
Definition term298 (a0 : Type') (a1 : Type') (x0 : a1) (x1 : a1 -> Prop) (x2 : type1470 a0 a1) (x3 : prod a1 a0) (x4 : a1) := fun y0 : a0 => (fun y1 : a0 => (((x4 = x0) \/ (x1 x4)) /\ (x2 x4 y1)) /\ (x3 = (@pair a1 a0 x4 y1))) y0.
Definition term241 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : type1470 a0 a1) (x2 : prod a1 a0) (x3 : a1) := ~ (exists y0 : a0, ((x0 x3) /\ (x1 x3 y0)) /\ (x2 = (@pair a1 a0 x3 y0))).
Definition term220 (a0 : Type') (a1 : Type') (x0 : a1) (x1 : a1 -> Prop) (x2 : type1470 a0 a1) (x3 : prod a1 a0) (x4 : a1) := ~ (exists y0 : a0, (((x4 = x0) \/ (x1 x4)) /\ (x2 x4 y0)) /\ (x3 = (@pair a1 a0 x4 y0))).
Definition term1839 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : a0 -> Prop) := fun y0 : type471 a0 a1 => forall y1 : type1413 a0 a1, (fun y2 : type1413 a0 a1 => fun y3 : nat -> a0 => forall y4 : nat, ((@IN a0 (y3 y4) x1) /\ (~ (@HAS_SIZE a1 (y2 (y3 y4)) y4))) \/ (@HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (x0 x1 y2)) (Nat.mul (@CARD a0 x1) y4))) y1 (y0 y1).
Definition term1723 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : type619 a0 a1) := fun y0 : type620 a0 a1 => forall y1 : a0 -> Prop, (fun y2 : a0 -> Prop => fun y3 : type465 a0 a1 => forall y4 : type1413 a0 a1, forall y5 : prod a0 a1, (~ (x0 y2 y4 y5)) \/ (@SETSPEC (prod a0 a1) y5 ((@IN a0 (x1 y2 y4 y5) y2) /\ (@IN a1 (y3 y4 y5) (y4 (x1 y2 y4 y5)))) (@pair a0 a1 (x1 y2 y4 y5) (y3 y4 y5)))) y1 (y0 y1).
Definition term1698 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) := fun y0 : type619 a0 a1 => forall y1 : a0 -> Prop, (fun y2 : a0 -> Prop => fun y3 : type464 a0 a1 => exists y4 : type465 a0 a1, forall y5 : type1413 a0 a1, forall y6 : prod a0 a1, (~ (x0 y2 y5 y6)) \/ (@SETSPEC (prod a0 a1) y6 ((@IN a0 (y3 y5 y6) y2) /\ (@IN a1 (y4 y5 y6) (y5 (y3 y5 y6)))) (@pair a0 a1 (y3 y5 y6) (y4 y5 y6)))) y1 (y0 y1).
Definition term1671 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : a0 -> Prop) (x2 : type464 a0 a1) := fun y0 : type465 a0 a1 => forall y1 : type1413 a0 a1, (fun y2 : type1413 a0 a1 => fun y3 : type1208 a0 a1 => forall y4 : prod a0 a1, (~ (x0 x1 y2 y4)) \/ (@SETSPEC (prod a0 a1) y4 ((@IN a0 (x2 y2 y4) x1) /\ (@IN a1 (y3 y4) (y2 (x2 y2 y4)))) (@pair a0 a1 (x2 y2 y4) (y3 y4)))) y1 (y0 y1).
Definition term1646 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : a0 -> Prop) := fun y0 : type464 a0 a1 => forall y1 : type1413 a0 a1, (fun y2 : type1413 a0 a1 => fun y3 : type1207 a0 a1 => exists y4 : type1208 a0 a1, forall y5 : prod a0 a1, (~ (x0 x1 y2 y5)) \/ (@SETSPEC (prod a0 a1) y5 ((@IN a0 (y3 y5) x1) /\ (@IN a1 (y4 y5) (y2 (y3 y5)))) (@pair a0 a1 (y3 y5) (y4 y5)))) y1 (y0 y1).
Definition term567 (a0 : Type') (x0 : type686 a0) := forall y0 : a0 -> Prop, (@FINITE a0 y0) -> x0 y0.
Definition term1841 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : a0 -> Prop) := exists y0 : type471 a0 a1, forall y1 : type1413 a0 a1, forall y2 : nat, ((@IN a0 (y0 y1 y2) x1) /\ (~ (@HAS_SIZE a1 (y1 (y0 y1 y2)) y2))) \/ (@HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (x0 x1 y1)) (Nat.mul (@CARD a0 x1) y2)).
Definition term1725 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : type619 a0 a1) := exists y0 : type620 a0 a1, forall y1 : a0 -> Prop, forall y2 : type1413 a0 a1, forall y3 : prod a0 a1, (~ (x0 y1 y2 y3)) \/ (@SETSPEC (prod a0 a1) y3 ((@IN a0 (x1 y1 y2 y3) y1) /\ (@IN a1 (y0 y1 y2 y3) (y2 (x1 y1 y2 y3)))) (@pair a0 a1 (x1 y1 y2 y3) (y0 y1 y2 y3))).
Definition term1700 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) := exists y0 : type619 a0 a1, forall y1 : a0 -> Prop, exists y2 : type465 a0 a1, forall y3 : type1413 a0 a1, forall y4 : prod a0 a1, (~ (x0 y1 y3 y4)) \/ (@SETSPEC (prod a0 a1) y4 ((@IN a0 (y0 y1 y3 y4) y1) /\ (@IN a1 (y2 y3 y4) (y3 (y0 y1 y3 y4)))) (@pair a0 a1 (y0 y1 y3 y4) (y2 y3 y4))).
Definition term1693 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : type619 a0 a1) (x2 : a0 -> Prop) := exists y0 : type465 a0 a1, forall y1 : type1413 a0 a1, forall y2 : prod a0 a1, (~ (x0 x2 y1 y2)) \/ (@SETSPEC (prod a0 a1) y2 ((@IN a0 (x1 x2 y1 y2) x2) /\ (@IN a1 (y0 y1 y2) (y1 (x1 x2 y1 y2)))) (@pair a0 a1 (x1 x2 y1 y2) (y0 y1 y2))).
Definition term1673 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : a0 -> Prop) (x2 : type464 a0 a1) := exists y0 : type465 a0 a1, forall y1 : type1413 a0 a1, forall y2 : prod a0 a1, (~ (x0 x1 y1 y2)) \/ (@SETSPEC (prod a0 a1) y2 ((@IN a0 (x2 y1 y2) x1) /\ (@IN a1 (y0 y1 y2) (y1 (x2 y1 y2)))) (@pair a0 a1 (x2 y1 y2) (y0 y1 y2))).
Definition term1648 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : a0 -> Prop) := exists y0 : type464 a0 a1, forall y1 : type1413 a0 a1, exists y2 : type1208 a0 a1, forall y3 : prod a0 a1, (~ (x0 x1 y1 y3)) \/ (@SETSPEC (prod a0 a1) y3 ((@IN a0 (y0 y1 y3) x1) /\ (@IN a1 (y2 y3) (y1 (y0 y1 y3)))) (@pair a0 a1 (y0 y1 y3) (y2 y3))).
Definition term1596 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : a0 -> Prop) (x2 : type1413 a0 a1) := exists y0 : type1207 a0 a1, forall y1 : prod a0 a1, exists y2 : a1, (~ (x0 x1 x2 y1)) \/ (@SETSPEC (prod a0 a1) y1 ((@IN a0 (y0 y1) x1) /\ (@IN a1 y2 (x2 (y0 y1)))) (@pair a0 a1 (y0 y1) y2)).
Definition term1592 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : a0 -> Prop) (x2 : type1413 a0 a1) (x3 : type1207 a0 a1) := forall y0 : prod a0 a1, (fun y1 : prod a0 a1 => fun y2 : a0 => exists y3 : a1, (~ (x0 x1 x2 y1)) \/ (@SETSPEC (prod a0 a1) y1 ((@IN a0 y2 x1) /\ (@IN a1 y3 (x2 y2))) (@pair a0 a1 y2 y3))) y0 (x3 y0).
Definition term237 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : type1470 a0 a1) (x2 : a1) (x3 : a0) := or ((~ (x0 x2)) \/ (~ (x1 x2 x3))).
Definition term1979 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a1) := forall y0 : a0, forall y1 : a1, ((~ ((@I (a1 -> prod a0 a1) (@I (a0 -> a1 -> prod a0 a1) (@pair a0 a1) x0) x1) = (@I (a1 -> prod a0 a1) (@I (a0 -> a1 -> prod a0 a1) (@pair a0 a1) y0) y1))) \/ (x0 = y0)) /\ ((~ ((@I (a1 -> prod a0 a1) (@I (a0 -> a1 -> prod a0 a1) (@pair a0 a1) x0) x1) = (@I (a1 -> prod a0 a1) (@I (a0 -> a1 -> prod a0 a1) (@pair a0 a1) y0) y1))) \/ (x1 = y1)).
Definition term1968 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a1) := forall y0 : a0, forall y1 : a1, ((@I (a1 -> prod a0 a1) (@I (a0 -> a1 -> prod a0 a1) (@pair a0 a1) x0) x1) = (@I (a1 -> prod a0 a1) (@I (a0 -> a1 -> prod a0 a1) (@pair a0 a1) y0) y1)) \/ ((~ (x0 = y0)) \/ (~ (x1 = y1))).
Definition term1958 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a1) := forall y0 : a0, forall y1 : a1, (~ ((@I (a1 -> prod a0 a1) (@I (a0 -> a1 -> prod a0 a1) (@pair a0 a1) x0) x1) = (@I (a1 -> prod a0 a1) (@I (a0 -> a1 -> prod a0 a1) (@pair a0 a1) y0) y1))) \/ ((x0 = y0) /\ (x1 = y1)).
Definition term1900 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a1) := forall y0 : a0, forall y1 : a1, (~ ((@pair a0 a1 x0 x1) = (@pair a0 a1 y0 y1))) \/ ((x0 = y0) /\ (x1 = y1)).
Definition term1895 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a1) := forall y0 : a0, forall y1 : a1, ((@pair a0 a1 x0 x1) = (@pair a0 a1 y0 y1)) \/ ((~ (x0 = y0)) \/ (~ (x1 = y1))).
Definition term1855 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a1) := forall y0 : a0, forall y1 : a1, (((@pair a0 a1 x0 x1) = (@pair a0 a1 y0 y1)) \/ ((~ (x0 = y0)) \/ (~ (x1 = y1)))) /\ ((~ ((@pair a0 a1 x0 x1) = (@pair a0 a1 y0 y1))) \/ ((x0 = y0) /\ (x1 = y1))).
Definition term1081 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a1) := forall y0 : a0, forall y1 : a1, ((@pair a0 a1 x0 x1) = (@pair a0 a1 y0 y1)) = ((x0 = y0) /\ (x1 = y1)).
Definition term818 (a0 : Type') (x0 : Prop) (x1 : a0) (x2 : a0) (x3 : Prop) := forall y0 : a0, forall y1 : a0, (x0 = x3) -> (x3 -> x1 = y0) -> ((~ x3) -> x2 = y1) -> (@COND a0 x0 x1 x2) = (@COND a0 x3 y0 y1).
Definition term19 (a0 : Type') (x0 : type919 a0) (x1 : a0) := x0 (fun y0 : Prop => fun y1 : a0 => y0 /\ (x1 = y1)).
Definition term1121 (a0 : Type') (a1 : Type') (x0 : type1478 a0 a1) (x1 : a1) := (fun y0 : a1 => x0 y0) x1.
Definition term750 (a0 : Type') (a1 : Type') (x0 : type1413 a0 a1) (x1 : a0) (x2 : nat) := (False -> (@HAS_SIZE a1 (x0 x1) x2) = (@HAS_SIZE a1 (x0 x1) x2)) -> ((@IN a0 x1 (@EMPTY a0)) -> @HAS_SIZE a1 (x0 x1) x2) = (False -> @HAS_SIZE a1 (x0 x1) x2).
Definition term831 (a0 : Type') (x0 : a0 -> Prop) := False -> (@CARD a0 x0) = (@CARD a0 x0).
Definition term377 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : a1) (x2 : prod a1 a0) (x3 : type1470 a0 a1) (x4 : a1) := fun y0 : a0 => (forall y1 : a1, forall y2 : a0, (((~ (y1 = x4)) /\ (~ (x0 y1))) \/ (~ (x3 y1 y2))) \/ (~ (x2 = (@pair a1 a0 y1 y2)))) /\ ((((x0 x1) /\ (x3 x1 y0)) /\ (x2 = (@pair a1 a0 x1 y0))) \/ ((x2 = (@pair a1 a0 x4 y0)) /\ (x3 x4 y0))).
Definition term942 (a0 : Type') (a1 : Type') (x0 : prod a0 a1) := fun y0 : Prop => fun y1 : prod a0 a1 => y0 /\ (x0 = y1).
Definition term805 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a0 -> Prop) (x2 : Prop) (x3 : Prop) := (((forall y0 : nat, ((@CARD a0 x1) = y0) -> forall y1 : type1413 a0 a1, forall y2 : nat, (forall y3 : a0, (@IN a0 y3 x1) -> @HAS_SIZE a1 (y1 y3) y2) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y3 : prod a0 a1 => exists y4 : a0, exists y5 : a1, @SETSPEC (prod a0 a1) y3 ((@IN a0 y4 x1) /\ (@IN a1 y5 (y1 y4))) (@pair a0 a1 y4 y5))) (Nat.mul y0 y2)) /\ ((~ (@IN a0 x0 x1)) /\ (@FINITE a0 x1))) = x2) -> (x2 -> (forall y0 : nat, ((@CARD a0 (@INSERT a0 x0 x1)) = y0) -> forall y1 : type1413 a0 a1, forall y2 : nat, (forall y3 : a0, (@IN a0 y3 (@INSERT a0 x0 x1)) -> @HAS_SIZE a1 (y1 y3) y2) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y3 : prod a0 a1 => exists y4 : a0, exists y5 : a1, @SETSPEC (prod a0 a1) y3 ((@IN a0 y4 (@INSERT a0 x0 x1)) /\ (@IN a1 y5 (y1 y4))) (@pair a0 a1 y4 y5))) (Nat.mul y0 y2)) = x3) -> (((forall y0 : nat, ((@CARD a0 x1) = y0) -> forall y1 : type1413 a0 a1, forall y2 : nat, (forall y3 : a0, (@IN a0 y3 x1) -> @HAS_SIZE a1 (y1 y3) y2) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y3 : prod a0 a1 => exists y4 : a0, exists y5 : a1, @SETSPEC (prod a0 a1) y3 ((@IN a0 y4 x1) /\ (@IN a1 y5 (y1 y4))) (@pair a0 a1 y4 y5))) (Nat.mul y0 y2)) /\ ((~ (@IN a0 x0 x1)) /\ (@FINITE a0 x1))) -> forall y0 : nat, ((@CARD a0 (@INSERT a0 x0 x1)) = y0) -> forall y1 : type1413 a0 a1, forall y2 : nat, (forall y3 : a0, (@IN a0 y3 (@INSERT a0 x0 x1)) -> @HAS_SIZE a1 (y1 y3) y2) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y3 : prod a0 a1 => exists y4 : a0, exists y5 : a1, @SETSPEC (prod a0 a1) y3 ((@IN a0 y4 (@INSERT a0 x0 x1)) /\ (@IN a1 y5 (y1 y4))) (@pair a0 a1 y4 y5))) (Nat.mul y0 y2)) = (x2 -> x3).
Definition term1867 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a0) (x2 : a1) (x3 : a1) := ((fun y0 : a1 => ((@pair a0 a1 x0 x2) = (@pair a0 a1 x1 y0)) \/ ((~ (x0 = x1)) \/ (~ (x2 = y0)))) x3) /\ ((fun y0 : a1 => (~ ((@pair a0 a1 x0 x2) = (@pair a0 a1 x1 y0))) \/ ((x0 = x1) /\ (x2 = y0))) x3).
Definition term1849 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a0) (x2 : a1) (x3 : a1) := and (((@pair a0 a1 x0 x2) = (@pair a0 a1 x1 x3)) \/ ((~ (x0 = x1)) \/ (~ (x2 = x3)))).
Definition term1966 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a0) (x2 : a1) := forall y0 : a1, ((@I (a1 -> prod a0 a1) (@I (a0 -> a1 -> prod a0 a1) (@pair a0 a1) x0) x2) = (@I (a1 -> prod a0 a1) (@I (a0 -> a1 -> prod a0 a1) (@pair a0 a1) x1) y0)) \/ ((~ (x0 = x1)) \/ (~ (x2 = y0))).
Definition term1873 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a0) (x2 : a1) := forall y0 : a1, ((@pair a0 a1 x0 x2) = (@pair a0 a1 x1 y0)) \/ ((~ (x0 = x1)) \/ (~ (x2 = y0))).
Definition term832 (a0 : Type') (x0 : a0) (x1 : a0 -> Prop) (x2 : nat) := (False -> (@CARD a0 x1) = (@CARD a0 x1)) -> ((~ False) -> (S (@CARD a0 x1)) = x2) -> (@COND nat (@IN a0 x0 x1) (@CARD a0 x1) (S (@CARD a0 x1))) = (@COND nat False (@CARD a0 x1) x2).
Definition term654 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : nat) := fun y0 : type1413 a0 a1 => (fun y1 : type1413 a0 a1 => ((@CARD a0 x0) = x1) -> forall y2 : nat, (forall y3 : a0, (@IN a0 y3 x0) -> @HAS_SIZE a1 (y1 y3) y2) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y3 : prod a0 a1 => exists y4 : a0, exists y5 : a1, @SETSPEC (prod a0 a1) y3 ((@IN a0 y4 x0) /\ (@IN a1 y5 (y1 y4))) (@pair a0 a1 y4 y5))) (Nat.mul x1 y2)) y0.
Definition term1655 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : a0 -> Prop) (x2 : type464 a0 a1) (x3 : type1413 a0 a1) := fun y0 : type1208 a0 a1 => forall y1 : prod a0 a1, (~ (x0 x1 x3 y1)) \/ (@SETSPEC (prod a0 a1) y1 ((@IN a0 (x2 x3 y1) x1) /\ (@IN a1 (y0 y1) (x3 (x2 x3 y1)))) (@pair a0 a1 (x2 x3 y1) (y0 y1))).
Definition term1620 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : a0 -> Prop) (x2 : type1413 a0 a1) (x3 : type1207 a0 a1) := fun y0 : type1208 a0 a1 => forall y1 : prod a0 a1, (~ (x0 x1 x2 y1)) \/ (@SETSPEC (prod a0 a1) y1 ((@IN a0 (x3 y1) x1) /\ (@IN a1 (y0 y1) (x2 (x3 y1)))) (@pair a0 a1 (x3 y1) (y0 y1))).
Definition term489 (a0 : Type') (x0 : a0) := (~ (x0 = x0)) -> x0 = x0.
Definition term1587 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : a0 -> Prop) (x2 : type1413 a0 a1) (x3 : type1207 a0 a1) (x4 : prod a0 a1) := (fun y0 : prod a0 a1 => fun y1 : a0 => exists y2 : a1, (~ (x0 x1 x2 y0)) \/ (@SETSPEC (prod a0 a1) y0 ((@IN a0 y1 x1) /\ (@IN a1 y2 (x2 y1))) (@pair a0 a1 y1 y2))) x4 (x3 x4).
Definition term401 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : a1) (x2 : prod a1 a0) (x3 : type1470 a0 a1) (x4 : a1) := exists y0 : a0, ((fun y1 : a0 => ((((x1 = x4) \/ (x0 x1)) /\ (x3 x1 y1)) /\ (x2 = (@pair a1 a0 x1 y1))) /\ ((forall y2 : a1, forall y3 : a0, ((~ (x0 y2)) \/ (~ (x3 y2 y3))) \/ (~ (x2 = (@pair a1 a0 y2 y3)))) /\ (forall y2 : a0, (~ (x2 = (@pair a1 a0 x4 y2))) \/ (~ (x3 x4 y2))))) y0) \/ ((fun y1 : a0 => (forall y2 : a1, forall y3 : a0, (((~ (y2 = x4)) /\ (~ (x0 y2))) \/ (~ (x3 y2 y3))) \/ (~ (x2 = (@pair a1 a0 y2 y3)))) /\ ((((x0 x1) /\ (x3 x1 y1)) /\ (x2 = (@pair a1 a0 x1 y1))) \/ ((x2 = (@pair a1 a0 x4 y1)) /\ (x3 x4 y1)))) y0).
Definition term332 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : a1) (x2 : prod a1 a0) (x3 : type1470 a0 a1) (x4 : a1) := exists y0 : a0, ((fun y1 : a0 => ((x0 x1) /\ (x3 x1 y1)) /\ (x2 = (@pair a1 a0 x1 y1))) y0) \/ ((fun y1 : a0 => (x2 = (@pair a1 a0 x4 y1)) /\ (x3 x4 y1)) y0).
Definition term2080 (a0 : Type') (x0 : a0 -> Prop) (x1 : type686 a0) (x2 : type686 a0) (x3 : a0 -> Prop) := (~ (x3 = x0)) \/ ((~ (x2 = x1)) \/ (~ (@I ((a0 -> Prop) -> Prop) x2 x3))).
Definition term134 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : a0) (x2 : type1470 a0 a1) (x3 : a1) (x4 : prod a1 a0) := fun y0 : prod a1 a0 => ((@IN a1 x3 x0) /\ (@IN a0 x1 (x2 x3))) /\ (x4 = y0).
Definition term1065 (a0 : Type') (x0 : a0 -> Prop) (x1 : nat) := Nat.mul (S (@CARD a0 x0)) x1.
Definition term1331 (a0 : Type') (x0 : a0) (x1 : a0) (x2 : nat) := fun y0 : nat => ((@pair a0 nat x0 x2) = (@pair a0 nat x1 y0)) = ((x0 = x1) /\ (x2 = y0)).
Definition term1606 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : a0 -> Prop) (x2 : type1413 a0 a1) (x3 : type1207 a0 a1) (x4 : prod a0 a1) (x5 : a1) := (~ (x0 x1 x2 x4)) \/ (@SETSPEC (prod a0 a1) x4 ((@IN a0 (x3 x4) x1) /\ (@IN a1 x5 (x2 (x3 x4)))) (@pair a0 a1 (x3 x4) x5)).
Definition term1474 (a0 : Type') (a1 : Type') (x0 : type1210 a0 a1) (x1 : type1210 a0 a1) := (forall y0 : prod a0 a1, x0 y0) /\ (forall y0 : prod a0 a1, x1 y0).
Definition term519 (x0 : Prop) (x1 : Prop) := (True -> x1) /\ (x0 -> x1).
Definition term504 (a0 : Type') (x0 : a0 -> Prop) := forall y0 : Prop, (forall y1 : a0, (x0 y1) -> y0) = ((exists y1 : a0, x0 y1) -> y0).
Definition term1135 (a0 : Type') (a1 : Type') (x0 : type1413 a0 a1) (x1 : a0) (x2 : a1) (x3 : a1) (x4 : Prop) := (((@IN a1 x2 (x0 x1)) /\ ((@IN a1 x3 (x0 x1)) /\ (((fun y0 : a1 => @pair a0 a1 x1 y0) x2) = ((fun y0 : a1 => @pair a0 a1 x1 y0) x3)))) = ((@IN a1 x2 (x0 x1)) /\ ((@IN a1 x3 (x0 x1)) /\ (x2 = x3)))) -> (((@IN a1 x2 (x0 x1)) /\ ((@IN a1 x3 (x0 x1)) /\ (x2 = x3))) -> (x2 = x3) = x4) -> (((@IN a1 x2 (x0 x1)) /\ ((@IN a1 x3 (x0 x1)) /\ (((fun y0 : a1 => @pair a0 a1 x1 y0) x2) = ((fun y0 : a1 => @pair a0 a1 x1 y0) x3)))) -> x2 = x3) = (((@IN a1 x2 (x0 x1)) /\ ((@IN a1 x3 (x0 x1)) /\ (x2 = x3))) -> x4).
Definition term1144 (a0 : Type') (a1 : Type') (x0 : type1413 a0 a1) (x1 : a0) := forall y0 : a1, forall y1 : a1, ((@IN a1 y0 (x0 x1)) /\ ((@IN a1 y1 (x0 x1)) /\ (((fun y2 : a1 => @pair a0 a1 x1 y2) y0) = ((fun y2 : a1 => @pair a0 a1 x1 y2) y1)))) -> y0 = y1.
Definition term430 (a0 : Type') (a1 : Type') (x0 : a1) (x1 : a1 -> Prop) (x2 : type1470 a0 a1) (x3 : prod a1 a0) := forall y0 : a1, forall y1 : a0, (((~ (y0 = x0)) \/ (~ (x2 y0 y1))) \/ (~ (x3 = (@pair a1 a0 y0 y1)))) /\ (((~ (x1 y0)) \/ (~ (x2 y0 y1))) \/ (~ (x3 = (@pair a1 a0 y0 y1)))).
Definition term254 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : type1470 a0 a1) (x2 : prod a1 a0) := forall y0 : a1, forall y1 : a0, ((~ (x0 y0)) \/ (~ (x1 y0 y1))) \/ (~ (x2 = (@pair a1 a0 y0 y1))).
Definition term233 (a0 : Type') (a1 : Type') (x0 : a1) (x1 : a1 -> Prop) (x2 : type1470 a0 a1) (x3 : prod a1 a0) := forall y0 : a1, forall y1 : a0, (((~ (y0 = x0)) /\ (~ (x1 y0))) \/ (~ (x2 y0 y1))) \/ (~ (x3 = (@pair a1 a0 y0 y1))).
Definition term576 (a0 : Type') (x0 : a0 -> Prop) := forall y0 : nat, (@HAS_SIZE a0 x0 y0) = ((@FINITE a0 x0) /\ ((@CARD a0 x0) = y0)).
Definition term1728 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) := (forall y0 : a0 -> Prop, forall y1 : type1413 a0 a1, forall y2 : prod a0 a1, (x0 y0 y1 y2) \/ (forall y3 : a0, forall y4 : a1, ~ (@SETSPEC (prod a0 a1) y2 ((@IN a0 y3 y0) /\ (@IN a1 y4 (y1 y3))) (@pair a0 a1 y3 y4)))) /\ (exists y0 : type619 a0 a1, exists y1 : type620 a0 a1, forall y2 : a0 -> Prop, forall y3 : type1413 a0 a1, forall y4 : prod a0 a1, (~ (x0 y2 y3 y4)) \/ (@SETSPEC (prod a0 a1) y4 ((@IN a0 (y0 y2 y3 y4) y2) /\ (@IN a1 (y1 y2 y3 y4) (y3 (y0 y2 y3 y4)))) (@pair a0 a1 (y0 y2 y3 y4) (y1 y2 y3 y4)))).
Definition term1374 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : a0) := fun y0 : type1413 a0 a1 => forall y1 : a1, forall y2 : prod a0 a1, forall y3 : a1, forall y4 : a0, forall y5 : a0 -> Prop, forall y6 : nat, forall y7 : nat, (~ (@IN a0 x1 y5)) -> (@FINITE a0 y5) -> (y7 = (S (@CARD a0 y5))) -> (@HAS_SIZE a1 (y0 x1) y6) -> (forall y8 : a0, (@IN a0 y8 y5) -> @HAS_SIZE a1 (y0 y8) y6) -> (forall y8 : type1413 a0 a1, forall y9 : nat, (forall y10 : a0, (@IN a0 y10 y5) -> @HAS_SIZE a1 (y8 y10) y9) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (x0 y5 y8)) (Nat.mul (@CARD a0 y5) y9)) -> (@IN a0 y4 y5) -> (@IN a1 y3 (y0 y4)) -> (y2 = (@pair a0 a1 y4 y3)) -> (y2 = (@pair a0 a1 x1 y1)) -> (@IN a1 y1 (y0 x1)) -> (forall y8 : a0, forall y9 : a1, forall y10 : a0, forall y11 : a1, ((@pair a0 a1 y8 y9) = (@pair a0 a1 y10 y11)) = ((y8 = y10) /\ (y9 = y11))) -> (forall y8 : a0, forall y9 : nat, forall y10 : a0, forall y11 : nat, ((@pair a0 nat y8 y9) = (@pair a0 nat y10 y11)) = ((y8 = y10) /\ (y9 = y11))) -> (forall y8 : a0, forall y9 : prod a0 a1, forall y10 : a0, forall y11 : prod a0 a1, ((@pair a0 (prod a0 a1) y8 y9) = (@pair a0 (prod a0 a1) y10 y11)) = ((y8 = y10) /\ (y9 = y11))) -> (forall y8 : nat, forall y9 : a1, forall y10 : nat, forall y11 : a1, ((@pair nat a1 y8 y9) = (@pair nat a1 y10 y11)) = ((y8 = y10) /\ (y9 = y11))) -> ~ (forall y8 : prod a0 a1, forall y9 : a1, forall y10 : prod a0 a1, forall y11 : a1, ((@pair (prod a0 a1) a1 y8 y9) = (@pair (prod a0 a1) a1 y10 y11)) = ((y8 = y10) /\ (y9 = y11))).
Definition term1293 (a0 : Type') (a1 : Type') (x0 : a0) := fun y0 : type1413 a0 a1 => forall y1 : a1, forall y2 : prod a0 a1, forall y3 : a1, forall y4 : a0, forall y5 : a0 -> Prop, forall y6 : nat, forall y7 : nat, (~ (@IN a0 x0 y5)) -> (@FINITE a0 y5) -> (y7 = (S (@CARD a0 y5))) -> (@HAS_SIZE a1 (y0 x0) y6) -> (forall y8 : a0, (@IN a0 y8 y5) -> @HAS_SIZE a1 (y0 y8) y6) -> (forall y8 : type1413 a0 a1, forall y9 : nat, (forall y10 : a0, (@IN a0 y10 y5) -> @HAS_SIZE a1 (y8 y10) y9) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y10 : prod a0 a1 => exists y11 : a0, exists y12 : a1, @SETSPEC (prod a0 a1) y10 ((@IN a0 y11 y5) /\ (@IN a1 y12 (y8 y11))) (@pair a0 a1 y11 y12))) (Nat.mul (@CARD a0 y5) y9)) -> (@IN a0 y4 y5) -> (@IN a1 y3 (y0 y4)) -> (y2 = (@pair a0 a1 y4 y3)) -> (y2 = (@pair a0 a1 x0 y1)) -> (@IN a1 y1 (y0 x0)) -> (forall y8 : a0, forall y9 : a1, forall y10 : a0, forall y11 : a1, ((@pair a0 a1 y8 y9) = (@pair a0 a1 y10 y11)) = ((y8 = y10) /\ (y9 = y11))) -> (forall y8 : a0, forall y9 : nat, forall y10 : a0, forall y11 : nat, ((@pair a0 nat y8 y9) = (@pair a0 nat y10 y11)) = ((y8 = y10) /\ (y9 = y11))) -> (forall y8 : a0, forall y9 : prod a0 a1, forall y10 : a0, forall y11 : prod a0 a1, ((@pair a0 (prod a0 a1) y8 y9) = (@pair a0 (prod a0 a1) y10 y11)) = ((y8 = y10) /\ (y9 = y11))) -> (forall y8 : nat, forall y9 : a1, forall y10 : nat, forall y11 : a1, ((@pair nat a1 y8 y9) = (@pair nat a1 y10 y11)) = ((y8 = y10) /\ (y9 = y11))) -> ~ (forall y8 : prod a0 a1, forall y9 : a1, forall y10 : prod a0 a1, forall y11 : a1, ((@pair (prod a0 a1) a1 y8 y9) = (@pair (prod a0 a1) a1 y10 y11)) = ((y8 = y10) /\ (y9 = y11))).
Definition term1292 (a0 : Type') (a1 : Type') (x0 : a0) := fun y0 : type1413 a0 a1 => forall y1 : a1, forall y2 : prod a0 a1, forall y3 : a1, forall y4 : a0, forall y5 : a0 -> Prop, forall y6 : nat, forall y7 : nat, (~ (@IN a0 x0 y5)) -> (@FINITE a0 y5) -> (y7 = (S (@CARD a0 y5))) -> (@HAS_SIZE a1 (y0 x0) y6) -> (forall y8 : a0, (@IN a0 y8 y5) -> @HAS_SIZE a1 (y0 y8) y6) -> (forall y8 : type1413 a0 a1, forall y9 : nat, (forall y10 : a0, (@IN a0 y10 y5) -> @HAS_SIZE a1 (y8 y10) y9) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y10 : prod a0 a1 => exists y11 : a0, exists y12 : a1, @SETSPEC (prod a0 a1) y10 ((@IN a0 y11 y5) /\ (@IN a1 y12 (y8 y11))) (@pair a0 a1 y11 y12))) (Nat.mul (@CARD a0 y5) y9)) -> (@IN a0 y4 y5) -> (@IN a1 y3 (y0 y4)) -> (y2 = (@pair a0 a1 y4 y3)) -> (y2 = (@pair a0 a1 x0 y1)) -> (@IN a1 y1 (y0 x0)) -> (forall y8 : a0, forall y9 : a1, forall y10 : a0, forall y11 : a1, ((@pair a0 a1 y8 y9) = (@pair a0 a1 y10 y11)) = ((y8 = y10) /\ (y9 = y11))) -> (forall y8 : a0, forall y9 : nat, forall y10 : a0, forall y11 : nat, ((@pair a0 nat y8 y9) = (@pair a0 nat y10 y11)) = ((y8 = y10) /\ (y9 = y11))) -> (forall y8 : a0, forall y9 : prod a0 a1, forall y10 : a0, forall y11 : prod a0 a1, ((@pair a0 (prod a0 a1) y8 y9) = (@pair a0 (prod a0 a1) y10 y11)) = ((y8 = y10) /\ (y9 = y11))) -> (forall y8 : nat, forall y9 : a1, forall y10 : nat, forall y11 : a1, ((@pair nat a1 y8 y9) = (@pair nat a1 y10 y11)) = ((y8 = y10) /\ (y9 = y11))) -> (forall y8 : prod a0 a1, forall y9 : a1, forall y10 : prod a0 a1, forall y11 : a1, ((@pair (prod a0 a1) a1 y8 y9) = (@pair (prod a0 a1) a1 y10 y11)) = ((y8 = y10) /\ (y9 = y11))) -> False.
Definition term1852 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a0) (x2 : a1) := fun y0 : a1 => (((@pair a0 a1 x0 x2) = (@pair a0 a1 x1 y0)) \/ ((~ (x0 = x1)) \/ (~ (x2 = y0)))) /\ ((~ ((@pair a0 a1 x0 x2) = (@pair a0 a1 x1 y0))) \/ ((x0 = x1) /\ (x2 = y0))).
Definition term1565 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : prod a0 a1) (x2 : a0 -> Prop) (x3 : type1413 a0 a1) (x4 : a0) := fun y0 : a1 => (~ (x0 x2 x3 x1)) \/ ((fun y1 : a1 => @SETSPEC (prod a0 a1) x1 ((@IN a0 x4 x2) /\ (@IN a1 y1 (x3 x4))) (@pair a0 a1 x4 y1)) y0).
Definition term1748 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : type619 a0 a1) := fun y0 : type620 a0 a1 => (fun y1 : type620 a0 a1 => forall y2 : a0 -> Prop, forall y3 : type1413 a0 a1, forall y4 : prod a0 a1, (~ (x0 y2 y3 y4)) \/ (@SETSPEC (prod a0 a1) y4 ((@IN a0 (x1 y2 y3 y4) y2) /\ (@IN a1 (y1 y2 y3 y4) (y3 (x1 y2 y3 y4)))) (@pair a0 a1 (x1 y2 y3 y4) (y1 y2 y3 y4)))) y0.
Definition term2086 (a0 : Type') (x0 : type686 a0) (x1 : type686 a0) (x2 : a0 -> Prop) := ~ ((~ (x1 = x0)) \/ (~ (@I ((a0 -> Prop) -> Prop) x1 x2))).
Definition term2058 (a0 : Type') (x0 : type686 a0) (x1 : type686 a0) (x2 : type686 a0) := ~ ((~ (x1 = x0)) \/ (~ (x1 = x2))).
Definition term2032 (a0 : Type') (x0 : a0) (x1 : a0) (x2 : type1364 a0) (x3 : type1364 a0) := ~ ((~ (x0 = x1)) \/ (~ (x2 = x3))).
Definition term1808 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : type1413 a0 a1) (x2 : a0 -> Prop) (x3 : nat -> a0) (x4 : nat) := (fun y0 : a0 => ((@IN a0 y0 x2) /\ (~ (@HAS_SIZE a1 (x1 y0) x4))) \/ (@HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (x0 x2 x1)) (Nat.mul (@CARD a0 x2) x4))) (x3 x4).
Definition term1780 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : type1413 a0 a1) (x2 : nat) := fun y0 : a0 => (fun y1 : a0 => (@IN a0 y1 x0) /\ (~ (@HAS_SIZE a1 (x1 y1) x2))) y0.
Definition term1657 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : a0 -> Prop) (x2 : type464 a0 a1) (x3 : type1413 a0 a1) (x4 : type1208 a0 a1) := (fun y0 : type1208 a0 a1 => forall y1 : prod a0 a1, (~ (x0 x1 x3 y1)) \/ (@SETSPEC (prod a0 a1) y1 ((@IN a0 (x2 x3 y1) x1) /\ (@IN a1 (y0 y1) (x3 (x2 x3 y1)))) (@pair a0 a1 (x2 x3 y1) (y0 y1)))) x4.
Definition term2040 (a0 : Type') (x0 : a0) (x1 : a0) (x2 : type1364 a0) (x3 : type1364 a0) := imp ((x0 = x1) /\ (x2 = x3)).
Definition term1571 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : a0 -> Prop) (x2 : type1413 a0 a1) := forall y0 : prod a0 a1, exists y1 : a0, exists y2 : a1, (~ (x0 x1 x2 y0)) \/ (@SETSPEC (prod a0 a1) y0 ((@IN a0 y1 x1) /\ (@IN a1 y2 (x2 y1))) (@pair a0 a1 y1 y2)).
Definition term507 (a0 : Type') (x0 : a0 -> Prop) (x1 : Prop) := (exists y0 : a0, x0 y0) -> x1.
Definition term2077 (a0 : Type') (x0 : type686 a0) (x1 : a0 -> Prop) (x2 : type686 a0) (x3 : a0 -> Prop) := @eq Prop ((~ (x3 = x1)) \/ ((~ (x2 = x0)) \/ ((@I ((a0 -> Prop) -> Prop) x0 x1) \/ (~ (@I ((a0 -> Prop) -> Prop) x2 x3))))).
Definition term2007 (a0 : Type') (x0 : a0 -> Prop) := (~ (x0 = x0)) -> x0 = x0.
Definition term1524 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) := (forall y0 : a0 -> Prop, (fun y1 : a0 -> Prop => forall y2 : type1413 a0 a1, forall y3 : prod a0 a1, (x0 y1 y2 y3) \/ (forall y4 : a0, forall y5 : a1, ~ (@SETSPEC (prod a0 a1) y3 ((@IN a0 y4 y1) /\ (@IN a1 y5 (y2 y4))) (@pair a0 a1 y4 y5)))) y0) /\ (forall y0 : a0 -> Prop, (fun y1 : a0 -> Prop => forall y2 : type1413 a0 a1, forall y3 : prod a0 a1, (~ (x0 y1 y2 y3)) \/ (exists y4 : a0, exists y5 : a1, @SETSPEC (prod a0 a1) y3 ((@IN a0 y4 y1) /\ (@IN a1 y5 (y2 y4))) (@pair a0 a1 y4 y5))) y0).
Definition term1500 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : a0 -> Prop) := (forall y0 : type1413 a0 a1, (fun y1 : type1413 a0 a1 => forall y2 : prod a0 a1, (x0 x1 y1 y2) \/ (forall y3 : a0, forall y4 : a1, ~ (@SETSPEC (prod a0 a1) y2 ((@IN a0 y3 x1) /\ (@IN a1 y4 (y1 y3))) (@pair a0 a1 y3 y4)))) y0) /\ (forall y0 : type1413 a0 a1, (fun y1 : type1413 a0 a1 => forall y2 : prod a0 a1, (~ (x0 x1 y1 y2)) \/ (exists y3 : a0, exists y4 : a1, @SETSPEC (prod a0 a1) y2 ((@IN a0 y3 x1) /\ (@IN a1 y4 (y1 y3))) (@pair a0 a1 y3 y4))) y0).
Definition term651 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : nat) := fun y0 : type1413 a0 a1 => (@FINITE a0 x0) -> (fun y1 : type1413 a0 a1 => ((@CARD a0 x0) = x1) -> forall y2 : nat, (forall y3 : a0, (@IN a0 y3 x0) -> @HAS_SIZE a1 (y1 y3) y2) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y3 : prod a0 a1 => exists y4 : a0, exists y5 : a1, @SETSPEC (prod a0 a1) y3 ((@IN a0 y4 x0) /\ (@IN a1 y5 (y1 y4))) (@pair a0 a1 y4 y5))) (Nat.mul x1 y2)) y0.
Definition term1417 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : a0 -> Prop) := fun y0 : type1413 a0 a1 => (x0 x1 y0) = ((fun y1 : type1413 a0 a1 => fun y2 : prod a0 a1 => exists y3 : a0, exists y4 : a1, @SETSPEC (prod a0 a1) y2 ((@IN a0 y3 x1) /\ (@IN a1 y4 (y1 y3))) (@pair a0 a1 y3 y4)) y0).
Definition term521 (x0 : Prop) (x1 : Prop) (x2 : Prop) := (x0 \/ x1) -> x2.
Definition term1317 (a0 : Type') (x0 : nat) (x1 : a0) := fun y0 : nat => forall y1 : a0, ((@pair nat a0 x0 x1) = (@pair nat a0 y0 y1)) = ((x0 = y0) /\ (x1 = y1)).
Definition term868 (a0 : Type') (a1 : Type') (x0 : prod a0 a1) (x1 : a0) (x2 : a0 -> Prop) (x3 : a1) (x4 : type1413 a0 a1) (x5 : a0) := @SETSPEC (prod a0 a1) x0 (((x5 = x1) \/ (@IN a0 x5 x2)) /\ (@IN a1 x3 (x4 x5))).
Definition term1177 (a0 : Type') (a1 : Type') (x0 : prod a0 a1) (x1 : a0 -> Prop) (x2 : type1413 a0 a1) (x3 : a0) (x4 : a1) := (fun y0 : Prop => fun y1 : prod a0 a1 => y0 /\ (x0 = y1)) ((@IN a0 x3 x1) /\ (@IN a1 x4 (x2 x3))) (@pair a0 a1 x3 x4).
Definition term1851 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a0) (x2 : a1) (x3 : a1) := (((@pair a0 a1 x0 x2) = (@pair a0 a1 x1 x3)) \/ ((~ (x0 = x1)) \/ (~ (x2 = x3)))) /\ ((~ ((@pair a0 a1 x0 x2) = (@pair a0 a1 x1 x3))) \/ ((x0 = x1) /\ (x2 = x3))).
Definition term1578 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : a0 -> Prop) (x2 : type1413 a0 a1) := fun y0 : prod a0 a1 => fun y1 : a0 => exists y2 : a1, (~ (x0 x1 x2 y0)) \/ (@SETSPEC (prod a0 a1) y0 ((@IN a0 y1 x1) /\ (@IN a1 y2 (x2 y1))) (@pair a0 a1 y1 y2)).
Definition term1425 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : a0 -> Prop) (x2 : type1413 a0 a1) := @eq Prop ((x0 x1 x2) = (fun y0 : prod a0 a1 => (fun y1 : prod a0 a1 => exists y2 : a0, exists y3 : a1, @SETSPEC (prod a0 a1) y1 ((@IN a0 y2 x1) /\ (@IN a1 y3 (x2 y2))) (@pair a0 a1 y2 y3)) y0)).
Definition term798 (a0 : Type') (a1 : Type') := fun y0 : nat => ((NUMERAL 0) = y0) -> forall y1 : nat, @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y2 : prod a0 a1 => exists y3 : a0, exists y4 : a1, @SETSPEC (prod a0 a1) y2 False (@pair a0 a1 y3 y4))) (Nat.mul y0 y1).
Definition term1396 (a0 : Type') (a1 : Type') := fun y0 : type621 a0 a1 => (y0 = (fun y1 : a0 -> Prop => fun y2 : type1413 a0 a1 => fun y3 : prod a0 a1 => exists y4 : a0, exists y5 : a1, @SETSPEC (prod a0 a1) y3 ((@IN a0 y4 y1) /\ (@IN a1 y5 (y2 y4))) (@pair a0 a1 y4 y5))) -> forall y1 : a0, forall y2 : type1413 a0 a1, forall y3 : a1, forall y4 : prod a0 a1, forall y5 : a1, forall y6 : a0, forall y7 : a0 -> Prop, forall y8 : nat, forall y9 : nat, (~ (@IN a0 y1 y7)) -> (@FINITE a0 y7) -> (y9 = (S (@CARD a0 y7))) -> (@HAS_SIZE a1 (y2 y1) y8) -> (forall y10 : a0, (@IN a0 y10 y7) -> @HAS_SIZE a1 (y2 y10) y8) -> (forall y10 : type1413 a0 a1, forall y11 : nat, (forall y12 : a0, (@IN a0 y12 y7) -> @HAS_SIZE a1 (y10 y12) y11) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (y0 y7 y10)) (Nat.mul (@CARD a0 y7) y11)) -> (@IN a0 y6 y7) -> (@IN a1 y5 (y2 y6)) -> (y4 = (@pair a0 a1 y6 y5)) -> (y4 = (@pair a0 a1 y1 y3)) -> (@IN a1 y3 (y2 y1)) -> (forall y10 : a0, forall y11 : a1, forall y12 : a0, forall y13 : a1, ((@pair a0 a1 y10 y11) = (@pair a0 a1 y12 y13)) = ((y10 = y12) /\ (y11 = y13))) -> (forall y10 : a0, forall y11 : nat, forall y12 : a0, forall y13 : nat, ((@pair a0 nat y10 y11) = (@pair a0 nat y12 y13)) = ((y10 = y12) /\ (y11 = y13))) -> (forall y10 : a0, forall y11 : prod a0 a1, forall y12 : a0, forall y13 : prod a0 a1, ((@pair a0 (prod a0 a1) y10 y11) = (@pair a0 (prod a0 a1) y12 y13)) = ((y10 = y12) /\ (y11 = y13))) -> (forall y10 : nat, forall y11 : a1, forall y12 : nat, forall y13 : a1, ((@pair nat a1 y10 y11) = (@pair nat a1 y12 y13)) = ((y10 = y12) /\ (y11 = y13))) -> ~ (forall y10 : prod a0 a1, forall y11 : a1, forall y12 : prod a0 a1, forall y13 : a1, ((@pair (prod a0 a1) a1 y10 y11) = (@pair (prod a0 a1) a1 y12 y13)) = ((y10 = y12) /\ (y11 = y13))).
Definition term2069 (a0 : Type') (x0 : a0) (x1 : a0 -> Prop) := (~ (@I ((a0 -> Prop) -> Prop) (@I (a0 -> (a0 -> Prop) -> Prop) (@IN a0) x0) x1)) -> @I ((a0 -> Prop) -> Prop) (@I (a0 -> (a0 -> Prop) -> Prop) (@IN a0) x0) x1.
Definition term2100 (a0 : Type') (a1 : Type') (x0 : type1413 a0 a1) (x1 : a0) (x2 : a1) := (fun y0 : a1 => forall y1 : prod a0 a1, forall y2 : a1, forall y3 : a0, forall y4 : a0 -> Prop, forall y5 : nat, forall y6 : nat, (~ (@IN a0 x1 y4)) -> (@FINITE a0 y4) -> (y6 = (S (@CARD a0 y4))) -> (@HAS_SIZE a1 (x0 x1) y5) -> (forall y7 : a0, (@IN a0 y7 y4) -> @HAS_SIZE a1 (x0 y7) y5) -> (forall y7 : type1413 a0 a1, forall y8 : nat, (forall y9 : a0, (@IN a0 y9 y4) -> @HAS_SIZE a1 (y7 y9) y8) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y9 : prod a0 a1 => exists y10 : a0, exists y11 : a1, @SETSPEC (prod a0 a1) y9 ((@IN a0 y10 y4) /\ (@IN a1 y11 (y7 y10))) (@pair a0 a1 y10 y11))) (Nat.mul (@CARD a0 y4) y8)) -> (@IN a0 y3 y4) -> (@IN a1 y2 (x0 y3)) -> (y1 = (@pair a0 a1 y3 y2)) -> (y1 = (@pair a0 a1 x1 y0)) -> (@IN a1 y0 (x0 x1)) -> (forall y7 : a0, forall y8 : a1, forall y9 : a0, forall y10 : a1, ((@pair a0 a1 y7 y8) = (@pair a0 a1 y9 y10)) = ((y7 = y9) /\ (y8 = y10))) -> (forall y7 : a0, forall y8 : nat, forall y9 : a0, forall y10 : nat, ((@pair a0 nat y7 y8) = (@pair a0 nat y9 y10)) = ((y7 = y9) /\ (y8 = y10))) -> (forall y7 : a0, forall y8 : prod a0 a1, forall y9 : a0, forall y10 : prod a0 a1, ((@pair a0 (prod a0 a1) y7 y8) = (@pair a0 (prod a0 a1) y9 y10)) = ((y7 = y9) /\ (y8 = y10))) -> (forall y7 : nat, forall y8 : a1, forall y9 : nat, forall y10 : a1, ((@pair nat a1 y7 y8) = (@pair nat a1 y9 y10)) = ((y7 = y9) /\ (y8 = y10))) -> (forall y7 : prod a0 a1, forall y8 : a1, forall y9 : prod a0 a1, forall y10 : a1, ((@pair (prod a0 a1) a1 y7 y8) = (@pair (prod a0 a1) a1 y9 y10)) = ((y7 = y9) /\ (y8 = y10))) -> False) x2.
Definition term102 (a0 : Type') (a1 : Type') (x0 : a1) (x1 : a1 -> Prop) (x2 : type1470 a0 a1) (x3 : prod a1 a0) (x4 : a1) := fun y0 : a0 => (((x4 = x0) \/ (x1 x4)) /\ (x2 x4 y0)) /\ (x3 = (@pair a1 a0 x4 y0)).
Definition term290 (a0 : Type') (a1 : Type') (x0 : a1) (x1 : a1 -> Prop) (x2 : type1470 a0 a1) (x3 : prod a1 a0) (x4 : a1) := and (exists y0 : a0, (((x4 = x0) \/ (x1 x4)) /\ (x2 x4 y0)) /\ (x3 = (@pair a1 a0 x4 y0))).
Definition term2001 (a0 : Type') (x0 : type686 a0) (x1 : a0 -> Prop) (x2 : type686 a0) (x3 : a0 -> Prop) := (~ (x3 = x1)) \/ ((~ (x2 = x0)) \/ ((@I ((a0 -> Prop) -> Prop) x0 x1) \/ (~ (@I ((a0 -> Prop) -> Prop) x2 x3)))).
Definition term1717 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : type619 a0 a1) (x2 : type620 a0 a1) (x3 : a0 -> Prop) := (fun y0 : type465 a0 a1 => forall y1 : type1413 a0 a1, forall y2 : prod a0 a1, (~ (x0 x3 y1 y2)) \/ (@SETSPEC (prod a0 a1) y2 ((@IN a0 (x1 x3 y1 y2) x3) /\ (@IN a1 (y0 y1 y2) (y1 (x1 x3 y1 y2)))) (@pair a0 a1 (x1 x3 y1 y2) (y0 y1 y2)))) (x2 x3).
Definition term1232 (a0 : Type') (a1 : Type') := (forall y0 : a0, forall y1 : nat, forall y2 : a0, forall y3 : nat, ((@pair a0 nat y0 y1) = (@pair a0 nat y2 y3)) = ((y0 = y2) /\ (y1 = y3))) -> (forall y0 : a0, forall y1 : prod a0 a1, forall y2 : a0, forall y3 : prod a0 a1, ((@pair a0 (prod a0 a1) y0 y1) = (@pair a0 (prod a0 a1) y2 y3)) = ((y0 = y2) /\ (y1 = y3))) -> (forall y0 : nat, forall y1 : a1, forall y2 : nat, forall y3 : a1, ((@pair nat a1 y0 y1) = (@pair nat a1 y2 y3)) = ((y0 = y2) /\ (y1 = y3))) -> ~ (forall y0 : prod a0 a1, forall y1 : a1, forall y2 : prod a0 a1, forall y3 : a1, ((@pair (prod a0 a1) a1 y0 y1) = (@pair (prod a0 a1) a1 y2 y3)) = ((y0 = y2) /\ (y1 = y3))).
Definition term1035 (a0 : Type') (a1 : Type') (x0 : type1413 a0 a1) (x1 : a0) (x2 : nat) (x3 : Prop) := ((exists y0 : a0, y0 = x1) = True) -> (True -> (@HAS_SIZE a1 (x0 x1) x2) = x3) -> ((exists y0 : a0, y0 = x1) -> @HAS_SIZE a1 (x0 x1) x2) = (True -> x3).
Definition term757 (a0 : Type') (a1 : Type') (x0 : type1413 a0 a1) (x1 : nat) (x2 : nat) (x3 : Prop) := ((forall y0 : a0, (@IN a0 y0 (@EMPTY a0)) -> @HAS_SIZE a1 (x0 y0) x2) = True) -> (True -> (@HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y0 : prod a0 a1 => exists y1 : a0, exists y2 : a1, @SETSPEC (prod a0 a1) y0 ((@IN a0 y1 (@EMPTY a0)) /\ (@IN a1 y2 (x0 y1))) (@pair a0 a1 y1 y2))) (Nat.mul x1 x2)) = x3) -> ((forall y0 : a0, (@IN a0 y0 (@EMPTY a0)) -> @HAS_SIZE a1 (x0 y0) x2) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y0 : prod a0 a1 => exists y1 : a0, exists y2 : a1, @SETSPEC (prod a0 a1) y0 ((@IN a0 y1 (@EMPTY a0)) /\ (@IN a1 y2 (x0 y1))) (@pair a0 a1 y1 y2))) (Nat.mul x1 x2)) = (True -> x3).
Definition term1142 (a0 : Type') (a1 : Type') (x0 : type1413 a0 a1) (x1 : a0) (x2 : a1) := forall y0 : a1, ((@IN a1 x2 (x0 x1)) /\ ((@IN a1 y0 (x0 x1)) /\ (((fun y1 : a1 => @pair a0 a1 x1 y1) x2) = ((fun y1 : a1 => @pair a0 a1 x1 y1) y0)))) -> x2 = y0.
Definition term568 (a0 : Type') (x0 : type686 a0) := (forall y0 : type686 a0, ((y0 (@EMPTY a0)) /\ (forall y1 : a0, forall y2 : a0 -> Prop, ((y0 y2) /\ ((~ (@IN a0 y1 y2)) /\ (@FINITE a0 y2))) -> y0 (@INSERT a0 y1 y2))) -> forall y1 : a0 -> Prop, (@FINITE a0 y1) -> y0 y1) -> forall y0 : a0 -> Prop, (@FINITE a0 y0) -> x0 y0.
Definition term407 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : a1) (x2 : prod a1 a0) (x3 : type1470 a0 a1) (x4 : a1) := fun y0 : a0 => (fun y1 : a0 => (forall y2 : a1, forall y3 : a0, (((~ (y2 = x4)) /\ (~ (x0 y2))) \/ (~ (x3 y2 y3))) \/ (~ (x2 = (@pair a1 a0 y2 y3)))) /\ ((((x0 x1) /\ (x3 x1 y1)) /\ (x2 = (@pair a1 a0 x1 y1))) \/ ((x2 = (@pair a1 a0 x4 y1)) /\ (x3 x4 y1)))) y0.
Definition term965 (a0 : Type') (a1 : Type') := fun y0 : prod a0 a1 => (@IN (prod a0 a1) y0 (@GSPEC (prod a0 a1) (fun y1 : prod a0 a1 => exists y2 : a0, exists y3 : a1, @SETSPEC (prod a0 a1) y1 False (@pair a0 a1 y2 y3)))) = (@IN (prod a0 a1) y0 (@EMPTY (prod a0 a1))).
Definition term1771 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : type1413 a0 a1) (x2 : a0 -> Prop) (x3 : nat) := (~ (forall y0 : a0, (@IN a0 y0 x2) -> @HAS_SIZE a1 (x1 y0) x3)) \/ (@HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (x0 x2 x1)) (Nat.mul (@CARD a0 x2) x3)).
Definition term1047 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) := (fun y0 : nat => ((@CARD a0 x0) = y0) -> forall y1 : type1413 a0 a1, forall y2 : nat, (forall y3 : a0, (@IN a0 y3 x0) -> @HAS_SIZE a1 (y1 y3) y2) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y3 : prod a0 a1 => exists y4 : a0, exists y5 : a1, @SETSPEC (prod a0 a1) y3 ((@IN a0 y4 x0) /\ (@IN a1 y5 (y1 y4))) (@pair a0 a1 y4 y5))) (Nat.mul y0 y2)) (@CARD a0 x0).
Definition term1226 (a0 : Type') (a1 : Type') := (forall y0 : nat, forall y1 : a1, forall y2 : nat, forall y3 : a1, ((@pair nat a1 y0 y1) = (@pair nat a1 y2 y3)) = ((y0 = y2) /\ (y1 = y3))) -> ~ (forall y0 : prod a0 a1, forall y1 : a1, forall y2 : prod a0 a1, forall y3 : a1, ((@pair (prod a0 a1) a1 y0 y1) = (@pair (prod a0 a1) a1 y2 y3)) = ((y0 = y2) /\ (y1 = y3))).
Definition term1147 (a0 : Type') (a1 : Type') (x0 : type1413 a0 a1) (x1 : a0) (x2 : nat) := @HAS_SIZE (prod a0 a1) (@IMAGE a1 (prod a0 a1) (fun y0 : a1 => @pair a0 a1 x1 y0) (x0 x1)) x2.
Definition term402 (a0 : Type') (a1 : Type') (x0 : a1) (x1 : a1 -> Prop) (x2 : prod a1 a0) (x3 : type1470 a0 a1) (x4 : a1) (x5 : a0) := (fun y0 : a0 => ((((x0 = x4) \/ (x1 x0)) /\ (x3 x0 y0)) /\ (x2 = (@pair a1 a0 x0 y0))) /\ ((forall y1 : a1, forall y2 : a0, ((~ (x1 y1)) \/ (~ (x3 y1 y2))) \/ (~ (x2 = (@pair a1 a0 y1 y2)))) /\ (forall y1 : a0, (~ (x2 = (@pair a1 a0 x4 y1))) \/ (~ (x3 x4 y1))))) x5.
Definition term1009 (a0 : Type') (a1 : Type') (x0 : type1413 a0 a1) (x1 : a0) := @HAS_SIZE a1 (x0 x1).
Definition term1337 (a0 : Type') := fun y0 : a0 => forall y1 : nat, forall y2 : a0, forall y3 : nat, ((@pair a0 nat y0 y1) = (@pair a0 nat y2 y3)) = ((y0 = y2) /\ (y1 = y3)).
Definition term1319 (a0 : Type') (x0 : nat) := fun y0 : a0 => forall y1 : nat, forall y2 : a0, ((@pair nat a0 x0 y0) = (@pair nat a0 y1 y2)) = ((x0 = y1) /\ (y0 = y2)).
Definition term751 (a0 : Type') (a1 : Type') (x0 : type1413 a0 a1) (x1 : a0) (x2 : nat) := (@IN a0 x1 (@EMPTY a0)) -> @HAS_SIZE a1 (x0 x1) x2.
Definition term1568 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : prod a0 a1) (x2 : a0 -> Prop) (x3 : type1413 a0 a1) := fun y0 : a0 => exists y1 : a1, (~ (x0 x2 x3 x1)) \/ (@SETSPEC (prod a0 a1) x1 ((@IN a0 y0 x2) /\ (@IN a1 y1 (x3 y0))) (@pair a0 a1 y0 y1)).
Definition term865 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a0 -> Prop) (x2 : a1) (x3 : type1413 a0 a1) (x4 : a0) := (@IN a0 x4 (@INSERT a0 x0 x1)) /\ (@IN a1 x2 (x3 x4)).
Definition term796 (a0 : Type') (a1 : Type') (x0 : nat) := ((NUMERAL 0) = x0) -> forall y0 : nat, @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y1 : prod a0 a1 => exists y2 : a0, exists y3 : a1, @SETSPEC (prod a0 a1) y1 False (@pair a0 a1 y2 y3))) (Nat.mul x0 y0).
Definition term1998 (x0 : Prop) (x1 : Prop) := (~ x0) \/ x1.
Definition term2082 (a0 : Type') (x0 : a0 -> Prop) (x1 : type686 a0) (x2 : type686 a0) (x3 : a0 -> Prop) := (~ (~ (x3 = x0))) /\ (~ ((~ (x2 = x1)) \/ (~ (@I ((a0 -> Prop) -> Prop) x2 x3)))).
Definition term1905 (a0 : Type') (a1 : Type') (x0 : a0) := (forall y0 : a1, (fun y1 : a1 => forall y2 : a0, forall y3 : a1, ((@pair a0 a1 x0 y1) = (@pair a0 a1 y2 y3)) \/ ((~ (x0 = y2)) \/ (~ (y1 = y3)))) y0) /\ (forall y0 : a1, (fun y1 : a1 => forall y2 : a0, forall y3 : a1, (~ ((@pair a0 a1 x0 y1) = (@pair a0 a1 y2 y3))) \/ ((x0 = y2) /\ (y1 = y3))) y0).
Definition term1861 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a0) (x2 : a1) := (forall y0 : a1, (fun y1 : a1 => ((@pair a0 a1 x0 x2) = (@pair a0 a1 x1 y1)) \/ ((~ (x0 = x1)) \/ (~ (x2 = y1)))) y0) /\ (forall y0 : a1, (fun y1 : a1 => (~ ((@pair a0 a1 x0 x2) = (@pair a0 a1 x1 y1))) \/ ((x0 = x1) /\ (x2 = y1))) y0).
Definition term643 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : nat) := forall y0 : type1413 a0 a1, (@FINITE a0 x0) -> ((@CARD a0 x0) = x1) -> forall y1 : nat, (forall y2 : a0, (@IN a0 y2 x0) -> @HAS_SIZE a1 (y0 y2) y1) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y2 : prod a0 a1 => exists y3 : a0, exists y4 : a1, @SETSPEC (prod a0 a1) y2 ((@IN a0 y3 x0) /\ (@IN a1 y4 (y0 y3))) (@pair a0 a1 y3 y4))) (Nat.mul x1 y1).
Definition term1245 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a1) (x2 : prod a0 a1) (x3 : a1) (x4 : type1413 a0 a1) (x5 : a0) := (@IN a1 x1 (x4 x0)) -> (x2 = (@pair a0 a1 x0 x1)) -> (x2 = (@pair a0 a1 x5 x3)) -> (@IN a1 x3 (x4 x5)) -> (forall y0 : a0, forall y1 : a1, forall y2 : a0, forall y3 : a1, ((@pair a0 a1 y0 y1) = (@pair a0 a1 y2 y3)) = ((y0 = y2) /\ (y1 = y3))) -> (forall y0 : a0, forall y1 : nat, forall y2 : a0, forall y3 : nat, ((@pair a0 nat y0 y1) = (@pair a0 nat y2 y3)) = ((y0 = y2) /\ (y1 = y3))) -> (forall y0 : a0, forall y1 : prod a0 a1, forall y2 : a0, forall y3 : prod a0 a1, ((@pair a0 (prod a0 a1) y0 y1) = (@pair a0 (prod a0 a1) y2 y3)) = ((y0 = y2) /\ (y1 = y3))) -> (forall y0 : nat, forall y1 : a1, forall y2 : nat, forall y3 : a1, ((@pair nat a1 y0 y1) = (@pair nat a1 y2 y3)) = ((y0 = y2) /\ (y1 = y3))) -> ~ (forall y0 : prod a0 a1, forall y1 : a1, forall y2 : prod a0 a1, forall y3 : a1, ((@pair (prod a0 a1) a1 y0 y1) = (@pair (prod a0 a1) a1 y2 y3)) = ((y0 = y2) /\ (y1 = y3))).
Definition term1244 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a1) (x2 : prod a0 a1) (x3 : a1) (x4 : type1413 a0 a1) (x5 : a0) := (@IN a1 x1 (x4 x0)) -> (x2 = (@pair a0 a1 x0 x1)) -> (x2 = (@pair a0 a1 x5 x3)) -> (@IN a1 x3 (x4 x5)) -> (forall y0 : a0, forall y1 : a1, forall y2 : a0, forall y3 : a1, ((@pair a0 a1 y0 y1) = (@pair a0 a1 y2 y3)) = ((y0 = y2) /\ (y1 = y3))) -> (forall y0 : a0, forall y1 : nat, forall y2 : a0, forall y3 : nat, ((@pair a0 nat y0 y1) = (@pair a0 nat y2 y3)) = ((y0 = y2) /\ (y1 = y3))) -> (forall y0 : a0, forall y1 : prod a0 a1, forall y2 : a0, forall y3 : prod a0 a1, ((@pair a0 (prod a0 a1) y0 y1) = (@pair a0 (prod a0 a1) y2 y3)) = ((y0 = y2) /\ (y1 = y3))) -> (forall y0 : nat, forall y1 : a1, forall y2 : nat, forall y3 : a1, ((@pair nat a1 y0 y1) = (@pair nat a1 y2 y3)) = ((y0 = y2) /\ (y1 = y3))) -> (forall y0 : prod a0 a1, forall y1 : a1, forall y2 : prod a0 a1, forall y3 : a1, ((@pair (prod a0 a1) a1 y0 y1) = (@pair (prod a0 a1) a1 y2 y3)) = ((y0 = y2) /\ (y1 = y3))) -> False.
Definition term1175 (a0 : Type') (a1 : Type') (x0 : prod a0 a1) (x1 : a0 -> Prop) (x2 : a1) (x3 : type1413 a0 a1) (x4 : a0) := @eq ((prod a0 a1) -> Prop) ((fun y0 : Prop => fun y1 : prod a0 a1 => y0 /\ (x0 = y1)) ((@IN a0 x4 x1) /\ (@IN a1 x2 (x3 x4)))).
Definition term133 (a0 : Type') (a1 : Type') (x0 : prod a1 a0) (x1 : a1 -> Prop) (x2 : a0) (x3 : type1470 a0 a1) (x4 : a1) := @eq ((prod a1 a0) -> Prop) ((fun y0 : Prop => fun y1 : prod a1 a0 => y0 /\ (x0 = y1)) ((@IN a1 x4 x1) /\ (@IN a0 x2 (x3 x4)))).
Definition term974 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a0 -> Prop) (x2 : type1413 a0 a1) (x3 : nat) (x4 : nat) := (forall y0 : a0, ((y0 = x0) -> @HAS_SIZE a1 (x2 y0) x4) /\ ((@IN a0 y0 x1) -> @HAS_SIZE a1 (x2 y0) x4)) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y0 : prod a0 a1 => exists y1 : a0, exists y2 : a1, @SETSPEC (prod a0 a1) y0 (((y1 = x0) \/ (@IN a0 y1 x1)) /\ (@IN a1 y2 (x2 y1))) (@pair a0 a1 y1 y2))) (Nat.mul x3 x4).
Definition term889 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a0 -> Prop) (x2 : type1413 a0 a1) (x3 : nat) (x4 : nat) := (forall y0 : a0, ((y0 = x0) \/ (@IN a0 y0 x1)) -> @HAS_SIZE a1 (x2 y0) x4) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y0 : prod a0 a1 => exists y1 : a0, exists y2 : a1, @SETSPEC (prod a0 a1) y0 (((y1 = x0) \/ (@IN a0 y1 x1)) /\ (@IN a1 y2 (x2 y1))) (@pair a0 a1 y1 y2))) (Nat.mul x3 x4).
Definition term888 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a0 -> Prop) (x2 : type1413 a0 a1) (x3 : nat) (x4 : nat) := (forall y0 : a0, (@IN a0 y0 (@INSERT a0 x0 x1)) -> @HAS_SIZE a1 (x2 y0) x4) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y0 : prod a0 a1 => exists y1 : a0, exists y2 : a1, @SETSPEC (prod a0 a1) y0 ((@IN a0 y1 (@INSERT a0 x0 x1)) /\ (@IN a1 y2 (x2 y1))) (@pair a0 a1 y1 y2))) (Nat.mul x3 x4).
Definition term1072 (a0 : Type') (a1 : Type') (x0 : type1413 a0 a1) (x1 : a0) (x2 : a0 -> Prop) (x3 : nat) := @HAS_SIZE (prod a0 a1) (@UNION (prod a0 a1) (@GSPEC (prod a0 a1) (fun y0 : prod a0 a1 => exists y1 : a0, exists y2 : a1, @SETSPEC (prod a0 a1) y0 ((@IN a0 y1 x2) /\ (@IN a1 y2 (x0 y1))) (@pair a0 a1 y1 y2))) (@IMAGE a1 (prod a0 a1) (fun y0 : a1 => @pair a0 a1 x1 y0) (x0 x1))) (Nat.add (Nat.mul (@CARD a0 x2) x3) x3).
Definition term1810 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : type1413 a0 a1) (x2 : a0 -> Prop) (x3 : nat -> a0) := fun y0 : nat => (fun y1 : nat => fun y2 : a0 => ((@IN a0 y2 x2) /\ (~ (@HAS_SIZE a1 (x1 y2) y1))) \/ (@HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (x0 x2 x1)) (Nat.mul (@CARD a0 x2) y1))) y0 (x3 y0).
Definition term1124 (a0 : Type') (a1 : Type') (x0 : a0) := fun y0 : a1 => (fun y1 : a1 => @pair a0 a1 x0 y1) y0.
Definition term1488 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : a0 -> Prop) (x2 : type1413 a0 a1) := forall y0 : prod a0 a1, (x0 x1 x2 y0) \/ (forall y1 : a0, forall y2 : a1, ~ (@SETSPEC (prod a0 a1) y0 ((@IN a0 y1 x1) /\ (@IN a1 y2 (x2 y1))) (@pair a0 a1 y1 y2))).
Definition term1933 (a0 : Type') (a1 : Type') (x0 : a0) := ((fun y0 : a0 => forall y1 : a1, forall y2 : a0, forall y3 : a1, ((@pair a0 a1 y0 y1) = (@pair a0 a1 y2 y3)) \/ ((~ (y0 = y2)) \/ (~ (y1 = y3)))) x0) /\ ((fun y0 : a0 => forall y1 : a1, forall y2 : a0, forall y3 : a1, (~ ((@pair a0 a1 y0 y1) = (@pair a0 a1 y2 y3))) \/ ((y0 = y2) /\ (y1 = y3))) x0).
Definition term251 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : type1470 a0 a1) (x2 : prod a1 a0) (x3 : a1) := ~ ((fun y0 : a1 => exists y1 : a0, ((x0 y0) /\ (x1 y0 y1)) /\ (x2 = (@pair a1 a0 y0 y1))) x3).
Definition term726 (a0 : Type') (a1 : Type') (x0 : nat) (x1 : Prop) := (fun y0 : Prop => forall y1 : Prop, (((@CARD a0 (@EMPTY a0)) = x0) = y0) -> (y0 -> (forall y2 : type1413 a0 a1, forall y3 : nat, (forall y4 : a0, (@IN a0 y4 (@EMPTY a0)) -> @HAS_SIZE a1 (y2 y4) y3) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y4 : prod a0 a1 => exists y5 : a0, exists y6 : a1, @SETSPEC (prod a0 a1) y4 ((@IN a0 y5 (@EMPTY a0)) /\ (@IN a1 y6 (y2 y5))) (@pair a0 a1 y5 y6))) (Nat.mul x0 y3)) = y1) -> (((@CARD a0 (@EMPTY a0)) = x0) -> forall y2 : type1413 a0 a1, forall y3 : nat, (forall y4 : a0, (@IN a0 y4 (@EMPTY a0)) -> @HAS_SIZE a1 (y2 y4) y3) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y4 : prod a0 a1 => exists y5 : a0, exists y6 : a1, @SETSPEC (prod a0 a1) y4 ((@IN a0 y5 (@EMPTY a0)) /\ (@IN a1 y6 (y2 y5))) (@pair a0 a1 y5 y6))) (Nat.mul x0 y3)) = (y0 -> y1)) x1.
Definition term45 (x0 : Prop) (x1 : Prop) := (fun y0 : Prop => forall y1 : Prop, (x0 \/ (y0 \/ y1)) = ((x0 \/ y0) \/ y1)) x1.
Definition term960 (a0 : Type') := fun y0 : a0 => False.
Definition term1741 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) := fun y0 : type619 a0 a1 => (forall y1 : a0 -> Prop, forall y2 : type1413 a0 a1, forall y3 : prod a0 a1, (x0 y1 y2 y3) \/ (forall y4 : a0, forall y5 : a1, ~ (@SETSPEC (prod a0 a1) y3 ((@IN a0 y4 y1) /\ (@IN a1 y5 (y2 y4))) (@pair a0 a1 y4 y5)))) /\ (exists y1 : type620 a0 a1, forall y2 : a0 -> Prop, forall y3 : type1413 a0 a1, forall y4 : prod a0 a1, (~ (x0 y2 y3 y4)) \/ (@SETSPEC (prod a0 a1) y4 ((@IN a0 (y0 y2 y3 y4) y2) /\ (@IN a1 (y1 y2 y3 y4) (y3 (y0 y2 y3 y4)))) (@pair a0 a1 (y0 y2 y3 y4) (y1 y2 y3 y4)))).
Definition term1346 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : type1413 a0 a1) (x2 : a0 -> Prop) (x3 : nat) := (forall y0 : a0, (@IN a0 y0 x2) -> @HAS_SIZE a1 (x1 y0) x3) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (x0 x2 x1)) (Nat.mul (@CARD a0 x2) x3).
Definition term1263 (a0 : Type') (a1 : Type') (x0 : nat) (x1 : nat) (x2 : a0 -> Prop) (x3 : a0) (x4 : a1) (x5 : prod a0 a1) (x6 : a1) (x7 : type1413 a0 a1) (x8 : a0) := (~ (@IN a0 x8 x2)) -> (@FINITE a0 x2) -> (x0 = (S (@CARD a0 x2))) -> (@HAS_SIZE a1 (x7 x8) x1) -> (forall y0 : a0, (@IN a0 y0 x2) -> @HAS_SIZE a1 (x7 y0) x1) -> (forall y0 : type1413 a0 a1, forall y1 : nat, (forall y2 : a0, (@IN a0 y2 x2) -> @HAS_SIZE a1 (y0 y2) y1) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y2 : prod a0 a1 => exists y3 : a0, exists y4 : a1, @SETSPEC (prod a0 a1) y2 ((@IN a0 y3 x2) /\ (@IN a1 y4 (y0 y3))) (@pair a0 a1 y3 y4))) (Nat.mul (@CARD a0 x2) y1)) -> (@IN a0 x3 x2) -> (@IN a1 x4 (x7 x3)) -> (x5 = (@pair a0 a1 x3 x4)) -> (x5 = (@pair a0 a1 x8 x6)) -> (@IN a1 x6 (x7 x8)) -> (forall y0 : a0, forall y1 : a1, forall y2 : a0, forall y3 : a1, ((@pair a0 a1 y0 y1) = (@pair a0 a1 y2 y3)) = ((y0 = y2) /\ (y1 = y3))) -> (forall y0 : a0, forall y1 : nat, forall y2 : a0, forall y3 : nat, ((@pair a0 nat y0 y1) = (@pair a0 nat y2 y3)) = ((y0 = y2) /\ (y1 = y3))) -> (forall y0 : a0, forall y1 : prod a0 a1, forall y2 : a0, forall y3 : prod a0 a1, ((@pair a0 (prod a0 a1) y0 y1) = (@pair a0 (prod a0 a1) y2 y3)) = ((y0 = y2) /\ (y1 = y3))) -> (forall y0 : nat, forall y1 : a1, forall y2 : nat, forall y3 : a1, ((@pair nat a1 y0 y1) = (@pair nat a1 y2 y3)) = ((y0 = y2) /\ (y1 = y3))) -> ~ (forall y0 : prod a0 a1, forall y1 : a1, forall y2 : prod a0 a1, forall y3 : a1, ((@pair (prod a0 a1) a1 y0 y1) = (@pair (prod a0 a1) a1 y2 y3)) = ((y0 = y2) /\ (y1 = y3))).
Definition term1218 (a0 : Type') (a1 : Type') (x0 : nat) (x1 : nat) (x2 : a0 -> Prop) (x3 : a0) (x4 : a1) (x5 : prod a0 a1) (x6 : a1) (x7 : type1413 a0 a1) (x8 : a0) := (~ (@IN a0 x8 x2)) -> (@FINITE a0 x2) -> (x0 = (S (@CARD a0 x2))) -> (@HAS_SIZE a1 (x7 x8) x1) -> (forall y0 : a0, (@IN a0 y0 x2) -> @HAS_SIZE a1 (x7 y0) x1) -> (forall y0 : type1413 a0 a1, forall y1 : nat, (forall y2 : a0, (@IN a0 y2 x2) -> @HAS_SIZE a1 (y0 y2) y1) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y2 : prod a0 a1 => exists y3 : a0, exists y4 : a1, @SETSPEC (prod a0 a1) y2 ((@IN a0 y3 x2) /\ (@IN a1 y4 (y0 y3))) (@pair a0 a1 y3 y4))) (Nat.mul (@CARD a0 x2) y1)) -> (@IN a0 x3 x2) -> (@IN a1 x4 (x7 x3)) -> (x5 = (@pair a0 a1 x3 x4)) -> (x5 = (@pair a0 a1 x8 x6)) -> (@IN a1 x6 (x7 x8)) -> (forall y0 : a0, forall y1 : a1, forall y2 : a0, forall y3 : a1, ((@pair a0 a1 y0 y1) = (@pair a0 a1 y2 y3)) = ((y0 = y2) /\ (y1 = y3))) -> (forall y0 : a0, forall y1 : nat, forall y2 : a0, forall y3 : nat, ((@pair a0 nat y0 y1) = (@pair a0 nat y2 y3)) = ((y0 = y2) /\ (y1 = y3))) -> (forall y0 : a0, forall y1 : prod a0 a1, forall y2 : a0, forall y3 : prod a0 a1, ((@pair a0 (prod a0 a1) y0 y1) = (@pair a0 (prod a0 a1) y2 y3)) = ((y0 = y2) /\ (y1 = y3))) -> (forall y0 : nat, forall y1 : a1, forall y2 : nat, forall y3 : a1, ((@pair nat a1 y0 y1) = (@pair nat a1 y2 y3)) = ((y0 = y2) /\ (y1 = y3))) -> (forall y0 : prod a0 a1, forall y1 : a1, forall y2 : prod a0 a1, forall y3 : a1, ((@pair (prod a0 a1) a1 y0 y1) = (@pair (prod a0 a1) a1 y2 y3)) = ((y0 = y2) /\ (y1 = y3))) -> False.
Definition term1953 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a1) (x2 : a0) (x3 : a1) := or (~ ((@I (a1 -> prod a0 a1) (@I (a0 -> a1 -> prod a0 a1) (@pair a0 a1) x0) x1) = (@I (a1 -> prod a0 a1) (@I (a0 -> a1 -> prod a0 a1) (@pair a0 a1) x2) x3))).
Definition term1419 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : a0 -> Prop) := forall y0 : type1413 a0 a1, (x0 x1 y0) = (fun y1 : prod a0 a1 => exists y2 : a0, exists y3 : a1, @SETSPEC (prod a0 a1) y1 ((@IN a0 y2 x1) /\ (@IN a1 y3 (y0 y2))) (@pair a0 a1 y2 y3)).
Definition term701 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a0 -> Prop) := (fun y0 : a0 -> Prop => forall y1 : nat, ((@CARD a0 y0) = y1) -> forall y2 : type1413 a0 a1, forall y3 : nat, (forall y4 : a0, (@IN a0 y4 y0) -> @HAS_SIZE a1 (y2 y4) y3) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y4 : prod a0 a1 => exists y5 : a0, exists y6 : a1, @SETSPEC (prod a0 a1) y4 ((@IN a0 y5 y0) /\ (@IN a1 y6 (y2 y5))) (@pair a0 a1 y5 y6))) (Nat.mul y1 y3)) (@INSERT a0 x0 x1).
Definition term1801 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : type1413 a0 a1) (x2 : a0 -> Prop) (x3 : nat) (x4 : a0) := (fun y0 : a0 => ((@IN a0 y0 x2) /\ (~ (@HAS_SIZE a1 (x1 y0) x3))) \/ (@HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (x0 x2 x1)) (Nat.mul (@CARD a0 x2) x3))) x4.
Definition term742 (a0 : Type') (a1 : Type') (x0 : type1413 a0 a1) (x1 : a0) (x2 : nat) := @HAS_SIZE a1 (x0 x1) x2.
Definition term1665 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : a0 -> Prop) (x2 : type464 a0 a1) (x3 : type465 a0 a1) (x4 : type1413 a0 a1) := (fun y0 : type1208 a0 a1 => forall y1 : prod a0 a1, (~ (x0 x1 x4 y1)) \/ (@SETSPEC (prod a0 a1) y1 ((@IN a0 (x2 x4 y1) x1) /\ (@IN a1 (y0 y1) (x4 (x2 x4 y1)))) (@pair a0 a1 (x2 x4 y1) (y0 y1)))) (x3 x4).
Definition term1345 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : type1413 a0 a1) (x2 : a0 -> Prop) (x3 : nat) := @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (x0 x2 x1)) (Nat.mul (@CARD a0 x2) x3).
Definition term1322 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a0) (x2 : prod a0 a1) (x3 : prod a0 a1) := (x0 = x1) /\ (x2 = x3).
Definition term1038 (a0 : Type') (a1 : Type') (x0 : type1413 a0 a1) (x1 : a0) (x2 : nat) := (True -> (@HAS_SIZE a1 (x0 x1) x2) = (@HAS_SIZE a1 (x0 x1) x2)) -> ((exists y0 : a0, y0 = x1) -> @HAS_SIZE a1 (x0 x1) x2) = (True -> @HAS_SIZE a1 (x0 x1) x2).
Definition term206 (a0 : Type') (a1 : Type') (x0 : type1470 a0 a1) (x1 : a1) (x2 : a0) := ~ (x0 x1 x2).
Definition term89 (a0 : Type') (a1 : Type') (x0 : a1) (x1 : a1 -> Prop) (x2 : a0) (x3 : type1470 a0 a1) (x4 : a1) (x5 : prod a1 a0) (x6 : prod a1 a0) := (((x4 = x0) \/ (@IN a1 x4 x1)) /\ (@IN a0 x2 (x3 x4))) /\ (x5 = x6).
Definition term924 (x0 : Prop) := forall y0 : nat, x0.
Definition term2103 (a0 : Type') (a1 : Type') (x0 : a1) (x1 : prod a0 a1) (x2 : a1) (x3 : type1413 a0 a1) (x4 : a0) (x5 : a0) := (fun y0 : a0 => forall y1 : a0 -> Prop, forall y2 : nat, forall y3 : nat, (~ (@IN a0 x4 y1)) -> (@FINITE a0 y1) -> (y3 = (S (@CARD a0 y1))) -> (@HAS_SIZE a1 (x3 x4) y2) -> (forall y4 : a0, (@IN a0 y4 y1) -> @HAS_SIZE a1 (x3 y4) y2) -> (forall y4 : type1413 a0 a1, forall y5 : nat, (forall y6 : a0, (@IN a0 y6 y1) -> @HAS_SIZE a1 (y4 y6) y5) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y6 : prod a0 a1 => exists y7 : a0, exists y8 : a1, @SETSPEC (prod a0 a1) y6 ((@IN a0 y7 y1) /\ (@IN a1 y8 (y4 y7))) (@pair a0 a1 y7 y8))) (Nat.mul (@CARD a0 y1) y5)) -> (@IN a0 y0 y1) -> (@IN a1 x0 (x3 y0)) -> (x1 = (@pair a0 a1 y0 x0)) -> (x1 = (@pair a0 a1 x4 x2)) -> (@IN a1 x2 (x3 x4)) -> (forall y4 : a0, forall y5 : a1, forall y6 : a0, forall y7 : a1, ((@pair a0 a1 y4 y5) = (@pair a0 a1 y6 y7)) = ((y4 = y6) /\ (y5 = y7))) -> (forall y4 : a0, forall y5 : nat, forall y6 : a0, forall y7 : nat, ((@pair a0 nat y4 y5) = (@pair a0 nat y6 y7)) = ((y4 = y6) /\ (y5 = y7))) -> (forall y4 : a0, forall y5 : prod a0 a1, forall y6 : a0, forall y7 : prod a0 a1, ((@pair a0 (prod a0 a1) y4 y5) = (@pair a0 (prod a0 a1) y6 y7)) = ((y4 = y6) /\ (y5 = y7))) -> (forall y4 : nat, forall y5 : a1, forall y6 : nat, forall y7 : a1, ((@pair nat a1 y4 y5) = (@pair nat a1 y6 y7)) = ((y4 = y6) /\ (y5 = y7))) -> (forall y4 : prod a0 a1, forall y5 : a1, forall y6 : prod a0 a1, forall y7 : a1, ((@pair (prod a0 a1) a1 y4 y5) = (@pair (prod a0 a1) a1 y6 y7)) = ((y4 = y6) /\ (y5 = y7))) -> False) x5.
Definition term1190 (a0 : Type') (a1 : Type') (x0 : prod a0 a1) (x1 : a0 -> Prop) (x2 : type1413 a0 a1) := fun y0 : a0 => exists y1 : a1, (fun y2 : Prop => fun y3 : prod a0 a1 => y2 /\ (x0 = y3)) ((@IN a0 y0 x1) /\ (@IN a1 y1 (x2 y0))) (@pair a0 a1 y0 y1).
Definition term1439 (a0 : Type') (a1 : Type') (x0 : prod a0 a1) (x1 : a0 -> Prop) (x2 : type1413 a0 a1) (x3 : a0) (x4 : a1) := @SETSPEC (prod a0 a1) x0 ((@IN a0 x3 x1) /\ (@IN a1 x4 (x2 x3))) (@pair a0 a1 x3 x4).
Definition term2066 (a0 : Type') (x0 : type686 a0) (x1 : type686 a0) (x2 : type686 a0) := ((x0 = x1) /\ (x0 = x2)) -> x1 = x2.
Definition term1656 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : a0 -> Prop) (x2 : type464 a0 a1) (x3 : type1413 a0 a1) (x4 : type1208 a0 a1) := (fun y0 : type1413 a0 a1 => fun y1 : type1208 a0 a1 => forall y2 : prod a0 a1, (~ (x0 x1 y0 y2)) \/ (@SETSPEC (prod a0 a1) y2 ((@IN a0 (x2 y0 y2) x1) /\ (@IN a1 (y1 y2) (y0 (x2 y0 y2)))) (@pair a0 a1 (x2 y0 y2) (y1 y2)))) x3 x4.
Definition term2 (a0 : Type') (x0 : a0) := (~ (@IN a0 x0 (@EMPTY a0))) -> (@IN a0 x0 (@EMPTY a0)) = False.
Definition term2049 (a0 : Type') (x0 : type686 a0) (x1 : type686 a0) (x2 : type686 a0) := (x0 = x2) \/ (~ (x1 = x2)).
Definition term2044 (a0 : Type') (x0 : a0) (x1 : a0) := (~ ((@I (a0 -> (a0 -> Prop) -> Prop) (@IN a0) x0) = (@I (a0 -> (a0 -> Prop) -> Prop) (@IN a0) x1))) -> (@I (a0 -> (a0 -> Prop) -> Prop) (@IN a0) x0) = (@I (a0 -> (a0 -> Prop) -> Prop) (@IN a0) x1).
Definition term748 (a0 : Type') (a1 : Type') (x0 : type1413 a0 a1) (x1 : a0) (x2 : nat) (x3 : Prop) := (False -> (@HAS_SIZE a1 (x0 x1) x2) = x3) -> ((@IN a0 x1 (@EMPTY a0)) -> @HAS_SIZE a1 (x0 x1) x2) = (False -> x3).
Definition term1437 (a0 : Type') (a1 : Type') := fun y0 : type621 a0 a1 => (forall y1 : a0 -> Prop, forall y2 : type1413 a0 a1, forall y3 : prod a0 a1, (y0 y1 y2 y3) = (exists y4 : a0, exists y5 : a1, @SETSPEC (prod a0 a1) y3 ((@IN a0 y4 y1) /\ (@IN a1 y5 (y2 y4))) (@pair a0 a1 y4 y5))) -> forall y1 : a0, forall y2 : type1413 a0 a1, forall y3 : a1, forall y4 : prod a0 a1, forall y5 : a1, forall y6 : a0, forall y7 : a0 -> Prop, forall y8 : nat, forall y9 : nat, (~ (@IN a0 y1 y7)) -> (@FINITE a0 y7) -> (y9 = (S (@CARD a0 y7))) -> (@HAS_SIZE a1 (y2 y1) y8) -> (forall y10 : a0, (@IN a0 y10 y7) -> @HAS_SIZE a1 (y2 y10) y8) -> (forall y10 : type1413 a0 a1, forall y11 : nat, (forall y12 : a0, (@IN a0 y12 y7) -> @HAS_SIZE a1 (y10 y12) y11) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (y0 y7 y10)) (Nat.mul (@CARD a0 y7) y11)) -> (@IN a0 y6 y7) -> (@IN a1 y5 (y2 y6)) -> (y4 = (@pair a0 a1 y6 y5)) -> (y4 = (@pair a0 a1 y1 y3)) -> (@IN a1 y3 (y2 y1)) -> (forall y10 : a0, forall y11 : a1, forall y12 : a0, forall y13 : a1, ((@pair a0 a1 y10 y11) = (@pair a0 a1 y12 y13)) = ((y10 = y12) /\ (y11 = y13))) -> (forall y10 : a0, forall y11 : nat, forall y12 : a0, forall y13 : nat, ((@pair a0 nat y10 y11) = (@pair a0 nat y12 y13)) = ((y10 = y12) /\ (y11 = y13))) -> (forall y10 : a0, forall y11 : prod a0 a1, forall y12 : a0, forall y13 : prod a0 a1, ((@pair a0 (prod a0 a1) y10 y11) = (@pair a0 (prod a0 a1) y12 y13)) = ((y10 = y12) /\ (y11 = y13))) -> (forall y10 : nat, forall y11 : a1, forall y12 : nat, forall y13 : a1, ((@pair nat a1 y10 y11) = (@pair nat a1 y12 y13)) = ((y10 = y12) /\ (y11 = y13))) -> ~ (forall y10 : prod a0 a1, forall y11 : a1, forall y12 : prod a0 a1, forall y13 : a1, ((@pair (prod a0 a1) a1 y10 y11) = (@pair (prod a0 a1) a1 y12 y13)) = ((y10 = y12) /\ (y11 = y13))).
Definition term1375 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : a0) := forall y0 : type1413 a0 a1, forall y1 : a1, forall y2 : prod a0 a1, forall y3 : a1, forall y4 : a0, forall y5 : a0 -> Prop, forall y6 : nat, forall y7 : nat, (~ (@IN a0 x1 y5)) -> (@FINITE a0 y5) -> (y7 = (S (@CARD a0 y5))) -> (@HAS_SIZE a1 (y0 x1) y6) -> (forall y8 : a0, (@IN a0 y8 y5) -> @HAS_SIZE a1 (y0 y8) y6) -> (forall y8 : type1413 a0 a1, forall y9 : nat, (forall y10 : a0, (@IN a0 y10 y5) -> @HAS_SIZE a1 (y8 y10) y9) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (x0 y5 y8)) (Nat.mul (@CARD a0 y5) y9)) -> (@IN a0 y4 y5) -> (@IN a1 y3 (y0 y4)) -> (y2 = (@pair a0 a1 y4 y3)) -> (y2 = (@pair a0 a1 x1 y1)) -> (@IN a1 y1 (y0 x1)) -> (forall y8 : a0, forall y9 : a1, forall y10 : a0, forall y11 : a1, ((@pair a0 a1 y8 y9) = (@pair a0 a1 y10 y11)) = ((y8 = y10) /\ (y9 = y11))) -> (forall y8 : a0, forall y9 : nat, forall y10 : a0, forall y11 : nat, ((@pair a0 nat y8 y9) = (@pair a0 nat y10 y11)) = ((y8 = y10) /\ (y9 = y11))) -> (forall y8 : a0, forall y9 : prod a0 a1, forall y10 : a0, forall y11 : prod a0 a1, ((@pair a0 (prod a0 a1) y8 y9) = (@pair a0 (prod a0 a1) y10 y11)) = ((y8 = y10) /\ (y9 = y11))) -> (forall y8 : nat, forall y9 : a1, forall y10 : nat, forall y11 : a1, ((@pair nat a1 y8 y9) = (@pair nat a1 y10 y11)) = ((y8 = y10) /\ (y9 = y11))) -> ~ (forall y8 : prod a0 a1, forall y9 : a1, forall y10 : prod a0 a1, forall y11 : a1, ((@pair (prod a0 a1) a1 y8 y9) = (@pair (prod a0 a1) a1 y10 y11)) = ((y8 = y10) /\ (y9 = y11))).
Definition term1295 (a0 : Type') (a1 : Type') (x0 : a0) := forall y0 : type1413 a0 a1, forall y1 : a1, forall y2 : prod a0 a1, forall y3 : a1, forall y4 : a0, forall y5 : a0 -> Prop, forall y6 : nat, forall y7 : nat, (~ (@IN a0 x0 y5)) -> (@FINITE a0 y5) -> (y7 = (S (@CARD a0 y5))) -> (@HAS_SIZE a1 (y0 x0) y6) -> (forall y8 : a0, (@IN a0 y8 y5) -> @HAS_SIZE a1 (y0 y8) y6) -> (forall y8 : type1413 a0 a1, forall y9 : nat, (forall y10 : a0, (@IN a0 y10 y5) -> @HAS_SIZE a1 (y8 y10) y9) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y10 : prod a0 a1 => exists y11 : a0, exists y12 : a1, @SETSPEC (prod a0 a1) y10 ((@IN a0 y11 y5) /\ (@IN a1 y12 (y8 y11))) (@pair a0 a1 y11 y12))) (Nat.mul (@CARD a0 y5) y9)) -> (@IN a0 y4 y5) -> (@IN a1 y3 (y0 y4)) -> (y2 = (@pair a0 a1 y4 y3)) -> (y2 = (@pair a0 a1 x0 y1)) -> (@IN a1 y1 (y0 x0)) -> (forall y8 : a0, forall y9 : a1, forall y10 : a0, forall y11 : a1, ((@pair a0 a1 y8 y9) = (@pair a0 a1 y10 y11)) = ((y8 = y10) /\ (y9 = y11))) -> (forall y8 : a0, forall y9 : nat, forall y10 : a0, forall y11 : nat, ((@pair a0 nat y8 y9) = (@pair a0 nat y10 y11)) = ((y8 = y10) /\ (y9 = y11))) -> (forall y8 : a0, forall y9 : prod a0 a1, forall y10 : a0, forall y11 : prod a0 a1, ((@pair a0 (prod a0 a1) y8 y9) = (@pair a0 (prod a0 a1) y10 y11)) = ((y8 = y10) /\ (y9 = y11))) -> (forall y8 : nat, forall y9 : a1, forall y10 : nat, forall y11 : a1, ((@pair nat a1 y8 y9) = (@pair nat a1 y10 y11)) = ((y8 = y10) /\ (y9 = y11))) -> ~ (forall y8 : prod a0 a1, forall y9 : a1, forall y10 : prod a0 a1, forall y11 : a1, ((@pair (prod a0 a1) a1 y8 y9) = (@pair (prod a0 a1) a1 y10 y11)) = ((y8 = y10) /\ (y9 = y11))).
Definition term1294 (a0 : Type') (a1 : Type') (x0 : a0) := forall y0 : type1413 a0 a1, forall y1 : a1, forall y2 : prod a0 a1, forall y3 : a1, forall y4 : a0, forall y5 : a0 -> Prop, forall y6 : nat, forall y7 : nat, (~ (@IN a0 x0 y5)) -> (@FINITE a0 y5) -> (y7 = (S (@CARD a0 y5))) -> (@HAS_SIZE a1 (y0 x0) y6) -> (forall y8 : a0, (@IN a0 y8 y5) -> @HAS_SIZE a1 (y0 y8) y6) -> (forall y8 : type1413 a0 a1, forall y9 : nat, (forall y10 : a0, (@IN a0 y10 y5) -> @HAS_SIZE a1 (y8 y10) y9) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y10 : prod a0 a1 => exists y11 : a0, exists y12 : a1, @SETSPEC (prod a0 a1) y10 ((@IN a0 y11 y5) /\ (@IN a1 y12 (y8 y11))) (@pair a0 a1 y11 y12))) (Nat.mul (@CARD a0 y5) y9)) -> (@IN a0 y4 y5) -> (@IN a1 y3 (y0 y4)) -> (y2 = (@pair a0 a1 y4 y3)) -> (y2 = (@pair a0 a1 x0 y1)) -> (@IN a1 y1 (y0 x0)) -> (forall y8 : a0, forall y9 : a1, forall y10 : a0, forall y11 : a1, ((@pair a0 a1 y8 y9) = (@pair a0 a1 y10 y11)) = ((y8 = y10) /\ (y9 = y11))) -> (forall y8 : a0, forall y9 : nat, forall y10 : a0, forall y11 : nat, ((@pair a0 nat y8 y9) = (@pair a0 nat y10 y11)) = ((y8 = y10) /\ (y9 = y11))) -> (forall y8 : a0, forall y9 : prod a0 a1, forall y10 : a0, forall y11 : prod a0 a1, ((@pair a0 (prod a0 a1) y8 y9) = (@pair a0 (prod a0 a1) y10 y11)) = ((y8 = y10) /\ (y9 = y11))) -> (forall y8 : nat, forall y9 : a1, forall y10 : nat, forall y11 : a1, ((@pair nat a1 y8 y9) = (@pair nat a1 y10 y11)) = ((y8 = y10) /\ (y9 = y11))) -> (forall y8 : prod a0 a1, forall y9 : a1, forall y10 : prod a0 a1, forall y11 : a1, ((@pair (prod a0 a1) a1 y8 y9) = (@pair (prod a0 a1) a1 y10 y11)) = ((y8 = y10) /\ (y9 = y11))) -> False.
Definition term1440 (a0 : Type') (a1 : Type') (x0 : prod a0 a1) (x1 : a0 -> Prop) (x2 : type1413 a0 a1) (x3 : a0) := fun y0 : a1 => @SETSPEC (prod a0 a1) x0 ((@IN a0 x3 x1) /\ (@IN a1 y0 (x2 x3))) (@pair a0 a1 x3 y0).
Definition term259 (a0 : Type') (a1 : Type') (x0 : prod a1 a0) (x1 : type1470 a0 a1) (x2 : a1) (x3 : a0) := (fun y0 : a0 => (x0 = (@pair a1 a0 x2 y0)) /\ (x1 x2 y0)) x3.
Definition term340 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : type1470 a0 a1) (x2 : prod a1 a0) (x3 : a1) (x4 : a0) := or ((fun y0 : a0 => ((x0 x3) /\ (x1 x3 y0)) /\ (x2 = (@pair a1 a0 x3 y0))) x4).
Definition term990 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a0 -> Prop) (x2 : type1413 a0 a1) (x3 : nat) (x4 : a0) := ((fun y0 : a0 => (y0 = x0) -> @HAS_SIZE a1 (x2 y0) x3) x4) /\ ((fun y0 : a0 => (@IN a0 y0 x1) -> @HAS_SIZE a1 (x2 y0) x3) x4).
Definition term1098 (a0 : Type') (a1 : Type') (x0 : type1413 a0 a1) (x1 : a0 -> Prop) (x2 : nat) := @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y0 : prod a0 a1 => exists y1 : a0, exists y2 : a1, @SETSPEC (prod a0 a1) y0 ((@IN a0 y1 x1) /\ (@IN a1 y2 (x0 y1))) (@pair a0 a1 y1 y2))) (Nat.mul (@CARD a0 x1) x2).
Definition term656 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : nat) := forall y0 : type1413 a0 a1, ((@CARD a0 x0) = x1) -> forall y1 : nat, (forall y2 : a0, (@IN a0 y2 x0) -> @HAS_SIZE a1 (y0 y2) y1) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y2 : prod a0 a1 => exists y3 : a0, exists y4 : a1, @SETSPEC (prod a0 a1) y2 ((@IN a0 y3 x0) /\ (@IN a1 y4 (y0 y3))) (@pair a0 a1 y3 y4))) (Nat.mul x1 y1).
Definition term114 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : prod a1 a0) (x2 : type1470 a0 a1) (x3 : a1) := (@IN (prod a1 a0) x1 (@GSPEC (prod a1 a0) (fun y0 : prod a1 a0 => exists y1 : a1, exists y2 : a0, @SETSPEC (prod a1 a0) y0 ((@IN a1 y1 x0) /\ (@IN a0 y2 (x2 y1))) (@pair a1 a0 y1 y2)))) \/ (@IN (prod a1 a0) x1 (@IMAGE a0 (prod a1 a0) (fun y0 : a0 => @pair a1 a0 x3 y0) (x2 x3))).
Definition term1537 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) := and (forall y0 : a0 -> Prop, (fun y1 : a0 -> Prop => forall y2 : type1413 a0 a1, forall y3 : prod a0 a1, (x0 y1 y2 y3) \/ (forall y4 : a0, forall y5 : a1, ~ (@SETSPEC (prod a0 a1) y3 ((@IN a0 y4 y1) /\ (@IN a1 y5 (y2 y4))) (@pair a0 a1 y4 y5)))) y0).
Definition term1513 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : a0 -> Prop) := and (forall y0 : type1413 a0 a1, (fun y1 : type1413 a0 a1 => forall y2 : prod a0 a1, (x0 x1 y1 y2) \/ (forall y3 : a0, forall y4 : a1, ~ (@SETSPEC (prod a0 a1) y2 ((@IN a0 y3 x1) /\ (@IN a1 y4 (y1 y3))) (@pair a0 a1 y3 y4)))) y0).
Definition term1438 (a0 : Type') (a1 : Type') := forall y0 : type621 a0 a1, (forall y1 : a0 -> Prop, forall y2 : type1413 a0 a1, forall y3 : prod a0 a1, (y0 y1 y2 y3) = (exists y4 : a0, exists y5 : a1, @SETSPEC (prod a0 a1) y3 ((@IN a0 y4 y1) /\ (@IN a1 y5 (y2 y4))) (@pair a0 a1 y4 y5))) -> forall y1 : a0, forall y2 : type1413 a0 a1, forall y3 : a1, forall y4 : prod a0 a1, forall y5 : a1, forall y6 : a0, forall y7 : a0 -> Prop, forall y8 : nat, forall y9 : nat, (~ (@IN a0 y1 y7)) -> (@FINITE a0 y7) -> (y9 = (S (@CARD a0 y7))) -> (@HAS_SIZE a1 (y2 y1) y8) -> (forall y10 : a0, (@IN a0 y10 y7) -> @HAS_SIZE a1 (y2 y10) y8) -> (forall y10 : type1413 a0 a1, forall y11 : nat, (forall y12 : a0, (@IN a0 y12 y7) -> @HAS_SIZE a1 (y10 y12) y11) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (y0 y7 y10)) (Nat.mul (@CARD a0 y7) y11)) -> (@IN a0 y6 y7) -> (@IN a1 y5 (y2 y6)) -> (y4 = (@pair a0 a1 y6 y5)) -> (y4 = (@pair a0 a1 y1 y3)) -> (@IN a1 y3 (y2 y1)) -> (forall y10 : a0, forall y11 : a1, forall y12 : a0, forall y13 : a1, ((@pair a0 a1 y10 y11) = (@pair a0 a1 y12 y13)) = ((y10 = y12) /\ (y11 = y13))) -> (forall y10 : a0, forall y11 : nat, forall y12 : a0, forall y13 : nat, ((@pair a0 nat y10 y11) = (@pair a0 nat y12 y13)) = ((y10 = y12) /\ (y11 = y13))) -> (forall y10 : a0, forall y11 : prod a0 a1, forall y12 : a0, forall y13 : prod a0 a1, ((@pair a0 (prod a0 a1) y10 y11) = (@pair a0 (prod a0 a1) y12 y13)) = ((y10 = y12) /\ (y11 = y13))) -> (forall y10 : nat, forall y11 : a1, forall y12 : nat, forall y13 : a1, ((@pair nat a1 y10 y11) = (@pair nat a1 y12 y13)) = ((y10 = y12) /\ (y11 = y13))) -> ~ (forall y10 : prod a0 a1, forall y11 : a1, forall y12 : prod a0 a1, forall y13 : a1, ((@pair (prod a0 a1) a1 y10 y11) = (@pair (prod a0 a1) a1 y12 y13)) = ((y10 = y12) /\ (y11 = y13))).
Definition term1751 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : type619 a0 a1) := @eq Prop ((forall y0 : a0 -> Prop, forall y1 : type1413 a0 a1, forall y2 : prod a0 a1, (x0 y0 y1 y2) \/ (forall y3 : a0, forall y4 : a1, ~ (@SETSPEC (prod a0 a1) y2 ((@IN a0 y3 y0) /\ (@IN a1 y4 (y1 y3))) (@pair a0 a1 y3 y4)))) /\ (exists y0 : type620 a0 a1, forall y1 : a0 -> Prop, forall y2 : type1413 a0 a1, forall y3 : prod a0 a1, (~ (x0 y1 y2 y3)) \/ (@SETSPEC (prod a0 a1) y3 ((@IN a0 (x1 y1 y2 y3) y1) /\ (@IN a1 (y0 y1 y2 y3) (y2 (x1 y1 y2 y3)))) (@pair a0 a1 (x1 y1 y2 y3) (y0 y1 y2 y3))))).
Definition term1750 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : type619 a0 a1) := @eq Prop ((forall y0 : a0 -> Prop, forall y1 : type1413 a0 a1, forall y2 : prod a0 a1, (x0 y0 y1 y2) \/ (forall y3 : a0, forall y4 : a1, ~ (@SETSPEC (prod a0 a1) y2 ((@IN a0 y3 y0) /\ (@IN a1 y4 (y1 y3))) (@pair a0 a1 y3 y4)))) /\ (exists y0 : type620 a0 a1, (fun y1 : type620 a0 a1 => forall y2 : a0 -> Prop, forall y3 : type1413 a0 a1, forall y4 : prod a0 a1, (~ (x0 y2 y3 y4)) \/ (@SETSPEC (prod a0 a1) y4 ((@IN a0 (x1 y2 y3 y4) y2) /\ (@IN a1 (y1 y2 y3 y4) (y3 (x1 y2 y3 y4)))) (@pair a0 a1 (x1 y2 y3 y4) (y1 y2 y3 y4)))) y0)).
Definition term1737 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) := @eq Prop ((forall y0 : a0 -> Prop, forall y1 : type1413 a0 a1, forall y2 : prod a0 a1, (x0 y0 y1 y2) \/ (forall y3 : a0, forall y4 : a1, ~ (@SETSPEC (prod a0 a1) y2 ((@IN a0 y3 y0) /\ (@IN a1 y4 (y1 y3))) (@pair a0 a1 y3 y4)))) /\ (exists y0 : type619 a0 a1, exists y1 : type620 a0 a1, forall y2 : a0 -> Prop, forall y3 : type1413 a0 a1, forall y4 : prod a0 a1, (~ (x0 y2 y3 y4)) \/ (@SETSPEC (prod a0 a1) y4 ((@IN a0 (y0 y2 y3 y4) y2) /\ (@IN a1 (y1 y2 y3 y4) (y3 (y0 y2 y3 y4)))) (@pair a0 a1 (y0 y2 y3 y4) (y1 y2 y3 y4))))).
Definition term1736 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) := @eq Prop ((forall y0 : a0 -> Prop, forall y1 : type1413 a0 a1, forall y2 : prod a0 a1, (x0 y0 y1 y2) \/ (forall y3 : a0, forall y4 : a1, ~ (@SETSPEC (prod a0 a1) y2 ((@IN a0 y3 y0) /\ (@IN a1 y4 (y1 y3))) (@pair a0 a1 y3 y4)))) /\ (exists y0 : type619 a0 a1, (fun y1 : type619 a0 a1 => exists y2 : type620 a0 a1, forall y3 : a0 -> Prop, forall y4 : type1413 a0 a1, forall y5 : prod a0 a1, (~ (x0 y3 y4 y5)) \/ (@SETSPEC (prod a0 a1) y5 ((@IN a0 (y1 y3 y4 y5) y3) /\ (@IN a1 (y2 y3 y4 y5) (y4 (y1 y3 y4 y5)))) (@pair a0 a1 (y1 y3 y4 y5) (y2 y3 y4 y5)))) y0)).
Definition term373 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : a1) (x2 : prod a1 a0) (x3 : type1470 a0 a1) (x4 : a1) := @eq Prop ((forall y0 : a1, forall y1 : a0, (((~ (y0 = x4)) /\ (~ (x0 y0))) \/ (~ (x3 y0 y1))) \/ (~ (x2 = (@pair a1 a0 y0 y1)))) /\ (exists y0 : a0, (((x0 x1) /\ (x3 x1 y0)) /\ (x2 = (@pair a1 a0 x1 y0))) \/ ((x2 = (@pair a1 a0 x4 y0)) /\ (x3 x4 y0)))).
Definition term372 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : a1) (x2 : prod a1 a0) (x3 : type1470 a0 a1) (x4 : a1) := @eq Prop ((forall y0 : a1, forall y1 : a0, (((~ (y0 = x4)) /\ (~ (x0 y0))) \/ (~ (x3 y0 y1))) \/ (~ (x2 = (@pair a1 a0 y0 y1)))) /\ (exists y0 : a0, (fun y1 : a0 => (((x0 x1) /\ (x3 x1 y1)) /\ (x2 = (@pair a1 a0 x1 y1))) \/ ((x2 = (@pair a1 a0 x4 y1)) /\ (x3 x4 y1))) y0)).
Definition term361 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : prod a1 a0) (x2 : type1470 a0 a1) (x3 : a1) := @eq Prop ((forall y0 : a1, forall y1 : a0, (((~ (y0 = x3)) /\ (~ (x0 y0))) \/ (~ (x2 y0 y1))) \/ (~ (x1 = (@pair a1 a0 y0 y1)))) /\ (exists y0 : a1, exists y1 : a0, (((x0 y0) /\ (x2 y0 y1)) /\ (x1 = (@pair a1 a0 y0 y1))) \/ ((x1 = (@pair a1 a0 x3 y1)) /\ (x2 x3 y1)))).
Definition term360 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : prod a1 a0) (x2 : type1470 a0 a1) (x3 : a1) := @eq Prop ((forall y0 : a1, forall y1 : a0, (((~ (y0 = x3)) /\ (~ (x0 y0))) \/ (~ (x2 y0 y1))) \/ (~ (x1 = (@pair a1 a0 y0 y1)))) /\ (exists y0 : a1, (fun y1 : a1 => exists y2 : a0, (((x0 y1) /\ (x2 y1 y2)) /\ (x1 = (@pair a1 a0 y1 y2))) \/ ((x1 = (@pair a1 a0 x3 y2)) /\ (x2 x3 y2))) y0)).
Definition term2065 (a0 : Type') (x0 : type686 a0) (x1 : type686 a0) (x2 : type686 a0) := imp ((x1 = x0) /\ (x1 = x2)).
Definition term735 (a0 : Type') (a1 : Type') (x0 : type1413 a0 a1) (x1 : nat) := forall y0 : a0, (@IN a0 y0 (@EMPTY a0)) -> @HAS_SIZE a1 (x0 y0) x1.
Definition term511 (a0 : Type') (x0 : a0 -> Prop) (x1 : a0 -> Prop) := forall y0 : a0, (x0 y0) /\ (x1 y0).
Definition term1011 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : type1413 a0 a1) (x2 : a0) (x3 : nat) := ((x0 = x2) -> (@HAS_SIZE a1 (x1 x0) x3) = (@HAS_SIZE a1 (x1 x2) x3)) -> ((x0 = x2) -> @HAS_SIZE a1 (x1 x0) x3) = ((x0 = x2) -> @HAS_SIZE a1 (x1 x2) x3).
Definition term1074 (a0 : Type') (a1 : Type') (x0 : type1413 a0 a1) (x1 : a0) (x2 : a0 -> Prop) (x3 : nat) := ((@HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y0 : prod a0 a1 => exists y1 : a0, exists y2 : a1, @SETSPEC (prod a0 a1) y0 ((@IN a0 y1 x2) /\ (@IN a1 y2 (x0 y1))) (@pair a0 a1 y1 y2))) (Nat.mul (@CARD a0 x2) x3)) /\ ((@HAS_SIZE (prod a0 a1) (@IMAGE a1 (prod a0 a1) (fun y0 : a1 => @pair a0 a1 x1 y0) (x0 x1)) x3) /\ (@DISJOINT (prod a0 a1) (@GSPEC (prod a0 a1) (fun y0 : prod a0 a1 => exists y1 : a0, exists y2 : a1, @SETSPEC (prod a0 a1) y0 ((@IN a0 y1 x2) /\ (@IN a1 y2 (x0 y1))) (@pair a0 a1 y1 y2))) (@IMAGE a1 (prod a0 a1) (fun y0 : a1 => @pair a0 a1 x1 y0) (x0 x1))))) -> @HAS_SIZE (prod a0 a1) (@UNION (prod a0 a1) (@GSPEC (prod a0 a1) (fun y0 : prod a0 a1 => exists y1 : a0, exists y2 : a1, @SETSPEC (prod a0 a1) y0 ((@IN a0 y1 x2) /\ (@IN a1 y2 (x0 y1))) (@pair a0 a1 y1 y2))) (@IMAGE a1 (prod a0 a1) (fun y0 : a1 => @pair a0 a1 x1 y0) (x0 x1))) (Nat.add (Nat.mul (@CARD a0 x2) x3) x3).
Definition term1865 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a0) (x2 : a1) (x3 : a1) := and ((fun y0 : a1 => ((@pair a0 a1 x0 x2) = (@pair a0 a1 x1 y0)) \/ ((~ (x0 = x1)) \/ (~ (x2 = y0)))) x3).
Definition term1092 (a0 : Type') (a1 : Type') (x0 : a0 -> a1) (x1 : a0 -> Prop) (x2 : nat) := (forall y0 : a0, forall y1 : a0, ((@IN a0 y0 x1) /\ ((@IN a0 y1 x1) /\ ((x0 y0) = (x0 y1)))) -> y0 = y1) /\ (@HAS_SIZE a0 x1 x2).
Definition term1734 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) := fun y0 : type619 a0 a1 => (fun y1 : type619 a0 a1 => exists y2 : type620 a0 a1, forall y3 : a0 -> Prop, forall y4 : type1413 a0 a1, forall y5 : prod a0 a1, (~ (x0 y3 y4 y5)) \/ (@SETSPEC (prod a0 a1) y5 ((@IN a0 (y1 y3 y4 y5) y3) /\ (@IN a1 (y2 y3 y4 y5) (y4 (y1 y3 y4 y5)))) (@pair a0 a1 (y1 y3 y4 y5) (y2 y3 y4 y5)))) y0.
Definition term428 (a0 : Type') (a1 : Type') (x0 : a1) (x1 : a1 -> Prop) (x2 : type1470 a0 a1) (x3 : prod a1 a0) (x4 : a1) := forall y0 : a0, (((~ (x4 = x0)) \/ (~ (x2 x4 y0))) \/ (~ (x3 = (@pair a1 a0 x4 y0)))) /\ (((~ (x1 x4)) \/ (~ (x2 x4 y0))) \/ (~ (x3 = (@pair a1 a0 x4 y0)))).
Definition term137 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : type1470 a0 a1) (x2 : a1) (x3 : a0) := (x0 x2) /\ (x1 x2 x3).
Definition term1720 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : type619 a0 a1) (x2 : type620 a0 a1) := fun y0 : a0 -> Prop => forall y1 : type1413 a0 a1, forall y2 : prod a0 a1, (~ (x0 y0 y1 y2)) \/ (@SETSPEC (prod a0 a1) y2 ((@IN a0 (x1 y0 y1 y2) y0) /\ (@IN a1 (x2 y0 y1 y2) (y1 (x1 y0 y1 y2)))) (@pair a0 a1 (x1 y0 y1 y2) (x2 y0 y1 y2))).
Definition term1526 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) := fun y0 : a0 -> Prop => forall y1 : type1413 a0 a1, forall y2 : prod a0 a1, (~ (x0 y0 y1 y2)) \/ (exists y3 : a0, exists y4 : a1, @SETSPEC (prod a0 a1) y2 ((@IN a0 y3 y0) /\ (@IN a1 y4 (y1 y3))) (@pair a0 a1 y3 y4)).
Definition term1525 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) := fun y0 : a0 -> Prop => forall y1 : type1413 a0 a1, forall y2 : prod a0 a1, (x0 y0 y1 y2) \/ (forall y3 : a0, forall y4 : a1, ~ (@SETSPEC (prod a0 a1) y2 ((@IN a0 y3 y0) /\ (@IN a1 y4 (y1 y3))) (@pair a0 a1 y3 y4))).
Definition term1471 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) := fun y0 : a0 -> Prop => forall y1 : type1413 a0 a1, forall y2 : prod a0 a1, ((x0 y0 y1 y2) \/ (forall y3 : a0, forall y4 : a1, ~ (@SETSPEC (prod a0 a1) y2 ((@IN a0 y3 y0) /\ (@IN a1 y4 (y1 y3))) (@pair a0 a1 y3 y4)))) /\ ((~ (x0 y0 y1 y2)) \/ (exists y3 : a0, exists y4 : a1, @SETSPEC (prod a0 a1) y2 ((@IN a0 y3 y0) /\ (@IN a1 y4 (y1 y3))) (@pair a0 a1 y3 y4))).
Definition term1433 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) := fun y0 : a0 -> Prop => forall y1 : type1413 a0 a1, forall y2 : prod a0 a1, (x0 y0 y1 y2) = (exists y3 : a0, exists y4 : a1, @SETSPEC (prod a0 a1) y2 ((@IN a0 y3 y0) /\ (@IN a1 y4 (y1 y3))) (@pair a0 a1 y3 y4)).
Definition term1060 (x0 : nat) (x1 : Prop) := (x0 = x0) -> x1.
Definition term1927 (a0 : Type') (a1 : Type') := (forall y0 : a0, (fun y1 : a0 => forall y2 : a1, forall y3 : a0, forall y4 : a1, ((@pair a0 a1 y1 y2) = (@pair a0 a1 y3 y4)) \/ ((~ (y1 = y3)) \/ (~ (y2 = y4)))) y0) /\ (forall y0 : a0, (fun y1 : a0 => forall y2 : a1, forall y3 : a0, forall y4 : a1, (~ ((@pair a0 a1 y1 y2) = (@pair a0 a1 y3 y4))) \/ ((y1 = y3) /\ (y2 = y4))) y0).
Definition term1883 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a1) := (forall y0 : a0, (fun y1 : a0 => forall y2 : a1, ((@pair a0 a1 x0 x1) = (@pair a0 a1 y1 y2)) \/ ((~ (x0 = y1)) \/ (~ (x1 = y2)))) y0) /\ (forall y0 : a0, (fun y1 : a0 => forall y2 : a1, (~ ((@pair a0 a1 x0 x1) = (@pair a0 a1 y1 y2))) \/ ((x0 = y1) /\ (x1 = y2))) y0).
Definition term981 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a0 -> Prop) (x2 : type1413 a0 a1) (x3 : nat) := (forall y0 : a0, (fun y1 : a0 => (y1 = x0) -> @HAS_SIZE a1 (x2 y1) x3) y0) /\ (forall y0 : a0, (fun y1 : a0 => (@IN a0 y1 x1) -> @HAS_SIZE a1 (x2 y1) x3) y0).
Definition term1148 (a0 : Type') (a1 : Type') (x0 : type1413 a0 a1) (x1 : a0) (x2 : nat) := and (@HAS_SIZE (prod a0 a1) (@IMAGE a1 (prod a0 a1) (fun y0 : a1 => @pair a0 a1 x1 y0) (x0 x1)) x2).
Definition term549 (x0 : nat) := Nat.mul (NUMERAL 0) x0.
Definition term525 (x0 : Prop) (x1 : Prop) := (False \/ x0) -> x1.
Definition term1803 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : type1413 a0 a1) (x2 : a0 -> Prop) (x3 : nat) := exists y0 : a0, (fun y1 : nat => fun y2 : a0 => ((@IN a0 y2 x2) /\ (~ (@HAS_SIZE a1 (x1 y2) y1))) \/ (@HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (x0 x2 x1)) (Nat.mul (@CARD a0 x2) y1))) x3 y0.
Definition term1583 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : a0 -> Prop) (x2 : type1413 a0 a1) (x3 : prod a0 a1) := exists y0 : a0, (fun y1 : prod a0 a1 => fun y2 : a0 => exists y3 : a1, (~ (x0 x1 x2 y1)) \/ (@SETSPEC (prod a0 a1) y1 ((@IN a0 y2 x1) /\ (@IN a1 y3 (x2 y2))) (@pair a0 a1 y2 y3))) x3 y0.
Definition term2046 (a0 : Type') (x0 : a0) := (~ ((@I (a0 -> (a0 -> Prop) -> Prop) (@IN a0) x0) = (@I (a0 -> (a0 -> Prop) -> Prop) (@IN a0) x0))) -> (@I (a0 -> (a0 -> Prop) -> Prop) (@IN a0) x0) = (@I (a0 -> (a0 -> Prop) -> Prop) (@IN a0) x0).
Definition term399 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : prod a1 a0) (x2 : type1470 a0 a1) (x3 : a1) := exists y0 : a1, (exists y1 : a0, ((((y0 = x3) \/ (x0 y0)) /\ (x2 y0 y1)) /\ (x1 = (@pair a1 a0 y0 y1))) /\ ((forall y2 : a1, forall y3 : a0, ((~ (x0 y2)) \/ (~ (x2 y2 y3))) \/ (~ (x1 = (@pair a1 a0 y2 y3)))) /\ (forall y2 : a0, (~ (x1 = (@pair a1 a0 x3 y2))) \/ (~ (x2 x3 y2))))) \/ (exists y1 : a0, (forall y2 : a1, forall y3 : a0, (((~ (y2 = x3)) /\ (~ (x0 y2))) \/ (~ (x2 y2 y3))) \/ (~ (x1 = (@pair a1 a0 y2 y3)))) /\ ((((x0 y0) /\ (x2 y0 y1)) /\ (x1 = (@pair a1 a0 y0 y1))) \/ ((x1 = (@pair a1 a0 x3 y1)) /\ (x2 x3 y1)))).
Definition term328 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : prod a1 a0) (x2 : type1470 a0 a1) (x3 : a1) := exists y0 : a1, (exists y1 : a0, ((x0 y0) /\ (x2 y0 y1)) /\ (x1 = (@pair a1 a0 y0 y1))) \/ (exists y1 : a0, (x1 = (@pair a1 a0 x3 y1)) /\ (x2 x3 y1)).
Definition term161 (a0 : Type') (a1 : Type') (x0 : prod a1 a0) (x1 : type1429 a0 a1) (x2 : a0 -> Prop) := exists y0 : a0, (x0 = (x1 y0)) /\ (@IN a0 y0 x2).
Definition term26 (a0 : Type') (a1 : Type') (x0 : a1) (x1 : a0 -> a1) (x2 : a0 -> Prop) := exists y0 : a0, (x0 = (x1 y0)) /\ (@IN a0 y0 x2).
Definition term1682 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) := fun y0 : a0 -> Prop => fun y1 : type464 a0 a1 => exists y2 : type465 a0 a1, forall y3 : type1413 a0 a1, forall y4 : prod a0 a1, (~ (x0 y0 y3 y4)) \/ (@SETSPEC (prod a0 a1) y4 ((@IN a0 (y1 y3 y4) y0) /\ (@IN a1 (y2 y3 y4) (y3 (y1 y3 y4)))) (@pair a0 a1 (y1 y3 y4) (y2 y3 y4))).
Definition term1204 (a0 : Type') (a1 : Type') (x0 : prod a0 a1) (x1 : type1413 a0 a1) (x2 : a0) := fun y0 : a1 => (x0 = (@pair a0 a1 x2 y0)) /\ (@IN a1 y0 (x1 x2)).
Definition term1314 (a0 : Type') (x0 : nat) (x1 : nat) (x2 : a0) (x3 : a0) := (x0 = x1) /\ (x2 = x3).
Definition term461 (a0 : Type') (a1 : Type') (x0 : type1470 a0 a1) (x1 : a1) (x2 : a0) (x3 : a1) (x4 : a0) := (fun y0 : prod a1 a0 => (~ (x1 = x3)) \/ ((~ (x0 x1 x2)) \/ (~ (y0 = (@pair a1 a0 x1 x2))))) (@pair a1 a0 x3 x4).
Definition term1547 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : a0 -> Prop) (x2 : type1413 a0 a1) (x3 : prod a0 a1) := ~ (x0 x1 x2 x3).
Definition term1798 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : type1413 a0 a1) (x2 : a0 -> Prop) := fun y0 : nat => fun y1 : a0 => ((@IN a0 y1 x2) /\ (~ (@HAS_SIZE a1 (x1 y1) y0))) \/ (@HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (x0 x2 x1)) (Nat.mul (@CARD a0 x2) y0)).
Definition term187 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : type1470 a0 a1) (x2 : a1) := (((~ (forall y0 : prod a1 a0, (exists y1 : a1, exists y2 : a0, (((y1 = x2) \/ (x0 y1)) /\ (x1 y1 y2)) /\ (y0 = (@pair a1 a0 y1 y2))) = ((exists y1 : a1, exists y2 : a0, ((x0 y1) /\ (x1 y1 y2)) /\ (y0 = (@pair a1 a0 y1 y2))) \/ (exists y1 : a0, (y0 = (@pair a1 a0 x2 y1)) /\ (x1 x2 y1))))) -> False) -> (~ (forall y0 : prod a1 a0, (exists y1 : a1, exists y2 : a0, (((y1 = x2) \/ (x0 y1)) /\ (x1 y1 y2)) /\ (y0 = (@pair a1 a0 y1 y2))) = ((exists y1 : a1, exists y2 : a0, ((x0 y1) /\ (x1 y1 y2)) /\ (y0 = (@pair a1 a0 y1 y2))) \/ (exists y1 : a0, (y0 = (@pair a1 a0 x2 y1)) /\ (x1 x2 y1))))) -> False) -> ((~ (forall y0 : prod a1 a0, (exists y1 : a1, exists y2 : a0, (((y1 = x2) \/ (x0 y1)) /\ (x1 y1 y2)) /\ (y0 = (@pair a1 a0 y1 y2))) = ((exists y1 : a1, exists y2 : a0, ((x0 y1) /\ (x1 y1 y2)) /\ (y0 = (@pair a1 a0 y1 y2))) \/ (exists y1 : a0, (y0 = (@pair a1 a0 x2 y1)) /\ (x1 x2 y1))))) -> False) -> (~ (forall y0 : prod a1 a0, (exists y1 : a1, exists y2 : a0, (((y1 = x2) \/ (x0 y1)) /\ (x1 y1 y2)) /\ (y0 = (@pair a1 a0 y1 y2))) = ((exists y1 : a1, exists y2 : a0, ((x0 y1) /\ (x1 y1 y2)) /\ (y0 = (@pair a1 a0 y1 y2))) \/ (exists y1 : a0, (y0 = (@pair a1 a0 x2 y1)) /\ (x1 x2 y1))))) -> False.
Definition term866 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a0 -> Prop) (x2 : a1) (x3 : type1413 a0 a1) (x4 : a0) := ((x4 = x0) \/ (@IN a0 x4 x1)) /\ (@IN a1 x2 (x3 x4)).
Definition term944 (a0 : Type') (a1 : Type') (x0 : Prop) (x1 : prod a0 a1) := fun y0 : prod a0 a1 => x0 /\ (x1 = y0).
Definition term1188 (a0 : Type') (a1 : Type') (x0 : prod a0 a1) (x1 : a0 -> Prop) (x2 : type1413 a0 a1) (x3 : a0) := exists y0 : a1, (fun y1 : Prop => fun y2 : prod a0 a1 => y1 /\ (x0 = y2)) ((@IN a0 x3 x1) /\ (@IN a1 y0 (x2 x3))) (@pair a0 a1 x3 y0).
Definition term1528 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : a0 -> Prop) := and ((fun y0 : a0 -> Prop => forall y1 : type1413 a0 a1, forall y2 : prod a0 a1, (x0 y0 y1 y2) \/ (forall y3 : a0, forall y4 : a1, ~ (@SETSPEC (prod a0 a1) y2 ((@IN a0 y3 y0) /\ (@IN a1 y4 (y1 y3))) (@pair a0 a1 y3 y4)))) x1).
Definition term870 (a0 : Type') (a1 : Type') (x0 : prod a0 a1) (x1 : a0) (x2 : a0 -> Prop) (x3 : type1413 a0 a1) (x4 : a0) (x5 : a1) := @SETSPEC (prod a0 a1) x0 (((x4 = x1) \/ (@IN a0 x4 x2)) /\ (@IN a1 x5 (x3 x4))) (@pair a0 a1 x4 x5).
Definition term869 (a0 : Type') (a1 : Type') (x0 : prod a0 a1) (x1 : a0) (x2 : a0 -> Prop) (x3 : type1413 a0 a1) (x4 : a0) (x5 : a1) := @SETSPEC (prod a0 a1) x0 ((@IN a0 x4 (@INSERT a0 x1 x2)) /\ (@IN a1 x5 (x3 x4))) (@pair a0 a1 x4 x5).
Definition term442 (a0 : Type') (a1 : Type') (x0 : prod a1 a0) (x1 : a1) (x2 : a0) := @eq Prop (x0 = (@pair a1 a0 x1 x2)).
Definition term1149 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : type1413 a0 a1) (x2 : a0) := @DISJOINT (prod a0 a1) (@GSPEC (prod a0 a1) (fun y0 : prod a0 a1 => exists y1 : a0, exists y2 : a1, @SETSPEC (prod a0 a1) y0 ((@IN a0 y1 x0) /\ (@IN a1 y2 (x1 y1))) (@pair a0 a1 y1 y2))) (@IMAGE a1 (prod a0 a1) (fun y0 : a1 => @pair a0 a1 x2 y0) (x1 x2)).
Definition term450 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : type1470 a0 a1) (x2 : a1) (x3 : a0) := (~ ((@pair a1 a0 x2 x0) = (@pair a1 a0 x2 x3))) \/ (~ (x1 x2 x3)).
Definition term1967 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a1) := fun y0 : a0 => forall y1 : a1, ((@I (a1 -> prod a0 a1) (@I (a0 -> a1 -> prod a0 a1) (@pair a0 a1) x0) x1) = (@I (a1 -> prod a0 a1) (@I (a0 -> a1 -> prod a0 a1) (@pair a0 a1) y0) y1)) \/ ((~ (x0 = y0)) \/ (~ (x1 = y1))).
Definition term1884 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a1) := fun y0 : a0 => forall y1 : a1, ((@pair a0 a1 x0 x1) = (@pair a0 a1 y0 y1)) \/ ((~ (x0 = y0)) \/ (~ (x1 = y1))).
Definition term1683 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : a0 -> Prop) := (fun y0 : a0 -> Prop => fun y1 : type464 a0 a1 => exists y2 : type465 a0 a1, forall y3 : type1413 a0 a1, forall y4 : prod a0 a1, (~ (x0 y0 y3 y4)) \/ (@SETSPEC (prod a0 a1) y4 ((@IN a0 (y1 y3 y4) y0) /\ (@IN a1 (y2 y3 y4) (y3 (y1 y3 y4)))) (@pair a0 a1 (y1 y3 y4) (y2 y3 y4)))) x1.
Definition term1444 (a0 : Type') (a1 : Type') (x0 : prod a0 a1) (x1 : a0 -> Prop) (x2 : type1413 a0 a1) (x3 : a0) := forall y0 : a1, ~ ((fun y1 : a1 => @SETSPEC (prod a0 a1) x0 ((@IN a0 x3 x1) /\ (@IN a1 y1 (x2 x3))) (@pair a0 a1 x3 y1)) y0).
Definition term249 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : type1470 a0 a1) (x2 : prod a1 a0) := forall y0 : a1, ~ ((fun y1 : a1 => exists y2 : a0, ((x0 y1) /\ (x1 y1 y2)) /\ (x2 = (@pair a1 a0 y1 y2))) y0).
Definition term228 (a0 : Type') (a1 : Type') (x0 : a1) (x1 : a1 -> Prop) (x2 : type1470 a0 a1) (x3 : prod a1 a0) := forall y0 : a1, ~ ((fun y1 : a1 => exists y2 : a0, (((y1 = x0) \/ (x1 y1)) /\ (x2 y1 y2)) /\ (x3 = (@pair a1 a0 y1 y2))) y0).
Definition term1533 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) := @eq Prop (forall y0 : a0 -> Prop, (forall y1 : type1413 a0 a1, forall y2 : prod a0 a1, (x0 y0 y1 y2) \/ (forall y3 : a0, forall y4 : a1, ~ (@SETSPEC (prod a0 a1) y2 ((@IN a0 y3 y0) /\ (@IN a1 y4 (y1 y3))) (@pair a0 a1 y3 y4)))) /\ (forall y1 : type1413 a0 a1, forall y2 : prod a0 a1, (~ (x0 y0 y1 y2)) \/ (exists y3 : a0, exists y4 : a1, @SETSPEC (prod a0 a1) y2 ((@IN a0 y3 y0) /\ (@IN a1 y4 (y1 y3))) (@pair a0 a1 y3 y4)))).
Definition term1509 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : a0 -> Prop) := @eq Prop (forall y0 : type1413 a0 a1, (forall y1 : prod a0 a1, (x0 x1 y0 y1) \/ (forall y2 : a0, forall y3 : a1, ~ (@SETSPEC (prod a0 a1) y1 ((@IN a0 y2 x1) /\ (@IN a1 y3 (y0 y2))) (@pair a0 a1 y2 y3)))) /\ (forall y1 : prod a0 a1, (~ (x0 x1 y0 y1)) \/ (exists y2 : a0, exists y3 : a1, @SETSPEC (prod a0 a1) y1 ((@IN a0 y2 x1) /\ (@IN a1 y3 (y0 y2))) (@pair a0 a1 y2 y3)))).
Definition term665 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : nat) := @eq Prop (forall y0 : type1413 a0 a1, ((@CARD a0 x0) = x1) -> forall y1 : nat, (forall y2 : a0, (@IN a0 y2 x0) -> @HAS_SIZE a1 (y0 y2) y1) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y2 : prod a0 a1 => exists y3 : a0, exists y4 : a1, @SETSPEC (prod a0 a1) y2 ((@IN a0 y3 x0) /\ (@IN a1 y4 (y0 y3))) (@pair a0 a1 y3 y4))) (Nat.mul x1 y1)).
Definition term1113 (a0 : Type') (a1 : Type') (x0 : type1413 a0 a1) (x1 : a0) (x2 : nat) := ((forall y0 : a1, forall y1 : a1, ((@IN a1 y0 (x0 x1)) /\ ((@IN a1 y1 (x0 x1)) /\ (((fun y2 : a1 => @pair a0 a1 x1 y2) y0) = ((fun y2 : a1 => @pair a0 a1 x1 y2) y1)))) -> y0 = y1) /\ (@HAS_SIZE a1 (x0 x1) x2)) -> (@HAS_SIZE (prod a0 a1) (@IMAGE a1 (prod a0 a1) (fun y0 : a1 => @pair a0 a1 x1 y0) (x0 x1)) x2) = True.
Definition term1412 (a0 : Type') (a1 : Type') (x0 : type466 a0 a1) (x1 : type466 a0 a1) := forall y0 : type1413 a0 a1, (x0 y0) = (x1 y0).
Definition term1403 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : type621 a0 a1) := forall y0 : a0 -> Prop, (x0 y0) = (x1 y0).
Definition term1387 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) := (x0 = (fun y0 : a0 -> Prop => fun y1 : type1413 a0 a1 => fun y2 : prod a0 a1 => exists y3 : a0, exists y4 : a1, @SETSPEC (prod a0 a1) y2 ((@IN a0 y3 y0) /\ (@IN a1 y4 (y1 y3))) (@pair a0 a1 y3 y4))) -> (forall y0 : a0, forall y1 : type1413 a0 a1, forall y2 : a1, forall y3 : prod a0 a1, forall y4 : a1, forall y5 : a0, forall y6 : a0 -> Prop, forall y7 : nat, forall y8 : nat, (~ (@IN a0 y0 y6)) -> (@FINITE a0 y6) -> (y8 = (S (@CARD a0 y6))) -> (@HAS_SIZE a1 (y1 y0) y7) -> (forall y9 : a0, (@IN a0 y9 y6) -> @HAS_SIZE a1 (y1 y9) y7) -> (forall y9 : type1413 a0 a1, forall y10 : nat, (forall y11 : a0, (@IN a0 y11 y6) -> @HAS_SIZE a1 (y9 y11) y10) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y11 : prod a0 a1 => exists y12 : a0, exists y13 : a1, @SETSPEC (prod a0 a1) y11 ((@IN a0 y12 y6) /\ (@IN a1 y13 (y9 y12))) (@pair a0 a1 y12 y13))) (Nat.mul (@CARD a0 y6) y10)) -> (@IN a0 y5 y6) -> (@IN a1 y4 (y1 y5)) -> (y3 = (@pair a0 a1 y5 y4)) -> (y3 = (@pair a0 a1 y0 y2)) -> (@IN a1 y2 (y1 y0)) -> (forall y9 : a0, forall y10 : a1, forall y11 : a0, forall y12 : a1, ((@pair a0 a1 y9 y10) = (@pair a0 a1 y11 y12)) = ((y9 = y11) /\ (y10 = y12))) -> (forall y9 : a0, forall y10 : nat, forall y11 : a0, forall y12 : nat, ((@pair a0 nat y9 y10) = (@pair a0 nat y11 y12)) = ((y9 = y11) /\ (y10 = y12))) -> (forall y9 : a0, forall y10 : prod a0 a1, forall y11 : a0, forall y12 : prod a0 a1, ((@pair a0 (prod a0 a1) y9 y10) = (@pair a0 (prod a0 a1) y11 y12)) = ((y9 = y11) /\ (y10 = y12))) -> (forall y9 : nat, forall y10 : a1, forall y11 : nat, forall y12 : a1, ((@pair nat a1 y9 y10) = (@pair nat a1 y11 y12)) = ((y9 = y11) /\ (y10 = y12))) -> ~ (forall y9 : prod a0 a1, forall y10 : a1, forall y11 : prod a0 a1, forall y12 : a1, ((@pair (prod a0 a1) a1 y9 y10) = (@pair (prod a0 a1) a1 y11 y12)) = ((y9 = y11) /\ (y10 = y12)))) = ((fun y0 : type621 a0 a1 => forall y1 : a0, forall y2 : type1413 a0 a1, forall y3 : a1, forall y4 : prod a0 a1, forall y5 : a1, forall y6 : a0, forall y7 : a0 -> Prop, forall y8 : nat, forall y9 : nat, (~ (@IN a0 y1 y7)) -> (@FINITE a0 y7) -> (y9 = (S (@CARD a0 y7))) -> (@HAS_SIZE a1 (y2 y1) y8) -> (forall y10 : a0, (@IN a0 y10 y7) -> @HAS_SIZE a1 (y2 y10) y8) -> (forall y10 : type1413 a0 a1, forall y11 : nat, (forall y12 : a0, (@IN a0 y12 y7) -> @HAS_SIZE a1 (y10 y12) y11) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (y0 y7 y10)) (Nat.mul (@CARD a0 y7) y11)) -> (@IN a0 y6 y7) -> (@IN a1 y5 (y2 y6)) -> (y4 = (@pair a0 a1 y6 y5)) -> (y4 = (@pair a0 a1 y1 y3)) -> (@IN a1 y3 (y2 y1)) -> (forall y10 : a0, forall y11 : a1, forall y12 : a0, forall y13 : a1, ((@pair a0 a1 y10 y11) = (@pair a0 a1 y12 y13)) = ((y10 = y12) /\ (y11 = y13))) -> (forall y10 : a0, forall y11 : nat, forall y12 : a0, forall y13 : nat, ((@pair a0 nat y10 y11) = (@pair a0 nat y12 y13)) = ((y10 = y12) /\ (y11 = y13))) -> (forall y10 : a0, forall y11 : prod a0 a1, forall y12 : a0, forall y13 : prod a0 a1, ((@pair a0 (prod a0 a1) y10 y11) = (@pair a0 (prod a0 a1) y12 y13)) = ((y10 = y12) /\ (y11 = y13))) -> (forall y10 : nat, forall y11 : a1, forall y12 : nat, forall y13 : a1, ((@pair nat a1 y10 y11) = (@pair nat a1 y12 y13)) = ((y10 = y12) /\ (y11 = y13))) -> ~ (forall y10 : prod a0 a1, forall y11 : a1, forall y12 : prod a0 a1, forall y13 : a1, ((@pair (prod a0 a1) a1 y10 y11) = (@pair (prod a0 a1) a1 y12 y13)) = ((y10 = y12) /\ (y11 = y13)))) x0).
Definition term47 (x0 : Prop) (x1 : Prop) (x2 : Prop) := (fun y0 : Prop => (x0 \/ (x1 \/ y0)) = ((x0 \/ x1) \/ y0)) x2.
Definition term296 (a0 : Type') (a1 : Type') (x0 : a1) (x1 : a1 -> Prop) (x2 : prod a1 a0) (x3 : type1470 a0 a1) (x4 : a1) := (exists y0 : a0, (fun y1 : a0 => (((x0 = x4) \/ (x1 x0)) /\ (x3 x0 y1)) /\ (x2 = (@pair a1 a0 x0 y1))) y0) /\ ((forall y0 : a1, forall y1 : a0, ((~ (x1 y0)) \/ (~ (x3 y0 y1))) \/ (~ (x2 = (@pair a1 a0 y0 y1)))) /\ (forall y0 : a0, (~ (x2 = (@pair a1 a0 x4 y0))) \/ (~ (x3 x4 y0)))).
Definition term282 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : prod a1 a0) (x2 : type1470 a0 a1) (x3 : a1) := (exists y0 : a1, (fun y1 : a1 => exists y2 : a0, (((y1 = x3) \/ (x0 y1)) /\ (x2 y1 y2)) /\ (x1 = (@pair a1 a0 y1 y2))) y0) /\ ((forall y0 : a1, forall y1 : a0, ((~ (x0 y0)) \/ (~ (x2 y0 y1))) \/ (~ (x1 = (@pair a1 a0 y0 y1)))) /\ (forall y0 : a0, (~ (x1 = (@pair a1 a0 x3 y0))) \/ (~ (x2 x3 y0)))).
Definition term266 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : prod a1 a0) (x2 : type1470 a0 a1) (x3 : a1) := (~ (exists y0 : a1, exists y1 : a0, ((x0 y0) /\ (x2 y0 y1)) /\ (x1 = (@pair a1 a0 y0 y1)))) /\ (~ (exists y0 : a0, (x1 = (@pair a1 a0 x3 y0)) /\ (x2 x3 y0))).
Definition term1308 (a0 : Type') (a1 : Type') (x0 : prod a0 a1) (x1 : prod a0 a1) (x2 : a1) := forall y0 : a1, ((@pair (prod a0 a1) a1 x0 x2) = (@pair (prod a0 a1) a1 x1 y0)) = ((x0 = x1) /\ (x2 = y0)).
Definition term1083 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a0) (x2 : a1) := forall y0 : a1, ((@pair a0 a1 x0 x2) = (@pair a0 a1 x1 y0)) = ((x0 = x1) /\ (x2 = y0)).
Definition term439 (a0 : Type') (a1 : Type') (x0 : prod a1 a0) (x1 : a0) := fun y0 : a1 => x0 = (@pair a1 a0 y0 x1).
Definition term1609 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : a0 -> Prop) (x2 : type1413 a0 a1) (x3 : type1207 a0 a1) := fun y0 : prod a0 a1 => exists y1 : a1, (fun y2 : prod a0 a1 => fun y3 : a1 => (~ (x0 x1 x2 y2)) \/ (@SETSPEC (prod a0 a1) y2 ((@IN a0 (x3 y2) x1) /\ (@IN a1 y3 (x2 (x3 y2)))) (@pair a0 a1 (x3 y2) y3))) y0 y1.
Definition term828 (a0 : Type') (x0 : a0) (x1 : a0 -> Prop) (x2 : Prop) (x3 : nat) (x4 : nat) := ((@IN a0 x0 x1) = x2) -> (x2 -> (@CARD a0 x1) = x3) -> ((~ x2) -> (S (@CARD a0 x1)) = x4) -> (@COND nat (@IN a0 x0 x1) (@CARD a0 x1) (S (@CARD a0 x1))) = (@COND nat x2 x3 x4).
Definition term569 (a0 : Type') := (forall y0 : type686 a0, ((y0 (@EMPTY a0)) /\ (forall y1 : a0, forall y2 : a0 -> Prop, ((y0 y2) /\ ((~ (@IN a0 y1 y2)) /\ (@FINITE a0 y2))) -> y0 (@INSERT a0 y1 y2))) -> forall y1 : a0 -> Prop, (@FINITE a0 y1) -> y0 y1) -> forall y0 : type686 a0, ((y0 (@EMPTY a0)) /\ (forall y1 : a0, forall y2 : a0 -> Prop, ((y0 y2) /\ ((~ (@IN a0 y1 y2)) /\ (@FINITE a0 y2))) -> y0 (@INSERT a0 y1 y2))) -> forall y1 : a0 -> Prop, (@FINITE a0 y1) -> y0 y1.
Definition term366 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : prod a1 a0) (x2 : type1470 a0 a1) (x3 : a1) := exists y0 : a1, (forall y1 : a1, forall y2 : a0, (((~ (y1 = x3)) /\ (~ (x0 y1))) \/ (~ (x2 y1 y2))) \/ (~ (x1 = (@pair a1 a0 y1 y2)))) /\ (exists y1 : a0, (((x0 y0) /\ (x2 y0 y1)) /\ (x1 = (@pair a1 a0 y0 y1))) \/ ((x1 = (@pair a1 a0 x3 y1)) /\ (x2 x3 y1))).
Definition term248 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : type1470 a0 a1) (x2 : prod a1 a0) := ~ (exists y0 : a1, exists y1 : a0, ((x0 y0) /\ (x1 y0 y1)) /\ (x2 = (@pair a1 a0 y0 y1))).
Definition term227 (a0 : Type') (a1 : Type') (x0 : a1) (x1 : a1 -> Prop) (x2 : type1470 a0 a1) (x3 : prod a1 a0) := ~ (exists y0 : a1, exists y1 : a0, (((y0 = x0) \/ (x1 y0)) /\ (x2 y0 y1)) /\ (x3 = (@pair a1 a0 y0 y1))).
Definition term1615 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : a0 -> Prop) (x2 : type1413 a0 a1) (x3 : type1207 a0 a1) (x4 : type1208 a0 a1) := fun y0 : prod a0 a1 => (fun y1 : prod a0 a1 => fun y2 : a1 => (~ (x0 x1 x2 y1)) \/ (@SETSPEC (prod a0 a1) y1 ((@IN a0 (x3 y1) x1) /\ (@IN a1 y2 (x2 (x3 y1)))) (@pair a0 a1 (x3 y1) y2))) y0 (x4 y0).
Definition term1220 (a0 : Type') (a1 : Type') (x0 : nat) (x1 : nat) (x2 : a0 -> Prop) (x3 : a0) (x4 : a1) (x5 : prod a0 a1) (x6 : a1) (x7 : type1413 a0 a1) (x8 : a0) := (((~ (@IN a0 x8 x2)) -> (@FINITE a0 x2) -> (x0 = (S (@CARD a0 x2))) -> (@HAS_SIZE a1 (x7 x8) x1) -> (forall y0 : a0, (@IN a0 y0 x2) -> @HAS_SIZE a1 (x7 y0) x1) -> (forall y0 : type1413 a0 a1, forall y1 : nat, (forall y2 : a0, (@IN a0 y2 x2) -> @HAS_SIZE a1 (y0 y2) y1) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y2 : prod a0 a1 => exists y3 : a0, exists y4 : a1, @SETSPEC (prod a0 a1) y2 ((@IN a0 y3 x2) /\ (@IN a1 y4 (y0 y3))) (@pair a0 a1 y3 y4))) (Nat.mul (@CARD a0 x2) y1)) -> (@IN a0 x3 x2) -> (@IN a1 x4 (x7 x3)) -> (x5 = (@pair a0 a1 x3 x4)) -> (x5 = (@pair a0 a1 x8 x6)) -> (@IN a1 x6 (x7 x8)) -> (forall y0 : a0, forall y1 : a1, forall y2 : a0, forall y3 : a1, ((@pair a0 a1 y0 y1) = (@pair a0 a1 y2 y3)) = ((y0 = y2) /\ (y1 = y3))) -> (forall y0 : a0, forall y1 : nat, forall y2 : a0, forall y3 : nat, ((@pair a0 nat y0 y1) = (@pair a0 nat y2 y3)) = ((y0 = y2) /\ (y1 = y3))) -> (forall y0 : a0, forall y1 : prod a0 a1, forall y2 : a0, forall y3 : prod a0 a1, ((@pair a0 (prod a0 a1) y0 y1) = (@pair a0 (prod a0 a1) y2 y3)) = ((y0 = y2) /\ (y1 = y3))) -> (forall y0 : nat, forall y1 : a1, forall y2 : nat, forall y3 : a1, ((@pair nat a1 y0 y1) = (@pair nat a1 y2 y3)) = ((y0 = y2) /\ (y1 = y3))) -> (forall y0 : prod a0 a1, forall y1 : a1, forall y2 : prod a0 a1, forall y3 : a1, ((@pair (prod a0 a1) a1 y0 y1) = (@pair (prod a0 a1) a1 y2 y3)) = ((y0 = y2) /\ (y1 = y3))) -> False) -> (~ (@IN a0 x8 x2)) -> (@FINITE a0 x2) -> (x0 = (S (@CARD a0 x2))) -> (@HAS_SIZE a1 (x7 x8) x1) -> (forall y0 : a0, (@IN a0 y0 x2) -> @HAS_SIZE a1 (x7 y0) x1) -> (forall y0 : type1413 a0 a1, forall y1 : nat, (forall y2 : a0, (@IN a0 y2 x2) -> @HAS_SIZE a1 (y0 y2) y1) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y2 : prod a0 a1 => exists y3 : a0, exists y4 : a1, @SETSPEC (prod a0 a1) y2 ((@IN a0 y3 x2) /\ (@IN a1 y4 (y0 y3))) (@pair a0 a1 y3 y4))) (Nat.mul (@CARD a0 x2) y1)) -> (@IN a0 x3 x2) -> (@IN a1 x4 (x7 x3)) -> (x5 = (@pair a0 a1 x3 x4)) -> (x5 = (@pair a0 a1 x8 x6)) -> (@IN a1 x6 (x7 x8)) -> (forall y0 : a0, forall y1 : a1, forall y2 : a0, forall y3 : a1, ((@pair a0 a1 y0 y1) = (@pair a0 a1 y2 y3)) = ((y0 = y2) /\ (y1 = y3))) -> (forall y0 : a0, forall y1 : nat, forall y2 : a0, forall y3 : nat, ((@pair a0 nat y0 y1) = (@pair a0 nat y2 y3)) = ((y0 = y2) /\ (y1 = y3))) -> (forall y0 : a0, forall y1 : prod a0 a1, forall y2 : a0, forall y3 : prod a0 a1, ((@pair a0 (prod a0 a1) y0 y1) = (@pair a0 (prod a0 a1) y2 y3)) = ((y0 = y2) /\ (y1 = y3))) -> (forall y0 : nat, forall y1 : a1, forall y2 : nat, forall y3 : a1, ((@pair nat a1 y0 y1) = (@pair nat a1 y2 y3)) = ((y0 = y2) /\ (y1 = y3))) -> (forall y0 : prod a0 a1, forall y1 : a1, forall y2 : prod a0 a1, forall y3 : a1, ((@pair (prod a0 a1) a1 y0 y1) = (@pair (prod a0 a1) a1 y2 y3)) = ((y0 = y2) /\ (y1 = y3))) -> False) -> (~ (@IN a0 x8 x2)) -> (@FINITE a0 x2) -> (x0 = (S (@CARD a0 x2))) -> (@HAS_SIZE a1 (x7 x8) x1) -> (forall y0 : a0, (@IN a0 y0 x2) -> @HAS_SIZE a1 (x7 y0) x1) -> (forall y0 : type1413 a0 a1, forall y1 : nat, (forall y2 : a0, (@IN a0 y2 x2) -> @HAS_SIZE a1 (y0 y2) y1) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y2 : prod a0 a1 => exists y3 : a0, exists y4 : a1, @SETSPEC (prod a0 a1) y2 ((@IN a0 y3 x2) /\ (@IN a1 y4 (y0 y3))) (@pair a0 a1 y3 y4))) (Nat.mul (@CARD a0 x2) y1)) -> (@IN a0 x3 x2) -> (@IN a1 x4 (x7 x3)) -> (x5 = (@pair a0 a1 x3 x4)) -> (x5 = (@pair a0 a1 x8 x6)) -> (@IN a1 x6 (x7 x8)) -> (forall y0 : a0, forall y1 : a1, forall y2 : a0, forall y3 : a1, ((@pair a0 a1 y0 y1) = (@pair a0 a1 y2 y3)) = ((y0 = y2) /\ (y1 = y3))) -> (forall y0 : a0, forall y1 : nat, forall y2 : a0, forall y3 : nat, ((@pair a0 nat y0 y1) = (@pair a0 nat y2 y3)) = ((y0 = y2) /\ (y1 = y3))) -> (forall y0 : a0, forall y1 : prod a0 a1, forall y2 : a0, forall y3 : prod a0 a1, ((@pair a0 (prod a0 a1) y0 y1) = (@pair a0 (prod a0 a1) y2 y3)) = ((y0 = y2) /\ (y1 = y3))) -> (forall y0 : nat, forall y1 : a1, forall y2 : nat, forall y3 : a1, ((@pair nat a1 y0 y1) = (@pair nat a1 y2 y3)) = ((y0 = y2) /\ (y1 = y3))) -> (forall y0 : prod a0 a1, forall y1 : a1, forall y2 : prod a0 a1, forall y3 : a1, ((@pair (prod a0 a1) a1 y0 y1) = (@pair (prod a0 a1) a1 y2 y3)) = ((y0 = y2) /\ (y1 = y3))) -> False.
Definition term1007 (a0 : Type') (a1 : Type') (x0 : type1413 a0 a1) (x1 : nat) (x2 : a0) (x3 : a0) (x4 : Prop) := ((x2 = x3) = (x2 = x3)) -> ((x2 = x3) -> (@HAS_SIZE a1 (x0 x2) x1) = x4) -> ((x2 = x3) -> @HAS_SIZE a1 (x0 x2) x1) = ((x2 = x3) -> x4).
Definition term152 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : type1470 a0 a1) (x2 : prod a1 a0) (x3 : a1) := fun y0 : a0 => ((x0 x3) /\ (x1 x3 y0)) /\ (x2 = (@pair a1 a0 x3 y0)).
Definition term1935 (a0 : Type') (a1 : Type') := @eq Prop (forall y0 : a0, ((fun y1 : a0 => forall y2 : a1, forall y3 : a0, forall y4 : a1, ((@pair a0 a1 y1 y2) = (@pair a0 a1 y3 y4)) \/ ((~ (y1 = y3)) \/ (~ (y2 = y4)))) y0) /\ ((fun y1 : a0 => forall y2 : a1, forall y3 : a0, forall y4 : a1, (~ ((@pair a0 a1 y1 y2) = (@pair a0 a1 y3 y4))) \/ ((y1 = y3) /\ (y2 = y4))) y0)).
Definition term1891 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a1) := @eq Prop (forall y0 : a0, ((fun y1 : a0 => forall y2 : a1, ((@pair a0 a1 x0 x1) = (@pair a0 a1 y1 y2)) \/ ((~ (x0 = y1)) \/ (~ (x1 = y2)))) y0) /\ ((fun y1 : a0 => forall y2 : a1, (~ ((@pair a0 a1 x0 x1) = (@pair a0 a1 y1 y2))) \/ ((x0 = y1) /\ (x1 = y2))) y0)).
Definition term992 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a0 -> Prop) (x2 : type1413 a0 a1) (x3 : nat) := @eq Prop (forall y0 : a0, ((fun y1 : a0 => (y1 = x0) -> @HAS_SIZE a1 (x2 y1) x3) y0) /\ ((fun y1 : a0 => (@IN a0 y1 x1) -> @HAS_SIZE a1 (x2 y1) x3) y0)).
Definition term1556 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : prod a0 a1) (x2 : a0 -> Prop) (x3 : type1413 a0 a1) := exists y0 : a0, (~ (x0 x2 x3 x1)) \/ (exists y1 : a1, @SETSPEC (prod a0 a1) x1 ((@IN a0 y0 x2) /\ (@IN a1 y1 (x3 y0))) (@pair a0 a1 y0 y1)).
Definition term280 (a0 : Type') (x0 : a0 -> Prop) (x1 : Prop) := (exists y0 : a0, x0 y0) /\ x1.
Definition term119 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : type1470 a0 a1) := fun y0 : type1534 a0 a1 => exists y1 : a1, exists y2 : a0, y0 ((@IN a1 y1 x0) /\ (@IN a0 y2 (x1 y1))) (@pair a1 a0 y1 y2).
Definition term58 (a0 : Type') (a1 : Type') (x0 : a1) (x1 : a1 -> Prop) (x2 : type1470 a0 a1) := fun y0 : type1534 a0 a1 => exists y1 : a1, exists y2 : a0, y0 (((y1 = x0) \/ (@IN a1 y1 x1)) /\ (@IN a0 y2 (x2 y1))) (@pair a1 a0 y1 y2).
Definition term1604 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : a0 -> Prop) (x2 : type1413 a0 a1) (x3 : type1207 a0 a1) (x4 : prod a0 a1) (x5 : a1) := (fun y0 : prod a0 a1 => fun y1 : a1 => (~ (x0 x1 x2 y0)) \/ (@SETSPEC (prod a0 a1) y0 ((@IN a0 (x3 y0) x1) /\ (@IN a1 y1 (x2 (x3 y0)))) (@pair a0 a1 (x3 y0) y1))) x4 x5.
Definition term1919 (a0 : Type') (a1 : Type') (x0 : a0) := and (forall y0 : a1, forall y1 : a0, forall y2 : a1, ((@pair a0 a1 x0 y0) = (@pair a0 a1 y1 y2)) \/ ((~ (x0 = y1)) \/ (~ (y0 = y2)))).
Definition term1145 (a0 : Type') (a1 : Type') (x0 : type1413 a0 a1) (x1 : a0) := and (forall y0 : a1, forall y1 : a1, ((@IN a1 y0 (x0 x1)) /\ ((@IN a1 y1 (x0 x1)) /\ (((fun y2 : a1 => @pair a0 a1 x1 y2) y0) = ((fun y2 : a1 => @pair a0 a1 x1 y2) y1)))) -> y0 = y1).
Definition term270 (a0 : Type') (a1 : Type') (x0 : a1) (x1 : a1 -> Prop) (x2 : type1470 a0 a1) (x3 : prod a1 a0) := and (forall y0 : a1, forall y1 : a0, (((~ (y0 = x0)) /\ (~ (x1 y0))) \/ (~ (x2 y0 y1))) \/ (~ (x3 = (@pair a1 a0 y0 y1)))).
Definition term265 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : type1470 a0 a1) (x2 : prod a1 a0) := and (forall y0 : a1, forall y1 : a0, ((~ (x0 y0)) \/ (~ (x1 y0 y1))) \/ (~ (x2 = (@pair a1 a0 y0 y1)))).
Definition term941 (a0 : Type') (a1 : Type') (x0 : prod a0 a1) := (fun y0 : Prop => fun y1 : prod a0 a1 => y0 /\ (x0 = y1)) False.
Definition term1530 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : a0 -> Prop) := ((fun y0 : a0 -> Prop => forall y1 : type1413 a0 a1, forall y2 : prod a0 a1, (x0 y0 y1 y2) \/ (forall y3 : a0, forall y4 : a1, ~ (@SETSPEC (prod a0 a1) y2 ((@IN a0 y3 y0) /\ (@IN a1 y4 (y1 y3))) (@pair a0 a1 y3 y4)))) x1) /\ ((fun y0 : a0 -> Prop => forall y1 : type1413 a0 a1, forall y2 : prod a0 a1, (~ (x0 y0 y1 y2)) \/ (exists y3 : a0, exists y4 : a1, @SETSPEC (prod a0 a1) y2 ((@IN a0 y3 y0) /\ (@IN a1 y4 (y1 y3))) (@pair a0 a1 y3 y4))) x1).
Definition term1986 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a1) (x2 : a0) := (fun y0 : a0 => forall y1 : a1, ((~ ((@I (a1 -> prod a0 a1) (@I (a0 -> a1 -> prod a0 a1) (@pair a0 a1) x0) x1) = (@I (a1 -> prod a0 a1) (@I (a0 -> a1 -> prod a0 a1) (@pair a0 a1) y0) y1))) \/ (x0 = y0)) /\ ((~ ((@I (a1 -> prod a0 a1) (@I (a0 -> a1 -> prod a0 a1) (@pair a0 a1) x0) x1) = (@I (a1 -> prod a0 a1) (@I (a0 -> a1 -> prod a0 a1) (@pair a0 a1) y0) y1))) \/ (x1 = y1))) x2.
Definition term1888 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a1) (x2 : a0) := (fun y0 : a0 => forall y1 : a1, (~ ((@pair a0 a1 x0 x1) = (@pair a0 a1 y0 y1))) \/ ((x0 = y0) /\ (x1 = y1))) x2.
Definition term1886 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a1) (x2 : a0) := (fun y0 : a0 => forall y1 : a1, ((@pair a0 a1 x0 x1) = (@pair a0 a1 y0 y1)) \/ ((~ (x0 = y0)) \/ (~ (x1 = y1)))) x2.
Definition term1082 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a1) (x2 : a0) := (fun y0 : a0 => forall y1 : a1, ((@pair a0 a1 x0 x1) = (@pair a0 a1 y0 y1)) = ((x0 = y0) /\ (x1 = y1))) x2.
Definition term1250 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : a0) (x2 : a1) (x3 : prod a0 a1) (x4 : a1) (x5 : type1413 a0 a1) (x6 : a0) := (forall y0 : type1413 a0 a1, forall y1 : nat, (forall y2 : a0, (@IN a0 y2 x0) -> @HAS_SIZE a1 (y0 y2) y1) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y2 : prod a0 a1 => exists y3 : a0, exists y4 : a1, @SETSPEC (prod a0 a1) y2 ((@IN a0 y3 x0) /\ (@IN a1 y4 (y0 y3))) (@pair a0 a1 y3 y4))) (Nat.mul (@CARD a0 x0) y1)) -> (@IN a0 x1 x0) -> (@IN a1 x2 (x5 x1)) -> (x3 = (@pair a0 a1 x1 x2)) -> (x3 = (@pair a0 a1 x6 x4)) -> (@IN a1 x4 (x5 x6)) -> (forall y0 : a0, forall y1 : a1, forall y2 : a0, forall y3 : a1, ((@pair a0 a1 y0 y1) = (@pair a0 a1 y2 y3)) = ((y0 = y2) /\ (y1 = y3))) -> (forall y0 : a0, forall y1 : nat, forall y2 : a0, forall y3 : nat, ((@pair a0 nat y0 y1) = (@pair a0 nat y2 y3)) = ((y0 = y2) /\ (y1 = y3))) -> (forall y0 : a0, forall y1 : prod a0 a1, forall y2 : a0, forall y3 : prod a0 a1, ((@pair a0 (prod a0 a1) y0 y1) = (@pair a0 (prod a0 a1) y2 y3)) = ((y0 = y2) /\ (y1 = y3))) -> (forall y0 : nat, forall y1 : a1, forall y2 : nat, forall y3 : a1, ((@pair nat a1 y0 y1) = (@pair nat a1 y2 y3)) = ((y0 = y2) /\ (y1 = y3))) -> ~ (forall y0 : prod a0 a1, forall y1 : a1, forall y2 : prod a0 a1, forall y3 : a1, ((@pair (prod a0 a1) a1 y0 y1) = (@pair (prod a0 a1) a1 y2 y3)) = ((y0 = y2) /\ (y1 = y3))).
Definition term1249 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : a0) (x2 : a1) (x3 : prod a0 a1) (x4 : a1) (x5 : type1413 a0 a1) (x6 : a0) := (forall y0 : type1413 a0 a1, forall y1 : nat, (forall y2 : a0, (@IN a0 y2 x0) -> @HAS_SIZE a1 (y0 y2) y1) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y2 : prod a0 a1 => exists y3 : a0, exists y4 : a1, @SETSPEC (prod a0 a1) y2 ((@IN a0 y3 x0) /\ (@IN a1 y4 (y0 y3))) (@pair a0 a1 y3 y4))) (Nat.mul (@CARD a0 x0) y1)) -> (@IN a0 x1 x0) -> (@IN a1 x2 (x5 x1)) -> (x3 = (@pair a0 a1 x1 x2)) -> (x3 = (@pair a0 a1 x6 x4)) -> (@IN a1 x4 (x5 x6)) -> (forall y0 : a0, forall y1 : a1, forall y2 : a0, forall y3 : a1, ((@pair a0 a1 y0 y1) = (@pair a0 a1 y2 y3)) = ((y0 = y2) /\ (y1 = y3))) -> (forall y0 : a0, forall y1 : nat, forall y2 : a0, forall y3 : nat, ((@pair a0 nat y0 y1) = (@pair a0 nat y2 y3)) = ((y0 = y2) /\ (y1 = y3))) -> (forall y0 : a0, forall y1 : prod a0 a1, forall y2 : a0, forall y3 : prod a0 a1, ((@pair a0 (prod a0 a1) y0 y1) = (@pair a0 (prod a0 a1) y2 y3)) = ((y0 = y2) /\ (y1 = y3))) -> (forall y0 : nat, forall y1 : a1, forall y2 : nat, forall y3 : a1, ((@pair nat a1 y0 y1) = (@pair nat a1 y2 y3)) = ((y0 = y2) /\ (y1 = y3))) -> (forall y0 : prod a0 a1, forall y1 : a1, forall y2 : prod a0 a1, forall y3 : a1, ((@pair (prod a0 a1) a1 y0 y1) = (@pair (prod a0 a1) a1 y2 y3)) = ((y0 = y2) /\ (y1 = y3))) -> False.
Definition term181 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : type1470 a0 a1) (x2 : a1) := forall y0 : prod a1 a0, (exists y1 : a1, exists y2 : a0, (((y1 = x2) \/ (x0 y1)) /\ (x1 y1 y2)) /\ (y0 = (@pair a1 a0 y1 y2))) = ((exists y1 : a1, exists y2 : a0, ((x0 y1) /\ (x1 y1 y2)) /\ (y0 = (@pair a1 a0 y1 y2))) \/ (exists y1 : a0, (y0 = (@pair a1 a0 x2 y1)) /\ (x1 x2 y1))).
Definition term1384 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) := (fun y0 : type621 a0 a1 => forall y1 : a0, forall y2 : type1413 a0 a1, forall y3 : a1, forall y4 : prod a0 a1, forall y5 : a1, forall y6 : a0, forall y7 : a0 -> Prop, forall y8 : nat, forall y9 : nat, (~ (@IN a0 y1 y7)) -> (@FINITE a0 y7) -> (y9 = (S (@CARD a0 y7))) -> (@HAS_SIZE a1 (y2 y1) y8) -> (forall y10 : a0, (@IN a0 y10 y7) -> @HAS_SIZE a1 (y2 y10) y8) -> (forall y10 : type1413 a0 a1, forall y11 : nat, (forall y12 : a0, (@IN a0 y12 y7) -> @HAS_SIZE a1 (y10 y12) y11) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (y0 y7 y10)) (Nat.mul (@CARD a0 y7) y11)) -> (@IN a0 y6 y7) -> (@IN a1 y5 (y2 y6)) -> (y4 = (@pair a0 a1 y6 y5)) -> (y4 = (@pair a0 a1 y1 y3)) -> (@IN a1 y3 (y2 y1)) -> (forall y10 : a0, forall y11 : a1, forall y12 : a0, forall y13 : a1, ((@pair a0 a1 y10 y11) = (@pair a0 a1 y12 y13)) = ((y10 = y12) /\ (y11 = y13))) -> (forall y10 : a0, forall y11 : nat, forall y12 : a0, forall y13 : nat, ((@pair a0 nat y10 y11) = (@pair a0 nat y12 y13)) = ((y10 = y12) /\ (y11 = y13))) -> (forall y10 : a0, forall y11 : prod a0 a1, forall y12 : a0, forall y13 : prod a0 a1, ((@pair a0 (prod a0 a1) y10 y11) = (@pair a0 (prod a0 a1) y12 y13)) = ((y10 = y12) /\ (y11 = y13))) -> (forall y10 : nat, forall y11 : a1, forall y12 : nat, forall y13 : a1, ((@pair nat a1 y10 y11) = (@pair nat a1 y12 y13)) = ((y10 = y12) /\ (y11 = y13))) -> ~ (forall y10 : prod a0 a1, forall y11 : a1, forall y12 : prod a0 a1, forall y13 : a1, ((@pair (prod a0 a1) a1 y10 y11) = (@pair (prod a0 a1) a1 y12 y13)) = ((y10 = y12) /\ (y11 = y13)))) x0.
Definition term1394 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) := (x0 = (fun y0 : a0 -> Prop => fun y1 : type1413 a0 a1 => fun y2 : prod a0 a1 => exists y3 : a0, exists y4 : a1, @SETSPEC (prod a0 a1) y2 ((@IN a0 y3 y0) /\ (@IN a1 y4 (y1 y3))) (@pair a0 a1 y3 y4))) -> forall y0 : a0, forall y1 : type1413 a0 a1, forall y2 : a1, forall y3 : prod a0 a1, forall y4 : a1, forall y5 : a0, forall y6 : a0 -> Prop, forall y7 : nat, forall y8 : nat, (~ (@IN a0 y0 y6)) -> (@FINITE a0 y6) -> (y8 = (S (@CARD a0 y6))) -> (@HAS_SIZE a1 (y1 y0) y7) -> (forall y9 : a0, (@IN a0 y9 y6) -> @HAS_SIZE a1 (y1 y9) y7) -> (forall y9 : type1413 a0 a1, forall y10 : nat, (forall y11 : a0, (@IN a0 y11 y6) -> @HAS_SIZE a1 (y9 y11) y10) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (x0 y6 y9)) (Nat.mul (@CARD a0 y6) y10)) -> (@IN a0 y5 y6) -> (@IN a1 y4 (y1 y5)) -> (y3 = (@pair a0 a1 y5 y4)) -> (y3 = (@pair a0 a1 y0 y2)) -> (@IN a1 y2 (y1 y0)) -> (forall y9 : a0, forall y10 : a1, forall y11 : a0, forall y12 : a1, ((@pair a0 a1 y9 y10) = (@pair a0 a1 y11 y12)) = ((y9 = y11) /\ (y10 = y12))) -> (forall y9 : a0, forall y10 : nat, forall y11 : a0, forall y12 : nat, ((@pair a0 nat y9 y10) = (@pair a0 nat y11 y12)) = ((y9 = y11) /\ (y10 = y12))) -> (forall y9 : a0, forall y10 : prod a0 a1, forall y11 : a0, forall y12 : prod a0 a1, ((@pair a0 (prod a0 a1) y9 y10) = (@pair a0 (prod a0 a1) y11 y12)) = ((y9 = y11) /\ (y10 = y12))) -> (forall y9 : nat, forall y10 : a1, forall y11 : nat, forall y12 : a1, ((@pair nat a1 y9 y10) = (@pair nat a1 y11 y12)) = ((y9 = y11) /\ (y10 = y12))) -> ~ (forall y9 : prod a0 a1, forall y10 : a1, forall y11 : prod a0 a1, forall y12 : a1, ((@pair (prod a0 a1) a1 y9 y10) = (@pair (prod a0 a1) a1 y11 y12)) = ((y9 = y11) /\ (y10 = y12))).
Definition term1141 (a0 : Type') (a1 : Type') (x0 : type1413 a0 a1) (x1 : a0) (x2 : a1) := fun y0 : a1 => ((@IN a1 x2 (x0 x1)) /\ ((@IN a1 y0 (x0 x1)) /\ (((fun y1 : a1 => @pair a0 a1 x1 y1) x2) = ((fun y1 : a1 => @pair a0 a1 x1 y1) y0)))) -> x2 = y0.
Definition term1666 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : a0 -> Prop) (x2 : type464 a0 a1) (x3 : type465 a0 a1) (x4 : type1413 a0 a1) := forall y0 : prod a0 a1, (~ (x0 x1 x4 y0)) \/ (@SETSPEC (prod a0 a1) y0 ((@IN a0 (x2 x4 y0) x1) /\ (@IN a1 (x3 x4 y0) (x4 (x2 x4 y0)))) (@pair a0 a1 (x2 x4 y0) (x3 x4 y0))).
Definition term1658 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : a0 -> Prop) (x2 : type464 a0 a1) (x3 : type1413 a0 a1) (x4 : type1208 a0 a1) := forall y0 : prod a0 a1, (~ (x0 x1 x3 y0)) \/ (@SETSPEC (prod a0 a1) y0 ((@IN a0 (x2 x3 y0) x1) /\ (@IN a1 (x4 y0) (x3 (x2 x3 y0)))) (@pair a0 a1 (x2 x3 y0) (x4 y0))).
Definition term1618 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : a0 -> Prop) (x2 : type1413 a0 a1) (x3 : type1207 a0 a1) (x4 : type1208 a0 a1) := forall y0 : prod a0 a1, (~ (x0 x1 x2 y0)) \/ (@SETSPEC (prod a0 a1) y0 ((@IN a0 (x3 y0) x1) /\ (@IN a1 (x4 y0) (x2 (x3 y0)))) (@pair a0 a1 (x3 y0) (x4 y0))).
Definition term1448 (a0 : Type') (a1 : Type') (x0 : prod a0 a1) (x1 : a0 -> Prop) (x2 : type1413 a0 a1) (x3 : a0) := fun y0 : a1 => ~ ((fun y1 : a1 => @SETSPEC (prod a0 a1) x0 ((@IN a0 x3 x1) /\ (@IN a1 y1 (x2 x3))) (@pair a0 a1 x3 y1)) y0).
Definition term633 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : type1413 a0 a1) (x2 : nat) (x3 : nat) := ((@CARD a0 x0) = x2) -> (fun y0 : nat => (forall y1 : a0, (@IN a0 y1 x0) -> @HAS_SIZE a1 (x1 y1) y0) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y1 : prod a0 a1 => exists y2 : a0, exists y3 : a1, @SETSPEC (prod a0 a1) y1 ((@IN a0 y2 x0) /\ (@IN a1 y3 (x1 y2))) (@pair a0 a1 y2 y3))) (Nat.mul x2 y0)) x3.
Definition term1786 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : type1413 a0 a1) (x2 : a0) (x3 : nat) := or ((@IN a0 x2 x0) /\ (~ (@HAS_SIZE a1 (x1 x2) x3))).
Definition term5 (a0 : Type') (x0 : a0 -> Prop) (x1 : a0 -> Prop) := (fun y0 : a0 -> Prop => (x0 = y0) = (forall y1 : a0, (@IN a0 y1 x0) = (@IN a0 y1 y0))) x1.
Definition term530 (x0 : Prop) (x1 : Prop) := x1 /\ (x0 -> x1).
Definition term900 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a0 -> Prop) (x2 : nat) := ((S (@CARD a0 x1)) = x2) -> forall y0 : type1413 a0 a1, forall y1 : nat, (forall y2 : a0, ((y2 = x0) \/ (@IN a0 y2 x1)) -> @HAS_SIZE a1 (y0 y2) y1) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y2 : prod a0 a1 => exists y3 : a0, exists y4 : a1, @SETSPEC (prod a0 a1) y2 (((y3 = x0) \/ (@IN a0 y3 x1)) /\ (@IN a1 y4 (y0 y3))) (@pair a0 a1 y3 y4))) (Nat.mul x2 y1).
Definition term899 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a0 -> Prop) (x2 : nat) := ((@CARD a0 (@INSERT a0 x0 x1)) = x2) -> forall y0 : type1413 a0 a1, forall y1 : nat, (forall y2 : a0, (@IN a0 y2 (@INSERT a0 x0 x1)) -> @HAS_SIZE a1 (y0 y2) y1) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y2 : prod a0 a1 => exists y3 : a0, exists y4 : a1, @SETSPEC (prod a0 a1) y2 ((@IN a0 y3 (@INSERT a0 x0 x1)) /\ (@IN a1 y4 (y0 y3))) (@pair a0 a1 y3 y4))) (Nat.mul x2 y1).
Definition term761 (a0 : Type') (a1 : Type') (x0 : a1) (x1 : type1413 a0 a1) (x2 : a0) := (@IN a0 x2 (@EMPTY a0)) /\ (@IN a1 x0 (x1 x2)).
Definition term1767 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : type1413 a0 a1) (x2 : nat) := fun y0 : a0 => (@IN a0 y0 x0) /\ (~ (@HAS_SIZE a1 (x1 y0) x2)).
Definition term836 (a0 : Type') (x0 : a0 -> Prop) := @COND nat False (@CARD a0 x0) (S (@CARD a0 x0)).
Definition term887 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a0 -> Prop) (x2 : type1413 a0 a1) (x3 : nat) (x4 : nat) := ((forall y0 : a0, ((y0 = x0) \/ (@IN a0 y0 x1)) -> @HAS_SIZE a1 (x2 y0) x4) -> (@HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y0 : prod a0 a1 => exists y1 : a0, exists y2 : a1, @SETSPEC (prod a0 a1) y0 ((@IN a0 y1 (@INSERT a0 x0 x1)) /\ (@IN a1 y2 (x2 y1))) (@pair a0 a1 y1 y2))) (Nat.mul x3 x4)) = (@HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y0 : prod a0 a1 => exists y1 : a0, exists y2 : a1, @SETSPEC (prod a0 a1) y0 (((y1 = x0) \/ (@IN a0 y1 x1)) /\ (@IN a1 y2 (x2 y1))) (@pair a0 a1 y1 y2))) (Nat.mul x3 x4))) -> ((forall y0 : a0, (@IN a0 y0 (@INSERT a0 x0 x1)) -> @HAS_SIZE a1 (x2 y0) x4) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y0 : prod a0 a1 => exists y1 : a0, exists y2 : a1, @SETSPEC (prod a0 a1) y0 ((@IN a0 y1 (@INSERT a0 x0 x1)) /\ (@IN a1 y2 (x2 y1))) (@pair a0 a1 y1 y2))) (Nat.mul x3 x4)) = ((forall y0 : a0, ((y0 = x0) \/ (@IN a0 y0 x1)) -> @HAS_SIZE a1 (x2 y0) x4) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y0 : prod a0 a1 => exists y1 : a0, exists y2 : a1, @SETSPEC (prod a0 a1) y0 (((y1 = x0) \/ (@IN a0 y1 x1)) /\ (@IN a1 y2 (x2 y1))) (@pair a0 a1 y1 y2))) (Nat.mul x3 x4)).
Definition term356 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : prod a1 a0) (x2 : type1470 a0 a1) (x3 : a1) := exists y0 : a1, (forall y1 : a1, forall y2 : a0, (((~ (y1 = x3)) /\ (~ (x0 y1))) \/ (~ (x2 y1 y2))) \/ (~ (x1 = (@pair a1 a0 y1 y2)))) /\ ((fun y1 : a1 => exists y2 : a0, (((x0 y1) /\ (x2 y1 y2)) /\ (x1 = (@pair a1 a0 y1 y2))) \/ ((x1 = (@pair a1 a0 x3 y2)) /\ (x2 x3 y2))) y0).
Definition term1494 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : a0 -> Prop) (x2 : type1413 a0 a1) := (forall y0 : prod a0 a1, (x0 x1 x2 y0) \/ (forall y1 : a0, forall y2 : a1, ~ (@SETSPEC (prod a0 a1) y0 ((@IN a0 y1 x1) /\ (@IN a1 y2 (x2 y1))) (@pair a0 a1 y1 y2)))) /\ (forall y0 : prod a0 a1, (~ (x0 x1 x2 y0)) \/ (exists y1 : a0, exists y2 : a1, @SETSPEC (prod a0 a1) y0 ((@IN a0 y1 x1) /\ (@IN a1 y2 (x2 y1))) (@pair a0 a1 y1 y2))).
Definition term717 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) := (@FINITE a0 x0) -> (fun y0 : a0 -> Prop => forall y1 : nat, ((@CARD a0 y0) = y1) -> forall y2 : type1413 a0 a1, forall y3 : nat, (forall y4 : a0, (@IN a0 y4 y0) -> @HAS_SIZE a1 (y2 y4) y3) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y4 : prod a0 a1 => exists y5 : a0, exists y6 : a1, @SETSPEC (prod a0 a1) y4 ((@IN a0 y5 y0) /\ (@IN a1 y6 (y2 y5))) (@pair a0 a1 y5 y6))) (Nat.mul y1 y3)) x0.
Definition term496 (a0 : Type') (a1 : Type') (x0 : type1470 a0 a1) (x1 : a1) (x2 : a0) := (x1 = x1) /\ ((x0 x1 x2) /\ ((@pair a1 a0 x1 x2) = (@pair a1 a0 x1 x2))).
Definition term696 (a0 : Type') (x0 : a0) (x1 : a0 -> Prop) := (~ (@IN a0 x0 x1)) /\ (@FINITE a0 x1).
Definition term957 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a1) := @eq Prop ((fun y0 : prod a0 a1 => (fun y1 : prod a0 a1 => False) y0) (@pair a0 a1 x0 x1)).
Definition term2083 (a0 : Type') (x0 : a0 -> Prop) (x1 : a0 -> Prop) := ~ (~ (x0 = x1)).
Definition term2060 (a0 : Type') (x0 : type686 a0) (x1 : type686 a0) := ~ (~ (x0 = x1)).
Definition term2037 (a0 : Type') (x0 : type1364 a0) (x1 : type1364 a0) := ~ (~ (x0 = x1)).
Definition term2106 (a0 : Type') (a1 : Type') (x0 : nat) (x1 : a0 -> Prop) (x2 : a0) (x3 : a1) (x4 : prod a0 a1) (x5 : a1) (x6 : type1413 a0 a1) (x7 : a0) (x8 : nat) := (fun y0 : nat => (~ (@IN a0 x7 x1)) -> (@FINITE a0 x1) -> (y0 = (S (@CARD a0 x1))) -> (@HAS_SIZE a1 (x6 x7) x0) -> (forall y1 : a0, (@IN a0 y1 x1) -> @HAS_SIZE a1 (x6 y1) x0) -> (forall y1 : type1413 a0 a1, forall y2 : nat, (forall y3 : a0, (@IN a0 y3 x1) -> @HAS_SIZE a1 (y1 y3) y2) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y3 : prod a0 a1 => exists y4 : a0, exists y5 : a1, @SETSPEC (prod a0 a1) y3 ((@IN a0 y4 x1) /\ (@IN a1 y5 (y1 y4))) (@pair a0 a1 y4 y5))) (Nat.mul (@CARD a0 x1) y2)) -> (@IN a0 x2 x1) -> (@IN a1 x3 (x6 x2)) -> (x4 = (@pair a0 a1 x2 x3)) -> (x4 = (@pair a0 a1 x7 x5)) -> (@IN a1 x5 (x6 x7)) -> (forall y1 : a0, forall y2 : a1, forall y3 : a0, forall y4 : a1, ((@pair a0 a1 y1 y2) = (@pair a0 a1 y3 y4)) = ((y1 = y3) /\ (y2 = y4))) -> (forall y1 : a0, forall y2 : nat, forall y3 : a0, forall y4 : nat, ((@pair a0 nat y1 y2) = (@pair a0 nat y3 y4)) = ((y1 = y3) /\ (y2 = y4))) -> (forall y1 : a0, forall y2 : prod a0 a1, forall y3 : a0, forall y4 : prod a0 a1, ((@pair a0 (prod a0 a1) y1 y2) = (@pair a0 (prod a0 a1) y3 y4)) = ((y1 = y3) /\ (y2 = y4))) -> (forall y1 : nat, forall y2 : a1, forall y3 : nat, forall y4 : a1, ((@pair nat a1 y1 y2) = (@pair nat a1 y3 y4)) = ((y1 = y3) /\ (y2 = y4))) -> (forall y1 : prod a0 a1, forall y2 : a1, forall y3 : prod a0 a1, forall y4 : a1, ((@pair (prod a0 a1) a1 y1 y2) = (@pair (prod a0 a1) a1 y3 y4)) = ((y1 = y3) /\ (y2 = y4))) -> False) x8.
Definition term154 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : type1470 a0 a1) (x2 : prod a1 a0) (x3 : a1) := exists y0 : a0, ((x0 x3) /\ (x1 x3 y0)) /\ (x2 = (@pair a1 a0 x3 y0)).
Definition term104 (a0 : Type') (a1 : Type') (x0 : a1) (x1 : a1 -> Prop) (x2 : type1470 a0 a1) (x3 : prod a1 a0) (x4 : a1) := exists y0 : a0, (((x4 = x0) \/ (x1 x4)) /\ (x2 x4 y0)) /\ (x3 = (@pair a1 a0 x4 y0)).
Definition term1301 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) := (fun y0 : a0 -> Prop => fun y1 : type1413 a0 a1 => fun y2 : prod a0 a1 => exists y3 : a0, exists y4 : a1, @SETSPEC (prod a0 a1) y2 ((@IN a0 y3 y0) /\ (@IN a1 y4 (y1 y3))) (@pair a0 a1 y3 y4)) x0.
Definition term669 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : nat) := ((@CARD a0 x0) = x1) -> forall y0 : type1413 a0 a1, forall y1 : nat, (forall y2 : a0, (@IN a0 y2 x0) -> @HAS_SIZE a1 (y0 y2) y1) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y2 : prod a0 a1 => exists y3 : a0, exists y4 : a1, @SETSPEC (prod a0 a1) y2 ((@IN a0 y3 x0) /\ (@IN a1 y4 (y0 y3))) (@pair a0 a1 y3 y4))) (Nat.mul x1 y1).
Definition term1197 (a0 : Type') (a1 : Type') (x0 : prod a0 a1) (x1 : type1413 a0 a1) (x2 : a0) := @IN (prod a0 a1) x0 (@IMAGE a1 (prod a0 a1) (fun y0 : a1 => @pair a0 a1 x2 y0) (x1 x2)).
Definition term162 (a0 : Type') (a1 : Type') (x0 : prod a1 a0) (x1 : type1470 a0 a1) (x2 : a1) := @IN (prod a1 a0) x0 (@IMAGE a0 (prod a1 a0) (fun y0 : a0 => @pair a1 a0 x2 y0) (x1 x2)).
Definition term139 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : type1470 a0 a1) (x2 : a1) (x3 : a0) := and ((x0 x2) /\ (x1 x2 x3)).
Definition term84 (a0 : Type') (x0 : a0) (x1 : a0 -> Prop) (x2 : a0) := and ((x2 = x0) \/ (x1 x2)).
Definition term279 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : prod a1 a0) (x2 : type1470 a0 a1) (x3 : a1) := ((exists y0 : a1, exists y1 : a0, (((y0 = x3) \/ (x0 y0)) /\ (x2 y0 y1)) /\ (x1 = (@pair a1 a0 y0 y1))) /\ ((forall y0 : a1, forall y1 : a0, ((~ (x0 y0)) \/ (~ (x2 y0 y1))) \/ (~ (x1 = (@pair a1 a0 y0 y1)))) /\ (forall y0 : a0, (~ (x1 = (@pair a1 a0 x3 y0))) \/ (~ (x2 x3 y0))))) \/ ((forall y0 : a1, forall y1 : a0, (((~ (y0 = x3)) /\ (~ (x0 y0))) \/ (~ (x2 y0 y1))) \/ (~ (x1 = (@pair a1 a0 y0 y1)))) /\ ((exists y0 : a1, exists y1 : a0, ((x0 y0) /\ (x2 y0 y1)) /\ (x1 = (@pair a1 a0 y0 y1))) \/ (exists y0 : a0, (x1 = (@pair a1 a0 x3 y0)) /\ (x2 x3 y0)))).
Definition term513 (x0 : Prop) := (fun y0 : Prop => (y0 = True) \/ (y0 = False)) x0.
Definition term1018 (a0 : Type') (x0 : a0) (x1 : a0) := (fun y0 : a0 => y0 = x0) x1.
Definition term300 (a0 : Type') (a1 : Type') (x0 : a1) (x1 : a1 -> Prop) (x2 : type1470 a0 a1) (x3 : prod a1 a0) (x4 : a1) := and (exists y0 : a0, (fun y1 : a0 => (((x4 = x0) \/ (x1 x4)) /\ (x2 x4 y1)) /\ (x3 = (@pair a1 a0 x4 y1))) y0).
Definition term434 (a0 : Type') (a1 : Type') (x0 : a1) (x1 : a1 -> Prop) (x2 : type1470 a0 a1) (x3 : prod a1 a0) (x4 : a1) := (fun y0 : a1 => forall y1 : a0, (((~ (y0 = x0)) \/ (~ (x2 y0 y1))) \/ (~ (x3 = (@pair a1 a0 y0 y1)))) /\ (((~ (x1 y0)) \/ (~ (x2 y0 y1))) \/ (~ (x3 = (@pair a1 a0 y0 y1))))) x4.
Definition term790 (a0 : Type') (a1 : Type') (x0 : nat) := fun y0 : type1413 a0 a1 => forall y1 : nat, @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y2 : prod a0 a1 => exists y3 : a0, exists y4 : a1, @SETSPEC (prod a0 a1) y2 False (@pair a0 a1 y3 y4))) (Nat.mul x0 y1).
Definition term1430 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : a0 -> Prop) (x2 : type1413 a0 a1) := forall y0 : prod a0 a1, (x0 x1 x2 y0) = (exists y1 : a0, exists y2 : a1, @SETSPEC (prod a0 a1) y0 ((@IN a0 y1 x1) /\ (@IN a1 y2 (x2 y1))) (@pair a0 a1 y1 y2)).
Definition term466 (a0 : Type') (a1 : Type') (x0 : a1) (x1 : a0) := ~ ((@pair a1 a0 x0 x1) = (@pair a1 a0 x0 x1)).
Definition term1265 (a0 : Type') (a1 : Type') (x0 : nat) (x1 : a0 -> Prop) (x2 : a0) (x3 : a1) (x4 : prod a0 a1) (x5 : a1) (x6 : type1413 a0 a1) (x7 : a0) := fun y0 : nat => (~ (@IN a0 x7 x1)) -> (@FINITE a0 x1) -> (y0 = (S (@CARD a0 x1))) -> (@HAS_SIZE a1 (x6 x7) x0) -> (forall y1 : a0, (@IN a0 y1 x1) -> @HAS_SIZE a1 (x6 y1) x0) -> (forall y1 : type1413 a0 a1, forall y2 : nat, (forall y3 : a0, (@IN a0 y3 x1) -> @HAS_SIZE a1 (y1 y3) y2) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y3 : prod a0 a1 => exists y4 : a0, exists y5 : a1, @SETSPEC (prod a0 a1) y3 ((@IN a0 y4 x1) /\ (@IN a1 y5 (y1 y4))) (@pair a0 a1 y4 y5))) (Nat.mul (@CARD a0 x1) y2)) -> (@IN a0 x2 x1) -> (@IN a1 x3 (x6 x2)) -> (x4 = (@pair a0 a1 x2 x3)) -> (x4 = (@pair a0 a1 x7 x5)) -> (@IN a1 x5 (x6 x7)) -> (forall y1 : a0, forall y2 : a1, forall y3 : a0, forall y4 : a1, ((@pair a0 a1 y1 y2) = (@pair a0 a1 y3 y4)) = ((y1 = y3) /\ (y2 = y4))) -> (forall y1 : a0, forall y2 : nat, forall y3 : a0, forall y4 : nat, ((@pair a0 nat y1 y2) = (@pair a0 nat y3 y4)) = ((y1 = y3) /\ (y2 = y4))) -> (forall y1 : a0, forall y2 : prod a0 a1, forall y3 : a0, forall y4 : prod a0 a1, ((@pair a0 (prod a0 a1) y1 y2) = (@pair a0 (prod a0 a1) y3 y4)) = ((y1 = y3) /\ (y2 = y4))) -> (forall y1 : nat, forall y2 : a1, forall y3 : nat, forall y4 : a1, ((@pair nat a1 y1 y2) = (@pair nat a1 y3 y4)) = ((y1 = y3) /\ (y2 = y4))) -> ~ (forall y1 : prod a0 a1, forall y2 : a1, forall y3 : prod a0 a1, forall y4 : a1, ((@pair (prod a0 a1) a1 y1 y2) = (@pair (prod a0 a1) a1 y3 y4)) = ((y1 = y3) /\ (y2 = y4))).
Definition term1264 (a0 : Type') (a1 : Type') (x0 : nat) (x1 : a0 -> Prop) (x2 : a0) (x3 : a1) (x4 : prod a0 a1) (x5 : a1) (x6 : type1413 a0 a1) (x7 : a0) := fun y0 : nat => (~ (@IN a0 x7 x1)) -> (@FINITE a0 x1) -> (y0 = (S (@CARD a0 x1))) -> (@HAS_SIZE a1 (x6 x7) x0) -> (forall y1 : a0, (@IN a0 y1 x1) -> @HAS_SIZE a1 (x6 y1) x0) -> (forall y1 : type1413 a0 a1, forall y2 : nat, (forall y3 : a0, (@IN a0 y3 x1) -> @HAS_SIZE a1 (y1 y3) y2) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y3 : prod a0 a1 => exists y4 : a0, exists y5 : a1, @SETSPEC (prod a0 a1) y3 ((@IN a0 y4 x1) /\ (@IN a1 y5 (y1 y4))) (@pair a0 a1 y4 y5))) (Nat.mul (@CARD a0 x1) y2)) -> (@IN a0 x2 x1) -> (@IN a1 x3 (x6 x2)) -> (x4 = (@pair a0 a1 x2 x3)) -> (x4 = (@pair a0 a1 x7 x5)) -> (@IN a1 x5 (x6 x7)) -> (forall y1 : a0, forall y2 : a1, forall y3 : a0, forall y4 : a1, ((@pair a0 a1 y1 y2) = (@pair a0 a1 y3 y4)) = ((y1 = y3) /\ (y2 = y4))) -> (forall y1 : a0, forall y2 : nat, forall y3 : a0, forall y4 : nat, ((@pair a0 nat y1 y2) = (@pair a0 nat y3 y4)) = ((y1 = y3) /\ (y2 = y4))) -> (forall y1 : a0, forall y2 : prod a0 a1, forall y3 : a0, forall y4 : prod a0 a1, ((@pair a0 (prod a0 a1) y1 y2) = (@pair a0 (prod a0 a1) y3 y4)) = ((y1 = y3) /\ (y2 = y4))) -> (forall y1 : nat, forall y2 : a1, forall y3 : nat, forall y4 : a1, ((@pair nat a1 y1 y2) = (@pair nat a1 y3 y4)) = ((y1 = y3) /\ (y2 = y4))) -> (forall y1 : prod a0 a1, forall y2 : a1, forall y3 : prod a0 a1, forall y4 : a1, ((@pair (prod a0 a1) a1 y1 y2) = (@pair (prod a0 a1) a1 y3 y4)) = ((y1 = y3) /\ (y2 = y4))) -> False.
Definition term1329 (a0 : Type') (a1 : Type') := fun y0 : a0 => forall y1 : prod a0 a1, forall y2 : a0, forall y3 : prod a0 a1, ((@pair a0 (prod a0 a1) y0 y1) = (@pair a0 (prod a0 a1) y2 y3)) = ((y0 = y2) /\ (y1 = y3)).
Definition term2072 (a0 : Type') (x0 : a0 -> Prop) (x1 : a0 -> Prop) := or (~ (x0 = x1)).
Definition term2051 (a0 : Type') (x0 : type686 a0) (x1 : type686 a0) := or (~ (x0 = x1)).
Definition term1452 (a0 : Type') (a1 : Type') (x0 : prod a0 a1) (x1 : a0 -> Prop) (x2 : type1413 a0 a1) := forall y0 : a0, ~ ((fun y1 : a0 => exists y2 : a1, @SETSPEC (prod a0 a1) x0 ((@IN a0 y1 x1) /\ (@IN a1 y2 (x2 y1))) (@pair a0 a1 y1 y2)) y0).
Definition term258 (a0 : Type') (a1 : Type') (x0 : prod a1 a0) (x1 : type1470 a0 a1) (x2 : a1) := forall y0 : a0, ~ ((fun y1 : a0 => (x0 = (@pair a1 a0 x2 y1)) /\ (x1 x2 y1)) y0).
Definition term242 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : type1470 a0 a1) (x2 : prod a1 a0) (x3 : a1) := forall y0 : a0, ~ ((fun y1 : a0 => ((x0 x3) /\ (x1 x3 y1)) /\ (x2 = (@pair a1 a0 x3 y1))) y0).
Definition term221 (a0 : Type') (a1 : Type') (x0 : a1) (x1 : a1 -> Prop) (x2 : type1470 a0 a1) (x3 : prod a1 a0) (x4 : a1) := forall y0 : a0, ~ ((fun y1 : a0 => (((x4 = x0) \/ (x1 x4)) /\ (x2 x4 y1)) /\ (x3 = (@pair a1 a0 x4 y1))) y0).
Definition term142 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : type1470 a0 a1) (x2 : a1) (x3 : a0) (x4 : prod a1 a0) := fun y0 : prod a1 a0 => ((x0 x2) /\ (x1 x2 x3)) /\ (x4 = y0).
Definition term1117 (a0 : Type') (a1 : Type') (x0 : type1413 a0 a1) (x1 : a0) (x2 : a1) (x3 : a1) (x4 : Prop) := (fun y0 : Prop => forall y1 : Prop, (((@IN a1 x2 (x0 x1)) /\ ((@IN a1 x3 (x0 x1)) /\ (((fun y2 : a1 => @pair a0 a1 x1 y2) x2) = ((fun y2 : a1 => @pair a0 a1 x1 y2) x3)))) = y0) -> (y0 -> (x2 = x3) = y1) -> (((@IN a1 x2 (x0 x1)) /\ ((@IN a1 x3 (x0 x1)) /\ (((fun y2 : a1 => @pair a0 a1 x1 y2) x2) = ((fun y2 : a1 => @pair a0 a1 x1 y2) x3)))) -> x2 = x3) = (y0 -> y1)) x4.
Definition term1101 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : type1413 a0 a1) (x2 : a0) (x3 : nat) (x4 : Prop) := (fun y0 : Prop => forall y1 : Prop, ((@IN a0 x2 x0) = y0) -> (y0 -> (@HAS_SIZE a1 (x1 x2) x3) = y1) -> ((@IN a0 x2 x0) -> @HAS_SIZE a1 (x1 x2) x3) = (y0 -> y1)) x4.
Definition term1003 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : type1413 a0 a1) (x2 : a0) (x3 : nat) (x4 : Prop) := (fun y0 : Prop => forall y1 : Prop, ((x2 = x0) = y0) -> (y0 -> (@HAS_SIZE a1 (x1 x2) x3) = y1) -> ((x2 = x0) -> @HAS_SIZE a1 (x1 x2) x3) = (y0 -> y1)) x4.
Definition term1989 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a1) (x2 : prod a0 a1) := (fun y0 : prod a0 a1 => y0 = (@I (a1 -> prod a0 a1) (@I (a0 -> a1 -> prod a0 a1) (@pair a0 a1) x0) x1)) x2.
Definition term954 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a1) := (fun y0 : prod a0 a1 => (fun y1 : prod a0 a1 => False) y0) (@pair a0 a1 x0 x1).
Definition term433 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : type1470 a0 a1) (x2 : prod a1 a0) (x3 : a1) (x4 : a0) := (fun y0 : a0 => ((~ (x0 x3)) \/ (~ (x1 x3 y0))) \/ (~ (x2 = (@pair a1 a0 x3 y0)))) x4.
Definition term294 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : prod a1 a0) (x2 : type1470 a0 a1) (x3 : a1) := fun y0 : a1 => (exists y1 : a0, (((y0 = x3) \/ (x0 y0)) /\ (x2 y0 y1)) /\ (x1 = (@pair a1 a0 y0 y1))) /\ ((forall y1 : a1, forall y2 : a0, ((~ (x0 y1)) \/ (~ (x2 y1 y2))) \/ (~ (x1 = (@pair a1 a0 y1 y2)))) /\ (forall y1 : a0, (~ (x1 = (@pair a1 a0 x3 y1))) \/ (~ (x2 x3 y1)))).
Definition term395 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : prod a1 a0) (x2 : type1470 a0 a1) (x3 : a1) (x4 : a1) := ((fun y0 : a1 => exists y1 : a0, ((((y0 = x3) \/ (x0 y0)) /\ (x2 y0 y1)) /\ (x1 = (@pair a1 a0 y0 y1))) /\ ((forall y2 : a1, forall y3 : a0, ((~ (x0 y2)) \/ (~ (x2 y2 y3))) \/ (~ (x1 = (@pair a1 a0 y2 y3)))) /\ (forall y2 : a0, (~ (x1 = (@pair a1 a0 x3 y2))) \/ (~ (x2 x3 y2))))) x4) \/ ((fun y0 : a1 => exists y1 : a0, (forall y2 : a1, forall y3 : a0, (((~ (y2 = x3)) /\ (~ (x0 y2))) \/ (~ (x2 y2 y3))) \/ (~ (x1 = (@pair a1 a0 y2 y3)))) /\ ((((x0 y0) /\ (x2 y0 y1)) /\ (x1 = (@pair a1 a0 y0 y1))) \/ ((x1 = (@pair a1 a0 x3 y1)) /\ (x2 x3 y1)))) x4).
Definition term1573 (a0 : Type') (a1 : Type') (x0 : type1413 a0 a1) := exists y0 : a0 -> a1, forall y1 : a0, x0 y1 (y0 y1).
Definition term1705 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : type619 a0 a1) := fun y0 : a0 -> Prop => fun y1 : type465 a0 a1 => forall y2 : type1413 a0 a1, forall y3 : prod a0 a1, (~ (x0 y0 y2 y3)) \/ (@SETSPEC (prod a0 a1) y3 ((@IN a0 (x1 y0 y2 y3) y0) /\ (@IN a1 (y1 y2 y3) (y2 (x1 y0 y2 y3)))) (@pair a0 a1 (x1 y0 y2 y3) (y1 y2 y3))).
Definition term1136 (a0 : Type') (a1 : Type') (x0 : type1413 a0 a1) (x1 : a0) (x2 : a1) (x3 : a1) (x4 : Prop) := (((@IN a1 x2 (x0 x1)) /\ ((@IN a1 x3 (x0 x1)) /\ (x2 = x3))) -> (x2 = x3) = x4) -> (((@IN a1 x2 (x0 x1)) /\ ((@IN a1 x3 (x0 x1)) /\ (((fun y0 : a1 => @pair a0 a1 x1 y0) x2) = ((fun y0 : a1 => @pair a0 a1 x1 y0) x3)))) -> x2 = x3) = (((@IN a1 x2 (x0 x1)) /\ ((@IN a1 x3 (x0 x1)) /\ (x2 = x3))) -> x4).
Definition term1692 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : type619 a0 a1) (x2 : a0 -> Prop) := (fun y0 : type464 a0 a1 => exists y1 : type465 a0 a1, forall y2 : type1413 a0 a1, forall y3 : prod a0 a1, (~ (x0 x2 y2 y3)) \/ (@SETSPEC (prod a0 a1) y3 ((@IN a0 (y0 y2 y3) x2) /\ (@IN a1 (y1 y2 y3) (y2 (y0 y2 y3)))) (@pair a0 a1 (y0 y2 y3) (y1 y2 y3)))) (x1 x2).
Definition term1224 (a0 : Type') := imp (forall y0 : nat, forall y1 : a0, forall y2 : nat, forall y3 : a0, ((@pair nat a0 y0 y1) = (@pair nat a0 y2 y3)) = ((y0 = y2) /\ (y1 = y3))).
Definition term1128 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a1) (x2 : a1) := (x0 = x0) /\ (x1 = x2).
Definition term544 (x0 : Prop) (x1 : Prop) := True /\ (x0 -> x1).
Definition term566 (a0 : Type') (x0 : type686 a0) := (x0 (@EMPTY a0)) /\ (forall y0 : a0, forall y1 : a0 -> Prop, ((x0 y1) /\ ((~ (@IN a0 y0 y1)) /\ (@FINITE a0 y1))) -> x0 (@INSERT a0 y0 y1)).
Definition term1049 := (forall y0 : nat, (Nat.mul y0 (NUMERAL 0)) = (NUMERAL 0)) /\ ((forall y0 : nat, (Nat.mul (NUMERAL (BIT1 0)) y0) = y0) /\ ((forall y0 : nat, (Nat.mul y0 (NUMERAL (BIT1 0))) = y0) /\ ((forall y0 : nat, forall y1 : nat, (Nat.mul (S y0) y1) = (Nat.add (Nat.mul y0 y1) y1)) /\ (forall y0 : nat, forall y1 : nat, (Nat.mul y0 (S y1)) = (Nat.add y0 (Nat.mul y0 y1)))))).
Definition term802 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a0 -> Prop) (x2 : Prop) := (fun y0 : Prop => forall y1 : Prop, (((forall y2 : nat, ((@CARD a0 x1) = y2) -> forall y3 : type1413 a0 a1, forall y4 : nat, (forall y5 : a0, (@IN a0 y5 x1) -> @HAS_SIZE a1 (y3 y5) y4) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y5 : prod a0 a1 => exists y6 : a0, exists y7 : a1, @SETSPEC (prod a0 a1) y5 ((@IN a0 y6 x1) /\ (@IN a1 y7 (y3 y6))) (@pair a0 a1 y6 y7))) (Nat.mul y2 y4)) /\ ((~ (@IN a0 x0 x1)) /\ (@FINITE a0 x1))) = y0) -> (y0 -> (forall y2 : nat, ((@CARD a0 (@INSERT a0 x0 x1)) = y2) -> forall y3 : type1413 a0 a1, forall y4 : nat, (forall y5 : a0, (@IN a0 y5 (@INSERT a0 x0 x1)) -> @HAS_SIZE a1 (y3 y5) y4) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y5 : prod a0 a1 => exists y6 : a0, exists y7 : a1, @SETSPEC (prod a0 a1) y5 ((@IN a0 y6 (@INSERT a0 x0 x1)) /\ (@IN a1 y7 (y3 y6))) (@pair a0 a1 y6 y7))) (Nat.mul y2 y4)) = y1) -> (((forall y2 : nat, ((@CARD a0 x1) = y2) -> forall y3 : type1413 a0 a1, forall y4 : nat, (forall y5 : a0, (@IN a0 y5 x1) -> @HAS_SIZE a1 (y3 y5) y4) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y5 : prod a0 a1 => exists y6 : a0, exists y7 : a1, @SETSPEC (prod a0 a1) y5 ((@IN a0 y6 x1) /\ (@IN a1 y7 (y3 y6))) (@pair a0 a1 y6 y7))) (Nat.mul y2 y4)) /\ ((~ (@IN a0 x0 x1)) /\ (@FINITE a0 x1))) -> forall y2 : nat, ((@CARD a0 (@INSERT a0 x0 x1)) = y2) -> forall y3 : type1413 a0 a1, forall y4 : nat, (forall y5 : a0, (@IN a0 y5 (@INSERT a0 x0 x1)) -> @HAS_SIZE a1 (y3 y5) y4) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y5 : prod a0 a1 => exists y6 : a0, exists y7 : a1, @SETSPEC (prod a0 a1) y5 ((@IN a0 y6 (@INSERT a0 x0 x1)) /\ (@IN a1 y7 (y3 y6))) (@pair a0 a1 y6 y7))) (Nat.mul y2 y4)) = (y0 -> y1)) x2.
Definition term1334 (a0 : Type') (x0 : a0) (x1 : nat) := forall y0 : a0, forall y1 : nat, ((@pair a0 nat x0 x1) = (@pair a0 nat y0 y1)) = ((x0 = y0) /\ (x1 = y1)).
Definition term1326 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : prod a0 a1) := forall y0 : a0, forall y1 : prod a0 a1, ((@pair a0 (prod a0 a1) x0 x1) = (@pair a0 (prod a0 a1) y0 y1)) = ((x0 = y0) /\ (x1 = y1)).
Definition term910 (a0 : Type') (a1 : Type') := forall y0 : a0, forall y1 : a0 -> Prop, ((forall y2 : nat, ((@CARD a0 y1) = y2) -> forall y3 : type1413 a0 a1, forall y4 : nat, (forall y5 : a0, (@IN a0 y5 y1) -> @HAS_SIZE a1 (y3 y5) y4) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y5 : prod a0 a1 => exists y6 : a0, exists y7 : a1, @SETSPEC (prod a0 a1) y5 ((@IN a0 y6 y1) /\ (@IN a1 y7 (y3 y6))) (@pair a0 a1 y6 y7))) (Nat.mul y2 y4)) /\ ((~ (@IN a0 y0 y1)) /\ (@FINITE a0 y1))) -> forall y2 : nat, ((S (@CARD a0 y1)) = y2) -> forall y3 : type1413 a0 a1, forall y4 : nat, (forall y5 : a0, ((y5 = y0) \/ (@IN a0 y5 y1)) -> @HAS_SIZE a1 (y3 y5) y4) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y5 : prod a0 a1 => exists y6 : a0, exists y7 : a1, @SETSPEC (prod a0 a1) y5 (((y6 = y0) \/ (@IN a0 y6 y1)) /\ (@IN a1 y7 (y3 y6))) (@pair a0 a1 y6 y7))) (Nat.mul y2 y4).
Definition term712 (a0 : Type') (a1 : Type') := forall y0 : a0, forall y1 : a0 -> Prop, ((forall y2 : nat, ((@CARD a0 y1) = y2) -> forall y3 : type1413 a0 a1, forall y4 : nat, (forall y5 : a0, (@IN a0 y5 y1) -> @HAS_SIZE a1 (y3 y5) y4) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y5 : prod a0 a1 => exists y6 : a0, exists y7 : a1, @SETSPEC (prod a0 a1) y5 ((@IN a0 y6 y1) /\ (@IN a1 y7 (y3 y6))) (@pair a0 a1 y6 y7))) (Nat.mul y2 y4)) /\ ((~ (@IN a0 y0 y1)) /\ (@FINITE a0 y1))) -> forall y2 : nat, ((@CARD a0 (@INSERT a0 y0 y1)) = y2) -> forall y3 : type1413 a0 a1, forall y4 : nat, (forall y5 : a0, (@IN a0 y5 (@INSERT a0 y0 y1)) -> @HAS_SIZE a1 (y3 y5) y4) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y5 : prod a0 a1 => exists y6 : a0, exists y7 : a1, @SETSPEC (prod a0 a1) y5 ((@IN a0 y6 (@INSERT a0 y0 y1)) /\ (@IN a1 y7 (y3 y6))) (@pair a0 a1 y6 y7))) (Nat.mul y2 y4).
Definition term711 (a0 : Type') (a1 : Type') := forall y0 : a0, forall y1 : a0 -> Prop, (((fun y2 : a0 -> Prop => forall y3 : nat, ((@CARD a0 y2) = y3) -> forall y4 : type1413 a0 a1, forall y5 : nat, (forall y6 : a0, (@IN a0 y6 y2) -> @HAS_SIZE a1 (y4 y6) y5) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y6 : prod a0 a1 => exists y7 : a0, exists y8 : a1, @SETSPEC (prod a0 a1) y6 ((@IN a0 y7 y2) /\ (@IN a1 y8 (y4 y7))) (@pair a0 a1 y7 y8))) (Nat.mul y3 y5)) y1) /\ ((~ (@IN a0 y0 y1)) /\ (@FINITE a0 y1))) -> (fun y2 : a0 -> Prop => forall y3 : nat, ((@CARD a0 y2) = y3) -> forall y4 : type1413 a0 a1, forall y5 : nat, (forall y6 : a0, (@IN a0 y6 y2) -> @HAS_SIZE a1 (y4 y6) y5) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y6 : prod a0 a1 => exists y7 : a0, exists y8 : a1, @SETSPEC (prod a0 a1) y6 ((@IN a0 y7 y2) /\ (@IN a1 y8 (y4 y7))) (@pair a0 a1 y7 y8))) (Nat.mul y3 y5)) (@INSERT a0 y0 y1).
Definition term556 (a0 : Type') := forall y0 : a0, forall y1 : a0 -> Prop, (@FINITE a0 y1) -> (@CARD a0 (@INSERT a0 y0 y1)) = (@COND nat (@IN a0 y0 y1) (@CARD a0 y1) (S (@CARD a0 y1))).
Definition term551 (a0 : Type') (x0 : a0) := forall y0 : a0, forall y1 : a0 -> Prop, (@IN a0 x0 (@INSERT a0 y0 y1)) = ((x0 = y0) \/ (@IN a0 x0 y1)).
Definition term1042 (a0 : Type') (a1 : Type') (x0 : nat) (x1 : a0) (x2 : a0 -> Prop) (x3 : type1413 a0 a1) (x4 : nat) (x5 : Prop) := ((forall y0 : a0, ((y0 = x1) -> @HAS_SIZE a1 (x3 y0) x4) /\ ((@IN a0 y0 x2) -> @HAS_SIZE a1 (x3 y0) x4)) = ((@HAS_SIZE a1 (x3 x1) x4) /\ (forall y0 : a0, (@IN a0 y0 x2) -> @HAS_SIZE a1 (x3 y0) x4))) -> (((@HAS_SIZE a1 (x3 x1) x4) /\ (forall y0 : a0, (@IN a0 y0 x2) -> @HAS_SIZE a1 (x3 y0) x4)) -> (@HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y0 : prod a0 a1 => exists y1 : a0, exists y2 : a1, @SETSPEC (prod a0 a1) y0 (((y1 = x1) \/ (@IN a0 y1 x2)) /\ (@IN a1 y2 (x3 y1))) (@pair a0 a1 y1 y2))) (Nat.mul x0 x4)) = x5) -> ((forall y0 : a0, ((y0 = x1) -> @HAS_SIZE a1 (x3 y0) x4) /\ ((@IN a0 y0 x2) -> @HAS_SIZE a1 (x3 y0) x4)) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y0 : prod a0 a1 => exists y1 : a0, exists y2 : a1, @SETSPEC (prod a0 a1) y0 (((y1 = x1) \/ (@IN a0 y1 x2)) /\ (@IN a1 y2 (x3 y1))) (@pair a0 a1 y1 y2))) (Nat.mul x0 x4)) = (((@HAS_SIZE a1 (x3 x1) x4) /\ (forall y0 : a0, (@IN a0 y0 x2) -> @HAS_SIZE a1 (x3 y0) x4)) -> x5).
Definition term532 (x0 : Prop) (x1 : Prop) := (fun y0 : Prop => y0 = (y0 /\ (x0 -> y0))) x1.
Definition term1821 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : a0 -> Prop) := forall y0 : type1413 a0 a1, exists y1 : nat -> a0, (fun y2 : type1413 a0 a1 => fun y3 : nat -> a0 => forall y4 : nat, ((@IN a0 (y3 y4) x1) /\ (~ (@HAS_SIZE a1 (y2 (y3 y4)) y4))) \/ (@HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (x0 x1 y2)) (Nat.mul (@CARD a0 x1) y4))) y0 y1.
Definition term1819 (a0 : Type') (a1 : Type') (x0 : type461 a0 a1) := forall y0 : type1413 a0 a1, exists y1 : nat -> a0, x0 y0 y1.
Definition term1703 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : type619 a0 a1) := forall y0 : a0 -> Prop, exists y1 : type465 a0 a1, (fun y2 : a0 -> Prop => fun y3 : type465 a0 a1 => forall y4 : type1413 a0 a1, forall y5 : prod a0 a1, (~ (x0 y2 y4 y5)) \/ (@SETSPEC (prod a0 a1) y5 ((@IN a0 (x1 y2 y4 y5) y2) /\ (@IN a1 (y3 y4 y5) (y4 (x1 y2 y4 y5)))) (@pair a0 a1 (x1 y2 y4 y5) (y3 y4 y5)))) y0 y1.
Definition term1701 (a0 : Type') (a1 : Type') (x0 : type585 a0 a1) := forall y0 : a0 -> Prop, exists y1 : type465 a0 a1, x0 y0 y1.
Definition term1680 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) := forall y0 : a0 -> Prop, exists y1 : type464 a0 a1, (fun y2 : a0 -> Prop => fun y3 : type464 a0 a1 => exists y4 : type465 a0 a1, forall y5 : type1413 a0 a1, forall y6 : prod a0 a1, (~ (x0 y2 y5 y6)) \/ (@SETSPEC (prod a0 a1) y6 ((@IN a0 (y3 y5 y6) y2) /\ (@IN a1 (y4 y5 y6) (y5 (y3 y5 y6)))) (@pair a0 a1 (y3 y5 y6) (y4 y5 y6)))) y0 y1.
Definition term1678 (a0 : Type') (a1 : Type') (x0 : type584 a0 a1) := forall y0 : a0 -> Prop, exists y1 : type464 a0 a1, x0 y0 y1.
Definition term1651 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : a0 -> Prop) (x2 : type464 a0 a1) := forall y0 : type1413 a0 a1, exists y1 : type1208 a0 a1, (fun y2 : type1413 a0 a1 => fun y3 : type1208 a0 a1 => forall y4 : prod a0 a1, (~ (x0 x1 y2 y4)) \/ (@SETSPEC (prod a0 a1) y4 ((@IN a0 (x2 y2 y4) x1) /\ (@IN a1 (y3 y4) (y2 (x2 y2 y4)))) (@pair a0 a1 (x2 y2 y4) (y3 y4)))) y0 y1.
Definition term1649 (a0 : Type') (a1 : Type') (x0 : type451 a0 a1) := forall y0 : type1413 a0 a1, exists y1 : type1208 a0 a1, x0 y0 y1.
Definition term1628 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : a0 -> Prop) := forall y0 : type1413 a0 a1, exists y1 : type1207 a0 a1, (fun y2 : type1413 a0 a1 => fun y3 : type1207 a0 a1 => exists y4 : type1208 a0 a1, forall y5 : prod a0 a1, (~ (x0 x1 y2 y5)) \/ (@SETSPEC (prod a0 a1) y5 ((@IN a0 (y3 y5) x1) /\ (@IN a1 (y4 y5) (y2 (y3 y5)))) (@pair a0 a1 (y3 y5) (y4 y5)))) y0 y1.
Definition term1626 (a0 : Type') (a1 : Type') (x0 : type450 a0 a1) := forall y0 : type1413 a0 a1, exists y1 : type1207 a0 a1, x0 y0 y1.
Definition term1589 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : a0 -> Prop) (x2 : type1413 a0 a1) (x3 : type1207 a0 a1) (x4 : prod a0 a1) := exists y0 : a1, (~ (x0 x1 x2 x4)) \/ (@SETSPEC (prod a0 a1) x4 ((@IN a0 (x3 x4) x1) /\ (@IN a1 y0 (x2 (x3 x4)))) (@pair a0 a1 (x3 x4) y0)).
Definition term1567 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : prod a0 a1) (x2 : a0 -> Prop) (x3 : type1413 a0 a1) (x4 : a0) := exists y0 : a1, (~ (x0 x2 x3 x1)) \/ (@SETSPEC (prod a0 a1) x1 ((@IN a0 x4 x2) /\ (@IN a1 y0 (x3 x4))) (@pair a0 a1 x4 y0)).
Definition term71 (a0 : Type') (a1 : Type') (x0 : prod a1 a0) (x1 : a1) (x2 : a1 -> Prop) (x3 : a0) (x4 : type1470 a0 a1) (x5 : a1) := (fun y0 : Prop => fun y1 : prod a1 a0 => y0 /\ (x0 = y1)) (((x5 = x1) \/ (@IN a1 x5 x2)) /\ (@IN a0 x3 (x4 x5))).
Definition term477 (a0 : Type') (x0 : a0 -> Prop) (x1 : a0) := (~ (x0 x1)) -> x0 x1.
Definition term345 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : a1) (x2 : prod a1 a0) (x3 : type1470 a0 a1) (x4 : a1) := fun y0 : a0 => (((x0 x1) /\ (x3 x1 y0)) /\ (x2 = (@pair a1 a0 x1 y0))) \/ ((x2 = (@pair a1 a0 x4 y0)) /\ (x3 x4 y0)).
Definition term1999 (a0 : Type') (x0 : type686 a0) (x1 : a0 -> Prop) (x2 : type686 a0) (x3 : a0 -> Prop) := (~ (x2 = x0)) \/ ((@I ((a0 -> Prop) -> Prop) x0 x1) \/ (~ (@I ((a0 -> Prop) -> Prop) x2 x3))).
Definition term330 (a0 : Type') (x0 : a0 -> Prop) (x1 : a0 -> Prop) := exists y0 : a0, (x0 y0) \/ (x1 y0).
Definition term715 (a0 : Type') (a1 : Type') := imp (((fun y0 : a0 -> Prop => forall y1 : nat, ((@CARD a0 y0) = y1) -> forall y2 : type1413 a0 a1, forall y3 : nat, (forall y4 : a0, (@IN a0 y4 y0) -> @HAS_SIZE a1 (y2 y4) y3) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y4 : prod a0 a1 => exists y5 : a0, exists y6 : a1, @SETSPEC (prod a0 a1) y4 ((@IN a0 y5 y0) /\ (@IN a1 y6 (y2 y5))) (@pair a0 a1 y5 y6))) (Nat.mul y1 y3)) (@EMPTY a0)) /\ (forall y0 : a0, forall y1 : a0 -> Prop, (((fun y2 : a0 -> Prop => forall y3 : nat, ((@CARD a0 y2) = y3) -> forall y4 : type1413 a0 a1, forall y5 : nat, (forall y6 : a0, (@IN a0 y6 y2) -> @HAS_SIZE a1 (y4 y6) y5) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y6 : prod a0 a1 => exists y7 : a0, exists y8 : a1, @SETSPEC (prod a0 a1) y6 ((@IN a0 y7 y2) /\ (@IN a1 y8 (y4 y7))) (@pair a0 a1 y7 y8))) (Nat.mul y3 y5)) y1) /\ ((~ (@IN a0 y0 y1)) /\ (@FINITE a0 y1))) -> (fun y2 : a0 -> Prop => forall y3 : nat, ((@CARD a0 y2) = y3) -> forall y4 : type1413 a0 a1, forall y5 : nat, (forall y6 : a0, (@IN a0 y6 y2) -> @HAS_SIZE a1 (y4 y6) y5) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y6 : prod a0 a1 => exists y7 : a0, exists y8 : a1, @SETSPEC (prod a0 a1) y6 ((@IN a0 y7 y2) /\ (@IN a1 y8 (y4 y7))) (@pair a0 a1 y7 y8))) (Nat.mul y3 y5)) (@INSERT a0 y0 y1))).
Definition term1139 (a0 : Type') (a1 : Type') (x0 : type1413 a0 a1) (x1 : a0) (x2 : a1) (x3 : a1) := ((@IN a1 x2 (x0 x1)) /\ ((@IN a1 x3 (x0 x1)) /\ (((fun y0 : a1 => @pair a0 a1 x1 y0) x2) = ((fun y0 : a1 => @pair a0 a1 x1 y0) x3)))) -> x2 = x3.
Definition term807 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a0 -> Prop) (x2 : Prop) := (((forall y0 : nat, ((@CARD a0 x1) = y0) -> forall y1 : type1413 a0 a1, forall y2 : nat, (forall y3 : a0, (@IN a0 y3 x1) -> @HAS_SIZE a1 (y1 y3) y2) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y3 : prod a0 a1 => exists y4 : a0, exists y5 : a1, @SETSPEC (prod a0 a1) y3 ((@IN a0 y4 x1) /\ (@IN a1 y5 (y1 y4))) (@pair a0 a1 y4 y5))) (Nat.mul y0 y2)) /\ ((~ (@IN a0 x0 x1)) /\ (@FINITE a0 x1))) -> (forall y0 : nat, ((@CARD a0 (@INSERT a0 x0 x1)) = y0) -> forall y1 : type1413 a0 a1, forall y2 : nat, (forall y3 : a0, (@IN a0 y3 (@INSERT a0 x0 x1)) -> @HAS_SIZE a1 (y1 y3) y2) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y3 : prod a0 a1 => exists y4 : a0, exists y5 : a1, @SETSPEC (prod a0 a1) y3 ((@IN a0 y4 (@INSERT a0 x0 x1)) /\ (@IN a1 y5 (y1 y4))) (@pair a0 a1 y4 y5))) (Nat.mul y0 y2)) = x2) -> (((forall y0 : nat, ((@CARD a0 x1) = y0) -> forall y1 : type1413 a0 a1, forall y2 : nat, (forall y3 : a0, (@IN a0 y3 x1) -> @HAS_SIZE a1 (y1 y3) y2) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y3 : prod a0 a1 => exists y4 : a0, exists y5 : a1, @SETSPEC (prod a0 a1) y3 ((@IN a0 y4 x1) /\ (@IN a1 y5 (y1 y4))) (@pair a0 a1 y4 y5))) (Nat.mul y0 y2)) /\ ((~ (@IN a0 x0 x1)) /\ (@FINITE a0 x1))) -> forall y0 : nat, ((@CARD a0 (@INSERT a0 x0 x1)) = y0) -> forall y1 : type1413 a0 a1, forall y2 : nat, (forall y3 : a0, (@IN a0 y3 (@INSERT a0 x0 x1)) -> @HAS_SIZE a1 (y1 y3) y2) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y3 : prod a0 a1 => exists y4 : a0, exists y5 : a1, @SETSPEC (prod a0 a1) y3 ((@IN a0 y4 (@INSERT a0 x0 x1)) /\ (@IN a1 y5 (y1 y4))) (@pair a0 a1 y4 y5))) (Nat.mul y0 y2)) = (((forall y0 : nat, ((@CARD a0 x1) = y0) -> forall y1 : type1413 a0 a1, forall y2 : nat, (forall y3 : a0, (@IN a0 y3 x1) -> @HAS_SIZE a1 (y1 y3) y2) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y3 : prod a0 a1 => exists y4 : a0, exists y5 : a1, @SETSPEC (prod a0 a1) y3 ((@IN a0 y4 x1) /\ (@IN a1 y5 (y1 y4))) (@pair a0 a1 y4 y5))) (Nat.mul y0 y2)) /\ ((~ (@IN a0 x0 x1)) /\ (@FINITE a0 x1))) -> x2).
Definition term2076 (a0 : Type') (x0 : type686 a0) (x1 : type686 a0) (x2 : a0 -> Prop) := (~ (x1 = x0)) \/ (~ (@I ((a0 -> Prop) -> Prop) x1 x2)).
Definition term510 (a0 : Type') (x0 : a0 -> Prop) (x1 : a0 -> Prop) := (fun y0 : a0 -> Prop => (forall y1 : a0, (x0 y1) /\ (y0 y1)) = ((forall y1 : a0, x0 y1) /\ (forall y1 : a0, y0 y1))) x1.
Definition term816 (a0 : Type') (x0 : Prop) (x1 : a0) (x2 : a0) (x3 : Prop) (x4 : a0) (x5 : a0) := (x0 = x3) -> (x3 -> x1 = x4) -> ((~ x3) -> x2 = x5) -> (@COND a0 x0 x1 x2) = (@COND a0 x3 x4 x5).
Definition term672 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) := forall y0 : nat, (@FINITE a0 x0) -> ((@CARD a0 x0) = y0) -> forall y1 : type1413 a0 a1, forall y2 : nat, (forall y3 : a0, (@IN a0 y3 x0) -> @HAS_SIZE a1 (y1 y3) y2) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y3 : prod a0 a1 => exists y4 : a0, exists y5 : a1, @SETSPEC (prod a0 a1) y3 ((@IN a0 y4 x0) /\ (@IN a1 y5 (y1 y4))) (@pair a0 a1 y4 y5))) (Nat.mul y0 y2).
Definition term1422 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : type1413 a0 a1) := fun y0 : prod a0 a1 => (fun y1 : prod a0 a1 => exists y2 : a0, exists y3 : a1, @SETSPEC (prod a0 a1) y1 ((@IN a0 y2 x0) /\ (@IN a1 y3 (x1 y2))) (@pair a0 a1 y2 y3)) y0.
Definition term2098 (a0 : Type') (a1 : Type') (x0 : a0) := (fun y0 : a0 => forall y1 : type1413 a0 a1, forall y2 : a1, forall y3 : prod a0 a1, forall y4 : a1, forall y5 : a0, forall y6 : a0 -> Prop, forall y7 : nat, forall y8 : nat, (~ (@IN a0 y0 y6)) -> (@FINITE a0 y6) -> (y8 = (S (@CARD a0 y6))) -> (@HAS_SIZE a1 (y1 y0) y7) -> (forall y9 : a0, (@IN a0 y9 y6) -> @HAS_SIZE a1 (y1 y9) y7) -> (forall y9 : type1413 a0 a1, forall y10 : nat, (forall y11 : a0, (@IN a0 y11 y6) -> @HAS_SIZE a1 (y9 y11) y10) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y11 : prod a0 a1 => exists y12 : a0, exists y13 : a1, @SETSPEC (prod a0 a1) y11 ((@IN a0 y12 y6) /\ (@IN a1 y13 (y9 y12))) (@pair a0 a1 y12 y13))) (Nat.mul (@CARD a0 y6) y10)) -> (@IN a0 y5 y6) -> (@IN a1 y4 (y1 y5)) -> (y3 = (@pair a0 a1 y5 y4)) -> (y3 = (@pair a0 a1 y0 y2)) -> (@IN a1 y2 (y1 y0)) -> (forall y9 : a0, forall y10 : a1, forall y11 : a0, forall y12 : a1, ((@pair a0 a1 y9 y10) = (@pair a0 a1 y11 y12)) = ((y9 = y11) /\ (y10 = y12))) -> (forall y9 : a0, forall y10 : nat, forall y11 : a0, forall y12 : nat, ((@pair a0 nat y9 y10) = (@pair a0 nat y11 y12)) = ((y9 = y11) /\ (y10 = y12))) -> (forall y9 : a0, forall y10 : prod a0 a1, forall y11 : a0, forall y12 : prod a0 a1, ((@pair a0 (prod a0 a1) y9 y10) = (@pair a0 (prod a0 a1) y11 y12)) = ((y9 = y11) /\ (y10 = y12))) -> (forall y9 : nat, forall y10 : a1, forall y11 : nat, forall y12 : a1, ((@pair nat a1 y9 y10) = (@pair nat a1 y11 y12)) = ((y9 = y11) /\ (y10 = y12))) -> (forall y9 : prod a0 a1, forall y10 : a1, forall y11 : prod a0 a1, forall y12 : a1, ((@pair (prod a0 a1) a1 y9 y10) = (@pair (prod a0 a1) a1 y11 y12)) = ((y9 = y11) /\ (y10 = y12))) -> False) x0.
Definition term1453 (a0 : Type') (a1 : Type') (x0 : prod a0 a1) (x1 : a0 -> Prop) (x2 : type1413 a0 a1) (x3 : a0) := (fun y0 : a0 => exists y1 : a1, @SETSPEC (prod a0 a1) x0 ((@IN a0 y0 x1) /\ (@IN a1 y1 (x2 y0))) (@pair a0 a1 y0 y1)) x3.
Definition term1458 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : a0 -> Prop) (x2 : type1413 a0 a1) (x3 : prod a0 a1) := or (~ (x0 x1 x2 x3)).
Definition term1239 (a0 : Type') (a1 : Type') (x0 : prod a0 a1) (x1 : a0) (x2 : a1) := imp (x0 = (@pair a0 a1 x1 x2)).
Definition term885 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a0 -> Prop) (x2 : type1413 a0 a1) (x3 : nat) (x4 : nat) := @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y0 : prod a0 a1 => exists y1 : a0, exists y2 : a1, @SETSPEC (prod a0 a1) y0 (((y1 = x0) \/ (@IN a0 y1 x1)) /\ (@IN a1 y2 (x2 y1))) (@pair a0 a1 y1 y2))) (Nat.mul x3 x4).
Definition term843 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a0 -> Prop) (x2 : type1413 a0 a1) (x3 : nat) (x4 : nat) := @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y0 : prod a0 a1 => exists y1 : a0, exists y2 : a1, @SETSPEC (prod a0 a1) y0 ((@IN a0 y1 (@INSERT a0 x0 x1)) /\ (@IN a1 y2 (x2 y1))) (@pair a0 a1 y1 y2))) (Nat.mul x3 x4).
Definition term2071 (a0 : Type') (x0 : type686 a0) (x1 : a0 -> Prop) := ~ (@I ((a0 -> Prop) -> Prop) x0 x1).
Definition term8 (a0 : Type') (x0 : a0 -> Prop) := forall y0 : a0 -> Prop, forall y1 : a0, (@IN a0 y1 (@INTER a0 x0 y0)) = ((@IN a0 y1 x0) /\ (@IN a0 y1 y0)).
Definition term1965 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a0) (x2 : a1) := fun y0 : a1 => ((@I (a1 -> prod a0 a1) (@I (a0 -> a1 -> prod a0 a1) (@pair a0 a1) x0) x2) = (@I (a1 -> prod a0 a1) (@I (a0 -> a1 -> prod a0 a1) (@pair a0 a1) x1) y0)) \/ ((~ (x0 = x1)) \/ (~ (x2 = y0))).
Definition term1840 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : a0 -> Prop) := fun y0 : type471 a0 a1 => forall y1 : type1413 a0 a1, forall y2 : nat, ((@IN a0 (y0 y1 y2) x1) /\ (~ (@HAS_SIZE a1 (y1 (y0 y1 y2)) y2))) \/ (@HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (x0 x1 y1)) (Nat.mul (@CARD a0 x1) y2)).
Definition term1724 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : type619 a0 a1) := fun y0 : type620 a0 a1 => forall y1 : a0 -> Prop, forall y2 : type1413 a0 a1, forall y3 : prod a0 a1, (~ (x0 y1 y2 y3)) \/ (@SETSPEC (prod a0 a1) y3 ((@IN a0 (x1 y1 y2 y3) y1) /\ (@IN a1 (y0 y1 y2 y3) (y2 (x1 y1 y2 y3)))) (@pair a0 a1 (x1 y1 y2 y3) (y0 y1 y2 y3))).
Definition term1707 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : type619 a0 a1) (x2 : a0 -> Prop) := fun y0 : type465 a0 a1 => forall y1 : type1413 a0 a1, forall y2 : prod a0 a1, (~ (x0 x2 y1 y2)) \/ (@SETSPEC (prod a0 a1) y2 ((@IN a0 (x1 x2 y1 y2) x2) /\ (@IN a1 (y0 y1 y2) (y1 (x1 x2 y1 y2)))) (@pair a0 a1 (x1 x2 y1 y2) (y0 y1 y2))).
Definition term1672 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : a0 -> Prop) (x2 : type464 a0 a1) := fun y0 : type465 a0 a1 => forall y1 : type1413 a0 a1, forall y2 : prod a0 a1, (~ (x0 x1 y1 y2)) \/ (@SETSPEC (prod a0 a1) y2 ((@IN a0 (x2 y1 y2) x1) /\ (@IN a1 (y0 y1 y2) (y1 (x2 y1 y2)))) (@pair a0 a1 (x2 y1 y2) (y0 y1 y2))).
Definition term1946 (a0 : Type') (x0 : a0) (x1 : a0 -> Prop) := @I ((a0 -> Prop) -> Prop) (@I (a0 -> (a0 -> Prop) -> Prop) (@IN a0) x0) x1.
Definition term1559 (a0 : Type') (a1 : Type') (x0 : prod a0 a1) (x1 : a0 -> Prop) (x2 : type1413 a0 a1) (x3 : a0) := fun y0 : a1 => (fun y1 : a1 => @SETSPEC (prod a0 a1) x0 ((@IN a0 x3 x1) /\ (@IN a1 y1 (x2 x3))) (@pair a0 a1 x3 y1)) y0.
Definition term719 (a0 : Type') (a1 : Type') := forall y0 : a0 -> Prop, (@FINITE a0 y0) -> (fun y1 : a0 -> Prop => forall y2 : nat, ((@CARD a0 y1) = y2) -> forall y3 : type1413 a0 a1, forall y4 : nat, (forall y5 : a0, (@IN a0 y5 y1) -> @HAS_SIZE a1 (y3 y5) y4) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y5 : prod a0 a1 => exists y6 : a0, exists y7 : a1, @SETSPEC (prod a0 a1) y5 ((@IN a0 y6 y1) /\ (@IN a1 y7 (y3 y6))) (@pair a0 a1 y6 y7))) (Nat.mul y2 y4)) y0.
Definition term646 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : nat) := forall y0 : type1413 a0 a1, (@FINITE a0 x0) -> (fun y1 : type1413 a0 a1 => ((@CARD a0 x0) = x1) -> forall y2 : nat, (forall y3 : a0, (@IN a0 y3 x0) -> @HAS_SIZE a1 (y1 y3) y2) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y3 : prod a0 a1 => exists y4 : a0, exists y5 : a1, @SETSPEC (prod a0 a1) y3 ((@IN a0 y4 x0) /\ (@IN a1 y5 (y1 y4))) (@pair a0 a1 y4 y5))) (Nat.mul x1 y2)) y0.
Definition term616 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : type1413 a0 a1) (x2 : nat) := fun y0 : nat => ((@CARD a0 x0) = x2) -> (forall y1 : a0, (@IN a0 y1 x0) -> @HAS_SIZE a1 (x1 y1) y0) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y1 : prod a0 a1 => exists y2 : a0, exists y3 : a1, @SETSPEC (prod a0 a1) y1 ((@IN a0 y2 x0) /\ (@IN a1 y3 (x1 y2))) (@pair a0 a1 y2 y3))) (Nat.mul x2 y0).
Definition term1949 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a1) := @eq (prod a0 a1) (@I (a1 -> prod a0 a1) (@I (a0 -> a1 -> prod a0 a1) (@pair a0 a1) x0) x1).
Definition term1456 (a0 : Type') (a1 : Type') (x0 : prod a0 a1) (x1 : a0 -> Prop) (x2 : type1413 a0 a1) := fun y0 : a0 => forall y1 : a1, ~ (@SETSPEC (prod a0 a1) x0 ((@IN a0 y0 x1) /\ (@IN a1 y1 (x2 y0))) (@pair a0 a1 y0 y1)).
Definition term766 (a0 : Type') (a1 : Type') (x0 : prod a0 a1) (x1 : type1413 a0 a1) (x2 : a0) := fun y0 : a1 => @SETSPEC (prod a0 a1) x0 ((@IN a0 x2 (@EMPTY a0)) /\ (@IN a1 y0 (x1 x2))) (@pair a0 a1 x2 y0).
Definition term1770 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : type1413 a0 a1) (x2 : nat) := or (exists y0 : a0, (@IN a0 y0 x0) /\ (~ (@HAS_SIZE a1 (x1 y0) x2))).
Definition term1140 (a0 : Type') (a1 : Type') (x0 : type1413 a0 a1) (x1 : a0) (x2 : a1) (x3 : a1) := ((@IN a1 x2 (x0 x1)) /\ ((@IN a1 x3 (x0 x1)) /\ (x2 = x3))) -> True.
Definition term1522 (a0 : Type') (x0 : type686 a0) (x1 : type686 a0) := (forall y0 : a0 -> Prop, x0 y0) /\ (forall y0 : a0 -> Prop, x1 y0).
Definition term1498 (a0 : Type') (a1 : Type') (x0 : type475 a0 a1) (x1 : type475 a0 a1) := (forall y0 : type1413 a0 a1, x0 y0) /\ (forall y0 : type1413 a0 a1, x1 y0).
Definition term1993 (a0 : Type') (a1 : Type') (x0 : a1) (x1 : a1) (x2 : a0) (x3 : a0) := (~ ((@I (a1 -> prod a0 a1) (@I (a0 -> a1 -> prod a0 a1) (@pair a0 a1) x2) x0) = (@I (a1 -> prod a0 a1) (@I (a0 -> a1 -> prod a0 a1) (@pair a0 a1) x3) x1))) \/ (x2 = x3).
Definition term275 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : prod a1 a0) (x2 : type1470 a0 a1) (x3 : a1) := (exists y0 : a1, exists y1 : a0, (((y0 = x3) \/ (x0 y0)) /\ (x2 y0 y1)) /\ (x1 = (@pair a1 a0 y0 y1))) /\ ((forall y0 : a1, forall y1 : a0, ((~ (x0 y0)) \/ (~ (x2 y0 y1))) \/ (~ (x1 = (@pair a1 a0 y0 y1)))) /\ (forall y0 : a0, (~ (x1 = (@pair a1 a0 x3 y0))) \/ (~ (x2 x3 y0)))).
Definition term41 (a0 : Type') (x0 : a0 -> Prop) (x1 : a0 -> Prop) (x2 : nat) (x3 : nat) := (forall y0 : a0 -> Prop, forall y1 : a0 -> Prop, forall y2 : nat, forall y3 : nat, ((@HAS_SIZE a0 y0 y2) /\ ((@HAS_SIZE a0 y1 y3) /\ (@DISJOINT a0 y0 y1))) -> @HAS_SIZE a0 (@UNION a0 y0 y1) (Nat.add y2 y3)) -> @HAS_SIZE a0 (@UNION a0 x0 x1) (Nat.add x2 x3).
Definition term2017 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a1) (x2 : a0) (x3 : a1) := imp ((@I (a1 -> prod a0 a1) (@I (a0 -> a1 -> prod a0 a1) (@pair a0 a1) x0) x1) = (@I (a1 -> prod a0 a1) (@I (a0 -> a1 -> prod a0 a1) (@pair a0 a1) x2) x3)).
Definition term612 (x0 : Prop) (x1 : nat -> Prop) := forall y0 : nat, x0 -> x1 y0.
Definition term762 (a0 : Type') (a1 : Type') (x0 : a1) (x1 : type1413 a0 a1) (x2 : a0) := False /\ (@IN a1 x0 (x1 x2)).
Definition term1977 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a0) (x2 : a1) := forall y0 : a1, ((~ ((@I (a1 -> prod a0 a1) (@I (a0 -> a1 -> prod a0 a1) (@pair a0 a1) x0) x2) = (@I (a1 -> prod a0 a1) (@I (a0 -> a1 -> prod a0 a1) (@pair a0 a1) x1) y0))) \/ (x0 = x1)) /\ ((~ ((@I (a1 -> prod a0 a1) (@I (a0 -> a1 -> prod a0 a1) (@pair a0 a1) x0) x2) = (@I (a1 -> prod a0 a1) (@I (a0 -> a1 -> prod a0 a1) (@pair a0 a1) x1) y0))) \/ (x2 = y0)).
Definition term1684 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : a0 -> Prop) (x2 : type464 a0 a1) := (fun y0 : a0 -> Prop => fun y1 : type464 a0 a1 => exists y2 : type465 a0 a1, forall y3 : type1413 a0 a1, forall y4 : prod a0 a1, (~ (x0 y0 y3 y4)) \/ (@SETSPEC (prod a0 a1) y4 ((@IN a0 (y1 y3 y4) y0) /\ (@IN a1 (y2 y3 y4) (y3 (y1 y3 y4)))) (@pair a0 a1 (y1 y3 y4) (y2 y3 y4)))) x1 x2.
Definition term2025 (a0 : Type') (x0 : a0) (x1 : a0) (x2 : type1364 a0) (x3 : type1364 a0) := ((@I (a0 -> (a0 -> Prop) -> Prop) x2 x0) = (@I (a0 -> (a0 -> Prop) -> Prop) x3 x1)) \/ ((~ (x0 = x1)) \/ (~ (x2 = x3))).
Definition term342 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : a1) (x2 : prod a1 a0) (x3 : type1470 a0 a1) (x4 : a1) (x5 : a0) := ((fun y0 : a0 => ((x0 x1) /\ (x3 x1 y0)) /\ (x2 = (@pair a1 a0 x1 y0))) x5) \/ ((fun y0 : a0 => (x2 = (@pair a1 a0 x4 y0)) /\ (x3 x4 y0)) x5).
Definition term17 (a0 : Type') (x0 : type919 a0) (x1 : a0) := (fun y0 : a0 => (@IN a0 y0 (@GSPEC a0 (fun y1 : a0 => x0 (@SETSPEC a0 y1)))) = (x0 (fun y1 : Prop => fun y2 : a0 => y1 /\ (y0 = y2)))) x1.
Definition term781 (a0 : Type') (a1 : Type') (x0 : type1413 a0 a1) (x1 : nat) (x2 : nat) := True -> (@HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y0 : prod a0 a1 => exists y1 : a0, exists y2 : a1, @SETSPEC (prod a0 a1) y0 ((@IN a0 y1 (@EMPTY a0)) /\ (@IN a1 y2 (x0 y1))) (@pair a0 a1 y1 y2))) (Nat.mul x1 x2)) = (@HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y0 : prod a0 a1 => exists y1 : a0, exists y2 : a1, @SETSPEC (prod a0 a1) y0 False (@pair a0 a1 y1 y2))) (Nat.mul x1 x2)).
Definition term1483 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : a0 -> Prop) (x2 : type1413 a0 a1) := fun y0 : prod a0 a1 => ((fun y1 : prod a0 a1 => (x0 x1 x2 y1) \/ (forall y2 : a0, forall y3 : a1, ~ (@SETSPEC (prod a0 a1) y1 ((@IN a0 y2 x1) /\ (@IN a1 y3 (x2 y2))) (@pair a0 a1 y2 y3)))) y0) /\ ((fun y1 : prod a0 a1 => (~ (x0 x1 x2 y1)) \/ (exists y2 : a0, exists y3 : a1, @SETSPEC (prod a0 a1) y1 ((@IN a0 y2 x1) /\ (@IN a1 y3 (x2 y2))) (@pair a0 a1 y2 y3))) y0).
Definition term1763 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : type1413 a0 a1) (x2 : nat) := ~ (forall y0 : a0, (@IN a0 y0 x0) -> @HAS_SIZE a1 (x1 y0) x2).
Definition term1685 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : a0 -> Prop) (x2 : type464 a0 a1) := (fun y0 : type464 a0 a1 => exists y1 : type465 a0 a1, forall y2 : type1413 a0 a1, forall y3 : prod a0 a1, (~ (x0 x1 y2 y3)) \/ (@SETSPEC (prod a0 a1) y3 ((@IN a0 (y0 y2 y3) x1) /\ (@IN a1 (y1 y2 y3) (y2 (y0 y2 y3)))) (@pair a0 a1 (y0 y2 y3) (y1 y2 y3)))) x2.
Definition term1738 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : type619 a0 a1) := (forall y0 : a0 -> Prop, forall y1 : type1413 a0 a1, forall y2 : prod a0 a1, (x0 y0 y1 y2) \/ (forall y3 : a0, forall y4 : a1, ~ (@SETSPEC (prod a0 a1) y2 ((@IN a0 y3 y0) /\ (@IN a1 y4 (y1 y3))) (@pair a0 a1 y3 y4)))) /\ ((fun y0 : type619 a0 a1 => exists y1 : type620 a0 a1, forall y2 : a0 -> Prop, forall y3 : type1413 a0 a1, forall y4 : prod a0 a1, (~ (x0 y2 y3 y4)) \/ (@SETSPEC (prod a0 a1) y4 ((@IN a0 (y0 y2 y3 y4) y2) /\ (@IN a1 (y1 y2 y3 y4) (y3 (y0 y2 y3 y4)))) (@pair a0 a1 (y0 y2 y3 y4) (y1 y2 y3 y4)))) x1).
Definition term2034 (a0 : Type') (x0 : a0) (x1 : a0) := ~ (~ (x0 = x1)).
Definition term4 (a0 : Type') (x0 : a0 -> Prop) := forall y0 : a0 -> Prop, (x0 = y0) = (forall y1 : a0, (@IN a0 y1 x0) = (@IN a0 y1 y0)).
Definition term1362 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : a0 -> Prop) (x2 : a0) (x3 : a1) (x4 : prod a0 a1) (x5 : a1) (x6 : type1413 a0 a1) (x7 : a0) := fun y0 : nat => forall y1 : nat, (~ (@IN a0 x7 x1)) -> (@FINITE a0 x1) -> (y1 = (S (@CARD a0 x1))) -> (@HAS_SIZE a1 (x6 x7) y0) -> (forall y2 : a0, (@IN a0 y2 x1) -> @HAS_SIZE a1 (x6 y2) y0) -> (forall y2 : type1413 a0 a1, forall y3 : nat, (forall y4 : a0, (@IN a0 y4 x1) -> @HAS_SIZE a1 (y2 y4) y3) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (x0 x1 y2)) (Nat.mul (@CARD a0 x1) y3)) -> (@IN a0 x2 x1) -> (@IN a1 x3 (x6 x2)) -> (x4 = (@pair a0 a1 x2 x3)) -> (x4 = (@pair a0 a1 x7 x5)) -> (@IN a1 x5 (x6 x7)) -> (forall y2 : a0, forall y3 : a1, forall y4 : a0, forall y5 : a1, ((@pair a0 a1 y2 y3) = (@pair a0 a1 y4 y5)) = ((y2 = y4) /\ (y3 = y5))) -> (forall y2 : a0, forall y3 : nat, forall y4 : a0, forall y5 : nat, ((@pair a0 nat y2 y3) = (@pair a0 nat y4 y5)) = ((y2 = y4) /\ (y3 = y5))) -> (forall y2 : a0, forall y3 : prod a0 a1, forall y4 : a0, forall y5 : prod a0 a1, ((@pair a0 (prod a0 a1) y2 y3) = (@pair a0 (prod a0 a1) y4 y5)) = ((y2 = y4) /\ (y3 = y5))) -> (forall y2 : nat, forall y3 : a1, forall y4 : nat, forall y5 : a1, ((@pair nat a1 y2 y3) = (@pair nat a1 y4 y5)) = ((y2 = y4) /\ (y3 = y5))) -> ~ (forall y2 : prod a0 a1, forall y3 : a1, forall y4 : prod a0 a1, forall y5 : a1, ((@pair (prod a0 a1) a1 y2 y3) = (@pair (prod a0 a1) a1 y4 y5)) = ((y2 = y4) /\ (y3 = y5))).
Definition term1269 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : a0) (x2 : a1) (x3 : prod a0 a1) (x4 : a1) (x5 : type1413 a0 a1) (x6 : a0) := fun y0 : nat => forall y1 : nat, (~ (@IN a0 x6 x0)) -> (@FINITE a0 x0) -> (y1 = (S (@CARD a0 x0))) -> (@HAS_SIZE a1 (x5 x6) y0) -> (forall y2 : a0, (@IN a0 y2 x0) -> @HAS_SIZE a1 (x5 y2) y0) -> (forall y2 : type1413 a0 a1, forall y3 : nat, (forall y4 : a0, (@IN a0 y4 x0) -> @HAS_SIZE a1 (y2 y4) y3) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y4 : prod a0 a1 => exists y5 : a0, exists y6 : a1, @SETSPEC (prod a0 a1) y4 ((@IN a0 y5 x0) /\ (@IN a1 y6 (y2 y5))) (@pair a0 a1 y5 y6))) (Nat.mul (@CARD a0 x0) y3)) -> (@IN a0 x1 x0) -> (@IN a1 x2 (x5 x1)) -> (x3 = (@pair a0 a1 x1 x2)) -> (x3 = (@pair a0 a1 x6 x4)) -> (@IN a1 x4 (x5 x6)) -> (forall y2 : a0, forall y3 : a1, forall y4 : a0, forall y5 : a1, ((@pair a0 a1 y2 y3) = (@pair a0 a1 y4 y5)) = ((y2 = y4) /\ (y3 = y5))) -> (forall y2 : a0, forall y3 : nat, forall y4 : a0, forall y5 : nat, ((@pair a0 nat y2 y3) = (@pair a0 nat y4 y5)) = ((y2 = y4) /\ (y3 = y5))) -> (forall y2 : a0, forall y3 : prod a0 a1, forall y4 : a0, forall y5 : prod a0 a1, ((@pair a0 (prod a0 a1) y2 y3) = (@pair a0 (prod a0 a1) y4 y5)) = ((y2 = y4) /\ (y3 = y5))) -> (forall y2 : nat, forall y3 : a1, forall y4 : nat, forall y5 : a1, ((@pair nat a1 y2 y3) = (@pair nat a1 y4 y5)) = ((y2 = y4) /\ (y3 = y5))) -> ~ (forall y2 : prod a0 a1, forall y3 : a1, forall y4 : prod a0 a1, forall y5 : a1, ((@pair (prod a0 a1) a1 y2 y3) = (@pair (prod a0 a1) a1 y4 y5)) = ((y2 = y4) /\ (y3 = y5))).
Definition term1268 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : a0) (x2 : a1) (x3 : prod a0 a1) (x4 : a1) (x5 : type1413 a0 a1) (x6 : a0) := fun y0 : nat => forall y1 : nat, (~ (@IN a0 x6 x0)) -> (@FINITE a0 x0) -> (y1 = (S (@CARD a0 x0))) -> (@HAS_SIZE a1 (x5 x6) y0) -> (forall y2 : a0, (@IN a0 y2 x0) -> @HAS_SIZE a1 (x5 y2) y0) -> (forall y2 : type1413 a0 a1, forall y3 : nat, (forall y4 : a0, (@IN a0 y4 x0) -> @HAS_SIZE a1 (y2 y4) y3) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y4 : prod a0 a1 => exists y5 : a0, exists y6 : a1, @SETSPEC (prod a0 a1) y4 ((@IN a0 y5 x0) /\ (@IN a1 y6 (y2 y5))) (@pair a0 a1 y5 y6))) (Nat.mul (@CARD a0 x0) y3)) -> (@IN a0 x1 x0) -> (@IN a1 x2 (x5 x1)) -> (x3 = (@pair a0 a1 x1 x2)) -> (x3 = (@pair a0 a1 x6 x4)) -> (@IN a1 x4 (x5 x6)) -> (forall y2 : a0, forall y3 : a1, forall y4 : a0, forall y5 : a1, ((@pair a0 a1 y2 y3) = (@pair a0 a1 y4 y5)) = ((y2 = y4) /\ (y3 = y5))) -> (forall y2 : a0, forall y3 : nat, forall y4 : a0, forall y5 : nat, ((@pair a0 nat y2 y3) = (@pair a0 nat y4 y5)) = ((y2 = y4) /\ (y3 = y5))) -> (forall y2 : a0, forall y3 : prod a0 a1, forall y4 : a0, forall y5 : prod a0 a1, ((@pair a0 (prod a0 a1) y2 y3) = (@pair a0 (prod a0 a1) y4 y5)) = ((y2 = y4) /\ (y3 = y5))) -> (forall y2 : nat, forall y3 : a1, forall y4 : nat, forall y5 : a1, ((@pair nat a1 y2 y3) = (@pair nat a1 y4 y5)) = ((y2 = y4) /\ (y3 = y5))) -> (forall y2 : prod a0 a1, forall y3 : a1, forall y4 : prod a0 a1, forall y5 : a1, ((@pair (prod a0 a1) a1 y2 y3) = (@pair (prod a0 a1) a1 y4 y5)) = ((y2 = y4) /\ (y3 = y5))) -> False.
Definition term485 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : type1470 a0 a1) (x2 : a1) (x3 : a0) (x4 : a1) (x5 : a0) := (x0 x4) /\ ((x1 x4 x5) /\ ((@pair a1 a0 x2 x3) = (@pair a1 a0 x4 x5))).
Definition term918 (a0 : Type') (a1 : Type') (x0 : nat) := @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y0 : prod a0 a1 => exists y1 : a0, exists y2 : a1, @SETSPEC (prod a0 a1) y0 False (@pair a0 a1 y1 y2))) (Nat.mul (NUMERAL 0) x0).
Definition term1429 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : a0 -> Prop) (x2 : type1413 a0 a1) := fun y0 : prod a0 a1 => (x0 x1 x2 y0) = (exists y1 : a0, exists y2 : a1, @SETSPEC (prod a0 a1) y0 ((@IN a0 y1 x1) /\ (@IN a1 y2 (x2 y1))) (@pair a0 a1 y1 y2)).
Definition term1982 (a0 : Type') (a1 : Type') := fun y0 : a0 => forall y1 : a1, forall y2 : a0, forall y3 : a1, ((~ ((@I (a1 -> prod a0 a1) (@I (a0 -> a1 -> prod a0 a1) (@pair a0 a1) y0) y1) = (@I (a1 -> prod a0 a1) (@I (a0 -> a1 -> prod a0 a1) (@pair a0 a1) y2) y3))) \/ (y0 = y2)) /\ ((~ ((@I (a1 -> prod a0 a1) (@I (a0 -> a1 -> prod a0 a1) (@pair a0 a1) y0) y1) = (@I (a1 -> prod a0 a1) (@I (a0 -> a1 -> prod a0 a1) (@pair a0 a1) y2) y3))) \/ (y1 = y3)).
Definition term1971 (a0 : Type') (a1 : Type') := fun y0 : a0 => forall y1 : a1, forall y2 : a0, forall y3 : a1, ((@I (a1 -> prod a0 a1) (@I (a0 -> a1 -> prod a0 a1) (@pair a0 a1) y0) y1) = (@I (a1 -> prod a0 a1) (@I (a0 -> a1 -> prod a0 a1) (@pair a0 a1) y2) y3)) \/ ((~ (y0 = y2)) \/ (~ (y1 = y3))).
Definition term1961 (a0 : Type') (a1 : Type') := fun y0 : a0 => forall y1 : a1, forall y2 : a0, forall y3 : a1, (~ ((@I (a1 -> prod a0 a1) (@I (a0 -> a1 -> prod a0 a1) (@pair a0 a1) y0) y1) = (@I (a1 -> prod a0 a1) (@I (a0 -> a1 -> prod a0 a1) (@pair a0 a1) y2) y3))) \/ ((y0 = y2) /\ (y1 = y3)).
Definition term1929 (a0 : Type') (a1 : Type') := fun y0 : a0 => forall y1 : a1, forall y2 : a0, forall y3 : a1, (~ ((@pair a0 a1 y0 y1) = (@pair a0 a1 y2 y3))) \/ ((y0 = y2) /\ (y1 = y3)).
Definition term1928 (a0 : Type') (a1 : Type') := fun y0 : a0 => forall y1 : a1, forall y2 : a0, forall y3 : a1, ((@pair a0 a1 y0 y1) = (@pair a0 a1 y2 y3)) \/ ((~ (y0 = y2)) \/ (~ (y1 = y3))).
Definition term1858 (a0 : Type') (a1 : Type') := fun y0 : a0 => forall y1 : a1, forall y2 : a0, forall y3 : a1, (((@pair a0 a1 y0 y1) = (@pair a0 a1 y2 y3)) \/ ((~ (y0 = y2)) \/ (~ (y1 = y3)))) /\ ((~ ((@pair a0 a1 y0 y1) = (@pair a0 a1 y2 y3))) \/ ((y0 = y2) /\ (y1 = y3))).
Definition term1341 (a0 : Type') (a1 : Type') := fun y0 : a0 => forall y1 : a1, forall y2 : a0, forall y3 : a1, ((@pair a0 a1 y0 y1) = (@pair a0 a1 y2 y3)) = ((y0 = y2) /\ (y1 = y3)).
Definition term1755 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : type619 a0 a1) := fun y0 : type620 a0 a1 => (forall y1 : a0 -> Prop, forall y2 : type1413 a0 a1, forall y3 : prod a0 a1, (x0 y1 y2 y3) \/ (forall y4 : a0, forall y5 : a1, ~ (@SETSPEC (prod a0 a1) y3 ((@IN a0 y4 y1) /\ (@IN a1 y5 (y2 y4))) (@pair a0 a1 y4 y5)))) /\ (forall y1 : a0 -> Prop, forall y2 : type1413 a0 a1, forall y3 : prod a0 a1, (~ (x0 y1 y2 y3)) \/ (@SETSPEC (prod a0 a1) y3 ((@IN a0 (x1 y1 y2 y3) y1) /\ (@IN a1 (y0 y1 y2 y3) (y2 (x1 y1 y2 y3)))) (@pair a0 a1 (x1 y1 y2 y3) (y0 y1 y2 y3)))).
Definition term987 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : type1413 a0 a1) (x2 : a0) (x3 : nat) := and ((x2 = x0) -> @HAS_SIZE a1 (x1 x2) x3).
Definition term1866 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a0) (x2 : a1) (x3 : a1) := (fun y0 : a1 => (~ ((@pair a0 a1 x0 x2) = (@pair a0 a1 x1 y0))) \/ ((x0 = x1) /\ (x2 = y0))) x3.
Definition term1548 (a0 : Type') (a1 : Type') (x0 : prod a0 a1) (x1 : a0 -> Prop) (x2 : type1413 a0 a1) := fun y0 : a0 => (fun y1 : a0 => exists y2 : a1, @SETSPEC (prod a0 a1) x0 ((@IN a0 y1 x1) /\ (@IN a1 y2 (x2 y1))) (@pair a0 a1 y1 y2)) y0.
Definition term524 (x0 : Prop) (x1 : Prop) := (fun y0 : Prop => ((y0 \/ x0) -> x1) = ((y0 -> x1) /\ (x0 -> x1))) False.
Definition term1209 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : prod a0 a1) (x2 : type1413 a0 a1) (x3 : a0) := ~ ((exists y0 : a0, exists y1 : a1, ((@IN a0 y0 x0) /\ (@IN a1 y1 (x2 y0))) /\ (x1 = (@pair a0 a1 y0 y1))) /\ (exists y0 : a1, (x1 = (@pair a0 a1 x3 y0)) /\ (@IN a1 y0 (x2 x3)))).
Definition term553 (a0 : Type') (x0 : a0) (x1 : a0) := forall y0 : a0 -> Prop, (@IN a0 x1 (@INSERT a0 x0 y0)) = ((x1 = x0) \/ (@IN a0 x1 y0)).
Definition term1234 (a0 : Type') (a1 : Type') := (forall y0 : a0, forall y1 : a1, forall y2 : a0, forall y3 : a1, ((@pair a0 a1 y0 y1) = (@pair a0 a1 y2 y3)) = ((y0 = y2) /\ (y1 = y3))) -> (forall y0 : a0, forall y1 : nat, forall y2 : a0, forall y3 : nat, ((@pair a0 nat y0 y1) = (@pair a0 nat y2 y3)) = ((y0 = y2) /\ (y1 = y3))) -> (forall y0 : a0, forall y1 : prod a0 a1, forall y2 : a0, forall y3 : prod a0 a1, ((@pair a0 (prod a0 a1) y0 y1) = (@pair a0 (prod a0 a1) y2 y3)) = ((y0 = y2) /\ (y1 = y3))) -> (forall y0 : nat, forall y1 : a1, forall y2 : nat, forall y3 : a1, ((@pair nat a1 y0 y1) = (@pair nat a1 y2 y3)) = ((y0 = y2) /\ (y1 = y3))) -> (forall y0 : prod a0 a1, forall y1 : a1, forall y2 : prod a0 a1, forall y3 : a1, ((@pair (prod a0 a1) a1 y0 y1) = (@pair (prod a0 a1) a1 y2 y3)) = ((y0 = y2) /\ (y1 = y3))) -> False.
Definition term1726 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) := fun y0 : type619 a0 a1 => exists y1 : type620 a0 a1, forall y2 : a0 -> Prop, forall y3 : type1413 a0 a1, forall y4 : prod a0 a1, (~ (x0 y2 y3 y4)) \/ (@SETSPEC (prod a0 a1) y4 ((@IN a0 (y0 y2 y3 y4) y2) /\ (@IN a1 (y1 y2 y3 y4) (y3 (y0 y2 y3 y4)))) (@pair a0 a1 (y0 y2 y3 y4) (y1 y2 y3 y4))).
Definition term1674 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : a0 -> Prop) := fun y0 : type464 a0 a1 => exists y1 : type465 a0 a1, forall y2 : type1413 a0 a1, forall y3 : prod a0 a1, (~ (x0 x1 y2 y3)) \/ (@SETSPEC (prod a0 a1) y3 ((@IN a0 (y0 y2 y3) x1) /\ (@IN a1 (y1 y2 y3) (y2 (y0 y2 y3)))) (@pair a0 a1 (y0 y2 y3) (y1 y2 y3))).
Definition term141 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : type1470 a0 a1) (x2 : a1) (x3 : a0) (x4 : prod a1 a0) (x5 : prod a1 a0) := ((x0 x2) /\ (x1 x2 x3)) /\ (x4 = x5).
Definition term291 (a0 : Type') (a1 : Type') (x0 : a1) (x1 : a1 -> Prop) (x2 : prod a1 a0) (x3 : type1470 a0 a1) (x4 : a1) := ((fun y0 : a1 => exists y1 : a0, (((y0 = x4) \/ (x1 y0)) /\ (x3 y0 y1)) /\ (x2 = (@pair a1 a0 y0 y1))) x0) /\ ((forall y0 : a1, forall y1 : a0, ((~ (x1 y0)) \/ (~ (x3 y0 y1))) \/ (~ (x2 = (@pair a1 a0 y0 y1)))) /\ (forall y0 : a0, (~ (x2 = (@pair a1 a0 x4 y0))) \/ (~ (x3 x4 y0)))).
Definition term662 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : nat) (x2 : type1413 a0 a1) := ((@CARD a0 x0) = x1) -> (fun y0 : type1413 a0 a1 => forall y1 : nat, (forall y2 : a0, (@IN a0 y2 x0) -> @HAS_SIZE a1 (y0 y2) y1) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y2 : prod a0 a1 => exists y3 : a0, exists y4 : a1, @SETSPEC (prod a0 a1) y2 ((@IN a0 y3 x0) /\ (@IN a1 y4 (y0 y3))) (@pair a0 a1 y3 y4))) (Nat.mul x1 y1)) x2.
Definition term736 (a0 : Type') (a1 : Type') (x0 : type1413 a0 a1) (x1 : nat) (x2 : nat) := @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y0 : prod a0 a1 => exists y1 : a0, exists y2 : a1, @SETSPEC (prod a0 a1) y0 ((@IN a0 y1 (@EMPTY a0)) /\ (@IN a1 y2 (x0 y1))) (@pair a0 a1 y1 y2))) (Nat.mul x1 x2).
Definition term1219 (a0 : Type') (a1 : Type') (x0 : nat) (x1 : nat) (x2 : a0 -> Prop) (x3 : a0) (x4 : a1) (x5 : prod a0 a1) (x6 : a1) (x7 : type1413 a0 a1) (x8 : a0) := ((~ (@IN a0 x8 x2)) -> (@FINITE a0 x2) -> (x0 = (S (@CARD a0 x2))) -> (@HAS_SIZE a1 (x7 x8) x1) -> (forall y0 : a0, (@IN a0 y0 x2) -> @HAS_SIZE a1 (x7 y0) x1) -> (forall y0 : type1413 a0 a1, forall y1 : nat, (forall y2 : a0, (@IN a0 y2 x2) -> @HAS_SIZE a1 (y0 y2) y1) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y2 : prod a0 a1 => exists y3 : a0, exists y4 : a1, @SETSPEC (prod a0 a1) y2 ((@IN a0 y3 x2) /\ (@IN a1 y4 (y0 y3))) (@pair a0 a1 y3 y4))) (Nat.mul (@CARD a0 x2) y1)) -> (@IN a0 x3 x2) -> (@IN a1 x4 (x7 x3)) -> (x5 = (@pair a0 a1 x3 x4)) -> (x5 = (@pair a0 a1 x8 x6)) -> (@IN a1 x6 (x7 x8)) -> (forall y0 : a0, forall y1 : a1, forall y2 : a0, forall y3 : a1, ((@pair a0 a1 y0 y1) = (@pair a0 a1 y2 y3)) = ((y0 = y2) /\ (y1 = y3))) -> (forall y0 : a0, forall y1 : nat, forall y2 : a0, forall y3 : nat, ((@pair a0 nat y0 y1) = (@pair a0 nat y2 y3)) = ((y0 = y2) /\ (y1 = y3))) -> (forall y0 : a0, forall y1 : prod a0 a1, forall y2 : a0, forall y3 : prod a0 a1, ((@pair a0 (prod a0 a1) y0 y1) = (@pair a0 (prod a0 a1) y2 y3)) = ((y0 = y2) /\ (y1 = y3))) -> (forall y0 : nat, forall y1 : a1, forall y2 : nat, forall y3 : a1, ((@pair nat a1 y0 y1) = (@pair nat a1 y2 y3)) = ((y0 = y2) /\ (y1 = y3))) -> (forall y0 : prod a0 a1, forall y1 : a1, forall y2 : prod a0 a1, forall y3 : a1, ((@pair (prod a0 a1) a1 y0 y1) = (@pair (prod a0 a1) a1 y2 y3)) = ((y0 = y2) /\ (y1 = y3))) -> False) -> (~ (@IN a0 x8 x2)) -> (@FINITE a0 x2) -> (x0 = (S (@CARD a0 x2))) -> (@HAS_SIZE a1 (x7 x8) x1) -> (forall y0 : a0, (@IN a0 y0 x2) -> @HAS_SIZE a1 (x7 y0) x1) -> (forall y0 : type1413 a0 a1, forall y1 : nat, (forall y2 : a0, (@IN a0 y2 x2) -> @HAS_SIZE a1 (y0 y2) y1) -> @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y2 : prod a0 a1 => exists y3 : a0, exists y4 : a1, @SETSPEC (prod a0 a1) y2 ((@IN a0 y3 x2) /\ (@IN a1 y4 (y0 y3))) (@pair a0 a1 y3 y4))) (Nat.mul (@CARD a0 x2) y1)) -> (@IN a0 x3 x2) -> (@IN a1 x4 (x7 x3)) -> (x5 = (@pair a0 a1 x3 x4)) -> (x5 = (@pair a0 a1 x8 x6)) -> (@IN a1 x6 (x7 x8)) -> (forall y0 : a0, forall y1 : a1, forall y2 : a0, forall y3 : a1, ((@pair a0 a1 y0 y1) = (@pair a0 a1 y2 y3)) = ((y0 = y2) /\ (y1 = y3))) -> (forall y0 : a0, forall y1 : nat, forall y2 : a0, forall y3 : nat, ((@pair a0 nat y0 y1) = (@pair a0 nat y2 y3)) = ((y0 = y2) /\ (y1 = y3))) -> (forall y0 : a0, forall y1 : prod a0 a1, forall y2 : a0, forall y3 : prod a0 a1, ((@pair a0 (prod a0 a1) y0 y1) = (@pair a0 (prod a0 a1) y2 y3)) = ((y0 = y2) /\ (y1 = y3))) -> (forall y0 : nat, forall y1 : a1, forall y2 : nat, forall y3 : a1, ((@pair nat a1 y0 y1) = (@pair nat a1 y2 y3)) = ((y0 = y2) /\ (y1 = y3))) -> (forall y0 : prod a0 a1, forall y1 : a1, forall y2 : prod a0 a1, forall y3 : a1, ((@pair (prod a0 a1) a1 y0 y1) = (@pair (prod a0 a1) a1 y2 y3)) = ((y0 = y2) /\ (y1 = y3))) -> False.
Definition term0 (a0 : Type') (x0 : a0) := (fun y0 : a0 => ~ (@IN a0 y0 (@EMPTY a0))) x0.
Definition term1420 (a0 : Type') (a1 : Type') (x0 : type1210 a0 a1) := fun y0 : prod a0 a1 => x0 y0.
Definition term1156 (a0 : Type') (a1 : Type') (x0 : type1210 a0 a1) (x1 : prod a0 a1) (x2 : type1210 a0 a1) := (@IN (prod a0 a1) x1 x0) /\ (@IN (prod a0 a1) x1 x2).
Definition term1563 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : prod a0 a1) (x2 : a0 -> Prop) (x3 : type1413 a0 a1) (x4 : a0) (x5 : a1) := (~ (x0 x2 x3 x1)) \/ ((fun y0 : a1 => @SETSPEC (prod a0 a1) x1 ((@IN a0 x4 x2) /\ (@IN a1 y0 (x3 x4))) (@pair a0 a1 x4 y0)) x5).
Definition term780 (a0 : Type') (a1 : Type') (x0 : nat) (x1 : nat) := @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y0 : prod a0 a1 => exists y1 : a0, exists y2 : a1, @SETSPEC (prod a0 a1) y0 False (@pair a0 a1 y1 y2))) (Nat.mul x0 x1).
Definition term520 (x0 : Prop) (x1 : Prop) (x2 : Prop) := @eq Prop ((fun y0 : Prop => ((y0 \/ x0) -> x1) = ((y0 -> x1) /\ (x0 -> x1))) x2).
Definition term1235 (a0 : Type') (a1 : Type') := (forall y0 : a0, forall y1 : a1, forall y2 : a0, forall y3 : a1, ((@pair a0 a1 y0 y1) = (@pair a0 a1 y2 y3)) = ((y0 = y2) /\ (y1 = y3))) -> (forall y0 : a0, forall y1 : nat, forall y2 : a0, forall y3 : nat, ((@pair a0 nat y0 y1) = (@pair a0 nat y2 y3)) = ((y0 = y2) /\ (y1 = y3))) -> (forall y0 : a0, forall y1 : prod a0 a1, forall y2 : a0, forall y3 : prod a0 a1, ((@pair a0 (prod a0 a1) y0 y1) = (@pair a0 (prod a0 a1) y2 y3)) = ((y0 = y2) /\ (y1 = y3))) -> (forall y0 : nat, forall y1 : a1, forall y2 : nat, forall y3 : a1, ((@pair nat a1 y0 y1) = (@pair nat a1 y2 y3)) = ((y0 = y2) /\ (y1 = y3))) -> ~ (forall y0 : prod a0 a1, forall y1 : a1, forall y2 : prod a0 a1, forall y3 : a1, ((@pair (prod a0 a1) a1 y0 y1) = (@pair (prod a0 a1) a1 y2 y3)) = ((y0 = y2) /\ (y1 = y3))).
Definition term77 (a0 : Type') (a1 : Type') (x0 : prod a1 a0) (x1 : a1) (x2 : a1 -> Prop) (x3 : a0) (x4 : type1470 a0 a1) (x5 : a1) := @eq ((prod a1 a0) -> Prop) ((fun y0 : Prop => (fun y1 : Prop => fun y2 : prod a1 a0 => y1 /\ (x0 = y2)) y0) (((x5 = x1) \/ (@IN a1 x5 x2)) /\ (@IN a0 x3 (x4 x5)))).
Definition term1846 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a0) (x2 : a1) (x3 : a1) := ((@pair a0 a1 x0 x2) = (@pair a0 a1 x1 x3)) \/ (~ ((x0 = x1) /\ (x2 = x3))).
Definition term1467 (a0 : Type') (a1 : Type') (x0 : type621 a0 a1) (x1 : a0 -> Prop) (x2 : type1413 a0 a1) := fun y0 : prod a0 a1 => ((x0 x1 x2 y0) \/ (forall y1 : a0, forall y2 : a1, ~ (@SETSPEC (prod a0 a1) y0 ((@IN a0 y1 x1) /\ (@IN a1 y2 (x2 y1))) (@pair a0 a1 y1 y2)))) /\ ((~ (x0 x1 x2 y0)) \/ (exists y1 : a0, exists y2 : a1, @SETSPEC (prod a0 a1) y0 ((@IN a0 y1 x1) /\ (@IN a1 y2 (x2 y1))) (@pair a0 a1 y1 y2))).
Definition term919 (a0 : Type') (a1 : Type') := @HAS_SIZE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y0 : prod a0 a1 => exists y1 : a0, exists y2 : a1, @SETSPEC (prod a0 a1) y0 False (@pair a0 a1 y1 y2))) (NUMERAL 0).
Definition term967 (a0 : Type') (a1 : Type') := forall y0 : prod a0 a1, True.
Definition term1992 (a0 : Type') (a1 : Type') (x0 : prod a0 a1) (x1 : a0) (x2 : a1) := @eq Prop (x0 = (@I (a1 -> prod a0 a1) (@I (a0 -> a1 -> prod a0 a1) (@pair a0 a1) x1) x2)).
Definition term486 (a0 : Type') (a1 : Type') (x0 : type1470 a0 a1) (x1 : a1) (x2 : a0) := (x0 x1 x2) /\ ((@pair a1 a0 x1 x2) = (@pair a1 a0 x1 x2)).
Definition term403 (a0 : Type') (a1 : Type') (x0 : a1) (x1 : a1 -> Prop) (x2 : prod a1 a0) (x3 : type1470 a0 a1) (x4 : a1) := fun y0 : a0 => (fun y1 : a0 => ((((x0 = x4) \/ (x1 x0)) /\ (x3 x0 y1)) /\ (x2 = (@pair a1 a0 x0 y1))) /\ ((forall y2 : a1, forall y3 : a0, ((~ (x1 y2)) \/ (~ (x3 y2 y3))) \/ (~ (x2 = (@pair a1 a0 y2 y3)))) /\ (forall y2 : a0, (~ (x2 = (@pair a1 a0 x4 y2))) \/ (~ (x3 x4 y2))))) y0.
Definition term582 (a0 : Type') (a1 : Type') (x0 : nat) (x1 : a0 -> Prop) (x2 : type1413 a0 a1) (x3 : nat) := (@HAS_SIZE a0 x1 x0) /\ (forall y0 : a0, (@IN a0 y0 x1) -> @HAS_SIZE a1 (x2 y0) x3).
Definition term410 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : a1) (x2 : prod a1 a0) (x3 : type1470 a0 a1) (x4 : a1) := @eq Prop ((exists y0 : a0, ((((x1 = x4) \/ (x0 x1)) /\ (x3 x1 y0)) /\ (x2 = (@pair a1 a0 x1 y0))) /\ ((forall y1 : a1, forall y2 : a0, ((~ (x0 y1)) \/ (~ (x3 y1 y2))) \/ (~ (x2 = (@pair a1 a0 y1 y2)))) /\ (forall y1 : a0, (~ (x2 = (@pair a1 a0 x4 y1))) \/ (~ (x3 x4 y1))))) \/ (exists y0 : a0, (forall y1 : a1, forall y2 : a0, (((~ (y1 = x4)) /\ (~ (x0 y1))) \/ (~ (x3 y1 y2))) \/ (~ (x2 = (@pair a1 a0 y1 y2)))) /\ ((((x0 x1) /\ (x3 x1 y0)) /\ (x2 = (@pair a1 a0 x1 y0))) \/ ((x2 = (@pair a1 a0 x4 y0)) /\ (x3 x4 y0))))).
Definition term409 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : a1) (x2 : prod a1 a0) (x3 : type1470 a0 a1) (x4 : a1) := @eq Prop ((exists y0 : a0, (fun y1 : a0 => ((((x1 = x4) \/ (x0 x1)) /\ (x3 x1 y1)) /\ (x2 = (@pair a1 a0 x1 y1))) /\ ((forall y2 : a1, forall y3 : a0, ((~ (x0 y2)) \/ (~ (x3 y2 y3))) \/ (~ (x2 = (@pair a1 a0 y2 y3)))) /\ (forall y2 : a0, (~ (x2 = (@pair a1 a0 x4 y2))) \/ (~ (x3 x4 y2))))) y0) \/ (exists y0 : a0, (fun y1 : a0 => (forall y2 : a1, forall y3 : a0, (((~ (y2 = x4)) /\ (~ (x0 y2))) \/ (~ (x3 y2 y3))) \/ (~ (x2 = (@pair a1 a0 y2 y3)))) /\ ((((x0 x1) /\ (x3 x1 y1)) /\ (x2 = (@pair a1 a0 x1 y1))) \/ ((x2 = (@pair a1 a0 x4 y1)) /\ (x3 x4 y1)))) y0)).
Definition term392 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : prod a1 a0) (x2 : type1470 a0 a1) (x3 : a1) := @eq Prop ((exists y0 : a1, exists y1 : a0, ((((y0 = x3) \/ (x0 y0)) /\ (x2 y0 y1)) /\ (x1 = (@pair a1 a0 y0 y1))) /\ ((forall y2 : a1, forall y3 : a0, ((~ (x0 y2)) \/ (~ (x2 y2 y3))) \/ (~ (x1 = (@pair a1 a0 y2 y3)))) /\ (forall y2 : a0, (~ (x1 = (@pair a1 a0 x3 y2))) \/ (~ (x2 x3 y2))))) \/ (exists y0 : a1, exists y1 : a0, (forall y2 : a1, forall y3 : a0, (((~ (y2 = x3)) /\ (~ (x0 y2))) \/ (~ (x2 y2 y3))) \/ (~ (x1 = (@pair a1 a0 y2 y3)))) /\ ((((x0 y0) /\ (x2 y0 y1)) /\ (x1 = (@pair a1 a0 y0 y1))) \/ ((x1 = (@pair a1 a0 x3 y1)) /\ (x2 x3 y1))))).
Definition term391 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : prod a1 a0) (x2 : type1470 a0 a1) (x3 : a1) := @eq Prop ((exists y0 : a1, (fun y1 : a1 => exists y2 : a0, ((((y1 = x3) \/ (x0 y1)) /\ (x2 y1 y2)) /\ (x1 = (@pair a1 a0 y1 y2))) /\ ((forall y3 : a1, forall y4 : a0, ((~ (x0 y3)) \/ (~ (x2 y3 y4))) \/ (~ (x1 = (@pair a1 a0 y3 y4)))) /\ (forall y3 : a0, (~ (x1 = (@pair a1 a0 x3 y3))) \/ (~ (x2 x3 y3))))) y0) \/ (exists y0 : a1, (fun y1 : a1 => exists y2 : a0, (forall y3 : a1, forall y4 : a0, (((~ (y3 = x3)) /\ (~ (x0 y3))) \/ (~ (x2 y3 y4))) \/ (~ (x1 = (@pair a1 a0 y3 y4)))) /\ ((((x0 y1) /\ (x2 y1 y2)) /\ (x1 = (@pair a1 a0 y1 y2))) \/ ((x1 = (@pair a1 a0 x3 y2)) /\ (x2 x3 y2)))) y0)).
Definition term339 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : a1) (x2 : prod a1 a0) (x3 : type1470 a0 a1) (x4 : a1) := @eq Prop ((exists y0 : a0, ((x0 x1) /\ (x3 x1 y0)) /\ (x2 = (@pair a1 a0 x1 y0))) \/ (exists y0 : a0, (x2 = (@pair a1 a0 x4 y0)) /\ (x3 x4 y0))).
Definition term338 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : a1) (x2 : prod a1 a0) (x3 : type1470 a0 a1) (x4 : a1) := @eq Prop ((exists y0 : a0, (fun y1 : a0 => ((x0 x1) /\ (x3 x1 y1)) /\ (x2 = (@pair a1 a0 x1 y1))) y0) \/ (exists y0 : a0, (fun y1 : a0 => (x2 = (@pair a1 a0 x4 y1)) /\ (x3 x4 y1)) y0)).
Definition term321 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : prod a1 a0) (x2 : type1470 a0 a1) (x3 : a1) := @eq Prop ((exists y0 : a1, exists y1 : a0, ((x0 y0) /\ (x2 y0 y1)) /\ (x1 = (@pair a1 a0 y0 y1))) \/ (exists y0 : a0, (x1 = (@pair a1 a0 x3 y0)) /\ (x2 x3 y0))).
Definition term320 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : prod a1 a0) (x2 : type1470 a0 a1) (x3 : a1) := @eq Prop ((exists y0 : a1, (fun y1 : a1 => exists y2 : a0, ((x0 y1) /\ (x2 y1 y2)) /\ (x1 = (@pair a1 a0 y1 y2))) y0) \/ (exists y0 : a0, (x1 = (@pair a1 a0 x3 y0)) /\ (x2 x3 y0))).
Definition term546 (a0 : Type') (x0 : a0 -> Prop) := @HAS_SIZE a0 x0 (NUMERAL 0).
