require open hol-light.theory_hol;
require open hol-light.hol_types;
require open hol-light.hol_type_abbrevs;
require open hol-light.hol_terms;
symbol term27 a0 a1 (x0: El (prod a1 a0)) (x1: El a1) ≔ ((λ y0 : El a1, (∀ (λ y1 : El (type1641 a0 a1), (= ((@ASSOC a0 a1) y0 ((@CONS (prod a1 a0)) x0 y1)) ((@COND a0) (= ((@FST a1 a0) x0) y0) ((@SND a1 a0) x0) ((@ASSOC a0 a1) y0 y1)))))) x1);
symbol term8 a0 a1 (x0: El a1) (x1: El (prod a1 a0)) (x2: El (type1641 a0 a1)) ≔ ((@ASSOC a0 a1) x0 ((@CONS (prod a1 a0)) x1 x2));
symbol term9 a0 a1 (x0: El a1) (x1: El (prod a1 a0)) (x2: El (type1641 a0 a1)) ≔ ((@= a0) ((@ε (fun (prod num (prod num (prod num (prod num num)))) (fun a1 (fun (list (prod a1 a0)) a0)))) (λ y0 : El (type1276 a0 a1), (∀ (λ y1 : El type1672, (∀ (λ y2 : El (prod a1 a0), (∀ (λ y3 : El a1, (∀ (λ y4 : El (type1641 a0 a1), (= (y0 y1 y3 ((@CONS (prod a1 a0)) y2 y4)) ((@COND a0) (= ((@FST a1 a0) y2) y3) ((@SND a1 a0) y2) (y0 y1 y3 y4)))))))))))) ((@̦‚ num (prod num (prod num (prod num num)))) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num num))) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num num)) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 _0)))))))) ((@̦‚ num num) (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))))))) x0 ((@CONS (prod a1 a0)) x1 x2)));
symbol term26 a0 a1 (x0: El (prod a1 a0)) ≔ ((λ y0 : El (prod a1 a0), (∀ (λ y1 : El a1, (∀ (λ y2 : El (type1641 a0 a1), (= ((@ASSOC a0 a1) y1 ((@CONS (prod a1 a0)) y0 y2)) ((@COND a0) (= ((@FST a1 a0) y0) y1) ((@SND a1 a0) y0) ((@ASSOC a0 a1) y1 y2)))))))) x0);
symbol term14 a0 a1 (x0: El (prod a1 a0)) (x1: El a1) (x2: El (type1641 a0 a1)) ≔ ((@COND a0) (= ((@FST a1 a0) x0) x1) ((@SND a1 a0) x0) ((@ASSOC a0 a1) x1 x2));
symbol term20 a0 a1 (x0: El (prod a1 a0)) ≔ (λ y0 : El a1, (∀ (λ y1 : El (type1641 a0 a1), (= ((@ASSOC a0 a1) y0 ((@CONS (prod a1 a0)) x0 y1)) ((@COND a0) (= ((@FST a1 a0) x0) y0) ((@SND a1 a0) x0) ((@ASSOC a0 a1) y0 y1))))));
symbol term19 a0 a1 (x0: El (prod a1 a0)) ≔ (λ y0 : El a1, (∀ (λ y1 : El (type1641 a0 a1), (= ((@ε (fun (prod num (prod num (prod num (prod num num)))) (fun a1 (fun (list (prod a1 a0)) a0)))) (λ y2 : El (type1276 a0 a1), (∀ (λ y3 : El type1672, (∀ (λ y4 : El (prod a1 a0), (∀ (λ y5 : El a1, (∀ (λ y6 : El (type1641 a0 a1), (= (y2 y3 y5 ((@CONS (prod a1 a0)) y4 y6)) ((@COND a0) (= ((@FST a1 a0) y4) y5) ((@SND a1 a0) y4) (y2 y3 y5 y6)))))))))))) ((@̦‚ num (prod num (prod num (prod num num)))) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num num))) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num num)) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 _0)))))))) ((@̦‚ num num) (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))))))) y0 ((@CONS (prod a1 a0)) x0 y1)) ((@COND a0) (= ((@FST a1 a0) x0) y0) ((@SND a1 a0) x0) ((@ε (fun (prod num (prod num (prod num (prod num num)))) (fun a1 (fun (list (prod a1 a0)) a0)))) (λ y2 : El (type1276 a0 a1), (∀ (λ y3 : El type1672, (∀ (λ y4 : El (prod a1 a0), (∀ (λ y5 : El a1, (∀ (λ y6 : El (type1641 a0 a1), (= (y2 y3 y5 ((@CONS (prod a1 a0)) y4 y6)) ((@COND a0) (= ((@FST a1 a0) y4) y5) ((@SND a1 a0) y4) (y2 y3 y5 y6)))))))))))) ((@̦‚ num (prod num (prod num (prod num num)))) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num num))) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num num)) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 _0)))))))) ((@̦‚ num num) (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))))))) y0 y1))))));
symbol term1 a0 a1 ≔ (∀ (λ y0 : El type1672, (∀ (λ y1 : El (prod a1 a0), (∀ (λ y2 : El a1, (∀ (λ y3 : El (type1641 a0 a1), (= ((@ε (fun (prod num (prod num (prod num (prod num num)))) (fun a1 (fun (list (prod a1 a0)) a0)))) (λ y4 : El (type1276 a0 a1), (∀ (λ y5 : El type1672, (∀ (λ y6 : El (prod a1 a0), (∀ (λ y7 : El a1, (∀ (λ y8 : El (type1641 a0 a1), (= (y4 y5 y7 ((@CONS (prod a1 a0)) y6 y8)) ((@COND a0) (= ((@FST a1 a0) y6) y7) ((@SND a1 a0) y6) (y4 y5 y7 y8)))))))))))) y0 y2 ((@CONS (prod a1 a0)) y1 y3)) ((@COND a0) (= ((@FST a1 a0) y1) y2) ((@SND a1 a0) y1) ((@ε (fun (prod num (prod num (prod num (prod num num)))) (fun a1 (fun (list (prod a1 a0)) a0)))) (λ y4 : El (type1276 a0 a1), (∀ (λ y5 : El type1672, (∀ (λ y6 : El (prod a1 a0), (∀ (λ y7 : El a1, (∀ (λ y8 : El (type1641 a0 a1), (= (y4 y5 y7 ((@CONS (prod a1 a0)) y6 y8)) ((@COND a0) (= ((@FST a1 a0) y6) y7) ((@SND a1 a0) y6) (y4 y5 y7 y8)))))))))))) y0 y2 y3)))))))))));
symbol term0 a0 a1 ≔ ((λ y0 : El (type1276 a0 a1), (∀ (λ y1 : El type1672, (∀ (λ y2 : El (prod a1 a0), (∀ (λ y3 : El a1, (∀ (λ y4 : El (type1641 a0 a1), (= (y0 y1 y3 ((@CONS (prod a1 a0)) y2 y4)) ((@COND a0) (= ((@FST a1 a0) y2) y3) ((@SND a1 a0) y2) (y0 y1 y3 y4)))))))))))) ((@ε (fun (prod num (prod num (prod num (prod num num)))) (fun a1 (fun (list (prod a1 a0)) a0)))) (λ y0 : El (type1276 a0 a1), (∀ (λ y1 : El type1672, (∀ (λ y2 : El (prod a1 a0), (∀ (λ y3 : El a1, (∀ (λ y4 : El (type1641 a0 a1), (= (y0 y1 y3 ((@CONS (prod a1 a0)) y2 y4)) ((@COND a0) (= ((@FST a1 a0) y2) y3) ((@SND a1 a0) y2) (y0 y1 y3 y4))))))))))))));
symbol term22 a0 a1 (x0: El (prod a1 a0)) ≔ (∀ (λ y0 : El a1, (∀ (λ y1 : El (type1641 a0 a1), (= ((@ASSOC a0 a1) y0 ((@CONS (prod a1 a0)) x0 y1)) ((@COND a0) (= ((@FST a1 a0) x0) y0) ((@SND a1 a0) x0) ((@ASSOC a0 a1) y0 y1)))))));
symbol term21 a0 a1 (x0: El (prod a1 a0)) ≔ (∀ (λ y0 : El a1, (∀ (λ y1 : El (type1641 a0 a1), (= ((@ε (fun (prod num (prod num (prod num (prod num num)))) (fun a1 (fun (list (prod a1 a0)) a0)))) (λ y2 : El (type1276 a0 a1), (∀ (λ y3 : El type1672, (∀ (λ y4 : El (prod a1 a0), (∀ (λ y5 : El a1, (∀ (λ y6 : El (type1641 a0 a1), (= (y2 y3 y5 ((@CONS (prod a1 a0)) y4 y6)) ((@COND a0) (= ((@FST a1 a0) y4) y5) ((@SND a1 a0) y4) (y2 y3 y5 y6)))))))))))) ((@̦‚ num (prod num (prod num (prod num num)))) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num num))) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num num)) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 _0)))))))) ((@̦‚ num num) (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))))))) y0 ((@CONS (prod a1 a0)) x0 y1)) ((@COND a0) (= ((@FST a1 a0) x0) y0) ((@SND a1 a0) x0) ((@ε (fun (prod num (prod num (prod num (prod num num)))) (fun a1 (fun (list (prod a1 a0)) a0)))) (λ y2 : El (type1276 a0 a1), (∀ (λ y3 : El type1672, (∀ (λ y4 : El (prod a1 a0), (∀ (λ y5 : El a1, (∀ (λ y6 : El (type1641 a0 a1), (= (y2 y3 y5 ((@CONS (prod a1 a0)) y4 y6)) ((@COND a0) (= ((@FST a1 a0) y4) y5) ((@SND a1 a0) y4) (y2 y3 y5 y6)))))))))))) ((@̦‚ num (prod num (prod num (prod num num)))) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num num))) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num num)) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 _0)))))))) ((@̦‚ num num) (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))))))) y0 y1)))))));
symbol term16 a0 a1 (x0: El (prod a1 a0)) (x1: El a1) ≔ (λ y0 : El (type1641 a0 a1), (= ((@ASSOC a0 a1) x1 ((@CONS (prod a1 a0)) x0 y0)) ((@COND a0) (= ((@FST a1 a0) x0) x1) ((@SND a1 a0) x0) ((@ASSOC a0 a1) x1 y0))));
symbol term3 ≔ ((@̦‚ num (prod num (prod num (prod num num)))) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num num))) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num num)) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 _0)))))))) ((@̦‚ num num) (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 _0))))))))))));
symbol term2 a0 a1 ≔ ((λ y0 : El type1672, (∀ (λ y1 : El (prod a1 a0), (∀ (λ y2 : El a1, (∀ (λ y3 : El (type1641 a0 a1), (= ((@ε (fun (prod num (prod num (prod num (prod num num)))) (fun a1 (fun (list (prod a1 a0)) a0)))) (λ y4 : El (type1276 a0 a1), (∀ (λ y5 : El type1672, (∀ (λ y6 : El (prod a1 a0), (∀ (λ y7 : El a1, (∀ (λ y8 : El (type1641 a0 a1), (= (y4 y5 y7 ((@CONS (prod a1 a0)) y6 y8)) ((@COND a0) (= ((@FST a1 a0) y6) y7) ((@SND a1 a0) y6) (y4 y5 y7 y8)))))))))))) y0 y2 ((@CONS (prod a1 a0)) y1 y3)) ((@COND a0) (= ((@FST a1 a0) y1) y2) ((@SND a1 a0) y1) ((@ε (fun (prod num (prod num (prod num (prod num num)))) (fun a1 (fun (list (prod a1 a0)) a0)))) (λ y4 : El (type1276 a0 a1), (∀ (λ y5 : El type1672, (∀ (λ y6 : El (prod a1 a0), (∀ (λ y7 : El a1, (∀ (λ y8 : El (type1641 a0 a1), (= (y4 y5 y7 ((@CONS (prod a1 a0)) y6 y8)) ((@COND a0) (= ((@FST a1 a0) y6) y7) ((@SND a1 a0) y6) (y4 y5 y7 y8)))))))))))) y0 y2 y3)))))))))) ((@̦‚ num (prod num (prod num (prod num num)))) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num num))) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num num)) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 _0)))))))) ((@̦‚ num num) (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))))))));
symbol term25 a0 a1 ≔ (∀ (λ y0 : El (prod a1 a0), (∀ (λ y1 : El a1, (∀ (λ y2 : El (type1641 a0 a1), (= ((@ASSOC a0 a1) y1 ((@CONS (prod a1 a0)) y0 y2)) ((@COND a0) (= ((@FST a1 a0) y0) y1) ((@SND a1 a0) y0) ((@ASSOC a0 a1) y1 y2)))))))));
symbol term4 a0 a1 ≔ (∀ (λ y0 : El (prod a1 a0), (∀ (λ y1 : El a1, (∀ (λ y2 : El (type1641 a0 a1), (= ((@ε (fun (prod num (prod num (prod num (prod num num)))) (fun a1 (fun (list (prod a1 a0)) a0)))) (λ y3 : El (type1276 a0 a1), (∀ (λ y4 : El type1672, (∀ (λ y5 : El (prod a1 a0), (∀ (λ y6 : El a1, (∀ (λ y7 : El (type1641 a0 a1), (= (y3 y4 y6 ((@CONS (prod a1 a0)) y5 y7)) ((@COND a0) (= ((@FST a1 a0) y5) y6) ((@SND a1 a0) y5) (y3 y4 y6 y7)))))))))))) ((@̦‚ num (prod num (prod num (prod num num)))) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num num))) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num num)) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 _0)))))))) ((@̦‚ num num) (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))))))) y1 ((@CONS (prod a1 a0)) y0 y2)) ((@COND a0) (= ((@FST a1 a0) y0) y1) ((@SND a1 a0) y0) ((@ε (fun (prod num (prod num (prod num (prod num num)))) (fun a1 (fun (list (prod a1 a0)) a0)))) (λ y3 : El (type1276 a0 a1), (∀ (λ y4 : El type1672, (∀ (λ y5 : El (prod a1 a0), (∀ (λ y6 : El a1, (∀ (λ y7 : El (type1641 a0 a1), (= (y3 y4 y6 ((@CONS (prod a1 a0)) y5 y7)) ((@COND a0) (= ((@FST a1 a0) y5) y6) ((@SND a1 a0) y5) (y3 y4 y6 y7)))))))))))) ((@̦‚ num (prod num (prod num (prod num num)))) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num num))) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num num)) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 _0)))))))) ((@̦‚ num num) (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))))))) y1 y2)))))))));
symbol term6 a0 a1 (x0: El a1) ≔ ((@ε (fun (prod num (prod num (prod num (prod num num)))) (fun a1 (fun (list (prod a1 a0)) a0)))) (λ y0 : El (type1276 a0 a1), (∀ (λ y1 : El type1672, (∀ (λ y2 : El (prod a1 a0), (∀ (λ y3 : El a1, (∀ (λ y4 : El (type1641 a0 a1), (= (y0 y1 y3 ((@CONS (prod a1 a0)) y2 y4)) ((@COND a0) (= ((@FST a1 a0) y2) y3) ((@SND a1 a0) y2) (y0 y1 y3 y4)))))))))))) ((@̦‚ num (prod num (prod num (prod num num)))) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num num))) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num num)) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 _0)))))))) ((@̦‚ num num) (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))))))) x0);
symbol term13 a0 a1 (x0: El (prod a1 a0)) (x1: El a1) (x2: El (type1641 a0 a1)) ≔ ((@COND a0) (= ((@FST a1 a0) x0) x1) ((@SND a1 a0) x0) ((@ε (fun (prod num (prod num (prod num (prod num num)))) (fun a1 (fun (list (prod a1 a0)) a0)))) (λ y0 : El (type1276 a0 a1), (∀ (λ y1 : El type1672, (∀ (λ y2 : El (prod a1 a0), (∀ (λ y3 : El a1, (∀ (λ y4 : El (type1641 a0 a1), (= (y0 y1 y3 ((@CONS (prod a1 a0)) y2 y4)) ((@COND a0) (= ((@FST a1 a0) y2) y3) ((@SND a1 a0) y2) (y0 y1 y3 y4)))))))))))) ((@̦‚ num (prod num (prod num (prod num num)))) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num num))) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num num)) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 _0)))))))) ((@̦‚ num num) (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))))))) x1 x2));
symbol term24 a0 a1 ≔ (λ y0 : El (prod a1 a0), (∀ (λ y1 : El a1, (∀ (λ y2 : El (type1641 a0 a1), (= ((@ASSOC a0 a1) y1 ((@CONS (prod a1 a0)) y0 y2)) ((@COND a0) (= ((@FST a1 a0) y0) y1) ((@SND a1 a0) y0) ((@ASSOC a0 a1) y1 y2))))))));
symbol term23 a0 a1 ≔ (λ y0 : El (prod a1 a0), (∀ (λ y1 : El a1, (∀ (λ y2 : El (type1641 a0 a1), (= ((@ε (fun (prod num (prod num (prod num (prod num num)))) (fun a1 (fun (list (prod a1 a0)) a0)))) (λ y3 : El (type1276 a0 a1), (∀ (λ y4 : El type1672, (∀ (λ y5 : El (prod a1 a0), (∀ (λ y6 : El a1, (∀ (λ y7 : El (type1641 a0 a1), (= (y3 y4 y6 ((@CONS (prod a1 a0)) y5 y7)) ((@COND a0) (= ((@FST a1 a0) y5) y6) ((@SND a1 a0) y5) (y3 y4 y6 y7)))))))))))) ((@̦‚ num (prod num (prod num (prod num num)))) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num num))) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num num)) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 _0)))))))) ((@̦‚ num num) (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))))))) y1 ((@CONS (prod a1 a0)) y0 y2)) ((@COND a0) (= ((@FST a1 a0) y0) y1) ((@SND a1 a0) y0) ((@ε (fun (prod num (prod num (prod num (prod num num)))) (fun a1 (fun (list (prod a1 a0)) a0)))) (λ y3 : El (type1276 a0 a1), (∀ (λ y4 : El type1672, (∀ (λ y5 : El (prod a1 a0), (∀ (λ y6 : El a1, (∀ (λ y7 : El (type1641 a0 a1), (= (y3 y4 y6 ((@CONS (prod a1 a0)) y5 y7)) ((@COND a0) (= ((@FST a1 a0) y5) y6) ((@SND a1 a0) y5) (y3 y4 y6 y7)))))))))))) ((@̦‚ num (prod num (prod num (prod num num)))) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num num))) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num num)) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 _0)))))))) ((@̦‚ num num) (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))))))) y1 y2))))))));
symbol term18 a0 a1 (x0: El (prod a1 a0)) (x1: El a1) ≔ (∀ (λ y0 : El (type1641 a0 a1), (= ((@ASSOC a0 a1) x1 ((@CONS (prod a1 a0)) x0 y0)) ((@COND a0) (= ((@FST a1 a0) x0) x1) ((@SND a1 a0) x0) ((@ASSOC a0 a1) x1 y0)))));
symbol term17 a0 a1 (x0: El (prod a1 a0)) (x1: El a1) ≔ (∀ (λ y0 : El (type1641 a0 a1), (= ((@ε (fun (prod num (prod num (prod num (prod num num)))) (fun a1 (fun (list (prod a1 a0)) a0)))) (λ y1 : El (type1276 a0 a1), (∀ (λ y2 : El type1672, (∀ (λ y3 : El (prod a1 a0), (∀ (λ y4 : El a1, (∀ (λ y5 : El (type1641 a0 a1), (= (y1 y2 y4 ((@CONS (prod a1 a0)) y3 y5)) ((@COND a0) (= ((@FST a1 a0) y3) y4) ((@SND a1 a0) y3) (y1 y2 y4 y5)))))))))))) ((@̦‚ num (prod num (prod num (prod num num)))) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num num))) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num num)) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 _0)))))))) ((@̦‚ num num) (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))))))) x1 ((@CONS (prod a1 a0)) x0 y0)) ((@COND a0) (= ((@FST a1 a0) x0) x1) ((@SND a1 a0) x0) ((@ε (fun (prod num (prod num (prod num (prod num num)))) (fun a1 (fun (list (prod a1 a0)) a0)))) (λ y1 : El (type1276 a0 a1), (∀ (λ y2 : El type1672, (∀ (λ y3 : El (prod a1 a0), (∀ (λ y4 : El a1, (∀ (λ y5 : El (type1641 a0 a1), (= (y1 y2 y4 ((@CONS (prod a1 a0)) y3 y5)) ((@COND a0) (= ((@FST a1 a0) y3) y4) ((@SND a1 a0) y3) (y1 y2 y4 y5)))))))))))) ((@̦‚ num (prod num (prod num (prod num num)))) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num num))) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num num)) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 _0)))))))) ((@̦‚ num num) (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))))))) x1 y0)))));
symbol term10 a0 a1 (x0: El a1) (x1: El (prod a1 a0)) (x2: El (type1641 a0 a1)) ≔ ((@= a0) ((@ASSOC a0 a1) x0 ((@CONS (prod a1 a0)) x1 x2)));
symbol term15 a0 a1 (x0: El (prod a1 a0)) (x1: El a1) ≔ (λ y0 : El (type1641 a0 a1), (= ((@ε (fun (prod num (prod num (prod num (prod num num)))) (fun a1 (fun (list (prod a1 a0)) a0)))) (λ y1 : El (type1276 a0 a1), (∀ (λ y2 : El type1672, (∀ (λ y3 : El (prod a1 a0), (∀ (λ y4 : El a1, (∀ (λ y5 : El (type1641 a0 a1), (= (y1 y2 y4 ((@CONS (prod a1 a0)) y3 y5)) ((@COND a0) (= ((@FST a1 a0) y3) y4) ((@SND a1 a0) y3) (y1 y2 y4 y5)))))))))))) ((@̦‚ num (prod num (prod num (prod num num)))) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num num))) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num num)) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 _0)))))))) ((@̦‚ num num) (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))))))) x1 ((@CONS (prod a1 a0)) x0 y0)) ((@COND a0) (= ((@FST a1 a0) x0) x1) ((@SND a1 a0) x0) ((@ε (fun (prod num (prod num (prod num (prod num num)))) (fun a1 (fun (list (prod a1 a0)) a0)))) (λ y1 : El (type1276 a0 a1), (∀ (λ y2 : El type1672, (∀ (λ y3 : El (prod a1 a0), (∀ (λ y4 : El a1, (∀ (λ y5 : El (type1641 a0 a1), (= (y1 y2 y4 ((@CONS (prod a1 a0)) y3 y5)) ((@COND a0) (= ((@FST a1 a0) y3) y4) ((@SND a1 a0) y3) (y1 y2 y4 y5)))))))))))) ((@̦‚ num (prod num (prod num (prod num num)))) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num num))) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num num)) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 _0)))))))) ((@̦‚ num num) (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))))))) x1 y0))));
symbol term5 a0 a1 ≔ ((@ε (fun (prod num (prod num (prod num (prod num num)))) (fun a1 (fun (list (prod a1 a0)) a0)))) (λ y0 : El (type1276 a0 a1), (∀ (λ y1 : El type1672, (∀ (λ y2 : El (prod a1 a0), (∀ (λ y3 : El a1, (∀ (λ y4 : El (type1641 a0 a1), (= (y0 y1 y3 ((@CONS (prod a1 a0)) y2 y4)) ((@COND a0) (= ((@FST a1 a0) y2) y3) ((@SND a1 a0) y2) (y0 y1 y3 y4)))))))))))) ((@̦‚ num (prod num (prod num (prod num num)))) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num num))) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num num)) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 _0)))))))) ((@̦‚ num num) (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))))))));
symbol term11 a0 a1 (x0: El a1) (x1: El (type1641 a0 a1)) ≔ ((@ε (fun (prod num (prod num (prod num (prod num num)))) (fun a1 (fun (list (prod a1 a0)) a0)))) (λ y0 : El (type1276 a0 a1), (∀ (λ y1 : El type1672, (∀ (λ y2 : El (prod a1 a0), (∀ (λ y3 : El a1, (∀ (λ y4 : El (type1641 a0 a1), (= (y0 y1 y3 ((@CONS (prod a1 a0)) y2 y4)) ((@COND a0) (= ((@FST a1 a0) y2) y3) ((@SND a1 a0) y2) (y0 y1 y3 y4)))))))))))) ((@̦‚ num (prod num (prod num (prod num num)))) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num num))) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num num)) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 _0)))))))) ((@̦‚ num num) (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))))))) x0 x1);
symbol term12 a0 a1 (x0: El a1) (x1: El (prod a1 a0)) ≔ ((@COND a0) (= ((@FST a1 a0) x1) x0) ((@SND a1 a0) x1));
symbol term7 a0 a1 (x0: El a1) (x1: El (prod a1 a0)) (x2: El (type1641 a0 a1)) ≔ ((@ε (fun (prod num (prod num (prod num (prod num num)))) (fun a1 (fun (list (prod a1 a0)) a0)))) (λ y0 : El (type1276 a0 a1), (∀ (λ y1 : El type1672, (∀ (λ y2 : El (prod a1 a0), (∀ (λ y3 : El a1, (∀ (λ y4 : El (type1641 a0 a1), (= (y0 y1 y3 ((@CONS (prod a1 a0)) y2 y4)) ((@COND a0) (= ((@FST a1 a0) y2) y3) ((@SND a1 a0) y2) (y0 y1 y3 y4)))))))))))) ((@̦‚ num (prod num (prod num (prod num num)))) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num num))) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num num)) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 _0)))))))) ((@̦‚ num num) (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))))))) x0 ((@CONS (prod a1 a0)) x1 x2));
symbol term28 a0 a1 (x0: El (prod a1 a0)) (x1: El a1) (x2: El (type1641 a0 a1)) ≔ ((λ y0 : El (type1641 a0 a1), (= ((@ASSOC a0 a1) x1 ((@CONS (prod a1 a0)) x0 y0)) ((@COND a0) (= ((@FST a1 a0) x0) x1) ((@SND a1 a0) x0) ((@ASSOC a0 a1) x1 y0)))) x2);
